
cde23d9a2fd54a7c5861d078fbd71db2cb0e76c1c454974c4f5c275e9984027c.exe:     file format pei-i386


Disassembly of section .text:

00010600 <.text>:
   10600:	add    BYTE PTR [eax],al
   10602:	add    BYTE PTR [eax],al
   10604:	add    BYTE PTR [eax],al
   10606:	mov    edi,edi
   10608:	push   ebp
   10609:	mov    ebp,esp
   1060b:	mov    eax,DWORD PTR [ebp+0xc]
   1060e:	xor    eax,DWORD PTR [ebp+0x10]
   10611:	mov    ecx,DWORD PTR [ebp+0x10]
   10614:	and    eax,0x7ffffffe
   10619:	xor    eax,DWORD PTR [ebp+0xc]
   1061c:	and    cl,0x1
   1061f:	movzx  ecx,cl
   10622:	shr    eax,1
   10624:	neg    ecx
   10626:	sbb    ecx,ecx
   10628:	and    ecx,0x9908b0df
   1062e:	xor    eax,ecx
   10630:	xor    eax,DWORD PTR [ebp+0x8]
   10633:	pop    ebp
   10634:	ret    0xc
   10637:	int3   
   10638:	int3   
   10639:	int3   
   1063a:	int3   
   1063b:	int3   
   1063c:	mov    edi,edi
   1063e:	push   ebp
   1063f:	mov    ebp,esp
   10641:	mov    eax,DWORD PTR [ebp+0x8]
   10644:	xor    edx,edx
   10646:	inc    edx
   10647:	mov    DWORD PTR [ecx],eax
   10649:	push   esi
   1064a:	mov    eax,DWORD PTR [ecx]
   1064c:	mov    esi,eax
   1064e:	shr    esi,0x1e
   10651:	xor    esi,eax
   10653:	imul   esi,esi,0x6c078965
   10659:	add    ecx,0x4
   1065c:	add    esi,edx
   1065e:	inc    edx
   1065f:	cmp    edx,0x270
   10665:	mov    DWORD PTR [ecx],esi
   10667:	jl     0x1064a
   10669:	pop    esi
   1066a:	pop    ebp
   1066b:	ret    0x4
   1066e:	int3   
   1066f:	int3   
   10670:	int3   
   10671:	int3   
   10672:	int3   
   10673:	int3   
   10674:	mov    edi,edi
   10676:	push   ebp
   10677:	mov    ebp,esp
   10679:	push   ecx
   1067a:	push   ebx
   1067b:	push   esi
   1067c:	push   edi
   1067d:	mov    edi,ecx
   1067f:	mov    esi,edi
   10681:	mov    ebx,0xe3
   10686:	push   DWORD PTR [esi+0x4]
   10689:	mov    ecx,edi
   1068b:	push   DWORD PTR [esi]
   1068d:	dec    ebx
   1068e:	push   DWORD PTR [esi+0x634]
   10694:	call   0x10606
   10699:	mov    DWORD PTR [esi],eax
   1069b:	add    esi,0x4
   1069e:	test   ebx,ebx
   106a0:	jne    0x10686
   106a2:	mov    DWORD PTR [ebp-0x4],0x18c
   106a9:	lea    ebx,[esi+0x4]
   106ac:	push   DWORD PTR [ebx]
   106ae:	mov    ecx,edi
   106b0:	push   DWORD PTR [esi]
   106b2:	push   DWORD PTR [esi-0x38c]
   106b8:	call   0x10606
   106bd:	dec    DWORD PTR [ebp-0x4]
   106c0:	mov    DWORD PTR [esi],eax
   106c2:	mov    esi,ebx
   106c4:	jne    0x106a9
   106c6:	push   DWORD PTR [edi]
   106c8:	mov    ecx,edi
   106ca:	push   DWORD PTR [esi]
   106cc:	push   DWORD PTR [esi-0x38c]
   106d2:	call   0x10606
   106d7:	mov    DWORD PTR [esi],eax
   106d9:	mov    DWORD PTR [edi+0x9c4],0x270
   106e3:	mov    DWORD PTR [edi+0x9c0],edi
   106e9:	pop    edi
   106ea:	pop    esi
   106eb:	pop    ebx
   106ec:	leave  
   106ed:	ret    
   106ee:	int3   
   106ef:	int3   
   106f0:	int3   
   106f1:	int3   
   106f2:	int3   
   106f3:	int3   
   106f4:	mov    edi,edi
   106f6:	push   ebp
   106f7:	mov    ebp,esp
   106f9:	push   esi
   106fa:	push   DWORD PTR [ebp+0x8]
   106fd:	mov    esi,ecx
   106ff:	call   0x1063c
   10704:	mov    ecx,esi
   10706:	call   0x10674
   1070b:	pop    esi
   1070c:	pop    ebp
   1070d:	ret    0x4
   10710:	int3   
   10711:	int3   
   10712:	int3   
   10713:	int3   
   10714:	int3   
   10715:	int3   
   10716:	mov    edi,edi
   10718:	push   esi
   10719:	push   edi
   1071a:	mov    edi,ecx
   1071c:	lea    esi,[edi+0x9c4]
   10722:	cmp    DWORD PTR [esi],0x0
   10725:	jne    0x1072c
   10727:	call   0x10674
   1072c:	dec    DWORD PTR [esi]
   1072e:	lea    eax,[edi+0x9c0]
   10734:	mov    edx,DWORD PTR [eax]
   10736:	mov    ecx,DWORD PTR [edx]
   10738:	add    edx,0x4
   1073b:	mov    DWORD PTR [eax],edx
   1073d:	mov    eax,ecx
   1073f:	shr    eax,0xb
   10742:	xor    ecx,eax
   10744:	mov    eax,ecx
   10746:	and    eax,0xff3a58ad
   1074b:	shl    eax,0x7
   1074e:	xor    ecx,eax
   10750:	mov    eax,ecx
   10752:	and    eax,0xffffdf8c
   10757:	shl    eax,0xf
   1075a:	xor    ecx,eax
   1075c:	mov    eax,ecx
   1075e:	shr    eax,0x12
   10761:	pop    edi
   10762:	xor    eax,ecx
   10764:	pop    esi
   10765:	ret    
   10766:	int3   
   10767:	int3   
   10768:	int3   
   10769:	int3   
   1076a:	int3   
   1076b:	int3   
   1076c:	mov    edi,edi
   1076e:	push   ebp
   1076f:	mov    ebp,esp
   10771:	push   esi
   10772:	mov    esi,DWORD PTR [ebp+0x8]
   10775:	shr    esi,1
   10777:	or     esi,DWORD PTR [ebp+0x8]
   1077a:	push   edi
   1077b:	mov    eax,esi
   1077d:	shr    eax,0x2
   10780:	or     esi,eax
   10782:	mov    eax,esi
   10784:	shr    eax,0x4
   10787:	or     esi,eax
   10789:	mov    eax,esi
   1078b:	shr    eax,0x8
   1078e:	or     esi,eax
   10790:	mov    eax,esi
   10792:	shr    eax,0x10
   10795:	mov    edi,ecx
   10797:	or     esi,eax
   10799:	mov    ecx,edi
   1079b:	call   0x10716
   107a0:	and    eax,esi
   107a2:	cmp    eax,DWORD PTR [ebp+0x8]
   107a5:	ja     0x10799
   107a7:	pop    edi
   107a8:	pop    esi
   107a9:	pop    ebp
   107aa:	ret    0x4
   107ad:	int3   
   107ae:	int3   
   107af:	int3   
   107b0:	int3   
   107b1:	int3   
   107b2:	mov    edi,edi
   107b4:	push   ebp
   107b5:	mov    ebp,esp
   107b7:	sub    esp,0xa04
   107bd:	push   ebx
   107be:	push   esi
   107bf:	mov    esi,DWORD PTR [ebp+0x14]
   107c2:	push   edi
   107c3:	test   esi,esi
   107c5:	jne    0x108a0
   107cb:	xor    ecx,ecx
   107cd:	lea    eax,[ebp-0x3c]
   107d0:	mov    edx,0xff
   107d5:	shl    edx,cl
   107d7:	and    edx,DWORD PTR [ebp+0x8]
   107da:	shr    edx,cl
   107dc:	inc    ecx
   107dd:	inc    ecx
   107de:	mov    DWORD PTR [eax],edx
   107e0:	add    eax,0x4
   107e3:	cmp    ecx,0x14
   107e6:	jne    0x107d0
   107e8:	mov    ebx,DWORD PTR [ebp+0xc]
   107eb:	xor    eax,eax
   107ed:	mov    WORD PTR [ebx],ax
   107f0:	mov    eax,DWORD PTR [ebp-0x3c]
   107f3:	push   0x5
   107f5:	cdq    
   107f6:	pop    ecx
   107f7:	idiv   ecx
   107f9:	mov    DWORD PTR [ebp-0x14],0x1e096
   10800:	mov    DWORD PTR [ebp-0x10],0x1e08c
   10807:	mov    DWORD PTR [ebp-0xc],0x1e084
   1080e:	mov    DWORD PTR [ebp-0x8],0x1e07a
   10815:	mov    DWORD PTR [ebp-0x4],0x1e070
   1081c:	mov    edx,DWORD PTR [ebp+edx*4-0x14]
   10820:	mov    ecx,edx
   10822:	mov    ax,WORD PTR [edx]
   10825:	inc    edx
   10826:	inc    edx
   10827:	test   ax,ax
   1082a:	jne    0x10822
   1082c:	sub    edx,ecx
   1082e:	mov    edi,ebx
   10830:	dec    edi
   10831:	mov    esi,ecx
   10833:	dec    edi
   10834:	mov    ax,WORD PTR [edi+0x2]
   10838:	inc    edi
   10839:	inc    edi
   1083a:	test   ax,ax
   1083d:	jne    0x10834
   1083f:	mov    ecx,edx
   10841:	shr    ecx,0x2
   10844:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10846:	mov    ecx,edx
   10848:	and    ecx,0x3
   1084b:	mov    eax,ebx
   1084d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1084f:	lea    ecx,[eax+0x2]
   10852:	mov    dx,WORD PTR [eax]
   10855:	inc    eax
   10856:	inc    eax
   10857:	test   dx,dx
   1085a:	jne    0x10852
   1085c:	sub    eax,ecx
   1085e:	sar    eax,1
   10860:	mov    ecx,eax
   10862:	mov    eax,DWORD PTR [ebp-0x38]
   10865:	push   0x3
   10867:	cdq    
   10868:	pop    esi
   10869:	idiv   esi
   1086b:	cmp    edx,0xfffffffe
   1086e:	je     0x10954
   10874:	add    edx,0x2
   10877:	lea    esi,[ebp-0x34]
   1087a:	mov    DWORD PTR [ebp+0x8],edx
   1087d:	mov    eax,DWORD PTR [esi]
   1087f:	cdq    
   10880:	push   0x1a
   10882:	pop    edi
   10883:	idiv   edi
   10885:	add    esi,0x4
   10888:	xor    eax,eax
   1088a:	add    edx,0x61
   1088d:	mov    WORD PTR [ebx+ecx*2],dx
   10891:	inc    ecx
   10892:	dec    DWORD PTR [ebp+0x8]
   10895:	mov    WORD PTR [ebx+ecx*2],ax
   10899:	jne    0x1087d
   1089b:	jmp    0x10954
   108a0:	cmp    esi,0x1
   108a3:	je     0x108b0
   108a5:	mov    eax,esi
   108a7:	imul   eax,eax,0xa
   108aa:	add    eax,DWORD PTR [ebp+0x10]
   108ad:	add    DWORD PTR [ebp+0x8],eax
   108b0:	push   DWORD PTR [ebp+0x8]
   108b3:	lea    ecx,[ebp-0xa04]
   108b9:	call   0x106f4
   108be:	lea    eax,[esi-0x1]
   108c1:	cmp    eax,0x5
   108c4:	ja     0x108d5
   108c6:	imul   esi,esi,0x3
   108c9:	add    esi,DWORD PTR [ebp+0x10]
   108cc:	mov    esi,DWORD PTR [esi*4+0x77abc]
   108d3:	jmp    0x108da
   108d5:	mov    esi,0x1e06e
   108da:	mov    ebx,DWORD PTR [ebp+0xc]
   108dd:	xor    eax,eax
   108df:	mov    WORD PTR [ebx],ax
   108e2:	mov    eax,esi
   108e4:	mov    edx,esi
   108e6:	mov    cx,WORD PTR [eax]
   108e9:	inc    eax
   108ea:	inc    eax
   108eb:	test   cx,cx
   108ee:	jne    0x108e6
   108f0:	sub    eax,edx
   108f2:	mov    edi,ebx
   108f4:	dec    edi
   108f5:	dec    edi
   108f6:	mov    cx,WORD PTR [edi+0x2]
   108fa:	inc    edi
   108fb:	inc    edi
   108fc:	test   cx,cx
   108ff:	jne    0x108f6
   10901:	mov    ecx,eax
   10903:	shr    ecx,0x2
   10906:	mov    esi,edx
   10908:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1090a:	mov    ecx,eax
   1090c:	and    ecx,0x3
   1090f:	mov    eax,ebx
   10911:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   10913:	lea    ecx,[eax+0x2]
   10916:	mov    dx,WORD PTR [eax]
   10919:	inc    eax
   1091a:	inc    eax
   1091b:	test   dx,dx
   1091e:	jne    0x10916
   10920:	sub    eax,ecx
   10922:	sar    eax,1
   10924:	push   0x5
   10926:	mov    esi,eax
   10928:	pop    edi
   10929:	push   0x23
   1092b:	lea    ecx,[ebp-0xa04]
   10931:	call   0x1076c
   10936:	cmp    eax,0xa
   10939:	jae    0x10940
   1093b:	add    eax,0x30
   1093e:	jmp    0x10943
   10940:	add    eax,0x57
   10943:	movzx  eax,ax
   10946:	mov    WORD PTR [ebx+esi*2],ax
   1094a:	inc    esi
   1094b:	xor    eax,eax
   1094d:	dec    edi
   1094e:	mov    WORD PTR [ebx+esi*2],ax
   10952:	jne    0x10929
   10954:	pop    edi
   10955:	pop    esi
   10956:	pop    ebx
   10957:	leave  
   10958:	ret    0x10
   1095b:	int3   
   1095c:	int3   
   1095d:	int3   
   1095e:	int3   
   1095f:	int3   
   10960:	mov    edi,edi
   10962:	push   ebp
   10963:	mov    ebp,esp
   10965:	mov    eax,DWORD PTR [ebp+0x8]
   10968:	lea    edx,[eax+0x2]
   1096b:	mov    cx,WORD PTR [eax]
   1096e:	inc    eax
   1096f:	inc    eax
   10970:	test   cx,cx
   10973:	jne    0x1096b
   10975:	sub    eax,edx
   10977:	sar    eax,1
   10979:	pop    ebp
   1097a:	ret    0x4
   1097d:	int3   
   1097e:	int3   
   1097f:	int3   
   10980:	int3   
   10981:	int3   
   10982:	mov    eax,ecx
   10984:	ret    
   10985:	int3   
   10986:	int3   
   10987:	int3   
   10988:	int3   
   10989:	int3   
   1098a:	ret    
   1098b:	int3   
   1098c:	int3   
   1098d:	int3   
   1098e:	int3   
   1098f:	int3   
   10990:	mov    edi,edi
   10992:	push   ebp
   10993:	mov    ebp,esp
   10995:	push   esi
   10996:	xor    esi,esi
   10998:	xor    edx,edx
   1099a:	cmp    DWORD PTR [ebp+0xc],esi
   1099d:	je     0x109ba
   1099f:	mov    eax,DWORD PTR [ebp+0x8]
   109a2:	mov    ecx,DWORD PTR [ebp+0x10]
   109a5:	mov    cl,BYTE PTR [edx+ecx*1]
   109a8:	add    eax,esi
   109aa:	xor    BYTE PTR [eax],cl
   109ac:	lea    eax,[edx+0x1]
   109af:	xor    edx,edx
   109b1:	div    DWORD PTR [ebp+0x14]
   109b4:	inc    esi
   109b5:	cmp    esi,DWORD PTR [ebp+0xc]
   109b8:	jne    0x1099f
   109ba:	pop    esi
   109bb:	pop    ebp
   109bc:	ret    0x10
   109bf:	int3   
   109c0:	int3   
   109c1:	int3   
   109c2:	int3   
   109c3:	int3   
   109c4:	mov    edi,edi
   109c6:	push   ebp
   109c7:	mov    ebp,esp
   109c9:	mov    ecx,DWORD PTR [ebp+0x8]
   109cc:	mov    eax,ecx
   109ce:	lea    edx,[eax+0x2]
   109d1:	push   esi
   109d2:	mov    si,WORD PTR [eax]
   109d5:	inc    eax
   109d6:	inc    eax
   109d7:	test   si,si
   109da:	jne    0x109d2
   109dc:	sub    eax,edx
   109de:	sar    eax,1
   109e0:	cmp    eax,0xc
   109e3:	jae    0x109ec
   109e5:	xor    al,al
   109e7:	jmp    0x10aba
   109ec:	lea    eax,[ecx+eax*2-0x18]
   109f0:	movzx  ecx,WORD PTR [eax]
   109f3:	cmp    cx,0x69
   109f7:	je     0x109ff
   109f9:	cmp    cx,0x49
   109fd:	jne    0x109e5
   109ff:	movzx  ecx,WORD PTR [eax+0x2]
   10a03:	push   0x45
   10a05:	pop    esi
   10a06:	push   0x65
   10a08:	pop    edx
   10a09:	cmp    cx,dx
   10a0c:	je     0x10a13
   10a0e:	cmp    cx,si
   10a11:	jne    0x109e5
   10a13:	movzx  ecx,WORD PTR [eax+0x4]
   10a17:	cmp    cx,0x78
   10a1b:	je     0x10a23
   10a1d:	cmp    cx,0x58
   10a21:	jne    0x109e5
   10a23:	movzx  ecx,WORD PTR [eax+0x6]
   10a27:	cmp    cx,0x70
   10a2b:	je     0x10a33
   10a2d:	cmp    cx,0x50
   10a31:	jne    0x109e5
   10a33:	movzx  ecx,WORD PTR [eax+0x8]
   10a37:	cmp    cx,0x6c
   10a3b:	je     0x10a43
   10a3d:	cmp    cx,0x4c
   10a41:	jne    0x109e5
   10a43:	movzx  ecx,WORD PTR [eax+0xa]
   10a47:	cmp    cx,0x6f
   10a4b:	je     0x10a53
   10a4d:	cmp    cx,0x4f
   10a51:	jne    0x109e5
   10a53:	movzx  ecx,WORD PTR [eax+0xc]
   10a57:	cmp    cx,0x72
   10a5b:	je     0x10a63
   10a5d:	cmp    cx,0x52
   10a61:	jne    0x109e5
   10a63:	movzx  ecx,WORD PTR [eax+0xe]
   10a67:	cmp    cx,dx
   10a6a:	je     0x10a75
   10a6c:	cmp    cx,si
   10a6f:	jne    0x109e5
   10a75:	cmp    WORD PTR [eax+0x10],0x2e
   10a7a:	jne    0x109e5
   10a80:	movzx  ecx,WORD PTR [eax+0x12]
   10a84:	cmp    cx,dx
   10a87:	je     0x10a92
   10a89:	cmp    cx,si
   10a8c:	jne    0x109e5
   10a92:	movzx  ecx,WORD PTR [eax+0x14]
   10a96:	cmp    cx,0x78
   10a9a:	je     0x10aa6
   10a9c:	cmp    cx,0x58
   10aa0:	jne    0x109e5
   10aa6:	movzx  eax,WORD PTR [eax+0x16]
   10aaa:	cmp    ax,dx
   10aad:	je     0x10ab8
   10aaf:	cmp    ax,si
   10ab2:	jne    0x109e5
   10ab8:	mov    al,0x1
   10aba:	pop    esi
   10abb:	pop    ebp
   10abc:	ret    0x4
   10abf:	int3   
   10ac0:	int3   
   10ac1:	int3   
   10ac2:	int3   
   10ac3:	int3   
   10ac4:	mov    edi,edi
   10ac6:	push   ebp
   10ac7:	mov    ebp,esp
   10ac9:	mov    ecx,DWORD PTR [ebp+0x8]
   10acc:	mov    eax,ecx
   10ace:	lea    edx,[eax+0x2]
   10ad1:	push   esi
   10ad2:	mov    si,WORD PTR [eax]
   10ad5:	inc    eax
   10ad6:	inc    eax
   10ad7:	test   si,si
   10ada:	jne    0x10ad2
   10adc:	sub    eax,edx
   10ade:	sar    eax,1
   10ae0:	pop    esi
   10ae1:	cmp    eax,0xb
   10ae4:	jae    0x10aed
   10ae6:	xor    al,al
   10ae8:	jmp    0x10ba9
   10aed:	lea    eax,[ecx+eax*2-0x16]
   10af1:	movzx  ecx,WORD PTR [eax]
   10af4:	cmp    cx,0x66
   10af8:	je     0x10b00
   10afa:	cmp    cx,0x46
   10afe:	jne    0x10ae6
   10b00:	movzx  ecx,WORD PTR [eax+0x2]
   10b04:	cmp    cx,0x69
   10b08:	je     0x10b10
   10b0a:	cmp    cx,0x49
   10b0e:	jne    0x10ae6
   10b10:	movzx  ecx,WORD PTR [eax+0x4]
   10b14:	cmp    cx,0x72
   10b18:	je     0x10b20
   10b1a:	cmp    cx,0x52
   10b1e:	jne    0x10ae6
   10b20:	movzx  ecx,WORD PTR [eax+0x6]
   10b24:	cmp    cx,0x65
   10b28:	je     0x10b30
   10b2a:	cmp    cx,0x45
   10b2e:	jne    0x10ae6
   10b30:	movzx  ecx,WORD PTR [eax+0x8]
   10b34:	cmp    cx,0x66
   10b38:	je     0x10b40
   10b3a:	cmp    cx,0x46
   10b3e:	jne    0x10ae6
   10b40:	movzx  ecx,WORD PTR [eax+0xa]
   10b44:	cmp    cx,0x6f
   10b48:	je     0x10b50
   10b4a:	cmp    cx,0x4f
   10b4e:	jne    0x10ae6
   10b50:	movzx  ecx,WORD PTR [eax+0xc]
   10b54:	cmp    cx,0x78
   10b58:	je     0x10b60
   10b5a:	cmp    cx,0x58
   10b5e:	jne    0x10ae6
   10b60:	cmp    WORD PTR [eax+0xe],0x2e
   10b65:	jne    0x10ae6
   10b6b:	movzx  ecx,WORD PTR [eax+0x10]
   10b6f:	cmp    cx,0x65
   10b73:	je     0x10b7f
   10b75:	cmp    cx,0x45
   10b79:	jne    0x10ae6
   10b7f:	movzx  ecx,WORD PTR [eax+0x12]
   10b83:	cmp    cx,0x78
   10b87:	je     0x10b93
   10b89:	cmp    cx,0x58
   10b8d:	jne    0x10ae6
   10b93:	movzx  eax,WORD PTR [eax+0x14]
   10b97:	cmp    ax,0x65
   10b9b:	je     0x10ba7
   10b9d:	cmp    ax,0x45
   10ba1:	jne    0x10ae6
   10ba7:	mov    al,0x1
   10ba9:	pop    ebp
   10baa:	ret    0x4
   10bad:	int3   
   10bae:	int3   
   10baf:	int3   
   10bb0:	int3   
   10bb1:	int3   
   10bb2:	mov    edi,edi
   10bb4:	push   ebp
   10bb5:	mov    ebp,esp
   10bb7:	mov    ecx,DWORD PTR [ebp+0x8]
   10bba:	mov    eax,ecx
   10bbc:	lea    edx,[eax+0x2]
   10bbf:	push   esi
   10bc0:	mov    si,WORD PTR [eax]
   10bc3:	inc    eax
   10bc4:	inc    eax
   10bc5:	test   si,si
   10bc8:	jne    0x10bc0
   10bca:	sub    eax,edx
   10bcc:	sar    eax,1
   10bce:	pop    esi
   10bcf:	cmp    eax,0xa
   10bd2:	jae    0x10bdb
   10bd4:	xor    al,al
   10bd6:	jmp    0x10c83
   10bdb:	lea    eax,[ecx+eax*2-0x14]
   10bdf:	movzx  ecx,WORD PTR [eax]
   10be2:	cmp    cx,0x63
   10be6:	je     0x10bee
   10be8:	cmp    cx,0x43
   10bec:	jne    0x10bd4
   10bee:	movzx  ecx,WORD PTR [eax+0x2]
   10bf2:	cmp    cx,0x68
   10bf6:	je     0x10bfe
   10bf8:	cmp    cx,0x48
   10bfc:	jne    0x10bd4
   10bfe:	movzx  ecx,WORD PTR [eax+0x4]
   10c02:	cmp    cx,0x72
   10c06:	je     0x10c0e
   10c08:	cmp    cx,0x52
   10c0c:	jne    0x10bd4
   10c0e:	movzx  ecx,WORD PTR [eax+0x6]
   10c12:	cmp    cx,0x6f
   10c16:	je     0x10c1e
   10c18:	cmp    cx,0x4f
   10c1c:	jne    0x10bd4
   10c1e:	movzx  ecx,WORD PTR [eax+0x8]
   10c22:	cmp    cx,0x6d
   10c26:	je     0x10c2e
   10c28:	cmp    cx,0x4d
   10c2c:	jne    0x10bd4
   10c2e:	movzx  ecx,WORD PTR [eax+0xa]
   10c32:	cmp    cx,0x65
   10c36:	je     0x10c3e
   10c38:	cmp    cx,0x45
   10c3c:	jne    0x10bd4
   10c3e:	cmp    WORD PTR [eax+0xc],0x2e
   10c43:	jne    0x10bd4
   10c45:	movzx  ecx,WORD PTR [eax+0xe]
   10c49:	cmp    cx,0x65
   10c4d:	je     0x10c59
   10c4f:	cmp    cx,0x45
   10c53:	jne    0x10bd4
   10c59:	movzx  ecx,WORD PTR [eax+0x10]
   10c5d:	cmp    cx,0x78
   10c61:	je     0x10c6d
   10c63:	cmp    cx,0x58
   10c67:	jne    0x10bd4
   10c6d:	movzx  eax,WORD PTR [eax+0x12]
   10c71:	cmp    ax,0x65
   10c75:	je     0x10c81
   10c77:	cmp    ax,0x45
   10c7b:	jne    0x10bd4
   10c81:	mov    al,0x1
   10c83:	pop    ebp
   10c84:	ret    0x4
   10c87:	int3   
   10c88:	int3   
   10c89:	int3   
   10c8a:	int3   
   10c8b:	int3   
   10c8c:	mov    edi,edi
   10c8e:	push   ebp
   10c8f:	mov    ebp,esp
   10c91:	mov    ecx,DWORD PTR [ebp+0x8]
   10c94:	mov    eax,ecx
   10c96:	lea    edx,[eax+0x2]
   10c99:	push   esi
   10c9a:	mov    si,WORD PTR [eax]
   10c9d:	inc    eax
   10c9e:	inc    eax
   10c9f:	test   si,si
   10ca2:	jne    0x10c9a
   10ca4:	sub    eax,edx
   10ca6:	sar    eax,1
   10ca8:	pop    esi
   10ca9:	cmp    eax,0x9
   10cac:	jae    0x10cb5
   10cae:	xor    al,al
   10cb0:	jmp    0x10d49
   10cb5:	lea    eax,[ecx+eax*2-0x12]
   10cb9:	movzx  ecx,WORD PTR [eax]
   10cbc:	cmp    cx,0x6d
   10cc0:	je     0x10cc8
   10cc2:	cmp    cx,0x4d
   10cc6:	jne    0x10cae
   10cc8:	movzx  ecx,WORD PTR [eax+0x2]
   10ccc:	cmp    cx,0x73
   10cd0:	je     0x10cd8
   10cd2:	cmp    cx,0x53
   10cd6:	jne    0x10cae
   10cd8:	movzx  ecx,WORD PTR [eax+0x4]
   10cdc:	cmp    cx,0x68
   10ce0:	je     0x10ce8
   10ce2:	cmp    cx,0x48
   10ce6:	jne    0x10cae
   10ce8:	movzx  ecx,WORD PTR [eax+0x6]
   10cec:	cmp    cx,0x74
   10cf0:	je     0x10cf8
   10cf2:	cmp    cx,0x54
   10cf6:	jne    0x10cae
   10cf8:	movzx  ecx,WORD PTR [eax+0x8]
   10cfc:	cmp    cx,0x61
   10d00:	je     0x10d08
   10d02:	cmp    cx,0x41
   10d06:	jne    0x10cae
   10d08:	cmp    WORD PTR [eax+0xa],0x2e
   10d0d:	jne    0x10cae
   10d0f:	movzx  ecx,WORD PTR [eax+0xc]
   10d13:	cmp    cx,0x65
   10d17:	je     0x10d1f
   10d19:	cmp    cx,0x45
   10d1d:	jne    0x10cae
   10d1f:	movzx  ecx,WORD PTR [eax+0xe]
   10d23:	cmp    cx,0x78
   10d27:	je     0x10d33
   10d29:	cmp    cx,0x58
   10d2d:	jne    0x10cae
   10d33:	movzx  eax,WORD PTR [eax+0x10]
   10d37:	cmp    ax,0x65
   10d3b:	je     0x10d47
   10d3d:	cmp    ax,0x45
   10d41:	jne    0x10cae
   10d47:	mov    al,0x1
   10d49:	pop    ebp
   10d4a:	ret    0x4
   10d4d:	int3   
   10d4e:	int3   
   10d4f:	int3   
   10d50:	int3   
   10d51:	int3   
   10d52:	mov    edi,edi
   10d54:	push   ebp
   10d55:	mov    ebp,esp
   10d57:	push   esi
   10d58:	mov    esi,DWORD PTR [ebp+0x8]
   10d5b:	push   esi
   10d5c:	call   0x109c4
   10d61:	test   al,al
   10d63:	je     0x10d6a
   10d65:	xor    eax,eax
   10d67:	inc    eax
   10d68:	jmp    0x10d97
   10d6a:	push   esi
   10d6b:	call   0x10ac4
   10d70:	test   al,al
   10d72:	je     0x10d79
   10d74:	push   0x2
   10d76:	pop    eax
   10d77:	jmp    0x10d97
   10d79:	push   esi
   10d7a:	call   0x10bb2
   10d7f:	test   al,al
   10d81:	je     0x10d87
   10d83:	push   0x3
   10d85:	jmp    0x10d76
   10d87:	push   esi
   10d88:	call   0x10c8c
   10d8d:	movzx  eax,al
   10d90:	neg    eax
   10d92:	sbb    eax,eax
   10d94:	and    eax,0x4
   10d97:	pop    esi
   10d98:	pop    ebp
   10d99:	ret    0x4
   10d9c:	int3   
   10d9d:	int3   
   10d9e:	int3   
   10d9f:	int3   
   10da0:	int3   
   10da1:	int3   
   10da2:	mov    edi,edi
   10da4:	push   ebp
   10da5:	mov    ebp,esp
   10da7:	mov    eax,DWORD PTR [ebp+0x8]
   10daa:	mov    edx,DWORD PTR [ebp+0xc]
   10dad:	push   esi
   10dae:	xor    esi,esi
   10db0:	jmp    0x10dd5
   10db2:	mov    ecx,eax
   10db4:	and    ecx,0x1
   10db7:	or     ecx,esi
   10db9:	push   esi
   10dba:	jne    0x10dc7
   10dbc:	push   0x2
   10dbe:	push   edx
   10dbf:	push   eax
   10dc0:	call   0x1dcaa
   10dc5:	jmp    0x10dd5
   10dc7:	push   0x3
   10dc9:	push   edx
   10dca:	push   eax
   10dcb:	call   0x1dc9e
   10dd0:	add    eax,0x1
   10dd3:	adc    edx,esi
   10dd5:	cmp    eax,0x4
   10dd8:	jne    0x10db2
   10dda:	cmp    edx,esi
   10ddc:	jne    0x10db2
   10dde:	pop    esi
   10ddf:	pop    ebp
   10de0:	ret    0x8
   10de3:	int3   
   10de4:	int3   
   10de5:	int3   
   10de6:	int3   
   10de7:	int3   
   10de8:	mov    edi,edi
   10dea:	push   ebp
   10deb:	mov    ebp,esp
   10ded:	mov    eax,DWORD PTR [ebp+0x8]
   10df0:	mov    edx,DWORD PTR ds:0x786b0
   10df6:	jmp    0x10dfa
   10df8:	mov    eax,ecx
   10dfa:	mov    ecx,DWORD PTR [eax+0x8]
   10dfd:	cmp    ecx,edx
   10dff:	jne    0x10df8
   10e01:	pop    ebp
   10e02:	ret    0x4
   10e05:	int3   
   10e06:	int3   
   10e07:	int3   
   10e08:	int3   
   10e09:	int3   
   10e0a:	mov    edi,edi
   10e0c:	push   ebp
   10e0d:	mov    ebp,esp
   10e0f:	mov    eax,DWORD PTR [ebp+0x8]
   10e12:	mov    edx,DWORD PTR ds:0x786b0
   10e18:	jmp    0x10e1c
   10e1a:	mov    eax,ecx
   10e1c:	mov    ecx,DWORD PTR [eax]
   10e1e:	cmp    ecx,edx
   10e20:	jne    0x10e1a
   10e22:	pop    ebp
   10e23:	ret    0x4
   10e26:	int3   
   10e27:	int3   
   10e28:	int3   
   10e29:	int3   
   10e2a:	int3   
   10e2b:	int3   
   10e2c:	mov    edi,edi
   10e2e:	push   ebp
   10e2f:	mov    ebp,esp
   10e31:	mov    eax,DWORD PTR [ebp+0x8]
   10e34:	mov    edx,DWORD PTR ds:0x786b4
   10e3a:	jmp    0x10e3e
   10e3c:	mov    eax,ecx
   10e3e:	mov    ecx,DWORD PTR [eax+0x8]
   10e41:	cmp    ecx,edx
   10e43:	jne    0x10e3c
   10e45:	pop    ebp
   10e46:	ret    0x4
   10e49:	int3   
   10e4a:	int3   
   10e4b:	int3   
   10e4c:	int3   
   10e4d:	int3   
   10e4e:	mov    edi,edi
   10e50:	push   ebp
   10e51:	mov    ebp,esp
   10e53:	mov    eax,DWORD PTR [ebp+0x8]
   10e56:	mov    edx,DWORD PTR ds:0x786b4
   10e5c:	jmp    0x10e60
   10e5e:	mov    eax,ecx
   10e60:	mov    ecx,DWORD PTR [eax]
   10e62:	cmp    ecx,edx
   10e64:	jne    0x10e5e
   10e66:	pop    ebp
   10e67:	ret    0x4
   10e6a:	int3   
   10e6b:	int3   
   10e6c:	int3   
   10e6d:	int3   
   10e6e:	int3   
   10e6f:	int3   
   10e70:	mov    edi,edi
   10e72:	push   ebp
   10e73:	mov    ebp,esp
   10e75:	mov    eax,DWORD PTR [ebp+0x8]
   10e78:	mov    edx,DWORD PTR ds:0x786b8
   10e7e:	jmp    0x10e82
   10e80:	mov    eax,ecx
   10e82:	mov    ecx,DWORD PTR [eax+0x8]
   10e85:	cmp    ecx,edx
   10e87:	jne    0x10e80
   10e89:	pop    ebp
   10e8a:	ret    0x4
   10e8d:	int3   
   10e8e:	int3   
   10e8f:	int3   
   10e90:	int3   
   10e91:	int3   
   10e92:	mov    edi,edi
   10e94:	push   ebp
   10e95:	mov    ebp,esp
   10e97:	mov    eax,DWORD PTR [ebp+0x8]
   10e9a:	mov    edx,DWORD PTR ds:0x786b8
   10ea0:	jmp    0x10ea4
   10ea2:	mov    eax,ecx
   10ea4:	mov    ecx,DWORD PTR [eax]
   10ea6:	cmp    ecx,edx
   10ea8:	jne    0x10ea2
   10eaa:	pop    ebp
   10eab:	ret    0x4
   10eae:	int3   
   10eaf:	int3   
   10eb0:	int3   
   10eb1:	int3   
   10eb2:	int3   
   10eb3:	int3   
   10eb4:	mov    edi,edi
   10eb6:	push   esi
   10eb7:	mov    esi,ecx
   10eb9:	mov    ecx,DWORD PTR [esi]
   10ebb:	cmp    DWORD PTR [ecx+0x14],0x0
   10ebf:	jne    0x10ece
   10ec1:	mov    eax,DWORD PTR [ecx+0x4]
   10ec4:	cmp    DWORD PTR [eax+0x4],ecx
   10ec7:	jne    0x10ece
   10ec9:	mov    eax,DWORD PTR [ecx+0x8]
   10ecc:	jmp    0x10eeb
   10ece:	mov    eax,DWORD PTR [ecx]
   10ed0:	cmp    eax,DWORD PTR ds:0x786b0
   10ed6:	je     0x10ee4
   10ed8:	push   eax
   10ed9:	call   0x10de8
   10ede:	jmp    0x10eeb
   10ee0:	mov    DWORD PTR [esi],eax
   10ee2:	mov    ecx,eax
   10ee4:	mov    eax,DWORD PTR [ecx+0x4]
   10ee7:	cmp    ecx,DWORD PTR [eax]
   10ee9:	je     0x10ee0
   10eeb:	mov    DWORD PTR [esi],eax
   10eed:	pop    esi
   10eee:	ret    
   10eef:	int3   
   10ef0:	int3   
   10ef1:	int3   
   10ef2:	int3   
   10ef3:	int3   
   10ef4:	mov    edi,edi
   10ef6:	push   esi
   10ef7:	mov    esi,ecx
   10ef9:	mov    ecx,DWORD PTR [esi]
   10efb:	mov    eax,DWORD PTR [ecx+0x8]
   10efe:	cmp    eax,DWORD PTR ds:0x786b0
   10f04:	je     0x10f12
   10f06:	push   eax
   10f07:	call   0x10e0a
   10f0c:	jmp    0x10f21
   10f0e:	mov    DWORD PTR [esi],eax
   10f10:	mov    ecx,eax
   10f12:	mov    eax,DWORD PTR [ecx+0x4]
   10f15:	cmp    ecx,DWORD PTR [eax+0x8]
   10f18:	je     0x10f0e
   10f1a:	mov    ecx,DWORD PTR [esi]
   10f1c:	cmp    DWORD PTR [ecx+0x8],eax
   10f1f:	je     0x10f23
   10f21:	mov    DWORD PTR [esi],eax
   10f23:	pop    esi
   10f24:	ret    
   10f25:	int3   
   10f26:	int3   
   10f27:	int3   
   10f28:	int3   
   10f29:	int3   
   10f2a:	mov    edi,edi
   10f2c:	push   ebp
   10f2d:	mov    ebp,esp
   10f2f:	mov    edx,DWORD PTR [ebp+0x8]
   10f32:	mov    eax,DWORD PTR [edx+0x8]
   10f35:	push   esi
   10f36:	mov    esi,DWORD PTR [eax]
   10f38:	mov    DWORD PTR [edx+0x8],esi
   10f3b:	mov    esi,DWORD PTR [eax]
   10f3d:	cmp    esi,DWORD PTR ds:0x786bc
   10f43:	je     0x10f48
   10f45:	mov    DWORD PTR [esi+0x4],edx
   10f48:	mov    esi,DWORD PTR [edx+0x4]
   10f4b:	mov    DWORD PTR [eax+0x4],esi
   10f4e:	mov    ecx,DWORD PTR [ecx+0x4]
   10f51:	pop    esi
   10f52:	cmp    edx,DWORD PTR [ecx+0x4]
   10f55:	jne    0x10f5c
   10f57:	mov    DWORD PTR [ecx+0x4],eax
   10f5a:	jmp    0x10f6a
   10f5c:	mov    ecx,DWORD PTR [edx+0x4]
   10f5f:	cmp    edx,DWORD PTR [ecx]
   10f61:	jne    0x10f67
   10f63:	mov    DWORD PTR [ecx],eax
   10f65:	jmp    0x10f6a
   10f67:	mov    DWORD PTR [ecx+0x8],eax
   10f6a:	mov    DWORD PTR [eax],edx
   10f6c:	mov    DWORD PTR [edx+0x4],eax
   10f6f:	pop    ebp
   10f70:	ret    0x4
   10f73:	int3   
   10f74:	int3   
   10f75:	int3   
   10f76:	int3   
   10f77:	int3   
   10f78:	mov    edi,edi
   10f7a:	push   ebp
   10f7b:	mov    ebp,esp
   10f7d:	mov    eax,DWORD PTR [ebp+0x8]
   10f80:	mov    edx,DWORD PTR ds:0x786bc
   10f86:	jmp    0x10f8a
   10f88:	mov    eax,ecx
   10f8a:	mov    ecx,DWORD PTR [eax+0x8]
   10f8d:	cmp    ecx,edx
   10f8f:	jne    0x10f88
   10f91:	pop    ebp
   10f92:	ret    0x4
   10f95:	int3   
   10f96:	int3   
   10f97:	int3   
   10f98:	int3   
   10f99:	int3   
   10f9a:	mov    edi,edi
   10f9c:	push   ebp
   10f9d:	mov    ebp,esp
   10f9f:	mov    edx,DWORD PTR [ebp+0x8]
   10fa2:	mov    eax,DWORD PTR [edx]
   10fa4:	push   esi
   10fa5:	mov    esi,DWORD PTR [eax+0x8]
   10fa8:	mov    DWORD PTR [edx],esi
   10faa:	mov    esi,DWORD PTR [eax+0x8]
   10fad:	cmp    esi,DWORD PTR ds:0x786bc
   10fb3:	je     0x10fb8
   10fb5:	mov    DWORD PTR [esi+0x4],edx
   10fb8:	mov    esi,DWORD PTR [edx+0x4]
   10fbb:	mov    DWORD PTR [eax+0x4],esi
   10fbe:	mov    ecx,DWORD PTR [ecx+0x4]
   10fc1:	pop    esi
   10fc2:	cmp    edx,DWORD PTR [ecx+0x4]
   10fc5:	jne    0x10fcc
   10fc7:	mov    DWORD PTR [ecx+0x4],eax
   10fca:	jmp    0x10fdb
   10fcc:	mov    ecx,DWORD PTR [edx+0x4]
   10fcf:	cmp    edx,DWORD PTR [ecx+0x8]
   10fd2:	jne    0x10fd9
   10fd4:	mov    DWORD PTR [ecx+0x8],eax
   10fd7:	jmp    0x10fdb
   10fd9:	mov    DWORD PTR [ecx],eax
   10fdb:	mov    DWORD PTR [eax+0x8],edx
   10fde:	mov    DWORD PTR [edx+0x4],eax
   10fe1:	pop    ebp
   10fe2:	ret    0x4
   10fe5:	int3   
   10fe6:	int3   
   10fe7:	int3   
   10fe8:	int3   
   10fe9:	int3   
   10fea:	mov    edi,edi
   10fec:	push   esi
   10fed:	mov    esi,ecx
   10fef:	mov    ecx,DWORD PTR [esi]
   10ff1:	cmp    DWORD PTR [ecx+0x58],0x0
   10ff5:	jne    0x11004
   10ff7:	mov    eax,DWORD PTR [ecx+0x4]
   10ffa:	cmp    DWORD PTR [eax+0x4],ecx
   10ffd:	jne    0x11004
   10fff:	mov    eax,DWORD PTR [ecx+0x8]
   11002:	jmp    0x11021
   11004:	mov    eax,DWORD PTR [ecx]
   11006:	cmp    eax,DWORD PTR ds:0x786bc
   1100c:	je     0x1101a
   1100e:	push   eax
   1100f:	call   0x10f78
   11014:	jmp    0x11021
   11016:	mov    DWORD PTR [esi],eax
   11018:	mov    ecx,eax
   1101a:	mov    eax,DWORD PTR [ecx+0x4]
   1101d:	cmp    ecx,DWORD PTR [eax]
   1101f:	je     0x11016
   11021:	mov    DWORD PTR [esi],eax
   11023:	pop    esi
   11024:	ret    
   11025:	int3   
   11026:	int3   
   11027:	int3   
   11028:	int3   
   11029:	int3   
   1102a:	mov    edi,edi
   1102c:	push   ebp
   1102d:	mov    ebp,esp
   1102f:	mov    eax,DWORD PTR [ebp+0x8]
   11032:	mov    edx,DWORD PTR ds:0x786c0
   11038:	jmp    0x1103c
   1103a:	mov    eax,ecx
   1103c:	mov    ecx,DWORD PTR [eax+0x8]
   1103f:	cmp    ecx,edx
   11041:	jne    0x1103a
   11043:	pop    ebp
   11044:	ret    0x4
   11047:	int3   
   11048:	int3   
   11049:	int3   
   1104a:	int3   
   1104b:	int3   
   1104c:	mov    edi,edi
   1104e:	push   ebp
   1104f:	mov    ebp,esp
   11051:	mov    eax,DWORD PTR [ebp+0x8]
   11054:	mov    edx,DWORD PTR ds:0x786c0
   1105a:	jmp    0x1105e
   1105c:	mov    eax,ecx
   1105e:	mov    ecx,DWORD PTR [eax]
   11060:	cmp    ecx,edx
   11062:	jne    0x1105c
   11064:	pop    ebp
   11065:	ret    0x4
   11068:	int3   
   11069:	int3   
   1106a:	int3   
   1106b:	int3   
   1106c:	int3   
   1106d:	int3   
   1106e:	mov    edi,edi
   11070:	push   esi
   11071:	mov    esi,ecx
   11073:	mov    ecx,DWORD PTR [esi]
   11075:	cmp    DWORD PTR [ecx+0x1c],0x0
   11079:	jne    0x11088
   1107b:	mov    eax,DWORD PTR [ecx+0x4]
   1107e:	cmp    DWORD PTR [eax+0x4],ecx
   11081:	jne    0x11088
   11083:	mov    eax,DWORD PTR [ecx+0x8]
   11086:	jmp    0x110a5
   11088:	mov    eax,DWORD PTR [ecx]
   1108a:	cmp    eax,DWORD PTR ds:0x786c0
   11090:	je     0x1109e
   11092:	push   eax
   11093:	call   0x1102a
   11098:	jmp    0x110a5
   1109a:	mov    DWORD PTR [esi],eax
   1109c:	mov    ecx,eax
   1109e:	mov    eax,DWORD PTR [ecx+0x4]
   110a1:	cmp    ecx,DWORD PTR [eax]
   110a3:	je     0x1109a
   110a5:	mov    DWORD PTR [esi],eax
   110a7:	pop    esi
   110a8:	ret    
   110a9:	int3   
   110aa:	int3   
   110ab:	int3   
   110ac:	int3   
   110ad:	int3   
   110ae:	mov    edi,edi
   110b0:	push   ebp
   110b1:	mov    ebp,esp
   110b3:	mov    eax,DWORD PTR [ebp+0x8]
   110b6:	mov    edx,DWORD PTR ds:0x786c4
   110bc:	jmp    0x110c0
   110be:	mov    eax,ecx
   110c0:	mov    ecx,DWORD PTR [eax+0x8]
   110c3:	cmp    ecx,edx
   110c5:	jne    0x110be
   110c7:	pop    ebp
   110c8:	ret    0x4
   110cb:	int3   
   110cc:	int3   
   110cd:	int3   
   110ce:	int3   
   110cf:	int3   
   110d0:	mov    edi,edi
   110d2:	push   ebp
   110d3:	mov    ebp,esp
   110d5:	mov    eax,DWORD PTR [ebp+0x8]
   110d8:	mov    edx,DWORD PTR ds:0x786c4
   110de:	jmp    0x110e2
   110e0:	mov    eax,ecx
   110e2:	mov    ecx,DWORD PTR [eax]
   110e4:	cmp    ecx,edx
   110e6:	jne    0x110e0
   110e8:	pop    ebp
   110e9:	ret    0x4
   110ec:	int3   
   110ed:	int3   
   110ee:	int3   
   110ef:	int3   
   110f0:	int3   
   110f1:	int3   
   110f2:	mov    edi,edi
   110f4:	push   esi
   110f5:	mov    esi,ecx
   110f7:	mov    ecx,DWORD PTR [esi]
   110f9:	cmp    DWORD PTR [ecx+0x14],0x0
   110fd:	jne    0x1110c
   110ff:	mov    eax,DWORD PTR [ecx+0x4]
   11102:	cmp    DWORD PTR [eax+0x4],ecx
   11105:	jne    0x1110c
   11107:	mov    eax,DWORD PTR [ecx+0x8]
   1110a:	jmp    0x11129
   1110c:	mov    eax,DWORD PTR [ecx]
   1110e:	cmp    eax,DWORD PTR ds:0x786c4
   11114:	je     0x11122
   11116:	push   eax
   11117:	call   0x110ae
   1111c:	jmp    0x11129
   1111e:	mov    DWORD PTR [esi],eax
   11120:	mov    ecx,eax
   11122:	mov    eax,DWORD PTR [ecx+0x4]
   11125:	cmp    ecx,DWORD PTR [eax]
   11127:	je     0x1111e
   11129:	mov    DWORD PTR [esi],eax
   1112b:	pop    esi
   1112c:	ret    
   1112d:	int3   
   1112e:	int3   
   1112f:	int3   
   11130:	int3   
   11131:	int3   
   11132:	mov    edi,edi
   11134:	push   esi
   11135:	mov    esi,ecx
   11137:	mov    ecx,DWORD PTR [esi]
   11139:	cmp    DWORD PTR [ecx+0x60],0x0
   1113d:	jne    0x1114c
   1113f:	mov    eax,DWORD PTR [ecx+0x4]
   11142:	cmp    DWORD PTR [eax+0x4],ecx
   11145:	jne    0x1114c
   11147:	mov    eax,DWORD PTR [ecx+0x8]
   1114a:	jmp    0x11169
   1114c:	mov    eax,DWORD PTR [ecx]
   1114e:	cmp    eax,DWORD PTR ds:0x786b8
   11154:	je     0x11162
   11156:	push   eax
   11157:	call   0x10e70
   1115c:	jmp    0x11169
   1115e:	mov    DWORD PTR [esi],eax
   11160:	mov    ecx,eax
   11162:	mov    eax,DWORD PTR [ecx+0x4]
   11165:	cmp    ecx,DWORD PTR [eax]
   11167:	je     0x1115e
   11169:	mov    DWORD PTR [esi],eax
   1116b:	pop    esi
   1116c:	ret    
   1116d:	int3   
   1116e:	int3   
   1116f:	int3   
   11170:	int3   
   11171:	int3   
   11172:	mov    edi,edi
   11174:	push   esi
   11175:	mov    esi,ecx
   11177:	mov    ecx,DWORD PTR [esi]
   11179:	mov    eax,DWORD PTR [ecx+0x8]
   1117c:	cmp    eax,DWORD PTR ds:0x786c0
   11182:	je     0x11190
   11184:	push   eax
   11185:	call   0x1104c
   1118a:	jmp    0x1119f
   1118c:	mov    DWORD PTR [esi],eax
   1118e:	mov    ecx,eax
   11190:	mov    eax,DWORD PTR [ecx+0x4]
   11193:	cmp    ecx,DWORD PTR [eax+0x8]
   11196:	je     0x1118c
   11198:	mov    ecx,DWORD PTR [esi]
   1119a:	cmp    DWORD PTR [ecx+0x8],eax
   1119d:	je     0x111a1
   1119f:	mov    DWORD PTR [esi],eax
   111a1:	pop    esi
   111a2:	ret    
   111a3:	int3   
   111a4:	int3   
   111a5:	int3   
   111a6:	int3   
   111a7:	int3   
   111a8:	mov    edi,edi
   111aa:	push   esi
   111ab:	mov    esi,ecx
   111ad:	mov    ecx,DWORD PTR [esi]
   111af:	mov    eax,DWORD PTR [ecx+0x8]
   111b2:	cmp    eax,DWORD PTR ds:0x786c4
   111b8:	je     0x111c6
   111ba:	push   eax
   111bb:	call   0x110d0
   111c0:	jmp    0x111d5
   111c2:	mov    DWORD PTR [esi],eax
   111c4:	mov    ecx,eax
   111c6:	mov    eax,DWORD PTR [ecx+0x4]
   111c9:	cmp    ecx,DWORD PTR [eax+0x8]
   111cc:	je     0x111c2
   111ce:	mov    ecx,DWORD PTR [esi]
   111d0:	cmp    DWORD PTR [ecx+0x8],eax
   111d3:	je     0x111d7
   111d5:	mov    DWORD PTR [esi],eax
   111d7:	pop    esi
   111d8:	ret    
   111d9:	int3   
   111da:	int3   
   111db:	int3   
   111dc:	int3   
   111dd:	int3   
   111de:	mov    edi,edi
   111e0:	push   ebp
   111e1:	mov    ebp,esp
   111e3:	mov    eax,DWORD PTR [ebp+0x8]
   111e6:	mov    edx,DWORD PTR ds:0x786cc
   111ec:	jmp    0x111f0
   111ee:	mov    eax,ecx
   111f0:	mov    ecx,DWORD PTR [eax+0x8]
   111f3:	cmp    ecx,edx
   111f5:	jne    0x111ee
   111f7:	pop    ebp
   111f8:	ret    0x4
   111fb:	int3   
   111fc:	int3   
   111fd:	int3   
   111fe:	int3   
   111ff:	int3   
   11200:	mov    edi,edi
   11202:	push   ebp
   11203:	mov    ebp,esp
   11205:	push   ecx
   11206:	push   ecx
   11207:	mov    eax,DWORD PTR [ebp+0x8]
   1120a:	mov    DWORD PTR [ebp-0x4],eax
   1120d:	lea    ecx,[eax+0x2]
   11210:	mov    dx,WORD PTR [eax]
   11213:	inc    eax
   11214:	inc    eax
   11215:	test   dx,dx
   11218:	jne    0x11210
   1121a:	sub    eax,ecx
   1121c:	sar    eax,1
   1121e:	add    eax,eax
   11220:	mov    WORD PTR [ebp-0x8],ax
   11224:	mov    WORD PTR [ebp-0x6],ax
   11228:	lea    eax,[ebp-0x8]
   1122b:	push   eax
   1122c:	call   DWORD PTR ds:0x1f414
   11232:	leave  
   11233:	ret    0x4
   11236:	int3   
   11237:	int3   
   11238:	int3   
   11239:	int3   
   1123a:	int3   
   1123b:	int3   
   1123c:	mov    edi,edi
   1123e:	push   ebp
   1123f:	mov    ebp,esp
   11241:	mov    eax,DWORD PTR [ebp+0x8]
   11244:	test   eax,eax
   11246:	je     0x11255
   11248:	mov    ecx,DWORD PTR [ebp+0xc]
   1124b:	mov    edx,DWORD PTR [ecx]
   1124d:	mov    DWORD PTR [eax],edx
   1124f:	mov    ecx,DWORD PTR [ecx+0x4]
   11252:	mov    DWORD PTR [eax+0x4],ecx
   11255:	pop    ebp
   11256:	ret    0x8
   11259:	int3   
   1125a:	int3   
   1125b:	int3   
   1125c:	int3   
   1125d:	int3   
   1125e:	test   BYTE PTR ds:0x786d4,0x1
   11265:	jne    0x1127d
   11267:	or     DWORD PTR ds:0x786d4,0x1
   1126e:	push   0x1e13c
   11273:	call   0x11200
   11278:	mov    ds:0x786d0,eax
   1127d:	mov    eax,ds:0x786d0
   11282:	ret    
   11283:	int3   
   11284:	int3   
   11285:	int3   
   11286:	int3   
   11287:	int3   
   11288:	test   BYTE PTR ds:0x786dc,0x1
   1128f:	jne    0x112a7
   11291:	or     DWORD PTR ds:0x786dc,0x1
   11298:	push   0x1e158
   1129d:	call   0x11200
   112a2:	mov    ds:0x786d8,eax
   112a7:	mov    eax,ds:0x786d8
   112ac:	ret    
   112ad:	int3   
   112ae:	int3   
   112af:	int3   
   112b0:	int3   
   112b1:	int3   
   112b2:	test   BYTE PTR ds:0x786e4,0x1
   112b9:	jne    0x112d1
   112bb:	or     DWORD PTR ds:0x786e4,0x1
   112c2:	push   0x1e188
   112c7:	call   0x11200
   112cc:	mov    ds:0x786e0,eax
   112d1:	mov    eax,ds:0x786e0
   112d6:	ret    
   112d7:	int3   
   112d8:	int3   
   112d9:	int3   
   112da:	int3   
   112db:	int3   
   112dc:	test   BYTE PTR ds:0x786ec,0x1
   112e3:	jne    0x112fb
   112e5:	or     DWORD PTR ds:0x786ec,0x1
   112ec:	push   0x1e1c0
   112f1:	call   0x11200
   112f6:	mov    ds:0x786e8,eax
   112fb:	mov    eax,ds:0x786e8
   11300:	ret    
   11301:	int3   
   11302:	int3   
   11303:	int3   
   11304:	int3   
   11305:	int3   
   11306:	test   BYTE PTR ds:0x786f4,0x1
   1130d:	jne    0x11325
   1130f:	or     DWORD PTR ds:0x786f4,0x1
   11316:	push   0x1e1e2
   1131b:	call   0x11200
   11320:	mov    ds:0x786f0,eax
   11325:	mov    eax,ds:0x786f0
   1132a:	ret    
   1132b:	int3   
   1132c:	int3   
   1132d:	int3   
   1132e:	int3   
   1132f:	int3   
   11330:	test   BYTE PTR ds:0x786fc,0x1
   11337:	jne    0x1134f
   11339:	or     DWORD PTR ds:0x786fc,0x1
   11340:	push   0x1e222
   11345:	call   0x11200
   1134a:	mov    ds:0x786f8,eax
   1134f:	mov    eax,ds:0x786f8
   11354:	ret    
   11355:	int3   
   11356:	int3   
   11357:	int3   
   11358:	int3   
   11359:	int3   
   1135a:	test   BYTE PTR ds:0x78704,0x1
   11361:	jne    0x11379
   11363:	or     DWORD PTR ds:0x78704,0x1
   1136a:	push   0x1e238
   1136f:	call   0x11200
   11374:	mov    ds:0x78700,eax
   11379:	mov    eax,ds:0x78700
   1137e:	ret    
   1137f:	int3   
   11380:	int3   
   11381:	int3   
   11382:	int3   
   11383:	int3   
   11384:	test   BYTE PTR ds:0x7870c,0x1
   1138b:	jne    0x113a3
   1138d:	or     DWORD PTR ds:0x7870c,0x1
   11394:	push   0x1e26c
   11399:	call   0x11200
   1139e:	mov    ds:0x78708,eax
   113a3:	mov    eax,ds:0x78708
   113a8:	ret    
   113a9:	int3   
   113aa:	int3   
   113ab:	int3   
   113ac:	int3   
   113ad:	int3   
   113ae:	test   BYTE PTR ds:0x78714,0x1
   113b5:	jne    0x113cd
   113b7:	or     DWORD PTR ds:0x78714,0x1
   113be:	push   0x1e29e
   113c3:	call   0x11200
   113c8:	mov    ds:0x78710,eax
   113cd:	mov    eax,ds:0x78710
   113d2:	ret    
   113d3:	int3   
   113d4:	int3   
   113d5:	int3   
   113d6:	int3   
   113d7:	int3   
   113d8:	test   BYTE PTR ds:0x7871c,0x1
   113df:	jne    0x113f7
   113e1:	or     DWORD PTR ds:0x7871c,0x1
   113e8:	push   0x1e2b2
   113ed:	call   0x11200
   113f2:	mov    ds:0x78718,eax
   113f7:	mov    eax,ds:0x78718
   113fc:	ret    
   113fd:	int3   
   113fe:	int3   
   113ff:	int3   
   11400:	int3   
   11401:	int3   
   11402:	test   BYTE PTR ds:0x78724,0x1
   11409:	jne    0x11421
   1140b:	or     DWORD PTR ds:0x78724,0x1
   11412:	push   0x1e2ca
   11417:	call   0x11200
   1141c:	mov    ds:0x78720,eax
   11421:	mov    eax,ds:0x78720
   11426:	ret    
   11427:	int3   
   11428:	int3   
   11429:	int3   
   1142a:	int3   
   1142b:	int3   
   1142c:	test   BYTE PTR ds:0x7872c,0x1
   11433:	jne    0x1144b
   11435:	or     DWORD PTR ds:0x7872c,0x1
   1143c:	push   0x1e2e6
   11441:	call   0x11200
   11446:	mov    ds:0x78728,eax
   1144b:	mov    eax,ds:0x78728
   11450:	ret    
   11451:	int3   
   11452:	int3   
   11453:	int3   
   11454:	int3   
   11455:	int3   
   11456:	test   BYTE PTR ds:0x78734,0x1
   1145d:	jne    0x11475
   1145f:	or     DWORD PTR ds:0x78734,0x1
   11466:	push   0x1e320
   1146b:	call   0x11200
   11470:	mov    ds:0x78730,eax
   11475:	mov    eax,ds:0x78730
   1147a:	ret    
   1147b:	int3   
   1147c:	int3   
   1147d:	int3   
   1147e:	int3   
   1147f:	int3   
   11480:	test   BYTE PTR ds:0x7873c,0x1
   11487:	jne    0x1149f
   11489:	or     DWORD PTR ds:0x7873c,0x1
   11490:	push   0x1e33a
   11495:	call   0x11200
   1149a:	mov    ds:0x78738,eax
   1149f:	mov    eax,ds:0x78738
   114a4:	ret    
   114a5:	int3   
   114a6:	int3   
   114a7:	int3   
   114a8:	int3   
   114a9:	int3   
   114aa:	test   BYTE PTR ds:0x78744,0x1
   114b1:	jne    0x114c9
   114b3:	or     DWORD PTR ds:0x78744,0x1
   114ba:	push   0x1e35c
   114bf:	call   0x11200
   114c4:	mov    ds:0x78740,eax
   114c9:	mov    eax,ds:0x78740
   114ce:	ret    
   114cf:	int3   
   114d0:	int3   
   114d1:	int3   
   114d2:	int3   
   114d3:	int3   
   114d4:	test   BYTE PTR ds:0x7874c,0x1
   114db:	jne    0x114f3
   114dd:	or     DWORD PTR ds:0x7874c,0x1
   114e4:	push   0x1e396
   114e9:	call   0x11200
   114ee:	mov    ds:0x78748,eax
   114f3:	mov    eax,ds:0x78748
   114f8:	ret    
   114f9:	int3   
   114fa:	int3   
   114fb:	int3   
   114fc:	int3   
   114fd:	int3   
   114fe:	test   BYTE PTR ds:0x78754,0x1
   11505:	jne    0x1151d
   11507:	or     DWORD PTR ds:0x78754,0x1
   1150e:	push   0x1e3bc
   11513:	call   0x11200
   11518:	mov    ds:0x78750,eax
   1151d:	mov    eax,ds:0x78750
   11522:	ret    
   11523:	int3   
   11524:	int3   
   11525:	int3   
   11526:	int3   
   11527:	int3   
   11528:	test   BYTE PTR ds:0x7875c,0x1
   1152f:	jne    0x11547
   11531:	or     DWORD PTR ds:0x7875c,0x1
   11538:	push   0x1e3ec
   1153d:	call   0x11200
   11542:	mov    ds:0x78758,eax
   11547:	mov    eax,ds:0x78758
   1154c:	ret    
   1154d:	int3   
   1154e:	int3   
   1154f:	int3   
   11550:	int3   
   11551:	int3   
   11552:	test   BYTE PTR ds:0x78764,0x1
   11559:	jne    0x11571
   1155b:	or     DWORD PTR ds:0x78764,0x1
   11562:	push   0x1e41e
   11567:	call   0x11200
   1156c:	mov    ds:0x78760,eax
   11571:	mov    eax,ds:0x78760
   11576:	ret    
   11577:	int3   
   11578:	int3   
   11579:	int3   
   1157a:	int3   
   1157b:	int3   
   1157c:	test   BYTE PTR ds:0x7876c,0x1
   11583:	jne    0x1159b
   11585:	or     DWORD PTR ds:0x7876c,0x1
   1158c:	push   0x1e42e
   11591:	call   0x11200
   11596:	mov    ds:0x78768,eax
   1159b:	mov    eax,ds:0x78768
   115a0:	ret    
   115a1:	int3   
   115a2:	int3   
   115a3:	int3   
   115a4:	int3   
   115a5:	int3   
   115a6:	test   BYTE PTR ds:0x78774,0x1
   115ad:	jne    0x115c5
   115af:	or     DWORD PTR ds:0x78774,0x1
   115b6:	push   0x1e458
   115bb:	call   0x11200
   115c0:	mov    ds:0x78770,eax
   115c5:	mov    eax,ds:0x78770
   115ca:	ret    
   115cb:	int3   
   115cc:	int3   
   115cd:	int3   
   115ce:	int3   
   115cf:	int3   
   115d0:	test   BYTE PTR ds:0x7877c,0x1
   115d7:	jne    0x115ef
   115d9:	or     DWORD PTR ds:0x7877c,0x1
   115e0:	push   0x1e474
   115e5:	call   0x11200
   115ea:	mov    ds:0x78778,eax
   115ef:	mov    eax,ds:0x78778
   115f4:	ret    
   115f5:	int3   
   115f6:	int3   
   115f7:	int3   
   115f8:	int3   
   115f9:	int3   
   115fa:	test   BYTE PTR ds:0x78784,0x1
   11601:	jne    0x11619
   11603:	or     DWORD PTR ds:0x78784,0x1
   1160a:	push   0x1e4b0
   1160f:	call   0x11200
   11614:	mov    ds:0x78780,eax
   11619:	mov    eax,ds:0x78780
   1161e:	ret    
   1161f:	int3   
   11620:	int3   
   11621:	int3   
   11622:	int3   
   11623:	int3   
   11624:	test   BYTE PTR ds:0x7878c,0x1
   1162b:	jne    0x11643
   1162d:	or     DWORD PTR ds:0x7878c,0x1
   11634:	push   0x1e4d4
   11639:	call   0x11200
   1163e:	mov    ds:0x78788,eax
   11643:	mov    eax,ds:0x78788
   11648:	ret    
   11649:	int3   
   1164a:	int3   
   1164b:	int3   
   1164c:	int3   
   1164d:	int3   
   1164e:	test   BYTE PTR ds:0x78794,0x1
   11655:	jne    0x1166d
   11657:	or     DWORD PTR ds:0x78794,0x1
   1165e:	push   0x1e4fe
   11663:	call   0x11200
   11668:	mov    ds:0x78790,eax
   1166d:	mov    eax,ds:0x78790
   11672:	ret    
   11673:	int3   
   11674:	int3   
   11675:	int3   
   11676:	int3   
   11677:	int3   
   11678:	test   BYTE PTR ds:0x7879c,0x1
   1167f:	jne    0x11697
   11681:	or     DWORD PTR ds:0x7879c,0x1
   11688:	push   0x1e52a
   1168d:	call   0x11200
   11692:	mov    ds:0x78798,eax
   11697:	mov    eax,ds:0x78798
   1169c:	ret    
   1169d:	int3   
   1169e:	int3   
   1169f:	int3   
   116a0:	int3   
   116a1:	int3   
   116a2:	test   BYTE PTR ds:0x787a4,0x1
   116a9:	jne    0x116c1
   116ab:	or     DWORD PTR ds:0x787a4,0x1
   116b2:	push   0x1e53e
   116b7:	call   0x11200
   116bc:	mov    ds:0x787a0,eax
   116c1:	mov    eax,ds:0x787a0
   116c6:	ret    
   116c7:	int3   
   116c8:	int3   
   116c9:	int3   
   116ca:	int3   
   116cb:	int3   
   116cc:	test   BYTE PTR ds:0x787ac,0x1
   116d3:	jne    0x116eb
   116d5:	or     DWORD PTR ds:0x787ac,0x1
   116dc:	push   0x1e56e
   116e1:	call   0x11200
   116e6:	mov    ds:0x787a8,eax
   116eb:	mov    eax,ds:0x787a8
   116f0:	ret    
   116f1:	int3   
   116f2:	int3   
   116f3:	int3   
   116f4:	int3   
   116f5:	int3   
   116f6:	test   BYTE PTR ds:0x787b4,0x1
   116fd:	jne    0x11715
   116ff:	or     DWORD PTR ds:0x787b4,0x1
   11706:	push   0x1e58c
   1170b:	call   0x11200
   11710:	mov    ds:0x787b0,eax
   11715:	mov    eax,ds:0x787b0
   1171a:	ret    
   1171b:	int3   
   1171c:	int3   
   1171d:	int3   
   1171e:	int3   
   1171f:	int3   
   11720:	test   BYTE PTR ds:0x787bc,0x1
   11727:	jne    0x1173f
   11729:	or     DWORD PTR ds:0x787bc,0x1
   11730:	push   0x1e5a6
   11735:	call   0x11200
   1173a:	mov    ds:0x787b8,eax
   1173f:	mov    eax,ds:0x787b8
   11744:	ret    
   11745:	int3   
   11746:	int3   
   11747:	int3   
   11748:	int3   
   11749:	int3   
   1174a:	test   BYTE PTR ds:0x787c4,0x1
   11751:	jne    0x11769
   11753:	or     DWORD PTR ds:0x787c4,0x1
   1175a:	push   0x1e5be
   1175f:	call   0x11200
   11764:	mov    ds:0x787c0,eax
   11769:	mov    eax,ds:0x787c0
   1176e:	ret    
   1176f:	int3   
   11770:	int3   
   11771:	int3   
   11772:	int3   
   11773:	int3   
   11774:	test   BYTE PTR ds:0x787cc,0x1
   1177b:	jne    0x11793
   1177d:	or     DWORD PTR ds:0x787cc,0x1
   11784:	push   0x1e5dc
   11789:	call   0x11200
   1178e:	mov    ds:0x787c8,eax
   11793:	mov    eax,ds:0x787c8
   11798:	ret    
   11799:	int3   
   1179a:	int3   
   1179b:	int3   
   1179c:	int3   
   1179d:	int3   
   1179e:	test   BYTE PTR ds:0x787d4,0x1
   117a5:	jne    0x117bd
   117a7:	or     DWORD PTR ds:0x787d4,0x1
   117ae:	push   0x1e5fc
   117b3:	call   0x11200
   117b8:	mov    ds:0x787d0,eax
   117bd:	mov    eax,ds:0x787d0
   117c2:	ret    
   117c3:	int3   
   117c4:	int3   
   117c5:	int3   
   117c6:	int3   
   117c7:	int3   
   117c8:	test   BYTE PTR ds:0x787dc,0x1
   117cf:	jne    0x117e7
   117d1:	or     DWORD PTR ds:0x787dc,0x1
   117d8:	push   0x1e61c
   117dd:	call   0x11200
   117e2:	mov    ds:0x787d8,eax
   117e7:	mov    eax,ds:0x787d8
   117ec:	ret    
   117ed:	int3   
   117ee:	int3   
   117ef:	int3   
   117f0:	int3   
   117f1:	int3   
   117f2:	test   BYTE PTR ds:0x787e4,0x1
   117f9:	jne    0x11811
   117fb:	or     DWORD PTR ds:0x787e4,0x1
   11802:	push   0x1e63c
   11807:	call   0x11200
   1180c:	mov    ds:0x787e0,eax
   11811:	mov    eax,ds:0x787e0
   11816:	ret    
   11817:	int3   
   11818:	int3   
   11819:	int3   
   1181a:	int3   
   1181b:	int3   
   1181c:	test   BYTE PTR ds:0x787ec,0x1
   11823:	jne    0x1183b
   11825:	or     DWORD PTR ds:0x787ec,0x1
   1182c:	push   0x1e652
   11831:	call   0x11200
   11836:	mov    ds:0x787e8,eax
   1183b:	mov    eax,ds:0x787e8
   11840:	ret    
   11841:	int3   
   11842:	int3   
   11843:	int3   
   11844:	int3   
   11845:	int3   
   11846:	test   BYTE PTR ds:0x787f4,0x1
   1184d:	jne    0x11865
   1184f:	or     DWORD PTR ds:0x787f4,0x1
   11856:	push   0x1e67c
   1185b:	call   0x11200
   11860:	mov    ds:0x787f0,eax
   11865:	mov    eax,ds:0x787f0
   1186a:	ret    
   1186b:	int3   
   1186c:	int3   
   1186d:	int3   
   1186e:	int3   
   1186f:	int3   
   11870:	test   BYTE PTR ds:0x787fc,0x1
   11877:	jne    0x1188f
   11879:	or     DWORD PTR ds:0x787fc,0x1
   11880:	push   0x1e694
   11885:	call   0x11200
   1188a:	mov    ds:0x787f8,eax
   1188f:	mov    eax,ds:0x787f8
   11894:	ret    
   11895:	int3   
   11896:	int3   
   11897:	int3   
   11898:	int3   
   11899:	int3   
   1189a:	test   BYTE PTR ds:0x78804,0x1
   118a1:	jne    0x118b9
   118a3:	or     DWORD PTR ds:0x78804,0x1
   118aa:	push   0x1e6c2
   118af:	call   0x11200
   118b4:	mov    ds:0x78800,eax
   118b9:	mov    eax,ds:0x78800
   118be:	ret    
   118bf:	int3   
   118c0:	int3   
   118c1:	int3   
   118c2:	int3   
   118c3:	int3   
   118c4:	test   BYTE PTR ds:0x7880c,0x1
   118cb:	jne    0x118e3
   118cd:	or     DWORD PTR ds:0x7880c,0x1
   118d4:	push   0x1e6ec
   118d9:	call   0x11200
   118de:	mov    ds:0x78808,eax
   118e3:	mov    eax,ds:0x78808
   118e8:	ret    
   118e9:	int3   
   118ea:	int3   
   118eb:	int3   
   118ec:	int3   
   118ed:	int3   
   118ee:	test   BYTE PTR ds:0x78814,0x1
   118f5:	jne    0x1190d
   118f7:	or     DWORD PTR ds:0x78814,0x1
   118fe:	push   0x1e70a
   11903:	call   0x11200
   11908:	mov    ds:0x78810,eax
   1190d:	mov    eax,ds:0x78810
   11912:	ret    
   11913:	int3   
   11914:	int3   
   11915:	int3   
   11916:	int3   
   11917:	int3   
   11918:	test   BYTE PTR ds:0x7881c,0x1
   1191f:	jne    0x11937
   11921:	or     DWORD PTR ds:0x7881c,0x1
   11928:	push   0x1e738
   1192d:	call   0x11200
   11932:	mov    ds:0x78818,eax
   11937:	mov    eax,ds:0x78818
   1193c:	ret    
   1193d:	int3   
   1193e:	int3   
   1193f:	int3   
   11940:	int3   
   11941:	int3   
   11942:	test   BYTE PTR ds:0x78824,0x1
   11949:	jne    0x11961
   1194b:	or     DWORD PTR ds:0x78824,0x1
   11952:	push   0x1e75c
   11957:	call   0x11200
   1195c:	mov    ds:0x78820,eax
   11961:	mov    eax,ds:0x78820
   11966:	ret    
   11967:	int3   
   11968:	int3   
   11969:	int3   
   1196a:	int3   
   1196b:	int3   
   1196c:	test   BYTE PTR ds:0x7882c,0x1
   11973:	jne    0x1198b
   11975:	or     DWORD PTR ds:0x7882c,0x1
   1197c:	push   0x1e782
   11981:	call   0x11200
   11986:	mov    ds:0x78828,eax
   1198b:	mov    eax,ds:0x78828
   11990:	ret    
   11991:	int3   
   11992:	int3   
   11993:	int3   
   11994:	int3   
   11995:	int3   
   11996:	test   BYTE PTR ds:0x78834,0x1
   1199d:	jne    0x119b5
   1199f:	or     DWORD PTR ds:0x78834,0x1
   119a6:	push   0x1e7a2
   119ab:	call   0x11200
   119b0:	mov    ds:0x78830,eax
   119b5:	mov    eax,ds:0x78830
   119ba:	ret    
   119bb:	int3   
   119bc:	int3   
   119bd:	int3   
   119be:	int3   
   119bf:	int3   
   119c0:	test   BYTE PTR ds:0x7883c,0x1
   119c7:	jne    0x119df
   119c9:	or     DWORD PTR ds:0x7883c,0x1
   119d0:	push   0x1e7cc
   119d5:	call   0x11200
   119da:	mov    ds:0x78838,eax
   119df:	mov    eax,ds:0x78838
   119e4:	ret    
   119e5:	int3   
   119e6:	int3   
   119e7:	int3   
   119e8:	int3   
   119e9:	int3   
   119ea:	test   BYTE PTR ds:0x78844,0x1
   119f1:	jne    0x11a09
   119f3:	or     DWORD PTR ds:0x78844,0x1
   119fa:	push   0x1e7f0
   119ff:	call   0x11200
   11a04:	mov    ds:0x78840,eax
   11a09:	mov    eax,ds:0x78840
   11a0e:	ret    
   11a0f:	int3   
   11a10:	int3   
   11a11:	int3   
   11a12:	int3   
   11a13:	int3   
   11a14:	test   BYTE PTR ds:0x7884c,0x1
   11a1b:	jne    0x11a33
   11a1d:	or     DWORD PTR ds:0x7884c,0x1
   11a24:	push   0x1e81c
   11a29:	call   0x11200
   11a2e:	mov    ds:0x78848,eax
   11a33:	mov    eax,ds:0x78848
   11a38:	ret    
   11a39:	int3   
   11a3a:	int3   
   11a3b:	int3   
   11a3c:	int3   
   11a3d:	int3   
   11a3e:	test   BYTE PTR ds:0x78854,0x1
   11a45:	jne    0x11a5d
   11a47:	or     DWORD PTR ds:0x78854,0x1
   11a4e:	push   0x1e83a
   11a53:	call   0x11200
   11a58:	mov    ds:0x78850,eax
   11a5d:	mov    eax,ds:0x78850
   11a62:	ret    
   11a63:	int3   
   11a64:	int3   
   11a65:	int3   
   11a66:	int3   
   11a67:	int3   
   11a68:	test   BYTE PTR ds:0x7885c,0x1
   11a6f:	jne    0x11a87
   11a71:	or     DWORD PTR ds:0x7885c,0x1
   11a78:	push   0x1e870
   11a7d:	call   0x11200
   11a82:	mov    ds:0x78858,eax
   11a87:	mov    eax,ds:0x78858
   11a8c:	ret    
   11a8d:	int3   
   11a8e:	int3   
   11a8f:	int3   
   11a90:	int3   
   11a91:	int3   
   11a92:	call   0x1125e
   11a97:	test   eax,eax
   11a99:	jne    0x11a9e
   11a9b:	xor    eax,eax
   11a9d:	ret    
   11a9e:	call   0x11288
   11aa3:	test   eax,eax
   11aa5:	je     0x11a9b
   11aa7:	call   0x112b2
   11aac:	test   eax,eax
   11aae:	je     0x11a9b
   11ab0:	call   0x112dc
   11ab5:	test   eax,eax
   11ab7:	je     0x11a9b
   11ab9:	call   0x11306
   11abe:	test   eax,eax
   11ac0:	je     0x11a9b
   11ac2:	call   0x11330
   11ac7:	test   eax,eax
   11ac9:	je     0x11a9b
   11acb:	call   0x1135a
   11ad0:	test   eax,eax
   11ad2:	je     0x11a9b
   11ad4:	call   0x11384
   11ad9:	test   eax,eax
   11adb:	je     0x11a9b
   11add:	call   0x113ae
   11ae2:	test   eax,eax
   11ae4:	je     0x11a9b
   11ae6:	call   0x113d8
   11aeb:	test   eax,eax
   11aed:	je     0x11a9b
   11aef:	call   0x11402
   11af4:	test   eax,eax
   11af6:	je     0x11a9b
   11af8:	call   0x1142c
   11afd:	test   eax,eax
   11aff:	je     0x11a9b
   11b01:	call   0x11456
   11b06:	test   eax,eax
   11b08:	je     0x11a9b
   11b0a:	call   0x11480
   11b0f:	test   eax,eax
   11b11:	je     0x11a9b
   11b13:	call   0x114aa
   11b18:	test   eax,eax
   11b1a:	je     0x11a9b
   11b20:	call   0x114d4
   11b25:	test   eax,eax
   11b27:	je     0x11a9b
   11b2d:	call   0x114fe
   11b32:	test   eax,eax
   11b34:	je     0x11a9b
   11b3a:	call   0x11528
   11b3f:	test   eax,eax
   11b41:	je     0x11a9b
   11b47:	call   0x11552
   11b4c:	test   eax,eax
   11b4e:	je     0x11a9b
   11b54:	call   0x1157c
   11b59:	test   eax,eax
   11b5b:	je     0x11a9b
   11b61:	call   0x115a6
   11b66:	test   eax,eax
   11b68:	je     0x11a9b
   11b6e:	call   0x115d0
   11b73:	test   eax,eax
   11b75:	je     0x11a9b
   11b7b:	call   0x115fa
   11b80:	test   eax,eax
   11b82:	je     0x11a9b
   11b88:	call   0x11624
   11b8d:	test   eax,eax
   11b8f:	je     0x11a9b
   11b95:	call   0x1164e
   11b9a:	test   eax,eax
   11b9c:	je     0x11a9b
   11ba2:	call   0x11678
   11ba7:	test   eax,eax
   11ba9:	je     0x11a9b
   11baf:	call   0x116a2
   11bb4:	test   eax,eax
   11bb6:	je     0x11a9b
   11bbc:	call   0x116cc
   11bc1:	test   eax,eax
   11bc3:	je     0x11a9b
   11bc9:	call   0x116f6
   11bce:	test   eax,eax
   11bd0:	je     0x11a9b
   11bd6:	call   0x11720
   11bdb:	test   eax,eax
   11bdd:	je     0x11a9b
   11be3:	call   0x1174a
   11be8:	test   eax,eax
   11bea:	je     0x11a9b
   11bf0:	call   0x11774
   11bf5:	test   eax,eax
   11bf7:	je     0x11a9b
   11bfd:	call   0x1179e
   11c02:	test   eax,eax
   11c04:	je     0x11a9b
   11c0a:	call   0x117c8
   11c0f:	test   eax,eax
   11c11:	je     0x11a9b
   11c17:	call   0x117f2
   11c1c:	test   eax,eax
   11c1e:	je     0x11a9b
   11c24:	call   0x1181c
   11c29:	test   eax,eax
   11c2b:	je     0x11a9b
   11c31:	call   0x11846
   11c36:	test   eax,eax
   11c38:	je     0x11a9b
   11c3e:	call   0x11870
   11c43:	test   eax,eax
   11c45:	je     0x11a9b
   11c4b:	call   0x1189a
   11c50:	test   eax,eax
   11c52:	je     0x11a9b
   11c58:	call   0x118c4
   11c5d:	test   eax,eax
   11c5f:	je     0x11a9b
   11c65:	call   0x118ee
   11c6a:	test   eax,eax
   11c6c:	je     0x11a9b
   11c72:	call   0x11918
   11c77:	test   eax,eax
   11c79:	je     0x11a9b
   11c7f:	call   0x11942
   11c84:	test   eax,eax
   11c86:	je     0x11a9b
   11c8c:	call   0x1196c
   11c91:	test   eax,eax
   11c93:	je     0x11a9b
   11c99:	call   0x11996
   11c9e:	test   eax,eax
   11ca0:	je     0x11a9b
   11ca6:	call   0x119c0
   11cab:	test   eax,eax
   11cad:	je     0x11a9b
   11cb3:	call   0x119ea
   11cb8:	test   eax,eax
   11cba:	je     0x11a9b
   11cc0:	call   0x11a14
   11cc5:	test   eax,eax
   11cc7:	je     0x11a9b
   11ccd:	call   0x11a3e
   11cd2:	test   eax,eax
   11cd4:	je     0x11a9b
   11cda:	call   0x11a68
   11cdf:	neg    eax
   11ce1:	sbb    eax,eax
   11ce3:	neg    eax
   11ce5:	ret    
   11ce6:	int3   
   11ce7:	int3   
   11ce8:	int3   
   11ce9:	int3   
   11cea:	int3   
   11ceb:	int3   
   11cec:	mov    edi,edi
   11cee:	push   ebp
   11cef:	mov    ebp,esp
   11cf1:	push   esi
   11cf2:	push   0x20
   11cf4:	push   0x61737973
   11cf9:	push   DWORD PTR [ebp+0x8]
   11cfc:	push   0x1
   11cfe:	call   0x115d0
   11d03:	call   eax
   11d05:	mov    esi,eax
   11d07:	test   esi,esi
   11d09:	jne    0x11d17
   11d0b:	push   0xc000009a
   11d10:	call   0x115a6
   11d15:	call   eax
   11d17:	mov    eax,esi
   11d19:	pop    esi
   11d1a:	pop    ebp
   11d1b:	ret    
   11d1c:	int3   
   11d1d:	int3   
   11d1e:	int3   
   11d1f:	int3   
   11d20:	int3   
   11d21:	int3   
   11d22:	mov    edi,edi
   11d24:	push   ebp
   11d25:	mov    ebp,esp
   11d27:	cmp    DWORD PTR [ebp+0x8],0x0
   11d2b:	je     0x11d39
   11d2d:	push   0x0
   11d2f:	push   DWORD PTR [ebp+0x8]
   11d32:	call   0x115fa
   11d37:	call   eax
   11d39:	pop    ebp
   11d3a:	ret    
   11d3b:	int3   
   11d3c:	int3   
   11d3d:	int3   
   11d3e:	int3   
   11d3f:	int3   
   11d40:	mov    edi,edi
   11d42:	push   ebp
   11d43:	mov    ebp,esp
   11d45:	mov    eax,ecx
   11d47:	mov    ecx,DWORD PTR [ebp+0x8]
   11d4a:	mov    edx,DWORD PTR [ecx]
   11d4c:	test   edx,edx
   11d4e:	je     0x11d57
   11d50:	mov    DWORD PTR [eax],edx
   11d52:	inc    DWORD PTR [edx+0x4]
   11d55:	jmp    0x11d5a
   11d57:	and    DWORD PTR [eax],0x0
   11d5a:	pop    ebp
   11d5b:	ret    0x4
   11d5e:	int3   
   11d5f:	int3   
   11d60:	int3   
   11d61:	int3   
   11d62:	int3   
   11d63:	int3   
   11d64:	mov    edi,edi
   11d66:	push   esi
   11d67:	mov    esi,ecx
   11d69:	dec    DWORD PTR [esi+0x4]
   11d6c:	jne    0x11d7d
   11d6e:	push   DWORD PTR [esi]
   11d70:	call   0x11d22
   11d75:	push   esi
   11d76:	call   0x11d22
   11d7b:	pop    ecx
   11d7c:	pop    ecx
   11d7d:	pop    esi
   11d7e:	ret    
   11d7f:	int3   
   11d80:	int3   
   11d81:	int3   
   11d82:	int3   
   11d83:	int3   
   11d84:	mov    edi,edi
   11d86:	push   ebp
   11d87:	mov    ebp,esp
   11d89:	push   ecx
   11d8a:	push   edi
   11d8b:	lea    eax,[ebp-0x4]
   11d8e:	push   eax
   11d8f:	xor    edi,edi
   11d91:	push   edi
   11d92:	push   edi
   11d93:	push   0x1b
   11d95:	push   DWORD PTR [ebp+0x8]
   11d98:	call   0x1135a
   11d9d:	call   eax
   11d9f:	cmp    eax,0xc0000004
   11da4:	jne    0x11e0f
   11da6:	mov    ecx,DWORD PTR [ebp-0x4]
   11da9:	push   ebx
   11daa:	mov    ebx,DWORD PTR [ebp+0xc]
   11dad:	movzx  edx,WORD PTR [ebx+0x2]
   11db1:	lea    eax,[ecx-0x8]
   11db4:	cmp    edx,eax
   11db6:	jae    0x11dc2
   11db8:	mov    WORD PTR [ebx],ax
   11dbb:	mov    eax,0x80000005
   11dc0:	jmp    0x11e0e
   11dc2:	push   esi
   11dc3:	push   0x20736649
   11dc8:	push   ecx
   11dc9:	push   edi
   11dca:	call   0x1164e
   11dcf:	call   eax
   11dd1:	mov    esi,eax
   11dd3:	cmp    esi,edi
   11dd5:	jne    0x11dde
   11dd7:	mov    eax,0xc000009a
   11ddc:	jmp    0x11e0d
   11dde:	lea    eax,[ebp-0x4]
   11de1:	push   eax
   11de2:	push   DWORD PTR [ebp-0x4]
   11de5:	push   esi
   11de6:	push   0x1b
   11de8:	push   DWORD PTR [ebp+0x8]
   11deb:	call   0x1135a
   11df0:	call   eax
   11df2:	mov    edi,eax
   11df4:	test   edi,edi
   11df6:	jl     0x11e01
   11df8:	push   esi
   11df9:	push   ebx
   11dfa:	call   0x11624
   11dff:	call   eax
   11e01:	push   0x0
   11e03:	push   esi
   11e04:	call   0x115fa
   11e09:	call   eax
   11e0b:	mov    eax,edi
   11e0d:	pop    esi
   11e0e:	pop    ebx
   11e0f:	pop    edi
   11e10:	leave  
   11e11:	ret    0x8
   11e14:	int3   
   11e15:	int3   
   11e16:	int3   
   11e17:	int3   
   11e18:	int3   
   11e19:	int3   
   11e1a:	mov    edi,edi
   11e1c:	push   ebp
   11e1d:	mov    ebp,esp
   11e1f:	sub    esp,0x18
   11e22:	push   0x0
   11e24:	push   0x18
   11e26:	lea    eax,[ebp-0x18]
   11e29:	push   eax
   11e2a:	push   0x0
   11e2c:	push   DWORD PTR [ebp+0x8]
   11e2f:	call   0x1135a
   11e34:	call   eax
   11e36:	test   eax,eax
   11e38:	jl     0x11e3f
   11e3a:	mov    eax,DWORD PTR [ebp-0x8]
   11e3d:	jmp    0x11e41
   11e3f:	xor    eax,eax
   11e41:	leave  
   11e42:	ret    0x4
   11e45:	int3   
   11e46:	int3   
   11e47:	int3   
   11e48:	int3   
   11e49:	int3   
   11e4a:	mov    edi,edi
   11e4c:	push   ebp
   11e4d:	mov    ebp,esp
   11e4f:	sub    esp,0x10
   11e52:	push   esi
   11e53:	push   edi
   11e54:	xor    eax,eax
   11e56:	mov    WORD PTR [ebp-0x8],ax
   11e5a:	lea    edi,[ebp-0x6]
   11e5d:	stos   DWORD PTR es:[edi],eax
   11e5e:	stos   WORD PTR es:[edi],ax
   11e60:	mov    eax,DWORD PTR [ebp+0xc]
   11e63:	mov    DWORD PTR [ebp-0x4],eax
   11e66:	lea    ecx,[eax+0x2]
   11e69:	mov    dx,WORD PTR [eax]
   11e6c:	inc    eax
   11e6d:	inc    eax
   11e6e:	test   dx,dx
   11e71:	jne    0x11e69
   11e73:	mov    esi,DWORD PTR [ebp+0x8]
   11e76:	movzx  edx,WORD PTR [esi]
   11e79:	sub    eax,ecx
   11e7b:	sar    eax,1
   11e7d:	lea    ecx,[eax+eax*1]
   11e80:	mov    WORD PTR [ebp-0x8],cx
   11e84:	mov    WORD PTR [ebp-0x6],cx
   11e88:	cmp    dx,cx
   11e8b:	jb     0x11ecb
   11e8d:	xor    eax,eax
   11e8f:	lea    edi,[ebp-0xe]
   11e92:	stos   DWORD PTR es:[edi],eax
   11e93:	stos   WORD PTR es:[edi],ax
   11e95:	mov    WORD PTR [ebp-0x10],cx
   11e99:	mov    WORD PTR [ebp-0xe],cx
   11e9d:	movzx  eax,dx
   11ea0:	movzx  ecx,cx
   11ea3:	sub    eax,ecx
   11ea5:	mov    ecx,DWORD PTR [esi+0x4]
   11ea8:	cdq    
   11ea9:	sub    eax,edx
   11eab:	sar    eax,1
   11ead:	lea    eax,[ecx+eax*2]
   11eb0:	mov    DWORD PTR [ebp-0xc],eax
   11eb3:	push   0x1
   11eb5:	lea    eax,[ebp-0x8]
   11eb8:	push   eax
   11eb9:	lea    eax,[ebp-0x10]
   11ebc:	push   eax
   11ebd:	call   0x116a2
   11ec2:	call   eax
   11ec4:	neg    eax
   11ec6:	sbb    eax,eax
   11ec8:	inc    eax
   11ec9:	jmp    0x11ecd
   11ecb:	xor    al,al
   11ecd:	pop    edi
   11ece:	pop    esi
   11ecf:	leave  
   11ed0:	ret    0x8
   11ed3:	int3   
   11ed4:	int3   
   11ed5:	int3   
   11ed6:	int3   
   11ed7:	int3   
   11ed8:	mov    edi,edi
   11eda:	push   ebp
   11edb:	mov    ebp,esp
   11edd:	push   ebx
   11ede:	xor    eax,eax
   11ee0:	push   eax
   11ee1:	push   eax
   11ee2:	push   eax
   11ee3:	push   eax
   11ee4:	mov    ebx,0x77b2c
   11ee9:	push   ebx
   11eea:	call   0x119ea
   11eef:	call   eax
   11ef1:	test   eax,eax
   11ef3:	jge    0x11ef9
   11ef5:	xor    al,al
   11ef7:	jmp    0x11f1d
   11ef9:	push   esi
   11efa:	mov    esi,DWORD PTR [ebp+0x8]
   11efd:	push   edi
   11efe:	imul   esi,esi,0x14
   11f01:	mov    edi,DWORD PTR [ebp+0xc]
   11f04:	push   0x5
   11f06:	pop    ecx
   11f07:	push   0x0
   11f09:	add    esi,0x7857c
   11f0f:	push   ebx
   11f10:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   11f12:	call   0x11a14
   11f17:	call   eax
   11f19:	pop    edi
   11f1a:	mov    al,0x1
   11f1c:	pop    esi
   11f1d:	pop    ebx
   11f1e:	pop    ebp
   11f1f:	ret    0x8
   11f22:	int3   
   11f23:	int3   
   11f24:	int3   
   11f25:	int3   
   11f26:	int3   
   11f27:	int3   
   11f28:	mov    edi,edi
   11f2a:	push   ebp
   11f2b:	mov    ebp,esp
   11f2d:	push   ebx
   11f2e:	xor    eax,eax
   11f30:	push   eax
   11f31:	push   eax
   11f32:	push   eax
   11f33:	push   eax
   11f34:	mov    ebx,0x77b2c
   11f39:	push   ebx
   11f3a:	call   0x119ea
   11f3f:	call   eax
   11f41:	test   eax,eax
   11f43:	jl     0x11f67
   11f45:	push   esi
   11f46:	mov    esi,DWORD PTR [ebp+0xc]
   11f49:	push   edi
   11f4a:	mov    edi,DWORD PTR [ebp+0x8]
   11f4d:	imul   edi,edi,0x14
   11f50:	push   0x5
   11f52:	pop    ecx
   11f53:	push   0x0
   11f55:	add    edi,0x7857c
   11f5b:	push   ebx
   11f5c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   11f5e:	call   0x11a14
   11f63:	call   eax
   11f65:	pop    edi
   11f66:	pop    esi
   11f67:	pop    ebx
   11f68:	pop    ebp
   11f69:	ret    0x8
   11f6c:	int3   
   11f6d:	int3   
   11f6e:	int3   
   11f6f:	int3   
   11f70:	int3   
   11f71:	int3   
   11f72:	mov    edi,edi
   11f74:	push   ebp
   11f75:	mov    ebp,esp
   11f77:	sub    esp,0x14
   11f7a:	and    DWORD PTR [ebp-0x14],0x0
   11f7e:	push   edi
   11f7f:	xor    eax,eax
   11f81:	lea    edi,[ebp-0x10]
   11f84:	stos   DWORD PTR es:[edi],eax
   11f85:	stos   DWORD PTR es:[edi],eax
   11f86:	stos   DWORD PTR es:[edi],eax
   11f87:	stos   DWORD PTR es:[edi],eax
   11f88:	lea    eax,[ebp-0x14]
   11f8b:	push   eax
   11f8c:	push   DWORD PTR [ebp+0x8]
   11f8f:	call   0x11f28
   11f94:	pop    edi
   11f95:	leave  
   11f96:	ret    0x4
   11f99:	int3   
   11f9a:	int3   
   11f9b:	int3   
   11f9c:	int3   
   11f9d:	int3   
   11f9e:	mov    edi,edi
   11fa0:	push   ebp
   11fa1:	mov    ebp,esp
   11fa3:	mov    ecx,DWORD PTR ds:0x785a4
   11fa9:	sub    esp,0x38
   11fac:	push   esi
   11fad:	xor    esi,esi
   11faf:	cmp    ecx,esi
   11fb1:	jne    0x11fbb
   11fb3:	or     eax,0xffffffff
   11fb6:	jmp    0x120a2
   11fbb:	push   edi
   11fbc:	xor    eax,eax
   11fbe:	mov    DWORD PTR [ebp-0x20],esi
   11fc1:	lea    edi,[ebp-0x1c]
   11fc4:	stos   DWORD PTR es:[edi],eax
   11fc5:	lea    eax,[ebp-0x18]
   11fc8:	push   eax
   11fc9:	lea    eax,[ebp-0x38]
   11fcc:	push   eax
   11fcd:	push   0x400
   11fd2:	lea    eax,[ebp-0x10]
   11fd5:	push   eax
   11fd6:	mov    DWORD PTR [ebp-0x4],esi
   11fd9:	mov    DWORD PTR [ebp-0x38],0x18
   11fe0:	mov    DWORD PTR [ebp-0x34],esi
   11fe3:	mov    DWORD PTR [ebp-0x2c],esi
   11fe6:	mov    DWORD PTR [ebp-0x30],esi
   11fe9:	mov    DWORD PTR [ebp-0x28],esi
   11fec:	mov    DWORD PTR [ebp-0x24],esi
   11fef:	mov    DWORD PTR [ebp-0x18],ecx
   11ff2:	mov    DWORD PTR [ebp-0x14],esi
   11ff5:	call   0x1125e
   11ffa:	call   eax
   11ffc:	mov    edi,eax
   11ffe:	cmp    edi,esi
   12000:	jl     0x1209f
   12006:	lea    eax,[ebp-0xc]
   12009:	push   eax
   1200a:	push   0x8
   1200c:	push   DWORD PTR [ebp-0x10]
   1200f:	call   0x114d4
   12014:	call   eax
   12016:	mov    edi,eax
   12018:	cmp    edi,esi
   1201a:	jl     0x12095
   1201c:	lea    eax,[ebp-0x4]
   1201f:	push   eax
   12020:	push   0x1
   12022:	push   esi
   12023:	push   esi
   12024:	push   0x1
   12026:	push   DWORD PTR [ebp-0xc]
   12029:	call   0x112dc
   1202e:	call   eax
   12030:	mov    edi,eax
   12032:	cmp    edi,esi
   12034:	jl     0x1208b
   12036:	mov    eax,DWORD PTR [ebp+0x8]
   12039:	mov    DWORD PTR [ebp-0x18],eax
   1203c:	lea    eax,[ebp-0x18]
   1203f:	push   eax
   12040:	lea    eax,[ebp-0x38]
   12043:	push   eax
   12044:	push   0x200
   12049:	lea    eax,[ebp-0x8]
   1204c:	push   eax
   1204d:	call   0x1125e
   12052:	call   eax
   12054:	mov    edi,eax
   12056:	cmp    edi,esi
   12058:	jl     0x12081
   1205a:	mov    eax,DWORD PTR [ebp-0x4]
   1205d:	push   0x8
   1205f:	mov    DWORD PTR [ebp-0x20],eax
   12062:	lea    eax,[ebp-0x20]
   12065:	push   eax
   12066:	push   0x9
   12068:	push   DWORD PTR [ebp-0x8]
   1206b:	mov    DWORD PTR [ebp-0x1c],esi
   1206e:	call   0x114fe
   12073:	call   eax
   12075:	push   DWORD PTR [ebp-0x8]
   12078:	mov    edi,eax
   1207a:	call   0x11552
   1207f:	call   eax
   12081:	push   DWORD PTR [ebp-0x4]
   12084:	call   0x11552
   12089:	call   eax
   1208b:	push   DWORD PTR [ebp-0xc]
   1208e:	call   0x11552
   12093:	call   eax
   12095:	push   DWORD PTR [ebp-0x10]
   12098:	call   0x11552
   1209d:	call   eax
   1209f:	mov    eax,edi
   120a1:	pop    edi
   120a2:	pop    esi
   120a3:	leave  
   120a4:	ret    0x4
   120a7:	int3   
   120a8:	int3   
   120a9:	int3   
   120aa:	int3   
   120ab:	int3   
   120ac:	mov    edi,edi
   120ae:	push   ebp
   120af:	mov    ebp,esp
   120b1:	push   ebx
   120b2:	xor    eax,eax
   120b4:	push   eax
   120b5:	push   eax
   120b6:	push   eax
   120b7:	push   eax
   120b8:	mov    ebx,0x784b8
   120bd:	push   ebx
   120be:	call   0x119ea
   120c3:	call   eax
   120c5:	test   eax,eax
   120c7:	jl     0x120e4
   120c9:	push   esi
   120ca:	mov    esi,DWORD PTR [ebp+0x8]
   120cd:	push   edi
   120ce:	push   0x40
   120d0:	pop    ecx
   120d1:	push   0x0
   120d3:	mov    edi,0x785a8
   120d8:	push   ebx
   120d9:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   120db:	call   0x11a14
   120e0:	call   eax
   120e2:	pop    edi
   120e3:	pop    esi
   120e4:	pop    ebx
   120e5:	pop    ebp
   120e6:	ret    0x4
   120e9:	int3   
   120ea:	int3   
   120eb:	int3   
   120ec:	int3   
   120ed:	int3   
   120ee:	mov    edi,edi
   120f0:	push   ebp
   120f1:	mov    ebp,esp
   120f3:	push   ebx
   120f4:	xor    eax,eax
   120f6:	push   eax
   120f7:	push   eax
   120f8:	push   eax
   120f9:	push   eax
   120fa:	mov    ebx,0x784b8
   120ff:	push   ebx
   12100:	call   0x119ea
   12105:	call   eax
   12107:	test   eax,eax
   12109:	jge    0x1210f
   1210b:	xor    al,al
   1210d:	jmp    0x12136
   1210f:	push   esi
   12110:	push   edi
   12111:	mov    edi,DWORD PTR [ebp+0x8]
   12114:	push   0x40
   12116:	pop    ecx
   12117:	push   0x0
   12119:	mov    esi,0x785a8
   1211e:	push   ebx
   1211f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   12121:	call   0x11a14
   12126:	call   eax
   12128:	xor    eax,eax
   1212a:	cmp    WORD PTR ds:0x785a8,ax
   12131:	pop    edi
   12132:	setne  al
   12135:	pop    esi
   12136:	pop    ebx
   12137:	pop    ebp
   12138:	ret    0x4
   1213b:	int3   
   1213c:	int3   
   1213d:	int3   
   1213e:	int3   
   1213f:	int3   
   12140:	mov    edi,edi
   12142:	push   ebp
   12143:	mov    ebp,esp
   12145:	sub    esp,0x43c
   1214b:	mov    eax,ds:0x77b1c
   12150:	xor    eax,ebp
   12152:	mov    DWORD PTR [ebp-0x4],eax
   12155:	mov    eax,DWORD PTR [ebp+0xc]
   12158:	push   ebx
   12159:	push   esi
   1215a:	mov    esi,DWORD PTR [ebp+0x8]
   1215d:	push   edi
   1215e:	xor    ebx,ebx
   12160:	push   0x3ff
   12165:	mov    DWORD PTR [ebp-0x418],eax
   1216b:	lea    eax,[ebp-0x403]
   12171:	push   ebx
   12172:	push   eax
   12173:	mov    DWORD PTR [ebp-0x424],esi
   12179:	mov    BYTE PTR [ebp-0x404],bl
   1217f:	call   0x1dcb6
   12184:	add    esp,0xc
   12187:	lea    eax,[ebp-0x410]
   1218d:	push   eax
   1218e:	push   0x400
   12193:	lea    eax,[ebp-0x404]
   12199:	push   eax
   1219a:	push   ebx
   1219b:	push   ebx
   1219c:	push   esi
   1219d:	jmp    0x1234c
   121a2:	cmp    eax,ebx
   121a4:	jl     0x1236e
   121aa:	mov    eax,DWORD PTR [ebp-0x418]
   121b0:	lea    edx,[eax+0x2]
   121b3:	mov    cx,WORD PTR [eax]
   121b6:	inc    eax
   121b7:	inc    eax
   121b8:	cmp    cx,bx
   121bb:	jne    0x121b3
   121bd:	mov    ecx,DWORD PTR [ebp-0x3f8]
   121c3:	sub    eax,edx
   121c5:	shr    ecx,1
   121c7:	sar    eax,1
   121c9:	lea    esi,[ecx+eax*1+0x2]
   121cd:	xor    ecx,ecx
   121cf:	push   0x2
   121d1:	pop    edx
   121d2:	mov    eax,esi
   121d4:	mul    edx
   121d6:	seto   cl
   121d9:	neg    ecx
   121db:	or     ecx,eax
   121dd:	push   ecx
   121de:	call   0x11cec
   121e3:	mov    edi,eax
   121e5:	lea    eax,[esi+esi*1]
   121e8:	push   eax
   121e9:	push   ebx
   121ea:	push   edi
   121eb:	mov    DWORD PTR [ebp-0x40c],edi
   121f1:	call   0x1dcb6
   121f6:	mov    eax,DWORD PTR [ebp-0x418]
   121fc:	add    esp,0x10
   121ff:	mov    ecx,eax
   12201:	mov    dx,WORD PTR [eax]
   12204:	inc    eax
   12205:	inc    eax
   12206:	cmp    dx,bx
   12209:	jne    0x12201
   1220b:	sub    eax,ecx
   1220d:	dec    edi
   1220e:	mov    esi,ecx
   12210:	dec    edi
   12211:	mov    cx,WORD PTR [edi+0x2]
   12215:	inc    edi
   12216:	inc    edi
   12217:	cmp    cx,bx
   1221a:	jne    0x12211
   1221c:	mov    ecx,eax
   1221e:	shr    ecx,0x2
   12221:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   12223:	mov    ecx,eax
   12225:	and    ecx,0x3
   12228:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1222a:	mov    edi,DWORD PTR [ebp-0x40c]
   12230:	dec    edi
   12231:	dec    edi
   12232:	mov    ax,WORD PTR [edi+0x2]
   12236:	inc    edi
   12237:	inc    edi
   12238:	cmp    ax,bx
   1223b:	jne    0x12232
   1223d:	mov    esi,0x1e06a
   12242:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   12243:	mov    eax,DWORD PTR [ebp-0x3f8]
   12249:	shr    eax,1
   1224b:	push   eax
   1224c:	lea    eax,[ebp-0x3f4]
   12252:	push   eax
   12253:	push   DWORD PTR [ebp-0x40c]
   12259:	call   0x1dcc2
   1225e:	mov    esi,DWORD PTR [ebp-0x40c]
   12264:	mov    eax,esi
   12266:	add    esp,0xc
   12269:	mov    DWORD PTR [ebp-0x41c],esi
   1226f:	lea    edx,[eax+0x2]
   12272:	mov    cx,WORD PTR [eax]
   12275:	inc    eax
   12276:	inc    eax
   12277:	cmp    cx,bx
   1227a:	jne    0x12272
   1227c:	sub    eax,edx
   1227e:	sar    eax,1
   12280:	add    eax,eax
   12282:	mov    WORD PTR [ebp-0x41e],ax
   12289:	mov    WORD PTR [ebp-0x420],ax
   12290:	lea    eax,[ebp-0x420]
   12296:	mov    DWORD PTR [ebp-0x434],eax
   1229c:	lea    eax,[ebp-0x43c]
   122a2:	push   eax
   122a3:	push   0xf003f
   122a8:	lea    eax,[ebp-0x414]
   122ae:	push   eax
   122af:	mov    DWORD PTR [ebp-0x43c],0x18
   122b9:	mov    DWORD PTR [ebp-0x438],ebx
   122bf:	mov    DWORD PTR [ebp-0x430],0x40
   122c9:	mov    DWORD PTR [ebp-0x42c],ebx
   122cf:	mov    DWORD PTR [ebp-0x428],ebx
   122d5:	call   0x113ae
   122da:	call   eax
   122dc:	push   esi
   122dd:	test   eax,eax
   122df:	jl     0x12368
   122e5:	push   DWORD PTR [ebp-0x414]
   122eb:	call   0x12140
   122f0:	push   esi
   122f1:	mov    BYTE PTR [ebp-0x405],al
   122f7:	call   0x11d22
   122fc:	pop    ecx
   122fd:	push   DWORD PTR [ebp-0x414]
   12303:	call   0x113d8
   12308:	call   eax
   1230a:	test   eax,eax
   1230c:	jl     0x1236e
   1230e:	cmp    BYTE PTR [ebp-0x405],bl
   12314:	je     0x1236e
   12316:	push   0x3ff
   1231b:	lea    eax,[ebp-0x403]
   12321:	push   ebx
   12322:	push   eax
   12323:	mov    BYTE PTR [ebp-0x404],bl
   12329:	call   0x1dcb6
   1232e:	add    esp,0xc
   12331:	lea    eax,[ebp-0x410]
   12337:	push   eax
   12338:	push   0x400
   1233d:	lea    eax,[ebp-0x404]
   12343:	push   eax
   12344:	push   ebx
   12345:	push   ebx
   12346:	push   DWORD PTR [ebp-0x424]
   1234c:	mov    DWORD PTR [ebp-0x410],ebx
   12352:	call   0x116cc
   12357:	call   eax
   12359:	cmp    eax,0x8000001a
   1235e:	jne    0x121a2
   12364:	mov    al,0x1
   12366:	jmp    0x12370
   12368:	call   0x11d22
   1236d:	pop    ecx
   1236e:	xor    al,al
   12370:	mov    ecx,DWORD PTR [ebp-0x4]
   12373:	pop    edi
   12374:	pop    esi
   12375:	xor    ecx,ebp
   12377:	pop    ebx
   12378:	call   0x1dc5d
   1237d:	leave  
   1237e:	ret    0x8
   12381:	int3   
   12382:	int3   
   12383:	int3   
   12384:	int3   
   12385:	int3   
   12386:	mov    eax,ds:0x78524
   1238b:	test   eax,eax
   1238d:	je     0x1239e
   1238f:	push   eax
   12390:	call   0x1174a
   12395:	call   eax
   12397:	and    DWORD PTR ds:0x78524,0x0
   1239e:	ret    
   1239f:	int3   
   123a0:	int3   
   123a1:	int3   
   123a2:	int3   
   123a3:	int3   
   123a4:	push   0x28
   123a6:	push   0x77778
   123ab:	call   0x1dcf4
   123b0:	xor    eax,eax
   123b2:	mov    DWORD PTR [ebp-0x28],eax
   123b5:	mov    DWORD PTR [ebp-0x2c],eax
   123b8:	mov    ebx,DWORD PTR [ebp+0x8]
   123bb:	cmp    ebx,eax
   123bd:	jne    0x123c6
   123bf:	xor    eax,eax
   123c1:	jmp    0x124a3
   123c6:	mov    DWORD PTR [ebp-0x4],eax
   123c9:	lea    ecx,[ebp-0x2c]
   123cc:	push   ecx
   123cd:	push   eax
   123ce:	push   0x1
   123d0:	push   ebx
   123d1:	call   0x114aa
   123d6:	call   eax
   123d8:	mov    edx,eax
   123da:	sub    edx,ebx
   123dc:	mov    DWORD PTR [ebp-0x38],edx
   123df:	mov    esi,DWORD PTR [eax+0x1c]
   123e2:	add    esi,ebx
   123e4:	mov    edi,DWORD PTR [eax+0x24]
   123e7:	add    edi,ebx
   123e9:	mov    ecx,DWORD PTR [eax+0x20]
   123ec:	add    ecx,ebx
   123ee:	and    DWORD PTR [ebp-0x20],0x0
   123f2:	mov    ebx,DWORD PTR [ebp-0x20]
   123f5:	cmp    ebx,DWORD PTR [eax+0x18]
   123f8:	jae    0x1248b
   123fe:	movsx  ebx,WORD PTR [edi+ebx*2]
   12402:	cmp    ebx,DWORD PTR [eax+0x14]
   12405:	jae    0x1247f
   12407:	lea    ebx,[esi+ebx*4]
   1240a:	mov    DWORD PTR [ebp-0x34],ebx
   1240d:	cmp    DWORD PTR [ebx],edx
   1240f:	jb     0x1241d
   12411:	mov    ebx,DWORD PTR [ebp-0x2c]
   12414:	add    edx,ebx
   12416:	mov    ebx,DWORD PTR [ebp-0x34]
   12419:	cmp    DWORD PTR [ebx],edx
   1241b:	jb     0x12474
   1241d:	mov    edx,DWORD PTR [ebp+0xc]
   12420:	mov    DWORD PTR [ebp-0x30],edx
   12423:	mov    edx,DWORD PTR [ebp-0x20]
   12426:	mov    edx,DWORD PTR [ecx+edx*4]
   12429:	add    edx,DWORD PTR [ebp+0x8]
   1242c:	mov    DWORD PTR [ebp-0x24],edx
   1242f:	mov    dl,BYTE PTR [edx]
   12431:	mov    ebx,DWORD PTR [ebp-0x30]
   12434:	cmp    dl,BYTE PTR [ebx]
   12436:	jne    0x12461
   12438:	test   dl,dl
   1243a:	je     0x1245d
   1243c:	mov    edx,DWORD PTR [ebp-0x24]
   1243f:	mov    dl,BYTE PTR [edx+0x1]
   12442:	mov    BYTE PTR [ebp-0x19],dl
   12445:	cmp    dl,BYTE PTR [ebx+0x1]
   12448:	jne    0x12461
   1244a:	mov    edx,DWORD PTR [ebp-0x24]
   1244d:	inc    edx
   1244e:	inc    edx
   1244f:	mov    DWORD PTR [ebp-0x24],edx
   12452:	inc    ebx
   12453:	inc    ebx
   12454:	mov    DWORD PTR [ebp-0x30],ebx
   12457:	cmp    BYTE PTR [ebp-0x19],0x0
   1245b:	jne    0x1242f
   1245d:	xor    edx,edx
   1245f:	jmp    0x12466
   12461:	sbb    edx,edx
   12463:	sbb    edx,0xffffffff
   12466:	test   edx,edx
   12468:	jne    0x12474
   1246a:	mov    eax,DWORD PTR [ebp-0x34]
   1246d:	mov    eax,DWORD PTR [eax]
   1246f:	add    eax,DWORD PTR [ebp+0x8]
   12472:	jmp    0x12499
   12474:	inc    DWORD PTR [ebp-0x20]
   12477:	mov    edx,DWORD PTR [ebp-0x38]
   1247a:	jmp    0x123f2
   1247f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   12486:	jmp    0x123bf
   1248b:	mov    eax,DWORD PTR [ebp-0x28]
   1248e:	jmp    0x1249c
   12490:	xor    eax,eax
   12492:	inc    eax
   12493:	ret    
   12494:	mov    esp,DWORD PTR [ebp-0x18]
   12497:	xor    eax,eax
   12499:	mov    DWORD PTR [ebp-0x28],eax
   1249c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   124a3:	call   0x1dd39
   124a8:	ret    0x8
   124ab:	int3   
   124ac:	int3   
   124ad:	int3   
   124ae:	int3   
   124af:	int3   
   124b0:	mov    edi,edi
   124b2:	push   ebp
   124b3:	mov    ebp,esp
   124b5:	sub    esp,0x48
   124b8:	mov    eax,DWORD PTR [ebp+0xc]
   124bb:	mov    eax,DWORD PTR [eax]
   124bd:	push   edi
   124be:	mov    DWORD PTR [ebp-0x30],eax
   124c1:	lea    eax,[ebp-0x30]
   124c4:	push   eax
   124c5:	lea    eax,[ebp-0x48]
   124c8:	push   eax
   124c9:	xor    edi,edi
   124cb:	push   0x1f0fff
   124d0:	lea    eax,[ebp-0x10]
   124d3:	push   eax
   124d4:	mov    DWORD PTR [ebp-0x48],0x18
   124db:	mov    DWORD PTR [ebp-0x44],edi
   124de:	mov    DWORD PTR [ebp-0x3c],0x200
   124e5:	mov    DWORD PTR [ebp-0x40],edi
   124e8:	mov    DWORD PTR [ebp-0x38],edi
   124eb:	mov    DWORD PTR [ebp-0x34],edi
   124ee:	mov    DWORD PTR [ebp-0x2c],edi
   124f1:	mov    DWORD PTR [ebp-0x10],edi
   124f4:	call   0x1125e
   124f9:	call   eax
   124fb:	test   eax,eax
   124fd:	jl     0x12852
   12503:	push   ebx
   12504:	push   esi
   12505:	push   0x40
   12507:	mov    esi,0x1000
   1250c:	push   esi
   1250d:	lea    eax,[ebp-0x14]
   12510:	push   eax
   12511:	push   edi
   12512:	lea    eax,[ebp-0xc]
   12515:	push   eax
   12516:	push   DWORD PTR [ebp-0x10]
   12519:	mov    ebx,0x400
   1251e:	mov    DWORD PTR [ebp-0xc],edi
   12521:	mov    DWORD PTR [ebp-0x14],ebx
   12524:	call   0x11288
   12529:	call   eax
   1252b:	test   eax,eax
   1252d:	jl     0x12538
   1252f:	mov    eax,DWORD PTR [ebp-0xc]
   12532:	mov    ecx,DWORD PTR [ebp+0xc]
   12535:	mov    DWORD PTR [ecx+0x8],eax
   12538:	push   0x4
   1253a:	push   esi
   1253b:	lea    eax,[ebp-0x14]
   1253e:	push   eax
   1253f:	push   edi
   12540:	lea    eax,[ebp-0x18]
   12543:	push   eax
   12544:	push   DWORD PTR [ebp-0x10]
   12547:	mov    DWORD PTR [ebp-0x18],edi
   1254a:	mov    DWORD PTR [ebp-0x14],ebx
   1254d:	call   0x11288
   12552:	call   eax
   12554:	test   eax,eax
   12556:	jl     0x12561
   12558:	mov    eax,DWORD PTR [ebp-0x18]
   1255b:	mov    ecx,DWORD PTR [ebp+0xc]
   1255e:	mov    DWORD PTR [ecx+0xc],eax
   12561:	lea    eax,[ebp-0x24]
   12564:	push   eax
   12565:	push   DWORD PTR [ebp-0x30]
   12568:	call   0x11a3e
   1256d:	call   eax
   1256f:	test   eax,eax
   12571:	jl     0x12850
   12577:	push   DWORD PTR [ebp-0x24]
   1257a:	call   0x1179e
   1257f:	call   eax
   12581:	mov    eax,DWORD PTR [ebp-0xc]
   12584:	mov    DWORD PTR [ebp-0x20],edi
   12587:	cmp    eax,edi
   12589:	je     0x12836
   1258f:	mov    esi,DWORD PTR [ebp-0x18]
   12592:	cmp    esi,edi
   12594:	je     0x127a3
   1259a:	push   0x214
   1259f:	push   edi
   125a0:	push   esi
   125a1:	mov    DWORD PTR [ebp-0x4],eax
   125a4:	call   0x1dcb6
   125a9:	mov    eax,DWORD PTR [ebp-0x4]
   125ac:	add    esp,0xc
   125af:	push   0x60
   125b1:	lea    ebx,[esi+0xc]
   125b4:	push   eax
   125b5:	mov    DWORD PTR [ebx],edi
   125b7:	mov    DWORD PTR [esi],edi
   125b9:	mov    DWORD PTR [ebp-0x20],eax
   125bc:	call   0x19a20
   125c1:	push   0x68
   125c3:	push   eax
   125c4:	call   0x19a20
   125c9:	push   ebx
   125ca:	push   eax
   125cb:	call   0x19a38
   125d0:	push   0x6a
   125d2:	pop    ebx
   125d3:	push   ebx
   125d4:	push   eax
   125d5:	call   0x19a20
   125da:	push   edi
   125db:	push   eax
   125dc:	call   0x19a20
   125e1:	push   ebx
   125e2:	push   eax
   125e3:	call   0x19a20
   125e8:	push   edi
   125e9:	push   eax
   125ea:	call   0x19a20
   125ef:	push   0x68
   125f1:	push   eax
   125f2:	call   0x19a20
   125f7:	push   edi
   125f8:	push   eax
   125f9:	mov    DWORD PTR [ebp-0x28],eax
   125fc:	call   0x19a38
   12601:	push   ebx
   12602:	push   eax
   12603:	call   0x19a20
   12608:	push   edi
   12609:	push   eax
   1260a:	call   0x19a20
   1260f:	push   ebx
   12610:	push   eax
   12611:	call   0x19a20
   12616:	push   edi
   12617:	push   eax
   12618:	call   0x19a20
   1261d:	push   0xb8
   12622:	push   eax
   12623:	call   0x19a20
   12628:	push   DWORD PTR ds:0x78570
   1262e:	push   eax
   1262f:	call   0x19a38
   12634:	mov    ebx,0xc00b
   12639:	push   ebx
   1263a:	push   eax
   1263b:	call   0x19a52
   12640:	push   0x74
   12642:	push   eax
   12643:	call   0x19a20
   12648:	push   0x9
   1264a:	push   eax
   1264b:	call   0x19a20
   12650:	mov    edi,0xd0ff
   12655:	push   edi
   12656:	push   eax
   12657:	call   0x19a52
   1265c:	push   0xb9
   12661:	push   eax
   12662:	call   0x19a20
   12667:	lea    ecx,[esi+0x10]
   1266a:	push   ecx
   1266b:	push   eax
   1266c:	call   0x19a38
   12671:	push   0x189
   12676:	push   eax
   12677:	call   0x19a52
   1267c:	push   0x61
   1267e:	push   eax
   1267f:	call   0x19a20
   12684:	and    DWORD PTR [ebp-0x8],0x0
   12688:	mov    DWORD PTR [ebp-0x4],eax
   1268b:	mov    eax,DWORD PTR [ebp+0x8]
   1268e:	mov    DWORD PTR [ebp-0x1c],eax
   12691:	push   0x0
   12693:	push   DWORD PTR [ebp-0x1c]
   12696:	push   DWORD PTR [ebp-0x4]
   12699:	call   0x1a1d4
   1269e:	mov    ecx,eax
   126a0:	sub    ecx,DWORD PTR [ebp-0x1c]
   126a3:	mov    DWORD PTR [ebp-0x1c],eax
   126a6:	add    DWORD PTR [ebp-0x8],ecx
   126a9:	add    DWORD PTR [ebp-0x4],ecx
   126ac:	cmp    DWORD PTR [ebp-0x8],0x5
   126b0:	jb     0x12691
   126b2:	mov    ecx,DWORD PTR [ebp+0x8]
   126b5:	push   DWORD PTR [ebp-0x4]
   126b8:	mov    eax,DWORD PTR [ebp-0x8]
   126bb:	add    eax,ecx
   126bd:	push   eax
   126be:	call   0x19a96
   126c3:	push   eax
   126c4:	push   DWORD PTR [ebp-0x28]
   126c7:	mov    DWORD PTR [ebp-0x4],eax
   126ca:	call   0x19a38
   126cf:	mov    eax,DWORD PTR [ebp-0x4]
   126d2:	push   0xeb
   126d7:	push   eax
   126d8:	mov    DWORD PTR [esi],eax
   126da:	call   0x19a20
   126df:	push   0x0
   126e1:	push   eax
   126e2:	mov    DWORD PTR [esi+0x4],eax
   126e5:	call   0x19a20
   126ea:	push   0x68
   126ec:	push   eax
   126ed:	call   0x19a20
   126f2:	push   0x3e8
   126f7:	push   eax
   126f8:	call   0x19a38
   126fd:	push   0xb8
   12702:	push   eax
   12703:	call   0x19a20
   12708:	push   DWORD PTR ds:0x78574
   1270e:	push   eax
   1270f:	call   0x19a38
   12714:	push   ebx
   12715:	push   eax
   12716:	call   0x19a52
   1271b:	push   0x74
   1271d:	push   eax
   1271e:	call   0x19a20
   12723:	push   0x2
   12725:	push   eax
   12726:	call   0x19a20
   1272b:	push   edi
   1272c:	push   eax
   1272d:	call   0x19a52
   12732:	push   eax
   12733:	push   DWORD PTR [esi]
   12735:	call   0x19a96
   1273a:	mov    cl,al
   1273c:	sub    cl,BYTE PTR [esi+0x4]
   1273f:	push   0x68
   12741:	dec    cl
   12743:	push   eax
   12744:	mov    BYTE PTR [esi+0x8],cl
   12747:	call   0x19a20
   1274c:	add    esi,0x14
   1274f:	push   esi
   12750:	push   eax
   12751:	call   0x19a38
   12756:	push   0xb8
   1275b:	push   eax
   1275c:	call   0x19a20
   12761:	push   DWORD PTR ds:0x78568
   12767:	push   eax
   12768:	call   0x19a38
   1276d:	push   ebx
   1276e:	push   eax
   1276f:	call   0x19a52
   12774:	push   0x74
   12776:	push   eax
   12777:	call   0x19a20
   1277c:	push   0x2
   1277e:	push   eax
   1277f:	call   0x19a20
   12784:	push   edi
   12785:	push   eax
   12786:	call   0x19a52
   1278b:	push   0xc2
   12790:	push   eax
   12791:	call   0x19a20
   12796:	push   0x4
   12798:	push   eax
   12799:	call   0x19a52
   1279e:	mov    eax,DWORD PTR [ebp-0xc]
   127a1:	xor    edi,edi
   127a3:	cmp    eax,edi
   127a5:	je     0x12836
   127ab:	add    eax,0x400
   127b0:	lea    esi,[eax-0xc]
   127b3:	lea    ecx,[eax-0x8]
   127b6:	push   esi
   127b7:	lea    ebx,[eax-0x4]
   127ba:	lea    edx,[eax-0x10]
   127bd:	push   0x40
   127bf:	add    eax,0xffffffe8
   127c2:	push   ecx
   127c3:	mov    DWORD PTR [ebp-0x1c],eax
   127c6:	mov    eax,DWORD PTR [ebp+0x8]
   127c9:	mov    DWORD PTR [ebx],eax
   127cb:	push   ebx
   127cc:	mov    DWORD PTR [ecx],0x5
   127d2:	push   0xffffffff
   127d4:	mov    DWORD PTR [ebp-0x8],ecx
   127d7:	mov    DWORD PTR [ebp-0x28],edx
   127da:	mov    DWORD PTR [esi],edi
   127dc:	call   DWORD PTR ds:0x784e4
   127e2:	test   eax,eax
   127e4:	jl     0x12836
   127e6:	mov    eax,DWORD PTR [ebp-0x20]
   127e9:	sub    eax,DWORD PTR [ebp+0x8]
   127ec:	sub    eax,0x5
   127ef:	push   eax
   127f0:	mov    eax,DWORD PTR [ebp-0x1c]
   127f3:	inc    eax
   127f4:	push   eax
   127f5:	call   0x19a38
   127fa:	push   0xe9
   127ff:	push   DWORD PTR [ebp-0x1c]
   12802:	call   0x19a20
   12807:	mov    eax,DWORD PTR [ebp-0x28]
   1280a:	push   eax
   1280b:	push   0x5
   1280d:	push   DWORD PTR [ebp-0x1c]
   12810:	mov    DWORD PTR [eax],edi
   12812:	push   DWORD PTR [ebp+0x8]
   12815:	push   0xffffffff
   12817:	call   DWORD PTR ds:0x784d8
   1281d:	mov    eax,DWORD PTR [ebp+0xc]
   12820:	mov    BYTE PTR [eax+0x10],0x1
   12824:	lea    eax,[ebp-0x20]
   12827:	push   eax
   12828:	push   DWORD PTR [esi]
   1282a:	push   DWORD PTR [ebp-0x8]
   1282d:	push   ebx
   1282e:	push   0xffffffff
   12830:	call   DWORD PTR ds:0x784e4
   12836:	call   0x11774
   1283b:	call   eax
   1283d:	mov    ecx,DWORD PTR [ebp-0x24]
   12840:	call   DWORD PTR ds:0x1f450
   12846:	push   DWORD PTR [ebp-0x10]
   12849:	call   0x11552
   1284e:	call   eax
   12850:	pop    esi
   12851:	pop    ebx
   12852:	pop    edi
   12853:	leave  
   12854:	ret    0x8
   12857:	int3   
   12858:	int3   
   12859:	int3   
   1285a:	int3   
   1285b:	int3   
   1285c:	mov    edi,edi
   1285e:	push   ebp
   1285f:	mov    ebp,esp
   12861:	sub    esp,0x18
   12864:	and    DWORD PTR [ebp-0x18],0x0
   12868:	push   edi
   12869:	xor    eax,eax
   1286b:	lea    edi,[ebp-0x14]
   1286e:	stos   DWORD PTR es:[edi],eax
   1286f:	stos   DWORD PTR es:[edi],eax
   12870:	stos   DWORD PTR es:[edi],eax
   12871:	stos   DWORD PTR es:[edi],eax
   12872:	lea    eax,[ebp-0x18]
   12875:	push   eax
   12876:	push   0x1
   12878:	call   0x11ed8
   1287d:	pop    edi
   1287e:	test   al,al
   12880:	je     0x128d7
   12882:	cmp    DWORD PTR [ebp-0x18],0x0
   12886:	je     0x128d7
   12888:	lea    eax,[ebp-0x4]
   1288b:	push   eax
   1288c:	push   DWORD PTR [ebp-0x18]
   1288f:	call   0x11a3e
   12894:	call   eax
   12896:	test   eax,eax
   12898:	jl     0x128d7
   1289a:	push   esi
   1289b:	push   DWORD PTR [ebp-0x4]
   1289e:	call   0x1179e
   128a3:	call   eax
   128a5:	mov    esi,DWORD PTR [ebp-0xc]
   128a8:	mov    eax,DWORD PTR [ebp+0x8]
   128ab:	lea    edx,[esi+0x14]
   128ae:	sub    edx,eax
   128b0:	movzx  ecx,WORD PTR [eax]
   128b3:	mov    WORD PTR [edx+eax*1],cx
   128b7:	inc    eax
   128b8:	inc    eax
   128b9:	test   cx,cx
   128bc:	jne    0x128b0
   128be:	mov    eax,DWORD PTR [esi+0x4]
   128c1:	mov    cl,BYTE PTR [esi+0x8]
   128c4:	mov    BYTE PTR [eax],cl
   128c6:	call   0x11774
   128cb:	call   eax
   128cd:	mov    ecx,DWORD PTR [ebp-0x4]
   128d0:	call   DWORD PTR ds:0x1f450
   128d6:	pop    esi
   128d7:	leave  
   128d8:	ret    0x4
   128db:	int3   
   128dc:	int3   
   128dd:	int3   
   128de:	int3   
   128df:	int3   
   128e0:	mov    edi,edi
   128e2:	push   ebp
   128e3:	mov    ebp,esp
   128e5:	push   ecx
   128e6:	and    DWORD PTR [ebp-0x4],0x0
   128ea:	push   ebx
   128eb:	push   esi
   128ec:	push   edi
   128ed:	mov    esi,0x1000
   128f2:	push   0x20736649
   128f7:	push   esi
   128f8:	push   0x0
   128fa:	call   0x1164e
   128ff:	call   eax
   12901:	mov    edi,eax
   12903:	test   edi,edi
   12905:	je     0x1293a
   12907:	lea    eax,[ebp-0x4]
   1290a:	push   eax
   1290b:	push   esi
   1290c:	push   edi
   1290d:	push   DWORD PTR [ebp+0x8]
   12910:	call   0x11384
   12915:	call   eax
   12917:	mov    ebx,eax
   12919:	cmp    ebx,0xc0000004
   1291f:	jne    0x1292d
   12921:	push   0x0
   12923:	push   edi
   12924:	call   0x115fa
   12929:	call   eax
   1292b:	add    esi,esi
   1292d:	test   ebx,ebx
   1292f:	jne    0x128f2
   12931:	mov    eax,edi
   12933:	pop    edi
   12934:	pop    esi
   12935:	pop    ebx
   12936:	leave  
   12937:	ret    0x4
   1293a:	xor    eax,eax
   1293c:	jmp    0x12933
   1293e:	int3   
   1293f:	int3   
   12940:	int3   
   12941:	int3   
   12942:	int3   
   12943:	int3   
   12944:	push   0x0
   12946:	push   0x784f4
   1294b:	call   0x119c0
   12950:	call   eax
   12952:	push   0x100
   12957:	push   0x0
   12959:	push   0x77bb8
   1295e:	call   0x1dcb6
   12963:	add    esp,0xc
   12966:	ret    
   12967:	int3   
   12968:	int3   
   12969:	int3   
   1296a:	int3   
   1296b:	int3   
   1296c:	mov    edi,edi
   1296e:	push   ebp
   1296f:	mov    ebp,esp
   12971:	push   ebx
   12972:	mov    ebx,DWORD PTR [ebp+0x8]
   12975:	cmp    ebx,0x40
   12978:	ja     0x129a7
   1297a:	push   esi
   1297b:	push   edi
   1297c:	xor    edi,edi
   1297e:	push   edi
   1297f:	push   edi
   12980:	push   edi
   12981:	push   edi
   12982:	mov    esi,0x784f4
   12987:	push   esi
   12988:	call   0x119ea
   1298d:	call   eax
   1298f:	test   eax,eax
   12991:	jl     0x129a5
   12993:	push   edi
   12994:	lea    eax,[ebx*4+0x77bb8]
   1299b:	inc    DWORD PTR [eax]
   1299d:	push   esi
   1299e:	call   0x11a14
   129a3:	call   eax
   129a5:	pop    edi
   129a6:	pop    esi
   129a7:	pop    ebx
   129a8:	pop    ebp
   129a9:	ret    0x4
   129ac:	int3   
   129ad:	int3   
   129ae:	int3   
   129af:	int3   
   129b0:	int3   
   129b1:	int3   
   129b2:	mov    edi,edi
   129b4:	push   ebp
   129b5:	mov    ebp,esp
   129b7:	push   ebx
   129b8:	push   esi
   129b9:	push   edi
   129ba:	mov    edi,DWORD PTR [ebp+0x8]
   129bd:	cmp    edi,0x40
   129c0:	ja     0x129ed
   129c2:	xor    ebx,ebx
   129c4:	push   ebx
   129c5:	push   ebx
   129c6:	push   ebx
   129c7:	push   ebx
   129c8:	mov    esi,0x784f4
   129cd:	push   esi
   129ce:	call   0x119ea
   129d3:	call   eax
   129d5:	test   eax,eax
   129d7:	jl     0x129ed
   129d9:	mov    edi,DWORD PTR [edi*4+0x77bb8]
   129e0:	push   ebx
   129e1:	push   esi
   129e2:	call   0x11a14
   129e7:	call   eax
   129e9:	mov    eax,edi
   129eb:	jmp    0x129ef
   129ed:	xor    eax,eax
   129ef:	pop    edi
   129f0:	pop    esi
   129f1:	pop    ebx
   129f2:	pop    ebp
   129f3:	ret    0x4
   129f6:	int3   
   129f7:	int3   
   129f8:	int3   
   129f9:	int3   
   129fa:	int3   
   129fb:	int3   
   129fc:	mov    edi,edi
   129fe:	push   ebp
   129ff:	mov    ebp,esp
   12a01:	push   esi
   12a02:	mov    esi,DWORD PTR [ebp+0x8]
   12a05:	push   edi
   12a06:	push   DWORD PTR [esi]
   12a08:	call   0x11cec
   12a0d:	push   DWORD PTR [esi]
   12a0f:	mov    edi,eax
   12a11:	push   esi
   12a12:	push   edi
   12a13:	call   0x1dcce
   12a18:	add    esp,0x10
   12a1b:	mov    eax,edi
   12a1d:	pop    edi
   12a1e:	pop    esi
   12a1f:	pop    ebp
   12a20:	ret    0x4
   12a23:	int3   
   12a24:	int3   
   12a25:	int3   
   12a26:	int3   
   12a27:	int3   
   12a28:	mov    edi,edi
   12a2a:	push   ebp
   12a2b:	mov    ebp,esp
   12a2d:	push   ebx
   12a2e:	push   esi
   12a2f:	push   edi
   12a30:	mov    edi,DWORD PTR [ebp+0x8]
   12a33:	mov    eax,DWORD PTR [edi+0x4]
   12a36:	mov    esi,ecx
   12a38:	mov    ebx,DWORD PTR [esi]
   12a3a:	mov    DWORD PTR [esi+0x4],eax
   12a3d:	inc    eax
   12a3e:	push   eax
   12a3f:	call   0x11cec
   12a44:	push   DWORD PTR [esi+0x4]
   12a47:	mov    DWORD PTR [esi],eax
   12a49:	push   DWORD PTR [edi]
   12a4b:	push   eax
   12a4c:	call   0x1dcce
   12a51:	mov    eax,DWORD PTR [esi+0x4]
   12a54:	mov    ecx,DWORD PTR [esi]
   12a56:	push   ebx
   12a57:	mov    BYTE PTR [eax+ecx*1],0x0
   12a5b:	call   0x11d22
   12a60:	add    esp,0x14
   12a63:	pop    edi
   12a64:	mov    eax,esi
   12a66:	pop    esi
   12a67:	pop    ebx
   12a68:	pop    ebp
   12a69:	ret    0x4
   12a6c:	int3   
   12a6d:	int3   
   12a6e:	int3   
   12a6f:	int3   
   12a70:	int3   
   12a71:	int3   
   12a72:	mov    edi,edi
   12a74:	push   esi
   12a75:	push   edi
   12a76:	push   0x20736649
   12a7b:	push   0x20
   12a7d:	push   0x0
   12a7f:	mov    esi,ecx
   12a81:	call   0x1164e
   12a86:	call   eax
   12a88:	push   0x0
   12a8a:	mov    edi,eax
   12a8c:	push   0x1
   12a8e:	mov    ecx,esi
   12a90:	mov    DWORD PTR [esi],edi
   12a92:	call   0x10da2
   12a97:	mov    DWORD PTR [esi+0x8],eax
   12a9a:	mov    DWORD PTR [esi+0xc],edx
   12a9d:	test   edi,edi
   12a9f:	jne    0x12aad
   12aa1:	push   0xc000009a
   12aa6:	call   0x115a6
   12aab:	call   eax
   12aad:	pop    edi
   12aae:	mov    eax,esi
   12ab0:	pop    esi
   12ab1:	ret    
   12ab2:	int3   
   12ab3:	int3   
   12ab4:	int3   
   12ab5:	int3   
   12ab6:	int3   
   12ab7:	int3   
   12ab8:	mov    edi,edi
   12aba:	push   ebp
   12abb:	mov    ebp,esp
   12abd:	push   esi
   12abe:	push   edi
   12abf:	mov    edi,DWORD PTR [ebp+0x8]
   12ac2:	push   edi
   12ac3:	mov    esi,ecx
   12ac5:	call   0x12a28
   12aca:	lea    eax,[edi+0x8]
   12acd:	push   eax
   12ace:	lea    ecx,[esi+0x8]
   12ad1:	call   0x12a28
   12ad6:	lea    eax,[edi+0x10]
   12ad9:	push   eax
   12ada:	lea    ecx,[esi+0x10]
   12add:	call   0x12a28
   12ae2:	lea    eax,[edi+0x18]
   12ae5:	push   eax
   12ae6:	lea    ecx,[esi+0x18]
   12ae9:	call   0x12a28
   12aee:	mov    eax,DWORD PTR [edi+0x20]
   12af1:	mov    DWORD PTR [esi+0x20],eax
   12af4:	mov    eax,DWORD PTR [edi+0x28]
   12af7:	mov    DWORD PTR [esi+0x28],eax
   12afa:	mov    eax,DWORD PTR [edi+0x2c]
   12afd:	mov    DWORD PTR [esi+0x2c],eax
   12b00:	mov    eax,DWORD PTR [edi+0x30]
   12b03:	mov    DWORD PTR [esi+0x30],eax
   12b06:	mov    eax,DWORD PTR [edi+0x34]
   12b09:	add    edi,0x38
   12b0c:	push   edi
   12b0d:	lea    ecx,[esi+0x38]
   12b10:	mov    DWORD PTR [esi+0x34],eax
   12b13:	call   0x12a28
   12b18:	pop    edi
   12b19:	mov    eax,esi
   12b1b:	pop    esi
   12b1c:	pop    ebp
   12b1d:	ret    0x4
   12b20:	int3   
   12b21:	int3   
   12b22:	int3   
   12b23:	int3   
   12b24:	int3   
   12b25:	int3   
   12b26:	mov    edi,edi
   12b28:	push   esi
   12b29:	mov    esi,ecx
   12b2b:	push   DWORD PTR [esi+0x8]
   12b2e:	call   0x11d22
   12b33:	push   DWORD PTR [esi]
   12b35:	call   0x11d22
   12b3a:	pop    ecx
   12b3b:	pop    ecx
   12b3c:	pop    esi
   12b3d:	ret    
   12b3e:	int3   
   12b3f:	int3   
   12b40:	int3   
   12b41:	int3   
   12b42:	int3   
   12b43:	int3   
   12b44:	mov    edi,edi
   12b46:	push   ebp
   12b47:	mov    ebp,esp
   12b49:	push   esi
   12b4a:	mov    esi,DWORD PTR [ebp+0xc]
   12b4d:	push   edi
   12b4e:	mov    edi,ecx
   12b50:	cmp    esi,0xffffffff
   12b53:	jne    0x12b64
   12b55:	mov    esi,DWORD PTR [ebp+0x8]
   12b58:	lea    ecx,[esi+0x1]
   12b5b:	mov    al,BYTE PTR [esi]
   12b5d:	inc    esi
   12b5e:	test   al,al
   12b60:	jne    0x12b5b
   12b62:	sub    esi,ecx
   12b64:	lea    eax,[esi+0x1]
   12b67:	push   eax
   12b68:	call   0x11cec
   12b6d:	pop    ecx
   12b6e:	mov    DWORD PTR [edi],eax
   12b70:	test   eax,eax
   12b72:	jne    0x12b7f
   12b74:	push   0xc000009a
   12b79:	call   DWORD PTR ds:0x1f420
   12b7f:	mov    eax,DWORD PTR [edi]
   12b81:	push   esi
   12b82:	push   DWORD PTR [ebp+0x8]
   12b85:	mov    BYTE PTR [esi+eax*1],0x0
   12b89:	push   DWORD PTR [edi]
   12b8b:	call   0x1dcce
   12b90:	add    esp,0xc
   12b93:	mov    DWORD PTR [edi+0x4],esi
   12b96:	pop    edi
   12b97:	pop    esi
   12b98:	pop    ebp
   12b99:	ret    0x8
   12b9c:	int3   
   12b9d:	int3   
   12b9e:	int3   
   12b9f:	int3   
   12ba0:	int3   
   12ba1:	int3   
   12ba2:	mov    edi,edi
   12ba4:	push   ebp
   12ba5:	mov    ebp,esp
   12ba7:	push   ebx
   12ba8:	push   esi
   12ba9:	push   edi
   12baa:	mov    edi,DWORD PTR [ebp+0x8]
   12bad:	mov    eax,DWORD PTR [edi+0x4]
   12bb0:	mov    esi,ecx
   12bb2:	mov    ebx,DWORD PTR [esi]
   12bb4:	mov    DWORD PTR [esi+0x4],eax
   12bb7:	xor    ecx,ecx
   12bb9:	push   0x2
   12bbb:	inc    eax
   12bbc:	pop    edx
   12bbd:	mul    edx
   12bbf:	seto   cl
   12bc2:	neg    ecx
   12bc4:	or     ecx,eax
   12bc6:	push   ecx
   12bc7:	call   0x11cec
   12bcc:	mov    ecx,DWORD PTR [esi+0x4]
   12bcf:	add    ecx,ecx
   12bd1:	push   ecx
   12bd2:	mov    DWORD PTR [esi],eax
   12bd4:	push   DWORD PTR [edi]
   12bd6:	push   eax
   12bd7:	call   0x1dcce
   12bdc:	mov    eax,DWORD PTR [esi+0x4]
   12bdf:	mov    ecx,DWORD PTR [esi]
   12be1:	xor    edx,edx
   12be3:	push   ebx
   12be4:	mov    WORD PTR [ecx+eax*2],dx
   12be8:	call   0x11d22
   12bed:	add    esp,0x14
   12bf0:	pop    edi
   12bf1:	mov    eax,esi
   12bf3:	pop    esi
   12bf4:	pop    ebx
   12bf5:	pop    ebp
   12bf6:	ret    0x4
   12bf9:	int3   
   12bfa:	int3   
   12bfb:	int3   
   12bfc:	int3   
   12bfd:	int3   
   12bfe:	mov    edi,edi
   12c00:	push   ebp
   12c01:	mov    ebp,esp
   12c03:	push   esi
   12c04:	push   edi
   12c05:	mov    edi,DWORD PTR [ebp+0xc]
   12c08:	mov    esi,ecx
   12c0a:	cmp    edi,0xffffffff
   12c0d:	jne    0x12c19
   12c0f:	push   DWORD PTR [ebp+0x8]
   12c12:	call   0x10960
   12c17:	mov    edi,eax
   12c19:	xor    ecx,ecx
   12c1b:	push   0x2
   12c1d:	pop    edx
   12c1e:	lea    eax,[edi+0x1]
   12c21:	mul    edx
   12c23:	seto   cl
   12c26:	neg    ecx
   12c28:	or     ecx,eax
   12c2a:	push   ecx
   12c2b:	call   0x11cec
   12c30:	pop    ecx
   12c31:	mov    DWORD PTR [esi],eax
   12c33:	test   eax,eax
   12c35:	jne    0x12c42
   12c37:	push   0xc000009a
   12c3c:	call   DWORD PTR ds:0x1f420
   12c42:	mov    ecx,DWORD PTR [esi]
   12c44:	lea    eax,[edi+edi*1]
   12c47:	push   eax
   12c48:	push   DWORD PTR [ebp+0x8]
   12c4b:	xor    edx,edx
   12c4d:	mov    WORD PTR [eax+ecx*1],dx
   12c51:	push   DWORD PTR [esi]
   12c53:	call   0x1dcce
   12c58:	add    esp,0xc
   12c5b:	mov    DWORD PTR [esi+0x4],edi
   12c5e:	pop    edi
   12c5f:	pop    esi
   12c60:	pop    ebp
   12c61:	ret    0x8
   12c64:	int3   
   12c65:	int3   
   12c66:	int3   
   12c67:	int3   
   12c68:	int3   
   12c69:	int3   
   12c6a:	mov    edi,edi
   12c6c:	push   ebp
   12c6d:	mov    ebp,esp
   12c6f:	mov    eax,DWORD PTR [ebp+0x8]
   12c72:	mov    edx,DWORD PTR ds:0x786bc
   12c78:	jmp    0x12c7c
   12c7a:	mov    eax,ecx
   12c7c:	mov    ecx,DWORD PTR [eax]
   12c7e:	cmp    ecx,edx
   12c80:	jne    0x12c7a
   12c82:	pop    ebp
   12c83:	ret    0x4
   12c86:	int3   
   12c87:	int3   
   12c88:	int3   
   12c89:	int3   
   12c8a:	int3   
   12c8b:	int3   
   12c8c:	mov    edi,edi
   12c8e:	push   ebp
   12c8f:	mov    ebp,esp
   12c91:	mov    eax,DWORD PTR [ecx+0x4]
   12c94:	mov    ecx,DWORD PTR [eax+0x4]
   12c97:	mov    edx,DWORD PTR ds:0x786b0
   12c9d:	cmp    ecx,edx
   12c9f:	je     0x12cba
   12ca1:	push   esi
   12ca2:	mov    esi,DWORD PTR [ebp+0x8]
   12ca5:	mov    esi,DWORD PTR [esi]
   12ca7:	cmp    DWORD PTR [ecx+0xc],esi
   12caa:	jae    0x12cb1
   12cac:	mov    ecx,DWORD PTR [ecx+0x8]
   12caf:	jmp    0x12cb5
   12cb1:	mov    eax,ecx
   12cb3:	mov    ecx,DWORD PTR [ecx]
   12cb5:	cmp    ecx,edx
   12cb7:	jne    0x12ca7
   12cb9:	pop    esi
   12cba:	pop    ebp
   12cbb:	ret    0x4
   12cbe:	int3   
   12cbf:	int3   
   12cc0:	int3   
   12cc1:	int3   
   12cc2:	int3   
   12cc3:	int3   
   12cc4:	mov    edi,edi
   12cc6:	push   ebp
   12cc7:	mov    ebp,esp
   12cc9:	mov    edx,DWORD PTR [ebp+0x8]
   12ccc:	mov    eax,DWORD PTR [edx+0x8]
   12ccf:	push   esi
   12cd0:	mov    esi,DWORD PTR [eax]
   12cd2:	mov    DWORD PTR [edx+0x8],esi
   12cd5:	mov    esi,DWORD PTR [eax]
   12cd7:	cmp    esi,DWORD PTR ds:0x786b0
   12cdd:	je     0x12ce2
   12cdf:	mov    DWORD PTR [esi+0x4],edx
   12ce2:	mov    esi,DWORD PTR [edx+0x4]
   12ce5:	mov    DWORD PTR [eax+0x4],esi
   12ce8:	mov    ecx,DWORD PTR [ecx+0x4]
   12ceb:	pop    esi
   12cec:	cmp    edx,DWORD PTR [ecx+0x4]
   12cef:	jne    0x12cf6
   12cf1:	mov    DWORD PTR [ecx+0x4],eax
   12cf4:	jmp    0x12d04
   12cf6:	mov    ecx,DWORD PTR [edx+0x4]
   12cf9:	cmp    edx,DWORD PTR [ecx]
   12cfb:	jne    0x12d01
   12cfd:	mov    DWORD PTR [ecx],eax
   12cff:	jmp    0x12d04
   12d01:	mov    DWORD PTR [ecx+0x8],eax
   12d04:	mov    DWORD PTR [eax],edx
   12d06:	mov    DWORD PTR [edx+0x4],eax
   12d09:	pop    ebp
   12d0a:	ret    0x4
   12d0d:	int3   
   12d0e:	int3   
   12d0f:	int3   
   12d10:	int3   
   12d11:	int3   
   12d12:	mov    edi,edi
   12d14:	push   ebp
   12d15:	mov    ebp,esp
   12d17:	mov    edx,DWORD PTR [ebp+0x8]
   12d1a:	mov    eax,DWORD PTR [edx]
   12d1c:	push   esi
   12d1d:	mov    esi,DWORD PTR [eax+0x8]
   12d20:	mov    DWORD PTR [edx],esi
   12d22:	mov    esi,DWORD PTR [eax+0x8]
   12d25:	cmp    esi,DWORD PTR ds:0x786b0
   12d2b:	je     0x12d30
   12d2d:	mov    DWORD PTR [esi+0x4],edx
   12d30:	mov    esi,DWORD PTR [edx+0x4]
   12d33:	mov    DWORD PTR [eax+0x4],esi
   12d36:	mov    ecx,DWORD PTR [ecx+0x4]
   12d39:	pop    esi
   12d3a:	cmp    edx,DWORD PTR [ecx+0x4]
   12d3d:	jne    0x12d44
   12d3f:	mov    DWORD PTR [ecx+0x4],eax
   12d42:	jmp    0x12d53
   12d44:	mov    ecx,DWORD PTR [edx+0x4]
   12d47:	cmp    edx,DWORD PTR [ecx+0x8]
   12d4a:	jne    0x12d51
   12d4c:	mov    DWORD PTR [ecx+0x8],eax
   12d4f:	jmp    0x12d53
   12d51:	mov    DWORD PTR [ecx],eax
   12d53:	mov    DWORD PTR [eax+0x8],edx
   12d56:	mov    DWORD PTR [edx+0x4],eax
   12d59:	pop    ebp
   12d5a:	ret    0x4
   12d5d:	int3   
   12d5e:	int3   
   12d5f:	int3   
   12d60:	int3   
   12d61:	int3   
   12d62:	mov    edi,edi
   12d64:	push   ebp
   12d65:	mov    ebp,esp
   12d67:	mov    eax,DWORD PTR [ecx+0x4]
   12d6a:	push   esi
   12d6b:	mov    esi,DWORD PTR [eax+0x4]
   12d6e:	push   edi
   12d6f:	mov    edi,eax
   12d71:	jmp    0x12d8c
   12d73:	push   DWORD PTR [ebp+0x8]
   12d76:	lea    eax,[esi+0x10]
   12d79:	push   eax
   12d7a:	call   0x199e0
   12d7f:	test   al,al
   12d81:	je     0x12d88
   12d83:	mov    esi,DWORD PTR [esi+0x8]
   12d86:	jmp    0x12d8c
   12d88:	mov    edi,esi
   12d8a:	mov    esi,DWORD PTR [esi]
   12d8c:	cmp    esi,DWORD PTR ds:0x786bc
   12d92:	jne    0x12d73
   12d94:	mov    eax,edi
   12d96:	pop    edi
   12d97:	pop    esi
   12d98:	pop    ebp
   12d99:	ret    0x4
   12d9c:	int3   
   12d9d:	int3   
   12d9e:	int3   
   12d9f:	int3   
   12da0:	int3   
   12da1:	int3   
   12da2:	mov    edi,edi
   12da4:	push   ebp
   12da5:	mov    ebp,esp
   12da7:	mov    eax,DWORD PTR [ecx+0x4]
   12daa:	push   esi
   12dab:	mov    esi,DWORD PTR [eax+0x4]
   12dae:	push   edi
   12daf:	mov    edi,eax
   12db1:	jmp    0x12dcc
   12db3:	push   DWORD PTR [ebp+0x8]
   12db6:	lea    eax,[esi+0xc]
   12db9:	push   eax
   12dba:	call   0x199e0
   12dbf:	test   al,al
   12dc1:	je     0x12dc8
   12dc3:	mov    esi,DWORD PTR [esi+0x8]
   12dc6:	jmp    0x12dcc
   12dc8:	mov    edi,esi
   12dca:	mov    esi,DWORD PTR [esi]
   12dcc:	cmp    esi,DWORD PTR ds:0x786c0
   12dd2:	jne    0x12db3
   12dd4:	mov    eax,edi
   12dd6:	pop    edi
   12dd7:	pop    esi
   12dd8:	pop    ebp
   12dd9:	ret    0x4
   12ddc:	int3   
   12ddd:	int3   
   12dde:	int3   
   12ddf:	int3   
   12de0:	int3   
   12de1:	int3   
   12de2:	mov    edi,edi
   12de4:	push   ebp
   12de5:	mov    ebp,esp
   12de7:	mov    eax,DWORD PTR [ecx+0x4]
   12dea:	mov    ecx,DWORD PTR [eax+0x4]
   12ded:	mov    edx,DWORD PTR ds:0x786c4
   12df3:	cmp    ecx,edx
   12df5:	je     0x12e10
   12df7:	push   esi
   12df8:	mov    esi,DWORD PTR [ebp+0x8]
   12dfb:	mov    esi,DWORD PTR [esi]
   12dfd:	cmp    DWORD PTR [ecx+0xc],esi
   12e00:	jge    0x12e07
   12e02:	mov    ecx,DWORD PTR [ecx+0x8]
   12e05:	jmp    0x12e0b
   12e07:	mov    eax,ecx
   12e09:	mov    ecx,DWORD PTR [ecx]
   12e0b:	cmp    ecx,edx
   12e0d:	jne    0x12dfd
   12e0f:	pop    esi
   12e10:	pop    ebp
   12e11:	ret    0x4
   12e14:	int3   
   12e15:	int3   
   12e16:	int3   
   12e17:	int3   
   12e18:	int3   
   12e19:	int3   
   12e1a:	mov    edi,edi
   12e1c:	push   esi
   12e1d:	mov    esi,ecx
   12e1f:	mov    ecx,DWORD PTR [esi]
   12e21:	mov    eax,DWORD PTR [ecx+0x8]
   12e24:	cmp    eax,DWORD PTR ds:0x786b8
   12e2a:	je     0x12e38
   12e2c:	push   eax
   12e2d:	call   0x10e92
   12e32:	jmp    0x12e47
   12e34:	mov    DWORD PTR [esi],eax
   12e36:	mov    ecx,eax
   12e38:	mov    eax,DWORD PTR [ecx+0x4]
   12e3b:	cmp    ecx,DWORD PTR [eax+0x8]
   12e3e:	je     0x12e34
   12e40:	mov    ecx,DWORD PTR [esi]
   12e42:	cmp    DWORD PTR [ecx+0x8],eax
   12e45:	je     0x12e49
   12e47:	mov    DWORD PTR [esi],eax
   12e49:	pop    esi
   12e4a:	ret    
   12e4b:	int3   
   12e4c:	int3   
   12e4d:	int3   
   12e4e:	int3   
   12e4f:	int3   
   12e50:	mov    edi,edi
   12e52:	push   esi
   12e53:	mov    esi,ecx
   12e55:	mov    ecx,DWORD PTR [esi]
   12e57:	cmp    DWORD PTR [ecx+0x10],0x0
   12e5b:	jne    0x12e6a
   12e5d:	mov    eax,DWORD PTR [ecx+0x4]
   12e60:	cmp    DWORD PTR [eax+0x4],ecx
   12e63:	jne    0x12e6a
   12e65:	mov    eax,DWORD PTR [ecx+0x8]
   12e68:	jmp    0x12e87
   12e6a:	mov    eax,DWORD PTR [ecx]
   12e6c:	cmp    eax,DWORD PTR ds:0x786b4
   12e72:	je     0x12e80
   12e74:	push   eax
   12e75:	call   0x10e2c
   12e7a:	jmp    0x12e87
   12e7c:	mov    DWORD PTR [esi],eax
   12e7e:	mov    ecx,eax
   12e80:	mov    eax,DWORD PTR [ecx+0x4]
   12e83:	cmp    ecx,DWORD PTR [eax]
   12e85:	je     0x12e7c
   12e87:	mov    DWORD PTR [esi],eax
   12e89:	pop    esi
   12e8a:	ret    
   12e8b:	int3   
   12e8c:	int3   
   12e8d:	int3   
   12e8e:	int3   
   12e8f:	int3   
   12e90:	mov    edi,edi
   12e92:	push   esi
   12e93:	mov    esi,ecx
   12e95:	mov    ecx,DWORD PTR [esi]
   12e97:	mov    eax,DWORD PTR [ecx+0x8]
   12e9a:	cmp    eax,DWORD PTR ds:0x786b4
   12ea0:	je     0x12eae
   12ea2:	push   eax
   12ea3:	call   0x10e4e
   12ea8:	jmp    0x12ebd
   12eaa:	mov    DWORD PTR [esi],eax
   12eac:	mov    ecx,eax
   12eae:	mov    eax,DWORD PTR [ecx+0x4]
   12eb1:	cmp    ecx,DWORD PTR [eax+0x8]
   12eb4:	je     0x12eaa
   12eb6:	mov    ecx,DWORD PTR [esi]
   12eb8:	cmp    DWORD PTR [ecx+0x8],eax
   12ebb:	je     0x12ebf
   12ebd:	mov    DWORD PTR [esi],eax
   12ebf:	pop    esi
   12ec0:	ret    
   12ec1:	int3   
   12ec2:	int3   
   12ec3:	int3   
   12ec4:	int3   
   12ec5:	int3   
   12ec6:	mov    edi,edi
   12ec8:	push   ebp
   12ec9:	mov    ebp,esp
   12ecb:	mov    edx,DWORD PTR [ebp+0x8]
   12ece:	mov    eax,DWORD PTR [edx+0x8]
   12ed1:	push   esi
   12ed2:	mov    esi,DWORD PTR [eax]
   12ed4:	mov    DWORD PTR [edx+0x8],esi
   12ed7:	mov    esi,DWORD PTR [eax]
   12ed9:	cmp    esi,DWORD PTR ds:0x786b4
   12edf:	je     0x12ee4
   12ee1:	mov    DWORD PTR [esi+0x4],edx
   12ee4:	mov    esi,DWORD PTR [edx+0x4]
   12ee7:	mov    DWORD PTR [eax+0x4],esi
   12eea:	mov    ecx,DWORD PTR [ecx+0x4]
   12eed:	pop    esi
   12eee:	cmp    edx,DWORD PTR [ecx+0x4]
   12ef1:	jne    0x12ef8
   12ef3:	mov    DWORD PTR [ecx+0x4],eax
   12ef6:	jmp    0x12f06
   12ef8:	mov    ecx,DWORD PTR [edx+0x4]
   12efb:	cmp    edx,DWORD PTR [ecx]
   12efd:	jne    0x12f03
   12eff:	mov    DWORD PTR [ecx],eax
   12f01:	jmp    0x12f06
   12f03:	mov    DWORD PTR [ecx+0x8],eax
   12f06:	mov    DWORD PTR [eax],edx
   12f08:	mov    DWORD PTR [edx+0x4],eax
   12f0b:	pop    ebp
   12f0c:	ret    0x4
   12f0f:	int3   
   12f10:	int3   
   12f11:	int3   
   12f12:	int3   
   12f13:	int3   
   12f14:	mov    edi,edi
   12f16:	push   ebp
   12f17:	mov    ebp,esp
   12f19:	mov    edx,DWORD PTR [ebp+0x8]
   12f1c:	mov    eax,DWORD PTR [edx]
   12f1e:	push   esi
   12f1f:	mov    esi,DWORD PTR [eax+0x8]
   12f22:	mov    DWORD PTR [edx],esi
   12f24:	mov    esi,DWORD PTR [eax+0x8]
   12f27:	cmp    esi,DWORD PTR ds:0x786b4
   12f2d:	je     0x12f32
   12f2f:	mov    DWORD PTR [esi+0x4],edx
   12f32:	mov    esi,DWORD PTR [edx+0x4]
   12f35:	mov    DWORD PTR [eax+0x4],esi
   12f38:	mov    ecx,DWORD PTR [ecx+0x4]
   12f3b:	pop    esi
   12f3c:	cmp    edx,DWORD PTR [ecx+0x4]
   12f3f:	jne    0x12f46
   12f41:	mov    DWORD PTR [ecx+0x4],eax
   12f44:	jmp    0x12f55
   12f46:	mov    ecx,DWORD PTR [edx+0x4]
   12f49:	cmp    edx,DWORD PTR [ecx+0x8]
   12f4c:	jne    0x12f53
   12f4e:	mov    DWORD PTR [ecx+0x8],eax
   12f51:	jmp    0x12f55
   12f53:	mov    DWORD PTR [ecx],eax
   12f55:	mov    DWORD PTR [eax+0x8],edx
   12f58:	mov    DWORD PTR [edx+0x4],eax
   12f5b:	pop    ebp
   12f5c:	ret    0x4
   12f5f:	int3   
   12f60:	int3   
   12f61:	int3   
   12f62:	int3   
   12f63:	int3   
   12f64:	mov    edi,edi
   12f66:	push   ebp
   12f67:	mov    ebp,esp
   12f69:	mov    eax,DWORD PTR [ecx+0x4]
   12f6c:	push   esi
   12f6d:	mov    esi,DWORD PTR [eax+0x4]
   12f70:	push   edi
   12f71:	mov    edi,eax
   12f73:	jmp    0x12f8e
   12f75:	push   DWORD PTR [ebp+0x8]
   12f78:	lea    eax,[esi+0x10]
   12f7b:	push   eax
   12f7c:	call   0x199e0
   12f81:	test   al,al
   12f83:	je     0x12f8a
   12f85:	mov    esi,DWORD PTR [esi+0x8]
   12f88:	jmp    0x12f8e
   12f8a:	mov    edi,esi
   12f8c:	mov    esi,DWORD PTR [esi]
   12f8e:	cmp    esi,DWORD PTR ds:0x786b8
   12f94:	jne    0x12f75
   12f96:	mov    eax,edi
   12f98:	pop    edi
   12f99:	pop    esi
   12f9a:	pop    ebp
   12f9b:	ret    0x4
   12f9e:	int3   
   12f9f:	int3   
   12fa0:	int3   
   12fa1:	int3   
   12fa2:	int3   
   12fa3:	int3   
   12fa4:	mov    edi,edi
   12fa6:	push   ebp
   12fa7:	mov    ebp,esp
   12fa9:	mov    edx,DWORD PTR [ebp+0x8]
   12fac:	mov    eax,DWORD PTR [edx+0x8]
   12faf:	push   esi
   12fb0:	mov    esi,DWORD PTR [eax]
   12fb2:	mov    DWORD PTR [edx+0x8],esi
   12fb5:	mov    esi,DWORD PTR [eax]
   12fb7:	cmp    esi,DWORD PTR ds:0x786b8
   12fbd:	je     0x12fc2
   12fbf:	mov    DWORD PTR [esi+0x4],edx
   12fc2:	mov    esi,DWORD PTR [edx+0x4]
   12fc5:	mov    DWORD PTR [eax+0x4],esi
   12fc8:	mov    ecx,DWORD PTR [ecx+0x4]
   12fcb:	pop    esi
   12fcc:	cmp    edx,DWORD PTR [ecx+0x4]
   12fcf:	jne    0x12fd6
   12fd1:	mov    DWORD PTR [ecx+0x4],eax
   12fd4:	jmp    0x12fe4
   12fd6:	mov    ecx,DWORD PTR [edx+0x4]
   12fd9:	cmp    edx,DWORD PTR [ecx]
   12fdb:	jne    0x12fe1
   12fdd:	mov    DWORD PTR [ecx],eax
   12fdf:	jmp    0x12fe4
   12fe1:	mov    DWORD PTR [ecx+0x8],eax
   12fe4:	mov    DWORD PTR [eax],edx
   12fe6:	mov    DWORD PTR [edx+0x4],eax
   12fe9:	pop    ebp
   12fea:	ret    0x4
   12fed:	int3   
   12fee:	int3   
   12fef:	int3   
   12ff0:	int3   
   12ff1:	int3   
   12ff2:	mov    edi,edi
   12ff4:	push   ebp
   12ff5:	mov    ebp,esp
   12ff7:	mov    edx,DWORD PTR [ebp+0x8]
   12ffa:	mov    eax,DWORD PTR [edx]
   12ffc:	push   esi
   12ffd:	mov    esi,DWORD PTR [eax+0x8]
   13000:	mov    DWORD PTR [edx],esi
   13002:	mov    esi,DWORD PTR [eax+0x8]
   13005:	cmp    esi,DWORD PTR ds:0x786b8
   1300b:	je     0x13010
   1300d:	mov    DWORD PTR [esi+0x4],edx
   13010:	mov    esi,DWORD PTR [edx+0x4]
   13013:	mov    DWORD PTR [eax+0x4],esi
   13016:	mov    ecx,DWORD PTR [ecx+0x4]
   13019:	pop    esi
   1301a:	cmp    edx,DWORD PTR [ecx+0x4]
   1301d:	jne    0x13024
   1301f:	mov    DWORD PTR [ecx+0x4],eax
   13022:	jmp    0x13033
   13024:	mov    ecx,DWORD PTR [edx+0x4]
   13027:	cmp    edx,DWORD PTR [ecx+0x8]
   1302a:	jne    0x13031
   1302c:	mov    DWORD PTR [ecx+0x8],eax
   1302f:	jmp    0x13033
   13031:	mov    DWORD PTR [ecx],eax
   13033:	mov    DWORD PTR [eax+0x8],edx
   13036:	mov    DWORD PTR [edx+0x4],eax
   13039:	pop    ebp
   1303a:	ret    0x4
   1303d:	int3   
   1303e:	int3   
   1303f:	int3   
   13040:	int3   
   13041:	int3   
   13042:	mov    edi,edi
   13044:	push   ebp
   13045:	mov    ebp,esp
   13047:	mov    eax,DWORD PTR [ecx+0x4]
   1304a:	mov    ecx,DWORD PTR [eax+0x4]
   1304d:	mov    edx,DWORD PTR ds:0x786b0
   13053:	cmp    ecx,edx
   13055:	je     0x13070
   13057:	push   esi
   13058:	mov    esi,DWORD PTR [ebp+0x8]
   1305b:	mov    esi,DWORD PTR [esi]
   1305d:	cmp    esi,DWORD PTR [ecx+0xc]
   13060:	jae    0x13068
   13062:	mov    eax,ecx
   13064:	mov    ecx,DWORD PTR [ecx]
   13066:	jmp    0x1306b
   13068:	mov    ecx,DWORD PTR [ecx+0x8]
   1306b:	cmp    ecx,edx
   1306d:	jne    0x1305d
   1306f:	pop    esi
   13070:	pop    ebp
   13071:	ret    0x4
   13074:	int3   
   13075:	int3   
   13076:	int3   
   13077:	int3   
   13078:	int3   
   13079:	int3   
   1307a:	mov    edi,edi
   1307c:	push   ebp
   1307d:	mov    ebp,esp
   1307f:	mov    eax,DWORD PTR [ecx+0x4]
   13082:	push   esi
   13083:	mov    esi,DWORD PTR [eax+0x4]
   13086:	push   edi
   13087:	mov    edi,eax
   13089:	jmp    0x130a4
   1308b:	lea    eax,[esi+0x10]
   1308e:	push   eax
   1308f:	push   DWORD PTR [ebp+0x8]
   13092:	call   0x199e0
   13097:	test   al,al
   13099:	je     0x130a1
   1309b:	mov    edi,esi
   1309d:	mov    esi,DWORD PTR [esi]
   1309f:	jmp    0x130a4
   130a1:	mov    esi,DWORD PTR [esi+0x8]
   130a4:	cmp    esi,DWORD PTR ds:0x786bc
   130aa:	jne    0x1308b
   130ac:	mov    eax,edi
   130ae:	pop    edi
   130af:	pop    esi
   130b0:	pop    ebp
   130b1:	ret    0x4
   130b4:	int3   
   130b5:	int3   
   130b6:	int3   
   130b7:	int3   
   130b8:	int3   
   130b9:	int3   
   130ba:	mov    edi,edi
   130bc:	push   ebp
   130bd:	mov    ebp,esp
   130bf:	mov    edx,DWORD PTR [ebp+0x8]
   130c2:	mov    eax,DWORD PTR [edx+0x8]
   130c5:	push   esi
   130c6:	mov    esi,DWORD PTR [eax]
   130c8:	mov    DWORD PTR [edx+0x8],esi
   130cb:	mov    esi,DWORD PTR [eax]
   130cd:	cmp    esi,DWORD PTR ds:0x786c0
   130d3:	je     0x130d8
   130d5:	mov    DWORD PTR [esi+0x4],edx
   130d8:	mov    esi,DWORD PTR [edx+0x4]
   130db:	mov    DWORD PTR [eax+0x4],esi
   130de:	mov    ecx,DWORD PTR [ecx+0x4]
   130e1:	pop    esi
   130e2:	cmp    edx,DWORD PTR [ecx+0x4]
   130e5:	jne    0x130ec
   130e7:	mov    DWORD PTR [ecx+0x4],eax
   130ea:	jmp    0x130fa
   130ec:	mov    ecx,DWORD PTR [edx+0x4]
   130ef:	cmp    edx,DWORD PTR [ecx]
   130f1:	jne    0x130f7
   130f3:	mov    DWORD PTR [ecx],eax
   130f5:	jmp    0x130fa
   130f7:	mov    DWORD PTR [ecx+0x8],eax
   130fa:	mov    DWORD PTR [eax],edx
   130fc:	mov    DWORD PTR [edx+0x4],eax
   130ff:	pop    ebp
   13100:	ret    0x4
   13103:	int3   
   13104:	int3   
   13105:	int3   
   13106:	int3   
   13107:	int3   
   13108:	mov    edi,edi
   1310a:	push   ebp
   1310b:	mov    ebp,esp
   1310d:	mov    edx,DWORD PTR [ebp+0x8]
   13110:	mov    eax,DWORD PTR [edx]
   13112:	push   esi
   13113:	mov    esi,DWORD PTR [eax+0x8]
   13116:	mov    DWORD PTR [edx],esi
   13118:	mov    esi,DWORD PTR [eax+0x8]
   1311b:	cmp    esi,DWORD PTR ds:0x786c0
   13121:	je     0x13126
   13123:	mov    DWORD PTR [esi+0x4],edx
   13126:	mov    esi,DWORD PTR [edx+0x4]
   13129:	mov    DWORD PTR [eax+0x4],esi
   1312c:	mov    ecx,DWORD PTR [ecx+0x4]
   1312f:	pop    esi
   13130:	cmp    edx,DWORD PTR [ecx+0x4]
   13133:	jne    0x1313a
   13135:	mov    DWORD PTR [ecx+0x4],eax
   13138:	jmp    0x13149
   1313a:	mov    ecx,DWORD PTR [edx+0x4]
   1313d:	cmp    edx,DWORD PTR [ecx+0x8]
   13140:	jne    0x13147
   13142:	mov    DWORD PTR [ecx+0x8],eax
   13145:	jmp    0x13149
   13147:	mov    DWORD PTR [ecx],eax
   13149:	mov    DWORD PTR [eax+0x8],edx
   1314c:	mov    DWORD PTR [edx+0x4],eax
   1314f:	pop    ebp
   13150:	ret    0x4
   13153:	int3   
   13154:	int3   
   13155:	int3   
   13156:	int3   
   13157:	int3   
   13158:	mov    edi,edi
   1315a:	push   ebp
   1315b:	mov    ebp,esp
   1315d:	mov    eax,DWORD PTR [ecx+0x4]
   13160:	push   esi
   13161:	mov    esi,DWORD PTR [eax+0x4]
   13164:	push   edi
   13165:	mov    edi,eax
   13167:	jmp    0x13182
   13169:	lea    eax,[esi+0xc]
   1316c:	push   eax
   1316d:	push   DWORD PTR [ebp+0x8]
   13170:	call   0x199e0
   13175:	test   al,al
   13177:	je     0x1317f
   13179:	mov    edi,esi
   1317b:	mov    esi,DWORD PTR [esi]
   1317d:	jmp    0x13182
   1317f:	mov    esi,DWORD PTR [esi+0x8]
   13182:	cmp    esi,DWORD PTR ds:0x786c0
   13188:	jne    0x13169
   1318a:	mov    eax,edi
   1318c:	pop    edi
   1318d:	pop    esi
   1318e:	pop    ebp
   1318f:	ret    0x4
   13192:	int3   
   13193:	int3   
   13194:	int3   
   13195:	int3   
   13196:	int3   
   13197:	int3   
   13198:	mov    edi,edi
   1319a:	push   ebp
   1319b:	mov    ebp,esp
   1319d:	mov    edx,DWORD PTR [ebp+0x8]
   131a0:	mov    eax,DWORD PTR [edx+0x8]
   131a3:	push   esi
   131a4:	mov    esi,DWORD PTR [eax]
   131a6:	mov    DWORD PTR [edx+0x8],esi
   131a9:	mov    esi,DWORD PTR [eax]
   131ab:	cmp    esi,DWORD PTR ds:0x786c4
   131b1:	je     0x131b6
   131b3:	mov    DWORD PTR [esi+0x4],edx
   131b6:	mov    esi,DWORD PTR [edx+0x4]
   131b9:	mov    DWORD PTR [eax+0x4],esi
   131bc:	mov    ecx,DWORD PTR [ecx+0x4]
   131bf:	pop    esi
   131c0:	cmp    edx,DWORD PTR [ecx+0x4]
   131c3:	jne    0x131ca
   131c5:	mov    DWORD PTR [ecx+0x4],eax
   131c8:	jmp    0x131d8
   131ca:	mov    ecx,DWORD PTR [edx+0x4]
   131cd:	cmp    edx,DWORD PTR [ecx]
   131cf:	jne    0x131d5
   131d1:	mov    DWORD PTR [ecx],eax
   131d3:	jmp    0x131d8
   131d5:	mov    DWORD PTR [ecx+0x8],eax
   131d8:	mov    DWORD PTR [eax],edx
   131da:	mov    DWORD PTR [edx+0x4],eax
   131dd:	pop    ebp
   131de:	ret    0x4
   131e1:	int3   
   131e2:	int3   
   131e3:	int3   
   131e4:	int3   
   131e5:	int3   
   131e6:	mov    edi,edi
   131e8:	push   ebp
   131e9:	mov    ebp,esp
   131eb:	mov    edx,DWORD PTR [ebp+0x8]
   131ee:	mov    eax,DWORD PTR [edx]
   131f0:	push   esi
   131f1:	mov    esi,DWORD PTR [eax+0x8]
   131f4:	mov    DWORD PTR [edx],esi
   131f6:	mov    esi,DWORD PTR [eax+0x8]
   131f9:	cmp    esi,DWORD PTR ds:0x786c4
   131ff:	je     0x13204
   13201:	mov    DWORD PTR [esi+0x4],edx
   13204:	mov    esi,DWORD PTR [edx+0x4]
   13207:	mov    DWORD PTR [eax+0x4],esi
   1320a:	mov    ecx,DWORD PTR [ecx+0x4]
   1320d:	pop    esi
   1320e:	cmp    edx,DWORD PTR [ecx+0x4]
   13211:	jne    0x13218
   13213:	mov    DWORD PTR [ecx+0x4],eax
   13216:	jmp    0x13227
   13218:	mov    ecx,DWORD PTR [edx+0x4]
   1321b:	cmp    edx,DWORD PTR [ecx+0x8]
   1321e:	jne    0x13225
   13220:	mov    DWORD PTR [ecx+0x8],eax
   13223:	jmp    0x13227
   13225:	mov    DWORD PTR [ecx],eax
   13227:	mov    DWORD PTR [eax+0x8],edx
   1322a:	mov    DWORD PTR [edx+0x4],eax
   1322d:	pop    ebp
   1322e:	ret    0x4
   13231:	int3   
   13232:	int3   
   13233:	int3   
   13234:	int3   
   13235:	int3   
   13236:	mov    edi,edi
   13238:	push   ebp
   13239:	mov    ebp,esp
   1323b:	mov    eax,DWORD PTR [ecx+0x4]
   1323e:	mov    ecx,DWORD PTR [eax+0x4]
   13241:	mov    edx,DWORD PTR ds:0x786c4
   13247:	cmp    ecx,edx
   13249:	je     0x13264
   1324b:	push   esi
   1324c:	mov    esi,DWORD PTR [ebp+0x8]
   1324f:	mov    esi,DWORD PTR [esi]
   13251:	cmp    esi,DWORD PTR [ecx+0xc]
   13254:	jge    0x1325c
   13256:	mov    eax,ecx
   13258:	mov    ecx,DWORD PTR [ecx]
   1325a:	jmp    0x1325f
   1325c:	mov    ecx,DWORD PTR [ecx+0x8]
   1325f:	cmp    ecx,edx
   13261:	jne    0x13251
   13263:	pop    esi
   13264:	pop    ebp
   13265:	ret    0x4
   13268:	int3   
   13269:	int3   
   1326a:	int3   
   1326b:	int3   
   1326c:	int3   
   1326d:	int3   
   1326e:	mov    edi,edi
   13270:	push   ebp
   13271:	mov    ebp,esp
   13273:	mov    eax,DWORD PTR [ecx+0x4]
   13276:	push   esi
   13277:	mov    esi,DWORD PTR [eax+0x4]
   1327a:	push   edi
   1327b:	mov    edi,eax
   1327d:	jmp    0x13298
   1327f:	push   DWORD PTR [ebp+0x8]
   13282:	lea    eax,[esi+0xc]
   13285:	push   eax
   13286:	call   0x19a10
   1328b:	test   al,al
   1328d:	je     0x13294
   1328f:	mov    esi,DWORD PTR [esi+0x8]
   13292:	jmp    0x13298
   13294:	mov    edi,esi
   13296:	mov    esi,DWORD PTR [esi]
   13298:	cmp    esi,DWORD PTR ds:0x786cc
   1329e:	jne    0x1327f
   132a0:	mov    eax,edi
   132a2:	pop    edi
   132a3:	pop    esi
   132a4:	pop    ebp
   132a5:	ret    0x4
   132a8:	int3   
   132a9:	int3   
   132aa:	int3   
   132ab:	int3   
   132ac:	int3   
   132ad:	int3   
   132ae:	mov    edi,edi
   132b0:	push   ebp
   132b1:	mov    ebp,esp
   132b3:	mov    eax,DWORD PTR [ecx+0x4]
   132b6:	mov    ecx,DWORD PTR [eax+0x4]
   132b9:	mov    edx,DWORD PTR ds:0x786b4
   132bf:	cmp    ecx,edx
   132c1:	je     0x132dc
   132c3:	push   esi
   132c4:	mov    esi,DWORD PTR [ebp+0x8]
   132c7:	mov    esi,DWORD PTR [esi]
   132c9:	cmp    DWORD PTR [ecx+0xc],esi
   132cc:	jae    0x132d3
   132ce:	mov    ecx,DWORD PTR [ecx+0x8]
   132d1:	jmp    0x132d7
   132d3:	mov    eax,ecx
   132d5:	mov    ecx,DWORD PTR [ecx]
   132d7:	cmp    ecx,edx
   132d9:	jne    0x132c9
   132db:	pop    esi
   132dc:	pop    ebp
   132dd:	ret    0x4
   132e0:	int3   
   132e1:	int3   
   132e2:	int3   
   132e3:	int3   
   132e4:	int3   
   132e5:	int3   
   132e6:	mov    edi,edi
   132e8:	push   ebp
   132e9:	mov    ebp,esp
   132eb:	mov    eax,DWORD PTR [ecx+0x4]
   132ee:	mov    ecx,DWORD PTR [eax+0x4]
   132f1:	mov    edx,DWORD PTR ds:0x786b4
   132f7:	cmp    ecx,edx
   132f9:	je     0x13314
   132fb:	push   esi
   132fc:	mov    esi,DWORD PTR [ebp+0x8]
   132ff:	mov    esi,DWORD PTR [esi]
   13301:	cmp    esi,DWORD PTR [ecx+0xc]
   13304:	jae    0x1330c
   13306:	mov    eax,ecx
   13308:	mov    ecx,DWORD PTR [ecx]
   1330a:	jmp    0x1330f
   1330c:	mov    ecx,DWORD PTR [ecx+0x8]
   1330f:	cmp    ecx,edx
   13311:	jne    0x13301
   13313:	pop    esi
   13314:	pop    ebp
   13315:	ret    0x4
   13318:	int3   
   13319:	int3   
   1331a:	int3   
   1331b:	int3   
   1331c:	int3   
   1331d:	int3   
   1331e:	mov    edi,edi
   13320:	push   ebp
   13321:	mov    ebp,esp
   13323:	mov    edx,DWORD PTR [ebp+0x8]
   13326:	mov    eax,DWORD PTR [edx+0x8]
   13329:	push   esi
   1332a:	mov    esi,DWORD PTR [eax]
   1332c:	mov    DWORD PTR [edx+0x8],esi
   1332f:	mov    esi,DWORD PTR [eax]
   13331:	cmp    esi,DWORD PTR ds:0x786cc
   13337:	je     0x1333c
   13339:	mov    DWORD PTR [esi+0x4],edx
   1333c:	mov    esi,DWORD PTR [edx+0x4]
   1333f:	mov    DWORD PTR [eax+0x4],esi
   13342:	mov    ecx,DWORD PTR [ecx+0x4]
   13345:	pop    esi
   13346:	cmp    edx,DWORD PTR [ecx+0x4]
   13349:	jne    0x13350
   1334b:	mov    DWORD PTR [ecx+0x4],eax
   1334e:	jmp    0x1335e
   13350:	mov    ecx,DWORD PTR [edx+0x4]
   13353:	cmp    edx,DWORD PTR [ecx]
   13355:	jne    0x1335b
   13357:	mov    DWORD PTR [ecx],eax
   13359:	jmp    0x1335e
   1335b:	mov    DWORD PTR [ecx+0x8],eax
   1335e:	mov    DWORD PTR [eax],edx
   13360:	mov    DWORD PTR [edx+0x4],eax
   13363:	pop    ebp
   13364:	ret    0x4
   13367:	int3   
   13368:	int3   
   13369:	int3   
   1336a:	int3   
   1336b:	int3   
   1336c:	mov    edi,edi
   1336e:	push   ebp
   1336f:	mov    ebp,esp
   13371:	mov    edx,DWORD PTR [ebp+0x8]
   13374:	mov    eax,DWORD PTR [edx]
   13376:	push   esi
   13377:	mov    esi,DWORD PTR [eax+0x8]
   1337a:	mov    DWORD PTR [edx],esi
   1337c:	mov    esi,DWORD PTR [eax+0x8]
   1337f:	cmp    esi,DWORD PTR ds:0x786cc
   13385:	je     0x1338a
   13387:	mov    DWORD PTR [esi+0x4],edx
   1338a:	mov    esi,DWORD PTR [edx+0x4]
   1338d:	mov    DWORD PTR [eax+0x4],esi
   13390:	mov    ecx,DWORD PTR [ecx+0x4]
   13393:	pop    esi
   13394:	cmp    edx,DWORD PTR [ecx+0x4]
   13397:	jne    0x1339e
   13399:	mov    DWORD PTR [ecx+0x4],eax
   1339c:	jmp    0x133ad
   1339e:	mov    ecx,DWORD PTR [edx+0x4]
   133a1:	cmp    edx,DWORD PTR [ecx+0x8]
   133a4:	jne    0x133ab
   133a6:	mov    DWORD PTR [ecx+0x8],eax
   133a9:	jmp    0x133ad
   133ab:	mov    DWORD PTR [ecx],eax
   133ad:	mov    DWORD PTR [eax+0x8],edx
   133b0:	mov    DWORD PTR [edx+0x4],eax
   133b3:	pop    ebp
   133b4:	ret    0x4
   133b7:	int3   
   133b8:	int3   
   133b9:	int3   
   133ba:	int3   
   133bb:	int3   
   133bc:	mov    edi,edi
   133be:	push   esi
   133bf:	mov    esi,ecx
   133c1:	mov    ecx,DWORD PTR [esi]
   133c3:	cmp    DWORD PTR [ecx+0x1c],0x0
   133c7:	jne    0x133d6
   133c9:	mov    eax,DWORD PTR [ecx+0x4]
   133cc:	cmp    DWORD PTR [eax+0x4],ecx
   133cf:	jne    0x133d6
   133d1:	mov    eax,DWORD PTR [ecx+0x8]
   133d4:	jmp    0x133f3
   133d6:	mov    eax,DWORD PTR [ecx]
   133d8:	cmp    eax,DWORD PTR ds:0x786cc
   133de:	je     0x133ec
   133e0:	push   eax
   133e1:	call   0x111de
   133e6:	jmp    0x133f3
   133e8:	mov    DWORD PTR [esi],eax
   133ea:	mov    ecx,eax
   133ec:	mov    eax,DWORD PTR [ecx+0x4]
   133ef:	cmp    ecx,DWORD PTR [eax]
   133f1:	je     0x133e8
   133f3:	mov    DWORD PTR [esi],eax
   133f5:	pop    esi
   133f6:	ret    
   133f7:	int3   
   133f8:	int3   
   133f9:	int3   
   133fa:	int3   
   133fb:	int3   
   133fc:	mov    edi,edi
   133fe:	push   ebp
   133ff:	mov    ebp,esp
   13401:	cmp    DWORD PTR [ebp+0x8],0x0
   13405:	jge    0x1340b
   13407:	and    DWORD PTR [ebp+0x8],0x0
   1340b:	push   DWORD PTR [ebp+0x8]
   1340e:	call   0x11cec
   13413:	pop    ecx
   13414:	pop    ebp
   13415:	ret    0x8
   13418:	int3   
   13419:	int3   
   1341a:	int3   
   1341b:	int3   
   1341c:	int3   
   1341d:	int3   
   1341e:	mov    edi,edi
   13420:	push   ebp
   13421:	mov    ebp,esp
   13423:	push   esi
   13424:	mov    esi,ecx
   13426:	call   0x12b26
   1342b:	test   BYTE PTR [ebp+0x8],0x1
   1342f:	je     0x13438
   13431:	push   esi
   13432:	call   0x11d22
   13437:	pop    ecx
   13438:	mov    eax,esi
   1343a:	pop    esi
   1343b:	pop    ebp
   1343c:	ret    0x4
   1343f:	int3   
   13440:	int3   
   13441:	int3   
   13442:	int3   
   13443:	int3   
   13444:	mov    edi,edi
   13446:	push   ebp
   13447:	mov    ebp,esp
   13449:	push   edi
   1344a:	mov    edi,DWORD PTR [ebp+0xc]
   1344d:	cmp    DWORD PTR [ebp+0x8],edi
   13450:	je     0x13466
   13452:	push   esi
   13453:	mov    esi,DWORD PTR [ebp+0x10]
   13456:	inc    DWORD PTR [esi]
   13458:	lea    ecx,[ebp+0x8]
   1345b:	call   0x10ef4
   13460:	cmp    DWORD PTR [ebp+0x8],edi
   13463:	jne    0x13456
   13465:	pop    esi
   13466:	pop    edi
   13467:	pop    ebp
   13468:	ret    
   13469:	int3   
   1346a:	int3   
   1346b:	int3   
   1346c:	int3   
   1346d:	int3   
   1346e:	mov    edi,edi
   13470:	push   ebp
   13471:	mov    ebp,esp
   13473:	push   edi
   13474:	mov    edi,DWORD PTR [ebp+0xc]
   13477:	cmp    DWORD PTR [ebp+0x8],edi
   1347a:	je     0x13490
   1347c:	push   esi
   1347d:	mov    esi,DWORD PTR [ebp+0x10]
   13480:	inc    DWORD PTR [esi]
   13482:	lea    ecx,[ebp+0x8]
   13485:	call   0x11172
   1348a:	cmp    DWORD PTR [ebp+0x8],edi
   1348d:	jne    0x13480
   1348f:	pop    esi
   13490:	pop    edi
   13491:	pop    ebp
   13492:	ret    
   13493:	int3   
   13494:	int3   
   13495:	int3   
   13496:	int3   
   13497:	int3   
   13498:	mov    edi,edi
   1349a:	push   ebp
   1349b:	mov    ebp,esp
   1349d:	push   edi
   1349e:	mov    edi,DWORD PTR [ebp+0xc]
   134a1:	cmp    DWORD PTR [ebp+0x8],edi
   134a4:	je     0x134ba
   134a6:	push   esi
   134a7:	mov    esi,DWORD PTR [ebp+0x10]
   134aa:	inc    DWORD PTR [esi]
   134ac:	lea    ecx,[ebp+0x8]
   134af:	call   0x111a8
   134b4:	cmp    DWORD PTR [ebp+0x8],edi
   134b7:	jne    0x134aa
   134b9:	pop    esi
   134ba:	pop    edi
   134bb:	pop    ebp
   134bc:	ret    
   134bd:	int3   
   134be:	int3   
   134bf:	int3   
   134c0:	int3   
   134c1:	int3   
   134c2:	mov    edi,edi
   134c4:	push   ebp
   134c5:	mov    ebp,esp
   134c7:	push   edi
   134c8:	mov    edi,DWORD PTR [ebp+0xc]
   134cb:	cmp    DWORD PTR [ebp+0x8],edi
   134ce:	je     0x134e4
   134d0:	push   esi
   134d1:	mov    esi,DWORD PTR [ebp+0x10]
   134d4:	inc    DWORD PTR [esi]
   134d6:	lea    ecx,[ebp+0x8]
   134d9:	call   0x12e90
   134de:	cmp    DWORD PTR [ebp+0x8],edi
   134e1:	jne    0x134d4
   134e3:	pop    esi
   134e4:	pop    edi
   134e5:	pop    ebp
   134e6:	ret    
   134e7:	int3   
   134e8:	int3   
   134e9:	int3   
   134ea:	int3   
   134eb:	int3   
   134ec:	mov    edi,edi
   134ee:	push   esi
   134ef:	mov    esi,ecx
   134f1:	push   DWORD PTR [esi+0x38]
   134f4:	call   0x11d22
   134f9:	push   DWORD PTR [esi+0x18]
   134fc:	call   0x11d22
   13501:	push   DWORD PTR [esi+0x10]
   13504:	call   0x11d22
   13509:	push   DWORD PTR [esi+0x8]
   1350c:	call   0x11d22
   13511:	push   DWORD PTR [esi]
   13513:	call   0x11d22
   13518:	add    esp,0x14
   1351b:	pop    esi
   1351c:	ret    
   1351d:	int3   
   1351e:	int3   
   1351f:	int3   
   13520:	int3   
   13521:	int3   
   13522:	mov    edi,edi
   13524:	push   ebp
   13525:	mov    ebp,esp
   13527:	push   esi
   13528:	mov    esi,ecx
   1352a:	mov    ecx,DWORD PTR [esi]
   1352c:	test   ecx,ecx
   1352e:	je     0x13535
   13530:	call   0x11d64
   13535:	mov    eax,DWORD PTR [ebp+0x8]
   13538:	mov    eax,DWORD PTR [eax]
   1353a:	mov    DWORD PTR [esi],eax
   1353c:	inc    DWORD PTR [eax+0x4]
   1353f:	mov    eax,esi
   13541:	pop    esi
   13542:	pop    ebp
   13543:	ret    0x4
   13546:	int3   
   13547:	int3   
   13548:	int3   
   13549:	int3   
   1354a:	int3   
   1354b:	int3   
   1354c:	mov    edi,edi
   1354e:	push   ebp
   1354f:	mov    ebp,esp
   13551:	push   ebx
   13552:	push   esi
   13553:	push   edi
   13554:	mov    edi,DWORD PTR [ebp+0xc]
   13557:	mov    esi,ecx
   13559:	and    DWORD PTR [esi+0x4],0x0
   1355d:	lea    eax,[edi+0x1]
   13560:	push   eax
   13561:	mov    DWORD PTR [esi+0x8],edi
   13564:	call   0x11cec
   13569:	push   edi
   1356a:	push   DWORD PTR [ebp+0x8]
   1356d:	mov    ebx,eax
   1356f:	push   ebx
   13570:	call   0x1dcce
   13575:	add    esp,0x10
   13578:	inc    DWORD PTR [esi+0x4]
   1357b:	pop    edi
   1357c:	mov    DWORD PTR [esi],ebx
   1357e:	mov    eax,esi
   13580:	pop    esi
   13581:	pop    ebx
   13582:	pop    ebp
   13583:	ret    0x8
   13586:	int3   
   13587:	int3   
   13588:	int3   
   13589:	int3   
   1358a:	int3   
   1358b:	int3   
   1358c:	mov    edi,edi
   1358e:	push   ebp
   1358f:	mov    ebp,esp
   13591:	sub    esp,0x18
   13594:	lea    eax,[ebp-0x18]
   13597:	push   eax
   13598:	push   DWORD PTR [ebp+0x8]
   1359b:	call   0x11ed8
   135a0:	test   al,al
   135a2:	je     0x13611
   135a4:	lea    eax,[ebp-0x4]
   135a7:	push   eax
   135a8:	push   DWORD PTR [ebp+0xc]
   135ab:	call   0x11a3e
   135b0:	call   eax
   135b2:	test   eax,eax
   135b4:	jl     0x13611
   135b6:	push   esi
   135b7:	push   0x5
   135b9:	call   0x128e0
   135be:	mov    esi,eax
   135c0:	test   esi,esi
   135c2:	je     0x13610
   135c4:	mov    edx,DWORD PTR [ebp+0x10]
   135c7:	cmp    DWORD PTR [esi+0x44],edx
   135ca:	je     0x135d9
   135cc:	mov    ecx,DWORD PTR [eax]
   135ce:	test   ecx,ecx
   135d0:	je     0x135fd
   135d2:	add    eax,ecx
   135d4:	cmp    DWORD PTR [eax+0x44],edx
   135d7:	jne    0x135cc
   135d9:	cmp    DWORD PTR [eax+0x4],0x0
   135dd:	je     0x135fd
   135df:	mov    ecx,DWORD PTR [eax+0xd8]
   135e5:	mov    eax,DWORD PTR [eax+0xdc]
   135eb:	mov    DWORD PTR [ebp-0x14],eax
   135ee:	lea    eax,[ebp-0x18]
   135f1:	push   eax
   135f2:	push   DWORD PTR [ebp+0x8]
   135f5:	mov    DWORD PTR [ebp-0x18],ecx
   135f8:	call   0x11f28
   135fd:	mov    ecx,DWORD PTR [ebp-0x4]
   13600:	call   DWORD PTR ds:0x1f450
   13606:	push   0x0
   13608:	push   esi
   13609:	call   0x115fa
   1360e:	call   eax
   13610:	pop    esi
   13611:	leave  
   13612:	ret    0x10
   13615:	int3   
   13616:	int3   
   13617:	int3   
   13618:	int3   
   13619:	int3   
   1361a:	mov    edi,edi
   1361c:	push   ebp
   1361d:	mov    ebp,esp
   1361f:	push   esi
   13620:	push   DWORD PTR [ebp+0xc]
   13623:	mov    esi,ecx
   13625:	push   DWORD PTR [ebp+0x8]
   13628:	call   0x12b44
   1362d:	mov    eax,esi
   1362f:	pop    esi
   13630:	pop    ebp
   13631:	ret    0x8
   13634:	int3   
   13635:	int3   
   13636:	int3   
   13637:	int3   
   13638:	int3   
   13639:	int3   
   1363a:	mov    edi,edi
   1363c:	push   ebp
   1363d:	mov    ebp,esp
   1363f:	mov    eax,DWORD PTR [ebp+0x8]
   13642:	push   esi
   13643:	push   DWORD PTR [eax+0x4]
   13646:	mov    esi,ecx
   13648:	push   DWORD PTR [eax]
   1364a:	call   0x12b44
   1364f:	mov    eax,esi
   13651:	pop    esi
   13652:	pop    ebp
   13653:	ret    0x4
   13656:	int3   
   13657:	int3   
   13658:	int3   
   13659:	int3   
   1365a:	int3   
   1365b:	int3   
   1365c:	mov    edi,edi
   1365e:	push   esi
   1365f:	mov    esi,ecx
   13661:	lea    ecx,[esi+0x8]
   13664:	call   0x134ec
   13669:	push   DWORD PTR [esi]
   1366b:	call   0x11d22
   13670:	pop    ecx
   13671:	pop    esi
   13672:	ret    
   13673:	int3   
   13674:	int3   
   13675:	int3   
   13676:	int3   
   13677:	int3   
   13678:	mov    edi,edi
   1367a:	push   ebp
   1367b:	mov    ebp,esp
   1367d:	push   esi
   1367e:	push   DWORD PTR [ebp+0xc]
   13681:	mov    esi,ecx
   13683:	push   DWORD PTR [ebp+0x8]
   13686:	call   0x12bfe
   1368b:	mov    eax,esi
   1368d:	pop    esi
   1368e:	pop    ebp
   1368f:	ret    0x8
   13692:	int3   
   13693:	int3   
   13694:	int3   
   13695:	int3   
   13696:	int3   
   13697:	int3   
   13698:	mov    edi,edi
   1369a:	push   ebp
   1369b:	mov    ebp,esp
   1369d:	mov    eax,DWORD PTR [ebp+0x8]
   136a0:	push   esi
   136a1:	push   DWORD PTR [eax+0x4]
   136a4:	mov    esi,ecx
   136a6:	push   DWORD PTR [eax]
   136a8:	call   0x12bfe
   136ad:	mov    eax,esi
   136af:	pop    esi
   136b0:	pop    ebp
   136b1:	ret    0x4
   136b4:	int3   
   136b5:	int3   
   136b6:	int3   
   136b7:	int3   
   136b8:	int3   
   136b9:	int3   
   136ba:	mov    edi,edi
   136bc:	push   ebp
   136bd:	mov    ebp,esp
   136bf:	push   esi
   136c0:	mov    esi,DWORD PTR [ebp+0x8]
   136c3:	lea    eax,[ebp+0xc]
   136c6:	push   eax
   136c7:	mov    ecx,esi
   136c9:	call   0x13698
   136ce:	xor    ecx,ecx
   136d0:	inc    ecx
   136d1:	cmp    DWORD PTR [esi+0x4],ecx
   136d4:	jbe    0x136e8
   136d6:	mov    eax,DWORD PTR [esi]
   136d8:	lea    eax,[eax+ecx*2]
   136db:	mov    dx,WORD PTR [eax-0x2]
   136df:	xor    WORD PTR [eax],dx
   136e2:	inc    ecx
   136e3:	cmp    ecx,DWORD PTR [esi+0x4]
   136e6:	jb     0x136d6
   136e8:	push   DWORD PTR [ebp+0xc]
   136eb:	call   0x11d22
   136f0:	pop    ecx
   136f1:	mov    eax,esi
   136f3:	pop    esi
   136f4:	pop    ebp
   136f5:	ret    0xc
   136f8:	int3   
   136f9:	int3   
   136fa:	int3   
   136fb:	int3   
   136fc:	int3   
   136fd:	int3   
   136fe:	mov    edi,edi
   13700:	push   ebp
   13701:	mov    ebp,esp
   13703:	push   esi
   13704:	mov    esi,DWORD PTR [ebp+0x8]
   13707:	lea    eax,[ebp+0xc]
   1370a:	push   eax
   1370b:	mov    ecx,esi
   1370d:	call   0x1363a
   13712:	xor    ecx,ecx
   13714:	inc    ecx
   13715:	cmp    DWORD PTR [esi+0x4],ecx
   13718:	jbe    0x13729
   1371a:	mov    eax,DWORD PTR [esi]
   1371c:	add    eax,ecx
   1371e:	mov    dl,BYTE PTR [eax-0x1]
   13721:	xor    BYTE PTR [eax],dl
   13723:	inc    ecx
   13724:	cmp    ecx,DWORD PTR [esi+0x4]
   13727:	jb     0x1371a
   13729:	push   DWORD PTR [ebp+0xc]
   1372c:	call   0x11d22
   13731:	pop    ecx
   13732:	mov    eax,esi
   13734:	pop    esi
   13735:	pop    ebp
   13736:	ret    0xc
   13739:	int3   
   1373a:	int3   
   1373b:	int3   
   1373c:	int3   
   1373d:	int3   
   1373e:	mov    edi,edi
   13740:	push   esi
   13741:	mov    esi,ecx
   13743:	mov    ecx,DWORD PTR [esi]
   13745:	mov    eax,DWORD PTR [ecx+0x8]
   13748:	cmp    eax,DWORD PTR ds:0x786bc
   1374e:	je     0x1375c
   13750:	push   eax
   13751:	call   0x12c6a
   13756:	jmp    0x1376b
   13758:	mov    DWORD PTR [esi],eax
   1375a:	mov    ecx,eax
   1375c:	mov    eax,DWORD PTR [ecx+0x4]
   1375f:	cmp    ecx,DWORD PTR [eax+0x8]
   13762:	je     0x13758
   13764:	mov    ecx,DWORD PTR [esi]
   13766:	cmp    DWORD PTR [ecx+0x8],eax
   13769:	je     0x1376d
   1376b:	mov    DWORD PTR [esi],eax
   1376d:	pop    esi
   1376e:	ret    
   1376f:	int3   
   13770:	int3   
   13771:	int3   
   13772:	int3   
   13773:	int3   
   13774:	mov    edi,edi
   13776:	push   ebp
   13777:	mov    ebp,esp
   13779:	push   esi
   1377a:	push   DWORD PTR [ebp+0x8]
   1377d:	mov    esi,ecx
   1377f:	call   0x1363a
   13784:	push   DWORD PTR [ebp+0xc]
   13787:	lea    ecx,[esi+0x8]
   1378a:	call   0x1363a
   1378f:	mov    eax,esi
   13791:	pop    esi
   13792:	pop    ebp
   13793:	ret    0x8
   13796:	int3   
   13797:	int3   
   13798:	int3   
   13799:	int3   
   1379a:	int3   
   1379b:	int3   
   1379c:	mov    edi,edi
   1379e:	push   ebp
   1379f:	mov    ebp,esp
   137a1:	mov    eax,DWORD PTR [ebp+0x8]
   137a4:	mov    eax,DWORD PTR [eax]
   137a6:	push   esi
   137a7:	push   DWORD PTR [ebp+0xc]
   137aa:	mov    esi,ecx
   137ac:	lea    ecx,[esi+0x4]
   137af:	mov    DWORD PTR [esi],eax
   137b1:	call   0x11d40
   137b6:	mov    eax,esi
   137b8:	pop    esi
   137b9:	pop    ebp
   137ba:	ret    0x8
   137bd:	int3   
   137be:	int3   
   137bf:	int3   
   137c0:	int3   
   137c1:	int3   
   137c2:	mov    edi,edi
   137c4:	push   ebp
   137c5:	mov    ebp,esp
   137c7:	push   esi
   137c8:	push   edi
   137c9:	mov    edi,DWORD PTR [ebp+0x8]
   137cc:	push   edi
   137cd:	mov    esi,ecx
   137cf:	call   0x1363a
   137d4:	lea    eax,[edi+0x8]
   137d7:	push   eax
   137d8:	lea    ecx,[esi+0x8]
   137db:	call   0x1363a
   137e0:	lea    eax,[edi+0x10]
   137e3:	push   eax
   137e4:	lea    ecx,[esi+0x10]
   137e7:	call   0x1363a
   137ec:	lea    eax,[edi+0x18]
   137ef:	push   eax
   137f0:	lea    ecx,[esi+0x18]
   137f3:	call   0x1363a
   137f8:	mov    eax,DWORD PTR [edi+0x20]
   137fb:	mov    DWORD PTR [esi+0x20],eax
   137fe:	mov    eax,DWORD PTR [edi+0x28]
   13801:	mov    DWORD PTR [esi+0x28],eax
   13804:	mov    eax,DWORD PTR [edi+0x2c]
   13807:	mov    DWORD PTR [esi+0x2c],eax
   1380a:	mov    eax,DWORD PTR [edi+0x30]
   1380d:	mov    DWORD PTR [esi+0x30],eax
   13810:	mov    eax,DWORD PTR [edi+0x34]
   13813:	add    edi,0x38
   13816:	push   edi
   13817:	lea    ecx,[esi+0x38]
   1381a:	mov    DWORD PTR [esi+0x34],eax
   1381d:	call   0x1363a
   13822:	pop    edi
   13823:	mov    eax,esi
   13825:	pop    esi
   13826:	pop    ebp
   13827:	ret    0x4
   1382a:	int3   
   1382b:	int3   
   1382c:	int3   
   1382d:	int3   
   1382e:	int3   
   1382f:	int3   
   13830:	mov    edi,edi
   13832:	push   ebp
   13833:	mov    ebp,esp
   13835:	push   ebx
   13836:	push   esi
   13837:	push   edi
   13838:	mov    edi,DWORD PTR [ebp+0x8]
   1383b:	mov    ebx,ecx
   1383d:	mov    esi,edi
   1383f:	cmp    edi,DWORD PTR ds:0x786b0
   13845:	je     0x13864
   13847:	push   DWORD PTR [esi+0x8]
   1384a:	mov    ecx,ebx
   1384c:	call   0x13830
   13851:	mov    esi,DWORD PTR [esi]
   13853:	push   edi
   13854:	call   0x11d22
   13859:	pop    ecx
   1385a:	mov    edi,esi
   1385c:	cmp    esi,DWORD PTR ds:0x786b0
   13862:	jne    0x13847
   13864:	pop    edi
   13865:	pop    esi
   13866:	pop    ebx
   13867:	pop    ebp
   13868:	ret    0x4
   1386b:	int3   
   1386c:	int3   
   1386d:	int3   
   1386e:	int3   
   1386f:	int3   
   13870:	mov    edi,edi
   13872:	push   ebp
   13873:	mov    ebp,esp
   13875:	push   esi
   13876:	push   DWORD PTR [ebp+0x8]
   13879:	mov    esi,ecx
   1387b:	call   0x13698
   13880:	push   DWORD PTR [ebp+0xc]
   13883:	lea    ecx,[esi+0x8]
   13886:	call   0x13698
   1388b:	mov    eax,esi
   1388d:	pop    esi
   1388e:	pop    ebp
   1388f:	ret    0x8
   13892:	int3   
   13893:	int3   
   13894:	int3   
   13895:	int3   
   13896:	int3   
   13897:	int3   
   13898:	mov    edi,edi
   1389a:	push   ebp
   1389b:	mov    ebp,esp
   1389d:	push   ebx
   1389e:	push   esi
   1389f:	push   edi
   138a0:	mov    edi,DWORD PTR [ebp+0x8]
   138a3:	mov    ebx,ecx
   138a5:	mov    esi,edi
   138a7:	cmp    edi,DWORD PTR ds:0x786b4
   138ad:	je     0x138cc
   138af:	push   DWORD PTR [esi+0x8]
   138b2:	mov    ecx,ebx
   138b4:	call   0x13898
   138b9:	mov    esi,DWORD PTR [esi]
   138bb:	push   edi
   138bc:	call   0x11d22
   138c1:	pop    ecx
   138c2:	mov    edi,esi
   138c4:	cmp    esi,DWORD PTR ds:0x786b4
   138ca:	jne    0x138af
   138cc:	pop    edi
   138cd:	pop    esi
   138ce:	pop    ebx
   138cf:	pop    ebp
   138d0:	ret    0x4
   138d3:	int3   
   138d4:	int3   
   138d5:	int3   
   138d6:	int3   
   138d7:	int3   
   138d8:	mov    edi,edi
   138da:	push   ebp
   138db:	mov    ebp,esp
   138dd:	push   ecx
   138de:	push   DWORD PTR [ebp-0x4]
   138e1:	push   DWORD PTR [ebp+0x10]
   138e4:	push   DWORD PTR [ebp+0xc]
   138e7:	push   DWORD PTR [ebp+0x8]
   138ea:	call   0x13444
   138ef:	add    esp,0x10
   138f2:	leave  
   138f3:	ret    
   138f4:	int3   
   138f5:	int3   
   138f6:	int3   
   138f7:	int3   
   138f8:	int3   
   138f9:	int3   
   138fa:	mov    edi,edi
   138fc:	push   ebp
   138fd:	mov    ebp,esp
   138ff:	push   ecx
   13900:	push   DWORD PTR [ebp-0x4]
   13903:	push   DWORD PTR [ebp+0x10]
   13906:	push   DWORD PTR [ebp+0xc]
   13909:	push   DWORD PTR [ebp+0x8]
   1390c:	call   0x1346e
   13911:	add    esp,0x10
   13914:	leave  
   13915:	ret    
   13916:	int3   
   13917:	int3   
   13918:	int3   
   13919:	int3   
   1391a:	int3   
   1391b:	int3   
   1391c:	mov    edi,edi
   1391e:	push   ebp
   1391f:	mov    ebp,esp
   13921:	push   ecx
   13922:	push   DWORD PTR [ebp-0x4]
   13925:	push   DWORD PTR [ebp+0x10]
   13928:	push   DWORD PTR [ebp+0xc]
   1392b:	push   DWORD PTR [ebp+0x8]
   1392e:	call   0x13498
   13933:	add    esp,0x10
   13936:	leave  
   13937:	ret    
   13938:	int3   
   13939:	int3   
   1393a:	int3   
   1393b:	int3   
   1393c:	int3   
   1393d:	int3   
   1393e:	mov    edi,edi
   13940:	push   ebp
   13941:	mov    ebp,esp
   13943:	push   ecx
   13944:	push   DWORD PTR [ebp-0x4]
   13947:	push   DWORD PTR [ebp+0x10]
   1394a:	push   DWORD PTR [ebp+0xc]
   1394d:	push   DWORD PTR [ebp+0x8]
   13950:	call   0x134c2
   13955:	add    esp,0x10
   13958:	leave  
   13959:	ret    
   1395a:	int3   
   1395b:	int3   
   1395c:	int3   
   1395d:	int3   
   1395e:	int3   
   1395f:	int3   
   13960:	mov    edi,edi
   13962:	push   ebp
   13963:	mov    ebp,esp
   13965:	mov    ecx,DWORD PTR [ebp+0x8]
   13968:	push   0x0
   1396a:	call   0x1341e
   1396f:	pop    ebp
   13970:	ret    0x4
   13973:	int3   
   13974:	int3   
   13975:	int3   
   13976:	int3   
   13977:	int3   
   13978:	mov    edi,edi
   1397a:	push   ebp
   1397b:	mov    ebp,esp
   1397d:	push   esi
   1397e:	push   edi
   1397f:	mov    edi,DWORD PTR [ebp+0x8]
   13982:	push   edi
   13983:	mov    esi,ecx
   13985:	call   0x137c2
   1398a:	mov    eax,DWORD PTR [edi+0x40]
   1398d:	mov    DWORD PTR [esi+0x40],eax
   13990:	pop    edi
   13991:	mov    eax,esi
   13993:	pop    esi
   13994:	pop    ebp
   13995:	ret    0x4
   13998:	int3   
   13999:	int3   
   1399a:	int3   
   1399b:	int3   
   1399c:	int3   
   1399d:	int3   
   1399e:	mov    edi,edi
   139a0:	push   ebp
   139a1:	mov    ebp,esp
   139a3:	push   esi
   139a4:	push   edi
   139a5:	mov    edi,DWORD PTR [ebp+0x8]
   139a8:	push   edi
   139a9:	mov    esi,ecx
   139ab:	call   0x1363a
   139b0:	add    edi,0x8
   139b3:	push   edi
   139b4:	lea    ecx,[esi+0x8]
   139b7:	call   0x137c2
   139bc:	pop    edi
   139bd:	mov    eax,esi
   139bf:	pop    esi
   139c0:	pop    ebp
   139c1:	ret    0x4
   139c4:	int3   
   139c5:	int3   
   139c6:	int3   
   139c7:	int3   
   139c8:	int3   
   139c9:	int3   
   139ca:	mov    edi,edi
   139cc:	push   ebp
   139cd:	mov    ebp,esp
   139cf:	push   esi
   139d0:	mov    esi,ecx
   139d2:	call   0x1365c
   139d7:	test   BYTE PTR [ebp+0x8],0x1
   139db:	je     0x139e4
   139dd:	push   esi
   139de:	call   0x11d22
   139e3:	pop    ecx
   139e4:	mov    eax,esi
   139e6:	pop    esi
   139e7:	pop    ebp
   139e8:	ret    0x4
   139eb:	int3   
   139ec:	int3   
   139ed:	int3   
   139ee:	int3   
   139ef:	int3   
   139f0:	mov    edi,edi
   139f2:	push   ebp
   139f3:	mov    ebp,esp
   139f5:	push   esi
   139f6:	push   edi
   139f7:	mov    edi,DWORD PTR [ebp+0x8]
   139fa:	push   edi
   139fb:	mov    esi,ecx
   139fd:	call   0x1363a
   13a02:	add    edi,0x8
   13a05:	push   edi
   13a06:	lea    ecx,[esi+0x8]
   13a09:	call   0x1363a
   13a0e:	pop    edi
   13a0f:	mov    eax,esi
   13a11:	pop    esi
   13a12:	pop    ebp
   13a13:	ret    0x4
   13a16:	int3   
   13a17:	int3   
   13a18:	int3   
   13a19:	int3   
   13a1a:	int3   
   13a1b:	int3   
   13a1c:	mov    edi,edi
   13a1e:	push   ebp
   13a1f:	mov    ebp,esp
   13a21:	mov    eax,DWORD PTR [ebp+0x8]
   13a24:	push   esi
   13a25:	mov    esi,ecx
   13a27:	mov    ecx,DWORD PTR [eax]
   13a29:	add    eax,0x4
   13a2c:	mov    DWORD PTR [esi],ecx
   13a2e:	push   eax
   13a2f:	lea    ecx,[esi+0x4]
   13a32:	call   0x11d40
   13a37:	mov    eax,esi
   13a39:	pop    esi
   13a3a:	pop    ebp
   13a3b:	ret    0x4
   13a3e:	int3   
   13a3f:	int3   
   13a40:	int3   
   13a41:	int3   
   13a42:	int3   
   13a43:	int3   
   13a44:	mov    edi,edi
   13a46:	push   ebp
   13a47:	mov    ebp,esp
   13a49:	push   esi
   13a4a:	mov    esi,ecx
   13a4c:	mov    ecx,DWORD PTR [esi+0x4]
   13a4f:	test   ecx,ecx
   13a51:	je     0x13a58
   13a53:	call   0x11d64
   13a58:	test   BYTE PTR [ebp+0x8],0x1
   13a5c:	je     0x13a65
   13a5e:	push   esi
   13a5f:	call   0x11d22
   13a64:	pop    ecx
   13a65:	mov    eax,esi
   13a67:	pop    esi
   13a68:	pop    ebp
   13a69:	ret    0x4
   13a6c:	int3   
   13a6d:	int3   
   13a6e:	int3   
   13a6f:	int3   
   13a70:	int3   
   13a71:	int3   
   13a72:	mov    edi,edi
   13a74:	push   ebp
   13a75:	mov    ebp,esp
   13a77:	push   esi
   13a78:	push   edi
   13a79:	mov    edi,DWORD PTR [ebp+0x8]
   13a7c:	push   edi
   13a7d:	mov    esi,ecx
   13a7f:	call   0x13698
   13a84:	add    edi,0x8
   13a87:	push   edi
   13a88:	lea    ecx,[esi+0x8]
   13a8b:	call   0x13698
   13a90:	pop    edi
   13a91:	mov    eax,esi
   13a93:	pop    esi
   13a94:	pop    ebp
   13a95:	ret    0x4
   13a98:	int3   
   13a99:	int3   
   13a9a:	int3   
   13a9b:	int3   
   13a9c:	int3   
   13a9d:	int3   
   13a9e:	mov    edi,edi
   13aa0:	push   ebp
   13aa1:	mov    ebp,esp
   13aa3:	push   esi
   13aa4:	push   DWORD PTR [ebp+0x8]
   13aa7:	mov    esi,ecx
   13aa9:	call   0x1363a
   13aae:	push   DWORD PTR [ebp+0xc]
   13ab1:	lea    ecx,[esi+0x8]
   13ab4:	call   0x13978
   13ab9:	mov    eax,esi
   13abb:	pop    esi
   13abc:	pop    ebp
   13abd:	ret    0x8
   13ac0:	int3   
   13ac1:	int3   
   13ac2:	int3   
   13ac3:	int3   
   13ac4:	int3   
   13ac5:	int3   
   13ac6:	mov    edi,edi
   13ac8:	push   esi
   13ac9:	push   edi
   13aca:	push   0xffffffff
   13acc:	mov    edi,0x1e108
   13ad1:	push   edi
   13ad2:	mov    esi,ecx
   13ad4:	call   0x12b44
   13ad9:	push   0xffffffff
   13adb:	push   edi
   13adc:	lea    ecx,[esi+0x8]
   13adf:	call   0x12b44
   13ae4:	push   0xffffffff
   13ae6:	push   edi
   13ae7:	lea    ecx,[esi+0x10]
   13aea:	call   0x12b44
   13aef:	push   0xffffffff
   13af1:	push   edi
   13af2:	lea    ecx,[esi+0x18]
   13af5:	call   0x12b44
   13afa:	push   0xffffffff
   13afc:	push   edi
   13afd:	lea    ecx,[esi+0x38]
   13b00:	call   0x12b44
   13b05:	xor    eax,eax
   13b07:	mov    DWORD PTR [esi+0x20],eax
   13b0a:	mov    DWORD PTR [esi+0x30],eax
   13b0d:	mov    DWORD PTR [esi+0x34],eax
   13b10:	pop    edi
   13b11:	mov    eax,esi
   13b13:	pop    esi
   13b14:	ret    
   13b15:	int3   
   13b16:	int3   
   13b17:	int3   
   13b18:	int3   
   13b19:	int3   
   13b1a:	mov    edi,edi
   13b1c:	push   ebp
   13b1d:	mov    ebp,esp
   13b1f:	push   esi
   13b20:	push   DWORD PTR [ebp+0x8]
   13b23:	mov    esi,ecx
   13b25:	call   0x1363a
   13b2a:	push   0xffffffff
   13b2c:	push   0x1e108
   13b31:	lea    ecx,[esi+0x8]
   13b34:	call   0x12b44
   13b39:	push   DWORD PTR [ebp+0xc]
   13b3c:	lea    ecx,[esi+0x10]
   13b3f:	call   0x1363a
   13b44:	push   DWORD PTR [ebp+0x10]
   13b47:	lea    ecx,[esi+0x18]
   13b4a:	call   0x1363a
   13b4f:	mov    eax,DWORD PTR [ebp+0x18]
   13b52:	push   DWORD PTR [ebp+0x14]
   13b55:	lea    ecx,[esi+0x38]
   13b58:	mov    DWORD PTR [esi+0x20],eax
   13b5b:	call   0x1363a
   13b60:	and    DWORD PTR [esi+0x30],0x0
   13b64:	and    DWORD PTR [esi+0x34],0x0
   13b68:	mov    eax,DWORD PTR [ebp+0x1c]
   13b6b:	mov    ecx,DWORD PTR [eax]
   13b6d:	mov    DWORD PTR [esi+0x28],ecx
   13b70:	mov    eax,DWORD PTR [eax+0x4]
   13b73:	mov    DWORD PTR [esi+0x2c],eax
   13b76:	mov    eax,esi
   13b78:	pop    esi
   13b79:	pop    ebp
   13b7a:	ret    0x18
   13b7d:	int3   
   13b7e:	int3   
   13b7f:	int3   
   13b80:	int3   
   13b81:	int3   
   13b82:	mov    edi,edi
   13b84:	push   ebp
   13b85:	mov    ebp,esp
   13b87:	push   esi
   13b88:	push   0xc
   13b8a:	mov    esi,ecx
   13b8c:	call   0x11cec
   13b91:	pop    ecx
   13b92:	test   eax,eax
   13b94:	je     0x13ba5
   13b96:	push   DWORD PTR [ebp+0xc]
   13b99:	mov    ecx,eax
   13b9b:	push   DWORD PTR [ebp+0x8]
   13b9e:	call   0x1354c
   13ba3:	jmp    0x13ba7
   13ba5:	xor    eax,eax
   13ba7:	mov    DWORD PTR [esi],eax
   13ba9:	mov    eax,esi
   13bab:	pop    esi
   13bac:	pop    ebp
   13bad:	ret    0x8
   13bb0:	int3   
   13bb1:	int3   
   13bb2:	int3   
   13bb3:	int3   
   13bb4:	int3   
   13bb5:	int3   
   13bb6:	mov    edi,edi
   13bb8:	push   ebp
   13bb9:	mov    ebp,esp
   13bbb:	push   ecx
   13bbc:	push   esi
   13bbd:	push   edi
   13bbe:	mov    edi,DWORD PTR [ebp+0xc]
   13bc1:	push   edi
   13bc2:	mov    esi,ecx
   13bc4:	call   0x12c8c
   13bc9:	mov    esi,DWORD PTR [esi+0x4]
   13bcc:	mov    DWORD PTR [ebp+0xc],eax
   13bcf:	cmp    eax,esi
   13bd1:	je     0x13bdf
   13bd3:	mov    ecx,DWORD PTR [edi]
   13bd5:	cmp    ecx,DWORD PTR [eax+0xc]
   13bd8:	jb     0x13bdf
   13bda:	lea    eax,[ebp+0xc]
   13bdd:	jmp    0x13be5
   13bdf:	mov    DWORD PTR [ebp-0x4],esi
   13be2:	lea    eax,[ebp-0x4]
   13be5:	mov    ecx,DWORD PTR [eax]
   13be7:	mov    eax,DWORD PTR [ebp+0x8]
   13bea:	pop    edi
   13beb:	mov    DWORD PTR [eax],ecx
   13bed:	pop    esi
   13bee:	leave  
   13bef:	ret    0x8
   13bf2:	int3   
   13bf3:	int3   
   13bf4:	int3   
   13bf5:	int3   
   13bf6:	int3   
   13bf7:	int3   
   13bf8:	mov    edi,edi
   13bfa:	push   ebp
   13bfb:	mov    ebp,esp
   13bfd:	push   ecx
   13bfe:	push   esi
   13bff:	push   DWORD PTR [ebp+0xc]
   13c02:	mov    esi,ecx
   13c04:	call   0x12d62
   13c09:	mov    DWORD PTR [ebp-0x4],eax
   13c0c:	cmp    eax,DWORD PTR [esi+0x4]
   13c0f:	je     0x13c26
   13c11:	add    eax,0x10
   13c14:	push   eax
   13c15:	push   DWORD PTR [ebp+0xc]
   13c18:	call   0x199e0
   13c1d:	test   al,al
   13c1f:	jne    0x13c26
   13c21:	lea    eax,[ebp-0x4]
   13c24:	jmp    0x13c2f
   13c26:	mov    eax,DWORD PTR [esi+0x4]
   13c29:	mov    DWORD PTR [ebp+0xc],eax
   13c2c:	lea    eax,[ebp+0xc]
   13c2f:	mov    ecx,DWORD PTR [eax]
   13c31:	mov    eax,DWORD PTR [ebp+0x8]
   13c34:	mov    DWORD PTR [eax],ecx
   13c36:	pop    esi
   13c37:	leave  
   13c38:	ret    0x8
   13c3b:	int3   
   13c3c:	int3   
   13c3d:	int3   
   13c3e:	int3   
   13c3f:	int3   
   13c40:	mov    edi,edi
   13c42:	push   ebp
   13c43:	mov    ebp,esp
   13c45:	push   esi
   13c46:	push   DWORD PTR [ebp+0x8]
   13c49:	mov    esi,ecx
   13c4b:	call   0x1363a
   13c50:	push   DWORD PTR [ebp+0xc]
   13c53:	lea    ecx,[esi+0x8]
   13c56:	call   0x137c2
   13c5b:	mov    eax,esi
   13c5d:	pop    esi
   13c5e:	pop    ebp
   13c5f:	ret    0x8
   13c62:	int3   
   13c63:	int3   
   13c64:	int3   
   13c65:	int3   
   13c66:	int3   
   13c67:	int3   
   13c68:	mov    edi,edi
   13c6a:	push   ebp
   13c6b:	mov    ebp,esp
   13c6d:	push   ecx
   13c6e:	push   esi
   13c6f:	push   DWORD PTR [ebp+0xc]
   13c72:	mov    esi,ecx
   13c74:	call   0x12da2
   13c79:	mov    DWORD PTR [ebp-0x4],eax
   13c7c:	cmp    eax,DWORD PTR [esi+0x4]
   13c7f:	je     0x13c96
   13c81:	add    eax,0xc
   13c84:	push   eax
   13c85:	push   DWORD PTR [ebp+0xc]
   13c88:	call   0x199e0
   13c8d:	test   al,al
   13c8f:	jne    0x13c96
   13c91:	lea    eax,[ebp-0x4]
   13c94:	jmp    0x13c9f
   13c96:	mov    eax,DWORD PTR [esi+0x4]
   13c99:	mov    DWORD PTR [ebp+0xc],eax
   13c9c:	lea    eax,[ebp+0xc]
   13c9f:	mov    ecx,DWORD PTR [eax]
   13ca1:	mov    eax,DWORD PTR [ebp+0x8]
   13ca4:	mov    DWORD PTR [eax],ecx
   13ca6:	pop    esi
   13ca7:	leave  
   13ca8:	ret    0x8
   13cab:	int3   
   13cac:	int3   
   13cad:	int3   
   13cae:	int3   
   13caf:	int3   
   13cb0:	mov    edi,edi
   13cb2:	push   ebp
   13cb3:	mov    ebp,esp
   13cb5:	push   ecx
   13cb6:	push   esi
   13cb7:	push   edi
   13cb8:	mov    edi,DWORD PTR [ebp+0xc]
   13cbb:	push   edi
   13cbc:	mov    esi,ecx
   13cbe:	call   0x12de2
   13cc3:	mov    esi,DWORD PTR [esi+0x4]
   13cc6:	mov    DWORD PTR [ebp+0xc],eax
   13cc9:	cmp    eax,esi
   13ccb:	je     0x13cd9
   13ccd:	mov    ecx,DWORD PTR [edi]
   13ccf:	cmp    ecx,DWORD PTR [eax+0xc]
   13cd2:	jl     0x13cd9
   13cd4:	lea    eax,[ebp+0xc]
   13cd7:	jmp    0x13cdf
   13cd9:	mov    DWORD PTR [ebp-0x4],esi
   13cdc:	lea    eax,[ebp-0x4]
   13cdf:	mov    ecx,DWORD PTR [eax]
   13ce1:	mov    eax,DWORD PTR [ebp+0x8]
   13ce4:	pop    edi
   13ce5:	mov    DWORD PTR [eax],ecx
   13ce7:	pop    esi
   13ce8:	leave  
   13ce9:	ret    0x8
   13cec:	int3   
   13ced:	int3   
   13cee:	int3   
   13cef:	int3   
   13cf0:	int3   
   13cf1:	int3   
   13cf2:	mov    edi,edi
   13cf4:	push   ebp
   13cf5:	mov    ebp,esp
   13cf7:	push   ecx
   13cf8:	mov    eax,DWORD PTR [ecx]
   13cfa:	lea    ecx,[ebp-0x4]
   13cfd:	mov    DWORD PTR [ebp-0x4],eax
   13d00:	call   0x12e50
   13d05:	mov    eax,DWORD PTR [ebp-0x4]
   13d08:	add    eax,0xc
   13d0b:	leave  
   13d0c:	ret    
   13d0d:	int3   
   13d0e:	int3   
   13d0f:	int3   
   13d10:	int3   
   13d11:	int3   
   13d12:	mov    edi,edi
   13d14:	push   ebp
   13d15:	mov    ebp,esp
   13d17:	push   ecx
   13d18:	push   esi
   13d19:	push   DWORD PTR [ebp+0xc]
   13d1c:	mov    esi,ecx
   13d1e:	call   0x12f64
   13d23:	mov    DWORD PTR [ebp-0x4],eax
   13d26:	cmp    eax,DWORD PTR [esi+0x4]
   13d29:	je     0x13d40
   13d2b:	add    eax,0x10
   13d2e:	push   eax
   13d2f:	push   DWORD PTR [ebp+0xc]
   13d32:	call   0x199e0
   13d37:	test   al,al
   13d39:	jne    0x13d40
   13d3b:	lea    eax,[ebp-0x4]
   13d3e:	jmp    0x13d49
   13d40:	mov    eax,DWORD PTR [esi+0x4]
   13d43:	mov    DWORD PTR [ebp+0xc],eax
   13d46:	lea    eax,[ebp+0xc]
   13d49:	mov    ecx,DWORD PTR [eax]
   13d4b:	mov    eax,DWORD PTR [ebp+0x8]
   13d4e:	mov    DWORD PTR [eax],ecx
   13d50:	pop    esi
   13d51:	leave  
   13d52:	ret    0x8
   13d55:	int3   
   13d56:	int3   
   13d57:	int3   
   13d58:	int3   
   13d59:	int3   
   13d5a:	mov    edi,edi
   13d5c:	push   ebp
   13d5d:	mov    ebp,esp
   13d5f:	push   ecx
   13d60:	push   ecx
   13d61:	push   ebx
   13d62:	push   esi
   13d63:	mov    DWORD PTR [ebp-0x4],ecx
   13d66:	push   edi
   13d67:	mov    edi,DWORD PTR [ebp+0xc]
   13d6a:	lea    ecx,[ebp+0xc]
   13d6d:	call   0x10ef4
   13d72:	mov    esi,DWORD PTR [edi]
   13d74:	mov    eax,ds:0x786b0
   13d79:	mov    ebx,edi
   13d7b:	mov    DWORD PTR [ebp-0x8],esi
   13d7e:	cmp    esi,eax
   13d80:	jne    0x13d9e
   13d82:	mov    esi,DWORD PTR [edi+0x8]
   13d85:	mov    eax,DWORD PTR [ebx+0x4]
   13d88:	mov    ecx,DWORD PTR [ebp-0x4]
   13d8b:	mov    DWORD PTR [esi+0x4],eax
   13d8e:	mov    eax,DWORD PTR [ecx+0x4]
   13d91:	cmp    DWORD PTR [eax+0x4],edi
   13d94:	jne    0x13e13
   13d96:	mov    DWORD PTR [eax+0x4],esi
   13d99:	jmp    0x13e21
   13d9e:	mov    ecx,DWORD PTR [edi+0x8]
   13da1:	cmp    ecx,eax
   13da3:	je     0x13d85
   13da5:	push   ecx
   13da6:	call   0x10e0a
   13dab:	mov    ebx,eax
   13dad:	mov    esi,DWORD PTR [ebx+0x8]
   13db0:	cmp    ebx,edi
   13db2:	je     0x13d85
   13db4:	mov    eax,DWORD PTR [ebp-0x8]
   13db7:	mov    DWORD PTR [eax+0x4],ebx
   13dba:	mov    eax,DWORD PTR [edi]
   13dbc:	mov    DWORD PTR [ebx],eax
   13dbe:	cmp    ebx,DWORD PTR [edi+0x8]
   13dc1:	jne    0x13dc8
   13dc3:	mov    DWORD PTR [esi+0x4],ebx
   13dc6:	jmp    0x13ddf
   13dc8:	mov    eax,DWORD PTR [ebx+0x4]
   13dcb:	mov    DWORD PTR [esi+0x4],eax
   13dce:	mov    eax,DWORD PTR [ebx+0x4]
   13dd1:	mov    DWORD PTR [eax],esi
   13dd3:	mov    eax,DWORD PTR [edi+0x8]
   13dd6:	mov    DWORD PTR [ebx+0x8],eax
   13dd9:	mov    eax,DWORD PTR [edi+0x8]
   13ddc:	mov    DWORD PTR [eax+0x4],ebx
   13ddf:	mov    eax,DWORD PTR [ebp-0x4]
   13de2:	mov    eax,DWORD PTR [eax+0x4]
   13de5:	cmp    DWORD PTR [eax+0x4],edi
   13de8:	jne    0x13def
   13dea:	mov    DWORD PTR [eax+0x4],ebx
   13ded:	jmp    0x13dfd
   13def:	mov    eax,DWORD PTR [edi+0x4]
   13df2:	cmp    DWORD PTR [eax],edi
   13df4:	jne    0x13dfa
   13df6:	mov    DWORD PTR [eax],ebx
   13df8:	jmp    0x13dfd
   13dfa:	mov    DWORD PTR [eax+0x8],ebx
   13dfd:	mov    eax,DWORD PTR [edi+0x4]
   13e00:	mov    DWORD PTR [ebx+0x4],eax
   13e03:	mov    eax,DWORD PTR [ebx+0x14]
   13e06:	mov    ecx,DWORD PTR [edi+0x14]
   13e09:	mov    DWORD PTR [ebx+0x14],ecx
   13e0c:	mov    DWORD PTR [edi+0x14],eax
   13e0f:	mov    ebx,edi
   13e11:	jmp    0x13e74
   13e13:	mov    eax,DWORD PTR [edi+0x4]
   13e16:	cmp    DWORD PTR [eax],edi
   13e18:	jne    0x13e1e
   13e1a:	mov    DWORD PTR [eax],esi
   13e1c:	jmp    0x13e21
   13e1e:	mov    DWORD PTR [eax+0x8],esi
   13e21:	mov    eax,DWORD PTR [ecx+0x4]
   13e24:	mov    DWORD PTR [ebp-0x8],eax
   13e27:	cmp    DWORD PTR [eax],edi
   13e29:	jne    0x13e4b
   13e2b:	mov    edx,DWORD PTR [edi+0x8]
   13e2e:	cmp    edx,DWORD PTR ds:0x786b0
   13e34:	jne    0x13e3d
   13e36:	mov    edx,DWORD PTR [edi+0x4]
   13e39:	mov    DWORD PTR [eax],edx
   13e3b:	jmp    0x13e4b
   13e3d:	push   esi
   13e3e:	call   0x10e0a
   13e43:	mov    ecx,DWORD PTR [ebp-0x8]
   13e46:	mov    DWORD PTR [ecx],eax
   13e48:	mov    ecx,DWORD PTR [ebp-0x4]
   13e4b:	mov    eax,DWORD PTR [ecx+0x4]
   13e4e:	mov    DWORD PTR [ebp-0x8],eax
   13e51:	cmp    DWORD PTR [eax+0x8],edi
   13e54:	jne    0x13e74
   13e56:	mov    ecx,DWORD PTR [edi]
   13e58:	cmp    ecx,DWORD PTR ds:0x786b0
   13e5e:	jne    0x13e68
   13e60:	mov    ecx,DWORD PTR [edi+0x4]
   13e63:	mov    DWORD PTR [eax+0x8],ecx
   13e66:	jmp    0x13e74
   13e68:	push   esi
   13e69:	call   0x10de8
   13e6e:	mov    ecx,DWORD PTR [ebp-0x8]
   13e71:	mov    DWORD PTR [ecx+0x8],eax
   13e74:	xor    edi,edi
   13e76:	inc    edi
   13e77:	cmp    DWORD PTR [ebx+0x14],edi
   13e7a:	jne    0x13f91
   13e80:	jmp    0x13f3f
   13e85:	cmp    DWORD PTR [esi+0x14],edi
   13e88:	jne    0x13f8e
   13e8e:	mov    eax,DWORD PTR [esi+0x4]
   13e91:	cmp    esi,DWORD PTR [eax]
   13e93:	jne    0x13f0a
   13e95:	mov    eax,DWORD PTR [eax+0x8]
   13e98:	cmp    DWORD PTR [eax+0x14],0x0
   13e9c:	jne    0x13eb6
   13e9e:	mov    DWORD PTR [eax+0x14],edi
   13ea1:	mov    eax,DWORD PTR [esi+0x4]
   13ea4:	and    DWORD PTR [eax+0x14],0x0
   13ea8:	push   DWORD PTR [esi+0x4]
   13eab:	call   0x12cc4
   13eb0:	mov    eax,DWORD PTR [esi+0x4]
   13eb3:	mov    eax,DWORD PTR [eax+0x8]
   13eb6:	mov    ecx,DWORD PTR [eax]
   13eb8:	cmp    DWORD PTR [ecx+0x14],edi
   13ebb:	jne    0x13ec5
   13ebd:	mov    ecx,DWORD PTR [eax+0x8]
   13ec0:	cmp    DWORD PTR [ecx+0x14],edi
   13ec3:	je     0x13f38
   13ec5:	mov    ecx,DWORD PTR [eax+0x8]
   13ec8:	cmp    DWORD PTR [ecx+0x14],edi
   13ecb:	jne    0x13ee5
   13ecd:	mov    ecx,DWORD PTR [eax]
   13ecf:	mov    DWORD PTR [ecx+0x14],edi
   13ed2:	mov    ecx,DWORD PTR [ebp-0x4]
   13ed5:	and    DWORD PTR [eax+0x14],0x0
   13ed9:	push   eax
   13eda:	call   0x12d12
   13edf:	mov    eax,DWORD PTR [esi+0x4]
   13ee2:	mov    eax,DWORD PTR [eax+0x8]
   13ee5:	mov    ecx,DWORD PTR [esi+0x4]
   13ee8:	mov    ecx,DWORD PTR [ecx+0x14]
   13eeb:	mov    DWORD PTR [eax+0x14],ecx
   13eee:	mov    ecx,DWORD PTR [esi+0x4]
   13ef1:	mov    DWORD PTR [ecx+0x14],edi
   13ef4:	mov    eax,DWORD PTR [eax+0x8]
   13ef7:	mov    ecx,DWORD PTR [ebp-0x4]
   13efa:	mov    DWORD PTR [eax+0x14],edi
   13efd:	push   DWORD PTR [esi+0x4]
   13f00:	call   0x12cc4
   13f05:	jmp    0x13f8e
   13f0a:	mov    eax,DWORD PTR [eax]
   13f0c:	cmp    DWORD PTR [eax+0x14],0x0
   13f10:	jne    0x13f29
   13f12:	mov    DWORD PTR [eax+0x14],edi
   13f15:	mov    eax,DWORD PTR [esi+0x4]
   13f18:	and    DWORD PTR [eax+0x14],0x0
   13f1c:	push   DWORD PTR [esi+0x4]
   13f1f:	call   0x12d12
   13f24:	mov    eax,DWORD PTR [esi+0x4]
   13f27:	mov    eax,DWORD PTR [eax]
   13f29:	mov    ecx,DWORD PTR [eax+0x8]
   13f2c:	cmp    DWORD PTR [ecx+0x14],edi
   13f2f:	jne    0x13f50
   13f31:	mov    ecx,DWORD PTR [eax]
   13f33:	cmp    DWORD PTR [ecx+0x14],edi
   13f36:	jne    0x13f50
   13f38:	and    DWORD PTR [eax+0x14],0x0
   13f3c:	mov    esi,DWORD PTR [esi+0x4]
   13f3f:	mov    ecx,DWORD PTR [ebp-0x4]
   13f42:	mov    eax,DWORD PTR [ecx+0x4]
   13f45:	cmp    esi,DWORD PTR [eax+0x4]
   13f48:	jne    0x13e85
   13f4e:	jmp    0x13f8e
   13f50:	mov    ecx,DWORD PTR [eax]
   13f52:	cmp    DWORD PTR [ecx+0x14],edi
   13f55:	jne    0x13f6f
   13f57:	mov    ecx,DWORD PTR [eax+0x8]
   13f5a:	mov    DWORD PTR [ecx+0x14],edi
   13f5d:	mov    ecx,DWORD PTR [ebp-0x4]
   13f60:	and    DWORD PTR [eax+0x14],0x0
   13f64:	push   eax
   13f65:	call   0x12cc4
   13f6a:	mov    eax,DWORD PTR [esi+0x4]
   13f6d:	mov    eax,DWORD PTR [eax]
   13f6f:	mov    ecx,DWORD PTR [esi+0x4]
   13f72:	mov    ecx,DWORD PTR [ecx+0x14]
   13f75:	mov    DWORD PTR [eax+0x14],ecx
   13f78:	mov    ecx,DWORD PTR [esi+0x4]
   13f7b:	mov    DWORD PTR [ecx+0x14],edi
   13f7e:	mov    eax,DWORD PTR [eax]
   13f80:	mov    ecx,DWORD PTR [ebp-0x4]
   13f83:	mov    DWORD PTR [eax+0x14],edi
   13f86:	push   DWORD PTR [esi+0x4]
   13f89:	call   0x12d12
   13f8e:	mov    DWORD PTR [esi+0x14],edi
   13f91:	push   ebx
   13f92:	call   0x11d22
   13f97:	mov    eax,DWORD PTR [ebp-0x4]
   13f9a:	dec    DWORD PTR [eax+0xc]
   13f9d:	mov    eax,DWORD PTR [ebp+0x8]
   13fa0:	pop    ecx
   13fa1:	mov    ecx,DWORD PTR [ebp+0xc]
   13fa4:	pop    edi
   13fa5:	pop    esi
   13fa6:	mov    DWORD PTR [eax],ecx
   13fa8:	pop    ebx
   13fa9:	leave  
   13faa:	ret    0x8
   13fad:	int3   
   13fae:	int3   
   13faf:	int3   
   13fb0:	int3   
   13fb1:	int3   
   13fb2:	mov    edi,edi
   13fb4:	push   ebp
   13fb5:	mov    ebp,esp
   13fb7:	push   esi
   13fb8:	push   edi
   13fb9:	push   DWORD PTR [ebp+0xc]
   13fbc:	mov    edi,ecx
   13fbe:	call   0x13042
   13fc3:	push   DWORD PTR [ebp+0xc]
   13fc6:	mov    ecx,edi
   13fc8:	mov    esi,eax
   13fca:	call   0x12c8c
   13fcf:	mov    ecx,DWORD PTR [ebp+0x8]
   13fd2:	pop    edi
   13fd3:	mov    DWORD PTR [ecx],eax
   13fd5:	mov    DWORD PTR [ecx+0x4],esi
   13fd8:	mov    eax,ecx
   13fda:	pop    esi
   13fdb:	pop    ebp
   13fdc:	ret    0x8
   13fdf:	int3   
   13fe0:	int3   
   13fe1:	int3   
   13fe2:	int3   
   13fe3:	int3   
   13fe4:	mov    edi,edi
   13fe6:	push   ebp
   13fe7:	mov    ebp,esp
   13fe9:	push   esi
   13fea:	push   edi
   13feb:	push   DWORD PTR [ebp+0xc]
   13fee:	mov    edi,ecx
   13ff0:	call   0x1307a
   13ff5:	push   DWORD PTR [ebp+0xc]
   13ff8:	mov    ecx,edi
   13ffa:	mov    esi,eax
   13ffc:	call   0x12d62
   14001:	mov    ecx,DWORD PTR [ebp+0x8]
   14004:	pop    edi
   14005:	mov    DWORD PTR [ecx],eax
   14007:	mov    DWORD PTR [ecx+0x4],esi
   1400a:	mov    eax,ecx
   1400c:	pop    esi
   1400d:	pop    ebp
   1400e:	ret    0x8
   14011:	int3   
   14012:	int3   
   14013:	int3   
   14014:	int3   
   14015:	int3   
   14016:	mov    edi,edi
   14018:	push   ebp
   14019:	mov    ebp,esp
   1401b:	push   esi
   1401c:	push   edi
   1401d:	push   DWORD PTR [ebp+0xc]
   14020:	mov    edi,ecx
   14022:	call   0x13158
   14027:	push   DWORD PTR [ebp+0xc]
   1402a:	mov    ecx,edi
   1402c:	mov    esi,eax
   1402e:	call   0x12da2
   14033:	mov    ecx,DWORD PTR [ebp+0x8]
   14036:	pop    edi
   14037:	mov    DWORD PTR [ecx],eax
   14039:	mov    DWORD PTR [ecx+0x4],esi
   1403c:	mov    eax,ecx
   1403e:	pop    esi
   1403f:	pop    ebp
   14040:	ret    0x8
   14043:	int3   
   14044:	int3   
   14045:	int3   
   14046:	int3   
   14047:	int3   
   14048:	mov    edi,edi
   1404a:	push   ebp
   1404b:	mov    ebp,esp
   1404d:	push   esi
   1404e:	push   edi
   1404f:	push   DWORD PTR [ebp+0xc]
   14052:	mov    edi,ecx
   14054:	call   0x13236
   14059:	push   DWORD PTR [ebp+0xc]
   1405c:	mov    ecx,edi
   1405e:	mov    esi,eax
   14060:	call   0x12de2
   14065:	mov    ecx,DWORD PTR [ebp+0x8]
   14068:	pop    edi
   14069:	mov    DWORD PTR [ecx],eax
   1406b:	mov    DWORD PTR [ecx+0x4],esi
   1406e:	mov    eax,ecx
   14070:	pop    esi
   14071:	pop    ebp
   14072:	ret    0x8
   14075:	int3   
   14076:	int3   
   14077:	int3   
   14078:	int3   
   14079:	int3   
   1407a:	mov    edi,edi
   1407c:	push   ebp
   1407d:	mov    ebp,esp
   1407f:	push   ecx
   14080:	push   esi
   14081:	push   DWORD PTR [ebp+0xc]
   14084:	mov    esi,ecx
   14086:	call   0x1326e
   1408b:	mov    DWORD PTR [ebp-0x4],eax
   1408e:	cmp    eax,DWORD PTR [esi+0x4]
   14091:	je     0x140a8
   14093:	add    eax,0xc
   14096:	push   eax
   14097:	push   DWORD PTR [ebp+0xc]
   1409a:	call   0x19a10
   1409f:	test   al,al
   140a1:	jne    0x140a8
   140a3:	lea    eax,[ebp-0x4]
   140a6:	jmp    0x140b1
   140a8:	mov    eax,DWORD PTR [esi+0x4]
   140ab:	mov    DWORD PTR [ebp+0xc],eax
   140ae:	lea    eax,[ebp+0xc]
   140b1:	mov    ecx,DWORD PTR [eax]
   140b3:	mov    eax,DWORD PTR [ebp+0x8]
   140b6:	mov    DWORD PTR [eax],ecx
   140b8:	pop    esi
   140b9:	leave  
   140ba:	ret    0x8
   140bd:	int3   
   140be:	int3   
   140bf:	int3   
   140c0:	int3   
   140c1:	int3   
   140c2:	mov    edi,edi
   140c4:	push   ebp
   140c5:	mov    ebp,esp
   140c7:	push   ecx
   140c8:	push   ecx
   140c9:	push   ebx
   140ca:	push   esi
   140cb:	mov    DWORD PTR [ebp-0x4],ecx
   140ce:	push   edi
   140cf:	mov    edi,DWORD PTR [ebp+0xc]
   140d2:	lea    ecx,[ebp+0xc]
   140d5:	call   0x12e90
   140da:	mov    esi,DWORD PTR [edi]
   140dc:	mov    eax,ds:0x786b4
   140e1:	mov    ebx,edi
   140e3:	mov    DWORD PTR [ebp-0x8],esi
   140e6:	cmp    esi,eax
   140e8:	jne    0x14106
   140ea:	mov    esi,DWORD PTR [edi+0x8]
   140ed:	mov    eax,DWORD PTR [ebx+0x4]
   140f0:	mov    ecx,DWORD PTR [ebp-0x4]
   140f3:	mov    DWORD PTR [esi+0x4],eax
   140f6:	mov    eax,DWORD PTR [ecx+0x4]
   140f9:	cmp    DWORD PTR [eax+0x4],edi
   140fc:	jne    0x1417b
   140fe:	mov    DWORD PTR [eax+0x4],esi
   14101:	jmp    0x14189
   14106:	mov    ecx,DWORD PTR [edi+0x8]
   14109:	cmp    ecx,eax
   1410b:	je     0x140ed
   1410d:	push   ecx
   1410e:	call   0x10e4e
   14113:	mov    ebx,eax
   14115:	mov    esi,DWORD PTR [ebx+0x8]
   14118:	cmp    ebx,edi
   1411a:	je     0x140ed
   1411c:	mov    eax,DWORD PTR [ebp-0x8]
   1411f:	mov    DWORD PTR [eax+0x4],ebx
   14122:	mov    eax,DWORD PTR [edi]
   14124:	mov    DWORD PTR [ebx],eax
   14126:	cmp    ebx,DWORD PTR [edi+0x8]
   14129:	jne    0x14130
   1412b:	mov    DWORD PTR [esi+0x4],ebx
   1412e:	jmp    0x14147
   14130:	mov    eax,DWORD PTR [ebx+0x4]
   14133:	mov    DWORD PTR [esi+0x4],eax
   14136:	mov    eax,DWORD PTR [ebx+0x4]
   14139:	mov    DWORD PTR [eax],esi
   1413b:	mov    eax,DWORD PTR [edi+0x8]
   1413e:	mov    DWORD PTR [ebx+0x8],eax
   14141:	mov    eax,DWORD PTR [edi+0x8]
   14144:	mov    DWORD PTR [eax+0x4],ebx
   14147:	mov    eax,DWORD PTR [ebp-0x4]
   1414a:	mov    eax,DWORD PTR [eax+0x4]
   1414d:	cmp    DWORD PTR [eax+0x4],edi
   14150:	jne    0x14157
   14152:	mov    DWORD PTR [eax+0x4],ebx
   14155:	jmp    0x14165
   14157:	mov    eax,DWORD PTR [edi+0x4]
   1415a:	cmp    DWORD PTR [eax],edi
   1415c:	jne    0x14162
   1415e:	mov    DWORD PTR [eax],ebx
   14160:	jmp    0x14165
   14162:	mov    DWORD PTR [eax+0x8],ebx
   14165:	mov    eax,DWORD PTR [edi+0x4]
   14168:	mov    DWORD PTR [ebx+0x4],eax
   1416b:	mov    eax,DWORD PTR [ebx+0x10]
   1416e:	mov    ecx,DWORD PTR [edi+0x10]
   14171:	mov    DWORD PTR [ebx+0x10],ecx
   14174:	mov    DWORD PTR [edi+0x10],eax
   14177:	mov    ebx,edi
   14179:	jmp    0x141dc
   1417b:	mov    eax,DWORD PTR [edi+0x4]
   1417e:	cmp    DWORD PTR [eax],edi
   14180:	jne    0x14186
   14182:	mov    DWORD PTR [eax],esi
   14184:	jmp    0x14189
   14186:	mov    DWORD PTR [eax+0x8],esi
   14189:	mov    eax,DWORD PTR [ecx+0x4]
   1418c:	mov    DWORD PTR [ebp-0x8],eax
   1418f:	cmp    DWORD PTR [eax],edi
   14191:	jne    0x141b3
   14193:	mov    edx,DWORD PTR [edi+0x8]
   14196:	cmp    edx,DWORD PTR ds:0x786b4
   1419c:	jne    0x141a5
   1419e:	mov    edx,DWORD PTR [edi+0x4]
   141a1:	mov    DWORD PTR [eax],edx
   141a3:	jmp    0x141b3
   141a5:	push   esi
   141a6:	call   0x10e4e
   141ab:	mov    ecx,DWORD PTR [ebp-0x8]
   141ae:	mov    DWORD PTR [ecx],eax
   141b0:	mov    ecx,DWORD PTR [ebp-0x4]
   141b3:	mov    eax,DWORD PTR [ecx+0x4]
   141b6:	mov    DWORD PTR [ebp-0x8],eax
   141b9:	cmp    DWORD PTR [eax+0x8],edi
   141bc:	jne    0x141dc
   141be:	mov    ecx,DWORD PTR [edi]
   141c0:	cmp    ecx,DWORD PTR ds:0x786b4
   141c6:	jne    0x141d0
   141c8:	mov    ecx,DWORD PTR [edi+0x4]
   141cb:	mov    DWORD PTR [eax+0x8],ecx
   141ce:	jmp    0x141dc
   141d0:	push   esi
   141d1:	call   0x10e2c
   141d6:	mov    ecx,DWORD PTR [ebp-0x8]
   141d9:	mov    DWORD PTR [ecx+0x8],eax
   141dc:	xor    edi,edi
   141de:	inc    edi
   141df:	cmp    DWORD PTR [ebx+0x10],edi
   141e2:	jne    0x142f9
   141e8:	jmp    0x142a7
   141ed:	cmp    DWORD PTR [esi+0x10],edi
   141f0:	jne    0x142f6
   141f6:	mov    eax,DWORD PTR [esi+0x4]
   141f9:	cmp    esi,DWORD PTR [eax]
   141fb:	jne    0x14272
   141fd:	mov    eax,DWORD PTR [eax+0x8]
   14200:	cmp    DWORD PTR [eax+0x10],0x0
   14204:	jne    0x1421e
   14206:	mov    DWORD PTR [eax+0x10],edi
   14209:	mov    eax,DWORD PTR [esi+0x4]
   1420c:	and    DWORD PTR [eax+0x10],0x0
   14210:	push   DWORD PTR [esi+0x4]
   14213:	call   0x12ec6
   14218:	mov    eax,DWORD PTR [esi+0x4]
   1421b:	mov    eax,DWORD PTR [eax+0x8]
   1421e:	mov    ecx,DWORD PTR [eax]
   14220:	cmp    DWORD PTR [ecx+0x10],edi
   14223:	jne    0x1422d
   14225:	mov    ecx,DWORD PTR [eax+0x8]
   14228:	cmp    DWORD PTR [ecx+0x10],edi
   1422b:	je     0x142a0
   1422d:	mov    ecx,DWORD PTR [eax+0x8]
   14230:	cmp    DWORD PTR [ecx+0x10],edi
   14233:	jne    0x1424d
   14235:	mov    ecx,DWORD PTR [eax]
   14237:	mov    DWORD PTR [ecx+0x10],edi
   1423a:	mov    ecx,DWORD PTR [ebp-0x4]
   1423d:	and    DWORD PTR [eax+0x10],0x0
   14241:	push   eax
   14242:	call   0x12f14
   14247:	mov    eax,DWORD PTR [esi+0x4]
   1424a:	mov    eax,DWORD PTR [eax+0x8]
   1424d:	mov    ecx,DWORD PTR [esi+0x4]
   14250:	mov    ecx,DWORD PTR [ecx+0x10]
   14253:	mov    DWORD PTR [eax+0x10],ecx
   14256:	mov    ecx,DWORD PTR [esi+0x4]
   14259:	mov    DWORD PTR [ecx+0x10],edi
   1425c:	mov    eax,DWORD PTR [eax+0x8]
   1425f:	mov    ecx,DWORD PTR [ebp-0x4]
   14262:	mov    DWORD PTR [eax+0x10],edi
   14265:	push   DWORD PTR [esi+0x4]
   14268:	call   0x12ec6
   1426d:	jmp    0x142f6
   14272:	mov    eax,DWORD PTR [eax]
   14274:	cmp    DWORD PTR [eax+0x10],0x0
   14278:	jne    0x14291
   1427a:	mov    DWORD PTR [eax+0x10],edi
   1427d:	mov    eax,DWORD PTR [esi+0x4]
   14280:	and    DWORD PTR [eax+0x10],0x0
   14284:	push   DWORD PTR [esi+0x4]
   14287:	call   0x12f14
   1428c:	mov    eax,DWORD PTR [esi+0x4]
   1428f:	mov    eax,DWORD PTR [eax]
   14291:	mov    ecx,DWORD PTR [eax+0x8]
   14294:	cmp    DWORD PTR [ecx+0x10],edi
   14297:	jne    0x142b8
   14299:	mov    ecx,DWORD PTR [eax]
   1429b:	cmp    DWORD PTR [ecx+0x10],edi
   1429e:	jne    0x142b8
   142a0:	and    DWORD PTR [eax+0x10],0x0
   142a4:	mov    esi,DWORD PTR [esi+0x4]
   142a7:	mov    ecx,DWORD PTR [ebp-0x4]
   142aa:	mov    eax,DWORD PTR [ecx+0x4]
   142ad:	cmp    esi,DWORD PTR [eax+0x4]
   142b0:	jne    0x141ed
   142b6:	jmp    0x142f6
   142b8:	mov    ecx,DWORD PTR [eax]
   142ba:	cmp    DWORD PTR [ecx+0x10],edi
   142bd:	jne    0x142d7
   142bf:	mov    ecx,DWORD PTR [eax+0x8]
   142c2:	mov    DWORD PTR [ecx+0x10],edi
   142c5:	mov    ecx,DWORD PTR [ebp-0x4]
   142c8:	and    DWORD PTR [eax+0x10],0x0
   142cc:	push   eax
   142cd:	call   0x12ec6
   142d2:	mov    eax,DWORD PTR [esi+0x4]
   142d5:	mov    eax,DWORD PTR [eax]
   142d7:	mov    ecx,DWORD PTR [esi+0x4]
   142da:	mov    ecx,DWORD PTR [ecx+0x10]
   142dd:	mov    DWORD PTR [eax+0x10],ecx
   142e0:	mov    ecx,DWORD PTR [esi+0x4]
   142e3:	mov    DWORD PTR [ecx+0x10],edi
   142e6:	mov    eax,DWORD PTR [eax]
   142e8:	mov    ecx,DWORD PTR [ebp-0x4]
   142eb:	mov    DWORD PTR [eax+0x10],edi
   142ee:	push   DWORD PTR [esi+0x4]
   142f1:	call   0x12f14
   142f6:	mov    DWORD PTR [esi+0x10],edi
   142f9:	push   ebx
   142fa:	call   0x11d22
   142ff:	mov    eax,DWORD PTR [ebp-0x4]
   14302:	dec    DWORD PTR [eax+0xc]
   14305:	mov    eax,DWORD PTR [ebp+0x8]
   14308:	pop    ecx
   14309:	mov    ecx,DWORD PTR [ebp+0xc]
   1430c:	pop    edi
   1430d:	pop    esi
   1430e:	mov    DWORD PTR [eax],ecx
   14310:	pop    ebx
   14311:	leave  
   14312:	ret    0x8
   14315:	int3   
   14316:	int3   
   14317:	int3   
   14318:	int3   
   14319:	int3   
   1431a:	mov    edi,edi
   1431c:	push   ebp
   1431d:	mov    ebp,esp
   1431f:	push   esi
   14320:	push   edi
   14321:	push   DWORD PTR [ebp+0xc]
   14324:	mov    edi,ecx
   14326:	call   0x132e6
   1432b:	push   DWORD PTR [ebp+0xc]
   1432e:	mov    ecx,edi
   14330:	mov    esi,eax
   14332:	call   0x132ae
   14337:	mov    ecx,DWORD PTR [ebp+0x8]
   1433a:	pop    edi
   1433b:	mov    DWORD PTR [ecx],eax
   1433d:	mov    DWORD PTR [ecx+0x4],esi
   14340:	mov    eax,ecx
   14342:	pop    esi
   14343:	pop    ebp
   14344:	ret    0x8
   14347:	int3   
   14348:	int3   
   14349:	int3   
   1434a:	int3   
   1434b:	int3   
   1434c:	mov    edi,edi
   1434e:	push   ebp
   1434f:	mov    ebp,esp
   14351:	push   0x0
   14353:	push   0x18
   14355:	call   0x133fc
   1435a:	mov    ecx,DWORD PTR [ebp+0x8]
   1435d:	mov    DWORD PTR [eax+0x4],ecx
   14360:	mov    ecx,DWORD PTR [ebp+0xc]
   14363:	mov    DWORD PTR [eax+0x14],ecx
   14366:	pop    ebp
   14367:	ret    0x8
   1436a:	int3   
   1436b:	int3   
   1436c:	int3   
   1436d:	int3   
   1436e:	int3   
   1436f:	int3   
   14370:	mov    edi,edi
   14372:	push   ebp
   14373:	mov    ebp,esp
   14375:	push   0x0
   14377:	push   0x60
   14379:	call   0x133fc
   1437e:	mov    ecx,DWORD PTR [ebp+0x8]
   14381:	mov    DWORD PTR [eax+0x4],ecx
   14384:	mov    ecx,DWORD PTR [ebp+0xc]
   14387:	mov    DWORD PTR [eax+0x58],ecx
   1438a:	pop    ebp
   1438b:	ret    0x8
   1438e:	int3   
   1438f:	int3   
   14390:	int3   
   14391:	int3   
   14392:	int3   
   14393:	int3   
   14394:	mov    edi,edi
   14396:	push   ebp
   14397:	mov    ebp,esp
   14399:	push   0x0
   1439b:	push   0x14
   1439d:	call   0x133fc
   143a2:	mov    ecx,DWORD PTR [ebp+0x8]
   143a5:	mov    DWORD PTR [eax+0x4],ecx
   143a8:	mov    ecx,DWORD PTR [ebp+0xc]
   143ab:	mov    DWORD PTR [eax+0x10],ecx
   143ae:	pop    ebp
   143af:	ret    0x8
   143b2:	int3   
   143b3:	int3   
   143b4:	int3   
   143b5:	int3   
   143b6:	int3   
   143b7:	int3   
   143b8:	mov    edi,edi
   143ba:	push   ebp
   143bb:	mov    ebp,esp
   143bd:	push   0x0
   143bf:	push   0x68
   143c1:	call   0x133fc
   143c6:	mov    ecx,DWORD PTR [ebp+0x8]
   143c9:	mov    DWORD PTR [eax+0x4],ecx
   143cc:	mov    ecx,DWORD PTR [ebp+0xc]
   143cf:	mov    DWORD PTR [eax+0x60],ecx
   143d2:	pop    ebp
   143d3:	ret    0x8
   143d6:	int3   
   143d7:	int3   
   143d8:	int3   
   143d9:	int3   
   143da:	int3   
   143db:	int3   
   143dc:	mov    edi,edi
   143de:	push   ebp
   143df:	mov    ebp,esp
   143e1:	push   0x0
   143e3:	push   0x20
   143e5:	call   0x133fc
   143ea:	mov    ecx,DWORD PTR [ebp+0x8]
   143ed:	mov    DWORD PTR [eax+0x4],ecx
   143f0:	mov    ecx,DWORD PTR [ebp+0xc]
   143f3:	mov    DWORD PTR [eax+0x1c],ecx
   143f6:	pop    ebp
   143f7:	ret    0x8
   143fa:	int3   
   143fb:	int3   
   143fc:	int3   
   143fd:	int3   
   143fe:	int3   
   143ff:	int3   
   14400:	mov    edi,edi
   14402:	push   ebp
   14403:	mov    ebp,esp
   14405:	push   esi
   14406:	push   edi
   14407:	mov    edi,DWORD PTR [ebp+0x8]
   1440a:	push   edi
   1440b:	mov    esi,ecx
   1440d:	call   0x1363a
   14412:	add    edi,0x8
   14415:	push   edi
   14416:	lea    ecx,[esi+0x8]
   14419:	call   0x13978
   1441e:	pop    edi
   1441f:	mov    eax,esi
   14421:	pop    esi
   14422:	pop    ebp
   14423:	ret    0x4
   14426:	int3   
   14427:	int3   
   14428:	int3   
   14429:	int3   
   1442a:	int3   
   1442b:	int3   
   1442c:	mov    edi,edi
   1442e:	push   ebp
   1442f:	mov    ebp,esp
   14431:	mov    ecx,DWORD PTR [ebp+0x8]
   14434:	test   ecx,ecx
   14436:	je     0x14440
   14438:	push   DWORD PTR [ebp+0xc]
   1443b:	call   0x14400
   14440:	pop    ebp
   14441:	ret    0x8
   14444:	int3   
   14445:	int3   
   14446:	int3   
   14447:	int3   
   14448:	int3   
   14449:	int3   
   1444a:	mov    edi,edi
   1444c:	push   ebp
   1444d:	mov    ebp,esp
   1444f:	mov    ecx,DWORD PTR [ebp+0x8]
   14452:	test   ecx,ecx
   14454:	je     0x1445e
   14456:	push   DWORD PTR [ebp+0xc]
   14459:	call   0x1399e
   1445e:	pop    ebp
   1445f:	ret    0x8
   14462:	int3   
   14463:	int3   
   14464:	int3   
   14465:	int3   
   14466:	int3   
   14467:	int3   
   14468:	mov    edi,edi
   1446a:	push   ebp
   1446b:	mov    ebp,esp
   1446d:	mov    ecx,DWORD PTR [ebp+0x8]
   14470:	push   0x0
   14472:	call   0x139ca
   14477:	pop    ebp
   14478:	ret    0x4
   1447b:	int3   
   1447c:	int3   
   1447d:	int3   
   1447e:	int3   
   1447f:	int3   
   14480:	mov    edi,edi
   14482:	push   ebp
   14483:	mov    ebp,esp
   14485:	mov    ecx,DWORD PTR [ebp+0x8]
   14488:	test   ecx,ecx
   1448a:	je     0x14494
   1448c:	push   DWORD PTR [ebp+0xc]
   1448f:	call   0x139f0
   14494:	pop    ebp
   14495:	ret    0x8
   14498:	int3   
   14499:	int3   
   1449a:	int3   
   1449b:	int3   
   1449c:	int3   
   1449d:	int3   
   1449e:	mov    edi,edi
   144a0:	push   ebp
   144a1:	mov    ebp,esp
   144a3:	mov    ecx,DWORD PTR [ebp+0x8]
   144a6:	test   ecx,ecx
   144a8:	je     0x144b2
   144aa:	push   DWORD PTR [ebp+0xc]
   144ad:	call   0x13a1c
   144b2:	pop    ebp
   144b3:	ret    0x8
   144b6:	int3   
   144b7:	int3   
   144b8:	int3   
   144b9:	int3   
   144ba:	int3   
   144bb:	int3   
   144bc:	mov    edi,edi
   144be:	push   ebp
   144bf:	mov    ebp,esp
   144c1:	mov    ecx,DWORD PTR [ebp+0x8]
   144c4:	push   0x0
   144c6:	call   0x13a44
   144cb:	pop    ebp
   144cc:	ret    0x4
   144cf:	int3   
   144d0:	int3   
   144d1:	int3   
   144d2:	int3   
   144d3:	int3   
   144d4:	mov    edi,edi
   144d6:	push   ebp
   144d7:	mov    ebp,esp
   144d9:	mov    ecx,DWORD PTR [ebp+0x8]
   144dc:	test   ecx,ecx
   144de:	je     0x144e8
   144e0:	push   DWORD PTR [ebp+0xc]
   144e3:	call   0x13a72
   144e8:	pop    ebp
   144e9:	ret    0x8
   144ec:	int3   
   144ed:	int3   
   144ee:	int3   
   144ef:	int3   
   144f0:	int3   
   144f1:	int3   
   144f2:	mov    edi,edi
   144f4:	push   ebp
   144f5:	mov    ebp,esp
   144f7:	push   ecx
   144f8:	mov    eax,ds:0x786b4
   144fd:	push   ebx
   144fe:	mov    ebx,DWORD PTR [ebp+0xc]
   14501:	push   esi
   14502:	mov    esi,DWORD PTR [ebp+0x8]
   14505:	mov    DWORD PTR [ebp-0x4],ecx
   14508:	mov    DWORD PTR [ebp+0x8],esi
   1450b:	cmp    esi,eax
   1450d:	je     0x14552
   1450f:	push   edi
   14510:	push   DWORD PTR [esi+0x10]
   14513:	mov    ecx,DWORD PTR [ebp-0x4]
   14516:	push   ebx
   14517:	call   0x14394
   1451c:	mov    edi,eax
   1451e:	cmp    DWORD PTR [ebp+0x8],esi
   14521:	jne    0x14526
   14523:	mov    DWORD PTR [ebp+0x8],edi
   14526:	mov    ecx,DWORD PTR [ebp-0x4]
   14529:	push   edi
   1452a:	push   DWORD PTR [esi+0x8]
   1452d:	call   0x144f2
   14532:	mov    DWORD PTR [edi+0x8],eax
   14535:	lea    eax,[esi+0xc]
   14538:	push   eax
   14539:	lea    eax,[edi+0xc]
   1453c:	push   eax
   1453d:	call   0x1a5ba
   14542:	mov    DWORD PTR [ebx],edi
   14544:	mov    esi,DWORD PTR [esi]
   14546:	mov    eax,ds:0x786b4
   1454b:	mov    ebx,edi
   1454d:	cmp    esi,eax
   1454f:	jne    0x14510
   14551:	pop    edi
   14552:	mov    DWORD PTR [ebx],eax
   14554:	mov    eax,DWORD PTR [ebp+0x8]
   14557:	pop    esi
   14558:	pop    ebx
   14559:	leave  
   1455a:	ret    0x8
   1455d:	int3   
   1455e:	int3   
   1455f:	int3   
   14560:	int3   
   14561:	int3   
   14562:	mov    edi,edi
   14564:	push   ebp
   14565:	mov    ebp,esp
   14567:	push   edi
   14568:	mov    edi,DWORD PTR [ebp+0xc]
   1456b:	cmp    DWORD PTR [ebp+0x8],edi
   1456e:	je     0x14584
   14570:	push   esi
   14571:	mov    esi,DWORD PTR [ebp+0x10]
   14574:	inc    DWORD PTR [esi]
   14576:	lea    ecx,[ebp+0x8]
   14579:	call   0x1373e
   1457e:	cmp    DWORD PTR [ebp+0x8],edi
   14581:	jne    0x14574
   14583:	pop    esi
   14584:	pop    edi
   14585:	pop    ebp
   14586:	ret    
   14587:	int3   
   14588:	int3   
   14589:	int3   
   1458a:	int3   
   1458b:	int3   
   1458c:	mov    edi,edi
   1458e:	push   ebp
   1458f:	mov    ebp,esp
   14591:	push   DWORD PTR [ebp+0xc]
   14594:	push   DWORD PTR [ebp+0x8]
   14597:	call   0x13c68
   1459c:	mov    eax,DWORD PTR [ebp+0x8]
   1459f:	pop    ebp
   145a0:	ret    0x8
   145a3:	int3   
   145a4:	int3   
   145a5:	int3   
   145a6:	int3   
   145a7:	int3   
   145a8:	mov    edi,edi
   145aa:	push   ebp
   145ab:	mov    ebp,esp
   145ad:	push   ecx
   145ae:	push   esi
   145af:	mov    esi,ecx
   145b1:	cmp    DWORD PTR [esi+0xc],0x0
   145b5:	mov    ecx,DWORD PTR [ebp+0xc]
   145b8:	je     0x145f2
   145ba:	mov    eax,DWORD PTR [esi+0x4]
   145bd:	cmp    ecx,DWORD PTR [eax]
   145bf:	jne    0x145f2
   145c1:	cmp    DWORD PTR [ebp+0x10],eax
   145c4:	jne    0x145f2
   145c6:	push   DWORD PTR [eax+0x4]
   145c9:	mov    ecx,esi
   145cb:	call   0x13830
   145d0:	mov    ecx,DWORD PTR ds:0x786b0
   145d6:	mov    eax,DWORD PTR [esi+0x4]
   145d9:	mov    DWORD PTR [eax+0x4],ecx
   145dc:	mov    eax,DWORD PTR [esi+0x4]
   145df:	and    DWORD PTR [esi+0xc],0x0
   145e3:	mov    DWORD PTR [eax],eax
   145e5:	mov    eax,DWORD PTR [esi+0x4]
   145e8:	mov    DWORD PTR [eax+0x8],eax
   145eb:	mov    eax,DWORD PTR [esi+0x4]
   145ee:	mov    ecx,DWORD PTR [eax]
   145f0:	jmp    0x14617
   145f2:	cmp    ecx,DWORD PTR [ebp+0x10]
   145f5:	je     0x14617
   145f7:	push   edi
   145f8:	mov    edi,ecx
   145fa:	lea    ecx,[ebp+0xc]
   145fd:	call   0x10ef4
   14602:	push   edi
   14603:	lea    eax,[ebp-0x4]
   14606:	push   eax
   14607:	mov    ecx,esi
   14609:	call   0x13d5a
   1460e:	mov    ecx,DWORD PTR [ebp+0xc]
   14611:	cmp    ecx,DWORD PTR [ebp+0x10]
   14614:	jne    0x145f8
   14616:	pop    edi
   14617:	mov    eax,DWORD PTR [ebp+0x8]
   1461a:	mov    DWORD PTR [eax],ecx
   1461c:	pop    esi
   1461d:	leave  
   1461e:	ret    0xc
   14621:	int3   
   14622:	int3   
   14623:	int3   
   14624:	int3   
   14625:	int3   
   14626:	mov    edi,edi
   14628:	push   ebp
   14629:	mov    ebp,esp
   1462b:	push   ecx
   1462c:	push   ecx
   1462d:	push   esi
   1462e:	push   DWORD PTR [ebp+0x8]
   14631:	lea    eax,[ebp-0x8]
   14634:	push   eax
   14635:	mov    esi,ecx
   14637:	call   0x13fb2
   1463c:	and    DWORD PTR [ebp+0x8],0x0
   14640:	lea    eax,[ebp+0x8]
   14643:	push   eax
   14644:	push   DWORD PTR [ebp-0x4]
   14647:	push   DWORD PTR [ebp-0x8]
   1464a:	call   0x138d8
   1464f:	add    esp,0xc
   14652:	push   DWORD PTR [ebp-0x4]
   14655:	lea    eax,[ebp-0x4]
   14658:	push   DWORD PTR [ebp-0x8]
   1465b:	mov    ecx,esi
   1465d:	push   eax
   1465e:	call   0x145a8
   14663:	mov    eax,DWORD PTR [ebp+0x8]
   14666:	pop    esi
   14667:	leave  
   14668:	ret    0x4
   1466b:	int3   
   1466c:	int3   
   1466d:	int3   
   1466e:	int3   
   1466f:	int3   
   14670:	mov    edi,edi
   14672:	push   ebp
   14673:	mov    ebp,esp
   14675:	push   ecx
   14676:	push   esi
   14677:	mov    esi,ecx
   14679:	cmp    DWORD PTR [esi+0xc],0x0
   1467d:	mov    ecx,DWORD PTR [ebp+0xc]
   14680:	je     0x146ba
   14682:	mov    eax,DWORD PTR [esi+0x4]
   14685:	cmp    ecx,DWORD PTR [eax]
   14687:	jne    0x146ba
   14689:	cmp    DWORD PTR [ebp+0x10],eax
   1468c:	jne    0x146ba
   1468e:	push   DWORD PTR [eax+0x4]
   14691:	mov    ecx,esi
   14693:	call   0x13898
   14698:	mov    ecx,DWORD PTR ds:0x786b4
   1469e:	mov    eax,DWORD PTR [esi+0x4]
   146a1:	mov    DWORD PTR [eax+0x4],ecx
   146a4:	mov    eax,DWORD PTR [esi+0x4]
   146a7:	and    DWORD PTR [esi+0xc],0x0
   146ab:	mov    DWORD PTR [eax],eax
   146ad:	mov    eax,DWORD PTR [esi+0x4]
   146b0:	mov    DWORD PTR [eax+0x8],eax
   146b3:	mov    eax,DWORD PTR [esi+0x4]
   146b6:	mov    ecx,DWORD PTR [eax]
   146b8:	jmp    0x146df
   146ba:	cmp    ecx,DWORD PTR [ebp+0x10]
   146bd:	je     0x146df
   146bf:	push   edi
   146c0:	mov    edi,ecx
   146c2:	lea    ecx,[ebp+0xc]
   146c5:	call   0x12e90
   146ca:	push   edi
   146cb:	lea    eax,[ebp-0x4]
   146ce:	push   eax
   146cf:	mov    ecx,esi
   146d1:	call   0x140c2
   146d6:	mov    ecx,DWORD PTR [ebp+0xc]
   146d9:	cmp    ecx,DWORD PTR [ebp+0x10]
   146dc:	jne    0x146c0
   146de:	pop    edi
   146df:	mov    eax,DWORD PTR [ebp+0x8]
   146e2:	mov    DWORD PTR [eax],ecx
   146e4:	pop    esi
   146e5:	leave  
   146e6:	ret    0xc
   146e9:	int3   
   146ea:	int3   
   146eb:	int3   
   146ec:	int3   
   146ed:	int3   
   146ee:	mov    edi,edi
   146f0:	push   ebp
   146f1:	mov    ebp,esp
   146f3:	push   ecx
   146f4:	push   ecx
   146f5:	push   esi
   146f6:	push   DWORD PTR [ebp+0x8]
   146f9:	lea    eax,[ebp-0x8]
   146fc:	push   eax
   146fd:	mov    esi,ecx
   146ff:	call   0x1431a
   14704:	and    DWORD PTR [ebp+0x8],0x0
   14708:	lea    eax,[ebp+0x8]
   1470b:	push   eax
   1470c:	push   DWORD PTR [ebp-0x4]
   1470f:	push   DWORD PTR [ebp-0x8]
   14712:	call   0x1393e
   14717:	add    esp,0xc
   1471a:	push   DWORD PTR [ebp-0x4]
   1471d:	lea    eax,[ebp-0x4]
   14720:	push   DWORD PTR [ebp-0x8]
   14723:	mov    ecx,esi
   14725:	push   eax
   14726:	call   0x14670
   1472b:	mov    eax,DWORD PTR [ebp+0x8]
   1472e:	pop    esi
   1472f:	leave  
   14730:	ret    0x4
   14733:	int3   
   14734:	int3   
   14735:	int3   
   14736:	int3   
   14737:	int3   
   14738:	mov    edi,edi
   1473a:	push   esi
   1473b:	push   edi
   1473c:	push   0x1
   1473e:	xor    edi,edi
   14740:	push   edi
   14741:	mov    esi,ecx
   14743:	call   0x1434c
   14748:	cmp    DWORD PTR ds:0x786b0,edi
   1474e:	jne    0x14765
   14750:	mov    ecx,eax
   14752:	mov    DWORD PTR ds:0x786b0,ecx
   14758:	mov    DWORD PTR [ecx],edi
   1475a:	mov    ecx,DWORD PTR ds:0x786b0
   14760:	xor    eax,eax
   14762:	mov    DWORD PTR [ecx+0x8],edi
   14765:	inc    DWORD PTR ds:0x78860
   1476b:	cmp    eax,edi
   1476d:	je     0x14776
   1476f:	push   eax
   14770:	call   0x11d22
   14775:	pop    ecx
   14776:	push   edi
   14777:	push   DWORD PTR ds:0x786b0
   1477d:	mov    ecx,esi
   1477f:	call   0x1434c
   14784:	mov    DWORD PTR [esi+0xc],edi
   14787:	mov    DWORD PTR [esi+0x4],eax
   1478a:	mov    DWORD PTR [eax],eax
   1478c:	mov    esi,DWORD PTR [esi+0x4]
   1478f:	pop    edi
   14790:	mov    DWORD PTR [esi+0x8],esi
   14793:	pop    esi
   14794:	ret    
   14795:	int3   
   14796:	int3   
   14797:	int3   
   14798:	int3   
   14799:	int3   
   1479a:	mov    edi,edi
   1479c:	push   esi
   1479d:	push   edi
   1479e:	push   0x1
   147a0:	xor    edi,edi
   147a2:	push   edi
   147a3:	mov    esi,ecx
   147a5:	call   0x14370
   147aa:	cmp    DWORD PTR ds:0x786bc,edi
   147b0:	jne    0x147c7
   147b2:	mov    ecx,eax
   147b4:	mov    DWORD PTR ds:0x786bc,ecx
   147ba:	mov    DWORD PTR [ecx],edi
   147bc:	mov    ecx,DWORD PTR ds:0x786bc
   147c2:	xor    eax,eax
   147c4:	mov    DWORD PTR [ecx+0x8],edi
   147c7:	inc    DWORD PTR ds:0x78864
   147cd:	cmp    eax,edi
   147cf:	je     0x147d8
   147d1:	push   eax
   147d2:	call   0x11d22
   147d7:	pop    ecx
   147d8:	push   edi
   147d9:	push   DWORD PTR ds:0x786bc
   147df:	mov    ecx,esi
   147e1:	call   0x14370
   147e6:	mov    DWORD PTR [esi+0xc],edi
   147e9:	mov    DWORD PTR [esi+0x4],eax
   147ec:	mov    DWORD PTR [eax],eax
   147ee:	mov    esi,DWORD PTR [esi+0x4]
   147f1:	pop    edi
   147f2:	mov    DWORD PTR [esi+0x8],esi
   147f5:	pop    esi
   147f6:	ret    
   147f7:	int3   
   147f8:	int3   
   147f9:	int3   
   147fa:	int3   
   147fb:	int3   
   147fc:	mov    edi,edi
   147fe:	push   esi
   147ff:	push   edi
   14800:	push   0x1
   14802:	xor    edi,edi
   14804:	push   edi
   14805:	mov    esi,ecx
   14807:	call   0x143dc
   1480c:	cmp    DWORD PTR ds:0x786c0,edi
   14812:	jne    0x14829
   14814:	mov    ecx,eax
   14816:	mov    DWORD PTR ds:0x786c0,ecx
   1481c:	mov    DWORD PTR [ecx],edi
   1481e:	mov    ecx,DWORD PTR ds:0x786c0
   14824:	xor    eax,eax
   14826:	mov    DWORD PTR [ecx+0x8],edi
   14829:	inc    DWORD PTR ds:0x78868
   1482f:	cmp    eax,edi
   14831:	je     0x1483a
   14833:	push   eax
   14834:	call   0x11d22
   14839:	pop    ecx
   1483a:	push   edi
   1483b:	push   DWORD PTR ds:0x786c0
   14841:	mov    ecx,esi
   14843:	call   0x143dc
   14848:	mov    DWORD PTR [esi+0xc],edi
   1484b:	mov    DWORD PTR [esi+0x4],eax
   1484e:	mov    DWORD PTR [eax],eax
   14850:	mov    esi,DWORD PTR [esi+0x4]
   14853:	pop    edi
   14854:	mov    DWORD PTR [esi+0x8],esi
   14857:	pop    esi
   14858:	ret    
   14859:	int3   
   1485a:	int3   
   1485b:	int3   
   1485c:	int3   
   1485d:	int3   
   1485e:	mov    edi,edi
   14860:	push   esi
   14861:	push   edi
   14862:	push   0x1
   14864:	xor    edi,edi
   14866:	push   edi
   14867:	mov    esi,ecx
   14869:	call   0x1434c
   1486e:	cmp    DWORD PTR ds:0x786c4,edi
   14874:	jne    0x1488b
   14876:	mov    ecx,eax
   14878:	mov    DWORD PTR ds:0x786c4,ecx
   1487e:	mov    DWORD PTR [ecx],edi
   14880:	mov    ecx,DWORD PTR ds:0x786c4
   14886:	xor    eax,eax
   14888:	mov    DWORD PTR [ecx+0x8],edi
   1488b:	inc    DWORD PTR ds:0x7886c
   14891:	cmp    eax,edi
   14893:	je     0x1489c
   14895:	push   eax
   14896:	call   0x11d22
   1489b:	pop    ecx
   1489c:	push   edi
   1489d:	push   DWORD PTR ds:0x786c4
   148a3:	mov    ecx,esi
   148a5:	call   0x1434c
   148aa:	mov    DWORD PTR [esi+0xc],edi
   148ad:	mov    DWORD PTR [esi+0x4],eax
   148b0:	mov    DWORD PTR [eax],eax
   148b2:	mov    esi,DWORD PTR [esi+0x4]
   148b5:	pop    edi
   148b6:	mov    DWORD PTR [esi+0x8],esi
   148b9:	pop    esi
   148ba:	ret    
   148bb:	int3   
   148bc:	int3   
   148bd:	int3   
   148be:	int3   
   148bf:	int3   
   148c0:	mov    edi,edi
   148c2:	push   esi
   148c3:	push   edi
   148c4:	push   0x1
   148c6:	xor    edi,edi
   148c8:	push   edi
   148c9:	mov    esi,ecx
   148cb:	call   0x14394
   148d0:	cmp    DWORD PTR ds:0x786b4,edi
   148d6:	jne    0x148ed
   148d8:	mov    ecx,eax
   148da:	mov    DWORD PTR ds:0x786b4,ecx
   148e0:	mov    DWORD PTR [ecx],edi
   148e2:	mov    ecx,DWORD PTR ds:0x786b4
   148e8:	xor    eax,eax
   148ea:	mov    DWORD PTR [ecx+0x8],edi
   148ed:	inc    DWORD PTR ds:0x78870
   148f3:	cmp    eax,edi
   148f5:	je     0x148fe
   148f7:	push   eax
   148f8:	call   0x11d22
   148fd:	pop    ecx
   148fe:	push   edi
   148ff:	push   DWORD PTR ds:0x786b4
   14905:	mov    ecx,esi
   14907:	call   0x14394
   1490c:	mov    DWORD PTR [esi+0xc],edi
   1490f:	mov    DWORD PTR [esi+0x4],eax
   14912:	mov    DWORD PTR [eax],eax
   14914:	mov    esi,DWORD PTR [esi+0x4]
   14917:	pop    edi
   14918:	mov    DWORD PTR [esi+0x8],esi
   1491b:	pop    esi
   1491c:	ret    
   1491d:	int3   
   1491e:	int3   
   1491f:	int3   
   14920:	int3   
   14921:	int3   
   14922:	mov    edi,edi
   14924:	push   ebp
   14925:	mov    ebp,esp
   14927:	push   ebx
   14928:	push   esi
   14929:	mov    esi,DWORD PTR [ebp+0x10]
   1492c:	push   edi
   1492d:	push   0x0
   1492f:	push   esi
   14930:	mov    edi,ecx
   14932:	call   0x14394
   14937:	push   DWORD PTR [ebp+0x14]
   1493a:	mov    ebx,eax
   1493c:	mov    eax,ds:0x786b4
   14941:	mov    DWORD PTR [ebx],eax
   14943:	mov    eax,ds:0x786b4
   14948:	mov    DWORD PTR [ebx+0x8],eax
   1494b:	lea    eax,[ebx+0xc]
   1494e:	push   eax
   1494f:	call   0x1a5ba
   14954:	inc    DWORD PTR [edi+0xc]
   14957:	cmp    esi,DWORD PTR [edi+0x4]
   1495a:	je     0x1497e
   1495c:	mov    eax,DWORD PTR [ebp+0xc]
   1495f:	cmp    eax,DWORD PTR ds:0x786b4
   14965:	jne    0x1497e
   14967:	mov    eax,DWORD PTR [ebp+0x14]
   1496a:	mov    eax,DWORD PTR [eax]
   1496c:	cmp    eax,DWORD PTR [esi+0xc]
   1496f:	jb     0x1497e
   14971:	mov    DWORD PTR [esi+0x8],ebx
   14974:	mov    eax,DWORD PTR [edi+0x4]
   14977:	cmp    esi,DWORD PTR [eax+0x8]
   1497a:	jne    0x14998
   1497c:	jmp    0x1498d
   1497e:	mov    DWORD PTR [esi],ebx
   14980:	mov    eax,DWORD PTR [edi+0x4]
   14983:	cmp    esi,eax
   14985:	jne    0x14992
   14987:	mov    DWORD PTR [eax+0x4],ebx
   1498a:	mov    eax,DWORD PTR [edi+0x4]
   1498d:	mov    DWORD PTR [eax+0x8],ebx
   14990:	jmp    0x14998
   14992:	cmp    esi,DWORD PTR [eax]
   14994:	jne    0x14998
   14996:	mov    DWORD PTR [eax],ebx
   14998:	mov    eax,DWORD PTR [edi+0x4]
   1499b:	mov    esi,ebx
   1499d:	cmp    ebx,DWORD PTR [eax+0x4]
   149a0:	je     0x14a54
   149a6:	mov    eax,DWORD PTR [esi+0x4]
   149a9:	xor    edx,edx
   149ab:	cmp    DWORD PTR [eax+0x10],edx
   149ae:	jne    0x14a54
   149b4:	mov    ecx,DWORD PTR [eax+0x4]
   149b7:	cmp    eax,DWORD PTR [ecx]
   149b9:	jne    0x149f5
   149bb:	mov    ecx,DWORD PTR [ecx+0x8]
   149be:	cmp    DWORD PTR [ecx+0x10],edx
   149c1:	je     0x149fc
   149c3:	cmp    esi,DWORD PTR [eax+0x8]
   149c6:	jne    0x149d2
   149c8:	mov    esi,eax
   149ca:	push   esi
   149cb:	mov    ecx,edi
   149cd:	call   0x12ec6
   149d2:	mov    eax,DWORD PTR [esi+0x4]
   149d5:	mov    DWORD PTR [eax+0x10],0x1
   149dc:	mov    eax,DWORD PTR [esi+0x4]
   149df:	mov    eax,DWORD PTR [eax+0x4]
   149e2:	and    DWORD PTR [eax+0x10],0x0
   149e6:	mov    eax,DWORD PTR [esi+0x4]
   149e9:	push   DWORD PTR [eax+0x4]
   149ec:	mov    ecx,edi
   149ee:	call   0x12f14
   149f3:	jmp    0x14a48
   149f5:	mov    ecx,DWORD PTR [ecx]
   149f7:	cmp    DWORD PTR [ecx+0x10],edx
   149fa:	jne    0x14a19
   149fc:	mov    edx,eax
   149fe:	xor    eax,eax
   14a00:	inc    eax
   14a01:	mov    DWORD PTR [edx+0x10],eax
   14a04:	mov    DWORD PTR [ecx+0x10],eax
   14a07:	mov    eax,DWORD PTR [esi+0x4]
   14a0a:	mov    eax,DWORD PTR [eax+0x4]
   14a0d:	and    DWORD PTR [eax+0x10],0x0
   14a11:	mov    eax,DWORD PTR [esi+0x4]
   14a14:	mov    esi,DWORD PTR [eax+0x4]
   14a17:	jmp    0x14a48
   14a19:	cmp    esi,DWORD PTR [eax]
   14a1b:	jne    0x14a27
   14a1d:	mov    esi,eax
   14a1f:	push   esi
   14a20:	mov    ecx,edi
   14a22:	call   0x12f14
   14a27:	mov    eax,DWORD PTR [esi+0x4]
   14a2a:	mov    DWORD PTR [eax+0x10],0x1
   14a31:	mov    eax,DWORD PTR [esi+0x4]
   14a34:	mov    eax,DWORD PTR [eax+0x4]
   14a37:	and    DWORD PTR [eax+0x10],0x0
   14a3b:	mov    eax,DWORD PTR [esi+0x4]
   14a3e:	push   DWORD PTR [eax+0x4]
   14a41:	mov    ecx,edi
   14a43:	call   0x12ec6
   14a48:	mov    eax,DWORD PTR [edi+0x4]
   14a4b:	cmp    esi,DWORD PTR [eax+0x4]
   14a4e:	jne    0x149a6
   14a54:	mov    eax,DWORD PTR [edi+0x4]
   14a57:	mov    eax,DWORD PTR [eax+0x4]
   14a5a:	pop    edi
   14a5b:	mov    DWORD PTR [eax+0x10],0x1
   14a62:	mov    eax,DWORD PTR [ebp+0x8]
   14a65:	pop    esi
   14a66:	mov    DWORD PTR [eax],ebx
   14a68:	pop    ebx
   14a69:	pop    ebp
   14a6a:	ret    0x10
   14a6d:	int3   
   14a6e:	int3   
   14a6f:	int3   
   14a70:	int3   
   14a71:	int3   
   14a72:	mov    edi,edi
   14a74:	push   esi
   14a75:	push   edi
   14a76:	push   0x1
   14a78:	xor    edi,edi
   14a7a:	push   edi
   14a7b:	mov    esi,ecx
   14a7d:	call   0x143b8
   14a82:	cmp    DWORD PTR ds:0x786b8,edi
   14a88:	jne    0x14a9f
   14a8a:	mov    ecx,eax
   14a8c:	mov    DWORD PTR ds:0x786b8,ecx
   14a92:	mov    DWORD PTR [ecx],edi
   14a94:	mov    ecx,DWORD PTR ds:0x786b8
   14a9a:	xor    eax,eax
   14a9c:	mov    DWORD PTR [ecx+0x8],edi
   14a9f:	inc    DWORD PTR ds:0x78874
   14aa5:	cmp    eax,edi
   14aa7:	je     0x14ab0
   14aa9:	push   eax
   14aaa:	call   0x11d22
   14aaf:	pop    ecx
   14ab0:	push   edi
   14ab1:	push   DWORD PTR ds:0x786b8
   14ab7:	mov    ecx,esi
   14ab9:	call   0x143b8
   14abe:	mov    DWORD PTR [esi+0xc],edi
   14ac1:	mov    DWORD PTR [esi+0x4],eax
   14ac4:	mov    DWORD PTR [eax],eax
   14ac6:	mov    esi,DWORD PTR [esi+0x4]
   14ac9:	pop    edi
   14aca:	mov    DWORD PTR [esi+0x8],esi
   14acd:	pop    esi
   14ace:	ret    
   14acf:	int3   
   14ad0:	int3   
   14ad1:	int3   
   14ad2:	int3   
   14ad3:	int3   
   14ad4:	mov    edi,edi
   14ad6:	push   ebp
   14ad7:	mov    ebp,esp
   14ad9:	push   ebx
   14ada:	push   esi
   14adb:	mov    esi,DWORD PTR [ebp+0x10]
   14ade:	push   edi
   14adf:	push   0x0
   14ae1:	push   esi
   14ae2:	mov    edi,ecx
   14ae4:	call   0x1434c
   14ae9:	push   DWORD PTR [ebp+0x14]
   14aec:	mov    ebx,eax
   14aee:	mov    eax,ds:0x786b0
   14af3:	mov    DWORD PTR [ebx],eax
   14af5:	mov    eax,ds:0x786b0
   14afa:	mov    DWORD PTR [ebx+0x8],eax
   14afd:	lea    eax,[ebx+0xc]
   14b00:	push   eax
   14b01:	call   0x1123c
   14b06:	inc    DWORD PTR [edi+0xc]
   14b09:	cmp    esi,DWORD PTR [edi+0x4]
   14b0c:	je     0x14b30
   14b0e:	mov    eax,DWORD PTR [ebp+0xc]
   14b11:	cmp    eax,DWORD PTR ds:0x786b0
   14b17:	jne    0x14b30
   14b19:	mov    eax,DWORD PTR [ebp+0x14]
   14b1c:	mov    eax,DWORD PTR [eax]
   14b1e:	cmp    eax,DWORD PTR [esi+0xc]
   14b21:	jb     0x14b30
   14b23:	mov    DWORD PTR [esi+0x8],ebx
   14b26:	mov    eax,DWORD PTR [edi+0x4]
   14b29:	cmp    esi,DWORD PTR [eax+0x8]
   14b2c:	jne    0x14b4a
   14b2e:	jmp    0x14b3f
   14b30:	mov    DWORD PTR [esi],ebx
   14b32:	mov    eax,DWORD PTR [edi+0x4]
   14b35:	cmp    esi,eax
   14b37:	jne    0x14b44
   14b39:	mov    DWORD PTR [eax+0x4],ebx
   14b3c:	mov    eax,DWORD PTR [edi+0x4]
   14b3f:	mov    DWORD PTR [eax+0x8],ebx
   14b42:	jmp    0x14b4a
   14b44:	cmp    esi,DWORD PTR [eax]
   14b46:	jne    0x14b4a
   14b48:	mov    DWORD PTR [eax],ebx
   14b4a:	mov    eax,DWORD PTR [edi+0x4]
   14b4d:	mov    esi,ebx
   14b4f:	cmp    ebx,DWORD PTR [eax+0x4]
   14b52:	je     0x14c06
   14b58:	mov    eax,DWORD PTR [esi+0x4]
   14b5b:	xor    edx,edx
   14b5d:	cmp    DWORD PTR [eax+0x14],edx
   14b60:	jne    0x14c06
   14b66:	mov    ecx,DWORD PTR [eax+0x4]
   14b69:	cmp    eax,DWORD PTR [ecx]
   14b6b:	jne    0x14ba7
   14b6d:	mov    ecx,DWORD PTR [ecx+0x8]
   14b70:	cmp    DWORD PTR [ecx+0x14],edx
   14b73:	je     0x14bae
   14b75:	cmp    esi,DWORD PTR [eax+0x8]
   14b78:	jne    0x14b84
   14b7a:	mov    esi,eax
   14b7c:	push   esi
   14b7d:	mov    ecx,edi
   14b7f:	call   0x12cc4
   14b84:	mov    eax,DWORD PTR [esi+0x4]
   14b87:	mov    DWORD PTR [eax+0x14],0x1
   14b8e:	mov    eax,DWORD PTR [esi+0x4]
   14b91:	mov    eax,DWORD PTR [eax+0x4]
   14b94:	and    DWORD PTR [eax+0x14],0x0
   14b98:	mov    eax,DWORD PTR [esi+0x4]
   14b9b:	push   DWORD PTR [eax+0x4]
   14b9e:	mov    ecx,edi
   14ba0:	call   0x12d12
   14ba5:	jmp    0x14bfa
   14ba7:	mov    ecx,DWORD PTR [ecx]
   14ba9:	cmp    DWORD PTR [ecx+0x14],edx
   14bac:	jne    0x14bcb
   14bae:	mov    edx,eax
   14bb0:	xor    eax,eax
   14bb2:	inc    eax
   14bb3:	mov    DWORD PTR [edx+0x14],eax
   14bb6:	mov    DWORD PTR [ecx+0x14],eax
   14bb9:	mov    eax,DWORD PTR [esi+0x4]
   14bbc:	mov    eax,DWORD PTR [eax+0x4]
   14bbf:	and    DWORD PTR [eax+0x14],0x0
   14bc3:	mov    eax,DWORD PTR [esi+0x4]
   14bc6:	mov    esi,DWORD PTR [eax+0x4]
   14bc9:	jmp    0x14bfa
   14bcb:	cmp    esi,DWORD PTR [eax]
   14bcd:	jne    0x14bd9
   14bcf:	mov    esi,eax
   14bd1:	push   esi
   14bd2:	mov    ecx,edi
   14bd4:	call   0x12d12
   14bd9:	mov    eax,DWORD PTR [esi+0x4]
   14bdc:	mov    DWORD PTR [eax+0x14],0x1
   14be3:	mov    eax,DWORD PTR [esi+0x4]
   14be6:	mov    eax,DWORD PTR [eax+0x4]
   14be9:	and    DWORD PTR [eax+0x14],0x0
   14bed:	mov    eax,DWORD PTR [esi+0x4]
   14bf0:	push   DWORD PTR [eax+0x4]
   14bf3:	mov    ecx,edi
   14bf5:	call   0x12cc4
   14bfa:	mov    eax,DWORD PTR [edi+0x4]
   14bfd:	cmp    esi,DWORD PTR [eax+0x4]
   14c00:	jne    0x14b58
   14c06:	mov    eax,DWORD PTR [edi+0x4]
   14c09:	mov    eax,DWORD PTR [eax+0x4]
   14c0c:	pop    edi
   14c0d:	mov    DWORD PTR [eax+0x14],0x1
   14c14:	mov    eax,DWORD PTR [ebp+0x8]
   14c17:	pop    esi
   14c18:	mov    DWORD PTR [eax],ebx
   14c1a:	pop    ebx
   14c1b:	pop    ebp
   14c1c:	ret    0x10
   14c1f:	int3   
   14c20:	int3   
   14c21:	int3   
   14c22:	int3   
   14c23:	int3   
   14c24:	mov    edi,edi
   14c26:	push   ebp
   14c27:	mov    ebp,esp
   14c29:	push   ecx
   14c2a:	push   ecx
   14c2b:	push   ebx
   14c2c:	push   esi
   14c2d:	mov    DWORD PTR [ebp-0x4],ecx
   14c30:	push   edi
   14c31:	mov    edi,DWORD PTR [ebp+0xc]
   14c34:	lea    ecx,[ebp+0xc]
   14c37:	call   0x11172
   14c3c:	mov    esi,DWORD PTR [edi]
   14c3e:	mov    eax,ds:0x786c0
   14c43:	mov    ebx,edi
   14c45:	mov    DWORD PTR [ebp-0x8],esi
   14c48:	cmp    esi,eax
   14c4a:	jne    0x14c68
   14c4c:	mov    esi,DWORD PTR [edi+0x8]
   14c4f:	mov    eax,DWORD PTR [ebx+0x4]
   14c52:	mov    ecx,DWORD PTR [ebp-0x4]
   14c55:	mov    DWORD PTR [esi+0x4],eax
   14c58:	mov    eax,DWORD PTR [ecx+0x4]
   14c5b:	cmp    DWORD PTR [eax+0x4],edi
   14c5e:	jne    0x14cdd
   14c60:	mov    DWORD PTR [eax+0x4],esi
   14c63:	jmp    0x14ceb
   14c68:	mov    ecx,DWORD PTR [edi+0x8]
   14c6b:	cmp    ecx,eax
   14c6d:	je     0x14c4f
   14c6f:	push   ecx
   14c70:	call   0x1104c
   14c75:	mov    ebx,eax
   14c77:	mov    esi,DWORD PTR [ebx+0x8]
   14c7a:	cmp    ebx,edi
   14c7c:	je     0x14c4f
   14c7e:	mov    eax,DWORD PTR [ebp-0x8]
   14c81:	mov    DWORD PTR [eax+0x4],ebx
   14c84:	mov    eax,DWORD PTR [edi]
   14c86:	mov    DWORD PTR [ebx],eax
   14c88:	cmp    ebx,DWORD PTR [edi+0x8]
   14c8b:	jne    0x14c92
   14c8d:	mov    DWORD PTR [esi+0x4],ebx
   14c90:	jmp    0x14ca9
   14c92:	mov    eax,DWORD PTR [ebx+0x4]
   14c95:	mov    DWORD PTR [esi+0x4],eax
   14c98:	mov    eax,DWORD PTR [ebx+0x4]
   14c9b:	mov    DWORD PTR [eax],esi
   14c9d:	mov    eax,DWORD PTR [edi+0x8]
   14ca0:	mov    DWORD PTR [ebx+0x8],eax
   14ca3:	mov    eax,DWORD PTR [edi+0x8]
   14ca6:	mov    DWORD PTR [eax+0x4],ebx
   14ca9:	mov    eax,DWORD PTR [ebp-0x4]
   14cac:	mov    eax,DWORD PTR [eax+0x4]
   14caf:	cmp    DWORD PTR [eax+0x4],edi
   14cb2:	jne    0x14cb9
   14cb4:	mov    DWORD PTR [eax+0x4],ebx
   14cb7:	jmp    0x14cc7
   14cb9:	mov    eax,DWORD PTR [edi+0x4]
   14cbc:	cmp    DWORD PTR [eax],edi
   14cbe:	jne    0x14cc4
   14cc0:	mov    DWORD PTR [eax],ebx
   14cc2:	jmp    0x14cc7
   14cc4:	mov    DWORD PTR [eax+0x8],ebx
   14cc7:	mov    eax,DWORD PTR [edi+0x4]
   14cca:	mov    DWORD PTR [ebx+0x4],eax
   14ccd:	mov    eax,DWORD PTR [ebx+0x1c]
   14cd0:	mov    ecx,DWORD PTR [edi+0x1c]
   14cd3:	mov    DWORD PTR [ebx+0x1c],ecx
   14cd6:	mov    DWORD PTR [edi+0x1c],eax
   14cd9:	mov    ebx,edi
   14cdb:	jmp    0x14d3e
   14cdd:	mov    eax,DWORD PTR [edi+0x4]
   14ce0:	cmp    DWORD PTR [eax],edi
   14ce2:	jne    0x14ce8
   14ce4:	mov    DWORD PTR [eax],esi
   14ce6:	jmp    0x14ceb
   14ce8:	mov    DWORD PTR [eax+0x8],esi
   14ceb:	mov    eax,DWORD PTR [ecx+0x4]
   14cee:	mov    DWORD PTR [ebp-0x8],eax
   14cf1:	cmp    DWORD PTR [eax],edi
   14cf3:	jne    0x14d15
   14cf5:	mov    edx,DWORD PTR [edi+0x8]
   14cf8:	cmp    edx,DWORD PTR ds:0x786c0
   14cfe:	jne    0x14d07
   14d00:	mov    edx,DWORD PTR [edi+0x4]
   14d03:	mov    DWORD PTR [eax],edx
   14d05:	jmp    0x14d15
   14d07:	push   esi
   14d08:	call   0x1104c
   14d0d:	mov    ecx,DWORD PTR [ebp-0x8]
   14d10:	mov    DWORD PTR [ecx],eax
   14d12:	mov    ecx,DWORD PTR [ebp-0x4]
   14d15:	mov    eax,DWORD PTR [ecx+0x4]
   14d18:	mov    DWORD PTR [ebp-0x8],eax
   14d1b:	cmp    DWORD PTR [eax+0x8],edi
   14d1e:	jne    0x14d3e
   14d20:	mov    ecx,DWORD PTR [edi]
   14d22:	cmp    ecx,DWORD PTR ds:0x786c0
   14d28:	jne    0x14d32
   14d2a:	mov    ecx,DWORD PTR [edi+0x4]
   14d2d:	mov    DWORD PTR [eax+0x8],ecx
   14d30:	jmp    0x14d3e
   14d32:	push   esi
   14d33:	call   0x1102a
   14d38:	mov    ecx,DWORD PTR [ebp-0x8]
   14d3b:	mov    DWORD PTR [ecx+0x8],eax
   14d3e:	xor    edi,edi
   14d40:	inc    edi
   14d41:	cmp    DWORD PTR [ebx+0x1c],edi
   14d44:	jne    0x14e5b
   14d4a:	jmp    0x14e09
   14d4f:	cmp    DWORD PTR [esi+0x1c],edi
   14d52:	jne    0x14e58
   14d58:	mov    eax,DWORD PTR [esi+0x4]
   14d5b:	cmp    esi,DWORD PTR [eax]
   14d5d:	jne    0x14dd4
   14d5f:	mov    eax,DWORD PTR [eax+0x8]
   14d62:	cmp    DWORD PTR [eax+0x1c],0x0
   14d66:	jne    0x14d80
   14d68:	mov    DWORD PTR [eax+0x1c],edi
   14d6b:	mov    eax,DWORD PTR [esi+0x4]
   14d6e:	and    DWORD PTR [eax+0x1c],0x0
   14d72:	push   DWORD PTR [esi+0x4]
   14d75:	call   0x130ba
   14d7a:	mov    eax,DWORD PTR [esi+0x4]
   14d7d:	mov    eax,DWORD PTR [eax+0x8]
   14d80:	mov    ecx,DWORD PTR [eax]
   14d82:	cmp    DWORD PTR [ecx+0x1c],edi
   14d85:	jne    0x14d8f
   14d87:	mov    ecx,DWORD PTR [eax+0x8]
   14d8a:	cmp    DWORD PTR [ecx+0x1c],edi
   14d8d:	je     0x14e02
   14d8f:	mov    ecx,DWORD PTR [eax+0x8]
   14d92:	cmp    DWORD PTR [ecx+0x1c],edi
   14d95:	jne    0x14daf
   14d97:	mov    ecx,DWORD PTR [eax]
   14d99:	mov    DWORD PTR [ecx+0x1c],edi
   14d9c:	mov    ecx,DWORD PTR [ebp-0x4]
   14d9f:	and    DWORD PTR [eax+0x1c],0x0
   14da3:	push   eax
   14da4:	call   0x13108
   14da9:	mov    eax,DWORD PTR [esi+0x4]
   14dac:	mov    eax,DWORD PTR [eax+0x8]
   14daf:	mov    ecx,DWORD PTR [esi+0x4]
   14db2:	mov    ecx,DWORD PTR [ecx+0x1c]
   14db5:	mov    DWORD PTR [eax+0x1c],ecx
   14db8:	mov    ecx,DWORD PTR [esi+0x4]
   14dbb:	mov    DWORD PTR [ecx+0x1c],edi
   14dbe:	mov    eax,DWORD PTR [eax+0x8]
   14dc1:	mov    ecx,DWORD PTR [ebp-0x4]
   14dc4:	mov    DWORD PTR [eax+0x1c],edi
   14dc7:	push   DWORD PTR [esi+0x4]
   14dca:	call   0x130ba
   14dcf:	jmp    0x14e58
   14dd4:	mov    eax,DWORD PTR [eax]
   14dd6:	cmp    DWORD PTR [eax+0x1c],0x0
   14dda:	jne    0x14df3
   14ddc:	mov    DWORD PTR [eax+0x1c],edi
   14ddf:	mov    eax,DWORD PTR [esi+0x4]
   14de2:	and    DWORD PTR [eax+0x1c],0x0
   14de6:	push   DWORD PTR [esi+0x4]
   14de9:	call   0x13108
   14dee:	mov    eax,DWORD PTR [esi+0x4]
   14df1:	mov    eax,DWORD PTR [eax]
   14df3:	mov    ecx,DWORD PTR [eax+0x8]
   14df6:	cmp    DWORD PTR [ecx+0x1c],edi
   14df9:	jne    0x14e1a
   14dfb:	mov    ecx,DWORD PTR [eax]
   14dfd:	cmp    DWORD PTR [ecx+0x1c],edi
   14e00:	jne    0x14e1a
   14e02:	and    DWORD PTR [eax+0x1c],0x0
   14e06:	mov    esi,DWORD PTR [esi+0x4]
   14e09:	mov    ecx,DWORD PTR [ebp-0x4]
   14e0c:	mov    eax,DWORD PTR [ecx+0x4]
   14e0f:	cmp    esi,DWORD PTR [eax+0x4]
   14e12:	jne    0x14d4f
   14e18:	jmp    0x14e58
   14e1a:	mov    ecx,DWORD PTR [eax]
   14e1c:	cmp    DWORD PTR [ecx+0x1c],edi
   14e1f:	jne    0x14e39
   14e21:	mov    ecx,DWORD PTR [eax+0x8]
   14e24:	mov    DWORD PTR [ecx+0x1c],edi
   14e27:	mov    ecx,DWORD PTR [ebp-0x4]
   14e2a:	and    DWORD PTR [eax+0x1c],0x0
   14e2e:	push   eax
   14e2f:	call   0x130ba
   14e34:	mov    eax,DWORD PTR [esi+0x4]
   14e37:	mov    eax,DWORD PTR [eax]
   14e39:	mov    ecx,DWORD PTR [esi+0x4]
   14e3c:	mov    ecx,DWORD PTR [ecx+0x1c]
   14e3f:	mov    DWORD PTR [eax+0x1c],ecx
   14e42:	mov    ecx,DWORD PTR [esi+0x4]
   14e45:	mov    DWORD PTR [ecx+0x1c],edi
   14e48:	mov    eax,DWORD PTR [eax]
   14e4a:	mov    ecx,DWORD PTR [ebp-0x4]
   14e4d:	mov    DWORD PTR [eax+0x1c],edi
   14e50:	push   DWORD PTR [esi+0x4]
   14e53:	call   0x13108
   14e58:	mov    DWORD PTR [esi+0x1c],edi
   14e5b:	lea    eax,[ebx+0xc]
   14e5e:	push   eax
   14e5f:	call   0x13960
   14e64:	push   ebx
   14e65:	call   0x11d22
   14e6a:	mov    eax,DWORD PTR [ebp-0x4]
   14e6d:	dec    DWORD PTR [eax+0xc]
   14e70:	mov    eax,DWORD PTR [ebp+0x8]
   14e73:	pop    ecx
   14e74:	mov    ecx,DWORD PTR [ebp+0xc]
   14e77:	pop    edi
   14e78:	pop    esi
   14e79:	mov    DWORD PTR [eax],ecx
   14e7b:	pop    ebx
   14e7c:	leave  
   14e7d:	ret    0x8
   14e80:	int3   
   14e81:	int3   
   14e82:	int3   
   14e83:	int3   
   14e84:	int3   
   14e85:	int3   
   14e86:	mov    edi,edi
   14e88:	push   ebp
   14e89:	mov    ebp,esp
   14e8b:	push   ebx
   14e8c:	push   esi
   14e8d:	push   edi
   14e8e:	mov    edi,DWORD PTR [ebp+0x8]
   14e91:	mov    ebx,ecx
   14e93:	mov    esi,edi
   14e95:	cmp    edi,DWORD PTR ds:0x786c0
   14e9b:	je     0x14ec3
   14e9d:	push   DWORD PTR [esi+0x8]
   14ea0:	mov    ecx,ebx
   14ea2:	call   0x14e86
   14ea7:	mov    esi,DWORD PTR [esi]
   14ea9:	lea    eax,[edi+0xc]
   14eac:	push   eax
   14ead:	call   0x13960
   14eb2:	push   edi
   14eb3:	call   0x11d22
   14eb8:	pop    ecx
   14eb9:	mov    edi,esi
   14ebb:	cmp    esi,DWORD PTR ds:0x786c0
   14ec1:	jne    0x14e9d
   14ec3:	pop    edi
   14ec4:	pop    esi
   14ec5:	pop    ebx
   14ec6:	pop    ebp
   14ec7:	ret    0x4
   14eca:	int3   
   14ecb:	int3   
   14ecc:	int3   
   14ecd:	int3   
   14ece:	int3   
   14ecf:	int3   
   14ed0:	mov    edi,edi
   14ed2:	push   esi
   14ed3:	push   edi
   14ed4:	push   0x1
   14ed6:	xor    edi,edi
   14ed8:	push   edi
   14ed9:	mov    esi,ecx
   14edb:	call   0x143b8
   14ee0:	cmp    DWORD PTR ds:0x786c8,edi
   14ee6:	jne    0x14efd
   14ee8:	mov    ecx,eax
   14eea:	mov    DWORD PTR ds:0x786c8,ecx
   14ef0:	mov    DWORD PTR [ecx],edi
   14ef2:	mov    ecx,DWORD PTR ds:0x786c8
   14ef8:	xor    eax,eax
   14efa:	mov    DWORD PTR [ecx+0x8],edi
   14efd:	inc    DWORD PTR ds:0x78878
   14f03:	cmp    eax,edi
   14f05:	je     0x14f0e
   14f07:	push   eax
   14f08:	call   0x11d22
   14f0d:	pop    ecx
   14f0e:	push   edi
   14f0f:	push   DWORD PTR ds:0x786c8
   14f15:	mov    ecx,esi
   14f17:	call   0x143b8
   14f1c:	mov    DWORD PTR [esi+0xc],edi
   14f1f:	mov    DWORD PTR [esi+0x4],eax
   14f22:	mov    DWORD PTR [eax],eax
   14f24:	mov    esi,DWORD PTR [esi+0x4]
   14f27:	pop    edi
   14f28:	mov    DWORD PTR [esi+0x8],esi
   14f2b:	pop    esi
   14f2c:	ret    
   14f2d:	int3   
   14f2e:	int3   
   14f2f:	int3   
   14f30:	int3   
   14f31:	int3   
   14f32:	mov    edi,edi
   14f34:	push   ebp
   14f35:	mov    ebp,esp
   14f37:	push   ecx
   14f38:	push   DWORD PTR [ebp-0x4]
   14f3b:	push   DWORD PTR [ebp+0x10]
   14f3e:	push   DWORD PTR [ebp+0xc]
   14f41:	push   DWORD PTR [ebp+0x8]
   14f44:	call   0x14562
   14f49:	add    esp,0x10
   14f4c:	leave  
   14f4d:	ret    
   14f4e:	int3   
   14f4f:	int3   
   14f50:	int3   
   14f51:	int3   
   14f52:	int3   
   14f53:	int3   
   14f54:	mov    edi,edi
   14f56:	push   ebp
   14f57:	mov    ebp,esp
   14f59:	push   ebx
   14f5a:	mov    ebx,DWORD PTR [ebp+0x8]
   14f5d:	mov    eax,DWORD PTR [ebx+0x4]
   14f60:	push   esi
   14f61:	push   edi
   14f62:	mov    esi,ecx
   14f64:	mov    edi,DWORD PTR [esi+0x4]
   14f67:	add    eax,0x4
   14f6a:	push   edi
   14f6b:	push   DWORD PTR [eax]
   14f6d:	call   0x144f2
   14f72:	mov    DWORD PTR [edi+0x4],eax
   14f75:	mov    eax,DWORD PTR [ebx+0xc]
   14f78:	mov    edi,DWORD PTR [esi+0x4]
   14f7b:	mov    DWORD PTR [esi+0xc],eax
   14f7e:	mov    eax,DWORD PTR [edi+0x4]
   14f81:	cmp    eax,DWORD PTR ds:0x786b4
   14f87:	je     0x14fa1
   14f89:	push   eax
   14f8a:	call   0x10e4e
   14f8f:	mov    DWORD PTR [edi],eax
   14f91:	mov    esi,DWORD PTR [esi+0x4]
   14f94:	push   DWORD PTR [esi+0x4]
   14f97:	call   0x10e2c
   14f9c:	mov    DWORD PTR [esi+0x8],eax
   14f9f:	jmp    0x14fa9
   14fa1:	mov    DWORD PTR [edi],edi
   14fa3:	mov    esi,DWORD PTR [esi+0x4]
   14fa6:	mov    DWORD PTR [esi+0x8],esi
   14fa9:	pop    edi
   14faa:	pop    esi
   14fab:	pop    ebx
   14fac:	pop    ebp
   14fad:	ret    0x4
   14fb0:	int3   
   14fb1:	int3   
   14fb2:	int3   
   14fb3:	int3   
   14fb4:	int3   
   14fb5:	int3   
   14fb6:	mov    edi,edi
   14fb8:	push   ebp
   14fb9:	mov    ebp,esp
   14fbb:	push   ecx
   14fbc:	push   ebx
   14fbd:	push   esi
   14fbe:	push   edi
   14fbf:	xor    edi,edi
   14fc1:	push   edi
   14fc2:	push   edi
   14fc3:	push   edi
   14fc4:	mov    esi,ecx
   14fc6:	mov    eax,DWORD PTR [esi+0x10]
   14fc9:	push   edi
   14fca:	push   eax
   14fcb:	xor    ebx,ebx
   14fcd:	call   0x119ea
   14fd2:	call   eax
   14fd4:	test   eax,eax
   14fd6:	jge    0x14fdc
   14fd8:	xor    eax,eax
   14fda:	jmp    0x15004
   14fdc:	lea    eax,[ebp+0x8]
   14fdf:	push   eax
   14fe0:	lea    eax,[ebp-0x4]
   14fe3:	push   eax
   14fe4:	mov    ecx,esi
   14fe6:	call   0x13bb6
   14feb:	mov    eax,DWORD PTR [ebp-0x4]
   14fee:	cmp    eax,DWORD PTR [esi+0x4]
   14ff1:	je     0x14ff6
   14ff3:	mov    ebx,DWORD PTR [eax+0x10]
   14ff6:	mov    esi,DWORD PTR [esi+0x10]
   14ff9:	push   edi
   14ffa:	push   esi
   14ffb:	call   0x11a14
   15000:	call   eax
   15002:	mov    eax,ebx
   15004:	pop    edi
   15005:	pop    esi
   15006:	pop    ebx
   15007:	leave  
   15008:	ret    0x4
   1500b:	int3   
   1500c:	int3   
   1500d:	int3   
   1500e:	int3   
   1500f:	int3   
   15010:	push   0x10
   15012:	push   0x77798
   15017:	call   0x1dcf4
   1501c:	xor    ebx,ebx
   1501e:	push   ebx
   1501f:	push   ebx
   15020:	push   ebx
   15021:	push   ebx
   15022:	push   0x77b58
   15027:	call   0x119ea
   1502c:	call   eax
   1502e:	cmp    eax,ebx
   15030:	jl     0x150ee
   15036:	mov    DWORD PTR [ebp-0x4],ebx
   15039:	push   0xffffffff
   1503b:	push   0x1e108
   15040:	lea    ecx,[ebp-0x20]
   15043:	call   0x12b44
   15048:	mov    esi,DWORD PTR [ebp+0x8]
   1504b:	push   esi
   1504c:	lea    eax,[ebp+0x8]
   1504f:	push   eax
   15050:	mov    ecx,DWORD PTR ds:0x77b28
   15056:	call   0x1458c
   1505b:	mov    eax,ds:0x77b28
   15060:	mov    eax,DWORD PTR [eax+0x4]
   15063:	mov    ecx,DWORD PTR [ebp+0x8]
   15066:	cmp    ecx,eax
   15068:	je     0x15076
   1506a:	add    ecx,0x14
   1506d:	push   ecx
   1506e:	lea    ecx,[ebp-0x20]
   15071:	call   0x12a28
   15076:	mov    edx,DWORD PTR [esi+0x4]
   15079:	mov    eax,DWORD PTR [ebp-0x1c]
   1507c:	lea    ecx,[eax+edx*1+0x2]
   15080:	mov    eax,DWORD PTR [ebp+0xc]
   15083:	cmp    ecx,DWORD PTR [eax]
   15085:	jbe    0x15092
   15087:	mov    DWORD PTR [eax],ecx
   15089:	mov    DWORD PTR [eax+0x8],0x2
   15090:	jmp    0x150b5
   15092:	mov    DWORD PTR [eax+0x8],ebx
   15095:	mov    esi,DWORD PTR [esi]
   15097:	lea    edi,[eax+0xc]
   1509a:	mov    cl,BYTE PTR [esi]
   1509c:	mov    BYTE PTR [edi],cl
   1509e:	inc    esi
   1509f:	inc    edi
   150a0:	cmp    cl,bl
   150a2:	jne    0x1509a
   150a4:	mov    esi,DWORD PTR [ebp-0x20]
   150a7:	lea    eax,[edx+eax*1+0xd]
   150ab:	mov    cl,BYTE PTR [esi]
   150ad:	mov    BYTE PTR [eax],cl
   150af:	inc    esi
   150b0:	inc    eax
   150b1:	cmp    cl,bl
   150b3:	jne    0x150ab
   150b5:	push   DWORD PTR [ebp-0x20]
   150b8:	call   0x11d22
   150bd:	pop    ecx
   150be:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   150c5:	jmp    0x150e1
   150c7:	xor    eax,eax
   150c9:	inc    eax
   150ca:	ret    
   150cb:	mov    esp,DWORD PTR [ebp-0x18]
   150ce:	mov    eax,DWORD PTR [ebp+0xc]
   150d1:	mov    DWORD PTR [eax+0x8],0x4
   150d8:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   150df:	xor    ebx,ebx
   150e1:	push   ebx
   150e2:	push   0x77b58
   150e7:	call   0x11a14
   150ec:	call   eax
   150ee:	call   0x1dd39
   150f3:	ret    0x8
   150f6:	int3   
   150f7:	int3   
   150f8:	int3   
   150f9:	int3   
   150fa:	int3   
   150fb:	int3   
   150fc:	push   0xc
   150fe:	push   0x777b8
   15103:	call   0x1dcf4
   15108:	xor    edi,edi
   1510a:	push   edi
   1510b:	push   edi
   1510c:	push   edi
   1510d:	push   edi
   1510e:	push   0x77b58
   15113:	call   0x119ea
   15118:	call   eax
   1511a:	cmp    eax,edi
   1511c:	jl     0x151cc
   15122:	mov    DWORD PTR [ebp-0x4],edi
   15125:	lea    eax,[ebp+0x8]
   15128:	push   eax
   15129:	lea    eax,[ebp-0x1c]
   1512c:	push   eax
   1512d:	mov    esi,DWORD PTR ds:0x77bb4
   15133:	mov    ecx,esi
   15135:	call   0x13cb0
   1513a:	mov    esi,DWORD PTR [esi+0x4]
   1513d:	mov    ecx,DWORD PTR [ebp-0x1c]
   15140:	cmp    ecx,esi
   15142:	jne    0x15150
   15144:	mov    eax,DWORD PTR [ebp+0xc]
   15147:	mov    DWORD PTR [eax+0x8],0x1
   1514e:	jmp    0x1519c
   15150:	mov    eax,DWORD PTR [ecx+0x10]
   15153:	cmp    eax,edi
   15155:	jne    0x1515b
   15157:	xor    edx,edx
   15159:	jmp    0x1515e
   1515b:	mov    edx,DWORD PTR [eax+0x8]
   1515e:	mov    eax,DWORD PTR [ebp+0xc]
   15161:	cmp    edx,DWORD PTR [eax]
   15163:	jbe    0x15170
   15165:	mov    DWORD PTR [eax],edx
   15167:	mov    DWORD PTR [eax+0x8],0x2
   1516e:	jmp    0x1519c
   15170:	mov    DWORD PTR [eax+0x8],edi
   15173:	mov    edx,DWORD PTR [ecx+0x10]
   15176:	cmp    edx,edi
   15178:	jne    0x1517e
   1517a:	xor    edx,edx
   1517c:	jmp    0x15181
   1517e:	mov    edx,DWORD PTR [edx+0x8]
   15181:	mov    ecx,DWORD PTR [ecx+0x10]
   15184:	cmp    ecx,edi
   15186:	jne    0x1518c
   15188:	xor    ecx,ecx
   1518a:	jmp    0x1518e
   1518c:	mov    ecx,DWORD PTR [ecx]
   1518e:	push   edx
   1518f:	push   ecx
   15190:	add    eax,0xc
   15193:	push   eax
   15194:	call   0x1dcce
   15199:	add    esp,0xc
   1519c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   151a3:	jmp    0x151bf
   151a5:	xor    eax,eax
   151a7:	inc    eax
   151a8:	ret    
   151a9:	mov    esp,DWORD PTR [ebp-0x18]
   151ac:	mov    eax,DWORD PTR [ebp+0xc]
   151af:	mov    DWORD PTR [eax+0x8],0x4
   151b6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   151bd:	xor    edi,edi
   151bf:	push   edi
   151c0:	push   0x77b58
   151c5:	call   0x11a14
   151ca:	call   eax
   151cc:	call   0x1dd39
   151d1:	ret    0x8
   151d4:	int3   
   151d5:	int3   
   151d6:	int3   
   151d7:	int3   
   151d8:	int3   
   151d9:	int3   
   151da:	mov    edi,edi
   151dc:	push   ebp
   151dd:	mov    ebp,esp
   151df:	push   ebx
   151e0:	push   esi
   151e1:	push   DWORD PTR [ebp+0x8]
   151e4:	mov    esi,ecx
   151e6:	lea    eax,[ebp+0x8]
   151e9:	push   eax
   151ea:	lea    ecx,[esi+0x4]
   151ed:	xor    bl,bl
   151ef:	call   0x13d12
   151f4:	mov    eax,DWORD PTR [ebp+0x8]
   151f7:	cmp    eax,DWORD PTR [esi+0x8]
   151fa:	je     0x1520a
   151fc:	mov    ecx,DWORD PTR [ebp+0xc]
   151ff:	add    eax,0x18
   15202:	push   eax
   15203:	call   0x12ab8
   15208:	inc    bl
   1520a:	pop    esi
   1520b:	mov    al,bl
   1520d:	pop    ebx
   1520e:	pop    ebp
   1520f:	ret    0x8
   15212:	int3   
   15213:	int3   
   15214:	int3   
   15215:	int3   
   15216:	int3   
   15217:	int3   
   15218:	mov    edi,edi
   1521a:	push   ebp
   1521b:	mov    ebp,esp
   1521d:	push   ecx
   1521e:	push   esi
   1521f:	mov    esi,ecx
   15221:	mov    eax,DWORD PTR [esi+0x4]
   15224:	mov    ecx,DWORD PTR [eax]
   15226:	push   eax
   15227:	push   ecx
   15228:	lea    eax,[ebp-0x4]
   1522b:	push   eax
   1522c:	mov    ecx,esi
   1522e:	call   0x14670
   15233:	push   DWORD PTR [esi+0x4]
   15236:	call   0x11d22
   1523b:	xor    eax,eax
   1523d:	mov    DWORD PTR [esi+0x4],eax
   15240:	mov    DWORD PTR [esi+0xc],eax
   15243:	dec    DWORD PTR ds:0x78870
   15249:	pop    ecx
   1524a:	pop    esi
   1524b:	jne    0x15263
   1524d:	mov    ecx,DWORD PTR ds:0x786b4
   15253:	mov    ds:0x786b4,eax
   15258:	cmp    ecx,eax
   1525a:	je     0x15263
   1525c:	push   ecx
   1525d:	call   0x11d22
   15262:	pop    ecx
   15263:	leave  
   15264:	ret    
   15265:	int3   
   15266:	int3   
   15267:	int3   
   15268:	int3   
   15269:	int3   
   1526a:	mov    edi,edi
   1526c:	push   ebp
   1526d:	mov    ebp,esp
   1526f:	push   ecx
   15270:	push   ecx
   15271:	push   DWORD PTR [ebp+0x8]
   15274:	lea    eax,[ebp-0x8]
   15277:	push   eax
   15278:	call   0x13fe4
   1527d:	and    DWORD PTR [ebp+0x8],0x0
   15281:	lea    eax,[ebp+0x8]
   15284:	push   eax
   15285:	push   DWORD PTR [ebp-0x4]
   15288:	push   DWORD PTR [ebp-0x8]
   1528b:	call   0x14f32
   15290:	mov    eax,DWORD PTR [ebp+0x8]
   15293:	add    esp,0xc
   15296:	leave  
   15297:	ret    0x4
   1529a:	int3   
   1529b:	int3   
   1529c:	int3   
   1529d:	int3   
   1529e:	int3   
   1529f:	int3   
   152a0:	mov    edi,edi
   152a2:	push   ebp
   152a3:	mov    ebp,esp
   152a5:	push   ecx
   152a6:	push   ebx
   152a7:	push   esi
   152a8:	push   edi
   152a9:	mov    edi,ecx
   152ab:	mov    eax,DWORD PTR [edi+0x4]
   152ae:	mov    esi,DWORD PTR [eax+0x4]
   152b1:	mov    ebx,eax
   152b3:	mov    eax,ds:0x786b4
   152b8:	mov    dl,0x1
   152ba:	cmp    esi,eax
   152bc:	je     0x152da
   152be:	mov    ecx,DWORD PTR [ebp+0xc]
   152c1:	mov    ecx,DWORD PTR [ecx]
   152c3:	cmp    ecx,DWORD PTR [esi+0xc]
   152c6:	mov    ebx,esi
   152c8:	setb   dl
   152cb:	test   dl,dl
   152cd:	je     0x152d3
   152cf:	mov    esi,DWORD PTR [esi]
   152d1:	jmp    0x152d6
   152d3:	mov    esi,DWORD PTR [esi+0x8]
   152d6:	cmp    esi,eax
   152d8:	jne    0x152c3
   152da:	cmp    BYTE PTR [edi+0x8],0x0
   152de:	je     0x152fb
   152e0:	push   DWORD PTR [ebp+0xc]
   152e3:	push   ebx
   152e4:	push   esi
   152e5:	lea    eax,[ebp+0xc]
   152e8:	push   eax
   152e9:	mov    ecx,edi
   152eb:	call   0x14922
   152f0:	mov    ecx,DWORD PTR [eax]
   152f2:	mov    eax,DWORD PTR [ebp+0x8]
   152f5:	mov    BYTE PTR [eax+0x4],0x1
   152f9:	jmp    0x1532a
   152fb:	mov    ecx,ebx
   152fd:	mov    DWORD PTR [ebp-0x4],ecx
   15300:	test   dl,dl
   15302:	je     0x15316
   15304:	mov    eax,DWORD PTR [edi+0x4]
   15307:	cmp    ebx,DWORD PTR [eax]
   15309:	je     0x152e0
   1530b:	lea    ecx,[ebp-0x4]
   1530e:	call   0x12e50
   15313:	mov    ecx,DWORD PTR [ebp-0x4]
   15316:	mov    edx,DWORD PTR [ecx+0xc]
   15319:	mov    eax,DWORD PTR [ebp+0xc]
   1531c:	cmp    edx,DWORD PTR [eax]
   1531e:	jae    0x15323
   15320:	push   eax
   15321:	jmp    0x152e3
   15323:	mov    eax,DWORD PTR [ebp+0x8]
   15326:	mov    BYTE PTR [eax+0x4],0x0
   1532a:	pop    edi
   1532b:	pop    esi
   1532c:	mov    DWORD PTR [eax],ecx
   1532e:	pop    ebx
   1532f:	leave  
   15330:	ret    0x8
   15333:	int3   
   15334:	int3   
   15335:	int3   
   15336:	int3   
   15337:	int3   
   15338:	mov    edi,edi
   1533a:	push   ebp
   1533b:	mov    ebp,esp
   1533d:	push   ecx
   1533e:	push   ebx
   1533f:	push   esi
   15340:	push   edi
   15341:	mov    edi,ecx
   15343:	mov    eax,DWORD PTR [edi+0x4]
   15346:	mov    esi,DWORD PTR [eax+0x4]
   15349:	mov    ebx,eax
   1534b:	mov    eax,ds:0x786b0
   15350:	mov    dl,0x1
   15352:	cmp    esi,eax
   15354:	je     0x15372
   15356:	mov    ecx,DWORD PTR [ebp+0xc]
   15359:	mov    ecx,DWORD PTR [ecx]
   1535b:	cmp    ecx,DWORD PTR [esi+0xc]
   1535e:	mov    ebx,esi
   15360:	setb   dl
   15363:	test   dl,dl
   15365:	je     0x1536b
   15367:	mov    esi,DWORD PTR [esi]
   15369:	jmp    0x1536e
   1536b:	mov    esi,DWORD PTR [esi+0x8]
   1536e:	cmp    esi,eax
   15370:	jne    0x1535b
   15372:	cmp    BYTE PTR [edi+0x8],0x0
   15376:	je     0x15393
   15378:	push   DWORD PTR [ebp+0xc]
   1537b:	push   ebx
   1537c:	push   esi
   1537d:	lea    eax,[ebp+0xc]
   15380:	push   eax
   15381:	mov    ecx,edi
   15383:	call   0x14ad4
   15388:	mov    ecx,DWORD PTR [eax]
   1538a:	mov    eax,DWORD PTR [ebp+0x8]
   1538d:	mov    BYTE PTR [eax+0x4],0x1
   15391:	jmp    0x153c2
   15393:	mov    ecx,ebx
   15395:	mov    DWORD PTR [ebp-0x4],ecx
   15398:	test   dl,dl
   1539a:	je     0x153ae
   1539c:	mov    eax,DWORD PTR [edi+0x4]
   1539f:	cmp    ebx,DWORD PTR [eax]
   153a1:	je     0x15378
   153a3:	lea    ecx,[ebp-0x4]
   153a6:	call   0x10eb4
   153ab:	mov    ecx,DWORD PTR [ebp-0x4]
   153ae:	mov    edx,DWORD PTR [ecx+0xc]
   153b1:	mov    eax,DWORD PTR [ebp+0xc]
   153b4:	cmp    edx,DWORD PTR [eax]
   153b6:	jae    0x153bb
   153b8:	push   eax
   153b9:	jmp    0x1537b
   153bb:	mov    eax,DWORD PTR [ebp+0x8]
   153be:	mov    BYTE PTR [eax+0x4],0x0
   153c2:	pop    edi
   153c3:	pop    esi
   153c4:	mov    DWORD PTR [eax],ecx
   153c6:	pop    ebx
   153c7:	leave  
   153c8:	ret    0x8
   153cb:	int3   
   153cc:	int3   
   153cd:	int3   
   153ce:	int3   
   153cf:	int3   
   153d0:	mov    edi,edi
   153d2:	push   ebp
   153d3:	mov    ebp,esp
   153d5:	push   ecx
   153d6:	push   esi
   153d7:	mov    esi,ecx
   153d9:	cmp    DWORD PTR [esi+0xc],0x0
   153dd:	mov    ecx,DWORD PTR [ebp+0xc]
   153e0:	je     0x1541a
   153e2:	mov    eax,DWORD PTR [esi+0x4]
   153e5:	cmp    ecx,DWORD PTR [eax]
   153e7:	jne    0x1541a
   153e9:	cmp    DWORD PTR [ebp+0x10],eax
   153ec:	jne    0x1541a
   153ee:	push   DWORD PTR [eax+0x4]
   153f1:	mov    ecx,esi
   153f3:	call   0x14e86
   153f8:	mov    ecx,DWORD PTR ds:0x786c0
   153fe:	mov    eax,DWORD PTR [esi+0x4]
   15401:	mov    DWORD PTR [eax+0x4],ecx
   15404:	mov    eax,DWORD PTR [esi+0x4]
   15407:	and    DWORD PTR [esi+0xc],0x0
   1540b:	mov    DWORD PTR [eax],eax
   1540d:	mov    eax,DWORD PTR [esi+0x4]
   15410:	mov    DWORD PTR [eax+0x8],eax
   15413:	mov    eax,DWORD PTR [esi+0x4]
   15416:	mov    ecx,DWORD PTR [eax]
   15418:	jmp    0x1543f
   1541a:	cmp    ecx,DWORD PTR [ebp+0x10]
   1541d:	je     0x1543f
   1541f:	push   edi
   15420:	mov    edi,ecx
   15422:	lea    ecx,[ebp+0xc]
   15425:	call   0x11172
   1542a:	push   edi
   1542b:	lea    eax,[ebp-0x4]
   1542e:	push   eax
   1542f:	mov    ecx,esi
   15431:	call   0x14c24
   15436:	mov    ecx,DWORD PTR [ebp+0xc]
   15439:	cmp    ecx,DWORD PTR [ebp+0x10]
   1543c:	jne    0x15420
   1543e:	pop    edi
   1543f:	mov    eax,DWORD PTR [ebp+0x8]
   15442:	mov    DWORD PTR [eax],ecx
   15444:	pop    esi
   15445:	leave  
   15446:	ret    0xc
   15449:	int3   
   1544a:	int3   
   1544b:	int3   
   1544c:	int3   
   1544d:	int3   
   1544e:	mov    edi,edi
   15450:	push   ebp
   15451:	mov    ebp,esp
   15453:	push   ecx
   15454:	push   ecx
   15455:	push   ebx
   15456:	push   esi
   15457:	mov    DWORD PTR [ebp-0x4],ecx
   1545a:	push   edi
   1545b:	mov    edi,DWORD PTR [ebp+0xc]
   1545e:	lea    ecx,[ebp+0xc]
   15461:	call   0x12e1a
   15466:	mov    esi,DWORD PTR [edi]
   15468:	mov    eax,ds:0x786b8
   1546d:	mov    ebx,edi
   1546f:	mov    DWORD PTR [ebp-0x8],esi
   15472:	cmp    esi,eax
   15474:	jne    0x15492
   15476:	mov    esi,DWORD PTR [edi+0x8]
   15479:	mov    eax,DWORD PTR [ebx+0x4]
   1547c:	mov    ecx,DWORD PTR [ebp-0x4]
   1547f:	mov    DWORD PTR [esi+0x4],eax
   15482:	mov    eax,DWORD PTR [ecx+0x4]
   15485:	cmp    DWORD PTR [eax+0x4],edi
   15488:	jne    0x15507
   1548a:	mov    DWORD PTR [eax+0x4],esi
   1548d:	jmp    0x15515
   15492:	mov    ecx,DWORD PTR [edi+0x8]
   15495:	cmp    ecx,eax
   15497:	je     0x15479
   15499:	push   ecx
   1549a:	call   0x10e92
   1549f:	mov    ebx,eax
   154a1:	mov    esi,DWORD PTR [ebx+0x8]
   154a4:	cmp    ebx,edi
   154a6:	je     0x15479
   154a8:	mov    eax,DWORD PTR [ebp-0x8]
   154ab:	mov    DWORD PTR [eax+0x4],ebx
   154ae:	mov    eax,DWORD PTR [edi]
   154b0:	mov    DWORD PTR [ebx],eax
   154b2:	cmp    ebx,DWORD PTR [edi+0x8]
   154b5:	jne    0x154bc
   154b7:	mov    DWORD PTR [esi+0x4],ebx
   154ba:	jmp    0x154d3
   154bc:	mov    eax,DWORD PTR [ebx+0x4]
   154bf:	mov    DWORD PTR [esi+0x4],eax
   154c2:	mov    eax,DWORD PTR [ebx+0x4]
   154c5:	mov    DWORD PTR [eax],esi
   154c7:	mov    eax,DWORD PTR [edi+0x8]
   154ca:	mov    DWORD PTR [ebx+0x8],eax
   154cd:	mov    eax,DWORD PTR [edi+0x8]
   154d0:	mov    DWORD PTR [eax+0x4],ebx
   154d3:	mov    eax,DWORD PTR [ebp-0x4]
   154d6:	mov    eax,DWORD PTR [eax+0x4]
   154d9:	cmp    DWORD PTR [eax+0x4],edi
   154dc:	jne    0x154e3
   154de:	mov    DWORD PTR [eax+0x4],ebx
   154e1:	jmp    0x154f1
   154e3:	mov    eax,DWORD PTR [edi+0x4]
   154e6:	cmp    DWORD PTR [eax],edi
   154e8:	jne    0x154ee
   154ea:	mov    DWORD PTR [eax],ebx
   154ec:	jmp    0x154f1
   154ee:	mov    DWORD PTR [eax+0x8],ebx
   154f1:	mov    eax,DWORD PTR [edi+0x4]
   154f4:	mov    DWORD PTR [ebx+0x4],eax
   154f7:	mov    eax,DWORD PTR [ebx+0x60]
   154fa:	mov    ecx,DWORD PTR [edi+0x60]
   154fd:	mov    DWORD PTR [ebx+0x60],ecx
   15500:	mov    DWORD PTR [edi+0x60],eax
   15503:	mov    ebx,edi
   15505:	jmp    0x15568
   15507:	mov    eax,DWORD PTR [edi+0x4]
   1550a:	cmp    DWORD PTR [eax],edi
   1550c:	jne    0x15512
   1550e:	mov    DWORD PTR [eax],esi
   15510:	jmp    0x15515
   15512:	mov    DWORD PTR [eax+0x8],esi
   15515:	mov    eax,DWORD PTR [ecx+0x4]
   15518:	mov    DWORD PTR [ebp-0x8],eax
   1551b:	cmp    DWORD PTR [eax],edi
   1551d:	jne    0x1553f
   1551f:	mov    edx,DWORD PTR [edi+0x8]
   15522:	cmp    edx,DWORD PTR ds:0x786b8
   15528:	jne    0x15531
   1552a:	mov    edx,DWORD PTR [edi+0x4]
   1552d:	mov    DWORD PTR [eax],edx
   1552f:	jmp    0x1553f
   15531:	push   esi
   15532:	call   0x10e92
   15537:	mov    ecx,DWORD PTR [ebp-0x8]
   1553a:	mov    DWORD PTR [ecx],eax
   1553c:	mov    ecx,DWORD PTR [ebp-0x4]
   1553f:	mov    eax,DWORD PTR [ecx+0x4]
   15542:	mov    DWORD PTR [ebp-0x8],eax
   15545:	cmp    DWORD PTR [eax+0x8],edi
   15548:	jne    0x15568
   1554a:	mov    ecx,DWORD PTR [edi]
   1554c:	cmp    ecx,DWORD PTR ds:0x786b8
   15552:	jne    0x1555c
   15554:	mov    ecx,DWORD PTR [edi+0x4]
   15557:	mov    DWORD PTR [eax+0x8],ecx
   1555a:	jmp    0x15568
   1555c:	push   esi
   1555d:	call   0x10e70
   15562:	mov    ecx,DWORD PTR [ebp-0x8]
   15565:	mov    DWORD PTR [ecx+0x8],eax
   15568:	xor    edi,edi
   1556a:	inc    edi
   1556b:	cmp    DWORD PTR [ebx+0x60],edi
   1556e:	jne    0x15685
   15574:	jmp    0x15633
   15579:	cmp    DWORD PTR [esi+0x60],edi
   1557c:	jne    0x15682
   15582:	mov    eax,DWORD PTR [esi+0x4]
   15585:	cmp    esi,DWORD PTR [eax]
   15587:	jne    0x155fe
   15589:	mov    eax,DWORD PTR [eax+0x8]
   1558c:	cmp    DWORD PTR [eax+0x60],0x0
   15590:	jne    0x155aa
   15592:	mov    DWORD PTR [eax+0x60],edi
   15595:	mov    eax,DWORD PTR [esi+0x4]
   15598:	and    DWORD PTR [eax+0x60],0x0
   1559c:	push   DWORD PTR [esi+0x4]
   1559f:	call   0x12fa4
   155a4:	mov    eax,DWORD PTR [esi+0x4]
   155a7:	mov    eax,DWORD PTR [eax+0x8]
   155aa:	mov    ecx,DWORD PTR [eax]
   155ac:	cmp    DWORD PTR [ecx+0x60],edi
   155af:	jne    0x155b9
   155b1:	mov    ecx,DWORD PTR [eax+0x8]
   155b4:	cmp    DWORD PTR [ecx+0x60],edi
   155b7:	je     0x1562c
   155b9:	mov    ecx,DWORD PTR [eax+0x8]
   155bc:	cmp    DWORD PTR [ecx+0x60],edi
   155bf:	jne    0x155d9
   155c1:	mov    ecx,DWORD PTR [eax]
   155c3:	mov    DWORD PTR [ecx+0x60],edi
   155c6:	mov    ecx,DWORD PTR [ebp-0x4]
   155c9:	and    DWORD PTR [eax+0x60],0x0
   155cd:	push   eax
   155ce:	call   0x12ff2
   155d3:	mov    eax,DWORD PTR [esi+0x4]
   155d6:	mov    eax,DWORD PTR [eax+0x8]
   155d9:	mov    ecx,DWORD PTR [esi+0x4]
   155dc:	mov    ecx,DWORD PTR [ecx+0x60]
   155df:	mov    DWORD PTR [eax+0x60],ecx
   155e2:	mov    ecx,DWORD PTR [esi+0x4]
   155e5:	mov    DWORD PTR [ecx+0x60],edi
   155e8:	mov    eax,DWORD PTR [eax+0x8]
   155eb:	mov    ecx,DWORD PTR [ebp-0x4]
   155ee:	mov    DWORD PTR [eax+0x60],edi
   155f1:	push   DWORD PTR [esi+0x4]
   155f4:	call   0x12fa4
   155f9:	jmp    0x15682
   155fe:	mov    eax,DWORD PTR [eax]
   15600:	cmp    DWORD PTR [eax+0x60],0x0
   15604:	jne    0x1561d
   15606:	mov    DWORD PTR [eax+0x60],edi
   15609:	mov    eax,DWORD PTR [esi+0x4]
   1560c:	and    DWORD PTR [eax+0x60],0x0
   15610:	push   DWORD PTR [esi+0x4]
   15613:	call   0x12ff2
   15618:	mov    eax,DWORD PTR [esi+0x4]
   1561b:	mov    eax,DWORD PTR [eax]
   1561d:	mov    ecx,DWORD PTR [eax+0x8]
   15620:	cmp    DWORD PTR [ecx+0x60],edi
   15623:	jne    0x15644
   15625:	mov    ecx,DWORD PTR [eax]
   15627:	cmp    DWORD PTR [ecx+0x60],edi
   1562a:	jne    0x15644
   1562c:	and    DWORD PTR [eax+0x60],0x0
   15630:	mov    esi,DWORD PTR [esi+0x4]
   15633:	mov    ecx,DWORD PTR [ebp-0x4]
   15636:	mov    eax,DWORD PTR [ecx+0x4]
   15639:	cmp    esi,DWORD PTR [eax+0x4]
   1563c:	jne    0x15579
   15642:	jmp    0x15682
   15644:	mov    ecx,DWORD PTR [eax]
   15646:	cmp    DWORD PTR [ecx+0x60],edi
   15649:	jne    0x15663
   1564b:	mov    ecx,DWORD PTR [eax+0x8]
   1564e:	mov    DWORD PTR [ecx+0x60],edi
   15651:	mov    ecx,DWORD PTR [ebp-0x4]
   15654:	and    DWORD PTR [eax+0x60],0x0
   15658:	push   eax
   15659:	call   0x12fa4
   1565e:	mov    eax,DWORD PTR [esi+0x4]
   15661:	mov    eax,DWORD PTR [eax]
   15663:	mov    ecx,DWORD PTR [esi+0x4]
   15666:	mov    ecx,DWORD PTR [ecx+0x60]
   15669:	mov    DWORD PTR [eax+0x60],ecx
   1566c:	mov    ecx,DWORD PTR [esi+0x4]
   1566f:	mov    DWORD PTR [ecx+0x60],edi
   15672:	mov    eax,DWORD PTR [eax]
   15674:	mov    ecx,DWORD PTR [ebp-0x4]
   15677:	mov    DWORD PTR [eax+0x60],edi
   1567a:	push   DWORD PTR [esi+0x4]
   1567d:	call   0x12ff2
   15682:	mov    DWORD PTR [esi+0x60],edi
   15685:	lea    eax,[ebx+0x10]
   15688:	push   eax
   15689:	call   0x14468
   1568e:	push   ebx
   1568f:	call   0x11d22
   15694:	mov    eax,DWORD PTR [ebp-0x4]
   15697:	dec    DWORD PTR [eax+0xc]
   1569a:	mov    eax,DWORD PTR [ebp+0x8]
   1569d:	pop    ecx
   1569e:	mov    ecx,DWORD PTR [ebp+0xc]
   156a1:	pop    edi
   156a2:	pop    esi
   156a3:	mov    DWORD PTR [eax],ecx
   156a5:	pop    ebx
   156a6:	leave  
   156a7:	ret    0x8
   156aa:	int3   
   156ab:	int3   
   156ac:	int3   
   156ad:	int3   
   156ae:	int3   
   156af:	int3   
   156b0:	mov    edi,edi
   156b2:	push   ebp
   156b3:	mov    ebp,esp
   156b5:	push   ebx
   156b6:	push   esi
   156b7:	push   edi
   156b8:	mov    edi,DWORD PTR [ebp+0x8]
   156bb:	mov    ebx,ecx
   156bd:	mov    esi,edi
   156bf:	cmp    edi,DWORD PTR ds:0x786b8
   156c5:	je     0x156ed
   156c7:	push   DWORD PTR [esi+0x8]
   156ca:	mov    ecx,ebx
   156cc:	call   0x156b0
   156d1:	mov    esi,DWORD PTR [esi]
   156d3:	lea    eax,[edi+0x10]
   156d6:	push   eax
   156d7:	call   0x14468
   156dc:	push   edi
   156dd:	call   0x11d22
   156e2:	pop    ecx
   156e3:	mov    edi,esi
   156e5:	cmp    esi,DWORD PTR ds:0x786b8
   156eb:	jne    0x156c7
   156ed:	pop    edi
   156ee:	pop    esi
   156ef:	pop    ebx
   156f0:	pop    ebp
   156f1:	ret    0x4
   156f4:	int3   
   156f5:	int3   
   156f6:	int3   
   156f7:	int3   
   156f8:	int3   
   156f9:	int3   
   156fa:	mov    edi,edi
   156fc:	push   ebp
   156fd:	mov    ebp,esp
   156ff:	push   ebx
   15700:	push   esi
   15701:	mov    esi,DWORD PTR [ebp+0x10]
   15704:	push   edi
   15705:	push   0x0
   15707:	push   esi
   15708:	mov    edi,ecx
   1570a:	call   0x143b8
   1570f:	push   DWORD PTR [ebp+0x14]
   15712:	mov    ebx,eax
   15714:	mov    eax,ds:0x786b8
   15719:	mov    DWORD PTR [ebx],eax
   1571b:	mov    eax,ds:0x786b8
   15720:	mov    DWORD PTR [ebx+0x8],eax
   15723:	lea    eax,[ebx+0x10]
   15726:	push   eax
   15727:	call   0x1442c
   1572c:	inc    DWORD PTR [edi+0xc]
   1572f:	cmp    esi,DWORD PTR [edi+0x4]
   15732:	je     0x1575c
   15734:	mov    eax,DWORD PTR [ebp+0xc]
   15737:	cmp    eax,DWORD PTR ds:0x786b8
   1573d:	jne    0x1575c
   1573f:	lea    eax,[esi+0x10]
   15742:	push   eax
   15743:	push   DWORD PTR [ebp+0x14]
   15746:	call   0x199e0
   1574b:	test   al,al
   1574d:	jne    0x1575c
   1574f:	mov    DWORD PTR [esi+0x8],ebx
   15752:	mov    eax,DWORD PTR [edi+0x4]
   15755:	cmp    esi,DWORD PTR [eax+0x8]
   15758:	jne    0x15776
   1575a:	jmp    0x1576b
   1575c:	mov    DWORD PTR [esi],ebx
   1575e:	mov    eax,DWORD PTR [edi+0x4]
   15761:	cmp    esi,eax
   15763:	jne    0x15770
   15765:	mov    DWORD PTR [eax+0x4],ebx
   15768:	mov    eax,DWORD PTR [edi+0x4]
   1576b:	mov    DWORD PTR [eax+0x8],ebx
   1576e:	jmp    0x15776
   15770:	cmp    esi,DWORD PTR [eax]
   15772:	jne    0x15776
   15774:	mov    DWORD PTR [eax],ebx
   15776:	mov    eax,DWORD PTR [edi+0x4]
   15779:	mov    esi,ebx
   1577b:	cmp    ebx,DWORD PTR [eax+0x4]
   1577e:	je     0x15832
   15784:	mov    eax,DWORD PTR [esi+0x4]
   15787:	xor    edx,edx
   15789:	cmp    DWORD PTR [eax+0x60],edx
   1578c:	jne    0x15832
   15792:	mov    ecx,DWORD PTR [eax+0x4]
   15795:	cmp    eax,DWORD PTR [ecx]
   15797:	jne    0x157d3
   15799:	mov    ecx,DWORD PTR [ecx+0x8]
   1579c:	cmp    DWORD PTR [ecx+0x60],edx
   1579f:	je     0x157da
   157a1:	cmp    esi,DWORD PTR [eax+0x8]
   157a4:	jne    0x157b0
   157a6:	mov    esi,eax
   157a8:	push   esi
   157a9:	mov    ecx,edi
   157ab:	call   0x12fa4
   157b0:	mov    eax,DWORD PTR [esi+0x4]
   157b3:	mov    DWORD PTR [eax+0x60],0x1
   157ba:	mov    eax,DWORD PTR [esi+0x4]
   157bd:	mov    eax,DWORD PTR [eax+0x4]
   157c0:	and    DWORD PTR [eax+0x60],0x0
   157c4:	mov    eax,DWORD PTR [esi+0x4]
   157c7:	push   DWORD PTR [eax+0x4]
   157ca:	mov    ecx,edi
   157cc:	call   0x12ff2
   157d1:	jmp    0x15826
   157d3:	mov    ecx,DWORD PTR [ecx]
   157d5:	cmp    DWORD PTR [ecx+0x60],edx
   157d8:	jne    0x157f7
   157da:	mov    edx,eax
   157dc:	xor    eax,eax
   157de:	inc    eax
   157df:	mov    DWORD PTR [edx+0x60],eax
   157e2:	mov    DWORD PTR [ecx+0x60],eax
   157e5:	mov    eax,DWORD PTR [esi+0x4]
   157e8:	mov    eax,DWORD PTR [eax+0x4]
   157eb:	and    DWORD PTR [eax+0x60],0x0
   157ef:	mov    eax,DWORD PTR [esi+0x4]
   157f2:	mov    esi,DWORD PTR [eax+0x4]
   157f5:	jmp    0x15826
   157f7:	cmp    esi,DWORD PTR [eax]
   157f9:	jne    0x15805
   157fb:	mov    esi,eax
   157fd:	push   esi
   157fe:	mov    ecx,edi
   15800:	call   0x12ff2
   15805:	mov    eax,DWORD PTR [esi+0x4]
   15808:	mov    DWORD PTR [eax+0x60],0x1
   1580f:	mov    eax,DWORD PTR [esi+0x4]
   15812:	mov    eax,DWORD PTR [eax+0x4]
   15815:	and    DWORD PTR [eax+0x60],0x0
   15819:	mov    eax,DWORD PTR [esi+0x4]
   1581c:	push   DWORD PTR [eax+0x4]
   1581f:	mov    ecx,edi
   15821:	call   0x12fa4
   15826:	mov    eax,DWORD PTR [edi+0x4]
   15829:	cmp    esi,DWORD PTR [eax+0x4]
   1582c:	jne    0x15784
   15832:	mov    eax,DWORD PTR [edi+0x4]
   15835:	mov    eax,DWORD PTR [eax+0x4]
   15838:	pop    edi
   15839:	mov    DWORD PTR [eax+0x60],0x1
   15840:	mov    eax,DWORD PTR [ebp+0x8]
   15843:	pop    esi
   15844:	mov    DWORD PTR [eax],ebx
   15846:	pop    ebx
   15847:	pop    ebp
   15848:	ret    0x10
   1584b:	int3   
   1584c:	int3   
   1584d:	int3   
   1584e:	int3   
   1584f:	int3   
   15850:	mov    edi,edi
   15852:	push   ebp
   15853:	mov    ebp,esp
   15855:	push   ecx
   15856:	push   ecx
   15857:	push   ebx
   15858:	push   esi
   15859:	mov    DWORD PTR [ebp-0x4],ecx
   1585c:	push   edi
   1585d:	mov    edi,DWORD PTR [ebp+0xc]
   15860:	lea    ecx,[ebp+0xc]
   15863:	call   0x1373e
   15868:	mov    esi,DWORD PTR [edi]
   1586a:	mov    eax,ds:0x786bc
   1586f:	mov    ebx,edi
   15871:	mov    DWORD PTR [ebp-0x8],esi
   15874:	cmp    esi,eax
   15876:	jne    0x15894
   15878:	mov    esi,DWORD PTR [edi+0x8]
   1587b:	mov    eax,DWORD PTR [ebx+0x4]
   1587e:	mov    ecx,DWORD PTR [ebp-0x4]
   15881:	mov    DWORD PTR [esi+0x4],eax
   15884:	mov    eax,DWORD PTR [ecx+0x4]
   15887:	cmp    DWORD PTR [eax+0x4],edi
   1588a:	jne    0x15909
   1588c:	mov    DWORD PTR [eax+0x4],esi
   1588f:	jmp    0x15917
   15894:	mov    ecx,DWORD PTR [edi+0x8]
   15897:	cmp    ecx,eax
   15899:	je     0x1587b
   1589b:	push   ecx
   1589c:	call   0x12c6a
   158a1:	mov    ebx,eax
   158a3:	mov    esi,DWORD PTR [ebx+0x8]
   158a6:	cmp    ebx,edi
   158a8:	je     0x1587b
   158aa:	mov    eax,DWORD PTR [ebp-0x8]
   158ad:	mov    DWORD PTR [eax+0x4],ebx
   158b0:	mov    eax,DWORD PTR [edi]
   158b2:	mov    DWORD PTR [ebx],eax
   158b4:	cmp    ebx,DWORD PTR [edi+0x8]
   158b7:	jne    0x158be
   158b9:	mov    DWORD PTR [esi+0x4],ebx
   158bc:	jmp    0x158d5
   158be:	mov    eax,DWORD PTR [ebx+0x4]
   158c1:	mov    DWORD PTR [esi+0x4],eax
   158c4:	mov    eax,DWORD PTR [ebx+0x4]
   158c7:	mov    DWORD PTR [eax],esi
   158c9:	mov    eax,DWORD PTR [edi+0x8]
   158cc:	mov    DWORD PTR [ebx+0x8],eax
   158cf:	mov    eax,DWORD PTR [edi+0x8]
   158d2:	mov    DWORD PTR [eax+0x4],ebx
   158d5:	mov    eax,DWORD PTR [ebp-0x4]
   158d8:	mov    eax,DWORD PTR [eax+0x4]
   158db:	cmp    DWORD PTR [eax+0x4],edi
   158de:	jne    0x158e5
   158e0:	mov    DWORD PTR [eax+0x4],ebx
   158e3:	jmp    0x158f3
   158e5:	mov    eax,DWORD PTR [edi+0x4]
   158e8:	cmp    DWORD PTR [eax],edi
   158ea:	jne    0x158f0
   158ec:	mov    DWORD PTR [eax],ebx
   158ee:	jmp    0x158f3
   158f0:	mov    DWORD PTR [eax+0x8],ebx
   158f3:	mov    eax,DWORD PTR [edi+0x4]
   158f6:	mov    DWORD PTR [ebx+0x4],eax
   158f9:	mov    eax,DWORD PTR [ebx+0x58]
   158fc:	mov    ecx,DWORD PTR [edi+0x58]
   158ff:	mov    DWORD PTR [ebx+0x58],ecx
   15902:	mov    DWORD PTR [edi+0x58],eax
   15905:	mov    ebx,edi
   15907:	jmp    0x1596a
   15909:	mov    eax,DWORD PTR [edi+0x4]
   1590c:	cmp    DWORD PTR [eax],edi
   1590e:	jne    0x15914
   15910:	mov    DWORD PTR [eax],esi
   15912:	jmp    0x15917
   15914:	mov    DWORD PTR [eax+0x8],esi
   15917:	mov    eax,DWORD PTR [ecx+0x4]
   1591a:	mov    DWORD PTR [ebp-0x8],eax
   1591d:	cmp    DWORD PTR [eax],edi
   1591f:	jne    0x15941
   15921:	mov    edx,DWORD PTR [edi+0x8]
   15924:	cmp    edx,DWORD PTR ds:0x786bc
   1592a:	jne    0x15933
   1592c:	mov    edx,DWORD PTR [edi+0x4]
   1592f:	mov    DWORD PTR [eax],edx
   15931:	jmp    0x15941
   15933:	push   esi
   15934:	call   0x12c6a
   15939:	mov    ecx,DWORD PTR [ebp-0x8]
   1593c:	mov    DWORD PTR [ecx],eax
   1593e:	mov    ecx,DWORD PTR [ebp-0x4]
   15941:	mov    eax,DWORD PTR [ecx+0x4]
   15944:	mov    DWORD PTR [ebp-0x8],eax
   15947:	cmp    DWORD PTR [eax+0x8],edi
   1594a:	jne    0x1596a
   1594c:	mov    ecx,DWORD PTR [edi]
   1594e:	cmp    ecx,DWORD PTR ds:0x786bc
   15954:	jne    0x1595e
   15956:	mov    ecx,DWORD PTR [edi+0x4]
   15959:	mov    DWORD PTR [eax+0x8],ecx
   1595c:	jmp    0x1596a
   1595e:	push   esi
   1595f:	call   0x10f78
   15964:	mov    ecx,DWORD PTR [ebp-0x8]
   15967:	mov    DWORD PTR [ecx+0x8],eax
   1596a:	xor    edi,edi
   1596c:	inc    edi
   1596d:	cmp    DWORD PTR [ebx+0x58],edi
   15970:	jne    0x15a87
   15976:	jmp    0x15a35
   1597b:	cmp    DWORD PTR [esi+0x58],edi
   1597e:	jne    0x15a84
   15984:	mov    eax,DWORD PTR [esi+0x4]
   15987:	cmp    esi,DWORD PTR [eax]
   15989:	jne    0x15a00
   1598b:	mov    eax,DWORD PTR [eax+0x8]
   1598e:	cmp    DWORD PTR [eax+0x58],0x0
   15992:	jne    0x159ac
   15994:	mov    DWORD PTR [eax+0x58],edi
   15997:	mov    eax,DWORD PTR [esi+0x4]
   1599a:	and    DWORD PTR [eax+0x58],0x0
   1599e:	push   DWORD PTR [esi+0x4]
   159a1:	call   0x10f2a
   159a6:	mov    eax,DWORD PTR [esi+0x4]
   159a9:	mov    eax,DWORD PTR [eax+0x8]
   159ac:	mov    ecx,DWORD PTR [eax]
   159ae:	cmp    DWORD PTR [ecx+0x58],edi
   159b1:	jne    0x159bb
   159b3:	mov    ecx,DWORD PTR [eax+0x8]
   159b6:	cmp    DWORD PTR [ecx+0x58],edi
   159b9:	je     0x15a2e
   159bb:	mov    ecx,DWORD PTR [eax+0x8]
   159be:	cmp    DWORD PTR [ecx+0x58],edi
   159c1:	jne    0x159db
   159c3:	mov    ecx,DWORD PTR [eax]
   159c5:	mov    DWORD PTR [ecx+0x58],edi
   159c8:	mov    ecx,DWORD PTR [ebp-0x4]
   159cb:	and    DWORD PTR [eax+0x58],0x0
   159cf:	push   eax
   159d0:	call   0x10f9a
   159d5:	mov    eax,DWORD PTR [esi+0x4]
   159d8:	mov    eax,DWORD PTR [eax+0x8]
   159db:	mov    ecx,DWORD PTR [esi+0x4]
   159de:	mov    ecx,DWORD PTR [ecx+0x58]
   159e1:	mov    DWORD PTR [eax+0x58],ecx
   159e4:	mov    ecx,DWORD PTR [esi+0x4]
   159e7:	mov    DWORD PTR [ecx+0x58],edi
   159ea:	mov    eax,DWORD PTR [eax+0x8]
   159ed:	mov    ecx,DWORD PTR [ebp-0x4]
   159f0:	mov    DWORD PTR [eax+0x58],edi
   159f3:	push   DWORD PTR [esi+0x4]
   159f6:	call   0x10f2a
   159fb:	jmp    0x15a84
   15a00:	mov    eax,DWORD PTR [eax]
   15a02:	cmp    DWORD PTR [eax+0x58],0x0
   15a06:	jne    0x15a1f
   15a08:	mov    DWORD PTR [eax+0x58],edi
   15a0b:	mov    eax,DWORD PTR [esi+0x4]
   15a0e:	and    DWORD PTR [eax+0x58],0x0
   15a12:	push   DWORD PTR [esi+0x4]
   15a15:	call   0x10f9a
   15a1a:	mov    eax,DWORD PTR [esi+0x4]
   15a1d:	mov    eax,DWORD PTR [eax]
   15a1f:	mov    ecx,DWORD PTR [eax+0x8]
   15a22:	cmp    DWORD PTR [ecx+0x58],edi
   15a25:	jne    0x15a46
   15a27:	mov    ecx,DWORD PTR [eax]
   15a29:	cmp    DWORD PTR [ecx+0x58],edi
   15a2c:	jne    0x15a46
   15a2e:	and    DWORD PTR [eax+0x58],0x0
   15a32:	mov    esi,DWORD PTR [esi+0x4]
   15a35:	mov    ecx,DWORD PTR [ebp-0x4]
   15a38:	mov    eax,DWORD PTR [ecx+0x4]
   15a3b:	cmp    esi,DWORD PTR [eax+0x4]
   15a3e:	jne    0x1597b
   15a44:	jmp    0x15a84
   15a46:	mov    ecx,DWORD PTR [eax]
   15a48:	cmp    DWORD PTR [ecx+0x58],edi
   15a4b:	jne    0x15a65
   15a4d:	mov    ecx,DWORD PTR [eax+0x8]
   15a50:	mov    DWORD PTR [ecx+0x58],edi
   15a53:	mov    ecx,DWORD PTR [ebp-0x4]
   15a56:	and    DWORD PTR [eax+0x58],0x0
   15a5a:	push   eax
   15a5b:	call   0x10f2a
   15a60:	mov    eax,DWORD PTR [esi+0x4]
   15a63:	mov    eax,DWORD PTR [eax]
   15a65:	mov    ecx,DWORD PTR [esi+0x4]
   15a68:	mov    ecx,DWORD PTR [ecx+0x58]
   15a6b:	mov    DWORD PTR [eax+0x58],ecx
   15a6e:	mov    ecx,DWORD PTR [esi+0x4]
   15a71:	mov    DWORD PTR [ecx+0x58],edi
   15a74:	mov    eax,DWORD PTR [eax]
   15a76:	mov    ecx,DWORD PTR [ebp-0x4]
   15a79:	mov    DWORD PTR [eax+0x58],edi
   15a7c:	push   DWORD PTR [esi+0x4]
   15a7f:	call   0x10f9a
   15a84:	mov    DWORD PTR [esi+0x58],edi
   15a87:	lea    eax,[ebx+0x10]
   15a8a:	push   eax
   15a8b:	call   0x14468
   15a90:	push   ebx
   15a91:	call   0x11d22
   15a96:	mov    eax,DWORD PTR [ebp-0x4]
   15a99:	dec    DWORD PTR [eax+0xc]
   15a9c:	mov    eax,DWORD PTR [ebp+0x8]
   15a9f:	pop    ecx
   15aa0:	mov    ecx,DWORD PTR [ebp+0xc]
   15aa3:	pop    edi
   15aa4:	pop    esi
   15aa5:	mov    DWORD PTR [eax],ecx
   15aa7:	pop    ebx
   15aa8:	leave  
   15aa9:	ret    0x8
   15aac:	int3   
   15aad:	int3   
   15aae:	int3   
   15aaf:	int3   
   15ab0:	int3   
   15ab1:	int3   
   15ab2:	mov    edi,edi
   15ab4:	push   ebp
   15ab5:	mov    ebp,esp
   15ab7:	push   ebx
   15ab8:	push   esi
   15ab9:	push   edi
   15aba:	mov    edi,DWORD PTR [ebp+0x8]
   15abd:	mov    ebx,ecx
   15abf:	mov    esi,edi
   15ac1:	cmp    edi,DWORD PTR ds:0x786bc
   15ac7:	je     0x15aef
   15ac9:	push   DWORD PTR [esi+0x8]
   15acc:	mov    ecx,ebx
   15ace:	call   0x15ab2
   15ad3:	mov    esi,DWORD PTR [esi]
   15ad5:	lea    eax,[edi+0x10]
   15ad8:	push   eax
   15ad9:	call   0x14468
   15ade:	push   edi
   15adf:	call   0x11d22
   15ae4:	pop    ecx
   15ae5:	mov    edi,esi
   15ae7:	cmp    esi,DWORD PTR ds:0x786bc
   15aed:	jne    0x15ac9
   15aef:	pop    edi
   15af0:	pop    esi
   15af1:	pop    ebx
   15af2:	pop    ebp
   15af3:	ret    0x4
   15af6:	int3   
   15af7:	int3   
   15af8:	int3   
   15af9:	int3   
   15afa:	int3   
   15afb:	int3   
   15afc:	mov    edi,edi
   15afe:	push   ebp
   15aff:	mov    ebp,esp
   15b01:	push   ebx
   15b02:	push   esi
   15b03:	mov    esi,DWORD PTR [ebp+0x10]
   15b06:	push   edi
   15b07:	push   0x0
   15b09:	push   esi
   15b0a:	mov    edi,ecx
   15b0c:	call   0x14370
   15b11:	push   DWORD PTR [ebp+0x14]
   15b14:	mov    ebx,eax
   15b16:	mov    eax,ds:0x786bc
   15b1b:	mov    DWORD PTR [ebx],eax
   15b1d:	mov    eax,ds:0x786bc
   15b22:	mov    DWORD PTR [ebx+0x8],eax
   15b25:	lea    eax,[ebx+0x10]
   15b28:	push   eax
   15b29:	call   0x1444a
   15b2e:	inc    DWORD PTR [edi+0xc]
   15b31:	cmp    esi,DWORD PTR [edi+0x4]
   15b34:	je     0x15b5e
   15b36:	mov    eax,DWORD PTR [ebp+0xc]
   15b39:	cmp    eax,DWORD PTR ds:0x786bc
   15b3f:	jne    0x15b5e
   15b41:	lea    eax,[esi+0x10]
   15b44:	push   eax
   15b45:	push   DWORD PTR [ebp+0x14]
   15b48:	call   0x199e0
   15b4d:	test   al,al
   15b4f:	jne    0x15b5e
   15b51:	mov    DWORD PTR [esi+0x8],ebx
   15b54:	mov    eax,DWORD PTR [edi+0x4]
   15b57:	cmp    esi,DWORD PTR [eax+0x8]
   15b5a:	jne    0x15b78
   15b5c:	jmp    0x15b6d
   15b5e:	mov    DWORD PTR [esi],ebx
   15b60:	mov    eax,DWORD PTR [edi+0x4]
   15b63:	cmp    esi,eax
   15b65:	jne    0x15b72
   15b67:	mov    DWORD PTR [eax+0x4],ebx
   15b6a:	mov    eax,DWORD PTR [edi+0x4]
   15b6d:	mov    DWORD PTR [eax+0x8],ebx
   15b70:	jmp    0x15b78
   15b72:	cmp    esi,DWORD PTR [eax]
   15b74:	jne    0x15b78
   15b76:	mov    DWORD PTR [eax],ebx
   15b78:	mov    eax,DWORD PTR [edi+0x4]
   15b7b:	mov    esi,ebx
   15b7d:	cmp    ebx,DWORD PTR [eax+0x4]
   15b80:	je     0x15c34
   15b86:	mov    eax,DWORD PTR [esi+0x4]
   15b89:	xor    edx,edx
   15b8b:	cmp    DWORD PTR [eax+0x58],edx
   15b8e:	jne    0x15c34
   15b94:	mov    ecx,DWORD PTR [eax+0x4]
   15b97:	cmp    eax,DWORD PTR [ecx]
   15b99:	jne    0x15bd5
   15b9b:	mov    ecx,DWORD PTR [ecx+0x8]
   15b9e:	cmp    DWORD PTR [ecx+0x58],edx
   15ba1:	je     0x15bdc
   15ba3:	cmp    esi,DWORD PTR [eax+0x8]
   15ba6:	jne    0x15bb2
   15ba8:	mov    esi,eax
   15baa:	push   esi
   15bab:	mov    ecx,edi
   15bad:	call   0x10f2a
   15bb2:	mov    eax,DWORD PTR [esi+0x4]
   15bb5:	mov    DWORD PTR [eax+0x58],0x1
   15bbc:	mov    eax,DWORD PTR [esi+0x4]
   15bbf:	mov    eax,DWORD PTR [eax+0x4]
   15bc2:	and    DWORD PTR [eax+0x58],0x0
   15bc6:	mov    eax,DWORD PTR [esi+0x4]
   15bc9:	push   DWORD PTR [eax+0x4]
   15bcc:	mov    ecx,edi
   15bce:	call   0x10f9a
   15bd3:	jmp    0x15c28
   15bd5:	mov    ecx,DWORD PTR [ecx]
   15bd7:	cmp    DWORD PTR [ecx+0x58],edx
   15bda:	jne    0x15bf9
   15bdc:	mov    edx,eax
   15bde:	xor    eax,eax
   15be0:	inc    eax
   15be1:	mov    DWORD PTR [edx+0x58],eax
   15be4:	mov    DWORD PTR [ecx+0x58],eax
   15be7:	mov    eax,DWORD PTR [esi+0x4]
   15bea:	mov    eax,DWORD PTR [eax+0x4]
   15bed:	and    DWORD PTR [eax+0x58],0x0
   15bf1:	mov    eax,DWORD PTR [esi+0x4]
   15bf4:	mov    esi,DWORD PTR [eax+0x4]
   15bf7:	jmp    0x15c28
   15bf9:	cmp    esi,DWORD PTR [eax]
   15bfb:	jne    0x15c07
   15bfd:	mov    esi,eax
   15bff:	push   esi
   15c00:	mov    ecx,edi
   15c02:	call   0x10f9a
   15c07:	mov    eax,DWORD PTR [esi+0x4]
   15c0a:	mov    DWORD PTR [eax+0x58],0x1
   15c11:	mov    eax,DWORD PTR [esi+0x4]
   15c14:	mov    eax,DWORD PTR [eax+0x4]
   15c17:	and    DWORD PTR [eax+0x58],0x0
   15c1b:	mov    eax,DWORD PTR [esi+0x4]
   15c1e:	push   DWORD PTR [eax+0x4]
   15c21:	mov    ecx,edi
   15c23:	call   0x10f2a
   15c28:	mov    eax,DWORD PTR [edi+0x4]
   15c2b:	cmp    esi,DWORD PTR [eax+0x4]
   15c2e:	jne    0x15b86
   15c34:	mov    eax,DWORD PTR [edi+0x4]
   15c37:	mov    eax,DWORD PTR [eax+0x4]
   15c3a:	pop    edi
   15c3b:	mov    DWORD PTR [eax+0x58],0x1
   15c42:	mov    eax,DWORD PTR [ebp+0x8]
   15c45:	pop    esi
   15c46:	mov    DWORD PTR [eax],ebx
   15c48:	pop    ebx
   15c49:	pop    ebp
   15c4a:	ret    0x10
   15c4d:	int3   
   15c4e:	int3   
   15c4f:	int3   
   15c50:	int3   
   15c51:	int3   
   15c52:	mov    edi,edi
   15c54:	push   ebp
   15c55:	mov    ebp,esp
   15c57:	push   ebx
   15c58:	push   esi
   15c59:	mov    esi,DWORD PTR [ebp+0x10]
   15c5c:	push   edi
   15c5d:	push   0x0
   15c5f:	push   esi
   15c60:	mov    edi,ecx
   15c62:	call   0x143dc
   15c67:	push   DWORD PTR [ebp+0x14]
   15c6a:	mov    ebx,eax
   15c6c:	mov    eax,ds:0x786c0
   15c71:	mov    DWORD PTR [ebx],eax
   15c73:	mov    eax,ds:0x786c0
   15c78:	mov    DWORD PTR [ebx+0x8],eax
   15c7b:	lea    eax,[ebx+0xc]
   15c7e:	push   eax
   15c7f:	call   0x14480
   15c84:	inc    DWORD PTR [edi+0xc]
   15c87:	cmp    esi,DWORD PTR [edi+0x4]
   15c8a:	je     0x15cb4
   15c8c:	mov    eax,DWORD PTR [ebp+0xc]
   15c8f:	cmp    eax,DWORD PTR ds:0x786c0
   15c95:	jne    0x15cb4
   15c97:	lea    eax,[esi+0xc]
   15c9a:	push   eax
   15c9b:	push   DWORD PTR [ebp+0x14]
   15c9e:	call   0x199e0
   15ca3:	test   al,al
   15ca5:	jne    0x15cb4
   15ca7:	mov    DWORD PTR [esi+0x8],ebx
   15caa:	mov    eax,DWORD PTR [edi+0x4]
   15cad:	cmp    esi,DWORD PTR [eax+0x8]
   15cb0:	jne    0x15cce
   15cb2:	jmp    0x15cc3
   15cb4:	mov    DWORD PTR [esi],ebx
   15cb6:	mov    eax,DWORD PTR [edi+0x4]
   15cb9:	cmp    esi,eax
   15cbb:	jne    0x15cc8
   15cbd:	mov    DWORD PTR [eax+0x4],ebx
   15cc0:	mov    eax,DWORD PTR [edi+0x4]
   15cc3:	mov    DWORD PTR [eax+0x8],ebx
   15cc6:	jmp    0x15cce
   15cc8:	cmp    esi,DWORD PTR [eax]
   15cca:	jne    0x15cce
   15ccc:	mov    DWORD PTR [eax],ebx
   15cce:	mov    eax,DWORD PTR [edi+0x4]
   15cd1:	mov    esi,ebx
   15cd3:	cmp    ebx,DWORD PTR [eax+0x4]
   15cd6:	je     0x15d8a
   15cdc:	mov    eax,DWORD PTR [esi+0x4]
   15cdf:	xor    edx,edx
   15ce1:	cmp    DWORD PTR [eax+0x1c],edx
   15ce4:	jne    0x15d8a
   15cea:	mov    ecx,DWORD PTR [eax+0x4]
   15ced:	cmp    eax,DWORD PTR [ecx]
   15cef:	jne    0x15d2b
   15cf1:	mov    ecx,DWORD PTR [ecx+0x8]
   15cf4:	cmp    DWORD PTR [ecx+0x1c],edx
   15cf7:	je     0x15d32
   15cf9:	cmp    esi,DWORD PTR [eax+0x8]
   15cfc:	jne    0x15d08
   15cfe:	mov    esi,eax
   15d00:	push   esi
   15d01:	mov    ecx,edi
   15d03:	call   0x130ba
   15d08:	mov    eax,DWORD PTR [esi+0x4]
   15d0b:	mov    DWORD PTR [eax+0x1c],0x1
   15d12:	mov    eax,DWORD PTR [esi+0x4]
   15d15:	mov    eax,DWORD PTR [eax+0x4]
   15d18:	and    DWORD PTR [eax+0x1c],0x0
   15d1c:	mov    eax,DWORD PTR [esi+0x4]
   15d1f:	push   DWORD PTR [eax+0x4]
   15d22:	mov    ecx,edi
   15d24:	call   0x13108
   15d29:	jmp    0x15d7e
   15d2b:	mov    ecx,DWORD PTR [ecx]
   15d2d:	cmp    DWORD PTR [ecx+0x1c],edx
   15d30:	jne    0x15d4f
   15d32:	mov    edx,eax
   15d34:	xor    eax,eax
   15d36:	inc    eax
   15d37:	mov    DWORD PTR [edx+0x1c],eax
   15d3a:	mov    DWORD PTR [ecx+0x1c],eax
   15d3d:	mov    eax,DWORD PTR [esi+0x4]
   15d40:	mov    eax,DWORD PTR [eax+0x4]
   15d43:	and    DWORD PTR [eax+0x1c],0x0
   15d47:	mov    eax,DWORD PTR [esi+0x4]
   15d4a:	mov    esi,DWORD PTR [eax+0x4]
   15d4d:	jmp    0x15d7e
   15d4f:	cmp    esi,DWORD PTR [eax]
   15d51:	jne    0x15d5d
   15d53:	mov    esi,eax
   15d55:	push   esi
   15d56:	mov    ecx,edi
   15d58:	call   0x13108
   15d5d:	mov    eax,DWORD PTR [esi+0x4]
   15d60:	mov    DWORD PTR [eax+0x1c],0x1
   15d67:	mov    eax,DWORD PTR [esi+0x4]
   15d6a:	mov    eax,DWORD PTR [eax+0x4]
   15d6d:	and    DWORD PTR [eax+0x1c],0x0
   15d71:	mov    eax,DWORD PTR [esi+0x4]
   15d74:	push   DWORD PTR [eax+0x4]
   15d77:	mov    ecx,edi
   15d79:	call   0x130ba
   15d7e:	mov    eax,DWORD PTR [edi+0x4]
   15d81:	cmp    esi,DWORD PTR [eax+0x4]
   15d84:	jne    0x15cdc
   15d8a:	mov    eax,DWORD PTR [edi+0x4]
   15d8d:	mov    eax,DWORD PTR [eax+0x4]
   15d90:	pop    edi
   15d91:	mov    DWORD PTR [eax+0x1c],0x1
   15d98:	mov    eax,DWORD PTR [ebp+0x8]
   15d9b:	pop    esi
   15d9c:	mov    DWORD PTR [eax],ebx
   15d9e:	pop    ebx
   15d9f:	pop    ebp
   15da0:	ret    0x10
   15da3:	int3   
   15da4:	int3   
   15da5:	int3   
   15da6:	int3   
   15da7:	int3   
   15da8:	mov    edi,edi
   15daa:	push   ebp
   15dab:	mov    ebp,esp
   15dad:	push   ecx
   15dae:	push   ecx
   15daf:	push   ebx
   15db0:	push   esi
   15db1:	mov    DWORD PTR [ebp-0x4],ecx
   15db4:	push   edi
   15db5:	mov    edi,DWORD PTR [ebp+0xc]
   15db8:	lea    ecx,[ebp+0xc]
   15dbb:	call   0x111a8
   15dc0:	mov    esi,DWORD PTR [edi]
   15dc2:	mov    eax,ds:0x786c4
   15dc7:	mov    ebx,edi
   15dc9:	mov    DWORD PTR [ebp-0x8],esi
   15dcc:	cmp    esi,eax
   15dce:	jne    0x15dec
   15dd0:	mov    esi,DWORD PTR [edi+0x8]
   15dd3:	mov    eax,DWORD PTR [ebx+0x4]
   15dd6:	mov    ecx,DWORD PTR [ebp-0x4]
   15dd9:	mov    DWORD PTR [esi+0x4],eax
   15ddc:	mov    eax,DWORD PTR [ecx+0x4]
   15ddf:	cmp    DWORD PTR [eax+0x4],edi
   15de2:	jne    0x15e61
   15de4:	mov    DWORD PTR [eax+0x4],esi
   15de7:	jmp    0x15e6f
   15dec:	mov    ecx,DWORD PTR [edi+0x8]
   15def:	cmp    ecx,eax
   15df1:	je     0x15dd3
   15df3:	push   ecx
   15df4:	call   0x110d0
   15df9:	mov    ebx,eax
   15dfb:	mov    esi,DWORD PTR [ebx+0x8]
   15dfe:	cmp    ebx,edi
   15e00:	je     0x15dd3
   15e02:	mov    eax,DWORD PTR [ebp-0x8]
   15e05:	mov    DWORD PTR [eax+0x4],ebx
   15e08:	mov    eax,DWORD PTR [edi]
   15e0a:	mov    DWORD PTR [ebx],eax
   15e0c:	cmp    ebx,DWORD PTR [edi+0x8]
   15e0f:	jne    0x15e16
   15e11:	mov    DWORD PTR [esi+0x4],ebx
   15e14:	jmp    0x15e2d
   15e16:	mov    eax,DWORD PTR [ebx+0x4]
   15e19:	mov    DWORD PTR [esi+0x4],eax
   15e1c:	mov    eax,DWORD PTR [ebx+0x4]
   15e1f:	mov    DWORD PTR [eax],esi
   15e21:	mov    eax,DWORD PTR [edi+0x8]
   15e24:	mov    DWORD PTR [ebx+0x8],eax
   15e27:	mov    eax,DWORD PTR [edi+0x8]
   15e2a:	mov    DWORD PTR [eax+0x4],ebx
   15e2d:	mov    eax,DWORD PTR [ebp-0x4]
   15e30:	mov    eax,DWORD PTR [eax+0x4]
   15e33:	cmp    DWORD PTR [eax+0x4],edi
   15e36:	jne    0x15e3d
   15e38:	mov    DWORD PTR [eax+0x4],ebx
   15e3b:	jmp    0x15e4b
   15e3d:	mov    eax,DWORD PTR [edi+0x4]
   15e40:	cmp    DWORD PTR [eax],edi
   15e42:	jne    0x15e48
   15e44:	mov    DWORD PTR [eax],ebx
   15e46:	jmp    0x15e4b
   15e48:	mov    DWORD PTR [eax+0x8],ebx
   15e4b:	mov    eax,DWORD PTR [edi+0x4]
   15e4e:	mov    DWORD PTR [ebx+0x4],eax
   15e51:	mov    eax,DWORD PTR [ebx+0x14]
   15e54:	mov    ecx,DWORD PTR [edi+0x14]
   15e57:	mov    DWORD PTR [ebx+0x14],ecx
   15e5a:	mov    DWORD PTR [edi+0x14],eax
   15e5d:	mov    ebx,edi
   15e5f:	jmp    0x15ec2
   15e61:	mov    eax,DWORD PTR [edi+0x4]
   15e64:	cmp    DWORD PTR [eax],edi
   15e66:	jne    0x15e6c
   15e68:	mov    DWORD PTR [eax],esi
   15e6a:	jmp    0x15e6f
   15e6c:	mov    DWORD PTR [eax+0x8],esi
   15e6f:	mov    eax,DWORD PTR [ecx+0x4]
   15e72:	mov    DWORD PTR [ebp-0x8],eax
   15e75:	cmp    DWORD PTR [eax],edi
   15e77:	jne    0x15e99
   15e79:	mov    edx,DWORD PTR [edi+0x8]
   15e7c:	cmp    edx,DWORD PTR ds:0x786c4
   15e82:	jne    0x15e8b
   15e84:	mov    edx,DWORD PTR [edi+0x4]
   15e87:	mov    DWORD PTR [eax],edx
   15e89:	jmp    0x15e99
   15e8b:	push   esi
   15e8c:	call   0x110d0
   15e91:	mov    ecx,DWORD PTR [ebp-0x8]
   15e94:	mov    DWORD PTR [ecx],eax
   15e96:	mov    ecx,DWORD PTR [ebp-0x4]
   15e99:	mov    eax,DWORD PTR [ecx+0x4]
   15e9c:	mov    DWORD PTR [ebp-0x8],eax
   15e9f:	cmp    DWORD PTR [eax+0x8],edi
   15ea2:	jne    0x15ec2
   15ea4:	mov    ecx,DWORD PTR [edi]
   15ea6:	cmp    ecx,DWORD PTR ds:0x786c4
   15eac:	jne    0x15eb6
   15eae:	mov    ecx,DWORD PTR [edi+0x4]
   15eb1:	mov    DWORD PTR [eax+0x8],ecx
   15eb4:	jmp    0x15ec2
   15eb6:	push   esi
   15eb7:	call   0x110ae
   15ebc:	mov    ecx,DWORD PTR [ebp-0x8]
   15ebf:	mov    DWORD PTR [ecx+0x8],eax
   15ec2:	xor    edi,edi
   15ec4:	inc    edi
   15ec5:	cmp    DWORD PTR [ebx+0x14],edi
   15ec8:	jne    0x15fdf
   15ece:	jmp    0x15f8d
   15ed3:	cmp    DWORD PTR [esi+0x14],edi
   15ed6:	jne    0x15fdc
   15edc:	mov    eax,DWORD PTR [esi+0x4]
   15edf:	cmp    esi,DWORD PTR [eax]
   15ee1:	jne    0x15f58
   15ee3:	mov    eax,DWORD PTR [eax+0x8]
   15ee6:	cmp    DWORD PTR [eax+0x14],0x0
   15eea:	jne    0x15f04
   15eec:	mov    DWORD PTR [eax+0x14],edi
   15eef:	mov    eax,DWORD PTR [esi+0x4]
   15ef2:	and    DWORD PTR [eax+0x14],0x0
   15ef6:	push   DWORD PTR [esi+0x4]
   15ef9:	call   0x13198
   15efe:	mov    eax,DWORD PTR [esi+0x4]
   15f01:	mov    eax,DWORD PTR [eax+0x8]
   15f04:	mov    ecx,DWORD PTR [eax]
   15f06:	cmp    DWORD PTR [ecx+0x14],edi
   15f09:	jne    0x15f13
   15f0b:	mov    ecx,DWORD PTR [eax+0x8]
   15f0e:	cmp    DWORD PTR [ecx+0x14],edi
   15f11:	je     0x15f86
   15f13:	mov    ecx,DWORD PTR [eax+0x8]
   15f16:	cmp    DWORD PTR [ecx+0x14],edi
   15f19:	jne    0x15f33
   15f1b:	mov    ecx,DWORD PTR [eax]
   15f1d:	mov    DWORD PTR [ecx+0x14],edi
   15f20:	mov    ecx,DWORD PTR [ebp-0x4]
   15f23:	and    DWORD PTR [eax+0x14],0x0
   15f27:	push   eax
   15f28:	call   0x131e6
   15f2d:	mov    eax,DWORD PTR [esi+0x4]
   15f30:	mov    eax,DWORD PTR [eax+0x8]
   15f33:	mov    ecx,DWORD PTR [esi+0x4]
   15f36:	mov    ecx,DWORD PTR [ecx+0x14]
   15f39:	mov    DWORD PTR [eax+0x14],ecx
   15f3c:	mov    ecx,DWORD PTR [esi+0x4]
   15f3f:	mov    DWORD PTR [ecx+0x14],edi
   15f42:	mov    eax,DWORD PTR [eax+0x8]
   15f45:	mov    ecx,DWORD PTR [ebp-0x4]
   15f48:	mov    DWORD PTR [eax+0x14],edi
   15f4b:	push   DWORD PTR [esi+0x4]
   15f4e:	call   0x13198
   15f53:	jmp    0x15fdc
   15f58:	mov    eax,DWORD PTR [eax]
   15f5a:	cmp    DWORD PTR [eax+0x14],0x0
   15f5e:	jne    0x15f77
   15f60:	mov    DWORD PTR [eax+0x14],edi
   15f63:	mov    eax,DWORD PTR [esi+0x4]
   15f66:	and    DWORD PTR [eax+0x14],0x0
   15f6a:	push   DWORD PTR [esi+0x4]
   15f6d:	call   0x131e6
   15f72:	mov    eax,DWORD PTR [esi+0x4]
   15f75:	mov    eax,DWORD PTR [eax]
   15f77:	mov    ecx,DWORD PTR [eax+0x8]
   15f7a:	cmp    DWORD PTR [ecx+0x14],edi
   15f7d:	jne    0x15f9e
   15f7f:	mov    ecx,DWORD PTR [eax]
   15f81:	cmp    DWORD PTR [ecx+0x14],edi
   15f84:	jne    0x15f9e
   15f86:	and    DWORD PTR [eax+0x14],0x0
   15f8a:	mov    esi,DWORD PTR [esi+0x4]
   15f8d:	mov    ecx,DWORD PTR [ebp-0x4]
   15f90:	mov    eax,DWORD PTR [ecx+0x4]
   15f93:	cmp    esi,DWORD PTR [eax+0x4]
   15f96:	jne    0x15ed3
   15f9c:	jmp    0x15fdc
   15f9e:	mov    ecx,DWORD PTR [eax]
   15fa0:	cmp    DWORD PTR [ecx+0x14],edi
   15fa3:	jne    0x15fbd
   15fa5:	mov    ecx,DWORD PTR [eax+0x8]
   15fa8:	mov    DWORD PTR [ecx+0x14],edi
   15fab:	mov    ecx,DWORD PTR [ebp-0x4]
   15fae:	and    DWORD PTR [eax+0x14],0x0
   15fb2:	push   eax
   15fb3:	call   0x13198
   15fb8:	mov    eax,DWORD PTR [esi+0x4]
   15fbb:	mov    eax,DWORD PTR [eax]
   15fbd:	mov    ecx,DWORD PTR [esi+0x4]
   15fc0:	mov    ecx,DWORD PTR [ecx+0x14]
   15fc3:	mov    DWORD PTR [eax+0x14],ecx
   15fc6:	mov    ecx,DWORD PTR [esi+0x4]
   15fc9:	mov    DWORD PTR [ecx+0x14],edi
   15fcc:	mov    eax,DWORD PTR [eax]
   15fce:	mov    ecx,DWORD PTR [ebp-0x4]
   15fd1:	mov    DWORD PTR [eax+0x14],edi
   15fd4:	push   DWORD PTR [esi+0x4]
   15fd7:	call   0x131e6
   15fdc:	mov    DWORD PTR [esi+0x14],edi
   15fdf:	lea    eax,[ebx+0xc]
   15fe2:	push   eax
   15fe3:	call   0x144bc
   15fe8:	push   ebx
   15fe9:	call   0x11d22
   15fee:	mov    eax,DWORD PTR [ebp-0x4]
   15ff1:	dec    DWORD PTR [eax+0xc]
   15ff4:	mov    eax,DWORD PTR [ebp+0x8]
   15ff7:	pop    ecx
   15ff8:	mov    ecx,DWORD PTR [ebp+0xc]
   15ffb:	pop    edi
   15ffc:	pop    esi
   15ffd:	mov    DWORD PTR [eax],ecx
   15fff:	pop    ebx
   16000:	leave  
   16001:	ret    0x8
   16004:	int3   
   16005:	int3   
   16006:	int3   
   16007:	int3   
   16008:	int3   
   16009:	int3   
   1600a:	mov    edi,edi
   1600c:	push   ebp
   1600d:	mov    ebp,esp
   1600f:	push   ebx
   16010:	push   esi
   16011:	push   edi
   16012:	mov    edi,DWORD PTR [ebp+0x8]
   16015:	mov    ebx,ecx
   16017:	mov    esi,edi
   16019:	cmp    edi,DWORD PTR ds:0x786c4
   1601f:	je     0x16047
   16021:	push   DWORD PTR [esi+0x8]
   16024:	mov    ecx,ebx
   16026:	call   0x1600a
   1602b:	mov    esi,DWORD PTR [esi]
   1602d:	lea    eax,[edi+0xc]
   16030:	push   eax
   16031:	call   0x144bc
   16036:	push   edi
   16037:	call   0x11d22
   1603c:	pop    ecx
   1603d:	mov    edi,esi
   1603f:	cmp    esi,DWORD PTR ds:0x786c4
   16045:	jne    0x16021
   16047:	pop    edi
   16048:	pop    esi
   16049:	pop    ebx
   1604a:	pop    ebp
   1604b:	ret    0x4
   1604e:	int3   
   1604f:	int3   
   16050:	int3   
   16051:	int3   
   16052:	int3   
   16053:	int3   
   16054:	mov    edi,edi
   16056:	push   ebp
   16057:	mov    ebp,esp
   16059:	push   ebx
   1605a:	push   esi
   1605b:	mov    esi,DWORD PTR [ebp+0x10]
   1605e:	push   edi
   1605f:	push   0x0
   16061:	push   esi
   16062:	mov    edi,ecx
   16064:	call   0x1434c
   16069:	push   DWORD PTR [ebp+0x14]
   1606c:	mov    ebx,eax
   1606e:	mov    eax,ds:0x786c4
   16073:	mov    DWORD PTR [ebx],eax
   16075:	mov    eax,ds:0x786c4
   1607a:	mov    DWORD PTR [ebx+0x8],eax
   1607d:	lea    eax,[ebx+0xc]
   16080:	push   eax
   16081:	call   0x1449e
   16086:	inc    DWORD PTR [edi+0xc]
   16089:	cmp    esi,DWORD PTR [edi+0x4]
   1608c:	je     0x160b0
   1608e:	mov    eax,DWORD PTR [ebp+0xc]
   16091:	cmp    eax,DWORD PTR ds:0x786c4
   16097:	jne    0x160b0
   16099:	mov    eax,DWORD PTR [ebp+0x14]
   1609c:	mov    eax,DWORD PTR [eax]
   1609e:	cmp    eax,DWORD PTR [esi+0xc]
   160a1:	jl     0x160b0
   160a3:	mov    DWORD PTR [esi+0x8],ebx
   160a6:	mov    eax,DWORD PTR [edi+0x4]
   160a9:	cmp    esi,DWORD PTR [eax+0x8]
   160ac:	jne    0x160ca
   160ae:	jmp    0x160bf
   160b0:	mov    DWORD PTR [esi],ebx
   160b2:	mov    eax,DWORD PTR [edi+0x4]
   160b5:	cmp    esi,eax
   160b7:	jne    0x160c4
   160b9:	mov    DWORD PTR [eax+0x4],ebx
   160bc:	mov    eax,DWORD PTR [edi+0x4]
   160bf:	mov    DWORD PTR [eax+0x8],ebx
   160c2:	jmp    0x160ca
   160c4:	cmp    esi,DWORD PTR [eax]
   160c6:	jne    0x160ca
   160c8:	mov    DWORD PTR [eax],ebx
   160ca:	mov    eax,DWORD PTR [edi+0x4]
   160cd:	mov    esi,ebx
   160cf:	cmp    ebx,DWORD PTR [eax+0x4]
   160d2:	je     0x16186
   160d8:	mov    eax,DWORD PTR [esi+0x4]
   160db:	xor    edx,edx
   160dd:	cmp    DWORD PTR [eax+0x14],edx
   160e0:	jne    0x16186
   160e6:	mov    ecx,DWORD PTR [eax+0x4]
   160e9:	cmp    eax,DWORD PTR [ecx]
   160eb:	jne    0x16127
   160ed:	mov    ecx,DWORD PTR [ecx+0x8]
   160f0:	cmp    DWORD PTR [ecx+0x14],edx
   160f3:	je     0x1612e
   160f5:	cmp    esi,DWORD PTR [eax+0x8]
   160f8:	jne    0x16104
   160fa:	mov    esi,eax
   160fc:	push   esi
   160fd:	mov    ecx,edi
   160ff:	call   0x13198
   16104:	mov    eax,DWORD PTR [esi+0x4]
   16107:	mov    DWORD PTR [eax+0x14],0x1
   1610e:	mov    eax,DWORD PTR [esi+0x4]
   16111:	mov    eax,DWORD PTR [eax+0x4]
   16114:	and    DWORD PTR [eax+0x14],0x0
   16118:	mov    eax,DWORD PTR [esi+0x4]
   1611b:	push   DWORD PTR [eax+0x4]
   1611e:	mov    ecx,edi
   16120:	call   0x131e6
   16125:	jmp    0x1617a
   16127:	mov    ecx,DWORD PTR [ecx]
   16129:	cmp    DWORD PTR [ecx+0x14],edx
   1612c:	jne    0x1614b
   1612e:	mov    edx,eax
   16130:	xor    eax,eax
   16132:	inc    eax
   16133:	mov    DWORD PTR [edx+0x14],eax
   16136:	mov    DWORD PTR [ecx+0x14],eax
   16139:	mov    eax,DWORD PTR [esi+0x4]
   1613c:	mov    eax,DWORD PTR [eax+0x4]
   1613f:	and    DWORD PTR [eax+0x14],0x0
   16143:	mov    eax,DWORD PTR [esi+0x4]
   16146:	mov    esi,DWORD PTR [eax+0x4]
   16149:	jmp    0x1617a
   1614b:	cmp    esi,DWORD PTR [eax]
   1614d:	jne    0x16159
   1614f:	mov    esi,eax
   16151:	push   esi
   16152:	mov    ecx,edi
   16154:	call   0x131e6
   16159:	mov    eax,DWORD PTR [esi+0x4]
   1615c:	mov    DWORD PTR [eax+0x14],0x1
   16163:	mov    eax,DWORD PTR [esi+0x4]
   16166:	mov    eax,DWORD PTR [eax+0x4]
   16169:	and    DWORD PTR [eax+0x14],0x0
   1616d:	mov    eax,DWORD PTR [esi+0x4]
   16170:	push   DWORD PTR [eax+0x4]
   16173:	mov    ecx,edi
   16175:	call   0x13198
   1617a:	mov    eax,DWORD PTR [edi+0x4]
   1617d:	cmp    esi,DWORD PTR [eax+0x4]
   16180:	jne    0x160d8
   16186:	mov    eax,DWORD PTR [edi+0x4]
   16189:	mov    eax,DWORD PTR [eax+0x4]
   1618c:	pop    edi
   1618d:	mov    DWORD PTR [eax+0x14],0x1
   16194:	mov    eax,DWORD PTR [ebp+0x8]
   16197:	pop    esi
   16198:	mov    DWORD PTR [eax],ebx
   1619a:	pop    ebx
   1619b:	pop    ebp
   1619c:	ret    0x10
   1619f:	int3   
   161a0:	int3   
   161a1:	int3   
   161a2:	int3   
   161a3:	int3   
   161a4:	mov    edi,edi
   161a6:	push   ebp
   161a7:	mov    ebp,esp
   161a9:	push   ebx
   161aa:	push   esi
   161ab:	mov    esi,DWORD PTR [ebp+0x10]
   161ae:	push   edi
   161af:	push   0x0
   161b1:	push   esi
   161b2:	mov    edi,ecx
   161b4:	call   0x143dc
   161b9:	push   DWORD PTR [ebp+0x14]
   161bc:	mov    ebx,eax
   161be:	mov    eax,ds:0x786cc
   161c3:	mov    DWORD PTR [ebx],eax
   161c5:	mov    eax,ds:0x786cc
   161ca:	mov    DWORD PTR [ebx+0x8],eax
   161cd:	lea    eax,[ebx+0xc]
   161d0:	push   eax
   161d1:	call   0x144d4
   161d6:	inc    DWORD PTR [edi+0xc]
   161d9:	cmp    esi,DWORD PTR [edi+0x4]
   161dc:	je     0x16206
   161de:	mov    eax,DWORD PTR [ebp+0xc]
   161e1:	cmp    eax,DWORD PTR ds:0x786cc
   161e7:	jne    0x16206
   161e9:	lea    eax,[esi+0xc]
   161ec:	push   eax
   161ed:	push   DWORD PTR [ebp+0x14]
   161f0:	call   0x19a10
   161f5:	test   al,al
   161f7:	jne    0x16206
   161f9:	mov    DWORD PTR [esi+0x8],ebx
   161fc:	mov    eax,DWORD PTR [edi+0x4]
   161ff:	cmp    esi,DWORD PTR [eax+0x8]
   16202:	jne    0x16220
   16204:	jmp    0x16215
   16206:	mov    DWORD PTR [esi],ebx
   16208:	mov    eax,DWORD PTR [edi+0x4]
   1620b:	cmp    esi,eax
   1620d:	jne    0x1621a
   1620f:	mov    DWORD PTR [eax+0x4],ebx
   16212:	mov    eax,DWORD PTR [edi+0x4]
   16215:	mov    DWORD PTR [eax+0x8],ebx
   16218:	jmp    0x16220
   1621a:	cmp    esi,DWORD PTR [eax]
   1621c:	jne    0x16220
   1621e:	mov    DWORD PTR [eax],ebx
   16220:	mov    eax,DWORD PTR [edi+0x4]
   16223:	mov    esi,ebx
   16225:	cmp    ebx,DWORD PTR [eax+0x4]
   16228:	je     0x162dc
   1622e:	mov    eax,DWORD PTR [esi+0x4]
   16231:	xor    edx,edx
   16233:	cmp    DWORD PTR [eax+0x1c],edx
   16236:	jne    0x162dc
   1623c:	mov    ecx,DWORD PTR [eax+0x4]
   1623f:	cmp    eax,DWORD PTR [ecx]
   16241:	jne    0x1627d
   16243:	mov    ecx,DWORD PTR [ecx+0x8]
   16246:	cmp    DWORD PTR [ecx+0x1c],edx
   16249:	je     0x16284
   1624b:	cmp    esi,DWORD PTR [eax+0x8]
   1624e:	jne    0x1625a
   16250:	mov    esi,eax
   16252:	push   esi
   16253:	mov    ecx,edi
   16255:	call   0x1331e
   1625a:	mov    eax,DWORD PTR [esi+0x4]
   1625d:	mov    DWORD PTR [eax+0x1c],0x1
   16264:	mov    eax,DWORD PTR [esi+0x4]
   16267:	mov    eax,DWORD PTR [eax+0x4]
   1626a:	and    DWORD PTR [eax+0x1c],0x0
   1626e:	mov    eax,DWORD PTR [esi+0x4]
   16271:	push   DWORD PTR [eax+0x4]
   16274:	mov    ecx,edi
   16276:	call   0x1336c
   1627b:	jmp    0x162d0
   1627d:	mov    ecx,DWORD PTR [ecx]
   1627f:	cmp    DWORD PTR [ecx+0x1c],edx
   16282:	jne    0x162a1
   16284:	mov    edx,eax
   16286:	xor    eax,eax
   16288:	inc    eax
   16289:	mov    DWORD PTR [edx+0x1c],eax
   1628c:	mov    DWORD PTR [ecx+0x1c],eax
   1628f:	mov    eax,DWORD PTR [esi+0x4]
   16292:	mov    eax,DWORD PTR [eax+0x4]
   16295:	and    DWORD PTR [eax+0x1c],0x0
   16299:	mov    eax,DWORD PTR [esi+0x4]
   1629c:	mov    esi,DWORD PTR [eax+0x4]
   1629f:	jmp    0x162d0
   162a1:	cmp    esi,DWORD PTR [eax]
   162a3:	jne    0x162af
   162a5:	mov    esi,eax
   162a7:	push   esi
   162a8:	mov    ecx,edi
   162aa:	call   0x1336c
   162af:	mov    eax,DWORD PTR [esi+0x4]
   162b2:	mov    DWORD PTR [eax+0x1c],0x1
   162b9:	mov    eax,DWORD PTR [esi+0x4]
   162bc:	mov    eax,DWORD PTR [eax+0x4]
   162bf:	and    DWORD PTR [eax+0x1c],0x0
   162c3:	mov    eax,DWORD PTR [esi+0x4]
   162c6:	push   DWORD PTR [eax+0x4]
   162c9:	mov    ecx,edi
   162cb:	call   0x1331e
   162d0:	mov    eax,DWORD PTR [edi+0x4]
   162d3:	cmp    esi,DWORD PTR [eax+0x4]
   162d6:	jne    0x1622e
   162dc:	mov    eax,DWORD PTR [edi+0x4]
   162df:	mov    eax,DWORD PTR [eax+0x4]
   162e2:	pop    edi
   162e3:	mov    DWORD PTR [eax+0x1c],0x1
   162ea:	mov    eax,DWORD PTR [ebp+0x8]
   162ed:	pop    esi
   162ee:	mov    DWORD PTR [eax],ebx
   162f0:	pop    ebx
   162f1:	pop    ebp
   162f2:	ret    0x10
   162f5:	int3   
   162f6:	int3   
   162f7:	int3   
   162f8:	int3   
   162f9:	int3   
   162fa:	mov    edi,edi
   162fc:	push   ebp
   162fd:	mov    ebp,esp
   162ff:	push   esi
   16300:	push   edi
   16301:	mov    edi,DWORD PTR [ebp+0x8]
   16304:	mov    al,BYTE PTR [edi+0x8]
   16307:	mov    esi,ecx
   16309:	mov    BYTE PTR [esi+0x8],al
   1630c:	call   0x148c0
   16311:	push   edi
   16312:	mov    ecx,esi
   16314:	call   0x14f54
   16319:	pop    edi
   1631a:	mov    eax,esi
   1631c:	pop    esi
   1631d:	pop    ebp
   1631e:	ret    0x4
   16321:	int3   
   16322:	int3   
   16323:	int3   
   16324:	int3   
   16325:	int3   
   16326:	mov    edi,edi
   16328:	push   ebp
   16329:	mov    ebp,esp
   1632b:	push   ecx
   1632c:	push   esi
   1632d:	mov    esi,ecx
   1632f:	cmp    esi,DWORD PTR [ebp+0x8]
   16332:	je     0x16350
   16334:	mov    eax,DWORD PTR [esi+0x4]
   16337:	mov    ecx,DWORD PTR [eax]
   16339:	push   eax
   1633a:	push   ecx
   1633b:	lea    eax,[ebp-0x4]
   1633e:	push   eax
   1633f:	mov    ecx,esi
   16341:	call   0x14670
   16346:	push   DWORD PTR [ebp+0x8]
   16349:	mov    ecx,esi
   1634b:	call   0x14f54
   16350:	mov    eax,esi
   16352:	pop    esi
   16353:	leave  
   16354:	ret    0x4
   16357:	int3   
   16358:	int3   
   16359:	int3   
   1635a:	int3   
   1635b:	int3   
   1635c:	mov    edi,edi
   1635e:	push   ebp
   1635f:	mov    ebp,esp
   16361:	push   esi
   16362:	push   edi
   16363:	xor    edi,edi
   16365:	push   edi
   16366:	push   edi
   16367:	push   edi
   16368:	mov    esi,ecx
   1636a:	mov    eax,DWORD PTR [esi+0x10]
   1636d:	push   edi
   1636e:	push   eax
   1636f:	call   0x119ea
   16374:	call   eax
   16376:	test   eax,eax
   16378:	jl     0x16391
   1637a:	lea    eax,[ebp+0x8]
   1637d:	push   eax
   1637e:	mov    ecx,esi
   16380:	call   0x14626
   16385:	mov    esi,DWORD PTR [esi+0x10]
   16388:	push   edi
   16389:	push   esi
   1638a:	call   0x11a14
   1638f:	call   eax
   16391:	pop    edi
   16392:	pop    esi
   16393:	pop    ebp
   16394:	ret    0x4
   16397:	int3   
   16398:	int3   
   16399:	int3   
   1639a:	int3   
   1639b:	int3   
   1639c:	mov    edi,edi
   1639e:	push   ebp
   1639f:	mov    ebp,esp
   163a1:	sub    esp,0x40
   163a4:	test   BYTE PTR [ebp+0x8],0x20
   163a8:	je     0x16434
   163ae:	push   ebx
   163af:	lea    ecx,[ebp-0x40]
   163b2:	call   0x13ac6
   163b7:	mov    ecx,DWORD PTR ds:0x784e8
   163bd:	lea    eax,[ebp-0x40]
   163c0:	push   eax
   163c1:	push   DWORD PTR [ebp+0xc]
   163c4:	call   0x151da
   163c9:	test   al,al
   163cb:	je     0x16430
   163cd:	mov    ecx,DWORD PTR [ebp+0x10]
   163d0:	lea    eax,[ebp-0x38]
   163d3:	push   eax
   163d4:	call   0x12a28
   163d9:	mov    ecx,DWORD PTR [ebp+0x14]
   163dc:	lea    eax,[ebp-0x30]
   163df:	push   eax
   163e0:	call   0x12a28
   163e5:	mov    ecx,DWORD PTR [ebp+0x18]
   163e8:	lea    eax,[ebp-0x28]
   163eb:	push   eax
   163ec:	call   0x12a28
   163f1:	mov    eax,DWORD PTR [ebp+0x20]
   163f4:	mov    ecx,DWORD PTR [ebp-0x20]
   163f7:	mov    DWORD PTR [eax],ecx
   163f9:	mov    ecx,DWORD PTR [ebp+0x1c]
   163fc:	lea    eax,[ebp-0x8]
   163ff:	push   eax
   16400:	call   0x12a28
   16405:	mov    eax,DWORD PTR [ebp+0x24]
   16408:	mov    ecx,DWORD PTR [ebp-0x18]
   1640b:	mov    DWORD PTR [eax],ecx
   1640d:	mov    ecx,DWORD PTR [ebp-0x14]
   16410:	mov    DWORD PTR [eax+0x4],ecx
   16413:	mov    ecx,DWORD PTR [ebp-0x10]
   16416:	mov    eax,DWORD PTR [ebp+0x28]
   16419:	mov    DWORD PTR [eax],ecx
   1641b:	mov    ecx,DWORD PTR [ebp-0xc]
   1641e:	mov    DWORD PTR [eax+0x4],ecx
   16421:	mov    bl,0x1
   16423:	lea    ecx,[ebp-0x40]
   16426:	call   0x134ec
   1642b:	mov    al,bl
   1642d:	pop    ebx
   1642e:	jmp    0x164af
   16430:	xor    bl,bl
   16432:	jmp    0x16423
   16434:	mov    ecx,DWORD PTR ds:0x784e0
   1643a:	push   esi
   1643b:	push   DWORD PTR [ebp+0xc]
   1643e:	lea    eax,[ebp+0xc]
   16441:	push   eax
   16442:	call   0x13bf8
   16447:	mov    esi,DWORD PTR [ebp+0xc]
   1644a:	mov    eax,ds:0x784e0
   1644f:	cmp    esi,DWORD PTR [eax+0x4]
   16452:	jne    0x16458
   16454:	xor    al,al
   16456:	jmp    0x164ae
   16458:	mov    ecx,DWORD PTR [ebp+0x10]
   1645b:	lea    eax,[esi+0x20]
   1645e:	push   eax
   1645f:	call   0x12a28
   16464:	mov    ecx,DWORD PTR [ebp+0x14]
   16467:	lea    eax,[esi+0x28]
   1646a:	push   eax
   1646b:	call   0x12a28
   16470:	mov    ecx,DWORD PTR [ebp+0x18]
   16473:	lea    eax,[esi+0x30]
   16476:	push   eax
   16477:	call   0x12a28
   1647c:	mov    ecx,DWORD PTR [ebp+0x1c]
   1647f:	lea    eax,[esi+0x50]
   16482:	push   eax
   16483:	call   0x12a28
   16488:	mov    eax,DWORD PTR [esi+0x38]
   1648b:	mov    ecx,DWORD PTR [ebp+0x20]
   1648e:	mov    DWORD PTR [ecx],eax
   16490:	mov    ecx,DWORD PTR [esi+0x40]
   16493:	mov    eax,DWORD PTR [ebp+0x24]
   16496:	mov    DWORD PTR [eax],ecx
   16498:	mov    ecx,DWORD PTR [esi+0x44]
   1649b:	mov    DWORD PTR [eax+0x4],ecx
   1649e:	mov    ecx,DWORD PTR [esi+0x48]
   164a1:	mov    eax,DWORD PTR [ebp+0x28]
   164a4:	mov    DWORD PTR [eax],ecx
   164a6:	mov    ecx,DWORD PTR [esi+0x4c]
   164a9:	mov    DWORD PTR [eax+0x4],ecx
   164ac:	mov    al,0x1
   164ae:	pop    esi
   164af:	leave  
   164b0:	ret    0x24
   164b3:	int3   
   164b4:	int3   
   164b5:	int3   
   164b6:	int3   
   164b7:	int3   
   164b8:	push   0x40
   164ba:	push   0x777d8
   164bf:	call   0x1dcf4
   164c4:	xor    esi,esi
   164c6:	push   esi
   164c7:	push   esi
   164c8:	push   esi
   164c9:	push   esi
   164ca:	push   0x77b58
   164cf:	call   0x119ea
   164d4:	call   eax
   164d6:	cmp    eax,esi
   164d8:	jl     0x16651
   164de:	mov    DWORD PTR [ebp-0x4],esi
   164e1:	or     edi,0xffffffff
   164e4:	push   edi
   164e5:	mov    esi,0x1e108
   164ea:	push   esi
   164eb:	lea    ecx,[ebp-0x40]
   164ee:	call   0x12b44
   164f3:	push   edi
   164f4:	push   esi
   164f5:	lea    ecx,[ebp-0x38]
   164f8:	call   0x12b44
   164fd:	push   edi
   164fe:	push   esi
   164ff:	lea    ecx,[ebp-0x30]
   16502:	call   0x12b44
   16507:	push   edi
   16508:	push   esi
   16509:	lea    ecx,[ebp-0x28]
   1650c:	call   0x12b44
   16511:	lea    eax,[ebp-0x50]
   16514:	push   eax
   16515:	lea    eax,[ebp-0x48]
   16518:	push   eax
   16519:	lea    eax,[ebp-0x1c]
   1651c:	push   eax
   1651d:	lea    eax,[ebp-0x28]
   16520:	push   eax
   16521:	lea    eax,[ebp-0x30]
   16524:	push   eax
   16525:	lea    eax,[ebp-0x38]
   16528:	push   eax
   16529:	lea    eax,[ebp-0x40]
   1652c:	push   eax
   1652d:	mov    edi,DWORD PTR [ebp+0x8]
   16530:	push   edi
   16531:	mov    esi,DWORD PTR [ebp+0xc]
   16534:	push   DWORD PTR [esi+0x4]
   16537:	call   0x1639c
   1653c:	test   al,al
   1653e:	jne    0x1654c
   16540:	mov    DWORD PTR [esi+0x8],0x1
   16547:	jmp    0x16606
   1654c:	mov    ecx,DWORD PTR [edi+0x4]
   1654f:	mov    eax,DWORD PTR [ebp-0x3c]
   16552:	lea    edx,[eax+ecx*1+0x2]
   16556:	mov    eax,DWORD PTR [ebp-0x34]
   16559:	lea    edi,[eax+edx*1+0x1]
   1655d:	mov    eax,DWORD PTR [ebp-0x2c]
   16560:	lea    eax,[eax+edi*1+0x1]
   16564:	mov    DWORD PTR [ebp-0x20],eax
   16567:	mov    ebx,DWORD PTR [ebp-0x24]
   1656a:	lea    eax,[ebx+eax*1+0x1]
   1656e:	cmp    eax,DWORD PTR [esi]
   16570:	jbe    0x16580
   16572:	mov    DWORD PTR [esi],eax
   16574:	mov    DWORD PTR [esi+0x8],0x2
   1657b:	jmp    0x16606
   16580:	and    DWORD PTR [esi+0x8],0x0
   16584:	mov    eax,DWORD PTR [ebp-0x1c]
   16587:	mov    DWORD PTR [esi+0xc],eax
   1658a:	mov    eax,DWORD PTR [ebp-0x48]
   1658d:	mov    DWORD PTR [esi+0x10],eax
   16590:	mov    eax,DWORD PTR [ebp-0x44]
   16593:	mov    DWORD PTR [esi+0x14],eax
   16596:	mov    eax,DWORD PTR [ebp-0x50]
   16599:	mov    DWORD PTR [esi+0x18],eax
   1659c:	mov    eax,DWORD PTR [ebp-0x4c]
   1659f:	mov    DWORD PTR [esi+0x1c],eax
   165a2:	mov    eax,DWORD PTR [ebp+0x8]
   165a5:	mov    eax,DWORD PTR [eax]
   165a7:	mov    DWORD PTR [ebp-0x1c],eax
   165aa:	lea    eax,[esi+0x20]
   165ad:	mov    ebx,DWORD PTR [ebp-0x1c]
   165b0:	mov    bl,BYTE PTR [ebx]
   165b2:	mov    BYTE PTR [ebp+0xb],bl
   165b5:	mov    BYTE PTR [eax],bl
   165b7:	inc    DWORD PTR [ebp-0x1c]
   165ba:	inc    eax
   165bb:	test   bl,bl
   165bd:	jne    0x165ad
   165bf:	mov    ebx,DWORD PTR [ebp-0x40]
   165c2:	lea    ecx,[ecx+esi*1+0x21]
   165c6:	mov    al,BYTE PTR [ebx]
   165c8:	mov    BYTE PTR [ecx],al
   165ca:	inc    ebx
   165cb:	inc    ecx
   165cc:	test   al,al
   165ce:	jne    0x165c6
   165d0:	mov    ecx,DWORD PTR [ebp-0x38]
   165d3:	lea    edx,[edx+esi*1+0x20]
   165d7:	mov    al,BYTE PTR [ecx]
   165d9:	mov    BYTE PTR [edx],al
   165db:	inc    ecx
   165dc:	inc    edx
   165dd:	test   al,al
   165df:	jne    0x165d7
   165e1:	mov    ecx,DWORD PTR [ebp-0x30]
   165e4:	lea    edi,[edi+esi*1+0x20]
   165e8:	mov    al,BYTE PTR [ecx]
   165ea:	mov    BYTE PTR [edi],al
   165ec:	inc    ecx
   165ed:	inc    edi
   165ee:	test   al,al
   165f0:	jne    0x165e8
   165f2:	mov    ecx,DWORD PTR [ebp-0x28]
   165f5:	mov    eax,DWORD PTR [ebp-0x20]
   165f8:	lea    esi,[eax+esi*1+0x20]
   165fc:	mov    al,BYTE PTR [ecx]
   165fe:	mov    BYTE PTR [esi],al
   16600:	inc    ecx
   16601:	inc    esi
   16602:	test   al,al
   16604:	jne    0x165fc
   16606:	push   DWORD PTR [ebp-0x28]
   16609:	call   0x11d22
   1660e:	push   DWORD PTR [ebp-0x30]
   16611:	call   0x11d22
   16616:	push   DWORD PTR [ebp-0x38]
   16619:	call   0x11d22
   1661e:	push   DWORD PTR [ebp-0x40]
   16621:	call   0x11d22
   16626:	add    esp,0x10
   16629:	jmp    0x1663c
   1662b:	xor    eax,eax
   1662d:	inc    eax
   1662e:	ret    
   1662f:	mov    esp,DWORD PTR [ebp-0x18]
   16632:	mov    eax,DWORD PTR [ebp+0xc]
   16635:	mov    DWORD PTR [eax+0x8],0x4
   1663c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   16643:	push   0x0
   16645:	push   0x77b58
   1664a:	call   0x11a14
   1664f:	call   eax
   16651:	call   0x1dd39
   16656:	ret    0x8
   16659:	int3   
   1665a:	int3   
   1665b:	int3   
   1665c:	int3   
   1665d:	int3   
   1665e:	mov    edi,edi
   16660:	push   ebp
   16661:	mov    ebp,esp
   16663:	push   ecx
   16664:	push   ecx
   16665:	push   DWORD PTR [ebp+0xc]
   16668:	lea    eax,[ebp-0x8]
   1666b:	push   eax
   1666c:	call   0x152a0
   16671:	mov    eax,DWORD PTR [ebp+0x8]
   16674:	mov    ecx,DWORD PTR [ebp-0x8]
   16677:	mov    DWORD PTR [eax],ecx
   16679:	mov    cl,BYTE PTR [ebp-0x4]
   1667c:	mov    BYTE PTR [eax+0x4],cl
   1667f:	leave  
   16680:	ret    0x8
   16683:	int3   
   16684:	int3   
   16685:	int3   
   16686:	int3   
   16687:	int3   
   16688:	mov    edi,edi
   1668a:	push   ebp
   1668b:	mov    ebp,esp
   1668d:	push   ecx
   1668e:	push   ecx
   1668f:	push   DWORD PTR [ebp+0xc]
   16692:	lea    eax,[ebp-0x8]
   16695:	push   eax
   16696:	call   0x15338
   1669b:	mov    eax,DWORD PTR [ebp+0x8]
   1669e:	mov    ecx,DWORD PTR [ebp-0x8]
   166a1:	mov    DWORD PTR [eax],ecx
   166a3:	mov    cl,BYTE PTR [ebp-0x4]
   166a6:	mov    BYTE PTR [eax+0x4],cl
   166a9:	leave  
   166aa:	ret    0x8
   166ad:	int3   
   166ae:	int3   
   166af:	int3   
   166b0:	int3   
   166b1:	int3   
   166b2:	mov    edi,edi
   166b4:	push   ebp
   166b5:	mov    ebp,esp
   166b7:	push   ecx
   166b8:	push   ecx
   166b9:	push   esi
   166ba:	push   DWORD PTR [ebp+0x8]
   166bd:	lea    eax,[ebp-0x8]
   166c0:	push   eax
   166c1:	mov    esi,ecx
   166c3:	call   0x14016
   166c8:	and    DWORD PTR [ebp+0x8],0x0
   166cc:	lea    eax,[ebp+0x8]
   166cf:	push   eax
   166d0:	push   DWORD PTR [ebp-0x4]
   166d3:	push   DWORD PTR [ebp-0x8]
   166d6:	call   0x138fa
   166db:	add    esp,0xc
   166de:	push   DWORD PTR [ebp-0x4]
   166e1:	lea    eax,[ebp-0x4]
   166e4:	push   DWORD PTR [ebp-0x8]
   166e7:	mov    ecx,esi
   166e9:	push   eax
   166ea:	call   0x153d0
   166ef:	mov    eax,DWORD PTR [ebp+0x8]
   166f2:	pop    esi
   166f3:	leave  
   166f4:	ret    0x4
   166f7:	int3   
   166f8:	int3   
   166f9:	int3   
   166fa:	int3   
   166fb:	int3   
   166fc:	mov    edi,edi
   166fe:	push   ebp
   166ff:	mov    ebp,esp
   16701:	push   ecx
   16702:	push   ebx
   16703:	push   esi
   16704:	push   edi
   16705:	mov    edi,ecx
   16707:	mov    eax,DWORD PTR [edi+0x4]
   1670a:	mov    esi,DWORD PTR [eax+0x4]
   1670d:	mov    ebx,eax
   1670f:	mov    al,0x1
   16711:	jmp    0x1672c
   16713:	lea    eax,[esi+0x10]
   16716:	push   eax
   16717:	push   DWORD PTR [ebp+0xc]
   1671a:	mov    ebx,esi
   1671c:	call   0x199e0
   16721:	test   al,al
   16723:	je     0x16729
   16725:	mov    esi,DWORD PTR [esi]
   16727:	jmp    0x1672c
   16729:	mov    esi,DWORD PTR [esi+0x8]
   1672c:	cmp    esi,DWORD PTR ds:0x786b8
   16732:	jne    0x16713
   16734:	cmp    BYTE PTR [edi+0x8],0x0
   16738:	je     0x16755
   1673a:	push   DWORD PTR [ebp+0xc]
   1673d:	lea    eax,[ebp+0xc]
   16740:	push   ebx
   16741:	push   esi
   16742:	push   eax
   16743:	mov    ecx,edi
   16745:	call   0x156fa
   1674a:	mov    ecx,DWORD PTR [eax]
   1674c:	mov    eax,DWORD PTR [ebp+0x8]
   1674f:	mov    BYTE PTR [eax+0x4],0x1
   16753:	jmp    0x16788
   16755:	mov    DWORD PTR [ebp-0x4],ebx
   16758:	test   al,al
   1675a:	je     0x1676b
   1675c:	mov    eax,DWORD PTR [edi+0x4]
   1675f:	cmp    ebx,DWORD PTR [eax]
   16761:	je     0x1673a
   16763:	lea    ecx,[ebp-0x4]
   16766:	call   0x11132
   1676b:	push   DWORD PTR [ebp+0xc]
   1676e:	mov    eax,DWORD PTR [ebp-0x4]
   16771:	add    eax,0x10
   16774:	push   eax
   16775:	call   0x199e0
   1677a:	test   al,al
   1677c:	jne    0x1673a
   1677e:	mov    eax,DWORD PTR [ebp+0x8]
   16781:	mov    ecx,DWORD PTR [ebp-0x4]
   16784:	mov    BYTE PTR [eax+0x4],0x0
   16788:	pop    edi
   16789:	pop    esi
   1678a:	mov    DWORD PTR [eax],ecx
   1678c:	pop    ebx
   1678d:	leave  
   1678e:	ret    0x8
   16791:	int3   
   16792:	int3   
   16793:	int3   
   16794:	int3   
   16795:	int3   
   16796:	mov    edi,edi
   16798:	push   ebp
   16799:	mov    ebp,esp
   1679b:	push   ecx
   1679c:	push   esi
   1679d:	mov    esi,ecx
   1679f:	cmp    DWORD PTR [esi+0xc],0x0
   167a3:	mov    ecx,DWORD PTR [ebp+0xc]
   167a6:	je     0x167e0
   167a8:	mov    eax,DWORD PTR [esi+0x4]
   167ab:	cmp    ecx,DWORD PTR [eax]
   167ad:	jne    0x167e0
   167af:	cmp    DWORD PTR [ebp+0x10],eax
   167b2:	jne    0x167e0
   167b4:	push   DWORD PTR [eax+0x4]
   167b7:	mov    ecx,esi
   167b9:	call   0x156b0
   167be:	mov    ecx,DWORD PTR ds:0x786b8
   167c4:	mov    eax,DWORD PTR [esi+0x4]
   167c7:	mov    DWORD PTR [eax+0x4],ecx
   167ca:	mov    eax,DWORD PTR [esi+0x4]
   167cd:	and    DWORD PTR [esi+0xc],0x0
   167d1:	mov    DWORD PTR [eax],eax
   167d3:	mov    eax,DWORD PTR [esi+0x4]
   167d6:	mov    DWORD PTR [eax+0x8],eax
   167d9:	mov    eax,DWORD PTR [esi+0x4]
   167dc:	mov    ecx,DWORD PTR [eax]
   167de:	jmp    0x16805
   167e0:	cmp    ecx,DWORD PTR [ebp+0x10]
   167e3:	je     0x16805
   167e5:	push   edi
   167e6:	mov    edi,ecx
   167e8:	lea    ecx,[ebp+0xc]
   167eb:	call   0x12e1a
   167f0:	push   edi
   167f1:	lea    eax,[ebp-0x4]
   167f4:	push   eax
   167f5:	mov    ecx,esi
   167f7:	call   0x1544e
   167fc:	mov    ecx,DWORD PTR [ebp+0xc]
   167ff:	cmp    ecx,DWORD PTR [ebp+0x10]
   16802:	jne    0x167e6
   16804:	pop    edi
   16805:	mov    eax,DWORD PTR [ebp+0x8]
   16808:	mov    DWORD PTR [eax],ecx
   1680a:	pop    esi
   1680b:	leave  
   1680c:	ret    0xc
   1680f:	int3   
   16810:	int3   
   16811:	int3   
   16812:	int3   
   16813:	int3   
   16814:	mov    edi,edi
   16816:	push   ebp
   16817:	mov    ebp,esp
   16819:	push   ecx
   1681a:	push   ebx
   1681b:	push   esi
   1681c:	push   edi
   1681d:	mov    edi,ecx
   1681f:	mov    eax,DWORD PTR [edi+0x4]
   16822:	mov    esi,DWORD PTR [eax+0x4]
   16825:	mov    ebx,eax
   16827:	mov    al,0x1
   16829:	jmp    0x16844
   1682b:	lea    eax,[esi+0x10]
   1682e:	push   eax
   1682f:	push   DWORD PTR [ebp+0xc]
   16832:	mov    ebx,esi
   16834:	call   0x199e0
   16839:	test   al,al
   1683b:	je     0x16841
   1683d:	mov    esi,DWORD PTR [esi]
   1683f:	jmp    0x16844
   16841:	mov    esi,DWORD PTR [esi+0x8]
   16844:	cmp    esi,DWORD PTR ds:0x786bc
   1684a:	jne    0x1682b
   1684c:	cmp    BYTE PTR [edi+0x8],0x0
   16850:	je     0x1686d
   16852:	push   DWORD PTR [ebp+0xc]
   16855:	lea    eax,[ebp+0xc]
   16858:	push   ebx
   16859:	push   esi
   1685a:	push   eax
   1685b:	mov    ecx,edi
   1685d:	call   0x15afc
   16862:	mov    ecx,DWORD PTR [eax]
   16864:	mov    eax,DWORD PTR [ebp+0x8]
   16867:	mov    BYTE PTR [eax+0x4],0x1
   1686b:	jmp    0x168a0
   1686d:	mov    DWORD PTR [ebp-0x4],ebx
   16870:	test   al,al
   16872:	je     0x16883
   16874:	mov    eax,DWORD PTR [edi+0x4]
   16877:	cmp    ebx,DWORD PTR [eax]
   16879:	je     0x16852
   1687b:	lea    ecx,[ebp-0x4]
   1687e:	call   0x10fea
   16883:	push   DWORD PTR [ebp+0xc]
   16886:	mov    eax,DWORD PTR [ebp-0x4]
   16889:	add    eax,0x10
   1688c:	push   eax
   1688d:	call   0x199e0
   16892:	test   al,al
   16894:	jne    0x16852
   16896:	mov    eax,DWORD PTR [ebp+0x8]
   16899:	mov    ecx,DWORD PTR [ebp-0x4]
   1689c:	mov    BYTE PTR [eax+0x4],0x0
   168a0:	pop    edi
   168a1:	pop    esi
   168a2:	mov    DWORD PTR [eax],ecx
   168a4:	pop    ebx
   168a5:	leave  
   168a6:	ret    0x8
   168a9:	int3   
   168aa:	int3   
   168ab:	int3   
   168ac:	int3   
   168ad:	int3   
   168ae:	mov    edi,edi
   168b0:	push   ebp
   168b1:	mov    ebp,esp
   168b3:	push   ecx
   168b4:	push   esi
   168b5:	mov    esi,ecx
   168b7:	cmp    DWORD PTR [esi+0xc],0x0
   168bb:	mov    ecx,DWORD PTR [ebp+0xc]
   168be:	je     0x168f8
   168c0:	mov    eax,DWORD PTR [esi+0x4]
   168c3:	cmp    ecx,DWORD PTR [eax]
   168c5:	jne    0x168f8
   168c7:	cmp    DWORD PTR [ebp+0x10],eax
   168ca:	jne    0x168f8
   168cc:	push   DWORD PTR [eax+0x4]
   168cf:	mov    ecx,esi
   168d1:	call   0x15ab2
   168d6:	mov    ecx,DWORD PTR ds:0x786bc
   168dc:	mov    eax,DWORD PTR [esi+0x4]
   168df:	mov    DWORD PTR [eax+0x4],ecx
   168e2:	mov    eax,DWORD PTR [esi+0x4]
   168e5:	and    DWORD PTR [esi+0xc],0x0
   168e9:	mov    DWORD PTR [eax],eax
   168eb:	mov    eax,DWORD PTR [esi+0x4]
   168ee:	mov    DWORD PTR [eax+0x8],eax
   168f1:	mov    eax,DWORD PTR [esi+0x4]
   168f4:	mov    ecx,DWORD PTR [eax]
   168f6:	jmp    0x1691d
   168f8:	cmp    ecx,DWORD PTR [ebp+0x10]
   168fb:	je     0x1691d
   168fd:	push   edi
   168fe:	mov    edi,ecx
   16900:	lea    ecx,[ebp+0xc]
   16903:	call   0x1373e
   16908:	push   edi
   16909:	lea    eax,[ebp-0x4]
   1690c:	push   eax
   1690d:	mov    ecx,esi
   1690f:	call   0x15850
   16914:	mov    ecx,DWORD PTR [ebp+0xc]
   16917:	cmp    ecx,DWORD PTR [ebp+0x10]
   1691a:	jne    0x168fe
   1691c:	pop    edi
   1691d:	mov    eax,DWORD PTR [ebp+0x8]
   16920:	mov    DWORD PTR [eax],ecx
   16922:	pop    esi
   16923:	leave  
   16924:	ret    0xc
   16927:	int3   
   16928:	int3   
   16929:	int3   
   1692a:	int3   
   1692b:	int3   
   1692c:	mov    edi,edi
   1692e:	push   ebp
   1692f:	mov    ebp,esp
   16931:	push   ecx
   16932:	push   ebx
   16933:	push   esi
   16934:	push   edi
   16935:	mov    edi,ecx
   16937:	mov    eax,DWORD PTR [edi+0x4]
   1693a:	mov    esi,DWORD PTR [eax+0x4]
   1693d:	mov    ebx,eax
   1693f:	mov    al,0x1
   16941:	jmp    0x1695c
   16943:	lea    eax,[esi+0xc]
   16946:	push   eax
   16947:	push   DWORD PTR [ebp+0xc]
   1694a:	mov    ebx,esi
   1694c:	call   0x199e0
   16951:	test   al,al
   16953:	je     0x16959
   16955:	mov    esi,DWORD PTR [esi]
   16957:	jmp    0x1695c
   16959:	mov    esi,DWORD PTR [esi+0x8]
   1695c:	cmp    esi,DWORD PTR ds:0x786c0
   16962:	jne    0x16943
   16964:	cmp    BYTE PTR [edi+0x8],0x0
   16968:	je     0x16985
   1696a:	push   DWORD PTR [ebp+0xc]
   1696d:	lea    eax,[ebp+0xc]
   16970:	push   ebx
   16971:	push   esi
   16972:	push   eax
   16973:	mov    ecx,edi
   16975:	call   0x15c52
   1697a:	mov    ecx,DWORD PTR [eax]
   1697c:	mov    eax,DWORD PTR [ebp+0x8]
   1697f:	mov    BYTE PTR [eax+0x4],0x1
   16983:	jmp    0x169b8
   16985:	mov    DWORD PTR [ebp-0x4],ebx
   16988:	test   al,al
   1698a:	je     0x1699b
   1698c:	mov    eax,DWORD PTR [edi+0x4]
   1698f:	cmp    ebx,DWORD PTR [eax]
   16991:	je     0x1696a
   16993:	lea    ecx,[ebp-0x4]
   16996:	call   0x1106e
   1699b:	push   DWORD PTR [ebp+0xc]
   1699e:	mov    eax,DWORD PTR [ebp-0x4]
   169a1:	add    eax,0xc
   169a4:	push   eax
   169a5:	call   0x199e0
   169aa:	test   al,al
   169ac:	jne    0x1696a
   169ae:	mov    eax,DWORD PTR [ebp+0x8]
   169b1:	mov    ecx,DWORD PTR [ebp-0x4]
   169b4:	mov    BYTE PTR [eax+0x4],0x0
   169b8:	pop    edi
   169b9:	pop    esi
   169ba:	mov    DWORD PTR [eax],ecx
   169bc:	pop    ebx
   169bd:	leave  
   169be:	ret    0x8
   169c1:	int3   
   169c2:	int3   
   169c3:	int3   
   169c4:	int3   
   169c5:	int3   
   169c6:	mov    edi,edi
   169c8:	push   ebp
   169c9:	mov    ebp,esp
   169cb:	push   ecx
   169cc:	push   ebx
   169cd:	push   esi
   169ce:	push   edi
   169cf:	mov    edi,ecx
   169d1:	mov    eax,DWORD PTR [edi+0x4]
   169d4:	mov    esi,DWORD PTR [eax+0x4]
   169d7:	mov    ebx,eax
   169d9:	mov    eax,ds:0x786c4
   169de:	mov    dl,0x1
   169e0:	cmp    esi,eax
   169e2:	je     0x16a00
   169e4:	mov    ecx,DWORD PTR [ebp+0xc]
   169e7:	mov    ecx,DWORD PTR [ecx]
   169e9:	cmp    ecx,DWORD PTR [esi+0xc]
   169ec:	mov    ebx,esi
   169ee:	setl   dl
   169f1:	test   dl,dl
   169f3:	je     0x169f9
   169f5:	mov    esi,DWORD PTR [esi]
   169f7:	jmp    0x169fc
   169f9:	mov    esi,DWORD PTR [esi+0x8]
   169fc:	cmp    esi,eax
   169fe:	jne    0x169e9
   16a00:	cmp    BYTE PTR [edi+0x8],0x0
   16a04:	je     0x16a21
   16a06:	push   DWORD PTR [ebp+0xc]
   16a09:	push   ebx
   16a0a:	push   esi
   16a0b:	lea    eax,[ebp+0xc]
   16a0e:	push   eax
   16a0f:	mov    ecx,edi
   16a11:	call   0x16054
   16a16:	mov    ecx,DWORD PTR [eax]
   16a18:	mov    eax,DWORD PTR [ebp+0x8]
   16a1b:	mov    BYTE PTR [eax+0x4],0x1
   16a1f:	jmp    0x16a50
   16a21:	mov    ecx,ebx
   16a23:	mov    DWORD PTR [ebp-0x4],ecx
   16a26:	test   dl,dl
   16a28:	je     0x16a3c
   16a2a:	mov    eax,DWORD PTR [edi+0x4]
   16a2d:	cmp    ebx,DWORD PTR [eax]
   16a2f:	je     0x16a06
   16a31:	lea    ecx,[ebp-0x4]
   16a34:	call   0x110f2
   16a39:	mov    ecx,DWORD PTR [ebp-0x4]
   16a3c:	mov    edx,DWORD PTR [ecx+0xc]
   16a3f:	mov    eax,DWORD PTR [ebp+0xc]
   16a42:	cmp    edx,DWORD PTR [eax]
   16a44:	jge    0x16a49
   16a46:	push   eax
   16a47:	jmp    0x16a09
   16a49:	mov    eax,DWORD PTR [ebp+0x8]
   16a4c:	mov    BYTE PTR [eax+0x4],0x0
   16a50:	pop    edi
   16a51:	pop    esi
   16a52:	mov    DWORD PTR [eax],ecx
   16a54:	pop    ebx
   16a55:	leave  
   16a56:	ret    0x8
   16a59:	int3   
   16a5a:	int3   
   16a5b:	int3   
   16a5c:	int3   
   16a5d:	int3   
   16a5e:	mov    edi,edi
   16a60:	push   ebp
   16a61:	mov    ebp,esp
   16a63:	push   ecx
   16a64:	push   esi
   16a65:	mov    esi,ecx
   16a67:	cmp    DWORD PTR [esi+0xc],0x0
   16a6b:	mov    ecx,DWORD PTR [ebp+0xc]
   16a6e:	je     0x16aa8
   16a70:	mov    eax,DWORD PTR [esi+0x4]
   16a73:	cmp    ecx,DWORD PTR [eax]
   16a75:	jne    0x16aa8
   16a77:	cmp    DWORD PTR [ebp+0x10],eax
   16a7a:	jne    0x16aa8
   16a7c:	push   DWORD PTR [eax+0x4]
   16a7f:	mov    ecx,esi
   16a81:	call   0x1600a
   16a86:	mov    ecx,DWORD PTR ds:0x786c4
   16a8c:	mov    eax,DWORD PTR [esi+0x4]
   16a8f:	mov    DWORD PTR [eax+0x4],ecx
   16a92:	mov    eax,DWORD PTR [esi+0x4]
   16a95:	and    DWORD PTR [esi+0xc],0x0
   16a99:	mov    DWORD PTR [eax],eax
   16a9b:	mov    eax,DWORD PTR [esi+0x4]
   16a9e:	mov    DWORD PTR [eax+0x8],eax
   16aa1:	mov    eax,DWORD PTR [esi+0x4]
   16aa4:	mov    ecx,DWORD PTR [eax]
   16aa6:	jmp    0x16acd
   16aa8:	cmp    ecx,DWORD PTR [ebp+0x10]
   16aab:	je     0x16acd
   16aad:	push   edi
   16aae:	mov    edi,ecx
   16ab0:	lea    ecx,[ebp+0xc]
   16ab3:	call   0x111a8
   16ab8:	push   edi
   16ab9:	lea    eax,[ebp-0x4]
   16abc:	push   eax
   16abd:	mov    ecx,esi
   16abf:	call   0x15da8
   16ac4:	mov    ecx,DWORD PTR [ebp+0xc]
   16ac7:	cmp    ecx,DWORD PTR [ebp+0x10]
   16aca:	jne    0x16aae
   16acc:	pop    edi
   16acd:	mov    eax,DWORD PTR [ebp+0x8]
   16ad0:	mov    DWORD PTR [eax],ecx
   16ad2:	pop    esi
   16ad3:	leave  
   16ad4:	ret    0xc
   16ad7:	int3   
   16ad8:	int3   
   16ad9:	int3   
   16ada:	int3   
   16adb:	int3   
   16adc:	mov    edi,edi
   16ade:	push   ebp
   16adf:	mov    ebp,esp
   16ae1:	push   ecx
   16ae2:	push   ebx
   16ae3:	push   esi
   16ae4:	push   edi
   16ae5:	mov    edi,ecx
   16ae7:	mov    eax,DWORD PTR [edi+0x4]
   16aea:	mov    esi,DWORD PTR [eax+0x4]
   16aed:	mov    ebx,eax
   16aef:	mov    al,0x1
   16af1:	jmp    0x16b0c
   16af3:	lea    eax,[esi+0xc]
   16af6:	push   eax
   16af7:	push   DWORD PTR [ebp+0xc]
   16afa:	mov    ebx,esi
   16afc:	call   0x19a10
   16b01:	test   al,al
   16b03:	je     0x16b09
   16b05:	mov    esi,DWORD PTR [esi]
   16b07:	jmp    0x16b0c
   16b09:	mov    esi,DWORD PTR [esi+0x8]
   16b0c:	cmp    esi,DWORD PTR ds:0x786cc
   16b12:	jne    0x16af3
   16b14:	cmp    BYTE PTR [edi+0x8],0x0
   16b18:	je     0x16b35
   16b1a:	push   DWORD PTR [ebp+0xc]
   16b1d:	lea    eax,[ebp+0xc]
   16b20:	push   ebx
   16b21:	push   esi
   16b22:	push   eax
   16b23:	mov    ecx,edi
   16b25:	call   0x161a4
   16b2a:	mov    ecx,DWORD PTR [eax]
   16b2c:	mov    eax,DWORD PTR [ebp+0x8]
   16b2f:	mov    BYTE PTR [eax+0x4],0x1
   16b33:	jmp    0x16b68
   16b35:	mov    DWORD PTR [ebp-0x4],ebx
   16b38:	test   al,al
   16b3a:	je     0x16b4b
   16b3c:	mov    eax,DWORD PTR [edi+0x4]
   16b3f:	cmp    ebx,DWORD PTR [eax]
   16b41:	je     0x16b1a
   16b43:	lea    ecx,[ebp-0x4]
   16b46:	call   0x133bc
   16b4b:	push   DWORD PTR [ebp+0xc]
   16b4e:	mov    eax,DWORD PTR [ebp-0x4]
   16b51:	add    eax,0xc
   16b54:	push   eax
   16b55:	call   0x19a10
   16b5a:	test   al,al
   16b5c:	jne    0x16b1a
   16b5e:	mov    eax,DWORD PTR [ebp+0x8]
   16b61:	mov    ecx,DWORD PTR [ebp-0x4]
   16b64:	mov    BYTE PTR [eax+0x4],0x0
   16b68:	pop    edi
   16b69:	pop    esi
   16b6a:	mov    DWORD PTR [eax],ecx
   16b6c:	pop    ebx
   16b6d:	leave  
   16b6e:	ret    0x8
   16b71:	int3   
   16b72:	int3   
   16b73:	int3   
   16b74:	int3   
   16b75:	int3   
   16b76:	mov    edi,edi
   16b78:	push   ebp
   16b79:	mov    ebp,esp
   16b7b:	sub    esp,0x10
   16b7e:	push   DWORD PTR [ebp+0x8]
   16b81:	lea    ecx,[ebp-0x10]
   16b84:	call   0x162fa
   16b89:	push   DWORD PTR [ebp+0xc]
   16b8c:	mov    ecx,DWORD PTR [ebp+0x8]
   16b8f:	call   0x16326
   16b94:	mov    ecx,DWORD PTR [ebp+0xc]
   16b97:	lea    eax,[ebp-0x10]
   16b9a:	push   eax
   16b9b:	call   0x16326
   16ba0:	lea    ecx,[ebp-0x10]
   16ba3:	call   0x15218
   16ba8:	leave  
   16ba9:	ret    0x8
   16bac:	int3   
   16bad:	int3   
   16bae:	int3   
   16baf:	int3   
   16bb0:	int3   
   16bb1:	int3   
   16bb2:	mov    edi,edi
   16bb4:	push   esi
   16bb5:	mov    esi,ecx
   16bb7:	push   edi
   16bb8:	mov    BYTE PTR [esi+0x8],0x0
   16bbc:	call   0x14738
   16bc1:	lea    edi,[esi+0x10]
   16bc4:	mov    ecx,edi
   16bc6:	call   0x12a72
   16bcb:	mov    edi,DWORD PTR [edi]
   16bcd:	push   0x0
   16bcf:	push   edi
   16bd0:	call   0x119c0
   16bd5:	call   eax
   16bd7:	pop    edi
   16bd8:	mov    eax,esi
   16bda:	pop    esi
   16bdb:	ret    
   16bdc:	int3   
   16bdd:	int3   
   16bde:	int3   
   16bdf:	int3   
   16be0:	int3   
   16be1:	int3   
   16be2:	mov    edi,edi
   16be4:	push   ebp
   16be5:	mov    ebp,esp
   16be7:	sub    esp,0x10
   16bea:	mov    eax,DWORD PTR [ebp+0x8]
   16bed:	mov    eax,DWORD PTR [eax]
   16bef:	and    DWORD PTR [ebp-0x4],0x0
   16bf3:	mov    DWORD PTR [ebp-0x8],eax
   16bf6:	lea    eax,[ebp-0x8]
   16bf9:	push   eax
   16bfa:	lea    eax,[ebp-0x10]
   16bfd:	push   eax
   16bfe:	call   0x16688
   16c03:	mov    eax,DWORD PTR [eax]
   16c05:	add    eax,0x10
   16c08:	leave  
   16c09:	ret    0x4
   16c0c:	int3   
   16c0d:	int3   
   16c0e:	int3   
   16c0f:	int3   
   16c10:	int3   
   16c11:	int3   
   16c12:	mov    edi,edi
   16c14:	push   esi
   16c15:	mov    esi,ecx
   16c17:	mov    BYTE PTR [esi+0x8],0x0
   16c1b:	call   0x147fc
   16c20:	mov    eax,esi
   16c22:	pop    esi
   16c23:	ret    0x8
   16c26:	int3   
   16c27:	int3   
   16c28:	int3   
   16c29:	int3   
   16c2a:	int3   
   16c2b:	int3   
   16c2c:	mov    edi,edi
   16c2e:	push   ebp
   16c2f:	mov    ebp,esp
   16c31:	push   ecx
   16c32:	push   ecx
   16c33:	push   DWORD PTR [ebp+0xc]
   16c36:	lea    eax,[ebp-0x8]
   16c39:	push   eax
   16c3a:	call   0x166fc
   16c3f:	mov    eax,DWORD PTR [ebp+0x8]
   16c42:	mov    ecx,DWORD PTR [ebp-0x8]
   16c45:	mov    DWORD PTR [eax],ecx
   16c47:	mov    cl,BYTE PTR [ebp-0x4]
   16c4a:	mov    BYTE PTR [eax+0x4],cl
   16c4d:	leave  
   16c4e:	ret    0x8
   16c51:	int3   
   16c52:	int3   
   16c53:	int3   
   16c54:	int3   
   16c55:	int3   
   16c56:	mov    edi,edi
   16c58:	push   ebp
   16c59:	mov    ebp,esp
   16c5b:	push   ecx
   16c5c:	push   esi
   16c5d:	mov    esi,ecx
   16c5f:	mov    eax,DWORD PTR [esi+0x4]
   16c62:	mov    ecx,DWORD PTR [eax]
   16c64:	push   eax
   16c65:	push   ecx
   16c66:	lea    eax,[ebp-0x4]
   16c69:	push   eax
   16c6a:	mov    ecx,esi
   16c6c:	call   0x16796
   16c71:	push   DWORD PTR [esi+0x4]
   16c74:	call   0x11d22
   16c79:	xor    eax,eax
   16c7b:	mov    DWORD PTR [esi+0x4],eax
   16c7e:	mov    DWORD PTR [esi+0xc],eax
   16c81:	dec    DWORD PTR ds:0x78874
   16c87:	pop    ecx
   16c88:	pop    esi
   16c89:	jne    0x16ca1
   16c8b:	mov    ecx,DWORD PTR ds:0x786b8
   16c91:	mov    ds:0x786b8,eax
   16c96:	cmp    ecx,eax
   16c98:	je     0x16ca1
   16c9a:	push   ecx
   16c9b:	call   0x11d22
   16ca0:	pop    ecx
   16ca1:	leave  
   16ca2:	ret    
   16ca3:	int3   
   16ca4:	int3   
   16ca5:	int3   
   16ca6:	int3   
   16ca7:	int3   
   16ca8:	mov    edi,edi
   16caa:	push   ebp
   16cab:	mov    ebp,esp
   16cad:	push   ecx
   16cae:	push   ecx
   16caf:	push   DWORD PTR [ebp+0xc]
   16cb2:	lea    eax,[ebp-0x8]
   16cb5:	push   eax
   16cb6:	call   0x16814
   16cbb:	mov    eax,DWORD PTR [ebp+0x8]
   16cbe:	mov    ecx,DWORD PTR [ebp-0x8]
   16cc1:	mov    DWORD PTR [eax],ecx
   16cc3:	mov    cl,BYTE PTR [ebp-0x4]
   16cc6:	mov    BYTE PTR [eax+0x4],cl
   16cc9:	leave  
   16cca:	ret    0x8
   16ccd:	int3   
   16cce:	int3   
   16ccf:	int3   
   16cd0:	int3   
   16cd1:	int3   
   16cd2:	mov    edi,edi
   16cd4:	push   ebp
   16cd5:	mov    ebp,esp
   16cd7:	push   ecx
   16cd8:	mov    eax,DWORD PTR [ecx+0x4]
   16cdb:	mov    edx,DWORD PTR [eax]
   16cdd:	push   eax
   16cde:	push   edx
   16cdf:	lea    eax,[ebp-0x4]
   16ce2:	push   eax
   16ce3:	call   0x168ae
   16ce8:	leave  
   16ce9:	ret    
   16cea:	int3   
   16ceb:	int3   
   16cec:	int3   
   16ced:	int3   
   16cee:	int3   
   16cef:	int3   
   16cf0:	mov    edi,edi
   16cf2:	push   ebp
   16cf3:	mov    ebp,esp
   16cf5:	push   ecx
   16cf6:	push   ecx
   16cf7:	push   DWORD PTR [ebp+0xc]
   16cfa:	lea    eax,[ebp-0x8]
   16cfd:	push   eax
   16cfe:	call   0x1692c
   16d03:	mov    eax,DWORD PTR [ebp+0x8]
   16d06:	mov    ecx,DWORD PTR [ebp-0x8]
   16d09:	mov    DWORD PTR [eax],ecx
   16d0b:	mov    cl,BYTE PTR [ebp-0x4]
   16d0e:	mov    BYTE PTR [eax+0x4],cl
   16d11:	leave  
   16d12:	ret    0x8
   16d15:	int3   
   16d16:	int3   
   16d17:	int3   
   16d18:	int3   
   16d19:	int3   
   16d1a:	mov    edi,edi
   16d1c:	push   ebp
   16d1d:	mov    ebp,esp
   16d1f:	push   ecx
   16d20:	push   ecx
   16d21:	push   DWORD PTR [ebp+0xc]
   16d24:	lea    eax,[ebp-0x8]
   16d27:	push   eax
   16d28:	call   0x169c6
   16d2d:	mov    eax,DWORD PTR [ebp+0x8]
   16d30:	mov    ecx,DWORD PTR [ebp-0x8]
   16d33:	mov    DWORD PTR [eax],ecx
   16d35:	mov    cl,BYTE PTR [ebp-0x4]
   16d38:	mov    BYTE PTR [eax+0x4],cl
   16d3b:	leave  
   16d3c:	ret    0x8
   16d3f:	int3   
   16d40:	int3   
   16d41:	int3   
   16d42:	int3   
   16d43:	int3   
   16d44:	mov    edi,edi
   16d46:	push   ebp
   16d47:	mov    ebp,esp
   16d49:	push   ecx
   16d4a:	push   ecx
   16d4b:	push   esi
   16d4c:	push   DWORD PTR [ebp+0x8]
   16d4f:	lea    eax,[ebp-0x8]
   16d52:	push   eax
   16d53:	mov    esi,ecx
   16d55:	call   0x14048
   16d5a:	and    DWORD PTR [ebp+0x8],0x0
   16d5e:	lea    eax,[ebp+0x8]
   16d61:	push   eax
   16d62:	push   DWORD PTR [ebp-0x4]
   16d65:	push   DWORD PTR [ebp-0x8]
   16d68:	call   0x1391c
   16d6d:	add    esp,0xc
   16d70:	push   DWORD PTR [ebp-0x4]
   16d73:	lea    eax,[ebp-0x4]
   16d76:	push   DWORD PTR [ebp-0x8]
   16d79:	mov    ecx,esi
   16d7b:	push   eax
   16d7c:	call   0x16a5e
   16d81:	mov    eax,DWORD PTR [ebp+0x8]
   16d84:	pop    esi
   16d85:	leave  
   16d86:	ret    0x4
   16d89:	int3   
   16d8a:	int3   
   16d8b:	int3   
   16d8c:	int3   
   16d8d:	int3   
   16d8e:	mov    edi,edi
   16d90:	push   ebp
   16d91:	mov    ebp,esp
   16d93:	push   ecx
   16d94:	mov    eax,DWORD PTR [ecx+0x4]
   16d97:	mov    edx,DWORD PTR [eax]
   16d99:	push   eax
   16d9a:	push   edx
   16d9b:	lea    eax,[ebp-0x4]
   16d9e:	push   eax
   16d9f:	call   0x16a5e
   16da4:	leave  
   16da5:	ret    
   16da6:	int3   
   16da7:	int3   
   16da8:	int3   
   16da9:	int3   
   16daa:	int3   
   16dab:	int3   
   16dac:	mov    edi,edi
   16dae:	push   ebp
   16daf:	mov    ebp,esp
   16db1:	push   ecx
   16db2:	push   ecx
   16db3:	push   DWORD PTR [ebp+0xc]
   16db6:	lea    eax,[ebp-0x8]
   16db9:	push   eax
   16dba:	call   0x16adc
   16dbf:	mov    eax,DWORD PTR [ebp+0x8]
   16dc2:	mov    ecx,DWORD PTR [ebp-0x8]
   16dc5:	mov    DWORD PTR [eax],ecx
   16dc7:	mov    cl,BYTE PTR [ebp-0x4]
   16dca:	mov    BYTE PTR [eax+0x4],cl
   16dcd:	leave  
   16dce:	ret    0x8
   16dd1:	int3   
   16dd2:	int3   
   16dd3:	int3   
   16dd4:	int3   
   16dd5:	int3   
   16dd6:	mov    edi,edi
   16dd8:	push   ebp
   16dd9:	mov    ebp,esp
   16ddb:	push   esi
   16ddc:	push   edi
   16ddd:	xor    edi,edi
   16ddf:	push   edi
   16de0:	push   edi
   16de1:	push   edi
   16de2:	mov    esi,ecx
   16de4:	mov    eax,DWORD PTR [esi+0x10]
   16de7:	push   edi
   16de8:	push   eax
   16de9:	call   0x119ea
   16dee:	call   eax
   16df0:	test   eax,eax
   16df2:	jl     0x16e10
   16df4:	lea    eax,[ebp+0x8]
   16df7:	push   eax
   16df8:	mov    ecx,esi
   16dfa:	call   0x16be2
   16dff:	mov    ecx,DWORD PTR [ebp+0xc]
   16e02:	mov    DWORD PTR [eax],ecx
   16e04:	mov    esi,DWORD PTR [esi+0x10]
   16e07:	push   edi
   16e08:	push   esi
   16e09:	call   0x11a14
   16e0e:	call   eax
   16e10:	pop    edi
   16e11:	pop    esi
   16e12:	pop    ebp
   16e13:	ret    0x8
   16e16:	int3   
   16e17:	int3   
   16e18:	int3   
   16e19:	int3   
   16e1a:	int3   
   16e1b:	int3   
   16e1c:	mov    edi,edi
   16e1e:	push   esi
   16e1f:	mov    esi,ecx
   16e21:	mov    BYTE PTR [esi+0x8],0x0
   16e25:	call   0x1479a
   16e2a:	mov    eax,esi
   16e2c:	pop    esi
   16e2d:	ret    0x8
   16e30:	int3   
   16e31:	int3   
   16e32:	int3   
   16e33:	int3   
   16e34:	int3   
   16e35:	int3   
   16e36:	mov    edi,edi
   16e38:	push   ebp
   16e39:	mov    ebp,esp
   16e3b:	sub    esp,0x90
   16e41:	push   esi
   16e42:	mov    esi,ecx
   16e44:	lea    ecx,[ebp-0x48]
   16e47:	call   0x13ac6
   16e4c:	push   eax
   16e4d:	push   DWORD PTR [ebp+0x8]
   16e50:	lea    ecx,[ebp-0x90]
   16e56:	call   0x13c40
   16e5b:	push   eax
   16e5c:	lea    eax,[ebp-0x8]
   16e5f:	push   eax
   16e60:	mov    ecx,esi
   16e62:	call   0x16ca8
   16e67:	mov    esi,DWORD PTR [eax]
   16e69:	lea    ecx,[ebp-0x90]
   16e6f:	call   0x1365c
   16e74:	lea    ecx,[ebp-0x48]
   16e77:	call   0x134ec
   16e7c:	lea    eax,[esi+0x18]
   16e7f:	pop    esi
   16e80:	leave  
   16e81:	ret    0x4
   16e84:	int3   
   16e85:	int3   
   16e86:	int3   
   16e87:	int3   
   16e88:	int3   
   16e89:	int3   
   16e8a:	mov    edi,edi
   16e8c:	push   ebp
   16e8d:	mov    ebp,esp
   16e8f:	sub    esp,0x20
   16e92:	push   esi
   16e93:	push   0xffffffff
   16e95:	mov    esi,ecx
   16e97:	push   0x1e108
   16e9c:	lea    ecx,[ebp-0x8]
   16e9f:	call   0x12b44
   16ea4:	lea    eax,[ebp-0x8]
   16ea7:	push   eax
   16ea8:	push   DWORD PTR [ebp+0x8]
   16eab:	lea    ecx,[ebp-0x20]
   16eae:	call   0x13774
   16eb3:	push   eax
   16eb4:	lea    eax,[ebp-0x10]
   16eb7:	push   eax
   16eb8:	mov    ecx,esi
   16eba:	call   0x16cf0
   16ebf:	mov    esi,DWORD PTR [eax]
   16ec1:	lea    ecx,[ebp-0x20]
   16ec4:	call   0x12b26
   16ec9:	push   DWORD PTR [ebp-0x8]
   16ecc:	call   0x11d22
   16ed1:	pop    ecx
   16ed2:	lea    eax,[esi+0x14]
   16ed5:	pop    esi
   16ed6:	leave  
   16ed7:	ret    0x4
   16eda:	int3   
   16edb:	int3   
   16edc:	int3   
   16edd:	int3   
   16ede:	int3   
   16edf:	int3   
   16ee0:	mov    edi,edi
   16ee2:	push   esi
   16ee3:	mov    esi,ecx
   16ee5:	mov    BYTE PTR [esi+0x8],0x0
   16ee9:	call   0x1485e
   16eee:	mov    eax,esi
   16ef0:	pop    esi
   16ef1:	ret    0x8
   16ef4:	int3   
   16ef5:	int3   
   16ef6:	int3   
   16ef7:	int3   
   16ef8:	int3   
   16ef9:	int3   
   16efa:	mov    edi,edi
   16efc:	push   ebp
   16efd:	mov    ebp,esp
   16eff:	sub    esp,0x14
   16f02:	and    DWORD PTR [ebp-0x4],0x0
   16f06:	push   esi
   16f07:	lea    eax,[ebp-0x4]
   16f0a:	push   eax
   16f0b:	push   DWORD PTR [ebp+0x8]
   16f0e:	mov    esi,ecx
   16f10:	lea    ecx,[ebp-0xc]
   16f13:	call   0x1379c
   16f18:	push   eax
   16f19:	lea    eax,[ebp-0x14]
   16f1c:	push   eax
   16f1d:	mov    ecx,esi
   16f1f:	call   0x16d1a
   16f24:	mov    ecx,DWORD PTR [ebp-0x8]
   16f27:	mov    esi,DWORD PTR [eax]
   16f29:	test   ecx,ecx
   16f2b:	je     0x16f32
   16f2d:	call   0x11d64
   16f32:	lea    eax,[esi+0x10]
   16f35:	pop    esi
   16f36:	leave  
   16f37:	ret    0x4
   16f3a:	int3   
   16f3b:	int3   
   16f3c:	int3   
   16f3d:	int3   
   16f3e:	int3   
   16f3f:	int3   
   16f40:	mov    edi,edi
   16f42:	push   ebp
   16f43:	mov    ebp,esp
   16f45:	sub    esp,0x20
   16f48:	push   esi
   16f49:	mov    esi,ecx
   16f4b:	mov    eax,DWORD PTR [esi+0x24]
   16f4e:	mov    ecx,DWORD PTR [esi+0x28]
   16f51:	add    ecx,eax
   16f53:	cmp    DWORD PTR [esi+0x10],ecx
   16f56:	jbe    0x16fe9
   16f5c:	mov    ecx,DWORD PTR [esi+0x18]
   16f5f:	mov    ecx,DWORD PTR [ecx]
   16f61:	push   edi
   16f62:	mov    DWORD PTR [ebp-0x4],ecx
   16f65:	test   eax,eax
   16f67:	je     0x16f76
   16f69:	mov    edi,eax
   16f6b:	lea    ecx,[ebp-0x4]
   16f6e:	call   0x12e90
   16f73:	dec    edi
   16f74:	jne    0x16f6b
   16f76:	mov    eax,DWORD PTR [ebp-0x4]
   16f79:	mov    edi,DWORD PTR [eax+0xc]
   16f7c:	lea    ecx,[ebp-0x20]
   16f7f:	mov    BYTE PTR [ebp-0x18],0x0
   16f83:	call   0x148c0
   16f88:	mov    eax,DWORD PTR [esi+0x8]
   16f8b:	mov    ecx,DWORD PTR [eax]
   16f8d:	mov    DWORD PTR [ebp-0x4],ecx
   16f90:	cmp    ecx,eax
   16f92:	je     0x16fd3
   16f94:	lea    edx,[ecx+0x58]
   16f97:	mov    eax,DWORD PTR [edx]
   16f99:	cmp    eax,edi
   16f9b:	jae    0x16fb2
   16f9d:	push   ecx
   16f9e:	lea    eax,[ebp-0x8]
   16fa1:	push   eax
   16fa2:	lea    ecx,[esi+0x4]
   16fa5:	call   0x1544e
   16faa:	mov    ecx,DWORD PTR [ebp-0x8]
   16fad:	mov    DWORD PTR [ebp-0x4],ecx
   16fb0:	jmp    0x16fce
   16fb2:	sub    eax,edi
   16fb4:	mov    DWORD PTR [edx],eax
   16fb6:	push   edx
   16fb7:	lea    eax,[ebp-0x10]
   16fba:	push   eax
   16fbb:	lea    ecx,[ebp-0x20]
   16fbe:	call   0x1665e
   16fc3:	lea    ecx,[ebp-0x4]
   16fc6:	call   0x12e1a
   16fcb:	mov    ecx,DWORD PTR [ebp-0x4]
   16fce:	cmp    ecx,DWORD PTR [esi+0x8]
   16fd1:	jne    0x16f94
   16fd3:	lea    eax,[ebp-0x20]
   16fd6:	push   eax
   16fd7:	add    esi,0x14
   16fda:	push   esi
   16fdb:	call   0x16b76
   16fe0:	lea    ecx,[ebp-0x20]
   16fe3:	call   0x15218
   16fe8:	pop    edi
   16fe9:	pop    esi
   16fea:	leave  
   16feb:	ret    
   16fec:	int3   
   16fed:	int3   
   16fee:	int3   
   16fef:	int3   
   16ff0:	int3   
   16ff1:	int3   
   16ff2:	mov    edi,edi
   16ff4:	push   ebp
   16ff5:	mov    ebp,esp
   16ff7:	sub    esp,0x20
   16ffa:	push   esi
   16ffb:	push   0xffffffff
   16ffd:	mov    esi,ecx
   16fff:	push   0x1e06e
   17004:	lea    ecx,[ebp-0x8]
   17007:	call   0x12bfe
   1700c:	lea    eax,[ebp-0x8]
   1700f:	push   eax
   17010:	push   DWORD PTR [ebp+0x8]
   17013:	lea    ecx,[ebp-0x20]
   17016:	call   0x13870
   1701b:	push   eax
   1701c:	lea    eax,[ebp-0x10]
   1701f:	push   eax
   17020:	mov    ecx,esi
   17022:	call   0x16dac
   17027:	mov    esi,DWORD PTR [eax]
   17029:	lea    ecx,[ebp-0x20]
   1702c:	call   0x12b26
   17031:	push   DWORD PTR [ebp-0x8]
   17034:	call   0x11d22
   17039:	pop    ecx
   1703a:	lea    eax,[esi+0x14]
   1703d:	pop    esi
   1703e:	leave  
   1703f:	ret    0x4
   17042:	int3   
   17043:	int3   
   17044:	int3   
   17045:	int3   
   17046:	int3   
   17047:	int3   
   17048:	push   0x24
   1704a:	push   0x777f8
   1704f:	call   0x1dcf4
   17054:	xor    ebx,ebx
   17056:	push   ebx
   17057:	push   ebx
   17058:	push   ebx
   17059:	push   ebx
   1705a:	push   0x77b58
   1705f:	call   0x119ea
   17064:	call   eax
   17066:	cmp    eax,ebx
   17068:	jge    0x17079
   1706a:	mov    eax,DWORD PTR [ebp+0x8]
   1706d:	mov    DWORD PTR [eax+0x8],0x4
   17074:	jmp    0x17132
   17079:	mov    DWORD PTR [ebp-0x4],ebx
   1707c:	push   0xffffffff
   1707e:	mov    esi,DWORD PTR [ebp+0x8]
   17081:	lea    eax,[esi+0xc]
   17084:	push   eax
   17085:	lea    ecx,[ebp-0x24]
   17088:	call   0x1361a
   1708d:	push   0xffffffff
   1708f:	mov    eax,DWORD PTR [ebp-0x20]
   17092:	lea    eax,[eax+esi*1+0xd]
   17096:	push   eax
   17097:	lea    ecx,[ebp-0x2c]
   1709a:	call   0x1361a
   1709f:	push   0xffffffff
   170a1:	push   0x1e108
   170a6:	lea    ecx,[ebp-0x34]
   170a9:	call   0x12b44
   170ae:	lea    eax,[ebp-0x34]
   170b1:	push   eax
   170b2:	lea    eax,[ebp-0x2c]
   170b5:	push   eax
   170b6:	call   0x199f0
   170bb:	mov    BYTE PTR [ebp-0x19],al
   170be:	push   DWORD PTR [ebp-0x34]
   170c1:	call   0x11d22
   170c6:	pop    ecx
   170c7:	lea    eax,[ebp-0x24]
   170ca:	mov    ecx,DWORD PTR ds:0x77b28
   170d0:	push   eax
   170d1:	cmp    BYTE PTR [ebp-0x19],bl
   170d4:	je     0x170dd
   170d6:	call   0x166b2
   170db:	jmp    0x170ed
   170dd:	call   0x16e8a
   170e2:	lea    ecx,[ebp-0x2c]
   170e5:	push   ecx
   170e6:	mov    ecx,eax
   170e8:	call   0x12a28
   170ed:	mov    DWORD PTR [esi+0x8],ebx
   170f0:	push   DWORD PTR [ebp-0x2c]
   170f3:	call   0x11d22
   170f8:	push   DWORD PTR [ebp-0x24]
   170fb:	call   0x11d22
   17100:	pop    ecx
   17101:	pop    ecx
   17102:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17109:	jmp    0x17125
   1710b:	xor    eax,eax
   1710d:	inc    eax
   1710e:	ret    
   1710f:	mov    esp,DWORD PTR [ebp-0x18]
   17112:	mov    eax,DWORD PTR [ebp+0x8]
   17115:	mov    DWORD PTR [eax+0x8],0x4
   1711c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17123:	xor    ebx,ebx
   17125:	push   ebx
   17126:	push   0x77b58
   1712b:	call   0x11a14
   17130:	call   eax
   17132:	call   0x1dd39
   17137:	ret    0x4
   1713a:	int3   
   1713b:	int3   
   1713c:	int3   
   1713d:	int3   
   1713e:	int3   
   1713f:	int3   
   17140:	push   0xc
   17142:	push   0x77818
   17147:	call   0x1dcf4
   1714c:	xor    edi,edi
   1714e:	push   edi
   1714f:	push   edi
   17150:	push   edi
   17151:	push   edi
   17152:	push   0x77b58
   17157:	call   0x119ea
   1715c:	call   eax
   1715e:	cmp    eax,edi
   17160:	jge    0x1716e
   17162:	mov    eax,DWORD PTR [ebp+0x8]
   17165:	mov    DWORD PTR [eax+0x8],0x4
   1716c:	jmp    0x171e5
   1716e:	mov    DWORD PTR [ebp-0x4],edi
   17171:	mov    esi,DWORD PTR [ebp+0x8]
   17174:	lea    eax,[esi+0x4]
   17177:	mov    ecx,DWORD PTR ds:0x77bb4
   1717d:	push   eax
   1717e:	cmp    DWORD PTR [esi],edi
   17180:	jbe    0x171ad
   17182:	call   0x16efa
   17187:	mov    ebx,eax
   17189:	push   DWORD PTR [esi]
   1718b:	lea    eax,[esi+0xc]
   1718e:	push   eax
   1718f:	lea    ecx,[ebp-0x1c]
   17192:	call   0x13b82
   17197:	push   eax
   17198:	mov    ecx,ebx
   1719a:	call   0x13522
   1719f:	mov    ecx,DWORD PTR [ebp-0x1c]
   171a2:	cmp    ecx,edi
   171a4:	je     0x171b2
   171a6:	call   0x11d64
   171ab:	jmp    0x171b2
   171ad:	call   0x16d44
   171b2:	mov    DWORD PTR [esi+0x8],edi
   171b5:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   171bc:	jmp    0x171d8
   171be:	xor    eax,eax
   171c0:	inc    eax
   171c1:	ret    
   171c2:	mov    esp,DWORD PTR [ebp-0x18]
   171c5:	mov    eax,DWORD PTR [ebp+0x8]
   171c8:	mov    DWORD PTR [eax+0x8],0x4
   171cf:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   171d6:	xor    edi,edi
   171d8:	push   edi
   171d9:	push   0x77b58
   171de:	call   0x11a14
   171e3:	call   eax
   171e5:	call   0x1dd39
   171ea:	ret    0x4
   171ed:	int3   
   171ee:	int3   
   171ef:	int3   
   171f0:	int3   
   171f1:	int3   
   171f2:	mov    edi,edi
   171f4:	push   ebp
   171f5:	mov    ebp,esp
   171f7:	sub    esp,0x10
   171fa:	and    DWORD PTR [ebp-0xc],0x0
   171fe:	xor    ecx,ecx
   17200:	mov    DWORD PTR [ebp-0x10],0x1
   17207:	xor    eax,eax
   17209:	mov    dl,BYTE PTR [eax+0x73b70]
   1720f:	xor    BYTE PTR [ebp+ecx*1-0x10],dl
   17213:	inc    ecx
   17214:	inc    eax
   17215:	and    eax,0xf
   17218:	cmp    ecx,0x8
   1721b:	jne    0x17209
   1721d:	push   ecx
   1721e:	lea    eax,[ebp-0x10]
   17221:	push   eax
   17222:	lea    ecx,[ebp-0x8]
   17225:	mov    DWORD PTR [ebp-0x4],0x2
   1722c:	call   0x13b82
   17231:	mov    ecx,DWORD PTR ds:0x77bb4
   17237:	push   eax
   17238:	lea    eax,[ebp-0x4]
   1723b:	push   eax
   1723c:	call   0x16efa
   17241:	mov    ecx,eax
   17243:	call   0x13522
   17248:	mov    ecx,DWORD PTR [ebp-0x8]
   1724b:	test   ecx,ecx
   1724d:	je     0x17254
   1724f:	call   0x11d64
   17254:	leave  
   17255:	ret    
   17256:	int3   
   17257:	int3   
   17258:	int3   
   17259:	int3   
   1725a:	int3   
   1725b:	int3   
   1725c:	mov    edi,edi
   1725e:	push   ebp
   1725f:	mov    ebp,esp
   17261:	push   esi
   17262:	mov    esi,ecx
   17264:	lea    ecx,[esi+0x4]
   17267:	mov    DWORD PTR [esi],0x73b80
   1726d:	mov    BYTE PTR [ecx+0x8],0x0
   17271:	call   0x14a72
   17276:	lea    ecx,[esi+0x14]
   17279:	mov    BYTE PTR [ecx+0x8],0x0
   1727d:	call   0x148c0
   17282:	mov    eax,DWORD PTR [ebp+0x8]
   17285:	mov    DWORD PTR [esi+0x24],eax
   17288:	mov    eax,DWORD PTR [ebp+0xc]
   1728b:	mov    DWORD PTR [esi+0x28],eax
   1728e:	mov    eax,esi
   17290:	pop    esi
   17291:	pop    ebp
   17292:	ret    0x8
   17295:	int3   
   17296:	int3   
   17297:	int3   
   17298:	int3   
   17299:	int3   
   1729a:	mov    edi,edi
   1729c:	push   esi
   1729d:	mov    esi,ecx
   1729f:	lea    ecx,[esi+0x14]
   172a2:	mov    DWORD PTR [esi],0x73b80
   172a8:	call   0x15218
   172ad:	lea    ecx,[esi+0x4]
   172b0:	pop    esi
   172b1:	jmp    0x16c56
   172b6:	int3   
   172b7:	int3   
   172b8:	int3   
   172b9:	int3   
   172ba:	int3   
   172bb:	int3   
   172bc:	mov    edi,edi
   172be:	push   ebp
   172bf:	mov    ebp,esp
   172c1:	sub    esp,0xf4
   172c7:	push   ebx
   172c8:	push   esi
   172c9:	push   edi
   172ca:	mov    esi,ecx
   172cc:	call   0x16f40
   172d1:	push   DWORD PTR [ebp+0x8]
   172d4:	lea    eax,[ebp-0x4]
   172d7:	lea    edi,[esi+0x4]
   172da:	push   eax
   172db:	mov    ecx,edi
   172dd:	call   0x13d12
   172e2:	mov    ebx,DWORD PTR [ebp-0x4]
   172e5:	cmp    ebx,DWORD PTR [esi+0x8]
   172e8:	je     0x17333
   172ea:	mov    eax,DWORD PTR [esi+0x18]
   172ed:	lea    ecx,[ebp+0x8]
   172f0:	mov    DWORD PTR [ebp+0x8],eax
   172f3:	call   0x13cf2
   172f8:	mov    edi,DWORD PTR [eax]
   172fa:	lea    eax,[ebx+0x58]
   172fd:	add    esi,0x14
   17300:	inc    edi
   17301:	push   eax
   17302:	mov    ecx,esi
   17304:	mov    DWORD PTR [ebp+0x8],edi
   17307:	mov    DWORD PTR [ebp-0x4],eax
   1730a:	call   0x146ee
   1730f:	lea    eax,[ebp+0x8]
   17312:	push   eax
   17313:	lea    eax,[ebp-0xc]
   17316:	push   eax
   17317:	mov    ecx,esi
   17319:	call   0x1665e
   1731e:	push   DWORD PTR [ebp+0xc]
   17321:	lea    ecx,[ebx+0x18]
   17324:	call   0x12ab8
   17329:	mov    eax,DWORD PTR [ebp-0x4]
   1732c:	mov    DWORD PTR [eax],edi
   1732e:	jmp    0x173c8
   17333:	lea    ecx,[ebp-0x54]
   17336:	call   0x13ac6
   1733b:	xor    eax,eax
   1733d:	cmp    DWORD PTR [esi+0x20],eax
   17340:	je     0x17353
   17342:	mov    eax,DWORD PTR [esi+0x18]
   17345:	lea    ecx,[ebp-0x4]
   17348:	mov    DWORD PTR [ebp-0x4],eax
   1734b:	call   0x13cf2
   17350:	mov    eax,DWORD PTR [eax]
   17352:	inc    eax
   17353:	push   DWORD PTR [ebp+0xc]
   17356:	lea    ecx,[ebp-0x54]
   17359:	mov    DWORD PTR [ebp-0x4],eax
   1735c:	mov    DWORD PTR [ebp-0x14],eax
   1735f:	call   0x12ab8
   17364:	lea    eax,[ebp-0x54]
   17367:	push   eax
   17368:	push   DWORD PTR [ebp+0x8]
   1736b:	lea    ecx,[ebp-0xf4]
   17371:	call   0x13a9e
   17376:	lea    eax,[ebp-0xf4]
   1737c:	push   eax
   1737d:	lea    ecx,[ebp-0xa4]
   17383:	call   0x14400
   17388:	lea    eax,[ebp-0xa4]
   1738e:	push   eax
   1738f:	lea    eax,[ebp-0xc]
   17392:	push   eax
   17393:	mov    ecx,edi
   17395:	call   0x16c2c
   1739a:	lea    ecx,[ebp-0xa4]
   173a0:	call   0x1365c
   173a5:	lea    ecx,[ebp-0xf4]
   173ab:	call   0x1365c
   173b0:	lea    eax,[ebp-0x4]
   173b3:	push   eax
   173b4:	lea    eax,[ebp-0xc]
   173b7:	push   eax
   173b8:	lea    ecx,[esi+0x14]
   173bb:	call   0x1665e
   173c0:	lea    ecx,[ebp-0x54]
   173c3:	call   0x134ec
   173c8:	pop    edi
   173c9:	pop    esi
   173ca:	pop    ebx
   173cb:	leave  
   173cc:	ret    0x8
   173cf:	int3   
   173d0:	int3   
   173d1:	int3   
   173d2:	int3   
   173d3:	int3   
   173d4:	mov    edi,edi
   173d6:	push   ebp
   173d7:	mov    ebp,esp
   173d9:	sub    esp,0x10
   173dc:	call   0x1a3ee
   173e1:	test   al,al
   173e3:	jne    0x173ed
   173e5:	mov    eax,DWORD PTR [ebp+0x8]
   173e8:	jmp    0x17481
   173ed:	push   esi
   173ee:	mov    esi,DWORD PTR [ebp+0x8]
   173f1:	push   0xffffffff
   173f3:	push   esi
   173f4:	lea    ecx,[ebp-0x8]
   173f7:	call   0x12bfe
   173fc:	mov    ecx,DWORD PTR ds:0x788a0
   17402:	lea    eax,[ebp-0x8]
   17405:	push   eax
   17406:	lea    eax,[ebp+0x8]
   17409:	push   eax
   1740a:	call   0x1407a
   1740f:	mov    eax,DWORD PTR [ebp+0x8]
   17412:	mov    ecx,DWORD PTR ds:0x788a0
   17418:	cmp    eax,DWORD PTR [ecx+0x4]
   1741b:	jne    0x1744c
   1741d:	lea    eax,[ebp-0x8]
   17420:	push   eax
   17421:	lea    ecx,[ebp-0x10]
   17424:	call   0x13698
   17429:	mov    ecx,DWORD PTR ds:0x788a0
   1742f:	lea    eax,[ebp-0x10]
   17432:	push   eax
   17433:	lea    eax,[ebp-0x8]
   17436:	push   eax
   17437:	call   0x16ff2
   1743c:	mov    ecx,eax
   1743e:	call   0x12ba2
   17443:	push   DWORD PTR [ebp-0x10]
   17446:	call   0x11d22
   1744b:	pop    ecx
   1744c:	mov    ecx,DWORD PTR ds:0x788a0
   17452:	lea    eax,[ebp-0x8]
   17455:	push   eax
   17456:	lea    eax,[ebp+0x8]
   17459:	push   eax
   1745a:	call   0x1407a
   1745f:	mov    eax,DWORD PTR [ebp+0x8]
   17462:	mov    ecx,DWORD PTR ds:0x788a0
   17468:	cmp    eax,DWORD PTR [ecx+0x4]
   1746b:	je     0x17470
   1746d:	mov    esi,DWORD PTR [eax+0x14]
   17470:	call   0x1a40a
   17475:	push   DWORD PTR [ebp-0x8]
   17478:	call   0x11d22
   1747d:	pop    ecx
   1747e:	mov    eax,esi
   17480:	pop    esi
   17481:	leave  
   17482:	ret    0x4
   17485:	int3   
   17486:	int3   
   17487:	int3   
   17488:	int3   
   17489:	int3   
   1748a:	mov    edi,edi
   1748c:	push   ebp
   1748d:	mov    ebp,esp
   1748f:	sub    esp,0x10
   17492:	push   esi
   17493:	call   0x1a3ee
   17498:	test   al,al
   1749a:	jne    0x174a4
   1749c:	mov    eax,DWORD PTR [ebp+0x8]
   1749f:	jmp    0x17550
   174a4:	push   DWORD PTR [ebp+0xc]
   174a7:	lea    ecx,[ebp-0x8]
   174aa:	push   DWORD PTR [ebp+0x8]
   174ad:	call   0x13678
   174b2:	mov    ecx,DWORD PTR ds:0x788a0
   174b8:	lea    eax,[ebp-0x8]
   174bb:	push   eax
   174bc:	lea    eax,[ebp+0xc]
   174bf:	push   eax
   174c0:	call   0x1407a
   174c5:	mov    esi,DWORD PTR [ebp+0xc]
   174c8:	mov    eax,ds:0x788a0
   174cd:	cmp    esi,DWORD PTR [eax+0x4]
   174d0:	jne    0x1750b
   174d2:	push   ecx
   174d3:	push   ecx
   174d4:	lea    eax,[ebp-0x8]
   174d7:	mov    ecx,esp
   174d9:	push   eax
   174da:	call   0x13698
   174df:	lea    eax,[ebp-0x10]
   174e2:	push   eax
   174e3:	call   0x136ba
   174e8:	mov    ecx,DWORD PTR ds:0x788a0
   174ee:	lea    eax,[ebp-0x10]
   174f1:	push   eax
   174f2:	lea    eax,[ebp-0x8]
   174f5:	push   eax
   174f6:	call   0x16ff2
   174fb:	mov    ecx,eax
   174fd:	call   0x12ba2
   17502:	push   DWORD PTR [ebp-0x10]
   17505:	call   0x11d22
   1750a:	pop    ecx
   1750b:	mov    eax,DWORD PTR [ebp+0x10]
   1750e:	movzx  eax,BYTE PTR [eax]
   17511:	cmp    eax,0x100
   17516:	jge    0x1752e
   17518:	mov    ecx,DWORD PTR ds:0x788a0
   1751e:	lea    eax,[ebp-0x8]
   17521:	push   eax
   17522:	lea    eax,[ebp+0xc]
   17525:	push   eax
   17526:	call   0x1407a
   1752b:	mov    esi,DWORD PTR [ebp+0xc]
   1752e:	mov    eax,ds:0x788a0
   17533:	cmp    esi,DWORD PTR [eax+0x4]
   17536:	je     0x1753d
   17538:	mov    esi,DWORD PTR [esi+0x14]
   1753b:	jmp    0x17540
   1753d:	mov    esi,DWORD PTR [ebp+0x8]
   17540:	call   0x1a40a
   17545:	push   DWORD PTR [ebp-0x8]
   17548:	call   0x11d22
   1754d:	pop    ecx
   1754e:	mov    eax,esi
   17550:	pop    esi
   17551:	leave  
   17552:	ret    0xc
   17555:	int3   
   17556:	int3   
   17557:	int3   
   17558:	int3   
   17559:	int3   
   1755a:	mov    edi,edi
   1755c:	push   ebp
   1755d:	mov    ebp,esp
   1755f:	sub    esp,0x10
   17562:	push   esi
   17563:	call   0x1a3ee
   17568:	test   al,al
   1756a:	jne    0x17574
   1756c:	mov    eax,DWORD PTR [ebp+0x8]
   1756f:	jmp    0x17620
   17574:	push   DWORD PTR [ebp+0xc]
   17577:	lea    ecx,[ebp-0x8]
   1757a:	push   DWORD PTR [ebp+0x8]
   1757d:	call   0x1361a
   17582:	mov    ecx,DWORD PTR ds:0x788a4
   17588:	lea    eax,[ebp-0x8]
   1758b:	push   eax
   1758c:	lea    eax,[ebp+0xc]
   1758f:	push   eax
   17590:	call   0x13c68
   17595:	mov    esi,DWORD PTR [ebp+0xc]
   17598:	mov    eax,ds:0x788a4
   1759d:	cmp    esi,DWORD PTR [eax+0x4]
   175a0:	jne    0x175db
   175a2:	push   ecx
   175a3:	push   ecx
   175a4:	lea    eax,[ebp-0x8]
   175a7:	mov    ecx,esp
   175a9:	push   eax
   175aa:	call   0x1363a
   175af:	lea    eax,[ebp-0x10]
   175b2:	push   eax
   175b3:	call   0x136fe
   175b8:	mov    ecx,DWORD PTR ds:0x788a4
   175be:	lea    eax,[ebp-0x10]
   175c1:	push   eax
   175c2:	lea    eax,[ebp-0x8]
   175c5:	push   eax
   175c6:	call   0x16e8a
   175cb:	mov    ecx,eax
   175cd:	call   0x12a28
   175d2:	push   DWORD PTR [ebp-0x10]
   175d5:	call   0x11d22
   175da:	pop    ecx
   175db:	mov    eax,DWORD PTR [ebp+0x10]
   175de:	movzx  eax,BYTE PTR [eax]
   175e1:	cmp    eax,0x100
   175e6:	jge    0x175fe
   175e8:	mov    ecx,DWORD PTR ds:0x788a4
   175ee:	lea    eax,[ebp-0x8]
   175f1:	push   eax
   175f2:	lea    eax,[ebp+0xc]
   175f5:	push   eax
   175f6:	call   0x13c68
   175fb:	mov    esi,DWORD PTR [ebp+0xc]
   175fe:	mov    eax,ds:0x788a4
   17603:	cmp    esi,DWORD PTR [eax+0x4]
   17606:	je     0x1760d
   17608:	mov    esi,DWORD PTR [esi+0x14]
   1760b:	jmp    0x17610
   1760d:	mov    esi,DWORD PTR [ebp+0x8]
   17610:	call   0x1a40a
   17615:	push   DWORD PTR [ebp-0x8]
   17618:	call   0x11d22
   1761d:	pop    ecx
   1761e:	mov    eax,esi
   17620:	pop    esi
   17621:	leave  
   17622:	ret    0xc
   17625:	int3   
   17626:	int3   
   17627:	int3   
   17628:	int3   
   17629:	int3   
   1762a:	mov    edi,edi
   1762c:	push   ebp
   1762d:	mov    ebp,esp
   1762f:	push   esi
   17630:	mov    esi,ecx
   17632:	call   0x1729a
   17637:	test   BYTE PTR [ebp+0x8],0x1
   1763b:	je     0x17644
   1763d:	push   esi
   1763e:	call   0x11d22
   17643:	pop    ecx
   17644:	mov    eax,esi
   17646:	pop    esi
   17647:	pop    ebp
   17648:	ret    0x4
   1764b:	int3   
   1764c:	int3   
   1764d:	int3   
   1764e:	int3   
   1764f:	int3   
   17650:	mov    edi,edi
   17652:	push   ebp
   17653:	mov    ebp,esp
   17655:	push   esi
   17656:	push   DWORD PTR [ebp+0xc]
   17659:	mov    esi,ecx
   1765b:	push   DWORD PTR [ebp+0x8]
   1765e:	call   0x1725c
   17663:	mov    eax,esi
   17665:	pop    esi
   17666:	pop    ebp
   17667:	ret    0x8
   1766a:	int3   
   1766b:	int3   
   1766c:	int3   
   1766d:	int3   
   1766e:	int3   
   1766f:	int3   
   17670:	mov    edi,edi
   17672:	push   ebp
   17673:	mov    ebp,esp
   17675:	sub    esp,0x838
   1767b:	mov    eax,ds:0x77b1c
   17680:	xor    eax,ebp
   17682:	mov    DWORD PTR [ebp-0x4],eax
   17685:	mov    eax,DWORD PTR [ebp+0x8]
   17688:	push   ebx
   17689:	push   esi
   1768a:	push   edi
   1768b:	mov    DWORD PTR [ebp-0x808],eax
   17691:	xor    eax,eax
   17693:	push   0x7fe
   17698:	mov    WORD PTR [ebp-0x804],ax
   1769f:	xor    ebx,ebx
   176a1:	lea    eax,[ebp-0x802]
   176a7:	push   ebx
   176a8:	push   eax
   176a9:	call   0x1dcb6
   176ae:	mov    eax,0x77cb8
   176b3:	add    esp,0xc
   176b6:	mov    edx,eax
   176b8:	mov    cx,WORD PTR [eax]
   176bb:	inc    eax
   176bc:	inc    eax
   176bd:	cmp    cx,bx
   176c0:	jne    0x176b8
   176c2:	sub    eax,edx
   176c4:	lea    edi,[ebp-0x804]
   176ca:	dec    edi
   176cb:	dec    edi
   176cc:	mov    cx,WORD PTR [edi+0x2]
   176d0:	inc    edi
   176d1:	inc    edi
   176d2:	cmp    cx,bx
   176d5:	jne    0x176cc
   176d7:	mov    ecx,eax
   176d9:	shr    ecx,0x2
   176dc:	mov    esi,edx
   176de:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   176e0:	mov    ecx,eax
   176e2:	mov    eax,DWORD PTR [ebp-0x808]
   176e8:	and    ecx,0x3
   176eb:	add    eax,0x400
   176f0:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   176f2:	mov    edx,eax
   176f4:	mov    cx,WORD PTR [eax]
   176f7:	inc    eax
   176f8:	inc    eax
   176f9:	cmp    cx,bx
   176fc:	jne    0x176f4
   176fe:	sub    eax,edx
   17700:	lea    edi,[ebp-0x804]
   17706:	dec    edi
   17707:	dec    edi
   17708:	mov    cx,WORD PTR [edi+0x2]
   1770c:	inc    edi
   1770d:	inc    edi
   1770e:	cmp    cx,bx
   17711:	jne    0x17708
   17713:	mov    ecx,eax
   17715:	shr    ecx,0x2
   17718:	mov    esi,edx
   1771a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1771c:	mov    ecx,eax
   1771e:	and    ecx,0x3
   17721:	lea    eax,[ebp-0x804]
   17727:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17729:	mov    DWORD PTR [ebp-0x818],eax
   1772f:	lea    ecx,[eax+0x2]
   17732:	mov    dx,WORD PTR [eax]
   17735:	inc    eax
   17736:	inc    eax
   17737:	cmp    dx,bx
   1773a:	jne    0x17732
   1773c:	sub    eax,ecx
   1773e:	sar    eax,1
   17740:	add    eax,eax
   17742:	mov    WORD PTR [ebp-0x81a],ax
   17749:	mov    WORD PTR [ebp-0x81c],ax
   17750:	lea    eax,[ebp-0x81c]
   17756:	mov    DWORD PTR [ebp-0x82c],eax
   1775c:	lea    eax,[ebp-0x838]
   17762:	push   eax
   17763:	xor    edi,edi
   17765:	inc    edi
   17766:	push   edi
   17767:	push   ebx
   17768:	push   ebx
   17769:	lea    eax,[ebp-0x834]
   1776f:	push   eax
   17770:	push   0xf003f
   17775:	lea    eax,[ebp-0x80c]
   1777b:	push   eax
   1777c:	mov    DWORD PTR [ebp-0x834],0x18
   17786:	mov    DWORD PTR [ebp-0x830],ebx
   1778c:	mov    DWORD PTR [ebp-0x828],0x40
   17796:	mov    DWORD PTR [ebp-0x824],ebx
   1779c:	mov    DWORD PTR [ebp-0x820],ebx
   177a2:	call   0x11720
   177a7:	call   eax
   177a9:	test   eax,eax
   177ab:	jl     0x1793b
   177b1:	push   0x1e922
   177b6:	push   0x9
   177b8:	push   0x1e90e
   177bd:	call   0x1748a
   177c2:	mov    DWORD PTR [ebp-0x810],eax
   177c8:	lea    edx,[eax+0x2]
   177cb:	mov    cx,WORD PTR [eax]
   177ce:	inc    eax
   177cf:	inc    eax
   177d0:	cmp    cx,bx
   177d3:	jne    0x177cb
   177d5:	sub    eax,edx
   177d7:	sar    eax,1
   177d9:	add    eax,eax
   177db:	mov    WORD PTR [ebp-0x812],ax
   177e2:	mov    WORD PTR [ebp-0x814],ax
   177e9:	mov    eax,DWORD PTR [ebp-0x808]
   177ef:	lea    ecx,[eax+0x2]
   177f2:	mov    dx,WORD PTR [eax]
   177f5:	inc    eax
   177f6:	inc    eax
   177f7:	cmp    dx,bx
   177fa:	jne    0x177f2
   177fc:	sub    eax,ecx
   177fe:	sar    eax,1
   17800:	inc    eax
   17801:	movzx  eax,ax
   17804:	add    eax,eax
   17806:	push   eax
   17807:	push   DWORD PTR [ebp-0x808]
   1780d:	lea    eax,[ebp-0x814]
   17813:	push   edi
   17814:	push   ebx
   17815:	push   eax
   17816:	push   DWORD PTR [ebp-0x80c]
   1781c:	call   0x11402
   17821:	call   eax
   17823:	test   eax,eax
   17825:	jl     0x1793b
   1782b:	push   0x1e8d0
   17830:	push   0x5
   17832:	push   0x1e8c4
   17837:	mov    DWORD PTR [ebp-0x808],0x3
   17841:	call   0x1748a
   17846:	mov    DWORD PTR [ebp-0x810],eax
   1784c:	lea    edx,[eax+0x2]
   1784f:	mov    cx,WORD PTR [eax]
   17852:	inc    eax
   17853:	inc    eax
   17854:	cmp    cx,bx
   17857:	jne    0x1784f
   17859:	sub    eax,edx
   1785b:	push   0x4
   1785d:	sar    eax,1
   1785f:	pop    esi
   17860:	add    eax,eax
   17862:	push   esi
   17863:	mov    WORD PTR [ebp-0x812],ax
   1786a:	mov    WORD PTR [ebp-0x814],ax
   17871:	lea    eax,[ebp-0x808]
   17877:	push   eax
   17878:	push   esi
   17879:	push   ebx
   1787a:	lea    eax,[ebp-0x814]
   17880:	push   eax
   17881:	push   DWORD PTR [ebp-0x80c]
   17887:	call   0x11402
   1788c:	call   eax
   1788e:	test   eax,eax
   17890:	jl     0x1793b
   17896:	push   0x1e8a0
   1789b:	push   esi
   1789c:	push   0x1e896
   178a1:	mov    DWORD PTR [ebp-0x808],edi
   178a7:	call   0x1748a
   178ac:	mov    DWORD PTR [ebp-0x810],eax
   178b2:	lea    ecx,[eax+0x2]
   178b5:	mov    dx,WORD PTR [eax]
   178b8:	inc    eax
   178b9:	inc    eax
   178ba:	cmp    dx,bx
   178bd:	jne    0x178b5
   178bf:	sub    eax,ecx
   178c1:	sar    eax,1
   178c3:	add    eax,eax
   178c5:	push   esi
   178c6:	mov    WORD PTR [ebp-0x812],ax
   178cd:	mov    WORD PTR [ebp-0x814],ax
   178d4:	lea    eax,[ebp-0x808]
   178da:	push   eax
   178db:	push   esi
   178dc:	push   ebx
   178dd:	lea    eax,[ebp-0x814]
   178e3:	push   eax
   178e4:	push   DWORD PTR [ebp-0x80c]
   178ea:	call   0x11402
   178ef:	call   eax
   178f1:	test   eax,eax
   178f3:	jl     0x1793b
   178f5:	lea    eax,[ebp-0x81c]
   178fb:	push   eax
   178fc:	call   0x116f6
   17901:	call   eax
   17903:	test   eax,eax
   17905:	jl     0x1793b
   17907:	lea    eax,[ebp-0x804]
   1790d:	push   eax
   1790e:	push   DWORD PTR [ebp-0x80c]
   17914:	call   0x12140
   17919:	test   al,al
   1791b:	je     0x1792e
   1791d:	push   DWORD PTR [ebp-0x80c]
   17923:	call   0x113d8
   17928:	call   eax
   1792a:	test   eax,eax
   1792c:	jl     0x1793b
   1792e:	push   DWORD PTR [ebp-0x80c]
   17934:	call   0x11552
   17939:	call   eax
   1793b:	mov    ecx,DWORD PTR [ebp-0x4]
   1793e:	pop    edi
   1793f:	pop    esi
   17940:	xor    ecx,ebp
   17942:	pop    ebx
   17943:	call   0x1dc5d
   17948:	leave  
   17949:	ret    0x4
   1794c:	int3   
   1794d:	int3   
   1794e:	int3   
   1794f:	int3   
   17950:	int3   
   17951:	int3   
   17952:	mov    edi,edi
   17954:	push   ebp
   17955:	mov    ebp,esp
   17957:	sub    esp,0x44
   1795a:	mov    eax,DWORD PTR [ebp+0xc]
   1795d:	mov    eax,DWORD PTR [eax]
   1795f:	push   esi
   17960:	mov    DWORD PTR [ebp-0x2c],eax
   17963:	lea    eax,[ebp-0x2c]
   17966:	push   eax
   17967:	lea    eax,[ebp-0x44]
   1796a:	push   eax
   1796b:	xor    esi,esi
   1796d:	push   0x1f0fff
   17972:	lea    eax,[ebp-0x10]
   17975:	push   eax
   17976:	mov    DWORD PTR [ebp-0x44],0x18
   1797d:	mov    DWORD PTR [ebp-0x40],esi
   17980:	mov    DWORD PTR [ebp-0x38],0x200
   17987:	mov    DWORD PTR [ebp-0x3c],esi
   1798a:	mov    DWORD PTR [ebp-0x34],esi
   1798d:	mov    DWORD PTR [ebp-0x30],esi
   17990:	mov    DWORD PTR [ebp-0x28],esi
   17993:	mov    DWORD PTR [ebp-0x10],esi
   17996:	call   0x1125e
   1799b:	call   eax
   1799d:	test   eax,eax
   1799f:	jl     0x17c13
   179a5:	push   ebx
   179a6:	push   edi
   179a7:	push   0x40
   179a9:	mov    edi,0x1000
   179ae:	push   edi
   179af:	lea    eax,[ebp-0x14]
   179b2:	push   eax
   179b3:	push   esi
   179b4:	lea    eax,[ebp-0x8]
   179b7:	push   eax
   179b8:	push   DWORD PTR [ebp-0x10]
   179bb:	mov    ebx,0x400
   179c0:	mov    DWORD PTR [ebp-0x8],esi
   179c3:	mov    DWORD PTR [ebp-0x14],ebx
   179c6:	call   0x11288
   179cb:	call   eax
   179cd:	test   eax,eax
   179cf:	jl     0x179da
   179d1:	mov    eax,DWORD PTR [ebp-0x8]
   179d4:	mov    ecx,DWORD PTR [ebp+0xc]
   179d7:	mov    DWORD PTR [ecx+0x8],eax
   179da:	push   0x4
   179dc:	push   edi
   179dd:	lea    eax,[ebp-0x14]
   179e0:	push   eax
   179e1:	push   esi
   179e2:	lea    eax,[ebp-0x18]
   179e5:	push   eax
   179e6:	push   DWORD PTR [ebp-0x10]
   179e9:	mov    DWORD PTR [ebp-0x18],esi
   179ec:	mov    DWORD PTR [ebp-0x14],ebx
   179ef:	call   0x11288
   179f4:	call   eax
   179f6:	test   eax,eax
   179f8:	jl     0x17a03
   179fa:	mov    eax,DWORD PTR [ebp-0x18]
   179fd:	mov    ecx,DWORD PTR [ebp+0xc]
   17a00:	mov    DWORD PTR [ecx+0xc],eax
   17a03:	lea    eax,[ebp-0x1c]
   17a06:	push   eax
   17a07:	push   DWORD PTR [ebp-0x2c]
   17a0a:	call   0x11a3e
   17a0f:	call   eax
   17a11:	test   eax,eax
   17a13:	jl     0x17c11
   17a19:	push   DWORD PTR [ebp-0x1c]
   17a1c:	call   0x1179e
   17a21:	call   eax
   17a23:	mov    ebx,DWORD PTR [ebp-0x8]
   17a26:	mov    DWORD PTR [ebp-0x4],esi
   17a29:	cmp    ebx,esi
   17a2b:	je     0x17bf7
   17a31:	mov    edi,DWORD PTR [ebp-0x18]
   17a34:	push   0x40
   17a36:	push   0x77a08
   17a3b:	push   edi
   17a3c:	mov    DWORD PTR [ebp-0xc],edi
   17a3f:	call   0x19a6e
   17a44:	push   0x1e958
   17a49:	push   0x4
   17a4b:	push   0x1e94e
   17a50:	call   0x1748a
   17a55:	mov    edx,eax
   17a57:	mov    cx,WORD PTR [eax]
   17a5a:	inc    eax
   17a5b:	inc    eax
   17a5c:	cmp    cx,si
   17a5f:	jne    0x17a57
   17a61:	sub    eax,edx
   17a63:	dec    edi
   17a64:	dec    edi
   17a65:	mov    cx,WORD PTR [edi+0x2]
   17a69:	inc    edi
   17a6a:	inc    edi
   17a6b:	cmp    cx,si
   17a6e:	jne    0x17a65
   17a70:	mov    ecx,eax
   17a72:	shr    ecx,0x2
   17a75:	mov    esi,edx
   17a77:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17a79:	mov    ecx,eax
   17a7b:	push   0x60
   17a7d:	and    ecx,0x3
   17a80:	push   ebx
   17a81:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17a83:	mov    DWORD PTR [ebp-0x20],ebx
   17a86:	call   0x19a20
   17a8b:	push   0x68
   17a8d:	push   eax
   17a8e:	call   0x19a20
   17a93:	push   DWORD PTR [ebp-0xc]
   17a96:	push   eax
   17a97:	call   0x19a38
   17a9c:	push   0xb8
   17aa1:	push   eax
   17aa2:	call   0x19a20
   17aa7:	push   DWORD PTR ds:0x78568
   17aad:	push   eax
   17aae:	call   0x19a38
   17ab3:	push   0xc00b
   17ab8:	push   eax
   17ab9:	call   0x19a52
   17abe:	push   0x74
   17ac0:	push   eax
   17ac1:	call   0x19a20
   17ac6:	push   0x2
   17ac8:	push   eax
   17ac9:	call   0x19a20
   17ace:	push   0xd0ff
   17ad3:	push   eax
   17ad4:	call   0x19a52
   17ad9:	push   0x61
   17adb:	push   eax
   17adc:	call   0x19a20
   17ae1:	mov    ebx,DWORD PTR [ebp+0x8]
   17ae4:	mov    edi,eax
   17ae6:	mov    esi,ebx
   17ae8:	push   0x0
   17aea:	push   esi
   17aeb:	push   edi
   17aec:	call   0x1a1d4
   17af1:	mov    ecx,eax
   17af3:	sub    ecx,esi
   17af5:	add    DWORD PTR [ebp-0x4],ecx
   17af8:	add    edi,ecx
   17afa:	cmp    DWORD PTR [ebp-0x4],0x5
   17afe:	mov    esi,eax
   17b00:	jb     0x17ae8
   17b02:	mov    eax,DWORD PTR [ebp-0x4]
   17b05:	push   edi
   17b06:	add    eax,ebx
   17b08:	push   eax
   17b09:	call   0x19a96
   17b0e:	mov    eax,DWORD PTR [ebp-0x8]
   17b11:	test   eax,eax
   17b13:	je     0x17bf7
   17b19:	add    eax,0x400
   17b1e:	lea    ecx,[eax-0x10]
   17b21:	mov    DWORD PTR [ebp-0x24],ecx
   17b24:	mov    ecx,DWORD PTR [ebp-0x4]
   17b27:	lea    esi,[eax-0xc]
   17b2a:	push   esi
   17b2b:	lea    edi,[eax-0x4]
   17b2e:	lea    ebx,[eax-0x8]
   17b31:	shr    ecx,0x2
   17b34:	lea    ecx,[ecx*4+0x14]
   17b3b:	push   0x40
   17b3d:	sub    eax,ecx
   17b3f:	push   ebx
   17b40:	mov    DWORD PTR [ebp-0xc],eax
   17b43:	mov    eax,DWORD PTR [ebp+0x8]
   17b46:	mov    DWORD PTR [edi],eax
   17b48:	push   edi
   17b49:	mov    DWORD PTR [ebx],0x5
   17b4f:	and    DWORD PTR [esi],0x0
   17b52:	push   0xffffffff
   17b54:	call   DWORD PTR ds:0x784e4
   17b5a:	test   eax,eax
   17b5c:	jl     0x17bc1
   17b5e:	push   DWORD PTR [ebp-0x4]
   17b61:	push   0x90
   17b66:	push   DWORD PTR [ebp-0xc]
   17b69:	call   0x1dcb6
   17b6e:	mov    eax,DWORD PTR [ebp-0x20]
   17b71:	sub    eax,DWORD PTR [ebp+0x8]
   17b74:	add    esp,0xc
   17b77:	sub    eax,0x5
   17b7a:	push   eax
   17b7b:	mov    eax,DWORD PTR [ebp-0xc]
   17b7e:	inc    eax
   17b7f:	push   eax
   17b80:	call   0x19a38
   17b85:	push   0xe9
   17b8a:	push   DWORD PTR [ebp-0xc]
   17b8d:	call   0x19a20
   17b92:	mov    eax,DWORD PTR [ebp-0x24]
   17b95:	and    DWORD PTR [eax],0x0
   17b98:	push   eax
   17b99:	push   DWORD PTR [ebp-0x4]
   17b9c:	push   DWORD PTR [ebp-0xc]
   17b9f:	push   DWORD PTR [ebp+0x8]
   17ba2:	push   0xffffffff
   17ba4:	call   DWORD PTR ds:0x784d8
   17baa:	mov    eax,DWORD PTR [ebp+0xc]
   17bad:	mov    BYTE PTR [eax+0x10],0x1
   17bb1:	lea    eax,[ebp-0x20]
   17bb4:	push   eax
   17bb5:	push   DWORD PTR [esi]
   17bb7:	push   ebx
   17bb8:	push   edi
   17bb9:	push   0xffffffff
   17bbb:	call   DWORD PTR ds:0x784e4
   17bc1:	mov    esi,DWORD PTR [ebp-0x8]
   17bc4:	test   esi,esi
   17bc6:	je     0x17bf7
   17bc8:	lea    eax,[esi+0x400]
   17bce:	lea    ecx,[eax-0x4]
   17bd1:	lea    edx,[eax-0x8]
   17bd4:	add    eax,0xfffffff4
   17bd7:	push   eax
   17bd8:	push   0x20
   17bda:	push   edx
   17bdb:	mov    DWORD PTR [ecx],esi
   17bdd:	push   ecx
   17bde:	mov    DWORD PTR [edx],0x400
   17be4:	and    DWORD PTR [eax],0x0
   17be7:	push   0xffffffff
   17be9:	call   DWORD PTR ds:0x784e4
   17bef:	test   eax,eax
   17bf1:	jge    0x17bf7
   17bf3:	and    DWORD PTR [ebp-0x8],0x0
   17bf7:	call   0x11774
   17bfc:	call   eax
   17bfe:	mov    ecx,DWORD PTR [ebp-0x1c]
   17c01:	call   DWORD PTR ds:0x1f450
   17c07:	push   DWORD PTR [ebp-0x10]
   17c0a:	call   0x11552
   17c0f:	call   eax
   17c11:	pop    edi
   17c12:	pop    ebx
   17c13:	pop    esi
   17c14:	leave  
   17c15:	ret    0x8
   17c18:	int3   
   17c19:	int3   
   17c1a:	int3   
   17c1b:	int3   
   17c1c:	int3   
   17c1d:	int3   
   17c1e:	mov    edi,edi
   17c20:	push   ebp
   17c21:	mov    ebp,esp
   17c23:	cmp    DWORD PTR ds:0x78568,0x0
   17c2a:	push   esi
   17c2b:	mov    esi,DWORD PTR [ebp+0x10]
   17c2e:	jne    0x17cf9
   17c34:	push   0x1eb24
   17c39:	push   0xc
   17c3b:	push   0x1eb0a
   17c40:	call   0x1748a
   17c45:	push   eax
   17c46:	push   DWORD PTR [ebp+0x8]
   17c49:	call   0x11e4a
   17c4e:	test   al,al
   17c50:	je     0x17cf9
   17c56:	mov    eax,DWORD PTR [esi+0x4]
   17c59:	push   0x1ead2
   17c5e:	push   0xc
   17c60:	push   0x1eac4
   17c65:	mov    ds:0x78560,eax
   17c6a:	call   0x1755a
   17c6f:	push   eax
   17c70:	push   DWORD PTR [esi+0x4]
   17c73:	call   0x123a4
   17c78:	push   0x1ea90
   17c7d:	push   0xc
   17c7f:	push   0x1ea82
   17c84:	mov    ds:0x78568,eax
   17c89:	call   0x1755a
   17c8e:	push   eax
   17c8f:	push   DWORD PTR [esi+0x4]
   17c92:	call   0x123a4
   17c97:	push   0x1ea48
   17c9c:	push   0xc
   17c9e:	push   0x1ea3a
   17ca3:	mov    ds:0x7856c,eax
   17ca8:	call   0x1755a
   17cad:	push   eax
   17cae:	push   DWORD PTR [esi+0x4]
   17cb1:	call   0x123a4
   17cb6:	push   0x1ea0a
   17cbb:	push   0x5
   17cbd:	push   0x1ea04
   17cc2:	mov    ds:0x78570,eax
   17cc7:	call   0x1755a
   17ccc:	push   eax
   17ccd:	push   DWORD PTR [esi+0x4]
   17cd0:	call   0x123a4
   17cd5:	push   0x1e9ca
   17cda:	push   0x4
   17cdc:	push   0x1e9c4
   17ce1:	mov    ds:0x78574,eax
   17ce6:	call   0x1755a
   17ceb:	push   eax
   17cec:	push   DWORD PTR [esi+0x4]
   17cef:	call   0x123a4
   17cf4:	mov    ds:0x78578,eax
   17cf9:	cmp    DWORD PTR ds:0x78564,0x0
   17d00:	jne    0x17d28
   17d02:	push   0x1e996
   17d07:	push   0x9
   17d09:	push   0x1e982
   17d0e:	call   0x1748a
   17d13:	push   eax
   17d14:	push   DWORD PTR [ebp+0x8]
   17d17:	call   0x11e4a
   17d1c:	test   al,al
   17d1e:	je     0x17d28
   17d20:	mov    eax,DWORD PTR [esi+0x4]
   17d23:	mov    ds:0x78564,eax
   17d28:	pop    esi
   17d29:	pop    ebp
   17d2a:	ret    0xc
   17d2d:	int3   
   17d2e:	int3   
   17d2f:	int3   
   17d30:	int3   
   17d31:	int3   
   17d32:	mov    edi,edi
   17d34:	push   ebp
   17d35:	mov    ebp,esp
   17d37:	sub    esp,0x4c
   17d3a:	push   ebx
   17d3b:	push   esi
   17d3c:	push   edi
   17d3d:	push   DWORD PTR [ebp+0xc]
   17d40:	push   DWORD PTR [ebp+0x8]
   17d43:	call   DWORD PTR ds:0x784f0
   17d49:	mov    DWORD PTR [ebp-0x8],eax
   17d4c:	xor    eax,eax
   17d4e:	xor    ebx,ebx
   17d50:	mov    DWORD PTR [ebp-0x30],ebx
   17d53:	lea    edi,[ebp-0x2c]
   17d56:	stos   DWORD PTR es:[edi],eax
   17d57:	stos   DWORD PTR es:[edi],eax
   17d58:	stos   DWORD PTR es:[edi],eax
   17d59:	stos   DWORD PTR es:[edi],eax
   17d5a:	xor    eax,eax
   17d5c:	mov    DWORD PTR [ebp-0x1c],ebx
   17d5f:	lea    edi,[ebp-0x18]
   17d62:	stos   DWORD PTR es:[edi],eax
   17d63:	stos   DWORD PTR es:[edi],eax
   17d64:	stos   DWORD PTR es:[edi],eax
   17d65:	stos   DWORD PTR es:[edi],eax
   17d66:	lea    eax,[ebp-0x30]
   17d69:	push   eax
   17d6a:	push   ebx
   17d6b:	call   0x11ed8
   17d70:	mov    BYTE PTR [ebp+0xf],al
   17d73:	lea    eax,[ebp-0x1c]
   17d76:	push   eax
   17d77:	push   0x1
   17d79:	call   0x11ed8
   17d7e:	mov    BYTE PTR [ebp-0x1],al
   17d81:	cmp    BYTE PTR [ebp+0xf],bl
   17d84:	je     0x17de5
   17d86:	mov    esi,DWORD PTR [ebp-0x30]
   17d89:	cmp    esi,ebx
   17d8b:	je     0x17de5
   17d8d:	push   0x6
   17d8f:	pop    ecx
   17d90:	push   ebx
   17d91:	xor    eax,eax
   17d93:	mov    DWORD PTR [ebp-0x4c],ebx
   17d96:	lea    edi,[ebp-0x48]
   17d99:	push   0x1c
   17d9b:	rep stos DWORD PTR es:[edi],eax
   17d9d:	lea    eax,[ebp-0x4c]
   17da0:	push   eax
   17da1:	push   ebx
   17da2:	push   DWORD PTR [ebp+0x8]
   17da5:	call   0x11528
   17daa:	call   eax
   17dac:	cmp    DWORD PTR [ebp-0x44],esi
   17daf:	jne    0x17de5
   17db1:	push   ebx
   17db2:	push   0x4
   17db4:	lea    eax,[ebp+0xc]
   17db7:	push   eax
   17db8:	push   0x9
   17dba:	push   DWORD PTR [ebp+0x8]
   17dbd:	mov    DWORD PTR [ebp+0xc],ebx
   17dc0:	call   0x11528
   17dc5:	call   eax
   17dc7:	test   eax,eax
   17dc9:	jge    0x17dce
   17dcb:	mov    DWORD PTR [ebp+0xc],ebx
   17dce:	cmp    DWORD PTR [ebp+0xc],ebx
   17dd1:	je     0x17de5
   17dd3:	lea    eax,[ebp-0x30]
   17dd6:	push   eax
   17dd7:	push   DWORD PTR [ebp+0xc]
   17dda:	call   0x17952
   17ddf:	push   ebx
   17de0:	call   0x11f72
   17de5:	cmp    BYTE PTR [ebp-0x1],bl
   17de8:	je     0x17e53
   17dea:	mov    esi,DWORD PTR [ebp-0x1c]
   17ded:	cmp    esi,ebx
   17def:	je     0x17e53
   17df1:	cmp    BYTE PTR [ebp-0xc],bl
   17df4:	jne    0x17e53
   17df6:	push   0x6
   17df8:	pop    ecx
   17df9:	push   ebx
   17dfa:	xor    eax,eax
   17dfc:	mov    DWORD PTR [ebp-0x4c],ebx
   17dff:	lea    edi,[ebp-0x48]
   17e02:	push   0x1c
   17e04:	rep stos DWORD PTR es:[edi],eax
   17e06:	lea    eax,[ebp-0x4c]
   17e09:	push   eax
   17e0a:	push   ebx
   17e0b:	push   DWORD PTR [ebp+0x8]
   17e0e:	call   0x11528
   17e13:	call   eax
   17e15:	cmp    DWORD PTR [ebp-0x44],esi
   17e18:	jne    0x17e53
   17e1a:	push   ebx
   17e1b:	push   0x4
   17e1d:	lea    eax,[ebp+0xc]
   17e20:	push   eax
   17e21:	push   0x9
   17e23:	push   DWORD PTR [ebp+0x8]
   17e26:	mov    DWORD PTR [ebp+0xc],ebx
   17e29:	call   0x11528
   17e2e:	call   eax
   17e30:	test   eax,eax
   17e32:	jge    0x17e37
   17e34:	mov    DWORD PTR [ebp+0xc],ebx
   17e37:	cmp    DWORD PTR [ebp+0xc],ebx
   17e3a:	je     0x17e53
   17e3c:	lea    eax,[ebp-0x1c]
   17e3f:	push   eax
   17e40:	push   DWORD PTR [ebp+0xc]
   17e43:	call   0x124b0
   17e48:	lea    eax,[ebp-0x1c]
   17e4b:	push   eax
   17e4c:	push   0x1
   17e4e:	call   0x11f28
   17e53:	mov    eax,DWORD PTR [ebp-0x8]
   17e56:	pop    edi
   17e57:	pop    esi
   17e58:	pop    ebx
   17e59:	leave  
   17e5a:	ret    0x8
   17e5d:	int3   
   17e5e:	int3   
   17e5f:	int3   
   17e60:	int3   
   17e61:	int3   
   17e62:	mov    edi,edi
   17e64:	push   ebp
   17e65:	mov    ebp,esp
   17e67:	sub    esp,0x40
   17e6a:	push   ebx
   17e6b:	mov    ebx,DWORD PTR [ebp+0x8]
   17e6e:	push   esi
   17e6f:	test   bl,0x20
   17e72:	je     0x17eac
   17e74:	push   DWORD PTR [ebp+0x24]
   17e77:	mov    esi,DWORD PTR ds:0x784e8
   17e7d:	push   DWORD PTR [ebp+0x20]
   17e80:	lea    ecx,[ebp-0x40]
   17e83:	push   DWORD PTR [ebp+0x1c]
   17e86:	push   DWORD PTR [ebp+0x18]
   17e89:	push   DWORD PTR [ebp+0x14]
   17e8c:	push   DWORD PTR [ebp+0xc]
   17e8f:	call   0x13b1a
   17e94:	push   eax
   17e95:	push   DWORD PTR [ebp+0xc]
   17e98:	mov    ecx,esi
   17e9a:	call   0x172bc
   17e9f:	lea    ecx,[ebp-0x40]
   17ea2:	call   0x134ec
   17ea7:	jmp    0x17fda
   17eac:	push   DWORD PTR [ebp+0xc]
   17eaf:	mov    ecx,DWORD PTR ds:0x784e0
   17eb5:	call   0x1526a
   17eba:	test   eax,eax
   17ebc:	jne    0x17eca
   17ebe:	test   bl,0x1
   17ec1:	jne    0x17eca
   17ec3:	xor    al,al
   17ec5:	jmp    0x17fdc
   17eca:	push   DWORD PTR [ebp+0xc]
   17ecd:	mov    ecx,DWORD PTR ds:0x784e0
   17ed3:	call   0x16e36
   17ed8:	mov    esi,eax
   17eda:	test   bl,0x1
   17edd:	je     0x17f10
   17edf:	mov    eax,DWORD PTR [ebp+0x20]
   17ee2:	push   DWORD PTR [ebp+0xc]
   17ee5:	mov    ecx,esi
   17ee7:	mov    DWORD PTR [esi+0x20],eax
   17eea:	call   0x12a28
   17eef:	push   DWORD PTR [ebp+0x10]
   17ef2:	lea    ecx,[esi+0x8]
   17ef5:	call   0x12a28
   17efa:	push   DWORD PTR [ebp+0x14]
   17efd:	lea    ecx,[esi+0x10]
   17f00:	call   0x12a28
   17f05:	push   DWORD PTR [ebp+0x18]
   17f08:	lea    ecx,[esi+0x18]
   17f0b:	call   0x12a28
   17f10:	mov    DWORD PTR [ebp+0x20],ebx
   17f13:	and    DWORD PTR [ebp+0x20],0x2
   17f17:	je     0x17f27
   17f19:	mov    eax,DWORD PTR [ebp+0x24]
   17f1c:	mov    ecx,DWORD PTR [eax]
   17f1e:	mov    DWORD PTR [esi+0x28],ecx
   17f21:	mov    eax,DWORD PTR [eax+0x4]
   17f24:	mov    DWORD PTR [esi+0x2c],eax
   17f27:	mov    DWORD PTR [ebp+0x14],ebx
   17f2a:	and    DWORD PTR [ebp+0x14],0x4
   17f2e:	je     0x17f3e
   17f30:	mov    eax,DWORD PTR [ebp+0x28]
   17f33:	mov    ecx,DWORD PTR [eax]
   17f35:	mov    DWORD PTR [esi+0x30],ecx
   17f38:	mov    eax,DWORD PTR [eax+0x4]
   17f3b:	mov    DWORD PTR [esi+0x34],eax
   17f3e:	test   bl,0x10
   17f41:	je     0x17fda
   17f47:	cmp    DWORD PTR [esi+0xc],0x0
   17f4b:	jbe    0x17fda
   17f51:	mov    eax,ds:0x784e0
   17f56:	mov    eax,DWORD PTR [eax+0x4]
   17f59:	push   edi
   17f5a:	mov    edi,DWORD PTR [eax]
   17f5c:	mov    DWORD PTR [ebp+0x18],edi
   17f5f:	cmp    edi,eax
   17f61:	je     0x17fd9
   17f63:	push   DWORD PTR [ebp+0xc]
   17f66:	lea    ebx,[edi+0x10]
   17f69:	push   ebx
   17f6a:	call   0x19a00
   17f6f:	test   al,al
   17f71:	je     0x17fc4
   17f73:	lea    eax,[esi+0x8]
   17f76:	push   eax
   17f77:	add    edi,0x20
   17f7a:	push   edi
   17f7b:	call   0x199f0
   17f80:	test   al,al
   17f82:	je     0x17fc4
   17f84:	cmp    DWORD PTR [ebp+0x20],0x0
   17f88:	je     0x17fa4
   17f8a:	mov    ecx,DWORD PTR ds:0x784e0
   17f90:	push   ebx
   17f91:	call   0x16e36
   17f96:	mov    ecx,DWORD PTR [ebp+0x24]
   17f99:	mov    edx,DWORD PTR [ecx]
   17f9b:	mov    DWORD PTR [eax+0x28],edx
   17f9e:	mov    ecx,DWORD PTR [ecx+0x4]
   17fa1:	mov    DWORD PTR [eax+0x2c],ecx
   17fa4:	cmp    DWORD PTR [ebp+0x14],0x0
   17fa8:	je     0x17fc4
   17faa:	mov    ecx,DWORD PTR ds:0x784e0
   17fb0:	push   ebx
   17fb1:	call   0x16e36
   17fb6:	mov    ecx,DWORD PTR [ebp+0x28]
   17fb9:	mov    edx,DWORD PTR [ecx]
   17fbb:	mov    DWORD PTR [eax+0x30],edx
   17fbe:	mov    ecx,DWORD PTR [ecx+0x4]
   17fc1:	mov    DWORD PTR [eax+0x34],ecx
   17fc4:	lea    ecx,[ebp+0x18]
   17fc7:	call   0x1373e
   17fcc:	mov    edi,DWORD PTR [ebp+0x18]
   17fcf:	mov    eax,ds:0x784e0
   17fd4:	cmp    edi,DWORD PTR [eax+0x4]
   17fd7:	jne    0x17f63
   17fd9:	pop    edi
   17fda:	mov    al,0x1
   17fdc:	pop    esi
   17fdd:	pop    ebx
   17fde:	leave  
   17fdf:	ret    0x24
   17fe2:	int3   
   17fe3:	int3   
   17fe4:	int3   
   17fe5:	int3   
   17fe6:	int3   
   17fe7:	int3   
   17fe8:	push   0x40
   17fea:	push   0x77838
   17fef:	call   0x1dcf4
   17ff4:	xor    esi,esi
   17ff6:	push   esi
   17ff7:	push   esi
   17ff8:	push   esi
   17ff9:	push   esi
   17ffa:	push   0x77b58
   17fff:	call   0x119ea
   18004:	call   eax
   18006:	cmp    eax,esi
   18008:	jge    0x18019
   1800a:	mov    eax,DWORD PTR [ebp+0x8]
   1800d:	mov    DWORD PTR [eax+0x8],0x4
   18014:	jmp    0x1811d
   18019:	mov    DWORD PTR [ebp-0x4],esi
   1801c:	or     ebx,0xffffffff
   1801f:	push   ebx
   18020:	mov    esi,DWORD PTR [ebp+0x8]
   18023:	lea    eax,[esi+0x20]
   18026:	push   eax
   18027:	lea    ecx,[ebp-0x38]
   1802a:	call   0x1361a
   1802f:	mov    edi,DWORD PTR [ebp-0x34]
   18032:	inc    edi
   18033:	push   ebx
   18034:	lea    eax,[edi+esi*1+0x20]
   18038:	push   eax
   18039:	lea    ecx,[ebp-0x30]
   1803c:	call   0x1361a
   18041:	mov    eax,DWORD PTR [ebp-0x2c]
   18044:	lea    edi,[edi+eax*1+0x1]
   18048:	push   ebx
   18049:	lea    eax,[edi+esi*1+0x20]
   1804d:	push   eax
   1804e:	lea    ecx,[ebp-0x28]
   18051:	call   0x1361a
   18056:	mov    eax,DWORD PTR [ebp-0x24]
   18059:	lea    edi,[edi+eax*1+0x1]
   1805d:	push   ebx
   1805e:	lea    eax,[edi+esi*1+0x20]
   18062:	push   eax
   18063:	lea    ecx,[ebp-0x20]
   18066:	call   0x1361a
   1806b:	mov    eax,DWORD PTR [ebp-0x1c]
   1806e:	lea    eax,[edi+eax*1+0x1]
   18072:	push   ebx
   18073:	lea    eax,[eax+esi*1+0x20]
   18077:	push   eax
   18078:	lea    ecx,[ebp-0x50]
   1807b:	call   0x1361a
   18080:	mov    eax,DWORD PTR [esi+0xc]
   18083:	mov    ecx,DWORD PTR [esi+0x10]
   18086:	mov    DWORD PTR [ebp-0x48],ecx
   18089:	mov    ecx,DWORD PTR [esi+0x14]
   1808c:	mov    DWORD PTR [ebp-0x44],ecx
   1808f:	mov    ecx,DWORD PTR [esi+0x18]
   18092:	mov    DWORD PTR [ebp-0x40],ecx
   18095:	mov    ecx,DWORD PTR [esi+0x1c]
   18098:	mov    DWORD PTR [ebp-0x3c],ecx
   1809b:	lea    ecx,[ebp-0x40]
   1809e:	push   ecx
   1809f:	lea    ecx,[ebp-0x48]
   180a2:	push   ecx
   180a3:	push   eax
   180a4:	lea    eax,[ebp-0x50]
   180a7:	push   eax
   180a8:	lea    eax,[ebp-0x20]
   180ab:	push   eax
   180ac:	lea    eax,[ebp-0x28]
   180af:	push   eax
   180b0:	lea    eax,[ebp-0x30]
   180b3:	push   eax
   180b4:	lea    eax,[ebp-0x38]
   180b7:	push   eax
   180b8:	push   DWORD PTR [esi+0x4]
   180bb:	call   0x17e62
   180c0:	xor    ecx,ecx
   180c2:	test   al,al
   180c4:	sete   cl
   180c7:	mov    DWORD PTR [esi+0x8],ecx
   180ca:	push   DWORD PTR [ebp-0x50]
   180cd:	call   0x11d22
   180d2:	push   DWORD PTR [ebp-0x20]
   180d5:	call   0x11d22
   180da:	push   DWORD PTR [ebp-0x28]
   180dd:	call   0x11d22
   180e2:	push   DWORD PTR [ebp-0x30]
   180e5:	call   0x11d22
   180ea:	push   DWORD PTR [ebp-0x38]
   180ed:	call   0x11d22
   180f2:	add    esp,0x14
   180f5:	jmp    0x18108
   180f7:	xor    eax,eax
   180f9:	inc    eax
   180fa:	ret    
   180fb:	mov    esp,DWORD PTR [ebp-0x18]
   180fe:	mov    eax,DWORD PTR [ebp+0x8]
   18101:	mov    DWORD PTR [eax+0x8],0x4
   18108:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1810f:	push   0x0
   18111:	push   0x77b58
   18116:	call   0x11a14
   1811b:	call   eax
   1811d:	call   0x1dd39
   18122:	ret    0x4
   18125:	int3   
   18126:	int3   
   18127:	int3   
   18128:	int3   
   18129:	int3   
   1812a:	push   0x2c
   1812c:	push   0x77858
   18131:	call   0x1dcf4
   18136:	xor    edi,edi
   18138:	mov    DWORD PTR [ebp-0x24],edi
   1813b:	mov    ebx,DWORD PTR [ebp+0xc]
   1813e:	mov    DWORD PTR [ebx+0x18],edi
   18141:	mov    DWORD PTR [ebx+0x1c],edi
   18144:	mov    eax,DWORD PTR [ebx+0x60]
   18147:	cmp    BYTE PTR [eax],0xe
   1814a:	jne    0x185ec
   18150:	mov    eax,DWORD PTR [eax+0xc]
   18153:	mov    DWORD PTR [ebx+0x1c],0x84c
   1815a:	mov    ecx,0x22c068
   1815f:	cmp    eax,ecx
   18161:	ja     0x1849d
   18167:	je     0x1848e
   1816d:	add    ecx,0xffffffd0
   18170:	cmp    eax,ecx
   18172:	ja     0x1828f
   18178:	je     0x18276
   1817e:	sub    eax,0x22c020
   18183:	je     0x18240
   18189:	push   0x4
   1818b:	pop    esi
   1818c:	sub    eax,esi
   1818e:	je     0x1820a
   18190:	sub    eax,esi
   18192:	je     0x181ef
   18194:	sub    eax,esi
   18196:	je     0x181e2
   18198:	sub    eax,esi
   1819a:	je     0x181b1
   1819c:	sub    eax,esi
   1819e:	jne    0x1858c
   181a4:	push   DWORD PTR [ebx+0xc]
   181a7:	call   0x17140
   181ac:	jmp    0x185e9
   181b1:	mov    esi,DWORD PTR [ebx+0xc]
   181b4:	mov    eax,DWORD PTR [esi]
   181b6:	add    eax,0x20
   181b9:	mov    DWORD PTR [ebx+0x1c],eax
   181bc:	push   0xffffffff
   181be:	lea    eax,[esi+0x20]
   181c1:	push   eax
   181c2:	lea    ecx,[ebp-0x34]
   181c5:	call   0x12b44
   181ca:	push   esi
   181cb:	lea    eax,[ebp-0x34]
   181ce:	push   eax
   181cf:	call   0x164b8
   181d4:	push   DWORD PTR [ebp-0x34]
   181d7:	call   0x11d22
   181dc:	pop    ecx
   181dd:	jmp    0x185ec
   181e2:	push   DWORD PTR [ebx+0xc]
   181e5:	call   0x17fe8
   181ea:	jmp    0x185e9
   181ef:	mov    ecx,DWORD PTR ds:0x784e0
   181f5:	call   0x16cd2
   181fa:	mov    ecx,DWORD PTR ds:0x77bb4
   18200:	call   0x16d8e
   18205:	jmp    0x185ec
   1820a:	mov    eax,DWORD PTR [ebx+0xc]
   1820d:	mov    DWORD PTR [ebx+0x1c],0x10
   18214:	mov    ecx,DWORD PTR [eax]
   18216:	cmp    ecx,edi
   18218:	jl     0x185ec
   1821e:	cmp    ecx,0x6
   18221:	jge    0x185ec
   18227:	mov    edx,DWORD PTR [eax+0x8]
   1822a:	mov    DWORD PTR [ecx*8+0x78530],edx
   18231:	mov    eax,DWORD PTR [eax+0xc]
   18234:	mov    DWORD PTR [ecx*8+0x78534],eax
   1823b:	jmp    0x185ec
   18240:	mov    eax,DWORD PTR [ebx+0xc]
   18243:	mov    DWORD PTR [ebx+0x1c],0x10
   1824a:	mov    ecx,DWORD PTR [eax]
   1824c:	cmp    ecx,edi
   1824e:	jl     0x185ec
   18254:	cmp    ecx,0x6
   18257:	jge    0x185ec
   1825d:	mov    edx,DWORD PTR [ecx*8+0x78530]
   18264:	mov    DWORD PTR [eax+0x8],edx
   18267:	mov    ecx,DWORD PTR [ecx*8+0x78534]
   1826e:	mov    DWORD PTR [eax+0xc],ecx
   18271:	jmp    0x185ec
   18276:	mov    eax,DWORD PTR [ebx+0xc]
   18279:	mov    ecx,DWORD PTR [eax]
   1827b:	add    ecx,0xc
   1827e:	mov    DWORD PTR [ebx+0x1c],ecx
   18281:	push   eax
   18282:	push   DWORD PTR [eax+0x4]
   18285:	call   0x150fc
   1828a:	jmp    0x185ec
   1828f:	sub    eax,0x22c03c
   18294:	je     0x1840a
   1829a:	sub    eax,0x10
   1829d:	je     0x18400
   182a3:	push   0x4
   182a5:	pop    esi
   182a6:	sub    eax,esi
   182a8:	je     0x182fe
   182aa:	sub    eax,0xc
   182ad:	je     0x182e6
   182af:	sub    eax,esi
   182b1:	je     0x182c8
   182b3:	sub    eax,esi
   182b5:	jne    0x1858c
   182bb:	push   DWORD PTR [ebx+0xc]
   182be:	call   0x1285c
   182c3:	jmp    0x185e9
   182c8:	mov    DWORD PTR [ebx+0x1c],0x8
   182cf:	mov    ebx,DWORD PTR [ebx+0xc]
   182d2:	mov    eax,ds:0x78514
   182d7:	mov    DWORD PTR [ebx],eax
   182d9:	mov    eax,ds:0x78518
   182de:	mov    DWORD PTR [ebx+0x4],eax
   182e1:	jmp    0x185ec
   182e6:	mov    eax,DWORD PTR [ebx+0xc]
   182e9:	mov    ecx,DWORD PTR [eax]
   182eb:	mov    DWORD PTR ds:0x78514,ecx
   182f1:	mov    eax,DWORD PTR [eax+0x4]
   182f4:	mov    ds:0x78518,eax
   182f9:	jmp    0x185e9
   182fe:	mov    DWORD PTR [ebx+0x1c],edi
   18301:	mov    esi,DWORD PTR [ebx+0xc]
   18304:	mov    DWORD PTR [ebp-0x20],esi
   18307:	push   0xffffffff
   18309:	push   0x1e108
   1830e:	lea    ecx,[ebp-0x2c]
   18311:	call   0x12b44
   18316:	xor    edi,edi
   18318:	inc    edi
   18319:	mov    DWORD PTR [esi+0x8],edi
   1831c:	xor    eax,eax
   1831e:	push   eax
   1831f:	push   eax
   18320:	push   eax
   18321:	push   eax
   18322:	push   0x77b58
   18327:	call   0x119ea
   1832c:	call   eax
   1832e:	test   eax,eax
   18330:	jge    0x1833a
   18332:	push   DWORD PTR [ebp-0x2c]
   18335:	jmp    0x181d7
   1833a:	and    DWORD PTR [ebp-0x4],0x0
   1833e:	mov    DWORD PTR [ebp-0x4],edi
   18341:	mov    eax,DWORD PTR [esi]
   18343:	add    eax,0x20
   18346:	mov    DWORD PTR [ebx+0x1c],eax
   18349:	mov    eax,ds:0x784e0
   1834e:	mov    ebx,DWORD PTR [eax+0x4]
   18351:	mov    eax,DWORD PTR [ebx]
   18353:	mov    DWORD PTR [ebp+0xc],eax
   18356:	and    DWORD PTR [ebp-0x1c],0x0
   1835a:	mov    edi,DWORD PTR [esi+0x20]
   1835d:	cmp    DWORD PTR [ebp-0x1c],edi
   18360:	jge    0x18374
   18362:	cmp    DWORD PTR [ebp+0xc],ebx
   18365:	je     0x18374
   18367:	lea    ecx,[ebp+0xc]
   1836a:	call   0x1373e
   1836f:	inc    DWORD PTR [ebp-0x1c]
   18372:	jmp    0x1835d
   18374:	mov    eax,DWORD PTR [ebp+0xc]
   18377:	cmp    eax,ebx
   18379:	je     0x1838d
   1837b:	and    DWORD PTR [esi+0x8],0x0
   1837f:	add    eax,0x10
   18382:	push   eax
   18383:	lea    ecx,[ebp-0x2c]
   18386:	call   0x12a28
   1838b:	jmp    0x18394
   1838d:	mov    DWORD PTR [esi+0x8],0x1
   18394:	and    DWORD PTR [esi+0x4],0x0
   18398:	and    DWORD PTR [ebp-0x4],0x0
   1839c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   183a3:	call   0x183f1
   183a8:	cmp    DWORD PTR [esi+0x8],0x0
   183ac:	jne    0x18332
   183ae:	push   esi
   183af:	lea    eax,[ebp-0x2c]
   183b2:	push   eax
   183b3:	call   0x164b8
   183b8:	jmp    0x18332
   183bd:	xor    eax,eax
   183bf:	inc    eax
   183c0:	ret    
   183c1:	mov    esp,DWORD PTR [ebp-0x18]
   183c4:	mov    eax,DWORD PTR [ebp-0x20]
   183c7:	mov    DWORD PTR [eax+0x8],0x4
   183ce:	push   DWORD PTR [ebp-0x2c]
   183d1:	call   0x11d22
   183d6:	push   0xfffffffe
   183d8:	lea    eax,[ebp-0x10]
   183db:	push   eax
   183dc:	push   0x77b1c
   183e1:	call   0x1debc
   183e6:	add    esp,0x10
   183e9:	jmp    0x185ec
   183ee:	mov    esi,DWORD PTR [ebp-0x20]
   183f1:	push   0x0
   183f3:	push   0x77b58
   183f8:	call   0x11a14
   183fd:	call   eax
   183ff:	ret    
   18400:	call   0x12386
   18405:	jmp    0x185ec
   1840a:	mov    eax,DWORD PTR [ebx+0xc]
   1840d:	mov    ecx,DWORD PTR ds:0x77a04
   18413:	mov    esi,eax
   18415:	sub    esi,ecx
   18417:	push   0x2
   18419:	pop    edi
   1841a:	movzx  edx,WORD PTR [ecx]
   1841d:	mov    WORD PTR [esi+ecx*1],dx
   18421:	add    ecx,edi
   18423:	test   dx,dx
   18426:	jne    0x1841a
   18428:	mov    ecx,0x77a48
   1842d:	lea    esi,[eax+0x50]
   18430:	sub    esi,ecx
   18432:	movzx  edx,WORD PTR [ecx]
   18435:	mov    WORD PTR [esi+ecx*1],dx
   18439:	add    ecx,edi
   1843b:	test   dx,dx
   1843e:	jne    0x18432
   18440:	mov    ecx,0x77a08
   18445:	lea    esi,[eax+0x90]
   1844b:	sub    esi,ecx
   1844d:	movzx  edx,WORD PTR [ecx]
   18450:	mov    WORD PTR [esi+ecx*1],dx
   18454:	add    ecx,edi
   18456:	test   dx,dx
   18459:	jne    0x1844d
   1845b:	mov    ecx,0x77a88
   18460:	lea    esi,[eax+0xd0]
   18466:	sub    esi,ecx
   18468:	movzx  edx,WORD PTR [ecx]
   1846b:	mov    WORD PTR [esi+ecx*1],dx
   1846f:	add    ecx,edi
   18471:	test   dx,dx
   18474:	jne    0x18468
   18476:	lea    edi,[eax+0x40]
   18479:	mov    esi,0x73b70
   1847e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1847f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18480:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18481:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18482:	mov    DWORD PTR [ebx+0x1c],0x110
   18489:	jmp    0x185ec
   1848e:	mov    eax,DWORD PTR [ebx+0xc]
   18491:	push   DWORD PTR [eax]
   18493:	call   0x1296c
   18498:	jmp    0x185e9
   1849d:	mov    ecx,0x22c088
   184a2:	cmp    eax,ecx
   184a4:	ja     0x1856e
   184aa:	je     0x18543
   184b0:	sub    eax,0x22c06c
   184b5:	je     0x1852b
   184b7:	push   0x4
   184b9:	pop    esi
   184ba:	sub    eax,esi
   184bc:	je     0x1851e
   184be:	push   0x8
   184c0:	pop    ecx
   184c1:	sub    eax,ecx
   184c3:	je     0x18511
   184c5:	sub    eax,esi
   184c7:	je     0x184f9
   184c9:	sub    eax,esi
   184cb:	je     0x184e2
   184cd:	sub    eax,esi
   184cf:	jne    0x1858c
   184d5:	push   DWORD PTR [ebx+0xc]
   184d8:	call   0x17048
   184dd:	jmp    0x185e9
   184e2:	mov    DWORD PTR [ebx+0x1c],ecx
   184e5:	mov    ebx,DWORD PTR [ebx+0xc]
   184e8:	mov    eax,ds:0x7851c
   184ed:	mov    DWORD PTR [ebx],eax
   184ef:	mov    eax,ds:0x78520
   184f4:	jmp    0x182de
   184f9:	mov    eax,DWORD PTR [ebx+0xc]
   184fc:	mov    ecx,DWORD PTR [eax]
   184fe:	mov    DWORD PTR ds:0x7851c,ecx
   18504:	mov    eax,DWORD PTR [eax+0x4]
   18507:	mov    ds:0x78520,eax
   1850c:	jmp    0x185e9
   18511:	push   DWORD PTR [ebx+0xc]
   18514:	call   0x17670
   18519:	jmp    0x185e9
   1851e:	push   DWORD PTR [ebx+0xc]
   18521:	call   0x120ac
   18526:	jmp    0x185e9
   1852b:	mov    esi,DWORD PTR [ebx+0xc]
   1852e:	push   DWORD PTR [esi]
   18530:	call   0x129b2
   18535:	mov    DWORD PTR [esi],eax
   18537:	mov    DWORD PTR [ebx+0x1c],0x4
   1853e:	jmp    0x185ec
   18543:	mov    esi,DWORD PTR [ebx+0xc]
   18546:	mov    eax,DWORD PTR [esi]
   18548:	add    eax,0xc
   1854b:	mov    DWORD PTR [ebx+0x1c],eax
   1854e:	push   0xffffffff
   18550:	lea    eax,[esi+0xc]
   18553:	push   eax
   18554:	lea    ecx,[ebp-0x3c]
   18557:	call   0x12b44
   1855c:	push   esi
   1855d:	lea    eax,[ebp-0x3c]
   18560:	push   eax
   18561:	call   0x15010
   18566:	push   DWORD PTR [ebp-0x3c]
   18569:	jmp    0x181d7
   1856e:	sub    eax,0x22c08c
   18573:	je     0x185db
   18575:	push   0x4
   18577:	pop    esi
   18578:	sub    eax,esi
   1857a:	je     0x185c7
   1857c:	sub    eax,esi
   1857e:	je     0x185c0
   18580:	sub    eax,esi
   18582:	je     0x185ac
   18584:	sub    eax,esi
   18586:	je     0x185a2
   18588:	sub    eax,esi
   1858a:	je     0x18595
   1858c:	mov    DWORD PTR [ebp-0x24],0xc0000010
   18593:	jmp    0x185e9
   18595:	push   DWORD PTR [ebx+0xc]
   18598:	call   0x1ac7c
   1859d:	mov    DWORD PTR [ebx+0x1c],esi
   185a0:	jmp    0x185ec
   185a2:	push   DWORD PTR [ebx+0xc]
   185a5:	call   0x1b724
   185aa:	jmp    0x185e9
   185ac:	mov    eax,DWORD PTR [ebx+0xc]
   185af:	mov    ecx,DWORD PTR [eax+0x4]
   185b2:	add    ecx,0x8
   185b5:	mov    DWORD PTR [ebx+0x1c],ecx
   185b8:	push   eax
   185b9:	call   0x1b9f2
   185be:	jmp    0x185ec
   185c0:	call   0x1b634
   185c5:	jmp    0x185e9
   185c7:	mov    eax,DWORD PTR [ebx+0xc]
   185ca:	mov    ecx,DWORD PTR [eax+0x4]
   185cd:	add    ecx,0x8
   185d0:	mov    DWORD PTR [ebx+0x1c],ecx
   185d3:	push   eax
   185d4:	call   0x1aa54
   185d9:	jmp    0x185ec
   185db:	push   DWORD PTR [ebx+0xc]
   185de:	call   0x129fc
   185e3:	push   eax
   185e4:	call   0x1b856
   185e9:	mov    DWORD PTR [ebx+0x1c],edi
   185ec:	mov    eax,DWORD PTR [ebp-0x24]
   185ef:	call   0x1dd39
   185f4:	ret    0x8
   185f7:	int3   
   185f8:	int3   
   185f9:	int3   
   185fa:	int3   
   185fb:	int3   
   185fc:	push   0x848
   18601:	push   0x77880
   18606:	call   0x1e000
   1860b:	xor    ebx,ebx
   1860d:	mov    BYTE PTR [ebp-0x81d],bl
   18613:	xor    eax,eax
   18615:	mov    WORD PTR [ebp-0x81c],ax
   1861c:	push   0x7fe
   18621:	push   ebx
   18622:	lea    eax,[ebp-0x81a]
   18628:	push   eax
   18629:	call   0x1dcb6
   1862e:	add    esp,0xc
   18631:	push   0x1ebca
   18636:	push   0x15
   18638:	push   0x1eb9e
   1863d:	call   0x1748a
   18642:	mov    edx,eax
   18644:	mov    cx,WORD PTR [eax]
   18647:	inc    eax
   18648:	inc    eax
   18649:	cmp    cx,bx
   1864c:	jne    0x18644
   1864e:	sub    eax,edx
   18650:	lea    edi,[ebp-0x81c]
   18656:	dec    edi
   18657:	dec    edi
   18658:	mov    cx,WORD PTR [edi+0x2]
   1865c:	inc    edi
   1865d:	inc    edi
   1865e:	cmp    cx,bx
   18661:	jne    0x18658
   18663:	mov    ecx,eax
   18665:	mov    esi,edx
   18667:	shr    ecx,0x2
   1866a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1866c:	mov    ecx,eax
   1866e:	and    ecx,0x3
   18671:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   18673:	mov    eax,0x77a08
   18678:	mov    edx,eax
   1867a:	mov    cx,WORD PTR [eax]
   1867d:	inc    eax
   1867e:	inc    eax
   1867f:	cmp    cx,bx
   18682:	jne    0x1867a
   18684:	sub    eax,edx
   18686:	lea    edi,[ebp-0x81c]
   1868c:	dec    edi
   1868d:	dec    edi
   1868e:	mov    cx,WORD PTR [edi+0x2]
   18692:	inc    edi
   18693:	inc    edi
   18694:	cmp    cx,bx
   18697:	jne    0x1868e
   18699:	mov    ecx,eax
   1869b:	mov    esi,edx
   1869d:	shr    ecx,0x2
   186a0:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   186a2:	mov    ecx,eax
   186a4:	and    ecx,0x3
   186a7:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   186a9:	push   0x1eb6e
   186ae:	push   0x4
   186b0:	push   0x1e94e
   186b5:	call   0x1748a
   186ba:	mov    edx,eax
   186bc:	mov    cx,WORD PTR [eax]
   186bf:	inc    eax
   186c0:	inc    eax
   186c1:	cmp    cx,bx
   186c4:	jne    0x186bc
   186c6:	sub    eax,edx
   186c8:	lea    edi,[ebp-0x81c]
   186ce:	dec    edi
   186cf:	dec    edi
   186d0:	mov    cx,WORD PTR [edi+0x2]
   186d4:	inc    edi
   186d5:	inc    edi
   186d6:	cmp    cx,bx
   186d9:	jne    0x186d0
   186db:	mov    ecx,eax
   186dd:	mov    esi,edx
   186df:	shr    ecx,0x2
   186e2:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   186e4:	mov    ecx,eax
   186e6:	and    ecx,0x3
   186e9:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   186eb:	lea    eax,[ebp-0x81c]
   186f1:	push   eax
   186f2:	lea    eax,[ebp-0x858]
   186f8:	push   eax
   186f9:	call   0x1157c
   186fe:	call   eax
   18700:	mov    DWORD PTR [ebp-0x824],ebx
   18706:	xor    eax,eax
   18708:	lea    edi,[ebp-0x84c]
   1870e:	stos   DWORD PTR es:[edi],eax
   1870f:	stos   DWORD PTR es:[edi],eax
   18710:	stos   DWORD PTR es:[edi],eax
   18711:	stos   DWORD PTR es:[edi],eax
   18712:	stos   DWORD PTR es:[edi],eax
   18713:	mov    DWORD PTR [ebp-0x830],ebx
   18719:	xor    eax,eax
   1871b:	lea    edi,[ebp-0x82c]
   18721:	stos   DWORD PTR es:[edi],eax
   18722:	mov    DWORD PTR [ebp-0x850],0x18
   1872c:	mov    DWORD PTR [ebp-0x84c],ebx
   18732:	mov    DWORD PTR [ebp-0x844],0x240
   1873c:	lea    eax,[ebp-0x858]
   18742:	mov    DWORD PTR [ebp-0x848],eax
   18748:	mov    DWORD PTR [ebp-0x840],ebx
   1874e:	mov    DWORD PTR [ebp-0x83c],ebx
   18754:	push   ebx
   18755:	push   ebx
   18756:	push   0x60
   18758:	push   0x1
   1875a:	push   ebx
   1875b:	push   0x80
   18760:	push   ebx
   18761:	lea    eax,[ebp-0x830]
   18767:	push   eax
   18768:	lea    eax,[ebp-0x850]
   1876e:	push   eax
   1876f:	push   0x100001
   18774:	lea    eax,[ebp-0x824]
   1877a:	push   eax
   1877b:	call   0x11456
   18780:	call   eax
   18782:	cmp    eax,ebx
   18784:	jge    0x1878d
   18786:	xor    al,al
   18788:	jmp    0x18823
   1878d:	mov    DWORD PTR [ebp-0x4],ebx
   18790:	mov    esi,DWORD PTR [ebp+0xc]
   18793:	mov    eax,0x10000
   18798:	cmp    esi,eax
   1879a:	jbe    0x1879e
   1879c:	mov    esi,eax
   1879e:	push   esi
   1879f:	call   0x11cec
   187a4:	pop    ecx
   187a5:	mov    DWORD PTR [ebp-0x828],eax
   187ab:	mov    DWORD PTR [ebp-0x838],ebx
   187b1:	xor    eax,eax
   187b3:	lea    edi,[ebp-0x834]
   187b9:	stos   DWORD PTR es:[edi],eax
   187ba:	push   ebx
   187bb:	lea    eax,[ebp-0x838]
   187c1:	push   eax
   187c2:	push   esi
   187c3:	push   DWORD PTR [ebp-0x828]
   187c9:	lea    eax,[ebp-0x830]
   187cf:	push   eax
   187d0:	push   ebx
   187d1:	push   ebx
   187d2:	push   ebx
   187d3:	push   DWORD PTR [ebp-0x824]
   187d9:	call   0x117f2
   187de:	call   eax
   187e0:	cmp    eax,ebx
   187e2:	jl     0x18809
   187e4:	mov    ecx,DWORD PTR [ebp-0x82c]
   187ea:	mov    edi,DWORD PTR [ebp+0x8]
   187ed:	mov    esi,DWORD PTR [ebp-0x828]
   187f3:	xor    eax,eax
   187f5:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
   187f7:	sete   al
   187fa:	mov    BYTE PTR [ebp-0x81d],al
   18800:	jmp    0x18809
   18802:	xor    eax,eax
   18804:	inc    eax
   18805:	ret    
   18806:	mov    esp,DWORD PTR [ebp-0x18]
   18809:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   18810:	push   DWORD PTR [ebp-0x824]
   18816:	call   0x11552
   1881b:	call   eax
   1881d:	mov    al,BYTE PTR [ebp-0x81d]
   18823:	call   0x1e048
   18828:	ret    0x8
   1882b:	int3   
   1882c:	int3   
   1882d:	int3   
   1882e:	int3   
   1882f:	int3   
   18830:	push   0x874
   18835:	push   0x778a0
   1883a:	call   0x1e000
   1883f:	mov    eax,DWORD PTR [ebp+0x8]
   18842:	mov    DWORD PTR [ebp-0x830],eax
   18848:	xor    ebx,ebx
   1884a:	mov    BYTE PTR [ebp-0x81d],bl
   18850:	xor    eax,eax
   18852:	mov    WORD PTR [ebp-0x81c],ax
   18859:	push   0x7fe
   1885e:	push   ebx
   1885f:	lea    eax,[ebp-0x81a]
   18865:	push   eax
   18866:	call   0x1dcb6
   1886b:	add    esp,0xc
   1886e:	push   0x1ec42
   18873:	push   0x15
   18875:	push   0x1eb9e
   1887a:	call   0x1748a
   1887f:	mov    edx,eax
   18881:	mov    cx,WORD PTR [eax]
   18884:	inc    eax
   18885:	inc    eax
   18886:	cmp    cx,bx
   18889:	jne    0x18881
   1888b:	sub    eax,edx
   1888d:	lea    edi,[ebp-0x81c]
   18893:	dec    edi
   18894:	dec    edi
   18895:	mov    cx,WORD PTR [edi+0x2]
   18899:	inc    edi
   1889a:	inc    edi
   1889b:	cmp    cx,bx
   1889e:	jne    0x18895
   188a0:	mov    ecx,eax
   188a2:	mov    esi,edx
   188a4:	shr    ecx,0x2
   188a7:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   188a9:	mov    ecx,eax
   188ab:	and    ecx,0x3
   188ae:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   188b0:	mov    eax,0x77a08
   188b5:	mov    edx,eax
   188b7:	mov    cx,WORD PTR [eax]
   188ba:	inc    eax
   188bb:	inc    eax
   188bc:	cmp    cx,bx
   188bf:	jne    0x188b7
   188c1:	sub    eax,edx
   188c3:	lea    edi,[ebp-0x81c]
   188c9:	dec    edi
   188ca:	dec    edi
   188cb:	mov    cx,WORD PTR [edi+0x2]
   188cf:	inc    edi
   188d0:	inc    edi
   188d1:	cmp    cx,bx
   188d4:	jne    0x188cb
   188d6:	mov    ecx,eax
   188d8:	mov    esi,edx
   188da:	shr    ecx,0x2
   188dd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   188df:	mov    ecx,eax
   188e1:	and    ecx,0x3
   188e4:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   188e6:	push   0x1ec08
   188eb:	push   0x4
   188ed:	push   0x1e94e
   188f2:	call   0x1748a
   188f7:	mov    edx,eax
   188f9:	mov    cx,WORD PTR [eax]
   188fc:	inc    eax
   188fd:	inc    eax
   188fe:	cmp    cx,bx
   18901:	jne    0x188f9
   18903:	sub    eax,edx
   18905:	lea    edi,[ebp-0x81c]
   1890b:	dec    edi
   1890c:	dec    edi
   1890d:	mov    cx,WORD PTR [edi+0x2]
   18911:	inc    edi
   18912:	inc    edi
   18913:	cmp    cx,bx
   18916:	jne    0x1890d
   18918:	mov    ecx,eax
   1891a:	mov    esi,edx
   1891c:	shr    ecx,0x2
   1891f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18921:	mov    ecx,eax
   18923:	and    ecx,0x3
   18926:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   18928:	lea    eax,[ebp-0x81c]
   1892e:	push   eax
   1892f:	lea    eax,[ebp-0x884]
   18935:	push   eax
   18936:	call   0x1157c
   1893b:	call   eax
   1893d:	mov    DWORD PTR [ebp-0x824],ebx
   18943:	xor    eax,eax
   18945:	lea    edi,[ebp-0x850]
   1894b:	stos   DWORD PTR es:[edi],eax
   1894c:	stos   DWORD PTR es:[edi],eax
   1894d:	stos   DWORD PTR es:[edi],eax
   1894e:	stos   DWORD PTR es:[edi],eax
   1894f:	stos   DWORD PTR es:[edi],eax
   18950:	mov    DWORD PTR [ebp-0x82c],ebx
   18956:	xor    eax,eax
   18958:	lea    edi,[ebp-0x828]
   1895e:	stos   DWORD PTR es:[edi],eax
   1895f:	mov    DWORD PTR [ebp-0x854],0x18
   18969:	mov    DWORD PTR [ebp-0x850],ebx
   1896f:	mov    DWORD PTR [ebp-0x848],0x240
   18979:	lea    eax,[ebp-0x884]
   1897f:	mov    DWORD PTR [ebp-0x84c],eax
   18985:	mov    DWORD PTR [ebp-0x844],ebx
   1898b:	mov    DWORD PTR [ebp-0x840],ebx
   18991:	push   ebx
   18992:	push   ebx
   18993:	push   0x60
   18995:	push   ebx
   18996:	push   ebx
   18997:	push   0x80
   1899c:	push   ebx
   1899d:	lea    eax,[ebp-0x82c]
   189a3:	push   eax
   189a4:	lea    eax,[ebp-0x854]
   189aa:	push   eax
   189ab:	push   0x100002
   189b0:	lea    eax,[ebp-0x824]
   189b6:	push   eax
   189b7:	call   0x11456
   189bc:	call   eax
   189be:	cmp    eax,ebx
   189c0:	jge    0x189c9
   189c2:	xor    al,al
   189c4:	jmp    0x18acf
   189c9:	mov    DWORD PTR [ebp-0x4],ebx
   189cc:	xor    eax,eax
   189ce:	lea    edi,[ebp-0x82c]
   189d4:	stos   DWORD PTR es:[edi],eax
   189d5:	stos   DWORD PTR es:[edi],eax
   189d6:	xor    edi,edi
   189d8:	mov    esi,0x10000
   189dd:	mov    DWORD PTR [ebp-0x834],edi
   189e3:	mov    eax,DWORD PTR [ebp+0xc]
   189e6:	cmp    edi,eax
   189e8:	jae    0x18a33
   189ea:	mov    DWORD PTR [ebp-0x83c],ebx
   189f0:	mov    DWORD PTR [ebp-0x83c],edi
   189f6:	mov    DWORD PTR [ebp-0x838],ebx
   189fc:	sub    eax,edi
   189fe:	cmp    eax,esi
   18a00:	jb     0x18a04
   18a02:	mov    eax,esi
   18a04:	push   ebx
   18a05:	push   ebx
   18a06:	push   eax
   18a07:	mov    eax,DWORD PTR [ebp-0x830]
   18a0d:	add    eax,edi
   18a0f:	push   eax
   18a10:	lea    eax,[ebp-0x82c]
   18a16:	push   eax
   18a17:	push   ebx
   18a18:	push   ebx
   18a19:	push   ebx
   18a1a:	push   DWORD PTR [ebp-0x824]
   18a20:	call   0x11846
   18a25:	call   eax
   18a27:	cmp    eax,ebx
   18a29:	jl     0x18ab5
   18a2f:	add    edi,esi
   18a31:	jmp    0x189dd
   18a33:	mov    BYTE PTR [ebp-0x81d],0x1
   18a3a:	mov    DWORD PTR [ebp-0x87c],ebx
   18a40:	push   0x9
   18a42:	pop    ecx
   18a43:	xor    eax,eax
   18a45:	lea    edi,[ebp-0x878]
   18a4b:	rep stos DWORD PTR es:[edi],eax
   18a4d:	mov    eax,DWORD PTR [ebp+0x10]
   18a50:	mov    DWORD PTR [ebp-0x86c],eax
   18a56:	mov    ecx,DWORD PTR [ebp+0x14]
   18a59:	mov    DWORD PTR [ebp-0x868],ecx
   18a5f:	mov    DWORD PTR [ebp-0x874],eax
   18a65:	mov    DWORD PTR [ebp-0x870],ecx
   18a6b:	mov    DWORD PTR [ebp-0x864],eax
   18a71:	mov    DWORD PTR [ebp-0x860],ecx
   18a77:	mov    DWORD PTR [ebp-0x87c],eax
   18a7d:	mov    DWORD PTR [ebp-0x878],ecx
   18a83:	mov    DWORD PTR [ebp-0x85c],0x80
   18a8d:	push   0x4
   18a8f:	push   0x28
   18a91:	lea    eax,[ebp-0x87c]
   18a97:	push   eax
   18a98:	lea    eax,[ebp-0x82c]
   18a9e:	push   eax
   18a9f:	push   DWORD PTR [ebp-0x824]
   18aa5:	call   0x1181c
   18aaa:	call   eax
   18aac:	jmp    0x18ab5
   18aae:	xor    eax,eax
   18ab0:	inc    eax
   18ab1:	ret    
   18ab2:	mov    esp,DWORD PTR [ebp-0x18]
   18ab5:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   18abc:	push   DWORD PTR [ebp-0x824]
   18ac2:	call   0x11552
   18ac7:	call   eax
   18ac9:	mov    al,BYTE PTR [ebp-0x81d]
   18acf:	call   0x1e048
   18ad4:	ret    0x10
   18ad7:	int3   
   18ad8:	int3   
   18ad9:	int3   
   18ada:	int3   
   18adb:	int3   
   18adc:	push   0x874
   18ae1:	push   0x778c0
   18ae6:	call   0x1e000
   18aeb:	xor    ebx,ebx
   18aed:	mov    BYTE PTR [ebp-0x81d],bl
   18af3:	mov    BYTE PTR [ebp-0x81e],bl
   18af9:	mov    DWORD PTR [ebp-0x828],ebx
   18aff:	mov    DWORD PTR [ebp-0x824],ebx
   18b05:	xor    eax,eax
   18b07:	mov    WORD PTR [ebp-0x81c],ax
   18b0e:	push   0x7fe
   18b13:	push   ebx
   18b14:	lea    eax,[ebp-0x81a]
   18b1a:	push   eax
   18b1b:	call   0x1dcb6
   18b20:	add    esp,0xc
   18b23:	push   0x1ecd4
   18b28:	push   0x1d
   18b2a:	push   0x1ec98
   18b2f:	call   0x1748a
   18b34:	mov    edx,eax
   18b36:	mov    cx,WORD PTR [eax]
   18b39:	inc    eax
   18b3a:	inc    eax
   18b3b:	cmp    cx,bx
   18b3e:	jne    0x18b36
   18b40:	sub    eax,edx
   18b42:	lea    edi,[ebp-0x81c]
   18b48:	dec    edi
   18b49:	dec    edi
   18b4a:	mov    cx,WORD PTR [edi+0x2]
   18b4e:	inc    edi
   18b4f:	inc    edi
   18b50:	cmp    cx,bx
   18b53:	jne    0x18b4a
   18b55:	mov    ecx,eax
   18b57:	mov    esi,edx
   18b59:	shr    ecx,0x2
   18b5c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18b5e:	mov    ecx,eax
   18b60:	and    ecx,0x3
   18b63:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   18b65:	mov    eax,0x77a48
   18b6a:	mov    edx,eax
   18b6c:	mov    cx,WORD PTR [eax]
   18b6f:	inc    eax
   18b70:	inc    eax
   18b71:	cmp    cx,bx
   18b74:	jne    0x18b6c
   18b76:	sub    eax,edx
   18b78:	lea    edi,[ebp-0x81c]
   18b7e:	dec    edi
   18b7f:	dec    edi
   18b80:	mov    cx,WORD PTR [edi+0x2]
   18b84:	inc    edi
   18b85:	inc    edi
   18b86:	cmp    cx,bx
   18b89:	jne    0x18b80
   18b8b:	mov    ecx,eax
   18b8d:	mov    esi,edx
   18b8f:	shr    ecx,0x2
   18b92:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18b94:	mov    ecx,eax
   18b96:	and    ecx,0x3
   18b99:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   18b9b:	push   0x1ec74
   18ba0:	push   0x4
   18ba2:	push   0x1ec6a
   18ba7:	call   0x1748a
   18bac:	mov    edx,eax
   18bae:	mov    cx,WORD PTR [eax]
   18bb1:	inc    eax
   18bb2:	inc    eax
   18bb3:	cmp    cx,bx
   18bb6:	jne    0x18bae
   18bb8:	sub    eax,edx
   18bba:	lea    edi,[ebp-0x81c]
   18bc0:	dec    edi
   18bc1:	dec    edi
   18bc2:	mov    cx,WORD PTR [edi+0x2]
   18bc6:	inc    edi
   18bc7:	inc    edi
   18bc8:	cmp    cx,bx
   18bcb:	jne    0x18bc2
   18bcd:	mov    ecx,eax
   18bcf:	mov    esi,edx
   18bd1:	shr    ecx,0x2
   18bd4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18bd6:	mov    ecx,eax
   18bd8:	and    ecx,0x3
   18bdb:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   18bdd:	lea    eax,[ebp-0x81c]
   18be3:	push   eax
   18be4:	lea    eax,[ebp-0x85c]
   18bea:	push   eax
   18beb:	call   0x1157c
   18bf0:	call   eax
   18bf2:	xor    eax,eax
   18bf4:	lea    edi,[ebp-0x850]
   18bfa:	stos   DWORD PTR es:[edi],eax
   18bfb:	stos   DWORD PTR es:[edi],eax
   18bfc:	stos   DWORD PTR es:[edi],eax
   18bfd:	stos   DWORD PTR es:[edi],eax
   18bfe:	stos   DWORD PTR es:[edi],eax
   18bff:	mov    DWORD PTR [ebp-0x834],ebx
   18c05:	xor    eax,eax
   18c07:	lea    edi,[ebp-0x830]
   18c0d:	stos   DWORD PTR es:[edi],eax
   18c0e:	mov    DWORD PTR [ebp-0x82c],ebx
   18c14:	mov    DWORD PTR [ebp-0x854],0x18
   18c1e:	mov    DWORD PTR [ebp-0x850],ebx
   18c24:	mov    DWORD PTR [ebp-0x848],0x240
   18c2e:	lea    eax,[ebp-0x85c]
   18c34:	mov    DWORD PTR [ebp-0x84c],eax
   18c3a:	mov    DWORD PTR [ebp-0x844],ebx
   18c40:	mov    DWORD PTR [ebp-0x840],ebx
   18c46:	push   ebx
   18c47:	push   ebx
   18c48:	push   ebx
   18c49:	push   0x1
   18c4b:	push   0x7
   18c4d:	push   ebx
   18c4e:	push   ebx
   18c4f:	lea    eax,[ebp-0x834]
   18c55:	push   eax
   18c56:	lea    eax,[ebp-0x854]
   18c5c:	push   eax
   18c5d:	push   0x89
   18c62:	lea    eax,[ebp-0x82c]
   18c68:	push   eax
   18c69:	call   0x11456
   18c6e:	call   eax
   18c70:	cmp    eax,ebx
   18c72:	jge    0x18c7b
   18c74:	xor    al,al
   18c76:	jmp    0x18d9b
   18c7b:	mov    DWORD PTR [ebp-0x884],ebx
   18c81:	push   0x9
   18c83:	pop    ecx
   18c84:	xor    eax,eax
   18c86:	lea    edi,[ebp-0x880]
   18c8c:	rep stos DWORD PTR es:[edi],eax
   18c8e:	mov    DWORD PTR [ebp-0x4],ebx
   18c91:	push   0x4
   18c93:	push   0x28
   18c95:	lea    eax,[ebp-0x884]
   18c9b:	push   eax
   18c9c:	lea    eax,[ebp-0x834]
   18ca2:	push   eax
   18ca3:	push   DWORD PTR [ebp-0x82c]
   18ca9:	call   0x11870
   18cae:	call   eax
   18cb0:	cmp    eax,ebx
   18cb2:	jl     0x18d30
   18cb4:	mov    esi,0x546b5
   18cb9:	push   esi
   18cba:	call   0x11cec
   18cbf:	mov    edi,eax
   18cc1:	push   esi
   18cc2:	push   0x1f490
   18cc7:	push   edi
   18cc8:	call   0x1dcce
   18ccd:	add    esp,0x10
   18cd0:	push   0x25
   18cd2:	push   0x73b48
   18cd7:	push   esi
   18cd8:	push   edi
   18cd9:	call   0x10990
   18cde:	lea    eax,[ebp-0x828]
   18ce4:	push   eax
   18ce5:	push   esi
   18ce6:	push   edi
   18ce7:	lea    eax,[ebp-0x83c]
   18ced:	push   eax
   18cee:	call   0x1a264
   18cf3:	mov    BYTE PTR [ebp-0x83c],bl
   18cf9:	mov    eax,DWORD PTR [ebp-0x838]
   18cff:	mov    DWORD PTR [ebp-0x824],eax
   18d05:	cmp    eax,ebx
   18d07:	je     0x18d22
   18d09:	push   DWORD PTR [ebp-0x828]
   18d0f:	push   eax
   18d10:	call   0x185fc
   18d15:	test   al,al
   18d17:	je     0x18d22
   18d19:	mov    BYTE PTR [ebp-0x81d],0x1
   18d20:	jmp    0x18d30
   18d22:	mov    BYTE PTR [ebp-0x81d],0x1
   18d29:	mov    BYTE PTR [ebp-0x81e],0x1
   18d30:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   18d37:	jmp    0x18d49
   18d39:	xor    eax,eax
   18d3b:	inc    eax
   18d3c:	ret    
   18d3d:	mov    esp,DWORD PTR [ebp-0x18]
   18d40:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   18d47:	xor    ebx,ebx
   18d49:	push   DWORD PTR [ebp-0x82c]
   18d4f:	call   0x11552
   18d54:	call   eax
   18d56:	cmp    BYTE PTR [ebp-0x81e],bl
   18d5c:	je     0x18d81
   18d5e:	push   DWORD PTR [ebp-0x880]
   18d64:	push   DWORD PTR [ebp-0x884]
   18d6a:	push   DWORD PTR [ebp-0x828]
   18d70:	push   DWORD PTR [ebp-0x824]
   18d76:	call   0x18830
   18d7b:	mov    BYTE PTR [ebp-0x81d],al
   18d81:	cmp    DWORD PTR [ebp-0x824],ebx
   18d87:	je     0x18d95
   18d89:	push   DWORD PTR [ebp-0x824]
   18d8f:	call   0x11d22
   18d94:	pop    ecx
   18d95:	mov    al,BYTE PTR [ebp-0x81d]
   18d9b:	call   0x1e048
   18da0:	ret    
   18da1:	int3   
   18da2:	int3   
   18da3:	int3   
   18da4:	int3   
   18da5:	int3   
   18da6:	mov    edi,edi
   18da8:	push   ebp
   18da9:	mov    ebp,esp
   18dab:	sub    esp,0xbc
   18db1:	mov    eax,ds:0x77b1c
   18db6:	xor    eax,ebp
   18db8:	mov    DWORD PTR [ebp-0x4],eax
   18dbb:	push   ebx
   18dbc:	push   edi
   18dbd:	push   0x1ed16
   18dc2:	push   0xb
   18dc4:	push   0x1ecfe
   18dc9:	call   0x1748a
   18dce:	push   eax
   18dcf:	lea    eax,[ebp-0xbc]
   18dd5:	push   eax
   18dd6:	call   0x1157c
   18ddb:	call   eax
   18ddd:	xor    eax,eax
   18ddf:	lea    edi,[ebp-0xb0]
   18de5:	stos   DWORD PTR es:[edi],eax
   18de6:	stos   DWORD PTR es:[edi],eax
   18de7:	stos   DWORD PTR es:[edi],eax
   18de8:	stos   DWORD PTR es:[edi],eax
   18de9:	xor    ebx,ebx
   18deb:	push   ebx
   18dec:	stos   DWORD PTR es:[edi],eax
   18ded:	push   ebx
   18dee:	push   ebx
   18def:	push   0x1
   18df1:	xor    eax,eax
   18df3:	push   0x7
   18df5:	push   ebx
   18df6:	mov    DWORD PTR [ebp-0x94],ebx
   18dfc:	lea    edi,[ebp-0x90]
   18e02:	stos   DWORD PTR es:[edi],eax
   18e03:	lea    eax,[ebp-0xbc]
   18e09:	mov    DWORD PTR [ebp-0xac],eax
   18e0f:	push   ebx
   18e10:	lea    eax,[ebp-0x94]
   18e16:	push   eax
   18e17:	lea    eax,[ebp-0xb4]
   18e1d:	push   eax
   18e1e:	push   0x89
   18e23:	lea    eax,[ebp-0x8c]
   18e29:	push   eax
   18e2a:	mov    DWORD PTR [ebp-0x8c],ebx
   18e30:	mov    DWORD PTR [ebp-0xb4],0x18
   18e3a:	mov    DWORD PTR [ebp-0xb0],ebx
   18e40:	mov    DWORD PTR [ebp-0xa8],0x240
   18e4a:	mov    DWORD PTR [ebp-0xa4],ebx
   18e50:	mov    DWORD PTR [ebp-0xa0],ebx
   18e56:	call   0x11456
   18e5b:	call   eax
   18e5d:	test   eax,eax
   18e5f:	jge    0x18e68
   18e61:	xor    al,al
   18e63:	jmp    0x18f24
   18e68:	push   esi
   18e69:	mov    esi,0x20c
   18e6e:	push   esi
   18e6f:	call   0x11cec
   18e74:	pop    ecx
   18e75:	push   0x1
   18e77:	mov    edi,eax
   18e79:	push   esi
   18e7a:	push   edi
   18e7b:	lea    eax,[ebp-0x94]
   18e81:	push   eax
   18e82:	push   DWORD PTR [ebp-0x8c]
   18e88:	cmp    edi,ebx
   18e8a:	setne  BYTE PTR [ebp-0x9c]
   18e91:	call   0x1142c
   18e96:	call   eax
   18e98:	push   DWORD PTR [ebp-0x8c]
   18e9e:	mov    esi,eax
   18ea0:	call   0x11552
   18ea5:	call   eax
   18ea7:	cmp    esi,ebx
   18ea9:	pop    esi
   18eaa:	jge    0x18ebd
   18eac:	cmp    BYTE PTR [ebp-0x9c],bl
   18eb2:	je     0x18e61
   18eb4:	push   edi
   18eb5:	call   0x11d22
   18eba:	pop    ecx
   18ebb:	jmp    0x18e61
   18ebd:	push   0x6
   18ebf:	push   0x1
   18ec1:	lea    eax,[ebp-0x84]
   18ec7:	push   eax
   18ec8:	push   DWORD PTR [edi+0x8]
   18ecb:	call   0x107b2
   18ed0:	mov    ecx,0x77a08
   18ed5:	lea    eax,[ebp-0x84]
   18edb:	mov    dx,WORD PTR [eax]
   18ede:	cmp    dx,WORD PTR [ecx]
   18ee1:	jne    0x18f01
   18ee3:	cmp    dx,bx
   18ee6:	je     0x18efd
   18ee8:	mov    dx,WORD PTR [eax+0x2]
   18eec:	cmp    dx,WORD PTR [ecx+0x2]
   18ef0:	jne    0x18f01
   18ef2:	add    eax,0x4
   18ef5:	add    ecx,0x4
   18ef8:	cmp    dx,bx
   18efb:	jne    0x18edb
   18efd:	xor    eax,eax
   18eff:	jmp    0x18f06
   18f01:	sbb    eax,eax
   18f03:	sbb    eax,0xffffffff
   18f06:	cmp    eax,ebx
   18f08:	sete   BYTE PTR [ebp-0x85]
   18f0f:	cmp    BYTE PTR [ebp-0x9c],bl
   18f15:	je     0x18f1e
   18f17:	push   edi
   18f18:	call   0x11d22
   18f1d:	pop    ecx
   18f1e:	mov    al,BYTE PTR [ebp-0x85]
   18f24:	mov    ecx,DWORD PTR [ebp-0x4]
   18f27:	pop    edi
   18f28:	xor    ecx,ebp
   18f2a:	pop    ebx
   18f2b:	call   0x1dc5d
   18f30:	leave  
   18f31:	ret    
   18f32:	int3   
   18f33:	int3   
   18f34:	int3   
   18f35:	int3   
   18f36:	int3   
   18f37:	int3   
   18f38:	call   0x1a480
   18f3d:	push   0x1edb2
   18f42:	push   0x34
   18f44:	push   0x1ed48
   18f49:	call   0x1748a
   18f4e:	mov    edx,0x77cb8
   18f53:	movzx  ecx,WORD PTR [eax]
   18f56:	inc    eax
   18f57:	mov    WORD PTR [edx],cx
   18f5a:	inc    eax
   18f5b:	inc    edx
   18f5c:	inc    edx
   18f5d:	test   cx,cx
   18f60:	jne    0x18f53
   18f62:	ret    
   18f63:	int3   
   18f64:	int3   
   18f65:	int3   
   18f66:	int3   
   18f67:	int3   
   18f68:	push   0x33c
   18f6d:	push   0x778e0
   18f72:	call   0x1e000
   18f77:	mov    esi,DWORD PTR [ebp+0xc]
   18f7a:	mov    DWORD PTR [ebp-0x32c],esi
   18f80:	call   DWORD PTR ds:0x1f400
   18f86:	xor    ebx,ebx
   18f88:	cmp    BYTE PTR [ebp+0x10],bl
   18f8b:	jne    0x18fc9
   18f8d:	push   esi
   18f8e:	mov    ecx,DWORD PTR ds:0x77b50
   18f94:	call   0x14fb6
   18f99:	mov    edi,eax
   18f9b:	push   esi
   18f9c:	mov    ecx,DWORD PTR ds:0x77b50
   18fa2:	call   0x1635c
   18fa7:	mov    eax,edi
   18fa9:	dec    eax
   18faa:	je     0x18fbe
   18fac:	dec    eax
   18fad:	je     0x18fba
   18faf:	dec    eax
   18fb0:	jne    0x191a4
   18fb6:	push   0xa
   18fb8:	jmp    0x18fbf
   18fba:	push   0x2
   18fbc:	jmp    0x18fbf
   18fbe:	push   ebx
   18fbf:	call   0x1296c
   18fc4:	jmp    0x191a4
   18fc9:	mov    DWORD PTR [ebp-0x320],ebx
   18fcf:	xor    eax,eax
   18fd1:	lea    edi,[ebp-0x326]
   18fd7:	stos   DWORD PTR es:[edi],eax
   18fd8:	stos   WORD PTR es:[edi],ax
   18fda:	xor    eax,eax
   18fdc:	mov    WORD PTR [ebp-0x21c],ax
   18fe3:	push   0x1fc
   18fe8:	push   ebx
   18fe9:	lea    eax,[ebp-0x21a]
   18fef:	push   eax
   18ff0:	call   0x1dcb6
   18ff5:	add    esp,0xc
   18ff8:	lea    eax,[ebp-0x21c]
   18ffe:	mov    DWORD PTR [ebp-0x324],eax
   19004:	xor    eax,eax
   19006:	mov    WORD PTR [ebp-0x328],ax
   1900d:	mov    eax,0x1fe
   19012:	mov    WORD PTR [ebp-0x326],ax
   19019:	mov    DWORD PTR [ebp-0x34c],0x18
   19023:	mov    DWORD PTR [ebp-0x348],ebx
   19029:	mov    DWORD PTR [ebp-0x340],0x200
   19033:	mov    DWORD PTR [ebp-0x344],ebx
   19039:	mov    DWORD PTR [ebp-0x33c],ebx
   1903f:	mov    DWORD PTR [ebp-0x338],ebx
   19045:	mov    DWORD PTR [ebp-0x334],esi
   1904b:	mov    DWORD PTR [ebp-0x330],ebx
   19051:	lea    eax,[ebp-0x334]
   19057:	push   eax
   19058:	lea    eax,[ebp-0x34c]
   1905e:	push   eax
   1905f:	push   0x1f0fff
   19064:	lea    eax,[ebp-0x320]
   1906a:	push   eax
   1906b:	call   0x1125e
   19070:	call   eax
   19072:	test   eax,eax
   19074:	jl     0x191a4
   1907a:	lea    eax,[ebp-0x328]
   19080:	push   eax
   19081:	push   DWORD PTR [ebp-0x320]
   19087:	call   0x11d84
   1908c:	cmp    eax,ebx
   1908e:	jl     0x19197
   19094:	movzx  eax,WORD PTR [ebp-0x328]
   1909b:	shr    eax,1
   1909d:	xor    ecx,ecx
   1909f:	mov    WORD PTR [ebp+eax*2-0x21c],cx
   190a7:	push   DWORD PTR [ebp-0x320]
   190ad:	call   0x11e1a
   190b2:	lea    eax,[ebp-0x21c]
   190b8:	push   eax
   190b9:	call   0x10d52
   190be:	cmp    eax,ebx
   190c0:	je     0x190e5
   190c2:	push   eax
   190c3:	push   esi
   190c4:	mov    ecx,DWORD PTR ds:0x77b50
   190ca:	call   0x16dd6
   190cf:	push   DWORD PTR [ebp-0x320]
   190d5:	push   DWORD PTR [ebp-0x320]
   190db:	call   0x11e1a
   190e0:	push   eax
   190e1:	push   esi
   190e2:	push   ebx
   190e3:	jmp    0x19163
   190e5:	push   0x1edfa
   190ea:	push   0x9
   190ec:	push   0x1ede6
   190f1:	call   0x1748a
   190f6:	push   eax
   190f7:	lea    eax,[ebp-0x328]
   190fd:	push   eax
   190fe:	call   0x11e4a
   19103:	test   al,al
   19105:	je     0x1916a
   19107:	cmp    DWORD PTR ds:0x7887c,ebx
   1910d:	jne    0x19140
   1910f:	mov    DWORD PTR ds:0x7887c,0x1
   19119:	mov    DWORD PTR [ebp-0x4],ebx
   1911c:	call   0x18adc
   19121:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   19128:	jmp    0x19140
   1912a:	xor    eax,eax
   1912c:	inc    eax
   1912d:	ret    
   1912e:	mov    esp,DWORD PTR [ebp-0x18]
   19131:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   19138:	xor    ebx,ebx
   1913a:	mov    esi,DWORD PTR [ebp-0x32c]
   19140:	cmp    DWORD PTR ds:0x785a4,ebx
   19146:	jne    0x1914e
   19148:	mov    DWORD PTR ds:0x785a4,esi
   1914e:	push   DWORD PTR [ebp-0x320]
   19154:	push   DWORD PTR [ebp-0x320]
   1915a:	call   0x11e1a
   1915f:	push   eax
   19160:	push   esi
   19161:	push   0x1
   19163:	call   0x1358c
   19168:	jmp    0x19197
   1916a:	lea    eax,[ebp-0x31c]
   19170:	push   eax
   19171:	call   0x120ee
   19176:	test   al,al
   19178:	je     0x19197
   1917a:	lea    eax,[ebp-0x31c]
   19180:	push   eax
   19181:	lea    eax,[ebp-0x328]
   19187:	push   eax
   19188:	call   0x11e4a
   1918d:	test   al,al
   1918f:	je     0x19197
   19191:	push   esi
   19192:	call   0x11f9e
   19197:	push   DWORD PTR [ebp-0x320]
   1919d:	call   0x11552
   191a2:	call   eax
   191a4:	call   0x1e048
   191a9:	ret    0xc
   191ac:	int3   
   191ad:	int3   
   191ae:	int3   
   191af:	int3   
   191b0:	int3   
   191b1:	int3   
   191b2:	mov    edi,edi
   191b4:	push   ebp
   191b5:	mov    ebp,esp
   191b7:	push   ecx
   191b8:	cli    
   191b9:	mov    eax,cr0
   191bc:	mov    DWORD PTR [ebp-0x4],eax
   191bf:	and    eax,0xfffeffff
   191c4:	mov    cr0,eax
   191c7:	push   0x17d32
   191cc:	push   DWORD PTR ds:0x784ec
   191d2:	call   0x19ab8
   191d7:	push   0x0
   191d9:	push   0x18f68
   191de:	mov    ds:0x784f0,eax
   191e3:	call   0x11306
   191e8:	call   eax
   191ea:	push   0x17c1e
   191ef:	call   0x112b2
   191f4:	call   eax
   191f6:	mov    eax,DWORD PTR [ebp-0x4]
   191f9:	mov    cr0,eax
   191fc:	sti    
   191fd:	leave  
   191fe:	ret    
   191ff:	int3   
   19200:	int3   
   19201:	int3   
   19202:	int3   
   19203:	int3   
   19204:	push   0xc
   19206:	push   0x77900
   1920b:	call   0x1dcf4
   19210:	and    DWORD PTR [ebp-0x4],0x0
   19214:	push   DWORD PTR [ebp+0xc]
   19217:	push   DWORD PTR [ebp+0x8]
   1921a:	call   0x1812a
   1921f:	mov    esi,eax
   19221:	jmp    0x19236
   19223:	xor    eax,eax
   19225:	inc    eax
   19226:	ret    
   19227:	mov    esp,DWORD PTR [ebp-0x18]
   1922a:	push   0xd
   1922c:	call   0x1296c
   19231:	mov    esi,0xc0000001
   19236:	mov    DWORD PTR [ebp-0x1c],esi
   19239:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   19240:	cmp    esi,0x103
   19246:	je     0x19256
   19248:	mov    ecx,DWORD PTR [ebp+0xc]
   1924b:	mov    DWORD PTR [ecx+0x18],esi
   1924e:	xor    dl,dl
   19250:	call   DWORD PTR ds:0x1f424
   19256:	mov    eax,esi
   19258:	call   0x1dd39
   1925d:	ret    0x8
   19260:	int3   
   19261:	int3   
   19262:	int3   
   19263:	int3   
   19264:	int3   
   19265:	int3   
   19266:	mov    edi,edi
   19268:	push   ebp
   19269:	mov    ebp,esp
   1926b:	push   esi
   1926c:	mov    esi,ecx
   1926e:	mov    BYTE PTR [esi+0x8],0x0
   19272:	call   0x14ed0
   19277:	lea    ecx,[esi+0x10]
   1927a:	mov    BYTE PTR [ecx+0x8],0x0
   1927e:	call   0x148c0
   19283:	mov    eax,DWORD PTR [ebp+0x8]
   19286:	mov    DWORD PTR [esi+0x20],eax
   19289:	mov    eax,DWORD PTR [ebp+0xc]
   1928c:	mov    DWORD PTR [esi+0x24],eax
   1928f:	mov    eax,esi
   19291:	pop    esi
   19292:	pop    ebp
   19293:	ret    0x8
   19296:	int3   
   19297:	int3   
   19298:	int3   
   19299:	int3   
   1929a:	int3   
   1929b:	int3   
   1929c:	push   0x854
   192a1:	push   0x77920
   192a6:	call   0x1e000
   192ab:	mov    esi,DWORD PTR [ebp+0x8]
   192ae:	mov    DWORD PTR [ebp-0x830],esi
   192b4:	mov    edi,DWORD PTR [ebp+0xc]
   192b7:	call   0x18f38
   192bc:	call   0x11a92
   192c1:	test   eax,eax
   192c3:	je     0x198c6
   192c9:	xor    ebx,ebx
   192cb:	mov    DWORD PTR [ebp-0x834],ebx
   192d1:	call   0x18da6
   192d6:	cmp    al,bl
   192d8:	jne    0x194f9
   192de:	mov    DWORD PTR [ebp-0x4],ebx
   192e1:	push   ebx
   192e2:	push   0x784b8
   192e7:	call   0x119c0
   192ec:	call   eax
   192ee:	push   0x10
   192f0:	call   0x11cec
   192f5:	pop    ecx
   192f6:	cmp    eax,ebx
   192f8:	je     0x19311
   192fa:	lea    ecx,[ebp-0x81d]
   19300:	push   ecx
   19301:	lea    ecx,[ebp-0x81d]
   19307:	push   ecx
   19308:	mov    ecx,eax
   1930a:	call   0x16e1c
   1930f:	jmp    0x19313
   19311:	xor    eax,eax
   19313:	mov    ecx,eax
   19315:	mov    DWORD PTR ds:0x784e0,ecx
   1931b:	call   0x16cd2
   19320:	push   edi
   19321:	push   0x1f0a2
   19326:	lea    eax,[ebp-0x41c]
   1932c:	push   eax
   1932d:	call   0x1dce6
   19332:	add    esp,0xc
   19335:	push   0xffffffff
   19337:	lea    eax,[ebp-0x41c]
   1933d:	push   eax
   1933e:	lea    ecx,[ebp-0x828]
   19344:	call   0x12b44
   19349:	lea    eax,[ebp-0x828]
   1934f:	push   eax
   19350:	mov    ecx,DWORD PTR ds:0x784e0
   19356:	call   0x16e36
   1935b:	mov    edi,eax
   1935d:	push   DWORD PTR [ebp-0x828]
   19363:	call   0x11d22
   19368:	pop    ecx
   19369:	lea    eax,[ebp-0x83c]
   1936f:	push   eax
   19370:	call   0x11918
   19375:	call   eax
   19377:	push   ebx
   19378:	push   0x989680
   1937d:	push   DWORD PTR [ebp-0x838]
   19383:	push   DWORD PTR [ebp-0x83c]
   19389:	call   0x1dcaa
   1938e:	inc    eax
   1938f:	mov    DWORD PTR [edi+0x20],eax
   19392:	cmp    eax,ebx
   19394:	jge    0x1939d
   19396:	mov    DWORD PTR [edi+0x20],0x1
   1939d:	push   0xffffffff
   1939f:	push   0x1f06a
   193a4:	push   0x4
   193a6:	push   0x1f064
   193ab:	call   0x1755a
   193b0:	push   eax
   193b1:	lea    ecx,[ebp-0x828]
   193b7:	call   0x1361a
   193bc:	lea    eax,[ebp-0x828]
   193c2:	push   eax
   193c3:	mov    ecx,edi
   193c5:	call   0x12a28
   193ca:	push   DWORD PTR [ebp-0x828]
   193d0:	call   0x11d22
   193d5:	mov    DWORD PTR [esp],0x1f040
   193dc:	push   0x4
   193de:	push   0x1f036
   193e3:	call   0x1748a
   193e8:	mov    DWORD PTR [ebp-0x824],eax
   193ee:	lea    ecx,[eax+0x2]
   193f1:	mov    dx,WORD PTR [eax]
   193f4:	inc    eax
   193f5:	inc    eax
   193f6:	cmp    dx,bx
   193f9:	jne    0x193f1
   193fb:	sub    eax,ecx
   193fd:	sar    eax,1
   193ff:	add    eax,eax
   19401:	mov    WORD PTR [ebp-0x826],ax
   19408:	mov    WORD PTR [ebp-0x828],ax
   1940f:	mov    DWORD PTR [ebp-0x854],0x18
   19419:	mov    DWORD PTR [ebp-0x850],ebx
   1941f:	mov    DWORD PTR [ebp-0x848],0x40
   19429:	lea    eax,[ebp-0x828]
   1942f:	mov    DWORD PTR [ebp-0x84c],eax
   19435:	mov    DWORD PTR [ebp-0x844],ebx
   1943b:	mov    DWORD PTR [ebp-0x840],ebx
   19441:	mov    eax,DWORD PTR [ebp-0x824]
   19447:	lea    ecx,[eax+0x2]
   1944a:	mov    dx,WORD PTR [eax]
   1944d:	inc    eax
   1944e:	inc    eax
   1944f:	cmp    dx,bx
   19452:	jne    0x1944a
   19454:	sub    eax,ecx
   19456:	sar    eax,1
   19458:	mov    DWORD PTR [ebp-0x834],eax
   1945e:	push   0xffffffff
   19460:	push   0x1eff8
   19465:	push   0x8
   19467:	push   0x1efee
   1946c:	call   0x1755a
   19471:	push   eax
   19472:	lea    ecx,[ebp-0x828]
   19478:	call   0x1361a
   1947d:	lea    ecx,[edi+0x8]
   19480:	lea    eax,[ebp-0x828]
   19486:	push   eax
   19487:	call   0x12a28
   1948c:	push   DWORD PTR [ebp-0x828]
   19492:	call   0x11d22
   19497:	pop    ecx
   19498:	push   0xffffffff
   1949a:	push   0x1e108
   1949f:	lea    ecx,[ebp-0x828]
   194a5:	call   0x12b44
   194aa:	lea    eax,[ebp-0x828]
   194b0:	push   eax
   194b1:	lea    ecx,[edi+0x10]
   194b4:	call   0x12a28
   194b9:	push   DWORD PTR [ebp-0x828]
   194bf:	call   0x11d22
   194c4:	pop    ecx
   194c5:	lea    eax,[edi+0x8]
   194c8:	push   eax
   194c9:	lea    ecx,[edi+0x18]
   194cc:	call   0x12a28
   194d1:	mov    eax,DWORD PTR [edi+0x20]
   194d4:	or     DWORD PTR [ebp-0x834],eax
   194da:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   194e1:	jmp    0x194f9
   194e3:	xor    eax,eax
   194e5:	inc    eax
   194e6:	ret    
   194e7:	mov    esp,DWORD PTR [ebp-0x18]
   194ea:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   194f1:	xor    ebx,ebx
   194f3:	mov    esi,DWORD PTR [ebp-0x830]
   194f9:	cmp    DWORD PTR [ebp-0x834],ebx
   194ff:	jne    0x198c6
   19505:	xor    eax,eax
   19507:	lea    edi,[ebp-0x844]
   1950d:	stos   DWORD PTR es:[edi],eax
   1950e:	stos   DWORD PTR es:[edi],eax
   1950f:	mov    DWORD PTR [ebp-0x848],0xc
   19519:	mov    DWORD PTR [ebp-0x844],0x2
   19523:	mov    BYTE PTR [ebp-0x840],bl
   19529:	mov    BYTE PTR [ebp-0x83f],bl
   1952f:	push   0x77b78
   19534:	push   ebx
   19535:	lea    eax,[ebp-0x848]
   1953b:	push   eax
   1953c:	call   0x11a68
   19541:	call   eax
   19543:	push   eax
   19544:	call   0x118ee
   19549:	call   eax
   1954b:	push   0x10
   1954d:	call   0x11cec
   19552:	pop    ecx
   19553:	cmp    eax,ebx
   19555:	je     0x19573
   19557:	lea    ecx,[ebp-0x81d]
   1955d:	push   ecx
   1955e:	lea    ecx,[ebp-0x81d]
   19564:	push   ecx
   19565:	mov    ecx,eax
   19567:	call   0x16e1c
   1956c:	mov    ds:0x784e0,eax
   19571:	jmp    0x19579
   19573:	mov    DWORD PTR ds:0x784e0,ebx
   19579:	push   0x2c
   1957b:	call   0x11cec
   19580:	pop    ecx
   19581:	cmp    eax,ebx
   19583:	je     0x1959a
   19585:	push   0x96
   1958a:	push   0x14
   1958c:	mov    ecx,eax
   1958e:	call   0x17650
   19593:	mov    ds:0x784e8,eax
   19598:	jmp    0x195a0
   1959a:	mov    DWORD PTR ds:0x784e8,ebx
   195a0:	push   0x10
   195a2:	call   0x11cec
   195a7:	pop    ecx
   195a8:	cmp    eax,ebx
   195aa:	je     0x195c8
   195ac:	lea    ecx,[ebp-0x81d]
   195b2:	push   ecx
   195b3:	lea    ecx,[ebp-0x81d]
   195b9:	push   ecx
   195ba:	mov    ecx,eax
   195bc:	call   0x16c12
   195c1:	mov    ds:0x77b28,eax
   195c6:	jmp    0x195ce
   195c8:	mov    DWORD PTR ds:0x77b28,ebx
   195ce:	push   0x10
   195d0:	call   0x11cec
   195d5:	pop    ecx
   195d6:	cmp    eax,ebx
   195d8:	je     0x195f6
   195da:	lea    ecx,[ebp-0x81d]
   195e0:	push   ecx
   195e1:	lea    ecx,[ebp-0x81d]
   195e7:	push   ecx
   195e8:	mov    ecx,eax
   195ea:	call   0x16ee0
   195ef:	mov    ds:0x77bb4,eax
   195f4:	jmp    0x195fc
   195f6:	mov    DWORD PTR ds:0x77bb4,ebx
   195fc:	push   0x28
   195fe:	call   0x11cec
   19603:	pop    ecx
   19604:	cmp    eax,ebx
   19606:	je     0x1961a
   19608:	push   0x64
   1960a:	push   0x14
   1960c:	mov    ecx,eax
   1960e:	call   0x19266
   19613:	mov    ds:0x77b54,eax
   19618:	jmp    0x19620
   1961a:	mov    DWORD PTR ds:0x77b54,ebx
   19620:	push   0x20
   19622:	call   0x11cec
   19627:	pop    ecx
   19628:	cmp    eax,ebx
   1962a:	je     0x1963a
   1962c:	mov    ecx,eax
   1962e:	call   0x16bb2
   19633:	mov    ds:0x77b50,eax
   19638:	jmp    0x19640
   1963a:	mov    DWORD PTR ds:0x77b50,ebx
   19640:	call   0x12944
   19645:	call   0x1b7be
   1964a:	call   0x171f2
   1964f:	mov    edi,0x1efde
   19654:	push   edi
   19655:	call   0x173d4
   1965a:	push   eax
   1965b:	push   0x1efa0
   19660:	push   0xa
   19662:	push   0x1ef8a
   19667:	call   0x1748a
   1966c:	push   eax
   1966d:	lea    eax,[ebp-0x41c]
   19673:	push   eax
   19674:	call   0x1dcda
   19679:	add    esp,0xc
   1967c:	lea    eax,[ebp-0x41c]
   19682:	push   eax
   19683:	lea    eax,[ebp-0x85c]
   19689:	push   eax
   1968a:	call   0x1157c
   1968f:	call   eax
   19691:	push   edi
   19692:	call   0x173d4
   19697:	push   eax
   19698:	push   0x1ef54
   1969d:	push   0xe
   1969f:	push   0x1ef36
   196a4:	call   0x1748a
   196a9:	push   eax
   196aa:	lea    eax,[ebp-0x81c]
   196b0:	push   eax
   196b1:	call   0x1dcda
   196b6:	add    esp,0xc
   196b9:	lea    eax,[ebp-0x81c]
   196bf:	push   eax
   196c0:	lea    eax,[ebp-0x864]
   196c6:	push   eax
   196c7:	call   0x1157c
   196cc:	call   eax
   196ce:	push   0x78524
   196d3:	push   ebx
   196d4:	push   0x100
   196d9:	push   0x22
   196db:	lea    eax,[ebp-0x85c]
   196e1:	push   eax
   196e2:	push   ebx
   196e3:	push   esi
   196e4:	call   0x118c4
   196e9:	call   eax
   196eb:	cmp    eax,ebx
   196ed:	jl     0x198c8
   196f3:	mov    eax,0x19204
   196f8:	mov    DWORD PTR [esi+0x94],eax
   196fe:	mov    DWORD PTR [esi+0x90],eax
   19704:	mov    DWORD PTR [esi+0xa4],eax
   1970a:	mov    DWORD PTR [esi+0x70],eax
   1970d:	mov    DWORD PTR [esi+0x48],eax
   19710:	mov    DWORD PTR [esi+0x44],eax
   19713:	mov    DWORD PTR [esi+0x40],eax
   19716:	mov    DWORD PTR [esi+0x38],eax
   19719:	mov    eax,ds:0x78524
   1971e:	or     DWORD PTR [eax+0x1c],0x4
   19722:	lea    eax,[ebp-0x85c]
   19728:	push   eax
   19729:	lea    eax,[ebp-0x864]
   1972f:	push   eax
   19730:	call   0x1189a
   19735:	call   eax
   19737:	mov    DWORD PTR [ebp-0x830],eax
   1973d:	cmp    eax,ebx
   1973f:	jge    0x19756
   19741:	push   DWORD PTR [esi+0x4]
   19744:	call   0x1174a
   19749:	call   eax
   1974b:	mov    eax,DWORD PTR [ebp-0x830]
   19751:	jmp    0x198c8
   19756:	push   ebx
   19757:	push   0x784b8
   1975c:	call   0x119c0
   19761:	call   eax
   19763:	push   ebx
   19764:	push   0x77b58
   19769:	call   0x119c0
   1976e:	call   eax
   19770:	push   ebx
   19771:	push   0x77b2c
   19776:	call   0x119c0
   1977b:	call   eax
   1977d:	push   0x8000000
   19782:	push   0x1ef12
   19787:	push   0x9
   19789:	push   0x1eb64
   1978e:	call   0x1755a
   19793:	push   eax
   19794:	lea    eax,[ebp-0x82c]
   1979a:	push   eax
   1979b:	call   0x19d02
   197a0:	push   DWORD PTR [ebp-0x82c]
   197a6:	call   0x11480
   197ab:	call   eax
   197ad:	mov    DWORD PTR [ebp-0x838],eax
   197b3:	push   ebx
   197b4:	push   0x1eed6
   197b9:	push   0x16
   197bb:	push   0x1eebe
   197c0:	call   0x1755a
   197c5:	push   eax
   197c6:	push   DWORD PTR [ebp-0x82c]
   197cc:	call   0x19be8
   197d1:	push   eax
   197d2:	push   DWORD PTR [ebp-0x838]
   197d8:	call   0x19b8e
   197dd:	mov    edi,eax
   197df:	add    edi,DWORD PTR [ebp-0x82c]
   197e5:	mov    esi,0x1e10a
   197ea:	push   esi
   197eb:	call   0x11200
   197f0:	mov    DWORD PTR [ebp-0x824],eax
   197f6:	push   edi
   197f7:	call   0x19b36
   197fc:	mov    ecx,DWORD PTR [ebp-0x824]
   19802:	mov    ecx,DWORD PTR [ecx]
   19804:	mov    eax,DWORD PTR [ecx+eax*4]
   19807:	mov    ds:0x784e4,eax
   1980c:	push   ebx
   1980d:	push   0x1ee94
   19812:	push   0x14
   19814:	push   0x1ee7e
   19819:	call   0x1755a
   1981e:	push   eax
   1981f:	push   DWORD PTR [ebp-0x82c]
   19825:	call   0x19be8
   1982a:	push   eax
   1982b:	push   DWORD PTR [ebp-0x838]
   19831:	call   0x19b8e
   19836:	mov    edi,eax
   19838:	add    edi,DWORD PTR [ebp-0x82c]
   1983e:	push   esi
   1983f:	call   0x11200
   19844:	mov    DWORD PTR [ebp-0x824],eax
   1984a:	push   edi
   1984b:	call   0x19b36
   19850:	mov    ecx,DWORD PTR [ebp-0x824]
   19856:	mov    ecx,DWORD PTR [ecx]
   19858:	mov    eax,DWORD PTR [ecx+eax*4]
   1985b:	mov    ds:0x784d8,eax
   19860:	push   ebx
   19861:	push   0x1ee3e
   19866:	push   0xe
   19868:	push   0x1ee2e
   1986d:	call   0x1755a
   19872:	push   eax
   19873:	push   DWORD PTR [ebp-0x82c]
   19879:	call   0x19be8
   1987e:	push   eax
   1987f:	push   DWORD PTR [ebp-0x838]
   19885:	call   0x19b8e
   1988a:	mov    edi,eax
   1988c:	add    edi,DWORD PTR [ebp-0x82c]
   19892:	push   esi
   19893:	call   0x11200
   19898:	mov    esi,eax
   1989a:	push   edi
   1989b:	call   0x19b36
   198a0:	mov    ecx,DWORD PTR [esi]
   198a2:	mov    eax,DWORD PTR [ecx+eax*4]
   198a5:	mov    ds:0x784ec,eax
   198aa:	push   DWORD PTR [ebp-0x82c]
   198b0:	call   0x19e52
   198b5:	call   0x191b2
   198ba:	mov    BYTE PTR ds:0x78528,0x1
   198c1:	jmp    0x1974b
   198c6:	xor    eax,eax
   198c8:	call   0x1e048
   198cd:	ret    0x8
   198d0:	int3   
   198d1:	int3   
   198d2:	int3   
   198d3:	int3   
   198d4:	int3   
   198d5:	int3   
   198d6:	mov    edi,edi
   198d8:	push   ebp
   198d9:	mov    ebp,esp
   198db:	push   ecx
   198dc:	mov    ecx,DWORD PTR [ebp+0x8]
   198df:	mov    eax,DWORD PTR [ecx+0x4]
   198e2:	mov    edx,DWORD PTR [ebp+0xc]
   198e5:	push   ebx
   198e6:	mov    ebx,DWORD PTR [edx+0x4]
   198e9:	push   esi
   198ea:	push   edi
   198eb:	mov    DWORD PTR [ebp-0x4],eax
   198ee:	mov    DWORD PTR [ebp+0x8],eax
   198f1:	cmp    eax,ebx
   198f3:	jbe    0x198f8
   198f5:	mov    DWORD PTR [ebp+0x8],ebx
   198f8:	xor    eax,eax
   198fa:	cmp    DWORD PTR [ebp+0x8],eax
   198fd:	jbe    0x19915
   198ff:	mov    esi,DWORD PTR [ecx]
   19901:	mov    edi,DWORD PTR [edx]
   19903:	mov    cl,BYTE PTR [esi+eax*1]
   19906:	mov    dl,BYTE PTR [edi+eax*1]
   19909:	cmp    cl,dl
   1990b:	jl     0x19922
   1990d:	jg     0x19926
   1990f:	inc    eax
   19910:	cmp    eax,DWORD PTR [ebp+0x8]
   19913:	jb     0x19903
   19915:	cmp    DWORD PTR [ebp-0x4],ebx
   19918:	setb   al
   1991b:	pop    edi
   1991c:	pop    esi
   1991d:	pop    ebx
   1991e:	leave  
   1991f:	ret    0x8
   19922:	mov    al,0x1
   19924:	jmp    0x1991b
   19926:	xor    al,al
   19928:	jmp    0x1991b
   1992a:	int3   
   1992b:	int3   
   1992c:	int3   
   1992d:	int3   
   1992e:	int3   
   1992f:	int3   
   19930:	mov    edi,edi
   19932:	push   ebp
   19933:	mov    ebp,esp
   19935:	mov    eax,DWORD PTR [ebp+0x8]
   19938:	mov    ecx,DWORD PTR [eax+0x4]
   1993b:	mov    edx,DWORD PTR [ebp+0xc]
   1993e:	cmp    ecx,DWORD PTR [edx+0x4]
   19941:	je     0x19947
   19943:	xor    al,al
   19945:	jmp    0x19956
   19947:	push   esi
   19948:	mov    esi,DWORD PTR [eax]
   1994a:	push   edi
   1994b:	mov    edi,DWORD PTR [edx]
   1994d:	xor    eax,eax
   1994f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
   19951:	pop    edi
   19952:	sete   al
   19955:	pop    esi
   19956:	pop    ebp
   19957:	ret    0x8
   1995a:	int3   
   1995b:	int3   
   1995c:	int3   
   1995d:	int3   
   1995e:	int3   
   1995f:	int3   
   19960:	mov    edi,edi
   19962:	push   ebp
   19963:	mov    ebp,esp
   19965:	push   DWORD PTR [ebp+0xc]
   19968:	push   DWORD PTR [ebp+0x8]
   1996b:	call   0x19930
   19970:	xor    ecx,ecx
   19972:	test   al,al
   19974:	sete   cl
   19977:	mov    al,cl
   19979:	pop    ebp
   1997a:	ret    0x8
   1997d:	int3   
   1997e:	int3   
   1997f:	int3   
   19980:	int3   
   19981:	int3   
   19982:	mov    edi,edi
   19984:	push   ebp
   19985:	mov    ebp,esp
   19987:	push   ecx
   19988:	mov    ecx,DWORD PTR [ebp+0x8]
   1998b:	mov    eax,DWORD PTR [ebp+0xc]
   1998e:	push   ebx
   1998f:	mov    ebx,DWORD PTR [eax+0x4]
   19992:	push   esi
   19993:	push   edi
   19994:	mov    edi,DWORD PTR [ecx+0x4]
   19997:	mov    DWORD PTR [ebp-0x4],edi
   1999a:	cmp    edi,ebx
   1999c:	jbe    0x199a0
   1999e:	mov    edi,ebx
   199a0:	and    DWORD PTR [ebp+0x8],0x0
   199a4:	test   edi,edi
   199a6:	jbe    0x199c6
   199a8:	mov    eax,DWORD PTR [eax]
   199aa:	mov    ecx,DWORD PTR [ecx]
   199ac:	sub    ecx,eax
   199ae:	movzx  edx,WORD PTR [ecx+eax*1]
   199b2:	movzx  esi,WORD PTR [eax]
   199b5:	cmp    dx,si
   199b8:	jb     0x199d3
   199ba:	ja     0x199d7
   199bc:	inc    DWORD PTR [ebp+0x8]
   199bf:	inc    eax
   199c0:	inc    eax
   199c1:	cmp    DWORD PTR [ebp+0x8],edi
   199c4:	jb     0x199ae
   199c6:	cmp    DWORD PTR [ebp-0x4],ebx
   199c9:	setb   al
   199cc:	pop    edi
   199cd:	pop    esi
   199ce:	pop    ebx
   199cf:	leave  
   199d0:	ret    0x8
   199d3:	mov    al,0x1
   199d5:	jmp    0x199cc
   199d7:	xor    al,al
   199d9:	jmp    0x199cc
   199db:	int3   
   199dc:	int3   
   199dd:	int3   
   199de:	int3   
   199df:	int3   
   199e0:	mov    edi,edi
   199e2:	push   ebp
   199e3:	mov    ebp,esp
   199e5:	pop    ebp
   199e6:	jmp    0x198d6
   199eb:	int3   
   199ec:	int3   
   199ed:	int3   
   199ee:	int3   
   199ef:	int3   
   199f0:	mov    edi,edi
   199f2:	push   ebp
   199f3:	mov    ebp,esp
   199f5:	pop    ebp
   199f6:	jmp    0x19930
   199fb:	int3   
   199fc:	int3   
   199fd:	int3   
   199fe:	int3   
   199ff:	int3   
   19a00:	mov    edi,edi
   19a02:	push   ebp
   19a03:	mov    ebp,esp
   19a05:	pop    ebp
   19a06:	jmp    0x19960
   19a0b:	int3   
   19a0c:	int3   
   19a0d:	int3   
   19a0e:	int3   
   19a0f:	int3   
   19a10:	mov    edi,edi
   19a12:	push   ebp
   19a13:	mov    ebp,esp
   19a15:	pop    ebp
   19a16:	jmp    0x19982
   19a1b:	int3   
   19a1c:	int3   
   19a1d:	int3   
   19a1e:	int3   
   19a1f:	int3   
   19a20:	mov    edi,edi
   19a22:	push   ebp
   19a23:	mov    ebp,esp
   19a25:	mov    eax,DWORD PTR [ebp+0x8]
   19a28:	mov    cl,BYTE PTR [ebp+0xc]
   19a2b:	mov    BYTE PTR [eax],cl
   19a2d:	inc    eax
   19a2e:	pop    ebp
   19a2f:	ret    0x8
   19a32:	int3   
   19a33:	int3   
   19a34:	int3   
   19a35:	int3   
   19a36:	int3   
   19a37:	int3   
   19a38:	mov    edi,edi
   19a3a:	push   ebp
   19a3b:	mov    ebp,esp
   19a3d:	mov    eax,DWORD PTR [ebp+0x8]
   19a40:	mov    ecx,DWORD PTR [ebp+0xc]
   19a43:	mov    DWORD PTR [eax],ecx
   19a45:	add    eax,0x4
   19a48:	pop    ebp
   19a49:	ret    0x8
   19a4c:	int3   
   19a4d:	int3   
   19a4e:	int3   
   19a4f:	int3   
   19a50:	int3   
   19a51:	int3   
   19a52:	mov    edi,edi
   19a54:	push   ebp
   19a55:	mov    ebp,esp
   19a57:	mov    eax,DWORD PTR [ebp+0x8]
   19a5a:	mov    cx,WORD PTR [ebp+0xc]
   19a5e:	mov    WORD PTR [eax],cx
   19a61:	add    eax,0x2
   19a64:	pop    ebp
   19a65:	ret    0x8
   19a68:	int3   
   19a69:	int3   
   19a6a:	int3   
   19a6b:	int3   
   19a6c:	int3   
   19a6d:	int3   
   19a6e:	mov    edi,edi
   19a70:	push   ebp
   19a71:	mov    ebp,esp
   19a73:	push   esi
   19a74:	mov    esi,DWORD PTR [ebp+0x10]
   19a77:	push   edi
   19a78:	mov    edi,DWORD PTR [ebp+0x8]
   19a7b:	push   esi
   19a7c:	push   DWORD PTR [ebp+0xc]
   19a7f:	push   edi
   19a80:	call   0x1dcce
   19a85:	add    esp,0xc
   19a88:	lea    eax,[edi+esi*1]
   19a8b:	pop    edi
   19a8c:	pop    esi
   19a8d:	pop    ebp
   19a8e:	ret    0xc
   19a91:	int3   
   19a92:	int3   
   19a93:	int3   
   19a94:	int3   
   19a95:	int3   
   19a96:	mov    edi,edi
   19a98:	push   ebp
   19a99:	mov    ebp,esp
   19a9b:	mov    eax,DWORD PTR [ebp+0xc]
   19a9e:	mov    ecx,DWORD PTR [ebp+0x8]
   19aa1:	sub    ecx,eax
   19aa3:	sub    ecx,0x5
   19aa6:	mov    DWORD PTR [eax+0x1],ecx
   19aa9:	mov    BYTE PTR [eax],0xe9
   19aac:	add    eax,0x5
   19aaf:	pop    ebp
   19ab0:	ret    0x8
   19ab3:	int3   
   19ab4:	int3   
   19ab5:	int3   
   19ab6:	int3   
   19ab7:	int3   
   19ab8:	mov    edi,edi
   19aba:	push   ebp
   19abb:	mov    ebp,esp
   19abd:	push   ecx
   19abe:	push   ebx
   19abf:	mov    ebx,DWORD PTR [ebp+0x8]
   19ac2:	and    DWORD PTR [ebp+0x8],0x0
   19ac6:	push   edi
   19ac7:	mov    edi,ebx
   19ac9:	test   ebx,ebx
   19acb:	jne    0x19ad1
   19acd:	xor    eax,eax
   19acf:	jmp    0x19b2b
   19ad1:	push   esi
   19ad2:	push   0x20736649
   19ad7:	push   0x80
   19adc:	push   0x0
   19ade:	call   DWORD PTR ds:0x1f430
   19ae4:	mov    esi,eax
   19ae6:	mov    DWORD PTR [ebp-0x4],esi
   19ae9:	push   0x0
   19aeb:	push   edi
   19aec:	push   esi
   19aed:	call   0x1a1d4
   19af2:	mov    ecx,eax
   19af4:	sub    ecx,edi
   19af6:	add    DWORD PTR [ebp+0x8],ecx
   19af9:	add    esi,ecx
   19afb:	cmp    DWORD PTR [ebp+0x8],0x5
   19aff:	mov    edi,eax
   19b01:	jb     0x19ae9
   19b03:	push   DWORD PTR [ebp+0x8]
   19b06:	push   0x90
   19b0b:	push   ebx
   19b0c:	call   0x1dcb6
   19b11:	add    esp,0xc
   19b14:	push   esi
   19b15:	lea    eax,[ebx+0x5]
   19b18:	push   eax
   19b19:	call   0x19a96
   19b1e:	push   ebx
   19b1f:	push   DWORD PTR [ebp+0xc]
   19b22:	call   0x19a96
   19b27:	mov    eax,DWORD PTR [ebp-0x4]
   19b2a:	pop    esi
   19b2b:	pop    edi
   19b2c:	pop    ebx
   19b2d:	leave  
   19b2e:	ret    0x8
   19b31:	int3   
   19b32:	int3   
   19b33:	int3   
   19b34:	int3   
   19b35:	int3   
   19b36:	mov    edi,edi
   19b38:	push   ebp
   19b39:	mov    ebp,esp
   19b3b:	mov    eax,DWORD PTR [ebp+0x8]
   19b3e:	mov    eax,DWORD PTR [eax+0x1]
   19b41:	pop    ebp
   19b42:	ret    0x4
   19b45:	int3   
   19b46:	int3   
   19b47:	int3   
   19b48:	int3   
   19b49:	int3   
   19b4a:	mov    edi,edi
   19b4c:	push   ebp
   19b4d:	mov    ebp,esp
   19b4f:	mov    ecx,DWORD PTR [ebp+0x8]
   19b52:	movzx  eax,WORD PTR [ecx+0x14]
   19b56:	lea    eax,[eax+ecx*1+0x18]
   19b5a:	movzx  ecx,WORD PTR [ecx+0x6]
   19b5e:	push   esi
   19b5f:	xor    esi,esi
   19b61:	push   edi
   19b62:	test   ecx,ecx
   19b64:	jbe    0x19b80
   19b66:	mov    edx,DWORD PTR [eax+0xc]
   19b69:	cmp    DWORD PTR [ebp+0xc],edx
   19b6c:	jb     0x19b78
   19b6e:	mov    edi,DWORD PTR [eax+0x8]
   19b71:	add    edi,edx
   19b73:	cmp    DWORD PTR [ebp+0xc],edi
   19b76:	jb     0x19b82
   19b78:	add    eax,0x28
   19b7b:	inc    esi
   19b7c:	cmp    esi,ecx
   19b7e:	jb     0x19b66
   19b80:	xor    eax,eax
   19b82:	pop    edi
   19b83:	pop    esi
   19b84:	pop    ebp
   19b85:	ret    0x8
   19b88:	int3   
   19b89:	int3   
   19b8a:	int3   
   19b8b:	int3   
   19b8c:	int3   
   19b8d:	int3   
   19b8e:	mov    edi,edi
   19b90:	push   ebp
   19b91:	mov    ebp,esp
   19b93:	push   esi
   19b94:	push   DWORD PTR [ebp+0xc]
   19b97:	mov    esi,DWORD PTR [ebp+0x8]
   19b9a:	push   esi
   19b9b:	call   0x19b4a
   19ba0:	mov    ecx,eax
   19ba2:	test   ecx,ecx
   19ba4:	je     0x19bb7
   19ba6:	mov    eax,DWORD PTR [esi+0x3c]
   19ba9:	dec    eax
   19baa:	not    eax
   19bac:	and    eax,DWORD PTR [ecx+0x14]
   19baf:	sub    eax,DWORD PTR [ecx+0xc]
   19bb2:	add    eax,DWORD PTR [ebp+0xc]
   19bb5:	jmp    0x19bba
   19bb7:	mov    eax,DWORD PTR [ebp+0xc]
   19bba:	pop    esi
   19bbb:	pop    ebp
   19bbc:	ret    0x8
   19bbf:	int3   
   19bc0:	int3   
   19bc1:	int3   
   19bc2:	int3   
   19bc3:	int3   
   19bc4:	mov    edi,edi
   19bc6:	push   ebp
   19bc7:	mov    ebp,esp
   19bc9:	cmp    DWORD PTR [ebp+0x10],0x0
   19bcd:	je     0x19bd4
   19bcf:	mov    eax,DWORD PTR [ebp+0xc]
   19bd2:	jmp    0x19bdf
   19bd4:	push   DWORD PTR [ebp+0xc]
   19bd7:	push   DWORD PTR [ebp+0x8]
   19bda:	call   0x19b8e
   19bdf:	pop    ebp
   19be0:	ret    0xc
   19be3:	int3   
   19be4:	int3   
   19be5:	int3   
   19be6:	int3   
   19be7:	int3   
   19be8:	mov    edi,edi
   19bea:	push   ebp
   19beb:	mov    ebp,esp
   19bed:	sub    esp,0x1c
   19bf0:	push   ebx
   19bf1:	push   esi
   19bf2:	mov    esi,DWORD PTR [ebp+0x8]
   19bf5:	push   edi
   19bf6:	push   esi
   19bf7:	call   0x11480
   19bfc:	call   eax
   19bfe:	mov    ebx,eax
   19c00:	lea    eax,[ebp-0x14]
   19c03:	push   eax
   19c04:	push   0x0
   19c06:	push   0x0
   19c08:	push   esi
   19c09:	mov    DWORD PTR [ebp-0x4],ebx
   19c0c:	call   0x114aa
   19c11:	call   eax
   19c13:	mov    edi,eax
   19c15:	mov    eax,DWORD PTR [ebx+0x50]
   19c18:	mov    ecx,edi
   19c1a:	sub    ecx,esi
   19c1c:	cmp    eax,ecx
   19c1e:	jb     0x19c6f
   19c20:	mov    ecx,DWORD PTR [ebp-0x14]
   19c23:	sub    ecx,esi
   19c25:	add    ecx,edi
   19c27:	cmp    eax,ecx
   19c29:	jb     0x19c6f
   19c2b:	push   DWORD PTR [ebp+0x10]
   19c2e:	push   DWORD PTR [edi+0x20]
   19c31:	push   ebx
   19c32:	call   0x19bc4
   19c37:	push   DWORD PTR [ebp+0x10]
   19c3a:	mov    ebx,eax
   19c3c:	push   DWORD PTR [edi+0x1c]
   19c3f:	add    ebx,esi
   19c41:	push   DWORD PTR [ebp-0x4]
   19c44:	call   0x19bc4
   19c49:	push   DWORD PTR [ebp+0x10]
   19c4c:	add    eax,esi
   19c4e:	push   DWORD PTR [edi+0x24]
   19c51:	mov    DWORD PTR [ebp-0x1c],eax
   19c54:	push   DWORD PTR [ebp-0x4]
   19c57:	call   0x19bc4
   19c5c:	and    DWORD PTR [ebp-0xc],0x0
   19c60:	add    eax,esi
   19c62:	mov    esi,DWORD PTR [edi+0x18]
   19c65:	mov    DWORD PTR [ebp-0x18],eax
   19c68:	mov    DWORD PTR [ebp-0x8],esi
   19c6b:	test   esi,esi
   19c6d:	jg     0x19c7b
   19c6f:	xor    eax,eax
   19c71:	pop    edi
   19c72:	pop    esi
   19c73:	pop    ebx
   19c74:	leave  
   19c75:	ret    0xc
   19c78:	mov    esi,DWORD PTR [ebp-0x8]
   19c7b:	mov    eax,DWORD PTR [ebp-0xc]
   19c7e:	push   DWORD PTR [ebp+0x10]
   19c81:	add    esi,eax
   19c83:	mov    eax,DWORD PTR [ebp+0xc]
   19c86:	sar    esi,1
   19c88:	push   DWORD PTR [ebx+esi*4]
   19c8b:	mov    DWORD PTR [ebp-0x10],eax
   19c8e:	push   DWORD PTR [ebp-0x4]
   19c91:	call   0x19bc4
   19c96:	add    eax,DWORD PTR [ebp+0x8]
   19c99:	mov    cl,BYTE PTR [eax]
   19c9b:	mov    edx,DWORD PTR [ebp-0x10]
   19c9e:	cmp    cl,BYTE PTR [edx]
   19ca0:	jne    0x19cbd
   19ca2:	test   cl,cl
   19ca4:	je     0x19cb9
   19ca6:	mov    cl,BYTE PTR [eax+0x1]
   19ca9:	cmp    cl,BYTE PTR [edx+0x1]
   19cac:	jne    0x19cbd
   19cae:	inc    eax
   19caf:	inc    eax
   19cb0:	inc    edx
   19cb1:	inc    edx
   19cb2:	mov    DWORD PTR [ebp-0x10],edx
   19cb5:	test   cl,cl
   19cb7:	jne    0x19c99
   19cb9:	xor    eax,eax
   19cbb:	jmp    0x19cc2
   19cbd:	sbb    eax,eax
   19cbf:	sbb    eax,0xffffffff
   19cc2:	test   eax,eax
   19cc4:	je     0x19cdb
   19cc6:	jge    0x19cce
   19cc8:	inc    esi
   19cc9:	mov    DWORD PTR [ebp-0xc],esi
   19ccc:	jmp    0x19cd1
   19cce:	mov    DWORD PTR [ebp-0x8],esi
   19cd1:	mov    eax,DWORD PTR [ebp-0x8]
   19cd4:	cmp    DWORD PTR [ebp-0xc],eax
   19cd7:	jl     0x19c78
   19cd9:	jmp    0x19c6f
   19cdb:	mov    eax,DWORD PTR [ebp-0x18]
   19cde:	movzx  eax,WORD PTR [eax+esi*2]
   19ce2:	mov    ecx,DWORD PTR [ebp-0x1c]
   19ce5:	mov    ecx,DWORD PTR [ecx+eax*4]
   19ce8:	mov    eax,ecx
   19cea:	sub    eax,edi
   19cec:	add    eax,DWORD PTR [ebp+0x8]
   19cef:	cmp    eax,DWORD PTR [ebp-0x14]
   19cf2:	sbb    eax,eax
   19cf4:	not    eax
   19cf6:	and    eax,ecx
   19cf8:	jmp    0x19c71
   19cfd:	int3   
   19cfe:	int3   
   19cff:	int3   
   19d00:	int3   
   19d01:	int3   
   19d02:	mov    edi,edi
   19d04:	push   ebp
   19d05:	mov    ebp,esp
   19d07:	sub    esp,0x814
   19d0d:	mov    eax,ds:0x77b1c
   19d12:	xor    eax,ebp
   19d14:	mov    DWORD PTR [ebp-0x4],eax
   19d17:	mov    ecx,DWORD PTR [ebp+0xc]
   19d1a:	push   ebx
   19d1b:	mov    ebx,DWORD PTR [ebp+0x8]
   19d1e:	push   esi
   19d1f:	push   edi
   19d20:	xor    esi,esi
   19d22:	xor    eax,eax
   19d24:	push   ecx
   19d25:	mov    DWORD PTR [ebp-0x7ec],esi
   19d2b:	lea    edi,[ebp-0x7e8]
   19d31:	stos   DWORD PTR es:[edi],eax
   19d32:	lea    eax,[ebp-0x7d4]
   19d38:	push   0x1f0a6
   19d3d:	push   eax
   19d3e:	mov    DWORD PTR [ebp-0x7d8],esi
   19d44:	mov    DWORD PTR [ebp-0x7e4],esi
   19d4a:	call   DWORD PTR ds:0x1f428
   19d50:	add    esp,0xc
   19d53:	lea    eax,[ebp-0x7d4]
   19d59:	push   eax
   19d5a:	lea    eax,[ebp-0x80c]
   19d60:	push   eax
   19d61:	call   0x1157c
   19d66:	call   eax
   19d68:	push   0x10
   19d6a:	lea    eax,[ebp-0x80c]
   19d70:	mov    DWORD PTR [ebp-0x7fc],eax
   19d76:	push   0x1
   19d78:	lea    eax,[ebp-0x814]
   19d7e:	push   eax
   19d7f:	lea    eax,[ebp-0x804]
   19d85:	push   eax
   19d86:	push   0x80100000
   19d8b:	lea    eax,[ebp-0x7dc]
   19d91:	push   eax
   19d92:	mov    DWORD PTR [ebp-0x804],0x18
   19d9c:	mov    DWORD PTR [ebp-0x800],esi
   19da2:	mov    DWORD PTR [ebp-0x7f8],esi
   19da8:	mov    DWORD PTR [ebp-0x7f4],esi
   19dae:	mov    DWORD PTR [ebp-0x7f0],esi
   19db4:	call   0x11330
   19db9:	call   eax
   19dbb:	cmp    eax,esi
   19dbd:	jl     0x19e3b
   19dbf:	push   DWORD PTR [ebp-0x7dc]
   19dc5:	lea    eax,[ebp-0x7ec]
   19dcb:	push   DWORD PTR [ebp+0x10]
   19dce:	push   0x2
   19dd0:	push   eax
   19dd1:	push   esi
   19dd2:	push   0x4
   19dd4:	lea    eax,[ebp-0x7e0]
   19dda:	push   eax
   19ddb:	call   0x1196c
   19de0:	call   eax
   19de2:	push   DWORD PTR [ebp-0x7dc]
   19de8:	mov    edi,eax
   19dea:	call   0x11552
   19def:	call   eax
   19df1:	cmp    edi,esi
   19df3:	jge    0x19df9
   19df5:	mov    eax,edi
   19df7:	jmp    0x19e3b
   19df9:	push   0x2
   19dfb:	push   esi
   19dfc:	push   0x2
   19dfe:	lea    eax,[ebp-0x7e4]
   19e04:	push   eax
   19e05:	push   esi
   19e06:	push   esi
   19e07:	push   esi
   19e08:	lea    eax,[ebp-0x7d8]
   19e0e:	push   eax
   19e0f:	push   0xffffffff
   19e11:	push   DWORD PTR [ebp-0x7e0]
   19e17:	call   0x11942
   19e1c:	call   eax
   19e1e:	push   DWORD PTR [ebp-0x7e0]
   19e24:	mov    edi,eax
   19e26:	call   0x11552
   19e2b:	call   eax
   19e2d:	cmp    edi,esi
   19e2f:	jl     0x19df5
   19e31:	mov    eax,DWORD PTR [ebp-0x7d8]
   19e37:	mov    DWORD PTR [ebx],eax
   19e39:	xor    eax,eax
   19e3b:	mov    ecx,DWORD PTR [ebp-0x4]
   19e3e:	pop    edi
   19e3f:	pop    esi
   19e40:	xor    ecx,ebp
   19e42:	pop    ebx
   19e43:	call   0x1dc5d
   19e48:	leave  
   19e49:	ret    0xc
   19e4c:	int3   
   19e4d:	int3   
   19e4e:	int3   
   19e4f:	int3   
   19e50:	int3   
   19e51:	int3   
   19e52:	mov    edi,edi
   19e54:	push   ebp
   19e55:	mov    ebp,esp
   19e57:	push   DWORD PTR [ebp+0x8]
   19e5a:	push   0xffffffff
   19e5c:	call   0x11996
   19e61:	call   eax
   19e63:	pop    ebp
   19e64:	ret    0x4
   19e67:	int3   
   19e68:	int3   
   19e69:	int3   
   19e6a:	int3   
   19e6b:	int3   
   19e6c:	mov    edi,edi
   19e6e:	push   ebp
   19e6f:	mov    ebp,esp
   19e71:	push   esi
   19e72:	mov    esi,DWORD PTR [ebp+0x8]
   19e75:	test   esi,esi
   19e77:	jne    0x19e7c
   19e79:	lea    esi,[ecx+0x18]
   19e7c:	mov    edx,DWORD PTR [ebp+0xc]
   19e7f:	test   edx,edx
   19e81:	jne    0x19e87
   19e83:	xor    eax,eax
   19e85:	jmp    0x19e97
   19e87:	movzx  eax,BYTE PTR [edx]
   19e8a:	push   edx
   19e8b:	lea    eax,[eax*8+0x73c88]
   19e92:	push   esi
   19e93:	push   eax
   19e94:	call   DWORD PTR [eax+0x4]
   19e97:	pop    esi
   19e98:	pop    ebp
   19e99:	ret    0x8
   19e9c:	int3   
   19e9d:	int3   
   19e9e:	int3   
   19e9f:	int3   
   19ea0:	int3   
   19ea1:	int3   
   19ea2:	mov    edi,edi
   19ea4:	push   ebp
   19ea5:	mov    ebp,esp
   19ea7:	mov    eax,DWORD PTR [ebp+0x14]
   19eaa:	push   ebx
   19eab:	mov    ebx,DWORD PTR [ebp+0x8]
   19eae:	push   esi
   19eaf:	mov    esi,DWORD PTR [ebp+0x10]
   19eb2:	sub    esi,eax
   19eb4:	push   edi
   19eb5:	lea    edi,[ebx+eax*1]
   19eb8:	mov    eax,esi
   19eba:	xor    edx,edx
   19ebc:	dec    eax
   19ebd:	je     0x19ede
   19ebf:	dec    eax
   19ec0:	je     0x19ed0
   19ec2:	dec    eax
   19ec3:	dec    eax
   19ec4:	jne    0x19eea
   19ec6:	mov    eax,DWORD PTR [ecx+0xc]
   19ec9:	mov    edx,DWORD PTR [edi]
   19ecb:	and    DWORD PTR [eax],0x0
   19ece:	jmp    0x19eea
   19ed0:	mov    eax,DWORD PTR [ecx+0xc]
   19ed3:	movsx  edx,WORD PTR [edi]
   19ed6:	mov    DWORD PTR [eax],0x2
   19edc:	jmp    0x19eea
   19ede:	mov    eax,DWORD PTR [ecx+0xc]
   19ee1:	movsx  edx,BYTE PTR [edi]
   19ee4:	mov    DWORD PTR [eax],0x3
   19eea:	mov    ecx,DWORD PTR [ebp+0xc]
   19eed:	lea    eax,[edx+ecx*1]
   19ef0:	add    eax,DWORD PTR [ebp+0x10]
   19ef3:	sub    edx,ebx
   19ef5:	add    edx,ecx
   19ef7:	dec    esi
   19ef8:	je     0x19f0a
   19efa:	dec    esi
   19efb:	je     0x19f05
   19efd:	dec    esi
   19efe:	dec    esi
   19eff:	jne    0x19f0c
   19f01:	mov    DWORD PTR [edi],edx
   19f03:	jmp    0x19f0c
   19f05:	mov    WORD PTR [edi],dx
   19f08:	jmp    0x19f0c
   19f0a:	mov    BYTE PTR [edi],dl
   19f0c:	pop    edi
   19f0d:	pop    esi
   19f0e:	pop    ebx
   19f0f:	pop    ebp
   19f10:	ret    0x10
   19f13:	int3   
   19f14:	int3   
   19f15:	int3   
   19f16:	int3   
   19f17:	int3   
   19f18:	mov    edi,edi
   19f1a:	push   ebp
   19f1b:	mov    ebp,esp
   19f1d:	mov    eax,DWORD PTR [ebp+0x10]
   19f20:	inc    eax
   19f21:	pop    ebp
   19f22:	ret    0xc
   19f25:	int3   
   19f26:	int3   
   19f27:	int3   
   19f28:	int3   
   19f29:	int3   
   19f2a:	mov    edi,edi
   19f2c:	push   ebp
   19f2d:	mov    ebp,esp
   19f2f:	mov    eax,ecx
   19f31:	mov    ecx,DWORD PTR [ebp+0x8]
   19f34:	and    DWORD PTR [eax],0x0
   19f37:	and    DWORD PTR [eax+0x4],0x0
   19f3b:	test   ecx,ecx
   19f3d:	jne    0x19f42
   19f3f:	lea    ecx,[eax+0x14]
   19f42:	mov    edx,DWORD PTR [ebp+0xc]
   19f45:	mov    DWORD PTR [eax+0x8],ecx
   19f48:	test   edx,edx
   19f4a:	jne    0x19f4f
   19f4c:	lea    edx,[eax+0x10]
   19f4f:	mov    DWORD PTR [eax+0xc],edx
   19f52:	and    DWORD PTR [ecx],0x0
   19f55:	mov    ecx,DWORD PTR [eax+0xc]
   19f58:	and    DWORD PTR [ecx],0x0
   19f5b:	pop    ebp
   19f5c:	ret    0x8
   19f5f:	int3   
   19f60:	int3   
   19f61:	int3   
   19f62:	int3   
   19f63:	int3   
   19f64:	mov    edi,edi
   19f66:	push   ebp
   19f67:	mov    ebp,esp
   19f69:	push   ecx
   19f6a:	mov    eax,DWORD PTR [ebp+0x8]
   19f6d:	mov    eax,DWORD PTR [eax]
   19f6f:	push   ebx
   19f70:	push   esi
   19f71:	push   edi
   19f72:	mov    DWORD PTR [ebp-0x4],ecx
   19f75:	mov    esi,eax
   19f77:	test   eax,0x200000
   19f7c:	je     0x19f89
   19f7e:	cmp    DWORD PTR [ecx+0x4],0x0
   19f82:	je     0x19f8e
   19f84:	shr    esi,0xb
   19f87:	jmp    0x19f91
   19f89:	cmp    DWORD PTR [ecx],0x0
   19f8c:	jmp    0x19f82
   19f8e:	shr    esi,0x8
   19f91:	mov    ebx,DWORD PTR [ebp+0x10]
   19f94:	and    esi,0x7
   19f97:	shr    eax,0xe
   19f9a:	and    eax,0x7
   19f9d:	mov    edi,esi
   19f9f:	jbe    0x19fdb
   19fa1:	add    eax,ebx
   19fa3:	mov    cl,BYTE PTR [eax]
   19fa5:	movzx  edx,cl
   19fa8:	mov    dl,BYTE PTR [edx+0x73b88]
   19fae:	test   dl,0x10
   19fb1:	je     0x19fd3
   19fb3:	mov    al,BYTE PTR [eax+0x1]
   19fb6:	and    al,0x7
   19fb8:	cmp    al,0x5
   19fba:	jne    0x19fd3
   19fbc:	and    cl,0xc0
   19fbf:	je     0x19fd0
   19fc1:	cmp    cl,0x40
   19fc4:	jne    0x19fcb
   19fc6:	lea    edi,[esi+0x1]
   19fc9:	jmp    0x19fd3
   19fcb:	cmp    cl,0x80
   19fce:	jne    0x19fd3
   19fd0:	lea    edi,[esi+0x4]
   19fd3:	movzx  eax,dl
   19fd6:	and    eax,0xf
   19fd9:	add    edi,eax
   19fdb:	push   edi
   19fdc:	push   ebx
   19fdd:	push   DWORD PTR [ebp+0xc]
   19fe0:	call   0x1dcce
   19fe5:	mov    ecx,DWORD PTR [ebp+0x8]
   19fe8:	mov    eax,DWORD PTR [ecx]
   19fea:	shl    eax,0xc
   19fed:	sar    eax,0x1d
   19ff0:	add    esp,0xc
   19ff3:	test   eax,eax
   19ff5:	je     0x1a011
   19ff7:	push   eax
   19ff8:	push   esi
   19ff9:	mov    esi,DWORD PTR [ebp-0x4]
   19ffc:	push   ebx
   19ffd:	push   DWORD PTR [ebp+0xc]
   1a000:	mov    ecx,esi
   1a002:	call   0x19ea2
   1a007:	mov    ecx,DWORD PTR [esi+0x8]
   1a00a:	mov    DWORD PTR [ecx],eax
   1a00c:	mov    ecx,DWORD PTR [ebp+0x8]
   1a00f:	jmp    0x1a014
   1a011:	mov    esi,DWORD PTR [ebp-0x4]
   1a014:	test   DWORD PTR [ecx],0x400000
   1a01a:	je     0x1a021
   1a01c:	mov    eax,DWORD PTR [esi+0xc]
   1a01f:	neg    DWORD PTR [eax]
   1a021:	test   DWORD PTR [ecx],0x100000
   1a027:	je     0x1a02f
   1a029:	mov    eax,DWORD PTR [esi+0x8]
   1a02c:	or     DWORD PTR [eax],0xffffffff
   1a02f:	lea    eax,[edi+ebx*1]
   1a032:	pop    edi
   1a033:	pop    esi
   1a034:	pop    ebx
   1a035:	leave  
   1a036:	ret    0xc
   1a039:	int3   
   1a03a:	int3   
   1a03b:	int3   
   1a03c:	int3   
   1a03d:	int3   
   1a03e:	mov    edi,edi
   1a040:	push   ebp
   1a041:	mov    ebp,esp
   1a043:	push   ebx
   1a044:	push   esi
   1a045:	mov    esi,DWORD PTR [ebp+0x10]
   1a048:	push   edi
   1a049:	mov    edi,DWORD PTR [ebp+0xc]
   1a04c:	push   esi
   1a04d:	push   edi
   1a04e:	push   DWORD PTR [ebp+0x8]
   1a051:	mov    ebx,ecx
   1a053:	call   0x19f64
   1a058:	lea    eax,[esi+0x1]
   1a05b:	movzx  edx,BYTE PTR [eax]
   1a05e:	push   eax
   1a05f:	inc    edi
   1a060:	lea    edx,[edx*8+0x73c88]
   1a067:	push   edi
   1a068:	push   edx
   1a069:	mov    ecx,ebx
   1a06b:	call   DWORD PTR [edx+0x4]
   1a06e:	pop    edi
   1a06f:	pop    esi
   1a070:	pop    ebx
   1a071:	pop    ebp
   1a072:	ret    0xc
   1a075:	int3   
   1a076:	int3   
   1a077:	int3   
   1a078:	int3   
   1a079:	int3   
   1a07a:	mov    edi,edi
   1a07c:	push   ebp
   1a07d:	mov    ebp,esp
   1a07f:	push   ebx
   1a080:	push   esi
   1a081:	mov    esi,DWORD PTR [ebp+0x10]
   1a084:	push   edi
   1a085:	mov    edi,DWORD PTR [ebp+0xc]
   1a088:	push   esi
   1a089:	push   edi
   1a08a:	push   DWORD PTR [ebp+0x8]
   1a08d:	mov    ebx,ecx
   1a08f:	call   0x19f64
   1a094:	lea    eax,[esi+0x1]
   1a097:	movzx  edx,BYTE PTR [eax]
   1a09a:	push   eax
   1a09b:	inc    edi
   1a09c:	lea    edx,[edx*8+0x74490]
   1a0a3:	push   edi
   1a0a4:	push   edx
   1a0a5:	mov    ecx,ebx
   1a0a7:	call   DWORD PTR [edx+0x4]
   1a0aa:	pop    edi
   1a0ab:	pop    esi
   1a0ac:	pop    ebx
   1a0ad:	pop    ebp
   1a0ae:	ret    0xc
   1a0b1:	int3   
   1a0b2:	int3   
   1a0b3:	int3   
   1a0b4:	int3   
   1a0b5:	int3   
   1a0b6:	mov    edi,edi
   1a0b8:	push   ebp
   1a0b9:	mov    ebp,esp
   1a0bb:	mov    DWORD PTR [ecx],0x1
   1a0c1:	pop    ebp
   1a0c2:	jmp    0x1a03e
   1a0c7:	int3   
   1a0c8:	int3   
   1a0c9:	int3   
   1a0ca:	int3   
   1a0cb:	int3   
   1a0cc:	mov    edi,edi
   1a0ce:	push   ebp
   1a0cf:	mov    ebp,esp
   1a0d1:	mov    DWORD PTR [ecx+0x4],0x1
   1a0d8:	pop    ebp
   1a0d9:	jmp    0x1a03e
   1a0de:	int3   
   1a0df:	int3   
   1a0e0:	int3   
   1a0e1:	int3   
   1a0e2:	int3   
   1a0e3:	int3   
   1a0e4:	mov    edi,edi
   1a0e6:	push   ebp
   1a0e7:	mov    ebp,esp
   1a0e9:	mov    eax,DWORD PTR [ebp+0x10]
   1a0ec:	sub    esp,0x10
   1a0ef:	test   BYTE PTR [eax+0x1],0x38
   1a0f3:	push   eax
   1a0f4:	push   DWORD PTR [ebp+0xc]
   1a0f7:	jne    0x1a10c
   1a0f9:	mov    DWORD PTR [ebp-0x8],0x5bf6
   1a100:	mov    DWORD PTR [ebp-0x4],0x19f64
   1a107:	lea    eax,[ebp-0x8]
   1a10a:	jmp    0x1a11d
   1a10c:	mov    DWORD PTR [ebp-0x10],0x52f6
   1a113:	mov    DWORD PTR [ebp-0xc],0x19f64
   1a11a:	lea    eax,[ebp-0x10]
   1a11d:	push   eax
   1a11e:	call   0x19f64
   1a123:	leave  
   1a124:	ret    0xc
   1a127:	int3   
   1a128:	int3   
   1a129:	int3   
   1a12a:	int3   
   1a12b:	int3   
   1a12c:	mov    edi,edi
   1a12e:	push   ebp
   1a12f:	mov    ebp,esp
   1a131:	mov    eax,DWORD PTR [ebp+0x10]
   1a134:	sub    esp,0x10
   1a137:	test   BYTE PTR [eax+0x1],0x38
   1a13b:	push   eax
   1a13c:	push   DWORD PTR [ebp+0xc]
   1a13f:	jne    0x1a154
   1a141:	mov    DWORD PTR [ebp-0x8],0x66f7
   1a148:	mov    DWORD PTR [ebp-0x4],0x19f64
   1a14f:	lea    eax,[ebp-0x8]
   1a152:	jmp    0x1a165
   1a154:	mov    DWORD PTR [ebp-0x10],0x52f7
   1a15b:	mov    DWORD PTR [ebp-0xc],0x19f64
   1a162:	lea    eax,[ebp-0x10]
   1a165:	push   eax
   1a166:	call   0x19f64
   1a16b:	leave  
   1a16c:	ret    0xc
   1a16f:	int3   
   1a170:	int3   
   1a171:	int3   
   1a172:	int3   
   1a173:	int3   
   1a174:	mov    edi,edi
   1a176:	push   ebp
   1a177:	mov    ebp,esp
   1a179:	push   ecx
   1a17a:	push   ecx
   1a17b:	mov    edx,DWORD PTR [ebp+0x10]
   1a17e:	mov    al,BYTE PTR [edx+0x1]
   1a181:	cmp    al,0x15
   1a183:	je     0x1a1a3
   1a185:	cmp    al,0x25
   1a187:	je     0x1a1a3
   1a189:	and    al,0x38
   1a18b:	cmp    al,0x10
   1a18d:	je     0x1a19b
   1a18f:	cmp    al,0x18
   1a191:	je     0x1a19b
   1a193:	cmp    al,0x20
   1a195:	je     0x1a19b
   1a197:	cmp    al,0x28
   1a199:	jne    0x1a1af
   1a19b:	mov    eax,DWORD PTR [ecx+0x8]
   1a19e:	or     DWORD PTR [eax],0xffffffff
   1a1a1:	jmp    0x1a1af
   1a1a3:	mov    eax,DWORD PTR [edx+0x2]
   1a1a6:	mov    eax,DWORD PTR [eax]
   1a1a8:	push   esi
   1a1a9:	mov    esi,DWORD PTR [ecx+0x8]
   1a1ac:	mov    DWORD PTR [esi],eax
   1a1ae:	pop    esi
   1a1af:	push   edx
   1a1b0:	push   DWORD PTR [ebp+0xc]
   1a1b3:	lea    eax,[ebp-0x8]
   1a1b6:	push   eax
   1a1b7:	mov    DWORD PTR [ebp-0x8],0x52ff
   1a1be:	mov    DWORD PTR [ebp-0x4],0x19f64
   1a1c5:	call   0x19f64
   1a1ca:	leave  
   1a1cb:	ret    0xc
   1a1ce:	int3   
   1a1cf:	int3   
   1a1d0:	int3   
   1a1d1:	int3   
   1a1d2:	int3   
   1a1d3:	int3   
   1a1d4:	mov    edi,edi
   1a1d6:	push   ebp
   1a1d7:	mov    ebp,esp
   1a1d9:	sub    esp,0x5c
   1a1dc:	mov    eax,ds:0x77b1c
   1a1e1:	xor    eax,ebp
   1a1e3:	mov    DWORD PTR [ebp-0x4],eax
   1a1e6:	mov    eax,DWORD PTR [ebp+0x10]
   1a1e9:	push   esi
   1a1ea:	mov    esi,DWORD PTR [ebp+0x8]
   1a1ed:	push   edi
   1a1ee:	mov    edi,DWORD PTR [ebp+0xc]
   1a1f1:	push   0x0
   1a1f3:	push   eax
   1a1f4:	lea    ecx,[ebp-0x5c]
   1a1f7:	call   0x19f2a
   1a1fc:	push   edi
   1a1fd:	push   esi
   1a1fe:	lea    ecx,[ebp-0x5c]
   1a201:	call   0x19e6c
   1a206:	mov    ecx,DWORD PTR [ebp-0x4]
   1a209:	pop    edi
   1a20a:	xor    ecx,ebp
   1a20c:	pop    esi
   1a20d:	call   0x1dc5d
   1a212:	leave  
   1a213:	ret    0xc
   1a216:	int3   
   1a217:	int3   
   1a218:	int3   
   1a219:	int3   
   1a21a:	int3   
   1a21b:	int3   
   1a21c:	mov    edi,edi
   1a21e:	push   ebp
   1a21f:	mov    ebp,esp
   1a221:	push   esi
   1a222:	mov    esi,DWORD PTR [ebp+0x8]
   1a225:	push   edi
   1a226:	mov    edi,ecx
   1a228:	cmp    edi,esi
   1a22a:	je     0x1a257
   1a22c:	mov    eax,DWORD PTR [edi+0x4]
   1a22f:	cmp    eax,DWORD PTR [esi+0x4]
   1a232:	je     0x1a246
   1a234:	cmp    BYTE PTR [edi],0x0
   1a237:	je     0x1a240
   1a239:	push   eax
   1a23a:	call   0x11d22
   1a23f:	pop    ecx
   1a240:	mov    al,BYTE PTR [esi]
   1a242:	mov    BYTE PTR [edi],al
   1a244:	jmp    0x1a24e
   1a246:	cmp    BYTE PTR [esi],0x0
   1a249:	je     0x1a24e
   1a24b:	mov    BYTE PTR [edi],0x1
   1a24e:	mov    eax,DWORD PTR [esi+0x4]
   1a251:	mov    BYTE PTR [esi],0x0
   1a254:	mov    DWORD PTR [edi+0x4],eax
   1a257:	mov    eax,edi
   1a259:	pop    edi
   1a25a:	pop    esi
   1a25b:	pop    ebp
   1a25c:	ret    0x4
   1a25f:	int3   
   1a260:	int3   
   1a261:	int3   
   1a262:	int3   
   1a263:	int3   
   1a264:	mov    edi,edi
   1a266:	push   ebp
   1a267:	mov    ebp,esp
   1a269:	sub    esp,0x50
   1a26c:	push   ebx
   1a26d:	push   esi
   1a26e:	push   edi
   1a26f:	mov    edi,0x4000
   1a274:	push   edi
   1a275:	call   0x11cec
   1a27a:	pop    ecx
   1a27b:	xor    ebx,ebx
   1a27d:	push   0x38
   1a27f:	push   0x1f0d6
   1a284:	cmp    eax,ebx
   1a286:	mov    DWORD PTR [ebp-0x4],eax
   1a289:	mov    DWORD PTR [ebp-0xc],eax
   1a28c:	push   0x2f
   1a28e:	lea    eax,[ebp-0x50]
   1a291:	setne  BYTE PTR [ebp-0x10]
   1a295:	push   eax
   1a296:	xor    esi,esi
   1a298:	mov    DWORD PTR [ebp-0x30],ebx
   1a29b:	mov    DWORD PTR [ebp-0x2c],ebx
   1a29e:	mov    DWORD PTR [ebp-0x28],ebx
   1a2a1:	mov    DWORD PTR [ebp-0x4c],ebx
   1a2a4:	mov    DWORD PTR [ebp-0x50],ebx
   1a2a7:	call   0x1bb34
   1a2ac:	test   eax,eax
   1a2ae:	je     0x1a2cd
   1a2b0:	mov    esi,DWORD PTR [ebp+0x8]
   1a2b3:	mov    BYTE PTR [esi],bl
   1a2b5:	mov    DWORD PTR [esi+0x4],ebx
   1a2b8:	cmp    BYTE PTR [ebp-0x10],bl
   1a2bb:	je     0x1a2c6
   1a2bd:	push   DWORD PTR [ebp-0x4]
   1a2c0:	call   0x11d22
   1a2c5:	pop    ecx
   1a2c6:	mov    eax,esi
   1a2c8:	jmp    0x1a3e2
   1a2cd:	mov    eax,DWORD PTR [ebp+0x10]
   1a2d0:	mov    DWORD PTR [ebp-0x4c],eax
   1a2d3:	mov    eax,DWORD PTR [ebp+0xc]
   1a2d6:	mov    DWORD PTR [ebp-0x50],eax
   1a2d9:	mov    eax,DWORD PTR [ebp-0xc]
   1a2dc:	add    eax,esi
   1a2de:	mov    DWORD PTR [ebp-0x44],eax
   1a2e1:	push   0x4
   1a2e3:	lea    eax,[ebp-0x50]
   1a2e6:	push   eax
   1a2e7:	mov    DWORD PTR [ebp-0x40],edi
   1a2ea:	call   0x1bcc8
   1a2ef:	cmp    eax,0xfffffffc
   1a2f2:	mov    DWORD PTR [ebp+0x10],eax
   1a2f5:	jl     0x1a309
   1a2f7:	cmp    eax,0xfffffffd
   1a2fa:	jle    0x1a392
   1a300:	cmp    eax,0x2
   1a303:	je     0x1a392
   1a309:	mov    eax,edi
   1a30b:	sub    eax,DWORD PTR [ebp-0x40]
   1a30e:	add    esi,eax
   1a310:	cmp    DWORD PTR [ebp-0x40],ebx
   1a313:	jne    0x1a37c
   1a315:	mov    al,BYTE PTR [ebp-0x10]
   1a318:	mov    BYTE PTR [ebp-0x18],al
   1a31b:	mov    eax,DWORD PTR [ebp-0xc]
   1a31e:	mov    DWORD PTR [ebp-0x14],eax
   1a321:	lea    eax,[esi+0x4000]
   1a327:	push   eax
   1a328:	mov    BYTE PTR [ebp-0x10],bl
   1a32b:	call   0x11cec
   1a330:	pop    ecx
   1a331:	cmp    eax,ebx
   1a333:	setne  cl
   1a336:	mov    DWORD PTR [ebp-0x4],eax
   1a339:	lea    eax,[ebp-0x8]
   1a33c:	mov    BYTE PTR [ebp-0x8],cl
   1a33f:	push   eax
   1a340:	lea    ecx,[ebp-0x10]
   1a343:	call   0x1a21c
   1a348:	cmp    BYTE PTR [ebp-0x8],bl
   1a34b:	je     0x1a356
   1a34d:	push   DWORD PTR [ebp-0x4]
   1a350:	call   0x11d22
   1a355:	pop    ecx
   1a356:	push   esi
   1a357:	push   DWORD PTR [ebp-0x14]
   1a35a:	push   DWORD PTR [ebp-0xc]
   1a35d:	call   0x1dcce
   1a362:	add    esp,0xc
   1a365:	cmp    BYTE PTR [ebp-0x18],bl
   1a368:	je     0x1a373
   1a36a:	push   DWORD PTR [ebp-0x14]
   1a36d:	call   0x11d22
   1a372:	pop    ecx
   1a373:	cmp    DWORD PTR [ebp-0x40],ebx
   1a376:	je     0x1a2d9
   1a37c:	lea    eax,[ebp-0x50]
   1a37f:	push   eax
   1a380:	call   0x1cee6
   1a385:	cmp    DWORD PTR [ebp+0x10],0x1
   1a389:	jne    0x1a3b4
   1a38b:	mov    eax,DWORD PTR [ebp+0x14]
   1a38e:	mov    DWORD PTR [eax],esi
   1a390:	jmp    0x1a3d4
   1a392:	lea    eax,[ebp-0x50]
   1a395:	push   eax
   1a396:	call   0x1cee6
   1a39b:	mov    esi,DWORD PTR [ebp+0x8]
   1a39e:	mov    BYTE PTR [esi],bl
   1a3a0:	mov    DWORD PTR [esi+0x4],ebx
   1a3a3:	cmp    BYTE PTR [ebp-0x10],bl
   1a3a6:	je     0x1a2c6
   1a3ac:	push   DWORD PTR [ebp-0xc]
   1a3af:	jmp    0x1a2c0
   1a3b4:	lea    eax,[ebp-0x18]
   1a3b7:	push   eax
   1a3b8:	lea    ecx,[ebp-0x10]
   1a3bb:	mov    BYTE PTR [ebp-0x18],bl
   1a3be:	mov    DWORD PTR [ebp-0x14],ebx
   1a3c1:	call   0x1a21c
   1a3c6:	cmp    BYTE PTR [ebp-0x18],bl
   1a3c9:	je     0x1a3d4
   1a3cb:	push   DWORD PTR [ebp-0x14]
   1a3ce:	call   0x11d22
   1a3d3:	pop    ecx
   1a3d4:	mov    eax,DWORD PTR [ebp+0x8]
   1a3d7:	mov    cl,BYTE PTR [ebp-0x10]
   1a3da:	mov    BYTE PTR [eax],cl
   1a3dc:	mov    ecx,DWORD PTR [ebp-0xc]
   1a3df:	mov    DWORD PTR [eax+0x4],ecx
   1a3e2:	pop    edi
   1a3e3:	pop    esi
   1a3e4:	pop    ebx
   1a3e5:	leave  
   1a3e6:	ret    0x10
   1a3e9:	int3   
   1a3ea:	int3   
   1a3eb:	int3   
   1a3ec:	int3   
   1a3ed:	int3   
   1a3ee:	xor    eax,eax
   1a3f0:	push   eax
   1a3f1:	push   eax
   1a3f2:	push   eax
   1a3f3:	push   eax
   1a3f4:	push   0x78880
   1a3f9:	call   DWORD PTR ds:0x1f434
   1a3ff:	test   eax,eax
   1a401:	setge  al
   1a404:	ret    
   1a405:	int3   
   1a406:	int3   
   1a407:	int3   
   1a408:	int3   
   1a409:	int3   
   1a40a:	push   0x0
   1a40c:	push   0x78880
   1a411:	call   DWORD PTR ds:0x1f438
   1a417:	ret    
   1a418:	int3   
   1a419:	int3   
   1a41a:	int3   
   1a41b:	int3   
   1a41c:	int3   
   1a41d:	int3   
   1a41e:	mov    edi,edi
   1a420:	push   esi
   1a421:	push   edi
   1a422:	push   0x1
   1a424:	xor    edi,edi
   1a426:	push   edi
   1a427:	mov    esi,ecx
   1a429:	call   0x143dc
   1a42e:	cmp    DWORD PTR ds:0x786cc,edi
   1a434:	jne    0x1a44b
   1a436:	mov    ecx,eax
   1a438:	mov    DWORD PTR ds:0x786cc,ecx
   1a43e:	mov    DWORD PTR [ecx],edi
   1a440:	mov    ecx,DWORD PTR ds:0x786cc
   1a446:	xor    eax,eax
   1a448:	mov    DWORD PTR [ecx+0x8],edi
   1a44b:	inc    DWORD PTR ds:0x788a8
   1a451:	cmp    eax,edi
   1a453:	je     0x1a45c
   1a455:	push   eax
   1a456:	call   0x11d22
   1a45b:	pop    ecx
   1a45c:	push   edi
   1a45d:	push   DWORD PTR ds:0x786cc
   1a463:	mov    ecx,esi
   1a465:	call   0x143dc
   1a46a:	mov    DWORD PTR [esi+0xc],edi
   1a46d:	mov    DWORD PTR [esi+0x4],eax
   1a470:	mov    DWORD PTR [eax],eax
   1a472:	mov    esi,DWORD PTR [esi+0x4]
   1a475:	pop    edi
   1a476:	mov    DWORD PTR [esi+0x8],esi
   1a479:	pop    esi
   1a47a:	ret    
   1a47b:	int3   
   1a47c:	int3   
   1a47d:	int3   
   1a47e:	int3   
   1a47f:	int3   
   1a480:	mov    edi,edi
   1a482:	push   ebx
   1a483:	push   esi
   1a484:	xor    ebx,ebx
   1a486:	push   ebx
   1a487:	push   0x78880
   1a48c:	call   DWORD PTR ds:0x1f43c
   1a492:	push   0x10
   1a494:	call   0x11cec
   1a499:	mov    esi,eax
   1a49b:	pop    ecx
   1a49c:	cmp    esi,ebx
   1a49e:	je     0x1a4b2
   1a4a0:	mov    ecx,esi
   1a4a2:	mov    BYTE PTR [esi+0x8],bl
   1a4a5:	call   0x1a41e
   1a4aa:	mov    DWORD PTR ds:0x788a0,esi
   1a4b0:	jmp    0x1a4b8
   1a4b2:	mov    DWORD PTR ds:0x788a0,ebx
   1a4b8:	push   0x10
   1a4ba:	call   0x11cec
   1a4bf:	mov    esi,eax
   1a4c1:	pop    ecx
   1a4c2:	cmp    esi,ebx
   1a4c4:	je     0x1a4d8
   1a4c6:	mov    ecx,esi
   1a4c8:	mov    BYTE PTR [esi+0x8],bl
   1a4cb:	call   0x147fc
   1a4d0:	mov    DWORD PTR ds:0x788a4,esi
   1a4d6:	jmp    0x1a4de
   1a4d8:	mov    DWORD PTR ds:0x788a4,ebx
   1a4de:	pop    esi
   1a4df:	pop    ebx
   1a4e0:	ret    
   1a4e1:	int3   
   1a4e2:	int3   
   1a4e3:	int3   
   1a4e4:	int3   
   1a4e5:	int3   
   1a4e6:	mov    eax,ecx
   1a4e8:	add    DWORD PTR [eax+0x8],0x4
   1a4ec:	mov    ecx,DWORD PTR [eax+0x8]
   1a4ef:	cmp    ecx,DWORD PTR [eax+0x4]
   1a4f2:	jne    0x1a50d
   1a4f4:	add    DWORD PTR [eax+0xc],0x4
   1a4f8:	mov    ecx,DWORD PTR [eax+0xc]
   1a4fb:	mov    ecx,DWORD PTR [ecx]
   1a4fd:	mov    DWORD PTR [eax],ecx
   1a4ff:	add    ecx,0x1000
   1a505:	mov    DWORD PTR [eax+0x4],ecx
   1a508:	mov    ecx,DWORD PTR [eax]
   1a50a:	mov    DWORD PTR [eax+0x8],ecx
   1a50d:	ret    
   1a50e:	int3   
   1a50f:	int3   
   1a510:	int3   
   1a511:	int3   
   1a512:	int3   
   1a513:	int3   
   1a514:	mov    edi,edi
   1a516:	push   ebp
   1a517:	mov    ebp,esp
   1a519:	mov    eax,ecx
   1a51b:	mov    ecx,DWORD PTR [ebp+0xc]
   1a51e:	mov    edx,DWORD PTR [ecx]
   1a520:	mov    DWORD PTR [eax],edx
   1a522:	mov    edx,DWORD PTR [ecx]
   1a524:	add    edx,0x1000
   1a52a:	mov    DWORD PTR [eax+0x4],edx
   1a52d:	mov    edx,DWORD PTR [ebp+0x8]
   1a530:	mov    DWORD PTR [eax+0x8],edx
   1a533:	mov    DWORD PTR [eax+0xc],ecx
   1a536:	pop    ebp
   1a537:	ret    0x8
   1a53a:	int3   
   1a53b:	int3   
   1a53c:	int3   
   1a53d:	int3   
   1a53e:	int3   
   1a53f:	int3   
   1a540:	mov    edi,edi
   1a542:	push   ebp
   1a543:	mov    ebp,esp
   1a545:	mov    eax,DWORD PTR [ebp+0x8]
   1a548:	mov    edx,DWORD PTR ds:0x788dc
   1a54e:	jmp    0x1a552
   1a550:	mov    eax,ecx
   1a552:	mov    ecx,DWORD PTR [eax+0x8]
   1a555:	cmp    ecx,edx
   1a557:	jne    0x1a550
   1a559:	pop    ebp
   1a55a:	ret    0x4
   1a55d:	int3   
   1a55e:	int3   
   1a55f:	int3   
   1a560:	int3   
   1a561:	int3   
   1a562:	mov    edi,edi
   1a564:	push   ebp
   1a565:	mov    ebp,esp
   1a567:	mov    eax,DWORD PTR [ebp+0x8]
   1a56a:	mov    edx,DWORD PTR ds:0x788dc
   1a570:	jmp    0x1a574
   1a572:	mov    eax,ecx
   1a574:	mov    ecx,DWORD PTR [eax]
   1a576:	cmp    ecx,edx
   1a578:	jne    0x1a572
   1a57a:	pop    ebp
   1a57b:	ret    0x4
   1a57e:	int3   
   1a57f:	int3   
   1a580:	int3   
   1a581:	int3   
   1a582:	int3   
   1a583:	int3   
   1a584:	mov    edi,edi
   1a586:	push   esi
   1a587:	mov    esi,ecx
   1a589:	mov    ecx,DWORD PTR [esi]
   1a58b:	mov    eax,DWORD PTR [ecx+0x8]
   1a58e:	cmp    eax,DWORD PTR ds:0x788dc
   1a594:	je     0x1a5a2
   1a596:	push   eax
   1a597:	call   0x1a562
   1a59c:	jmp    0x1a5b1
   1a59e:	mov    DWORD PTR [esi],eax
   1a5a0:	mov    ecx,eax
   1a5a2:	mov    eax,DWORD PTR [ecx+0x4]
   1a5a5:	cmp    ecx,DWORD PTR [eax+0x8]
   1a5a8:	je     0x1a59e
   1a5aa:	mov    ecx,DWORD PTR [esi]
   1a5ac:	cmp    DWORD PTR [ecx+0x8],eax
   1a5af:	je     0x1a5b3
   1a5b1:	mov    DWORD PTR [esi],eax
   1a5b3:	pop    esi
   1a5b4:	ret    
   1a5b5:	int3   
   1a5b6:	int3   
   1a5b7:	int3   
   1a5b8:	int3   
   1a5b9:	int3   
   1a5ba:	mov    edi,edi
   1a5bc:	push   ebp
   1a5bd:	mov    ebp,esp
   1a5bf:	mov    eax,DWORD PTR [ebp+0x8]
   1a5c2:	test   eax,eax
   1a5c4:	je     0x1a5cd
   1a5c6:	mov    ecx,DWORD PTR [ebp+0xc]
   1a5c9:	mov    ecx,DWORD PTR [ecx]
   1a5cb:	mov    DWORD PTR [eax],ecx
   1a5cd:	pop    ebp
   1a5ce:	ret    0x8
   1a5d1:	int3   
   1a5d2:	int3   
   1a5d3:	int3   
   1a5d4:	int3   
   1a5d5:	int3   
   1a5d6:	mov    edi,edi
   1a5d8:	push   ebp
   1a5d9:	mov    ebp,esp
   1a5db:	mov    eax,DWORD PTR [ebp+0x8]
   1a5de:	jmp    0x1a5ee
   1a5e0:	mov    ecx,DWORD PTR [eax]
   1a5e2:	mov    edx,DWORD PTR [ebp+0x10]
   1a5e5:	add    DWORD PTR [ebp+0x10],0x4
   1a5e9:	mov    DWORD PTR [edx],ecx
   1a5eb:	add    eax,0x4
   1a5ee:	cmp    eax,DWORD PTR [ebp+0xc]
   1a5f1:	jne    0x1a5e0
   1a5f3:	mov    eax,DWORD PTR [ebp+0x10]
   1a5f6:	pop    ebp
   1a5f7:	ret    0xc
   1a5fa:	int3   
   1a5fb:	int3   
   1a5fc:	int3   
   1a5fd:	int3   
   1a5fe:	int3   
   1a5ff:	int3   
   1a600:	mov    edi,edi
   1a602:	push   ebp
   1a603:	mov    ebp,esp
   1a605:	mov    eax,DWORD PTR [ebp+0x8]
   1a608:	test   eax,eax
   1a60a:	jge    0x1a60e
   1a60c:	xor    eax,eax
   1a60e:	shl    eax,0x2
   1a611:	push   eax
   1a612:	call   0x11cec
   1a617:	pop    ecx
   1a618:	pop    ebp
   1a619:	ret    0x8
   1a61c:	int3   
   1a61d:	int3   
   1a61e:	int3   
   1a61f:	int3   
   1a620:	int3   
   1a621:	int3   
   1a622:	mov    edi,edi
   1a624:	push   ebp
   1a625:	mov    ebp,esp
   1a627:	push   esi
   1a628:	mov    esi,ecx
   1a62a:	push   DWORD PTR [esi]
   1a62c:	call   0x11d22
   1a631:	test   BYTE PTR [ebp+0x8],0x1
   1a635:	pop    ecx
   1a636:	je     0x1a63f
   1a638:	push   esi
   1a639:	call   0x11d22
   1a63e:	pop    ecx
   1a63f:	mov    eax,esi
   1a641:	pop    esi
   1a642:	pop    ebp
   1a643:	ret    0x4
   1a646:	int3   
   1a647:	int3   
   1a648:	int3   
   1a649:	int3   
   1a64a:	int3   
   1a64b:	int3   
   1a64c:	mov    edi,edi
   1a64e:	push   ebp
   1a64f:	mov    ebp,esp
   1a651:	mov    eax,ds:0x788d4
   1a656:	sub    esp,0x20
   1a659:	push   ebx
   1a65a:	push   esi
   1a65b:	push   edi
   1a65c:	lea    esi,[eax+0x4]
   1a65f:	lea    edi,[ebp-0x10]
   1a662:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a663:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a664:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a665:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a666:	lea    ebx,[eax+0x14]
   1a669:	jmp    0x1a687
   1a66b:	mov    eax,DWORD PTR [eax]
   1a66d:	mov    ecx,DWORD PTR [eax+0x8]
   1a670:	cmp    ecx,DWORD PTR [ebp+0x8]
   1a673:	jne    0x1a67f
   1a675:	cmp    BYTE PTR [eax+0x24],0x0
   1a679:	jne    0x1a698
   1a67b:	mov    BYTE PTR [eax+0x24],0x1
   1a67f:	lea    ecx,[ebp-0x10]
   1a682:	call   0x1a4e6
   1a687:	mov    eax,DWORD PTR [ebp-0x8]
   1a68a:	lea    edi,[ebp-0x20]
   1a68d:	mov    esi,ebx
   1a68f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a690:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a691:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a692:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a693:	cmp    eax,DWORD PTR [ebp-0x18]
   1a696:	jne    0x1a66b
   1a698:	pop    edi
   1a699:	pop    esi
   1a69a:	pop    ebx
   1a69b:	leave  
   1a69c:	ret    0x4
   1a69f:	int3   
   1a6a0:	int3   
   1a6a1:	int3   
   1a6a2:	int3   
   1a6a3:	int3   
   1a6a4:	mov    eax,ecx
   1a6a6:	xor    ecx,ecx
   1a6a8:	mov    DWORD PTR [eax+0x4],ecx
   1a6ab:	mov    DWORD PTR [eax+0x8],ecx
   1a6ae:	mov    DWORD PTR [eax+0xc],ecx
   1a6b1:	mov    DWORD PTR [eax+0x10],ecx
   1a6b4:	mov    DWORD PTR [eax+0x14],ecx
   1a6b7:	mov    DWORD PTR [eax+0x18],ecx
   1a6ba:	mov    DWORD PTR [eax+0x1c],ecx
   1a6bd:	mov    DWORD PTR [eax+0x20],ecx
   1a6c0:	mov    DWORD PTR [eax+0x24],ecx
   1a6c3:	mov    DWORD PTR [eax+0x28],ecx
   1a6c6:	mov    DWORD PTR [eax+0x2c],ecx
   1a6c9:	ret    0x4
   1a6cc:	int3   
   1a6cd:	int3   
   1a6ce:	int3   
   1a6cf:	int3   
   1a6d0:	int3   
   1a6d1:	int3   
   1a6d2:	mov    edi,edi
   1a6d4:	push   ebp
   1a6d5:	mov    ebp,esp
   1a6d7:	sub    esp,0x10
   1a6da:	push   esi
   1a6db:	push   edi
   1a6dc:	lea    esi,[ecx+0x4]
   1a6df:	lea    edi,[ebp-0x10]
   1a6e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a6e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a6e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a6e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a6e6:	mov    eax,DWORD PTR [ebp-0x8]
   1a6e9:	pop    edi
   1a6ea:	pop    esi
   1a6eb:	leave  
   1a6ec:	ret    
   1a6ed:	int3   
   1a6ee:	int3   
   1a6ef:	int3   
   1a6f0:	int3   
   1a6f1:	int3   
   1a6f2:	mov    edi,edi
   1a6f4:	push   ebp
   1a6f5:	mov    ebp,esp
   1a6f7:	mov    edx,DWORD PTR [ebp+0x8]
   1a6fa:	mov    eax,DWORD PTR [edx+0x8]
   1a6fd:	push   esi
   1a6fe:	mov    esi,DWORD PTR [eax]
   1a700:	mov    DWORD PTR [edx+0x8],esi
   1a703:	mov    esi,DWORD PTR [eax]
   1a705:	cmp    esi,DWORD PTR ds:0x788dc
   1a70b:	je     0x1a710
   1a70d:	mov    DWORD PTR [esi+0x4],edx
   1a710:	mov    esi,DWORD PTR [edx+0x4]
   1a713:	mov    DWORD PTR [eax+0x4],esi
   1a716:	mov    ecx,DWORD PTR [ecx+0x4]
   1a719:	pop    esi
   1a71a:	cmp    edx,DWORD PTR [ecx+0x4]
   1a71d:	jne    0x1a724
   1a71f:	mov    DWORD PTR [ecx+0x4],eax
   1a722:	jmp    0x1a732
   1a724:	mov    ecx,DWORD PTR [edx+0x4]
   1a727:	cmp    edx,DWORD PTR [ecx]
   1a729:	jne    0x1a72f
   1a72b:	mov    DWORD PTR [ecx],eax
   1a72d:	jmp    0x1a732
   1a72f:	mov    DWORD PTR [ecx+0x8],eax
   1a732:	mov    DWORD PTR [eax],edx
   1a734:	mov    DWORD PTR [edx+0x4],eax
   1a737:	pop    ebp
   1a738:	ret    0x4
   1a73b:	int3   
   1a73c:	int3   
   1a73d:	int3   
   1a73e:	int3   
   1a73f:	int3   
   1a740:	mov    edi,edi
   1a742:	push   ebp
   1a743:	mov    ebp,esp
   1a745:	mov    edx,DWORD PTR [ebp+0x8]
   1a748:	mov    eax,DWORD PTR [edx]
   1a74a:	push   esi
   1a74b:	mov    esi,DWORD PTR [eax+0x8]
   1a74e:	mov    DWORD PTR [edx],esi
   1a750:	mov    esi,DWORD PTR [eax+0x8]
   1a753:	cmp    esi,DWORD PTR ds:0x788dc
   1a759:	je     0x1a75e
   1a75b:	mov    DWORD PTR [esi+0x4],edx
   1a75e:	mov    esi,DWORD PTR [edx+0x4]
   1a761:	mov    DWORD PTR [eax+0x4],esi
   1a764:	mov    ecx,DWORD PTR [ecx+0x4]
   1a767:	pop    esi
   1a768:	cmp    edx,DWORD PTR [ecx+0x4]
   1a76b:	jne    0x1a772
   1a76d:	mov    DWORD PTR [ecx+0x4],eax
   1a770:	jmp    0x1a781
   1a772:	mov    ecx,DWORD PTR [edx+0x4]
   1a775:	cmp    edx,DWORD PTR [ecx+0x8]
   1a778:	jne    0x1a77f
   1a77a:	mov    DWORD PTR [ecx+0x8],eax
   1a77d:	jmp    0x1a781
   1a77f:	mov    DWORD PTR [ecx],eax
   1a781:	mov    DWORD PTR [eax+0x8],edx
   1a784:	mov    DWORD PTR [edx+0x4],eax
   1a787:	pop    ebp
   1a788:	ret    0x4
   1a78b:	int3   
   1a78c:	int3   
   1a78d:	int3   
   1a78e:	int3   
   1a78f:	int3   
   1a790:	mov    edi,edi
   1a792:	push   esi
   1a793:	mov    esi,ecx
   1a795:	mov    ecx,DWORD PTR [esi]
   1a797:	cmp    DWORD PTR [ecx+0x14],0x0
   1a79b:	jne    0x1a7aa
   1a79d:	mov    eax,DWORD PTR [ecx+0x4]
   1a7a0:	cmp    DWORD PTR [eax+0x4],ecx
   1a7a3:	jne    0x1a7aa
   1a7a5:	mov    eax,DWORD PTR [ecx+0x8]
   1a7a8:	jmp    0x1a7c7
   1a7aa:	mov    eax,DWORD PTR [ecx]
   1a7ac:	cmp    eax,DWORD PTR ds:0x788dc
   1a7b2:	je     0x1a7c0
   1a7b4:	push   eax
   1a7b5:	call   0x1a540
   1a7ba:	jmp    0x1a7c7
   1a7bc:	mov    DWORD PTR [esi],eax
   1a7be:	mov    ecx,eax
   1a7c0:	mov    eax,DWORD PTR [ecx+0x4]
   1a7c3:	cmp    ecx,DWORD PTR [eax]
   1a7c5:	je     0x1a7bc
   1a7c7:	mov    DWORD PTR [esi],eax
   1a7c9:	pop    esi
   1a7ca:	ret    
   1a7cb:	int3   
   1a7cc:	int3   
   1a7cd:	int3   
   1a7ce:	int3   
   1a7cf:	int3   
   1a7d0:	mov    edi,edi
   1a7d2:	push   ebp
   1a7d3:	mov    ebp,esp
   1a7d5:	mov    eax,DWORD PTR [ecx+0x4]
   1a7d8:	push   esi
   1a7d9:	mov    esi,DWORD PTR [eax+0x4]
   1a7dc:	push   edi
   1a7dd:	mov    edi,eax
   1a7df:	jmp    0x1a7fa
   1a7e1:	push   DWORD PTR [ebp+0x8]
   1a7e4:	lea    eax,[esi+0xc]
   1a7e7:	push   eax
   1a7e8:	call   0x199e0
   1a7ed:	test   al,al
   1a7ef:	je     0x1a7f6
   1a7f1:	mov    esi,DWORD PTR [esi+0x8]
   1a7f4:	jmp    0x1a7fa
   1a7f6:	mov    edi,esi
   1a7f8:	mov    esi,DWORD PTR [esi]
   1a7fa:	cmp    esi,DWORD PTR ds:0x788dc
   1a800:	jne    0x1a7e1
   1a802:	mov    eax,edi
   1a804:	pop    edi
   1a805:	pop    esi
   1a806:	pop    ebp
   1a807:	ret    0x4
   1a80a:	int3   
   1a80b:	int3   
   1a80c:	int3   
   1a80d:	int3   
   1a80e:	int3   
   1a80f:	int3   
   1a810:	mov    edi,edi
   1a812:	push   ebp
   1a813:	mov    ebp,esp
   1a815:	mov    eax,DWORD PTR [ecx+0x4]
   1a818:	push   esi
   1a819:	mov    esi,DWORD PTR [eax+0x4]
   1a81c:	push   edi
   1a81d:	mov    edi,eax
   1a81f:	jmp    0x1a83a
   1a821:	lea    eax,[esi+0xc]
   1a824:	push   eax
   1a825:	push   DWORD PTR [ebp+0x8]
   1a828:	call   0x199e0
   1a82d:	test   al,al
   1a82f:	je     0x1a837
   1a831:	mov    edi,esi
   1a833:	mov    esi,DWORD PTR [esi]
   1a835:	jmp    0x1a83a
   1a837:	mov    esi,DWORD PTR [esi+0x8]
   1a83a:	cmp    esi,DWORD PTR ds:0x788dc
   1a840:	jne    0x1a821
   1a842:	mov    eax,edi
   1a844:	pop    edi
   1a845:	pop    esi
   1a846:	pop    ebp
   1a847:	ret    0x4
   1a84a:	int3   
   1a84b:	int3   
   1a84c:	int3   
   1a84d:	int3   
   1a84e:	int3   
   1a84f:	int3   
   1a850:	mov    edi,edi
   1a852:	push   ebp
   1a853:	mov    ebp,esp
   1a855:	mov    ecx,DWORD PTR [ebp+0x8]
   1a858:	test   ecx,ecx
   1a85a:	je     0x1a864
   1a85c:	push   DWORD PTR [ebp+0xc]
   1a85f:	call   0x1363a
   1a864:	pop    ebp
   1a865:	ret    0x8
   1a868:	int3   
   1a869:	int3   
   1a86a:	int3   
   1a86b:	int3   
   1a86c:	int3   
   1a86d:	int3   
   1a86e:	mov    edi,edi
   1a870:	push   ebp
   1a871:	mov    ebp,esp
   1a873:	mov    ecx,DWORD PTR [ebp+0x8]
   1a876:	push   0x0
   1a878:	call   0x1a622
   1a87d:	pop    ebp
   1a87e:	ret    0x4
   1a881:	int3   
   1a882:	int3   
   1a883:	int3   
   1a884:	int3   
   1a885:	int3   
   1a886:	mov    edi,edi
   1a888:	push   ebp
   1a889:	mov    ebp,esp
   1a88b:	mov    eax,DWORD PTR [ebp+0xc]
   1a88e:	mov    ecx,DWORD PTR [eax+0x34]
   1a891:	lea    eax,[ecx+eax*1+0x40]
   1a895:	mov    ecx,DWORD PTR [ebp+0x8]
   1a898:	push   0xffffffff
   1a89a:	push   eax
   1a89b:	call   0x1361a
   1a8a0:	mov    eax,DWORD PTR [ebp+0x8]
   1a8a3:	pop    ebp
   1a8a4:	ret    0x8
   1a8a7:	int3   
   1a8a8:	int3   
   1a8a9:	int3   
   1a8aa:	int3   
   1a8ab:	int3   
   1a8ac:	mov    edi,edi
   1a8ae:	push   ebp
   1a8af:	mov    ebp,esp
   1a8b1:	mov    eax,DWORD PTR [ebp+0xc]
   1a8b4:	mov    ecx,DWORD PTR [eax+0x38]
   1a8b7:	lea    eax,[ecx+eax*1+0x40]
   1a8bb:	mov    ecx,DWORD PTR [ebp+0x8]
   1a8be:	push   0xffffffff
   1a8c0:	push   eax
   1a8c1:	call   0x1361a
   1a8c6:	mov    eax,DWORD PTR [ebp+0x8]
   1a8c9:	pop    ebp
   1a8ca:	ret    0x8
   1a8cd:	int3   
   1a8ce:	int3   
   1a8cf:	int3   
   1a8d0:	int3   
   1a8d1:	int3   
   1a8d2:	mov    edi,edi
   1a8d4:	push   ebp
   1a8d5:	mov    ebp,esp
   1a8d7:	mov    eax,DWORD PTR [ebp+0xc]
   1a8da:	mov    ecx,DWORD PTR [eax+0x3c]
   1a8dd:	lea    eax,[ecx+eax*1+0x40]
   1a8e1:	mov    ecx,DWORD PTR [ebp+0x8]
   1a8e4:	push   0xffffffff
   1a8e6:	push   eax
   1a8e7:	call   0x1361a
   1a8ec:	mov    eax,DWORD PTR [ebp+0x8]
   1a8ef:	pop    ebp
   1a8f0:	ret    0x8
   1a8f3:	int3   
   1a8f4:	int3   
   1a8f5:	int3   
   1a8f6:	int3   
   1a8f7:	int3   
   1a8f8:	mov    edi,edi
   1a8fa:	push   ebp
   1a8fb:	mov    ebp,esp
   1a8fd:	sub    esp,0x1c
   1a900:	mov    eax,ds:0x788d4
   1a905:	and    DWORD PTR [ebp-0x4],0x0
   1a909:	push   ebx
   1a90a:	mov    ebx,DWORD PTR [ebp+0x8]
   1a90d:	push   esi
   1a90e:	push   edi
   1a90f:	lea    esi,[eax+0x4]
   1a912:	mov    edi,ebx
   1a914:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a915:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a916:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a917:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a918:	lea    esi,[eax+0x14]
   1a91b:	jmp    0x1a978
   1a91d:	push   DWORD PTR [ebp+0xc]
   1a920:	mov    eax,DWORD PTR [ebx+0x8]
   1a923:	push   DWORD PTR [eax]
   1a925:	or     DWORD PTR [ebp-0x4],0x1
   1a929:	lea    eax,[ebp-0xc]
   1a92c:	push   eax
   1a92d:	call   0x1a8d2
   1a932:	push   eax
   1a933:	call   0x199f0
   1a938:	test   al,al
   1a93a:	je     0x1a94b
   1a93c:	mov    eax,DWORD PTR [ebx+0x8]
   1a93f:	mov    eax,DWORD PTR [eax]
   1a941:	cmp    BYTE PTR [eax+0x1c],0x0
   1a945:	mov    BYTE PTR [ebp+0xb],0x1
   1a949:	jne    0x1a94f
   1a94b:	mov    BYTE PTR [ebp+0xb],0x0
   1a94f:	test   BYTE PTR [ebp-0x4],0x1
   1a953:	je     0x1a962
   1a955:	push   DWORD PTR [ebp-0xc]
   1a958:	and    DWORD PTR [ebp-0x4],0xfffffffe
   1a95c:	call   0x11d22
   1a961:	pop    ecx
   1a962:	cmp    BYTE PTR [ebp+0xb],0x0
   1a966:	jne    0x1a987
   1a968:	mov    ecx,ebx
   1a96a:	call   0x1a4e6
   1a96f:	mov    esi,DWORD PTR ds:0x788d4
   1a975:	add    esi,0x14
   1a978:	mov    eax,DWORD PTR [ebx+0x8]
   1a97b:	lea    edi,[ebp-0x1c]
   1a97e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a97f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a980:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a981:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a982:	cmp    eax,DWORD PTR [ebp-0x14]
   1a985:	jne    0x1a91d
   1a987:	pop    edi
   1a988:	pop    esi
   1a989:	mov    eax,ebx
   1a98b:	pop    ebx
   1a98c:	leave  
   1a98d:	ret    0x8
   1a990:	int3   
   1a991:	int3   
   1a992:	int3   
   1a993:	int3   
   1a994:	int3   
   1a995:	int3   
   1a996:	mov    edi,edi
   1a998:	push   ebp
   1a999:	mov    ebp,esp
   1a99b:	sub    esp,0x28
   1a99e:	mov    eax,DWORD PTR [ebp+0x8]
   1a9a1:	push   ebx
   1a9a2:	push   esi
   1a9a3:	push   edi
   1a9a4:	lea    esi,[eax+0x4]
   1a9a7:	mov    DWORD PTR [ebp-0x8],esi
   1a9aa:	lea    edi,[ebp-0x18]
   1a9ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a9ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a9af:	and    DWORD PTR [ebp-0x4],0x0
   1a9b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a9b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a9b5:	lea    ecx,[eax+0x14]
   1a9b8:	mov    eax,DWORD PTR [ebp-0x10]
   1a9bb:	mov    esi,ecx
   1a9bd:	lea    edi,[ebp-0x28]
   1a9c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a9c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a9c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a9c3:	push   0x4
   1a9c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a9c6:	pop    ebx
   1a9c7:	mov    DWORD PTR [ebp+0x8],ecx
   1a9ca:	cmp    eax,DWORD PTR [ebp-0x20]
   1a9cd:	je     0x1a9ef
   1a9cf:	mov    esi,ecx
   1a9d1:	lea    edi,[ebp-0x28]
   1a9d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a9d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a9d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a9d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a9d8:	mov    eax,DWORD PTR [eax]
   1a9da:	add    ebx,DWORD PTR [eax]
   1a9dc:	inc    DWORD PTR [ebp-0x4]
   1a9df:	lea    ecx,[ebp-0x18]
   1a9e2:	call   0x1a4e6
   1a9e7:	mov    eax,DWORD PTR [ebp-0x10]
   1a9ea:	cmp    eax,DWORD PTR [ebp-0x20]
   1a9ed:	jne    0x1a9d8
   1a9ef:	mov    eax,DWORD PTR [ebp+0xc]
   1a9f2:	cmp    ebx,DWORD PTR [eax+0x4]
   1a9f5:	mov    DWORD PTR [eax+0x4],ebx
   1a9f8:	jbe    0x1aa02
   1a9fa:	mov    DWORD PTR [eax],0x1
   1aa00:	jmp    0x1aa48
   1aa02:	and    DWORD PTR [eax],0x0
   1aa05:	mov    esi,DWORD PTR [ebp-0x8]
   1aa08:	lea    ebx,[eax+0x8]
   1aa0b:	mov    eax,DWORD PTR [ebp-0x4]
   1aa0e:	mov    DWORD PTR [ebx],eax
   1aa10:	lea    edi,[ebp-0x28]
   1aa13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aa14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aa15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aa16:	add    ebx,0x4
   1aa19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aa1a:	jmp    0x1aa36
   1aa1c:	mov    eax,DWORD PTR [esi]
   1aa1e:	push   DWORD PTR [eax]
   1aa20:	push   eax
   1aa21:	push   ebx
   1aa22:	call   0x1dcce
   1aa27:	mov    eax,DWORD PTR [esi]
   1aa29:	add    ebx,DWORD PTR [eax]
   1aa2b:	add    esp,0xc
   1aa2e:	lea    ecx,[ebp-0x28]
   1aa31:	call   0x1a4e6
   1aa36:	mov    esi,DWORD PTR [ebp+0x8]
   1aa39:	lea    edi,[ebp-0x18]
   1aa3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aa3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aa3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aa3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aa40:	mov    esi,DWORD PTR [ebp-0x20]
   1aa43:	cmp    esi,DWORD PTR [ebp-0x10]
   1aa46:	jne    0x1aa1c
   1aa48:	pop    edi
   1aa49:	pop    esi
   1aa4a:	pop    ebx
   1aa4b:	leave  
   1aa4c:	ret    0x8
   1aa4f:	int3   
   1aa50:	int3   
   1aa51:	int3   
   1aa52:	int3   
   1aa53:	int3   
   1aa54:	push   0x8
   1aa56:	push   0x77940
   1aa5b:	call   0x1dcf4
   1aa60:	xor    esi,esi
   1aa62:	push   esi
   1aa63:	push   esi
   1aa64:	push   esi
   1aa65:	push   esi
   1aa66:	push   0x788ac
   1aa6b:	call   DWORD PTR ds:0x1f434
   1aa71:	cmp    eax,esi
   1aa73:	jl     0x1aab4
   1aa75:	mov    DWORD PTR [ebp-0x4],esi
   1aa78:	push   DWORD PTR [ebp+0x8]
   1aa7b:	push   DWORD PTR ds:0x788d4
   1aa81:	call   0x1a996
   1aa86:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1aa8d:	jmp    0x1aaa8
   1aa8f:	xor    eax,eax
   1aa91:	inc    eax
   1aa92:	ret    
   1aa93:	mov    esp,DWORD PTR [ebp-0x18]
   1aa96:	mov    eax,DWORD PTR [ebp+0x8]
   1aa99:	mov    DWORD PTR [eax],0x2
   1aa9f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1aaa6:	xor    esi,esi
   1aaa8:	push   esi
   1aaa9:	push   0x788ac
   1aaae:	call   DWORD PTR ds:0x1f438
   1aab4:	call   0x1dd39
   1aab9:	ret    0x4
   1aabc:	int3   
   1aabd:	int3   
   1aabe:	int3   
   1aabf:	int3   
   1aac0:	int3   
   1aac1:	int3   
   1aac2:	mov    edi,edi
   1aac4:	push   ebp
   1aac5:	mov    ebp,esp
   1aac7:	sub    esp,0x10
   1aaca:	push   ebx
   1aacb:	mov    ebx,ecx
   1aacd:	mov    eax,DWORD PTR [ebx+0x10]
   1aad0:	push   esi
   1aad1:	lea    ecx,[eax+0x4]
   1aad4:	push   edi
   1aad5:	mov    DWORD PTR [ebx+0x10],ecx
   1aad8:	push   DWORD PTR [eax]
   1aada:	call   0x11d22
   1aadf:	xor    eax,eax
   1aae1:	pop    ecx
   1aae2:	cmp    DWORD PTR [ebx+0x2c],eax
   1aae5:	jne    0x1ab12
   1aae7:	mov    DWORD PTR [ebp-0x10],eax
   1aaea:	mov    DWORD PTR [ebp-0xc],eax
   1aaed:	mov    DWORD PTR [ebp-0x8],eax
   1aaf0:	mov    DWORD PTR [ebp-0x4],eax
   1aaf3:	lea    edi,[ebx+0x4]
   1aaf6:	lea    esi,[ebp-0x10]
   1aaf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aafa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aafb:	push   DWORD PTR [ebx+0x24]
   1aafe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aaff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab00:	lea    edi,[ebx+0x14]
   1ab03:	lea    esi,[ebp-0x10]
   1ab06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab0a:	call   0x11d22
   1ab0f:	pop    ecx
   1ab10:	jmp    0x1ab29
   1ab12:	mov    eax,DWORD PTR [ebx+0x10]
   1ab15:	push   eax
   1ab16:	push   DWORD PTR [eax]
   1ab18:	lea    ecx,[ebp-0x10]
   1ab1b:	call   0x1a514
   1ab20:	lea    edi,[ebx+0x4]
   1ab23:	mov    esi,eax
   1ab25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab29:	pop    edi
   1ab2a:	pop    esi
   1ab2b:	pop    ebx
   1ab2c:	leave  
   1ab2d:	ret    
   1ab2e:	int3   
   1ab2f:	int3   
   1ab30:	int3   
   1ab31:	int3   
   1ab32:	int3   
   1ab33:	int3   
   1ab34:	mov    edi,edi
   1ab36:	push   ebp
   1ab37:	mov    ebp,esp
   1ab39:	mov    eax,DWORD PTR [ebp+0xc]
   1ab3c:	push   esi
   1ab3d:	mov    esi,ecx
   1ab3f:	mov    ecx,DWORD PTR [eax]
   1ab41:	mov    DWORD PTR [ebp+0xc],ecx
   1ab44:	mov    ecx,DWORD PTR [eax+0x4]
   1ab47:	mov    edx,DWORD PTR [eax]
   1ab49:	mov    DWORD PTR [ecx],edx
   1ab4b:	mov    ecx,DWORD PTR [eax]
   1ab4d:	mov    edx,DWORD PTR [eax+0x4]
   1ab50:	push   eax
   1ab51:	mov    DWORD PTR [ecx+0x4],edx
   1ab54:	call   0x11d22
   1ab59:	mov    eax,DWORD PTR [ebp+0x8]
   1ab5c:	dec    DWORD PTR [esi+0x8]
   1ab5f:	pop    ecx
   1ab60:	mov    ecx,DWORD PTR [ebp+0xc]
   1ab63:	mov    DWORD PTR [eax],ecx
   1ab65:	pop    esi
   1ab66:	pop    ebp
   1ab67:	ret    0x8
   1ab6a:	int3   
   1ab6b:	int3   
   1ab6c:	int3   
   1ab6d:	int3   
   1ab6e:	int3   
   1ab6f:	int3   
   1ab70:	mov    edi,edi
   1ab72:	push   ebp
   1ab73:	mov    ebp,esp
   1ab75:	push   ecx
   1ab76:	push   esi
   1ab77:	mov    esi,ecx
   1ab79:	jmp    0x1ab8e
   1ab7b:	mov    eax,ecx
   1ab7d:	mov    ecx,DWORD PTR [ecx]
   1ab7f:	push   eax
   1ab80:	lea    eax,[ebp-0x4]
   1ab83:	mov    DWORD PTR [ebp+0xc],ecx
   1ab86:	push   eax
   1ab87:	mov    ecx,esi
   1ab89:	call   0x1ab34
   1ab8e:	mov    ecx,DWORD PTR [ebp+0xc]
   1ab91:	cmp    ecx,DWORD PTR [ebp+0x10]
   1ab94:	jne    0x1ab7b
   1ab96:	mov    eax,DWORD PTR [ebp+0x8]
   1ab99:	mov    DWORD PTR [eax],ecx
   1ab9b:	pop    esi
   1ab9c:	leave  
   1ab9d:	ret    0xc
   1aba0:	int3   
   1aba1:	int3   
   1aba2:	int3   
   1aba3:	int3   
   1aba4:	int3   
   1aba5:	int3   
   1aba6:	mov    edi,edi
   1aba8:	push   ebp
   1aba9:	mov    ebp,esp
   1abab:	push   0x0
   1abad:	push   0xc
   1abaf:	call   0x133fc
   1abb4:	mov    ecx,DWORD PTR [ebp+0x8]
   1abb7:	test   ecx,ecx
   1abb9:	jne    0x1abbd
   1abbb:	mov    ecx,eax
   1abbd:	mov    DWORD PTR [eax],ecx
   1abbf:	mov    ecx,DWORD PTR [ebp+0xc]
   1abc2:	test   ecx,ecx
   1abc4:	jne    0x1abc8
   1abc6:	mov    ecx,eax
   1abc8:	mov    DWORD PTR [eax+0x4],ecx
   1abcb:	pop    ebp
   1abcc:	ret    0x8
   1abcf:	int3   
   1abd0:	int3   
   1abd1:	int3   
   1abd2:	int3   
   1abd3:	int3   
   1abd4:	mov    edi,edi
   1abd6:	push   esi
   1abd7:	mov    esi,ecx
   1abd9:	mov    eax,DWORD PTR [esi+0x28]
   1abdc:	shl    eax,0x2
   1abdf:	push   0x0
   1abe1:	push   eax
   1abe2:	call   0x133fc
   1abe7:	mov    DWORD PTR [esi+0x24],eax
   1abea:	pop    esi
   1abeb:	ret    
   1abec:	int3   
   1abed:	int3   
   1abee:	int3   
   1abef:	int3   
   1abf0:	int3   
   1abf1:	int3   
   1abf2:	mov    edi,edi
   1abf4:	push   ebp
   1abf5:	mov    ebp,esp
   1abf7:	push   ebx
   1abf8:	push   esi
   1abf9:	push   edi
   1abfa:	mov    edi,DWORD PTR [ebp+0x8]
   1abfd:	mov    eax,0xfffffff
   1ac02:	mov    esi,ecx
   1ac04:	cmp    edi,eax
   1ac06:	jbe    0x1ac0a
   1ac08:	mov    edi,eax
   1ac0a:	mov    eax,edi
   1ac0c:	push   0x0
   1ac0e:	shl    eax,0x2
   1ac11:	push   eax
   1ac12:	call   0x133fc
   1ac17:	mov    ebx,eax
   1ac19:	mov    eax,edi
   1ac1b:	shr    eax,0x2
   1ac1e:	lea    eax,[ebx+eax*4]
   1ac21:	push   eax
   1ac22:	mov    DWORD PTR [ebp+0x8],eax
   1ac25:	mov    eax,DWORD PTR [esi+0x20]
   1ac28:	add    eax,0x4
   1ac2b:	push   eax
   1ac2c:	push   DWORD PTR [esi+0x10]
   1ac2f:	call   0x1a5d6
   1ac34:	push   DWORD PTR [esi+0x24]
   1ac37:	call   0x11d22
   1ac3c:	mov    eax,DWORD PTR [ebp+0x8]
   1ac3f:	pop    ecx
   1ac40:	mov    DWORD PTR [esi+0x28],edi
   1ac43:	pop    edi
   1ac44:	mov    DWORD PTR [esi+0x24],ebx
   1ac47:	pop    esi
   1ac48:	pop    ebx
   1ac49:	pop    ebp
   1ac4a:	ret    0x4
   1ac4d:	int3   
   1ac4e:	int3   
   1ac4f:	int3   
   1ac50:	int3   
   1ac51:	int3   
   1ac52:	mov    edi,edi
   1ac54:	push   ebp
   1ac55:	mov    ebp,esp
   1ac57:	push   edi
   1ac58:	mov    edi,DWORD PTR [ebp+0xc]
   1ac5b:	cmp    DWORD PTR [ebp+0x8],edi
   1ac5e:	je     0x1ac74
   1ac60:	push   esi
   1ac61:	mov    esi,DWORD PTR [ebp+0x10]
   1ac64:	inc    DWORD PTR [esi]
   1ac66:	lea    ecx,[ebp+0x8]
   1ac69:	call   0x1a584
   1ac6e:	cmp    DWORD PTR [ebp+0x8],edi
   1ac71:	jne    0x1ac64
   1ac73:	pop    esi
   1ac74:	pop    edi
   1ac75:	pop    ebp
   1ac76:	ret    
   1ac77:	int3   
   1ac78:	int3   
   1ac79:	int3   
   1ac7a:	int3   
   1ac7b:	int3   
   1ac7c:	mov    edi,edi
   1ac7e:	push   ebp
   1ac7f:	mov    ebp,esp
   1ac81:	sub    esp,0x28
   1ac84:	push   ebx
   1ac85:	mov    ebx,DWORD PTR [ebp+0x8]
   1ac88:	push   esi
   1ac89:	push   edi
   1ac8a:	push   0xffffffff
   1ac8c:	push   ebx
   1ac8d:	lea    ecx,[ebp-0x8]
   1ac90:	call   0x12b44
   1ac95:	and    DWORD PTR [ebx],0x0
   1ac98:	lea    eax,[ebp-0x8]
   1ac9b:	push   eax
   1ac9c:	lea    eax,[ebp-0x18]
   1ac9f:	push   eax
   1aca0:	call   0x1a8f8
   1aca5:	mov    esi,DWORD PTR ds:0x788d4
   1acab:	mov    eax,DWORD PTR [ebp-0x10]
   1acae:	push   DWORD PTR [ebp-0x8]
   1acb1:	add    esi,0x14
   1acb4:	lea    edi,[ebp-0x28]
   1acb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1acb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1acb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1acba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1acbb:	cmp    eax,DWORD PTR [ebp-0x20]
   1acbe:	je     0x1acc8
   1acc0:	mov    eax,DWORD PTR [eax]
   1acc2:	mov    eax,DWORD PTR [eax+0x20]
   1acc5:	inc    eax
   1acc6:	mov    DWORD PTR [ebx],eax
   1acc8:	call   0x11d22
   1accd:	pop    ecx
   1acce:	pop    edi
   1accf:	pop    esi
   1acd0:	pop    ebx
   1acd1:	leave  
   1acd2:	ret    0x4
   1acd5:	int3   
   1acd6:	int3   
   1acd7:	int3   
   1acd8:	int3   
   1acd9:	int3   
   1acda:	add    DWORD PTR [ecx+0xc],0x4
   1acde:	dec    DWORD PTR [ecx+0x2c]
   1ace1:	mov    eax,DWORD PTR [ecx+0xc]
   1ace4:	je     0x1aceb
   1ace6:	cmp    eax,DWORD PTR [ecx+0x8]
   1ace9:	jne    0x1acf0
   1aceb:	jmp    0x1aac2
   1acf0:	ret    
   1acf1:	int3   
   1acf2:	int3   
   1acf3:	int3   
   1acf4:	int3   
   1acf5:	int3   
   1acf6:	mov    edi,edi
   1acf8:	push   esi
   1acf9:	push   0x0
   1acfb:	push   0xc
   1acfd:	mov    esi,ecx
   1acff:	call   0x133fc
   1ad04:	mov    DWORD PTR [eax],eax
   1ad06:	mov    DWORD PTR [eax+0x4],eax
   1ad09:	and    DWORD PTR [esi+0x8],0x0
   1ad0d:	mov    DWORD PTR [esi+0x4],eax
   1ad10:	mov    eax,esi
   1ad12:	pop    esi
   1ad13:	ret    0x4
   1ad16:	int3   
   1ad17:	int3   
   1ad18:	int3   
   1ad19:	int3   
   1ad1a:	int3   
   1ad1b:	int3   
   1ad1c:	mov    edi,edi
   1ad1e:	push   ebp
   1ad1f:	mov    ebp,esp
   1ad21:	push   ecx
   1ad22:	push   esi
   1ad23:	mov    esi,ecx
   1ad25:	mov    eax,DWORD PTR [esi+0x4]
   1ad28:	mov    ecx,DWORD PTR [eax]
   1ad2a:	push   eax
   1ad2b:	push   ecx
   1ad2c:	lea    eax,[ebp-0x4]
   1ad2f:	push   eax
   1ad30:	mov    ecx,esi
   1ad32:	call   0x1ab70
   1ad37:	push   DWORD PTR [esi+0x4]
   1ad3a:	call   0x11d22
   1ad3f:	and    DWORD PTR [esi+0x4],0x0
   1ad43:	and    DWORD PTR [esi+0x8],0x0
   1ad47:	pop    ecx
   1ad48:	pop    esi
   1ad49:	leave  
   1ad4a:	ret    
   1ad4b:	int3   
   1ad4c:	int3   
   1ad4d:	int3   
   1ad4e:	int3   
   1ad4f:	int3   
   1ad50:	mov    edi,edi
   1ad52:	push   ebp
   1ad53:	mov    ebp,esp
   1ad55:	push   ecx
   1ad56:	mov    eax,DWORD PTR [ecx+0x4]
   1ad59:	push   DWORD PTR [eax]
   1ad5b:	lea    eax,[ebp-0x4]
   1ad5e:	push   eax
   1ad5f:	call   0x1ab34
   1ad64:	leave  
   1ad65:	ret    
   1ad66:	int3   
   1ad67:	int3   
   1ad68:	int3   
   1ad69:	int3   
   1ad6a:	int3   
   1ad6b:	int3   
   1ad6c:	mov    edi,edi
   1ad6e:	push   ebp
   1ad6f:	mov    ebp,esp
   1ad71:	sub    esp,0x18
   1ad74:	push   ebx
   1ad75:	push   esi
   1ad76:	push   edi
   1ad77:	push   0x0
   1ad79:	push   0x400
   1ad7e:	mov    ebx,ecx
   1ad80:	call   0x1a600
   1ad85:	cmp    DWORD PTR [ebx+0x2c],0x0
   1ad89:	mov    esi,eax
   1ad8b:	mov    DWORD PTR [ebp-0x8],esi
   1ad8e:	jne    0x1adc5
   1ad90:	mov    ecx,ebx
   1ad92:	mov    DWORD PTR [ebx+0x28],0x2
   1ad99:	call   0x1abd4
   1ad9e:	mov    eax,DWORD PTR [ebx+0x24]
   1ada1:	mov    DWORD PTR [eax+0x4],esi
   1ada4:	mov    eax,DWORD PTR [ebx+0x24]
   1ada7:	add    eax,0x4
   1adaa:	push   eax
   1adab:	add    esi,0x800
   1adb1:	push   esi
   1adb2:	lea    ecx,[ebp-0x18]
   1adb5:	call   0x1a514
   1adba:	lea    edi,[ebx+0x4]
   1adbd:	mov    esi,eax
   1adbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1adc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1adc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1adc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1adc3:	jmp    0x1ae23
   1adc5:	mov    ecx,DWORD PTR [ebx+0x28]
   1adc8:	mov    edx,DWORD PTR [ebx+0x24]
   1adcb:	mov    eax,DWORD PTR [ebx+0x20]
   1adce:	lea    ecx,[edx+ecx*4-0x4]
   1add2:	cmp    eax,ecx
   1add4:	jae    0x1ade4
   1add6:	add    eax,0x4
   1add9:	mov    DWORD PTR [ebx+0x20],eax
   1addc:	mov    DWORD PTR [eax],esi
   1adde:	push   DWORD PTR [ebx+0x20]
   1ade1:	push   esi
   1ade2:	jmp    0x1ae1b
   1ade4:	sub    eax,DWORD PTR [ebx+0x10]
   1ade7:	mov    ecx,ebx
   1ade9:	sar    eax,0x2
   1adec:	inc    eax
   1aded:	mov    edi,eax
   1adef:	lea    eax,[edi+edi*1]
   1adf2:	push   eax
   1adf3:	call   0x1abf2
   1adf8:	lea    ecx,[eax+edi*4]
   1adfb:	mov    DWORD PTR [ecx],esi
   1adfd:	push   eax
   1adfe:	push   DWORD PTR [ebx+0xc]
   1ae01:	mov    DWORD PTR [ebp-0x4],ecx
   1ae04:	lea    ecx,[ebp-0x18]
   1ae07:	call   0x1a514
   1ae0c:	push   DWORD PTR [ebp-0x4]
   1ae0f:	lea    edi,[ebx+0x4]
   1ae12:	push   DWORD PTR [ebp-0x8]
   1ae15:	mov    esi,eax
   1ae17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ae18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ae19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ae1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ae1b:	lea    ecx,[ebp-0x18]
   1ae1e:	call   0x1a514
   1ae23:	lea    edi,[ebx+0x14]
   1ae26:	mov    esi,eax
   1ae28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ae29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ae2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ae2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ae2c:	pop    edi
   1ae2d:	pop    esi
   1ae2e:	pop    ebx
   1ae2f:	leave  
   1ae30:	ret    
   1ae31:	int3   
   1ae32:	int3   
   1ae33:	int3   
   1ae34:	int3   
   1ae35:	int3   
   1ae36:	mov    edi,edi
   1ae38:	push   ebp
   1ae39:	mov    ebp,esp
   1ae3b:	mov    eax,DWORD PTR [ebp+0xc]
   1ae3e:	push   ebx
   1ae3f:	push   esi
   1ae40:	push   edi
   1ae41:	lea    edi,[eax+0x4]
   1ae44:	push   DWORD PTR [edi]
   1ae46:	mov    ebx,ecx
   1ae48:	push   eax
   1ae49:	call   0x1aba6
   1ae4e:	push   DWORD PTR [ebp+0x10]
   1ae51:	mov    esi,eax
   1ae53:	mov    DWORD PTR [edi],esi
   1ae55:	mov    eax,DWORD PTR [esi+0x4]
   1ae58:	mov    DWORD PTR [eax],esi
   1ae5a:	lea    eax,[esi+0x8]
   1ae5d:	push   eax
   1ae5e:	call   0x1a5ba
   1ae63:	mov    eax,DWORD PTR [ebp+0x8]
   1ae66:	inc    DWORD PTR [ebx+0x8]
   1ae69:	pop    edi
   1ae6a:	mov    DWORD PTR [eax],esi
   1ae6c:	pop    esi
   1ae6d:	pop    ebx
   1ae6e:	pop    ebp
   1ae6f:	ret    0xc
   1ae72:	int3   
   1ae73:	int3   
   1ae74:	int3   
   1ae75:	int3   
   1ae76:	int3   
   1ae77:	int3   
   1ae78:	mov    edi,edi
   1ae7a:	push   ebp
   1ae7b:	mov    ebp,esp
   1ae7d:	push   ecx
   1ae7e:	mov    eax,DWORD PTR [ebp+0xc]
   1ae81:	push   esi
   1ae82:	mov    esi,ecx
   1ae84:	jmp    0x1aea0
   1ae86:	add    eax,0x8
   1ae89:	push   eax
   1ae8a:	push   DWORD PTR [ebp+0x8]
   1ae8d:	lea    eax,[ebp-0x4]
   1ae90:	push   eax
   1ae91:	mov    ecx,esi
   1ae93:	call   0x1ae36
   1ae98:	mov    eax,DWORD PTR [ebp+0xc]
   1ae9b:	mov    eax,DWORD PTR [eax]
   1ae9d:	mov    DWORD PTR [ebp+0xc],eax
   1aea0:	cmp    eax,DWORD PTR [ebp+0x10]
   1aea3:	jne    0x1ae86
   1aea5:	pop    esi
   1aea6:	leave  
   1aea7:	ret    0xc
   1aeaa:	int3   
   1aeab:	int3   
   1aeac:	int3   
   1aead:	int3   
   1aeae:	int3   
   1aeaf:	int3   
   1aeb0:	mov    edi,edi
   1aeb2:	push   ebp
   1aeb3:	mov    ebp,esp
   1aeb5:	push   esi
   1aeb6:	push   edi
   1aeb7:	push   DWORD PTR [ebp+0xc]
   1aeba:	mov    edi,ecx
   1aebc:	call   0x1a810
   1aec1:	push   DWORD PTR [ebp+0xc]
   1aec4:	mov    ecx,edi
   1aec6:	mov    esi,eax
   1aec8:	call   0x1a7d0
   1aecd:	mov    ecx,DWORD PTR [ebp+0x8]
   1aed0:	pop    edi
   1aed1:	mov    DWORD PTR [ecx],eax
   1aed3:	mov    DWORD PTR [ecx+0x4],esi
   1aed6:	mov    eax,ecx
   1aed8:	pop    esi
   1aed9:	pop    ebp
   1aeda:	ret    0x8
   1aedd:	int3   
   1aede:	int3   
   1aedf:	int3   
   1aee0:	int3   
   1aee1:	int3   
   1aee2:	mov    edi,edi
   1aee4:	push   ebp
   1aee5:	mov    ebp,esp
   1aee7:	push   ecx
   1aee8:	push   ebx
   1aee9:	push   esi
   1aeea:	push   edi
   1aeeb:	push   0x1
   1aeed:	xor    edi,edi
   1aeef:	push   edi
   1aef0:	mov    esi,ecx
   1aef2:	call   0x1434c
   1aef7:	lea    ecx,[ebp-0x1]
   1aefa:	mov    ebx,eax
   1aefc:	call   DWORD PTR ds:0x77764
   1af02:	cmp    DWORD PTR ds:0x788dc,edi
   1af08:	jne    0x1af1d
   1af0a:	mov    eax,ebx
   1af0c:	mov    ds:0x788dc,eax
   1af11:	mov    DWORD PTR [eax],edi
   1af13:	mov    eax,ds:0x788dc
   1af18:	xor    ebx,ebx
   1af1a:	mov    DWORD PTR [eax+0x8],edi
   1af1d:	inc    DWORD PTR ds:0x788e0
   1af23:	lea    ecx,[ebp-0x1]
   1af26:	call   DWORD PTR ds:0x77760
   1af2c:	cmp    ebx,edi
   1af2e:	je     0x1af37
   1af30:	push   ebx
   1af31:	call   0x11d22
   1af36:	pop    ecx
   1af37:	push   edi
   1af38:	push   DWORD PTR ds:0x788dc
   1af3e:	mov    ecx,esi
   1af40:	call   0x1434c
   1af45:	mov    DWORD PTR [esi+0xc],edi
   1af48:	mov    DWORD PTR [esi+0x4],eax
   1af4b:	mov    DWORD PTR [eax],eax
   1af4d:	mov    esi,DWORD PTR [esi+0x4]
   1af50:	pop    edi
   1af51:	mov    DWORD PTR [esi+0x8],esi
   1af54:	pop    esi
   1af55:	pop    ebx
   1af56:	leave  
   1af57:	ret    
   1af58:	int3   
   1af59:	int3   
   1af5a:	int3   
   1af5b:	int3   
   1af5c:	int3   
   1af5d:	int3   
   1af5e:	mov    edi,edi
   1af60:	push   ebp
   1af61:	mov    ebp,esp
   1af63:	push   ebx
   1af64:	push   esi
   1af65:	mov    esi,DWORD PTR [ebp+0x10]
   1af68:	push   edi
   1af69:	push   0x0
   1af6b:	push   esi
   1af6c:	mov    edi,ecx
   1af6e:	call   0x1434c
   1af73:	push   DWORD PTR [ebp+0x14]
   1af76:	mov    ebx,eax
   1af78:	mov    eax,ds:0x788dc
   1af7d:	mov    DWORD PTR [ebx],eax
   1af7f:	mov    eax,ds:0x788dc
   1af84:	mov    DWORD PTR [ebx+0x8],eax
   1af87:	lea    eax,[ebx+0xc]
   1af8a:	push   eax
   1af8b:	call   0x1a850
   1af90:	inc    DWORD PTR [edi+0xc]
   1af93:	cmp    esi,DWORD PTR [edi+0x4]
   1af96:	je     0x1afc0
   1af98:	mov    eax,DWORD PTR [ebp+0xc]
   1af9b:	cmp    eax,DWORD PTR ds:0x788dc
   1afa1:	jne    0x1afc0
   1afa3:	lea    eax,[esi+0xc]
   1afa6:	push   eax
   1afa7:	push   DWORD PTR [ebp+0x14]
   1afaa:	call   0x199e0
   1afaf:	test   al,al
   1afb1:	jne    0x1afc0
   1afb3:	mov    DWORD PTR [esi+0x8],ebx
   1afb6:	mov    eax,DWORD PTR [edi+0x4]
   1afb9:	cmp    esi,DWORD PTR [eax+0x8]
   1afbc:	jne    0x1afda
   1afbe:	jmp    0x1afcf
   1afc0:	mov    DWORD PTR [esi],ebx
   1afc2:	mov    eax,DWORD PTR [edi+0x4]
   1afc5:	cmp    esi,eax
   1afc7:	jne    0x1afd4
   1afc9:	mov    DWORD PTR [eax+0x4],ebx
   1afcc:	mov    eax,DWORD PTR [edi+0x4]
   1afcf:	mov    DWORD PTR [eax+0x8],ebx
   1afd2:	jmp    0x1afda
   1afd4:	cmp    esi,DWORD PTR [eax]
   1afd6:	jne    0x1afda
   1afd8:	mov    DWORD PTR [eax],ebx
   1afda:	mov    eax,DWORD PTR [edi+0x4]
   1afdd:	mov    esi,ebx
   1afdf:	cmp    ebx,DWORD PTR [eax+0x4]
   1afe2:	je     0x1b096
   1afe8:	mov    eax,DWORD PTR [esi+0x4]
   1afeb:	xor    edx,edx
   1afed:	cmp    DWORD PTR [eax+0x14],edx
   1aff0:	jne    0x1b096
   1aff6:	mov    ecx,DWORD PTR [eax+0x4]
   1aff9:	cmp    eax,DWORD PTR [ecx]
   1affb:	jne    0x1b037
   1affd:	mov    ecx,DWORD PTR [ecx+0x8]
   1b000:	cmp    DWORD PTR [ecx+0x14],edx
   1b003:	je     0x1b03e
   1b005:	cmp    esi,DWORD PTR [eax+0x8]
   1b008:	jne    0x1b014
   1b00a:	mov    esi,eax
   1b00c:	push   esi
   1b00d:	mov    ecx,edi
   1b00f:	call   0x1a6f2
   1b014:	mov    eax,DWORD PTR [esi+0x4]
   1b017:	mov    DWORD PTR [eax+0x14],0x1
   1b01e:	mov    eax,DWORD PTR [esi+0x4]
   1b021:	mov    eax,DWORD PTR [eax+0x4]
   1b024:	and    DWORD PTR [eax+0x14],0x0
   1b028:	mov    eax,DWORD PTR [esi+0x4]
   1b02b:	push   DWORD PTR [eax+0x4]
   1b02e:	mov    ecx,edi
   1b030:	call   0x1a740
   1b035:	jmp    0x1b08a
   1b037:	mov    ecx,DWORD PTR [ecx]
   1b039:	cmp    DWORD PTR [ecx+0x14],edx
   1b03c:	jne    0x1b05b
   1b03e:	mov    edx,eax
   1b040:	xor    eax,eax
   1b042:	inc    eax
   1b043:	mov    DWORD PTR [edx+0x14],eax
   1b046:	mov    DWORD PTR [ecx+0x14],eax
   1b049:	mov    eax,DWORD PTR [esi+0x4]
   1b04c:	mov    eax,DWORD PTR [eax+0x4]
   1b04f:	and    DWORD PTR [eax+0x14],0x0
   1b053:	mov    eax,DWORD PTR [esi+0x4]
   1b056:	mov    esi,DWORD PTR [eax+0x4]
   1b059:	jmp    0x1b08a
   1b05b:	cmp    esi,DWORD PTR [eax]
   1b05d:	jne    0x1b069
   1b05f:	mov    esi,eax
   1b061:	push   esi
   1b062:	mov    ecx,edi
   1b064:	call   0x1a740
   1b069:	mov    eax,DWORD PTR [esi+0x4]
   1b06c:	mov    DWORD PTR [eax+0x14],0x1
   1b073:	mov    eax,DWORD PTR [esi+0x4]
   1b076:	mov    eax,DWORD PTR [eax+0x4]
   1b079:	and    DWORD PTR [eax+0x14],0x0
   1b07d:	mov    eax,DWORD PTR [esi+0x4]
   1b080:	push   DWORD PTR [eax+0x4]
   1b083:	mov    ecx,edi
   1b085:	call   0x1a6f2
   1b08a:	mov    eax,DWORD PTR [edi+0x4]
   1b08d:	cmp    esi,DWORD PTR [eax+0x4]
   1b090:	jne    0x1afe8
   1b096:	mov    eax,DWORD PTR [edi+0x4]
   1b099:	mov    eax,DWORD PTR [eax+0x4]
   1b09c:	pop    edi
   1b09d:	mov    DWORD PTR [eax+0x14],0x1
   1b0a4:	mov    eax,DWORD PTR [ebp+0x8]
   1b0a7:	pop    esi
   1b0a8:	mov    DWORD PTR [eax],ebx
   1b0aa:	pop    ebx
   1b0ab:	pop    ebp
   1b0ac:	ret    0x10
   1b0af:	int3   
   1b0b0:	int3   
   1b0b1:	int3   
   1b0b2:	int3   
   1b0b3:	int3   
   1b0b4:	mov    edi,edi
   1b0b6:	push   ebp
   1b0b7:	mov    ebp,esp
   1b0b9:	sub    esp,0x10
   1b0bc:	push   ebx
   1b0bd:	push   esi
   1b0be:	mov    DWORD PTR [ebp-0xc],ecx
   1b0c1:	push   edi
   1b0c2:	mov    edi,DWORD PTR [ebp+0xc]
   1b0c5:	lea    ecx,[ebp+0xc]
   1b0c8:	call   0x1a584
   1b0cd:	mov    esi,DWORD PTR [edi]
   1b0cf:	mov    eax,ds:0x788dc
   1b0d4:	lea    ebx,[edi+0x8]
   1b0d7:	mov    DWORD PTR [ebp-0x8],edi
   1b0da:	mov    DWORD PTR [ebp-0x10],ebx
   1b0dd:	cmp    esi,eax
   1b0df:	jne    0x1b0e5
   1b0e1:	mov    esi,DWORD PTR [ebx]
   1b0e3:	jmp    0x1b0fc
   1b0e5:	mov    ecx,DWORD PTR [ebx]
   1b0e7:	cmp    ecx,eax
   1b0e9:	je     0x1b0fc
   1b0eb:	push   ecx
   1b0ec:	call   0x1a562
   1b0f1:	mov    DWORD PTR [ebp-0x8],eax
   1b0f4:	add    eax,0x8
   1b0f7:	mov    esi,DWORD PTR [eax]
   1b0f9:	mov    DWORD PTR [ebp-0x10],eax
   1b0fc:	lea    ecx,[ebp-0x1]
   1b0ff:	call   DWORD PTR ds:0x77764
   1b105:	mov    eax,DWORD PTR [ebp-0x8]
   1b108:	cmp    eax,edi
   1b10a:	je     0x1b16c
   1b10c:	mov    ecx,DWORD PTR [edi]
   1b10e:	mov    DWORD PTR [ecx+0x4],eax
   1b111:	mov    ecx,DWORD PTR [edi]
   1b113:	mov    DWORD PTR [eax],ecx
   1b115:	cmp    eax,DWORD PTR [ebx]
   1b117:	jne    0x1b11e
   1b119:	mov    DWORD PTR [esi+0x4],eax
   1b11c:	jmp    0x1b135
   1b11e:	mov    ecx,DWORD PTR [eax+0x4]
   1b121:	mov    edx,DWORD PTR [ebp-0x10]
   1b124:	mov    DWORD PTR [esi+0x4],ecx
   1b127:	mov    ecx,DWORD PTR [eax+0x4]
   1b12a:	mov    DWORD PTR [ecx],esi
   1b12c:	mov    ecx,DWORD PTR [ebx]
   1b12e:	mov    DWORD PTR [edx],ecx
   1b130:	mov    ecx,DWORD PTR [ebx]
   1b132:	mov    DWORD PTR [ecx+0x4],eax
   1b135:	mov    ebx,DWORD PTR [ebp-0xc]
   1b138:	mov    ecx,DWORD PTR [ebx+0x4]
   1b13b:	cmp    DWORD PTR [ecx+0x4],edi
   1b13e:	jne    0x1b145
   1b140:	mov    DWORD PTR [ecx+0x4],eax
   1b143:	jmp    0x1b153
   1b145:	mov    ecx,DWORD PTR [edi+0x4]
   1b148:	cmp    DWORD PTR [ecx],edi
   1b14a:	jne    0x1b150
   1b14c:	mov    DWORD PTR [ecx],eax
   1b14e:	jmp    0x1b153
   1b150:	mov    DWORD PTR [ecx+0x8],eax
   1b153:	mov    ecx,DWORD PTR [edi+0x4]
   1b156:	mov    DWORD PTR [eax+0x4],ecx
   1b159:	mov    ecx,DWORD PTR [eax+0x14]
   1b15c:	mov    edx,DWORD PTR [edi+0x14]
   1b15f:	mov    DWORD PTR [eax+0x14],edx
   1b162:	mov    DWORD PTR [edi+0x14],ecx
   1b165:	mov    DWORD PTR [ebp-0x8],edi
   1b168:	mov    eax,edi
   1b16a:	jmp    0x1b1e5
   1b16c:	mov    ecx,DWORD PTR [eax+0x4]
   1b16f:	mov    edx,DWORD PTR [ebp-0xc]
   1b172:	mov    DWORD PTR [esi+0x4],ecx
   1b175:	mov    ecx,DWORD PTR [edx+0x4]
   1b178:	cmp    DWORD PTR [ecx+0x4],edi
   1b17b:	jne    0x1b182
   1b17d:	mov    DWORD PTR [ecx+0x4],esi
   1b180:	jmp    0x1b190
   1b182:	mov    ecx,DWORD PTR [edi+0x4]
   1b185:	cmp    DWORD PTR [ecx],edi
   1b187:	jne    0x1b18d
   1b189:	mov    DWORD PTR [ecx],esi
   1b18b:	jmp    0x1b190
   1b18d:	mov    DWORD PTR [ecx+0x8],esi
   1b190:	mov    ecx,DWORD PTR [edx+0x4]
   1b193:	mov    DWORD PTR [ebp-0x10],ecx
   1b196:	cmp    DWORD PTR [ecx],edi
   1b198:	jne    0x1b1bc
   1b19a:	mov    ebx,DWORD PTR [ebx]
   1b19c:	cmp    ebx,DWORD PTR ds:0x788dc
   1b1a2:	jne    0x1b1ab
   1b1a4:	mov    ebx,DWORD PTR [edi+0x4]
   1b1a7:	mov    DWORD PTR [ecx],ebx
   1b1a9:	jmp    0x1b1bc
   1b1ab:	push   esi
   1b1ac:	call   0x1a562
   1b1b1:	mov    ecx,DWORD PTR [ebp-0x10]
   1b1b4:	mov    edx,DWORD PTR [ebp-0xc]
   1b1b7:	mov    DWORD PTR [ecx],eax
   1b1b9:	mov    eax,DWORD PTR [ebp-0x8]
   1b1bc:	mov    ebx,DWORD PTR [edx+0x4]
   1b1bf:	cmp    DWORD PTR [ebx+0x8],edi
   1b1c2:	jne    0x1b1e2
   1b1c4:	mov    ecx,DWORD PTR [edi]
   1b1c6:	cmp    ecx,DWORD PTR ds:0x788dc
   1b1cc:	jne    0x1b1d6
   1b1ce:	mov    ecx,DWORD PTR [edi+0x4]
   1b1d1:	mov    DWORD PTR [ebx+0x8],ecx
   1b1d4:	jmp    0x1b1e2
   1b1d6:	push   esi
   1b1d7:	call   0x1a540
   1b1dc:	mov    DWORD PTR [ebx+0x8],eax
   1b1df:	mov    eax,DWORD PTR [ebp-0x8]
   1b1e2:	mov    ebx,DWORD PTR [ebp-0xc]
   1b1e5:	xor    edi,edi
   1b1e7:	inc    edi
   1b1e8:	cmp    DWORD PTR [eax+0x14],edi
   1b1eb:	jne    0x1b2ff
   1b1f1:	jmp    0x1b2b2
   1b1f6:	cmp    DWORD PTR [esi+0x14],edi
   1b1f9:	jne    0x1b2fc
   1b1ff:	mov    eax,DWORD PTR [esi+0x4]
   1b202:	cmp    esi,DWORD PTR [eax]
   1b204:	jne    0x1b27b
   1b206:	mov    eax,DWORD PTR [eax+0x8]
   1b209:	cmp    DWORD PTR [eax+0x14],0x0
   1b20d:	jne    0x1b229
   1b20f:	mov    DWORD PTR [eax+0x14],edi
   1b212:	mov    eax,DWORD PTR [esi+0x4]
   1b215:	and    DWORD PTR [eax+0x14],0x0
   1b219:	push   DWORD PTR [esi+0x4]
   1b21c:	mov    ecx,ebx
   1b21e:	call   0x1a6f2
   1b223:	mov    eax,DWORD PTR [esi+0x4]
   1b226:	mov    eax,DWORD PTR [eax+0x8]
   1b229:	mov    ecx,DWORD PTR [eax]
   1b22b:	cmp    DWORD PTR [ecx+0x14],edi
   1b22e:	jne    0x1b238
   1b230:	mov    ecx,DWORD PTR [eax+0x8]
   1b233:	cmp    DWORD PTR [ecx+0x14],edi
   1b236:	je     0x1b2ab
   1b238:	mov    ecx,DWORD PTR [eax+0x8]
   1b23b:	cmp    DWORD PTR [ecx+0x14],edi
   1b23e:	jne    0x1b257
   1b240:	mov    ecx,DWORD PTR [eax]
   1b242:	mov    DWORD PTR [ecx+0x14],edi
   1b245:	and    DWORD PTR [eax+0x14],0x0
   1b249:	push   eax
   1b24a:	mov    ecx,ebx
   1b24c:	call   0x1a740
   1b251:	mov    eax,DWORD PTR [esi+0x4]
   1b254:	mov    eax,DWORD PTR [eax+0x8]
   1b257:	mov    ecx,DWORD PTR [esi+0x4]
   1b25a:	mov    ecx,DWORD PTR [ecx+0x14]
   1b25d:	mov    DWORD PTR [eax+0x14],ecx
   1b260:	mov    ecx,DWORD PTR [esi+0x4]
   1b263:	mov    DWORD PTR [ecx+0x14],edi
   1b266:	mov    eax,DWORD PTR [eax+0x8]
   1b269:	mov    DWORD PTR [eax+0x14],edi
   1b26c:	push   DWORD PTR [esi+0x4]
   1b26f:	mov    ecx,ebx
   1b271:	call   0x1a6f2
   1b276:	jmp    0x1b2fc
   1b27b:	mov    eax,DWORD PTR [eax]
   1b27d:	cmp    DWORD PTR [eax+0x14],0x0
   1b281:	jne    0x1b29c
   1b283:	mov    DWORD PTR [eax+0x14],edi
   1b286:	mov    eax,DWORD PTR [esi+0x4]
   1b289:	and    DWORD PTR [eax+0x14],0x0
   1b28d:	push   DWORD PTR [esi+0x4]
   1b290:	mov    ecx,ebx
   1b292:	call   0x1a740
   1b297:	mov    eax,DWORD PTR [esi+0x4]
   1b29a:	mov    eax,DWORD PTR [eax]
   1b29c:	mov    ecx,DWORD PTR [eax+0x8]
   1b29f:	cmp    DWORD PTR [ecx+0x14],edi
   1b2a2:	jne    0x1b2c0
   1b2a4:	mov    ecx,DWORD PTR [eax]
   1b2a6:	cmp    DWORD PTR [ecx+0x14],edi
   1b2a9:	jne    0x1b2c0
   1b2ab:	and    DWORD PTR [eax+0x14],0x0
   1b2af:	mov    esi,DWORD PTR [esi+0x4]
   1b2b2:	mov    eax,DWORD PTR [ebx+0x4]
   1b2b5:	cmp    esi,DWORD PTR [eax+0x4]
   1b2b8:	jne    0x1b1f6
   1b2be:	jmp    0x1b2fc
   1b2c0:	mov    ecx,DWORD PTR [eax]
   1b2c2:	cmp    DWORD PTR [ecx+0x14],edi
   1b2c5:	jne    0x1b2de
   1b2c7:	mov    ecx,DWORD PTR [eax+0x8]
   1b2ca:	mov    DWORD PTR [ecx+0x14],edi
   1b2cd:	and    DWORD PTR [eax+0x14],0x0
   1b2d1:	push   eax
   1b2d2:	mov    ecx,ebx
   1b2d4:	call   0x1a6f2
   1b2d9:	mov    eax,DWORD PTR [esi+0x4]
   1b2dc:	mov    eax,DWORD PTR [eax]
   1b2de:	mov    ecx,DWORD PTR [esi+0x4]
   1b2e1:	mov    ecx,DWORD PTR [ecx+0x14]
   1b2e4:	mov    DWORD PTR [eax+0x14],ecx
   1b2e7:	mov    ecx,DWORD PTR [esi+0x4]
   1b2ea:	mov    DWORD PTR [ecx+0x14],edi
   1b2ed:	mov    eax,DWORD PTR [eax]
   1b2ef:	mov    DWORD PTR [eax+0x14],edi
   1b2f2:	push   DWORD PTR [esi+0x4]
   1b2f5:	mov    ecx,ebx
   1b2f7:	call   0x1a740
   1b2fc:	mov    DWORD PTR [esi+0x14],edi
   1b2ff:	lea    ecx,[ebp-0x1]
   1b302:	call   DWORD PTR ds:0x77760
   1b308:	mov    esi,DWORD PTR [ebp-0x8]
   1b30b:	lea    eax,[esi+0xc]
   1b30e:	push   eax
   1b30f:	call   0x1a86e
   1b314:	push   esi
   1b315:	call   0x11d22
   1b31a:	mov    eax,DWORD PTR [ebp+0x8]
   1b31d:	dec    DWORD PTR [ebx+0xc]
   1b320:	pop    ecx
   1b321:	mov    ecx,DWORD PTR [ebp+0xc]
   1b324:	pop    edi
   1b325:	pop    esi
   1b326:	mov    DWORD PTR [eax],ecx
   1b328:	pop    ebx
   1b329:	leave  
   1b32a:	ret    0x8
   1b32d:	int3   
   1b32e:	int3   
   1b32f:	int3   
   1b330:	int3   
   1b331:	int3   
   1b332:	mov    edi,edi
   1b334:	push   ebp
   1b335:	mov    ebp,esp
   1b337:	push   ebx
   1b338:	push   esi
   1b339:	push   edi
   1b33a:	mov    edi,DWORD PTR [ebp+0x8]
   1b33d:	mov    ebx,ecx
   1b33f:	mov    esi,edi
   1b341:	cmp    edi,DWORD PTR ds:0x788dc
   1b347:	je     0x1b36f
   1b349:	push   DWORD PTR [esi+0x8]
   1b34c:	mov    ecx,ebx
   1b34e:	call   0x1b332
   1b353:	mov    esi,DWORD PTR [esi]
   1b355:	lea    eax,[edi+0xc]
   1b358:	push   eax
   1b359:	call   0x1a86e
   1b35e:	push   edi
   1b35f:	call   0x11d22
   1b364:	pop    ecx
   1b365:	mov    edi,esi
   1b367:	cmp    esi,DWORD PTR ds:0x788dc
   1b36d:	jne    0x1b349
   1b36f:	pop    edi
   1b370:	pop    esi
   1b371:	pop    ebx
   1b372:	pop    ebp
   1b373:	ret    0x4
   1b376:	int3   
   1b377:	int3   
   1b378:	int3   
   1b379:	int3   
   1b37a:	int3   
   1b37b:	int3   
   1b37c:	mov    edi,edi
   1b37e:	push   ebp
   1b37f:	mov    ebp,esp
   1b381:	push   ecx
   1b382:	push   DWORD PTR [ebp-0x4]
   1b385:	push   DWORD PTR [ebp+0x10]
   1b388:	push   DWORD PTR [ebp+0xc]
   1b38b:	push   DWORD PTR [ebp+0x8]
   1b38e:	call   0x1ac52
   1b393:	add    esp,0x10
   1b396:	leave  
   1b397:	ret    
   1b398:	int3   
   1b399:	int3   
   1b39a:	int3   
   1b39b:	int3   
   1b39c:	int3   
   1b39d:	int3   
   1b39e:	mov    edi,edi
   1b3a0:	push   esi
   1b3a1:	mov    esi,ecx
   1b3a3:	jmp    0x1b3ac
   1b3a5:	mov    ecx,esi
   1b3a7:	call   0x1acda
   1b3ac:	cmp    DWORD PTR [esi+0x2c],0x0
   1b3b0:	jne    0x1b3a5
   1b3b2:	pop    esi
   1b3b3:	ret    
   1b3b4:	int3   
   1b3b5:	int3   
   1b3b6:	int3   
   1b3b7:	int3   
   1b3b8:	int3   
   1b3b9:	int3   
   1b3ba:	mov    edi,edi
   1b3bc:	push   ebp
   1b3bd:	mov    ebp,esp
   1b3bf:	push   esi
   1b3c0:	mov    esi,ecx
   1b3c2:	cmp    DWORD PTR [esi+0x2c],0x0
   1b3c6:	je     0x1b3ee
   1b3c8:	mov    ecx,DWORD PTR [esi+0x1c]
   1b3cb:	mov    edx,DWORD PTR [esi+0x18]
   1b3ce:	cmp    ecx,edx
   1b3d0:	je     0x1b3ee
   1b3d2:	push   DWORD PTR [ebp+0x8]
   1b3d5:	lea    eax,[ecx+0x4]
   1b3d8:	mov    DWORD PTR [esi+0x1c],eax
   1b3db:	push   ecx
   1b3dc:	cmp    eax,edx
   1b3de:	jne    0x1b402
   1b3e0:	call   0x1a5ba
   1b3e5:	mov    ecx,esi
   1b3e7:	call   0x1ad6c
   1b3ec:	jmp    0x1b407
   1b3ee:	mov    ecx,esi
   1b3f0:	call   0x1ad6c
   1b3f5:	mov    eax,DWORD PTR [esi+0x1c]
   1b3f8:	push   DWORD PTR [ebp+0x8]
   1b3fb:	lea    ecx,[eax+0x4]
   1b3fe:	mov    DWORD PTR [esi+0x1c],ecx
   1b401:	push   eax
   1b402:	call   0x1a5ba
   1b407:	inc    DWORD PTR [esi+0x2c]
   1b40a:	pop    esi
   1b40b:	pop    ebp
   1b40c:	ret    0x4
   1b40f:	int3   
   1b410:	int3   
   1b411:	int3   
   1b412:	int3   
   1b413:	int3   
   1b414:	mov    edi,edi
   1b416:	push   ebp
   1b417:	mov    ebp,esp
   1b419:	push   esi
   1b41a:	push   0x0
   1b41c:	push   0xc
   1b41e:	mov    esi,ecx
   1b420:	call   0x133fc
   1b425:	mov    ecx,DWORD PTR [ebp+0x8]
   1b428:	mov    DWORD PTR [eax],eax
   1b42a:	mov    DWORD PTR [eax+0x4],eax
   1b42d:	and    DWORD PTR [esi+0x8],0x0
   1b431:	mov    DWORD PTR [esi+0x4],eax
   1b434:	mov    ecx,DWORD PTR [ecx+0x4]
   1b437:	mov    edx,DWORD PTR [ecx]
   1b439:	mov    eax,DWORD PTR [eax]
   1b43b:	push   ecx
   1b43c:	push   edx
   1b43d:	push   eax
   1b43e:	mov    ecx,esi
   1b440:	call   0x1ae78
   1b445:	mov    eax,esi
   1b447:	pop    esi
   1b448:	pop    ebp
   1b449:	ret    0x4
   1b44c:	int3   
   1b44d:	int3   
   1b44e:	int3   
   1b44f:	int3   
   1b450:	int3   
   1b451:	int3   
   1b452:	mov    edi,edi
   1b454:	push   ebp
   1b455:	mov    ebp,esp
   1b457:	push   ecx
   1b458:	mov    edx,DWORD PTR [ebp+0x8]
   1b45b:	mov    DWORD PTR [ebp-0x4],ecx
   1b45e:	cmp    ecx,edx
   1b460:	je     0x1b49f
   1b462:	push   ebx
   1b463:	mov    ebx,DWORD PTR [edx+0x4]
   1b466:	push   esi
   1b467:	mov    esi,DWORD PTR [ecx+0x4]
   1b46a:	mov    eax,DWORD PTR [esi]
   1b46c:	push   edi
   1b46d:	mov    edi,DWORD PTR [ebx]
   1b46f:	jmp    0x1b47f
   1b471:	cmp    edi,ebx
   1b473:	je     0x1b483
   1b475:	mov    edx,DWORD PTR [edi+0x8]
   1b478:	mov    DWORD PTR [eax+0x8],edx
   1b47b:	mov    eax,DWORD PTR [eax]
   1b47d:	mov    edi,DWORD PTR [edi]
   1b47f:	cmp    eax,esi
   1b481:	jne    0x1b471
   1b483:	push   esi
   1b484:	push   eax
   1b485:	lea    eax,[ebp+0x8]
   1b488:	push   eax
   1b489:	call   0x1ab70
   1b48e:	mov    ecx,DWORD PTR [ebp-0x4]
   1b491:	push   ebx
   1b492:	push   edi
   1b493:	push   esi
   1b494:	call   0x1ae78
   1b499:	mov    ecx,DWORD PTR [ebp-0x4]
   1b49c:	pop    edi
   1b49d:	pop    esi
   1b49e:	pop    ebx
   1b49f:	mov    eax,ecx
   1b4a1:	leave  
   1b4a2:	ret    0x4
   1b4a5:	int3   
   1b4a6:	int3   
   1b4a7:	int3   
   1b4a8:	int3   
   1b4a9:	int3   
   1b4aa:	mov    edi,edi
   1b4ac:	push   ebp
   1b4ad:	mov    ebp,esp
   1b4af:	push   DWORD PTR [ebp+0x8]
   1b4b2:	mov    eax,DWORD PTR [ecx+0x4]
   1b4b5:	push   eax
   1b4b6:	lea    eax,[ebp+0x8]
   1b4b9:	push   eax
   1b4ba:	call   0x1ae36
   1b4bf:	pop    ebp
   1b4c0:	ret    0x4
   1b4c3:	int3   
   1b4c4:	int3   
   1b4c5:	int3   
   1b4c6:	int3   
   1b4c7:	int3   
   1b4c8:	mov    edi,edi
   1b4ca:	push   ebp
   1b4cb:	mov    ebp,esp
   1b4cd:	push   ecx
   1b4ce:	push   ebx
   1b4cf:	push   esi
   1b4d0:	push   edi
   1b4d1:	mov    edi,ecx
   1b4d3:	mov    eax,DWORD PTR [edi+0x4]
   1b4d6:	mov    esi,DWORD PTR [eax+0x4]
   1b4d9:	mov    ebx,eax
   1b4db:	mov    al,0x1
   1b4dd:	jmp    0x1b4f8
   1b4df:	lea    eax,[esi+0xc]
   1b4e2:	push   eax
   1b4e3:	push   DWORD PTR [ebp+0xc]
   1b4e6:	mov    ebx,esi
   1b4e8:	call   0x199e0
   1b4ed:	test   al,al
   1b4ef:	je     0x1b4f5
   1b4f1:	mov    esi,DWORD PTR [esi]
   1b4f3:	jmp    0x1b4f8
   1b4f5:	mov    esi,DWORD PTR [esi+0x8]
   1b4f8:	cmp    esi,DWORD PTR ds:0x788dc
   1b4fe:	jne    0x1b4df
   1b500:	cmp    BYTE PTR [edi+0x8],0x0
   1b504:	je     0x1b521
   1b506:	push   DWORD PTR [ebp+0xc]
   1b509:	lea    eax,[ebp+0xc]
   1b50c:	push   ebx
   1b50d:	push   esi
   1b50e:	push   eax
   1b50f:	mov    ecx,edi
   1b511:	call   0x1af5e
   1b516:	mov    ecx,DWORD PTR [eax]
   1b518:	mov    eax,DWORD PTR [ebp+0x8]
   1b51b:	mov    BYTE PTR [eax+0x4],0x1
   1b51f:	jmp    0x1b554
   1b521:	mov    DWORD PTR [ebp-0x4],ebx
   1b524:	test   al,al
   1b526:	je     0x1b537
   1b528:	mov    eax,DWORD PTR [edi+0x4]
   1b52b:	cmp    ebx,DWORD PTR [eax]
   1b52d:	je     0x1b506
   1b52f:	lea    ecx,[ebp-0x4]
   1b532:	call   0x1a790
   1b537:	push   DWORD PTR [ebp+0xc]
   1b53a:	mov    eax,DWORD PTR [ebp-0x4]
   1b53d:	add    eax,0xc
   1b540:	push   eax
   1b541:	call   0x199e0
   1b546:	test   al,al
   1b548:	jne    0x1b506
   1b54a:	mov    eax,DWORD PTR [ebp+0x8]
   1b54d:	mov    ecx,DWORD PTR [ebp-0x4]
   1b550:	mov    BYTE PTR [eax+0x4],0x0
   1b554:	pop    edi
   1b555:	pop    esi
   1b556:	mov    DWORD PTR [eax],ecx
   1b558:	pop    ebx
   1b559:	leave  
   1b55a:	ret    0x8
   1b55d:	int3   
   1b55e:	int3   
   1b55f:	int3   
   1b560:	int3   
   1b561:	int3   
   1b562:	mov    edi,edi
   1b564:	push   ebp
   1b565:	mov    ebp,esp
   1b567:	push   ecx
   1b568:	push   ecx
   1b569:	push   DWORD PTR [ebp+0x8]
   1b56c:	lea    eax,[ebp-0x8]
   1b56f:	push   eax
   1b570:	call   0x1aeb0
   1b575:	and    DWORD PTR [ebp+0x8],0x0
   1b579:	lea    eax,[ebp+0x8]
   1b57c:	push   eax
   1b57d:	push   DWORD PTR [ebp-0x4]
   1b580:	push   DWORD PTR [ebp-0x8]
   1b583:	call   0x1b37c
   1b588:	mov    eax,DWORD PTR [ebp+0x8]
   1b58b:	add    esp,0xc
   1b58e:	leave  
   1b58f:	ret    0x4
   1b592:	int3   
   1b593:	int3   
   1b594:	int3   
   1b595:	int3   
   1b596:	int3   
   1b597:	int3   
   1b598:	mov    edi,edi
   1b59a:	push   ebp
   1b59b:	mov    ebp,esp
   1b59d:	push   ecx
   1b59e:	push   esi
   1b59f:	mov    esi,ecx
   1b5a1:	cmp    DWORD PTR [esi+0xc],0x0
   1b5a5:	mov    ecx,DWORD PTR [ebp+0xc]
   1b5a8:	je     0x1b5e2
   1b5aa:	mov    eax,DWORD PTR [esi+0x4]
   1b5ad:	cmp    ecx,DWORD PTR [eax]
   1b5af:	jne    0x1b5e2
   1b5b1:	cmp    DWORD PTR [ebp+0x10],eax
   1b5b4:	jne    0x1b5e2
   1b5b6:	push   DWORD PTR [eax+0x4]
   1b5b9:	mov    ecx,esi
   1b5bb:	call   0x1b332
   1b5c0:	mov    ecx,DWORD PTR ds:0x788dc
   1b5c6:	mov    eax,DWORD PTR [esi+0x4]
   1b5c9:	mov    DWORD PTR [eax+0x4],ecx
   1b5cc:	mov    eax,DWORD PTR [esi+0x4]
   1b5cf:	and    DWORD PTR [esi+0xc],0x0
   1b5d3:	mov    DWORD PTR [eax],eax
   1b5d5:	mov    eax,DWORD PTR [esi+0x4]
   1b5d8:	mov    DWORD PTR [eax+0x8],eax
   1b5db:	mov    eax,DWORD PTR [esi+0x4]
   1b5de:	mov    ecx,DWORD PTR [eax]
   1b5e0:	jmp    0x1b607
   1b5e2:	cmp    ecx,DWORD PTR [ebp+0x10]
   1b5e5:	je     0x1b607
   1b5e7:	push   edi
   1b5e8:	mov    edi,ecx
   1b5ea:	lea    ecx,[ebp+0xc]
   1b5ed:	call   0x1a584
   1b5f2:	push   edi
   1b5f3:	lea    eax,[ebp-0x4]
   1b5f6:	push   eax
   1b5f7:	mov    ecx,esi
   1b5f9:	call   0x1b0b4
   1b5fe:	mov    ecx,DWORD PTR [ebp+0xc]
   1b601:	cmp    ecx,DWORD PTR [ebp+0x10]
   1b604:	jne    0x1b5e8
   1b606:	pop    edi
   1b607:	mov    eax,DWORD PTR [ebp+0x8]
   1b60a:	mov    DWORD PTR [eax],ecx
   1b60c:	pop    esi
   1b60d:	leave  
   1b60e:	ret    0xc
   1b611:	int3   
   1b612:	int3   
   1b613:	int3   
   1b614:	int3   
   1b615:	int3   
   1b616:	mov    edi,edi
   1b618:	push   ebp
   1b619:	mov    ebp,esp
   1b61b:	push   esi
   1b61c:	push   DWORD PTR [ebp+0x8]
   1b61f:	mov    esi,ecx
   1b621:	mov    ecx,DWORD PTR [esi]
   1b623:	call   0x1b3ba
   1b628:	mov    eax,esi
   1b62a:	pop    esi
   1b62b:	pop    ebp
   1b62c:	ret    0x4
   1b62f:	int3   
   1b630:	int3   
   1b631:	int3   
   1b632:	int3   
   1b633:	int3   
   1b634:	mov    edi,edi
   1b636:	push   ebp
   1b637:	mov    ebp,esp
   1b639:	push   ecx
   1b63a:	push   esi
   1b63b:	push   edi
   1b63c:	xor    edi,edi
   1b63e:	push   edi
   1b63f:	push   edi
   1b640:	push   edi
   1b641:	push   edi
   1b642:	mov    esi,0x788ac
   1b647:	push   esi
   1b648:	call   DWORD PTR ds:0x1f434
   1b64e:	test   eax,eax
   1b650:	jl     0x1b674
   1b652:	mov    eax,ds:0x788d8
   1b657:	mov    ecx,DWORD PTR ds:0x788d0
   1b65d:	add    eax,0x9
   1b660:	mov    DWORD PTR [ebp-0x4],eax
   1b663:	lea    eax,[ebp-0x4]
   1b666:	push   eax
   1b667:	call   0x1b4aa
   1b66c:	push   edi
   1b66d:	push   esi
   1b66e:	call   DWORD PTR ds:0x1f438
   1b674:	pop    edi
   1b675:	pop    esi
   1b676:	leave  
   1b677:	ret    
   1b678:	int3   
   1b679:	int3   
   1b67a:	int3   
   1b67b:	int3   
   1b67c:	int3   
   1b67d:	int3   
   1b67e:	mov    edi,edi
   1b680:	push   ebp
   1b681:	mov    ebp,esp
   1b683:	push   ecx
   1b684:	push   ecx
   1b685:	push   DWORD PTR [ebp+0xc]
   1b688:	lea    eax,[ebp-0x8]
   1b68b:	push   eax
   1b68c:	call   0x1b4c8
   1b691:	mov    eax,DWORD PTR [ebp+0x8]
   1b694:	mov    ecx,DWORD PTR [ebp-0x8]
   1b697:	mov    DWORD PTR [eax],ecx
   1b699:	mov    cl,BYTE PTR [ebp-0x4]
   1b69c:	mov    BYTE PTR [eax+0x4],cl
   1b69f:	leave  
   1b6a0:	ret    0x8
   1b6a3:	int3   
   1b6a4:	int3   
   1b6a5:	int3   
   1b6a6:	int3   
   1b6a7:	int3   
   1b6a8:	mov    edi,edi
   1b6aa:	push   ebp
   1b6ab:	mov    ebp,esp
   1b6ad:	push   ecx
   1b6ae:	push   ecx
   1b6af:	push   esi
   1b6b0:	push   DWORD PTR [ebp+0x8]
   1b6b3:	lea    eax,[ebp-0x8]
   1b6b6:	push   eax
   1b6b7:	mov    esi,ecx
   1b6b9:	call   0x1aeb0
   1b6be:	and    DWORD PTR [ebp+0x8],0x0
   1b6c2:	lea    eax,[ebp+0x8]
   1b6c5:	push   eax
   1b6c6:	push   DWORD PTR [ebp-0x4]
   1b6c9:	push   DWORD PTR [ebp-0x8]
   1b6cc:	call   0x1b37c
   1b6d1:	add    esp,0xc
   1b6d4:	push   DWORD PTR [ebp-0x4]
   1b6d7:	lea    eax,[ebp-0x4]
   1b6da:	push   DWORD PTR [ebp-0x8]
   1b6dd:	mov    ecx,esi
   1b6df:	push   eax
   1b6e0:	call   0x1b598
   1b6e5:	mov    eax,DWORD PTR [ebp+0x8]
   1b6e8:	pop    esi
   1b6e9:	leave  
   1b6ea:	ret    0x4
   1b6ed:	int3   
   1b6ee:	int3   
   1b6ef:	int3   
   1b6f0:	int3   
   1b6f1:	int3   
   1b6f2:	mov    edi,edi
   1b6f4:	push   ebp
   1b6f5:	mov    ebp,esp
   1b6f7:	jmp    0x1b70a
   1b6f9:	push   eax
   1b6fa:	lea    ecx,[ebp+0x2c]
   1b6fd:	call   0x1b616
   1b702:	lea    ecx,[ebp+0xc]
   1b705:	call   0x1a4e6
   1b70a:	mov    eax,DWORD PTR [ebp+0x14]
   1b70d:	cmp    eax,DWORD PTR [ebp+0x24]
   1b710:	jne    0x1b6f9
   1b712:	mov    eax,DWORD PTR [ebp+0x8]
   1b715:	mov    ecx,DWORD PTR [ebp+0x2c]
   1b718:	mov    DWORD PTR [eax],ecx
   1b71a:	pop    ebp
   1b71b:	ret    0x28
   1b71e:	int3   
   1b71f:	int3   
   1b720:	int3   
   1b721:	int3   
   1b722:	int3   
   1b723:	int3   
   1b724:	mov    edi,edi
   1b726:	push   ebp
   1b727:	mov    ebp,esp
   1b729:	sub    esp,0x10
   1b72c:	push   0xffffffff
   1b72e:	push   DWORD PTR [ebp+0x8]
   1b731:	lea    ecx,[ebp-0x8]
   1b734:	call   0x12b44
   1b739:	mov    ecx,DWORD PTR ds:0x788cc
   1b73f:	lea    eax,[ebp-0x8]
   1b742:	push   eax
   1b743:	lea    eax,[ebp-0x10]
   1b746:	push   eax
   1b747:	call   0x1b67e
   1b74c:	push   DWORD PTR [ebp-0x8]
   1b74f:	call   0x11d22
   1b754:	pop    ecx
   1b755:	leave  
   1b756:	ret    0x4
   1b759:	int3   
   1b75a:	int3   
   1b75b:	int3   
   1b75c:	int3   
   1b75d:	int3   
   1b75e:	mov    edi,edi
   1b760:	push   ebp
   1b761:	mov    ebp,esp
   1b763:	xor    eax,eax
   1b765:	push   ebx
   1b766:	push   esi
   1b767:	push   edi
   1b768:	mov    ebx,ecx
   1b76a:	mov    DWORD PTR [ebx+0x4],eax
   1b76d:	mov    DWORD PTR [ebx+0x8],eax
   1b770:	mov    DWORD PTR [ebx+0xc],eax
   1b773:	mov    DWORD PTR [ebx+0x10],eax
   1b776:	mov    DWORD PTR [ebx+0x14],eax
   1b779:	mov    DWORD PTR [ebx+0x18],eax
   1b77c:	mov    DWORD PTR [ebx+0x1c],eax
   1b77f:	mov    DWORD PTR [ebx+0x20],eax
   1b782:	mov    DWORD PTR [ebx+0x24],eax
   1b785:	mov    DWORD PTR [ebx+0x28],eax
   1b788:	mov    DWORD PTR [ebx+0x2c],eax
   1b78b:	mov    eax,DWORD PTR [ebp+0x8]
   1b78e:	push   ebx
   1b78f:	sub    esp,0x10
   1b792:	mov    edi,esp
   1b794:	lea    esi,[eax+0x14]
   1b797:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b798:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b799:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b79a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b79b:	sub    esp,0x10
   1b79e:	lea    esi,[eax+0x4]
   1b7a1:	mov    edi,esp
   1b7a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b7a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b7a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b7a6:	lea    eax,[ebp+0x8]
   1b7a9:	push   eax
   1b7aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b7ab:	call   0x1b6f2
   1b7b0:	pop    edi
   1b7b1:	pop    esi
   1b7b2:	mov    eax,ebx
   1b7b4:	pop    ebx
   1b7b5:	pop    ebp
   1b7b6:	ret    0x4
   1b7b9:	int3   
   1b7ba:	int3   
   1b7bb:	int3   
   1b7bc:	int3   
   1b7bd:	int3   
   1b7be:	mov    edi,edi
   1b7c0:	push   ebp
   1b7c1:	mov    ebp,esp
   1b7c3:	push   ecx
   1b7c4:	push   ebx
   1b7c5:	push   0x30
   1b7c7:	call   0x11cec
   1b7cc:	xor    ebx,ebx
   1b7ce:	pop    ecx
   1b7cf:	cmp    eax,ebx
   1b7d1:	je     0x1b7e5
   1b7d3:	lea    ecx,[ebp-0x1]
   1b7d6:	push   ecx
   1b7d7:	mov    ecx,eax
   1b7d9:	call   0x1a6a4
   1b7de:	mov    ds:0x788d4,eax
   1b7e3:	jmp    0x1b7eb
   1b7e5:	mov    DWORD PTR ds:0x788d4,ebx
   1b7eb:	push   esi
   1b7ec:	push   0x10
   1b7ee:	call   0x11cec
   1b7f3:	mov    esi,eax
   1b7f5:	pop    ecx
   1b7f6:	cmp    esi,ebx
   1b7f8:	je     0x1b80c
   1b7fa:	mov    ecx,esi
   1b7fc:	mov    BYTE PTR [esi+0x8],bl
   1b7ff:	call   0x1aee2
   1b804:	mov    DWORD PTR ds:0x788cc,esi
   1b80a:	jmp    0x1b812
   1b80c:	mov    DWORD PTR ds:0x788cc,ebx
   1b812:	push   0xc
   1b814:	call   0x11cec
   1b819:	pop    ecx
   1b81a:	pop    esi
   1b81b:	cmp    eax,ebx
   1b81d:	je     0x1b831
   1b81f:	lea    ecx,[ebp-0x1]
   1b822:	push   ecx
   1b823:	mov    ecx,eax
   1b825:	call   0x1acf6
   1b82a:	mov    ds:0x788d0,eax
   1b82f:	jmp    0x1b837
   1b831:	mov    DWORD PTR ds:0x788d0,ebx
   1b837:	push   ebx
   1b838:	push   0x788ac
   1b83d:	call   DWORD PTR ds:0x1f43c
   1b843:	mov    DWORD PTR ds:0x788d8,0x1
   1b84d:	pop    ebx
   1b84e:	leave  
   1b84f:	ret    
   1b850:	int3   
   1b851:	int3   
   1b852:	int3   
   1b853:	int3   
   1b854:	int3   
   1b855:	int3   
   1b856:	push   0x3c
   1b858:	push   0x77960
   1b85d:	call   0x1dcf4
   1b862:	xor    esi,esi
   1b864:	push   esi
   1b865:	push   esi
   1b866:	push   esi
   1b867:	push   esi
   1b868:	push   0x788ac
   1b86d:	call   DWORD PTR ds:0x1f434
   1b873:	cmp    eax,esi
   1b875:	jl     0x1b9e5
   1b87b:	mov    DWORD PTR [ebp-0x4],esi
   1b87e:	mov    edi,DWORD PTR [ebp+0x8]
   1b881:	push   edi
   1b882:	lea    eax,[ebp-0x24]
   1b885:	push   eax
   1b886:	call   0x1a886
   1b88b:	cmp    DWORD PTR [eax+0x4],esi
   1b88e:	setne  BYTE PTR [ebp-0x19]
   1b892:	push   DWORD PTR [ebp-0x24]
   1b895:	call   0x11d22
   1b89a:	pop    ecx
   1b89b:	push   edi
   1b89c:	lea    eax,[ebp-0x2c]
   1b89f:	push   eax
   1b8a0:	call   0x1a8ac
   1b8a5:	xor    al,al
   1b8a7:	cmp    DWORD PTR [edi+0x14],esi
   1b8aa:	jne    0x1b8c0
   1b8ac:	lea    eax,[ebp-0x2c]
   1b8af:	push   eax
   1b8b0:	mov    ecx,DWORD PTR ds:0x788cc
   1b8b6:	call   0x1b562
   1b8bb:	test   eax,eax
   1b8bd:	setne  al
   1b8c0:	test   al,al
   1b8c2:	je     0x1b8d3
   1b8c4:	lea    eax,[ebp-0x2c]
   1b8c7:	push   eax
   1b8c8:	mov    ecx,DWORD PTR ds:0x788cc
   1b8ce:	call   0x1b6a8
   1b8d3:	mov    ebx,DWORD PTR ds:0x788d4
   1b8d9:	cmp    DWORD PTR [ebx+0x2c],esi
   1b8dc:	jbe    0x1b93c
   1b8de:	mov    eax,ds:0x7851c
   1b8e3:	mov    DWORD PTR [ebp-0x20],eax
   1b8e6:	cmp    eax,esi
   1b8e8:	ja     0x1b8f1
   1b8ea:	mov    DWORD PTR [ebp-0x20],0x1
   1b8f1:	mov    eax,DWORD PTR [ebp-0x20]
   1b8f4:	cmp    DWORD PTR [ebx+0x2c],eax
   1b8f7:	jb     0x1b93c
   1b8f9:	lea    esi,[ebx+0x4]
   1b8fc:	lea    edi,[ebp-0x3c]
   1b8ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b900:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b901:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b902:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b903:	mov    eax,DWORD PTR [ebp-0x34]
   1b906:	mov    eax,DWORD PTR [eax]
   1b908:	mov    eax,DWORD PTR [eax+0xc]
   1b90b:	xor    ecx,ecx
   1b90d:	add    eax,0x9c40
   1b912:	push   ecx
   1b913:	pop    esi
   1b914:	adc    ecx,esi
   1b916:	mov    edx,DWORD PTR [ebp+0x8]
   1b919:	mov    edx,DWORD PTR [edx+0xc]
   1b91c:	cmp    ecx,esi
   1b91e:	ja     0x1b93c
   1b920:	jb     0x1b926
   1b922:	cmp    eax,edx
   1b924:	jae    0x1b93c
   1b926:	mov    ecx,ebx
   1b928:	call   0x1a6d2
   1b92d:	mov    ecx,ebx
   1b92f:	call   0x1acda
   1b934:	mov    ebx,DWORD PTR ds:0x788d4
   1b93a:	jmp    0x1b8f1
   1b93c:	push   DWORD PTR [ebp+0x8]
   1b93f:	lea    eax,[ebp-0x24]
   1b942:	push   eax
   1b943:	call   0x1a8ac
   1b948:	push   eax
   1b949:	lea    eax,[ebp-0x3c]
   1b94c:	push   eax
   1b94d:	call   0x1a8f8
   1b952:	push   DWORD PTR [ebp-0x24]
   1b955:	call   0x11d22
   1b95a:	pop    ecx
   1b95b:	mov    ebx,DWORD PTR ds:0x788d4
   1b961:	lea    esi,[ebx+0x14]
   1b964:	lea    edi,[ebp-0x4c]
   1b967:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b968:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b969:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b96a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b96b:	mov    esi,DWORD PTR [ebp-0x34]
   1b96e:	cmp    esi,DWORD PTR [ebp-0x44]
   1b971:	je     0x1b9a5
   1b973:	mov    eax,DWORD PTR [esi]
   1b975:	mov    BYTE PTR [eax+0x1c],0x0
   1b979:	mov    eax,DWORD PTR [esi]
   1b97b:	cmp    BYTE PTR [eax+0x24],0x0
   1b97f:	jne    0x1b98f
   1b981:	mov    BYTE PTR [eax+0x24],0x1
   1b985:	mov    eax,DWORD PTR [esi]
   1b987:	push   DWORD PTR [eax+0x8]
   1b98a:	call   0x1a64c
   1b98f:	mov    eax,DWORD PTR [esi]
   1b991:	mov    ecx,DWORD PTR [eax+0x8]
   1b994:	mov    eax,DWORD PTR [ebp+0x8]
   1b997:	mov    DWORD PTR [eax+0x8],ecx
   1b99a:	mov    ecx,DWORD PTR [esi]
   1b99c:	mov    ecx,DWORD PTR [ecx+0x20]
   1b99f:	inc    ecx
   1b9a0:	mov    DWORD PTR [eax+0x20],ecx
   1b9a3:	jmp    0x1b9a8
   1b9a5:	mov    eax,DWORD PTR [ebp+0x8]
   1b9a8:	mov    cl,BYTE PTR [ebp-0x19]
   1b9ab:	mov    BYTE PTR [eax+0x1c],cl
   1b9ae:	lea    eax,[ebp+0x8]
   1b9b1:	push   eax
   1b9b2:	mov    ecx,ebx
   1b9b4:	call   0x1b3ba
   1b9b9:	inc    DWORD PTR ds:0x788d8
   1b9bf:	push   DWORD PTR [ebp-0x2c]
   1b9c2:	call   0x11d22
   1b9c7:	pop    ecx
   1b9c8:	jmp    0x1b9d1
   1b9ca:	xor    eax,eax
   1b9cc:	inc    eax
   1b9cd:	ret    
   1b9ce:	mov    esp,DWORD PTR [ebp-0x18]
   1b9d1:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1b9d8:	push   0x0
   1b9da:	push   0x788ac
   1b9df:	call   DWORD PTR ds:0x1f438
   1b9e5:	call   0x1dd39
   1b9ea:	ret    0x4
   1b9ed:	int3   
   1b9ee:	int3   
   1b9ef:	int3   
   1b9f0:	int3   
   1b9f1:	int3   
   1b9f2:	push   0x48
   1b9f4:	push   0x77980
   1b9f9:	call   0x1dcf4
   1b9fe:	xor    ebx,ebx
   1ba00:	push   ebx
   1ba01:	push   ebx
   1ba02:	push   ebx
   1ba03:	push   ebx
   1ba04:	push   0x788ac
   1ba09:	call   DWORD PTR ds:0x1f434
   1ba0f:	cmp    eax,ebx
   1ba11:	jl     0x1babf
   1ba17:	mov    DWORD PTR [ebp-0x4],ebx
   1ba1a:	push   DWORD PTR ds:0x788d0
   1ba20:	lea    ecx,[ebp-0x28]
   1ba23:	call   0x1b414
   1ba28:	mov    BYTE PTR [ebp-0x19],bl
   1ba2b:	cmp    DWORD PTR [ebp-0x20],ebx
   1ba2e:	je     0x1ba4e
   1ba30:	mov    eax,DWORD PTR [ebp-0x24]
   1ba33:	mov    eax,DWORD PTR [eax]
   1ba35:	mov    eax,DWORD PTR [eax+0x8]
   1ba38:	cmp    eax,DWORD PTR ds:0x788d8
   1ba3e:	ja     0x1ba4e
   1ba40:	mov    BYTE PTR [ebp-0x19],0x1
   1ba44:	lea    ecx,[ebp-0x28]
   1ba47:	call   0x1ad50
   1ba4c:	jmp    0x1ba2b
   1ba4e:	cmp    BYTE PTR [ebp-0x19],bl
   1ba51:	je     0x1ba89
   1ba53:	push   DWORD PTR ds:0x788d4
   1ba59:	lea    ecx,[ebp-0x58]
   1ba5c:	call   0x1b75e
   1ba61:	mov    esi,DWORD PTR [ebp+0x8]
   1ba64:	push   esi
   1ba65:	lea    eax,[ebp-0x58]
   1ba68:	push   eax
   1ba69:	call   0x1a996
   1ba6e:	cmp    DWORD PTR [esi],ebx
   1ba70:	jne    0x1ba81
   1ba72:	lea    eax,[ebp-0x28]
   1ba75:	push   eax
   1ba76:	mov    ecx,DWORD PTR ds:0x788d0
   1ba7c:	call   0x1b452
   1ba81:	lea    ecx,[ebp-0x58]
   1ba84:	call   0x1b39e
   1ba89:	lea    ecx,[ebp-0x28]
   1ba8c:	call   0x1ad1c
   1ba91:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1ba98:	jmp    0x1bab3
   1ba9a:	xor    eax,eax
   1ba9c:	inc    eax
   1ba9d:	ret    
   1ba9e:	mov    esp,DWORD PTR [ebp-0x18]
   1baa1:	mov    eax,DWORD PTR [ebp+0x8]
   1baa4:	mov    DWORD PTR [eax],0x2
   1baaa:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1bab1:	xor    ebx,ebx
   1bab3:	push   ebx
   1bab4:	push   0x788ac
   1bab9:	call   DWORD PTR ds:0x1f438
   1babf:	call   0x1dd39
   1bac4:	ret    0x4
   1bac7:	int3   
   1bac8:	int3   
   1bac9:	int3   
   1baca:	int3   
   1bacb:	int3   
   1bacc:	mov    edi,edi
   1bace:	push   ebp
   1bacf:	mov    ebp,esp
   1bad1:	mov    ecx,DWORD PTR [ebp+0x8]
   1bad4:	xor    edx,edx
   1bad6:	cmp    ecx,edx
   1bad8:	je     0x1bb28
   1bada:	mov    eax,DWORD PTR [ecx+0x1c]
   1badd:	cmp    eax,edx
   1badf:	je     0x1bb28
   1bae1:	mov    DWORD PTR [eax+0x1c],edx
   1bae4:	mov    DWORD PTR [ecx+0x14],edx
   1bae7:	mov    DWORD PTR [ecx+0x8],edx
   1baea:	mov    DWORD PTR [ecx+0x18],edx
   1baed:	mov    DWORD PTR [ecx+0x30],0x1
   1baf4:	lea    ecx,[eax+0x530]
   1bafa:	mov    DWORD PTR [eax],edx
   1bafc:	mov    DWORD PTR [eax+0x4],edx
   1baff:	mov    DWORD PTR [eax+0xc],edx
   1bb02:	mov    DWORD PTR [eax+0x14],0x8000
   1bb09:	mov    DWORD PTR [eax+0x20],edx
   1bb0c:	mov    DWORD PTR [eax+0x28],edx
   1bb0f:	mov    DWORD PTR [eax+0x2c],edx
   1bb12:	mov    DWORD PTR [eax+0x30],edx
   1bb15:	mov    DWORD PTR [eax+0x38],edx
   1bb18:	mov    DWORD PTR [eax+0x3c],edx
   1bb1b:	mov    DWORD PTR [eax+0x6c],ecx
   1bb1e:	mov    DWORD PTR [eax+0x50],ecx
   1bb21:	mov    DWORD PTR [eax+0x4c],ecx
   1bb24:	xor    eax,eax
   1bb26:	jmp    0x1bb2b
   1bb28:	push   0xfffffffe
   1bb2a:	pop    eax
   1bb2b:	pop    ebp
   1bb2c:	ret    0x4
   1bb2f:	int3   
   1bb30:	int3   
   1bb31:	int3   
   1bb32:	int3   
   1bb33:	int3   
   1bb34:	mov    edi,edi
   1bb36:	push   ebp
   1bb37:	mov    ebp,esp
   1bb39:	mov    eax,DWORD PTR [ebp+0x10]
   1bb3c:	push   esi
   1bb3d:	push   edi
   1bb3e:	xor    edi,edi
   1bb40:	cmp    eax,edi
   1bb42:	je     0x1bbdd
   1bb48:	cmp    BYTE PTR [eax],0x31
   1bb4b:	jne    0x1bbdd
   1bb51:	cmp    DWORD PTR [ebp+0x14],0x38
   1bb55:	jne    0x1bbdd
   1bb5b:	mov    esi,DWORD PTR [ebp+0x8]
   1bb5e:	cmp    esi,edi
   1bb60:	jne    0x1bb66
   1bb62:	push   0xfffffffe
   1bb64:	jmp    0x1bbdf
   1bb66:	mov    DWORD PTR [esi+0x18],edi
   1bb69:	cmp    DWORD PTR [esi+0x20],edi
   1bb6c:	jne    0x1bb78
   1bb6e:	mov    DWORD PTR [esi+0x20],0x1cf2c
   1bb75:	mov    DWORD PTR [esi+0x28],edi
   1bb78:	cmp    DWORD PTR [esi+0x24],edi
   1bb7b:	jne    0x1bb84
   1bb7d:	mov    DWORD PTR [esi+0x24],0x1cf48
   1bb84:	push   0x2530
   1bb89:	push   0x1
   1bb8b:	push   DWORD PTR [esi+0x28]
   1bb8e:	call   DWORD PTR [esi+0x20]
   1bb91:	cmp    eax,edi
   1bb93:	jne    0x1bb99
   1bb95:	push   0xfffffffc
   1bb97:	jmp    0x1bbdf
   1bb99:	mov    ecx,DWORD PTR [ebp+0xc]
   1bb9c:	cmp    ecx,edi
   1bb9e:	mov    DWORD PTR [esi+0x1c],eax
   1bba1:	jge    0x1bbaa
   1bba3:	mov    DWORD PTR [eax+0x8],edi
   1bba6:	neg    ecx
   1bba8:	jmp    0x1bbbb
   1bbaa:	mov    edx,ecx
   1bbac:	sar    edx,0x4
   1bbaf:	inc    edx
   1bbb0:	cmp    ecx,0x30
   1bbb3:	mov    DWORD PTR [eax+0x8],edx
   1bbb6:	jge    0x1bbbb
   1bbb8:	and    ecx,0xf
   1bbbb:	lea    edx,[ecx-0x8]
   1bbbe:	cmp    edx,0x7
   1bbc1:	ja     0x1bbd1
   1bbc3:	push   esi
   1bbc4:	mov    DWORD PTR [eax+0x24],ecx
   1bbc7:	mov    DWORD PTR [eax+0x34],edi
   1bbca:	call   0x1bacc
   1bbcf:	jmp    0x1bbe0
   1bbd1:	push   eax
   1bbd2:	push   DWORD PTR [esi+0x28]
   1bbd5:	call   DWORD PTR [esi+0x24]
   1bbd8:	mov    DWORD PTR [esi+0x1c],edi
   1bbdb:	jmp    0x1bb62
   1bbdd:	push   0xfffffffa
   1bbdf:	pop    eax
   1bbe0:	pop    edi
   1bbe1:	pop    esi
   1bbe2:	pop    ebp
   1bbe3:	ret    0x10
   1bbe6:	int3   
   1bbe7:	int3   
   1bbe8:	int3   
   1bbe9:	int3   
   1bbea:	int3   
   1bbeb:	int3   
   1bbec:	mov    edi,edi
   1bbee:	push   ebp
   1bbef:	mov    ebp,esp
   1bbf1:	push   ecx
   1bbf2:	push   ebx
   1bbf3:	push   esi
   1bbf4:	mov    esi,DWORD PTR [edi+0x1c]
   1bbf7:	cmp    DWORD PTR [esi+0x34],0x0
   1bbfb:	mov    ebx,eax
   1bbfd:	jne    0x1bc1d
   1bbff:	mov    ecx,DWORD PTR [esi+0x24]
   1bc02:	xor    eax,eax
   1bc04:	inc    eax
   1bc05:	shl    eax,cl
   1bc07:	push   0x1
   1bc09:	push   eax
   1bc0a:	push   DWORD PTR [edi+0x28]
   1bc0d:	call   DWORD PTR [edi+0x20]
   1bc10:	mov    DWORD PTR [esi+0x34],eax
   1bc13:	test   eax,eax
   1bc15:	jne    0x1bc1d
   1bc17:	inc    eax
   1bc18:	jmp    0x1bcbf
   1bc1d:	xor    eax,eax
   1bc1f:	cmp    DWORD PTR [esi+0x28],eax
   1bc22:	jne    0x1bc35
   1bc24:	mov    ecx,DWORD PTR [esi+0x24]
   1bc27:	xor    edx,edx
   1bc29:	inc    edx
   1bc2a:	shl    edx,cl
   1bc2c:	mov    DWORD PTR [esi+0x30],eax
   1bc2f:	mov    DWORD PTR [esi+0x2c],eax
   1bc32:	mov    DWORD PTR [esi+0x28],edx
   1bc35:	sub    ebx,DWORD PTR [edi+0x10]
   1bc38:	mov    eax,DWORD PTR [esi+0x28]
   1bc3b:	cmp    ebx,eax
   1bc3d:	jb     0x1bc57
   1bc3f:	mov    ecx,DWORD PTR [edi+0xc]
   1bc42:	push   eax
   1bc43:	sub    ecx,eax
   1bc45:	push   ecx
   1bc46:	push   DWORD PTR [esi+0x34]
   1bc49:	call   0x1dcce
   1bc4e:	add    esp,0xc
   1bc51:	and    DWORD PTR [esi+0x30],0x0
   1bc55:	jmp    0x1bc98
   1bc57:	sub    eax,DWORD PTR [esi+0x30]
   1bc5a:	mov    DWORD PTR [ebp-0x4],eax
   1bc5d:	cmp    eax,ebx
   1bc5f:	jbe    0x1bc64
   1bc61:	mov    DWORD PTR [ebp-0x4],ebx
   1bc64:	mov    eax,DWORD PTR [edi+0xc]
   1bc67:	push   DWORD PTR [ebp-0x4]
   1bc6a:	sub    eax,ebx
   1bc6c:	push   eax
   1bc6d:	mov    eax,DWORD PTR [esi+0x34]
   1bc70:	add    eax,DWORD PTR [esi+0x30]
   1bc73:	push   eax
   1bc74:	call   0x1dcce
   1bc79:	mov    eax,DWORD PTR [ebp-0x4]
   1bc7c:	add    esp,0xc
   1bc7f:	sub    ebx,eax
   1bc81:	je     0x1bca0
   1bc83:	mov    eax,DWORD PTR [edi+0xc]
   1bc86:	push   ebx
   1bc87:	sub    eax,ebx
   1bc89:	push   eax
   1bc8a:	push   DWORD PTR [esi+0x34]
   1bc8d:	call   0x1dcce
   1bc92:	add    esp,0xc
   1bc95:	mov    DWORD PTR [esi+0x30],ebx
   1bc98:	mov    eax,DWORD PTR [esi+0x28]
   1bc9b:	mov    DWORD PTR [esi+0x2c],eax
   1bc9e:	jmp    0x1bcbd
   1bca0:	add    DWORD PTR [esi+0x30],eax
   1bca3:	mov    ecx,DWORD PTR [esi+0x30]
   1bca6:	mov    edx,DWORD PTR [esi+0x28]
   1bca9:	cmp    ecx,edx
   1bcab:	jne    0x1bcb1
   1bcad:	and    DWORD PTR [esi+0x30],0x0
   1bcb1:	mov    ecx,DWORD PTR [esi+0x2c]
   1bcb4:	cmp    ecx,edx
   1bcb6:	jae    0x1bcbd
   1bcb8:	add    ecx,eax
   1bcba:	mov    DWORD PTR [esi+0x2c],ecx
   1bcbd:	xor    eax,eax
   1bcbf:	pop    esi
   1bcc0:	pop    ebx
   1bcc1:	leave  
   1bcc2:	ret    
   1bcc3:	int3   
   1bcc4:	int3   
   1bcc5:	int3   
   1bcc6:	int3   
   1bcc7:	int3   
   1bcc8:	mov    edi,edi
   1bcca:	push   ebp
   1bccb:	mov    ebp,esp
   1bccd:	mov    edx,DWORD PTR [ebp+0x8]
   1bcd0:	sub    esp,0x2c
   1bcd3:	push   ebx
   1bcd4:	xor    eax,eax
   1bcd6:	push   esi
   1bcd7:	push   edi
   1bcd8:	cmp    edx,eax
   1bcda:	je     0x1bd2a
   1bcdc:	mov    esi,DWORD PTR [edx+0x1c]
   1bcdf:	cmp    esi,eax
   1bce1:	je     0x1bd2a
   1bce3:	cmp    DWORD PTR [edx+0xc],eax
   1bce6:	je     0x1bd2a
   1bce8:	cmp    DWORD PTR [edx],eax
   1bcea:	jne    0x1bcf1
   1bcec:	cmp    DWORD PTR [edx+0x4],eax
   1bcef:	jne    0x1bd2a
   1bcf1:	cmp    DWORD PTR [esi],0xb
   1bcf4:	jne    0x1bcfc
   1bcf6:	mov    DWORD PTR [esi],0xc
   1bcfc:	mov    eax,DWORD PTR [edx+0xc]
   1bcff:	mov    ecx,DWORD PTR [edx+0x10]
   1bd02:	and    DWORD PTR [ebp-0x24],0x0
   1bd06:	mov    ebx,DWORD PTR [esi+0x38]
   1bd09:	mov    edi,DWORD PTR [esi+0x3c]
   1bd0c:	mov    DWORD PTR [ebp-0x18],eax
   1bd0f:	mov    eax,DWORD PTR [edx]
   1bd11:	mov    DWORD PTR [ebp-0x4],eax
   1bd14:	mov    eax,DWORD PTR [edx+0x4]
   1bd17:	mov    DWORD PTR [ebp-0x8],eax
   1bd1a:	mov    DWORD PTR [ebp-0x2c],eax
   1bd1d:	mov    eax,DWORD PTR [esi]
   1bd1f:	mov    DWORD PTR [ebp-0x10],ecx
   1bd22:	mov    DWORD PTR [ebp-0x1c],ecx
   1bd25:	cmp    eax,0x1c
   1bd28:	jbe    0x1bd37
   1bd2a:	push   0xfffffffe
   1bd2c:	pop    eax
   1bd2d:	pop    edi
   1bd2e:	pop    esi
   1bd2f:	pop    ebx
   1bd30:	leave  
   1bd31:	ret    0x8
   1bd34:	mov    edx,DWORD PTR [ebp+0x8]
   1bd37:	jmp    DWORD PTR [eax*4+0x1ce6c]
   1bd3e:	mov    eax,DWORD PTR [esi+0x8]
   1bd41:	test   eax,eax
   1bd43:	jne    0x1bd6f
   1bd45:	mov    DWORD PTR [esi],0xc
   1bd4b:	jmp    0x1cd3d
   1bd50:	cmp    DWORD PTR [ebp-0x8],0x0
   1bd54:	je     0x1cd8b
   1bd5a:	mov    ecx,DWORD PTR [ebp-0x4]
   1bd5d:	movzx  edx,BYTE PTR [ecx]
   1bd60:	dec    DWORD PTR [ebp-0x8]
   1bd63:	mov    ecx,edi
   1bd65:	shl    edx,cl
   1bd67:	add    ebx,edx
   1bd69:	inc    DWORD PTR [ebp-0x4]
   1bd6c:	add    edi,0x8
   1bd6f:	cmp    edi,0x10
   1bd72:	jb     0x1bd50
   1bd74:	test   al,0x2
   1bd76:	je     0x1bdb3
   1bd78:	cmp    ebx,0x8b1f
   1bd7e:	jne    0x1bdb3
   1bd80:	xor    edi,edi
   1bd82:	push   edi
   1bd83:	push   edi
   1bd84:	push   edi
   1bd85:	call   0x1dbee
   1bd8a:	mov    DWORD PTR [esi+0x18],eax
   1bd8d:	push   0x2
   1bd8f:	lea    eax,[ebp-0x14]
   1bd92:	push   eax
   1bd93:	mov    BYTE PTR [ebp-0x14],0x1f
   1bd97:	mov    BYTE PTR [ebp-0x13],0x8b
   1bd9b:	push   DWORD PTR [esi+0x18]
   1bd9e:	call   0x1dbee
   1bda3:	mov    DWORD PTR [esi+0x18],eax
   1bda6:	xor    ebx,ebx
   1bda8:	mov    DWORD PTR [esi],0x1
   1bdae:	jmp    0x1cd3d
   1bdb3:	mov    eax,DWORD PTR [esi+0x20]
   1bdb6:	and    DWORD PTR [esi+0x10],0x0
   1bdba:	test   eax,eax
   1bdbc:	je     0x1bdc2
   1bdbe:	or     DWORD PTR [eax+0x30],0xffffffff
   1bdc2:	test   BYTE PTR [esi+0x8],0x1
   1bdc6:	je     0x1be4c
   1bdcc:	movzx  eax,bl
   1bdcf:	shl    eax,0x8
   1bdd2:	mov    ecx,ebx
   1bdd4:	shr    ecx,0x8
   1bdd7:	add    eax,ecx
   1bdd9:	push   0x1f
   1bddb:	xor    edx,edx
   1bddd:	pop    ecx
   1bdde:	div    ecx
   1bde0:	test   edx,edx
   1bde2:	jne    0x1be4c
   1bde4:	mov    eax,ebx
   1bde6:	and    al,0xf
   1bde8:	cmp    al,0x8
   1bdea:	je     0x1bdfb
   1bdec:	mov    eax,DWORD PTR [ebp+0x8]
   1bdef:	mov    DWORD PTR [eax+0x18],0x1f270
   1bdf6:	jmp    0x1cd37
   1bdfb:	shr    ebx,0x4
   1bdfe:	mov    ecx,ebx
   1be00:	and    ecx,0xf
   1be03:	add    ecx,0x8
   1be06:	sub    edi,0x4
   1be09:	cmp    ecx,DWORD PTR [esi+0x24]
   1be0c:	jbe    0x1be1d
   1be0e:	mov    eax,DWORD PTR [ebp+0x8]
   1be11:	mov    DWORD PTR [eax+0x18],0x1f25c
   1be18:	jmp    0x1cd37
   1be1d:	xor    eax,eax
   1be1f:	xor    edi,edi
   1be21:	inc    eax
   1be22:	push   edi
   1be23:	shl    eax,cl
   1be25:	push   edi
   1be26:	push   edi
   1be27:	mov    DWORD PTR [esi+0x14],eax
   1be2a:	call   0x1d74c
   1be2f:	mov    ecx,DWORD PTR [ebp+0x8]
   1be32:	shr    ebx,0x8
   1be35:	not    ebx
   1be37:	and    ebx,0x2
   1be3a:	or     ebx,0x9
   1be3d:	mov    DWORD PTR [esi+0x18],eax
   1be40:	mov    DWORD PTR [ecx+0x30],eax
   1be43:	mov    DWORD PTR [esi],ebx
   1be45:	xor    ebx,ebx
   1be47:	jmp    0x1cd3d
   1be4c:	mov    eax,DWORD PTR [ebp+0x8]
   1be4f:	mov    DWORD PTR [eax+0x18],0x1f244
   1be56:	jmp    0x1cd37
   1be5b:	cmp    edi,0x10
   1be5e:	jae    0x1be87
   1be60:	cmp    DWORD PTR [ebp-0x8],0x0
   1be64:	je     0x1cd8b
   1be6a:	mov    eax,DWORD PTR [ebp-0x4]
   1be6d:	movzx  eax,BYTE PTR [eax]
   1be70:	dec    DWORD PTR [ebp-0x8]
   1be73:	mov    ecx,edi
   1be75:	shl    eax,cl
   1be77:	add    edi,0x8
   1be7a:	add    ebx,eax
   1be7c:	inc    DWORD PTR [ebp-0x4]
   1be7f:	cmp    edi,0x10
   1be82:	jb     0x1be60
   1be84:	mov    edx,DWORD PTR [ebp+0x8]
   1be87:	mov    DWORD PTR [esi+0x10],ebx
   1be8a:	cmp    bl,0x8
   1be8d:	je     0x1be9b
   1be8f:	mov    DWORD PTR [edx+0x18],0x1f270
   1be96:	jmp    0x1cd37
   1be9b:	test   ebx,0xe000
   1bea1:	je     0x1beaf
   1bea3:	mov    DWORD PTR [edx+0x18],0x1f22a
   1beaa:	jmp    0x1cd37
   1beaf:	mov    eax,DWORD PTR [esi+0x20]
   1beb2:	test   eax,eax
   1beb4:	je     0x1bec0
   1beb6:	mov    ecx,ebx
   1beb8:	shr    ecx,0x8
   1bebb:	and    ecx,0x1
   1bebe:	mov    DWORD PTR [eax],ecx
   1bec0:	test   DWORD PTR [esi+0x10],0x200
   1bec7:	je     0x1bee6
   1bec9:	mov    BYTE PTR [ebp-0x14],bl
   1becc:	push   0x2
   1bece:	lea    eax,[ebp-0x14]
   1bed1:	shr    ebx,0x8
   1bed4:	push   eax
   1bed5:	mov    BYTE PTR [ebp-0x13],bl
   1bed8:	push   DWORD PTR [esi+0x18]
   1bedb:	call   0x1dbee
   1bee0:	mov    edx,DWORD PTR [ebp+0x8]
   1bee3:	mov    DWORD PTR [esi+0x18],eax
   1bee6:	xor    ebx,ebx
   1bee8:	xor    edi,edi
   1beea:	mov    DWORD PTR [esi],0x2
   1bef0:	cmp    edi,0x20
   1bef3:	jae    0x1bf1c
   1bef5:	cmp    DWORD PTR [ebp-0x8],0x0
   1bef9:	je     0x1cd8b
   1beff:	mov    eax,DWORD PTR [ebp-0x4]
   1bf02:	movzx  eax,BYTE PTR [eax]
   1bf05:	dec    DWORD PTR [ebp-0x8]
   1bf08:	mov    ecx,edi
   1bf0a:	shl    eax,cl
   1bf0c:	add    edi,0x8
   1bf0f:	add    ebx,eax
   1bf11:	inc    DWORD PTR [ebp-0x4]
   1bf14:	cmp    edi,0x20
   1bf17:	jb     0x1bef5
   1bf19:	mov    edx,DWORD PTR [ebp+0x8]
   1bf1c:	mov    eax,DWORD PTR [esi+0x20]
   1bf1f:	test   eax,eax
   1bf21:	je     0x1bf26
   1bf23:	mov    DWORD PTR [eax+0x4],ebx
   1bf26:	test   DWORD PTR [esi+0x10],0x200
   1bf2d:	je     0x1bf5c
   1bf2f:	mov    eax,ebx
   1bf31:	shr    eax,0x8
   1bf34:	mov    BYTE PTR [ebp-0x13],al
   1bf37:	mov    eax,ebx
   1bf39:	shr    eax,0x10
   1bf3c:	mov    BYTE PTR [ebp-0x12],al
   1bf3f:	mov    BYTE PTR [ebp-0x14],bl
   1bf42:	push   0x4
   1bf44:	lea    eax,[ebp-0x14]
   1bf47:	shr    ebx,0x18
   1bf4a:	push   eax
   1bf4b:	mov    BYTE PTR [ebp-0x11],bl
   1bf4e:	push   DWORD PTR [esi+0x18]
   1bf51:	call   0x1dbee
   1bf56:	mov    edx,DWORD PTR [ebp+0x8]
   1bf59:	mov    DWORD PTR [esi+0x18],eax
   1bf5c:	xor    ebx,ebx
   1bf5e:	xor    edi,edi
   1bf60:	mov    DWORD PTR [esi],0x3
   1bf66:	cmp    edi,0x10
   1bf69:	jae    0x1bf92
   1bf6b:	cmp    DWORD PTR [ebp-0x8],0x0
   1bf6f:	je     0x1cd8b
   1bf75:	mov    eax,DWORD PTR [ebp-0x4]
   1bf78:	movzx  eax,BYTE PTR [eax]
   1bf7b:	dec    DWORD PTR [ebp-0x8]
   1bf7e:	mov    ecx,edi
   1bf80:	shl    eax,cl
   1bf82:	add    edi,0x8
   1bf85:	add    ebx,eax
   1bf87:	inc    DWORD PTR [ebp-0x4]
   1bf8a:	cmp    edi,0x10
   1bf8d:	jb     0x1bf6b
   1bf8f:	mov    edx,DWORD PTR [ebp+0x8]
   1bf92:	mov    eax,DWORD PTR [esi+0x20]
   1bf95:	test   eax,eax
   1bf97:	je     0x1bfaf
   1bf99:	mov    ecx,ebx
   1bf9b:	and    ecx,0xff
   1bfa1:	mov    DWORD PTR [eax+0x8],ecx
   1bfa4:	mov    ecx,DWORD PTR [esi+0x20]
   1bfa7:	mov    eax,ebx
   1bfa9:	shr    eax,0x8
   1bfac:	mov    DWORD PTR [ecx+0xc],eax
   1bfaf:	test   DWORD PTR [esi+0x10],0x200
   1bfb6:	je     0x1bfd5
   1bfb8:	mov    BYTE PTR [ebp-0x14],bl
   1bfbb:	push   0x2
   1bfbd:	lea    eax,[ebp-0x14]
   1bfc0:	shr    ebx,0x8
   1bfc3:	push   eax
   1bfc4:	mov    BYTE PTR [ebp-0x13],bl
   1bfc7:	push   DWORD PTR [esi+0x18]
   1bfca:	call   0x1dbee
   1bfcf:	mov    edx,DWORD PTR [ebp+0x8]
   1bfd2:	mov    DWORD PTR [esi+0x18],eax
   1bfd5:	xor    ebx,ebx
   1bfd7:	xor    edi,edi
   1bfd9:	mov    DWORD PTR [esi],0x4
   1bfdf:	test   DWORD PTR [esi+0x10],0x400
   1bfe6:	je     0x1c04d
   1bfe8:	cmp    edi,0x10
   1bfeb:	jae    0x1c014
   1bfed:	cmp    DWORD PTR [ebp-0x8],0x0
   1bff1:	je     0x1cd8b
   1bff7:	mov    eax,DWORD PTR [ebp-0x4]
   1bffa:	movzx  eax,BYTE PTR [eax]
   1bffd:	dec    DWORD PTR [ebp-0x8]
   1c000:	mov    ecx,edi
   1c002:	shl    eax,cl
   1c004:	add    edi,0x8
   1c007:	add    ebx,eax
   1c009:	inc    DWORD PTR [ebp-0x4]
   1c00c:	cmp    edi,0x10
   1c00f:	jb     0x1bfed
   1c011:	mov    edx,DWORD PTR [ebp+0x8]
   1c014:	mov    eax,DWORD PTR [esi+0x20]
   1c017:	mov    DWORD PTR [esi+0x40],ebx
   1c01a:	test   eax,eax
   1c01c:	je     0x1c021
   1c01e:	mov    DWORD PTR [eax+0x14],ebx
   1c021:	test   DWORD PTR [esi+0x10],0x200
   1c028:	je     0x1c047
   1c02a:	mov    BYTE PTR [ebp-0x14],bl
   1c02d:	push   0x2
   1c02f:	lea    eax,[ebp-0x14]
   1c032:	shr    ebx,0x8
   1c035:	push   eax
   1c036:	mov    BYTE PTR [ebp-0x13],bl
   1c039:	push   DWORD PTR [esi+0x18]
   1c03c:	call   0x1dbee
   1c041:	mov    edx,DWORD PTR [ebp+0x8]
   1c044:	mov    DWORD PTR [esi+0x18],eax
   1c047:	xor    ebx,ebx
   1c049:	xor    edi,edi
   1c04b:	jmp    0x1c058
   1c04d:	mov    eax,DWORD PTR [esi+0x20]
   1c050:	test   eax,eax
   1c052:	je     0x1c058
   1c054:	and    DWORD PTR [eax+0x10],0x0
   1c058:	mov    DWORD PTR [esi],0x5
   1c05e:	test   DWORD PTR [esi+0x10],0x400
   1c065:	je     0x1c0ef
   1c06b:	mov    edx,DWORD PTR [esi+0x40]
   1c06e:	mov    eax,DWORD PTR [ebp-0x8]
   1c071:	mov    DWORD PTR [ebp-0xc],edx
   1c074:	cmp    edx,eax
   1c076:	jbe    0x1c07b
   1c078:	mov    DWORD PTR [ebp-0xc],eax
   1c07b:	cmp    DWORD PTR [ebp-0xc],0x0
   1c07f:	je     0x1c0e2
   1c081:	mov    ecx,DWORD PTR [esi+0x20]
   1c084:	test   ecx,ecx
   1c086:	je     0x1c0bc
   1c088:	mov    eax,DWORD PTR [ecx+0x10]
   1c08b:	mov    DWORD PTR [ebp-0x28],eax
   1c08e:	test   eax,eax
   1c090:	je     0x1c0bc
   1c092:	mov    eax,DWORD PTR [ecx+0x14]
   1c095:	mov    ecx,DWORD PTR [ecx+0x18]
   1c098:	sub    eax,edx
   1c09a:	mov    edx,DWORD PTR [ebp-0xc]
   1c09d:	add    edx,eax
   1c09f:	cmp    edx,ecx
   1c0a1:	jbe    0x1c0a7
   1c0a3:	sub    ecx,eax
   1c0a5:	jmp    0x1c0aa
   1c0a7:	mov    ecx,DWORD PTR [ebp-0xc]
   1c0aa:	push   ecx
   1c0ab:	mov    ecx,DWORD PTR [ebp-0x28]
   1c0ae:	push   DWORD PTR [ebp-0x4]
   1c0b1:	add    ecx,eax
   1c0b3:	push   ecx
   1c0b4:	call   0x1dcce
   1c0b9:	add    esp,0xc
   1c0bc:	test   DWORD PTR [esi+0x10],0x200
   1c0c3:	je     0x1c0d6
   1c0c5:	push   DWORD PTR [ebp-0xc]
   1c0c8:	push   DWORD PTR [ebp-0x4]
   1c0cb:	push   DWORD PTR [esi+0x18]
   1c0ce:	call   0x1dbee
   1c0d3:	mov    DWORD PTR [esi+0x18],eax
   1c0d6:	mov    eax,DWORD PTR [ebp-0xc]
   1c0d9:	sub    DWORD PTR [ebp-0x8],eax
   1c0dc:	add    DWORD PTR [ebp-0x4],eax
   1c0df:	sub    DWORD PTR [esi+0x40],eax
   1c0e2:	cmp    DWORD PTR [esi+0x40],0x0
   1c0e6:	jne    0x1cd8b
   1c0ec:	mov    edx,DWORD PTR [ebp+0x8]
   1c0ef:	and    DWORD PTR [esi+0x40],0x0
   1c0f3:	mov    DWORD PTR [esi],0x6
   1c0f9:	test   DWORD PTR [esi+0x10],0x800
   1c100:	je     0x1c17d
   1c102:	cmp    DWORD PTR [ebp-0x8],0x0
   1c106:	je     0x1cd8b
   1c10c:	xor    ecx,ecx
   1c10e:	mov    eax,DWORD PTR [ebp-0x4]
   1c111:	movzx  eax,BYTE PTR [ecx+eax*1]
   1c115:	inc    ecx
   1c116:	mov    DWORD PTR [ebp-0xc],ecx
   1c119:	mov    ecx,DWORD PTR [esi+0x20]
   1c11c:	mov    DWORD PTR [ebp-0x20],eax
   1c11f:	test   ecx,ecx
   1c121:	je     0x1c13e
   1c123:	mov    edx,DWORD PTR [ecx+0x1c]
   1c126:	mov    DWORD PTR [ebp-0x28],edx
   1c129:	test   edx,edx
   1c12b:	je     0x1c13e
   1c12d:	mov    edx,DWORD PTR [esi+0x40]
   1c130:	cmp    edx,DWORD PTR [ecx+0x20]
   1c133:	jae    0x1c13e
   1c135:	mov    ecx,DWORD PTR [ebp-0x28]
   1c138:	mov    BYTE PTR [ecx+edx*1],al
   1c13b:	inc    DWORD PTR [esi+0x40]
   1c13e:	test   eax,eax
   1c140:	je     0x1c14a
   1c142:	mov    ecx,DWORD PTR [ebp-0xc]
   1c145:	cmp    ecx,DWORD PTR [ebp-0x8]
   1c148:	jb     0x1c10e
   1c14a:	test   DWORD PTR [esi+0x10],0x200
   1c151:	je     0x1c167
   1c153:	push   DWORD PTR [ebp-0xc]
   1c156:	push   DWORD PTR [ebp-0x4]
   1c159:	push   DWORD PTR [esi+0x18]
   1c15c:	call   0x1dbee
   1c161:	mov    DWORD PTR [esi+0x18],eax
   1c164:	mov    eax,DWORD PTR [ebp-0x20]
   1c167:	mov    ecx,DWORD PTR [ebp-0xc]
   1c16a:	sub    DWORD PTR [ebp-0x8],ecx
   1c16d:	add    DWORD PTR [ebp-0x4],ecx
   1c170:	test   eax,eax
   1c172:	jne    0x1cd8b
   1c178:	mov    edx,DWORD PTR [ebp+0x8]
   1c17b:	jmp    0x1c188
   1c17d:	mov    eax,DWORD PTR [esi+0x20]
   1c180:	test   eax,eax
   1c182:	je     0x1c188
   1c184:	and    DWORD PTR [eax+0x1c],0x0
   1c188:	and    DWORD PTR [esi+0x40],0x0
   1c18c:	mov    DWORD PTR [esi],0x7
   1c192:	test   DWORD PTR [esi+0x10],0x1000
   1c199:	je     0x1c216
   1c19b:	cmp    DWORD PTR [ebp-0x8],0x0
   1c19f:	je     0x1cd8b
   1c1a5:	xor    ecx,ecx
   1c1a7:	mov    eax,DWORD PTR [ebp-0x4]
   1c1aa:	movzx  eax,BYTE PTR [ecx+eax*1]
   1c1ae:	inc    ecx
   1c1af:	mov    DWORD PTR [ebp-0xc],ecx
   1c1b2:	mov    ecx,DWORD PTR [esi+0x20]
   1c1b5:	mov    DWORD PTR [ebp-0x20],eax
   1c1b8:	test   ecx,ecx
   1c1ba:	je     0x1c1d7
   1c1bc:	mov    edx,DWORD PTR [ecx+0x24]
   1c1bf:	mov    DWORD PTR [ebp-0x28],edx
   1c1c2:	test   edx,edx
   1c1c4:	je     0x1c1d7
   1c1c6:	mov    edx,DWORD PTR [esi+0x40]
   1c1c9:	cmp    edx,DWORD PTR [ecx+0x28]
   1c1cc:	jae    0x1c1d7
   1c1ce:	mov    ecx,DWORD PTR [ebp-0x28]
   1c1d1:	mov    BYTE PTR [ecx+edx*1],al
   1c1d4:	inc    DWORD PTR [esi+0x40]
   1c1d7:	test   eax,eax
   1c1d9:	je     0x1c1e3
   1c1db:	mov    ecx,DWORD PTR [ebp-0xc]
   1c1de:	cmp    ecx,DWORD PTR [ebp-0x8]
   1c1e1:	jb     0x1c1a7
   1c1e3:	test   DWORD PTR [esi+0x10],0x200
   1c1ea:	je     0x1c200
   1c1ec:	push   DWORD PTR [ebp-0xc]
   1c1ef:	push   DWORD PTR [ebp-0x4]
   1c1f2:	push   DWORD PTR [esi+0x18]
   1c1f5:	call   0x1dbee
   1c1fa:	mov    DWORD PTR [esi+0x18],eax
   1c1fd:	mov    eax,DWORD PTR [ebp-0x20]
   1c200:	mov    ecx,DWORD PTR [ebp-0xc]
   1c203:	sub    DWORD PTR [ebp-0x8],ecx
   1c206:	add    DWORD PTR [ebp-0x4],ecx
   1c209:	test   eax,eax
   1c20b:	jne    0x1cd8b
   1c211:	mov    edx,DWORD PTR [ebp+0x8]
   1c214:	jmp    0x1c221
   1c216:	mov    eax,DWORD PTR [esi+0x20]
   1c219:	test   eax,eax
   1c21b:	je     0x1c221
   1c21d:	and    DWORD PTR [eax+0x24],0x0
   1c221:	mov    DWORD PTR [esi],0x8
   1c227:	test   DWORD PTR [esi+0x10],0x200
   1c22e:	je     0x1c274
   1c230:	cmp    edi,0x10
   1c233:	jae    0x1c25c
   1c235:	cmp    DWORD PTR [ebp-0x8],0x0
   1c239:	je     0x1cd8b
   1c23f:	mov    eax,DWORD PTR [ebp-0x4]
   1c242:	movzx  eax,BYTE PTR [eax]
   1c245:	dec    DWORD PTR [ebp-0x8]
   1c248:	mov    ecx,edi
   1c24a:	shl    eax,cl
   1c24c:	add    edi,0x8
   1c24f:	add    ebx,eax
   1c251:	inc    DWORD PTR [ebp-0x4]
   1c254:	cmp    edi,0x10
   1c257:	jb     0x1c235
   1c259:	mov    edx,DWORD PTR [ebp+0x8]
   1c25c:	movzx  eax,WORD PTR [esi+0x18]
   1c260:	cmp    ebx,eax
   1c262:	je     0x1c270
   1c264:	mov    DWORD PTR [edx+0x18],0x1f216
   1c26b:	jmp    0x1cd37
   1c270:	xor    ebx,ebx
   1c272:	xor    edi,edi
   1c274:	mov    eax,DWORD PTR [esi+0x20]
   1c277:	test   eax,eax
   1c279:	je     0x1c28f
   1c27b:	mov    edx,DWORD PTR [esi+0x10]
   1c27e:	xor    ecx,ecx
   1c280:	inc    ecx
   1c281:	sar    edx,0x9
   1c284:	and    edx,ecx
   1c286:	mov    DWORD PTR [eax+0x2c],edx
   1c289:	mov    eax,DWORD PTR [esi+0x20]
   1c28c:	mov    DWORD PTR [eax+0x30],ecx
   1c28f:	xor    eax,eax
   1c291:	push   eax
   1c292:	push   eax
   1c293:	push   eax
   1c294:	call   0x1dbee
   1c299:	mov    ecx,DWORD PTR [ebp+0x8]
   1c29c:	mov    DWORD PTR [esi+0x18],eax
   1c29f:	mov    DWORD PTR [ecx+0x30],eax
   1c2a2:	jmp    0x1c9a0
   1c2a7:	cmp    edi,0x20
   1c2aa:	jae    0x1c2d3
   1c2ac:	cmp    DWORD PTR [ebp-0x8],0x0
   1c2b0:	je     0x1cd8b
   1c2b6:	mov    eax,DWORD PTR [ebp-0x4]
   1c2b9:	movzx  eax,BYTE PTR [eax]
   1c2bc:	dec    DWORD PTR [ebp-0x8]
   1c2bf:	mov    ecx,edi
   1c2c1:	shl    eax,cl
   1c2c3:	add    edi,0x8
   1c2c6:	add    ebx,eax
   1c2c8:	inc    DWORD PTR [ebp-0x4]
   1c2cb:	cmp    edi,0x20
   1c2ce:	jb     0x1c2ac
   1c2d0:	mov    edx,DWORD PTR [ebp+0x8]
   1c2d3:	mov    ecx,ebx
   1c2d5:	mov    eax,0xff00
   1c2da:	and    ecx,eax
   1c2dc:	mov    edi,ebx
   1c2de:	shl    edi,0x10
   1c2e1:	add    ecx,edi
   1c2e3:	mov    edi,ebx
   1c2e5:	shr    edi,0x8
   1c2e8:	and    edi,eax
   1c2ea:	shl    ecx,0x8
   1c2ed:	shr    ebx,0x18
   1c2f0:	add    ecx,edi
   1c2f2:	lea    eax,[ecx+ebx*1]
   1c2f5:	mov    DWORD PTR [esi+0x18],eax
   1c2f8:	mov    DWORD PTR [edx+0x30],eax
   1c2fb:	xor    ebx,ebx
   1c2fd:	xor    edi,edi
   1c2ff:	mov    DWORD PTR [esi],0xa
   1c305:	cmp    DWORD PTR [esi+0xc],0x0
   1c309:	je     0x1cd4d
   1c30f:	xor    eax,eax
   1c311:	push   eax
   1c312:	push   eax
   1c313:	push   eax
   1c314:	call   0x1d74c
   1c319:	mov    ecx,DWORD PTR [ebp+0x8]
   1c31c:	mov    DWORD PTR [esi+0x18],eax
   1c31f:	mov    DWORD PTR [ecx+0x30],eax
   1c322:	mov    DWORD PTR [esi],0xb
   1c328:	cmp    DWORD PTR [ebp+0xc],0x5
   1c32c:	je     0x1cd8b
   1c332:	mov    edx,DWORD PTR [ebp+0x8]
   1c335:	cmp    DWORD PTR [esi+0x4],0x0
   1c339:	je     0x1c34f
   1c33b:	mov    ecx,edi
   1c33d:	and    ecx,0x7
   1c340:	shr    ebx,cl
   1c342:	sub    edi,ecx
   1c344:	mov    DWORD PTR [esi],0x18
   1c34a:	jmp    0x1cd3d
   1c34f:	cmp    edi,0x3
   1c352:	jae    0x1c37b
   1c354:	cmp    DWORD PTR [ebp-0x8],0x0
   1c358:	je     0x1cd8b
   1c35e:	mov    eax,DWORD PTR [ebp-0x4]
   1c361:	movzx  eax,BYTE PTR [eax]
   1c364:	dec    DWORD PTR [ebp-0x8]
   1c367:	mov    ecx,edi
   1c369:	shl    eax,cl
   1c36b:	add    edi,0x8
   1c36e:	add    ebx,eax
   1c370:	inc    DWORD PTR [ebp-0x4]
   1c373:	cmp    edi,0x3
   1c376:	jb     0x1c354
   1c378:	mov    edx,DWORD PTR [ebp+0x8]
   1c37b:	mov    eax,ebx
   1c37d:	and    eax,0x1
   1c380:	shr    ebx,1
   1c382:	mov    DWORD PTR [esi+0x4],eax
   1c385:	mov    eax,ebx
   1c387:	and    eax,0x3
   1c38a:	dec    edi
   1c38b:	sub    eax,0x0
   1c38e:	je     0x1c3d4
   1c390:	dec    eax
   1c391:	je     0x1c3b0
   1c393:	dec    eax
   1c394:	je     0x1c3a8
   1c396:	dec    eax
   1c397:	jne    0x1c3da
   1c399:	mov    DWORD PTR [edx+0x18],0x1f202
   1c3a0:	mov    DWORD PTR [esi],0x1b
   1c3a6:	jmp    0x1c3da
   1c3a8:	mov    DWORD PTR [esi],0xf
   1c3ae:	jmp    0x1c3da
   1c3b0:	mov    DWORD PTR [esi+0x4c],0x74c98
   1c3b7:	mov    DWORD PTR [esi+0x54],0x9
   1c3be:	mov    DWORD PTR [esi+0x50],0x75498
   1c3c5:	mov    DWORD PTR [esi+0x58],0x5
   1c3cc:	mov    DWORD PTR [esi],0x12
   1c3d2:	jmp    0x1c3da
   1c3d4:	mov    DWORD PTR [esi],0xd
   1c3da:	shr    ebx,0x2
   1c3dd:	dec    edi
   1c3de:	dec    edi
   1c3df:	jmp    0x1cd3d
   1c3e4:	mov    ecx,edi
   1c3e6:	and    ecx,0x7
   1c3e9:	sub    edi,ecx
   1c3eb:	shr    ebx,cl
   1c3ed:	cmp    edi,0x20
   1c3f0:	jae    0x1c419
   1c3f2:	cmp    DWORD PTR [ebp-0x8],0x0
   1c3f6:	je     0x1cd8b
   1c3fc:	mov    eax,DWORD PTR [ebp-0x4]
   1c3ff:	movzx  eax,BYTE PTR [eax]
   1c402:	dec    DWORD PTR [ebp-0x8]
   1c405:	mov    ecx,edi
   1c407:	shl    eax,cl
   1c409:	add    edi,0x8
   1c40c:	add    ebx,eax
   1c40e:	inc    DWORD PTR [ebp-0x4]
   1c411:	cmp    edi,0x20
   1c414:	jb     0x1c3f2
   1c416:	mov    edx,DWORD PTR [ebp+0x8]
   1c419:	mov    ecx,ebx
   1c41b:	mov    eax,ebx
   1c41d:	not    ecx
   1c41f:	and    eax,0xffff
   1c424:	shr    ecx,0x10
   1c427:	cmp    eax,ecx
   1c429:	je     0x1c437
   1c42b:	mov    DWORD PTR [edx+0x18],0x1f1e4
   1c432:	jmp    0x1cd37
   1c437:	xor    ebx,ebx
   1c439:	mov    DWORD PTR [esi+0x40],eax
   1c43c:	xor    edi,edi
   1c43e:	mov    DWORD PTR [esi],0xe
   1c444:	mov    eax,DWORD PTR [esi+0x40]
   1c447:	mov    DWORD PTR [ebp-0xc],eax
   1c44a:	test   eax,eax
   1c44c:	je     0x1c9a0
   1c452:	mov    eax,DWORD PTR [ebp-0x8]
   1c455:	cmp    DWORD PTR [ebp-0xc],eax
   1c458:	jbe    0x1c45d
   1c45a:	mov    DWORD PTR [ebp-0xc],eax
   1c45d:	mov    eax,DWORD PTR [ebp-0x10]
   1c460:	cmp    DWORD PTR [ebp-0xc],eax
   1c463:	jbe    0x1c468
   1c465:	mov    DWORD PTR [ebp-0xc],eax
   1c468:	cmp    DWORD PTR [ebp-0xc],0x0
   1c46c:	je     0x1cd8b
   1c472:	push   DWORD PTR [ebp-0xc]
   1c475:	push   DWORD PTR [ebp-0x4]
   1c478:	push   DWORD PTR [ebp-0x18]
   1c47b:	call   0x1dcce
   1c480:	mov    eax,DWORD PTR [ebp-0xc]
   1c483:	sub    DWORD PTR [ebp-0x8],eax
   1c486:	add    DWORD PTR [ebp-0x4],eax
   1c489:	sub    DWORD PTR [ebp-0x10],eax
   1c48c:	add    DWORD PTR [ebp-0x18],eax
   1c48f:	add    esp,0xc
   1c492:	sub    DWORD PTR [esi+0x40],eax
   1c495:	jmp    0x1cd3d
   1c49a:	cmp    edi,0xe
   1c49d:	jae    0x1c4c6
   1c49f:	cmp    DWORD PTR [ebp-0x8],0x0
   1c4a3:	je     0x1cd8b
   1c4a9:	mov    eax,DWORD PTR [ebp-0x4]
   1c4ac:	movzx  eax,BYTE PTR [eax]
   1c4af:	dec    DWORD PTR [ebp-0x8]
   1c4b2:	mov    ecx,edi
   1c4b4:	shl    eax,cl
   1c4b6:	add    edi,0x8
   1c4b9:	add    ebx,eax
   1c4bb:	inc    DWORD PTR [ebp-0x4]
   1c4be:	cmp    edi,0xe
   1c4c1:	jb     0x1c49f
   1c4c3:	mov    edx,DWORD PTR [ebp+0x8]
   1c4c6:	mov    eax,ebx
   1c4c8:	and    eax,0x1f
   1c4cb:	add    eax,0x101
   1c4d0:	mov    DWORD PTR [esi+0x60],eax
   1c4d3:	shr    ebx,0x5
   1c4d6:	mov    eax,ebx
   1c4d8:	and    eax,0x1f
   1c4db:	inc    eax
   1c4dc:	shr    ebx,0x5
   1c4df:	mov    DWORD PTR [esi+0x64],eax
   1c4e2:	mov    eax,ebx
   1c4e4:	and    eax,0xf
   1c4e7:	add    eax,0x4
   1c4ea:	shr    ebx,0x4
   1c4ed:	sub    edi,0xe
   1c4f0:	cmp    DWORD PTR [esi+0x60],0x11e
   1c4f7:	mov    DWORD PTR [esi+0x5c],eax
   1c4fa:	ja     0x1c50e
   1c4fc:	cmp    DWORD PTR [esi+0x64],0x1e
   1c500:	ja     0x1c50e
   1c502:	and    DWORD PTR [esi+0x68],0x0
   1c506:	mov    DWORD PTR [esi],0x10
   1c50c:	jmp    0x1c55c
   1c50e:	mov    DWORD PTR [edx+0x18],0x1f1c0
   1c515:	jmp    0x1cd37
   1c51a:	cmp    DWORD PTR [ebp-0x8],0x0
   1c51e:	je     0x1cd8b
   1c524:	mov    eax,DWORD PTR [ebp-0x4]
   1c527:	movzx  eax,BYTE PTR [eax]
   1c52a:	dec    DWORD PTR [ebp-0x8]
   1c52d:	mov    ecx,edi
   1c52f:	shl    eax,cl
   1c531:	add    ebx,eax
   1c533:	inc    DWORD PTR [ebp-0x4]
   1c536:	add    edi,0x8
   1c539:	cmp    edi,0x3
   1c53c:	jb     0x1c51a
   1c53e:	mov    ecx,DWORD PTR [esi+0x68]
   1c541:	movzx  ecx,WORD PTR [ecx*2+0x75518]
   1c549:	mov    eax,ebx
   1c54b:	and    eax,0x7
   1c54e:	mov    WORD PTR [esi+ecx*2+0x70],ax
   1c553:	inc    DWORD PTR [esi+0x68]
   1c556:	shr    ebx,0x3
   1c559:	sub    edi,0x3
   1c55c:	mov    eax,DWORD PTR [esi+0x68]
   1c55f:	cmp    eax,DWORD PTR [esi+0x5c]
   1c562:	jb     0x1c539
   1c564:	jmp    0x1c57b
   1c566:	mov    eax,DWORD PTR [esi+0x68]
   1c569:	movzx  eax,WORD PTR [eax*2+0x75518]
   1c571:	xor    ecx,ecx
   1c573:	mov    WORD PTR [esi+eax*2+0x70],cx
   1c578:	inc    DWORD PTR [esi+0x68]
   1c57b:	cmp    DWORD PTR [esi+0x68],0x13
   1c57f:	jb     0x1c566
   1c581:	lea    eax,[esi+0x530]
   1c587:	lea    ecx,[esi+0x6c]
   1c58a:	mov    DWORD PTR [ecx],eax
   1c58c:	mov    DWORD PTR [esi+0x4c],eax
   1c58f:	lea    edx,[esi+0x2f0]
   1c595:	push   edx
   1c596:	lea    eax,[esi+0x54]
   1c599:	push   eax
   1c59a:	push   ecx
   1c59b:	mov    DWORD PTR [eax],0x7
   1c5a1:	push   0x13
   1c5a3:	lea    eax,[esi+0x70]
   1c5a6:	push   eax
   1c5a7:	push   0x0
   1c5a9:	call   0x1d346
   1c5ae:	mov    DWORD PTR [ebp-0x24],eax
   1c5b1:	test   eax,eax
   1c5b3:	je     0x1c5c4
   1c5b5:	mov    eax,DWORD PTR [ebp+0x8]
   1c5b8:	mov    DWORD PTR [eax+0x18],0x1f1a6
   1c5bf:	jmp    0x1cd37
   1c5c4:	and    DWORD PTR [esi+0x68],0x0
   1c5c8:	mov    DWORD PTR [esi],0x11
   1c5ce:	jmp    0x1c7ca
   1c5d3:	cmp    DWORD PTR [ebp-0x8],0x0
   1c5d7:	je     0x1cd8b
   1c5dd:	mov    eax,DWORD PTR [ebp-0x4]
   1c5e0:	movzx  eax,BYTE PTR [eax]
   1c5e3:	dec    DWORD PTR [ebp-0x8]
   1c5e6:	mov    ecx,edi
   1c5e8:	shl    eax,cl
   1c5ea:	add    ebx,eax
   1c5ec:	inc    DWORD PTR [ebp-0x4]
   1c5ef:	add    edi,0x8
   1c5f2:	mov    ecx,DWORD PTR [esi+0x54]
   1c5f5:	xor    eax,eax
   1c5f7:	inc    eax
   1c5f8:	shl    eax,cl
   1c5fa:	mov    ecx,DWORD PTR [esi+0x4c]
   1c5fd:	dec    eax
   1c5fe:	and    eax,ebx
   1c600:	mov    eax,DWORD PTR [ecx+eax*4]
   1c603:	mov    ecx,eax
   1c605:	shr    ecx,0x8
   1c608:	movzx  ecx,cl
   1c60b:	mov    DWORD PTR [ebp-0x20],eax
   1c60e:	cmp    ecx,edi
   1c610:	ja     0x1c5d3
   1c612:	mov    ecx,eax
   1c614:	shr    ecx,0x10
   1c617:	cmp    cx,0x10
   1c61b:	jae    0x1c668
   1c61d:	mov    ecx,eax
   1c61f:	shr    ecx,0x8
   1c622:	movzx  ecx,cl
   1c625:	jmp    0x1c649
   1c627:	cmp    DWORD PTR [ebp-0x8],0x0
   1c62b:	je     0x1cd8b
   1c631:	mov    ecx,DWORD PTR [ebp-0x4]
   1c634:	movzx  edx,BYTE PTR [ecx]
   1c637:	dec    DWORD PTR [ebp-0x8]
   1c63a:	mov    ecx,edi
   1c63c:	shl    edx,cl
   1c63e:	movzx  ecx,ah
   1c641:	add    ebx,edx
   1c643:	inc    DWORD PTR [ebp-0x4]
   1c646:	add    edi,0x8
   1c649:	cmp    edi,ecx
   1c64b:	jb     0x1c627
   1c64d:	movzx  ecx,ah
   1c650:	mov    eax,DWORD PTR [esi+0x68]
   1c653:	shr    ebx,cl
   1c655:	sub    edi,ecx
   1c657:	mov    cx,WORD PTR [ebp-0x1e]
   1c65b:	mov    WORD PTR [esi+eax*2+0x70],cx
   1c660:	inc    DWORD PTR [esi+0x68]
   1c663:	jmp    0x1c7ca
   1c668:	cmp    WORD PTR [ebp-0x1e],0x10
   1c66d:	jne    0x1c6c5
   1c66f:	movzx  eax,ah
   1c672:	jmp    0x1c693
   1c674:	cmp    DWORD PTR [ebp-0x8],0x0
   1c678:	je     0x1cd8b
   1c67e:	mov    ecx,DWORD PTR [ebp-0x4]
   1c681:	movzx  edx,BYTE PTR [ecx]
   1c684:	dec    DWORD PTR [ebp-0x8]
   1c687:	mov    ecx,edi
   1c689:	shl    edx,cl
   1c68b:	add    ebx,edx
   1c68d:	inc    DWORD PTR [ebp-0x4]
   1c690:	add    edi,0x8
   1c693:	lea    ecx,[eax+0x2]
   1c696:	cmp    edi,ecx
   1c698:	jb     0x1c674
   1c69a:	mov    ecx,eax
   1c69c:	sub    edi,eax
   1c69e:	mov    eax,DWORD PTR [esi+0x68]
   1c6a1:	shr    ebx,cl
   1c6a3:	test   eax,eax
   1c6a5:	je     0x1c7db
   1c6ab:	movzx  eax,WORD PTR [esi+eax*2+0x6e]
   1c6b0:	mov    DWORD PTR [ebp-0x20],eax
   1c6b3:	mov    eax,ebx
   1c6b5:	and    eax,0x3
   1c6b8:	add    eax,0x3
   1c6bb:	shr    ebx,0x2
   1c6be:	dec    edi
   1c6bf:	dec    edi
   1c6c0:	jmp    0x1c74a
   1c6c5:	cmp    WORD PTR [ebp-0x1e],0x11
   1c6ca:	movzx  edx,ah
   1c6cd:	jne    0x1c729
   1c6cf:	jmp    0x1c6f0
   1c6d1:	cmp    DWORD PTR [ebp-0x8],0x0
   1c6d5:	je     0x1cd8b
   1c6db:	mov    eax,DWORD PTR [ebp-0x4]
   1c6de:	movzx  eax,BYTE PTR [eax]
   1c6e1:	dec    DWORD PTR [ebp-0x8]
   1c6e4:	mov    ecx,edi
   1c6e6:	shl    eax,cl
   1c6e8:	add    ebx,eax
   1c6ea:	inc    DWORD PTR [ebp-0x4]
   1c6ed:	add    edi,0x8
   1c6f0:	lea    eax,[edx+0x3]
   1c6f3:	cmp    edi,eax
   1c6f5:	jb     0x1c6d1
   1c6f7:	mov    ecx,edx
   1c6f9:	shr    ebx,cl
   1c6fb:	push   0xfffffffd
   1c6fd:	mov    eax,ebx
   1c6ff:	and    eax,0x7
   1c702:	add    eax,0x3
   1c705:	shr    ebx,0x3
   1c708:	jmp    0x1c741
   1c70a:	cmp    DWORD PTR [ebp-0x8],0x0
   1c70e:	je     0x1cd8b
   1c714:	mov    eax,DWORD PTR [ebp-0x4]
   1c717:	movzx  eax,BYTE PTR [eax]
   1c71a:	dec    DWORD PTR [ebp-0x8]
   1c71d:	mov    ecx,edi
   1c71f:	shl    eax,cl
   1c721:	add    ebx,eax
   1c723:	inc    DWORD PTR [ebp-0x4]
   1c726:	add    edi,0x8
   1c729:	lea    eax,[edx+0x7]
   1c72c:	cmp    edi,eax
   1c72e:	jb     0x1c70a
   1c730:	mov    ecx,edx
   1c732:	shr    ebx,cl
   1c734:	push   0xfffffff9
   1c736:	mov    eax,ebx
   1c738:	and    eax,0x7f
   1c73b:	add    eax,0xb
   1c73e:	shr    ebx,0x7
   1c741:	and    DWORD PTR [ebp-0x20],0x0
   1c745:	pop    ecx
   1c746:	sub    ecx,edx
   1c748:	add    edi,ecx
   1c74a:	mov    ecx,DWORD PTR [esi+0x64]
   1c74d:	mov    edx,DWORD PTR [esi+0x68]
   1c750:	add    ecx,DWORD PTR [esi+0x60]
   1c753:	add    edx,eax
   1c755:	cmp    edx,ecx
   1c757:	jbe    0x1c7c6
   1c759:	mov    eax,DWORD PTR [ebp+0x8]
   1c75c:	mov    DWORD PTR [eax+0x18],0x1f18c
   1c763:	mov    DWORD PTR [esi],0x1b
   1c769:	cmp    DWORD PTR [esi],0x1b
   1c76c:	je     0x1cd3d
   1c772:	lea    eax,[esi+0x530]
   1c778:	lea    ecx,[esi+0x6c]
   1c77b:	mov    DWORD PTR [ecx],eax
   1c77d:	mov    DWORD PTR [esi+0x4c],eax
   1c780:	lea    edx,[esi+0x2f0]
   1c786:	push   edx
   1c787:	lea    eax,[esi+0x54]
   1c78a:	push   eax
   1c78b:	push   ecx
   1c78c:	push   DWORD PTR [esi+0x60]
   1c78f:	mov    DWORD PTR [eax],0x9
   1c795:	lea    eax,[esi+0x70]
   1c798:	push   eax
   1c799:	push   0x1
   1c79b:	call   0x1d346
   1c7a0:	mov    DWORD PTR [ebp-0x24],eax
   1c7a3:	test   eax,eax
   1c7a5:	je     0x1c7ea
   1c7a7:	mov    eax,DWORD PTR [ebp+0x8]
   1c7aa:	mov    DWORD PTR [eax+0x18],0x1f170
   1c7b1:	jmp    0x1cd37
   1c7b6:	mov    ecx,DWORD PTR [esi+0x68]
   1c7b9:	mov    dx,WORD PTR [ebp-0x20]
   1c7bd:	dec    eax
   1c7be:	mov    WORD PTR [esi+ecx*2+0x70],dx
   1c7c3:	inc    DWORD PTR [esi+0x68]
   1c7c6:	test   eax,eax
   1c7c8:	jne    0x1c7b6
   1c7ca:	mov    eax,DWORD PTR [esi+0x64]
   1c7cd:	add    eax,DWORD PTR [esi+0x60]
   1c7d0:	cmp    DWORD PTR [esi+0x68],eax
   1c7d3:	jb     0x1c5f2
   1c7d9:	jmp    0x1c769
   1c7db:	mov    eax,DWORD PTR [ebp+0x8]
   1c7de:	mov    DWORD PTR [eax+0x18],0x1f18c
   1c7e5:	jmp    0x1cd37
   1c7ea:	lea    ecx,[esi+0x6c]
   1c7ed:	mov    eax,DWORD PTR [ecx]
   1c7ef:	mov    DWORD PTR [esi+0x50],eax
   1c7f2:	lea    edx,[esi+0x2f0]
   1c7f8:	push   edx
   1c7f9:	lea    eax,[esi+0x58]
   1c7fc:	push   eax
   1c7fd:	push   ecx
   1c7fe:	push   DWORD PTR [esi+0x64]
   1c801:	mov    DWORD PTR [eax],0x6
   1c807:	mov    eax,DWORD PTR [esi+0x60]
   1c80a:	lea    eax,[esi+eax*2+0x70]
   1c80e:	push   eax
   1c80f:	push   0x2
   1c811:	call   0x1d346
   1c816:	mov    DWORD PTR [ebp-0x24],eax
   1c819:	test   eax,eax
   1c81b:	je     0x1c82c
   1c81d:	mov    eax,DWORD PTR [ebp+0x8]
   1c820:	mov    DWORD PTR [eax+0x18],0x1f15a
   1c827:	jmp    0x1cd37
   1c82c:	mov    DWORD PTR [esi],0x12
   1c832:	cmp    DWORD PTR [ebp-0x8],0x6
   1c836:	jb     0x1c88f
   1c838:	cmp    DWORD PTR [ebp-0x10],0x102
   1c83f:	jb     0x1c88f
   1c841:	mov    eax,DWORD PTR [ebp+0x8]
   1c844:	mov    ecx,DWORD PTR [ebp-0x18]
   1c847:	push   DWORD PTR [ebp-0x1c]
   1c84a:	mov    DWORD PTR [eax+0xc],ecx
   1c84d:	mov    ecx,DWORD PTR [ebp-0x10]
   1c850:	mov    DWORD PTR [eax+0x10],ecx
   1c853:	mov    ecx,DWORD PTR [ebp-0x4]
   1c856:	mov    DWORD PTR [eax],ecx
   1c858:	mov    ecx,DWORD PTR [ebp-0x8]
   1c85b:	mov    DWORD PTR [eax+0x4],ecx
   1c85e:	push   eax
   1c85f:	mov    DWORD PTR [esi+0x38],ebx
   1c862:	mov    DWORD PTR [esi+0x3c],edi
   1c865:	call   0x1cf60
   1c86a:	mov    eax,DWORD PTR [ebp+0x8]
   1c86d:	mov    ecx,DWORD PTR [eax+0xc]
   1c870:	mov    ebx,DWORD PTR [esi+0x38]
   1c873:	mov    edi,DWORD PTR [esi+0x3c]
   1c876:	mov    DWORD PTR [ebp-0x18],ecx
   1c879:	mov    ecx,DWORD PTR [eax+0x10]
   1c87c:	mov    DWORD PTR [ebp-0x10],ecx
   1c87f:	mov    ecx,DWORD PTR [eax]
   1c881:	mov    eax,DWORD PTR [eax+0x4]
   1c884:	mov    DWORD PTR [ebp-0x4],ecx
   1c887:	mov    DWORD PTR [ebp-0x8],eax
   1c88a:	jmp    0x1cd3d
   1c88f:	mov    ecx,DWORD PTR [esi+0x54]
   1c892:	mov    eax,DWORD PTR [esi+0x4c]
   1c895:	xor    edx,edx
   1c897:	inc    edx
   1c898:	shl    edx,cl
   1c89a:	dec    edx
   1c89b:	and    edx,ebx
   1c89d:	mov    eax,DWORD PTR [eax+edx*4]
   1c8a0:	jmp    0x1c8d2
   1c8a2:	cmp    DWORD PTR [ebp-0x8],0x0
   1c8a6:	je     0x1cd8b
   1c8ac:	mov    eax,DWORD PTR [ebp-0x4]
   1c8af:	movzx  eax,BYTE PTR [eax]
   1c8b2:	dec    DWORD PTR [ebp-0x8]
   1c8b5:	mov    ecx,edi
   1c8b7:	shl    eax,cl
   1c8b9:	mov    ecx,DWORD PTR [esi+0x54]
   1c8bc:	add    edi,0x8
   1c8bf:	add    ebx,eax
   1c8c1:	inc    DWORD PTR [ebp-0x4]
   1c8c4:	xor    eax,eax
   1c8c6:	inc    eax
   1c8c7:	shl    eax,cl
   1c8c9:	mov    ecx,DWORD PTR [esi+0x4c]
   1c8cc:	dec    eax
   1c8cd:	and    eax,ebx
   1c8cf:	mov    eax,DWORD PTR [ecx+eax*4]
   1c8d2:	mov    ecx,eax
   1c8d4:	shr    ecx,0x8
   1c8d7:	movzx  ecx,cl
   1c8da:	cmp    ecx,edi
   1c8dc:	ja     0x1c8a2
   1c8de:	test   al,al
   1c8e0:	je     0x1c979
   1c8e6:	test   al,0xf0
   1c8e8:	jne    0x1c979
   1c8ee:	mov    DWORD PTR [ebp-0xc],eax
   1c8f1:	shr    DWORD PTR [ebp-0xc],0x8
   1c8f5:	movzx  edx,BYTE PTR [ebp-0xc]
   1c8f9:	mov    DWORD PTR [ebp-0x28],edx
   1c8fc:	movzx  ecx,al
   1c8ff:	add    ecx,edx
   1c901:	xor    edx,edx
   1c903:	inc    edx
   1c904:	shl    edx,cl
   1c906:	mov    ecx,DWORD PTR [ebp-0x28]
   1c909:	mov    DWORD PTR [ebp-0x20],eax
   1c90c:	shr    eax,0x10
   1c90f:	dec    edx
   1c910:	and    edx,ebx
   1c912:	shr    edx,cl
   1c914:	add    edx,eax
   1c916:	mov    eax,DWORD PTR [esi+0x4c]
   1c919:	mov    eax,DWORD PTR [eax+edx*4]
   1c91c:	movzx  edx,BYTE PTR [ebp-0xc]
   1c920:	jmp    0x1c963
   1c922:	cmp    DWORD PTR [ebp-0x8],0x0
   1c926:	je     0x1cd8b
   1c92c:	mov    eax,DWORD PTR [ebp-0x4]
   1c92f:	movzx  eax,BYTE PTR [eax]
   1c932:	movzx  edx,BYTE PTR [ebp-0x1f]
   1c936:	dec    DWORD PTR [ebp-0x8]
   1c939:	mov    ecx,edi
   1c93b:	shl    eax,cl
   1c93d:	movzx  ecx,BYTE PTR [ebp-0x20]
   1c941:	add    ebx,eax
   1c943:	inc    DWORD PTR [ebp-0x4]
   1c946:	xor    eax,eax
   1c948:	add    ecx,edx
   1c94a:	inc    eax
   1c94b:	shl    eax,cl
   1c94d:	add    edi,0x8
   1c950:	mov    ecx,edx
   1c952:	dec    eax
   1c953:	and    eax,ebx
   1c955:	shr    eax,cl
   1c957:	movzx  ecx,WORD PTR [ebp-0x1e]
   1c95b:	add    eax,ecx
   1c95d:	mov    ecx,DWORD PTR [esi+0x4c]
   1c960:	mov    eax,DWORD PTR [ecx+eax*4]
   1c963:	mov    ecx,eax
   1c965:	shr    ecx,0x8
   1c968:	movzx  ecx,cl
   1c96b:	add    ecx,edx
   1c96d:	cmp    ecx,edi
   1c96f:	ja     0x1c922
   1c971:	movzx  ecx,BYTE PTR [ebp-0x1f]
   1c975:	shr    ebx,cl
   1c977:	sub    edi,ecx
   1c979:	mov    ecx,eax
   1c97b:	shr    ecx,0x8
   1c97e:	movzx  ecx,cl
   1c981:	shr    ebx,cl
   1c983:	sub    edi,ecx
   1c985:	mov    ecx,eax
   1c987:	shr    ecx,0x10
   1c98a:	mov    DWORD PTR [esi+0x40],ecx
   1c98d:	test   al,al
   1c98f:	jne    0x1c99c
   1c991:	mov    DWORD PTR [esi],0x17
   1c997:	jmp    0x1cd3d
   1c99c:	test   al,0x20
   1c99e:	je     0x1c9ab
   1c9a0:	mov    DWORD PTR [esi],0xb
   1c9a6:	jmp    0x1cd3d
   1c9ab:	test   al,0x40
   1c9ad:	je     0x1c9be
   1c9af:	mov    eax,DWORD PTR [ebp+0x8]
   1c9b2:	mov    DWORD PTR [eax+0x18],0x1f13e
   1c9b9:	jmp    0x1cd37
   1c9be:	movzx  eax,al
   1c9c1:	and    eax,0xf
   1c9c4:	mov    DWORD PTR [esi+0x48],eax
   1c9c7:	mov    DWORD PTR [esi],0x13
   1c9cd:	mov    eax,DWORD PTR [esi+0x48]
   1c9d0:	test   eax,eax
   1c9d2:	je     0x1ca0d
   1c9d4:	cmp    edi,eax
   1c9d6:	jae    0x1c9fc
   1c9d8:	cmp    DWORD PTR [ebp-0x8],0x0
   1c9dc:	je     0x1cd8b
   1c9e2:	mov    ecx,DWORD PTR [ebp-0x4]
   1c9e5:	movzx  edx,BYTE PTR [ecx]
   1c9e8:	dec    DWORD PTR [ebp-0x8]
   1c9eb:	mov    ecx,edi
   1c9ed:	shl    edx,cl
   1c9ef:	add    edi,0x8
   1c9f2:	add    ebx,edx
   1c9f4:	inc    DWORD PTR [ebp-0x4]
   1c9f7:	cmp    edi,DWORD PTR [esi+0x48]
   1c9fa:	jb     0x1c9d8
   1c9fc:	xor    edx,edx
   1c9fe:	inc    edx
   1c9ff:	mov    ecx,eax
   1ca01:	shl    edx,cl
   1ca03:	dec    edx
   1ca04:	and    edx,ebx
   1ca06:	add    DWORD PTR [esi+0x40],edx
   1ca09:	shr    ebx,cl
   1ca0b:	sub    edi,eax
   1ca0d:	mov    DWORD PTR [esi],0x14
   1ca13:	mov    ecx,DWORD PTR [esi+0x58]
   1ca16:	mov    eax,DWORD PTR [esi+0x50]
   1ca19:	xor    edx,edx
   1ca1b:	inc    edx
   1ca1c:	shl    edx,cl
   1ca1e:	dec    edx
   1ca1f:	and    edx,ebx
   1ca21:	mov    eax,DWORD PTR [eax+edx*4]
   1ca24:	jmp    0x1ca56
   1ca26:	cmp    DWORD PTR [ebp-0x8],0x0
   1ca2a:	je     0x1cd8b
   1ca30:	mov    eax,DWORD PTR [ebp-0x4]
   1ca33:	movzx  eax,BYTE PTR [eax]
   1ca36:	dec    DWORD PTR [ebp-0x8]
   1ca39:	mov    ecx,edi
   1ca3b:	shl    eax,cl
   1ca3d:	mov    ecx,DWORD PTR [esi+0x58]
   1ca40:	add    edi,0x8
   1ca43:	add    ebx,eax
   1ca45:	inc    DWORD PTR [ebp-0x4]
   1ca48:	xor    eax,eax
   1ca4a:	inc    eax
   1ca4b:	shl    eax,cl
   1ca4d:	mov    ecx,DWORD PTR [esi+0x50]
   1ca50:	dec    eax
   1ca51:	and    eax,ebx
   1ca53:	mov    eax,DWORD PTR [ecx+eax*4]
   1ca56:	mov    ecx,eax
   1ca58:	shr    ecx,0x8
   1ca5b:	movzx  ecx,cl
   1ca5e:	cmp    ecx,edi
   1ca60:	ja     0x1ca26
   1ca62:	test   al,0xf0
   1ca64:	jne    0x1caf5
   1ca6a:	mov    DWORD PTR [ebp-0xc],eax
   1ca6d:	shr    DWORD PTR [ebp-0xc],0x8
   1ca71:	movzx  edx,BYTE PTR [ebp-0xc]
   1ca75:	mov    DWORD PTR [ebp-0x28],edx
   1ca78:	movzx  ecx,al
   1ca7b:	add    ecx,edx
   1ca7d:	xor    edx,edx
   1ca7f:	inc    edx
   1ca80:	shl    edx,cl
   1ca82:	mov    ecx,DWORD PTR [ebp-0x28]
   1ca85:	mov    DWORD PTR [ebp-0x20],eax
   1ca88:	shr    eax,0x10
   1ca8b:	dec    edx
   1ca8c:	and    edx,ebx
   1ca8e:	shr    edx,cl
   1ca90:	add    edx,eax
   1ca92:	mov    eax,DWORD PTR [esi+0x50]
   1ca95:	mov    eax,DWORD PTR [eax+edx*4]
   1ca98:	movzx  edx,BYTE PTR [ebp-0xc]
   1ca9c:	jmp    0x1cadf
   1ca9e:	cmp    DWORD PTR [ebp-0x8],0x0
   1caa2:	je     0x1cd8b
   1caa8:	mov    eax,DWORD PTR [ebp-0x4]
   1caab:	movzx  eax,BYTE PTR [eax]
   1caae:	movzx  edx,BYTE PTR [ebp-0x1f]
   1cab2:	dec    DWORD PTR [ebp-0x8]
   1cab5:	mov    ecx,edi
   1cab7:	shl    eax,cl
   1cab9:	movzx  ecx,BYTE PTR [ebp-0x20]
   1cabd:	add    ebx,eax
   1cabf:	inc    DWORD PTR [ebp-0x4]
   1cac2:	xor    eax,eax
   1cac4:	add    ecx,edx
   1cac6:	inc    eax
   1cac7:	shl    eax,cl
   1cac9:	add    edi,0x8
   1cacc:	mov    ecx,edx
   1cace:	dec    eax
   1cacf:	and    eax,ebx
   1cad1:	shr    eax,cl
   1cad3:	movzx  ecx,WORD PTR [ebp-0x1e]
   1cad7:	add    eax,ecx
   1cad9:	mov    ecx,DWORD PTR [esi+0x50]
   1cadc:	mov    eax,DWORD PTR [ecx+eax*4]
   1cadf:	mov    ecx,eax
   1cae1:	shr    ecx,0x8
   1cae4:	movzx  ecx,cl
   1cae7:	add    ecx,edx
   1cae9:	cmp    ecx,edi
   1caeb:	ja     0x1ca9e
   1caed:	movzx  ecx,BYTE PTR [ebp-0x1f]
   1caf1:	shr    ebx,cl
   1caf3:	sub    edi,ecx
   1caf5:	mov    ecx,eax
   1caf7:	shr    ecx,0x8
   1cafa:	movzx  ecx,cl
   1cafd:	shr    ebx,cl
   1caff:	sub    edi,ecx
   1cb01:	test   al,0x40
   1cb03:	je     0x1cb14
   1cb05:	mov    eax,DWORD PTR [ebp+0x8]
   1cb08:	mov    DWORD PTR [eax+0x18],0x1f128
   1cb0f:	jmp    0x1cd37
   1cb14:	mov    edx,DWORD PTR [ebp+0x8]
   1cb17:	mov    ecx,eax
   1cb19:	movzx  eax,al
   1cb1c:	shr    ecx,0x10
   1cb1f:	and    eax,0xf
   1cb22:	mov    DWORD PTR [esi+0x44],ecx
   1cb25:	mov    DWORD PTR [esi+0x48],eax
   1cb28:	mov    DWORD PTR [esi],0x15
   1cb2e:	mov    eax,DWORD PTR [esi+0x48]
   1cb31:	test   eax,eax
   1cb33:	je     0x1cb72
   1cb35:	cmp    edi,eax
   1cb37:	jae    0x1cb60
   1cb39:	cmp    DWORD PTR [ebp-0x8],0x0
   1cb3d:	je     0x1cd8b
   1cb43:	mov    eax,DWORD PTR [ebp-0x4]
   1cb46:	movzx  eax,BYTE PTR [eax]
   1cb49:	dec    DWORD PTR [ebp-0x8]
   1cb4c:	mov    ecx,edi
   1cb4e:	shl    eax,cl
   1cb50:	add    edi,0x8
   1cb53:	add    ebx,eax
   1cb55:	inc    DWORD PTR [ebp-0x4]
   1cb58:	cmp    edi,DWORD PTR [esi+0x48]
   1cb5b:	jb     0x1cb39
   1cb5d:	mov    edx,DWORD PTR [ebp+0x8]
   1cb60:	mov    ecx,DWORD PTR [esi+0x48]
   1cb63:	xor    eax,eax
   1cb65:	inc    eax
   1cb66:	shl    eax,cl
   1cb68:	dec    eax
   1cb69:	and    eax,ebx
   1cb6b:	add    DWORD PTR [esi+0x44],eax
   1cb6e:	shr    ebx,cl
   1cb70:	sub    edi,ecx
   1cb72:	mov    eax,DWORD PTR [esi+0x2c]
   1cb75:	sub    eax,DWORD PTR [ebp-0x10]
   1cb78:	add    eax,DWORD PTR [ebp-0x1c]
   1cb7b:	cmp    DWORD PTR [esi+0x44],eax
   1cb7e:	jbe    0x1cb8c
   1cb80:	mov    DWORD PTR [edx+0x18],0x1f10a
   1cb87:	jmp    0x1cd37
   1cb8c:	mov    DWORD PTR [esi],0x16
   1cb92:	cmp    DWORD PTR [ebp-0x10],0x0
   1cb96:	je     0x1cd8b
   1cb9c:	mov    eax,DWORD PTR [ebp-0x1c]
   1cb9f:	sub    eax,DWORD PTR [ebp-0x10]
   1cba2:	mov    ecx,DWORD PTR [esi+0x44]
   1cba5:	cmp    ecx,eax
   1cba7:	jbe    0x1cbd6
   1cba9:	sub    ecx,eax
   1cbab:	mov    eax,DWORD PTR [esi+0x34]
   1cbae:	mov    DWORD PTR [ebp-0xc],ecx
   1cbb1:	mov    ecx,DWORD PTR [esi+0x30]
   1cbb4:	cmp    DWORD PTR [ebp-0xc],ecx
   1cbb7:	jbe    0x1cbc4
   1cbb9:	add    eax,DWORD PTR [esi+0x28]
   1cbbc:	sub    DWORD PTR [ebp-0xc],ecx
   1cbbf:	sub    eax,DWORD PTR [ebp-0xc]
   1cbc2:	jmp    0x1cbc9
   1cbc4:	sub    eax,DWORD PTR [ebp-0xc]
   1cbc7:	add    eax,ecx
   1cbc9:	mov    ecx,DWORD PTR [esi+0x40]
   1cbcc:	mov    DWORD PTR [ebp-0x28],ecx
   1cbcf:	cmp    DWORD PTR [ebp-0xc],ecx
   1cbd2:	jbe    0x1cbe4
   1cbd4:	jmp    0x1cbe1
   1cbd6:	mov    eax,DWORD PTR [ebp-0x18]
   1cbd9:	sub    eax,ecx
   1cbdb:	mov    ecx,DWORD PTR [esi+0x40]
   1cbde:	mov    DWORD PTR [ebp-0x28],ecx
   1cbe1:	mov    DWORD PTR [ebp-0xc],ecx
   1cbe4:	mov    ecx,DWORD PTR [ebp-0x10]
   1cbe7:	cmp    DWORD PTR [ebp-0xc],ecx
   1cbea:	jbe    0x1cbef
   1cbec:	mov    DWORD PTR [ebp-0xc],ecx
   1cbef:	sub    ecx,DWORD PTR [ebp-0xc]
   1cbf2:	mov    DWORD PTR [ebp-0x10],ecx
   1cbf5:	mov    ecx,DWORD PTR [ebp-0x28]
   1cbf8:	sub    ecx,DWORD PTR [ebp-0xc]
   1cbfb:	mov    DWORD PTR [esi+0x40],ecx
   1cbfe:	mov    edx,DWORD PTR [ebp-0x18]
   1cc01:	mov    cl,BYTE PTR [eax]
   1cc03:	inc    DWORD PTR [ebp-0x18]
   1cc06:	inc    eax
   1cc07:	dec    DWORD PTR [ebp-0xc]
   1cc0a:	mov    BYTE PTR [edx],cl
   1cc0c:	jne    0x1cbfe
   1cc0e:	cmp    DWORD PTR [esi+0x40],0x0
   1cc12:	jne    0x1cd3d
   1cc18:	jmp    0x1cc32
   1cc1a:	cmp    DWORD PTR [ebp-0x10],0x0
   1cc1e:	je     0x1cd8b
   1cc24:	mov    ecx,DWORD PTR [ebp-0x18]
   1cc27:	mov    al,BYTE PTR [esi+0x40]
   1cc2a:	inc    DWORD PTR [ebp-0x18]
   1cc2d:	dec    DWORD PTR [ebp-0x10]
   1cc30:	mov    BYTE PTR [ecx],al
   1cc32:	mov    DWORD PTR [esi],0x12
   1cc38:	jmp    0x1cd3d
   1cc3d:	cmp    DWORD PTR [esi+0x8],0x0
   1cc41:	je     0x1ccf1
   1cc47:	cmp    edi,0x20
   1cc4a:	jae    0x1cc73
   1cc4c:	cmp    DWORD PTR [ebp-0x8],0x0
   1cc50:	je     0x1cd8b
   1cc56:	mov    eax,DWORD PTR [ebp-0x4]
   1cc59:	movzx  eax,BYTE PTR [eax]
   1cc5c:	dec    DWORD PTR [ebp-0x8]
   1cc5f:	mov    ecx,edi
   1cc61:	shl    eax,cl
   1cc63:	add    edi,0x8
   1cc66:	add    ebx,eax
   1cc68:	inc    DWORD PTR [ebp-0x4]
   1cc6b:	cmp    edi,0x20
   1cc6e:	jb     0x1cc4c
   1cc70:	mov    edx,DWORD PTR [ebp+0x8]
   1cc73:	mov    eax,DWORD PTR [ebp-0x1c]
   1cc76:	sub    eax,DWORD PTR [ebp-0x10]
   1cc79:	add    DWORD PTR [edx+0x14],eax
   1cc7c:	add    DWORD PTR [esi+0x1c],eax
   1cc7f:	mov    DWORD PTR [ebp-0x1c],eax
   1cc82:	test   eax,eax
   1cc84:	je     0x1ccae
   1cc86:	push   eax
   1cc87:	mov    eax,DWORD PTR [ebp-0x18]
   1cc8a:	sub    eax,DWORD PTR [ebp-0x1c]
   1cc8d:	cmp    DWORD PTR [esi+0x10],0x0
   1cc91:	push   eax
   1cc92:	push   DWORD PTR [esi+0x18]
   1cc95:	je     0x1cc9e
   1cc97:	call   0x1dbee
   1cc9c:	jmp    0x1cca3
   1cc9e:	call   0x1d74c
   1cca3:	mov    ecx,DWORD PTR [ebp+0x8]
   1cca6:	mov    DWORD PTR [esi+0x18],eax
   1cca9:	mov    DWORD PTR [ecx+0x30],eax
   1ccac:	mov    edx,ecx
   1ccae:	cmp    DWORD PTR [esi+0x10],0x0
   1ccb2:	mov    eax,DWORD PTR [ebp-0x10]
   1ccb5:	mov    DWORD PTR [ebp-0x1c],eax
   1ccb8:	mov    eax,ebx
   1ccba:	jne    0x1ccdf
   1ccbc:	and    eax,0xff00
   1ccc1:	mov    ecx,ebx
   1ccc3:	shl    ecx,0x10
   1ccc6:	add    eax,ecx
   1ccc8:	mov    ecx,ebx
   1ccca:	shr    ecx,0x8
   1cccd:	and    ecx,0xff00
   1ccd3:	shl    eax,0x8
   1ccd6:	add    eax,ecx
   1ccd8:	mov    ecx,ebx
   1ccda:	shr    ecx,0x18
   1ccdd:	add    eax,ecx
   1ccdf:	cmp    eax,DWORD PTR [esi+0x18]
   1cce2:	je     0x1cced
   1cce4:	mov    DWORD PTR [edx+0x18],0x1f0f4
   1cceb:	jmp    0x1cd37
   1cced:	xor    ebx,ebx
   1ccef:	xor    edi,edi
   1ccf1:	mov    DWORD PTR [esi],0x19
   1ccf7:	cmp    DWORD PTR [esi+0x8],0x0
   1ccfb:	je     0x1cd75
   1ccfd:	cmp    DWORD PTR [esi+0x10],0x0
   1cd01:	je     0x1cd75
   1cd03:	cmp    edi,0x20
   1cd06:	jae    0x1cd2b
   1cd08:	cmp    DWORD PTR [ebp-0x8],0x0
   1cd0c:	je     0x1cd8b
   1cd0e:	mov    eax,DWORD PTR [ebp-0x4]
   1cd11:	movzx  eax,BYTE PTR [eax]
   1cd14:	dec    DWORD PTR [ebp-0x8]
   1cd17:	mov    ecx,edi
   1cd19:	shl    eax,cl
   1cd1b:	add    edi,0x8
   1cd1e:	add    ebx,eax
   1cd20:	inc    DWORD PTR [ebp-0x4]
   1cd23:	cmp    edi,0x20
   1cd26:	jb     0x1cd08
   1cd28:	mov    edx,DWORD PTR [ebp+0x8]
   1cd2b:	cmp    ebx,DWORD PTR [esi+0x1c]
   1cd2e:	je     0x1cd71
   1cd30:	mov    DWORD PTR [edx+0x18],0x1f0dc
   1cd37:	mov    DWORD PTR [esi],0x1b
   1cd3d:	mov    eax,DWORD PTR [esi]
   1cd3f:	cmp    eax,0x1c
   1cd42:	jbe    0x1bd34
   1cd48:	jmp    0x1bd2a
   1cd4d:	mov    eax,DWORD PTR [ebp-0x18]
   1cd50:	mov    DWORD PTR [edx+0xc],eax
   1cd53:	mov    eax,DWORD PTR [ebp-0x10]
   1cd56:	mov    DWORD PTR [edx+0x10],eax
   1cd59:	mov    eax,DWORD PTR [ebp-0x4]
   1cd5c:	mov    DWORD PTR [edx],eax
   1cd5e:	mov    eax,DWORD PTR [ebp-0x8]
   1cd61:	mov    DWORD PTR [edx+0x4],eax
   1cd64:	mov    DWORD PTR [esi+0x38],ebx
   1cd67:	mov    DWORD PTR [esi+0x3c],edi
   1cd6a:	push   0x2
   1cd6c:	jmp    0x1bd2c
   1cd71:	xor    ebx,ebx
   1cd73:	xor    edi,edi
   1cd75:	mov    DWORD PTR [esi],0x1a
   1cd7b:	mov    DWORD PTR [ebp-0x24],0x1
   1cd82:	jmp    0x1cd8b
   1cd84:	mov    DWORD PTR [ebp-0x24],0xfffffffd
   1cd8b:	mov    eax,DWORD PTR [ebp+0x8]
   1cd8e:	mov    ecx,DWORD PTR [ebp-0x18]
   1cd91:	mov    DWORD PTR [eax+0xc],ecx
   1cd94:	mov    ecx,DWORD PTR [ebp-0x10]
   1cd97:	mov    DWORD PTR [eax+0x10],ecx
   1cd9a:	mov    ecx,DWORD PTR [ebp-0x4]
   1cd9d:	mov    DWORD PTR [eax],ecx
   1cd9f:	mov    ecx,DWORD PTR [ebp-0x8]
   1cda2:	mov    DWORD PTR [eax+0x4],ecx
   1cda5:	cmp    DWORD PTR [esi+0x28],0x0
   1cda9:	mov    DWORD PTR [esi+0x38],ebx
   1cdac:	mov    DWORD PTR [esi+0x3c],edi
   1cdaf:	jne    0x1cdc1
   1cdb1:	cmp    DWORD PTR [esi],0x18
   1cdb4:	jge    0x1cddd
   1cdb6:	mov    eax,DWORD PTR [ebp-0x1c]
   1cdb9:	mov    ecx,DWORD PTR [ebp+0x8]
   1cdbc:	cmp    eax,DWORD PTR [ecx+0x10]
   1cdbf:	je     0x1cddd
   1cdc1:	mov    eax,DWORD PTR [ebp-0x1c]
   1cdc4:	mov    edi,DWORD PTR [ebp+0x8]
   1cdc7:	call   0x1bbec
   1cdcc:	test   eax,eax
   1cdce:	je     0x1cddd
   1cdd0:	mov    DWORD PTR [esi],0x1c
   1cdd6:	push   0xfffffffc
   1cdd8:	jmp    0x1bd2c
   1cddd:	mov    edi,DWORD PTR [ebp+0x8]
   1cde0:	mov    eax,DWORD PTR [ebp-0x2c]
   1cde3:	sub    eax,DWORD PTR [edi+0x4]
   1cde6:	mov    ebx,DWORD PTR [ebp-0x1c]
   1cde9:	sub    ebx,DWORD PTR [edi+0x10]
   1cdec:	add    DWORD PTR [edi+0x8],eax
   1cdef:	add    DWORD PTR [edi+0x14],ebx
   1cdf2:	add    DWORD PTR [esi+0x1c],ebx
   1cdf5:	cmp    DWORD PTR [esi+0x8],0x0
   1cdf9:	mov    DWORD PTR [ebp-0x2c],eax
   1cdfc:	je     0x1ce27
   1cdfe:	test   ebx,ebx
   1ce00:	je     0x1ce27
   1ce02:	mov    eax,DWORD PTR [edi+0xc]
   1ce05:	push   ebx
   1ce06:	sub    eax,ebx
   1ce08:	cmp    DWORD PTR [esi+0x10],0x0
   1ce0c:	push   eax
   1ce0d:	push   DWORD PTR [esi+0x18]
   1ce10:	je     0x1ce19
   1ce12:	call   0x1dbee
   1ce17:	jmp    0x1ce1e
   1ce19:	call   0x1d74c
   1ce1e:	mov    DWORD PTR [esi+0x18],eax
   1ce21:	mov    DWORD PTR [edi+0x30],eax
   1ce24:	mov    eax,DWORD PTR [ebp-0x2c]
   1ce27:	cmp    DWORD PTR [esi],0xb
   1ce2a:	jne    0x1ce33
   1ce2c:	mov    ecx,0x80
   1ce31:	jmp    0x1ce35
   1ce33:	xor    ecx,ecx
   1ce35:	mov    edx,DWORD PTR [esi+0x4]
   1ce38:	neg    edx
   1ce3a:	sbb    edx,edx
   1ce3c:	and    edx,0x40
   1ce3f:	add    edx,ecx
   1ce41:	add    edx,DWORD PTR [esi+0x3c]
   1ce44:	mov    DWORD PTR [edi+0x2c],edx
   1ce47:	test   eax,eax
   1ce49:	jne    0x1ce4f
   1ce4b:	test   ebx,ebx
   1ce4d:	je     0x1ce55
   1ce4f:	cmp    DWORD PTR [ebp+0xc],0x4
   1ce53:	jne    0x1ce62
   1ce55:	cmp    DWORD PTR [ebp-0x24],0x0
   1ce59:	jne    0x1ce62
   1ce5b:	mov    DWORD PTR [ebp-0x24],0xfffffffb
   1ce62:	mov    eax,DWORD PTR [ebp-0x24]
   1ce65:	jmp    0x1bd2d
   1ce6a:	mov    edi,edi
   1ce6c:	ds mov ebp,0xbe5b0001
   1ce72:	add    DWORD PTR [eax],eax
   1ce74:	lock mov esi,0xbf660001
   1ce7a:	add    DWORD PTR [eax],eax
   1ce7c:	fistp  QWORD PTR [edi-0x3fa1ffff]
   1ce82:	add    DWORD PTR [eax],eax
   1ce84:	stc    
   1ce85:	rol    BYTE PTR [ecx],0x0
   1ce88:	xchg   edx,eax
   1ce89:	rol    DWORD PTR [ecx],0x0
   1ce8c:	daa    
   1ce8d:	ret    0x1
   1ce90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   1ce91:	ret    0x1
   1ce94:	add    eax,0x280001c3
   1ce99:	ret    
   1ce9a:	add    DWORD PTR [eax],eax
   1ce9c:	xor    eax,0xe40001c3
   1cea1:	ret    
   1cea2:	add    DWORD PTR [eax],eax
   1cea4:	inc    esp
   1cea5:	les    eax,FWORD PTR [ecx]
   1cea7:	add    BYTE PTR [edx+0x5c0001c4],bl
   1cead:	lds    eax,FWORD PTR [ecx]
   1ceaf:	add    dl,cl
   1ceb1:	mov    DWORD PTR [ecx],0x1c83200
   1ceb7:	add    ch,cl
   1ceb9:	leave  
   1ceba:	add    DWORD PTR [eax],eax
   1cebc:	adc    ecx,edx
   1cebe:	add    DWORD PTR [eax],eax
   1cec0:	cs retf 
   1cec2:	add    DWORD PTR [eax],eax
   1cec4:	xchg   edx,eax
   1cec5:	retf   
   1cec6:	add    DWORD PTR [eax],eax
   1cec8:	sbb    cl,ah
   1ceca:	add    DWORD PTR [eax],eax
   1cecc:	cmp    eax,0xf70001cc
   1ced1:	int3   
   1ced2:	add    DWORD PTR [eax],eax
   1ced4:	jnp    0x1cea3
   1ced6:	add    DWORD PTR [eax],eax
   1ced8:	test   ch,cl
   1ceda:	add    DWORD PTR [eax],eax
   1cedc:	(bad)  
   1cedd:	int    0x1
   1cedf:	add    ah,cl
   1cee1:	int3   
   1cee2:	int3   
   1cee3:	int3   
   1cee4:	int3   
   1cee5:	int3   
   1cee6:	mov    edi,edi
   1cee8:	push   ebp
   1cee9:	mov    ebp,esp
   1ceeb:	push   esi
   1ceec:	mov    esi,DWORD PTR [ebp+0x8]
   1ceef:	test   esi,esi
   1cef1:	je     0x1cf1f
   1cef3:	mov    eax,DWORD PTR [esi+0x1c]
   1cef6:	test   eax,eax
   1cef8:	je     0x1cf1f
   1cefa:	mov    ecx,DWORD PTR [esi+0x24]
   1cefd:	test   ecx,ecx
   1ceff:	je     0x1cf1f
   1cf01:	mov    eax,DWORD PTR [eax+0x34]
   1cf04:	test   eax,eax
   1cf06:	je     0x1cf0e
   1cf08:	push   eax
   1cf09:	push   DWORD PTR [esi+0x28]
   1cf0c:	call   ecx
   1cf0e:	push   DWORD PTR [esi+0x1c]
   1cf11:	push   DWORD PTR [esi+0x28]
   1cf14:	call   DWORD PTR [esi+0x24]
   1cf17:	and    DWORD PTR [esi+0x1c],0x0
   1cf1b:	xor    eax,eax
   1cf1d:	jmp    0x1cf22
   1cf1f:	push   0xfffffffe
   1cf21:	pop    eax
   1cf22:	pop    esi
   1cf23:	pop    ebp
   1cf24:	ret    0x4
   1cf27:	int3   
   1cf28:	int3   
   1cf29:	int3   
   1cf2a:	int3   
   1cf2b:	int3   
   1cf2c:	mov    edi,edi
   1cf2e:	push   ebp
   1cf2f:	mov    ebp,esp
   1cf31:	mov    eax,DWORD PTR [ebp+0xc]
   1cf34:	imul   eax,DWORD PTR [ebp+0x10]
   1cf38:	push   eax
   1cf39:	call   0x1dc12
   1cf3e:	pop    ecx
   1cf3f:	pop    ebp
   1cf40:	ret    0xc
   1cf43:	int3   
   1cf44:	int3   
   1cf45:	int3   
   1cf46:	int3   
   1cf47:	int3   
   1cf48:	mov    edi,edi
   1cf4a:	push   ebp
   1cf4b:	mov    ebp,esp
   1cf4d:	push   DWORD PTR [ebp+0xc]
   1cf50:	call   0x1dc40
   1cf55:	pop    ecx
   1cf56:	pop    ebp
   1cf57:	ret    0x8
   1cf5a:	int3   
   1cf5b:	int3   
   1cf5c:	int3   
   1cf5d:	int3   
   1cf5e:	int3   
   1cf5f:	int3   
   1cf60:	mov    edi,edi
   1cf62:	push   ebp
   1cf63:	mov    ebp,esp
   1cf65:	sub    esp,0x40
   1cf68:	mov    eax,DWORD PTR [ebp+0x8]
   1cf6b:	mov    ecx,DWORD PTR [eax+0x4]
   1cf6e:	mov    edx,DWORD PTR [eax+0x10]
   1cf71:	push   ebx
   1cf72:	mov    ebx,DWORD PTR [eax]
   1cf74:	dec    ebx
   1cf75:	lea    ecx,[ecx+ebx*1-0x5]
   1cf79:	mov    DWORD PTR [ebp-0x2c],ecx
   1cf7c:	mov    ecx,edx
   1cf7e:	sub    ecx,DWORD PTR [ebp+0xc]
   1cf81:	push   esi
   1cf82:	mov    esi,DWORD PTR [eax+0x1c]
   1cf85:	push   edi
   1cf86:	mov    edi,DWORD PTR [eax+0xc]
   1cf89:	dec    edi
   1cf8a:	add    ecx,edi
   1cf8c:	mov    DWORD PTR [ebp-0x3c],ecx
   1cf8f:	lea    ecx,[edx+edi*1-0x101]
   1cf96:	mov    DWORD PTR [ebp-0x30],ecx
   1cf99:	mov    ecx,DWORD PTR [esi+0x28]
   1cf9c:	mov    DWORD PTR [ebp-0x24],ecx
   1cf9f:	mov    ecx,DWORD PTR [esi+0x2c]
   1cfa2:	mov    DWORD PTR [ebp-0x40],ecx
   1cfa5:	mov    ecx,DWORD PTR [esi+0x30]
   1cfa8:	mov    DWORD PTR [ebp-0x18],ecx
   1cfab:	mov    ecx,DWORD PTR [esi+0x34]
   1cfae:	mov    DWORD PTR [ebp-0x28],ecx
   1cfb1:	mov    ecx,DWORD PTR [esi+0x38]
   1cfb4:	mov    DWORD PTR [ebp-0x4],ecx
   1cfb7:	mov    ecx,DWORD PTR [esi+0x3c]
   1cfba:	mov    DWORD PTR [ebp+0xc],ecx
   1cfbd:	mov    ecx,DWORD PTR [esi+0x4c]
   1cfc0:	xor    edx,edx
   1cfc2:	mov    DWORD PTR [ebp-0x1c],ecx
   1cfc5:	mov    ecx,DWORD PTR [esi+0x50]
   1cfc8:	inc    edx
   1cfc9:	mov    DWORD PTR [ebp-0x20],ecx
   1cfcc:	mov    ecx,DWORD PTR [esi+0x54]
   1cfcf:	shl    edx,cl
   1cfd1:	mov    ecx,DWORD PTR [esi+0x58]
   1cfd4:	dec    edx
   1cfd5:	mov    DWORD PTR [ebp-0x34],edx
   1cfd8:	xor    edx,edx
   1cfda:	inc    edx
   1cfdb:	shl    edx,cl
   1cfdd:	dec    edx
   1cfde:	mov    DWORD PTR [ebp-0x38],edx
   1cfe1:	mov    ecx,DWORD PTR [ebp+0xc]
   1cfe4:	cmp    ecx,0xf
   1cfe7:	jae    0x1d006
   1cfe9:	add    DWORD PTR [ebp+0xc],0x8
   1cfed:	inc    ebx
   1cfee:	movzx  edx,BYTE PTR [ebx]
   1cff1:	shl    edx,cl
   1cff3:	mov    ecx,DWORD PTR [ebp+0xc]
   1cff6:	add    DWORD PTR [ebp-0x4],edx
   1cff9:	inc    ebx
   1cffa:	movzx  edx,BYTE PTR [ebx]
   1cffd:	shl    edx,cl
   1cfff:	add    DWORD PTR [ebp-0x4],edx
   1d002:	add    DWORD PTR [ebp+0xc],0x8
   1d006:	mov    ecx,DWORD PTR [ebp-0x34]
   1d009:	and    ecx,DWORD PTR [ebp-0x4]
   1d00c:	mov    edx,DWORD PTR [ebp-0x1c]
   1d00f:	mov    ecx,DWORD PTR [edx+ecx*4]
   1d012:	mov    DWORD PTR [ebp-0x10],ecx
   1d015:	mov    edx,DWORD PTR [ebp-0x10]
   1d018:	shr    ecx,0x8
   1d01b:	movzx  ecx,cl
   1d01e:	shr    DWORD PTR [ebp-0x4],cl
   1d021:	sub    DWORD PTR [ebp+0xc],ecx
   1d024:	mov    DWORD PTR [ebp-0x8],ecx
   1d027:	movzx  ecx,dl
   1d02a:	mov    DWORD PTR [ebp-0x8],ecx
   1d02d:	test   ecx,ecx
   1d02f:	je     0x1d078
   1d031:	mov    ecx,DWORD PTR [ebp-0x8]
   1d034:	test   cl,0x10
   1d037:	jne    0x1d083
   1d039:	test   cl,0x40
   1d03c:	jne    0x1d2d2
   1d042:	xor    edx,edx
   1d044:	inc    edx
   1d045:	shl    edx,cl
   1d047:	mov    ecx,DWORD PTR [ebp-0x10]
   1d04a:	shr    ecx,0x10
   1d04d:	dec    edx
   1d04e:	and    edx,DWORD PTR [ebp-0x4]
   1d051:	add    edx,ecx
   1d053:	mov    ecx,DWORD PTR [ebp-0x1c]
   1d056:	mov    ecx,DWORD PTR [ecx+edx*4]
   1d059:	mov    DWORD PTR [ebp-0x10],ecx
   1d05c:	mov    edx,DWORD PTR [ebp-0x10]
   1d05f:	shr    ecx,0x8
   1d062:	movzx  ecx,cl
   1d065:	shr    DWORD PTR [ebp-0x4],cl
   1d068:	sub    DWORD PTR [ebp+0xc],ecx
   1d06b:	mov    DWORD PTR [ebp-0x8],ecx
   1d06e:	movzx  ecx,dl
   1d071:	mov    DWORD PTR [ebp-0x8],ecx
   1d074:	test   ecx,ecx
   1d076:	jne    0x1d031
   1d078:	inc    edi
   1d079:	shr    edx,0x10
   1d07c:	mov    BYTE PTR [edi],dl
   1d07e:	jmp    0x1d2b0
   1d083:	shr    edx,0x10
   1d086:	and    ecx,0xf
   1d089:	mov    DWORD PTR [ebp-0xc],edx
   1d08c:	mov    DWORD PTR [ebp-0x8],ecx
   1d08f:	je     0x1d0bb
   1d091:	mov    ecx,DWORD PTR [ebp+0xc]
   1d094:	cmp    ecx,DWORD PTR [ebp-0x8]
   1d097:	jae    0x1d0a6
   1d099:	inc    ebx
   1d09a:	movzx  edx,BYTE PTR [ebx]
   1d09d:	shl    edx,cl
   1d09f:	add    DWORD PTR [ebp-0x4],edx
   1d0a2:	add    DWORD PTR [ebp+0xc],0x8
   1d0a6:	mov    ecx,DWORD PTR [ebp-0x8]
   1d0a9:	xor    edx,edx
   1d0ab:	inc    edx
   1d0ac:	shl    edx,cl
   1d0ae:	dec    edx
   1d0af:	and    edx,DWORD PTR [ebp-0x4]
   1d0b2:	shr    DWORD PTR [ebp-0x4],cl
   1d0b5:	add    DWORD PTR [ebp-0xc],edx
   1d0b8:	sub    DWORD PTR [ebp+0xc],ecx
   1d0bb:	mov    ecx,DWORD PTR [ebp+0xc]
   1d0be:	cmp    ecx,0xf
   1d0c1:	jae    0x1d0e0
   1d0c3:	add    DWORD PTR [ebp+0xc],0x8
   1d0c7:	inc    ebx
   1d0c8:	movzx  edx,BYTE PTR [ebx]
   1d0cb:	shl    edx,cl
   1d0cd:	mov    ecx,DWORD PTR [ebp+0xc]
   1d0d0:	add    DWORD PTR [ebp-0x4],edx
   1d0d3:	inc    ebx
   1d0d4:	movzx  edx,BYTE PTR [ebx]
   1d0d7:	shl    edx,cl
   1d0d9:	add    DWORD PTR [ebp-0x4],edx
   1d0dc:	add    DWORD PTR [ebp+0xc],0x8
   1d0e0:	mov    ecx,DWORD PTR [ebp-0x38]
   1d0e3:	and    ecx,DWORD PTR [ebp-0x4]
   1d0e6:	mov    edx,DWORD PTR [ebp-0x20]
   1d0e9:	mov    ecx,DWORD PTR [edx+ecx*4]
   1d0ec:	jmp    0x1d10c
   1d0ee:	test   cl,0x40
   1d0f1:	jne    0x1d2c9
   1d0f7:	xor    edx,edx
   1d0f9:	inc    edx
   1d0fa:	shl    edx,cl
   1d0fc:	movzx  ecx,WORD PTR [ebp-0xe]
   1d100:	dec    edx
   1d101:	and    edx,DWORD PTR [ebp-0x4]
   1d104:	add    edx,ecx
   1d106:	mov    ecx,DWORD PTR [ebp-0x20]
   1d109:	mov    ecx,DWORD PTR [ecx+edx*4]
   1d10c:	mov    DWORD PTR [ebp-0x10],ecx
   1d10f:	mov    edx,DWORD PTR [ebp-0x10]
   1d112:	shr    ecx,0x8
   1d115:	movzx  ecx,cl
   1d118:	shr    DWORD PTR [ebp-0x4],cl
   1d11b:	sub    DWORD PTR [ebp+0xc],ecx
   1d11e:	mov    DWORD PTR [ebp-0x8],ecx
   1d121:	movzx  ecx,dl
   1d124:	test   cl,0x10
   1d127:	je     0x1d0ee
   1d129:	and    ecx,0xf
   1d12c:	shr    edx,0x10
   1d12f:	mov    DWORD PTR [ebp-0x14],edx
   1d132:	mov    DWORD PTR [ebp-0x8],ecx
   1d135:	cmp    DWORD PTR [ebp+0xc],ecx
   1d138:	jae    0x1d165
   1d13a:	mov    ecx,DWORD PTR [ebp+0xc]
   1d13d:	add    DWORD PTR [ebp+0xc],0x8
   1d141:	inc    ebx
   1d142:	movzx  edx,BYTE PTR [ebx]
   1d145:	shl    edx,cl
   1d147:	mov    ecx,DWORD PTR [ebp-0x8]
   1d14a:	add    DWORD PTR [ebp-0x4],edx
   1d14d:	cmp    DWORD PTR [ebp+0xc],ecx
   1d150:	jae    0x1d165
   1d152:	mov    ecx,DWORD PTR [ebp+0xc]
   1d155:	inc    ebx
   1d156:	movzx  edx,BYTE PTR [ebx]
   1d159:	shl    edx,cl
   1d15b:	mov    ecx,DWORD PTR [ebp-0x8]
   1d15e:	add    DWORD PTR [ebp-0x4],edx
   1d161:	add    DWORD PTR [ebp+0xc],0x8
   1d165:	xor    edx,edx
   1d167:	inc    edx
   1d168:	shl    edx,cl
   1d16a:	mov    ecx,DWORD PTR [ebp-0x8]
   1d16d:	sub    DWORD PTR [ebp+0xc],ecx
   1d170:	dec    edx
   1d171:	and    edx,DWORD PTR [ebp-0x4]
   1d174:	shr    DWORD PTR [ebp-0x4],cl
   1d177:	add    DWORD PTR [ebp-0x14],edx
   1d17a:	mov    edx,DWORD PTR [ebp-0x14]
   1d17d:	mov    ecx,edi
   1d17f:	sub    ecx,DWORD PTR [ebp-0x3c]
   1d182:	cmp    edx,ecx
   1d184:	jbe    0x1d278
   1d18a:	sub    edx,ecx
   1d18c:	mov    DWORD PTR [ebp-0x8],edx
   1d18f:	cmp    edx,DWORD PTR [ebp-0x40]
   1d192:	ja     0x1d2c0
   1d198:	mov    ecx,DWORD PTR [ebp-0x28]
   1d19b:	dec    ecx
   1d19c:	mov    DWORD PTR [ebp-0x10],ecx
   1d19f:	mov    ecx,DWORD PTR [ebp-0x18]
   1d1a2:	test   ecx,ecx
   1d1a4:	jne    0x1d1cc
   1d1a6:	mov    ecx,DWORD PTR [ebp-0x24]
   1d1a9:	sub    ecx,edx
   1d1ab:	add    DWORD PTR [ebp-0x10],ecx
   1d1ae:	mov    ecx,edx
   1d1b0:	cmp    ecx,DWORD PTR [ebp-0xc]
   1d1b3:	jae    0x1d241
   1d1b9:	sub    DWORD PTR [ebp-0xc],ecx
   1d1bc:	mov    ecx,DWORD PTR [ebp-0x10]
   1d1bf:	inc    ecx
   1d1c0:	mov    dl,BYTE PTR [ecx]
   1d1c2:	inc    edi
   1d1c3:	dec    DWORD PTR [ebp-0x8]
   1d1c6:	mov    BYTE PTR [edi],dl
   1d1c8:	jne    0x1d1bf
   1d1ca:	jmp    0x1d217
   1d1cc:	cmp    ecx,edx
   1d1ce:	jae    0x1d221
   1d1d0:	sub    ecx,edx
   1d1d2:	add    ecx,DWORD PTR [ebp-0x24]
   1d1d5:	add    DWORD PTR [ebp-0x10],ecx
   1d1d8:	mov    ecx,DWORD PTR [ebp-0x8]
   1d1db:	sub    ecx,DWORD PTR [ebp-0x18]
   1d1de:	cmp    ecx,DWORD PTR [ebp-0xc]
   1d1e1:	jae    0x1d241
   1d1e3:	sub    DWORD PTR [ebp-0xc],ecx
   1d1e6:	inc    DWORD PTR [ebp-0x10]
   1d1e9:	mov    edx,DWORD PTR [ebp-0x10]
   1d1ec:	mov    dl,BYTE PTR [edx]
   1d1ee:	inc    edi
   1d1ef:	dec    ecx
   1d1f0:	mov    BYTE PTR [edi],dl
   1d1f2:	jne    0x1d1e6
   1d1f4:	mov    ecx,DWORD PTR [ebp-0x28]
   1d1f7:	dec    ecx
   1d1f8:	mov    DWORD PTR [ebp-0x10],ecx
   1d1fb:	mov    ecx,DWORD PTR [ebp-0x18]
   1d1fe:	cmp    ecx,DWORD PTR [ebp-0xc]
   1d201:	jae    0x1d241
   1d203:	sub    DWORD PTR [ebp-0xc],ecx
   1d206:	mov    DWORD PTR [ebp-0x8],ecx
   1d209:	mov    ecx,DWORD PTR [ebp-0x10]
   1d20c:	inc    ecx
   1d20d:	mov    dl,BYTE PTR [ecx]
   1d20f:	inc    edi
   1d210:	dec    DWORD PTR [ebp-0x8]
   1d213:	mov    BYTE PTR [edi],dl
   1d215:	jne    0x1d20c
   1d217:	mov    ecx,edi
   1d219:	sub    ecx,DWORD PTR [ebp-0x14]
   1d21c:	mov    DWORD PTR [ebp-0x10],ecx
   1d21f:	jmp    0x1d244
   1d221:	sub    ecx,edx
   1d223:	add    DWORD PTR [ebp-0x10],ecx
   1d226:	mov    ecx,DWORD PTR [ebp-0x8]
   1d229:	cmp    ecx,DWORD PTR [ebp-0xc]
   1d22c:	jae    0x1d241
   1d22e:	sub    DWORD PTR [ebp-0xc],ecx
   1d231:	mov    ecx,DWORD PTR [ebp-0x10]
   1d234:	inc    ecx
   1d235:	mov    dl,BYTE PTR [ecx]
   1d237:	inc    edi
   1d238:	dec    DWORD PTR [ebp-0x8]
   1d23b:	mov    BYTE PTR [edi],dl
   1d23d:	jne    0x1d234
   1d23f:	jmp    0x1d217
   1d241:	mov    ecx,DWORD PTR [ebp-0x10]
   1d244:	mov    edx,DWORD PTR [ebp-0xc]
   1d247:	cmp    edx,0x2
   1d24a:	jbe    0x1d298
   1d24c:	lea    eax,[edx-0x3]
   1d24f:	push   0x3
   1d251:	xor    edx,edx
   1d253:	pop    ecx
   1d254:	div    ecx
   1d256:	mov    ecx,DWORD PTR [ebp-0x10]
   1d259:	inc    eax
   1d25a:	sub    DWORD PTR [ebp-0xc],0x3
   1d25e:	inc    ecx
   1d25f:	mov    dl,BYTE PTR [ecx]
   1d261:	inc    edi
   1d262:	mov    BYTE PTR [edi],dl
   1d264:	inc    ecx
   1d265:	mov    dl,BYTE PTR [ecx]
   1d267:	inc    edi
   1d268:	inc    ecx
   1d269:	mov    BYTE PTR [edi],dl
   1d26b:	mov    dl,BYTE PTR [ecx]
   1d26d:	inc    edi
   1d26e:	dec    eax
   1d26f:	mov    BYTE PTR [edi],dl
   1d271:	jne    0x1d25a
   1d273:	mov    eax,DWORD PTR [ebp+0x8]
   1d276:	jmp    0x1d298
   1d278:	mov    ecx,edi
   1d27a:	sub    ecx,edx
   1d27c:	sub    DWORD PTR [ebp-0xc],0x3
   1d280:	inc    ecx
   1d281:	mov    dl,BYTE PTR [ecx]
   1d283:	inc    edi
   1d284:	mov    BYTE PTR [edi],dl
   1d286:	inc    ecx
   1d287:	mov    dl,BYTE PTR [ecx]
   1d289:	inc    edi
   1d28a:	inc    ecx
   1d28b:	mov    BYTE PTR [edi],dl
   1d28d:	mov    dl,BYTE PTR [ecx]
   1d28f:	inc    edi
   1d290:	cmp    DWORD PTR [ebp-0xc],0x2
   1d294:	mov    BYTE PTR [edi],dl
   1d296:	ja     0x1d27c
   1d298:	cmp    DWORD PTR [ebp-0xc],0x0
   1d29c:	je     0x1d2b0
   1d29e:	inc    ecx
   1d29f:	mov    dl,BYTE PTR [ecx]
   1d2a1:	inc    edi
   1d2a2:	cmp    DWORD PTR [ebp-0xc],0x1
   1d2a6:	mov    BYTE PTR [edi],dl
   1d2a8:	jbe    0x1d2b0
   1d2aa:	mov    cl,BYTE PTR [ecx+0x1]
   1d2ad:	inc    edi
   1d2ae:	mov    BYTE PTR [edi],cl
   1d2b0:	cmp    ebx,DWORD PTR [ebp-0x2c]
   1d2b3:	jae    0x1d2ec
   1d2b5:	cmp    edi,DWORD PTR [ebp-0x30]
   1d2b8:	jb     0x1cfe1
   1d2be:	jmp    0x1d2ec
   1d2c0:	mov    DWORD PTR [eax+0x18],0x1f10a
   1d2c7:	jmp    0x1d2e6
   1d2c9:	mov    DWORD PTR [eax+0x18],0x1f128
   1d2d0:	jmp    0x1d2e6
   1d2d2:	test   cl,0x20
   1d2d5:	je     0x1d2df
   1d2d7:	mov    DWORD PTR [esi],0xb
   1d2dd:	jmp    0x1d2ec
   1d2df:	mov    DWORD PTR [eax+0x18],0x1f13e
   1d2e6:	mov    DWORD PTR [esi],0x1b
   1d2ec:	mov    ecx,DWORD PTR [ebp+0xc]
   1d2ef:	shr    ecx,0x3
   1d2f2:	sub    ebx,ecx
   1d2f4:	shl    ecx,0x3
   1d2f7:	sub    DWORD PTR [ebp+0xc],ecx
   1d2fa:	xor    ecx,ecx
   1d2fc:	inc    ecx
   1d2fd:	mov    edx,ecx
   1d2ff:	mov    ecx,DWORD PTR [ebp+0xc]
   1d302:	shl    edx,cl
   1d304:	dec    edx
   1d305:	mov    ecx,edx
   1d307:	mov    edx,DWORD PTR [ebp-0x4]
   1d30a:	and    edx,ecx
   1d30c:	lea    ecx,[ebx+0x1]
   1d30f:	mov    DWORD PTR [eax],ecx
   1d311:	lea    ecx,[edi+0x1]
   1d314:	mov    DWORD PTR [eax+0xc],ecx
   1d317:	mov    ecx,DWORD PTR [ebp-0x2c]
   1d31a:	sub    ecx,ebx
   1d31c:	add    ecx,0x5
   1d31f:	mov    DWORD PTR [eax+0x4],ecx
   1d322:	mov    ecx,DWORD PTR [ebp-0x30]
   1d325:	sub    ecx,edi
   1d327:	add    ecx,0x101
   1d32d:	mov    DWORD PTR [eax+0x10],ecx
   1d330:	mov    eax,DWORD PTR [ebp+0xc]
   1d333:	pop    edi
   1d334:	mov    DWORD PTR [esi+0x38],edx
   1d337:	mov    DWORD PTR [esi+0x3c],eax
   1d33a:	pop    esi
   1d33b:	pop    ebx
   1d33c:	leave  
   1d33d:	ret    0x8
   1d340:	int3   
   1d341:	int3   
   1d342:	int3   
   1d343:	int3   
   1d344:	int3   
   1d345:	int3   
   1d346:	mov    edi,edi
   1d348:	push   ebp
   1d349:	mov    ebp,esp
   1d34b:	sub    esp,0x90
   1d351:	mov    eax,ds:0x77b1c
   1d356:	xor    eax,ebp
   1d358:	mov    DWORD PTR [ebp-0x4],eax
   1d35b:	mov    eax,DWORD PTR [ebp+0xc]
   1d35e:	mov    edx,DWORD PTR [ebp+0x18]
   1d361:	mov    DWORD PTR [ebp-0x7c],eax
   1d364:	mov    eax,DWORD PTR [ebp+0x1c]
   1d367:	push   ebx
   1d368:	mov    DWORD PTR [ebp-0x4c],eax
   1d36b:	xor    eax,eax
   1d36d:	push   esi
   1d36e:	mov    esi,DWORD PTR [ebp+0x14]
   1d371:	movzx  ebx,ax
   1d374:	push   edi
   1d375:	mov    eax,ebx
   1d377:	shl    ebx,0x10
   1d37a:	push   0x8
   1d37c:	or     eax,ebx
   1d37e:	pop    ecx
   1d37f:	lea    edi,[ebp-0x24]
   1d382:	rep stos DWORD PTR es:[edi],eax
   1d384:	xor    edi,edi
   1d386:	xor    ecx,ecx
   1d388:	mov    DWORD PTR [ebp-0x90],edx
   1d38e:	cmp    DWORD PTR [ebp+0x10],edi
   1d391:	jbe    0x1d3a7
   1d393:	mov    eax,DWORD PTR [ebp-0x7c]
   1d396:	movzx  eax,WORD PTR [eax+ecx*2]
   1d39a:	lea    eax,[ebp+eax*2-0x24]
   1d39e:	inc    WORD PTR [eax]
   1d3a1:	inc    ecx
   1d3a2:	cmp    ecx,DWORD PTR [ebp+0x10]
   1d3a5:	jb     0x1d393
   1d3a7:	mov    ecx,DWORD PTR [edx]
   1d3a9:	push   0xf
   1d3ab:	pop    eax
   1d3ac:	mov    DWORD PTR [ebp-0x54],ecx
   1d3af:	mov    DWORD PTR [ebp-0x60],eax
   1d3b2:	cmp    WORD PTR [ebp+eax*2-0x24],di
   1d3b7:	jne    0x1d3c2
   1d3b9:	dec    eax
   1d3ba:	mov    DWORD PTR [ebp-0x60],eax
   1d3bd:	cmp    eax,0x1
   1d3c0:	jae    0x1d3b2
   1d3c2:	cmp    ecx,eax
   1d3c4:	jbe    0x1d3c9
   1d3c6:	mov    DWORD PTR [ebp-0x54],eax
   1d3c9:	cmp    eax,edi
   1d3cb:	jne    0x1d3f7
   1d3cd:	mov    ecx,DWORD PTR [esi]
   1d3cf:	xor    eax,eax
   1d3d1:	mov    BYTE PTR [ebp-0x48],0x40
   1d3d5:	mov    BYTE PTR [ebp-0x47],0x1
   1d3d9:	mov    WORD PTR [ebp-0x46],ax
   1d3dd:	mov    eax,DWORD PTR [ebp-0x48]
   1d3e0:	mov    DWORD PTR [ecx],eax
   1d3e2:	add    DWORD PTR [esi],0x4
   1d3e5:	mov    ecx,DWORD PTR [esi]
   1d3e7:	mov    DWORD PTR [ecx],eax
   1d3e9:	add    DWORD PTR [esi],0x4
   1d3ec:	mov    DWORD PTR [edx],0x1
   1d3f2:	jmp    0x1d733
   1d3f7:	xor    ecx,ecx
   1d3f9:	inc    ecx
   1d3fa:	mov    edx,ecx
   1d3fc:	cmp    WORD PTR [ebp+edx*2-0x24],di
   1d401:	jne    0x1d409
   1d403:	inc    edx
   1d404:	cmp    edx,0xf
   1d407:	jbe    0x1d3fc
   1d409:	cmp    DWORD PTR [ebp-0x54],edx
   1d40c:	jae    0x1d411
   1d40e:	mov    DWORD PTR [ebp-0x54],edx
   1d411:	mov    edi,ecx
   1d413:	movzx  ebx,WORD PTR [ebp+ecx*2-0x24]
   1d418:	add    edi,edi
   1d41a:	sub    edi,ebx
   1d41c:	js     0x1d4a8
   1d422:	inc    ecx
   1d423:	cmp    ecx,0xf
   1d426:	jbe    0x1d413
   1d428:	xor    ebx,ebx
   1d42a:	cmp    edi,ebx
   1d42c:	jle    0x1d438
   1d42e:	cmp    DWORD PTR [ebp+0x8],ebx
   1d431:	je     0x1d4a8
   1d433:	cmp    eax,0x1
   1d436:	jne    0x1d4a8
   1d438:	xor    eax,eax
   1d43a:	push   0x2
   1d43c:	mov    WORD PTR [ebp-0x42],ax
   1d440:	pop    ecx
   1d441:	mov    ax,WORD PTR [ebp+ecx*1-0x44]
   1d446:	add    ax,WORD PTR [ebp+ecx*1-0x24]
   1d44b:	inc    ecx
   1d44c:	mov    WORD PTR [ebp+ecx*1-0x43],ax
   1d451:	inc    ecx
   1d452:	cmp    ecx,0x1e
   1d455:	jb     0x1d441
   1d457:	mov    eax,DWORD PTR [ebp-0x4c]
   1d45a:	xor    edi,edi
   1d45c:	cmp    DWORD PTR [ebp+0x10],ebx
   1d45f:	jbe    0x1d48a
   1d461:	mov    ecx,DWORD PTR [ebp-0x7c]
   1d464:	lea    ecx,[ecx+edi*2]
   1d467:	cmp    WORD PTR [ecx],bx
   1d46a:	je     0x1d484
   1d46c:	movzx  ebx,WORD PTR [ecx]
   1d46f:	movzx  ebx,WORD PTR [ebp+ebx*2-0x44]
   1d474:	mov    WORD PTR [eax+ebx*2],di
   1d478:	movzx  ecx,WORD PTR [ecx]
   1d47b:	lea    ecx,[ebp+ecx*2-0x44]
   1d47f:	inc    WORD PTR [ecx]
   1d482:	xor    ebx,ebx
   1d484:	inc    edi
   1d485:	cmp    edi,DWORD PTR [ebp+0x10]
   1d488:	jb     0x1d461
   1d48a:	mov    ecx,DWORD PTR [ebp+0x8]
   1d48d:	sub    ecx,ebx
   1d48f:	je     0x1d4d2
   1d491:	dec    ecx
   1d492:	je     0x1d4b0
   1d494:	or     DWORD PTR [ebp-0x68],0xffffffff
   1d498:	mov    DWORD PTR [ebp-0x6c],0x75698
   1d49f:	mov    DWORD PTR [ebp-0x78],0x756d8
   1d4a6:	jmp    0x1d4df
   1d4a8:	or     eax,0xffffffff
   1d4ab:	jmp    0x1d735
   1d4b0:	mov    ecx,0x202
   1d4b5:	mov    edi,0x75618
   1d4ba:	sub    edi,ecx
   1d4bc:	mov    DWORD PTR [ebp-0x6c],edi
   1d4bf:	mov    edi,0x75658
   1d4c4:	sub    edi,ecx
   1d4c6:	mov    DWORD PTR [ebp-0x78],edi
   1d4c9:	mov    DWORD PTR [ebp-0x68],0x100
   1d4d0:	jmp    0x1d4df
   1d4d2:	mov    DWORD PTR [ebp-0x78],eax
   1d4d5:	mov    DWORD PTR [ebp-0x6c],eax
   1d4d8:	mov    DWORD PTR [ebp-0x68],0x13
   1d4df:	mov    ecx,DWORD PTR [ebp-0x54]
   1d4e2:	or     DWORD PTR [ebp-0x74],0xffffffff
   1d4e6:	mov    edi,DWORD PTR [esi]
   1d4e8:	mov    eax,edx
   1d4ea:	xor    edx,edx
   1d4ec:	inc    edx
   1d4ed:	shl    edx,cl
   1d4ef:	cmp    DWORD PTR [ebp+0x8],0x1
   1d4f3:	mov    DWORD PTR [ebp-0x5c],ebx
   1d4f6:	mov    DWORD PTR [ebp-0x84],eax
   1d4fc:	lea    ecx,[edx-0x1]
   1d4ff:	mov    DWORD PTR [ebp-0x50],ebx
   1d502:	mov    DWORD PTR [ebp-0x80],edx
   1d505:	mov    DWORD PTR [ebp-0x64],edx
   1d508:	mov    DWORD PTR [ebp-0x88],ecx
   1d50e:	jne    0x1d520
   1d510:	cmp    edx,0x5b0
   1d516:	jb     0x1d520
   1d518:	xor    eax,eax
   1d51a:	inc    eax
   1d51b:	jmp    0x1d735
   1d520:	mov    ecx,DWORD PTR [ebp-0x4c]
   1d523:	mov    DWORD PTR [ebp-0x58],ecx
   1d526:	mov    cl,al
   1d528:	sub    cl,BYTE PTR [ebp-0x50]
   1d52b:	mov    BYTE PTR [ebp-0x47],cl
   1d52e:	mov    ecx,DWORD PTR [ebp-0x58]
   1d531:	movzx  edx,WORD PTR [ecx]
   1d534:	movzx  ecx,dx
   1d537:	cmp    ecx,DWORD PTR [ebp-0x68]
   1d53a:	jge    0x1d546
   1d53c:	mov    BYTE PTR [ebp-0x48],0x0
   1d540:	mov    WORD PTR [ebp-0x46],dx
   1d544:	jmp    0x1d56c
   1d546:	jle    0x1d562
   1d548:	mov    ecx,DWORD PTR [ebp-0x58]
   1d54b:	movzx  ecx,WORD PTR [ecx]
   1d54e:	mov    edx,DWORD PTR [ebp-0x78]
   1d551:	add    ecx,ecx
   1d553:	mov    dl,BYTE PTR [ecx+edx*1]
   1d556:	mov    BYTE PTR [ebp-0x48],dl
   1d559:	mov    edx,DWORD PTR [ebp-0x6c]
   1d55c:	mov    cx,WORD PTR [ecx+edx*1]
   1d560:	jmp    0x1d568
   1d562:	mov    BYTE PTR [ebp-0x48],0x60
   1d566:	xor    ecx,ecx
   1d568:	mov    WORD PTR [ebp-0x46],cx
   1d56c:	xor    edx,edx
   1d56e:	mov    ecx,eax
   1d570:	sub    ecx,DWORD PTR [ebp-0x50]
   1d573:	inc    edx
   1d574:	shl    edx,cl
   1d576:	mov    ecx,DWORD PTR [ebp-0x80]
   1d579:	mov    DWORD PTR [ebp-0x4c],ecx
   1d57c:	mov    DWORD PTR [ebp-0x70],ecx
   1d57f:	mov    ecx,DWORD PTR [ebp-0x50]
   1d582:	shr    ebx,cl
   1d584:	add    ebx,DWORD PTR [ebp-0x4c]
   1d587:	lea    ecx,[edi+ebx*4]
   1d58a:	sub    DWORD PTR [ebp-0x4c],edx
   1d58d:	mov    ebx,edx
   1d58f:	shl    ebx,0x2
   1d592:	sub    ecx,ebx
   1d594:	cmp    DWORD PTR [ebp-0x4c],0x0
   1d598:	mov    ebx,DWORD PTR [ebp-0x48]
   1d59b:	mov    DWORD PTR [ecx],ebx
   1d59d:	jne    0x1d58a
   1d59f:	xor    edx,edx
   1d5a1:	lea    ecx,[eax-0x1]
   1d5a4:	inc    edx
   1d5a5:	shl    edx,cl
   1d5a7:	mov    ecx,DWORD PTR [ebp-0x5c]
   1d5aa:	jmp    0x1d5ae
   1d5ac:	shr    edx,1
   1d5ae:	test   ecx,edx
   1d5b0:	jne    0x1d5ac
   1d5b2:	test   edx,edx
   1d5b4:	je     0x1d5bf
   1d5b6:	lea    ebx,[edx-0x1]
   1d5b9:	and    ebx,ecx
   1d5bb:	add    ebx,edx
   1d5bd:	jmp    0x1d5c1
   1d5bf:	xor    ebx,ebx
   1d5c1:	add    DWORD PTR [ebp-0x58],0x2
   1d5c5:	lea    ecx,[ebp+eax*2-0x24]
   1d5c9:	mov    edx,0xffff
   1d5ce:	add    WORD PTR [ecx],dx
   1d5d1:	movzx  ecx,WORD PTR [ecx]
   1d5d4:	mov    DWORD PTR [ebp-0x5c],ebx
   1d5d7:	test   cx,cx
   1d5da:	jne    0x1d5f8
   1d5dc:	cmp    eax,DWORD PTR [ebp-0x60]
   1d5df:	je     0x1d6bb
   1d5e5:	mov    eax,DWORD PTR [ebp-0x58]
   1d5e8:	movzx  eax,WORD PTR [eax]
   1d5eb:	mov    ecx,DWORD PTR [ebp-0x7c]
   1d5ee:	movzx  eax,WORD PTR [ecx+eax*2]
   1d5f2:	mov    DWORD PTR [ebp-0x84],eax
   1d5f8:	mov    edx,DWORD PTR [ebp-0x54]
   1d5fb:	cmp    eax,edx
   1d5fd:	jbe    0x1d526
   1d603:	mov    ecx,DWORD PTR [ebp-0x88]
   1d609:	and    ecx,ebx
   1d60b:	mov    DWORD PTR [ebp-0x8c],ecx
   1d611:	cmp    ecx,DWORD PTR [ebp-0x74]
   1d614:	je     0x1d526
   1d61a:	cmp    DWORD PTR [ebp-0x50],0x0
   1d61e:	jne    0x1d623
   1d620:	mov    DWORD PTR [ebp-0x50],edx
   1d623:	mov    ecx,DWORD PTR [ebp-0x70]
   1d626:	lea    edi,[edi+ecx*4]
   1d629:	mov    ecx,eax
   1d62b:	mov    eax,DWORD PTR [ebp-0x50]
   1d62e:	xor    edx,edx
   1d630:	sub    ecx,eax
   1d632:	inc    edx
   1d633:	add    eax,ecx
   1d635:	shl    edx,cl
   1d637:	cmp    eax,DWORD PTR [ebp-0x60]
   1d63a:	jae    0x1d664
   1d63c:	mov    DWORD PTR [ebp-0x4c],eax
   1d63f:	lea    eax,[ebp+eax*2-0x24]
   1d643:	jmp    0x1d648
   1d645:	mov    eax,DWORD PTR [ebp-0x70]
   1d648:	movzx  ebx,WORD PTR [eax]
   1d64b:	sub    edx,ebx
   1d64d:	test   edx,edx
   1d64f:	jle    0x1d664
   1d651:	inc    ecx
   1d652:	inc    DWORD PTR [ebp-0x4c]
   1d655:	inc    eax
   1d656:	inc    eax
   1d657:	mov    DWORD PTR [ebp-0x70],eax
   1d65a:	mov    eax,DWORD PTR [ebp-0x4c]
   1d65d:	add    edx,edx
   1d65f:	cmp    eax,DWORD PTR [ebp-0x60]
   1d662:	jb     0x1d645
   1d664:	xor    eax,eax
   1d666:	inc    eax
   1d667:	mov    edx,eax
   1d669:	shl    edx,cl
   1d66b:	add    DWORD PTR [ebp-0x64],edx
   1d66e:	mov    DWORD PTR [ebp-0x80],edx
   1d671:	cmp    DWORD PTR [ebp+0x8],eax
   1d674:	jne    0x1d683
   1d676:	cmp    DWORD PTR [ebp-0x64],0x5b0
   1d67d:	jae    0x1d735
   1d683:	mov    eax,DWORD PTR [ebp-0x8c]
   1d689:	mov    ebx,DWORD PTR [ebp-0x5c]
   1d68c:	mov    edx,eax
   1d68e:	mov    DWORD PTR [ebp-0x74],eax
   1d691:	mov    eax,DWORD PTR [esi]
   1d693:	shl    edx,0x2
   1d696:	mov    BYTE PTR [edx+eax*1],cl
   1d699:	mov    eax,DWORD PTR [esi]
   1d69b:	mov    cl,BYTE PTR [ebp-0x54]
   1d69e:	mov    BYTE PTR [edx+eax*1+0x1],cl
   1d6a2:	mov    eax,DWORD PTR [esi]
   1d6a4:	mov    ecx,edi
   1d6a6:	sub    ecx,eax
   1d6a8:	sar    ecx,0x2
   1d6ab:	mov    WORD PTR [edx+eax*1+0x2],cx
   1d6b0:	mov    eax,DWORD PTR [ebp-0x84]
   1d6b6:	jmp    0x1d526
   1d6bb:	mov    cl,al
   1d6bd:	sub    cl,BYTE PTR [ebp-0x50]
   1d6c0:	mov    BYTE PTR [ebp-0x48],0x40
   1d6c4:	mov    BYTE PTR [ebp-0x47],cl
   1d6c7:	xor    ecx,ecx
   1d6c9:	mov    WORD PTR [ebp-0x46],cx
   1d6cd:	jmp    0x1d71c
   1d6cf:	cmp    DWORD PTR [ebp-0x50],0x0
   1d6d3:	je     0x1d6ee
   1d6d5:	mov    ecx,DWORD PTR [ebp-0x88]
   1d6db:	and    ecx,ebx
   1d6dd:	cmp    ecx,DWORD PTR [ebp-0x74]
   1d6e0:	je     0x1d6ee
   1d6e2:	mov    eax,DWORD PTR [ebp-0x54]
   1d6e5:	and    DWORD PTR [ebp-0x50],0x0
   1d6e9:	mov    edi,DWORD PTR [esi]
   1d6eb:	mov    BYTE PTR [ebp-0x47],al
   1d6ee:	mov    ecx,DWORD PTR [ebp-0x50]
   1d6f1:	mov    edx,ebx
   1d6f3:	shr    edx,cl
   1d6f5:	mov    ecx,DWORD PTR [ebp-0x48]
   1d6f8:	mov    DWORD PTR [edi+edx*4],ecx
   1d6fb:	xor    edx,edx
   1d6fd:	lea    ecx,[eax-0x1]
   1d700:	inc    edx
   1d701:	shl    edx,cl
   1d703:	jmp    0x1d707
   1d705:	shr    edx,1
   1d707:	test   ebx,edx
   1d709:	jne    0x1d705
   1d70b:	test   edx,edx
   1d70d:	je     0x1d71a
   1d70f:	lea    ecx,[edx-0x1]
   1d712:	and    ecx,ebx
   1d714:	add    ecx,edx
   1d716:	mov    ebx,ecx
   1d718:	jmp    0x1d71c
   1d71a:	xor    ebx,ebx
   1d71c:	test   ebx,ebx
   1d71e:	jne    0x1d6cf
   1d720:	mov    eax,DWORD PTR [ebp-0x64]
   1d723:	mov    ecx,DWORD PTR [ebp-0x54]
   1d726:	shl    eax,0x2
   1d729:	add    DWORD PTR [esi],eax
   1d72b:	mov    eax,DWORD PTR [ebp-0x90]
   1d731:	mov    DWORD PTR [eax],ecx
   1d733:	xor    eax,eax
   1d735:	mov    ecx,DWORD PTR [ebp-0x4]
   1d738:	pop    edi
   1d739:	pop    esi
   1d73a:	xor    ecx,ebp
   1d73c:	pop    ebx
   1d73d:	call   0x1dc5d
   1d742:	leave  
   1d743:	ret    0x18
   1d746:	int3   
   1d747:	int3   
   1d748:	int3   
   1d749:	int3   
   1d74a:	int3   
   1d74b:	int3   
   1d74c:	mov    edi,edi
   1d74e:	push   ebp
   1d74f:	mov    ebp,esp
   1d751:	push   ebx
   1d752:	mov    ebx,DWORD PTR [ebp+0x10]
   1d755:	push   esi
   1d756:	mov    esi,DWORD PTR [ebp+0x8]
   1d759:	push   edi
   1d75a:	xor    eax,eax
   1d75c:	mov    edi,esi
   1d75e:	inc    eax
   1d75f:	shr    edi,0x10
   1d762:	and    esi,0xffff
   1d768:	cmp    ebx,eax
   1d76a:	jne    0x1d790
   1d76c:	mov    eax,DWORD PTR [ebp+0xc]
   1d76f:	movzx  eax,BYTE PTR [eax]
   1d772:	add    esi,eax
   1d774:	mov    eax,0xfff1
   1d779:	cmp    esi,eax
   1d77b:	jb     0x1d77f
   1d77d:	sub    esi,eax
   1d77f:	add    edi,esi
   1d781:	cmp    edi,eax
   1d783:	jb     0x1d962
   1d789:	sub    edi,eax
   1d78b:	jmp    0x1d962
   1d790:	mov    ecx,DWORD PTR [ebp+0xc]
   1d793:	test   ecx,ecx
   1d795:	je     0x1d969
   1d79b:	cmp    ebx,0x10
   1d79e:	jb     0x1d925
   1d7a4:	cmp    ebx,0x15b0
   1d7aa:	jb     0x1d878
   1d7b0:	mov    eax,ebx
   1d7b2:	mov    ebx,0x15b0
   1d7b7:	xor    edx,edx
   1d7b9:	div    ebx
   1d7bb:	mov    ebx,DWORD PTR [ebp+0x10]
   1d7be:	mov    DWORD PTR [ebp+0xc],eax
   1d7c1:	sub    ebx,0x15b0
   1d7c7:	mov    eax,0x15b
   1d7cc:	movzx  edx,BYTE PTR [ecx]
   1d7cf:	add    esi,edx
   1d7d1:	movzx  edx,BYTE PTR [ecx+0x1]
   1d7d5:	add    edi,esi
   1d7d7:	add    esi,edx
   1d7d9:	movzx  edx,BYTE PTR [ecx+0x2]
   1d7dd:	add    edi,esi
   1d7df:	add    esi,edx
   1d7e1:	movzx  edx,BYTE PTR [ecx+0x3]
   1d7e5:	add    edi,esi
   1d7e7:	add    esi,edx
   1d7e9:	movzx  edx,BYTE PTR [ecx+0x4]
   1d7ed:	add    edi,esi
   1d7ef:	add    esi,edx
   1d7f1:	movzx  edx,BYTE PTR [ecx+0x5]
   1d7f5:	add    edi,esi
   1d7f7:	add    esi,edx
   1d7f9:	movzx  edx,BYTE PTR [ecx+0x6]
   1d7fd:	add    edi,esi
   1d7ff:	add    esi,edx
   1d801:	movzx  edx,BYTE PTR [ecx+0x7]
   1d805:	add    edi,esi
   1d807:	add    esi,edx
   1d809:	movzx  edx,BYTE PTR [ecx+0x8]
   1d80d:	add    edi,esi
   1d80f:	add    esi,edx
   1d811:	movzx  edx,BYTE PTR [ecx+0x9]
   1d815:	add    edi,esi
   1d817:	add    esi,edx
   1d819:	movzx  edx,BYTE PTR [ecx+0xa]
   1d81d:	add    edi,esi
   1d81f:	add    esi,edx
   1d821:	movzx  edx,BYTE PTR [ecx+0xb]
   1d825:	add    edi,esi
   1d827:	add    esi,edx
   1d829:	movzx  edx,BYTE PTR [ecx+0xc]
   1d82d:	add    edi,esi
   1d82f:	add    esi,edx
   1d831:	movzx  edx,BYTE PTR [ecx+0xd]
   1d835:	add    edi,esi
   1d837:	add    esi,edx
   1d839:	movzx  edx,BYTE PTR [ecx+0xe]
   1d83d:	add    edi,esi
   1d83f:	add    esi,edx
   1d841:	movzx  edx,BYTE PTR [ecx+0xf]
   1d845:	add    edi,esi
   1d847:	add    esi,edx
   1d849:	add    edi,esi
   1d84b:	add    ecx,0x10
   1d84e:	dec    eax
   1d84f:	jne    0x1d7cc
   1d855:	mov    eax,esi
   1d857:	xor    edx,edx
   1d859:	mov    esi,0xfff1
   1d85e:	div    esi
   1d860:	mov    eax,edi
   1d862:	mov    edi,0xfff1
   1d867:	mov    esi,edx
   1d869:	xor    edx,edx
   1d86b:	div    edi
   1d86d:	dec    DWORD PTR [ebp+0xc]
   1d870:	mov    edi,edx
   1d872:	jne    0x1d7c1
   1d878:	test   ebx,ebx
   1d87a:	je     0x1d962
   1d880:	cmp    ebx,0x10
   1d883:	jb     0x1d947
   1d889:	mov    eax,ebx
   1d88b:	shr    eax,0x4
   1d88e:	movzx  edx,BYTE PTR [ecx]
   1d891:	add    esi,edx
   1d893:	movzx  edx,BYTE PTR [ecx+0x1]
   1d897:	add    edi,esi
   1d899:	add    esi,edx
   1d89b:	movzx  edx,BYTE PTR [ecx+0x2]
   1d89f:	add    edi,esi
   1d8a1:	add    esi,edx
   1d8a3:	movzx  edx,BYTE PTR [ecx+0x3]
   1d8a7:	add    edi,esi
   1d8a9:	add    esi,edx
   1d8ab:	movzx  edx,BYTE PTR [ecx+0x4]
   1d8af:	add    edi,esi
   1d8b1:	add    esi,edx
   1d8b3:	movzx  edx,BYTE PTR [ecx+0x5]
   1d8b7:	add    edi,esi
   1d8b9:	add    esi,edx
   1d8bb:	movzx  edx,BYTE PTR [ecx+0x6]
   1d8bf:	add    edi,esi
   1d8c1:	add    esi,edx
   1d8c3:	movzx  edx,BYTE PTR [ecx+0x7]
   1d8c7:	add    edi,esi
   1d8c9:	add    esi,edx
   1d8cb:	movzx  edx,BYTE PTR [ecx+0x8]
   1d8cf:	add    edi,esi
   1d8d1:	add    esi,edx
   1d8d3:	movzx  edx,BYTE PTR [ecx+0x9]
   1d8d7:	add    edi,esi
   1d8d9:	add    esi,edx
   1d8db:	movzx  edx,BYTE PTR [ecx+0xa]
   1d8df:	add    edi,esi
   1d8e1:	add    esi,edx
   1d8e3:	movzx  edx,BYTE PTR [ecx+0xb]
   1d8e7:	add    edi,esi
   1d8e9:	add    esi,edx
   1d8eb:	movzx  edx,BYTE PTR [ecx+0xc]
   1d8ef:	add    edi,esi
   1d8f1:	add    esi,edx
   1d8f3:	movzx  edx,BYTE PTR [ecx+0xd]
   1d8f7:	add    edi,esi
   1d8f9:	add    esi,edx
   1d8fb:	movzx  edx,BYTE PTR [ecx+0xe]
   1d8ff:	add    edi,esi
   1d901:	add    esi,edx
   1d903:	movzx  edx,BYTE PTR [ecx+0xf]
   1d907:	add    edi,esi
   1d909:	add    esi,edx
   1d90b:	sub    ebx,0x10
   1d90e:	add    edi,esi
   1d910:	add    ecx,0x10
   1d913:	dec    eax
   1d914:	jne    0x1d88e
   1d91a:	jmp    0x1d947
   1d91c:	movzx  eax,BYTE PTR [ecx]
   1d91f:	dec    ebx
   1d920:	add    esi,eax
   1d922:	inc    ecx
   1d923:	add    edi,esi
   1d925:	test   ebx,ebx
   1d927:	jne    0x1d91c
   1d929:	mov    ecx,0xfff1
   1d92e:	cmp    esi,ecx
   1d930:	jb     0x1d934
   1d932:	sub    esi,ecx
   1d934:	mov    eax,edi
   1d936:	xor    edx,edx
   1d938:	div    ecx
   1d93a:	mov    eax,edx
   1d93c:	jmp    0x1d964
   1d93e:	movzx  eax,BYTE PTR [ecx]
   1d941:	dec    ebx
   1d942:	add    esi,eax
   1d944:	inc    ecx
   1d945:	add    edi,esi
   1d947:	test   ebx,ebx
   1d949:	jne    0x1d93e
   1d94b:	mov    eax,esi
   1d94d:	mov    ecx,0xfff1
   1d952:	xor    edx,edx
   1d954:	mov    esi,ecx
   1d956:	div    esi
   1d958:	mov    eax,edi
   1d95a:	mov    esi,edx
   1d95c:	xor    edx,edx
   1d95e:	div    ecx
   1d960:	mov    edi,edx
   1d962:	mov    eax,edi
   1d964:	shl    eax,0x10
   1d967:	or     eax,esi
   1d969:	pop    edi
   1d96a:	pop    esi
   1d96b:	pop    ebx
   1d96c:	pop    ebp
   1d96d:	ret    0xc
   1d970:	int3   
   1d971:	int3   
   1d972:	int3   
   1d973:	int3   
   1d974:	int3   
   1d975:	int3   
   1d976:	mov    edi,edi
   1d978:	push   ebp
   1d979:	mov    ebp,esp
   1d97b:	push   ecx
   1d97c:	cmp    DWORD PTR [ebp+0x8],0x0
   1d980:	push   esi
   1d981:	not    eax
   1d983:	mov    ecx,0xff
   1d988:	je     0x1d9a6
   1d98a:	test   dl,0x3
   1d98d:	je     0x1d9a6
   1d98f:	movzx  esi,BYTE PTR [edx]
   1d992:	xor    esi,eax
   1d994:	and    esi,ecx
   1d996:	shr    eax,0x8
   1d999:	xor    eax,DWORD PTR [esi*4+0x75718]
   1d9a0:	inc    edx
   1d9a1:	dec    DWORD PTR [ebp+0x8]
   1d9a4:	jne    0x1d98a
   1d9a6:	cmp    DWORD PTR [ebp+0x8],0x20
   1d9aa:	push   ebx
   1d9ab:	push   edi
   1d9ac:	push   0x4
   1d9ae:	mov    esi,edx
   1d9b0:	pop    edi
   1d9b1:	jb     0x1db75
   1d9b7:	mov    edx,DWORD PTR [ebp+0x8]
   1d9ba:	shr    edx,0x5
   1d9bd:	mov    DWORD PTR [ebp-0x4],edx
   1d9c0:	xor    eax,DWORD PTR [esi]
   1d9c2:	add    esi,edi
   1d9c4:	mov    edx,eax
   1d9c6:	shr    edx,0x10
   1d9c9:	mov    ebx,eax
   1d9cb:	shr    ebx,0x8
   1d9ce:	and    edx,ecx
   1d9d0:	mov    edx,DWORD PTR [edx*4+0x75b18]
   1d9d7:	and    ebx,ecx
   1d9d9:	xor    edx,DWORD PTR [ebx*4+0x75f18]
   1d9e0:	mov    ebx,eax
   1d9e2:	shr    ebx,0x18
   1d9e5:	xor    edx,DWORD PTR [ebx*4+0x75718]
   1d9ec:	and    eax,ecx
   1d9ee:	xor    edx,DWORD PTR [eax*4+0x76318]
   1d9f5:	xor    edx,DWORD PTR [esi]
   1d9f7:	add    esi,edi
   1d9f9:	mov    eax,edx
   1d9fb:	shr    eax,0x10
   1d9fe:	mov    ebx,edx
   1da00:	shr    ebx,0x8
   1da03:	and    eax,ecx
   1da05:	mov    eax,DWORD PTR [eax*4+0x75b18]
   1da0c:	and    ebx,ecx
   1da0e:	xor    eax,DWORD PTR [ebx*4+0x75f18]
   1da15:	mov    ebx,edx
   1da17:	shr    ebx,0x18
   1da1a:	xor    eax,DWORD PTR [ebx*4+0x75718]
   1da21:	and    edx,ecx
   1da23:	xor    eax,DWORD PTR [edx*4+0x76318]
   1da2a:	xor    eax,DWORD PTR [esi]
   1da2c:	add    esi,edi
   1da2e:	mov    edx,eax
   1da30:	shr    edx,0x10
   1da33:	mov    ebx,eax
   1da35:	and    edx,ecx
   1da37:	mov    edx,DWORD PTR [edx*4+0x75b18]
   1da3e:	shr    ebx,0x8
   1da41:	and    ebx,ecx
   1da43:	xor    edx,DWORD PTR [ebx*4+0x75f18]
   1da4a:	mov    ebx,eax
   1da4c:	shr    ebx,0x18
   1da4f:	xor    edx,DWORD PTR [ebx*4+0x75718]
   1da56:	and    eax,ecx
   1da58:	xor    edx,DWORD PTR [eax*4+0x76318]
   1da5f:	xor    edx,DWORD PTR [esi]
   1da61:	add    esi,edi
   1da63:	mov    eax,edx
   1da65:	shr    eax,0x10
   1da68:	mov    ebx,edx
   1da6a:	shr    ebx,0x8
   1da6d:	and    eax,ecx
   1da6f:	mov    eax,DWORD PTR [eax*4+0x75b18]
   1da76:	and    ebx,ecx
   1da78:	xor    eax,DWORD PTR [ebx*4+0x75f18]
   1da7f:	mov    ebx,edx
   1da81:	shr    ebx,0x18
   1da84:	xor    eax,DWORD PTR [ebx*4+0x75718]
   1da8b:	and    edx,ecx
   1da8d:	xor    eax,DWORD PTR [edx*4+0x76318]
   1da94:	xor    eax,DWORD PTR [esi]
   1da96:	add    esi,edi
   1da98:	mov    edx,eax
   1da9a:	shr    edx,0x10
   1da9d:	mov    ebx,eax
   1da9f:	and    edx,ecx
   1daa1:	mov    edx,DWORD PTR [edx*4+0x75b18]
   1daa8:	shr    ebx,0x8
   1daab:	and    ebx,ecx
   1daad:	xor    edx,DWORD PTR [ebx*4+0x75f18]
   1dab4:	mov    ebx,eax
   1dab6:	shr    ebx,0x18
   1dab9:	xor    edx,DWORD PTR [ebx*4+0x75718]
   1dac0:	and    eax,ecx
   1dac2:	xor    edx,DWORD PTR [eax*4+0x76318]
   1dac9:	xor    edx,DWORD PTR [esi]
   1dacb:	add    esi,edi
   1dacd:	mov    eax,edx
   1dacf:	shr    eax,0x10
   1dad2:	and    eax,ecx
   1dad4:	mov    ebx,edx
   1dad6:	mov    eax,DWORD PTR [eax*4+0x75b18]
   1dadd:	shr    ebx,0x8
   1dae0:	and    ebx,ecx
   1dae2:	xor    eax,DWORD PTR [ebx*4+0x75f18]
   1dae9:	mov    ebx,edx
   1daeb:	shr    ebx,0x18
   1daee:	xor    eax,DWORD PTR [ebx*4+0x75718]
   1daf5:	and    edx,ecx
   1daf7:	xor    eax,DWORD PTR [edx*4+0x76318]
   1dafe:	sub    DWORD PTR [ebp+0x8],0x20
   1db02:	xor    eax,DWORD PTR [esi]
   1db04:	add    esi,edi
   1db06:	mov    edx,eax
   1db08:	mov    ebx,eax
   1db0a:	shr    edx,0x10
   1db0d:	shr    ebx,0x8
   1db10:	and    edx,ecx
   1db12:	mov    edx,DWORD PTR [edx*4+0x75b18]
   1db19:	and    ebx,ecx
   1db1b:	xor    edx,DWORD PTR [ebx*4+0x75f18]
   1db22:	mov    ebx,eax
   1db24:	shr    ebx,0x18
   1db27:	xor    edx,DWORD PTR [ebx*4+0x75718]
   1db2e:	and    eax,ecx
   1db30:	xor    edx,DWORD PTR [eax*4+0x76318]
   1db37:	xor    edx,DWORD PTR [esi]
   1db39:	add    esi,edi
   1db3b:	mov    eax,edx
   1db3d:	shr    eax,0x10
   1db40:	and    eax,ecx
   1db42:	mov    eax,DWORD PTR [eax*4+0x75b18]
   1db49:	mov    ebx,edx
   1db4b:	shr    ebx,0x8
   1db4e:	and    ebx,ecx
   1db50:	xor    eax,DWORD PTR [ebx*4+0x75f18]
   1db57:	mov    ebx,edx
   1db59:	shr    ebx,0x18
   1db5c:	xor    eax,DWORD PTR [ebx*4+0x75718]
   1db63:	and    edx,ecx
   1db65:	xor    eax,DWORD PTR [edx*4+0x76318]
   1db6c:	dec    DWORD PTR [ebp-0x4]
   1db6f:	jne    0x1d9c0
   1db75:	cmp    DWORD PTR [ebp+0x8],edi
   1db78:	jb     0x1dbc2
   1db7a:	mov    edx,DWORD PTR [ebp+0x8]
   1db7d:	shr    edx,0x2
   1db80:	mov    DWORD PTR [ebp-0x4],edx
   1db83:	xor    eax,DWORD PTR [esi]
   1db85:	sub    DWORD PTR [ebp+0x8],edi
   1db88:	mov    edx,eax
   1db8a:	shr    edx,0x10
   1db8d:	and    edx,ecx
   1db8f:	mov    edx,DWORD PTR [edx*4+0x75b18]
   1db96:	mov    ebx,eax
   1db98:	shr    ebx,0x8
   1db9b:	and    ebx,ecx
   1db9d:	xor    edx,DWORD PTR [ebx*4+0x75f18]
   1dba4:	mov    ebx,eax
   1dba6:	shr    ebx,0x18
   1dba9:	xor    edx,DWORD PTR [ebx*4+0x75718]
   1dbb0:	and    eax,ecx
   1dbb2:	xor    edx,DWORD PTR [eax*4+0x76318]
   1dbb9:	add    esi,edi
   1dbbb:	dec    DWORD PTR [ebp-0x4]
   1dbbe:	mov    eax,edx
   1dbc0:	jne    0x1db83
   1dbc2:	cmp    DWORD PTR [ebp+0x8],0x0
   1dbc6:	pop    edi
   1dbc7:	pop    ebx
   1dbc8:	je     0x1dbe1
   1dbca:	movzx  edx,BYTE PTR [esi]
   1dbcd:	xor    edx,eax
   1dbcf:	and    edx,ecx
   1dbd1:	shr    eax,0x8
   1dbd4:	xor    eax,DWORD PTR [edx*4+0x75718]
   1dbdb:	inc    esi
   1dbdc:	dec    DWORD PTR [ebp+0x8]
   1dbdf:	jne    0x1dbca
   1dbe1:	not    eax
   1dbe3:	pop    esi
   1dbe4:	leave  
   1dbe5:	ret    0x4
   1dbe8:	int3   
   1dbe9:	int3   
   1dbea:	int3   
   1dbeb:	int3   
   1dbec:	int3   
   1dbed:	int3   
   1dbee:	mov    edi,edi
   1dbf0:	push   ebp
   1dbf1:	mov    ebp,esp
   1dbf3:	mov    edx,DWORD PTR [ebp+0xc]
   1dbf6:	test   edx,edx
   1dbf8:	jne    0x1dbfe
   1dbfa:	xor    eax,eax
   1dbfc:	jmp    0x1dc09
   1dbfe:	push   DWORD PTR [ebp+0x10]
   1dc01:	mov    eax,DWORD PTR [ebp+0x8]
   1dc04:	call   0x1d976
   1dc09:	pop    ebp
   1dc0a:	ret    0xc
   1dc0d:	int3   
   1dc0e:	int3   
   1dc0f:	int3   
   1dc10:	int3   
   1dc11:	int3   
   1dc12:	mov    edi,edi
   1dc14:	push   ebp
   1dc15:	mov    ebp,esp
   1dc17:	push   0x20
   1dc19:	push   0x61737973
   1dc1e:	push   DWORD PTR [ebp+0x8]
   1dc21:	push   0x1
   1dc23:	call   DWORD PTR ds:0x1f440
   1dc29:	test   eax,eax
   1dc2b:	jne    0x1dc38
   1dc2d:	push   0xc000009a
   1dc32:	call   DWORD PTR ds:0x1f420
   1dc38:	pop    ebp
   1dc39:	ret    
   1dc3a:	int3   
   1dc3b:	int3   
   1dc3c:	int3   
   1dc3d:	int3   
   1dc3e:	int3   
   1dc3f:	int3   
   1dc40:	mov    edi,edi
   1dc42:	push   ebp
   1dc43:	mov    ebp,esp
   1dc45:	cmp    DWORD PTR [ebp+0x8],0x0
   1dc49:	je     0x1dc56
   1dc4b:	push   0x0
   1dc4d:	push   DWORD PTR [ebp+0x8]
   1dc50:	call   DWORD PTR ds:0x1f444
   1dc56:	pop    ebp
   1dc57:	ret    
   1dc58:	int3   
   1dc59:	int3   
   1dc5a:	int3   
   1dc5b:	int3   
   1dc5c:	int3   
   1dc5d:	cmp    ecx,DWORD PTR ds:0x77b1c
   1dc63:	jne    0x1dc68
   1dc65:	ret    0x0
   1dc68:	jmp    0x1dc72
   1dc6d:	int3   
   1dc6e:	int3   
   1dc6f:	int3   
   1dc70:	int3   
   1dc71:	int3   
   1dc72:	mov    edi,edi
   1dc74:	push   ebp
   1dc75:	mov    ebp,esp
   1dc77:	push   ecx
   1dc78:	mov    DWORD PTR [ebp-0x4],ecx
   1dc7b:	push   0x0
   1dc7d:	push   DWORD PTR ds:0x77b20
   1dc83:	push   DWORD PTR ds:0x77b1c
   1dc89:	push   DWORD PTR [ebp-0x4]
   1dc8c:	push   0xf7
   1dc91:	call   DWORD PTR ds:0x1f44c
   1dc97:	int3   
   1dc98:	int3   
   1dc99:	int3   
   1dc9a:	int3   
   1dc9b:	int3   
   1dc9c:	int3   
   1dc9d:	int3   
   1dc9e:	jmp    DWORD PTR ds:0x1f408
   1dca4:	int3   
   1dca5:	int3   
   1dca6:	int3   
   1dca7:	int3   
   1dca8:	int3   
   1dca9:	int3   
   1dcaa:	jmp    DWORD PTR ds:0x1f40c
   1dcb0:	int3   
   1dcb1:	int3   
   1dcb2:	int3   
   1dcb3:	int3   
   1dcb4:	int3   
   1dcb5:	int3   
   1dcb6:	jmp    DWORD PTR ds:0x1f410
   1dcbc:	int3   
   1dcbd:	int3   
   1dcbe:	int3   
   1dcbf:	int3   
   1dcc0:	int3   
   1dcc1:	int3   
   1dcc2:	jmp    DWORD PTR ds:0x1f418
   1dcc8:	int3   
   1dcc9:	int3   
   1dcca:	int3   
   1dccb:	int3   
   1dccc:	int3   
   1dccd:	int3   
   1dcce:	jmp    DWORD PTR ds:0x1f41c
   1dcd4:	int3   
   1dcd5:	int3   
   1dcd6:	int3   
   1dcd7:	int3   
   1dcd8:	int3   
   1dcd9:	int3   
   1dcda:	jmp    DWORD PTR ds:0x1f428
   1dce0:	int3   
   1dce1:	int3   
   1dce2:	int3   
   1dce3:	int3   
   1dce4:	int3   
   1dce5:	int3   
   1dce6:	jmp    DWORD PTR ds:0x1f42c
   1dcec:	int3   
   1dced:	int3   
   1dcee:	int3   
   1dcef:	int3   
   1dcf0:	int3   
   1dcf1:	int3   
   1dcf2:	int3   
   1dcf3:	int3   
   1dcf4:	push   0x1dd60
   1dcf9:	push   DWORD PTR fs:0x0
   1dd00:	mov    eax,DWORD PTR [esp+0x10]
   1dd04:	mov    DWORD PTR [esp+0x10],ebp
   1dd08:	lea    ebp,[esp+0x10]
   1dd0c:	sub    esp,eax
   1dd0e:	push   ebx
   1dd0f:	push   esi
   1dd10:	push   edi
   1dd11:	mov    eax,ds:0x77b1c
   1dd16:	xor    DWORD PTR [ebp-0x4],eax
   1dd19:	xor    eax,ebp
   1dd1b:	push   eax
   1dd1c:	mov    DWORD PTR [ebp-0x18],esp
   1dd1f:	push   DWORD PTR [ebp-0x8]
   1dd22:	mov    eax,DWORD PTR [ebp-0x4]
   1dd25:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1dd2c:	mov    DWORD PTR [ebp-0x8],eax
   1dd2f:	lea    eax,[ebp-0x10]
   1dd32:	mov    fs:0x0,eax
   1dd38:	ret    
   1dd39:	mov    ecx,DWORD PTR [ebp-0x10]
   1dd3c:	mov    DWORD PTR fs:0x0,ecx
   1dd43:	pop    ecx
   1dd44:	pop    edi
   1dd45:	pop    edi
   1dd46:	pop    esi
   1dd47:	pop    ebx
   1dd48:	mov    esp,ebp
   1dd4a:	pop    ebp
   1dd4b:	push   ecx
   1dd4c:	ret    
   1dd4d:	int3   
   1dd4e:	int3   
   1dd4f:	int3   
   1dd50:	int3   
   1dd51:	int3   
   1dd52:	int3   
   1dd53:	int3   
   1dd54:	int3   
   1dd55:	int3   
   1dd56:	int3   
   1dd57:	int3   
   1dd58:	int3   
   1dd59:	int3   
   1dd5a:	int3   
   1dd5b:	int3   
   1dd5c:	int3   
   1dd5d:	int3   
   1dd5e:	int3   
   1dd5f:	int3   
   1dd60:	mov    edi,edi
   1dd62:	push   ebp
   1dd63:	mov    ebp,esp
   1dd65:	sub    esp,0x14
   1dd68:	push   ebx
   1dd69:	mov    ebx,DWORD PTR [ebp+0xc]
   1dd6c:	push   esi
   1dd6d:	mov    esi,DWORD PTR [ebx+0x8]
   1dd70:	xor    esi,DWORD PTR ds:0x77b1c
   1dd76:	push   edi
   1dd77:	mov    eax,DWORD PTR [esi]
   1dd79:	mov    BYTE PTR [ebp-0x1],0x0
   1dd7d:	mov    DWORD PTR [ebp-0x8],0x1
   1dd84:	lea    edi,[ebx+0x10]
   1dd87:	cmp    eax,0xfffffffe
   1dd8a:	je     0x1dd99
   1dd8c:	mov    ecx,DWORD PTR [esi+0x4]
   1dd8f:	add    ecx,edi
   1dd91:	xor    ecx,DWORD PTR [eax+edi*1]
   1dd94:	call   0x1dc5d
   1dd99:	mov    ecx,DWORD PTR [esi+0xc]
   1dd9c:	mov    eax,DWORD PTR [esi+0x8]
   1dd9f:	add    ecx,edi
   1dda1:	xor    ecx,DWORD PTR [eax+edi*1]
   1dda4:	call   0x1dc5d
   1dda9:	mov    eax,DWORD PTR [ebp+0x8]
   1ddac:	test   BYTE PTR [eax+0x4],0x66
   1ddb0:	jne    0x1de98
   1ddb6:	mov    ecx,DWORD PTR [ebp+0x10]
   1ddb9:	lea    edx,[ebp-0x14]
   1ddbc:	mov    DWORD PTR [ebx-0x4],edx
   1ddbf:	mov    ebx,DWORD PTR [ebx+0xc]
   1ddc2:	mov    DWORD PTR [ebp-0x14],eax
   1ddc5:	mov    DWORD PTR [ebp-0x10],ecx
   1ddc8:	cmp    ebx,0xfffffffe
   1ddcb:	je     0x1de2c
   1ddcd:	lea    ecx,[ecx+0x0]
   1ddd0:	lea    eax,[ebx+ebx*2]
   1ddd3:	mov    ecx,DWORD PTR [esi+eax*4+0x14]
   1ddd7:	lea    eax,[esi+eax*4+0x10]
   1dddb:	mov    DWORD PTR [ebp-0xc],eax
   1ddde:	mov    eax,DWORD PTR [eax]
   1dde0:	mov    DWORD PTR [ebp+0x8],eax
   1dde3:	test   ecx,ecx
   1dde5:	je     0x1ddfb
   1dde7:	mov    edx,edi
   1dde9:	call   0x1dfa1
   1ddee:	mov    BYTE PTR [ebp-0x1],0x1
   1ddf2:	test   eax,eax
   1ddf4:	jl     0x1de36
   1ddf6:	jg     0x1de3f
   1ddf8:	mov    eax,DWORD PTR [ebp+0x8]
   1ddfb:	mov    ebx,eax
   1ddfd:	cmp    eax,0xfffffffe
   1de00:	jne    0x1ddd0
   1de02:	cmp    BYTE PTR [ebp-0x1],0x0
   1de06:	je     0x1de2c
   1de08:	mov    eax,DWORD PTR [esi]
   1de0a:	cmp    eax,0xfffffffe
   1de0d:	je     0x1de1c
   1de0f:	mov    ecx,DWORD PTR [esi+0x4]
   1de12:	add    ecx,edi
   1de14:	xor    ecx,DWORD PTR [eax+edi*1]
   1de17:	call   0x1dc5d
   1de1c:	mov    ecx,DWORD PTR [esi+0xc]
   1de1f:	mov    edx,DWORD PTR [esi+0x8]
   1de22:	add    ecx,edi
   1de24:	xor    ecx,DWORD PTR [edx+edi*1]
   1de27:	call   0x1dc5d
   1de2c:	mov    eax,DWORD PTR [ebp-0x8]
   1de2f:	pop    edi
   1de30:	pop    esi
   1de31:	pop    ebx
   1de32:	mov    esp,ebp
   1de34:	pop    ebp
   1de35:	ret    
   1de36:	mov    DWORD PTR [ebp-0x8],0x0
   1de3d:	jmp    0x1de08
   1de3f:	mov    ecx,DWORD PTR [ebp+0xc]
   1de42:	call   0x1dfca
   1de47:	mov    eax,DWORD PTR [ebp+0xc]
   1de4a:	cmp    DWORD PTR [eax+0xc],ebx
   1de4d:	je     0x1de61
   1de4f:	push   0x77b1c
   1de54:	push   edi
   1de55:	mov    edx,ebx
   1de57:	mov    ecx,eax
   1de59:	call   0x1dfe4
   1de5e:	mov    eax,DWORD PTR [ebp+0xc]
   1de61:	mov    ecx,DWORD PTR [ebp+0x8]
   1de64:	mov    DWORD PTR [eax+0xc],ecx
   1de67:	mov    eax,DWORD PTR [esi]
   1de69:	cmp    eax,0xfffffffe
   1de6c:	je     0x1de7b
   1de6e:	mov    ecx,DWORD PTR [esi+0x4]
   1de71:	add    ecx,edi
   1de73:	xor    ecx,DWORD PTR [eax+edi*1]
   1de76:	call   0x1dc5d
   1de7b:	mov    ecx,DWORD PTR [esi+0xc]
   1de7e:	mov    edx,DWORD PTR [esi+0x8]
   1de81:	add    ecx,edi
   1de83:	xor    ecx,DWORD PTR [edx+edi*1]
   1de86:	call   0x1dc5d
   1de8b:	mov    eax,DWORD PTR [ebp-0xc]
   1de8e:	mov    ecx,DWORD PTR [eax+0x8]
   1de91:	mov    edx,edi
   1de93:	call   0x1dfb8
   1de98:	mov    edx,0xfffffffe
   1de9d:	cmp    DWORD PTR [ebx+0xc],edx
   1dea0:	je     0x1de2c
   1dea2:	push   0x77b1c
   1dea7:	push   edi
   1dea8:	mov    ecx,ebx
   1deaa:	call   0x1dfe4
   1deaf:	jmp    0x1de08
   1deb4:	int3   
   1deb5:	int3   
   1deb6:	int3   
   1deb7:	int3   
   1deb8:	int3   
   1deb9:	int3   
   1deba:	int3   
   1debb:	int3   
   1debc:	push   ebx
   1debd:	push   esi
   1debe:	push   edi
   1debf:	mov    edx,DWORD PTR [esp+0x10]
   1dec3:	mov    eax,DWORD PTR [esp+0x14]
   1dec7:	mov    ecx,DWORD PTR [esp+0x18]
   1decb:	push   ebp
   1decc:	push   edx
   1decd:	push   eax
   1dece:	push   ecx
   1decf:	push   ecx
   1ded0:	push   0x1df3f
   1ded5:	push   DWORD PTR fs:0x0
   1dedc:	mov    eax,ds:0x77b1c
   1dee1:	xor    eax,esp
   1dee3:	mov    DWORD PTR [esp+0x8],eax
   1dee7:	mov    DWORD PTR fs:0x0,esp
   1deee:	mov    eax,DWORD PTR [esp+0x30]
   1def2:	mov    ebx,DWORD PTR [eax+0x8]
   1def5:	mov    ecx,DWORD PTR [esp+0x2c]
   1def9:	xor    ebx,DWORD PTR [ecx]
   1defb:	mov    esi,DWORD PTR [eax+0xc]
   1defe:	cmp    esi,0xfffffffe
   1df01:	je     0x1df31
   1df03:	mov    edx,DWORD PTR [esp+0x34]
   1df07:	cmp    edx,0xfffffffe
   1df0a:	je     0x1df10
   1df0c:	cmp    esi,edx
   1df0e:	jbe    0x1df31
   1df10:	lea    esi,[esi+esi*2]
   1df13:	lea    ebx,[ebx+esi*4+0x10]
   1df17:	mov    ecx,DWORD PTR [ebx]
   1df19:	mov    DWORD PTR [eax+0xc],ecx
   1df1c:	cmp    DWORD PTR [ebx+0x4],0x0
   1df20:	jne    0x1deee
   1df22:	mov    ecx,0x1
   1df27:	mov    eax,DWORD PTR [ebx+0x8]
   1df2a:	call   0x1e05c
   1df2f:	jmp    0x1deee
   1df31:	pop    DWORD PTR fs:0x0
   1df38:	add    esp,0x18
   1df3b:	pop    edi
   1df3c:	pop    esi
   1df3d:	pop    ebx
   1df3e:	ret    
   1df3f:	mov    ecx,DWORD PTR [esp+0x4]
   1df43:	test   DWORD PTR [ecx+0x4],0x6
   1df4a:	mov    eax,0x1
   1df4f:	je     0x1df84
   1df51:	mov    eax,DWORD PTR [esp+0x8]
   1df55:	mov    ecx,DWORD PTR [eax+0x8]
   1df58:	xor    ecx,eax
   1df5a:	call   0x1dc5d
   1df5f:	push   ebp
   1df60:	mov    ebp,DWORD PTR [eax+0x18]
   1df63:	push   DWORD PTR [eax+0xc]
   1df66:	push   DWORD PTR [eax+0x10]
   1df69:	push   DWORD PTR [eax+0x14]
   1df6c:	call   0x1debc
   1df71:	add    esp,0xc
   1df74:	pop    ebp
   1df75:	mov    eax,DWORD PTR [esp+0x8]
   1df79:	mov    edx,DWORD PTR [esp+0x10]
   1df7d:	mov    DWORD PTR [edx],eax
   1df7f:	mov    eax,0x3
   1df84:	ret    
   1df85:	push   ebp
   1df86:	mov    ecx,DWORD PTR [esp+0x8]
   1df8a:	mov    ebp,DWORD PTR [ecx]
   1df8c:	push   DWORD PTR [ecx+0x1c]
   1df8f:	push   DWORD PTR [ecx+0x18]
   1df92:	push   DWORD PTR [ecx+0x28]
   1df95:	call   0x1debc
   1df9a:	add    esp,0xc
   1df9d:	pop    ebp
   1df9e:	ret    0x4
   1dfa1:	push   ebp
   1dfa2:	push   esi
   1dfa3:	push   edi
   1dfa4:	push   ebx
   1dfa5:	mov    ebp,edx
   1dfa7:	xor    eax,eax
   1dfa9:	xor    ebx,ebx
   1dfab:	xor    edx,edx
   1dfad:	xor    esi,esi
   1dfaf:	xor    edi,edi
   1dfb1:	call   ecx
   1dfb3:	pop    ebx
   1dfb4:	pop    edi
   1dfb5:	pop    esi
   1dfb6:	pop    ebp
   1dfb7:	ret    
   1dfb8:	mov    ebp,edx
   1dfba:	mov    esi,ecx
   1dfbc:	mov    eax,ecx
   1dfbe:	xor    eax,eax
   1dfc0:	xor    ebx,ebx
   1dfc2:	xor    ecx,ecx
   1dfc4:	xor    edx,edx
   1dfc6:	xor    edi,edi
   1dfc8:	jmp    esi
   1dfca:	push   ebp
   1dfcb:	mov    ebp,esp
   1dfcd:	push   ebx
   1dfce:	push   esi
   1dfcf:	push   edi
   1dfd0:	push   0x0
   1dfd2:	push   0x0
   1dfd4:	push   0x1dfdf
   1dfd9:	push   ecx
   1dfda:	call   0x1e064
   1dfdf:	pop    edi
   1dfe0:	pop    esi
   1dfe1:	pop    ebx
   1dfe2:	pop    ebp
   1dfe3:	ret    
   1dfe4:	push   ebp
   1dfe5:	mov    ebp,DWORD PTR [esp+0x8]
   1dfe9:	push   edx
   1dfea:	push   ecx
   1dfeb:	push   DWORD PTR [esp+0x14]
   1dfef:	call   0x1debc
   1dff4:	add    esp,0xc
   1dff7:	pop    ebp
   1dff8:	ret    0x8
   1dffb:	int3   
   1dffc:	int3   
   1dffd:	int3   
   1dffe:	int3   
   1dfff:	int3   
   1e000:	push   0x1dd60
   1e005:	push   DWORD PTR fs:0x0
   1e00c:	mov    eax,DWORD PTR [esp+0x10]
   1e010:	mov    DWORD PTR [esp+0x10],ebp
   1e014:	lea    ebp,[esp+0x10]
   1e018:	sub    esp,eax
   1e01a:	push   ebx
   1e01b:	push   esi
   1e01c:	push   edi
   1e01d:	mov    eax,ds:0x77b1c
   1e022:	xor    DWORD PTR [ebp-0x4],eax
   1e025:	xor    eax,ebp
   1e027:	mov    DWORD PTR [ebp-0x1c],eax
   1e02a:	push   eax
   1e02b:	mov    DWORD PTR [ebp-0x18],esp
   1e02e:	push   DWORD PTR [ebp-0x8]
   1e031:	mov    eax,DWORD PTR [ebp-0x4]
   1e034:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1e03b:	mov    DWORD PTR [ebp-0x8],eax
   1e03e:	lea    eax,[ebp-0x10]
   1e041:	mov    fs:0x0,eax
   1e047:	ret    
   1e048:	mov    ecx,DWORD PTR [ebp-0x1c]
   1e04b:	xor    ecx,ebp
   1e04d:	call   0x1dc5d
   1e052:	jmp    0x1dd39
   1e057:	int3   
   1e058:	int3   
   1e059:	int3   
   1e05a:	int3   
   1e05b:	int3   
   1e05c:	call   eax
   1e05e:	ret    
   1e05f:	int3   
   1e060:	int3   
   1e061:	int3   
   1e062:	int3   
   1e063:	int3   
   1e064:	jmp    DWORD PTR ds:0x1f454
   1e06a:	pop    esp
   1e06b:	add    BYTE PTR [eax],al
   1e06d:	add    BYTE PTR [eax],al
   1e06f:	add    BYTE PTR [ebx+0x0],ch
   1e072:	bound  eax,QWORD PTR [eax]
   1e074:	add    BYTE PTR fs:[ecx+0x0],dh
   1e078:	add    BYTE PTR [eax],al
   1e07a:	add    BYTE PTR fs:[ebx],dh
   1e07d:	add    BYTE PTR [eax+eax*1+0x73],ah
   1e081:	add    BYTE PTR [eax],al
   1e083:	add    BYTE PTR [esi+0x0],ch
   1e086:	je     0x1e088
   1e088:	outs   dx,BYTE PTR ds:[esi]
   1e089:	add    BYTE PTR [eax],al
   1e08b:	add    BYTE PTR [ebx+0x0],dh
   1e08e:	jns    0x1e090
   1e090:	jae    0x1e092
   1e092:	popa   
   1e093:	add    BYTE PTR [eax],al
   1e095:	add    BYTE PTR [edi+0x0],dh
   1e098:	imul   eax,DWORD PTR [eax],0x65006e
   1e09e:	add    BYTE PTR [eax],al
   1e0a0:	jo     0x1e0a2
   1e0a2:	arpl   WORD PTR [eax],ax
   1e0a4:	imul   eax,DWORD PTR [eax],0x6d0000
   1e0aa:	jae    0x1e0ac
   1e0ac:	jb     0x1e0ae
   1e0ae:	add    BYTE PTR [eax],al
   1e0b0:	je     0x1e0b2
   1e0b2:	ins    DWORD PTR es:[edi],dx
   1e0b3:	add    BYTE PTR [eax+0x0],dh
   1e0b6:	add    BYTE PTR [eax],al
   1e0b8:	jne    0x1e0ba
   1e0ba:	jae    0x1e0bc
   1e0bc:	bound  eax,QWORD PTR [eax]
   1e0be:	add    BYTE PTR [eax],al
   1e0c0:	outs   dx,DWORD PTR ds:[esi]
   1e0c1:	add    BYTE PTR [eax+eax*1+0x65],ch
   1e0c5:	add    BYTE PTR [eax],al
   1e0c7:	add    BYTE PTR [ecx+0x0],ah
   1e0ca:	imul   eax,DWORD PTR [eax],0x70
   1e0d0:	push   0x0
   1e0d2:	popa   
   1e0d3:	add    BYTE PTR [ecx+0x0],bh
   1e0d6:	add    BYTE PTR [eax],al
   1e0d8:	jbe    0x1e0da
   1e0da:	add    BYTE PTR gs:[edx+0x0],dh
   1e0de:	add    BYTE PTR [eax],al
   1e0e0:	jae    0x1e0e2
   1e0e2:	popa   
   1e0e3:	add    BYTE PTR [ecx+0x0],ch
   1e0e6:	add    BYTE PTR [eax],al
   1e0e8:	ins    BYTE PTR es:[edi],dx
   1e0e9:	add    BYTE PTR [ecx+0x0],ah
   1e0ec:	arpl   WORD PTR [eax],ax
   1e0ee:	add    BYTE PTR [eax],al
   1e0f0:	push   0x0
   1e0f2:	jo     0x1e0f4
   1e0f4:	add    BYTE PTR [bx+si],al
   1e0f7:	add    BYTE PTR [eax+0x0],ch
   1e0fa:	imul   eax,DWORD PTR [eax],0x64
   1e100:	jo     0x1e102
   1e102:	outs   dx,BYTE PTR ds:[esi]
   1e103:	add    BYTE PTR [edi+0x0],ah
   1e106:	add    BYTE PTR [eax],al
   1e108:	add    ah,cl
   1e10a:	dec    ebx
   1e10b:	add    BYTE PTR [ebp+0x0],ah
   1e10e:	push   ebx
   1e10f:	add    BYTE PTR [ebp+0x0],ah
   1e112:	jb     0x1e114
   1e114:	jbe    0x1e116
   1e116:	imul   eax,DWORD PTR [eax],0x650063
   1e11c:	inc    esp
   1e11d:	add    BYTE PTR [ebp+0x0],ah
   1e120:	jae    0x1e122
   1e122:	arpl   WORD PTR [eax],ax
   1e124:	jb     0x1e126
   1e126:	imul   eax,DWORD PTR [eax],0x740070
   1e12c:	outs   dx,DWORD PTR ds:[esi]
   1e12d:	add    BYTE PTR [edx+0x0],dh
   1e130:	push   esp
   1e131:	add    BYTE PTR [ecx+0x0],ah
   1e134:	bound  eax,QWORD PTR [eax]
   1e136:	ins    BYTE PTR es:[edi],dx
   1e137:	add    BYTE PTR [ebp+0x0],ah
   1e13a:	add    BYTE PTR [eax],al
   1e13c:	pop    edx
   1e13d:	add    BYTE PTR [edi+0x0],dh
   1e140:	dec    edi
   1e141:	add    BYTE PTR [eax+0x0],dh
   1e144:	add    BYTE PTR gs:[esi+0x0],ch
   1e148:	push   eax
   1e149:	add    BYTE PTR [edx+0x0],dh
   1e14c:	outs   dx,DWORD PTR ds:[esi]
   1e14d:	add    BYTE PTR [ebx+0x0],ah
   1e150:	add    BYTE PTR gs:[ebx+0x0],dh
   1e154:	jae    0x1e156
   1e156:	add    BYTE PTR [eax],al
   1e158:	pop    edx
   1e159:	add    BYTE PTR [edi+0x0],dh
   1e15c:	inc    ecx
   1e15d:	add    BYTE PTR [eax+eax*1+0x6c],ch
   1e161:	add    BYTE PTR [edi+0x0],ch
   1e164:	arpl   WORD PTR [eax],ax
   1e166:	popa   
   1e167:	add    BYTE PTR [eax+eax*1+0x65],dh
   1e16b:	add    BYTE PTR [esi+0x0],dl
   1e16e:	imul   eax,DWORD PTR [eax],0x740072
   1e174:	jne    0x1e176
   1e176:	popa   
   1e177:	add    BYTE PTR [eax+eax*1+0x4d],ch
   1e17b:	add    BYTE PTR [ebp+0x0],ah
   1e17e:	ins    DWORD PTR es:[edi],dx
   1e17f:	add    BYTE PTR [edi+0x0],ch
   1e182:	jb     0x1e184
   1e184:	jns    0x1e186
   1e186:	add    BYTE PTR [eax],al
   1e188:	push   eax
   1e189:	add    BYTE PTR [ebx+0x0],dh
   1e18c:	push   ebx
   1e18d:	add    BYTE PTR [ebp+0x0],ah
   1e190:	je     0x1e192
   1e192:	dec    esp
   1e193:	add    BYTE PTR [edi+0x0],ch
   1e196:	popa   
   1e197:	add    BYTE PTR [eax+eax*1+0x49],ah
   1e19b:	add    BYTE PTR [ebp+0x0],ch
   1e19e:	popa   
   1e19f:	add    BYTE PTR [edi+0x0],ah
   1e1a2:	add    BYTE PTR gs:[esi+0x0],cl
   1e1a6:	outs   dx,DWORD PTR ds:[esi]
   1e1a7:	add    BYTE PTR [eax+eax*1+0x69],dh
   1e1ab:	add    BYTE PTR [esi+0x0],ah
   1e1ae:	jns    0x1e1b0
   1e1b0:	push   edx
   1e1b1:	add    BYTE PTR [edi+0x0],ch
   1e1b4:	jne    0x1e1b6
   1e1b6:	je     0x1e1b8
   1e1b8:	imul   eax,DWORD PTR [eax],0x65006e
   1e1be:	add    BYTE PTR [eax],al
   1e1c0:	pop    edx
   1e1c1:	add    BYTE PTR [edi+0x0],dh
   1e1c4:	inc    esp
   1e1c5:	add    BYTE PTR [ebp+0x0],dh
   1e1c8:	jo     0x1e1ca
   1e1ca:	ins    BYTE PTR es:[edi],dx
   1e1cb:	add    BYTE PTR [ecx+0x0],ch
   1e1ce:	arpl   WORD PTR [eax],ax
   1e1d0:	popa   
   1e1d1:	add    BYTE PTR [eax+eax*1+0x65],dh
   1e1d5:	add    BYTE PTR [eax+eax*1+0x6f],dl
   1e1d9:	add    BYTE PTR [ebx+0x0],ch
   1e1dc:	add    BYTE PTR gs:[esi+0x0],ch
   1e1e0:	add    BYTE PTR [eax],al
   1e1e2:	push   eax
   1e1e3:	add    BYTE PTR [ebx+0x0],dh
   1e1e6:	push   ebx
   1e1e7:	add    BYTE PTR [ebp+0x0],ah
   1e1ea:	je     0x1e1ec
   1e1ec:	inc    ebx
   1e1ed:	add    BYTE PTR [edx+0x0],dh
   1e1f0:	add    BYTE PTR gs:[ecx+0x0],ah
   1e1f4:	je     0x1e1f6
   1e1f6:	add    BYTE PTR gs:[eax+0x0],dl
   1e1fa:	jb     0x1e1fc
   1e1fc:	outs   dx,DWORD PTR ds:[esi]
   1e1fd:	add    BYTE PTR [ebx+0x0],ah
   1e200:	add    BYTE PTR gs:[ebx+0x0],dh
   1e204:	jae    0x1e206
   1e206:	dec    esi
   1e207:	add    BYTE PTR [edi+0x0],ch
   1e20a:	je     0x1e20c
   1e20c:	imul   eax,DWORD PTR [eax],0x790066
   1e212:	push   edx
   1e213:	add    BYTE PTR [edi+0x0],ch
   1e216:	jne    0x1e218
   1e218:	je     0x1e21a
   1e21a:	imul   eax,DWORD PTR [eax],0x65006e
   1e220:	add    BYTE PTR [eax],al
   1e222:	pop    edx
   1e223:	add    BYTE PTR [edi+0x0],dh
   1e226:	dec    edi
   1e227:	add    BYTE PTR [eax+0x0],dh
   1e22a:	add    BYTE PTR gs:[esi+0x0],ch
   1e22e:	inc    esi
   1e22f:	add    BYTE PTR [ecx+0x0],ch
   1e232:	ins    BYTE PTR es:[edi],dx
   1e233:	add    BYTE PTR [ebp+0x0],ah
   1e236:	add    BYTE PTR [eax],al
   1e238:	pop    edx
   1e239:	add    BYTE PTR [edi+0x0],dh
   1e23c:	push   ecx
   1e23d:	add    BYTE PTR [ebp+0x0],dh
   1e240:	add    BYTE PTR gs:[edx+0x0],dh
   1e244:	jns    0x1e246
   1e246:	dec    ecx
   1e247:	add    BYTE PTR [esi+0x0],ch
   1e24a:	data16 add BYTE PTR [edi+0x0],ch
   1e24e:	jb     0x1e250
   1e250:	ins    DWORD PTR es:[edi],dx
   1e251:	add    BYTE PTR [ecx+0x0],ah
   1e254:	je     0x1e256
   1e256:	imul   eax,DWORD PTR [eax],0x6e006f
   1e25c:	push   eax
   1e25d:	add    BYTE PTR [edx+0x0],dh
   1e260:	outs   dx,DWORD PTR ds:[esi]
   1e261:	add    BYTE PTR [ebx+0x0],ah
   1e264:	add    BYTE PTR gs:[ebx+0x0],dh
   1e268:	jae    0x1e26a
   1e26a:	add    BYTE PTR [eax],al
   1e26c:	pop    edx
   1e26d:	add    BYTE PTR [edi+0x0],dh
   1e270:	push   ecx
   1e271:	add    BYTE PTR [ebp+0x0],dh
   1e274:	add    BYTE PTR gs:[edx+0x0],dh
   1e278:	jns    0x1e27a
   1e27a:	push   ebx
   1e27b:	add    BYTE PTR [ecx+0x0],bh
   1e27e:	jae    0x1e280
   1e280:	je     0x1e282
   1e282:	add    BYTE PTR gs:[ebp+0x0],ch
   1e286:	dec    ecx
   1e287:	add    BYTE PTR [esi+0x0],ch
   1e28a:	data16 add BYTE PTR [edi+0x0],ch
   1e28e:	jb     0x1e290
   1e290:	ins    DWORD PTR es:[edi],dx
   1e291:	add    BYTE PTR [ecx+0x0],ah
   1e294:	je     0x1e296
   1e296:	imul   eax,DWORD PTR [eax],0x6e006f
   1e29c:	add    BYTE PTR [eax],al
   1e29e:	pop    edx
   1e29f:	add    BYTE PTR [edi+0x0],dh
   1e2a2:	dec    edi
   1e2a3:	add    BYTE PTR [eax+0x0],dh
   1e2a6:	add    BYTE PTR gs:[esi+0x0],ch
   1e2aa:	dec    ebx
   1e2ab:	add    BYTE PTR [ebp+0x0],ah
   1e2ae:	jns    0x1e2b0
   1e2b0:	add    BYTE PTR [eax],al
   1e2b2:	pop    edx
   1e2b3:	add    BYTE PTR [edi+0x0],dh
   1e2b6:	inc    esp
   1e2b7:	add    BYTE PTR [ebp+0x0],ah
   1e2ba:	ins    BYTE PTR es:[edi],dx
   1e2bb:	add    BYTE PTR [ebp+0x0],ah
   1e2be:	je     0x1e2c0
   1e2c0:	add    BYTE PTR gs:[ebx+0x0],cl
   1e2c4:	add    BYTE PTR gs:[ecx+0x0],bh
   1e2c8:	add    BYTE PTR [eax],al
   1e2ca:	pop    edx
   1e2cb:	add    BYTE PTR [edi+0x0],dh
   1e2ce:	push   ebx
   1e2cf:	add    BYTE PTR [ebp+0x0],ah
   1e2d2:	je     0x1e2d4
   1e2d4:	push   esi
   1e2d5:	add    BYTE PTR [ecx+0x0],ah
   1e2d8:	ins    BYTE PTR es:[edi],dx
   1e2d9:	add    BYTE PTR [ebp+0x0],dh
   1e2dc:	add    BYTE PTR gs:[ebx+0x0],cl
   1e2e0:	add    BYTE PTR gs:[ecx+0x0],bh
   1e2e4:	add    BYTE PTR [eax],al
   1e2e6:	pop    edx
   1e2e7:	add    BYTE PTR [edi+0x0],dh
   1e2ea:	push   ecx
   1e2eb:	add    BYTE PTR [ebp+0x0],dh
   1e2ee:	add    BYTE PTR gs:[edx+0x0],dh
   1e2f2:	jns    0x1e2f4
   1e2f4:	push   esi
   1e2f5:	add    BYTE PTR [edi+0x0],ch
   1e2f8:	ins    BYTE PTR es:[edi],dx
   1e2f9:	add    BYTE PTR [ebp+0x0],dh
   1e2fc:	ins    DWORD PTR es:[edi],dx
   1e2fd:	add    BYTE PTR [ebp+0x0],ah
   1e300:	dec    ecx
   1e301:	add    BYTE PTR [esi+0x0],ch
   1e304:	data16 add BYTE PTR [edi+0x0],ch
   1e308:	jb     0x1e30a
   1e30a:	ins    DWORD PTR es:[edi],dx
   1e30b:	add    BYTE PTR [ecx+0x0],ah
   1e30e:	je     0x1e310
   1e310:	imul   eax,DWORD PTR [eax],0x6e006f
   1e316:	inc    esi
   1e317:	add    BYTE PTR [ecx+0x0],ch
   1e31a:	ins    BYTE PTR es:[edi],dx
   1e31b:	add    BYTE PTR [ebp+0x0],ah
   1e31e:	add    BYTE PTR [eax],al
   1e320:	pop    edx
   1e321:	add    BYTE PTR [edi+0x0],dh
   1e324:	inc    ebx
   1e325:	add    BYTE PTR [edx+0x0],dh
   1e328:	add    BYTE PTR gs:[ecx+0x0],ah
   1e32c:	je     0x1e32e
   1e32e:	add    BYTE PTR gs:[esi+0x0],al
   1e332:	imul   eax,DWORD PTR [eax],0x65006c
   1e338:	add    BYTE PTR [eax],al
   1e33a:	push   edx
   1e33b:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1e33f:	add    BYTE PTR [ecx+0x0],cl
   1e342:	ins    DWORD PTR es:[edi],dx
   1e343:	add    BYTE PTR [ecx+0x0],ah
   1e346:	add    BYTE PTR [di+0x0],ah
   1e34a:	dec    esi
   1e34b:	add    BYTE PTR [eax+eax*1+0x48],dh
   1e34f:	add    BYTE PTR [ebp+0x0],ah
   1e352:	popa   
   1e353:	add    BYTE PTR [eax+eax*1+0x65],ah
   1e357:	add    BYTE PTR [edx+0x0],dh
   1e35a:	add    BYTE PTR [eax],al
   1e35c:	push   edx
   1e35d:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1e361:	add    BYTE PTR [ecx+0x0],cl
   1e364:	ins    DWORD PTR es:[edi],dx
   1e365:	add    BYTE PTR [ecx+0x0],ah
   1e368:	add    BYTE PTR [di+0x0],ah
   1e36c:	inc    esp
   1e36d:	add    BYTE PTR [ecx+0x0],ch
   1e370:	jb     0x1e372
   1e372:	add    BYTE PTR gs:[ebx+0x0],ah
   1e376:	je     0x1e378
   1e378:	outs   dx,DWORD PTR ds:[esi]
   1e379:	add    BYTE PTR [edx+0x0],dh
   1e37c:	jns    0x1e37e
   1e37e:	inc    ebp
   1e37f:	add    BYTE PTR [esi+0x0],ch
   1e382:	je     0x1e384
   1e384:	jb     0x1e386
   1e386:	jns    0x1e388
   1e388:	push   esp
   1e389:	add    BYTE PTR [edi+0x0],ch
   1e38c:	inc    esp
   1e38d:	add    BYTE PTR [ecx+0x0],ah
   1e390:	je     0x1e392
   1e392:	popa   
   1e393:	add    BYTE PTR [eax],al
   1e395:	add    BYTE PTR [edx+0x0],bl
   1e398:	ja     0x1e39a
   1e39a:	dec    edi
   1e39b:	add    BYTE PTR [eax+0x0],dh
   1e39e:	add    BYTE PTR gs:[esi+0x0],ch
   1e3a2:	push   eax
   1e3a3:	add    BYTE PTR [edx+0x0],dh
   1e3a6:	outs   dx,DWORD PTR ds:[esi]
   1e3a7:	add    BYTE PTR [ebx+0x0],ah
   1e3aa:	add    BYTE PTR gs:[ebx+0x0],dh
   1e3ae:	jae    0x1e3b0
   1e3b0:	push   esp
   1e3b1:	add    BYTE PTR [edi+0x0],ch
   1e3b4:	imul   eax,DWORD PTR [eax],0x65
   1e3b7:	add    BYTE PTR [esi+0x0],ch
   1e3ba:	add    BYTE PTR [eax],al
   1e3bc:	pop    edx
   1e3bd:	add    BYTE PTR [edi+0x0],dh
   1e3c0:	push   ebx
   1e3c1:	add    BYTE PTR [ebp+0x0],ah
   1e3c4:	je     0x1e3c6
   1e3c6:	dec    ecx
   1e3c7:	add    BYTE PTR [esi+0x0],ch
   1e3ca:	data16 add BYTE PTR [edi+0x0],ch
   1e3ce:	jb     0x1e3d0
   1e3d0:	ins    DWORD PTR es:[edi],dx
   1e3d1:	add    BYTE PTR [ecx+0x0],ah
   1e3d4:	je     0x1e3d6
   1e3d6:	imul   eax,DWORD PTR [eax],0x6e006f
   1e3dc:	push   eax
   1e3dd:	add    BYTE PTR [edx+0x0],dh
   1e3e0:	outs   dx,DWORD PTR ds:[esi]
   1e3e1:	add    BYTE PTR [ebx+0x0],ah
   1e3e4:	add    BYTE PTR gs:[ebx+0x0],dh
   1e3e8:	jae    0x1e3ea
   1e3ea:	add    BYTE PTR [eax],al
   1e3ec:	pop    edx
   1e3ed:	add    BYTE PTR [edi+0x0],dh
   1e3f0:	push   ecx
   1e3f1:	add    BYTE PTR [ebp+0x0],dh
   1e3f4:	add    BYTE PTR gs:[edx+0x0],dh
   1e3f8:	jns    0x1e3fa
   1e3fa:	dec    ecx
   1e3fb:	add    BYTE PTR [esi+0x0],ch
   1e3fe:	data16 add BYTE PTR [edi+0x0],ch
   1e402:	jb     0x1e404
   1e404:	ins    DWORD PTR es:[edi],dx
   1e405:	add    BYTE PTR [ecx+0x0],ah
   1e408:	je     0x1e40a
   1e40a:	imul   eax,DWORD PTR [eax],0x6e006f
   1e410:	push   esp
   1e411:	add    BYTE PTR [eax+0x0],ch
   1e414:	jb     0x1e416
   1e416:	add    BYTE PTR gs:[ecx+0x0],ah
   1e41a:	add    BYTE PTR fs:[eax],al
   1e41d:	add    BYTE PTR [edx+0x0],bl
   1e420:	ja     0x1e422
   1e422:	inc    ebx
   1e423:	add    BYTE PTR [eax+eax*1+0x6f],ch
   1e427:	add    BYTE PTR [ebx+0x0],dh
   1e42a:	add    BYTE PTR gs:[eax],al
   1e42d:	add    BYTE PTR [edx+0x0],dl
   1e430:	je     0x1e432
   1e432:	ins    BYTE PTR es:[edi],dx
   1e433:	add    BYTE PTR [ecx+0x0],cl
   1e436:	outs   dx,BYTE PTR ds:[esi]
   1e437:	add    BYTE PTR [ecx+0x0],ch
   1e43a:	je     0x1e43c
   1e43c:	push   ebp
   1e43d:	add    BYTE PTR [esi+0x0],ch
   1e440:	imul   eax,DWORD PTR [eax],0x6f0063
   1e446:	add    BYTE PTR fs:[ebp+0x0],ah
   1e44a:	push   ebx
   1e44b:	add    BYTE PTR [eax+eax*1+0x72],dh
   1e44f:	add    BYTE PTR [ecx+0x0],ch
   1e452:	outs   dx,BYTE PTR ds:[esi]
   1e453:	add    BYTE PTR [edi+0x0],ah
   1e456:	add    BYTE PTR [eax],al
   1e458:	inc    ebp
   1e459:	add    BYTE PTR [eax+0x0],bh
   1e45c:	push   edx
   1e45d:	add    BYTE PTR [ecx+0x0],ah
   1e460:	imul   eax,DWORD PTR [eax],0x650073
   1e466:	push   ebx
   1e467:	add    BYTE PTR [eax+eax*1+0x61],dh
   1e46b:	add    BYTE PTR [eax+eax*1+0x75],dh
   1e46f:	add    BYTE PTR [ebx+0x0],dh
   1e472:	add    BYTE PTR [eax],al
   1e474:	inc    ebp
   1e475:	add    BYTE PTR [eax+0x0],bh
   1e478:	inc    ecx
   1e479:	add    BYTE PTR [eax+eax*1+0x6c],ch
   1e47d:	add    BYTE PTR [edi+0x0],ch
   1e480:	arpl   WORD PTR [eax],ax
   1e482:	popa   
   1e483:	add    BYTE PTR [eax+eax*1+0x65],dh
   1e487:	add    BYTE PTR [eax+0x0],dl
   1e48a:	outs   dx,DWORD PTR ds:[esi]
   1e48b:	add    BYTE PTR [edi+0x0],ch
   1e48e:	ins    BYTE PTR es:[edi],dx
   1e48f:	add    BYTE PTR [edi+0x0],dl
   1e492:	imul   eax,DWORD PTR [eax],0x680074
   1e498:	push   esp
   1e499:	add    BYTE PTR [ecx+0x0],ah
   1e49c:	add    BYTE PTR [bx+si+0x0],dl
   1e4a0:	jb     0x1e4a2
   1e4a2:	imul   eax,DWORD PTR [eax],0x72006f
   1e4a8:	imul   eax,DWORD PTR [eax],0x790074
   1e4ae:	add    BYTE PTR [eax],al
   1e4b0:	inc    ebp
   1e4b1:	add    BYTE PTR [eax+0x0],bh
   1e4b4:	inc    esi
   1e4b5:	add    BYTE PTR [edx+0x0],dh
   1e4b8:	add    BYTE PTR gs:[ebp+0x0],ah
   1e4bc:	push   eax
   1e4bd:	add    BYTE PTR [edi+0x0],ch
   1e4c0:	outs   dx,DWORD PTR ds:[esi]
   1e4c1:	add    BYTE PTR [eax+eax*1+0x57],ch
   1e4c5:	add    BYTE PTR [ecx+0x0],ch
   1e4c8:	je     0x1e4ca
   1e4ca:	push   0x61005400
   1e4cf:	add    BYTE PTR [edi+0x0],ah
   1e4d2:	add    BYTE PTR [eax],al
   1e4d4:	push   edx
   1e4d5:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1e4d9:	add    BYTE PTR [ebx+0x0],al
   1e4dc:	outs   dx,DWORD PTR ds:[esi]
   1e4dd:	add    BYTE PTR [eax+0x0],dh
   1e4e0:	jns    0x1e4e2
   1e4e2:	push   ebp
   1e4e3:	add    BYTE PTR [esi+0x0],ch
   1e4e6:	imul   eax,DWORD PTR [eax],0x6f0063
   1e4ec:	add    BYTE PTR fs:[ebp+0x0],ah
   1e4f0:	push   ebx
   1e4f1:	add    BYTE PTR [eax+eax*1+0x72],dh
   1e4f5:	add    BYTE PTR [ecx+0x0],ch
   1e4f8:	outs   dx,BYTE PTR ds:[esi]
   1e4f9:	add    BYTE PTR [edi+0x0],ah
   1e4fc:	add    BYTE PTR [eax],al
   1e4fe:	inc    ebp
   1e4ff:	add    BYTE PTR [eax+0x0],bh
   1e502:	inc    ecx
   1e503:	add    BYTE PTR [eax+eax*1+0x6c],ch
   1e507:	add    BYTE PTR [edi+0x0],ch
   1e50a:	arpl   WORD PTR [eax],ax
   1e50c:	popa   
   1e50d:	add    BYTE PTR [eax+eax*1+0x65],dh
   1e511:	add    BYTE PTR [eax+0x0],dl
   1e514:	outs   dx,DWORD PTR ds:[esi]
   1e515:	add    BYTE PTR [edi+0x0],ch
   1e518:	ins    BYTE PTR es:[edi],dx
   1e519:	add    BYTE PTR [edi+0x0],dl
   1e51c:	imul   eax,DWORD PTR [eax],0x680074
   1e522:	push   esp
   1e523:	add    BYTE PTR [ecx+0x0],ah
   1e526:	add    BYTE PTR [bx+si],al
   1e529:	add    BYTE PTR [edx+0x0],dl
   1e52c:	je     0x1e52e
   1e52e:	ins    BYTE PTR es:[edi],dx
   1e52f:	add    BYTE PTR [ecx+0x0],al
   1e532:	jae    0x1e534
   1e534:	jae    0x1e536
   1e536:	add    BYTE PTR gs:[edx+0x0],dh
   1e53a:	je     0x1e53c
   1e53c:	add    BYTE PTR [eax],al
   1e53e:	push   edx
   1e53f:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1e543:	add    BYTE PTR [ebx+0x0],al
   1e546:	outs   dx,DWORD PTR ds:[esi]
   1e547:	add    BYTE PTR [ebp+0x0],ch
   1e54a:	jo     0x1e54c
   1e54c:	popa   
   1e54d:	add    BYTE PTR [edx+0x0],dh
   1e550:	add    BYTE PTR gs:[ebp+0x0],dl
   1e554:	outs   dx,BYTE PTR ds:[esi]
   1e555:	add    BYTE PTR [ecx+0x0],ch
   1e558:	arpl   WORD PTR [eax],ax
   1e55a:	outs   dx,DWORD PTR ds:[esi]
   1e55b:	add    BYTE PTR [eax+eax*1+0x65],ah
   1e55f:	add    BYTE PTR [ebx+0x0],dl
   1e562:	je     0x1e564
   1e564:	jb     0x1e566
   1e566:	imul   eax,DWORD PTR [eax],0x67006e
   1e56c:	add    BYTE PTR [eax],al
   1e56e:	pop    edx
   1e56f:	add    BYTE PTR [edi+0x0],dh
   1e572:	inc    ebp
   1e573:	add    BYTE PTR [esi+0x0],ch
   1e576:	jne    0x1e578
   1e578:	ins    DWORD PTR es:[edi],dx
   1e579:	add    BYTE PTR [ebp+0x0],ah
   1e57c:	jb     0x1e57e
   1e57e:	popa   
   1e57f:	add    BYTE PTR [eax+eax*1+0x65],dh
   1e583:	add    BYTE PTR [ebx+0x0],cl
   1e586:	add    BYTE PTR gs:[ecx+0x0],bh
   1e58a:	add    BYTE PTR [eax],al
   1e58c:	pop    edx
   1e58d:	add    BYTE PTR [edi+0x0],dh
   1e590:	dec    esp
   1e591:	add    BYTE PTR [edi+0x0],ch
   1e594:	popa   
   1e595:	add    BYTE PTR [eax+eax*1+0x44],ah
   1e599:	add    BYTE PTR [edx+0x0],dh
   1e59c:	imul   eax,DWORD PTR [eax],0x650076
   1e5a2:	jb     0x1e5a4
   1e5a4:	add    BYTE PTR [eax],al
   1e5a6:	pop    edx
   1e5a7:	add    BYTE PTR [edi+0x0],dh
   1e5aa:	inc    ebx
   1e5ab:	add    BYTE PTR [edx+0x0],dh
   1e5ae:	add    BYTE PTR gs:[ecx+0x0],ah
   1e5b2:	je     0x1e5b4
   1e5b4:	add    BYTE PTR gs:[ebx+0x0],cl
   1e5b8:	add    BYTE PTR gs:[ecx+0x0],bh
   1e5bc:	add    BYTE PTR [eax],al
   1e5be:	dec    ecx
   1e5bf:	add    BYTE PTR [edi+0x0],ch
   1e5c2:	inc    esp
   1e5c3:	add    BYTE PTR [ebp+0x0],ah
   1e5c6:	ins    BYTE PTR es:[edi],dx
   1e5c7:	add    BYTE PTR [ebp+0x0],ah
   1e5ca:	je     0x1e5cc
   1e5cc:	add    BYTE PTR gs:[eax+eax*1+0x65],al
   1e5d1:	add    BYTE PTR [esi+0x0],dh
   1e5d4:	imul   eax,DWORD PTR [eax],0x650063
   1e5da:	add    BYTE PTR [eax],al
   1e5dc:	dec    ebx
   1e5dd:	add    BYTE PTR [ebp+0x0],ah
   1e5e0:	inc    esp
   1e5e1:	add    BYTE PTR [ebp+0x0],ah
   1e5e4:	je     0x1e5e6
   1e5e6:	popa   
   1e5e7:	add    BYTE PTR [ebx+0x0],ah
   1e5ea:	push   0x72005000
   1e5ef:	add    BYTE PTR [edi+0x0],ch
   1e5f2:	arpl   WORD PTR [eax],ax
   1e5f4:	add    BYTE PTR gs:[ebx+0x0],dh
   1e5f8:	jae    0x1e5fa
   1e5fa:	add    BYTE PTR [eax],al
   1e5fc:	dec    ebx
   1e5fd:	add    BYTE PTR [ebp+0x0],ah
   1e600:	inc    ecx
   1e601:	add    BYTE PTR [eax+eax*1+0x74],dh
   1e605:	add    BYTE PTR [ecx+0x0],ah
   1e608:	arpl   WORD PTR [eax],ax
   1e60a:	push   0x72005000
   1e60f:	add    BYTE PTR [edi+0x0],ch
   1e612:	arpl   WORD PTR [eax],ax
   1e614:	add    BYTE PTR gs:[ebx+0x0],dh
   1e618:	jae    0x1e61a
   1e61a:	add    BYTE PTR [eax],al
   1e61c:	pop    edx
   1e61d:	add    BYTE PTR [edi+0x0],dh
   1e620:	push   ecx
   1e621:	add    BYTE PTR [ebp+0x0],dh
   1e624:	add    BYTE PTR gs:[edx+0x0],dh
   1e628:	jns    0x1e62a
   1e62a:	push   esi
   1e62b:	add    BYTE PTR [ecx+0x0],ah
   1e62e:	ins    BYTE PTR es:[edi],dx
   1e62f:	add    BYTE PTR [ebp+0x0],dh
   1e632:	add    BYTE PTR gs:[ebx+0x0],cl
   1e636:	add    BYTE PTR gs:[ecx+0x0],bh
   1e63a:	add    BYTE PTR [eax],al
   1e63c:	pop    edx
   1e63d:	add    BYTE PTR [edi+0x0],dh
   1e640:	push   edx
   1e641:	add    BYTE PTR [ebp+0x0],ah
   1e644:	popa   
   1e645:	add    BYTE PTR [eax+eax*1+0x46],ah
   1e649:	add    BYTE PTR [ecx+0x0],ch
   1e64c:	ins    BYTE PTR es:[edi],dx
   1e64d:	add    BYTE PTR [ebp+0x0],ah
   1e650:	add    BYTE PTR [eax],al
   1e652:	pop    edx
   1e653:	add    BYTE PTR [edi+0x0],dh
   1e656:	push   ebx
   1e657:	add    BYTE PTR [ebp+0x0],ah
   1e65a:	je     0x1e65c
   1e65c:	dec    ecx
   1e65d:	add    BYTE PTR [esi+0x0],ch
   1e660:	data16 add BYTE PTR [edi+0x0],ch
   1e664:	jb     0x1e666
   1e666:	ins    DWORD PTR es:[edi],dx
   1e667:	add    BYTE PTR [ecx+0x0],ah
   1e66a:	je     0x1e66c
   1e66c:	imul   eax,DWORD PTR [eax],0x6e006f
   1e672:	inc    esi
   1e673:	add    BYTE PTR [ecx+0x0],ch
   1e676:	ins    BYTE PTR es:[edi],dx
   1e677:	add    BYTE PTR [ebp+0x0],ah
   1e67a:	add    BYTE PTR [eax],al
   1e67c:	pop    edx
   1e67d:	add    BYTE PTR [edi+0x0],dh
   1e680:	push   edi
   1e681:	add    BYTE PTR [edx+0x0],dh
   1e684:	imul   eax,DWORD PTR [eax],0x650074
   1e68a:	inc    esi
   1e68b:	add    BYTE PTR [ecx+0x0],ch
   1e68e:	ins    BYTE PTR es:[edi],dx
   1e68f:	add    BYTE PTR [ebp+0x0],ah
   1e692:	add    BYTE PTR [eax],al
   1e694:	pop    edx
   1e695:	add    BYTE PTR [edi+0x0],dh
   1e698:	push   ecx
   1e699:	add    BYTE PTR [ebp+0x0],dh
   1e69c:	add    BYTE PTR gs:[edx+0x0],dh
   1e6a0:	jns    0x1e6a2
   1e6a2:	dec    ecx
   1e6a3:	add    BYTE PTR [esi+0x0],ch
   1e6a6:	data16 add BYTE PTR [edi+0x0],ch
   1e6aa:	jb     0x1e6ac
   1e6ac:	ins    DWORD PTR es:[edi],dx
   1e6ad:	add    BYTE PTR [ecx+0x0],ah
   1e6b0:	je     0x1e6b2
   1e6b2:	imul   eax,DWORD PTR [eax],0x6e006f
   1e6b8:	inc    esi
   1e6b9:	add    BYTE PTR [ecx+0x0],ch
   1e6bc:	ins    BYTE PTR es:[edi],dx
   1e6bd:	add    BYTE PTR [ebp+0x0],ah
   1e6c0:	add    BYTE PTR [eax],al
   1e6c2:	dec    ecx
   1e6c3:	add    BYTE PTR [edi+0x0],ch
   1e6c6:	inc    ebx
   1e6c7:	add    BYTE PTR [edx+0x0],dh
   1e6ca:	add    BYTE PTR gs:[ecx+0x0],ah
   1e6ce:	je     0x1e6d0
   1e6d0:	add    BYTE PTR gs:[ebx+0x0],dl
   1e6d4:	jns    0x1e6d6
   1e6d6:	ins    DWORD PTR es:[edi],dx
   1e6d7:	add    BYTE PTR [edx+0x0],ah
   1e6da:	outs   dx,DWORD PTR ds:[esi]
   1e6db:	add    BYTE PTR [eax+eax*1+0x69],ch
   1e6df:	add    BYTE PTR [ebx+0x0],ah
   1e6e2:	dec    esp
   1e6e3:	add    BYTE PTR [ecx+0x0],ch
   1e6e6:	outs   dx,BYTE PTR ds:[esi]
   1e6e7:	add    BYTE PTR [ebx+0x0],ch
   1e6ea:	add    BYTE PTR [eax],al
   1e6ec:	dec    ecx
   1e6ed:	add    BYTE PTR [edi+0x0],ch
   1e6f0:	inc    ebx
   1e6f1:	add    BYTE PTR [edx+0x0],dh
   1e6f4:	add    BYTE PTR gs:[ecx+0x0],ah
   1e6f8:	je     0x1e6fa
   1e6fa:	add    BYTE PTR gs:[eax+eax*1+0x65],al
   1e6ff:	add    BYTE PTR [esi+0x0],dh
   1e702:	imul   eax,DWORD PTR [eax],0x650063
   1e708:	add    BYTE PTR [eax],al
   1e70a:	push   ebx
   1e70b:	add    BYTE PTR [ebp+0x0],ah
   1e70e:	inc    ebx
   1e70f:	add    BYTE PTR [edx+0x0],dh
   1e712:	add    BYTE PTR gs:[ecx+0x0],ah
   1e716:	je     0x1e718
   1e718:	add    BYTE PTR gs:[ebx+0x0],al
   1e71c:	ins    BYTE PTR es:[edi],dx
   1e71d:	add    BYTE PTR [ecx+0x0],ch
   1e720:	add    BYTE PTR gs:[esi+0x0],ch
   1e724:	je     0x1e726
   1e726:	push   ebx
   1e727:	add    BYTE PTR [ebp+0x0],ah
   1e72a:	arpl   WORD PTR [eax],ax
   1e72c:	jne    0x1e72e
   1e72e:	jb     0x1e730
   1e730:	imul   eax,DWORD PTR [eax],0x790074
   1e736:	add    BYTE PTR [eax],al
   1e738:	dec    ebx
   1e739:	add    BYTE PTR [ebp+0x0],ah
   1e73c:	push   ecx
   1e73d:	add    BYTE PTR [ebp+0x0],dh
   1e740:	add    BYTE PTR gs:[edx+0x0],dh
   1e744:	jns    0x1e746
   1e746:	push   ebx
   1e747:	add    BYTE PTR [ecx+0x0],bh
   1e74a:	jae    0x1e74c
   1e74c:	je     0x1e74e
   1e74e:	add    BYTE PTR gs:[ebp+0x0],ch
   1e752:	push   esp
   1e753:	add    BYTE PTR [ecx+0x0],ch
   1e756:	ins    DWORD PTR es:[edi],dx
   1e757:	add    BYTE PTR [ebp+0x0],ah
   1e75a:	add    BYTE PTR [eax],al
   1e75c:	pop    edx
   1e75d:	add    BYTE PTR [edi+0x0],dh
   1e760:	dec    ebp
   1e761:	add    BYTE PTR [ecx+0x0],ah
   1e764:	jo     0x1e766
   1e766:	push   esi
   1e767:	add    BYTE PTR [ecx+0x0],ch
   1e76a:	add    BYTE PTR gs:[edi+0x0],dh
   1e76e:	dec    edi
   1e76f:	add    BYTE PTR [esi+0x0],ah
   1e772:	push   ebx
   1e773:	add    BYTE PTR [ebp+0x0],ah
   1e776:	arpl   WORD PTR [eax],ax
   1e778:	je     0x1e77a
   1e77a:	imul   eax,DWORD PTR [eax],0x6e006f
   1e780:	add    BYTE PTR [eax],al
   1e782:	pop    edx
   1e783:	add    BYTE PTR [edi+0x0],dh
   1e786:	inc    ebx
   1e787:	add    BYTE PTR [edx+0x0],dh
   1e78a:	add    BYTE PTR gs:[ecx+0x0],ah
   1e78e:	je     0x1e790
   1e790:	add    BYTE PTR gs:[ebx+0x0],dl
   1e794:	add    BYTE PTR gs:[ebx+0x0],ah
   1e798:	je     0x1e79a
   1e79a:	imul   eax,DWORD PTR [eax],0x6e006f
   1e7a0:	add    BYTE PTR [eax],al
   1e7a2:	pop    edx
   1e7a3:	add    BYTE PTR [edi+0x0],dh
   1e7a6:	push   ebp
   1e7a7:	add    BYTE PTR [esi+0x0],ch
   1e7aa:	ins    DWORD PTR es:[edi],dx
   1e7ab:	add    BYTE PTR [ecx+0x0],ah
   1e7ae:	jo     0x1e7b0
   1e7b0:	push   esi
   1e7b1:	add    BYTE PTR [ecx+0x0],ch
   1e7b4:	add    BYTE PTR gs:[edi+0x0],dh
   1e7b8:	dec    edi
   1e7b9:	add    BYTE PTR [esi+0x0],ah
   1e7bc:	push   ebx
   1e7bd:	add    BYTE PTR [ebp+0x0],ah
   1e7c0:	arpl   WORD PTR [eax],ax
   1e7c2:	je     0x1e7c4
   1e7c4:	imul   eax,DWORD PTR [eax],0x6e006f
   1e7ca:	add    BYTE PTR [eax],al
   1e7cc:	dec    ebx
   1e7cd:	add    BYTE PTR [ebp+0x0],ah
   1e7d0:	dec    ecx
   1e7d1:	add    BYTE PTR [esi+0x0],ch
   1e7d4:	imul   eax,DWORD PTR [eax],0x690074
   1e7da:	popa   
   1e7db:	add    BYTE PTR [eax+eax*1+0x69],ch
   1e7df:	add    BYTE PTR [edx+0x0],bh
   1e7e2:	add    BYTE PTR gs:[ebp+0x0],cl
   1e7e6:	jne    0x1e7e8
   1e7e8:	je     0x1e7ea
   1e7ea:	add    BYTE PTR gs:[eax+0x0],bh
   1e7ee:	add    BYTE PTR [eax],al
   1e7f0:	dec    ebx
   1e7f1:	add    BYTE PTR [ebp+0x0],ah
   1e7f4:	push   edi
   1e7f5:	add    BYTE PTR [ecx+0x0],ah
   1e7f8:	imul   eax,DWORD PTR [eax],0x460074
   1e7fe:	outs   dx,DWORD PTR ds:[esi]
   1e7ff:	add    BYTE PTR [edx+0x0],dh
   1e802:	push   ebx
   1e803:	add    BYTE PTR [ecx+0x0],ch
   1e806:	outs   dx,BYTE PTR ds:[esi]
   1e807:	add    BYTE PTR [edi+0x0],ah
   1e80a:	ins    BYTE PTR es:[edi],dx
   1e80b:	add    BYTE PTR [ebp+0x0],ah
   1e80e:	dec    edi
   1e80f:	add    BYTE PTR [edx+0x0],ah
   1e812:	push   0x0
   1e814:	add    BYTE PTR gs:[ebx+0x0],ah
   1e818:	je     0x1e81a
   1e81a:	add    BYTE PTR [eax],al
   1e81c:	dec    ebx
   1e81d:	add    BYTE PTR [ebp+0x0],ah
   1e820:	push   edx
   1e821:	add    BYTE PTR [ebp+0x0],ah
   1e824:	ins    BYTE PTR es:[edi],dx
   1e825:	add    BYTE PTR [ebp+0x0],ah
   1e828:	popa   
   1e829:	add    BYTE PTR [ebx+0x0],dh
   1e82c:	add    BYTE PTR gs:[ebp+0x0],cl
   1e830:	jne    0x1e832
   1e832:	je     0x1e834
   1e834:	add    BYTE PTR gs:[eax+0x0],bh
   1e838:	add    BYTE PTR [eax],al
   1e83a:	push   eax
   1e83b:	add    BYTE PTR [ebx+0x0],dh
   1e83e:	dec    esp
   1e83f:	add    BYTE PTR [edi+0x0],ch
   1e842:	outs   dx,DWORD PTR ds:[esi]
   1e843:	add    BYTE PTR [ebx+0x0],ch
   1e846:	jne    0x1e848
   1e848:	jo     0x1e84a
   1e84a:	push   eax
   1e84b:	add    BYTE PTR [edx+0x0],dh
   1e84e:	outs   dx,DWORD PTR ds:[esi]
   1e84f:	add    BYTE PTR [ebx+0x0],ah
   1e852:	add    BYTE PTR gs:[ebx+0x0],dh
   1e856:	jae    0x1e858
   1e858:	inc    edx
   1e859:	add    BYTE PTR [ecx+0x0],bh
   1e85c:	push   eax
   1e85d:	add    BYTE PTR [edx+0x0],dh
   1e860:	outs   dx,DWORD PTR ds:[esi]
   1e861:	add    BYTE PTR [ebx+0x0],ah
   1e864:	add    BYTE PTR gs:[ebx+0x0],dh
   1e868:	jae    0x1e86a
   1e86a:	dec    ecx
   1e86b:	add    BYTE PTR [eax+eax*1+0x0],ah
   1e86f:	add    BYTE PTR [ebx+0x0],cl
   1e872:	add    BYTE PTR gs:[edi+0x0],al
   1e876:	add    BYTE PTR gs:[eax+eax*1+0x43],dh
   1e87b:	add    BYTE PTR [ebp+0x0],dh
   1e87e:	jb     0x1e880
   1e880:	jb     0x1e882
   1e882:	add    BYTE PTR gs:[esi+0x0],ch
   1e886:	je     0x1e888
   1e888:	push   esp
   1e889:	add    BYTE PTR [eax+0x0],ch
   1e88c:	jb     0x1e88e
   1e88e:	add    BYTE PTR gs:[ecx+0x0],ah
   1e892:	add    BYTE PTR fs:[eax],al
   1e895:	add    BYTE PTR [eax+eax*1+0x2d],dl
   1e899:	add    BYTE PTR [ecx],cl
   1e89b:	add    BYTE PTR ds:0x18000000,dl
   1e8a1:	mov    cl,0xe8
   1e8a3:	mov    al,0x72
   1e8a5:	out    0x21,al
   1e8a7:	mov    ebp,cr4
   1e8aa:	xchg   ebx,eax
   1e8ab:	pop    ds
   1e8ac:	xchg   BYTE PTR [ecx-0x355caf44],ah
   1e8b2:	push   esi
   1e8b3:	mov    bl,0x63
   1e8b5:	fcmovbe st,st(1)
   1e8b7:	inc    esp
   1e8b8:	mov    esp,0x429705aa
   1e8bd:	shr    ecx,1
   1e8bf:	sahf   
   1e8c0:	inc    ebp
   1e8c1:	rol    DWORD PTR [eax],cl
   1e8c3:	int3   
   1e8c4:	push   ebx
   1e8c5:	add    BYTE PTR [edi],ah
   1e8c7:	add    BYTE PTR ds:0x6001300,dl
   1e8cd:	add    BYTE PTR [eax],al
   1e8cf:	add    BYTE PTR [eax],ah
   1e8d1:	mov    ch,0xe0
   1e8d3:	call   0x45cd:0x86d6f73
   1e8da:	adc    esp,DWORD PTR [ebp+0x39baefac]
   1e8e0:	pusha  
   1e8e1:	dec    esp
   1e8e2:	neg    BYTE PTR [esi-0x68]
   1e8e5:	add    edx,DWORD PTR [eax]
   1e8e7:	loope  0x1e8da
   1e8e9:	lods   al,BYTE PTR ds:[esi]
   1e8ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1e8eb:	dec    esp
   1e8ec:	mov    BYTE PTR [esi+0x6dbba388],ah
   1e8f2:	addr16 sbb dh,dh
   1e8f5:	icebp  
   1e8f6:	xor    DWORD PTR [ebp-0x52],edi
   1e8f9:	in     al,0x74
   1e8fb:	adc    edx,DWORD PTR [eax-0x77fa43e1]
   1e901:	mov    eax,ds:0x33d73ef2
   1e906:	int    0xa4
   1e908:	call   0x4900:0xa6579c74
   1e90f:	add    BYTE PTR [eax+eax*1],ah
   1e912:	or     al,0x0
   1e914:	push   es
   1e915:	add    BYTE PTR [edx],al
   1e917:	add    BYTE PTR ds:0x15003100,dh
   1e91d:	add    BYTE PTR [eax+eax*1],bl
   1e920:	add    BYTE PTR [eax],al
   1e922:	mov    bh,0xab
   1e924:	mov    dl,BYTE PTR [ecx-0x59b4e74]
   1e92a:	scas   eax,DWORD PTR es:[edi]
   1e92b:	test   al,0xc
   1e92d:	fwait
   1e92e:	add    DWORD PTR [ecx-0x3f056b66],ecx
   1e934:	out    dx,al
   1e935:	mov    ah,0x85
   1e937:	fcomp  QWORD PTR [eax+0x7d]
   1e93a:	mov    ?,esp
   1e93c:	retf   
   1e93d:	mov    dl,BYTE PTR [ebx]
   1e93f:	aas    
   1e940:	pop    ebp
   1e941:	repz push ss
   1e943:	sub    dh,bl
   1e945:	cmp    edx,ebp
   1e947:	js     0x1e9ab
   1e949:	sub    al,0x3e
   1e94b:	adc    DWORD PTR [ecx],0x4a002e00
   1e951:	add    BYTE PTR [eax],cl
   1e953:	add    BYTE PTR [eax],al
   1e955:	add    BYTE PTR [eax],al
   1e957:	add    BYTE PTR [ecx+0x13b7b7b6],ch
   1e95d:	sub    eax,0xb1a87f07
   1e962:	jnp    0x1e988
   1e964:	lds    ecx,FWORD PTR [edx]
   1e966:	cmp    DWORD PTR [edi+eiz*8],edi
   1e969:	mov    WORD PTR [eax-0x303cc19],ds
   1e96f:	sbb    esi,DWORD PTR [eax+0xa703ad9]
   1e975:	mov    al,ds:0x1392d81b
   1e97a:	data16 int 0x3d
   1e97d:	push   edi
   1e97e:	fs aad 0x26
   1e981:	add    BYTE PTR [esi+0x0],ch
   1e984:	sbb    al,BYTE PTR [eax]
   1e986:	adc    BYTE PTR [eax],al
   1e988:	or     BYTE PTR [eax],al
   1e98a:	add    BYTE PTR [eax],al
   1e98c:	inc    edx
   1e98d:	add    BYTE PTR [edx+0x0],cl
   1e990:	or     BYTE PTR [eax],al
   1e992:	add    BYTE PTR [eax],al
   1e994:	add    BYTE PTR [eax],al
   1e996:	mov    ebp,0x8fc8c526
   1e99b:	fucom  st(2)
   1e99d:	and    BYTE PTR [ebp+0xb7dd018],bl
   1e9a3:	test   DWORD PTR [ebx-0x6a],edx
   1e9a6:	outs   dx,BYTE PTR ds:[esi]
   1e9a7:	mov    dh,0xed
   1e9a9:	pop    ds
   1e9aa:	out    dx,al
   1e9ab:	dec    ebx
   1e9ac:	imul   ecx,DWORD PTR [ebx+0x1d9aa296],0x68b781fb
   1e9b6:	jmp    0x6821:0x3da81243
   1e9bd:	sti    
   1e9be:	imul   edx,DWORD PTR [ebp-0x2b],0xffffffaf
   1e9c2:	add    ah,cl
   1e9c4:	inc    edx
   1e9c5:	daa    
   1e9c6:	add    BYTE PTR ds:0x3d52cc00,dl
   1e9cc:	sub    ebp,ebp
   1e9ce:	jmp    0xbf8594a9
   1e9d3:	mov    ch,0xb5
   1e9d5:	xor    BYTE PTR [ebx-0x6d437dd2],dl
   1e9db:	add    al,0x4b
   1e9dd:	and    al,BYTE PTR [ebp-0x70]
   1e9e0:	test   BYTE PTR [ecx-0x75],ah
   1e9e3:	dec    ebx
   1e9e4:	fisub  WORD PTR [ecx]
   1e9e6:	(bad)  
   1e9e7:	push   esp
   1e9e8:	dec    ebx
   1e9e9:	iret   
   1e9ea:	inc    esi
   1e9eb:	lock enter 0x4b9a,0x8e
   1e9f0:	jnp    0x1e98c
   1e9f2:	xchg   BYTE PTR [edx-0x21f4f846],ch
   1e9f8:	jbe    0x1e990
   1e9fa:	push   es
   1e9fb:	mov    ebx,0x717430b8
   1ea00:	cmp    DWORD PTR [ecx+0x75],eax
   1ea03:	add    BYTE PTR [ebx+0x3f],dl
   1ea06:	or     DWORD PTR [eax],eax
   1ea08:	adc    eax,0x96a500
   1ea0d:	push   ebp
   1ea0e:	dec    ecx
   1ea0f:	(bad)  
   1ea10:	stc    
   1ea11:	sub    eax,0x183a4f86
   1ea16:	mov    al,ds:0x7f3c29c4
   1ea1b:	ss in  eax,dx
   1ea1d:	scas   al,BYTE PTR es:[edi]
   1ea1e:	pop    es
   1ea1f:	and    DWORD PTR [esi],edi
   1ea21:	mov    dh,0xa5
   1ea23:	mov    ebp,0x42717789
   1ea28:	adc    eax,0x463cd65e
   1ea2d:	dec    ebp
   1ea2e:	repz push ebp
   1ea30:	mov    dh,dl
   1ea32:	or     eax,0x954158f4
   1ea37:	rol    BYTE PTR [eax],1
   1ea39:	int3   
   1ea3a:	inc    ebx
   1ea3b:	xor    DWORD PTR [edi],edx
   1ea3d:	add    al,0x15
   1ea3f:	adc    DWORD PTR [ecx],esi
   1ea41:	cmp    al,0x1a
   1ea43:	pop    ss
   1ea44:	add    al,0x5
   1ea46:	add    ah,cl
   1ea48:	pop    eax
   1ea49:	xor    eax,0xd95584e1
   1ea4e:	je     0x1ea54
   1ea50:	mov    dl,0xb
   1ea52:	push   edi
   1ea53:	pop    es
   1ea54:	pop    es
   1ea55:	sbb    al,0xc5
   1ea57:	imul   esi,DWORD PTR [ebx+0x37b6aca8],0x3782b78d
   1ea61:	pop    edi
   1ea62:	sbb    al,0xba
   1ea64:	jl     0x1eac9
   1ea66:	ins    BYTE PTR es:[edi],dx
   1ea67:	mov    bh,0x9
   1ea69:	call   0xa9713486
   1ea6e:	cmc    
   1ea6f:	mov    esi,0x8b2f99a4
   1ea74:	rol    BYTE PTR [eax],0x57
   1ea77:	cli    
   1ea78:	sub    cl,BYTE PTR [esi]
   1ea7a:	lods   eax,DWORD PTR ds:[esi]
   1ea7b:	ret    
   1ea7c:	addr16 call 0xcc02bd44
   1ea82:	dec    esp
   1ea83:	and    ecx,DWORD PTR [esi]
   1ea85:	add    eax,0x100b2528
   1ea8a:	adc    edx,DWORD PTR [ebx]
   1ea8c:	or     edi,DWORD PTR [eax]
   1ea8e:	add    ah,cl
   1ea90:	xchg   edi,eax
   1ea91:	nop    ebx
   1ea94:	jge    0x1eaa3
   1ea96:	push   0x43
   1ea98:	xchg   edx,eax
   1ea99:	mov    esi,DWORD PTR [ebp-0x36cc4e1]
   1ea9f:	dec    esi
   1eaa0:	mov    ebx,0x75116be8
   1eaa5:	xor    ebx,edx
   1eaa7:	pop    ds
   1eaa8:	or     ebx,DWORD PTR [eax*4-0x77c2bc4c]
   1eaaf:	enter  0xa0a9,0x6e
   1eab3:	je     0x1ea9b
   1eab5:	and    DWORD PTR [ebp-0x3b],esp
   1eab8:	mov    edi,0x96b7f126
   1eabd:	sbb    BYTE PTR [ebx+0x54547b83],ch
   1eac3:	add    BYTE PTR [ebx+eiz*1+0xe],cl
   1eac7:	add    eax,0x100b2528
   1eacc:	adc    edx,DWORD PTR [ebx]
   1eace:	or     ebp,DWORD PTR [esi]
   1ead0:	add    ah,cl
   1ead2:	fist   DWORD PTR [eax+0x7930fe6a]
   1ead8:	pop    ebp
   1ead9:	and    BYTE PTR [edi-0x5e],dl
   1eadc:	aas    
   1eadd:	ja     0x1ea85
   1eadf:	inc    ecx
   1eae0:	push   esp
   1eae1:	push   0x2d
   1eae3:	cmp    bl,BYTE PTR [ecx+ecx*1-0x2a]
   1eae7:	pop    ebx
   1eae8:	pop    es
   1eae9:	jo     0x1eb67
   1eaeb:	ret    
   1eaec:	or     ebx,DWORD PTR [ebx+0x37]
   1eaef:	mov    ah,0x9a
   1eaf1:	push   ecx
   1eaf2:	mov    edx,0x83c0d2d4
   1eaf7:	lock lock out dx,eax
   1eafa:	pop    esi
   1eafb:	ret    0x96cd
   1eafe:	pop    ebp
   1eaff:	inc    esi
   1eb00:	jae    0x1ea8c
   1eb02:	test   DWORD PTR [ebp-0x51],0x270082
   1eb09:	int3   
   1eb0a:	imul   eax,DWORD PTR [eax],0xe
   1eb0d:	add    BYTE PTR [edi],dl
   1eb0f:	add    BYTE PTR [eax+eax*1],bl
   1eb12:	or     eax,DWORD PTR [eax]
   1eb14:	or     DWORD PTR [eax],eax
   1eb16:	pop    edi
   1eb17:	add    BYTE PTR [ecx],al
   1eb19:	add    BYTE PTR [eax+eax*1],bl
   1eb1c:	dec    edx
   1eb1d:	add    BYTE PTR [eax],cl
   1eb1f:	add    BYTE PTR [eax],al
   1eb21:	add    BYTE PTR [eax],al
   1eb23:	add    BYTE PTR [eax+edx*4],al
   1eb26:	cmp    dl,ch
   1eb28:	pushf  
   1eb29:	enter  0x50bd,0x5d
   1eb2d:	pop    ds
   1eb2e:	iret   
   1eb2f:	jmp    0xbeb4419d
   1eb34:	lahf   
   1eb35:	sub    ecx,DWORD PTR [ebx+0x352f6d91]
   1eb3b:	or     ecx,DWORD PTR [esi+eax*1-0x512dd9a3]
   1eb42:	scas   eax,DWORD PTR es:[edi]
   1eb43:	arpl   WORD PTR [ebx+ebx*1+0x64],cx
   1eb47:	lods   al,BYTE PTR ds:[esi]
   1eb48:	test   DWORD PTR [esi],ecx
   1eb4a:	lods   al,BYTE PTR ds:[esi]
   1eb4b:	push   es
   1eb4c:	lods   al,BYTE PTR ds:[esi]
   1eb4d:	xor    cl,ch
   1eb4f:	push   0x60b1d565
   1eb54:	xchg   ebx,eax
   1eb55:	(bad)  
   1eb56:	shr    bl,1
   1eb58:	xor    BYTE PTR [eax-0x79],bh
   1eb5b:	mov    dh,al
   1eb5d:	add    DWORD PTR [ecx],ebx
   1eb5f:	fbld   TBYTE PTR [eax+0x6ecc0011]
   1eb65:	sbb    dl,BYTE PTR [eax]
   1eb67:	or     BYTE PTR [eax],al
   1eb69:	inc    edx
   1eb6a:	dec    edx
   1eb6b:	or     BYTE PTR [eax],al
   1eb6d:	add    BYTE PTR [esi],ah
   1eb6f:	sahf   
   1eb70:	cmp    al,0x83
   1eb72:	sbb    BYTE PTR [ebx-0x12],ch
   1eb75:	pusha  
   1eb76:	outs   dx,DWORD PTR ds:[esi]
   1eb77:	pop    edi
   1eb78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   1eb79:	xor    bl,BYTE PTR [ebx-0x5c]
   1eb7c:	or     bl,BYTE PTR [edi+ebp*4+0x560dfc6a]
   1eb83:	mov    bh,0xd5
   1eb85:	mov    WORD PTR [edi-0x63],ds
   1eb88:	sub    BYTE PTR es:[ebx+0x50767e5d],ch
   1eb8f:	xchg   ebx,eax
   1eb90:	jne    0x1ec0f
   1eb92:	or     BYTE PTR [esp+ebp*2],ah
   1eb95:	inc    esi
   1eb96:	xchg   esi,eax
   1eb97:	test   ecx,0x5f443e
   1eb9d:	int3   
   1eb9e:	pop    esp
   1eb9f:	add    BYTE PTR [edi],cl
   1eba1:	add    BYTE PTR [edx],ch
   1eba3:	add    BYTE PTR [edx],cl
   1eba5:	add    BYTE PTR [edi],al
   1eba7:	add    BYTE PTR [ecx],dl
   1eba9:	add    BYTE PTR [eax],cl
   1ebab:	add    BYTE PTR [edi],bh
   1ebad:	add    BYTE PTR ds:0x1b000000,bh
   1ebb3:	add    BYTE PTR [eax],ch
   1ebb5:	add    BYTE PTR [edi],ch
   1ebb7:	add    BYTE PTR [edx],cl
   1ebb9:	add    BYTE PTR [edx],cl
   1ebbb:	add    BYTE PTR [edi],al
   1ebbd:	add    BYTE PTR [ecx],dl
   1ebbf:	add    BYTE PTR [eax],cl
   1ebc1:	add    BYTE PTR [esi+0x0],bl
   1ebc4:	add    DWORD PTR [eax],eax
   1ebc6:	outs   dx,BYTE PTR ds:[esi]
   1ebc7:	add    BYTE PTR [eax],al
   1ebc9:	add    BYTE PTR [ebx],al
   1ebcb:	shl    BYTE PTR [edx+0x2],1
   1ebce:	jp     0x1ebe8
   1ebd0:	loop   0x1ec23
   1ebd2:	mov    edx,0x2d9061c6
   1ebd7:	inc    esi
   1ebd8:	jge    0x1ebf0
   1ebda:	inc    esp
   1ebdb:	push   edi
   1ebdc:	imul   ebp,DWORD PTR [edi-0x3869b036],0xc85cb744
   1ebe6:	std    
   1ebe7:	sub    esi,ecx
   1ebe9:	mov    ecx,DWORD PTR [edi]
   1ebeb:	out    0xe9,eax
   1ebed:	add    DWORD PTR fs:[ecx-0x2c],eax
   1ebf1:	pusha  
   1ebf2:	mov    fs,WORD PTR [ebx+edx*8+0x44853b9c]
   1ebf9:	fdiv   st(5),st
   1ebfb:	pop    esp
   1ebfc:	xchg   edi,eax
   1ebfd:	sbb    al,0x63
   1ebff:	dec    esi
   1ec00:	lods   eax,DWORD PTR ds:[esi]
   1ec01:	das    
   1ec02:	xlat   BYTE PTR ds:[ebx]
   1ec03:	test   BYTE PTR ds:0x36cc0062,0x89
   1ec0a:	xlat   BYTE PTR ds:[ebx]
   1ec0b:	lods   eax,DWORD PTR ds:[esi]
   1ec0c:	icebp  
   1ec0d:	lahf   
   1ec0e:	add    bl,BYTE PTR [ebp-0x7705bb2a]
   1ec14:	xchg   DWORD PTR [eax+0x5a],ebp
   1ec17:	jae    0x1ebce
   1ec19:	lea    edi,[ecx-0x79]
   1ec1c:	iret   
   1ec1d:	(bad)  
   1ec1e:	mov    bh,0xd4
   1ec20:	retf   0x9ff6
   1ec23:	mov    ecx,0x38498512
   1ec28:	repz scas eax,DWORD PTR es:[edi]
   1ec2a:	sar    DWORD PTR [ebx],1
   1ec2c:	add    al,0xc1
   1ec2e:	xchg   edx,eax
   1ec2f:	sbb    al,0xb9
   1ec31:	bound  eax,QWORD PTR [ecx-0x6d]
   1ec34:	fimul  DWORD PTR [eax-0x4]
   1ec37:	or     eax,0x9b5a445d
   1ec3c:	pop    edx
   1ec3d:	lock (bad) 
   1ec3f:	leave  
   1ec40:	jmp    0xb1f9:0x9772de00
   1ec47:	cmp    BYTE PTR fs:[edi],0xac
   1ec4b:	push   edx
   1ec4c:	lods   eax,DWORD PTR ds:[esi]
   1ec4d:	sbb    BYTE PTR [ebx+edi*2],0x68
   1ec51:	dec    ebx
   1ec52:	cdq    
   1ec53:	pop    esp
   1ec54:	adc    al,0xae
   1ec57:	mov    bh,0xc5
   1ec59:	inc    edi
   1ec5a:	push   edi
   1ec5b:	mov    BYTE PTR [ecx],bl
   1ec5d:	lock (bad) 
   1ec5f:	push   0x74
   1ec61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1ec62:	adc    dh,BYTE PTR [edx-0x4717cf81]
   1ec68:	imul   eax,DWORD PTR [eax],0x2e
   1ec6b:	add    BYTE PTR [ebp+0x0],bl
   1ec6e:	or     al,BYTE PTR [eax]
   1ec70:	or     al,BYTE PTR [eax]
   1ec72:	add    BYTE PTR [eax],al
   1ec74:	push   ebp
   1ec75:	cmp    al,0xcb
   1ec77:	mov    eax,ds:0x436c2e10
   1ec7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   1ec7d:	aaa    
   1ec7e:	jns    0x1ec3c
   1ec80:	mov    ah,0xec
   1ec82:	xchg   DWORD PTR [ecx+0x4a],ebp
   1ec85:	fistp  DWORD PTR [edx+ebx*8-0x2a]
   1ec89:	lahf   
   1ec8a:	xor    BYTE PTR [eax+0x54d634df],ah
   1ec90:	lods   eax,DWORD PTR ds:[esi]
   1ec91:	push   cs
   1ec92:	mov    esp,0x776a5c
   1ec97:	int3   
   1ec98:	pop    esp
   1ec99:	add    BYTE PTR [edi],cl
   1ec9b:	add    BYTE PTR [edx],ch
   1ec9d:	add    BYTE PTR [edx],cl
   1ec9f:	add    BYTE PTR [edi],al
   1eca1:	add    BYTE PTR [ecx],dl
   1eca3:	add    BYTE PTR [eax],cl
   1eca5:	add    BYTE PTR [edi],bh
   1eca7:	add    BYTE PTR ds:0x1b000000,bh
   1ecad:	add    BYTE PTR [eax],ch
   1ecaf:	add    BYTE PTR [edi],ch
   1ecb1:	add    BYTE PTR [edx],cl
   1ecb3:	add    BYTE PTR [edx],cl
   1ecb5:	add    BYTE PTR [edi],al
   1ecb7:	add    BYTE PTR [ecx],dl
   1ecb9:	add    BYTE PTR [eax],cl
   1ecbb:	add    BYTE PTR [esi+0x0],bl
   1ecbe:	add    DWORD PTR [eax],eax
   1ecc0:	outs   dx,BYTE PTR ds:[esi]
   1ecc1:	add    BYTE PTR [eax],bh
   1ecc3:	add    BYTE PTR [esi],dl
   1ecc5:	add    BYTE PTR [ebx],bl
   1ecc7:	add    BYTE PTR [edi],bl
   1ecc9:	add    BYTE PTR [ebx],dl
   1eccb:	add    BYTE PTR [edi],dl
   1eccd:	add    BYTE PTR [ecx],al
   1eccf:	add    BYTE PTR [edi],ch
   1ecd1:	add    BYTE PTR [eax],al
   1ecd3:	add    BYTE PTR [edx-0x54],ah
   1ecd6:	dec    ebp
   1ecd7:	jo     0x1ed3a
   1ecd9:	ja     0x1ecf4
   1ecdb:	or     ch,BYTE PTR ds:0xa0ef8302
   1ece1:	(bad)  
   1ece2:	fbstp  TBYTE PTR ds:0xb76ff101
   1ece8:	or     BYTE PTR [ebx],bl
   1ecea:	inc    edi
   1eceb:	fdiv   QWORD PTR [ecx]
   1eced:	shl    dh,1
   1ecef:	pop    esp
   1ecf0:	fbld   TBYTE PTR [edi+ecx*2+0x5f45d91b]
   1ecf7:	out    dx,eax
   1ecf8:	mov    cs,WORD PTR [edi]
   1ecfa:	mov    edi,0x5c0076b8
   1ecff:	add    BYTE PTR [edi],cl
   1ed01:	add    BYTE PTR [edx],ch
   1ed03:	add    BYTE PTR [edx],cl
   1ed05:	add    BYTE PTR [edi],al
   1ed07:	add    BYTE PTR [ecx],dl
   1ed09:	add    BYTE PTR [eax],cl
   1ed0b:	add    BYTE PTR [edi],bh
   1ed0d:	add    BYTE PTR ds:0x1b000000,bh
   1ed13:	add    BYTE PTR [eax],al
   1ed15:	add    BYTE PTR [esi+esi*2-0x4f],dh
   1ed19:	shl    BYTE PTR [edx-0x6ca89c91],1
   1ed1f:	pop    eax
   1ed20:	rol    DWORD PTR [ebp+0x42],cl
   1ed23:	fsub   DWORD PTR [edx-0x69e4d59b]
   1ed29:	hlt    
   1ed2a:	or     bh,BYTE PTR [ecx]
   1ed2c:	xlat   BYTE PTR ds:[ebx]
   1ed2d:	mov    es,WORD PTR [esp+ecx*8]
   1ed30:	or     ebx,DWORD PTR [ebx+0x3adc3f4]
   1ed36:	cmp    BYTE PTR [ecx],ch
   1ed38:	adc    edi,esi
   1ed3a:	pop    ss
   1ed3b:	or     al,0x68
   1ed3d:	es (bad) 
   1ed3f:	add    ebx,DWORD PTR [edi+0x6d]
   1ed42:	pop    edx
   1ed43:	mov    ah,0xb5
   1ed45:	dec    ebp
   1ed46:	mov    al,ds:0xe005c00
   1ed4b:	add    BYTE PTR [edi],dh
   1ed4d:	add    BYTE PTR [edx],al
   1ed4f:	add    BYTE PTR [esi],cl
   1ed51:	add    BYTE PTR [edx],bl
   1ed53:	add    BYTE PTR [edi],al
   1ed55:	add    BYTE PTR [esi],al
   1ed57:	add    BYTE PTR [ebx],cl
   1ed59:	add    BYTE PTR ds:0x2c001100,ah
   1ed5f:	add    BYTE PTR [edx],al
   1ed61:	add    BYTE PTR [ebx],cl
   1ed63:	add    BYTE PTR [ecx],al
   1ed65:	add    BYTE PTR [edi],al
   1ed67:	add    BYTE PTR [ebx],cl
   1ed69:	add    BYTE PTR [ecx],bh
   1ed6b:	add    BYTE PTR [edi],cl
   1ed6d:	add    BYTE PTR [edx],cl
   1ed6f:	add    BYTE PTR [edx],cl
   1ed71:	add    BYTE PTR [edi],al
   1ed73:	add    BYTE PTR [ecx],dl
   1ed75:	add    BYTE PTR [eax],cl
   1ed77:	add    BYTE PTR [ecx],dl
   1ed79:	add    BYTE PTR [edi],bl
   1ed7b:	add    BYTE PTR [esi],dh
   1ed7d:	add    BYTE PTR [edi],al
   1ed7f:	add    BYTE PTR [eax],al
   1ed81:	add    BYTE PTR [edi],dl
   1ed83:	add    BYTE PTR [ebx],cl
   1ed85:	add    BYTE PTR [edx],bl
   1ed87:	add    BYTE PTR [edi],dh
   1ed89:	add    BYTE PTR [eax+eax*1],ch
   1ed8c:	add    DWORD PTR [eax],eax
   1ed8e:	sbb    al,BYTE PTR [eax]
   1ed90:	push   es
   1ed91:	add    BYTE PTR ds:0x3f000300,bl
   1ed97:	add    BYTE PTR [esi],dh
   1ed99:	add    BYTE PTR [ecx],dl
   1ed9b:	add    BYTE PTR [eax],ch
   1ed9d:	add    BYTE PTR [edi],cl
   1ed9f:	add    BYTE PTR [esi],dh
   1eda1:	add    BYTE PTR [edi],dl
   1eda3:	add    BYTE PTR [eax+eax*1],al
   1eda6:	pop    ds
   1eda7:	add    BYTE PTR [edx],cl
   1eda9:	add    BYTE PTR [esi],al
   1edab:	add    BYTE PTR [esi],dl
   1edad:	add    BYTE PTR [edi],ch
   1edaf:	add    BYTE PTR [eax],al
   1edb1:	add    BYTE PTR [edi+0x78],dl
   1edb4:	jg     0x1ee33
   1edb6:	mov    ds:0x71c9e171,al
   1edbb:	iret   
   1edbc:	push   edi
   1edbd:	mov    edi,0xfe97cb94
   1edc2:	std    
   1edc3:	in     eax,0xa2
   1edc5:	outs   dx,BYTE PTR ds:[esi]
   1edc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   1edc7:	jle    0x1edca
   1edc9:	cdq    
   1edca:	mov    esp,DWORD PTR [ecx]
   1edcc:	cdq    
   1edcd:	shl    DWORD PTR gs:[ebx+0x11912c63],1
   1edd4:	popa   
   1edd5:	inc    eax
   1edd6:	test   al,0xe7
   1edd8:	int    0x4e
   1edda:	or     DWORD PTR [ebx],0xffffffbf
   1eddd:	lods   eax,DWORD PTR ds:[esi]
   1edde:	xchg   ebp,eax
   1eddf:	mov    al,ds:0xecac3fb9
   1ede4:	push   ebx
   1ede5:	add    BYTE PTR [eax+eax*1+0x1f],ch
   1ede9:	add    BYTE PTR [edx],dl
   1edeb:	add    BYTE PTR [edx],dl
   1eded:	add    BYTE PTR [eax],al
   1edef:	add    BYTE PTR [ebp+0x0],bl
   1edf2:	dec    ebx
   1edf3:	add    BYTE PTR ds:0x1d00,bl
   1edf9:	add    BYTE PTR [edx-0x3bd55684],bh
   1edff:	or     ch,BYTE PTR [ebp-0x65]
   1ee02:	mov    dl,0xf3
   1ee04:	sbb    al,0x2d
   1ee06:	sti    
   1ee07:	aaa    
   1ee08:	repz xchg ecx,eax
   1ee0a:	dec    edi
   1ee0b:	mov    DWORD PTR [ebp+0xd],0x17bd053d
   1ee12:	or     ch,dl
   1ee14:	add    al,0x14
   1ee16:	outs   dx,DWORD PTR ds:[esi]
   1ee17:	mov    bh,0xb4
   1ee19:	out    dx,al
   1ee1a:	faddp  st(7),st
   1ee1c:	jae    0x1ee80
   1ee1e:	in     al,dx
   1ee1f:	push   esi
   1ee20:	sbb    ebx,0xebfa562
   1ee26:	sbb    edi,DWORD PTR [esi-0x5b65c380]
   1ee2c:	add    BYTE PTR [eax],al
   1ee2e:	pop    edx
   1ee2f:	sub    eax,0x6163725
   1ee34:	sbb    BYTE PTR [eax],cl
   1ee36:	xor    DWORD PTR [edx+ebx*1],edi
   1ee39:	pop    ss
   1ee3a:	add    al,0x5
   1ee3c:	add    ah,cl
   1ee3e:	fistp  QWORD PTR [eax-0x19]
   1ee41:	bts    DWORD PTR [edx-0x25e4f966],edx
   1ee48:	ins    DWORD PTR es:[edi],dx
   1ee49:	mov    ah,0x51
   1ee4b:	ins    BYTE PTR es:[edi],dx
   1ee4c:	aad    0xa3
   1ee4e:	mov    WORD PTR [ecx+0x7cffd830],gs
   1ee54:	and    DWORD PTR [ecx+edx*2+0x3ceecfc1],0xad9b94a
   1ee5f:	je     0x1ee10
   1ee61:	and    DWORD PTR [ebx+ecx*2+0x4a],ebp
   1ee65:	xchg   edx,eax
   1ee66:	dec    eax
   1ee67:	jmp    0x1edec
   1ee69:	mov    ebx,0xd89a58db
   1ee6e:	pop    eax
   1ee6f:	or     eax,0x2ed41734
   1ee74:	enter  0xd4cb,0x71
   1ee78:	aas    
   1ee79:	jb     0x1ee0a
   1ee7b:	xlat   BYTE PTR ds:[ebx]
   1ee7c:	add    ah,cl
   1ee7e:	dec    esi
   1ee7f:	cmp    ah,BYTE PTR [ebx]
   1ee81:	and    eax,0x33111d1b
   1ee86:	aas    
   1ee87:	sbb    eax,DWORD PTR [esi]
   1ee89:	add    DWORD PTR [ecx*1+0x2082821],edx
   1ee90:	sbb    eax,0x7cc000b
   1ee95:	xor    al,0x5f
   1ee97:	or     al,0xe8
   1ee99:	scas   eax,DWORD PTR es:[edi]
   1ee9a:	test   al,0x13
   1ee9c:	push   ss
   1ee9d:	pusha  
   1ee9e:	or     al,0x76
   1eea0:	(bad)  [ecx]
   1eea2:	jne    0x1ee48
   1eea4:	faddp  st(1),st
   1eea6:	mov    dl,dl
   1eea8:	jmp    0x1ee48
   1eeaa:	jbe    0x1eefe
   1eeac:	sbb    DWORD PTR [eax],esp
   1eeae:	push   0xffffffbf
   1eeb0:	jp     0x1ee4a
   1eeb2:	js     0x1eeaa
   1eeb4:	mov    al,0x21
   1eeb6:	push   0x1e5c809c
   1eebb:	fadd   DWORD PTR [eax]
   1eebd:	int3   
   1eebe:	pop    edx
   1eebf:	sub    eax,0x1b1d2227
   1eec4:	adc    DWORD PTR [esi],eax
   1eec6:	pop    ss
   1eec7:	and    bh,BYTE PTR [edi]
   1eec9:	sbb    eax,DWORD PTR [esi]
   1eecb:	add    DWORD PTR [ecx*1+0x2082821],edx
   1eed2:	sbb    eax,0xc1cc000b
   1eed7:	cld    
   1eed8:	or     BYTE PTR [ebp-0x6a],bh
   1eedb:	lods   eax,DWORD PTR ds:[esi]
   1eedc:	mov    edi,0x4dc3096b
   1eee1:	int3   
   1eee2:	adc    DWORD PTR [eax-0x65],esp
   1eee5:	in     al,dx
   1eee6:	mov    bh,0xd8
   1eee8:	outs   dx,DWORD PTR ds:[esi]
   1eee9:	cmp    DWORD PTR [ecx+0x2e9e49cc],esi
   1eeef:	or     esp,DWORD PTR [eax-0x31300f18]
   1eef5:	sahf   
   1eef6:	pop    edi
   1eef7:	test   edi,esp
   1eef9:	lea    ebx,[eax]
   1eefb:	popf   
   1eefc:	push   cs
   1eefd:	jl     0x1eef5
   1eeff:	inc    ebp
   1ef00:	leave  
   1ef01:	jmp    0x1ef57
   1ef03:	mov    ds:0x82f45f09,al
   1ef08:	dec    edx
   1ef09:	btr    ecx,edi
   1ef0c:	lea    ebx,[edi+0xc]
   1ef0f:	mov    BYTE PTR [eax],al
   1ef11:	int3   
   1ef12:	jns    0x1ee9a
   1ef14:	adc    BYTE PTR [ebp-0x71172a16],0x4b
   1ef1b:	lods   eax,DWORD PTR ds:[esi]
   1ef1c:	push   esp
   1ef1d:	sub    al,BYTE PTR [ebp+0x4a2e4ab4]
   1ef23:	fisttp QWORD PTR [edx-0x5532f87e]
   1ef29:	js     0x1eecf
   1ef2b:	mov    esp,DWORD PTR [edi]
   1ef2d:	call   0x163461ec
   1ef32:	jle    0x1ef25
   1ef34:	add    ah,cl
   1ef36:	pop    esp
   1ef37:	add    BYTE PTR [eax],bl
   1ef39:	add    BYTE PTR [ebx],ch
   1ef3b:	add    BYTE PTR [eax+eax*1],bl
   1ef3e:	aaa    
   1ef3f:	add    BYTE PTR [ecx],ah
   1ef41:	add    BYTE PTR [ebx],dl
   1ef43:	add    BYTE PTR [edi],bl
   1ef45:	add    BYTE PTR [edx],cl
   1ef47:	add    BYTE PTR [esi],al
   1ef49:	add    BYTE PTR [esi],dl
   1ef4b:	add    BYTE PTR [edi],ch
   1ef4d:	add    BYTE PTR [ecx+0x0],bh
   1ef50:	push   esi
   1ef51:	add    BYTE PTR [eax],al
   1ef53:	add    BYTE PTR [eax-0x686c405],cl
   1ef59:	dec    esp
   1ef5a:	cmp    eax,0x50b3fbf0
   1ef5f:	xchg   ebp,eax
   1ef60:	add    ebx,eax
   1ef62:	cmp    dh,BYTE PTR [edx]
   1ef64:	dec    ebp
   1ef65:	add    al,0xf
   1ef67:	lahf   
   1ef68:	nop
   1ef69:	in     al,dx
   1ef6a:	xchg   ebp,eax
   1ef6b:	sbb    BYTE PTR [eax],cl
   1ef6d:	loope  0x1ef86
   1ef6f:	into   
   1ef70:	inc    ebx
   1ef71:	outs   dx,BYTE PTR ds:[esi]
   1ef72:	mov    bh,0x4b
   1ef74:	push   0x53818d3d
   1ef79:	repz call 0x38bbcc29
   1ef7f:	push   ds
   1ef80:	test   BYTE PTR [esp+ebp*4+0x33eb0bf9],ah
   1ef87:	cli    
   1ef88:	scas   eax,DWORD PTR es:[edi]
   1ef89:	add    BYTE PTR [eax+eax*1+0x18],bl
   1ef8d:	add    BYTE PTR [ecx],ah
   1ef8f:	add    BYTE PTR [ebx],dl
   1ef91:	add    BYTE PTR [edi],bl
   1ef93:	add    BYTE PTR [edx],cl
   1ef95:	add    BYTE PTR [esi],al
   1ef97:	add    BYTE PTR [ecx],bh
   1ef99:	add    BYTE PTR [ecx+0x0],bh
   1ef9c:	push   esi
   1ef9d:	add    BYTE PTR [eax],al
   1ef9f:	add    BYTE PTR [esi-0x3a],al
   1efa2:	cmp    al,0xbc
   1efa4:	call   0xb5457edf
   1efa9:	fcom   DWORD PTR es:[ebp+ebx*1+0x4e01629c]
   1efb1:	cli    
   1efb2:	inc    ecx
   1efb3:	loop   0x1efd0
   1efb5:	cs in  al,dx
   1efb7:	add    al,0xc9
   1efb9:	mov    BYTE PTR [edx+esi*1+0x24],ch
   1efbd:	shl    al,1
   1efbf:	push   ebx
   1efc0:	in     al,dx
   1efc1:	mov    bh,0xc4
   1efc3:	stos   BYTE PTR es:[edi],al
   1efc4:	(bad)  
   1efc6:	stc    
   1efc7:	mov    cl,0x3
   1efc9:	mov    BYTE PTR [edx+0x6d],al
   1efcc:	mov    bh,0x2d
   1efce:	sbb    ah,BYTE PTR [edx]
   1efd0:	xchg   esi,eax
   1efd1:	int    0xa9
   1efd3:	or     BYTE PTR ds:0x58bfab4d,ah
   1efd9:	mov    WORD PTR [ebx+0x53cc0051],fs
   1efdf:	add    BYTE PTR [ecx+0x0],bh
   1efe2:	jae    0x1efe4
   1efe4:	inc    ebp
   1efe5:	add    BYTE PTR [esi+0x0],dh
   1efe8:	je     0x1efea
   1efea:	inc    ebx
   1efeb:	add    BYTE PTR [eax],al
   1efed:	add    BYTE PTR [eax+ebx*1+0x21],bl
   1eff1:	adc    ebx,DWORD PTR [edi]
   1eff3:	or     al,BYTE PTR [esi]
   1eff5:	cmp    DWORD PTR [eax],eax
   1eff7:	int3   
   1eff8:	test   DWORD PTR [edi+ebp*4-0x64],edi
   1effc:	lock add DWORD PTR [si-0x47],esi
   1f001:	dec    edx
   1f002:	xchg   BYTE PTR [ebp-0xb],dl
   1f005:	push   ebp
   1f006:	xchg   edx,eax
   1f007:	xchg   esp,eax
   1f008:	jp     0x1f029
   1f00a:	shr    BYTE PTR [edx-0x3e7e9713],1
   1f010:	std    
   1f011:	sbb    esi,ebx
   1f013:	jg     0x1f059
   1f015:	das    
   1f016:	popa   
   1f017:	sub    bh,BYTE PTR [eax]
   1f019:	outs   dx,BYTE PTR ds:[esi]
   1f01a:	lea    ecx,[ecx-0x677a7e5e]
   1f020:	mov    ebx,0x2776e3e8
   1f025:	pop    edx
   1f026:	xor    DWORD PTR [edi+eiz*8-0xb],ecx
   1f02a:	mov    ds:0xfed00029,al
   1f02f:	rol    DWORD PTR [eax+ebp*4+0x5f],0x7c
   1f034:	add    ah,cl
   1f036:	pop    esp
   1f037:	add    BYTE PTR [eax],al
   1f039:	add    BYTE PTR [edx+0x0],dh
   1f03c:	jb     0x1f03e
   1f03e:	add    BYTE PTR [eax],al
   1f040:	push   cs
   1f041:	adc    al,BYTE PTR [ecx+0x4f]
   1f044:	xchg   ebp,eax
   1f045:	jmp    0x1f0bd
   1f047:	daa    
   1f048:	jno    0x1f017
   1f04a:	jge    0x1efd4
   1f04c:	ins    DWORD PTR es:[edi],dx
   1f04d:	push   ecx
   1f04e:	dec    ecx
   1f04f:	dec    ecx
   1f050:	js     0x1f055
   1f052:	mov    bl,0x3f
   1f054:	or     DWORD PTR [esi+0x16317680],esi
   1f05a:	cmp    eax,0x7fef22e3
   1f05f:	xchg   esi,eax
   1f060:	mov    al,0x68
   1f062:	add    ah,cl
   1f064:	pop    esp
   1f065:	add    BYTE PTR [ebx+0x63],ah
   1f068:	add    ah,cl
   1f06a:	lahf   
   1f06b:	int    0xf
   1f06d:	and    al,0x5c
   1f06f:	sbb    BYTE PTR [ecx+0x592cb2],dh
   1f075:	sub    DWORD PTR ds:0xa1563449,0x15bdf060
   1f07f:	jb     0x1f03e
   1f081:	push   esp
   1f082:	daa    
   1f083:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1f084:	out    0xd3,eax
   1f086:	in     al,0xbf
   1f088:	scas   al,BYTE PTR es:[edi]
   1f089:	loopne 0x1f010
   1f08b:	into   
   1f08c:	inc    esi
   1f08d:	push   esp
   1f08e:	(bad)  
   1f08f:	jno    0x1f099
   1f091:	jp     0x1f062
   1f093:	mov    ch,0xa7
   1f095:	push   ebx
   1f096:	mov    bl,0xb6
   1f098:	bound  edi,QWORD PTR [esi]
   1f09a:	pushf  
   1f09b:	xor    dl,ah
   1f09d:	(bad)  
   1f09e:	jb     0x1f04e
   1f0a0:	add    ah,cl
   1f0a2:	and    eax,0x5ccc0053
   1f0a7:	add    BYTE PTR [ebx+0x0],dh
   1f0aa:	jns    0x1f0ac
   1f0ac:	jae    0x1f0ae
   1f0ae:	je     0x1f0b0
   1f0b0:	add    BYTE PTR gs:[ebp+0x0],ch
   1f0b4:	jb     0x1f0b6
   1f0b6:	outs   dx,DWORD PTR ds:[esi]
   1f0b7:	add    BYTE PTR [edi+0x0],ch
   1f0ba:	je     0x1f0bc
   1f0bc:	pop    esp
   1f0bd:	add    BYTE PTR [ebx+0x0],dh
   1f0c0:	jns    0x1f0c2
   1f0c2:	jae    0x1f0c4
   1f0c4:	je     0x1f0c6
   1f0c6:	add    BYTE PTR gs:[ebp+0x0],ch
   1f0ca:	xor    eax,DWORD PTR [eax]
   1f0cc:	xor    al,BYTE PTR [eax]
   1f0ce:	pop    esp
   1f0cf:	add    BYTE PTR ds:0x5300,ah
   1f0d5:	add    BYTE PTR [ecx],dh
   1f0d7:	xor    ch,BYTE PTR cs:[esi]
   1f0da:	xor    eax,DWORD PTR [eax]
   1f0dc:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1f0e3:	arpl   WORD PTR [eax+eiz*1+0x6c],si
   1f0e7:	outs   dx,BYTE PTR gs:[esi]
   1f0e9:	addr16 je 0x1f154
   1f0ec:	and    BYTE PTR [ebx+0x68],ah
   1f0ef:	arpl   WORD PTR gs:[ebx+0x0],bp
   1f0f3:	int3   
   1f0f4:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1f0fb:	arpl   WORD PTR [eax+eiz*1+0x64],si
   1f0ff:	popa   
   1f100:	je     0x1f163
   1f102:	and    BYTE PTR [ebx+0x68],ah
   1f105:	arpl   WORD PTR gs:[ebx+0x0],bp
   1f109:	int3   
   1f10a:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1f111:	and    BYTE PTR [ecx+ebp*2+0x73],ah
   1f115:	je     0x1f178
   1f117:	outs   dx,BYTE PTR ds:[esi]
   1f118:	arpl   WORD PTR [ebp+0x20],sp
   1f11b:	je     0x1f18c
   1f11d:	outs   dx,DWORD PTR ds:[esi]
   1f11e:	and    BYTE PTR [esi+0x61],ah
   1f121:	jb     0x1f143
   1f123:	bound  esp,QWORD PTR [ecx+0x63]
   1f126:	imul   eax,DWORD PTR [eax],0x69
   1f129:	outs   dx,BYTE PTR ds:[esi]
   1f12a:	jbe    0x1f18d
   1f12c:	ins    BYTE PTR es:[edi],dx
   1f12d:	imul   esp,DWORD PTR [eax+eiz*1+0x64],0x61747369
   1f135:	outs   dx,BYTE PTR ds:[esi]
   1f136:	arpl   WORD PTR [ebp+0x20],sp
   1f139:	arpl   WORD PTR [edi+0x64],bp
   1f13c:	add    BYTE PTR gs:[ecx+0x6e],ch
   1f140:	jbe    0x1f1a3
   1f142:	ins    BYTE PTR es:[edi],dx
   1f143:	imul   esp,DWORD PTR [eax+eiz*1+0x6c],0x72657469
   1f14b:	popa   
   1f14c:	ins    BYTE PTR es:[edi],dx
   1f14d:	das    
   1f14e:	ins    BYTE PTR es:[edi],dx
   1f14f:	outs   dx,BYTE PTR gs:[esi]
   1f151:	addr16 je 0x1f1bc
   1f154:	and    BYTE PTR [ebx+0x6f],ah
   1f157:	fs add BYTE PTR gs:[ecx+0x6e],ch
   1f15c:	jbe    0x1f1bf
   1f15e:	ins    BYTE PTR es:[edi],dx
   1f15f:	imul   esp,DWORD PTR [eax+eiz*1+0x64],0x61747369
   1f167:	outs   dx,BYTE PTR ds:[esi]
   1f168:	arpl   WORD PTR [ebp+0x73],sp
   1f16b:	and    BYTE PTR [ebx+0x65],dh
   1f16e:	je     0x1f170
   1f170:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1f177:	and    BYTE PTR [ecx+ebp*2+0x74],ch
   1f17b:	gs jb  0x1f1df
   1f17e:	ins    BYTE PTR es:[edi],dx
   1f17f:	das    
   1f180:	ins    BYTE PTR es:[edi],dx
   1f181:	outs   dx,BYTE PTR gs:[esi]
   1f183:	addr16 je 0x1f1ee
   1f186:	jae    0x1f1a8
   1f188:	jae    0x1f1ef
   1f18a:	je     0x1f18c
   1f18c:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1f193:	and    BYTE PTR [edx+0x69],ah
   1f196:	je     0x1f1b8
   1f198:	ins    BYTE PTR es:[edi],dx
   1f199:	outs   dx,BYTE PTR gs:[esi]
   1f19b:	addr16 je 0x1f206
   1f19e:	and    BYTE PTR [edx+0x65],dh
   1f1a1:	jo     0x1f208
   1f1a3:	popa   
   1f1a4:	je     0x1f1a6
   1f1a6:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1f1ad:	and    BYTE PTR [ebx+0x6f],ah
   1f1b0:	fs and BYTE PTR gs:[ebp+eiz*2+0x6e],ch
   1f1b6:	addr16 je 0x1f221
   1f1b9:	jae    0x1f1db
   1f1bb:	jae    0x1f222
   1f1bd:	je     0x1f1bf
   1f1bf:	int3   
   1f1c0:	je     0x1f231
   1f1c2:	outs   dx,DWORD PTR ds:[esi]
   1f1c3:	and    BYTE PTR [ebp+0x61],ch
   1f1c6:	outs   dx,BYTE PTR ds:[esi]
   1f1c7:	jns    0x1f1e9
   1f1c9:	ins    BYTE PTR es:[edi],dx
   1f1ca:	outs   dx,BYTE PTR gs:[esi]
   1f1cc:	addr16 je 0x1f237
   1f1cf:	and    BYTE PTR [edi+0x72],ch
   1f1d2:	and    BYTE PTR [ecx+ebp*2+0x73],ah
   1f1d6:	je     0x1f239
   1f1d8:	outs   dx,BYTE PTR ds:[esi]
   1f1d9:	arpl   WORD PTR [ebp+0x20],sp
   1f1dc:	jae    0x1f257
   1f1de:	ins    DWORD PTR es:[edi],dx
   1f1df:	bound  ebp,QWORD PTR [edi+0x6c]
   1f1e2:	jae    0x1f1e4
   1f1e4:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1f1eb:	and    BYTE PTR [ebx+0x74],dh
   1f1ee:	outs   dx,DWORD PTR ds:[esi]
   1f1ef:	jb     0x1f256
   1f1f1:	and    BYTE PTR fs:[edx+0x6c],ah
   1f1f5:	outs   dx,DWORD PTR ds:[esi]
   1f1f6:	arpl   WORD PTR [ebx+0x20],bp
   1f1f9:	ins    BYTE PTR es:[edi],dx
   1f1fa:	outs   dx,BYTE PTR gs:[esi]
   1f1fc:	addr16 je 0x1f267
   1f1ff:	jae    0x1f201
   1f201:	int3   
   1f202:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1f209:	and    BYTE PTR [edx+0x6c],ah
   1f20c:	outs   dx,DWORD PTR ds:[esi]
   1f20d:	arpl   WORD PTR [ebx+0x20],bp
   1f210:	je     0x1f28b
   1f212:	jo     0x1f279
   1f214:	add    ah,cl
   1f216:	push   0x65646165
   1f21b:	jb     0x1f23d
   1f21d:	arpl   WORD PTR [edx+0x63],si
   1f220:	and    BYTE PTR [ebp+0x69],ch
   1f223:	jae    0x1f292
   1f225:	popa   
   1f226:	je     0x1f28b
   1f228:	push   0x6b6e7500
   1f22d:	outs   dx,BYTE PTR ds:[esi]
   1f22e:	outs   dx,DWORD PTR ds:[esi]
   1f22f:	ja     0x1f29f
   1f231:	and    BYTE PTR [eax+0x65],ch
   1f234:	popa   
   1f235:	fs gs jb 0x1f259
   1f239:	data16 ins BYTE PTR es:[edi],dx
   1f23b:	popa   
   1f23c:	addr16 jae 0x1f25f
   1f23f:	jae    0x1f2a6
   1f241:	je     0x1f243
   1f243:	int3   
   1f244:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1f24b:	arpl   WORD PTR [eax+eiz*1+0x68],si
   1f24f:	gs popa 
   1f251:	fs gs jb 0x1f275
   1f255:	arpl   WORD PTR [eax+0x65],bp
   1f258:	arpl   WORD PTR [ebx+0x0],bp
   1f25b:	int3   
   1f25c:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1f263:	and    BYTE PTR [edi+0x69],dh
   1f266:	outs   dx,BYTE PTR ds:[esi]
   1f267:	outs   dx,DWORD PTR fs:[esi]
   1f269:	ja     0x1f28b
   1f26b:	jae    0x1f2d6
   1f26d:	jp     0x1f2d4
   1f26f:	add    BYTE PTR [ebp+0x6e],dh
   1f272:	imul   ebp,DWORD PTR [esi+0x6f],0x77
   1f276:	outs   dx,BYTE PTR ds:[esi]
   1f277:	and    BYTE PTR [ebx+0x6f],ah
   1f27a:	ins    DWORD PTR es:[edi],dx
   1f27b:	jo     0x1f2ef
   1f27d:	gs jae 0x1f2f3
   1f280:	imul   ebp,DWORD PTR [edi+0x6e],0x74656d20
   1f287:	.byte 0x68
   1f288:	outs   dx,DWORD PTR ds:[esi]
   1f289:	fs
	...

Disassembly of section INIT:

00078a00 <INIT>:
   78a00:	add    BYTE PTR [eax],al
   78a02:	add    BYTE PTR [eax],al
   78a04:	add    BYTE PTR [ecx+0x77b1c],ah
   78a0a:	mov    ecx,0xbb40e64e
   78a0f:	test   eax,eax
   78a11:	je     0x78a17
   78a13:	cmp    eax,ecx
   78a15:	jne    0x78a31
   78a17:	mov    eax,ds:0x1f448
   78a1c:	mov    eax,DWORD PTR [eax]
   78a1e:	xor    eax,0x77b1c
   78a23:	mov    ds:0x77b1c,eax
   78a28:	jne    0x78a31
   78a2a:	mov    eax,ecx
   78a2c:	mov    ds:0x77b1c,eax
   78a31:	not    eax
   78a33:	mov    ds:0x77b20,eax
   78a38:	ret    
   78a39:	mov    ss,ecx
   78a3b:	fs inc ebx
   78a3d:	xor    cl,BYTE PTR [ebx-0x1374aa01]
   78a43:	call   0x78a05
   78a48:	pop    ebp
   78a49:	jmp    0x1929c
   78a4e:	int3   
   78a4f:	int3   
   78a50:	xchg   esp,eax
   78a51:	mov    al,BYTE PTR [esi]
	...
   78a5b:	add    BYTE PTR [edx],dh
   78a5d:	mov    WORD PTR [esi],es
   78a5f:	add    BYTE PTR [eax],cl
   78a61:	hlt    
   78a62:	add    BYTE PTR [eax],al
   78a64:	mov    WORD PTR [edx+0x6],cs
   78a6a:	add    BYTE PTR [eax],al
   78a6c:	add    BYTE PTR [eax],al
   78a6e:	add    BYTE PTR [eax],al
   78a70:	push   esp
   78a71:	mov    WORD PTR [esi],es
   78a73:	add    BYTE PTR [eax],al
   78a75:	hlt    
	...
   78a8a:	add    BYTE PTR [eax],al
   78a8c:	inc    eax
   78a8d:	mov    WORD PTR [esi],es
   78a8f:	add    BYTE PTR [eax],al
   78a91:	add    BYTE PTR [eax],al
   78a93:	add    BYTE PTR [eax],al
   78a95:	mov    eax,DWORD PTR [esi]
   78a97:	add    BYTE PTR [edx],cl
   78a99:	mov    eax,DWORD PTR [esi]
   78a9b:	add    BYTE PTR [ebx+ecx*4],dl
   78a9e:	push   es
   78a9f:	add    BYTE PTR [esi],bl
   78aa1:	mov    eax,DWORD PTR [esi]
   78aa3:	add    BYTE PTR [edx],bh
   78aa5:	mov    eax,DWORD PTR [esi]
   78aa7:	add    BYTE PTR [ebx+ecx*4+0x6],al
   78aab:	add    BYTE PTR [esi-0x75],cl
   78aae:	push   es
   78aaf:	add    BYTE PTR [esi-0x75],bl
   78ab2:	push   es
   78ab3:	add    BYTE PTR [ebx+ecx*4+0x6],dh
   78ab7:	add    BYTE PTR [eax-0x75fff975],al
   78abd:	mov    eax,DWORD PTR [esi]
   78abf:	add    BYTE PTR [edx-0x45fff975],ah
   78ac5:	mov    eax,DWORD PTR [esi]
   78ac7:	add    ah,cl
   78ac9:	mov    eax,DWORD PTR [esi]
   78acb:	add    al,ah
   78acd:	mov    eax,DWORD PTR [esi]
   78acf:	add    BYTE PTR [eax],al
   78ad1:	mov    WORD PTR [esi],es
   78ad3:	add    BYTE PTR [esp+ecx*4],dl
   78ad6:	push   es
   78ad7:	add    BYTE PTR [edx],ah
   78ad9:	mov    WORD PTR [esi],es
   78adb:	add    al,ch
   78add:	mov    al,BYTE PTR [esi]
   78adf:	add    BYTE PTR [esp+ecx*4+0x6],bl
   78ae3:	add    BYTE PTR [eax],al
   78ae5:	add    BYTE PTR [eax],al
   78ae7:	add    BYTE PTR [eax],dh
   78ae9:	add    ecx,DWORD PTR [edi+0x62]
   78aec:	inc    sp
   78aee:	gs jb  0x78b56
   78af1:	data16 gs jb 0x78b5a
   78af5:	outs   dx,BYTE PTR ds:[esi]
   78af6:	arpl   WORD PTR [ebp+0x4f],sp
   78af9:	bound  ebp,QWORD PTR [edx+0x65]
   78afc:	arpl   WORD PTR [eax+eax*1+0x0],si
   78b00:	jnp    0x78b07
   78b02:	pop    edi
   78b03:	popa   
   78b04:	ins    BYTE PTR es:[edi],dx
   78b05:	ins    BYTE PTR es:[edi],dx
   78b06:	ins    DWORD PTR es:[edi],dx
   78b07:	jne    0x78b75
   78b09:	add    BYTE PTR [ecx+0x5],bh
   78b0c:	pop    edi
   78b0d:	popa   
   78b0e:	ins    BYTE PTR es:[edi],dx
   78b0f:	ins    BYTE PTR es:[edi],dx
   78b10:	imul   esi,DWORD PTR fs:[esi+0x0],0x656d05a9
   78b18:	ins    DWORD PTR es:[edi],dx
   78b19:	jae    0x78b80
   78b1b:	je     0x78b1d
   78b1d:	add    BYTE PTR [ecx+0x476d4d02],ah
   78b23:	gs je  0x78b79
   78b26:	jns    0x78b9b
   78b28:	je     0x78b8f
   78b2a:	ins    DWORD PTR es:[edi],dx
   78b2b:	push   edx
   78b2c:	outs   dx,DWORD PTR ds:[esi]
   78b2d:	jne    0x78ba3
   78b2f:	imul   ebp,DWORD PTR [esi+0x65],0x72646441
   78b36:	gs jae 0x78bac
   78b39:	add    bh,al
   78b3b:	add    eax,0x6e736377
   78b40:	arpl   WORD PTR [ecx+0x74],sp
   78b43:	add    BYTE PTR [edi+0x6d656d05],ah
   78b49:	arpl   WORD PTR [eax+0x79],si
   78b4c:	add    BYTE PTR [eax],al
   78b4e:	jne    0x78b50
   78b50:	inc    ebp
   78b51:	js     0x78ba5
   78b53:	popa   
   78b54:	imul   esi,DWORD PTR [ebx+0x65],0x74617453
   78b5b:	jne    0x78bd0
   78b5d:	add    bl,ah
   78b5f:	add    DWORD PTR [ecx+0x6f],ecx
   78b62:	inc    bx
   78b64:	outs   dx,DWORD PTR ds:[esi]
   78b65:	ins    DWORD PTR es:[edi],dx
   78b66:	jo     0x78bd4
   78b68:	gs je  0x78bd0
   78b6b:	push   edx
   78b6c:	gs jno 0x78be4
   78b6f:	gs jae 0x78be6
   78b72:	add    BYTE PTR [eax],al
   78b74:	mov    ecx,0x70777305
   78b79:	jb     0x78be4
   78b7b:	outs   dx,BYTE PTR ds:[esi]
   78b7c:	je     0x78be4
   78b7e:	add    BYTE PTR [eax],al
   78b80:	lods   al,BYTE PTR ds:[esi]
   78b81:	add    eax,0x69727073
   78b86:	outs   dx,BYTE PTR ds:[esi]
   78b87:	je     0x78bef
   78b89:	add    BYTE PTR [ecx+0x0],al
   78b8c:	inc    ebp
   78b8d:	js     0x78bd0
   78b8f:	ins    BYTE PTR es:[edi],dx
   78b90:	ins    BYTE PTR es:[edi],dx
   78b91:	outs   dx,DWORD PTR ds:[esi]
   78b92:	arpl   WORD PTR [ecx+0x74],sp
   78b95:	gs push eax
   78b97:	outs   dx,DWORD PTR ds:[esi]
   78b98:	outs   dx,DWORD PTR ds:[esi]
   78b99:	ins    BYTE PTR es:[edi],dx
   78b9a:	push   edi
   78b9b:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0x6d006761
   78ba3:	add    cl,BYTE PTR [ebx+0x65]
   78ba6:	push   edi
   78ba7:	popa   
   78ba8:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6e695372
   78bb0:	ins    BYTE PTR es:[di],dx
   78bb2:	gs dec edi
   78bb4:	bound  ebp,QWORD PTR [edx+0x65]
   78bb7:	arpl   WORD PTR [eax+eax*1+0x42],si
   78bbb:	add    cl,BYTE PTR [ebx+0x65]
   78bbe:	push   edx
   78bbf:	gs ins BYTE PTR es:[edi],dx
   78bc1:	gs popa 
   78bc3:	jae    0x78c2a
   78bc5:	dec    ebp
   78bc6:	jne    0x78c3c
   78bc8:	gs js  0x78bcb
   78bcb:	add    BYTE PTR [ebx],bl
   78bcd:	add    cl,BYTE PTR [ebx+0x65]
   78bd0:	dec    ecx
   78bd1:	outs   dx,BYTE PTR ds:[esi]
   78bd2:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
   78bda:	dec    ebp
   78bdb:	jne    0x78c51
   78bdd:	gs js  0x78be0
   78be0:	inc    edx
   78be1:	add    BYTE PTR [ebp+0x78],al
   78be4:	inc    ecx
   78be5:	ins    BYTE PTR es:[edi],dx
   78be6:	ins    BYTE PTR es:[edi],dx
   78be7:	outs   dx,DWORD PTR ds:[esi]
   78be8:	arpl   WORD PTR [ecx+0x74],sp
   78beb:	gs push eax
   78bed:	outs   dx,DWORD PTR ds:[esi]
   78bee:	outs   dx,DWORD PTR ds:[esi]
   78bef:	ins    BYTE PTR es:[edi],dx
   78bf0:	push   edi
   78bf1:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0x72506761
   78bf9:	imul   ebp,DWORD PTR [edi+0x72],0x797469
   78c00:	dec    esi
   78c01:	add    BYTE PTR [ebp+0x78],al
   78c04:	inc    esi
   78c05:	jb     0x78c6c
   78c07:	gs push eax
   78c09:	outs   dx,DWORD PTR ds:[esi]
   78c0a:	outs   dx,DWORD PTR ds:[esi]
   78c0b:	ins    BYTE PTR es:[edi],dx
   78c0c:	push   edi
   78c0d:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0x66006761
   78c15:	add    cl,BYTE PTR [ebx+0x65]
   78c18:	push   esp
   78c19:	imul   esp,DWORD PTR [ebx+0x6b],0x6e756f43
   78c20:	je     0x78c22
   78c22:	test   BYTE PTR [ecx],0x4b
   78c25:	gs inc edx
   78c27:	jne    0x78c90
   78c29:	inc    ebx
   78c2a:	push   0x456b6365
   78c2f:	js     0x78c31
   78c31:	add    BYTE PTR [esi+0x74],ch
   78c34:	outs   dx,DWORD PTR ds:[esi]
   78c35:	jae    0x78ca2
   78c37:	jb     0x78ca7
   78c39:	ins    BYTE PTR es:[edi],dx
   78c3a:	cs gs js 0x78ca3
   78c3e:	add    BYTE PTR [eax],al
   78c40:	inc    eax
   78c41:	add    BYTE PTR [ebx+0x65],cl
   78c44:	inc    edi
   78c45:	gs je  0x78c8b
   78c48:	jne    0x78cbc
   78c4a:	jb     0x78cb1
   78c4c:	outs   dx,BYTE PTR ds:[esi]
   78c4d:	je     0x78c98
   78c4f:	jb     0x78cc2
   78c51:	ins    BYTE PTR es:[edi],dx
   78c52:	add    BYTE PTR [eax],al
   78c54:	dec    eax
   78c55:	inc    ecx
   78c56:	dec    esp
   78c57:	cs fs ins BYTE PTR es:[edi],dx
   78c5a:	ins    BYTE PTR es:[edi],dx
   78c5b:	add    BYTE PTR [eax+0x6c745204],ah
   78c61:	push   ebp
   78c62:	outs   dx,BYTE PTR ds:[esi]
   78c63:	ja     0x78cce
   78c65:	outs   dx,BYTE PTR ds:[esi]
   78c66:	fs
	...
